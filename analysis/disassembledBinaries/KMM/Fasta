../../../SkantzBinaries/KMM/fastaKmm:
(__TEXT,__text) section
_kfun:kotlinx.cinterop.NativePlacement#alloc(kotlin.Int;kotlin.Int){}kotlinx.cinterop.NativePointed:
0000000000005358	stp	x22, x21, [sp, #-0x30]!
000000000000535c	stp	x20, x19, [sp, #0x10]
0000000000005360	stp	x29, x30, [sp, #0x20]
0000000000005364	add	x29, sp, #0x20
0000000000005368	mov	x19, x2
000000000000536c	mov	x21, x1
0000000000005370	mov	x20, x0
0000000000005374	adr	x8, #0x8ef15
0000000000005378	nop
000000000000537c	ldarb	w8, [x8]
0000000000005380	tbz	w8, #0x0, 0x5388
0000000000005384	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000005388	ldr	x8, [x20]
000000000000538c	and	x8, x8, #0xfffffffffffffffc
0000000000005390	ldr	x8, [x8]
0000000000005394	ldr	w9, [x8, #0x3c]
0000000000005398	ldr	x8, [x8, #0x40]
000000000000539c	tbnz	w9, #0x1f, 0x53a8
00000000000053a0	and	x9, x9, #0x10
00000000000053a4	b	0x542c
00000000000053a8	neg	w10, w9
00000000000053ac	mvn	w9, w9
00000000000053b0	cmp	w10, #0x9
00000000000053b4	b.ge	0x53ec
00000000000053b8	cmp	w10, #0x2
00000000000053bc	b.lt	0x5420
00000000000053c0	mov	x10, #0x0
00000000000053c4	mov	x11, x8
00000000000053c8	ldr	w12, [x11]
00000000000053cc	cmp	w12, #0xf
00000000000053d0	b.gt	0x5428
00000000000053d4	add	x10, x10, #0x1
00000000000053d8	add	x11, x11, #0x10
00000000000053dc	cmp	x9, x10
00000000000053e0	b.ne	0x53c8
00000000000053e4	mov	x10, x9
00000000000053e8	b	0x5428
00000000000053ec	mov	w10, #0x0
00000000000053f0	add	w11, w9, w10
00000000000053f4	cmp	w11, #0x0
00000000000053f8	cinc	w11, w11, lt
00000000000053fc	asr	w11, w11, #1
0000000000005400	sbfiz	x12, x11, #4, #32
0000000000005404	ldr	w12, [x8, x12]
0000000000005408	cmp	w12, #0x10
000000000000540c	csinc	w10, w10, w11, ge
0000000000005410	csel	w9, w9, w11, lt
0000000000005414	cmp	w10, w9
0000000000005418	b.lt	0x53f0
000000000000541c	b	0x5428
0000000000005420	mov	w10, #0x0
0000000000005424	b	0x5428
0000000000005428	sxtw	x9, w10
000000000000542c	sxtw	x1, w21
0000000000005430	add	x8, x8, x9, lsl #4
0000000000005434	ldr	x8, [x8, #0x8]
0000000000005438	ldr	x3, [x8, #0x8]
000000000000543c	mov	x0, x20
0000000000005440	mov	x2, x19
0000000000005444	ldp	x29, x30, [sp, #0x20]
0000000000005448	ldp	x20, x19, [sp, #0x10]
000000000000544c	ldp	x22, x21, [sp], #0x30
0000000000005450	br	x3
_kfun:kotlinx.cinterop.ArenaBase#alloc(kotlin.Long;kotlin.Int){}kotlinx.cinterop.NativePointed:
0000000000005454	stp	x22, x21, [sp, #-0x30]!
0000000000005458	stp	x20, x19, [sp, #0x10]
000000000000545c	stp	x29, x30, [sp, #0x20]
0000000000005460	add	x29, sp, #0x20
0000000000005464	mov	x20, x2
0000000000005468	mov	x21, x1
000000000000546c	mov	x19, x0
0000000000005470	adr	x8, #0x8ee19
0000000000005474	nop
0000000000005478	ldarb	w8, [x8]
000000000000547c	tbz	w8, #0x0, 0x5484
0000000000005480	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000005484	cmp	w20, #0x8
0000000000005488	mov	w8, #0x8
000000000000548c	csel	w20, w20, w8, gt
0000000000005490	ldr	x0, [x19, #0x10]
0000000000005494	add	x1, x20, x21
0000000000005498	ldr	x8, [x0]
000000000000549c	and	x8, x8, #0xfffffffffffffffc
00000000000054a0	ldr	x8, [x8]
00000000000054a4	ldr	w9, [x8, #0x3c]
00000000000054a8	ldr	x8, [x8, #0x40]
00000000000054ac	tbnz	w9, #0x1f, 0x54b8
00000000000054b0	and	x9, x9, #0x10
00000000000054b4	b	0x553c
00000000000054b8	neg	w10, w9
00000000000054bc	mvn	w9, w9
00000000000054c0	cmp	w10, #0x9
00000000000054c4	b.ge	0x54fc
00000000000054c8	cmp	w10, #0x2
00000000000054cc	b.lt	0x5530
00000000000054d0	mov	x10, #0x0
00000000000054d4	mov	x11, x8
00000000000054d8	ldr	w12, [x11]
00000000000054dc	cmp	w12, #0xf
00000000000054e0	b.gt	0x5538
00000000000054e4	add	x10, x10, #0x1
00000000000054e8	add	x11, x11, #0x10
00000000000054ec	cmp	x9, x10
00000000000054f0	b.ne	0x54d8
00000000000054f4	mov	x10, x9
00000000000054f8	b	0x5538
00000000000054fc	mov	w10, #0x0
0000000000005500	add	w11, w9, w10
0000000000005504	cmp	w11, #0x0
0000000000005508	cinc	w11, w11, lt
000000000000550c	asr	w11, w11, #1
0000000000005510	sbfiz	x12, x11, #4, #32
0000000000005514	ldr	w12, [x8, x12]
0000000000005518	cmp	w12, #0x10
000000000000551c	csinc	w10, w10, w11, ge
0000000000005520	csel	w9, w9, w11, lt
0000000000005524	cmp	w10, w9
0000000000005528	b.lt	0x5500
000000000000552c	b	0x5538
0000000000005530	mov	w10, #0x0
0000000000005534	b	0x5538
0000000000005538	sxtw	x9, w10
000000000000553c	add	x8, x8, x9, lsl #4
0000000000005540	ldr	x8, [x8, #0x8]
0000000000005544	ldr	x8, [x8, #0x8]
0000000000005548	mov	x2, x20
000000000000554c	blr	x8
0000000000005550	ldr	x8, [x19, #0x18]
0000000000005554	str	x8, [x0]
0000000000005558	str	x0, [x19, #0x18]
000000000000555c	adds	x0, x0, x20
0000000000005560	b.eq	0x5574
0000000000005564	ldp	x29, x30, [sp, #0x20]
0000000000005568	ldp	x20, x19, [sp, #0x10]
000000000000556c	ldp	x22, x21, [sp], #0x30
0000000000005570	ret
0000000000005574	bl	_ThrowNullPointerException
_kfun:kotlinx.cinterop.ArenaBase#clearImpl(){}:
0000000000005578	sub	sp, sp, #0x70
000000000000557c	stp	x24, x23, [sp, #0x30]
0000000000005580	stp	x22, x21, [sp, #0x40]
0000000000005584	stp	x20, x19, [sp, #0x50]
0000000000005588	stp	x29, x30, [sp, #0x60]
000000000000558c	add	x29, sp, #0x60
0000000000005590	mov	x19, x0
0000000000005594	adr	x21, #0x8ecf5
0000000000005598	nop
000000000000559c	ldarb	w8, [x21]
00000000000055a0	tbz	w8, #0x0, 0x55a8
00000000000055a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000055a8	movi.16b	v0, #0x0
00000000000055ac	stp	q0, q0, [sp]
00000000000055b0	str	xzr, [sp, #0x20]
00000000000055b4	mov	x8, sp
00000000000055b8	adrp	x20, 117 ; 0x7a000
00000000000055bc	add	x20, x20, #0x2c0
00000000000055c0	ldr	x22, [x20]
00000000000055c4	mov	x0, x20
00000000000055c8	blr	x22
00000000000055cc	ldr	x9, [x0]
00000000000055d0	ldr	x10, [x9, #0x110]
00000000000055d4	str	x8, [x9, #0x110]
00000000000055d8	mov	x9, #0x500000000
00000000000055dc	stp	x10, x9, [sp, #0x8]
00000000000055e0	ldr	x0, [x19, #0x8]
00000000000055e4	str	x0, [sp, #0x18]
00000000000055e8	cbz	x0, 0x56ac
00000000000055ec	add	x1, x8, #0x20
00000000000055f0	ldr	x8, [x0]
00000000000055f4	and	x8, x8, #0xfffffffffffffffc
00000000000055f8	ldr	x8, [x8]
00000000000055fc	ldr	w9, [x8, #0x3c]
0000000000005600	ldr	x8, [x8, #0x40]
0000000000005604	tbnz	w9, #0x1f, 0x5614
0000000000005608	mov	w10, #0x59
000000000000560c	and	x9, x9, x10
0000000000005610	b	0x5698
0000000000005614	neg	w10, w9
0000000000005618	mvn	w9, w9
000000000000561c	cmp	w10, #0x9
0000000000005620	b.ge	0x5658
0000000000005624	cmp	w10, #0x2
0000000000005628	b.lt	0x568c
000000000000562c	mov	x10, #0x0
0000000000005630	mov	x11, x8
0000000000005634	ldr	w12, [x11]
0000000000005638	cmp	w12, #0x58
000000000000563c	b.gt	0x5694
0000000000005640	add	x10, x10, #0x1
0000000000005644	add	x11, x11, #0x10
0000000000005648	cmp	x9, x10
000000000000564c	b.ne	0x5634
0000000000005650	mov	x10, x9
0000000000005654	b	0x5694
0000000000005658	mov	w10, #0x0
000000000000565c	add	w11, w9, w10
0000000000005660	cmp	w11, #0x0
0000000000005664	cinc	w11, w11, lt
0000000000005668	asr	w11, w11, #1
000000000000566c	sbfiz	x12, x11, #4, #32
0000000000005670	ldr	w12, [x8, x12]
0000000000005674	cmp	w12, #0x59
0000000000005678	csinc	w10, w10, w11, ge
000000000000567c	csel	w9, w9, w11, lt
0000000000005680	cmp	w10, w9
0000000000005684	b.lt	0x565c
0000000000005688	b	0x5694
000000000000568c	mov	w10, #0x0
0000000000005690	b	0x5694
0000000000005694	sxtw	x9, w10
0000000000005698	add	x8, x8, x9, lsl #4
000000000000569c	ldr	x8, [x8, #0x8]
00000000000056a0	ldr	x8, [x8]
00000000000056a4	blr	x8
00000000000056a8	str	xzr, [x19, #0x8]
00000000000056ac	mov	x0, x20
00000000000056b0	blr	x22
00000000000056b4	ldr	x8, [x0]
00000000000056b8	ldr	x9, [sp, #0x8]
00000000000056bc	str	x9, [x8, #0x110]
00000000000056c0	ldr	x20, [x19, #0x18]
00000000000056c4	mov	w22, #0x9
00000000000056c8	b	0x5708
00000000000056cc	ldr	x23, [x20]
00000000000056d0	ldr	x0, [x19, #0x10]
00000000000056d4	ldr	x8, [x0]
00000000000056d8	and	x8, x8, #0xfffffffffffffffc
00000000000056dc	ldr	x8, [x8]
00000000000056e0	ldr	w9, [x8, #0x3c]
00000000000056e4	ldr	x8, [x8, #0x40]
00000000000056e8	tbnz	w9, #0x1f, 0x571c
00000000000056ec	and	x9, x9, x22
00000000000056f0	add	x8, x8, x9, lsl #4
00000000000056f4	ldr	x8, [x8, #0x8]
00000000000056f8	ldr	x8, [x8]
00000000000056fc	mov	x1, x20
0000000000005700	blr	x8
0000000000005704	mov	x20, x23
0000000000005708	cbz	x20, 0x57ac
000000000000570c	ldarb	w8, [x21]
0000000000005710	tbz	w8, #0x0, 0x56cc
0000000000005714	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000005718	b	0x56cc
000000000000571c	neg	w10, w9
0000000000005720	mvn	w9, w9
0000000000005724	cmp	w10, #0x9
0000000000005728	b.ge	0x5764
000000000000572c	cmp	w10, #0x2
0000000000005730	b.lt	0x5798
0000000000005734	mov	x10, #0x0
0000000000005738	mov	x11, x8
000000000000573c	ldr	w12, [x11]
0000000000005740	cmp	w12, #0x8
0000000000005744	b.gt	0x57a4
0000000000005748	add	x10, x10, #0x1
000000000000574c	add	x11, x11, #0x10
0000000000005750	cmp	x9, x10
0000000000005754	b.ne	0x573c
0000000000005758	mov	x10, x9
000000000000575c	sxtw	x9, w10
0000000000005760	b	0x56f0
0000000000005764	mov	w10, #0x0
0000000000005768	add	w11, w9, w10
000000000000576c	cmp	w11, #0x0
0000000000005770	cinc	w11, w11, lt
0000000000005774	asr	w11, w11, #1
0000000000005778	sbfiz	x12, x11, #4, #32
000000000000577c	ldr	w12, [x8, x12]
0000000000005780	cmp	w12, #0x9
0000000000005784	csinc	w10, w10, w11, ge
0000000000005788	csel	w9, w9, w11, lt
000000000000578c	cmp	w10, w9
0000000000005790	b.lt	0x5768
0000000000005794	b	0x57a4
0000000000005798	mov	w10, #0x0
000000000000579c	sxtw	x9, w10
00000000000057a0	b	0x56f0
00000000000057a4	sxtw	x9, w10
00000000000057a8	b	0x56f0
00000000000057ac	ldp	x29, x30, [sp, #0x60]
00000000000057b0	ldp	x20, x19, [sp, #0x50]
00000000000057b4	ldp	x22, x21, [sp, #0x40]
00000000000057b8	ldp	x24, x23, [sp, #0x30]
00000000000057bc	add	sp, sp, #0x70
00000000000057c0	ret
_kfun:kotlinx.cinterop.nativeHeap#alloc(kotlin.Long;kotlin.Int){}kotlinx.cinterop.NativePointed:
00000000000057c4	sub	sp, sp, #0x60
00000000000057c8	stp	x22, x21, [sp, #0x30]
00000000000057cc	stp	x20, x19, [sp, #0x40]
00000000000057d0	stp	x29, x30, [sp, #0x50]
00000000000057d4	add	x29, sp, #0x50
00000000000057d8	mov	x21, x2
00000000000057dc	mov	x20, x1
00000000000057e0	adr	x8, #0x8eaa9
00000000000057e4	nop
00000000000057e8	ldarb	w8, [x8]
00000000000057ec	tbz	w8, #0x0, 0x57f4
00000000000057f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000057f4	movi.16b	v0, #0x0
00000000000057f8	stp	q0, q0, [sp]
00000000000057fc	adrp	x19, 117 ; 0x7a000
0000000000005800	add	x19, x19, #0x2c0
0000000000005804	ldr	x22, [x19]
0000000000005808	mov	x0, x19
000000000000580c	blr	x22
0000000000005810	ldr	x8, [x0]
0000000000005814	ldr	x9, [x8, #0x110]
0000000000005818	mov	x10, sp
000000000000581c	str	x10, [x8, #0x110]
0000000000005820	mov	x8, #0x400000000
0000000000005824	stp	x9, x8, [sp, #0x8]
0000000000005828	tbnz	x20, #0x3f, 0x58c8
000000000000582c	sxtw	x8, w21
0000000000005830	add	x9, x20, x8
0000000000005834	sub	x9, x9, #0x1
0000000000005838	neg	x10, x8
000000000000583c	and	x20, x9, x10
0000000000005840	cmp	w21, #0x1
0000000000005844	b.ne	0x5858
0000000000005848	mov	x0, x20
000000000000584c	bl	0x55494 ; symbol stub for: _malloc
0000000000005850	mov	x21, x0
0000000000005854	b	0x5880
0000000000005858	sub	x9, x8, #0x1
000000000000585c	tst	x8, x9
0000000000005860	ccmp	w21, #0x8, #0x2, eq
0000000000005864	mov	w9, #0x8
0000000000005868	csel	x1, x9, x8, lo
000000000000586c	add	x0, sp, #0x28
0000000000005870	mov	x2, x20
0000000000005874	bl	0x555fc ; symbol stub for: _posix_memalign
0000000000005878	cbnz	w0, 0x58bc
000000000000587c	ldr	x21, [sp, #0x28]
0000000000005880	mov	x0, x21
0000000000005884	mov	x1, x20
0000000000005888	bl	0x553c8 ; symbol stub for: _bzero
000000000000588c	cbz	x21, 0x58c8
0000000000005890	mov	x0, x19
0000000000005894	blr	x22
0000000000005898	ldr	x8, [x0]
000000000000589c	ldr	x9, [sp, #0x8]
00000000000058a0	str	x9, [x8, #0x110]
00000000000058a4	mov	x0, x21
00000000000058a8	ldp	x29, x30, [sp, #0x50]
00000000000058ac	ldp	x20, x19, [sp, #0x40]
00000000000058b0	ldp	x22, x21, [sp, #0x30]
00000000000058b4	add	sp, sp, #0x60
00000000000058b8	ret
00000000000058bc	mov	x0, #0x0
00000000000058c0	mov	x1, x20
00000000000058c4	bl	0x553c8 ; symbol stub for: _bzero
00000000000058c8	mov	x0, x19
00000000000058cc	blr	x22
00000000000058d0	ldr	x8, [x0]
00000000000058d4	ldr	x8, [x8, #0x118]
00000000000058d8	add	x0, x8, #0x70
00000000000058dc	mov	w1, #0x38
00000000000058e0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000058e4	mov	x19, x0
00000000000058e8	adr	x8, #0x5bff8
00000000000058ec	nop
00000000000058f0	str	x8, [x19, #0x10]!
00000000000058f4	stur	xzr, [x19, #-0x8]
00000000000058f8	str	x19, [sp, #0x18]
00000000000058fc	adr	x1, #0x685f4
0000000000005900	nop
0000000000005904	mov	x0, x19
0000000000005908	bl	"_kfun:kotlin.OutOfMemoryError#<init>(kotlin.String?){}"
000000000000590c	mov	x0, x19
0000000000005910	bl	_ThrowException
0000000000005914	bl	___clang_call_terminate
_kfun:kotlinx.cinterop.nativeHeap#free(kotlin.native.internal.NativePtr){}:
0000000000005918	stp	x20, x19, [sp, #-0x20]!
000000000000591c	stp	x29, x30, [sp, #0x10]
0000000000005920	add	x29, sp, #0x10
0000000000005924	mov	x19, x1
0000000000005928	adr	x8, #0x8e961
000000000000592c	nop
0000000000005930	ldarb	w8, [x8]
0000000000005934	tbz	w8, #0x0, 0x593c
0000000000005938	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000593c	mov	x0, x19
0000000000005940	ldp	x29, x30, [sp, #0x10]
0000000000005944	ldp	x20, x19, [sp], #0x20
0000000000005948	b	0x55458 ; symbol stub for: _free
_interpretObjCPointer:
000000000000594c	sub	sp, sp, #0x60
0000000000005950	stp	x24, x23, [sp, #0x20]
0000000000005954	stp	x22, x21, [sp, #0x30]
0000000000005958	stp	x20, x19, [sp, #0x40]
000000000000595c	stp	x29, x30, [sp, #0x50]
0000000000005960	add	x29, sp, #0x50
0000000000005964	mov	x20, x1
0000000000005968	mov	x21, x0
000000000000596c	movi.16b	v0, #0x0
0000000000005970	stp	q0, q0, [sp]
0000000000005974	mov	x23, sp
0000000000005978	adrp	x19, 117 ; 0x7a000
000000000000597c	add	x19, x19, #0x2c0
0000000000005980	ldr	x22, [x19]
0000000000005984	mov	x0, x19
0000000000005988	blr	x22
000000000000598c	ldr	x8, [x0]
0000000000005990	ldr	x9, [x8, #0x110]
0000000000005994	str	x23, [x8, #0x110]
0000000000005998	mov	x8, #0x400000000
000000000000599c	stp	x9, x8, [sp, #0x8]
00000000000059a0	adr	x8, #0x8e8e9
00000000000059a4	nop
00000000000059a8	ldarb	w8, [x8]
00000000000059ac	tbz	w8, #0x0, 0x59b4
00000000000059b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000059b4	cbz	x21, 0x5a08
00000000000059b8	add	x2, x23, #0x18
00000000000059bc	nop
00000000000059c0	ldr	x1, #0x8eb18
00000000000059c4	mov	x0, x21
00000000000059c8	bl	0x55584 ; Objc message: _objc_msgSend
00000000000059cc	mov	x8, x0
00000000000059d0	cbz	x0, 0x5a0c
00000000000059d4	str	x8, [x20]
00000000000059d8	mov	x0, x19
00000000000059dc	blr	x22
00000000000059e0	ldr	x9, [x0]
00000000000059e4	ldr	x10, [sp, #0x8]
00000000000059e8	str	x10, [x9, #0x110]
00000000000059ec	mov	x0, x8
00000000000059f0	ldp	x29, x30, [sp, #0x50]
00000000000059f4	ldp	x20, x19, [sp, #0x40]
00000000000059f8	ldp	x22, x21, [sp, #0x30]
00000000000059fc	ldp	x24, x23, [sp, #0x20]
0000000000005a00	add	sp, sp, #0x60
0000000000005a04	ret
0000000000005a08	str	xzr, [sp, #0x18]
0000000000005a0c	bl	_ThrowNullPointerException
0000000000005a10	brk	#0x1
0000000000005a14	bl	___clang_call_terminate
0000000000005a18	mov	x1, x0
0000000000005a1c	mov	x0, x19
0000000000005a20	blr	x22
0000000000005a24	ldr	x8, [x0]
0000000000005a28	ldr	x9, [sp, #0x8]
0000000000005a2c	str	x9, [x8, #0x110]
0000000000005a30	mov	x0, x1
0000000000005a34	bl	0x55194 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.collections#copyInto__at__kotlin.Array<out|0:0>(kotlin.Array<0:0>;kotlin.Int;kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0>:
0000000000005a38	stp	x22, x21, [sp, #-0x30]!
0000000000005a3c	stp	x20, x19, [sp, #0x10]
0000000000005a40	stp	x29, x30, [sp, #0x20]
0000000000005a44	add	x29, sp, #0x20
0000000000005a48	mov	x20, x3
0000000000005a4c	mov	x22, x2
0000000000005a50	mov	x19, x1
0000000000005a54	mov	x21, x0
0000000000005a58	adr	x8, #0x8e831
0000000000005a5c	nop
0000000000005a60	ldarb	w8, [x8]
0000000000005a64	tbz	w8, #0x0, 0x5a6c
0000000000005a68	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000005a6c	ldr	x8, [x21]
0000000000005a70	and	x8, x8, #0xfffffffffffffffc
0000000000005a74	ldr	x8, [x8]
0000000000005a78	ldr	w8, [x8, #0x5c]
0000000000005a7c	cmp	w8, #0x49
0000000000005a80	b.ne	0x5b5c
0000000000005a84	ldr	x8, [x19]
0000000000005a88	and	x8, x8, #0xfffffffffffffffc
0000000000005a8c	ldr	x8, [x8]
0000000000005a90	ldr	w8, [x8, #0x5c]
0000000000005a94	cmp	w8, #0x49
0000000000005a98	b.ne	0x5b6c
0000000000005a9c	tbnz	w22, #0x1f, 0x5b58
0000000000005aa0	ldr	w8, [x21, #0x8]
0000000000005aa4	cmp	w8, w22
0000000000005aa8	b.lo	0x5b58
0000000000005aac	ldr	w8, [x19, #0x8]
0000000000005ab0	cmp	w8, w22
0000000000005ab4	b.lo	0x5b58
0000000000005ab8	ldr	xzr, [x19]
0000000000005abc	cmp	w22, #0x1
0000000000005ac0	b.lt	0x5b20
0000000000005ac4	mov	w8, w22
0000000000005ac8	cmp	w22, #0x1
0000000000005acc	b.eq	0x5af8
0000000000005ad0	add	x9, x19, #0x10
0000000000005ad4	add	x10, x21, #0x10
0000000000005ad8	lsl	x11, x8, #3
0000000000005adc	add	x11, x11, #0x10
0000000000005ae0	add	x12, x21, x11
0000000000005ae4	cmp	x9, x12
0000000000005ae8	b.hs	0x5b34
0000000000005aec	add	x11, x19, x11
0000000000005af0	cmp	x10, x11
0000000000005af4	b.hs	0x5b34
0000000000005af8	mov	x11, #0x0
0000000000005afc	sub	x8, x8, x11
0000000000005b00	lsl	x9, x11, #3
0000000000005b04	add	x10, x9, #0x10
0000000000005b08	add	x9, x21, x10
0000000000005b0c	add	x10, x19, x10
0000000000005b10	ldr	x11, [x9], #0x8
0000000000005b14	str	x11, [x10], #0x8
0000000000005b18	subs	x8, x8, #0x1
0000000000005b1c	b.ne	0x5b10
0000000000005b20	str	x19, [x20]
0000000000005b24	ldp	x29, x30, [sp, #0x20]
0000000000005b28	ldp	x20, x19, [sp, #0x10]
0000000000005b2c	ldp	x22, x21, [sp], #0x30
0000000000005b30	ret
0000000000005b34	and	x11, x8, #0xfffffffe
0000000000005b38	mov	x12, x11
0000000000005b3c	ldr	q0, [x10], #0x10
0000000000005b40	str	q0, [x9], #0x10
0000000000005b44	subs	x12, x12, #0x2
0000000000005b48	b.ne	0x5b3c
0000000000005b4c	cmp	x11, x8
0000000000005b50	b.eq	0x5b20
0000000000005b54	b	0x5afc
0000000000005b58	bl	_ThrowArrayIndexOutOfBoundsException
0000000000005b5c	adr	x1, #0x5b024
0000000000005b60	nop
0000000000005b64	mov	x0, x21
0000000000005b68	bl	_ThrowClassCastException
0000000000005b6c	adr	x1, #0x5b014
0000000000005b70	nop
0000000000005b74	mov	x0, x19
0000000000005b78	bl	_ThrowClassCastException
_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0>:
0000000000005b7c	sub	sp, sp, #0xc0
0000000000005b80	stp	x24, x23, [sp, #0x80]
0000000000005b84	stp	x22, x21, [sp, #0x90]
0000000000005b88	stp	x20, x19, [sp, #0xa0]
0000000000005b8c	stp	x29, x30, [sp, #0xb0]
0000000000005b90	add	x29, sp, #0xb0
0000000000005b94	mov	x20, x2
0000000000005b98	mov	x19, x1
0000000000005b9c	mov	x21, x0
0000000000005ba0	movi.16b	v0, #0x0
0000000000005ba4	stp	q0, q0, [sp, #0x20]
0000000000005ba8	stp	q0, q0, [sp, #0x60]
0000000000005bac	stp	q0, q0, [sp, #0x40]
0000000000005bb0	stp	xzr, xzr, [sp, #0x10]
0000000000005bb4	adr	x8, #0x5efdc
0000000000005bb8	nop
0000000000005bbc	orr	x8, x8, #0x3
0000000000005bc0	str	x8, [sp, #0x8]
0000000000005bc4	adrp	x0, 117 ; 0x7a000
0000000000005bc8	add	x0, x0, #0x2c0
0000000000005bcc	ldr	x8, [x0]
0000000000005bd0	blr	x8
0000000000005bd4	ldr	x23, [x0]
0000000000005bd8	ldr	x8, [x23, #0x110]
0000000000005bdc	add	x9, sp, #0x20
0000000000005be0	str	x9, [x23, #0x110]
0000000000005be4	mov	x9, #0xc00000000
0000000000005be8	stp	x8, x9, [sp, #0x28]
0000000000005bec	adr	x8, #0x8e69d
0000000000005bf0	nop
0000000000005bf4	ldarb	w8, [x8]
0000000000005bf8	tbz	w8, #0x0, 0x5c00
0000000000005bfc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000005c00	tbnz	w19, #0x1f, 0x5c84
0000000000005c04	ldr	x8, [x23, #0x118]
0000000000005c08	mov	w9, w19
0000000000005c0c	lsl	x9, x9, #3
0000000000005c10	add	x9, x9, #0x1f
0000000000005c14	and	x1, x9, #0xffffffff8
0000000000005c18	add	x0, x8, #0x70
0000000000005c1c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000005c20	mov	x22, x0
0000000000005c24	stp	xzr, xzr, [x22, #0x10]!
0000000000005c28	adr	x8, #0x5af58
0000000000005c2c	nop
0000000000005c30	stp	xzr, x8, [x22, #-0x8]
0000000000005c34	str	w19, [x22, #0x8]
0000000000005c38	str	x22, [sp, #0x70]
0000000000005c3c	ldr	w8, [x21, #0x8]
0000000000005c40	cmp	w8, w19
0000000000005c44	csel	w2, w8, w19, lt
0000000000005c48	add	x8, sp, #0x20
0000000000005c4c	add	x3, x8, #0x58
0000000000005c50	mov	x0, x21
0000000000005c54	mov	x1, x22
0000000000005c58	bl	"_kfun:kotlin.collections#copyInto__at__kotlin.Array<out|0:0>(kotlin.Array<0:0>;kotlin.Int;kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0>"
0000000000005c5c	str	x22, [x20]
0000000000005c60	ldr	x8, [sp, #0x28]
0000000000005c64	str	x8, [x23, #0x110]
0000000000005c68	mov	x0, x22
0000000000005c6c	ldp	x29, x30, [sp, #0xb0]
0000000000005c70	ldp	x20, x19, [sp, #0xa0]
0000000000005c74	ldp	x22, x21, [sp, #0x90]
0000000000005c78	ldp	x24, x23, [sp, #0x80]
0000000000005c7c	add	sp, sp, #0xc0
0000000000005c80	ret
0000000000005c84	add	x8, sp, #0x20
0000000000005c88	add	x20, x8, #0x38
0000000000005c8c	add	x21, x8, #0x30
0000000000005c90	add	x22, x8, #0x28
0000000000005c94	mov	x24, x23
0000000000005c98	add	x23, x8, #0x20
0000000000005c9c	add	x8, sp, #0x8
0000000000005ca0	str	x8, [sp, #0x38]
0000000000005ca4	add	x0, sp, #0x8
0000000000005ca8	mov	w1, #0xa
0000000000005cac	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000005cb0	add	x0, sp, #0x8
0000000000005cb4	mov	w1, #0x0
0000000000005cb8	mov	x2, x23
0000000000005cbc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000005cc0	adr	x1, #0x68360
0000000000005cc4	nop
0000000000005cc8	add	x0, sp, #0x8
0000000000005ccc	mov	x2, x22
0000000000005cd0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000005cd4	add	x0, sp, #0x8
0000000000005cd8	mov	x1, x19
0000000000005cdc	mov	x2, x21
0000000000005ce0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000005ce4	add	x0, sp, #0x8
0000000000005ce8	mov	x1, x20
0000000000005cec	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000005cf0	mov	x19, x0
0000000000005cf4	ldr	x8, [x24, #0x118]
0000000000005cf8	add	x0, x8, #0x70
0000000000005cfc	mov	w1, #0x38
0000000000005d00	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000005d04	mov	x20, x0
0000000000005d08	adr	x8, #0x5b6d8
0000000000005d0c	nop
0000000000005d10	str	x8, [x20, #0x10]!
0000000000005d14	stur	xzr, [x20, #-0x8]
0000000000005d18	str	x20, [sp, #0x60]
0000000000005d1c	mov	x0, x20
0000000000005d20	mov	x1, x19
0000000000005d24	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000005d28	mov	x0, x20
0000000000005d2c	bl	_ThrowException
_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.IntArray(kotlin.Int;kotlin.Int){}kotlin.IntArray:
0000000000005d30	sub	sp, sp, #0xc0
0000000000005d34	stp	x24, x23, [sp, #0x80]
0000000000005d38	stp	x22, x21, [sp, #0x90]
0000000000005d3c	stp	x20, x19, [sp, #0xa0]
0000000000005d40	stp	x29, x30, [sp, #0xb0]
0000000000005d44	add	x29, sp, #0xb0
0000000000005d48	mov	x20, x2
0000000000005d4c	mov	x19, x1
0000000000005d50	mov	x21, x0
0000000000005d54	movi.16b	v0, #0x0
0000000000005d58	stp	q0, q0, [sp, #0x20]
0000000000005d5c	str	xzr, [sp, #0x70]
0000000000005d60	stp	q0, q0, [sp, #0x50]
0000000000005d64	str	q0, [sp, #0x40]
0000000000005d68	stp	xzr, xzr, [sp, #0x10]
0000000000005d6c	adr	x8, #0x5ee24
0000000000005d70	nop
0000000000005d74	orr	x8, x8, #0x3
0000000000005d78	str	x8, [sp, #0x8]
0000000000005d7c	adrp	x0, 117 ; 0x7a000
0000000000005d80	add	x0, x0, #0x2c0
0000000000005d84	ldr	x8, [x0]
0000000000005d88	blr	x8
0000000000005d8c	ldr	x23, [x0]
0000000000005d90	ldr	x8, [x23, #0x110]
0000000000005d94	add	x9, sp, #0x20
0000000000005d98	str	x9, [x23, #0x110]
0000000000005d9c	mov	x9, #0xb00000000
0000000000005da0	stp	x8, x9, [sp, #0x28]
0000000000005da4	adr	x8, #0x8e4e5
0000000000005da8	nop
0000000000005dac	ldarb	w8, [x8]
0000000000005db0	tbz	w8, #0x0, 0x5db8
0000000000005db4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000005db8	tbnz	w19, #0x1f, 0x5e6c
0000000000005dbc	ldr	x8, [x23, #0x118]
0000000000005dc0	mov	w9, w19
0000000000005dc4	lsl	x9, x9, #2
0000000000005dc8	add	x9, x9, #0x1f
0000000000005dcc	and	x1, x9, #0x7fffffff8
0000000000005dd0	add	x0, x8, #0x70
0000000000005dd4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000005dd8	mov	x22, x0
0000000000005ddc	str	xzr, [x22, #0x10]!
0000000000005de0	str	xzr, [x0, #0x18]
0000000000005de4	adr	x8, #0x5afdc
0000000000005de8	nop
0000000000005dec	str	xzr, [x0, #0x8]
0000000000005df0	str	x8, [x22]
0000000000005df4	str	w19, [x0, #0x18]
0000000000005df8	str	x22, [sp, #0x68]
0000000000005dfc	ldr	w8, [x21, #0x8]
0000000000005e00	cmp	w8, w19
0000000000005e04	b.ge	0x5e10
0000000000005e08	mov	x19, x8
0000000000005e0c	tbnz	w8, #0x1f, 0x5e68
0000000000005e10	ldr	w8, [x21, #0x8]
0000000000005e14	cmp	w8, w19
0000000000005e18	b.lo	0x5e68
0000000000005e1c	ldr	w8, [x0, #0x18]
0000000000005e20	cmp	w8, w19
0000000000005e24	b.lo	0x5e68
0000000000005e28	ldr	xzr, [x0, #0x10]
0000000000005e2c	add	x0, x0, #0x20
0000000000005e30	add	x1, x21, #0x10
0000000000005e34	sbfiz	x2, x19, #2, #32
0000000000005e38	bl	0x554b8 ; symbol stub for: _memmove
0000000000005e3c	str	x22, [sp, #0x70]
0000000000005e40	str	x22, [x20]
0000000000005e44	ldr	x8, [sp, #0x28]
0000000000005e48	str	x8, [x23, #0x110]
0000000000005e4c	mov	x0, x22
0000000000005e50	ldp	x29, x30, [sp, #0xb0]
0000000000005e54	ldp	x20, x19, [sp, #0xa0]
0000000000005e58	ldp	x22, x21, [sp, #0x90]
0000000000005e5c	ldp	x24, x23, [sp, #0x80]
0000000000005e60	add	sp, sp, #0xc0
0000000000005e64	ret
0000000000005e68	bl	_ThrowArrayIndexOutOfBoundsException
0000000000005e6c	add	x8, sp, #0x20
0000000000005e70	add	x20, x8, #0x38
0000000000005e74	add	x21, x8, #0x30
0000000000005e78	add	x22, x8, #0x28
0000000000005e7c	mov	x24, x23
0000000000005e80	add	x23, x8, #0x20
0000000000005e84	add	x8, sp, #0x8
0000000000005e88	str	x8, [sp, #0x38]
0000000000005e8c	add	x0, sp, #0x8
0000000000005e90	mov	w1, #0xa
0000000000005e94	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000005e98	add	x0, sp, #0x8
0000000000005e9c	mov	w1, #0x0
0000000000005ea0	mov	x2, x23
0000000000005ea4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000005ea8	adr	x1, #0x68178
0000000000005eac	nop
0000000000005eb0	add	x0, sp, #0x8
0000000000005eb4	mov	x2, x22
0000000000005eb8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000005ebc	add	x0, sp, #0x8
0000000000005ec0	mov	x1, x19
0000000000005ec4	mov	x2, x21
0000000000005ec8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000005ecc	add	x0, sp, #0x8
0000000000005ed0	mov	x1, x20
0000000000005ed4	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000005ed8	mov	x19, x0
0000000000005edc	ldr	x8, [x24, #0x118]
0000000000005ee0	add	x0, x8, #0x70
0000000000005ee4	mov	w1, #0x38
0000000000005ee8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000005eec	mov	x20, x0
0000000000005ef0	adr	x8, #0x5b4f0
0000000000005ef4	nop
0000000000005ef8	str	x8, [x20, #0x10]!
0000000000005efc	stur	xzr, [x20, #-0x8]
0000000000005f00	str	x20, [sp, #0x60]
0000000000005f04	mov	x0, x20
0000000000005f08	mov	x1, x19
0000000000005f0c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000005f10	mov	x0, x20
0000000000005f14	bl	_ThrowException
_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.CharArray(kotlin.Int;kotlin.Int){}kotlin.CharArray:
0000000000005f18	sub	sp, sp, #0xc0
0000000000005f1c	stp	x24, x23, [sp, #0x80]
0000000000005f20	stp	x22, x21, [sp, #0x90]
0000000000005f24	stp	x20, x19, [sp, #0xa0]
0000000000005f28	stp	x29, x30, [sp, #0xb0]
0000000000005f2c	add	x29, sp, #0xb0
0000000000005f30	mov	x20, x2
0000000000005f34	mov	x19, x1
0000000000005f38	mov	x21, x0
0000000000005f3c	movi.16b	v0, #0x0
0000000000005f40	stp	q0, q0, [sp, #0x20]
0000000000005f44	str	xzr, [sp, #0x70]
0000000000005f48	stp	q0, q0, [sp, #0x50]
0000000000005f4c	str	q0, [sp, #0x40]
0000000000005f50	stp	xzr, xzr, [sp, #0x10]
0000000000005f54	adr	x8, #0x5ec3c
0000000000005f58	nop
0000000000005f5c	orr	x8, x8, #0x3
0000000000005f60	str	x8, [sp, #0x8]
0000000000005f64	adrp	x0, 117 ; 0x7a000
0000000000005f68	add	x0, x0, #0x2c0
0000000000005f6c	ldr	x8, [x0]
0000000000005f70	blr	x8
0000000000005f74	ldr	x23, [x0]
0000000000005f78	ldr	x8, [x23, #0x110]
0000000000005f7c	add	x9, sp, #0x20
0000000000005f80	str	x9, [x23, #0x110]
0000000000005f84	mov	x9, #0xb00000000
0000000000005f88	stp	x8, x9, [sp, #0x28]
0000000000005f8c	adr	x8, #0x8e2fd
0000000000005f90	nop
0000000000005f94	ldarb	w8, [x8]
0000000000005f98	tbz	w8, #0x0, 0x5fa0
0000000000005f9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000005fa0	tbnz	w19, #0x1f, 0x6054
0000000000005fa4	ldr	x8, [x23, #0x118]
0000000000005fa8	mov	w9, w19
0000000000005fac	lsl	x9, x9, #1
0000000000005fb0	add	x9, x9, #0x1f
0000000000005fb4	and	x1, x9, #0x3fffffff8
0000000000005fb8	add	x0, x8, #0x70
0000000000005fbc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000005fc0	mov	x22, x0
0000000000005fc4	str	xzr, [x22, #0x10]!
0000000000005fc8	str	xzr, [x0, #0x18]
0000000000005fcc	adr	x8, #0x5ad64
0000000000005fd0	nop
0000000000005fd4	str	xzr, [x0, #0x8]
0000000000005fd8	str	x8, [x22]
0000000000005fdc	str	w19, [x0, #0x18]
0000000000005fe0	str	x22, [sp, #0x68]
0000000000005fe4	ldr	w8, [x21, #0x8]
0000000000005fe8	cmp	w8, w19
0000000000005fec	b.ge	0x5ff8
0000000000005ff0	mov	x19, x8
0000000000005ff4	tbnz	w8, #0x1f, 0x6050
0000000000005ff8	ldr	w8, [x21, #0x8]
0000000000005ffc	cmp	w8, w19
0000000000006000	b.lo	0x6050
0000000000006004	ldr	w8, [x0, #0x18]
0000000000006008	cmp	w8, w19
000000000000600c	b.lo	0x6050
0000000000006010	ldr	xzr, [x0, #0x10]
0000000000006014	add	x0, x0, #0x20
0000000000006018	add	x1, x21, #0x10
000000000000601c	sbfiz	x2, x19, #1, #32
0000000000006020	bl	0x554b8 ; symbol stub for: _memmove
0000000000006024	str	x22, [sp, #0x70]
0000000000006028	str	x22, [x20]
000000000000602c	ldr	x8, [sp, #0x28]
0000000000006030	str	x8, [x23, #0x110]
0000000000006034	mov	x0, x22
0000000000006038	ldp	x29, x30, [sp, #0xb0]
000000000000603c	ldp	x20, x19, [sp, #0xa0]
0000000000006040	ldp	x22, x21, [sp, #0x90]
0000000000006044	ldp	x24, x23, [sp, #0x80]
0000000000006048	add	sp, sp, #0xc0
000000000000604c	ret
0000000000006050	bl	_ThrowArrayIndexOutOfBoundsException
0000000000006054	add	x8, sp, #0x20
0000000000006058	add	x20, x8, #0x38
000000000000605c	add	x21, x8, #0x30
0000000000006060	add	x22, x8, #0x28
0000000000006064	mov	x24, x23
0000000000006068	add	x23, x8, #0x20
000000000000606c	add	x8, sp, #0x8
0000000000006070	str	x8, [sp, #0x38]
0000000000006074	add	x0, sp, #0x8
0000000000006078	mov	w1, #0xa
000000000000607c	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000006080	add	x0, sp, #0x8
0000000000006084	mov	w1, #0x0
0000000000006088	mov	x2, x23
000000000000608c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000006090	adr	x1, #0x67f90
0000000000006094	nop
0000000000006098	add	x0, sp, #0x8
000000000000609c	mov	x2, x22
00000000000060a0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000060a4	add	x0, sp, #0x8
00000000000060a8	mov	x1, x19
00000000000060ac	mov	x2, x21
00000000000060b0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000060b4	add	x0, sp, #0x8
00000000000060b8	mov	x1, x20
00000000000060bc	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
00000000000060c0	mov	x19, x0
00000000000060c4	ldr	x8, [x24, #0x118]
00000000000060c8	add	x0, x8, #0x70
00000000000060cc	mov	w1, #0x38
00000000000060d0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000060d4	mov	x20, x0
00000000000060d8	adr	x8, #0x5b308
00000000000060dc	nop
00000000000060e0	str	x8, [x20, #0x10]!
00000000000060e4	stur	xzr, [x20, #-0x8]
00000000000060e8	str	x20, [sp, #0x60]
00000000000060ec	mov	x0, x20
00000000000060f0	mov	x1, x19
00000000000060f4	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
00000000000060f8	mov	x0, x20
00000000000060fc	bl	_ThrowException
_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.ByteArray(kotlin.Int;kotlin.Int){}kotlin.ByteArray:
0000000000006100	sub	sp, sp, #0xd0
0000000000006104	stp	x26, x25, [sp, #0x80]
0000000000006108	stp	x24, x23, [sp, #0x90]
000000000000610c	stp	x22, x21, [sp, #0xa0]
0000000000006110	stp	x20, x19, [sp, #0xb0]
0000000000006114	stp	x29, x30, [sp, #0xc0]
0000000000006118	add	x29, sp, #0xc0
000000000000611c	mov	x21, x3
0000000000006120	mov	x20, x2
0000000000006124	mov	x19, x1
0000000000006128	mov	x22, x0
000000000000612c	movi.16b	v0, #0x0
0000000000006130	stp	q0, q0, [sp, #0x20]
0000000000006134	str	xzr, [sp, #0x70]
0000000000006138	stp	q0, q0, [sp, #0x50]
000000000000613c	str	q0, [sp, #0x40]
0000000000006140	stp	xzr, xzr, [sp, #0x10]
0000000000006144	adr	x8, #0x5ea4c
0000000000006148	nop
000000000000614c	orr	x8, x8, #0x3
0000000000006150	str	x8, [sp, #0x8]
0000000000006154	adrp	x0, 116 ; 0x7a000
0000000000006158	add	x0, x0, #0x2c0
000000000000615c	ldr	x8, [x0]
0000000000006160	blr	x8
0000000000006164	ldr	x24, [x0]
0000000000006168	ldr	x8, [x24, #0x110]
000000000000616c	add	x9, sp, #0x20
0000000000006170	str	x9, [x24, #0x110]
0000000000006174	mov	x9, #0xb00000000
0000000000006178	stp	x8, x9, [sp, #0x28]
000000000000617c	adr	x8, #0x8e10d
0000000000006180	nop
0000000000006184	ldarb	w8, [x8]
0000000000006188	tbz	w8, #0x0, 0x6190
000000000000618c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006190	subs	w25, w20, w19
0000000000006194	b.mi	0x6254
0000000000006198	ldr	x8, [x24, #0x118]
000000000000619c	add	x9, x25, #0x1f
00000000000061a0	and	x1, x9, #0x1fffffff8
00000000000061a4	add	x0, x8, #0x70
00000000000061a8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000061ac	mov	x23, x0
00000000000061b0	str	xzr, [x23, #0x10]!
00000000000061b4	str	xzr, [x0, #0x18]
00000000000061b8	str	xzr, [x0, #0x8]
00000000000061bc	adr	x8, #0x5aae4
00000000000061c0	nop
00000000000061c4	str	x8, [x23]
00000000000061c8	str	w25, [x0, #0x18]
00000000000061cc	str	x23, [sp, #0x68]
00000000000061d0	ldr	w9, [x22, #0x8]
00000000000061d4	sub	w8, w9, w19
00000000000061d8	cmp	w9, w20
00000000000061dc	csel	w8, w8, w25, lt
00000000000061e0	orr	w10, w8, w19
00000000000061e4	tbnz	w10, #0x1f, 0x6250
00000000000061e8	cmp	w9, w20
00000000000061ec	csel	w9, w9, w20, lt
00000000000061f0	ldr	w10, [x22, #0x8]
00000000000061f4	cmp	w9, w10
00000000000061f8	b.hi	0x6250
00000000000061fc	ldr	w9, [x0, #0x18]
0000000000006200	cmp	w9, w8
0000000000006204	b.lo	0x6250
0000000000006208	ldr	xzr, [x0, #0x10]
000000000000620c	add	x0, x0, #0x20
0000000000006210	add	x9, x22, w19, sxtw
0000000000006214	add	x1, x9, #0x10
0000000000006218	sxtw	x2, w8
000000000000621c	bl	0x554b8 ; symbol stub for: _memmove
0000000000006220	str	x23, [sp, #0x70]
0000000000006224	str	x23, [x21]
0000000000006228	ldr	x8, [sp, #0x28]
000000000000622c	str	x8, [x24, #0x110]
0000000000006230	mov	x0, x23
0000000000006234	ldp	x29, x30, [sp, #0xc0]
0000000000006238	ldp	x20, x19, [sp, #0xb0]
000000000000623c	ldp	x22, x21, [sp, #0xa0]
0000000000006240	ldp	x24, x23, [sp, #0x90]
0000000000006244	ldp	x26, x25, [sp, #0x80]
0000000000006248	add	sp, sp, #0xd0
000000000000624c	ret
0000000000006250	bl	_ThrowArrayIndexOutOfBoundsException
0000000000006254	add	x8, sp, #0x20
0000000000006258	add	x21, x8, #0x38
000000000000625c	add	x22, x8, #0x30
0000000000006260	add	x23, x8, #0x28
0000000000006264	mov	x25, x24
0000000000006268	add	x24, x8, #0x20
000000000000626c	add	x8, sp, #0x8
0000000000006270	str	x8, [sp, #0x38]
0000000000006274	add	x0, sp, #0x8
0000000000006278	mov	w1, #0xa
000000000000627c	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000006280	add	x0, sp, #0x8
0000000000006284	mov	x1, x19
0000000000006288	mov	x2, x24
000000000000628c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000006290	adr	x1, #0x67d90
0000000000006294	nop
0000000000006298	add	x0, sp, #0x8
000000000000629c	mov	x2, x23
00000000000062a0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000062a4	add	x0, sp, #0x8
00000000000062a8	mov	x1, x20
00000000000062ac	mov	x2, x22
00000000000062b0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000062b4	add	x0, sp, #0x8
00000000000062b8	mov	x1, x21
00000000000062bc	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
00000000000062c0	mov	x19, x0
00000000000062c4	ldr	x8, [x25, #0x118]
00000000000062c8	add	x0, x8, #0x70
00000000000062cc	mov	w1, #0x38
00000000000062d0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000062d4	mov	x20, x0
00000000000062d8	adr	x8, #0x5b108
00000000000062dc	nop
00000000000062e0	str	x8, [x20, #0x10]!
00000000000062e4	stur	xzr, [x20, #-0x8]
00000000000062e8	str	x20, [sp, #0x60]
00000000000062ec	mov	x0, x20
00000000000062f0	mov	x1, x19
00000000000062f4	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
00000000000062f8	mov	x0, x20
00000000000062fc	bl	_ThrowException
_kfun:kotlin.Any#hashCode(){}kotlin.Int:
0000000000006300	stp	x20, x19, [sp, #-0x20]!
0000000000006304	stp	x29, x30, [sp, #0x10]
0000000000006308	add	x29, sp, #0x10
000000000000630c	mov	x19, x0
0000000000006310	adr	x8, #0x8df79
0000000000006314	nop
0000000000006318	ldarb	w8, [x8]
000000000000631c	tbz	w8, #0x0, 0x6324
0000000000006320	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006324	mov	x0, x19
0000000000006328	ldp	x29, x30, [sp, #0x10]
000000000000632c	ldp	x20, x19, [sp], #0x20
0000000000006330	ret
_kfun:kotlin.Any#toString(){}kotlin.String:
0000000000006334	sub	sp, sp, #0x140
0000000000006338	stp	x28, x27, [sp, #0xe0]
000000000000633c	stp	x26, x25, [sp, #0xf0]
0000000000006340	stp	x24, x23, [sp, #0x100]
0000000000006344	stp	x22, x21, [sp, #0x110]
0000000000006348	stp	x20, x19, [sp, #0x120]
000000000000634c	stp	x29, x30, [sp, #0x130]
0000000000006350	add	x29, sp, #0x130
0000000000006354	mov	x19, x1
0000000000006358	mov	x20, x0
000000000000635c	movi.16b	v0, #0x0
0000000000006360	stp	q0, q0, [sp, #0x30]
0000000000006364	stp	q0, q0, [sp, #0x60]
0000000000006368	str	q0, [sp, #0x50]
000000000000636c	add	x21, sp, #0x30
0000000000006370	adr	x8, #0x5c4d0
0000000000006374	nop
0000000000006378	orr	x8, x8, #0x3
000000000000637c	stp	x8, xzr, [sp, #0x20]
0000000000006380	stp	xzr, xzr, [sp, #0x10]
0000000000006384	adr	x8, #0x5e80c
0000000000006388	nop
000000000000638c	orr	x8, x8, #0x3
0000000000006390	str	x8, [sp, #0x8]
0000000000006394	adrp	x0, 116 ; 0x7a000
0000000000006398	add	x0, x0, #0x2c0
000000000000639c	ldr	x8, [x0]
00000000000063a0	blr	x8
00000000000063a4	ldr	x26, [x0]
00000000000063a8	ldr	x8, [x26, #0x110]
00000000000063ac	str	x21, [x26, #0x110]
00000000000063b0	mov	x9, #0xa00000000
00000000000063b4	stp	x8, x9, [sp, #0x38]
00000000000063b8	adr	x8, #0x8ded1
00000000000063bc	nop
00000000000063c0	ldarb	w8, [x8]
00000000000063c4	tbz	w8, #0x0, 0x63cc
00000000000063c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000063cc	ldr	x8, [x20]
00000000000063d0	and	x8, x8, #0xfffffffffffffffc
00000000000063d4	ldr	x8, [x8]
00000000000063d8	add	x9, sp, #0x20
00000000000063dc	str	x9, [sp, #0x48]
00000000000063e0	str	x8, [sp, #0x28]
00000000000063e4	ldr	x8, [sp, #0x20]
00000000000063e8	and	x8, x8, #0xfffffffffffffffc
00000000000063ec	ldr	x8, [x8]
00000000000063f0	ldr	w8, [x8, #0x5c]
00000000000063f4	cmp	w8, #0xd2
00000000000063f8	b.ne	0x6420
00000000000063fc	add	x1, x21, #0x20
0000000000006400	add	x0, sp, #0x20
0000000000006404	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-fullName>(){}kotlin.String?"
0000000000006408	str	x0, [sp, #0x50]
000000000000640c	adr	x8, #0x67c84
0000000000006410	nop
0000000000006414	cmp	x0, #0x0
0000000000006418	csel	x21, x8, x0, eq
000000000000641c	b	0x642c
0000000000006420	str	xzr, [sp, #0x50]
0000000000006424	adr	x21, #0x67c6c
0000000000006428	nop
000000000000642c	add	x8, sp, #0x30
0000000000006430	add	x22, x8, #0x48
0000000000006434	add	x23, x8, #0x40
0000000000006438	add	x24, x8, #0x38
000000000000643c	add	x25, x8, #0x28
0000000000006440	ldr	x8, [x20]
0000000000006444	and	x8, x8, #0xfffffffffffffffc
0000000000006448	ldr	x8, [x8]
000000000000644c	ldr	x8, [x8, #0x78]
0000000000006450	mov	x0, x20
0000000000006454	blr	x8
0000000000006458	mov	w0, w0
000000000000645c	mov	w1, #0x10
0000000000006460	mov	x2, x25
0000000000006464	bl	_Kotlin_Long_toStringRadix
0000000000006468	mov	x20, x0
000000000000646c	add	x8, sp, #0x8
0000000000006470	str	x8, [sp, #0x60]
0000000000006474	add	x0, sp, #0x8
0000000000006478	mov	w1, #0xa
000000000000647c	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000006480	add	x0, sp, #0x8
0000000000006484	mov	x1, x21
0000000000006488	mov	x2, x24
000000000000648c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000006490	adr	x1, #0x67c20
0000000000006494	nop
0000000000006498	add	x0, sp, #0x8
000000000000649c	mov	x2, x23
00000000000064a0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000064a4	add	x0, sp, #0x8
00000000000064a8	mov	x1, x20
00000000000064ac	mov	x2, x22
00000000000064b0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000064b4	add	x0, sp, #0x8
00000000000064b8	mov	x1, x19
00000000000064bc	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
00000000000064c0	str	x0, [x19]
00000000000064c4	ldr	x8, [sp, #0x38]
00000000000064c8	str	x8, [x26, #0x110]
00000000000064cc	ldp	x29, x30, [sp, #0x130]
00000000000064d0	ldp	x20, x19, [sp, #0x120]
00000000000064d4	ldp	x22, x21, [sp, #0x110]
00000000000064d8	ldp	x24, x23, [sp, #0x100]
00000000000064dc	ldp	x26, x25, [sp, #0xf0]
00000000000064e0	ldp	x28, x27, [sp, #0xe0]
00000000000064e4	add	sp, sp, #0x140
00000000000064e8	ret
_kfun:kotlin.IteratorImpl.next#internal:
00000000000064ec	sub	sp, sp, #0x80
00000000000064f0	stp	x22, x21, [sp, #0x50]
00000000000064f4	stp	x20, x19, [sp, #0x60]
00000000000064f8	stp	x29, x30, [sp, #0x70]
00000000000064fc	add	x29, sp, #0x70
0000000000006500	mov	x19, x1
0000000000006504	mov	x20, x0
0000000000006508	movi.16b	v0, #0x0
000000000000650c	stp	q0, q0, [sp, #0x10]
0000000000006510	str	xzr, [sp, #0x30]
0000000000006514	adrp	x0, 116 ; 0x7a000
0000000000006518	add	x0, x0, #0x2c0
000000000000651c	ldr	x8, [x0]
0000000000006520	blr	x8
0000000000006524	ldr	x21, [x0]
0000000000006528	ldr	x8, [x21, #0x110]
000000000000652c	add	x9, sp, #0x10
0000000000006530	str	x9, [x21, #0x110]
0000000000006534	mov	x9, #0x500000000
0000000000006538	stp	x8, x9, [sp, #0x18]
000000000000653c	adr	x8, #0x8dd4d
0000000000006540	nop
0000000000006544	ldarb	w8, [x8]
0000000000006548	tbz	w8, #0x0, 0x6550
000000000000654c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006550	ldr	w8, [x20, #0x10]
0000000000006554	ldr	x9, [x20, #0x8]
0000000000006558	ldr	w9, [x9, #0x8]
000000000000655c	cmp	w8, w9
0000000000006560	b.ge	0x65a8
0000000000006564	ldr	x8, [x20, #0x8]
0000000000006568	ldrsw	x9, [x20, #0x10]
000000000000656c	add	w10, w9, #0x1
0000000000006570	str	w10, [x20, #0x10]
0000000000006574	ldr	w10, [x8, #0x8]
0000000000006578	cmp	w10, w9
000000000000657c	b.ls	0x6618
0000000000006580	add	x8, x8, x9, lsl #3
0000000000006584	ldr	x0, [x8, #0x10]
0000000000006588	str	x0, [x19]
000000000000658c	ldr	x8, [sp, #0x18]
0000000000006590	str	x8, [x21, #0x110]
0000000000006594	ldp	x29, x30, [sp, #0x70]
0000000000006598	ldp	x20, x19, [sp, #0x60]
000000000000659c	ldp	x22, x21, [sp, #0x50]
00000000000065a0	add	sp, sp, #0x80
00000000000065a4	ret
00000000000065a8	add	x8, sp, #0x10
00000000000065ac	add	x19, x8, #0x18
00000000000065b0	ldr	w8, [x20, #0x10]
00000000000065b4	str	x8, [sp]
00000000000065b8	adr	x2, #0x586cb ; literal pool for: "%d"
00000000000065bc	nop
00000000000065c0	sub	x0, x29, #0x30
00000000000065c4	mov	w1, #0x10
00000000000065c8	bl	__ZN5konan8snprintfEPcmPKcz
00000000000065cc	sub	x0, x29, #0x30
00000000000065d0	mov	x1, x19
00000000000065d4	bl	_CreateStringFromCString
00000000000065d8	mov	x19, x0
00000000000065dc	ldr	x8, [x21, #0x118]
00000000000065e0	add	x0, x8, #0x70
00000000000065e4	mov	w1, #0x38
00000000000065e8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000065ec	mov	x20, x0
00000000000065f0	adr	x8, #0x5ac10
00000000000065f4	nop
00000000000065f8	str	x8, [x20, #0x10]!
00000000000065fc	stur	xzr, [x20, #-0x8]
0000000000006600	str	x20, [sp, #0x30]
0000000000006604	mov	x0, x20
0000000000006608	mov	x1, x19
000000000000660c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000006610	mov	x0, x20
0000000000006614	bl	_ThrowException
0000000000006618	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.IteratorImpl.hasNext#internal:
000000000000661c	stp	x20, x19, [sp, #-0x20]!
0000000000006620	stp	x29, x30, [sp, #0x10]
0000000000006624	add	x29, sp, #0x10
0000000000006628	mov	x19, x0
000000000000662c	adr	x8, #0x8dc5d
0000000000006630	nop
0000000000006634	ldarb	w8, [x8]
0000000000006638	tbz	w8, #0x0, 0x6640
000000000000663c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006640	ldr	w8, [x19, #0x10]
0000000000006644	ldr	x9, [x19, #0x8]
0000000000006648	ldr	w9, [x9, #0x8]
000000000000664c	cmp	w8, w9
0000000000006650	cset	w0, lt
0000000000006654	ldp	x29, x30, [sp, #0x10]
0000000000006658	ldp	x20, x19, [sp], #0x20
000000000000665c	ret
_kfun:kotlin.ByteIteratorImpl.nextByte#internal:
0000000000006660	sub	sp, sp, #0x80
0000000000006664	stp	x22, x21, [sp, #0x50]
0000000000006668	stp	x20, x19, [sp, #0x60]
000000000000666c	stp	x29, x30, [sp, #0x70]
0000000000006670	add	x29, sp, #0x70
0000000000006674	mov	x19, x0
0000000000006678	movi.16b	v0, #0x0
000000000000667c	stp	q0, q0, [sp, #0x10]
0000000000006680	str	xzr, [sp, #0x30]
0000000000006684	adrp	x0, 116 ; 0x7a000
0000000000006688	add	x0, x0, #0x2c0
000000000000668c	ldr	x8, [x0]
0000000000006690	blr	x8
0000000000006694	ldr	x20, [x0]
0000000000006698	ldr	x8, [x20, #0x110]
000000000000669c	add	x9, sp, #0x10
00000000000066a0	str	x9, [x20, #0x110]
00000000000066a4	mov	x9, #0x500000000
00000000000066a8	stp	x8, x9, [sp, #0x18]
00000000000066ac	adr	x8, #0x8dbdd
00000000000066b0	nop
00000000000066b4	ldarb	w8, [x8]
00000000000066b8	tbz	w8, #0x0, 0x66c0
00000000000066bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000066c0	ldr	w8, [x19, #0x10]
00000000000066c4	ldr	x9, [x19, #0x8]
00000000000066c8	ldr	w9, [x9, #0x8]
00000000000066cc	cmp	w8, w9
00000000000066d0	b.ge	0x6714
00000000000066d4	ldr	x8, [x19, #0x8]
00000000000066d8	ldrsw	x9, [x19, #0x10]
00000000000066dc	add	w10, w9, #0x1
00000000000066e0	str	w10, [x19, #0x10]
00000000000066e4	ldr	w10, [x8, #0x8]
00000000000066e8	cmp	w10, w9
00000000000066ec	b.ls	0x6788
00000000000066f0	add	x8, x8, x9
00000000000066f4	ldrsb	w0, [x8, #0x10]
00000000000066f8	ldr	x8, [sp, #0x18]
00000000000066fc	str	x8, [x20, #0x110]
0000000000006700	ldp	x29, x30, [sp, #0x70]
0000000000006704	ldp	x20, x19, [sp, #0x60]
0000000000006708	ldp	x22, x21, [sp, #0x50]
000000000000670c	add	sp, sp, #0x80
0000000000006710	ret
0000000000006714	add	x8, sp, #0x10
0000000000006718	mov	x21, x20
000000000000671c	add	x20, x8, #0x18
0000000000006720	ldr	w8, [x19, #0x10]
0000000000006724	str	x8, [sp]
0000000000006728	adr	x2, #0x5855b ; literal pool for: "%d"
000000000000672c	nop
0000000000006730	sub	x0, x29, #0x30
0000000000006734	mov	w1, #0x10
0000000000006738	bl	__ZN5konan8snprintfEPcmPKcz
000000000000673c	sub	x0, x29, #0x30
0000000000006740	mov	x1, x20
0000000000006744	bl	_CreateStringFromCString
0000000000006748	mov	x19, x0
000000000000674c	ldr	x8, [x21, #0x118]
0000000000006750	add	x0, x8, #0x70
0000000000006754	mov	w1, #0x38
0000000000006758	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000675c	mov	x20, x0
0000000000006760	adr	x8, #0x5aaa0
0000000000006764	nop
0000000000006768	str	x8, [x20, #0x10]!
000000000000676c	stur	xzr, [x20, #-0x8]
0000000000006770	str	x20, [sp, #0x30]
0000000000006774	mov	x0, x20
0000000000006778	mov	x1, x19
000000000000677c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000006780	mov	x0, x20
0000000000006784	bl	_ThrowException
0000000000006788	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.ByteIteratorImpl.hasNext#internal:
000000000000678c	stp	x20, x19, [sp, #-0x20]!
0000000000006790	stp	x29, x30, [sp, #0x10]
0000000000006794	add	x29, sp, #0x10
0000000000006798	mov	x19, x0
000000000000679c	adr	x8, #0x8daed
00000000000067a0	nop
00000000000067a4	ldarb	w8, [x8]
00000000000067a8	tbz	w8, #0x0, 0x67b0
00000000000067ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000067b0	ldr	w8, [x19, #0x10]
00000000000067b4	ldr	x9, [x19, #0x8]
00000000000067b8	ldr	w9, [x9, #0x8]
00000000000067bc	cmp	w8, w9
00000000000067c0	cset	w0, lt
00000000000067c4	ldp	x29, x30, [sp, #0x10]
00000000000067c8	ldp	x20, x19, [sp], #0x20
00000000000067cc	ret
_kfun:kotlin.Boolean#$<bridge-NBNB>compareTo(kotlin.Boolean){}kotlin.Int(kotlin.Any?){}kotlin.Int:
00000000000067d0	stp	x20, x19, [sp, #-0x20]!
00000000000067d4	stp	x29, x30, [sp, #0x10]
00000000000067d8	add	x29, sp, #0x10
00000000000067dc	mov	x19, x1
00000000000067e0	mov	x20, x0
00000000000067e4	adr	x8, #0x8daa5
00000000000067e8	nop
00000000000067ec	ldarb	w8, [x8]
00000000000067f0	tbz	w8, #0x0, 0x67f8
00000000000067f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000067f8	ldrb	w8, [x20, #0x8]
00000000000067fc	ldrb	w9, [x19, #0x8]
0000000000006800	eor	w10, w8, w9
0000000000006804	bic	w8, w9, w8
0000000000006808	tst	w8, #0x1
000000000000680c	mov	w8, #-0x1
0000000000006810	cneg	w8, w8, eq
0000000000006814	tst	w10, #0x1
0000000000006818	csel	w0, w8, wzr, ne
000000000000681c	ldp	x29, x30, [sp, #0x10]
0000000000006820	ldp	x20, x19, [sp], #0x20
0000000000006824	ret
_kfun:kotlin.Boolean#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000006828	stp	x20, x19, [sp, #-0x20]!
000000000000682c	stp	x29, x30, [sp, #0x10]
0000000000006830	add	x29, sp, #0x10
0000000000006834	mov	x19, x1
0000000000006838	mov	x20, x0
000000000000683c	adr	x8, #0x8da4d
0000000000006840	nop
0000000000006844	ldarb	w8, [x8]
0000000000006848	tbz	w8, #0x0, 0x6850
000000000000684c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006850	cbz	x19, 0x688c
0000000000006854	ldrb	w8, [x20, #0x8]
0000000000006858	ldr	x9, [x19]
000000000000685c	and	x9, x9, #0xfffffffffffffffc
0000000000006860	ldr	x9, [x9]
0000000000006864	ldr	w9, [x9, #0x5c]
0000000000006868	cmp	w9, #0x53
000000000000686c	b.ne	0x688c
0000000000006870	ldrb	w9, [x19, #0x8]
0000000000006874	eor	w8, w9, w8
0000000000006878	eor	w8, w8, #0x1
000000000000687c	and	w0, w8, #0x1
0000000000006880	ldp	x29, x30, [sp, #0x10]
0000000000006884	ldp	x20, x19, [sp], #0x20
0000000000006888	ret
000000000000688c	mov	w8, #0x0
0000000000006890	and	w0, w8, #0x1
0000000000006894	ldp	x29, x30, [sp, #0x10]
0000000000006898	ldp	x20, x19, [sp], #0x20
000000000000689c	ret
_kfun:kotlin.Boolean#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
00000000000068a0	stp	x20, x19, [sp, #-0x20]!
00000000000068a4	stp	x29, x30, [sp, #0x10]
00000000000068a8	add	x29, sp, #0x10
00000000000068ac	mov	x19, x1
00000000000068b0	mov	x20, x0
00000000000068b4	adr	x8, #0x8d9d5
00000000000068b8	nop
00000000000068bc	ldarb	w8, [x8]
00000000000068c0	tbz	w8, #0x0, 0x68c8
00000000000068c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000068c8	ldrb	w8, [x20, #0x8]
00000000000068cc	adr	x9, #0x67824
00000000000068d0	nop
00000000000068d4	adr	x10, #0x677fc
00000000000068d8	nop
00000000000068dc	cmp	w8, #0x0
00000000000068e0	csel	x0, x10, x9, ne
00000000000068e4	str	x0, [x19]
00000000000068e8	ldp	x29, x30, [sp, #0x10]
00000000000068ec	ldp	x20, x19, [sp], #0x20
00000000000068f0	ret
_kfun:kotlin.Boolean#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
00000000000068f4	stp	x20, x19, [sp, #-0x20]!
00000000000068f8	stp	x29, x30, [sp, #0x10]
00000000000068fc	add	x29, sp, #0x10
0000000000006900	mov	x19, x0
0000000000006904	adr	x8, #0x8d985
0000000000006908	nop
000000000000690c	ldarb	w8, [x8]
0000000000006910	tbz	w8, #0x0, 0x6918
0000000000006914	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006918	ldrb	w0, [x19, #0x8]
000000000000691c	ldp	x29, x30, [sp, #0x10]
0000000000006920	ldp	x20, x19, [sp], #0x20
0000000000006924	ret
_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any:
0000000000006928	sub	sp, sp, #0x50
000000000000692c	stp	x22, x21, [sp, #0x20]
0000000000006930	stp	x20, x19, [sp, #0x30]
0000000000006934	stp	x29, x30, [sp, #0x40]
0000000000006938	add	x29, sp, #0x40
000000000000693c	mov	x19, x1
0000000000006940	mov	x20, x0
0000000000006944	movi.16b	v0, #0x0
0000000000006948	stp	q0, q0, [sp]
000000000000694c	adrp	x0, 116 ; 0x7a000
0000000000006950	add	x0, x0, #0x2c0
0000000000006954	ldr	x8, [x0]
0000000000006958	blr	x8
000000000000695c	ldr	x21, [x0]
0000000000006960	ldr	x8, [x21, #0x110]
0000000000006964	mov	x9, sp
0000000000006968	str	x9, [x21, #0x110]
000000000000696c	mov	x9, #0x400000000
0000000000006970	stp	x8, x9, [sp, #0x8]
0000000000006974	adr	x8, #0x8d915
0000000000006978	nop
000000000000697c	ldarb	w8, [x8]
0000000000006980	tbz	w8, #0x0, 0x6988
0000000000006984	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006988	adrp	x8, 82 ; 0x58000
000000000000698c	ldrb	w8, [x8, #0x288]
0000000000006990	cbnz	w8, 0x69c4
0000000000006994	cbz	w20, 0x69c4
0000000000006998	ldr	x8, [x21, #0x118]
000000000000699c	add	x0, x8, #0x70
00000000000069a0	mov	w1, #0x18
00000000000069a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000069a8	adr	x8, #0x5a5d8
00000000000069ac	nop
00000000000069b0	str	x8, [x0, #0x10]!
00000000000069b4	stur	xzr, [x0, #-0x8]
00000000000069b8	str	x0, [sp, #0x18]
00000000000069bc	strb	w20, [x0, #0x8]
00000000000069c0	b	0x69d4
00000000000069c4	adr	x8, #0x6349c
00000000000069c8	nop
00000000000069cc	add	x0, x8, w20, uxtw #4
00000000000069d0	str	x0, [x19]
00000000000069d4	str	x0, [x19]
00000000000069d8	ldr	x8, [sp, #0x8]
00000000000069dc	str	x8, [x21, #0x110]
00000000000069e0	ldp	x29, x30, [sp, #0x40]
00000000000069e4	ldp	x20, x19, [sp, #0x30]
00000000000069e8	ldp	x22, x21, [sp, #0x20]
00000000000069ec	add	sp, sp, #0x50
00000000000069f0	ret
_kfun:kotlin.Enum#compareTo(1:0){}kotlin.Int:
00000000000069f4	stp	x20, x19, [sp, #-0x20]!
00000000000069f8	stp	x29, x30, [sp, #0x10]
00000000000069fc	add	x29, sp, #0x10
0000000000006a00	mov	x19, x1
0000000000006a04	mov	x20, x0
0000000000006a08	adr	x8, #0x8d881
0000000000006a0c	nop
0000000000006a10	ldarb	w8, [x8]
0000000000006a14	tbz	w8, #0x0, 0x6a1c
0000000000006a18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006a1c	ldr	w8, [x20, #0x10]
0000000000006a20	ldr	w9, [x19, #0x10]
0000000000006a24	sub	w0, w8, w9
0000000000006a28	ldp	x29, x30, [sp, #0x10]
0000000000006a2c	ldp	x20, x19, [sp], #0x20
0000000000006a30	ret
_kfun:kotlin.Enum#equals(kotlin.Any?){}kotlin.Boolean:
0000000000006a34	stp	x20, x19, [sp, #-0x20]!
0000000000006a38	stp	x29, x30, [sp, #0x10]
0000000000006a3c	add	x29, sp, #0x10
0000000000006a40	mov	x19, x1
0000000000006a44	mov	x20, x0
0000000000006a48	adr	x8, #0x8d841
0000000000006a4c	nop
0000000000006a50	ldarb	w8, [x8]
0000000000006a54	tbz	w8, #0x0, 0x6a5c
0000000000006a58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006a5c	cmp	x20, x19
0000000000006a60	cset	w0, eq
0000000000006a64	ldp	x29, x30, [sp, #0x10]
0000000000006a68	ldp	x20, x19, [sp], #0x20
0000000000006a6c	ret
_kfun:kotlin.Enum#hashCode(){}kotlin.Int:
0000000000006a70	stp	x20, x19, [sp, #-0x20]!
0000000000006a74	stp	x29, x30, [sp, #0x10]
0000000000006a78	add	x29, sp, #0x10
0000000000006a7c	mov	x19, x0
0000000000006a80	adr	x8, #0x8d809
0000000000006a84	nop
0000000000006a88	ldarb	w8, [x8]
0000000000006a8c	tbz	w8, #0x0, 0x6a94
0000000000006a90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006a94	ldr	w0, [x19, #0x10]
0000000000006a98	ldp	x29, x30, [sp, #0x10]
0000000000006a9c	ldp	x20, x19, [sp], #0x20
0000000000006aa0	ret
_kfun:kotlin.Enum#toString(){}kotlin.String:
0000000000006aa4	stp	x20, x19, [sp, #-0x20]!
0000000000006aa8	stp	x29, x30, [sp, #0x10]
0000000000006aac	add	x29, sp, #0x10
0000000000006ab0	mov	x19, x1
0000000000006ab4	mov	x20, x0
0000000000006ab8	adr	x8, #0x8d7d1
0000000000006abc	nop
0000000000006ac0	ldarb	w8, [x8]
0000000000006ac4	tbz	w8, #0x0, 0x6acc
0000000000006ac8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006acc	ldr	x0, [x20, #0x8]
0000000000006ad0	str	x0, [x19]
0000000000006ad4	ldp	x29, x30, [sp, #0x10]
0000000000006ad8	ldp	x20, x19, [sp], #0x20
0000000000006adc	ret
_kfun:kotlin.RuntimeException#<init>(){}:
0000000000006ae0	stp	x20, x19, [sp, #-0x20]!
0000000000006ae4	stp	x29, x30, [sp, #0x10]
0000000000006ae8	add	x29, sp, #0x10
0000000000006aec	mov	x19, x0
0000000000006af0	adr	x8, #0x8d799
0000000000006af4	nop
0000000000006af8	ldarb	w8, [x8]
0000000000006afc	tbz	w8, #0x0, 0x6b04
0000000000006b00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006b04	mov	x0, x19
0000000000006b08	mov	x1, #0x0
0000000000006b0c	ldp	x29, x30, [sp, #0x10]
0000000000006b10	ldp	x20, x19, [sp], #0x20
0000000000006b14	b	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}:
0000000000006b18	stp	x20, x19, [sp, #-0x20]!
0000000000006b1c	stp	x29, x30, [sp, #0x10]
0000000000006b20	add	x29, sp, #0x10
0000000000006b24	mov	x19, x1
0000000000006b28	mov	x20, x0
0000000000006b2c	adr	x8, #0x8d75d
0000000000006b30	nop
0000000000006b34	ldarb	w8, [x8]
0000000000006b38	tbz	w8, #0x0, 0x6b40
0000000000006b3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006b40	mov	x0, x20
0000000000006b44	mov	x1, x19
0000000000006b48	ldp	x29, x30, [sp, #0x10]
0000000000006b4c	ldp	x20, x19, [sp], #0x20
0000000000006b50	b	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
_kfun:kotlin.OutOfMemoryError#<init>(kotlin.String?){}:
0000000000006b54	stp	x20, x19, [sp, #-0x20]!
0000000000006b58	stp	x29, x30, [sp, #0x10]
0000000000006b5c	add	x29, sp, #0x10
0000000000006b60	mov	x19, x1
0000000000006b64	mov	x20, x0
0000000000006b68	adr	x8, #0x8d721
0000000000006b6c	nop
0000000000006b70	ldarb	w8, [x8]
0000000000006b74	tbz	w8, #0x0, 0x6b7c
0000000000006b78	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006b7c	mov	x0, x20
0000000000006b80	mov	x1, x19
0000000000006b84	ldp	x29, x30, [sp, #0x10]
0000000000006b88	ldp	x20, x19, [sp], #0x20
0000000000006b8c	b	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
_kfun:kotlin.Int#$<bridge-NBNB>compareTo(kotlin.Int){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000006b90	stp	x20, x19, [sp, #-0x20]!
0000000000006b94	stp	x29, x30, [sp, #0x10]
0000000000006b98	add	x29, sp, #0x10
0000000000006b9c	mov	x19, x1
0000000000006ba0	mov	x20, x0
0000000000006ba4	adr	x8, #0x8d6e5
0000000000006ba8	nop
0000000000006bac	ldarb	w8, [x8]
0000000000006bb0	tbz	w8, #0x0, 0x6bb8
0000000000006bb4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006bb8	ldr	w8, [x20, #0x8]
0000000000006bbc	ldr	w9, [x19, #0x8]
0000000000006bc0	cmp	w8, w9
0000000000006bc4	mov	w8, #-0x1
0000000000006bc8	cneg	w8, w8, ge
0000000000006bcc	csel	w0, wzr, w8, eq
0000000000006bd0	ldp	x29, x30, [sp, #0x10]
0000000000006bd4	ldp	x20, x19, [sp], #0x20
0000000000006bd8	ret
_kfun:kotlin.Int#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000006bdc	stp	x20, x19, [sp, #-0x20]!
0000000000006be0	stp	x29, x30, [sp, #0x10]
0000000000006be4	add	x29, sp, #0x10
0000000000006be8	mov	x19, x0
0000000000006bec	adr	x8, #0x8d69d
0000000000006bf0	nop
0000000000006bf4	ldarb	w8, [x8]
0000000000006bf8	tbz	w8, #0x0, 0x6c00
0000000000006bfc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006c00	ldrsb	w0, [x19, #0x8]
0000000000006c04	ldp	x29, x30, [sp, #0x10]
0000000000006c08	ldp	x20, x19, [sp], #0x20
0000000000006c0c	ret
_kfun:kotlin.Int#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
0000000000006c10	stp	x20, x19, [sp, #-0x20]!
0000000000006c14	stp	x29, x30, [sp, #0x10]
0000000000006c18	add	x29, sp, #0x10
0000000000006c1c	mov	x19, x0
0000000000006c20	adr	x8, #0x8d669
0000000000006c24	nop
0000000000006c28	ldarb	w8, [x8]
0000000000006c2c	tbz	w8, #0x0, 0x6c34
0000000000006c30	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006c34	ldrh	w0, [x19, #0x8]
0000000000006c38	ldp	x29, x30, [sp, #0x10]
0000000000006c3c	ldp	x20, x19, [sp], #0x20
0000000000006c40	ret
_kfun:kotlin.Int#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
0000000000006c44	stp	x20, x19, [sp, #-0x20]!
0000000000006c48	stp	x29, x30, [sp, #0x10]
0000000000006c4c	add	x29, sp, #0x10
0000000000006c50	mov	x19, x0
0000000000006c54	adr	x8, #0x8d635
0000000000006c58	nop
0000000000006c5c	ldarb	w8, [x8]
0000000000006c60	tbz	w8, #0x0, 0x6c68
0000000000006c64	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006c68	ldrsh	w0, [x19, #0x8]
0000000000006c6c	ldp	x29, x30, [sp, #0x10]
0000000000006c70	ldp	x20, x19, [sp], #0x20
0000000000006c74	ret
_kfun:kotlin.Int#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
0000000000006c78	stp	x20, x19, [sp, #-0x20]!
0000000000006c7c	stp	x29, x30, [sp, #0x10]
0000000000006c80	add	x29, sp, #0x10
0000000000006c84	mov	x19, x0
0000000000006c88	adr	x8, #0x8d601
0000000000006c8c	nop
0000000000006c90	ldarb	w8, [x8]
0000000000006c94	tbz	w8, #0x0, 0x6c9c
0000000000006c98	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006c9c	ldr	w0, [x19, #0x8]
0000000000006ca0	ldp	x29, x30, [sp, #0x10]
0000000000006ca4	ldp	x20, x19, [sp], #0x20
0000000000006ca8	ret
_kfun:kotlin.Int#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
0000000000006cac	stp	x20, x19, [sp, #-0x20]!
0000000000006cb0	stp	x29, x30, [sp, #0x10]
0000000000006cb4	add	x29, sp, #0x10
0000000000006cb8	mov	x19, x0
0000000000006cbc	adr	x8, #0x8d5cd
0000000000006cc0	nop
0000000000006cc4	ldarb	w8, [x8]
0000000000006cc8	tbz	w8, #0x0, 0x6cd0
0000000000006ccc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006cd0	ldrsw	x0, [x19, #0x8]
0000000000006cd4	ldp	x29, x30, [sp, #0x10]
0000000000006cd8	ldp	x20, x19, [sp], #0x20
0000000000006cdc	ret
_kfun:kotlin.Int#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
0000000000006ce0	stp	x20, x19, [sp, #-0x20]!
0000000000006ce4	stp	x29, x30, [sp, #0x10]
0000000000006ce8	add	x29, sp, #0x10
0000000000006cec	mov	x19, x0
0000000000006cf0	adr	x8, #0x8d599
0000000000006cf4	nop
0000000000006cf8	ldarb	w8, [x8]
0000000000006cfc	tbz	w8, #0x0, 0x6d04
0000000000006d00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006d04	ldr	s0, [x19, #0x8]
0000000000006d08	scvtf	s0, s0
0000000000006d0c	ldp	x29, x30, [sp, #0x10]
0000000000006d10	ldp	x20, x19, [sp], #0x20
0000000000006d14	ret
_kfun:kotlin.Int#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
0000000000006d18	stp	x20, x19, [sp, #-0x20]!
0000000000006d1c	stp	x29, x30, [sp, #0x10]
0000000000006d20	add	x29, sp, #0x10
0000000000006d24	mov	x19, x0
0000000000006d28	adr	x8, #0x8d561
0000000000006d2c	nop
0000000000006d30	ldarb	w8, [x8]
0000000000006d34	tbz	w8, #0x0, 0x6d3c
0000000000006d38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006d3c	ldr	s0, [x19, #0x8]
0000000000006d40	sshll.2d	v0, v0, #0x0
0000000000006d44	scvtf	d0, d0
0000000000006d48	ldp	x29, x30, [sp, #0x10]
0000000000006d4c	ldp	x20, x19, [sp], #0x20
0000000000006d50	ret
_kfun:kotlin.Int#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000006d54	stp	x20, x19, [sp, #-0x20]!
0000000000006d58	stp	x29, x30, [sp, #0x10]
0000000000006d5c	add	x29, sp, #0x10
0000000000006d60	mov	x19, x1
0000000000006d64	mov	x20, x0
0000000000006d68	adr	x8, #0x8d521
0000000000006d6c	nop
0000000000006d70	ldarb	w8, [x8]
0000000000006d74	tbz	w8, #0x0, 0x6d7c
0000000000006d78	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006d7c	cbz	x19, 0x6db4
0000000000006d80	ldr	w8, [x20, #0x8]
0000000000006d84	ldr	x9, [x19]
0000000000006d88	and	x9, x9, #0xfffffffffffffffc
0000000000006d8c	ldr	x9, [x9]
0000000000006d90	ldr	w9, [x9, #0x5c]
0000000000006d94	cmp	w9, #0x69
0000000000006d98	b.ne	0x6db4
0000000000006d9c	ldr	w9, [x19, #0x8]
0000000000006da0	cmp	w9, w8
0000000000006da4	cset	w0, eq
0000000000006da8	ldp	x29, x30, [sp, #0x10]
0000000000006dac	ldp	x20, x19, [sp], #0x20
0000000000006db0	ret
0000000000006db4	mov	w0, #0x0
0000000000006db8	ldp	x29, x30, [sp, #0x10]
0000000000006dbc	ldp	x20, x19, [sp], #0x20
0000000000006dc0	ret
_kfun:kotlin.Int#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000006dc4	sub	sp, sp, #0x40
0000000000006dc8	stp	x20, x19, [sp, #0x20]
0000000000006dcc	stp	x29, x30, [sp, #0x30]
0000000000006dd0	add	x29, sp, #0x30
0000000000006dd4	mov	x19, x1
0000000000006dd8	mov	x20, x0
0000000000006ddc	adr	x8, #0x8d4ad
0000000000006de0	nop
0000000000006de4	ldarb	w8, [x8]
0000000000006de8	tbz	w8, #0x0, 0x6df0
0000000000006dec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006df0	ldr	w8, [x20, #0x8]
0000000000006df4	str	x8, [sp]
0000000000006df8	adr	x2, #0x57e8b ; literal pool for: "%d"
0000000000006dfc	nop
0000000000006e00	add	x0, sp, #0x10
0000000000006e04	mov	w1, #0x10
0000000000006e08	bl	__ZN5konan8snprintfEPcmPKcz
0000000000006e0c	add	x0, sp, #0x10
0000000000006e10	mov	x1, x19
0000000000006e14	bl	_CreateStringFromCString
0000000000006e18	str	x0, [x19]
0000000000006e1c	ldp	x29, x30, [sp, #0x30]
0000000000006e20	ldp	x20, x19, [sp, #0x20]
0000000000006e24	add	sp, sp, #0x40
0000000000006e28	ret
_kfun:kotlin.Int#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000006e2c	stp	x20, x19, [sp, #-0x20]!
0000000000006e30	stp	x29, x30, [sp, #0x10]
0000000000006e34	add	x29, sp, #0x10
0000000000006e38	mov	x19, x0
0000000000006e3c	adr	x8, #0x8d44d
0000000000006e40	nop
0000000000006e44	ldarb	w8, [x8]
0000000000006e48	tbz	w8, #0x0, 0x6e50
0000000000006e4c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006e50	ldr	w0, [x19, #0x8]
0000000000006e54	ldp	x29, x30, [sp, #0x10]
0000000000006e58	ldp	x20, x19, [sp], #0x20
0000000000006e5c	ret
_kfun:kotlin.Double#toString(){}kotlin.String:
0000000000006e60	sub	sp, sp, #0xe0
0000000000006e64	stp	d9, d8, [sp, #0x70]
0000000000006e68	stp	x28, x27, [sp, #0x80]
0000000000006e6c	stp	x26, x25, [sp, #0x90]
0000000000006e70	stp	x24, x23, [sp, #0xa0]
0000000000006e74	stp	x22, x21, [sp, #0xb0]
0000000000006e78	stp	x20, x19, [sp, #0xc0]
0000000000006e7c	stp	x29, x30, [sp, #0xd0]
0000000000006e80	add	x29, sp, #0xd0
0000000000006e84	mov	x19, x0
0000000000006e88	fmov	d8, d0
0000000000006e8c	movi.16b	v0, #0x0
0000000000006e90	stp	q0, q0, [sp]
0000000000006e94	adrp	x0, 116 ; 0x7a000
0000000000006e98	add	x0, x0, #0x2c0
0000000000006e9c	ldr	x8, [x0]
0000000000006ea0	blr	x8
0000000000006ea4	ldr	x24, [x0]
0000000000006ea8	ldr	x8, [x24, #0x110]
0000000000006eac	mov	x9, sp
0000000000006eb0	str	x9, [x24, #0x110]
0000000000006eb4	mov	x9, #0x400000000
0000000000006eb8	stp	x8, x9, [sp, #0x8]
0000000000006ebc	adr	x25, #0x8d3cd
0000000000006ec0	nop
0000000000006ec4	ldarb	w8, [x25]
0000000000006ec8	tbz	w8, #0x0, 0x6ed0
0000000000006ecc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000006ed0	adr	x23, #0x8d430
0000000000006ed4	nop
0000000000006ed8	ldar	x8, [x23]
0000000000006edc	cmp	x8, #0x2
0000000000006ee0	b.hs	0x70a8
0000000000006ee4	ldp	x8, x9, [x24, #0x120]
0000000000006ee8	cmp	x8, x9
0000000000006eec	b.eq	0x6f0c
0000000000006ef0	mov	x10, x9
0000000000006ef4	ldr	x11, [x10, #-0x10]!
0000000000006ef8	cmp	x11, x23
0000000000006efc	b.eq	0x6fc4
0000000000006f00	mov	x9, x10
0000000000006f04	cmp	x10, x8
0000000000006f08	b.ne	0x6ef4
0000000000006f0c	add	x20, x24, #0x120
0000000000006f10	add	x0, x24, #0x138
0000000000006f14	mov	w9, #0x1
0000000000006f18	ldaxr	w8, [x0]
0000000000006f1c	stlxr	w10, w9, [x0]
0000000000006f20	cbnz	w10, 0x6f18
0000000000006f24	b	0x6f34
0000000000006f28	mov	w22, #0x1
0000000000006f2c	stlxr	w9, x22, [x23]
0000000000006f30	cbz	w9, 0x6f44
0000000000006f34	ldaxr	x21, [x23]
0000000000006f38	cbz	x21, 0x6f28
0000000000006f3c	mov	w22, #0x0
0000000000006f40	clrex
0000000000006f44	cmp	x21, #0x1
0000000000006f48	b.eq	0x6f34
0000000000006f4c	cbz	x24, 0x6f74
0000000000006f50	ldaxr	w9, [x0]
0000000000006f54	stlxr	w10, w8, [x0]
0000000000006f58	cbnz	w10, 0x6f50
0000000000006f5c	cbnz	w8, 0x6f74
0000000000006f60	cmp	w9, #0x1
0000000000006f64	b.ne	0x6f74
0000000000006f68	ldarb	w8, [x25]
0000000000006f6c	tbz	w8, #0x0, 0x6f74
0000000000006f70	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000006f74	tbz	w22, #0x0, 0x6fbc
0000000000006f78	ldr	x8, [x24, #0x118]
0000000000006f7c	add	x0, x8, #0x70
0000000000006f80	mov	w1, #0x20
0000000000006f84	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000006f88	mov	x21, x0
0000000000006f8c	adr	x8, #0x5bad4
0000000000006f90	nop
0000000000006f94	str	x8, [x21, #0x10]!
0000000000006f98	stur	xzr, [x21, #-0x8]
0000000000006f9c	str	x21, [sp, #0x18]
0000000000006fa0	ldp	x9, x8, [x24, #0x128]
0000000000006fa4	cmp	x9, x8
0000000000006fa8	b.hs	0x6fd0
0000000000006fac	stp	x23, x21, [x9]
0000000000006fb0	add	x8, x9, #0x10
0000000000006fb4	str	x8, [x24, #0x128]
0000000000006fb8	b	0x7058
0000000000006fbc	str	x21, [sp, #0x18]
0000000000006fc0	b	0x70a8
0000000000006fc4	ldur	x8, [x9, #-0x8]
0000000000006fc8	str	x8, [sp, #0x18]
0000000000006fcc	b	0x70a8
0000000000006fd0	ldr	x10, [x20]
0000000000006fd4	sub	x9, x9, x10
0000000000006fd8	asr	x26, x9, #4
0000000000006fdc	add	x9, x26, #0x1
0000000000006fe0	lsr	x11, x9, #60
0000000000006fe4	cbnz	x11, 0x72b4
0000000000006fe8	sub	x8, x8, x10
0000000000006fec	asr	x10, x8, #3
0000000000006ff0	cmp	x10, x9
0000000000006ff4	csel	x9, x9, x10, lo
0000000000006ff8	mov	x10, #0x7ffffffffffffff
0000000000006ffc	cmp	x10, x8, asr #4
0000000000007000	mov	x8, #0xfffffffffffffff
0000000000007004	csel	x22, x9, x8, hi
0000000000007008	mov	x0, x22
000000000000700c	mov	w1, #0x10
0000000000007010	bl	0x553d4 ; symbol stub for: _calloc
0000000000007014	add	x8, x0, x26, lsl #4
0000000000007018	add	x26, x0, x22, lsl #4
000000000000701c	stp	x23, x21, [x8]
0000000000007020	add	x27, x8, #0x10
0000000000007024	ldp	x1, x9, [x24, #0x120]
0000000000007028	sub	x2, x9, x1
000000000000702c	sub	x22, x8, x2
0000000000007030	cmp	x2, #0x1
0000000000007034	b.lt	0x7044
0000000000007038	mov	x0, x22
000000000000703c	bl	0x554ac ; symbol stub for: _memcpy
0000000000007040	ldr	x1, [x20]
0000000000007044	stp	x22, x27, [x24, #0x120]
0000000000007048	str	x26, [x24, #0x130]
000000000000704c	cbz	x1, 0x7058
0000000000007050	mov	x0, x1
0000000000007054	bl	0x55458 ; symbol stub for: _free
0000000000007058	mov	x0, x21
000000000000705c	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
0000000000007060	mov	w0, #0x1
0000000000007064	mov	w1, #0x28
0000000000007068	bl	0x553d4 ; symbol stub for: _calloc
000000000000706c	mov	x8, x24
0000000000007070	ldr	x9, [x8, #0x18]!
0000000000007074	sub	x10, x8, #0x8
0000000000007078	stp	x23, x10, [x0, #0x10]
000000000000707c	stp	x9, x8, [x0]
0000000000007080	str	x0, [x9, #0x8]
0000000000007084	str	x0, [x8]
0000000000007088	ldr	x9, [x8, #0x10]
000000000000708c	add	x9, x9, #0x1
0000000000007090	str	x9, [x8, #0x10]
0000000000007094	str	x0, [x0, #0x20]
0000000000007098	stlr	x21, [x23]
000000000000709c	ldr	x9, [x8, #0x110]
00000000000070a0	sub	x9, x9, #0x10
00000000000070a4	str	x9, [x8, #0x110]
00000000000070a8	movi.16b	v0, #0x0
00000000000070ac	stp	q0, q0, [sp, #0x20]
00000000000070b0	add	x8, sp, #0x20
00000000000070b4	add	x0, x8, #0x18
00000000000070b8	ldr	x9, [x24, #0x110]
00000000000070bc	str	x8, [x24, #0x110]
00000000000070c0	mov	x8, #0x400000000
00000000000070c4	stp	x9, x8, [sp, #0x28]
00000000000070c8	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion.<get-converter>#internal"
00000000000070cc	movi.16b	v0, #0x0
00000000000070d0	stp	q0, q0, [sp, #0x40]
00000000000070d4	str	xzr, [sp, #0x60]
00000000000070d8	add	x26, sp, #0x40
00000000000070dc	ldr	x8, [x24, #0x110]
00000000000070e0	str	x26, [x24, #0x110]
00000000000070e4	mov	x9, #0x500000000
00000000000070e8	stp	x8, x9, [sp, #0x48]
00000000000070ec	adr	x8, #0x673f4
00000000000070f0	nop
00000000000070f4	adr	x9, #0x66dec
00000000000070f8	nop
00000000000070fc	fmov	x10, d8
0000000000007100	cmp	x10, #0x0
0000000000007104	csel	x20, x9, x8, ge
0000000000007108	ubfx	x27, x10, #52, #11
000000000000710c	and	x22, x10, #0xfffffffffffff
0000000000007110	cmp	w27, #0x7ff
0000000000007114	b.ne	0x7128
0000000000007118	cbz	x22, 0x7150
000000000000711c	adr	x0, #0x67404
0000000000007120	nop
0000000000007124	b	0x726c
0000000000007128	mov	x21, x0
000000000000712c	cbz	w27, 0x715c
0000000000007130	orr	x1, x22, #0x10000000000000
0000000000007134	sub	w2, w27, #0x433
0000000000007138	cmp	w27, #0x3f9
000000000000713c	b.lo	0x7174
0000000000007140	cmp	w27, #0x439
0000000000007144	b.lo	0x7188
0000000000007148	mov	w23, #0x34
000000000000714c	b	0x71a4
0000000000007150	adr	x1, #0x673b0
0000000000007154	nop
0000000000007158	b	0x7260
000000000000715c	cbz	x22, 0x71ac
0000000000007160	cmp	x22, #0x1
0000000000007164	b.ne	0x71b8
0000000000007168	adr	x1, #0x673f8
000000000000716c	nop
0000000000007170	b	0x7260
0000000000007174	mov	w23, #0x34
0000000000007178	cmn	w2, #0x3b
000000000000717c	b.ne	0x71a4
0000000000007180	cbz	x22, 0x71a4
0000000000007184	mov	w2, #-0x3b
0000000000007188	cmp	x22, #0x0
000000000000718c	cset	w4, eq
0000000000007190	mov	x0, x21
0000000000007194	mov	w3, #0x0
0000000000007198	mov	w5, #0x34
000000000000719c	bl	"_kfun:kotlin.native.internal.NumberConverter.longDigitGenerator#internal"
00000000000071a0	b	0x71fc
00000000000071a4	mov	x22, x1
00000000000071a8	b	0x71e4
00000000000071ac	adr	x1, #0x67394
00000000000071b0	nop
00000000000071b4	b	0x7260
00000000000071b8	mov	w23, #0x34
00000000000071bc	mov	x28, x22
00000000000071c0	b	0x71cc
00000000000071c4	lsl	x28, x28, #1
00000000000071c8	sub	w23, w23, #0x1
00000000000071cc	tbnz	x28, #0x34, 0x71e0
00000000000071d0	ldarb	w8, [x25]
00000000000071d4	tbz	w8, #0x0, 0x71c4
00000000000071d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000071dc	b	0x71c4
00000000000071e0	mov	w2, #-0x432
00000000000071e4	cmp	w27, #0x0
00000000000071e8	cset	w3, eq
00000000000071ec	mov	x0, x21
00000000000071f0	mov	x1, x22
00000000000071f4	mov	x4, x23
00000000000071f8	bl	"_kfun:kotlin.native.internal.NumberConverter.bigIntDigitGeneratorInstImpl#internal"
00000000000071fc	mov	x8, #0x12d000000000
0000000000007200	movk	x8, #0x4163, lsl #48
0000000000007204	fmov	d0, x8
0000000000007208	fcmp	d8, d0
000000000000720c	mov	x8, #0x12d000000000
0000000000007210	movk	x8, #0xc163, lsl #48
0000000000007214	fmov	d0, x8
0000000000007218	fccmp	d8, d0, #0x0, lt
000000000000721c	b.ls	0x7240
0000000000007220	nop
0000000000007224	ldr	d0, 0x57b40
0000000000007228	fcmp	d8, d0
000000000000722c	b.le	0x7250
0000000000007230	nop
0000000000007234	ldr	d0, 0x57b48
0000000000007238	fcmp	d8, d0
000000000000723c	b.pl	0x7250
0000000000007240	add	x1, x26, #0x18
0000000000007244	mov	x0, x21
0000000000007248	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormatExponential#internal"
000000000000724c	b	0x725c
0000000000007250	add	x1, x26, #0x20
0000000000007254	mov	x0, x21
0000000000007258	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormat#internal"
000000000000725c	mov	x1, x0
0000000000007260	mov	x0, x20
0000000000007264	mov	x2, x19
0000000000007268	bl	_Kotlin_String_plusImpl
000000000000726c	str	x0, [x19]
0000000000007270	ldr	x8, [sp, #0x48]
0000000000007274	str	x8, [x24, #0x110]
0000000000007278	str	x0, [x19]
000000000000727c	ldr	x8, [sp, #0x28]
0000000000007280	str	x8, [x24, #0x110]
0000000000007284	str	x0, [x19]
0000000000007288	ldr	x8, [sp, #0x8]
000000000000728c	str	x8, [x24, #0x110]
0000000000007290	ldp	x29, x30, [sp, #0xd0]
0000000000007294	ldp	x20, x19, [sp, #0xc0]
0000000000007298	ldp	x22, x21, [sp, #0xb0]
000000000000729c	ldp	x24, x23, [sp, #0xa0]
00000000000072a0	ldp	x26, x25, [sp, #0x90]
00000000000072a4	ldp	x28, x27, [sp, #0x80]
00000000000072a8	ldp	d9, d8, [sp, #0x70]
00000000000072ac	add	sp, sp, #0xe0
00000000000072b0	ret
00000000000072b4	mov	x0, x20
00000000000072b8	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000072bc	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
00000000000072c0	str	xzr, [sp, #0x18]
00000000000072c4	stlr	xzr, [x23]
00000000000072c8	ldr	x8, [x24, #0x128]
00000000000072cc	sub	x8, x8, #0x10
00000000000072d0	str	x8, [x24, #0x128]
00000000000072d4	bl	0x5535c ; symbol stub for: ___cxa_rethrow
00000000000072d8	brk	#0x1
00000000000072dc	mov	x19, x0
00000000000072e0	bl	0x55338 ; symbol stub for: ___cxa_end_catch
00000000000072e4	mov	x0, x19
00000000000072e8	bl	0x55194 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.Double#$<bridge-NBNB>compareTo(kotlin.Double){}kotlin.Int(kotlin.Any?){}kotlin.Int:
00000000000072ec	stp	x20, x19, [sp, #-0x20]!
00000000000072f0	stp	x29, x30, [sp, #0x10]
00000000000072f4	add	x29, sp, #0x10
00000000000072f8	mov	x19, x1
00000000000072fc	mov	x20, x0
0000000000007300	adr	x8, #0x8cf89
0000000000007304	nop
0000000000007308	ldarb	w8, [x8]
000000000000730c	tbz	w8, #0x0, 0x7314
0000000000007310	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007314	ldr	d1, [x20, #0x8]
0000000000007318	ldr	d0, [x19, #0x8]
000000000000731c	fcmp	d1, d0
0000000000007320	b.le	0x7334
0000000000007324	mov	w0, #0x1
0000000000007328	ldp	x29, x30, [sp, #0x10]
000000000000732c	ldp	x20, x19, [sp], #0x20
0000000000007330	ret
0000000000007334	mov	w0, #-0x1
0000000000007338	b.mi	0x7328
000000000000733c	fmov	x8, d1
0000000000007340	fcmp	d1, d1
0000000000007344	mov	x9, #0x7ff8000000000000
0000000000007348	csel	x8, x9, x8, vs
000000000000734c	fmov	x10, d0
0000000000007350	fcmp	d0, d0
0000000000007354	csel	x9, x9, x10, vs
0000000000007358	cmp	x8, x9
000000000000735c	cneg	w8, w0, ge
0000000000007360	csel	w0, wzr, w8, eq
0000000000007364	ldp	x29, x30, [sp, #0x10]
0000000000007368	ldp	x20, x19, [sp], #0x20
000000000000736c	ret
_kfun:kotlin.Double#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000007370	stp	x20, x19, [sp, #-0x20]!
0000000000007374	stp	x29, x30, [sp, #0x10]
0000000000007378	add	x29, sp, #0x10
000000000000737c	mov	x19, x0
0000000000007380	adr	x8, #0x8cf09
0000000000007384	nop
0000000000007388	ldarb	w8, [x8]
000000000000738c	tbz	w8, #0x0, 0x7394
0000000000007390	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007394	ldr	d0, [x19, #0x8]
0000000000007398	fcmp	d0, d0
000000000000739c	b.vs	0x73ec
00000000000073a0	mov	x8, #0xffffffc00000
00000000000073a4	movk	x8, #0x41df, lsl #48
00000000000073a8	fmov	d1, x8
00000000000073ac	fcmp	d0, d1
00000000000073b0	b.ge	0x73d8
00000000000073b4	mov	x8, #-0x3e20000000000000
00000000000073b8	fmov	d1, x8
00000000000073bc	fcmp	d0, d1
00000000000073c0	b.ls	0x73ec
00000000000073c4	fcvtzs	w8, d0
00000000000073c8	sxtb	w0, w8
00000000000073cc	ldp	x29, x30, [sp, #0x10]
00000000000073d0	ldp	x20, x19, [sp], #0x20
00000000000073d4	ret
00000000000073d8	mov	w8, #0xff
00000000000073dc	sxtb	w0, w8
00000000000073e0	ldp	x29, x30, [sp, #0x10]
00000000000073e4	ldp	x20, x19, [sp], #0x20
00000000000073e8	ret
00000000000073ec	mov	w8, #0x0
00000000000073f0	sxtb	w0, w8
00000000000073f4	ldp	x29, x30, [sp, #0x10]
00000000000073f8	ldp	x20, x19, [sp], #0x20
00000000000073fc	ret
_kfun:kotlin.Double#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
0000000000007400	stp	x20, x19, [sp, #-0x20]!
0000000000007404	stp	x29, x30, [sp, #0x10]
0000000000007408	add	x29, sp, #0x10
000000000000740c	mov	x19, x0
0000000000007410	adr	x8, #0x8ce79
0000000000007414	nop
0000000000007418	ldarb	w8, [x8]
000000000000741c	tbz	w8, #0x0, 0x7424
0000000000007420	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007424	ldr	d0, [x19, #0x8]
0000000000007428	fcmp	d0, d0
000000000000742c	b.vs	0x747c
0000000000007430	mov	x8, #0xffffffc00000
0000000000007434	movk	x8, #0x41df, lsl #48
0000000000007438	fmov	d1, x8
000000000000743c	fcmp	d0, d1
0000000000007440	b.ge	0x7468
0000000000007444	mov	x8, #-0x3e20000000000000
0000000000007448	fmov	d1, x8
000000000000744c	fcmp	d0, d1
0000000000007450	b.ls	0x747c
0000000000007454	fcvtzs	w8, d0
0000000000007458	and	w0, w8, #0xffff
000000000000745c	ldp	x29, x30, [sp, #0x10]
0000000000007460	ldp	x20, x19, [sp], #0x20
0000000000007464	ret
0000000000007468	mov	w8, #0xffff
000000000000746c	and	w0, w8, #0xffff
0000000000007470	ldp	x29, x30, [sp, #0x10]
0000000000007474	ldp	x20, x19, [sp], #0x20
0000000000007478	ret
000000000000747c	mov	w8, #0x0
0000000000007480	and	w0, w8, #0xffff
0000000000007484	ldp	x29, x30, [sp, #0x10]
0000000000007488	ldp	x20, x19, [sp], #0x20
000000000000748c	ret
_kfun:kotlin.Double#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
0000000000007490	stp	x20, x19, [sp, #-0x20]!
0000000000007494	stp	x29, x30, [sp, #0x10]
0000000000007498	add	x29, sp, #0x10
000000000000749c	mov	x19, x0
00000000000074a0	adr	x8, #0x8cde9
00000000000074a4	nop
00000000000074a8	ldarb	w8, [x8]
00000000000074ac	tbz	w8, #0x0, 0x74b4
00000000000074b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000074b4	ldr	d0, [x19, #0x8]
00000000000074b8	fcmp	d0, d0
00000000000074bc	b.vs	0x750c
00000000000074c0	mov	x8, #0xffffffc00000
00000000000074c4	movk	x8, #0x41df, lsl #48
00000000000074c8	fmov	d1, x8
00000000000074cc	fcmp	d0, d1
00000000000074d0	b.ge	0x74f8
00000000000074d4	mov	x8, #-0x3e20000000000000
00000000000074d8	fmov	d1, x8
00000000000074dc	fcmp	d0, d1
00000000000074e0	b.ls	0x750c
00000000000074e4	fcvtzs	w8, d0
00000000000074e8	sxth	w0, w8
00000000000074ec	ldp	x29, x30, [sp, #0x10]
00000000000074f0	ldp	x20, x19, [sp], #0x20
00000000000074f4	ret
00000000000074f8	mov	w8, #0xffff
00000000000074fc	sxth	w0, w8
0000000000007500	ldp	x29, x30, [sp, #0x10]
0000000000007504	ldp	x20, x19, [sp], #0x20
0000000000007508	ret
000000000000750c	mov	w8, #0x0
0000000000007510	sxth	w0, w8
0000000000007514	ldp	x29, x30, [sp, #0x10]
0000000000007518	ldp	x20, x19, [sp], #0x20
000000000000751c	ret
_kfun:kotlin.Double#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
0000000000007520	stp	x20, x19, [sp, #-0x20]!
0000000000007524	stp	x29, x30, [sp, #0x10]
0000000000007528	add	x29, sp, #0x10
000000000000752c	mov	x19, x0
0000000000007530	adr	x8, #0x8cd59
0000000000007534	nop
0000000000007538	ldarb	w8, [x8]
000000000000753c	tbz	w8, #0x0, 0x7544
0000000000007540	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007544	ldr	d0, [x19, #0x8]
0000000000007548	fcmp	d0, d0
000000000000754c	b.vs	0x75a4
0000000000007550	mov	x8, #0xffffffc00000
0000000000007554	movk	x8, #0x41df, lsl #48
0000000000007558	fmov	d1, x8
000000000000755c	fcmp	d0, d1
0000000000007560	b.ge	0x7584
0000000000007564	mov	x8, #-0x3e20000000000000
0000000000007568	fmov	d1, x8
000000000000756c	fcmp	d0, d1
0000000000007570	b.ls	0x7594
0000000000007574	fcvtzs	w0, d0
0000000000007578	ldp	x29, x30, [sp, #0x10]
000000000000757c	ldp	x20, x19, [sp], #0x20
0000000000007580	ret
0000000000007584	mov	w0, #0x7fffffff
0000000000007588	ldp	x29, x30, [sp, #0x10]
000000000000758c	ldp	x20, x19, [sp], #0x20
0000000000007590	ret
0000000000007594	mov	w0, #-0x80000000
0000000000007598	ldp	x29, x30, [sp, #0x10]
000000000000759c	ldp	x20, x19, [sp], #0x20
00000000000075a0	ret
00000000000075a4	mov	w0, #0x0
00000000000075a8	ldp	x29, x30, [sp, #0x10]
00000000000075ac	ldp	x20, x19, [sp], #0x20
00000000000075b0	ret
_kfun:kotlin.Double#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
00000000000075b4	stp	x20, x19, [sp, #-0x20]!
00000000000075b8	stp	x29, x30, [sp, #0x10]
00000000000075bc	add	x29, sp, #0x10
00000000000075c0	mov	x19, x0
00000000000075c4	adr	x8, #0x8ccc5
00000000000075c8	nop
00000000000075cc	ldarb	w8, [x8]
00000000000075d0	tbz	w8, #0x0, 0x75d8
00000000000075d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000075d8	ldr	d0, [x19, #0x8]
00000000000075dc	fcmp	d0, d0
00000000000075e0	b.vs	0x7634
00000000000075e4	mov	x8, #0x43e0000000000000
00000000000075e8	fmov	d1, x8
00000000000075ec	fcmp	d0, d1
00000000000075f0	b.ge	0x7614
00000000000075f4	mov	x8, #-0x3c20000000000000
00000000000075f8	fmov	d1, x8
00000000000075fc	fcmp	d0, d1
0000000000007600	b.ls	0x7624
0000000000007604	fcvtzs	x0, d0
0000000000007608	ldp	x29, x30, [sp, #0x10]
000000000000760c	ldp	x20, x19, [sp], #0x20
0000000000007610	ret
0000000000007614	mov	x0, #0x7fffffffffffffff
0000000000007618	ldp	x29, x30, [sp, #0x10]
000000000000761c	ldp	x20, x19, [sp], #0x20
0000000000007620	ret
0000000000007624	mov	x0, #-0x8000000000000000
0000000000007628	ldp	x29, x30, [sp, #0x10]
000000000000762c	ldp	x20, x19, [sp], #0x20
0000000000007630	ret
0000000000007634	mov	x0, #0x0
0000000000007638	ldp	x29, x30, [sp, #0x10]
000000000000763c	ldp	x20, x19, [sp], #0x20
0000000000007640	ret
_kfun:kotlin.Double#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
0000000000007644	stp	x20, x19, [sp, #-0x20]!
0000000000007648	stp	x29, x30, [sp, #0x10]
000000000000764c	add	x29, sp, #0x10
0000000000007650	mov	x19, x0
0000000000007654	adr	x8, #0x8cc35
0000000000007658	nop
000000000000765c	ldarb	w8, [x8]
0000000000007660	tbz	w8, #0x0, 0x7668
0000000000007664	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007668	ldr	d0, [x19, #0x8]
000000000000766c	fcvt	s0, d0
0000000000007670	ldp	x29, x30, [sp, #0x10]
0000000000007674	ldp	x20, x19, [sp], #0x20
0000000000007678	ret
_kfun:kotlin.Double#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
000000000000767c	stp	x20, x19, [sp, #-0x20]!
0000000000007680	stp	x29, x30, [sp, #0x10]
0000000000007684	add	x29, sp, #0x10
0000000000007688	mov	x19, x0
000000000000768c	adr	x8, #0x8cbfd
0000000000007690	nop
0000000000007694	ldarb	w8, [x8]
0000000000007698	tbz	w8, #0x0, 0x76a0
000000000000769c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000076a0	ldr	d0, [x19, #0x8]
00000000000076a4	ldp	x29, x30, [sp, #0x10]
00000000000076a8	ldp	x20, x19, [sp], #0x20
00000000000076ac	ret
_kfun:kotlin.Double#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
00000000000076b0	stp	x20, x19, [sp, #-0x20]!
00000000000076b4	stp	x29, x30, [sp, #0x10]
00000000000076b8	add	x29, sp, #0x10
00000000000076bc	mov	x19, x1
00000000000076c0	mov	x20, x0
00000000000076c4	adr	x8, #0x8cbc5
00000000000076c8	nop
00000000000076cc	ldarb	w8, [x8]
00000000000076d0	tbz	w8, #0x0, 0x76d8
00000000000076d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000076d8	cbz	x19, 0x772c
00000000000076dc	ldr	d0, [x20, #0x8]
00000000000076e0	ldr	x8, [x19]
00000000000076e4	and	x8, x8, #0xfffffffffffffffc
00000000000076e8	ldr	x8, [x8]
00000000000076ec	ldr	w8, [x8, #0x5c]
00000000000076f0	cmp	w8, #0x6a
00000000000076f4	b.ne	0x772c
00000000000076f8	ldr	d1, [x19, #0x8]
00000000000076fc	fmov	x8, d0
0000000000007700	fcmp	d0, d0
0000000000007704	mov	x9, #0x7ff8000000000000
0000000000007708	csel	x8, x9, x8, vs
000000000000770c	fcmp	d1, d1
0000000000007710	fmov	x10, d1
0000000000007714	csel	x9, x9, x10, vs
0000000000007718	cmp	x8, x9
000000000000771c	cset	w0, eq
0000000000007720	ldp	x29, x30, [sp, #0x10]
0000000000007724	ldp	x20, x19, [sp], #0x20
0000000000007728	ret
000000000000772c	mov	w0, #0x0
0000000000007730	ldp	x29, x30, [sp, #0x10]
0000000000007734	ldp	x20, x19, [sp], #0x20
0000000000007738	ret
_kfun:kotlin.Double#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
000000000000773c	stp	x20, x19, [sp, #-0x20]!
0000000000007740	stp	x29, x30, [sp, #0x10]
0000000000007744	add	x29, sp, #0x10
0000000000007748	mov	x19, x1
000000000000774c	mov	x20, x0
0000000000007750	adr	x8, #0x8cb39
0000000000007754	nop
0000000000007758	ldarb	w8, [x8]
000000000000775c	tbz	w8, #0x0, 0x7764
0000000000007760	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007764	ldr	d0, [x20, #0x8]
0000000000007768	mov	x0, x19
000000000000776c	bl	"_kfun:kotlin.Double#toString(){}kotlin.String"
0000000000007770	str	x0, [x19]
0000000000007774	ldp	x29, x30, [sp, #0x10]
0000000000007778	ldp	x20, x19, [sp], #0x20
000000000000777c	ret
_kfun:kotlin.Double#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000007780	stp	x20, x19, [sp, #-0x20]!
0000000000007784	stp	x29, x30, [sp, #0x10]
0000000000007788	add	x29, sp, #0x10
000000000000778c	mov	x19, x0
0000000000007790	adr	x8, #0x8caf9
0000000000007794	nop
0000000000007798	ldarb	w8, [x8]
000000000000779c	tbz	w8, #0x0, 0x77a4
00000000000077a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000077a4	ldr	d0, [x19, #0x8]
00000000000077a8	fcmp	d0, d0
00000000000077ac	fmov	x8, d0
00000000000077b0	mov	x9, #0x7ff8000000000000
00000000000077b4	csel	x8, x9, x8, vs
00000000000077b8	lsr	x9, x8, #32
00000000000077bc	eor	w0, w9, w8
00000000000077c0	ldp	x29, x30, [sp, #0x10]
00000000000077c4	ldp	x20, x19, [sp], #0x20
00000000000077c8	ret
_kfun:kotlin.Long#$<bridge-NBNB>compareTo(kotlin.Long){}kotlin.Int(kotlin.Any?){}kotlin.Int:
00000000000077cc	stp	x20, x19, [sp, #-0x20]!
00000000000077d0	stp	x29, x30, [sp, #0x10]
00000000000077d4	add	x29, sp, #0x10
00000000000077d8	mov	x19, x1
00000000000077dc	mov	x20, x0
00000000000077e0	adr	x8, #0x8caa9
00000000000077e4	nop
00000000000077e8	ldarb	w8, [x8]
00000000000077ec	tbz	w8, #0x0, 0x77f4
00000000000077f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000077f4	ldr	x8, [x20, #0x8]
00000000000077f8	ldr	x9, [x19, #0x8]
00000000000077fc	cmp	x8, x9
0000000000007800	mov	w8, #-0x1
0000000000007804	cneg	w8, w8, ge
0000000000007808	csel	w0, wzr, w8, eq
000000000000780c	ldp	x29, x30, [sp, #0x10]
0000000000007810	ldp	x20, x19, [sp], #0x20
0000000000007814	ret
_kfun:kotlin.Long#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000007818	stp	x20, x19, [sp, #-0x20]!
000000000000781c	stp	x29, x30, [sp, #0x10]
0000000000007820	add	x29, sp, #0x10
0000000000007824	mov	x19, x0
0000000000007828	adr	x8, #0x8ca61
000000000000782c	nop
0000000000007830	ldarb	w8, [x8]
0000000000007834	tbz	w8, #0x0, 0x783c
0000000000007838	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000783c	ldrsb	w0, [x19, #0x8]
0000000000007840	ldp	x29, x30, [sp, #0x10]
0000000000007844	ldp	x20, x19, [sp], #0x20
0000000000007848	ret
_kfun:kotlin.Long#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
000000000000784c	stp	x20, x19, [sp, #-0x20]!
0000000000007850	stp	x29, x30, [sp, #0x10]
0000000000007854	add	x29, sp, #0x10
0000000000007858	mov	x19, x0
000000000000785c	adr	x8, #0x8ca2d
0000000000007860	nop
0000000000007864	ldarb	w8, [x8]
0000000000007868	tbz	w8, #0x0, 0x7870
000000000000786c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007870	ldrh	w0, [x19, #0x8]
0000000000007874	ldp	x29, x30, [sp, #0x10]
0000000000007878	ldp	x20, x19, [sp], #0x20
000000000000787c	ret
_kfun:kotlin.Long#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
0000000000007880	stp	x20, x19, [sp, #-0x20]!
0000000000007884	stp	x29, x30, [sp, #0x10]
0000000000007888	add	x29, sp, #0x10
000000000000788c	mov	x19, x0
0000000000007890	adr	x8, #0x8c9f9
0000000000007894	nop
0000000000007898	ldarb	w8, [x8]
000000000000789c	tbz	w8, #0x0, 0x78a4
00000000000078a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000078a4	ldrsh	w0, [x19, #0x8]
00000000000078a8	ldp	x29, x30, [sp, #0x10]
00000000000078ac	ldp	x20, x19, [sp], #0x20
00000000000078b0	ret
_kfun:kotlin.Long#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
00000000000078b4	stp	x20, x19, [sp, #-0x20]!
00000000000078b8	stp	x29, x30, [sp, #0x10]
00000000000078bc	add	x29, sp, #0x10
00000000000078c0	mov	x19, x0
00000000000078c4	adr	x8, #0x8c9c5
00000000000078c8	nop
00000000000078cc	ldarb	w8, [x8]
00000000000078d0	tbz	w8, #0x0, 0x78d8
00000000000078d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000078d8	ldr	w0, [x19, #0x8]
00000000000078dc	ldp	x29, x30, [sp, #0x10]
00000000000078e0	ldp	x20, x19, [sp], #0x20
00000000000078e4	ret
_kfun:kotlin.Long#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
00000000000078e8	stp	x20, x19, [sp, #-0x20]!
00000000000078ec	stp	x29, x30, [sp, #0x10]
00000000000078f0	add	x29, sp, #0x10
00000000000078f4	mov	x19, x0
00000000000078f8	adr	x8, #0x8c991
00000000000078fc	nop
0000000000007900	ldarb	w8, [x8]
0000000000007904	tbz	w8, #0x0, 0x790c
0000000000007908	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000790c	ldr	x0, [x19, #0x8]
0000000000007910	ldp	x29, x30, [sp, #0x10]
0000000000007914	ldp	x20, x19, [sp], #0x20
0000000000007918	ret
_kfun:kotlin.Long#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
000000000000791c	stp	x20, x19, [sp, #-0x20]!
0000000000007920	stp	x29, x30, [sp, #0x10]
0000000000007924	add	x29, sp, #0x10
0000000000007928	mov	x19, x0
000000000000792c	adr	x8, #0x8c95d
0000000000007930	nop
0000000000007934	ldarb	w8, [x8]
0000000000007938	tbz	w8, #0x0, 0x7940
000000000000793c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007940	ldr	x8, [x19, #0x8]
0000000000007944	scvtf	s0, x8
0000000000007948	ldp	x29, x30, [sp, #0x10]
000000000000794c	ldp	x20, x19, [sp], #0x20
0000000000007950	ret
_kfun:kotlin.Long#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
0000000000007954	stp	x20, x19, [sp, #-0x20]!
0000000000007958	stp	x29, x30, [sp, #0x10]
000000000000795c	add	x29, sp, #0x10
0000000000007960	mov	x19, x0
0000000000007964	adr	x8, #0x8c925
0000000000007968	nop
000000000000796c	ldarb	w8, [x8]
0000000000007970	tbz	w8, #0x0, 0x7978
0000000000007974	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007978	ldr	d0, [x19, #0x8]
000000000000797c	scvtf	d0, d0
0000000000007980	ldp	x29, x30, [sp, #0x10]
0000000000007984	ldp	x20, x19, [sp], #0x20
0000000000007988	ret
_kfun:kotlin.Long#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
000000000000798c	stp	x20, x19, [sp, #-0x20]!
0000000000007990	stp	x29, x30, [sp, #0x10]
0000000000007994	add	x29, sp, #0x10
0000000000007998	mov	x19, x1
000000000000799c	mov	x20, x0
00000000000079a0	adr	x8, #0x8c8e9
00000000000079a4	nop
00000000000079a8	ldarb	w8, [x8]
00000000000079ac	tbz	w8, #0x0, 0x79b4
00000000000079b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000079b4	cbz	x19, 0x79ec
00000000000079b8	ldr	x8, [x20, #0x8]
00000000000079bc	ldr	x9, [x19]
00000000000079c0	and	x9, x9, #0xfffffffffffffffc
00000000000079c4	ldr	x9, [x9]
00000000000079c8	ldr	w9, [x9, #0x5c]
00000000000079cc	cmp	w9, #0x6b
00000000000079d0	b.ne	0x79ec
00000000000079d4	ldr	x9, [x19, #0x8]
00000000000079d8	cmp	x9, x8
00000000000079dc	cset	w0, eq
00000000000079e0	ldp	x29, x30, [sp, #0x10]
00000000000079e4	ldp	x20, x19, [sp], #0x20
00000000000079e8	ret
00000000000079ec	mov	w0, #0x0
00000000000079f0	ldp	x29, x30, [sp, #0x10]
00000000000079f4	ldp	x20, x19, [sp], #0x20
00000000000079f8	ret
_kfun:kotlin.Long#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
00000000000079fc	sub	sp, sp, #0x50
0000000000007a00	stp	x20, x19, [sp, #0x30]
0000000000007a04	stp	x29, x30, [sp, #0x40]
0000000000007a08	add	x29, sp, #0x40
0000000000007a0c	mov	x19, x1
0000000000007a10	mov	x20, x0
0000000000007a14	adr	x8, #0x8c875
0000000000007a18	nop
0000000000007a1c	ldarb	w8, [x8]
0000000000007a20	tbz	w8, #0x0, 0x7a28
0000000000007a24	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007a28	ldr	x8, [x20, #0x8]
0000000000007a2c	str	x8, [sp]
0000000000007a30	adr	x2, #0x5724e ; literal pool for: "%lld"
0000000000007a34	nop
0000000000007a38	add	x0, sp, #0x10
0000000000007a3c	mov	w1, #0x20
0000000000007a40	bl	__ZN5konan8snprintfEPcmPKcz
0000000000007a44	add	x0, sp, #0x10
0000000000007a48	mov	x1, x19
0000000000007a4c	bl	_CreateStringFromCString
0000000000007a50	str	x0, [x19]
0000000000007a54	ldp	x29, x30, [sp, #0x40]
0000000000007a58	ldp	x20, x19, [sp, #0x30]
0000000000007a5c	add	sp, sp, #0x50
0000000000007a60	ret
_kfun:kotlin.Long#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000007a64	stp	x20, x19, [sp, #-0x20]!
0000000000007a68	stp	x29, x30, [sp, #0x10]
0000000000007a6c	add	x29, sp, #0x10
0000000000007a70	mov	x19, x0
0000000000007a74	adr	x8, #0x8c815
0000000000007a78	nop
0000000000007a7c	ldarb	w8, [x8]
0000000000007a80	tbz	w8, #0x0, 0x7a88
0000000000007a84	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007a88	ldp	w8, w9, [x19, #0x8]
0000000000007a8c	eor	w0, w9, w8
0000000000007a90	ldp	x29, x30, [sp, #0x10]
0000000000007a94	ldp	x20, x19, [sp], #0x20
0000000000007a98	ret
_kfun:kotlin.Byte#$<bridge-NBNB>compareTo(kotlin.Byte){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000007a9c	stp	x20, x19, [sp, #-0x20]!
0000000000007aa0	stp	x29, x30, [sp, #0x10]
0000000000007aa4	add	x29, sp, #0x10
0000000000007aa8	mov	x19, x1
0000000000007aac	mov	x20, x0
0000000000007ab0	adr	x8, #0x8c7d9
0000000000007ab4	nop
0000000000007ab8	ldarb	w8, [x8]
0000000000007abc	tbz	w8, #0x0, 0x7ac4
0000000000007ac0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007ac4	ldrb	w8, [x20, #0x8]
0000000000007ac8	sxtb	w9, w8
0000000000007acc	ldrb	w10, [x19, #0x8]
0000000000007ad0	cmp	w9, w10, sxtb
0000000000007ad4	mov	w9, #-0x1
0000000000007ad8	cneg	w9, w9, ge
0000000000007adc	cmp	w8, w10
0000000000007ae0	csel	w0, wzr, w9, eq
0000000000007ae4	ldp	x29, x30, [sp, #0x10]
0000000000007ae8	ldp	x20, x19, [sp], #0x20
0000000000007aec	ret
_kfun:kotlin.Byte#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000007af0	stp	x20, x19, [sp, #-0x20]!
0000000000007af4	stp	x29, x30, [sp, #0x10]
0000000000007af8	add	x29, sp, #0x10
0000000000007afc	mov	x19, x0
0000000000007b00	adr	x8, #0x8c789
0000000000007b04	nop
0000000000007b08	ldarb	w8, [x8]
0000000000007b0c	tbz	w8, #0x0, 0x7b14
0000000000007b10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007b14	ldrsb	w0, [x19, #0x8]
0000000000007b18	ldp	x29, x30, [sp, #0x10]
0000000000007b1c	ldp	x20, x19, [sp], #0x20
0000000000007b20	ret
_kfun:kotlin.Byte#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
0000000000007b24	stp	x20, x19, [sp, #-0x20]!
0000000000007b28	stp	x29, x30, [sp, #0x10]
0000000000007b2c	add	x29, sp, #0x10
0000000000007b30	mov	x19, x0
0000000000007b34	adr	x8, #0x8c755
0000000000007b38	nop
0000000000007b3c	ldarb	w8, [x8]
0000000000007b40	tbz	w8, #0x0, 0x7b48
0000000000007b44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007b48	ldrsb	w8, [x19, #0x8]
0000000000007b4c	and	w0, w8, #0xffff
0000000000007b50	ldp	x29, x30, [sp, #0x10]
0000000000007b54	ldp	x20, x19, [sp], #0x20
0000000000007b58	ret
_kfun:kotlin.Byte#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
0000000000007b5c	stp	x20, x19, [sp, #-0x20]!
0000000000007b60	stp	x29, x30, [sp, #0x10]
0000000000007b64	add	x29, sp, #0x10
0000000000007b68	mov	x19, x0
0000000000007b6c	adr	x8, #0x8c71d
0000000000007b70	nop
0000000000007b74	ldarb	w8, [x8]
0000000000007b78	tbz	w8, #0x0, 0x7b80
0000000000007b7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007b80	ldrsb	w0, [x19, #0x8]
0000000000007b84	ldp	x29, x30, [sp, #0x10]
0000000000007b88	ldp	x20, x19, [sp], #0x20
0000000000007b8c	ret
_kfun:kotlin.Byte#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
0000000000007b90	stp	x20, x19, [sp, #-0x20]!
0000000000007b94	stp	x29, x30, [sp, #0x10]
0000000000007b98	add	x29, sp, #0x10
0000000000007b9c	mov	x19, x0
0000000000007ba0	adr	x8, #0x8c6e9
0000000000007ba4	nop
0000000000007ba8	ldarb	w8, [x8]
0000000000007bac	tbz	w8, #0x0, 0x7bb4
0000000000007bb0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007bb4	ldrsb	w0, [x19, #0x8]
0000000000007bb8	ldp	x29, x30, [sp, #0x10]
0000000000007bbc	ldp	x20, x19, [sp], #0x20
0000000000007bc0	ret
_kfun:kotlin.Byte#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
0000000000007bc4	stp	x20, x19, [sp, #-0x20]!
0000000000007bc8	stp	x29, x30, [sp, #0x10]
0000000000007bcc	add	x29, sp, #0x10
0000000000007bd0	mov	x19, x0
0000000000007bd4	adr	x8, #0x8c6b5
0000000000007bd8	nop
0000000000007bdc	ldarb	w8, [x8]
0000000000007be0	tbz	w8, #0x0, 0x7be8
0000000000007be4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007be8	ldrsb	x0, [x19, #0x8]
0000000000007bec	ldp	x29, x30, [sp, #0x10]
0000000000007bf0	ldp	x20, x19, [sp], #0x20
0000000000007bf4	ret
_kfun:kotlin.Byte#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
0000000000007bf8	stp	x20, x19, [sp, #-0x20]!
0000000000007bfc	stp	x29, x30, [sp, #0x10]
0000000000007c00	add	x29, sp, #0x10
0000000000007c04	mov	x19, x0
0000000000007c08	adr	x8, #0x8c681
0000000000007c0c	nop
0000000000007c10	ldarb	w8, [x8]
0000000000007c14	tbz	w8, #0x0, 0x7c1c
0000000000007c18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007c1c	ldr	b0, [x19, #0x8]
0000000000007c20	sshll.8h	v0, v0, #0x0
0000000000007c24	sshll.4s	v0, v0, #0x0
0000000000007c28	scvtf	s0, s0
0000000000007c2c	ldp	x29, x30, [sp, #0x10]
0000000000007c30	ldp	x20, x19, [sp], #0x20
0000000000007c34	ret
_kfun:kotlin.Byte#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
0000000000007c38	stp	x20, x19, [sp, #-0x20]!
0000000000007c3c	stp	x29, x30, [sp, #0x10]
0000000000007c40	add	x29, sp, #0x10
0000000000007c44	mov	x19, x0
0000000000007c48	adr	x8, #0x8c641
0000000000007c4c	nop
0000000000007c50	ldarb	w8, [x8]
0000000000007c54	tbz	w8, #0x0, 0x7c5c
0000000000007c58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007c5c	ldrsb	w8, [x19, #0x8]
0000000000007c60	scvtf	d0, w8
0000000000007c64	ldp	x29, x30, [sp, #0x10]
0000000000007c68	ldp	x20, x19, [sp], #0x20
0000000000007c6c	ret
_kfun:kotlin.Byte#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000007c70	stp	x20, x19, [sp, #-0x20]!
0000000000007c74	stp	x29, x30, [sp, #0x10]
0000000000007c78	add	x29, sp, #0x10
0000000000007c7c	mov	x19, x1
0000000000007c80	mov	x20, x0
0000000000007c84	adr	x8, #0x8c605
0000000000007c88	nop
0000000000007c8c	ldarb	w8, [x8]
0000000000007c90	tbz	w8, #0x0, 0x7c98
0000000000007c94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007c98	cbz	x19, 0x7cd0
0000000000007c9c	ldrb	w8, [x20, #0x8]
0000000000007ca0	ldr	x9, [x19]
0000000000007ca4	and	x9, x9, #0xfffffffffffffffc
0000000000007ca8	ldr	x9, [x9]
0000000000007cac	ldr	w9, [x9, #0x5c]
0000000000007cb0	cmp	w9, #0x6c
0000000000007cb4	b.ne	0x7cd0
0000000000007cb8	ldrb	w9, [x19, #0x8]
0000000000007cbc	cmp	w9, w8
0000000000007cc0	cset	w0, eq
0000000000007cc4	ldp	x29, x30, [sp, #0x10]
0000000000007cc8	ldp	x20, x19, [sp], #0x20
0000000000007ccc	ret
0000000000007cd0	mov	w0, #0x0
0000000000007cd4	ldp	x29, x30, [sp, #0x10]
0000000000007cd8	ldp	x20, x19, [sp], #0x20
0000000000007cdc	ret
_kfun:kotlin.Byte#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000007ce0	sub	sp, sp, #0x30
0000000000007ce4	stp	x20, x19, [sp, #0x10]
0000000000007ce8	stp	x29, x30, [sp, #0x20]
0000000000007cec	add	x29, sp, #0x20
0000000000007cf0	mov	x19, x1
0000000000007cf4	mov	x20, x0
0000000000007cf8	adr	x8, #0x8c591
0000000000007cfc	nop
0000000000007d00	ldarb	w8, [x8]
0000000000007d04	tbz	w8, #0x0, 0x7d0c
0000000000007d08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007d0c	ldrsb	x8, [x20, #0x8]
0000000000007d10	str	x8, [sp]
0000000000007d14	adr	x2, #0x56f6f ; literal pool for: "%d"
0000000000007d18	nop
0000000000007d1c	add	x0, sp, #0x8
0000000000007d20	mov	w1, #0x8
0000000000007d24	bl	__ZN5konan8snprintfEPcmPKcz
0000000000007d28	add	x0, sp, #0x8
0000000000007d2c	mov	x1, x19
0000000000007d30	bl	_CreateStringFromCString
0000000000007d34	str	x0, [x19]
0000000000007d38	ldp	x29, x30, [sp, #0x20]
0000000000007d3c	ldp	x20, x19, [sp, #0x10]
0000000000007d40	add	sp, sp, #0x30
0000000000007d44	ret
_kfun:kotlin.Byte#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000007d48	stp	x20, x19, [sp, #-0x20]!
0000000000007d4c	stp	x29, x30, [sp, #0x10]
0000000000007d50	add	x29, sp, #0x10
0000000000007d54	mov	x19, x0
0000000000007d58	adr	x8, #0x8c531
0000000000007d5c	nop
0000000000007d60	ldarb	w8, [x8]
0000000000007d64	tbz	w8, #0x0, 0x7d6c
0000000000007d68	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007d6c	ldrsb	w0, [x19, #0x8]
0000000000007d70	ldp	x29, x30, [sp, #0x10]
0000000000007d74	ldp	x20, x19, [sp], #0x20
0000000000007d78	ret
_kfun:kotlin.Short#$<bridge-NBNB>compareTo(kotlin.Short){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000007d7c	stp	x20, x19, [sp, #-0x20]!
0000000000007d80	stp	x29, x30, [sp, #0x10]
0000000000007d84	add	x29, sp, #0x10
0000000000007d88	mov	x19, x1
0000000000007d8c	mov	x20, x0
0000000000007d90	adr	x8, #0x8c4f9
0000000000007d94	nop
0000000000007d98	ldarb	w8, [x8]
0000000000007d9c	tbz	w8, #0x0, 0x7da4
0000000000007da0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007da4	ldrh	w8, [x20, #0x8]
0000000000007da8	sxth	w9, w8
0000000000007dac	ldrh	w10, [x19, #0x8]
0000000000007db0	cmp	w9, w10, sxth
0000000000007db4	mov	w9, #-0x1
0000000000007db8	cneg	w9, w9, ge
0000000000007dbc	cmp	w8, w10
0000000000007dc0	csel	w0, wzr, w9, eq
0000000000007dc4	ldp	x29, x30, [sp, #0x10]
0000000000007dc8	ldp	x20, x19, [sp], #0x20
0000000000007dcc	ret
_kfun:kotlin.Short#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000007dd0	stp	x20, x19, [sp, #-0x20]!
0000000000007dd4	stp	x29, x30, [sp, #0x10]
0000000000007dd8	add	x29, sp, #0x10
0000000000007ddc	mov	x19, x0
0000000000007de0	adr	x8, #0x8c4a9
0000000000007de4	nop
0000000000007de8	ldarb	w8, [x8]
0000000000007dec	tbz	w8, #0x0, 0x7df4
0000000000007df0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007df4	ldrsb	w0, [x19, #0x8]
0000000000007df8	ldp	x29, x30, [sp, #0x10]
0000000000007dfc	ldp	x20, x19, [sp], #0x20
0000000000007e00	ret
_kfun:kotlin.Short#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
0000000000007e04	stp	x20, x19, [sp, #-0x20]!
0000000000007e08	stp	x29, x30, [sp, #0x10]
0000000000007e0c	add	x29, sp, #0x10
0000000000007e10	mov	x19, x0
0000000000007e14	adr	x8, #0x8c475
0000000000007e18	nop
0000000000007e1c	ldarb	w8, [x8]
0000000000007e20	tbz	w8, #0x0, 0x7e28
0000000000007e24	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007e28	ldrh	w0, [x19, #0x8]
0000000000007e2c	ldp	x29, x30, [sp, #0x10]
0000000000007e30	ldp	x20, x19, [sp], #0x20
0000000000007e34	ret
_kfun:kotlin.Short#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
0000000000007e38	stp	x20, x19, [sp, #-0x20]!
0000000000007e3c	stp	x29, x30, [sp, #0x10]
0000000000007e40	add	x29, sp, #0x10
0000000000007e44	mov	x19, x0
0000000000007e48	adr	x8, #0x8c441
0000000000007e4c	nop
0000000000007e50	ldarb	w8, [x8]
0000000000007e54	tbz	w8, #0x0, 0x7e5c
0000000000007e58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007e5c	ldrsh	w0, [x19, #0x8]
0000000000007e60	ldp	x29, x30, [sp, #0x10]
0000000000007e64	ldp	x20, x19, [sp], #0x20
0000000000007e68	ret
_kfun:kotlin.Short#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
0000000000007e6c	stp	x20, x19, [sp, #-0x20]!
0000000000007e70	stp	x29, x30, [sp, #0x10]
0000000000007e74	add	x29, sp, #0x10
0000000000007e78	mov	x19, x0
0000000000007e7c	adr	x8, #0x8c40d
0000000000007e80	nop
0000000000007e84	ldarb	w8, [x8]
0000000000007e88	tbz	w8, #0x0, 0x7e90
0000000000007e8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007e90	ldrsh	w0, [x19, #0x8]
0000000000007e94	ldp	x29, x30, [sp, #0x10]
0000000000007e98	ldp	x20, x19, [sp], #0x20
0000000000007e9c	ret
_kfun:kotlin.Short#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
0000000000007ea0	stp	x20, x19, [sp, #-0x20]!
0000000000007ea4	stp	x29, x30, [sp, #0x10]
0000000000007ea8	add	x29, sp, #0x10
0000000000007eac	mov	x19, x0
0000000000007eb0	adr	x8, #0x8c3d9
0000000000007eb4	nop
0000000000007eb8	ldarb	w8, [x8]
0000000000007ebc	tbz	w8, #0x0, 0x7ec4
0000000000007ec0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007ec4	ldrsh	x0, [x19, #0x8]
0000000000007ec8	ldp	x29, x30, [sp, #0x10]
0000000000007ecc	ldp	x20, x19, [sp], #0x20
0000000000007ed0	ret
_kfun:kotlin.Short#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
0000000000007ed4	stp	x20, x19, [sp, #-0x20]!
0000000000007ed8	stp	x29, x30, [sp, #0x10]
0000000000007edc	add	x29, sp, #0x10
0000000000007ee0	mov	x19, x0
0000000000007ee4	adr	x8, #0x8c3a5
0000000000007ee8	nop
0000000000007eec	ldarb	w8, [x8]
0000000000007ef0	tbz	w8, #0x0, 0x7ef8
0000000000007ef4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007ef8	ldr	h0, [x19, #0x8]
0000000000007efc	sshll.4s	v0, v0, #0x0
0000000000007f00	scvtf	s0, s0
0000000000007f04	ldp	x29, x30, [sp, #0x10]
0000000000007f08	ldp	x20, x19, [sp], #0x20
0000000000007f0c	ret
_kfun:kotlin.Short#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
0000000000007f10	stp	x20, x19, [sp, #-0x20]!
0000000000007f14	stp	x29, x30, [sp, #0x10]
0000000000007f18	add	x29, sp, #0x10
0000000000007f1c	mov	x19, x0
0000000000007f20	adr	x8, #0x8c369
0000000000007f24	nop
0000000000007f28	ldarb	w8, [x8]
0000000000007f2c	tbz	w8, #0x0, 0x7f34
0000000000007f30	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007f34	ldr	h0, [x19, #0x8]
0000000000007f38	sshll.4s	v0, v0, #0x0
0000000000007f3c	sshll.2d	v0, v0, #0x0
0000000000007f40	scvtf	d0, d0
0000000000007f44	ldp	x29, x30, [sp, #0x10]
0000000000007f48	ldp	x20, x19, [sp], #0x20
0000000000007f4c	ret
_kfun:kotlin.Short#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000007f50	stp	x20, x19, [sp, #-0x20]!
0000000000007f54	stp	x29, x30, [sp, #0x10]
0000000000007f58	add	x29, sp, #0x10
0000000000007f5c	mov	x19, x1
0000000000007f60	mov	x20, x0
0000000000007f64	adr	x8, #0x8c325
0000000000007f68	nop
0000000000007f6c	ldarb	w8, [x8]
0000000000007f70	tbz	w8, #0x0, 0x7f78
0000000000007f74	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007f78	cbz	x19, 0x7fb0
0000000000007f7c	ldrh	w8, [x20, #0x8]
0000000000007f80	ldr	x9, [x19]
0000000000007f84	and	x9, x9, #0xfffffffffffffffc
0000000000007f88	ldr	x9, [x9]
0000000000007f8c	ldr	w9, [x9, #0x5c]
0000000000007f90	cmp	w9, #0x6d
0000000000007f94	b.ne	0x7fb0
0000000000007f98	ldrh	w9, [x19, #0x8]
0000000000007f9c	cmp	w9, w8
0000000000007fa0	cset	w0, eq
0000000000007fa4	ldp	x29, x30, [sp, #0x10]
0000000000007fa8	ldp	x20, x19, [sp], #0x20
0000000000007fac	ret
0000000000007fb0	mov	w0, #0x0
0000000000007fb4	ldp	x29, x30, [sp, #0x10]
0000000000007fb8	ldp	x20, x19, [sp], #0x20
0000000000007fbc	ret
_kfun:kotlin.Short#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000007fc0	sub	sp, sp, #0x30
0000000000007fc4	stp	x20, x19, [sp, #0x10]
0000000000007fc8	stp	x29, x30, [sp, #0x20]
0000000000007fcc	add	x29, sp, #0x20
0000000000007fd0	mov	x19, x1
0000000000007fd4	mov	x20, x0
0000000000007fd8	adr	x8, #0x8c2b1
0000000000007fdc	nop
0000000000007fe0	ldarb	w8, [x8]
0000000000007fe4	tbz	w8, #0x0, 0x7fec
0000000000007fe8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007fec	ldrsh	x8, [x20, #0x8]
0000000000007ff0	str	x8, [sp]
0000000000007ff4	adr	x2, #0x56c8f ; literal pool for: "%d"
0000000000007ff8	nop
0000000000007ffc	add	x0, sp, #0x8
0000000000008000	mov	w1, #0x8
0000000000008004	bl	__ZN5konan8snprintfEPcmPKcz
0000000000008008	add	x0, sp, #0x8
000000000000800c	mov	x1, x19
0000000000008010	bl	_CreateStringFromCString
0000000000008014	str	x0, [x19]
0000000000008018	ldp	x29, x30, [sp, #0x20]
000000000000801c	ldp	x20, x19, [sp, #0x10]
0000000000008020	add	sp, sp, #0x30
0000000000008024	ret
_kfun:kotlin.Short#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000008028	stp	x20, x19, [sp, #-0x20]!
000000000000802c	stp	x29, x30, [sp, #0x10]
0000000000008030	add	x29, sp, #0x10
0000000000008034	mov	x19, x0
0000000000008038	adr	x8, #0x8c251
000000000000803c	nop
0000000000008040	ldarb	w8, [x8]
0000000000008044	tbz	w8, #0x0, 0x804c
0000000000008048	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000804c	ldrsh	w0, [x19, #0x8]
0000000000008050	ldp	x29, x30, [sp, #0x10]
0000000000008054	ldp	x20, x19, [sp], #0x20
0000000000008058	ret
_kfun:kotlin.Float#$<bridge-NBNB>compareTo(kotlin.Float){}kotlin.Int(kotlin.Any?){}kotlin.Int:
000000000000805c	stp	x20, x19, [sp, #-0x20]!
0000000000008060	stp	x29, x30, [sp, #0x10]
0000000000008064	add	x29, sp, #0x10
0000000000008068	mov	x19, x1
000000000000806c	mov	x20, x0
0000000000008070	adr	x8, #0x8c219
0000000000008074	nop
0000000000008078	ldarb	w8, [x8]
000000000000807c	tbz	w8, #0x0, 0x8084
0000000000008080	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008084	ldr	s1, [x20, #0x8]
0000000000008088	ldr	s0, [x19, #0x8]
000000000000808c	fcmp	s1, s0
0000000000008090	b.le	0x80a4
0000000000008094	mov	w0, #0x1
0000000000008098	ldp	x29, x30, [sp, #0x10]
000000000000809c	ldp	x20, x19, [sp], #0x20
00000000000080a0	ret
00000000000080a4	mov	w0, #-0x1
00000000000080a8	b.mi	0x8098
00000000000080ac	fmov	w8, s1
00000000000080b0	fcmp	s1, s1
00000000000080b4	mov	w9, #0x7fc00000
00000000000080b8	csel	w8, w9, w8, vs
00000000000080bc	fmov	w10, s0
00000000000080c0	fcmp	s0, s0
00000000000080c4	csel	w9, w9, w10, vs
00000000000080c8	cmp	w8, w9
00000000000080cc	cneg	w8, w0, ge
00000000000080d0	csel	w0, wzr, w8, eq
00000000000080d4	ldp	x29, x30, [sp, #0x10]
00000000000080d8	ldp	x20, x19, [sp], #0x20
00000000000080dc	ret
_kfun:kotlin.Float#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
00000000000080e0	stp	x20, x19, [sp, #-0x20]!
00000000000080e4	stp	x29, x30, [sp, #0x10]
00000000000080e8	add	x29, sp, #0x10
00000000000080ec	mov	x19, x0
00000000000080f0	adr	x8, #0x8c199
00000000000080f4	nop
00000000000080f8	ldarb	w8, [x8]
00000000000080fc	tbz	w8, #0x0, 0x8104
0000000000008100	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008104	ldr	s0, [x19, #0x8]
0000000000008108	fcmp	s0, s0
000000000000810c	b.vs	0x8158
0000000000008110	mov	w8, #0x4f000000
0000000000008114	fmov	s1, w8
0000000000008118	fcmp	s0, s1
000000000000811c	b.ge	0x8144
0000000000008120	mov	w8, #-0x31000000
0000000000008124	fmov	s1, w8
0000000000008128	fcmp	s0, s1
000000000000812c	b.ls	0x8158
0000000000008130	fcvtzs	w8, s0
0000000000008134	sxtb	w0, w8
0000000000008138	ldp	x29, x30, [sp, #0x10]
000000000000813c	ldp	x20, x19, [sp], #0x20
0000000000008140	ret
0000000000008144	mov	w8, #0xff
0000000000008148	sxtb	w0, w8
000000000000814c	ldp	x29, x30, [sp, #0x10]
0000000000008150	ldp	x20, x19, [sp], #0x20
0000000000008154	ret
0000000000008158	mov	w8, #0x0
000000000000815c	sxtb	w0, w8
0000000000008160	ldp	x29, x30, [sp, #0x10]
0000000000008164	ldp	x20, x19, [sp], #0x20
0000000000008168	ret
_kfun:kotlin.Float#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
000000000000816c	stp	x20, x19, [sp, #-0x20]!
0000000000008170	stp	x29, x30, [sp, #0x10]
0000000000008174	add	x29, sp, #0x10
0000000000008178	mov	x19, x0
000000000000817c	adr	x8, #0x8c10d
0000000000008180	nop
0000000000008184	ldarb	w8, [x8]
0000000000008188	tbz	w8, #0x0, 0x8190
000000000000818c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008190	ldr	s0, [x19, #0x8]
0000000000008194	fcmp	s0, s0
0000000000008198	b.vs	0x81e4
000000000000819c	mov	w8, #0x4f000000
00000000000081a0	fmov	s1, w8
00000000000081a4	fcmp	s0, s1
00000000000081a8	b.ge	0x81d0
00000000000081ac	mov	w8, #-0x31000000
00000000000081b0	fmov	s1, w8
00000000000081b4	fcmp	s0, s1
00000000000081b8	b.ls	0x81e4
00000000000081bc	fcvtzs	w8, s0
00000000000081c0	and	w0, w8, #0xffff
00000000000081c4	ldp	x29, x30, [sp, #0x10]
00000000000081c8	ldp	x20, x19, [sp], #0x20
00000000000081cc	ret
00000000000081d0	mov	w8, #0xffff
00000000000081d4	and	w0, w8, #0xffff
00000000000081d8	ldp	x29, x30, [sp, #0x10]
00000000000081dc	ldp	x20, x19, [sp], #0x20
00000000000081e0	ret
00000000000081e4	mov	w8, #0x0
00000000000081e8	and	w0, w8, #0xffff
00000000000081ec	ldp	x29, x30, [sp, #0x10]
00000000000081f0	ldp	x20, x19, [sp], #0x20
00000000000081f4	ret
_kfun:kotlin.Float#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
00000000000081f8	stp	x20, x19, [sp, #-0x20]!
00000000000081fc	stp	x29, x30, [sp, #0x10]
0000000000008200	add	x29, sp, #0x10
0000000000008204	mov	x19, x0
0000000000008208	adr	x8, #0x8c081
000000000000820c	nop
0000000000008210	ldarb	w8, [x8]
0000000000008214	tbz	w8, #0x0, 0x821c
0000000000008218	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000821c	ldr	s0, [x19, #0x8]
0000000000008220	fcmp	s0, s0
0000000000008224	b.vs	0x8270
0000000000008228	mov	w8, #0x4f000000
000000000000822c	fmov	s1, w8
0000000000008230	fcmp	s0, s1
0000000000008234	b.ge	0x825c
0000000000008238	mov	w8, #-0x31000000
000000000000823c	fmov	s1, w8
0000000000008240	fcmp	s0, s1
0000000000008244	b.ls	0x8270
0000000000008248	fcvtzs	w8, s0
000000000000824c	sxth	w0, w8
0000000000008250	ldp	x29, x30, [sp, #0x10]
0000000000008254	ldp	x20, x19, [sp], #0x20
0000000000008258	ret
000000000000825c	mov	w8, #0xffff
0000000000008260	sxth	w0, w8
0000000000008264	ldp	x29, x30, [sp, #0x10]
0000000000008268	ldp	x20, x19, [sp], #0x20
000000000000826c	ret
0000000000008270	mov	w8, #0x0
0000000000008274	sxth	w0, w8
0000000000008278	ldp	x29, x30, [sp, #0x10]
000000000000827c	ldp	x20, x19, [sp], #0x20
0000000000008280	ret
_kfun:kotlin.Float#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
0000000000008284	stp	x20, x19, [sp, #-0x20]!
0000000000008288	stp	x29, x30, [sp, #0x10]
000000000000828c	add	x29, sp, #0x10
0000000000008290	mov	x19, x0
0000000000008294	adr	x8, #0x8bff5
0000000000008298	nop
000000000000829c	ldarb	w8, [x8]
00000000000082a0	tbz	w8, #0x0, 0x82a8
00000000000082a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000082a8	ldr	s0, [x19, #0x8]
00000000000082ac	fcmp	s0, s0
00000000000082b0	b.vs	0x8304
00000000000082b4	mov	w8, #0x4f000000
00000000000082b8	fmov	s1, w8
00000000000082bc	fcmp	s0, s1
00000000000082c0	b.ge	0x82e4
00000000000082c4	mov	w8, #-0x31000000
00000000000082c8	fmov	s1, w8
00000000000082cc	fcmp	s0, s1
00000000000082d0	b.ls	0x82f4
00000000000082d4	fcvtzs	w0, s0
00000000000082d8	ldp	x29, x30, [sp, #0x10]
00000000000082dc	ldp	x20, x19, [sp], #0x20
00000000000082e0	ret
00000000000082e4	mov	w0, #0x7fffffff
00000000000082e8	ldp	x29, x30, [sp, #0x10]
00000000000082ec	ldp	x20, x19, [sp], #0x20
00000000000082f0	ret
00000000000082f4	mov	w0, #-0x80000000
00000000000082f8	ldp	x29, x30, [sp, #0x10]
00000000000082fc	ldp	x20, x19, [sp], #0x20
0000000000008300	ret
0000000000008304	mov	w0, #0x0
0000000000008308	ldp	x29, x30, [sp, #0x10]
000000000000830c	ldp	x20, x19, [sp], #0x20
0000000000008310	ret
_kfun:kotlin.Float#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
0000000000008314	stp	x20, x19, [sp, #-0x20]!
0000000000008318	stp	x29, x30, [sp, #0x10]
000000000000831c	add	x29, sp, #0x10
0000000000008320	mov	x19, x0
0000000000008324	adr	x8, #0x8bf65
0000000000008328	nop
000000000000832c	ldarb	w8, [x8]
0000000000008330	tbz	w8, #0x0, 0x8338
0000000000008334	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008338	ldr	s0, [x19, #0x8]
000000000000833c	fcmp	s0, s0
0000000000008340	b.vs	0x8394
0000000000008344	mov	w8, #0x5f000000
0000000000008348	fmov	s1, w8
000000000000834c	fcmp	s0, s1
0000000000008350	b.ge	0x8374
0000000000008354	mov	w8, #-0x21000000
0000000000008358	fmov	s1, w8
000000000000835c	fcmp	s0, s1
0000000000008360	b.ls	0x8384
0000000000008364	fcvtzs	x0, s0
0000000000008368	ldp	x29, x30, [sp, #0x10]
000000000000836c	ldp	x20, x19, [sp], #0x20
0000000000008370	ret
0000000000008374	mov	x0, #0x7fffffffffffffff
0000000000008378	ldp	x29, x30, [sp, #0x10]
000000000000837c	ldp	x20, x19, [sp], #0x20
0000000000008380	ret
0000000000008384	mov	x0, #-0x8000000000000000
0000000000008388	ldp	x29, x30, [sp, #0x10]
000000000000838c	ldp	x20, x19, [sp], #0x20
0000000000008390	ret
0000000000008394	mov	x0, #0x0
0000000000008398	ldp	x29, x30, [sp, #0x10]
000000000000839c	ldp	x20, x19, [sp], #0x20
00000000000083a0	ret
_kfun:kotlin.Float#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
00000000000083a4	stp	x20, x19, [sp, #-0x20]!
00000000000083a8	stp	x29, x30, [sp, #0x10]
00000000000083ac	add	x29, sp, #0x10
00000000000083b0	mov	x19, x0
00000000000083b4	adr	x8, #0x8bed5
00000000000083b8	nop
00000000000083bc	ldarb	w8, [x8]
00000000000083c0	tbz	w8, #0x0, 0x83c8
00000000000083c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000083c8	ldr	s0, [x19, #0x8]
00000000000083cc	ldp	x29, x30, [sp, #0x10]
00000000000083d0	ldp	x20, x19, [sp], #0x20
00000000000083d4	ret
_kfun:kotlin.Float#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
00000000000083d8	stp	x20, x19, [sp, #-0x20]!
00000000000083dc	stp	x29, x30, [sp, #0x10]
00000000000083e0	add	x29, sp, #0x10
00000000000083e4	mov	x19, x0
00000000000083e8	adr	x8, #0x8bea1
00000000000083ec	nop
00000000000083f0	ldarb	w8, [x8]
00000000000083f4	tbz	w8, #0x0, 0x83fc
00000000000083f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000083fc	ldr	s0, [x19, #0x8]
0000000000008400	fcvt	d0, s0
0000000000008404	ldp	x29, x30, [sp, #0x10]
0000000000008408	ldp	x20, x19, [sp], #0x20
000000000000840c	ret
_kfun:kotlin.Float#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000008410	stp	x20, x19, [sp, #-0x20]!
0000000000008414	stp	x29, x30, [sp, #0x10]
0000000000008418	add	x29, sp, #0x10
000000000000841c	mov	x19, x1
0000000000008420	mov	x20, x0
0000000000008424	adr	x8, #0x8be65
0000000000008428	nop
000000000000842c	ldarb	w8, [x8]
0000000000008430	tbz	w8, #0x0, 0x8438
0000000000008434	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008438	cbz	x19, 0x848c
000000000000843c	ldr	s0, [x20, #0x8]
0000000000008440	ldr	x8, [x19]
0000000000008444	and	x8, x8, #0xfffffffffffffffc
0000000000008448	ldr	x8, [x8]
000000000000844c	ldr	w8, [x8, #0x5c]
0000000000008450	cmp	w8, #0x6e
0000000000008454	b.ne	0x848c
0000000000008458	ldr	s1, [x19, #0x8]
000000000000845c	fmov	w8, s0
0000000000008460	fcmp	s0, s0
0000000000008464	mov	w9, #0x7fc00000
0000000000008468	csel	w8, w9, w8, vs
000000000000846c	fcmp	s1, s1
0000000000008470	fmov	w10, s1
0000000000008474	csel	w9, w9, w10, vs
0000000000008478	cmp	w8, w9
000000000000847c	cset	w0, eq
0000000000008480	ldp	x29, x30, [sp, #0x10]
0000000000008484	ldp	x20, x19, [sp], #0x20
0000000000008488	ret
000000000000848c	mov	w0, #0x0
0000000000008490	ldp	x29, x30, [sp, #0x10]
0000000000008494	ldp	x20, x19, [sp], #0x20
0000000000008498	ret
_kfun:kotlin.Float#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
000000000000849c	sub	sp, sp, #0xf0
00000000000084a0	stp	d9, d8, [sp, #0x80]
00000000000084a4	stp	x28, x27, [sp, #0x90]
00000000000084a8	stp	x26, x25, [sp, #0xa0]
00000000000084ac	stp	x24, x23, [sp, #0xb0]
00000000000084b0	stp	x22, x21, [sp, #0xc0]
00000000000084b4	stp	x20, x19, [sp, #0xd0]
00000000000084b8	stp	x29, x30, [sp, #0xe0]
00000000000084bc	add	x29, sp, #0xe0
00000000000084c0	mov	x19, x1
00000000000084c4	mov	x20, x0
00000000000084c8	adr	x27, #0x8bdc1
00000000000084cc	nop
00000000000084d0	ldarb	w8, [x27]
00000000000084d4	tbz	w8, #0x0, 0x84dc
00000000000084d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000084dc	ldr	s8, [x20, #0x8]
00000000000084e0	movi.16b	v0, #0x0
00000000000084e4	stp	q0, q0, [sp, #0x10]
00000000000084e8	adrp	x23, 114 ; 0x7a000
00000000000084ec	add	x23, x23, #0x2c0
00000000000084f0	ldr	x26, [x23]
00000000000084f4	mov	x0, x23
00000000000084f8	blr	x26
00000000000084fc	ldr	x8, [x0]
0000000000008500	ldr	x9, [x8, #0x110]
0000000000008504	add	x10, sp, #0x10
0000000000008508	str	x10, [x8, #0x110]
000000000000850c	mov	x24, #0x400000000
0000000000008510	stp	x9, x24, [sp, #0x18]
0000000000008514	adr	x25, #0x8bdec
0000000000008518	nop
000000000000851c	ldar	x8, [x25]
0000000000008520	cmp	x8, #0x2
0000000000008524	b.hs	0x870c
0000000000008528	mov	x0, x23
000000000000852c	blr	x26
0000000000008530	ldr	x28, [x0]
0000000000008534	ldp	x8, x9, [x28, #0x120]
0000000000008538	cmp	x8, x9
000000000000853c	b.eq	0x855c
0000000000008540	mov	x10, x9
0000000000008544	ldr	x11, [x10, #-0x10]!
0000000000008548	cmp	x11, x25
000000000000854c	b.eq	0x8618
0000000000008550	mov	x9, x10
0000000000008554	cmp	x10, x8
0000000000008558	b.ne	0x8544
000000000000855c	add	x21, x28, #0x120
0000000000008560	add	x0, x28, #0x138
0000000000008564	mov	w9, #0x1
0000000000008568	ldaxr	w8, [x0]
000000000000856c	stlxr	w10, w9, [x0]
0000000000008570	cbnz	w10, 0x8568
0000000000008574	b	0x8584
0000000000008578	mov	w22, #0x1
000000000000857c	stlxr	w9, x22, [x25]
0000000000008580	cbz	w9, 0x8594
0000000000008584	ldaxr	x20, [x25]
0000000000008588	cbz	x20, 0x8578
000000000000858c	mov	w22, #0x0
0000000000008590	clrex
0000000000008594	cmp	x20, #0x1
0000000000008598	b.eq	0x8584
000000000000859c	cbz	x28, 0x85c8
00000000000085a0	ldaxr	w9, [x0]
00000000000085a4	stlxr	w10, w8, [x0]
00000000000085a8	cbnz	w10, 0x85a0
00000000000085ac	cbnz	w8, 0x85c8
00000000000085b0	cmp	w9, #0x1
00000000000085b4	b.ne	0x85c8
00000000000085b8	ldarb	w8, [x27]
00000000000085bc	tbz	w8, #0x0, 0x85c8
00000000000085c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000085c4	movi.16b	v0, #0x0
00000000000085c8	tbz	w22, #0x0, 0x8610
00000000000085cc	ldr	x8, [x28, #0x118]
00000000000085d0	add	x0, x8, #0x70
00000000000085d4	mov	w1, #0x20
00000000000085d8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000085dc	mov	x22, x0
00000000000085e0	adr	x8, #0x5a480
00000000000085e4	nop
00000000000085e8	str	x8, [x22, #0x10]!
00000000000085ec	stur	xzr, [x22, #-0x8]
00000000000085f0	str	x22, [sp, #0x28]
00000000000085f4	ldp	x9, x8, [x28, #0x128]
00000000000085f8	cmp	x9, x8
00000000000085fc	b.hs	0x8624
0000000000008600	stp	x25, x22, [x9]
0000000000008604	add	x8, x9, #0x10
0000000000008608	str	x8, [x28, #0x128]
000000000000860c	b	0x86bc
0000000000008610	str	x20, [sp, #0x28]
0000000000008614	b	0x870c
0000000000008618	ldur	x8, [x9, #-0x8]
000000000000861c	str	x8, [sp, #0x28]
0000000000008620	b	0x870c
0000000000008624	str	x21, [sp, #0x8]
0000000000008628	ldr	x10, [x21]
000000000000862c	sub	x9, x9, x10
0000000000008630	asr	x20, x9, #4
0000000000008634	add	x9, x20, #0x1
0000000000008638	lsr	x11, x9, #60
000000000000863c	cbnz	x11, 0x8968
0000000000008640	sub	x8, x8, x10
0000000000008644	asr	x10, x8, #3
0000000000008648	cmp	x10, x9
000000000000864c	csel	x9, x9, x10, lo
0000000000008650	mov	x10, #0x7ffffffffffffff
0000000000008654	cmp	x10, x8, asr #4
0000000000008658	mov	x8, #0xfffffffffffffff
000000000000865c	csel	x23, x9, x8, hi
0000000000008660	mov	x0, x23
0000000000008664	mov	w1, #0x10
0000000000008668	bl	0x553d4 ; symbol stub for: _calloc
000000000000866c	add	x8, x0, x20, lsl #4
0000000000008670	add	x20, x0, x23, lsl #4
0000000000008674	stp	x25, x22, [x8]
0000000000008678	add	x21, x8, #0x10
000000000000867c	ldp	x1, x9, [x28, #0x120]
0000000000008680	sub	x2, x9, x1
0000000000008684	sub	x23, x8, x2
0000000000008688	cmp	x2, #0x1
000000000000868c	b.lt	0x86a0
0000000000008690	mov	x0, x23
0000000000008694	bl	0x554ac ; symbol stub for: _memcpy
0000000000008698	ldr	x8, [sp, #0x8]
000000000000869c	ldr	x1, [x8]
00000000000086a0	stp	x23, x21, [x28, #0x120]
00000000000086a4	str	x20, [x28, #0x130]
00000000000086a8	adrp	x23, 114 ; 0x7a000
00000000000086ac	add	x23, x23, #0x2c0
00000000000086b0	cbz	x1, 0x86bc
00000000000086b4	mov	x0, x1
00000000000086b8	bl	0x55458 ; symbol stub for: _free
00000000000086bc	mov	x0, x22
00000000000086c0	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
00000000000086c4	mov	w0, #0x1
00000000000086c8	mov	w1, #0x28
00000000000086cc	bl	0x553d4 ; symbol stub for: _calloc
00000000000086d0	ldr	x8, [x28, #0x18]!
00000000000086d4	sub	x9, x28, #0x8
00000000000086d8	stp	x25, x9, [x0, #0x10]
00000000000086dc	stp	x8, x28, [x0]
00000000000086e0	str	x0, [x8, #0x8]
00000000000086e4	str	x0, [x28]
00000000000086e8	ldr	x8, [x28, #0x10]
00000000000086ec	add	x8, x8, #0x1
00000000000086f0	str	x8, [x28, #0x10]
00000000000086f4	str	x0, [x0, #0x20]
00000000000086f8	stlr	x22, [x25]
00000000000086fc	ldr	x8, [x28, #0x110]
0000000000008700	sub	x8, x8, #0x10
0000000000008704	str	x8, [x28, #0x110]
0000000000008708	movi.16b	v0, #0x0
000000000000870c	stp	q0, q0, [sp, #0x30]
0000000000008710	add	x9, sp, #0x30
0000000000008714	add	x8, x9, #0x18
0000000000008718	mov	x0, x23
000000000000871c	blr	x26
0000000000008720	mov	x21, x0
0000000000008724	ldr	x10, [x0]
0000000000008728	ldr	x11, [x10, #0x110]
000000000000872c	str	x9, [x10, #0x110]
0000000000008730	stp	x11, x24, [sp, #0x38]
0000000000008734	mov	x0, x8
0000000000008738	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion.<get-converter>#internal"
000000000000873c	movi.16b	v0, #0x0
0000000000008740	stp	q0, q0, [sp, #0x50]
0000000000008744	str	xzr, [sp, #0x70]
0000000000008748	add	x28, sp, #0x50
000000000000874c	ldr	x8, [x21]
0000000000008750	ldr	x9, [x8, #0x110]
0000000000008754	str	x28, [x8, #0x110]
0000000000008758	mov	x8, #0x500000000
000000000000875c	stp	x9, x8, [sp, #0x58]
0000000000008760	adr	x8, #0x65d80
0000000000008764	nop
0000000000008768	adr	x9, #0x65778
000000000000876c	nop
0000000000008770	fmov	w10, s8
0000000000008774	cmp	w10, #0x0
0000000000008778	csel	x21, x9, x8, ge
000000000000877c	ubfx	w20, w10, #23, #8
0000000000008780	and	w8, w10, #0x7fffff
0000000000008784	cmp	w20, #0xff
0000000000008788	b.ne	0x879c
000000000000878c	cbz	w8, 0x87c4
0000000000008790	adr	x8, #0x65d90
0000000000008794	nop
0000000000008798	b	0x8904
000000000000879c	mov	x22, x0
00000000000087a0	cbz	w20, 0x87d0
00000000000087a4	orr	w24, w8, #0x800000
00000000000087a8	sub	w23, w20, #0x96
00000000000087ac	cmp	w20, #0x5c
00000000000087b0	b.lo	0x8818
00000000000087b4	cmp	w20, #0xb9
00000000000087b8	b.lo	0x882c
00000000000087bc	mov	w25, #0x17
00000000000087c0	b	0x8854
00000000000087c4	adr	x1, #0x65d3c
00000000000087c8	nop
00000000000087cc	b	0x88f4
00000000000087d0	cbz	w8, 0x88ec
00000000000087d4	lsl	w9, w8, #2
00000000000087d8	cmp	w8, #0x8
00000000000087dc	mov	w10, #-0x95
00000000000087e0	mov	w11, #-0x97
00000000000087e4	csel	w23, w11, w10, lo
00000000000087e8	csel	w24, w9, w8, lo
00000000000087ec	mov	w25, #0x17
00000000000087f0	tbnz	w24, #0x17, 0x8854
00000000000087f4	mov	x28, x24
00000000000087f8	b	0x8808
00000000000087fc	lsl	w28, w28, #1
0000000000008800	sub	w25, w25, #0x1
0000000000008804	tbnz	w28, #0x17, 0x8850
0000000000008808	ldarb	w8, [x27]
000000000000880c	tbz	w8, #0x0, 0x87fc
0000000000008810	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008814	b	0x87fc
0000000000008818	mov	w25, #0x17
000000000000881c	cmn	w23, #0x3b
0000000000008820	b.ne	0x8854
0000000000008824	cbz	w8, 0x8854
0000000000008828	mov	w23, #-0x3b
000000000000882c	cmp	w8, #0x0
0000000000008830	cset	w4, eq
0000000000008834	mov	x0, x22
0000000000008838	mov	x1, x24
000000000000883c	mov	x2, x23
0000000000008840	mov	w3, #0x0
0000000000008844	mov	w5, #0x17
0000000000008848	bl	"_kfun:kotlin.native.internal.NumberConverter.longDigitGenerator#internal"
000000000000884c	b	0x8870
0000000000008850	add	x28, sp, #0x50
0000000000008854	cmp	w20, #0x0
0000000000008858	cset	w3, eq
000000000000885c	mov	w1, w24
0000000000008860	mov	x0, x22
0000000000008864	mov	x2, x23
0000000000008868	mov	x4, x25
000000000000886c	bl	"_kfun:kotlin.native.internal.NumberConverter.bigIntDigitGeneratorInstImpl#internal"
0000000000008870	mov	w8, #0x9680
0000000000008874	movk	w8, #0x4b18, lsl #16
0000000000008878	fmov	s0, w8
000000000000887c	fcmp	s8, s0
0000000000008880	mov	w8, #0x9680
0000000000008884	movk	w8, #0xcb18, lsl #16
0000000000008888	fmov	s0, w8
000000000000888c	fccmp	s8, s0, #0x0, lt
0000000000008890	adrp	x23, 114 ; 0x7a000
0000000000008894	add	x23, x23, #0x2c0
0000000000008898	b.ls	0x88c4
000000000000889c	mov	w8, #0x126f
00000000000088a0	movk	w8, #0xba83, lsl #16
00000000000088a4	fmov	s0, w8
00000000000088a8	fcmp	s8, s0
00000000000088ac	b.le	0x88d8
00000000000088b0	mov	w8, #0x126f
00000000000088b4	movk	w8, #0x3a83, lsl #16
00000000000088b8	fmov	s0, w8
00000000000088bc	fcmp	s8, s0
00000000000088c0	b.pl	0x88d8
00000000000088c4	add	x1, x28, #0x18
00000000000088c8	mov	x0, x22
00000000000088cc	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormatExponential#internal"
00000000000088d0	mov	x1, x0
00000000000088d4	b	0x88f4
00000000000088d8	add	x1, x28, #0x20
00000000000088dc	mov	x0, x22
00000000000088e0	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormat#internal"
00000000000088e4	mov	x1, x0
00000000000088e8	b	0x88f4
00000000000088ec	adr	x1, #0x65c54
00000000000088f0	nop
00000000000088f4	mov	x0, x21
00000000000088f8	mov	x2, x19
00000000000088fc	bl	_Kotlin_String_plusImpl
0000000000008900	mov	x8, x0
0000000000008904	str	x8, [x19]
0000000000008908	mov	x0, x23
000000000000890c	blr	x26
0000000000008910	ldr	x9, [x0]
0000000000008914	ldr	x10, [sp, #0x58]
0000000000008918	str	x10, [x9, #0x110]
000000000000891c	str	x8, [x19]
0000000000008920	ldr	x9, [x0]
0000000000008924	ldr	x10, [sp, #0x38]
0000000000008928	str	x10, [x9, #0x110]
000000000000892c	str	x8, [x19]
0000000000008930	ldr	x9, [x0]
0000000000008934	ldr	x10, [sp, #0x18]
0000000000008938	str	x10, [x9, #0x110]
000000000000893c	str	x8, [x19]
0000000000008940	mov	x0, x8
0000000000008944	ldp	x29, x30, [sp, #0xe0]
0000000000008948	ldp	x20, x19, [sp, #0xd0]
000000000000894c	ldp	x22, x21, [sp, #0xc0]
0000000000008950	ldp	x24, x23, [sp, #0xb0]
0000000000008954	ldp	x26, x25, [sp, #0xa0]
0000000000008958	ldp	x28, x27, [sp, #0x90]
000000000000895c	ldp	d9, d8, [sp, #0x80]
0000000000008960	add	sp, sp, #0xf0
0000000000008964	ret
0000000000008968	ldr	x0, [sp, #0x8]
000000000000896c	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000008970	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000008974	str	xzr, [sp, #0x28]
0000000000008978	stlr	xzr, [x25]
000000000000897c	ldr	x8, [x28, #0x128]
0000000000008980	sub	x8, x8, #0x10
0000000000008984	str	x8, [x28, #0x128]
0000000000008988	bl	0x5535c ; symbol stub for: ___cxa_rethrow
000000000000898c	brk	#0x1
0000000000008990	mov	x19, x0
0000000000008994	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000008998	mov	x0, x19
000000000000899c	bl	0x55194 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.Float#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
00000000000089a0	stp	x20, x19, [sp, #-0x20]!
00000000000089a4	stp	x29, x30, [sp, #0x10]
00000000000089a8	add	x29, sp, #0x10
00000000000089ac	mov	x19, x0
00000000000089b0	adr	x8, #0x8b8d9
00000000000089b4	nop
00000000000089b8	ldarb	w8, [x8]
00000000000089bc	tbz	w8, #0x0, 0x89c4
00000000000089c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000089c4	ldr	s0, [x19, #0x8]
00000000000089c8	fcmp	s0, s0
00000000000089cc	fmov	w8, s0
00000000000089d0	mov	w9, #0x7fc00000
00000000000089d4	csel	w0, w9, w8, vs
00000000000089d8	ldp	x29, x30, [sp, #0x10]
00000000000089dc	ldp	x20, x19, [sp], #0x20
00000000000089e0	ret
_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any:
00000000000089e4	sub	sp, sp, #0x50
00000000000089e8	stp	x22, x21, [sp, #0x20]
00000000000089ec	stp	x20, x19, [sp, #0x30]
00000000000089f0	stp	x29, x30, [sp, #0x40]
00000000000089f4	add	x29, sp, #0x40
00000000000089f8	mov	x19, x1
00000000000089fc	mov	x20, x0
0000000000008a00	movi.16b	v0, #0x0
0000000000008a04	stp	q0, q0, [sp]
0000000000008a08	adrp	x0, 114 ; 0x7a000
0000000000008a0c	add	x0, x0, #0x2c0
0000000000008a10	ldr	x8, [x0]
0000000000008a14	blr	x8
0000000000008a18	ldr	x21, [x0]
0000000000008a1c	ldr	x8, [x21, #0x110]
0000000000008a20	mov	x9, sp
0000000000008a24	str	x9, [x21, #0x110]
0000000000008a28	mov	x9, #0x400000000
0000000000008a2c	stp	x8, x9, [sp, #0x8]
0000000000008a30	adr	x8, #0x8b859
0000000000008a34	nop
0000000000008a38	ldarb	w8, [x8]
0000000000008a3c	tbz	w8, #0x0, 0x8a44
0000000000008a40	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008a44	cmp	w20, w20, sxtb
0000000000008a48	b.ne	0x8a64
0000000000008a4c	add	w8, w20, #0x80
0000000000008a50	adr	x9, #0x63430
0000000000008a54	nop
0000000000008a58	add	x0, x9, w8, sxtw #4
0000000000008a5c	str	x0, [x19]
0000000000008a60	b	0x8a8c
0000000000008a64	ldr	x8, [x21, #0x118]
0000000000008a68	add	x0, x8, #0x70
0000000000008a6c	mov	w1, #0x18
0000000000008a70	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008a74	adr	x8, #0x58fec
0000000000008a78	nop
0000000000008a7c	str	x8, [x0, #0x10]!
0000000000008a80	stur	xzr, [x0, #-0x8]
0000000000008a84	str	x0, [sp, #0x18]
0000000000008a88	str	w20, [x0, #0x8]
0000000000008a8c	str	x0, [x19]
0000000000008a90	ldr	x8, [sp, #0x8]
0000000000008a94	str	x8, [x21, #0x110]
0000000000008a98	ldp	x29, x30, [sp, #0x40]
0000000000008a9c	ldp	x20, x19, [sp, #0x30]
0000000000008aa0	ldp	x22, x21, [sp, #0x20]
0000000000008aa4	add	sp, sp, #0x50
0000000000008aa8	ret
_kfun:kotlin#<Byte-box>(kotlin.Byte){}kotlin.Any:
0000000000008aac	sub	sp, sp, #0x50
0000000000008ab0	stp	x22, x21, [sp, #0x20]
0000000000008ab4	stp	x20, x19, [sp, #0x30]
0000000000008ab8	stp	x29, x30, [sp, #0x40]
0000000000008abc	add	x29, sp, #0x40
0000000000008ac0	mov	x19, x1
0000000000008ac4	mov	x20, x0
0000000000008ac8	movi.16b	v0, #0x0
0000000000008acc	stp	q0, q0, [sp]
0000000000008ad0	adrp	x0, 114 ; 0x7a000
0000000000008ad4	add	x0, x0, #0x2c0
0000000000008ad8	ldr	x8, [x0]
0000000000008adc	blr	x8
0000000000008ae0	ldr	x21, [x0]
0000000000008ae4	ldr	x8, [x21, #0x110]
0000000000008ae8	mov	x9, sp
0000000000008aec	str	x9, [x21, #0x110]
0000000000008af0	mov	x9, #0x400000000
0000000000008af4	stp	x8, x9, [sp, #0x8]
0000000000008af8	adr	x8, #0x8b791
0000000000008afc	nop
0000000000008b00	ldarb	w8, [x8]
0000000000008b04	tbz	w8, #0x0, 0x8b0c
0000000000008b08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008b0c	adr	x8, #0x61374
0000000000008b10	nop
0000000000008b14	add	x8, x8, w20, sxtw #4
0000000000008b18	add	x0, x8, #0x800
0000000000008b1c	str	x0, [x19]
0000000000008b20	ldr	x8, [sp, #0x8]
0000000000008b24	str	x8, [x21, #0x110]
0000000000008b28	ldp	x29, x30, [sp, #0x40]
0000000000008b2c	ldp	x20, x19, [sp, #0x30]
0000000000008b30	ldp	x22, x21, [sp, #0x20]
0000000000008b34	add	sp, sp, #0x50
0000000000008b38	ret
_kfun:kotlin.String#toString(){}kotlin.String:
0000000000008b3c	stp	x20, x19, [sp, #-0x20]!
0000000000008b40	stp	x29, x30, [sp, #0x10]
0000000000008b44	add	x29, sp, #0x10
0000000000008b48	mov	x20, x1
0000000000008b4c	mov	x19, x0
0000000000008b50	adr	x8, #0x8b739
0000000000008b54	nop
0000000000008b58	ldarb	w8, [x8]
0000000000008b5c	tbz	w8, #0x0, 0x8b64
0000000000008b60	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008b64	str	x19, [x20]
0000000000008b68	mov	x0, x19
0000000000008b6c	ldp	x29, x30, [sp, #0x10]
0000000000008b70	ldp	x20, x19, [sp], #0x20
0000000000008b74	ret
_kfun:kotlin.String#<get-length>(){}kotlin.Int:
0000000000008b78	stp	x20, x19, [sp, #-0x20]!
0000000000008b7c	stp	x29, x30, [sp, #0x10]
0000000000008b80	add	x29, sp, #0x10
0000000000008b84	mov	x19, x0
0000000000008b88	adr	x8, #0x8b701
0000000000008b8c	nop
0000000000008b90	ldarb	w8, [x8]
0000000000008b94	tbz	w8, #0x0, 0x8b9c
0000000000008b98	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008b9c	ldr	w0, [x19, #0x8]
0000000000008ba0	ldp	x29, x30, [sp, #0x10]
0000000000008ba4	ldp	x20, x19, [sp], #0x20
0000000000008ba8	ret
_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}:
0000000000008bac	sub	sp, sp, #0x140
0000000000008bb0	stp	x28, x27, [sp, #0xe0]
0000000000008bb4	stp	x26, x25, [sp, #0xf0]
0000000000008bb8	stp	x24, x23, [sp, #0x100]
0000000000008bbc	stp	x22, x21, [sp, #0x110]
0000000000008bc0	stp	x20, x19, [sp, #0x120]
0000000000008bc4	stp	x29, x30, [sp, #0x130]
0000000000008bc8	add	x29, sp, #0x130
0000000000008bcc	mov	x20, x1
0000000000008bd0	mov	x19, x0
0000000000008bd4	movi.16b	v0, #0x0
0000000000008bd8	stp	q0, q0, [sp, #0x10]
0000000000008bdc	str	q0, [sp, #0x30]
0000000000008be0	add	x8, sp, #0x10
0000000000008be4	add	x21, x8, #0x18
0000000000008be8	adrp	x0, 114 ; 0x7a000
0000000000008bec	add	x0, x0, #0x2c0
0000000000008bf0	ldr	x9, [x0]
0000000000008bf4	blr	x9
0000000000008bf8	ldr	x24, [x0]
0000000000008bfc	ldr	x9, [x24, #0x110]
0000000000008c00	str	x8, [x24, #0x110]
0000000000008c04	mov	x8, #0x600000000
0000000000008c08	stp	x9, x8, [sp, #0x18]
0000000000008c0c	adr	x23, #0x8b67d
0000000000008c10	nop
0000000000008c14	ldarb	w8, [x23]
0000000000008c18	tbz	w8, #0x0, 0x8c20
0000000000008c1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008c20	stp	x20, xzr, [x19, #0x8]
0000000000008c24	mov	x0, x21
0000000000008c28	bl	_Kotlin_getCurrentStackTrace
0000000000008c2c	str	x0, [x19, #0x18]
0000000000008c30	ldr	x8, [x24, #0x118]
0000000000008c34	add	x0, x8, #0x70
0000000000008c38	mov	w1, #0x18
0000000000008c3c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008c40	mov	x21, x0
0000000000008c44	adr	x8, #0x5945c
0000000000008c48	nop
0000000000008c4c	str	x8, [x21, #0x10]!
0000000000008c50	stur	xzr, [x21, #-0x8]
0000000000008c54	str	x21, [sp, #0x30]
0000000000008c58	str	x19, [x21, #0x8]
0000000000008c5c	ldr	x8, [x24, #0x118]
0000000000008c60	add	x0, x8, #0x70
0000000000008c64	mov	w1, #0x28
0000000000008c68	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008c6c	mov	x20, x0
0000000000008c70	adr	x8, #0x59800
0000000000008c74	nop
0000000000008c78	mov	x25, x0
0000000000008c7c	str	x8, [x25, #0x10]!
0000000000008c80	str	xzr, [x0, #0x8]
0000000000008c84	movi.16b	v0, #0x0
0000000000008c88	stp	q0, q0, [sp, #0x40]
0000000000008c8c	add	x8, sp, #0x40
0000000000008c90	ldp	x9, x10, [x24, #0x110]
0000000000008c94	str	x8, [x24, #0x110]
0000000000008c98	mov	x8, #0x700000000
0000000000008c9c	stp	x9, x8, [sp, #0x48]
0000000000008ca0	str	x25, [sp, #0x38]
0000000000008ca4	str	xzr, [sp, #0x70]
0000000000008ca8	str	q0, [sp, #0x60]
0000000000008cac	add	x0, x10, #0x70
0000000000008cb0	mov	w1, #0x20
0000000000008cb4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008cb8	adr	x26, #0x59698
0000000000008cbc	nop
0000000000008cc0	str	x26, [x0, #0x10]!
0000000000008cc4	stur	xzr, [x0, #-0x8]
0000000000008cc8	str	x0, [sp, #0x58]
0000000000008ccc	str	x21, [x0, #0x8]
0000000000008cd0	str	x0, [x20, #0x18]
0000000000008cd4	adr	x27, #0x8b61c
0000000000008cd8	nop
0000000000008cdc	ldar	x21, [x27]
0000000000008ce0	cmp	x21, #0x1
0000000000008ce4	b.hi	0x8eac
0000000000008ce8	ldp	x8, x9, [x24, #0x120]
0000000000008cec	cmp	x8, x9
0000000000008cf0	b.eq	0x8d10
0000000000008cf4	mov	x10, x9
0000000000008cf8	ldr	x11, [x10, #-0x10]!
0000000000008cfc	cmp	x11, x27
0000000000008d00	b.eq	0x8dc8
0000000000008d04	mov	x9, x10
0000000000008d08	cmp	x10, x8
0000000000008d0c	b.ne	0x8cf8
0000000000008d10	add	x22, x24, #0x120
0000000000008d14	add	x0, x24, #0x138
0000000000008d18	mov	w9, #0x1
0000000000008d1c	ldaxr	w8, [x0]
0000000000008d20	stlxr	w10, w9, [x0]
0000000000008d24	cbnz	w10, 0x8d1c
0000000000008d28	b	0x8d38
0000000000008d2c	mov	w28, #0x1
0000000000008d30	stlxr	w9, x28, [x27]
0000000000008d34	cbz	w9, 0x8d48
0000000000008d38	ldaxr	x21, [x27]
0000000000008d3c	cbz	x21, 0x8d2c
0000000000008d40	mov	w28, #0x0
0000000000008d44	clrex
0000000000008d48	cmp	x21, #0x1
0000000000008d4c	b.eq	0x8d38
0000000000008d50	cbz	x24, 0x8d78
0000000000008d54	ldaxr	w9, [x0]
0000000000008d58	stlxr	w10, w8, [x0]
0000000000008d5c	cbnz	w10, 0x8d54
0000000000008d60	cbnz	w8, 0x8d78
0000000000008d64	cmp	w9, #0x1
0000000000008d68	b.ne	0x8d78
0000000000008d6c	ldarb	w8, [x23]
0000000000008d70	tbz	w8, #0x0, 0x8d78
0000000000008d74	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000008d78	tbz	w28, #0x0, 0x8dc0
0000000000008d7c	ldr	x8, [x24, #0x118]
0000000000008d80	add	x0, x8, #0x70
0000000000008d84	mov	w1, #0x10
0000000000008d88	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008d8c	mov	x21, x0
0000000000008d90	adr	x8, #0x59770
0000000000008d94	nop
0000000000008d98	str	x8, [x21, #0x10]!
0000000000008d9c	stur	xzr, [x21, #-0x8]
0000000000008da0	str	x21, [sp, #0x60]
0000000000008da4	ldp	x9, x8, [x24, #0x128]
0000000000008da8	cmp	x9, x8
0000000000008dac	b.hs	0x8dd4
0000000000008db0	stp	x27, x21, [x9]
0000000000008db4	add	x8, x9, #0x10
0000000000008db8	str	x8, [x24, #0x128]
0000000000008dbc	b	0x8e64
0000000000008dc0	str	x21, [sp, #0x60]
0000000000008dc4	b	0x8eac
0000000000008dc8	ldur	x21, [x9, #-0x8]
0000000000008dcc	str	x21, [sp, #0x60]
0000000000008dd0	b	0x8eac
0000000000008dd4	str	x22, [sp, #0x8]
0000000000008dd8	ldr	x10, [x22]
0000000000008ddc	sub	x9, x9, x10
0000000000008de0	asr	x22, x9, #4
0000000000008de4	add	x9, x22, #0x1
0000000000008de8	lsr	x11, x9, #60
0000000000008dec	cbnz	x11, 0x8f98
0000000000008df0	sub	x8, x8, x10
0000000000008df4	asr	x10, x8, #3
0000000000008df8	cmp	x10, x9
0000000000008dfc	csel	x9, x9, x10, lo
0000000000008e00	mov	x10, #0x7ffffffffffffff
0000000000008e04	cmp	x10, x8, asr #4
0000000000008e08	mov	x8, #0xfffffffffffffff
0000000000008e0c	csel	x23, x9, x8, hi
0000000000008e10	mov	x0, x23
0000000000008e14	mov	w1, #0x10
0000000000008e18	bl	0x553d4 ; symbol stub for: _calloc
0000000000008e1c	add	x8, x0, x22, lsl #4
0000000000008e20	add	x28, x0, x23, lsl #4
0000000000008e24	stp	x27, x21, [x8]
0000000000008e28	add	x22, x8, #0x10
0000000000008e2c	ldp	x1, x9, [x24, #0x120]
0000000000008e30	sub	x2, x9, x1
0000000000008e34	sub	x23, x8, x2
0000000000008e38	cmp	x2, #0x1
0000000000008e3c	b.lt	0x8e50
0000000000008e40	mov	x0, x23
0000000000008e44	bl	0x554ac ; symbol stub for: _memcpy
0000000000008e48	ldr	x8, [sp, #0x8]
0000000000008e4c	ldr	x1, [x8]
0000000000008e50	stp	x23, x22, [x24, #0x120]
0000000000008e54	str	x28, [x24, #0x130]
0000000000008e58	cbz	x1, 0x8e64
0000000000008e5c	mov	x0, x1
0000000000008e60	bl	0x55458 ; symbol stub for: _free
0000000000008e64	mov	w0, #0x1
0000000000008e68	mov	w1, #0x28
0000000000008e6c	bl	0x553d4 ; symbol stub for: _calloc
0000000000008e70	mov	x8, x24
0000000000008e74	ldr	x9, [x8, #0x18]!
0000000000008e78	sub	x10, x8, #0x8
0000000000008e7c	stp	x27, x10, [x0, #0x10]
0000000000008e80	stp	x9, x8, [x0]
0000000000008e84	str	x0, [x9, #0x8]
0000000000008e88	str	x0, [x8]
0000000000008e8c	ldr	x9, [x8, #0x10]
0000000000008e90	add	x9, x9, #0x1
0000000000008e94	str	x9, [x8, #0x10]
0000000000008e98	str	x0, [x0, #0x20]
0000000000008e9c	stlr	x21, [x27]
0000000000008ea0	ldr	x9, [x8, #0x110]
0000000000008ea4	sub	x9, x9, #0x10
0000000000008ea8	str	x9, [x8, #0x110]
0000000000008eac	ldr	x8, [x24, #0x118]
0000000000008eb0	add	x0, x8, #0x70
0000000000008eb4	mov	w1, #0x20
0000000000008eb8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008ebc	str	x26, [x0, #0x10]!
0000000000008ec0	stur	xzr, [x0, #-0x8]
0000000000008ec4	str	x0, [sp, #0x68]
0000000000008ec8	str	x21, [x0, #0x8]
0000000000008ecc	str	x0, [x20, #0x20]
0000000000008ed0	ldr	x8, [x24, #0x118]
0000000000008ed4	add	x0, x8, #0x70
0000000000008ed8	mov	w1, #0x20
0000000000008edc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008ee0	mov	x21, x0
0000000000008ee4	adr	x8, #0x596ac
0000000000008ee8	nop
0000000000008eec	str	x8, [x21, #0x10]!
0000000000008ef0	stur	xzr, [x21, #-0x8]
0000000000008ef4	movi.16b	v0, #0x0
0000000000008ef8	stp	q0, q0, [sp, #0x80]
0000000000008efc	add	x8, sp, #0x80
0000000000008f00	ldp	x9, x10, [x24, #0x110]
0000000000008f04	str	x8, [x24, #0x110]
0000000000008f08	mov	x8, #0x500000000
0000000000008f0c	stp	x9, x8, [sp, #0x88]
0000000000008f10	str	x21, [sp, #0x70]
0000000000008f14	str	xzr, [sp, #0xa0]
0000000000008f18	add	x0, x10, #0x70
0000000000008f1c	mov	w1, #0x18
0000000000008f20	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008f24	adr	x22, #0x594bc
0000000000008f28	nop
0000000000008f2c	str	x22, [x0, #0x10]!
0000000000008f30	stur	xzr, [x0, #-0x8]
0000000000008f34	str	x0, [sp, #0x98]
0000000000008f38	str	wzr, [x0, #0x8]
0000000000008f3c	str	x0, [x21, #0x8]
0000000000008f40	ldr	x8, [x24, #0x118]
0000000000008f44	add	x0, x8, #0x70
0000000000008f48	mov	w1, #0x18
0000000000008f4c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008f50	str	x22, [x0, #0x10]!
0000000000008f54	stur	xzr, [x0, #-0x8]
0000000000008f58	str	x0, [sp, #0xa0]
0000000000008f5c	str	wzr, [x0, #0x8]
0000000000008f60	str	x0, [x21, #0x10]
0000000000008f64	str	x21, [x20, #0x28]
0000000000008f68	str	x25, [sp, #0x38]
0000000000008f6c	str	x25, [x19, #0x20]
0000000000008f70	ldr	x8, [sp, #0x18]
0000000000008f74	str	x8, [x24, #0x110]
0000000000008f78	ldp	x29, x30, [sp, #0x130]
0000000000008f7c	ldp	x20, x19, [sp, #0x120]
0000000000008f80	ldp	x22, x21, [sp, #0x110]
0000000000008f84	ldp	x24, x23, [sp, #0x100]
0000000000008f88	ldp	x26, x25, [sp, #0xf0]
0000000000008f8c	ldp	x28, x27, [sp, #0xe0]
0000000000008f90	add	sp, sp, #0x140
0000000000008f94	ret
0000000000008f98	ldr	x0, [sp, #0x8]
0000000000008f9c	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
_kfun:kotlin.Throwable#<get-message>(){}kotlin.String?:
0000000000008fa0	stp	x20, x19, [sp, #-0x20]!
0000000000008fa4	stp	x29, x30, [sp, #0x10]
0000000000008fa8	add	x29, sp, #0x10
0000000000008fac	mov	x19, x1
0000000000008fb0	mov	x20, x0
0000000000008fb4	adr	x8, #0x8b2d5
0000000000008fb8	nop
0000000000008fbc	ldarb	w8, [x8]
0000000000008fc0	tbz	w8, #0x0, 0x8fc8
0000000000008fc4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008fc8	ldr	x0, [x20, #0x8]
0000000000008fcc	str	x0, [x19]
0000000000008fd0	ldp	x29, x30, [sp, #0x10]
0000000000008fd4	ldp	x20, x19, [sp], #0x20
0000000000008fd8	ret
_kfun:kotlin.Throwable#<get-cause>(){}kotlin.Throwable?:
0000000000008fdc	stp	x20, x19, [sp, #-0x20]!
0000000000008fe0	stp	x29, x30, [sp, #0x10]
0000000000008fe4	add	x29, sp, #0x10
0000000000008fe8	mov	x19, x1
0000000000008fec	mov	x20, x0
0000000000008ff0	adr	x8, #0x8b299
0000000000008ff4	nop
0000000000008ff8	ldarb	w8, [x8]
0000000000008ffc	tbz	w8, #0x0, 0x9004
0000000000009000	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009004	ldr	x0, [x20, #0x10]
0000000000009008	str	x0, [x19]
000000000000900c	ldp	x29, x30, [sp, #0x10]
0000000000009010	ldp	x20, x19, [sp], #0x20
0000000000009014	ret
_kfun:kotlin.Throwable.<get-stackTraceStrings>#internal:
0000000000009018	stp	x20, x19, [sp, #-0x20]!
000000000000901c	stp	x29, x30, [sp, #0x10]
0000000000009020	add	x29, sp, #0x10
0000000000009024	mov	x19, x1
0000000000009028	mov	x20, x0
000000000000902c	adr	x8, #0x8b25d
0000000000009030	nop
0000000000009034	ldarb	w8, [x8]
0000000000009038	tbz	w8, #0x0, 0x9040
000000000000903c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009040	ldr	x0, [x20, #0x20]
0000000000009044	ldr	x8, [x0]
0000000000009048	and	x8, x8, #0xfffffffffffffffc
000000000000904c	ldr	x8, [x8]
0000000000009050	ldr	w9, [x8, #0x3c]
0000000000009054	ldr	x8, [x8, #0x40]
0000000000009058	tbnz	w9, #0x1f, 0x9068
000000000000905c	mov	w10, #0x150
0000000000009060	and	x9, x9, x10
0000000000009064	b	0x90ec
0000000000009068	neg	w10, w9
000000000000906c	mvn	w9, w9
0000000000009070	cmp	w10, #0x9
0000000000009074	b.ge	0x90ac
0000000000009078	cmp	w10, #0x2
000000000000907c	b.lt	0x90e0
0000000000009080	mov	x10, #0x0
0000000000009084	mov	x11, x8
0000000000009088	ldr	w12, [x11]
000000000000908c	cmp	w12, #0x14f
0000000000009090	b.gt	0x90e8
0000000000009094	add	x10, x10, #0x1
0000000000009098	add	x11, x11, #0x10
000000000000909c	cmp	x9, x10
00000000000090a0	b.ne	0x9088
00000000000090a4	mov	x10, x9
00000000000090a8	b	0x90e8
00000000000090ac	mov	w10, #0x0
00000000000090b0	add	w11, w9, w10
00000000000090b4	cmp	w11, #0x0
00000000000090b8	cinc	w11, w11, lt
00000000000090bc	asr	w11, w11, #1
00000000000090c0	sbfiz	x12, x11, #4, #32
00000000000090c4	ldr	w12, [x8, x12]
00000000000090c8	cmp	w12, #0x150
00000000000090cc	csinc	w10, w10, w11, ge
00000000000090d0	csel	w9, w9, w11, lt
00000000000090d4	cmp	w10, w9
00000000000090d8	b.lt	0x90b0
00000000000090dc	b	0x90e8
00000000000090e0	mov	w10, #0x0
00000000000090e4	b	0x90e8
00000000000090e8	sxtw	x9, w10
00000000000090ec	add	x8, x8, x9, lsl #4
00000000000090f0	ldr	x8, [x8, #0x8]
00000000000090f4	ldr	x8, [x8]
00000000000090f8	mov	x1, x19
00000000000090fc	blr	x8
0000000000009100	str	x0, [x19]
0000000000009104	ldp	x29, x30, [sp, #0x10]
0000000000009108	ldp	x20, x19, [sp], #0x20
000000000000910c	ret
_kfun:kotlin.Throwable#printStackTrace(){}:
0000000000009110	sub	sp, sp, #0xd0
0000000000009114	stp	x22, x21, [sp, #0xa0]
0000000000009118	stp	x20, x19, [sp, #0xb0]
000000000000911c	stp	x29, x30, [sp, #0xc0]
0000000000009120	add	x29, sp, #0xc0
0000000000009124	mov	x19, x0
0000000000009128	movi.16b	v0, #0x0
000000000000912c	stp	q0, q0, [sp, #0x30]
0000000000009130	stp	q0, q0, [sp, #0x10]
0000000000009134	adr	x8, #0x58edc
0000000000009138	nop
000000000000913c	orr	x8, x8, #0x3
0000000000009140	str	x8, [sp, #0x8]
0000000000009144	adrp	x0, 113 ; 0x7a000
0000000000009148	add	x0, x0, #0x2c0
000000000000914c	ldr	x8, [x0]
0000000000009150	blr	x8
0000000000009154	ldr	x21, [x0]
0000000000009158	ldr	x8, [x21, #0x110]
000000000000915c	add	x9, sp, #0x30
0000000000009160	str	x9, [x21, #0x110]
0000000000009164	mov	x20, #0x400000000
0000000000009168	stp	x8, x20, [sp, #0x38]
000000000000916c	adr	x8, #0x8b11d
0000000000009170	nop
0000000000009174	ldarb	w8, [x8]
0000000000009178	tbz	w8, #0x0, 0x9180
000000000000917c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009180	add	x8, sp, #0x8
0000000000009184	str	x8, [sp, #0x48]
0000000000009188	movi.16b	v0, #0x0
000000000000918c	stp	q0, q0, [sp, #0x50]
0000000000009190	str	xzr, [sp, #0x70]
0000000000009194	add	x8, sp, #0x50
0000000000009198	ldp	x9, x10, [x21, #0x110]
000000000000919c	str	x8, [x21, #0x110]
00000000000091a0	mov	x8, #0x500000000
00000000000091a4	stp	x9, x8, [sp, #0x58]
00000000000091a8	str	x19, [sp, #0x10]
00000000000091ac	add	x0, x10, #0x70
00000000000091b0	mov	w1, #0x20
00000000000091b4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000091b8	mov	x19, x0
00000000000091bc	adr	x8, #0x5b9d4
00000000000091c0	nop
00000000000091c4	str	x8, [x19, #0x10]!
00000000000091c8	stur	xzr, [x19, #-0x8]
00000000000091cc	str	x19, [sp, #0x68]
00000000000091d0	mov	x0, x19
00000000000091d4	mov	w1, #0xa
00000000000091d8	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000091dc	str	x19, [sp, #0x18]
00000000000091e0	ldr	x8, [x21, #0x118]
00000000000091e4	add	x0, x8, #0x70
00000000000091e8	mov	w1, #0x18
00000000000091ec	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000091f0	mov	x19, x0
00000000000091f4	adr	x8, #0x5b28c
00000000000091f8	nop
00000000000091fc	str	x8, [x19, #0x10]!
0000000000009200	stur	xzr, [x19, #-0x8]
0000000000009204	str	x19, [sp, #0x70]
0000000000009208	movi.16b	v0, #0x0
000000000000920c	stp	q0, q0, [x29, #-0x40]
0000000000009210	sub	x8, x29, #0x40
0000000000009214	ldp	x9, x10, [x21, #0x110]
0000000000009218	str	x8, [x21, #0x110]
000000000000921c	stp	x9, x20, [x29, #-0x38]
0000000000009220	add	x0, x10, #0x70
0000000000009224	mov	w1, #0x60
0000000000009228	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000922c	mov	x20, x0
0000000000009230	adr	x8, #0x5aba0
0000000000009234	nop
0000000000009238	str	x8, [x20, #0x10]!
000000000000923c	stur	xzr, [x20, #-0x8]
0000000000009240	stur	x20, [x29, #-0x28]
0000000000009244	mov	x0, x20
0000000000009248	mov	w1, #0x8
000000000000924c	bl	"_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}"
0000000000009250	str	x20, [x19, #0x8]
0000000000009254	str	x19, [sp, #0x20]
0000000000009258	ldr	x8, [sp, #0x58]
000000000000925c	str	x8, [x21, #0x110]
0000000000009260	mov	w8, #0x1
0000000000009264	strb	w8, [sp, #0x28]
0000000000009268	ldr	x1, [sp, #0x10]
000000000000926c	adr	x2, #0x64c74
0000000000009270	nop
0000000000009274	add	x0, sp, #0x8
0000000000009278	mov	x3, x2
000000000000927c	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpFullTrace#internal"
0000000000009280	ldr	x8, [sp, #0x38]
0000000000009284	str	x8, [x21, #0x110]
0000000000009288	ldp	x29, x30, [sp, #0xc0]
000000000000928c	ldp	x20, x19, [sp, #0xb0]
0000000000009290	ldp	x22, x21, [sp, #0xa0]
0000000000009294	add	sp, sp, #0xd0
0000000000009298	ret
_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal:
000000000000929c	sub	sp, sp, #0xd0
00000000000092a0	stp	x24, x23, [sp, #0x90]
00000000000092a4	stp	x22, x21, [sp, #0xa0]
00000000000092a8	stp	x20, x19, [sp, #0xb0]
00000000000092ac	stp	x29, x30, [sp, #0xc0]
00000000000092b0	add	x29, sp, #0xc0
00000000000092b4	mov	x19, x1
00000000000092b8	mov	x20, x0
00000000000092bc	movi.16b	v0, #0x0
00000000000092c0	stp	q0, q0, [sp]
00000000000092c4	str	xzr, [sp, #0x20]
00000000000092c8	adrp	x0, 113 ; 0x7a000
00000000000092cc	add	x0, x0, #0x2c0
00000000000092d0	ldr	x8, [x0]
00000000000092d4	blr	x8
00000000000092d8	ldr	x22, [x0]
00000000000092dc	ldr	x8, [x22, #0x110]
00000000000092e0	mov	x9, sp
00000000000092e4	str	x9, [x22, #0x110]
00000000000092e8	mov	x9, #0x500000000
00000000000092ec	stp	x8, x9, [sp, #0x8]
00000000000092f0	adr	x8, #0x8af99
00000000000092f4	nop
00000000000092f8	ldarb	w8, [x8]
00000000000092fc	tbz	w8, #0x0, 0x9304
0000000000009300	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009304	ldrb	w8, [x20, #0x20]
0000000000009308	cmp	w8, #0x1
000000000000930c	b.ne	0x9350
0000000000009310	movi.16b	v0, #0x0
0000000000009314	stp	q0, q0, [sp, #0x30]
0000000000009318	ldr	x8, [x22, #0x110]
000000000000931c	add	x20, sp, #0x30
0000000000009320	str	x20, [x22, #0x110]
0000000000009324	mov	x9, #0x400000000
0000000000009328	stp	x8, x9, [sp, #0x38]
000000000000932c	cbz	x19, 0x9368
0000000000009330	add	x1, x20, #0x18
0000000000009334	ldr	x8, [x19]
0000000000009338	and	x8, x8, #0xfffffffffffffffc
000000000000933c	ldr	x8, [x8]
0000000000009340	ldr	x8, [x8, #0x80]
0000000000009344	mov	x0, x19
0000000000009348	blr	x8
000000000000934c	b	0x9370
0000000000009350	mov	x8, sp
0000000000009354	add	x2, x8, #0x20
0000000000009358	mov	x0, x19
000000000000935c	mov	w1, #0xa
0000000000009360	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Char){}kotlin.text.StringBuilder"
0000000000009364	b	0x9444
0000000000009368	adr	x0, #0x64c38
000000000000936c	nop
0000000000009370	bl	_Kotlin_io_Console_println
0000000000009374	ldr	x8, [sp, #0x38]
0000000000009378	str	x8, [x22, #0x110]
000000000000937c	movi.16b	v0, #0x0
0000000000009380	stp	q0, q0, [sp, #0x30]
0000000000009384	str	xzr, [sp, #0x80]
0000000000009388	stp	q0, q0, [sp, #0x60]
000000000000938c	str	q0, [sp, #0x50]
0000000000009390	str	x20, [x22, #0x110]
0000000000009394	mov	x9, #0xb00000000
0000000000009398	stp	x8, x9, [sp, #0x38]
000000000000939c	ldr	w20, [x19, #0x10]
00000000000093a0	tbz	w20, #0x1f, 0x9428
00000000000093a4	ldr	x23, [x19, #0x8]
00000000000093a8	stp	x23, x23, [sp, #0x78]
00000000000093ac	ldr	w2, [x23, #0x8]
00000000000093b0	and	w21, w2, w2, asr #31
00000000000093b4	mov	x0, x20
00000000000093b8	mov	x1, x21
00000000000093bc	bl	_checkRangeIndexes
00000000000093c0	ldr	xzr, [x23]
00000000000093c4	cmp	w20, w21
00000000000093c8	b.ge	0x9428
00000000000093cc	sxtw	x8, w20
00000000000093d0	add	x8, x23, x8, lsl #1
00000000000093d4	add	x8, x8, #0x10
00000000000093d8	mvn	w9, w20
00000000000093dc	add	w9, w21, w9
00000000000093e0	cmp	w9, #0xf
00000000000093e4	b.lo	0x9418
00000000000093e8	add	x10, x9, #0x1
00000000000093ec	and	x9, x10, #0x1fffffff0
00000000000093f0	add	w20, w20, w9
00000000000093f4	movi.16b	v0, #0x0
00000000000093f8	mov	x11, x8
00000000000093fc	mov	x12, x9
0000000000009400	stp	q0, q0, [x11], #0x20
0000000000009404	subs	x12, x12, #0x10
0000000000009408	b.ne	0x9400
000000000000940c	cmp	x10, x9
0000000000009410	b.eq	0x9428
0000000000009414	add	x8, x8, x9, lsl #1
0000000000009418	sub	w9, w21, w20
000000000000941c	strh	wzr, [x8], #0x2
0000000000009420	subs	w9, w9, #0x1
0000000000009424	b.ne	0x941c
0000000000009428	mov	x0, x19
000000000000942c	mov	w1, #0x0
0000000000009430	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
0000000000009434	str	wzr, [x19, #0x10]
0000000000009438	ldr	x8, [sp, #0x38]
000000000000943c	str	x8, [x22, #0x110]
0000000000009440	str	x19, [sp, #0x18]
0000000000009444	ldr	x8, [sp, #0x8]
0000000000009448	str	x8, [x22, #0x110]
000000000000944c	ldp	x29, x30, [sp, #0xc0]
0000000000009450	ldp	x20, x19, [sp, #0xb0]
0000000000009454	ldp	x22, x21, [sp, #0xa0]
0000000000009458	ldp	x24, x23, [sp, #0x90]
000000000000945c	add	sp, sp, #0xd0
0000000000009460	ret
_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpFullTrace#internal:
0000000000009464	sub	sp, sp, #0xa0
0000000000009468	stp	x26, x25, [sp, #0x50]
000000000000946c	stp	x24, x23, [sp, #0x60]
0000000000009470	stp	x22, x21, [sp, #0x70]
0000000000009474	stp	x20, x19, [sp, #0x80]
0000000000009478	stp	x29, x30, [sp, #0x90]
000000000000947c	add	x29, sp, #0x90
0000000000009480	mov	x21, x3
0000000000009484	mov	x19, x2
0000000000009488	mov	x22, x1
000000000000948c	mov	x20, x0
0000000000009490	movi.16b	v0, #0x0
0000000000009494	stp	q0, q0, [sp]
0000000000009498	str	xzr, [sp, #0x40]
000000000000949c	stp	q0, q0, [sp, #0x20]
00000000000094a0	mov	x25, sp
00000000000094a4	adrp	x0, 113 ; 0x7a000
00000000000094a8	add	x0, x0, #0x2c0
00000000000094ac	ldr	x8, [x0]
00000000000094b0	blr	x8
00000000000094b4	ldr	x23, [x0]
00000000000094b8	ldr	x8, [x23, #0x110]
00000000000094bc	str	x25, [x23, #0x110]
00000000000094c0	mov	x9, #0x900000000
00000000000094c4	stp	x8, x9, [sp, #0x8]
00000000000094c8	adr	x24, #0x8adc1
00000000000094cc	nop
00000000000094d0	ldarb	w8, [x24]
00000000000094d4	tbz	w8, #0x0, 0x94dc
00000000000094d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000094dc	mov	x0, x20
00000000000094e0	mov	x1, x22
00000000000094e4	mov	x2, x19
00000000000094e8	mov	x3, x21
00000000000094ec	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpSelfTrace#internal"
00000000000094f0	cbz	w0, 0x9574
00000000000094f4	add	x21, x25, #0x40
00000000000094f8	mov	x8, sp
00000000000094fc	add	x1, x8, #0x18
0000000000009500	ldr	x8, [x22]
0000000000009504	and	x8, x8, #0xfffffffffffffffc
0000000000009508	ldr	x8, [x8]
000000000000950c	ldr	x8, [x8, #0x88]
0000000000009510	mov	x0, x22
0000000000009514	blr	x8
0000000000009518	adr	x22, #0x64bf8
000000000000951c	nop
0000000000009520	b	0x955c
0000000000009524	ldr	x1, [sp, #0x20]
0000000000009528	str	x1, [sp, #0x30]
000000000000952c	mov	x0, x20
0000000000009530	mov	x2, x19
0000000000009534	mov	x3, x22
0000000000009538	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpSelfTrace#internal"
000000000000953c	ldr	x0, [sp, #0x20]
0000000000009540	str	x0, [sp, #0x38]
0000000000009544	ldr	x8, [x0]
0000000000009548	and	x8, x8, #0xfffffffffffffffc
000000000000954c	ldr	x8, [x8]
0000000000009550	ldr	x8, [x8, #0x88]
0000000000009554	mov	x1, x21
0000000000009558	blr	x8
000000000000955c	stp	x0, x0, [sp, #0x20]
0000000000009560	cbz	x0, 0x9574
0000000000009564	ldarb	w8, [x24]
0000000000009568	tbz	w8, #0x0, 0x9524
000000000000956c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009570	b	0x9524
0000000000009574	ldr	x8, [sp, #0x8]
0000000000009578	str	x8, [x23, #0x110]
000000000000957c	ldp	x29, x30, [sp, #0x90]
0000000000009580	ldp	x20, x19, [sp, #0x80]
0000000000009584	ldp	x22, x21, [sp, #0x70]
0000000000009588	ldp	x24, x23, [sp, #0x60]
000000000000958c	ldp	x26, x25, [sp, #0x50]
0000000000009590	add	sp, sp, #0xa0
0000000000009594	ret
_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpSelfTrace#internal:
0000000000009598	sub	sp, sp, #0x170
000000000000959c	stp	x28, x27, [sp, #0x110]
00000000000095a0	stp	x26, x25, [sp, #0x120]
00000000000095a4	stp	x24, x23, [sp, #0x130]
00000000000095a8	stp	x22, x21, [sp, #0x140]
00000000000095ac	stp	x20, x19, [sp, #0x150]
00000000000095b0	stp	x29, x30, [sp, #0x160]
00000000000095b4	add	x29, sp, #0x160
00000000000095b8	mov	x22, x3
00000000000095bc	str	x2, [sp, #0x28]
00000000000095c0	mov	x28, x1
00000000000095c4	mov	x20, x0
00000000000095c8	movi.16b	v0, #0x0
00000000000095cc	stp	q0, q0, [sp, #0x30]
00000000000095d0	str	xzr, [sp, #0x100]
00000000000095d4	stp	q0, q0, [sp, #0xe0]
00000000000095d8	stp	q0, q0, [sp, #0xc0]
00000000000095dc	stp	q0, q0, [sp, #0xa0]
00000000000095e0	stp	q0, q0, [sp, #0x80]
00000000000095e4	stp	q0, q0, [sp, #0x60]
00000000000095e8	str	q0, [sp, #0x50]
00000000000095ec	add	x21, sp, #0x30
00000000000095f0	adrp	x0, 113 ; 0x7a000
00000000000095f4	add	x0, x0, #0x2c0
00000000000095f8	ldr	x8, [x0]
00000000000095fc	blr	x8
0000000000009600	ldr	x19, [x0]
0000000000009604	ldr	x8, [x19, #0x110]
0000000000009608	str	x21, [x19, #0x110]
000000000000960c	mov	x9, #0x1b00000000
0000000000009610	stp	x8, x9, [sp, #0x38]
0000000000009614	adr	x8, #0x8ac75
0000000000009618	nop
000000000000961c	ldarb	w8, [x8]
0000000000009620	tbz	w8, #0x0, 0x9628
0000000000009624	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009628	ldr	x0, [x20, #0x18]
000000000000962c	ldr	x8, [x0]
0000000000009630	and	x8, x8, #0xfffffffffffffffc
0000000000009634	ldr	x8, [x8]
0000000000009638	ldr	w9, [x8, #0x3c]
000000000000963c	ldr	x8, [x8, #0x40]
0000000000009640	tbnz	w9, #0x1f, 0x964c
0000000000009644	and	x9, x9, #0xc0
0000000000009648	b	0x96d0
000000000000964c	neg	w10, w9
0000000000009650	mvn	w9, w9
0000000000009654	cmp	w10, #0x9
0000000000009658	b.ge	0x9690
000000000000965c	cmp	w10, #0x2
0000000000009660	b.lt	0x96c4
0000000000009664	mov	x10, #0x0
0000000000009668	mov	x11, x8
000000000000966c	ldr	w12, [x11]
0000000000009670	cmp	w12, #0xbf
0000000000009674	b.gt	0x96cc
0000000000009678	add	x10, x10, #0x1
000000000000967c	add	x11, x11, #0x10
0000000000009680	cmp	x9, x10
0000000000009684	b.ne	0x966c
0000000000009688	mov	x10, x9
000000000000968c	b	0x96cc
0000000000009690	mov	w10, #0x0
0000000000009694	add	w11, w9, w10
0000000000009698	cmp	w11, #0x0
000000000000969c	cinc	w11, w11, lt
00000000000096a0	asr	w11, w11, #1
00000000000096a4	sbfiz	x12, x11, #4, #32
00000000000096a8	ldr	w12, [x8, x12]
00000000000096ac	cmp	w12, #0xc0
00000000000096b0	csinc	w10, w10, w11, ge
00000000000096b4	csel	w9, w9, w11, lt
00000000000096b8	cmp	w10, w9
00000000000096bc	b.lt	0x9694
00000000000096c0	b	0x96cc
00000000000096c4	mov	w10, #0x0
00000000000096c8	b	0x96cc
00000000000096cc	sxtw	x9, w10
00000000000096d0	add	x8, x8, x9, lsl #4
00000000000096d4	ldr	x8, [x8, #0x8]
00000000000096d8	ldr	x8, [x8]
00000000000096dc	mov	x1, x28
00000000000096e0	blr	x8
00000000000096e4	ldr	x23, [x20, #0x10]
00000000000096e8	tbz	w0, #0x0, 0x97ec
00000000000096ec	str	x19, [sp, #0x10]
00000000000096f0	add	x24, x21, #0x50
00000000000096f4	add	x25, x21, #0x60
00000000000096f8	add	x2, x21, #0x48
00000000000096fc	add	x26, x21, #0x58
0000000000009700	mov	x0, x23
0000000000009704	ldr	x1, [sp, #0x28]
0000000000009708	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000970c	mov	x1, x22
0000000000009710	mov	x2, x24
0000000000009714	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009718	ldr	x8, [x28]
000000000000971c	and	x8, x8, #0xfffffffffffffffc
0000000000009720	ldr	x8, [x8]
0000000000009724	ldr	x8, [x8, #0x80]
0000000000009728	mov	x0, x28
000000000000972c	mov	x1, x26
0000000000009730	blr	x8
0000000000009734	mov	x1, x0
0000000000009738	mov	x0, x23
000000000000973c	mov	x2, x25
0000000000009740	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009744	mov	x0, x20
0000000000009748	mov	x1, x23
000000000000974c	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
0000000000009750	stp	x28, x20, [sp, #0x18]
0000000000009754	ldr	x8, [x20, #0x8]
0000000000009758	cmp	x8, x28
000000000000975c	b.eq	0x9884
0000000000009760	mov	x20, #0x0
0000000000009764	ldr	x22, [x8, #0x18]
0000000000009768	ldr	w8, [x22, #0x8]
000000000000976c	ldr	x23, [x28, #0x18]
0000000000009770	ldr	w9, [x23, #0x8]
0000000000009774	cmp	w8, w9
0000000000009778	csel	w10, w9, w8, gt
000000000000977c	add	x25, x23, #0x10
0000000000009780	add	x26, x22, #0x10
0000000000009784	bic	w24, w10, w10, asr #31
0000000000009788	sub	w27, w8, #0x1
000000000000978c	sub	w28, w9, #0x1
0000000000009790	cmp	x24, x20
0000000000009794	b.eq	0x9890
0000000000009798	adr	x8, #0x8aaf1
000000000000979c	nop
00000000000097a0	ldarb	w8, [x8]
00000000000097a4	tbz	w8, #0x0, 0x97ac
00000000000097a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000097ac	ldr	w8, [x23, #0x8]
00000000000097b0	cmp	w8, w28
00000000000097b4	b.ls	0x9d9c
00000000000097b8	ldr	w8, [x22, #0x8]
00000000000097bc	cmp	w8, w27
00000000000097c0	b.ls	0x9d9c
00000000000097c4	ldr	x8, [x25, w28, sxtw #3]
00000000000097c8	ldr	x9, [x26, w27, sxtw #3]
00000000000097cc	cmp	x8, x9
00000000000097d0	b.ne	0x988c
00000000000097d4	add	x20, x20, #0x1
00000000000097d8	sub	w27, w27, #0x1
00000000000097dc	sub	w28, w28, #0x1
00000000000097e0	cmp	x24, x20
00000000000097e4	b.ne	0x9798
00000000000097e8	b	0x9890
00000000000097ec	add	x24, x21, #0x20
00000000000097f0	add	x25, x21, #0x30
00000000000097f4	add	x26, x21, #0x40
00000000000097f8	add	x2, x21, #0x18
00000000000097fc	add	x8, sp, #0x30
0000000000009800	add	x27, x8, #0x28
0000000000009804	mov	x21, x28
0000000000009808	add	x28, x8, #0x38
000000000000980c	mov	x0, x23
0000000000009810	ldr	x1, [sp, #0x28]
0000000000009814	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009818	mov	x1, x22
000000000000981c	mov	x2, x24
0000000000009820	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009824	adr	x1, #0x6491c
0000000000009828	nop
000000000000982c	mov	x2, x27
0000000000009830	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009834	ldr	x8, [x21]
0000000000009838	and	x8, x8, #0xfffffffffffffffc
000000000000983c	ldr	x8, [x8]
0000000000009840	ldr	x8, [x8, #0x80]
0000000000009844	mov	x0, x21
0000000000009848	mov	x1, x25
000000000000984c	blr	x8
0000000000009850	mov	x1, x0
0000000000009854	mov	x0, x23
0000000000009858	mov	x2, x28
000000000000985c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009860	adr	x1, #0x647a0
0000000000009864	nop
0000000000009868	mov	x2, x26
000000000000986c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009870	mov	x0, x20
0000000000009874	mov	x1, x23
0000000000009878	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
000000000000987c	mov	w0, #0x0
0000000000009880	b	0x9d74
0000000000009884	mov	w19, #0x0
0000000000009888	b	0x98a0
000000000000988c	mov	x24, x20
0000000000009890	sub	w8, w24, #0x1
0000000000009894	bic	w19, w8, w8, asr #31
0000000000009898	add	x21, sp, #0x30
000000000000989c	ldr	x28, [sp, #0x18]
00000000000098a0	add	x1, x21, #0x68
00000000000098a4	mov	x0, x28
00000000000098a8	bl	"_kfun:kotlin.Throwable.<get-stackTraceStrings>#internal"
00000000000098ac	ldr	w8, [x0, #0x8]
00000000000098b0	str	w19, [sp, #0xc]
00000000000098b4	sub	w20, w8, w19
00000000000098b8	cmp	w20, #0x1
00000000000098bc	b.lt	0x9968
00000000000098c0	mov	x22, #0x0
00000000000098c4	add	x8, sp, #0x30
00000000000098c8	add	x23, x8, #0x70
00000000000098cc	add	x24, x8, #0x80
00000000000098d0	add	x25, x8, #0x90
00000000000098d4	add	x26, x8, #0x88
00000000000098d8	adr	x27, #0x648b8
00000000000098dc	nop
00000000000098e0	ldr	x21, [sp, #0x20]
00000000000098e4	adr	x8, #0x8a9a5
00000000000098e8	nop
00000000000098ec	ldarb	w8, [x8]
00000000000098f0	tbz	w8, #0x0, 0x98f8
00000000000098f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000098f8	mov	x0, x28
00000000000098fc	mov	x1, x23
0000000000009900	bl	"_kfun:kotlin.Throwable.<get-stackTraceStrings>#internal"
0000000000009904	ldr	w8, [x0, #0x8]
0000000000009908	cmp	x22, x8
000000000000990c	b.hs	0x9d9c
0000000000009910	add	x19, x22, #0x1
0000000000009914	add	x8, x0, x22, lsl #3
0000000000009918	ldr	x28, [x8, #0x10]
000000000000991c	str	x28, [sp, #0xa8]
0000000000009920	ldr	x22, [x21, #0x10]
0000000000009924	mov	x0, x22
0000000000009928	ldr	x1, [sp, #0x28]
000000000000992c	mov	x2, x24
0000000000009930	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009934	mov	x1, x27
0000000000009938	mov	x2, x26
000000000000993c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009940	mov	x1, x28
0000000000009944	mov	x2, x25
0000000000009948	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000994c	mov	x0, x21
0000000000009950	mov	x1, x22
0000000000009954	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
0000000000009958	mov	x22, x19
000000000000995c	cmp	x20, x19
0000000000009960	ldr	x28, [sp, #0x18]
0000000000009964	b.ne	0x98e4
0000000000009968	ldr	x26, [sp, #0x20]
000000000000996c	add	x20, sp, #0x30
0000000000009970	ldr	w19, [sp, #0xc]
0000000000009974	cbz	w19, 0x99d0
0000000000009978	add	x22, x20, #0xa0
000000000000997c	add	x23, x20, #0xb0
0000000000009980	add	x2, x20, #0x98
0000000000009984	add	x24, x20, #0xa8
0000000000009988	ldr	x25, [x26, #0x10]
000000000000998c	mov	x0, x25
0000000000009990	ldr	x1, [sp, #0x28]
0000000000009994	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009998	adr	x1, #0x64818
000000000000999c	nop
00000000000099a0	mov	x2, x22
00000000000099a4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000099a8	mov	x1, x19
00000000000099ac	mov	x2, x24
00000000000099b0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000099b4	adr	x1, #0x6482c
00000000000099b8	nop
00000000000099bc	mov	x2, x23
00000000000099c0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000099c4	mov	x0, x26
00000000000099c8	mov	x1, x25
00000000000099cc	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
00000000000099d0	ldr	x22, [x28, #0x28]
00000000000099d4	str	x22, [sp, #0xe8]
00000000000099d8	ldr	x19, [sp, #0x10]
00000000000099dc	cbz	x22, 0x9a18
00000000000099e0	ldr	x8, [x22]
00000000000099e4	and	x8, x8, #0xfffffffffffffffc
00000000000099e8	ldr	x8, [x8]
00000000000099ec	ldr	w9, [x8, #0x3c]
00000000000099f0	ldr	x8, [x8, #0x40]
00000000000099f4	tbnz	w9, #0x1f, 0x9a20
00000000000099f8	mov	w10, #0x12
00000000000099fc	and	x9, x9, x10
0000000000009a00	add	x8, x8, x9, lsl #4
0000000000009a04	ldr	x8, [x8, #0x8]
0000000000009a08	ldr	x8, [x8, #0x18]
0000000000009a0c	mov	x0, x22
0000000000009a10	blr	x8
0000000000009a14	tbz	w0, #0x0, 0x9abc
0000000000009a18	mov	w0, #0x1
0000000000009a1c	b	0x9d74
0000000000009a20	neg	w10, w9
0000000000009a24	mvn	w9, w9
0000000000009a28	cmp	w10, #0x9
0000000000009a2c	b.ge	0x9a64
0000000000009a30	cmp	w10, #0x2
0000000000009a34	b.lt	0x9a98
0000000000009a38	mov	x10, #0x0
0000000000009a3c	mov	x11, x8
0000000000009a40	ldr	w12, [x11]
0000000000009a44	cmp	w12, #0x11
0000000000009a48	b.gt	0x9aa0
0000000000009a4c	add	x10, x10, #0x1
0000000000009a50	add	x11, x11, #0x10
0000000000009a54	cmp	x9, x10
0000000000009a58	b.ne	0x9a40
0000000000009a5c	mov	x10, x9
0000000000009a60	b	0x9aa0
0000000000009a64	mov	w10, #0x0
0000000000009a68	add	w11, w9, w10
0000000000009a6c	cmp	w11, #0x0
0000000000009a70	cinc	w11, w11, lt
0000000000009a74	asr	w11, w11, #1
0000000000009a78	sbfiz	x12, x11, #4, #32
0000000000009a7c	ldr	w12, [x8, x12]
0000000000009a80	cmp	w12, #0x12
0000000000009a84	csinc	w10, w10, w11, ge
0000000000009a88	csel	w9, w9, w11, lt
0000000000009a8c	cmp	w10, w9
0000000000009a90	b.lt	0x9a68
0000000000009a94	b	0x9aa0
0000000000009a98	mov	w10, #0x0
0000000000009a9c	b	0x9aa0
0000000000009aa0	sxtw	x9, w10
0000000000009aa4	add	x8, x8, x9, lsl #4
0000000000009aa8	ldr	x8, [x8, #0x8]
0000000000009aac	ldr	x8, [x8, #0x18]
0000000000009ab0	mov	x0, x22
0000000000009ab4	blr	x8
0000000000009ab8	tbnz	w0, #0x0, 0x9a18
0000000000009abc	add	x2, x20, #0xc0
0000000000009ac0	add	x21, x20, #0xd0
0000000000009ac4	add	x23, x20, #0xc8
0000000000009ac8	adr	x1, #0x64778
0000000000009acc	nop
0000000000009ad0	ldr	x0, [sp, #0x28]
0000000000009ad4	bl	_Kotlin_String_plusImpl
0000000000009ad8	mov	x20, x0
0000000000009adc	ldr	x8, [x22]
0000000000009ae0	and	x8, x8, #0xfffffffffffffffc
0000000000009ae4	ldr	x8, [x8]
0000000000009ae8	ldr	w9, [x8, #0x3c]
0000000000009aec	ldr	x8, [x8, #0x40]
0000000000009af0	tbnz	w9, #0x1f, 0x9b00
0000000000009af4	mov	w10, #0x2b
0000000000009af8	and	x9, x9, x10
0000000000009afc	b	0x9b84
0000000000009b00	neg	w10, w9
0000000000009b04	mvn	w9, w9
0000000000009b08	cmp	w10, #0x9
0000000000009b0c	b.ge	0x9b44
0000000000009b10	cmp	w10, #0x2
0000000000009b14	b.lt	0x9b78
0000000000009b18	mov	x10, #0x0
0000000000009b1c	mov	x11, x8
0000000000009b20	ldr	w12, [x11]
0000000000009b24	cmp	w12, #0x2a
0000000000009b28	b.gt	0x9b80
0000000000009b2c	add	x10, x10, #0x1
0000000000009b30	add	x11, x11, #0x10
0000000000009b34	cmp	x9, x10
0000000000009b38	b.ne	0x9b20
0000000000009b3c	mov	x10, x9
0000000000009b40	b	0x9b80
0000000000009b44	mov	w10, #0x0
0000000000009b48	add	w11, w9, w10
0000000000009b4c	cmp	w11, #0x0
0000000000009b50	cinc	w11, w11, lt
0000000000009b54	asr	w11, w11, #1
0000000000009b58	sbfiz	x12, x11, #4, #32
0000000000009b5c	ldr	w12, [x8, x12]
0000000000009b60	cmp	w12, #0x2b
0000000000009b64	csinc	w10, w10, w11, ge
0000000000009b68	csel	w9, w9, w11, lt
0000000000009b6c	cmp	w10, w9
0000000000009b70	b.lt	0x9b48
0000000000009b74	b	0x9b80
0000000000009b78	mov	w10, #0x0
0000000000009b7c	b	0x9b80
0000000000009b80	sxtw	x9, w10
0000000000009b84	add	x8, x8, x9, lsl #4
0000000000009b88	ldr	x8, [x8, #0x8]
0000000000009b8c	ldr	x8, [x8, #0x30]
0000000000009b90	mov	x0, x22
0000000000009b94	mov	x1, x23
0000000000009b98	blr	x8
0000000000009b9c	mov	x22, x0
0000000000009ba0	mov	w24, #0xa0
0000000000009ba4	adr	x23, #0x646bc
0000000000009ba8	nop
0000000000009bac	b	0x9bf8
0000000000009bb0	ldr	x8, [x22]
0000000000009bb4	and	x8, x8, #0xfffffffffffffffc
0000000000009bb8	ldr	x8, [x8]
0000000000009bbc	ldr	w9, [x8, #0x3c]
0000000000009bc0	ldr	x8, [x8, #0x40]
0000000000009bc4	tbnz	w9, #0x1f, 0x9c74
0000000000009bc8	and	x9, x9, x24
0000000000009bcc	add	x8, x8, x9, lsl #4
0000000000009bd0	ldr	x8, [x8, #0x8]
0000000000009bd4	ldr	x8, [x8, #0x8]
0000000000009bd8	mov	x0, x22
0000000000009bdc	mov	x1, x21
0000000000009be0	blr	x8
0000000000009be4	mov	x1, x0
0000000000009be8	mov	x0, x26
0000000000009bec	mov	x2, x20
0000000000009bf0	mov	x3, x23
0000000000009bf4	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpFullTrace#internal"
0000000000009bf8	ldr	x8, [x22]
0000000000009bfc	and	x8, x8, #0xfffffffffffffffc
0000000000009c00	ldr	x8, [x8]
0000000000009c04	ldr	w9, [x8, #0x3c]
0000000000009c08	ldr	x8, [x8, #0x40]
0000000000009c0c	tbnz	w9, #0x1f, 0x9c30
0000000000009c10	and	x9, x9, x24
0000000000009c14	add	x8, x8, x9, lsl #4
0000000000009c18	ldr	x8, [x8, #0x8]
0000000000009c1c	ldr	x8, [x8]
0000000000009c20	mov	x0, x22
0000000000009c24	blr	x8
0000000000009c28	tbnz	w0, #0x0, 0x9d4c
0000000000009c2c	b	0x9d6c
0000000000009c30	neg	w10, w9
0000000000009c34	mvn	w9, w9
0000000000009c38	cmp	w10, #0x9
0000000000009c3c	b.ge	0x9cb8
0000000000009c40	cmp	w10, #0x2
0000000000009c44	b.lt	0x9d20
0000000000009c48	mov	x10, #0x0
0000000000009c4c	mov	x11, x8
0000000000009c50	ldr	w12, [x11]
0000000000009c54	cmp	w12, #0x9f
0000000000009c58	b.gt	0x9d30
0000000000009c5c	add	x10, x10, #0x1
0000000000009c60	add	x11, x11, #0x10
0000000000009c64	cmp	x9, x10
0000000000009c68	b.ne	0x9c50
0000000000009c6c	mov	x10, x9
0000000000009c70	b	0x9d30
0000000000009c74	neg	w10, w9
0000000000009c78	mvn	w9, w9
0000000000009c7c	cmp	w10, #0x9
0000000000009c80	b.ge	0x9cec
0000000000009c84	cmp	w10, #0x2
0000000000009c88	b.lt	0x9d28
0000000000009c8c	mov	x10, #0x0
0000000000009c90	mov	x11, x8
0000000000009c94	ldr	w12, [x11]
0000000000009c98	cmp	w12, #0x9f
0000000000009c9c	b.gt	0x9d64
0000000000009ca0	add	x10, x10, #0x1
0000000000009ca4	add	x11, x11, #0x10
0000000000009ca8	cmp	x9, x10
0000000000009cac	b.ne	0x9c94
0000000000009cb0	mov	x10, x9
0000000000009cb4	b	0x9d64
0000000000009cb8	mov	w10, #0x0
0000000000009cbc	add	w11, w9, w10
0000000000009cc0	cmp	w11, #0x0
0000000000009cc4	cinc	w11, w11, lt
0000000000009cc8	asr	w11, w11, #1
0000000000009ccc	sbfiz	x12, x11, #4, #32
0000000000009cd0	ldr	w12, [x8, x12]
0000000000009cd4	cmp	w12, #0xa0
0000000000009cd8	csinc	w10, w10, w11, ge
0000000000009cdc	csel	w9, w9, w11, lt
0000000000009ce0	cmp	w10, w9
0000000000009ce4	b.lt	0x9cbc
0000000000009ce8	b	0x9d30
0000000000009cec	mov	w10, #0x0
0000000000009cf0	add	w11, w9, w10
0000000000009cf4	cmp	w11, #0x0
0000000000009cf8	cinc	w11, w11, lt
0000000000009cfc	asr	w11, w11, #1
0000000000009d00	sbfiz	x12, x11, #4, #32
0000000000009d04	ldr	w12, [x8, x12]
0000000000009d08	cmp	w12, #0xa0
0000000000009d0c	csinc	w10, w10, w11, ge
0000000000009d10	csel	w9, w9, w11, lt
0000000000009d14	cmp	w10, w9
0000000000009d18	b.lt	0x9cf0
0000000000009d1c	b	0x9d64
0000000000009d20	mov	w10, #0x0
0000000000009d24	b	0x9d30
0000000000009d28	mov	w10, #0x0
0000000000009d2c	b	0x9d64
0000000000009d30	sxtw	x9, w10
0000000000009d34	add	x8, x8, x9, lsl #4
0000000000009d38	ldr	x8, [x8, #0x8]
0000000000009d3c	ldr	x8, [x8]
0000000000009d40	mov	x0, x22
0000000000009d44	blr	x8
0000000000009d48	tbz	w0, #0x0, 0x9d6c
0000000000009d4c	adr	x8, #0x8a53d
0000000000009d50	nop
0000000000009d54	ldarb	w8, [x8]
0000000000009d58	tbz	w8, #0x0, 0x9bb0
0000000000009d5c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009d60	b	0x9bb0
0000000000009d64	sxtw	x9, w10
0000000000009d68	b	0x9bcc
0000000000009d6c	mov	w0, #0x1
0000000000009d70	ldr	x19, [sp, #0x10]
0000000000009d74	ldr	x8, [sp, #0x38]
0000000000009d78	str	x8, [x19, #0x110]
0000000000009d7c	ldp	x29, x30, [sp, #0x160]
0000000000009d80	ldp	x20, x19, [sp, #0x150]
0000000000009d84	ldp	x22, x21, [sp, #0x140]
0000000000009d88	ldp	x24, x23, [sp, #0x130]
0000000000009d8c	ldp	x26, x25, [sp, #0x120]
0000000000009d90	ldp	x28, x27, [sp, #0x110]
0000000000009d94	add	sp, sp, #0x170
0000000000009d98	ret
0000000000009d9c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.Throwable#toString(){}kotlin.String:
0000000000009da0	sub	sp, sp, #0x100
0000000000009da4	stp	x28, x27, [sp, #0xa0]
0000000000009da8	stp	x26, x25, [sp, #0xb0]
0000000000009dac	stp	x24, x23, [sp, #0xc0]
0000000000009db0	stp	x22, x21, [sp, #0xd0]
0000000000009db4	stp	x20, x19, [sp, #0xe0]
0000000000009db8	stp	x29, x30, [sp, #0xf0]
0000000000009dbc	add	x29, sp, #0xf0
0000000000009dc0	mov	x19, x1
0000000000009dc4	mov	x20, x0
0000000000009dc8	movi.16b	v0, #0x0
0000000000009dcc	stp	q0, q0, [sp, #0x30]
0000000000009dd0	str	xzr, [sp, #0x90]
0000000000009dd4	stp	q0, q0, [sp, #0x70]
0000000000009dd8	stp	q0, q0, [sp, #0x50]
0000000000009ddc	add	x27, sp, #0x30
0000000000009de0	add	x22, x27, #0x20
0000000000009de4	add	x21, x27, #0x30
0000000000009de8	adr	x8, #0x58a58
0000000000009dec	nop
0000000000009df0	orr	x8, x8, #0x3
0000000000009df4	stp	x8, xzr, [sp, #0x20]
0000000000009df8	stp	xzr, xzr, [sp, #0x10]
0000000000009dfc	adr	x8, #0x5ad94
0000000000009e00	nop
0000000000009e04	orr	x8, x8, #0x3
0000000000009e08	str	x8, [sp, #0x8]
0000000000009e0c	adrp	x0, 113 ; 0x7a000
0000000000009e10	add	x0, x0, #0x2c0
0000000000009e14	ldr	x8, [x0]
0000000000009e18	blr	x8
0000000000009e1c	ldr	x26, [x0]
0000000000009e20	ldr	x8, [x26, #0x110]
0000000000009e24	str	x27, [x26, #0x110]
0000000000009e28	mov	x9, #0xd00000000
0000000000009e2c	stp	x8, x9, [sp, #0x38]
0000000000009e30	adr	x8, #0x8a459
0000000000009e34	nop
0000000000009e38	ldarb	w8, [x8]
0000000000009e3c	tbz	w8, #0x0, 0x9e44
0000000000009e40	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009e44	ldr	x8, [x20]
0000000000009e48	and	x8, x8, #0xfffffffffffffffc
0000000000009e4c	ldr	x8, [x8]
0000000000009e50	add	x9, sp, #0x20
0000000000009e54	str	x9, [sp, #0x48]
0000000000009e58	str	x8, [sp, #0x28]
0000000000009e5c	add	x0, sp, #0x20
0000000000009e60	mov	x1, x22
0000000000009e64	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-qualifiedName>(){}kotlin.String?"
0000000000009e68	mov	x22, x0
0000000000009e6c	cbnz	x0, 0x9e90
0000000000009e70	add	x8, sp, #0x30
0000000000009e74	add	x1, x8, #0x28
0000000000009e78	add	x0, sp, #0x20
0000000000009e7c	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-simpleName>(){}kotlin.String?"
0000000000009e80	adr	x8, #0x5c890
0000000000009e84	nop
0000000000009e88	cmp	x0, #0x0
0000000000009e8c	csel	x22, x8, x0, eq
0000000000009e90	ldr	x8, [x20]
0000000000009e94	and	x8, x8, #0xfffffffffffffffc
0000000000009e98	ldr	x8, [x8]
0000000000009e9c	ldr	x8, [x8, #0x90]
0000000000009ea0	mov	x0, x20
0000000000009ea4	mov	x1, x21
0000000000009ea8	blr	x8
0000000000009eac	cbz	x0, 0x9f5c
0000000000009eb0	add	x23, x27, #0x40
0000000000009eb4	add	x24, x27, #0x50
0000000000009eb8	add	x21, x27, #0x60
0000000000009ebc	add	x25, x27, #0x48
0000000000009ec0	add	x8, sp, #0x8
0000000000009ec4	str	x8, [sp, #0x68]
0000000000009ec8	add	x0, sp, #0x8
0000000000009ecc	mov	w1, #0xa
0000000000009ed0	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000009ed4	add	x0, sp, #0x8
0000000000009ed8	mov	x1, x22
0000000000009edc	mov	x2, x23
0000000000009ee0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009ee4	adr	x1, #0x643ac
0000000000009ee8	nop
0000000000009eec	add	x0, sp, #0x8
0000000000009ef0	mov	x2, x25
0000000000009ef4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009ef8	ldr	x8, [x20]
0000000000009efc	and	x8, x8, #0xfffffffffffffffc
0000000000009f00	ldr	x8, [x8]
0000000000009f04	ldr	x8, [x8, #0x90]
0000000000009f08	mov	x0, x20
0000000000009f0c	mov	x1, x24
0000000000009f10	blr	x8
0000000000009f14	cbz	x0, 0x9f38
0000000000009f18	add	x1, x27, #0x58
0000000000009f1c	ldr	x8, [x0]
0000000000009f20	and	x8, x8, #0xfffffffffffffffc
0000000000009f24	ldr	x8, [x8]
0000000000009f28	ldr	x8, [x8, #0x80]
0000000000009f2c	blr	x8
0000000000009f30	mov	x1, x0
0000000000009f34	b	0x9f40
0000000000009f38	adr	x1, #0x64068
0000000000009f3c	nop
0000000000009f40	add	x0, sp, #0x8
0000000000009f44	mov	x2, x21
0000000000009f48	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009f4c	add	x0, sp, #0x8
0000000000009f50	mov	x1, x19
0000000000009f54	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000009f58	mov	x22, x0
0000000000009f5c	str	x22, [x19]
0000000000009f60	ldr	x8, [sp, #0x38]
0000000000009f64	str	x8, [x26, #0x110]
0000000000009f68	mov	x0, x22
0000000000009f6c	ldp	x29, x30, [sp, #0xf0]
0000000000009f70	ldp	x20, x19, [sp, #0xe0]
0000000000009f74	ldp	x22, x21, [sp, #0xd0]
0000000000009f78	ldp	x24, x23, [sp, #0xc0]
0000000000009f7c	ldp	x26, x25, [sp, #0xb0]
0000000000009f80	ldp	x28, x27, [sp, #0xa0]
0000000000009f84	add	sp, sp, #0x100
0000000000009f88	ret
_kfun:kotlin.Throwable.$<init>$lambda$0$FUNCTION_REFERENCE$2.invoke#internal:
0000000000009f8c	stp	x28, x27, [sp, #-0x60]!
0000000000009f90	stp	x26, x25, [sp, #0x10]
0000000000009f94	stp	x24, x23, [sp, #0x20]
0000000000009f98	stp	x22, x21, [sp, #0x30]
0000000000009f9c	stp	x20, x19, [sp, #0x40]
0000000000009fa0	stp	x29, x30, [sp, #0x50]
0000000000009fa4	add	x29, sp, #0x50
0000000000009fa8	sub	sp, sp, #0x4a0
0000000000009fac	str	x1, [sp, #0x10]
0000000000009fb0	mov	x20, x0
0000000000009fb4	adr	x23, #0x8a2d5
0000000000009fb8	nop
0000000000009fbc	ldarb	w8, [x23]
0000000000009fc0	tbz	w8, #0x0, 0x9fc8
0000000000009fc4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009fc8	ldr	x8, [x20, #0x8]
0000000000009fcc	movi.16b	v0, #0x0
0000000000009fd0	stp	q0, q0, [sp, #0x20]
0000000000009fd4	adrp	x0, 113 ; 0x7a000
0000000000009fd8	add	x0, x0, #0x2c0
0000000000009fdc	ldr	x9, [x0]
0000000000009fe0	str	x9, [sp, #0x18]
0000000000009fe4	blr	x9
0000000000009fe8	ldr	x20, [x0]
0000000000009fec	ldr	x9, [x20, #0x110]
0000000000009ff0	add	x10, sp, #0x20
0000000000009ff4	str	x10, [x20, #0x110]
0000000000009ff8	mov	x10, #0x400000000
0000000000009ffc	stp	x9, x10, [sp, #0x28]
000000000000a000	ldr	x8, [x8, #0x18]
000000000000a004	add	x28, x8, #0x10
000000000000a008	ldr	w22, [x8, #0x8]
000000000000a00c	add	x21, x20, #0x138
000000000000a010	mov	w8, #0x1
000000000000a014	ldaxr	w19, [x21]
000000000000a018	stlxr	w9, w8, [x21]
000000000000a01c	cbnz	w9, 0xa014
000000000000a020	str	xzr, [sp, #0x50]
000000000000a024	mov	w8, #0x1
000000000000a028	str	w8, [sp, #0x58]
000000000000a02c	strb	wzr, [sp, #0x5c]
000000000000a030	adrp	x0, 112 ; 0x7a000
000000000000a034	add	x0, x0, #0x2c0
000000000000a038	ldr	x8, [sp, #0x18]
000000000000a03c	blr	x8
000000000000a040	ldr	x8, [x0]
000000000000a044	cbz	x8, 0xa06c
000000000000a048	add	x9, x8, #0x138
000000000000a04c	mov	w11, #0x1
000000000000a050	ldaxr	w10, [x9]
000000000000a054	stlxr	w12, w11, [x9]
000000000000a058	cbnz	w12, 0xa050
000000000000a05c	str	x8, [sp, #0x50]
000000000000a060	str	w10, [sp, #0x58]
000000000000a064	mov	w9, #0x1
000000000000a068	strb	w9, [sp, #0x5c]
000000000000a06c	stp	xzr, xzr, [sp, #0x68]
000000000000a070	str	xzr, [sp, #0x78]
000000000000a074	cbz	w22, 0xa2ec
000000000000a078	str	x20, [sp, #0x8]
000000000000a07c	mov	w23, #0x18
000000000000a080	mov	x0, x22
000000000000a084	mov	w1, #0x18
000000000000a088	bl	0x553d4 ; symbol stub for: _calloc
000000000000a08c	mov	x20, #0x0
000000000000a090	madd	x8, x22, x23, x0
000000000000a094	stp	x0, x0, [sp, #0x68]
000000000000a098	str	x8, [sp, #0x78]
000000000000a09c	mov	x23, #-0x5555555555555556
000000000000a0a0	movk	x23, #0xaaab
000000000000a0a4	adr	x27, #0x548e3 ; literal pool for: ""
000000000000a0a8	nop
000000000000a0ac	b	0xa0dc
000000000000a0b0	ldr	q0, [sp, #0x80]
000000000000a0b4	ldr	x8, [sp, #0x90]
000000000000a0b8	str	x8, [x26, #0x10]
000000000000a0bc	str	q0, [x26]
000000000000a0c0	stp	xzr, xzr, [sp, #0x88]
000000000000a0c4	str	xzr, [sp, #0x80]
000000000000a0c8	add	x8, x26, #0x18
000000000000a0cc	str	x8, [sp, #0x70]
000000000000a0d0	add	x20, x20, #0x1
000000000000a0d4	cmp	x20, x22
000000000000a0d8	b.eq	0xa2dc
000000000000a0dc	ldr	x8, [x28, x20, lsl #3]
000000000000a0e0	cmp	x8, #0x2
000000000000a0e4	b.lo	0xa0d0
000000000000a0e8	and	x8, x8, #0xfffffffffffffffe
000000000000a0ec	sub	x3, x8, #0x1
000000000000a0f0	ldp	x9, x8, [sp, #0x68]
000000000000a0f4	sub	x8, x8, x9
000000000000a0f8	asr	x8, x8, #3
000000000000a0fc	mul	x2, x8, x23
000000000000a100	str	x27, [sp]
000000000000a104	add	x0, sp, #0x98
000000000000a108	mov	w4, #0x0
000000000000a10c	adr	x5, #0x547c5 ; literal pool for: "%s"
000000000000a110	nop
000000000000a114	bl	__ZL18snprintf_with_addrPcmmPKvbPKcz
000000000000a118	add	x0, sp, #0x98
000000000000a11c	bl	0x5574c ; symbol stub for: _strlen
000000000000a120	cmn	x0, #0x10
000000000000a124	b.hs	0xa550
000000000000a128	mov	x24, x0
000000000000a12c	cmp	x0, #0x17
000000000000a130	b.hs	0xa154
000000000000a134	add	x25, sp, #0x80
000000000000a138	strb	w24, [sp, #0x97]
000000000000a13c	cbnz	x24, 0xa178
000000000000a140	strb	wzr, [x25, x24]
000000000000a144	ldp	x26, x8, [sp, #0x70]
000000000000a148	cmp	x26, x8
000000000000a14c	b.lo	0xa0b0
000000000000a150	b	0xa198
000000000000a154	add	x8, x24, #0x10
000000000000a158	and	x26, x8, #0xfffffffffffffff0
000000000000a15c	mov	x0, x26
000000000000a160	mov	w1, #0x1
000000000000a164	bl	0x553d4 ; symbol stub for: _calloc
000000000000a168	mov	x25, x0
000000000000a16c	orr	x8, x26, #0x8000000000000000
000000000000a170	stp	x24, x8, [sp, #0x88]
000000000000a174	str	x0, [sp, #0x80]
000000000000a178	add	x1, sp, #0x98
000000000000a17c	mov	x0, x25
000000000000a180	mov	x2, x24
000000000000a184	bl	0x554ac ; symbol stub for: _memcpy
000000000000a188	strb	wzr, [x25, x24]
000000000000a18c	ldp	x26, x8, [sp, #0x70]
000000000000a190	cmp	x26, x8
000000000000a194	b.lo	0xa0b0
000000000000a198	mov	x10, #-0x5555555555555556
000000000000a19c	movk	x10, #0xaaab
000000000000a1a0	mov	x23, x27
000000000000a1a4	ldr	x25, [sp, #0x68]
000000000000a1a8	sub	x9, x26, x25
000000000000a1ac	asr	x9, x9, #3
000000000000a1b0	mov	x11, #-0x5555555555555556
000000000000a1b4	movk	x11, #0xaaa, lsl #48
000000000000a1b8	mul	x27, x9, x10
000000000000a1bc	add	x9, x27, #0x1
000000000000a1c0	cmp	x9, x11
000000000000a1c4	b.hi	0xa55c
000000000000a1c8	sub	x8, x8, x25
000000000000a1cc	asr	x8, x8, #3
000000000000a1d0	mul	x8, x8, x10
000000000000a1d4	lsl	x10, x8, #1
000000000000a1d8	cmp	x10, x9
000000000000a1dc	csel	x9, x9, x10, lo
000000000000a1e0	mov	x10, #0x5555555555555555
000000000000a1e4	movk	x10, #0x555, lsl #48
000000000000a1e8	cmp	x8, x10
000000000000a1ec	csel	x24, x9, x11, lo
000000000000a1f0	cbz	x24, 0xa204
000000000000a1f4	mov	x0, x24
000000000000a1f8	mov	w1, #0x18
000000000000a1fc	bl	0x553d4 ; symbol stub for: _calloc
000000000000a200	b	0xa208
000000000000a204	mov	x0, #0x0
000000000000a208	mov	w8, #0x18
000000000000a20c	madd	x8, x27, x8, x0
000000000000a210	mov	w11, #0x18
000000000000a214	ldr	q0, [sp, #0x80]
000000000000a218	str	q0, [x8]
000000000000a21c	ldr	x9, [sp, #0x90]
000000000000a220	str	x9, [x8, #0x10]
000000000000a224	stp	xzr, xzr, [sp, #0x88]
000000000000a228	str	xzr, [sp, #0x80]
000000000000a22c	mov	x9, x8
000000000000a230	cmp	x26, x25
000000000000a234	b.eq	0xa270
000000000000a238	mov	x27, x23
000000000000a23c	ldur	q0, [x26, #-0x18]
000000000000a240	ldur	x10, [x26, #-0x8]
000000000000a244	stur	x10, [x9, #-0x8]
000000000000a248	stur	q0, [x9, #-0x18]
000000000000a24c	stp	xzr, xzr, [x26, #-0x10]
000000000000a250	stur	xzr, [x26, #-0x18]
000000000000a254	sub	x10, x26, #0x18
000000000000a258	sub	x9, x9, #0x18
000000000000a25c	mov	x26, x10
000000000000a260	cmp	x10, x25
000000000000a264	b.ne	0xa23c
000000000000a268	ldp	x25, x26, [sp, #0x68]
000000000000a26c	b	0xa278
000000000000a270	mov	x25, x26
000000000000a274	mov	x27, x23
000000000000a278	mov	x23, #-0x5555555555555556
000000000000a27c	movk	x23, #0xaaab
000000000000a280	madd	x10, x24, x11, x0
000000000000a284	add	x8, x8, #0x18
000000000000a288	stp	x9, x8, [sp, #0x68]
000000000000a28c	str	x10, [sp, #0x78]
000000000000a290	cmp	x26, x25
000000000000a294	b.ne	0xa2c4
000000000000a298	cbz	x25, 0xa2a4
000000000000a29c	mov	x0, x25
000000000000a2a0	bl	0x55458 ; symbol stub for: _free
000000000000a2a4	ldrsb	w8, [sp, #0x97]
000000000000a2a8	tbz	w8, #0x1f, 0xa0d0
000000000000a2ac	ldr	x0, [sp, #0x80]
000000000000a2b0	bl	0x55458 ; symbol stub for: _free
000000000000a2b4	b	0xa0d0
000000000000a2b8	mov	x26, x24
000000000000a2bc	cmp	x24, x25
000000000000a2c0	b.eq	0xa298
000000000000a2c4	sub	x24, x26, #0x18
000000000000a2c8	ldursb	w8, [x26, #-0x1]
000000000000a2cc	tbz	w8, #0x1f, 0xa2b8
000000000000a2d0	ldur	x0, [x26, #-0x18]
000000000000a2d4	bl	0x55458 ; symbol stub for: _free
000000000000a2d8	b	0xa2b8
000000000000a2dc	ldr	x8, [sp, #0x50]
000000000000a2e0	adr	x23, #0x89fa9
000000000000a2e4	nop
000000000000a2e8	ldr	x20, [sp, #0x8]
000000000000a2ec	cbz	x8, 0xa31c
000000000000a2f0	ldr	w9, [sp, #0x58]
000000000000a2f4	add	x0, x8, #0x138
000000000000a2f8	ldaxr	w8, [x0]
000000000000a2fc	stlxr	w10, w9, [x0]
000000000000a300	cbnz	w10, 0xa2f8
000000000000a304	cbnz	w9, 0xa31c
000000000000a308	cmp	w8, #0x1
000000000000a30c	b.ne	0xa31c
000000000000a310	ldarb	w8, [x23]
000000000000a314	tbz	w8, #0x0, 0xa31c
000000000000a318	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000a31c	cbz	x20, 0xa348
000000000000a320	ldaxr	w8, [x21]
000000000000a324	stlxr	w9, w19, [x21]
000000000000a328	cbnz	w9, 0xa320
000000000000a32c	cbnz	w19, 0xa348
000000000000a330	cmp	w8, #0x1
000000000000a334	b.ne	0xa348
000000000000a338	ldarb	w8, [x23]
000000000000a33c	tbz	w8, #0x0, 0xa348
000000000000a340	mov	x0, x21
000000000000a344	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000a348	str	xzr, [sp, #0xb0]
000000000000a34c	adrp	x0, 112 ; 0x7a000
000000000000a350	add	x0, x0, #0x2c0
000000000000a354	ldr	x8, [sp, #0x18]
000000000000a358	blr	x8
000000000000a35c	ldr	x8, [x0]
000000000000a360	ldr	x9, [x8, #0x110]
000000000000a364	add	x10, sp, #0x98
000000000000a368	str	x10, [x8, #0x110]
000000000000a36c	mov	x10, #0x400000000
000000000000a370	stp	x9, x10, [sp, #0xa0]
000000000000a374	ldp	x10, x9, [sp, #0x68]
000000000000a378	sub	x9, x9, x10
000000000000a37c	asr	x9, x9, #3
000000000000a380	mov	x10, #-0x5555555555555556
000000000000a384	movk	x10, #0xaaab
000000000000a388	mul	x19, x9, x10
000000000000a38c	tbnz	w19, #0x1f, 0xa568
000000000000a390	ldr	x8, [x8, #0x118]
000000000000a394	ubfiz	x9, x19, #3, #32
000000000000a398	add	x9, x9, #0x1f
000000000000a39c	and	x1, x9, #0xffffffff8
000000000000a3a0	add	x0, x8, #0x70
000000000000a3a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a3a8	mov	x21, x0
000000000000a3ac	str	xzr, [x21, #0x10]!
000000000000a3b0	str	xzr, [x0, #0x18]
000000000000a3b4	str	xzr, [x0, #0x8]
000000000000a3b8	adr	x8, #0x567c8
000000000000a3bc	nop
000000000000a3c0	str	x8, [x21]
000000000000a3c4	str	w19, [x0, #0x18]
000000000000a3c8	str	x21, [sp, #0xb0]
000000000000a3cc	ldp	x19, x9, [sp, #0x68]
000000000000a3d0	cmp	x9, x19
000000000000a3d4	b.ne	0xa400
000000000000a3d8	adrp	x0, 112 ; 0x7a000
000000000000a3dc	add	x0, x0, #0x2c0
000000000000a3e0	ldr	x8, [sp, #0x18]
000000000000a3e4	blr	x8
000000000000a3e8	ldr	x8, [x0]
000000000000a3ec	str	x21, [sp, #0x38]
000000000000a3f0	ldr	x10, [sp, #0xa0]
000000000000a3f4	str	x10, [x8, #0x110]
000000000000a3f8	cbnz	x19, 0xa4c8
000000000000a3fc	b	0xa508
000000000000a400	str	x21, [sp, #0x8]
000000000000a404	add	x20, sp, #0x48
000000000000a408	add	x22, x20, #0x18
000000000000a40c	add	x23, x0, #0x20
000000000000a410	adrp	x0, 112 ; 0x7a000
000000000000a414	add	x0, x0, #0x2c0
000000000000a418	ldr	x8, [sp, #0x18]
000000000000a41c	blr	x8
000000000000a420	mov	x24, #0x0
000000000000a424	mov	x25, #0x0
000000000000a428	mov	x26, #0x0
000000000000a42c	ldr	x8, [x0]
000000000000a430	ldr	x10, [x8, #0x110]
000000000000a434	mov	x28, #0x400000000
000000000000a438	mov	x27, #-0x5555555555555556
000000000000a43c	movk	x27, #0xaaab
000000000000a440	mov	x21, #0x100000000
000000000000a444	stp	x28, xzr, [sp, #0x58]
000000000000a448	str	x20, [x8, #0x110]
000000000000a44c	str	x10, [sp, #0x50]
000000000000a450	add	x0, x19, x24
000000000000a454	ldrsb	w8, [x0, #0x17]
000000000000a458	tbz	w8, #0x1f, 0xa460
000000000000a45c	ldr	x0, [x19, x24]
000000000000a460	mov	x1, x22
000000000000a464	bl	_CreateStringFromCString
000000000000a468	asr	x8, x25, #29
000000000000a46c	ldr	x9, [sp, #0x60]
000000000000a470	str	x9, [x23, x8]
000000000000a474	adrp	x0, 112 ; 0x7a000
000000000000a478	add	x0, x0, #0x2c0
000000000000a47c	ldr	x8, [sp, #0x18]
000000000000a480	blr	x8
000000000000a484	ldr	x8, [x0]
000000000000a488	ldr	x10, [sp, #0x50]
000000000000a48c	str	x10, [x8, #0x110]
000000000000a490	add	x26, x26, #0x1
000000000000a494	ldp	x19, x9, [sp, #0x68]
000000000000a498	sub	x11, x9, x19
000000000000a49c	asr	x11, x11, #3
000000000000a4a0	mul	x11, x11, x27
000000000000a4a4	add	x25, x25, x21
000000000000a4a8	add	x24, x24, #0x18
000000000000a4ac	cmp	x26, x11
000000000000a4b0	b.lo	0xa444
000000000000a4b4	ldr	x21, [sp, #0x8]
000000000000a4b8	str	x21, [sp, #0x38]
000000000000a4bc	ldr	x10, [sp, #0xa0]
000000000000a4c0	str	x10, [x8, #0x110]
000000000000a4c4	cbz	x19, 0xa508
000000000000a4c8	cmp	x19, x9
000000000000a4cc	b.ne	0xa4e4
000000000000a4d0	mov	x0, x19
000000000000a4d4	b	0xa500
000000000000a4d8	mov	x9, x20
000000000000a4dc	cmp	x20, x19
000000000000a4e0	b.eq	0xa4fc
000000000000a4e4	sub	x20, x9, #0x18
000000000000a4e8	ldursb	w8, [x9, #-0x1]
000000000000a4ec	tbz	w8, #0x1f, 0xa4d8
000000000000a4f0	ldur	x0, [x9, #-0x18]
000000000000a4f4	bl	0x55458 ; symbol stub for: _free
000000000000a4f8	b	0xa4d8
000000000000a4fc	ldr	x0, [sp, #0x68]
000000000000a500	str	x19, [sp, #0x70]
000000000000a504	bl	0x55458 ; symbol stub for: _free
000000000000a508	ldp	x10, x8, [sp, #0x10]
000000000000a50c	str	x21, [x10]
000000000000a510	adrp	x0, 112 ; 0x7a000
000000000000a514	add	x0, x0, #0x2c0
000000000000a518	blr	x8
000000000000a51c	ldr	x8, [x0]
000000000000a520	ldr	x9, [sp, #0x28]
000000000000a524	str	x9, [x8, #0x110]
000000000000a528	str	x21, [x10]
000000000000a52c	mov	x0, x21
000000000000a530	add	sp, sp, #0x4a0
000000000000a534	ldp	x29, x30, [sp, #0x50]
000000000000a538	ldp	x20, x19, [sp, #0x40]
000000000000a53c	ldp	x22, x21, [sp, #0x30]
000000000000a540	ldp	x24, x23, [sp, #0x20]
000000000000a544	ldp	x26, x25, [sp, #0x10]
000000000000a548	ldp	x28, x27, [sp], #0x60
000000000000a54c	ret
000000000000a550	add	x0, sp, #0x80
000000000000a554	bl	0x551ac ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
000000000000a558	b	0xa56c
000000000000a55c	add	x0, sp, #0x68
000000000000a560	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000a564	b	0xa56c
000000000000a568	bl	_ThrowIllegalArgumentException
000000000000a56c	brk	#0x1
000000000000a570	mov	x19, x0
000000000000a574	adrp	x0, 112 ; 0x7a000
000000000000a578	add	x0, x0, #0x2c0
000000000000a57c	ldr	x8, [sp, #0x18]
000000000000a580	blr	x8
000000000000a584	ldr	x8, [x0]
000000000000a588	b	0xa5e4
000000000000a58c	mov	x19, x0
000000000000a590	ldrsb	w8, [sp, #0x97]
000000000000a594	tbz	w8, #0x1f, 0xa5ac
000000000000a598	ldr	x0, [sp, #0x80]
000000000000a59c	bl	0x55458 ; symbol stub for: _free
000000000000a5a0	b	0xa5ac
000000000000a5a4	b	0xa5a8
000000000000a5a8	mov	x19, x0
000000000000a5ac	add	x0, sp, #0x68
000000000000a5b0	bl	__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEENS6_IS8_EEED1Ev
000000000000a5b4	add	x0, sp, #0x48
000000000000a5b8	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
000000000000a5bc	mov	x0, x19
000000000000a5c0	bl	___clang_call_terminate
000000000000a5c4	mov	x19, x0
000000000000a5c8	adrp	x0, 112 ; 0x7a000
000000000000a5cc	add	x0, x0, #0x2c0
000000000000a5d0	ldr	x8, [sp, #0x18]
000000000000a5d4	blr	x8
000000000000a5d8	ldr	x8, [x0]
000000000000a5dc	ldr	x9, [sp, #0x50]
000000000000a5e0	str	x9, [x8, #0x110]
000000000000a5e4	ldr	x9, [sp, #0xa0]
000000000000a5e8	str	x9, [x8, #0x110]
000000000000a5ec	ldr	x0, [sp, #0x68]
000000000000a5f0	cbz	x0, 0xa604
000000000000a5f4	add	x8, sp, #0x68
000000000000a5f8	add	x1, x8, #0x8
000000000000a5fc	add	x2, sp, #0x68
000000000000a600	bl	_Kotlin_getStackTraceStrings.cold.1
000000000000a604	mov	x0, x19
000000000000a608	bl	0x55194 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.Unit#toString(){}kotlin.String:
000000000000a60c	stp	x20, x19, [sp, #-0x20]!
000000000000a610	stp	x29, x30, [sp, #0x10]
000000000000a614	add	x29, sp, #0x10
000000000000a618	mov	x19, x1
000000000000a61c	adr	x8, #0x89c6d
000000000000a620	nop
000000000000a624	ldarb	w8, [x8]
000000000000a628	tbz	w8, #0x0, 0xa630
000000000000a62c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a630	adr	x0, #0x63c80
000000000000a634	nop
000000000000a638	str	x0, [x19]
000000000000a63c	ldp	x29, x30, [sp, #0x10]
000000000000a640	ldp	x20, x19, [sp], #0x20
000000000000a644	ret
_checkRangeIndexes:
000000000000a648	sub	sp, sp, #0x120
000000000000a64c	stp	x28, x27, [sp, #0xd0]
000000000000a650	stp	x24, x23, [sp, #0xe0]
000000000000a654	stp	x22, x21, [sp, #0xf0]
000000000000a658	stp	x20, x19, [sp, #0x100]
000000000000a65c	stp	x29, x30, [sp, #0x110]
000000000000a660	add	x29, sp, #0x110
000000000000a664	mov	x21, x2
000000000000a668	mov	x20, x1
000000000000a66c	mov	x22, x0
000000000000a670	str	xzr, [sp, #0xc0]
000000000000a674	movi.16b	v0, #0x0
000000000000a678	stp	q0, q0, [sp, #0xa0]
000000000000a67c	stp	q0, q0, [sp, #0x80]
000000000000a680	stp	q0, q0, [sp, #0x60]
000000000000a684	stp	q0, q0, [sp, #0x40]
000000000000a688	str	q0, [sp, #0x30]
000000000000a68c	add	x24, sp, #0x30
000000000000a690	stp	xzr, xzr, [sp, #0x20]
000000000000a694	adr	x8, #0x5a4fc
000000000000a698	nop
000000000000a69c	orr	x8, x8, #0x3
000000000000a6a0	stp	xzr, x8, [sp, #0x10]
000000000000a6a4	stp	x8, xzr, [sp]
000000000000a6a8	adrp	x19, 112 ; 0x7a000
000000000000a6ac	add	x19, x19, #0x2c0
000000000000a6b0	ldr	x23, [x19]
000000000000a6b4	mov	x0, x19
000000000000a6b8	blr	x23
000000000000a6bc	ldr	x8, [x0]
000000000000a6c0	ldr	x9, [x8, #0x110]
000000000000a6c4	str	x24, [x8, #0x110]
000000000000a6c8	mov	x8, #0x1300000000
000000000000a6cc	stp	x9, x8, [sp, #0x38]
000000000000a6d0	adr	x8, #0x89bb9
000000000000a6d4	nop
000000000000a6d8	ldarb	w8, [x8]
000000000000a6dc	tbz	w8, #0x0, 0xa6e4
000000000000a6e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a6e4	tbnz	w22, #0x1f, 0xa728
000000000000a6e8	cmp	w20, w21
000000000000a6ec	b.gt	0xa728
000000000000a6f0	cmp	w22, w20
000000000000a6f4	b.gt	0xa804
000000000000a6f8	mov	x0, x19
000000000000a6fc	blr	x23
000000000000a700	ldr	x8, [x0]
000000000000a704	ldr	x9, [sp, #0x38]
000000000000a708	str	x9, [x8, #0x110]
000000000000a70c	ldp	x29, x30, [sp, #0x110]
000000000000a710	ldp	x20, x19, [sp, #0x100]
000000000000a714	ldp	x22, x21, [sp, #0xf0]
000000000000a718	ldp	x24, x23, [sp, #0xe0]
000000000000a71c	ldp	x28, x27, [sp, #0xd0]
000000000000a720	add	sp, sp, #0x120
000000000000a724	ret
000000000000a728	add	x8, sp, #0x18
000000000000a72c	str	x8, [sp, #0x48]
000000000000a730	add	x0, sp, #0x18
000000000000a734	mov	w1, #0xa
000000000000a738	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000a73c	add	x2, x24, #0x20
000000000000a740	adr	x1, #0x63ba0
000000000000a744	nop
000000000000a748	add	x0, sp, #0x18
000000000000a74c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a750	add	x2, x24, #0x28
000000000000a754	add	x0, sp, #0x18
000000000000a758	mov	x1, x22
000000000000a75c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000a760	add	x2, x24, #0x30
000000000000a764	adr	x1, #0x63bac
000000000000a768	nop
000000000000a76c	add	x0, sp, #0x18
000000000000a770	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a774	add	x2, x24, #0x38
000000000000a778	add	x0, sp, #0x18
000000000000a77c	mov	x1, x20
000000000000a780	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000a784	add	x2, x24, #0x40
000000000000a788	adr	x1, #0x63bb8
000000000000a78c	nop
000000000000a790	add	x0, sp, #0x18
000000000000a794	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a798	add	x2, x24, #0x48
000000000000a79c	add	x0, sp, #0x18
000000000000a7a0	mov	x1, x21
000000000000a7a4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000a7a8	add	x1, x24, #0x50
000000000000a7ac	add	x0, sp, #0x18
000000000000a7b0	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000a7b4	mov	x20, x0
000000000000a7b8	mov	x0, x19
000000000000a7bc	blr	x23
000000000000a7c0	ldr	x8, [x0]
000000000000a7c4	ldr	x8, [x8, #0x118]
000000000000a7c8	add	x0, x8, #0x70
000000000000a7cc	mov	w1, #0x38
000000000000a7d0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a7d4	mov	x21, x0
000000000000a7d8	adr	x8, #0x56b68
000000000000a7dc	nop
000000000000a7e0	str	x8, [x21, #0x10]!
000000000000a7e4	stur	xzr, [x21, #-0x8]
000000000000a7e8	str	x21, [sp, #0x88]
000000000000a7ec	mov	x0, x21
000000000000a7f0	mov	x1, x20
000000000000a7f4	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000000a7f8	mov	x0, x21
000000000000a7fc	bl	_ThrowException
000000000000a800	b	0xa8b8
000000000000a804	mov	x8, sp
000000000000a808	str	x8, [sp, #0x90]
000000000000a80c	mov	x0, sp
000000000000a810	mov	w1, #0xa
000000000000a814	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000a818	add	x2, x24, #0x68
000000000000a81c	adr	x1, #0x63ac4
000000000000a820	nop
000000000000a824	mov	x0, sp
000000000000a828	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a82c	add	x2, x24, #0x70
000000000000a830	mov	x0, sp
000000000000a834	mov	x1, x22
000000000000a838	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000a83c	add	x2, x24, #0x78
000000000000a840	adr	x1, #0x63b20
000000000000a844	nop
000000000000a848	mov	x0, sp
000000000000a84c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000a850	add	x2, x24, #0x80
000000000000a854	mov	x0, sp
000000000000a858	mov	x1, x20
000000000000a85c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000a860	add	x1, x24, #0x88
000000000000a864	mov	x0, sp
000000000000a868	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000a86c	mov	x20, x0
000000000000a870	mov	x0, x19
000000000000a874	blr	x23
000000000000a878	ldr	x8, [x0]
000000000000a87c	ldr	x8, [x8, #0x118]
000000000000a880	add	x0, x8, #0x70
000000000000a884	mov	w1, #0x38
000000000000a888	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a88c	mov	x21, x0
000000000000a890	adr	x8, #0x56b50
000000000000a894	nop
000000000000a898	str	x8, [x21, #0x10]!
000000000000a89c	stur	xzr, [x21, #-0x8]
000000000000a8a0	str	x21, [sp, #0xc0]
000000000000a8a4	mov	x0, x21
000000000000a8a8	mov	x1, x20
000000000000a8ac	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000000a8b0	mov	x0, x21
000000000000a8b4	bl	_ThrowException
000000000000a8b8	brk	#0x1
000000000000a8bc	mov	x1, x0
000000000000a8c0	mov	x0, x19
000000000000a8c4	blr	x23
000000000000a8c8	ldr	x8, [x0]
000000000000a8cc	ldr	x9, [sp, #0x38]
000000000000a8d0	str	x9, [x8, #0x110]
000000000000a8d4	mov	x0, x1
000000000000a8d8	bl	0x55194 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.collections#resetAt__at__kotlin.Array<0:0>(kotlin.Int){0§<kotlin.Any?>}:
000000000000a8dc	stp	x20, x19, [sp, #-0x20]!
000000000000a8e0	stp	x29, x30, [sp, #0x10]
000000000000a8e4	add	x29, sp, #0x10
000000000000a8e8	mov	x20, x1
000000000000a8ec	mov	x19, x0
000000000000a8f0	adr	x8, #0x89999
000000000000a8f4	nop
000000000000a8f8	ldarb	w8, [x8]
000000000000a8fc	tbz	w8, #0x0, 0xa904
000000000000a900	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a904	ldr	x8, [x19]
000000000000a908	and	x8, x8, #0xfffffffffffffffc
000000000000a90c	ldr	x8, [x8]
000000000000a910	ldr	w8, [x8, #0x5c]
000000000000a914	cmp	w8, #0x49
000000000000a918	b.ne	0xa940
000000000000a91c	ldr	w8, [x19, #0x8]
000000000000a920	cmp	w8, w20
000000000000a924	b.ls	0xa950
000000000000a928	ldr	xzr, [x19]
000000000000a92c	add	x8, x19, w20, sxtw #3
000000000000a930	str	xzr, [x8, #0x10]
000000000000a934	ldp	x29, x30, [sp, #0x10]
000000000000a938	ldp	x20, x19, [sp], #0x20
000000000000a93c	ret
000000000000a940	adr	x1, #0x56240
000000000000a944	nop
000000000000a948	mov	x0, x19
000000000000a94c	bl	_ThrowClassCastException
000000000000a950	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}:
000000000000a954	stp	x22, x21, [sp, #-0x30]!
000000000000a958	stp	x20, x19, [sp, #0x10]
000000000000a95c	stp	x29, x30, [sp, #0x20]
000000000000a960	add	x29, sp, #0x20
000000000000a964	mov	x20, x2
000000000000a968	mov	x21, x1
000000000000a96c	mov	x19, x0
000000000000a970	adr	x8, #0x89919
000000000000a974	nop
000000000000a978	ldarb	w8, [x8]
000000000000a97c	tbz	w8, #0x0, 0xa984
000000000000a980	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a984	ldr	x8, [x19]
000000000000a988	and	x8, x8, #0xfffffffffffffffc
000000000000a98c	ldr	x8, [x8]
000000000000a990	ldr	w8, [x8, #0x5c]
000000000000a994	cmp	w8, #0x49
000000000000a998	b.ne	0xaa24
000000000000a99c	ldr	w2, [x19, #0x8]
000000000000a9a0	mov	x0, x21
000000000000a9a4	mov	x1, x20
000000000000a9a8	bl	_checkRangeIndexes
000000000000a9ac	ldr	xzr, [x19]
000000000000a9b0	cmp	w21, w20
000000000000a9b4	b.ge	0xaa14
000000000000a9b8	sxtw	x11, w21
000000000000a9bc	mvn	w8, w21
000000000000a9c0	adds	w8, w8, w20
000000000000a9c4	b.eq	0xa9f8
000000000000a9c8	add	x9, x8, #0x1
000000000000a9cc	and	x10, x9, #0x1fffffffe
000000000000a9d0	add	x8, x10, x11
000000000000a9d4	add	x11, x19, x11, lsl #3
000000000000a9d8	add	x11, x11, #0x10
000000000000a9dc	mov	x12, x10
000000000000a9e0	stp	xzr, xzr, [x11], #0x10
000000000000a9e4	subs	x12, x12, #0x2
000000000000a9e8	b.ne	0xa9e0
000000000000a9ec	cmp	x9, x10
000000000000a9f0	b.ne	0xa9fc
000000000000a9f4	b	0xaa14
000000000000a9f8	mov	x8, x11
000000000000a9fc	sub	w9, w20, w8
000000000000aa00	add	x8, x19, x8, lsl #3
000000000000aa04	add	x8, x8, #0x10
000000000000aa08	str	xzr, [x8], #0x8
000000000000aa0c	subs	w9, w9, #0x1
000000000000aa10	b.ne	0xaa08
000000000000aa14	ldp	x29, x30, [sp, #0x20]
000000000000aa18	ldp	x20, x19, [sp, #0x10]
000000000000aa1c	ldp	x22, x21, [sp], #0x30
000000000000aa20	ret
000000000000aa24	adr	x1, #0x5615c
000000000000aa28	nop
000000000000aa2c	mov	x0, x19
000000000000aa30	bl	_ThrowClassCastException
_kfun:kotlin.native.MemoryModel.$OBJECT#<init>(){}:
000000000000aa34	sub	sp, sp, #0x170
000000000000aa38	stp	x24, x23, [sp, #0x130]
000000000000aa3c	stp	x22, x21, [sp, #0x140]
000000000000aa40	stp	x20, x19, [sp, #0x150]
000000000000aa44	stp	x29, x30, [sp, #0x160]
000000000000aa48	add	x29, sp, #0x160
000000000000aa4c	mov	x19, x0
000000000000aa50	str	xzr, [sp, #0x120]
000000000000aa54	movi.16b	v0, #0x0
000000000000aa58	stp	q0, q0, [sp, #0x100]
000000000000aa5c	stp	q0, q0, [sp, #0xe0]
000000000000aa60	stp	q0, q0, [sp, #0xc0]
000000000000aa64	stp	q0, q0, [sp, #0xa0]
000000000000aa68	stp	q0, q0, [sp, #0x80]
000000000000aa6c	stp	q0, q0, [sp, #0x60]
000000000000aa70	stp	q0, q0, [sp, #0x40]
000000000000aa74	stp	q0, q0, [sp, #0x20]
000000000000aa78	stp	q0, q0, [sp]
000000000000aa7c	mov	x8, sp
000000000000aa80	add	x20, x8, #0x120
000000000000aa84	adrp	x0, 112 ; 0x7a000
000000000000aa88	add	x0, x0, #0x2c0
000000000000aa8c	ldr	x9, [x0]
000000000000aa90	blr	x9
000000000000aa94	ldr	x21, [x0]
000000000000aa98	ldr	x9, [x21, #0x110]
000000000000aa9c	str	x8, [x21, #0x110]
000000000000aaa0	mov	x8, #0x2500000000
000000000000aaa4	stp	x9, x8, [sp, #0x8]
000000000000aaa8	adr	x8, #0x897e1
000000000000aaac	nop
000000000000aab0	ldarb	w8, [x8]
000000000000aab4	tbz	w8, #0x0, 0xaabc
000000000000aab8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000aabc	ldr	x8, [x21, #0x118]
000000000000aac0	add	x0, x8, #0x70
000000000000aac4	mov	w1, #0x20
000000000000aac8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000aacc	adr	x22, #0x57764
000000000000aad0	nop
000000000000aad4	str	x22, [x0, #0x10]!
000000000000aad8	stur	xzr, [x0, #-0x8]
000000000000aadc	stp	x0, x0, [sp, #0x18]
000000000000aae0	ldr	x8, [x21, #0x118]
000000000000aae4	add	x0, x8, #0x70
000000000000aae8	mov	w1, #0x20
000000000000aaec	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000aaf0	str	x22, [x0, #0x10]!
000000000000aaf4	stur	xzr, [x0, #-0x8]
000000000000aaf8	stp	x0, x0, [sp, #0x28]
000000000000aafc	ldr	x8, [x21, #0x118]
000000000000ab00	add	x0, x8, #0x70
000000000000ab04	mov	w1, #0x20
000000000000ab08	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ab0c	str	x22, [x0, #0x10]!
000000000000ab10	stur	xzr, [x0, #-0x8]
000000000000ab14	stp	x0, x0, [sp, #0x38]
000000000000ab18	ldr	x8, [x21, #0x118]
000000000000ab1c	add	x0, x8, #0x70
000000000000ab20	mov	w1, #0x30
000000000000ab24	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ab28	adr	x22, #0x56058
000000000000ab2c	nop
000000000000ab30	stp	x22, xzr, [x0, #0x10]!
000000000000ab34	stur	xzr, [x0, #-0x8]
000000000000ab38	mov	w23, #0x3
000000000000ab3c	str	w23, [x0, #0x8]
000000000000ab40	stp	x0, x0, [sp, #0x48]
000000000000ab44	ldr	x8, [sp, #0x20]
000000000000ab48	stp	x0, x8, [sp, #0x58]
000000000000ab4c	ldr	xzr, [x0]
000000000000ab50	str	x8, [x0, #0x10]
000000000000ab54	ldr	x8, [sp, #0x50]
000000000000ab58	ldr	x9, [sp, #0x30]
000000000000ab5c	stp	x8, x9, [sp, #0x68]
000000000000ab60	ldr	xzr, [x8]
000000000000ab64	str	x9, [x8, #0x18]
000000000000ab68	ldr	x8, [sp, #0x50]
000000000000ab6c	ldr	x9, [sp, #0x40]
000000000000ab70	stp	x8, x9, [sp, #0x78]
000000000000ab74	ldr	xzr, [x8]
000000000000ab78	str	x9, [x8, #0x20]
000000000000ab7c	ldr	x8, [sp, #0x50]
000000000000ab80	str	x8, [sp, #0x88]
000000000000ab84	str	x8, [x19, #0x8]
000000000000ab88	ldr	x9, [x8, #0x20]
000000000000ab8c	str	x9, [sp, #0x90]
000000000000ab90	adr	x10, #0x63800
000000000000ab94	nop
000000000000ab98	str	x10, [x9, #0x8]
000000000000ab9c	str	wzr, [x9, #0x10]
000000000000aba0	ldr	x9, [x8, #0x18]
000000000000aba4	str	x9, [sp, #0x98]
000000000000aba8	adr	x10, #0x63808
000000000000abac	nop
000000000000abb0	str	x10, [x9, #0x8]
000000000000abb4	mov	w10, #0x1
000000000000abb8	str	w10, [x9, #0x10]
000000000000abbc	ldr	x8, [x8, #0x10]
000000000000abc0	str	x8, [sp, #0xa0]
000000000000abc4	adr	x9, #0x6380c
000000000000abc8	nop
000000000000abcc	str	x9, [x8, #0x8]
000000000000abd0	mov	w9, #0x2
000000000000abd4	str	w9, [x8, #0x10]
000000000000abd8	ldr	x8, [x19, #0x8]
000000000000abdc	ldr	x9, [x8, #0x20]
000000000000abe0	stp	x9, x9, [sp, #0xa8]
000000000000abe4	ldr	x9, [x8, #0x18]
000000000000abe8	stp	x9, x9, [sp, #0xb8]
000000000000abec	ldr	x8, [x8, #0x10]
000000000000abf0	stp	x8, x8, [sp, #0xc8]
000000000000abf4	ldr	x8, [x21, #0x118]
000000000000abf8	add	x0, x8, #0x70
000000000000abfc	mov	w1, #0x30
000000000000ac00	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ac04	stp	x22, xzr, [x0, #0x10]!
000000000000ac08	stur	xzr, [x0, #-0x8]
000000000000ac0c	str	w23, [x0, #0x8]
000000000000ac10	stp	x0, x0, [sp, #0xd8]
000000000000ac14	ldr	x8, [sp, #0xb0]
000000000000ac18	stp	x0, x8, [sp, #0xe8]
000000000000ac1c	ldr	xzr, [x0]
000000000000ac20	str	x8, [x0, #0x10]
000000000000ac24	ldr	x8, [sp, #0xe0]
000000000000ac28	ldr	x9, [sp, #0xc0]
000000000000ac2c	stp	x8, x9, [sp, #0xf8]
000000000000ac30	ldr	xzr, [x8]
000000000000ac34	str	x9, [x8, #0x18]
000000000000ac38	ldr	x8, [sp, #0xe0]
000000000000ac3c	ldr	x9, [sp, #0xd0]
000000000000ac40	stp	x8, x9, [sp, #0x108]
000000000000ac44	ldr	xzr, [x8]
000000000000ac48	str	x9, [x8, #0x20]
000000000000ac4c	ldr	x0, [sp, #0xe0]
000000000000ac50	str	x0, [sp, #0x118]
000000000000ac54	mov	x1, x20
000000000000ac58	bl	"_kfun:kotlin.enums#enumEntries(kotlin.Array<0:0>){0§<kotlin.Enum<0:0>>}kotlin.enums.EnumEntries<0:0>"
000000000000ac5c	str	x0, [x19, #0x10]
000000000000ac60	ldr	x8, [sp, #0x8]
000000000000ac64	str	x8, [x21, #0x110]
000000000000ac68	ldp	x29, x30, [sp, #0x160]
000000000000ac6c	ldp	x20, x19, [sp, #0x150]
000000000000ac70	ldp	x22, x21, [sp, #0x140]
000000000000ac74	ldp	x24, x23, [sp, #0x130]
000000000000ac78	add	sp, sp, #0x170
000000000000ac7c	ret
_kfun:kotlin.native.concurrent.FreezableAtomicReference#toString(){}kotlin.String:
000000000000ac80	sub	sp, sp, #0xc0
000000000000ac84	stp	x26, x25, [sp, #0x70]
000000000000ac88	stp	x24, x23, [sp, #0x80]
000000000000ac8c	stp	x22, x21, [sp, #0x90]
000000000000ac90	stp	x20, x19, [sp, #0xa0]
000000000000ac94	stp	x29, x30, [sp, #0xb0]
000000000000ac98	add	x29, sp, #0xb0
000000000000ac9c	mov	x19, x1
000000000000aca0	mov	x20, x0
000000000000aca4	movi.16b	v0, #0x0
000000000000aca8	stp	q0, q0, [sp, #0x20]
000000000000acac	stp	q0, q0, [sp, #0x50]
000000000000acb0	str	q0, [sp, #0x40]
000000000000acb4	add	x8, sp, #0x20
000000000000acb8	add	x25, x8, #0x20
000000000000acbc	add	x23, x8, #0x30
000000000000acc0	add	x22, x8, #0x40
000000000000acc4	add	x24, x8, #0x28
000000000000acc8	add	x21, x8, #0x48
000000000000accc	stp	xzr, xzr, [sp, #0x10]
000000000000acd0	adr	x9, #0x59ec0
000000000000acd4	nop
000000000000acd8	orr	x9, x9, #0x3
000000000000acdc	str	x9, [sp, #0x8]
000000000000ace0	adrp	x0, 112 ; 0x7a000
000000000000ace4	add	x0, x0, #0x2c0
000000000000ace8	ldr	x9, [x0]
000000000000acec	blr	x9
000000000000acf0	ldr	x26, [x0]
000000000000acf4	ldr	x9, [x26, #0x110]
000000000000acf8	str	x8, [x26, #0x110]
000000000000acfc	mov	x8, #0xa00000000
000000000000ad00	stp	x9, x8, [sp, #0x28]
000000000000ad04	adr	x8, #0x89585
000000000000ad08	nop
000000000000ad0c	ldarb	w8, [x8]
000000000000ad10	tbz	w8, #0x0, 0xad18
000000000000ad14	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ad18	add	x8, sp, #0x8
000000000000ad1c	str	x8, [sp, #0x38]
000000000000ad20	add	x0, sp, #0x8
000000000000ad24	mov	w1, #0xa
000000000000ad28	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000ad2c	mov	x0, x20
000000000000ad30	mov	x1, x25
000000000000ad34	bl	"_kfun:kotlin.native.concurrent.debugString#internal"
000000000000ad38	mov	x1, x0
000000000000ad3c	add	x0, sp, #0x8
000000000000ad40	mov	x2, x24
000000000000ad44	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000ad48	adr	x1, #0x636b8
000000000000ad4c	nop
000000000000ad50	add	x0, sp, #0x8
000000000000ad54	mov	x2, x23
000000000000ad58	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000ad5c	add	x8, x20, #0x8
000000000000ad60	ldar	x0, [x8]
000000000000ad64	str	x0, [sp, #0x58]
000000000000ad68	mov	x1, x22
000000000000ad6c	bl	"_kfun:kotlin.native.concurrent.debugString#internal"
000000000000ad70	mov	x1, x0
000000000000ad74	add	x0, sp, #0x8
000000000000ad78	mov	x2, x21
000000000000ad7c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000ad80	add	x0, sp, #0x8
000000000000ad84	mov	x1, x19
000000000000ad88	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000ad8c	str	x0, [x19]
000000000000ad90	ldr	x8, [sp, #0x28]
000000000000ad94	str	x8, [x26, #0x110]
000000000000ad98	ldp	x29, x30, [sp, #0xb0]
000000000000ad9c	ldp	x20, x19, [sp, #0xa0]
000000000000ada0	ldp	x22, x21, [sp, #0x90]
000000000000ada4	ldp	x24, x23, [sp, #0x80]
000000000000ada8	ldp	x26, x25, [sp, #0x70]
000000000000adac	add	sp, sp, #0xc0
000000000000adb0	ret
_kfun:kotlin.native.concurrent.debugString#internal:
000000000000adb4	sub	sp, sp, #0x150
000000000000adb8	stp	x26, x25, [sp, #0x100]
000000000000adbc	stp	x24, x23, [sp, #0x110]
000000000000adc0	stp	x22, x21, [sp, #0x120]
000000000000adc4	stp	x20, x19, [sp, #0x130]
000000000000adc8	stp	x29, x30, [sp, #0x140]
000000000000adcc	add	x29, sp, #0x140
000000000000add0	mov	x19, x1
000000000000add4	mov	x20, x0
000000000000add8	movi.16b	v0, #0x0
000000000000addc	stp	q0, q0, [sp, #0x30]
000000000000ade0	stp	q0, q0, [sp, #0x60]
000000000000ade4	str	q0, [sp, #0x50]
000000000000ade8	stp	xzr, xzr, [sp, #0x20]
000000000000adec	adr	x8, #0x59da4
000000000000adf0	nop
000000000000adf4	orr	x8, x8, #0x3
000000000000adf8	stp	xzr, x8, [sp, #0x10]
000000000000adfc	adr	x8, #0x57a44
000000000000ae00	nop
000000000000ae04	orr	x8, x8, #0x3
000000000000ae08	str	x8, [sp, #0x8]
000000000000ae0c	adrp	x0, 112 ; 0x7a000
000000000000ae10	add	x0, x0, #0x2c0
000000000000ae14	ldr	x8, [x0]
000000000000ae18	blr	x8
000000000000ae1c	ldr	x25, [x0]
000000000000ae20	ldr	x8, [x25, #0x110]
000000000000ae24	add	x9, sp, #0x30
000000000000ae28	str	x9, [x25, #0x110]
000000000000ae2c	mov	x9, #0xa00000000
000000000000ae30	stp	x8, x9, [sp, #0x38]
000000000000ae34	adr	x8, #0x89455
000000000000ae38	nop
000000000000ae3c	ldarb	w8, [x8]
000000000000ae40	tbz	w8, #0x0, 0xae48
000000000000ae44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ae48	cbz	x20, 0xaf30
000000000000ae4c	add	x8, sp, #0x30
000000000000ae50	add	x21, x8, #0x48
000000000000ae54	add	x22, x8, #0x38
000000000000ae58	add	x23, x8, #0x30
000000000000ae5c	add	x24, x8, #0x28
000000000000ae60	add	x8, sp, #0x18
000000000000ae64	str	x8, [sp, #0x48]
000000000000ae68	add	x0, sp, #0x18
000000000000ae6c	mov	w1, #0xa
000000000000ae70	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000ae74	ldr	x8, [x20]
000000000000ae78	and	x8, x8, #0xfffffffffffffffc
000000000000ae7c	ldr	x8, [x8]
000000000000ae80	add	x9, sp, #0x8
000000000000ae84	str	x9, [sp, #0x50]
000000000000ae88	str	x8, [sp, #0x10]
000000000000ae8c	add	x0, sp, #0x8
000000000000ae90	mov	x1, x24
000000000000ae94	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-qualifiedName>(){}kotlin.String?"
000000000000ae98	mov	x1, x0
000000000000ae9c	add	x0, sp, #0x18
000000000000aea0	mov	x2, x23
000000000000aea4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000aea8	adr	x1, #0x633e8
000000000000aeac	nop
000000000000aeb0	add	x0, sp, #0x18
000000000000aeb4	mov	x2, x22
000000000000aeb8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000aebc	movi.16b	v0, #0x0
000000000000aec0	stp	q0, q0, [sp, #0x80]
000000000000aec4	add	x8, sp, #0x80
000000000000aec8	add	x22, x8, #0x18
000000000000aecc	ldr	x9, [x25, #0x110]
000000000000aed0	str	x8, [x25, #0x110]
000000000000aed4	mov	x8, #0x400000000
000000000000aed8	stp	x9, x8, [sp, #0x88]
000000000000aedc	ldr	x8, [x20]
000000000000aee0	and	x8, x8, #0xfffffffffffffffc
000000000000aee4	ldr	x8, [x8]
000000000000aee8	ldr	x8, [x8, #0x78]
000000000000aeec	mov	x0, x20
000000000000aef0	blr	x8
000000000000aef4	mov	w0, w0
000000000000aef8	mov	w1, #0x10
000000000000aefc	mov	x2, x22
000000000000af00	bl	_Kotlin_Long_toStringRadix
000000000000af04	mov	x1, x0
000000000000af08	str	x0, [sp, #0x70]
000000000000af0c	ldr	x8, [sp, #0x88]
000000000000af10	str	x8, [x25, #0x110]
000000000000af14	add	x0, sp, #0x18
000000000000af18	mov	x2, x21
000000000000af1c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000af20	add	x0, sp, #0x18
000000000000af24	mov	x1, x19
000000000000af28	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000af2c	b	0xaf38
000000000000af30	adr	x0, #0x63070
000000000000af34	nop
000000000000af38	str	x0, [x19]
000000000000af3c	ldr	x8, [sp, #0x38]
000000000000af40	str	x8, [x25, #0x110]
000000000000af44	ldp	x29, x30, [sp, #0x140]
000000000000af48	ldp	x20, x19, [sp, #0x130]
000000000000af4c	ldp	x22, x21, [sp, #0x120]
000000000000af50	ldp	x24, x23, [sp, #0x110]
000000000000af54	ldp	x26, x25, [sp, #0x100]
000000000000af58	add	sp, sp, #0x150
000000000000af5c	ret
_kfun:kotlin.native.concurrent.AtomicInt#toString(){}kotlin.String:
000000000000af60	sub	sp, sp, #0x40
000000000000af64	stp	x20, x19, [sp, #0x20]
000000000000af68	stp	x29, x30, [sp, #0x30]
000000000000af6c	add	x29, sp, #0x30
000000000000af70	mov	x19, x1
000000000000af74	mov	x20, x0
000000000000af78	adr	x8, #0x89311
000000000000af7c	nop
000000000000af80	ldarb	w8, [x8]
000000000000af84	tbz	w8, #0x0, 0xaf8c
000000000000af88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000af8c	add	x8, x20, #0x8
000000000000af90	ldar	w8, [x8]
000000000000af94	str	x8, [sp]
000000000000af98	adr	x2, #0x53ceb ; literal pool for: "%d"
000000000000af9c	nop
000000000000afa0	add	x0, sp, #0x10
000000000000afa4	mov	w1, #0x10
000000000000afa8	bl	__ZN5konan8snprintfEPcmPKcz
000000000000afac	add	x0, sp, #0x10
000000000000afb0	mov	x1, x19
000000000000afb4	bl	_CreateStringFromCString
000000000000afb8	str	x0, [x19]
000000000000afbc	ldp	x29, x30, [sp, #0x30]
000000000000afc0	ldp	x20, x19, [sp, #0x20]
000000000000afc4	add	sp, sp, #0x40
000000000000afc8	ret
_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#<get-value>(){}1:0:
000000000000afcc	sub	sp, sp, #0x150
000000000000afd0	stp	x28, x27, [sp, #0xf0]
000000000000afd4	stp	x26, x25, [sp, #0x100]
000000000000afd8	stp	x24, x23, [sp, #0x110]
000000000000afdc	stp	x22, x21, [sp, #0x120]
000000000000afe0	stp	x20, x19, [sp, #0x130]
000000000000afe4	stp	x29, x30, [sp, #0x140]
000000000000afe8	add	x29, sp, #0x140
000000000000afec	mov	x27, x1
000000000000aff0	mov	x20, x0
000000000000aff4	movi.16b	v0, #0x0
000000000000aff8	stp	q0, q0, [sp, #0x10]
000000000000affc	str	xzr, [sp, #0x90]
000000000000b000	stp	q0, q0, [sp, #0x70]
000000000000b004	stp	q0, q0, [sp, #0x50]
000000000000b008	stp	q0, q0, [sp, #0x30]
000000000000b00c	add	x19, sp, #0x10
000000000000b010	adrp	x0, 111 ; 0x7a000
000000000000b014	add	x0, x0, #0x2c0
000000000000b018	ldr	x8, [x0]
000000000000b01c	blr	x8
000000000000b020	ldr	x26, [x0]
000000000000b024	ldr	x8, [x26, #0x110]
000000000000b028	str	x19, [x26, #0x110]
000000000000b02c	mov	x9, #0x1100000000
000000000000b030	stp	x8, x9, [sp, #0x18]
000000000000b034	adr	x25, #0x89255
000000000000b038	nop
000000000000b03c	ldarb	w8, [x25]
000000000000b040	tbz	w8, #0x0, 0xb048
000000000000b044	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b048	ldr	x8, [x20, #0x10]
000000000000b04c	str	x8, [sp, #0x28]
000000000000b050	add	x8, x8, #0x8
000000000000b054	ldar	x21, [x8]
000000000000b058	str	x21, [sp, #0x30]
000000000000b05c	adr	x28, #0x89294
000000000000b060	nop
000000000000b064	ldar	x22, [x28]
000000000000b068	cmp	x22, #0x2
000000000000b06c	b.hs	0xb160
000000000000b070	ldp	x8, x9, [x26, #0x120]
000000000000b074	cmp	x8, x9
000000000000b078	b.eq	0xb098
000000000000b07c	mov	x10, x9
000000000000b080	ldr	x11, [x10, #-0x10]!
000000000000b084	cmp	x11, x28
000000000000b088	b.eq	0xb158
000000000000b08c	mov	x9, x10
000000000000b090	cmp	x10, x8
000000000000b094	b.ne	0xb080
000000000000b098	add	x23, x26, #0x120
000000000000b09c	add	x0, x26, #0x138
000000000000b0a0	mov	w9, #0x1
000000000000b0a4	ldaxr	w8, [x0]
000000000000b0a8	stlxr	w10, w9, [x0]
000000000000b0ac	cbnz	w10, 0xb0a4
000000000000b0b0	b	0xb0c0
000000000000b0b4	mov	w24, #0x1
000000000000b0b8	stlxr	w9, x24, [x28]
000000000000b0bc	cbz	w9, 0xb0d0
000000000000b0c0	ldaxr	x22, [x28]
000000000000b0c4	cbz	x22, 0xb0b4
000000000000b0c8	mov	w24, #0x0
000000000000b0cc	clrex
000000000000b0d0	cmp	x22, #0x1
000000000000b0d4	b.eq	0xb0c0
000000000000b0d8	cbz	x26, 0xb100
000000000000b0dc	ldaxr	w9, [x0]
000000000000b0e0	stlxr	w10, w8, [x0]
000000000000b0e4	cbnz	w10, 0xb0dc
000000000000b0e8	cbnz	w8, 0xb100
000000000000b0ec	cmp	w9, #0x1
000000000000b0f0	b.ne	0xb100
000000000000b0f4	ldarb	w8, [x25]
000000000000b0f8	tbz	w8, #0x0, 0xb100
000000000000b0fc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000b100	tbz	w24, #0x0, 0xb148
000000000000b104	ldr	x8, [x26, #0x118]
000000000000b108	add	x0, x8, #0x70
000000000000b10c	mov	w1, #0x10
000000000000b110	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000b114	mov	x22, x0
000000000000b118	adr	x8, #0x573e8
000000000000b11c	nop
000000000000b120	str	x8, [x22, #0x10]!
000000000000b124	stur	xzr, [x22, #-0x8]
000000000000b128	str	x22, [sp, #0x38]
000000000000b12c	ldp	x9, x8, [x26, #0x128]
000000000000b130	cmp	x9, x8
000000000000b134	b.hs	0xb270
000000000000b138	stp	x28, x22, [x9]
000000000000b13c	add	x8, x9, #0x10
000000000000b140	str	x8, [x26, #0x128]
000000000000b144	b	0xb304
000000000000b148	str	x22, [sp, #0x38]
000000000000b14c	cmp	x22, x21
000000000000b150	b.ne	0xb560
000000000000b154	b	0xb168
000000000000b158	ldur	x22, [x9, #-0x8]
000000000000b15c	str	x22, [sp, #0x38]
000000000000b160	cmp	x22, x21
000000000000b164	b.ne	0xb560
000000000000b168	ldr	x22, [x20, #0x18]
000000000000b16c	mov	x0, x22
000000000000b170	bl	"_kfun:kotlin.native.concurrent.Lock#lock(){}"
000000000000b174	ldr	x8, [x20, #0x10]
000000000000b178	str	x8, [sp, #0x40]
000000000000b17c	add	x8, x8, #0x8
000000000000b180	ldar	x21, [x8]
000000000000b184	str	x21, [sp, #0x48]
000000000000b188	ldar	x23, [x28]
000000000000b18c	cmp	x23, #0x2
000000000000b190	b.hs	0xb370
000000000000b194	ldp	x8, x9, [x26, #0x120]
000000000000b198	cmp	x8, x9
000000000000b19c	b.eq	0xb1bc
000000000000b1a0	mov	x10, x9
000000000000b1a4	ldr	x11, [x10, #-0x10]!
000000000000b1a8	cmp	x11, x28
000000000000b1ac	b.eq	0xb368
000000000000b1b0	mov	x9, x10
000000000000b1b4	cmp	x10, x8
000000000000b1b8	b.ne	0xb1a4
000000000000b1bc	add	x8, x26, #0x120
000000000000b1c0	str	x8, [sp, #0x8]
000000000000b1c4	add	x0, x26, #0x138
000000000000b1c8	mov	w9, #0x1
000000000000b1cc	ldaxr	w8, [x0]
000000000000b1d0	stlxr	w10, w9, [x0]
000000000000b1d4	cbnz	w10, 0xb1cc
000000000000b1d8	b	0xb1e8
000000000000b1dc	mov	w24, #0x1
000000000000b1e0	stlxr	w9, x24, [x28]
000000000000b1e4	cbz	w9, 0xb1f8
000000000000b1e8	ldaxr	x23, [x28]
000000000000b1ec	cbz	x23, 0xb1dc
000000000000b1f0	mov	w24, #0x0
000000000000b1f4	clrex
000000000000b1f8	cmp	x23, #0x1
000000000000b1fc	b.eq	0xb1e8
000000000000b200	cbz	x26, 0xb228
000000000000b204	ldaxr	w9, [x0]
000000000000b208	stlxr	w10, w8, [x0]
000000000000b20c	cbnz	w10, 0xb204
000000000000b210	cbnz	w8, 0xb228
000000000000b214	cmp	w9, #0x1
000000000000b218	b.ne	0xb228
000000000000b21c	ldarb	w8, [x25]
000000000000b220	tbz	w8, #0x0, 0xb228
000000000000b224	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000b228	tbz	w24, #0x0, 0xb358
000000000000b22c	ldr	x8, [x26, #0x118]
000000000000b230	add	x0, x8, #0x70
000000000000b234	mov	w1, #0x10
000000000000b238	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000b23c	mov	x23, x0
000000000000b240	adr	x8, #0x572c0
000000000000b244	nop
000000000000b248	str	x8, [x23, #0x10]!
000000000000b24c	stur	xzr, [x23, #-0x8]
000000000000b250	str	x23, [sp, #0x58]
000000000000b254	ldp	x9, x8, [x26, #0x128]
000000000000b258	cmp	x9, x8
000000000000b25c	b.hs	0xb3fc
000000000000b260	stp	x28, x23, [x9]
000000000000b264	add	x8, x9, #0x10
000000000000b268	str	x8, [x26, #0x128]
000000000000b26c	b	0xb490
000000000000b270	str	x27, [sp, #0x8]
000000000000b274	ldr	x10, [x23]
000000000000b278	sub	x9, x9, x10
000000000000b27c	asr	x19, x9, #4
000000000000b280	add	x9, x19, #0x1
000000000000b284	lsr	x11, x9, #60
000000000000b288	cbnz	x11, 0xb598
000000000000b28c	sub	x8, x8, x10
000000000000b290	asr	x10, x8, #3
000000000000b294	cmp	x10, x9
000000000000b298	csel	x9, x9, x10, lo
000000000000b29c	mov	x10, #0x7ffffffffffffff
000000000000b2a0	cmp	x10, x8, asr #4
000000000000b2a4	mov	x8, #0xfffffffffffffff
000000000000b2a8	csel	x24, x9, x8, hi
000000000000b2ac	mov	x0, x24
000000000000b2b0	mov	w1, #0x10
000000000000b2b4	bl	0x553d4 ; symbol stub for: _calloc
000000000000b2b8	add	x8, x0, x19, lsl #4
000000000000b2bc	add	x27, x0, x24, lsl #4
000000000000b2c0	stp	x28, x22, [x8]
000000000000b2c4	add	x19, x8, #0x10
000000000000b2c8	ldp	x1, x9, [x26, #0x120]
000000000000b2cc	sub	x2, x9, x1
000000000000b2d0	sub	x24, x8, x2
000000000000b2d4	cmp	x2, #0x1
000000000000b2d8	b.lt	0xb2e8
000000000000b2dc	mov	x0, x24
000000000000b2e0	bl	0x554ac ; symbol stub for: _memcpy
000000000000b2e4	ldr	x1, [x23]
000000000000b2e8	stp	x24, x19, [x26, #0x120]
000000000000b2ec	str	x27, [x26, #0x130]
000000000000b2f0	ldr	x27, [sp, #0x8]
000000000000b2f4	add	x19, sp, #0x10
000000000000b2f8	cbz	x1, 0xb304
000000000000b2fc	mov	x0, x1
000000000000b300	bl	0x55458 ; symbol stub for: _free
000000000000b304	mov	w0, #0x1
000000000000b308	mov	w1, #0x28
000000000000b30c	bl	0x553d4 ; symbol stub for: _calloc
000000000000b310	mov	x8, x26
000000000000b314	ldr	x9, [x8, #0x18]!
000000000000b318	sub	x10, x8, #0x8
000000000000b31c	stp	x28, x10, [x0, #0x10]
000000000000b320	stp	x9, x8, [x0]
000000000000b324	str	x0, [x9, #0x8]
000000000000b328	str	x0, [x8]
000000000000b32c	ldr	x9, [x8, #0x10]
000000000000b330	add	x9, x9, #0x1
000000000000b334	str	x9, [x8, #0x10]
000000000000b338	str	x0, [x0, #0x20]
000000000000b33c	stlr	x22, [x28]
000000000000b340	ldr	x9, [x8, #0x110]
000000000000b344	sub	x9, x9, #0x10
000000000000b348	str	x9, [x8, #0x110]
000000000000b34c	cmp	x22, x21
000000000000b350	b.ne	0xb560
000000000000b354	b	0xb168
000000000000b358	str	x23, [sp, #0x58]
000000000000b35c	cmp	x23, x21
000000000000b360	b.ne	0xb558
000000000000b364	b	0xb378
000000000000b368	ldur	x23, [x9, #-0x8]
000000000000b36c	str	x23, [sp, #0x58]
000000000000b370	cmp	x23, x21
000000000000b374	b.ne	0xb558
000000000000b378	ldr	x8, [x20, #0x8]
000000000000b37c	str	x8, [sp, #0x60]
000000000000b380	add	x8, x8, #0x8
000000000000b384	ldar	x0, [x8]
000000000000b388	str	x0, [sp, #0x68]
000000000000b38c	cbz	x0, 0xb590
000000000000b390	add	x1, x19, #0x60
000000000000b394	ldr	x8, [x0]
000000000000b398	and	x8, x8, #0xfffffffffffffffc
000000000000b39c	ldr	x8, [x8]
000000000000b3a0	ldr	w9, [x8, #0x3c]
000000000000b3a4	ldr	x8, [x8, #0x40]
000000000000b3a8	tbnz	w9, #0x1f, 0xb3b8
000000000000b3ac	mov	w10, #0x59
000000000000b3b0	and	x9, x9, x10
000000000000b3b4	b	0xb524
000000000000b3b8	neg	w10, w9
000000000000b3bc	mvn	w9, w9
000000000000b3c0	cmp	w10, #0x9
000000000000b3c4	b.ge	0xb4e4
000000000000b3c8	cmp	w10, #0x2
000000000000b3cc	b.lt	0xb518
000000000000b3d0	mov	x10, #0x0
000000000000b3d4	mov	x11, x8
000000000000b3d8	ldr	w12, [x11]
000000000000b3dc	cmp	w12, #0x58
000000000000b3e0	b.gt	0xb520
000000000000b3e4	add	x10, x10, #0x1
000000000000b3e8	add	x11, x11, #0x10
000000000000b3ec	cmp	x9, x10
000000000000b3f0	b.ne	0xb3d8
000000000000b3f4	mov	x10, x9
000000000000b3f8	b	0xb520
000000000000b3fc	ldr	x10, [sp, #0x8]
000000000000b400	ldr	x10, [x10]
000000000000b404	sub	x9, x9, x10
000000000000b408	asr	x19, x9, #4
000000000000b40c	add	x9, x19, #0x1
000000000000b410	lsr	x11, x9, #60
000000000000b414	cbnz	x11, 0xb5a0
000000000000b418	sub	x8, x8, x10
000000000000b41c	asr	x10, x8, #3
000000000000b420	cmp	x10, x9
000000000000b424	csel	x9, x9, x10, lo
000000000000b428	mov	x10, #0x7ffffffffffffff
000000000000b42c	cmp	x10, x8, asr #4
000000000000b430	mov	x8, #0xfffffffffffffff
000000000000b434	csel	x25, x9, x8, hi
000000000000b438	mov	x0, x25
000000000000b43c	mov	w1, #0x10
000000000000b440	bl	0x553d4 ; symbol stub for: _calloc
000000000000b444	add	x8, x0, x19, lsl #4
000000000000b448	add	x24, x0, x25, lsl #4
000000000000b44c	stp	x28, x23, [x8]
000000000000b450	add	x19, x8, #0x10
000000000000b454	ldp	x1, x9, [x26, #0x120]
000000000000b458	sub	x2, x9, x1
000000000000b45c	sub	x25, x8, x2
000000000000b460	cmp	x2, #0x1
000000000000b464	b.lt	0xb478
000000000000b468	mov	x0, x25
000000000000b46c	bl	0x554ac ; symbol stub for: _memcpy
000000000000b470	ldr	x8, [sp, #0x8]
000000000000b474	ldr	x1, [x8]
000000000000b478	stp	x25, x19, [x26, #0x120]
000000000000b47c	str	x24, [x26, #0x130]
000000000000b480	add	x19, sp, #0x10
000000000000b484	cbz	x1, 0xb490
000000000000b488	mov	x0, x1
000000000000b48c	bl	0x55458 ; symbol stub for: _free
000000000000b490	mov	w0, #0x1
000000000000b494	mov	w1, #0x28
000000000000b498	bl	0x553d4 ; symbol stub for: _calloc
000000000000b49c	mov	x8, x26
000000000000b4a0	ldr	x9, [x8, #0x18]!
000000000000b4a4	sub	x10, x8, #0x8
000000000000b4a8	stp	x28, x10, [x0, #0x10]
000000000000b4ac	stp	x9, x8, [x0]
000000000000b4b0	str	x0, [x9, #0x8]
000000000000b4b4	str	x0, [x8]
000000000000b4b8	ldr	x9, [x8, #0x10]
000000000000b4bc	add	x9, x9, #0x1
000000000000b4c0	str	x9, [x8, #0x10]
000000000000b4c4	str	x0, [x0, #0x20]
000000000000b4c8	stlr	x23, [x28]
000000000000b4cc	ldr	x9, [x8, #0x110]
000000000000b4d0	sub	x9, x9, #0x10
000000000000b4d4	str	x9, [x8, #0x110]
000000000000b4d8	cmp	x23, x21
000000000000b4dc	b.ne	0xb558
000000000000b4e0	b	0xb378
000000000000b4e4	mov	w10, #0x0
000000000000b4e8	add	w11, w9, w10
000000000000b4ec	cmp	w11, #0x0
000000000000b4f0	cinc	w11, w11, lt
000000000000b4f4	asr	w11, w11, #1
000000000000b4f8	sbfiz	x12, x11, #4, #32
000000000000b4fc	ldr	w12, [x8, x12]
000000000000b500	cmp	w12, #0x59
000000000000b504	csinc	w10, w10, w11, ge
000000000000b508	csel	w9, w9, w11, lt
000000000000b50c	cmp	w10, w9
000000000000b510	b.lt	0xb4e8
000000000000b514	b	0xb520
000000000000b518	mov	w10, #0x0
000000000000b51c	b	0xb520
000000000000b520	sxtw	x9, w10
000000000000b524	add	x8, x8, x9, lsl #4
000000000000b528	ldr	x8, [x8, #0x8]
000000000000b52c	ldr	x8, [x8]
000000000000b530	blr	x8
000000000000b534	mov	x21, x0
000000000000b538	ldr	x8, [x20, #0x10]
000000000000b53c	str	x8, [sp, #0x88]
000000000000b540	add	x8, x8, #0x8
000000000000b544	stlr	x0, [x8]
000000000000b548	ldr	x8, [x20, #0x8]
000000000000b54c	str	x8, [sp, #0x90]
000000000000b550	add	x8, x8, #0x8
000000000000b554	stlr	xzr, [x8]
000000000000b558	mov	x0, x22
000000000000b55c	bl	"_kfun:kotlin.native.concurrent.Lock#unlock(){}"
000000000000b560	str	x21, [x27]
000000000000b564	ldr	x8, [sp, #0x18]
000000000000b568	str	x8, [x26, #0x110]
000000000000b56c	mov	x0, x21
000000000000b570	ldp	x29, x30, [sp, #0x140]
000000000000b574	ldp	x20, x19, [sp, #0x130]
000000000000b578	ldp	x22, x21, [sp, #0x120]
000000000000b57c	ldp	x24, x23, [sp, #0x110]
000000000000b580	ldp	x26, x25, [sp, #0x100]
000000000000b584	ldp	x28, x27, [sp, #0xf0]
000000000000b588	add	sp, sp, #0x150
000000000000b58c	ret
000000000000b590	bl	_ThrowNullPointerException
000000000000b594	b	0xb5a8
000000000000b598	mov	x0, x23
000000000000b59c	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000b5a0	ldr	x0, [sp, #0x8]
000000000000b5a4	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000b5a8	brk	#0x1
000000000000b5ac	add	x8, sp, #0x10
000000000000b5b0	str	x8, [x26, #0x110]
000000000000b5b4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000000b5b8	ldr	x8, [x0, #0x8]
000000000000b5bc	ldr	x19, [x8]
000000000000b5c0	str	x19, [sp, #0x50]
000000000000b5c4	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000000b5c8	mov	x0, x22
000000000000b5cc	bl	"_kfun:kotlin.native.concurrent.Lock#unlock(){}"
000000000000b5d0	mov	x0, x19
000000000000b5d4	bl	_ThrowException
_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#isInitialized(){}kotlin.Boolean:
000000000000b5d8	sub	sp, sp, #0xa0
000000000000b5dc	stp	x26, x25, [sp, #0x50]
000000000000b5e0	stp	x24, x23, [sp, #0x60]
000000000000b5e4	stp	x22, x21, [sp, #0x70]
000000000000b5e8	stp	x20, x19, [sp, #0x80]
000000000000b5ec	stp	x29, x30, [sp, #0x90]
000000000000b5f0	add	x29, sp, #0x90
000000000000b5f4	mov	x19, x0
000000000000b5f8	movi.16b	v0, #0x0
000000000000b5fc	stp	q0, q0, [sp]
000000000000b600	str	q0, [sp, #0x20]
000000000000b604	adrp	x0, 111 ; 0x7a000
000000000000b608	add	x0, x0, #0x2c0
000000000000b60c	ldr	x8, [x0]
000000000000b610	blr	x8
000000000000b614	ldr	x22, [x0]
000000000000b618	ldr	x8, [x22, #0x110]
000000000000b61c	mov	x9, sp
000000000000b620	str	x9, [x22, #0x110]
000000000000b624	mov	x9, #0x600000000
000000000000b628	stp	x8, x9, [sp, #0x8]
000000000000b62c	adr	x21, #0x88c5d
000000000000b630	nop
000000000000b634	ldarb	w8, [x21]
000000000000b638	tbz	w8, #0x0, 0xb640
000000000000b63c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b640	ldr	x8, [x19, #0x10]
000000000000b644	str	x8, [sp, #0x18]
000000000000b648	add	x8, x8, #0x8
000000000000b64c	ldar	x23, [x8]
000000000000b650	str	x23, [sp, #0x20]
000000000000b654	adr	x24, #0x88c9c
000000000000b658	nop
000000000000b65c	ldar	x19, [x24]
000000000000b660	cmp	x19, #0x1
000000000000b664	b.hi	0xb824
000000000000b668	ldp	x8, x9, [x22, #0x120]
000000000000b66c	cmp	x8, x9
000000000000b670	b.eq	0xb690
000000000000b674	mov	x10, x9
000000000000b678	ldr	x11, [x10, #-0x10]!
000000000000b67c	cmp	x11, x24
000000000000b680	b.eq	0xb748
000000000000b684	mov	x9, x10
000000000000b688	cmp	x10, x8
000000000000b68c	b.ne	0xb678
000000000000b690	add	x20, x22, #0x120
000000000000b694	add	x0, x22, #0x138
000000000000b698	mov	w9, #0x1
000000000000b69c	ldaxr	w8, [x0]
000000000000b6a0	stlxr	w10, w9, [x0]
000000000000b6a4	cbnz	w10, 0xb69c
000000000000b6a8	b	0xb6b8
000000000000b6ac	mov	w25, #0x1
000000000000b6b0	stlxr	w9, x25, [x24]
000000000000b6b4	cbz	w9, 0xb6c8
000000000000b6b8	ldaxr	x19, [x24]
000000000000b6bc	cbz	x19, 0xb6ac
000000000000b6c0	mov	w25, #0x0
000000000000b6c4	clrex
000000000000b6c8	cmp	x19, #0x1
000000000000b6cc	b.eq	0xb6b8
000000000000b6d0	cbz	x22, 0xb6f8
000000000000b6d4	ldaxr	w9, [x0]
000000000000b6d8	stlxr	w10, w8, [x0]
000000000000b6dc	cbnz	w10, 0xb6d4
000000000000b6e0	cbnz	w8, 0xb6f8
000000000000b6e4	cmp	w9, #0x1
000000000000b6e8	b.ne	0xb6f8
000000000000b6ec	ldarb	w8, [x21]
000000000000b6f0	tbz	w8, #0x0, 0xb6f8
000000000000b6f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000b6f8	tbz	w25, #0x0, 0xb740
000000000000b6fc	ldr	x8, [x22, #0x118]
000000000000b700	add	x0, x8, #0x70
000000000000b704	mov	w1, #0x10
000000000000b708	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000b70c	mov	x19, x0
000000000000b710	adr	x8, #0x56df0
000000000000b714	nop
000000000000b718	str	x8, [x19, #0x10]!
000000000000b71c	stur	xzr, [x19, #-0x8]
000000000000b720	str	x19, [sp, #0x28]
000000000000b724	ldp	x9, x8, [x22, #0x128]
000000000000b728	cmp	x9, x8
000000000000b72c	b.hs	0xb754
000000000000b730	stp	x24, x19, [x9]
000000000000b734	add	x8, x9, #0x10
000000000000b738	str	x8, [x22, #0x128]
000000000000b73c	b	0xb7dc
000000000000b740	str	x19, [sp, #0x28]
000000000000b744	b	0xb824
000000000000b748	ldur	x19, [x9, #-0x8]
000000000000b74c	str	x19, [sp, #0x28]
000000000000b750	b	0xb824
000000000000b754	ldr	x10, [x20]
000000000000b758	sub	x9, x9, x10
000000000000b75c	asr	x25, x9, #4
000000000000b760	add	x9, x25, #0x1
000000000000b764	lsr	x11, x9, #60
000000000000b768	cbnz	x11, 0xb850
000000000000b76c	sub	x8, x8, x10
000000000000b770	asr	x10, x8, #3
000000000000b774	cmp	x10, x9
000000000000b778	csel	x9, x9, x10, lo
000000000000b77c	mov	x10, #0x7ffffffffffffff
000000000000b780	cmp	x10, x8, asr #4
000000000000b784	mov	x8, #0xfffffffffffffff
000000000000b788	csel	x21, x9, x8, hi
000000000000b78c	mov	x0, x21
000000000000b790	mov	w1, #0x10
000000000000b794	bl	0x553d4 ; symbol stub for: _calloc
000000000000b798	add	x8, x0, x25, lsl #4
000000000000b79c	add	x25, x0, x21, lsl #4
000000000000b7a0	stp	x24, x19, [x8]
000000000000b7a4	add	x26, x8, #0x10
000000000000b7a8	ldp	x1, x9, [x22, #0x120]
000000000000b7ac	sub	x2, x9, x1
000000000000b7b0	sub	x21, x8, x2
000000000000b7b4	cmp	x2, #0x1
000000000000b7b8	b.lt	0xb7c8
000000000000b7bc	mov	x0, x21
000000000000b7c0	bl	0x554ac ; symbol stub for: _memcpy
000000000000b7c4	ldr	x1, [x20]
000000000000b7c8	stp	x21, x26, [x22, #0x120]
000000000000b7cc	str	x25, [x22, #0x130]
000000000000b7d0	cbz	x1, 0xb7dc
000000000000b7d4	mov	x0, x1
000000000000b7d8	bl	0x55458 ; symbol stub for: _free
000000000000b7dc	mov	w0, #0x1
000000000000b7e0	mov	w1, #0x28
000000000000b7e4	bl	0x553d4 ; symbol stub for: _calloc
000000000000b7e8	mov	x8, x22
000000000000b7ec	ldr	x9, [x8, #0x18]!
000000000000b7f0	sub	x10, x8, #0x8
000000000000b7f4	stp	x24, x10, [x0, #0x10]
000000000000b7f8	stp	x9, x8, [x0]
000000000000b7fc	str	x0, [x9, #0x8]
000000000000b800	str	x0, [x8]
000000000000b804	ldr	x9, [x8, #0x10]
000000000000b808	add	x9, x9, #0x1
000000000000b80c	str	x9, [x8, #0x10]
000000000000b810	str	x0, [x0, #0x20]
000000000000b814	stlr	x19, [x24]
000000000000b818	ldr	x9, [x8, #0x110]
000000000000b81c	sub	x9, x9, #0x10
000000000000b820	str	x9, [x8, #0x110]
000000000000b824	cmp	x19, x23
000000000000b828	cset	w0, ne
000000000000b82c	ldr	x8, [sp, #0x8]
000000000000b830	str	x8, [x22, #0x110]
000000000000b834	ldp	x29, x30, [sp, #0x90]
000000000000b838	ldp	x20, x19, [sp, #0x80]
000000000000b83c	ldp	x22, x21, [sp, #0x70]
000000000000b840	ldp	x24, x23, [sp, #0x60]
000000000000b844	ldp	x26, x25, [sp, #0x50]
000000000000b848	add	sp, sp, #0xa0
000000000000b84c	ret
000000000000b850	mov	x0, x20
000000000000b854	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#toString(){}kotlin.String:
000000000000b858	sub	sp, sp, #0x50
000000000000b85c	stp	x22, x21, [sp, #0x20]
000000000000b860	stp	x20, x19, [sp, #0x30]
000000000000b864	stp	x29, x30, [sp, #0x40]
000000000000b868	add	x29, sp, #0x40
000000000000b86c	mov	x19, x1
000000000000b870	mov	x20, x0
000000000000b874	movi.16b	v0, #0x0
000000000000b878	stp	q0, q0, [sp]
000000000000b87c	adrp	x0, 111 ; 0x7a000
000000000000b880	add	x0, x0, #0x2c0
000000000000b884	ldr	x8, [x0]
000000000000b888	blr	x8
000000000000b88c	ldr	x21, [x0]
000000000000b890	ldr	x8, [x21, #0x110]
000000000000b894	mov	x9, sp
000000000000b898	str	x9, [x21, #0x110]
000000000000b89c	mov	x9, #0x400000000
000000000000b8a0	stp	x8, x9, [sp, #0x8]
000000000000b8a4	adr	x8, #0x889e5
000000000000b8a8	nop
000000000000b8ac	ldarb	w8, [x8]
000000000000b8b0	tbnz	w8, #0x0, 0xb8f0
000000000000b8b4	mov	x0, x20
000000000000b8b8	bl	"_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#isInitialized(){}kotlin.Boolean"
000000000000b8bc	cbz	w0, 0xb900
000000000000b8c0	mov	x8, sp
000000000000b8c4	add	x1, x8, #0x18
000000000000b8c8	mov	x0, x20
000000000000b8cc	bl	"_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#<get-value>(){}1:0"
000000000000b8d0	cbz	x0, 0xb90c
000000000000b8d4	ldr	x8, [x0]
000000000000b8d8	and	x8, x8, #0xfffffffffffffffc
000000000000b8dc	ldr	x8, [x8]
000000000000b8e0	ldr	x8, [x8, #0x80]
000000000000b8e4	mov	x1, x19
000000000000b8e8	blr	x8
000000000000b8ec	b	0xb914
000000000000b8f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b8f4	mov	x0, x20
000000000000b8f8	bl	"_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#isInitialized(){}kotlin.Boolean"
000000000000b8fc	cbnz	w0, 0xb8c0
000000000000b900	adr	x0, #0x62b20
000000000000b904	nop
000000000000b908	b	0xb914
000000000000b90c	adr	x0, #0x62694
000000000000b910	nop
000000000000b914	str	x0, [x19]
000000000000b918	ldr	x8, [sp, #0x8]
000000000000b91c	str	x8, [x21, #0x110]
000000000000b920	ldp	x29, x30, [sp, #0x40]
000000000000b924	ldp	x20, x19, [sp, #0x30]
000000000000b928	ldp	x22, x21, [sp, #0x20]
000000000000b92c	add	sp, sp, #0x50
000000000000b930	ret
_kfun:kotlin.native.concurrent.Lock#lock(){}:
000000000000b934	sub	sp, sp, #0x90
000000000000b938	stp	x24, x23, [sp, #0x50]
000000000000b93c	stp	x22, x21, [sp, #0x60]
000000000000b940	stp	x20, x19, [sp, #0x70]
000000000000b944	stp	x29, x30, [sp, #0x80]
000000000000b948	add	x29, sp, #0x80
000000000000b94c	mov	x19, x0
000000000000b950	movi.16b	v0, #0x0
000000000000b954	stp	q0, q0, [sp]
000000000000b958	adrp	x0, 111 ; 0x7a000
000000000000b95c	add	x0, x0, #0x2c0
000000000000b960	ldr	x8, [x0]
000000000000b964	blr	x8
000000000000b968	ldr	x22, [x0]
000000000000b96c	ldr	x8, [x22, #0x110]
000000000000b970	mov	x9, sp
000000000000b974	str	x9, [x22, #0x110]
000000000000b978	mov	x9, #0x400000000
000000000000b97c	stp	x8, x9, [sp, #0x8]
000000000000b980	adr	x23, #0x88909
000000000000b984	nop
000000000000b988	ldarb	w8, [x23]
000000000000b98c	tbz	w8, #0x0, 0xb994
000000000000b990	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b994	bl	_LookupTLS
000000000000b998	ldar	x20, [x0]
000000000000b99c	cmp	x20, #0x2
000000000000b9a0	b.hs	0xba2c
000000000000b9a4	cbz	x20, 0xb9b0
000000000000b9a8	str	x20, [sp, #0x18]
000000000000b9ac	b	0xba2c
000000000000b9b0	mov	x21, x0
000000000000b9b4	ldr	x8, [x22, #0x118]
000000000000b9b8	add	x0, x8, #0x70
000000000000b9bc	mov	w1, #0x18
000000000000b9c0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000b9c4	mov	x20, x0
000000000000b9c8	adr	x8, #0x56c58
000000000000b9cc	nop
000000000000b9d0	str	x8, [x20, #0x10]!
000000000000b9d4	stur	xzr, [x20, #-0x8]
000000000000b9d8	str	x20, [sp, #0x18]
000000000000b9dc	str	x20, [x21]
000000000000b9e0	movi.16b	v0, #0x0
000000000000b9e4	stp	q0, q0, [sp, #0x20]
000000000000b9e8	str	xzr, [sp, #0x40]
000000000000b9ec	add	x8, sp, #0x20
000000000000b9f0	ldp	x9, x10, [x22, #0x110]
000000000000b9f4	str	x8, [x22, #0x110]
000000000000b9f8	mov	x8, #0x500000000
000000000000b9fc	stp	x9, x8, [sp, #0x28]
000000000000ba00	add	x0, x10, #0x70
000000000000ba04	mov	w1, #0x10
000000000000ba08	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ba0c	adr	x8, #0x550e4
000000000000ba10	nop
000000000000ba14	str	x8, [x0, #0x10]!
000000000000ba18	stur	xzr, [x0, #-0x8]
000000000000ba1c	stp	x0, x0, [sp, #0x38]
000000000000ba20	str	x0, [x20, #0x8]
000000000000ba24	ldr	x8, [sp, #0x28]
000000000000ba28	str	x8, [x22, #0x110]
000000000000ba2c	ldr	x0, [x20, #0x8]
000000000000ba30	ldr	x8, [x0]
000000000000ba34	and	x8, x8, #0xfffffffffffffffc
000000000000ba38	ldr	x8, [x8]
000000000000ba3c	ldr	x8, [x8, #0x78]
000000000000ba40	blr	x8
000000000000ba44	mov	x20, x0
000000000000ba48	ldarb	w8, [x23]
000000000000ba4c	tbz	w8, #0x0, 0xba54
000000000000ba50	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ba54	ldr	x8, [x19, #0x8]
000000000000ba58	add	x9, x8, #0x8
000000000000ba5c	ldaxr	w8, [x9]
000000000000ba60	cbnz	w8, 0xba7c
000000000000ba64	stlxr	w10, w20, [x9]
000000000000ba68	cbnz	w10, 0xba5c
000000000000ba6c	mov	w9, #0x1
000000000000ba70	cmp	w8, w20
000000000000ba74	b.ne	0xba8c
000000000000ba78	b	0xba94
000000000000ba7c	mov	w9, #0x0
000000000000ba80	clrex
000000000000ba84	cmp	w8, w20
000000000000ba88	b.eq	0xba94
000000000000ba8c	tbz	w9, #0x0, 0xba48
000000000000ba90	b	0xbaac
000000000000ba94	ldr	x8, [x19, #0x10]
000000000000ba98	add	x8, x8, #0x8
000000000000ba9c	ldaxr	w9, [x8]
000000000000baa0	add	w9, w9, #0x1
000000000000baa4	stlxr	w10, w9, [x8]
000000000000baa8	cbnz	w10, 0xba9c
000000000000baac	ldr	x8, [sp, #0x8]
000000000000bab0	str	x8, [x22, #0x110]
000000000000bab4	ldp	x29, x30, [sp, #0x80]
000000000000bab8	ldp	x20, x19, [sp, #0x70]
000000000000babc	ldp	x22, x21, [sp, #0x60]
000000000000bac0	ldp	x24, x23, [sp, #0x50]
000000000000bac4	add	sp, sp, #0x90
000000000000bac8	ret
_kfun:kotlin.native.concurrent.Lock#unlock(){}:
000000000000bacc	sub	sp, sp, #0x80
000000000000bad0	stp	x22, x21, [sp, #0x50]
000000000000bad4	stp	x20, x19, [sp, #0x60]
000000000000bad8	stp	x29, x30, [sp, #0x70]
000000000000badc	add	x29, sp, #0x70
000000000000bae0	mov	x19, x0
000000000000bae4	movi.16b	v0, #0x0
000000000000bae8	stp	q0, q0, [sp]
000000000000baec	adrp	x0, 111 ; 0x7a000
000000000000baf0	add	x0, x0, #0x2c0
000000000000baf4	ldr	x8, [x0]
000000000000baf8	blr	x8
000000000000bafc	ldr	x22, [x0]
000000000000bb00	ldr	x8, [x22, #0x110]
000000000000bb04	mov	x9, sp
000000000000bb08	str	x9, [x22, #0x110]
000000000000bb0c	mov	x9, #0x400000000
000000000000bb10	stp	x8, x9, [sp, #0x8]
000000000000bb14	adr	x8, #0x88775
000000000000bb18	nop
000000000000bb1c	ldarb	w8, [x8]
000000000000bb20	tbz	w8, #0x0, 0xbb28
000000000000bb24	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bb28	ldr	x8, [x19, #0x10]
000000000000bb2c	add	x8, x8, #0x8
000000000000bb30	ldar	w8, [x8]
000000000000bb34	cmp	w8, #0x1
000000000000bb38	b.lt	0xbb58
000000000000bb3c	ldr	x8, [x19, #0x10]
000000000000bb40	add	x8, x8, #0x8
000000000000bb44	ldaxr	w9, [x8]
000000000000bb48	sub	w9, w9, #0x1
000000000000bb4c	stlxr	w10, w9, [x8]
000000000000bb50	cbnz	w10, 0xbb44
000000000000bb54	b	0xbc2c
000000000000bb58	bl	_LookupTLS
000000000000bb5c	ldar	x20, [x0]
000000000000bb60	cmp	x20, #0x2
000000000000bb64	b.hs	0xbbf0
000000000000bb68	cbz	x20, 0xbb74
000000000000bb6c	str	x20, [sp, #0x18]
000000000000bb70	b	0xbbf0
000000000000bb74	mov	x21, x0
000000000000bb78	ldr	x8, [x22, #0x118]
000000000000bb7c	add	x0, x8, #0x70
000000000000bb80	mov	w1, #0x18
000000000000bb84	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bb88	mov	x20, x0
000000000000bb8c	adr	x8, #0x56a94
000000000000bb90	nop
000000000000bb94	str	x8, [x20, #0x10]!
000000000000bb98	stur	xzr, [x20, #-0x8]
000000000000bb9c	str	x20, [sp, #0x18]
000000000000bba0	str	x20, [x21]
000000000000bba4	movi.16b	v0, #0x0
000000000000bba8	stp	q0, q0, [sp, #0x20]
000000000000bbac	str	xzr, [sp, #0x40]
000000000000bbb0	add	x8, sp, #0x20
000000000000bbb4	ldp	x9, x10, [x22, #0x110]
000000000000bbb8	str	x8, [x22, #0x110]
000000000000bbbc	mov	x8, #0x500000000
000000000000bbc0	stp	x9, x8, [sp, #0x28]
000000000000bbc4	add	x0, x10, #0x70
000000000000bbc8	mov	w1, #0x10
000000000000bbcc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bbd0	adr	x8, #0x54f20
000000000000bbd4	nop
000000000000bbd8	str	x8, [x0, #0x10]!
000000000000bbdc	stur	xzr, [x0, #-0x8]
000000000000bbe0	stp	x0, x0, [sp, #0x38]
000000000000bbe4	str	x0, [x20, #0x8]
000000000000bbe8	ldr	x8, [sp, #0x28]
000000000000bbec	str	x8, [x22, #0x110]
000000000000bbf0	ldr	x0, [x20, #0x8]
000000000000bbf4	ldr	x8, [x0]
000000000000bbf8	and	x8, x8, #0xfffffffffffffffc
000000000000bbfc	ldr	x8, [x8]
000000000000bc00	ldr	x8, [x8, #0x78]
000000000000bc04	blr	x8
000000000000bc08	ldr	x8, [x19, #0x8]
000000000000bc0c	add	x8, x8, #0x8
000000000000bc10	ldaxr	w9, [x8]
000000000000bc14	cmp	w9, w0
000000000000bc18	b.ne	0xbc28
000000000000bc1c	stlxr	w9, wzr, [x8]
000000000000bc20	cbnz	w9, 0xbc10
000000000000bc24	b	0xbc2c
000000000000bc28	clrex
000000000000bc2c	ldr	x8, [sp, #0x8]
000000000000bc30	str	x8, [x22, #0x110]
000000000000bc34	ldp	x29, x30, [sp, #0x70]
000000000000bc38	ldp	x20, x19, [sp, #0x60]
000000000000bc3c	ldp	x22, x21, [sp, #0x50]
000000000000bc40	add	sp, sp, #0x80
000000000000bc44	ret
_Kotlin_boxShort:
000000000000bc48	sub	sp, sp, #0x70
000000000000bc4c	stp	x22, x21, [sp, #0x40]
000000000000bc50	stp	x20, x19, [sp, #0x50]
000000000000bc54	stp	x29, x30, [sp, #0x60]
000000000000bc58	add	x29, sp, #0x60
000000000000bc5c	mov	x19, x1
000000000000bc60	mov	x21, x0
000000000000bc64	str	xzr, [sp, #0x8]
000000000000bc68	adrp	x20, 111 ; 0x7a000
000000000000bc6c	add	x20, x20, #0x2c0
000000000000bc70	ldr	x22, [x20]
000000000000bc74	mov	x0, x20
000000000000bc78	blr	x22
000000000000bc7c	ldr	x8, [x0]
000000000000bc80	ldr	x9, [x8, #0x110]
000000000000bc84	add	x10, sp, #0x8
000000000000bc88	str	x10, [x8, #0x110]
000000000000bc8c	mov	x8, #0x300000000
000000000000bc90	stp	x9, x8, [sp, #0x10]
000000000000bc94	adr	x8, #0x885f5
000000000000bc98	nop
000000000000bc9c	ldarb	w8, [x8]
000000000000bca0	tbz	w8, #0x0, 0xbca8
000000000000bca4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bca8	movi.16b	v0, #0x0
000000000000bcac	stp	q0, q0, [sp, #0x20]
000000000000bcb0	mov	x0, x20
000000000000bcb4	blr	x22
000000000000bcb8	ldr	x8, [x0]
000000000000bcbc	ldr	x9, [x8, #0x110]
000000000000bcc0	add	x10, sp, #0x20
000000000000bcc4	str	x10, [x8, #0x110]
000000000000bcc8	mov	x8, #0x400000000
000000000000bccc	stp	x9, x8, [sp, #0x28]
000000000000bcd0	cmp	w21, w21, sxtb
000000000000bcd4	b.ne	0xbcf0
000000000000bcd8	adr	x8, #0x5f1a8
000000000000bcdc	nop
000000000000bce0	add	x8, x8, w21, sxtw #4
000000000000bce4	add	x8, x8, #0x800
000000000000bce8	str	x8, [x19]
000000000000bcec	b	0xbd28
000000000000bcf0	mov	x0, x20
000000000000bcf4	blr	x22
000000000000bcf8	ldr	x8, [x0]
000000000000bcfc	ldr	x8, [x8, #0x118]
000000000000bd00	add	x0, x8, #0x70
000000000000bd04	mov	w1, #0x18
000000000000bd08	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bd0c	adr	x9, #0x56054
000000000000bd10	nop
000000000000bd14	mov	x8, x0
000000000000bd18	str	x9, [x8, #0x10]!
000000000000bd1c	stur	xzr, [x8, #-0x8]
000000000000bd20	str	x8, [sp, #0x38]
000000000000bd24	strh	w21, [x8, #0x8]
000000000000bd28	str	x8, [x19]
000000000000bd2c	mov	x0, x20
000000000000bd30	blr	x22
000000000000bd34	ldr	x9, [x0]
000000000000bd38	ldr	x10, [sp, #0x28]
000000000000bd3c	str	x10, [x9, #0x110]
000000000000bd40	str	x8, [x19]
000000000000bd44	ldr	x9, [x0]
000000000000bd48	ldr	x10, [sp, #0x10]
000000000000bd4c	str	x10, [x9, #0x110]
000000000000bd50	mov	x0, x8
000000000000bd54	ldp	x29, x30, [sp, #0x60]
000000000000bd58	ldp	x20, x19, [sp, #0x50]
000000000000bd5c	ldp	x22, x21, [sp, #0x40]
000000000000bd60	add	sp, sp, #0x70
000000000000bd64	ret
_Kotlin_boxLong:
000000000000bd68	sub	sp, sp, #0x70
000000000000bd6c	stp	x22, x21, [sp, #0x40]
000000000000bd70	stp	x20, x19, [sp, #0x50]
000000000000bd74	stp	x29, x30, [sp, #0x60]
000000000000bd78	add	x29, sp, #0x60
000000000000bd7c	mov	x19, x1
000000000000bd80	mov	x21, x0
000000000000bd84	str	xzr, [sp, #0x8]
000000000000bd88	adrp	x20, 111 ; 0x7a000
000000000000bd8c	add	x20, x20, #0x2c0
000000000000bd90	ldr	x22, [x20]
000000000000bd94	mov	x0, x20
000000000000bd98	blr	x22
000000000000bd9c	ldr	x8, [x0]
000000000000bda0	ldr	x9, [x8, #0x110]
000000000000bda4	add	x10, sp, #0x8
000000000000bda8	str	x10, [x8, #0x110]
000000000000bdac	mov	x8, #0x300000000
000000000000bdb0	stp	x9, x8, [sp, #0x10]
000000000000bdb4	adr	x8, #0x884d5
000000000000bdb8	nop
000000000000bdbc	ldarb	w8, [x8]
000000000000bdc0	tbz	w8, #0x0, 0xbdc8
000000000000bdc4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bdc8	movi.16b	v0, #0x0
000000000000bdcc	stp	q0, q0, [sp, #0x20]
000000000000bdd0	mov	x0, x20
000000000000bdd4	blr	x22
000000000000bdd8	ldr	x8, [x0]
000000000000bddc	ldr	x9, [x8, #0x110]
000000000000bde0	add	x10, sp, #0x20
000000000000bde4	str	x10, [x8, #0x110]
000000000000bde8	mov	x8, #0x400000000
000000000000bdec	stp	x9, x8, [sp, #0x28]
000000000000bdf0	cmp	x21, w21, sxtb
000000000000bdf4	b.ne	0xbe10
000000000000bdf8	add	x8, x21, #0x80
000000000000bdfc	adr	x9, #0x61084
000000000000be00	nop
000000000000be04	add	x8, x9, x8, lsl #4
000000000000be08	str	x8, [x19]
000000000000be0c	b	0xbe48
000000000000be10	mov	x0, x20
000000000000be14	blr	x22
000000000000be18	ldr	x8, [x0]
000000000000be1c	ldr	x8, [x8, #0x118]
000000000000be20	add	x0, x8, #0x70
000000000000be24	mov	w1, #0x18
000000000000be28	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000be2c	adr	x9, #0x55db4
000000000000be30	nop
000000000000be34	mov	x8, x0
000000000000be38	str	x9, [x8, #0x10]!
000000000000be3c	stur	xzr, [x8, #-0x8]
000000000000be40	str	x8, [sp, #0x38]
000000000000be44	str	x21, [x8, #0x8]
000000000000be48	str	x8, [x19]
000000000000be4c	mov	x0, x20
000000000000be50	blr	x22
000000000000be54	ldr	x9, [x0]
000000000000be58	ldr	x10, [sp, #0x28]
000000000000be5c	str	x10, [x9, #0x110]
000000000000be60	str	x8, [x19]
000000000000be64	ldr	x9, [x0]
000000000000be68	ldr	x10, [sp, #0x10]
000000000000be6c	str	x10, [x9, #0x110]
000000000000be70	mov	x0, x8
000000000000be74	ldp	x29, x30, [sp, #0x60]
000000000000be78	ldp	x20, x19, [sp, #0x50]
000000000000be7c	ldp	x22, x21, [sp, #0x40]
000000000000be80	add	sp, sp, #0x70
000000000000be84	ret
_Kotlin_boxUByte:
000000000000be88	sub	sp, sp, #0x70
000000000000be8c	stp	x22, x21, [sp, #0x40]
000000000000be90	stp	x20, x19, [sp, #0x50]
000000000000be94	stp	x29, x30, [sp, #0x60]
000000000000be98	add	x29, sp, #0x60
000000000000be9c	mov	x19, x1
000000000000bea0	mov	x20, x0
000000000000bea4	str	xzr, [sp, #0x8]
000000000000bea8	adrp	x21, 111 ; 0x7a000
000000000000beac	add	x21, x21, #0x2c0
000000000000beb0	ldr	x22, [x21]
000000000000beb4	mov	x0, x21
000000000000beb8	blr	x22
000000000000bebc	ldr	x8, [x0]
000000000000bec0	ldr	x9, [x8, #0x110]
000000000000bec4	add	x10, sp, #0x8
000000000000bec8	str	x10, [x8, #0x110]
000000000000becc	mov	x8, #0x300000000
000000000000bed0	stp	x9, x8, [sp, #0x10]
000000000000bed4	adr	x8, #0x883b5
000000000000bed8	nop
000000000000bedc	ldarb	w8, [x8]
000000000000bee0	tbz	w8, #0x0, 0xbee8
000000000000bee4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bee8	movi.16b	v0, #0x0
000000000000beec	stp	q0, q0, [sp, #0x20]
000000000000bef0	mov	x0, x21
000000000000bef4	blr	x22
000000000000bef8	mov	x21, x0
000000000000befc	ldr	x8, [x0]
000000000000bf00	add	x9, sp, #0x20
000000000000bf04	ldp	x10, x11, [x8, #0x110]
000000000000bf08	str	x9, [x8, #0x110]
000000000000bf0c	mov	x8, #0x400000000
000000000000bf10	stp	x10, x8, [sp, #0x28]
000000000000bf14	add	x0, x11, #0x70
000000000000bf18	mov	w1, #0x18
000000000000bf1c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bf20	adr	x8, #0x59600
000000000000bf24	nop
000000000000bf28	str	x8, [x0, #0x10]!
000000000000bf2c	stur	xzr, [x0, #-0x8]
000000000000bf30	str	x0, [sp, #0x38]
000000000000bf34	strb	w20, [x0, #0x8]
000000000000bf38	str	x0, [x19]
000000000000bf3c	ldr	x8, [x21]
000000000000bf40	ldr	x9, [sp, #0x28]
000000000000bf44	str	x9, [x8, #0x110]
000000000000bf48	str	x0, [x19]
000000000000bf4c	ldr	x8, [x21]
000000000000bf50	ldr	x9, [sp, #0x10]
000000000000bf54	str	x9, [x8, #0x110]
000000000000bf58	ldp	x29, x30, [sp, #0x60]
000000000000bf5c	ldp	x20, x19, [sp, #0x50]
000000000000bf60	ldp	x22, x21, [sp, #0x40]
000000000000bf64	add	sp, sp, #0x70
000000000000bf68	ret
_Kotlin_boxUShort:
000000000000bf6c	sub	sp, sp, #0x70
000000000000bf70	stp	x22, x21, [sp, #0x40]
000000000000bf74	stp	x20, x19, [sp, #0x50]
000000000000bf78	stp	x29, x30, [sp, #0x60]
000000000000bf7c	add	x29, sp, #0x60
000000000000bf80	mov	x19, x1
000000000000bf84	mov	x20, x0
000000000000bf88	str	xzr, [sp, #0x8]
000000000000bf8c	adrp	x21, 111 ; 0x7a000
000000000000bf90	add	x21, x21, #0x2c0
000000000000bf94	ldr	x22, [x21]
000000000000bf98	mov	x0, x21
000000000000bf9c	blr	x22
000000000000bfa0	ldr	x8, [x0]
000000000000bfa4	ldr	x9, [x8, #0x110]
000000000000bfa8	add	x10, sp, #0x8
000000000000bfac	str	x10, [x8, #0x110]
000000000000bfb0	mov	x8, #0x300000000
000000000000bfb4	stp	x9, x8, [sp, #0x10]
000000000000bfb8	adr	x8, #0x882d1
000000000000bfbc	nop
000000000000bfc0	ldarb	w8, [x8]
000000000000bfc4	tbz	w8, #0x0, 0xbfcc
000000000000bfc8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bfcc	movi.16b	v0, #0x0
000000000000bfd0	stp	q0, q0, [sp, #0x20]
000000000000bfd4	mov	x0, x21
000000000000bfd8	blr	x22
000000000000bfdc	mov	x21, x0
000000000000bfe0	ldr	x8, [x0]
000000000000bfe4	add	x9, sp, #0x20
000000000000bfe8	ldp	x10, x11, [x8, #0x110]
000000000000bfec	str	x9, [x8, #0x110]
000000000000bff0	mov	x8, #0x400000000
000000000000bff4	stp	x10, x8, [sp, #0x28]
000000000000bff8	add	x0, x11, #0x70
000000000000bffc	mov	w1, #0x18
000000000000c000	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c004	adr	x8, #0x596cc
000000000000c008	nop
000000000000c00c	str	x8, [x0, #0x10]!
000000000000c010	stur	xzr, [x0, #-0x8]
000000000000c014	str	x0, [sp, #0x38]
000000000000c018	strh	w20, [x0, #0x8]
000000000000c01c	str	x0, [x19]
000000000000c020	ldr	x8, [x21]
000000000000c024	ldr	x9, [sp, #0x28]
000000000000c028	str	x9, [x8, #0x110]
000000000000c02c	str	x0, [x19]
000000000000c030	ldr	x8, [x21]
000000000000c034	ldr	x9, [sp, #0x10]
000000000000c038	str	x9, [x8, #0x110]
000000000000c03c	ldp	x29, x30, [sp, #0x60]
000000000000c040	ldp	x20, x19, [sp, #0x50]
000000000000c044	ldp	x22, x21, [sp, #0x40]
000000000000c048	add	sp, sp, #0x70
000000000000c04c	ret
_Kotlin_boxUInt:
000000000000c050	sub	sp, sp, #0x70
000000000000c054	stp	x22, x21, [sp, #0x40]
000000000000c058	stp	x20, x19, [sp, #0x50]
000000000000c05c	stp	x29, x30, [sp, #0x60]
000000000000c060	add	x29, sp, #0x60
000000000000c064	mov	x19, x1
000000000000c068	mov	x20, x0
000000000000c06c	str	xzr, [sp, #0x8]
000000000000c070	adrp	x21, 110 ; 0x7a000
000000000000c074	add	x21, x21, #0x2c0
000000000000c078	ldr	x22, [x21]
000000000000c07c	mov	x0, x21
000000000000c080	blr	x22
000000000000c084	ldr	x8, [x0]
000000000000c088	ldr	x9, [x8, #0x110]
000000000000c08c	add	x10, sp, #0x8
000000000000c090	str	x10, [x8, #0x110]
000000000000c094	mov	x8, #0x300000000
000000000000c098	stp	x9, x8, [sp, #0x10]
000000000000c09c	adr	x8, #0x881ed
000000000000c0a0	nop
000000000000c0a4	ldarb	w8, [x8]
000000000000c0a8	tbz	w8, #0x0, 0xc0b0
000000000000c0ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c0b0	movi.16b	v0, #0x0
000000000000c0b4	stp	q0, q0, [sp, #0x20]
000000000000c0b8	mov	x0, x21
000000000000c0bc	blr	x22
000000000000c0c0	mov	x21, x0
000000000000c0c4	ldr	x8, [x0]
000000000000c0c8	add	x9, sp, #0x20
000000000000c0cc	ldp	x10, x11, [x8, #0x110]
000000000000c0d0	str	x9, [x8, #0x110]
000000000000c0d4	mov	x8, #0x400000000
000000000000c0d8	stp	x10, x8, [sp, #0x28]
000000000000c0dc	add	x0, x11, #0x70
000000000000c0e0	mov	w1, #0x18
000000000000c0e4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c0e8	adr	x8, #0x594c8
000000000000c0ec	nop
000000000000c0f0	str	x8, [x0, #0x10]!
000000000000c0f4	stur	xzr, [x0, #-0x8]
000000000000c0f8	str	x0, [sp, #0x38]
000000000000c0fc	str	w20, [x0, #0x8]
000000000000c100	str	x0, [x19]
000000000000c104	ldr	x8, [x21]
000000000000c108	ldr	x9, [sp, #0x28]
000000000000c10c	str	x9, [x8, #0x110]
000000000000c110	str	x0, [x19]
000000000000c114	ldr	x8, [x21]
000000000000c118	ldr	x9, [sp, #0x10]
000000000000c11c	str	x9, [x8, #0x110]
000000000000c120	ldp	x29, x30, [sp, #0x60]
000000000000c124	ldp	x20, x19, [sp, #0x50]
000000000000c128	ldp	x22, x21, [sp, #0x40]
000000000000c12c	add	sp, sp, #0x70
000000000000c130	ret
_Kotlin_boxULong:
000000000000c134	sub	sp, sp, #0x70
000000000000c138	stp	x22, x21, [sp, #0x40]
000000000000c13c	stp	x20, x19, [sp, #0x50]
000000000000c140	stp	x29, x30, [sp, #0x60]
000000000000c144	add	x29, sp, #0x60
000000000000c148	mov	x19, x1
000000000000c14c	mov	x20, x0
000000000000c150	str	xzr, [sp, #0x8]
000000000000c154	adrp	x21, 110 ; 0x7a000
000000000000c158	add	x21, x21, #0x2c0
000000000000c15c	ldr	x22, [x21]
000000000000c160	mov	x0, x21
000000000000c164	blr	x22
000000000000c168	ldr	x8, [x0]
000000000000c16c	ldr	x9, [x8, #0x110]
000000000000c170	add	x10, sp, #0x8
000000000000c174	str	x10, [x8, #0x110]
000000000000c178	mov	x8, #0x300000000
000000000000c17c	stp	x9, x8, [sp, #0x10]
000000000000c180	adr	x8, #0x88109
000000000000c184	nop
000000000000c188	ldarb	w8, [x8]
000000000000c18c	tbz	w8, #0x0, 0xc194
000000000000c190	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c194	movi.16b	v0, #0x0
000000000000c198	stp	q0, q0, [sp, #0x20]
000000000000c19c	mov	x0, x21
000000000000c1a0	blr	x22
000000000000c1a4	mov	x21, x0
000000000000c1a8	ldr	x8, [x0]
000000000000c1ac	add	x9, sp, #0x20
000000000000c1b0	ldp	x10, x11, [x8, #0x110]
000000000000c1b4	str	x9, [x8, #0x110]
000000000000c1b8	mov	x8, #0x400000000
000000000000c1bc	stp	x10, x8, [sp, #0x28]
000000000000c1c0	add	x0, x11, #0x70
000000000000c1c4	mov	w1, #0x18
000000000000c1c8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c1cc	adr	x8, #0x59474
000000000000c1d0	nop
000000000000c1d4	str	x8, [x0, #0x10]!
000000000000c1d8	stur	xzr, [x0, #-0x8]
000000000000c1dc	str	x0, [sp, #0x38]
000000000000c1e0	str	x20, [x0, #0x8]
000000000000c1e4	str	x0, [x19]
000000000000c1e8	ldr	x8, [x21]
000000000000c1ec	ldr	x9, [sp, #0x28]
000000000000c1f0	str	x9, [x8, #0x110]
000000000000c1f4	str	x0, [x19]
000000000000c1f8	ldr	x8, [x21]
000000000000c1fc	ldr	x9, [sp, #0x10]
000000000000c200	str	x9, [x8, #0x110]
000000000000c204	ldp	x29, x30, [sp, #0x60]
000000000000c208	ldp	x20, x19, [sp, #0x50]
000000000000c20c	ldp	x22, x21, [sp, #0x40]
000000000000c210	add	sp, sp, #0x70
000000000000c214	ret
_Kotlin_boxFloat:
000000000000c218	sub	sp, sp, #0x80
000000000000c21c	stp	d9, d8, [sp, #0x40]
000000000000c220	stp	x22, x21, [sp, #0x50]
000000000000c224	stp	x20, x19, [sp, #0x60]
000000000000c228	stp	x29, x30, [sp, #0x70]
000000000000c22c	add	x29, sp, #0x70
000000000000c230	mov	x19, x0
000000000000c234	fmov	s8, s0
000000000000c238	str	xzr, [sp, #0x8]
000000000000c23c	adrp	x20, 110 ; 0x7a000
000000000000c240	add	x20, x20, #0x2c0
000000000000c244	ldr	x21, [x20]
000000000000c248	mov	x0, x20
000000000000c24c	blr	x21
000000000000c250	ldr	x8, [x0]
000000000000c254	ldr	x9, [x8, #0x110]
000000000000c258	add	x10, sp, #0x8
000000000000c25c	str	x10, [x8, #0x110]
000000000000c260	mov	x8, #0x300000000
000000000000c264	stp	x9, x8, [sp, #0x10]
000000000000c268	adr	x8, #0x88021
000000000000c26c	nop
000000000000c270	ldarb	w8, [x8]
000000000000c274	tbz	w8, #0x0, 0xc27c
000000000000c278	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c27c	movi.16b	v0, #0x0
000000000000c280	stp	q0, q0, [sp, #0x20]
000000000000c284	mov	x0, x20
000000000000c288	blr	x21
000000000000c28c	mov	x20, x0
000000000000c290	ldr	x8, [x0]
000000000000c294	add	x9, sp, #0x20
000000000000c298	ldp	x10, x11, [x8, #0x110]
000000000000c29c	str	x9, [x8, #0x110]
000000000000c2a0	mov	x8, #0x400000000
000000000000c2a4	stp	x10, x8, [sp, #0x28]
000000000000c2a8	add	x0, x11, #0x70
000000000000c2ac	mov	w1, #0x18
000000000000c2b0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c2b4	adr	x8, #0x55b6c
000000000000c2b8	nop
000000000000c2bc	str	x8, [x0, #0x10]!
000000000000c2c0	stur	xzr, [x0, #-0x8]
000000000000c2c4	str	x0, [sp, #0x38]
000000000000c2c8	str	s8, [x0, #0x8]
000000000000c2cc	str	x0, [x19]
000000000000c2d0	ldr	x8, [x20]
000000000000c2d4	ldr	x9, [sp, #0x28]
000000000000c2d8	str	x9, [x8, #0x110]
000000000000c2dc	str	x0, [x19]
000000000000c2e0	ldr	x8, [x20]
000000000000c2e4	ldr	x9, [sp, #0x10]
000000000000c2e8	str	x9, [x8, #0x110]
000000000000c2ec	ldp	x29, x30, [sp, #0x70]
000000000000c2f0	ldp	x20, x19, [sp, #0x60]
000000000000c2f4	ldp	x22, x21, [sp, #0x50]
000000000000c2f8	ldp	d9, d8, [sp, #0x40]
000000000000c2fc	add	sp, sp, #0x80
000000000000c300	ret
_Kotlin_boxDouble:
000000000000c304	sub	sp, sp, #0x80
000000000000c308	stp	d9, d8, [sp, #0x40]
000000000000c30c	stp	x22, x21, [sp, #0x50]
000000000000c310	stp	x20, x19, [sp, #0x60]
000000000000c314	stp	x29, x30, [sp, #0x70]
000000000000c318	add	x29, sp, #0x70
000000000000c31c	mov	x19, x0
000000000000c320	fmov	d8, d0
000000000000c324	str	xzr, [sp, #0x8]
000000000000c328	adrp	x20, 110 ; 0x7a000
000000000000c32c	add	x20, x20, #0x2c0
000000000000c330	ldr	x21, [x20]
000000000000c334	mov	x0, x20
000000000000c338	blr	x21
000000000000c33c	ldr	x8, [x0]
000000000000c340	ldr	x9, [x8, #0x110]
000000000000c344	add	x10, sp, #0x8
000000000000c348	str	x10, [x8, #0x110]
000000000000c34c	mov	x8, #0x300000000
000000000000c350	stp	x9, x8, [sp, #0x10]
000000000000c354	adr	x8, #0x87f35
000000000000c358	nop
000000000000c35c	ldarb	w8, [x8]
000000000000c360	tbz	w8, #0x0, 0xc368
000000000000c364	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c368	movi.16b	v0, #0x0
000000000000c36c	stp	q0, q0, [sp, #0x20]
000000000000c370	mov	x0, x20
000000000000c374	blr	x21
000000000000c378	mov	x20, x0
000000000000c37c	ldr	x8, [x0]
000000000000c380	add	x9, sp, #0x20
000000000000c384	ldp	x10, x11, [x8, #0x110]
000000000000c388	str	x9, [x8, #0x110]
000000000000c38c	mov	x8, #0x400000000
000000000000c390	stp	x10, x8, [sp, #0x28]
000000000000c394	add	x0, x11, #0x70
000000000000c398	mov	w1, #0x18
000000000000c39c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c3a0	adr	x8, #0x55780
000000000000c3a4	nop
000000000000c3a8	str	x8, [x0, #0x10]!
000000000000c3ac	stur	xzr, [x0, #-0x8]
000000000000c3b0	str	x0, [sp, #0x38]
000000000000c3b4	str	d8, [x0, #0x8]
000000000000c3b8	str	x0, [x19]
000000000000c3bc	ldr	x8, [x20]
000000000000c3c0	ldr	x9, [sp, #0x28]
000000000000c3c4	str	x9, [x8, #0x110]
000000000000c3c8	str	x0, [x19]
000000000000c3cc	ldr	x8, [x20]
000000000000c3d0	ldr	x9, [sp, #0x10]
000000000000c3d4	str	x9, [x8, #0x110]
000000000000c3d8	ldp	x29, x30, [sp, #0x70]
000000000000c3dc	ldp	x20, x19, [sp, #0x60]
000000000000c3e0	ldp	x22, x21, [sp, #0x50]
000000000000c3e4	ldp	d9, d8, [sp, #0x40]
000000000000c3e8	add	sp, sp, #0x80
000000000000c3ec	ret
_kfun:kotlin.native.internal.KClassImpl#<get-simpleName>(){}kotlin.String?:
000000000000c3f0	sub	sp, sp, #0x60
000000000000c3f4	stp	x22, x21, [sp, #0x30]
000000000000c3f8	stp	x20, x19, [sp, #0x40]
000000000000c3fc	stp	x29, x30, [sp, #0x50]
000000000000c400	add	x29, sp, #0x50
000000000000c404	mov	x19, x1
000000000000c408	mov	x20, x0
000000000000c40c	movi.16b	v0, #0x0
000000000000c410	stp	q0, q0, [sp]
000000000000c414	str	xzr, [sp, #0x20]
000000000000c418	mov	x22, sp
000000000000c41c	adrp	x0, 110 ; 0x7a000
000000000000c420	add	x0, x0, #0x2c0
000000000000c424	ldr	x8, [x0]
000000000000c428	blr	x8
000000000000c42c	ldr	x21, [x0]
000000000000c430	ldr	x8, [x21, #0x110]
000000000000c434	str	x22, [x21, #0x110]
000000000000c438	mov	x9, #0x500000000
000000000000c43c	stp	x8, x9, [sp, #0x8]
000000000000c440	adr	x8, #0x87e49
000000000000c444	nop
000000000000c448	ldarb	w8, [x8]
000000000000c44c	tbz	w8, #0x0, 0xc454
000000000000c450	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c454	ldr	x8, [x20, #0x8]
000000000000c458	ldrb	w9, [x8, #0x59]
000000000000c45c	tbnz	w9, #0x1, 0xc468
000000000000c460	mov	x0, #0x0
000000000000c464	b	0xc48c
000000000000c468	ldr	x0, [x8, #0x50]
000000000000c46c	str	x0, [sp, #0x18]
000000000000c470	cbz	x0, 0xc48c
000000000000c474	add	x2, x22, #0x20
000000000000c478	mov	w1, #0x2e
000000000000c47c	bl	"_kfun:kotlin.text#substringAfterLast$default__at__kotlin.String(kotlin.Char;kotlin.String?;kotlin.Int){}kotlin.String"
000000000000c480	mov	w1, #0x24
000000000000c484	mov	x2, x19
000000000000c488	bl	"_kfun:kotlin.text#substringAfterLast$default__at__kotlin.String(kotlin.Char;kotlin.String?;kotlin.Int){}kotlin.String"
000000000000c48c	str	x0, [x19]
000000000000c490	ldr	x8, [sp, #0x8]
000000000000c494	str	x8, [x21, #0x110]
000000000000c498	ldp	x29, x30, [sp, #0x50]
000000000000c49c	ldp	x20, x19, [sp, #0x40]
000000000000c4a0	ldp	x22, x21, [sp, #0x30]
000000000000c4a4	add	sp, sp, #0x60
000000000000c4a8	ret
_kfun:kotlin.native.internal.KClassImpl#<get-qualifiedName>(){}kotlin.String?:
000000000000c4ac	sub	sp, sp, #0xc0
000000000000c4b0	stp	x26, x25, [sp, #0x70]
000000000000c4b4	stp	x24, x23, [sp, #0x80]
000000000000c4b8	stp	x22, x21, [sp, #0x90]
000000000000c4bc	stp	x20, x19, [sp, #0xa0]
000000000000c4c0	stp	x29, x30, [sp, #0xb0]
000000000000c4c4	add	x29, sp, #0xb0
000000000000c4c8	mov	x19, x1
000000000000c4cc	mov	x20, x0
000000000000c4d0	movi.16b	v0, #0x0
000000000000c4d4	stp	q0, q0, [sp, #0x20]
000000000000c4d8	str	xzr, [sp, #0x60]
000000000000c4dc	stp	q0, q0, [sp, #0x40]
000000000000c4e0	add	x24, sp, #0x20
000000000000c4e4	stp	xzr, xzr, [sp, #0x10]
000000000000c4e8	adr	x8, #0x586a8
000000000000c4ec	nop
000000000000c4f0	orr	x8, x8, #0x3
000000000000c4f4	str	x8, [sp, #0x8]
000000000000c4f8	adrp	x0, 110 ; 0x7a000
000000000000c4fc	add	x0, x0, #0x2c0
000000000000c500	ldr	x8, [x0]
000000000000c504	blr	x8
000000000000c508	ldr	x25, [x0]
000000000000c50c	ldr	x8, [x25, #0x110]
000000000000c510	str	x24, [x25, #0x110]
000000000000c514	mov	x9, #0x900000000
000000000000c518	stp	x8, x9, [sp, #0x28]
000000000000c51c	adr	x8, #0x87d6d
000000000000c520	nop
000000000000c524	ldarb	w8, [x8]
000000000000c528	tbz	w8, #0x0, 0xc530
000000000000c52c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c530	ldr	x8, [x20, #0x8]
000000000000c534	ldr	w9, [x8, #0x58]
000000000000c538	tbnz	w9, #0x8, 0xc56c
000000000000c53c	mov	x20, #0x0
000000000000c540	str	x20, [x19]
000000000000c544	ldr	x8, [sp, #0x28]
000000000000c548	str	x8, [x25, #0x110]
000000000000c54c	mov	x0, x20
000000000000c550	ldp	x29, x30, [sp, #0xb0]
000000000000c554	ldp	x20, x19, [sp, #0xa0]
000000000000c558	ldp	x22, x21, [sp, #0x90]
000000000000c55c	ldp	x24, x23, [sp, #0x80]
000000000000c560	ldp	x26, x25, [sp, #0x70]
000000000000c564	add	sp, sp, #0xc0
000000000000c568	ret
000000000000c56c	mov	x20, #0x0
000000000000c570	ldr	x21, [x8, #0x48]
000000000000c574	str	x21, [sp, #0x38]
000000000000c578	cbz	x21, 0xc540
000000000000c57c	tbz	w9, #0x9, 0xc540
000000000000c580	ldr	x20, [x8, #0x50]
000000000000c584	str	x20, [sp, #0x40]
000000000000c588	cbz	x20, 0xc540
000000000000c58c	ldr	w8, [x21, #0x8]
000000000000c590	cbz	w8, 0xc540
000000000000c594	add	x22, x24, #0x30
000000000000c598	add	x23, x24, #0x40
000000000000c59c	add	x24, x24, #0x38
000000000000c5a0	add	x8, sp, #0x8
000000000000c5a4	str	x8, [sp, #0x48]
000000000000c5a8	add	x0, sp, #0x8
000000000000c5ac	mov	w1, #0xa
000000000000c5b0	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000c5b4	add	x0, sp, #0x8
000000000000c5b8	mov	x1, x21
000000000000c5bc	mov	x2, x22
000000000000c5c0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c5c4	adr	x1, #0x61eac
000000000000c5c8	nop
000000000000c5cc	add	x0, sp, #0x8
000000000000c5d0	mov	x2, x24
000000000000c5d4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c5d8	add	x0, sp, #0x8
000000000000c5dc	mov	x1, x20
000000000000c5e0	mov	x2, x23
000000000000c5e4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c5e8	add	x0, sp, #0x8
000000000000c5ec	mov	x1, x19
000000000000c5f0	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000c5f4	mov	x20, x0
000000000000c5f8	b	0xc540
_kfun:kotlin.native.internal.KClassImpl#isInstance(kotlin.Any?){}kotlin.Boolean:
000000000000c5fc	stp	x20, x19, [sp, #-0x20]!
000000000000c600	stp	x29, x30, [sp, #0x10]
000000000000c604	add	x29, sp, #0x10
000000000000c608	mov	x19, x1
000000000000c60c	mov	x20, x0
000000000000c610	adr	x8, #0x87c79
000000000000c614	nop
000000000000c618	ldarb	w8, [x8]
000000000000c61c	tbz	w8, #0x0, 0xc624
000000000000c620	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c624	cbz	x19, 0xc698
000000000000c628	ldr	x8, [x20, #0x8]
000000000000c62c	ldr	x9, [x19]
000000000000c630	and	x9, x9, #0xfffffffffffffffc
000000000000c634	ldr	x9, [x9]
000000000000c638	ldrb	w10, [x8, #0x58]
000000000000c63c	tbnz	w10, #0x2, 0xc670
000000000000c640	cmp	x9, #0x0
000000000000c644	cset	w0, ne
000000000000c648	ccmp	x8, x9, #0x4, ne
000000000000c64c	b.eq	0xc664
000000000000c650	ldr	x9, [x9, #0x18]
000000000000c654	cmp	x9, #0x0
000000000000c658	cset	w0, ne
000000000000c65c	ccmp	x9, x8, #0x4, ne
000000000000c660	b.ne	0xc650
000000000000c664	ldp	x29, x30, [sp, #0x10]
000000000000c668	ldp	x20, x19, [sp], #0x20
000000000000c66c	ret
000000000000c670	ldrsw	x10, [x9, #0x38]
000000000000c674	cmp	w10, #0x1
000000000000c678	b.lt	0xc698
000000000000c67c	ldr	x9, [x9, #0x30]
000000000000c680	ldr	x11, [x9]
000000000000c684	cmp	x11, x8
000000000000c688	b.eq	0xc6a8
000000000000c68c	add	x9, x9, #0x8
000000000000c690	subs	x10, x10, #0x1
000000000000c694	b.ne	0xc680
000000000000c698	mov	w0, #0x0
000000000000c69c	ldp	x29, x30, [sp, #0x10]
000000000000c6a0	ldp	x20, x19, [sp], #0x20
000000000000c6a4	ret
000000000000c6a8	mov	w0, #0x1
000000000000c6ac	ldp	x29, x30, [sp, #0x10]
000000000000c6b0	ldp	x20, x19, [sp], #0x20
000000000000c6b4	ret
_kfun:kotlin.native.internal.KClassImpl#equals(kotlin.Any?){}kotlin.Boolean:
000000000000c6b8	stp	x20, x19, [sp, #-0x20]!
000000000000c6bc	stp	x29, x30, [sp, #0x10]
000000000000c6c0	add	x29, sp, #0x10
000000000000c6c4	mov	x19, x1
000000000000c6c8	mov	x20, x0
000000000000c6cc	adr	x8, #0x87bbd
000000000000c6d0	nop
000000000000c6d4	ldarb	w8, [x8]
000000000000c6d8	tbz	w8, #0x0, 0xc6e0
000000000000c6dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c6e0	cbz	x19, 0xc718
000000000000c6e4	ldr	x8, [x19]
000000000000c6e8	and	x8, x8, #0xfffffffffffffffc
000000000000c6ec	ldr	x8, [x8]
000000000000c6f0	ldr	w8, [x8, #0x5c]
000000000000c6f4	cmp	w8, #0xd2
000000000000c6f8	b.ne	0xc718
000000000000c6fc	ldr	x8, [x20, #0x8]
000000000000c700	ldr	x9, [x19, #0x8]
000000000000c704	cmp	x8, x9
000000000000c708	cset	w0, eq
000000000000c70c	ldp	x29, x30, [sp, #0x10]
000000000000c710	ldp	x20, x19, [sp], #0x20
000000000000c714	ret
000000000000c718	mov	w0, #0x0
000000000000c71c	ldp	x29, x30, [sp, #0x10]
000000000000c720	ldp	x20, x19, [sp], #0x20
000000000000c724	ret
_kfun:kotlin.native.internal.KClassImpl#hashCode(){}kotlin.Int:
000000000000c728	stp	x20, x19, [sp, #-0x20]!
000000000000c72c	stp	x29, x30, [sp, #0x10]
000000000000c730	add	x29, sp, #0x10
000000000000c734	mov	x19, x0
000000000000c738	adr	x8, #0x87b51
000000000000c73c	nop
000000000000c740	ldarb	w8, [x8]
000000000000c744	tbz	w8, #0x0, 0xc74c
000000000000c748	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c74c	ldp	w8, w9, [x19, #0x8]
000000000000c750	eor	w0, w9, w8
000000000000c754	ldp	x29, x30, [sp, #0x10]
000000000000c758	ldp	x20, x19, [sp], #0x20
000000000000c75c	ret
_kfun:kotlin.native.internal.KClassImpl#toString(){}kotlin.String:
000000000000c760	sub	sp, sp, #0x50
000000000000c764	stp	x22, x21, [sp, #0x20]
000000000000c768	stp	x20, x19, [sp, #0x30]
000000000000c76c	stp	x29, x30, [sp, #0x40]
000000000000c770	add	x29, sp, #0x40
000000000000c774	mov	x19, x1
000000000000c778	mov	x20, x0
000000000000c77c	movi.16b	v0, #0x0
000000000000c780	stp	q0, q0, [sp]
000000000000c784	mov	x8, sp
000000000000c788	add	x21, x8, #0x18
000000000000c78c	adrp	x0, 110 ; 0x7a000
000000000000c790	add	x0, x0, #0x2c0
000000000000c794	ldr	x9, [x0]
000000000000c798	blr	x9
000000000000c79c	ldr	x22, [x0]
000000000000c7a0	ldr	x9, [x22, #0x110]
000000000000c7a4	str	x8, [x22, #0x110]
000000000000c7a8	mov	x8, #0x400000000
000000000000c7ac	stp	x9, x8, [sp, #0x8]
000000000000c7b0	adr	x8, #0x87ad9
000000000000c7b4	nop
000000000000c7b8	ldarb	w8, [x8]
000000000000c7bc	tbz	w8, #0x0, 0xc7c4
000000000000c7c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c7c4	mov	x0, x20
000000000000c7c8	mov	x1, x21
000000000000c7cc	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-fullName>(){}kotlin.String?"
000000000000c7d0	adr	x8, #0x61ce0
000000000000c7d4	nop
000000000000c7d8	cmp	x0, #0x0
000000000000c7dc	csel	x1, x8, x0, eq
000000000000c7e0	adr	x0, #0x61cb0
000000000000c7e4	nop
000000000000c7e8	mov	x2, x19
000000000000c7ec	bl	_Kotlin_String_plusImpl
000000000000c7f0	str	x0, [x19]
000000000000c7f4	ldr	x8, [sp, #0x8]
000000000000c7f8	str	x8, [x22, #0x110]
000000000000c7fc	ldp	x29, x30, [sp, #0x40]
000000000000c800	ldp	x20, x19, [sp, #0x30]
000000000000c804	ldp	x22, x21, [sp, #0x20]
000000000000c808	add	sp, sp, #0x50
000000000000c80c	ret
_kfun:kotlin.native.internal.KClassImpl#<get-fullName>(){}kotlin.String?:
000000000000c810	sub	sp, sp, #0xc0
000000000000c814	stp	x26, x25, [sp, #0x70]
000000000000c818	stp	x24, x23, [sp, #0x80]
000000000000c81c	stp	x22, x21, [sp, #0x90]
000000000000c820	stp	x20, x19, [sp, #0xa0]
000000000000c824	stp	x29, x30, [sp, #0xb0]
000000000000c828	add	x29, sp, #0xb0
000000000000c82c	mov	x19, x1
000000000000c830	mov	x20, x0
000000000000c834	movi.16b	v0, #0x0
000000000000c838	stp	q0, q0, [sp, #0x20]
000000000000c83c	stp	q0, q0, [sp, #0x50]
000000000000c840	str	q0, [sp, #0x40]
000000000000c844	add	x24, sp, #0x20
000000000000c848	stp	xzr, xzr, [sp, #0x10]
000000000000c84c	adr	x8, #0x58344
000000000000c850	nop
000000000000c854	orr	x8, x8, #0x3
000000000000c858	str	x8, [sp, #0x8]
000000000000c85c	adrp	x0, 110 ; 0x7a000
000000000000c860	add	x0, x0, #0x2c0
000000000000c864	ldr	x8, [x0]
000000000000c868	blr	x8
000000000000c86c	ldr	x25, [x0]
000000000000c870	ldr	x8, [x25, #0x110]
000000000000c874	str	x24, [x25, #0x110]
000000000000c878	mov	x9, #0xa00000000
000000000000c87c	stp	x8, x9, [sp, #0x28]
000000000000c880	adr	x8, #0x87a09
000000000000c884	nop
000000000000c888	ldarb	w8, [x8]
000000000000c88c	tbz	w8, #0x0, 0xc894
000000000000c890	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c894	ldr	x8, [x20, #0x8]
000000000000c898	ldr	x20, [x8, #0x50]
000000000000c89c	str	x20, [sp, #0x38]
000000000000c8a0	cbz	x20, 0xc934
000000000000c8a4	ldr	x21, [x8, #0x48]
000000000000c8a8	str	x21, [sp, #0x40]
000000000000c8ac	cbz	x21, 0xc934
000000000000c8b0	add	x1, x24, #0x28
000000000000c8b4	ldr	w8, [x21, #0x8]
000000000000c8b8	cmp	w8, #0x0
000000000000c8bc	cset	w0, eq
000000000000c8c0	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
000000000000c8c4	cbz	x0, 0xc934
000000000000c8c8	ldrb	w8, [x0, #0x8]
000000000000c8cc	tbnz	w8, #0x0, 0xc934
000000000000c8d0	add	x22, x24, #0x40
000000000000c8d4	add	x23, x24, #0x38
000000000000c8d8	add	x24, x24, #0x48
000000000000c8dc	add	x8, sp, #0x8
000000000000c8e0	str	x8, [sp, #0x50]
000000000000c8e4	add	x0, sp, #0x8
000000000000c8e8	mov	w1, #0xa
000000000000c8ec	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000c8f0	add	x0, sp, #0x8
000000000000c8f4	mov	x1, x21
000000000000c8f8	mov	x2, x23
000000000000c8fc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c900	adr	x1, #0x61b70
000000000000c904	nop
000000000000c908	add	x0, sp, #0x8
000000000000c90c	mov	x2, x22
000000000000c910	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c914	add	x0, sp, #0x8
000000000000c918	mov	x1, x20
000000000000c91c	mov	x2, x24
000000000000c920	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c924	add	x0, sp, #0x8
000000000000c928	mov	x1, x19
000000000000c92c	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000c930	mov	x20, x0
000000000000c934	str	x20, [x19]
000000000000c938	ldr	x8, [sp, #0x28]
000000000000c93c	str	x8, [x25, #0x110]
000000000000c940	mov	x0, x20
000000000000c944	ldp	x29, x30, [sp, #0xb0]
000000000000c948	ldp	x20, x19, [sp, #0xa0]
000000000000c94c	ldp	x22, x21, [sp, #0x90]
000000000000c950	ldp	x24, x23, [sp, #0x80]
000000000000c954	ldp	x26, x25, [sp, #0x70]
000000000000c958	add	sp, sp, #0xc0
000000000000c95c	ret
_kfun:kotlin.native.internal.NumberConverter.freeFormatExponential#internal:
000000000000c960	sub	sp, sp, #0xe0
000000000000c964	stp	x26, x25, [sp, #0x90]
000000000000c968	stp	x24, x23, [sp, #0xa0]
000000000000c96c	stp	x22, x21, [sp, #0xb0]
000000000000c970	stp	x20, x19, [sp, #0xc0]
000000000000c974	stp	x29, x30, [sp, #0xd0]
000000000000c978	add	x29, sp, #0xd0
000000000000c97c	mov	x19, x1
000000000000c980	mov	x20, x0
000000000000c984	movi.16b	v0, #0x0
000000000000c988	stp	q0, q0, [sp, #0x50]
000000000000c98c	str	q0, [sp, #0x70]
000000000000c990	adr	x8, #0x543a0
000000000000c994	nop
000000000000c998	orr	x8, x8, #0x3
000000000000c99c	str	x8, [sp, #0x8]
000000000000c9a0	mov	w8, #0x19
000000000000c9a4	str	w8, [sp, #0x10]
000000000000c9a8	stur	q0, [sp, #0x18]
000000000000c9ac	stur	q0, [sp, #0x28]
000000000000c9b0	stur	q0, [sp, #0x38]
000000000000c9b4	strh	wzr, [sp, #0x48]
000000000000c9b8	adrp	x0, 110 ; 0x7a000
000000000000c9bc	add	x0, x0, #0x2c0
000000000000c9c0	ldr	x8, [x0]
000000000000c9c4	blr	x8
000000000000c9c8	ldr	x23, [x0]
000000000000c9cc	ldr	x8, [x23, #0x110]
000000000000c9d0	add	x9, sp, #0x50
000000000000c9d4	str	x9, [x23, #0x110]
000000000000c9d8	mov	x9, #0x600000000
000000000000c9dc	stp	x8, x9, [sp, #0x58]
000000000000c9e0	adr	x22, #0x878a9
000000000000c9e4	nop
000000000000c9e8	ldarb	w8, [x22]
000000000000c9ec	tbz	w8, #0x0, 0xc9f4
000000000000c9f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c9f4	add	x8, sp, #0x8
000000000000c9f8	str	x8, [sp, #0x68]
000000000000c9fc	ldr	x8, [x20, #0x8]
000000000000ca00	ldrsw	x9, [x20, #0x14]
000000000000ca04	add	w10, w9, #0x1
000000000000ca08	str	w10, [x20, #0x14]
000000000000ca0c	ldr	w10, [x8, #0x8]
000000000000ca10	cmp	w10, w9
000000000000ca14	b.ls	0xcbb8
000000000000ca18	ldr	w10, [sp, #0x10]
000000000000ca1c	cbz	w10, 0xcbb8
000000000000ca20	add	x8, x8, x9, lsl #2
000000000000ca24	ldr	w8, [x8, #0x10]
000000000000ca28	add	w8, w8, #0x30
000000000000ca2c	ldr	x9, [sp, #0x8]
000000000000ca30	strh	w8, [sp, #0x18]
000000000000ca34	cmp	w10, #0x1
000000000000ca38	b.eq	0xcbb8
000000000000ca3c	add	x26, sp, #0x8
000000000000ca40	add	x21, x26, #0x10
000000000000ca44	ldr	x8, [sp, #0x8]
000000000000ca48	mov	w8, #0x2e
000000000000ca4c	strh	w8, [sp, #0x1a]
000000000000ca50	ldr	w24, [x20, #0x18]
000000000000ca54	mov	w25, #0x2
000000000000ca58	ldarb	w8, [x22]
000000000000ca5c	tbz	w8, #0x0, 0xca64
000000000000ca60	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ca64	ldp	w9, w8, [x20, #0x10]
000000000000ca68	sxtw	x8, w8
000000000000ca6c	cmp	w8, w9
000000000000ca70	b.ge	0xcac0
000000000000ca74	ldr	x9, [x20, #0x8]
000000000000ca78	add	w10, w8, #0x1
000000000000ca7c	str	w10, [x20, #0x14]
000000000000ca80	ldr	w10, [x9, #0x8]
000000000000ca84	cmp	w10, w8
000000000000ca88	b.ls	0xcbb8
000000000000ca8c	ldr	w10, [sp, #0x10]
000000000000ca90	cmp	w10, w25
000000000000ca94	b.ls	0xcbb8
000000000000ca98	add	x8, x9, x8, lsl #2
000000000000ca9c	ldr	w8, [x8, #0x10]
000000000000caa0	add	w8, w8, #0x30
000000000000caa4	ldr	x9, [sp, #0x8]
000000000000caa8	add	x9, x26, w25, sxtw #1
000000000000caac	strh	w8, [x9, #0x10]
000000000000cab0	add	w25, w25, #0x1
000000000000cab4	ldarb	w8, [x22]
000000000000cab8	tbnz	w8, #0x0, 0xca60
000000000000cabc	b	0xca64
000000000000cac0	ldr	w8, [sp, #0x10]
000000000000cac4	cmp	w25, #0x2
000000000000cac8	b.ne	0xcaec
000000000000cacc	cmp	w8, w25
000000000000cad0	b.ls	0xcbb8
000000000000cad4	ldr	x9, [sp, #0x8]
000000000000cad8	add	x9, sp, #0x8
000000000000cadc	add	x9, x9, w25, sxtw #1
000000000000cae0	mov	w10, #0x30
000000000000cae4	strh	w10, [x9, #0x10]
000000000000cae8	add	w25, w25, #0x1
000000000000caec	cmp	w8, w25
000000000000caf0	b.ls	0xcbb8
000000000000caf4	ldr	x8, [sp, #0x8]
000000000000caf8	add	x8, sp, #0x8
000000000000cafc	add	x8, x8, w25, sxtw #1
000000000000cb00	mov	w9, #0x45
000000000000cb04	strh	w9, [x8, #0x10]
000000000000cb08	adds	w25, w25, #0x1
000000000000cb0c	b.mi	0xcbbc
000000000000cb10	add	x8, sp, #0x50
000000000000cb14	add	x20, x8, #0x28
000000000000cb18	ldr	x8, [x23, #0x118]
000000000000cb1c	lsl	x9, x25, #1
000000000000cb20	add	x9, x9, #0x1f
000000000000cb24	and	x1, x9, #0x3fffffff8
000000000000cb28	add	x0, x8, #0x70
000000000000cb2c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000cb30	mov	x22, x0
000000000000cb34	adr	x8, #0x553ac
000000000000cb38	nop
000000000000cb3c	stp	x8, xzr, [x22, #0x10]!
000000000000cb40	stur	xzr, [x22, #-0x8]
000000000000cb44	str	w25, [x22, #0x8]
000000000000cb48	add	x0, x22, #0x10
000000000000cb4c	sbfiz	x2, x25, #1, #32
000000000000cb50	mov	x1, x21
000000000000cb54	bl	0x554ac ; symbol stub for: _memcpy
000000000000cb58	str	x22, [sp, #0x70]
000000000000cb5c	str	x24, [sp]
000000000000cb60	adr	x2, #0x52123 ; literal pool for: "%d"
000000000000cb64	nop
000000000000cb68	sub	x0, x29, #0x50
000000000000cb6c	mov	w1, #0x10
000000000000cb70	bl	__ZN5konan8snprintfEPcmPKcz
000000000000cb74	sub	x0, x29, #0x50
000000000000cb78	mov	x1, x20
000000000000cb7c	bl	_CreateStringFromCString
000000000000cb80	mov	x1, x0
000000000000cb84	mov	x0, x22
000000000000cb88	mov	x2, x19
000000000000cb8c	bl	_Kotlin_String_plusImpl
000000000000cb90	str	x0, [x19]
000000000000cb94	ldr	x8, [sp, #0x58]
000000000000cb98	str	x8, [x23, #0x110]
000000000000cb9c	ldp	x29, x30, [sp, #0xd0]
000000000000cba0	ldp	x20, x19, [sp, #0xc0]
000000000000cba4	ldp	x22, x21, [sp, #0xb0]
000000000000cba8	ldp	x24, x23, [sp, #0xa0]
000000000000cbac	ldp	x26, x25, [sp, #0x90]
000000000000cbb0	add	sp, sp, #0xe0
000000000000cbb4	ret
000000000000cbb8	bl	_ThrowArrayIndexOutOfBoundsException
000000000000cbbc	bl	_ThrowIllegalArgumentException
_kfun:kotlin.native.internal.NumberConverter.freeFormat#internal:
000000000000cbc0	sub	sp, sp, #0xf0
000000000000cbc4	stp	x28, x27, [sp, #0x90]
000000000000cbc8	stp	x26, x25, [sp, #0xa0]
000000000000cbcc	stp	x24, x23, [sp, #0xb0]
000000000000cbd0	stp	x22, x21, [sp, #0xc0]
000000000000cbd4	stp	x20, x19, [sp, #0xd0]
000000000000cbd8	stp	x29, x30, [sp, #0xe0]
000000000000cbdc	add	x29, sp, #0xe0
000000000000cbe0	mov	x19, x1
000000000000cbe4	mov	x20, x0
000000000000cbe8	movi.16b	v0, #0x0
000000000000cbec	stp	q0, q0, [sp, #0x50]
000000000000cbf0	adr	x8, #0x54140
000000000000cbf4	nop
000000000000cbf8	orr	x8, x8, #0x3
000000000000cbfc	str	x8, [sp, #0x8]
000000000000cc00	mov	w8, #0x19
000000000000cc04	str	w8, [sp, #0x10]
000000000000cc08	stur	q0, [sp, #0x18]
000000000000cc0c	stur	q0, [sp, #0x28]
000000000000cc10	stur	q0, [sp, #0x38]
000000000000cc14	strh	wzr, [sp, #0x48]
000000000000cc18	adrp	x0, 110 ; 0x7a000
000000000000cc1c	add	x0, x0, #0x2c0
000000000000cc20	ldr	x8, [x0]
000000000000cc24	blr	x8
000000000000cc28	ldr	x21, [x0]
000000000000cc2c	ldr	x8, [x21, #0x110]
000000000000cc30	add	x9, sp, #0x50
000000000000cc34	str	x9, [x21, #0x110]
000000000000cc38	mov	x9, #0x400000000
000000000000cc3c	stp	x8, x9, [sp, #0x58]
000000000000cc40	adr	x22, #0x87649
000000000000cc44	nop
000000000000cc48	ldarb	w8, [x22]
000000000000cc4c	tbz	w8, #0x0, 0xcc54
000000000000cc50	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000cc54	add	x8, sp, #0x8
000000000000cc58	str	x8, [sp, #0x68]
000000000000cc5c	ldr	w23, [x20, #0x18]
000000000000cc60	tbnz	w23, #0x1f, 0xcc6c
000000000000cc64	mov	w26, #0x0
000000000000cc68	b	0xccec
000000000000cc6c	ldr	w8, [sp, #0x10]
000000000000cc70	cbz	w8, 0xceb0
000000000000cc74	ldr	x9, [sp, #0x8]
000000000000cc78	mov	w9, #0x30
000000000000cc7c	strh	w9, [sp, #0x18]
000000000000cc80	cmp	w8, #0x1
000000000000cc84	b.eq	0xceb0
000000000000cc88	ldr	x8, [sp, #0x8]
000000000000cc8c	mov	w8, #0x2e
000000000000cc90	strh	w8, [sp, #0x1a]
000000000000cc94	cmn	w23, #0x1
000000000000cc98	b.mi	0xcca4
000000000000cc9c	mov	w26, #0x2
000000000000cca0	b	0xccec
000000000000cca4	neg	w25, w23
000000000000cca8	mov	w24, #0x1
000000000000ccac	add	x26, sp, #0x8
000000000000ccb0	mov	w27, #0x30
000000000000ccb4	ldarb	w8, [x22]
000000000000ccb8	tbz	w8, #0x0, 0xccc0
000000000000ccbc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ccc0	add	w8, w24, #0x1
000000000000ccc4	ldr	w9, [sp, #0x10]
000000000000ccc8	cmp	w9, w8
000000000000cccc	b.ls	0xceb0
000000000000ccd0	ldr	x9, [sp, #0x8]
000000000000ccd4	add	x8, x26, w8, sxtw #1
000000000000ccd8	strh	w27, [x8, #0x10]
000000000000ccdc	add	w24, w24, #0x1
000000000000cce0	cmp	w25, w24
000000000000cce4	b.ne	0xccb4
000000000000cce8	add	w26, w24, #0x1
000000000000ccec	ldr	x8, [x20, #0x8]
000000000000ccf0	ldrsw	x9, [x20, #0x14]
000000000000ccf4	add	w10, w9, #0x1
000000000000ccf8	str	w10, [x20, #0x14]
000000000000ccfc	ldr	w10, [x8, #0x8]
000000000000cd00	cmp	w10, w9
000000000000cd04	b.ls	0xceb0
000000000000cd08	add	x8, x8, x9, lsl #2
000000000000cd0c	ldr	w28, [x8, #0x10]
000000000000cd10	add	x24, sp, #0x8
000000000000cd14	mov	w25, #0x2e
000000000000cd18	b	0xcd2c
000000000000cd1c	mov	w28, #-0x1
000000000000cd20	mov	x26, x27
000000000000cd24	cmn	w23, #0x2
000000000000cd28	b.le	0xce0c
000000000000cd2c	ldarb	w8, [x22]
000000000000cd30	tbz	w8, #0x0, 0xcd38
000000000000cd34	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000cd38	cmn	w28, #0x1
000000000000cd3c	b.eq	0xcd68
000000000000cd40	ldr	w8, [sp, #0x10]
000000000000cd44	cmp	w8, w26
000000000000cd48	b.ls	0xceb0
000000000000cd4c	add	w9, w28, #0x30
000000000000cd50	ldr	x10, [sp, #0x8]
000000000000cd54	add	x10, x24, w26, sxtw #1
000000000000cd58	strh	w9, [x10, #0x10]
000000000000cd5c	add	w27, w26, #0x1
000000000000cd60	cbnz	w23, 0xcdac
000000000000cd64	b	0xcd94
000000000000cd68	cmn	w23, #0x1
000000000000cd6c	b.lt	0xcdf0
000000000000cd70	ldr	w8, [sp, #0x10]
000000000000cd74	cmp	w8, w26
000000000000cd78	b.ls	0xceb0
000000000000cd7c	ldr	x9, [sp, #0x8]
000000000000cd80	mov	w9, #0x30
000000000000cd84	add	x10, x24, w26, sxtw #1
000000000000cd88	strh	w9, [x10, #0x10]
000000000000cd8c	add	w27, w26, #0x1
000000000000cd90	cbnz	w23, 0xcdac
000000000000cd94	cmp	w8, w27
000000000000cd98	b.ls	0xceb0
000000000000cd9c	ldr	x8, [sp, #0x8]
000000000000cda0	add	x8, x24, w27, sxtw #1
000000000000cda4	strh	w25, [x8, #0x10]
000000000000cda8	add	w27, w26, #0x2
000000000000cdac	sub	w23, w23, #0x1
000000000000cdb0	ldp	w9, w8, [x20, #0x10]
000000000000cdb4	sxtw	x8, w8
000000000000cdb8	cmp	w8, w9
000000000000cdbc	b.ge	0xcd1c
000000000000cdc0	ldr	x9, [x20, #0x8]
000000000000cdc4	add	w10, w8, #0x1
000000000000cdc8	str	w10, [x20, #0x14]
000000000000cdcc	ldr	w10, [x9, #0x8]
000000000000cdd0	cmp	w10, w8
000000000000cdd4	b.ls	0xceb0
000000000000cdd8	add	x8, x9, x8, lsl #2
000000000000cddc	ldr	w28, [x8, #0x10]
000000000000cde0	mov	x26, x27
000000000000cde4	cmn	w28, #0x1
000000000000cde8	b.ne	0xcd2c
000000000000cdec	b	0xcd1c
000000000000cdf0	mov	x27, x26
000000000000cdf4	sub	w23, w23, #0x1
000000000000cdf8	ldp	w9, w8, [x20, #0x10]
000000000000cdfc	sxtw	x8, w8
000000000000ce00	cmp	w8, w9
000000000000ce04	b.ge	0xcd1c
000000000000ce08	b	0xcdc0
000000000000ce0c	cbz	w27, 0xce64
000000000000ce10	tbnz	w27, #0x1f, 0xceb4
000000000000ce14	ldr	x8, [x21, #0x118]
000000000000ce18	mov	w9, w27
000000000000ce1c	lsl	x9, x9, #1
000000000000ce20	add	x9, x9, #0x1f
000000000000ce24	and	x1, x9, #0x3fffffff8
000000000000ce28	add	x0, x8, #0x70
000000000000ce2c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ce30	mov	x20, x0
000000000000ce34	adr	x8, #0x550ac
000000000000ce38	nop
000000000000ce3c	stp	x8, xzr, [x20, #0x10]!
000000000000ce40	stur	xzr, [x20, #-0x8]
000000000000ce44	str	w27, [x20, #0x8]
000000000000ce48	add	x0, x20, #0x10
000000000000ce4c	add	x8, sp, #0x8
000000000000ce50	add	x1, x8, #0x10
000000000000ce54	sbfiz	x2, x27, #1, #32
000000000000ce58	bl	0x554ac ; symbol stub for: _memcpy
000000000000ce5c	str	x20, [x19]
000000000000ce60	b	0xce80
000000000000ce64	ldr	x8, [x21, #0x110]
000000000000ce68	sub	x9, x29, #0x68
000000000000ce6c	str	x9, [x21, #0x110]
000000000000ce70	adr	x20, #0x61070
000000000000ce74	nop
000000000000ce78	str	x20, [x19]
000000000000ce7c	str	x8, [x21, #0x110]
000000000000ce80	str	x20, [x19]
000000000000ce84	ldr	x8, [sp, #0x58]
000000000000ce88	str	x8, [x21, #0x110]
000000000000ce8c	mov	x0, x20
000000000000ce90	ldp	x29, x30, [sp, #0xe0]
000000000000ce94	ldp	x20, x19, [sp, #0xd0]
000000000000ce98	ldp	x22, x21, [sp, #0xc0]
000000000000ce9c	ldp	x24, x23, [sp, #0xb0]
000000000000cea0	ldp	x26, x25, [sp, #0xa0]
000000000000cea4	ldp	x28, x27, [sp, #0x90]
000000000000cea8	add	sp, sp, #0xf0
000000000000ceac	ret
000000000000ceb0	bl	_ThrowArrayIndexOutOfBoundsException
000000000000ceb4	bl	_ThrowIllegalArgumentException
_kfun:kotlin.native.internal.NumberConverter.bigIntDigitGeneratorInstImpl#internal:
000000000000ceb8	stp	x28, x27, [sp, #-0x60]!
000000000000cebc	stp	x26, x25, [sp, #0x10]
000000000000cec0	stp	x24, x23, [sp, #0x20]
000000000000cec4	stp	x22, x21, [sp, #0x30]
000000000000cec8	stp	x20, x19, [sp, #0x40]
000000000000cecc	stp	x29, x30, [sp, #0x50]
000000000000ced0	add	x29, sp, #0x50
000000000000ced4	sub	sp, sp, #0x400
000000000000ced8	mov	x22, x4
000000000000cedc	mov	x23, x3
000000000000cee0	mov	x20, x2
000000000000cee4	mov	x21, x1
000000000000cee8	mov	x24, x0
000000000000ceec	movi.16b	v0, #0x0
000000000000cef0	stp	q0, q0, [sp, #0x70]
000000000000cef4	adr	x8, #0x53ecc
000000000000cef8	nop
000000000000cefc	orr	x8, x8, #0x3
000000000000cf00	str	x8, [sp, #0x50]
000000000000cf04	mov	w8, #0x3
000000000000cf08	str	w8, [sp, #0x58]
000000000000cf0c	str	xzr, [sp, #0x60]
000000000000cf10	str	wzr, [sp, #0x68]
000000000000cf14	adrp	x0, 110 ; 0x7a000
000000000000cf18	add	x0, x0, #0x2c0
000000000000cf1c	ldr	x8, [x0]
000000000000cf20	blr	x8
000000000000cf24	ldr	x10, [x0]
000000000000cf28	ldr	x8, [x10, #0x110]
000000000000cf2c	add	x9, sp, #0x70
000000000000cf30	str	x10, [sp]
000000000000cf34	str	x9, [x10, #0x110]
000000000000cf38	mov	x9, #0x400000000
000000000000cf3c	stp	x8, x9, [sp, #0x78]
000000000000cf40	adr	x8, #0x87349
000000000000cf44	nop
000000000000cf48	ldarb	w8, [x8]
000000000000cf4c	tbz	w8, #0x0, 0xcf58
000000000000cf50	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000cf54	movi.16b	v0, #0x0
000000000000cf58	add	x8, sp, #0x50
000000000000cf5c	str	x8, [sp, #0x88]
000000000000cf60	ldr	x26, [x24, #0x8]
000000000000cf64	stp	q0, q0, [x29, #-0x100]
000000000000cf68	stp	q0, q0, [x29, #-0xe0]
000000000000cf6c	stp	q0, q0, [x29, #-0xc0]
000000000000cf70	stp	q0, q0, [x29, #-0xa0]
000000000000cf74	stp	q0, q0, [x29, #-0x80]
000000000000cf78	stur	xzr, [x29, #-0x60]
000000000000cf7c	stp	q0, q0, [sp, #0x2a0]
000000000000cf80	stp	q0, q0, [sp, #0x2c0]
000000000000cf84	stp	q0, q0, [sp, #0x2e0]
000000000000cf88	stp	q0, q0, [sp, #0x300]
000000000000cf8c	stp	q0, q0, [sp, #0x320]
000000000000cf90	str	q0, [sp, #0x340]
000000000000cf94	str	xzr, [sp, #0x290]
000000000000cf98	stp	q0, q0, [sp, #0x270]
000000000000cf9c	stp	q0, q0, [sp, #0x250]
000000000000cfa0	stp	q0, q0, [sp, #0x230]
000000000000cfa4	stp	q0, q0, [sp, #0x210]
000000000000cfa8	stp	q0, q0, [sp, #0x1f0]
000000000000cfac	str	xzr, [sp, #0x1e0]
000000000000cfb0	stp	q0, q0, [sp, #0x1c0]
000000000000cfb4	stp	q0, q0, [sp, #0x1a0]
000000000000cfb8	stp	q0, q0, [sp, #0x180]
000000000000cfbc	stp	q0, q0, [sp, #0x160]
000000000000cfc0	stp	q0, q0, [sp, #0x140]
000000000000cfc4	stp	q0, q0, [sp, #0x120]
000000000000cfc8	stp	q0, q0, [sp, #0x100]
000000000000cfcc	stp	q0, q0, [sp, #0xe0]
000000000000cfd0	stp	q0, q0, [sp, #0xc0]
000000000000cfd4	stp	q0, q0, [sp, #0xa0]
000000000000cfd8	str	q0, [sp, #0x90]
000000000000cfdc	str	x24, [sp, #0x10]
000000000000cfe0	tbnz	w20, #0x1f, 0xd048
000000000000cfe4	stur	x21, [x29, #-0x100]
000000000000cfe8	mov	w8, #0x1
000000000000cfec	str	x8, [sp, #0x140]
000000000000cff0	str	x8, [sp, #0x1f0]
000000000000cff4	add	x0, sp, #0x140
000000000000cff8	mov	w1, #0x15
000000000000cffc	mov	x2, x20
000000000000d000	bl	_simpleShiftLeftHighPrecision
000000000000d004	sub	w19, w22, #0x1
000000000000d008	mov	w8, #0x2
000000000000d00c	lsl	w8, w8, w19
000000000000d010	sxtw	x8, w8
000000000000d014	cmp	x8, x21
000000000000d018	b.ne	0xd090
000000000000d01c	add	w2, w20, #0x2
000000000000d020	sub	x0, x29, #0x100
000000000000d024	mov	w1, #0x15
000000000000d028	bl	_simpleShiftLeftHighPrecision
000000000000d02c	mov	w8, #0x4
000000000000d030	str	x8, [sp, #0x2a0]
000000000000d034	add	w2, w20, #0x1
000000000000d038	add	x0, sp, #0x1f0
000000000000d03c	mov	w1, #0x15
000000000000d040	bl	_simpleShiftLeftHighPrecision
000000000000d044	b	0xd0e4
000000000000d048	sub	w19, w22, #0x1
000000000000d04c	tbnz	w23, #0x0, 0xd0bc
000000000000d050	mov	w22, #0x2
000000000000d054	lsl	w8, w22, w19
000000000000d058	sxtw	x8, w8
000000000000d05c	cmp	x8, x21
000000000000d060	b.ne	0xd0bc
000000000000d064	lsl	x8, x21, #2
000000000000d068	stur	x8, [x29, #-0x100]
000000000000d06c	mov	w21, #0x1
000000000000d070	str	x21, [sp, #0x2a0]
000000000000d074	sub	w2, w22, w20
000000000000d078	add	x0, sp, #0x2a0
000000000000d07c	mov	w1, #0x16
000000000000d080	bl	_simpleShiftLeftHighPrecision
000000000000d084	str	x22, [sp, #0x1f0]
000000000000d088	str	x21, [sp, #0x140]
000000000000d08c	b	0xd0e4
000000000000d090	add	w2, w20, #0x1
000000000000d094	sub	x0, x29, #0x100
000000000000d098	mov	w1, #0x15
000000000000d09c	bl	_simpleShiftLeftHighPrecision
000000000000d0a0	mov	w8, #0x2
000000000000d0a4	str	x8, [sp, #0x2a0]
000000000000d0a8	add	x0, sp, #0x1f0
000000000000d0ac	mov	w1, #0x15
000000000000d0b0	mov	x2, x20
000000000000d0b4	bl	_simpleShiftLeftHighPrecision
000000000000d0b8	b	0xd0e4
000000000000d0bc	lsl	x8, x21, #1
000000000000d0c0	stur	x8, [x29, #-0x100]
000000000000d0c4	mov	w21, #0x1
000000000000d0c8	str	x21, [sp, #0x2a0]
000000000000d0cc	sub	w2, w21, w20
000000000000d0d0	add	x0, sp, #0x2a0
000000000000d0d4	mov	w1, #0x16
000000000000d0d8	bl	_simpleShiftLeftHighPrecision
000000000000d0dc	str	x21, [sp, #0x140]
000000000000d0e0	str	x21, [sp, #0x1f0]
000000000000d0e4	add	w8, w19, w20
000000000000d0e8	scvtf	d0, w8
000000000000d0ec	nop
000000000000d0f0	ldr	d1, 0x57b50
000000000000d0f4	fmul	d0, d0, d1
000000000000d0f8	nop
000000000000d0fc	ldr	d1, 0x57b58
000000000000d100	fadd	d0, d0, d1
000000000000d104	fcvtps	w24, d0
000000000000d108	subs	w27, w24, #0x1
000000000000d10c	b.lt	0xd120
000000000000d110	add	x0, sp, #0x2a0
000000000000d114	mov	w1, #0x16
000000000000d118	mov	x2, x24
000000000000d11c	b	0xd150
000000000000d120	neg	w20, w24
000000000000d124	sub	x0, x29, #0x100
000000000000d128	mov	w1, #0x15
000000000000d12c	mov	x2, x20
000000000000d130	bl	_timesTenToTheEHighPrecision
000000000000d134	add	x0, sp, #0x1f0
000000000000d138	mov	w1, #0x15
000000000000d13c	mov	x2, x20
000000000000d140	bl	_timesTenToTheEHighPrecision
000000000000d144	add	x0, sp, #0x140
000000000000d148	mov	w1, #0x15
000000000000d14c	mov	x2, x20
000000000000d150	bl	_timesTenToTheEHighPrecision
000000000000d154	ldp	q0, q1, [x29, #-0x80]
000000000000d158	stp	q0, q1, [sp, #0x110]
000000000000d15c	ldur	x8, [x29, #-0x60]
000000000000d160	stp	x8, xzr, [sp, #0x130]
000000000000d164	ldp	q0, q1, [x29, #-0xc0]
000000000000d168	stp	q0, q1, [sp, #0xd0]
000000000000d16c	ldp	q1, q0, [x29, #-0xa0]
000000000000d170	stp	q1, q0, [sp, #0xf0]
000000000000d174	ldp	q0, q1, [x29, #-0x100]
000000000000d178	stp	q0, q1, [sp, #0x90]
000000000000d17c	ldp	q1, q0, [x29, #-0xe0]
000000000000d180	mov	w8, #0x14
000000000000d184	sub	x9, x29, #0x100
000000000000d188	stp	q1, q0, [sp, #0xb0]
000000000000d18c	add	x10, x8, #0x1
000000000000d190	cmp	x10, #0x2
000000000000d194	b.lo	0xd1ac
000000000000d198	ldr	x10, [x9, x8, lsl #3]
000000000000d19c	sub	x8, x8, #0x1
000000000000d1a0	cbz	x10, 0xd18c
000000000000d1a4	add	w21, w8, #0x2
000000000000d1a8	b	0xd1b0
000000000000d1ac	mov	w21, #0x1
000000000000d1b0	mov	w8, #0x14
000000000000d1b4	add	x9, sp, #0x1f0
000000000000d1b8	add	x10, x8, #0x1
000000000000d1bc	cmp	x10, #0x2
000000000000d1c0	b.lo	0xd1d8
000000000000d1c4	ldr	x10, [x9, x8, lsl #3]
000000000000d1c8	sub	x8, x8, #0x1
000000000000d1cc	cbz	x10, 0xd1b8
000000000000d1d0	add	w22, w8, #0x2
000000000000d1d4	b	0xd1dc
000000000000d1d8	mov	w22, #0x1
000000000000d1dc	mov	w8, #0x14
000000000000d1e0	add	x9, sp, #0x140
000000000000d1e4	add	x10, x8, #0x1
000000000000d1e8	cmp	x10, #0x2
000000000000d1ec	b.lo	0xd204
000000000000d1f0	ldr	x10, [x9, x8, lsl #3]
000000000000d1f4	sub	x8, x8, #0x1
000000000000d1f8	cbz	x10, 0xd1e4
000000000000d1fc	add	w23, w8, #0x2
000000000000d200	b	0xd208
000000000000d204	mov	w23, #0x1
000000000000d208	mov	w8, #0x15
000000000000d20c	add	x9, sp, #0x2a0
000000000000d210	add	x10, x8, #0x1
000000000000d214	cmp	x10, #0x2
000000000000d218	b.lo	0xd230
000000000000d21c	ldr	x10, [x9, x8, lsl #3]
000000000000d220	sub	x8, x8, #0x1
000000000000d224	cbz	x10, 0xd210
000000000000d228	add	w20, w8, #0x2
000000000000d22c	b	0xd234
000000000000d230	mov	w20, #0x1
000000000000d234	cmp	w21, w22
000000000000d238	csel	w8, w21, w22, gt
000000000000d23c	add	w25, w8, #0x1
000000000000d240	add	x19, sp, #0x90
000000000000d244	add	x0, sp, #0x90
000000000000d248	add	x2, sp, #0x1f0
000000000000d24c	mov	x1, x25
000000000000d250	mov	x3, x22
000000000000d254	bl	_addHighPrecision
000000000000d258	add	x0, sp, #0x90
000000000000d25c	add	x2, sp, #0x2a0
000000000000d260	mov	x1, x25
000000000000d264	str	x20, [sp, #0x28]
000000000000d268	mov	x3, x20
000000000000d26c	bl	_compareHighPrecision
000000000000d270	tbnz	w0, #0x1f, 0xd27c
000000000000d274	str	w24, [sp, #0xc]
000000000000d278	b	0xd3ac
000000000000d27c	mov	x9, #0x0
000000000000d280	cmp	w21, #0x1
000000000000d284	mov	w8, #0x1
000000000000d288	csinc	w8, w8, w21, lt
000000000000d28c	sub	x10, x29, #0x100
000000000000d290	mov	w11, #0xa
000000000000d294	ldp	w12, w13, [x10]
000000000000d298	madd	x12, x12, x11, x9
000000000000d29c	mul	x9, x13, x11
000000000000d2a0	add	x13, x9, x12, lsr #32
000000000000d2a4	lsr	x9, x13, #32
000000000000d2a8	stp	w12, w13, [x10], #0x8
000000000000d2ac	subs	x8, x8, #0x1
000000000000d2b0	b.ne	0xd294
000000000000d2b4	mov	x9, #0x0
000000000000d2b8	cmp	w22, #0x1
000000000000d2bc	mov	w8, #0x1
000000000000d2c0	csinc	w8, w8, w22, lt
000000000000d2c4	add	x10, sp, #0x1f0
000000000000d2c8	mov	w11, #0xa
000000000000d2cc	ldp	w12, w13, [x10]
000000000000d2d0	madd	x12, x12, x11, x9
000000000000d2d4	mul	x9, x13, x11
000000000000d2d8	add	x13, x9, x12, lsr #32
000000000000d2dc	lsr	x9, x13, #32
000000000000d2e0	stp	w12, w13, [x10], #0x8
000000000000d2e4	subs	x8, x8, #0x1
000000000000d2e8	b.ne	0xd2cc
000000000000d2ec	mov	x9, #0x0
000000000000d2f0	cmp	w23, #0x1
000000000000d2f4	mov	w8, #0x1
000000000000d2f8	csinc	w8, w8, w23, lt
000000000000d2fc	add	x10, sp, #0x140
000000000000d300	mov	w11, #0xa
000000000000d304	ldp	w12, w13, [x10]
000000000000d308	madd	x12, x12, x11, x9
000000000000d30c	mul	x9, x13, x11
000000000000d310	add	x13, x9, x12, lsr #32
000000000000d314	lsr	x9, x13, #32
000000000000d318	stp	w12, w13, [x10], #0x8
000000000000d31c	subs	x8, x8, #0x1
000000000000d320	b.ne	0xd304
000000000000d324	mov	w8, w21
000000000000d328	sub	x9, x29, #0x100
000000000000d32c	add	x10, x8, #0x1
000000000000d330	cmp	x10, #0x2
000000000000d334	b.lt	0xd34c
000000000000d338	ldr	x10, [x9, x8, lsl #3]
000000000000d33c	sub	x8, x8, #0x1
000000000000d340	cbz	x10, 0xd32c
000000000000d344	add	w21, w8, #0x2
000000000000d348	b	0xd350
000000000000d34c	mov	w21, #0x1
000000000000d350	mov	w8, w22
000000000000d354	add	x9, sp, #0x1f0
000000000000d358	add	x10, x8, #0x1
000000000000d35c	cmp	x10, #0x2
000000000000d360	b.lt	0xd378
000000000000d364	ldr	x10, [x9, x8, lsl #3]
000000000000d368	sub	x8, x8, #0x1
000000000000d36c	cbz	x10, 0xd358
000000000000d370	add	w22, w8, #0x2
000000000000d374	b	0xd37c
000000000000d378	mov	w22, #0x1
000000000000d37c	mov	w8, w23
000000000000d380	add	x9, sp, #0x140
000000000000d384	str	w27, [sp, #0xc]
000000000000d388	add	x10, x8, #0x1
000000000000d38c	cmp	x10, #0x2
000000000000d390	b.lt	0xd3a8
000000000000d394	ldr	x10, [x9, x8, lsl #3]
000000000000d398	sub	x8, x8, #0x1
000000000000d39c	cbz	x10, 0xd388
000000000000d3a0	add	w23, w8, #0x2
000000000000d3a4	b	0xd3ac
000000000000d3a8	mov	w23, #0x1
000000000000d3ac	ldr	x27, [sp, #0x28]
000000000000d3b0	add	w24, w27, #0x1
000000000000d3b4	sxtw	x8, w27
000000000000d3b8	str	x8, [sp, #0x48]
000000000000d3bc	sbfiz	x8, x27, #3, #32
000000000000d3c0	stp	xzr, x8, [sp, #0x38]
000000000000d3c4	add	x8, x26, #0x10
000000000000d3c8	stp	x8, x26, [sp, #0x18]
000000000000d3cc	sub	x25, x19, #0x8
000000000000d3d0	add	x20, sp, #0x140
000000000000d3d4	mov	w28, #0xa
000000000000d3d8	ldp	x2, x8, [sp, #0x40]
000000000000d3dc	str	xzr, [x19, x8, lsl #3]
000000000000d3e0	add	x0, sp, #0x90
000000000000d3e4	add	x1, sp, #0x2a0
000000000000d3e8	bl	0x554ac ; symbol stub for: _memcpy
000000000000d3ec	cmp	w27, #0x1
000000000000d3f0	b.lt	0xd420
000000000000d3f4	mov	x8, x24
000000000000d3f8	lsl	x9, x8, #3
000000000000d3fc	sub	w10, w8, #0x2
000000000000d400	sub	x11, x8, #0x1
000000000000d404	ldr	x12, [x25, x9]
000000000000d408	ldr	x10, [x19, w10, uxtw #3]
000000000000d40c	extr	x10, x12, x10, #0x3d
000000000000d410	str	x10, [x25, x9]
000000000000d414	cmp	x8, #0x2
000000000000d418	mov	x8, x11
000000000000d41c	b.gt	0xd3f8
000000000000d420	ldr	x8, [sp, #0x90]
000000000000d424	lsl	x8, x8, #3
000000000000d428	str	x8, [sp, #0x90]
000000000000d42c	sub	x0, x29, #0x100
000000000000d430	add	x2, sp, #0x90
000000000000d434	mov	x1, x21
000000000000d438	mov	x3, x24
000000000000d43c	bl	_compareHighPrecision
000000000000d440	tbnz	w0, #0x1f, 0xd460
000000000000d444	sub	x0, x29, #0x100
000000000000d448	add	x2, sp, #0x90
000000000000d44c	mov	x1, x21
000000000000d450	mov	x3, x24
000000000000d454	bl	_subtractHighPrecision
000000000000d458	mov	w26, #0x8
000000000000d45c	b	0xd464
000000000000d460	mov	w26, #0x0
000000000000d464	ldp	x2, x8, [sp, #0x40]
000000000000d468	str	xzr, [x19, x8, lsl #3]
000000000000d46c	add	x0, sp, #0x90
000000000000d470	add	x1, sp, #0x2a0
000000000000d474	bl	0x554ac ; symbol stub for: _memcpy
000000000000d478	cmp	w27, #0x1
000000000000d47c	b.lt	0xd4ac
000000000000d480	mov	x8, x24
000000000000d484	lsl	x9, x8, #3
000000000000d488	sub	w10, w8, #0x2
000000000000d48c	sub	x11, x8, #0x1
000000000000d490	ldr	x12, [x25, x9]
000000000000d494	ldr	x10, [x19, w10, uxtw #3]
000000000000d498	extr	x10, x12, x10, #0x3e
000000000000d49c	str	x10, [x25, x9]
000000000000d4a0	cmp	x8, #0x2
000000000000d4a4	mov	x8, x11
000000000000d4a8	b.gt	0xd484
000000000000d4ac	ldr	x8, [sp, #0x90]
000000000000d4b0	lsl	x8, x8, #2
000000000000d4b4	str	x8, [sp, #0x90]
000000000000d4b8	sub	x0, x29, #0x100
000000000000d4bc	add	x2, sp, #0x90
000000000000d4c0	mov	x1, x21
000000000000d4c4	mov	x3, x24
000000000000d4c8	bl	_compareHighPrecision
000000000000d4cc	tbnz	w0, #0x1f, 0xd4e8
000000000000d4d0	sub	x0, x29, #0x100
000000000000d4d4	add	x2, sp, #0x90
000000000000d4d8	mov	x1, x21
000000000000d4dc	mov	x3, x24
000000000000d4e0	bl	_subtractHighPrecision
000000000000d4e4	orr	w26, w26, #0x4
000000000000d4e8	ldp	x2, x8, [sp, #0x40]
000000000000d4ec	str	xzr, [x19, x8, lsl #3]
000000000000d4f0	add	x0, sp, #0x90
000000000000d4f4	add	x1, sp, #0x2a0
000000000000d4f8	bl	0x554ac ; symbol stub for: _memcpy
000000000000d4fc	cmp	w27, #0x1
000000000000d500	b.lt	0xd530
000000000000d504	mov	x8, x24
000000000000d508	lsl	x9, x8, #3
000000000000d50c	sub	w10, w8, #0x2
000000000000d510	sub	x11, x8, #0x1
000000000000d514	ldr	x12, [x25, x9]
000000000000d518	ldr	x10, [x19, w10, uxtw #3]
000000000000d51c	extr	x10, x12, x10, #0x3f
000000000000d520	str	x10, [x25, x9]
000000000000d524	cmp	x8, #0x2
000000000000d528	mov	x8, x11
000000000000d52c	b.gt	0xd508
000000000000d530	ldr	x8, [sp, #0x90]
000000000000d534	lsl	x8, x8, #1
000000000000d538	str	x8, [sp, #0x90]
000000000000d53c	sub	x0, x29, #0x100
000000000000d540	add	x2, sp, #0x90
000000000000d544	mov	x1, x21
000000000000d548	mov	x3, x24
000000000000d54c	bl	_compareHighPrecision
000000000000d550	tbnz	w0, #0x1f, 0xd56c
000000000000d554	sub	x0, x29, #0x100
000000000000d558	add	x2, sp, #0x90
000000000000d55c	mov	x1, x21
000000000000d560	mov	x3, x24
000000000000d564	bl	_subtractHighPrecision
000000000000d568	add	w26, w26, #0x2
000000000000d56c	ldp	x2, x8, [sp, #0x40]
000000000000d570	str	xzr, [x19, x8, lsl #3]
000000000000d574	add	x0, sp, #0x90
000000000000d578	add	x1, sp, #0x2a0
000000000000d57c	bl	0x554ac ; symbol stub for: _memcpy
000000000000d580	sub	x0, x29, #0x100
000000000000d584	add	x2, sp, #0x90
000000000000d588	mov	x1, x21
000000000000d58c	mov	x3, x24
000000000000d590	bl	_compareHighPrecision
000000000000d594	tbnz	w0, #0x1f, 0xd5b0
000000000000d598	sub	x0, x29, #0x100
000000000000d59c	add	x2, sp, #0x90
000000000000d5a0	mov	x1, x21
000000000000d5a4	mov	x3, x24
000000000000d5a8	bl	_subtractHighPrecision
000000000000d5ac	add	w26, w26, #0x1
000000000000d5b0	str	w26, [sp, #0x34]
000000000000d5b4	sub	x0, x29, #0x100
000000000000d5b8	add	x2, sp, #0x140
000000000000d5bc	mov	x1, x21
000000000000d5c0	mov	x3, x23
000000000000d5c4	bl	_compareHighPrecision
000000000000d5c8	mov	x26, x0
000000000000d5cc	sbfiz	x27, x21, #3, #32
000000000000d5d0	add	x0, x19, x27
000000000000d5d4	mov	w8, #0x16
000000000000d5d8	sub	w8, w8, w21
000000000000d5dc	sbfiz	x1, x8, #3, #32
000000000000d5e0	bl	0x553c8 ; symbol stub for: _bzero
000000000000d5e4	add	x0, sp, #0x90
000000000000d5e8	sub	x1, x29, #0x100
000000000000d5ec	mov	x2, x27
000000000000d5f0	bl	0x554ac ; symbol stub for: _memcpy
000000000000d5f4	cmp	w21, w22
000000000000d5f8	csel	w8, w21, w22, gt
000000000000d5fc	add	w27, w8, #0x1
000000000000d600	add	x0, sp, #0x90
000000000000d604	add	x2, sp, #0x1f0
000000000000d608	mov	x1, x27
000000000000d60c	mov	x3, x22
000000000000d610	bl	_addHighPrecision
000000000000d614	add	x0, sp, #0x90
000000000000d618	add	x2, sp, #0x2a0
000000000000d61c	mov	x1, x27
000000000000d620	ldr	x27, [sp, #0x28]
000000000000d624	mov	x3, x27
000000000000d628	bl	_compareHighPrecision
000000000000d62c	add	w1, w21, #0x1
000000000000d630	cmp	w26, #0x1
000000000000d634	b.lt	0xd7a4
000000000000d638	tbz	w0, #0x1f, 0xd7a4
000000000000d63c	mov	x9, #0x0
000000000000d640	cmp	w1, #0x1
000000000000d644	csinc	w8, w1, wzr, gt
000000000000d648	sub	x10, x29, #0x100
000000000000d64c	ldp	w11, w12, [x10]
000000000000d650	madd	x11, x11, x28, x9
000000000000d654	mul	x9, x12, x28
000000000000d658	add	x12, x9, x11, lsr #32
000000000000d65c	lsr	x9, x12, #32
000000000000d660	stp	w11, w12, [x10], #0x8
000000000000d664	subs	x8, x8, #0x1
000000000000d668	b.ne	0xd64c
000000000000d66c	mov	x10, #0x0
000000000000d670	add	w8, w22, #0x1
000000000000d674	cmp	w8, #0x1
000000000000d678	mov	w14, #0x1
000000000000d67c	csinc	w9, w14, w22, le
000000000000d680	add	x11, sp, #0x1f0
000000000000d684	ldr	x15, [sp, #0x20]
000000000000d688	ldr	w16, [sp, #0x34]
000000000000d68c	ldp	w12, w13, [x11]
000000000000d690	madd	x12, x12, x28, x10
000000000000d694	mul	x10, x13, x28
000000000000d698	add	x13, x10, x12, lsr #32
000000000000d69c	lsr	x10, x13, #32
000000000000d6a0	stp	w12, w13, [x11], #0x8
000000000000d6a4	subs	x9, x9, #0x1
000000000000d6a8	b.ne	0xd68c
000000000000d6ac	mov	x11, #0x0
000000000000d6b0	add	w9, w23, #0x1
000000000000d6b4	cmp	w9, #0x1
000000000000d6b8	csinc	w10, w14, w23, le
000000000000d6bc	add	x12, sp, #0x140
000000000000d6c0	ldp	w13, w14, [x12]
000000000000d6c4	madd	x13, x13, x28, x11
000000000000d6c8	mul	x11, x14, x28
000000000000d6cc	add	x14, x11, x13, lsr #32
000000000000d6d0	lsr	x11, x14, #32
000000000000d6d4	stp	w13, w14, [x12], #0x8
000000000000d6d8	subs	x10, x10, #0x1
000000000000d6dc	b.ne	0xd6c0
000000000000d6e0	cmp	w1, #0x1
000000000000d6e4	csinc	w10, w1, wzr, lt
000000000000d6e8	mov	w14, #-0x1
000000000000d6ec	add	x11, x14, w1, uxtw
000000000000d6f0	add	w21, w21, #0x2
000000000000d6f4	sub	x13, x29, #0x100
000000000000d6f8	sub	w21, w21, #0x1
000000000000d6fc	cmp	w21, #0x2
000000000000d700	b.lt	0xd714
000000000000d704	ldr	x12, [x13, w11, uxtw #3]
000000000000d708	sub	x11, x11, #0x1
000000000000d70c	cbz	x12, 0xd6f8
000000000000d710	b	0xd718
000000000000d714	mov	x21, x10
000000000000d718	cmp	w8, #0x1
000000000000d71c	csinc	w10, w8, wzr, lt
000000000000d720	add	x8, x14, w8, uxtw
000000000000d724	add	w22, w22, #0x2
000000000000d728	add	x12, sp, #0x1f0
000000000000d72c	sub	w22, w22, #0x1
000000000000d730	cmp	w22, #0x2
000000000000d734	b.lt	0xd748
000000000000d738	ldr	x11, [x12, w8, uxtw #3]
000000000000d73c	sub	x8, x8, #0x1
000000000000d740	cbz	x11, 0xd72c
000000000000d744	b	0xd74c
000000000000d748	mov	x22, x10
000000000000d74c	cmp	w9, #0x1
000000000000d750	csinc	w8, w9, wzr, lt
000000000000d754	add	x9, x14, w9, uxtw
000000000000d758	add	w23, w23, #0x2
000000000000d75c	sub	w23, w23, #0x1
000000000000d760	cmp	w23, #0x2
000000000000d764	b.lt	0xd778
000000000000d768	ldr	x10, [x20, w9, uxtw #3]
000000000000d76c	sub	x9, x9, #0x1
000000000000d770	cbz	x10, 0xd75c
000000000000d774	b	0xd77c
000000000000d778	mov	x23, x8
000000000000d77c	ldr	w8, [x15, #0x8]
000000000000d780	ldr	x9, [sp, #0x38]
000000000000d784	cmp	x9, x8
000000000000d788	b.hs	0xd8d0
000000000000d78c	ldr	xzr, [x15]
000000000000d790	ldr	x8, [sp, #0x18]
000000000000d794	str	w16, [x8, x9, lsl #2]
000000000000d798	add	x8, x9, #0x1
000000000000d79c	str	x8, [sp, #0x38]
000000000000d7a0	b	0xd3d8
000000000000d7a4	cmp	w1, #0x1
000000000000d7a8	b.le	0xd7e4
000000000000d7ac	mov	w8, #-0x2
000000000000d7b0	add	x8, x8, w1, sxtw
000000000000d7b4	sub	x9, x29, #0x100
000000000000d7b8	add	x10, x9, w1, sxtw #3
000000000000d7bc	sub	x10, x10, #0x8
000000000000d7c0	add	x11, x1, #0x1
000000000000d7c4	ldr	x12, [x10]
000000000000d7c8	ldr	x13, [x9, w8, uxtw #3]
000000000000d7cc	extr	x12, x12, x13, #0x3f
000000000000d7d0	str	x12, [x10], #-0x8
000000000000d7d4	sub	x8, x8, #0x1
000000000000d7d8	sub	x11, x11, #0x1
000000000000d7dc	cmp	x11, #0x2
000000000000d7e0	b.gt	0xd7c4
000000000000d7e4	ldur	x8, [x29, #-0x100]
000000000000d7e8	lsl	x8, x8, #1
000000000000d7ec	stur	x8, [x29, #-0x100]
000000000000d7f0	ldr	x19, [sp, #0x10]
000000000000d7f4	ldr	w20, [sp, #0xc]
000000000000d7f8	tbz	w0, #0x1f, 0xd814
000000000000d7fc	cmp	w26, #0x1
000000000000d800	b.ge	0xd814
000000000000d804	ldr	x9, [sp, #0x20]
000000000000d808	ldr	x10, [sp, #0x38]
000000000000d80c	ldr	w11, [sp, #0x34]
000000000000d810	b	0xd850
000000000000d814	cmp	w26, #0x1
000000000000d818	b.lt	0xd82c
000000000000d81c	tbnz	w0, #0x1f, 0xd82c
000000000000d820	ldr	w11, [sp, #0x34]
000000000000d824	add	w11, w11, #0x1
000000000000d828	b	0xd848
000000000000d82c	sub	x0, x29, #0x100
000000000000d830	add	x2, sp, #0x2a0
000000000000d834	mov	x3, x27
000000000000d838	bl	_compareHighPrecision
000000000000d83c	mvn	w8, w0
000000000000d840	ldr	w11, [sp, #0x34]
000000000000d844	add	w11, w11, w8, lsr #31
000000000000d848	ldr	x9, [sp, #0x20]
000000000000d84c	ldr	x10, [sp, #0x38]
000000000000d850	ldr	w8, [x9, #0x8]
000000000000d854	cmp	w8, w10
000000000000d858	b.ls	0xd8d0
000000000000d85c	ldr	xzr, [x9]
000000000000d860	ldr	x8, [sp, #0x18]
000000000000d864	str	w11, [x8, w10, uxtw #2]
000000000000d868	ldr	w9, [sp, #0x58]
000000000000d86c	cbz	w9, 0xd8d0
000000000000d870	add	w8, w10, #0x1
000000000000d874	ldr	x10, [sp, #0x50]
000000000000d878	str	w8, [sp, #0x60]
000000000000d87c	cmp	w9, #0x1
000000000000d880	b.eq	0xd8d0
000000000000d884	ldr	x10, [sp, #0x50]
000000000000d888	str	wzr, [sp, #0x64]
000000000000d88c	cmp	w9, #0x2
000000000000d890	b.ls	0xd8d0
000000000000d894	ldr	x9, [sp, #0x50]
000000000000d898	str	w20, [sp, #0x68]
000000000000d89c	stp	w8, wzr, [x19, #0x10]
000000000000d8a0	str	w20, [x19, #0x18]
000000000000d8a4	ldr	x8, [sp, #0x78]
000000000000d8a8	ldr	x9, [sp]
000000000000d8ac	str	x8, [x9, #0x110]
000000000000d8b0	add	sp, sp, #0x400
000000000000d8b4	ldp	x29, x30, [sp, #0x50]
000000000000d8b8	ldp	x20, x19, [sp, #0x40]
000000000000d8bc	ldp	x22, x21, [sp, #0x30]
000000000000d8c0	ldp	x24, x23, [sp, #0x20]
000000000000d8c4	ldp	x26, x25, [sp, #0x10]
000000000000d8c8	ldp	x28, x27, [sp], #0x60
000000000000d8cc	ret
000000000000d8d0	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.native.internal.NumberConverter.longDigitGenerator#internal:
000000000000d8d4	sub	sp, sp, #0x130
000000000000d8d8	stp	x28, x27, [sp, #0xd0]
000000000000d8dc	stp	x26, x25, [sp, #0xe0]
000000000000d8e0	stp	x24, x23, [sp, #0xf0]
000000000000d8e4	stp	x22, x21, [sp, #0x100]
000000000000d8e8	stp	x20, x19, [sp, #0x110]
000000000000d8ec	stp	x29, x30, [sp, #0x120]
000000000000d8f0	add	x29, sp, #0x120
000000000000d8f4	mov	x23, x4
000000000000d8f8	mov	x24, x3
000000000000d8fc	mov	x21, x2
000000000000d900	mov	x25, x1
000000000000d904	mov	x19, x0
000000000000d908	movi.16b	v0, #0x0
000000000000d90c	stp	q0, q0, [sp, #0x60]
000000000000d910	str	xzr, [sp, #0xc0]
000000000000d914	stp	q0, q0, [sp, #0xa0]
000000000000d918	stp	q0, q0, [sp, #0x80]
000000000000d91c	adr	x8, #0x53534
000000000000d920	nop
000000000000d924	orr	x8, x8, #0x3
000000000000d928	str	x8, [sp, #0x30]
000000000000d92c	mov	w8, #0x4
000000000000d930	str	w8, [sp, #0x38]
000000000000d934	stp	q0, q0, [sp, #0x40]
000000000000d938	adrp	x0, 109 ; 0x7a000
000000000000d93c	add	x0, x0, #0x2c0
000000000000d940	ldr	x8, [x0]
000000000000d944	blr	x8
000000000000d948	ldr	x26, [x0]
000000000000d94c	ldr	x8, [x26, #0x110]
000000000000d950	add	x9, sp, #0x60
000000000000d954	str	x9, [x26, #0x110]
000000000000d958	mov	x9, #0xd00000000
000000000000d95c	stp	x8, x9, [sp, #0x68]
000000000000d960	adr	x27, #0x86929
000000000000d964	nop
000000000000d968	ldarb	w8, [x27]
000000000000d96c	tbz	w8, #0x0, 0xd97c
000000000000d970	mov	x20, x5
000000000000d974	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000d978	mov	x5, x20
000000000000d97c	eor	w8, w23, #0x1
000000000000d980	orr	w8, w8, w24
000000000000d984	cmp	w8, #0x0
000000000000d988	mov	w8, #0x1
000000000000d98c	cinc	w9, w8, eq
000000000000d990	cinc	x10, x8, eq
000000000000d994	sub	w9, w9, w21
000000000000d998	lsl	x9, x8, x9
000000000000d99c	lsl	x11, x8, x21
000000000000d9a0	cmp	w23, #0x0
000000000000d9a4	mov	w12, #0x2
000000000000d9a8	mov	w13, #0x4
000000000000d9ac	csel	x12, x13, x12, ne
000000000000d9b0	cinc	w13, w8, ne
000000000000d9b4	add	w13, w13, w21
000000000000d9b8	and	w13, w13, #0x3f
000000000000d9bc	tst	w21, #0x80000000
000000000000d9c0	csel	x24, x8, x11, ne
000000000000d9c4	csel	x28, x9, x12, ne
000000000000d9c8	csel	x20, x10, x13, ne
000000000000d9cc	adr	x22, #0x86934
000000000000d9d0	nop
000000000000d9d4	ldar	x23, [x22]
000000000000d9d8	cmp	x23, #0x2
000000000000d9dc	b.hs	0xdbd8
000000000000d9e0	ldp	x8, x9, [x26, #0x120]
000000000000d9e4	cmp	x8, x9
000000000000d9e8	b.eq	0xda08
000000000000d9ec	mov	x10, x9
000000000000d9f0	ldr	x11, [x10, #-0x10]!
000000000000d9f4	cmp	x11, x22
000000000000d9f8	b.eq	0xdad4
000000000000d9fc	mov	x9, x10
000000000000da00	cmp	x10, x8
000000000000da04	b.ne	0xd9f0
000000000000da08	add	x8, x26, #0x120
000000000000da0c	stp	x8, x25, [sp, #0x20]
000000000000da10	add	x0, x26, #0x138
000000000000da14	mov	w9, #0x1
000000000000da18	ldaxr	w8, [x0]
000000000000da1c	stlxr	w10, w9, [x0]
000000000000da20	cbnz	w10, 0xda18
000000000000da24	b	0xda34
000000000000da28	mov	w25, #0x1
000000000000da2c	stlxr	w9, x25, [x22]
000000000000da30	cbz	w9, 0xda44
000000000000da34	ldaxr	x23, [x22]
000000000000da38	cbz	x23, 0xda28
000000000000da3c	mov	w25, #0x0
000000000000da40	clrex
000000000000da44	cmp	x23, #0x1
000000000000da48	b.eq	0xda34
000000000000da4c	cbz	x26, 0xda7c
000000000000da50	ldaxr	w9, [x0]
000000000000da54	stlxr	w10, w8, [x0]
000000000000da58	cbnz	w10, 0xda50
000000000000da5c	cbnz	w8, 0xda7c
000000000000da60	cmp	w9, #0x1
000000000000da64	b.ne	0xda7c
000000000000da68	ldarb	w8, [x27]
000000000000da6c	tbz	w8, #0x0, 0xda7c
000000000000da70	str	w5, [sp, #0x18]
000000000000da74	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000da78	ldr	w5, [sp, #0x18]
000000000000da7c	tbz	w25, #0x0, 0xdac8
000000000000da80	str	w5, [sp, #0x18]
000000000000da84	ldr	x8, [x26, #0x118]
000000000000da88	add	x0, x8, #0x70
000000000000da8c	mov	w1, #0x20
000000000000da90	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000da94	mov	x23, x0
000000000000da98	adr	x8, #0x54fc8
000000000000da9c	nop
000000000000daa0	str	x8, [x23, #0x10]!
000000000000daa4	stur	xzr, [x23, #-0x8]
000000000000daa8	str	x23, [sp, #0x78]
000000000000daac	ldp	x9, x8, [x26, #0x128]
000000000000dab0	cmp	x9, x8
000000000000dab4	b.hs	0xdae0
000000000000dab8	stp	x22, x23, [x9]
000000000000dabc	add	x8, x9, #0x10
000000000000dac0	str	x8, [x26, #0x128]
000000000000dac4	b	0xdb80
000000000000dac8	str	x23, [sp, #0x78]
000000000000dacc	ldr	x25, [sp, #0x28]
000000000000dad0	b	0xdbd8
000000000000dad4	ldur	x23, [x9, #-0x8]
000000000000dad8	str	x23, [sp, #0x78]
000000000000dadc	b	0xdbd8
000000000000dae0	ldr	x10, [sp, #0x20]
000000000000dae4	ldr	x10, [x10]
000000000000dae8	sub	x9, x9, x10
000000000000daec	asr	x9, x9, #4
000000000000daf0	str	x9, [sp, #0x10]
000000000000daf4	add	x9, x9, #0x1
000000000000daf8	lsr	x11, x9, #60
000000000000dafc	cbnz	x11, 0xe2dc
000000000000db00	sub	x8, x8, x10
000000000000db04	asr	x10, x8, #3
000000000000db08	cmp	x10, x9
000000000000db0c	csel	x9, x9, x10, lo
000000000000db10	mov	x10, #0x7ffffffffffffff
000000000000db14	cmp	x10, x8, asr #4
000000000000db18	mov	x8, #0xfffffffffffffff
000000000000db1c	csel	x25, x9, x8, hi
000000000000db20	mov	x0, x25
000000000000db24	mov	w1, #0x10
000000000000db28	bl	0x553d4 ; symbol stub for: _calloc
000000000000db2c	ldr	x8, [sp, #0x10]
000000000000db30	add	x8, x0, x8, lsl #4
000000000000db34	add	x10, x0, x25, lsl #4
000000000000db38	stp	x22, x23, [x8]
000000000000db3c	add	x11, x8, #0x10
000000000000db40	ldp	x1, x9, [x26, #0x120]
000000000000db44	sub	x2, x9, x1
000000000000db48	sub	x25, x8, x2
000000000000db4c	cmp	x2, #0x1
000000000000db50	b.lt	0xdb6c
000000000000db54	mov	x0, x25
000000000000db58	stp	x11, x10, [sp, #0x8]
000000000000db5c	bl	0x554ac ; symbol stub for: _memcpy
000000000000db60	ldp	x11, x10, [sp, #0x8]
000000000000db64	ldr	x8, [sp, #0x20]
000000000000db68	ldr	x1, [x8]
000000000000db6c	stp	x25, x11, [x26, #0x120]
000000000000db70	str	x10, [x26, #0x130]
000000000000db74	cbz	x1, 0xdb80
000000000000db78	mov	x0, x1
000000000000db7c	bl	0x55458 ; symbol stub for: _free
000000000000db80	mov	x0, x23
000000000000db84	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
000000000000db88	ldr	x25, [sp, #0x28]
000000000000db8c	mov	w0, #0x1
000000000000db90	mov	w1, #0x28
000000000000db94	bl	0x553d4 ; symbol stub for: _calloc
000000000000db98	mov	x8, x26
000000000000db9c	ldr	x9, [x8, #0x18]!
000000000000dba0	sub	x10, x8, #0x8
000000000000dba4	stp	x22, x10, [x0, #0x10]
000000000000dba8	stp	x9, x8, [x0]
000000000000dbac	str	x0, [x9, #0x8]
000000000000dbb0	str	x0, [x8]
000000000000dbb4	ldr	x9, [x8, #0x10]
000000000000dbb8	add	x9, x9, #0x1
000000000000dbbc	str	x9, [x8, #0x10]
000000000000dbc0	str	x0, [x0, #0x20]
000000000000dbc4	stlr	x23, [x22]
000000000000dbc8	ldr	x9, [x8, #0x110]
000000000000dbcc	sub	x9, x9, #0x10
000000000000dbd0	str	x9, [x8, #0x110]
000000000000dbd4	ldr	w5, [sp, #0x18]
000000000000dbd8	lsl	x25, x25, x20
000000000000dbdc	add	w8, w21, w5
000000000000dbe0	sub	w8, w8, #0x1
000000000000dbe4	ldr	d0, [x23, #0x8]
000000000000dbe8	scvtf	d1, w8
000000000000dbec	fmul	d0, d0, d1
000000000000dbf0	nop
000000000000dbf4	ldr	d1, 0x57b58
000000000000dbf8	fadd	d0, d0, d1
000000000000dbfc	frintp	d0, d0
000000000000dc00	fcmp	d0, d0
000000000000dc04	b.vs	0xe094
000000000000dc08	mov	x8, #0xffffffc00000
000000000000dc0c	movk	x8, #0x41df, lsl #48
000000000000dc10	fmov	d1, x8
000000000000dc14	fcmp	d0, d1
000000000000dc18	b.ge	0xdc48
000000000000dc1c	mov	x8, #-0x3e20000000000000
000000000000dc20	fmov	d1, x8
000000000000dc24	fcmp	d0, d1
000000000000dc28	b.ls	0xdd34
000000000000dc2c	fcvtzs	w21, d0
000000000000dc30	cmp	w21, #0x1
000000000000dc34	b.lt	0xde34
000000000000dc38	ldar	x20, [x22]
000000000000dc3c	cmp	x20, #0x2
000000000000dc40	b.lo	0xdc58
000000000000dc44	b	0xdf2c
000000000000dc48	mov	w21, #0x7fffffff
000000000000dc4c	ldar	x20, [x22]
000000000000dc50	cmp	x20, #0x2
000000000000dc54	b.hs	0xdf2c
000000000000dc58	ldp	x8, x9, [x26, #0x120]
000000000000dc5c	cmp	x8, x9
000000000000dc60	b.eq	0xdc80
000000000000dc64	mov	x10, x9
000000000000dc68	ldr	x11, [x10, #-0x10]!
000000000000dc6c	cmp	x11, x22
000000000000dc70	b.eq	0xde28
000000000000dc74	mov	x9, x10
000000000000dc78	cmp	x10, x8
000000000000dc7c	b.ne	0xdc68
000000000000dc80	add	x8, x26, #0x120
000000000000dc84	str	x8, [sp, #0x28]
000000000000dc88	add	x0, x26, #0x138
000000000000dc8c	mov	w9, #0x1
000000000000dc90	ldaxr	w8, [x0]
000000000000dc94	stlxr	w10, w9, [x0]
000000000000dc98	cbnz	w10, 0xdc90
000000000000dc9c	b	0xdcac
000000000000dca0	mov	w23, #0x1
000000000000dca4	stlxr	w9, x23, [x22]
000000000000dca8	cbz	w9, 0xdcbc
000000000000dcac	ldaxr	x20, [x22]
000000000000dcb0	cbz	x20, 0xdca0
000000000000dcb4	mov	w23, #0x0
000000000000dcb8	clrex
000000000000dcbc	cmp	x20, #0x1
000000000000dcc0	b.eq	0xdcac
000000000000dcc4	cbz	x26, 0xdcec
000000000000dcc8	ldaxr	w9, [x0]
000000000000dccc	stlxr	w10, w8, [x0]
000000000000dcd0	cbnz	w10, 0xdcc8
000000000000dcd4	cbnz	w8, 0xdcec
000000000000dcd8	cmp	w9, #0x1
000000000000dcdc	b.ne	0xdcec
000000000000dce0	ldarb	w8, [x27]
000000000000dce4	tbz	w8, #0x0, 0xdcec
000000000000dce8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000dcec	tbz	w23, #0x0, 0xde20
000000000000dcf0	ldr	x8, [x26, #0x118]
000000000000dcf4	add	x0, x8, #0x70
000000000000dcf8	mov	w1, #0x20
000000000000dcfc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000dd00	mov	x20, x0
000000000000dd04	adr	x8, #0x54d5c
000000000000dd08	nop
000000000000dd0c	str	x8, [x20, #0x10]!
000000000000dd10	stur	xzr, [x20, #-0x8]
000000000000dd14	str	x20, [sp, #0x80]
000000000000dd18	ldp	x9, x8, [x26, #0x128]
000000000000dd1c	cmp	x9, x8
000000000000dd20	b.hs	0xde3c
000000000000dd24	stp	x22, x20, [x9]
000000000000dd28	add	x8, x9, #0x10
000000000000dd2c	str	x8, [x26, #0x128]
000000000000dd30	b	0xdedc
000000000000dd34	mov	w21, #-0x80000000
000000000000dd38	ldar	x20, [x22]
000000000000dd3c	cmp	x20, #0x2
000000000000dd40	b.hs	0xe05c
000000000000dd44	ldp	x8, x9, [x26, #0x120]
000000000000dd48	cmp	x8, x9
000000000000dd4c	b.eq	0xdd6c
000000000000dd50	mov	x10, x9
000000000000dd54	ldr	x11, [x10, #-0x10]!
000000000000dd58	cmp	x11, x22
000000000000dd5c	b.eq	0xdf60
000000000000dd60	mov	x9, x10
000000000000dd64	cmp	x10, x8
000000000000dd68	b.ne	0xdd54
000000000000dd6c	add	x8, x26, #0x120
000000000000dd70	str	x8, [sp, #0x28]
000000000000dd74	add	x0, x26, #0x138
000000000000dd78	mov	w9, #0x1
000000000000dd7c	ldaxr	w8, [x0]
000000000000dd80	stlxr	w10, w9, [x0]
000000000000dd84	cbnz	w10, 0xdd7c
000000000000dd88	b	0xdd98
000000000000dd8c	mov	w23, #0x1
000000000000dd90	stlxr	w9, x23, [x22]
000000000000dd94	cbz	w9, 0xdda8
000000000000dd98	ldaxr	x20, [x22]
000000000000dd9c	cbz	x20, 0xdd8c
000000000000dda0	mov	w23, #0x0
000000000000dda4	clrex
000000000000dda8	cmp	x20, #0x1
000000000000ddac	b.eq	0xdd98
000000000000ddb0	cbz	x26, 0xddd8
000000000000ddb4	ldaxr	w9, [x0]
000000000000ddb8	stlxr	w10, w8, [x0]
000000000000ddbc	cbnz	w10, 0xddb4
000000000000ddc0	cbnz	w8, 0xddd8
000000000000ddc4	cmp	w9, #0x1
000000000000ddc8	b.ne	0xddd8
000000000000ddcc	ldarb	w8, [x27]
000000000000ddd0	tbz	w8, #0x0, 0xddd8
000000000000ddd4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000ddd8	tbz	w23, #0x0, 0xdf58
000000000000dddc	ldr	x8, [x26, #0x118]
000000000000dde0	add	x0, x8, #0x70
000000000000dde4	mov	w1, #0x20
000000000000dde8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ddec	mov	x20, x0
000000000000ddf0	adr	x8, #0x54c70
000000000000ddf4	nop
000000000000ddf8	str	x8, [x20, #0x10]!
000000000000ddfc	stur	xzr, [x20, #-0x8]
000000000000de00	str	x20, [sp, #0x88]
000000000000de04	ldp	x9, x8, [x26, #0x128]
000000000000de08	cmp	x9, x8
000000000000de0c	b.hs	0xdf6c
000000000000de10	stp	x22, x20, [x9]
000000000000de14	add	x8, x9, #0x10
000000000000de18	str	x8, [x26, #0x128]
000000000000de1c	b	0xe00c
000000000000de20	str	x20, [sp, #0x80]
000000000000de24	b	0xdf2c
000000000000de28	ldur	x20, [x9, #-0x8]
000000000000de2c	str	x20, [sp, #0x80]
000000000000de30	b	0xdf2c
000000000000de34	tbz	w21, #0x1f, 0xe080
000000000000de38	b	0xdd38
000000000000de3c	ldr	x10, [sp, #0x28]
000000000000de40	ldr	x10, [x10]
000000000000de44	sub	x9, x9, x10
000000000000de48	asr	x9, x9, #4
000000000000de4c	str	x9, [sp, #0x20]
000000000000de50	add	x9, x9, #0x1
000000000000de54	lsr	x11, x9, #60
000000000000de58	cbnz	x11, 0xe2e4
000000000000de5c	sub	x8, x8, x10
000000000000de60	asr	x10, x8, #3
000000000000de64	cmp	x10, x9
000000000000de68	csel	x9, x9, x10, lo
000000000000de6c	mov	x10, #0x7ffffffffffffff
000000000000de70	cmp	x10, x8, asr #4
000000000000de74	mov	x8, #0xfffffffffffffff
000000000000de78	csel	x23, x9, x8, hi
000000000000de7c	mov	x0, x23
000000000000de80	mov	w1, #0x10
000000000000de84	bl	0x553d4 ; symbol stub for: _calloc
000000000000de88	ldr	x8, [sp, #0x20]
000000000000de8c	add	x8, x0, x8, lsl #4
000000000000de90	add	x10, x0, x23, lsl #4
000000000000de94	stp	x22, x20, [x8]
000000000000de98	add	x11, x8, #0x10
000000000000de9c	ldp	x1, x9, [x26, #0x120]
000000000000dea0	sub	x2, x9, x1
000000000000dea4	sub	x23, x8, x2
000000000000dea8	cmp	x2, #0x1
000000000000deac	b.lt	0xdec8
000000000000deb0	mov	x0, x23
000000000000deb4	stp	x11, x10, [sp, #0x18]
000000000000deb8	bl	0x554ac ; symbol stub for: _memcpy
000000000000debc	ldp	x11, x10, [sp, #0x18]
000000000000dec0	ldr	x8, [sp, #0x28]
000000000000dec4	ldr	x1, [x8]
000000000000dec8	stp	x23, x11, [x26, #0x120]
000000000000decc	str	x10, [x26, #0x130]
000000000000ded0	cbz	x1, 0xdedc
000000000000ded4	mov	x0, x1
000000000000ded8	bl	0x55458 ; symbol stub for: _free
000000000000dedc	mov	x0, x20
000000000000dee0	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
000000000000dee4	mov	w0, #0x1
000000000000dee8	mov	w1, #0x28
000000000000deec	bl	0x553d4 ; symbol stub for: _calloc
000000000000def0	mov	x8, x26
000000000000def4	ldr	x9, [x8, #0x18]!
000000000000def8	sub	x10, x8, #0x8
000000000000defc	stp	x22, x10, [x0, #0x10]
000000000000df00	stp	x9, x8, [x0]
000000000000df04	str	x0, [x9, #0x8]
000000000000df08	str	x0, [x8]
000000000000df0c	ldr	x9, [x8, #0x10]
000000000000df10	add	x9, x9, #0x1
000000000000df14	str	x9, [x8, #0x10]
000000000000df18	str	x0, [x0, #0x20]
000000000000df1c	stlr	x20, [x22]
000000000000df20	ldr	x9, [x8, #0x110]
000000000000df24	sub	x9, x9, #0x10
000000000000df28	str	x9, [x8, #0x110]
000000000000df2c	ldr	x8, [x20, #0x10]
000000000000df30	ldr	w9, [x8, #0x8]
000000000000df34	cmp	w9, w21
000000000000df38	b.ls	0xe2d8
000000000000df3c	add	x8, x8, w21, sxtw #3
000000000000df40	ldr	x8, [x8, #0x10]
000000000000df44	mul	x28, x28, x8
000000000000df48	add	x8, x25, x24
000000000000df4c	cmp	x8, x28
000000000000df50	b.gt	0xe08c
000000000000df54	b	0xe0a4
000000000000df58	str	x20, [sp, #0x88]
000000000000df5c	b	0xe05c
000000000000df60	ldur	x20, [x9, #-0x8]
000000000000df64	str	x20, [sp, #0x88]
000000000000df68	b	0xe05c
000000000000df6c	ldr	x10, [sp, #0x28]
000000000000df70	ldr	x10, [x10]
000000000000df74	sub	x9, x9, x10
000000000000df78	asr	x9, x9, #4
000000000000df7c	str	x9, [sp, #0x20]
000000000000df80	add	x9, x9, #0x1
000000000000df84	lsr	x11, x9, #60
000000000000df88	cbnz	x11, 0xe2e4
000000000000df8c	sub	x8, x8, x10
000000000000df90	asr	x10, x8, #3
000000000000df94	cmp	x10, x9
000000000000df98	csel	x9, x9, x10, lo
000000000000df9c	mov	x10, #0x7ffffffffffffff
000000000000dfa0	cmp	x10, x8, asr #4
000000000000dfa4	mov	x8, #0xfffffffffffffff
000000000000dfa8	csel	x23, x9, x8, hi
000000000000dfac	mov	x0, x23
000000000000dfb0	mov	w1, #0x10
000000000000dfb4	bl	0x553d4 ; symbol stub for: _calloc
000000000000dfb8	ldr	x8, [sp, #0x20]
000000000000dfbc	add	x8, x0, x8, lsl #4
000000000000dfc0	add	x10, x0, x23, lsl #4
000000000000dfc4	stp	x22, x20, [x8]
000000000000dfc8	add	x11, x8, #0x10
000000000000dfcc	ldp	x1, x9, [x26, #0x120]
000000000000dfd0	sub	x2, x9, x1
000000000000dfd4	sub	x23, x8, x2
000000000000dfd8	cmp	x2, #0x1
000000000000dfdc	b.lt	0xdff8
000000000000dfe0	mov	x0, x23
000000000000dfe4	stp	x11, x10, [sp, #0x18]
000000000000dfe8	bl	0x554ac ; symbol stub for: _memcpy
000000000000dfec	ldp	x11, x10, [sp, #0x18]
000000000000dff0	ldr	x8, [sp, #0x28]
000000000000dff4	ldr	x1, [x8]
000000000000dff8	stp	x23, x11, [x26, #0x120]
000000000000dffc	str	x10, [x26, #0x130]
000000000000e000	cbz	x1, 0xe00c
000000000000e004	mov	x0, x1
000000000000e008	bl	0x55458 ; symbol stub for: _free
000000000000e00c	mov	x0, x20
000000000000e010	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
000000000000e014	mov	w0, #0x1
000000000000e018	mov	w1, #0x28
000000000000e01c	bl	0x553d4 ; symbol stub for: _calloc
000000000000e020	mov	x8, x26
000000000000e024	ldr	x9, [x8, #0x18]!
000000000000e028	sub	x10, x8, #0x8
000000000000e02c	stp	x22, x10, [x0, #0x10]
000000000000e030	stp	x9, x8, [x0]
000000000000e034	str	x0, [x9, #0x8]
000000000000e038	str	x0, [x8]
000000000000e03c	ldr	x9, [x8, #0x10]
000000000000e040	add	x9, x9, #0x1
000000000000e044	str	x9, [x8, #0x10]
000000000000e048	str	x0, [x0, #0x20]
000000000000e04c	stlr	x20, [x22]
000000000000e050	ldr	x9, [x8, #0x110]
000000000000e054	sub	x9, x9, #0x10
000000000000e058	str	x9, [x8, #0x110]
000000000000e05c	ldr	x8, [x20, #0x10]
000000000000e060	neg	w9, w21
000000000000e064	ldr	w10, [x8, #0x8]
000000000000e068	cmp	w10, w9
000000000000e06c	b.ls	0xe2d8
000000000000e070	add	x8, x8, w9, sxtw #3
000000000000e074	ldr	x8, [x8, #0x10]
000000000000e078	mul	x25, x25, x8
000000000000e07c	mul	x24, x24, x8
000000000000e080	add	x8, x25, x24
000000000000e084	cmp	x8, x28
000000000000e088	b.le	0xe0a4
000000000000e08c	str	w21, [x19, #0x18]
000000000000e090	b	0xe0bc
000000000000e094	mov	w21, #0x0
000000000000e098	add	x8, x25, x24
000000000000e09c	cmp	x8, x28
000000000000e0a0	b.gt	0xe08c
000000000000e0a4	sub	w8, w21, #0x1
000000000000e0a8	str	w8, [x19, #0x18]
000000000000e0ac	add	x8, x25, x25, lsl #2
000000000000e0b0	lsl	x25, x8, #1
000000000000e0b4	add	x8, x24, x24, lsl #2
000000000000e0b8	lsl	x24, x8, #1
000000000000e0bc	str	xzr, [x19, #0x10]
000000000000e0c0	lsl	x8, x28, #1
000000000000e0c4	lsl	x9, x28, #2
000000000000e0c8	lsl	x10, x28, #3
000000000000e0cc	add	x11, sp, #0x30
000000000000e0d0	stp	x11, x11, [sp, #0x90]
000000000000e0d4	stp	x11, x11, [sp, #0xa0]
000000000000e0d8	ldr	x12, [sp, #0x30]
000000000000e0dc	stp	x28, x8, [sp, #0x40]
000000000000e0e0	ldr	x12, [sp, #0x30]
000000000000e0e4	stp	x11, x11, [sp, #0xb0]
000000000000e0e8	ldr	x8, [sp, #0x30]
000000000000e0ec	stp	x9, x10, [sp, #0x50]
000000000000e0f0	ldr	x8, [sp, #0x30]
000000000000e0f4	str	x11, [sp, #0xc0]
000000000000e0f8	ldarb	w8, [x27]
000000000000e0fc	tbnz	w8, #0x0, 0xe118
000000000000e100	ldarb	w8, [x27]
000000000000e104	tbnz	w8, #0x0, 0xe124
000000000000e108	ldr	w8, [sp, #0x38]
000000000000e10c	cmp	w8, #0x3
000000000000e110	b.hi	0xe134
000000000000e114	b	0xe2d8
000000000000e118	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e11c	ldarb	w8, [x27]
000000000000e120	tbz	w8, #0x0, 0xe108
000000000000e124	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e128	ldr	w8, [sp, #0x38]
000000000000e12c	cmp	w8, #0x3
000000000000e130	b.ls	0xe2d8
000000000000e134	ldr	x8, [sp, #0x58]
000000000000e138	sub	x21, x25, x8
000000000000e13c	cmp	x21, #0x0
000000000000e140	csel	x20, x21, x25, ge
000000000000e144	ldarb	w8, [x27]
000000000000e148	tbz	w8, #0x0, 0xe150
000000000000e14c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e150	ldr	w8, [sp, #0x38]
000000000000e154	cmp	w8, #0x3
000000000000e158	b.lo	0xe2d8
000000000000e15c	lsr	x8, x21, #60
000000000000e160	mvn	w8, w8
000000000000e164	and	w8, w8, #0x8
000000000000e168	ldr	x9, [sp, #0x50]
000000000000e16c	sub	x9, x20, x9
000000000000e170	orr	w10, w8, #0x4
000000000000e174	cmp	x9, #0x0
000000000000e178	csel	w21, w10, w8, ge
000000000000e17c	csel	x20, x9, x20, ge
000000000000e180	ldarb	w8, [x27]
000000000000e184	tbz	w8, #0x0, 0xe18c
000000000000e188	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e18c	ldr	w8, [sp, #0x38]
000000000000e190	cmp	w8, #0x2
000000000000e194	b.lo	0xe2d8
000000000000e198	ldr	x8, [sp, #0x48]
000000000000e19c	sub	x8, x20, x8
000000000000e1a0	orr	w9, w21, #0x2
000000000000e1a4	cmp	x8, #0x0
000000000000e1a8	csel	w21, w9, w21, ge
000000000000e1ac	csel	x20, x8, x20, ge
000000000000e1b0	ldarb	w8, [x27]
000000000000e1b4	tbz	w8, #0x0, 0xe1bc
000000000000e1b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e1bc	ldr	w8, [sp, #0x38]
000000000000e1c0	cbz	w8, 0xe2d8
000000000000e1c4	ldr	x8, [sp, #0x40]
000000000000e1c8	sub	x9, x20, x8
000000000000e1cc	lsr	x8, x9, #63
000000000000e1d0	orr	w8, w21, w8
000000000000e1d4	eor	w8, w8, #0x1
000000000000e1d8	cmp	x9, #0x0
000000000000e1dc	csel	x11, x9, x20, ge
000000000000e1e0	add	x12, x11, x24
000000000000e1e4	cmp	x11, x24
000000000000e1e8	b.lt	0xe23c
000000000000e1ec	ldr	x9, [x19, #0x8]
000000000000e1f0	ldr	w10, [x19, #0x10]
000000000000e1f4	add	w13, w10, #0x1
000000000000e1f8	str	w13, [x19, #0x10]
000000000000e1fc	ldr	w13, [x9, #0x8]
000000000000e200	cmp	x12, x28
000000000000e204	b.gt	0xe26c
000000000000e208	cmp	w13, w10
000000000000e20c	b.ls	0xe2d8
000000000000e210	sxtw	x10, w10
000000000000e214	add	x12, x24, x24, lsl #2
000000000000e218	lsl	x24, x12, #1
000000000000e21c	add	x11, x11, x11, lsl #2
000000000000e220	ldr	xzr, [x9]
000000000000e224	add	x9, x9, x10, lsl #2
000000000000e228	str	w8, [x9, #0x10]
000000000000e22c	lsl	x25, x11, #1
000000000000e230	ldarb	w8, [x27]
000000000000e234	tbnz	w8, #0x0, 0xe118
000000000000e238	b	0xe100
000000000000e23c	cmp	x12, x28
000000000000e240	b.le	0xe278
000000000000e244	ldr	x9, [x19, #0x8]
000000000000e248	ldr	w10, [x19, #0x10]
000000000000e24c	add	w12, w10, #0x1
000000000000e250	str	w12, [x19, #0x10]
000000000000e254	ldr	w12, [x9, #0x8]
000000000000e258	cmp	x28, x11, lsl #1
000000000000e25c	b.le	0xe298
000000000000e260	cmp	w12, w10
000000000000e264	b.hi	0xe2a4
000000000000e268	b	0xe2d8
000000000000e26c	cmp	w13, w10
000000000000e270	b.hi	0xe2a0
000000000000e274	b	0xe2d8
000000000000e278	ldr	x9, [x19, #0x8]
000000000000e27c	ldr	w10, [x19, #0x10]
000000000000e280	add	w11, w10, #0x1
000000000000e284	str	w11, [x19, #0x10]
000000000000e288	ldr	w11, [x9, #0x8]
000000000000e28c	cmp	w11, w10
000000000000e290	b.hi	0xe2a4
000000000000e294	b	0xe2d8
000000000000e298	cmp	w12, w10
000000000000e29c	b.ls	0xe2d8
000000000000e2a0	add	w8, w8, #0x1
000000000000e2a4	ldr	xzr, [x9]
000000000000e2a8	add	x9, x9, w10, sxtw #2
000000000000e2ac	str	w8, [x9, #0x10]
000000000000e2b0	ldr	x8, [sp, #0x68]
000000000000e2b4	str	x8, [x26, #0x110]
000000000000e2b8	ldp	x29, x30, [sp, #0x120]
000000000000e2bc	ldp	x20, x19, [sp, #0x110]
000000000000e2c0	ldp	x22, x21, [sp, #0x100]
000000000000e2c4	ldp	x24, x23, [sp, #0xf0]
000000000000e2c8	ldp	x26, x25, [sp, #0xe0]
000000000000e2cc	ldp	x28, x27, [sp, #0xd0]
000000000000e2d0	add	sp, sp, #0x130
000000000000e2d4	ret
000000000000e2d8	bl	_ThrowArrayIndexOutOfBoundsException
000000000000e2dc	ldr	x0, [sp, #0x20]
000000000000e2e0	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000e2e4	ldr	x0, [sp, #0x28]
000000000000e2e8	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000e2ec	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000000e2f0	str	xzr, [sp, #0x88]
000000000000e2f4	stlr	xzr, [x22]
000000000000e2f8	ldr	x8, [x26, #0x128]
000000000000e2fc	sub	x8, x8, #0x10
000000000000e300	str	x8, [x26, #0x128]
000000000000e304	bl	0x5535c ; symbol stub for: ___cxa_rethrow
000000000000e308	b	0xe350
000000000000e30c	b	0xe354
000000000000e310	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000000e314	str	xzr, [sp, #0x80]
000000000000e318	stlr	xzr, [x22]
000000000000e31c	ldr	x8, [x26, #0x128]
000000000000e320	sub	x8, x8, #0x10
000000000000e324	str	x8, [x26, #0x128]
000000000000e328	bl	0x5535c ; symbol stub for: ___cxa_rethrow
000000000000e32c	b	0xe350
000000000000e330	b	0xe354
000000000000e334	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000000e338	str	xzr, [sp, #0x78]
000000000000e33c	stlr	xzr, [x22]
000000000000e340	ldr	x8, [x26, #0x128]
000000000000e344	sub	x8, x8, #0x10
000000000000e348	str	x8, [x26, #0x128]
000000000000e34c	bl	0x5535c ; symbol stub for: ___cxa_rethrow
000000000000e350	brk	#0x1
000000000000e354	mov	x19, x0
000000000000e358	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000000e35c	mov	x0, x19
000000000000e360	bl	0x55194 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}:
000000000000e364	sub	sp, sp, #0x60
000000000000e368	stp	x24, x23, [sp, #0x20]
000000000000e36c	stp	x22, x21, [sp, #0x30]
000000000000e370	stp	x20, x19, [sp, #0x40]
000000000000e374	stp	x29, x30, [sp, #0x50]
000000000000e378	add	x29, sp, #0x50
000000000000e37c	mov	x19, x0
000000000000e380	movi.16b	v0, #0x0
000000000000e384	stp	q0, q0, [sp]
000000000000e388	adrp	x0, 108 ; 0x7a000
000000000000e38c	add	x0, x0, #0x2c0
000000000000e390	ldr	x8, [x0]
000000000000e394	blr	x8
000000000000e398	ldr	x20, [x0]
000000000000e39c	ldr	x8, [x20, #0x110]
000000000000e3a0	mov	x9, sp
000000000000e3a4	str	x9, [x20, #0x110]
000000000000e3a8	mov	x9, #0x400000000
000000000000e3ac	stp	x8, x9, [sp, #0x8]
000000000000e3b0	adr	x21, #0x85ed9
000000000000e3b4	nop
000000000000e3b8	ldarb	w8, [x21]
000000000000e3bc	tbz	w8, #0x0, 0xe3c4
000000000000e3c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e3c4	mov	x8, #0x79fe
000000000000e3c8	movk	x8, #0x509f, lsl #16
000000000000e3cc	movk	x8, #0x4413, lsl #32
000000000000e3d0	movk	x8, #0x3fd3, lsl #48
000000000000e3d4	str	x8, [x19, #0x8]
000000000000e3d8	ldr	x8, [x20, #0x118]
000000000000e3dc	add	x0, x8, #0x70
000000000000e3e0	mov	w1, #0xb8
000000000000e3e4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000e3e8	str	xzr, [x0, #0x18]
000000000000e3ec	str	xzr, [x0, #0x8]
000000000000e3f0	adr	x8, #0x52a60
000000000000e3f4	nop
000000000000e3f8	mov	x9, x0
000000000000e3fc	str	x8, [x9, #0x10]!
000000000000e400	mov	w8, #0x14
000000000000e404	str	w8, [x0, #0x18]
000000000000e408	str	x9, [sp, #0x18]
000000000000e40c	str	x9, [x19, #0x10]
000000000000e410	cbz	w8, 0xe498
000000000000e414	ldr	xzr, [x0, #0x10]
000000000000e418	mov	w8, #0x1
000000000000e41c	str	x8, [x0, #0x20]
000000000000e420	ldr	x8, [x19, #0x10]
000000000000e424	ldr	w8, [x8, #0x8]
000000000000e428	cmp	w8, #0x2
000000000000e42c	b.lt	0xe478
000000000000e430	mov	x22, #0x0
000000000000e434	sub	x23, x8, #0x1
000000000000e438	ldarb	w8, [x21]
000000000000e43c	tbz	w8, #0x0, 0xe444
000000000000e440	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e444	ldr	x8, [x19, #0x10]
000000000000e448	ldr	w9, [x8, #0x8]
000000000000e44c	cmp	x22, x9
000000000000e450	b.hs	0xe498
000000000000e454	add	x9, x8, x22, lsl #3
000000000000e458	ldr	x10, [x9, #0x10]
000000000000e45c	add	x10, x10, x10, lsl #2
000000000000e460	lsl	x10, x10, #1
000000000000e464	ldr	xzr, [x8]
000000000000e468	str	x10, [x9, #0x18]
000000000000e46c	add	x22, x22, #0x1
000000000000e470	cmp	x23, x22
000000000000e474	b.ne	0xe438
000000000000e478	ldr	x8, [sp, #0x8]
000000000000e47c	str	x8, [x20, #0x110]
000000000000e480	ldp	x29, x30, [sp, #0x50]
000000000000e484	ldp	x20, x19, [sp, #0x40]
000000000000e488	ldp	x22, x21, [sp, #0x30]
000000000000e48c	ldp	x24, x23, [sp, #0x20]
000000000000e490	add	sp, sp, #0x60
000000000000e494	ret
000000000000e498	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.native.internal.NumberConverter.Companion.<get-converter>#internal:
000000000000e49c	sub	sp, sp, #0x50
000000000000e4a0	stp	x22, x21, [sp, #0x20]
000000000000e4a4	stp	x20, x19, [sp, #0x30]
000000000000e4a8	stp	x29, x30, [sp, #0x40]
000000000000e4ac	add	x29, sp, #0x40
000000000000e4b0	mov	x19, x0
000000000000e4b4	adr	x8, #0x85dd5
000000000000e4b8	nop
000000000000e4bc	ldarb	w8, [x8]
000000000000e4c0	tbz	w8, #0x0, 0xe4c8
000000000000e4c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e4c8	adrp	x0, 108 ; 0x7a000
000000000000e4cc	add	x0, x0, #0x2c0
000000000000e4d0	ldr	x8, [x0]
000000000000e4d4	blr	x8
000000000000e4d8	mov	x20, x0
000000000000e4dc	ldr	x8, [x0]
000000000000e4e0	ldr	x8, [x8, #0x118]
000000000000e4e4	add	x0, x8, #0x70
000000000000e4e8	mov	w1, #0x28
000000000000e4ec	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000e4f0	mov	x21, x0
000000000000e4f4	adr	x8, #0x544dc
000000000000e4f8	nop
000000000000e4fc	str	x8, [x21, #0x10]!
000000000000e500	stur	xzr, [x21, #-0x8]
000000000000e504	str	x21, [x19]
000000000000e508	ldr	x8, [x20]
000000000000e50c	mov	x9, sp
000000000000e510	ldp	x10, x11, [x8, #0x110]
000000000000e514	str	x9, [x8, #0x110]
000000000000e518	movi.16b	v0, #0x0
000000000000e51c	stp	q0, q0, [sp]
000000000000e520	mov	x8, #0x400000000
000000000000e524	stp	x10, x8, [sp, #0x8]
000000000000e528	add	x0, x11, #0x70
000000000000e52c	mov	w1, #0x118
000000000000e530	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000e534	str	xzr, [x0, #0x10]!
000000000000e538	adr	x8, #0x52888
000000000000e53c	nop
000000000000e540	stp	xzr, x8, [x0, #-0x8]
000000000000e544	str	xzr, [x0, #0x8]
000000000000e548	mov	w8, #0x40
000000000000e54c	str	w8, [x0, #0x8]
000000000000e550	str	x0, [sp, #0x18]
000000000000e554	str	x0, [x21, #0x8]
000000000000e558	ldr	x8, [x20]
000000000000e55c	ldr	x9, [sp, #0x8]
000000000000e560	str	x9, [x8, #0x110]
000000000000e564	str	x21, [x19]
000000000000e568	mov	x0, x21
000000000000e56c	ldp	x29, x30, [sp, #0x40]
000000000000e570	ldp	x20, x19, [sp, #0x30]
000000000000e574	ldp	x22, x21, [sp, #0x20]
000000000000e578	add	sp, sp, #0x50
000000000000e57c	ret
_Kotlin_Collection_getSize:
000000000000e580	sub	sp, sp, #0x50
000000000000e584	stp	x22, x21, [sp, #0x20]
000000000000e588	stp	x20, x19, [sp, #0x30]
000000000000e58c	stp	x29, x30, [sp, #0x40]
000000000000e590	add	x29, sp, #0x40
000000000000e594	mov	x20, x0
000000000000e598	str	xzr, [sp, #0x8]
000000000000e59c	adrp	x19, 108 ; 0x7a000
000000000000e5a0	add	x19, x19, #0x2c0
000000000000e5a4	ldr	x21, [x19]
000000000000e5a8	mov	x0, x19
000000000000e5ac	blr	x21
000000000000e5b0	ldr	x8, [x0]
000000000000e5b4	ldr	x9, [x8, #0x110]
000000000000e5b8	add	x10, sp, #0x8
000000000000e5bc	str	x10, [x8, #0x110]
000000000000e5c0	mov	x8, #0x300000000
000000000000e5c4	stp	x9, x8, [sp, #0x10]
000000000000e5c8	adr	x8, #0x85cc1
000000000000e5cc	nop
000000000000e5d0	ldarb	w8, [x8]
000000000000e5d4	tbz	w8, #0x0, 0xe5dc
000000000000e5d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e5dc	ldr	x8, [x20]
000000000000e5e0	and	x8, x8, #0xfffffffffffffffc
000000000000e5e4	ldr	x8, [x8]
000000000000e5e8	ldr	w9, [x8, #0x3c]
000000000000e5ec	ldr	x8, [x8, #0x40]
000000000000e5f0	tbnz	w9, #0x1f, 0xe600
000000000000e5f4	mov	w10, #0x12
000000000000e5f8	and	x9, x9, x10
000000000000e5fc	b	0xe684
000000000000e600	neg	w10, w9
000000000000e604	mvn	w9, w9
000000000000e608	cmp	w10, #0x9
000000000000e60c	b.ge	0xe644
000000000000e610	cmp	w10, #0x2
000000000000e614	b.lt	0xe678
000000000000e618	mov	x10, #0x0
000000000000e61c	mov	x11, x8
000000000000e620	ldr	w12, [x11]
000000000000e624	cmp	w12, #0x11
000000000000e628	b.gt	0xe680
000000000000e62c	add	x10, x10, #0x1
000000000000e630	add	x11, x11, #0x10
000000000000e634	cmp	x9, x10
000000000000e638	b.ne	0xe620
000000000000e63c	mov	x10, x9
000000000000e640	b	0xe680
000000000000e644	mov	w10, #0x0
000000000000e648	add	w11, w9, w10
000000000000e64c	cmp	w11, #0x0
000000000000e650	cinc	w11, w11, lt
000000000000e654	asr	w11, w11, #1
000000000000e658	sbfiz	x12, x11, #4, #32
000000000000e65c	ldr	w12, [x8, x12]
000000000000e660	cmp	w12, #0x12
000000000000e664	csinc	w10, w10, w11, ge
000000000000e668	csel	w9, w9, w11, lt
000000000000e66c	cmp	w10, w9
000000000000e670	b.lt	0xe648
000000000000e674	b	0xe680
000000000000e678	mov	w10, #0x0
000000000000e67c	b	0xe680
000000000000e680	sxtw	x9, w10
000000000000e684	add	x8, x8, x9, lsl #4
000000000000e688	ldr	x8, [x8, #0x8]
000000000000e68c	ldr	x8, [x8]
000000000000e690	mov	x0, x20
000000000000e694	blr	x8
000000000000e698	mov	x1, x0
000000000000e69c	mov	x0, x19
000000000000e6a0	blr	x21
000000000000e6a4	ldr	x8, [x0]
000000000000e6a8	ldr	x9, [sp, #0x10]
000000000000e6ac	str	x9, [x8, #0x110]
000000000000e6b0	mov	x0, x1
000000000000e6b4	ldp	x29, x30, [sp, #0x40]
000000000000e6b8	ldp	x20, x19, [sp, #0x30]
000000000000e6bc	ldp	x22, x21, [sp, #0x20]
000000000000e6c0	add	sp, sp, #0x50
000000000000e6c4	ret
000000000000e6c8	mov	x1, x0
000000000000e6cc	mov	x0, x19
000000000000e6d0	blr	x21
000000000000e6d4	ldr	x8, [x0]
000000000000e6d8	ldr	x9, [sp, #0x10]
000000000000e6dc	str	x9, [x8, #0x110]
000000000000e6e0	mov	x0, x1
000000000000e6e4	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_List_get:
000000000000e6e8	sub	sp, sp, #0x60
000000000000e6ec	stp	x24, x23, [sp, #0x20]
000000000000e6f0	stp	x22, x21, [sp, #0x30]
000000000000e6f4	stp	x20, x19, [sp, #0x40]
000000000000e6f8	stp	x29, x30, [sp, #0x50]
000000000000e6fc	add	x29, sp, #0x50
000000000000e700	mov	x19, x2
000000000000e704	mov	x21, x1
000000000000e708	mov	x22, x0
000000000000e70c	str	xzr, [sp, #0x8]
000000000000e710	adrp	x20, 108 ; 0x7a000
000000000000e714	add	x20, x20, #0x2c0
000000000000e718	ldr	x23, [x20]
000000000000e71c	mov	x0, x20
000000000000e720	blr	x23
000000000000e724	ldr	x8, [x0]
000000000000e728	ldr	x9, [x8, #0x110]
000000000000e72c	add	x10, sp, #0x8
000000000000e730	str	x10, [x8, #0x110]
000000000000e734	mov	x8, #0x300000000
000000000000e738	stp	x9, x8, [sp, #0x10]
000000000000e73c	adr	x8, #0x85b4d
000000000000e740	nop
000000000000e744	ldarb	w8, [x8]
000000000000e748	tbz	w8, #0x0, 0xe750
000000000000e74c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e750	ldr	x8, [x22]
000000000000e754	and	x8, x8, #0xfffffffffffffffc
000000000000e758	ldr	x8, [x8]
000000000000e75c	ldr	w9, [x8, #0x3c]
000000000000e760	ldr	x8, [x8, #0x40]
000000000000e764	tbnz	w9, #0x1f, 0xe774
000000000000e768	mov	w10, #0x2b
000000000000e76c	and	x9, x9, x10
000000000000e770	b	0xe7f8
000000000000e774	neg	w10, w9
000000000000e778	mvn	w9, w9
000000000000e77c	cmp	w10, #0x9
000000000000e780	b.ge	0xe7b8
000000000000e784	cmp	w10, #0x2
000000000000e788	b.lt	0xe7ec
000000000000e78c	mov	x10, #0x0
000000000000e790	mov	x11, x8
000000000000e794	ldr	w12, [x11]
000000000000e798	cmp	w12, #0x2a
000000000000e79c	b.gt	0xe7f4
000000000000e7a0	add	x10, x10, #0x1
000000000000e7a4	add	x11, x11, #0x10
000000000000e7a8	cmp	x9, x10
000000000000e7ac	b.ne	0xe794
000000000000e7b0	mov	x10, x9
000000000000e7b4	b	0xe7f4
000000000000e7b8	mov	w10, #0x0
000000000000e7bc	add	w11, w9, w10
000000000000e7c0	cmp	w11, #0x0
000000000000e7c4	cinc	w11, w11, lt
000000000000e7c8	asr	w11, w11, #1
000000000000e7cc	sbfiz	x12, x11, #4, #32
000000000000e7d0	ldr	w12, [x8, x12]
000000000000e7d4	cmp	w12, #0x2b
000000000000e7d8	csinc	w10, w10, w11, ge
000000000000e7dc	csel	w9, w9, w11, lt
000000000000e7e0	cmp	w10, w9
000000000000e7e4	b.lt	0xe7bc
000000000000e7e8	b	0xe7f4
000000000000e7ec	mov	w10, #0x0
000000000000e7f0	b	0xe7f4
000000000000e7f4	sxtw	x9, w10
000000000000e7f8	add	x8, x8, x9, lsl #4
000000000000e7fc	ldr	x8, [x8, #0x8]
000000000000e800	ldr	x8, [x8, #0x18]
000000000000e804	mov	x0, x22
000000000000e808	mov	x1, x21
000000000000e80c	mov	x2, x19
000000000000e810	blr	x8
000000000000e814	mov	x8, x0
000000000000e818	str	x0, [x19]
000000000000e81c	mov	x0, x20
000000000000e820	blr	x23
000000000000e824	ldr	x9, [x0]
000000000000e828	ldr	x10, [sp, #0x10]
000000000000e82c	str	x10, [x9, #0x110]
000000000000e830	mov	x0, x8
000000000000e834	ldp	x29, x30, [sp, #0x50]
000000000000e838	ldp	x20, x19, [sp, #0x40]
000000000000e83c	ldp	x22, x21, [sp, #0x30]
000000000000e840	ldp	x24, x23, [sp, #0x20]
000000000000e844	add	sp, sp, #0x60
000000000000e848	ret
000000000000e84c	mov	x1, x0
000000000000e850	mov	x0, x20
000000000000e854	blr	x23
000000000000e858	ldr	x8, [x0]
000000000000e85c	ldr	x9, [sp, #0x10]
000000000000e860	str	x9, [x8, #0x110]
000000000000e864	mov	x0, x1
000000000000e868	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_MutableCollection_addObject:
000000000000e86c	sub	sp, sp, #0x50
000000000000e870	stp	x22, x21, [sp, #0x20]
000000000000e874	stp	x20, x19, [sp, #0x30]
000000000000e878	stp	x29, x30, [sp, #0x40]
000000000000e87c	add	x29, sp, #0x40
000000000000e880	mov	x20, x1
000000000000e884	mov	x21, x0
000000000000e888	str	xzr, [sp, #0x8]
000000000000e88c	adrp	x19, 108 ; 0x7a000
000000000000e890	add	x19, x19, #0x2c0
000000000000e894	ldr	x22, [x19]
000000000000e898	mov	x0, x19
000000000000e89c	blr	x22
000000000000e8a0	ldr	x8, [x0]
000000000000e8a4	ldr	x9, [x8, #0x110]
000000000000e8a8	add	x10, sp, #0x8
000000000000e8ac	str	x10, [x8, #0x110]
000000000000e8b0	mov	x8, #0x300000000
000000000000e8b4	stp	x9, x8, [sp, #0x10]
000000000000e8b8	adr	x8, #0x859d1
000000000000e8bc	nop
000000000000e8c0	ldarb	w8, [x8]
000000000000e8c4	tbz	w8, #0x0, 0xe8cc
000000000000e8c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e8cc	ldr	x8, [x21]
000000000000e8d0	and	x8, x8, #0xfffffffffffffffc
000000000000e8d4	ldr	x8, [x8]
000000000000e8d8	ldr	w9, [x8, #0x3c]
000000000000e8dc	ldr	x8, [x8, #0x40]
000000000000e8e0	tbnz	w9, #0x1f, 0xe8f0
000000000000e8e4	mov	w10, #0x15
000000000000e8e8	and	x9, x9, x10
000000000000e8ec	b	0xe974
000000000000e8f0	neg	w10, w9
000000000000e8f4	mvn	w9, w9
000000000000e8f8	cmp	w10, #0x9
000000000000e8fc	b.ge	0xe934
000000000000e900	cmp	w10, #0x2
000000000000e904	b.lt	0xe968
000000000000e908	mov	x10, #0x0
000000000000e90c	mov	x11, x8
000000000000e910	ldr	w12, [x11]
000000000000e914	cmp	w12, #0x14
000000000000e918	b.gt	0xe970
000000000000e91c	add	x10, x10, #0x1
000000000000e920	add	x11, x11, #0x10
000000000000e924	cmp	x9, x10
000000000000e928	b.ne	0xe910
000000000000e92c	mov	x10, x9
000000000000e930	b	0xe970
000000000000e934	mov	w10, #0x0
000000000000e938	add	w11, w9, w10
000000000000e93c	cmp	w11, #0x0
000000000000e940	cinc	w11, w11, lt
000000000000e944	asr	w11, w11, #1
000000000000e948	sbfiz	x12, x11, #4, #32
000000000000e94c	ldr	w12, [x8, x12]
000000000000e950	cmp	w12, #0x15
000000000000e954	csinc	w10, w10, w11, ge
000000000000e958	csel	w9, w9, w11, lt
000000000000e95c	cmp	w10, w9
000000000000e960	b.lt	0xe938
000000000000e964	b	0xe970
000000000000e968	mov	w10, #0x0
000000000000e96c	b	0xe970
000000000000e970	sxtw	x9, w10
000000000000e974	add	x8, x8, x9, lsl #4
000000000000e978	ldr	x8, [x8, #0x8]
000000000000e97c	ldr	x8, [x8]
000000000000e980	mov	x0, x21
000000000000e984	mov	x1, x20
000000000000e988	blr	x8
000000000000e98c	mov	x0, x19
000000000000e990	blr	x22
000000000000e994	ldr	x8, [x0]
000000000000e998	ldr	x9, [sp, #0x10]
000000000000e99c	str	x9, [x8, #0x110]
000000000000e9a0	ldp	x29, x30, [sp, #0x40]
000000000000e9a4	ldp	x20, x19, [sp, #0x30]
000000000000e9a8	ldp	x22, x21, [sp, #0x20]
000000000000e9ac	add	sp, sp, #0x50
000000000000e9b0	ret
000000000000e9b4	mov	x1, x0
000000000000e9b8	mov	x0, x19
000000000000e9bc	blr	x22
000000000000e9c0	ldr	x8, [x0]
000000000000e9c4	ldr	x9, [sp, #0x10]
000000000000e9c8	str	x9, [x8, #0x110]
000000000000e9cc	mov	x0, x1
000000000000e9d0	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_Set_contains:
000000000000e9d4	sub	sp, sp, #0x50
000000000000e9d8	stp	x22, x21, [sp, #0x20]
000000000000e9dc	stp	x20, x19, [sp, #0x30]
000000000000e9e0	stp	x29, x30, [sp, #0x40]
000000000000e9e4	add	x29, sp, #0x40
000000000000e9e8	mov	x20, x1
000000000000e9ec	mov	x21, x0
000000000000e9f0	str	xzr, [sp, #0x8]
000000000000e9f4	adrp	x19, 108 ; 0x7a000
000000000000e9f8	add	x19, x19, #0x2c0
000000000000e9fc	ldr	x22, [x19]
000000000000ea00	mov	x0, x19
000000000000ea04	blr	x22
000000000000ea08	ldr	x8, [x0]
000000000000ea0c	ldr	x9, [x8, #0x110]
000000000000ea10	add	x10, sp, #0x8
000000000000ea14	str	x10, [x8, #0x110]
000000000000ea18	mov	x8, #0x300000000
000000000000ea1c	stp	x9, x8, [sp, #0x10]
000000000000ea20	adr	x8, #0x85869
000000000000ea24	nop
000000000000ea28	ldarb	w8, [x8]
000000000000ea2c	tbz	w8, #0x0, 0xea34
000000000000ea30	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ea34	ldr	x8, [x21]
000000000000ea38	and	x8, x8, #0xfffffffffffffffc
000000000000ea3c	ldr	x8, [x8]
000000000000ea40	ldr	w9, [x8, #0x3c]
000000000000ea44	ldr	x8, [x8, #0x40]
000000000000ea48	tbnz	w9, #0x1f, 0xea54
000000000000ea4c	and	x9, x9, #0x1e
000000000000ea50	b	0xead8
000000000000ea54	neg	w10, w9
000000000000ea58	mvn	w9, w9
000000000000ea5c	cmp	w10, #0x9
000000000000ea60	b.ge	0xea98
000000000000ea64	cmp	w10, #0x2
000000000000ea68	b.lt	0xeacc
000000000000ea6c	mov	x10, #0x0
000000000000ea70	mov	x11, x8
000000000000ea74	ldr	w12, [x11]
000000000000ea78	cmp	w12, #0x1d
000000000000ea7c	b.gt	0xead4
000000000000ea80	add	x10, x10, #0x1
000000000000ea84	add	x11, x11, #0x10
000000000000ea88	cmp	x9, x10
000000000000ea8c	b.ne	0xea74
000000000000ea90	mov	x10, x9
000000000000ea94	b	0xead4
000000000000ea98	mov	w10, #0x0
000000000000ea9c	add	w11, w9, w10
000000000000eaa0	cmp	w11, #0x0
000000000000eaa4	cinc	w11, w11, lt
000000000000eaa8	asr	w11, w11, #1
000000000000eaac	sbfiz	x12, x11, #4, #32
000000000000eab0	ldr	w12, [x8, x12]
000000000000eab4	cmp	w12, #0x1e
000000000000eab8	csinc	w10, w10, w11, ge
000000000000eabc	csel	w9, w9, w11, lt
000000000000eac0	cmp	w10, w9
000000000000eac4	b.lt	0xea9c
000000000000eac8	b	0xead4
000000000000eacc	mov	w10, #0x0
000000000000ead0	b	0xead4
000000000000ead4	sxtw	x9, w10
000000000000ead8	add	x8, x8, x9, lsl #4
000000000000eadc	ldr	x8, [x8, #0x8]
000000000000eae0	ldr	x8, [x8, #0x8]
000000000000eae4	mov	x0, x21
000000000000eae8	mov	x1, x20
000000000000eaec	blr	x8
000000000000eaf0	mov	x1, x0
000000000000eaf4	mov	x0, x19
000000000000eaf8	blr	x22
000000000000eafc	ldr	x8, [x0]
000000000000eb00	ldr	x9, [sp, #0x10]
000000000000eb04	str	x9, [x8, #0x110]
000000000000eb08	mov	x0, x1
000000000000eb0c	ldp	x29, x30, [sp, #0x40]
000000000000eb10	ldp	x20, x19, [sp, #0x30]
000000000000eb14	ldp	x22, x21, [sp, #0x20]
000000000000eb18	add	sp, sp, #0x50
000000000000eb1c	ret
000000000000eb20	mov	x1, x0
000000000000eb24	mov	x0, x19
000000000000eb28	blr	x22
000000000000eb2c	ldr	x8, [x0]
000000000000eb30	ldr	x9, [sp, #0x10]
000000000000eb34	str	x9, [x8, #0x110]
000000000000eb38	mov	x0, x1
000000000000eb3c	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_Set_iterator:
000000000000eb40	sub	sp, sp, #0x50
000000000000eb44	stp	x22, x21, [sp, #0x20]
000000000000eb48	stp	x20, x19, [sp, #0x30]
000000000000eb4c	stp	x29, x30, [sp, #0x40]
000000000000eb50	add	x29, sp, #0x40
000000000000eb54	mov	x20, x1
000000000000eb58	mov	x21, x0
000000000000eb5c	str	xzr, [sp, #0x8]
000000000000eb60	adrp	x19, 108 ; 0x7a000
000000000000eb64	add	x19, x19, #0x2c0
000000000000eb68	ldr	x22, [x19]
000000000000eb6c	mov	x0, x19
000000000000eb70	blr	x22
000000000000eb74	ldr	x8, [x0]
000000000000eb78	ldr	x9, [x8, #0x110]
000000000000eb7c	add	x10, sp, #0x8
000000000000eb80	str	x10, [x8, #0x110]
000000000000eb84	mov	x8, #0x300000000
000000000000eb88	stp	x9, x8, [sp, #0x10]
000000000000eb8c	adr	x8, #0x856fd
000000000000eb90	nop
000000000000eb94	ldarb	w8, [x8]
000000000000eb98	tbz	w8, #0x0, 0xeba0
000000000000eb9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000eba0	ldr	x8, [x21]
000000000000eba4	and	x8, x8, #0xfffffffffffffffc
000000000000eba8	ldr	x8, [x8]
000000000000ebac	ldr	w9, [x8, #0x3c]
000000000000ebb0	ldr	x8, [x8, #0x40]
000000000000ebb4	tbnz	w9, #0x1f, 0xebc0
000000000000ebb8	and	x9, x9, #0x1e
000000000000ebbc	b	0xec44
000000000000ebc0	neg	w10, w9
000000000000ebc4	mvn	w9, w9
000000000000ebc8	cmp	w10, #0x9
000000000000ebcc	b.ge	0xec04
000000000000ebd0	cmp	w10, #0x2
000000000000ebd4	b.lt	0xec38
000000000000ebd8	mov	x10, #0x0
000000000000ebdc	mov	x11, x8
000000000000ebe0	ldr	w12, [x11]
000000000000ebe4	cmp	w12, #0x1d
000000000000ebe8	b.gt	0xec40
000000000000ebec	add	x10, x10, #0x1
000000000000ebf0	add	x11, x11, #0x10
000000000000ebf4	cmp	x9, x10
000000000000ebf8	b.ne	0xebe0
000000000000ebfc	mov	x10, x9
000000000000ec00	b	0xec40
000000000000ec04	mov	w10, #0x0
000000000000ec08	add	w11, w9, w10
000000000000ec0c	cmp	w11, #0x0
000000000000ec10	cinc	w11, w11, lt
000000000000ec14	asr	w11, w11, #1
000000000000ec18	sbfiz	x12, x11, #4, #32
000000000000ec1c	ldr	w12, [x8, x12]
000000000000ec20	cmp	w12, #0x1e
000000000000ec24	csinc	w10, w10, w11, ge
000000000000ec28	csel	w9, w9, w11, lt
000000000000ec2c	cmp	w10, w9
000000000000ec30	b.lt	0xec08
000000000000ec34	b	0xec40
000000000000ec38	mov	w10, #0x0
000000000000ec3c	b	0xec40
000000000000ec40	sxtw	x9, w10
000000000000ec44	add	x8, x8, x9, lsl #4
000000000000ec48	ldr	x8, [x8, #0x8]
000000000000ec4c	ldr	x8, [x8, #0x20]
000000000000ec50	mov	x0, x21
000000000000ec54	mov	x1, x20
000000000000ec58	blr	x8
000000000000ec5c	mov	x8, x0
000000000000ec60	str	x0, [x20]
000000000000ec64	mov	x0, x19
000000000000ec68	blr	x22
000000000000ec6c	ldr	x9, [x0]
000000000000ec70	ldr	x10, [sp, #0x10]
000000000000ec74	str	x10, [x9, #0x110]
000000000000ec78	mov	x0, x8
000000000000ec7c	ldp	x29, x30, [sp, #0x40]
000000000000ec80	ldp	x20, x19, [sp, #0x30]
000000000000ec84	ldp	x22, x21, [sp, #0x20]
000000000000ec88	add	sp, sp, #0x50
000000000000ec8c	ret
000000000000ec90	mov	x1, x0
000000000000ec94	mov	x0, x19
000000000000ec98	blr	x22
000000000000ec9c	ldr	x8, [x0]
000000000000eca0	ldr	x9, [sp, #0x10]
000000000000eca4	str	x9, [x8, #0x110]
000000000000eca8	mov	x0, x1
000000000000ecac	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_MutableSet_createWithCapacity:
000000000000ecb0	sub	sp, sp, #0x90
000000000000ecb4	stp	x26, x25, [sp, #0x40]
000000000000ecb8	stp	x24, x23, [sp, #0x50]
000000000000ecbc	stp	x22, x21, [sp, #0x60]
000000000000ecc0	stp	x20, x19, [sp, #0x70]
000000000000ecc4	stp	x29, x30, [sp, #0x80]
000000000000ecc8	add	x29, sp, #0x80
000000000000eccc	mov	x19, x1
000000000000ecd0	mov	x21, x0
000000000000ecd4	str	xzr, [sp, #0x8]
000000000000ecd8	adrp	x20, 108 ; 0x7a000
000000000000ecdc	add	x20, x20, #0x2c0
000000000000ece0	ldr	x25, [x20]
000000000000ece4	mov	x0, x20
000000000000ece8	blr	x25
000000000000ecec	ldr	x8, [x0]
000000000000ecf0	ldr	x9, [x8, #0x110]
000000000000ecf4	add	x10, sp, #0x8
000000000000ecf8	str	x10, [x8, #0x110]
000000000000ecfc	mov	x8, #0x300000000
000000000000ed00	stp	x9, x8, [sp, #0x10]
000000000000ed04	adr	x8, #0x85585
000000000000ed08	nop
000000000000ed0c	ldarb	w8, [x8]
000000000000ed10	tbz	w8, #0x0, 0xed18
000000000000ed14	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ed18	mov	x0, x20
000000000000ed1c	blr	x25
000000000000ed20	mov	x24, x0
000000000000ed24	ldr	x8, [x0]
000000000000ed28	ldr	x8, [x8, #0x118]
000000000000ed2c	add	x0, x8, #0x70
000000000000ed30	mov	w1, #0x18
000000000000ed34	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ed38	mov	x23, x0
000000000000ed3c	adr	x8, #0x55744
000000000000ed40	nop
000000000000ed44	mov	x22, x0
000000000000ed48	str	x8, [x22, #0x10]!
000000000000ed4c	str	xzr, [x0, #0x8]
000000000000ed50	str	x22, [x19]
000000000000ed54	ldr	x8, [x24]
000000000000ed58	add	x9, sp, #0x20
000000000000ed5c	ldp	x10, x11, [x8, #0x110]
000000000000ed60	str	x9, [x8, #0x110]
000000000000ed64	movi.16b	v0, #0x0
000000000000ed68	stp	q0, q0, [sp, #0x20]
000000000000ed6c	mov	x8, #0x400000000
000000000000ed70	stp	x10, x8, [sp, #0x28]
000000000000ed74	add	x0, x11, #0x70
000000000000ed78	mov	w1, #0x60
000000000000ed7c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ed80	mov	x24, x0
000000000000ed84	adr	x8, #0x5504c
000000000000ed88	nop
000000000000ed8c	str	x8, [x24, #0x10]!
000000000000ed90	stur	xzr, [x24, #-0x8]
000000000000ed94	str	x24, [sp, #0x38]
000000000000ed98	mov	x0, x24
000000000000ed9c	mov	x1, x21
000000000000eda0	bl	"_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}"
000000000000eda4	str	x24, [x23, #0x18]
000000000000eda8	mov	x0, x20
000000000000edac	blr	x25
000000000000edb0	ldr	x8, [x0]
000000000000edb4	ldr	x9, [sp, #0x28]
000000000000edb8	str	x9, [x8, #0x110]
000000000000edbc	str	x22, [x19]
000000000000edc0	ldr	x8, [x0]
000000000000edc4	ldr	x9, [sp, #0x10]
000000000000edc8	str	x9, [x8, #0x110]
000000000000edcc	mov	x0, x22
000000000000edd0	ldp	x29, x30, [sp, #0x80]
000000000000edd4	ldp	x20, x19, [sp, #0x70]
000000000000edd8	ldp	x22, x21, [sp, #0x60]
000000000000eddc	ldp	x24, x23, [sp, #0x50]
000000000000ede0	ldp	x26, x25, [sp, #0x40]
000000000000ede4	add	sp, sp, #0x90
000000000000ede8	ret
000000000000edec	mov	x1, x0
000000000000edf0	mov	x0, x20
000000000000edf4	blr	x25
000000000000edf8	ldr	x8, [x0]
000000000000edfc	ldr	x9, [sp, #0x10]
000000000000ee00	str	x9, [x8, #0x110]
000000000000ee04	mov	x0, x1
000000000000ee08	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_Map_getSize:
000000000000ee0c	sub	sp, sp, #0x50
000000000000ee10	stp	x22, x21, [sp, #0x20]
000000000000ee14	stp	x20, x19, [sp, #0x30]
000000000000ee18	stp	x29, x30, [sp, #0x40]
000000000000ee1c	add	x29, sp, #0x40
000000000000ee20	mov	x20, x0
000000000000ee24	str	xzr, [sp, #0x8]
000000000000ee28	adrp	x19, 108 ; 0x7a000
000000000000ee2c	add	x19, x19, #0x2c0
000000000000ee30	ldr	x21, [x19]
000000000000ee34	mov	x0, x19
000000000000ee38	blr	x21
000000000000ee3c	ldr	x8, [x0]
000000000000ee40	ldr	x9, [x8, #0x110]
000000000000ee44	add	x10, sp, #0x8
000000000000ee48	str	x10, [x8, #0x110]
000000000000ee4c	mov	x8, #0x300000000
000000000000ee50	stp	x9, x8, [sp, #0x10]
000000000000ee54	adr	x8, #0x85435
000000000000ee58	nop
000000000000ee5c	ldarb	w8, [x8]
000000000000ee60	tbz	w8, #0x0, 0xee68
000000000000ee64	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ee68	ldr	x8, [x20]
000000000000ee6c	and	x8, x8, #0xfffffffffffffffc
000000000000ee70	ldr	x8, [x8]
000000000000ee74	ldr	w9, [x8, #0x3c]
000000000000ee78	ldr	x8, [x8, #0x40]
000000000000ee7c	tbnz	w9, #0x1f, 0xee8c
000000000000ee80	mov	w10, #0x41
000000000000ee84	and	x9, x9, x10
000000000000ee88	b	0xef10
000000000000ee8c	neg	w10, w9
000000000000ee90	mvn	w9, w9
000000000000ee94	cmp	w10, #0x9
000000000000ee98	b.ge	0xeed0
000000000000ee9c	cmp	w10, #0x2
000000000000eea0	b.lt	0xef04
000000000000eea4	mov	x10, #0x0
000000000000eea8	mov	x11, x8
000000000000eeac	ldr	w12, [x11]
000000000000eeb0	cmp	w12, #0x40
000000000000eeb4	b.gt	0xef0c
000000000000eeb8	add	x10, x10, #0x1
000000000000eebc	add	x11, x11, #0x10
000000000000eec0	cmp	x9, x10
000000000000eec4	b.ne	0xeeac
000000000000eec8	mov	x10, x9
000000000000eecc	b	0xef0c
000000000000eed0	mov	w10, #0x0
000000000000eed4	add	w11, w9, w10
000000000000eed8	cmp	w11, #0x0
000000000000eedc	cinc	w11, w11, lt
000000000000eee0	asr	w11, w11, #1
000000000000eee4	sbfiz	x12, x11, #4, #32
000000000000eee8	ldr	w12, [x8, x12]
000000000000eeec	cmp	w12, #0x41
000000000000eef0	csinc	w10, w10, w11, ge
000000000000eef4	csel	w9, w9, w11, lt
000000000000eef8	cmp	w10, w9
000000000000eefc	b.lt	0xeed4
000000000000ef00	b	0xef0c
000000000000ef04	mov	w10, #0x0
000000000000ef08	b	0xef0c
000000000000ef0c	sxtw	x9, w10
000000000000ef10	add	x8, x8, x9, lsl #4
000000000000ef14	ldr	x8, [x8, #0x8]
000000000000ef18	ldr	x8, [x8, #0x10]
000000000000ef1c	mov	x0, x20
000000000000ef20	blr	x8
000000000000ef24	mov	x1, x0
000000000000ef28	mov	x0, x19
000000000000ef2c	blr	x21
000000000000ef30	ldr	x8, [x0]
000000000000ef34	ldr	x9, [sp, #0x10]
000000000000ef38	str	x9, [x8, #0x110]
000000000000ef3c	mov	x0, x1
000000000000ef40	ldp	x29, x30, [sp, #0x40]
000000000000ef44	ldp	x20, x19, [sp, #0x30]
000000000000ef48	ldp	x22, x21, [sp, #0x20]
000000000000ef4c	add	sp, sp, #0x50
000000000000ef50	ret
000000000000ef54	mov	x1, x0
000000000000ef58	mov	x0, x19
000000000000ef5c	blr	x21
000000000000ef60	ldr	x8, [x0]
000000000000ef64	ldr	x9, [sp, #0x10]
000000000000ef68	str	x9, [x8, #0x110]
000000000000ef6c	mov	x0, x1
000000000000ef70	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_Map_keyIterator:
000000000000ef74	sub	sp, sp, #0x60
000000000000ef78	stp	x24, x23, [sp, #0x20]
000000000000ef7c	stp	x22, x21, [sp, #0x30]
000000000000ef80	stp	x20, x19, [sp, #0x40]
000000000000ef84	stp	x29, x30, [sp, #0x50]
000000000000ef88	add	x29, sp, #0x50
000000000000ef8c	mov	x19, x1
000000000000ef90	mov	x21, x0
000000000000ef94	movi.16b	v0, #0x0
000000000000ef98	stp	q0, q0, [sp]
000000000000ef9c	mov	x8, sp
000000000000efa0	add	x22, x8, #0x18
000000000000efa4	adrp	x20, 108 ; 0x7a000
000000000000efa8	add	x20, x20, #0x2c0
000000000000efac	ldr	x23, [x20]
000000000000efb0	mov	x0, x20
000000000000efb4	blr	x23
000000000000efb8	ldr	x9, [x0]
000000000000efbc	ldr	x10, [x9, #0x110]
000000000000efc0	str	x8, [x9, #0x110]
000000000000efc4	mov	x8, #0x400000000
000000000000efc8	stp	x10, x8, [sp, #0x8]
000000000000efcc	adr	x8, #0x852bd
000000000000efd0	nop
000000000000efd4	ldarb	w8, [x8]
000000000000efd8	tbz	w8, #0x0, 0xefe0
000000000000efdc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000efe0	ldr	x8, [x21]
000000000000efe4	and	x8, x8, #0xfffffffffffffffc
000000000000efe8	ldr	x8, [x8]
000000000000efec	ldr	w9, [x8, #0x3c]
000000000000eff0	ldr	x8, [x8, #0x40]
000000000000eff4	tbnz	w9, #0x1f, 0xf004
000000000000eff8	mov	w10, #0x41
000000000000effc	and	x9, x9, x10
000000000000f000	b	0xf088
000000000000f004	neg	w10, w9
000000000000f008	mvn	w9, w9
000000000000f00c	cmp	w10, #0x9
000000000000f010	b.ge	0xf048
000000000000f014	cmp	w10, #0x2
000000000000f018	b.lt	0xf07c
000000000000f01c	mov	x10, #0x0
000000000000f020	mov	x11, x8
000000000000f024	ldr	w12, [x11]
000000000000f028	cmp	w12, #0x40
000000000000f02c	b.gt	0xf084
000000000000f030	add	x10, x10, #0x1
000000000000f034	add	x11, x11, #0x10
000000000000f038	cmp	x9, x10
000000000000f03c	b.ne	0xf024
000000000000f040	mov	x10, x9
000000000000f044	b	0xf084
000000000000f048	mov	w10, #0x0
000000000000f04c	add	w11, w9, w10
000000000000f050	cmp	w11, #0x0
000000000000f054	cinc	w11, w11, lt
000000000000f058	asr	w11, w11, #1
000000000000f05c	sbfiz	x12, x11, #4, #32
000000000000f060	ldr	w12, [x8, x12]
000000000000f064	cmp	w12, #0x41
000000000000f068	csinc	w10, w10, w11, ge
000000000000f06c	csel	w9, w9, w11, lt
000000000000f070	cmp	w10, w9
000000000000f074	b.lt	0xf04c
000000000000f078	b	0xf084
000000000000f07c	mov	w10, #0x0
000000000000f080	b	0xf084
000000000000f084	sxtw	x9, w10
000000000000f088	add	x8, x8, x9, lsl #4
000000000000f08c	ldr	x8, [x8, #0x8]
000000000000f090	ldr	x8, [x8, #0x8]
000000000000f094	mov	x0, x21
000000000000f098	mov	x1, x22
000000000000f09c	blr	x8
000000000000f0a0	ldr	x8, [x0]
000000000000f0a4	and	x8, x8, #0xfffffffffffffffc
000000000000f0a8	ldr	x8, [x8]
000000000000f0ac	ldr	w9, [x8, #0x3c]
000000000000f0b0	ldr	x8, [x8, #0x40]
000000000000f0b4	tbnz	w9, #0x1f, 0xf0c0
000000000000f0b8	and	x9, x9, #0x1e
000000000000f0bc	b	0xf144
000000000000f0c0	neg	w10, w9
000000000000f0c4	mvn	w9, w9
000000000000f0c8	cmp	w10, #0x9
000000000000f0cc	b.ge	0xf104
000000000000f0d0	cmp	w10, #0x2
000000000000f0d4	b.lt	0xf138
000000000000f0d8	mov	x10, #0x0
000000000000f0dc	mov	x11, x8
000000000000f0e0	ldr	w12, [x11]
000000000000f0e4	cmp	w12, #0x1d
000000000000f0e8	b.gt	0xf140
000000000000f0ec	add	x10, x10, #0x1
000000000000f0f0	add	x11, x11, #0x10
000000000000f0f4	cmp	x9, x10
000000000000f0f8	b.ne	0xf0e0
000000000000f0fc	mov	x10, x9
000000000000f100	b	0xf140
000000000000f104	mov	w10, #0x0
000000000000f108	add	w11, w9, w10
000000000000f10c	cmp	w11, #0x0
000000000000f110	cinc	w11, w11, lt
000000000000f114	asr	w11, w11, #1
000000000000f118	sbfiz	x12, x11, #4, #32
000000000000f11c	ldr	w12, [x8, x12]
000000000000f120	cmp	w12, #0x1e
000000000000f124	csinc	w10, w10, w11, ge
000000000000f128	csel	w9, w9, w11, lt
000000000000f12c	cmp	w10, w9
000000000000f130	b.lt	0xf108
000000000000f134	b	0xf140
000000000000f138	mov	w10, #0x0
000000000000f13c	b	0xf140
000000000000f140	sxtw	x9, w10
000000000000f144	add	x8, x8, x9, lsl #4
000000000000f148	ldr	x8, [x8, #0x8]
000000000000f14c	ldr	x8, [x8, #0x20]
000000000000f150	mov	x1, x19
000000000000f154	blr	x8
000000000000f158	mov	x8, x0
000000000000f15c	str	x0, [x19]
000000000000f160	mov	x0, x20
000000000000f164	blr	x23
000000000000f168	ldr	x9, [x0]
000000000000f16c	ldr	x10, [sp, #0x8]
000000000000f170	str	x10, [x9, #0x110]
000000000000f174	mov	x0, x8
000000000000f178	ldp	x29, x30, [sp, #0x50]
000000000000f17c	ldp	x20, x19, [sp, #0x40]
000000000000f180	ldp	x22, x21, [sp, #0x30]
000000000000f184	ldp	x24, x23, [sp, #0x20]
000000000000f188	add	sp, sp, #0x60
000000000000f18c	ret
000000000000f190	mov	x1, x0
000000000000f194	mov	x0, x20
000000000000f198	blr	x23
000000000000f19c	ldr	x8, [x0]
000000000000f1a0	ldr	x9, [sp, #0x8]
000000000000f1a4	str	x9, [x8, #0x110]
000000000000f1a8	mov	x0, x1
000000000000f1ac	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_MutableMap_createWithCapacity:
000000000000f1b0	sub	sp, sp, #0x60
000000000000f1b4	stp	x24, x23, [sp, #0x20]
000000000000f1b8	stp	x22, x21, [sp, #0x30]
000000000000f1bc	stp	x20, x19, [sp, #0x40]
000000000000f1c0	stp	x29, x30, [sp, #0x50]
000000000000f1c4	add	x29, sp, #0x50
000000000000f1c8	mov	x20, x1
000000000000f1cc	mov	x21, x0
000000000000f1d0	str	xzr, [sp, #0x8]
000000000000f1d4	adrp	x19, 107 ; 0x7a000
000000000000f1d8	add	x19, x19, #0x2c0
000000000000f1dc	ldr	x23, [x19]
000000000000f1e0	mov	x0, x19
000000000000f1e4	blr	x23
000000000000f1e8	ldr	x8, [x0]
000000000000f1ec	ldr	x9, [x8, #0x110]
000000000000f1f0	add	x10, sp, #0x8
000000000000f1f4	str	x10, [x8, #0x110]
000000000000f1f8	mov	x8, #0x300000000
000000000000f1fc	stp	x9, x8, [sp, #0x10]
000000000000f200	adr	x8, #0x85089
000000000000f204	nop
000000000000f208	ldarb	w8, [x8]
000000000000f20c	tbz	w8, #0x0, 0xf214
000000000000f210	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f214	mov	x0, x19
000000000000f218	blr	x23
000000000000f21c	ldr	x8, [x0]
000000000000f220	ldr	x8, [x8, #0x118]
000000000000f224	add	x0, x8, #0x70
000000000000f228	mov	w1, #0x60
000000000000f22c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000f230	mov	x22, x0
000000000000f234	adr	x8, #0x54b9c
000000000000f238	nop
000000000000f23c	str	x8, [x22, #0x10]!
000000000000f240	stur	xzr, [x22, #-0x8]
000000000000f244	str	x22, [x20]
000000000000f248	mov	x0, x22
000000000000f24c	mov	x1, x21
000000000000f250	bl	"_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}"
000000000000f254	str	x22, [x20]
000000000000f258	mov	x0, x19
000000000000f25c	blr	x23
000000000000f260	ldr	x8, [x0]
000000000000f264	ldr	x9, [sp, #0x10]
000000000000f268	str	x9, [x8, #0x110]
000000000000f26c	mov	x0, x22
000000000000f270	ldp	x29, x30, [sp, #0x50]
000000000000f274	ldp	x20, x19, [sp, #0x40]
000000000000f278	ldp	x22, x21, [sp, #0x30]
000000000000f27c	ldp	x24, x23, [sp, #0x20]
000000000000f280	add	sp, sp, #0x60
000000000000f284	ret
000000000000f288	mov	x1, x0
000000000000f28c	mov	x0, x19
000000000000f290	blr	x23
000000000000f294	ldr	x8, [x0]
000000000000f298	ldr	x9, [sp, #0x10]
000000000000f29c	str	x9, [x8, #0x110]
000000000000f2a0	mov	x0, x1
000000000000f2a4	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_ObjCExport_ThrowCollectionTooLarge:
000000000000f2a8	sub	sp, sp, #0x50
000000000000f2ac	stp	x22, x21, [sp, #0x20]
000000000000f2b0	stp	x20, x19, [sp, #0x30]
000000000000f2b4	stp	x29, x30, [sp, #0x40]
000000000000f2b8	add	x29, sp, #0x40
000000000000f2bc	movi.16b	v0, #0x0
000000000000f2c0	stp	q0, q0, [sp]
000000000000f2c4	adrp	x19, 107 ; 0x7a000
000000000000f2c8	add	x19, x19, #0x2c0
000000000000f2cc	ldr	x21, [x19]
000000000000f2d0	mov	x0, x19
000000000000f2d4	blr	x21
000000000000f2d8	ldr	x8, [x0]
000000000000f2dc	ldr	x9, [x8, #0x110]
000000000000f2e0	mov	x10, sp
000000000000f2e4	str	x10, [x8, #0x110]
000000000000f2e8	mov	x8, #0x400000000
000000000000f2ec	stp	x9, x8, [sp, #0x8]
000000000000f2f0	adr	x8, #0x84f99
000000000000f2f4	nop
000000000000f2f8	ldarb	w8, [x8]
000000000000f2fc	tbz	w8, #0x0, 0xf304
000000000000f300	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f304	mov	x0, x19
000000000000f308	blr	x21
000000000000f30c	ldr	x8, [x0]
000000000000f310	ldr	x8, [x8, #0x118]
000000000000f314	add	x0, x8, #0x70
000000000000f318	mov	w1, #0x38
000000000000f31c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000f320	mov	x20, x0
000000000000f324	adr	x8, #0x5229c
000000000000f328	nop
000000000000f32c	str	x8, [x20, #0x10]!
000000000000f330	stur	xzr, [x20, #-0x8]
000000000000f334	str	x20, [sp, #0x18]
000000000000f338	adr	x1, #0x5f2c8
000000000000f33c	nop
000000000000f340	mov	x0, x20
000000000000f344	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000000f348	mov	x0, x20
000000000000f34c	bl	_ThrowException
000000000000f350	brk	#0x1
000000000000f354	mov	x1, x0
000000000000f358	mov	x0, x19
000000000000f35c	blr	x21
000000000000f360	ldr	x8, [x0]
000000000000f364	ldr	x9, [sp, #0x8]
000000000000f368	str	x9, [x8, #0x110]
000000000000f36c	mov	x0, x1
000000000000f370	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_NSEnumeratorAsKIterator_create:
000000000000f374	sub	sp, sp, #0xc0
000000000000f378	stp	x28, x27, [sp, #0x60]
000000000000f37c	stp	x26, x25, [sp, #0x70]
000000000000f380	stp	x24, x23, [sp, #0x80]
000000000000f384	stp	x22, x21, [sp, #0x90]
000000000000f388	stp	x20, x19, [sp, #0xa0]
000000000000f38c	stp	x29, x30, [sp, #0xb0]
000000000000f390	add	x29, sp, #0xb0
000000000000f394	mov	x20, x0
000000000000f398	str	xzr, [sp, #0x18]
000000000000f39c	adrp	x19, 107 ; 0x7a000
000000000000f3a0	add	x19, x19, #0x2c0
000000000000f3a4	ldr	x26, [x19]
000000000000f3a8	mov	x0, x19
000000000000f3ac	blr	x26
000000000000f3b0	ldr	x8, [x0]
000000000000f3b4	ldr	x9, [x8, #0x110]
000000000000f3b8	add	x10, sp, #0x18
000000000000f3bc	str	x10, [x8, #0x110]
000000000000f3c0	mov	x8, #0x300000000
000000000000f3c4	stp	x9, x8, [sp, #0x20]
000000000000f3c8	adr	x25, #0x84ec1
000000000000f3cc	nop
000000000000f3d0	ldarb	w8, [x25]
000000000000f3d4	tbz	w8, #0x0, 0xf3dc
000000000000f3d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f3dc	mov	x0, x19
000000000000f3e0	blr	x26
000000000000f3e4	mov	x23, x0
000000000000f3e8	ldr	x8, [x0]
000000000000f3ec	ldr	x8, [x8, #0x118]
000000000000f3f0	add	x0, x8, #0x70
000000000000f3f4	mov	w1, #0x20
000000000000f3f8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000f3fc	mov	x22, x0
000000000000f400	adr	x8, #0x53760
000000000000f404	nop
000000000000f408	mov	x21, x0
000000000000f40c	str	x8, [x21, #0x10]!
000000000000f410	str	xzr, [x0, #0x8]
000000000000f414	str	x21, [x20]
000000000000f418	ldr	x8, [x23]
000000000000f41c	ldr	x9, [x8, #0x110]
000000000000f420	add	x10, sp, #0x30
000000000000f424	str	x10, [x8, #0x110]
000000000000f428	movi.16b	v0, #0x0
000000000000f42c	stp	q0, q0, [sp, #0x30]
000000000000f430	str	xzr, [sp, #0x50]
000000000000f434	mov	x8, #0x500000000
000000000000f438	stp	x9, x8, [sp, #0x38]
000000000000f43c	adr	x27, #0x84ed4
000000000000f440	nop
000000000000f444	ldar	x23, [x27]
000000000000f448	cmp	x23, #0x2
000000000000f44c	b.hs	0xf62c
000000000000f450	mov	x0, x19
000000000000f454	blr	x26
000000000000f458	ldr	x28, [x0]
000000000000f45c	ldp	x8, x9, [x28, #0x120]
000000000000f460	cmp	x8, x9
000000000000f464	b.eq	0xf484
000000000000f468	mov	x10, x9
000000000000f46c	ldr	x11, [x10, #-0x10]!
000000000000f470	cmp	x11, x27
000000000000f474	b.eq	0xf540
000000000000f478	mov	x9, x10
000000000000f47c	cmp	x10, x8
000000000000f480	b.ne	0xf46c
000000000000f484	add	x8, x28, #0x120
000000000000f488	str	x8, [sp, #0x10]
000000000000f48c	add	x0, x28, #0x138
000000000000f490	mov	w9, #0x1
000000000000f494	ldaxr	w8, [x0]
000000000000f498	stlxr	w10, w9, [x0]
000000000000f49c	cbnz	w10, 0xf494
000000000000f4a0	b	0xf4b0
000000000000f4a4	mov	w24, #0x1
000000000000f4a8	stlxr	w9, x24, [x27]
000000000000f4ac	cbz	w9, 0xf4c0
000000000000f4b0	ldaxr	x23, [x27]
000000000000f4b4	cbz	x23, 0xf4a4
000000000000f4b8	mov	w24, #0x0
000000000000f4bc	clrex
000000000000f4c0	cmp	x23, #0x1
000000000000f4c4	b.eq	0xf4b0
000000000000f4c8	cbz	x28, 0xf4f0
000000000000f4cc	ldaxr	w9, [x0]
000000000000f4d0	stlxr	w10, w8, [x0]
000000000000f4d4	cbnz	w10, 0xf4cc
000000000000f4d8	cbnz	w8, 0xf4f0
000000000000f4dc	cmp	w9, #0x1
000000000000f4e0	b.ne	0xf4f0
000000000000f4e4	ldarb	w8, [x25]
000000000000f4e8	tbz	w8, #0x0, 0xf4f0
000000000000f4ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000f4f0	tbz	w24, #0x0, 0xf538
000000000000f4f4	ldr	x8, [x28, #0x118]
000000000000f4f8	add	x0, x8, #0x70
000000000000f4fc	mov	w1, #0x20
000000000000f500	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000f504	mov	x23, x0
000000000000f508	adr	x8, #0x55918
000000000000f50c	nop
000000000000f510	str	x8, [x23, #0x10]!
000000000000f514	stur	xzr, [x23, #-0x8]
000000000000f518	str	x23, [sp, #0x48]
000000000000f51c	ldp	x9, x8, [x28, #0x128]
000000000000f520	cmp	x9, x8
000000000000f524	b.hs	0xf54c
000000000000f528	stp	x27, x23, [x9]
000000000000f52c	add	x8, x9, #0x10
000000000000f530	str	x8, [x28, #0x128]
000000000000f534	b	0xf5e0
000000000000f538	str	x23, [sp, #0x48]
000000000000f53c	b	0xf62c
000000000000f540	ldur	x23, [x9, #-0x8]
000000000000f544	str	x23, [sp, #0x48]
000000000000f548	b	0xf62c
000000000000f54c	ldr	x10, [sp, #0x10]
000000000000f550	ldr	x10, [x10]
000000000000f554	sub	x9, x9, x10
000000000000f558	asr	x24, x9, #4
000000000000f55c	add	x9, x24, #0x1
000000000000f560	lsr	x11, x9, #60
000000000000f564	cbnz	x11, 0xf698
000000000000f568	sub	x8, x8, x10
000000000000f56c	asr	x10, x8, #3
000000000000f570	cmp	x10, x9
000000000000f574	csel	x9, x9, x10, lo
000000000000f578	mov	x10, #0x7ffffffffffffff
000000000000f57c	cmp	x10, x8, asr #4
000000000000f580	mov	x8, #0xfffffffffffffff
000000000000f584	csel	x25, x9, x8, hi
000000000000f588	mov	x0, x25
000000000000f58c	mov	w1, #0x10
000000000000f590	bl	0x553d4 ; symbol stub for: _calloc
000000000000f594	add	x8, x0, x24, lsl #4
000000000000f598	add	x10, x0, x25, lsl #4
000000000000f59c	stp	x27, x23, [x8]
000000000000f5a0	add	x24, x8, #0x10
000000000000f5a4	ldp	x1, x9, [x28, #0x120]
000000000000f5a8	sub	x2, x9, x1
000000000000f5ac	sub	x25, x8, x2
000000000000f5b0	cmp	x2, #0x1
000000000000f5b4	b.lt	0xf5cc
000000000000f5b8	mov	x0, x25
000000000000f5bc	str	x10, [sp, #0x8]
000000000000f5c0	bl	0x554ac ; symbol stub for: _memcpy
000000000000f5c4	ldp	x10, x8, [sp, #0x8]
000000000000f5c8	ldr	x1, [x8]
000000000000f5cc	stp	x25, x24, [x28, #0x120]
000000000000f5d0	str	x10, [x28, #0x130]
000000000000f5d4	cbz	x1, 0xf5e0
000000000000f5d8	mov	x0, x1
000000000000f5dc	bl	0x55458 ; symbol stub for: _free
000000000000f5e0	mov	x0, x23
000000000000f5e4	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000000f5e8	mov	w0, #0x1
000000000000f5ec	mov	w1, #0x28
000000000000f5f0	bl	0x553d4 ; symbol stub for: _calloc
000000000000f5f4	ldr	x8, [x28, #0x18]!
000000000000f5f8	sub	x9, x28, #0x8
000000000000f5fc	stp	x27, x9, [x0, #0x10]
000000000000f600	stp	x8, x28, [x0]
000000000000f604	str	x0, [x8, #0x8]
000000000000f608	str	x0, [x28]
000000000000f60c	ldr	x8, [x28, #0x10]
000000000000f610	add	x8, x8, #0x1
000000000000f614	str	x8, [x28, #0x10]
000000000000f618	str	x0, [x0, #0x20]
000000000000f61c	stlr	x23, [x27]
000000000000f620	ldr	x8, [x28, #0x110]
000000000000f624	sub	x8, x8, #0x10
000000000000f628	str	x8, [x28, #0x110]
000000000000f62c	ldr	x8, [x23, #0x8]
000000000000f630	ldr	w9, [x8, #0x8]
000000000000f634	cmp	w9, #0x2
000000000000f638	b.ls	0xf690
000000000000f63c	ldr	x8, [x8, #0x20]
000000000000f640	str	x8, [sp, #0x50]
000000000000f644	str	x8, [x22, #0x18]
000000000000f648	mov	x0, x19
000000000000f64c	blr	x26
000000000000f650	ldr	x8, [x0]
000000000000f654	ldr	x9, [sp, #0x38]
000000000000f658	str	x9, [x8, #0x110]
000000000000f65c	str	x21, [x20]
000000000000f660	ldr	x8, [x0]
000000000000f664	ldr	x9, [sp, #0x20]
000000000000f668	str	x9, [x8, #0x110]
000000000000f66c	mov	x0, x21
000000000000f670	ldp	x29, x30, [sp, #0xb0]
000000000000f674	ldp	x20, x19, [sp, #0xa0]
000000000000f678	ldp	x22, x21, [sp, #0x90]
000000000000f67c	ldp	x24, x23, [sp, #0x80]
000000000000f680	ldp	x26, x25, [sp, #0x70]
000000000000f684	ldp	x28, x27, [sp, #0x60]
000000000000f688	add	sp, sp, #0xc0
000000000000f68c	ret
000000000000f690	bl	_ThrowArrayIndexOutOfBoundsException
000000000000f694	b	0xf6c0
000000000000f698	ldr	x0, [sp, #0x10]
000000000000f69c	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000f6a0	b	0xf6c0
000000000000f6a4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000000f6a8	str	xzr, [sp, #0x48]
000000000000f6ac	stlr	xzr, [x27]
000000000000f6b0	ldr	x8, [x28, #0x128]
000000000000f6b4	sub	x8, x8, #0x10
000000000000f6b8	str	x8, [x28, #0x128]
000000000000f6bc	bl	0x5535c ; symbol stub for: ___cxa_rethrow
000000000000f6c0	brk	#0x1
000000000000f6c4	mov	x20, x0
000000000000f6c8	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000000f6cc	b	0xf6d4
000000000000f6d0	mov	x20, x0
000000000000f6d4	mov	x0, x19
000000000000f6d8	blr	x26
000000000000f6dc	ldr	x8, [x0]
000000000000f6e0	ldr	x9, [sp, #0x20]
000000000000f6e4	str	x9, [x8, #0x110]
000000000000f6e8	mov	x0, x20
000000000000f6ec	bl	0x55194 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.native.internal.NSArrayAsKList#<get-size>(){}kotlin.Int:
000000000000f6f0	stp	x20, x19, [sp, #-0x20]!
000000000000f6f4	stp	x29, x30, [sp, #0x10]
000000000000f6f8	add	x29, sp, #0x10
000000000000f6fc	mov	x19, x0
000000000000f700	adr	x8, #0x84b89
000000000000f704	nop
000000000000f708	ldarb	w8, [x8]
000000000000f70c	tbz	w8, #0x0, 0xf714
000000000000f710	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f714	ldar	x8, [x19]
000000000000f718	and	x8, x8, #0xfffffffffffffffc
000000000000f71c	ldr	x9, [x8]
000000000000f720	cmp	x8, #0x0
000000000000f724	ccmp	x9, x8, #0x4, ne
000000000000f728	b.ne	0xf734
000000000000f72c	mov	x0, #0x0
000000000000f730	b	0xf73c
000000000000f734	add	x8, x8, #0x10
000000000000f738	ldar	x0, [x8]
000000000000f73c	nop
000000000000f740	ldr	x1, #0x67118 ; Objc selector ref: count
000000000000f744	bl	0x55584 ; Objc message: -[x0 count]
000000000000f748	lsr	x8, x0, #31
000000000000f74c	cbnz	x8, 0xf75c
000000000000f750	ldp	x29, x30, [sp, #0x10]
000000000000f754	ldp	x20, x19, [sp], #0x20
000000000000f758	ret
000000000000f75c	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSMutableArrayAsKMutableList#<get-size>(){}kotlin.Int:
000000000000f760	stp	x20, x19, [sp, #-0x20]!
000000000000f764	stp	x29, x30, [sp, #0x10]
000000000000f768	add	x29, sp, #0x10
000000000000f76c	mov	x19, x0
000000000000f770	adr	x8, #0x84b19
000000000000f774	nop
000000000000f778	ldarb	w8, [x8]
000000000000f77c	tbz	w8, #0x0, 0xf784
000000000000f780	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f784	ldar	x8, [x19]
000000000000f788	and	x8, x8, #0xfffffffffffffffc
000000000000f78c	ldr	x9, [x8]
000000000000f790	cmp	x8, #0x0
000000000000f794	ccmp	x9, x8, #0x4, ne
000000000000f798	b.ne	0xf7a4
000000000000f79c	mov	x0, #0x0
000000000000f7a0	b	0xf7ac
000000000000f7a4	add	x8, x8, #0x10
000000000000f7a8	ldar	x0, [x8]
000000000000f7ac	nop
000000000000f7b0	ldr	x1, #0x670a8 ; Objc selector ref: count
000000000000f7b4	bl	0x55584 ; Objc message: -[x0 count]
000000000000f7b8	lsr	x8, x0, #31
000000000000f7bc	cbnz	x8, 0xf7cc
000000000000f7c0	ldp	x29, x30, [sp, #0x10]
000000000000f7c4	ldp	x20, x19, [sp], #0x20
000000000000f7c8	ret
000000000000f7cc	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSSetAsKSet#<get-size>(){}kotlin.Int:
000000000000f7d0	stp	x20, x19, [sp, #-0x20]!
000000000000f7d4	stp	x29, x30, [sp, #0x10]
000000000000f7d8	add	x29, sp, #0x10
000000000000f7dc	mov	x19, x0
000000000000f7e0	adr	x8, #0x84aa9
000000000000f7e4	nop
000000000000f7e8	ldarb	w8, [x8]
000000000000f7ec	tbz	w8, #0x0, 0xf7f4
000000000000f7f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f7f4	ldar	x8, [x19]
000000000000f7f8	and	x8, x8, #0xfffffffffffffffc
000000000000f7fc	ldr	x9, [x8]
000000000000f800	cmp	x8, #0x0
000000000000f804	ccmp	x9, x8, #0x4, ne
000000000000f808	b.ne	0xf814
000000000000f80c	mov	x0, #0x0
000000000000f810	b	0xf81c
000000000000f814	add	x8, x8, #0x10
000000000000f818	ldar	x0, [x8]
000000000000f81c	nop
000000000000f820	ldr	x1, #0x67038 ; Objc selector ref: count
000000000000f824	bl	0x55584 ; Objc message: -[x0 count]
000000000000f828	lsr	x8, x0, #31
000000000000f82c	cbnz	x8, 0xf83c
000000000000f830	ldp	x29, x30, [sp, #0x10]
000000000000f834	ldp	x20, x19, [sp], #0x20
000000000000f838	ret
000000000000f83c	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#equals(kotlin.Any?){}kotlin.Boolean:
000000000000f840	sub	sp, sp, #0xa0
000000000000f844	stp	x28, x27, [sp, #0x40]
000000000000f848	stp	x26, x25, [sp, #0x50]
000000000000f84c	stp	x24, x23, [sp, #0x60]
000000000000f850	stp	x22, x21, [sp, #0x70]
000000000000f854	stp	x20, x19, [sp, #0x80]
000000000000f858	stp	x29, x30, [sp, #0x90]
000000000000f85c	add	x29, sp, #0x90
000000000000f860	mov	x20, x1
000000000000f864	mov	x19, x0
000000000000f868	movi.16b	v0, #0x0
000000000000f86c	stp	q0, q0, [sp]
000000000000f870	stp	q0, q0, [sp, #0x20]
000000000000f874	mov	x22, sp
000000000000f878	adrp	x0, 107 ; 0x7a000
000000000000f87c	add	x0, x0, #0x2c0
000000000000f880	ldr	x8, [x0]
000000000000f884	blr	x8
000000000000f888	ldr	x26, [x0]
000000000000f88c	ldr	x8, [x26, #0x110]
000000000000f890	str	x22, [x26, #0x110]
000000000000f894	mov	x9, #0x800000000
000000000000f898	stp	x8, x9, [sp, #0x8]
000000000000f89c	adr	x8, #0x849ed
000000000000f8a0	nop
000000000000f8a4	ldarb	w8, [x8]
000000000000f8a8	tbz	w8, #0x0, 0xf8b0
000000000000f8ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f8b0	cmp	x19, x20
000000000000f8b4	b.eq	0xfd10
000000000000f8b8	cbz	x20, 0x10134
000000000000f8bc	ldr	x8, [x20]
000000000000f8c0	and	x8, x8, #0xfffffffffffffffc
000000000000f8c4	ldr	x8, [x8]
000000000000f8c8	ldr	w9, [x8, #0x3c]
000000000000f8cc	ldr	x8, [x8, #0x40]
000000000000f8d0	tbnz	w9, #0x1f, 0xf8f0
000000000000f8d4	mov	w10, #0x41
000000000000f8d8	and	x9, x9, x10
000000000000f8dc	lsl	x9, x9, #4
000000000000f8e0	ldr	w8, [x8, x9]
000000000000f8e4	cmp	w8, #0x41
000000000000f8e8	b.eq	0xf9c0
000000000000f8ec	b	0x10134
000000000000f8f0	neg	w10, w9
000000000000f8f4	mvn	w9, w9
000000000000f8f8	cmp	w10, #0x9
000000000000f8fc	b.ge	0xf948
000000000000f900	cmp	w10, #0x2
000000000000f904	b.lt	0xf990
000000000000f908	mov	x10, #0x0
000000000000f90c	mov	x11, x8
000000000000f910	ldr	w12, [x11]
000000000000f914	cmp	w12, #0x40
000000000000f918	b.gt	0xf9ac
000000000000f91c	add	x10, x10, #0x1
000000000000f920	add	x11, x11, #0x10
000000000000f924	cmp	x9, x10
000000000000f928	b.ne	0xf910
000000000000f92c	mov	x10, x9
000000000000f930	sxtw	x9, w10
000000000000f934	lsl	x9, x9, #4
000000000000f938	ldr	w8, [x8, x9]
000000000000f93c	cmp	w8, #0x41
000000000000f940	b.ne	0x10134
000000000000f944	b	0xf9c0
000000000000f948	mov	w10, #0x0
000000000000f94c	add	w11, w9, w10
000000000000f950	cmp	w11, #0x0
000000000000f954	cinc	w11, w11, lt
000000000000f958	asr	w11, w11, #1
000000000000f95c	sbfiz	x12, x11, #4, #32
000000000000f960	ldr	w12, [x8, x12]
000000000000f964	cmp	w12, #0x41
000000000000f968	csinc	w10, w10, w11, ge
000000000000f96c	csel	w9, w9, w11, lt
000000000000f970	cmp	w10, w9
000000000000f974	b.lt	0xf94c
000000000000f978	sxtw	x9, w10
000000000000f97c	lsl	x9, x9, #4
000000000000f980	ldr	w8, [x8, x9]
000000000000f984	cmp	w8, #0x41
000000000000f988	b.ne	0x10134
000000000000f98c	b	0xf9c0
000000000000f990	mov	w10, #0x0
000000000000f994	sxtw	x9, w10
000000000000f998	lsl	x9, x9, #4
000000000000f99c	ldr	w8, [x8, x9]
000000000000f9a0	cmp	w8, #0x41
000000000000f9a4	b.ne	0x10134
000000000000f9a8	b	0xf9c0
000000000000f9ac	sxtw	x9, w10
000000000000f9b0	lsl	x9, x9, #4
000000000000f9b4	ldr	w8, [x8, x9]
000000000000f9b8	cmp	w8, #0x41
000000000000f9bc	b.ne	0x10134
000000000000f9c0	mov	x0, #0x0
000000000000f9c4	ldar	x8, [x19]
000000000000f9c8	ands	x8, x8, #0xfffffffffffffffc
000000000000f9cc	b.eq	0xf9e4
000000000000f9d0	ldr	x9, [x8]
000000000000f9d4	cmp	x9, x8
000000000000f9d8	b.eq	0xf9e4
000000000000f9dc	add	x8, x8, #0x10
000000000000f9e0	ldar	x0, [x8]
000000000000f9e4	nop
000000000000f9e8	ldr	x1, #0x66e70 ; Objc selector ref: count
000000000000f9ec	bl	0x55584 ; Objc message: -[x0 count]
000000000000f9f0	lsr	x8, x0, #31
000000000000f9f4	cbnz	x8, 0x10160
000000000000f9f8	mov	x21, x0
000000000000f9fc	ldr	x8, [x20]
000000000000fa00	and	x8, x8, #0xfffffffffffffffc
000000000000fa04	ldr	x8, [x8]
000000000000fa08	ldr	w9, [x8, #0x3c]
000000000000fa0c	ldr	x8, [x8, #0x40]
000000000000fa10	tbnz	w9, #0x1f, 0xfa20
000000000000fa14	mov	w10, #0x41
000000000000fa18	and	x9, x9, x10
000000000000fa1c	b	0xfaa4
000000000000fa20	neg	w10, w9
000000000000fa24	mvn	w9, w9
000000000000fa28	cmp	w10, #0x9
000000000000fa2c	b.ge	0xfa64
000000000000fa30	cmp	w10, #0x2
000000000000fa34	b.lt	0xfa98
000000000000fa38	mov	x10, #0x0
000000000000fa3c	mov	x11, x8
000000000000fa40	ldr	w12, [x11]
000000000000fa44	cmp	w12, #0x40
000000000000fa48	b.gt	0xfaa0
000000000000fa4c	add	x10, x10, #0x1
000000000000fa50	add	x11, x11, #0x10
000000000000fa54	cmp	x9, x10
000000000000fa58	b.ne	0xfa40
000000000000fa5c	mov	x10, x9
000000000000fa60	b	0xfaa0
000000000000fa64	mov	w10, #0x0
000000000000fa68	add	w11, w9, w10
000000000000fa6c	cmp	w11, #0x0
000000000000fa70	cinc	w11, w11, lt
000000000000fa74	asr	w11, w11, #1
000000000000fa78	sbfiz	x12, x11, #4, #32
000000000000fa7c	ldr	w12, [x8, x12]
000000000000fa80	cmp	w12, #0x41
000000000000fa84	csinc	w10, w10, w11, ge
000000000000fa88	csel	w9, w9, w11, lt
000000000000fa8c	cmp	w10, w9
000000000000fa90	b.lt	0xfa68
000000000000fa94	b	0xfaa0
000000000000fa98	mov	w10, #0x0
000000000000fa9c	b	0xfaa0
000000000000faa0	sxtw	x9, w10
000000000000faa4	add	x8, x8, x9, lsl #4
000000000000faa8	ldr	x8, [x8, #0x8]
000000000000faac	ldr	x8, [x8, #0x10]
000000000000fab0	mov	x0, x20
000000000000fab4	blr	x8
000000000000fab8	cmp	w0, w21
000000000000fabc	b.ne	0x10134
000000000000fac0	add	x1, x22, #0x18
000000000000fac4	ldr	x8, [x20]
000000000000fac8	and	x8, x8, #0xfffffffffffffffc
000000000000facc	ldr	x8, [x8]
000000000000fad0	ldr	w9, [x8, #0x3c]
000000000000fad4	ldr	x8, [x8, #0x40]
000000000000fad8	tbnz	w9, #0x1f, 0xfae8
000000000000fadc	mov	w10, #0x41
000000000000fae0	and	x9, x9, x10
000000000000fae4	b	0xfb6c
000000000000fae8	neg	w10, w9
000000000000faec	mvn	w9, w9
000000000000faf0	cmp	w10, #0x9
000000000000faf4	b.ge	0xfb2c
000000000000faf8	cmp	w10, #0x2
000000000000fafc	b.lt	0xfb60
000000000000fb00	mov	x10, #0x0
000000000000fb04	mov	x11, x8
000000000000fb08	ldr	w12, [x11]
000000000000fb0c	cmp	w12, #0x40
000000000000fb10	b.gt	0xfb68
000000000000fb14	add	x10, x10, #0x1
000000000000fb18	add	x11, x11, #0x10
000000000000fb1c	cmp	x9, x10
000000000000fb20	b.ne	0xfb08
000000000000fb24	mov	x10, x9
000000000000fb28	b	0xfb68
000000000000fb2c	mov	w10, #0x0
000000000000fb30	add	w11, w9, w10
000000000000fb34	cmp	w11, #0x0
000000000000fb38	cinc	w11, w11, lt
000000000000fb3c	asr	w11, w11, #1
000000000000fb40	sbfiz	x12, x11, #4, #32
000000000000fb44	ldr	w12, [x8, x12]
000000000000fb48	cmp	w12, #0x41
000000000000fb4c	csinc	w10, w10, w11, ge
000000000000fb50	csel	w9, w9, w11, lt
000000000000fb54	cmp	w10, w9
000000000000fb58	b.lt	0xfb30
000000000000fb5c	b	0xfb68
000000000000fb60	mov	w10, #0x0
000000000000fb64	b	0xfb68
000000000000fb68	sxtw	x9, w10
000000000000fb6c	add	x8, x8, x9, lsl #4
000000000000fb70	ldr	x8, [x8, #0x8]
000000000000fb74	ldr	x8, [x8]
000000000000fb78	mov	x0, x20
000000000000fb7c	blr	x8
000000000000fb80	mov	x23, x0
000000000000fb84	cbz	x0, 0xfd18
000000000000fb88	ldr	x8, [x23]
000000000000fb8c	and	x8, x8, #0xfffffffffffffffc
000000000000fb90	ldr	x8, [x8]
000000000000fb94	ldr	w9, [x8, #0x3c]
000000000000fb98	ldr	x8, [x8, #0x40]
000000000000fb9c	tbnz	w9, #0x1f, 0xfbbc
000000000000fba0	mov	w10, #0x12
000000000000fba4	and	x9, x9, x10
000000000000fba8	lsl	x9, x9, #4
000000000000fbac	ldr	w8, [x8, x9]
000000000000fbb0	cmp	w8, #0x12
000000000000fbb4	b.ne	0xfd18
000000000000fbb8	b	0xfc50
000000000000fbbc	neg	w10, w9
000000000000fbc0	mvn	w9, w9
000000000000fbc4	cmp	w10, #0x9
000000000000fbc8	b.ge	0xfc00
000000000000fbcc	cmp	w10, #0x2
000000000000fbd0	b.lt	0xfc34
000000000000fbd4	mov	x10, #0x0
000000000000fbd8	mov	x11, x8
000000000000fbdc	ldr	w12, [x11]
000000000000fbe0	cmp	w12, #0x11
000000000000fbe4	b.gt	0xfc3c
000000000000fbe8	add	x10, x10, #0x1
000000000000fbec	add	x11, x11, #0x10
000000000000fbf0	cmp	x9, x10
000000000000fbf4	b.ne	0xfbdc
000000000000fbf8	mov	x10, x9
000000000000fbfc	b	0xfc3c
000000000000fc00	mov	w10, #0x0
000000000000fc04	add	w11, w9, w10
000000000000fc08	cmp	w11, #0x0
000000000000fc0c	cinc	w11, w11, lt
000000000000fc10	asr	w11, w11, #1
000000000000fc14	sbfiz	x12, x11, #4, #32
000000000000fc18	ldr	w12, [x8, x12]
000000000000fc1c	cmp	w12, #0x12
000000000000fc20	csinc	w10, w10, w11, ge
000000000000fc24	csel	w9, w9, w11, lt
000000000000fc28	cmp	w10, w9
000000000000fc2c	b.lt	0xfc04
000000000000fc30	b	0xfc3c
000000000000fc34	mov	w10, #0x0
000000000000fc38	b	0xfc3c
000000000000fc3c	sxtw	x9, w10
000000000000fc40	lsl	x9, x9, #4
000000000000fc44	ldr	w8, [x8, x9]
000000000000fc48	cmp	w8, #0x12
000000000000fc4c	b.ne	0xfd18
000000000000fc50	ldr	x8, [x23]
000000000000fc54	and	x8, x8, #0xfffffffffffffffc
000000000000fc58	ldr	x8, [x8]
000000000000fc5c	ldr	w9, [x8, #0x3c]
000000000000fc60	ldr	x8, [x8, #0x40]
000000000000fc64	tbnz	w9, #0x1f, 0xfc74
000000000000fc68	mov	w10, #0x12
000000000000fc6c	and	x9, x9, x10
000000000000fc70	b	0xfcf8
000000000000fc74	neg	w10, w9
000000000000fc78	mvn	w9, w9
000000000000fc7c	cmp	w10, #0x9
000000000000fc80	b.ge	0xfcb8
000000000000fc84	cmp	w10, #0x2
000000000000fc88	b.lt	0xfcec
000000000000fc8c	mov	x10, #0x0
000000000000fc90	mov	x11, x8
000000000000fc94	ldr	w12, [x11]
000000000000fc98	cmp	w12, #0x11
000000000000fc9c	b.gt	0xfcf4
000000000000fca0	add	x10, x10, #0x1
000000000000fca4	add	x11, x11, #0x10
000000000000fca8	cmp	x9, x10
000000000000fcac	b.ne	0xfc94
000000000000fcb0	mov	x10, x9
000000000000fcb4	b	0xfcf4
000000000000fcb8	mov	w10, #0x0
000000000000fcbc	add	w11, w9, w10
000000000000fcc0	cmp	w11, #0x0
000000000000fcc4	cinc	w11, w11, lt
000000000000fcc8	asr	w11, w11, #1
000000000000fccc	sbfiz	x12, x11, #4, #32
000000000000fcd0	ldr	w12, [x8, x12]
000000000000fcd4	cmp	w12, #0x12
000000000000fcd8	csinc	w10, w10, w11, ge
000000000000fcdc	csel	w9, w9, w11, lt
000000000000fce0	cmp	w10, w9
000000000000fce4	b.lt	0xfcbc
000000000000fce8	b	0xfcf4
000000000000fcec	mov	w10, #0x0
000000000000fcf0	b	0xfcf4
000000000000fcf4	sxtw	x9, w10
000000000000fcf8	add	x8, x8, x9, lsl #4
000000000000fcfc	ldr	x8, [x8, #0x8]
000000000000fd00	ldr	x8, [x8, #0x18]
000000000000fd04	mov	x0, x23
000000000000fd08	blr	x8
000000000000fd0c	tbz	w0, #0x0, 0xfd18
000000000000fd10	mov	w0, #0x1
000000000000fd14	b	0x10138
000000000000fd18	add	x1, x22, #0x20
000000000000fd1c	add	x20, x22, #0x30
000000000000fd20	add	x21, x22, #0x28
000000000000fd24	add	x22, x22, #0x38
000000000000fd28	ldr	x8, [x23]
000000000000fd2c	and	x8, x8, #0xfffffffffffffffc
000000000000fd30	ldr	x8, [x8]
000000000000fd34	ldr	w9, [x8, #0x3c]
000000000000fd38	ldr	x8, [x8, #0x40]
000000000000fd3c	tbnz	w9, #0x1f, 0xfd4c
000000000000fd40	mov	w10, #0x31
000000000000fd44	and	x9, x9, x10
000000000000fd48	b	0xfdd0
000000000000fd4c	neg	w10, w9
000000000000fd50	mvn	w9, w9
000000000000fd54	cmp	w10, #0x9
000000000000fd58	b.ge	0xfd90
000000000000fd5c	cmp	w10, #0x2
000000000000fd60	b.lt	0xfdc4
000000000000fd64	mov	x10, #0x0
000000000000fd68	mov	x11, x8
000000000000fd6c	ldr	w12, [x11]
000000000000fd70	cmp	w12, #0x30
000000000000fd74	b.gt	0xfdcc
000000000000fd78	add	x10, x10, #0x1
000000000000fd7c	add	x11, x11, #0x10
000000000000fd80	cmp	x9, x10
000000000000fd84	b.ne	0xfd6c
000000000000fd88	mov	x10, x9
000000000000fd8c	b	0xfdcc
000000000000fd90	mov	w10, #0x0
000000000000fd94	add	w11, w9, w10
000000000000fd98	cmp	w11, #0x0
000000000000fd9c	cinc	w11, w11, lt
000000000000fda0	asr	w11, w11, #1
000000000000fda4	sbfiz	x12, x11, #4, #32
000000000000fda8	ldr	w12, [x8, x12]
000000000000fdac	cmp	w12, #0x31
000000000000fdb0	csinc	w10, w10, w11, ge
000000000000fdb4	csel	w9, w9, w11, lt
000000000000fdb8	cmp	w10, w9
000000000000fdbc	b.lt	0xfd94
000000000000fdc0	b	0xfdcc
000000000000fdc4	mov	w10, #0x0
000000000000fdc8	b	0xfdcc
000000000000fdcc	sxtw	x9, w10
000000000000fdd0	add	x8, x8, x9, lsl #4
000000000000fdd4	ldr	x8, [x8, #0x8]
000000000000fdd8	ldr	x8, [x8]
000000000000fddc	mov	x0, x23
000000000000fde0	blr	x8
000000000000fde4	mov	x23, x0
000000000000fde8	mov	w28, #0xa0
000000000000fdec	mov	w27, #0xa8
000000000000fdf0	b	0xfe24
000000000000fdf4	and	x9, x9, x27
000000000000fdf8	add	x8, x8, x9, lsl #4
000000000000fdfc	ldr	x8, [x8, #0x8]
000000000000fe00	ldr	x8, [x8, #0x8]
000000000000fe04	mov	x0, x24
000000000000fe08	mov	x1, x22
000000000000fe0c	blr	x8
000000000000fe10	mov	x2, x0
000000000000fe14	mov	x0, x19
000000000000fe18	mov	x1, x25
000000000000fe1c	bl	_Kotlin_NSDictionaryAsKMap_containsEntry
000000000000fe20	tbz	w0, #0x0, 0x10134
000000000000fe24	ldr	x8, [x23]
000000000000fe28	and	x8, x8, #0xfffffffffffffffc
000000000000fe2c	ldr	x8, [x8]
000000000000fe30	ldr	w9, [x8, #0x3c]
000000000000fe34	ldr	x8, [x8, #0x40]
000000000000fe38	tbnz	w9, #0x1f, 0xfe5c
000000000000fe3c	and	x9, x9, x28
000000000000fe40	add	x8, x8, x9, lsl #4
000000000000fe44	ldr	x8, [x8, #0x8]
000000000000fe48	ldr	x8, [x8]
000000000000fe4c	mov	x0, x23
000000000000fe50	blr	x8
000000000000fe54	tbnz	w0, #0x0, 0xfef8
000000000000fe58	b	0xfd10
000000000000fe5c	neg	w10, w9
000000000000fe60	mvn	w9, w9
000000000000fe64	cmp	w10, #0x9
000000000000fe68	b.ge	0xfea0
000000000000fe6c	cmp	w10, #0x2
000000000000fe70	b.lt	0xfed4
000000000000fe74	mov	x10, #0x0
000000000000fe78	mov	x11, x8
000000000000fe7c	ldr	w12, [x11]
000000000000fe80	cmp	w12, #0x9f
000000000000fe84	b.gt	0xfedc
000000000000fe88	add	x10, x10, #0x1
000000000000fe8c	add	x11, x11, #0x10
000000000000fe90	cmp	x9, x10
000000000000fe94	b.ne	0xfe7c
000000000000fe98	mov	x10, x9
000000000000fe9c	b	0xfedc
000000000000fea0	mov	w10, #0x0
000000000000fea4	add	w11, w9, w10
000000000000fea8	cmp	w11, #0x0
000000000000feac	cinc	w11, w11, lt
000000000000feb0	asr	w11, w11, #1
000000000000feb4	sbfiz	x12, x11, #4, #32
000000000000feb8	ldr	w12, [x8, x12]
000000000000febc	cmp	w12, #0xa0
000000000000fec0	csinc	w10, w10, w11, ge
000000000000fec4	csel	w9, w9, w11, lt
000000000000fec8	cmp	w10, w9
000000000000fecc	b.lt	0xfea4
000000000000fed0	b	0xfedc
000000000000fed4	mov	w10, #0x0
000000000000fed8	b	0xfedc
000000000000fedc	sxtw	x9, w10
000000000000fee0	add	x8, x8, x9, lsl #4
000000000000fee4	ldr	x8, [x8, #0x8]
000000000000fee8	ldr	x8, [x8]
000000000000feec	mov	x0, x23
000000000000fef0	blr	x8
000000000000fef4	tbz	w0, #0x0, 0xfd10
000000000000fef8	adr	x8, #0x84391
000000000000fefc	nop
000000000000ff00	ldarb	w8, [x8]
000000000000ff04	tbz	w8, #0x0, 0xff0c
000000000000ff08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ff0c	ldr	x8, [x23]
000000000000ff10	and	x8, x8, #0xfffffffffffffffc
000000000000ff14	ldr	x8, [x8]
000000000000ff18	ldr	w9, [x8, #0x3c]
000000000000ff1c	ldr	x8, [x8, #0x40]
000000000000ff20	tbnz	w9, #0x1f, 0xff2c
000000000000ff24	and	x9, x9, x28
000000000000ff28	b	0xffb0
000000000000ff2c	neg	w10, w9
000000000000ff30	mvn	w9, w9
000000000000ff34	cmp	w10, #0x9
000000000000ff38	b.ge	0xff70
000000000000ff3c	cmp	w10, #0x2
000000000000ff40	b.lt	0xffa4
000000000000ff44	mov	x10, #0x0
000000000000ff48	mov	x11, x8
000000000000ff4c	ldr	w12, [x11]
000000000000ff50	cmp	w12, #0x9f
000000000000ff54	b.gt	0xffac
000000000000ff58	add	x10, x10, #0x1
000000000000ff5c	add	x11, x11, #0x10
000000000000ff60	cmp	x9, x10
000000000000ff64	b.ne	0xff4c
000000000000ff68	mov	x10, x9
000000000000ff6c	b	0xffac
000000000000ff70	mov	w10, #0x0
000000000000ff74	add	w11, w9, w10
000000000000ff78	cmp	w11, #0x0
000000000000ff7c	cinc	w11, w11, lt
000000000000ff80	asr	w11, w11, #1
000000000000ff84	sbfiz	x12, x11, #4, #32
000000000000ff88	ldr	w12, [x8, x12]
000000000000ff8c	cmp	w12, #0xa0
000000000000ff90	csinc	w10, w10, w11, ge
000000000000ff94	csel	w9, w9, w11, lt
000000000000ff98	cmp	w10, w9
000000000000ff9c	b.lt	0xff74
000000000000ffa0	b	0xffac
000000000000ffa4	mov	w10, #0x0
000000000000ffa8	b	0xffac
000000000000ffac	sxtw	x9, w10
000000000000ffb0	add	x8, x8, x9, lsl #4
000000000000ffb4	ldr	x8, [x8, #0x8]
000000000000ffb8	ldr	x8, [x8, #0x8]
000000000000ffbc	mov	x0, x23
000000000000ffc0	mov	x1, x21
000000000000ffc4	blr	x8
000000000000ffc8	mov	x24, x0
000000000000ffcc	ldr	x8, [x0]
000000000000ffd0	and	x8, x8, #0xfffffffffffffffc
000000000000ffd4	ldr	x8, [x8]
000000000000ffd8	ldr	w9, [x8, #0x3c]
000000000000ffdc	ldr	x8, [x8, #0x40]
000000000000ffe0	tbnz	w9, #0x1f, 0xffec
000000000000ffe4	and	x9, x9, x27
000000000000ffe8	b	0x10070
000000000000ffec	neg	w10, w9
000000000000fff0	mvn	w9, w9
000000000000fff4	cmp	w10, #0x9
000000000000fff8	b.ge	0x10030
000000000000fffc	cmp	w10, #0x2
0000000000010000	b.lt	0x10064
0000000000010004	mov	x10, #0x0
0000000000010008	mov	x11, x8
000000000001000c	ldr	w12, [x11]
0000000000010010	cmp	w12, #0xa7
0000000000010014	b.gt	0x1006c
0000000000010018	add	x10, x10, #0x1
000000000001001c	add	x11, x11, #0x10
0000000000010020	cmp	x9, x10
0000000000010024	b.ne	0x1000c
0000000000010028	mov	x10, x9
000000000001002c	b	0x1006c
0000000000010030	mov	w10, #0x0
0000000000010034	add	w11, w9, w10
0000000000010038	cmp	w11, #0x0
000000000001003c	cinc	w11, w11, lt
0000000000010040	asr	w11, w11, #1
0000000000010044	sbfiz	x12, x11, #4, #32
0000000000010048	ldr	w12, [x8, x12]
000000000001004c	cmp	w12, #0xa8
0000000000010050	csinc	w10, w10, w11, ge
0000000000010054	csel	w9, w9, w11, lt
0000000000010058	cmp	w10, w9
000000000001005c	b.lt	0x10034
0000000000010060	b	0x1006c
0000000000010064	mov	w10, #0x0
0000000000010068	b	0x1006c
000000000001006c	sxtw	x9, w10
0000000000010070	add	x8, x8, x9, lsl #4
0000000000010074	ldr	x8, [x8, #0x8]
0000000000010078	ldr	x8, [x8]
000000000001007c	mov	x0, x24
0000000000010080	mov	x1, x20
0000000000010084	blr	x8
0000000000010088	mov	x25, x0
000000000001008c	ldr	x8, [x24]
0000000000010090	and	x8, x8, #0xfffffffffffffffc
0000000000010094	ldr	x8, [x8]
0000000000010098	ldr	w9, [x8, #0x3c]
000000000001009c	ldr	x8, [x8, #0x40]
00000000000100a0	tbz	w9, #0x1f, 0xfdf4
00000000000100a4	neg	w10, w9
00000000000100a8	mvn	w9, w9
00000000000100ac	cmp	w10, #0x9
00000000000100b0	b.ge	0x100ec
00000000000100b4	cmp	w10, #0x2
00000000000100b8	b.lt	0x10120
00000000000100bc	mov	x10, #0x0
00000000000100c0	mov	x11, x8
00000000000100c4	ldr	w12, [x11]
00000000000100c8	cmp	w12, #0xa7
00000000000100cc	b.gt	0x1012c
00000000000100d0	add	x10, x10, #0x1
00000000000100d4	add	x11, x11, #0x10
00000000000100d8	cmp	x9, x10
00000000000100dc	b.ne	0x100c4
00000000000100e0	mov	x10, x9
00000000000100e4	sxtw	x9, w10
00000000000100e8	b	0xfdf8
00000000000100ec	mov	w10, #0x0
00000000000100f0	add	w11, w9, w10
00000000000100f4	cmp	w11, #0x0
00000000000100f8	cinc	w11, w11, lt
00000000000100fc	asr	w11, w11, #1
0000000000010100	sbfiz	x12, x11, #4, #32
0000000000010104	ldr	w12, [x8, x12]
0000000000010108	cmp	w12, #0xa8
000000000001010c	csinc	w10, w10, w11, ge
0000000000010110	csel	w9, w9, w11, lt
0000000000010114	cmp	w10, w9
0000000000010118	b.lt	0x100f0
000000000001011c	b	0x1012c
0000000000010120	mov	w10, #0x0
0000000000010124	sxtw	x9, w10
0000000000010128	b	0xfdf8
000000000001012c	sxtw	x9, w10
0000000000010130	b	0xfdf8
0000000000010134	mov	w0, #0x0
0000000000010138	ldr	x8, [sp, #0x8]
000000000001013c	str	x8, [x26, #0x110]
0000000000010140	ldp	x29, x30, [sp, #0x90]
0000000000010144	ldp	x20, x19, [sp, #0x80]
0000000000010148	ldp	x22, x21, [sp, #0x70]
000000000001014c	ldp	x24, x23, [sp, #0x60]
0000000000010150	ldp	x26, x25, [sp, #0x50]
0000000000010154	ldp	x28, x27, [sp, #0x40]
0000000000010158	add	sp, sp, #0xa0
000000000001015c	ret
0000000000010160	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#hashCode(){}kotlin.Int:
0000000000010164	sub	sp, sp, #0x90
0000000000010168	stp	x28, x27, [sp, #0x30]
000000000001016c	stp	x26, x25, [sp, #0x40]
0000000000010170	stp	x24, x23, [sp, #0x50]
0000000000010174	stp	x22, x21, [sp, #0x60]
0000000000010178	stp	x20, x19, [sp, #0x70]
000000000001017c	stp	x29, x30, [sp, #0x80]
0000000000010180	add	x29, sp, #0x80
0000000000010184	mov	x19, x0
0000000000010188	movi.16b	v0, #0x0
000000000001018c	stp	q0, q0, [sp]
0000000000010190	str	q0, [sp, #0x20]
0000000000010194	mov	x8, sp
0000000000010198	add	x20, x8, #0x20
000000000001019c	add	x22, x8, #0x18
00000000000101a0	add	x21, x8, #0x28
00000000000101a4	adrp	x0, 106 ; 0x7a000
00000000000101a8	add	x0, x0, #0x2c0
00000000000101ac	ldr	x9, [x0]
00000000000101b0	blr	x9
00000000000101b4	ldr	x26, [x0]
00000000000101b8	ldr	x9, [x26, #0x110]
00000000000101bc	str	x8, [x26, #0x110]
00000000000101c0	mov	x8, #0x600000000
00000000000101c4	stp	x9, x8, [sp, #0x8]
00000000000101c8	adr	x27, #0x840c1
00000000000101cc	nop
00000000000101d0	ldarb	w8, [x27]
00000000000101d4	tbz	w8, #0x0, 0x101dc
00000000000101d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000101dc	mov	x0, x19
00000000000101e0	mov	x1, x22
00000000000101e4	bl	_Kotlin_NSDictionaryAsKMap_keyIterator
00000000000101e8	mov	x23, x0
00000000000101ec	mov	w22, #0x0
00000000000101f0	mov	w28, #0xa0
00000000000101f4	b	0x1022c
00000000000101f8	mov	w24, #0x0
00000000000101fc	mov	x0, x19
0000000000010200	mov	x1, x25
0000000000010204	mov	x2, x21
0000000000010208	bl	_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification
000000000001020c	cbz	x0, 0x10224
0000000000010210	ldr	x8, [x0]
0000000000010214	and	x8, x8, #0xfffffffffffffffc
0000000000010218	ldr	x8, [x8]
000000000001021c	ldr	x8, [x8, #0x78]
0000000000010220	blr	x8
0000000000010224	eor	w8, w24, w0
0000000000010228	add	w22, w22, w8
000000000001022c	ldr	x8, [x23]
0000000000010230	and	x8, x8, #0xfffffffffffffffc
0000000000010234	ldr	x8, [x8]
0000000000010238	ldr	w9, [x8, #0x3c]
000000000001023c	ldr	x8, [x8, #0x40]
0000000000010240	tbnz	w9, #0x1f, 0x10264
0000000000010244	and	x9, x9, x28
0000000000010248	add	x8, x8, x9, lsl #4
000000000001024c	ldr	x8, [x8, #0x8]
0000000000010250	ldr	x8, [x8]
0000000000010254	mov	x0, x23
0000000000010258	blr	x8
000000000001025c	tbnz	w0, #0x0, 0x10300
0000000000010260	b	0x10404
0000000000010264	neg	w10, w9
0000000000010268	mvn	w9, w9
000000000001026c	cmp	w10, #0x9
0000000000010270	b.ge	0x102a8
0000000000010274	cmp	w10, #0x2
0000000000010278	b.lt	0x102dc
000000000001027c	mov	x10, #0x0
0000000000010280	mov	x11, x8
0000000000010284	ldr	w12, [x11]
0000000000010288	cmp	w12, #0x9f
000000000001028c	b.gt	0x102e4
0000000000010290	add	x10, x10, #0x1
0000000000010294	add	x11, x11, #0x10
0000000000010298	cmp	x9, x10
000000000001029c	b.ne	0x10284
00000000000102a0	mov	x10, x9
00000000000102a4	b	0x102e4
00000000000102a8	mov	w10, #0x0
00000000000102ac	add	w11, w9, w10
00000000000102b0	cmp	w11, #0x0
00000000000102b4	cinc	w11, w11, lt
00000000000102b8	asr	w11, w11, #1
00000000000102bc	sbfiz	x12, x11, #4, #32
00000000000102c0	ldr	w12, [x8, x12]
00000000000102c4	cmp	w12, #0xa0
00000000000102c8	csinc	w10, w10, w11, ge
00000000000102cc	csel	w9, w9, w11, lt
00000000000102d0	cmp	w10, w9
00000000000102d4	b.lt	0x102ac
00000000000102d8	b	0x102e4
00000000000102dc	mov	w10, #0x0
00000000000102e0	b	0x102e4
00000000000102e4	sxtw	x9, w10
00000000000102e8	add	x8, x8, x9, lsl #4
00000000000102ec	ldr	x8, [x8, #0x8]
00000000000102f0	ldr	x8, [x8]
00000000000102f4	mov	x0, x23
00000000000102f8	blr	x8
00000000000102fc	tbz	w0, #0x0, 0x10404
0000000000010300	ldarb	w8, [x27]
0000000000010304	tbz	w8, #0x0, 0x1030c
0000000000010308	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001030c	ldr	x8, [x23]
0000000000010310	and	x8, x8, #0xfffffffffffffffc
0000000000010314	ldr	x8, [x8]
0000000000010318	ldr	w9, [x8, #0x3c]
000000000001031c	ldr	x8, [x8, #0x40]
0000000000010320	tbnz	w9, #0x1f, 0x1032c
0000000000010324	and	x9, x9, x28
0000000000010328	b	0x103b0
000000000001032c	neg	w10, w9
0000000000010330	mvn	w9, w9
0000000000010334	cmp	w10, #0x9
0000000000010338	b.ge	0x10370
000000000001033c	cmp	w10, #0x2
0000000000010340	b.lt	0x103a4
0000000000010344	mov	x10, #0x0
0000000000010348	mov	x11, x8
000000000001034c	ldr	w12, [x11]
0000000000010350	cmp	w12, #0x9f
0000000000010354	b.gt	0x103ac
0000000000010358	add	x10, x10, #0x1
000000000001035c	add	x11, x11, #0x10
0000000000010360	cmp	x9, x10
0000000000010364	b.ne	0x1034c
0000000000010368	mov	x10, x9
000000000001036c	b	0x103ac
0000000000010370	mov	w10, #0x0
0000000000010374	add	w11, w9, w10
0000000000010378	cmp	w11, #0x0
000000000001037c	cinc	w11, w11, lt
0000000000010380	asr	w11, w11, #1
0000000000010384	sbfiz	x12, x11, #4, #32
0000000000010388	ldr	w12, [x8, x12]
000000000001038c	cmp	w12, #0xa0
0000000000010390	csinc	w10, w10, w11, ge
0000000000010394	csel	w9, w9, w11, lt
0000000000010398	cmp	w10, w9
000000000001039c	b.lt	0x10374
00000000000103a0	b	0x103ac
00000000000103a4	mov	w10, #0x0
00000000000103a8	b	0x103ac
00000000000103ac	sxtw	x9, w10
00000000000103b0	add	x8, x8, x9, lsl #4
00000000000103b4	ldr	x8, [x8, #0x8]
00000000000103b8	ldr	x8, [x8, #0x8]
00000000000103bc	mov	x0, x23
00000000000103c0	mov	x1, x20
00000000000103c4	blr	x8
00000000000103c8	mov	x25, x0
00000000000103cc	cbz	x0, 0x101f8
00000000000103d0	ldr	x8, [x25]
00000000000103d4	and	x8, x8, #0xfffffffffffffffc
00000000000103d8	ldr	x8, [x8]
00000000000103dc	ldr	x8, [x8, #0x78]
00000000000103e0	mov	x0, x25
00000000000103e4	blr	x8
00000000000103e8	mov	x24, x0
00000000000103ec	mov	x0, x19
00000000000103f0	mov	x1, x25
00000000000103f4	mov	x2, x21
00000000000103f8	bl	_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification
00000000000103fc	cbnz	x0, 0x10210
0000000000010400	b	0x10224
0000000000010404	ldr	x8, [sp, #0x8]
0000000000010408	str	x8, [x26, #0x110]
000000000001040c	mov	x0, x22
0000000000010410	ldp	x29, x30, [sp, #0x80]
0000000000010414	ldp	x20, x19, [sp, #0x70]
0000000000010418	ldp	x22, x21, [sp, #0x60]
000000000001041c	ldp	x24, x23, [sp, #0x50]
0000000000010420	ldp	x26, x25, [sp, #0x40]
0000000000010424	ldp	x28, x27, [sp, #0x30]
0000000000010428	add	sp, sp, #0x90
000000000001042c	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#toString(){}kotlin.String:
0000000000010430	sub	sp, sp, #0x60
0000000000010434	stp	x22, x21, [sp, #0x30]
0000000000010438	stp	x20, x19, [sp, #0x40]
000000000001043c	stp	x29, x30, [sp, #0x50]
0000000000010440	add	x29, sp, #0x50
0000000000010444	mov	x19, x1
0000000000010448	mov	x20, x0
000000000001044c	movi.16b	v0, #0x0
0000000000010450	stp	q0, q0, [sp]
0000000000010454	str	xzr, [sp, #0x20]
0000000000010458	adrp	x0, 106 ; 0x7a000
000000000001045c	add	x0, x0, #0x2c0
0000000000010460	ldr	x8, [x0]
0000000000010464	blr	x8
0000000000010468	ldr	x22, [x0]
000000000001046c	ldr	x8, [x22, #0x110]
0000000000010470	mov	x9, sp
0000000000010474	str	x9, [x22, #0x110]
0000000000010478	mov	x9, #0x500000000
000000000001047c	stp	x8, x9, [sp, #0x8]
0000000000010480	adr	x8, #0x83e09
0000000000010484	nop
0000000000010488	ldarb	w8, [x8]
000000000001048c	tbz	w8, #0x0, 0x10494
0000000000010490	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010494	ldr	x8, [x22, #0x118]
0000000000010498	add	x0, x8, #0x70
000000000001049c	mov	w1, #0x18
00000000000104a0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000104a4	mov	x21, x0
00000000000104a8	adr	x8, #0x52cf8
00000000000104ac	nop
00000000000104b0	str	x8, [x21, #0x10]!
00000000000104b4	stur	xzr, [x21, #-0x8]
00000000000104b8	str	x21, [sp, #0x18]
00000000000104bc	str	x20, [x21, #0x8]
00000000000104c0	str	x21, [sp, #0x18]
00000000000104c4	ldr	x8, [x22, #0x118]
00000000000104c8	add	x0, x8, #0x70
00000000000104cc	mov	w1, #0x18
00000000000104d0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000104d4	adr	x8, #0x52eac
00000000000104d8	nop
00000000000104dc	mov	x3, x0
00000000000104e0	str	x8, [x3, #0x10]!
00000000000104e4	stur	xzr, [x3, #-0x8]
00000000000104e8	str	x3, [sp, #0x20]
00000000000104ec	str	x20, [x3, #0x8]
00000000000104f0	adr	x1, #0x5e1f0
00000000000104f4	nop
00000000000104f8	adr	x2, #0x5e208
00000000000104fc	nop
0000000000010500	mov	x0, x21
0000000000010504	mov	x4, x19
0000000000010508	bl	"_kfun:kotlin.collections#joinToString$default__at__kotlin.collections.Iterable<0:0>(kotlin.CharSequence?;kotlin.CharSequence?;kotlin.CharSequence?;kotlin.Int;kotlin.CharSequence?;kotlin.Function1<0:0,kotlin.CharSequence>?;kotlin.Int){0§<kotlin.Any?>}kotlin.String"
000000000001050c	str	x0, [x19]
0000000000010510	ldr	x8, [sp, #0x8]
0000000000010514	str	x8, [x22, #0x110]
0000000000010518	ldp	x29, x30, [sp, #0x50]
000000000001051c	ldp	x20, x19, [sp, #0x40]
0000000000010520	ldp	x22, x21, [sp, #0x30]
0000000000010524	add	sp, sp, #0x60
0000000000010528	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-size>(){}kotlin.Int:
000000000001052c	stp	x20, x19, [sp, #-0x20]!
0000000000010530	stp	x29, x30, [sp, #0x10]
0000000000010534	add	x29, sp, #0x10
0000000000010538	mov	x19, x0
000000000001053c	adr	x8, #0x83d4d
0000000000010540	nop
0000000000010544	ldarb	w8, [x8]
0000000000010548	tbz	w8, #0x0, 0x10550
000000000001054c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010550	ldar	x8, [x19]
0000000000010554	and	x8, x8, #0xfffffffffffffffc
0000000000010558	ldr	x9, [x8]
000000000001055c	cmp	x8, #0x0
0000000000010560	ccmp	x9, x8, #0x4, ne
0000000000010564	b.ne	0x10570
0000000000010568	mov	x0, #0x0
000000000001056c	b	0x10578
0000000000010570	add	x8, x8, #0x10
0000000000010574	ldar	x0, [x8]
0000000000010578	nop
000000000001057c	ldr	x1, #0x662dc ; Objc selector ref: count
0000000000010580	bl	0x55584 ; Objc message: -[x0 count]
0000000000010584	lsr	x8, x0, #31
0000000000010588	cbnz	x8, 0x10598
000000000001058c	ldp	x29, x30, [sp, #0x10]
0000000000010590	ldp	x20, x19, [sp], #0x20
0000000000010594	ret
0000000000010598	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#isEmpty(){}kotlin.Boolean:
000000000001059c	stp	x20, x19, [sp, #-0x20]!
00000000000105a0	stp	x29, x30, [sp, #0x10]
00000000000105a4	add	x29, sp, #0x10
00000000000105a8	mov	x19, x0
00000000000105ac	adr	x8, #0x83cdd
00000000000105b0	nop
00000000000105b4	ldarb	w8, [x8]
00000000000105b8	tbz	w8, #0x0, 0x105c0
00000000000105bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000105c0	ldar	x8, [x19]
00000000000105c4	and	x8, x8, #0xfffffffffffffffc
00000000000105c8	ldr	x9, [x8]
00000000000105cc	cmp	x8, #0x0
00000000000105d0	ccmp	x9, x8, #0x4, ne
00000000000105d4	b.ne	0x105e0
00000000000105d8	mov	x0, #0x0
00000000000105dc	b	0x105e8
00000000000105e0	add	x8, x8, #0x10
00000000000105e4	ldar	x0, [x8]
00000000000105e8	nop
00000000000105ec	ldr	x1, #0x6626c ; Objc selector ref: count
00000000000105f0	bl	0x55584 ; Objc message: -[x0 count]
00000000000105f4	lsr	x8, x0, #31
00000000000105f8	cbnz	x8, 0x10610
00000000000105fc	cmp	w0, #0x0
0000000000010600	cset	w0, eq
0000000000010604	ldp	x29, x30, [sp, #0x10]
0000000000010608	ldp	x20, x19, [sp], #0x20
000000000001060c	ret
0000000000010610	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-keys>(){}kotlin.collections.Set<kotlin.Any?>:
0000000000010614	stp	x20, x19, [sp, #-0x20]!
0000000000010618	stp	x29, x30, [sp, #0x10]
000000000001061c	add	x29, sp, #0x10
0000000000010620	mov	x19, x1
0000000000010624	mov	x20, x0
0000000000010628	adr	x8, #0x83c61
000000000001062c	nop
0000000000010630	ldarb	w8, [x8]
0000000000010634	tbz	w8, #0x0, 0x1063c
0000000000010638	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001063c	adrp	x0, 106 ; 0x7a000
0000000000010640	add	x0, x0, #0x2c0
0000000000010644	ldr	x8, [x0]
0000000000010648	blr	x8
000000000001064c	ldr	x8, [x0]
0000000000010650	ldr	x8, [x8, #0x118]
0000000000010654	add	x0, x8, #0x70
0000000000010658	mov	w1, #0x18
000000000001065c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000010660	adr	x8, #0x529c0
0000000000010664	nop
0000000000010668	str	x8, [x0, #0x10]!
000000000001066c	stur	xzr, [x0, #-0x8]
0000000000010670	str	x0, [x19]
0000000000010674	str	x20, [x0, #0x8]
0000000000010678	str	x0, [x19]
000000000001067c	ldp	x29, x30, [sp, #0x10]
0000000000010680	ldp	x20, x19, [sp], #0x20
0000000000010684	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-values>(){}kotlin.collections.Collection<kotlin.Any?>:
0000000000010688	stp	x20, x19, [sp, #-0x20]!
000000000001068c	stp	x29, x30, [sp, #0x10]
0000000000010690	add	x29, sp, #0x10
0000000000010694	mov	x19, x1
0000000000010698	mov	x20, x0
000000000001069c	adr	x8, #0x83bed
00000000000106a0	nop
00000000000106a4	ldarb	w8, [x8]
00000000000106a8	tbz	w8, #0x0, 0x106b0
00000000000106ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000106b0	adrp	x0, 106 ; 0x7a000
00000000000106b4	add	x0, x0, #0x2c0
00000000000106b8	ldr	x8, [x0]
00000000000106bc	blr	x8
00000000000106c0	ldr	x8, [x0]
00000000000106c4	ldr	x8, [x8, #0x118]
00000000000106c8	add	x0, x8, #0x70
00000000000106cc	mov	w1, #0x18
00000000000106d0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000106d4	adr	x8, #0x52a0c
00000000000106d8	nop
00000000000106dc	str	x8, [x0, #0x10]!
00000000000106e0	stur	xzr, [x0, #-0x8]
00000000000106e4	str	x0, [x19]
00000000000106e8	str	x20, [x0, #0x8]
00000000000106ec	str	x0, [x19]
00000000000106f0	ldp	x29, x30, [sp, #0x10]
00000000000106f4	ldp	x20, x19, [sp], #0x20
00000000000106f8	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-entries>(){}kotlin.collections.Set<kotlin.collections.Map.Entry<kotlin.Any?,kotlin.Any?>>:
00000000000106fc	stp	x20, x19, [sp, #-0x20]!
0000000000010700	stp	x29, x30, [sp, #0x10]
0000000000010704	add	x29, sp, #0x10
0000000000010708	mov	x19, x1
000000000001070c	mov	x20, x0
0000000000010710	adr	x8, #0x83b79
0000000000010714	nop
0000000000010718	ldarb	w8, [x8]
000000000001071c	tbz	w8, #0x0, 0x10724
0000000000010720	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010724	adrp	x0, 106 ; 0x7a000
0000000000010728	add	x0, x0, #0x2c0
000000000001072c	ldr	x8, [x0]
0000000000010730	blr	x8
0000000000010734	ldr	x8, [x0]
0000000000010738	ldr	x8, [x8, #0x118]
000000000001073c	add	x0, x8, #0x70
0000000000010740	mov	w1, #0x18
0000000000010744	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000010748	adr	x8, #0x52a58
000000000001074c	nop
0000000000010750	str	x8, [x0, #0x10]!
0000000000010754	stur	xzr, [x0, #-0x8]
0000000000010758	str	x0, [x19]
000000000001075c	str	x20, [x0, #0x8]
0000000000010760	str	x0, [x19]
0000000000010764	ldp	x29, x30, [sp, #0x10]
0000000000010768	ldp	x20, x19, [sp], #0x20
000000000001076c	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Keys.<get-size>#internal:
0000000000010770	stp	x20, x19, [sp, #-0x20]!
0000000000010774	stp	x29, x30, [sp, #0x10]
0000000000010778	add	x29, sp, #0x10
000000000001077c	mov	x19, x0
0000000000010780	adr	x8, #0x83b09
0000000000010784	nop
0000000000010788	ldarb	w8, [x8]
000000000001078c	tbz	w8, #0x0, 0x10794
0000000000010790	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010794	ldr	x8, [x19, #0x8]
0000000000010798	ldar	x8, [x8]
000000000001079c	and	x8, x8, #0xfffffffffffffffc
00000000000107a0	ldr	x9, [x8]
00000000000107a4	cmp	x8, #0x0
00000000000107a8	ccmp	x9, x8, #0x4, ne
00000000000107ac	b.ne	0x107b8
00000000000107b0	mov	x0, #0x0
00000000000107b4	b	0x107c0
00000000000107b8	add	x8, x8, #0x10
00000000000107bc	ldar	x0, [x8]
00000000000107c0	nop
00000000000107c4	ldr	x1, #0x66094 ; Objc selector ref: count
00000000000107c8	bl	0x55584 ; Objc message: -[x0 count]
00000000000107cc	lsr	x8, x0, #31
00000000000107d0	cbnz	x8, 0x107e0
00000000000107d4	ldp	x29, x30, [sp, #0x10]
00000000000107d8	ldp	x20, x19, [sp], #0x20
00000000000107dc	ret
00000000000107e0	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Keys.iterator#internal:
00000000000107e4	stp	x20, x19, [sp, #-0x20]!
00000000000107e8	stp	x29, x30, [sp, #0x10]
00000000000107ec	add	x29, sp, #0x10
00000000000107f0	mov	x19, x1
00000000000107f4	mov	x20, x0
00000000000107f8	adr	x8, #0x83a91
00000000000107fc	nop
0000000000010800	ldarb	w8, [x8]
0000000000010804	tbz	w8, #0x0, 0x1080c
0000000000010808	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001080c	ldr	x0, [x20, #0x8]
0000000000010810	mov	x1, x19
0000000000010814	bl	_Kotlin_NSDictionaryAsKMap_keyIterator
0000000000010818	str	x0, [x19]
000000000001081c	ldp	x29, x30, [sp, #0x10]
0000000000010820	ldp	x20, x19, [sp], #0x20
0000000000010824	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Keys.contains#internal:
0000000000010828	stp	x20, x19, [sp, #-0x20]!
000000000001082c	stp	x29, x30, [sp, #0x10]
0000000000010830	add	x29, sp, #0x10
0000000000010834	mov	x19, x1
0000000000010838	mov	x20, x0
000000000001083c	adr	x8, #0x83a4d
0000000000010840	nop
0000000000010844	ldarb	w8, [x8]
0000000000010848	tbz	w8, #0x0, 0x10850
000000000001084c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010850	ldr	x0, [x20, #0x8]
0000000000010854	mov	x1, x19
0000000000010858	ldp	x29, x30, [sp, #0x10]
000000000001085c	ldp	x20, x19, [sp], #0x20
0000000000010860	b	_Kotlin_NSDictionaryAsKMap_containsKey
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Values.<get-size>#internal:
0000000000010864	stp	x20, x19, [sp, #-0x20]!
0000000000010868	stp	x29, x30, [sp, #0x10]
000000000001086c	add	x29, sp, #0x10
0000000000010870	mov	x19, x0
0000000000010874	adr	x8, #0x83a15
0000000000010878	nop
000000000001087c	ldarb	w8, [x8]
0000000000010880	tbz	w8, #0x0, 0x10888
0000000000010884	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010888	ldr	x8, [x19, #0x8]
000000000001088c	ldar	x8, [x8]
0000000000010890	and	x8, x8, #0xfffffffffffffffc
0000000000010894	ldr	x9, [x8]
0000000000010898	cmp	x8, #0x0
000000000001089c	ccmp	x9, x8, #0x4, ne
00000000000108a0	b.ne	0x108ac
00000000000108a4	mov	x0, #0x0
00000000000108a8	b	0x108b4
00000000000108ac	add	x8, x8, #0x10
00000000000108b0	ldar	x0, [x8]
00000000000108b4	nop
00000000000108b8	ldr	x1, #0x65fa0 ; Objc selector ref: count
00000000000108bc	bl	0x55584 ; Objc message: -[x0 count]
00000000000108c0	lsr	x8, x0, #31
00000000000108c4	cbnz	x8, 0x108d4
00000000000108c8	ldp	x29, x30, [sp, #0x10]
00000000000108cc	ldp	x20, x19, [sp], #0x20
00000000000108d0	ret
00000000000108d4	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Values.iterator#internal:
00000000000108d8	stp	x20, x19, [sp, #-0x20]!
00000000000108dc	stp	x29, x30, [sp, #0x10]
00000000000108e0	add	x29, sp, #0x10
00000000000108e4	mov	x19, x1
00000000000108e8	mov	x20, x0
00000000000108ec	adr	x8, #0x8399d
00000000000108f0	nop
00000000000108f4	ldarb	w8, [x8]
00000000000108f8	tbz	w8, #0x0, 0x10900
00000000000108fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010900	ldr	x0, [x20, #0x8]
0000000000010904	mov	x1, x19
0000000000010908	bl	_Kotlin_NSDictionaryAsKMap_valueIterator
000000000001090c	str	x0, [x19]
0000000000010910	ldp	x29, x30, [sp, #0x10]
0000000000010914	ldp	x20, x19, [sp], #0x20
0000000000010918	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Values.contains#internal:
000000000001091c	stp	x20, x19, [sp, #-0x20]!
0000000000010920	stp	x29, x30, [sp, #0x10]
0000000000010924	add	x29, sp, #0x10
0000000000010928	mov	x19, x1
000000000001092c	mov	x20, x0
0000000000010930	adr	x8, #0x83959
0000000000010934	nop
0000000000010938	ldarb	w8, [x8]
000000000001093c	tbz	w8, #0x0, 0x10944
0000000000010940	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010944	ldr	x0, [x20, #0x8]
0000000000010948	mov	x1, x19
000000000001094c	ldp	x29, x30, [sp, #0x10]
0000000000010950	ldp	x20, x19, [sp], #0x20
0000000000010954	b	_Kotlin_NSDictionaryAsKMap_containsValue
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entries.<get-size>#internal:
0000000000010958	stp	x20, x19, [sp, #-0x20]!
000000000001095c	stp	x29, x30, [sp, #0x10]
0000000000010960	add	x29, sp, #0x10
0000000000010964	mov	x19, x0
0000000000010968	adr	x8, #0x83921
000000000001096c	nop
0000000000010970	ldarb	w8, [x8]
0000000000010974	tbz	w8, #0x0, 0x1097c
0000000000010978	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001097c	ldr	x8, [x19, #0x8]
0000000000010980	ldar	x8, [x8]
0000000000010984	and	x8, x8, #0xfffffffffffffffc
0000000000010988	ldr	x9, [x8]
000000000001098c	cmp	x8, #0x0
0000000000010990	ccmp	x9, x8, #0x4, ne
0000000000010994	b.ne	0x109a0
0000000000010998	mov	x0, #0x0
000000000001099c	b	0x109a8
00000000000109a0	add	x8, x8, #0x10
00000000000109a4	ldar	x0, [x8]
00000000000109a8	nop
00000000000109ac	ldr	x1, #0x65eac ; Objc selector ref: count
00000000000109b0	bl	0x55584 ; Objc message: -[x0 count]
00000000000109b4	lsr	x8, x0, #31
00000000000109b8	cbnz	x8, 0x109c8
00000000000109bc	ldp	x29, x30, [sp, #0x10]
00000000000109c0	ldp	x20, x19, [sp], #0x20
00000000000109c4	ret
00000000000109c8	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entries.iterator#internal:
00000000000109cc	sub	sp, sp, #0x50
00000000000109d0	stp	x22, x21, [sp, #0x20]
00000000000109d4	stp	x20, x19, [sp, #0x30]
00000000000109d8	stp	x29, x30, [sp, #0x40]
00000000000109dc	add	x29, sp, #0x40
00000000000109e0	mov	x19, x1
00000000000109e4	mov	x20, x0
00000000000109e8	adr	x8, #0x838a1
00000000000109ec	nop
00000000000109f0	ldarb	w8, [x8]
00000000000109f4	tbz	w8, #0x0, 0x109fc
00000000000109f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000109fc	ldr	x20, [x20, #0x8]
0000000000010a00	adrp	x0, 106 ; 0x7a000
0000000000010a04	add	x0, x0, #0x2c0
0000000000010a08	ldr	x8, [x0]
0000000000010a0c	blr	x8
0000000000010a10	mov	x21, x0
0000000000010a14	ldr	x8, [x0]
0000000000010a18	ldr	x8, [x8, #0x118]
0000000000010a1c	add	x0, x8, #0x70
0000000000010a20	mov	w1, #0x20
0000000000010a24	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000010a28	mov	x22, x0
0000000000010a2c	adr	x8, #0x528c4
0000000000010a30	nop
0000000000010a34	str	x8, [x22, #0x10]!
0000000000010a38	stur	xzr, [x22, #-0x8]
0000000000010a3c	str	x22, [x19]
0000000000010a40	movi.16b	v0, #0x0
0000000000010a44	stp	q0, q0, [sp]
0000000000010a48	mov	x8, sp
0000000000010a4c	add	x1, x8, #0x18
0000000000010a50	ldr	x9, [x21]
0000000000010a54	ldr	x10, [x9, #0x110]
0000000000010a58	str	x8, [x9, #0x110]
0000000000010a5c	mov	x8, #0x400000000
0000000000010a60	stp	x10, x8, [sp, #0x8]
0000000000010a64	str	x20, [x22, #0x10]
0000000000010a68	mov	x0, x20
0000000000010a6c	bl	_Kotlin_NSDictionaryAsKMap_keyIterator
0000000000010a70	str	x0, [x22, #0x8]
0000000000010a74	ldr	x8, [x21]
0000000000010a78	ldr	x9, [sp, #0x8]
0000000000010a7c	str	x9, [x8, #0x110]
0000000000010a80	str	x22, [x19]
0000000000010a84	mov	x0, x22
0000000000010a88	ldp	x29, x30, [sp, #0x40]
0000000000010a8c	ldp	x20, x19, [sp, #0x30]
0000000000010a90	ldp	x22, x21, [sp, #0x20]
0000000000010a94	add	sp, sp, #0x50
0000000000010a98	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entries.contains#internal:
0000000000010a9c	sub	sp, sp, #0x70
0000000000010aa0	stp	x24, x23, [sp, #0x30]
0000000000010aa4	stp	x22, x21, [sp, #0x40]
0000000000010aa8	stp	x20, x19, [sp, #0x50]
0000000000010aac	stp	x29, x30, [sp, #0x60]
0000000000010ab0	add	x29, sp, #0x60
0000000000010ab4	mov	x19, x1
0000000000010ab8	mov	x20, x0
0000000000010abc	movi.16b	v0, #0x0
0000000000010ac0	stp	q0, q0, [sp]
0000000000010ac4	str	xzr, [sp, #0x20]
0000000000010ac8	mov	x22, sp
0000000000010acc	adrp	x0, 106 ; 0x7a000
0000000000010ad0	add	x0, x0, #0x2c0
0000000000010ad4	ldr	x8, [x0]
0000000000010ad8	blr	x8
0000000000010adc	ldr	x23, [x0]
0000000000010ae0	ldr	x8, [x23, #0x110]
0000000000010ae4	str	x22, [x23, #0x110]
0000000000010ae8	mov	x9, #0x500000000
0000000000010aec	stp	x8, x9, [sp, #0x8]
0000000000010af0	adr	x8, #0x83799
0000000000010af4	nop
0000000000010af8	ldarb	w8, [x8]
0000000000010afc	tbz	w8, #0x0, 0x10b04
0000000000010b00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010b04	cbz	x19, 0x10c48
0000000000010b08	ldr	x8, [x19]
0000000000010b0c	and	x8, x8, #0xfffffffffffffffc
0000000000010b10	ldr	x8, [x8]
0000000000010b14	ldr	w9, [x8, #0x3c]
0000000000010b18	ldr	x8, [x8, #0x40]
0000000000010b1c	tbnz	w9, #0x1f, 0x10b68
0000000000010b20	mov	w10, #0xa8
0000000000010b24	and	x9, x9, x10
0000000000010b28	lsl	x9, x9, #4
0000000000010b2c	ldr	w8, [x8, x9]
0000000000010b30	cmp	w8, #0xa8
0000000000010b34	b.ne	0x10c48
0000000000010b38	add	x21, x22, #0x20
0000000000010b3c	add	x1, x22, #0x18
0000000000010b40	ldr	x20, [x20, #0x8]
0000000000010b44	ldr	x8, [x19]
0000000000010b48	and	x8, x8, #0xfffffffffffffffc
0000000000010b4c	ldr	x8, [x8]
0000000000010b50	ldr	w9, [x8, #0x3c]
0000000000010b54	ldr	x8, [x8, #0x40]
0000000000010b58	tbnz	w9, #0x1f, 0x10bc0
0000000000010b5c	mov	w10, #0xa8
0000000000010b60	and	x9, x9, x10
0000000000010b64	b	0x10cc4
0000000000010b68	neg	w10, w9
0000000000010b6c	mvn	w9, w9
0000000000010b70	cmp	w10, #0x9
0000000000010b74	b.ge	0x10c04
0000000000010b78	cmp	w10, #0x2
0000000000010b7c	b.lt	0x10c50
0000000000010b80	mov	x10, #0x0
0000000000010b84	mov	x11, x8
0000000000010b88	ldr	w12, [x11]
0000000000010b8c	cmp	w12, #0xa7
0000000000010b90	b.gt	0x10ca0
0000000000010b94	add	x10, x10, #0x1
0000000000010b98	add	x11, x11, #0x10
0000000000010b9c	cmp	x9, x10
0000000000010ba0	b.ne	0x10b88
0000000000010ba4	mov	x10, x9
0000000000010ba8	sxtw	x9, w10
0000000000010bac	lsl	x9, x9, #4
0000000000010bb0	ldr	w8, [x8, x9]
0000000000010bb4	cmp	w8, #0xa8
0000000000010bb8	b.eq	0x10b38
0000000000010bbc	b	0x10c48
0000000000010bc0	neg	w10, w9
0000000000010bc4	mvn	w9, w9
0000000000010bc8	cmp	w10, #0x9
0000000000010bcc	b.ge	0x10c6c
0000000000010bd0	cmp	w10, #0x2
0000000000010bd4	b.lt	0x10cb8
0000000000010bd8	mov	x10, #0x0
0000000000010bdc	mov	x11, x8
0000000000010be0	ldr	w12, [x11]
0000000000010be4	cmp	w12, #0xa7
0000000000010be8	b.gt	0x10cc0
0000000000010bec	add	x10, x10, #0x1
0000000000010bf0	add	x11, x11, #0x10
0000000000010bf4	cmp	x9, x10
0000000000010bf8	b.ne	0x10be0
0000000000010bfc	mov	x10, x9
0000000000010c00	b	0x10cc0
0000000000010c04	mov	w10, #0x0
0000000000010c08	add	w11, w9, w10
0000000000010c0c	cmp	w11, #0x0
0000000000010c10	cinc	w11, w11, lt
0000000000010c14	asr	w11, w11, #1
0000000000010c18	sbfiz	x12, x11, #4, #32
0000000000010c1c	ldr	w12, [x8, x12]
0000000000010c20	cmp	w12, #0xa8
0000000000010c24	csinc	w10, w10, w11, ge
0000000000010c28	csel	w9, w9, w11, lt
0000000000010c2c	cmp	w10, w9
0000000000010c30	b.lt	0x10c08
0000000000010c34	sxtw	x9, w10
0000000000010c38	lsl	x9, x9, #4
0000000000010c3c	ldr	w8, [x8, x9]
0000000000010c40	cmp	w8, #0xa8
0000000000010c44	b.eq	0x10b38
0000000000010c48	mov	w0, #0x0
0000000000010c4c	b	0x10dac
0000000000010c50	mov	w10, #0x0
0000000000010c54	sxtw	x9, w10
0000000000010c58	lsl	x9, x9, #4
0000000000010c5c	ldr	w8, [x8, x9]
0000000000010c60	cmp	w8, #0xa8
0000000000010c64	b.eq	0x10b38
0000000000010c68	b	0x10c48
0000000000010c6c	mov	w10, #0x0
0000000000010c70	add	w11, w9, w10
0000000000010c74	cmp	w11, #0x0
0000000000010c78	cinc	w11, w11, lt
0000000000010c7c	asr	w11, w11, #1
0000000000010c80	sbfiz	x12, x11, #4, #32
0000000000010c84	ldr	w12, [x8, x12]
0000000000010c88	cmp	w12, #0xa8
0000000000010c8c	csinc	w10, w10, w11, ge
0000000000010c90	csel	w9, w9, w11, lt
0000000000010c94	cmp	w10, w9
0000000000010c98	b.lt	0x10c70
0000000000010c9c	b	0x10cc0
0000000000010ca0	sxtw	x9, w10
0000000000010ca4	lsl	x9, x9, #4
0000000000010ca8	ldr	w8, [x8, x9]
0000000000010cac	cmp	w8, #0xa8
0000000000010cb0	b.eq	0x10b38
0000000000010cb4	b	0x10c48
0000000000010cb8	mov	w10, #0x0
0000000000010cbc	b	0x10cc0
0000000000010cc0	sxtw	x9, w10
0000000000010cc4	add	x8, x8, x9, lsl #4
0000000000010cc8	ldr	x8, [x8, #0x8]
0000000000010ccc	ldr	x8, [x8]
0000000000010cd0	mov	x0, x19
0000000000010cd4	blr	x8
0000000000010cd8	mov	x22, x0
0000000000010cdc	ldr	x8, [x19]
0000000000010ce0	and	x8, x8, #0xfffffffffffffffc
0000000000010ce4	ldr	x8, [x8]
0000000000010ce8	ldr	w9, [x8, #0x3c]
0000000000010cec	ldr	x8, [x8, #0x40]
0000000000010cf0	tbnz	w9, #0x1f, 0x10d00
0000000000010cf4	mov	w10, #0xa8
0000000000010cf8	and	x9, x9, x10
0000000000010cfc	b	0x10d84
0000000000010d00	neg	w10, w9
0000000000010d04	mvn	w9, w9
0000000000010d08	cmp	w10, #0x9
0000000000010d0c	b.ge	0x10d44
0000000000010d10	cmp	w10, #0x2
0000000000010d14	b.lt	0x10d78
0000000000010d18	mov	x10, #0x0
0000000000010d1c	mov	x11, x8
0000000000010d20	ldr	w12, [x11]
0000000000010d24	cmp	w12, #0xa7
0000000000010d28	b.gt	0x10d80
0000000000010d2c	add	x10, x10, #0x1
0000000000010d30	add	x11, x11, #0x10
0000000000010d34	cmp	x9, x10
0000000000010d38	b.ne	0x10d20
0000000000010d3c	mov	x10, x9
0000000000010d40	b	0x10d80
0000000000010d44	mov	w10, #0x0
0000000000010d48	add	w11, w9, w10
0000000000010d4c	cmp	w11, #0x0
0000000000010d50	cinc	w11, w11, lt
0000000000010d54	asr	w11, w11, #1
0000000000010d58	sbfiz	x12, x11, #4, #32
0000000000010d5c	ldr	w12, [x8, x12]
0000000000010d60	cmp	w12, #0xa8
0000000000010d64	csinc	w10, w10, w11, ge
0000000000010d68	csel	w9, w9, w11, lt
0000000000010d6c	cmp	w10, w9
0000000000010d70	b.lt	0x10d48
0000000000010d74	b	0x10d80
0000000000010d78	mov	w10, #0x0
0000000000010d7c	b	0x10d80
0000000000010d80	sxtw	x9, w10
0000000000010d84	add	x8, x8, x9, lsl #4
0000000000010d88	ldr	x8, [x8, #0x8]
0000000000010d8c	ldr	x8, [x8, #0x8]
0000000000010d90	mov	x0, x19
0000000000010d94	mov	x1, x21
0000000000010d98	blr	x8
0000000000010d9c	mov	x2, x0
0000000000010da0	mov	x0, x20
0000000000010da4	mov	x1, x22
0000000000010da8	bl	_Kotlin_NSDictionaryAsKMap_containsEntry
0000000000010dac	ldr	x8, [sp, #0x8]
0000000000010db0	str	x8, [x23, #0x110]
0000000000010db4	ldp	x29, x30, [sp, #0x60]
0000000000010db8	ldp	x20, x19, [sp, #0x50]
0000000000010dbc	ldp	x22, x21, [sp, #0x40]
0000000000010dc0	ldp	x24, x23, [sp, #0x30]
0000000000010dc4	add	sp, sp, #0x70
0000000000010dc8	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.<get-key>#internal:
0000000000010dcc	stp	x20, x19, [sp, #-0x20]!
0000000000010dd0	stp	x29, x30, [sp, #0x10]
0000000000010dd4	add	x29, sp, #0x10
0000000000010dd8	mov	x19, x1
0000000000010ddc	mov	x20, x0
0000000000010de0	adr	x8, #0x834a9
0000000000010de4	nop
0000000000010de8	ldarb	w8, [x8]
0000000000010dec	tbz	w8, #0x0, 0x10df4
0000000000010df0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010df4	ldr	x0, [x20, #0x8]
0000000000010df8	str	x0, [x19]
0000000000010dfc	ldp	x29, x30, [sp, #0x10]
0000000000010e00	ldp	x20, x19, [sp], #0x20
0000000000010e04	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.<get-value>#internal:
0000000000010e08	stp	x20, x19, [sp, #-0x20]!
0000000000010e0c	stp	x29, x30, [sp, #0x10]
0000000000010e10	add	x29, sp, #0x10
0000000000010e14	mov	x19, x1
0000000000010e18	mov	x20, x0
0000000000010e1c	adr	x8, #0x8346d
0000000000010e20	nop
0000000000010e24	ldarb	w8, [x8]
0000000000010e28	tbz	w8, #0x0, 0x10e30
0000000000010e2c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010e30	ldr	x0, [x20, #0x10]
0000000000010e34	str	x0, [x19]
0000000000010e38	ldp	x29, x30, [sp, #0x10]
0000000000010e3c	ldp	x20, x19, [sp], #0x20
0000000000010e40	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.equals#internal:
0000000000010e44	sub	sp, sp, #0x60
0000000000010e48	stp	x22, x21, [sp, #0x30]
0000000000010e4c	stp	x20, x19, [sp, #0x40]
0000000000010e50	stp	x29, x30, [sp, #0x50]
0000000000010e54	add	x29, sp, #0x50
0000000000010e58	mov	x20, x1
0000000000010e5c	mov	x19, x0
0000000000010e60	movi.16b	v0, #0x0
0000000000010e64	stp	q0, q0, [sp]
0000000000010e68	str	xzr, [sp, #0x20]
0000000000010e6c	mov	x22, sp
0000000000010e70	adrp	x0, 106 ; 0x7a000
0000000000010e74	add	x0, x0, #0x2c0
0000000000010e78	ldr	x8, [x0]
0000000000010e7c	blr	x8
0000000000010e80	ldr	x21, [x0]
0000000000010e84	ldr	x8, [x21, #0x110]
0000000000010e88	str	x22, [x21, #0x110]
0000000000010e8c	mov	x9, #0x500000000
0000000000010e90	stp	x8, x9, [sp, #0x8]
0000000000010e94	adr	x8, #0x833f5
0000000000010e98	nop
0000000000010e9c	ldarb	w8, [x8]
0000000000010ea0	tbz	w8, #0x0, 0x10ea8
0000000000010ea4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010ea8	cbz	x20, 0x11098
0000000000010eac	ldr	x8, [x20]
0000000000010eb0	and	x8, x8, #0xfffffffffffffffc
0000000000010eb4	ldr	x8, [x8]
0000000000010eb8	ldr	w9, [x8, #0x3c]
0000000000010ebc	ldr	x8, [x8, #0x40]
0000000000010ec0	tbnz	w9, #0x1f, 0x10ee0
0000000000010ec4	mov	w10, #0xa8
0000000000010ec8	and	x9, x9, x10
0000000000010ecc	lsl	x9, x9, #4
0000000000010ed0	ldr	w8, [x8, x9]
0000000000010ed4	cmp	w8, #0xa8
0000000000010ed8	b.eq	0x10fb0
0000000000010edc	b	0x11098
0000000000010ee0	neg	w10, w9
0000000000010ee4	mvn	w9, w9
0000000000010ee8	cmp	w10, #0x9
0000000000010eec	b.ge	0x10f38
0000000000010ef0	cmp	w10, #0x2
0000000000010ef4	b.lt	0x10f80
0000000000010ef8	mov	x10, #0x0
0000000000010efc	mov	x11, x8
0000000000010f00	ldr	w12, [x11]
0000000000010f04	cmp	w12, #0xa7
0000000000010f08	b.gt	0x10f9c
0000000000010f0c	add	x10, x10, #0x1
0000000000010f10	add	x11, x11, #0x10
0000000000010f14	cmp	x9, x10
0000000000010f18	b.ne	0x10f00
0000000000010f1c	mov	x10, x9
0000000000010f20	sxtw	x9, w10
0000000000010f24	lsl	x9, x9, #4
0000000000010f28	ldr	w8, [x8, x9]
0000000000010f2c	cmp	w8, #0xa8
0000000000010f30	b.eq	0x10fb0
0000000000010f34	b	0x11098
0000000000010f38	mov	w10, #0x0
0000000000010f3c	add	w11, w9, w10
0000000000010f40	cmp	w11, #0x0
0000000000010f44	cinc	w11, w11, lt
0000000000010f48	asr	w11, w11, #1
0000000000010f4c	sbfiz	x12, x11, #4, #32
0000000000010f50	ldr	w12, [x8, x12]
0000000000010f54	cmp	w12, #0xa8
0000000000010f58	csinc	w10, w10, w11, ge
0000000000010f5c	csel	w9, w9, w11, lt
0000000000010f60	cmp	w10, w9
0000000000010f64	b.lt	0x10f3c
0000000000010f68	sxtw	x9, w10
0000000000010f6c	lsl	x9, x9, #4
0000000000010f70	ldr	w8, [x8, x9]
0000000000010f74	cmp	w8, #0xa8
0000000000010f78	b.ne	0x11098
0000000000010f7c	b	0x10fb0
0000000000010f80	mov	w10, #0x0
0000000000010f84	sxtw	x9, w10
0000000000010f88	lsl	x9, x9, #4
0000000000010f8c	ldr	w8, [x8, x9]
0000000000010f90	cmp	w8, #0xa8
0000000000010f94	b.eq	0x10fb0
0000000000010f98	b	0x11098
0000000000010f9c	sxtw	x9, w10
0000000000010fa0	lsl	x9, x9, #4
0000000000010fa4	ldr	w8, [x8, x9]
0000000000010fa8	cmp	w8, #0xa8
0000000000010fac	b.ne	0x11098
0000000000010fb0	add	x1, x22, #0x18
0000000000010fb4	ldr	x8, [x20]
0000000000010fb8	and	x8, x8, #0xfffffffffffffffc
0000000000010fbc	ldr	x8, [x8]
0000000000010fc0	ldr	w9, [x8, #0x3c]
0000000000010fc4	ldr	x8, [x8, #0x40]
0000000000010fc8	tbnz	w9, #0x1f, 0x10fd8
0000000000010fcc	mov	w10, #0xa8
0000000000010fd0	and	x9, x9, x10
0000000000010fd4	b	0x1105c
0000000000010fd8	neg	w10, w9
0000000000010fdc	mvn	w9, w9
0000000000010fe0	cmp	w10, #0x9
0000000000010fe4	b.ge	0x1101c
0000000000010fe8	cmp	w10, #0x2
0000000000010fec	b.lt	0x11050
0000000000010ff0	mov	x10, #0x0
0000000000010ff4	mov	x11, x8
0000000000010ff8	ldr	w12, [x11]
0000000000010ffc	cmp	w12, #0xa7
0000000000011000	b.gt	0x11058
0000000000011004	add	x10, x10, #0x1
0000000000011008	add	x11, x11, #0x10
000000000001100c	cmp	x9, x10
0000000000011010	b.ne	0x10ff8
0000000000011014	mov	x10, x9
0000000000011018	b	0x11058
000000000001101c	mov	w10, #0x0
0000000000011020	add	w11, w9, w10
0000000000011024	cmp	w11, #0x0
0000000000011028	cinc	w11, w11, lt
000000000001102c	asr	w11, w11, #1
0000000000011030	sbfiz	x12, x11, #4, #32
0000000000011034	ldr	w12, [x8, x12]
0000000000011038	cmp	w12, #0xa8
000000000001103c	csinc	w10, w10, w11, ge
0000000000011040	csel	w9, w9, w11, lt
0000000000011044	cmp	w10, w9
0000000000011048	b.lt	0x11020
000000000001104c	b	0x11058
0000000000011050	mov	w10, #0x0
0000000000011054	b	0x11058
0000000000011058	sxtw	x9, w10
000000000001105c	add	x8, x8, x9, lsl #4
0000000000011060	ldr	x8, [x8, #0x8]
0000000000011064	ldr	x8, [x8]
0000000000011068	mov	x0, x20
000000000001106c	blr	x8
0000000000011070	ldr	x1, [x19, #0x8]
0000000000011074	cbz	x0, 0x11094
0000000000011078	ldr	x8, [x0]
000000000001107c	and	x8, x8, #0xfffffffffffffffc
0000000000011080	ldr	x8, [x8]
0000000000011084	ldr	x8, [x8, #0x70]
0000000000011088	blr	x8
000000000001108c	cbz	w0, 0x1109c
0000000000011090	b	0x110b8
0000000000011094	cbz	x1, 0x110b8
0000000000011098	mov	w0, #0x0
000000000001109c	ldr	x8, [sp, #0x8]
00000000000110a0	str	x8, [x21, #0x110]
00000000000110a4	ldp	x29, x30, [sp, #0x50]
00000000000110a8	ldp	x20, x19, [sp, #0x40]
00000000000110ac	ldp	x22, x21, [sp, #0x30]
00000000000110b0	add	sp, sp, #0x60
00000000000110b4	ret
00000000000110b8	add	x1, x22, #0x20
00000000000110bc	ldr	x8, [x20]
00000000000110c0	and	x8, x8, #0xfffffffffffffffc
00000000000110c4	ldr	x8, [x8]
00000000000110c8	ldr	w9, [x8, #0x3c]
00000000000110cc	ldr	x8, [x8, #0x40]
00000000000110d0	tbnz	w9, #0x1f, 0x110e0
00000000000110d4	mov	w10, #0xa8
00000000000110d8	and	x9, x9, x10
00000000000110dc	b	0x11164
00000000000110e0	neg	w10, w9
00000000000110e4	mvn	w9, w9
00000000000110e8	cmp	w10, #0x9
00000000000110ec	b.ge	0x11124
00000000000110f0	cmp	w10, #0x2
00000000000110f4	b.lt	0x11158
00000000000110f8	mov	x10, #0x0
00000000000110fc	mov	x11, x8
0000000000011100	ldr	w12, [x11]
0000000000011104	cmp	w12, #0xa7
0000000000011108	b.gt	0x11160
000000000001110c	add	x10, x10, #0x1
0000000000011110	add	x11, x11, #0x10
0000000000011114	cmp	x9, x10
0000000000011118	b.ne	0x11100
000000000001111c	mov	x10, x9
0000000000011120	b	0x11160
0000000000011124	mov	w10, #0x0
0000000000011128	add	w11, w9, w10
000000000001112c	cmp	w11, #0x0
0000000000011130	cinc	w11, w11, lt
0000000000011134	asr	w11, w11, #1
0000000000011138	sbfiz	x12, x11, #4, #32
000000000001113c	ldr	w12, [x8, x12]
0000000000011140	cmp	w12, #0xa8
0000000000011144	csinc	w10, w10, w11, ge
0000000000011148	csel	w9, w9, w11, lt
000000000001114c	cmp	w10, w9
0000000000011150	b.lt	0x11128
0000000000011154	b	0x11160
0000000000011158	mov	w10, #0x0
000000000001115c	b	0x11160
0000000000011160	sxtw	x9, w10
0000000000011164	add	x8, x8, x9, lsl #4
0000000000011168	ldr	x8, [x8, #0x8]
000000000001116c	ldr	x8, [x8, #0x8]
0000000000011170	mov	x0, x20
0000000000011174	blr	x8
0000000000011178	ldr	x1, [x19, #0x10]
000000000001117c	cbz	x0, 0x11198
0000000000011180	ldr	x8, [x0]
0000000000011184	and	x8, x8, #0xfffffffffffffffc
0000000000011188	ldr	x8, [x8]
000000000001118c	ldr	x8, [x8, #0x70]
0000000000011190	blr	x8
0000000000011194	b	0x1109c
0000000000011198	cmp	x1, #0x0
000000000001119c	cset	w0, eq
00000000000111a0	b	0x1109c
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.hashCode#internal:
00000000000111a4	stp	x20, x19, [sp, #-0x20]!
00000000000111a8	stp	x29, x30, [sp, #0x10]
00000000000111ac	add	x29, sp, #0x10
00000000000111b0	mov	x19, x0
00000000000111b4	adr	x8, #0x830d5
00000000000111b8	nop
00000000000111bc	ldarb	w8, [x8]
00000000000111c0	tbz	w8, #0x0, 0x111c8
00000000000111c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000111c8	ldr	x0, [x19, #0x8]
00000000000111cc	cbz	x0, 0x11214
00000000000111d0	ldr	x8, [x0]
00000000000111d4	and	x8, x8, #0xfffffffffffffffc
00000000000111d8	ldr	x8, [x8]
00000000000111dc	ldr	x8, [x8, #0x78]
00000000000111e0	blr	x8
00000000000111e4	mov	x20, x0
00000000000111e8	ldr	x0, [x19, #0x10]
00000000000111ec	cbz	x0, 0x11204
00000000000111f0	ldr	x8, [x0]
00000000000111f4	and	x8, x8, #0xfffffffffffffffc
00000000000111f8	ldr	x8, [x8]
00000000000111fc	ldr	x8, [x8, #0x78]
0000000000011200	blr	x8
0000000000011204	eor	w0, w20, w0
0000000000011208	ldp	x29, x30, [sp, #0x10]
000000000001120c	ldp	x20, x19, [sp], #0x20
0000000000011210	ret
0000000000011214	mov	w20, #0x0
0000000000011218	ldr	x0, [x19, #0x10]
000000000001121c	cbnz	x0, 0x111f0
0000000000011220	b	0x11204
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.toString#internal:
0000000000011224	sub	sp, sp, #0xb0
0000000000011228	stp	x24, x23, [sp, #0x70]
000000000001122c	stp	x22, x21, [sp, #0x80]
0000000000011230	stp	x20, x19, [sp, #0x90]
0000000000011234	stp	x29, x30, [sp, #0xa0]
0000000000011238	add	x29, sp, #0xa0
000000000001123c	mov	x19, x1
0000000000011240	mov	x20, x0
0000000000011244	movi.16b	v0, #0x0
0000000000011248	stp	q0, q0, [sp, #0x20]
000000000001124c	str	xzr, [sp, #0x60]
0000000000011250	stp	q0, q0, [sp, #0x40]
0000000000011254	add	x24, sp, #0x20
0000000000011258	add	x21, x24, #0x30
000000000001125c	add	x22, x24, #0x28
0000000000011260	stp	xzr, xzr, [sp, #0x10]
0000000000011264	adr	x8, #0x5392c
0000000000011268	nop
000000000001126c	orr	x8, x8, #0x3
0000000000011270	str	x8, [sp, #0x8]
0000000000011274	adrp	x0, 105 ; 0x7a000
0000000000011278	add	x0, x0, #0x2c0
000000000001127c	ldr	x8, [x0]
0000000000011280	blr	x8
0000000000011284	ldr	x23, [x0]
0000000000011288	ldr	x8, [x23, #0x110]
000000000001128c	str	x24, [x23, #0x110]
0000000000011290	mov	x9, #0x900000000
0000000000011294	stp	x8, x9, [sp, #0x28]
0000000000011298	adr	x8, #0x82ff1
000000000001129c	nop
00000000000112a0	ldarb	w8, [x8]
00000000000112a4	tbz	w8, #0x0, 0x112ac
00000000000112a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000112ac	add	x8, sp, #0x8
00000000000112b0	str	x8, [sp, #0x38]
00000000000112b4	add	x0, sp, #0x8
00000000000112b8	mov	w1, #0xa
00000000000112bc	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000112c0	ldr	x0, [x20, #0x8]
00000000000112c4	cbz	x0, 0x112ec
00000000000112c8	add	x8, sp, #0x20
00000000000112cc	add	x1, x8, #0x20
00000000000112d0	ldr	x8, [x0]
00000000000112d4	and	x8, x8, #0xfffffffffffffffc
00000000000112d8	ldr	x8, [x8]
00000000000112dc	ldr	x8, [x8, #0x80]
00000000000112e0	blr	x8
00000000000112e4	mov	x1, x0
00000000000112e8	b	0x112f0
00000000000112ec	mov	x1, #0x0
00000000000112f0	add	x0, sp, #0x8
00000000000112f4	mov	x2, x22
00000000000112f8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000112fc	adr	x1, #0x5d454
0000000000011300	nop
0000000000011304	add	x0, sp, #0x8
0000000000011308	mov	x2, x21
000000000001130c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000011310	ldr	x0, [x20, #0x10]
0000000000011314	cbz	x0, 0x11338
0000000000011318	add	x1, x24, #0x38
000000000001131c	ldr	x8, [x0]
0000000000011320	and	x8, x8, #0xfffffffffffffffc
0000000000011324	ldr	x8, [x8]
0000000000011328	ldr	x8, [x8, #0x80]
000000000001132c	blr	x8
0000000000011330	mov	x1, x0
0000000000011334	b	0x1133c
0000000000011338	mov	x1, #0x0
000000000001133c	add	x8, sp, #0x20
0000000000011340	add	x2, x8, #0x40
0000000000011344	add	x0, sp, #0x8
0000000000011348	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001134c	add	x0, sp, #0x8
0000000000011350	mov	x1, x19
0000000000011354	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000011358	str	x0, [x19]
000000000001135c	ldr	x8, [sp, #0x28]
0000000000011360	str	x8, [x23, #0x110]
0000000000011364	ldp	x29, x30, [sp, #0xa0]
0000000000011368	ldp	x20, x19, [sp, #0x90]
000000000001136c	ldp	x22, x21, [sp, #0x80]
0000000000011370	ldp	x24, x23, [sp, #0x70]
0000000000011374	add	sp, sp, #0xb0
0000000000011378	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.EntryIterator.hasNext#internal:
000000000001137c	stp	x20, x19, [sp, #-0x20]!
0000000000011380	stp	x29, x30, [sp, #0x10]
0000000000011384	add	x29, sp, #0x10
0000000000011388	mov	x19, x0
000000000001138c	adr	x8, #0x82efd
0000000000011390	nop
0000000000011394	ldarb	w8, [x8]
0000000000011398	tbz	w8, #0x0, 0x113a0
000000000001139c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000113a0	ldr	x0, [x19, #0x8]
00000000000113a4	ldr	x8, [x0]
00000000000113a8	and	x8, x8, #0xfffffffffffffffc
00000000000113ac	ldr	x8, [x8]
00000000000113b0	ldr	w9, [x8, #0x3c]
00000000000113b4	ldr	x8, [x8, #0x40]
00000000000113b8	tbnz	w9, #0x1f, 0x113dc
00000000000113bc	mov	w10, #0xa0
00000000000113c0	and	x9, x9, x10
00000000000113c4	add	x8, x8, x9, lsl #4
00000000000113c8	ldr	x8, [x8, #0x8]
00000000000113cc	ldr	x1, [x8]
00000000000113d0	ldp	x29, x30, [sp, #0x10]
00000000000113d4	ldp	x20, x19, [sp], #0x20
00000000000113d8	br	x1
00000000000113dc	neg	w10, w9
00000000000113e0	mvn	w9, w9
00000000000113e4	cmp	w10, #0x9
00000000000113e8	b.ge	0x11420
00000000000113ec	cmp	w10, #0x2
00000000000113f0	b.lt	0x11454
00000000000113f4	mov	x10, #0x0
00000000000113f8	mov	x11, x8
00000000000113fc	ldr	w12, [x11]
0000000000011400	cmp	w12, #0x9f
0000000000011404	b.gt	0x1145c
0000000000011408	add	x10, x10, #0x1
000000000001140c	add	x11, x11, #0x10
0000000000011410	cmp	x9, x10
0000000000011414	b.ne	0x113fc
0000000000011418	mov	x10, x9
000000000001141c	b	0x1145c
0000000000011420	mov	w10, #0x0
0000000000011424	add	w11, w9, w10
0000000000011428	cmp	w11, #0x0
000000000001142c	cinc	w11, w11, lt
0000000000011430	asr	w11, w11, #1
0000000000011434	sbfiz	x12, x11, #4, #32
0000000000011438	ldr	w12, [x8, x12]
000000000001143c	cmp	w12, #0xa0
0000000000011440	csinc	w10, w10, w11, ge
0000000000011444	csel	w9, w9, w11, lt
0000000000011448	cmp	w10, w9
000000000001144c	b.lt	0x11424
0000000000011450	b	0x1145c
0000000000011454	mov	w10, #0x0
0000000000011458	b	0x1145c
000000000001145c	sxtw	x9, w10
0000000000011460	add	x8, x8, x9, lsl #4
0000000000011464	ldr	x8, [x8, #0x8]
0000000000011468	ldr	x1, [x8]
000000000001146c	ldp	x29, x30, [sp, #0x10]
0000000000011470	ldp	x20, x19, [sp], #0x20
0000000000011474	br	x1
_kfun:kotlin.native.internal.NSDictionaryAsKMap.EntryIterator.next#internal:
0000000000011478	sub	sp, sp, #0x70
000000000001147c	stp	x24, x23, [sp, #0x30]
0000000000011480	stp	x22, x21, [sp, #0x40]
0000000000011484	stp	x20, x19, [sp, #0x50]
0000000000011488	stp	x29, x30, [sp, #0x60]
000000000001148c	add	x29, sp, #0x60
0000000000011490	mov	x19, x1
0000000000011494	mov	x20, x0
0000000000011498	movi.16b	v0, #0x0
000000000001149c	stp	q0, q0, [sp]
00000000000114a0	str	xzr, [sp, #0x20]
00000000000114a4	adrp	x0, 105 ; 0x7a000
00000000000114a8	add	x0, x0, #0x2c0
00000000000114ac	ldr	x8, [x0]
00000000000114b0	blr	x8
00000000000114b4	ldr	x23, [x0]
00000000000114b8	ldr	x8, [x23, #0x110]
00000000000114bc	mov	x9, sp
00000000000114c0	str	x9, [x23, #0x110]
00000000000114c4	mov	x9, #0x500000000
00000000000114c8	stp	x8, x9, [sp, #0x8]
00000000000114cc	adr	x8, #0x82dbd
00000000000114d0	nop
00000000000114d4	ldarb	w8, [x8]
00000000000114d8	tbz	w8, #0x0, 0x114e0
00000000000114dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000114e0	ldr	x0, [x20, #0x8]
00000000000114e4	ldr	x8, [x0]
00000000000114e8	and	x8, x8, #0xfffffffffffffffc
00000000000114ec	ldr	x8, [x8]
00000000000114f0	ldr	w9, [x8, #0x3c]
00000000000114f4	ldr	x8, [x8, #0x40]
00000000000114f8	tbnz	w9, #0x1f, 0x11508
00000000000114fc	mov	w10, #0xa0
0000000000011500	and	x9, x9, x10
0000000000011504	b	0x1158c
0000000000011508	neg	w10, w9
000000000001150c	mvn	w9, w9
0000000000011510	cmp	w10, #0x9
0000000000011514	b.ge	0x1154c
0000000000011518	cmp	w10, #0x2
000000000001151c	b.lt	0x11580
0000000000011520	mov	x10, #0x0
0000000000011524	mov	x11, x8
0000000000011528	ldr	w12, [x11]
000000000001152c	cmp	w12, #0x9f
0000000000011530	b.gt	0x11588
0000000000011534	add	x10, x10, #0x1
0000000000011538	add	x11, x11, #0x10
000000000001153c	cmp	x9, x10
0000000000011540	b.ne	0x11528
0000000000011544	mov	x10, x9
0000000000011548	b	0x11588
000000000001154c	mov	w10, #0x0
0000000000011550	add	w11, w9, w10
0000000000011554	cmp	w11, #0x0
0000000000011558	cinc	w11, w11, lt
000000000001155c	asr	w11, w11, #1
0000000000011560	sbfiz	x12, x11, #4, #32
0000000000011564	ldr	w12, [x8, x12]
0000000000011568	cmp	w12, #0xa0
000000000001156c	csinc	w10, w10, w11, ge
0000000000011570	csel	w9, w9, w11, lt
0000000000011574	cmp	w10, w9
0000000000011578	b.lt	0x11550
000000000001157c	b	0x11588
0000000000011580	mov	w10, #0x0
0000000000011584	b	0x11588
0000000000011588	sxtw	x9, w10
000000000001158c	mov	x10, sp
0000000000011590	add	x21, x10, #0x20
0000000000011594	add	x1, x10, #0x18
0000000000011598	add	x8, x8, x9, lsl #4
000000000001159c	ldr	x8, [x8, #0x8]
00000000000115a0	ldr	x8, [x8, #0x8]
00000000000115a4	blr	x8
00000000000115a8	mov	x22, x0
00000000000115ac	ldr	x0, [x20, #0x10]
00000000000115b0	mov	x1, x22
00000000000115b4	mov	x2, x21
00000000000115b8	bl	_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification
00000000000115bc	mov	x20, x0
00000000000115c0	ldr	x8, [x23, #0x118]
00000000000115c4	add	x0, x8, #0x70
00000000000115c8	mov	w1, #0x20
00000000000115cc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000115d0	adr	x8, #0x51c90
00000000000115d4	nop
00000000000115d8	str	x8, [x0, #0x10]!
00000000000115dc	stur	xzr, [x0, #-0x8]
00000000000115e0	str	x0, [x19]
00000000000115e4	stp	x22, x20, [x0, #0x8]
00000000000115e8	str	x0, [x19]
00000000000115ec	ldr	x8, [sp, #0x8]
00000000000115f0	str	x8, [x23, #0x110]
00000000000115f4	ldp	x29, x30, [sp, #0x60]
00000000000115f8	ldp	x20, x19, [sp, #0x50]
00000000000115fc	ldp	x22, x21, [sp, #0x40]
0000000000011600	ldp	x24, x23, [sp, #0x30]
0000000000011604	add	sp, sp, #0x70
0000000000011608	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.toString$lambda$0#internal:
000000000001160c	sub	sp, sp, #0xe0
0000000000011610	stp	x28, x27, [sp, #0x80]
0000000000011614	stp	x26, x25, [sp, #0x90]
0000000000011618	stp	x24, x23, [sp, #0xa0]
000000000001161c	stp	x22, x21, [sp, #0xb0]
0000000000011620	stp	x20, x19, [sp, #0xc0]
0000000000011624	stp	x29, x30, [sp, #0xd0]
0000000000011628	add	x29, sp, #0xd0
000000000001162c	mov	x19, x2
0000000000011630	mov	x21, x1
0000000000011634	mov	x20, x0
0000000000011638	movi.16b	v0, #0x0
000000000001163c	stp	q0, q0, [sp, #0x20]
0000000000011640	str	xzr, [sp, #0x70]
0000000000011644	stp	q0, q0, [sp, #0x50]
0000000000011648	str	q0, [sp, #0x40]
000000000001164c	add	x27, sp, #0x20
0000000000011650	add	x25, x27, #0x20
0000000000011654	stp	xzr, xzr, [sp, #0x10]
0000000000011658	adr	x8, #0x53538
000000000001165c	nop
0000000000011660	orr	x8, x8, #0x3
0000000000011664	str	x8, [sp, #0x8]
0000000000011668	adrp	x0, 105 ; 0x7a000
000000000001166c	add	x0, x0, #0x2c0
0000000000011670	ldr	x8, [x0]
0000000000011674	blr	x8
0000000000011678	ldr	x26, [x0]
000000000001167c	ldr	x8, [x26, #0x110]
0000000000011680	str	x27, [x26, #0x110]
0000000000011684	mov	x9, #0xb00000000
0000000000011688	stp	x8, x9, [sp, #0x28]
000000000001168c	adr	x8, #0x82bfd
0000000000011690	nop
0000000000011694	ldarb	w8, [x8]
0000000000011698	tbz	w8, #0x0, 0x116a0
000000000001169c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000116a0	add	x24, x27, #0x30
00000000000116a4	add	x22, x27, #0x38
00000000000116a8	add	x8, sp, #0x8
00000000000116ac	str	x8, [sp, #0x38]
00000000000116b0	add	x0, sp, #0x8
00000000000116b4	mov	w1, #0xa
00000000000116b8	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000116bc	ldr	x8, [x21]
00000000000116c0	and	x8, x8, #0xfffffffffffffffc
00000000000116c4	ldr	x8, [x8]
00000000000116c8	ldr	w9, [x8, #0x3c]
00000000000116cc	ldr	x8, [x8, #0x40]
00000000000116d0	tbnz	w9, #0x1f, 0x116e0
00000000000116d4	mov	w10, #0xa8
00000000000116d8	and	x9, x9, x10
00000000000116dc	b	0x11764
00000000000116e0	neg	w10, w9
00000000000116e4	mvn	w9, w9
00000000000116e8	cmp	w10, #0x9
00000000000116ec	b.ge	0x11724
00000000000116f0	cmp	w10, #0x2
00000000000116f4	b.lt	0x11758
00000000000116f8	mov	x10, #0x0
00000000000116fc	mov	x11, x8
0000000000011700	ldr	w12, [x11]
0000000000011704	cmp	w12, #0xa7
0000000000011708	b.gt	0x11760
000000000001170c	add	x10, x10, #0x1
0000000000011710	add	x11, x11, #0x10
0000000000011714	cmp	x9, x10
0000000000011718	b.ne	0x11700
000000000001171c	mov	x10, x9
0000000000011720	b	0x11760
0000000000011724	mov	w10, #0x0
0000000000011728	add	w11, w9, w10
000000000001172c	cmp	w11, #0x0
0000000000011730	cinc	w11, w11, lt
0000000000011734	asr	w11, w11, #1
0000000000011738	sbfiz	x12, x11, #4, #32
000000000001173c	ldr	w12, [x8, x12]
0000000000011740	cmp	w12, #0xa8
0000000000011744	csinc	w10, w10, w11, ge
0000000000011748	csel	w9, w9, w11, lt
000000000001174c	cmp	w10, w9
0000000000011750	b.lt	0x11728
0000000000011754	b	0x11760
0000000000011758	mov	w10, #0x0
000000000001175c	b	0x11760
0000000000011760	sxtw	x9, w10
0000000000011764	add	x23, x27, #0x40
0000000000011768	add	x8, x8, x9, lsl #4
000000000001176c	ldr	x8, [x8, #0x8]
0000000000011770	ldr	x8, [x8]
0000000000011774	mov	x0, x21
0000000000011778	mov	x1, x25
000000000001177c	blr	x8
0000000000011780	cmp	x0, x20
0000000000011784	b.eq	0x117ac
0000000000011788	cbz	x0, 0x117b8
000000000001178c	add	x1, x27, #0x28
0000000000011790	ldr	x8, [x0]
0000000000011794	and	x8, x8, #0xfffffffffffffffc
0000000000011798	ldr	x8, [x8]
000000000001179c	ldr	x8, [x8, #0x80]
00000000000117a0	blr	x8
00000000000117a4	mov	x1, x0
00000000000117a8	b	0x117c0
00000000000117ac	adr	x1, #0x5cf74
00000000000117b0	nop
00000000000117b4	b	0x117c0
00000000000117b8	adr	x1, #0x5c7e8
00000000000117bc	nop
00000000000117c0	str	x1, [sp, #0x48]
00000000000117c4	add	x0, sp, #0x8
00000000000117c8	mov	x2, x24
00000000000117cc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000117d0	adr	x1, #0x5cf80
00000000000117d4	nop
00000000000117d8	add	x0, sp, #0x8
00000000000117dc	mov	x2, x22
00000000000117e0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000117e4	ldr	x8, [x21]
00000000000117e8	and	x8, x8, #0xfffffffffffffffc
00000000000117ec	ldr	x8, [x8]
00000000000117f0	ldr	w9, [x8, #0x3c]
00000000000117f4	ldr	x8, [x8, #0x40]
00000000000117f8	tbnz	w9, #0x1f, 0x11808
00000000000117fc	mov	w10, #0xa8
0000000000011800	and	x9, x9, x10
0000000000011804	b	0x1188c
0000000000011808	neg	w10, w9
000000000001180c	mvn	w9, w9
0000000000011810	cmp	w10, #0x9
0000000000011814	b.ge	0x1184c
0000000000011818	cmp	w10, #0x2
000000000001181c	b.lt	0x11880
0000000000011820	mov	x10, #0x0
0000000000011824	mov	x11, x8
0000000000011828	ldr	w12, [x11]
000000000001182c	cmp	w12, #0xa7
0000000000011830	b.gt	0x11888
0000000000011834	add	x10, x10, #0x1
0000000000011838	add	x11, x11, #0x10
000000000001183c	cmp	x9, x10
0000000000011840	b.ne	0x11828
0000000000011844	mov	x10, x9
0000000000011848	b	0x11888
000000000001184c	mov	w10, #0x0
0000000000011850	add	w11, w9, w10
0000000000011854	cmp	w11, #0x0
0000000000011858	cinc	w11, w11, lt
000000000001185c	asr	w11, w11, #1
0000000000011860	sbfiz	x12, x11, #4, #32
0000000000011864	ldr	w12, [x8, x12]
0000000000011868	cmp	w12, #0xa8
000000000001186c	csinc	w10, w10, w11, ge
0000000000011870	csel	w9, w9, w11, lt
0000000000011874	cmp	w10, w9
0000000000011878	b.lt	0x11850
000000000001187c	b	0x11888
0000000000011880	mov	w10, #0x0
0000000000011884	b	0x11888
0000000000011888	sxtw	x9, w10
000000000001188c	add	x8, x8, x9, lsl #4
0000000000011890	ldr	x8, [x8, #0x8]
0000000000011894	ldr	x8, [x8, #0x8]
0000000000011898	mov	x0, x21
000000000001189c	mov	x1, x23
00000000000118a0	blr	x8
00000000000118a4	cmp	x0, x20
00000000000118a8	b.eq	0x118d0
00000000000118ac	cbz	x0, 0x118dc
00000000000118b0	add	x1, x27, #0x48
00000000000118b4	ldr	x8, [x0]
00000000000118b8	and	x8, x8, #0xfffffffffffffffc
00000000000118bc	ldr	x8, [x8]
00000000000118c0	ldr	x8, [x8, #0x80]
00000000000118c4	blr	x8
00000000000118c8	mov	x1, x0
00000000000118cc	b	0x118e4
00000000000118d0	adr	x1, #0x5ce50
00000000000118d4	nop
00000000000118d8	b	0x118e4
00000000000118dc	adr	x1, #0x5c6c4
00000000000118e0	nop
00000000000118e4	add	x8, sp, #0x20
00000000000118e8	add	x2, x8, #0x50
00000000000118ec	str	x1, [sp, #0x68]
00000000000118f0	add	x0, sp, #0x8
00000000000118f4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000118f8	add	x0, sp, #0x8
00000000000118fc	mov	x1, x19
0000000000011900	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000011904	str	x0, [x19]
0000000000011908	ldr	x8, [sp, #0x28]
000000000001190c	str	x8, [x26, #0x110]
0000000000011910	ldp	x29, x30, [sp, #0xd0]
0000000000011914	ldp	x20, x19, [sp, #0xc0]
0000000000011918	ldp	x22, x21, [sp, #0xb0]
000000000001191c	ldp	x24, x23, [sp, #0xa0]
0000000000011920	ldp	x26, x25, [sp, #0x90]
0000000000011924	ldp	x28, x27, [sp, #0x80]
0000000000011928	add	sp, sp, #0xe0
000000000001192c	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.$toString$lambda$0$FUNCTION_REFERENCE$4.invoke#internal:
0000000000011930	stp	x22, x21, [sp, #-0x30]!
0000000000011934	stp	x20, x19, [sp, #0x10]
0000000000011938	stp	x29, x30, [sp, #0x20]
000000000001193c	add	x29, sp, #0x20
0000000000011940	mov	x19, x2
0000000000011944	mov	x20, x1
0000000000011948	mov	x21, x0
000000000001194c	adr	x8, #0x8293d
0000000000011950	nop
0000000000011954	ldarb	w8, [x8]
0000000000011958	tbz	w8, #0x0, 0x11960
000000000001195c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011960	ldr	x0, [x21, #0x8]
0000000000011964	mov	x1, x20
0000000000011968	mov	x2, x19
000000000001196c	bl	"_kfun:kotlin.native.internal.NSDictionaryAsKMap.toString$lambda$0#internal"
0000000000011970	str	x0, [x19]
0000000000011974	ldp	x29, x30, [sp, #0x20]
0000000000011978	ldp	x20, x19, [sp, #0x10]
000000000001197c	ldp	x22, x21, [sp], #0x30
0000000000011980	ret
_ThrowNullPointerException:
0000000000011984	sub	sp, sp, #0x50
0000000000011988	stp	x22, x21, [sp, #0x20]
000000000001198c	stp	x20, x19, [sp, #0x30]
0000000000011990	stp	x29, x30, [sp, #0x40]
0000000000011994	add	x29, sp, #0x40
0000000000011998	movi.16b	v0, #0x0
000000000001199c	stp	q0, q0, [sp]
00000000000119a0	adrp	x19, 105 ; 0x7a000
00000000000119a4	add	x19, x19, #0x2c0
00000000000119a8	ldr	x21, [x19]
00000000000119ac	mov	x0, x19
00000000000119b0	blr	x21
00000000000119b4	ldr	x8, [x0]
00000000000119b8	ldr	x9, [x8, #0x110]
00000000000119bc	mov	x10, sp
00000000000119c0	str	x10, [x8, #0x110]
00000000000119c4	mov	x8, #0x400000000
00000000000119c8	stp	x9, x8, [sp, #0x8]
00000000000119cc	adr	x8, #0x828bd
00000000000119d0	nop
00000000000119d4	ldarb	w8, [x8]
00000000000119d8	tbz	w8, #0x0, 0x119e0
00000000000119dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000119e0	mov	x0, x19
00000000000119e4	blr	x21
00000000000119e8	ldr	x8, [x0]
00000000000119ec	ldr	x8, [x8, #0x118]
00000000000119f0	add	x0, x8, #0x70
00000000000119f4	mov	w1, #0x38
00000000000119f8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000119fc	mov	x20, x0
0000000000011a00	adr	x8, #0x4fc60
0000000000011a04	nop
0000000000011a08	str	x8, [x20, #0x10]!
0000000000011a0c	stur	xzr, [x20, #-0x8]
0000000000011a10	str	x20, [sp, #0x18]
0000000000011a14	mov	x0, x20
0000000000011a18	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
0000000000011a1c	mov	x0, x20
0000000000011a20	bl	_ThrowException
0000000000011a24	brk	#0x1
0000000000011a28	mov	x1, x0
0000000000011a2c	mov	x0, x19
0000000000011a30	blr	x21
0000000000011a34	ldr	x8, [x0]
0000000000011a38	ldr	x9, [sp, #0x8]
0000000000011a3c	str	x9, [x8, #0x110]
0000000000011a40	mov	x0, x1
0000000000011a44	bl	0x55194 ; symbol stub for: __Unwind_Resume
_ThrowArrayIndexOutOfBoundsException:
0000000000011a48	sub	sp, sp, #0x50
0000000000011a4c	stp	x22, x21, [sp, #0x20]
0000000000011a50	stp	x20, x19, [sp, #0x30]
0000000000011a54	stp	x29, x30, [sp, #0x40]
0000000000011a58	add	x29, sp, #0x40
0000000000011a5c	movi.16b	v0, #0x0
0000000000011a60	stp	q0, q0, [sp]
0000000000011a64	adrp	x19, 105 ; 0x7a000
0000000000011a68	add	x19, x19, #0x2c0
0000000000011a6c	ldr	x21, [x19]
0000000000011a70	mov	x0, x19
0000000000011a74	blr	x21
0000000000011a78	ldr	x8, [x0]
0000000000011a7c	ldr	x9, [x8, #0x110]
0000000000011a80	mov	x10, sp
0000000000011a84	str	x10, [x8, #0x110]
0000000000011a88	mov	x8, #0x400000000
0000000000011a8c	stp	x9, x8, [sp, #0x8]
0000000000011a90	adr	x8, #0x827f9
0000000000011a94	nop
0000000000011a98	ldarb	w8, [x8]
0000000000011a9c	tbz	w8, #0x0, 0x11aa4
0000000000011aa0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011aa4	mov	x0, x19
0000000000011aa8	blr	x21
0000000000011aac	ldr	x8, [x0]
0000000000011ab0	ldr	x8, [x8, #0x118]
0000000000011ab4	add	x0, x8, #0x70
0000000000011ab8	mov	w1, #0x38
0000000000011abc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011ac0	mov	x20, x0
0000000000011ac4	adr	x8, #0x4fc3c
0000000000011ac8	nop
0000000000011acc	str	x8, [x20, #0x10]!
0000000000011ad0	stur	xzr, [x20, #-0x8]
0000000000011ad4	str	x20, [sp, #0x18]
0000000000011ad8	mov	x0, x20
0000000000011adc	mov	x1, #0x0
0000000000011ae0	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000011ae4	mov	x0, x20
0000000000011ae8	bl	_ThrowException
0000000000011aec	brk	#0x1
0000000000011af0	mov	x1, x0
0000000000011af4	mov	x0, x19
0000000000011af8	blr	x21
0000000000011afc	ldr	x8, [x0]
0000000000011b00	ldr	x9, [sp, #0x8]
0000000000011b04	str	x9, [x8, #0x110]
0000000000011b08	mov	x0, x1
0000000000011b0c	bl	0x55194 ; symbol stub for: __Unwind_Resume
_ThrowClassCastException:
0000000000011b10	sub	sp, sp, #0xf0
0000000000011b14	stp	x24, x23, [sp, #0xb0]
0000000000011b18	stp	x22, x21, [sp, #0xc0]
0000000000011b1c	stp	x20, x19, [sp, #0xd0]
0000000000011b20	stp	x29, x30, [sp, #0xe0]
0000000000011b24	add	x29, sp, #0xe0
0000000000011b28	mov	x21, x1
0000000000011b2c	mov	x20, x0
0000000000011b30	movi.16b	v0, #0x0
0000000000011b34	stp	q0, q0, [sp, #0x40]
0000000000011b38	str	xzr, [sp, #0xa0]
0000000000011b3c	stp	q0, q0, [sp, #0x80]
0000000000011b40	stp	q0, q0, [sp, #0x60]
0000000000011b44	add	x23, sp, #0x40
0000000000011b48	adr	x8, #0x50cf8
0000000000011b4c	nop
0000000000011b50	orr	x8, x8, #0x3
0000000000011b54	stp	x8, xzr, [sp, #0x30]
0000000000011b58	stp	xzr, xzr, [sp, #0x20]
0000000000011b5c	adr	x9, #0x53034
0000000000011b60	nop
0000000000011b64	orr	x9, x9, #0x3
0000000000011b68	stp	xzr, x9, [sp, #0x10]
0000000000011b6c	str	x8, [sp, #0x8]
0000000000011b70	adrp	x19, 105 ; 0x7a000
0000000000011b74	add	x19, x19, #0x2c0
0000000000011b78	ldr	x22, [x19]
0000000000011b7c	mov	x0, x19
0000000000011b80	blr	x22
0000000000011b84	ldr	x8, [x0]
0000000000011b88	ldr	x9, [x8, #0x110]
0000000000011b8c	str	x23, [x8, #0x110]
0000000000011b90	mov	x8, #0xd00000000
0000000000011b94	stp	x9, x8, [sp, #0x48]
0000000000011b98	adr	x8, #0x826f1
0000000000011b9c	nop
0000000000011ba0	ldarb	w8, [x8]
0000000000011ba4	tbz	w8, #0x0, 0x11bac
0000000000011ba8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011bac	add	x8, sp, #0x30
0000000000011bb0	str	x21, [sp, #0x38]
0000000000011bb4	add	x9, sp, #0x18
0000000000011bb8	stp	x8, x9, [sp, #0x58]
0000000000011bbc	add	x0, sp, #0x18
0000000000011bc0	mov	w1, #0xa
0000000000011bc4	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000011bc8	add	x8, sp, #0x40
0000000000011bcc	add	x1, x8, #0x30
0000000000011bd0	ldr	x8, [x20]
0000000000011bd4	and	x8, x8, #0xfffffffffffffffc
0000000000011bd8	ldr	x8, [x8]
0000000000011bdc	add	x9, sp, #0x8
0000000000011be0	str	x9, [sp, #0x68]
0000000000011be4	str	x8, [sp, #0x10]
0000000000011be8	add	x0, sp, #0x8
0000000000011bec	bl	"_kfun:kotlin.native.internal.KClassImpl#toString(){}kotlin.String"
0000000000011bf0	mov	x1, x0
0000000000011bf4	add	x2, x23, #0x38
0000000000011bf8	add	x0, sp, #0x18
0000000000011bfc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000011c00	add	x2, x23, #0x40
0000000000011c04	adr	x1, #0x5cb6c
0000000000011c08	nop
0000000000011c0c	add	x0, sp, #0x18
0000000000011c10	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000011c14	add	x1, x23, #0x48
0000000000011c18	add	x0, sp, #0x30
0000000000011c1c	bl	"_kfun:kotlin.native.internal.KClassImpl#toString(){}kotlin.String"
0000000000011c20	mov	x1, x0
0000000000011c24	add	x2, x23, #0x50
0000000000011c28	add	x0, sp, #0x18
0000000000011c2c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000011c30	add	x1, x23, #0x58
0000000000011c34	add	x0, sp, #0x18
0000000000011c38	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000011c3c	mov	x20, x0
0000000000011c40	mov	x0, x19
0000000000011c44	blr	x22
0000000000011c48	ldr	x8, [x0]
0000000000011c4c	ldr	x8, [x8, #0x118]
0000000000011c50	add	x0, x8, #0x70
0000000000011c54	mov	w1, #0x38
0000000000011c58	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011c5c	mov	x21, x0
0000000000011c60	adr	x8, #0x4fb40
0000000000011c64	nop
0000000000011c68	str	x8, [x21, #0x10]!
0000000000011c6c	stur	xzr, [x21, #-0x8]
0000000000011c70	str	x21, [sp, #0xa0]
0000000000011c74	mov	x0, x21
0000000000011c78	mov	x1, x20
0000000000011c7c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000011c80	mov	x0, x21
0000000000011c84	bl	_ThrowException
0000000000011c88	brk	#0x1
0000000000011c8c	mov	x1, x0
0000000000011c90	mov	x0, x19
0000000000011c94	blr	x22
0000000000011c98	ldr	x8, [x0]
0000000000011c9c	ldr	x9, [sp, #0x48]
0000000000011ca0	str	x9, [x8, #0x110]
0000000000011ca4	mov	x0, x1
0000000000011ca8	bl	0x55194 ; symbol stub for: __Unwind_Resume
_ThrowArithmeticException:
0000000000011cac	sub	sp, sp, #0x50
0000000000011cb0	stp	x22, x21, [sp, #0x20]
0000000000011cb4	stp	x20, x19, [sp, #0x30]
0000000000011cb8	stp	x29, x30, [sp, #0x40]
0000000000011cbc	add	x29, sp, #0x40
0000000000011cc0	movi.16b	v0, #0x0
0000000000011cc4	stp	q0, q0, [sp]
0000000000011cc8	adrp	x19, 105 ; 0x7a000
0000000000011ccc	add	x19, x19, #0x2c0
0000000000011cd0	ldr	x21, [x19]
0000000000011cd4	mov	x0, x19
0000000000011cd8	blr	x21
0000000000011cdc	ldr	x8, [x0]
0000000000011ce0	ldr	x9, [x8, #0x110]
0000000000011ce4	mov	x10, sp
0000000000011ce8	str	x10, [x8, #0x110]
0000000000011cec	mov	x8, #0x400000000
0000000000011cf0	stp	x9, x8, [sp, #0x8]
0000000000011cf4	adr	x8, #0x82595
0000000000011cf8	nop
0000000000011cfc	ldarb	w8, [x8]
0000000000011d00	tbz	w8, #0x0, 0x11d08
0000000000011d04	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011d08	mov	x0, x19
0000000000011d0c	blr	x21
0000000000011d10	ldr	x8, [x0]
0000000000011d14	ldr	x8, [x8, #0x118]
0000000000011d18	add	x0, x8, #0x70
0000000000011d1c	mov	w1, #0x38
0000000000011d20	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011d24	mov	x20, x0
0000000000011d28	adr	x8, #0x4fb18
0000000000011d2c	nop
0000000000011d30	str	x8, [x20, #0x10]!
0000000000011d34	stur	xzr, [x20, #-0x8]
0000000000011d38	str	x20, [sp, #0x18]
0000000000011d3c	mov	x0, x20
0000000000011d40	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
0000000000011d44	mov	x0, x20
0000000000011d48	bl	_ThrowException
0000000000011d4c	brk	#0x1
0000000000011d50	mov	x1, x0
0000000000011d54	mov	x0, x19
0000000000011d58	blr	x21
0000000000011d5c	ldr	x8, [x0]
0000000000011d60	ldr	x9, [sp, #0x8]
0000000000011d64	str	x9, [x8, #0x110]
0000000000011d68	mov	x0, x1
0000000000011d6c	bl	0x55194 ; symbol stub for: __Unwind_Resume
_ThrowIllegalArgumentException:
0000000000011d70	sub	sp, sp, #0x50
0000000000011d74	stp	x22, x21, [sp, #0x20]
0000000000011d78	stp	x20, x19, [sp, #0x30]
0000000000011d7c	stp	x29, x30, [sp, #0x40]
0000000000011d80	add	x29, sp, #0x40
0000000000011d84	movi.16b	v0, #0x0
0000000000011d88	stp	q0, q0, [sp]
0000000000011d8c	adrp	x19, 105 ; 0x7a000
0000000000011d90	add	x19, x19, #0x2c0
0000000000011d94	ldr	x21, [x19]
0000000000011d98	mov	x0, x19
0000000000011d9c	blr	x21
0000000000011da0	ldr	x8, [x0]
0000000000011da4	ldr	x9, [x8, #0x110]
0000000000011da8	mov	x10, sp
0000000000011dac	str	x10, [x8, #0x110]
0000000000011db0	mov	x8, #0x400000000
0000000000011db4	stp	x9, x8, [sp, #0x8]
0000000000011db8	adr	x8, #0x824d1
0000000000011dbc	nop
0000000000011dc0	ldarb	w8, [x8]
0000000000011dc4	tbz	w8, #0x0, 0x11dcc
0000000000011dc8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011dcc	mov	x0, x19
0000000000011dd0	blr	x21
0000000000011dd4	ldr	x8, [x0]
0000000000011dd8	ldr	x8, [x8, #0x118]
0000000000011ddc	add	x0, x8, #0x70
0000000000011de0	mov	w1, #0x38
0000000000011de4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011de8	mov	x20, x0
0000000000011dec	adr	x8, #0x4f5f4
0000000000011df0	nop
0000000000011df4	str	x8, [x20, #0x10]!
0000000000011df8	stur	xzr, [x20, #-0x8]
0000000000011dfc	str	x20, [sp, #0x18]
0000000000011e00	mov	x0, x20
0000000000011e04	mov	x1, #0x0
0000000000011e08	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000011e0c	mov	x0, x20
0000000000011e10	bl	_ThrowException
0000000000011e14	brk	#0x1
0000000000011e18	mov	x1, x0
0000000000011e1c	mov	x0, x19
0000000000011e20	blr	x21
0000000000011e24	ldr	x8, [x0]
0000000000011e28	ldr	x9, [sp, #0x8]
0000000000011e2c	str	x9, [x8, #0x110]
0000000000011e30	mov	x0, x1
0000000000011e34	bl	0x55194 ; symbol stub for: __Unwind_Resume
_ReportUnhandledException:
0000000000011e38	sub	sp, sp, #0x50
0000000000011e3c	stp	x22, x21, [sp, #0x20]
0000000000011e40	stp	x20, x19, [sp, #0x30]
0000000000011e44	stp	x29, x30, [sp, #0x40]
0000000000011e48	add	x29, sp, #0x40
0000000000011e4c	mov	x20, x0
0000000000011e50	str	xzr, [sp, #0x8]
0000000000011e54	adrp	x19, 105 ; 0x7a000
0000000000011e58	add	x19, x19, #0x2c0
0000000000011e5c	ldr	x21, [x19]
0000000000011e60	mov	x0, x19
0000000000011e64	blr	x21
0000000000011e68	ldr	x8, [x0]
0000000000011e6c	ldr	x9, [x8, #0x110]
0000000000011e70	add	x10, sp, #0x8
0000000000011e74	str	x10, [x8, #0x110]
0000000000011e78	mov	x8, #0x300000000
0000000000011e7c	stp	x9, x8, [sp, #0x10]
0000000000011e80	adr	x8, #0x82409
0000000000011e84	nop
0000000000011e88	ldarb	w8, [x8]
0000000000011e8c	tbz	w8, #0x0, 0x11e94
0000000000011e90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011e94	adr	x0, #0x5c91c
0000000000011e98	nop
0000000000011e9c	bl	_Kotlin_io_Console_print
0000000000011ea0	mov	x0, x20
0000000000011ea4	bl	"_kfun:kotlin.Throwable#printStackTrace(){}"
0000000000011ea8	mov	x0, x19
0000000000011eac	blr	x21
0000000000011eb0	ldr	x8, [x0]
0000000000011eb4	ldr	x9, [sp, #0x10]
0000000000011eb8	str	x9, [x8, #0x110]
0000000000011ebc	ldp	x29, x30, [sp, #0x40]
0000000000011ec0	ldp	x20, x19, [sp, #0x30]
0000000000011ec4	ldp	x22, x21, [sp, #0x20]
0000000000011ec8	add	sp, sp, #0x50
0000000000011ecc	ret
0000000000011ed0	mov	x1, x0
0000000000011ed4	mov	x0, x19
0000000000011ed8	blr	x21
0000000000011edc	ldr	x8, [x0]
0000000000011ee0	ldr	x9, [sp, #0x10]
0000000000011ee4	str	x9, [x8, #0x110]
0000000000011ee8	mov	x0, x1
0000000000011eec	bl	0x55194 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.text#checkBoundsIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}:
0000000000011ef0	sub	sp, sp, #0x140
0000000000011ef4	stp	x28, x27, [sp, #0xe0]
0000000000011ef8	stp	x26, x25, [sp, #0xf0]
0000000000011efc	stp	x24, x23, [sp, #0x100]
0000000000011f00	stp	x22, x21, [sp, #0x110]
0000000000011f04	stp	x20, x19, [sp, #0x120]
0000000000011f08	stp	x29, x30, [sp, #0x130]
0000000000011f0c	add	x29, sp, #0x130
0000000000011f10	mov	x21, x2
0000000000011f14	mov	x19, x1
0000000000011f18	mov	x20, x0
0000000000011f1c	str	xzr, [sp, #0xd0]
0000000000011f20	movi.16b	v0, #0x0
0000000000011f24	stp	q0, q0, [sp, #0xb0]
0000000000011f28	stp	q0, q0, [sp, #0x90]
0000000000011f2c	stp	q0, q0, [sp, #0x70]
0000000000011f30	stp	q0, q0, [sp, #0x50]
0000000000011f34	str	q0, [sp, #0x40]
0000000000011f38	stp	xzr, xzr, [sp, #0x30]
0000000000011f3c	adr	x8, #0x52c54
0000000000011f40	nop
0000000000011f44	orr	x8, x8, #0x3
0000000000011f48	stp	xzr, x8, [sp, #0x20]
0000000000011f4c	stp	x8, xzr, [sp, #0x10]
0000000000011f50	adrp	x0, 105 ; 0x7a000
0000000000011f54	add	x0, x0, #0x2c0
0000000000011f58	ldr	x8, [x0]
0000000000011f5c	blr	x8
0000000000011f60	ldr	x22, [x0]
0000000000011f64	ldr	x8, [x22, #0x110]
0000000000011f68	add	x9, sp, #0x40
0000000000011f6c	str	x9, [x22, #0x110]
0000000000011f70	mov	x9, #0x1300000000
0000000000011f74	stp	x8, x9, [sp, #0x48]
0000000000011f78	adr	x8, #0x82311
0000000000011f7c	nop
0000000000011f80	ldarb	w8, [x8]
0000000000011f84	tbz	w8, #0x0, 0x11f8c
0000000000011f88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011f8c	tbnz	w20, #0x1f, 0x11fc8
0000000000011f90	cmp	w19, w21
0000000000011f94	b.gt	0x11fc8
0000000000011f98	cmp	w20, w19
0000000000011f9c	b.gt	0x120a8
0000000000011fa0	ldr	x8, [sp, #0x48]
0000000000011fa4	str	x8, [x22, #0x110]
0000000000011fa8	ldp	x29, x30, [sp, #0x130]
0000000000011fac	ldp	x20, x19, [sp, #0x120]
0000000000011fb0	ldp	x22, x21, [sp, #0x110]
0000000000011fb4	ldp	x24, x23, [sp, #0x100]
0000000000011fb8	ldp	x26, x25, [sp, #0xf0]
0000000000011fbc	ldp	x28, x27, [sp, #0xe0]
0000000000011fc0	add	sp, sp, #0x140
0000000000011fc4	ret
0000000000011fc8	add	x8, sp, #0x40
0000000000011fcc	add	x9, x8, #0x50
0000000000011fd0	str	x9, [sp, #0x8]
0000000000011fd4	add	x23, x8, #0x48
0000000000011fd8	add	x24, x8, #0x40
0000000000011fdc	add	x25, x8, #0x38
0000000000011fe0	add	x26, x8, #0x30
0000000000011fe4	add	x27, x8, #0x28
0000000000011fe8	add	x9, sp, #0x28
0000000000011fec	str	x9, [sp, #0x58]
0000000000011ff0	add	x28, x8, #0x20
0000000000011ff4	add	x0, sp, #0x28
0000000000011ff8	mov	w1, #0xa
0000000000011ffc	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000012000	adr	x1, #0x5c800
0000000000012004	nop
0000000000012008	add	x0, sp, #0x28
000000000001200c	mov	x2, x28
0000000000012010	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000012014	add	x0, sp, #0x28
0000000000012018	mov	x1, x20
000000000001201c	mov	x2, x27
0000000000012020	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000012024	adr	x1, #0x5c80c
0000000000012028	nop
000000000001202c	add	x0, sp, #0x28
0000000000012030	mov	x2, x26
0000000000012034	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000012038	add	x0, sp, #0x28
000000000001203c	mov	x1, x19
0000000000012040	mov	x2, x25
0000000000012044	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000012048	adr	x1, #0x5c2f8
000000000001204c	nop
0000000000012050	add	x0, sp, #0x28
0000000000012054	mov	x2, x24
0000000000012058	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001205c	add	x0, sp, #0x28
0000000000012060	mov	x1, x21
0000000000012064	mov	x2, x23
0000000000012068	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001206c	add	x0, sp, #0x28
0000000000012070	ldr	x1, [sp, #0x8]
0000000000012074	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000012078	mov	x19, x0
000000000001207c	ldr	x8, [x22, #0x118]
0000000000012080	add	x0, x8, #0x70
0000000000012084	mov	w1, #0x38
0000000000012088	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001208c	mov	x20, x0
0000000000012090	adr	x8, #0x4f2b0
0000000000012094	nop
0000000000012098	str	x8, [x20, #0x10]!
000000000001209c	stur	xzr, [x20, #-0x8]
00000000000120a0	str	x20, [sp, #0x98]
00000000000120a4	b	0x12154
00000000000120a8	add	x8, sp, #0x40
00000000000120ac	add	x21, x8, #0x88
00000000000120b0	add	x26, x8, #0x80
00000000000120b4	add	x23, x8, #0x78
00000000000120b8	add	x24, x8, #0x70
00000000000120bc	add	x25, x8, #0x68
00000000000120c0	add	x8, sp, #0x10
00000000000120c4	str	x8, [sp, #0xa0]
00000000000120c8	add	x0, sp, #0x10
00000000000120cc	mov	w1, #0xa
00000000000120d0	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000120d4	adr	x1, #0x5c72c
00000000000120d8	nop
00000000000120dc	add	x0, sp, #0x10
00000000000120e0	mov	x2, x25
00000000000120e4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000120e8	add	x0, sp, #0x10
00000000000120ec	mov	x1, x20
00000000000120f0	mov	x2, x24
00000000000120f4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000120f8	adr	x1, #0x5c768
00000000000120fc	nop
0000000000012100	add	x0, sp, #0x10
0000000000012104	mov	x2, x23
0000000000012108	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001210c	add	x0, sp, #0x10
0000000000012110	mov	x1, x19
0000000000012114	mov	x2, x26
0000000000012118	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001211c	add	x0, sp, #0x10
0000000000012120	mov	x1, x21
0000000000012124	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000012128	mov	x19, x0
000000000001212c	ldr	x8, [x22, #0x118]
0000000000012130	add	x0, x8, #0x70
0000000000012134	mov	w1, #0x38
0000000000012138	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001213c	mov	x20, x0
0000000000012140	adr	x8, #0x4f2a0
0000000000012144	nop
0000000000012148	str	x8, [x20, #0x10]!
000000000001214c	stur	xzr, [x20, #-0x8]
0000000000012150	str	x20, [sp, #0xd0]
0000000000012154	mov	x0, x20
0000000000012158	mov	x1, x19
000000000001215c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000012160	mov	x0, x20
0000000000012164	bl	_ThrowException
_kfun:kotlin.collections#getOrNull__at__kotlin.Array<out|0:0>(kotlin.Int){0§<kotlin.Any?>}0:0?:
0000000000012168	stp	x22, x21, [sp, #-0x30]!
000000000001216c	stp	x20, x19, [sp, #0x10]
0000000000012170	stp	x29, x30, [sp, #0x20]
0000000000012174	add	x29, sp, #0x20
0000000000012178	mov	x19, x2
000000000001217c	mov	x20, x1
0000000000012180	mov	x21, x0
0000000000012184	adr	x8, #0x82105
0000000000012188	nop
000000000001218c	ldarb	w8, [x8]
0000000000012190	tbz	w8, #0x0, 0x12198
0000000000012194	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012198	tbnz	w20, #0x1f, 0x121ac
000000000001219c	ldr	w8, [x21, #0x8]
00000000000121a0	sub	w9, w8, #0x1
00000000000121a4	cmp	w9, w20
00000000000121a8	b.ge	0x121c4
00000000000121ac	mov	x0, #0x0
00000000000121b0	str	x0, [x19]
00000000000121b4	ldp	x29, x30, [sp, #0x20]
00000000000121b8	ldp	x20, x19, [sp, #0x10]
00000000000121bc	ldp	x22, x21, [sp], #0x30
00000000000121c0	ret
00000000000121c4	cmp	w8, w20
00000000000121c8	b.ls	0x121ec
00000000000121cc	add	x8, x21, w20, sxtw #3
00000000000121d0	ldr	x0, [x8, #0x10]
00000000000121d4	str	x0, [x19]
00000000000121d8	str	x0, [x19]
00000000000121dc	ldp	x29, x30, [sp, #0x20]
00000000000121e0	ldp	x20, x19, [sp, #0x10]
00000000000121e4	ldp	x22, x21, [sp], #0x30
00000000000121e8	ret
00000000000121ec	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections#joinToString$default__at__kotlin.collections.Iterable<0:0>(kotlin.CharSequence?;kotlin.CharSequence?;kotlin.CharSequence?;kotlin.Int;kotlin.CharSequence?;kotlin.Function1<0:0,kotlin.CharSequence>?;kotlin.Int){0§<kotlin.Any?>}kotlin.String:
00000000000121f0	sub	sp, sp, #0x170
00000000000121f4	stp	x28, x27, [sp, #0x110]
00000000000121f8	stp	x26, x25, [sp, #0x120]
00000000000121fc	stp	x24, x23, [sp, #0x130]
0000000000012200	stp	x22, x21, [sp, #0x140]
0000000000012204	stp	x20, x19, [sp, #0x150]
0000000000012208	stp	x29, x30, [sp, #0x160]
000000000001220c	add	x29, sp, #0x160
0000000000012210	stp	x2, x4, [sp, #0x8]
0000000000012214	mov	x23, x3
0000000000012218	mov	x26, x1
000000000001221c	mov	x19, x0
0000000000012220	adr	x8, #0x82069
0000000000012224	nop
0000000000012228	ldarb	w8, [x8]
000000000001222c	tbz	w8, #0x0, 0x12234
0000000000012230	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012234	movi.16b	v0, #0x0
0000000000012238	stp	q0, q0, [sp, #0x40]
000000000001223c	str	xzr, [sp, #0x60]
0000000000012240	adrp	x21, 104 ; 0x7a000
0000000000012244	add	x21, x21, #0x2c0
0000000000012248	ldr	x20, [x21]
000000000001224c	mov	x0, x21
0000000000012250	blr	x20
0000000000012254	mov	x24, x0
0000000000012258	ldr	x8, [x0]
000000000001225c	add	x9, sp, #0x40
0000000000012260	ldp	x10, x11, [x8, #0x110]
0000000000012264	str	x9, [x8, #0x110]
0000000000012268	mov	x8, #0x500000000
000000000001226c	stp	x10, x8, [sp, #0x48]
0000000000012270	add	x0, x11, #0x70
0000000000012274	mov	w1, #0x20
0000000000012278	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001227c	mov	x22, x0
0000000000012280	adr	x8, #0x52910
0000000000012284	nop
0000000000012288	str	x8, [x22, #0x10]!
000000000001228c	stur	xzr, [x22, #-0x8]
0000000000012290	str	x22, [sp, #0x58]
0000000000012294	mov	x0, x22
0000000000012298	mov	w1, #0xa
000000000001229c	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000122a0	movi.16b	v0, #0x0
00000000000122a4	stp	q0, q0, [sp, #0x70]
00000000000122a8	str	xzr, [sp, #0xb0]
00000000000122ac	stp	q0, q0, [sp, #0x90]
00000000000122b0	add	x8, sp, #0x70
00000000000122b4	add	x27, x8, #0x20
00000000000122b8	add	x2, x8, #0x18
00000000000122bc	ldr	x9, [x24]
00000000000122c0	ldr	x10, [x9, #0x110]
00000000000122c4	str	x8, [x9, #0x110]
00000000000122c8	mov	x9, #0x900000000
00000000000122cc	stp	x10, x9, [sp, #0x78]
00000000000122d0	ldr	x9, [x22]
00000000000122d4	and	x9, x9, #0xfffffffffffffffc
00000000000122d8	ldr	x9, [x9]
00000000000122dc	ldr	w10, [x9, #0x3c]
00000000000122e0	ldr	x9, [x9, #0x40]
00000000000122e4	tbnz	w10, #0x1f, 0x122f4
00000000000122e8	mov	w11, #0xc8
00000000000122ec	and	x10, x10, x11
00000000000122f0	b	0x12378
00000000000122f4	neg	w11, w10
00000000000122f8	mvn	w10, w10
00000000000122fc	cmp	w11, #0x9
0000000000012300	b.ge	0x12338
0000000000012304	cmp	w11, #0x2
0000000000012308	b.lt	0x1236c
000000000001230c	mov	x11, #0x0
0000000000012310	mov	x12, x9
0000000000012314	ldr	w13, [x12]
0000000000012318	cmp	w13, #0xc7
000000000001231c	b.gt	0x12374
0000000000012320	add	x11, x11, #0x1
0000000000012324	add	x12, x12, #0x10
0000000000012328	cmp	x10, x11
000000000001232c	b.ne	0x12314
0000000000012330	mov	x11, x10
0000000000012334	b	0x12374
0000000000012338	mov	w11, #0x0
000000000001233c	add	w12, w10, w11
0000000000012340	cmp	w12, #0x0
0000000000012344	cinc	w12, w12, lt
0000000000012348	asr	w12, w12, #1
000000000001234c	sbfiz	x13, x12, #4, #32
0000000000012350	ldr	w13, [x9, x13]
0000000000012354	cmp	w13, #0xc8
0000000000012358	csinc	w11, w11, w12, ge
000000000001235c	csel	w10, w10, w12, lt
0000000000012360	cmp	w11, w10
0000000000012364	b.lt	0x1233c
0000000000012368	b	0x12374
000000000001236c	mov	w11, #0x0
0000000000012370	b	0x12374
0000000000012374	sxtw	x10, w11
0000000000012378	add	x11, x8, #0x30
000000000001237c	str	x11, [sp, #0x38]
0000000000012380	add	x25, x8, #0x28
0000000000012384	add	x8, x9, x10, lsl #4
0000000000012388	ldr	x8, [x8, #0x8]
000000000001238c	ldr	x8, [x8, #0x8]
0000000000012390	mov	x0, x22
0000000000012394	mov	x1, x26
0000000000012398	blr	x8
000000000001239c	ldr	x8, [x19]
00000000000123a0	and	x8, x8, #0xfffffffffffffffc
00000000000123a4	ldr	x8, [x8]
00000000000123a8	ldr	w9, [x8, #0x3c]
00000000000123ac	ldr	x8, [x8, #0x40]
00000000000123b0	tbnz	w9, #0x1f, 0x123c0
00000000000123b4	mov	w10, #0x31
00000000000123b8	and	x9, x9, x10
00000000000123bc	b	0x12444
00000000000123c0	neg	w10, w9
00000000000123c4	mvn	w9, w9
00000000000123c8	cmp	w10, #0x9
00000000000123cc	b.ge	0x12404
00000000000123d0	cmp	w10, #0x2
00000000000123d4	b.lt	0x12438
00000000000123d8	mov	x10, #0x0
00000000000123dc	mov	x11, x8
00000000000123e0	ldr	w12, [x11]
00000000000123e4	cmp	w12, #0x30
00000000000123e8	b.gt	0x12440
00000000000123ec	add	x10, x10, #0x1
00000000000123f0	add	x11, x11, #0x10
00000000000123f4	cmp	x9, x10
00000000000123f8	b.ne	0x123e0
00000000000123fc	mov	x10, x9
0000000000012400	b	0x12440
0000000000012404	mov	w10, #0x0
0000000000012408	add	w11, w9, w10
000000000001240c	cmp	w11, #0x0
0000000000012410	cinc	w11, w11, lt
0000000000012414	asr	w11, w11, #1
0000000000012418	sbfiz	x12, x11, #4, #32
000000000001241c	ldr	w12, [x8, x12]
0000000000012420	cmp	w12, #0x31
0000000000012424	csinc	w10, w10, w11, ge
0000000000012428	csel	w9, w9, w11, lt
000000000001242c	cmp	w10, w9
0000000000012430	b.lt	0x12408
0000000000012434	b	0x12440
0000000000012438	mov	w10, #0x0
000000000001243c	b	0x12440
0000000000012440	sxtw	x9, w10
0000000000012444	add	x8, x8, x9, lsl #4
0000000000012448	ldr	x8, [x8, #0x8]
000000000001244c	ldr	x8, [x8]
0000000000012450	mov	x0, x19
0000000000012454	mov	x1, x27
0000000000012458	blr	x8
000000000001245c	mov	x26, x0
0000000000012460	mov	w24, #0x0
0000000000012464	sub	x8, x29, #0xa0
0000000000012468	add	x27, x8, #0x18
000000000001246c	add	x28, x8, #0x20
0000000000012470	add	x10, x8, #0x28
0000000000012474	add	x9, x8, #0x30
0000000000012478	stp	x9, x10, [sp, #0x28]
000000000001247c	add	x9, x8, #0x38
0000000000012480	add	x8, x8, #0x40
0000000000012484	stp	x8, x9, [sp, #0x18]
0000000000012488	b	0x124c0
000000000001248c	mov	w10, #0xc8
0000000000012490	and	x9, x9, x10
0000000000012494	add	x8, x8, x9, lsl #4
0000000000012498	ldr	x8, [x8, #0x8]
000000000001249c	ldr	x8, [x8, #0x8]
00000000000124a0	mov	x0, x22
00000000000124a4	mov	x2, x28
00000000000124a8	blr	x8
00000000000124ac	mov	x0, x21
00000000000124b0	blr	x20
00000000000124b4	ldr	x8, [x0]
00000000000124b8	ldur	x9, [x29, #-0x98]
00000000000124bc	str	x9, [x8, #0x110]
00000000000124c0	ldr	x8, [x26]
00000000000124c4	and	x8, x8, #0xfffffffffffffffc
00000000000124c8	ldr	x8, [x8]
00000000000124cc	ldr	w9, [x8, #0x3c]
00000000000124d0	ldr	x8, [x8, #0x40]
00000000000124d4	tbnz	w9, #0x1f, 0x124fc
00000000000124d8	mov	w10, #0xa0
00000000000124dc	and	x9, x9, x10
00000000000124e0	add	x8, x8, x9, lsl #4
00000000000124e4	ldr	x8, [x8, #0x8]
00000000000124e8	ldr	x8, [x8]
00000000000124ec	mov	x0, x26
00000000000124f0	blr	x8
00000000000124f4	tbnz	w0, #0x0, 0x12598
00000000000124f8	b	0x12c68
00000000000124fc	neg	w10, w9
0000000000012500	mvn	w9, w9
0000000000012504	cmp	w10, #0x9
0000000000012508	b.ge	0x12540
000000000001250c	cmp	w10, #0x2
0000000000012510	b.lt	0x12574
0000000000012514	mov	x10, #0x0
0000000000012518	mov	x11, x8
000000000001251c	ldr	w12, [x11]
0000000000012520	cmp	w12, #0x9f
0000000000012524	b.gt	0x1257c
0000000000012528	add	x10, x10, #0x1
000000000001252c	add	x11, x11, #0x10
0000000000012530	cmp	x9, x10
0000000000012534	b.ne	0x1251c
0000000000012538	mov	x10, x9
000000000001253c	b	0x1257c
0000000000012540	mov	w10, #0x0
0000000000012544	add	w11, w9, w10
0000000000012548	cmp	w11, #0x0
000000000001254c	cinc	w11, w11, lt
0000000000012550	asr	w11, w11, #1
0000000000012554	sbfiz	x12, x11, #4, #32
0000000000012558	ldr	w12, [x8, x12]
000000000001255c	cmp	w12, #0xa0
0000000000012560	csinc	w10, w10, w11, ge
0000000000012564	csel	w9, w9, w11, lt
0000000000012568	cmp	w10, w9
000000000001256c	b.lt	0x12544
0000000000012570	b	0x1257c
0000000000012574	mov	w10, #0x0
0000000000012578	b	0x1257c
000000000001257c	sxtw	x9, w10
0000000000012580	add	x8, x8, x9, lsl #4
0000000000012584	ldr	x8, [x8, #0x8]
0000000000012588	ldr	x8, [x8]
000000000001258c	mov	x0, x26
0000000000012590	blr	x8
0000000000012594	tbz	w0, #0x0, 0x12c68
0000000000012598	adr	x8, #0x81cf1
000000000001259c	nop
00000000000125a0	ldarb	w8, [x8]
00000000000125a4	tbz	w8, #0x0, 0x125ac
00000000000125a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000125ac	ldr	x8, [x26]
00000000000125b0	and	x8, x8, #0xfffffffffffffffc
00000000000125b4	ldr	x8, [x8]
00000000000125b8	ldr	w9, [x8, #0x3c]
00000000000125bc	ldr	x8, [x8, #0x40]
00000000000125c0	tbnz	w9, #0x1f, 0x125d0
00000000000125c4	mov	w10, #0xa0
00000000000125c8	and	x9, x9, x10
00000000000125cc	b	0x12654
00000000000125d0	neg	w10, w9
00000000000125d4	mvn	w9, w9
00000000000125d8	cmp	w10, #0x9
00000000000125dc	b.ge	0x12614
00000000000125e0	cmp	w10, #0x2
00000000000125e4	b.lt	0x12648
00000000000125e8	mov	x10, #0x0
00000000000125ec	mov	x11, x8
00000000000125f0	ldr	w12, [x11]
00000000000125f4	cmp	w12, #0x9f
00000000000125f8	b.gt	0x12650
00000000000125fc	add	x10, x10, #0x1
0000000000012600	add	x11, x11, #0x10
0000000000012604	cmp	x9, x10
0000000000012608	b.ne	0x125f0
000000000001260c	mov	x10, x9
0000000000012610	b	0x12650
0000000000012614	mov	w10, #0x0
0000000000012618	add	w11, w9, w10
000000000001261c	cmp	w11, #0x0
0000000000012620	cinc	w11, w11, lt
0000000000012624	asr	w11, w11, #1
0000000000012628	sbfiz	x12, x11, #4, #32
000000000001262c	ldr	w12, [x8, x12]
0000000000012630	cmp	w12, #0xa0
0000000000012634	csinc	w10, w10, w11, ge
0000000000012638	csel	w9, w9, w11, lt
000000000001263c	cmp	w10, w9
0000000000012640	b.lt	0x12618
0000000000012644	b	0x12650
0000000000012648	mov	w10, #0x0
000000000001264c	b	0x12650
0000000000012650	sxtw	x9, w10
0000000000012654	add	x8, x8, x9, lsl #4
0000000000012658	ldr	x8, [x8, #0x8]
000000000001265c	ldr	x8, [x8, #0x8]
0000000000012660	mov	x0, x26
0000000000012664	mov	x1, x25
0000000000012668	blr	x8
000000000001266c	mov	x19, x0
0000000000012670	add	w24, w24, #0x1
0000000000012674	cmp	w24, #0x2
0000000000012678	b.lt	0x12744
000000000001267c	ldr	x8, [x22]
0000000000012680	and	x8, x8, #0xfffffffffffffffc
0000000000012684	ldr	x8, [x8]
0000000000012688	ldr	w9, [x8, #0x3c]
000000000001268c	ldr	x8, [x8, #0x40]
0000000000012690	tbnz	w9, #0x1f, 0x126a0
0000000000012694	mov	w10, #0xc8
0000000000012698	and	x9, x9, x10
000000000001269c	b	0x12724
00000000000126a0	neg	w10, w9
00000000000126a4	mvn	w9, w9
00000000000126a8	cmp	w10, #0x9
00000000000126ac	b.ge	0x126e4
00000000000126b0	cmp	w10, #0x2
00000000000126b4	b.lt	0x12718
00000000000126b8	mov	x10, #0x0
00000000000126bc	mov	x11, x8
00000000000126c0	ldr	w12, [x11]
00000000000126c4	cmp	w12, #0xc7
00000000000126c8	b.gt	0x12720
00000000000126cc	add	x10, x10, #0x1
00000000000126d0	add	x11, x11, #0x10
00000000000126d4	cmp	x9, x10
00000000000126d8	b.ne	0x126c0
00000000000126dc	mov	x10, x9
00000000000126e0	b	0x12720
00000000000126e4	mov	w10, #0x0
00000000000126e8	add	w11, w9, w10
00000000000126ec	cmp	w11, #0x0
00000000000126f0	cinc	w11, w11, lt
00000000000126f4	asr	w11, w11, #1
00000000000126f8	sbfiz	x12, x11, #4, #32
00000000000126fc	ldr	w12, [x8, x12]
0000000000012700	cmp	w12, #0xc8
0000000000012704	csinc	w10, w10, w11, ge
0000000000012708	csel	w9, w9, w11, lt
000000000001270c	cmp	w10, w9
0000000000012710	b.lt	0x126e8
0000000000012714	b	0x12720
0000000000012718	mov	w10, #0x0
000000000001271c	b	0x12720
0000000000012720	sxtw	x9, w10
0000000000012724	add	x8, x8, x9, lsl #4
0000000000012728	ldr	x8, [x8, #0x8]
000000000001272c	ldr	x8, [x8, #0x8]
0000000000012730	mov	x0, x22
0000000000012734	adr	x1, #0x5b88c
0000000000012738	nop
000000000001273c	ldr	x2, [sp, #0x38]
0000000000012740	blr	x8
0000000000012744	movi.16b	v0, #0x0
0000000000012748	stp	q0, q0, [x29, #-0xa0]
000000000001274c	stur	xzr, [x29, #-0x60]
0000000000012750	stp	q0, q0, [x29, #-0x80]
0000000000012754	mov	x0, x21
0000000000012758	blr	x20
000000000001275c	ldr	x8, [x0]
0000000000012760	ldr	x9, [x8, #0x110]
0000000000012764	sub	x10, x29, #0xa0
0000000000012768	str	x10, [x8, #0x110]
000000000001276c	mov	x8, #0x900000000
0000000000012770	stp	x9, x8, [x29, #-0x98]
0000000000012774	cbz	x23, 0x1279c
0000000000012778	ldr	x8, [x23]
000000000001277c	and	x8, x8, #0xfffffffffffffffc
0000000000012780	ldr	x8, [x8]
0000000000012784	ldr	w9, [x8, #0x3c]
0000000000012788	ldr	x8, [x8, #0x40]
000000000001278c	tbnz	w9, #0x1f, 0x127f4
0000000000012790	mov	w10, #0x2c
0000000000012794	and	x9, x9, x10
0000000000012798	b	0x12a10
000000000001279c	cbz	x19, 0x127d0
00000000000127a0	ldr	x8, [x19]
00000000000127a4	and	x8, x8, #0xfffffffffffffffc
00000000000127a8	ldr	x8, [x8]
00000000000127ac	ldr	w9, [x8, #0x3c]
00000000000127b0	ldr	x8, [x8, #0x40]
00000000000127b4	tbnz	w9, #0x1f, 0x128b0
00000000000127b8	mov	w10, #0x19
00000000000127bc	and	x9, x9, x10
00000000000127c0	lsl	x9, x9, #4
00000000000127c4	ldr	w8, [x8, x9]
00000000000127c8	cmp	w8, #0x19
00000000000127cc	b.ne	0x12988
00000000000127d0	ldr	x8, [x22]
00000000000127d4	and	x8, x8, #0xfffffffffffffffc
00000000000127d8	ldr	x8, [x8]
00000000000127dc	ldr	w9, [x8, #0x3c]
00000000000127e0	ldr	x8, [x8, #0x40]
00000000000127e4	tbnz	w9, #0x1f, 0x1286c
00000000000127e8	mov	w10, #0xc8
00000000000127ec	and	x9, x9, x10
00000000000127f0	b	0x12b80
00000000000127f4	neg	w10, w9
00000000000127f8	mvn	w9, w9
00000000000127fc	cmp	w10, #0x9
0000000000012800	b.ge	0x12838
0000000000012804	cmp	w10, #0x2
0000000000012808	b.lt	0x12908
000000000001280c	mov	x10, #0x0
0000000000012810	mov	x11, x8
0000000000012814	ldr	w12, [x11]
0000000000012818	cmp	w12, #0x2b
000000000001281c	b.gt	0x12a0c
0000000000012820	add	x10, x10, #0x1
0000000000012824	add	x11, x11, #0x10
0000000000012828	cmp	x9, x10
000000000001282c	b.ne	0x12814
0000000000012830	mov	x10, x9
0000000000012834	b	0x12a0c
0000000000012838	mov	w10, #0x0
000000000001283c	add	w11, w9, w10
0000000000012840	cmp	w11, #0x0
0000000000012844	cinc	w11, w11, lt
0000000000012848	asr	w11, w11, #1
000000000001284c	sbfiz	x12, x11, #4, #32
0000000000012850	ldr	w12, [x8, x12]
0000000000012854	cmp	w12, #0x2c
0000000000012858	csinc	w10, w10, w11, ge
000000000001285c	csel	w9, w9, w11, lt
0000000000012860	cmp	w10, w9
0000000000012864	b.lt	0x1283c
0000000000012868	b	0x12a0c
000000000001286c	neg	w10, w9
0000000000012870	mvn	w9, w9
0000000000012874	cmp	w10, #0x9
0000000000012878	b.ge	0x12910
000000000001287c	cmp	w10, #0x2
0000000000012880	b.lt	0x12ad0
0000000000012884	mov	x10, #0x0
0000000000012888	mov	x11, x8
000000000001288c	ldr	w12, [x11]
0000000000012890	cmp	w12, #0xc7
0000000000012894	b.gt	0x12b7c
0000000000012898	add	x10, x10, #0x1
000000000001289c	add	x11, x11, #0x10
00000000000128a0	cmp	x9, x10
00000000000128a4	b.ne	0x1288c
00000000000128a8	mov	x10, x9
00000000000128ac	b	0x12b7c
00000000000128b0	neg	w10, w9
00000000000128b4	mvn	w9, w9
00000000000128b8	cmp	w10, #0x9
00000000000128bc	b.ge	0x12944
00000000000128c0	cmp	w10, #0x2
00000000000128c4	b.lt	0x12ad8
00000000000128c8	mov	x10, #0x0
00000000000128cc	mov	x11, x8
00000000000128d0	ldr	w12, [x11]
00000000000128d4	cmp	w12, #0x18
00000000000128d8	b.gt	0x12b9c
00000000000128dc	add	x10, x10, #0x1
00000000000128e0	add	x11, x11, #0x10
00000000000128e4	cmp	x9, x10
00000000000128e8	b.ne	0x128d0
00000000000128ec	mov	x10, x9
00000000000128f0	sxtw	x9, w10
00000000000128f4	lsl	x9, x9, #4
00000000000128f8	ldr	w8, [x8, x9]
00000000000128fc	cmp	w8, #0x19
0000000000012900	b.ne	0x12988
0000000000012904	b	0x127d0
0000000000012908	mov	w10, #0x0
000000000001290c	b	0x12a0c
0000000000012910	mov	w10, #0x0
0000000000012914	add	w11, w9, w10
0000000000012918	cmp	w11, #0x0
000000000001291c	cinc	w11, w11, lt
0000000000012920	asr	w11, w11, #1
0000000000012924	sbfiz	x12, x11, #4, #32
0000000000012928	ldr	w12, [x8, x12]
000000000001292c	cmp	w12, #0xc8
0000000000012930	csinc	w10, w10, w11, ge
0000000000012934	csel	w9, w9, w11, lt
0000000000012938	cmp	w10, w9
000000000001293c	b.lt	0x12914
0000000000012940	b	0x12b7c
0000000000012944	mov	w10, #0x0
0000000000012948	add	w11, w9, w10
000000000001294c	cmp	w11, #0x0
0000000000012950	cinc	w11, w11, lt
0000000000012954	asr	w11, w11, #1
0000000000012958	sbfiz	x12, x11, #4, #32
000000000001295c	ldr	w12, [x8, x12]
0000000000012960	cmp	w12, #0x19
0000000000012964	csinc	w10, w10, w11, ge
0000000000012968	csel	w9, w9, w11, lt
000000000001296c	cmp	w10, w9
0000000000012970	b.lt	0x12948
0000000000012974	sxtw	x9, w10
0000000000012978	lsl	x9, x9, #4
000000000001297c	ldr	w8, [x8, x9]
0000000000012980	cmp	w8, #0x19
0000000000012984	b.eq	0x127d0
0000000000012988	ldr	x8, [x19]
000000000001298c	and	x8, x8, #0xfffffffffffffffc
0000000000012990	ldr	x8, [x8]
0000000000012994	ldr	w8, [x8, #0x5c]
0000000000012998	cmp	w8, #0x55
000000000001299c	b.ne	0x129c8
00000000000129a0	ldrh	w1, [x19, #0x8]
00000000000129a4	ldr	x8, [x22]
00000000000129a8	and	x8, x8, #0xfffffffffffffffc
00000000000129ac	ldr	x8, [x8]
00000000000129b0	ldr	w9, [x8, #0x3c]
00000000000129b4	ldr	x8, [x8, #0x40]
00000000000129b8	tbnz	w9, #0x1f, 0x12af4
00000000000129bc	mov	w10, #0xc8
00000000000129c0	and	x9, x9, x10
00000000000129c4	b	0x12c30
00000000000129c8	ldr	x8, [x19]
00000000000129cc	and	x8, x8, #0xfffffffffffffffc
00000000000129d0	ldr	x8, [x8]
00000000000129d4	ldr	x8, [x8, #0x80]
00000000000129d8	mov	x0, x19
00000000000129dc	ldr	x1, [sp, #0x20]
00000000000129e0	blr	x8
00000000000129e4	mov	x1, x0
00000000000129e8	ldr	x8, [x22]
00000000000129ec	and	x8, x8, #0xfffffffffffffffc
00000000000129f0	ldr	x8, [x8]
00000000000129f4	ldr	w9, [x8, #0x3c]
00000000000129f8	ldr	x8, [x8, #0x40]
00000000000129fc	tbnz	w9, #0x1f, 0x12b38
0000000000012a00	mov	w10, #0xc8
0000000000012a04	and	x9, x9, x10
0000000000012a08	b	0x12c50
0000000000012a0c	sxtw	x9, w10
0000000000012a10	add	x8, x8, x9, lsl #4
0000000000012a14	ldr	x8, [x8, #0x8]
0000000000012a18	ldr	x8, [x8]
0000000000012a1c	mov	x0, x23
0000000000012a20	mov	x1, x19
0000000000012a24	mov	x2, x27
0000000000012a28	blr	x8
0000000000012a2c	mov	x1, x0
0000000000012a30	ldr	x8, [x22]
0000000000012a34	and	x8, x8, #0xfffffffffffffffc
0000000000012a38	ldr	x8, [x8]
0000000000012a3c	ldr	w9, [x8, #0x3c]
0000000000012a40	ldr	x8, [x8, #0x40]
0000000000012a44	tbz	w9, #0x1f, 0x1248c
0000000000012a48	neg	w10, w9
0000000000012a4c	mvn	w9, w9
0000000000012a50	cmp	w10, #0x9
0000000000012a54	b.ge	0x12a8c
0000000000012a58	cmp	w10, #0x2
0000000000012a5c	b.lt	0x12ac0
0000000000012a60	mov	x10, #0x0
0000000000012a64	mov	x11, x8
0000000000012a68	ldr	w12, [x11]
0000000000012a6c	cmp	w12, #0xc7
0000000000012a70	b.gt	0x12ac8
0000000000012a74	add	x10, x10, #0x1
0000000000012a78	add	x11, x11, #0x10
0000000000012a7c	cmp	x9, x10
0000000000012a80	b.ne	0x12a68
0000000000012a84	mov	x10, x9
0000000000012a88	b	0x12ac8
0000000000012a8c	mov	w10, #0x0
0000000000012a90	add	w11, w9, w10
0000000000012a94	cmp	w11, #0x0
0000000000012a98	cinc	w11, w11, lt
0000000000012a9c	asr	w11, w11, #1
0000000000012aa0	sbfiz	x12, x11, #4, #32
0000000000012aa4	ldr	w12, [x8, x12]
0000000000012aa8	cmp	w12, #0xc8
0000000000012aac	csinc	w10, w10, w11, ge
0000000000012ab0	csel	w9, w9, w11, lt
0000000000012ab4	cmp	w10, w9
0000000000012ab8	b.lt	0x12a90
0000000000012abc	b	0x12ac8
0000000000012ac0	mov	w10, #0x0
0000000000012ac4	b	0x12ac8
0000000000012ac8	sxtw	x9, w10
0000000000012acc	b	0x12494
0000000000012ad0	mov	w10, #0x0
0000000000012ad4	b	0x12b7c
0000000000012ad8	mov	w10, #0x0
0000000000012adc	sxtw	x9, w10
0000000000012ae0	lsl	x9, x9, #4
0000000000012ae4	ldr	w8, [x8, x9]
0000000000012ae8	cmp	w8, #0x19
0000000000012aec	b.eq	0x127d0
0000000000012af0	b	0x12988
0000000000012af4	neg	w10, w9
0000000000012af8	mvn	w9, w9
0000000000012afc	cmp	w10, #0x9
0000000000012b00	b.ge	0x12bb4
0000000000012b04	cmp	w10, #0x2
0000000000012b08	b.lt	0x12c1c
0000000000012b0c	mov	x10, #0x0
0000000000012b10	mov	x11, x8
0000000000012b14	ldr	w12, [x11]
0000000000012b18	cmp	w12, #0xc7
0000000000012b1c	b.gt	0x12c2c
0000000000012b20	add	x10, x10, #0x1
0000000000012b24	add	x11, x11, #0x10
0000000000012b28	cmp	x9, x10
0000000000012b2c	b.ne	0x12b14
0000000000012b30	mov	x10, x9
0000000000012b34	b	0x12c2c
0000000000012b38	neg	w10, w9
0000000000012b3c	mvn	w9, w9
0000000000012b40	cmp	w10, #0x9
0000000000012b44	b.ge	0x12be8
0000000000012b48	cmp	w10, #0x2
0000000000012b4c	b.lt	0x12c24
0000000000012b50	mov	x10, #0x0
0000000000012b54	mov	x11, x8
0000000000012b58	ldr	w12, [x11]
0000000000012b5c	cmp	w12, #0xc7
0000000000012b60	b.gt	0x12c4c
0000000000012b64	add	x10, x10, #0x1
0000000000012b68	add	x11, x11, #0x10
0000000000012b6c	cmp	x9, x10
0000000000012b70	b.ne	0x12b58
0000000000012b74	mov	x10, x9
0000000000012b78	b	0x12c4c
0000000000012b7c	sxtw	x9, w10
0000000000012b80	add	x8, x8, x9, lsl #4
0000000000012b84	ldr	x8, [x8, #0x8]
0000000000012b88	ldr	x8, [x8, #0x8]
0000000000012b8c	mov	x0, x22
0000000000012b90	mov	x1, x19
0000000000012b94	ldr	x2, [sp, #0x30]
0000000000012b98	b	0x124a8
0000000000012b9c	sxtw	x9, w10
0000000000012ba0	lsl	x9, x9, #4
0000000000012ba4	ldr	w8, [x8, x9]
0000000000012ba8	cmp	w8, #0x19
0000000000012bac	b.ne	0x12988
0000000000012bb0	b	0x127d0
0000000000012bb4	mov	w10, #0x0
0000000000012bb8	add	w11, w9, w10
0000000000012bbc	cmp	w11, #0x0
0000000000012bc0	cinc	w11, w11, lt
0000000000012bc4	asr	w11, w11, #1
0000000000012bc8	sbfiz	x12, x11, #4, #32
0000000000012bcc	ldr	w12, [x8, x12]
0000000000012bd0	cmp	w12, #0xc8
0000000000012bd4	csinc	w10, w10, w11, ge
0000000000012bd8	csel	w9, w9, w11, lt
0000000000012bdc	cmp	w10, w9
0000000000012be0	b.lt	0x12bb8
0000000000012be4	b	0x12c2c
0000000000012be8	mov	w10, #0x0
0000000000012bec	add	w11, w9, w10
0000000000012bf0	cmp	w11, #0x0
0000000000012bf4	cinc	w11, w11, lt
0000000000012bf8	asr	w11, w11, #1
0000000000012bfc	sbfiz	x12, x11, #4, #32
0000000000012c00	ldr	w12, [x8, x12]
0000000000012c04	cmp	w12, #0xc8
0000000000012c08	csinc	w10, w10, w11, ge
0000000000012c0c	csel	w9, w9, w11, lt
0000000000012c10	cmp	w10, w9
0000000000012c14	b.lt	0x12bec
0000000000012c18	b	0x12c4c
0000000000012c1c	mov	w10, #0x0
0000000000012c20	b	0x12c2c
0000000000012c24	mov	w10, #0x0
0000000000012c28	b	0x12c4c
0000000000012c2c	sxtw	x9, w10
0000000000012c30	add	x8, x8, x9, lsl #4
0000000000012c34	ldr	x8, [x8, #0x8]
0000000000012c38	ldr	x8, [x8]
0000000000012c3c	mov	x0, x22
0000000000012c40	ldr	x2, [sp, #0x28]
0000000000012c44	blr	x8
0000000000012c48	b	0x124ac
0000000000012c4c	sxtw	x9, w10
0000000000012c50	add	x8, x8, x9, lsl #4
0000000000012c54	ldr	x8, [x8, #0x8]
0000000000012c58	ldr	x8, [x8, #0x8]
0000000000012c5c	mov	x0, x22
0000000000012c60	ldr	x2, [sp, #0x18]
0000000000012c64	b	0x124a8
0000000000012c68	ldr	x8, [x22]
0000000000012c6c	and	x8, x8, #0xfffffffffffffffc
0000000000012c70	ldr	x8, [x8]
0000000000012c74	ldr	w9, [x8, #0x3c]
0000000000012c78	ldr	x8, [x8, #0x40]
0000000000012c7c	tbnz	w9, #0x1f, 0x12c8c
0000000000012c80	mov	w10, #0xc8
0000000000012c84	and	x9, x9, x10
0000000000012c88	b	0x12d10
0000000000012c8c	neg	w10, w9
0000000000012c90	mvn	w9, w9
0000000000012c94	cmp	w10, #0x9
0000000000012c98	b.ge	0x12cd0
0000000000012c9c	cmp	w10, #0x2
0000000000012ca0	b.lt	0x12d04
0000000000012ca4	mov	x10, #0x0
0000000000012ca8	mov	x11, x8
0000000000012cac	ldr	w12, [x11]
0000000000012cb0	cmp	w12, #0xc7
0000000000012cb4	b.gt	0x12d0c
0000000000012cb8	add	x10, x10, #0x1
0000000000012cbc	add	x11, x11, #0x10
0000000000012cc0	cmp	x9, x10
0000000000012cc4	b.ne	0x12cac
0000000000012cc8	mov	x10, x9
0000000000012ccc	b	0x12d0c
0000000000012cd0	mov	w10, #0x0
0000000000012cd4	add	w11, w9, w10
0000000000012cd8	cmp	w11, #0x0
0000000000012cdc	cinc	w11, w11, lt
0000000000012ce0	asr	w11, w11, #1
0000000000012ce4	sbfiz	x12, x11, #4, #32
0000000000012ce8	ldr	w12, [x8, x12]
0000000000012cec	cmp	w12, #0xc8
0000000000012cf0	csinc	w10, w10, w11, ge
0000000000012cf4	csel	w9, w9, w11, lt
0000000000012cf8	cmp	w10, w9
0000000000012cfc	b.lt	0x12cd4
0000000000012d00	b	0x12d0c
0000000000012d04	mov	w10, #0x0
0000000000012d08	b	0x12d0c
0000000000012d0c	sxtw	x9, w10
0000000000012d10	add	x10, sp, #0x70
0000000000012d14	add	x2, x10, #0x40
0000000000012d18	add	x8, x8, x9, lsl #4
0000000000012d1c	ldr	x8, [x8, #0x8]
0000000000012d20	ldr	x8, [x8, #0x8]
0000000000012d24	mov	x0, x22
0000000000012d28	ldr	x1, [sp, #0x8]
0000000000012d2c	blr	x8
0000000000012d30	str	x22, [sp, #0x60]
0000000000012d34	mov	x0, x21
0000000000012d38	blr	x20
0000000000012d3c	mov	x19, x0
0000000000012d40	ldr	x8, [x0]
0000000000012d44	ldr	x9, [sp, #0x78]
0000000000012d48	str	x9, [x8, #0x110]
0000000000012d4c	mov	x0, x22
0000000000012d50	ldr	x20, [sp, #0x10]
0000000000012d54	mov	x1, x20
0000000000012d58	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000012d5c	str	x0, [x20]
0000000000012d60	ldr	x8, [x19]
0000000000012d64	ldr	x9, [sp, #0x48]
0000000000012d68	str	x9, [x8, #0x110]
0000000000012d6c	str	x0, [x20]
0000000000012d70	ldp	x29, x30, [sp, #0x160]
0000000000012d74	ldp	x20, x19, [sp, #0x150]
0000000000012d78	ldp	x22, x21, [sp, #0x140]
0000000000012d7c	ldp	x24, x23, [sp, #0x130]
0000000000012d80	ldp	x26, x25, [sp, #0x120]
0000000000012d84	ldp	x28, x27, [sp, #0x110]
0000000000012d88	add	sp, sp, #0x170
0000000000012d8c	ret
_kfun:kotlin.collections.AbstractMutableCollection#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000012d90	sub	sp, sp, #0x80
0000000000012d94	stp	x26, x25, [sp, #0x30]
0000000000012d98	stp	x24, x23, [sp, #0x40]
0000000000012d9c	stp	x22, x21, [sp, #0x50]
0000000000012da0	stp	x20, x19, [sp, #0x60]
0000000000012da4	stp	x29, x30, [sp, #0x70]
0000000000012da8	add	x29, sp, #0x70
0000000000012dac	mov	x21, x1
0000000000012db0	mov	x19, x0
0000000000012db4	movi.16b	v0, #0x0
0000000000012db8	stp	q0, q0, [sp]
0000000000012dbc	str	xzr, [sp, #0x20]
0000000000012dc0	mov	x20, sp
0000000000012dc4	add	x22, x20, #0x18
0000000000012dc8	adrp	x0, 104 ; 0x7a000
0000000000012dcc	add	x0, x0, #0x2c0
0000000000012dd0	ldr	x8, [x0]
0000000000012dd4	blr	x8
0000000000012dd8	ldr	x23, [x0]
0000000000012ddc	ldr	x8, [x23, #0x110]
0000000000012de0	str	x20, [x23, #0x110]
0000000000012de4	mov	x9, #0x500000000
0000000000012de8	stp	x8, x9, [sp, #0x8]
0000000000012dec	adr	x24, #0x8149d
0000000000012df0	nop
0000000000012df4	ldarb	w8, [x24]
0000000000012df8	tbz	w8, #0x0, 0x12e00
0000000000012dfc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012e00	add	x20, x20, #0x20
0000000000012e04	ldr	x8, [x21]
0000000000012e08	and	x8, x8, #0xfffffffffffffffc
0000000000012e0c	ldr	x8, [x8]
0000000000012e10	ldr	w9, [x8, #0x3c]
0000000000012e14	ldr	x8, [x8, #0x40]
0000000000012e18	tbnz	w9, #0x1f, 0x12e28
0000000000012e1c	mov	w10, #0x12
0000000000012e20	and	x9, x9, x10
0000000000012e24	b	0x12eac
0000000000012e28	neg	w10, w9
0000000000012e2c	mvn	w9, w9
0000000000012e30	cmp	w10, #0x9
0000000000012e34	b.ge	0x12e6c
0000000000012e38	cmp	w10, #0x2
0000000000012e3c	b.lt	0x12ea0
0000000000012e40	mov	x10, #0x0
0000000000012e44	mov	x11, x8
0000000000012e48	ldr	w12, [x11]
0000000000012e4c	cmp	w12, #0x11
0000000000012e50	b.gt	0x12ea8
0000000000012e54	add	x10, x10, #0x1
0000000000012e58	add	x11, x11, #0x10
0000000000012e5c	cmp	x9, x10
0000000000012e60	b.ne	0x12e48
0000000000012e64	mov	x10, x9
0000000000012e68	b	0x12ea8
0000000000012e6c	mov	w10, #0x0
0000000000012e70	add	w11, w9, w10
0000000000012e74	cmp	w11, #0x0
0000000000012e78	cinc	w11, w11, lt
0000000000012e7c	asr	w11, w11, #1
0000000000012e80	sbfiz	x12, x11, #4, #32
0000000000012e84	ldr	w12, [x8, x12]
0000000000012e88	cmp	w12, #0x12
0000000000012e8c	csinc	w10, w10, w11, ge
0000000000012e90	csel	w9, w9, w11, lt
0000000000012e94	cmp	w10, w9
0000000000012e98	b.lt	0x12e70
0000000000012e9c	b	0x12ea8
0000000000012ea0	mov	w10, #0x0
0000000000012ea4	b	0x12ea8
0000000000012ea8	sxtw	x9, w10
0000000000012eac	add	x8, x8, x9, lsl #4
0000000000012eb0	ldr	x8, [x8, #0x8]
0000000000012eb4	ldr	x8, [x8, #0x20]
0000000000012eb8	mov	x0, x21
0000000000012ebc	mov	x1, x22
0000000000012ec0	blr	x8
0000000000012ec4	mov	x21, x0
0000000000012ec8	mov	w22, #0x0
0000000000012ecc	mov	w25, #0xa0
0000000000012ed0	b	0x12f28
0000000000012ed4	ldr	x8, [x21]
0000000000012ed8	and	x8, x8, #0xfffffffffffffffc
0000000000012edc	ldr	x8, [x8]
0000000000012ee0	ldr	w9, [x8, #0x3c]
0000000000012ee4	ldr	x8, [x8, #0x40]
0000000000012ee8	tbnz	w9, #0x1f, 0x12fa4
0000000000012eec	and	x9, x9, x25
0000000000012ef0	add	x8, x8, x9, lsl #4
0000000000012ef4	ldr	x8, [x8, #0x8]
0000000000012ef8	ldr	x8, [x8, #0x8]
0000000000012efc	mov	x0, x21
0000000000012f00	mov	x1, x20
0000000000012f04	blr	x8
0000000000012f08	mov	x1, x0
0000000000012f0c	ldr	x8, [x19]
0000000000012f10	and	x8, x8, #0xfffffffffffffffc
0000000000012f14	ldr	x8, [x8]
0000000000012f18	ldr	x8, [x8, #0xc0]
0000000000012f1c	mov	x0, x19
0000000000012f20	blr	x8
0000000000012f24	orr	w22, w0, w22
0000000000012f28	ldr	x8, [x21]
0000000000012f2c	and	x8, x8, #0xfffffffffffffffc
0000000000012f30	ldr	x8, [x8]
0000000000012f34	ldr	w9, [x8, #0x3c]
0000000000012f38	ldr	x8, [x8, #0x40]
0000000000012f3c	tbnz	w9, #0x1f, 0x12f60
0000000000012f40	and	x9, x9, x25
0000000000012f44	add	x8, x8, x9, lsl #4
0000000000012f48	ldr	x8, [x8, #0x8]
0000000000012f4c	ldr	x8, [x8]
0000000000012f50	mov	x0, x21
0000000000012f54	blr	x8
0000000000012f58	tbnz	w0, #0x0, 0x1307c
0000000000012f5c	b	0x13094
0000000000012f60	neg	w10, w9
0000000000012f64	mvn	w9, w9
0000000000012f68	cmp	w10, #0x9
0000000000012f6c	b.ge	0x12fe8
0000000000012f70	cmp	w10, #0x2
0000000000012f74	b.lt	0x13050
0000000000012f78	mov	x10, #0x0
0000000000012f7c	mov	x11, x8
0000000000012f80	ldr	w12, [x11]
0000000000012f84	cmp	w12, #0x9f
0000000000012f88	b.gt	0x13060
0000000000012f8c	add	x10, x10, #0x1
0000000000012f90	add	x11, x11, #0x10
0000000000012f94	cmp	x9, x10
0000000000012f98	b.ne	0x12f80
0000000000012f9c	mov	x10, x9
0000000000012fa0	b	0x13060
0000000000012fa4	neg	w10, w9
0000000000012fa8	mvn	w9, w9
0000000000012fac	cmp	w10, #0x9
0000000000012fb0	b.ge	0x1301c
0000000000012fb4	cmp	w10, #0x2
0000000000012fb8	b.lt	0x13058
0000000000012fbc	mov	x10, #0x0
0000000000012fc0	mov	x11, x8
0000000000012fc4	ldr	w12, [x11]
0000000000012fc8	cmp	w12, #0x9f
0000000000012fcc	b.gt	0x1308c
0000000000012fd0	add	x10, x10, #0x1
0000000000012fd4	add	x11, x11, #0x10
0000000000012fd8	cmp	x9, x10
0000000000012fdc	b.ne	0x12fc4
0000000000012fe0	mov	x10, x9
0000000000012fe4	b	0x1308c
0000000000012fe8	mov	w10, #0x0
0000000000012fec	add	w11, w9, w10
0000000000012ff0	cmp	w11, #0x0
0000000000012ff4	cinc	w11, w11, lt
0000000000012ff8	asr	w11, w11, #1
0000000000012ffc	sbfiz	x12, x11, #4, #32
0000000000013000	ldr	w12, [x8, x12]
0000000000013004	cmp	w12, #0xa0
0000000000013008	csinc	w10, w10, w11, ge
000000000001300c	csel	w9, w9, w11, lt
0000000000013010	cmp	w10, w9
0000000000013014	b.lt	0x12fec
0000000000013018	b	0x13060
000000000001301c	mov	w10, #0x0
0000000000013020	add	w11, w9, w10
0000000000013024	cmp	w11, #0x0
0000000000013028	cinc	w11, w11, lt
000000000001302c	asr	w11, w11, #1
0000000000013030	sbfiz	x12, x11, #4, #32
0000000000013034	ldr	w12, [x8, x12]
0000000000013038	cmp	w12, #0xa0
000000000001303c	csinc	w10, w10, w11, ge
0000000000013040	csel	w9, w9, w11, lt
0000000000013044	cmp	w10, w9
0000000000013048	b.lt	0x13020
000000000001304c	b	0x1308c
0000000000013050	mov	w10, #0x0
0000000000013054	b	0x13060
0000000000013058	mov	w10, #0x0
000000000001305c	b	0x1308c
0000000000013060	sxtw	x9, w10
0000000000013064	add	x8, x8, x9, lsl #4
0000000000013068	ldr	x8, [x8, #0x8]
000000000001306c	ldr	x8, [x8]
0000000000013070	mov	x0, x21
0000000000013074	blr	x8
0000000000013078	tbz	w0, #0x0, 0x13094
000000000001307c	ldarb	w8, [x24]
0000000000013080	tbz	w8, #0x0, 0x12ed4
0000000000013084	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013088	b	0x12ed4
000000000001308c	sxtw	x9, w10
0000000000013090	b	0x12ef0
0000000000013094	ldr	x8, [sp, #0x8]
0000000000013098	str	x8, [x23, #0x110]
000000000001309c	and	w0, w22, #0x1
00000000000130a0	ldp	x29, x30, [sp, #0x70]
00000000000130a4	ldp	x20, x19, [sp, #0x60]
00000000000130a8	ldp	x22, x21, [sp, #0x50]
00000000000130ac	ldp	x24, x23, [sp, #0x40]
00000000000130b0	ldp	x26, x25, [sp, #0x30]
00000000000130b4	add	sp, sp, #0x80
00000000000130b8	ret
_kfun:kotlin.collections.AbstractMutableCollection#remove(1:0){}kotlin.Boolean:
00000000000130bc	sub	sp, sp, #0x70
00000000000130c0	stp	x24, x23, [sp, #0x30]
00000000000130c4	stp	x22, x21, [sp, #0x40]
00000000000130c8	stp	x20, x19, [sp, #0x50]
00000000000130cc	stp	x29, x30, [sp, #0x60]
00000000000130d0	add	x29, sp, #0x60
00000000000130d4	mov	x20, x1
00000000000130d8	mov	x19, x0
00000000000130dc	movi.16b	v0, #0x0
00000000000130e0	stp	q0, q0, [sp]
00000000000130e4	str	xzr, [sp, #0x20]
00000000000130e8	mov	x8, sp
00000000000130ec	add	x21, x8, #0x20
00000000000130f0	add	x22, x8, #0x18
00000000000130f4	adrp	x0, 103 ; 0x7a000
00000000000130f8	add	x0, x0, #0x2c0
00000000000130fc	ldr	x9, [x0]
0000000000013100	blr	x9
0000000000013104	ldr	x23, [x0]
0000000000013108	ldr	x9, [x23, #0x110]
000000000001310c	str	x8, [x23, #0x110]
0000000000013110	mov	x8, #0x500000000
0000000000013114	stp	x9, x8, [sp, #0x8]
0000000000013118	adr	x24, #0x81171
000000000001311c	nop
0000000000013120	ldarb	w8, [x24]
0000000000013124	tbz	w8, #0x0, 0x1312c
0000000000013128	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001312c	ldr	x8, [x19]
0000000000013130	and	x8, x8, #0xfffffffffffffffc
0000000000013134	ldr	x8, [x8]
0000000000013138	ldr	x8, [x8, #0xa8]
000000000001313c	mov	x0, x19
0000000000013140	mov	x1, x22
0000000000013144	blr	x8
0000000000013148	mov	x19, x0
000000000001314c	mov	w22, #0xa0
0000000000013150	b	0x13158
0000000000013154	cbz	x20, 0x13314
0000000000013158	ldr	x8, [x19]
000000000001315c	and	x8, x8, #0xfffffffffffffffc
0000000000013160	ldr	x8, [x8]
0000000000013164	ldr	w9, [x8, #0x3c]
0000000000013168	ldr	x8, [x8, #0x40]
000000000001316c	tbnz	w9, #0x1f, 0x13190
0000000000013170	and	x9, x9, x22
0000000000013174	add	x8, x8, x9, lsl #4
0000000000013178	ldr	x8, [x8, #0x8]
000000000001317c	ldr	x8, [x8]
0000000000013180	mov	x0, x19
0000000000013184	blr	x8
0000000000013188	tbnz	w0, #0x0, 0x1322c
000000000001318c	b	0x13338
0000000000013190	neg	w10, w9
0000000000013194	mvn	w9, w9
0000000000013198	cmp	w10, #0x9
000000000001319c	b.ge	0x131d4
00000000000131a0	cmp	w10, #0x2
00000000000131a4	b.lt	0x13208
00000000000131a8	mov	x10, #0x0
00000000000131ac	mov	x11, x8
00000000000131b0	ldr	w12, [x11]
00000000000131b4	cmp	w12, #0x9f
00000000000131b8	b.gt	0x13210
00000000000131bc	add	x10, x10, #0x1
00000000000131c0	add	x11, x11, #0x10
00000000000131c4	cmp	x9, x10
00000000000131c8	b.ne	0x131b0
00000000000131cc	mov	x10, x9
00000000000131d0	b	0x13210
00000000000131d4	mov	w10, #0x0
00000000000131d8	add	w11, w9, w10
00000000000131dc	cmp	w11, #0x0
00000000000131e0	cinc	w11, w11, lt
00000000000131e4	asr	w11, w11, #1
00000000000131e8	sbfiz	x12, x11, #4, #32
00000000000131ec	ldr	w12, [x8, x12]
00000000000131f0	cmp	w12, #0xa0
00000000000131f4	csinc	w10, w10, w11, ge
00000000000131f8	csel	w9, w9, w11, lt
00000000000131fc	cmp	w10, w9
0000000000013200	b.lt	0x131d8
0000000000013204	b	0x13210
0000000000013208	mov	w10, #0x0
000000000001320c	b	0x13210
0000000000013210	sxtw	x9, w10
0000000000013214	add	x8, x8, x9, lsl #4
0000000000013218	ldr	x8, [x8, #0x8]
000000000001321c	ldr	x8, [x8]
0000000000013220	mov	x0, x19
0000000000013224	blr	x8
0000000000013228	tbz	w0, #0x0, 0x13338
000000000001322c	ldarb	w8, [x24]
0000000000013230	tbz	w8, #0x0, 0x13238
0000000000013234	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013238	ldr	x8, [x19]
000000000001323c	and	x8, x8, #0xfffffffffffffffc
0000000000013240	ldr	x8, [x8]
0000000000013244	ldr	w9, [x8, #0x3c]
0000000000013248	ldr	x8, [x8, #0x40]
000000000001324c	tbnz	w9, #0x1f, 0x13258
0000000000013250	and	x9, x9, x22
0000000000013254	b	0x132dc
0000000000013258	neg	w10, w9
000000000001325c	mvn	w9, w9
0000000000013260	cmp	w10, #0x9
0000000000013264	b.ge	0x1329c
0000000000013268	cmp	w10, #0x2
000000000001326c	b.lt	0x132d0
0000000000013270	mov	x10, #0x0
0000000000013274	mov	x11, x8
0000000000013278	ldr	w12, [x11]
000000000001327c	cmp	w12, #0x9f
0000000000013280	b.gt	0x132d8
0000000000013284	add	x10, x10, #0x1
0000000000013288	add	x11, x11, #0x10
000000000001328c	cmp	x9, x10
0000000000013290	b.ne	0x13278
0000000000013294	mov	x10, x9
0000000000013298	b	0x132d8
000000000001329c	mov	w10, #0x0
00000000000132a0	add	w11, w9, w10
00000000000132a4	cmp	w11, #0x0
00000000000132a8	cinc	w11, w11, lt
00000000000132ac	asr	w11, w11, #1
00000000000132b0	sbfiz	x12, x11, #4, #32
00000000000132b4	ldr	w12, [x8, x12]
00000000000132b8	cmp	w12, #0xa0
00000000000132bc	csinc	w10, w10, w11, ge
00000000000132c0	csel	w9, w9, w11, lt
00000000000132c4	cmp	w10, w9
00000000000132c8	b.lt	0x132a0
00000000000132cc	b	0x132d8
00000000000132d0	mov	w10, #0x0
00000000000132d4	b	0x132d8
00000000000132d8	sxtw	x9, w10
00000000000132dc	add	x8, x8, x9, lsl #4
00000000000132e0	ldr	x8, [x8, #0x8]
00000000000132e4	ldr	x8, [x8, #0x8]
00000000000132e8	mov	x0, x19
00000000000132ec	mov	x1, x21
00000000000132f0	blr	x8
00000000000132f4	cbz	x0, 0x13154
00000000000132f8	ldr	x8, [x0]
00000000000132fc	and	x8, x8, #0xfffffffffffffffc
0000000000013300	ldr	x8, [x8]
0000000000013304	ldr	x8, [x8, #0x70]
0000000000013308	mov	x1, x20
000000000001330c	blr	x8
0000000000013310	tbz	w0, #0x0, 0x13158
0000000000013314	ldr	x8, [x19]
0000000000013318	and	x8, x8, #0xfffffffffffffffc
000000000001331c	ldr	x8, [x8]
0000000000013320	ldr	w9, [x8, #0x3c]
0000000000013324	ldr	x8, [x8, #0x40]
0000000000013328	tbnz	w9, #0x1f, 0x13340
000000000001332c	mov	w10, #0x39
0000000000013330	and	x9, x9, x10
0000000000013334	b	0x133c4
0000000000013338	mov	w0, #0x0
000000000001333c	b	0x133dc
0000000000013340	neg	w10, w9
0000000000013344	mvn	w9, w9
0000000000013348	cmp	w10, #0x9
000000000001334c	b.ge	0x13384
0000000000013350	cmp	w10, #0x2
0000000000013354	b.lt	0x133b8
0000000000013358	mov	x10, #0x0
000000000001335c	mov	x11, x8
0000000000013360	ldr	w12, [x11]
0000000000013364	cmp	w12, #0x38
0000000000013368	b.gt	0x133c0
000000000001336c	add	x10, x10, #0x1
0000000000013370	add	x11, x11, #0x10
0000000000013374	cmp	x9, x10
0000000000013378	b.ne	0x13360
000000000001337c	mov	x10, x9
0000000000013380	b	0x133c0
0000000000013384	mov	w10, #0x0
0000000000013388	add	w11, w9, w10
000000000001338c	cmp	w11, #0x0
0000000000013390	cinc	w11, w11, lt
0000000000013394	asr	w11, w11, #1
0000000000013398	sbfiz	x12, x11, #4, #32
000000000001339c	ldr	w12, [x8, x12]
00000000000133a0	cmp	w12, #0x39
00000000000133a4	csinc	w10, w10, w11, ge
00000000000133a8	csel	w9, w9, w11, lt
00000000000133ac	cmp	w10, w9
00000000000133b0	b.lt	0x13388
00000000000133b4	b	0x133c0
00000000000133b8	mov	w10, #0x0
00000000000133bc	b	0x133c0
00000000000133c0	sxtw	x9, w10
00000000000133c4	add	x8, x8, x9, lsl #4
00000000000133c8	ldr	x8, [x8, #0x8]
00000000000133cc	ldr	x8, [x8]
00000000000133d0	mov	x0, x19
00000000000133d4	blr	x8
00000000000133d8	mov	w0, #0x1
00000000000133dc	ldr	x8, [sp, #0x8]
00000000000133e0	str	x8, [x23, #0x110]
00000000000133e4	ldp	x29, x30, [sp, #0x60]
00000000000133e8	ldp	x20, x19, [sp, #0x50]
00000000000133ec	ldp	x22, x21, [sp, #0x40]
00000000000133f0	ldp	x24, x23, [sp, #0x30]
00000000000133f4	add	sp, sp, #0x70
00000000000133f8	ret
_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
00000000000133fc	sub	sp, sp, #0x50
0000000000013400	stp	x22, x21, [sp, #0x20]
0000000000013404	stp	x20, x19, [sp, #0x30]
0000000000013408	stp	x29, x30, [sp, #0x40]
000000000001340c	add	x29, sp, #0x40
0000000000013410	mov	x20, x1
0000000000013414	mov	x19, x0
0000000000013418	movi.16b	v0, #0x0
000000000001341c	stp	q0, q0, [sp]
0000000000013420	adrp	x0, 103 ; 0x7a000
0000000000013424	add	x0, x0, #0x2c0
0000000000013428	ldr	x8, [x0]
000000000001342c	blr	x8
0000000000013430	ldr	x21, [x0]
0000000000013434	ldr	x8, [x21, #0x110]
0000000000013438	mov	x9, sp
000000000001343c	str	x9, [x21, #0x110]
0000000000013440	mov	x9, #0x400000000
0000000000013444	stp	x8, x9, [sp, #0x8]
0000000000013448	adr	x8, #0x80e41
000000000001344c	nop
0000000000013450	ldarb	w8, [x8]
0000000000013454	tbz	w8, #0x0, 0x1345c
0000000000013458	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001345c	ldr	x8, [x19]
0000000000013460	and	x8, x8, #0xfffffffffffffffc
0000000000013464	ldr	x8, [x8]
0000000000013468	ldr	w9, [x8, #0x3c]
000000000001346c	ldr	x8, [x8, #0x40]
0000000000013470	tbnz	w9, #0x1f, 0x134e0
0000000000013474	mov	w10, #0x24
0000000000013478	and	x9, x9, x10
000000000001347c	lsl	x9, x9, #4
0000000000013480	ldr	w8, [x8, x9]
0000000000013484	cmp	w8, #0x24
0000000000013488	b.ne	0x13584
000000000001348c	ldr	x8, [x21, #0x118]
0000000000013490	add	x0, x8, #0x70
0000000000013494	mov	w1, #0x18
0000000000013498	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001349c	adr	x8, #0x501c4
00000000000134a0	nop
00000000000134a4	mov	x1, x0
00000000000134a8	str	x8, [x1, #0x10]!
00000000000134ac	stur	xzr, [x1, #-0x8]
00000000000134b0	str	x1, [sp, #0x18]
00000000000134b4	str	x20, [x1, #0x8]
00000000000134b8	mov	x0, x19
00000000000134bc	mov	w2, #0x1
00000000000134c0	bl	"_kfun:kotlin.collections.filterInPlace#internal.14"
00000000000134c4	ldr	x8, [sp, #0x8]
00000000000134c8	str	x8, [x21, #0x110]
00000000000134cc	ldp	x29, x30, [sp, #0x40]
00000000000134d0	ldp	x20, x19, [sp, #0x30]
00000000000134d4	ldp	x22, x21, [sp, #0x20]
00000000000134d8	add	sp, sp, #0x50
00000000000134dc	ret
00000000000134e0	neg	w10, w9
00000000000134e4	mvn	w9, w9
00000000000134e8	cmp	w10, #0x9
00000000000134ec	b.ge	0x13538
00000000000134f0	cmp	w10, #0x2
00000000000134f4	b.lt	0x1356c
00000000000134f8	mov	x10, #0x0
00000000000134fc	mov	x11, x8
0000000000013500	ldr	w12, [x11]
0000000000013504	cmp	w12, #0x23
0000000000013508	b.gt	0x13594
000000000001350c	add	x10, x10, #0x1
0000000000013510	add	x11, x11, #0x10
0000000000013514	cmp	x9, x10
0000000000013518	b.ne	0x13500
000000000001351c	mov	x10, x9
0000000000013520	sxtw	x9, w10
0000000000013524	lsl	x9, x9, #4
0000000000013528	ldr	w8, [x8, x9]
000000000001352c	cmp	w8, #0x24
0000000000013530	b.eq	0x1348c
0000000000013534	b	0x13584
0000000000013538	mov	w10, #0x0
000000000001353c	add	w11, w9, w10
0000000000013540	cmp	w11, #0x0
0000000000013544	cinc	w11, w11, lt
0000000000013548	asr	w11, w11, #1
000000000001354c	sbfiz	x12, x11, #4, #32
0000000000013550	ldr	w12, [x8, x12]
0000000000013554	cmp	w12, #0x24
0000000000013558	csinc	w10, w10, w11, ge
000000000001355c	csel	w9, w9, w11, lt
0000000000013560	cmp	w10, w9
0000000000013564	b.lt	0x1353c
0000000000013568	b	0x13570
000000000001356c	mov	w10, #0x0
0000000000013570	sxtw	x9, w10
0000000000013574	lsl	x9, x9, #4
0000000000013578	ldr	w8, [x8, x9]
000000000001357c	cmp	w8, #0x24
0000000000013580	b.eq	0x1348c
0000000000013584	adr	x1, #0x507dc
0000000000013588	nop
000000000001358c	mov	x0, x19
0000000000013590	bl	_ThrowClassCastException
0000000000013594	sxtw	x9, w10
0000000000013598	lsl	x9, x9, #4
000000000001359c	ldr	w8, [x8, x9]
00000000000135a0	cmp	w8, #0x24
00000000000135a4	b.eq	0x1348c
00000000000135a8	b	0x13584
_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
00000000000135ac	sub	sp, sp, #0x50
00000000000135b0	stp	x22, x21, [sp, #0x20]
00000000000135b4	stp	x20, x19, [sp, #0x30]
00000000000135b8	stp	x29, x30, [sp, #0x40]
00000000000135bc	add	x29, sp, #0x40
00000000000135c0	mov	x20, x1
00000000000135c4	mov	x19, x0
00000000000135c8	movi.16b	v0, #0x0
00000000000135cc	stp	q0, q0, [sp]
00000000000135d0	adrp	x0, 103 ; 0x7a000
00000000000135d4	add	x0, x0, #0x2c0
00000000000135d8	ldr	x8, [x0]
00000000000135dc	blr	x8
00000000000135e0	ldr	x21, [x0]
00000000000135e4	ldr	x8, [x21, #0x110]
00000000000135e8	mov	x9, sp
00000000000135ec	str	x9, [x21, #0x110]
00000000000135f0	mov	x9, #0x400000000
00000000000135f4	stp	x8, x9, [sp, #0x8]
00000000000135f8	adr	x8, #0x80c91
00000000000135fc	nop
0000000000013600	ldarb	w8, [x8]
0000000000013604	tbz	w8, #0x0, 0x1360c
0000000000013608	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001360c	ldr	x8, [x19]
0000000000013610	and	x8, x8, #0xfffffffffffffffc
0000000000013614	ldr	x8, [x8]
0000000000013618	ldr	w9, [x8, #0x3c]
000000000001361c	ldr	x8, [x8, #0x40]
0000000000013620	tbnz	w9, #0x1f, 0x13690
0000000000013624	mov	w10, #0x24
0000000000013628	and	x9, x9, x10
000000000001362c	lsl	x9, x9, #4
0000000000013630	ldr	w8, [x8, x9]
0000000000013634	cmp	w8, #0x24
0000000000013638	b.ne	0x13734
000000000001363c	ldr	x8, [x21, #0x118]
0000000000013640	add	x0, x8, #0x70
0000000000013644	mov	w1, #0x18
0000000000013648	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001364c	adr	x8, #0x500a4
0000000000013650	nop
0000000000013654	mov	x1, x0
0000000000013658	str	x8, [x1, #0x10]!
000000000001365c	stur	xzr, [x1, #-0x8]
0000000000013660	str	x1, [sp, #0x18]
0000000000013664	str	x20, [x1, #0x8]
0000000000013668	mov	x0, x19
000000000001366c	mov	w2, #0x0
0000000000013670	bl	"_kfun:kotlin.collections.filterInPlace#internal.14"
0000000000013674	ldr	x8, [sp, #0x8]
0000000000013678	str	x8, [x21, #0x110]
000000000001367c	ldp	x29, x30, [sp, #0x40]
0000000000013680	ldp	x20, x19, [sp, #0x30]
0000000000013684	ldp	x22, x21, [sp, #0x20]
0000000000013688	add	sp, sp, #0x50
000000000001368c	ret
0000000000013690	neg	w10, w9
0000000000013694	mvn	w9, w9
0000000000013698	cmp	w10, #0x9
000000000001369c	b.ge	0x136e8
00000000000136a0	cmp	w10, #0x2
00000000000136a4	b.lt	0x1371c
00000000000136a8	mov	x10, #0x0
00000000000136ac	mov	x11, x8
00000000000136b0	ldr	w12, [x11]
00000000000136b4	cmp	w12, #0x23
00000000000136b8	b.gt	0x13744
00000000000136bc	add	x10, x10, #0x1
00000000000136c0	add	x11, x11, #0x10
00000000000136c4	cmp	x9, x10
00000000000136c8	b.ne	0x136b0
00000000000136cc	mov	x10, x9
00000000000136d0	sxtw	x9, w10
00000000000136d4	lsl	x9, x9, #4
00000000000136d8	ldr	w8, [x8, x9]
00000000000136dc	cmp	w8, #0x24
00000000000136e0	b.eq	0x1363c
00000000000136e4	b	0x13734
00000000000136e8	mov	w10, #0x0
00000000000136ec	add	w11, w9, w10
00000000000136f0	cmp	w11, #0x0
00000000000136f4	cinc	w11, w11, lt
00000000000136f8	asr	w11, w11, #1
00000000000136fc	sbfiz	x12, x11, #4, #32
0000000000013700	ldr	w12, [x8, x12]
0000000000013704	cmp	w12, #0x24
0000000000013708	csinc	w10, w10, w11, ge
000000000001370c	csel	w9, w9, w11, lt
0000000000013710	cmp	w10, w9
0000000000013714	b.lt	0x136ec
0000000000013718	b	0x13720
000000000001371c	mov	w10, #0x0
0000000000013720	sxtw	x9, w10
0000000000013724	lsl	x9, x9, #4
0000000000013728	ldr	w8, [x8, x9]
000000000001372c	cmp	w8, #0x24
0000000000013730	b.eq	0x1363c
0000000000013734	adr	x1, #0x5062c
0000000000013738	nop
000000000001373c	mov	x0, x19
0000000000013740	bl	_ThrowClassCastException
0000000000013744	sxtw	x9, w10
0000000000013748	lsl	x9, x9, #4
000000000001374c	ldr	w8, [x8, x9]
0000000000013750	cmp	w8, #0x24
0000000000013754	b.eq	0x1363c
0000000000013758	b	0x13734
_kfun:kotlin.collections.AbstractMutableCollection.$removeAll$lambda$0$FUNCTION_REFERENCE$13.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
000000000001375c	stp	x22, x21, [sp, #-0x30]!
0000000000013760	stp	x20, x19, [sp, #0x10]
0000000000013764	stp	x29, x30, [sp, #0x20]
0000000000013768	add	x29, sp, #0x20
000000000001376c	mov	x19, x2
0000000000013770	mov	x20, x1
0000000000013774	mov	x21, x0
0000000000013778	adr	x8, #0x80b11
000000000001377c	nop
0000000000013780	ldarb	w8, [x8]
0000000000013784	tbz	w8, #0x0, 0x1378c
0000000000013788	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001378c	ldr	x0, [x21, #0x8]
0000000000013790	ldr	x8, [x0]
0000000000013794	and	x8, x8, #0xfffffffffffffffc
0000000000013798	ldr	x8, [x8]
000000000001379c	ldr	w9, [x8, #0x3c]
00000000000137a0	ldr	x8, [x8, #0x40]
00000000000137a4	tbnz	w9, #0x1f, 0x137b4
00000000000137a8	mov	w10, #0x12
00000000000137ac	and	x9, x9, x10
00000000000137b0	b	0x13838
00000000000137b4	neg	w10, w9
00000000000137b8	mvn	w9, w9
00000000000137bc	cmp	w10, #0x9
00000000000137c0	b.ge	0x137f8
00000000000137c4	cmp	w10, #0x2
00000000000137c8	b.lt	0x1382c
00000000000137cc	mov	x10, #0x0
00000000000137d0	mov	x11, x8
00000000000137d4	ldr	w12, [x11]
00000000000137d8	cmp	w12, #0x11
00000000000137dc	b.gt	0x13834
00000000000137e0	add	x10, x10, #0x1
00000000000137e4	add	x11, x11, #0x10
00000000000137e8	cmp	x9, x10
00000000000137ec	b.ne	0x137d4
00000000000137f0	mov	x10, x9
00000000000137f4	b	0x13834
00000000000137f8	mov	w10, #0x0
00000000000137fc	add	w11, w9, w10
0000000000013800	cmp	w11, #0x0
0000000000013804	cinc	w11, w11, lt
0000000000013808	asr	w11, w11, #1
000000000001380c	sbfiz	x12, x11, #4, #32
0000000000013810	ldr	w12, [x8, x12]
0000000000013814	cmp	w12, #0x12
0000000000013818	csinc	w10, w10, w11, ge
000000000001381c	csel	w9, w9, w11, lt
0000000000013820	cmp	w10, w9
0000000000013824	b.lt	0x137fc
0000000000013828	b	0x13834
000000000001382c	mov	w10, #0x0
0000000000013830	b	0x13834
0000000000013834	sxtw	x9, w10
0000000000013838	add	x8, x8, x9, lsl #4
000000000001383c	ldr	x8, [x8, #0x8]
0000000000013840	ldr	x8, [x8, #0x8]
0000000000013844	mov	x1, x20
0000000000013848	blr	x8
000000000001384c	mov	x1, x19
0000000000013850	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
0000000000013854	str	x0, [x19]
0000000000013858	ldp	x29, x30, [sp, #0x20]
000000000001385c	ldp	x20, x19, [sp, #0x10]
0000000000013860	ldp	x22, x21, [sp], #0x30
0000000000013864	ret
_kfun:kotlin.collections.AbstractMutableCollection.$retainAll$lambda$1$FUNCTION_REFERENCE$14.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
0000000000013868	stp	x22, x21, [sp, #-0x30]!
000000000001386c	stp	x20, x19, [sp, #0x10]
0000000000013870	stp	x29, x30, [sp, #0x20]
0000000000013874	add	x29, sp, #0x20
0000000000013878	mov	x19, x2
000000000001387c	mov	x20, x1
0000000000013880	mov	x21, x0
0000000000013884	adr	x8, #0x80a05
0000000000013888	nop
000000000001388c	ldarb	w8, [x8]
0000000000013890	tbz	w8, #0x0, 0x13898
0000000000013894	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013898	ldr	x0, [x21, #0x8]
000000000001389c	ldr	x8, [x0]
00000000000138a0	and	x8, x8, #0xfffffffffffffffc
00000000000138a4	ldr	x8, [x8]
00000000000138a8	ldr	w9, [x8, #0x3c]
00000000000138ac	ldr	x8, [x8, #0x40]
00000000000138b0	tbnz	w9, #0x1f, 0x138c0
00000000000138b4	mov	w10, #0x12
00000000000138b8	and	x9, x9, x10
00000000000138bc	b	0x13944
00000000000138c0	neg	w10, w9
00000000000138c4	mvn	w9, w9
00000000000138c8	cmp	w10, #0x9
00000000000138cc	b.ge	0x13904
00000000000138d0	cmp	w10, #0x2
00000000000138d4	b.lt	0x13938
00000000000138d8	mov	x10, #0x0
00000000000138dc	mov	x11, x8
00000000000138e0	ldr	w12, [x11]
00000000000138e4	cmp	w12, #0x11
00000000000138e8	b.gt	0x13940
00000000000138ec	add	x10, x10, #0x1
00000000000138f0	add	x11, x11, #0x10
00000000000138f4	cmp	x9, x10
00000000000138f8	b.ne	0x138e0
00000000000138fc	mov	x10, x9
0000000000013900	b	0x13940
0000000000013904	mov	w10, #0x0
0000000000013908	add	w11, w9, w10
000000000001390c	cmp	w11, #0x0
0000000000013910	cinc	w11, w11, lt
0000000000013914	asr	w11, w11, #1
0000000000013918	sbfiz	x12, x11, #4, #32
000000000001391c	ldr	w12, [x8, x12]
0000000000013920	cmp	w12, #0x12
0000000000013924	csinc	w10, w10, w11, ge
0000000000013928	csel	w9, w9, w11, lt
000000000001392c	cmp	w10, w9
0000000000013930	b.lt	0x13908
0000000000013934	b	0x13940
0000000000013938	mov	w10, #0x0
000000000001393c	b	0x13940
0000000000013940	sxtw	x9, w10
0000000000013944	add	x8, x8, x9, lsl #4
0000000000013948	ldr	x8, [x8, #0x8]
000000000001394c	ldr	x8, [x8, #0x8]
0000000000013950	mov	x1, x20
0000000000013954	blr	x8
0000000000013958	mov	x1, x19
000000000001395c	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
0000000000013960	str	x0, [x19]
0000000000013964	ldp	x29, x30, [sp, #0x20]
0000000000013968	ldp	x20, x19, [sp, #0x10]
000000000001396c	ldp	x22, x21, [sp], #0x30
0000000000013970	ret
_kfun:kotlin.collections.AbstractMutableList#add(1:0){}kotlin.Boolean:
0000000000013974	stp	x20, x19, [sp, #-0x20]!
0000000000013978	stp	x29, x30, [sp, #0x10]
000000000001397c	add	x29, sp, #0x10
0000000000013980	mov	x19, x1
0000000000013984	mov	x20, x0
0000000000013988	adr	x8, #0x80901
000000000001398c	nop
0000000000013990	ldarb	w8, [x8]
0000000000013994	tbz	w8, #0x0, 0x1399c
0000000000013998	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001399c	ldr	x8, [x20]
00000000000139a0	and	x8, x8, #0xfffffffffffffffc
00000000000139a4	ldr	x8, [x8]
00000000000139a8	ldr	x8, [x8, #0x88]
00000000000139ac	mov	x0, x20
00000000000139b0	blr	x8
00000000000139b4	mov	x1, x0
00000000000139b8	ldr	x8, [x20]
00000000000139bc	and	x8, x8, #0xfffffffffffffffc
00000000000139c0	ldr	x8, [x8]
00000000000139c4	ldr	x8, [x8, #0xf0]
00000000000139c8	mov	x0, x20
00000000000139cc	mov	x2, x19
00000000000139d0	blr	x8
00000000000139d4	mov	w0, #0x1
00000000000139d8	ldp	x29, x30, [sp, #0x10]
00000000000139dc	ldp	x20, x19, [sp], #0x20
00000000000139e0	ret
_kfun:kotlin.collections.AbstractMutableList#addAll(kotlin.Int;kotlin.collections.Collection<1:0>){}kotlin.Boolean:
00000000000139e4	sub	sp, sp, #0x80
00000000000139e8	stp	x26, x25, [sp, #0x30]
00000000000139ec	stp	x24, x23, [sp, #0x40]
00000000000139f0	stp	x22, x21, [sp, #0x50]
00000000000139f4	stp	x20, x19, [sp, #0x60]
00000000000139f8	stp	x29, x30, [sp, #0x70]
00000000000139fc	add	x29, sp, #0x70
0000000000013a00	mov	x22, x2
0000000000013a04	mov	x19, x1
0000000000013a08	mov	x20, x0
0000000000013a0c	movi.16b	v0, #0x0
0000000000013a10	stp	q0, q0, [sp]
0000000000013a14	str	xzr, [sp, #0x20]
0000000000013a18	mov	x21, sp
0000000000013a1c	add	x23, x21, #0x18
0000000000013a20	adrp	x0, 103 ; 0x7a000
0000000000013a24	add	x0, x0, #0x2c0
0000000000013a28	ldr	x8, [x0]
0000000000013a2c	blr	x8
0000000000013a30	ldr	x24, [x0]
0000000000013a34	ldr	x8, [x24, #0x110]
0000000000013a38	str	x21, [x24, #0x110]
0000000000013a3c	mov	x9, #0x500000000
0000000000013a40	stp	x8, x9, [sp, #0x8]
0000000000013a44	adr	x25, #0x80845
0000000000013a48	nop
0000000000013a4c	ldarb	w8, [x25]
0000000000013a50	tbz	w8, #0x0, 0x13a58
0000000000013a54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013a58	add	x21, x21, #0x20
0000000000013a5c	ldr	x8, [x20]
0000000000013a60	and	x8, x8, #0xfffffffffffffffc
0000000000013a64	ldr	x8, [x8]
0000000000013a68	ldr	x8, [x8, #0x88]
0000000000013a6c	mov	x0, x20
0000000000013a70	blr	x8
0000000000013a74	mov	x1, x0
0000000000013a78	mov	x0, x19
0000000000013a7c	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
0000000000013a80	ldr	x8, [x22]
0000000000013a84	and	x8, x8, #0xfffffffffffffffc
0000000000013a88	ldr	x8, [x8]
0000000000013a8c	ldr	w9, [x8, #0x3c]
0000000000013a90	ldr	x8, [x8, #0x40]
0000000000013a94	tbnz	w9, #0x1f, 0x13aa4
0000000000013a98	mov	w10, #0x12
0000000000013a9c	and	x9, x9, x10
0000000000013aa0	b	0x13b28
0000000000013aa4	neg	w10, w9
0000000000013aa8	mvn	w9, w9
0000000000013aac	cmp	w10, #0x9
0000000000013ab0	b.ge	0x13ae8
0000000000013ab4	cmp	w10, #0x2
0000000000013ab8	b.lt	0x13b1c
0000000000013abc	mov	x10, #0x0
0000000000013ac0	mov	x11, x8
0000000000013ac4	ldr	w12, [x11]
0000000000013ac8	cmp	w12, #0x11
0000000000013acc	b.gt	0x13b24
0000000000013ad0	add	x10, x10, #0x1
0000000000013ad4	add	x11, x11, #0x10
0000000000013ad8	cmp	x9, x10
0000000000013adc	b.ne	0x13ac4
0000000000013ae0	mov	x10, x9
0000000000013ae4	b	0x13b24
0000000000013ae8	mov	w10, #0x0
0000000000013aec	add	w11, w9, w10
0000000000013af0	cmp	w11, #0x0
0000000000013af4	cinc	w11, w11, lt
0000000000013af8	asr	w11, w11, #1
0000000000013afc	sbfiz	x12, x11, #4, #32
0000000000013b00	ldr	w12, [x8, x12]
0000000000013b04	cmp	w12, #0x12
0000000000013b08	csinc	w10, w10, w11, ge
0000000000013b0c	csel	w9, w9, w11, lt
0000000000013b10	cmp	w10, w9
0000000000013b14	b.lt	0x13aec
0000000000013b18	b	0x13b24
0000000000013b1c	mov	w10, #0x0
0000000000013b20	b	0x13b24
0000000000013b24	sxtw	x9, w10
0000000000013b28	add	x8, x8, x9, lsl #4
0000000000013b2c	ldr	x8, [x8, #0x8]
0000000000013b30	ldr	x8, [x8, #0x20]
0000000000013b34	mov	x0, x22
0000000000013b38	mov	x1, x23
0000000000013b3c	blr	x8
0000000000013b40	mov	x22, x0
0000000000013b44	mov	w26, #0x0
0000000000013b48	mov	w23, #0xa0
0000000000013b4c	b	0x13bac
0000000000013b50	ldr	x8, [x22]
0000000000013b54	and	x8, x8, #0xfffffffffffffffc
0000000000013b58	ldr	x8, [x8]
0000000000013b5c	ldr	w9, [x8, #0x3c]
0000000000013b60	ldr	x8, [x8, #0x40]
0000000000013b64	tbnz	w9, #0x1f, 0x13c28
0000000000013b68	and	x9, x9, x23
0000000000013b6c	add	x8, x8, x9, lsl #4
0000000000013b70	ldr	x8, [x8, #0x8]
0000000000013b74	ldr	x8, [x8, #0x8]
0000000000013b78	mov	x0, x22
0000000000013b7c	mov	x1, x21
0000000000013b80	blr	x8
0000000000013b84	mov	x2, x0
0000000000013b88	ldr	x8, [x20]
0000000000013b8c	and	x8, x8, #0xfffffffffffffffc
0000000000013b90	ldr	x8, [x8]
0000000000013b94	ldr	x8, [x8, #0xf0]
0000000000013b98	mov	x0, x20
0000000000013b9c	mov	x1, x19
0000000000013ba0	blr	x8
0000000000013ba4	add	w19, w19, #0x1
0000000000013ba8	mov	w26, #0x1
0000000000013bac	ldr	x8, [x22]
0000000000013bb0	and	x8, x8, #0xfffffffffffffffc
0000000000013bb4	ldr	x8, [x8]
0000000000013bb8	ldr	w9, [x8, #0x3c]
0000000000013bbc	ldr	x8, [x8, #0x40]
0000000000013bc0	tbnz	w9, #0x1f, 0x13be4
0000000000013bc4	and	x9, x9, x23
0000000000013bc8	add	x8, x8, x9, lsl #4
0000000000013bcc	ldr	x8, [x8, #0x8]
0000000000013bd0	ldr	x8, [x8]
0000000000013bd4	mov	x0, x22
0000000000013bd8	blr	x8
0000000000013bdc	tbnz	w0, #0x0, 0x13d00
0000000000013be0	b	0x13d18
0000000000013be4	neg	w10, w9
0000000000013be8	mvn	w9, w9
0000000000013bec	cmp	w10, #0x9
0000000000013bf0	b.ge	0x13c6c
0000000000013bf4	cmp	w10, #0x2
0000000000013bf8	b.lt	0x13cd4
0000000000013bfc	mov	x10, #0x0
0000000000013c00	mov	x11, x8
0000000000013c04	ldr	w12, [x11]
0000000000013c08	cmp	w12, #0x9f
0000000000013c0c	b.gt	0x13ce4
0000000000013c10	add	x10, x10, #0x1
0000000000013c14	add	x11, x11, #0x10
0000000000013c18	cmp	x9, x10
0000000000013c1c	b.ne	0x13c04
0000000000013c20	mov	x10, x9
0000000000013c24	b	0x13ce4
0000000000013c28	neg	w10, w9
0000000000013c2c	mvn	w9, w9
0000000000013c30	cmp	w10, #0x9
0000000000013c34	b.ge	0x13ca0
0000000000013c38	cmp	w10, #0x2
0000000000013c3c	b.lt	0x13cdc
0000000000013c40	mov	x10, #0x0
0000000000013c44	mov	x11, x8
0000000000013c48	ldr	w12, [x11]
0000000000013c4c	cmp	w12, #0x9f
0000000000013c50	b.gt	0x13d10
0000000000013c54	add	x10, x10, #0x1
0000000000013c58	add	x11, x11, #0x10
0000000000013c5c	cmp	x9, x10
0000000000013c60	b.ne	0x13c48
0000000000013c64	mov	x10, x9
0000000000013c68	b	0x13d10
0000000000013c6c	mov	w10, #0x0
0000000000013c70	add	w11, w9, w10
0000000000013c74	cmp	w11, #0x0
0000000000013c78	cinc	w11, w11, lt
0000000000013c7c	asr	w11, w11, #1
0000000000013c80	sbfiz	x12, x11, #4, #32
0000000000013c84	ldr	w12, [x8, x12]
0000000000013c88	cmp	w12, #0xa0
0000000000013c8c	csinc	w10, w10, w11, ge
0000000000013c90	csel	w9, w9, w11, lt
0000000000013c94	cmp	w10, w9
0000000000013c98	b.lt	0x13c70
0000000000013c9c	b	0x13ce4
0000000000013ca0	mov	w10, #0x0
0000000000013ca4	add	w11, w9, w10
0000000000013ca8	cmp	w11, #0x0
0000000000013cac	cinc	w11, w11, lt
0000000000013cb0	asr	w11, w11, #1
0000000000013cb4	sbfiz	x12, x11, #4, #32
0000000000013cb8	ldr	w12, [x8, x12]
0000000000013cbc	cmp	w12, #0xa0
0000000000013cc0	csinc	w10, w10, w11, ge
0000000000013cc4	csel	w9, w9, w11, lt
0000000000013cc8	cmp	w10, w9
0000000000013ccc	b.lt	0x13ca4
0000000000013cd0	b	0x13d10
0000000000013cd4	mov	w10, #0x0
0000000000013cd8	b	0x13ce4
0000000000013cdc	mov	w10, #0x0
0000000000013ce0	b	0x13d10
0000000000013ce4	sxtw	x9, w10
0000000000013ce8	add	x8, x8, x9, lsl #4
0000000000013cec	ldr	x8, [x8, #0x8]
0000000000013cf0	ldr	x8, [x8]
0000000000013cf4	mov	x0, x22
0000000000013cf8	blr	x8
0000000000013cfc	tbz	w0, #0x0, 0x13d18
0000000000013d00	ldarb	w8, [x25]
0000000000013d04	tbz	w8, #0x0, 0x13b50
0000000000013d08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013d0c	b	0x13b50
0000000000013d10	sxtw	x9, w10
0000000000013d14	b	0x13b6c
0000000000013d18	ldr	x8, [sp, #0x8]
0000000000013d1c	str	x8, [x24, #0x110]
0000000000013d20	and	w0, w26, #0x1
0000000000013d24	ldp	x29, x30, [sp, #0x70]
0000000000013d28	ldp	x20, x19, [sp, #0x60]
0000000000013d2c	ldp	x22, x21, [sp, #0x50]
0000000000013d30	ldp	x24, x23, [sp, #0x40]
0000000000013d34	ldp	x26, x25, [sp, #0x30]
0000000000013d38	add	sp, sp, #0x80
0000000000013d3c	ret
_kfun:kotlin.collections.AbstractMutableList#clear(){}:
0000000000013d40	stp	x20, x19, [sp, #-0x20]!
0000000000013d44	stp	x29, x30, [sp, #0x10]
0000000000013d48	add	x29, sp, #0x10
0000000000013d4c	mov	x19, x0
0000000000013d50	adr	x8, #0x80539
0000000000013d54	nop
0000000000013d58	ldarb	w8, [x8]
0000000000013d5c	tbz	w8, #0x0, 0x13d64
0000000000013d60	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013d64	ldr	x8, [x19]
0000000000013d68	and	x8, x8, #0xfffffffffffffffc
0000000000013d6c	ldr	x8, [x8]
0000000000013d70	ldr	x8, [x8, #0x88]
0000000000013d74	mov	x0, x19
0000000000013d78	blr	x8
0000000000013d7c	mov	x2, x0
0000000000013d80	ldr	x8, [x19]
0000000000013d84	and	x8, x8, #0xfffffffffffffffc
0000000000013d88	ldr	x8, [x8]
0000000000013d8c	ldr	x3, [x8, #0x130]
0000000000013d90	mov	x0, x19
0000000000013d94	mov	w1, #0x0
0000000000013d98	ldp	x29, x30, [sp, #0x10]
0000000000013d9c	ldp	x20, x19, [sp], #0x20
0000000000013da0	br	x3
_kfun:kotlin.collections.AbstractMutableList#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000013da4	sub	sp, sp, #0x50
0000000000013da8	stp	x22, x21, [sp, #0x20]
0000000000013dac	stp	x20, x19, [sp, #0x30]
0000000000013db0	stp	x29, x30, [sp, #0x40]
0000000000013db4	add	x29, sp, #0x40
0000000000013db8	mov	x20, x1
0000000000013dbc	mov	x19, x0
0000000000013dc0	movi.16b	v0, #0x0
0000000000013dc4	stp	q0, q0, [sp]
0000000000013dc8	adrp	x0, 103 ; 0x7a000
0000000000013dcc	add	x0, x0, #0x2c0
0000000000013dd0	ldr	x8, [x0]
0000000000013dd4	blr	x8
0000000000013dd8	ldr	x21, [x0]
0000000000013ddc	ldr	x8, [x21, #0x110]
0000000000013de0	mov	x9, sp
0000000000013de4	str	x9, [x21, #0x110]
0000000000013de8	mov	x9, #0x400000000
0000000000013dec	stp	x8, x9, [sp, #0x8]
0000000000013df0	adr	x8, #0x80499
0000000000013df4	nop
0000000000013df8	ldarb	w8, [x8]
0000000000013dfc	tbz	w8, #0x0, 0x13e04
0000000000013e00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013e04	ldr	x8, [x21, #0x118]
0000000000013e08	add	x0, x8, #0x70
0000000000013e0c	mov	w1, #0x18
0000000000013e10	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013e14	adr	x8, #0x4fc6c
0000000000013e18	nop
0000000000013e1c	mov	x1, x0
0000000000013e20	str	x8, [x1, #0x10]!
0000000000013e24	stur	xzr, [x1, #-0x8]
0000000000013e28	str	x1, [sp, #0x18]
0000000000013e2c	str	x20, [x1, #0x8]
0000000000013e30	mov	x0, x19
0000000000013e34	bl	"_kfun:kotlin.collections#removeAll__at__kotlin.collections.MutableList<0:0>(kotlin.Function1<0:0,kotlin.Boolean>){0§<kotlin.Any?>}kotlin.Boolean"
0000000000013e38	ldr	x8, [sp, #0x8]
0000000000013e3c	str	x8, [x21, #0x110]
0000000000013e40	ldp	x29, x30, [sp, #0x40]
0000000000013e44	ldp	x20, x19, [sp, #0x30]
0000000000013e48	ldp	x22, x21, [sp, #0x20]
0000000000013e4c	add	sp, sp, #0x50
0000000000013e50	ret
_kfun:kotlin.collections.AbstractMutableList#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000013e54	sub	sp, sp, #0x50
0000000000013e58	stp	x22, x21, [sp, #0x20]
0000000000013e5c	stp	x20, x19, [sp, #0x30]
0000000000013e60	stp	x29, x30, [sp, #0x40]
0000000000013e64	add	x29, sp, #0x40
0000000000013e68	mov	x20, x1
0000000000013e6c	mov	x19, x0
0000000000013e70	movi.16b	v0, #0x0
0000000000013e74	stp	q0, q0, [sp]
0000000000013e78	adrp	x0, 103 ; 0x7a000
0000000000013e7c	add	x0, x0, #0x2c0
0000000000013e80	ldr	x8, [x0]
0000000000013e84	blr	x8
0000000000013e88	ldr	x21, [x0]
0000000000013e8c	ldr	x8, [x21, #0x110]
0000000000013e90	mov	x9, sp
0000000000013e94	str	x9, [x21, #0x110]
0000000000013e98	mov	x9, #0x400000000
0000000000013e9c	stp	x8, x9, [sp, #0x8]
0000000000013ea0	adr	x8, #0x803e9
0000000000013ea4	nop
0000000000013ea8	ldarb	w8, [x8]
0000000000013eac	tbz	w8, #0x0, 0x13eb4
0000000000013eb0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013eb4	ldr	x8, [x21, #0x118]
0000000000013eb8	add	x0, x8, #0x70
0000000000013ebc	mov	w1, #0x18
0000000000013ec0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013ec4	adr	x8, #0x4fc4c
0000000000013ec8	nop
0000000000013ecc	mov	x1, x0
0000000000013ed0	str	x8, [x1, #0x10]!
0000000000013ed4	stur	xzr, [x1, #-0x8]
0000000000013ed8	str	x1, [sp, #0x18]
0000000000013edc	str	x20, [x1, #0x8]
0000000000013ee0	mov	x0, x19
0000000000013ee4	bl	"_kfun:kotlin.collections#removeAll__at__kotlin.collections.MutableList<0:0>(kotlin.Function1<0:0,kotlin.Boolean>){0§<kotlin.Any?>}kotlin.Boolean"
0000000000013ee8	ldr	x8, [sp, #0x8]
0000000000013eec	str	x8, [x21, #0x110]
0000000000013ef0	ldp	x29, x30, [sp, #0x40]
0000000000013ef4	ldp	x20, x19, [sp, #0x30]
0000000000013ef8	ldp	x22, x21, [sp, #0x20]
0000000000013efc	add	sp, sp, #0x50
0000000000013f00	ret
_kfun:kotlin.collections.AbstractMutableList#iterator(){}kotlin.collections.MutableIterator<1:0>:
0000000000013f04	stp	x20, x19, [sp, #-0x20]!
0000000000013f08	stp	x29, x30, [sp, #0x10]
0000000000013f0c	add	x29, sp, #0x10
0000000000013f10	mov	x19, x1
0000000000013f14	mov	x20, x0
0000000000013f18	adr	x8, #0x80371
0000000000013f1c	nop
0000000000013f20	ldarb	w8, [x8]
0000000000013f24	tbz	w8, #0x0, 0x13f2c
0000000000013f28	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013f2c	adrp	x0, 103 ; 0x7a000
0000000000013f30	add	x0, x0, #0x2c0
0000000000013f34	ldr	x8, [x0]
0000000000013f38	blr	x8
0000000000013f3c	ldr	x8, [x0]
0000000000013f40	ldr	x8, [x8, #0x118]
0000000000013f44	add	x0, x8, #0x70
0000000000013f48	mov	w1, #0x20
0000000000013f4c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013f50	adr	x8, #0x4f8a0
0000000000013f54	nop
0000000000013f58	str	x8, [x0, #0x10]!
0000000000013f5c	stur	xzr, [x0, #-0x8]
0000000000013f60	str	x0, [x19]
0000000000013f64	str	x20, [x0, #0x8]
0000000000013f68	mov	w8, #-0x1
0000000000013f6c	str	w8, [x0, #0x14]
0000000000013f70	str	x0, [x19]
0000000000013f74	ldp	x29, x30, [sp, #0x10]
0000000000013f78	ldp	x20, x19, [sp], #0x20
0000000000013f7c	ret
_kfun:kotlin.collections.AbstractMutableList#contains(1:0){}kotlin.Boolean:
0000000000013f80	stp	x20, x19, [sp, #-0x20]!
0000000000013f84	stp	x29, x30, [sp, #0x10]
0000000000013f88	add	x29, sp, #0x10
0000000000013f8c	mov	x19, x1
0000000000013f90	mov	x20, x0
0000000000013f94	adr	x8, #0x802f5
0000000000013f98	nop
0000000000013f9c	ldarb	w8, [x8]
0000000000013fa0	tbz	w8, #0x0, 0x13fa8
0000000000013fa4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013fa8	ldr	x8, [x20]
0000000000013fac	and	x8, x8, #0xfffffffffffffffc
0000000000013fb0	ldr	x8, [x8]
0000000000013fb4	ldr	x8, [x8, #0x108]
0000000000013fb8	mov	x0, x20
0000000000013fbc	mov	x1, x19
0000000000013fc0	blr	x8
0000000000013fc4	mvn	w8, w0
0000000000013fc8	lsr	w0, w8, #31
0000000000013fcc	ldp	x29, x30, [sp, #0x10]
0000000000013fd0	ldp	x20, x19, [sp], #0x20
0000000000013fd4	ret
_kfun:kotlin.collections.AbstractMutableList#indexOf(1:0){}kotlin.Int:
0000000000013fd8	sub	sp, sp, #0x70
0000000000013fdc	stp	x26, x25, [sp, #0x20]
0000000000013fe0	stp	x24, x23, [sp, #0x30]
0000000000013fe4	stp	x22, x21, [sp, #0x40]
0000000000013fe8	stp	x20, x19, [sp, #0x50]
0000000000013fec	stp	x29, x30, [sp, #0x60]
0000000000013ff0	add	x29, sp, #0x60
0000000000013ff4	mov	x19, x1
0000000000013ff8	mov	x20, x0
0000000000013ffc	movi.16b	v0, #0x0
0000000000014000	stp	q0, q0, [sp]
0000000000014004	mov	x22, sp
0000000000014008	adrp	x0, 102 ; 0x7a000
000000000001400c	add	x0, x0, #0x2c0
0000000000014010	ldr	x8, [x0]
0000000000014014	blr	x8
0000000000014018	ldr	x23, [x0]
000000000001401c	ldr	x8, [x23, #0x110]
0000000000014020	str	x22, [x23, #0x110]
0000000000014024	mov	x9, #0x400000000
0000000000014028	stp	x8, x9, [sp, #0x8]
000000000001402c	adr	x24, #0x8025d
0000000000014030	nop
0000000000014034	ldarb	w8, [x24]
0000000000014038	tbz	w8, #0x0, 0x14040
000000000001403c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014040	mov	x0, x20
0000000000014044	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0§<kotlin.Any?>}kotlin.Int"
0000000000014048	tbnz	w0, #0x1f, 0x140bc
000000000001404c	mov	w21, #0x0
0000000000014050	add	x22, x22, #0x18
0000000000014054	add	w25, w0, #0x1
0000000000014058	b	0x1406c
000000000001405c	cbz	x19, 0x140c0
0000000000014060	add	w21, w21, #0x1
0000000000014064	cmp	w25, w21
0000000000014068	b.eq	0x140bc
000000000001406c	ldarb	w8, [x24]
0000000000014070	tbz	w8, #0x0, 0x14078
0000000000014074	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014078	ldr	x8, [x20]
000000000001407c	and	x8, x8, #0xfffffffffffffffc
0000000000014080	ldr	x8, [x8]
0000000000014084	ldr	x8, [x8, #0x100]
0000000000014088	mov	x0, x20
000000000001408c	mov	x1, x21
0000000000014090	mov	x2, x22
0000000000014094	blr	x8
0000000000014098	cbz	x0, 0x1405c
000000000001409c	ldr	x8, [x0]
00000000000140a0	and	x8, x8, #0xfffffffffffffffc
00000000000140a4	ldr	x8, [x8]
00000000000140a8	ldr	x8, [x8, #0x70]
00000000000140ac	mov	x1, x19
00000000000140b0	blr	x8
00000000000140b4	tbz	w0, #0x0, 0x14060
00000000000140b8	b	0x140c0
00000000000140bc	mov	w21, #-0x1
00000000000140c0	ldr	x8, [sp, #0x8]
00000000000140c4	str	x8, [x23, #0x110]
00000000000140c8	mov	x0, x21
00000000000140cc	ldp	x29, x30, [sp, #0x60]
00000000000140d0	ldp	x20, x19, [sp, #0x50]
00000000000140d4	ldp	x22, x21, [sp, #0x40]
00000000000140d8	ldp	x24, x23, [sp, #0x30]
00000000000140dc	ldp	x26, x25, [sp, #0x20]
00000000000140e0	add	sp, sp, #0x70
00000000000140e4	ret
_kfun:kotlin.collections.AbstractMutableList#lastIndexOf(1:0){}kotlin.Int:
00000000000140e8	sub	sp, sp, #0x60
00000000000140ec	stp	x24, x23, [sp, #0x20]
00000000000140f0	stp	x22, x21, [sp, #0x30]
00000000000140f4	stp	x20, x19, [sp, #0x40]
00000000000140f8	stp	x29, x30, [sp, #0x50]
00000000000140fc	add	x29, sp, #0x50
0000000000014100	mov	x19, x1
0000000000014104	mov	x20, x0
0000000000014108	movi.16b	v0, #0x0
000000000001410c	stp	q0, q0, [sp]
0000000000014110	mov	x22, sp
0000000000014114	adrp	x0, 102 ; 0x7a000
0000000000014118	add	x0, x0, #0x2c0
000000000001411c	ldr	x8, [x0]
0000000000014120	blr	x8
0000000000014124	ldr	x23, [x0]
0000000000014128	ldr	x8, [x23, #0x110]
000000000001412c	str	x22, [x23, #0x110]
0000000000014130	mov	x9, #0x400000000
0000000000014134	stp	x8, x9, [sp, #0x8]
0000000000014138	adr	x24, #0x80151
000000000001413c	nop
0000000000014140	ldarb	w8, [x24]
0000000000014144	tbz	w8, #0x0, 0x1414c
0000000000014148	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001414c	mov	x0, x20
0000000000014150	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0§<kotlin.Any?>}kotlin.Int"
0000000000014154	tbnz	w0, #0x1f, 0x141c8
0000000000014158	mov	x21, x0
000000000001415c	add	x22, x22, #0x18
0000000000014160	b	0x14178
0000000000014164	cbz	x19, 0x141cc
0000000000014168	sub	w21, w21, #0x1
000000000001416c	add	w8, w21, #0x1
0000000000014170	cmp	w8, #0x0
0000000000014174	b.le	0x141c8
0000000000014178	ldarb	w8, [x24]
000000000001417c	tbz	w8, #0x0, 0x14184
0000000000014180	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014184	ldr	x8, [x20]
0000000000014188	and	x8, x8, #0xfffffffffffffffc
000000000001418c	ldr	x8, [x8]
0000000000014190	ldr	x8, [x8, #0x100]
0000000000014194	mov	x0, x20
0000000000014198	mov	x1, x21
000000000001419c	mov	x2, x22
00000000000141a0	blr	x8
00000000000141a4	cbz	x0, 0x14164
00000000000141a8	ldr	x8, [x0]
00000000000141ac	and	x8, x8, #0xfffffffffffffffc
00000000000141b0	ldr	x8, [x8]
00000000000141b4	ldr	x8, [x8, #0x70]
00000000000141b8	mov	x1, x19
00000000000141bc	blr	x8
00000000000141c0	tbz	w0, #0x0, 0x14168
00000000000141c4	b	0x141cc
00000000000141c8	mov	w21, #-0x1
00000000000141cc	ldr	x8, [sp, #0x8]
00000000000141d0	str	x8, [x23, #0x110]
00000000000141d4	mov	x0, x21
00000000000141d8	ldp	x29, x30, [sp, #0x50]
00000000000141dc	ldp	x20, x19, [sp, #0x40]
00000000000141e0	ldp	x22, x21, [sp, #0x30]
00000000000141e4	ldp	x24, x23, [sp, #0x20]
00000000000141e8	add	sp, sp, #0x60
00000000000141ec	ret
_kfun:kotlin.collections.AbstractMutableList#listIterator(){}kotlin.collections.MutableListIterator<1:0>:
00000000000141f0	stp	x20, x19, [sp, #-0x20]!
00000000000141f4	stp	x29, x30, [sp, #0x10]
00000000000141f8	add	x29, sp, #0x10
00000000000141fc	mov	x19, x1
0000000000014200	mov	x20, x0
0000000000014204	adr	x8, #0x80085
0000000000014208	nop
000000000001420c	ldarb	w8, [x8]
0000000000014210	tbz	w8, #0x0, 0x14218
0000000000014214	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014218	ldr	x8, [x20]
000000000001421c	and	x8, x8, #0xfffffffffffffffc
0000000000014220	ldr	x8, [x8]
0000000000014224	ldr	x8, [x8, #0x120]
0000000000014228	mov	x0, x20
000000000001422c	mov	w1, #0x0
0000000000014230	mov	x2, x19
0000000000014234	blr	x8
0000000000014238	str	x0, [x19]
000000000001423c	ldp	x29, x30, [sp, #0x10]
0000000000014240	ldp	x20, x19, [sp], #0x20
0000000000014244	ret
_kfun:kotlin.collections.AbstractMutableList#listIterator(kotlin.Int){}kotlin.collections.MutableListIterator<1:0>:
0000000000014248	stp	x22, x21, [sp, #-0x30]!
000000000001424c	stp	x20, x19, [sp, #0x10]
0000000000014250	stp	x29, x30, [sp, #0x20]
0000000000014254	add	x29, sp, #0x20
0000000000014258	mov	x19, x2
000000000001425c	mov	x20, x1
0000000000014260	mov	x21, x0
0000000000014264	adr	x8, #0x80025
0000000000014268	nop
000000000001426c	ldarb	w8, [x8]
0000000000014270	tbz	w8, #0x0, 0x14278
0000000000014274	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014278	adrp	x0, 102 ; 0x7a000
000000000001427c	add	x0, x0, #0x2c0
0000000000014280	ldr	x8, [x0]
0000000000014284	blr	x8
0000000000014288	ldr	x8, [x0]
000000000001428c	ldr	x8, [x8, #0x118]
0000000000014290	add	x0, x8, #0x70
0000000000014294	mov	w1, #0x28
0000000000014298	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001429c	mov	x22, x0
00000000000142a0	adr	x8, #0x4f5f0
00000000000142a4	nop
00000000000142a8	str	x8, [x22, #0x10]!
00000000000142ac	stur	xzr, [x22, #-0x8]
00000000000142b0	str	x22, [x19]
00000000000142b4	str	x21, [x22, #0x18]
00000000000142b8	str	x21, [x22, #0x8]
00000000000142bc	mov	w8, #-0x1
00000000000142c0	str	w8, [x22, #0x14]
00000000000142c4	ldr	x8, [x21]
00000000000142c8	and	x8, x8, #0xfffffffffffffffc
00000000000142cc	ldr	x8, [x8]
00000000000142d0	ldr	x8, [x8, #0x88]
00000000000142d4	mov	x0, x21
00000000000142d8	blr	x8
00000000000142dc	mov	x1, x0
00000000000142e0	mov	x0, x20
00000000000142e4	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
00000000000142e8	str	w20, [x22, #0x10]
00000000000142ec	str	x22, [x19]
00000000000142f0	mov	x0, x22
00000000000142f4	ldp	x29, x30, [sp, #0x20]
00000000000142f8	ldp	x20, x19, [sp, #0x10]
00000000000142fc	ldp	x22, x21, [sp], #0x30
0000000000014300	ret
_kfun:kotlin.collections.AbstractMutableList#subList(kotlin.Int;kotlin.Int){}kotlin.collections.MutableList<1:0>:
0000000000014304	stp	x24, x23, [sp, #-0x40]!
0000000000014308	stp	x22, x21, [sp, #0x10]
000000000001430c	stp	x20, x19, [sp, #0x20]
0000000000014310	stp	x29, x30, [sp, #0x30]
0000000000014314	add	x29, sp, #0x30
0000000000014318	mov	x19, x3
000000000001431c	mov	x20, x2
0000000000014320	mov	x21, x1
0000000000014324	mov	x22, x0
0000000000014328	adr	x8, #0x7ff61
000000000001432c	nop
0000000000014330	ldarb	w8, [x8]
0000000000014334	tbz	w8, #0x0, 0x1433c
0000000000014338	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001433c	adrp	x0, 102 ; 0x7a000
0000000000014340	add	x0, x0, #0x2c0
0000000000014344	ldr	x8, [x0]
0000000000014348	blr	x8
000000000001434c	ldr	x8, [x0]
0000000000014350	ldr	x8, [x8, #0x118]
0000000000014354	add	x0, x8, #0x70
0000000000014358	mov	w1, #0x28
000000000001435c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000014360	mov	x23, x0
0000000000014364	adr	x8, #0x4f5cc
0000000000014368	nop
000000000001436c	str	x8, [x23, #0x10]!
0000000000014370	stur	xzr, [x23, #-0x8]
0000000000014374	str	x23, [x19]
0000000000014378	str	x22, [x23, #0x10]
000000000001437c	str	w21, [x23, #0x18]
0000000000014380	ldr	x8, [x22]
0000000000014384	and	x8, x8, #0xfffffffffffffffc
0000000000014388	ldr	x8, [x8]
000000000001438c	ldr	x8, [x8, #0x88]
0000000000014390	mov	x0, x22
0000000000014394	blr	x8
0000000000014398	mov	x2, x0
000000000001439c	mov	x0, x21
00000000000143a0	mov	x1, x20
00000000000143a4	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkRangeIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
00000000000143a8	ldr	w8, [x23, #0x18]
00000000000143ac	sub	w8, w20, w8
00000000000143b0	str	w8, [x23, #0x1c]
00000000000143b4	str	x23, [x19]
00000000000143b8	mov	x0, x23
00000000000143bc	ldp	x29, x30, [sp, #0x30]
00000000000143c0	ldp	x20, x19, [sp, #0x20]
00000000000143c4	ldp	x22, x21, [sp, #0x10]
00000000000143c8	ldp	x24, x23, [sp], #0x40
00000000000143cc	ret
_kfun:kotlin.collections.AbstractMutableList#removeRange(kotlin.Int;kotlin.Int){}:
00000000000143d0	sub	sp, sp, #0x80
00000000000143d4	stp	x26, x25, [sp, #0x30]
00000000000143d8	stp	x24, x23, [sp, #0x40]
00000000000143dc	stp	x22, x21, [sp, #0x50]
00000000000143e0	stp	x20, x19, [sp, #0x60]
00000000000143e4	stp	x29, x30, [sp, #0x70]
00000000000143e8	add	x29, sp, #0x70
00000000000143ec	mov	x20, x2
00000000000143f0	mov	x21, x1
00000000000143f4	mov	x19, x0
00000000000143f8	movi.16b	v0, #0x0
00000000000143fc	stp	q0, q0, [sp]
0000000000014400	str	xzr, [sp, #0x20]
0000000000014404	mov	x25, sp
0000000000014408	add	x22, x25, #0x18
000000000001440c	adrp	x0, 102 ; 0x7a000
0000000000014410	add	x0, x0, #0x2c0
0000000000014414	ldr	x8, [x0]
0000000000014418	blr	x8
000000000001441c	ldr	x23, [x0]
0000000000014420	ldr	x8, [x23, #0x110]
0000000000014424	str	x25, [x23, #0x110]
0000000000014428	mov	x9, #0x500000000
000000000001442c	stp	x8, x9, [sp, #0x8]
0000000000014430	adr	x24, #0x7fe59
0000000000014434	nop
0000000000014438	ldarb	w8, [x24]
000000000001443c	tbz	w8, #0x0, 0x14444
0000000000014440	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014444	ldr	x8, [x19]
0000000000014448	and	x8, x8, #0xfffffffffffffffc
000000000001444c	ldr	x8, [x8]
0000000000014450	ldr	x8, [x8, #0x120]
0000000000014454	mov	x0, x19
0000000000014458	mov	x1, x21
000000000001445c	mov	x2, x22
0000000000014460	blr	x8
0000000000014464	sub	w21, w20, w21
0000000000014468	cmp	w21, #0x1
000000000001446c	b.lt	0x14618
0000000000014470	mov	x19, x0
0000000000014474	mov	w22, #0x0
0000000000014478	add	x20, x25, #0x20
000000000001447c	mov	w25, #0x23
0000000000014480	b	0x144a8
0000000000014484	and	x9, x9, x25
0000000000014488	add	w22, w22, #0x1
000000000001448c	add	x8, x8, x9, lsl #4
0000000000014490	ldr	x8, [x8, #0x8]
0000000000014494	ldr	x8, [x8, #0x18]
0000000000014498	mov	x0, x19
000000000001449c	blr	x8
00000000000144a0	cmp	w22, w21
00000000000144a4	b.eq	0x14618
00000000000144a8	ldarb	w8, [x24]
00000000000144ac	tbz	w8, #0x0, 0x144b4
00000000000144b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000144b4	ldr	x8, [x19]
00000000000144b8	and	x8, x8, #0xfffffffffffffffc
00000000000144bc	ldr	x8, [x8]
00000000000144c0	ldr	w9, [x8, #0x3c]
00000000000144c4	ldr	x8, [x8, #0x40]
00000000000144c8	tbnz	w9, #0x1f, 0x144d4
00000000000144cc	and	x9, x9, x25
00000000000144d0	b	0x14558
00000000000144d4	neg	w10, w9
00000000000144d8	mvn	w9, w9
00000000000144dc	cmp	w10, #0x9
00000000000144e0	b.ge	0x14518
00000000000144e4	cmp	w10, #0x2
00000000000144e8	b.lt	0x1454c
00000000000144ec	mov	x10, #0x0
00000000000144f0	mov	x11, x8
00000000000144f4	ldr	w12, [x11]
00000000000144f8	cmp	w12, #0x22
00000000000144fc	b.gt	0x14554
0000000000014500	add	x10, x10, #0x1
0000000000014504	add	x11, x11, #0x10
0000000000014508	cmp	x9, x10
000000000001450c	b.ne	0x144f4
0000000000014510	mov	x10, x9
0000000000014514	b	0x14554
0000000000014518	mov	w10, #0x0
000000000001451c	add	w11, w9, w10
0000000000014520	cmp	w11, #0x0
0000000000014524	cinc	w11, w11, lt
0000000000014528	asr	w11, w11, #1
000000000001452c	sbfiz	x12, x11, #4, #32
0000000000014530	ldr	w12, [x8, x12]
0000000000014534	cmp	w12, #0x23
0000000000014538	csinc	w10, w10, w11, ge
000000000001453c	csel	w9, w9, w11, lt
0000000000014540	cmp	w10, w9
0000000000014544	b.lt	0x1451c
0000000000014548	b	0x14554
000000000001454c	mov	w10, #0x0
0000000000014550	b	0x14554
0000000000014554	sxtw	x9, w10
0000000000014558	add	x8, x8, x9, lsl #4
000000000001455c	ldr	x8, [x8, #0x8]
0000000000014560	ldr	x8, [x8, #0x10]
0000000000014564	mov	x0, x19
0000000000014568	mov	x1, x20
000000000001456c	blr	x8
0000000000014570	ldr	x8, [x19]
0000000000014574	and	x8, x8, #0xfffffffffffffffc
0000000000014578	ldr	x8, [x8]
000000000001457c	ldr	w9, [x8, #0x3c]
0000000000014580	ldr	x8, [x8, #0x40]
0000000000014584	tbz	w9, #0x1f, 0x14484
0000000000014588	neg	w10, w9
000000000001458c	mvn	w9, w9
0000000000014590	cmp	w10, #0x9
0000000000014594	b.ge	0x145d0
0000000000014598	cmp	w10, #0x2
000000000001459c	b.lt	0x14604
00000000000145a0	mov	x10, #0x0
00000000000145a4	mov	x11, x8
00000000000145a8	ldr	w12, [x11]
00000000000145ac	cmp	w12, #0x22
00000000000145b0	b.gt	0x14610
00000000000145b4	add	x10, x10, #0x1
00000000000145b8	add	x11, x11, #0x10
00000000000145bc	cmp	x9, x10
00000000000145c0	b.ne	0x145a8
00000000000145c4	mov	x10, x9
00000000000145c8	sxtw	x9, w10
00000000000145cc	b	0x14488
00000000000145d0	mov	w10, #0x0
00000000000145d4	add	w11, w9, w10
00000000000145d8	cmp	w11, #0x0
00000000000145dc	cinc	w11, w11, lt
00000000000145e0	asr	w11, w11, #1
00000000000145e4	sbfiz	x12, x11, #4, #32
00000000000145e8	ldr	w12, [x8, x12]
00000000000145ec	cmp	w12, #0x23
00000000000145f0	csinc	w10, w10, w11, ge
00000000000145f4	csel	w9, w9, w11, lt
00000000000145f8	cmp	w10, w9
00000000000145fc	b.lt	0x145d4
0000000000014600	b	0x14610
0000000000014604	mov	w10, #0x0
0000000000014608	sxtw	x9, w10
000000000001460c	b	0x14488
0000000000014610	sxtw	x9, w10
0000000000014614	b	0x14488
0000000000014618	ldr	x8, [sp, #0x8]
000000000001461c	str	x8, [x23, #0x110]
0000000000014620	ldp	x29, x30, [sp, #0x70]
0000000000014624	ldp	x20, x19, [sp, #0x60]
0000000000014628	ldp	x22, x21, [sp, #0x50]
000000000001462c	ldp	x24, x23, [sp, #0x40]
0000000000014630	ldp	x26, x25, [sp, #0x30]
0000000000014634	add	sp, sp, #0x80
0000000000014638	ret
_kfun:kotlin.collections.AbstractMutableList#equals(kotlin.Any?){}kotlin.Boolean:
000000000001463c	stp	x20, x19, [sp, #-0x20]!
0000000000014640	stp	x29, x30, [sp, #0x10]
0000000000014644	add	x29, sp, #0x10
0000000000014648	mov	x19, x1
000000000001464c	mov	x20, x0
0000000000014650	adr	x8, #0x7fc39
0000000000014654	nop
0000000000014658	ldarb	w8, [x8]
000000000001465c	tbz	w8, #0x0, 0x14664
0000000000014660	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014664	cmp	x19, x20
0000000000014668	b.eq	0x146a4
000000000001466c	cbz	x19, 0x14758
0000000000014670	ldr	x8, [x19]
0000000000014674	and	x8, x8, #0xfffffffffffffffc
0000000000014678	ldr	x8, [x8]
000000000001467c	ldr	w9, [x8, #0x3c]
0000000000014680	ldr	x8, [x8, #0x40]
0000000000014684	tbnz	w9, #0x1f, 0x146b4
0000000000014688	mov	w10, #0x2b
000000000001468c	and	x9, x9, x10
0000000000014690	lsl	x9, x9, #4
0000000000014694	ldr	w8, [x8, x9]
0000000000014698	cmp	w8, #0x2b
000000000001469c	b.ne	0x14758
00000000000146a0	b	0x1477c
00000000000146a4	mov	w0, #0x1
00000000000146a8	ldp	x29, x30, [sp, #0x10]
00000000000146ac	ldp	x20, x19, [sp], #0x20
00000000000146b0	ret
00000000000146b4	neg	w10, w9
00000000000146b8	mvn	w9, w9
00000000000146bc	cmp	w10, #0x9
00000000000146c0	b.ge	0x1470c
00000000000146c4	cmp	w10, #0x2
00000000000146c8	b.lt	0x14740
00000000000146cc	mov	x10, #0x0
00000000000146d0	mov	x11, x8
00000000000146d4	ldr	w12, [x11]
00000000000146d8	cmp	w12, #0x2a
00000000000146dc	b.gt	0x14768
00000000000146e0	add	x10, x10, #0x1
00000000000146e4	add	x11, x11, #0x10
00000000000146e8	cmp	x9, x10
00000000000146ec	b.ne	0x146d4
00000000000146f0	mov	x10, x9
00000000000146f4	sxtw	x9, w10
00000000000146f8	lsl	x9, x9, #4
00000000000146fc	ldr	w8, [x8, x9]
0000000000014700	cmp	w8, #0x2b
0000000000014704	b.ne	0x14758
0000000000014708	b	0x1477c
000000000001470c	mov	w10, #0x0
0000000000014710	add	w11, w9, w10
0000000000014714	cmp	w11, #0x0
0000000000014718	cinc	w11, w11, lt
000000000001471c	asr	w11, w11, #1
0000000000014720	sbfiz	x12, x11, #4, #32
0000000000014724	ldr	w12, [x8, x12]
0000000000014728	cmp	w12, #0x2b
000000000001472c	csinc	w10, w10, w11, ge
0000000000014730	csel	w9, w9, w11, lt
0000000000014734	cmp	w10, w9
0000000000014738	b.lt	0x14710
000000000001473c	b	0x14768
0000000000014740	mov	w10, #0x0
0000000000014744	sxtw	x9, w10
0000000000014748	lsl	x9, x9, #4
000000000001474c	ldr	w8, [x8, x9]
0000000000014750	cmp	w8, #0x2b
0000000000014754	b.eq	0x1477c
0000000000014758	mov	w0, #0x0
000000000001475c	ldp	x29, x30, [sp, #0x10]
0000000000014760	ldp	x20, x19, [sp], #0x20
0000000000014764	ret
0000000000014768	sxtw	x9, w10
000000000001476c	lsl	x9, x9, #4
0000000000014770	ldr	w8, [x8, x9]
0000000000014774	cmp	w8, #0x2b
0000000000014778	b.ne	0x14758
000000000001477c	mov	x0, x20
0000000000014780	mov	x1, x19
0000000000014784	ldp	x29, x30, [sp, #0x10]
0000000000014788	ldp	x20, x19, [sp], #0x20
000000000001478c	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedEquals(kotlin.collections.Collection<*>;kotlin.collections.Collection<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractMutableList#hashCode(){}kotlin.Int:
0000000000014790	stp	x20, x19, [sp, #-0x20]!
0000000000014794	stp	x29, x30, [sp, #0x10]
0000000000014798	add	x29, sp, #0x10
000000000001479c	mov	x19, x0
00000000000147a0	adr	x8, #0x7fae9
00000000000147a4	nop
00000000000147a8	ldarb	w8, [x8]
00000000000147ac	tbz	w8, #0x0, 0x147b4
00000000000147b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000147b4	mov	x0, x19
00000000000147b8	ldp	x29, x30, [sp, #0x10]
00000000000147bc	ldp	x20, x19, [sp], #0x20
00000000000147c0	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections.AbstractMutableList.IteratorImpl.hasNext#internal:
00000000000147c4	stp	x20, x19, [sp, #-0x20]!
00000000000147c8	stp	x29, x30, [sp, #0x10]
00000000000147cc	add	x29, sp, #0x10
00000000000147d0	mov	x19, x0
00000000000147d4	adr	x8, #0x7fab5
00000000000147d8	nop
00000000000147dc	ldarb	w8, [x8]
00000000000147e0	tbz	w8, #0x0, 0x147e8
00000000000147e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000147e8	ldr	w20, [x19, #0x10]
00000000000147ec	ldr	x0, [x19, #0x8]
00000000000147f0	ldr	x8, [x0]
00000000000147f4	and	x8, x8, #0xfffffffffffffffc
00000000000147f8	ldr	x8, [x8]
00000000000147fc	ldr	x8, [x8, #0x88]
0000000000014800	blr	x8
0000000000014804	cmp	w20, w0
0000000000014808	cset	w0, lt
000000000001480c	ldp	x29, x30, [sp, #0x10]
0000000000014810	ldp	x20, x19, [sp], #0x20
0000000000014814	ret
_kfun:kotlin.collections.AbstractMutableList.IteratorImpl.next#internal:
0000000000014818	sub	sp, sp, #0x50
000000000001481c	stp	x22, x21, [sp, #0x20]
0000000000014820	stp	x20, x19, [sp, #0x30]
0000000000014824	stp	x29, x30, [sp, #0x40]
0000000000014828	add	x29, sp, #0x40
000000000001482c	mov	x19, x1
0000000000014830	mov	x20, x0
0000000000014834	movi.16b	v0, #0x0
0000000000014838	stp	q0, q0, [sp]
000000000001483c	adrp	x0, 102 ; 0x7a000
0000000000014840	add	x0, x0, #0x2c0
0000000000014844	ldr	x8, [x0]
0000000000014848	blr	x8
000000000001484c	ldr	x21, [x0]
0000000000014850	ldr	x8, [x21, #0x110]
0000000000014854	mov	x9, sp
0000000000014858	str	x9, [x21, #0x110]
000000000001485c	mov	x9, #0x400000000
0000000000014860	stp	x8, x9, [sp, #0x8]
0000000000014864	adr	x8, #0x7fa25
0000000000014868	nop
000000000001486c	ldarb	w8, [x8]
0000000000014870	tbz	w8, #0x0, 0x14878
0000000000014874	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014878	ldr	x8, [x20]
000000000001487c	and	x8, x8, #0xfffffffffffffffc
0000000000014880	ldr	x8, [x8]
0000000000014884	ldr	x8, [x8, #0x88]
0000000000014888	mov	x0, x20
000000000001488c	blr	x8
0000000000014890	tbz	w0, #0x0, 0x148dc
0000000000014894	ldr	w1, [x20, #0x10]
0000000000014898	add	w8, w1, #0x1
000000000001489c	stp	w8, w1, [x20, #0x10]
00000000000148a0	ldr	x0, [x20, #0x8]
00000000000148a4	ldr	x8, [x0]
00000000000148a8	and	x8, x8, #0xfffffffffffffffc
00000000000148ac	ldr	x8, [x8]
00000000000148b0	ldr	x8, [x8, #0x100]
00000000000148b4	mov	x2, x19
00000000000148b8	blr	x8
00000000000148bc	str	x0, [x19]
00000000000148c0	ldr	x8, [sp, #0x8]
00000000000148c4	str	x8, [x21, #0x110]
00000000000148c8	ldp	x29, x30, [sp, #0x40]
00000000000148cc	ldp	x20, x19, [sp, #0x30]
00000000000148d0	ldp	x22, x21, [sp, #0x20]
00000000000148d4	add	sp, sp, #0x50
00000000000148d8	ret
00000000000148dc	ldr	x8, [x21, #0x118]
00000000000148e0	add	x0, x8, #0x70
00000000000148e4	mov	w1, #0x38
00000000000148e8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000148ec	mov	x19, x0
00000000000148f0	adr	x8, #0x4c910
00000000000148f4	nop
00000000000148f8	str	x8, [x19, #0x10]!
00000000000148fc	stur	xzr, [x19, #-0x8]
0000000000014900	str	x19, [sp, #0x18]
0000000000014904	mov	x0, x19
0000000000014908	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001490c	mov	x0, x19
0000000000014910	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.IteratorImpl.remove#internal:
0000000000014914	sub	sp, sp, #0x50
0000000000014918	stp	x20, x19, [sp, #0x30]
000000000001491c	stp	x29, x30, [sp, #0x40]
0000000000014920	add	x29, sp, #0x40
0000000000014924	mov	x19, x0
0000000000014928	movi.16b	v0, #0x0
000000000001492c	stp	q0, q0, [sp]
0000000000014930	str	xzr, [sp, #0x20]
0000000000014934	adrp	x0, 102 ; 0x7a000
0000000000014938	add	x0, x0, #0x2c0
000000000001493c	ldr	x8, [x0]
0000000000014940	blr	x8
0000000000014944	ldr	x20, [x0]
0000000000014948	ldr	x8, [x20, #0x110]
000000000001494c	mov	x9, sp
0000000000014950	str	x9, [x20, #0x110]
0000000000014954	mov	x9, #0x500000000
0000000000014958	stp	x8, x9, [sp, #0x8]
000000000001495c	adr	x8, #0x7f92d
0000000000014960	nop
0000000000014964	ldarb	w8, [x8]
0000000000014968	tbz	w8, #0x0, 0x14970
000000000001496c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014970	ldr	w1, [x19, #0x14]
0000000000014974	cmn	w1, #0x1
0000000000014978	b.eq	0x149c0
000000000001497c	mov	x8, sp
0000000000014980	add	x2, x8, #0x20
0000000000014984	ldr	x0, [x19, #0x8]
0000000000014988	ldr	x8, [x0]
000000000001498c	and	x8, x8, #0xfffffffffffffffc
0000000000014990	ldr	x8, [x8]
0000000000014994	ldr	x8, [x8, #0x128]
0000000000014998	blr	x8
000000000001499c	ldr	w8, [x19, #0x14]
00000000000149a0	mov	w9, #-0x1
00000000000149a4	stp	w8, w9, [x19, #0x10]
00000000000149a8	ldr	x8, [sp, #0x8]
00000000000149ac	str	x8, [x20, #0x110]
00000000000149b0	ldp	x29, x30, [sp, #0x40]
00000000000149b4	ldp	x20, x19, [sp, #0x30]
00000000000149b8	add	sp, sp, #0x50
00000000000149bc	ret
00000000000149c0	ldr	x8, [x20, #0x118]
00000000000149c4	add	x0, x8, #0x70
00000000000149c8	mov	w1, #0x38
00000000000149cc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000149d0	mov	x19, x0
00000000000149d4	adr	x8, #0x4caac
00000000000149d8	nop
00000000000149dc	str	x8, [x19, #0x10]!
00000000000149e0	stur	xzr, [x19, #-0x8]
00000000000149e4	str	x19, [sp, #0x18]
00000000000149e8	adr	x1, #0x59f28
00000000000149ec	nop
00000000000149f0	mov	x0, x19
00000000000149f4	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
00000000000149f8	mov	x0, x19
00000000000149fc	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.hasPrevious#internal:
0000000000014a00	stp	x20, x19, [sp, #-0x20]!
0000000000014a04	stp	x29, x30, [sp, #0x10]
0000000000014a08	add	x29, sp, #0x10
0000000000014a0c	mov	x19, x0
0000000000014a10	adr	x8, #0x7f879
0000000000014a14	nop
0000000000014a18	ldarb	w8, [x8]
0000000000014a1c	tbz	w8, #0x0, 0x14a24
0000000000014a20	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014a24	ldr	w8, [x19, #0x10]
0000000000014a28	cmp	w8, #0x0
0000000000014a2c	cset	w0, gt
0000000000014a30	ldp	x29, x30, [sp, #0x10]
0000000000014a34	ldp	x20, x19, [sp], #0x20
0000000000014a38	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.nextIndex#internal:
0000000000014a3c	stp	x20, x19, [sp, #-0x20]!
0000000000014a40	stp	x29, x30, [sp, #0x10]
0000000000014a44	add	x29, sp, #0x10
0000000000014a48	mov	x19, x0
0000000000014a4c	adr	x8, #0x7f83d
0000000000014a50	nop
0000000000014a54	ldarb	w8, [x8]
0000000000014a58	tbz	w8, #0x0, 0x14a60
0000000000014a5c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014a60	ldr	w0, [x19, #0x10]
0000000000014a64	ldp	x29, x30, [sp, #0x10]
0000000000014a68	ldp	x20, x19, [sp], #0x20
0000000000014a6c	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.previous#internal:
0000000000014a70	sub	sp, sp, #0x50
0000000000014a74	stp	x22, x21, [sp, #0x20]
0000000000014a78	stp	x20, x19, [sp, #0x30]
0000000000014a7c	stp	x29, x30, [sp, #0x40]
0000000000014a80	add	x29, sp, #0x40
0000000000014a84	mov	x19, x1
0000000000014a88	mov	x20, x0
0000000000014a8c	movi.16b	v0, #0x0
0000000000014a90	stp	q0, q0, [sp]
0000000000014a94	adrp	x0, 102 ; 0x7a000
0000000000014a98	add	x0, x0, #0x2c0
0000000000014a9c	ldr	x8, [x0]
0000000000014aa0	blr	x8
0000000000014aa4	ldr	x21, [x0]
0000000000014aa8	ldr	x8, [x21, #0x110]
0000000000014aac	mov	x9, sp
0000000000014ab0	str	x9, [x21, #0x110]
0000000000014ab4	mov	x9, #0x400000000
0000000000014ab8	stp	x8, x9, [sp, #0x8]
0000000000014abc	adr	x8, #0x7f7cd
0000000000014ac0	nop
0000000000014ac4	ldarb	w8, [x8]
0000000000014ac8	tbz	w8, #0x0, 0x14ad0
0000000000014acc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014ad0	ldr	w8, [x20, #0x10]
0000000000014ad4	cmp	w8, #0x0
0000000000014ad8	b.le	0x14b20
0000000000014adc	sub	w1, w8, #0x1
0000000000014ae0	stp	w1, w1, [x20, #0x10]
0000000000014ae4	ldr	x0, [x20, #0x18]
0000000000014ae8	ldr	x8, [x0]
0000000000014aec	and	x8, x8, #0xfffffffffffffffc
0000000000014af0	ldr	x8, [x8]
0000000000014af4	ldr	x8, [x8, #0x100]
0000000000014af8	mov	x2, x19
0000000000014afc	blr	x8
0000000000014b00	str	x0, [x19]
0000000000014b04	ldr	x8, [sp, #0x8]
0000000000014b08	str	x8, [x21, #0x110]
0000000000014b0c	ldp	x29, x30, [sp, #0x40]
0000000000014b10	ldp	x20, x19, [sp, #0x30]
0000000000014b14	ldp	x22, x21, [sp, #0x20]
0000000000014b18	add	sp, sp, #0x50
0000000000014b1c	ret
0000000000014b20	ldr	x8, [x21, #0x118]
0000000000014b24	add	x0, x8, #0x70
0000000000014b28	mov	w1, #0x38
0000000000014b2c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000014b30	mov	x19, x0
0000000000014b34	adr	x8, #0x4c6cc
0000000000014b38	nop
0000000000014b3c	str	x8, [x19, #0x10]!
0000000000014b40	stur	xzr, [x19, #-0x8]
0000000000014b44	str	x19, [sp, #0x18]
0000000000014b48	mov	x0, x19
0000000000014b4c	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
0000000000014b50	mov	x0, x19
0000000000014b54	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.previousIndex#internal:
0000000000014b58	stp	x20, x19, [sp, #-0x20]!
0000000000014b5c	stp	x29, x30, [sp, #0x10]
0000000000014b60	add	x29, sp, #0x10
0000000000014b64	mov	x19, x0
0000000000014b68	adr	x8, #0x7f721
0000000000014b6c	nop
0000000000014b70	ldarb	w8, [x8]
0000000000014b74	tbz	w8, #0x0, 0x14b7c
0000000000014b78	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014b7c	ldr	w8, [x19, #0x10]
0000000000014b80	sub	w0, w8, #0x1
0000000000014b84	ldp	x29, x30, [sp, #0x10]
0000000000014b88	ldp	x20, x19, [sp], #0x20
0000000000014b8c	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.add#internal:
0000000000014b90	stp	x20, x19, [sp, #-0x20]!
0000000000014b94	stp	x29, x30, [sp, #0x10]
0000000000014b98	add	x29, sp, #0x10
0000000000014b9c	mov	x20, x1
0000000000014ba0	mov	x19, x0
0000000000014ba4	adr	x8, #0x7f6e5
0000000000014ba8	nop
0000000000014bac	ldarb	w8, [x8]
0000000000014bb0	tbz	w8, #0x0, 0x14bb8
0000000000014bb4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014bb8	ldr	x0, [x19, #0x18]
0000000000014bbc	ldr	w1, [x19, #0x10]
0000000000014bc0	ldr	x8, [x0]
0000000000014bc4	and	x8, x8, #0xfffffffffffffffc
0000000000014bc8	ldr	x8, [x8]
0000000000014bcc	ldr	x8, [x8, #0xf0]
0000000000014bd0	mov	x2, x20
0000000000014bd4	blr	x8
0000000000014bd8	ldr	w8, [x19, #0x10]
0000000000014bdc	add	w8, w8, #0x1
0000000000014be0	mov	w9, #-0x1
0000000000014be4	stp	w8, w9, [x19, #0x10]
0000000000014be8	ldp	x29, x30, [sp, #0x10]
0000000000014bec	ldp	x20, x19, [sp], #0x20
0000000000014bf0	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.set#internal:
0000000000014bf4	sub	sp, sp, #0x60
0000000000014bf8	stp	x22, x21, [sp, #0x30]
0000000000014bfc	stp	x20, x19, [sp, #0x40]
0000000000014c00	stp	x29, x30, [sp, #0x50]
0000000000014c04	add	x29, sp, #0x50
0000000000014c08	mov	x19, x1
0000000000014c0c	mov	x20, x0
0000000000014c10	movi.16b	v0, #0x0
0000000000014c14	stp	q0, q0, [sp]
0000000000014c18	str	xzr, [sp, #0x20]
0000000000014c1c	adrp	x0, 102 ; 0x7a000
0000000000014c20	add	x0, x0, #0x2c0
0000000000014c24	ldr	x8, [x0]
0000000000014c28	blr	x8
0000000000014c2c	ldr	x21, [x0]
0000000000014c30	ldr	x8, [x21, #0x110]
0000000000014c34	mov	x9, sp
0000000000014c38	str	x9, [x21, #0x110]
0000000000014c3c	mov	x9, #0x500000000
0000000000014c40	stp	x8, x9, [sp, #0x8]
0000000000014c44	adr	x8, #0x7f645
0000000000014c48	nop
0000000000014c4c	ldarb	w8, [x8]
0000000000014c50	tbz	w8, #0x0, 0x14c58
0000000000014c54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014c58	ldr	w1, [x20, #0x14]
0000000000014c5c	cmn	w1, #0x1
0000000000014c60	b.eq	0x14ca4
0000000000014c64	mov	x8, sp
0000000000014c68	add	x3, x8, #0x20
0000000000014c6c	ldr	x0, [x20, #0x18]
0000000000014c70	ldr	x8, [x0]
0000000000014c74	and	x8, x8, #0xfffffffffffffffc
0000000000014c78	ldr	x8, [x8]
0000000000014c7c	ldr	x8, [x8, #0x138]
0000000000014c80	mov	x2, x19
0000000000014c84	blr	x8
0000000000014c88	ldr	x8, [sp, #0x8]
0000000000014c8c	str	x8, [x21, #0x110]
0000000000014c90	ldp	x29, x30, [sp, #0x50]
0000000000014c94	ldp	x20, x19, [sp, #0x40]
0000000000014c98	ldp	x22, x21, [sp, #0x30]
0000000000014c9c	add	sp, sp, #0x60
0000000000014ca0	ret
0000000000014ca4	ldr	x8, [x21, #0x118]
0000000000014ca8	add	x0, x8, #0x70
0000000000014cac	mov	w1, #0x38
0000000000014cb0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000014cb4	mov	x19, x0
0000000000014cb8	adr	x8, #0x4c7c8
0000000000014cbc	nop
0000000000014cc0	str	x8, [x19, #0x10]!
0000000000014cc4	stur	xzr, [x19, #-0x8]
0000000000014cc8	str	x19, [sp, #0x18]
0000000000014ccc	adr	x1, #0x59ce4
0000000000014cd0	nop
0000000000014cd4	mov	x0, x19
0000000000014cd8	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000014cdc	mov	x0, x19
0000000000014ce0	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.SubList.add#internal:
0000000000014ce4	stp	x22, x21, [sp, #-0x30]!
0000000000014ce8	stp	x20, x19, [sp, #0x10]
0000000000014cec	stp	x29, x30, [sp, #0x20]
0000000000014cf0	add	x29, sp, #0x20
0000000000014cf4	mov	x20, x2
0000000000014cf8	mov	x21, x1
0000000000014cfc	mov	x19, x0
0000000000014d00	adr	x8, #0x7f589
0000000000014d04	nop
0000000000014d08	ldarb	w8, [x8]
0000000000014d0c	tbz	w8, #0x0, 0x14d14
0000000000014d10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014d14	ldr	w1, [x19, #0x1c]
0000000000014d18	mov	x0, x21
0000000000014d1c	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
0000000000014d20	ldr	x0, [x19, #0x10]
0000000000014d24	ldr	w8, [x19, #0x18]
0000000000014d28	add	w1, w8, w21
0000000000014d2c	ldr	x8, [x0]
0000000000014d30	and	x8, x8, #0xfffffffffffffffc
0000000000014d34	ldr	x8, [x8]
0000000000014d38	ldr	x8, [x8, #0xf0]
0000000000014d3c	mov	x2, x20
0000000000014d40	blr	x8
0000000000014d44	ldr	w8, [x19, #0x1c]
0000000000014d48	add	w8, w8, #0x1
0000000000014d4c	str	w8, [x19, #0x1c]
0000000000014d50	ldp	x29, x30, [sp, #0x20]
0000000000014d54	ldp	x20, x19, [sp, #0x10]
0000000000014d58	ldp	x22, x21, [sp], #0x30
0000000000014d5c	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.get#internal:
0000000000014d60	stp	x22, x21, [sp, #-0x30]!
0000000000014d64	stp	x20, x19, [sp, #0x10]
0000000000014d68	stp	x29, x30, [sp, #0x20]
0000000000014d6c	add	x29, sp, #0x20
0000000000014d70	mov	x19, x2
0000000000014d74	mov	x20, x1
0000000000014d78	mov	x21, x0
0000000000014d7c	adr	x8, #0x7f50d
0000000000014d80	nop
0000000000014d84	ldarb	w8, [x8]
0000000000014d88	tbz	w8, #0x0, 0x14d90
0000000000014d8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014d90	ldr	w1, [x21, #0x1c]
0000000000014d94	mov	x0, x20
0000000000014d98	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
0000000000014d9c	ldr	x0, [x21, #0x10]
0000000000014da0	ldr	w8, [x21, #0x18]
0000000000014da4	add	w1, w8, w20
0000000000014da8	ldr	x8, [x0]
0000000000014dac	and	x8, x8, #0xfffffffffffffffc
0000000000014db0	ldr	x8, [x8]
0000000000014db4	ldr	x8, [x8, #0x100]
0000000000014db8	mov	x2, x19
0000000000014dbc	blr	x8
0000000000014dc0	str	x0, [x19]
0000000000014dc4	ldp	x29, x30, [sp, #0x20]
0000000000014dc8	ldp	x20, x19, [sp, #0x10]
0000000000014dcc	ldp	x22, x21, [sp], #0x30
0000000000014dd0	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.removeAt#internal:
0000000000014dd4	sub	sp, sp, #0x60
0000000000014dd8	stp	x24, x23, [sp, #0x20]
0000000000014ddc	stp	x22, x21, [sp, #0x30]
0000000000014de0	stp	x20, x19, [sp, #0x40]
0000000000014de4	stp	x29, x30, [sp, #0x50]
0000000000014de8	add	x29, sp, #0x50
0000000000014dec	mov	x19, x2
0000000000014df0	mov	x22, x1
0000000000014df4	mov	x20, x0
0000000000014df8	movi.16b	v0, #0x0
0000000000014dfc	stp	q0, q0, [sp]
0000000000014e00	mov	x8, sp
0000000000014e04	add	x21, x8, #0x18
0000000000014e08	adrp	x0, 102 ; 0x7a000
0000000000014e0c	add	x0, x0, #0x2c0
0000000000014e10	ldr	x9, [x0]
0000000000014e14	blr	x9
0000000000014e18	ldr	x23, [x0]
0000000000014e1c	ldr	x9, [x23, #0x110]
0000000000014e20	str	x8, [x23, #0x110]
0000000000014e24	mov	x8, #0x400000000
0000000000014e28	stp	x9, x8, [sp, #0x8]
0000000000014e2c	adr	x8, #0x7f45d
0000000000014e30	nop
0000000000014e34	ldarb	w8, [x8]
0000000000014e38	tbz	w8, #0x0, 0x14e40
0000000000014e3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014e40	ldr	w1, [x20, #0x1c]
0000000000014e44	mov	x0, x22
0000000000014e48	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
0000000000014e4c	ldr	x0, [x20, #0x10]
0000000000014e50	ldr	w8, [x20, #0x18]
0000000000014e54	add	w1, w8, w22
0000000000014e58	ldr	x8, [x0]
0000000000014e5c	and	x8, x8, #0xfffffffffffffffc
0000000000014e60	ldr	x8, [x8]
0000000000014e64	ldr	x8, [x8, #0x128]
0000000000014e68	mov	x2, x21
0000000000014e6c	blr	x8
0000000000014e70	ldr	w8, [x20, #0x1c]
0000000000014e74	sub	w8, w8, #0x1
0000000000014e78	str	w8, [x20, #0x1c]
0000000000014e7c	str	x0, [x19]
0000000000014e80	ldr	x8, [sp, #0x8]
0000000000014e84	str	x8, [x23, #0x110]
0000000000014e88	ldp	x29, x30, [sp, #0x50]
0000000000014e8c	ldp	x20, x19, [sp, #0x40]
0000000000014e90	ldp	x22, x21, [sp, #0x30]
0000000000014e94	ldp	x24, x23, [sp, #0x20]
0000000000014e98	add	sp, sp, #0x60
0000000000014e9c	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.set#internal:
0000000000014ea0	stp	x22, x21, [sp, #-0x30]!
0000000000014ea4	stp	x20, x19, [sp, #0x10]
0000000000014ea8	stp	x29, x30, [sp, #0x20]
0000000000014eac	add	x29, sp, #0x20
0000000000014eb0	mov	x19, x3
0000000000014eb4	mov	x20, x2
0000000000014eb8	mov	x21, x1
0000000000014ebc	mov	x22, x0
0000000000014ec0	adr	x8, #0x7f3c9
0000000000014ec4	nop
0000000000014ec8	ldarb	w8, [x8]
0000000000014ecc	tbz	w8, #0x0, 0x14ed4
0000000000014ed0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014ed4	ldr	w1, [x22, #0x1c]
0000000000014ed8	mov	x0, x21
0000000000014edc	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
0000000000014ee0	ldr	x0, [x22, #0x10]
0000000000014ee4	ldr	w8, [x22, #0x18]
0000000000014ee8	add	w1, w8, w21
0000000000014eec	ldr	x8, [x0]
0000000000014ef0	and	x8, x8, #0xfffffffffffffffc
0000000000014ef4	ldr	x8, [x8]
0000000000014ef8	ldr	x8, [x8, #0x138]
0000000000014efc	mov	x2, x20
0000000000014f00	mov	x3, x19
0000000000014f04	blr	x8
0000000000014f08	str	x0, [x19]
0000000000014f0c	ldp	x29, x30, [sp, #0x20]
0000000000014f10	ldp	x20, x19, [sp, #0x10]
0000000000014f14	ldp	x22, x21, [sp], #0x30
0000000000014f18	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.<get-size>#internal:
0000000000014f1c	stp	x20, x19, [sp, #-0x20]!
0000000000014f20	stp	x29, x30, [sp, #0x10]
0000000000014f24	add	x29, sp, #0x10
0000000000014f28	mov	x19, x0
0000000000014f2c	adr	x8, #0x7f35d
0000000000014f30	nop
0000000000014f34	ldarb	w8, [x8]
0000000000014f38	tbz	w8, #0x0, 0x14f40
0000000000014f3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014f40	ldr	w0, [x19, #0x1c]
0000000000014f44	ldp	x29, x30, [sp, #0x10]
0000000000014f48	ldp	x20, x19, [sp], #0x20
0000000000014f4c	ret
_kfun:kotlin.collections.AbstractMutableList.$removeAll$lambda$0$FUNCTION_REFERENCE$15.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
0000000000014f50	stp	x22, x21, [sp, #-0x30]!
0000000000014f54	stp	x20, x19, [sp, #0x10]
0000000000014f58	stp	x29, x30, [sp, #0x20]
0000000000014f5c	add	x29, sp, #0x20
0000000000014f60	mov	x19, x2
0000000000014f64	mov	x20, x1
0000000000014f68	mov	x21, x0
0000000000014f6c	adr	x8, #0x7f31d
0000000000014f70	nop
0000000000014f74	ldarb	w8, [x8]
0000000000014f78	tbz	w8, #0x0, 0x14f80
0000000000014f7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014f80	ldr	x0, [x21, #0x8]
0000000000014f84	ldr	x8, [x0]
0000000000014f88	and	x8, x8, #0xfffffffffffffffc
0000000000014f8c	ldr	x8, [x8]
0000000000014f90	ldr	w9, [x8, #0x3c]
0000000000014f94	ldr	x8, [x8, #0x40]
0000000000014f98	tbnz	w9, #0x1f, 0x14fa8
0000000000014f9c	mov	w10, #0x12
0000000000014fa0	and	x9, x9, x10
0000000000014fa4	b	0x1502c
0000000000014fa8	neg	w10, w9
0000000000014fac	mvn	w9, w9
0000000000014fb0	cmp	w10, #0x9
0000000000014fb4	b.ge	0x14fec
0000000000014fb8	cmp	w10, #0x2
0000000000014fbc	b.lt	0x15020
0000000000014fc0	mov	x10, #0x0
0000000000014fc4	mov	x11, x8
0000000000014fc8	ldr	w12, [x11]
0000000000014fcc	cmp	w12, #0x11
0000000000014fd0	b.gt	0x15028
0000000000014fd4	add	x10, x10, #0x1
0000000000014fd8	add	x11, x11, #0x10
0000000000014fdc	cmp	x9, x10
0000000000014fe0	b.ne	0x14fc8
0000000000014fe4	mov	x10, x9
0000000000014fe8	b	0x15028
0000000000014fec	mov	w10, #0x0
0000000000014ff0	add	w11, w9, w10
0000000000014ff4	cmp	w11, #0x0
0000000000014ff8	cinc	w11, w11, lt
0000000000014ffc	asr	w11, w11, #1
0000000000015000	sbfiz	x12, x11, #4, #32
0000000000015004	ldr	w12, [x8, x12]
0000000000015008	cmp	w12, #0x12
000000000001500c	csinc	w10, w10, w11, ge
0000000000015010	csel	w9, w9, w11, lt
0000000000015014	cmp	w10, w9
0000000000015018	b.lt	0x14ff0
000000000001501c	b	0x15028
0000000000015020	mov	w10, #0x0
0000000000015024	b	0x15028
0000000000015028	sxtw	x9, w10
000000000001502c	add	x8, x8, x9, lsl #4
0000000000015030	ldr	x8, [x8, #0x8]
0000000000015034	ldr	x8, [x8, #0x8]
0000000000015038	mov	x1, x20
000000000001503c	blr	x8
0000000000015040	mov	x1, x19
0000000000015044	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
0000000000015048	str	x0, [x19]
000000000001504c	ldp	x29, x30, [sp, #0x20]
0000000000015050	ldp	x20, x19, [sp, #0x10]
0000000000015054	ldp	x22, x21, [sp], #0x30
0000000000015058	ret
_kfun:kotlin.collections.AbstractMutableList.$retainAll$lambda$1$FUNCTION_REFERENCE$16.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
000000000001505c	stp	x22, x21, [sp, #-0x30]!
0000000000015060	stp	x20, x19, [sp, #0x10]
0000000000015064	stp	x29, x30, [sp, #0x20]
0000000000015068	add	x29, sp, #0x20
000000000001506c	mov	x19, x2
0000000000015070	mov	x20, x1
0000000000015074	mov	x21, x0
0000000000015078	adr	x8, #0x7f211
000000000001507c	nop
0000000000015080	ldarb	w8, [x8]
0000000000015084	tbz	w8, #0x0, 0x1508c
0000000000015088	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001508c	ldr	x0, [x21, #0x8]
0000000000015090	ldr	x8, [x0]
0000000000015094	and	x8, x8, #0xfffffffffffffffc
0000000000015098	ldr	x8, [x8]
000000000001509c	ldr	w9, [x8, #0x3c]
00000000000150a0	ldr	x8, [x8, #0x40]
00000000000150a4	tbnz	w9, #0x1f, 0x150b4
00000000000150a8	mov	w10, #0x12
00000000000150ac	and	x9, x9, x10
00000000000150b0	b	0x15138
00000000000150b4	neg	w10, w9
00000000000150b8	mvn	w9, w9
00000000000150bc	cmp	w10, #0x9
00000000000150c0	b.ge	0x150f8
00000000000150c4	cmp	w10, #0x2
00000000000150c8	b.lt	0x1512c
00000000000150cc	mov	x10, #0x0
00000000000150d0	mov	x11, x8
00000000000150d4	ldr	w12, [x11]
00000000000150d8	cmp	w12, #0x11
00000000000150dc	b.gt	0x15134
00000000000150e0	add	x10, x10, #0x1
00000000000150e4	add	x11, x11, #0x10
00000000000150e8	cmp	x9, x10
00000000000150ec	b.ne	0x150d4
00000000000150f0	mov	x10, x9
00000000000150f4	b	0x15134
00000000000150f8	mov	w10, #0x0
00000000000150fc	add	w11, w9, w10
0000000000015100	cmp	w11, #0x0
0000000000015104	cinc	w11, w11, lt
0000000000015108	asr	w11, w11, #1
000000000001510c	sbfiz	x12, x11, #4, #32
0000000000015110	ldr	w12, [x8, x12]
0000000000015114	cmp	w12, #0x12
0000000000015118	csinc	w10, w10, w11, ge
000000000001511c	csel	w9, w9, w11, lt
0000000000015120	cmp	w10, w9
0000000000015124	b.lt	0x150fc
0000000000015128	b	0x15134
000000000001512c	mov	w10, #0x0
0000000000015130	b	0x15134
0000000000015134	sxtw	x9, w10
0000000000015138	add	x8, x8, x9, lsl #4
000000000001513c	ldr	x8, [x8, #0x8]
0000000000015140	ldr	x8, [x8, #0x8]
0000000000015144	mov	x1, x20
0000000000015148	blr	x8
000000000001514c	eor	w0, w0, #0x1
0000000000015150	mov	x1, x19
0000000000015154	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
0000000000015158	str	x0, [x19]
000000000001515c	ldp	x29, x30, [sp, #0x20]
0000000000015160	ldp	x20, x19, [sp, #0x10]
0000000000015164	ldp	x22, x21, [sp], #0x30
0000000000015168	ret
_kfun:kotlin.collections.AbstractMutableSet#equals(kotlin.Any?){}kotlin.Boolean:
000000000001516c	stp	x20, x19, [sp, #-0x20]!
0000000000015170	stp	x29, x30, [sp, #0x10]
0000000000015174	add	x29, sp, #0x10
0000000000015178	mov	x19, x1
000000000001517c	mov	x20, x0
0000000000015180	adr	x8, #0x7f109
0000000000015184	nop
0000000000015188	ldarb	w8, [x8]
000000000001518c	tbz	w8, #0x0, 0x15194
0000000000015190	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015194	cmp	x19, x20
0000000000015198	b.eq	0x151d0
000000000001519c	cbz	x19, 0x15284
00000000000151a0	ldr	x8, [x19]
00000000000151a4	and	x8, x8, #0xfffffffffffffffc
00000000000151a8	ldr	x8, [x8]
00000000000151ac	ldr	w9, [x8, #0x3c]
00000000000151b0	ldr	x8, [x8, #0x40]
00000000000151b4	tbnz	w9, #0x1f, 0x151e0
00000000000151b8	and	x9, x9, #0x1e
00000000000151bc	lsl	x9, x9, #4
00000000000151c0	ldr	w8, [x8, x9]
00000000000151c4	cmp	w8, #0x1e
00000000000151c8	b.ne	0x15284
00000000000151cc	b	0x152a8
00000000000151d0	mov	w0, #0x1
00000000000151d4	ldp	x29, x30, [sp, #0x10]
00000000000151d8	ldp	x20, x19, [sp], #0x20
00000000000151dc	ret
00000000000151e0	neg	w10, w9
00000000000151e4	mvn	w9, w9
00000000000151e8	cmp	w10, #0x9
00000000000151ec	b.ge	0x15238
00000000000151f0	cmp	w10, #0x2
00000000000151f4	b.lt	0x1526c
00000000000151f8	mov	x10, #0x0
00000000000151fc	mov	x11, x8
0000000000015200	ldr	w12, [x11]
0000000000015204	cmp	w12, #0x1d
0000000000015208	b.gt	0x15294
000000000001520c	add	x10, x10, #0x1
0000000000015210	add	x11, x11, #0x10
0000000000015214	cmp	x9, x10
0000000000015218	b.ne	0x15200
000000000001521c	mov	x10, x9
0000000000015220	sxtw	x9, w10
0000000000015224	lsl	x9, x9, #4
0000000000015228	ldr	w8, [x8, x9]
000000000001522c	cmp	w8, #0x1e
0000000000015230	b.ne	0x15284
0000000000015234	b	0x152a8
0000000000015238	mov	w10, #0x0
000000000001523c	add	w11, w9, w10
0000000000015240	cmp	w11, #0x0
0000000000015244	cinc	w11, w11, lt
0000000000015248	asr	w11, w11, #1
000000000001524c	sbfiz	x12, x11, #4, #32
0000000000015250	ldr	w12, [x8, x12]
0000000000015254	cmp	w12, #0x1e
0000000000015258	csinc	w10, w10, w11, ge
000000000001525c	csel	w9, w9, w11, lt
0000000000015260	cmp	w10, w9
0000000000015264	b.lt	0x1523c
0000000000015268	b	0x15294
000000000001526c	mov	w10, #0x0
0000000000015270	sxtw	x9, w10
0000000000015274	lsl	x9, x9, #4
0000000000015278	ldr	w8, [x8, x9]
000000000001527c	cmp	w8, #0x1e
0000000000015280	b.eq	0x152a8
0000000000015284	mov	w0, #0x0
0000000000015288	ldp	x29, x30, [sp, #0x10]
000000000001528c	ldp	x20, x19, [sp], #0x20
0000000000015290	ret
0000000000015294	sxtw	x9, w10
0000000000015298	lsl	x9, x9, #4
000000000001529c	ldr	w8, [x8, x9]
00000000000152a0	cmp	w8, #0x1e
00000000000152a4	b.ne	0x15284
00000000000152a8	mov	x0, x20
00000000000152ac	mov	x1, x19
00000000000152b0	ldp	x29, x30, [sp, #0x10]
00000000000152b4	ldp	x20, x19, [sp], #0x20
00000000000152b8	b	"_kfun:kotlin.collections.AbstractSet.Companion#setEquals(kotlin.collections.Set<*>;kotlin.collections.Set<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractMutableSet#hashCode(){}kotlin.Int:
00000000000152bc	stp	x20, x19, [sp, #-0x20]!
00000000000152c0	stp	x29, x30, [sp, #0x10]
00000000000152c4	add	x29, sp, #0x10
00000000000152c8	mov	x19, x0
00000000000152cc	adr	x8, #0x7efbd
00000000000152d0	nop
00000000000152d4	ldarb	w8, [x8]
00000000000152d8	tbz	w8, #0x0, 0x152e0
00000000000152dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000152e0	mov	x0, x19
00000000000152e4	ldp	x29, x30, [sp, #0x10]
00000000000152e8	ldp	x20, x19, [sp], #0x20
00000000000152ec	b	"_kfun:kotlin.collections.AbstractSet.Companion#unorderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections#copyToArrayImpl(kotlin.collections.Collection<*>){}kotlin.Array<kotlin.Any?>:
00000000000152f0	sub	sp, sp, #0xa0
00000000000152f4	stp	x28, x27, [sp, #0x40]
00000000000152f8	stp	x26, x25, [sp, #0x50]
00000000000152fc	stp	x24, x23, [sp, #0x60]
0000000000015300	stp	x22, x21, [sp, #0x70]
0000000000015304	stp	x20, x19, [sp, #0x80]
0000000000015308	stp	x29, x30, [sp, #0x90]
000000000001530c	add	x29, sp, #0x90
0000000000015310	mov	x19, x1
0000000000015314	mov	x23, x0
0000000000015318	movi.16b	v0, #0x0
000000000001531c	stp	q0, q0, [sp]
0000000000015320	str	xzr, [sp, #0x30]
0000000000015324	str	q0, [sp, #0x20]
0000000000015328	mov	x21, sp
000000000001532c	adrp	x0, 101 ; 0x7a000
0000000000015330	add	x0, x0, #0x2c0
0000000000015334	ldr	x8, [x0]
0000000000015338	blr	x8
000000000001533c	ldr	x26, [x0]
0000000000015340	ldr	x8, [x26, #0x110]
0000000000015344	str	x21, [x26, #0x110]
0000000000015348	mov	x9, #0x700000000
000000000001534c	stp	x8, x9, [sp, #0x8]
0000000000015350	adr	x27, #0x7ef39
0000000000015354	nop
0000000000015358	ldarb	w8, [x27]
000000000001535c	tbz	w8, #0x0, 0x15364
0000000000015360	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015364	ldr	x8, [x23]
0000000000015368	and	x8, x8, #0xfffffffffffffffc
000000000001536c	ldr	x8, [x8]
0000000000015370	ldr	w9, [x8, #0x3c]
0000000000015374	ldr	x8, [x8, #0x40]
0000000000015378	tbnz	w9, #0x1f, 0x1540c
000000000001537c	mov	w10, #0x12
0000000000015380	and	x9, x9, x10
0000000000015384	add	x8, x8, x9, lsl #4
0000000000015388	ldr	x8, [x8, #0x8]
000000000001538c	ldr	x8, [x8]
0000000000015390	mov	x0, x23
0000000000015394	blr	x8
0000000000015398	tbnz	w0, #0x1f, 0x15528
000000000001539c	mov	x25, x0
00000000000153a0	add	x20, x21, #0x30
00000000000153a4	add	x24, x21, #0x28
00000000000153a8	ldr	x8, [x26, #0x118]
00000000000153ac	mov	w9, w0
00000000000153b0	lsl	x9, x9, #3
00000000000153b4	add	x9, x9, #0x1f
00000000000153b8	and	x1, x9, #0xffffffff8
00000000000153bc	add	x0, x8, #0x70
00000000000153c0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000153c4	mov	x22, x0
00000000000153c8	adr	x8, #0x4b7b8
00000000000153cc	nop
00000000000153d0	mov	x21, x0
00000000000153d4	str	x8, [x21, #0x10]!
00000000000153d8	str	xzr, [x0, #0x18]
00000000000153dc	str	xzr, [x0, #0x8]
00000000000153e0	str	w25, [x0, #0x18]
00000000000153e4	str	x21, [sp, #0x20]
00000000000153e8	ldr	x8, [x23]
00000000000153ec	and	x8, x8, #0xfffffffffffffffc
00000000000153f0	ldr	x8, [x8]
00000000000153f4	ldr	w9, [x8, #0x3c]
00000000000153f8	ldr	x8, [x8, #0x40]
00000000000153fc	tbnz	w9, #0x1f, 0x15450
0000000000015400	mov	w10, #0x12
0000000000015404	and	x9, x9, x10
0000000000015408	b	0x1556c
000000000001540c	neg	w10, w9
0000000000015410	mvn	w9, w9
0000000000015414	cmp	w10, #0x9
0000000000015418	b.ge	0x15494
000000000001541c	cmp	w10, #0x2
0000000000015420	b.lt	0x154fc
0000000000015424	mov	x10, #0x0
0000000000015428	mov	x11, x8
000000000001542c	ldr	w12, [x11]
0000000000015430	cmp	w12, #0x11
0000000000015434	b.gt	0x1550c
0000000000015438	add	x10, x10, #0x1
000000000001543c	add	x11, x11, #0x10
0000000000015440	cmp	x9, x10
0000000000015444	b.ne	0x1542c
0000000000015448	mov	x10, x9
000000000001544c	b	0x1550c
0000000000015450	neg	w10, w9
0000000000015454	mvn	w9, w9
0000000000015458	cmp	w10, #0x9
000000000001545c	b.ge	0x154c8
0000000000015460	cmp	w10, #0x2
0000000000015464	b.lt	0x15504
0000000000015468	mov	x10, #0x0
000000000001546c	mov	x11, x8
0000000000015470	ldr	w12, [x11]
0000000000015474	cmp	w12, #0x11
0000000000015478	b.gt	0x15568
000000000001547c	add	x10, x10, #0x1
0000000000015480	add	x11, x11, #0x10
0000000000015484	cmp	x9, x10
0000000000015488	b.ne	0x15470
000000000001548c	mov	x10, x9
0000000000015490	b	0x15568
0000000000015494	mov	w10, #0x0
0000000000015498	add	w11, w9, w10
000000000001549c	cmp	w11, #0x0
00000000000154a0	cinc	w11, w11, lt
00000000000154a4	asr	w11, w11, #1
00000000000154a8	sbfiz	x12, x11, #4, #32
00000000000154ac	ldr	w12, [x8, x12]
00000000000154b0	cmp	w12, #0x12
00000000000154b4	csinc	w10, w10, w11, ge
00000000000154b8	csel	w9, w9, w11, lt
00000000000154bc	cmp	w10, w9
00000000000154c0	b.lt	0x15498
00000000000154c4	b	0x1550c
00000000000154c8	mov	w10, #0x0
00000000000154cc	add	w11, w9, w10
00000000000154d0	cmp	w11, #0x0
00000000000154d4	cinc	w11, w11, lt
00000000000154d8	asr	w11, w11, #1
00000000000154dc	sbfiz	x12, x11, #4, #32
00000000000154e0	ldr	w12, [x8, x12]
00000000000154e4	cmp	w12, #0x12
00000000000154e8	csinc	w10, w10, w11, ge
00000000000154ec	csel	w9, w9, w11, lt
00000000000154f0	cmp	w10, w9
00000000000154f4	b.lt	0x154cc
00000000000154f8	b	0x15568
00000000000154fc	mov	w10, #0x0
0000000000015500	b	0x1550c
0000000000015504	mov	w10, #0x0
0000000000015508	b	0x15568
000000000001550c	sxtw	x9, w10
0000000000015510	add	x8, x8, x9, lsl #4
0000000000015514	ldr	x8, [x8, #0x8]
0000000000015518	ldr	x8, [x8]
000000000001551c	mov	x0, x23
0000000000015520	blr	x8
0000000000015524	tbz	w0, #0x1f, 0x1539c
0000000000015528	ldr	x8, [x26, #0x118]
000000000001552c	add	x0, x8, #0x70
0000000000015530	mov	w1, #0x38
0000000000015534	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015538	mov	x19, x0
000000000001553c	adr	x8, #0x4bea4
0000000000015540	nop
0000000000015544	str	x8, [x19, #0x10]!
0000000000015548	stur	xzr, [x19, #-0x8]
000000000001554c	str	x19, [sp, #0x18]
0000000000015550	adr	x1, #0x58af0
0000000000015554	nop
0000000000015558	mov	x0, x19
000000000001555c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000015560	mov	x0, x19
0000000000015564	bl	_ThrowException
0000000000015568	sxtw	x9, w10
000000000001556c	add	x8, x8, x9, lsl #4
0000000000015570	ldr	x8, [x8, #0x8]
0000000000015574	ldr	x8, [x8, #0x20]
0000000000015578	mov	x0, x23
000000000001557c	mov	x1, x24
0000000000015580	blr	x8
0000000000015584	mov	x23, x0
0000000000015588	mov	w24, #0x0
000000000001558c	add	x25, x22, #0x20
0000000000015590	mov	w28, #0xa0
0000000000015594	ldr	x8, [x23]
0000000000015598	and	x8, x8, #0xfffffffffffffffc
000000000001559c	ldr	x8, [x8]
00000000000155a0	ldr	w9, [x8, #0x3c]
00000000000155a4	ldr	x8, [x8, #0x40]
00000000000155a8	tbz	w9, #0x1f, 0x15748
00000000000155ac	b	0x156a8
00000000000155b0	ldarb	w8, [x27]
00000000000155b4	tbz	w8, #0x0, 0x155bc
00000000000155b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000155bc	ldr	x8, [x23]
00000000000155c0	and	x8, x8, #0xfffffffffffffffc
00000000000155c4	ldr	x8, [x8]
00000000000155c8	ldr	w9, [x8, #0x3c]
00000000000155cc	ldr	x8, [x8, #0x40]
00000000000155d0	tbnz	w9, #0x1f, 0x155dc
00000000000155d4	and	x9, x9, x28
00000000000155d8	b	0x15660
00000000000155dc	neg	w10, w9
00000000000155e0	mvn	w9, w9
00000000000155e4	cmp	w10, #0x9
00000000000155e8	b.ge	0x15620
00000000000155ec	cmp	w10, #0x2
00000000000155f0	b.lt	0x15654
00000000000155f4	mov	x10, #0x0
00000000000155f8	mov	x11, x8
00000000000155fc	ldr	w12, [x11]
0000000000015600	cmp	w12, #0x9f
0000000000015604	b.gt	0x1565c
0000000000015608	add	x10, x10, #0x1
000000000001560c	add	x11, x11, #0x10
0000000000015610	cmp	x9, x10
0000000000015614	b.ne	0x155fc
0000000000015618	mov	x10, x9
000000000001561c	b	0x1565c
0000000000015620	mov	w10, #0x0
0000000000015624	add	w11, w9, w10
0000000000015628	cmp	w11, #0x0
000000000001562c	cinc	w11, w11, lt
0000000000015630	asr	w11, w11, #1
0000000000015634	sbfiz	x12, x11, #4, #32
0000000000015638	ldr	w12, [x8, x12]
000000000001563c	cmp	w12, #0xa0
0000000000015640	csinc	w10, w10, w11, ge
0000000000015644	csel	w9, w9, w11, lt
0000000000015648	cmp	w10, w9
000000000001564c	b.lt	0x15624
0000000000015650	b	0x1565c
0000000000015654	mov	w10, #0x0
0000000000015658	b	0x1565c
000000000001565c	sxtw	x9, w10
0000000000015660	add	x8, x8, x9, lsl #4
0000000000015664	ldr	x8, [x8, #0x8]
0000000000015668	ldr	x8, [x8, #0x8]
000000000001566c	mov	x0, x23
0000000000015670	mov	x1, x20
0000000000015674	blr	x8
0000000000015678	ldr	w8, [x22, #0x18]
000000000001567c	cmp	w8, w24
0000000000015680	b.ls	0x15794
0000000000015684	ldr	xzr, [x21]
0000000000015688	str	x0, [x25, w24, sxtw #3]
000000000001568c	add	w24, w24, #0x1
0000000000015690	ldr	x8, [x23]
0000000000015694	and	x8, x8, #0xfffffffffffffffc
0000000000015698	ldr	x8, [x8]
000000000001569c	ldr	w9, [x8, #0x3c]
00000000000156a0	ldr	x8, [x8, #0x40]
00000000000156a4	tbz	w9, #0x1f, 0x15748
00000000000156a8	neg	w10, w9
00000000000156ac	mvn	w9, w9
00000000000156b0	cmp	w10, #0x9
00000000000156b4	b.ge	0x156ec
00000000000156b8	cmp	w10, #0x2
00000000000156bc	b.lt	0x15720
00000000000156c0	mov	x10, #0x0
00000000000156c4	mov	x11, x8
00000000000156c8	ldr	w12, [x11]
00000000000156cc	cmp	w12, #0x9f
00000000000156d0	b.gt	0x15728
00000000000156d4	add	x10, x10, #0x1
00000000000156d8	add	x11, x11, #0x10
00000000000156dc	cmp	x9, x10
00000000000156e0	b.ne	0x156c8
00000000000156e4	mov	x10, x9
00000000000156e8	b	0x15728
00000000000156ec	mov	w10, #0x0
00000000000156f0	add	w11, w9, w10
00000000000156f4	cmp	w11, #0x0
00000000000156f8	cinc	w11, w11, lt
00000000000156fc	asr	w11, w11, #1
0000000000015700	sbfiz	x12, x11, #4, #32
0000000000015704	ldr	w12, [x8, x12]
0000000000015708	cmp	w12, #0xa0
000000000001570c	csinc	w10, w10, w11, ge
0000000000015710	csel	w9, w9, w11, lt
0000000000015714	cmp	w10, w9
0000000000015718	b.lt	0x156f0
000000000001571c	b	0x15728
0000000000015720	mov	w10, #0x0
0000000000015724	b	0x15728
0000000000015728	sxtw	x9, w10
000000000001572c	add	x8, x8, x9, lsl #4
0000000000015730	ldr	x8, [x8, #0x8]
0000000000015734	ldr	x8, [x8]
0000000000015738	mov	x0, x23
000000000001573c	blr	x8
0000000000015740	tbnz	w0, #0x0, 0x155b0
0000000000015744	b	0x15764
0000000000015748	and	x9, x9, x28
000000000001574c	add	x8, x8, x9, lsl #4
0000000000015750	ldr	x8, [x8, #0x8]
0000000000015754	ldr	x8, [x8]
0000000000015758	mov	x0, x23
000000000001575c	blr	x8
0000000000015760	tbnz	w0, #0x0, 0x155b0
0000000000015764	str	x21, [x19]
0000000000015768	ldr	x8, [sp, #0x8]
000000000001576c	str	x8, [x26, #0x110]
0000000000015770	mov	x0, x21
0000000000015774	ldp	x29, x30, [sp, #0x90]
0000000000015778	ldp	x20, x19, [sp, #0x80]
000000000001577c	ldp	x22, x21, [sp, #0x70]
0000000000015780	ldp	x24, x23, [sp, #0x60]
0000000000015784	ldp	x26, x25, [sp, #0x50]
0000000000015788	ldp	x28, x27, [sp, #0x40]
000000000001578c	add	sp, sp, #0xa0
0000000000015790	ret
0000000000015794	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections#checkCopyOfRangeArguments(kotlin.Int;kotlin.Int;kotlin.Int){}:
0000000000015798	sub	sp, sp, #0x130
000000000001579c	stp	x28, x27, [sp, #0xd0]
00000000000157a0	stp	x26, x25, [sp, #0xe0]
00000000000157a4	stp	x24, x23, [sp, #0xf0]
00000000000157a8	stp	x22, x21, [sp, #0x100]
00000000000157ac	stp	x20, x19, [sp, #0x110]
00000000000157b0	stp	x29, x30, [sp, #0x120]
00000000000157b4	add	x29, sp, #0x120
00000000000157b8	mov	x20, x2
00000000000157bc	mov	x19, x1
00000000000157c0	mov	x21, x0
00000000000157c4	str	xzr, [sp, #0xc0]
00000000000157c8	movi.16b	v0, #0x0
00000000000157cc	stp	q0, q0, [sp, #0xa0]
00000000000157d0	stp	q0, q0, [sp, #0x80]
00000000000157d4	stp	q0, q0, [sp, #0x60]
00000000000157d8	stp	q0, q0, [sp, #0x40]
00000000000157dc	str	q0, [sp, #0x30]
00000000000157e0	stp	xzr, xzr, [sp, #0x20]
00000000000157e4	adr	x8, #0x4f3ac
00000000000157e8	nop
00000000000157ec	orr	x8, x8, #0x3
00000000000157f0	stp	xzr, x8, [sp, #0x10]
00000000000157f4	stp	x8, xzr, [sp]
00000000000157f8	adrp	x0, 101 ; 0x7a000
00000000000157fc	add	x0, x0, #0x2c0
0000000000015800	ldr	x8, [x0]
0000000000015804	blr	x8
0000000000015808	ldr	x22, [x0]
000000000001580c	ldr	x8, [x22, #0x110]
0000000000015810	add	x9, sp, #0x30
0000000000015814	str	x9, [x22, #0x110]
0000000000015818	mov	x9, #0x1300000000
000000000001581c	stp	x8, x9, [sp, #0x38]
0000000000015820	adr	x8, #0x7ea69
0000000000015824	nop
0000000000015828	ldarb	w8, [x8]
000000000001582c	tbz	w8, #0x0, 0x15834
0000000000015830	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015834	cmp	w19, w20
0000000000015838	b.gt	0x1586c
000000000001583c	cmp	w21, w19
0000000000015840	b.gt	0x15938
0000000000015844	ldr	x8, [sp, #0x38]
0000000000015848	str	x8, [x22, #0x110]
000000000001584c	ldp	x29, x30, [sp, #0x120]
0000000000015850	ldp	x20, x19, [sp, #0x110]
0000000000015854	ldp	x22, x21, [sp, #0x100]
0000000000015858	ldp	x24, x23, [sp, #0xf0]
000000000001585c	ldp	x26, x25, [sp, #0xe0]
0000000000015860	ldp	x28, x27, [sp, #0xd0]
0000000000015864	add	sp, sp, #0x130
0000000000015868	ret
000000000001586c	add	x8, sp, #0x30
0000000000015870	add	x21, x8, #0x48
0000000000015874	mov	x27, x22
0000000000015878	add	x22, x8, #0x40
000000000001587c	add	x23, x8, #0x38
0000000000015880	add	x24, x8, #0x30
0000000000015884	add	x25, x8, #0x28
0000000000015888	add	x26, x8, #0x20
000000000001588c	add	x8, sp, #0x18
0000000000015890	str	x8, [sp, #0x48]
0000000000015894	add	x0, sp, #0x18
0000000000015898	mov	w1, #0xa
000000000001589c	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000158a0	adr	x1, #0x591e0
00000000000158a4	nop
00000000000158a8	add	x0, sp, #0x18
00000000000158ac	mov	x2, x26
00000000000158b0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000158b4	add	x0, sp, #0x18
00000000000158b8	mov	x1, x19
00000000000158bc	mov	x2, x25
00000000000158c0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000158c4	adr	x1, #0x591ec
00000000000158c8	nop
00000000000158cc	add	x0, sp, #0x18
00000000000158d0	mov	x2, x24
00000000000158d4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000158d8	add	x0, sp, #0x18
00000000000158dc	mov	x1, x20
00000000000158e0	mov	x2, x23
00000000000158e4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000158e8	adr	x1, #0x59208
00000000000158ec	nop
00000000000158f0	add	x0, sp, #0x18
00000000000158f4	mov	x2, x22
00000000000158f8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000158fc	add	x0, sp, #0x18
0000000000015900	mov	x1, x21
0000000000015904	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000015908	mov	x19, x0
000000000001590c	ldr	x8, [x27, #0x118]
0000000000015910	add	x0, x8, #0x70
0000000000015914	mov	w1, #0x38
0000000000015918	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001591c	mov	x20, x0
0000000000015920	adr	x8, #0x4ba20
0000000000015924	nop
0000000000015928	str	x8, [x20, #0x10]!
000000000001592c	stur	xzr, [x20, #-0x8]
0000000000015930	str	x20, [sp, #0x80]
0000000000015934	b	0x15a00
0000000000015938	add	x8, sp, #0x30
000000000001593c	add	x20, x8, #0x88
0000000000015940	mov	x27, x22
0000000000015944	add	x22, x8, #0x80
0000000000015948	add	x23, x8, #0x78
000000000001594c	add	x24, x8, #0x70
0000000000015950	add	x25, x8, #0x68
0000000000015954	add	x26, x8, #0x60
0000000000015958	mov	x8, sp
000000000001595c	str	x8, [sp, #0x88]
0000000000015960	mov	x0, sp
0000000000015964	mov	w1, #0xa
0000000000015968	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000001596c	adr	x1, #0x591a4
0000000000015970	nop
0000000000015974	mov	x0, sp
0000000000015978	mov	x2, x26
000000000001597c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000015980	mov	x0, sp
0000000000015984	mov	x1, x21
0000000000015988	mov	x2, x25
000000000001598c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000015990	adr	x1, #0x591b0
0000000000015994	nop
0000000000015998	mov	x0, sp
000000000001599c	mov	x2, x24
00000000000159a0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000159a4	mov	x0, sp
00000000000159a8	mov	x1, x19
00000000000159ac	mov	x2, x23
00000000000159b0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000159b4	adr	x1, #0x5913c
00000000000159b8	nop
00000000000159bc	mov	x0, sp
00000000000159c0	mov	x2, x22
00000000000159c4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000159c8	mov	x0, sp
00000000000159cc	mov	x1, x20
00000000000159d0	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
00000000000159d4	mov	x19, x0
00000000000159d8	ldr	x8, [x27, #0x118]
00000000000159dc	add	x0, x8, #0x70
00000000000159e0	mov	w1, #0x38
00000000000159e4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000159e8	mov	x20, x0
00000000000159ec	adr	x8, #0x4b9f4
00000000000159f0	nop
00000000000159f4	str	x8, [x20, #0x10]!
00000000000159f8	stur	xzr, [x20, #-0x8]
00000000000159fc	str	x20, [sp, #0xc0]
0000000000015a00	mov	x0, x20
0000000000015a04	mov	x1, x19
0000000000015a08	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000015a0c	mov	x0, x20
0000000000015a10	bl	_ThrowException
_kfun:kotlin.collections#copyOfNulls__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0?>:
0000000000015a14	sub	sp, sp, #0xc0
0000000000015a18	stp	x24, x23, [sp, #0x80]
0000000000015a1c	stp	x22, x21, [sp, #0x90]
0000000000015a20	stp	x20, x19, [sp, #0xa0]
0000000000015a24	stp	x29, x30, [sp, #0xb0]
0000000000015a28	add	x29, sp, #0xb0
0000000000015a2c	mov	x20, x2
0000000000015a30	mov	x19, x1
0000000000015a34	mov	x21, x0
0000000000015a38	movi.16b	v0, #0x0
0000000000015a3c	stp	q0, q0, [sp, #0x20]
0000000000015a40	stp	q0, q0, [sp, #0x60]
0000000000015a44	stp	q0, q0, [sp, #0x40]
0000000000015a48	stp	xzr, xzr, [sp, #0x10]
0000000000015a4c	adr	x8, #0x4f144
0000000000015a50	nop
0000000000015a54	orr	x8, x8, #0x3
0000000000015a58	str	x8, [sp, #0x8]
0000000000015a5c	adrp	x0, 101 ; 0x7a000
0000000000015a60	add	x0, x0, #0x2c0
0000000000015a64	ldr	x8, [x0]
0000000000015a68	blr	x8
0000000000015a6c	ldr	x23, [x0]
0000000000015a70	ldr	x8, [x23, #0x110]
0000000000015a74	add	x9, sp, #0x20
0000000000015a78	str	x9, [x23, #0x110]
0000000000015a7c	mov	x9, #0xc00000000
0000000000015a80	stp	x8, x9, [sp, #0x28]
0000000000015a84	adr	x8, #0x7e805
0000000000015a88	nop
0000000000015a8c	ldarb	w8, [x8]
0000000000015a90	tbz	w8, #0x0, 0x15a98
0000000000015a94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015a98	tbnz	w19, #0x1f, 0x15b1c
0000000000015a9c	ldr	x8, [x23, #0x118]
0000000000015aa0	mov	w9, w19
0000000000015aa4	lsl	x9, x9, #3
0000000000015aa8	add	x9, x9, #0x1f
0000000000015aac	and	x1, x9, #0xffffffff8
0000000000015ab0	add	x0, x8, #0x70
0000000000015ab4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015ab8	mov	x22, x0
0000000000015abc	stp	xzr, xzr, [x22, #0x10]!
0000000000015ac0	adr	x8, #0x4b0c0
0000000000015ac4	nop
0000000000015ac8	stp	xzr, x8, [x22, #-0x8]
0000000000015acc	str	w19, [x22, #0x8]
0000000000015ad0	str	x22, [sp, #0x70]
0000000000015ad4	ldr	w8, [x21, #0x8]
0000000000015ad8	cmp	w8, w19
0000000000015adc	csel	w2, w8, w19, lt
0000000000015ae0	add	x8, sp, #0x20
0000000000015ae4	add	x3, x8, #0x58
0000000000015ae8	mov	x0, x21
0000000000015aec	mov	x1, x22
0000000000015af0	bl	"_kfun:kotlin.collections#copyInto__at__kotlin.Array<out|0:0>(kotlin.Array<0:0>;kotlin.Int;kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0>"
0000000000015af4	str	x22, [x20]
0000000000015af8	ldr	x8, [sp, #0x28]
0000000000015afc	str	x8, [x23, #0x110]
0000000000015b00	mov	x0, x22
0000000000015b04	ldp	x29, x30, [sp, #0xb0]
0000000000015b08	ldp	x20, x19, [sp, #0xa0]
0000000000015b0c	ldp	x22, x21, [sp, #0x90]
0000000000015b10	ldp	x24, x23, [sp, #0x80]
0000000000015b14	add	sp, sp, #0xc0
0000000000015b18	ret
0000000000015b1c	add	x8, sp, #0x20
0000000000015b20	add	x20, x8, #0x38
0000000000015b24	add	x21, x8, #0x30
0000000000015b28	add	x22, x8, #0x28
0000000000015b2c	mov	x24, x23
0000000000015b30	add	x23, x8, #0x20
0000000000015b34	add	x8, sp, #0x8
0000000000015b38	str	x8, [sp, #0x38]
0000000000015b3c	add	x0, sp, #0x8
0000000000015b40	mov	w1, #0xa
0000000000015b44	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000015b48	add	x0, sp, #0x8
0000000000015b4c	mov	w1, #0x0
0000000000015b50	mov	x2, x23
0000000000015b54	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000015b58	adr	x1, #0x584c8
0000000000015b5c	nop
0000000000015b60	add	x0, sp, #0x8
0000000000015b64	mov	x2, x22
0000000000015b68	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000015b6c	add	x0, sp, #0x8
0000000000015b70	mov	x1, x19
0000000000015b74	mov	x2, x21
0000000000015b78	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000015b7c	add	x0, sp, #0x8
0000000000015b80	mov	x1, x20
0000000000015b84	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000015b88	mov	x19, x0
0000000000015b8c	ldr	x8, [x24, #0x118]
0000000000015b90	add	x0, x8, #0x70
0000000000015b94	mov	w1, #0x38
0000000000015b98	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015b9c	mov	x20, x0
0000000000015ba0	adr	x8, #0x4b840
0000000000015ba4	nop
0000000000015ba8	str	x8, [x20, #0x10]!
0000000000015bac	stur	xzr, [x20, #-0x8]
0000000000015bb0	str	x20, [sp, #0x60]
0000000000015bb4	mov	x0, x20
0000000000015bb8	mov	x1, x19
0000000000015bbc	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000015bc0	mov	x0, x20
0000000000015bc4	bl	_ThrowException
_kfun:kotlin.collections.HashMap#<get-size>(){}kotlin.Int:
0000000000015bc8	stp	x20, x19, [sp, #-0x20]!
0000000000015bcc	stp	x29, x30, [sp, #0x10]
0000000000015bd0	add	x29, sp, #0x10
0000000000015bd4	mov	x19, x0
0000000000015bd8	adr	x8, #0x7e6b1
0000000000015bdc	nop
0000000000015be0	ldarb	w8, [x8]
0000000000015be4	tbz	w8, #0x0, 0x15bec
0000000000015be8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015bec	ldr	w0, [x19, #0x4c]
0000000000015bf0	ldp	x29, x30, [sp, #0x10]
0000000000015bf4	ldp	x20, x19, [sp], #0x20
0000000000015bf8	ret
_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}:
0000000000015bfc	sub	sp, sp, #0xa0
0000000000015c00	stp	x24, x23, [sp, #0x60]
0000000000015c04	stp	x22, x21, [sp, #0x70]
0000000000015c08	stp	x20, x19, [sp, #0x80]
0000000000015c0c	stp	x29, x30, [sp, #0x90]
0000000000015c10	add	x29, sp, #0x90
0000000000015c14	mov	x20, x1
0000000000015c18	mov	x19, x0
0000000000015c1c	movi.16b	v0, #0x0
0000000000015c20	stp	q0, q0, [sp]
0000000000015c24	str	xzr, [sp, #0x30]
0000000000015c28	str	q0, [sp, #0x20]
0000000000015c2c	adrp	x0, 101 ; 0x7a000
0000000000015c30	add	x0, x0, #0x2c0
0000000000015c34	ldr	x8, [x0]
0000000000015c38	blr	x8
0000000000015c3c	ldr	x23, [x0]
0000000000015c40	ldr	x8, [x23, #0x110]
0000000000015c44	mov	x9, sp
0000000000015c48	str	x9, [x23, #0x110]
0000000000015c4c	mov	x9, #0x700000000
0000000000015c50	stp	x8, x9, [sp, #0x8]
0000000000015c54	adr	x8, #0x7e635
0000000000015c58	nop
0000000000015c5c	ldarb	w8, [x8]
0000000000015c60	tbz	w8, #0x0, 0x15c68
0000000000015c64	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015c68	tbnz	w20, #0x1f, 0x15d78
0000000000015c6c	ldr	x8, [x23, #0x118]
0000000000015c70	mov	w22, w20
0000000000015c74	lsl	x9, x22, #3
0000000000015c78	add	x9, x9, #0x1f
0000000000015c7c	and	x1, x9, #0xffffffff8
0000000000015c80	add	x0, x8, #0x70
0000000000015c84	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015c88	mov	x21, x0
0000000000015c8c	adr	x8, #0x4aef4
0000000000015c90	nop
0000000000015c94	stp	x8, xzr, [x21, #0x10]!
0000000000015c98	stur	xzr, [x21, #-0x8]
0000000000015c9c	str	w20, [x21, #0x8]
0000000000015ca0	str	x21, [sp, #0x20]
0000000000015ca4	ldr	x8, [x23, #0x118]
0000000000015ca8	lsl	x9, x22, #2
0000000000015cac	add	x9, x9, #0x1f
0000000000015cb0	and	x1, x9, #0x7fffffff8
0000000000015cb4	add	x0, x8, #0x70
0000000000015cb8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015cbc	mov	x22, x0
0000000000015cc0	adr	x24, #0x4b100
0000000000015cc4	nop
0000000000015cc8	stp	x24, xzr, [x22, #0x10]!
0000000000015ccc	stur	xzr, [x22, #-0x8]
0000000000015cd0	str	w20, [x22, #0x8]
0000000000015cd4	str	x22, [sp, #0x28]
0000000000015cd8	mov	x0, x20
0000000000015cdc	bl	"_kfun:kotlin.collections.HashMap.Companion.computeHashSize#internal"
0000000000015ce0	tbnz	w0, #0x1f, 0x15db8
0000000000015ce4	mov	x20, x0
0000000000015ce8	ldr	x8, [x23, #0x118]
0000000000015cec	mov	w9, w0
0000000000015cf0	lsl	x9, x9, #2
0000000000015cf4	add	x9, x9, #0x1f
0000000000015cf8	and	x1, x9, #0x7fffffff8
0000000000015cfc	add	x0, x8, #0x70
0000000000015d00	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015d04	stp	x24, xzr, [x0, #0x10]!
0000000000015d08	stur	xzr, [x0, #-0x8]
0000000000015d0c	str	w20, [x0, #0x8]
0000000000015d10	str	x0, [sp, #0x30]
0000000000015d14	stp	x21, xzr, [x19, #0x8]
0000000000015d18	stp	x22, x0, [x19, #0x18]
0000000000015d1c	mov	w8, #0x2
0000000000015d20	str	x8, [x19, #0x40]
0000000000015d24	movi.16b	v0, #0x0
0000000000015d28	stp	q0, q0, [sp, #0x40]
0000000000015d2c	ldr	x8, [x23, #0x110]
0000000000015d30	add	x9, sp, #0x40
0000000000015d34	str	x9, [x23, #0x110]
0000000000015d38	ldr	x9, [x19, #0x20]
0000000000015d3c	ldr	w9, [x9, #0x8]
0000000000015d40	str	x8, [x23, #0x110]
0000000000015d44	clz	w8, w9
0000000000015d48	cmp	w9, #0x0
0000000000015d4c	mov	w9, #0x21
0000000000015d50	csinc	w8, w9, w8, eq
0000000000015d54	str	w8, [x19, #0x48]
0000000000015d58	ldr	x8, [sp, #0x8]
0000000000015d5c	str	x8, [x23, #0x110]
0000000000015d60	ldp	x29, x30, [sp, #0x90]
0000000000015d64	ldp	x20, x19, [sp, #0x80]
0000000000015d68	ldp	x22, x21, [sp, #0x70]
0000000000015d6c	ldp	x24, x23, [sp, #0x60]
0000000000015d70	add	sp, sp, #0xa0
0000000000015d74	ret
0000000000015d78	ldr	x8, [x23, #0x118]
0000000000015d7c	add	x0, x8, #0x70
0000000000015d80	mov	w1, #0x38
0000000000015d84	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015d88	mov	x19, x0
0000000000015d8c	adr	x8, #0x4b654
0000000000015d90	nop
0000000000015d94	str	x8, [x19, #0x10]!
0000000000015d98	stur	xzr, [x19, #-0x8]
0000000000015d9c	str	x19, [sp, #0x18]
0000000000015da0	adr	x1, #0x582a0
0000000000015da4	nop
0000000000015da8	mov	x0, x19
0000000000015dac	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000015db0	mov	x0, x19
0000000000015db4	bl	_ThrowException
0000000000015db8	bl	_ThrowIllegalArgumentException
_kfun:kotlin.collections.HashMap#isEmpty(){}kotlin.Boolean:
0000000000015dbc	stp	x20, x19, [sp, #-0x20]!
0000000000015dc0	stp	x29, x30, [sp, #0x10]
0000000000015dc4	add	x29, sp, #0x10
0000000000015dc8	mov	x19, x0
0000000000015dcc	adr	x8, #0x7e4bd
0000000000015dd0	nop
0000000000015dd4	ldarb	w8, [x8]
0000000000015dd8	tbz	w8, #0x0, 0x15de0
0000000000015ddc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015de0	ldr	w8, [x19, #0x4c]
0000000000015de4	cmp	w8, #0x0
0000000000015de8	cset	w0, eq
0000000000015dec	ldp	x29, x30, [sp, #0x10]
0000000000015df0	ldp	x20, x19, [sp], #0x20
0000000000015df4	ret
_kfun:kotlin.collections.HashMap#containsKey(1:0){}kotlin.Boolean:
0000000000015df8	stp	x20, x19, [sp, #-0x20]!
0000000000015dfc	stp	x29, x30, [sp, #0x10]
0000000000015e00	add	x29, sp, #0x10
0000000000015e04	mov	x19, x1
0000000000015e08	mov	x20, x0
0000000000015e0c	adr	x8, #0x7e47d
0000000000015e10	nop
0000000000015e14	ldarb	w8, [x8]
0000000000015e18	tbz	w8, #0x0, 0x15e20
0000000000015e1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015e20	mov	x0, x20
0000000000015e24	mov	x1, x19
0000000000015e28	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
0000000000015e2c	mvn	w8, w0
0000000000015e30	lsr	w0, w8, #31
0000000000015e34	ldp	x29, x30, [sp, #0x10]
0000000000015e38	ldp	x20, x19, [sp], #0x20
0000000000015e3c	ret
_kfun:kotlin.collections.HashMap#containsValue(1:1){}kotlin.Boolean:
0000000000015e40	stp	x20, x19, [sp, #-0x20]!
0000000000015e44	stp	x29, x30, [sp, #0x10]
0000000000015e48	add	x29, sp, #0x10
0000000000015e4c	mov	x19, x1
0000000000015e50	mov	x20, x0
0000000000015e54	adr	x8, #0x7e435
0000000000015e58	nop
0000000000015e5c	ldarb	w8, [x8]
0000000000015e60	tbz	w8, #0x0, 0x15e68
0000000000015e64	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015e68	mov	x0, x20
0000000000015e6c	mov	x1, x19
0000000000015e70	bl	"_kfun:kotlin.collections.HashMap.findValue#internal"
0000000000015e74	mvn	w8, w0
0000000000015e78	lsr	w0, w8, #31
0000000000015e7c	ldp	x29, x30, [sp, #0x10]
0000000000015e80	ldp	x20, x19, [sp], #0x20
0000000000015e84	ret
_kfun:kotlin.collections.HashMap#get(1:0){}1:1?:
0000000000015e88	sub	sp, sp, #0x50
0000000000015e8c	stp	x22, x21, [sp, #0x20]
0000000000015e90	stp	x20, x19, [sp, #0x30]
0000000000015e94	stp	x29, x30, [sp, #0x40]
0000000000015e98	add	x29, sp, #0x40
0000000000015e9c	mov	x19, x2
0000000000015ea0	mov	x21, x1
0000000000015ea4	mov	x20, x0
0000000000015ea8	movi.16b	v0, #0x0
0000000000015eac	stp	q0, q0, [sp]
0000000000015eb0	adrp	x0, 101 ; 0x7a000
0000000000015eb4	add	x0, x0, #0x2c0
0000000000015eb8	ldr	x8, [x0]
0000000000015ebc	blr	x8
0000000000015ec0	ldr	x22, [x0]
0000000000015ec4	ldr	x8, [x22, #0x110]
0000000000015ec8	mov	x9, sp
0000000000015ecc	str	x9, [x22, #0x110]
0000000000015ed0	mov	x9, #0x400000000
0000000000015ed4	stp	x8, x9, [sp, #0x8]
0000000000015ed8	adr	x8, #0x7e3b1
0000000000015edc	nop
0000000000015ee0	ldarb	w8, [x8]
0000000000015ee4	tbz	w8, #0x0, 0x15eec
0000000000015ee8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015eec	mov	x0, x20
0000000000015ef0	mov	x1, x21
0000000000015ef4	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
0000000000015ef8	tbnz	w0, #0x1f, 0x15f24
0000000000015efc	ldr	x8, [x20, #0x10]
0000000000015f00	str	x8, [sp, #0x18]
0000000000015f04	cbz	x8, 0x15f48
0000000000015f08	ldr	w9, [x8, #0x8]
0000000000015f0c	cmp	w9, w0
0000000000015f10	b.ls	0x15f4c
0000000000015f14	add	x8, x8, w0, sxtw #3
0000000000015f18	ldr	x0, [x8, #0x10]
0000000000015f1c	str	x0, [x19]
0000000000015f20	b	0x15f28
0000000000015f24	mov	x0, #0x0
0000000000015f28	str	x0, [x19]
0000000000015f2c	ldr	x8, [sp, #0x8]
0000000000015f30	str	x8, [x22, #0x110]
0000000000015f34	ldp	x29, x30, [sp, #0x40]
0000000000015f38	ldp	x20, x19, [sp, #0x30]
0000000000015f3c	ldp	x22, x21, [sp, #0x20]
0000000000015f40	add	sp, sp, #0x50
0000000000015f44	ret
0000000000015f48	bl	_ThrowNullPointerException
0000000000015f4c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#put(1:0;1:1){}1:1?:
0000000000015f50	sub	sp, sp, #0x70
0000000000015f54	stp	x24, x23, [sp, #0x30]
0000000000015f58	stp	x22, x21, [sp, #0x40]
0000000000015f5c	stp	x20, x19, [sp, #0x50]
0000000000015f60	stp	x29, x30, [sp, #0x60]
0000000000015f64	add	x29, sp, #0x60
0000000000015f68	mov	x19, x3
0000000000015f6c	mov	x20, x2
0000000000015f70	mov	x22, x1
0000000000015f74	mov	x21, x0
0000000000015f78	movi.16b	v0, #0x0
0000000000015f7c	stp	q0, q0, [sp]
0000000000015f80	str	xzr, [sp, #0x20]
0000000000015f84	mov	x8, sp
0000000000015f88	add	x23, x8, #0x18
0000000000015f8c	adrp	x0, 101 ; 0x7a000
0000000000015f90	add	x0, x0, #0x2c0
0000000000015f94	ldr	x9, [x0]
0000000000015f98	blr	x9
0000000000015f9c	ldr	x24, [x0]
0000000000015fa0	ldr	x9, [x24, #0x110]
0000000000015fa4	str	x8, [x24, #0x110]
0000000000015fa8	mov	x8, #0x500000000
0000000000015fac	stp	x9, x8, [sp, #0x8]
0000000000015fb0	adr	x8, #0x7e2d9
0000000000015fb4	nop
0000000000015fb8	ldarb	w8, [x8]
0000000000015fbc	tbz	w8, #0x0, 0x15fc4
0000000000015fc0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015fc4	mov	x0, x21
0000000000015fc8	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000015fcc	mov	x0, x21
0000000000015fd0	mov	x1, x22
0000000000015fd4	bl	"_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int"
0000000000015fd8	mov	x22, x0
0000000000015fdc	mov	x0, x21
0000000000015fe0	mov	x1, x23
0000000000015fe4	bl	"_kfun:kotlin.collections.HashMap.allocateValuesArray#internal"
0000000000015fe8	mov	x8, x0
0000000000015fec	tbnz	w22, #0x1f, 0x16010
0000000000015ff0	ldr	w9, [x8, #0x8]
0000000000015ff4	cmp	w9, w22
0000000000015ff8	b.ls	0x16058
0000000000015ffc	mov	x0, #0x0
0000000000016000	ldr	xzr, [x8]
0000000000016004	add	x8, x8, w22, sxtw #3
0000000000016008	add	x9, x8, #0x10
000000000001600c	b	0x16030
0000000000016010	mvn	w9, w22
0000000000016014	ldr	w10, [x8, #0x8]
0000000000016018	cmp	w10, w9
000000000001601c	b.ls	0x16058
0000000000016020	add	x9, x8, w9, sxtw #3
0000000000016024	ldr	x0, [x9, #0x10]!
0000000000016028	str	x0, [sp, #0x20]
000000000001602c	ldr	xzr, [x8]
0000000000016030	str	x20, [x9]
0000000000016034	str	x0, [x19]
0000000000016038	ldr	x8, [sp, #0x8]
000000000001603c	str	x8, [x24, #0x110]
0000000000016040	ldp	x29, x30, [sp, #0x60]
0000000000016044	ldp	x20, x19, [sp, #0x50]
0000000000016048	ldp	x22, x21, [sp, #0x40]
000000000001604c	ldp	x24, x23, [sp, #0x30]
0000000000016050	add	sp, sp, #0x70
0000000000016054	ret
0000000000016058	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#putAll(kotlin.collections.Map<out|1:0,1:1>){}:
000000000001605c	sub	sp, sp, #0x120
0000000000016060	stp	x28, x27, [sp, #0xc0]
0000000000016064	stp	x26, x25, [sp, #0xd0]
0000000000016068	stp	x24, x23, [sp, #0xe0]
000000000001606c	stp	x22, x21, [sp, #0xf0]
0000000000016070	stp	x20, x19, [sp, #0x100]
0000000000016074	stp	x29, x30, [sp, #0x110]
0000000000016078	add	x29, sp, #0x110
000000000001607c	mov	x20, x1
0000000000016080	mov	x19, x0
0000000000016084	movi.16b	v0, #0x0
0000000000016088	stp	q0, q0, [sp, #0x20]
000000000001608c	add	x8, sp, #0x20
0000000000016090	add	x21, x8, #0x18
0000000000016094	adrp	x0, 100 ; 0x7a000
0000000000016098	add	x0, x0, #0x2c0
000000000001609c	ldr	x9, [x0]
00000000000160a0	blr	x9
00000000000160a4	ldr	x25, [x0]
00000000000160a8	ldr	x9, [x25, #0x110]
00000000000160ac	str	x8, [x25, #0x110]
00000000000160b0	mov	x8, #0x400000000
00000000000160b4	stp	x9, x8, [sp, #0x28]
00000000000160b8	adr	x8, #0x7e1d1
00000000000160bc	nop
00000000000160c0	ldarb	w8, [x8]
00000000000160c4	tbz	w8, #0x0, 0x160cc
00000000000160c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000160cc	mov	x0, x19
00000000000160d0	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
00000000000160d4	ldr	x8, [x20]
00000000000160d8	and	x8, x8, #0xfffffffffffffffc
00000000000160dc	ldr	x8, [x8]
00000000000160e0	ldr	w9, [x8, #0x3c]
00000000000160e4	ldr	x8, [x8, #0x40]
00000000000160e8	tbnz	w9, #0x1f, 0x160f8
00000000000160ec	mov	w10, #0x41
00000000000160f0	and	x9, x9, x10
00000000000160f4	b	0x1617c
00000000000160f8	neg	w10, w9
00000000000160fc	mvn	w9, w9
0000000000016100	cmp	w10, #0x9
0000000000016104	b.ge	0x1613c
0000000000016108	cmp	w10, #0x2
000000000001610c	b.lt	0x16170
0000000000016110	mov	x10, #0x0
0000000000016114	mov	x11, x8
0000000000016118	ldr	w12, [x11]
000000000001611c	cmp	w12, #0x40
0000000000016120	b.gt	0x16178
0000000000016124	add	x10, x10, #0x1
0000000000016128	add	x11, x11, #0x10
000000000001612c	cmp	x9, x10
0000000000016130	b.ne	0x16118
0000000000016134	mov	x10, x9
0000000000016138	b	0x16178
000000000001613c	mov	w10, #0x0
0000000000016140	add	w11, w9, w10
0000000000016144	cmp	w11, #0x0
0000000000016148	cinc	w11, w11, lt
000000000001614c	asr	w11, w11, #1
0000000000016150	sbfiz	x12, x11, #4, #32
0000000000016154	ldr	w12, [x8, x12]
0000000000016158	cmp	w12, #0x41
000000000001615c	csinc	w10, w10, w11, ge
0000000000016160	csel	w9, w9, w11, lt
0000000000016164	cmp	w10, w9
0000000000016168	b.lt	0x16140
000000000001616c	b	0x16178
0000000000016170	mov	w10, #0x0
0000000000016174	b	0x16178
0000000000016178	sxtw	x9, w10
000000000001617c	add	x8, x8, x9, lsl #4
0000000000016180	ldr	x8, [x8, #0x8]
0000000000016184	ldr	x8, [x8]
0000000000016188	mov	x0, x20
000000000001618c	mov	x1, x21
0000000000016190	blr	x8
0000000000016194	mov	x21, x0
0000000000016198	movi.16b	v0, #0x0
000000000001619c	stp	q0, q0, [sp, #0x40]
00000000000161a0	str	xzr, [sp, #0x60]
00000000000161a4	add	x20, sp, #0x40
00000000000161a8	ldr	x8, [x25, #0x110]
00000000000161ac	str	x20, [x25, #0x110]
00000000000161b0	mov	x9, #0x500000000
00000000000161b4	stp	x8, x9, [sp, #0x48]
00000000000161b8	ldr	x8, [x0]
00000000000161bc	and	x8, x8, #0xfffffffffffffffc
00000000000161c0	ldr	x8, [x8]
00000000000161c4	ldr	w9, [x8, #0x3c]
00000000000161c8	ldr	x8, [x8, #0x40]
00000000000161cc	tbnz	w9, #0x1f, 0x161f4
00000000000161d0	mov	w10, #0x12
00000000000161d4	and	x9, x9, x10
00000000000161d8	add	x8, x8, x9, lsl #4
00000000000161dc	ldr	x8, [x8, #0x8]
00000000000161e0	ldr	x8, [x8, #0x18]
00000000000161e4	mov	x0, x21
00000000000161e8	blr	x8
00000000000161ec	tbz	w0, #0x0, 0x162b8
00000000000161f0	b	0x16290
00000000000161f4	neg	w10, w9
00000000000161f8	mvn	w9, w9
00000000000161fc	cmp	w10, #0x9
0000000000016200	b.ge	0x16238
0000000000016204	cmp	w10, #0x2
0000000000016208	b.lt	0x1626c
000000000001620c	mov	x10, #0x0
0000000000016210	mov	x11, x8
0000000000016214	ldr	w12, [x11]
0000000000016218	cmp	w12, #0x11
000000000001621c	b.gt	0x16274
0000000000016220	add	x10, x10, #0x1
0000000000016224	add	x11, x11, #0x10
0000000000016228	cmp	x9, x10
000000000001622c	b.ne	0x16214
0000000000016230	mov	x10, x9
0000000000016234	b	0x16274
0000000000016238	mov	w10, #0x0
000000000001623c	add	w11, w9, w10
0000000000016240	cmp	w11, #0x0
0000000000016244	cinc	w11, w11, lt
0000000000016248	asr	w11, w11, #1
000000000001624c	sbfiz	x12, x11, #4, #32
0000000000016250	ldr	w12, [x8, x12]
0000000000016254	cmp	w12, #0x12
0000000000016258	csinc	w10, w10, w11, ge
000000000001625c	csel	w9, w9, w11, lt
0000000000016260	cmp	w10, w9
0000000000016264	b.lt	0x1623c
0000000000016268	b	0x16274
000000000001626c	mov	w10, #0x0
0000000000016270	b	0x16274
0000000000016274	sxtw	x9, w10
0000000000016278	add	x8, x8, x9, lsl #4
000000000001627c	ldr	x8, [x8, #0x8]
0000000000016280	ldr	x8, [x8, #0x18]
0000000000016284	mov	x0, x21
0000000000016288	blr	x8
000000000001628c	tbz	w0, #0x0, 0x162b8
0000000000016290	ldr	x8, [sp, #0x28]
0000000000016294	str	x8, [x25, #0x110]
0000000000016298	ldp	x29, x30, [sp, #0x110]
000000000001629c	ldp	x20, x19, [sp, #0x100]
00000000000162a0	ldp	x22, x21, [sp, #0xf0]
00000000000162a4	ldp	x24, x23, [sp, #0xe0]
00000000000162a8	ldp	x26, x25, [sp, #0xd0]
00000000000162ac	ldp	x28, x27, [sp, #0xc0]
00000000000162b0	add	sp, sp, #0x120
00000000000162b4	ret
00000000000162b8	add	x22, x20, #0x18
00000000000162bc	ldr	x8, [x21]
00000000000162c0	and	x8, x8, #0xfffffffffffffffc
00000000000162c4	ldr	x8, [x8]
00000000000162c8	ldr	w9, [x8, #0x3c]
00000000000162cc	ldr	x8, [x8, #0x40]
00000000000162d0	tbnz	w9, #0x1f, 0x162e0
00000000000162d4	mov	w10, #0x12
00000000000162d8	and	x9, x9, x10
00000000000162dc	b	0x16364
00000000000162e0	neg	w10, w9
00000000000162e4	mvn	w9, w9
00000000000162e8	cmp	w10, #0x9
00000000000162ec	b.ge	0x16324
00000000000162f0	cmp	w10, #0x2
00000000000162f4	b.lt	0x16358
00000000000162f8	mov	x10, #0x0
00000000000162fc	mov	x11, x8
0000000000016300	ldr	w12, [x11]
0000000000016304	cmp	w12, #0x11
0000000000016308	b.gt	0x16360
000000000001630c	add	x10, x10, #0x1
0000000000016310	add	x11, x11, #0x10
0000000000016314	cmp	x9, x10
0000000000016318	b.ne	0x16300
000000000001631c	mov	x10, x9
0000000000016320	b	0x16360
0000000000016324	mov	w10, #0x0
0000000000016328	add	w11, w9, w10
000000000001632c	cmp	w11, #0x0
0000000000016330	cinc	w11, w11, lt
0000000000016334	asr	w11, w11, #1
0000000000016338	sbfiz	x12, x11, #4, #32
000000000001633c	ldr	w12, [x8, x12]
0000000000016340	cmp	w12, #0x12
0000000000016344	csinc	w10, w10, w11, ge
0000000000016348	csel	w9, w9, w11, lt
000000000001634c	cmp	w10, w9
0000000000016350	b.lt	0x16328
0000000000016354	b	0x16360
0000000000016358	mov	w10, #0x0
000000000001635c	b	0x16360
0000000000016360	sxtw	x9, w10
0000000000016364	add	x10, x20, #0x20
0000000000016368	str	x10, [sp, #0x18]
000000000001636c	add	x8, x8, x9, lsl #4
0000000000016370	ldr	x8, [x8, #0x8]
0000000000016374	ldr	x8, [x8]
0000000000016378	mov	x0, x21
000000000001637c	blr	x8
0000000000016380	mov	x1, x0
0000000000016384	mov	x0, x19
0000000000016388	bl	"_kfun:kotlin.collections.HashMap.ensureExtraCapacity#internal"
000000000001638c	ldr	x8, [x21]
0000000000016390	and	x8, x8, #0xfffffffffffffffc
0000000000016394	ldr	x8, [x8]
0000000000016398	ldr	w9, [x8, #0x3c]
000000000001639c	ldr	x8, [x8, #0x40]
00000000000163a0	tbnz	w9, #0x1f, 0x163b0
00000000000163a4	mov	w10, #0x12
00000000000163a8	and	x9, x9, x10
00000000000163ac	b	0x16434
00000000000163b0	neg	w10, w9
00000000000163b4	mvn	w9, w9
00000000000163b8	cmp	w10, #0x9
00000000000163bc	b.ge	0x163f4
00000000000163c0	cmp	w10, #0x2
00000000000163c4	b.lt	0x16428
00000000000163c8	mov	x10, #0x0
00000000000163cc	mov	x11, x8
00000000000163d0	ldr	w12, [x11]
00000000000163d4	cmp	w12, #0x11
00000000000163d8	b.gt	0x16430
00000000000163dc	add	x10, x10, #0x1
00000000000163e0	add	x11, x11, #0x10
00000000000163e4	cmp	x9, x10
00000000000163e8	b.ne	0x163d0
00000000000163ec	mov	x10, x9
00000000000163f0	b	0x16430
00000000000163f4	mov	w10, #0x0
00000000000163f8	add	w11, w9, w10
00000000000163fc	cmp	w11, #0x0
0000000000016400	cinc	w11, w11, lt
0000000000016404	asr	w11, w11, #1
0000000000016408	sbfiz	x12, x11, #4, #32
000000000001640c	ldr	w12, [x8, x12]
0000000000016410	cmp	w12, #0x12
0000000000016414	csinc	w10, w10, w11, ge
0000000000016418	csel	w9, w9, w11, lt
000000000001641c	cmp	w10, w9
0000000000016420	b.lt	0x163f8
0000000000016424	b	0x16430
0000000000016428	mov	w10, #0x0
000000000001642c	b	0x16430
0000000000016430	sxtw	x9, w10
0000000000016434	add	x8, x8, x9, lsl #4
0000000000016438	ldr	x8, [x8, #0x8]
000000000001643c	ldr	x8, [x8, #0x20]
0000000000016440	mov	x0, x21
0000000000016444	mov	x1, x22
0000000000016448	blr	x8
000000000001644c	mov	x21, x0
0000000000016450	add	x8, sp, #0x70
0000000000016454	add	x22, x8, #0x18
0000000000016458	add	x23, x8, #0x20
000000000001645c	add	x10, x8, #0x28
0000000000016460	add	x9, x8, #0x38
0000000000016464	stp	x9, x10, [sp, #0x8]
0000000000016468	add	x8, x8, #0x40
000000000001646c	str	x8, [sp]
0000000000016470	b	0x164b4
0000000000016474	mov	w10, #0xa8
0000000000016478	and	x9, x9, x10
000000000001647c	add	x8, x8, x9, lsl #4
0000000000016480	ldr	x8, [x8, #0x8]
0000000000016484	ldr	x8, [x8, #0x8]
0000000000016488	mov	x0, x27
000000000001648c	ldr	x1, [sp]
0000000000016490	blr	x8
0000000000016494	ldr	w8, [x28, #0x8]
0000000000016498	cmp	w8, w24
000000000001649c	b.ls	0x169f4
00000000000164a0	sxtw	x8, w24
00000000000164a4	ldr	xzr, [x28]
00000000000164a8	str	x0, [x20, x8, lsl #3]
00000000000164ac	ldr	x8, [sp, #0x78]
00000000000164b0	str	x8, [x25, #0x110]
00000000000164b4	ldr	x8, [x21]
00000000000164b8	and	x8, x8, #0xfffffffffffffffc
00000000000164bc	ldr	x8, [x8]
00000000000164c0	ldr	w9, [x8, #0x3c]
00000000000164c4	ldr	x8, [x8, #0x40]
00000000000164c8	tbnz	w9, #0x1f, 0x164f0
00000000000164cc	mov	w10, #0xa0
00000000000164d0	and	x9, x9, x10
00000000000164d4	add	x8, x8, x9, lsl #4
00000000000164d8	ldr	x8, [x8, #0x8]
00000000000164dc	ldr	x8, [x8]
00000000000164e0	mov	x0, x21
00000000000164e4	blr	x8
00000000000164e8	tbnz	w0, #0x0, 0x1658c
00000000000164ec	b	0x16290
00000000000164f0	neg	w10, w9
00000000000164f4	mvn	w9, w9
00000000000164f8	cmp	w10, #0x9
00000000000164fc	b.ge	0x16534
0000000000016500	cmp	w10, #0x2
0000000000016504	b.lt	0x16568
0000000000016508	mov	x10, #0x0
000000000001650c	mov	x11, x8
0000000000016510	ldr	w12, [x11]
0000000000016514	cmp	w12, #0x9f
0000000000016518	b.gt	0x16570
000000000001651c	add	x10, x10, #0x1
0000000000016520	add	x11, x11, #0x10
0000000000016524	cmp	x9, x10
0000000000016528	b.ne	0x16510
000000000001652c	mov	x10, x9
0000000000016530	b	0x16570
0000000000016534	mov	w10, #0x0
0000000000016538	add	w11, w9, w10
000000000001653c	cmp	w11, #0x0
0000000000016540	cinc	w11, w11, lt
0000000000016544	asr	w11, w11, #1
0000000000016548	sbfiz	x12, x11, #4, #32
000000000001654c	ldr	w12, [x8, x12]
0000000000016550	cmp	w12, #0xa0
0000000000016554	csinc	w10, w10, w11, ge
0000000000016558	csel	w9, w9, w11, lt
000000000001655c	cmp	w10, w9
0000000000016560	b.lt	0x16538
0000000000016564	b	0x16570
0000000000016568	mov	w10, #0x0
000000000001656c	b	0x16570
0000000000016570	sxtw	x9, w10
0000000000016574	add	x8, x8, x9, lsl #4
0000000000016578	ldr	x8, [x8, #0x8]
000000000001657c	ldr	x8, [x8]
0000000000016580	mov	x0, x21
0000000000016584	blr	x8
0000000000016588	tbz	w0, #0x0, 0x16290
000000000001658c	adr	x8, #0x7dcfd
0000000000016590	nop
0000000000016594	ldarb	w8, [x8]
0000000000016598	tbz	w8, #0x0, 0x165a0
000000000001659c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000165a0	ldr	x8, [x21]
00000000000165a4	and	x8, x8, #0xfffffffffffffffc
00000000000165a8	ldr	x8, [x8]
00000000000165ac	ldr	w9, [x8, #0x3c]
00000000000165b0	ldr	x8, [x8, #0x40]
00000000000165b4	tbnz	w9, #0x1f, 0x165c4
00000000000165b8	mov	w10, #0xa0
00000000000165bc	and	x9, x9, x10
00000000000165c0	b	0x16648
00000000000165c4	neg	w10, w9
00000000000165c8	mvn	w9, w9
00000000000165cc	cmp	w10, #0x9
00000000000165d0	b.ge	0x16608
00000000000165d4	cmp	w10, #0x2
00000000000165d8	b.lt	0x1663c
00000000000165dc	mov	x10, #0x0
00000000000165e0	mov	x11, x8
00000000000165e4	ldr	w12, [x11]
00000000000165e8	cmp	w12, #0x9f
00000000000165ec	b.gt	0x16644
00000000000165f0	add	x10, x10, #0x1
00000000000165f4	add	x11, x11, #0x10
00000000000165f8	cmp	x9, x10
00000000000165fc	b.ne	0x165e4
0000000000016600	mov	x10, x9
0000000000016604	b	0x16644
0000000000016608	mov	w10, #0x0
000000000001660c	add	w11, w9, w10
0000000000016610	cmp	w11, #0x0
0000000000016614	cinc	w11, w11, lt
0000000000016618	asr	w11, w11, #1
000000000001661c	sbfiz	x12, x11, #4, #32
0000000000016620	ldr	w12, [x8, x12]
0000000000016624	cmp	w12, #0xa0
0000000000016628	csinc	w10, w10, w11, ge
000000000001662c	csel	w9, w9, w11, lt
0000000000016630	cmp	w10, w9
0000000000016634	b.lt	0x1660c
0000000000016638	b	0x16644
000000000001663c	mov	w10, #0x0
0000000000016640	b	0x16644
0000000000016644	sxtw	x9, w10
0000000000016648	add	x8, x8, x9, lsl #4
000000000001664c	ldr	x8, [x8, #0x8]
0000000000016650	ldr	x8, [x8, #0x8]
0000000000016654	mov	x0, x21
0000000000016658	ldr	x1, [sp, #0x18]
000000000001665c	blr	x8
0000000000016660	mov	x27, x0
0000000000016664	movi.16b	v0, #0x0
0000000000016668	stp	q0, q0, [sp, #0x70]
000000000001666c	str	xzr, [sp, #0xb0]
0000000000016670	stp	q0, q0, [sp, #0x90]
0000000000016674	ldr	x10, [x25, #0x110]
0000000000016678	add	x9, sp, #0x70
000000000001667c	str	x9, [x25, #0x110]
0000000000016680	mov	x8, #0x900000000
0000000000016684	stp	x10, x8, [sp, #0x78]
0000000000016688	ldr	x8, [x0]
000000000001668c	and	x8, x8, #0xfffffffffffffffc
0000000000016690	ldr	x8, [x8]
0000000000016694	ldr	w9, [x8, #0x3c]
0000000000016698	ldr	x8, [x8, #0x40]
000000000001669c	tbnz	w9, #0x1f, 0x166ac
00000000000166a0	mov	w10, #0xa8
00000000000166a4	and	x9, x9, x10
00000000000166a8	b	0x16730
00000000000166ac	neg	w10, w9
00000000000166b0	mvn	w9, w9
00000000000166b4	cmp	w10, #0x9
00000000000166b8	b.ge	0x166f0
00000000000166bc	cmp	w10, #0x2
00000000000166c0	b.lt	0x16724
00000000000166c4	mov	x10, #0x0
00000000000166c8	mov	x11, x8
00000000000166cc	ldr	w12, [x11]
00000000000166d0	cmp	w12, #0xa7
00000000000166d4	b.gt	0x1672c
00000000000166d8	add	x10, x10, #0x1
00000000000166dc	add	x11, x11, #0x10
00000000000166e0	cmp	x9, x10
00000000000166e4	b.ne	0x166cc
00000000000166e8	mov	x10, x9
00000000000166ec	b	0x1672c
00000000000166f0	mov	w10, #0x0
00000000000166f4	add	w11, w9, w10
00000000000166f8	cmp	w11, #0x0
00000000000166fc	cinc	w11, w11, lt
0000000000016700	asr	w11, w11, #1
0000000000016704	sbfiz	x12, x11, #4, #32
0000000000016708	ldr	w12, [x8, x12]
000000000001670c	cmp	w12, #0xa8
0000000000016710	csinc	w10, w10, w11, ge
0000000000016714	csel	w9, w9, w11, lt
0000000000016718	cmp	w10, w9
000000000001671c	b.lt	0x166f4
0000000000016720	b	0x1672c
0000000000016724	mov	w10, #0x0
0000000000016728	b	0x1672c
000000000001672c	sxtw	x9, w10
0000000000016730	add	x8, x8, x9, lsl #4
0000000000016734	ldr	x8, [x8, #0x8]
0000000000016738	ldr	x8, [x8]
000000000001673c	mov	x0, x27
0000000000016740	mov	x1, x22
0000000000016744	blr	x8
0000000000016748	mov	x1, x0
000000000001674c	mov	x0, x19
0000000000016750	bl	"_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int"
0000000000016754	mov	x26, x0
0000000000016758	mov	x0, x19
000000000001675c	mov	x1, x23
0000000000016760	bl	"_kfun:kotlin.collections.HashMap.allocateValuesArray#internal"
0000000000016764	mov	x28, x0
0000000000016768	tbnz	w26, #0x1f, 0x16790
000000000001676c	ldr	x8, [x27]
0000000000016770	and	x8, x8, #0xfffffffffffffffc
0000000000016774	ldr	x8, [x8]
0000000000016778	ldr	w9, [x8, #0x3c]
000000000001677c	ldr	x8, [x8, #0x40]
0000000000016780	tbnz	w9, #0x1f, 0x167d0
0000000000016784	mov	w10, #0xa8
0000000000016788	and	x9, x9, x10
000000000001678c	b	0x168d4
0000000000016790	mvn	w24, w26
0000000000016794	ldr	w8, [x28, #0x8]
0000000000016798	cmp	w8, w24
000000000001679c	b.ls	0x169f4
00000000000167a0	add	x20, x28, #0x10
00000000000167a4	ldr	x26, [x20, w24, sxtw #3]
00000000000167a8	str	x26, [sp, #0xa0]
00000000000167ac	ldr	x8, [x27]
00000000000167b0	and	x8, x8, #0xfffffffffffffffc
00000000000167b4	ldr	x8, [x8]
00000000000167b8	ldr	w9, [x8, #0x3c]
00000000000167bc	ldr	x8, [x8, #0x40]
00000000000167c0	tbnz	w9, #0x1f, 0x16814
00000000000167c4	mov	w10, #0xa8
00000000000167c8	and	x9, x9, x10
00000000000167cc	b	0x1690c
00000000000167d0	neg	w10, w9
00000000000167d4	mvn	w9, w9
00000000000167d8	cmp	w10, #0x9
00000000000167dc	b.ge	0x16858
00000000000167e0	cmp	w10, #0x2
00000000000167e4	b.lt	0x168c0
00000000000167e8	mov	x10, #0x0
00000000000167ec	mov	x11, x8
00000000000167f0	ldr	w12, [x11]
00000000000167f4	cmp	w12, #0xa7
00000000000167f8	b.gt	0x168d0
00000000000167fc	add	x10, x10, #0x1
0000000000016800	add	x11, x11, #0x10
0000000000016804	cmp	x9, x10
0000000000016808	b.ne	0x167f0
000000000001680c	mov	x10, x9
0000000000016810	b	0x168d0
0000000000016814	neg	w10, w9
0000000000016818	mvn	w9, w9
000000000001681c	cmp	w10, #0x9
0000000000016820	b.ge	0x1688c
0000000000016824	cmp	w10, #0x2
0000000000016828	b.lt	0x168c8
000000000001682c	mov	x10, #0x0
0000000000016830	mov	x11, x8
0000000000016834	ldr	w12, [x11]
0000000000016838	cmp	w12, #0xa7
000000000001683c	b.gt	0x16908
0000000000016840	add	x10, x10, #0x1
0000000000016844	add	x11, x11, #0x10
0000000000016848	cmp	x9, x10
000000000001684c	b.ne	0x16834
0000000000016850	mov	x10, x9
0000000000016854	b	0x16908
0000000000016858	mov	w10, #0x0
000000000001685c	add	w11, w9, w10
0000000000016860	cmp	w11, #0x0
0000000000016864	cinc	w11, w11, lt
0000000000016868	asr	w11, w11, #1
000000000001686c	sbfiz	x12, x11, #4, #32
0000000000016870	ldr	w12, [x8, x12]
0000000000016874	cmp	w12, #0xa8
0000000000016878	csinc	w10, w10, w11, ge
000000000001687c	csel	w9, w9, w11, lt
0000000000016880	cmp	w10, w9
0000000000016884	b.lt	0x1685c
0000000000016888	b	0x168d0
000000000001688c	mov	w10, #0x0
0000000000016890	add	w11, w9, w10
0000000000016894	cmp	w11, #0x0
0000000000016898	cinc	w11, w11, lt
000000000001689c	asr	w11, w11, #1
00000000000168a0	sbfiz	x12, x11, #4, #32
00000000000168a4	ldr	w12, [x8, x12]
00000000000168a8	cmp	w12, #0xa8
00000000000168ac	csinc	w10, w10, w11, ge
00000000000168b0	csel	w9, w9, w11, lt
00000000000168b4	cmp	w10, w9
00000000000168b8	b.lt	0x16890
00000000000168bc	b	0x16908
00000000000168c0	mov	w10, #0x0
00000000000168c4	b	0x168d0
00000000000168c8	mov	w10, #0x0
00000000000168cc	b	0x16908
00000000000168d0	sxtw	x9, w10
00000000000168d4	add	x8, x8, x9, lsl #4
00000000000168d8	ldr	x8, [x8, #0x8]
00000000000168dc	ldr	x8, [x8, #0x8]
00000000000168e0	mov	x0, x27
00000000000168e4	ldr	x1, [sp, #0x10]
00000000000168e8	blr	x8
00000000000168ec	ldr	w8, [x28, #0x8]
00000000000168f0	cmp	w8, w26
00000000000168f4	b.ls	0x169f4
00000000000168f8	ldr	xzr, [x28]
00000000000168fc	add	x8, x28, w26, sxtw #3
0000000000016900	str	x0, [x8, #0x10]
0000000000016904	b	0x164ac
0000000000016908	sxtw	x9, w10
000000000001690c	add	x8, x8, x9, lsl #4
0000000000016910	ldr	x8, [x8, #0x8]
0000000000016914	ldr	x8, [x8, #0x8]
0000000000016918	mov	x0, x27
000000000001691c	ldr	x1, [sp, #0x8]
0000000000016920	blr	x8
0000000000016924	cbz	x0, 0x16948
0000000000016928	ldr	x8, [x0]
000000000001692c	and	x8, x8, #0xfffffffffffffffc
0000000000016930	ldr	x8, [x8]
0000000000016934	ldr	x8, [x8, #0x70]
0000000000016938	mov	x1, x26
000000000001693c	blr	x8
0000000000016940	tbnz	w0, #0x0, 0x164ac
0000000000016944	b	0x1694c
0000000000016948	cbz	x26, 0x164ac
000000000001694c	ldr	x8, [x27]
0000000000016950	and	x8, x8, #0xfffffffffffffffc
0000000000016954	ldr	x8, [x8]
0000000000016958	ldr	w9, [x8, #0x3c]
000000000001695c	ldr	x8, [x8, #0x40]
0000000000016960	tbz	w9, #0x1f, 0x16474
0000000000016964	neg	w10, w9
0000000000016968	mvn	w9, w9
000000000001696c	cmp	w10, #0x9
0000000000016970	b.ge	0x169ac
0000000000016974	cmp	w10, #0x2
0000000000016978	b.lt	0x169e0
000000000001697c	mov	x10, #0x0
0000000000016980	mov	x11, x8
0000000000016984	ldr	w12, [x11]
0000000000016988	cmp	w12, #0xa7
000000000001698c	b.gt	0x169ec
0000000000016990	add	x10, x10, #0x1
0000000000016994	add	x11, x11, #0x10
0000000000016998	cmp	x9, x10
000000000001699c	b.ne	0x16984
00000000000169a0	mov	x10, x9
00000000000169a4	sxtw	x9, w10
00000000000169a8	b	0x1647c
00000000000169ac	mov	w10, #0x0
00000000000169b0	add	w11, w9, w10
00000000000169b4	cmp	w11, #0x0
00000000000169b8	cinc	w11, w11, lt
00000000000169bc	asr	w11, w11, #1
00000000000169c0	sbfiz	x12, x11, #4, #32
00000000000169c4	ldr	w12, [x8, x12]
00000000000169c8	cmp	w12, #0xa8
00000000000169cc	csinc	w10, w10, w11, ge
00000000000169d0	csel	w9, w9, w11, lt
00000000000169d4	cmp	w10, w9
00000000000169d8	b.lt	0x169b0
00000000000169dc	b	0x169ec
00000000000169e0	mov	w10, #0x0
00000000000169e4	sxtw	x9, w10
00000000000169e8	b	0x1647c
00000000000169ec	sxtw	x9, w10
00000000000169f0	b	0x1647c
00000000000169f4	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#remove(1:0){}1:1?:
00000000000169f8	sub	sp, sp, #0x60
00000000000169fc	stp	x22, x21, [sp, #0x30]
0000000000016a00	stp	x20, x19, [sp, #0x40]
0000000000016a04	stp	x29, x30, [sp, #0x50]
0000000000016a08	add	x29, sp, #0x50
0000000000016a0c	mov	x19, x2
0000000000016a10	mov	x21, x1
0000000000016a14	mov	x20, x0
0000000000016a18	movi.16b	v0, #0x0
0000000000016a1c	stp	q0, q0, [sp]
0000000000016a20	str	xzr, [sp, #0x20]
0000000000016a24	adrp	x0, 100 ; 0x7a000
0000000000016a28	add	x0, x0, #0x2c0
0000000000016a2c	ldr	x8, [x0]
0000000000016a30	blr	x8
0000000000016a34	ldr	x22, [x0]
0000000000016a38	ldr	x8, [x22, #0x110]
0000000000016a3c	mov	x9, sp
0000000000016a40	str	x9, [x22, #0x110]
0000000000016a44	mov	x9, #0x500000000
0000000000016a48	stp	x8, x9, [sp, #0x8]
0000000000016a4c	adr	x8, #0x7d83d
0000000000016a50	nop
0000000000016a54	ldarb	w8, [x8]
0000000000016a58	tbz	w8, #0x0, 0x16a60
0000000000016a5c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016a60	mov	x0, x20
0000000000016a64	mov	x1, x21
0000000000016a68	bl	"_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int"
0000000000016a6c	tbnz	w0, #0x1f, 0x16aa0
0000000000016a70	mov	x1, x0
0000000000016a74	ldr	x0, [x20, #0x10]
0000000000016a78	str	x0, [sp, #0x18]
0000000000016a7c	cbz	x0, 0x16ac8
0000000000016a80	ldr	w8, [x0, #0x8]
0000000000016a84	cmp	w8, w1
0000000000016a88	b.ls	0x16acc
0000000000016a8c	add	x8, x0, w1, sxtw #3
0000000000016a90	ldr	x20, [x8, #0x10]
0000000000016a94	str	x20, [sp, #0x20]
0000000000016a98	bl	"_kfun:kotlin.collections#resetAt__at__kotlin.Array<0:0>(kotlin.Int){0§<kotlin.Any?>}"
0000000000016a9c	b	0x16aa4
0000000000016aa0	mov	x20, #0x0
0000000000016aa4	str	x20, [x19]
0000000000016aa8	ldr	x8, [sp, #0x8]
0000000000016aac	str	x8, [x22, #0x110]
0000000000016ab0	mov	x0, x20
0000000000016ab4	ldp	x29, x30, [sp, #0x50]
0000000000016ab8	ldp	x20, x19, [sp, #0x40]
0000000000016abc	ldp	x22, x21, [sp, #0x30]
0000000000016ac0	add	sp, sp, #0x60
0000000000016ac4	ret
0000000000016ac8	bl	_ThrowNullPointerException
0000000000016acc	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#clear(){}:
0000000000016ad0	sub	sp, sp, #0x80
0000000000016ad4	stp	x24, x23, [sp, #0x40]
0000000000016ad8	stp	x22, x21, [sp, #0x50]
0000000000016adc	stp	x20, x19, [sp, #0x60]
0000000000016ae0	stp	x29, x30, [sp, #0x70]
0000000000016ae4	add	x29, sp, #0x70
0000000000016ae8	mov	x19, x0
0000000000016aec	movi.16b	v0, #0x0
0000000000016af0	stp	q0, q0, [sp]
0000000000016af4	stp	q0, q0, [sp, #0x20]
0000000000016af8	adrp	x0, 100 ; 0x7a000
0000000000016afc	add	x0, x0, #0x2c0
0000000000016b00	ldr	x8, [x0]
0000000000016b04	blr	x8
0000000000016b08	ldr	x21, [x0]
0000000000016b0c	ldr	x8, [x21, #0x110]
0000000000016b10	mov	x9, sp
0000000000016b14	str	x9, [x21, #0x110]
0000000000016b18	mov	x9, #0x800000000
0000000000016b1c	stp	x8, x9, [sp, #0x8]
0000000000016b20	adr	x22, #0x7d769
0000000000016b24	nop
0000000000016b28	ldarb	w8, [x22]
0000000000016b2c	tbz	w8, #0x0, 0x16b34
0000000000016b30	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016b34	mov	x0, x19
0000000000016b38	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000016b3c	ldr	w20, [x19, #0x44]
0000000000016b40	cmp	w20, #0x1
0000000000016b44	b.mi	0x16bd4
0000000000016b48	mov	x23, #0x0
0000000000016b4c	mov	w24, #-0x1
0000000000016b50	b	0x16b6c
0000000000016b54	ldr	xzr, [x8]
0000000000016b58	add	x8, x8, x23, lsl #2
0000000000016b5c	str	w24, [x8, #0x10]
0000000000016b60	add	x23, x23, #0x1
0000000000016b64	cmp	w20, w23
0000000000016b68	b.eq	0x16bd0
0000000000016b6c	ldarb	w8, [x22]
0000000000016b70	tbz	w8, #0x0, 0x16b78
0000000000016b74	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016b78	ldr	x8, [x19, #0x18]
0000000000016b7c	str	x8, [sp, #0x18]
0000000000016b80	ldr	w9, [x8, #0x8]
0000000000016b84	cmp	w9, w23
0000000000016b88	b.ls	0x16bcc
0000000000016b8c	add	x8, x8, x23, lsl #2
0000000000016b90	ldrsw	x8, [x8, #0x10]
0000000000016b94	tbnz	w8, #0x1f, 0x16b60
0000000000016b98	ldr	x9, [x19, #0x20]
0000000000016b9c	str	x9, [sp, #0x20]
0000000000016ba0	ldr	w10, [x9, #0x8]
0000000000016ba4	cmp	w10, w8
0000000000016ba8	b.ls	0x16bcc
0000000000016bac	ldr	xzr, [x9]
0000000000016bb0	add	x8, x9, x8, lsl #2
0000000000016bb4	str	wzr, [x8, #0x10]
0000000000016bb8	ldr	x8, [x19, #0x18]
0000000000016bbc	str	x8, [sp, #0x28]
0000000000016bc0	ldr	w9, [x8, #0x8]
0000000000016bc4	cmp	w9, w23
0000000000016bc8	b.hi	0x16b54
0000000000016bcc	bl	_ThrowArrayIndexOutOfBoundsException
0000000000016bd0	ldr	w20, [x19, #0x44]
0000000000016bd4	ldr	x0, [x19, #0x8]
0000000000016bd8	str	x0, [sp, #0x30]
0000000000016bdc	mov	w1, #0x0
0000000000016be0	mov	x2, x20
0000000000016be4	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}"
0000000000016be8	ldr	x0, [x19, #0x10]
0000000000016bec	str	x0, [sp, #0x38]
0000000000016bf0	cbz	x0, 0x16c00
0000000000016bf4	ldr	w2, [x19, #0x44]
0000000000016bf8	mov	w1, #0x0
0000000000016bfc	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}"
0000000000016c00	str	wzr, [x19, #0x4c]
0000000000016c04	str	wzr, [x19, #0x44]
0000000000016c08	ldr	x8, [sp, #0x8]
0000000000016c0c	str	x8, [x21, #0x110]
0000000000016c10	ldp	x29, x30, [sp, #0x70]
0000000000016c14	ldp	x20, x19, [sp, #0x60]
0000000000016c18	ldp	x22, x21, [sp, #0x50]
0000000000016c1c	ldp	x24, x23, [sp, #0x40]
0000000000016c20	add	sp, sp, #0x80
0000000000016c24	ret
_kfun:kotlin.collections.HashMap#<get-keys>(){}kotlin.collections.MutableSet<1:0>:
0000000000016c28	sub	sp, sp, #0x60
0000000000016c2c	stp	x22, x21, [sp, #0x30]
0000000000016c30	stp	x20, x19, [sp, #0x40]
0000000000016c34	stp	x29, x30, [sp, #0x50]
0000000000016c38	add	x29, sp, #0x50
0000000000016c3c	mov	x19, x1
0000000000016c40	mov	x20, x0
0000000000016c44	movi.16b	v0, #0x0
0000000000016c48	stp	q0, q0, [sp]
0000000000016c4c	str	xzr, [sp, #0x20]
0000000000016c50	adrp	x0, 100 ; 0x7a000
0000000000016c54	add	x0, x0, #0x2c0
0000000000016c58	ldr	x8, [x0]
0000000000016c5c	blr	x8
0000000000016c60	ldr	x21, [x0]
0000000000016c64	ldr	x8, [x21, #0x110]
0000000000016c68	mov	x9, sp
0000000000016c6c	str	x9, [x21, #0x110]
0000000000016c70	mov	x9, #0x500000000
0000000000016c74	stp	x8, x9, [sp, #0x8]
0000000000016c78	adr	x8, #0x7d611
0000000000016c7c	nop
0000000000016c80	ldarb	w8, [x8]
0000000000016c84	tbz	w8, #0x0, 0x16c8c
0000000000016c88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016c8c	ldr	x0, [x20, #0x28]
0000000000016c90	str	x0, [sp, #0x18]
0000000000016c94	cbnz	x0, 0x16cc4
0000000000016c98	ldr	x8, [x21, #0x118]
0000000000016c9c	add	x0, x8, #0x70
0000000000016ca0	mov	w1, #0x18
0000000000016ca4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000016ca8	adr	x8, #0x4d488
0000000000016cac	nop
0000000000016cb0	str	x8, [x0, #0x10]!
0000000000016cb4	stur	xzr, [x0, #-0x8]
0000000000016cb8	str	x0, [sp, #0x20]
0000000000016cbc	str	x20, [x0, #0x8]
0000000000016cc0	str	x0, [x20, #0x28]
0000000000016cc4	str	x0, [x19]
0000000000016cc8	ldr	x8, [sp, #0x8]
0000000000016ccc	str	x8, [x21, #0x110]
0000000000016cd0	ldp	x29, x30, [sp, #0x50]
0000000000016cd4	ldp	x20, x19, [sp, #0x40]
0000000000016cd8	ldp	x22, x21, [sp, #0x30]
0000000000016cdc	add	sp, sp, #0x60
0000000000016ce0	ret
_kfun:kotlin.collections.HashMap#<get-values>(){}kotlin.collections.MutableCollection<1:1>:
0000000000016ce4	sub	sp, sp, #0x60
0000000000016ce8	stp	x22, x21, [sp, #0x30]
0000000000016cec	stp	x20, x19, [sp, #0x40]
0000000000016cf0	stp	x29, x30, [sp, #0x50]
0000000000016cf4	add	x29, sp, #0x50
0000000000016cf8	mov	x19, x1
0000000000016cfc	mov	x20, x0
0000000000016d00	movi.16b	v0, #0x0
0000000000016d04	stp	q0, q0, [sp]
0000000000016d08	str	xzr, [sp, #0x20]
0000000000016d0c	adrp	x0, 100 ; 0x7a000
0000000000016d10	add	x0, x0, #0x2c0
0000000000016d14	ldr	x8, [x0]
0000000000016d18	blr	x8
0000000000016d1c	ldr	x21, [x0]
0000000000016d20	ldr	x8, [x21, #0x110]
0000000000016d24	mov	x9, sp
0000000000016d28	str	x9, [x21, #0x110]
0000000000016d2c	mov	x9, #0x500000000
0000000000016d30	stp	x8, x9, [sp, #0x8]
0000000000016d34	adr	x8, #0x7d555
0000000000016d38	nop
0000000000016d3c	ldarb	w8, [x8]
0000000000016d40	tbz	w8, #0x0, 0x16d48
0000000000016d44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016d48	ldr	x0, [x20, #0x30]
0000000000016d4c	str	x0, [sp, #0x18]
0000000000016d50	cbnz	x0, 0x16d80
0000000000016d54	ldr	x8, [x21, #0x118]
0000000000016d58	add	x0, x8, #0x70
0000000000016d5c	mov	w1, #0x18
0000000000016d60	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000016d64	adr	x8, #0x4d4bc
0000000000016d68	nop
0000000000016d6c	str	x8, [x0, #0x10]!
0000000000016d70	stur	xzr, [x0, #-0x8]
0000000000016d74	str	x0, [sp, #0x20]
0000000000016d78	str	x20, [x0, #0x8]
0000000000016d7c	str	x0, [x20, #0x30]
0000000000016d80	str	x0, [x19]
0000000000016d84	ldr	x8, [sp, #0x8]
0000000000016d88	str	x8, [x21, #0x110]
0000000000016d8c	ldp	x29, x30, [sp, #0x50]
0000000000016d90	ldp	x20, x19, [sp, #0x40]
0000000000016d94	ldp	x22, x21, [sp, #0x30]
0000000000016d98	add	sp, sp, #0x60
0000000000016d9c	ret
_kfun:kotlin.collections.HashMap#<get-entries>(){}kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<1:0,1:1>>:
0000000000016da0	sub	sp, sp, #0x60
0000000000016da4	stp	x22, x21, [sp, #0x30]
0000000000016da8	stp	x20, x19, [sp, #0x40]
0000000000016dac	stp	x29, x30, [sp, #0x50]
0000000000016db0	add	x29, sp, #0x50
0000000000016db4	mov	x19, x1
0000000000016db8	mov	x20, x0
0000000000016dbc	movi.16b	v0, #0x0
0000000000016dc0	stp	q0, q0, [sp]
0000000000016dc4	str	xzr, [sp, #0x20]
0000000000016dc8	adrp	x0, 100 ; 0x7a000
0000000000016dcc	add	x0, x0, #0x2c0
0000000000016dd0	ldr	x8, [x0]
0000000000016dd4	blr	x8
0000000000016dd8	ldr	x21, [x0]
0000000000016ddc	ldr	x8, [x21, #0x110]
0000000000016de0	mov	x9, sp
0000000000016de4	str	x9, [x21, #0x110]
0000000000016de8	mov	x9, #0x500000000
0000000000016dec	stp	x8, x9, [sp, #0x8]
0000000000016df0	adr	x8, #0x7d499
0000000000016df4	nop
0000000000016df8	ldarb	w8, [x8]
0000000000016dfc	tbz	w8, #0x0, 0x16e04
0000000000016e00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016e04	ldr	x0, [x20, #0x38]
0000000000016e08	str	x0, [sp, #0x18]
0000000000016e0c	cbnz	x0, 0x16e3c
0000000000016e10	ldr	x8, [x21, #0x118]
0000000000016e14	add	x0, x8, #0x70
0000000000016e18	mov	w1, #0x18
0000000000016e1c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000016e20	adr	x8, #0x4d4f0
0000000000016e24	nop
0000000000016e28	str	x8, [x0, #0x10]!
0000000000016e2c	stur	xzr, [x0, #-0x8]
0000000000016e30	str	x0, [sp, #0x20]
0000000000016e34	str	x20, [x0, #0x8]
0000000000016e38	str	x0, [x20, #0x38]
0000000000016e3c	str	x0, [x19]
0000000000016e40	ldr	x8, [sp, #0x8]
0000000000016e44	str	x8, [x21, #0x110]
0000000000016e48	ldp	x29, x30, [sp, #0x50]
0000000000016e4c	ldp	x20, x19, [sp, #0x40]
0000000000016e50	ldp	x22, x21, [sp, #0x30]
0000000000016e54	add	sp, sp, #0x60
0000000000016e58	ret
_kfun:kotlin.collections.HashMap#equals(kotlin.Any?){}kotlin.Boolean:
0000000000016e5c	sub	sp, sp, #0x60
0000000000016e60	stp	x24, x23, [sp, #0x20]
0000000000016e64	stp	x22, x21, [sp, #0x30]
0000000000016e68	stp	x20, x19, [sp, #0x40]
0000000000016e6c	stp	x29, x30, [sp, #0x50]
0000000000016e70	add	x29, sp, #0x50
0000000000016e74	mov	x20, x1
0000000000016e78	mov	x19, x0
0000000000016e7c	adr	x8, #0x7d40d
0000000000016e80	nop
0000000000016e84	ldarb	w8, [x8]
0000000000016e88	tbz	w8, #0x0, 0x16e90
0000000000016e8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016e90	cmp	x20, x19
0000000000016e94	b.eq	0x16f28
0000000000016e98	cbz	x20, 0x17010
0000000000016e9c	ldr	x8, [x20]
0000000000016ea0	and	x8, x8, #0xfffffffffffffffc
0000000000016ea4	ldr	x8, [x8]
0000000000016ea8	ldr	w9, [x8, #0x3c]
0000000000016eac	ldr	x8, [x8, #0x40]
0000000000016eb0	tbnz	w9, #0x1f, 0x16f30
0000000000016eb4	mov	w10, #0x41
0000000000016eb8	and	x9, x9, x10
0000000000016ebc	lsl	x9, x9, #4
0000000000016ec0	ldr	w8, [x8, x9]
0000000000016ec4	cmp	w8, #0x41
0000000000016ec8	b.ne	0x17010
0000000000016ecc	movi.16b	v0, #0x0
0000000000016ed0	stp	q0, q0, [sp]
0000000000016ed4	mov	x23, sp
0000000000016ed8	adrp	x21, 100 ; 0x7a000
0000000000016edc	add	x21, x21, #0x2c0
0000000000016ee0	ldr	x22, [x21]
0000000000016ee4	mov	x0, x21
0000000000016ee8	blr	x22
0000000000016eec	ldr	x8, [x0]
0000000000016ef0	ldr	x9, [x8, #0x110]
0000000000016ef4	str	x23, [x8, #0x110]
0000000000016ef8	mov	x8, #0x400000000
0000000000016efc	stp	x9, x8, [sp, #0x8]
0000000000016f00	ldr	w24, [x19, #0x4c]
0000000000016f04	ldr	x8, [x20]
0000000000016f08	and	x8, x8, #0xfffffffffffffffc
0000000000016f0c	ldr	x8, [x8]
0000000000016f10	ldr	w9, [x8, #0x3c]
0000000000016f14	ldr	x8, [x8, #0x40]
0000000000016f18	tbnz	w9, #0x1f, 0x16f88
0000000000016f1c	mov	w10, #0x41
0000000000016f20	and	x9, x9, x10
0000000000016f24	b	0x1708c
0000000000016f28	mov	w8, #0x1
0000000000016f2c	b	0x17194
0000000000016f30	neg	w10, w9
0000000000016f34	mvn	w9, w9
0000000000016f38	cmp	w10, #0x9
0000000000016f3c	b.ge	0x16fcc
0000000000016f40	cmp	w10, #0x2
0000000000016f44	b.lt	0x17018
0000000000016f48	mov	x10, #0x0
0000000000016f4c	mov	x11, x8
0000000000016f50	ldr	w12, [x11]
0000000000016f54	cmp	w12, #0x40
0000000000016f58	b.gt	0x17068
0000000000016f5c	add	x10, x10, #0x1
0000000000016f60	add	x11, x11, #0x10
0000000000016f64	cmp	x9, x10
0000000000016f68	b.ne	0x16f50
0000000000016f6c	mov	x10, x9
0000000000016f70	sxtw	x9, w10
0000000000016f74	lsl	x9, x9, #4
0000000000016f78	ldr	w8, [x8, x9]
0000000000016f7c	cmp	w8, #0x41
0000000000016f80	b.ne	0x17010
0000000000016f84	b	0x16ecc
0000000000016f88	neg	w10, w9
0000000000016f8c	mvn	w9, w9
0000000000016f90	cmp	w10, #0x9
0000000000016f94	b.ge	0x17034
0000000000016f98	cmp	w10, #0x2
0000000000016f9c	b.lt	0x17080
0000000000016fa0	mov	x10, #0x0
0000000000016fa4	mov	x11, x8
0000000000016fa8	ldr	w12, [x11]
0000000000016fac	cmp	w12, #0x40
0000000000016fb0	b.gt	0x17088
0000000000016fb4	add	x10, x10, #0x1
0000000000016fb8	add	x11, x11, #0x10
0000000000016fbc	cmp	x9, x10
0000000000016fc0	b.ne	0x16fa8
0000000000016fc4	mov	x10, x9
0000000000016fc8	b	0x17088
0000000000016fcc	mov	w10, #0x0
0000000000016fd0	add	w11, w9, w10
0000000000016fd4	cmp	w11, #0x0
0000000000016fd8	cinc	w11, w11, lt
0000000000016fdc	asr	w11, w11, #1
0000000000016fe0	sbfiz	x12, x11, #4, #32
0000000000016fe4	ldr	w12, [x8, x12]
0000000000016fe8	cmp	w12, #0x41
0000000000016fec	csinc	w10, w10, w11, ge
0000000000016ff0	csel	w9, w9, w11, lt
0000000000016ff4	cmp	w10, w9
0000000000016ff8	b.lt	0x16fd0
0000000000016ffc	sxtw	x9, w10
0000000000017000	lsl	x9, x9, #4
0000000000017004	ldr	w8, [x8, x9]
0000000000017008	cmp	w8, #0x41
000000000001700c	b.eq	0x16ecc
0000000000017010	mov	w8, #0x0
0000000000017014	b	0x17194
0000000000017018	mov	w10, #0x0
000000000001701c	sxtw	x9, w10
0000000000017020	lsl	x9, x9, #4
0000000000017024	ldr	w8, [x8, x9]
0000000000017028	cmp	w8, #0x41
000000000001702c	b.eq	0x16ecc
0000000000017030	b	0x17010
0000000000017034	mov	w10, #0x0
0000000000017038	add	w11, w9, w10
000000000001703c	cmp	w11, #0x0
0000000000017040	cinc	w11, w11, lt
0000000000017044	asr	w11, w11, #1
0000000000017048	sbfiz	x12, x11, #4, #32
000000000001704c	ldr	w12, [x8, x12]
0000000000017050	cmp	w12, #0x41
0000000000017054	csinc	w10, w10, w11, ge
0000000000017058	csel	w9, w9, w11, lt
000000000001705c	cmp	w10, w9
0000000000017060	b.lt	0x17038
0000000000017064	b	0x17088
0000000000017068	sxtw	x9, w10
000000000001706c	lsl	x9, x9, #4
0000000000017070	ldr	w8, [x8, x9]
0000000000017074	cmp	w8, #0x41
0000000000017078	b.ne	0x17010
000000000001707c	b	0x16ecc
0000000000017080	mov	w10, #0x0
0000000000017084	b	0x17088
0000000000017088	sxtw	x9, w10
000000000001708c	add	x8, x8, x9, lsl #4
0000000000017090	ldr	x8, [x8, #0x8]
0000000000017094	ldr	x8, [x8, #0x10]
0000000000017098	mov	x0, x20
000000000001709c	blr	x8
00000000000170a0	cmp	w24, w0
00000000000170a4	b.ne	0x170d0
00000000000170a8	add	x1, x23, #0x18
00000000000170ac	ldr	x8, [x20]
00000000000170b0	and	x8, x8, #0xfffffffffffffffc
00000000000170b4	ldr	x8, [x8]
00000000000170b8	ldr	w9, [x8, #0x3c]
00000000000170bc	ldr	x8, [x8, #0x40]
00000000000170c0	tbnz	w9, #0x1f, 0x170d8
00000000000170c4	mov	w10, #0x41
00000000000170c8	and	x9, x9, x10
00000000000170cc	b	0x1715c
00000000000170d0	mov	w8, #0x0
00000000000170d4	b	0x17180
00000000000170d8	neg	w10, w9
00000000000170dc	mvn	w9, w9
00000000000170e0	cmp	w10, #0x9
00000000000170e4	b.ge	0x1711c
00000000000170e8	cmp	w10, #0x2
00000000000170ec	b.lt	0x17150
00000000000170f0	mov	x10, #0x0
00000000000170f4	mov	x11, x8
00000000000170f8	ldr	w12, [x11]
00000000000170fc	cmp	w12, #0x40
0000000000017100	b.gt	0x17158
0000000000017104	add	x10, x10, #0x1
0000000000017108	add	x11, x11, #0x10
000000000001710c	cmp	x9, x10
0000000000017110	b.ne	0x170f8
0000000000017114	mov	x10, x9
0000000000017118	b	0x17158
000000000001711c	mov	w10, #0x0
0000000000017120	add	w11, w9, w10
0000000000017124	cmp	w11, #0x0
0000000000017128	cinc	w11, w11, lt
000000000001712c	asr	w11, w11, #1
0000000000017130	sbfiz	x12, x11, #4, #32
0000000000017134	ldr	w12, [x8, x12]
0000000000017138	cmp	w12, #0x41
000000000001713c	csinc	w10, w10, w11, ge
0000000000017140	csel	w9, w9, w11, lt
0000000000017144	cmp	w10, w9
0000000000017148	b.lt	0x17120
000000000001714c	b	0x17158
0000000000017150	mov	w10, #0x0
0000000000017154	b	0x17158
0000000000017158	sxtw	x9, w10
000000000001715c	add	x8, x8, x9, lsl #4
0000000000017160	ldr	x8, [x8, #0x8]
0000000000017164	ldr	x8, [x8]
0000000000017168	mov	x0, x20
000000000001716c	blr	x8
0000000000017170	mov	x1, x0
0000000000017174	mov	x0, x19
0000000000017178	bl	"_kfun:kotlin.collections.HashMap#containsAllEntries(kotlin.collections.Collection<*>){}kotlin.Boolean"
000000000001717c	mov	x8, x0
0000000000017180	mov	x0, x21
0000000000017184	blr	x22
0000000000017188	ldr	x9, [x0]
000000000001718c	ldr	x10, [sp, #0x8]
0000000000017190	str	x10, [x9, #0x110]
0000000000017194	mov	x0, x8
0000000000017198	ldp	x29, x30, [sp, #0x50]
000000000001719c	ldp	x20, x19, [sp, #0x40]
00000000000171a0	ldp	x22, x21, [sp, #0x30]
00000000000171a4	ldp	x24, x23, [sp, #0x20]
00000000000171a8	add	sp, sp, #0x60
00000000000171ac	ret
_kfun:kotlin.collections.HashMap#hashCode(){}kotlin.Int:
00000000000171b0	sub	sp, sp, #0xb0
00000000000171b4	stp	x26, x25, [sp, #0x60]
00000000000171b8	stp	x24, x23, [sp, #0x70]
00000000000171bc	stp	x22, x21, [sp, #0x80]
00000000000171c0	stp	x20, x19, [sp, #0x90]
00000000000171c4	stp	x29, x30, [sp, #0xa0]
00000000000171c8	add	x29, sp, #0xa0
00000000000171cc	mov	x19, x0
00000000000171d0	movi.16b	v0, #0x0
00000000000171d4	stp	q0, q0, [sp]
00000000000171d8	mov	x8, sp
00000000000171dc	add	x20, x8, #0x18
00000000000171e0	adrp	x0, 99 ; 0x7a000
00000000000171e4	add	x0, x0, #0x2c0
00000000000171e8	ldr	x9, [x0]
00000000000171ec	blr	x9
00000000000171f0	ldr	x23, [x0]
00000000000171f4	ldr	x9, [x23, #0x110]
00000000000171f8	str	x8, [x23, #0x110]
00000000000171fc	mov	x8, #0x400000000
0000000000017200	stp	x9, x8, [sp, #0x8]
0000000000017204	adr	x24, #0x7d085
0000000000017208	nop
000000000001720c	ldarb	w8, [x24]
0000000000017210	tbz	w8, #0x0, 0x17218
0000000000017214	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017218	mov	x0, x19
000000000001721c	mov	x1, x20
0000000000017220	bl	"_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>"
0000000000017224	mov	x20, x0
0000000000017228	mov	w19, #0x0
000000000001722c	add	x25, sp, #0x20
0000000000017230	mov	x26, #0x800000000
0000000000017234	b	0x17268
0000000000017238	ldr	x8, [x0]
000000000001723c	and	x8, x8, #0xfffffffffffffffc
0000000000017240	ldr	x8, [x8]
0000000000017244	ldr	x8, [x8, #0x78]
0000000000017248	blr	x8
000000000001724c	mov	x22, x0
0000000000017250	mov	x0, x20
0000000000017254	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
0000000000017258	ldr	x8, [sp, #0x28]
000000000001725c	str	x8, [x23, #0x110]
0000000000017260	eor	w8, w21, w22
0000000000017264	add	w19, w19, w8
0000000000017268	ldr	w8, [x20, #0x10]
000000000001726c	ldr	x9, [x20, #0x8]
0000000000017270	ldr	w9, [x9, #0x44]
0000000000017274	cmp	w8, w9
0000000000017278	b.ge	0x1734c
000000000001727c	ldarb	w8, [x24]
0000000000017280	tbz	w8, #0x0, 0x17288
0000000000017284	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017288	movi.16b	v0, #0x0
000000000001728c	stp	q0, q0, [sp, #0x20]
0000000000017290	stp	q0, q0, [sp, #0x40]
0000000000017294	ldr	x8, [x23, #0x110]
0000000000017298	str	x25, [x23, #0x110]
000000000001729c	stp	x8, x26, [sp, #0x28]
00000000000172a0	ldr	w8, [x20, #0x10]
00000000000172a4	ldr	x9, [x20, #0x8]
00000000000172a8	ldr	w10, [x9, #0x44]
00000000000172ac	cmp	w8, w10
00000000000172b0	b.ge	0x17378
00000000000172b4	add	w10, w8, #0x1
00000000000172b8	stp	w10, w8, [x20, #0x10]
00000000000172bc	ldr	x8, [x9, #0x8]
00000000000172c0	str	x8, [sp, #0x40]
00000000000172c4	ldrsw	x9, [x20, #0x14]
00000000000172c8	ldr	w10, [x8, #0x8]
00000000000172cc	cmp	w10, w9
00000000000172d0	b.ls	0x17374
00000000000172d4	add	x8, x8, x9, lsl #3
00000000000172d8	ldr	x0, [x8, #0x10]
00000000000172dc	str	x0, [sp, #0x48]
00000000000172e0	cbz	x0, 0x17310
00000000000172e4	ldr	x8, [x0]
00000000000172e8	and	x8, x8, #0xfffffffffffffffc
00000000000172ec	ldr	x8, [x8]
00000000000172f0	ldr	x8, [x8, #0x78]
00000000000172f4	blr	x8
00000000000172f8	mov	x21, x0
00000000000172fc	ldr	x8, [x20, #0x8]
0000000000017300	ldr	x8, [x8, #0x10]
0000000000017304	str	x8, [sp, #0x50]
0000000000017308	cbnz	x8, 0x17324
000000000001730c	b	0x173b0
0000000000017310	mov	w21, #0x0
0000000000017314	ldr	x8, [x20, #0x8]
0000000000017318	ldr	x8, [x8, #0x10]
000000000001731c	str	x8, [sp, #0x50]
0000000000017320	cbz	x8, 0x173b0
0000000000017324	ldrsw	x9, [x20, #0x14]
0000000000017328	ldr	w10, [x8, #0x8]
000000000001732c	cmp	w10, w9
0000000000017330	b.ls	0x17374
0000000000017334	add	x8, x8, x9, lsl #3
0000000000017338	ldr	x0, [x8, #0x10]
000000000001733c	str	x0, [sp, #0x58]
0000000000017340	cbnz	x0, 0x17238
0000000000017344	mov	w22, #0x0
0000000000017348	b	0x17250
000000000001734c	ldr	x8, [sp, #0x8]
0000000000017350	str	x8, [x23, #0x110]
0000000000017354	mov	x0, x19
0000000000017358	ldp	x29, x30, [sp, #0xa0]
000000000001735c	ldp	x20, x19, [sp, #0x90]
0000000000017360	ldp	x22, x21, [sp, #0x80]
0000000000017364	ldp	x24, x23, [sp, #0x70]
0000000000017368	ldp	x26, x25, [sp, #0x60]
000000000001736c	add	sp, sp, #0xb0
0000000000017370	ret
0000000000017374	bl	_ThrowArrayIndexOutOfBoundsException
0000000000017378	ldr	x8, [x23, #0x118]
000000000001737c	add	x0, x8, #0x70
0000000000017380	mov	w1, #0x38
0000000000017384	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017388	mov	x19, x0
000000000001738c	adr	x8, #0x49e74
0000000000017390	nop
0000000000017394	str	x8, [x19, #0x10]!
0000000000017398	stur	xzr, [x19, #-0x8]
000000000001739c	str	x19, [sp, #0x38]
00000000000173a0	mov	x0, x19
00000000000173a4	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
00000000000173a8	mov	x0, x19
00000000000173ac	bl	_ThrowException
00000000000173b0	bl	_ThrowNullPointerException
_kfun:kotlin.collections.HashMap#toString(){}kotlin.String:
00000000000173b4	sub	sp, sp, #0x170
00000000000173b8	stp	x28, x27, [sp, #0x110]
00000000000173bc	stp	x26, x25, [sp, #0x120]
00000000000173c0	stp	x24, x23, [sp, #0x130]
00000000000173c4	stp	x22, x21, [sp, #0x140]
00000000000173c8	stp	x20, x19, [sp, #0x150]
00000000000173cc	stp	x29, x30, [sp, #0x160]
00000000000173d0	add	x29, sp, #0x160
00000000000173d4	str	x1, [sp]
00000000000173d8	mov	x23, x0
00000000000173dc	add	x19, sp, #0x80
00000000000173e0	movi.16b	v0, #0x0
00000000000173e4	stp	q0, q0, [sp, #0x40]
00000000000173e8	stp	q0, q0, [sp, #0x60]
00000000000173ec	add	x8, sp, #0x40
00000000000173f0	add	x24, x8, #0x20
00000000000173f4	add	x20, x8, #0x30
00000000000173f8	add	x21, x8, #0x28
00000000000173fc	stp	xzr, xzr, [sp, #0x30]
0000000000017400	adr	x9, #0x4d790
0000000000017404	nop
0000000000017408	orr	x9, x9, #0x3
000000000001740c	str	x9, [sp, #0x28]
0000000000017410	adrp	x0, 99 ; 0x7a000
0000000000017414	add	x0, x0, #0x2c0
0000000000017418	ldr	x9, [x0]
000000000001741c	blr	x9
0000000000017420	ldr	x22, [x0]
0000000000017424	ldr	x9, [x22, #0x110]
0000000000017428	str	x8, [x22, #0x110]
000000000001742c	mov	x8, #0x800000000
0000000000017430	stp	x9, x8, [sp, #0x48]
0000000000017434	adr	x8, #0x7ce55
0000000000017438	nop
000000000001743c	ldarb	w8, [x8]
0000000000017440	tbz	w8, #0x0, 0x17448
0000000000017444	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017448	ldr	w8, [x23, #0x4c]
000000000001744c	add	w8, w8, w8, lsl #1
0000000000017450	add	w1, w8, #0x2
0000000000017454	add	x8, sp, #0x28
0000000000017458	str	x8, [sp, #0x58]
000000000001745c	add	x0, sp, #0x28
0000000000017460	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000017464	adr	x1, #0x5727c
0000000000017468	nop
000000000001746c	add	x0, sp, #0x28
0000000000017470	mov	x2, x24
0000000000017474	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000017478	mov	x0, x23
000000000001747c	mov	x1, x21
0000000000017480	bl	"_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>"
0000000000017484	mov	x21, x0
0000000000017488	mov	w27, #0x0
000000000001748c	add	x9, x19, #0x30
0000000000017490	add	x8, x19, #0x38
0000000000017494	stp	x8, x9, [sp, #0x18]
0000000000017498	add	x24, x19, #0x40
000000000001749c	add	x25, x19, #0x48
00000000000174a0	add	x9, x19, #0x60
00000000000174a4	add	x8, x19, #0x68
00000000000174a8	stp	x8, x9, [sp, #0x8]
00000000000174ac	add	x28, x19, #0x70
00000000000174b0	mov	x26, #0xf00000000
00000000000174b4	b	0x174dc
00000000000174b8	mov	x1, #0x0
00000000000174bc	add	x0, sp, #0x28
00000000000174c0	mov	x2, x28
00000000000174c4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000174c8	mov	x0, x21
00000000000174cc	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
00000000000174d0	ldr	x8, [sp, #0x88]
00000000000174d4	str	x8, [x22, #0x110]
00000000000174d8	add	w27, w27, #0x1
00000000000174dc	ldr	w8, [x21, #0x10]
00000000000174e0	ldr	x9, [x21, #0x8]
00000000000174e4	ldr	w9, [x9, #0x44]
00000000000174e8	cmp	w8, w9
00000000000174ec	b.ge	0x17688
00000000000174f0	adr	x8, #0x7cd99
00000000000174f4	nop
00000000000174f8	ldarb	w8, [x8]
00000000000174fc	tbz	w8, #0x0, 0x17504
0000000000017500	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017504	cmp	w27, #0x1
0000000000017508	b.lt	0x17520
000000000001750c	add	x0, sp, #0x28
0000000000017510	adr	x1, #0x56ab0
0000000000017514	nop
0000000000017518	mov	x2, x20
000000000001751c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000017520	movi.16b	v0, #0x0
0000000000017524	stp	q0, q0, [sp, #0x80]
0000000000017528	str	xzr, [sp, #0xf0]
000000000001752c	stp	q0, q0, [x19, #0x50]
0000000000017530	stp	q0, q0, [x19, #0x30]
0000000000017534	str	q0, [sp, #0xa0]
0000000000017538	ldr	x8, [x22, #0x110]
000000000001753c	str	x19, [x22, #0x110]
0000000000017540	stp	x8, x26, [sp, #0x88]
0000000000017544	ldr	w8, [x21, #0x10]
0000000000017548	ldr	x9, [x21, #0x8]
000000000001754c	ldr	w10, [x9, #0x44]
0000000000017550	cmp	w8, w10
0000000000017554	b.ge	0x176e0
0000000000017558	add	w10, w8, #0x1
000000000001755c	stp	w10, w8, [x21, #0x10]
0000000000017560	ldr	x8, [x9, #0x8]
0000000000017564	str	x8, [sp, #0xa0]
0000000000017568	ldrsw	x9, [x21, #0x14]
000000000001756c	ldr	w10, [x8, #0x8]
0000000000017570	cmp	w10, w9
0000000000017574	b.ls	0x176dc
0000000000017578	add	x8, x8, x9, lsl #3
000000000001757c	ldr	x23, [x8, #0x10]
0000000000017580	str	x23, [sp, #0xa8]
0000000000017584	cbz	x23, 0x175bc
0000000000017588	ldr	x1, [x21, #0x8]
000000000001758c	ldr	x8, [x23]
0000000000017590	and	x8, x8, #0xfffffffffffffffc
0000000000017594	ldr	x8, [x8]
0000000000017598	ldr	x8, [x8, #0x70]
000000000001759c	mov	x0, x23
00000000000175a0	blr	x8
00000000000175a4	cbz	w0, 0x175c4
00000000000175a8	add	x0, sp, #0x28
00000000000175ac	adr	x1, #0x57174
00000000000175b0	nop
00000000000175b4	ldr	x2, [sp, #0x20]
00000000000175b8	b	0x175ec
00000000000175bc	mov	x1, #0x0
00000000000175c0	b	0x175e4
00000000000175c4	ldr	x8, [x23]
00000000000175c8	and	x8, x8, #0xfffffffffffffffc
00000000000175cc	ldr	x8, [x8]
00000000000175d0	ldr	x8, [x8, #0x80]
00000000000175d4	mov	x0, x23
00000000000175d8	ldr	x1, [sp, #0x18]
00000000000175dc	blr	x8
00000000000175e0	mov	x1, x0
00000000000175e4	add	x0, sp, #0x28
00000000000175e8	mov	x2, x24
00000000000175ec	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000175f0	add	x0, sp, #0x28
00000000000175f4	mov	w1, #0x3d
00000000000175f8	mov	x2, x25
00000000000175fc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Char){}kotlin.text.StringBuilder"
0000000000017600	ldr	x8, [x21, #0x8]
0000000000017604	ldr	x8, [x8, #0x10]
0000000000017608	str	x8, [sp, #0xd0]
000000000001760c	cbz	x8, 0x17718
0000000000017610	ldrsw	x9, [x21, #0x14]
0000000000017614	ldr	w10, [x8, #0x8]
0000000000017618	cmp	w10, w9
000000000001761c	b.ls	0x176dc
0000000000017620	add	x8, x8, x9, lsl #3
0000000000017624	ldr	x23, [x8, #0x10]
0000000000017628	str	x23, [sp, #0xd8]
000000000001762c	cbz	x23, 0x174b8
0000000000017630	ldr	x1, [x21, #0x8]
0000000000017634	ldr	x8, [x23]
0000000000017638	and	x8, x8, #0xfffffffffffffffc
000000000001763c	ldr	x8, [x8]
0000000000017640	ldr	x8, [x8, #0x70]
0000000000017644	mov	x0, x23
0000000000017648	blr	x8
000000000001764c	cbz	w0, 0x17664
0000000000017650	add	x0, sp, #0x28
0000000000017654	adr	x1, #0x570cc
0000000000017658	nop
000000000001765c	ldr	x2, [sp, #0x10]
0000000000017660	b	0x174c4
0000000000017664	ldr	x8, [x23]
0000000000017668	and	x8, x8, #0xfffffffffffffffc
000000000001766c	ldr	x8, [x8]
0000000000017670	ldr	x8, [x8, #0x80]
0000000000017674	mov	x0, x23
0000000000017678	ldr	x1, [sp, #0x8]
000000000001767c	blr	x8
0000000000017680	mov	x1, x0
0000000000017684	b	0x174bc
0000000000017688	add	x8, sp, #0x40
000000000001768c	add	x2, x8, #0x38
0000000000017690	adr	x1, #0x57070
0000000000017694	nop
0000000000017698	add	x0, sp, #0x28
000000000001769c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000176a0	add	x0, sp, #0x28
00000000000176a4	ldr	x19, [sp]
00000000000176a8	mov	x1, x19
00000000000176ac	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
00000000000176b0	str	x0, [x19]
00000000000176b4	ldr	x8, [sp, #0x48]
00000000000176b8	str	x8, [x22, #0x110]
00000000000176bc	ldp	x29, x30, [sp, #0x160]
00000000000176c0	ldp	x20, x19, [sp, #0x150]
00000000000176c4	ldp	x22, x21, [sp, #0x140]
00000000000176c8	ldp	x24, x23, [sp, #0x130]
00000000000176cc	ldp	x26, x25, [sp, #0x120]
00000000000176d0	ldp	x28, x27, [sp, #0x110]
00000000000176d4	add	sp, sp, #0x170
00000000000176d8	ret
00000000000176dc	bl	_ThrowArrayIndexOutOfBoundsException
00000000000176e0	ldr	x8, [x22, #0x118]
00000000000176e4	add	x0, x8, #0x70
00000000000176e8	mov	w1, #0x38
00000000000176ec	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000176f0	mov	x19, x0
00000000000176f4	adr	x8, #0x49b0c
00000000000176f8	nop
00000000000176fc	str	x8, [x19, #0x10]!
0000000000017700	stur	xzr, [x19, #-0x8]
0000000000017704	str	x19, [sp, #0x98]
0000000000017708	mov	x0, x19
000000000001770c	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
0000000000017710	mov	x0, x19
0000000000017714	bl	_ThrowException
0000000000017718	bl	_ThrowNullPointerException
_kfun:kotlin.collections.HashMap#checkIsMutable(){}:
000000000001771c	sub	sp, sp, #0x40
0000000000017720	stp	x20, x19, [sp, #0x20]
0000000000017724	stp	x29, x30, [sp, #0x30]
0000000000017728	add	x29, sp, #0x30
000000000001772c	mov	x19, x0
0000000000017730	movi.16b	v0, #0x0
0000000000017734	stp	q0, q0, [sp]
0000000000017738	adrp	x0, 99 ; 0x7a000
000000000001773c	add	x0, x0, #0x2c0
0000000000017740	ldr	x8, [x0]
0000000000017744	blr	x8
0000000000017748	ldr	x20, [x0]
000000000001774c	ldr	x8, [x20, #0x110]
0000000000017750	mov	x9, sp
0000000000017754	str	x9, [x20, #0x110]
0000000000017758	mov	x9, #0x400000000
000000000001775c	stp	x8, x9, [sp, #0x8]
0000000000017760	adr	x8, #0x7cb29
0000000000017764	nop
0000000000017768	ldarb	w8, [x8]
000000000001776c	tbz	w8, #0x0, 0x17774
0000000000017770	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017774	ldrb	w8, [x19, #0x50]
0000000000017778	cmp	w8, #0x1
000000000001777c	b.eq	0x17798
0000000000017780	ldr	x8, [sp, #0x8]
0000000000017784	str	x8, [x20, #0x110]
0000000000017788	ldp	x29, x30, [sp, #0x30]
000000000001778c	ldp	x20, x19, [sp, #0x20]
0000000000017790	add	sp, sp, #0x40
0000000000017794	ret
0000000000017798	ldr	x8, [x20, #0x118]
000000000001779c	add	x0, x8, #0x70
00000000000177a0	mov	w1, #0x38
00000000000177a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000177a8	mov	x19, x0
00000000000177ac	adr	x8, #0x49d74
00000000000177b0	nop
00000000000177b4	str	x8, [x19, #0x10]!
00000000000177b8	stur	xzr, [x19, #-0x8]
00000000000177bc	str	x19, [sp, #0x18]
00000000000177c0	mov	x0, x19
00000000000177c4	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
00000000000177c8	mov	x0, x19
00000000000177cc	bl	_ThrowException
_kfun:kotlin.collections.HashMap.ensureExtraCapacity#internal:
00000000000177d0	sub	sp, sp, #0xb0
00000000000177d4	stp	x24, x23, [sp, #0x70]
00000000000177d8	stp	x22, x21, [sp, #0x80]
00000000000177dc	stp	x20, x19, [sp, #0x90]
00000000000177e0	stp	x29, x30, [sp, #0xa0]
00000000000177e4	add	x29, sp, #0xa0
00000000000177e8	mov	x20, x1
00000000000177ec	mov	x19, x0
00000000000177f0	adr	x8, #0x7ca99
00000000000177f4	nop
00000000000177f8	ldarb	w8, [x8]
00000000000177fc	tbz	w8, #0x0, 0x17804
0000000000017800	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017804	ldr	w8, [x19, #0x44]
0000000000017808	add	w8, w8, w20
000000000001780c	movi.16b	v0, #0x0
0000000000017810	stp	q0, q0, [sp]
0000000000017814	stp	q0, q0, [sp, #0x30]
0000000000017818	str	q0, [sp, #0x20]
000000000001781c	mov	x24, sp
0000000000017820	adrp	x20, 99 ; 0x7a000
0000000000017824	add	x20, x20, #0x2c0
0000000000017828	ldr	x23, [x20]
000000000001782c	mov	x0, x20
0000000000017830	blr	x23
0000000000017834	ldr	x9, [x0]
0000000000017838	ldr	x10, [x9, #0x110]
000000000001783c	str	x24, [x9, #0x110]
0000000000017840	mov	x9, #0xa00000000
0000000000017844	stp	x10, x9, [sp, #0x8]
0000000000017848	tbnz	w8, #0x1f, 0x179ec
000000000001784c	stp	q0, q0, [sp, #0x50]
0000000000017850	mov	x0, x20
0000000000017854	blr	x23
0000000000017858	ldr	x10, [x0]
000000000001785c	ldr	x9, [x10, #0x110]
0000000000017860	add	x11, sp, #0x50
0000000000017864	str	x11, [x10, #0x110]
0000000000017868	ldr	x12, [x19, #0x8]
000000000001786c	ldr	w12, [x12, #0x8]
0000000000017870	str	x9, [x10, #0x110]
0000000000017874	cmp	w12, w8
0000000000017878	b.ge	0x17958
000000000001787c	add	x2, x24, #0x28
0000000000017880	add	x21, x24, #0x48
0000000000017884	movi.16b	v0, #0x0
0000000000017888	stp	q0, q0, [sp, #0x50]
000000000001788c	str	x11, [x10, #0x110]
0000000000017890	ldr	x10, [x19, #0x8]
0000000000017894	ldr	w10, [x10, #0x8]
0000000000017898	mov	x0, x20
000000000001789c	blr	x23
00000000000178a0	ldr	x11, [x0]
00000000000178a4	str	x9, [x11, #0x110]
00000000000178a8	add	w9, w10, w10, lsl #1
00000000000178ac	cmp	w9, #0x0
00000000000178b0	cinc	w9, w9, lt
00000000000178b4	asr	w9, w9, #1
00000000000178b8	cmp	w9, w8
00000000000178bc	csel	w22, w8, w9, lt
00000000000178c0	ldr	x0, [x19, #0x8]
00000000000178c4	str	x0, [sp, #0x20]
00000000000178c8	mov	x1, x22
00000000000178cc	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0>"
00000000000178d0	mov	x8, x0
00000000000178d4	str	x0, [x19, #0x8]
00000000000178d8	ldr	x0, [x19, #0x10]
00000000000178dc	stp	x8, x0, [sp, #0x28]
00000000000178e0	cbz	x0, 0x178f4
00000000000178e4	add	x2, x24, #0x38
00000000000178e8	mov	x1, x22
00000000000178ec	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0>"
00000000000178f0	str	x0, [sp, #0x38]
00000000000178f4	str	x0, [x19, #0x10]
00000000000178f8	ldr	x0, [x19, #0x18]
00000000000178fc	str	x0, [sp, #0x40]
0000000000017900	mov	x1, x22
0000000000017904	mov	x2, x21
0000000000017908	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.IntArray(kotlin.Int;kotlin.Int){}kotlin.IntArray"
000000000001790c	str	x0, [sp, #0x48]
0000000000017910	str	x0, [x19, #0x18]
0000000000017914	mov	x0, x22
0000000000017918	bl	"_kfun:kotlin.collections.HashMap.Companion.computeHashSize#internal"
000000000001791c	mov	x1, x0
0000000000017920	movi.16b	v0, #0x0
0000000000017924	stp	q0, q0, [sp, #0x50]
0000000000017928	mov	x0, x20
000000000001792c	blr	x23
0000000000017930	ldr	x8, [x0]
0000000000017934	ldr	x9, [x8, #0x110]
0000000000017938	add	x10, sp, #0x50
000000000001793c	str	x10, [x8, #0x110]
0000000000017940	ldr	x10, [x19, #0x20]
0000000000017944	ldr	w10, [x10, #0x8]
0000000000017948	str	x9, [x8, #0x110]
000000000001794c	cmp	w1, w10
0000000000017950	b.gt	0x179b8
0000000000017954	b	0x179c0
0000000000017958	ldr	w12, [x19, #0x44]
000000000001795c	ldr	w13, [x19, #0x4c]
0000000000017960	movi.16b	v0, #0x0
0000000000017964	stp	q0, q0, [sp, #0x50]
0000000000017968	str	x11, [x10, #0x110]
000000000001796c	ldr	x10, [x19, #0x8]
0000000000017970	ldr	w11, [x10, #0x8]
0000000000017974	mov	x0, x20
0000000000017978	blr	x23
000000000001797c	ldr	x10, [x0]
0000000000017980	str	x9, [x10, #0x110]
0000000000017984	add	w8, w12, w8
0000000000017988	sub	w8, w8, w13
000000000001798c	cmp	w8, w11
0000000000017990	b.le	0x179c0
0000000000017994	stp	q0, q0, [sp, #0x50]
0000000000017998	add	x8, sp, #0x50
000000000001799c	str	x8, [x10, #0x110]
00000000000179a0	ldr	x8, [x19, #0x20]
00000000000179a4	ldr	w1, [x8, #0x8]
00000000000179a8	mov	x0, x20
00000000000179ac	blr	x23
00000000000179b0	ldr	x8, [x0]
00000000000179b4	str	x9, [x8, #0x110]
00000000000179b8	mov	x0, x19
00000000000179bc	bl	"_kfun:kotlin.collections.HashMap.rehash#internal"
00000000000179c0	mov	x0, x20
00000000000179c4	blr	x23
00000000000179c8	ldr	x8, [x0]
00000000000179cc	ldr	x9, [sp, #0x8]
00000000000179d0	str	x9, [x8, #0x110]
00000000000179d4	ldp	x29, x30, [sp, #0xa0]
00000000000179d8	ldp	x20, x19, [sp, #0x90]
00000000000179dc	ldp	x22, x21, [sp, #0x80]
00000000000179e0	ldp	x24, x23, [sp, #0x70]
00000000000179e4	add	sp, sp, #0xb0
00000000000179e8	ret
00000000000179ec	mov	x0, x20
00000000000179f0	blr	x23
00000000000179f4	ldr	x8, [x0]
00000000000179f8	ldr	x8, [x8, #0x118]
00000000000179fc	add	x0, x8, #0x70
0000000000017a00	mov	w1, #0x38
0000000000017a04	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017a08	mov	x19, x0
0000000000017a0c	adr	x8, #0x49ed4
0000000000017a10	nop
0000000000017a14	str	x8, [x19, #0x10]!
0000000000017a18	stur	xzr, [x19, #-0x8]
0000000000017a1c	str	x19, [sp, #0x18]
0000000000017a20	mov	x0, x19
0000000000017a24	mov	x1, #0x0
0000000000017a28	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000017a2c	mov	x0, x19
0000000000017a30	bl	_ThrowException
_kfun:kotlin.collections.HashMap.allocateValuesArray#internal:
0000000000017a34	sub	sp, sp, #0x80
0000000000017a38	stp	x22, x21, [sp, #0x50]
0000000000017a3c	stp	x20, x19, [sp, #0x60]
0000000000017a40	stp	x29, x30, [sp, #0x70]
0000000000017a44	add	x29, sp, #0x70
0000000000017a48	mov	x19, x1
0000000000017a4c	mov	x20, x0
0000000000017a50	movi.16b	v0, #0x0
0000000000017a54	stp	q0, q0, [sp]
0000000000017a58	str	q0, [sp, #0x20]
0000000000017a5c	adrp	x0, 99 ; 0x7a000
0000000000017a60	add	x0, x0, #0x2c0
0000000000017a64	ldr	x8, [x0]
0000000000017a68	blr	x8
0000000000017a6c	ldr	x21, [x0]
0000000000017a70	ldr	x8, [x21, #0x110]
0000000000017a74	mov	x9, sp
0000000000017a78	str	x9, [x21, #0x110]
0000000000017a7c	mov	x9, #0x600000000
0000000000017a80	stp	x8, x9, [sp, #0x8]
0000000000017a84	adr	x8, #0x7c805
0000000000017a88	nop
0000000000017a8c	ldarb	w8, [x8]
0000000000017a90	tbz	w8, #0x0, 0x17a98
0000000000017a94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017a98	ldr	x0, [x20, #0x10]
0000000000017a9c	str	x0, [sp, #0x18]
0000000000017aa0	cbnz	x0, 0x17afc
0000000000017aa4	movi.16b	v0, #0x0
0000000000017aa8	stp	q0, q0, [sp, #0x30]
0000000000017aac	ldr	x8, [x21, #0x110]
0000000000017ab0	add	x9, sp, #0x30
0000000000017ab4	str	x9, [x21, #0x110]
0000000000017ab8	ldr	x9, [x20, #0x8]
0000000000017abc	ldr	w22, [x9, #0x8]
0000000000017ac0	str	x8, [x21, #0x110]
0000000000017ac4	tbnz	w22, #0x1f, 0x17b1c
0000000000017ac8	ldr	x8, [x21, #0x118]
0000000000017acc	lsl	x9, x22, #3
0000000000017ad0	add	x9, x9, #0x1f
0000000000017ad4	and	x1, x9, #0xffffffff8
0000000000017ad8	add	x0, x8, #0x70
0000000000017adc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017ae0	adr	x8, #0x490a0
0000000000017ae4	nop
0000000000017ae8	stp	x8, xzr, [x0, #0x10]!
0000000000017aec	stur	xzr, [x0, #-0x8]
0000000000017af0	str	w22, [x0, #0x8]
0000000000017af4	str	x0, [sp, #0x28]
0000000000017af8	str	x0, [x20, #0x10]
0000000000017afc	str	x0, [x19]
0000000000017b00	ldr	x8, [sp, #0x8]
0000000000017b04	str	x8, [x21, #0x110]
0000000000017b08	ldp	x29, x30, [sp, #0x70]
0000000000017b0c	ldp	x20, x19, [sp, #0x60]
0000000000017b10	ldp	x22, x21, [sp, #0x50]
0000000000017b14	add	sp, sp, #0x80
0000000000017b18	ret
0000000000017b1c	ldr	x8, [x21, #0x118]
0000000000017b20	add	x0, x8, #0x70
0000000000017b24	mov	w1, #0x38
0000000000017b28	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017b2c	mov	x19, x0
0000000000017b30	adr	x8, #0x498b0
0000000000017b34	nop
0000000000017b38	str	x8, [x19, #0x10]!
0000000000017b3c	stur	xzr, [x19, #-0x8]
0000000000017b40	str	x19, [sp, #0x20]
0000000000017b44	adr	x1, #0x564fc
0000000000017b48	nop
0000000000017b4c	mov	x0, x19
0000000000017b50	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000017b54	mov	x0, x19
0000000000017b58	bl	_ThrowException
_kfun:kotlin.collections.HashMap.rehash#internal:
0000000000017b5c	sub	sp, sp, #0x110
0000000000017b60	stp	x28, x27, [sp, #0xb0]
0000000000017b64	stp	x26, x25, [sp, #0xc0]
0000000000017b68	stp	x24, x23, [sp, #0xd0]
0000000000017b6c	stp	x22, x21, [sp, #0xe0]
0000000000017b70	stp	x20, x19, [sp, #0xf0]
0000000000017b74	stp	x29, x30, [sp, #0x100]
0000000000017b78	add	x29, sp, #0x100
0000000000017b7c	mov	x20, x1
0000000000017b80	mov	x19, x0
0000000000017b84	movi.16b	v0, #0x0
0000000000017b88	stp	q0, q0, [sp]
0000000000017b8c	str	q0, [sp, #0x20]
0000000000017b90	adrp	x0, 99 ; 0x7a000
0000000000017b94	add	x0, x0, #0x2c0
0000000000017b98	ldr	x8, [x0]
0000000000017b9c	blr	x8
0000000000017ba0	ldr	x23, [x0]
0000000000017ba4	ldr	x8, [x23, #0x110]
0000000000017ba8	mov	x9, sp
0000000000017bac	str	x9, [x23, #0x110]
0000000000017bb0	mov	x9, #0x600000000
0000000000017bb4	stp	x8, x9, [sp, #0x8]
0000000000017bb8	adr	x24, #0x7c6d1
0000000000017bbc	nop
0000000000017bc0	ldarb	w8, [x24]
0000000000017bc4	tbz	w8, #0x0, 0x17bcc
0000000000017bc8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017bcc	ldr	w8, [x19, #0x44]
0000000000017bd0	ldr	w9, [x19, #0x4c]
0000000000017bd4	cmp	w8, w9
0000000000017bd8	b.le	0x17cc0
0000000000017bdc	mov	x25, #0x0
0000000000017be0	mov	w21, #0x0
0000000000017be4	movi.16b	v0, #0x0
0000000000017be8	stp	q0, q0, [sp, #0x30]
0000000000017bec	stp	q0, q0, [sp, #0x60]
0000000000017bf0	str	q0, [sp, #0x50]
0000000000017bf4	ldr	x8, [x23, #0x110]
0000000000017bf8	add	x9, sp, #0x30
0000000000017bfc	str	x9, [x23, #0x110]
0000000000017c00	mov	x9, #0xa00000000
0000000000017c04	stp	x8, x9, [sp, #0x38]
0000000000017c08	ldr	x22, [x19, #0x10]
0000000000017c0c	str	x22, [sp, #0x48]
0000000000017c10	add	x26, x22, #0x10
0000000000017c14	b	0x17c20
0000000000017c18	add	w21, w21, #0x1
0000000000017c1c	add	x25, x25, #0x1
0000000000017c20	ldrsw	x2, [x19, #0x44]
0000000000017c24	cmp	x25, x2
0000000000017c28	b.ge	0x17cc8
0000000000017c2c	ldarb	w8, [x24]
0000000000017c30	tbz	w8, #0x0, 0x17c38
0000000000017c34	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017c38	ldr	x8, [x19, #0x18]
0000000000017c3c	str	x8, [sp, #0x50]
0000000000017c40	ldr	w9, [x8, #0x8]
0000000000017c44	cmp	x25, x9
0000000000017c48	b.hs	0x17f68
0000000000017c4c	add	x8, x8, x25, lsl #2
0000000000017c50	ldr	w8, [x8, #0x10]
0000000000017c54	tbnz	w8, #0x1f, 0x17c1c
0000000000017c58	ldr	x8, [x19, #0x8]
0000000000017c5c	stp	x8, x8, [sp, #0x58]
0000000000017c60	ldr	w9, [x8, #0x8]
0000000000017c64	cmp	x25, x9
0000000000017c68	b.hs	0x17f68
0000000000017c6c	add	x10, x8, x25, lsl #3
0000000000017c70	ldr	x10, [x10, #0x10]
0000000000017c74	str	x10, [sp, #0x68]
0000000000017c78	cmp	w9, w21
0000000000017c7c	b.ls	0x17f68
0000000000017c80	add	x9, x8, #0x10
0000000000017c84	ldr	xzr, [x8]
0000000000017c88	str	x10, [x9, w21, sxtw #3]
0000000000017c8c	cbz	x22, 0x17c18
0000000000017c90	ldr	w8, [x22, #0x8]
0000000000017c94	cmp	x25, x8
0000000000017c98	b.hs	0x17f68
0000000000017c9c	add	x9, x22, x25, lsl #3
0000000000017ca0	ldr	x9, [x9, #0x10]
0000000000017ca4	str	x9, [sp, #0x70]
0000000000017ca8	cmp	w8, w21
0000000000017cac	b.ls	0x17f68
0000000000017cb0	sxtw	x8, w21
0000000000017cb4	ldr	xzr, [x22]
0000000000017cb8	str	x9, [x26, x8, lsl #3]
0000000000017cbc	b	0x17c18
0000000000017cc0	ldr	x8, [x23, #0x110]
0000000000017cc4	b	0x17cf8
0000000000017cc8	ldr	x0, [x19, #0x8]
0000000000017ccc	str	x0, [sp, #0x78]
0000000000017cd0	mov	x1, x21
0000000000017cd4	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}"
0000000000017cd8	cbz	x22, 0x17cec
0000000000017cdc	ldr	w2, [x19, #0x44]
0000000000017ce0	mov	x0, x22
0000000000017ce4	mov	x1, x21
0000000000017ce8	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}"
0000000000017cec	str	w21, [x19, #0x44]
0000000000017cf0	ldr	x8, [sp, #0x38]
0000000000017cf4	str	x8, [x23, #0x110]
0000000000017cf8	movi.16b	v0, #0x0
0000000000017cfc	stp	q0, q0, [sp, #0x80]
0000000000017d00	add	x9, sp, #0x80
0000000000017d04	str	x9, [x23, #0x110]
0000000000017d08	ldr	x10, [x19, #0x20]
0000000000017d0c	ldr	w10, [x10, #0x8]
0000000000017d10	str	x8, [x23, #0x110]
0000000000017d14	cmp	w10, w20
0000000000017d18	b.ne	0x17d68
0000000000017d1c	ldr	x21, [x19, #0x20]
0000000000017d20	str	x21, [sp, #0x20]
0000000000017d24	stp	q0, q0, [sp, #0x80]
0000000000017d28	str	x9, [x23, #0x110]
0000000000017d2c	ldr	x9, [x19, #0x20]
0000000000017d30	ldr	w20, [x9, #0x8]
0000000000017d34	str	x8, [x23, #0x110]
0000000000017d38	ldr	w2, [x21, #0x8]
0000000000017d3c	mov	w0, #0x0
0000000000017d40	mov	x1, x20
0000000000017d44	bl	_checkRangeIndexes
0000000000017d48	ldr	xzr, [x21]
0000000000017d4c	subs	w9, w20, #0x1
0000000000017d50	b.lt	0x17df8
0000000000017d54	add	x8, x21, #0x10
0000000000017d58	cmp	w9, #0x7
0000000000017d5c	b.hs	0x17dbc
0000000000017d60	mov	w9, #0x0
0000000000017d64	b	0x17de8
0000000000017d68	tbnz	w20, #0x1f, 0x17fb4
0000000000017d6c	ldr	x8, [x23, #0x118]
0000000000017d70	mov	w9, w20
0000000000017d74	lsl	x9, x9, #2
0000000000017d78	add	x9, x9, #0x1f
0000000000017d7c	and	x1, x9, #0x7fffffff8
0000000000017d80	add	x0, x8, #0x70
0000000000017d84	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017d88	adr	x8, #0x49038
0000000000017d8c	nop
0000000000017d90	stp	x8, xzr, [x0, #0x10]!
0000000000017d94	stur	xzr, [x0, #-0x8]
0000000000017d98	str	w20, [x0, #0x8]
0000000000017d9c	str	x0, [sp, #0x18]
0000000000017da0	str	x0, [x19, #0x20]
0000000000017da4	clz	w8, w20
0000000000017da8	cmp	w20, #0x0
0000000000017dac	mov	w9, #0x21
0000000000017db0	csinc	w8, w9, w8, eq
0000000000017db4	str	w8, [x19, #0x48]
0000000000017db8	b	0x17df8
0000000000017dbc	add	x10, x9, #0x1
0000000000017dc0	and	x9, x10, #0x1fffffff8
0000000000017dc4	movi.16b	v0, #0x0
0000000000017dc8	mov	x11, x8
0000000000017dcc	mov	x12, x9
0000000000017dd0	stp	q0, q0, [x11], #0x20
0000000000017dd4	subs	x12, x12, #0x8
0000000000017dd8	b.ne	0x17dd0
0000000000017ddc	cmp	x10, x9
0000000000017de0	b.eq	0x17df8
0000000000017de4	add	x8, x8, x9, lsl #2
0000000000017de8	sub	w9, w20, w9
0000000000017dec	str	wzr, [x8], #0x4
0000000000017df0	subs	w9, w9, #0x1
0000000000017df4	b.ne	0x17dec
0000000000017df8	mov	x21, #0x0
0000000000017dfc	add	x20, sp, #0x30
0000000000017e00	mov	x22, #0x800000000
0000000000017e04	add	x25, sp, #0x80
0000000000017e08	ldrsw	x8, [x19, #0x44]
0000000000017e0c	cmp	x21, x8
0000000000017e10	b.ge	0x17f40
0000000000017e14	ldarb	w8, [x24]
0000000000017e18	tbz	w8, #0x0, 0x17e20
0000000000017e1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017e20	movi.16b	v0, #0x0
0000000000017e24	stp	q0, q0, [sp, #0x30]
0000000000017e28	stp	q0, q0, [sp, #0x50]
0000000000017e2c	ldr	x8, [x23, #0x110]
0000000000017e30	str	x20, [x23, #0x110]
0000000000017e34	stp	x8, x22, [sp, #0x38]
0000000000017e38	ldr	x8, [x19, #0x8]
0000000000017e3c	str	x8, [sp, #0x48]
0000000000017e40	ldr	w9, [x8, #0x8]
0000000000017e44	cmp	x21, x9
0000000000017e48	b.hs	0x17f68
0000000000017e4c	add	x8, x8, x21, lsl #3
0000000000017e50	ldr	x0, [x8, #0x10]
0000000000017e54	str	x0, [sp, #0x50]
0000000000017e58	cbz	x0, 0x17e88
0000000000017e5c	ldr	x8, [x0]
0000000000017e60	and	x8, x8, #0xfffffffffffffffc
0000000000017e64	ldr	x8, [x8]
0000000000017e68	ldr	x8, [x8, #0x78]
0000000000017e6c	blr	x8
0000000000017e70	mov	w8, #0x79b9
0000000000017e74	movk	w8, #0x9e37, lsl #16
0000000000017e78	mul	w8, w0, w8
0000000000017e7c	ldr	w9, [x19, #0x48]
0000000000017e80	lsr	w28, w8, w9
0000000000017e84	b	0x17e8c
0000000000017e88	mov	w28, #0x0
0000000000017e8c	add	x27, x21, #0x1
0000000000017e90	ldr	w8, [x19, #0x40]
0000000000017e94	sub	w26, w8, #0x1
0000000000017e98	b	0x17ea4
0000000000017e9c	sub	w28, w28, #0x1
0000000000017ea0	sub	w26, w26, #0x1
0000000000017ea4	ldarb	w8, [x24]
0000000000017ea8	tbz	w8, #0x0, 0x17eb0
0000000000017eac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017eb0	ldr	x8, [x19, #0x20]
0000000000017eb4	str	x8, [sp, #0x58]
0000000000017eb8	ldr	w9, [x8, #0x8]
0000000000017ebc	cmp	w9, w28
0000000000017ec0	b.ls	0x17f68
0000000000017ec4	add	x9, x8, #0x10
0000000000017ec8	ldr	w10, [x9, w28, sxtw #2]
0000000000017ecc	cbz	w10, 0x17ef8
0000000000017ed0	tbnz	w26, #0x1f, 0x17f6c
0000000000017ed4	cbnz	w28, 0x17e9c
0000000000017ed8	movi.16b	v0, #0x0
0000000000017edc	stp	q0, q0, [sp, #0x80]
0000000000017ee0	ldr	x8, [x23, #0x110]
0000000000017ee4	str	x25, [x23, #0x110]
0000000000017ee8	ldr	x9, [x19, #0x20]
0000000000017eec	ldr	w28, [x9, #0x8]
0000000000017ef0	str	x8, [x23, #0x110]
0000000000017ef4	b	0x17e9c
0000000000017ef8	sxtw	x10, w28
0000000000017efc	str	x8, [sp, #0x60]
0000000000017f00	ldr	xzr, [x8]
0000000000017f04	str	w27, [x9, x10, lsl #2]
0000000000017f08	ldr	x8, [x19, #0x18]
0000000000017f0c	str	x8, [sp, #0x68]
0000000000017f10	ldr	w9, [x8, #0x8]
0000000000017f14	cmp	x21, x9
0000000000017f18	b.hs	0x17f68
0000000000017f1c	ldr	xzr, [x8]
0000000000017f20	add	x8, x8, x21, lsl #2
0000000000017f24	str	w28, [x8, #0x10]
0000000000017f28	ldr	x8, [sp, #0x38]
0000000000017f2c	str	x8, [x23, #0x110]
0000000000017f30	mov	x21, x27
0000000000017f34	ldrsw	x8, [x19, #0x44]
0000000000017f38	cmp	x21, x8
0000000000017f3c	b.lt	0x17e14
0000000000017f40	ldr	x8, [sp, #0x8]
0000000000017f44	str	x8, [x23, #0x110]
0000000000017f48	ldp	x29, x30, [sp, #0x100]
0000000000017f4c	ldp	x20, x19, [sp, #0xf0]
0000000000017f50	ldp	x22, x21, [sp, #0xe0]
0000000000017f54	ldp	x24, x23, [sp, #0xd0]
0000000000017f58	ldp	x26, x25, [sp, #0xc0]
0000000000017f5c	ldp	x28, x27, [sp, #0xb0]
0000000000017f60	add	sp, sp, #0x110
0000000000017f64	ret
0000000000017f68	bl	_ThrowArrayIndexOutOfBoundsException
0000000000017f6c	ldr	x8, [sp, #0x38]
0000000000017f70	str	x8, [x23, #0x110]
0000000000017f74	ldr	x8, [x23, #0x118]
0000000000017f78	add	x0, x8, #0x70
0000000000017f7c	mov	w1, #0x38
0000000000017f80	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017f84	mov	x19, x0
0000000000017f88	adr	x8, #0x494f8
0000000000017f8c	nop
0000000000017f90	str	x8, [x19, #0x10]!
0000000000017f94	stur	xzr, [x19, #-0x8]
0000000000017f98	str	x19, [sp, #0x28]
0000000000017f9c	adr	x1, #0x56bf4
0000000000017fa0	nop
0000000000017fa4	mov	x0, x19
0000000000017fa8	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000017fac	mov	x0, x19
0000000000017fb0	bl	_ThrowException
0000000000017fb4	bl	_ThrowIllegalArgumentException
_kfun:kotlin.collections.HashMap.findKey#internal:
0000000000017fb8	sub	sp, sp, #0xa0
0000000000017fbc	stp	x26, x25, [sp, #0x50]
0000000000017fc0	stp	x24, x23, [sp, #0x60]
0000000000017fc4	stp	x22, x21, [sp, #0x70]
0000000000017fc8	stp	x20, x19, [sp, #0x80]
0000000000017fcc	stp	x29, x30, [sp, #0x90]
0000000000017fd0	add	x29, sp, #0x90
0000000000017fd4	mov	x19, x1
0000000000017fd8	mov	x20, x0
0000000000017fdc	movi.16b	v0, #0x0
0000000000017fe0	stp	q0, q0, [sp]
0000000000017fe4	str	q0, [sp, #0x20]
0000000000017fe8	adrp	x0, 99 ; 0x7a000
0000000000017fec	add	x0, x0, #0x2c0
0000000000017ff0	ldr	x8, [x0]
0000000000017ff4	blr	x8
0000000000017ff8	ldr	x22, [x0]
0000000000017ffc	ldr	x8, [x22, #0x110]
0000000000018000	mov	x9, sp
0000000000018004	str	x9, [x22, #0x110]
0000000000018008	mov	x9, #0x600000000
000000000001800c	stp	x8, x9, [sp, #0x8]
0000000000018010	adr	x23, #0x7c279
0000000000018014	nop
0000000000018018	ldarb	w8, [x23]
000000000001801c	tbz	w8, #0x0, 0x18024
0000000000018020	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018024	cbz	x19, 0x18058
0000000000018028	ldr	x8, [x19]
000000000001802c	and	x8, x8, #0xfffffffffffffffc
0000000000018030	ldr	x8, [x8]
0000000000018034	ldr	x8, [x8, #0x78]
0000000000018038	mov	x0, x19
000000000001803c	blr	x8
0000000000018040	mov	w8, #0x79b9
0000000000018044	movk	w8, #0x9e37, lsl #16
0000000000018048	mul	w8, w0, w8
000000000001804c	ldr	w9, [x20, #0x48]
0000000000018050	lsr	w24, w8, w9
0000000000018054	b	0x1805c
0000000000018058	mov	w24, #0x0
000000000001805c	ldr	w8, [x20, #0x40]
0000000000018060	sub	w25, w8, #0x1
0000000000018064	add	x26, sp, #0x30
0000000000018068	b	0x18074
000000000001806c	sub	w24, w24, #0x1
0000000000018070	sub	w25, w25, #0x1
0000000000018074	ldarb	w8, [x23]
0000000000018078	tbz	w8, #0x0, 0x18080
000000000001807c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018080	ldr	x8, [x20, #0x20]
0000000000018084	str	x8, [sp, #0x18]
0000000000018088	ldr	w9, [x8, #0x8]
000000000001808c	cmp	w9, w24
0000000000018090	b.ls	0x18144
0000000000018094	add	x8, x8, w24, sxtw #2
0000000000018098	ldr	w8, [x8, #0x10]
000000000001809c	cbz	w8, 0x18118
00000000000180a0	subs	w21, w8, #0x1
00000000000180a4	b.lt	0x180f0
00000000000180a8	ldr	x8, [x20, #0x8]
00000000000180ac	str	x8, [sp, #0x20]
00000000000180b0	ldr	w9, [x8, #0x8]
00000000000180b4	cmp	w9, w21
00000000000180b8	b.ls	0x18144
00000000000180bc	add	x8, x8, w21, sxtw #3
00000000000180c0	ldr	x0, [x8, #0x10]
00000000000180c4	str	x0, [sp, #0x28]
00000000000180c8	cbz	x0, 0x180ec
00000000000180cc	ldr	x8, [x0]
00000000000180d0	and	x8, x8, #0xfffffffffffffffc
00000000000180d4	ldr	x8, [x8]
00000000000180d8	ldr	x8, [x8, #0x70]
00000000000180dc	mov	x1, x19
00000000000180e0	blr	x8
00000000000180e4	tbz	w0, #0x0, 0x180f0
00000000000180e8	b	0x1811c
00000000000180ec	cbz	x19, 0x1811c
00000000000180f0	tbnz	w25, #0x1f, 0x18118
00000000000180f4	cbnz	w24, 0x1806c
00000000000180f8	movi.16b	v0, #0x0
00000000000180fc	stp	q0, q0, [sp, #0x30]
0000000000018100	ldr	x8, [x22, #0x110]
0000000000018104	str	x26, [x22, #0x110]
0000000000018108	ldr	x9, [x20, #0x20]
000000000001810c	ldr	w24, [x9, #0x8]
0000000000018110	str	x8, [x22, #0x110]
0000000000018114	b	0x1806c
0000000000018118	mov	w21, #-0x1
000000000001811c	ldr	x8, [sp, #0x8]
0000000000018120	str	x8, [x22, #0x110]
0000000000018124	mov	x0, x21
0000000000018128	ldp	x29, x30, [sp, #0x90]
000000000001812c	ldp	x20, x19, [sp, #0x80]
0000000000018130	ldp	x22, x21, [sp, #0x70]
0000000000018134	ldp	x24, x23, [sp, #0x60]
0000000000018138	ldp	x26, x25, [sp, #0x50]
000000000001813c	add	sp, sp, #0xa0
0000000000018140	ret
0000000000018144	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.findValue#internal:
0000000000018148	sub	sp, sp, #0x70
000000000001814c	stp	x24, x23, [sp, #0x30]
0000000000018150	stp	x22, x21, [sp, #0x40]
0000000000018154	stp	x20, x19, [sp, #0x50]
0000000000018158	stp	x29, x30, [sp, #0x60]
000000000001815c	add	x29, sp, #0x60
0000000000018160	mov	x19, x1
0000000000018164	mov	x20, x0
0000000000018168	movi.16b	v0, #0x0
000000000001816c	stp	q0, q0, [sp]
0000000000018170	str	q0, [sp, #0x20]
0000000000018174	adrp	x0, 98 ; 0x7a000
0000000000018178	add	x0, x0, #0x2c0
000000000001817c	ldr	x8, [x0]
0000000000018180	blr	x8
0000000000018184	ldr	x22, [x0]
0000000000018188	ldr	x8, [x22, #0x110]
000000000001818c	mov	x9, sp
0000000000018190	str	x9, [x22, #0x110]
0000000000018194	mov	x9, #0x600000000
0000000000018198	stp	x8, x9, [sp, #0x8]
000000000001819c	adr	x23, #0x7c0ed
00000000000181a0	nop
00000000000181a4	ldarb	w8, [x23]
00000000000181a8	tbz	w8, #0x0, 0x181b0
00000000000181ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000181b0	ldr	w21, [x20, #0x44]
00000000000181b4	sub	w8, w21, #0x1
00000000000181b8	sxtw	x24, w8
00000000000181bc	b	0x181c8
00000000000181c0	cbz	x19, 0x1826c
00000000000181c4	sub	x24, x24, #0x1
00000000000181c8	tbnz	w24, #0x1f, 0x18244
00000000000181cc	ldarb	w8, [x23]
00000000000181d0	tbz	w8, #0x0, 0x181d8
00000000000181d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000181d8	ldr	x8, [x20, #0x18]
00000000000181dc	str	x8, [sp, #0x18]
00000000000181e0	ldr	w9, [x8, #0x8]
00000000000181e4	cmp	w9, w24
00000000000181e8	b.ls	0x18274
00000000000181ec	sub	w21, w21, #0x1
00000000000181f0	add	x8, x8, x24, lsl #2
00000000000181f4	ldr	w8, [x8, #0x10]
00000000000181f8	tbnz	w8, #0x1f, 0x181c4
00000000000181fc	ldr	x8, [x20, #0x10]
0000000000018200	str	x8, [sp, #0x20]
0000000000018204	cbz	x8, 0x18278
0000000000018208	ldr	w9, [x8, #0x8]
000000000001820c	cmp	w9, w24
0000000000018210	b.ls	0x18274
0000000000018214	add	x8, x8, x24, lsl #3
0000000000018218	ldr	x0, [x8, #0x10]
000000000001821c	str	x0, [sp, #0x28]
0000000000018220	cbz	x0, 0x181c0
0000000000018224	ldr	x8, [x0]
0000000000018228	and	x8, x8, #0xfffffffffffffffc
000000000001822c	ldr	x8, [x8]
0000000000018230	ldr	x8, [x8, #0x70]
0000000000018234	mov	x1, x19
0000000000018238	blr	x8
000000000001823c	tbz	w0, #0x0, 0x181c4
0000000000018240	b	0x18248
0000000000018244	mov	w21, #-0x1
0000000000018248	ldr	x8, [sp, #0x8]
000000000001824c	str	x8, [x22, #0x110]
0000000000018250	mov	x0, x21
0000000000018254	ldp	x29, x30, [sp, #0x60]
0000000000018258	ldp	x20, x19, [sp, #0x50]
000000000001825c	ldp	x22, x21, [sp, #0x40]
0000000000018260	ldp	x24, x23, [sp, #0x30]
0000000000018264	add	sp, sp, #0x70
0000000000018268	ret
000000000001826c	mov	x21, x24
0000000000018270	b	0x18248
0000000000018274	bl	_ThrowArrayIndexOutOfBoundsException
0000000000018278	bl	_ThrowNullPointerException
_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int:
000000000001827c	sub	sp, sp, #0xd0
0000000000018280	stp	x28, x27, [sp, #0x70]
0000000000018284	stp	x26, x25, [sp, #0x80]
0000000000018288	stp	x24, x23, [sp, #0x90]
000000000001828c	stp	x22, x21, [sp, #0xa0]
0000000000018290	stp	x20, x19, [sp, #0xb0]
0000000000018294	stp	x29, x30, [sp, #0xc0]
0000000000018298	add	x29, sp, #0xc0
000000000001829c	mov	x20, x1
00000000000182a0	mov	x19, x0
00000000000182a4	movi.16b	v0, #0x0
00000000000182a8	stp	q0, q0, [sp]
00000000000182ac	str	xzr, [sp, #0x40]
00000000000182b0	stp	q0, q0, [sp, #0x20]
00000000000182b4	adrp	x0, 98 ; 0x7a000
00000000000182b8	add	x0, x0, #0x2c0
00000000000182bc	ldr	x8, [x0]
00000000000182c0	blr	x8
00000000000182c4	ldr	x21, [x0]
00000000000182c8	ldr	x8, [x21, #0x110]
00000000000182cc	mov	x9, sp
00000000000182d0	str	x9, [x21, #0x110]
00000000000182d4	mov	x9, #0x900000000
00000000000182d8	stp	x8, x9, [sp, #0x8]
00000000000182dc	adr	x22, #0x7bfad
00000000000182e0	nop
00000000000182e4	ldarb	w8, [x22]
00000000000182e8	tbz	w8, #0x0, 0x182f0
00000000000182ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000182f0	mov	x0, x19
00000000000182f4	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
00000000000182f8	add	x23, sp, #0x50
00000000000182fc	mov	w24, #0x79b9
0000000000018300	movk	w24, #0x9e37, lsl #16
0000000000018304	ldarb	w8, [x22]
0000000000018308	tbz	w8, #0x0, 0x18310
000000000001830c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018310	cbz	x20, 0x1833c
0000000000018314	ldr	x8, [x20]
0000000000018318	and	x8, x8, #0xfffffffffffffffc
000000000001831c	ldr	x8, [x8]
0000000000018320	ldr	x8, [x8, #0x78]
0000000000018324	mov	x0, x20
0000000000018328	blr	x8
000000000001832c	mul	w8, w0, w24
0000000000018330	ldr	w9, [x19, #0x48]
0000000000018334	lsr	w26, w8, w9
0000000000018338	b	0x18340
000000000001833c	mov	w26, #0x0
0000000000018340	mov	w25, #0x0
0000000000018344	ldr	w8, [x19, #0x40]
0000000000018348	movi.16b	v0, #0x0
000000000001834c	stp	q0, q0, [sp, #0x50]
0000000000018350	ldr	x9, [x21, #0x110]
0000000000018354	str	x23, [x21, #0x110]
0000000000018358	ldr	x10, [x19, #0x20]
000000000001835c	ldr	w10, [x10, #0x8]
0000000000018360	str	x9, [x21, #0x110]
0000000000018364	lsl	w8, w8, #1
0000000000018368	cmp	w10, #0x0
000000000001836c	cinc	w9, w10, lt
0000000000018370	asr	w9, w9, #1
0000000000018374	cmp	w8, w9
0000000000018378	csel	w8, w9, w8, gt
000000000001837c	bic	w27, w8, w8, asr #31
0000000000018380	b	0x1838c
0000000000018384	sub	w26, w26, #0x1
0000000000018388	add	w25, w25, #0x1
000000000001838c	ldarb	w8, [x22]
0000000000018390	tbz	w8, #0x0, 0x18398
0000000000018394	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018398	ldr	x8, [x19, #0x20]
000000000001839c	str	x8, [sp, #0x18]
00000000000183a0	ldr	w9, [x8, #0x8]
00000000000183a4	cmp	w9, w26
00000000000183a8	b.ls	0x18558
00000000000183ac	add	x8, x8, w26, sxtw #2
00000000000183b0	ldr	w28, [x8, #0x10]
00000000000183b4	cmp	w28, #0x0
00000000000183b8	b.le	0x18434
00000000000183bc	ldr	x8, [x19, #0x8]
00000000000183c0	str	x8, [sp, #0x38]
00000000000183c4	sub	w9, w28, #0x1
00000000000183c8	ldr	w10, [x8, #0x8]
00000000000183cc	cmp	w10, w9
00000000000183d0	b.ls	0x18558
00000000000183d4	add	x8, x8, w9, sxtw #3
00000000000183d8	ldr	x0, [x8, #0x10]
00000000000183dc	str	x0, [sp, #0x40]
00000000000183e0	cbz	x0, 0x18404
00000000000183e4	ldr	x8, [x0]
00000000000183e8	and	x8, x8, #0xfffffffffffffffc
00000000000183ec	ldr	x8, [x8]
00000000000183f0	ldr	x8, [x8, #0x70]
00000000000183f4	mov	x1, x20
00000000000183f8	blr	x8
00000000000183fc	cbz	w0, 0x18408
0000000000018400	b	0x18498
0000000000018404	cbz	x20, 0x18498
0000000000018408	cmp	w27, w25
000000000001840c	b.eq	0x1846c
0000000000018410	cbnz	w26, 0x18384
0000000000018414	movi.16b	v0, #0x0
0000000000018418	stp	q0, q0, [sp, #0x50]
000000000001841c	ldr	x8, [x21, #0x110]
0000000000018420	str	x23, [x21, #0x110]
0000000000018424	ldr	x9, [x19, #0x20]
0000000000018428	ldr	w26, [x9, #0x8]
000000000001842c	str	x8, [x21, #0x110]
0000000000018430	b	0x18384
0000000000018434	ldr	w8, [x19, #0x44]
0000000000018438	movi.16b	v0, #0x0
000000000001843c	stp	q0, q0, [sp, #0x50]
0000000000018440	ldr	x9, [x21, #0x110]
0000000000018444	str	x23, [x21, #0x110]
0000000000018448	ldr	x10, [x19, #0x8]
000000000001844c	ldr	w10, [x10, #0x8]
0000000000018450	str	x9, [x21, #0x110]
0000000000018454	cmp	w8, w10
0000000000018458	b.lt	0x184c4
000000000001845c	mov	x0, x19
0000000000018460	mov	w1, #0x1
0000000000018464	bl	"_kfun:kotlin.collections.HashMap.ensureExtraCapacity#internal"
0000000000018468	b	0x18304
000000000001846c	movi.16b	v0, #0x0
0000000000018470	stp	q0, q0, [sp, #0x50]
0000000000018474	ldr	x8, [x21, #0x110]
0000000000018478	str	x23, [x21, #0x110]
000000000001847c	ldr	x9, [x19, #0x20]
0000000000018480	ldr	w9, [x9, #0x8]
0000000000018484	str	x8, [x21, #0x110]
0000000000018488	lsl	w1, w9, #1
000000000001848c	mov	x0, x19
0000000000018490	bl	"_kfun:kotlin.collections.HashMap.rehash#internal"
0000000000018494	b	0x18304
0000000000018498	neg	w0, w28
000000000001849c	ldr	x8, [sp, #0x8]
00000000000184a0	str	x8, [x21, #0x110]
00000000000184a4	ldp	x29, x30, [sp, #0xc0]
00000000000184a8	ldp	x20, x19, [sp, #0xb0]
00000000000184ac	ldp	x22, x21, [sp, #0xa0]
00000000000184b0	ldp	x24, x23, [sp, #0x90]
00000000000184b4	ldp	x26, x25, [sp, #0x80]
00000000000184b8	ldp	x28, x27, [sp, #0x70]
00000000000184bc	add	sp, sp, #0xd0
00000000000184c0	ret
00000000000184c4	ldr	w0, [x19, #0x44]
00000000000184c8	add	w8, w0, #0x1
00000000000184cc	str	w8, [x19, #0x44]
00000000000184d0	ldr	x10, [x19, #0x8]
00000000000184d4	str	x10, [sp, #0x20]
00000000000184d8	ldr	w9, [x10, #0x8]
00000000000184dc	cmp	w9, w0
00000000000184e0	b.ls	0x18558
00000000000184e4	sxtw	x9, w0
00000000000184e8	ldr	xzr, [x10]
00000000000184ec	add	x10, x10, x9, lsl #3
00000000000184f0	str	x20, [x10, #0x10]
00000000000184f4	ldr	x10, [x19, #0x18]
00000000000184f8	str	x10, [sp, #0x28]
00000000000184fc	ldr	w11, [x10, #0x8]
0000000000018500	cmp	w11, w0
0000000000018504	b.ls	0x18558
0000000000018508	ldr	xzr, [x10]
000000000001850c	add	x9, x10, x9, lsl #2
0000000000018510	str	w26, [x9, #0x10]
0000000000018514	ldr	x9, [x19, #0x20]
0000000000018518	str	x9, [sp, #0x30]
000000000001851c	ldr	w10, [x9, #0x8]
0000000000018520	cmp	w10, w26
0000000000018524	b.ls	0x18558
0000000000018528	sxtw	x10, w26
000000000001852c	ldr	xzr, [x9]
0000000000018530	add	x9, x9, x10, lsl #2
0000000000018534	str	w8, [x9, #0x10]
0000000000018538	ldr	w8, [x19, #0x4c]
000000000001853c	add	w8, w8, #0x1
0000000000018540	str	w8, [x19, #0x4c]
0000000000018544	ldr	w8, [x19, #0x40]
0000000000018548	cmp	w25, w8
000000000001854c	b.le	0x1849c
0000000000018550	str	w25, [x19, #0x40]
0000000000018554	b	0x1849c
0000000000018558	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int:
000000000001855c	stp	x20, x19, [sp, #-0x20]!
0000000000018560	stp	x29, x30, [sp, #0x10]
0000000000018564	add	x29, sp, #0x10
0000000000018568	mov	x20, x1
000000000001856c	mov	x19, x0
0000000000018570	adr	x8, #0x7bd19
0000000000018574	nop
0000000000018578	ldarb	w8, [x8]
000000000001857c	tbz	w8, #0x0, 0x18584
0000000000018580	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018584	mov	x0, x19
0000000000018588	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001858c	mov	x0, x19
0000000000018590	mov	x1, x20
0000000000018594	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
0000000000018598	tbnz	w0, #0x1f, 0x185bc
000000000001859c	mov	x20, x0
00000000000185a0	mov	x0, x19
00000000000185a4	mov	x1, x20
00000000000185a8	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
00000000000185ac	mov	x0, x20
00000000000185b0	ldp	x29, x30, [sp, #0x10]
00000000000185b4	ldp	x20, x19, [sp], #0x20
00000000000185b8	ret
00000000000185bc	mov	w20, #-0x1
00000000000185c0	mov	x0, x20
00000000000185c4	ldp	x29, x30, [sp, #0x10]
00000000000185c8	ldp	x20, x19, [sp], #0x20
00000000000185cc	ret
_kfun:kotlin.collections.HashMap.removeKeyAt#internal:
00000000000185d0	sub	sp, sp, #0x130
00000000000185d4	stp	x28, x27, [sp, #0xd0]
00000000000185d8	stp	x26, x25, [sp, #0xe0]
00000000000185dc	stp	x24, x23, [sp, #0xf0]
00000000000185e0	stp	x22, x21, [sp, #0x100]
00000000000185e4	stp	x20, x19, [sp, #0x110]
00000000000185e8	stp	x29, x30, [sp, #0x120]
00000000000185ec	add	x29, sp, #0x120
00000000000185f0	mov	x20, x1
00000000000185f4	mov	x19, x0
00000000000185f8	movi.16b	v0, #0x0
00000000000185fc	stp	q0, q0, [sp, #0x10]
0000000000018600	str	q0, [sp, #0x30]
0000000000018604	adrp	x0, 98 ; 0x7a000
0000000000018608	add	x0, x0, #0x2c0
000000000001860c	ldr	x8, [x0]
0000000000018610	blr	x8
0000000000018614	ldr	x21, [x0]
0000000000018618	ldr	x8, [x21, #0x110]
000000000001861c	add	x9, sp, #0x10
0000000000018620	str	x9, [x21, #0x110]
0000000000018624	mov	x9, #0x600000000
0000000000018628	stp	x8, x9, [sp, #0x18]
000000000001862c	adr	x24, #0x7bc5d
0000000000018630	nop
0000000000018634	ldarb	w8, [x24]
0000000000018638	tbz	w8, #0x0, 0x18640
000000000001863c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018640	ldr	x0, [x19, #0x8]
0000000000018644	str	x0, [sp, #0x28]
0000000000018648	mov	x1, x20
000000000001864c	bl	"_kfun:kotlin.collections#resetAt__at__kotlin.Array<0:0>(kotlin.Int){0§<kotlin.Any?>}"
0000000000018650	ldr	x8, [x19, #0x18]
0000000000018654	str	x8, [sp, #0x30]
0000000000018658	ldr	w9, [x8, #0x8]
000000000001865c	cmp	w9, w20
0000000000018660	b.ls	0x18918
0000000000018664	mov	w25, #0x0
0000000000018668	add	x8, x8, w20, sxtw #2
000000000001866c	sxtw	x9, w20
0000000000018670	stp	x9, x20, [sp]
0000000000018674	ldr	w28, [x8, #0x10]
0000000000018678	movi.16b	v0, #0x0
000000000001867c	stp	q0, q0, [sp, #0x40]
0000000000018680	stp	q0, q0, [sp, #0x80]
0000000000018684	stp	q0, q0, [sp, #0x60]
0000000000018688	ldr	x8, [x21, #0x110]
000000000001868c	add	x9, sp, #0x40
0000000000018690	str	x9, [x21, #0x110]
0000000000018694	mov	x9, #0xc00000000
0000000000018698	stp	x8, x9, [sp, #0x48]
000000000001869c	ldr	w8, [x19, #0x40]
00000000000186a0	lsl	w8, w8, #1
00000000000186a4	stp	q0, q0, [x29, #-0x80]
00000000000186a8	ldr	x9, [x21, #0x110]
00000000000186ac	sub	x26, x29, #0x80
00000000000186b0	str	x26, [x21, #0x110]
00000000000186b4	ldr	x10, [x19, #0x20]
00000000000186b8	ldr	w10, [x10, #0x8]
00000000000186bc	cmp	w10, #0x0
00000000000186c0	cinc	w10, w10, lt
00000000000186c4	asr	w10, w10, #1
00000000000186c8	cmp	w8, w10
00000000000186cc	str	x9, [x21, #0x110]
00000000000186d0	csel	w27, w10, w8, gt
00000000000186d4	mov	x23, x28
00000000000186d8	b	0x18704
00000000000186dc	str	x9, [sp, #0x70]
00000000000186e0	cmp	w10, w28
00000000000186e4	b.ls	0x18918
00000000000186e8	mov	w25, #0x0
00000000000186ec	ldr	xzr, [x9]
00000000000186f0	mov	w9, #-0x1
00000000000186f4	str	w9, [x8, w28, sxtw #2]
00000000000186f8	mov	x28, x23
00000000000186fc	subs	w27, w27, #0x1
0000000000018700	b.mi	0x18890
0000000000018704	ldarb	w8, [x24]
0000000000018708	tbnz	w8, #0x0, 0x18728
000000000001870c	cbz	w23, 0x18730
0000000000018710	add	w25, w25, #0x1
0000000000018714	ldr	w8, [x19, #0x40]
0000000000018718	ldr	x9, [x19, #0x20]
000000000001871c	cmp	w25, w8
0000000000018720	b.le	0x18760
0000000000018724	b	0x18858
0000000000018728	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001872c	cbnz	w23, 0x18710
0000000000018730	movi.16b	v0, #0x0
0000000000018734	stp	q0, q0, [x29, #-0x80]
0000000000018738	ldr	x8, [x21, #0x110]
000000000001873c	str	x26, [x21, #0x110]
0000000000018740	ldr	x9, [x19, #0x20]
0000000000018744	ldr	w23, [x9, #0x8]
0000000000018748	str	x8, [x21, #0x110]
000000000001874c	add	w25, w25, #0x1
0000000000018750	ldr	w8, [x19, #0x40]
0000000000018754	ldr	x9, [x19, #0x20]
0000000000018758	cmp	w25, w8
000000000001875c	b.gt	0x18858
0000000000018760	sub	w23, w23, #0x1
0000000000018764	str	x9, [sp, #0x60]
0000000000018768	ldr	w10, [x9, #0x8]
000000000001876c	cmp	w10, w23
0000000000018770	b.ls	0x18918
0000000000018774	add	x8, x9, #0x10
0000000000018778	ldr	w22, [x8, w23, sxtw #2]
000000000001877c	cbz	w22, 0x18878
0000000000018780	tbnz	w22, #0x1f, 0x186dc
0000000000018784	ldr	x8, [x19, #0x8]
0000000000018788	str	x8, [sp, #0x78]
000000000001878c	sub	w20, w22, #0x1
0000000000018790	ldr	w9, [x8, #0x8]
0000000000018794	cmp	w9, w20
0000000000018798	b.ls	0x18918
000000000001879c	add	x8, x8, w20, sxtw #3
00000000000187a0	ldr	x0, [x8, #0x10]
00000000000187a4	str	x0, [sp, #0x80]
00000000000187a8	cbz	x0, 0x187d8
00000000000187ac	ldr	x8, [x0]
00000000000187b0	and	x8, x8, #0xfffffffffffffffc
00000000000187b4	ldr	x8, [x8]
00000000000187b8	ldr	x8, [x8, #0x78]
00000000000187bc	blr	x8
00000000000187c0	mov	w8, #0x79b9
00000000000187c4	movk	w8, #0x9e37, lsl #16
00000000000187c8	mul	w8, w0, w8
00000000000187cc	ldr	w9, [x19, #0x48]
00000000000187d0	lsr	w8, w8, w9
00000000000187d4	b	0x187dc
00000000000187d8	mov	w8, #0x0
00000000000187dc	movi.16b	v0, #0x0
00000000000187e0	stp	q0, q0, [x29, #-0x80]
00000000000187e4	ldr	x9, [x21, #0x110]
00000000000187e8	str	x26, [x21, #0x110]
00000000000187ec	ldr	x10, [x19, #0x20]
00000000000187f0	ldr	w10, [x10, #0x8]
00000000000187f4	str	x9, [x21, #0x110]
00000000000187f8	sub	w8, w8, w23
00000000000187fc	sub	w9, w10, #0x1
0000000000018800	and	w8, w8, w9
0000000000018804	cmp	w8, w25
0000000000018808	b.lt	0x186fc
000000000001880c	ldr	x8, [x19, #0x20]
0000000000018810	str	x8, [sp, #0x88]
0000000000018814	ldr	w9, [x8, #0x8]
0000000000018818	cmp	w9, w28
000000000001881c	b.ls	0x18918
0000000000018820	ldr	xzr, [x8]
0000000000018824	add	x8, x8, w28, sxtw #2
0000000000018828	str	w22, [x8, #0x10]
000000000001882c	ldr	x8, [x19, #0x18]
0000000000018830	str	x8, [sp, #0x90]
0000000000018834	ldr	w9, [x8, #0x8]
0000000000018838	cmp	w9, w20
000000000001883c	b.ls	0x18918
0000000000018840	mov	w25, #0x0
0000000000018844	sxtw	x9, w20
0000000000018848	ldr	xzr, [x8]
000000000001884c	add	x8, x8, x9, lsl #2
0000000000018850	str	w28, [x8, #0x10]
0000000000018854	b	0x186f8
0000000000018858	str	x9, [sp, #0x58]
000000000001885c	ldr	w8, [x9, #0x8]
0000000000018860	cmp	w8, w28
0000000000018864	b.ls	0x18918
0000000000018868	mov	w10, #0x0
000000000001886c	ldr	xzr, [x9]
0000000000018870	add	x8, x9, #0x10
0000000000018874	b	0x188ac
0000000000018878	str	x9, [sp, #0x68]
000000000001887c	cmp	w10, w28
0000000000018880	b.ls	0x18918
0000000000018884	mov	w10, #0x0
0000000000018888	ldr	xzr, [x9]
000000000001888c	b	0x188ac
0000000000018890	ldr	x8, [x19, #0x20]
0000000000018894	str	x8, [sp, #0x98]
0000000000018898	ldr	w9, [x8, #0x8]
000000000001889c	cmp	w9, w28
00000000000188a0	b.ls	0x18918
00000000000188a4	ldr	xzr, [x8], #0x10
00000000000188a8	mov	w10, #-0x1
00000000000188ac	ldr	x11, [sp, #0x8]
00000000000188b0	str	w10, [x8, w28, sxtw #2]
00000000000188b4	ldr	x8, [sp, #0x48]
00000000000188b8	str	x8, [x21, #0x110]
00000000000188bc	ldr	x8, [x19, #0x18]
00000000000188c0	str	x8, [sp, #0x38]
00000000000188c4	ldr	w9, [x8, #0x8]
00000000000188c8	cmp	w9, w11
00000000000188cc	b.ls	0x18918
00000000000188d0	ldr	xzr, [x8]
00000000000188d4	ldr	x9, [sp]
00000000000188d8	add	x8, x8, x9, lsl #2
00000000000188dc	mov	w9, #-0x1
00000000000188e0	str	w9, [x8, #0x10]
00000000000188e4	ldr	w8, [x19, #0x4c]
00000000000188e8	sub	w8, w8, #0x1
00000000000188ec	str	w8, [x19, #0x4c]
00000000000188f0	ldr	x8, [sp, #0x18]
00000000000188f4	str	x8, [x21, #0x110]
00000000000188f8	ldp	x29, x30, [sp, #0x120]
00000000000188fc	ldp	x20, x19, [sp, #0x110]
0000000000018900	ldp	x22, x21, [sp, #0x100]
0000000000018904	ldp	x24, x23, [sp, #0xf0]
0000000000018908	ldp	x26, x25, [sp, #0xe0]
000000000001890c	ldp	x28, x27, [sp, #0xd0]
0000000000018910	add	sp, sp, #0x130
0000000000018914	ret
0000000000018918	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#containsEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.Boolean:
000000000001891c	sub	sp, sp, #0x80
0000000000018920	stp	x24, x23, [sp, #0x40]
0000000000018924	stp	x22, x21, [sp, #0x50]
0000000000018928	stp	x20, x19, [sp, #0x60]
000000000001892c	stp	x29, x30, [sp, #0x70]
0000000000018930	add	x29, sp, #0x70
0000000000018934	mov	x19, x1
0000000000018938	mov	x20, x0
000000000001893c	movi.16b	v0, #0x0
0000000000018940	stp	q0, q0, [sp]
0000000000018944	str	xzr, [sp, #0x30]
0000000000018948	str	q0, [sp, #0x20]
000000000001894c	mov	x23, sp
0000000000018950	add	x21, x23, #0x18
0000000000018954	adrp	x0, 98 ; 0x7a000
0000000000018958	add	x0, x0, #0x2c0
000000000001895c	ldr	x8, [x0]
0000000000018960	blr	x8
0000000000018964	ldr	x22, [x0]
0000000000018968	ldr	x8, [x22, #0x110]
000000000001896c	str	x23, [x22, #0x110]
0000000000018970	mov	x9, #0x700000000
0000000000018974	stp	x8, x9, [sp, #0x8]
0000000000018978	adr	x8, #0x7b911
000000000001897c	nop
0000000000018980	ldarb	w8, [x8]
0000000000018984	tbz	w8, #0x0, 0x1898c
0000000000018988	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001898c	ldr	x8, [x19]
0000000000018990	and	x8, x8, #0xfffffffffffffffc
0000000000018994	ldr	x8, [x8]
0000000000018998	ldr	w9, [x8, #0x3c]
000000000001899c	ldr	x8, [x8, #0x40]
00000000000189a0	tbnz	w9, #0x1f, 0x189b0
00000000000189a4	mov	w10, #0xa8
00000000000189a8	and	x9, x9, x10
00000000000189ac	b	0x18a34
00000000000189b0	neg	w10, w9
00000000000189b4	mvn	w9, w9
00000000000189b8	cmp	w10, #0x9
00000000000189bc	b.ge	0x189f4
00000000000189c0	cmp	w10, #0x2
00000000000189c4	b.lt	0x18a28
00000000000189c8	mov	x10, #0x0
00000000000189cc	mov	x11, x8
00000000000189d0	ldr	w12, [x11]
00000000000189d4	cmp	w12, #0xa7
00000000000189d8	b.gt	0x18a30
00000000000189dc	add	x10, x10, #0x1
00000000000189e0	add	x11, x11, #0x10
00000000000189e4	cmp	x9, x10
00000000000189e8	b.ne	0x189d0
00000000000189ec	mov	x10, x9
00000000000189f0	b	0x18a30
00000000000189f4	mov	w10, #0x0
00000000000189f8	add	w11, w9, w10
00000000000189fc	cmp	w11, #0x0
0000000000018a00	cinc	w11, w11, lt
0000000000018a04	asr	w11, w11, #1
0000000000018a08	sbfiz	x12, x11, #4, #32
0000000000018a0c	ldr	w12, [x8, x12]
0000000000018a10	cmp	w12, #0xa8
0000000000018a14	csinc	w10, w10, w11, ge
0000000000018a18	csel	w9, w9, w11, lt
0000000000018a1c	cmp	w10, w9
0000000000018a20	b.lt	0x189f8
0000000000018a24	b	0x18a30
0000000000018a28	mov	w10, #0x0
0000000000018a2c	b	0x18a30
0000000000018a30	sxtw	x9, w10
0000000000018a34	add	x8, x8, x9, lsl #4
0000000000018a38	ldr	x8, [x8, #0x8]
0000000000018a3c	ldr	x8, [x8]
0000000000018a40	mov	x0, x19
0000000000018a44	mov	x1, x21
0000000000018a48	blr	x8
0000000000018a4c	mov	x1, x0
0000000000018a50	mov	x0, x20
0000000000018a54	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
0000000000018a58	tbnz	w0, #0x1f, 0x18aa8
0000000000018a5c	ldr	x8, [x20, #0x10]
0000000000018a60	str	x8, [sp, #0x20]
0000000000018a64	cbz	x8, 0x18b94
0000000000018a68	ldr	w9, [x8, #0x8]
0000000000018a6c	cmp	w9, w0
0000000000018a70	b.ls	0x18b98
0000000000018a74	add	x1, x23, #0x30
0000000000018a78	add	x8, x8, w0, sxtw #3
0000000000018a7c	ldr	x20, [x8, #0x10]
0000000000018a80	str	x20, [sp, #0x28]
0000000000018a84	ldr	x8, [x19]
0000000000018a88	and	x8, x8, #0xfffffffffffffffc
0000000000018a8c	ldr	x8, [x8]
0000000000018a90	ldr	w9, [x8, #0x3c]
0000000000018a94	ldr	x8, [x8, #0x40]
0000000000018a98	tbnz	w9, #0x1f, 0x18ab0
0000000000018a9c	mov	w10, #0xa8
0000000000018aa0	and	x9, x9, x10
0000000000018aa4	b	0x18b34
0000000000018aa8	mov	w0, #0x0
0000000000018aac	b	0x18b74
0000000000018ab0	neg	w10, w9
0000000000018ab4	mvn	w9, w9
0000000000018ab8	cmp	w10, #0x9
0000000000018abc	b.ge	0x18af4
0000000000018ac0	cmp	w10, #0x2
0000000000018ac4	b.lt	0x18b28
0000000000018ac8	mov	x10, #0x0
0000000000018acc	mov	x11, x8
0000000000018ad0	ldr	w12, [x11]
0000000000018ad4	cmp	w12, #0xa7
0000000000018ad8	b.gt	0x18b30
0000000000018adc	add	x10, x10, #0x1
0000000000018ae0	add	x11, x11, #0x10
0000000000018ae4	cmp	x9, x10
0000000000018ae8	b.ne	0x18ad0
0000000000018aec	mov	x10, x9
0000000000018af0	b	0x18b30
0000000000018af4	mov	w10, #0x0
0000000000018af8	add	w11, w9, w10
0000000000018afc	cmp	w11, #0x0
0000000000018b00	cinc	w11, w11, lt
0000000000018b04	asr	w11, w11, #1
0000000000018b08	sbfiz	x12, x11, #4, #32
0000000000018b0c	ldr	w12, [x8, x12]
0000000000018b10	cmp	w12, #0xa8
0000000000018b14	csinc	w10, w10, w11, ge
0000000000018b18	csel	w9, w9, w11, lt
0000000000018b1c	cmp	w10, w9
0000000000018b20	b.lt	0x18af8
0000000000018b24	b	0x18b30
0000000000018b28	mov	w10, #0x0
0000000000018b2c	b	0x18b30
0000000000018b30	sxtw	x9, w10
0000000000018b34	add	x8, x8, x9, lsl #4
0000000000018b38	ldr	x8, [x8, #0x8]
0000000000018b3c	ldr	x8, [x8, #0x8]
0000000000018b40	mov	x0, x19
0000000000018b44	blr	x8
0000000000018b48	mov	x1, x0
0000000000018b4c	cbz	x20, 0x18b6c
0000000000018b50	ldr	x8, [x20]
0000000000018b54	and	x8, x8, #0xfffffffffffffffc
0000000000018b58	ldr	x8, [x8]
0000000000018b5c	ldr	x8, [x8, #0x70]
0000000000018b60	mov	x0, x20
0000000000018b64	blr	x8
0000000000018b68	b	0x18b74
0000000000018b6c	cmp	x1, #0x0
0000000000018b70	cset	w0, eq
0000000000018b74	ldr	x8, [sp, #0x8]
0000000000018b78	str	x8, [x22, #0x110]
0000000000018b7c	ldp	x29, x30, [sp, #0x70]
0000000000018b80	ldp	x20, x19, [sp, #0x60]
0000000000018b84	ldp	x22, x21, [sp, #0x50]
0000000000018b88	ldp	x24, x23, [sp, #0x40]
0000000000018b8c	add	sp, sp, #0x80
0000000000018b90	ret
0000000000018b94	bl	_ThrowNullPointerException
0000000000018b98	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#getKey(1:0){}1:0?:
0000000000018b9c	sub	sp, sp, #0x60
0000000000018ba0	stp	x22, x21, [sp, #0x30]
0000000000018ba4	stp	x20, x19, [sp, #0x40]
0000000000018ba8	stp	x29, x30, [sp, #0x50]
0000000000018bac	add	x29, sp, #0x50
0000000000018bb0	mov	x19, x2
0000000000018bb4	mov	x21, x1
0000000000018bb8	mov	x20, x0
0000000000018bbc	movi.16b	v0, #0x0
0000000000018bc0	stp	q0, q0, [sp]
0000000000018bc4	str	xzr, [sp, #0x20]
0000000000018bc8	adrp	x0, 98 ; 0x7a000
0000000000018bcc	add	x0, x0, #0x2c0
0000000000018bd0	ldr	x8, [x0]
0000000000018bd4	blr	x8
0000000000018bd8	ldr	x22, [x0]
0000000000018bdc	ldr	x8, [x22, #0x110]
0000000000018be0	mov	x9, sp
0000000000018be4	str	x9, [x22, #0x110]
0000000000018be8	mov	x9, #0x500000000
0000000000018bec	stp	x8, x9, [sp, #0x8]
0000000000018bf0	adr	x8, #0x7b699
0000000000018bf4	nop
0000000000018bf8	ldarb	w8, [x8]
0000000000018bfc	tbz	w8, #0x0, 0x18c04
0000000000018c00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018c04	mov	x0, x20
0000000000018c08	mov	x1, x21
0000000000018c0c	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
0000000000018c10	tbnz	w0, #0x1f, 0x18c3c
0000000000018c14	ldr	x8, [x20, #0x8]
0000000000018c18	str	x8, [sp, #0x18]
0000000000018c1c	ldr	w9, [x8, #0x8]
0000000000018c20	cmp	w9, w0
0000000000018c24	b.ls	0x18c60
0000000000018c28	add	x8, x8, w0, sxtw #3
0000000000018c2c	ldr	x0, [x8, #0x10]
0000000000018c30	str	x0, [sp, #0x20]
0000000000018c34	cbnz	x0, 0x18c40
0000000000018c38	bl	_ThrowNullPointerException
0000000000018c3c	mov	x0, #0x0
0000000000018c40	str	x0, [x19]
0000000000018c44	ldr	x8, [sp, #0x8]
0000000000018c48	str	x8, [x22, #0x110]
0000000000018c4c	ldp	x29, x30, [sp, #0x50]
0000000000018c50	ldp	x20, x19, [sp, #0x40]
0000000000018c54	ldp	x22, x21, [sp, #0x30]
0000000000018c58	add	sp, sp, #0x60
0000000000018c5c	ret
0000000000018c60	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#containsAllEntries(kotlin.collections.Collection<*>){}kotlin.Boolean:
0000000000018c64	sub	sp, sp, #0x80
0000000000018c68	stp	x26, x25, [sp, #0x30]
0000000000018c6c	stp	x24, x23, [sp, #0x40]
0000000000018c70	stp	x22, x21, [sp, #0x50]
0000000000018c74	stp	x20, x19, [sp, #0x60]
0000000000018c78	stp	x29, x30, [sp, #0x70]
0000000000018c7c	add	x29, sp, #0x70
0000000000018c80	mov	x21, x1
0000000000018c84	mov	x19, x0
0000000000018c88	movi.16b	v0, #0x0
0000000000018c8c	stp	q0, q0, [sp]
0000000000018c90	str	q0, [sp, #0x20]
0000000000018c94	mov	x20, sp
0000000000018c98	add	x22, x20, #0x18
0000000000018c9c	adrp	x0, 98 ; 0x7a000
0000000000018ca0	add	x0, x0, #0x2c0
0000000000018ca4	ldr	x8, [x0]
0000000000018ca8	blr	x8
0000000000018cac	ldr	x23, [x0]
0000000000018cb0	ldr	x8, [x23, #0x110]
0000000000018cb4	str	x20, [x23, #0x110]
0000000000018cb8	mov	x9, #0x600000000
0000000000018cbc	stp	x8, x9, [sp, #0x8]
0000000000018cc0	adr	x24, #0x7b5c9
0000000000018cc4	nop
0000000000018cc8	ldarb	w8, [x24]
0000000000018ccc	tbz	w8, #0x0, 0x18cd4
0000000000018cd0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018cd4	add	x20, x20, #0x20
0000000000018cd8	ldr	x8, [x21]
0000000000018cdc	and	x8, x8, #0xfffffffffffffffc
0000000000018ce0	ldr	x8, [x8]
0000000000018ce4	ldr	w9, [x8, #0x3c]
0000000000018ce8	ldr	x8, [x8, #0x40]
0000000000018cec	tbnz	w9, #0x1f, 0x18cfc
0000000000018cf0	mov	w10, #0x12
0000000000018cf4	and	x9, x9, x10
0000000000018cf8	b	0x18d80
0000000000018cfc	neg	w10, w9
0000000000018d00	mvn	w9, w9
0000000000018d04	cmp	w10, #0x9
0000000000018d08	b.ge	0x18d40
0000000000018d0c	cmp	w10, #0x2
0000000000018d10	b.lt	0x18d74
0000000000018d14	mov	x10, #0x0
0000000000018d18	mov	x11, x8
0000000000018d1c	ldr	w12, [x11]
0000000000018d20	cmp	w12, #0x11
0000000000018d24	b.gt	0x18d7c
0000000000018d28	add	x10, x10, #0x1
0000000000018d2c	add	x11, x11, #0x10
0000000000018d30	cmp	x9, x10
0000000000018d34	b.ne	0x18d1c
0000000000018d38	mov	x10, x9
0000000000018d3c	b	0x18d7c
0000000000018d40	mov	w10, #0x0
0000000000018d44	add	w11, w9, w10
0000000000018d48	cmp	w11, #0x0
0000000000018d4c	cinc	w11, w11, lt
0000000000018d50	asr	w11, w11, #1
0000000000018d54	sbfiz	x12, x11, #4, #32
0000000000018d58	ldr	w12, [x8, x12]
0000000000018d5c	cmp	w12, #0x12
0000000000018d60	csinc	w10, w10, w11, ge
0000000000018d64	csel	w9, w9, w11, lt
0000000000018d68	cmp	w10, w9
0000000000018d6c	b.lt	0x18d44
0000000000018d70	b	0x18d7c
0000000000018d74	mov	w10, #0x0
0000000000018d78	b	0x18d7c
0000000000018d7c	sxtw	x9, w10
0000000000018d80	add	x8, x8, x9, lsl #4
0000000000018d84	ldr	x8, [x8, #0x8]
0000000000018d88	ldr	x8, [x8, #0x20]
0000000000018d8c	mov	x0, x21
0000000000018d90	mov	x1, x22
0000000000018d94	blr	x8
0000000000018d98	mov	x21, x0
0000000000018d9c	mov	w22, #0xa0
0000000000018da0	mov	w25, #0xa8
0000000000018da4	ldr	x8, [x21]
0000000000018da8	and	x8, x8, #0xfffffffffffffffc
0000000000018dac	ldr	x8, [x8]
0000000000018db0	ldr	w9, [x8, #0x3c]
0000000000018db4	ldr	x8, [x8, #0x40]
0000000000018db8	tbnz	w9, #0x1f, 0x18ddc
0000000000018dbc	and	x9, x9, x22
0000000000018dc0	add	x8, x8, x9, lsl #4
0000000000018dc4	ldr	x8, [x8, #0x8]
0000000000018dc8	ldr	x8, [x8]
0000000000018dcc	mov	x0, x21
0000000000018dd0	blr	x8
0000000000018dd4	tbnz	w0, #0x0, 0x18e78
0000000000018dd8	b	0x19058
0000000000018ddc	neg	w10, w9
0000000000018de0	mvn	w9, w9
0000000000018de4	cmp	w10, #0x9
0000000000018de8	b.ge	0x18e20
0000000000018dec	cmp	w10, #0x2
0000000000018df0	b.lt	0x18e54
0000000000018df4	mov	x10, #0x0
0000000000018df8	mov	x11, x8
0000000000018dfc	ldr	w12, [x11]
0000000000018e00	cmp	w12, #0x9f
0000000000018e04	b.gt	0x18e5c
0000000000018e08	add	x10, x10, #0x1
0000000000018e0c	add	x11, x11, #0x10
0000000000018e10	cmp	x9, x10
0000000000018e14	b.ne	0x18dfc
0000000000018e18	mov	x10, x9
0000000000018e1c	b	0x18e5c
0000000000018e20	mov	w10, #0x0
0000000000018e24	add	w11, w9, w10
0000000000018e28	cmp	w11, #0x0
0000000000018e2c	cinc	w11, w11, lt
0000000000018e30	asr	w11, w11, #1
0000000000018e34	sbfiz	x12, x11, #4, #32
0000000000018e38	ldr	w12, [x8, x12]
0000000000018e3c	cmp	w12, #0xa0
0000000000018e40	csinc	w10, w10, w11, ge
0000000000018e44	csel	w9, w9, w11, lt
0000000000018e48	cmp	w10, w9
0000000000018e4c	b.lt	0x18e24
0000000000018e50	b	0x18e5c
0000000000018e54	mov	w10, #0x0
0000000000018e58	b	0x18e5c
0000000000018e5c	sxtw	x9, w10
0000000000018e60	add	x8, x8, x9, lsl #4
0000000000018e64	ldr	x8, [x8, #0x8]
0000000000018e68	ldr	x8, [x8]
0000000000018e6c	mov	x0, x21
0000000000018e70	blr	x8
0000000000018e74	tbz	w0, #0x0, 0x19058
0000000000018e78	ldarb	w8, [x24]
0000000000018e7c	tbz	w8, #0x0, 0x18e84
0000000000018e80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018e84	ldr	x8, [x21]
0000000000018e88	and	x8, x8, #0xfffffffffffffffc
0000000000018e8c	ldr	x8, [x8]
0000000000018e90	ldr	w9, [x8, #0x3c]
0000000000018e94	ldr	x8, [x8, #0x40]
0000000000018e98	tbnz	w9, #0x1f, 0x18ea4
0000000000018e9c	and	x9, x9, x22
0000000000018ea0	b	0x18f28
0000000000018ea4	neg	w10, w9
0000000000018ea8	mvn	w9, w9
0000000000018eac	cmp	w10, #0x9
0000000000018eb0	b.ge	0x18ee8
0000000000018eb4	cmp	w10, #0x2
0000000000018eb8	b.lt	0x18f1c
0000000000018ebc	mov	x10, #0x0
0000000000018ec0	mov	x11, x8
0000000000018ec4	ldr	w12, [x11]
0000000000018ec8	cmp	w12, #0x9f
0000000000018ecc	b.gt	0x18f24
0000000000018ed0	add	x10, x10, #0x1
0000000000018ed4	add	x11, x11, #0x10
0000000000018ed8	cmp	x9, x10
0000000000018edc	b.ne	0x18ec4
0000000000018ee0	mov	x10, x9
0000000000018ee4	b	0x18f24
0000000000018ee8	mov	w10, #0x0
0000000000018eec	add	w11, w9, w10
0000000000018ef0	cmp	w11, #0x0
0000000000018ef4	cinc	w11, w11, lt
0000000000018ef8	asr	w11, w11, #1
0000000000018efc	sbfiz	x12, x11, #4, #32
0000000000018f00	ldr	w12, [x8, x12]
0000000000018f04	cmp	w12, #0xa0
0000000000018f08	csinc	w10, w10, w11, ge
0000000000018f0c	csel	w9, w9, w11, lt
0000000000018f10	cmp	w10, w9
0000000000018f14	b.lt	0x18eec
0000000000018f18	b	0x18f24
0000000000018f1c	mov	w10, #0x0
0000000000018f20	b	0x18f24
0000000000018f24	sxtw	x9, w10
0000000000018f28	add	x8, x8, x9, lsl #4
0000000000018f2c	ldr	x8, [x8, #0x8]
0000000000018f30	ldr	x8, [x8, #0x8]
0000000000018f34	mov	x0, x21
0000000000018f38	mov	x1, x20
0000000000018f3c	blr	x8
0000000000018f40	cbz	x0, 0x190a0
0000000000018f44	mov	x8, x0
0000000000018f48	ldr	x9, [x0]
0000000000018f4c	and	x9, x9, #0xfffffffffffffffc
0000000000018f50	ldr	x9, [x9]
0000000000018f54	ldr	w10, [x9, #0x3c]
0000000000018f58	ldr	x9, [x9, #0x40]
0000000000018f5c	tbnz	w10, #0x1f, 0x18f78
0000000000018f60	and	x10, x10, x25
0000000000018f64	lsl	x10, x10, #4
0000000000018f68	ldr	w9, [x9, x10]
0000000000018f6c	cmp	w9, #0xa8
0000000000018f70	b.eq	0x1901c
0000000000018f74	b	0x19044
0000000000018f78	neg	w11, w10
0000000000018f7c	mvn	w10, w10
0000000000018f80	cmp	w11, #0x9
0000000000018f84	b.ge	0x18fd0
0000000000018f88	cmp	w11, #0x2
0000000000018f8c	b.lt	0x19004
0000000000018f90	mov	x11, #0x0
0000000000018f94	mov	x12, x9
0000000000018f98	ldr	w13, [x12]
0000000000018f9c	cmp	w13, #0xa7
0000000000018fa0	b.gt	0x19030
0000000000018fa4	add	x11, x11, #0x1
0000000000018fa8	add	x12, x12, #0x10
0000000000018fac	cmp	x10, x11
0000000000018fb0	b.ne	0x18f98
0000000000018fb4	mov	x11, x10
0000000000018fb8	sxtw	x10, w11
0000000000018fbc	lsl	x10, x10, #4
0000000000018fc0	ldr	w9, [x9, x10]
0000000000018fc4	cmp	w9, #0xa8
0000000000018fc8	b.eq	0x1901c
0000000000018fcc	b	0x19044
0000000000018fd0	mov	w11, #0x0
0000000000018fd4	add	w12, w10, w11
0000000000018fd8	cmp	w12, #0x0
0000000000018fdc	cinc	w12, w12, lt
0000000000018fe0	asr	w12, w12, #1
0000000000018fe4	sbfiz	x13, x12, #4, #32
0000000000018fe8	ldr	w13, [x9, x13]
0000000000018fec	cmp	w13, #0xa8
0000000000018ff0	csinc	w11, w11, w12, ge
0000000000018ff4	csel	w10, w10, w12, lt
0000000000018ff8	cmp	w11, w10
0000000000018ffc	b.lt	0x18fd4
0000000000019000	b	0x19008
0000000000019004	mov	w11, #0x0
0000000000019008	sxtw	x10, w11
000000000001900c	lsl	x10, x10, #4
0000000000019010	ldr	w9, [x9, x10]
0000000000019014	cmp	w9, #0xa8
0000000000019018	b.ne	0x19044
000000000001901c	mov	x0, x19
0000000000019020	mov	x1, x8
0000000000019024	bl	"_kfun:kotlin.collections.HashMap#containsEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.Boolean"
0000000000019028	tbnz	w0, #0x0, 0x18da4
000000000001902c	b	0x1909c
0000000000019030	sxtw	x10, w11
0000000000019034	lsl	x10, x10, #4
0000000000019038	ldr	w9, [x9, x10]
000000000001903c	cmp	w9, #0xa8
0000000000019040	b.eq	0x1901c
0000000000019044	adr	x1, #0x4b83c
0000000000019048	nop
000000000001904c	mov	x0, x8
0000000000019050	bl	_ThrowClassCastException
0000000000019054	brk	#0x1
0000000000019058	mov	w0, #0x1
000000000001905c	b	0x190a0
0000000000019060	b	0x19064
0000000000019064	mov	x8, sp
0000000000019068	str	x8, [x23, #0x110]
000000000001906c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000019070	ldr	x8, [x0, #0x8]
0000000000019074	ldr	x19, [x8]
0000000000019078	str	x19, [sp, #0x28]
000000000001907c	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000019080	ldr	x8, [x19]
0000000000019084	and	x8, x8, #0xfffffffffffffffc
0000000000019088	ldr	x8, [x8]
000000000001908c	ldr	w8, [x8, #0x5c]
0000000000019090	and	w8, w8, #0xfffffffe
0000000000019094	cmp	w8, #0x84
0000000000019098	b.ne	0x190c4
000000000001909c	mov	w0, #0x0
00000000000190a0	ldr	x8, [sp, #0x8]
00000000000190a4	str	x8, [x23, #0x110]
00000000000190a8	ldp	x29, x30, [sp, #0x70]
00000000000190ac	ldp	x20, x19, [sp, #0x60]
00000000000190b0	ldp	x22, x21, [sp, #0x50]
00000000000190b4	ldp	x24, x23, [sp, #0x40]
00000000000190b8	ldp	x26, x25, [sp, #0x30]
00000000000190bc	add	sp, sp, #0x80
00000000000190c0	ret
00000000000190c4	mov	x0, x19
00000000000190c8	bl	_ThrowException
_kfun:kotlin.collections.HashMap#keysIterator(){}kotlin.collections.HashMap.KeysItr<1:0,1:1>:
00000000000190cc	stp	x22, x21, [sp, #-0x30]!
00000000000190d0	stp	x20, x19, [sp, #0x10]
00000000000190d4	stp	x29, x30, [sp, #0x20]
00000000000190d8	add	x29, sp, #0x20
00000000000190dc	mov	x19, x1
00000000000190e0	mov	x20, x0
00000000000190e4	adr	x8, #0x7b1a5
00000000000190e8	nop
00000000000190ec	ldarb	w8, [x8]
00000000000190f0	tbz	w8, #0x0, 0x190f8
00000000000190f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000190f8	adrp	x0, 97 ; 0x7a000
00000000000190fc	add	x0, x0, #0x2c0
0000000000019100	ldr	x8, [x0]
0000000000019104	blr	x8
0000000000019108	ldr	x8, [x0]
000000000001910c	ldr	x8, [x8, #0x118]
0000000000019110	add	x0, x8, #0x70
0000000000019114	mov	w1, #0x20
0000000000019118	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001911c	mov	x21, x0
0000000000019120	adr	x8, #0x4add0
0000000000019124	nop
0000000000019128	str	x8, [x21, #0x10]!
000000000001912c	stur	xzr, [x21, #-0x8]
0000000000019130	str	x21, [x19]
0000000000019134	str	x20, [x21, #0x8]
0000000000019138	mov	w8, #-0x1
000000000001913c	str	w8, [x21, #0x14]
0000000000019140	mov	x0, x21
0000000000019144	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
0000000000019148	str	x21, [x19]
000000000001914c	mov	x0, x21
0000000000019150	ldp	x29, x30, [sp, #0x20]
0000000000019154	ldp	x20, x19, [sp, #0x10]
0000000000019158	ldp	x22, x21, [sp], #0x30
000000000001915c	ret
_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>:
0000000000019160	stp	x22, x21, [sp, #-0x30]!
0000000000019164	stp	x20, x19, [sp, #0x10]
0000000000019168	stp	x29, x30, [sp, #0x20]
000000000001916c	add	x29, sp, #0x20
0000000000019170	mov	x19, x1
0000000000019174	mov	x20, x0
0000000000019178	adr	x8, #0x7b111
000000000001917c	nop
0000000000019180	ldarb	w8, [x8]
0000000000019184	tbz	w8, #0x0, 0x1918c
0000000000019188	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001918c	adrp	x0, 97 ; 0x7a000
0000000000019190	add	x0, x0, #0x2c0
0000000000019194	ldr	x8, [x0]
0000000000019198	blr	x8
000000000001919c	ldr	x8, [x0]
00000000000191a0	ldr	x8, [x8, #0x118]
00000000000191a4	add	x0, x8, #0x70
00000000000191a8	mov	w1, #0x20
00000000000191ac	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000191b0	mov	x21, x0
00000000000191b4	adr	x8, #0x4ae5c
00000000000191b8	nop
00000000000191bc	str	x8, [x21, #0x10]!
00000000000191c0	stur	xzr, [x21, #-0x8]
00000000000191c4	str	x21, [x19]
00000000000191c8	str	x20, [x21, #0x8]
00000000000191cc	mov	w8, #-0x1
00000000000191d0	str	w8, [x21, #0x14]
00000000000191d4	mov	x0, x21
00000000000191d8	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
00000000000191dc	str	x21, [x19]
00000000000191e0	mov	x0, x21
00000000000191e4	ldp	x29, x30, [sp, #0x20]
00000000000191e8	ldp	x20, x19, [sp, #0x10]
00000000000191ec	ldp	x22, x21, [sp], #0x30
00000000000191f0	ret
_kfun:kotlin.collections.HashMap.Companion.computeHashSize#internal:
00000000000191f4	stp	x20, x19, [sp, #-0x20]!
00000000000191f8	stp	x29, x30, [sp, #0x10]
00000000000191fc	add	x29, sp, #0x10
0000000000019200	mov	x19, x0
0000000000019204	adr	x8, #0x7b085
0000000000019208	nop
000000000001920c	ldarb	w8, [x8]
0000000000019210	tbz	w8, #0x0, 0x19218
0000000000019214	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019218	cmp	w19, #0x1
000000000001921c	b.lt	0x19238
0000000000019220	adds	w8, w19, w19, lsl #1
0000000000019224	b.ne	0x1923c
0000000000019228	mov	w0, #0x0
000000000001922c	ldp	x29, x30, [sp, #0x10]
0000000000019230	ldp	x20, x19, [sp], #0x20
0000000000019234	ret
0000000000019238	mov	w8, #0x3
000000000001923c	clz	w8, w8
0000000000019240	eor	w8, w8, #0x1f
0000000000019244	mov	w9, #0x1
0000000000019248	lsl	w0, w9, w8
000000000001924c	ldp	x29, x30, [sp, #0x10]
0000000000019250	ldp	x20, x19, [sp], #0x20
0000000000019254	ret
_kfun:kotlin.collections.HashMap.Itr#initNext(){}:
0000000000019258	sub	sp, sp, #0x50
000000000001925c	stp	x22, x21, [sp, #0x20]
0000000000019260	stp	x20, x19, [sp, #0x30]
0000000000019264	stp	x29, x30, [sp, #0x40]
0000000000019268	add	x29, sp, #0x40
000000000001926c	mov	x19, x0
0000000000019270	movi.16b	v0, #0x0
0000000000019274	stp	q0, q0, [sp]
0000000000019278	adrp	x0, 97 ; 0x7a000
000000000001927c	add	x0, x0, #0x2c0
0000000000019280	ldr	x8, [x0]
0000000000019284	blr	x8
0000000000019288	ldr	x20, [x0]
000000000001928c	ldr	x8, [x20, #0x110]
0000000000019290	mov	x9, sp
0000000000019294	str	x9, [x20, #0x110]
0000000000019298	mov	x9, #0x400000000
000000000001929c	stp	x8, x9, [sp, #0x8]
00000000000192a0	adr	x21, #0x7afe9
00000000000192a4	nop
00000000000192a8	ldarb	w8, [x21]
00000000000192ac	tbz	w8, #0x0, 0x192b4
00000000000192b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000192b4	ldr	w8, [x19, #0x10]
00000000000192b8	b	0x192c8
00000000000192bc	ldr	w8, [x19, #0x10]
00000000000192c0	add	w8, w8, #0x1
00000000000192c4	str	w8, [x19, #0x10]
00000000000192c8	ldr	x9, [x19, #0x8]
00000000000192cc	ldr	w10, [x9, #0x44]
00000000000192d0	cmp	w8, w10
00000000000192d4	b.ge	0x19308
00000000000192d8	ldr	x9, [x9, #0x18]
00000000000192dc	str	x9, [sp, #0x18]
00000000000192e0	ldr	w10, [x9, #0x8]
00000000000192e4	cmp	w10, w8
00000000000192e8	b.ls	0x19324
00000000000192ec	add	x8, x9, w8, sxtw #2
00000000000192f0	ldr	w8, [x8, #0x10]
00000000000192f4	tbz	w8, #0x1f, 0x19308
00000000000192f8	ldarb	w8, [x21]
00000000000192fc	tbz	w8, #0x0, 0x192bc
0000000000019300	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019304	b	0x192bc
0000000000019308	ldr	x8, [sp, #0x8]
000000000001930c	str	x8, [x20, #0x110]
0000000000019310	ldp	x29, x30, [sp, #0x40]
0000000000019314	ldp	x20, x19, [sp, #0x30]
0000000000019318	ldp	x22, x21, [sp, #0x20]
000000000001931c	add	sp, sp, #0x50
0000000000019320	ret
0000000000019324	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.Itr#hasNext(){}kotlin.Boolean:
0000000000019328	stp	x20, x19, [sp, #-0x20]!
000000000001932c	stp	x29, x30, [sp, #0x10]
0000000000019330	add	x29, sp, #0x10
0000000000019334	mov	x19, x0
0000000000019338	adr	x8, #0x7af51
000000000001933c	nop
0000000000019340	ldarb	w8, [x8]
0000000000019344	tbz	w8, #0x0, 0x1934c
0000000000019348	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001934c	ldr	w8, [x19, #0x10]
0000000000019350	ldr	x9, [x19, #0x8]
0000000000019354	ldr	w9, [x9, #0x44]
0000000000019358	cmp	w8, w9
000000000001935c	cset	w0, lt
0000000000019360	ldp	x29, x30, [sp, #0x10]
0000000000019364	ldp	x20, x19, [sp], #0x20
0000000000019368	ret
_kfun:kotlin.collections.HashMap.Itr#remove(){}:
000000000001936c	stp	x20, x19, [sp, #-0x20]!
0000000000019370	stp	x29, x30, [sp, #0x10]
0000000000019374	add	x29, sp, #0x10
0000000000019378	mov	x19, x0
000000000001937c	adr	x8, #0x7af0d
0000000000019380	nop
0000000000019384	ldarb	w8, [x8]
0000000000019388	tbz	w8, #0x0, 0x19390
000000000001938c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019390	ldr	x0, [x19, #0x8]
0000000000019394	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000019398	ldr	x0, [x19, #0x8]
000000000001939c	ldr	w1, [x19, #0x14]
00000000000193a0	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
00000000000193a4	mov	w8, #-0x1
00000000000193a8	str	w8, [x19, #0x14]
00000000000193ac	ldp	x29, x30, [sp, #0x10]
00000000000193b0	ldp	x20, x19, [sp], #0x20
00000000000193b4	ret
_kfun:kotlin.collections.HashMap.KeysItr#next(){}1:0:
00000000000193b8	sub	sp, sp, #0x60
00000000000193bc	stp	x22, x21, [sp, #0x30]
00000000000193c0	stp	x20, x19, [sp, #0x40]
00000000000193c4	stp	x29, x30, [sp, #0x50]
00000000000193c8	add	x29, sp, #0x50
00000000000193cc	mov	x19, x1
00000000000193d0	mov	x20, x0
00000000000193d4	movi.16b	v0, #0x0
00000000000193d8	stp	q0, q0, [sp]
00000000000193dc	str	q0, [sp, #0x20]
00000000000193e0	adrp	x0, 97 ; 0x7a000
00000000000193e4	add	x0, x0, #0x2c0
00000000000193e8	ldr	x8, [x0]
00000000000193ec	blr	x8
00000000000193f0	ldr	x22, [x0]
00000000000193f4	ldr	x8, [x22, #0x110]
00000000000193f8	mov	x9, sp
00000000000193fc	str	x9, [x22, #0x110]
0000000000019400	mov	x9, #0x600000000
0000000000019404	stp	x8, x9, [sp, #0x8]
0000000000019408	adr	x8, #0x7ae81
000000000001940c	nop
0000000000019410	ldarb	w8, [x8]
0000000000019414	tbz	w8, #0x0, 0x1941c
0000000000019418	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001941c	ldr	w8, [x20, #0x10]
0000000000019420	ldr	x9, [x20, #0x8]
0000000000019424	ldr	w10, [x9, #0x44]
0000000000019428	cmp	w8, w10
000000000001942c	b.ge	0x19488
0000000000019430	add	w10, w8, #0x1
0000000000019434	stp	w10, w8, [x20, #0x10]
0000000000019438	ldr	x9, [x9, #0x8]
000000000001943c	str	x9, [sp, #0x20]
0000000000019440	ldr	w10, [x9, #0x8]
0000000000019444	cmp	w10, w8
0000000000019448	b.ls	0x194c0
000000000001944c	sxtw	x8, w8
0000000000019450	add	x8, x9, x8, lsl #3
0000000000019454	ldr	x21, [x8, #0x10]
0000000000019458	str	x21, [sp, #0x28]
000000000001945c	mov	x0, x20
0000000000019460	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
0000000000019464	str	x21, [x19]
0000000000019468	ldr	x8, [sp, #0x8]
000000000001946c	str	x8, [x22, #0x110]
0000000000019470	mov	x0, x21
0000000000019474	ldp	x29, x30, [sp, #0x50]
0000000000019478	ldp	x20, x19, [sp, #0x40]
000000000001947c	ldp	x22, x21, [sp, #0x30]
0000000000019480	add	sp, sp, #0x60
0000000000019484	ret
0000000000019488	ldr	x8, [x22, #0x118]
000000000001948c	add	x0, x8, #0x70
0000000000019490	mov	w1, #0x38
0000000000019494	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000019498	mov	x19, x0
000000000001949c	adr	x8, #0x47d64
00000000000194a0	nop
00000000000194a4	str	x8, [x19, #0x10]!
00000000000194a8	stur	xzr, [x19, #-0x8]
00000000000194ac	str	x19, [sp, #0x18]
00000000000194b0	mov	x0, x19
00000000000194b4	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
00000000000194b8	mov	x0, x19
00000000000194bc	bl	_ThrowException
00000000000194c0	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.ValuesItr#next(){}1:1:
00000000000194c4	sub	sp, sp, #0x60
00000000000194c8	stp	x22, x21, [sp, #0x30]
00000000000194cc	stp	x20, x19, [sp, #0x40]
00000000000194d0	stp	x29, x30, [sp, #0x50]
00000000000194d4	add	x29, sp, #0x50
00000000000194d8	mov	x19, x1
00000000000194dc	mov	x20, x0
00000000000194e0	movi.16b	v0, #0x0
00000000000194e4	stp	q0, q0, [sp]
00000000000194e8	str	q0, [sp, #0x20]
00000000000194ec	adrp	x0, 97 ; 0x7a000
00000000000194f0	add	x0, x0, #0x2c0
00000000000194f4	ldr	x8, [x0]
00000000000194f8	blr	x8
00000000000194fc	ldr	x22, [x0]
0000000000019500	ldr	x8, [x22, #0x110]
0000000000019504	mov	x9, sp
0000000000019508	str	x9, [x22, #0x110]
000000000001950c	mov	x9, #0x600000000
0000000000019510	stp	x8, x9, [sp, #0x8]
0000000000019514	adr	x8, #0x7ad75
0000000000019518	nop
000000000001951c	ldarb	w8, [x8]
0000000000019520	tbz	w8, #0x0, 0x19528
0000000000019524	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019528	ldr	w8, [x20, #0x10]
000000000001952c	ldr	x9, [x20, #0x8]
0000000000019530	ldr	w10, [x9, #0x44]
0000000000019534	cmp	w8, w10
0000000000019538	b.ge	0x19598
000000000001953c	add	w10, w8, #0x1
0000000000019540	stp	w10, w8, [x20, #0x10]
0000000000019544	ldr	x9, [x9, #0x10]
0000000000019548	str	x9, [sp, #0x20]
000000000001954c	cbz	x9, 0x195d0
0000000000019550	ldr	w10, [x9, #0x8]
0000000000019554	cmp	w10, w8
0000000000019558	b.ls	0x195d4
000000000001955c	sxtw	x8, w8
0000000000019560	add	x8, x9, x8, lsl #3
0000000000019564	ldr	x21, [x8, #0x10]
0000000000019568	str	x21, [sp, #0x28]
000000000001956c	mov	x0, x20
0000000000019570	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
0000000000019574	str	x21, [x19]
0000000000019578	ldr	x8, [sp, #0x8]
000000000001957c	str	x8, [x22, #0x110]
0000000000019580	mov	x0, x21
0000000000019584	ldp	x29, x30, [sp, #0x50]
0000000000019588	ldp	x20, x19, [sp, #0x40]
000000000001958c	ldp	x22, x21, [sp, #0x30]
0000000000019590	add	sp, sp, #0x60
0000000000019594	ret
0000000000019598	ldr	x8, [x22, #0x118]
000000000001959c	add	x0, x8, #0x70
00000000000195a0	mov	w1, #0x38
00000000000195a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000195a8	mov	x19, x0
00000000000195ac	adr	x8, #0x47c54
00000000000195b0	nop
00000000000195b4	str	x8, [x19, #0x10]!
00000000000195b8	stur	xzr, [x19, #-0x8]
00000000000195bc	str	x19, [sp, #0x18]
00000000000195c0	mov	x0, x19
00000000000195c4	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
00000000000195c8	mov	x0, x19
00000000000195cc	bl	_ThrowException
00000000000195d0	bl	_ThrowNullPointerException
00000000000195d4	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntriesItr#next(){}kotlin.collections.HashMap.EntryRef<1:0,1:1>:
00000000000195d8	sub	sp, sp, #0x70
00000000000195dc	stp	x24, x23, [sp, #0x30]
00000000000195e0	stp	x22, x21, [sp, #0x40]
00000000000195e4	stp	x20, x19, [sp, #0x50]
00000000000195e8	stp	x29, x30, [sp, #0x60]
00000000000195ec	add	x29, sp, #0x60
00000000000195f0	mov	x19, x1
00000000000195f4	mov	x20, x0
00000000000195f8	movi.16b	v0, #0x0
00000000000195fc	stp	q0, q0, [sp]
0000000000019600	str	xzr, [sp, #0x20]
0000000000019604	adrp	x0, 97 ; 0x7a000
0000000000019608	add	x0, x0, #0x2c0
000000000001960c	ldr	x8, [x0]
0000000000019610	blr	x8
0000000000019614	ldr	x22, [x0]
0000000000019618	ldr	x8, [x22, #0x110]
000000000001961c	mov	x9, sp
0000000000019620	str	x9, [x22, #0x110]
0000000000019624	mov	x9, #0x500000000
0000000000019628	stp	x8, x9, [sp, #0x8]
000000000001962c	adr	x8, #0x7ac5d
0000000000019630	nop
0000000000019634	ldarb	w8, [x8]
0000000000019638	tbz	w8, #0x0, 0x19640
000000000001963c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019640	ldr	w23, [x20, #0x10]
0000000000019644	ldr	x24, [x20, #0x8]
0000000000019648	ldr	w8, [x24, #0x44]
000000000001964c	cmp	w23, w8
0000000000019650	b.ge	0x196bc
0000000000019654	add	w8, w23, #0x1
0000000000019658	stp	w8, w23, [x20, #0x10]
000000000001965c	ldr	x8, [x22, #0x118]
0000000000019660	add	x0, x8, #0x70
0000000000019664	mov	w1, #0x20
0000000000019668	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001966c	mov	x21, x0
0000000000019670	adr	x8, #0x4aa30
0000000000019674	nop
0000000000019678	str	x8, [x21, #0x10]!
000000000001967c	stur	xzr, [x21, #-0x8]
0000000000019680	str	x21, [sp, #0x20]
0000000000019684	str	x24, [x21, #0x8]
0000000000019688	str	w23, [x21, #0x10]
000000000001968c	mov	x0, x20
0000000000019690	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
0000000000019694	str	x21, [x19]
0000000000019698	ldr	x8, [sp, #0x8]
000000000001969c	str	x8, [x22, #0x110]
00000000000196a0	mov	x0, x21
00000000000196a4	ldp	x29, x30, [sp, #0x60]
00000000000196a8	ldp	x20, x19, [sp, #0x50]
00000000000196ac	ldp	x22, x21, [sp, #0x40]
00000000000196b0	ldp	x24, x23, [sp, #0x30]
00000000000196b4	add	sp, sp, #0x70
00000000000196b8	ret
00000000000196bc	ldr	x8, [x22, #0x118]
00000000000196c0	add	x0, x8, #0x70
00000000000196c4	mov	w1, #0x38
00000000000196c8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000196cc	mov	x19, x0
00000000000196d0	adr	x8, #0x47b30
00000000000196d4	nop
00000000000196d8	str	x8, [x19, #0x10]!
00000000000196dc	stur	xzr, [x19, #-0x8]
00000000000196e0	str	x19, [sp, #0x18]
00000000000196e4	mov	x0, x19
00000000000196e8	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
00000000000196ec	mov	x0, x19
00000000000196f0	bl	_ThrowException
_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0:
00000000000196f4	sub	sp, sp, #0x50
00000000000196f8	stp	x22, x21, [sp, #0x20]
00000000000196fc	stp	x20, x19, [sp, #0x30]
0000000000019700	stp	x29, x30, [sp, #0x40]
0000000000019704	add	x29, sp, #0x40
0000000000019708	mov	x19, x1
000000000001970c	mov	x20, x0
0000000000019710	movi.16b	v0, #0x0
0000000000019714	stp	q0, q0, [sp]
0000000000019718	adrp	x0, 97 ; 0x7a000
000000000001971c	add	x0, x0, #0x2c0
0000000000019720	ldr	x8, [x0]
0000000000019724	blr	x8
0000000000019728	ldr	x21, [x0]
000000000001972c	ldr	x8, [x21, #0x110]
0000000000019730	mov	x9, sp
0000000000019734	str	x9, [x21, #0x110]
0000000000019738	mov	x9, #0x400000000
000000000001973c	stp	x8, x9, [sp, #0x8]
0000000000019740	adr	x8, #0x7ab49
0000000000019744	nop
0000000000019748	ldarb	w8, [x8]
000000000001974c	tbz	w8, #0x0, 0x19754
0000000000019750	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019754	ldr	x8, [x20, #0x8]
0000000000019758	ldr	x8, [x8, #0x8]
000000000001975c	str	x8, [sp, #0x18]
0000000000019760	ldrsw	x9, [x20, #0x10]
0000000000019764	ldr	w10, [x8, #0x8]
0000000000019768	cmp	w10, w9
000000000001976c	b.ls	0x19798
0000000000019770	add	x8, x8, x9, lsl #3
0000000000019774	ldr	x0, [x8, #0x10]
0000000000019778	str	x0, [x19]
000000000001977c	ldr	x8, [sp, #0x8]
0000000000019780	str	x8, [x21, #0x110]
0000000000019784	ldp	x29, x30, [sp, #0x40]
0000000000019788	ldp	x20, x19, [sp, #0x30]
000000000001978c	ldp	x22, x21, [sp, #0x20]
0000000000019790	add	sp, sp, #0x50
0000000000019794	ret
0000000000019798	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1:
000000000001979c	sub	sp, sp, #0x50
00000000000197a0	stp	x22, x21, [sp, #0x20]
00000000000197a4	stp	x20, x19, [sp, #0x30]
00000000000197a8	stp	x29, x30, [sp, #0x40]
00000000000197ac	add	x29, sp, #0x40
00000000000197b0	mov	x19, x1
00000000000197b4	mov	x20, x0
00000000000197b8	movi.16b	v0, #0x0
00000000000197bc	stp	q0, q0, [sp]
00000000000197c0	adrp	x0, 97 ; 0x7a000
00000000000197c4	add	x0, x0, #0x2c0
00000000000197c8	ldr	x8, [x0]
00000000000197cc	blr	x8
00000000000197d0	ldr	x21, [x0]
00000000000197d4	ldr	x8, [x21, #0x110]
00000000000197d8	mov	x9, sp
00000000000197dc	str	x9, [x21, #0x110]
00000000000197e0	mov	x9, #0x400000000
00000000000197e4	stp	x8, x9, [sp, #0x8]
00000000000197e8	adr	x8, #0x7aaa1
00000000000197ec	nop
00000000000197f0	ldarb	w8, [x8]
00000000000197f4	tbz	w8, #0x0, 0x197fc
00000000000197f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000197fc	ldr	x8, [x20, #0x8]
0000000000019800	ldr	x8, [x8, #0x10]
0000000000019804	str	x8, [sp, #0x18]
0000000000019808	cbz	x8, 0x19844
000000000001980c	ldrsw	x9, [x20, #0x10]
0000000000019810	ldr	w10, [x8, #0x8]
0000000000019814	cmp	w10, w9
0000000000019818	b.ls	0x19848
000000000001981c	add	x8, x8, x9, lsl #3
0000000000019820	ldr	x0, [x8, #0x10]
0000000000019824	str	x0, [x19]
0000000000019828	ldr	x8, [sp, #0x8]
000000000001982c	str	x8, [x21, #0x110]
0000000000019830	ldp	x29, x30, [sp, #0x40]
0000000000019834	ldp	x20, x19, [sp, #0x30]
0000000000019838	ldp	x22, x21, [sp, #0x20]
000000000001983c	add	sp, sp, #0x50
0000000000019840	ret
0000000000019844	bl	_ThrowNullPointerException
0000000000019848	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntryRef#setValue(1:1){}1:1:
000000000001984c	sub	sp, sp, #0x70
0000000000019850	stp	x24, x23, [sp, #0x30]
0000000000019854	stp	x22, x21, [sp, #0x40]
0000000000019858	stp	x20, x19, [sp, #0x50]
000000000001985c	stp	x29, x30, [sp, #0x60]
0000000000019860	add	x29, sp, #0x60
0000000000019864	mov	x19, x2
0000000000019868	mov	x20, x1
000000000001986c	mov	x21, x0
0000000000019870	movi.16b	v0, #0x0
0000000000019874	stp	q0, q0, [sp]
0000000000019878	str	xzr, [sp, #0x20]
000000000001987c	mov	x8, sp
0000000000019880	add	x22, x8, #0x18
0000000000019884	adrp	x0, 97 ; 0x7a000
0000000000019888	add	x0, x0, #0x2c0
000000000001988c	ldr	x9, [x0]
0000000000019890	blr	x9
0000000000019894	ldr	x23, [x0]
0000000000019898	ldr	x9, [x23, #0x110]
000000000001989c	str	x8, [x23, #0x110]
00000000000198a0	mov	x8, #0x500000000
00000000000198a4	stp	x9, x8, [sp, #0x8]
00000000000198a8	adr	x8, #0x7a9e1
00000000000198ac	nop
00000000000198b0	ldarb	w8, [x8]
00000000000198b4	tbz	w8, #0x0, 0x198bc
00000000000198b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000198bc	ldr	x0, [x21, #0x8]
00000000000198c0	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
00000000000198c4	ldr	x0, [x21, #0x8]
00000000000198c8	mov	x1, x22
00000000000198cc	bl	"_kfun:kotlin.collections.HashMap.allocateValuesArray#internal"
00000000000198d0	ldrsw	x8, [x21, #0x10]
00000000000198d4	ldr	w9, [x0, #0x8]
00000000000198d8	cmp	w9, w8
00000000000198dc	b.ls	0x1991c
00000000000198e0	add	x9, x0, x8, lsl #3
00000000000198e4	ldr	x8, [x9, #0x10]
00000000000198e8	str	x8, [sp, #0x20]
00000000000198ec	ldr	xzr, [x0]
00000000000198f0	str	x20, [x9, #0x10]
00000000000198f4	str	x8, [x19]
00000000000198f8	ldr	x9, [sp, #0x8]
00000000000198fc	str	x9, [x23, #0x110]
0000000000019900	mov	x0, x8
0000000000019904	ldp	x29, x30, [sp, #0x60]
0000000000019908	ldp	x20, x19, [sp, #0x50]
000000000001990c	ldp	x22, x21, [sp, #0x40]
0000000000019910	ldp	x24, x23, [sp, #0x30]
0000000000019914	add	sp, sp, #0x70
0000000000019918	ret
000000000001991c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntryRef#equals(kotlin.Any?){}kotlin.Boolean:
0000000000019920	sub	sp, sp, #0x80
0000000000019924	stp	x24, x23, [sp, #0x40]
0000000000019928	stp	x22, x21, [sp, #0x50]
000000000001992c	stp	x20, x19, [sp, #0x60]
0000000000019930	stp	x29, x30, [sp, #0x70]
0000000000019934	add	x29, sp, #0x70
0000000000019938	mov	x20, x1
000000000001993c	mov	x19, x0
0000000000019940	movi.16b	v0, #0x0
0000000000019944	stp	q0, q0, [sp]
0000000000019948	str	xzr, [sp, #0x30]
000000000001994c	str	q0, [sp, #0x20]
0000000000019950	mov	x24, sp
0000000000019954	adrp	x0, 97 ; 0x7a000
0000000000019958	add	x0, x0, #0x2c0
000000000001995c	ldr	x8, [x0]
0000000000019960	blr	x8
0000000000019964	ldr	x23, [x0]
0000000000019968	ldr	x8, [x23, #0x110]
000000000001996c	str	x24, [x23, #0x110]
0000000000019970	mov	x9, #0x700000000
0000000000019974	stp	x8, x9, [sp, #0x8]
0000000000019978	adr	x8, #0x7a911
000000000001997c	nop
0000000000019980	ldarb	w8, [x8]
0000000000019984	tbz	w8, #0x0, 0x1998c
0000000000019988	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001998c	cbz	x20, 0x19b94
0000000000019990	ldr	x8, [x20]
0000000000019994	and	x8, x8, #0xfffffffffffffffc
0000000000019998	ldr	x8, [x8]
000000000001999c	ldr	w9, [x8, #0x3c]
00000000000199a0	ldr	x8, [x8, #0x40]
00000000000199a4	tbnz	w9, #0x1f, 0x199c4
00000000000199a8	mov	w10, #0xa8
00000000000199ac	and	x9, x9, x10
00000000000199b0	lsl	x9, x9, #4
00000000000199b4	ldr	w8, [x8, x9]
00000000000199b8	cmp	w8, #0xa8
00000000000199bc	b.eq	0x19a94
00000000000199c0	b	0x19b94
00000000000199c4	neg	w10, w9
00000000000199c8	mvn	w9, w9
00000000000199cc	cmp	w10, #0x9
00000000000199d0	b.ge	0x19a1c
00000000000199d4	cmp	w10, #0x2
00000000000199d8	b.lt	0x19a64
00000000000199dc	mov	x10, #0x0
00000000000199e0	mov	x11, x8
00000000000199e4	ldr	w12, [x11]
00000000000199e8	cmp	w12, #0xa7
00000000000199ec	b.gt	0x19a80
00000000000199f0	add	x10, x10, #0x1
00000000000199f4	add	x11, x11, #0x10
00000000000199f8	cmp	x9, x10
00000000000199fc	b.ne	0x199e4
0000000000019a00	mov	x10, x9
0000000000019a04	sxtw	x9, w10
0000000000019a08	lsl	x9, x9, #4
0000000000019a0c	ldr	w8, [x8, x9]
0000000000019a10	cmp	w8, #0xa8
0000000000019a14	b.eq	0x19a94
0000000000019a18	b	0x19b94
0000000000019a1c	mov	w10, #0x0
0000000000019a20	add	w11, w9, w10
0000000000019a24	cmp	w11, #0x0
0000000000019a28	cinc	w11, w11, lt
0000000000019a2c	asr	w11, w11, #1
0000000000019a30	sbfiz	x12, x11, #4, #32
0000000000019a34	ldr	w12, [x8, x12]
0000000000019a38	cmp	w12, #0xa8
0000000000019a3c	csinc	w10, w10, w11, ge
0000000000019a40	csel	w9, w9, w11, lt
0000000000019a44	cmp	w10, w9
0000000000019a48	b.lt	0x19a20
0000000000019a4c	sxtw	x9, w10
0000000000019a50	lsl	x9, x9, #4
0000000000019a54	ldr	w8, [x8, x9]
0000000000019a58	cmp	w8, #0xa8
0000000000019a5c	b.ne	0x19b94
0000000000019a60	b	0x19a94
0000000000019a64	mov	w10, #0x0
0000000000019a68	sxtw	x9, w10
0000000000019a6c	lsl	x9, x9, #4
0000000000019a70	ldr	w8, [x8, x9]
0000000000019a74	cmp	w8, #0xa8
0000000000019a78	b.eq	0x19a94
0000000000019a7c	b	0x19b94
0000000000019a80	sxtw	x9, w10
0000000000019a84	lsl	x9, x9, #4
0000000000019a88	ldr	w8, [x8, x9]
0000000000019a8c	cmp	w8, #0xa8
0000000000019a90	b.ne	0x19b94
0000000000019a94	add	x21, x24, #0x20
0000000000019a98	add	x1, x24, #0x18
0000000000019a9c	ldr	x8, [x20]
0000000000019aa0	and	x8, x8, #0xfffffffffffffffc
0000000000019aa4	ldr	x8, [x8]
0000000000019aa8	ldr	w9, [x8, #0x3c]
0000000000019aac	ldr	x8, [x8, #0x40]
0000000000019ab0	tbnz	w9, #0x1f, 0x19ac0
0000000000019ab4	mov	w10, #0xa8
0000000000019ab8	and	x9, x9, x10
0000000000019abc	b	0x19b44
0000000000019ac0	neg	w10, w9
0000000000019ac4	mvn	w9, w9
0000000000019ac8	cmp	w10, #0x9
0000000000019acc	b.ge	0x19b04
0000000000019ad0	cmp	w10, #0x2
0000000000019ad4	b.lt	0x19b38
0000000000019ad8	mov	x10, #0x0
0000000000019adc	mov	x11, x8
0000000000019ae0	ldr	w12, [x11]
0000000000019ae4	cmp	w12, #0xa7
0000000000019ae8	b.gt	0x19b40
0000000000019aec	add	x10, x10, #0x1
0000000000019af0	add	x11, x11, #0x10
0000000000019af4	cmp	x9, x10
0000000000019af8	b.ne	0x19ae0
0000000000019afc	mov	x10, x9
0000000000019b00	b	0x19b40
0000000000019b04	mov	w10, #0x0
0000000000019b08	add	w11, w9, w10
0000000000019b0c	cmp	w11, #0x0
0000000000019b10	cinc	w11, w11, lt
0000000000019b14	asr	w11, w11, #1
0000000000019b18	sbfiz	x12, x11, #4, #32
0000000000019b1c	ldr	w12, [x8, x12]
0000000000019b20	cmp	w12, #0xa8
0000000000019b24	csinc	w10, w10, w11, ge
0000000000019b28	csel	w9, w9, w11, lt
0000000000019b2c	cmp	w10, w9
0000000000019b30	b.lt	0x19b08
0000000000019b34	b	0x19b40
0000000000019b38	mov	w10, #0x0
0000000000019b3c	b	0x19b40
0000000000019b40	sxtw	x9, w10
0000000000019b44	add	x8, x8, x9, lsl #4
0000000000019b48	ldr	x8, [x8, #0x8]
0000000000019b4c	ldr	x8, [x8]
0000000000019b50	mov	x0, x20
0000000000019b54	blr	x8
0000000000019b58	mov	x22, x0
0000000000019b5c	mov	x0, x19
0000000000019b60	mov	x1, x21
0000000000019b64	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0"
0000000000019b68	mov	x1, x0
0000000000019b6c	cbz	x22, 0x19b90
0000000000019b70	ldr	x8, [x22]
0000000000019b74	and	x8, x8, #0xfffffffffffffffc
0000000000019b78	ldr	x8, [x8]
0000000000019b7c	ldr	x8, [x8, #0x70]
0000000000019b80	mov	x0, x22
0000000000019b84	blr	x8
0000000000019b88	cbz	w0, 0x19b98
0000000000019b8c	b	0x19bb8
0000000000019b90	cbz	x1, 0x19bb8
0000000000019b94	mov	w0, #0x0
0000000000019b98	ldr	x8, [sp, #0x8]
0000000000019b9c	str	x8, [x23, #0x110]
0000000000019ba0	ldp	x29, x30, [sp, #0x70]
0000000000019ba4	ldp	x20, x19, [sp, #0x60]
0000000000019ba8	ldp	x22, x21, [sp, #0x50]
0000000000019bac	ldp	x24, x23, [sp, #0x40]
0000000000019bb0	add	sp, sp, #0x80
0000000000019bb4	ret
0000000000019bb8	add	x21, x24, #0x30
0000000000019bbc	add	x1, x24, #0x28
0000000000019bc0	ldr	x8, [x20]
0000000000019bc4	and	x8, x8, #0xfffffffffffffffc
0000000000019bc8	ldr	x8, [x8]
0000000000019bcc	ldr	w9, [x8, #0x3c]
0000000000019bd0	ldr	x8, [x8, #0x40]
0000000000019bd4	tbnz	w9, #0x1f, 0x19be4
0000000000019bd8	mov	w10, #0xa8
0000000000019bdc	and	x9, x9, x10
0000000000019be0	b	0x19c68
0000000000019be4	neg	w10, w9
0000000000019be8	mvn	w9, w9
0000000000019bec	cmp	w10, #0x9
0000000000019bf0	b.ge	0x19c28
0000000000019bf4	cmp	w10, #0x2
0000000000019bf8	b.lt	0x19c5c
0000000000019bfc	mov	x10, #0x0
0000000000019c00	mov	x11, x8
0000000000019c04	ldr	w12, [x11]
0000000000019c08	cmp	w12, #0xa7
0000000000019c0c	b.gt	0x19c64
0000000000019c10	add	x10, x10, #0x1
0000000000019c14	add	x11, x11, #0x10
0000000000019c18	cmp	x9, x10
0000000000019c1c	b.ne	0x19c04
0000000000019c20	mov	x10, x9
0000000000019c24	b	0x19c64
0000000000019c28	mov	w10, #0x0
0000000000019c2c	add	w11, w9, w10
0000000000019c30	cmp	w11, #0x0
0000000000019c34	cinc	w11, w11, lt
0000000000019c38	asr	w11, w11, #1
0000000000019c3c	sbfiz	x12, x11, #4, #32
0000000000019c40	ldr	w12, [x8, x12]
0000000000019c44	cmp	w12, #0xa8
0000000000019c48	csinc	w10, w10, w11, ge
0000000000019c4c	csel	w9, w9, w11, lt
0000000000019c50	cmp	w10, w9
0000000000019c54	b.lt	0x19c2c
0000000000019c58	b	0x19c64
0000000000019c5c	mov	w10, #0x0
0000000000019c60	b	0x19c64
0000000000019c64	sxtw	x9, w10
0000000000019c68	add	x8, x8, x9, lsl #4
0000000000019c6c	ldr	x8, [x8, #0x8]
0000000000019c70	ldr	x8, [x8, #0x8]
0000000000019c74	mov	x0, x20
0000000000019c78	blr	x8
0000000000019c7c	mov	x20, x0
0000000000019c80	mov	x0, x19
0000000000019c84	mov	x1, x21
0000000000019c88	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
0000000000019c8c	mov	x1, x0
0000000000019c90	cbz	x20, 0x19cb0
0000000000019c94	ldr	x8, [x20]
0000000000019c98	and	x8, x8, #0xfffffffffffffffc
0000000000019c9c	ldr	x8, [x8]
0000000000019ca0	ldr	x8, [x8, #0x70]
0000000000019ca4	mov	x0, x20
0000000000019ca8	blr	x8
0000000000019cac	b	0x19b98
0000000000019cb0	cmp	x1, #0x0
0000000000019cb4	cset	w0, eq
0000000000019cb8	b	0x19b98
_kfun:kotlin.collections.HashMap.EntryRef#hashCode(){}kotlin.Int:
0000000000019cbc	sub	sp, sp, #0x60
0000000000019cc0	stp	x22, x21, [sp, #0x30]
0000000000019cc4	stp	x20, x19, [sp, #0x40]
0000000000019cc8	stp	x29, x30, [sp, #0x50]
0000000000019ccc	add	x29, sp, #0x50
0000000000019cd0	mov	x19, x0
0000000000019cd4	movi.16b	v0, #0x0
0000000000019cd8	stp	q0, q0, [sp]
0000000000019cdc	str	xzr, [sp, #0x20]
0000000000019ce0	mov	x8, sp
0000000000019ce4	add	x20, x8, #0x20
0000000000019ce8	add	x21, x8, #0x18
0000000000019cec	adrp	x0, 97 ; 0x7a000
0000000000019cf0	add	x0, x0, #0x2c0
0000000000019cf4	ldr	x9, [x0]
0000000000019cf8	blr	x9
0000000000019cfc	ldr	x22, [x0]
0000000000019d00	ldr	x9, [x22, #0x110]
0000000000019d04	str	x8, [x22, #0x110]
0000000000019d08	mov	x8, #0x500000000
0000000000019d0c	stp	x9, x8, [sp, #0x8]
0000000000019d10	adr	x8, #0x7a579
0000000000019d14	nop
0000000000019d18	ldarb	w8, [x8]
0000000000019d1c	tbz	w8, #0x0, 0x19d24
0000000000019d20	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019d24	mov	x0, x19
0000000000019d28	mov	x1, x21
0000000000019d2c	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0"
0000000000019d30	cbz	x0, 0x19d90
0000000000019d34	ldr	x8, [x0]
0000000000019d38	and	x8, x8, #0xfffffffffffffffc
0000000000019d3c	ldr	x8, [x8]
0000000000019d40	ldr	x8, [x8, #0x78]
0000000000019d44	blr	x8
0000000000019d48	mov	x21, x0
0000000000019d4c	mov	x0, x19
0000000000019d50	mov	x1, x20
0000000000019d54	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
0000000000019d58	cbz	x0, 0x19d70
0000000000019d5c	ldr	x8, [x0]
0000000000019d60	and	x8, x8, #0xfffffffffffffffc
0000000000019d64	ldr	x8, [x8]
0000000000019d68	ldr	x8, [x8, #0x78]
0000000000019d6c	blr	x8
0000000000019d70	eor	w0, w21, w0
0000000000019d74	ldr	x8, [sp, #0x8]
0000000000019d78	str	x8, [x22, #0x110]
0000000000019d7c	ldp	x29, x30, [sp, #0x50]
0000000000019d80	ldp	x20, x19, [sp, #0x40]
0000000000019d84	ldp	x22, x21, [sp, #0x30]
0000000000019d88	add	sp, sp, #0x60
0000000000019d8c	ret
0000000000019d90	mov	w21, #0x0
0000000000019d94	mov	x0, x19
0000000000019d98	mov	x1, x20
0000000000019d9c	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
0000000000019da0	cbnz	x0, 0x19d5c
0000000000019da4	b	0x19d70
_kfun:kotlin.collections.HashMap.EntryRef#toString(){}kotlin.String:
0000000000019da8	sub	sp, sp, #0xd0
0000000000019dac	stp	x26, x25, [sp, #0x80]
0000000000019db0	stp	x24, x23, [sp, #0x90]
0000000000019db4	stp	x22, x21, [sp, #0xa0]
0000000000019db8	stp	x20, x19, [sp, #0xb0]
0000000000019dbc	stp	x29, x30, [sp, #0xc0]
0000000000019dc0	add	x29, sp, #0xc0
0000000000019dc4	mov	x19, x1
0000000000019dc8	mov	x20, x0
0000000000019dcc	movi.16b	v0, #0x0
0000000000019dd0	stp	q0, q0, [sp, #0x20]
0000000000019dd4	str	xzr, [sp, #0x70]
0000000000019dd8	stp	q0, q0, [sp, #0x50]
0000000000019ddc	str	q0, [sp, #0x40]
0000000000019de0	add	x26, sp, #0x20
0000000000019de4	add	x24, x26, #0x20
0000000000019de8	add	x23, x26, #0x30
0000000000019dec	add	x21, x26, #0x40
0000000000019df0	add	x22, x26, #0x38
0000000000019df4	stp	xzr, xzr, [sp, #0x10]
0000000000019df8	adr	x8, #0x4ad98
0000000000019dfc	nop
0000000000019e00	orr	x8, x8, #0x3
0000000000019e04	str	x8, [sp, #0x8]
0000000000019e08	adrp	x0, 97 ; 0x7a000
0000000000019e0c	add	x0, x0, #0x2c0
0000000000019e10	ldr	x8, [x0]
0000000000019e14	blr	x8
0000000000019e18	ldr	x25, [x0]
0000000000019e1c	ldr	x8, [x25, #0x110]
0000000000019e20	str	x26, [x25, #0x110]
0000000000019e24	mov	x9, #0xb00000000
0000000000019e28	stp	x8, x9, [sp, #0x28]
0000000000019e2c	adr	x8, #0x7a45d
0000000000019e30	nop
0000000000019e34	ldarb	w8, [x8]
0000000000019e38	tbz	w8, #0x0, 0x19e40
0000000000019e3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019e40	add	x8, sp, #0x8
0000000000019e44	str	x8, [sp, #0x38]
0000000000019e48	add	x0, sp, #0x8
0000000000019e4c	mov	w1, #0xa
0000000000019e50	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000019e54	mov	x0, x20
0000000000019e58	mov	x1, x24
0000000000019e5c	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0"
0000000000019e60	cbz	x0, 0x19e88
0000000000019e64	add	x8, sp, #0x20
0000000000019e68	add	x1, x8, #0x28
0000000000019e6c	ldr	x8, [x0]
0000000000019e70	and	x8, x8, #0xfffffffffffffffc
0000000000019e74	ldr	x8, [x8]
0000000000019e78	ldr	x8, [x8, #0x80]
0000000000019e7c	blr	x8
0000000000019e80	mov	x1, x0
0000000000019e84	b	0x19e8c
0000000000019e88	mov	x1, #0x0
0000000000019e8c	add	x0, sp, #0x8
0000000000019e90	mov	x2, x23
0000000000019e94	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000019e98	adr	x1, #0x548b8
0000000000019e9c	nop
0000000000019ea0	add	x0, sp, #0x8
0000000000019ea4	mov	x2, x22
0000000000019ea8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000019eac	mov	x0, x20
0000000000019eb0	mov	x1, x21
0000000000019eb4	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
0000000000019eb8	cbz	x0, 0x19edc
0000000000019ebc	add	x1, x26, #0x48
0000000000019ec0	ldr	x8, [x0]
0000000000019ec4	and	x8, x8, #0xfffffffffffffffc
0000000000019ec8	ldr	x8, [x8]
0000000000019ecc	ldr	x8, [x8, #0x80]
0000000000019ed0	blr	x8
0000000000019ed4	mov	x1, x0
0000000000019ed8	b	0x19ee0
0000000000019edc	mov	x1, #0x0
0000000000019ee0	add	x8, sp, #0x20
0000000000019ee4	add	x2, x8, #0x50
0000000000019ee8	add	x0, sp, #0x8
0000000000019eec	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000019ef0	add	x0, sp, #0x8
0000000000019ef4	mov	x1, x19
0000000000019ef8	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000019efc	str	x0, [x19]
0000000000019f00	ldr	x8, [sp, #0x28]
0000000000019f04	str	x8, [x25, #0x110]
0000000000019f08	ldp	x29, x30, [sp, #0xc0]
0000000000019f0c	ldp	x20, x19, [sp, #0xb0]
0000000000019f10	ldp	x22, x21, [sp, #0xa0]
0000000000019f14	ldp	x24, x23, [sp, #0x90]
0000000000019f18	ldp	x26, x25, [sp, #0x80]
0000000000019f1c	add	sp, sp, #0xd0
0000000000019f20	ret
_kfun:kotlin.collections.HashMapKeys#<get-size>(){}kotlin.Int:
0000000000019f24	stp	x20, x19, [sp, #-0x20]!
0000000000019f28	stp	x29, x30, [sp, #0x10]
0000000000019f2c	add	x29, sp, #0x10
0000000000019f30	mov	x19, x0
0000000000019f34	adr	x8, #0x7a355
0000000000019f38	nop
0000000000019f3c	ldarb	w8, [x8]
0000000000019f40	tbz	w8, #0x0, 0x19f48
0000000000019f44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019f48	ldr	x8, [x19, #0x8]
0000000000019f4c	ldr	w0, [x8, #0x4c]
0000000000019f50	ldp	x29, x30, [sp, #0x10]
0000000000019f54	ldp	x20, x19, [sp], #0x20
0000000000019f58	ret
_kfun:kotlin.collections.HashMapKeys#isEmpty(){}kotlin.Boolean:
0000000000019f5c	stp	x20, x19, [sp, #-0x20]!
0000000000019f60	stp	x29, x30, [sp, #0x10]
0000000000019f64	add	x29, sp, #0x10
0000000000019f68	mov	x19, x0
0000000000019f6c	adr	x8, #0x7a31d
0000000000019f70	nop
0000000000019f74	ldarb	w8, [x8]
0000000000019f78	tbz	w8, #0x0, 0x19f80
0000000000019f7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019f80	ldr	x8, [x19, #0x8]
0000000000019f84	ldr	w8, [x8, #0x4c]
0000000000019f88	cmp	w8, #0x0
0000000000019f8c	cset	w0, eq
0000000000019f90	ldp	x29, x30, [sp, #0x10]
0000000000019f94	ldp	x20, x19, [sp], #0x20
0000000000019f98	ret
_kfun:kotlin.collections.HashMapKeys#contains(1:0){}kotlin.Boolean:
0000000000019f9c	stp	x20, x19, [sp, #-0x20]!
0000000000019fa0	stp	x29, x30, [sp, #0x10]
0000000000019fa4	add	x29, sp, #0x10
0000000000019fa8	mov	x19, x1
0000000000019fac	mov	x20, x0
0000000000019fb0	adr	x8, #0x7a2d9
0000000000019fb4	nop
0000000000019fb8	ldarb	w8, [x8]
0000000000019fbc	tbz	w8, #0x0, 0x19fc4
0000000000019fc0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019fc4	ldr	x0, [x20, #0x8]
0000000000019fc8	mov	x1, x19
0000000000019fcc	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
0000000000019fd0	mvn	w8, w0
0000000000019fd4	lsr	w0, w8, #31
0000000000019fd8	ldp	x29, x30, [sp, #0x10]
0000000000019fdc	ldp	x20, x19, [sp], #0x20
0000000000019fe0	ret
_kfun:kotlin.collections.HashMapKeys#getElement(1:0){}1:0?:
0000000000019fe4	stp	x22, x21, [sp, #-0x30]!
0000000000019fe8	stp	x20, x19, [sp, #0x10]
0000000000019fec	stp	x29, x30, [sp, #0x20]
0000000000019ff0	add	x29, sp, #0x20
0000000000019ff4	mov	x19, x2
0000000000019ff8	mov	x20, x1
0000000000019ffc	mov	x21, x0
000000000001a000	adr	x8, #0x7a289
000000000001a004	nop
000000000001a008	ldarb	w8, [x8]
000000000001a00c	tbz	w8, #0x0, 0x1a014
000000000001a010	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a014	ldr	x0, [x21, #0x8]
000000000001a018	mov	x1, x20
000000000001a01c	mov	x2, x19
000000000001a020	bl	"_kfun:kotlin.collections.HashMap#getKey(1:0){}1:0?"
000000000001a024	str	x0, [x19]
000000000001a028	ldp	x29, x30, [sp, #0x20]
000000000001a02c	ldp	x20, x19, [sp, #0x10]
000000000001a030	ldp	x22, x21, [sp], #0x30
000000000001a034	ret
_kfun:kotlin.collections.HashMapKeys#clear(){}:
000000000001a038	stp	x20, x19, [sp, #-0x20]!
000000000001a03c	stp	x29, x30, [sp, #0x10]
000000000001a040	add	x29, sp, #0x10
000000000001a044	mov	x19, x0
000000000001a048	adr	x8, #0x7a241
000000000001a04c	nop
000000000001a050	ldarb	w8, [x8]
000000000001a054	tbz	w8, #0x0, 0x1a05c
000000000001a058	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a05c	ldr	x0, [x19, #0x8]
000000000001a060	ldp	x29, x30, [sp, #0x10]
000000000001a064	ldp	x20, x19, [sp], #0x20
000000000001a068	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashMapKeys#add(1:0){}kotlin.Boolean:
000000000001a06c	sub	sp, sp, #0x40
000000000001a070	stp	x20, x19, [sp, #0x20]
000000000001a074	stp	x29, x30, [sp, #0x30]
000000000001a078	add	x29, sp, #0x30
000000000001a07c	movi.16b	v0, #0x0
000000000001a080	stp	q0, q0, [sp]
000000000001a084	adrp	x0, 96 ; 0x7a000
000000000001a088	add	x0, x0, #0x2c0
000000000001a08c	ldr	x8, [x0]
000000000001a090	blr	x8
000000000001a094	ldr	x19, [x0]
000000000001a098	ldr	x8, [x19, #0x110]
000000000001a09c	mov	x9, sp
000000000001a0a0	str	x9, [x19, #0x110]
000000000001a0a4	mov	x9, #0x400000000
000000000001a0a8	stp	x8, x9, [sp, #0x8]
000000000001a0ac	adr	x8, #0x7a1dd
000000000001a0b0	nop
000000000001a0b4	ldarb	w8, [x8]
000000000001a0b8	tbz	w8, #0x0, 0x1a0c0
000000000001a0bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a0c0	ldr	x8, [x19, #0x118]
000000000001a0c4	add	x0, x8, #0x70
000000000001a0c8	mov	w1, #0x38
000000000001a0cc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001a0d0	mov	x19, x0
000000000001a0d4	adr	x8, #0x4744c
000000000001a0d8	nop
000000000001a0dc	str	x8, [x19, #0x10]!
000000000001a0e0	stur	xzr, [x19, #-0x8]
000000000001a0e4	str	x19, [sp, #0x18]
000000000001a0e8	mov	x0, x19
000000000001a0ec	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001a0f0	mov	x0, x19
000000000001a0f4	bl	_ThrowException
_kfun:kotlin.collections.HashMapKeys#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001a0f8	sub	sp, sp, #0x40
000000000001a0fc	stp	x20, x19, [sp, #0x20]
000000000001a100	stp	x29, x30, [sp, #0x30]
000000000001a104	add	x29, sp, #0x30
000000000001a108	movi.16b	v0, #0x0
000000000001a10c	stp	q0, q0, [sp]
000000000001a110	adrp	x0, 96 ; 0x7a000
000000000001a114	add	x0, x0, #0x2c0
000000000001a118	ldr	x8, [x0]
000000000001a11c	blr	x8
000000000001a120	ldr	x19, [x0]
000000000001a124	ldr	x8, [x19, #0x110]
000000000001a128	mov	x9, sp
000000000001a12c	str	x9, [x19, #0x110]
000000000001a130	mov	x9, #0x400000000
000000000001a134	stp	x8, x9, [sp, #0x8]
000000000001a138	adr	x8, #0x7a151
000000000001a13c	nop
000000000001a140	ldarb	w8, [x8]
000000000001a144	tbz	w8, #0x0, 0x1a14c
000000000001a148	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a14c	ldr	x8, [x19, #0x118]
000000000001a150	add	x0, x8, #0x70
000000000001a154	mov	w1, #0x38
000000000001a158	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001a15c	mov	x19, x0
000000000001a160	adr	x8, #0x473c0
000000000001a164	nop
000000000001a168	str	x8, [x19, #0x10]!
000000000001a16c	stur	xzr, [x19, #-0x8]
000000000001a170	str	x19, [sp, #0x18]
000000000001a174	mov	x0, x19
000000000001a178	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001a17c	mov	x0, x19
000000000001a180	bl	_ThrowException
_kfun:kotlin.collections.HashMapKeys#remove(1:0){}kotlin.Boolean:
000000000001a184	stp	x20, x19, [sp, #-0x20]!
000000000001a188	stp	x29, x30, [sp, #0x10]
000000000001a18c	add	x29, sp, #0x10
000000000001a190	mov	x19, x1
000000000001a194	mov	x20, x0
000000000001a198	adr	x8, #0x7a0f1
000000000001a19c	nop
000000000001a1a0	ldarb	w8, [x8]
000000000001a1a4	tbz	w8, #0x0, 0x1a1ac
000000000001a1a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a1ac	ldr	x0, [x20, #0x8]
000000000001a1b0	mov	x1, x19
000000000001a1b4	bl	"_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int"
000000000001a1b8	mvn	w8, w0
000000000001a1bc	lsr	w0, w8, #31
000000000001a1c0	ldp	x29, x30, [sp, #0x10]
000000000001a1c4	ldp	x20, x19, [sp], #0x20
000000000001a1c8	ret
_kfun:kotlin.collections.HashMapKeys#iterator(){}kotlin.collections.MutableIterator<1:0>:
000000000001a1cc	stp	x20, x19, [sp, #-0x20]!
000000000001a1d0	stp	x29, x30, [sp, #0x10]
000000000001a1d4	add	x29, sp, #0x10
000000000001a1d8	mov	x19, x1
000000000001a1dc	mov	x20, x0
000000000001a1e0	adr	x8, #0x7a0a9
000000000001a1e4	nop
000000000001a1e8	ldarb	w8, [x8]
000000000001a1ec	tbz	w8, #0x0, 0x1a1f4
000000000001a1f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a1f4	ldr	x0, [x20, #0x8]
000000000001a1f8	mov	x1, x19
000000000001a1fc	bl	"_kfun:kotlin.collections.HashMap#keysIterator(){}kotlin.collections.HashMap.KeysItr<1:0,1:1>"
000000000001a200	str	x0, [x19]
000000000001a204	ldp	x29, x30, [sp, #0x10]
000000000001a208	ldp	x20, x19, [sp], #0x20
000000000001a20c	ret
_kfun:kotlin.collections.HashMapKeys#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001a210	stp	x20, x19, [sp, #-0x20]!
000000000001a214	stp	x29, x30, [sp, #0x10]
000000000001a218	add	x29, sp, #0x10
000000000001a21c	mov	x19, x1
000000000001a220	mov	x20, x0
000000000001a224	adr	x8, #0x7a065
000000000001a228	nop
000000000001a22c	ldarb	w8, [x8]
000000000001a230	tbz	w8, #0x0, 0x1a238
000000000001a234	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a238	ldr	x0, [x20, #0x8]
000000000001a23c	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001a240	mov	x0, x20
000000000001a244	mov	x1, x19
000000000001a248	ldp	x29, x30, [sp, #0x10]
000000000001a24c	ldp	x20, x19, [sp], #0x20
000000000001a250	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapKeys#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001a254	stp	x20, x19, [sp, #-0x20]!
000000000001a258	stp	x29, x30, [sp, #0x10]
000000000001a25c	add	x29, sp, #0x10
000000000001a260	mov	x19, x1
000000000001a264	mov	x20, x0
000000000001a268	adr	x8, #0x7a021
000000000001a26c	nop
000000000001a270	ldarb	w8, [x8]
000000000001a274	tbz	w8, #0x0, 0x1a27c
000000000001a278	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a27c	ldr	x0, [x20, #0x8]
000000000001a280	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001a284	mov	x0, x20
000000000001a288	mov	x1, x19
000000000001a28c	ldp	x29, x30, [sp, #0x10]
000000000001a290	ldp	x20, x19, [sp], #0x20
000000000001a294	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapValues#<get-size>(){}kotlin.Int:
000000000001a298	stp	x20, x19, [sp, #-0x20]!
000000000001a29c	stp	x29, x30, [sp, #0x10]
000000000001a2a0	add	x29, sp, #0x10
000000000001a2a4	mov	x19, x0
000000000001a2a8	adr	x8, #0x79fe1
000000000001a2ac	nop
000000000001a2b0	ldarb	w8, [x8]
000000000001a2b4	tbz	w8, #0x0, 0x1a2bc
000000000001a2b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a2bc	ldr	x8, [x19, #0x8]
000000000001a2c0	ldr	w0, [x8, #0x4c]
000000000001a2c4	ldp	x29, x30, [sp, #0x10]
000000000001a2c8	ldp	x20, x19, [sp], #0x20
000000000001a2cc	ret
_kfun:kotlin.collections.HashMapValues#isEmpty(){}kotlin.Boolean:
000000000001a2d0	stp	x20, x19, [sp, #-0x20]!
000000000001a2d4	stp	x29, x30, [sp, #0x10]
000000000001a2d8	add	x29, sp, #0x10
000000000001a2dc	mov	x19, x0
000000000001a2e0	adr	x8, #0x79fa9
000000000001a2e4	nop
000000000001a2e8	ldarb	w8, [x8]
000000000001a2ec	tbz	w8, #0x0, 0x1a2f4
000000000001a2f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a2f4	ldr	x8, [x19, #0x8]
000000000001a2f8	ldr	w8, [x8, #0x4c]
000000000001a2fc	cmp	w8, #0x0
000000000001a300	cset	w0, eq
000000000001a304	ldp	x29, x30, [sp, #0x10]
000000000001a308	ldp	x20, x19, [sp], #0x20
000000000001a30c	ret
_kfun:kotlin.collections.HashMapValues#contains(1:0){}kotlin.Boolean:
000000000001a310	stp	x20, x19, [sp, #-0x20]!
000000000001a314	stp	x29, x30, [sp, #0x10]
000000000001a318	add	x29, sp, #0x10
000000000001a31c	mov	x19, x1
000000000001a320	mov	x20, x0
000000000001a324	adr	x8, #0x79f65
000000000001a328	nop
000000000001a32c	ldarb	w8, [x8]
000000000001a330	tbz	w8, #0x0, 0x1a338
000000000001a334	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a338	ldr	x0, [x20, #0x8]
000000000001a33c	mov	x1, x19
000000000001a340	bl	"_kfun:kotlin.collections.HashMap.findValue#internal"
000000000001a344	mvn	w8, w0
000000000001a348	lsr	w0, w8, #31
000000000001a34c	ldp	x29, x30, [sp, #0x10]
000000000001a350	ldp	x20, x19, [sp], #0x20
000000000001a354	ret
_kfun:kotlin.collections.HashMapValues#add(1:0){}kotlin.Boolean:
000000000001a358	sub	sp, sp, #0x40
000000000001a35c	stp	x20, x19, [sp, #0x20]
000000000001a360	stp	x29, x30, [sp, #0x30]
000000000001a364	add	x29, sp, #0x30
000000000001a368	movi.16b	v0, #0x0
000000000001a36c	stp	q0, q0, [sp]
000000000001a370	adrp	x0, 96 ; 0x7a000
000000000001a374	add	x0, x0, #0x2c0
000000000001a378	ldr	x8, [x0]
000000000001a37c	blr	x8
000000000001a380	ldr	x19, [x0]
000000000001a384	ldr	x8, [x19, #0x110]
000000000001a388	mov	x9, sp
000000000001a38c	str	x9, [x19, #0x110]
000000000001a390	mov	x9, #0x400000000
000000000001a394	stp	x8, x9, [sp, #0x8]
000000000001a398	adr	x8, #0x79ef1
000000000001a39c	nop
000000000001a3a0	ldarb	w8, [x8]
000000000001a3a4	tbz	w8, #0x0, 0x1a3ac
000000000001a3a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a3ac	ldr	x8, [x19, #0x118]
000000000001a3b0	add	x0, x8, #0x70
000000000001a3b4	mov	w1, #0x38
000000000001a3b8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001a3bc	mov	x19, x0
000000000001a3c0	adr	x8, #0x47160
000000000001a3c4	nop
000000000001a3c8	str	x8, [x19, #0x10]!
000000000001a3cc	stur	xzr, [x19, #-0x8]
000000000001a3d0	str	x19, [sp, #0x18]
000000000001a3d4	mov	x0, x19
000000000001a3d8	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001a3dc	mov	x0, x19
000000000001a3e0	bl	_ThrowException
_kfun:kotlin.collections.HashMapValues#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001a3e4	sub	sp, sp, #0x40
000000000001a3e8	stp	x20, x19, [sp, #0x20]
000000000001a3ec	stp	x29, x30, [sp, #0x30]
000000000001a3f0	add	x29, sp, #0x30
000000000001a3f4	movi.16b	v0, #0x0
000000000001a3f8	stp	q0, q0, [sp]
000000000001a3fc	adrp	x0, 96 ; 0x7a000
000000000001a400	add	x0, x0, #0x2c0
000000000001a404	ldr	x8, [x0]
000000000001a408	blr	x8
000000000001a40c	ldr	x19, [x0]
000000000001a410	ldr	x8, [x19, #0x110]
000000000001a414	mov	x9, sp
000000000001a418	str	x9, [x19, #0x110]
000000000001a41c	mov	x9, #0x400000000
000000000001a420	stp	x8, x9, [sp, #0x8]
000000000001a424	adr	x8, #0x79e65
000000000001a428	nop
000000000001a42c	ldarb	w8, [x8]
000000000001a430	tbz	w8, #0x0, 0x1a438
000000000001a434	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a438	ldr	x8, [x19, #0x118]
000000000001a43c	add	x0, x8, #0x70
000000000001a440	mov	w1, #0x38
000000000001a444	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001a448	mov	x19, x0
000000000001a44c	adr	x8, #0x470d4
000000000001a450	nop
000000000001a454	str	x8, [x19, #0x10]!
000000000001a458	stur	xzr, [x19, #-0x8]
000000000001a45c	str	x19, [sp, #0x18]
000000000001a460	mov	x0, x19
000000000001a464	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001a468	mov	x0, x19
000000000001a46c	bl	_ThrowException
_kfun:kotlin.collections.HashMapValues#clear(){}:
000000000001a470	stp	x20, x19, [sp, #-0x20]!
000000000001a474	stp	x29, x30, [sp, #0x10]
000000000001a478	add	x29, sp, #0x10
000000000001a47c	mov	x19, x0
000000000001a480	adr	x8, #0x79e09
000000000001a484	nop
000000000001a488	ldarb	w8, [x8]
000000000001a48c	tbz	w8, #0x0, 0x1a494
000000000001a490	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a494	ldr	x0, [x19, #0x8]
000000000001a498	ldp	x29, x30, [sp, #0x10]
000000000001a49c	ldp	x20, x19, [sp], #0x20
000000000001a4a0	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashMapValues#iterator(){}kotlin.collections.MutableIterator<1:0>:
000000000001a4a4	stp	x22, x21, [sp, #-0x30]!
000000000001a4a8	stp	x20, x19, [sp, #0x10]
000000000001a4ac	stp	x29, x30, [sp, #0x20]
000000000001a4b0	add	x29, sp, #0x20
000000000001a4b4	mov	x19, x1
000000000001a4b8	mov	x20, x0
000000000001a4bc	adr	x8, #0x79dcd
000000000001a4c0	nop
000000000001a4c4	ldarb	w8, [x8]
000000000001a4c8	tbz	w8, #0x0, 0x1a4d0
000000000001a4cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a4d0	ldr	x21, [x20, #0x8]
000000000001a4d4	adrp	x0, 96 ; 0x7a000
000000000001a4d8	add	x0, x0, #0x2c0
000000000001a4dc	ldr	x8, [x0]
000000000001a4e0	blr	x8
000000000001a4e4	ldr	x8, [x0]
000000000001a4e8	ldr	x8, [x8, #0x118]
000000000001a4ec	add	x0, x8, #0x70
000000000001a4f0	mov	w1, #0x20
000000000001a4f4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001a4f8	mov	x20, x0
000000000001a4fc	adr	x8, #0x49a84
000000000001a500	nop
000000000001a504	str	x8, [x20, #0x10]!
000000000001a508	stur	xzr, [x20, #-0x8]
000000000001a50c	str	x20, [x19]
000000000001a510	str	x21, [x20, #0x8]
000000000001a514	mov	w8, #-0x1
000000000001a518	str	w8, [x20, #0x14]
000000000001a51c	mov	x0, x20
000000000001a520	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001a524	str	x20, [x19]
000000000001a528	mov	x0, x20
000000000001a52c	ldp	x29, x30, [sp, #0x20]
000000000001a530	ldp	x20, x19, [sp, #0x10]
000000000001a534	ldp	x22, x21, [sp], #0x30
000000000001a538	ret
_kfun:kotlin.collections.HashMapValues#remove(1:0){}kotlin.Boolean:
000000000001a53c	stp	x20, x19, [sp, #-0x20]!
000000000001a540	stp	x29, x30, [sp, #0x10]
000000000001a544	add	x29, sp, #0x10
000000000001a548	mov	x19, x1
000000000001a54c	mov	x20, x0
000000000001a550	adr	x8, #0x79d39
000000000001a554	nop
000000000001a558	ldarb	w8, [x8]
000000000001a55c	tbz	w8, #0x0, 0x1a564
000000000001a560	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a564	ldr	x20, [x20, #0x8]
000000000001a568	mov	x0, x20
000000000001a56c	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001a570	mov	x0, x20
000000000001a574	mov	x1, x19
000000000001a578	bl	"_kfun:kotlin.collections.HashMap.findValue#internal"
000000000001a57c	tbnz	w0, #0x1f, 0x1a59c
000000000001a580	mov	x1, x0
000000000001a584	mov	x0, x20
000000000001a588	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
000000000001a58c	mov	w0, #0x1
000000000001a590	ldp	x29, x30, [sp, #0x10]
000000000001a594	ldp	x20, x19, [sp], #0x20
000000000001a598	ret
000000000001a59c	mov	w0, #0x0
000000000001a5a0	ldp	x29, x30, [sp, #0x10]
000000000001a5a4	ldp	x20, x19, [sp], #0x20
000000000001a5a8	ret
_kfun:kotlin.collections.HashMapValues#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001a5ac	stp	x20, x19, [sp, #-0x20]!
000000000001a5b0	stp	x29, x30, [sp, #0x10]
000000000001a5b4	add	x29, sp, #0x10
000000000001a5b8	mov	x19, x1
000000000001a5bc	mov	x20, x0
000000000001a5c0	adr	x8, #0x79cc9
000000000001a5c4	nop
000000000001a5c8	ldarb	w8, [x8]
000000000001a5cc	tbz	w8, #0x0, 0x1a5d4
000000000001a5d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a5d4	ldr	x0, [x20, #0x8]
000000000001a5d8	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001a5dc	mov	x0, x20
000000000001a5e0	mov	x1, x19
000000000001a5e4	ldp	x29, x30, [sp, #0x10]
000000000001a5e8	ldp	x20, x19, [sp], #0x20
000000000001a5ec	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapValues#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001a5f0	stp	x20, x19, [sp, #-0x20]!
000000000001a5f4	stp	x29, x30, [sp, #0x10]
000000000001a5f8	add	x29, sp, #0x10
000000000001a5fc	mov	x19, x1
000000000001a600	mov	x20, x0
000000000001a604	adr	x8, #0x79c85
000000000001a608	nop
000000000001a60c	ldarb	w8, [x8]
000000000001a610	tbz	w8, #0x0, 0x1a618
000000000001a614	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a618	ldr	x0, [x20, #0x8]
000000000001a61c	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001a620	mov	x0, x20
000000000001a624	mov	x1, x19
000000000001a628	ldp	x29, x30, [sp, #0x10]
000000000001a62c	ldp	x20, x19, [sp], #0x20
000000000001a630	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySet#getEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.collections.MutableMap.MutableEntry<1:0,1:1>?:
000000000001a634	sub	sp, sp, #0x90
000000000001a638	stp	x26, x25, [sp, #0x40]
000000000001a63c	stp	x24, x23, [sp, #0x50]
000000000001a640	stp	x22, x21, [sp, #0x60]
000000000001a644	stp	x20, x19, [sp, #0x70]
000000000001a648	stp	x29, x30, [sp, #0x80]
000000000001a64c	add	x29, sp, #0x80
000000000001a650	mov	x19, x2
000000000001a654	mov	x22, x1
000000000001a658	mov	x20, x0
000000000001a65c	adr	x8, #0x79c2d
000000000001a660	nop
000000000001a664	ldarb	w8, [x8]
000000000001a668	tbz	w8, #0x0, 0x1a670
000000000001a66c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a670	ldr	x21, [x20, #0x8]
000000000001a674	movi.16b	v0, #0x0
000000000001a678	stp	q0, q0, [sp]
000000000001a67c	str	xzr, [sp, #0x30]
000000000001a680	str	q0, [sp, #0x20]
000000000001a684	mov	x24, sp
000000000001a688	add	x1, x24, #0x18
000000000001a68c	adrp	x20, 96 ; 0x7a000
000000000001a690	add	x20, x20, #0x2c0
000000000001a694	ldr	x25, [x20]
000000000001a698	mov	x0, x20
000000000001a69c	blr	x25
000000000001a6a0	ldr	x8, [x0]
000000000001a6a4	ldr	x9, [x8, #0x110]
000000000001a6a8	str	x24, [x8, #0x110]
000000000001a6ac	mov	x8, #0x700000000
000000000001a6b0	stp	x9, x8, [sp, #0x8]
000000000001a6b4	ldr	x8, [x22]
000000000001a6b8	and	x8, x8, #0xfffffffffffffffc
000000000001a6bc	ldr	x8, [x8]
000000000001a6c0	ldr	w9, [x8, #0x3c]
000000000001a6c4	ldr	x8, [x8, #0x40]
000000000001a6c8	tbnz	w9, #0x1f, 0x1a6d8
000000000001a6cc	mov	w10, #0xa8
000000000001a6d0	and	x9, x9, x10
000000000001a6d4	b	0x1a75c
000000000001a6d8	neg	w10, w9
000000000001a6dc	mvn	w9, w9
000000000001a6e0	cmp	w10, #0x9
000000000001a6e4	b.ge	0x1a71c
000000000001a6e8	cmp	w10, #0x2
000000000001a6ec	b.lt	0x1a750
000000000001a6f0	mov	x10, #0x0
000000000001a6f4	mov	x11, x8
000000000001a6f8	ldr	w12, [x11]
000000000001a6fc	cmp	w12, #0xa7
000000000001a700	b.gt	0x1a758
000000000001a704	add	x10, x10, #0x1
000000000001a708	add	x11, x11, #0x10
000000000001a70c	cmp	x9, x10
000000000001a710	b.ne	0x1a6f8
000000000001a714	mov	x10, x9
000000000001a718	b	0x1a758
000000000001a71c	mov	w10, #0x0
000000000001a720	add	w11, w9, w10
000000000001a724	cmp	w11, #0x0
000000000001a728	cinc	w11, w11, lt
000000000001a72c	asr	w11, w11, #1
000000000001a730	sbfiz	x12, x11, #4, #32
000000000001a734	ldr	w12, [x8, x12]
000000000001a738	cmp	w12, #0xa8
000000000001a73c	csinc	w10, w10, w11, ge
000000000001a740	csel	w9, w9, w11, lt
000000000001a744	cmp	w10, w9
000000000001a748	b.lt	0x1a720
000000000001a74c	b	0x1a758
000000000001a750	mov	w10, #0x0
000000000001a754	b	0x1a758
000000000001a758	sxtw	x9, w10
000000000001a75c	add	x8, x8, x9, lsl #4
000000000001a760	ldr	x8, [x8, #0x8]
000000000001a764	ldr	x8, [x8]
000000000001a768	mov	x0, x22
000000000001a76c	blr	x8
000000000001a770	mov	x1, x0
000000000001a774	mov	x0, x21
000000000001a778	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001a77c	tbnz	w0, #0x1f, 0x1a8d0
000000000001a780	ldr	x8, [x21, #0x10]
000000000001a784	str	x8, [sp, #0x20]
000000000001a788	cbz	x8, 0x1a910
000000000001a78c	mov	x23, x0
000000000001a790	ldr	w9, [x8, #0x8]
000000000001a794	cmp	w9, w0
000000000001a798	b.ls	0x1a914
000000000001a79c	add	x1, x24, #0x30
000000000001a7a0	add	x8, x8, w23, sxtw #3
000000000001a7a4	ldr	x24, [x8, #0x10]
000000000001a7a8	str	x24, [sp, #0x28]
000000000001a7ac	ldr	x8, [x22]
000000000001a7b0	and	x8, x8, #0xfffffffffffffffc
000000000001a7b4	ldr	x8, [x8]
000000000001a7b8	ldr	w9, [x8, #0x3c]
000000000001a7bc	ldr	x8, [x8, #0x40]
000000000001a7c0	tbnz	w9, #0x1f, 0x1a7d0
000000000001a7c4	mov	w10, #0xa8
000000000001a7c8	and	x9, x9, x10
000000000001a7cc	b	0x1a854
000000000001a7d0	neg	w10, w9
000000000001a7d4	mvn	w9, w9
000000000001a7d8	cmp	w10, #0x9
000000000001a7dc	b.ge	0x1a814
000000000001a7e0	cmp	w10, #0x2
000000000001a7e4	b.lt	0x1a848
000000000001a7e8	mov	x10, #0x0
000000000001a7ec	mov	x11, x8
000000000001a7f0	ldr	w12, [x11]
000000000001a7f4	cmp	w12, #0xa7
000000000001a7f8	b.gt	0x1a850
000000000001a7fc	add	x10, x10, #0x1
000000000001a800	add	x11, x11, #0x10
000000000001a804	cmp	x9, x10
000000000001a808	b.ne	0x1a7f0
000000000001a80c	mov	x10, x9
000000000001a810	b	0x1a850
000000000001a814	mov	w10, #0x0
000000000001a818	add	w11, w9, w10
000000000001a81c	cmp	w11, #0x0
000000000001a820	cinc	w11, w11, lt
000000000001a824	asr	w11, w11, #1
000000000001a828	sbfiz	x12, x11, #4, #32
000000000001a82c	ldr	w12, [x8, x12]
000000000001a830	cmp	w12, #0xa8
000000000001a834	csinc	w10, w10, w11, ge
000000000001a838	csel	w9, w9, w11, lt
000000000001a83c	cmp	w10, w9
000000000001a840	b.lt	0x1a818
000000000001a844	b	0x1a850
000000000001a848	mov	w10, #0x0
000000000001a84c	b	0x1a850
000000000001a850	sxtw	x9, w10
000000000001a854	add	x8, x8, x9, lsl #4
000000000001a858	ldr	x8, [x8, #0x8]
000000000001a85c	ldr	x8, [x8, #0x8]
000000000001a860	mov	x0, x22
000000000001a864	blr	x8
000000000001a868	mov	x1, x0
000000000001a86c	cbz	x24, 0x1a8cc
000000000001a870	ldr	x8, [x24]
000000000001a874	and	x8, x8, #0xfffffffffffffffc
000000000001a878	ldr	x8, [x8]
000000000001a87c	ldr	x8, [x8, #0x70]
000000000001a880	mov	x0, x24
000000000001a884	blr	x8
000000000001a888	cbz	w0, 0x1a8d0
000000000001a88c	mov	x0, x20
000000000001a890	blr	x25
000000000001a894	ldr	x8, [x0]
000000000001a898	ldr	x8, [x8, #0x118]
000000000001a89c	add	x0, x8, #0x70
000000000001a8a0	mov	w1, #0x20
000000000001a8a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001a8a8	mov	x8, x0
000000000001a8ac	adr	x9, #0x497f4
000000000001a8b0	nop
000000000001a8b4	str	x9, [x8, #0x10]!
000000000001a8b8	stur	xzr, [x8, #-0x8]
000000000001a8bc	str	x8, [x19]
000000000001a8c0	str	x21, [x8, #0x8]
000000000001a8c4	str	w23, [x8, #0x10]
000000000001a8c8	b	0x1a8d4
000000000001a8cc	cbz	x1, 0x1a88c
000000000001a8d0	mov	x8, #0x0
000000000001a8d4	str	x8, [x19]
000000000001a8d8	mov	x0, x20
000000000001a8dc	blr	x25
000000000001a8e0	ldr	x9, [x0]
000000000001a8e4	ldr	x10, [sp, #0x8]
000000000001a8e8	str	x10, [x9, #0x110]
000000000001a8ec	str	x8, [x19]
000000000001a8f0	mov	x0, x8
000000000001a8f4	ldp	x29, x30, [sp, #0x80]
000000000001a8f8	ldp	x20, x19, [sp, #0x70]
000000000001a8fc	ldp	x22, x21, [sp, #0x60]
000000000001a900	ldp	x24, x23, [sp, #0x50]
000000000001a904	ldp	x26, x25, [sp, #0x40]
000000000001a908	add	sp, sp, #0x90
000000000001a90c	ret
000000000001a910	bl	_ThrowNullPointerException
000000000001a914	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMapEntrySet#iterator(){}kotlin.collections.MutableIterator<kotlin.collections.MutableMap.MutableEntry<1:0,1:1>>:
000000000001a918	stp	x20, x19, [sp, #-0x20]!
000000000001a91c	stp	x29, x30, [sp, #0x10]
000000000001a920	add	x29, sp, #0x10
000000000001a924	mov	x19, x1
000000000001a928	mov	x20, x0
000000000001a92c	adr	x8, #0x7995d
000000000001a930	nop
000000000001a934	ldarb	w8, [x8]
000000000001a938	tbz	w8, #0x0, 0x1a940
000000000001a93c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a940	ldr	x0, [x20, #0x8]
000000000001a944	mov	x1, x19
000000000001a948	bl	"_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>"
000000000001a94c	str	x0, [x19]
000000000001a950	ldp	x29, x30, [sp, #0x10]
000000000001a954	ldp	x20, x19, [sp], #0x20
000000000001a958	ret
_kfun:kotlin.collections.HashMapEntrySetBase#<get-size>(){}kotlin.Int:
000000000001a95c	stp	x20, x19, [sp, #-0x20]!
000000000001a960	stp	x29, x30, [sp, #0x10]
000000000001a964	add	x29, sp, #0x10
000000000001a968	mov	x19, x0
000000000001a96c	adr	x8, #0x7991d
000000000001a970	nop
000000000001a974	ldarb	w8, [x8]
000000000001a978	tbz	w8, #0x0, 0x1a980
000000000001a97c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a980	ldr	x8, [x19, #0x8]
000000000001a984	ldr	w0, [x8, #0x4c]
000000000001a988	ldp	x29, x30, [sp, #0x10]
000000000001a98c	ldp	x20, x19, [sp], #0x20
000000000001a990	ret
_kfun:kotlin.collections.HashMapEntrySetBase#isEmpty(){}kotlin.Boolean:
000000000001a994	stp	x20, x19, [sp, #-0x20]!
000000000001a998	stp	x29, x30, [sp, #0x10]
000000000001a99c	add	x29, sp, #0x10
000000000001a9a0	mov	x19, x0
000000000001a9a4	adr	x8, #0x798e5
000000000001a9a8	nop
000000000001a9ac	ldarb	w8, [x8]
000000000001a9b0	tbz	w8, #0x0, 0x1a9b8
000000000001a9b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a9b8	ldr	x8, [x19, #0x8]
000000000001a9bc	ldr	w8, [x8, #0x4c]
000000000001a9c0	cmp	w8, #0x0
000000000001a9c4	cset	w0, eq
000000000001a9c8	ldp	x29, x30, [sp, #0x10]
000000000001a9cc	ldp	x20, x19, [sp], #0x20
000000000001a9d0	ret
_kfun:kotlin.collections.HashMapEntrySetBase#contains(1:2){}kotlin.Boolean:
000000000001a9d4	stp	x20, x19, [sp, #-0x20]!
000000000001a9d8	stp	x29, x30, [sp, #0x10]
000000000001a9dc	add	x29, sp, #0x10
000000000001a9e0	mov	x19, x1
000000000001a9e4	mov	x20, x0
000000000001a9e8	adr	x8, #0x798a1
000000000001a9ec	nop
000000000001a9f0	ldarb	w8, [x8]
000000000001a9f4	tbz	w8, #0x0, 0x1a9fc
000000000001a9f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a9fc	cbz	x19, 0x1aad8
000000000001aa00	ldr	x8, [x19]
000000000001aa04	and	x8, x8, #0xfffffffffffffffc
000000000001aa08	ldr	x8, [x8]
000000000001aa0c	ldr	w9, [x8, #0x3c]
000000000001aa10	ldr	x8, [x8, #0x40]
000000000001aa14	tbnz	w9, #0x1f, 0x1aa34
000000000001aa18	mov	w10, #0xa8
000000000001aa1c	and	x9, x9, x10
000000000001aa20	lsl	x9, x9, #4
000000000001aa24	ldr	w8, [x8, x9]
000000000001aa28	cmp	w8, #0xa8
000000000001aa2c	b.ne	0x1aad8
000000000001aa30	b	0x1aafc
000000000001aa34	neg	w10, w9
000000000001aa38	mvn	w9, w9
000000000001aa3c	cmp	w10, #0x9
000000000001aa40	b.ge	0x1aa8c
000000000001aa44	cmp	w10, #0x2
000000000001aa48	b.lt	0x1aac0
000000000001aa4c	mov	x10, #0x0
000000000001aa50	mov	x11, x8
000000000001aa54	ldr	w12, [x11]
000000000001aa58	cmp	w12, #0xa7
000000000001aa5c	b.gt	0x1aae8
000000000001aa60	add	x10, x10, #0x1
000000000001aa64	add	x11, x11, #0x10
000000000001aa68	cmp	x9, x10
000000000001aa6c	b.ne	0x1aa54
000000000001aa70	mov	x10, x9
000000000001aa74	sxtw	x9, w10
000000000001aa78	lsl	x9, x9, #4
000000000001aa7c	ldr	w8, [x8, x9]
000000000001aa80	cmp	w8, #0xa8
000000000001aa84	b.ne	0x1aad8
000000000001aa88	b	0x1aafc
000000000001aa8c	mov	w10, #0x0
000000000001aa90	add	w11, w9, w10
000000000001aa94	cmp	w11, #0x0
000000000001aa98	cinc	w11, w11, lt
000000000001aa9c	asr	w11, w11, #1
000000000001aaa0	sbfiz	x12, x11, #4, #32
000000000001aaa4	ldr	w12, [x8, x12]
000000000001aaa8	cmp	w12, #0xa8
000000000001aaac	csinc	w10, w10, w11, ge
000000000001aab0	csel	w9, w9, w11, lt
000000000001aab4	cmp	w10, w9
000000000001aab8	b.lt	0x1aa90
000000000001aabc	b	0x1aae8
000000000001aac0	mov	w10, #0x0
000000000001aac4	sxtw	x9, w10
000000000001aac8	lsl	x9, x9, #4
000000000001aacc	ldr	w8, [x8, x9]
000000000001aad0	cmp	w8, #0xa8
000000000001aad4	b.eq	0x1aafc
000000000001aad8	mov	w0, #0x0
000000000001aadc	ldp	x29, x30, [sp, #0x10]
000000000001aae0	ldp	x20, x19, [sp], #0x20
000000000001aae4	ret
000000000001aae8	sxtw	x9, w10
000000000001aaec	lsl	x9, x9, #4
000000000001aaf0	ldr	w8, [x8, x9]
000000000001aaf4	cmp	w8, #0xa8
000000000001aaf8	b.ne	0x1aad8
000000000001aafc	ldr	x0, [x20, #0x8]
000000000001ab00	mov	x1, x19
000000000001ab04	ldp	x29, x30, [sp, #0x10]
000000000001ab08	ldp	x20, x19, [sp], #0x20
000000000001ab0c	b	"_kfun:kotlin.collections.HashMap#containsEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySetBase#getElement(1:2){}1:2?:
000000000001ab10	stp	x22, x21, [sp, #-0x30]!
000000000001ab14	stp	x20, x19, [sp, #0x10]
000000000001ab18	stp	x29, x30, [sp, #0x20]
000000000001ab1c	add	x29, sp, #0x20
000000000001ab20	mov	x19, x2
000000000001ab24	mov	x20, x1
000000000001ab28	mov	x21, x0
000000000001ab2c	adr	x8, #0x7975d
000000000001ab30	nop
000000000001ab34	ldarb	w8, [x8]
000000000001ab38	tbz	w8, #0x0, 0x1ab40
000000000001ab3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ab40	ldr	x8, [x21]
000000000001ab44	and	x8, x8, #0xfffffffffffffffc
000000000001ab48	ldr	x8, [x8]
000000000001ab4c	ldr	x8, [x8, #0xf8]
000000000001ab50	mov	x0, x21
000000000001ab54	mov	x1, x20
000000000001ab58	mov	x2, x19
000000000001ab5c	blr	x8
000000000001ab60	str	x0, [x19]
000000000001ab64	ldp	x29, x30, [sp, #0x20]
000000000001ab68	ldp	x20, x19, [sp, #0x10]
000000000001ab6c	ldp	x22, x21, [sp], #0x30
000000000001ab70	ret
_kfun:kotlin.collections.HashMapEntrySetBase#clear(){}:
000000000001ab74	stp	x20, x19, [sp, #-0x20]!
000000000001ab78	stp	x29, x30, [sp, #0x10]
000000000001ab7c	add	x29, sp, #0x10
000000000001ab80	mov	x19, x0
000000000001ab84	adr	x8, #0x79705
000000000001ab88	nop
000000000001ab8c	ldarb	w8, [x8]
000000000001ab90	tbz	w8, #0x0, 0x1ab98
000000000001ab94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ab98	ldr	x0, [x19, #0x8]
000000000001ab9c	ldp	x29, x30, [sp, #0x10]
000000000001aba0	ldp	x20, x19, [sp], #0x20
000000000001aba4	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashMapEntrySetBase#add(1:2){}kotlin.Boolean:
000000000001aba8	sub	sp, sp, #0x40
000000000001abac	stp	x20, x19, [sp, #0x20]
000000000001abb0	stp	x29, x30, [sp, #0x30]
000000000001abb4	add	x29, sp, #0x30
000000000001abb8	movi.16b	v0, #0x0
000000000001abbc	stp	q0, q0, [sp]
000000000001abc0	adrp	x0, 96 ; 0x7a000
000000000001abc4	add	x0, x0, #0x2c0
000000000001abc8	ldr	x8, [x0]
000000000001abcc	blr	x8
000000000001abd0	ldr	x19, [x0]
000000000001abd4	ldr	x8, [x19, #0x110]
000000000001abd8	mov	x9, sp
000000000001abdc	str	x9, [x19, #0x110]
000000000001abe0	mov	x9, #0x400000000
000000000001abe4	stp	x8, x9, [sp, #0x8]
000000000001abe8	adr	x8, #0x796a1
000000000001abec	nop
000000000001abf0	ldarb	w8, [x8]
000000000001abf4	tbz	w8, #0x0, 0x1abfc
000000000001abf8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001abfc	ldr	x8, [x19, #0x118]
000000000001ac00	add	x0, x8, #0x70
000000000001ac04	mov	w1, #0x38
000000000001ac08	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ac0c	mov	x19, x0
000000000001ac10	adr	x8, #0x46910
000000000001ac14	nop
000000000001ac18	str	x8, [x19, #0x10]!
000000000001ac1c	stur	xzr, [x19, #-0x8]
000000000001ac20	str	x19, [sp, #0x18]
000000000001ac24	mov	x0, x19
000000000001ac28	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001ac2c	mov	x0, x19
000000000001ac30	bl	_ThrowException
_kfun:kotlin.collections.HashMapEntrySetBase#addAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001ac34	sub	sp, sp, #0x40
000000000001ac38	stp	x20, x19, [sp, #0x20]
000000000001ac3c	stp	x29, x30, [sp, #0x30]
000000000001ac40	add	x29, sp, #0x30
000000000001ac44	movi.16b	v0, #0x0
000000000001ac48	stp	q0, q0, [sp]
000000000001ac4c	adrp	x0, 96 ; 0x7a000
000000000001ac50	add	x0, x0, #0x2c0
000000000001ac54	ldr	x8, [x0]
000000000001ac58	blr	x8
000000000001ac5c	ldr	x19, [x0]
000000000001ac60	ldr	x8, [x19, #0x110]
000000000001ac64	mov	x9, sp
000000000001ac68	str	x9, [x19, #0x110]
000000000001ac6c	mov	x9, #0x400000000
000000000001ac70	stp	x8, x9, [sp, #0x8]
000000000001ac74	adr	x8, #0x79615
000000000001ac78	nop
000000000001ac7c	ldarb	w8, [x8]
000000000001ac80	tbz	w8, #0x0, 0x1ac88
000000000001ac84	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ac88	ldr	x8, [x19, #0x118]
000000000001ac8c	add	x0, x8, #0x70
000000000001ac90	mov	w1, #0x38
000000000001ac94	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ac98	mov	x19, x0
000000000001ac9c	adr	x8, #0x46884
000000000001aca0	nop
000000000001aca4	str	x8, [x19, #0x10]!
000000000001aca8	stur	xzr, [x19, #-0x8]
000000000001acac	str	x19, [sp, #0x18]
000000000001acb0	mov	x0, x19
000000000001acb4	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001acb8	mov	x0, x19
000000000001acbc	bl	_ThrowException
_kfun:kotlin.collections.HashMapEntrySetBase#remove(1:2){}kotlin.Boolean:
000000000001acc0	sub	sp, sp, #0x80
000000000001acc4	stp	x24, x23, [sp, #0x40]
000000000001acc8	stp	x22, x21, [sp, #0x50]
000000000001accc	stp	x20, x19, [sp, #0x60]
000000000001acd0	stp	x29, x30, [sp, #0x70]
000000000001acd4	add	x29, sp, #0x70
000000000001acd8	mov	x19, x1
000000000001acdc	mov	x20, x0
000000000001ace0	adr	x8, #0x795a9
000000000001ace4	nop
000000000001ace8	ldarb	w8, [x8]
000000000001acec	tbz	w8, #0x0, 0x1acf4
000000000001acf0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001acf4	cbz	x19, 0x1ae78
000000000001acf8	ldr	x8, [x19]
000000000001acfc	and	x8, x8, #0xfffffffffffffffc
000000000001ad00	ldr	x8, [x8]
000000000001ad04	ldr	w9, [x8, #0x3c]
000000000001ad08	ldr	x8, [x8, #0x40]
000000000001ad0c	tbnz	w9, #0x1f, 0x1ad98
000000000001ad10	mov	w10, #0xa8
000000000001ad14	and	x9, x9, x10
000000000001ad18	lsl	x9, x9, #4
000000000001ad1c	ldr	w8, [x8, x9]
000000000001ad20	cmp	w8, #0xa8
000000000001ad24	b.ne	0x1ae78
000000000001ad28	ldr	x21, [x20, #0x8]
000000000001ad2c	movi.16b	v0, #0x0
000000000001ad30	stp	q0, q0, [sp]
000000000001ad34	str	xzr, [sp, #0x30]
000000000001ad38	str	q0, [sp, #0x20]
000000000001ad3c	mov	x23, sp
000000000001ad40	add	x22, x23, #0x18
000000000001ad44	adrp	x20, 96 ; 0x7a000
000000000001ad48	add	x20, x20, #0x2c0
000000000001ad4c	ldr	x24, [x20]
000000000001ad50	mov	x0, x20
000000000001ad54	blr	x24
000000000001ad58	ldr	x8, [x0]
000000000001ad5c	ldr	x9, [x8, #0x110]
000000000001ad60	str	x23, [x8, #0x110]
000000000001ad64	mov	x8, #0x700000000
000000000001ad68	stp	x9, x8, [sp, #0x8]
000000000001ad6c	mov	x0, x21
000000000001ad70	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001ad74	ldr	x8, [x19]
000000000001ad78	and	x8, x8, #0xfffffffffffffffc
000000000001ad7c	ldr	x8, [x8]
000000000001ad80	ldr	w9, [x8, #0x3c]
000000000001ad84	ldr	x8, [x8, #0x40]
000000000001ad88	tbnz	w9, #0x1f, 0x1adf0
000000000001ad8c	mov	w10, #0xa8
000000000001ad90	and	x9, x9, x10
000000000001ad94	b	0x1aef4
000000000001ad98	neg	w10, w9
000000000001ad9c	mvn	w9, w9
000000000001ada0	cmp	w10, #0x9
000000000001ada4	b.ge	0x1ae34
000000000001ada8	cmp	w10, #0x2
000000000001adac	b.lt	0x1ae80
000000000001adb0	mov	x10, #0x0
000000000001adb4	mov	x11, x8
000000000001adb8	ldr	w12, [x11]
000000000001adbc	cmp	w12, #0xa7
000000000001adc0	b.gt	0x1aed0
000000000001adc4	add	x10, x10, #0x1
000000000001adc8	add	x11, x11, #0x10
000000000001adcc	cmp	x9, x10
000000000001add0	b.ne	0x1adb8
000000000001add4	mov	x10, x9
000000000001add8	sxtw	x9, w10
000000000001addc	lsl	x9, x9, #4
000000000001ade0	ldr	w8, [x8, x9]
000000000001ade4	cmp	w8, #0xa8
000000000001ade8	b.ne	0x1ae78
000000000001adec	b	0x1ad28
000000000001adf0	neg	w10, w9
000000000001adf4	mvn	w9, w9
000000000001adf8	cmp	w10, #0x9
000000000001adfc	b.ge	0x1ae9c
000000000001ae00	cmp	w10, #0x2
000000000001ae04	b.lt	0x1aee8
000000000001ae08	mov	x10, #0x0
000000000001ae0c	mov	x11, x8
000000000001ae10	ldr	w12, [x11]
000000000001ae14	cmp	w12, #0xa7
000000000001ae18	b.gt	0x1aef0
000000000001ae1c	add	x10, x10, #0x1
000000000001ae20	add	x11, x11, #0x10
000000000001ae24	cmp	x9, x10
000000000001ae28	b.ne	0x1ae10
000000000001ae2c	mov	x10, x9
000000000001ae30	b	0x1aef0
000000000001ae34	mov	w10, #0x0
000000000001ae38	add	w11, w9, w10
000000000001ae3c	cmp	w11, #0x0
000000000001ae40	cinc	w11, w11, lt
000000000001ae44	asr	w11, w11, #1
000000000001ae48	sbfiz	x12, x11, #4, #32
000000000001ae4c	ldr	w12, [x8, x12]
000000000001ae50	cmp	w12, #0xa8
000000000001ae54	csinc	w10, w10, w11, ge
000000000001ae58	csel	w9, w9, w11, lt
000000000001ae5c	cmp	w10, w9
000000000001ae60	b.lt	0x1ae38
000000000001ae64	sxtw	x9, w10
000000000001ae68	lsl	x9, x9, #4
000000000001ae6c	ldr	w8, [x8, x9]
000000000001ae70	cmp	w8, #0xa8
000000000001ae74	b.eq	0x1ad28
000000000001ae78	mov	w8, #0x0
000000000001ae7c	b	0x1b058
000000000001ae80	mov	w10, #0x0
000000000001ae84	sxtw	x9, w10
000000000001ae88	lsl	x9, x9, #4
000000000001ae8c	ldr	w8, [x8, x9]
000000000001ae90	cmp	w8, #0xa8
000000000001ae94	b.eq	0x1ad28
000000000001ae98	b	0x1ae78
000000000001ae9c	mov	w10, #0x0
000000000001aea0	add	w11, w9, w10
000000000001aea4	cmp	w11, #0x0
000000000001aea8	cinc	w11, w11, lt
000000000001aeac	asr	w11, w11, #1
000000000001aeb0	sbfiz	x12, x11, #4, #32
000000000001aeb4	ldr	w12, [x8, x12]
000000000001aeb8	cmp	w12, #0xa8
000000000001aebc	csinc	w10, w10, w11, ge
000000000001aec0	csel	w9, w9, w11, lt
000000000001aec4	cmp	w10, w9
000000000001aec8	b.lt	0x1aea0
000000000001aecc	b	0x1aef0
000000000001aed0	sxtw	x9, w10
000000000001aed4	lsl	x9, x9, #4
000000000001aed8	ldr	w8, [x8, x9]
000000000001aedc	cmp	w8, #0xa8
000000000001aee0	b.ne	0x1ae78
000000000001aee4	b	0x1ad28
000000000001aee8	mov	w10, #0x0
000000000001aeec	b	0x1aef0
000000000001aef0	sxtw	x9, w10
000000000001aef4	add	x8, x8, x9, lsl #4
000000000001aef8	ldr	x8, [x8, #0x8]
000000000001aefc	ldr	x8, [x8]
000000000001af00	mov	x0, x19
000000000001af04	mov	x1, x22
000000000001af08	blr	x8
000000000001af0c	mov	x1, x0
000000000001af10	mov	x0, x21
000000000001af14	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001af18	tbnz	w0, #0x1f, 0x1b040
000000000001af1c	ldr	x8, [x21, #0x10]
000000000001af20	str	x8, [sp, #0x20]
000000000001af24	cbz	x8, 0x1b074
000000000001af28	mov	x22, x0
000000000001af2c	ldr	w9, [x8, #0x8]
000000000001af30	cmp	w9, w0
000000000001af34	b.ls	0x1b078
000000000001af38	add	x1, x23, #0x30
000000000001af3c	add	x8, x8, w22, sxtw #3
000000000001af40	ldr	x23, [x8, #0x10]
000000000001af44	str	x23, [sp, #0x28]
000000000001af48	ldr	x8, [x19]
000000000001af4c	and	x8, x8, #0xfffffffffffffffc
000000000001af50	ldr	x8, [x8]
000000000001af54	ldr	w9, [x8, #0x3c]
000000000001af58	ldr	x8, [x8, #0x40]
000000000001af5c	tbnz	w9, #0x1f, 0x1af6c
000000000001af60	mov	w10, #0xa8
000000000001af64	and	x9, x9, x10
000000000001af68	b	0x1aff0
000000000001af6c	neg	w10, w9
000000000001af70	mvn	w9, w9
000000000001af74	cmp	w10, #0x9
000000000001af78	b.ge	0x1afb0
000000000001af7c	cmp	w10, #0x2
000000000001af80	b.lt	0x1afe4
000000000001af84	mov	x10, #0x0
000000000001af88	mov	x11, x8
000000000001af8c	ldr	w12, [x11]
000000000001af90	cmp	w12, #0xa7
000000000001af94	b.gt	0x1afec
000000000001af98	add	x10, x10, #0x1
000000000001af9c	add	x11, x11, #0x10
000000000001afa0	cmp	x9, x10
000000000001afa4	b.ne	0x1af8c
000000000001afa8	mov	x10, x9
000000000001afac	b	0x1afec
000000000001afb0	mov	w10, #0x0
000000000001afb4	add	w11, w9, w10
000000000001afb8	cmp	w11, #0x0
000000000001afbc	cinc	w11, w11, lt
000000000001afc0	asr	w11, w11, #1
000000000001afc4	sbfiz	x12, x11, #4, #32
000000000001afc8	ldr	w12, [x8, x12]
000000000001afcc	cmp	w12, #0xa8
000000000001afd0	csinc	w10, w10, w11, ge
000000000001afd4	csel	w9, w9, w11, lt
000000000001afd8	cmp	w10, w9
000000000001afdc	b.lt	0x1afb4
000000000001afe0	b	0x1afec
000000000001afe4	mov	w10, #0x0
000000000001afe8	b	0x1afec
000000000001afec	sxtw	x9, w10
000000000001aff0	add	x8, x8, x9, lsl #4
000000000001aff4	ldr	x8, [x8, #0x8]
000000000001aff8	ldr	x8, [x8, #0x8]
000000000001affc	mov	x0, x19
000000000001b000	blr	x8
000000000001b004	mov	x1, x0
000000000001b008	cbz	x23, 0x1b03c
000000000001b00c	ldr	x8, [x23]
000000000001b010	and	x8, x8, #0xfffffffffffffffc
000000000001b014	ldr	x8, [x8]
000000000001b018	ldr	x8, [x8, #0x70]
000000000001b01c	mov	x0, x23
000000000001b020	blr	x8
000000000001b024	tbz	w0, #0x0, 0x1b040
000000000001b028	mov	x0, x21
000000000001b02c	mov	x1, x22
000000000001b030	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
000000000001b034	mov	w8, #0x1
000000000001b038	b	0x1b044
000000000001b03c	cbz	x1, 0x1b028
000000000001b040	mov	w8, #0x0
000000000001b044	mov	x0, x20
000000000001b048	blr	x24
000000000001b04c	ldr	x9, [x0]
000000000001b050	ldr	x10, [sp, #0x8]
000000000001b054	str	x10, [x9, #0x110]
000000000001b058	mov	x0, x8
000000000001b05c	ldp	x29, x30, [sp, #0x70]
000000000001b060	ldp	x20, x19, [sp, #0x60]
000000000001b064	ldp	x22, x21, [sp, #0x50]
000000000001b068	ldp	x24, x23, [sp, #0x40]
000000000001b06c	add	sp, sp, #0x80
000000000001b070	ret
000000000001b074	bl	_ThrowNullPointerException
000000000001b078	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMapEntrySetBase#containsAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001b07c	stp	x20, x19, [sp, #-0x20]!
000000000001b080	stp	x29, x30, [sp, #0x10]
000000000001b084	add	x29, sp, #0x10
000000000001b088	mov	x19, x1
000000000001b08c	mov	x20, x0
000000000001b090	adr	x8, #0x791f9
000000000001b094	nop
000000000001b098	ldarb	w8, [x8]
000000000001b09c	tbz	w8, #0x0, 0x1b0a4
000000000001b0a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b0a4	ldr	x0, [x20, #0x8]
000000000001b0a8	mov	x1, x19
000000000001b0ac	ldp	x29, x30, [sp, #0x10]
000000000001b0b0	ldp	x20, x19, [sp], #0x20
000000000001b0b4	b	"_kfun:kotlin.collections.HashMap#containsAllEntries(kotlin.collections.Collection<*>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySetBase#removeAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001b0b8	stp	x20, x19, [sp, #-0x20]!
000000000001b0bc	stp	x29, x30, [sp, #0x10]
000000000001b0c0	add	x29, sp, #0x10
000000000001b0c4	mov	x19, x1
000000000001b0c8	mov	x20, x0
000000000001b0cc	adr	x8, #0x791bd
000000000001b0d0	nop
000000000001b0d4	ldarb	w8, [x8]
000000000001b0d8	tbz	w8, #0x0, 0x1b0e0
000000000001b0dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b0e0	ldr	x0, [x20, #0x8]
000000000001b0e4	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001b0e8	mov	x0, x20
000000000001b0ec	mov	x1, x19
000000000001b0f0	ldp	x29, x30, [sp, #0x10]
000000000001b0f4	ldp	x20, x19, [sp], #0x20
000000000001b0f8	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySetBase#retainAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001b0fc	stp	x20, x19, [sp, #-0x20]!
000000000001b100	stp	x29, x30, [sp, #0x10]
000000000001b104	add	x29, sp, #0x10
000000000001b108	mov	x19, x1
000000000001b10c	mov	x20, x0
000000000001b110	adr	x8, #0x79179
000000000001b114	nop
000000000001b118	ldarb	w8, [x8]
000000000001b11c	tbz	w8, #0x0, 0x1b124
000000000001b120	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b124	ldr	x0, [x20, #0x8]
000000000001b128	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001b12c	mov	x0, x20
000000000001b130	mov	x1, x19
000000000001b134	ldp	x29, x30, [sp, #0x10]
000000000001b138	ldp	x20, x19, [sp], #0x20
000000000001b13c	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashSet#<get-size>(){}kotlin.Int:
000000000001b140	stp	x20, x19, [sp, #-0x20]!
000000000001b144	stp	x29, x30, [sp, #0x10]
000000000001b148	add	x29, sp, #0x10
000000000001b14c	mov	x19, x0
000000000001b150	adr	x8, #0x79139
000000000001b154	nop
000000000001b158	ldarb	w8, [x8]
000000000001b15c	tbz	w8, #0x0, 0x1b164
000000000001b160	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b164	ldr	x8, [x19, #0x8]
000000000001b168	ldr	w0, [x8, #0x4c]
000000000001b16c	ldp	x29, x30, [sp, #0x10]
000000000001b170	ldp	x20, x19, [sp], #0x20
000000000001b174	ret
_kfun:kotlin.collections.HashSet#isEmpty(){}kotlin.Boolean:
000000000001b178	stp	x20, x19, [sp, #-0x20]!
000000000001b17c	stp	x29, x30, [sp, #0x10]
000000000001b180	add	x29, sp, #0x10
000000000001b184	mov	x19, x0
000000000001b188	adr	x8, #0x79101
000000000001b18c	nop
000000000001b190	ldarb	w8, [x8]
000000000001b194	tbz	w8, #0x0, 0x1b19c
000000000001b198	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b19c	ldr	x8, [x19, #0x8]
000000000001b1a0	ldr	w8, [x8, #0x4c]
000000000001b1a4	cmp	w8, #0x0
000000000001b1a8	cset	w0, eq
000000000001b1ac	ldp	x29, x30, [sp, #0x10]
000000000001b1b0	ldp	x20, x19, [sp], #0x20
000000000001b1b4	ret
_kfun:kotlin.collections.HashSet#contains(1:0){}kotlin.Boolean:
000000000001b1b8	stp	x20, x19, [sp, #-0x20]!
000000000001b1bc	stp	x29, x30, [sp, #0x10]
000000000001b1c0	add	x29, sp, #0x10
000000000001b1c4	mov	x19, x1
000000000001b1c8	mov	x20, x0
000000000001b1cc	adr	x8, #0x790bd
000000000001b1d0	nop
000000000001b1d4	ldarb	w8, [x8]
000000000001b1d8	tbz	w8, #0x0, 0x1b1e0
000000000001b1dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b1e0	ldr	x0, [x20, #0x8]
000000000001b1e4	mov	x1, x19
000000000001b1e8	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001b1ec	mvn	w8, w0
000000000001b1f0	lsr	w0, w8, #31
000000000001b1f4	ldp	x29, x30, [sp, #0x10]
000000000001b1f8	ldp	x20, x19, [sp], #0x20
000000000001b1fc	ret
_kfun:kotlin.collections.HashSet#getElement(1:0){}1:0?:
000000000001b200	stp	x22, x21, [sp, #-0x30]!
000000000001b204	stp	x20, x19, [sp, #0x10]
000000000001b208	stp	x29, x30, [sp, #0x20]
000000000001b20c	add	x29, sp, #0x20
000000000001b210	mov	x19, x2
000000000001b214	mov	x20, x1
000000000001b218	mov	x21, x0
000000000001b21c	adr	x8, #0x7906d
000000000001b220	nop
000000000001b224	ldarb	w8, [x8]
000000000001b228	tbz	w8, #0x0, 0x1b230
000000000001b22c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b230	ldr	x0, [x21, #0x8]
000000000001b234	mov	x1, x20
000000000001b238	mov	x2, x19
000000000001b23c	bl	"_kfun:kotlin.collections.HashMap#getKey(1:0){}1:0?"
000000000001b240	str	x0, [x19]
000000000001b244	ldp	x29, x30, [sp, #0x20]
000000000001b248	ldp	x20, x19, [sp, #0x10]
000000000001b24c	ldp	x22, x21, [sp], #0x30
000000000001b250	ret
_kfun:kotlin.collections.HashSet#clear(){}:
000000000001b254	stp	x20, x19, [sp, #-0x20]!
000000000001b258	stp	x29, x30, [sp, #0x10]
000000000001b25c	add	x29, sp, #0x10
000000000001b260	mov	x19, x0
000000000001b264	adr	x8, #0x79025
000000000001b268	nop
000000000001b26c	ldarb	w8, [x8]
000000000001b270	tbz	w8, #0x0, 0x1b278
000000000001b274	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b278	ldr	x0, [x19, #0x8]
000000000001b27c	ldp	x29, x30, [sp, #0x10]
000000000001b280	ldp	x20, x19, [sp], #0x20
000000000001b284	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashSet#add(1:0){}kotlin.Boolean:
000000000001b288	stp	x20, x19, [sp, #-0x20]!
000000000001b28c	stp	x29, x30, [sp, #0x10]
000000000001b290	add	x29, sp, #0x10
000000000001b294	mov	x19, x1
000000000001b298	mov	x20, x0
000000000001b29c	adr	x8, #0x78fed
000000000001b2a0	nop
000000000001b2a4	ldarb	w8, [x8]
000000000001b2a8	tbz	w8, #0x0, 0x1b2b0
000000000001b2ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b2b0	ldr	x0, [x20, #0x8]
000000000001b2b4	mov	x1, x19
000000000001b2b8	bl	"_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int"
000000000001b2bc	mvn	w8, w0
000000000001b2c0	lsr	w0, w8, #31
000000000001b2c4	ldp	x29, x30, [sp, #0x10]
000000000001b2c8	ldp	x20, x19, [sp], #0x20
000000000001b2cc	ret
_kfun:kotlin.collections.HashSet#remove(1:0){}kotlin.Boolean:
000000000001b2d0	stp	x20, x19, [sp, #-0x20]!
000000000001b2d4	stp	x29, x30, [sp, #0x10]
000000000001b2d8	add	x29, sp, #0x10
000000000001b2dc	mov	x19, x1
000000000001b2e0	mov	x20, x0
000000000001b2e4	adr	x8, #0x78fa5
000000000001b2e8	nop
000000000001b2ec	ldarb	w8, [x8]
000000000001b2f0	tbz	w8, #0x0, 0x1b2f8
000000000001b2f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b2f8	ldr	x0, [x20, #0x8]
000000000001b2fc	mov	x1, x19
000000000001b300	bl	"_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int"
000000000001b304	mvn	w8, w0
000000000001b308	lsr	w0, w8, #31
000000000001b30c	ldp	x29, x30, [sp, #0x10]
000000000001b310	ldp	x20, x19, [sp], #0x20
000000000001b314	ret
_kfun:kotlin.collections.HashSet#iterator(){}kotlin.collections.MutableIterator<1:0>:
000000000001b318	stp	x20, x19, [sp, #-0x20]!
000000000001b31c	stp	x29, x30, [sp, #0x10]
000000000001b320	add	x29, sp, #0x10
000000000001b324	mov	x19, x1
000000000001b328	mov	x20, x0
000000000001b32c	adr	x8, #0x78f5d
000000000001b330	nop
000000000001b334	ldarb	w8, [x8]
000000000001b338	tbz	w8, #0x0, 0x1b340
000000000001b33c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b340	ldr	x0, [x20, #0x8]
000000000001b344	mov	x1, x19
000000000001b348	bl	"_kfun:kotlin.collections.HashMap#keysIterator(){}kotlin.collections.HashMap.KeysItr<1:0,1:1>"
000000000001b34c	str	x0, [x19]
000000000001b350	ldp	x29, x30, [sp, #0x10]
000000000001b354	ldp	x20, x19, [sp], #0x20
000000000001b358	ret
_kfun:kotlin.collections.HashSet#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001b35c	stp	x20, x19, [sp, #-0x20]!
000000000001b360	stp	x29, x30, [sp, #0x10]
000000000001b364	add	x29, sp, #0x10
000000000001b368	mov	x19, x1
000000000001b36c	mov	x20, x0
000000000001b370	adr	x8, #0x78f19
000000000001b374	nop
000000000001b378	ldarb	w8, [x8]
000000000001b37c	tbz	w8, #0x0, 0x1b384
000000000001b380	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b384	ldr	x0, [x20, #0x8]
000000000001b388	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001b38c	mov	x0, x20
000000000001b390	mov	x1, x19
000000000001b394	ldp	x29, x30, [sp, #0x10]
000000000001b398	ldp	x20, x19, [sp], #0x20
000000000001b39c	b	"_kfun:kotlin.collections.AbstractMutableCollection#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashSet#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001b3a0	stp	x20, x19, [sp, #-0x20]!
000000000001b3a4	stp	x29, x30, [sp, #0x10]
000000000001b3a8	add	x29, sp, #0x10
000000000001b3ac	mov	x19, x1
000000000001b3b0	mov	x20, x0
000000000001b3b4	adr	x8, #0x78ed5
000000000001b3b8	nop
000000000001b3bc	ldarb	w8, [x8]
000000000001b3c0	tbz	w8, #0x0, 0x1b3c8
000000000001b3c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b3c8	ldr	x0, [x20, #0x8]
000000000001b3cc	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001b3d0	mov	x0, x20
000000000001b3d4	mov	x1, x19
000000000001b3d8	ldp	x29, x30, [sp, #0x10]
000000000001b3dc	ldp	x20, x19, [sp], #0x20
000000000001b3e0	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashSet#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001b3e4	stp	x20, x19, [sp, #-0x20]!
000000000001b3e8	stp	x29, x30, [sp, #0x10]
000000000001b3ec	add	x29, sp, #0x10
000000000001b3f0	mov	x19, x1
000000000001b3f4	mov	x20, x0
000000000001b3f8	adr	x8, #0x78e91
000000000001b3fc	nop
000000000001b400	ldarb	w8, [x8]
000000000001b404	tbz	w8, #0x0, 0x1b40c
000000000001b408	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b40c	ldr	x0, [x20, #0x8]
000000000001b410	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001b414	mov	x0, x20
000000000001b418	mov	x1, x19
000000000001b41c	ldp	x29, x30, [sp, #0x10]
000000000001b420	ldp	x20, x19, [sp], #0x20
000000000001b424	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}:
000000000001b428	sub	sp, sp, #0x50
000000000001b42c	stp	x22, x21, [sp, #0x20]
000000000001b430	stp	x20, x19, [sp, #0x30]
000000000001b434	stp	x29, x30, [sp, #0x40]
000000000001b438	add	x29, sp, #0x40
000000000001b43c	mov	x20, x1
000000000001b440	mov	x19, x0
000000000001b444	movi.16b	v0, #0x0
000000000001b448	stp	q0, q0, [sp]
000000000001b44c	adrp	x0, 95 ; 0x7a000
000000000001b450	add	x0, x0, #0x2c0
000000000001b454	ldr	x8, [x0]
000000000001b458	blr	x8
000000000001b45c	ldr	x21, [x0]
000000000001b460	ldr	x8, [x21, #0x110]
000000000001b464	mov	x9, sp
000000000001b468	str	x9, [x21, #0x110]
000000000001b46c	mov	x9, #0x400000000
000000000001b470	stp	x8, x9, [sp, #0x8]
000000000001b474	adr	x8, #0x78e15
000000000001b478	nop
000000000001b47c	ldarb	w8, [x8]
000000000001b480	tbz	w8, #0x0, 0x1b488
000000000001b484	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b488	tbnz	w20, #0x1f, 0x1b4e0
000000000001b48c	ldr	x8, [x21, #0x118]
000000000001b490	mov	w9, w20
000000000001b494	lsl	x9, x9, #1
000000000001b498	add	x9, x9, #0x1f
000000000001b49c	and	x1, x9, #0x3fffffff8
000000000001b4a0	add	x0, x8, #0x70
000000000001b4a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001b4a8	stp	xzr, xzr, [x0, #0x10]!
000000000001b4ac	adr	x8, #0x45884
000000000001b4b0	nop
000000000001b4b4	stp	xzr, x8, [x0, #-0x8]
000000000001b4b8	str	w20, [x0, #0x8]
000000000001b4bc	str	x0, [sp, #0x18]
000000000001b4c0	str	x0, [x19, #0x8]
000000000001b4c4	ldr	x8, [sp, #0x8]
000000000001b4c8	str	x8, [x21, #0x110]
000000000001b4cc	ldp	x29, x30, [sp, #0x40]
000000000001b4d0	ldp	x20, x19, [sp, #0x30]
000000000001b4d4	ldp	x22, x21, [sp, #0x20]
000000000001b4d8	add	sp, sp, #0x50
000000000001b4dc	ret
000000000001b4e0	bl	_ThrowIllegalArgumentException
_kfun:kotlin.text.StringBuilder#<get-length>(){}kotlin.Int:
000000000001b4e4	stp	x20, x19, [sp, #-0x20]!
000000000001b4e8	stp	x29, x30, [sp, #0x10]
000000000001b4ec	add	x29, sp, #0x10
000000000001b4f0	mov	x19, x0
000000000001b4f4	adr	x8, #0x78d95
000000000001b4f8	nop
000000000001b4fc	ldarb	w8, [x8]
000000000001b500	tbz	w8, #0x0, 0x1b508
000000000001b504	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b508	ldr	w0, [x19, #0x10]
000000000001b50c	ldp	x29, x30, [sp, #0x10]
000000000001b510	ldp	x20, x19, [sp], #0x20
000000000001b514	ret
_kfun:kotlin.text.StringBuilder#get(kotlin.Int){}kotlin.Char:
000000000001b518	sub	sp, sp, #0x70
000000000001b51c	stp	x22, x21, [sp, #0x40]
000000000001b520	stp	x20, x19, [sp, #0x50]
000000000001b524	stp	x29, x30, [sp, #0x60]
000000000001b528	add	x29, sp, #0x60
000000000001b52c	mov	x19, x1
000000000001b530	mov	x20, x0
000000000001b534	movi.16b	v0, #0x0
000000000001b538	stp	q0, q0, [sp]
000000000001b53c	adrp	x0, 95 ; 0x7a000
000000000001b540	add	x0, x0, #0x2c0
000000000001b544	ldr	x8, [x0]
000000000001b548	blr	x8
000000000001b54c	ldr	x21, [x0]
000000000001b550	ldr	x8, [x21, #0x110]
000000000001b554	mov	x9, sp
000000000001b558	str	x9, [x21, #0x110]
000000000001b55c	mov	x22, #0x400000000
000000000001b560	stp	x8, x22, [sp, #0x8]
000000000001b564	adr	x8, #0x78d25
000000000001b568	nop
000000000001b56c	ldarb	w8, [x8]
000000000001b570	tbz	w8, #0x0, 0x1b57c
000000000001b574	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b578	movi.16b	v0, #0x0
000000000001b57c	stp	q0, q0, [sp, #0x20]
000000000001b580	ldr	x8, [x21, #0x110]
000000000001b584	add	x9, sp, #0x20
000000000001b588	str	x9, [x21, #0x110]
000000000001b58c	stp	x8, x22, [sp, #0x28]
000000000001b590	tbnz	w19, #0x1f, 0x1b5e0
000000000001b594	ldr	w8, [x20, #0x10]
000000000001b598	cmp	w8, w19
000000000001b59c	b.le	0x1b5e0
000000000001b5a0	ldr	x8, [sp, #0x28]
000000000001b5a4	str	x8, [x21, #0x110]
000000000001b5a8	ldr	x8, [x20, #0x8]
000000000001b5ac	str	x8, [sp, #0x18]
000000000001b5b0	ldr	w9, [x8, #0x8]
000000000001b5b4	cmp	w9, w19
000000000001b5b8	b.ls	0x1b61c
000000000001b5bc	add	x8, x8, w19, sxtw #1
000000000001b5c0	ldrh	w0, [x8, #0x10]
000000000001b5c4	ldr	x8, [sp, #0x8]
000000000001b5c8	str	x8, [x21, #0x110]
000000000001b5cc	ldp	x29, x30, [sp, #0x60]
000000000001b5d0	ldp	x20, x19, [sp, #0x50]
000000000001b5d4	ldp	x22, x21, [sp, #0x40]
000000000001b5d8	add	sp, sp, #0x70
000000000001b5dc	ret
000000000001b5e0	ldr	x8, [x21, #0x118]
000000000001b5e4	add	x0, x8, #0x70
000000000001b5e8	mov	w1, #0x38
000000000001b5ec	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001b5f0	mov	x19, x0
000000000001b5f4	adr	x8, #0x45d4c
000000000001b5f8	nop
000000000001b5fc	str	x8, [x19, #0x10]!
000000000001b600	stur	xzr, [x19, #-0x8]
000000000001b604	str	x19, [sp, #0x38]
000000000001b608	mov	x0, x19
000000000001b60c	mov	x1, #0x0
000000000001b610	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001b614	mov	x0, x19
000000000001b618	bl	_ThrowException
000000000001b61c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.text.StringBuilder#subSequence(kotlin.Int;kotlin.Int){}kotlin.CharSequence:
000000000001b620	sub	sp, sp, #0x90
000000000001b624	stp	x26, x25, [sp, #0x40]
000000000001b628	stp	x24, x23, [sp, #0x50]
000000000001b62c	stp	x22, x21, [sp, #0x60]
000000000001b630	stp	x20, x19, [sp, #0x70]
000000000001b634	stp	x29, x30, [sp, #0x80]
000000000001b638	add	x29, sp, #0x80
000000000001b63c	mov	x19, x3
000000000001b640	mov	x22, x2
000000000001b644	mov	x21, x1
000000000001b648	mov	x23, x0
000000000001b64c	adr	x8, #0x78c3d
000000000001b650	nop
000000000001b654	ldarb	w8, [x8]
000000000001b658	tbz	w8, #0x0, 0x1b660
000000000001b65c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b660	movi.16b	v0, #0x0
000000000001b664	stp	q0, q0, [sp]
000000000001b668	adrp	x20, 95 ; 0x7a000
000000000001b66c	add	x20, x20, #0x2c0
000000000001b670	ldr	x24, [x20]
000000000001b674	mov	x0, x20
000000000001b678	blr	x24
000000000001b67c	ldr	x8, [x0]
000000000001b680	ldr	x9, [x8, #0x110]
000000000001b684	mov	x10, sp
000000000001b688	str	x10, [x8, #0x110]
000000000001b68c	mov	x8, #0x400000000
000000000001b690	stp	x9, x8, [sp, #0x8]
000000000001b694	ldr	w2, [x23, #0x10]
000000000001b698	mov	x0, x21
000000000001b69c	mov	x1, x22
000000000001b6a0	bl	"_kfun:kotlin.text#checkBoundsIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
000000000001b6a4	ldr	x23, [x23, #0x8]
000000000001b6a8	str	x23, [sp, #0x18]
000000000001b6ac	subs	w25, w22, w21
000000000001b6b0	b.eq	0x1b714
000000000001b6b4	tbnz	w25, #0x1f, 0x1b77c
000000000001b6b8	mov	x0, x20
000000000001b6bc	blr	x24
000000000001b6c0	ldr	x8, [x0]
000000000001b6c4	ldr	x8, [x8, #0x118]
000000000001b6c8	lsl	x9, x25, #1
000000000001b6cc	add	x9, x9, #0x1f
000000000001b6d0	and	x1, x9, #0x3fffffff8
000000000001b6d4	add	x0, x8, #0x70
000000000001b6d8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001b6dc	mov	x22, x0
000000000001b6e0	adr	x8, #0x46800
000000000001b6e4	nop
000000000001b6e8	stp	x8, xzr, [x22, #0x10]!
000000000001b6ec	stur	xzr, [x22, #-0x8]
000000000001b6f0	str	w25, [x22, #0x8]
000000000001b6f4	str	x22, [x19]
000000000001b6f8	add	x0, x22, #0x10
000000000001b6fc	add	x8, x23, w21, sxtw #1
000000000001b700	add	x1, x8, #0x10
000000000001b704	sbfiz	x2, x25, #1, #32
000000000001b708	bl	0x554ac ; symbol stub for: _memcpy
000000000001b70c	str	x22, [x19]
000000000001b710	b	0x1b740
000000000001b714	mov	x0, x20
000000000001b718	blr	x24
000000000001b71c	ldr	x8, [x0]
000000000001b720	ldr	x9, [x8, #0x110]
000000000001b724	add	x10, sp, #0x28
000000000001b728	str	x10, [x8, #0x110]
000000000001b72c	adr	x22, #0x527b4
000000000001b730	nop
000000000001b734	str	x22, [x19]
000000000001b738	ldr	x8, [x0]
000000000001b73c	str	x9, [x8, #0x110]
000000000001b740	str	x22, [x19]
000000000001b744	mov	x0, x20
000000000001b748	blr	x24
000000000001b74c	ldr	x8, [x0]
000000000001b750	ldr	x9, [sp, #0x8]
000000000001b754	str	x9, [x8, #0x110]
000000000001b758	str	x22, [x19]
000000000001b75c	mov	x0, x22
000000000001b760	ldp	x29, x30, [sp, #0x80]
000000000001b764	ldp	x20, x19, [sp, #0x70]
000000000001b768	ldp	x22, x21, [sp, #0x60]
000000000001b76c	ldp	x24, x23, [sp, #0x50]
000000000001b770	ldp	x26, x25, [sp, #0x40]
000000000001b774	add	sp, sp, #0x90
000000000001b778	ret
000000000001b77c	bl	_ThrowIllegalArgumentException
_kfun:kotlin.text.StringBuilder#append(kotlin.Char){}kotlin.text.StringBuilder:
000000000001b780	sub	sp, sp, #0x70
000000000001b784	stp	x26, x25, [sp, #0x20]
000000000001b788	stp	x24, x23, [sp, #0x30]
000000000001b78c	stp	x22, x21, [sp, #0x40]
000000000001b790	stp	x20, x19, [sp, #0x50]
000000000001b794	stp	x29, x30, [sp, #0x60]
000000000001b798	add	x29, sp, #0x60
000000000001b79c	mov	x20, x2
000000000001b7a0	mov	x21, x1
000000000001b7a4	mov	x19, x0
000000000001b7a8	movi.16b	v0, #0x0
000000000001b7ac	stp	q0, q0, [sp]
000000000001b7b0	adrp	x0, 95 ; 0x7a000
000000000001b7b4	add	x0, x0, #0x2c0
000000000001b7b8	ldr	x8, [x0]
000000000001b7bc	blr	x8
000000000001b7c0	ldr	x23, [x0]
000000000001b7c4	ldr	x8, [x23, #0x110]
000000000001b7c8	mov	x9, sp
000000000001b7cc	str	x9, [x23, #0x110]
000000000001b7d0	mov	x9, #0x400000000
000000000001b7d4	stp	x8, x9, [sp, #0x8]
000000000001b7d8	adr	x8, #0x78ab1
000000000001b7dc	nop
000000000001b7e0	ldarb	w8, [x8]
000000000001b7e4	tbz	w8, #0x0, 0x1b7ec
000000000001b7e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b7ec	ldr	w8, [x19, #0x10]
000000000001b7f0	add	w1, w8, #0x1
000000000001b7f4	mov	x0, x19
000000000001b7f8	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001b7fc	ldr	x24, [x19, #0x8]
000000000001b800	str	x24, [sp, #0x18]
000000000001b804	ldrsw	x25, [x19, #0x10]
000000000001b808	add	w22, w25, #0x1
000000000001b80c	mov	x0, x19
000000000001b810	mov	x1, x22
000000000001b814	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001b818	str	w22, [x19, #0x10]
000000000001b81c	ldr	w8, [x24, #0x8]
000000000001b820	cmp	w8, w25
000000000001b824	b.ls	0x1b860
000000000001b828	ldr	xzr, [x24]
000000000001b82c	add	x8, x24, x25, lsl #1
000000000001b830	strh	w21, [x8, #0x10]
000000000001b834	str	x19, [x20]
000000000001b838	ldr	x8, [sp, #0x8]
000000000001b83c	str	x8, [x23, #0x110]
000000000001b840	mov	x0, x19
000000000001b844	ldp	x29, x30, [sp, #0x60]
000000000001b848	ldp	x20, x19, [sp, #0x50]
000000000001b84c	ldp	x22, x21, [sp, #0x40]
000000000001b850	ldp	x24, x23, [sp, #0x30]
000000000001b854	ldp	x26, x25, [sp, #0x20]
000000000001b858	add	sp, sp, #0x70
000000000001b85c	ret
000000000001b860	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.text.StringBuilder#append(kotlin.CharSequence?){}kotlin.text.StringBuilder:
000000000001b864	stp	x22, x21, [sp, #-0x30]!
000000000001b868	stp	x20, x19, [sp, #0x10]
000000000001b86c	stp	x29, x30, [sp, #0x20]
000000000001b870	add	x29, sp, #0x20
000000000001b874	mov	x19, x2
000000000001b878	mov	x21, x1
000000000001b87c	mov	x20, x0
000000000001b880	adr	x8, #0x78a09
000000000001b884	nop
000000000001b888	ldarb	w8, [x8]
000000000001b88c	tbz	w8, #0x0, 0x1b894
000000000001b890	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b894	adr	x8, #0x5270c
000000000001b898	nop
000000000001b89c	cmp	x21, #0x0
000000000001b8a0	csel	x21, x8, x21, eq
000000000001b8a4	ldr	x8, [x21]
000000000001b8a8	and	x8, x8, #0xfffffffffffffffc
000000000001b8ac	ldr	x8, [x8]
000000000001b8b0	ldr	w9, [x8, #0x3c]
000000000001b8b4	ldr	x8, [x8, #0x40]
000000000001b8b8	tbnz	w9, #0x1f, 0x1b8c8
000000000001b8bc	mov	w10, #0x19
000000000001b8c0	and	x9, x9, x10
000000000001b8c4	b	0x1b94c
000000000001b8c8	neg	w10, w9
000000000001b8cc	mvn	w9, w9
000000000001b8d0	cmp	w10, #0x9
000000000001b8d4	b.ge	0x1b90c
000000000001b8d8	cmp	w10, #0x2
000000000001b8dc	b.lt	0x1b940
000000000001b8e0	mov	x10, #0x0
000000000001b8e4	mov	x11, x8
000000000001b8e8	ldr	w12, [x11]
000000000001b8ec	cmp	w12, #0x18
000000000001b8f0	b.gt	0x1b948
000000000001b8f4	add	x10, x10, #0x1
000000000001b8f8	add	x11, x11, #0x10
000000000001b8fc	cmp	x9, x10
000000000001b900	b.ne	0x1b8e8
000000000001b904	mov	x10, x9
000000000001b908	b	0x1b948
000000000001b90c	mov	w10, #0x0
000000000001b910	add	w11, w9, w10
000000000001b914	cmp	w11, #0x0
000000000001b918	cinc	w11, w11, lt
000000000001b91c	asr	w11, w11, #1
000000000001b920	sbfiz	x12, x11, #4, #32
000000000001b924	ldr	w12, [x8, x12]
000000000001b928	cmp	w12, #0x19
000000000001b92c	csinc	w10, w10, w11, ge
000000000001b930	csel	w9, w9, w11, lt
000000000001b934	cmp	w10, w9
000000000001b938	b.lt	0x1b910
000000000001b93c	b	0x1b948
000000000001b940	mov	w10, #0x0
000000000001b944	b	0x1b948
000000000001b948	sxtw	x9, w10
000000000001b94c	add	x8, x8, x9, lsl #4
000000000001b950	ldr	x8, [x8, #0x8]
000000000001b954	ldr	x8, [x8]
000000000001b958	mov	x0, x21
000000000001b95c	blr	x8
000000000001b960	mov	x3, x0
000000000001b964	mov	x0, x20
000000000001b968	mov	x1, x21
000000000001b96c	mov	w2, #0x0
000000000001b970	mov	x4, x19
000000000001b974	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.CharSequence?;kotlin.Int;kotlin.Int){}kotlin.text.StringBuilder"
000000000001b978	str	x20, [x19]
000000000001b97c	ldp	x29, x30, [sp, #0x20]
000000000001b980	ldp	x20, x19, [sp, #0x10]
000000000001b984	ldp	x22, x21, [sp], #0x30
000000000001b988	ret
_kfun:kotlin.text.StringBuilder#append(kotlin.CharSequence?;kotlin.Int;kotlin.Int){}kotlin.text.StringBuilder:
000000000001b98c	sub	sp, sp, #0xa0
000000000001b990	stp	x28, x27, [sp, #0x40]
000000000001b994	stp	x26, x25, [sp, #0x50]
000000000001b998	stp	x24, x23, [sp, #0x60]
000000000001b99c	stp	x22, x21, [sp, #0x70]
000000000001b9a0	stp	x20, x19, [sp, #0x80]
000000000001b9a4	stp	x29, x30, [sp, #0x90]
000000000001b9a8	add	x29, sp, #0x90
000000000001b9ac	mov	x19, x4
000000000001b9b0	mov	x24, x3
000000000001b9b4	mov	x21, x2
000000000001b9b8	mov	x22, x1
000000000001b9bc	mov	x20, x0
000000000001b9c0	adr	x26, #0x788c9
000000000001b9c4	nop
000000000001b9c8	ldarb	w8, [x26]
000000000001b9cc	tbz	w8, #0x0, 0x1b9d4
000000000001b9d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b9d4	adr	x8, #0x525cc
000000000001b9d8	nop
000000000001b9dc	cmp	x22, #0x0
000000000001b9e0	csel	x23, x8, x22, eq
000000000001b9e4	movi.16b	v0, #0x0
000000000001b9e8	stp	q0, q0, [sp, #0x10]
000000000001b9ec	str	xzr, [sp, #0x30]
000000000001b9f0	adrp	x0, 95 ; 0x7a000
000000000001b9f4	add	x0, x0, #0x2c0
000000000001b9f8	ldr	x25, [x0]
000000000001b9fc	blr	x25
000000000001ba00	ldr	x8, [x0]
000000000001ba04	ldr	x9, [x8, #0x110]
000000000001ba08	add	x10, sp, #0x10
000000000001ba0c	str	x10, [x8, #0x110]
000000000001ba10	mov	x8, #0x500000000
000000000001ba14	stp	x9, x8, [sp, #0x18]
000000000001ba18	ldr	x8, [x23]
000000000001ba1c	and	x8, x8, #0xfffffffffffffffc
000000000001ba20	ldr	x8, [x8]
000000000001ba24	ldr	w9, [x8, #0x3c]
000000000001ba28	ldr	x8, [x8, #0x40]
000000000001ba2c	str	x19, [sp, #0x8]
000000000001ba30	tbnz	w9, #0x1f, 0x1ba40
000000000001ba34	mov	w10, #0x19
000000000001ba38	and	x9, x9, x10
000000000001ba3c	b	0x1bac4
000000000001ba40	neg	w10, w9
000000000001ba44	mvn	w9, w9
000000000001ba48	cmp	w10, #0x9
000000000001ba4c	b.ge	0x1ba84
000000000001ba50	cmp	w10, #0x2
000000000001ba54	b.lt	0x1bab8
000000000001ba58	mov	x10, #0x0
000000000001ba5c	mov	x11, x8
000000000001ba60	ldr	w12, [x11]
000000000001ba64	cmp	w12, #0x18
000000000001ba68	b.gt	0x1bac0
000000000001ba6c	add	x10, x10, #0x1
000000000001ba70	add	x11, x11, #0x10
000000000001ba74	cmp	x9, x10
000000000001ba78	b.ne	0x1ba60
000000000001ba7c	mov	x10, x9
000000000001ba80	b	0x1bac0
000000000001ba84	mov	w10, #0x0
000000000001ba88	add	w11, w9, w10
000000000001ba8c	cmp	w11, #0x0
000000000001ba90	cinc	w11, w11, lt
000000000001ba94	asr	w11, w11, #1
000000000001ba98	sbfiz	x12, x11, #4, #32
000000000001ba9c	ldr	w12, [x8, x12]
000000000001baa0	cmp	w12, #0x19
000000000001baa4	csinc	w10, w10, w11, ge
000000000001baa8	csel	w9, w9, w11, lt
000000000001baac	cmp	w10, w9
000000000001bab0	b.lt	0x1ba88
000000000001bab4	b	0x1bac0
000000000001bab8	mov	w10, #0x0
000000000001babc	b	0x1bac0
000000000001bac0	sxtw	x9, w10
000000000001bac4	add	x8, x8, x9, lsl #4
000000000001bac8	ldr	x8, [x8, #0x8]
000000000001bacc	ldr	x8, [x8]
000000000001bad0	mov	x0, x23
000000000001bad4	blr	x8
000000000001bad8	mov	x2, x0
000000000001badc	mov	x0, x21
000000000001bae0	mov	x1, x24
000000000001bae4	bl	"_kfun:kotlin.text#checkBoundsIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
000000000001bae8	sub	w19, w24, w21
000000000001baec	ldr	w8, [x20, #0x10]
000000000001baf0	add	w1, w8, w19
000000000001baf4	mov	x0, x20
000000000001baf8	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001bafc	ldr	x8, [x23]
000000000001bb00	and	x8, x8, #0xfffffffffffffffc
000000000001bb04	ldr	x8, [x8]
000000000001bb08	ldr	w8, [x8, #0x5c]
000000000001bb0c	cmp	w8, #0x75
000000000001bb10	b.ne	0x1bb50
000000000001bb14	ldrsw	x22, [x20, #0x10]
000000000001bb18	ldr	x8, [x20, #0x8]
000000000001bb1c	str	x8, [sp, #0x28]
000000000001bb20	add	x8, x8, x22, lsl #1
000000000001bb24	add	x0, x8, #0x10
000000000001bb28	add	x8, x23, w21, sxtw #1
000000000001bb2c	add	x1, x8, #0x10
000000000001bb30	sbfiz	x2, x19, #1, #32
000000000001bb34	bl	0x554ac ; symbol stub for: _memcpy
000000000001bb38	add	w21, w22, w19
000000000001bb3c	mov	x0, x20
000000000001bb40	mov	x1, x21
000000000001bb44	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001bb48	str	w21, [x20, #0x10]
000000000001bb4c	b	0x1bc70
000000000001bb50	cmp	w24, w21
000000000001bb54	csel	w27, w24, w21, gt
000000000001bb58	mov	w28, #0x19
000000000001bb5c	cmp	w21, w27
000000000001bb60	b.eq	0x1bc70
000000000001bb64	ldarb	w8, [x26]
000000000001bb68	tbz	w8, #0x0, 0x1bb70
000000000001bb6c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bb70	ldr	x22, [x20, #0x8]
000000000001bb74	str	x22, [sp, #0x30]
000000000001bb78	ldrsw	x19, [x20, #0x10]
000000000001bb7c	add	w24, w19, #0x1
000000000001bb80	mov	x0, x20
000000000001bb84	mov	x1, x24
000000000001bb88	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001bb8c	str	w24, [x20, #0x10]
000000000001bb90	ldr	x8, [x23]
000000000001bb94	and	x8, x8, #0xfffffffffffffffc
000000000001bb98	ldr	x8, [x8]
000000000001bb9c	ldr	w9, [x8, #0x3c]
000000000001bba0	ldr	x8, [x8, #0x40]
000000000001bba4	tbnz	w9, #0x1f, 0x1bbb0
000000000001bba8	and	x9, x9, x28
000000000001bbac	b	0x1bc34
000000000001bbb0	neg	w10, w9
000000000001bbb4	mvn	w9, w9
000000000001bbb8	cmp	w10, #0x9
000000000001bbbc	b.ge	0x1bbf4
000000000001bbc0	cmp	w10, #0x2
000000000001bbc4	b.lt	0x1bc28
000000000001bbc8	mov	x10, #0x0
000000000001bbcc	mov	x11, x8
000000000001bbd0	ldr	w12, [x11]
000000000001bbd4	cmp	w12, #0x18
000000000001bbd8	b.gt	0x1bc30
000000000001bbdc	add	x10, x10, #0x1
000000000001bbe0	add	x11, x11, #0x10
000000000001bbe4	cmp	x9, x10
000000000001bbe8	b.ne	0x1bbd0
000000000001bbec	mov	x10, x9
000000000001bbf0	b	0x1bc30
000000000001bbf4	mov	w10, #0x0
000000000001bbf8	add	w11, w9, w10
000000000001bbfc	cmp	w11, #0x0
000000000001bc00	cinc	w11, w11, lt
000000000001bc04	asr	w11, w11, #1
000000000001bc08	sbfiz	x12, x11, #4, #32
000000000001bc0c	ldr	w12, [x8, x12]
000000000001bc10	cmp	w12, #0x19
000000000001bc14	csinc	w10, w10, w11, ge
000000000001bc18	csel	w9, w9, w11, lt
000000000001bc1c	cmp	w10, w9
000000000001bc20	b.lt	0x1bbf8
000000000001bc24	b	0x1bc30
000000000001bc28	mov	w10, #0x0
000000000001bc2c	b	0x1bc30
000000000001bc30	sxtw	x9, w10
000000000001bc34	add	x8, x8, x9, lsl #4
000000000001bc38	ldr	x8, [x8, #0x8]
000000000001bc3c	ldr	x8, [x8, #0x8]
000000000001bc40	mov	x0, x23
000000000001bc44	mov	x1, x21
000000000001bc48	blr	x8
000000000001bc4c	ldr	w8, [x22, #0x8]
000000000001bc50	cmp	w8, w19
000000000001bc54	b.ls	0x1bcb8
000000000001bc58	add	w21, w21, #0x1
000000000001bc5c	ldr	xzr, [x22]
000000000001bc60	add	x8, x22, x19, lsl #1
000000000001bc64	strh	w0, [x8, #0x10]
000000000001bc68	cmp	w21, w27
000000000001bc6c	b.ne	0x1bb64
000000000001bc70	ldr	x10, [sp, #0x8]
000000000001bc74	str	x20, [x10]
000000000001bc78	adrp	x0, 95 ; 0x7a000
000000000001bc7c	add	x0, x0, #0x2c0
000000000001bc80	blr	x25
000000000001bc84	ldr	x8, [x0]
000000000001bc88	ldr	x9, [sp, #0x18]
000000000001bc8c	str	x9, [x8, #0x110]
000000000001bc90	str	x20, [x10]
000000000001bc94	mov	x0, x20
000000000001bc98	ldp	x29, x30, [sp, #0x90]
000000000001bc9c	ldp	x20, x19, [sp, #0x80]
000000000001bca0	ldp	x22, x21, [sp, #0x70]
000000000001bca4	ldp	x24, x23, [sp, #0x60]
000000000001bca8	ldp	x26, x25, [sp, #0x50]
000000000001bcac	ldp	x28, x27, [sp, #0x40]
000000000001bcb0	add	sp, sp, #0xa0
000000000001bcb4	ret
000000000001bcb8	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder:
000000000001bcbc	sub	sp, sp, #0x90
000000000001bcc0	stp	x26, x25, [sp, #0x40]
000000000001bcc4	stp	x24, x23, [sp, #0x50]
000000000001bcc8	stp	x22, x21, [sp, #0x60]
000000000001bccc	stp	x20, x19, [sp, #0x70]
000000000001bcd0	stp	x29, x30, [sp, #0x80]
000000000001bcd4	add	x29, sp, #0x80
000000000001bcd8	mov	x20, x2
000000000001bcdc	mov	x21, x1
000000000001bce0	mov	x19, x0
000000000001bce4	movi.16b	v0, #0x0
000000000001bce8	stp	q0, q0, [sp, #0x10]
000000000001bcec	adrp	x0, 95 ; 0x7a000
000000000001bcf0	add	x0, x0, #0x2c0
000000000001bcf4	ldr	x8, [x0]
000000000001bcf8	blr	x8
000000000001bcfc	ldr	x22, [x0]
000000000001bd00	ldr	x8, [x22, #0x110]
000000000001bd04	add	x9, sp, #0x10
000000000001bd08	str	x9, [x22, #0x110]
000000000001bd0c	mov	x9, #0x400000000
000000000001bd10	stp	x8, x9, [sp, #0x18]
000000000001bd14	adr	x8, #0x78575
000000000001bd18	nop
000000000001bd1c	ldarb	w8, [x8]
000000000001bd20	tbz	w8, #0x0, 0x1bd28
000000000001bd24	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bd28	ldr	w8, [x19, #0x10]
000000000001bd2c	add	w1, w8, #0xb
000000000001bd30	mov	x0, x19
000000000001bd34	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001bd38	ldrsw	x23, [x19, #0x10]
000000000001bd3c	ldr	x25, [x19, #0x8]
000000000001bd40	str	x25, [sp, #0x28]
000000000001bd44	add	x24, sp, #0x34
000000000001bd48	str	x21, [sp]
000000000001bd4c	adr	x2, #0x42f37 ; literal pool for: "%d"
000000000001bd50	nop
000000000001bd54	add	x0, sp, #0x34
000000000001bd58	mov	w1, #0xc
000000000001bd5c	bl	__ZN5konan8snprintfEPcmPKcz
000000000001bd60	ldrb	w8, [sp, #0x34]
000000000001bd64	cbz	w8, 0x1bd84
000000000001bd68	add	x24, sp, #0x34
000000000001bd6c	add	x9, x25, x23, lsl #1
000000000001bd70	add	x9, x9, #0x10
000000000001bd74	sxtb	w8, w8
000000000001bd78	strh	w8, [x9], #0x2
000000000001bd7c	ldrb	w8, [x24, #0x1]!
000000000001bd80	cbnz	w8, 0x1bd74
000000000001bd84	add	x8, sp, #0x34
000000000001bd88	sub	w8, w24, w8
000000000001bd8c	add	w21, w23, w8
000000000001bd90	mov	x0, x19
000000000001bd94	mov	x1, x21
000000000001bd98	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001bd9c	str	w21, [x19, #0x10]
000000000001bda0	str	x19, [x20]
000000000001bda4	ldr	x8, [sp, #0x18]
000000000001bda8	str	x8, [x22, #0x110]
000000000001bdac	mov	x0, x19
000000000001bdb0	ldp	x29, x30, [sp, #0x80]
000000000001bdb4	ldp	x20, x19, [sp, #0x70]
000000000001bdb8	ldp	x22, x21, [sp, #0x60]
000000000001bdbc	ldp	x24, x23, [sp, #0x50]
000000000001bdc0	ldp	x26, x25, [sp, #0x40]
000000000001bdc4	add	sp, sp, #0x90
000000000001bdc8	ret
_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder:
000000000001bdcc	sub	sp, sp, #0x60
000000000001bdd0	stp	x24, x23, [sp, #0x20]
000000000001bdd4	stp	x22, x21, [sp, #0x30]
000000000001bdd8	stp	x20, x19, [sp, #0x40]
000000000001bddc	stp	x29, x30, [sp, #0x50]
000000000001bde0	add	x29, sp, #0x50
000000000001bde4	mov	x20, x2
000000000001bde8	mov	x21, x1
000000000001bdec	mov	x19, x0
000000000001bdf0	movi.16b	v0, #0x0
000000000001bdf4	stp	q0, q0, [sp]
000000000001bdf8	adrp	x0, 95 ; 0x7a000
000000000001bdfc	add	x0, x0, #0x2c0
000000000001be00	ldr	x8, [x0]
000000000001be04	blr	x8
000000000001be08	ldr	x22, [x0]
000000000001be0c	ldr	x8, [x22, #0x110]
000000000001be10	mov	x9, sp
000000000001be14	str	x9, [x22, #0x110]
000000000001be18	mov	x9, #0x400000000
000000000001be1c	stp	x8, x9, [sp, #0x8]
000000000001be20	adr	x8, #0x78469
000000000001be24	nop
000000000001be28	ldarb	w8, [x8]
000000000001be2c	tbz	w8, #0x0, 0x1be34
000000000001be30	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001be34	adr	x8, #0x5216c
000000000001be38	nop
000000000001be3c	cmp	x21, #0x0
000000000001be40	csel	x21, x8, x21, eq
000000000001be44	ldr	w8, [x21, #0x8]
000000000001be48	ldr	w9, [x19, #0x10]
000000000001be4c	add	w1, w9, w8
000000000001be50	mov	x0, x19
000000000001be54	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001be58	ldrsw	x23, [x19, #0x10]
000000000001be5c	ldr	x8, [x19, #0x8]
000000000001be60	str	x8, [sp, #0x18]
000000000001be64	ldrsw	x24, [x21, #0x8]
000000000001be68	add	x8, x8, x23, lsl #1
000000000001be6c	add	x0, x8, #0x10
000000000001be70	add	x1, x21, #0x10
000000000001be74	lsl	x2, x24, #1
000000000001be78	bl	0x554ac ; symbol stub for: _memcpy
000000000001be7c	add	w21, w23, w24
000000000001be80	mov	x0, x19
000000000001be84	mov	x1, x21
000000000001be88	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001be8c	str	w21, [x19, #0x10]
000000000001be90	str	x19, [x20]
000000000001be94	ldr	x8, [sp, #0x8]
000000000001be98	str	x8, [x22, #0x110]
000000000001be9c	mov	x0, x19
000000000001bea0	ldp	x29, x30, [sp, #0x50]
000000000001bea4	ldp	x20, x19, [sp, #0x40]
000000000001bea8	ldp	x22, x21, [sp, #0x30]
000000000001beac	ldp	x24, x23, [sp, #0x20]
000000000001beb0	add	sp, sp, #0x60
000000000001beb4	ret
_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}:
000000000001beb8	sub	sp, sp, #0x70
000000000001bebc	stp	x22, x21, [sp, #0x40]
000000000001bec0	stp	x20, x19, [sp, #0x50]
000000000001bec4	stp	x29, x30, [sp, #0x60]
000000000001bec8	add	x29, sp, #0x60
000000000001becc	mov	x20, x1
000000000001bed0	mov	x19, x0
000000000001bed4	movi.16b	v0, #0x0
000000000001bed8	stp	q0, q0, [sp]
000000000001bedc	str	xzr, [sp, #0x30]
000000000001bee0	str	q0, [sp, #0x20]
000000000001bee4	mov	x22, sp
000000000001bee8	adrp	x0, 95 ; 0x7a000
000000000001beec	add	x0, x0, #0x2c0
000000000001bef0	ldr	x8, [x0]
000000000001bef4	blr	x8
000000000001bef8	ldr	x21, [x0]
000000000001befc	ldr	x8, [x21, #0x110]
000000000001bf00	str	x22, [x21, #0x110]
000000000001bf04	mov	x9, #0x700000000
000000000001bf08	stp	x8, x9, [sp, #0x8]
000000000001bf0c	adr	x8, #0x7837d
000000000001bf10	nop
000000000001bf14	ldarb	w8, [x8]
000000000001bf18	tbz	w8, #0x0, 0x1bf20
000000000001bf1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bf20	ldr	x8, [x19, #0x8]
000000000001bf24	str	x8, [sp, #0x18]
000000000001bf28	ldr	w8, [x8, #0x8]
000000000001bf2c	cmp	w8, w20
000000000001bf30	b.ge	0x1bf60
000000000001bf34	add	x2, x22, #0x30
000000000001bf38	ldr	x0, [x19, #0x8]
000000000001bf3c	ldr	w8, [x0, #0x8]
000000000001bf40	lsl	w8, w8, #1
000000000001bf44	add	w8, w8, #0x2
000000000001bf48	cmp	w8, w20
000000000001bf4c	csel	w1, w20, w8, lt
000000000001bf50	stp	x0, x0, [sp, #0x20]
000000000001bf54	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.CharArray(kotlin.Int;kotlin.Int){}kotlin.CharArray"
000000000001bf58	str	x0, [sp, #0x30]
000000000001bf5c	str	x0, [x19, #0x8]
000000000001bf60	ldr	x8, [sp, #0x8]
000000000001bf64	str	x8, [x21, #0x110]
000000000001bf68	ldp	x29, x30, [sp, #0x60]
000000000001bf6c	ldp	x20, x19, [sp, #0x50]
000000000001bf70	ldp	x22, x21, [sp, #0x40]
000000000001bf74	add	sp, sp, #0x70
000000000001bf78	ret
_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String:
000000000001bf7c	sub	sp, sp, #0x80
000000000001bf80	stp	x24, x23, [sp, #0x40]
000000000001bf84	stp	x22, x21, [sp, #0x50]
000000000001bf88	stp	x20, x19, [sp, #0x60]
000000000001bf8c	stp	x29, x30, [sp, #0x70]
000000000001bf90	add	x29, sp, #0x70
000000000001bf94	mov	x19, x1
000000000001bf98	mov	x20, x0
000000000001bf9c	movi.16b	v0, #0x0
000000000001bfa0	stp	q0, q0, [sp]
000000000001bfa4	adrp	x0, 95 ; 0x7a000
000000000001bfa8	add	x0, x0, #0x2c0
000000000001bfac	ldr	x8, [x0]
000000000001bfb0	blr	x8
000000000001bfb4	ldr	x21, [x0]
000000000001bfb8	ldr	x8, [x21, #0x110]
000000000001bfbc	mov	x9, sp
000000000001bfc0	str	x9, [x21, #0x110]
000000000001bfc4	mov	x9, #0x400000000
000000000001bfc8	stp	x8, x9, [sp, #0x8]
000000000001bfcc	adr	x8, #0x782bd
000000000001bfd0	nop
000000000001bfd4	ldarb	w8, [x8]
000000000001bfd8	tbz	w8, #0x0, 0x1bfe0
000000000001bfdc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bfe0	ldr	x22, [x20, #0x8]
000000000001bfe4	str	x22, [sp, #0x18]
000000000001bfe8	ldr	w23, [x20, #0x10]
000000000001bfec	cbz	w23, 0x1c048
000000000001bff0	tbnz	w23, #0x1f, 0x1c08c
000000000001bff4	mov	x8, x23
000000000001bff8	sxtw	x24, w8
000000000001bffc	ldr	x8, [x21, #0x118]
000000000001c000	lsl	x9, x23, #1
000000000001c004	add	x9, x9, #0x1f
000000000001c008	and	x1, x9, #0x3fffffff8
000000000001c00c	add	x0, x8, #0x70
000000000001c010	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001c014	mov	x20, x0
000000000001c018	adr	x8, #0x45ec8
000000000001c01c	nop
000000000001c020	stp	x8, xzr, [x20, #0x10]!
000000000001c024	stur	xzr, [x20, #-0x8]
000000000001c028	str	w23, [x20, #0x8]
000000000001c02c	str	x20, [x19]
000000000001c030	add	x0, x20, #0x10
000000000001c034	add	x1, x22, #0x10
000000000001c038	lsl	x2, x24, #1
000000000001c03c	bl	0x554ac ; symbol stub for: _memcpy
000000000001c040	str	x20, [x19]
000000000001c044	b	0x1c064
000000000001c048	ldr	x8, [x21, #0x110]
000000000001c04c	add	x9, sp, #0x28
000000000001c050	str	x9, [x21, #0x110]
000000000001c054	adr	x20, #0x51e8c
000000000001c058	nop
000000000001c05c	str	x20, [x19]
000000000001c060	str	x8, [x21, #0x110]
000000000001c064	str	x20, [x19]
000000000001c068	ldr	x8, [sp, #0x8]
000000000001c06c	str	x8, [x21, #0x110]
000000000001c070	mov	x0, x20
000000000001c074	ldp	x29, x30, [sp, #0x70]
000000000001c078	ldp	x20, x19, [sp, #0x60]
000000000001c07c	ldp	x22, x21, [sp, #0x50]
000000000001c080	ldp	x24, x23, [sp, #0x40]
000000000001c084	add	sp, sp, #0x80
000000000001c088	ret
000000000001c08c	bl	_ThrowIllegalArgumentException
_kfun:kotlin.collections.AbstractCollection#contains(1:0){}kotlin.Boolean:
000000000001c090	sub	sp, sp, #0x70
000000000001c094	stp	x24, x23, [sp, #0x30]
000000000001c098	stp	x22, x21, [sp, #0x40]
000000000001c09c	stp	x20, x19, [sp, #0x50]
000000000001c0a0	stp	x29, x30, [sp, #0x60]
000000000001c0a4	add	x29, sp, #0x60
000000000001c0a8	mov	x19, x1
000000000001c0ac	mov	x21, x0
000000000001c0b0	movi.16b	v0, #0x0
000000000001c0b4	stp	q0, q0, [sp]
000000000001c0b8	str	xzr, [sp, #0x20]
000000000001c0bc	mov	x24, sp
000000000001c0c0	adrp	x0, 94 ; 0x7a000
000000000001c0c4	add	x0, x0, #0x2c0
000000000001c0c8	ldr	x8, [x0]
000000000001c0cc	blr	x8
000000000001c0d0	ldr	x22, [x0]
000000000001c0d4	ldr	x8, [x22, #0x110]
000000000001c0d8	str	x24, [x22, #0x110]
000000000001c0dc	mov	x9, #0x500000000
000000000001c0e0	stp	x8, x9, [sp, #0x8]
000000000001c0e4	adr	x23, #0x781a5
000000000001c0e8	nop
000000000001c0ec	ldarb	w8, [x23]
000000000001c0f0	tbz	w8, #0x0, 0x1c0f8
000000000001c0f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c0f8	cbz	x21, 0x1c2e0
000000000001c0fc	ldr	x8, [x21]
000000000001c100	and	x8, x8, #0xfffffffffffffffc
000000000001c104	ldr	x8, [x8]
000000000001c108	ldr	w9, [x8, #0x3c]
000000000001c10c	ldr	x8, [x8, #0x40]
000000000001c110	tbnz	w9, #0x1f, 0x1c130
000000000001c114	mov	w10, #0x12
000000000001c118	and	x9, x9, x10
000000000001c11c	lsl	x9, x9, #4
000000000001c120	ldr	w8, [x8, x9]
000000000001c124	cmp	w8, #0x12
000000000001c128	b.eq	0x1c200
000000000001c12c	b	0x1c2e0
000000000001c130	neg	w10, w9
000000000001c134	mvn	w9, w9
000000000001c138	cmp	w10, #0x9
000000000001c13c	b.ge	0x1c188
000000000001c140	cmp	w10, #0x2
000000000001c144	b.lt	0x1c1d0
000000000001c148	mov	x10, #0x0
000000000001c14c	mov	x11, x8
000000000001c150	ldr	w12, [x11]
000000000001c154	cmp	w12, #0x11
000000000001c158	b.gt	0x1c1ec
000000000001c15c	add	x10, x10, #0x1
000000000001c160	add	x11, x11, #0x10
000000000001c164	cmp	x9, x10
000000000001c168	b.ne	0x1c150
000000000001c16c	mov	x10, x9
000000000001c170	sxtw	x9, w10
000000000001c174	lsl	x9, x9, #4
000000000001c178	ldr	w8, [x8, x9]
000000000001c17c	cmp	w8, #0x12
000000000001c180	b.eq	0x1c200
000000000001c184	b	0x1c2e0
000000000001c188	mov	w10, #0x0
000000000001c18c	add	w11, w9, w10
000000000001c190	cmp	w11, #0x0
000000000001c194	cinc	w11, w11, lt
000000000001c198	asr	w11, w11, #1
000000000001c19c	sbfiz	x12, x11, #4, #32
000000000001c1a0	ldr	w12, [x8, x12]
000000000001c1a4	cmp	w12, #0x12
000000000001c1a8	csinc	w10, w10, w11, ge
000000000001c1ac	csel	w9, w9, w11, lt
000000000001c1b0	cmp	w10, w9
000000000001c1b4	b.lt	0x1c18c
000000000001c1b8	sxtw	x9, w10
000000000001c1bc	lsl	x9, x9, #4
000000000001c1c0	ldr	w8, [x8, x9]
000000000001c1c4	cmp	w8, #0x12
000000000001c1c8	b.eq	0x1c200
000000000001c1cc	b	0x1c2e0
000000000001c1d0	mov	w10, #0x0
000000000001c1d4	sxtw	x9, w10
000000000001c1d8	lsl	x9, x9, #4
000000000001c1dc	ldr	w8, [x8, x9]
000000000001c1e0	cmp	w8, #0x12
000000000001c1e4	b.eq	0x1c200
000000000001c1e8	b	0x1c2e0
000000000001c1ec	sxtw	x9, w10
000000000001c1f0	lsl	x9, x9, #4
000000000001c1f4	ldr	w8, [x8, x9]
000000000001c1f8	cmp	w8, #0x12
000000000001c1fc	b.ne	0x1c2e0
000000000001c200	ldr	x8, [x21]
000000000001c204	and	x8, x8, #0xfffffffffffffffc
000000000001c208	ldr	x8, [x8]
000000000001c20c	ldr	w9, [x8, #0x3c]
000000000001c210	ldr	x8, [x8, #0x40]
000000000001c214	tbnz	w9, #0x1f, 0x1c23c
000000000001c218	mov	w10, #0x12
000000000001c21c	and	x9, x9, x10
000000000001c220	add	x8, x8, x9, lsl #4
000000000001c224	ldr	x8, [x8, #0x8]
000000000001c228	ldr	x8, [x8, #0x18]
000000000001c22c	mov	x0, x21
000000000001c230	blr	x8
000000000001c234	tbnz	w0, #0x0, 0x1c2d8
000000000001c238	b	0x1c2e0
000000000001c23c	neg	w10, w9
000000000001c240	mvn	w9, w9
000000000001c244	cmp	w10, #0x9
000000000001c248	b.ge	0x1c280
000000000001c24c	cmp	w10, #0x2
000000000001c250	b.lt	0x1c2b4
000000000001c254	mov	x10, #0x0
000000000001c258	mov	x11, x8
000000000001c25c	ldr	w12, [x11]
000000000001c260	cmp	w12, #0x11
000000000001c264	b.gt	0x1c2bc
000000000001c268	add	x10, x10, #0x1
000000000001c26c	add	x11, x11, #0x10
000000000001c270	cmp	x9, x10
000000000001c274	b.ne	0x1c25c
000000000001c278	mov	x10, x9
000000000001c27c	b	0x1c2bc
000000000001c280	mov	w10, #0x0
000000000001c284	add	w11, w9, w10
000000000001c288	cmp	w11, #0x0
000000000001c28c	cinc	w11, w11, lt
000000000001c290	asr	w11, w11, #1
000000000001c294	sbfiz	x12, x11, #4, #32
000000000001c298	ldr	w12, [x8, x12]
000000000001c29c	cmp	w12, #0x12
000000000001c2a0	csinc	w10, w10, w11, ge
000000000001c2a4	csel	w9, w9, w11, lt
000000000001c2a8	cmp	w10, w9
000000000001c2ac	b.lt	0x1c284
000000000001c2b0	b	0x1c2bc
000000000001c2b4	mov	w10, #0x0
000000000001c2b8	b	0x1c2bc
000000000001c2bc	sxtw	x9, w10
000000000001c2c0	add	x8, x8, x9, lsl #4
000000000001c2c4	ldr	x8, [x8, #0x8]
000000000001c2c8	ldr	x8, [x8, #0x18]
000000000001c2cc	mov	x0, x21
000000000001c2d0	blr	x8
000000000001c2d4	tbz	w0, #0x0, 0x1c2e0
000000000001c2d8	mov	w0, #0x0
000000000001c2dc	b	0x1c574
000000000001c2e0	add	x20, x24, #0x20
000000000001c2e4	add	x1, x24, #0x18
000000000001c2e8	ldr	x8, [x21]
000000000001c2ec	and	x8, x8, #0xfffffffffffffffc
000000000001c2f0	ldr	x8, [x8]
000000000001c2f4	ldr	w9, [x8, #0x3c]
000000000001c2f8	ldr	x8, [x8, #0x40]
000000000001c2fc	tbnz	w9, #0x1f, 0x1c30c
000000000001c300	mov	w10, #0x31
000000000001c304	and	x9, x9, x10
000000000001c308	b	0x1c390
000000000001c30c	neg	w10, w9
000000000001c310	mvn	w9, w9
000000000001c314	cmp	w10, #0x9
000000000001c318	b.ge	0x1c350
000000000001c31c	cmp	w10, #0x2
000000000001c320	b.lt	0x1c384
000000000001c324	mov	x10, #0x0
000000000001c328	mov	x11, x8
000000000001c32c	ldr	w12, [x11]
000000000001c330	cmp	w12, #0x30
000000000001c334	b.gt	0x1c38c
000000000001c338	add	x10, x10, #0x1
000000000001c33c	add	x11, x11, #0x10
000000000001c340	cmp	x9, x10
000000000001c344	b.ne	0x1c32c
000000000001c348	mov	x10, x9
000000000001c34c	b	0x1c38c
000000000001c350	mov	w10, #0x0
000000000001c354	add	w11, w9, w10
000000000001c358	cmp	w11, #0x0
000000000001c35c	cinc	w11, w11, lt
000000000001c360	asr	w11, w11, #1
000000000001c364	sbfiz	x12, x11, #4, #32
000000000001c368	ldr	w12, [x8, x12]
000000000001c36c	cmp	w12, #0x31
000000000001c370	csinc	w10, w10, w11, ge
000000000001c374	csel	w9, w9, w11, lt
000000000001c378	cmp	w10, w9
000000000001c37c	b.lt	0x1c354
000000000001c380	b	0x1c38c
000000000001c384	mov	w10, #0x0
000000000001c388	b	0x1c38c
000000000001c38c	sxtw	x9, w10
000000000001c390	add	x8, x8, x9, lsl #4
000000000001c394	ldr	x8, [x8, #0x8]
000000000001c398	ldr	x8, [x8]
000000000001c39c	mov	x0, x21
000000000001c3a0	blr	x8
000000000001c3a4	mov	x21, x0
000000000001c3a8	mov	w24, #0xa0
000000000001c3ac	b	0x1c3b4
000000000001c3b0	cbz	x19, 0x1c570
000000000001c3b4	ldr	x8, [x21]
000000000001c3b8	and	x8, x8, #0xfffffffffffffffc
000000000001c3bc	ldr	x8, [x8]
000000000001c3c0	ldr	w9, [x8, #0x3c]
000000000001c3c4	ldr	x8, [x8, #0x40]
000000000001c3c8	tbnz	w9, #0x1f, 0x1c3ec
000000000001c3cc	and	x9, x9, x24
000000000001c3d0	add	x8, x8, x9, lsl #4
000000000001c3d4	ldr	x8, [x8, #0x8]
000000000001c3d8	ldr	x8, [x8]
000000000001c3dc	mov	x0, x21
000000000001c3e0	blr	x8
000000000001c3e4	tbnz	w0, #0x0, 0x1c488
000000000001c3e8	b	0x1c2d8
000000000001c3ec	neg	w10, w9
000000000001c3f0	mvn	w9, w9
000000000001c3f4	cmp	w10, #0x9
000000000001c3f8	b.ge	0x1c430
000000000001c3fc	cmp	w10, #0x2
000000000001c400	b.lt	0x1c464
000000000001c404	mov	x10, #0x0
000000000001c408	mov	x11, x8
000000000001c40c	ldr	w12, [x11]
000000000001c410	cmp	w12, #0x9f
000000000001c414	b.gt	0x1c46c
000000000001c418	add	x10, x10, #0x1
000000000001c41c	add	x11, x11, #0x10
000000000001c420	cmp	x9, x10
000000000001c424	b.ne	0x1c40c
000000000001c428	mov	x10, x9
000000000001c42c	b	0x1c46c
000000000001c430	mov	w10, #0x0
000000000001c434	add	w11, w9, w10
000000000001c438	cmp	w11, #0x0
000000000001c43c	cinc	w11, w11, lt
000000000001c440	asr	w11, w11, #1
000000000001c444	sbfiz	x12, x11, #4, #32
000000000001c448	ldr	w12, [x8, x12]
000000000001c44c	cmp	w12, #0xa0
000000000001c450	csinc	w10, w10, w11, ge
000000000001c454	csel	w9, w9, w11, lt
000000000001c458	cmp	w10, w9
000000000001c45c	b.lt	0x1c434
000000000001c460	b	0x1c46c
000000000001c464	mov	w10, #0x0
000000000001c468	b	0x1c46c
000000000001c46c	sxtw	x9, w10
000000000001c470	add	x8, x8, x9, lsl #4
000000000001c474	ldr	x8, [x8, #0x8]
000000000001c478	ldr	x8, [x8]
000000000001c47c	mov	x0, x21
000000000001c480	blr	x8
000000000001c484	tbz	w0, #0x0, 0x1c2d8
000000000001c488	ldarb	w8, [x23]
000000000001c48c	tbz	w8, #0x0, 0x1c494
000000000001c490	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c494	ldr	x8, [x21]
000000000001c498	and	x8, x8, #0xfffffffffffffffc
000000000001c49c	ldr	x8, [x8]
000000000001c4a0	ldr	w9, [x8, #0x3c]
000000000001c4a4	ldr	x8, [x8, #0x40]
000000000001c4a8	tbnz	w9, #0x1f, 0x1c4b4
000000000001c4ac	and	x9, x9, x24
000000000001c4b0	b	0x1c538
000000000001c4b4	neg	w10, w9
000000000001c4b8	mvn	w9, w9
000000000001c4bc	cmp	w10, #0x9
000000000001c4c0	b.ge	0x1c4f8
000000000001c4c4	cmp	w10, #0x2
000000000001c4c8	b.lt	0x1c52c
000000000001c4cc	mov	x10, #0x0
000000000001c4d0	mov	x11, x8
000000000001c4d4	ldr	w12, [x11]
000000000001c4d8	cmp	w12, #0x9f
000000000001c4dc	b.gt	0x1c534
000000000001c4e0	add	x10, x10, #0x1
000000000001c4e4	add	x11, x11, #0x10
000000000001c4e8	cmp	x9, x10
000000000001c4ec	b.ne	0x1c4d4
000000000001c4f0	mov	x10, x9
000000000001c4f4	b	0x1c534
000000000001c4f8	mov	w10, #0x0
000000000001c4fc	add	w11, w9, w10
000000000001c500	cmp	w11, #0x0
000000000001c504	cinc	w11, w11, lt
000000000001c508	asr	w11, w11, #1
000000000001c50c	sbfiz	x12, x11, #4, #32
000000000001c510	ldr	w12, [x8, x12]
000000000001c514	cmp	w12, #0xa0
000000000001c518	csinc	w10, w10, w11, ge
000000000001c51c	csel	w9, w9, w11, lt
000000000001c520	cmp	w10, w9
000000000001c524	b.lt	0x1c4fc
000000000001c528	b	0x1c534
000000000001c52c	mov	w10, #0x0
000000000001c530	b	0x1c534
000000000001c534	sxtw	x9, w10
000000000001c538	add	x8, x8, x9, lsl #4
000000000001c53c	ldr	x8, [x8, #0x8]
000000000001c540	ldr	x8, [x8, #0x8]
000000000001c544	mov	x0, x21
000000000001c548	mov	x1, x20
000000000001c54c	blr	x8
000000000001c550	cbz	x0, 0x1c3b0
000000000001c554	ldr	x8, [x0]
000000000001c558	and	x8, x8, #0xfffffffffffffffc
000000000001c55c	ldr	x8, [x8]
000000000001c560	ldr	x8, [x8, #0x70]
000000000001c564	mov	x1, x19
000000000001c568	blr	x8
000000000001c56c	tbz	w0, #0x0, 0x1c3b4
000000000001c570	mov	w0, #0x1
000000000001c574	ldr	x8, [sp, #0x8]
000000000001c578	str	x8, [x22, #0x110]
000000000001c57c	ldp	x29, x30, [sp, #0x60]
000000000001c580	ldp	x20, x19, [sp, #0x50]
000000000001c584	ldp	x22, x21, [sp, #0x40]
000000000001c588	ldp	x24, x23, [sp, #0x30]
000000000001c58c	add	sp, sp, #0x70
000000000001c590	ret
_kfun:kotlin.collections.AbstractCollection#containsAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001c594	sub	sp, sp, #0x70
000000000001c598	stp	x24, x23, [sp, #0x30]
000000000001c59c	stp	x22, x21, [sp, #0x40]
000000000001c5a0	stp	x20, x19, [sp, #0x50]
000000000001c5a4	stp	x29, x30, [sp, #0x60]
000000000001c5a8	add	x29, sp, #0x60
000000000001c5ac	mov	x20, x1
000000000001c5b0	mov	x19, x0
000000000001c5b4	movi.16b	v0, #0x0
000000000001c5b8	stp	q0, q0, [sp]
000000000001c5bc	str	xzr, [sp, #0x20]
000000000001c5c0	mov	x24, sp
000000000001c5c4	adrp	x0, 94 ; 0x7a000
000000000001c5c8	add	x0, x0, #0x2c0
000000000001c5cc	ldr	x8, [x0]
000000000001c5d0	blr	x8
000000000001c5d4	ldr	x22, [x0]
000000000001c5d8	ldr	x8, [x22, #0x110]
000000000001c5dc	str	x24, [x22, #0x110]
000000000001c5e0	mov	x9, #0x500000000
000000000001c5e4	stp	x8, x9, [sp, #0x8]
000000000001c5e8	adr	x23, #0x77ca1
000000000001c5ec	nop
000000000001c5f0	ldarb	w8, [x23]
000000000001c5f4	tbz	w8, #0x0, 0x1c5fc
000000000001c5f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c5fc	cbz	x20, 0x1c7e4
000000000001c600	ldr	x8, [x20]
000000000001c604	and	x8, x8, #0xfffffffffffffffc
000000000001c608	ldr	x8, [x8]
000000000001c60c	ldr	w9, [x8, #0x3c]
000000000001c610	ldr	x8, [x8, #0x40]
000000000001c614	tbnz	w9, #0x1f, 0x1c634
000000000001c618	mov	w10, #0x12
000000000001c61c	and	x9, x9, x10
000000000001c620	lsl	x9, x9, #4
000000000001c624	ldr	w8, [x8, x9]
000000000001c628	cmp	w8, #0x12
000000000001c62c	b.eq	0x1c704
000000000001c630	b	0x1c7e4
000000000001c634	neg	w10, w9
000000000001c638	mvn	w9, w9
000000000001c63c	cmp	w10, #0x9
000000000001c640	b.ge	0x1c68c
000000000001c644	cmp	w10, #0x2
000000000001c648	b.lt	0x1c6d4
000000000001c64c	mov	x10, #0x0
000000000001c650	mov	x11, x8
000000000001c654	ldr	w12, [x11]
000000000001c658	cmp	w12, #0x11
000000000001c65c	b.gt	0x1c6f0
000000000001c660	add	x10, x10, #0x1
000000000001c664	add	x11, x11, #0x10
000000000001c668	cmp	x9, x10
000000000001c66c	b.ne	0x1c654
000000000001c670	mov	x10, x9
000000000001c674	sxtw	x9, w10
000000000001c678	lsl	x9, x9, #4
000000000001c67c	ldr	w8, [x8, x9]
000000000001c680	cmp	w8, #0x12
000000000001c684	b.eq	0x1c704
000000000001c688	b	0x1c7e4
000000000001c68c	mov	w10, #0x0
000000000001c690	add	w11, w9, w10
000000000001c694	cmp	w11, #0x0
000000000001c698	cinc	w11, w11, lt
000000000001c69c	asr	w11, w11, #1
000000000001c6a0	sbfiz	x12, x11, #4, #32
000000000001c6a4	ldr	w12, [x8, x12]
000000000001c6a8	cmp	w12, #0x12
000000000001c6ac	csinc	w10, w10, w11, ge
000000000001c6b0	csel	w9, w9, w11, lt
000000000001c6b4	cmp	w10, w9
000000000001c6b8	b.lt	0x1c690
000000000001c6bc	sxtw	x9, w10
000000000001c6c0	lsl	x9, x9, #4
000000000001c6c4	ldr	w8, [x8, x9]
000000000001c6c8	cmp	w8, #0x12
000000000001c6cc	b.eq	0x1c704
000000000001c6d0	b	0x1c7e4
000000000001c6d4	mov	w10, #0x0
000000000001c6d8	sxtw	x9, w10
000000000001c6dc	lsl	x9, x9, #4
000000000001c6e0	ldr	w8, [x8, x9]
000000000001c6e4	cmp	w8, #0x12
000000000001c6e8	b.eq	0x1c704
000000000001c6ec	b	0x1c7e4
000000000001c6f0	sxtw	x9, w10
000000000001c6f4	lsl	x9, x9, #4
000000000001c6f8	ldr	w8, [x8, x9]
000000000001c6fc	cmp	w8, #0x12
000000000001c700	b.ne	0x1c7e4
000000000001c704	ldr	x8, [x20]
000000000001c708	and	x8, x8, #0xfffffffffffffffc
000000000001c70c	ldr	x8, [x8]
000000000001c710	ldr	w9, [x8, #0x3c]
000000000001c714	ldr	x8, [x8, #0x40]
000000000001c718	tbnz	w9, #0x1f, 0x1c740
000000000001c71c	mov	w10, #0x12
000000000001c720	and	x9, x9, x10
000000000001c724	add	x8, x8, x9, lsl #4
000000000001c728	ldr	x8, [x8, #0x8]
000000000001c72c	ldr	x8, [x8, #0x18]
000000000001c730	mov	x0, x20
000000000001c734	blr	x8
000000000001c738	tbnz	w0, #0x0, 0x1c7dc
000000000001c73c	b	0x1c7e4
000000000001c740	neg	w10, w9
000000000001c744	mvn	w9, w9
000000000001c748	cmp	w10, #0x9
000000000001c74c	b.ge	0x1c784
000000000001c750	cmp	w10, #0x2
000000000001c754	b.lt	0x1c7b8
000000000001c758	mov	x10, #0x0
000000000001c75c	mov	x11, x8
000000000001c760	ldr	w12, [x11]
000000000001c764	cmp	w12, #0x11
000000000001c768	b.gt	0x1c7c0
000000000001c76c	add	x10, x10, #0x1
000000000001c770	add	x11, x11, #0x10
000000000001c774	cmp	x9, x10
000000000001c778	b.ne	0x1c760
000000000001c77c	mov	x10, x9
000000000001c780	b	0x1c7c0
000000000001c784	mov	w10, #0x0
000000000001c788	add	w11, w9, w10
000000000001c78c	cmp	w11, #0x0
000000000001c790	cinc	w11, w11, lt
000000000001c794	asr	w11, w11, #1
000000000001c798	sbfiz	x12, x11, #4, #32
000000000001c79c	ldr	w12, [x8, x12]
000000000001c7a0	cmp	w12, #0x12
000000000001c7a4	csinc	w10, w10, w11, ge
000000000001c7a8	csel	w9, w9, w11, lt
000000000001c7ac	cmp	w10, w9
000000000001c7b0	b.lt	0x1c788
000000000001c7b4	b	0x1c7c0
000000000001c7b8	mov	w10, #0x0
000000000001c7bc	b	0x1c7c0
000000000001c7c0	sxtw	x9, w10
000000000001c7c4	add	x8, x8, x9, lsl #4
000000000001c7c8	ldr	x8, [x8, #0x8]
000000000001c7cc	ldr	x8, [x8, #0x18]
000000000001c7d0	mov	x0, x20
000000000001c7d4	blr	x8
000000000001c7d8	tbz	w0, #0x0, 0x1c7e4
000000000001c7dc	mov	w0, #0x1
000000000001c7e0	b	0x1ca80
000000000001c7e4	add	x21, x24, #0x20
000000000001c7e8	add	x1, x24, #0x18
000000000001c7ec	ldr	x8, [x20]
000000000001c7f0	and	x8, x8, #0xfffffffffffffffc
000000000001c7f4	ldr	x8, [x8]
000000000001c7f8	ldr	w9, [x8, #0x3c]
000000000001c7fc	ldr	x8, [x8, #0x40]
000000000001c800	tbnz	w9, #0x1f, 0x1c810
000000000001c804	mov	w10, #0x31
000000000001c808	and	x9, x9, x10
000000000001c80c	b	0x1c894
000000000001c810	neg	w10, w9
000000000001c814	mvn	w9, w9
000000000001c818	cmp	w10, #0x9
000000000001c81c	b.ge	0x1c854
000000000001c820	cmp	w10, #0x2
000000000001c824	b.lt	0x1c888
000000000001c828	mov	x10, #0x0
000000000001c82c	mov	x11, x8
000000000001c830	ldr	w12, [x11]
000000000001c834	cmp	w12, #0x30
000000000001c838	b.gt	0x1c890
000000000001c83c	add	x10, x10, #0x1
000000000001c840	add	x11, x11, #0x10
000000000001c844	cmp	x9, x10
000000000001c848	b.ne	0x1c830
000000000001c84c	mov	x10, x9
000000000001c850	b	0x1c890
000000000001c854	mov	w10, #0x0
000000000001c858	add	w11, w9, w10
000000000001c85c	cmp	w11, #0x0
000000000001c860	cinc	w11, w11, lt
000000000001c864	asr	w11, w11, #1
000000000001c868	sbfiz	x12, x11, #4, #32
000000000001c86c	ldr	w12, [x8, x12]
000000000001c870	cmp	w12, #0x31
000000000001c874	csinc	w10, w10, w11, ge
000000000001c878	csel	w9, w9, w11, lt
000000000001c87c	cmp	w10, w9
000000000001c880	b.lt	0x1c858
000000000001c884	b	0x1c890
000000000001c888	mov	w10, #0x0
000000000001c88c	b	0x1c890
000000000001c890	sxtw	x9, w10
000000000001c894	add	x8, x8, x9, lsl #4
000000000001c898	ldr	x8, [x8, #0x8]
000000000001c89c	ldr	x8, [x8]
000000000001c8a0	mov	x0, x20
000000000001c8a4	blr	x8
000000000001c8a8	mov	x20, x0
000000000001c8ac	mov	w24, #0xa0
000000000001c8b0	b	0x1c908
000000000001c8b4	ldr	x8, [x20]
000000000001c8b8	and	x8, x8, #0xfffffffffffffffc
000000000001c8bc	ldr	x8, [x8]
000000000001c8c0	ldr	w9, [x8, #0x3c]
000000000001c8c4	ldr	x8, [x8, #0x40]
000000000001c8c8	tbnz	w9, #0x1f, 0x1c984
000000000001c8cc	and	x9, x9, x24
000000000001c8d0	add	x8, x8, x9, lsl #4
000000000001c8d4	ldr	x8, [x8, #0x8]
000000000001c8d8	ldr	x8, [x8, #0x8]
000000000001c8dc	mov	x0, x20
000000000001c8e0	mov	x1, x21
000000000001c8e4	blr	x8
000000000001c8e8	mov	x1, x0
000000000001c8ec	ldr	x8, [x19]
000000000001c8f0	and	x8, x8, #0xfffffffffffffffc
000000000001c8f4	ldr	x8, [x8]
000000000001c8f8	ldr	x8, [x8, #0x90]
000000000001c8fc	mov	x0, x19
000000000001c900	blr	x8
000000000001c904	tbz	w0, #0x0, 0x1ca7c
000000000001c908	ldr	x8, [x20]
000000000001c90c	and	x8, x8, #0xfffffffffffffffc
000000000001c910	ldr	x8, [x8]
000000000001c914	ldr	w9, [x8, #0x3c]
000000000001c918	ldr	x8, [x8, #0x40]
000000000001c91c	tbnz	w9, #0x1f, 0x1c940
000000000001c920	and	x9, x9, x24
000000000001c924	add	x8, x8, x9, lsl #4
000000000001c928	ldr	x8, [x8, #0x8]
000000000001c92c	ldr	x8, [x8]
000000000001c930	mov	x0, x20
000000000001c934	blr	x8
000000000001c938	tbnz	w0, #0x0, 0x1ca64
000000000001c93c	b	0x1c7dc
000000000001c940	neg	w10, w9
000000000001c944	mvn	w9, w9
000000000001c948	cmp	w10, #0x9
000000000001c94c	b.ge	0x1c9cc
000000000001c950	cmp	w10, #0x2
000000000001c954	b.lt	0x1ca34
000000000001c958	mov	x10, #0x0
000000000001c95c	mov	x11, x8
000000000001c960	ldr	w12, [x11]
000000000001c964	cmp	w12, #0x9f
000000000001c968	b.gt	0x1ca48
000000000001c96c	add	x10, x10, #0x1
000000000001c970	add	x11, x11, #0x10
000000000001c974	cmp	x9, x10
000000000001c978	b.ne	0x1c960
000000000001c97c	mov	x10, x9
000000000001c980	b	0x1ca48
000000000001c984	neg	w10, w9
000000000001c988	mvn	w9, w9
000000000001c98c	cmp	w10, #0x9
000000000001c990	b.ge	0x1ca00
000000000001c994	cmp	w10, #0x2
000000000001c998	b.lt	0x1ca3c
000000000001c99c	mov	x10, #0x0
000000000001c9a0	mov	x11, x8
000000000001c9a4	ldr	w12, [x11]
000000000001c9a8	cmp	w12, #0x9f
000000000001c9ac	b.gt	0x1ca74
000000000001c9b0	add	x10, x10, #0x1
000000000001c9b4	add	x11, x11, #0x10
000000000001c9b8	cmp	x9, x10
000000000001c9bc	b.ne	0x1c9a4
000000000001c9c0	mov	x10, x9
000000000001c9c4	sxtw	x9, w10
000000000001c9c8	b	0x1c8d0
000000000001c9cc	mov	w10, #0x0
000000000001c9d0	add	w11, w9, w10
000000000001c9d4	cmp	w11, #0x0
000000000001c9d8	cinc	w11, w11, lt
000000000001c9dc	asr	w11, w11, #1
000000000001c9e0	sbfiz	x12, x11, #4, #32
000000000001c9e4	ldr	w12, [x8, x12]
000000000001c9e8	cmp	w12, #0xa0
000000000001c9ec	csinc	w10, w10, w11, ge
000000000001c9f0	csel	w9, w9, w11, lt
000000000001c9f4	cmp	w10, w9
000000000001c9f8	b.lt	0x1c9d0
000000000001c9fc	b	0x1ca48
000000000001ca00	mov	w10, #0x0
000000000001ca04	add	w11, w9, w10
000000000001ca08	cmp	w11, #0x0
000000000001ca0c	cinc	w11, w11, lt
000000000001ca10	asr	w11, w11, #1
000000000001ca14	sbfiz	x12, x11, #4, #32
000000000001ca18	ldr	w12, [x8, x12]
000000000001ca1c	cmp	w12, #0xa0
000000000001ca20	csinc	w10, w10, w11, ge
000000000001ca24	csel	w9, w9, w11, lt
000000000001ca28	cmp	w10, w9
000000000001ca2c	b.lt	0x1ca04
000000000001ca30	b	0x1ca74
000000000001ca34	mov	w10, #0x0
000000000001ca38	b	0x1ca48
000000000001ca3c	mov	w10, #0x0
000000000001ca40	sxtw	x9, w10
000000000001ca44	b	0x1c8d0
000000000001ca48	sxtw	x9, w10
000000000001ca4c	add	x8, x8, x9, lsl #4
000000000001ca50	ldr	x8, [x8, #0x8]
000000000001ca54	ldr	x8, [x8]
000000000001ca58	mov	x0, x20
000000000001ca5c	blr	x8
000000000001ca60	tbz	w0, #0x0, 0x1c7dc
000000000001ca64	ldarb	w8, [x23]
000000000001ca68	tbz	w8, #0x0, 0x1c8b4
000000000001ca6c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ca70	b	0x1c8b4
000000000001ca74	sxtw	x9, w10
000000000001ca78	b	0x1c8d0
000000000001ca7c	mov	w0, #0x0
000000000001ca80	ldr	x8, [sp, #0x8]
000000000001ca84	str	x8, [x22, #0x110]
000000000001ca88	ldp	x29, x30, [sp, #0x60]
000000000001ca8c	ldp	x20, x19, [sp, #0x50]
000000000001ca90	ldp	x22, x21, [sp, #0x40]
000000000001ca94	ldp	x24, x23, [sp, #0x30]
000000000001ca98	add	sp, sp, #0x70
000000000001ca9c	ret
_kfun:kotlin.collections.AbstractCollection#isEmpty(){}kotlin.Boolean:
000000000001caa0	stp	x20, x19, [sp, #-0x20]!
000000000001caa4	stp	x29, x30, [sp, #0x10]
000000000001caa8	add	x29, sp, #0x10
000000000001caac	mov	x19, x0
000000000001cab0	adr	x8, #0x777d9
000000000001cab4	nop
000000000001cab8	ldarb	w8, [x8]
000000000001cabc	tbz	w8, #0x0, 0x1cac4
000000000001cac0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cac4	ldr	x8, [x19]
000000000001cac8	and	x8, x8, #0xfffffffffffffffc
000000000001cacc	ldr	x8, [x8]
000000000001cad0	ldr	x8, [x8, #0x88]
000000000001cad4	mov	x0, x19
000000000001cad8	blr	x8
000000000001cadc	cmp	w0, #0x0
000000000001cae0	cset	w0, eq
000000000001cae4	ldp	x29, x30, [sp, #0x10]
000000000001cae8	ldp	x20, x19, [sp], #0x20
000000000001caec	ret
_kfun:kotlin.collections.AbstractCollection#toString(){}kotlin.String:
000000000001caf0	sub	sp, sp, #0x50
000000000001caf4	stp	x22, x21, [sp, #0x20]
000000000001caf8	stp	x20, x19, [sp, #0x30]
000000000001cafc	stp	x29, x30, [sp, #0x40]
000000000001cb00	add	x29, sp, #0x40
000000000001cb04	mov	x19, x1
000000000001cb08	mov	x20, x0
000000000001cb0c	movi.16b	v0, #0x0
000000000001cb10	stp	q0, q0, [sp]
000000000001cb14	adrp	x0, 94 ; 0x7a000
000000000001cb18	add	x0, x0, #0x2c0
000000000001cb1c	ldr	x8, [x0]
000000000001cb20	blr	x8
000000000001cb24	ldr	x21, [x0]
000000000001cb28	ldr	x8, [x21, #0x110]
000000000001cb2c	mov	x9, sp
000000000001cb30	str	x9, [x21, #0x110]
000000000001cb34	mov	x9, #0x400000000
000000000001cb38	stp	x8, x9, [sp, #0x8]
000000000001cb3c	adr	x8, #0x7774d
000000000001cb40	nop
000000000001cb44	ldarb	w8, [x8]
000000000001cb48	tbz	w8, #0x0, 0x1cb50
000000000001cb4c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cb50	ldr	x8, [x21, #0x118]
000000000001cb54	add	x0, x8, #0x70
000000000001cb58	mov	w1, #0x18
000000000001cb5c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001cb60	adr	x8, #0x48130
000000000001cb64	nop
000000000001cb68	mov	x3, x0
000000000001cb6c	str	x8, [x3, #0x10]!
000000000001cb70	stur	xzr, [x3, #-0x8]
000000000001cb74	str	x3, [sp, #0x18]
000000000001cb78	str	x20, [x3, #0x8]
000000000001cb7c	adr	x1, #0x51464
000000000001cb80	nop
000000000001cb84	adr	x2, #0x5147c
000000000001cb88	nop
000000000001cb8c	mov	x0, x20
000000000001cb90	mov	x4, x19
000000000001cb94	bl	"_kfun:kotlin.collections#joinToString$default__at__kotlin.collections.Iterable<0:0>(kotlin.CharSequence?;kotlin.CharSequence?;kotlin.CharSequence?;kotlin.Int;kotlin.CharSequence?;kotlin.Function1<0:0,kotlin.CharSequence>?;kotlin.Int){0§<kotlin.Any?>}kotlin.String"
000000000001cb98	str	x0, [x19]
000000000001cb9c	ldr	x8, [sp, #0x8]
000000000001cba0	str	x8, [x21, #0x110]
000000000001cba4	ldp	x29, x30, [sp, #0x40]
000000000001cba8	ldp	x20, x19, [sp, #0x30]
000000000001cbac	ldp	x22, x21, [sp, #0x20]
000000000001cbb0	add	sp, sp, #0x50
000000000001cbb4	ret
_kfun:kotlin.collections.AbstractCollection#toArray(){}kotlin.Array<kotlin.Any?>:
000000000001cbb8	stp	x20, x19, [sp, #-0x20]!
000000000001cbbc	stp	x29, x30, [sp, #0x10]
000000000001cbc0	add	x29, sp, #0x10
000000000001cbc4	mov	x19, x1
000000000001cbc8	mov	x20, x0
000000000001cbcc	adr	x8, #0x776bd
000000000001cbd0	nop
000000000001cbd4	ldarb	w8, [x8]
000000000001cbd8	tbz	w8, #0x0, 0x1cbe0
000000000001cbdc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cbe0	mov	x0, x20
000000000001cbe4	mov	x1, x19
000000000001cbe8	bl	"_kfun:kotlin.collections#copyToArrayImpl(kotlin.collections.Collection<*>){}kotlin.Array<kotlin.Any?>"
000000000001cbec	str	x0, [x19]
000000000001cbf0	ldp	x29, x30, [sp, #0x10]
000000000001cbf4	ldp	x20, x19, [sp], #0x20
000000000001cbf8	ret
_kfun:kotlin.collections.AbstractCollection#toArray(kotlin.Array<0:0>){0§<kotlin.Any?>}kotlin.Array<0:0>:
000000000001cbfc	sub	sp, sp, #0x90
000000000001cc00	stp	x28, x27, [sp, #0x30]
000000000001cc04	stp	x26, x25, [sp, #0x40]
000000000001cc08	stp	x24, x23, [sp, #0x50]
000000000001cc0c	stp	x22, x21, [sp, #0x60]
000000000001cc10	stp	x20, x19, [sp, #0x70]
000000000001cc14	stp	x29, x30, [sp, #0x80]
000000000001cc18	add	x29, sp, #0x80
000000000001cc1c	mov	x19, x2
000000000001cc20	mov	x20, x1
000000000001cc24	mov	x23, x0
000000000001cc28	adr	x26, #0x77661
000000000001cc2c	nop
000000000001cc30	ldarb	w8, [x26]
000000000001cc34	tbz	w8, #0x0, 0x1cc3c
000000000001cc38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cc3c	movi.16b	v0, #0x0
000000000001cc40	stp	q0, q0, [sp]
000000000001cc44	str	xzr, [sp, #0x20]
000000000001cc48	mov	x24, sp
000000000001cc4c	adrp	x21, 94 ; 0x7a000
000000000001cc50	add	x21, x21, #0x2c0
000000000001cc54	ldr	x25, [x21]
000000000001cc58	mov	x0, x21
000000000001cc5c	blr	x25
000000000001cc60	ldr	x8, [x0]
000000000001cc64	ldr	x9, [x8, #0x110]
000000000001cc68	str	x24, [x8, #0x110]
000000000001cc6c	mov	x8, #0x500000000
000000000001cc70	stp	x9, x8, [sp, #0x8]
000000000001cc74	ldr	w22, [x20, #0x8]
000000000001cc78	ldr	x8, [x23]
000000000001cc7c	and	x8, x8, #0xfffffffffffffffc
000000000001cc80	ldr	x8, [x8]
000000000001cc84	ldr	w9, [x8, #0x3c]
000000000001cc88	ldr	x8, [x8, #0x40]
000000000001cc8c	tbnz	w9, #0x1f, 0x1cc9c
000000000001cc90	mov	w10, #0x12
000000000001cc94	and	x9, x9, x10
000000000001cc98	b	0x1cd20
000000000001cc9c	neg	w10, w9
000000000001cca0	mvn	w9, w9
000000000001cca4	cmp	w10, #0x9
000000000001cca8	b.ge	0x1cce0
000000000001ccac	cmp	w10, #0x2
000000000001ccb0	b.lt	0x1cd14
000000000001ccb4	mov	x10, #0x0
000000000001ccb8	mov	x11, x8
000000000001ccbc	ldr	w12, [x11]
000000000001ccc0	cmp	w12, #0x11
000000000001ccc4	b.gt	0x1cd1c
000000000001ccc8	add	x10, x10, #0x1
000000000001cccc	add	x11, x11, #0x10
000000000001ccd0	cmp	x9, x10
000000000001ccd4	b.ne	0x1ccbc
000000000001ccd8	mov	x10, x9
000000000001ccdc	b	0x1cd1c
000000000001cce0	mov	w10, #0x0
000000000001cce4	add	w11, w9, w10
000000000001cce8	cmp	w11, #0x0
000000000001ccec	cinc	w11, w11, lt
000000000001ccf0	asr	w11, w11, #1
000000000001ccf4	sbfiz	x12, x11, #4, #32
000000000001ccf8	ldr	w12, [x8, x12]
000000000001ccfc	cmp	w12, #0x12
000000000001cd00	csinc	w10, w10, w11, ge
000000000001cd04	csel	w9, w9, w11, lt
000000000001cd08	cmp	w10, w9
000000000001cd0c	b.lt	0x1cce4
000000000001cd10	b	0x1cd1c
000000000001cd14	mov	w10, #0x0
000000000001cd18	b	0x1cd1c
000000000001cd1c	sxtw	x9, w10
000000000001cd20	add	x8, x8, x9, lsl #4
000000000001cd24	ldr	x8, [x8, #0x8]
000000000001cd28	ldr	x8, [x8]
000000000001cd2c	mov	x0, x23
000000000001cd30	blr	x8
000000000001cd34	cmp	w22, w0
000000000001cd38	b.ge	0x1cd68
000000000001cd3c	mov	x0, x23
000000000001cd40	mov	x1, x19
000000000001cd44	bl	"_kfun:kotlin.collections#copyToArrayImpl(kotlin.collections.Collection<*>){}kotlin.Array<kotlin.Any?>"
000000000001cd48	mov	x20, x0
000000000001cd4c	ldr	x8, [x0]
000000000001cd50	and	x8, x8, #0xfffffffffffffffc
000000000001cd54	ldr	x8, [x8]
000000000001cd58	ldr	w8, [x8, #0x5c]
000000000001cd5c	cmp	w8, #0x49
000000000001cd60	b.eq	0x1d048
000000000001cd64	b	0x1d08c
000000000001cd68	add	x22, x24, #0x20
000000000001cd6c	add	x1, x24, #0x18
000000000001cd70	ldr	x8, [x23]
000000000001cd74	and	x8, x8, #0xfffffffffffffffc
000000000001cd78	ldr	x8, [x8]
000000000001cd7c	ldr	w9, [x8, #0x3c]
000000000001cd80	ldr	x8, [x8, #0x40]
000000000001cd84	tbnz	w9, #0x1f, 0x1cd94
000000000001cd88	mov	w10, #0x12
000000000001cd8c	and	x9, x9, x10
000000000001cd90	b	0x1ce18
000000000001cd94	neg	w10, w9
000000000001cd98	mvn	w9, w9
000000000001cd9c	cmp	w10, #0x9
000000000001cda0	b.ge	0x1cdd8
000000000001cda4	cmp	w10, #0x2
000000000001cda8	b.lt	0x1ce0c
000000000001cdac	mov	x10, #0x0
000000000001cdb0	mov	x11, x8
000000000001cdb4	ldr	w12, [x11]
000000000001cdb8	cmp	w12, #0x11
000000000001cdbc	b.gt	0x1ce14
000000000001cdc0	add	x10, x10, #0x1
000000000001cdc4	add	x11, x11, #0x10
000000000001cdc8	cmp	x9, x10
000000000001cdcc	b.ne	0x1cdb4
000000000001cdd0	mov	x10, x9
000000000001cdd4	b	0x1ce14
000000000001cdd8	mov	w10, #0x0
000000000001cddc	add	w11, w9, w10
000000000001cde0	cmp	w11, #0x0
000000000001cde4	cinc	w11, w11, lt
000000000001cde8	asr	w11, w11, #1
000000000001cdec	sbfiz	x12, x11, #4, #32
000000000001cdf0	ldr	w12, [x8, x12]
000000000001cdf4	cmp	w12, #0x12
000000000001cdf8	csinc	w10, w10, w11, ge
000000000001cdfc	csel	w9, w9, w11, lt
000000000001ce00	cmp	w10, w9
000000000001ce04	b.lt	0x1cddc
000000000001ce08	b	0x1ce14
000000000001ce0c	mov	w10, #0x0
000000000001ce10	b	0x1ce14
000000000001ce14	sxtw	x9, w10
000000000001ce18	add	x8, x8, x9, lsl #4
000000000001ce1c	ldr	x8, [x8, #0x8]
000000000001ce20	ldr	x8, [x8, #0x20]
000000000001ce24	mov	x0, x23
000000000001ce28	blr	x8
000000000001ce2c	mov	x24, x0
000000000001ce30	mov	w23, #0x0
000000000001ce34	add	x27, x20, #0x10
000000000001ce38	mov	w28, #0xa0
000000000001ce3c	ldr	x8, [x24]
000000000001ce40	and	x8, x8, #0xfffffffffffffffc
000000000001ce44	ldr	x8, [x8]
000000000001ce48	ldr	w9, [x8, #0x3c]
000000000001ce4c	ldr	x8, [x8, #0x40]
000000000001ce50	tbz	w9, #0x1f, 0x1cff0
000000000001ce54	b	0x1cf50
000000000001ce58	ldarb	w8, [x26]
000000000001ce5c	tbz	w8, #0x0, 0x1ce64
000000000001ce60	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ce64	ldr	x8, [x24]
000000000001ce68	and	x8, x8, #0xfffffffffffffffc
000000000001ce6c	ldr	x8, [x8]
000000000001ce70	ldr	w9, [x8, #0x3c]
000000000001ce74	ldr	x8, [x8, #0x40]
000000000001ce78	tbnz	w9, #0x1f, 0x1ce84
000000000001ce7c	and	x9, x9, x28
000000000001ce80	b	0x1cf08
000000000001ce84	neg	w10, w9
000000000001ce88	mvn	w9, w9
000000000001ce8c	cmp	w10, #0x9
000000000001ce90	b.ge	0x1cec8
000000000001ce94	cmp	w10, #0x2
000000000001ce98	b.lt	0x1cefc
000000000001ce9c	mov	x10, #0x0
000000000001cea0	mov	x11, x8
000000000001cea4	ldr	w12, [x11]
000000000001cea8	cmp	w12, #0x9f
000000000001ceac	b.gt	0x1cf04
000000000001ceb0	add	x10, x10, #0x1
000000000001ceb4	add	x11, x11, #0x10
000000000001ceb8	cmp	x9, x10
000000000001cebc	b.ne	0x1cea4
000000000001cec0	mov	x10, x9
000000000001cec4	b	0x1cf04
000000000001cec8	mov	w10, #0x0
000000000001cecc	add	w11, w9, w10
000000000001ced0	cmp	w11, #0x0
000000000001ced4	cinc	w11, w11, lt
000000000001ced8	asr	w11, w11, #1
000000000001cedc	sbfiz	x12, x11, #4, #32
000000000001cee0	ldr	w12, [x8, x12]
000000000001cee4	cmp	w12, #0xa0
000000000001cee8	csinc	w10, w10, w11, ge
000000000001ceec	csel	w9, w9, w11, lt
000000000001cef0	cmp	w10, w9
000000000001cef4	b.lt	0x1cecc
000000000001cef8	b	0x1cf04
000000000001cefc	mov	w10, #0x0
000000000001cf00	b	0x1cf04
000000000001cf04	sxtw	x9, w10
000000000001cf08	add	x8, x8, x9, lsl #4
000000000001cf0c	ldr	x8, [x8, #0x8]
000000000001cf10	ldr	x8, [x8, #0x8]
000000000001cf14	mov	x0, x24
000000000001cf18	mov	x1, x22
000000000001cf1c	blr	x8
000000000001cf20	ldr	w8, [x20, #0x8]
000000000001cf24	cmp	w8, w23
000000000001cf28	b.ls	0x1d088
000000000001cf2c	ldr	xzr, [x20]
000000000001cf30	str	x0, [x27, w23, sxtw #3]
000000000001cf34	add	w23, w23, #0x1
000000000001cf38	ldr	x8, [x24]
000000000001cf3c	and	x8, x8, #0xfffffffffffffffc
000000000001cf40	ldr	x8, [x8]
000000000001cf44	ldr	w9, [x8, #0x3c]
000000000001cf48	ldr	x8, [x8, #0x40]
000000000001cf4c	tbz	w9, #0x1f, 0x1cff0
000000000001cf50	neg	w10, w9
000000000001cf54	mvn	w9, w9
000000000001cf58	cmp	w10, #0x9
000000000001cf5c	b.ge	0x1cf94
000000000001cf60	cmp	w10, #0x2
000000000001cf64	b.lt	0x1cfc8
000000000001cf68	mov	x10, #0x0
000000000001cf6c	mov	x11, x8
000000000001cf70	ldr	w12, [x11]
000000000001cf74	cmp	w12, #0x9f
000000000001cf78	b.gt	0x1cfd0
000000000001cf7c	add	x10, x10, #0x1
000000000001cf80	add	x11, x11, #0x10
000000000001cf84	cmp	x9, x10
000000000001cf88	b.ne	0x1cf70
000000000001cf8c	mov	x10, x9
000000000001cf90	b	0x1cfd0
000000000001cf94	mov	w10, #0x0
000000000001cf98	add	w11, w9, w10
000000000001cf9c	cmp	w11, #0x0
000000000001cfa0	cinc	w11, w11, lt
000000000001cfa4	asr	w11, w11, #1
000000000001cfa8	sbfiz	x12, x11, #4, #32
000000000001cfac	ldr	w12, [x8, x12]
000000000001cfb0	cmp	w12, #0xa0
000000000001cfb4	csinc	w10, w10, w11, ge
000000000001cfb8	csel	w9, w9, w11, lt
000000000001cfbc	cmp	w10, w9
000000000001cfc0	b.lt	0x1cf98
000000000001cfc4	b	0x1cfd0
000000000001cfc8	mov	w10, #0x0
000000000001cfcc	b	0x1cfd0
000000000001cfd0	sxtw	x9, w10
000000000001cfd4	add	x8, x8, x9, lsl #4
000000000001cfd8	ldr	x8, [x8, #0x8]
000000000001cfdc	ldr	x8, [x8]
000000000001cfe0	mov	x0, x24
000000000001cfe4	blr	x8
000000000001cfe8	tbnz	w0, #0x0, 0x1ce58
000000000001cfec	b	0x1d00c
000000000001cff0	and	x9, x9, x28
000000000001cff4	add	x8, x8, x9, lsl #4
000000000001cff8	ldr	x8, [x8, #0x8]
000000000001cffc	ldr	x8, [x8]
000000000001d000	mov	x0, x24
000000000001d004	blr	x8
000000000001d008	tbnz	w0, #0x0, 0x1ce58
000000000001d00c	ldr	w8, [x20, #0x8]
000000000001d010	cmp	w23, w8
000000000001d014	b.ge	0x1d048
000000000001d018	mov	x0, x20
000000000001d01c	mov	x1, x23
000000000001d020	mov	x2, x19
000000000001d024	bl	"_kfun:kotlin.collections#copyOfNulls__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0?>"
000000000001d028	mov	x20, x0
000000000001d02c	str	x0, [x19]
000000000001d030	ldr	x8, [x0]
000000000001d034	and	x8, x8, #0xfffffffffffffffc
000000000001d038	ldr	x8, [x8]
000000000001d03c	ldr	w8, [x8, #0x5c]
000000000001d040	cmp	w8, #0x49
000000000001d044	b.ne	0x1d08c
000000000001d048	str	x20, [x19]
000000000001d04c	mov	x0, x21
000000000001d050	blr	x25
000000000001d054	ldr	x8, [x0]
000000000001d058	ldr	x9, [sp, #0x8]
000000000001d05c	str	x9, [x8, #0x110]
000000000001d060	str	x20, [x19]
000000000001d064	mov	x0, x20
000000000001d068	ldp	x29, x30, [sp, #0x80]
000000000001d06c	ldp	x20, x19, [sp, #0x70]
000000000001d070	ldp	x22, x21, [sp, #0x60]
000000000001d074	ldp	x24, x23, [sp, #0x50]
000000000001d078	ldp	x26, x25, [sp, #0x40]
000000000001d07c	ldp	x28, x27, [sp, #0x30]
000000000001d080	add	sp, sp, #0x90
000000000001d084	ret
000000000001d088	bl	_ThrowArrayIndexOutOfBoundsException
000000000001d08c	adr	x1, #0x43af4
000000000001d090	nop
000000000001d094	mov	x0, x20
000000000001d098	bl	_ThrowClassCastException
_kfun:kotlin.collections.AbstractCollection.$toString$lambda$0$FUNCTION_REFERENCE$17.invoke#internal:
000000000001d09c	stp	x22, x21, [sp, #-0x30]!
000000000001d0a0	stp	x20, x19, [sp, #0x10]
000000000001d0a4	stp	x29, x30, [sp, #0x20]
000000000001d0a8	add	x29, sp, #0x20
000000000001d0ac	mov	x19, x2
000000000001d0b0	mov	x20, x1
000000000001d0b4	mov	x21, x0
000000000001d0b8	adr	x8, #0x771d1
000000000001d0bc	nop
000000000001d0c0	ldarb	w8, [x8]
000000000001d0c4	tbz	w8, #0x0, 0x1d0cc
000000000001d0c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d0cc	ldr	x8, [x21, #0x8]
000000000001d0d0	cmp	x8, x20
000000000001d0d4	b.eq	0x1d10c
000000000001d0d8	cbz	x20, 0x1d128
000000000001d0dc	ldr	x8, [x20]
000000000001d0e0	and	x8, x8, #0xfffffffffffffffc
000000000001d0e4	ldr	x8, [x8]
000000000001d0e8	ldr	x8, [x8, #0x80]
000000000001d0ec	mov	x0, x20
000000000001d0f0	mov	x1, x19
000000000001d0f4	blr	x8
000000000001d0f8	str	x0, [x19]
000000000001d0fc	ldp	x29, x30, [sp, #0x20]
000000000001d100	ldp	x20, x19, [sp, #0x10]
000000000001d104	ldp	x22, x21, [sp], #0x30
000000000001d108	ret
000000000001d10c	adr	x0, #0x51b64
000000000001d110	nop
000000000001d114	str	x0, [x19]
000000000001d118	ldp	x29, x30, [sp, #0x20]
000000000001d11c	ldp	x20, x19, [sp, #0x10]
000000000001d120	ldp	x22, x21, [sp], #0x30
000000000001d124	ret
000000000001d128	adr	x0, #0x50e78
000000000001d12c	nop
000000000001d130	str	x0, [x19]
000000000001d134	ldp	x29, x30, [sp, #0x20]
000000000001d138	ldp	x20, x19, [sp, #0x10]
000000000001d13c	ldp	x22, x21, [sp], #0x30
000000000001d140	ret
_kfun:kotlin.collections.AbstractIterator#hasNext(){}kotlin.Boolean:
000000000001d144	sub	sp, sp, #0xe0
000000000001d148	stp	x28, x27, [sp, #0x80]
000000000001d14c	stp	x26, x25, [sp, #0x90]
000000000001d150	stp	x24, x23, [sp, #0xa0]
000000000001d154	stp	x22, x21, [sp, #0xb0]
000000000001d158	stp	x20, x19, [sp, #0xc0]
000000000001d15c	stp	x29, x30, [sp, #0xd0]
000000000001d160	add	x29, sp, #0xd0
000000000001d164	mov	x19, x0
000000000001d168	movi.16b	v0, #0x0
000000000001d16c	stp	q0, q0, [sp]
000000000001d170	stp	q0, q0, [sp, #0x20]
000000000001d174	adrp	x0, 93 ; 0x7a000
000000000001d178	add	x0, x0, #0x2c0
000000000001d17c	ldr	x8, [x0]
000000000001d180	blr	x8
000000000001d184	ldr	x24, [x0]
000000000001d188	ldr	x8, [x24, #0x110]
000000000001d18c	mov	x9, sp
000000000001d190	str	x9, [x24, #0x110]
000000000001d194	mov	x9, #0x800000000
000000000001d198	stp	x8, x9, [sp, #0x8]
000000000001d19c	adr	x26, #0x770ed
000000000001d1a0	nop
000000000001d1a4	ldarb	w8, [x26]
000000000001d1a8	tbz	w8, #0x0, 0x1d1b0
000000000001d1ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d1b0	ldr	x20, [x19, #0x8]
000000000001d1b4	str	x20, [sp, #0x18]
000000000001d1b8	adr	x25, #0x77158
000000000001d1bc	nop
000000000001d1c0	ldar	x21, [x25]
000000000001d1c4	cmp	x21, #0x2
000000000001d1c8	b.hs	0x1d390
000000000001d1cc	ldp	x8, x9, [x24, #0x120]
000000000001d1d0	cmp	x8, x9
000000000001d1d4	b.eq	0x1d1f4
000000000001d1d8	mov	x10, x9
000000000001d1dc	ldr	x11, [x10, #-0x10]!
000000000001d1e0	cmp	x11, x25
000000000001d1e4	b.eq	0x1d2ac
000000000001d1e8	mov	x9, x10
000000000001d1ec	cmp	x10, x8
000000000001d1f0	b.ne	0x1d1dc
000000000001d1f4	add	x22, x24, #0x120
000000000001d1f8	add	x0, x24, #0x138
000000000001d1fc	mov	w9, #0x1
000000000001d200	ldaxr	w8, [x0]
000000000001d204	stlxr	w10, w9, [x0]
000000000001d208	cbnz	w10, 0x1d200
000000000001d20c	b	0x1d21c
000000000001d210	mov	w23, #0x1
000000000001d214	stlxr	w9, x23, [x25]
000000000001d218	cbz	w9, 0x1d22c
000000000001d21c	ldaxr	x21, [x25]
000000000001d220	cbz	x21, 0x1d210
000000000001d224	mov	w23, #0x0
000000000001d228	clrex
000000000001d22c	cmp	x21, #0x1
000000000001d230	b.eq	0x1d21c
000000000001d234	cbz	x24, 0x1d25c
000000000001d238	ldaxr	w9, [x0]
000000000001d23c	stlxr	w10, w8, [x0]
000000000001d240	cbnz	w10, 0x1d238
000000000001d244	cbnz	w8, 0x1d25c
000000000001d248	cmp	w9, #0x1
000000000001d24c	b.ne	0x1d25c
000000000001d250	ldarb	w8, [x26]
000000000001d254	tbz	w8, #0x0, 0x1d25c
000000000001d258	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000001d25c	tbz	w23, #0x0, 0x1d2a4
000000000001d260	ldr	x8, [x24, #0x118]
000000000001d264	add	x0, x8, #0x70
000000000001d268	mov	w1, #0x20
000000000001d26c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d270	mov	x21, x0
000000000001d274	adr	x8, #0x47bac
000000000001d278	nop
000000000001d27c	str	x8, [x21, #0x10]!
000000000001d280	stur	xzr, [x21, #-0x8]
000000000001d284	str	x21, [sp, #0x20]
000000000001d288	ldp	x9, x8, [x24, #0x128]
000000000001d28c	cmp	x9, x8
000000000001d290	b.hs	0x1d2b8
000000000001d294	stp	x25, x21, [x9]
000000000001d298	add	x8, x9, #0x10
000000000001d29c	str	x8, [x24, #0x128]
000000000001d2a0	b	0x1d340
000000000001d2a4	str	x21, [sp, #0x20]
000000000001d2a8	b	0x1d390
000000000001d2ac	ldur	x21, [x9, #-0x8]
000000000001d2b0	str	x21, [sp, #0x20]
000000000001d2b4	b	0x1d390
000000000001d2b8	ldr	x10, [x22]
000000000001d2bc	sub	x9, x9, x10
000000000001d2c0	asr	x27, x9, #4
000000000001d2c4	add	x9, x27, #0x1
000000000001d2c8	lsr	x11, x9, #60
000000000001d2cc	cbnz	x11, 0x1d88c
000000000001d2d0	sub	x8, x8, x10
000000000001d2d4	asr	x10, x8, #3
000000000001d2d8	cmp	x10, x9
000000000001d2dc	csel	x9, x9, x10, lo
000000000001d2e0	mov	x10, #0x7ffffffffffffff
000000000001d2e4	cmp	x10, x8, asr #4
000000000001d2e8	mov	x8, #0xfffffffffffffff
000000000001d2ec	csel	x23, x9, x8, hi
000000000001d2f0	mov	x0, x23
000000000001d2f4	mov	w1, #0x10
000000000001d2f8	bl	0x553d4 ; symbol stub for: _calloc
000000000001d2fc	add	x8, x0, x27, lsl #4
000000000001d300	add	x27, x0, x23, lsl #4
000000000001d304	stp	x25, x21, [x8]
000000000001d308	add	x28, x8, #0x10
000000000001d30c	ldp	x1, x9, [x24, #0x120]
000000000001d310	sub	x2, x9, x1
000000000001d314	sub	x23, x8, x2
000000000001d318	cmp	x2, #0x1
000000000001d31c	b.lt	0x1d32c
000000000001d320	mov	x0, x23
000000000001d324	bl	0x554ac ; symbol stub for: _memcpy
000000000001d328	ldr	x1, [x22]
000000000001d32c	stp	x23, x28, [x24, #0x120]
000000000001d330	str	x27, [x24, #0x130]
000000000001d334	cbz	x1, 0x1d340
000000000001d338	mov	x0, x1
000000000001d33c	bl	0x55458 ; symbol stub for: _free
000000000001d340	mov	x0, x21
000000000001d344	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000001d348	mov	w0, #0x1
000000000001d34c	mov	w1, #0x28
000000000001d350	bl	0x553d4 ; symbol stub for: _calloc
000000000001d354	mov	x8, x24
000000000001d358	ldr	x9, [x8, #0x18]!
000000000001d35c	sub	x10, x8, #0x8
000000000001d360	stp	x25, x10, [x0, #0x10]
000000000001d364	stp	x9, x8, [x0]
000000000001d368	str	x0, [x9, #0x8]
000000000001d36c	str	x0, [x8]
000000000001d370	ldr	x9, [x8, #0x10]
000000000001d374	add	x9, x9, #0x1
000000000001d378	str	x9, [x8, #0x10]
000000000001d37c	str	x0, [x0, #0x20]
000000000001d380	stlr	x21, [x25]
000000000001d384	ldr	x9, [x8, #0x110]
000000000001d388	sub	x9, x9, #0x10
000000000001d38c	str	x9, [x8, #0x110]
000000000001d390	ldr	x8, [x21, #0x8]
000000000001d394	ldr	w9, [x8, #0x8]
000000000001d398	cmp	w9, #0x1
000000000001d39c	b.ls	0x1d848
000000000001d3a0	ldr	x1, [x8, #0x18]
000000000001d3a4	str	x1, [sp, #0x28]
000000000001d3a8	ldr	x8, [x20]
000000000001d3ac	and	x8, x8, #0xfffffffffffffffc
000000000001d3b0	ldr	x8, [x8]
000000000001d3b4	ldr	x8, [x8, #0x70]
000000000001d3b8	mov	x0, x20
000000000001d3bc	blr	x8
000000000001d3c0	cbnz	w0, 0x1d84c
000000000001d3c4	ldr	x8, [x19, #0x8]
000000000001d3c8	str	x8, [sp, #0x38]
000000000001d3cc	ldr	w8, [x8, #0x10]
000000000001d3d0	cbz	w8, 0x1d3e4
000000000001d3d4	cmp	w8, #0x2
000000000001d3d8	b.ne	0x1d3ec
000000000001d3dc	mov	w0, #0x0
000000000001d3e0	b	0x1d820
000000000001d3e4	mov	w0, #0x1
000000000001d3e8	b	0x1d820
000000000001d3ec	movi.16b	v0, #0x0
000000000001d3f0	stp	q0, q0, [sp, #0x40]
000000000001d3f4	stp	q0, q0, [sp, #0x60]
000000000001d3f8	ldr	x8, [x24, #0x110]
000000000001d3fc	add	x9, sp, #0x40
000000000001d400	str	x9, [x24, #0x110]
000000000001d404	mov	x9, #0x800000000
000000000001d408	stp	x8, x9, [sp, #0x48]
000000000001d40c	ldar	x20, [x25]
000000000001d410	cmp	x20, #0x2
000000000001d414	b.hs	0x1d5dc
000000000001d418	ldp	x8, x9, [x24, #0x120]
000000000001d41c	cmp	x8, x9
000000000001d420	b.eq	0x1d440
000000000001d424	mov	x10, x9
000000000001d428	ldr	x11, [x10, #-0x10]!
000000000001d42c	cmp	x11, x25
000000000001d430	b.eq	0x1d4f8
000000000001d434	mov	x9, x10
000000000001d438	cmp	x10, x8
000000000001d43c	b.ne	0x1d428
000000000001d440	add	x21, x24, #0x120
000000000001d444	add	x0, x24, #0x138
000000000001d448	mov	w9, #0x1
000000000001d44c	ldaxr	w8, [x0]
000000000001d450	stlxr	w10, w9, [x0]
000000000001d454	cbnz	w10, 0x1d44c
000000000001d458	b	0x1d468
000000000001d45c	mov	w22, #0x1
000000000001d460	stlxr	w9, x22, [x25]
000000000001d464	cbz	w9, 0x1d478
000000000001d468	ldaxr	x20, [x25]
000000000001d46c	cbz	x20, 0x1d45c
000000000001d470	mov	w22, #0x0
000000000001d474	clrex
000000000001d478	cmp	x20, #0x1
000000000001d47c	b.eq	0x1d468
000000000001d480	cbz	x24, 0x1d4a8
000000000001d484	ldaxr	w9, [x0]
000000000001d488	stlxr	w10, w8, [x0]
000000000001d48c	cbnz	w10, 0x1d484
000000000001d490	cbnz	w8, 0x1d4a8
000000000001d494	cmp	w9, #0x1
000000000001d498	b.ne	0x1d4a8
000000000001d49c	ldarb	w8, [x26]
000000000001d4a0	tbz	w8, #0x0, 0x1d4a8
000000000001d4a4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000001d4a8	tbz	w22, #0x0, 0x1d4f0
000000000001d4ac	ldr	x8, [x24, #0x118]
000000000001d4b0	add	x0, x8, #0x70
000000000001d4b4	mov	w1, #0x20
000000000001d4b8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d4bc	mov	x20, x0
000000000001d4c0	adr	x8, #0x47960
000000000001d4c4	nop
000000000001d4c8	str	x8, [x20, #0x10]!
000000000001d4cc	stur	xzr, [x20, #-0x8]
000000000001d4d0	str	x20, [sp, #0x58]
000000000001d4d4	ldp	x9, x8, [x24, #0x128]
000000000001d4d8	cmp	x9, x8
000000000001d4dc	b.hs	0x1d504
000000000001d4e0	stp	x25, x20, [x9]
000000000001d4e4	add	x8, x9, #0x10
000000000001d4e8	str	x8, [x24, #0x128]
000000000001d4ec	b	0x1d58c
000000000001d4f0	str	x20, [sp, #0x58]
000000000001d4f4	b	0x1d5dc
000000000001d4f8	ldur	x20, [x9, #-0x8]
000000000001d4fc	str	x20, [sp, #0x58]
000000000001d500	b	0x1d5dc
000000000001d504	ldr	x10, [x21]
000000000001d508	sub	x9, x9, x10
000000000001d50c	asr	x23, x9, #4
000000000001d510	add	x9, x23, #0x1
000000000001d514	lsr	x11, x9, #60
000000000001d518	cbnz	x11, 0x1d894
000000000001d51c	sub	x8, x8, x10
000000000001d520	asr	x10, x8, #3
000000000001d524	cmp	x10, x9
000000000001d528	csel	x9, x9, x10, lo
000000000001d52c	mov	x10, #0x7ffffffffffffff
000000000001d530	cmp	x10, x8, asr #4
000000000001d534	mov	x8, #0xfffffffffffffff
000000000001d538	csel	x22, x9, x8, hi
000000000001d53c	mov	x0, x22
000000000001d540	mov	w1, #0x10
000000000001d544	bl	0x553d4 ; symbol stub for: _calloc
000000000001d548	add	x8, x0, x23, lsl #4
000000000001d54c	add	x23, x0, x22, lsl #4
000000000001d550	stp	x25, x20, [x8]
000000000001d554	add	x27, x8, #0x10
000000000001d558	ldp	x1, x9, [x24, #0x120]
000000000001d55c	sub	x2, x9, x1
000000000001d560	sub	x22, x8, x2
000000000001d564	cmp	x2, #0x1
000000000001d568	b.lt	0x1d578
000000000001d56c	mov	x0, x22
000000000001d570	bl	0x554ac ; symbol stub for: _memcpy
000000000001d574	ldr	x1, [x21]
000000000001d578	stp	x22, x27, [x24, #0x120]
000000000001d57c	str	x23, [x24, #0x130]
000000000001d580	cbz	x1, 0x1d58c
000000000001d584	mov	x0, x1
000000000001d588	bl	0x55458 ; symbol stub for: _free
000000000001d58c	mov	x0, x20
000000000001d590	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000001d594	mov	w0, #0x1
000000000001d598	mov	w1, #0x28
000000000001d59c	bl	0x553d4 ; symbol stub for: _calloc
000000000001d5a0	mov	x8, x24
000000000001d5a4	ldr	x9, [x8, #0x18]!
000000000001d5a8	sub	x10, x8, #0x8
000000000001d5ac	stp	x25, x10, [x0, #0x10]
000000000001d5b0	stp	x9, x8, [x0]
000000000001d5b4	str	x0, [x9, #0x8]
000000000001d5b8	str	x0, [x8]
000000000001d5bc	ldr	x9, [x8, #0x10]
000000000001d5c0	add	x9, x9, #0x1
000000000001d5c4	str	x9, [x8, #0x10]
000000000001d5c8	str	x0, [x0, #0x20]
000000000001d5cc	stlr	x20, [x25]
000000000001d5d0	ldr	x9, [x8, #0x110]
000000000001d5d4	sub	x9, x9, #0x10
000000000001d5d8	str	x9, [x8, #0x110]
000000000001d5dc	ldr	x8, [x20, #0x8]
000000000001d5e0	ldr	w9, [x8, #0x8]
000000000001d5e4	cmp	w9, #0x1
000000000001d5e8	b.ls	0x1d848
000000000001d5ec	ldr	x8, [x8, #0x18]
000000000001d5f0	str	x8, [sp, #0x60]
000000000001d5f4	str	x8, [x19, #0x8]
000000000001d5f8	ldr	x8, [x19]
000000000001d5fc	and	x8, x8, #0xfffffffffffffffc
000000000001d600	ldr	x8, [x8]
000000000001d604	ldr	x8, [x8, #0x88]
000000000001d608	mov	x0, x19
000000000001d60c	blr	x8
000000000001d610	ldr	x19, [x19, #0x8]
000000000001d614	str	x19, [sp, #0x68]
000000000001d618	ldar	x20, [x25]
000000000001d61c	cmp	x20, #0x2
000000000001d620	b.hs	0x1d7e8
000000000001d624	ldp	x8, x9, [x24, #0x120]
000000000001d628	cmp	x8, x9
000000000001d62c	b.eq	0x1d64c
000000000001d630	mov	x10, x9
000000000001d634	ldr	x11, [x10, #-0x10]!
000000000001d638	cmp	x11, x25
000000000001d63c	b.eq	0x1d704
000000000001d640	mov	x9, x10
000000000001d644	cmp	x10, x8
000000000001d648	b.ne	0x1d634
000000000001d64c	add	x21, x24, #0x120
000000000001d650	add	x0, x24, #0x138
000000000001d654	mov	w9, #0x1
000000000001d658	ldaxr	w8, [x0]
000000000001d65c	stlxr	w10, w9, [x0]
000000000001d660	cbnz	w10, 0x1d658
000000000001d664	b	0x1d674
000000000001d668	mov	w22, #0x1
000000000001d66c	stlxr	w9, x22, [x25]
000000000001d670	cbz	w9, 0x1d684
000000000001d674	ldaxr	x20, [x25]
000000000001d678	cbz	x20, 0x1d668
000000000001d67c	mov	w22, #0x0
000000000001d680	clrex
000000000001d684	cmp	x20, #0x1
000000000001d688	b.eq	0x1d674
000000000001d68c	cbz	x24, 0x1d6b4
000000000001d690	ldaxr	w9, [x0]
000000000001d694	stlxr	w10, w8, [x0]
000000000001d698	cbnz	w10, 0x1d690
000000000001d69c	cbnz	w8, 0x1d6b4
000000000001d6a0	cmp	w9, #0x1
000000000001d6a4	b.ne	0x1d6b4
000000000001d6a8	ldarb	w8, [x26]
000000000001d6ac	tbz	w8, #0x0, 0x1d6b4
000000000001d6b0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000001d6b4	tbz	w22, #0x0, 0x1d6fc
000000000001d6b8	ldr	x8, [x24, #0x118]
000000000001d6bc	add	x0, x8, #0x70
000000000001d6c0	mov	w1, #0x20
000000000001d6c4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d6c8	mov	x20, x0
000000000001d6cc	adr	x8, #0x47754
000000000001d6d0	nop
000000000001d6d4	str	x8, [x20, #0x10]!
000000000001d6d8	stur	xzr, [x20, #-0x8]
000000000001d6dc	str	x20, [sp, #0x70]
000000000001d6e0	ldp	x9, x8, [x24, #0x128]
000000000001d6e4	cmp	x9, x8
000000000001d6e8	b.hs	0x1d710
000000000001d6ec	stp	x25, x20, [x9]
000000000001d6f0	add	x8, x9, #0x10
000000000001d6f4	str	x8, [x24, #0x128]
000000000001d6f8	b	0x1d798
000000000001d6fc	str	x20, [sp, #0x70]
000000000001d700	b	0x1d7e8
000000000001d704	ldur	x20, [x9, #-0x8]
000000000001d708	str	x20, [sp, #0x70]
000000000001d70c	b	0x1d7e8
000000000001d710	ldr	x10, [x21]
000000000001d714	sub	x9, x9, x10
000000000001d718	asr	x23, x9, #4
000000000001d71c	add	x9, x23, #0x1
000000000001d720	lsr	x11, x9, #60
000000000001d724	cbnz	x11, 0x1d894
000000000001d728	sub	x8, x8, x10
000000000001d72c	asr	x10, x8, #3
000000000001d730	cmp	x10, x9
000000000001d734	csel	x9, x9, x10, lo
000000000001d738	mov	x10, #0x7ffffffffffffff
000000000001d73c	cmp	x10, x8, asr #4
000000000001d740	mov	x8, #0xfffffffffffffff
000000000001d744	csel	x22, x9, x8, hi
000000000001d748	mov	x0, x22
000000000001d74c	mov	w1, #0x10
000000000001d750	bl	0x553d4 ; symbol stub for: _calloc
000000000001d754	add	x8, x0, x23, lsl #4
000000000001d758	add	x23, x0, x22, lsl #4
000000000001d75c	stp	x25, x20, [x8]
000000000001d760	add	x26, x8, #0x10
000000000001d764	ldp	x1, x9, [x24, #0x120]
000000000001d768	sub	x2, x9, x1
000000000001d76c	sub	x22, x8, x2
000000000001d770	cmp	x2, #0x1
000000000001d774	b.lt	0x1d784
000000000001d778	mov	x0, x22
000000000001d77c	bl	0x554ac ; symbol stub for: _memcpy
000000000001d780	ldr	x1, [x21]
000000000001d784	stp	x22, x26, [x24, #0x120]
000000000001d788	str	x23, [x24, #0x130]
000000000001d78c	cbz	x1, 0x1d798
000000000001d790	mov	x0, x1
000000000001d794	bl	0x55458 ; symbol stub for: _free
000000000001d798	mov	x0, x20
000000000001d79c	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000001d7a0	mov	w0, #0x1
000000000001d7a4	mov	w1, #0x28
000000000001d7a8	bl	0x553d4 ; symbol stub for: _calloc
000000000001d7ac	mov	x8, x24
000000000001d7b0	ldr	x9, [x8, #0x18]!
000000000001d7b4	sub	x10, x8, #0x8
000000000001d7b8	stp	x25, x10, [x0, #0x10]
000000000001d7bc	stp	x9, x8, [x0]
000000000001d7c0	str	x0, [x9, #0x8]
000000000001d7c4	str	x0, [x8]
000000000001d7c8	ldr	x9, [x8, #0x10]
000000000001d7cc	add	x9, x9, #0x1
000000000001d7d0	str	x9, [x8, #0x10]
000000000001d7d4	str	x0, [x0, #0x20]
000000000001d7d8	stlr	x20, [x25]
000000000001d7dc	ldr	x9, [x8, #0x110]
000000000001d7e0	sub	x9, x9, #0x10
000000000001d7e4	str	x9, [x8, #0x110]
000000000001d7e8	ldr	x8, [x20, #0x8]
000000000001d7ec	ldr	w9, [x8, #0x8]
000000000001d7f0	cmp	w9, #0x3
000000000001d7f4	b.ls	0x1d848
000000000001d7f8	ldr	x1, [x8, #0x28]
000000000001d7fc	str	x1, [sp, #0x78]
000000000001d800	ldr	x8, [x19]
000000000001d804	and	x8, x8, #0xfffffffffffffffc
000000000001d808	ldr	x8, [x8]
000000000001d80c	ldr	x8, [x8, #0x70]
000000000001d810	mov	x0, x19
000000000001d814	blr	x8
000000000001d818	ldr	x8, [sp, #0x48]
000000000001d81c	str	x8, [x24, #0x110]
000000000001d820	ldr	x8, [sp, #0x8]
000000000001d824	str	x8, [x24, #0x110]
000000000001d828	ldp	x29, x30, [sp, #0xd0]
000000000001d82c	ldp	x20, x19, [sp, #0xc0]
000000000001d830	ldp	x22, x21, [sp, #0xb0]
000000000001d834	ldp	x24, x23, [sp, #0xa0]
000000000001d838	ldp	x26, x25, [sp, #0x90]
000000000001d83c	ldp	x28, x27, [sp, #0x80]
000000000001d840	add	sp, sp, #0xe0
000000000001d844	ret
000000000001d848	bl	_ThrowArrayIndexOutOfBoundsException
000000000001d84c	ldr	x8, [x24, #0x118]
000000000001d850	add	x0, x8, #0x70
000000000001d854	mov	w1, #0x38
000000000001d858	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d85c	mov	x19, x0
000000000001d860	adr	x8, #0x43b80
000000000001d864	nop
000000000001d868	str	x8, [x19, #0x10]!
000000000001d86c	stur	xzr, [x19, #-0x8]
000000000001d870	str	x19, [sp, #0x30]
000000000001d874	adr	x1, #0x5062c
000000000001d878	nop
000000000001d87c	mov	x0, x19
000000000001d880	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000001d884	mov	x0, x19
000000000001d888	bl	_ThrowException
000000000001d88c	mov	x0, x22
000000000001d890	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000001d894	mov	x0, x21
000000000001d898	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000001d89c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000001d8a0	str	xzr, [sp, #0x70]
000000000001d8a4	stlr	xzr, [x25]
000000000001d8a8	ldr	x8, [x24, #0x128]
000000000001d8ac	sub	x8, x8, #0x10
000000000001d8b0	str	x8, [x24, #0x128]
000000000001d8b4	bl	0x5535c ; symbol stub for: ___cxa_rethrow
000000000001d8b8	b	0x1d900
000000000001d8bc	b	0x1d904
000000000001d8c0	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000001d8c4	str	xzr, [sp, #0x58]
000000000001d8c8	stlr	xzr, [x25]
000000000001d8cc	ldr	x8, [x24, #0x128]
000000000001d8d0	sub	x8, x8, #0x10
000000000001d8d4	str	x8, [x24, #0x128]
000000000001d8d8	bl	0x5535c ; symbol stub for: ___cxa_rethrow
000000000001d8dc	b	0x1d900
000000000001d8e0	b	0x1d904
000000000001d8e4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000001d8e8	str	xzr, [sp, #0x20]
000000000001d8ec	stlr	xzr, [x25]
000000000001d8f0	ldr	x8, [x24, #0x128]
000000000001d8f4	sub	x8, x8, #0x10
000000000001d8f8	str	x8, [x24, #0x128]
000000000001d8fc	bl	0x5535c ; symbol stub for: ___cxa_rethrow
000000000001d900	brk	#0x1
000000000001d904	mov	x19, x0
000000000001d908	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000001d90c	mov	x0, x19
000000000001d910	bl	0x55194 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.collections.AbstractIterator#next(){}1:0:
000000000001d914	sub	sp, sp, #0x90
000000000001d918	stp	x28, x27, [sp, #0x30]
000000000001d91c	stp	x26, x25, [sp, #0x40]
000000000001d920	stp	x24, x23, [sp, #0x50]
000000000001d924	stp	x22, x21, [sp, #0x60]
000000000001d928	stp	x20, x19, [sp, #0x70]
000000000001d92c	stp	x29, x30, [sp, #0x80]
000000000001d930	add	x29, sp, #0x80
000000000001d934	mov	x19, x1
000000000001d938	mov	x20, x0
000000000001d93c	movi.16b	v0, #0x0
000000000001d940	stp	q0, q0, [sp]
000000000001d944	str	q0, [sp, #0x20]
000000000001d948	adrp	x0, 93 ; 0x7a000
000000000001d94c	add	x0, x0, #0x2c0
000000000001d950	ldr	x8, [x0]
000000000001d954	blr	x8
000000000001d958	ldr	x24, [x0]
000000000001d95c	ldr	x8, [x24, #0x110]
000000000001d960	mov	x9, sp
000000000001d964	str	x9, [x24, #0x110]
000000000001d968	mov	x9, #0x600000000
000000000001d96c	stp	x8, x9, [sp, #0x8]
000000000001d970	adr	x23, #0x76919
000000000001d974	nop
000000000001d978	ldarb	w8, [x23]
000000000001d97c	tbz	w8, #0x0, 0x1d984
000000000001d980	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d984	ldr	x8, [x20]
000000000001d988	and	x8, x8, #0xfffffffffffffffc
000000000001d98c	ldr	x8, [x8]
000000000001d990	ldr	x8, [x8, #0x90]
000000000001d994	mov	x0, x20
000000000001d998	blr	x8
000000000001d99c	tbz	w0, #0x0, 0x1dbc4
000000000001d9a0	adr	x25, #0x76970
000000000001d9a4	nop
000000000001d9a8	ldar	x21, [x25]
000000000001d9ac	cmp	x21, #0x2
000000000001d9b0	b.hs	0x1db78
000000000001d9b4	ldp	x8, x9, [x24, #0x120]
000000000001d9b8	cmp	x8, x9
000000000001d9bc	b.eq	0x1d9dc
000000000001d9c0	mov	x10, x9
000000000001d9c4	ldr	x11, [x10, #-0x10]!
000000000001d9c8	cmp	x11, x25
000000000001d9cc	b.eq	0x1da94
000000000001d9d0	mov	x9, x10
000000000001d9d4	cmp	x10, x8
000000000001d9d8	b.ne	0x1d9c4
000000000001d9dc	add	x22, x24, #0x120
000000000001d9e0	add	x0, x24, #0x138
000000000001d9e4	mov	w9, #0x1
000000000001d9e8	ldaxr	w8, [x0]
000000000001d9ec	stlxr	w10, w9, [x0]
000000000001d9f0	cbnz	w10, 0x1d9e8
000000000001d9f4	b	0x1da04
000000000001d9f8	mov	w26, #0x1
000000000001d9fc	stlxr	w9, x26, [x25]
000000000001da00	cbz	w9, 0x1da14
000000000001da04	ldaxr	x21, [x25]
000000000001da08	cbz	x21, 0x1d9f8
000000000001da0c	mov	w26, #0x0
000000000001da10	clrex
000000000001da14	cmp	x21, #0x1
000000000001da18	b.eq	0x1da04
000000000001da1c	cbz	x24, 0x1da44
000000000001da20	ldaxr	w9, [x0]
000000000001da24	stlxr	w10, w8, [x0]
000000000001da28	cbnz	w10, 0x1da20
000000000001da2c	cbnz	w8, 0x1da44
000000000001da30	cmp	w9, #0x1
000000000001da34	b.ne	0x1da44
000000000001da38	ldarb	w8, [x23]
000000000001da3c	tbz	w8, #0x0, 0x1da44
000000000001da40	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000001da44	tbz	w26, #0x0, 0x1da8c
000000000001da48	ldr	x8, [x24, #0x118]
000000000001da4c	add	x0, x8, #0x70
000000000001da50	mov	w1, #0x20
000000000001da54	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001da58	mov	x21, x0
000000000001da5c	adr	x8, #0x473c4
000000000001da60	nop
000000000001da64	str	x8, [x21, #0x10]!
000000000001da68	stur	xzr, [x21, #-0x8]
000000000001da6c	str	x21, [sp, #0x20]
000000000001da70	ldp	x9, x8, [x24, #0x128]
000000000001da74	cmp	x9, x8
000000000001da78	b.hs	0x1daa0
000000000001da7c	stp	x25, x21, [x9]
000000000001da80	add	x8, x9, #0x10
000000000001da84	str	x8, [x24, #0x128]
000000000001da88	b	0x1db28
000000000001da8c	str	x21, [sp, #0x20]
000000000001da90	b	0x1db78
000000000001da94	ldur	x21, [x9, #-0x8]
000000000001da98	str	x21, [sp, #0x20]
000000000001da9c	b	0x1db78
000000000001daa0	ldr	x10, [x22]
000000000001daa4	sub	x9, x9, x10
000000000001daa8	asr	x26, x9, #4
000000000001daac	add	x9, x26, #0x1
000000000001dab0	lsr	x11, x9, #60
000000000001dab4	cbnz	x11, 0x1dc00
000000000001dab8	sub	x8, x8, x10
000000000001dabc	asr	x10, x8, #3
000000000001dac0	cmp	x10, x9
000000000001dac4	csel	x9, x9, x10, lo
000000000001dac8	mov	x10, #0x7ffffffffffffff
000000000001dacc	cmp	x10, x8, asr #4
000000000001dad0	mov	x8, #0xfffffffffffffff
000000000001dad4	csel	x23, x9, x8, hi
000000000001dad8	mov	x0, x23
000000000001dadc	mov	w1, #0x10
000000000001dae0	bl	0x553d4 ; symbol stub for: _calloc
000000000001dae4	add	x8, x0, x26, lsl #4
000000000001dae8	add	x26, x0, x23, lsl #4
000000000001daec	stp	x25, x21, [x8]
000000000001daf0	add	x27, x8, #0x10
000000000001daf4	ldp	x1, x9, [x24, #0x120]
000000000001daf8	sub	x2, x9, x1
000000000001dafc	sub	x23, x8, x2
000000000001db00	cmp	x2, #0x1
000000000001db04	b.lt	0x1db14
000000000001db08	mov	x0, x23
000000000001db0c	bl	0x554ac ; symbol stub for: _memcpy
000000000001db10	ldr	x1, [x22]
000000000001db14	stp	x23, x27, [x24, #0x120]
000000000001db18	str	x26, [x24, #0x130]
000000000001db1c	cbz	x1, 0x1db28
000000000001db20	mov	x0, x1
000000000001db24	bl	0x55458 ; symbol stub for: _free
000000000001db28	mov	x0, x21
000000000001db2c	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000001db30	mov	w0, #0x1
000000000001db34	mov	w1, #0x28
000000000001db38	bl	0x553d4 ; symbol stub for: _calloc
000000000001db3c	mov	x8, x24
000000000001db40	ldr	x9, [x8, #0x18]!
000000000001db44	sub	x10, x8, #0x8
000000000001db48	stp	x25, x10, [x0, #0x10]
000000000001db4c	stp	x9, x8, [x0]
000000000001db50	str	x0, [x9, #0x8]
000000000001db54	str	x0, [x8]
000000000001db58	ldr	x9, [x8, #0x10]
000000000001db5c	add	x9, x9, #0x1
000000000001db60	str	x9, [x8, #0x10]
000000000001db64	str	x0, [x0, #0x20]
000000000001db68	stlr	x21, [x25]
000000000001db6c	ldr	x9, [x8, #0x110]
000000000001db70	sub	x9, x9, #0x10
000000000001db74	str	x9, [x8, #0x110]
000000000001db78	ldr	x8, [x21, #0x8]
000000000001db7c	ldr	w9, [x8, #0x8]
000000000001db80	cmp	w9, #0x2
000000000001db84	b.ls	0x1dbfc
000000000001db88	ldr	x8, [x8, #0x20]
000000000001db8c	str	x8, [sp, #0x28]
000000000001db90	str	x8, [x20, #0x8]
000000000001db94	ldr	x0, [x20, #0x10]
000000000001db98	str	x0, [x19]
000000000001db9c	ldr	x8, [sp, #0x8]
000000000001dba0	str	x8, [x24, #0x110]
000000000001dba4	ldp	x29, x30, [sp, #0x80]
000000000001dba8	ldp	x20, x19, [sp, #0x70]
000000000001dbac	ldp	x22, x21, [sp, #0x60]
000000000001dbb0	ldp	x24, x23, [sp, #0x50]
000000000001dbb4	ldp	x26, x25, [sp, #0x40]
000000000001dbb8	ldp	x28, x27, [sp, #0x30]
000000000001dbbc	add	sp, sp, #0x90
000000000001dbc0	ret
000000000001dbc4	ldr	x8, [x24, #0x118]
000000000001dbc8	add	x0, x8, #0x70
000000000001dbcc	mov	w1, #0x38
000000000001dbd0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001dbd4	mov	x19, x0
000000000001dbd8	adr	x8, #0x43628
000000000001dbdc	nop
000000000001dbe0	str	x8, [x19, #0x10]!
000000000001dbe4	stur	xzr, [x19, #-0x8]
000000000001dbe8	str	x19, [sp, #0x18]
000000000001dbec	mov	x0, x19
000000000001dbf0	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001dbf4	mov	x0, x19
000000000001dbf8	bl	_ThrowException
000000000001dbfc	bl	_ThrowArrayIndexOutOfBoundsException
000000000001dc00	mov	x0, x22
000000000001dc04	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000001dc08	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000001dc0c	str	xzr, [sp, #0x20]
000000000001dc10	stlr	xzr, [x25]
000000000001dc14	ldr	x8, [x24, #0x128]
000000000001dc18	sub	x8, x8, #0x10
000000000001dc1c	str	x8, [x24, #0x128]
000000000001dc20	bl	0x5535c ; symbol stub for: ___cxa_rethrow
000000000001dc24	brk	#0x1
000000000001dc28	mov	x19, x0
000000000001dc2c	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000001dc30	mov	x0, x19
000000000001dc34	bl	0x55194 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.collections.State.$OBJECT.<init>#internal:
000000000001dc38	sub	sp, sp, #0x1b0
000000000001dc3c	stp	x24, x23, [sp, #0x170]
000000000001dc40	stp	x22, x21, [sp, #0x180]
000000000001dc44	stp	x20, x19, [sp, #0x190]
000000000001dc48	stp	x29, x30, [sp, #0x1a0]
000000000001dc4c	add	x29, sp, #0x1a0
000000000001dc50	mov	x19, x0
000000000001dc54	movi.16b	v0, #0x0
000000000001dc58	stp	q0, q0, [sp, #0x150]
000000000001dc5c	stp	q0, q0, [sp, #0x130]
000000000001dc60	stp	q0, q0, [sp, #0x110]
000000000001dc64	stp	q0, q0, [sp, #0xf0]
000000000001dc68	stp	q0, q0, [sp, #0xd0]
000000000001dc6c	stp	q0, q0, [sp, #0xb0]
000000000001dc70	stp	q0, q0, [sp, #0x90]
000000000001dc74	stp	q0, q0, [sp, #0x70]
000000000001dc78	stp	q0, q0, [sp, #0x50]
000000000001dc7c	stp	q0, q0, [sp, #0x30]
000000000001dc80	stp	q0, q0, [sp, #0x10]
000000000001dc84	str	q0, [sp]
000000000001dc88	mov	x8, sp
000000000001dc8c	add	x20, x8, #0x168
000000000001dc90	adrp	x0, 93 ; 0x7a000
000000000001dc94	add	x0, x0, #0x2c0
000000000001dc98	ldr	x9, [x0]
000000000001dc9c	blr	x9
000000000001dca0	ldr	x21, [x0]
000000000001dca4	ldr	x9, [x21, #0x110]
000000000001dca8	str	x8, [x21, #0x110]
000000000001dcac	mov	x8, #0x2e00000000
000000000001dcb0	stp	x9, x8, [sp, #0x8]
000000000001dcb4	adr	x8, #0x765d5
000000000001dcb8	nop
000000000001dcbc	ldarb	w8, [x8]
000000000001dcc0	tbz	w8, #0x0, 0x1dcc8
000000000001dcc4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001dcc8	ldr	x8, [x21, #0x118]
000000000001dccc	add	x0, x8, #0x70
000000000001dcd0	mov	w1, #0x20
000000000001dcd4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001dcd8	adr	x22, #0x470b8
000000000001dcdc	nop
000000000001dce0	str	x22, [x0, #0x10]!
000000000001dce4	stur	xzr, [x0, #-0x8]
000000000001dce8	stp	x0, x0, [sp, #0x18]
000000000001dcec	ldr	x8, [x21, #0x118]
000000000001dcf0	add	x0, x8, #0x70
000000000001dcf4	mov	w1, #0x20
000000000001dcf8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001dcfc	str	x22, [x0, #0x10]!
000000000001dd00	stur	xzr, [x0, #-0x8]
000000000001dd04	stp	x0, x0, [sp, #0x28]
000000000001dd08	ldr	x8, [x21, #0x118]
000000000001dd0c	add	x0, x8, #0x70
000000000001dd10	mov	w1, #0x20
000000000001dd14	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001dd18	str	x22, [x0, #0x10]!
000000000001dd1c	stur	xzr, [x0, #-0x8]
000000000001dd20	stp	x0, x0, [sp, #0x38]
000000000001dd24	ldr	x8, [x21, #0x118]
000000000001dd28	add	x0, x8, #0x70
000000000001dd2c	mov	w1, #0x20
000000000001dd30	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001dd34	str	x22, [x0, #0x10]!
000000000001dd38	stur	xzr, [x0, #-0x8]
000000000001dd3c	stp	x0, x0, [sp, #0x48]
000000000001dd40	ldr	x8, [x21, #0x118]
000000000001dd44	add	x0, x8, #0x70
000000000001dd48	mov	w1, #0x38
000000000001dd4c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001dd50	adr	x22, #0x42e30
000000000001dd54	nop
000000000001dd58	stp	x22, xzr, [x0, #0x10]!
000000000001dd5c	stur	xzr, [x0, #-0x8]
000000000001dd60	mov	w23, #0x4
000000000001dd64	str	w23, [x0, #0x8]
000000000001dd68	stp	x0, x0, [sp, #0x58]
000000000001dd6c	ldr	x8, [sp, #0x20]
000000000001dd70	stp	x0, x8, [sp, #0x68]
000000000001dd74	ldr	xzr, [x0]
000000000001dd78	str	x8, [x0, #0x10]
000000000001dd7c	ldr	x8, [sp, #0x60]
000000000001dd80	ldr	x9, [sp, #0x30]
000000000001dd84	stp	x8, x9, [sp, #0x78]
000000000001dd88	ldr	xzr, [x8]
000000000001dd8c	str	x9, [x8, #0x18]
000000000001dd90	ldr	x8, [sp, #0x60]
000000000001dd94	ldr	x9, [sp, #0x40]
000000000001dd98	stp	x8, x9, [sp, #0x88]
000000000001dd9c	ldr	xzr, [x8]
000000000001dda0	str	x9, [x8, #0x20]
000000000001dda4	ldr	x8, [sp, #0x60]
000000000001dda8	ldr	x9, [sp, #0x50]
000000000001ddac	stp	x8, x9, [sp, #0x98]
000000000001ddb0	ldr	xzr, [x8]
000000000001ddb4	str	x9, [x8, #0x28]
000000000001ddb8	ldr	x8, [sp, #0x60]
000000000001ddbc	str	x8, [sp, #0xa8]
000000000001ddc0	str	x8, [x19, #0x8]
000000000001ddc4	ldr	x9, [x8, #0x28]
000000000001ddc8	str	x9, [sp, #0xb0]
000000000001ddcc	adr	x10, #0x50ee4
000000000001ddd0	nop
000000000001ddd4	str	x10, [x9, #0x8]
000000000001ddd8	str	wzr, [x9, #0x10]
000000000001dddc	ldr	x9, [x8, #0x20]
000000000001dde0	str	x9, [sp, #0xb8]
000000000001dde4	adr	x10, #0x50eec
000000000001dde8	nop
000000000001ddec	str	x10, [x9, #0x8]
000000000001ddf0	mov	w10, #0x1
000000000001ddf4	str	w10, [x9, #0x10]
000000000001ddf8	ldr	x9, [x8, #0x10]
000000000001ddfc	str	x9, [sp, #0xc0]
000000000001de00	adr	x10, #0x50ef0
000000000001de04	nop
000000000001de08	str	x10, [x9, #0x8]
000000000001de0c	mov	w10, #0x2
000000000001de10	str	w10, [x9, #0x10]
000000000001de14	ldr	x8, [x8, #0x18]
000000000001de18	str	x8, [sp, #0xc8]
000000000001de1c	adr	x9, #0x50ef4
000000000001de20	nop
000000000001de24	str	x9, [x8, #0x8]
000000000001de28	mov	w9, #0x3
000000000001de2c	str	w9, [x8, #0x10]
000000000001de30	ldr	x8, [x19, #0x8]
000000000001de34	ldr	x9, [x8, #0x28]
000000000001de38	stp	x9, x9, [sp, #0xd0]
000000000001de3c	ldr	x9, [x8, #0x20]
000000000001de40	stp	x9, x9, [sp, #0xe0]
000000000001de44	ldr	x9, [x8, #0x10]
000000000001de48	stp	x9, x9, [sp, #0xf0]
000000000001de4c	ldr	x8, [x8, #0x18]
000000000001de50	stp	x8, x8, [sp, #0x100]
000000000001de54	ldr	x8, [x21, #0x118]
000000000001de58	add	x0, x8, #0x70
000000000001de5c	mov	w1, #0x38
000000000001de60	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001de64	stp	x22, xzr, [x0, #0x10]!
000000000001de68	stur	xzr, [x0, #-0x8]
000000000001de6c	str	w23, [x0, #0x8]
000000000001de70	stp	x0, x0, [sp, #0x110]
000000000001de74	ldr	x8, [sp, #0xd8]
000000000001de78	stp	x0, x8, [sp, #0x120]
000000000001de7c	ldr	xzr, [x0]
000000000001de80	str	x8, [x0, #0x10]
000000000001de84	ldr	x8, [sp, #0x118]
000000000001de88	ldr	x9, [sp, #0xe8]
000000000001de8c	stp	x8, x9, [sp, #0x130]
000000000001de90	ldr	xzr, [x8]
000000000001de94	str	x9, [x8, #0x18]
000000000001de98	ldr	x8, [sp, #0x118]
000000000001de9c	ldr	x9, [sp, #0xf8]
000000000001dea0	stp	x8, x9, [sp, #0x140]
000000000001dea4	ldr	xzr, [x8]
000000000001dea8	str	x9, [x8, #0x20]
000000000001deac	ldr	x8, [sp, #0x118]
000000000001deb0	ldr	x9, [sp, #0x108]
000000000001deb4	stp	x8, x9, [sp, #0x150]
000000000001deb8	ldr	xzr, [x8]
000000000001debc	str	x9, [x8, #0x28]
000000000001dec0	ldr	x0, [sp, #0x118]
000000000001dec4	str	x0, [sp, #0x160]
000000000001dec8	mov	x1, x20
000000000001decc	bl	"_kfun:kotlin.enums#enumEntries(kotlin.Array<0:0>){0§<kotlin.Enum<0:0>>}kotlin.enums.EnumEntries<0:0>"
000000000001ded0	str	x0, [x19, #0x10]
000000000001ded4	ldr	x8, [sp, #0x8]
000000000001ded8	str	x8, [x21, #0x110]
000000000001dedc	ldp	x29, x30, [sp, #0x1a0]
000000000001dee0	ldp	x20, x19, [sp, #0x190]
000000000001dee4	ldp	x22, x21, [sp, #0x180]
000000000001dee8	ldp	x24, x23, [sp, #0x170]
000000000001deec	add	sp, sp, #0x1b0
000000000001def0	ret
_kfun:kotlin.collections.AbstractList#iterator(){}kotlin.collections.Iterator<1:0>:
000000000001def4	stp	x20, x19, [sp, #-0x20]!
000000000001def8	stp	x29, x30, [sp, #0x10]
000000000001defc	add	x29, sp, #0x10
000000000001df00	mov	x19, x1
000000000001df04	mov	x20, x0
000000000001df08	adr	x8, #0x76381
000000000001df0c	nop
000000000001df10	ldarb	w8, [x8]
000000000001df14	tbz	w8, #0x0, 0x1df1c
000000000001df18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001df1c	adrp	x0, 93 ; 0x7a000
000000000001df20	add	x0, x0, #0x2c0
000000000001df24	ldr	x8, [x0]
000000000001df28	blr	x8
000000000001df2c	ldr	x8, [x0]
000000000001df30	ldr	x8, [x8, #0x118]
000000000001df34	add	x0, x8, #0x70
000000000001df38	mov	w1, #0x20
000000000001df3c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001df40	adr	x8, #0x470d0
000000000001df44	nop
000000000001df48	str	x8, [x0, #0x10]!
000000000001df4c	stur	xzr, [x0, #-0x8]
000000000001df50	str	x0, [x19]
000000000001df54	str	x20, [x0, #0x8]
000000000001df58	str	x0, [x19]
000000000001df5c	ldp	x29, x30, [sp, #0x10]
000000000001df60	ldp	x20, x19, [sp], #0x20
000000000001df64	ret
_kfun:kotlin.collections.AbstractList#indexOf(1:0){}kotlin.Int:
000000000001df68	sub	sp, sp, #0x80
000000000001df6c	stp	x26, x25, [sp, #0x30]
000000000001df70	stp	x24, x23, [sp, #0x40]
000000000001df74	stp	x22, x21, [sp, #0x50]
000000000001df78	stp	x20, x19, [sp, #0x60]
000000000001df7c	stp	x29, x30, [sp, #0x70]
000000000001df80	add	x29, sp, #0x70
000000000001df84	mov	x19, x1
000000000001df88	mov	x21, x0
000000000001df8c	movi.16b	v0, #0x0
000000000001df90	stp	q0, q0, [sp]
000000000001df94	str	xzr, [sp, #0x20]
000000000001df98	mov	x20, sp
000000000001df9c	add	x22, x20, #0x18
000000000001dfa0	adrp	x0, 93 ; 0x7a000
000000000001dfa4	add	x0, x0, #0x2c0
000000000001dfa8	ldr	x8, [x0]
000000000001dfac	blr	x8
000000000001dfb0	ldr	x23, [x0]
000000000001dfb4	ldr	x8, [x23, #0x110]
000000000001dfb8	str	x20, [x23, #0x110]
000000000001dfbc	mov	x9, #0x500000000
000000000001dfc0	stp	x8, x9, [sp, #0x8]
000000000001dfc4	adr	x24, #0x762c5
000000000001dfc8	nop
000000000001dfcc	ldarb	w8, [x24]
000000000001dfd0	tbz	w8, #0x0, 0x1dfd8
000000000001dfd4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001dfd8	add	x20, x20, #0x20
000000000001dfdc	ldr	x8, [x21]
000000000001dfe0	and	x8, x8, #0xfffffffffffffffc
000000000001dfe4	ldr	x8, [x8]
000000000001dfe8	ldr	w9, [x8, #0x3c]
000000000001dfec	ldr	x8, [x8, #0x40]
000000000001dff0	tbnz	w9, #0x1f, 0x1e000
000000000001dff4	mov	w10, #0x2b
000000000001dff8	and	x9, x9, x10
000000000001dffc	b	0x1e084
000000000001e000	neg	w10, w9
000000000001e004	mvn	w9, w9
000000000001e008	cmp	w10, #0x9
000000000001e00c	b.ge	0x1e044
000000000001e010	cmp	w10, #0x2
000000000001e014	b.lt	0x1e078
000000000001e018	mov	x10, #0x0
000000000001e01c	mov	x11, x8
000000000001e020	ldr	w12, [x11]
000000000001e024	cmp	w12, #0x2a
000000000001e028	b.gt	0x1e080
000000000001e02c	add	x10, x10, #0x1
000000000001e030	add	x11, x11, #0x10
000000000001e034	cmp	x9, x10
000000000001e038	b.ne	0x1e020
000000000001e03c	mov	x10, x9
000000000001e040	b	0x1e080
000000000001e044	mov	w10, #0x0
000000000001e048	add	w11, w9, w10
000000000001e04c	cmp	w11, #0x0
000000000001e050	cinc	w11, w11, lt
000000000001e054	asr	w11, w11, #1
000000000001e058	sbfiz	x12, x11, #4, #32
000000000001e05c	ldr	w12, [x8, x12]
000000000001e060	cmp	w12, #0x2b
000000000001e064	csinc	w10, w10, w11, ge
000000000001e068	csel	w9, w9, w11, lt
000000000001e06c	cmp	w10, w9
000000000001e070	b.lt	0x1e048
000000000001e074	b	0x1e080
000000000001e078	mov	w10, #0x0
000000000001e07c	b	0x1e080
000000000001e080	sxtw	x9, w10
000000000001e084	add	x8, x8, x9, lsl #4
000000000001e088	ldr	x8, [x8, #0x8]
000000000001e08c	ldr	x8, [x8, #0x30]
000000000001e090	mov	x0, x21
000000000001e094	mov	x1, x22
000000000001e098	blr	x8
000000000001e09c	mov	x22, x0
000000000001e0a0	mov	w21, #0x0
000000000001e0a4	mov	w25, #0xa0
000000000001e0a8	b	0x1e0b4
000000000001e0ac	cbz	x19, 0x1e278
000000000001e0b0	add	w21, w21, #0x1
000000000001e0b4	ldr	x8, [x22]
000000000001e0b8	and	x8, x8, #0xfffffffffffffffc
000000000001e0bc	ldr	x8, [x8]
000000000001e0c0	ldr	w9, [x8, #0x3c]
000000000001e0c4	ldr	x8, [x8, #0x40]
000000000001e0c8	tbnz	w9, #0x1f, 0x1e0ec
000000000001e0cc	and	x9, x9, x25
000000000001e0d0	add	x8, x8, x9, lsl #4
000000000001e0d4	ldr	x8, [x8, #0x8]
000000000001e0d8	ldr	x8, [x8]
000000000001e0dc	mov	x0, x22
000000000001e0e0	blr	x8
000000000001e0e4	tbnz	w0, #0x0, 0x1e188
000000000001e0e8	b	0x1e274
000000000001e0ec	neg	w10, w9
000000000001e0f0	mvn	w9, w9
000000000001e0f4	cmp	w10, #0x9
000000000001e0f8	b.ge	0x1e130
000000000001e0fc	cmp	w10, #0x2
000000000001e100	b.lt	0x1e164
000000000001e104	mov	x10, #0x0
000000000001e108	mov	x11, x8
000000000001e10c	ldr	w12, [x11]
000000000001e110	cmp	w12, #0x9f
000000000001e114	b.gt	0x1e16c
000000000001e118	add	x10, x10, #0x1
000000000001e11c	add	x11, x11, #0x10
000000000001e120	cmp	x9, x10
000000000001e124	b.ne	0x1e10c
000000000001e128	mov	x10, x9
000000000001e12c	b	0x1e16c
000000000001e130	mov	w10, #0x0
000000000001e134	add	w11, w9, w10
000000000001e138	cmp	w11, #0x0
000000000001e13c	cinc	w11, w11, lt
000000000001e140	asr	w11, w11, #1
000000000001e144	sbfiz	x12, x11, #4, #32
000000000001e148	ldr	w12, [x8, x12]
000000000001e14c	cmp	w12, #0xa0
000000000001e150	csinc	w10, w10, w11, ge
000000000001e154	csel	w9, w9, w11, lt
000000000001e158	cmp	w10, w9
000000000001e15c	b.lt	0x1e134
000000000001e160	b	0x1e16c
000000000001e164	mov	w10, #0x0
000000000001e168	b	0x1e16c
000000000001e16c	sxtw	x9, w10
000000000001e170	add	x8, x8, x9, lsl #4
000000000001e174	ldr	x8, [x8, #0x8]
000000000001e178	ldr	x8, [x8]
000000000001e17c	mov	x0, x22
000000000001e180	blr	x8
000000000001e184	tbz	w0, #0x0, 0x1e274
000000000001e188	ldarb	w8, [x24]
000000000001e18c	tbz	w8, #0x0, 0x1e194
000000000001e190	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e194	ldr	x8, [x22]
000000000001e198	and	x8, x8, #0xfffffffffffffffc
000000000001e19c	ldr	x8, [x8]
000000000001e1a0	ldr	w9, [x8, #0x3c]
000000000001e1a4	ldr	x8, [x8, #0x40]
000000000001e1a8	tbnz	w9, #0x1f, 0x1e1b4
000000000001e1ac	and	x9, x9, x25
000000000001e1b0	b	0x1e238
000000000001e1b4	neg	w10, w9
000000000001e1b8	mvn	w9, w9
000000000001e1bc	cmp	w10, #0x9
000000000001e1c0	b.ge	0x1e1f8
000000000001e1c4	cmp	w10, #0x2
000000000001e1c8	b.lt	0x1e22c
000000000001e1cc	mov	x10, #0x0
000000000001e1d0	mov	x11, x8
000000000001e1d4	ldr	w12, [x11]
000000000001e1d8	cmp	w12, #0x9f
000000000001e1dc	b.gt	0x1e234
000000000001e1e0	add	x10, x10, #0x1
000000000001e1e4	add	x11, x11, #0x10
000000000001e1e8	cmp	x9, x10
000000000001e1ec	b.ne	0x1e1d4
000000000001e1f0	mov	x10, x9
000000000001e1f4	b	0x1e234
000000000001e1f8	mov	w10, #0x0
000000000001e1fc	add	w11, w9, w10
000000000001e200	cmp	w11, #0x0
000000000001e204	cinc	w11, w11, lt
000000000001e208	asr	w11, w11, #1
000000000001e20c	sbfiz	x12, x11, #4, #32
000000000001e210	ldr	w12, [x8, x12]
000000000001e214	cmp	w12, #0xa0
000000000001e218	csinc	w10, w10, w11, ge
000000000001e21c	csel	w9, w9, w11, lt
000000000001e220	cmp	w10, w9
000000000001e224	b.lt	0x1e1fc
000000000001e228	b	0x1e234
000000000001e22c	mov	w10, #0x0
000000000001e230	b	0x1e234
000000000001e234	sxtw	x9, w10
000000000001e238	add	x8, x8, x9, lsl #4
000000000001e23c	ldr	x8, [x8, #0x8]
000000000001e240	ldr	x8, [x8, #0x8]
000000000001e244	mov	x0, x22
000000000001e248	mov	x1, x20
000000000001e24c	blr	x8
000000000001e250	cbz	x0, 0x1e0ac
000000000001e254	ldr	x8, [x0]
000000000001e258	and	x8, x8, #0xfffffffffffffffc
000000000001e25c	ldr	x8, [x8]
000000000001e260	ldr	x8, [x8, #0x70]
000000000001e264	mov	x1, x19
000000000001e268	blr	x8
000000000001e26c	tbz	w0, #0x0, 0x1e0b0
000000000001e270	b	0x1e278
000000000001e274	mov	w21, #-0x1
000000000001e278	ldr	x8, [sp, #0x8]
000000000001e27c	str	x8, [x23, #0x110]
000000000001e280	mov	x0, x21
000000000001e284	ldp	x29, x30, [sp, #0x70]
000000000001e288	ldp	x20, x19, [sp, #0x60]
000000000001e28c	ldp	x22, x21, [sp, #0x50]
000000000001e290	ldp	x24, x23, [sp, #0x40]
000000000001e294	ldp	x26, x25, [sp, #0x30]
000000000001e298	add	sp, sp, #0x80
000000000001e29c	ret
_kfun:kotlin.collections.AbstractList#lastIndexOf(1:0){}kotlin.Int:
000000000001e2a0	sub	sp, sp, #0x70
000000000001e2a4	stp	x24, x23, [sp, #0x30]
000000000001e2a8	stp	x22, x21, [sp, #0x40]
000000000001e2ac	stp	x20, x19, [sp, #0x50]
000000000001e2b0	stp	x29, x30, [sp, #0x60]
000000000001e2b4	add	x29, sp, #0x60
000000000001e2b8	mov	x19, x1
000000000001e2bc	mov	x21, x0
000000000001e2c0	movi.16b	v0, #0x0
000000000001e2c4	stp	q0, q0, [sp]
000000000001e2c8	str	xzr, [sp, #0x20]
000000000001e2cc	mov	x20, sp
000000000001e2d0	adrp	x0, 92 ; 0x7a000
000000000001e2d4	add	x0, x0, #0x2c0
000000000001e2d8	ldr	x8, [x0]
000000000001e2dc	blr	x8
000000000001e2e0	ldr	x23, [x0]
000000000001e2e4	ldr	x8, [x23, #0x110]
000000000001e2e8	str	x20, [x23, #0x110]
000000000001e2ec	mov	x9, #0x500000000
000000000001e2f0	stp	x8, x9, [sp, #0x8]
000000000001e2f4	adr	x24, #0x75f95
000000000001e2f8	nop
000000000001e2fc	ldarb	w8, [x24]
000000000001e300	tbz	w8, #0x0, 0x1e308
000000000001e304	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e308	add	x22, x20, #0x18
000000000001e30c	ldr	x8, [x21]
000000000001e310	and	x8, x8, #0xfffffffffffffffc
000000000001e314	ldr	x8, [x8]
000000000001e318	ldr	w9, [x8, #0x3c]
000000000001e31c	ldr	x8, [x8, #0x40]
000000000001e320	tbnz	w9, #0x1f, 0x1e330
000000000001e324	mov	w10, #0x2b
000000000001e328	and	x9, x9, x10
000000000001e32c	b	0x1e3b4
000000000001e330	neg	w10, w9
000000000001e334	mvn	w9, w9
000000000001e338	cmp	w10, #0x9
000000000001e33c	b.ge	0x1e374
000000000001e340	cmp	w10, #0x2
000000000001e344	b.lt	0x1e3a8
000000000001e348	mov	x10, #0x0
000000000001e34c	mov	x11, x8
000000000001e350	ldr	w12, [x11]
000000000001e354	cmp	w12, #0x2a
000000000001e358	b.gt	0x1e3b0
000000000001e35c	add	x10, x10, #0x1
000000000001e360	add	x11, x11, #0x10
000000000001e364	cmp	x9, x10
000000000001e368	b.ne	0x1e350
000000000001e36c	mov	x10, x9
000000000001e370	b	0x1e3b0
000000000001e374	mov	w10, #0x0
000000000001e378	add	w11, w9, w10
000000000001e37c	cmp	w11, #0x0
000000000001e380	cinc	w11, w11, lt
000000000001e384	asr	w11, w11, #1
000000000001e388	sbfiz	x12, x11, #4, #32
000000000001e38c	ldr	w12, [x8, x12]
000000000001e390	cmp	w12, #0x2b
000000000001e394	csinc	w10, w10, w11, ge
000000000001e398	csel	w9, w9, w11, lt
000000000001e39c	cmp	w10, w9
000000000001e3a0	b.lt	0x1e378
000000000001e3a4	b	0x1e3b0
000000000001e3a8	mov	w10, #0x0
000000000001e3ac	b	0x1e3b0
000000000001e3b0	sxtw	x9, w10
000000000001e3b4	add	x20, x20, #0x20
000000000001e3b8	add	x8, x8, x9, lsl #4
000000000001e3bc	ldr	x8, [x8, #0x8]
000000000001e3c0	ldr	x8, [x8]
000000000001e3c4	mov	x0, x21
000000000001e3c8	blr	x8
000000000001e3cc	mov	x1, x0
000000000001e3d0	ldr	x8, [x21]
000000000001e3d4	and	x8, x8, #0xfffffffffffffffc
000000000001e3d8	ldr	x8, [x8]
000000000001e3dc	ldr	w9, [x8, #0x3c]
000000000001e3e0	ldr	x8, [x8, #0x40]
000000000001e3e4	tbnz	w9, #0x1f, 0x1e3f4
000000000001e3e8	mov	w10, #0x2b
000000000001e3ec	and	x9, x9, x10
000000000001e3f0	b	0x1e478
000000000001e3f4	neg	w10, w9
000000000001e3f8	mvn	w9, w9
000000000001e3fc	cmp	w10, #0x9
000000000001e400	b.ge	0x1e438
000000000001e404	cmp	w10, #0x2
000000000001e408	b.lt	0x1e46c
000000000001e40c	mov	x10, #0x0
000000000001e410	mov	x11, x8
000000000001e414	ldr	w12, [x11]
000000000001e418	cmp	w12, #0x2a
000000000001e41c	b.gt	0x1e474
000000000001e420	add	x10, x10, #0x1
000000000001e424	add	x11, x11, #0x10
000000000001e428	cmp	x9, x10
000000000001e42c	b.ne	0x1e414
000000000001e430	mov	x10, x9
000000000001e434	b	0x1e474
000000000001e438	mov	w10, #0x0
000000000001e43c	add	w11, w9, w10
000000000001e440	cmp	w11, #0x0
000000000001e444	cinc	w11, w11, lt
000000000001e448	asr	w11, w11, #1
000000000001e44c	sbfiz	x12, x11, #4, #32
000000000001e450	ldr	w12, [x8, x12]
000000000001e454	cmp	w12, #0x2b
000000000001e458	csinc	w10, w10, w11, ge
000000000001e45c	csel	w9, w9, w11, lt
000000000001e460	cmp	w10, w9
000000000001e464	b.lt	0x1e43c
000000000001e468	b	0x1e474
000000000001e46c	mov	w10, #0x0
000000000001e470	b	0x1e474
000000000001e474	sxtw	x9, w10
000000000001e478	add	x8, x8, x9, lsl #4
000000000001e47c	ldr	x8, [x8, #0x8]
000000000001e480	ldr	x8, [x8, #0x48]
000000000001e484	mov	x0, x21
000000000001e488	mov	x2, x22
000000000001e48c	blr	x8
000000000001e490	mov	x21, x0
000000000001e494	mov	w22, #0x1a
000000000001e498	b	0x1e4a0
000000000001e49c	cbz	x19, 0x1e65c
000000000001e4a0	ldr	x8, [x21]
000000000001e4a4	and	x8, x8, #0xfffffffffffffffc
000000000001e4a8	ldr	x8, [x8]
000000000001e4ac	ldr	w9, [x8, #0x3c]
000000000001e4b0	ldr	x8, [x8, #0x40]
000000000001e4b4	tbnz	w9, #0x1f, 0x1e4d8
000000000001e4b8	and	x9, x9, x22
000000000001e4bc	add	x8, x8, x9, lsl #4
000000000001e4c0	ldr	x8, [x8, #0x8]
000000000001e4c4	ldr	x8, [x8, #0x8]
000000000001e4c8	mov	x0, x21
000000000001e4cc	blr	x8
000000000001e4d0	tbnz	w0, #0x0, 0x1e574
000000000001e4d4	b	0x1e680
000000000001e4d8	neg	w10, w9
000000000001e4dc	mvn	w9, w9
000000000001e4e0	cmp	w10, #0x9
000000000001e4e4	b.ge	0x1e51c
000000000001e4e8	cmp	w10, #0x2
000000000001e4ec	b.lt	0x1e550
000000000001e4f0	mov	x10, #0x0
000000000001e4f4	mov	x11, x8
000000000001e4f8	ldr	w12, [x11]
000000000001e4fc	cmp	w12, #0x19
000000000001e500	b.gt	0x1e558
000000000001e504	add	x10, x10, #0x1
000000000001e508	add	x11, x11, #0x10
000000000001e50c	cmp	x9, x10
000000000001e510	b.ne	0x1e4f8
000000000001e514	mov	x10, x9
000000000001e518	b	0x1e558
000000000001e51c	mov	w10, #0x0
000000000001e520	add	w11, w9, w10
000000000001e524	cmp	w11, #0x0
000000000001e528	cinc	w11, w11, lt
000000000001e52c	asr	w11, w11, #1
000000000001e530	sbfiz	x12, x11, #4, #32
000000000001e534	ldr	w12, [x8, x12]
000000000001e538	cmp	w12, #0x1a
000000000001e53c	csinc	w10, w10, w11, ge
000000000001e540	csel	w9, w9, w11, lt
000000000001e544	cmp	w10, w9
000000000001e548	b.lt	0x1e520
000000000001e54c	b	0x1e558
000000000001e550	mov	w10, #0x0
000000000001e554	b	0x1e558
000000000001e558	sxtw	x9, w10
000000000001e55c	add	x8, x8, x9, lsl #4
000000000001e560	ldr	x8, [x8, #0x8]
000000000001e564	ldr	x8, [x8, #0x8]
000000000001e568	mov	x0, x21
000000000001e56c	blr	x8
000000000001e570	tbz	w0, #0x0, 0x1e680
000000000001e574	ldarb	w8, [x24]
000000000001e578	tbz	w8, #0x0, 0x1e580
000000000001e57c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e580	ldr	x8, [x21]
000000000001e584	and	x8, x8, #0xfffffffffffffffc
000000000001e588	ldr	x8, [x8]
000000000001e58c	ldr	w9, [x8, #0x3c]
000000000001e590	ldr	x8, [x8, #0x40]
000000000001e594	tbnz	w9, #0x1f, 0x1e5a0
000000000001e598	and	x9, x9, x22
000000000001e59c	b	0x1e624
000000000001e5a0	neg	w10, w9
000000000001e5a4	mvn	w9, w9
000000000001e5a8	cmp	w10, #0x9
000000000001e5ac	b.ge	0x1e5e4
000000000001e5b0	cmp	w10, #0x2
000000000001e5b4	b.lt	0x1e618
000000000001e5b8	mov	x10, #0x0
000000000001e5bc	mov	x11, x8
000000000001e5c0	ldr	w12, [x11]
000000000001e5c4	cmp	w12, #0x19
000000000001e5c8	b.gt	0x1e620
000000000001e5cc	add	x10, x10, #0x1
000000000001e5d0	add	x11, x11, #0x10
000000000001e5d4	cmp	x9, x10
000000000001e5d8	b.ne	0x1e5c0
000000000001e5dc	mov	x10, x9
000000000001e5e0	b	0x1e620
000000000001e5e4	mov	w10, #0x0
000000000001e5e8	add	w11, w9, w10
000000000001e5ec	cmp	w11, #0x0
000000000001e5f0	cinc	w11, w11, lt
000000000001e5f4	asr	w11, w11, #1
000000000001e5f8	sbfiz	x12, x11, #4, #32
000000000001e5fc	ldr	w12, [x8, x12]
000000000001e600	cmp	w12, #0x1a
000000000001e604	csinc	w10, w10, w11, ge
000000000001e608	csel	w9, w9, w11, lt
000000000001e60c	cmp	w10, w9
000000000001e610	b.lt	0x1e5e8
000000000001e614	b	0x1e620
000000000001e618	mov	w10, #0x0
000000000001e61c	b	0x1e620
000000000001e620	sxtw	x9, w10
000000000001e624	add	x8, x8, x9, lsl #4
000000000001e628	ldr	x8, [x8, #0x8]
000000000001e62c	ldr	x8, [x8, #0x20]
000000000001e630	mov	x0, x21
000000000001e634	mov	x1, x20
000000000001e638	blr	x8
000000000001e63c	cbz	x0, 0x1e49c
000000000001e640	ldr	x8, [x0]
000000000001e644	and	x8, x8, #0xfffffffffffffffc
000000000001e648	ldr	x8, [x8]
000000000001e64c	ldr	x8, [x8, #0x70]
000000000001e650	mov	x1, x19
000000000001e654	blr	x8
000000000001e658	tbz	w0, #0x0, 0x1e4a0
000000000001e65c	ldr	x8, [x21]
000000000001e660	and	x8, x8, #0xfffffffffffffffc
000000000001e664	ldr	x8, [x8]
000000000001e668	ldr	w9, [x8, #0x3c]
000000000001e66c	ldr	x8, [x8, #0x40]
000000000001e670	tbnz	w9, #0x1f, 0x1e688
000000000001e674	mov	w10, #0x1a
000000000001e678	and	x9, x9, x10
000000000001e67c	b	0x1e70c
000000000001e680	mov	w0, #-0x1
000000000001e684	b	0x1e720
000000000001e688	neg	w10, w9
000000000001e68c	mvn	w9, w9
000000000001e690	cmp	w10, #0x9
000000000001e694	b.ge	0x1e6cc
000000000001e698	cmp	w10, #0x2
000000000001e69c	b.lt	0x1e700
000000000001e6a0	mov	x10, #0x0
000000000001e6a4	mov	x11, x8
000000000001e6a8	ldr	w12, [x11]
000000000001e6ac	cmp	w12, #0x19
000000000001e6b0	b.gt	0x1e708
000000000001e6b4	add	x10, x10, #0x1
000000000001e6b8	add	x11, x11, #0x10
000000000001e6bc	cmp	x9, x10
000000000001e6c0	b.ne	0x1e6a8
000000000001e6c4	mov	x10, x9
000000000001e6c8	b	0x1e708
000000000001e6cc	mov	w10, #0x0
000000000001e6d0	add	w11, w9, w10
000000000001e6d4	cmp	w11, #0x0
000000000001e6d8	cinc	w11, w11, lt
000000000001e6dc	asr	w11, w11, #1
000000000001e6e0	sbfiz	x12, x11, #4, #32
000000000001e6e4	ldr	w12, [x8, x12]
000000000001e6e8	cmp	w12, #0x1a
000000000001e6ec	csinc	w10, w10, w11, ge
000000000001e6f0	csel	w9, w9, w11, lt
000000000001e6f4	cmp	w10, w9
000000000001e6f8	b.lt	0x1e6d0
000000000001e6fc	b	0x1e708
000000000001e700	mov	w10, #0x0
000000000001e704	b	0x1e708
000000000001e708	sxtw	x9, w10
000000000001e70c	add	x8, x8, x9, lsl #4
000000000001e710	ldr	x8, [x8, #0x8]
000000000001e714	ldr	x8, [x8, #0x18]
000000000001e718	mov	x0, x21
000000000001e71c	blr	x8
000000000001e720	ldr	x8, [sp, #0x8]
000000000001e724	str	x8, [x23, #0x110]
000000000001e728	ldp	x29, x30, [sp, #0x60]
000000000001e72c	ldp	x20, x19, [sp, #0x50]
000000000001e730	ldp	x22, x21, [sp, #0x40]
000000000001e734	ldp	x24, x23, [sp, #0x30]
000000000001e738	add	sp, sp, #0x70
000000000001e73c	ret
_kfun:kotlin.collections.AbstractList#listIterator(){}kotlin.collections.ListIterator<1:0>:
000000000001e740	stp	x22, x21, [sp, #-0x30]!
000000000001e744	stp	x20, x19, [sp, #0x10]
000000000001e748	stp	x29, x30, [sp, #0x20]
000000000001e74c	add	x29, sp, #0x20
000000000001e750	mov	x19, x1
000000000001e754	mov	x20, x0
000000000001e758	adr	x8, #0x75b31
000000000001e75c	nop
000000000001e760	ldarb	w8, [x8]
000000000001e764	tbz	w8, #0x0, 0x1e76c
000000000001e768	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e76c	adrp	x0, 92 ; 0x7a000
000000000001e770	add	x0, x0, #0x2c0
000000000001e774	ldr	x8, [x0]
000000000001e778	blr	x8
000000000001e77c	ldr	x8, [x0]
000000000001e780	ldr	x8, [x8, #0x118]
000000000001e784	add	x0, x8, #0x70
000000000001e788	mov	w1, #0x28
000000000001e78c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001e790	mov	x21, x0
000000000001e794	adr	x8, #0x4691c
000000000001e798	nop
000000000001e79c	str	x8, [x21, #0x10]!
000000000001e7a0	stur	xzr, [x21, #-0x8]
000000000001e7a4	str	x21, [x19]
000000000001e7a8	str	x20, [x21, #0x18]
000000000001e7ac	str	x20, [x21, #0x8]
000000000001e7b0	ldr	x8, [x20]
000000000001e7b4	and	x8, x8, #0xfffffffffffffffc
000000000001e7b8	ldr	x8, [x8]
000000000001e7bc	ldr	x8, [x8, #0x88]
000000000001e7c0	mov	x0, x20
000000000001e7c4	blr	x8
000000000001e7c8	mov	x1, x0
000000000001e7cc	mov	w0, #0x0
000000000001e7d0	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
000000000001e7d4	str	wzr, [x21, #0x10]
000000000001e7d8	str	x21, [x19]
000000000001e7dc	mov	x0, x21
000000000001e7e0	ldp	x29, x30, [sp, #0x20]
000000000001e7e4	ldp	x20, x19, [sp, #0x10]
000000000001e7e8	ldp	x22, x21, [sp], #0x30
000000000001e7ec	ret
_kfun:kotlin.collections.AbstractList#listIterator(kotlin.Int){}kotlin.collections.ListIterator<1:0>:
000000000001e7f0	stp	x22, x21, [sp, #-0x30]!
000000000001e7f4	stp	x20, x19, [sp, #0x10]
000000000001e7f8	stp	x29, x30, [sp, #0x20]
000000000001e7fc	add	x29, sp, #0x20
000000000001e800	mov	x19, x2
000000000001e804	mov	x20, x1
000000000001e808	mov	x21, x0
000000000001e80c	adr	x8, #0x75a7d
000000000001e810	nop
000000000001e814	ldarb	w8, [x8]
000000000001e818	tbz	w8, #0x0, 0x1e820
000000000001e81c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e820	adrp	x0, 92 ; 0x7a000
000000000001e824	add	x0, x0, #0x2c0
000000000001e828	ldr	x8, [x0]
000000000001e82c	blr	x8
000000000001e830	ldr	x8, [x0]
000000000001e834	ldr	x8, [x8, #0x118]
000000000001e838	add	x0, x8, #0x70
000000000001e83c	mov	w1, #0x28
000000000001e840	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001e844	mov	x22, x0
000000000001e848	adr	x8, #0x46868
000000000001e84c	nop
000000000001e850	str	x8, [x22, #0x10]!
000000000001e854	stur	xzr, [x22, #-0x8]
000000000001e858	str	x22, [x19]
000000000001e85c	str	x21, [x22, #0x18]
000000000001e860	str	x21, [x22, #0x8]
000000000001e864	ldr	x8, [x21]
000000000001e868	and	x8, x8, #0xfffffffffffffffc
000000000001e86c	ldr	x8, [x8]
000000000001e870	ldr	x8, [x8, #0x88]
000000000001e874	mov	x0, x21
000000000001e878	blr	x8
000000000001e87c	mov	x1, x0
000000000001e880	mov	x0, x20
000000000001e884	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
000000000001e888	str	w20, [x22, #0x10]
000000000001e88c	str	x22, [x19]
000000000001e890	mov	x0, x22
000000000001e894	ldp	x29, x30, [sp, #0x20]
000000000001e898	ldp	x20, x19, [sp, #0x10]
000000000001e89c	ldp	x22, x21, [sp], #0x30
000000000001e8a0	ret
_kfun:kotlin.collections.AbstractList#subList(kotlin.Int;kotlin.Int){}kotlin.collections.List<1:0>:
000000000001e8a4	stp	x24, x23, [sp, #-0x40]!
000000000001e8a8	stp	x22, x21, [sp, #0x10]
000000000001e8ac	stp	x20, x19, [sp, #0x20]
000000000001e8b0	stp	x29, x30, [sp, #0x30]
000000000001e8b4	add	x29, sp, #0x30
000000000001e8b8	mov	x19, x3
000000000001e8bc	mov	x20, x2
000000000001e8c0	mov	x21, x1
000000000001e8c4	mov	x22, x0
000000000001e8c8	adr	x8, #0x759c1
000000000001e8cc	nop
000000000001e8d0	ldarb	w8, [x8]
000000000001e8d4	tbz	w8, #0x0, 0x1e8dc
000000000001e8d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e8dc	adrp	x0, 92 ; 0x7a000
000000000001e8e0	add	x0, x0, #0x2c0
000000000001e8e4	ldr	x8, [x0]
000000000001e8e8	blr	x8
000000000001e8ec	ldr	x8, [x0]
000000000001e8f0	ldr	x8, [x8, #0x118]
000000000001e8f4	add	x0, x8, #0x70
000000000001e8f8	mov	w1, #0x20
000000000001e8fc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001e900	mov	x23, x0
000000000001e904	adr	x8, #0x4661c
000000000001e908	nop
000000000001e90c	str	x8, [x23, #0x10]!
000000000001e910	stur	xzr, [x23, #-0x8]
000000000001e914	str	x23, [x19]
000000000001e918	str	x22, [x23, #0x8]
000000000001e91c	str	w21, [x23, #0x10]
000000000001e920	ldr	x8, [x22]
000000000001e924	and	x8, x8, #0xfffffffffffffffc
000000000001e928	ldr	x8, [x8]
000000000001e92c	ldr	x8, [x8, #0x88]
000000000001e930	mov	x0, x22
000000000001e934	blr	x8
000000000001e938	mov	x2, x0
000000000001e93c	mov	x0, x21
000000000001e940	mov	x1, x20
000000000001e944	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkRangeIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
000000000001e948	ldr	w8, [x23, #0x10]
000000000001e94c	sub	w8, w20, w8
000000000001e950	str	w8, [x23, #0x14]
000000000001e954	str	x23, [x19]
000000000001e958	mov	x0, x23
000000000001e95c	ldp	x29, x30, [sp, #0x30]
000000000001e960	ldp	x20, x19, [sp, #0x20]
000000000001e964	ldp	x22, x21, [sp, #0x10]
000000000001e968	ldp	x24, x23, [sp], #0x40
000000000001e96c	ret
_kfun:kotlin.collections.AbstractList.SubList.get#internal:
000000000001e970	stp	x22, x21, [sp, #-0x30]!
000000000001e974	stp	x20, x19, [sp, #0x10]
000000000001e978	stp	x29, x30, [sp, #0x20]
000000000001e97c	add	x29, sp, #0x20
000000000001e980	mov	x19, x2
000000000001e984	mov	x20, x1
000000000001e988	mov	x21, x0
000000000001e98c	adr	x8, #0x758fd
000000000001e990	nop
000000000001e994	ldarb	w8, [x8]
000000000001e998	tbz	w8, #0x0, 0x1e9a0
000000000001e99c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e9a0	ldr	w1, [x21, #0x14]
000000000001e9a4	mov	x0, x20
000000000001e9a8	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
000000000001e9ac	ldr	x0, [x21, #0x8]
000000000001e9b0	ldr	w8, [x21, #0x10]
000000000001e9b4	add	w1, w8, w20
000000000001e9b8	ldr	x8, [x0]
000000000001e9bc	and	x8, x8, #0xfffffffffffffffc
000000000001e9c0	ldr	x8, [x8]
000000000001e9c4	ldr	x8, [x8, #0xc0]
000000000001e9c8	mov	x2, x19
000000000001e9cc	blr	x8
000000000001e9d0	str	x0, [x19]
000000000001e9d4	ldp	x29, x30, [sp, #0x20]
000000000001e9d8	ldp	x20, x19, [sp, #0x10]
000000000001e9dc	ldp	x22, x21, [sp], #0x30
000000000001e9e0	ret
_kfun:kotlin.collections.AbstractList.SubList.<get-size>#internal:
000000000001e9e4	stp	x20, x19, [sp, #-0x20]!
000000000001e9e8	stp	x29, x30, [sp, #0x10]
000000000001e9ec	add	x29, sp, #0x10
000000000001e9f0	mov	x19, x0
000000000001e9f4	adr	x8, #0x75895
000000000001e9f8	nop
000000000001e9fc	ldarb	w8, [x8]
000000000001ea00	tbz	w8, #0x0, 0x1ea08
000000000001ea04	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ea08	ldr	w0, [x19, #0x14]
000000000001ea0c	ldp	x29, x30, [sp, #0x10]
000000000001ea10	ldp	x20, x19, [sp], #0x20
000000000001ea14	ret
_kfun:kotlin.collections.AbstractList#equals(kotlin.Any?){}kotlin.Boolean:
000000000001ea18	stp	x20, x19, [sp, #-0x20]!
000000000001ea1c	stp	x29, x30, [sp, #0x10]
000000000001ea20	add	x29, sp, #0x10
000000000001ea24	mov	x19, x1
000000000001ea28	mov	x20, x0
000000000001ea2c	adr	x8, #0x7585d
000000000001ea30	nop
000000000001ea34	ldarb	w8, [x8]
000000000001ea38	tbz	w8, #0x0, 0x1ea40
000000000001ea3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ea40	cmp	x19, x20
000000000001ea44	b.eq	0x1ea80
000000000001ea48	cbz	x19, 0x1eb34
000000000001ea4c	ldr	x8, [x19]
000000000001ea50	and	x8, x8, #0xfffffffffffffffc
000000000001ea54	ldr	x8, [x8]
000000000001ea58	ldr	w9, [x8, #0x3c]
000000000001ea5c	ldr	x8, [x8, #0x40]
000000000001ea60	tbnz	w9, #0x1f, 0x1ea90
000000000001ea64	mov	w10, #0x2b
000000000001ea68	and	x9, x9, x10
000000000001ea6c	lsl	x9, x9, #4
000000000001ea70	ldr	w8, [x8, x9]
000000000001ea74	cmp	w8, #0x2b
000000000001ea78	b.ne	0x1eb34
000000000001ea7c	b	0x1eb58
000000000001ea80	mov	w0, #0x1
000000000001ea84	ldp	x29, x30, [sp, #0x10]
000000000001ea88	ldp	x20, x19, [sp], #0x20
000000000001ea8c	ret
000000000001ea90	neg	w10, w9
000000000001ea94	mvn	w9, w9
000000000001ea98	cmp	w10, #0x9
000000000001ea9c	b.ge	0x1eae8
000000000001eaa0	cmp	w10, #0x2
000000000001eaa4	b.lt	0x1eb1c
000000000001eaa8	mov	x10, #0x0
000000000001eaac	mov	x11, x8
000000000001eab0	ldr	w12, [x11]
000000000001eab4	cmp	w12, #0x2a
000000000001eab8	b.gt	0x1eb44
000000000001eabc	add	x10, x10, #0x1
000000000001eac0	add	x11, x11, #0x10
000000000001eac4	cmp	x9, x10
000000000001eac8	b.ne	0x1eab0
000000000001eacc	mov	x10, x9
000000000001ead0	sxtw	x9, w10
000000000001ead4	lsl	x9, x9, #4
000000000001ead8	ldr	w8, [x8, x9]
000000000001eadc	cmp	w8, #0x2b
000000000001eae0	b.ne	0x1eb34
000000000001eae4	b	0x1eb58
000000000001eae8	mov	w10, #0x0
000000000001eaec	add	w11, w9, w10
000000000001eaf0	cmp	w11, #0x0
000000000001eaf4	cinc	w11, w11, lt
000000000001eaf8	asr	w11, w11, #1
000000000001eafc	sbfiz	x12, x11, #4, #32
000000000001eb00	ldr	w12, [x8, x12]
000000000001eb04	cmp	w12, #0x2b
000000000001eb08	csinc	w10, w10, w11, ge
000000000001eb0c	csel	w9, w9, w11, lt
000000000001eb10	cmp	w10, w9
000000000001eb14	b.lt	0x1eaec
000000000001eb18	b	0x1eb44
000000000001eb1c	mov	w10, #0x0
000000000001eb20	sxtw	x9, w10
000000000001eb24	lsl	x9, x9, #4
000000000001eb28	ldr	w8, [x8, x9]
000000000001eb2c	cmp	w8, #0x2b
000000000001eb30	b.eq	0x1eb58
000000000001eb34	mov	w0, #0x0
000000000001eb38	ldp	x29, x30, [sp, #0x10]
000000000001eb3c	ldp	x20, x19, [sp], #0x20
000000000001eb40	ret
000000000001eb44	sxtw	x9, w10
000000000001eb48	lsl	x9, x9, #4
000000000001eb4c	ldr	w8, [x8, x9]
000000000001eb50	cmp	w8, #0x2b
000000000001eb54	b.ne	0x1eb34
000000000001eb58	mov	x0, x20
000000000001eb5c	mov	x1, x19
000000000001eb60	ldp	x29, x30, [sp, #0x10]
000000000001eb64	ldp	x20, x19, [sp], #0x20
000000000001eb68	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedEquals(kotlin.collections.Collection<*>;kotlin.collections.Collection<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractList#hashCode(){}kotlin.Int:
000000000001eb6c	stp	x20, x19, [sp, #-0x20]!
000000000001eb70	stp	x29, x30, [sp, #0x10]
000000000001eb74	add	x29, sp, #0x10
000000000001eb78	mov	x19, x0
000000000001eb7c	adr	x8, #0x7570d
000000000001eb80	nop
000000000001eb84	ldarb	w8, [x8]
000000000001eb88	tbz	w8, #0x0, 0x1eb90
000000000001eb8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001eb90	mov	x0, x19
000000000001eb94	ldp	x29, x30, [sp, #0x10]
000000000001eb98	ldp	x20, x19, [sp], #0x20
000000000001eb9c	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections.AbstractList.IteratorImpl.hasNext#internal:
000000000001eba0	stp	x20, x19, [sp, #-0x20]!
000000000001eba4	stp	x29, x30, [sp, #0x10]
000000000001eba8	add	x29, sp, #0x10
000000000001ebac	mov	x19, x0
000000000001ebb0	adr	x8, #0x756d9
000000000001ebb4	nop
000000000001ebb8	ldarb	w8, [x8]
000000000001ebbc	tbz	w8, #0x0, 0x1ebc4
000000000001ebc0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ebc4	ldr	w20, [x19, #0x10]
000000000001ebc8	ldr	x0, [x19, #0x8]
000000000001ebcc	ldr	x8, [x0]
000000000001ebd0	and	x8, x8, #0xfffffffffffffffc
000000000001ebd4	ldr	x8, [x8]
000000000001ebd8	ldr	x8, [x8, #0x88]
000000000001ebdc	blr	x8
000000000001ebe0	cmp	w20, w0
000000000001ebe4	cset	w0, lt
000000000001ebe8	ldp	x29, x30, [sp, #0x10]
000000000001ebec	ldp	x20, x19, [sp], #0x20
000000000001ebf0	ret
_kfun:kotlin.collections.AbstractList.IteratorImpl.next#internal:
000000000001ebf4	sub	sp, sp, #0x50
000000000001ebf8	stp	x22, x21, [sp, #0x20]
000000000001ebfc	stp	x20, x19, [sp, #0x30]
000000000001ec00	stp	x29, x30, [sp, #0x40]
000000000001ec04	add	x29, sp, #0x40
000000000001ec08	mov	x19, x1
000000000001ec0c	mov	x20, x0
000000000001ec10	movi.16b	v0, #0x0
000000000001ec14	stp	q0, q0, [sp]
000000000001ec18	adrp	x0, 92 ; 0x7a000
000000000001ec1c	add	x0, x0, #0x2c0
000000000001ec20	ldr	x8, [x0]
000000000001ec24	blr	x8
000000000001ec28	ldr	x21, [x0]
000000000001ec2c	ldr	x8, [x21, #0x110]
000000000001ec30	mov	x9, sp
000000000001ec34	str	x9, [x21, #0x110]
000000000001ec38	mov	x9, #0x400000000
000000000001ec3c	stp	x8, x9, [sp, #0x8]
000000000001ec40	adr	x8, #0x75649
000000000001ec44	nop
000000000001ec48	ldarb	w8, [x8]
000000000001ec4c	tbz	w8, #0x0, 0x1ec54
000000000001ec50	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ec54	ldr	x8, [x20]
000000000001ec58	and	x8, x8, #0xfffffffffffffffc
000000000001ec5c	ldr	x8, [x8]
000000000001ec60	ldr	x8, [x8, #0x88]
000000000001ec64	mov	x0, x20
000000000001ec68	blr	x8
000000000001ec6c	tbz	w0, #0x0, 0x1ecb8
000000000001ec70	ldr	x0, [x20, #0x8]
000000000001ec74	ldr	w1, [x20, #0x10]
000000000001ec78	add	w8, w1, #0x1
000000000001ec7c	str	w8, [x20, #0x10]
000000000001ec80	ldr	x8, [x0]
000000000001ec84	and	x8, x8, #0xfffffffffffffffc
000000000001ec88	ldr	x8, [x8]
000000000001ec8c	ldr	x8, [x8, #0xc0]
000000000001ec90	mov	x2, x19
000000000001ec94	blr	x8
000000000001ec98	str	x0, [x19]
000000000001ec9c	ldr	x8, [sp, #0x8]
000000000001eca0	str	x8, [x21, #0x110]
000000000001eca4	ldp	x29, x30, [sp, #0x40]
000000000001eca8	ldp	x20, x19, [sp, #0x30]
000000000001ecac	ldp	x22, x21, [sp, #0x20]
000000000001ecb0	add	sp, sp, #0x50
000000000001ecb4	ret
000000000001ecb8	ldr	x8, [x21, #0x118]
000000000001ecbc	add	x0, x8, #0x70
000000000001ecc0	mov	w1, #0x38
000000000001ecc4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ecc8	mov	x19, x0
000000000001eccc	adr	x8, #0x42534
000000000001ecd0	nop
000000000001ecd4	str	x8, [x19, #0x10]!
000000000001ecd8	stur	xzr, [x19, #-0x8]
000000000001ecdc	str	x19, [sp, #0x18]
000000000001ece0	mov	x0, x19
000000000001ece4	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001ece8	mov	x0, x19
000000000001ecec	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.hasPrevious#internal:
000000000001ecf0	stp	x20, x19, [sp, #-0x20]!
000000000001ecf4	stp	x29, x30, [sp, #0x10]
000000000001ecf8	add	x29, sp, #0x10
000000000001ecfc	mov	x19, x0
000000000001ed00	adr	x8, #0x75589
000000000001ed04	nop
000000000001ed08	ldarb	w8, [x8]
000000000001ed0c	tbz	w8, #0x0, 0x1ed14
000000000001ed10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ed14	ldr	w8, [x19, #0x10]
000000000001ed18	cmp	w8, #0x0
000000000001ed1c	cset	w0, gt
000000000001ed20	ldp	x29, x30, [sp, #0x10]
000000000001ed24	ldp	x20, x19, [sp], #0x20
000000000001ed28	ret
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.nextIndex#internal:
000000000001ed2c	stp	x20, x19, [sp, #-0x20]!
000000000001ed30	stp	x29, x30, [sp, #0x10]
000000000001ed34	add	x29, sp, #0x10
000000000001ed38	mov	x19, x0
000000000001ed3c	adr	x8, #0x7554d
000000000001ed40	nop
000000000001ed44	ldarb	w8, [x8]
000000000001ed48	tbz	w8, #0x0, 0x1ed50
000000000001ed4c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ed50	ldr	w0, [x19, #0x10]
000000000001ed54	ldp	x29, x30, [sp, #0x10]
000000000001ed58	ldp	x20, x19, [sp], #0x20
000000000001ed5c	ret
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.previous#internal:
000000000001ed60	sub	sp, sp, #0x50
000000000001ed64	stp	x22, x21, [sp, #0x20]
000000000001ed68	stp	x20, x19, [sp, #0x30]
000000000001ed6c	stp	x29, x30, [sp, #0x40]
000000000001ed70	add	x29, sp, #0x40
000000000001ed74	mov	x19, x1
000000000001ed78	mov	x20, x0
000000000001ed7c	movi.16b	v0, #0x0
000000000001ed80	stp	q0, q0, [sp]
000000000001ed84	adrp	x0, 92 ; 0x7a000
000000000001ed88	add	x0, x0, #0x2c0
000000000001ed8c	ldr	x8, [x0]
000000000001ed90	blr	x8
000000000001ed94	ldr	x21, [x0]
000000000001ed98	ldr	x8, [x21, #0x110]
000000000001ed9c	mov	x9, sp
000000000001eda0	str	x9, [x21, #0x110]
000000000001eda4	mov	x9, #0x400000000
000000000001eda8	stp	x8, x9, [sp, #0x8]
000000000001edac	adr	x8, #0x754dd
000000000001edb0	nop
000000000001edb4	ldarb	w8, [x8]
000000000001edb8	tbz	w8, #0x0, 0x1edc0
000000000001edbc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001edc0	ldr	x8, [x20]
000000000001edc4	and	x8, x8, #0xfffffffffffffffc
000000000001edc8	ldr	x8, [x8]
000000000001edcc	ldr	x8, [x8, #0x98]
000000000001edd0	mov	x0, x20
000000000001edd4	blr	x8
000000000001edd8	tbz	w0, #0x0, 0x1ee24
000000000001eddc	ldr	x0, [x20, #0x18]
000000000001ede0	ldr	w8, [x20, #0x10]
000000000001ede4	sub	w1, w8, #0x1
000000000001ede8	str	w1, [x20, #0x10]
000000000001edec	ldr	x8, [x0]
000000000001edf0	and	x8, x8, #0xfffffffffffffffc
000000000001edf4	ldr	x8, [x8]
000000000001edf8	ldr	x8, [x8, #0xc0]
000000000001edfc	mov	x2, x19
000000000001ee00	blr	x8
000000000001ee04	str	x0, [x19]
000000000001ee08	ldr	x8, [sp, #0x8]
000000000001ee0c	str	x8, [x21, #0x110]
000000000001ee10	ldp	x29, x30, [sp, #0x40]
000000000001ee14	ldp	x20, x19, [sp, #0x30]
000000000001ee18	ldp	x22, x21, [sp, #0x20]
000000000001ee1c	add	sp, sp, #0x50
000000000001ee20	ret
000000000001ee24	ldr	x8, [x21, #0x118]
000000000001ee28	add	x0, x8, #0x70
000000000001ee2c	mov	w1, #0x38
000000000001ee30	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ee34	mov	x19, x0
000000000001ee38	adr	x8, #0x423c8
000000000001ee3c	nop
000000000001ee40	str	x8, [x19, #0x10]!
000000000001ee44	stur	xzr, [x19, #-0x8]
000000000001ee48	str	x19, [sp, #0x18]
000000000001ee4c	mov	x0, x19
000000000001ee50	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001ee54	mov	x0, x19
000000000001ee58	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.previousIndex#internal:
000000000001ee5c	stp	x20, x19, [sp, #-0x20]!
000000000001ee60	stp	x29, x30, [sp, #0x10]
000000000001ee64	add	x29, sp, #0x10
000000000001ee68	mov	x19, x0
000000000001ee6c	adr	x8, #0x7541d
000000000001ee70	nop
000000000001ee74	ldarb	w8, [x8]
000000000001ee78	tbz	w8, #0x0, 0x1ee80
000000000001ee7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ee80	ldr	w8, [x19, #0x10]
000000000001ee84	sub	w0, w8, #0x1
000000000001ee88	ldp	x29, x30, [sp, #0x10]
000000000001ee8c	ldp	x20, x19, [sp], #0x20
000000000001ee90	ret
_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}:
000000000001ee94	sub	sp, sp, #0xc0
000000000001ee98	stp	x26, x25, [sp, #0x70]
000000000001ee9c	stp	x24, x23, [sp, #0x80]
000000000001eea0	stp	x22, x21, [sp, #0x90]
000000000001eea4	stp	x20, x19, [sp, #0xa0]
000000000001eea8	stp	x29, x30, [sp, #0xb0]
000000000001eeac	add	x29, sp, #0xb0
000000000001eeb0	mov	x19, x1
000000000001eeb4	mov	x20, x0
000000000001eeb8	movi.16b	v0, #0x0
000000000001eebc	stp	q0, q0, [sp, #0x20]
000000000001eec0	stp	q0, q0, [sp, #0x50]
000000000001eec4	str	q0, [sp, #0x40]
000000000001eec8	stp	xzr, xzr, [sp, #0x10]
000000000001eecc	adr	x8, #0x45cc4
000000000001eed0	nop
000000000001eed4	orr	x8, x8, #0x3
000000000001eed8	str	x8, [sp, #0x8]
000000000001eedc	adrp	x0, 92 ; 0x7a000
000000000001eee0	add	x0, x0, #0x2c0
000000000001eee4	ldr	x8, [x0]
000000000001eee8	blr	x8
000000000001eeec	ldr	x21, [x0]
000000000001eef0	ldr	x8, [x21, #0x110]
000000000001eef4	add	x9, sp, #0x20
000000000001eef8	str	x9, [x21, #0x110]
000000000001eefc	mov	x9, #0xa00000000
000000000001ef00	stp	x8, x9, [sp, #0x28]
000000000001ef04	adr	x8, #0x75385
000000000001ef08	nop
000000000001ef0c	ldarb	w8, [x8]
000000000001ef10	tbz	w8, #0x0, 0x1ef18
000000000001ef14	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ef18	tbnz	w20, #0x1f, 0x1ef48
000000000001ef1c	cmp	w20, w19
000000000001ef20	b.ge	0x1ef48
000000000001ef24	ldr	x8, [sp, #0x28]
000000000001ef28	str	x8, [x21, #0x110]
000000000001ef2c	ldp	x29, x30, [sp, #0xb0]
000000000001ef30	ldp	x20, x19, [sp, #0xa0]
000000000001ef34	ldp	x22, x21, [sp, #0x90]
000000000001ef38	ldp	x24, x23, [sp, #0x80]
000000000001ef3c	ldp	x26, x25, [sp, #0x70]
000000000001ef40	add	sp, sp, #0xc0
000000000001ef44	ret
000000000001ef48	add	x8, sp, #0x20
000000000001ef4c	mov	x26, x21
000000000001ef50	add	x21, x8, #0x40
000000000001ef54	add	x22, x8, #0x38
000000000001ef58	add	x23, x8, #0x30
000000000001ef5c	add	x24, x8, #0x28
000000000001ef60	add	x25, x8, #0x20
000000000001ef64	add	x8, sp, #0x8
000000000001ef68	str	x8, [sp, #0x38]
000000000001ef6c	add	x0, sp, #0x8
000000000001ef70	mov	w1, #0xa
000000000001ef74	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000001ef78	adr	x1, #0x4fae8
000000000001ef7c	nop
000000000001ef80	add	x0, sp, #0x8
000000000001ef84	mov	x2, x25
000000000001ef88	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001ef8c	add	x0, sp, #0x8
000000000001ef90	mov	x1, x20
000000000001ef94	mov	x2, x24
000000000001ef98	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001ef9c	adr	x1, #0x4f3a4
000000000001efa0	nop
000000000001efa4	add	x0, sp, #0x8
000000000001efa8	mov	x2, x23
000000000001efac	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001efb0	add	x0, sp, #0x8
000000000001efb4	mov	x1, x19
000000000001efb8	mov	x2, x22
000000000001efbc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001efc0	add	x0, sp, #0x8
000000000001efc4	mov	x1, x21
000000000001efc8	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000001efcc	mov	x19, x0
000000000001efd0	ldr	x8, [x26, #0x118]
000000000001efd4	add	x0, x8, #0x70
000000000001efd8	mov	w1, #0x38
000000000001efdc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001efe0	mov	x20, x0
000000000001efe4	adr	x8, #0x4235c
000000000001efe8	nop
000000000001efec	str	x8, [x20, #0x10]!
000000000001eff0	stur	xzr, [x20, #-0x8]
000000000001eff4	str	x20, [sp, #0x68]
000000000001eff8	mov	x0, x20
000000000001effc	mov	x1, x19
000000000001f000	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000001f004	mov	x0, x20
000000000001f008	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}:
000000000001f00c	sub	sp, sp, #0xc0
000000000001f010	stp	x26, x25, [sp, #0x70]
000000000001f014	stp	x24, x23, [sp, #0x80]
000000000001f018	stp	x22, x21, [sp, #0x90]
000000000001f01c	stp	x20, x19, [sp, #0xa0]
000000000001f020	stp	x29, x30, [sp, #0xb0]
000000000001f024	add	x29, sp, #0xb0
000000000001f028	mov	x19, x1
000000000001f02c	mov	x20, x0
000000000001f030	movi.16b	v0, #0x0
000000000001f034	stp	q0, q0, [sp, #0x20]
000000000001f038	stp	q0, q0, [sp, #0x50]
000000000001f03c	str	q0, [sp, #0x40]
000000000001f040	stp	xzr, xzr, [sp, #0x10]
000000000001f044	adr	x8, #0x45b4c
000000000001f048	nop
000000000001f04c	orr	x8, x8, #0x3
000000000001f050	str	x8, [sp, #0x8]
000000000001f054	adrp	x0, 91 ; 0x7a000
000000000001f058	add	x0, x0, #0x2c0
000000000001f05c	ldr	x8, [x0]
000000000001f060	blr	x8
000000000001f064	ldr	x21, [x0]
000000000001f068	ldr	x8, [x21, #0x110]
000000000001f06c	add	x9, sp, #0x20
000000000001f070	str	x9, [x21, #0x110]
000000000001f074	mov	x9, #0xa00000000
000000000001f078	stp	x8, x9, [sp, #0x28]
000000000001f07c	adr	x8, #0x7520d
000000000001f080	nop
000000000001f084	ldarb	w8, [x8]
000000000001f088	tbz	w8, #0x0, 0x1f090
000000000001f08c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f090	tbnz	w20, #0x1f, 0x1f0c0
000000000001f094	cmp	w20, w19
000000000001f098	b.gt	0x1f0c0
000000000001f09c	ldr	x8, [sp, #0x28]
000000000001f0a0	str	x8, [x21, #0x110]
000000000001f0a4	ldp	x29, x30, [sp, #0xb0]
000000000001f0a8	ldp	x20, x19, [sp, #0xa0]
000000000001f0ac	ldp	x22, x21, [sp, #0x90]
000000000001f0b0	ldp	x24, x23, [sp, #0x80]
000000000001f0b4	ldp	x26, x25, [sp, #0x70]
000000000001f0b8	add	sp, sp, #0xc0
000000000001f0bc	ret
000000000001f0c0	add	x8, sp, #0x20
000000000001f0c4	mov	x26, x21
000000000001f0c8	add	x21, x8, #0x40
000000000001f0cc	add	x22, x8, #0x38
000000000001f0d0	add	x23, x8, #0x30
000000000001f0d4	add	x24, x8, #0x28
000000000001f0d8	add	x25, x8, #0x20
000000000001f0dc	add	x8, sp, #0x8
000000000001f0e0	str	x8, [sp, #0x38]
000000000001f0e4	add	x0, sp, #0x8
000000000001f0e8	mov	w1, #0xa
000000000001f0ec	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000001f0f0	adr	x1, #0x4f970
000000000001f0f4	nop
000000000001f0f8	add	x0, sp, #0x8
000000000001f0fc	mov	x2, x25
000000000001f100	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001f104	add	x0, sp, #0x8
000000000001f108	mov	x1, x20
000000000001f10c	mov	x2, x24
000000000001f110	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001f114	adr	x1, #0x4f22c
000000000001f118	nop
000000000001f11c	add	x0, sp, #0x8
000000000001f120	mov	x2, x23
000000000001f124	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001f128	add	x0, sp, #0x8
000000000001f12c	mov	x1, x19
000000000001f130	mov	x2, x22
000000000001f134	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001f138	add	x0, sp, #0x8
000000000001f13c	mov	x1, x21
000000000001f140	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000001f144	mov	x19, x0
000000000001f148	ldr	x8, [x26, #0x118]
000000000001f14c	add	x0, x8, #0x70
000000000001f150	mov	w1, #0x38
000000000001f154	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001f158	mov	x20, x0
000000000001f15c	adr	x8, #0x421e4
000000000001f160	nop
000000000001f164	str	x8, [x20, #0x10]!
000000000001f168	stur	xzr, [x20, #-0x8]
000000000001f16c	str	x20, [sp, #0x68]
000000000001f170	mov	x0, x20
000000000001f174	mov	x1, x19
000000000001f178	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000001f17c	mov	x0, x20
000000000001f180	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.Companion#checkRangeIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}:
000000000001f184	sub	sp, sp, #0x140
000000000001f188	stp	x28, x27, [sp, #0xe0]
000000000001f18c	stp	x26, x25, [sp, #0xf0]
000000000001f190	stp	x24, x23, [sp, #0x100]
000000000001f194	stp	x22, x21, [sp, #0x110]
000000000001f198	stp	x20, x19, [sp, #0x120]
000000000001f19c	stp	x29, x30, [sp, #0x130]
000000000001f1a0	add	x29, sp, #0x130
000000000001f1a4	mov	x21, x2
000000000001f1a8	mov	x19, x1
000000000001f1ac	mov	x20, x0
000000000001f1b0	str	xzr, [sp, #0xd0]
000000000001f1b4	movi.16b	v0, #0x0
000000000001f1b8	stp	q0, q0, [sp, #0xb0]
000000000001f1bc	stp	q0, q0, [sp, #0x90]
000000000001f1c0	stp	q0, q0, [sp, #0x70]
000000000001f1c4	stp	q0, q0, [sp, #0x50]
000000000001f1c8	str	q0, [sp, #0x40]
000000000001f1cc	stp	xzr, xzr, [sp, #0x30]
000000000001f1d0	adr	x8, #0x459c0
000000000001f1d4	nop
000000000001f1d8	orr	x8, x8, #0x3
000000000001f1dc	stp	xzr, x8, [sp, #0x20]
000000000001f1e0	stp	x8, xzr, [sp, #0x10]
000000000001f1e4	adrp	x0, 91 ; 0x7a000
000000000001f1e8	add	x0, x0, #0x2c0
000000000001f1ec	ldr	x8, [x0]
000000000001f1f0	blr	x8
000000000001f1f4	ldr	x22, [x0]
000000000001f1f8	ldr	x8, [x22, #0x110]
000000000001f1fc	add	x9, sp, #0x40
000000000001f200	str	x9, [x22, #0x110]
000000000001f204	mov	x9, #0x1300000000
000000000001f208	stp	x8, x9, [sp, #0x48]
000000000001f20c	adr	x8, #0x7507d
000000000001f210	nop
000000000001f214	ldarb	w8, [x8]
000000000001f218	tbz	w8, #0x0, 0x1f220
000000000001f21c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f220	tbnz	w20, #0x1f, 0x1f25c
000000000001f224	cmp	w19, w21
000000000001f228	b.gt	0x1f25c
000000000001f22c	cmp	w20, w19
000000000001f230	b.gt	0x1f33c
000000000001f234	ldr	x8, [sp, #0x48]
000000000001f238	str	x8, [x22, #0x110]
000000000001f23c	ldp	x29, x30, [sp, #0x130]
000000000001f240	ldp	x20, x19, [sp, #0x120]
000000000001f244	ldp	x22, x21, [sp, #0x110]
000000000001f248	ldp	x24, x23, [sp, #0x100]
000000000001f24c	ldp	x26, x25, [sp, #0xf0]
000000000001f250	ldp	x28, x27, [sp, #0xe0]
000000000001f254	add	sp, sp, #0x140
000000000001f258	ret
000000000001f25c	add	x8, sp, #0x40
000000000001f260	add	x9, x8, #0x50
000000000001f264	str	x9, [sp, #0x8]
000000000001f268	add	x23, x8, #0x48
000000000001f26c	add	x24, x8, #0x40
000000000001f270	add	x25, x8, #0x38
000000000001f274	add	x26, x8, #0x30
000000000001f278	add	x27, x8, #0x28
000000000001f27c	add	x9, sp, #0x28
000000000001f280	str	x9, [sp, #0x58]
000000000001f284	add	x28, x8, #0x20
000000000001f288	add	x0, sp, #0x28
000000000001f28c	mov	w1, #0xa
000000000001f290	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000001f294	adr	x1, #0x4f04c
000000000001f298	nop
000000000001f29c	add	x0, sp, #0x28
000000000001f2a0	mov	x2, x28
000000000001f2a4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001f2a8	add	x0, sp, #0x28
000000000001f2ac	mov	x1, x20
000000000001f2b0	mov	x2, x27
000000000001f2b4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001f2b8	adr	x1, #0x4f058
000000000001f2bc	nop
000000000001f2c0	add	x0, sp, #0x28
000000000001f2c4	mov	x2, x26
000000000001f2c8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001f2cc	add	x0, sp, #0x28
000000000001f2d0	mov	x1, x19
000000000001f2d4	mov	x2, x25
000000000001f2d8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001f2dc	adr	x1, #0x4f064
000000000001f2e0	nop
000000000001f2e4	add	x0, sp, #0x28
000000000001f2e8	mov	x2, x24
000000000001f2ec	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001f2f0	add	x0, sp, #0x28
000000000001f2f4	mov	x1, x21
000000000001f2f8	mov	x2, x23
000000000001f2fc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001f300	add	x0, sp, #0x28
000000000001f304	ldr	x1, [sp, #0x8]
000000000001f308	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000001f30c	mov	x19, x0
000000000001f310	ldr	x8, [x22, #0x118]
000000000001f314	add	x0, x8, #0x70
000000000001f318	mov	w1, #0x38
000000000001f31c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001f320	mov	x20, x0
000000000001f324	adr	x8, #0x4201c
000000000001f328	nop
000000000001f32c	str	x8, [x20, #0x10]!
000000000001f330	stur	xzr, [x20, #-0x8]
000000000001f334	str	x20, [sp, #0x98]
000000000001f338	b	0x1f3e8
000000000001f33c	add	x8, sp, #0x40
000000000001f340	add	x21, x8, #0x88
000000000001f344	add	x26, x8, #0x80
000000000001f348	add	x23, x8, #0x78
000000000001f34c	add	x24, x8, #0x70
000000000001f350	add	x25, x8, #0x68
000000000001f354	add	x8, sp, #0x10
000000000001f358	str	x8, [sp, #0xa0]
000000000001f35c	add	x0, sp, #0x10
000000000001f360	mov	w1, #0xa
000000000001f364	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000001f368	adr	x1, #0x4ef78
000000000001f36c	nop
000000000001f370	add	x0, sp, #0x10
000000000001f374	mov	x2, x25
000000000001f378	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001f37c	add	x0, sp, #0x10
000000000001f380	mov	x1, x20
000000000001f384	mov	x2, x24
000000000001f388	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001f38c	adr	x1, #0x4efd4
000000000001f390	nop
000000000001f394	add	x0, sp, #0x10
000000000001f398	mov	x2, x23
000000000001f39c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001f3a0	add	x0, sp, #0x10
000000000001f3a4	mov	x1, x19
000000000001f3a8	mov	x2, x26
000000000001f3ac	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001f3b0	add	x0, sp, #0x10
000000000001f3b4	mov	x1, x21
000000000001f3b8	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000001f3bc	mov	x19, x0
000000000001f3c0	ldr	x8, [x22, #0x118]
000000000001f3c4	add	x0, x8, #0x70
000000000001f3c8	mov	w1, #0x38
000000000001f3cc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001f3d0	mov	x20, x0
000000000001f3d4	adr	x8, #0x4200c
000000000001f3d8	nop
000000000001f3dc	str	x8, [x20, #0x10]!
000000000001f3e0	stur	xzr, [x20, #-0x8]
000000000001f3e4	str	x20, [sp, #0xd0]
000000000001f3e8	mov	x0, x20
000000000001f3ec	mov	x1, x19
000000000001f3f0	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000001f3f4	mov	x0, x20
000000000001f3f8	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.Companion#orderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int:
000000000001f3fc	sub	sp, sp, #0x70
000000000001f400	stp	x24, x23, [sp, #0x30]
000000000001f404	stp	x22, x21, [sp, #0x40]
000000000001f408	stp	x20, x19, [sp, #0x50]
000000000001f40c	stp	x29, x30, [sp, #0x60]
000000000001f410	add	x29, sp, #0x60
000000000001f414	mov	x20, x0
000000000001f418	movi.16b	v0, #0x0
000000000001f41c	stp	q0, q0, [sp]
000000000001f420	str	xzr, [sp, #0x20]
000000000001f424	mov	x19, sp
000000000001f428	add	x21, x19, #0x18
000000000001f42c	adrp	x0, 91 ; 0x7a000
000000000001f430	add	x0, x0, #0x2c0
000000000001f434	ldr	x8, [x0]
000000000001f438	blr	x8
000000000001f43c	ldr	x22, [x0]
000000000001f440	ldr	x8, [x22, #0x110]
000000000001f444	str	x19, [x22, #0x110]
000000000001f448	mov	x9, #0x500000000
000000000001f44c	stp	x8, x9, [sp, #0x8]
000000000001f450	adr	x23, #0x74e39
000000000001f454	nop
000000000001f458	ldarb	w8, [x23]
000000000001f45c	tbz	w8, #0x0, 0x1f464
000000000001f460	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f464	add	x19, x19, #0x20
000000000001f468	ldr	x8, [x20]
000000000001f46c	and	x8, x8, #0xfffffffffffffffc
000000000001f470	ldr	x8, [x8]
000000000001f474	ldr	w9, [x8, #0x3c]
000000000001f478	ldr	x8, [x8, #0x40]
000000000001f47c	tbnz	w9, #0x1f, 0x1f48c
000000000001f480	mov	w10, #0x12
000000000001f484	and	x9, x9, x10
000000000001f488	b	0x1f510
000000000001f48c	neg	w10, w9
000000000001f490	mvn	w9, w9
000000000001f494	cmp	w10, #0x9
000000000001f498	b.ge	0x1f4d0
000000000001f49c	cmp	w10, #0x2
000000000001f4a0	b.lt	0x1f504
000000000001f4a4	mov	x10, #0x0
000000000001f4a8	mov	x11, x8
000000000001f4ac	ldr	w12, [x11]
000000000001f4b0	cmp	w12, #0x11
000000000001f4b4	b.gt	0x1f50c
000000000001f4b8	add	x10, x10, #0x1
000000000001f4bc	add	x11, x11, #0x10
000000000001f4c0	cmp	x9, x10
000000000001f4c4	b.ne	0x1f4ac
000000000001f4c8	mov	x10, x9
000000000001f4cc	b	0x1f50c
000000000001f4d0	mov	w10, #0x0
000000000001f4d4	add	w11, w9, w10
000000000001f4d8	cmp	w11, #0x0
000000000001f4dc	cinc	w11, w11, lt
000000000001f4e0	asr	w11, w11, #1
000000000001f4e4	sbfiz	x12, x11, #4, #32
000000000001f4e8	ldr	w12, [x8, x12]
000000000001f4ec	cmp	w12, #0x12
000000000001f4f0	csinc	w10, w10, w11, ge
000000000001f4f4	csel	w9, w9, w11, lt
000000000001f4f8	cmp	w10, w9
000000000001f4fc	b.lt	0x1f4d4
000000000001f500	b	0x1f50c
000000000001f504	mov	w10, #0x0
000000000001f508	b	0x1f50c
000000000001f50c	sxtw	x9, w10
000000000001f510	add	x8, x8, x9, lsl #4
000000000001f514	ldr	x8, [x8, #0x8]
000000000001f518	ldr	x8, [x8, #0x20]
000000000001f51c	mov	x0, x20
000000000001f520	mov	x1, x21
000000000001f524	blr	x8
000000000001f528	mov	x20, x0
000000000001f52c	mov	w21, #0x1
000000000001f530	mov	w24, #0xa0
000000000001f534	b	0x1f53c
000000000001f538	add	w21, w21, w0
000000000001f53c	ldr	x8, [x20]
000000000001f540	and	x8, x8, #0xfffffffffffffffc
000000000001f544	ldr	x8, [x8]
000000000001f548	ldr	w9, [x8, #0x3c]
000000000001f54c	ldr	x8, [x8, #0x40]
000000000001f550	tbnz	w9, #0x1f, 0x1f574
000000000001f554	and	x9, x9, x24
000000000001f558	add	x8, x8, x9, lsl #4
000000000001f55c	ldr	x8, [x8, #0x8]
000000000001f560	ldr	x8, [x8]
000000000001f564	mov	x0, x20
000000000001f568	blr	x8
000000000001f56c	tbnz	w0, #0x0, 0x1f610
000000000001f570	b	0x1f6fc
000000000001f574	neg	w10, w9
000000000001f578	mvn	w9, w9
000000000001f57c	cmp	w10, #0x9
000000000001f580	b.ge	0x1f5b8
000000000001f584	cmp	w10, #0x2
000000000001f588	b.lt	0x1f5ec
000000000001f58c	mov	x10, #0x0
000000000001f590	mov	x11, x8
000000000001f594	ldr	w12, [x11]
000000000001f598	cmp	w12, #0x9f
000000000001f59c	b.gt	0x1f5f4
000000000001f5a0	add	x10, x10, #0x1
000000000001f5a4	add	x11, x11, #0x10
000000000001f5a8	cmp	x9, x10
000000000001f5ac	b.ne	0x1f594
000000000001f5b0	mov	x10, x9
000000000001f5b4	b	0x1f5f4
000000000001f5b8	mov	w10, #0x0
000000000001f5bc	add	w11, w9, w10
000000000001f5c0	cmp	w11, #0x0
000000000001f5c4	cinc	w11, w11, lt
000000000001f5c8	asr	w11, w11, #1
000000000001f5cc	sbfiz	x12, x11, #4, #32
000000000001f5d0	ldr	w12, [x8, x12]
000000000001f5d4	cmp	w12, #0xa0
000000000001f5d8	csinc	w10, w10, w11, ge
000000000001f5dc	csel	w9, w9, w11, lt
000000000001f5e0	cmp	w10, w9
000000000001f5e4	b.lt	0x1f5bc
000000000001f5e8	b	0x1f5f4
000000000001f5ec	mov	w10, #0x0
000000000001f5f0	b	0x1f5f4
000000000001f5f4	sxtw	x9, w10
000000000001f5f8	add	x8, x8, x9, lsl #4
000000000001f5fc	ldr	x8, [x8, #0x8]
000000000001f600	ldr	x8, [x8]
000000000001f604	mov	x0, x20
000000000001f608	blr	x8
000000000001f60c	tbz	w0, #0x0, 0x1f6fc
000000000001f610	ldarb	w8, [x23]
000000000001f614	tbz	w8, #0x0, 0x1f61c
000000000001f618	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f61c	ldr	x8, [x20]
000000000001f620	and	x8, x8, #0xfffffffffffffffc
000000000001f624	ldr	x8, [x8]
000000000001f628	ldr	w9, [x8, #0x3c]
000000000001f62c	ldr	x8, [x8, #0x40]
000000000001f630	tbnz	w9, #0x1f, 0x1f63c
000000000001f634	and	x9, x9, x24
000000000001f638	b	0x1f6c0
000000000001f63c	neg	w10, w9
000000000001f640	mvn	w9, w9
000000000001f644	cmp	w10, #0x9
000000000001f648	b.ge	0x1f680
000000000001f64c	cmp	w10, #0x2
000000000001f650	b.lt	0x1f6b4
000000000001f654	mov	x10, #0x0
000000000001f658	mov	x11, x8
000000000001f65c	ldr	w12, [x11]
000000000001f660	cmp	w12, #0x9f
000000000001f664	b.gt	0x1f6bc
000000000001f668	add	x10, x10, #0x1
000000000001f66c	add	x11, x11, #0x10
000000000001f670	cmp	x9, x10
000000000001f674	b.ne	0x1f65c
000000000001f678	mov	x10, x9
000000000001f67c	b	0x1f6bc
000000000001f680	mov	w10, #0x0
000000000001f684	add	w11, w9, w10
000000000001f688	cmp	w11, #0x0
000000000001f68c	cinc	w11, w11, lt
000000000001f690	asr	w11, w11, #1
000000000001f694	sbfiz	x12, x11, #4, #32
000000000001f698	ldr	w12, [x8, x12]
000000000001f69c	cmp	w12, #0xa0
000000000001f6a0	csinc	w10, w10, w11, ge
000000000001f6a4	csel	w9, w9, w11, lt
000000000001f6a8	cmp	w10, w9
000000000001f6ac	b.lt	0x1f684
000000000001f6b0	b	0x1f6bc
000000000001f6b4	mov	w10, #0x0
000000000001f6b8	b	0x1f6bc
000000000001f6bc	sxtw	x9, w10
000000000001f6c0	add	x8, x8, x9, lsl #4
000000000001f6c4	ldr	x8, [x8, #0x8]
000000000001f6c8	ldr	x8, [x8, #0x8]
000000000001f6cc	mov	x0, x20
000000000001f6d0	mov	x1, x19
000000000001f6d4	blr	x8
000000000001f6d8	lsl	w8, w21, #5
000000000001f6dc	sub	w21, w8, w21
000000000001f6e0	cbz	x0, 0x1f538
000000000001f6e4	ldr	x8, [x0]
000000000001f6e8	and	x8, x8, #0xfffffffffffffffc
000000000001f6ec	ldr	x8, [x8]
000000000001f6f0	ldr	x8, [x8, #0x78]
000000000001f6f4	blr	x8
000000000001f6f8	b	0x1f538
000000000001f6fc	ldr	x8, [sp, #0x8]
000000000001f700	str	x8, [x22, #0x110]
000000000001f704	mov	x0, x21
000000000001f708	ldp	x29, x30, [sp, #0x60]
000000000001f70c	ldp	x20, x19, [sp, #0x50]
000000000001f710	ldp	x22, x21, [sp, #0x40]
000000000001f714	ldp	x24, x23, [sp, #0x30]
000000000001f718	add	sp, sp, #0x70
000000000001f71c	ret
_kfun:kotlin.collections.AbstractList.Companion#orderedEquals(kotlin.collections.Collection<*>;kotlin.collections.Collection<*>){}kotlin.Boolean:
000000000001f720	sub	sp, sp, #0x90
000000000001f724	stp	x26, x25, [sp, #0x40]
000000000001f728	stp	x24, x23, [sp, #0x50]
000000000001f72c	stp	x22, x21, [sp, #0x60]
000000000001f730	stp	x20, x19, [sp, #0x70]
000000000001f734	stp	x29, x30, [sp, #0x80]
000000000001f738	add	x29, sp, #0x80
000000000001f73c	mov	x22, x1
000000000001f740	mov	x21, x0
000000000001f744	movi.16b	v0, #0x0
000000000001f748	stp	q0, q0, [sp]
000000000001f74c	str	xzr, [sp, #0x30]
000000000001f750	str	q0, [sp, #0x20]
000000000001f754	mov	x20, sp
000000000001f758	adrp	x0, 91 ; 0x7a000
000000000001f75c	add	x0, x0, #0x2c0
000000000001f760	ldr	x8, [x0]
000000000001f764	blr	x8
000000000001f768	ldr	x24, [x0]
000000000001f76c	ldr	x8, [x24, #0x110]
000000000001f770	str	x20, [x24, #0x110]
000000000001f774	mov	x9, #0x700000000
000000000001f778	stp	x8, x9, [sp, #0x8]
000000000001f77c	adr	x25, #0x74b0d
000000000001f780	nop
000000000001f784	ldarb	w8, [x25]
000000000001f788	tbz	w8, #0x0, 0x1f790
000000000001f78c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f790	ldr	x8, [x21]
000000000001f794	and	x8, x8, #0xfffffffffffffffc
000000000001f798	ldr	x8, [x8]
000000000001f79c	ldr	w9, [x8, #0x3c]
000000000001f7a0	ldr	x8, [x8, #0x40]
000000000001f7a4	tbnz	w9, #0x1f, 0x1f7b4
000000000001f7a8	mov	w10, #0x12
000000000001f7ac	and	x9, x9, x10
000000000001f7b0	b	0x1f838
000000000001f7b4	neg	w10, w9
000000000001f7b8	mvn	w9, w9
000000000001f7bc	cmp	w10, #0x9
000000000001f7c0	b.ge	0x1f7f8
000000000001f7c4	cmp	w10, #0x2
000000000001f7c8	b.lt	0x1f82c
000000000001f7cc	mov	x10, #0x0
000000000001f7d0	mov	x11, x8
000000000001f7d4	ldr	w12, [x11]
000000000001f7d8	cmp	w12, #0x11
000000000001f7dc	b.gt	0x1f834
000000000001f7e0	add	x10, x10, #0x1
000000000001f7e4	add	x11, x11, #0x10
000000000001f7e8	cmp	x9, x10
000000000001f7ec	b.ne	0x1f7d4
000000000001f7f0	mov	x10, x9
000000000001f7f4	b	0x1f834
000000000001f7f8	mov	w10, #0x0
000000000001f7fc	add	w11, w9, w10
000000000001f800	cmp	w11, #0x0
000000000001f804	cinc	w11, w11, lt
000000000001f808	asr	w11, w11, #1
000000000001f80c	sbfiz	x12, x11, #4, #32
000000000001f810	ldr	w12, [x8, x12]
000000000001f814	cmp	w12, #0x12
000000000001f818	csinc	w10, w10, w11, ge
000000000001f81c	csel	w9, w9, w11, lt
000000000001f820	cmp	w10, w9
000000000001f824	b.lt	0x1f7fc
000000000001f828	b	0x1f834
000000000001f82c	mov	w10, #0x0
000000000001f830	b	0x1f834
000000000001f834	sxtw	x9, w10
000000000001f838	add	x8, x8, x9, lsl #4
000000000001f83c	ldr	x8, [x8, #0x8]
000000000001f840	ldr	x8, [x8]
000000000001f844	mov	x0, x21
000000000001f848	blr	x8
000000000001f84c	mov	x19, x0
000000000001f850	ldr	x8, [x22]
000000000001f854	and	x8, x8, #0xfffffffffffffffc
000000000001f858	ldr	x8, [x8]
000000000001f85c	ldr	w9, [x8, #0x3c]
000000000001f860	ldr	x8, [x8, #0x40]
000000000001f864	tbnz	w9, #0x1f, 0x1f874
000000000001f868	mov	w10, #0x12
000000000001f86c	and	x9, x9, x10
000000000001f870	b	0x1f8f8
000000000001f874	neg	w10, w9
000000000001f878	mvn	w9, w9
000000000001f87c	cmp	w10, #0x9
000000000001f880	b.ge	0x1f8b8
000000000001f884	cmp	w10, #0x2
000000000001f888	b.lt	0x1f8ec
000000000001f88c	mov	x10, #0x0
000000000001f890	mov	x11, x8
000000000001f894	ldr	w12, [x11]
000000000001f898	cmp	w12, #0x11
000000000001f89c	b.gt	0x1f8f4
000000000001f8a0	add	x10, x10, #0x1
000000000001f8a4	add	x11, x11, #0x10
000000000001f8a8	cmp	x9, x10
000000000001f8ac	b.ne	0x1f894
000000000001f8b0	mov	x10, x9
000000000001f8b4	b	0x1f8f4
000000000001f8b8	mov	w10, #0x0
000000000001f8bc	add	w11, w9, w10
000000000001f8c0	cmp	w11, #0x0
000000000001f8c4	cinc	w11, w11, lt
000000000001f8c8	asr	w11, w11, #1
000000000001f8cc	sbfiz	x12, x11, #4, #32
000000000001f8d0	ldr	w12, [x8, x12]
000000000001f8d4	cmp	w12, #0x12
000000000001f8d8	csinc	w10, w10, w11, ge
000000000001f8dc	csel	w9, w9, w11, lt
000000000001f8e0	cmp	w10, w9
000000000001f8e4	b.lt	0x1f8bc
000000000001f8e8	b	0x1f8f4
000000000001f8ec	mov	w10, #0x0
000000000001f8f0	b	0x1f8f4
000000000001f8f4	sxtw	x9, w10
000000000001f8f8	add	x8, x8, x9, lsl #4
000000000001f8fc	ldr	x8, [x8, #0x8]
000000000001f900	ldr	x8, [x8]
000000000001f904	mov	x0, x22
000000000001f908	blr	x8
000000000001f90c	cmp	w19, w0
000000000001f910	b.ne	0x1fd34
000000000001f914	add	x23, x20, #0x20
000000000001f918	add	x1, x20, #0x18
000000000001f91c	ldr	x8, [x22]
000000000001f920	and	x8, x8, #0xfffffffffffffffc
000000000001f924	ldr	x8, [x8]
000000000001f928	ldr	w9, [x8, #0x3c]
000000000001f92c	ldr	x8, [x8, #0x40]
000000000001f930	tbnz	w9, #0x1f, 0x1f940
000000000001f934	mov	w10, #0x12
000000000001f938	and	x9, x9, x10
000000000001f93c	b	0x1f9c4
000000000001f940	neg	w10, w9
000000000001f944	mvn	w9, w9
000000000001f948	cmp	w10, #0x9
000000000001f94c	b.ge	0x1f984
000000000001f950	cmp	w10, #0x2
000000000001f954	b.lt	0x1f9b8
000000000001f958	mov	x10, #0x0
000000000001f95c	mov	x11, x8
000000000001f960	ldr	w12, [x11]
000000000001f964	cmp	w12, #0x11
000000000001f968	b.gt	0x1f9c0
000000000001f96c	add	x10, x10, #0x1
000000000001f970	add	x11, x11, #0x10
000000000001f974	cmp	x9, x10
000000000001f978	b.ne	0x1f960
000000000001f97c	mov	x10, x9
000000000001f980	b	0x1f9c0
000000000001f984	mov	w10, #0x0
000000000001f988	add	w11, w9, w10
000000000001f98c	cmp	w11, #0x0
000000000001f990	cinc	w11, w11, lt
000000000001f994	asr	w11, w11, #1
000000000001f998	sbfiz	x12, x11, #4, #32
000000000001f99c	ldr	w12, [x8, x12]
000000000001f9a0	cmp	w12, #0x12
000000000001f9a4	csinc	w10, w10, w11, ge
000000000001f9a8	csel	w9, w9, w11, lt
000000000001f9ac	cmp	w10, w9
000000000001f9b0	b.lt	0x1f988
000000000001f9b4	b	0x1f9c0
000000000001f9b8	mov	w10, #0x0
000000000001f9bc	b	0x1f9c0
000000000001f9c0	sxtw	x9, w10
000000000001f9c4	add	x19, x20, #0x30
000000000001f9c8	add	x20, x20, #0x28
000000000001f9cc	add	x8, x8, x9, lsl #4
000000000001f9d0	ldr	x8, [x8, #0x8]
000000000001f9d4	ldr	x8, [x8, #0x20]
000000000001f9d8	mov	x0, x22
000000000001f9dc	blr	x8
000000000001f9e0	mov	x22, x0
000000000001f9e4	ldr	x8, [x21]
000000000001f9e8	and	x8, x8, #0xfffffffffffffffc
000000000001f9ec	ldr	x8, [x8]
000000000001f9f0	ldr	w9, [x8, #0x3c]
000000000001f9f4	ldr	x8, [x8, #0x40]
000000000001f9f8	tbnz	w9, #0x1f, 0x1fa08
000000000001f9fc	mov	w10, #0x12
000000000001fa00	and	x9, x9, x10
000000000001fa04	b	0x1fa8c
000000000001fa08	neg	w10, w9
000000000001fa0c	mvn	w9, w9
000000000001fa10	cmp	w10, #0x9
000000000001fa14	b.ge	0x1fa4c
000000000001fa18	cmp	w10, #0x2
000000000001fa1c	b.lt	0x1fa80
000000000001fa20	mov	x10, #0x0
000000000001fa24	mov	x11, x8
000000000001fa28	ldr	w12, [x11]
000000000001fa2c	cmp	w12, #0x11
000000000001fa30	b.gt	0x1fa88
000000000001fa34	add	x10, x10, #0x1
000000000001fa38	add	x11, x11, #0x10
000000000001fa3c	cmp	x9, x10
000000000001fa40	b.ne	0x1fa28
000000000001fa44	mov	x10, x9
000000000001fa48	b	0x1fa88
000000000001fa4c	mov	w10, #0x0
000000000001fa50	add	w11, w9, w10
000000000001fa54	cmp	w11, #0x0
000000000001fa58	cinc	w11, w11, lt
000000000001fa5c	asr	w11, w11, #1
000000000001fa60	sbfiz	x12, x11, #4, #32
000000000001fa64	ldr	w12, [x8, x12]
000000000001fa68	cmp	w12, #0x12
000000000001fa6c	csinc	w10, w10, w11, ge
000000000001fa70	csel	w9, w9, w11, lt
000000000001fa74	cmp	w10, w9
000000000001fa78	b.lt	0x1fa50
000000000001fa7c	b	0x1fa88
000000000001fa80	mov	w10, #0x0
000000000001fa84	b	0x1fa88
000000000001fa88	sxtw	x9, w10
000000000001fa8c	add	x8, x8, x9, lsl #4
000000000001fa90	ldr	x8, [x8, #0x8]
000000000001fa94	ldr	x8, [x8, #0x20]
000000000001fa98	mov	x0, x21
000000000001fa9c	mov	x1, x23
000000000001faa0	blr	x8
000000000001faa4	mov	x21, x0
000000000001faa8	mov	w26, #0xa0
000000000001faac	b	0x1fab4
000000000001fab0	cbnz	x1, 0x1fd34
000000000001fab4	ldr	x8, [x21]
000000000001fab8	and	x8, x8, #0xfffffffffffffffc
000000000001fabc	ldr	x8, [x8]
000000000001fac0	ldr	w9, [x8, #0x3c]
000000000001fac4	ldr	x8, [x8, #0x40]
000000000001fac8	tbnz	w9, #0x1f, 0x1faec
000000000001facc	and	x9, x9, x26
000000000001fad0	add	x8, x8, x9, lsl #4
000000000001fad4	ldr	x8, [x8, #0x8]
000000000001fad8	ldr	x8, [x8]
000000000001fadc	mov	x0, x21
000000000001fae0	blr	x8
000000000001fae4	tbnz	w0, #0x0, 0x1fb88
000000000001fae8	b	0x1fd3c
000000000001faec	neg	w10, w9
000000000001faf0	mvn	w9, w9
000000000001faf4	cmp	w10, #0x9
000000000001faf8	b.ge	0x1fb30
000000000001fafc	cmp	w10, #0x2
000000000001fb00	b.lt	0x1fb64
000000000001fb04	mov	x10, #0x0
000000000001fb08	mov	x11, x8
000000000001fb0c	ldr	w12, [x11]
000000000001fb10	cmp	w12, #0x9f
000000000001fb14	b.gt	0x1fb6c
000000000001fb18	add	x10, x10, #0x1
000000000001fb1c	add	x11, x11, #0x10
000000000001fb20	cmp	x9, x10
000000000001fb24	b.ne	0x1fb0c
000000000001fb28	mov	x10, x9
000000000001fb2c	b	0x1fb6c
000000000001fb30	mov	w10, #0x0
000000000001fb34	add	w11, w9, w10
000000000001fb38	cmp	w11, #0x0
000000000001fb3c	cinc	w11, w11, lt
000000000001fb40	asr	w11, w11, #1
000000000001fb44	sbfiz	x12, x11, #4, #32
000000000001fb48	ldr	w12, [x8, x12]
000000000001fb4c	cmp	w12, #0xa0
000000000001fb50	csinc	w10, w10, w11, ge
000000000001fb54	csel	w9, w9, w11, lt
000000000001fb58	cmp	w10, w9
000000000001fb5c	b.lt	0x1fb34
000000000001fb60	b	0x1fb6c
000000000001fb64	mov	w10, #0x0
000000000001fb68	b	0x1fb6c
000000000001fb6c	sxtw	x9, w10
000000000001fb70	add	x8, x8, x9, lsl #4
000000000001fb74	ldr	x8, [x8, #0x8]
000000000001fb78	ldr	x8, [x8]
000000000001fb7c	mov	x0, x21
000000000001fb80	blr	x8
000000000001fb84	tbz	w0, #0x0, 0x1fd3c
000000000001fb88	ldarb	w8, [x25]
000000000001fb8c	tbz	w8, #0x0, 0x1fb94
000000000001fb90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001fb94	ldr	x8, [x21]
000000000001fb98	and	x8, x8, #0xfffffffffffffffc
000000000001fb9c	ldr	x8, [x8]
000000000001fba0	ldr	w9, [x8, #0x3c]
000000000001fba4	ldr	x8, [x8, #0x40]
000000000001fba8	tbnz	w9, #0x1f, 0x1fbb4
000000000001fbac	and	x9, x9, x26
000000000001fbb0	b	0x1fc38
000000000001fbb4	neg	w10, w9
000000000001fbb8	mvn	w9, w9
000000000001fbbc	cmp	w10, #0x9
000000000001fbc0	b.ge	0x1fbf8
000000000001fbc4	cmp	w10, #0x2
000000000001fbc8	b.lt	0x1fc2c
000000000001fbcc	mov	x10, #0x0
000000000001fbd0	mov	x11, x8
000000000001fbd4	ldr	w12, [x11]
000000000001fbd8	cmp	w12, #0x9f
000000000001fbdc	b.gt	0x1fc34
000000000001fbe0	add	x10, x10, #0x1
000000000001fbe4	add	x11, x11, #0x10
000000000001fbe8	cmp	x9, x10
000000000001fbec	b.ne	0x1fbd4
000000000001fbf0	mov	x10, x9
000000000001fbf4	b	0x1fc34
000000000001fbf8	mov	w10, #0x0
000000000001fbfc	add	w11, w9, w10
000000000001fc00	cmp	w11, #0x0
000000000001fc04	cinc	w11, w11, lt
000000000001fc08	asr	w11, w11, #1
000000000001fc0c	sbfiz	x12, x11, #4, #32
000000000001fc10	ldr	w12, [x8, x12]
000000000001fc14	cmp	w12, #0xa0
000000000001fc18	csinc	w10, w10, w11, ge
000000000001fc1c	csel	w9, w9, w11, lt
000000000001fc20	cmp	w10, w9
000000000001fc24	b.lt	0x1fbfc
000000000001fc28	b	0x1fc34
000000000001fc2c	mov	w10, #0x0
000000000001fc30	b	0x1fc34
000000000001fc34	sxtw	x9, w10
000000000001fc38	add	x8, x8, x9, lsl #4
000000000001fc3c	ldr	x8, [x8, #0x8]
000000000001fc40	ldr	x8, [x8, #0x8]
000000000001fc44	mov	x0, x21
000000000001fc48	mov	x1, x20
000000000001fc4c	blr	x8
000000000001fc50	mov	x23, x0
000000000001fc54	ldr	x8, [x22]
000000000001fc58	and	x8, x8, #0xfffffffffffffffc
000000000001fc5c	ldr	x8, [x8]
000000000001fc60	ldr	w9, [x8, #0x3c]
000000000001fc64	ldr	x8, [x8, #0x40]
000000000001fc68	tbnz	w9, #0x1f, 0x1fc74
000000000001fc6c	and	x9, x9, x26
000000000001fc70	b	0x1fcf8
000000000001fc74	neg	w10, w9
000000000001fc78	mvn	w9, w9
000000000001fc7c	cmp	w10, #0x9
000000000001fc80	b.ge	0x1fcb8
000000000001fc84	cmp	w10, #0x2
000000000001fc88	b.lt	0x1fcec
000000000001fc8c	mov	x10, #0x0
000000000001fc90	mov	x11, x8
000000000001fc94	ldr	w12, [x11]
000000000001fc98	cmp	w12, #0x9f
000000000001fc9c	b.gt	0x1fcf4
000000000001fca0	add	x10, x10, #0x1
000000000001fca4	add	x11, x11, #0x10
000000000001fca8	cmp	x9, x10
000000000001fcac	b.ne	0x1fc94
000000000001fcb0	mov	x10, x9
000000000001fcb4	b	0x1fcf4
000000000001fcb8	mov	w10, #0x0
000000000001fcbc	add	w11, w9, w10
000000000001fcc0	cmp	w11, #0x0
000000000001fcc4	cinc	w11, w11, lt
000000000001fcc8	asr	w11, w11, #1
000000000001fccc	sbfiz	x12, x11, #4, #32
000000000001fcd0	ldr	w12, [x8, x12]
000000000001fcd4	cmp	w12, #0xa0
000000000001fcd8	csinc	w10, w10, w11, ge
000000000001fcdc	csel	w9, w9, w11, lt
000000000001fce0	cmp	w10, w9
000000000001fce4	b.lt	0x1fcbc
000000000001fce8	b	0x1fcf4
000000000001fcec	mov	w10, #0x0
000000000001fcf0	b	0x1fcf4
000000000001fcf4	sxtw	x9, w10
000000000001fcf8	add	x8, x8, x9, lsl #4
000000000001fcfc	ldr	x8, [x8, #0x8]
000000000001fd00	ldr	x8, [x8, #0x8]
000000000001fd04	mov	x0, x22
000000000001fd08	mov	x1, x19
000000000001fd0c	blr	x8
000000000001fd10	mov	x1, x0
000000000001fd14	cbz	x23, 0x1fab0
000000000001fd18	ldr	x8, [x23]
000000000001fd1c	and	x8, x8, #0xfffffffffffffffc
000000000001fd20	ldr	x8, [x8]
000000000001fd24	ldr	x8, [x8, #0x70]
000000000001fd28	mov	x0, x23
000000000001fd2c	blr	x8
000000000001fd30	tbnz	w0, #0x0, 0x1fab4
000000000001fd34	mov	w0, #0x0
000000000001fd38	b	0x1fd40
000000000001fd3c	mov	w0, #0x1
000000000001fd40	ldr	x8, [sp, #0x8]
000000000001fd44	str	x8, [x24, #0x110]
000000000001fd48	ldp	x29, x30, [sp, #0x80]
000000000001fd4c	ldp	x20, x19, [sp, #0x70]
000000000001fd50	ldp	x22, x21, [sp, #0x60]
000000000001fd54	ldp	x24, x23, [sp, #0x50]
000000000001fd58	ldp	x26, x25, [sp, #0x40]
000000000001fd5c	add	sp, sp, #0x90
000000000001fd60	ret
_kfun:kotlin.collections.AbstractSet#equals(kotlin.Any?){}kotlin.Boolean:
000000000001fd64	stp	x20, x19, [sp, #-0x20]!
000000000001fd68	stp	x29, x30, [sp, #0x10]
000000000001fd6c	add	x29, sp, #0x10
000000000001fd70	mov	x19, x1
000000000001fd74	mov	x20, x0
000000000001fd78	adr	x8, #0x74511
000000000001fd7c	nop
000000000001fd80	ldarb	w8, [x8]
000000000001fd84	tbz	w8, #0x0, 0x1fd8c
000000000001fd88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001fd8c	cmp	x19, x20
000000000001fd90	b.eq	0x1fdc8
000000000001fd94	cbz	x19, 0x1fe7c
000000000001fd98	ldr	x8, [x19]
000000000001fd9c	and	x8, x8, #0xfffffffffffffffc
000000000001fda0	ldr	x8, [x8]
000000000001fda4	ldr	w9, [x8, #0x3c]
000000000001fda8	ldr	x8, [x8, #0x40]
000000000001fdac	tbnz	w9, #0x1f, 0x1fdd8
000000000001fdb0	and	x9, x9, #0x1e
000000000001fdb4	lsl	x9, x9, #4
000000000001fdb8	ldr	w8, [x8, x9]
000000000001fdbc	cmp	w8, #0x1e
000000000001fdc0	b.ne	0x1fe7c
000000000001fdc4	b	0x1fea0
000000000001fdc8	mov	w0, #0x1
000000000001fdcc	ldp	x29, x30, [sp, #0x10]
000000000001fdd0	ldp	x20, x19, [sp], #0x20
000000000001fdd4	ret
000000000001fdd8	neg	w10, w9
000000000001fddc	mvn	w9, w9
000000000001fde0	cmp	w10, #0x9
000000000001fde4	b.ge	0x1fe30
000000000001fde8	cmp	w10, #0x2
000000000001fdec	b.lt	0x1fe64
000000000001fdf0	mov	x10, #0x0
000000000001fdf4	mov	x11, x8
000000000001fdf8	ldr	w12, [x11]
000000000001fdfc	cmp	w12, #0x1d
000000000001fe00	b.gt	0x1fe8c
000000000001fe04	add	x10, x10, #0x1
000000000001fe08	add	x11, x11, #0x10
000000000001fe0c	cmp	x9, x10
000000000001fe10	b.ne	0x1fdf8
000000000001fe14	mov	x10, x9
000000000001fe18	sxtw	x9, w10
000000000001fe1c	lsl	x9, x9, #4
000000000001fe20	ldr	w8, [x8, x9]
000000000001fe24	cmp	w8, #0x1e
000000000001fe28	b.ne	0x1fe7c
000000000001fe2c	b	0x1fea0
000000000001fe30	mov	w10, #0x0
000000000001fe34	add	w11, w9, w10
000000000001fe38	cmp	w11, #0x0
000000000001fe3c	cinc	w11, w11, lt
000000000001fe40	asr	w11, w11, #1
000000000001fe44	sbfiz	x12, x11, #4, #32
000000000001fe48	ldr	w12, [x8, x12]
000000000001fe4c	cmp	w12, #0x1e
000000000001fe50	csinc	w10, w10, w11, ge
000000000001fe54	csel	w9, w9, w11, lt
000000000001fe58	cmp	w10, w9
000000000001fe5c	b.lt	0x1fe34
000000000001fe60	b	0x1fe8c
000000000001fe64	mov	w10, #0x0
000000000001fe68	sxtw	x9, w10
000000000001fe6c	lsl	x9, x9, #4
000000000001fe70	ldr	w8, [x8, x9]
000000000001fe74	cmp	w8, #0x1e
000000000001fe78	b.eq	0x1fea0
000000000001fe7c	mov	w0, #0x0
000000000001fe80	ldp	x29, x30, [sp, #0x10]
000000000001fe84	ldp	x20, x19, [sp], #0x20
000000000001fe88	ret
000000000001fe8c	sxtw	x9, w10
000000000001fe90	lsl	x9, x9, #4
000000000001fe94	ldr	w8, [x8, x9]
000000000001fe98	cmp	w8, #0x1e
000000000001fe9c	b.ne	0x1fe7c
000000000001fea0	mov	x0, x20
000000000001fea4	mov	x1, x19
000000000001fea8	ldp	x29, x30, [sp, #0x10]
000000000001feac	ldp	x20, x19, [sp], #0x20
000000000001feb0	b	"_kfun:kotlin.collections.AbstractSet.Companion#setEquals(kotlin.collections.Set<*>;kotlin.collections.Set<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractSet#hashCode(){}kotlin.Int:
000000000001feb4	stp	x20, x19, [sp, #-0x20]!
000000000001feb8	stp	x29, x30, [sp, #0x10]
000000000001febc	add	x29, sp, #0x10
000000000001fec0	mov	x19, x0
000000000001fec4	adr	x8, #0x743c5
000000000001fec8	nop
000000000001fecc	ldarb	w8, [x8]
000000000001fed0	tbz	w8, #0x0, 0x1fed8
000000000001fed4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001fed8	mov	x0, x19
000000000001fedc	ldp	x29, x30, [sp, #0x10]
000000000001fee0	ldp	x20, x19, [sp], #0x20
000000000001fee4	b	"_kfun:kotlin.collections.AbstractSet.Companion#unorderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections.AbstractSet.Companion#unorderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int:
000000000001fee8	sub	sp, sp, #0x70
000000000001feec	stp	x24, x23, [sp, #0x30]
000000000001fef0	stp	x22, x21, [sp, #0x40]
000000000001fef4	stp	x20, x19, [sp, #0x50]
000000000001fef8	stp	x29, x30, [sp, #0x60]
000000000001fefc	add	x29, sp, #0x60
000000000001ff00	mov	x20, x0
000000000001ff04	movi.16b	v0, #0x0
000000000001ff08	stp	q0, q0, [sp]
000000000001ff0c	str	xzr, [sp, #0x20]
000000000001ff10	mov	x19, sp
000000000001ff14	add	x21, x19, #0x18
000000000001ff18	adrp	x0, 91 ; 0x7a000
000000000001ff1c	add	x0, x0, #0x2c0
000000000001ff20	ldr	x8, [x0]
000000000001ff24	blr	x8
000000000001ff28	ldr	x22, [x0]
000000000001ff2c	ldr	x8, [x22, #0x110]
000000000001ff30	str	x19, [x22, #0x110]
000000000001ff34	mov	x9, #0x500000000
000000000001ff38	stp	x8, x9, [sp, #0x8]
000000000001ff3c	adr	x23, #0x7434d
000000000001ff40	nop
000000000001ff44	ldarb	w8, [x23]
000000000001ff48	tbz	w8, #0x0, 0x1ff50
000000000001ff4c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ff50	add	x19, x19, #0x20
000000000001ff54	ldr	x8, [x20]
000000000001ff58	and	x8, x8, #0xfffffffffffffffc
000000000001ff5c	ldr	x8, [x8]
000000000001ff60	ldr	w9, [x8, #0x3c]
000000000001ff64	ldr	x8, [x8, #0x40]
000000000001ff68	tbnz	w9, #0x1f, 0x1ff78
000000000001ff6c	mov	w10, #0x12
000000000001ff70	and	x9, x9, x10
000000000001ff74	b	0x1fffc
000000000001ff78	neg	w10, w9
000000000001ff7c	mvn	w9, w9
000000000001ff80	cmp	w10, #0x9
000000000001ff84	b.ge	0x1ffbc
000000000001ff88	cmp	w10, #0x2
000000000001ff8c	b.lt	0x1fff0
000000000001ff90	mov	x10, #0x0
000000000001ff94	mov	x11, x8
000000000001ff98	ldr	w12, [x11]
000000000001ff9c	cmp	w12, #0x11
000000000001ffa0	b.gt	0x1fff8
000000000001ffa4	add	x10, x10, #0x1
000000000001ffa8	add	x11, x11, #0x10
000000000001ffac	cmp	x9, x10
000000000001ffb0	b.ne	0x1ff98
000000000001ffb4	mov	x10, x9
000000000001ffb8	b	0x1fff8
000000000001ffbc	mov	w10, #0x0
000000000001ffc0	add	w11, w9, w10
000000000001ffc4	cmp	w11, #0x0
000000000001ffc8	cinc	w11, w11, lt
000000000001ffcc	asr	w11, w11, #1
000000000001ffd0	sbfiz	x12, x11, #4, #32
000000000001ffd4	ldr	w12, [x8, x12]
000000000001ffd8	cmp	w12, #0x12
000000000001ffdc	csinc	w10, w10, w11, ge
000000000001ffe0	csel	w9, w9, w11, lt
000000000001ffe4	cmp	w10, w9
000000000001ffe8	b.lt	0x1ffc0
000000000001ffec	b	0x1fff8
000000000001fff0	mov	w10, #0x0
000000000001fff4	b	0x1fff8
000000000001fff8	sxtw	x9, w10
000000000001fffc	add	x8, x8, x9, lsl #4
0000000000020000	ldr	x8, [x8, #0x8]
0000000000020004	ldr	x8, [x8, #0x20]
0000000000020008	mov	x0, x20
000000000002000c	mov	x1, x21
0000000000020010	blr	x8
0000000000020014	mov	x21, x0
0000000000020018	mov	w20, #0x0
000000000002001c	mov	w24, #0xa0
0000000000020020	b	0x20028
0000000000020024	add	w20, w20, w0
0000000000020028	ldr	x8, [x21]
000000000002002c	and	x8, x8, #0xfffffffffffffffc
0000000000020030	ldr	x8, [x8]
0000000000020034	ldr	w9, [x8, #0x3c]
0000000000020038	ldr	x8, [x8, #0x40]
000000000002003c	tbnz	w9, #0x1f, 0x20060
0000000000020040	and	x9, x9, x24
0000000000020044	add	x8, x8, x9, lsl #4
0000000000020048	ldr	x8, [x8, #0x8]
000000000002004c	ldr	x8, [x8]
0000000000020050	mov	x0, x21
0000000000020054	blr	x8
0000000000020058	tbnz	w0, #0x0, 0x200fc
000000000002005c	b	0x201e0
0000000000020060	neg	w10, w9
0000000000020064	mvn	w9, w9
0000000000020068	cmp	w10, #0x9
000000000002006c	b.ge	0x200a4
0000000000020070	cmp	w10, #0x2
0000000000020074	b.lt	0x200d8
0000000000020078	mov	x10, #0x0
000000000002007c	mov	x11, x8
0000000000020080	ldr	w12, [x11]
0000000000020084	cmp	w12, #0x9f
0000000000020088	b.gt	0x200e0
000000000002008c	add	x10, x10, #0x1
0000000000020090	add	x11, x11, #0x10
0000000000020094	cmp	x9, x10
0000000000020098	b.ne	0x20080
000000000002009c	mov	x10, x9
00000000000200a0	b	0x200e0
00000000000200a4	mov	w10, #0x0
00000000000200a8	add	w11, w9, w10
00000000000200ac	cmp	w11, #0x0
00000000000200b0	cinc	w11, w11, lt
00000000000200b4	asr	w11, w11, #1
00000000000200b8	sbfiz	x12, x11, #4, #32
00000000000200bc	ldr	w12, [x8, x12]
00000000000200c0	cmp	w12, #0xa0
00000000000200c4	csinc	w10, w10, w11, ge
00000000000200c8	csel	w9, w9, w11, lt
00000000000200cc	cmp	w10, w9
00000000000200d0	b.lt	0x200a8
00000000000200d4	b	0x200e0
00000000000200d8	mov	w10, #0x0
00000000000200dc	b	0x200e0
00000000000200e0	sxtw	x9, w10
00000000000200e4	add	x8, x8, x9, lsl #4
00000000000200e8	ldr	x8, [x8, #0x8]
00000000000200ec	ldr	x8, [x8]
00000000000200f0	mov	x0, x21
00000000000200f4	blr	x8
00000000000200f8	tbz	w0, #0x0, 0x201e0
00000000000200fc	ldarb	w8, [x23]
0000000000020100	tbz	w8, #0x0, 0x20108
0000000000020104	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020108	ldr	x8, [x21]
000000000002010c	and	x8, x8, #0xfffffffffffffffc
0000000000020110	ldr	x8, [x8]
0000000000020114	ldr	w9, [x8, #0x3c]
0000000000020118	ldr	x8, [x8, #0x40]
000000000002011c	tbnz	w9, #0x1f, 0x20128
0000000000020120	and	x9, x9, x24
0000000000020124	b	0x201ac
0000000000020128	neg	w10, w9
000000000002012c	mvn	w9, w9
0000000000020130	cmp	w10, #0x9
0000000000020134	b.ge	0x2016c
0000000000020138	cmp	w10, #0x2
000000000002013c	b.lt	0x201a0
0000000000020140	mov	x10, #0x0
0000000000020144	mov	x11, x8
0000000000020148	ldr	w12, [x11]
000000000002014c	cmp	w12, #0x9f
0000000000020150	b.gt	0x201a8
0000000000020154	add	x10, x10, #0x1
0000000000020158	add	x11, x11, #0x10
000000000002015c	cmp	x9, x10
0000000000020160	b.ne	0x20148
0000000000020164	mov	x10, x9
0000000000020168	b	0x201a8
000000000002016c	mov	w10, #0x0
0000000000020170	add	w11, w9, w10
0000000000020174	cmp	w11, #0x0
0000000000020178	cinc	w11, w11, lt
000000000002017c	asr	w11, w11, #1
0000000000020180	sbfiz	x12, x11, #4, #32
0000000000020184	ldr	w12, [x8, x12]
0000000000020188	cmp	w12, #0xa0
000000000002018c	csinc	w10, w10, w11, ge
0000000000020190	csel	w9, w9, w11, lt
0000000000020194	cmp	w10, w9
0000000000020198	b.lt	0x20170
000000000002019c	b	0x201a8
00000000000201a0	mov	w10, #0x0
00000000000201a4	b	0x201a8
00000000000201a8	sxtw	x9, w10
00000000000201ac	add	x8, x8, x9, lsl #4
00000000000201b0	ldr	x8, [x8, #0x8]
00000000000201b4	ldr	x8, [x8, #0x8]
00000000000201b8	mov	x0, x21
00000000000201bc	mov	x1, x19
00000000000201c0	blr	x8
00000000000201c4	cbz	x0, 0x20024
00000000000201c8	ldr	x8, [x0]
00000000000201cc	and	x8, x8, #0xfffffffffffffffc
00000000000201d0	ldr	x8, [x8]
00000000000201d4	ldr	x8, [x8, #0x78]
00000000000201d8	blr	x8
00000000000201dc	b	0x20024
00000000000201e0	ldr	x8, [sp, #0x8]
00000000000201e4	str	x8, [x22, #0x110]
00000000000201e8	mov	x0, x20
00000000000201ec	ldp	x29, x30, [sp, #0x60]
00000000000201f0	ldp	x20, x19, [sp, #0x50]
00000000000201f4	ldp	x22, x21, [sp, #0x40]
00000000000201f8	ldp	x24, x23, [sp, #0x30]
00000000000201fc	add	sp, sp, #0x70
0000000000020200	ret
_kfun:kotlin.collections.AbstractSet.Companion#setEquals(kotlin.collections.Set<*>;kotlin.collections.Set<*>){}kotlin.Boolean:
0000000000020204	stp	x22, x21, [sp, #-0x30]!
0000000000020208	stp	x20, x19, [sp, #0x10]
000000000002020c	stp	x29, x30, [sp, #0x20]
0000000000020210	add	x29, sp, #0x20
0000000000020214	mov	x19, x1
0000000000020218	mov	x20, x0
000000000002021c	adr	x8, #0x7406d
0000000000020220	nop
0000000000020224	ldarb	w8, [x8]
0000000000020228	tbz	w8, #0x0, 0x20230
000000000002022c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020230	ldr	x8, [x20]
0000000000020234	and	x8, x8, #0xfffffffffffffffc
0000000000020238	ldr	x8, [x8]
000000000002023c	ldr	w9, [x8, #0x3c]
0000000000020240	ldr	x8, [x8, #0x40]
0000000000020244	tbnz	w9, #0x1f, 0x20250
0000000000020248	and	x9, x9, #0x1e
000000000002024c	b	0x202d4
0000000000020250	neg	w10, w9
0000000000020254	mvn	w9, w9
0000000000020258	cmp	w10, #0x9
000000000002025c	b.ge	0x20294
0000000000020260	cmp	w10, #0x2
0000000000020264	b.lt	0x202c8
0000000000020268	mov	x10, #0x0
000000000002026c	mov	x11, x8
0000000000020270	ldr	w12, [x11]
0000000000020274	cmp	w12, #0x1d
0000000000020278	b.gt	0x202d0
000000000002027c	add	x10, x10, #0x1
0000000000020280	add	x11, x11, #0x10
0000000000020284	cmp	x9, x10
0000000000020288	b.ne	0x20270
000000000002028c	mov	x10, x9
0000000000020290	b	0x202d0
0000000000020294	mov	w10, #0x0
0000000000020298	add	w11, w9, w10
000000000002029c	cmp	w11, #0x0
00000000000202a0	cinc	w11, w11, lt
00000000000202a4	asr	w11, w11, #1
00000000000202a8	sbfiz	x12, x11, #4, #32
00000000000202ac	ldr	w12, [x8, x12]
00000000000202b0	cmp	w12, #0x1e
00000000000202b4	csinc	w10, w10, w11, ge
00000000000202b8	csel	w9, w9, w11, lt
00000000000202bc	cmp	w10, w9
00000000000202c0	b.lt	0x20298
00000000000202c4	b	0x202d0
00000000000202c8	mov	w10, #0x0
00000000000202cc	b	0x202d0
00000000000202d0	sxtw	x9, w10
00000000000202d4	add	x8, x8, x9, lsl #4
00000000000202d8	ldr	x8, [x8, #0x8]
00000000000202dc	ldr	x8, [x8]
00000000000202e0	mov	x0, x20
00000000000202e4	blr	x8
00000000000202e8	mov	x21, x0
00000000000202ec	ldr	x8, [x19]
00000000000202f0	and	x8, x8, #0xfffffffffffffffc
00000000000202f4	ldr	x8, [x8]
00000000000202f8	ldr	w9, [x8, #0x3c]
00000000000202fc	ldr	x8, [x8, #0x40]
0000000000020300	tbnz	w9, #0x1f, 0x2030c
0000000000020304	and	x9, x9, #0x1e
0000000000020308	b	0x20390
000000000002030c	neg	w10, w9
0000000000020310	mvn	w9, w9
0000000000020314	cmp	w10, #0x9
0000000000020318	b.ge	0x20350
000000000002031c	cmp	w10, #0x2
0000000000020320	b.lt	0x20384
0000000000020324	mov	x10, #0x0
0000000000020328	mov	x11, x8
000000000002032c	ldr	w12, [x11]
0000000000020330	cmp	w12, #0x1d
0000000000020334	b.gt	0x2038c
0000000000020338	add	x10, x10, #0x1
000000000002033c	add	x11, x11, #0x10
0000000000020340	cmp	x9, x10
0000000000020344	b.ne	0x2032c
0000000000020348	mov	x10, x9
000000000002034c	b	0x2038c
0000000000020350	mov	w10, #0x0
0000000000020354	add	w11, w9, w10
0000000000020358	cmp	w11, #0x0
000000000002035c	cinc	w11, w11, lt
0000000000020360	asr	w11, w11, #1
0000000000020364	sbfiz	x12, x11, #4, #32
0000000000020368	ldr	w12, [x8, x12]
000000000002036c	cmp	w12, #0x1e
0000000000020370	csinc	w10, w10, w11, ge
0000000000020374	csel	w9, w9, w11, lt
0000000000020378	cmp	w10, w9
000000000002037c	b.lt	0x20354
0000000000020380	b	0x2038c
0000000000020384	mov	w10, #0x0
0000000000020388	b	0x2038c
000000000002038c	sxtw	x9, w10
0000000000020390	add	x8, x8, x9, lsl #4
0000000000020394	ldr	x8, [x8, #0x8]
0000000000020398	ldr	x8, [x8]
000000000002039c	mov	x0, x19
00000000000203a0	blr	x8
00000000000203a4	cmp	w21, w0
00000000000203a8	b.ne	0x203d0
00000000000203ac	ldr	x8, [x20]
00000000000203b0	and	x8, x8, #0xfffffffffffffffc
00000000000203b4	ldr	x8, [x8]
00000000000203b8	ldr	w9, [x8, #0x3c]
00000000000203bc	ldr	x8, [x8, #0x40]
00000000000203c0	tbnz	w9, #0x1f, 0x203e4
00000000000203c4	mov	w10, #0x12
00000000000203c8	and	x9, x9, x10
00000000000203cc	b	0x20468
00000000000203d0	mov	w0, #0x0
00000000000203d4	ldp	x29, x30, [sp, #0x20]
00000000000203d8	ldp	x20, x19, [sp, #0x10]
00000000000203dc	ldp	x22, x21, [sp], #0x30
00000000000203e0	ret
00000000000203e4	neg	w10, w9
00000000000203e8	mvn	w9, w9
00000000000203ec	cmp	w10, #0x9
00000000000203f0	b.ge	0x20428
00000000000203f4	cmp	w10, #0x2
00000000000203f8	b.lt	0x2045c
00000000000203fc	mov	x10, #0x0
0000000000020400	mov	x11, x8
0000000000020404	ldr	w12, [x11]
0000000000020408	cmp	w12, #0x11
000000000002040c	b.gt	0x20464
0000000000020410	add	x10, x10, #0x1
0000000000020414	add	x11, x11, #0x10
0000000000020418	cmp	x9, x10
000000000002041c	b.ne	0x20404
0000000000020420	mov	x10, x9
0000000000020424	b	0x20464
0000000000020428	mov	w10, #0x0
000000000002042c	add	w11, w9, w10
0000000000020430	cmp	w11, #0x0
0000000000020434	cinc	w11, w11, lt
0000000000020438	asr	w11, w11, #1
000000000002043c	sbfiz	x12, x11, #4, #32
0000000000020440	ldr	w12, [x8, x12]
0000000000020444	cmp	w12, #0x12
0000000000020448	csinc	w10, w10, w11, ge
000000000002044c	csel	w9, w9, w11, lt
0000000000020450	cmp	w10, w9
0000000000020454	b.lt	0x2042c
0000000000020458	b	0x20464
000000000002045c	mov	w10, #0x0
0000000000020460	b	0x20464
0000000000020464	sxtw	x9, w10
0000000000020468	add	x8, x8, x9, lsl #4
000000000002046c	ldr	x8, [x8, #0x8]
0000000000020470	ldr	x2, [x8, #0x10]
0000000000020474	mov	x0, x20
0000000000020478	mov	x1, x19
000000000002047c	ldp	x29, x30, [sp, #0x20]
0000000000020480	ldp	x20, x19, [sp, #0x10]
0000000000020484	ldp	x22, x21, [sp], #0x30
0000000000020488	br	x2
_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0§<kotlin.Any?>}kotlin.Int:
000000000002048c	stp	x20, x19, [sp, #-0x20]!
0000000000020490	stp	x29, x30, [sp, #0x10]
0000000000020494	add	x29, sp, #0x10
0000000000020498	mov	x19, x0
000000000002049c	adr	x8, #0x73ded
00000000000204a0	nop
00000000000204a4	ldarb	w8, [x8]
00000000000204a8	tbz	w8, #0x0, 0x204b0
00000000000204ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000204b0	ldr	x8, [x19]
00000000000204b4	and	x8, x8, #0xfffffffffffffffc
00000000000204b8	ldr	x8, [x8]
00000000000204bc	ldr	w9, [x8, #0x3c]
00000000000204c0	ldr	x8, [x8, #0x40]
00000000000204c4	tbnz	w9, #0x1f, 0x204d4
00000000000204c8	mov	w10, #0x2b
00000000000204cc	and	x9, x9, x10
00000000000204d0	b	0x20558
00000000000204d4	neg	w10, w9
00000000000204d8	mvn	w9, w9
00000000000204dc	cmp	w10, #0x9
00000000000204e0	b.ge	0x20518
00000000000204e4	cmp	w10, #0x2
00000000000204e8	b.lt	0x2054c
00000000000204ec	mov	x10, #0x0
00000000000204f0	mov	x11, x8
00000000000204f4	ldr	w12, [x11]
00000000000204f8	cmp	w12, #0x2a
00000000000204fc	b.gt	0x20554
0000000000020500	add	x10, x10, #0x1
0000000000020504	add	x11, x11, #0x10
0000000000020508	cmp	x9, x10
000000000002050c	b.ne	0x204f4
0000000000020510	mov	x10, x9
0000000000020514	b	0x20554
0000000000020518	mov	w10, #0x0
000000000002051c	add	w11, w9, w10
0000000000020520	cmp	w11, #0x0
0000000000020524	cinc	w11, w11, lt
0000000000020528	asr	w11, w11, #1
000000000002052c	sbfiz	x12, x11, #4, #32
0000000000020530	ldr	w12, [x8, x12]
0000000000020534	cmp	w12, #0x2b
0000000000020538	csinc	w10, w10, w11, ge
000000000002053c	csel	w9, w9, w11, lt
0000000000020540	cmp	w10, w9
0000000000020544	b.lt	0x2051c
0000000000020548	b	0x20554
000000000002054c	mov	w10, #0x0
0000000000020550	b	0x20554
0000000000020554	sxtw	x9, w10
0000000000020558	add	x8, x8, x9, lsl #4
000000000002055c	ldr	x8, [x8, #0x8]
0000000000020560	ldr	x8, [x8]
0000000000020564	mov	x0, x19
0000000000020568	blr	x8
000000000002056c	sub	w0, w0, #0x1
0000000000020570	ldp	x29, x30, [sp, #0x10]
0000000000020574	ldp	x20, x19, [sp], #0x20
0000000000020578	ret
_kfun:kotlin.collections#removeAll__at__kotlin.collections.MutableList<0:0>(kotlin.Function1<0:0,kotlin.Boolean>){0§<kotlin.Any?>}kotlin.Boolean:
000000000002057c	sub	sp, sp, #0xb0
0000000000020580	stp	x28, x27, [sp, #0x50]
0000000000020584	stp	x26, x25, [sp, #0x60]
0000000000020588	stp	x24, x23, [sp, #0x70]
000000000002058c	stp	x22, x21, [sp, #0x80]
0000000000020590	stp	x20, x19, [sp, #0x90]
0000000000020594	stp	x29, x30, [sp, #0xa0]
0000000000020598	add	x29, sp, #0xa0
000000000002059c	mov	x21, x1
00000000000205a0	mov	x20, x0
00000000000205a4	adr	x19, #0x73ce5
00000000000205a8	nop
00000000000205ac	ldarb	w8, [x19]
00000000000205b0	tbz	w8, #0x0, 0x205b8
00000000000205b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000205b8	movi.16b	v0, #0x0
00000000000205bc	stp	q0, q0, [sp, #0x10]
00000000000205c0	str	xzr, [sp, #0x40]
00000000000205c4	str	q0, [sp, #0x30]
00000000000205c8	add	x27, sp, #0x10
00000000000205cc	adrp	x22, 90 ; 0x7a000
00000000000205d0	add	x22, x22, #0x2c0
00000000000205d4	ldr	x26, [x22]
00000000000205d8	mov	x0, x22
00000000000205dc	blr	x26
00000000000205e0	ldr	x8, [x0]
00000000000205e4	ldr	x9, [x8, #0x110]
00000000000205e8	str	x27, [x8, #0x110]
00000000000205ec	mov	x8, #0x700000000
00000000000205f0	stp	x9, x8, [sp, #0x18]
00000000000205f4	cbz	x20, 0x209a8
00000000000205f8	ldr	x8, [x20]
00000000000205fc	and	x8, x8, #0xfffffffffffffffc
0000000000020600	ldr	x8, [x8]
0000000000020604	ldr	w9, [x8, #0x3c]
0000000000020608	ldr	x8, [x8, #0x40]
000000000002060c	tbnz	w9, #0x1f, 0x208dc
0000000000020610	mov	w10, #0xb8
0000000000020614	and	x9, x9, x10
0000000000020618	lsl	x9, x9, #4
000000000002061c	ldr	w8, [x8, x9]
0000000000020620	cmp	w8, #0xb8
0000000000020624	b.ne	0x209a8
0000000000020628	str	x26, [sp]
000000000002062c	mov	x0, x20
0000000000020630	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0§<kotlin.Any?>}kotlin.Int"
0000000000020634	tbnz	w0, #0x1f, 0x20934
0000000000020638	mov	x23, x0
000000000002063c	mov	w25, #0x0
0000000000020640	mov	w22, #0x0
0000000000020644	add	x24, x27, #0x20
0000000000020648	add	x26, x27, #0x18
000000000002064c	add	x8, x27, #0x28
0000000000020650	str	x8, [sp, #0x8]
0000000000020654	mov	w27, #0x2c
0000000000020658	b	0x20698
000000000002065c	mov	w10, #0x16
0000000000020660	and	x9, x9, x10
0000000000020664	add	x8, x8, x9, lsl #4
0000000000020668	ldr	x8, [x8, #0x8]
000000000002066c	ldr	x8, [x8, #0x58]
0000000000020670	mov	x0, x20
0000000000020674	mov	x1, x22
0000000000020678	mov	x2, x28
000000000002067c	ldr	x3, [sp, #0x8]
0000000000020680	blr	x8
0000000000020684	add	w22, w22, #0x1
0000000000020688	add	w8, w25, #0x1
000000000002068c	cmp	w25, w23
0000000000020690	mov	x25, x8
0000000000020694	b.eq	0x20938
0000000000020698	ldarb	w8, [x19]
000000000002069c	tbz	w8, #0x0, 0x206a4
00000000000206a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000206a4	ldr	x8, [x20]
00000000000206a8	and	x8, x8, #0xfffffffffffffffc
00000000000206ac	ldr	x8, [x8]
00000000000206b0	ldr	w9, [x8, #0x3c]
00000000000206b4	ldr	x8, [x8, #0x40]
00000000000206b8	tbnz	w9, #0x1f, 0x206c8
00000000000206bc	mov	w10, #0x2b
00000000000206c0	and	x9, x9, x10
00000000000206c4	b	0x2074c
00000000000206c8	neg	w10, w9
00000000000206cc	mvn	w9, w9
00000000000206d0	cmp	w10, #0x9
00000000000206d4	b.ge	0x2070c
00000000000206d8	cmp	w10, #0x2
00000000000206dc	b.lt	0x20740
00000000000206e0	mov	x10, #0x0
00000000000206e4	mov	x11, x8
00000000000206e8	ldr	w12, [x11]
00000000000206ec	cmp	w12, #0x2a
00000000000206f0	b.gt	0x20748
00000000000206f4	add	x10, x10, #0x1
00000000000206f8	add	x11, x11, #0x10
00000000000206fc	cmp	x9, x10
0000000000020700	b.ne	0x206e8
0000000000020704	mov	x10, x9
0000000000020708	b	0x20748
000000000002070c	mov	w10, #0x0
0000000000020710	add	w11, w9, w10
0000000000020714	cmp	w11, #0x0
0000000000020718	cinc	w11, w11, lt
000000000002071c	asr	w11, w11, #1
0000000000020720	sbfiz	x12, x11, #4, #32
0000000000020724	ldr	w12, [x8, x12]
0000000000020728	cmp	w12, #0x2b
000000000002072c	csinc	w10, w10, w11, ge
0000000000020730	csel	w9, w9, w11, lt
0000000000020734	cmp	w10, w9
0000000000020738	b.lt	0x20710
000000000002073c	b	0x20748
0000000000020740	mov	w10, #0x0
0000000000020744	b	0x20748
0000000000020748	sxtw	x9, w10
000000000002074c	add	x8, x8, x9, lsl #4
0000000000020750	ldr	x8, [x8, #0x8]
0000000000020754	ldr	x8, [x8, #0x18]
0000000000020758	mov	x0, x20
000000000002075c	mov	x1, x25
0000000000020760	mov	x2, x26
0000000000020764	blr	x8
0000000000020768	mov	x28, x0
000000000002076c	ldr	x8, [x21]
0000000000020770	and	x8, x8, #0xfffffffffffffffc
0000000000020774	ldr	x8, [x8]
0000000000020778	ldr	w9, [x8, #0x3c]
000000000002077c	ldr	x8, [x8, #0x40]
0000000000020780	tbnz	w9, #0x1f, 0x2078c
0000000000020784	and	x9, x9, x27
0000000000020788	b	0x20810
000000000002078c	neg	w10, w9
0000000000020790	mvn	w9, w9
0000000000020794	cmp	w10, #0x9
0000000000020798	b.ge	0x207d0
000000000002079c	cmp	w10, #0x2
00000000000207a0	b.lt	0x20804
00000000000207a4	mov	x10, #0x0
00000000000207a8	mov	x11, x8
00000000000207ac	ldr	w12, [x11]
00000000000207b0	cmp	w12, #0x2b
00000000000207b4	b.gt	0x2080c
00000000000207b8	add	x10, x10, #0x1
00000000000207bc	add	x11, x11, #0x10
00000000000207c0	cmp	x9, x10
00000000000207c4	b.ne	0x207ac
00000000000207c8	mov	x10, x9
00000000000207cc	b	0x2080c
00000000000207d0	mov	w10, #0x0
00000000000207d4	add	w11, w9, w10
00000000000207d8	cmp	w11, #0x0
00000000000207dc	cinc	w11, w11, lt
00000000000207e0	asr	w11, w11, #1
00000000000207e4	sbfiz	x12, x11, #4, #32
00000000000207e8	ldr	w12, [x8, x12]
00000000000207ec	cmp	w12, #0x2c
00000000000207f0	csinc	w10, w10, w11, ge
00000000000207f4	csel	w9, w9, w11, lt
00000000000207f8	cmp	w10, w9
00000000000207fc	b.lt	0x207d4
0000000000020800	b	0x2080c
0000000000020804	mov	w10, #0x0
0000000000020808	b	0x2080c
000000000002080c	sxtw	x9, w10
0000000000020810	add	x8, x8, x9, lsl #4
0000000000020814	ldr	x8, [x8, #0x8]
0000000000020818	ldr	x8, [x8]
000000000002081c	mov	x0, x21
0000000000020820	mov	x1, x28
0000000000020824	mov	x2, x24
0000000000020828	blr	x8
000000000002082c	ldrb	w8, [x0, #0x8]
0000000000020830	tbnz	w8, #0x0, 0x20688
0000000000020834	cmp	w22, w25
0000000000020838	b.eq	0x20684
000000000002083c	ldr	x8, [x20]
0000000000020840	and	x8, x8, #0xfffffffffffffffc
0000000000020844	ldr	x8, [x8]
0000000000020848	ldr	w9, [x8, #0x3c]
000000000002084c	ldr	x8, [x8, #0x40]
0000000000020850	tbz	w9, #0x1f, 0x2065c
0000000000020854	neg	w10, w9
0000000000020858	mvn	w9, w9
000000000002085c	cmp	w10, #0x9
0000000000020860	b.ge	0x20898
0000000000020864	cmp	w10, #0x2
0000000000020868	b.lt	0x208cc
000000000002086c	mov	x10, #0x0
0000000000020870	mov	x11, x8
0000000000020874	ldr	w12, [x11]
0000000000020878	cmp	w12, #0x15
000000000002087c	b.gt	0x208d4
0000000000020880	add	x10, x10, #0x1
0000000000020884	add	x11, x11, #0x10
0000000000020888	cmp	x9, x10
000000000002088c	b.ne	0x20874
0000000000020890	mov	x10, x9
0000000000020894	b	0x208d4
0000000000020898	mov	w10, #0x0
000000000002089c	add	w11, w9, w10
00000000000208a0	cmp	w11, #0x0
00000000000208a4	cinc	w11, w11, lt
00000000000208a8	asr	w11, w11, #1
00000000000208ac	sbfiz	x12, x11, #4, #32
00000000000208b0	ldr	w12, [x8, x12]
00000000000208b4	cmp	w12, #0x16
00000000000208b8	csinc	w10, w10, w11, ge
00000000000208bc	csel	w9, w9, w11, lt
00000000000208c0	cmp	w10, w9
00000000000208c4	b.lt	0x2089c
00000000000208c8	b	0x208d4
00000000000208cc	mov	w10, #0x0
00000000000208d0	b	0x208d4
00000000000208d4	sxtw	x9, w10
00000000000208d8	b	0x20664
00000000000208dc	neg	w10, w9
00000000000208e0	mvn	w9, w9
00000000000208e4	cmp	w10, #0x9
00000000000208e8	b.ge	0x20964
00000000000208ec	cmp	w10, #0x2
00000000000208f0	b.lt	0x20b24
00000000000208f4	mov	x10, #0x0
00000000000208f8	mov	x11, x8
00000000000208fc	ldr	w12, [x11]
0000000000020900	cmp	w12, #0xb7
0000000000020904	b.gt	0x20b8c
0000000000020908	add	x10, x10, #0x1
000000000002090c	add	x11, x11, #0x10
0000000000020910	cmp	x9, x10
0000000000020914	b.ne	0x208fc
0000000000020918	mov	x10, x9
000000000002091c	sxtw	x9, w10
0000000000020920	lsl	x9, x9, #4
0000000000020924	ldr	w8, [x8, x9]
0000000000020928	cmp	w8, #0xb8
000000000002092c	b.ne	0x209a8
0000000000020930	b	0x20628
0000000000020934	mov	w22, #0x0
0000000000020938	ldr	x8, [x20]
000000000002093c	and	x8, x8, #0xfffffffffffffffc
0000000000020940	ldr	x8, [x8]
0000000000020944	ldr	w9, [x8, #0x3c]
0000000000020948	ldr	x8, [x8, #0x40]
000000000002094c	tbnz	w9, #0x1f, 0x20ab0
0000000000020950	mov	w10, #0x2b
0000000000020954	and	x9, x9, x10
0000000000020958	ldr	x26, [sp]
000000000002095c	add	x23, sp, #0x10
0000000000020960	b	0x20bb0
0000000000020964	mov	w10, #0x0
0000000000020968	add	w11, w9, w10
000000000002096c	cmp	w11, #0x0
0000000000020970	cinc	w11, w11, lt
0000000000020974	asr	w11, w11, #1
0000000000020978	sbfiz	x12, x11, #4, #32
000000000002097c	ldr	w12, [x8, x12]
0000000000020980	cmp	w12, #0xb8
0000000000020984	csinc	w10, w10, w11, ge
0000000000020988	csel	w9, w9, w11, lt
000000000002098c	cmp	w10, w9
0000000000020990	b.lt	0x20968
0000000000020994	sxtw	x9, w10
0000000000020998	lsl	x9, x9, #4
000000000002099c	ldr	w8, [x8, x9]
00000000000209a0	cmp	w8, #0xb8
00000000000209a4	b.eq	0x20628
00000000000209a8	ldr	x8, [x20]
00000000000209ac	and	x8, x8, #0xfffffffffffffffc
00000000000209b0	ldr	x8, [x8]
00000000000209b4	ldr	w9, [x8, #0x3c]
00000000000209b8	ldr	x8, [x8, #0x40]
00000000000209bc	tbnz	w9, #0x1f, 0x20a24
00000000000209c0	mov	w10, #0x24
00000000000209c4	and	x9, x9, x10
00000000000209c8	lsl	x9, x9, #4
00000000000209cc	ldr	w8, [x8, x9]
00000000000209d0	cmp	w8, #0x24
00000000000209d4	b.ne	0x20b14
00000000000209d8	mov	x0, x20
00000000000209dc	mov	x1, x21
00000000000209e0	mov	w2, #0x1
00000000000209e4	bl	"_kfun:kotlin.collections.filterInPlace#internal.14"
00000000000209e8	mov	x8, x0
00000000000209ec	mov	x0, x22
00000000000209f0	blr	x26
00000000000209f4	ldr	x9, [x0]
00000000000209f8	ldr	x10, [sp, #0x18]
00000000000209fc	str	x10, [x9, #0x110]
0000000000020a00	mov	x0, x8
0000000000020a04	ldp	x29, x30, [sp, #0xa0]
0000000000020a08	ldp	x20, x19, [sp, #0x90]
0000000000020a0c	ldp	x22, x21, [sp, #0x80]
0000000000020a10	ldp	x24, x23, [sp, #0x70]
0000000000020a14	ldp	x26, x25, [sp, #0x60]
0000000000020a18	ldp	x28, x27, [sp, #0x50]
0000000000020a1c	add	sp, sp, #0xb0
0000000000020a20	ret
0000000000020a24	neg	w10, w9
0000000000020a28	mvn	w9, w9
0000000000020a2c	cmp	w10, #0x9
0000000000020a30	b.ge	0x20a7c
0000000000020a34	cmp	w10, #0x2
0000000000020a38	b.lt	0x20afc
0000000000020a3c	mov	x10, #0x0
0000000000020a40	mov	x11, x8
0000000000020a44	ldr	w12, [x11]
0000000000020a48	cmp	w12, #0x23
0000000000020a4c	b.gt	0x20b74
0000000000020a50	add	x10, x10, #0x1
0000000000020a54	add	x11, x11, #0x10
0000000000020a58	cmp	x9, x10
0000000000020a5c	b.ne	0x20a44
0000000000020a60	mov	x10, x9
0000000000020a64	sxtw	x9, w10
0000000000020a68	lsl	x9, x9, #4
0000000000020a6c	ldr	w8, [x8, x9]
0000000000020a70	cmp	w8, #0x24
0000000000020a74	b.eq	0x209d8
0000000000020a78	b	0x20b14
0000000000020a7c	mov	w10, #0x0
0000000000020a80	add	w11, w9, w10
0000000000020a84	cmp	w11, #0x0
0000000000020a88	cinc	w11, w11, lt
0000000000020a8c	asr	w11, w11, #1
0000000000020a90	sbfiz	x12, x11, #4, #32
0000000000020a94	ldr	w12, [x8, x12]
0000000000020a98	cmp	w12, #0x24
0000000000020a9c	csinc	w10, w10, w11, ge
0000000000020aa0	csel	w9, w9, w11, lt
0000000000020aa4	cmp	w10, w9
0000000000020aa8	b.lt	0x20a80
0000000000020aac	b	0x20b00
0000000000020ab0	neg	w10, w9
0000000000020ab4	mvn	w9, w9
0000000000020ab8	cmp	w10, #0x9
0000000000020abc	ldr	x26, [sp]
0000000000020ac0	add	x23, sp, #0x10
0000000000020ac4	b.ge	0x20b40
0000000000020ac8	cmp	w10, #0x2
0000000000020acc	b.lt	0x20ba4
0000000000020ad0	mov	x10, #0x0
0000000000020ad4	mov	x11, x8
0000000000020ad8	ldr	w12, [x11]
0000000000020adc	cmp	w12, #0x2a
0000000000020ae0	b.gt	0x20bac
0000000000020ae4	add	x10, x10, #0x1
0000000000020ae8	add	x11, x11, #0x10
0000000000020aec	cmp	x9, x10
0000000000020af0	b.ne	0x20ad8
0000000000020af4	mov	x10, x9
0000000000020af8	b	0x20bac
0000000000020afc	mov	w10, #0x0
0000000000020b00	sxtw	x9, w10
0000000000020b04	lsl	x9, x9, #4
0000000000020b08	ldr	w8, [x8, x9]
0000000000020b0c	cmp	w8, #0x24
0000000000020b10	b.eq	0x209d8
0000000000020b14	adr	x1, #0x4324c
0000000000020b18	nop
0000000000020b1c	mov	x0, x20
0000000000020b20	bl	_ThrowClassCastException
0000000000020b24	mov	w10, #0x0
0000000000020b28	sxtw	x9, w10
0000000000020b2c	lsl	x9, x9, #4
0000000000020b30	ldr	w8, [x8, x9]
0000000000020b34	cmp	w8, #0xb8
0000000000020b38	b.eq	0x20628
0000000000020b3c	b	0x209a8
0000000000020b40	mov	w10, #0x0
0000000000020b44	add	w11, w9, w10
0000000000020b48	cmp	w11, #0x0
0000000000020b4c	cinc	w11, w11, lt
0000000000020b50	asr	w11, w11, #1
0000000000020b54	sbfiz	x12, x11, #4, #32
0000000000020b58	ldr	w12, [x8, x12]
0000000000020b5c	cmp	w12, #0x2b
0000000000020b60	csinc	w10, w10, w11, ge
0000000000020b64	csel	w9, w9, w11, lt
0000000000020b68	cmp	w10, w9
0000000000020b6c	b.lt	0x20b44
0000000000020b70	b	0x20bac
0000000000020b74	sxtw	x9, w10
0000000000020b78	lsl	x9, x9, #4
0000000000020b7c	ldr	w8, [x8, x9]
0000000000020b80	cmp	w8, #0x24
0000000000020b84	b.eq	0x209d8
0000000000020b88	b	0x20b14
0000000000020b8c	sxtw	x9, w10
0000000000020b90	lsl	x9, x9, #4
0000000000020b94	ldr	w8, [x8, x9]
0000000000020b98	cmp	w8, #0xb8
0000000000020b9c	b.ne	0x209a8
0000000000020ba0	b	0x20628
0000000000020ba4	mov	w10, #0x0
0000000000020ba8	b	0x20bac
0000000000020bac	sxtw	x9, w10
0000000000020bb0	add	x8, x8, x9, lsl #4
0000000000020bb4	ldr	x8, [x8, #0x8]
0000000000020bb8	ldr	x8, [x8]
0000000000020bbc	mov	x0, x20
0000000000020bc0	blr	x8
0000000000020bc4	cmp	w22, w0
0000000000020bc8	b.ge	0x20bec
0000000000020bcc	mov	x0, x20
0000000000020bd0	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0§<kotlin.Any?>}kotlin.Int"
0000000000020bd4	cmp	w22, w0
0000000000020bd8	b.le	0x20bfc
0000000000020bdc	mov	w8, #0x1
0000000000020be0	adrp	x22, 90 ; 0x7a000
0000000000020be4	add	x22, x22, #0x2c0
0000000000020be8	b	0x209ec
0000000000020bec	mov	w8, #0x0
0000000000020bf0	adrp	x22, 90 ; 0x7a000
0000000000020bf4	add	x22, x22, #0x2c0
0000000000020bf8	b	0x209ec
0000000000020bfc	mov	x21, x0
0000000000020c00	add	x23, x23, #0x30
0000000000020c04	mov	w24, #0x16
0000000000020c08	b	0x20c54
0000000000020c0c	sub	w25, w21, #0x1
0000000000020c10	ldr	x8, [x20]
0000000000020c14	and	x8, x8, #0xfffffffffffffffc
0000000000020c18	ldr	x8, [x8]
0000000000020c1c	ldr	w9, [x8, #0x3c]
0000000000020c20	ldr	x8, [x8, #0x40]
0000000000020c24	tbnz	w9, #0x1f, 0x20c64
0000000000020c28	and	x9, x9, x24
0000000000020c2c	add	x8, x8, x9, lsl #4
0000000000020c30	ldr	x8, [x8, #0x8]
0000000000020c34	ldr	x8, [x8, #0x48]
0000000000020c38	mov	x0, x20
0000000000020c3c	mov	x1, x21
0000000000020c40	mov	x2, x23
0000000000020c44	blr	x8
0000000000020c48	cmp	w21, w22
0000000000020c4c	mov	x21, x25
0000000000020c50	b.eq	0x20bdc
0000000000020c54	ldarb	w8, [x19]
0000000000020c58	tbz	w8, #0x0, 0x20c0c
0000000000020c5c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020c60	b	0x20c0c
0000000000020c64	neg	w10, w9
0000000000020c68	mvn	w9, w9
0000000000020c6c	cmp	w10, #0x9
0000000000020c70	b.ge	0x20cac
0000000000020c74	cmp	w10, #0x2
0000000000020c78	b.lt	0x20ce0
0000000000020c7c	mov	x10, #0x0
0000000000020c80	mov	x11, x8
0000000000020c84	ldr	w12, [x11]
0000000000020c88	cmp	w12, #0x15
0000000000020c8c	b.gt	0x20cec
0000000000020c90	add	x10, x10, #0x1
0000000000020c94	add	x11, x11, #0x10
0000000000020c98	cmp	x9, x10
0000000000020c9c	b.ne	0x20c84
0000000000020ca0	mov	x10, x9
0000000000020ca4	sxtw	x9, w10
0000000000020ca8	b	0x20c2c
0000000000020cac	mov	w10, #0x0
0000000000020cb0	add	w11, w9, w10
0000000000020cb4	cmp	w11, #0x0
0000000000020cb8	cinc	w11, w11, lt
0000000000020cbc	asr	w11, w11, #1
0000000000020cc0	sbfiz	x12, x11, #4, #32
0000000000020cc4	ldr	w12, [x8, x12]
0000000000020cc8	cmp	w12, #0x16
0000000000020ccc	csinc	w10, w10, w11, ge
0000000000020cd0	csel	w9, w9, w11, lt
0000000000020cd4	cmp	w10, w9
0000000000020cd8	b.lt	0x20cb0
0000000000020cdc	b	0x20cec
0000000000020ce0	mov	w10, #0x0
0000000000020ce4	sxtw	x9, w10
0000000000020ce8	b	0x20c2c
0000000000020cec	sxtw	x9, w10
0000000000020cf0	b	0x20c2c
_kfun:kotlin.collections.filterInPlace#internal.14:
0000000000020cf4	sub	sp, sp, #0x90
0000000000020cf8	stp	x28, x27, [sp, #0x30]
0000000000020cfc	stp	x26, x25, [sp, #0x40]
0000000000020d00	stp	x24, x23, [sp, #0x50]
0000000000020d04	stp	x22, x21, [sp, #0x60]
0000000000020d08	stp	x20, x19, [sp, #0x70]
0000000000020d0c	stp	x29, x30, [sp, #0x80]
0000000000020d10	add	x29, sp, #0x80
0000000000020d14	mov	x19, x2
0000000000020d18	mov	x20, x1
0000000000020d1c	mov	x23, x0
0000000000020d20	movi.16b	v0, #0x0
0000000000020d24	stp	q0, q0, [sp]
0000000000020d28	str	q0, [sp, #0x20]
0000000000020d2c	mov	x22, sp
0000000000020d30	add	x24, x22, #0x18
0000000000020d34	adrp	x0, 90 ; 0x7a000
0000000000020d38	add	x0, x0, #0x2c0
0000000000020d3c	ldr	x8, [x0]
0000000000020d40	blr	x8
0000000000020d44	ldr	x25, [x0]
0000000000020d48	ldr	x8, [x25, #0x110]
0000000000020d4c	str	x22, [x25, #0x110]
0000000000020d50	mov	x9, #0x600000000
0000000000020d54	stp	x8, x9, [sp, #0x8]
0000000000020d58	adr	x26, #0x73531
0000000000020d5c	nop
0000000000020d60	ldarb	w8, [x26]
0000000000020d64	tbz	w8, #0x0, 0x20d6c
0000000000020d68	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020d6c	add	x21, x22, #0x20
0000000000020d70	add	x22, x22, #0x28
0000000000020d74	ldr	x8, [x23]
0000000000020d78	and	x8, x8, #0xfffffffffffffffc
0000000000020d7c	ldr	x8, [x8]
0000000000020d80	ldr	w9, [x8, #0x3c]
0000000000020d84	ldr	x8, [x8, #0x40]
0000000000020d88	tbnz	w9, #0x1f, 0x20d98
0000000000020d8c	mov	w10, #0x24
0000000000020d90	and	x9, x9, x10
0000000000020d94	b	0x20e1c
0000000000020d98	neg	w10, w9
0000000000020d9c	mvn	w9, w9
0000000000020da0	cmp	w10, #0x9
0000000000020da4	b.ge	0x20ddc
0000000000020da8	cmp	w10, #0x2
0000000000020dac	b.lt	0x20e10
0000000000020db0	mov	x10, #0x0
0000000000020db4	mov	x11, x8
0000000000020db8	ldr	w12, [x11]
0000000000020dbc	cmp	w12, #0x23
0000000000020dc0	b.gt	0x20e18
0000000000020dc4	add	x10, x10, #0x1
0000000000020dc8	add	x11, x11, #0x10
0000000000020dcc	cmp	x9, x10
0000000000020dd0	b.ne	0x20db8
0000000000020dd4	mov	x10, x9
0000000000020dd8	b	0x20e18
0000000000020ddc	mov	w10, #0x0
0000000000020de0	add	w11, w9, w10
0000000000020de4	cmp	w11, #0x0
0000000000020de8	cinc	w11, w11, lt
0000000000020dec	asr	w11, w11, #1
0000000000020df0	sbfiz	x12, x11, #4, #32
0000000000020df4	ldr	w12, [x8, x12]
0000000000020df8	cmp	w12, #0x24
0000000000020dfc	csinc	w10, w10, w11, ge
0000000000020e00	csel	w9, w9, w11, lt
0000000000020e04	cmp	w10, w9
0000000000020e08	b.lt	0x20de0
0000000000020e0c	b	0x20e18
0000000000020e10	mov	w10, #0x0
0000000000020e14	b	0x20e18
0000000000020e18	sxtw	x9, w10
0000000000020e1c	add	x8, x8, x9, lsl #4
0000000000020e20	ldr	x8, [x8, #0x8]
0000000000020e24	ldr	x8, [x8]
0000000000020e28	mov	x0, x23
0000000000020e2c	mov	x1, x24
0000000000020e30	blr	x8
0000000000020e34	mov	x23, x0
0000000000020e38	mov	w28, #0x0
0000000000020e3c	mov	w24, #0xa0
0000000000020e40	mov	w27, #0x2c
0000000000020e44	ldr	x8, [x23]
0000000000020e48	and	x8, x8, #0xfffffffffffffffc
0000000000020e4c	ldr	x8, [x8]
0000000000020e50	ldr	w9, [x8, #0x3c]
0000000000020e54	ldr	x8, [x8, #0x40]
0000000000020e58	tbz	w9, #0x1f, 0x20ea0
0000000000020e5c	b	0x20f98
0000000000020e60	and	x9, x9, x27
0000000000020e64	add	x8, x8, x9, lsl #4
0000000000020e68	ldr	x8, [x8, #0x8]
0000000000020e6c	ldr	x8, [x8]
0000000000020e70	mov	x0, x20
0000000000020e74	mov	x2, x22
0000000000020e78	blr	x8
0000000000020e7c	ldrb	w8, [x0, #0x8]
0000000000020e80	cmp	w8, w19
0000000000020e84	b.eq	0x20ec0
0000000000020e88	ldr	x8, [x23]
0000000000020e8c	and	x8, x8, #0xfffffffffffffffc
0000000000020e90	ldr	x8, [x8]
0000000000020e94	ldr	w9, [x8, #0x3c]
0000000000020e98	ldr	x8, [x8, #0x40]
0000000000020e9c	tbnz	w9, #0x1f, 0x20f98
0000000000020ea0	and	x9, x9, x24
0000000000020ea4	add	x8, x8, x9, lsl #4
0000000000020ea8	ldr	x8, [x8, #0x8]
0000000000020eac	ldr	x8, [x8]
0000000000020eb0	mov	x0, x23
0000000000020eb4	blr	x8
0000000000020eb8	tbnz	w0, #0x0, 0x21034
0000000000020ebc	b	0x211a0
0000000000020ec0	ldr	x8, [x23]
0000000000020ec4	and	x8, x8, #0xfffffffffffffffc
0000000000020ec8	ldr	x8, [x8]
0000000000020ecc	ldr	w9, [x8, #0x3c]
0000000000020ed0	ldr	x8, [x8, #0x40]
0000000000020ed4	tbnz	w9, #0x1f, 0x20ee4
0000000000020ed8	mov	w10, #0x39
0000000000020edc	and	x9, x9, x10
0000000000020ee0	b	0x20f68
0000000000020ee4	neg	w10, w9
0000000000020ee8	mvn	w9, w9
0000000000020eec	cmp	w10, #0x9
0000000000020ef0	b.ge	0x20f28
0000000000020ef4	cmp	w10, #0x2
0000000000020ef8	b.lt	0x20f5c
0000000000020efc	mov	x10, #0x0
0000000000020f00	mov	x11, x8
0000000000020f04	ldr	w12, [x11]
0000000000020f08	cmp	w12, #0x38
0000000000020f0c	b.gt	0x20f64
0000000000020f10	add	x10, x10, #0x1
0000000000020f14	add	x11, x11, #0x10
0000000000020f18	cmp	x9, x10
0000000000020f1c	b.ne	0x20f04
0000000000020f20	mov	x10, x9
0000000000020f24	b	0x20f64
0000000000020f28	mov	w10, #0x0
0000000000020f2c	add	w11, w9, w10
0000000000020f30	cmp	w11, #0x0
0000000000020f34	cinc	w11, w11, lt
0000000000020f38	asr	w11, w11, #1
0000000000020f3c	sbfiz	x12, x11, #4, #32
0000000000020f40	ldr	w12, [x8, x12]
0000000000020f44	cmp	w12, #0x39
0000000000020f48	csinc	w10, w10, w11, ge
0000000000020f4c	csel	w9, w9, w11, lt
0000000000020f50	cmp	w10, w9
0000000000020f54	b.lt	0x20f2c
0000000000020f58	b	0x20f64
0000000000020f5c	mov	w10, #0x0
0000000000020f60	b	0x20f64
0000000000020f64	sxtw	x9, w10
0000000000020f68	add	x8, x8, x9, lsl #4
0000000000020f6c	ldr	x8, [x8, #0x8]
0000000000020f70	ldr	x8, [x8]
0000000000020f74	mov	x0, x23
0000000000020f78	blr	x8
0000000000020f7c	mov	w28, #0x1
0000000000020f80	ldr	x8, [x23]
0000000000020f84	and	x8, x8, #0xfffffffffffffffc
0000000000020f88	ldr	x8, [x8]
0000000000020f8c	ldr	w9, [x8, #0x3c]
0000000000020f90	ldr	x8, [x8, #0x40]
0000000000020f94	tbz	w9, #0x1f, 0x20ea0
0000000000020f98	neg	w10, w9
0000000000020f9c	mvn	w9, w9
0000000000020fa0	cmp	w10, #0x9
0000000000020fa4	b.ge	0x20fdc
0000000000020fa8	cmp	w10, #0x2
0000000000020fac	b.lt	0x21010
0000000000020fb0	mov	x10, #0x0
0000000000020fb4	mov	x11, x8
0000000000020fb8	ldr	w12, [x11]
0000000000020fbc	cmp	w12, #0x9f
0000000000020fc0	b.gt	0x21018
0000000000020fc4	add	x10, x10, #0x1
0000000000020fc8	add	x11, x11, #0x10
0000000000020fcc	cmp	x9, x10
0000000000020fd0	b.ne	0x20fb8
0000000000020fd4	mov	x10, x9
0000000000020fd8	b	0x21018
0000000000020fdc	mov	w10, #0x0
0000000000020fe0	add	w11, w9, w10
0000000000020fe4	cmp	w11, #0x0
0000000000020fe8	cinc	w11, w11, lt
0000000000020fec	asr	w11, w11, #1
0000000000020ff0	sbfiz	x12, x11, #4, #32
0000000000020ff4	ldr	w12, [x8, x12]
0000000000020ff8	cmp	w12, #0xa0
0000000000020ffc	csinc	w10, w10, w11, ge
0000000000021000	csel	w9, w9, w11, lt
0000000000021004	cmp	w10, w9
0000000000021008	b.lt	0x20fe0
000000000002100c	b	0x21018
0000000000021010	mov	w10, #0x0
0000000000021014	b	0x21018
0000000000021018	sxtw	x9, w10
000000000002101c	add	x8, x8, x9, lsl #4
0000000000021020	ldr	x8, [x8, #0x8]
0000000000021024	ldr	x8, [x8]
0000000000021028	mov	x0, x23
000000000002102c	blr	x8
0000000000021030	tbz	w0, #0x0, 0x211a0
0000000000021034	ldarb	w8, [x26]
0000000000021038	tbz	w8, #0x0, 0x21040
000000000002103c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021040	ldr	x8, [x23]
0000000000021044	and	x8, x8, #0xfffffffffffffffc
0000000000021048	ldr	x8, [x8]
000000000002104c	ldr	w9, [x8, #0x3c]
0000000000021050	ldr	x8, [x8, #0x40]
0000000000021054	tbnz	w9, #0x1f, 0x21060
0000000000021058	and	x9, x9, x24
000000000002105c	b	0x210e4
0000000000021060	neg	w10, w9
0000000000021064	mvn	w9, w9
0000000000021068	cmp	w10, #0x9
000000000002106c	b.ge	0x210a4
0000000000021070	cmp	w10, #0x2
0000000000021074	b.lt	0x210d8
0000000000021078	mov	x10, #0x0
000000000002107c	mov	x11, x8
0000000000021080	ldr	w12, [x11]
0000000000021084	cmp	w12, #0x9f
0000000000021088	b.gt	0x210e0
000000000002108c	add	x10, x10, #0x1
0000000000021090	add	x11, x11, #0x10
0000000000021094	cmp	x9, x10
0000000000021098	b.ne	0x21080
000000000002109c	mov	x10, x9
00000000000210a0	b	0x210e0
00000000000210a4	mov	w10, #0x0
00000000000210a8	add	w11, w9, w10
00000000000210ac	cmp	w11, #0x0
00000000000210b0	cinc	w11, w11, lt
00000000000210b4	asr	w11, w11, #1
00000000000210b8	sbfiz	x12, x11, #4, #32
00000000000210bc	ldr	w12, [x8, x12]
00000000000210c0	cmp	w12, #0xa0
00000000000210c4	csinc	w10, w10, w11, ge
00000000000210c8	csel	w9, w9, w11, lt
00000000000210cc	cmp	w10, w9
00000000000210d0	b.lt	0x210a8
00000000000210d4	b	0x210e0
00000000000210d8	mov	w10, #0x0
00000000000210dc	b	0x210e0
00000000000210e0	sxtw	x9, w10
00000000000210e4	add	x8, x8, x9, lsl #4
00000000000210e8	ldr	x8, [x8, #0x8]
00000000000210ec	ldr	x8, [x8, #0x8]
00000000000210f0	mov	x0, x23
00000000000210f4	mov	x1, x21
00000000000210f8	blr	x8
00000000000210fc	mov	x1, x0
0000000000021100	ldr	x8, [x20]
0000000000021104	and	x8, x8, #0xfffffffffffffffc
0000000000021108	ldr	x8, [x8]
000000000002110c	ldr	w9, [x8, #0x3c]
0000000000021110	ldr	x8, [x8, #0x40]
0000000000021114	tbz	w9, #0x1f, 0x20e60
0000000000021118	neg	w10, w9
000000000002111c	mvn	w9, w9
0000000000021120	cmp	w10, #0x9
0000000000021124	b.ge	0x2115c
0000000000021128	cmp	w10, #0x2
000000000002112c	b.lt	0x21190
0000000000021130	mov	x10, #0x0
0000000000021134	mov	x11, x8
0000000000021138	ldr	w12, [x11]
000000000002113c	cmp	w12, #0x2b
0000000000021140	b.gt	0x21198
0000000000021144	add	x10, x10, #0x1
0000000000021148	add	x11, x11, #0x10
000000000002114c	cmp	x9, x10
0000000000021150	b.ne	0x21138
0000000000021154	mov	x10, x9
0000000000021158	b	0x21198
000000000002115c	mov	w10, #0x0
0000000000021160	add	w11, w9, w10
0000000000021164	cmp	w11, #0x0
0000000000021168	cinc	w11, w11, lt
000000000002116c	asr	w11, w11, #1
0000000000021170	sbfiz	x12, x11, #4, #32
0000000000021174	ldr	w12, [x8, x12]
0000000000021178	cmp	w12, #0x2c
000000000002117c	csinc	w10, w10, w11, ge
0000000000021180	csel	w9, w9, w11, lt
0000000000021184	cmp	w10, w9
0000000000021188	b.lt	0x21160
000000000002118c	b	0x21198
0000000000021190	mov	w10, #0x0
0000000000021194	b	0x21198
0000000000021198	sxtw	x9, w10
000000000002119c	b	0x20e64
00000000000211a0	ldr	x8, [sp, #0x8]
00000000000211a4	str	x8, [x25, #0x110]
00000000000211a8	and	w0, w28, #0x1
00000000000211ac	ldp	x29, x30, [sp, #0x80]
00000000000211b0	ldp	x20, x19, [sp, #0x70]
00000000000211b4	ldp	x22, x21, [sp, #0x60]
00000000000211b8	ldp	x24, x23, [sp, #0x50]
00000000000211bc	ldp	x26, x25, [sp, #0x40]
00000000000211c0	ldp	x28, x27, [sp, #0x30]
00000000000211c4	add	sp, sp, #0x90
00000000000211c8	ret
_kfun:kotlin.collections.ByteIterator#$<bridge-BNN>next(){}kotlin.Byte(){}kotlin.Any?:
00000000000211cc	stp	x20, x19, [sp, #-0x20]!
00000000000211d0	stp	x29, x30, [sp, #0x10]
00000000000211d4	add	x29, sp, #0x10
00000000000211d8	mov	x19, x1
00000000000211dc	mov	x20, x0
00000000000211e0	adr	x8, #0x730a9
00000000000211e4	nop
00000000000211e8	ldarb	w8, [x8]
00000000000211ec	tbz	w8, #0x0, 0x211f4
00000000000211f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000211f4	ldr	x8, [x20]
00000000000211f8	and	x8, x8, #0xfffffffffffffffc
00000000000211fc	ldr	x8, [x8]
0000000000021200	ldr	x8, [x8, #0x90]
0000000000021204	mov	x0, x20
0000000000021208	blr	x8
000000000002120c	mov	x1, x19
0000000000021210	bl	"_kfun:kotlin#<Byte-box>(kotlin.Byte){}kotlin.Any"
0000000000021214	str	x0, [x19]
0000000000021218	ldp	x29, x30, [sp, #0x10]
000000000002121c	ldp	x20, x19, [sp], #0x20
0000000000021220	ret
_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal:
0000000000021224	sub	sp, sp, #0x70
0000000000021228	stp	x22, x21, [sp, #0x40]
000000000002122c	stp	x20, x19, [sp, #0x50]
0000000000021230	stp	x29, x30, [sp, #0x60]
0000000000021234	add	x29, sp, #0x60
0000000000021238	mov	x19, x1
000000000002123c	mov	x20, x0
0000000000021240	movi.16b	v0, #0x0
0000000000021244	stp	q0, q0, [sp]
0000000000021248	stp	q0, q0, [sp, #0x20]
000000000002124c	mov	x22, sp
0000000000021250	adrp	x0, 89 ; 0x7a000
0000000000021254	add	x0, x0, #0x2c0
0000000000021258	ldr	x8, [x0]
000000000002125c	blr	x8
0000000000021260	ldr	x21, [x0]
0000000000021264	ldr	x8, [x21, #0x110]
0000000000021268	str	x22, [x21, #0x110]
000000000002126c	mov	x9, #0x800000000
0000000000021270	stp	x8, x9, [sp, #0x8]
0000000000021274	adr	x8, #0x73015
0000000000021278	nop
000000000002127c	ldarb	w8, [x8]
0000000000021280	tbz	w8, #0x0, 0x21288
0000000000021284	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021288	ldr	x0, [x20, #0x10]
000000000002128c	stp	x0, x0, [sp, #0x18]
0000000000021290	str	x0, [sp, #0x28]
0000000000021294	cbnz	x0, 0x21364
0000000000021298	add	x1, x22, #0x30
000000000002129c	ldr	x0, [x20, #0x8]
00000000000212a0	ldr	x8, [x0]
00000000000212a4	and	x8, x8, #0xfffffffffffffffc
00000000000212a8	ldr	x8, [x8]
00000000000212ac	ldr	w9, [x8, #0x3c]
00000000000212b0	ldr	x8, [x8, #0x40]
00000000000212b4	tbnz	w9, #0x1f, 0x212c4
00000000000212b8	mov	w10, #0x59
00000000000212bc	and	x9, x9, x10
00000000000212c0	b	0x21348
00000000000212c4	neg	w10, w9
00000000000212c8	mvn	w9, w9
00000000000212cc	cmp	w10, #0x9
00000000000212d0	b.ge	0x21308
00000000000212d4	cmp	w10, #0x2
00000000000212d8	b.lt	0x2133c
00000000000212dc	mov	x10, #0x0
00000000000212e0	mov	x11, x8
00000000000212e4	ldr	w12, [x11]
00000000000212e8	cmp	w12, #0x58
00000000000212ec	b.gt	0x21344
00000000000212f0	add	x10, x10, #0x1
00000000000212f4	add	x11, x11, #0x10
00000000000212f8	cmp	x9, x10
00000000000212fc	b.ne	0x212e4
0000000000021300	mov	x10, x9
0000000000021304	b	0x21344
0000000000021308	mov	w10, #0x0
000000000002130c	add	w11, w9, w10
0000000000021310	cmp	w11, #0x0
0000000000021314	cinc	w11, w11, lt
0000000000021318	asr	w11, w11, #1
000000000002131c	sbfiz	x12, x11, #4, #32
0000000000021320	ldr	w12, [x8, x12]
0000000000021324	cmp	w12, #0x59
0000000000021328	csinc	w10, w10, w11, ge
000000000002132c	csel	w9, w9, w11, lt
0000000000021330	cmp	w10, w9
0000000000021334	b.lt	0x2130c
0000000000021338	b	0x21344
000000000002133c	mov	w10, #0x0
0000000000021340	b	0x21344
0000000000021344	sxtw	x9, w10
0000000000021348	add	x8, x8, x9, lsl #4
000000000002134c	ldr	x8, [x8, #0x8]
0000000000021350	ldr	x8, [x8]
0000000000021354	blr	x8
0000000000021358	str	x0, [sp, #0x20]
000000000002135c	str	x0, [sp, #0x38]
0000000000021360	str	x0, [x20, #0x10]
0000000000021364	str	x0, [x19]
0000000000021368	ldr	x8, [sp, #0x8]
000000000002136c	str	x8, [x21, #0x110]
0000000000021370	ldp	x29, x30, [sp, #0x60]
0000000000021374	ldp	x20, x19, [sp, #0x50]
0000000000021378	ldp	x22, x21, [sp, #0x40]
000000000002137c	add	sp, sp, #0x70
0000000000021380	ret
_kfun:kotlin.enums.EnumEntriesList.<get-size>#internal:
0000000000021384	sub	sp, sp, #0x50
0000000000021388	stp	x22, x21, [sp, #0x20]
000000000002138c	stp	x20, x19, [sp, #0x30]
0000000000021390	stp	x29, x30, [sp, #0x40]
0000000000021394	add	x29, sp, #0x40
0000000000021398	mov	x19, x0
000000000002139c	movi.16b	v0, #0x0
00000000000213a0	stp	q0, q0, [sp]
00000000000213a4	mov	x8, sp
00000000000213a8	add	x20, x8, #0x18
00000000000213ac	adrp	x0, 89 ; 0x7a000
00000000000213b0	add	x0, x0, #0x2c0
00000000000213b4	ldr	x9, [x0]
00000000000213b8	blr	x9
00000000000213bc	ldr	x21, [x0]
00000000000213c0	ldr	x9, [x21, #0x110]
00000000000213c4	str	x8, [x21, #0x110]
00000000000213c8	mov	x8, #0x400000000
00000000000213cc	stp	x9, x8, [sp, #0x8]
00000000000213d0	adr	x8, #0x72eb9
00000000000213d4	nop
00000000000213d8	ldarb	w8, [x8]
00000000000213dc	tbz	w8, #0x0, 0x213e4
00000000000213e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000213e4	mov	x0, x19
00000000000213e8	mov	x1, x20
00000000000213ec	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
00000000000213f0	ldr	w0, [x0, #0x8]
00000000000213f4	ldr	x8, [sp, #0x8]
00000000000213f8	str	x8, [x21, #0x110]
00000000000213fc	ldp	x29, x30, [sp, #0x40]
0000000000021400	ldp	x20, x19, [sp, #0x30]
0000000000021404	ldp	x22, x21, [sp, #0x20]
0000000000021408	add	sp, sp, #0x50
000000000002140c	ret
_kfun:kotlin.enums.EnumEntriesList.get#internal:
0000000000021410	sub	sp, sp, #0x60
0000000000021414	stp	x24, x23, [sp, #0x20]
0000000000021418	stp	x22, x21, [sp, #0x30]
000000000002141c	stp	x20, x19, [sp, #0x40]
0000000000021420	stp	x29, x30, [sp, #0x50]
0000000000021424	add	x29, sp, #0x50
0000000000021428	mov	x19, x2
000000000002142c	mov	x20, x1
0000000000021430	mov	x21, x0
0000000000021434	movi.16b	v0, #0x0
0000000000021438	stp	q0, q0, [sp]
000000000002143c	mov	x8, sp
0000000000021440	add	x22, x8, #0x18
0000000000021444	adrp	x0, 89 ; 0x7a000
0000000000021448	add	x0, x0, #0x2c0
000000000002144c	ldr	x9, [x0]
0000000000021450	blr	x9
0000000000021454	ldr	x23, [x0]
0000000000021458	ldr	x9, [x23, #0x110]
000000000002145c	str	x8, [x23, #0x110]
0000000000021460	mov	x8, #0x400000000
0000000000021464	stp	x9, x8, [sp, #0x8]
0000000000021468	adr	x8, #0x72e21
000000000002146c	nop
0000000000021470	ldarb	w8, [x8]
0000000000021474	tbz	w8, #0x0, 0x2147c
0000000000021478	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002147c	mov	x0, x21
0000000000021480	mov	x1, x22
0000000000021484	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000021488	mov	x21, x0
000000000002148c	ldr	w1, [x0, #0x8]
0000000000021490	mov	x0, x20
0000000000021494	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
0000000000021498	ldr	w8, [x21, #0x8]
000000000002149c	cmp	w8, w20
00000000000214a0	b.ls	0x214d0
00000000000214a4	add	x8, x21, w20, sxtw #3
00000000000214a8	ldr	x0, [x8, #0x10]
00000000000214ac	str	x0, [x19]
00000000000214b0	ldr	x8, [sp, #0x8]
00000000000214b4	str	x8, [x23, #0x110]
00000000000214b8	ldp	x29, x30, [sp, #0x50]
00000000000214bc	ldp	x20, x19, [sp, #0x40]
00000000000214c0	ldp	x22, x21, [sp, #0x30]
00000000000214c4	ldp	x24, x23, [sp, #0x20]
00000000000214c8	add	sp, sp, #0x60
00000000000214cc	ret
00000000000214d0	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.enums.EnumEntriesList.contains#internal:
00000000000214d4	sub	sp, sp, #0x70
00000000000214d8	stp	x24, x23, [sp, #0x30]
00000000000214dc	stp	x22, x21, [sp, #0x40]
00000000000214e0	stp	x20, x19, [sp, #0x50]
00000000000214e4	stp	x29, x30, [sp, #0x60]
00000000000214e8	add	x29, sp, #0x60
00000000000214ec	mov	x19, x1
00000000000214f0	mov	x20, x0
00000000000214f4	movi.16b	v0, #0x0
00000000000214f8	stp	q0, q0, [sp]
00000000000214fc	str	xzr, [sp, #0x20]
0000000000021500	mov	x23, sp
0000000000021504	adrp	x0, 89 ; 0x7a000
0000000000021508	add	x0, x0, #0x2c0
000000000002150c	ldr	x8, [x0]
0000000000021510	blr	x8
0000000000021514	ldr	x22, [x0]
0000000000021518	ldr	x8, [x22, #0x110]
000000000002151c	str	x23, [x22, #0x110]
0000000000021520	mov	x9, #0x500000000
0000000000021524	stp	x8, x9, [sp, #0x8]
0000000000021528	adr	x8, #0x72d61
000000000002152c	nop
0000000000021530	ldarb	w8, [x8]
0000000000021534	tbz	w8, #0x0, 0x2153c
0000000000021538	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002153c	cbz	x19, 0x2155c
0000000000021540	ldr	x8, [x19]
0000000000021544	and	x8, x8, #0xfffffffffffffffc
0000000000021548	ldr	x8, [x8]
000000000002154c	ldr	w8, [x8, #0x5c]
0000000000021550	sub	w8, w8, #0x57
0000000000021554	cmp	w8, #0xe
0000000000021558	b.ls	0x21564
000000000002155c	mov	w0, #0x0
0000000000021560	b	0x21588
0000000000021564	add	x21, x23, #0x20
0000000000021568	add	x1, x23, #0x18
000000000002156c	mov	x0, x20
0000000000021570	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000021574	ldr	w1, [x19, #0x10]
0000000000021578	mov	x2, x21
000000000002157c	bl	"_kfun:kotlin.collections#getOrNull__at__kotlin.Array<out|0:0>(kotlin.Int){0§<kotlin.Any?>}0:0?"
0000000000021580	cmp	x0, x19
0000000000021584	cset	w0, eq
0000000000021588	ldr	x8, [sp, #0x8]
000000000002158c	str	x8, [x22, #0x110]
0000000000021590	ldp	x29, x30, [sp, #0x60]
0000000000021594	ldp	x20, x19, [sp, #0x50]
0000000000021598	ldp	x22, x21, [sp, #0x40]
000000000002159c	ldp	x24, x23, [sp, #0x30]
00000000000215a0	add	sp, sp, #0x70
00000000000215a4	ret
_kfun:kotlin.enums.EnumEntriesList.indexOf#internal:
00000000000215a8	sub	sp, sp, #0x70
00000000000215ac	stp	x24, x23, [sp, #0x30]
00000000000215b0	stp	x22, x21, [sp, #0x40]
00000000000215b4	stp	x20, x19, [sp, #0x50]
00000000000215b8	stp	x29, x30, [sp, #0x60]
00000000000215bc	add	x29, sp, #0x60
00000000000215c0	mov	x19, x1
00000000000215c4	mov	x20, x0
00000000000215c8	movi.16b	v0, #0x0
00000000000215cc	stp	q0, q0, [sp]
00000000000215d0	str	xzr, [sp, #0x20]
00000000000215d4	mov	x22, sp
00000000000215d8	adrp	x0, 89 ; 0x7a000
00000000000215dc	add	x0, x0, #0x2c0
00000000000215e0	ldr	x8, [x0]
00000000000215e4	blr	x8
00000000000215e8	ldr	x23, [x0]
00000000000215ec	ldr	x8, [x23, #0x110]
00000000000215f0	str	x22, [x23, #0x110]
00000000000215f4	mov	x9, #0x500000000
00000000000215f8	stp	x8, x9, [sp, #0x8]
00000000000215fc	adr	x8, #0x72c8d
0000000000021600	nop
0000000000021604	ldarb	w8, [x8]
0000000000021608	tbz	w8, #0x0, 0x21610
000000000002160c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021610	cbz	x19, 0x21630
0000000000021614	ldr	x8, [x19]
0000000000021618	and	x8, x8, #0xfffffffffffffffc
000000000002161c	ldr	x8, [x8]
0000000000021620	ldr	w8, [x8, #0x5c]
0000000000021624	sub	w8, w8, #0x57
0000000000021628	cmp	w8, #0xe
000000000002162c	b.ls	0x21638
0000000000021630	mov	w0, #-0x1
0000000000021634	b	0x21660
0000000000021638	add	x21, x22, #0x20
000000000002163c	add	x1, x22, #0x18
0000000000021640	ldr	w22, [x19, #0x10]
0000000000021644	mov	x0, x20
0000000000021648	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
000000000002164c	mov	x1, x22
0000000000021650	mov	x2, x21
0000000000021654	bl	"_kfun:kotlin.collections#getOrNull__at__kotlin.Array<out|0:0>(kotlin.Int){0§<kotlin.Any?>}0:0?"
0000000000021658	cmp	x0, x19
000000000002165c	csinv	w0, w22, wzr, eq
0000000000021660	ldr	x8, [sp, #0x8]
0000000000021664	str	x8, [x23, #0x110]
0000000000021668	ldp	x29, x30, [sp, #0x60]
000000000002166c	ldp	x20, x19, [sp, #0x50]
0000000000021670	ldp	x22, x21, [sp, #0x40]
0000000000021674	ldp	x24, x23, [sp, #0x30]
0000000000021678	add	sp, sp, #0x70
000000000002167c	ret
_kfun:kotlin.enums.EnumEntriesList.lastIndexOf#internal:
0000000000021680	stp	x20, x19, [sp, #-0x20]!
0000000000021684	stp	x29, x30, [sp, #0x10]
0000000000021688	add	x29, sp, #0x10
000000000002168c	mov	x19, x1
0000000000021690	mov	x20, x0
0000000000021694	adr	x8, #0x72bf5
0000000000021698	nop
000000000002169c	ldarb	w8, [x8]
00000000000216a0	tbz	w8, #0x0, 0x216a8
00000000000216a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000216a8	cbz	x19, 0x216c8
00000000000216ac	ldr	x8, [x19]
00000000000216b0	and	x8, x8, #0xfffffffffffffffc
00000000000216b4	ldr	x8, [x8]
00000000000216b8	ldr	w8, [x8, #0x5c]
00000000000216bc	sub	w8, w8, #0x57
00000000000216c0	cmp	w8, #0xe
00000000000216c4	b.ls	0x216d8
00000000000216c8	mov	w0, #-0x1
00000000000216cc	ldp	x29, x30, [sp, #0x10]
00000000000216d0	ldp	x20, x19, [sp], #0x20
00000000000216d4	ret
00000000000216d8	mov	x0, x20
00000000000216dc	mov	x1, x19
00000000000216e0	ldp	x29, x30, [sp, #0x10]
00000000000216e4	ldp	x20, x19, [sp], #0x20
00000000000216e8	b	"_kfun:kotlin.enums.EnumEntriesList.indexOf#internal"
_kfun:kotlin.enums#enumEntries(kotlin.Array<0:0>){0§<kotlin.Enum<0:0>>}kotlin.enums.EnumEntries<0:0>:
00000000000216ec	sub	sp, sp, #0x80
00000000000216f0	stp	x22, x21, [sp, #0x50]
00000000000216f4	stp	x20, x19, [sp, #0x60]
00000000000216f8	stp	x29, x30, [sp, #0x70]
00000000000216fc	add	x29, sp, #0x70
0000000000021700	mov	x19, x1
0000000000021704	mov	x20, x0
0000000000021708	movi.16b	v0, #0x0
000000000002170c	stp	q0, q0, [sp]
0000000000021710	str	xzr, [sp, #0x20]
0000000000021714	adrp	x0, 89 ; 0x7a000
0000000000021718	add	x0, x0, #0x2c0
000000000002171c	ldr	x8, [x0]
0000000000021720	blr	x8
0000000000021724	ldr	x22, [x0]
0000000000021728	ldr	x8, [x22, #0x110]
000000000002172c	mov	x9, sp
0000000000021730	str	x9, [x22, #0x110]
0000000000021734	mov	x9, #0x500000000
0000000000021738	stp	x8, x9, [sp, #0x8]
000000000002173c	adr	x8, #0x72b4d
0000000000021740	nop
0000000000021744	ldarb	w8, [x8]
0000000000021748	tbz	w8, #0x0, 0x21750
000000000002174c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021750	ldr	x8, [x22, #0x118]
0000000000021754	add	x0, x8, #0x70
0000000000021758	mov	w1, #0x18
000000000002175c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021760	mov	x21, x0
0000000000021764	adr	x8, #0x43c4c
0000000000021768	nop
000000000002176c	str	x8, [x21, #0x10]!
0000000000021770	stur	xzr, [x21, #-0x8]
0000000000021774	str	x21, [sp, #0x18]
0000000000021778	str	x20, [x21, #0x8]
000000000002177c	ldr	x8, [x22, #0x118]
0000000000021780	add	x0, x8, #0x70
0000000000021784	mov	w1, #0x20
0000000000021788	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002178c	mov	x20, x0
0000000000021790	adr	x8, #0x43b30
0000000000021794	nop
0000000000021798	str	x8, [x20, #0x10]!
000000000002179c	stur	xzr, [x20, #-0x8]
00000000000217a0	str	x20, [sp, #0x20]
00000000000217a4	str	x21, [x20, #0x8]
00000000000217a8	movi.16b	v0, #0x0
00000000000217ac	stp	q0, q0, [sp, #0x30]
00000000000217b0	add	x8, sp, #0x30
00000000000217b4	add	x1, x8, #0x18
00000000000217b8	ldr	x9, [x22, #0x110]
00000000000217bc	str	x8, [x22, #0x110]
00000000000217c0	mov	x8, #0x400000000
00000000000217c4	stp	x9, x8, [sp, #0x38]
00000000000217c8	mov	x0, x20
00000000000217cc	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
00000000000217d0	ldr	x8, [sp, #0x38]
00000000000217d4	str	x8, [x22, #0x110]
00000000000217d8	str	x20, [x19]
00000000000217dc	ldr	x8, [sp, #0x8]
00000000000217e0	str	x8, [x22, #0x110]
00000000000217e4	mov	x0, x20
00000000000217e8	ldp	x29, x30, [sp, #0x70]
00000000000217ec	ldp	x20, x19, [sp, #0x60]
00000000000217f0	ldp	x22, x21, [sp, #0x50]
00000000000217f4	add	sp, sp, #0x80
00000000000217f8	ret
_kfun:kotlin.enums.$enumEntries$lambda$0$FUNCTION_REFERENCE$21.invoke#internal:
00000000000217fc	stp	x20, x19, [sp, #-0x20]!
0000000000021800	stp	x29, x30, [sp, #0x10]
0000000000021804	add	x29, sp, #0x10
0000000000021808	mov	x19, x1
000000000002180c	mov	x20, x0
0000000000021810	adr	x8, #0x72a79
0000000000021814	nop
0000000000021818	ldarb	w8, [x8]
000000000002181c	tbz	w8, #0x0, 0x21824
0000000000021820	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021824	ldr	x0, [x20, #0x8]
0000000000021828	str	x0, [x19]
000000000002182c	ldp	x29, x30, [sp, #0x10]
0000000000021830	ldp	x20, x19, [sp], #0x20
0000000000021834	ret
_kfun:kotlin.text#substringAfterLast$default__at__kotlin.String(kotlin.Char;kotlin.String?;kotlin.Int){}kotlin.String:
0000000000021838	stp	x22, x21, [sp, #-0x30]!
000000000002183c	stp	x20, x19, [sp, #0x10]
0000000000021840	stp	x29, x30, [sp, #0x20]
0000000000021844	add	x29, sp, #0x20
0000000000021848	mov	x19, x2
000000000002184c	mov	x21, x1
0000000000021850	mov	x20, x0
0000000000021854	adr	x8, #0x72a35
0000000000021858	nop
000000000002185c	ldarb	w8, [x8]
0000000000021860	tbz	w8, #0x0, 0x21868
0000000000021864	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021868	mov	x0, x20
000000000002186c	bl	"_kfun:kotlin.text#<get-lastIndex>__at__kotlin.CharSequence(){}kotlin.Int"
0000000000021870	mov	x2, x0
0000000000021874	mov	x0, x20
0000000000021878	mov	x1, x21
000000000002187c	bl	"_kfun:kotlin.text#lastIndexOf__at__kotlin.CharSequence(kotlin.Char;kotlin.Int;kotlin.Boolean){}kotlin.Int"
0000000000021880	cmn	w0, #0x1
0000000000021884	b.eq	0x218b8
0000000000021888	ldr	w2, [x20, #0x8]
000000000002188c	add	w1, w0, #0x1
0000000000021890	mov	x0, x20
0000000000021894	mov	x3, x19
0000000000021898	bl	_Kotlin_String_subSequence
000000000002189c	mov	x20, x0
00000000000218a0	ldr	x8, [x0]
00000000000218a4	and	x8, x8, #0xfffffffffffffffc
00000000000218a8	ldr	x8, [x8]
00000000000218ac	ldr	w8, [x8, #0x5c]
00000000000218b0	cmp	w8, #0x75
00000000000218b4	b.ne	0x218d0
00000000000218b8	str	x20, [x19]
00000000000218bc	mov	x0, x20
00000000000218c0	ldp	x29, x30, [sp, #0x20]
00000000000218c4	ldp	x20, x19, [sp, #0x10]
00000000000218c8	ldp	x22, x21, [sp], #0x30
00000000000218cc	ret
00000000000218d0	adr	x1, #0x40610
00000000000218d4	nop
00000000000218d8	mov	x0, x20
00000000000218dc	bl	_ThrowClassCastException
_kfun:kotlin.text#<get-lastIndex>__at__kotlin.CharSequence(){}kotlin.Int:
00000000000218e0	stp	x20, x19, [sp, #-0x20]!
00000000000218e4	stp	x29, x30, [sp, #0x10]
00000000000218e8	add	x29, sp, #0x10
00000000000218ec	mov	x19, x0
00000000000218f0	adr	x8, #0x72999
00000000000218f4	nop
00000000000218f8	ldarb	w8, [x8]
00000000000218fc	tbz	w8, #0x0, 0x21904
0000000000021900	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021904	ldr	x8, [x19]
0000000000021908	and	x8, x8, #0xfffffffffffffffc
000000000002190c	ldr	x8, [x8]
0000000000021910	ldr	w9, [x8, #0x3c]
0000000000021914	ldr	x8, [x8, #0x40]
0000000000021918	tbnz	w9, #0x1f, 0x21928
000000000002191c	mov	w10, #0x19
0000000000021920	and	x9, x9, x10
0000000000021924	b	0x219ac
0000000000021928	neg	w10, w9
000000000002192c	mvn	w9, w9
0000000000021930	cmp	w10, #0x9
0000000000021934	b.ge	0x2196c
0000000000021938	cmp	w10, #0x2
000000000002193c	b.lt	0x219a0
0000000000021940	mov	x10, #0x0
0000000000021944	mov	x11, x8
0000000000021948	ldr	w12, [x11]
000000000002194c	cmp	w12, #0x18
0000000000021950	b.gt	0x219a8
0000000000021954	add	x10, x10, #0x1
0000000000021958	add	x11, x11, #0x10
000000000002195c	cmp	x9, x10
0000000000021960	b.ne	0x21948
0000000000021964	mov	x10, x9
0000000000021968	b	0x219a8
000000000002196c	mov	w10, #0x0
0000000000021970	add	w11, w9, w10
0000000000021974	cmp	w11, #0x0
0000000000021978	cinc	w11, w11, lt
000000000002197c	asr	w11, w11, #1
0000000000021980	sbfiz	x12, x11, #4, #32
0000000000021984	ldr	w12, [x8, x12]
0000000000021988	cmp	w12, #0x19
000000000002198c	csinc	w10, w10, w11, ge
0000000000021990	csel	w9, w9, w11, lt
0000000000021994	cmp	w10, w9
0000000000021998	b.lt	0x21970
000000000002199c	b	0x219a8
00000000000219a0	mov	w10, #0x0
00000000000219a4	b	0x219a8
00000000000219a8	sxtw	x9, w10
00000000000219ac	add	x8, x8, x9, lsl #4
00000000000219b0	ldr	x8, [x8, #0x8]
00000000000219b4	ldr	x8, [x8]
00000000000219b8	mov	x0, x19
00000000000219bc	blr	x8
00000000000219c0	sub	w0, w0, #0x1
00000000000219c4	ldp	x29, x30, [sp, #0x10]
00000000000219c8	ldp	x20, x19, [sp], #0x20
00000000000219cc	ret
_kfun:kotlin.text#lastIndexOf__at__kotlin.CharSequence(kotlin.Char;kotlin.Int;kotlin.Boolean){}kotlin.Int:
00000000000219d0	sub	sp, sp, #0xf0
00000000000219d4	stp	x28, x27, [sp, #0x90]
00000000000219d8	stp	x26, x25, [sp, #0xa0]
00000000000219dc	stp	x24, x23, [sp, #0xb0]
00000000000219e0	stp	x22, x21, [sp, #0xc0]
00000000000219e4	stp	x20, x19, [sp, #0xd0]
00000000000219e8	stp	x29, x30, [sp, #0xe0]
00000000000219ec	add	x29, sp, #0xe0
00000000000219f0	mov	x20, x2
00000000000219f4	mov	x21, x1
00000000000219f8	mov	x19, x0
00000000000219fc	movi.16b	v0, #0x0
0000000000021a00	stp	q0, q0, [sp, #0x20]
0000000000021a04	str	xzr, [sp, #0x50]
0000000000021a08	str	q0, [sp, #0x40]
0000000000021a0c	adr	x8, #0x3f324
0000000000021a10	nop
0000000000021a14	orr	x8, x8, #0x3
0000000000021a18	str	x8, [sp, #0x8]
0000000000021a1c	mov	w8, #0x1
0000000000021a20	str	w8, [sp, #0x10]
0000000000021a24	strh	wzr, [sp, #0x18]
0000000000021a28	adrp	x0, 89 ; 0x7a000
0000000000021a2c	add	x0, x0, #0x2c0
0000000000021a30	ldr	x8, [x0]
0000000000021a34	blr	x8
0000000000021a38	ldr	x22, [x0]
0000000000021a3c	ldr	x8, [x22, #0x110]
0000000000021a40	add	x9, sp, #0x20
0000000000021a44	str	x9, [x22, #0x110]
0000000000021a48	mov	x9, #0x700000000
0000000000021a4c	stp	x8, x9, [sp, #0x28]
0000000000021a50	adr	x23, #0x72839
0000000000021a54	nop
0000000000021a58	ldarb	w8, [x23]
0000000000021a5c	tbz	w8, #0x0, 0x21a64
0000000000021a60	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021a64	cbz	x19, 0x21ac0
0000000000021a68	ldr	x8, [x19]
0000000000021a6c	and	x8, x8, #0xfffffffffffffffc
0000000000021a70	ldr	x8, [x8]
0000000000021a74	ldr	w8, [x8, #0x5c]
0000000000021a78	cmp	w8, #0x75
0000000000021a7c	b.ne	0x21ac0
0000000000021a80	tbnz	w20, #0x1f, 0x21cb0
0000000000021a84	ldr	w8, [x19, #0x8]
0000000000021a88	cbz	w8, 0x21cb0
0000000000021a8c	sub	w9, w8, #0x1
0000000000021a90	cmp	w8, w20
0000000000021a94	csel	w0, w20, w9, hi
0000000000021a98	tbnz	w0, #0x1f, 0x21cb0
0000000000021a9c	add	x8, x19, #0x10
0000000000021aa0	ldrh	w9, [x8, x0, lsl #1]
0000000000021aa4	cmp	w9, w21
0000000000021aa8	b.eq	0x21cbc
0000000000021aac	sub	x0, x0, #0x1
0000000000021ab0	add	w9, w0, #0x1
0000000000021ab4	cmp	w9, #0x0
0000000000021ab8	b.gt	0x21aa0
0000000000021abc	b	0x21cb0
0000000000021ac0	add	x8, sp, #0x8
0000000000021ac4	stp	x8, x8, [sp, #0x38]
0000000000021ac8	stp	x8, x8, [sp, #0x48]
0000000000021acc	ldr	x9, [sp, #0x8]
0000000000021ad0	strh	w21, [sp, #0x18]
0000000000021ad4	ldr	w8, [sp, #0x10]
0000000000021ad8	cmp	w8, #0x1
0000000000021adc	b.ne	0x21b78
0000000000021ae0	cbz	x19, 0x21b78
0000000000021ae4	ldr	x8, [x19]
0000000000021ae8	and	x8, x8, #0xfffffffffffffffc
0000000000021aec	ldr	x8, [x8]
0000000000021af0	ldr	w8, [x8, #0x5c]
0000000000021af4	cmp	w8, #0x75
0000000000021af8	b.ne	0x21b78
0000000000021afc	movi.16b	v0, #0x0
0000000000021b00	stp	q0, q0, [sp, #0x60]
0000000000021b04	str	xzr, [sp, #0x80]
0000000000021b08	ldr	x8, [x22, #0x110]
0000000000021b0c	add	x9, sp, #0x60
0000000000021b10	str	x9, [x22, #0x110]
0000000000021b14	mov	x9, #0x500000000
0000000000021b18	stp	x8, x9, [sp, #0x68]
0000000000021b1c	ldr	w8, [sp, #0x10]
0000000000021b20	cmp	w8, #0x1
0000000000021b24	b.ne	0x21cec
0000000000021b28	ldrh	w8, [sp, #0x18]
0000000000021b2c	ldr	x9, [sp, #0x68]
0000000000021b30	str	x9, [x22, #0x110]
0000000000021b34	tbnz	w20, #0x1f, 0x21cb0
0000000000021b38	ldr	w9, [x19, #0x8]
0000000000021b3c	cbz	w9, 0x21cb0
0000000000021b40	sub	w10, w9, #0x1
0000000000021b44	cmp	w9, w20
0000000000021b48	csel	w9, w20, w10, hi
0000000000021b4c	tbnz	w9, #0x1f, 0x21cb0
0000000000021b50	add	x10, x19, #0x10
0000000000021b54	ldrh	w11, [x10, x9, lsl #1]
0000000000021b58	cmp	w11, w8
0000000000021b5c	b.eq	0x21ce4
0000000000021b60	sub	x9, x9, #0x1
0000000000021b64	add	w11, w9, #0x1
0000000000021b68	mov	w0, #-0x1
0000000000021b6c	cmp	w11, #0x0
0000000000021b70	b.gt	0x21b54
0000000000021b74	b	0x21cbc
0000000000021b78	mov	x0, x19
0000000000021b7c	bl	"_kfun:kotlin.text#<get-lastIndex>__at__kotlin.CharSequence(){}kotlin.Int"
0000000000021b80	cmp	w0, w20
0000000000021b84	csel	w20, w0, w20, lt
0000000000021b88	tbnz	w20, #0x1f, 0x21cb0
0000000000021b8c	add	x8, sp, #0x8
0000000000021b90	add	x24, x8, #0x10
0000000000021b94	mov	w25, #0x19
0000000000021b98	ldarb	w8, [x23]
0000000000021b9c	tbz	w8, #0x0, 0x21ba4
0000000000021ba0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021ba4	sub	w26, w20, #0x1
0000000000021ba8	ldr	x8, [x19]
0000000000021bac	and	x8, x8, #0xfffffffffffffffc
0000000000021bb0	ldr	x8, [x8]
0000000000021bb4	ldr	w9, [x8, #0x3c]
0000000000021bb8	ldr	x8, [x8, #0x40]
0000000000021bbc	tbnz	w9, #0x1f, 0x21bc8
0000000000021bc0	and	x9, x9, x25
0000000000021bc4	b	0x21c4c
0000000000021bc8	neg	w10, w9
0000000000021bcc	mvn	w9, w9
0000000000021bd0	cmp	w10, #0x9
0000000000021bd4	b.ge	0x21c0c
0000000000021bd8	cmp	w10, #0x2
0000000000021bdc	b.lt	0x21c40
0000000000021be0	mov	x10, #0x0
0000000000021be4	mov	x11, x8
0000000000021be8	ldr	w12, [x11]
0000000000021bec	cmp	w12, #0x18
0000000000021bf0	b.gt	0x21c48
0000000000021bf4	add	x10, x10, #0x1
0000000000021bf8	add	x11, x11, #0x10
0000000000021bfc	cmp	x9, x10
0000000000021c00	b.ne	0x21be8
0000000000021c04	mov	x10, x9
0000000000021c08	b	0x21c48
0000000000021c0c	mov	w10, #0x0
0000000000021c10	add	w11, w9, w10
0000000000021c14	cmp	w11, #0x0
0000000000021c18	cinc	w11, w11, lt
0000000000021c1c	asr	w11, w11, #1
0000000000021c20	sbfiz	x12, x11, #4, #32
0000000000021c24	ldr	w12, [x8, x12]
0000000000021c28	cmp	w12, #0x19
0000000000021c2c	csinc	w10, w10, w11, ge
0000000000021c30	csel	w9, w9, w11, lt
0000000000021c34	cmp	w10, w9
0000000000021c38	b.lt	0x21c10
0000000000021c3c	b	0x21c48
0000000000021c40	mov	w10, #0x0
0000000000021c44	b	0x21c48
0000000000021c48	sxtw	x9, w10
0000000000021c4c	add	x8, x8, x9, lsl #4
0000000000021c50	ldr	x8, [x8, #0x8]
0000000000021c54	ldr	x8, [x8, #0x8]
0000000000021c58	mov	x0, x19
0000000000021c5c	mov	x1, x20
0000000000021c60	blr	x8
0000000000021c64	mov	x21, x0
0000000000021c68	ldr	w8, [sp, #0x10]
0000000000021c6c	bic	w27, w8, w8, asr #31
0000000000021c70	mov	x28, x24
0000000000021c74	cbz	w27, 0x21c9c
0000000000021c78	ldarb	w8, [x23]
0000000000021c7c	tbz	w8, #0x0, 0x21c84
0000000000021c80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021c84	ldrh	w8, [x28]
0000000000021c88	cmp	w8, w21
0000000000021c8c	b.eq	0x21cb8
0000000000021c90	sub	w27, w27, #0x1
0000000000021c94	add	x28, x28, #0x2
0000000000021c98	cbnz	w27, 0x21c78
0000000000021c9c	mov	w0, #-0x1
0000000000021ca0	cmp	w20, #0x0
0000000000021ca4	mov	x20, x26
0000000000021ca8	b.gt	0x21b98
0000000000021cac	b	0x21cbc
0000000000021cb0	mov	w0, #-0x1
0000000000021cb4	b	0x21cbc
0000000000021cb8	mov	x0, x20
0000000000021cbc	ldr	x8, [sp, #0x28]
0000000000021cc0	str	x8, [x22, #0x110]
0000000000021cc4	ldp	x29, x30, [sp, #0xe0]
0000000000021cc8	ldp	x20, x19, [sp, #0xd0]
0000000000021ccc	ldp	x22, x21, [sp, #0xc0]
0000000000021cd0	ldp	x24, x23, [sp, #0xb0]
0000000000021cd4	ldp	x26, x25, [sp, #0xa0]
0000000000021cd8	ldp	x28, x27, [sp, #0x90]
0000000000021cdc	add	sp, sp, #0xf0
0000000000021ce0	ret
0000000000021ce4	mov	x0, x9
0000000000021ce8	b	0x21cbc
0000000000021cec	cbnz	w8, 0x21d24
0000000000021cf0	ldr	x8, [x22, #0x118]
0000000000021cf4	add	x0, x8, #0x70
0000000000021cf8	mov	w1, #0x38
0000000000021cfc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021d00	mov	x19, x0
0000000000021d04	adr	x8, #0x3f4fc
0000000000021d08	nop
0000000000021d0c	str	x8, [x19, #0x10]!
0000000000021d10	stur	xzr, [x19, #-0x8]
0000000000021d14	str	x19, [sp, #0x78]
0000000000021d18	adr	x1, #0x4cb78
0000000000021d1c	nop
0000000000021d20	b	0x21d54
0000000000021d24	ldr	x8, [x22, #0x118]
0000000000021d28	add	x0, x8, #0x70
0000000000021d2c	mov	w1, #0x38
0000000000021d30	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021d34	mov	x19, x0
0000000000021d38	adr	x8, #0x3f6a8
0000000000021d3c	nop
0000000000021d40	str	x8, [x19, #0x10]!
0000000000021d44	stur	xzr, [x19, #-0x8]
0000000000021d48	str	x19, [sp, #0x80]
0000000000021d4c	adr	x1, #0x4cb74
0000000000021d50	nop
0000000000021d54	mov	x0, x19
0000000000021d58	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000021d5c	mov	x0, x19
0000000000021d60	bl	_ThrowException
_kfun:kotlin.UByte#$<bridge-NBNB>compareTo(kotlin.UByte){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000021d64	stp	x20, x19, [sp, #-0x20]!
0000000000021d68	stp	x29, x30, [sp, #0x10]
0000000000021d6c	add	x29, sp, #0x10
0000000000021d70	mov	x19, x1
0000000000021d74	mov	x20, x0
0000000000021d78	adr	x8, #0x72511
0000000000021d7c	nop
0000000000021d80	ldarb	w8, [x8]
0000000000021d84	tbz	w8, #0x0, 0x21d8c
0000000000021d88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021d8c	ldrb	w8, [x20, #0x8]
0000000000021d90	ldrb	w9, [x19, #0x8]
0000000000021d94	cmp	w8, w9
0000000000021d98	mov	w8, #-0x1
0000000000021d9c	cneg	w8, w8, hs
0000000000021da0	csel	w0, wzr, w8, eq
0000000000021da4	ldp	x29, x30, [sp, #0x10]
0000000000021da8	ldp	x20, x19, [sp], #0x20
0000000000021dac	ret
_kfun:kotlin.UByte#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000021db0	sub	sp, sp, #0x40
0000000000021db4	stp	x20, x19, [sp, #0x20]
0000000000021db8	stp	x29, x30, [sp, #0x30]
0000000000021dbc	add	x29, sp, #0x30
0000000000021dc0	mov	x19, x1
0000000000021dc4	mov	x20, x0
0000000000021dc8	adr	x8, #0x724c1
0000000000021dcc	nop
0000000000021dd0	ldarb	w8, [x8]
0000000000021dd4	tbz	w8, #0x0, 0x21ddc
0000000000021dd8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021ddc	ldrb	w8, [x20, #0x8]
0000000000021de0	str	x8, [sp]
0000000000021de4	adr	x2, #0x3ce9f ; literal pool for: "%d"
0000000000021de8	nop
0000000000021dec	add	x0, sp, #0x10
0000000000021df0	mov	w1, #0x10
0000000000021df4	bl	__ZN5konan8snprintfEPcmPKcz
0000000000021df8	add	x0, sp, #0x10
0000000000021dfc	mov	x1, x19
0000000000021e00	bl	_CreateStringFromCString
0000000000021e04	str	x0, [x19]
0000000000021e08	ldp	x29, x30, [sp, #0x30]
0000000000021e0c	ldp	x20, x19, [sp, #0x20]
0000000000021e10	add	sp, sp, #0x40
0000000000021e14	ret
_kfun:kotlin.UByte#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000021e18	stp	x20, x19, [sp, #-0x20]!
0000000000021e1c	stp	x29, x30, [sp, #0x10]
0000000000021e20	add	x29, sp, #0x10
0000000000021e24	mov	x19, x0
0000000000021e28	adr	x8, #0x72461
0000000000021e2c	nop
0000000000021e30	ldarb	w8, [x8]
0000000000021e34	tbz	w8, #0x0, 0x21e3c
0000000000021e38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021e3c	ldrsb	w0, [x19, #0x8]
0000000000021e40	ldp	x29, x30, [sp, #0x10]
0000000000021e44	ldp	x20, x19, [sp], #0x20
0000000000021e48	ret
_kfun:kotlin.UByte#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000021e4c	stp	x20, x19, [sp, #-0x20]!
0000000000021e50	stp	x29, x30, [sp, #0x10]
0000000000021e54	add	x29, sp, #0x10
0000000000021e58	mov	x19, x1
0000000000021e5c	mov	x20, x0
0000000000021e60	adr	x8, #0x72429
0000000000021e64	nop
0000000000021e68	ldarb	w8, [x8]
0000000000021e6c	tbz	w8, #0x0, 0x21e74
0000000000021e70	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021e74	cbz	x19, 0x21ec4
0000000000021e78	ldrb	w8, [x20, #0x8]
0000000000021e7c	ldr	x9, [x19]
0000000000021e80	and	x9, x9, #0xfffffffffffffffc
0000000000021e84	ldr	x9, [x9]
0000000000021e88	ldr	w9, [x9, #0x5c]
0000000000021e8c	cmp	w9, #0x17f
0000000000021e90	b.ne	0x21ec4
0000000000021e94	ldr	x9, [x19]
0000000000021e98	and	x9, x9, #0xfffffffffffffffc
0000000000021e9c	ldr	x9, [x9]
0000000000021ea0	ldr	w9, [x9, #0x5c]
0000000000021ea4	cmp	w9, #0x17f
0000000000021ea8	b.ne	0x21ed4
0000000000021eac	ldrb	w9, [x19, #0x8]
0000000000021eb0	cmp	w9, w8
0000000000021eb4	cset	w0, eq
0000000000021eb8	ldp	x29, x30, [sp, #0x10]
0000000000021ebc	ldp	x20, x19, [sp], #0x20
0000000000021ec0	ret
0000000000021ec4	mov	w0, #0x0
0000000000021ec8	ldp	x29, x30, [sp, #0x10]
0000000000021ecc	ldp	x20, x19, [sp], #0x20
0000000000021ed0	ret
0000000000021ed4	adr	x1, #0x4364c
0000000000021ed8	nop
0000000000021edc	mov	x0, x19
0000000000021ee0	bl	_ThrowClassCastException
_kfun:kotlin.UInt#$<bridge-NBNB>compareTo(kotlin.UInt){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000021ee4	stp	x20, x19, [sp, #-0x20]!
0000000000021ee8	stp	x29, x30, [sp, #0x10]
0000000000021eec	add	x29, sp, #0x10
0000000000021ef0	mov	x19, x1
0000000000021ef4	mov	x20, x0
0000000000021ef8	adr	x8, #0x72391
0000000000021efc	nop
0000000000021f00	ldarb	w8, [x8]
0000000000021f04	tbz	w8, #0x0, 0x21f0c
0000000000021f08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021f0c	ldr	w8, [x20, #0x8]
0000000000021f10	ldr	w9, [x19, #0x8]
0000000000021f14	cmp	w8, w9
0000000000021f18	mov	w8, #-0x1
0000000000021f1c	cneg	w8, w8, hs
0000000000021f20	csel	w0, wzr, w8, eq
0000000000021f24	ldp	x29, x30, [sp, #0x10]
0000000000021f28	ldp	x20, x19, [sp], #0x20
0000000000021f2c	ret
_kfun:kotlin.UInt#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000021f30	sub	sp, sp, #0x50
0000000000021f34	stp	x20, x19, [sp, #0x30]
0000000000021f38	stp	x29, x30, [sp, #0x40]
0000000000021f3c	add	x29, sp, #0x40
0000000000021f40	mov	x19, x1
0000000000021f44	mov	x20, x0
0000000000021f48	adr	x8, #0x72341
0000000000021f4c	nop
0000000000021f50	ldarb	w8, [x8]
0000000000021f54	tbz	w8, #0x0, 0x21f5c
0000000000021f58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021f5c	ldr	w8, [x20, #0x8]
0000000000021f60	str	x8, [sp]
0000000000021f64	adr	x2, #0x3cd1a ; literal pool for: "%lld"
0000000000021f68	nop
0000000000021f6c	add	x0, sp, #0x10
0000000000021f70	mov	w1, #0x20
0000000000021f74	bl	__ZN5konan8snprintfEPcmPKcz
0000000000021f78	add	x0, sp, #0x10
0000000000021f7c	mov	x1, x19
0000000000021f80	bl	_CreateStringFromCString
0000000000021f84	str	x0, [x19]
0000000000021f88	ldp	x29, x30, [sp, #0x40]
0000000000021f8c	ldp	x20, x19, [sp, #0x30]
0000000000021f90	add	sp, sp, #0x50
0000000000021f94	ret
_kfun:kotlin.UInt#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000021f98	stp	x20, x19, [sp, #-0x20]!
0000000000021f9c	stp	x29, x30, [sp, #0x10]
0000000000021fa0	add	x29, sp, #0x10
0000000000021fa4	mov	x19, x0
0000000000021fa8	adr	x8, #0x722e1
0000000000021fac	nop
0000000000021fb0	ldarb	w8, [x8]
0000000000021fb4	tbz	w8, #0x0, 0x21fbc
0000000000021fb8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021fbc	ldr	w0, [x19, #0x8]
0000000000021fc0	ldp	x29, x30, [sp, #0x10]
0000000000021fc4	ldp	x20, x19, [sp], #0x20
0000000000021fc8	ret
_kfun:kotlin.UInt#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000021fcc	stp	x20, x19, [sp, #-0x20]!
0000000000021fd0	stp	x29, x30, [sp, #0x10]
0000000000021fd4	add	x29, sp, #0x10
0000000000021fd8	mov	x19, x1
0000000000021fdc	mov	x20, x0
0000000000021fe0	adr	x8, #0x722a9
0000000000021fe4	nop
0000000000021fe8	ldarb	w8, [x8]
0000000000021fec	tbz	w8, #0x0, 0x21ff4
0000000000021ff0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021ff4	cbz	x19, 0x22044
0000000000021ff8	ldr	w8, [x20, #0x8]
0000000000021ffc	ldr	x9, [x19]
0000000000022000	and	x9, x9, #0xfffffffffffffffc
0000000000022004	ldr	x9, [x9]
0000000000022008	ldr	w9, [x9, #0x5c]
000000000002200c	cmp	w9, #0x183
0000000000022010	b.ne	0x22044
0000000000022014	ldr	x9, [x19]
0000000000022018	and	x9, x9, #0xfffffffffffffffc
000000000002201c	ldr	x9, [x9]
0000000000022020	ldr	w9, [x9, #0x5c]
0000000000022024	cmp	w9, #0x183
0000000000022028	b.ne	0x22054
000000000002202c	ldr	w9, [x19, #0x8]
0000000000022030	cmp	w9, w8
0000000000022034	cset	w0, eq
0000000000022038	ldp	x29, x30, [sp, #0x10]
000000000002203c	ldp	x20, x19, [sp], #0x20
0000000000022040	ret
0000000000022044	mov	w0, #0x0
0000000000022048	ldp	x29, x30, [sp, #0x10]
000000000002204c	ldp	x20, x19, [sp], #0x20
0000000000022050	ret
0000000000022054	adr	x1, #0x4355c
0000000000022058	nop
000000000002205c	mov	x0, x19
0000000000022060	bl	_ThrowClassCastException
_kfun:kotlin.ULong#$<bridge-NBNB>compareTo(kotlin.ULong){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000022064	stp	x20, x19, [sp, #-0x20]!
0000000000022068	stp	x29, x30, [sp, #0x10]
000000000002206c	add	x29, sp, #0x10
0000000000022070	mov	x19, x1
0000000000022074	mov	x20, x0
0000000000022078	adr	x8, #0x72211
000000000002207c	nop
0000000000022080	ldarb	w8, [x8]
0000000000022084	tbz	w8, #0x0, 0x2208c
0000000000022088	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002208c	ldr	x8, [x20, #0x8]
0000000000022090	ldr	x9, [x19, #0x8]
0000000000022094	cmp	x8, x9
0000000000022098	mov	w8, #-0x1
000000000002209c	cneg	w8, w8, hs
00000000000220a0	csel	w0, wzr, w8, eq
00000000000220a4	ldp	x29, x30, [sp, #0x10]
00000000000220a8	ldp	x20, x19, [sp], #0x20
00000000000220ac	ret
_kfun:kotlin.ULong#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
00000000000220b0	sub	sp, sp, #0xd0
00000000000220b4	stp	x24, x23, [sp, #0x90]
00000000000220b8	stp	x22, x21, [sp, #0xa0]
00000000000220bc	stp	x20, x19, [sp, #0xb0]
00000000000220c0	stp	x29, x30, [sp, #0xc0]
00000000000220c4	add	x29, sp, #0xc0
00000000000220c8	mov	x19, x1
00000000000220cc	mov	x20, x0
00000000000220d0	adr	x8, #0x721b9
00000000000220d4	nop
00000000000220d8	ldarb	w8, [x8]
00000000000220dc	tbz	w8, #0x0, 0x220e4
00000000000220e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000220e4	ldr	x8, [x20, #0x8]
00000000000220e8	movi.16b	v0, #0x0
00000000000220ec	stp	q0, q0, [sp]
00000000000220f0	str	xzr, [sp, #0x20]
00000000000220f4	adrp	x20, 88 ; 0x7a000
00000000000220f8	add	x20, x20, #0x2c0
00000000000220fc	ldr	x24, [x20]
0000000000022100	mov	x0, x20
0000000000022104	blr	x24
0000000000022108	ldr	x10, [x0]
000000000002210c	ldr	x11, [x10, #0x110]
0000000000022110	mov	x9, sp
0000000000022114	str	x9, [x10, #0x110]
0000000000022118	mov	x10, #0x500000000
000000000002211c	stp	x11, x10, [sp, #0x8]
0000000000022120	tbnz	x8, #0x3f, 0x22138
0000000000022124	mov	x0, x8
0000000000022128	mov	w1, #0xa
000000000002212c	mov	x2, x19
0000000000022130	bl	_Kotlin_Long_toStringRadix
0000000000022134	b	0x22198
0000000000022138	add	x21, x9, #0x20
000000000002213c	add	x2, x9, #0x18
0000000000022140	mov	x9, #-0x3333333333333334
0000000000022144	movk	x9, #0xcccd
0000000000022148	umulh	x9, x8, x9
000000000002214c	lsr	x9, x9, #4
0000000000022150	mov	x10, #-0x14
0000000000022154	madd	x8, x9, x10, x8
0000000000022158	sub	x10, x8, #0xa
000000000002215c	cmp	x8, #0x9
0000000000022160	cset	w0, gt
0000000000022164	csel	x22, x10, x8, gt
0000000000022168	bfi	x0, x9, #1, #60
000000000002216c	mov	w1, #0xa
0000000000022170	bl	_Kotlin_Long_toStringRadix
0000000000022174	mov	x23, x0
0000000000022178	mov	x0, x22
000000000002217c	mov	w1, #0xa
0000000000022180	mov	x2, x21
0000000000022184	bl	_Kotlin_Long_toStringRadix
0000000000022188	mov	x1, x0
000000000002218c	mov	x0, x23
0000000000022190	mov	x2, x19
0000000000022194	bl	_Kotlin_String_plusImpl
0000000000022198	mov	x8, x0
000000000002219c	str	x0, [x19]
00000000000221a0	mov	x0, x20
00000000000221a4	blr	x24
00000000000221a8	ldr	x9, [x0]
00000000000221ac	ldr	x10, [sp, #0x8]
00000000000221b0	str	x10, [x9, #0x110]
00000000000221b4	str	x8, [x19]
00000000000221b8	mov	x0, x8
00000000000221bc	ldp	x29, x30, [sp, #0xc0]
00000000000221c0	ldp	x20, x19, [sp, #0xb0]
00000000000221c4	ldp	x22, x21, [sp, #0xa0]
00000000000221c8	ldp	x24, x23, [sp, #0x90]
00000000000221cc	add	sp, sp, #0xd0
00000000000221d0	ret
_kfun:kotlin.ULong#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
00000000000221d4	stp	x20, x19, [sp, #-0x20]!
00000000000221d8	stp	x29, x30, [sp, #0x10]
00000000000221dc	add	x29, sp, #0x10
00000000000221e0	mov	x19, x0
00000000000221e4	adr	x8, #0x720a5
00000000000221e8	nop
00000000000221ec	ldarb	w8, [x8]
00000000000221f0	tbz	w8, #0x0, 0x221f8
00000000000221f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000221f8	ldp	w8, w9, [x19, #0x8]
00000000000221fc	eor	w0, w9, w8
0000000000022200	ldp	x29, x30, [sp, #0x10]
0000000000022204	ldp	x20, x19, [sp], #0x20
0000000000022208	ret
_kfun:kotlin.ULong#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
000000000002220c	stp	x20, x19, [sp, #-0x20]!
0000000000022210	stp	x29, x30, [sp, #0x10]
0000000000022214	add	x29, sp, #0x10
0000000000022218	mov	x19, x1
000000000002221c	mov	x20, x0
0000000000022220	adr	x8, #0x72069
0000000000022224	nop
0000000000022228	ldarb	w8, [x8]
000000000002222c	tbz	w8, #0x0, 0x22234
0000000000022230	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022234	cbz	x19, 0x22284
0000000000022238	ldr	x8, [x20, #0x8]
000000000002223c	ldr	x9, [x19]
0000000000022240	and	x9, x9, #0xfffffffffffffffc
0000000000022244	ldr	x9, [x9]
0000000000022248	ldr	w9, [x9, #0x5c]
000000000002224c	cmp	w9, #0x18c
0000000000022250	b.ne	0x22284
0000000000022254	ldr	x9, [x19]
0000000000022258	and	x9, x9, #0xfffffffffffffffc
000000000002225c	ldr	x9, [x9]
0000000000022260	ldr	w9, [x9, #0x5c]
0000000000022264	cmp	w9, #0x18c
0000000000022268	b.ne	0x22294
000000000002226c	ldr	x9, [x19, #0x8]
0000000000022270	cmp	x9, x8
0000000000022274	cset	w0, eq
0000000000022278	ldp	x29, x30, [sp, #0x10]
000000000002227c	ldp	x20, x19, [sp], #0x20
0000000000022280	ret
0000000000022284	mov	w0, #0x0
0000000000022288	ldp	x29, x30, [sp, #0x10]
000000000002228c	ldp	x20, x19, [sp], #0x20
0000000000022290	ret
0000000000022294	adr	x1, #0x433ac
0000000000022298	nop
000000000002229c	mov	x0, x19
00000000000222a0	bl	_ThrowClassCastException
_kfun:kotlin.UShort#$<bridge-NBNB>compareTo(kotlin.UShort){}kotlin.Int(kotlin.Any?){}kotlin.Int:
00000000000222a4	stp	x20, x19, [sp, #-0x20]!
00000000000222a8	stp	x29, x30, [sp, #0x10]
00000000000222ac	add	x29, sp, #0x10
00000000000222b0	mov	x19, x1
00000000000222b4	mov	x20, x0
00000000000222b8	adr	x8, #0x71fd1
00000000000222bc	nop
00000000000222c0	ldarb	w8, [x8]
00000000000222c4	tbz	w8, #0x0, 0x222cc
00000000000222c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000222cc	ldrh	w8, [x20, #0x8]
00000000000222d0	ldrh	w9, [x19, #0x8]
00000000000222d4	cmp	w8, w9
00000000000222d8	mov	w8, #-0x1
00000000000222dc	cneg	w8, w8, hs
00000000000222e0	csel	w0, wzr, w8, eq
00000000000222e4	ldp	x29, x30, [sp, #0x10]
00000000000222e8	ldp	x20, x19, [sp], #0x20
00000000000222ec	ret
_kfun:kotlin.UShort#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
00000000000222f0	sub	sp, sp, #0x40
00000000000222f4	stp	x20, x19, [sp, #0x20]
00000000000222f8	stp	x29, x30, [sp, #0x30]
00000000000222fc	add	x29, sp, #0x30
0000000000022300	mov	x19, x1
0000000000022304	mov	x20, x0
0000000000022308	adr	x8, #0x71f81
000000000002230c	nop
0000000000022310	ldarb	w8, [x8]
0000000000022314	tbz	w8, #0x0, 0x2231c
0000000000022318	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002231c	ldrh	w8, [x20, #0x8]
0000000000022320	str	x8, [sp]
0000000000022324	adr	x2, #0x3c95f ; literal pool for: "%d"
0000000000022328	nop
000000000002232c	add	x0, sp, #0x10
0000000000022330	mov	w1, #0x10
0000000000022334	bl	__ZN5konan8snprintfEPcmPKcz
0000000000022338	add	x0, sp, #0x10
000000000002233c	mov	x1, x19
0000000000022340	bl	_CreateStringFromCString
0000000000022344	str	x0, [x19]
0000000000022348	ldp	x29, x30, [sp, #0x30]
000000000002234c	ldp	x20, x19, [sp, #0x20]
0000000000022350	add	sp, sp, #0x40
0000000000022354	ret
_kfun:kotlin.UShort#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000022358	stp	x20, x19, [sp, #-0x20]!
000000000002235c	stp	x29, x30, [sp, #0x10]
0000000000022360	add	x29, sp, #0x10
0000000000022364	mov	x19, x0
0000000000022368	adr	x8, #0x71f21
000000000002236c	nop
0000000000022370	ldarb	w8, [x8]
0000000000022374	tbz	w8, #0x0, 0x2237c
0000000000022378	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002237c	ldrsh	w0, [x19, #0x8]
0000000000022380	ldp	x29, x30, [sp, #0x10]
0000000000022384	ldp	x20, x19, [sp], #0x20
0000000000022388	ret
_kfun:kotlin.UShort#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
000000000002238c	stp	x20, x19, [sp, #-0x20]!
0000000000022390	stp	x29, x30, [sp, #0x10]
0000000000022394	add	x29, sp, #0x10
0000000000022398	mov	x19, x1
000000000002239c	mov	x20, x0
00000000000223a0	adr	x8, #0x71ee9
00000000000223a4	nop
00000000000223a8	ldarb	w8, [x8]
00000000000223ac	tbz	w8, #0x0, 0x223b4
00000000000223b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000223b4	cbz	x19, 0x22404
00000000000223b8	ldrh	w8, [x20, #0x8]
00000000000223bc	ldr	x9, [x19]
00000000000223c0	and	x9, x9, #0xfffffffffffffffc
00000000000223c4	ldr	x9, [x9]
00000000000223c8	ldr	w9, [x9, #0x5c]
00000000000223cc	cmp	w9, #0x195
00000000000223d0	b.ne	0x22404
00000000000223d4	ldr	x9, [x19]
00000000000223d8	and	x9, x9, #0xfffffffffffffffc
00000000000223dc	ldr	x9, [x9]
00000000000223e0	ldr	w9, [x9, #0x5c]
00000000000223e4	cmp	w9, #0x195
00000000000223e8	b.ne	0x22414
00000000000223ec	ldrh	w9, [x19, #0x8]
00000000000223f0	cmp	w9, w8
00000000000223f4	cset	w0, eq
00000000000223f8	ldp	x29, x30, [sp, #0x10]
00000000000223fc	ldp	x20, x19, [sp], #0x20
0000000000022400	ret
0000000000022404	mov	w0, #0x0
0000000000022408	ldp	x29, x30, [sp, #0x10]
000000000002240c	ldp	x20, x19, [sp], #0x20
0000000000022410	ret
0000000000022414	adr	x1, #0x432bc
0000000000022418	nop
000000000002241c	mov	x0, x19
0000000000022420	bl	_ThrowClassCastException
_kfun:com.example.fastakmm.FastaKmm.AminoAcid#toString(){}kotlin.String:
0000000000022424	sub	sp, sp, #0x110
0000000000022428	stp	x28, x27, [sp, #0xb0]
000000000002242c	stp	x26, x25, [sp, #0xc0]
0000000000022430	stp	x24, x23, [sp, #0xd0]
0000000000022434	stp	x22, x21, [sp, #0xe0]
0000000000022438	stp	x20, x19, [sp, #0xf0]
000000000002243c	stp	x29, x30, [sp, #0x100]
0000000000022440	add	x29, sp, #0x100
0000000000022444	mov	x19, x1
0000000000022448	mov	x22, x0
000000000002244c	movi.16b	v0, #0x0
0000000000022450	stp	q0, q0, [sp, #0x30]
0000000000022454	str	xzr, [sp, #0x70]
0000000000022458	stp	q0, q0, [sp, #0x50]
000000000002245c	add	x8, sp, #0x30
0000000000022460	add	x25, x8, #0x20
0000000000022464	add	x23, x8, #0x30
0000000000022468	add	x10, x8, #0x40
000000000002246c	add	x24, x8, #0x28
0000000000022470	add	x21, x8, #0x38
0000000000022474	stp	xzr, xzr, [sp, #0x20]
0000000000022478	adr	x9, #0x42718
000000000002247c	nop
0000000000022480	orr	x9, x9, #0x3
0000000000022484	stp	x10, x9, [sp, #0x10]
0000000000022488	adrp	x0, 88 ; 0x7a000
000000000002248c	add	x0, x0, #0x2c0
0000000000022490	ldr	x9, [x0]
0000000000022494	blr	x9
0000000000022498	ldr	x26, [x0]
000000000002249c	ldr	x9, [x26, #0x110]
00000000000224a0	str	x8, [x26, #0x110]
00000000000224a4	mov	x8, #0x900000000
00000000000224a8	stp	x9, x8, [sp, #0x38]
00000000000224ac	adr	x8, #0x71ddd
00000000000224b0	nop
00000000000224b4	ldarb	w8, [x8]
00000000000224b8	tbz	w8, #0x0, 0x224c0
00000000000224bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000224c0	add	x27, sp, #0x18
00000000000224c4	str	x27, [sp, #0x48]
00000000000224c8	add	x0, sp, #0x18
00000000000224cc	mov	w1, #0xa
00000000000224d0	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000224d4	adr	x1, #0x4caac
00000000000224d8	nop
00000000000224dc	add	x0, sp, #0x18
00000000000224e0	mov	x2, x25
00000000000224e4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000224e8	ldr	d0, [x22, #0x8]
00000000000224ec	movi.16b	v1, #0x0
00000000000224f0	stp	q1, q1, [sp, #0x80]
00000000000224f4	add	x28, sp, #0x80
00000000000224f8	add	x25, x28, #0x18
00000000000224fc	ldr	x8, [x26, #0x110]
0000000000022500	str	x28, [x26, #0x110]
0000000000022504	mov	x20, #0x400000000
0000000000022508	stp	x8, x20, [sp, #0x88]
000000000002250c	mov	x0, x25
0000000000022510	bl	"_kfun:kotlin.Double#toString(){}kotlin.String"
0000000000022514	mov	x1, x0
0000000000022518	add	x0, sp, #0x18
000000000002251c	mov	x2, x24
0000000000022520	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022524	str	x27, [sp, #0x58]
0000000000022528	ldr	x8, [sp, #0x88]
000000000002252c	str	x8, [x26, #0x110]
0000000000022530	adr	x1, #0x4ca80
0000000000022534	nop
0000000000022538	add	x0, sp, #0x18
000000000002253c	mov	x2, x23
0000000000022540	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022544	ldrsb	x8, [x22, #0x10]
0000000000022548	movi.16b	v0, #0x0
000000000002254c	stp	q0, q0, [sp, #0x80]
0000000000022550	ldr	x9, [x26, #0x110]
0000000000022554	str	x28, [x26, #0x110]
0000000000022558	stp	x9, x20, [sp, #0x88]
000000000002255c	str	x8, [sp]
0000000000022560	adr	x2, #0x3c723 ; literal pool for: "%d"
0000000000022564	nop
0000000000022568	sub	x0, x29, #0x60
000000000002256c	mov	w1, #0x8
0000000000022570	bl	__ZN5konan8snprintfEPcmPKcz
0000000000022574	sub	x0, x29, #0x60
0000000000022578	mov	x1, x25
000000000002257c	bl	_CreateStringFromCString
0000000000022580	mov	x1, x0
0000000000022584	add	x0, sp, #0x18
0000000000022588	mov	x2, x21
000000000002258c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022590	str	x27, [sp, #0x68]
0000000000022594	ldr	x8, [sp, #0x88]
0000000000022598	str	x8, [x26, #0x110]
000000000002259c	adr	x1, #0x4b8e4
00000000000225a0	nop
00000000000225a4	add	x0, sp, #0x18
00000000000225a8	ldr	x2, [sp, #0x10]
00000000000225ac	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000225b0	add	x0, sp, #0x18
00000000000225b4	mov	x1, x19
00000000000225b8	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
00000000000225bc	str	x0, [x19]
00000000000225c0	ldr	x8, [sp, #0x38]
00000000000225c4	str	x8, [x26, #0x110]
00000000000225c8	ldp	x29, x30, [sp, #0x100]
00000000000225cc	ldp	x20, x19, [sp, #0xf0]
00000000000225d0	ldp	x22, x21, [sp, #0xe0]
00000000000225d4	ldp	x24, x23, [sp, #0xd0]
00000000000225d8	ldp	x26, x25, [sp, #0xc0]
00000000000225dc	ldp	x28, x27, [sp, #0xb0]
00000000000225e0	add	sp, sp, #0x110
00000000000225e4	ret
_kfun:com.example.fastakmm.FastaKmm.AminoAcid#hashCode(){}kotlin.Int:
00000000000225e8	stp	x20, x19, [sp, #-0x20]!
00000000000225ec	stp	x29, x30, [sp, #0x10]
00000000000225f0	add	x29, sp, #0x10
00000000000225f4	mov	x19, x0
00000000000225f8	adr	x8, #0x71c91
00000000000225fc	nop
0000000000022600	ldarb	w8, [x8]
0000000000022604	tbz	w8, #0x0, 0x2260c
0000000000022608	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002260c	ldr	d0, [x19, #0x8]
0000000000022610	fcmp	d0, d0
0000000000022614	fmov	x8, d0
0000000000022618	mov	x9, #0x7ff8000000000000
000000000002261c	csel	x8, x9, x8, vs
0000000000022620	ldrsb	w9, [x19, #0x10]
0000000000022624	lsr	x10, x8, #32
0000000000022628	eor	w8, w10, w8
000000000002262c	lsl	w10, w8, #5
0000000000022630	sub	w8, w10, w8
0000000000022634	add	w0, w8, w9
0000000000022638	ldp	x29, x30, [sp, #0x10]
000000000002263c	ldp	x20, x19, [sp], #0x20
0000000000022640	ret
_kfun:com.example.fastakmm.FastaKmm.AminoAcid#equals(kotlin.Any?){}kotlin.Boolean:
0000000000022644	stp	x20, x19, [sp, #-0x20]!
0000000000022648	stp	x29, x30, [sp, #0x10]
000000000002264c	add	x29, sp, #0x10
0000000000022650	mov	x19, x1
0000000000022654	mov	x20, x0
0000000000022658	adr	x8, #0x71c31
000000000002265c	nop
0000000000022660	ldarb	w8, [x8]
0000000000022664	tbz	w8, #0x0, 0x2266c
0000000000022668	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002266c	cmp	x20, x19
0000000000022670	b.eq	0x226e4
0000000000022674	cbz	x19, 0x226d4
0000000000022678	ldr	x8, [x19]
000000000002267c	and	x8, x8, #0xfffffffffffffffc
0000000000022680	ldr	x8, [x8]
0000000000022684	ldr	w8, [x8, #0x5c]
0000000000022688	cmp	w8, #0x19b
000000000002268c	b.ne	0x226d4
0000000000022690	ldr	x8, [x19]
0000000000022694	and	x8, x8, #0xfffffffffffffffc
0000000000022698	ldr	x8, [x8]
000000000002269c	ldr	w8, [x8, #0x5c]
00000000000226a0	cmp	w8, #0x19b
00000000000226a4	b.ne	0x226f4
00000000000226a8	ldr	x8, [x20, #0x8]
00000000000226ac	ldr	x9, [x19, #0x8]
00000000000226b0	cmp	x8, x9
00000000000226b4	b.ne	0x226d4
00000000000226b8	ldrb	w8, [x20, #0x10]
00000000000226bc	ldrb	w9, [x19, #0x10]
00000000000226c0	cmp	w8, w9
00000000000226c4	cset	w0, eq
00000000000226c8	ldp	x29, x30, [sp, #0x10]
00000000000226cc	ldp	x20, x19, [sp], #0x20
00000000000226d0	ret
00000000000226d4	mov	w0, #0x0
00000000000226d8	ldp	x29, x30, [sp, #0x10]
00000000000226dc	ldp	x20, x19, [sp], #0x20
00000000000226e0	ret
00000000000226e4	mov	w0, #0x1
00000000000226e8	ldp	x29, x30, [sp, #0x10]
00000000000226ec	ldp	x20, x19, [sp], #0x20
00000000000226f0	ret
00000000000226f4	adr	x1, #0x432bc
00000000000226f8	nop
00000000000226fc	mov	x0, x19
0000000000022700	bl	_ThrowClassCastException
_kfun:com.example.fastakmm.FastaKmm#accumulateProbabilities(kotlin.Array<com.example.fastakmm.FastaKmm.AminoAcid>){}:
0000000000022704	sub	sp, sp, #0x70
0000000000022708	stp	x24, x23, [sp, #0x30]
000000000002270c	stp	x22, x21, [sp, #0x40]
0000000000022710	stp	x20, x19, [sp, #0x50]
0000000000022714	stp	x29, x30, [sp, #0x60]
0000000000022718	add	x29, sp, #0x60
000000000002271c	mov	x19, x0
0000000000022720	movi.16b	v0, #0x0
0000000000022724	stp	q0, q0, [sp]
0000000000022728	str	xzr, [sp, #0x20]
000000000002272c	adrp	x0, 88 ; 0x7a000
0000000000022730	add	x0, x0, #0x2c0
0000000000022734	ldr	x8, [x0]
0000000000022738	blr	x8
000000000002273c	ldr	x20, [x0]
0000000000022740	ldr	x8, [x20, #0x110]
0000000000022744	mov	x9, sp
0000000000022748	str	x9, [x20, #0x110]
000000000002274c	mov	x9, #0x500000000
0000000000022750	stp	x8, x9, [sp, #0x8]
0000000000022754	adr	x21, #0x71b35
0000000000022758	nop
000000000002275c	ldarb	w8, [x21]
0000000000022760	tbz	w8, #0x0, 0x22768
0000000000022764	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022768	ldr	w8, [x19, #0x8]
000000000002276c	cmp	w8, #0x2
0000000000022770	b.lt	0x227c4
0000000000022774	mov	x22, #0x0
0000000000022778	sub	x23, x8, #0x1
000000000002277c	ldarb	w8, [x21]
0000000000022780	tbz	w8, #0x0, 0x22788
0000000000022784	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022788	add	x9, x19, x22, lsl #3
000000000002278c	ldr	x8, [x9, #0x18]
0000000000022790	str	x8, [sp, #0x18]
0000000000022794	ldr	w10, [x19, #0x8]
0000000000022798	cmp	x22, x10
000000000002279c	b.hs	0x227e4
00000000000227a0	ldr	d0, [x8, #0x8]
00000000000227a4	ldr	x9, [x9, #0x10]
00000000000227a8	str	x9, [sp, #0x20]
00000000000227ac	ldr	d1, [x9, #0x8]
00000000000227b0	fadd	d0, d0, d1
00000000000227b4	str	d0, [x8, #0x8]
00000000000227b8	add	x22, x22, #0x1
00000000000227bc	cmp	x23, x22
00000000000227c0	b.ne	0x2277c
00000000000227c4	ldr	x8, [sp, #0x8]
00000000000227c8	str	x8, [x20, #0x110]
00000000000227cc	ldp	x29, x30, [sp, #0x60]
00000000000227d0	ldp	x20, x19, [sp, #0x50]
00000000000227d4	ldp	x22, x21, [sp, #0x40]
00000000000227d8	ldp	x24, x23, [sp, #0x30]
00000000000227dc	add	sp, sp, #0x70
00000000000227e0	ret
00000000000227e4	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:com.example.fastakmm.FastaKmm#makeRandomFasta(kotlin.String;kotlin.String;kotlin.Array<com.example.fastakmm.FastaKmm.AminoAcid>;kotlin.Int){}:
00000000000227e8	sub	sp, sp, #0x130
00000000000227ec	stp	x28, x27, [sp, #0xd0]
00000000000227f0	stp	x26, x25, [sp, #0xe0]
00000000000227f4	stp	x24, x23, [sp, #0xf0]
00000000000227f8	stp	x22, x21, [sp, #0x100]
00000000000227fc	stp	x20, x19, [sp, #0x110]
0000000000022800	stp	x29, x30, [sp, #0x120]
0000000000022804	add	x29, sp, #0x120
0000000000022808	mov	x19, x4
000000000002280c	mov	x20, x3
0000000000022810	stp	x1, x2, [sp, #0x28]
0000000000022814	mov	x21, x0
0000000000022818	movi.16b	v0, #0x0
000000000002281c	stp	q0, q0, [sp, #0x50]
0000000000022820	str	xzr, [sp, #0xc0]
0000000000022824	stp	q0, q0, [sp, #0xa0]
0000000000022828	stp	q0, q0, [sp, #0x80]
000000000002282c	str	q0, [sp, #0x70]
0000000000022830	add	x22, sp, #0x50
0000000000022834	stp	xzr, xzr, [sp, #0x40]
0000000000022838	adr	x8, #0x42358
000000000002283c	nop
0000000000022840	orr	x8, x8, #0x3
0000000000022844	str	x8, [sp, #0x38]
0000000000022848	adrp	x0, 88 ; 0x7a000
000000000002284c	add	x0, x0, #0x2c0
0000000000022850	ldr	x8, [x0]
0000000000022854	blr	x8
0000000000022858	ldr	x23, [x0]
000000000002285c	ldr	x8, [x23, #0x110]
0000000000022860	str	x22, [x23, #0x110]
0000000000022864	mov	x9, #0xf00000000
0000000000022868	stp	x8, x9, [sp, #0x58]
000000000002286c	adr	x28, #0x71a1d
0000000000022870	nop
0000000000022874	ldarb	w8, [x28]
0000000000022878	tbz	w8, #0x0, 0x22880
000000000002287c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022880	mov	x0, x20
0000000000022884	bl	"_kfun:com.example.fastakmm.FastaKmm#accumulateProbabilities(kotlin.Array<com.example.fastakmm.FastaKmm.AminoAcid>){}"
0000000000022888	ldr	w25, [x21, #0x38]
000000000002288c	tbnz	w25, #0x1f, 0x22aac
0000000000022890	add	x10, x22, #0x58
0000000000022894	add	x8, sp, #0x50
0000000000022898	add	x9, x8, #0x50
000000000002289c	stp	x9, x10, [sp, #0x18]
00000000000228a0	add	x10, x8, #0x48
00000000000228a4	add	x9, x8, #0x40
00000000000228a8	stp	x9, x10, [sp, #0x8]
00000000000228ac	add	x24, x8, #0x38
00000000000228b0	add	x26, x8, #0x30
00000000000228b4	add	x27, x8, #0x28
00000000000228b8	str	x23, [sp]
00000000000228bc	ldr	x8, [x23, #0x118]
00000000000228c0	add	x9, x25, #0x1f
00000000000228c4	and	x1, x9, #0x1fffffff8
00000000000228c8	add	x0, x8, #0x70
00000000000228cc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000228d0	mov	x23, x0
00000000000228d4	adr	x8, #0x3e3cc
00000000000228d8	nop
00000000000228dc	mov	x22, x0
00000000000228e0	str	x8, [x22, #0x10]!
00000000000228e4	str	xzr, [x0, #0x18]
00000000000228e8	str	xzr, [x0, #0x8]
00000000000228ec	str	w25, [x0, #0x18]
00000000000228f0	add	x8, sp, #0x38
00000000000228f4	stp	x22, x8, [sp, #0x68]
00000000000228f8	add	x0, sp, #0x38
00000000000228fc	mov	w1, #0xa
0000000000022900	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000022904	adr	x1, #0x4c6cc
0000000000022908	nop
000000000002290c	add	x0, sp, #0x38
0000000000022910	mov	x2, x27
0000000000022914	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022918	add	x0, sp, #0x38
000000000002291c	ldr	x1, [sp, #0x28]
0000000000022920	mov	x2, x26
0000000000022924	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022928	adr	x1, #0x4c6c8
000000000002292c	nop
0000000000022930	add	x0, sp, #0x38
0000000000022934	mov	x2, x24
0000000000022938	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000002293c	add	x0, sp, #0x38
0000000000022940	ldr	x1, [sp, #0x30]
0000000000022944	ldr	x2, [sp, #0x8]
0000000000022948	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000002294c	adr	x1, #0x4c6c4
0000000000022950	nop
0000000000022954	add	x0, sp, #0x38
0000000000022958	ldr	x2, [sp, #0x10]
000000000002295c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022960	add	x0, sp, #0x38
0000000000022964	ldr	x1, [sp, #0x18]
0000000000022968	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000002296c	ldr	w2, [x0, #0x8]
0000000000022970	mov	w1, #0x0
0000000000022974	ldr	x3, [sp, #0x20]
0000000000022978	bl	_Kotlin_String_unsafeStringToUtf8
000000000002297c	stp	x0, x0, [sp, #0xa8]
0000000000022980	stp	x0, x0, [sp, #0xb8]
0000000000022984	ldr	w2, [x0, #0x8]
0000000000022988	mov	w1, #0x0
000000000002298c	bl	"_kfun:com.example.fastakmm.utils.IOAndBufferOperator#writeBytes(kotlin.ByteArray;kotlin.Int;kotlin.Int){}"
0000000000022990	mov	w24, #0x0
0000000000022994	add	x26, x23, #0x20
0000000000022998	cmp	w19, #0x0
000000000002299c	b.le	0x22a6c
00000000000229a0	ldarb	w8, [x28]
00000000000229a4	tbnz	w8, #0x0, 0x229c8
00000000000229a8	ldp	w8, w9, [x21, #0x34]
00000000000229ac	cmp	w19, w8
00000000000229b0	csel	w25, w19, w8, lt
00000000000229b4	cmp	w24, w9
00000000000229b8	b.eq	0x229e0
00000000000229bc	cmp	w25, #0x1
00000000000229c0	b.ge	0x229fc
00000000000229c4	b	0x22a44
00000000000229c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000229cc	ldp	w8, w9, [x21, #0x34]
00000000000229d0	cmp	w19, w8
00000000000229d4	csel	w25, w19, w8, lt
00000000000229d8	cmp	w24, w9
00000000000229dc	b.ne	0x229bc
00000000000229e0	mov	x0, x22
00000000000229e4	mov	w1, #0x0
00000000000229e8	mov	x2, x24
00000000000229ec	bl	"_kfun:com.example.fastakmm.utils.IOAndBufferOperator#writeBytes(kotlin.ByteArray;kotlin.Int;kotlin.Int){}"
00000000000229f0	mov	w24, #0x0
00000000000229f4	cmp	w25, #0x1
00000000000229f8	b.lt	0x22a44
00000000000229fc	mov	x27, x25
0000000000022a00	ldarb	w8, [x28]
0000000000022a04	tbz	w8, #0x0, 0x22a0c
0000000000022a08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022a0c	fmov	s0, #1.00000000
0000000000022a10	mov	x0, x21
0000000000022a14	bl	"_kfun:com.example.fastakmm.FastaKmm#random(kotlin.Float){}kotlin.Float"
0000000000022a18	fcvt	d0, s0
0000000000022a1c	mov	x0, x20
0000000000022a20	bl	"_kfun:com.example.fastakmm.FastaKmm#binarySearch(kotlin.Double;kotlin.Array<com.example.fastakmm.FastaKmm.AminoAcid>){}kotlin.Byte"
0000000000022a24	ldr	w8, [x23, #0x18]
0000000000022a28	cmp	w8, w24
0000000000022a2c	b.ls	0x22aa8
0000000000022a30	ldr	xzr, [x22]
0000000000022a34	strb	w0, [x26, w24, sxtw]
0000000000022a38	add	w24, w24, #0x1
0000000000022a3c	subs	w27, w27, #0x1
0000000000022a40	b.ne	0x22a00
0000000000022a44	ldr	w8, [x23, #0x18]
0000000000022a48	cmp	w8, w24
0000000000022a4c	b.ls	0x22aa8
0000000000022a50	ldr	xzr, [x22]
0000000000022a54	mov	w8, #0xa
0000000000022a58	strb	w8, [x26, w24, sxtw]
0000000000022a5c	add	w24, w24, #0x1
0000000000022a60	sub	w19, w19, w25
0000000000022a64	cmp	w19, #0x0
0000000000022a68	b.gt	0x229a0
0000000000022a6c	mov	x0, x22
0000000000022a70	mov	w1, #0x0
0000000000022a74	mov	x2, x24
0000000000022a78	bl	"_kfun:com.example.fastakmm.utils.IOAndBufferOperator#writeBytes(kotlin.ByteArray;kotlin.Int;kotlin.Int){}"
0000000000022a7c	ldr	x8, [sp, #0x58]
0000000000022a80	ldr	x9, [sp]
0000000000022a84	str	x8, [x9, #0x110]
0000000000022a88	ldp	x29, x30, [sp, #0x120]
0000000000022a8c	ldp	x20, x19, [sp, #0x110]
0000000000022a90	ldp	x22, x21, [sp, #0x100]
0000000000022a94	ldp	x24, x23, [sp, #0xf0]
0000000000022a98	ldp	x26, x25, [sp, #0xe0]
0000000000022a9c	ldp	x28, x27, [sp, #0xd0]
0000000000022aa0	add	sp, sp, #0x130
0000000000022aa4	ret
0000000000022aa8	bl	_ThrowArrayIndexOutOfBoundsException
0000000000022aac	bl	_ThrowIllegalArgumentException
_kfun:com.example.fastakmm.FastaKmm#makeRepeatFasta(kotlin.String;kotlin.String;kotlin.String;kotlin.Int){}:
0000000000022ab0	sub	sp, sp, #0x140
0000000000022ab4	stp	x28, x27, [sp, #0xe0]
0000000000022ab8	stp	x26, x25, [sp, #0xf0]
0000000000022abc	stp	x24, x23, [sp, #0x100]
0000000000022ac0	stp	x22, x21, [sp, #0x110]
0000000000022ac4	stp	x20, x19, [sp, #0x120]
0000000000022ac8	stp	x29, x30, [sp, #0x130]
0000000000022acc	add	x29, sp, #0x130
0000000000022ad0	str	w4, [sp, #0x34]
0000000000022ad4	mov	x21, x3
0000000000022ad8	mov	x25, x2
0000000000022adc	stp	x1, x0, [sp, #0x20]
0000000000022ae0	movi.16b	v0, #0x0
0000000000022ae4	stp	q0, q0, [sp, #0x50]
0000000000022ae8	stp	q0, q0, [sp, #0xb0]
0000000000022aec	stp	q0, q0, [sp, #0x90]
0000000000022af0	stp	q0, q0, [sp, #0x70]
0000000000022af4	add	x19, sp, #0x50
0000000000022af8	add	x22, x19, #0x18
0000000000022afc	stp	xzr, xzr, [sp, #0x40]
0000000000022b00	adr	x8, #0x42090
0000000000022b04	nop
0000000000022b08	orr	x8, x8, #0x3
0000000000022b0c	str	x8, [sp, #0x38]
0000000000022b10	adrp	x0, 88 ; 0x7a000
0000000000022b14	add	x0, x0, #0x2c0
0000000000022b18	ldr	x8, [x0]
0000000000022b1c	blr	x8
0000000000022b20	ldr	x23, [x0]
0000000000022b24	ldr	x8, [x23, #0x110]
0000000000022b28	str	x19, [x23, #0x110]
0000000000022b2c	mov	x9, #0x1000000000
0000000000022b30	stp	x8, x9, [sp, #0x58]
0000000000022b34	adr	x28, #0x71755
0000000000022b38	nop
0000000000022b3c	ldarb	w8, [x28]
0000000000022b40	tbz	w8, #0x0, 0x22b48
0000000000022b44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022b48	ldr	w2, [x21, #0x8]
0000000000022b4c	mov	x0, x21
0000000000022b50	mov	w1, #0x0
0000000000022b54	mov	x3, x22
0000000000022b58	bl	_Kotlin_String_unsafeStringToUtf8
0000000000022b5c	str	x0, [sp, #0x68]
0000000000022b60	ldr	x8, [sp, #0x28]
0000000000022b64	ldr	w20, [x8, #0x38]
0000000000022b68	tbnz	w20, #0x1f, 0x22d84
0000000000022b6c	mov	x21, x0
0000000000022b70	add	x19, x19, #0x60
0000000000022b74	add	x8, sp, #0x50
0000000000022b78	add	x10, x8, #0x58
0000000000022b7c	add	x9, x8, #0x50
0000000000022b80	stp	x9, x10, [sp, #0x10]
0000000000022b84	add	x9, x8, #0x48
0000000000022b88	stp	x23, x9, [sp]
0000000000022b8c	add	x24, x8, #0x40
0000000000022b90	add	x26, x8, #0x38
0000000000022b94	add	x27, x8, #0x30
0000000000022b98	ldr	x8, [x23, #0x118]
0000000000022b9c	add	x9, x20, #0x1f
0000000000022ba0	and	x1, x9, #0x1fffffff8
0000000000022ba4	add	x0, x8, #0x70
0000000000022ba8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000022bac	mov	x23, x0
0000000000022bb0	adr	x8, #0x3e0f0
0000000000022bb4	nop
0000000000022bb8	mov	x22, x0
0000000000022bbc	str	x8, [x22, #0x10]!
0000000000022bc0	str	xzr, [x0, #0x18]
0000000000022bc4	str	xzr, [x0, #0x8]
0000000000022bc8	str	w20, [x0, #0x18]
0000000000022bcc	add	x8, sp, #0x38
0000000000022bd0	stp	x22, x8, [sp, #0x70]
0000000000022bd4	add	x0, sp, #0x38
0000000000022bd8	mov	w1, #0xa
0000000000022bdc	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000022be0	adr	x1, #0x4c3f0
0000000000022be4	nop
0000000000022be8	add	x0, sp, #0x38
0000000000022bec	mov	x2, x27
0000000000022bf0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022bf4	add	x0, sp, #0x38
0000000000022bf8	ldr	x1, [sp, #0x20]
0000000000022bfc	mov	x2, x26
0000000000022c00	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022c04	adr	x1, #0x4c3ec
0000000000022c08	nop
0000000000022c0c	add	x0, sp, #0x38
0000000000022c10	mov	x2, x24
0000000000022c14	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022c18	add	x0, sp, #0x38
0000000000022c1c	mov	x1, x25
0000000000022c20	ldr	x2, [sp, #0x8]
0000000000022c24	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022c28	adr	x1, #0x4c3e8
0000000000022c2c	nop
0000000000022c30	add	x0, sp, #0x38
0000000000022c34	ldr	x2, [sp, #0x10]
0000000000022c38	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022c3c	add	x0, sp, #0x38
0000000000022c40	ldr	x1, [sp, #0x18]
0000000000022c44	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000022c48	ldr	w2, [x0, #0x8]
0000000000022c4c	mov	w1, #0x0
0000000000022c50	mov	x3, x19
0000000000022c54	bl	_Kotlin_String_unsafeStringToUtf8
0000000000022c58	stp	x0, x0, [sp, #0xb0]
0000000000022c5c	stp	x0, x0, [sp, #0xc0]
0000000000022c60	ldr	w2, [x0, #0x8]
0000000000022c64	mov	w1, #0x0
0000000000022c68	bl	"_kfun:com.example.fastakmm.utils.IOAndBufferOperator#writeBytes(kotlin.ByteArray;kotlin.Int;kotlin.Int){}"
0000000000022c6c	mov	w24, #0x0
0000000000022c70	mov	w25, #0x0
0000000000022c74	add	x26, x21, #0x10
0000000000022c78	add	x27, x23, #0x20
0000000000022c7c	ldr	w19, [sp, #0x34]
0000000000022c80	cmp	w19, #0x0
0000000000022c84	b.le	0x22d44
0000000000022c88	ldarb	w8, [x28]
0000000000022c8c	tbz	w8, #0x0, 0x22c94
0000000000022c90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022c94	ldr	x9, [sp, #0x28]
0000000000022c98	ldp	w8, w9, [x9, #0x34]
0000000000022c9c	cmp	w19, w8
0000000000022ca0	str	w19, [sp, #0x34]
0000000000022ca4	csel	w19, w19, w8, lt
0000000000022ca8	cmp	w24, w9
0000000000022cac	b.ne	0x22cc4
0000000000022cb0	mov	x0, x22
0000000000022cb4	mov	w1, #0x0
0000000000022cb8	mov	x2, x24
0000000000022cbc	bl	"_kfun:com.example.fastakmm.utils.IOAndBufferOperator#writeBytes(kotlin.ByteArray;kotlin.Int;kotlin.Int){}"
0000000000022cc0	mov	w24, #0x0
0000000000022cc4	cmp	w19, #0x1
0000000000022cc8	b.lt	0x22d18
0000000000022ccc	mov	x20, x19
0000000000022cd0	ldarb	w8, [x28]
0000000000022cd4	tbz	w8, #0x0, 0x22cdc
0000000000022cd8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022cdc	ldr	w9, [x21, #0x8]
0000000000022ce0	cmp	w25, w9
0000000000022ce4	csel	w8, wzr, w25, eq
0000000000022ce8	cmp	w9, w8
0000000000022cec	b.ls	0x22d80
0000000000022cf0	ldr	w9, [x23, #0x18]
0000000000022cf4	cmp	w9, w24
0000000000022cf8	b.ls	0x22d80
0000000000022cfc	ldrb	w9, [x26, w8, sxtw]
0000000000022d00	add	w25, w8, #0x1
0000000000022d04	ldr	xzr, [x22]
0000000000022d08	strb	w9, [x27, w24, sxtw]
0000000000022d0c	add	w24, w24, #0x1
0000000000022d10	subs	w20, w20, #0x1
0000000000022d14	b.ne	0x22cd0
0000000000022d18	ldr	w8, [x23, #0x18]
0000000000022d1c	cmp	w8, w24
0000000000022d20	b.ls	0x22d80
0000000000022d24	ldr	xzr, [x22]
0000000000022d28	mov	w8, #0xa
0000000000022d2c	strb	w8, [x27, w24, sxtw]
0000000000022d30	add	w24, w24, #0x1
0000000000022d34	ldr	w8, [sp, #0x34]
0000000000022d38	sub	w19, w8, w19
0000000000022d3c	cmp	w19, #0x0
0000000000022d40	b.gt	0x22c88
0000000000022d44	mov	x0, x22
0000000000022d48	mov	w1, #0x0
0000000000022d4c	mov	x2, x24
0000000000022d50	bl	"_kfun:com.example.fastakmm.utils.IOAndBufferOperator#writeBytes(kotlin.ByteArray;kotlin.Int;kotlin.Int){}"
0000000000022d54	ldr	x8, [sp, #0x58]
0000000000022d58	ldr	x9, [sp]
0000000000022d5c	str	x8, [x9, #0x110]
0000000000022d60	ldp	x29, x30, [sp, #0x130]
0000000000022d64	ldp	x20, x19, [sp, #0x120]
0000000000022d68	ldp	x22, x21, [sp, #0x110]
0000000000022d6c	ldp	x24, x23, [sp, #0x100]
0000000000022d70	ldp	x26, x25, [sp, #0xf0]
0000000000022d74	ldp	x28, x27, [sp, #0xe0]
0000000000022d78	add	sp, sp, #0x140
0000000000022d7c	ret
0000000000022d80	bl	_ThrowArrayIndexOutOfBoundsException
0000000000022d84	bl	_ThrowIllegalArgumentException
_kfun:com.example.fastakmm.FastaKmm#random(kotlin.Float){}kotlin.Float:
0000000000022d88	stp	d9, d8, [sp, #-0x30]!
0000000000022d8c	stp	x20, x19, [sp, #0x10]
0000000000022d90	stp	x29, x30, [sp, #0x20]
0000000000022d94	add	x29, sp, #0x20
0000000000022d98	fmov	s8, s0
0000000000022d9c	mov	x19, x0
0000000000022da0	adr	x8, #0x714e9
0000000000022da4	nop
0000000000022da8	ldarb	w8, [x8]
0000000000022dac	tbz	w8, #0x0, 0x22db4
0000000000022db0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022db4	ldr	w8, [x19, #0x28]
0000000000022db8	cbz	w8, 0x22e0c
0000000000022dbc	ldr	w9, [x19, #0x3c]
0000000000022dc0	ldp	w10, w11, [x19, #0x2c]
0000000000022dc4	madd	w9, w9, w10, w11
0000000000022dc8	mov	w10, #-0x80000000
0000000000022dcc	cmp	w9, w10
0000000000022dd0	ccmn	w8, #0x1, #0x0, eq
0000000000022dd4	sdiv	w10, w9, w8
0000000000022dd8	msub	w9, w10, w8, w9
0000000000022ddc	csel	w9, wzr, w9, eq
0000000000022de0	str	w9, [x19, #0x3c]
0000000000022de4	scvtf	s0, w9
0000000000022de8	fmul	s0, s0, s8
0000000000022dec	scvtf	s1, w8
0000000000022df0	fmov	s2, #1.00000000
0000000000022df4	fdiv	s1, s2, s1
0000000000022df8	fmul	s0, s0, s1
0000000000022dfc	ldp	x29, x30, [sp, #0x20]
0000000000022e00	ldp	x20, x19, [sp, #0x10]
0000000000022e04	ldp	d9, d8, [sp], #0x30
0000000000022e08	ret
0000000000022e0c	bl	_ThrowArithmeticException
_kfun:com.example.fastakmm.FastaKmm#binarySearch(kotlin.Double;kotlin.Array<com.example.fastakmm.FastaKmm.AminoAcid>){}kotlin.Byte:
0000000000022e10	sub	sp, sp, #0x90
0000000000022e14	stp	d9, d8, [sp, #0x30]
0000000000022e18	stp	x26, x25, [sp, #0x40]
0000000000022e1c	stp	x24, x23, [sp, #0x50]
0000000000022e20	stp	x22, x21, [sp, #0x60]
0000000000022e24	stp	x20, x19, [sp, #0x70]
0000000000022e28	stp	x29, x30, [sp, #0x80]
0000000000022e2c	add	x29, sp, #0x80
0000000000022e30	mov	x19, x0
0000000000022e34	fmov	d8, d0
0000000000022e38	movi.16b	v0, #0x0
0000000000022e3c	stp	q0, q0, [sp]
0000000000022e40	str	xzr, [sp, #0x20]
0000000000022e44	adrp	x0, 88 ; 0x7a000
0000000000022e48	add	x0, x0, #0x2c0
0000000000022e4c	ldr	x8, [x0]
0000000000022e50	blr	x8
0000000000022e54	ldr	x20, [x0]
0000000000022e58	ldr	x8, [x20, #0x110]
0000000000022e5c	mov	x9, sp
0000000000022e60	str	x9, [x20, #0x110]
0000000000022e64	mov	x9, #0x500000000
0000000000022e68	stp	x8, x9, [sp, #0x8]
0000000000022e6c	adr	x21, #0x7141d
0000000000022e70	nop
0000000000022e74	ldarb	w8, [x21]
0000000000022e78	tbz	w8, #0x0, 0x22e80
0000000000022e7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022e80	mov	w23, #0x0
0000000000022e84	ldr	w8, [x19, #0x8]
0000000000022e88	sub	w24, w8, #0x1
0000000000022e8c	add	x22, x19, #0x10
0000000000022e90	subs	w25, w24, w23
0000000000022e94	b.lt	0x22ee0
0000000000022e98	ldarb	w8, [x21]
0000000000022e9c	tbz	w8, #0x0, 0x22ea4
0000000000022ea0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022ea4	cmp	w25, #0x0
0000000000022ea8	cinc	w8, w25, lt
0000000000022eac	add	w9, w23, w8, asr #1
0000000000022eb0	ldr	w8, [x19, #0x8]
0000000000022eb4	cmp	w8, w9
0000000000022eb8	b.ls	0x22f20
0000000000022ebc	ldr	x10, [x22, w9, sxtw #3]
0000000000022ec0	str	x10, [sp, #0x18]
0000000000022ec4	ldr	d0, [x10, #0x8]
0000000000022ec8	sub	w10, w9, #0x1
0000000000022ecc	fcmp	d0, d8
0000000000022ed0	csel	w24, w24, w10, lt
0000000000022ed4	csinc	w23, w23, w9, ge
0000000000022ed8	subs	w25, w24, w23
0000000000022edc	b.ge	0x22e98
0000000000022ee0	add	w9, w24, #0x1
0000000000022ee4	cmp	w8, w9
0000000000022ee8	b.ls	0x22f20
0000000000022eec	ldr	x8, [x22, w9, sxtw #3]
0000000000022ef0	str	x8, [sp, #0x20]
0000000000022ef4	ldrsb	w0, [x8, #0x10]
0000000000022ef8	ldr	x8, [sp, #0x8]
0000000000022efc	str	x8, [x20, #0x110]
0000000000022f00	ldp	x29, x30, [sp, #0x80]
0000000000022f04	ldp	x20, x19, [sp, #0x70]
0000000000022f08	ldp	x22, x21, [sp, #0x60]
0000000000022f0c	ldp	x24, x23, [sp, #0x50]
0000000000022f10	ldp	x26, x25, [sp, #0x40]
0000000000022f14	ldp	d9, d8, [sp, #0x30]
0000000000022f18	add	sp, sp, #0x90
0000000000022f1c	ret
0000000000022f20	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:com.example.fastakmm.utils.IOAndBufferOperator#writeBytes(kotlin.ByteArray;kotlin.Int;kotlin.Int){}:
0000000000022f24	sub	sp, sp, #0x190
0000000000022f28	stp	x28, x27, [sp, #0x130]
0000000000022f2c	stp	x26, x25, [sp, #0x140]
0000000000022f30	stp	x24, x23, [sp, #0x150]
0000000000022f34	stp	x22, x21, [sp, #0x160]
0000000000022f38	stp	x20, x19, [sp, #0x170]
0000000000022f3c	stp	x29, x30, [sp, #0x180]
0000000000022f40	add	x29, sp, #0x180
0000000000022f44	mov	x23, x2
0000000000022f48	mov	x19, x1
0000000000022f4c	mov	x20, x0
0000000000022f50	movi.16b	v0, #0x0
0000000000022f54	stp	q0, q0, [sp, #0x40]
0000000000022f58	str	xzr, [sp, #0x80]
0000000000022f5c	stp	q0, q0, [sp, #0x60]
0000000000022f60	add	x21, sp, #0x40
0000000000022f64	add	x22, x21, #0x18
0000000000022f68	adrp	x25, 88 ; 0x7a000
0000000000022f6c	add	x25, x25, #0x2c0
0000000000022f70	ldr	x26, [x25]
0000000000022f74	mov	x0, x25
0000000000022f78	blr	x26
0000000000022f7c	ldr	x24, [x0]
0000000000022f80	ldr	x8, [x24, #0x110]
0000000000022f84	str	x21, [x24, #0x110]
0000000000022f88	mov	x9, #0x900000000
0000000000022f8c	stp	x8, x9, [sp, #0x48]
0000000000022f90	adr	x27, #0x712f9
0000000000022f94	nop
0000000000022f98	ldarb	w8, [x27]
0000000000022f9c	tbz	w8, #0x0, 0x22fa4
0000000000022fa0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022fa4	add	w23, w19, w23
0000000000022fa8	ldr	w2, [x20, #0x8]
0000000000022fac	mov	x0, x19
0000000000022fb0	mov	x1, x23
0000000000022fb4	bl	"_kfun:kotlin.collections#checkCopyOfRangeArguments(kotlin.Int;kotlin.Int;kotlin.Int){}"
0000000000022fb8	mov	x0, x20
0000000000022fbc	mov	x1, x19
0000000000022fc0	mov	x2, x23
0000000000022fc4	mov	x3, x22
0000000000022fc8	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.ByteArray(kotlin.Int;kotlin.Int){}kotlin.ByteArray"
0000000000022fcc	mov	x23, x0
0000000000022fd0	str	x0, [sp, #0x58]
0000000000022fd4	movi.16b	v0, #0x0
0000000000022fd8	stp	q0, q0, [sp, #0x90]
0000000000022fdc	stp	q0, q0, [sp, #0xb0]
0000000000022fe0	add	x22, sp, #0x90
0000000000022fe4	mov	x8, #0x800000000
0000000000022fe8	ldp	x9, x10, [x24, #0x110]
0000000000022fec	stp	x9, x8, [sp, #0x98]
0000000000022ff0	add	x20, x22, #0x20
0000000000022ff4	str	x22, [x24, #0x110]
0000000000022ff8	add	x0, x10, #0x70
0000000000022ffc	mov	w1, #0x28
0000000000023000	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000023004	mov	x19, x0
0000000000023008	adr	x8, #0x3d818
000000000002300c	nop
0000000000023010	str	x8, [x19, #0x10]!
0000000000023014	stur	xzr, [x19, #-0x8]
0000000000023018	str	x19, [sp, #0xa8]
000000000002301c	adr	x8, #0x4aebc
0000000000023020	nop
0000000000023024	stp	x8, xzr, [x19, #0x10]
0000000000023028	nop
000000000002302c	ldr	x0, #0x53be4 ; Objc class ref: _OBJC_CLASS_$_NSData
0000000000023030	mov	x1, x20
0000000000023034	bl	_interpretObjCPointer
0000000000023038	cbz	x0, 0x23080
000000000002303c	ldar	x8, [x0]
0000000000023040	ands	x8, x8, #0xfffffffffffffffc
0000000000023044	b.eq	0x23060
0000000000023048	ldr	x9, [x8]
000000000002304c	cmp	x9, x8
0000000000023050	b.eq	0x23060
0000000000023054	add	x8, x8, #0x10
0000000000023058	ldar	x8, [x8]
000000000002305c	cbnz	x8, 0x23094
0000000000023060	ldr	x8, [x0]
0000000000023064	and	x8, x8, #0xfffffffffffffffc
0000000000023068	ldr	x8, [x8]
000000000002306c	ldr	x8, [x8, #0x60]
0000000000023070	ldr	x8, [x8]
0000000000023074	cbz	x8, 0x23088
0000000000023078	blr	x8
000000000002307c	b	0x2308c
0000000000023080	mov	x8, #0x0
0000000000023084	b	0x23094
0000000000023088	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
000000000002308c	bl	0x55524 ; symbol stub for: _objc_autorelease
0000000000023090	mov	x8, x0
0000000000023094	add	x9, x21, #0x28
0000000000023098	stp	x9, x26, [sp, #0x28]
000000000002309c	add	x9, x21, #0x38
00000000000230a0	str	x9, [sp, #0x18]
00000000000230a4	add	x20, x22, #0x38
00000000000230a8	movi.16b	v0, #0x0
00000000000230ac	stp	q0, q0, [x29, #-0xb0]
00000000000230b0	stur	xzr, [x29, #-0x90]
00000000000230b4	ldr	x9, [x24, #0x110]
00000000000230b8	sub	x10, x29, #0xb0
00000000000230bc	str	x10, [x24, #0x110]
00000000000230c0	mov	x10, #0x500000000
00000000000230c4	stp	x9, x10, [x29, #-0xa8]
00000000000230c8	mov	x0, x25
00000000000230cc	blr	x26
00000000000230d0	ldr	x28, [x0]
00000000000230d4	add	x26, x28, #0x138
00000000000230d8	mov	w9, #0x1
00000000000230dc	ldaxr	w22, [x26]
00000000000230e0	stlxr	w10, w9, [x26]
00000000000230e4	cbnz	w10, 0x230dc
00000000000230e8	mov	x0, x8
00000000000230ec	bl	0x5550c ; symbol stub for: _objc_allocWithZone
00000000000230f0	mov	x21, x0
00000000000230f4	cbz	x28, 0x23120
00000000000230f8	ldaxr	w8, [x26]
00000000000230fc	stlxr	w9, w22, [x26]
0000000000023100	cbnz	w9, 0x230f8
0000000000023104	cbnz	w22, 0x23120
0000000000023108	cmp	w8, #0x1
000000000002310c	b.ne	0x23120
0000000000023110	ldarb	w8, [x27]
0000000000023114	tbz	w8, #0x0, 0x23120
0000000000023118	mov	x0, x26
000000000002311c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000023120	str	x20, [sp, #0x20]
0000000000023124	str	x21, [sp, #0x38]
0000000000023128	cbz	x21, 0x239cc
000000000002312c	ldur	x8, [x29, #-0xa8]
0000000000023130	movi.16b	v0, #0x0
0000000000023134	stp	q0, q0, [x29, #-0xb0]
0000000000023138	stur	xzr, [x29, #-0x90]
000000000002313c	sub	x9, x29, #0xb0
0000000000023140	str	x9, [x24, #0x110]
0000000000023144	mov	x9, #0x500000000
0000000000023148	stp	x8, x9, [x29, #-0xa8]
000000000002314c	ldrsw	x12, [x23, #0x8]
0000000000023150	adr	x26, #0x71168
0000000000023154	nop
0000000000023158	ldar	x21, [x26]
000000000002315c	cmp	x21, #0x2
0000000000023160	b.hs	0x2326c
0000000000023164	ldp	x8, x9, [x24, #0x120]
0000000000023168	cmp	x8, x9
000000000002316c	b.eq	0x2318c
0000000000023170	mov	x10, x9
0000000000023174	ldr	x11, [x10, #-0x10]!
0000000000023178	cmp	x11, x26
000000000002317c	b.eq	0x23264
0000000000023180	mov	x9, x10
0000000000023184	cmp	x10, x8
0000000000023188	b.ne	0x23174
000000000002318c	add	x28, x24, #0x120
0000000000023190	add	x0, x24, #0x138
0000000000023194	mov	w9, #0x1
0000000000023198	ldaxr	w8, [x0]
000000000002319c	stlxr	w10, w9, [x0]
00000000000231a0	cbnz	w10, 0x23198
00000000000231a4	b	0x231b4
00000000000231a8	mov	w20, #0x1
00000000000231ac	stlxr	w9, x20, [x26]
00000000000231b0	cbz	w9, 0x231c4
00000000000231b4	ldaxr	x21, [x26]
00000000000231b8	cbz	x21, 0x231a8
00000000000231bc	mov	w20, #0x0
00000000000231c0	clrex
00000000000231c4	cmp	x21, #0x1
00000000000231c8	b.eq	0x231b4
00000000000231cc	cbz	x24, 0x231fc
00000000000231d0	ldaxr	w9, [x0]
00000000000231d4	stlxr	w10, w8, [x0]
00000000000231d8	cbnz	w10, 0x231d0
00000000000231dc	cbnz	w8, 0x231fc
00000000000231e0	cmp	w9, #0x1
00000000000231e4	b.ne	0x231fc
00000000000231e8	ldarb	w8, [x27]
00000000000231ec	tbz	w8, #0x0, 0x231fc
00000000000231f0	mov	x22, x12
00000000000231f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000231f8	mov	x12, x22
00000000000231fc	tbz	w20, #0x0, 0x2324c
0000000000023200	str	x12, [sp, #0x10]
0000000000023204	ldr	x8, [x24, #0x118]
0000000000023208	add	x0, x8, #0x70
000000000002320c	mov	w1, #0x20
0000000000023210	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000023214	mov	x20, x0
0000000000023218	adr	x8, #0x3d2e8
000000000002321c	nop
0000000000023220	mov	x21, x0
0000000000023224	str	x8, [x21, #0x10]!
0000000000023228	str	xzr, [x0, #0x8]
000000000002322c	stur	x21, [x29, #-0x98]
0000000000023230	ldp	x9, x8, [x24, #0x128]
0000000000023234	cmp	x9, x8
0000000000023238	b.hs	0x23380
000000000002323c	stp	x26, x21, [x9]
0000000000023240	add	x8, x9, #0x10
0000000000023244	str	x8, [x24, #0x128]
0000000000023248	b	0x23414
000000000002324c	stur	x21, [x29, #-0x98]
0000000000023250	ldr	x22, [x21, #0x8]
0000000000023254	ldar	x20, [x26]
0000000000023258	cmp	x20, #0x2
000000000002325c	b.lo	0x2327c
0000000000023260	b	0x235ac
0000000000023264	ldur	x21, [x9, #-0x8]
0000000000023268	stur	x21, [x29, #-0x98]
000000000002326c	ldr	x22, [x21, #0x8]
0000000000023270	ldar	x20, [x26]
0000000000023274	cmp	x20, #0x2
0000000000023278	b.hs	0x235ac
000000000002327c	ldp	x8, x9, [x24, #0x120]
0000000000023280	cmp	x8, x9
0000000000023284	b.eq	0x232a4
0000000000023288	mov	x10, x9
000000000002328c	ldr	x11, [x10, #-0x10]!
0000000000023290	cmp	x11, x26
0000000000023294	b.eq	0x23374
0000000000023298	mov	x9, x10
000000000002329c	cmp	x10, x8
00000000000232a0	b.ne	0x2328c
00000000000232a4	add	x28, x24, #0x120
00000000000232a8	add	x0, x24, #0x138
00000000000232ac	mov	w9, #0x1
00000000000232b0	ldaxr	w8, [x0]
00000000000232b4	stlxr	w10, w9, [x0]
00000000000232b8	cbnz	w10, 0x232b0
00000000000232bc	b	0x232cc
00000000000232c0	mov	w21, #0x1
00000000000232c4	stlxr	w9, x21, [x26]
00000000000232c8	cbz	w9, 0x232dc
00000000000232cc	ldaxr	x20, [x26]
00000000000232d0	cbz	x20, 0x232c0
00000000000232d4	mov	w21, #0x0
00000000000232d8	clrex
00000000000232dc	cmp	x20, #0x1
00000000000232e0	b.eq	0x232cc
00000000000232e4	cbz	x24, 0x2331c
00000000000232e8	ldaxr	w9, [x0]
00000000000232ec	stlxr	w10, w8, [x0]
00000000000232f0	cbnz	w10, 0x232e8
00000000000232f4	cbnz	w8, 0x2331c
00000000000232f8	cmp	w9, #0x1
00000000000232fc	b.ne	0x2331c
0000000000023300	ldarb	w8, [x27]
0000000000023304	tbz	w8, #0x0, 0x2331c
0000000000023308	str	x28, [sp, #0x8]
000000000002330c	mov	x28, x12
0000000000023310	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000023314	mov	x12, x28
0000000000023318	ldr	x28, [sp, #0x8]
000000000002331c	tbz	w21, #0x0, 0x2336c
0000000000023320	str	x12, [sp, #0x10]
0000000000023324	ldr	x8, [x24, #0x118]
0000000000023328	add	x0, x8, #0x70
000000000002332c	mov	w1, #0x20
0000000000023330	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000023334	mov	x21, x0
0000000000023338	adr	x8, #0x3d1c8
000000000002333c	nop
0000000000023340	mov	x20, x0
0000000000023344	str	x8, [x20, #0x10]!
0000000000023348	str	xzr, [x0, #0x8]
000000000002334c	stur	x20, [x29, #-0x90]
0000000000023350	ldp	x9, x8, [x24, #0x128]
0000000000023354	cmp	x9, x8
0000000000023358	b.hs	0x23498
000000000002335c	stp	x26, x20, [x9]
0000000000023360	add	x8, x9, #0x10
0000000000023364	str	x8, [x24, #0x128]
0000000000023368	b	0x2353c
000000000002336c	stur	x20, [x29, #-0x90]
0000000000023370	b	0x235ac
0000000000023374	ldur	x20, [x9, #-0x8]
0000000000023378	stur	x20, [x29, #-0x90]
000000000002337c	b	0x235ac
0000000000023380	str	x28, [sp, #0x8]
0000000000023384	ldr	x10, [x28]
0000000000023388	sub	x9, x9, x10
000000000002338c	asr	x22, x9, #4
0000000000023390	add	x9, x22, #0x1
0000000000023394	lsr	x11, x9, #60
0000000000023398	cbnz	x11, 0x23a18
000000000002339c	sub	x8, x8, x10
00000000000233a0	asr	x10, x8, #3
00000000000233a4	cmp	x10, x9
00000000000233a8	csel	x9, x9, x10, lo
00000000000233ac	mov	x10, #0x7ffffffffffffff
00000000000233b0	cmp	x10, x8, asr #4
00000000000233b4	mov	x8, #0xfffffffffffffff
00000000000233b8	csel	x28, x9, x8, hi
00000000000233bc	mov	x0, x28
00000000000233c0	mov	w1, #0x10
00000000000233c4	bl	0x553d4 ; symbol stub for: _calloc
00000000000233c8	add	x8, x0, x22, lsl #4
00000000000233cc	add	x10, x0, x28, lsl #4
00000000000233d0	stp	x26, x21, [x8]
00000000000233d4	add	x22, x8, #0x10
00000000000233d8	ldp	x1, x9, [x24, #0x120]
00000000000233dc	sub	x2, x9, x1
00000000000233e0	sub	x28, x8, x2
00000000000233e4	cmp	x2, #0x1
00000000000233e8	b.lt	0x23400
00000000000233ec	mov	x0, x28
00000000000233f0	str	x10, [sp]
00000000000233f4	bl	0x554ac ; symbol stub for: _memcpy
00000000000233f8	ldp	x10, x8, [sp]
00000000000233fc	ldr	x1, [x8]
0000000000023400	stp	x28, x22, [x24, #0x120]
0000000000023404	str	x10, [x24, #0x130]
0000000000023408	cbz	x1, 0x23414
000000000002340c	mov	x0, x1
0000000000023410	bl	0x55458 ; symbol stub for: _free
0000000000023414	movi.16b	v0, #0x0
0000000000023418	stur	q0, [x29, #-0x70]
000000000002341c	ldr	x8, [x24, #0x110]
0000000000023420	sub	x9, x29, #0x80
0000000000023424	str	x9, [x24, #0x110]
0000000000023428	mov	w9, #0x1
000000000002342c	str	x9, [x20, #0x18]
0000000000023430	str	w9, [x20, #0x20]
0000000000023434	str	x8, [x24, #0x110]
0000000000023438	mov	w0, #0x1
000000000002343c	mov	w1, #0x28
0000000000023440	bl	0x553d4 ; symbol stub for: _calloc
0000000000023444	mov	x8, x24
0000000000023448	ldr	x9, [x8, #0x18]!
000000000002344c	sub	x10, x8, #0x8
0000000000023450	stp	x26, x10, [x0, #0x10]
0000000000023454	stp	x9, x8, [x0]
0000000000023458	str	x0, [x9, #0x8]
000000000002345c	str	x0, [x8]
0000000000023460	ldr	x9, [x8, #0x10]
0000000000023464	add	x9, x9, #0x1
0000000000023468	str	x9, [x8, #0x10]
000000000002346c	str	x0, [x0, #0x20]
0000000000023470	stlr	x21, [x26]
0000000000023474	ldr	x9, [x8, #0x110]
0000000000023478	sub	x9, x9, #0x10
000000000002347c	str	x9, [x8, #0x110]
0000000000023480	ldr	x12, [sp, #0x10]
0000000000023484	ldr	x22, [x21, #0x8]
0000000000023488	ldar	x20, [x26]
000000000002348c	cmp	x20, #0x2
0000000000023490	b.lo	0x2327c
0000000000023494	b	0x235ac
0000000000023498	str	x28, [sp, #0x8]
000000000002349c	ldr	x10, [x28]
00000000000234a0	sub	x9, x9, x10
00000000000234a4	asr	x25, x9, #4
00000000000234a8	add	x9, x25, #0x1
00000000000234ac	lsr	x11, x9, #60
00000000000234b0	cbnz	x11, 0x23a24
00000000000234b4	sub	x8, x8, x10
00000000000234b8	asr	x10, x8, #3
00000000000234bc	cmp	x10, x9
00000000000234c0	csel	x9, x9, x10, lo
00000000000234c4	mov	x10, #0x7ffffffffffffff
00000000000234c8	cmp	x10, x8, asr #4
00000000000234cc	mov	x8, #0xfffffffffffffff
00000000000234d0	csel	x28, x9, x8, hi
00000000000234d4	mov	x0, x28
00000000000234d8	mov	w1, #0x10
00000000000234dc	bl	0x553d4 ; symbol stub for: _calloc
00000000000234e0	add	x8, x0, x25, lsl #4
00000000000234e4	add	x10, x0, x28, lsl #4
00000000000234e8	stp	x26, x20, [x8]
00000000000234ec	add	x11, x8, #0x10
00000000000234f0	ldp	x1, x9, [x24, #0x120]
00000000000234f4	sub	x2, x9, x1
00000000000234f8	sub	x28, x8, x2
00000000000234fc	cmp	x2, #0x1
0000000000023500	b.lt	0x23520
0000000000023504	mov	x0, x28
0000000000023508	str	x10, [sp]
000000000002350c	mov	x25, x11
0000000000023510	bl	0x554ac ; symbol stub for: _memcpy
0000000000023514	mov	x11, x25
0000000000023518	ldp	x10, x8, [sp]
000000000002351c	ldr	x1, [x8]
0000000000023520	adrp	x25, 87 ; 0x7a000
0000000000023524	add	x25, x25, #0x2c0
0000000000023528	stp	x28, x11, [x24, #0x120]
000000000002352c	str	x10, [x24, #0x130]
0000000000023530	cbz	x1, 0x2353c
0000000000023534	mov	x0, x1
0000000000023538	bl	0x55458 ; symbol stub for: _free
000000000002353c	movi.16b	v0, #0x0
0000000000023540	stur	q0, [x29, #-0x70]
0000000000023544	ldr	x8, [x24, #0x110]
0000000000023548	sub	x9, x29, #0x80
000000000002354c	str	x9, [x24, #0x110]
0000000000023550	mov	w9, #0x1
0000000000023554	str	x9, [x21, #0x18]
0000000000023558	str	w9, [x21, #0x20]
000000000002355c	str	x8, [x24, #0x110]
0000000000023560	mov	w0, #0x1
0000000000023564	mov	w1, #0x28
0000000000023568	bl	0x553d4 ; symbol stub for: _calloc
000000000002356c	mov	x8, x24
0000000000023570	ldr	x9, [x8, #0x18]!
0000000000023574	sub	x10, x8, #0x8
0000000000023578	stp	x26, x10, [x0, #0x10]
000000000002357c	stp	x9, x8, [x0]
0000000000023580	str	x0, [x9, #0x8]
0000000000023584	str	x0, [x8]
0000000000023588	ldr	x9, [x8, #0x10]
000000000002358c	add	x9, x9, #0x1
0000000000023590	str	x9, [x8, #0x10]
0000000000023594	str	x0, [x0, #0x20]
0000000000023598	stlr	x20, [x26]
000000000002359c	ldr	x9, [x8, #0x110]
00000000000235a0	sub	x9, x9, #0x10
00000000000235a4	str	x9, [x8, #0x110]
00000000000235a8	ldr	x12, [sp, #0x10]
00000000000235ac	mul	x1, x22, x12
00000000000235b0	ldr	w2, [x20, #0x10]
00000000000235b4	ldr	x8, [x19]
00000000000235b8	and	x8, x8, #0xfffffffffffffffc
00000000000235bc	ldr	x8, [x8]
00000000000235c0	ldr	w9, [x8, #0x3c]
00000000000235c4	ldr	x8, [x8, #0x40]
00000000000235c8	tbnz	w9, #0x1f, 0x235d4
00000000000235cc	and	x9, x9, #0x10
00000000000235d0	b	0x23658
00000000000235d4	neg	w10, w9
00000000000235d8	mvn	w9, w9
00000000000235dc	cmp	w10, #0x9
00000000000235e0	b.ge	0x23618
00000000000235e4	cmp	w10, #0x2
00000000000235e8	b.lt	0x2364c
00000000000235ec	mov	x10, #0x0
00000000000235f0	mov	x11, x8
00000000000235f4	ldr	w12, [x11]
00000000000235f8	cmp	w12, #0xf
00000000000235fc	b.gt	0x23654
0000000000023600	add	x10, x10, #0x1
0000000000023604	add	x11, x11, #0x10
0000000000023608	cmp	x9, x10
000000000002360c	b.ne	0x235f4
0000000000023610	mov	x10, x9
0000000000023614	b	0x23654
0000000000023618	mov	w10, #0x0
000000000002361c	add	w11, w9, w10
0000000000023620	cmp	w11, #0x0
0000000000023624	cinc	w11, w11, lt
0000000000023628	asr	w11, w11, #1
000000000002362c	sbfiz	x12, x11, #4, #32
0000000000023630	ldr	w12, [x8, x12]
0000000000023634	cmp	w12, #0x10
0000000000023638	csinc	w10, w10, w11, ge
000000000002363c	csel	w9, w9, w11, lt
0000000000023640	cmp	w10, w9
0000000000023644	b.lt	0x2361c
0000000000023648	b	0x23654
000000000002364c	mov	w10, #0x0
0000000000023650	b	0x23654
0000000000023654	sxtw	x9, w10
0000000000023658	add	x8, x8, x9, lsl #4
000000000002365c	ldr	x8, [x8, #0x8]
0000000000023660	ldr	x8, [x8, #0x8]
0000000000023664	mov	x0, x19
0000000000023668	blr	x8
000000000002366c	mov	x26, x0
0000000000023670	cbz	x0, 0x23a10
0000000000023674	mov	x20, #0x0
0000000000023678	ldr	w8, [x23, #0x8]
000000000002367c	add	x21, x23, #0x10
0000000000023680	bic	w22, w8, w8, asr #31
0000000000023684	cmp	w22, w20
0000000000023688	b.eq	0x236c0
000000000002368c	ldarb	w8, [x27]
0000000000023690	tbz	w8, #0x0, 0x23698
0000000000023694	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023698	ldr	w8, [x23, #0x8]
000000000002369c	cmp	w8, w20
00000000000236a0	b.ls	0x239c4
00000000000236a4	adds	x8, x26, x20
00000000000236a8	b.eq	0x239bc
00000000000236ac	ldrb	w9, [x21, x20]
00000000000236b0	strb	w9, [x8]
00000000000236b4	add	x20, x20, #0x1
00000000000236b8	cmp	w22, w20
00000000000236bc	b.ne	0x2368c
00000000000236c0	mov	x21, x25
00000000000236c4	ldur	x8, [x29, #-0xa8]
00000000000236c8	str	x8, [x24, #0x110]
00000000000236cc	ldrsw	x3, [x23, #0x8]
00000000000236d0	add	x8, x24, #0x138
00000000000236d4	mov	w9, #0x1
00000000000236d8	ldaxr	wzr, [x8]
00000000000236dc	stlxr	w10, w9, [x8]
00000000000236e0	cbnz	w10, 0x236d8
00000000000236e4	nop
00000000000236e8	ldr	x1, #0x53208 ; Objc selector ref: initWithBytes:length:
00000000000236ec	ldr	x0, [sp, #0x38]
00000000000236f0	mov	x2, x26
00000000000236f4	bl	0x55584 ; Objc message: +[NSData initWithBytes:length:]
00000000000236f8	mov	x25, x0
00000000000236fc	add	x0, x24, #0x138
0000000000023700	ldaxr	w8, [x0]
0000000000023704	stlxr	w9, wzr, [x0]
0000000000023708	cbnz	w9, 0x23700
000000000002370c	cmp	w8, #0x1
0000000000023710	b.ne	0x23720
0000000000023714	ldarb	w8, [x27]
0000000000023718	tbz	w8, #0x0, 0x23720
000000000002371c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000023720	adrp	x20, 113 ; 0x94000
0000000000023724	cbz	x25, 0x23740
0000000000023728	ldr	x1, [x20, #0x4d8]
000000000002372c	mov	x0, x25
0000000000023730	ldr	x2, [sp, #0x20]
0000000000023734	bl	0x55584 ; Objc message: -[x0 initWithBytes:length:]
0000000000023738	mov	x23, x0
000000000002373c	b	0x23748
0000000000023740	mov	x23, #0x0
0000000000023744	str	xzr, [sp, #0xc8]
0000000000023748	mov	x0, x21
000000000002374c	ldr	x8, [sp, #0x30]
0000000000023750	blr	x8
0000000000023754	ldr	x26, [x0]
0000000000023758	add	x21, x26, #0x138
000000000002375c	mov	w8, #0x1
0000000000023760	ldaxr	w22, [x21]
0000000000023764	stlxr	w9, w8, [x21]
0000000000023768	cbnz	w9, 0x23760
000000000002376c	mov	x0, x25
0000000000023770	bl	0x555a8 ; symbol stub for: _objc_release
0000000000023774	cbz	x26, 0x237a0
0000000000023778	ldaxr	w8, [x21]
000000000002377c	stlxr	w9, w22, [x21]
0000000000023780	cbnz	w9, 0x23778
0000000000023784	cbnz	w22, 0x237a0
0000000000023788	cmp	w8, #0x1
000000000002378c	b.ne	0x237a0
0000000000023790	ldarb	w8, [x27]
0000000000023794	tbz	w8, #0x0, 0x237a0
0000000000023798	mov	x0, x21
000000000002379c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000237a0	mov	x0, x19
00000000000237a4	bl	"_kfun:kotlinx.cinterop.ArenaBase#clearImpl(){}"
00000000000237a8	str	x23, [sp, #0x60]
00000000000237ac	ldr	x8, [sp, #0x98]
00000000000237b0	str	x8, [x24, #0x110]
00000000000237b4	nop
00000000000237b8	ldr	x0, #0x53450 ; Objc class ref: _OBJC_CLASS_$_NSFileHandle
00000000000237bc	ldr	x1, [sp, #0x28]
00000000000237c0	bl	_interpretObjCPointer
00000000000237c4	cbz	x0, 0x2380c
00000000000237c8	ldar	x8, [x0]
00000000000237cc	and	x8, x8, #0xfffffffffffffffc
00000000000237d0	ldr	x9, [x8]
00000000000237d4	cmp	x8, #0x0
00000000000237d8	ccmp	x9, x8, #0x4, ne
00000000000237dc	b.eq	0x237ec
00000000000237e0	add	x8, x8, #0x10
00000000000237e4	ldar	x8, [x8]
00000000000237e8	cbnz	x8, 0x23820
00000000000237ec	ldr	x8, [x0]
00000000000237f0	and	x8, x8, #0xfffffffffffffffc
00000000000237f4	ldr	x8, [x8]
00000000000237f8	ldr	x8, [x8, #0x60]
00000000000237fc	ldr	x8, [x8]
0000000000023800	cbz	x8, 0x23814
0000000000023804	blr	x8
0000000000023808	b	0x23818
000000000002380c	mov	x8, #0x0
0000000000023810	b	0x23820
0000000000023814	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
0000000000023818	bl	0x55524 ; symbol stub for: _objc_autorelease
000000000002381c	mov	x8, x0
0000000000023820	add	x9, x24, #0x138
0000000000023824	mov	w10, #0x1
0000000000023828	ldaxr	wzr, [x9]
000000000002382c	stlxr	w11, w10, [x9]
0000000000023830	cbnz	w11, 0x23828
0000000000023834	nop
0000000000023838	ldr	x1, #0x53080 ; Objc selector ref: fileHandleWithStandardOutput
000000000002383c	mov	x0, x8
0000000000023840	bl	0x55584 ; Objc message: +[NSFileHandle fileHandleWithStandardOutput]
0000000000023844	mov	x19, x0
0000000000023848	add	x0, x24, #0x138
000000000002384c	ldaxr	w8, [x0]
0000000000023850	stlxr	w9, wzr, [x0]
0000000000023854	cbnz	w9, 0x2384c
0000000000023858	cmp	w8, #0x1
000000000002385c	b.ne	0x2386c
0000000000023860	ldarb	w8, [x27]
0000000000023864	tbz	w8, #0x0, 0x2386c
0000000000023868	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002386c	cbz	x19, 0x238c8
0000000000023870	ldr	x1, [x20, #0x4d8]
0000000000023874	mov	x0, x19
0000000000023878	ldr	x2, [sp, #0x18]
000000000002387c	bl	0x55584 ; Objc message: -[x0 fileHandleWithStandardOutput]
0000000000023880	cbz	x0, 0x238d8
0000000000023884	ldar	x8, [x0]
0000000000023888	and	x8, x8, #0xfffffffffffffffc
000000000002388c	ldr	x9, [x8]
0000000000023890	cmp	x8, #0x0
0000000000023894	ccmp	x9, x8, #0x4, ne
0000000000023898	b.eq	0x238a8
000000000002389c	add	x8, x8, #0x10
00000000000238a0	ldar	x19, [x8]
00000000000238a4	cbnz	x19, 0x238dc
00000000000238a8	ldr	x8, [x0]
00000000000238ac	and	x8, x8, #0xfffffffffffffffc
00000000000238b0	ldr	x8, [x8]
00000000000238b4	ldr	x8, [x8, #0x60]
00000000000238b8	ldr	x8, [x8]
00000000000238bc	cbz	x8, 0x239a8
00000000000238c0	blr	x8
00000000000238c4	b	0x239ac
00000000000238c8	str	xzr, [sp, #0x78]
00000000000238cc	cbnz	x23, 0x238e0
00000000000238d0	mov	x2, #0x0
00000000000238d4	b	0x23938
00000000000238d8	mov	x19, #0x0
00000000000238dc	cbz	x23, 0x238d0
00000000000238e0	ldar	x8, [x23]
00000000000238e4	ands	x8, x8, #0xfffffffffffffffc
00000000000238e8	b.eq	0x23904
00000000000238ec	ldr	x9, [x8]
00000000000238f0	cmp	x9, x8
00000000000238f4	b.eq	0x23904
00000000000238f8	add	x8, x8, #0x10
00000000000238fc	ldar	x2, [x8]
0000000000023900	cbnz	x2, 0x23938
0000000000023904	ldr	x8, [x23]
0000000000023908	and	x8, x8, #0xfffffffffffffffc
000000000002390c	ldr	x8, [x8]
0000000000023910	ldr	x8, [x8, #0x60]
0000000000023914	ldr	x8, [x8]
0000000000023918	cbz	x8, 0x23928
000000000002391c	mov	x0, x23
0000000000023920	blr	x8
0000000000023924	b	0x23930
0000000000023928	mov	x0, x23
000000000002392c	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
0000000000023930	bl	0x55524 ; symbol stub for: _objc_autorelease
0000000000023934	mov	x2, x0
0000000000023938	add	x8, x24, #0x138
000000000002393c	mov	w9, #0x1
0000000000023940	ldaxr	wzr, [x8]
0000000000023944	stlxr	w10, w9, [x8]
0000000000023948	cbnz	w10, 0x23940
000000000002394c	nop
0000000000023950	ldr	x1, #0x53178 ; Objc selector ref: writeData:
0000000000023954	mov	x0, x19
0000000000023958	bl	0x55584 ; Objc message: -[x0 writeData:]
000000000002395c	add	x0, x24, #0x138
0000000000023960	ldaxr	w8, [x0]
0000000000023964	stlxr	w9, wzr, [x0]
0000000000023968	cbnz	w9, 0x23960
000000000002396c	cmp	w8, #0x1
0000000000023970	b.ne	0x23980
0000000000023974	ldarb	w8, [x27]
0000000000023978	tbz	w8, #0x0, 0x23980
000000000002397c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000023980	ldr	x8, [sp, #0x48]
0000000000023984	str	x8, [x24, #0x110]
0000000000023988	ldp	x29, x30, [sp, #0x180]
000000000002398c	ldp	x20, x19, [sp, #0x170]
0000000000023990	ldp	x22, x21, [sp, #0x160]
0000000000023994	ldp	x24, x23, [sp, #0x150]
0000000000023998	ldp	x26, x25, [sp, #0x140]
000000000002399c	ldp	x28, x27, [sp, #0x130]
00000000000239a0	add	sp, sp, #0x190
00000000000239a4	ret
00000000000239a8	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
00000000000239ac	bl	0x55524 ; symbol stub for: _objc_autorelease
00000000000239b0	mov	x19, x0
00000000000239b4	cbnz	x23, 0x238e0
00000000000239b8	b	0x238d0
00000000000239bc	bl	_ThrowNullPointerException
00000000000239c0	b	0x23c10
00000000000239c4	bl	_ThrowArrayIndexOutOfBoundsException
00000000000239c8	b	0x23c10
00000000000239cc	ldr	x8, [x24, #0x118]
00000000000239d0	add	x0, x8, #0x70
00000000000239d4	mov	w1, #0x38
00000000000239d8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000239dc	mov	x20, x0
00000000000239e0	adr	x8, #0x3df00
00000000000239e4	nop
00000000000239e8	str	x8, [x20, #0x10]!
00000000000239ec	stur	xzr, [x20, #-0x8]
00000000000239f0	stur	x20, [x29, #-0x90]
00000000000239f4	adr	x1, #0x4a54c
00000000000239f8	nop
00000000000239fc	mov	x0, x20
0000000000023a00	bl	"_kfun:kotlin.OutOfMemoryError#<init>(kotlin.String?){}"
0000000000023a04	mov	x0, x20
0000000000023a08	bl	_ThrowException
0000000000023a0c	b	0x23c10
0000000000023a10	bl	_ThrowNullPointerException
0000000000023a14	b	0x23c10
0000000000023a18	ldr	x0, [sp, #0x8]
0000000000023a1c	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000023a20	b	0x23c10
0000000000023a24	ldr	x0, [sp, #0x8]
0000000000023a28	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000023a2c	b	0x23c10
0000000000023a30	bl	___clang_call_terminate
0000000000023a34	bl	___clang_call_terminate
0000000000023a38	bl	___clang_call_terminate
0000000000023a3c	bl	___clang_call_terminate
0000000000023a40	bl	___clang_call_terminate
0000000000023a44	bl	___clang_call_terminate
0000000000023a48	mov	x20, x1
0000000000023a4c	mov	x19, x0
0000000000023a50	add	x0, x24, #0x138
0000000000023a54	ldaxr	w8, [x0]
0000000000023a58	stlxr	w9, wzr, [x0]
0000000000023a5c	cbnz	w9, 0x23a54
0000000000023a60	cmp	w8, #0x1
0000000000023a64	b.ne	0x23a74
0000000000023a68	ldarb	w8, [x27]
0000000000023a6c	tbz	w8, #0x0, 0x23a74
0000000000023a70	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000023a74	add	x8, sp, #0x40
0000000000023a78	str	x8, [x24, #0x110]
0000000000023a7c	mov	x0, x19
0000000000023a80	cmp	w20, #0x2
0000000000023a84	b.eq	0x23a94
0000000000023a88	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000023a8c	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000023a90	b	0x23a90
0000000000023a94	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000023a98	ldr	x8, [x0, #0x8]
0000000000023a9c	ldr	x19, [x8]
0000000000023aa0	str	x19, [sp, #0x80]
0000000000023aa4	b	0x23b04
0000000000023aa8	mov	x20, x1
0000000000023aac	mov	x19, x0
0000000000023ab0	add	x0, x24, #0x138
0000000000023ab4	ldaxr	w8, [x0]
0000000000023ab8	stlxr	w9, wzr, [x0]
0000000000023abc	cbnz	w9, 0x23ab4
0000000000023ac0	cmp	w8, #0x1
0000000000023ac4	b.ne	0x23ad4
0000000000023ac8	ldarb	w8, [x27]
0000000000023acc	tbz	w8, #0x0, 0x23ad4
0000000000023ad0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000023ad4	add	x8, sp, #0x40
0000000000023ad8	str	x8, [x24, #0x110]
0000000000023adc	mov	x0, x19
0000000000023ae0	cmp	w20, #0x2
0000000000023ae4	b.eq	0x23af4
0000000000023ae8	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000023aec	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000023af0	b	0x23af0
0000000000023af4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000023af8	ldr	x8, [x0, #0x8]
0000000000023afc	ldr	x19, [x8]
0000000000023b00	str	x19, [sp, #0x70]
0000000000023b04	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000023b08	mov	x0, x19
0000000000023b0c	bl	_ThrowException
0000000000023b10	mov	x20, x0
0000000000023b14	cbz	x26, 0x23c18
0000000000023b18	ldaxr	w8, [x21]
0000000000023b1c	stlxr	w9, w22, [x21]
0000000000023b20	cbnz	w9, 0x23b18
0000000000023b24	cbnz	w22, 0x23c18
0000000000023b28	cmp	w8, #0x1
0000000000023b2c	b.ne	0x23c18
0000000000023b30	ldarb	w8, [x27]
0000000000023b34	tbz	w8, #0x0, 0x23c18
0000000000023b38	mov	x0, x21
0000000000023b3c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000023b40	b	0x23c18
0000000000023b44	mov	x20, x1
0000000000023b48	mov	x21, x0
0000000000023b4c	add	x0, x24, #0x138
0000000000023b50	ldaxr	w8, [x0]
0000000000023b54	stlxr	w9, wzr, [x0]
0000000000023b58	cbnz	w9, 0x23b50
0000000000023b5c	cmp	w8, #0x1
0000000000023b60	b.ne	0x23b70
0000000000023b64	ldarb	w8, [x27]
0000000000023b68	tbz	w8, #0x0, 0x23b70
0000000000023b6c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000023b70	add	x8, sp, #0x90
0000000000023b74	str	x8, [x24, #0x110]
0000000000023b78	mov	x0, x21
0000000000023b7c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000023b80	cmp	w20, #0x2
0000000000023b84	b.eq	0x23b90
0000000000023b88	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000023b8c	b	0x23b8c
0000000000023b90	ldr	x8, [x0, #0x8]
0000000000023b94	ldr	x20, [x8]
0000000000023b98	str	x20, [sp, #0xc0]
0000000000023b9c	b	0x23c34
0000000000023ba0	mov	x21, x1
0000000000023ba4	mov	x20, x0
0000000000023ba8	cbz	x28, 0x23bd4
0000000000023bac	ldaxr	w8, [x26]
0000000000023bb0	stlxr	w9, w22, [x26]
0000000000023bb4	cbnz	w9, 0x23bac
0000000000023bb8	cbnz	w22, 0x23bd4
0000000000023bbc	cmp	w8, #0x1
0000000000023bc0	b.ne	0x23bd4
0000000000023bc4	ldarb	w8, [x27]
0000000000023bc8	tbz	w8, #0x0, 0x23bd4
0000000000023bcc	mov	x0, x26
0000000000023bd0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000023bd4	sub	x8, x29, #0xb0
0000000000023bd8	str	x8, [x24, #0x110]
0000000000023bdc	mov	x0, x20
0000000000023be0	cmp	w21, #0x2
0000000000023be4	b.eq	0x23bf4
0000000000023be8	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000023bec	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000023bf0	b	0x23bf0
0000000000023bf4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000023bf8	ldr	x8, [x0, #0x8]
0000000000023bfc	ldr	x20, [x8]
0000000000023c00	stur	x20, [x29, #-0x98]
0000000000023c04	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000023c08	mov	x0, x20
0000000000023c0c	bl	_ThrowException
0000000000023c10	brk	#0x1
0000000000023c14	mov	x20, x0
0000000000023c18	add	x8, sp, #0x90
0000000000023c1c	str	x8, [x24, #0x110]
0000000000023c20	mov	x0, x20
0000000000023c24	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000023c28	ldr	x8, [x0, #0x8]
0000000000023c2c	ldr	x20, [x8]
0000000000023c30	str	x20, [sp, #0xb8]
0000000000023c34	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000023c38	mov	x0, x19
0000000000023c3c	bl	"_kfun:kotlinx.cinterop.ArenaBase#clearImpl(){}"
0000000000023c40	mov	x0, x20
0000000000023c44	bl	_ThrowException
0000000000023c48	stp	x20, x19, [sp, #-0x20]!
0000000000023c4c	stp	x29, x30, [sp, #0x10]
0000000000023c50	add	x29, sp, #0x10
0000000000023c54	mov	x19, x1
0000000000023c58	mov	x20, x0
0000000000023c5c	adr	x8, #0x7062d
0000000000023c60	nop
0000000000023c64	ldarb	w8, [x8]
0000000000023c68	tbz	w8, #0x0, 0x23c70
0000000000023c6c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023c70	sub	w8, w20, #0x1
0000000000023c74	cmp	w8, #0x3
0000000000023c78	b.hs	0x23c88
0000000000023c7c	ldp	x29, x30, [sp, #0x10]
0000000000023c80	ldp	x20, x19, [sp], #0x20
0000000000023c84	ret
0000000000023c88	adr	x1, #0x706a0
0000000000023c8c	nop
0000000000023c90	mov	x0, x19
0000000000023c94	mov	w2, #0x3
0000000000023c98	ldp	x29, x30, [sp, #0x10]
0000000000023c9c	ldp	x20, x19, [sp], #0x20
0000000000023ca0	b	_AddTLSRecord
0000000000023ca4	stp	x20, x19, [sp, #-0x20]!
0000000000023ca8	stp	x29, x30, [sp, #0x10]
0000000000023cac	add	x29, sp, #0x10
0000000000023cb0	mov	x19, x1
0000000000023cb4	mov	x20, x0
0000000000023cb8	adr	x8, #0x705d1
0000000000023cbc	nop
0000000000023cc0	ldarb	w8, [x8]
0000000000023cc4	tbz	w8, #0x0, 0x23ccc
0000000000023cc8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023ccc	sub	w8, w20, #0x1
0000000000023cd0	cmp	w8, #0x2
0000000000023cd4	b.lo	0x23d00
0000000000023cd8	cbnz	w20, 0x23cf8
0000000000023cdc	adr	x1, #0x7064c
0000000000023ce0	nop
0000000000023ce4	mov	x0, x19
0000000000023ce8	mov	w2, #0x3
0000000000023cec	ldp	x29, x30, [sp, #0x10]
0000000000023cf0	ldp	x20, x19, [sp], #0x20
0000000000023cf4	b	_AddTLSRecord
0000000000023cf8	adrp	x8, 113 ; 0x94000
0000000000023cfc	str	xzr, [x8, #0x2b8]
0000000000023d00	ldp	x29, x30, [sp, #0x10]
0000000000023d04	ldp	x20, x19, [sp], #0x20
0000000000023d08	ret
0000000000023d0c	stp	x20, x19, [sp, #-0x20]!
0000000000023d10	stp	x29, x30, [sp, #0x10]
0000000000023d14	add	x29, sp, #0x10
0000000000023d18	mov	x19, x1
0000000000023d1c	mov	x20, x0
0000000000023d20	adr	x8, #0x70569
0000000000023d24	nop
0000000000023d28	ldarb	w8, [x8]
0000000000023d2c	tbz	w8, #0x0, 0x23d34
0000000000023d30	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023d34	sub	w8, w20, #0x1
0000000000023d38	cmp	w8, #0x3
0000000000023d3c	b.hs	0x23d4c
0000000000023d40	ldp	x29, x30, [sp, #0x10]
0000000000023d44	ldp	x20, x19, [sp], #0x20
0000000000023d48	ret
0000000000023d4c	adr	x1, #0x705dc
0000000000023d50	nop
0000000000023d54	mov	x0, x19
0000000000023d58	mov	w2, #0x3
0000000000023d5c	ldp	x29, x30, [sp, #0x10]
0000000000023d60	ldp	x20, x19, [sp], #0x20
0000000000023d64	b	_AddTLSRecord
0000000000023d68	stp	x20, x19, [sp, #-0x20]!
0000000000023d6c	stp	x29, x30, [sp, #0x10]
0000000000023d70	add	x29, sp, #0x10
0000000000023d74	mov	x19, x1
0000000000023d78	mov	x20, x0
0000000000023d7c	adr	x8, #0x7050d
0000000000023d80	nop
0000000000023d84	ldarb	w8, [x8]
0000000000023d88	tbz	w8, #0x0, 0x23d90
0000000000023d8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023d90	sub	w8, w20, #0x1
0000000000023d94	cmp	w8, #0x2
0000000000023d98	b.lo	0x23dcc
0000000000023d9c	cbnz	w20, 0x23dbc
0000000000023da0	adr	x1, #0x70588
0000000000023da4	nop
0000000000023da8	mov	x0, x19
0000000000023dac	mov	w2, #0x3
0000000000023db0	ldp	x29, x30, [sp, #0x10]
0000000000023db4	ldp	x20, x19, [sp], #0x20
0000000000023db8	b	_AddTLSRecord
0000000000023dbc	adr	x8, #0x704dc
0000000000023dc0	nop
0000000000023dc4	str	xzr, [x8, #0x28]
0000000000023dc8	str	wzr, [x8]
0000000000023dcc	ldp	x29, x30, [sp, #0x10]
0000000000023dd0	ldp	x20, x19, [sp], #0x20
0000000000023dd4	ret
0000000000023dd8	stp	x20, x19, [sp, #-0x20]!
0000000000023ddc	stp	x29, x30, [sp, #0x10]
0000000000023de0	add	x29, sp, #0x10
0000000000023de4	mov	x19, x1
0000000000023de8	mov	x20, x0
0000000000023dec	adr	x8, #0x7049d
0000000000023df0	nop
0000000000023df4	ldarb	w8, [x8]
0000000000023df8	tbz	w8, #0x0, 0x23e00
0000000000023dfc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023e00	sub	w8, w20, #0x1
0000000000023e04	cmp	w8, #0x3
0000000000023e08	b.hs	0x23e18
0000000000023e0c	ldp	x29, x30, [sp, #0x10]
0000000000023e10	ldp	x20, x19, [sp], #0x20
0000000000023e14	ret
0000000000023e18	adr	x1, #0x70510
0000000000023e1c	nop
0000000000023e20	mov	x0, x19
0000000000023e24	mov	w2, #0x3
0000000000023e28	ldp	x29, x30, [sp, #0x10]
0000000000023e2c	ldp	x20, x19, [sp], #0x20
0000000000023e30	b	_AddTLSRecord
0000000000023e34	stp	x20, x19, [sp, #-0x20]!
0000000000023e38	stp	x29, x30, [sp, #0x10]
0000000000023e3c	add	x29, sp, #0x10
0000000000023e40	mov	x19, x1
0000000000023e44	mov	x20, x0
0000000000023e48	adr	x8, #0x70441
0000000000023e4c	nop
0000000000023e50	ldarb	w8, [x8]
0000000000023e54	tbz	w8, #0x0, 0x23e5c
0000000000023e58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023e5c	sub	w8, w20, #0x1
0000000000023e60	cmp	w8, #0x2
0000000000023e64	b.lo	0x23e9c
0000000000023e68	cbnz	w20, 0x23e88
0000000000023e6c	adr	x1, #0x704bc
0000000000023e70	nop
0000000000023e74	mov	x0, x19
0000000000023e78	mov	w2, #0x3
0000000000023e7c	ldp	x29, x30, [sp, #0x10]
0000000000023e80	ldp	x20, x19, [sp], #0x20
0000000000023e84	b	_AddTLSRecord
0000000000023e88	adr	x8, #0x70414
0000000000023e8c	nop
0000000000023e90	stur	xzr, [x8, #0x34]
0000000000023e94	stur	xzr, [x8, #0x2c]
0000000000023e98	str	wzr, [x8]
0000000000023e9c	ldp	x29, x30, [sp, #0x10]
0000000000023ea0	ldp	x20, x19, [sp], #0x20
0000000000023ea4	ret
0000000000023ea8	stp	x20, x19, [sp, #-0x20]!
0000000000023eac	stp	x29, x30, [sp, #0x10]
0000000000023eb0	add	x29, sp, #0x10
0000000000023eb4	mov	x19, x1
0000000000023eb8	mov	x20, x0
0000000000023ebc	adr	x8, #0x703cd
0000000000023ec0	nop
0000000000023ec4	ldarb	w8, [x8]
0000000000023ec8	tbz	w8, #0x0, 0x23ed0
0000000000023ecc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023ed0	sub	w8, w20, #0x1
0000000000023ed4	cmp	w8, #0x3
0000000000023ed8	b.hs	0x23ee8
0000000000023edc	ldp	x29, x30, [sp, #0x10]
0000000000023ee0	ldp	x20, x19, [sp], #0x20
0000000000023ee4	ret
0000000000023ee8	adr	x1, #0x70440
0000000000023eec	nop
0000000000023ef0	mov	x0, x19
0000000000023ef4	mov	w2, #0x3
0000000000023ef8	ldp	x29, x30, [sp, #0x10]
0000000000023efc	ldp	x20, x19, [sp], #0x20
0000000000023f00	b	_AddTLSRecord
0000000000023f04	stp	x20, x19, [sp, #-0x20]!
0000000000023f08	stp	x29, x30, [sp, #0x10]
0000000000023f0c	add	x29, sp, #0x10
0000000000023f10	mov	x19, x1
0000000000023f14	mov	x20, x0
0000000000023f18	adr	x8, #0x70371
0000000000023f1c	nop
0000000000023f20	ldarb	w8, [x8]
0000000000023f24	tbz	w8, #0x0, 0x23f2c
0000000000023f28	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023f2c	sub	w8, w20, #0x1
0000000000023f30	cmp	w8, #0x3
0000000000023f34	b.hs	0x23f44
0000000000023f38	ldp	x29, x30, [sp, #0x10]
0000000000023f3c	ldp	x20, x19, [sp], #0x20
0000000000023f40	ret
0000000000023f44	adr	x1, #0x703e4
0000000000023f48	nop
0000000000023f4c	mov	x0, x19
0000000000023f50	mov	w2, #0x3
0000000000023f54	ldp	x29, x30, [sp, #0x10]
0000000000023f58	ldp	x20, x19, [sp], #0x20
0000000000023f5c	b	_AddTLSRecord
0000000000023f60	stp	x20, x19, [sp, #-0x20]!
0000000000023f64	stp	x29, x30, [sp, #0x10]
0000000000023f68	add	x29, sp, #0x10
0000000000023f6c	mov	x19, x1
0000000000023f70	mov	x20, x0
0000000000023f74	adr	x8, #0x70315
0000000000023f78	nop
0000000000023f7c	ldarb	w8, [x8]
0000000000023f80	tbz	w8, #0x0, 0x23f88
0000000000023f84	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023f88	sub	w8, w20, #0x1
0000000000023f8c	cmp	w8, #0x3
0000000000023f90	b.hs	0x23fa0
0000000000023f94	ldp	x29, x30, [sp, #0x10]
0000000000023f98	ldp	x20, x19, [sp], #0x20
0000000000023f9c	ret
0000000000023fa0	adr	x1, #0x70388
0000000000023fa4	nop
0000000000023fa8	mov	x0, x19
0000000000023fac	mov	w2, #0x3
0000000000023fb0	ldp	x29, x30, [sp, #0x10]
0000000000023fb4	ldp	x20, x19, [sp], #0x20
0000000000023fb8	b	_AddTLSRecord
0000000000023fbc	stp	x20, x19, [sp, #-0x20]!
0000000000023fc0	stp	x29, x30, [sp, #0x10]
0000000000023fc4	add	x29, sp, #0x10
0000000000023fc8	mov	x19, x1
0000000000023fcc	mov	x20, x0
0000000000023fd0	adr	x8, #0x702b9
0000000000023fd4	nop
0000000000023fd8	ldarb	w8, [x8]
0000000000023fdc	tbz	w8, #0x0, 0x23fe4
0000000000023fe0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023fe4	sub	w8, w20, #0x1
0000000000023fe8	cmp	w8, #0x2
0000000000023fec	b.lo	0x24020
0000000000023ff0	cbnz	w20, 0x24010
0000000000023ff4	adr	x1, #0x70334
0000000000023ff8	nop
0000000000023ffc	mov	x0, x19
0000000000024000	mov	w2, #0x3
0000000000024004	ldp	x29, x30, [sp, #0x10]
0000000000024008	ldp	x20, x19, [sp], #0x20
000000000002400c	b	_AddTLSRecord
0000000000024010	adr	x8, #0x70290
0000000000024014	nop
0000000000024018	stp	xzr, xzr, [x8, #0x38]
000000000002401c	str	wzr, [x8]
0000000000024020	ldp	x29, x30, [sp, #0x10]
0000000000024024	ldp	x20, x19, [sp], #0x20
0000000000024028	ret
000000000002402c	stp	x20, x19, [sp, #-0x20]!
0000000000024030	stp	x29, x30, [sp, #0x10]
0000000000024034	add	x29, sp, #0x10
0000000000024038	mov	x19, x1
000000000002403c	mov	x20, x0
0000000000024040	adr	x8, #0x70249
0000000000024044	nop
0000000000024048	ldarb	w8, [x8]
000000000002404c	tbz	w8, #0x0, 0x24054
0000000000024050	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024054	sub	w8, w20, #0x1
0000000000024058	cmp	w8, #0x3
000000000002405c	b.hs	0x2406c
0000000000024060	ldp	x29, x30, [sp, #0x10]
0000000000024064	ldp	x20, x19, [sp], #0x20
0000000000024068	ret
000000000002406c	adr	x1, #0x702bc
0000000000024070	nop
0000000000024074	mov	x0, x19
0000000000024078	mov	w2, #0x3
000000000002407c	ldp	x29, x30, [sp, #0x10]
0000000000024080	ldp	x20, x19, [sp], #0x20
0000000000024084	b	_AddTLSRecord
0000000000024088	stp	x20, x19, [sp, #-0x20]!
000000000002408c	stp	x29, x30, [sp, #0x10]
0000000000024090	add	x29, sp, #0x10
0000000000024094	mov	x19, x1
0000000000024098	mov	x20, x0
000000000002409c	adr	x8, #0x701ed
00000000000240a0	nop
00000000000240a4	ldarb	w8, [x8]
00000000000240a8	tbz	w8, #0x0, 0x240b0
00000000000240ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000240b0	sub	w8, w20, #0x1
00000000000240b4	cmp	w8, #0x2
00000000000240b8	b.lo	0x240e4
00000000000240bc	cbnz	w20, 0x240dc
00000000000240c0	adr	x1, #0x70268
00000000000240c4	nop
00000000000240c8	mov	x0, x19
00000000000240cc	mov	w2, #0x3
00000000000240d0	ldp	x29, x30, [sp, #0x10]
00000000000240d4	ldp	x20, x19, [sp], #0x20
00000000000240d8	b	_AddTLSRecord
00000000000240dc	adrp	x8, 112 ; 0x94000
00000000000240e0	str	xzr, [x8, #0x300]
00000000000240e4	ldp	x29, x30, [sp, #0x10]
00000000000240e8	ldp	x20, x19, [sp], #0x20
00000000000240ec	ret
00000000000240f0	stp	x20, x19, [sp, #-0x20]!
00000000000240f4	stp	x29, x30, [sp, #0x10]
00000000000240f8	add	x29, sp, #0x10
00000000000240fc	mov	x19, x1
0000000000024100	mov	x20, x0
0000000000024104	adr	x8, #0x70185
0000000000024108	nop
000000000002410c	ldarb	w8, [x8]
0000000000024110	tbz	w8, #0x0, 0x24118
0000000000024114	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024118	sub	w8, w20, #0x1
000000000002411c	cmp	w8, #0x3
0000000000024120	b.hs	0x24130
0000000000024124	ldp	x29, x30, [sp, #0x10]
0000000000024128	ldp	x20, x19, [sp], #0x20
000000000002412c	ret
0000000000024130	adr	x1, #0x701f8
0000000000024134	nop
0000000000024138	mov	x0, x19
000000000002413c	mov	w2, #0x3
0000000000024140	ldp	x29, x30, [sp, #0x10]
0000000000024144	ldp	x20, x19, [sp], #0x20
0000000000024148	b	_AddTLSRecord
000000000002414c	stp	x20, x19, [sp, #-0x20]!
0000000000024150	stp	x29, x30, [sp, #0x10]
0000000000024154	add	x29, sp, #0x10
0000000000024158	mov	x19, x1
000000000002415c	mov	x20, x0
0000000000024160	adr	x8, #0x70129
0000000000024164	nop
0000000000024168	ldarb	w8, [x8]
000000000002416c	tbz	w8, #0x0, 0x24174
0000000000024170	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024174	sub	w8, w20, #0x1
0000000000024178	cmp	w8, #0x3
000000000002417c	b.hs	0x2418c
0000000000024180	ldp	x29, x30, [sp, #0x10]
0000000000024184	ldp	x20, x19, [sp], #0x20
0000000000024188	ret
000000000002418c	adr	x1, #0x7019c
0000000000024190	nop
0000000000024194	mov	x0, x19
0000000000024198	mov	w2, #0x3
000000000002419c	ldp	x29, x30, [sp, #0x10]
00000000000241a0	ldp	x20, x19, [sp], #0x20
00000000000241a4	b	_AddTLSRecord
00000000000241a8	stp	x20, x19, [sp, #-0x20]!
00000000000241ac	stp	x29, x30, [sp, #0x10]
00000000000241b0	add	x29, sp, #0x10
00000000000241b4	mov	x19, x1
00000000000241b8	mov	x20, x0
00000000000241bc	adr	x8, #0x700cd
00000000000241c0	nop
00000000000241c4	ldarb	w8, [x8]
00000000000241c8	tbz	w8, #0x0, 0x241d0
00000000000241cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000241d0	sub	w8, w20, #0x1
00000000000241d4	cmp	w8, #0x2
00000000000241d8	b.lo	0x24204
00000000000241dc	cbnz	w20, 0x241fc
00000000000241e0	adr	x1, #0x70148
00000000000241e4	nop
00000000000241e8	mov	x0, x19
00000000000241ec	mov	w2, #0x3
00000000000241f0	ldp	x29, x30, [sp, #0x10]
00000000000241f4	ldp	x20, x19, [sp], #0x20
00000000000241f8	b	_AddTLSRecord
00000000000241fc	adrp	x8, 112 ; 0x94000
0000000000024200	str	xzr, [x8, #0x2e8]
0000000000024204	ldp	x29, x30, [sp, #0x10]
0000000000024208	ldp	x20, x19, [sp], #0x20
000000000002420c	ret
0000000000024210	stp	x20, x19, [sp, #-0x20]!
0000000000024214	stp	x29, x30, [sp, #0x10]
0000000000024218	add	x29, sp, #0x10
000000000002421c	mov	x19, x1
0000000000024220	mov	x20, x0
0000000000024224	adr	x8, #0x70065
0000000000024228	nop
000000000002422c	ldarb	w8, [x8]
0000000000024230	tbz	w8, #0x0, 0x24238
0000000000024234	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024238	sub	w8, w20, #0x1
000000000002423c	cmp	w8, #0x3
0000000000024240	b.hs	0x24250
0000000000024244	ldp	x29, x30, [sp, #0x10]
0000000000024248	ldp	x20, x19, [sp], #0x20
000000000002424c	ret
0000000000024250	adr	x1, #0x700d8
0000000000024254	nop
0000000000024258	mov	x0, x19
000000000002425c	mov	w2, #0x3
0000000000024260	ldp	x29, x30, [sp, #0x10]
0000000000024264	ldp	x20, x19, [sp], #0x20
0000000000024268	b	_AddTLSRecord
000000000002426c	stp	x20, x19, [sp, #-0x20]!
0000000000024270	stp	x29, x30, [sp, #0x10]
0000000000024274	add	x29, sp, #0x10
0000000000024278	mov	x19, x1
000000000002427c	mov	x20, x0
0000000000024280	adr	x8, #0x70009
0000000000024284	nop
0000000000024288	ldarb	w8, [x8]
000000000002428c	tbz	w8, #0x0, 0x24294
0000000000024290	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024294	sub	w8, w20, #0x1
0000000000024298	cmp	w8, #0x2
000000000002429c	b.lo	0x242cc
00000000000242a0	cbnz	w20, 0x242c0
00000000000242a4	adr	x1, #0x70084
00000000000242a8	nop
00000000000242ac	mov	x0, x19
00000000000242b0	mov	w2, #0x3
00000000000242b4	ldp	x29, x30, [sp, #0x10]
00000000000242b8	ldp	x20, x19, [sp], #0x20
00000000000242bc	b	_AddTLSRecord
00000000000242c0	adr	x8, #0x70030
00000000000242c4	nop
00000000000242c8	stp	xzr, xzr, [x8]
00000000000242cc	ldp	x29, x30, [sp, #0x10]
00000000000242d0	ldp	x20, x19, [sp], #0x20
00000000000242d4	ret
00000000000242d8	stp	x20, x19, [sp, #-0x20]!
00000000000242dc	stp	x29, x30, [sp, #0x10]
00000000000242e0	add	x29, sp, #0x10
00000000000242e4	mov	x19, x1
00000000000242e8	mov	x20, x0
00000000000242ec	adr	x8, #0x6ff9d
00000000000242f0	nop
00000000000242f4	ldarb	w8, [x8]
00000000000242f8	tbz	w8, #0x0, 0x24300
00000000000242fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024300	sub	w8, w20, #0x1
0000000000024304	cmp	w8, #0x3
0000000000024308	b.hs	0x24318
000000000002430c	ldp	x29, x30, [sp, #0x10]
0000000000024310	ldp	x20, x19, [sp], #0x20
0000000000024314	ret
0000000000024318	adr	x1, #0x70010
000000000002431c	nop
0000000000024320	mov	x0, x19
0000000000024324	mov	w2, #0x3
0000000000024328	ldp	x29, x30, [sp, #0x10]
000000000002432c	ldp	x20, x19, [sp], #0x20
0000000000024330	b	_AddTLSRecord
0000000000024334	stp	x20, x19, [sp, #-0x20]!
0000000000024338	stp	x29, x30, [sp, #0x10]
000000000002433c	add	x29, sp, #0x10
0000000000024340	mov	x19, x1
0000000000024344	mov	x20, x0
0000000000024348	adr	x8, #0x6ff41
000000000002434c	nop
0000000000024350	ldarb	w8, [x8]
0000000000024354	tbz	w8, #0x0, 0x2435c
0000000000024358	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002435c	sub	w8, w20, #0x1
0000000000024360	cmp	w8, #0x3
0000000000024364	b.hs	0x24374
0000000000024368	ldp	x29, x30, [sp, #0x10]
000000000002436c	ldp	x20, x19, [sp], #0x20
0000000000024370	ret
0000000000024374	adr	x1, #0x6ffb4
0000000000024378	nop
000000000002437c	mov	x0, x19
0000000000024380	mov	w2, #0x3
0000000000024384	ldp	x29, x30, [sp, #0x10]
0000000000024388	ldp	x20, x19, [sp], #0x20
000000000002438c	b	_AddTLSRecord
0000000000024390	stp	x20, x19, [sp, #-0x20]!
0000000000024394	stp	x29, x30, [sp, #0x10]
0000000000024398	add	x29, sp, #0x10
000000000002439c	mov	x19, x1
00000000000243a0	mov	x20, x0
00000000000243a4	adr	x8, #0x6fee5
00000000000243a8	nop
00000000000243ac	ldarb	w8, [x8]
00000000000243b0	tbz	w8, #0x0, 0x243b8
00000000000243b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000243b8	sub	w8, w20, #0x1
00000000000243bc	cmp	w8, #0x2
00000000000243c0	b.lo	0x243ec
00000000000243c4	cbnz	w20, 0x243e4
00000000000243c8	adr	x1, #0x6ff60
00000000000243cc	nop
00000000000243d0	mov	x0, x19
00000000000243d4	mov	w2, #0x3
00000000000243d8	ldp	x29, x30, [sp, #0x10]
00000000000243dc	ldp	x20, x19, [sp], #0x20
00000000000243e0	b	_AddTLSRecord
00000000000243e4	adrp	x8, 112 ; 0x94000
00000000000243e8	str	xzr, [x8, #0x2e8]
00000000000243ec	ldp	x29, x30, [sp, #0x10]
00000000000243f0	ldp	x20, x19, [sp], #0x20
00000000000243f4	ret
00000000000243f8	stp	x20, x19, [sp, #-0x20]!
00000000000243fc	stp	x29, x30, [sp, #0x10]
0000000000024400	add	x29, sp, #0x10
0000000000024404	mov	x19, x1
0000000000024408	mov	x20, x0
000000000002440c	adr	x8, #0x6fe7d
0000000000024410	nop
0000000000024414	ldarb	w8, [x8]
0000000000024418	tbz	w8, #0x0, 0x24420
000000000002441c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024420	sub	w8, w20, #0x1
0000000000024424	cmp	w8, #0x3
0000000000024428	b.hs	0x24438
000000000002442c	ldp	x29, x30, [sp, #0x10]
0000000000024430	ldp	x20, x19, [sp], #0x20
0000000000024434	ret
0000000000024438	adr	x1, #0x6fef0
000000000002443c	nop
0000000000024440	mov	x0, x19
0000000000024444	mov	w2, #0x3
0000000000024448	ldp	x29, x30, [sp, #0x10]
000000000002444c	ldp	x20, x19, [sp], #0x20
0000000000024450	b	_AddTLSRecord
0000000000024454	stp	x20, x19, [sp, #-0x20]!
0000000000024458	stp	x29, x30, [sp, #0x10]
000000000002445c	add	x29, sp, #0x10
0000000000024460	mov	x19, x1
0000000000024464	mov	x20, x0
0000000000024468	adr	x8, #0x6fe21
000000000002446c	nop
0000000000024470	ldarb	w8, [x8]
0000000000024474	tbz	w8, #0x0, 0x2447c
0000000000024478	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002447c	sub	w8, w20, #0x1
0000000000024480	cmp	w8, #0x2
0000000000024484	b.lo	0x244b4
0000000000024488	cbnz	w20, 0x244a8
000000000002448c	adr	x1, #0x6fe9c
0000000000024490	nop
0000000000024494	mov	x0, x19
0000000000024498	mov	w2, #0x3
000000000002449c	ldp	x29, x30, [sp, #0x10]
00000000000244a0	ldp	x20, x19, [sp], #0x20
00000000000244a4	b	_AddTLSRecord
00000000000244a8	adr	x8, #0x6fe70
00000000000244ac	nop
00000000000244b0	stp	xzr, xzr, [x8]
00000000000244b4	ldp	x29, x30, [sp, #0x10]
00000000000244b8	ldp	x20, x19, [sp], #0x20
00000000000244bc	ret
00000000000244c0	stp	x20, x19, [sp, #-0x20]!
00000000000244c4	stp	x29, x30, [sp, #0x10]
00000000000244c8	add	x29, sp, #0x10
00000000000244cc	mov	x19, x1
00000000000244d0	mov	x20, x0
00000000000244d4	adr	x8, #0x6fdb5
00000000000244d8	nop
00000000000244dc	ldarb	w8, [x8]
00000000000244e0	tbz	w8, #0x0, 0x244e8
00000000000244e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000244e8	sub	w8, w20, #0x1
00000000000244ec	cmp	w8, #0x2
00000000000244f0	b.lo	0x2451c
00000000000244f4	cbnz	w20, 0x24514
00000000000244f8	adr	x1, #0x6fe30
00000000000244fc	nop
0000000000024500	mov	x0, x19
0000000000024504	mov	w2, #0x3
0000000000024508	ldp	x29, x30, [sp, #0x10]
000000000002450c	ldp	x20, x19, [sp], #0x20
0000000000024510	b	_AddTLSRecord
0000000000024514	adrp	x8, 112 ; 0x94000
0000000000024518	str	xzr, [x8, #0x300]
000000000002451c	ldp	x29, x30, [sp, #0x10]
0000000000024520	ldp	x20, x19, [sp], #0x20
0000000000024524	ret
0000000000024528	stp	x20, x19, [sp, #-0x20]!
000000000002452c	stp	x29, x30, [sp, #0x10]
0000000000024530	add	x29, sp, #0x10
0000000000024534	mov	x19, x1
0000000000024538	mov	x20, x0
000000000002453c	adr	x8, #0x6fd4d
0000000000024540	nop
0000000000024544	ldarb	w8, [x8]
0000000000024548	tbz	w8, #0x0, 0x24550
000000000002454c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024550	sub	w8, w20, #0x1
0000000000024554	cmp	w8, #0x2
0000000000024558	b.lo	0x2458c
000000000002455c	cbnz	w20, 0x2457c
0000000000024560	adr	x1, #0x6fdc8
0000000000024564	nop
0000000000024568	mov	x0, x19
000000000002456c	mov	w2, #0x3
0000000000024570	ldp	x29, x30, [sp, #0x10]
0000000000024574	ldp	x20, x19, [sp], #0x20
0000000000024578	b	_AddTLSRecord
000000000002457c	adr	x8, #0x6fd6c
0000000000024580	nop
0000000000024584	str	xzr, [x8, #0x20]
0000000000024588	str	xzr, [x8]
000000000002458c	ldp	x29, x30, [sp, #0x10]
0000000000024590	ldp	x20, x19, [sp], #0x20
0000000000024594	ret
0000000000024598	stp	x20, x19, [sp, #-0x20]!
000000000002459c	stp	x29, x30, [sp, #0x10]
00000000000245a0	add	x29, sp, #0x10
00000000000245a4	mov	x19, x1
00000000000245a8	mov	x20, x0
00000000000245ac	adr	x8, #0x6fcdd
00000000000245b0	nop
00000000000245b4	ldarb	w8, [x8]
00000000000245b8	tbz	w8, #0x0, 0x245c0
00000000000245bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000245c0	sub	w8, w20, #0x1
00000000000245c4	cmp	w8, #0x3
00000000000245c8	b.hs	0x245d8
00000000000245cc	ldp	x29, x30, [sp, #0x10]
00000000000245d0	ldp	x20, x19, [sp], #0x20
00000000000245d4	ret
00000000000245d8	adr	x1, #0x6fd50
00000000000245dc	nop
00000000000245e0	mov	x0, x19
00000000000245e4	mov	w2, #0x3
00000000000245e8	ldp	x29, x30, [sp, #0x10]
00000000000245ec	ldp	x20, x19, [sp], #0x20
00000000000245f0	b	_AddTLSRecord
00000000000245f4	stp	x20, x19, [sp, #-0x20]!
00000000000245f8	stp	x29, x30, [sp, #0x10]
00000000000245fc	add	x29, sp, #0x10
0000000000024600	mov	x19, x1
0000000000024604	mov	x20, x0
0000000000024608	adr	x8, #0x6fc81
000000000002460c	nop
0000000000024610	ldarb	w8, [x8]
0000000000024614	tbz	w8, #0x0, 0x2461c
0000000000024618	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002461c	sub	w8, w20, #0x1
0000000000024620	cmp	w8, #0x3
0000000000024624	b.hs	0x24634
0000000000024628	ldp	x29, x30, [sp, #0x10]
000000000002462c	ldp	x20, x19, [sp], #0x20
0000000000024630	ret
0000000000024634	adr	x1, #0x6fcf4
0000000000024638	nop
000000000002463c	mov	x0, x19
0000000000024640	mov	w2, #0x3
0000000000024644	ldp	x29, x30, [sp, #0x10]
0000000000024648	ldp	x20, x19, [sp], #0x20
000000000002464c	b	_AddTLSRecord
0000000000024650	stp	x20, x19, [sp, #-0x20]!
0000000000024654	stp	x29, x30, [sp, #0x10]
0000000000024658	add	x29, sp, #0x10
000000000002465c	mov	x19, x1
0000000000024660	mov	x20, x0
0000000000024664	adr	x8, #0x6fc25
0000000000024668	nop
000000000002466c	ldarb	w8, [x8]
0000000000024670	tbz	w8, #0x0, 0x24678
0000000000024674	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024678	sub	w8, w20, #0x1
000000000002467c	cmp	w8, #0x3
0000000000024680	b.hs	0x24690
0000000000024684	ldp	x29, x30, [sp, #0x10]
0000000000024688	ldp	x20, x19, [sp], #0x20
000000000002468c	ret
0000000000024690	adr	x1, #0x6fc98
0000000000024694	nop
0000000000024698	mov	x0, x19
000000000002469c	mov	w2, #0x3
00000000000246a0	ldp	x29, x30, [sp, #0x10]
00000000000246a4	ldp	x20, x19, [sp], #0x20
00000000000246a8	b	_AddTLSRecord
00000000000246ac	stp	x20, x19, [sp, #-0x20]!
00000000000246b0	stp	x29, x30, [sp, #0x10]
00000000000246b4	add	x29, sp, #0x10
00000000000246b8	mov	x19, x1
00000000000246bc	mov	x20, x0
00000000000246c0	adr	x8, #0x6fbc9
00000000000246c4	nop
00000000000246c8	ldarb	w8, [x8]
00000000000246cc	tbz	w8, #0x0, 0x246d4
00000000000246d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000246d4	sub	w8, w20, #0x1
00000000000246d8	cmp	w8, #0x3
00000000000246dc	b.hs	0x246ec
00000000000246e0	ldp	x29, x30, [sp, #0x10]
00000000000246e4	ldp	x20, x19, [sp], #0x20
00000000000246e8	ret
00000000000246ec	adr	x1, #0x6fc3c
00000000000246f0	nop
00000000000246f4	mov	x0, x19
00000000000246f8	mov	w2, #0x3
00000000000246fc	ldp	x29, x30, [sp, #0x10]
0000000000024700	ldp	x20, x19, [sp], #0x20
0000000000024704	b	_AddTLSRecord
0000000000024708	stp	x20, x19, [sp, #-0x20]!
000000000002470c	stp	x29, x30, [sp, #0x10]
0000000000024710	add	x29, sp, #0x10
0000000000024714	mov	x19, x1
0000000000024718	mov	x20, x0
000000000002471c	adr	x8, #0x6fb6d
0000000000024720	nop
0000000000024724	ldarb	w8, [x8]
0000000000024728	tbz	w8, #0x0, 0x24730
000000000002472c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024730	sub	w8, w20, #0x1
0000000000024734	cmp	w8, #0x3
0000000000024738	b.hs	0x24748
000000000002473c	ldp	x29, x30, [sp, #0x10]
0000000000024740	ldp	x20, x19, [sp], #0x20
0000000000024744	ret
0000000000024748	adr	x1, #0x6fbe0
000000000002474c	nop
0000000000024750	mov	x0, x19
0000000000024754	mov	w2, #0x3
0000000000024758	ldp	x29, x30, [sp, #0x10]
000000000002475c	ldp	x20, x19, [sp], #0x20
0000000000024760	b	_AddTLSRecord
0000000000024764	stp	x20, x19, [sp, #-0x20]!
0000000000024768	stp	x29, x30, [sp, #0x10]
000000000002476c	add	x29, sp, #0x10
0000000000024770	mov	x19, x1
0000000000024774	mov	x20, x0
0000000000024778	adr	x8, #0x6fb11
000000000002477c	nop
0000000000024780	ldarb	w8, [x8]
0000000000024784	tbz	w8, #0x0, 0x2478c
0000000000024788	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002478c	sub	w8, w20, #0x1
0000000000024790	cmp	w8, #0x3
0000000000024794	b.hs	0x247a4
0000000000024798	ldp	x29, x30, [sp, #0x10]
000000000002479c	ldp	x20, x19, [sp], #0x20
00000000000247a0	ret
00000000000247a4	adr	x1, #0x6fb84
00000000000247a8	nop
00000000000247ac	mov	x0, x19
00000000000247b0	mov	w2, #0x3
00000000000247b4	ldp	x29, x30, [sp, #0x10]
00000000000247b8	ldp	x20, x19, [sp], #0x20
00000000000247bc	b	_AddTLSRecord
00000000000247c0	stp	x20, x19, [sp, #-0x20]!
00000000000247c4	stp	x29, x30, [sp, #0x10]
00000000000247c8	add	x29, sp, #0x10
00000000000247cc	mov	x19, x1
00000000000247d0	mov	x20, x0
00000000000247d4	adr	x8, #0x6fab5
00000000000247d8	nop
00000000000247dc	ldarb	w8, [x8]
00000000000247e0	tbz	w8, #0x0, 0x247e8
00000000000247e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000247e8	sub	w8, w20, #0x1
00000000000247ec	cmp	w8, #0x3
00000000000247f0	b.hs	0x24800
00000000000247f4	ldp	x29, x30, [sp, #0x10]
00000000000247f8	ldp	x20, x19, [sp], #0x20
00000000000247fc	ret
0000000000024800	adr	x1, #0x6fb28
0000000000024804	nop
0000000000024808	mov	x0, x19
000000000002480c	mov	w2, #0x3
0000000000024810	ldp	x29, x30, [sp, #0x10]
0000000000024814	ldp	x20, x19, [sp], #0x20
0000000000024818	b	_AddTLSRecord
000000000002481c	stp	x20, x19, [sp, #-0x20]!
0000000000024820	stp	x29, x30, [sp, #0x10]
0000000000024824	add	x29, sp, #0x10
0000000000024828	mov	x19, x1
000000000002482c	mov	x20, x0
0000000000024830	adr	x8, #0x6fa59
0000000000024834	nop
0000000000024838	ldarb	w8, [x8]
000000000002483c	tbz	w8, #0x0, 0x24844
0000000000024840	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024844	sub	w8, w20, #0x1
0000000000024848	cmp	w8, #0x3
000000000002484c	b.hs	0x2485c
0000000000024850	ldp	x29, x30, [sp, #0x10]
0000000000024854	ldp	x20, x19, [sp], #0x20
0000000000024858	ret
000000000002485c	adr	x1, #0x6facc
0000000000024860	nop
0000000000024864	mov	x0, x19
0000000000024868	mov	w2, #0x3
000000000002486c	ldp	x29, x30, [sp, #0x10]
0000000000024870	ldp	x20, x19, [sp], #0x20
0000000000024874	b	_AddTLSRecord
0000000000024878	stp	x20, x19, [sp, #-0x20]!
000000000002487c	stp	x29, x30, [sp, #0x10]
0000000000024880	add	x29, sp, #0x10
0000000000024884	mov	x19, x1
0000000000024888	mov	x20, x0
000000000002488c	adr	x8, #0x6f9fd
0000000000024890	nop
0000000000024894	ldarb	w8, [x8]
0000000000024898	tbz	w8, #0x0, 0x248a0
000000000002489c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000248a0	sub	w8, w20, #0x1
00000000000248a4	cmp	w8, #0x3
00000000000248a8	b.hs	0x248b8
00000000000248ac	ldp	x29, x30, [sp, #0x10]
00000000000248b0	ldp	x20, x19, [sp], #0x20
00000000000248b4	ret
00000000000248b8	adr	x1, #0x6fa70
00000000000248bc	nop
00000000000248c0	mov	x0, x19
00000000000248c4	mov	w2, #0x3
00000000000248c8	ldp	x29, x30, [sp, #0x10]
00000000000248cc	ldp	x20, x19, [sp], #0x20
00000000000248d0	b	_AddTLSRecord
00000000000248d4	stp	x20, x19, [sp, #-0x20]!
00000000000248d8	stp	x29, x30, [sp, #0x10]
00000000000248dc	add	x29, sp, #0x10
00000000000248e0	mov	x19, x1
00000000000248e4	mov	x20, x0
00000000000248e8	adr	x8, #0x6f9a1
00000000000248ec	nop
00000000000248f0	ldarb	w8, [x8]
00000000000248f4	tbz	w8, #0x0, 0x248fc
00000000000248f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000248fc	sub	w8, w20, #0x1
0000000000024900	cmp	w8, #0x2
0000000000024904	b.lo	0x24930
0000000000024908	cbnz	w20, 0x24928
000000000002490c	adr	x1, #0x6fa1c
0000000000024910	nop
0000000000024914	mov	x0, x19
0000000000024918	mov	w2, #0x3
000000000002491c	ldp	x29, x30, [sp, #0x10]
0000000000024920	ldp	x20, x19, [sp], #0x20
0000000000024924	b	_AddTLSRecord
0000000000024928	adrp	x8, 112 ; 0x94000
000000000002492c	str	xzr, [x8, #0x310]
0000000000024930	ldp	x29, x30, [sp, #0x10]
0000000000024934	ldp	x20, x19, [sp], #0x20
0000000000024938	ret
000000000002493c	stp	x20, x19, [sp, #-0x20]!
0000000000024940	stp	x29, x30, [sp, #0x10]
0000000000024944	add	x29, sp, #0x10
0000000000024948	mov	x19, x1
000000000002494c	mov	x20, x0
0000000000024950	adr	x8, #0x6f939
0000000000024954	nop
0000000000024958	ldarb	w8, [x8]
000000000002495c	tbz	w8, #0x0, 0x24964
0000000000024960	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024964	sub	w8, w20, #0x1
0000000000024968	cmp	w8, #0x3
000000000002496c	b.hs	0x2497c
0000000000024970	ldp	x29, x30, [sp, #0x10]
0000000000024974	ldp	x20, x19, [sp], #0x20
0000000000024978	ret
000000000002497c	adr	x1, #0x6f9ac
0000000000024980	nop
0000000000024984	mov	x0, x19
0000000000024988	mov	w2, #0x3
000000000002498c	ldp	x29, x30, [sp, #0x10]
0000000000024990	ldp	x20, x19, [sp], #0x20
0000000000024994	b	_AddTLSRecord
0000000000024998	stp	x20, x19, [sp, #-0x20]!
000000000002499c	stp	x29, x30, [sp, #0x10]
00000000000249a0	add	x29, sp, #0x10
00000000000249a4	mov	x19, x1
00000000000249a8	mov	x20, x0
00000000000249ac	adr	x8, #0x6f8dd
00000000000249b0	nop
00000000000249b4	ldarb	w8, [x8]
00000000000249b8	tbz	w8, #0x0, 0x249c0
00000000000249bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000249c0	sub	w8, w20, #0x1
00000000000249c4	cmp	w8, #0x3
00000000000249c8	b.hs	0x249d8
00000000000249cc	ldp	x29, x30, [sp, #0x10]
00000000000249d0	ldp	x20, x19, [sp], #0x20
00000000000249d4	ret
00000000000249d8	adr	x1, #0x6f950
00000000000249dc	nop
00000000000249e0	mov	x0, x19
00000000000249e4	mov	w2, #0x3
00000000000249e8	ldp	x29, x30, [sp, #0x10]
00000000000249ec	ldp	x20, x19, [sp], #0x20
00000000000249f0	b	_AddTLSRecord
00000000000249f4	stp	x20, x19, [sp, #-0x20]!
00000000000249f8	stp	x29, x30, [sp, #0x10]
00000000000249fc	add	x29, sp, #0x10
0000000000024a00	mov	x19, x1
0000000000024a04	mov	x20, x0
0000000000024a08	adr	x8, #0x6f881
0000000000024a0c	nop
0000000000024a10	ldarb	w8, [x8]
0000000000024a14	tbz	w8, #0x0, 0x24a1c
0000000000024a18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024a1c	sub	w8, w20, #0x1
0000000000024a20	cmp	w8, #0x3
0000000000024a24	b.hs	0x24a34
0000000000024a28	ldp	x29, x30, [sp, #0x10]
0000000000024a2c	ldp	x20, x19, [sp], #0x20
0000000000024a30	ret
0000000000024a34	adr	x1, #0x6f8f4
0000000000024a38	nop
0000000000024a3c	mov	x0, x19
0000000000024a40	mov	w2, #0x3
0000000000024a44	ldp	x29, x30, [sp, #0x10]
0000000000024a48	ldp	x20, x19, [sp], #0x20
0000000000024a4c	b	_AddTLSRecord
0000000000024a50	stp	x20, x19, [sp, #-0x20]!
0000000000024a54	stp	x29, x30, [sp, #0x10]
0000000000024a58	add	x29, sp, #0x10
0000000000024a5c	mov	x19, x1
0000000000024a60	mov	x20, x0
0000000000024a64	adr	x8, #0x6f825
0000000000024a68	nop
0000000000024a6c	ldarb	w8, [x8]
0000000000024a70	tbz	w8, #0x0, 0x24a78
0000000000024a74	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024a78	sub	w8, w20, #0x1
0000000000024a7c	cmp	w8, #0x2
0000000000024a80	b.lo	0x24aac
0000000000024a84	cbnz	w20, 0x24aa4
0000000000024a88	adr	x1, #0x6f8a0
0000000000024a8c	nop
0000000000024a90	mov	x0, x19
0000000000024a94	mov	w2, #0x3
0000000000024a98	ldp	x29, x30, [sp, #0x10]
0000000000024a9c	ldp	x20, x19, [sp], #0x20
0000000000024aa0	b	_AddTLSRecord
0000000000024aa4	adrp	x8, 112 ; 0x94000
0000000000024aa8	str	xzr, [x8, #0x320]
0000000000024aac	ldp	x29, x30, [sp, #0x10]
0000000000024ab0	ldp	x20, x19, [sp], #0x20
0000000000024ab4	ret
0000000000024ab8	stp	x20, x19, [sp, #-0x20]!
0000000000024abc	stp	x29, x30, [sp, #0x10]
0000000000024ac0	add	x29, sp, #0x10
0000000000024ac4	mov	x19, x1
0000000000024ac8	mov	x20, x0
0000000000024acc	adr	x8, #0x6f7bd
0000000000024ad0	nop
0000000000024ad4	ldarb	w8, [x8]
0000000000024ad8	tbz	w8, #0x0, 0x24ae0
0000000000024adc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024ae0	sub	w8, w20, #0x1
0000000000024ae4	cmp	w8, #0x2
0000000000024ae8	b.lo	0x24b14
0000000000024aec	cbnz	w20, 0x24b0c
0000000000024af0	adr	x1, #0x6f838
0000000000024af4	nop
0000000000024af8	mov	x0, x19
0000000000024afc	mov	w2, #0x3
0000000000024b00	ldp	x29, x30, [sp, #0x10]
0000000000024b04	ldp	x20, x19, [sp], #0x20
0000000000024b08	b	_AddTLSRecord
0000000000024b0c	adrp	x8, 112 ; 0x94000
0000000000024b10	str	xzr, [x8, #0x320]
0000000000024b14	ldp	x29, x30, [sp, #0x10]
0000000000024b18	ldp	x20, x19, [sp], #0x20
0000000000024b1c	ret
0000000000024b20	stp	x20, x19, [sp, #-0x20]!
0000000000024b24	stp	x29, x30, [sp, #0x10]
0000000000024b28	add	x29, sp, #0x10
0000000000024b2c	mov	x19, x1
0000000000024b30	mov	x20, x0
0000000000024b34	adr	x8, #0x6f755
0000000000024b38	nop
0000000000024b3c	ldarb	w8, [x8]
0000000000024b40	tbz	w8, #0x0, 0x24b48
0000000000024b44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024b48	sub	w8, w20, #0x1
0000000000024b4c	cmp	w8, #0x3
0000000000024b50	b.hs	0x24b60
0000000000024b54	ldp	x29, x30, [sp, #0x10]
0000000000024b58	ldp	x20, x19, [sp], #0x20
0000000000024b5c	ret
0000000000024b60	adr	x1, #0x6f7c8
0000000000024b64	nop
0000000000024b68	mov	x0, x19
0000000000024b6c	mov	w2, #0x3
0000000000024b70	ldp	x29, x30, [sp, #0x10]
0000000000024b74	ldp	x20, x19, [sp], #0x20
0000000000024b78	b	_AddTLSRecord
_blockDisposeHelper:
0000000000024b7c	sub	sp, sp, #0x50
0000000000024b80	stp	x22, x21, [sp, #0x20]
0000000000024b84	stp	x20, x19, [sp, #0x30]
0000000000024b88	stp	x29, x30, [sp, #0x40]
0000000000024b8c	add	x29, sp, #0x40
0000000000024b90	mov	x20, x0
0000000000024b94	stp	xzr, xzr, [sp, #0x8]
0000000000024b98	str	xzr, [sp, #0x18]
0000000000024b9c	bl	_Kotlin_initRuntimeIfNeeded
0000000000024ba0	adrp	x19, 86 ; 0x7a000
0000000000024ba4	add	x19, x19, #0x2c0
0000000000024ba8	ldr	x21, [x19]
0000000000024bac	mov	x0, x19
0000000000024bb0	blr	x21
0000000000024bb4	ldr	x8, [x0]
0000000000024bb8	add	x0, x8, #0x138
0000000000024bbc	ldaxr	w8, [x0]
0000000000024bc0	stlxr	w9, wzr, [x0]
0000000000024bc4	cbnz	w9, 0x24bbc
0000000000024bc8	adr	x22, #0x6f6c1
0000000000024bcc	nop
0000000000024bd0	cmp	w8, #0x1
0000000000024bd4	b.ne	0x24be4
0000000000024bd8	ldarb	w8, [x22]
0000000000024bdc	tbz	w8, #0x0, 0x24be4
0000000000024be0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000024be4	mov	x0, x19
0000000000024be8	blr	x21
0000000000024bec	ldr	x8, [x0]
0000000000024bf0	ldr	x9, [x8, #0x110]
0000000000024bf4	add	x10, sp, #0x8
0000000000024bf8	str	x10, [x8, #0x110]
0000000000024bfc	mov	x8, #0x300000000
0000000000024c00	stp	x9, x8, [sp, #0x10]
0000000000024c04	ldarb	w8, [x22]
0000000000024c08	tbz	w8, #0x0, 0x24c10
0000000000024c0c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024c10	ldr	x8, [x20, #0x20]
0000000000024c14	cbz	x8, 0x24c30
0000000000024c18	ldr	x1, [x20, #0x28]
0000000000024c1c	mov	x0, x19
0000000000024c20	blr	x21
0000000000024c24	ldr	x8, [x0]
0000000000024c28	add	x0, x8, #0x8
0000000000024c2c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000024c30	mov	x0, x19
0000000000024c34	blr	x21
0000000000024c38	ldr	x8, [x0]
0000000000024c3c	ldr	x9, [sp, #0x10]
0000000000024c40	str	x9, [x8, #0x110]
0000000000024c44	add	x8, x8, #0x138
0000000000024c48	mov	w9, #0x1
0000000000024c4c	ldaxr	wzr, [x8]
0000000000024c50	stlxr	w10, w9, [x8]
0000000000024c54	cbnz	w10, 0x24c4c
0000000000024c58	ldp	x29, x30, [sp, #0x40]
0000000000024c5c	ldp	x20, x19, [sp, #0x30]
0000000000024c60	ldp	x22, x21, [sp, #0x20]
0000000000024c64	add	sp, sp, #0x50
0000000000024c68	ret
_blockCopyHelper:
0000000000024c6c	stp	x22, x21, [sp, #-0x30]!
0000000000024c70	stp	x20, x19, [sp, #0x10]
0000000000024c74	stp	x29, x30, [sp, #0x20]
0000000000024c78	add	x29, sp, #0x20
0000000000024c7c	mov	x20, x1
0000000000024c80	mov	x19, x0
0000000000024c84	adr	x8, #0x6f605
0000000000024c88	nop
0000000000024c8c	ldarb	w8, [x8]
0000000000024c90	tbz	w8, #0x0, 0x24c98
0000000000024c94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024c98	bl	_Kotlin_initRuntimeIfNeeded
0000000000024c9c	ldr	x20, [x20, #0x20]
0000000000024ca0	adrp	x0, 86 ; 0x7a000
0000000000024ca4	add	x0, x0, #0x2c0
0000000000024ca8	ldr	x8, [x0]
0000000000024cac	blr	x8
0000000000024cb0	ldr	x21, [x0]
0000000000024cb4	mov	w0, #0x1
0000000000024cb8	mov	w1, #0x28
0000000000024cbc	bl	0x553d4 ; symbol stub for: _calloc
0000000000024cc0	ldr	x8, [x21, #0xa8]!
0000000000024cc4	sub	x9, x21, #0x8
0000000000024cc8	stp	x8, x21, [x0]
0000000000024ccc	str	x0, [x8, #0x8]
0000000000024cd0	str	x0, [x21]
0000000000024cd4	ldr	x8, [x21, #0x10]
0000000000024cd8	add	x8, x8, #0x1
0000000000024cdc	str	x8, [x21, #0x10]
0000000000024ce0	stp	x9, x0, [x0, #0x18]
0000000000024ce4	str	x20, [x0, #0x10]!
0000000000024ce8	stp	x20, x0, [x19, #0x20]
0000000000024cec	ldp	x29, x30, [sp, #0x20]
0000000000024cf0	ldp	x20, x19, [sp, #0x10]
0000000000024cf4	ldp	x22, x21, [sp], #0x30
0000000000024cf8	ret
_convertFunction1:
0000000000024cfc	sub	sp, sp, #0x80
0000000000024d00	stp	x22, x21, [sp, #0x50]
0000000000024d04	stp	x20, x19, [sp, #0x60]
0000000000024d08	stp	x29, x30, [sp, #0x70]
0000000000024d0c	add	x29, sp, #0x70
0000000000024d10	mov	x20, x0
0000000000024d14	str	xzr, [sp, #0x8]
0000000000024d18	adrp	x19, 86 ; 0x7a000
0000000000024d1c	add	x19, x19, #0x2c0
0000000000024d20	ldr	x21, [x19]
0000000000024d24	mov	x0, x19
0000000000024d28	blr	x21
0000000000024d2c	ldr	x8, [x0]
0000000000024d30	ldr	x9, [x8, #0x110]
0000000000024d34	add	x10, sp, #0x8
0000000000024d38	str	x10, [x8, #0x110]
0000000000024d3c	mov	x8, #0x300000000
0000000000024d40	stp	x9, x8, [sp, #0x10]
0000000000024d44	adr	x8, #0x6f545
0000000000024d48	nop
0000000000024d4c	ldarb	w8, [x8]
0000000000024d50	tbz	w8, #0x0, 0x24d58
0000000000024d54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024d58	cbz	x20, 0x24d94
0000000000024d5c	nop
0000000000024d60	ldr	x8, #0x3b2b8 ; literal pool symbol address: __NSConcreteStackBlock
0000000000024d64	mov	w9, #-0x3e000000
0000000000024d68	stp	x8, x9, [sp, #0x20]
0000000000024d6c	adr	x8, #0x80
0000000000024d70	nop
0000000000024d74	adr	x9, #0x52d7c
0000000000024d78	nop
0000000000024d7c	stp	x8, x9, [sp, #0x30]
0000000000024d80	stp	x20, xzr, [sp, #0x40]
0000000000024d84	add	x0, sp, #0x20
0000000000024d88	bl	0x555cc ; symbol stub for: _objc_retainBlock
0000000000024d8c	mov	x1, x0
0000000000024d90	b	0x24d98
0000000000024d94	mov	x1, #0x0
0000000000024d98	mov	x0, x19
0000000000024d9c	blr	x21
0000000000024da0	ldr	x8, [x0]
0000000000024da4	ldr	x9, [sp, #0x10]
0000000000024da8	str	x9, [x8, #0x110]
0000000000024dac	mov	x0, x1
0000000000024db0	ldp	x29, x30, [sp, #0x70]
0000000000024db4	ldp	x20, x19, [sp, #0x60]
0000000000024db8	ldp	x22, x21, [sp, #0x50]
0000000000024dbc	add	sp, sp, #0x80
0000000000024dc0	ret
0000000000024dc4	mov	x1, x0
0000000000024dc8	mov	x0, x19
0000000000024dcc	blr	x21
0000000000024dd0	ldr	x8, [x0]
0000000000024dd4	add	x9, sp, #0x8
0000000000024dd8	str	x9, [x8, #0x110]
0000000000024ddc	mov	x0, x1
0000000000024de0	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000024de4	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000024de8	b	0x24de8
_invokeBlock1:
0000000000024dec	sub	sp, sp, #0x80
0000000000024df0	stp	x26, x25, [sp, #0x30]
0000000000024df4	stp	x24, x23, [sp, #0x40]
0000000000024df8	stp	x22, x21, [sp, #0x50]
0000000000024dfc	stp	x20, x19, [sp, #0x60]
0000000000024e00	stp	x29, x30, [sp, #0x70]
0000000000024e04	add	x29, sp, #0x70
0000000000024e08	mov	x22, x1
0000000000024e0c	mov	x21, x0
0000000000024e10	str	xzr, [sp, #0x20]
0000000000024e14	movi.16b	v0, #0x0
0000000000024e18	stp	q0, q0, [sp]
0000000000024e1c	mov	x8, sp
0000000000024e20	add	x20, x8, #0x20
0000000000024e24	add	x23, x8, #0x18
0000000000024e28	bl	_Kotlin_initRuntimeIfNeeded
0000000000024e2c	adrp	x19, 86 ; 0x7a000
0000000000024e30	add	x19, x19, #0x2c0
0000000000024e34	ldr	x24, [x19]
0000000000024e38	mov	x0, x19
0000000000024e3c	blr	x24
0000000000024e40	ldr	x8, [x0]
0000000000024e44	add	x0, x8, #0x138
0000000000024e48	ldaxr	w8, [x0]
0000000000024e4c	stlxr	w9, wzr, [x0]
0000000000024e50	cbnz	w9, 0x24e48
0000000000024e54	adr	x25, #0x6f435
0000000000024e58	nop
0000000000024e5c	cmp	w8, #0x1
0000000000024e60	b.ne	0x24e70
0000000000024e64	ldarb	w8, [x25]
0000000000024e68	tbz	w8, #0x0, 0x24e70
0000000000024e6c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000024e70	mov	x0, x19
0000000000024e74	blr	x24
0000000000024e78	ldr	x8, [x0]
0000000000024e7c	ldr	x9, [x8, #0x110]
0000000000024e80	mov	x10, sp
0000000000024e84	str	x10, [x8, #0x110]
0000000000024e88	mov	x8, #0x500000000
0000000000024e8c	stp	x9, x8, [sp, #0x8]
0000000000024e90	ldarb	w8, [x25]
0000000000024e94	tbz	w8, #0x0, 0x24e9c
0000000000024e98	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024e9c	bl	_Kotlin_initRuntimeIfNeeded
0000000000024ea0	ldr	x21, [x21, #0x20]
0000000000024ea4	cbz	x22, 0x24ee4
0000000000024ea8	nop
0000000000024eac	ldr	x1, #0x6f62c
0000000000024eb0	mov	x0, x22
0000000000024eb4	mov	x2, x23
0000000000024eb8	bl	0x55584 ; Objc message: -[x0 writeData:]
0000000000024ebc	mov	x1, x0
0000000000024ec0	ldr	x8, [x21]
0000000000024ec4	and	x8, x8, #0xfffffffffffffffc
0000000000024ec8	ldr	x8, [x8]
0000000000024ecc	ldr	w9, [x8, #0x3c]
0000000000024ed0	ldr	x8, [x8, #0x40]
0000000000024ed4	tbnz	w9, #0x1f, 0x24f04
0000000000024ed8	mov	w10, #0x2c
0000000000024edc	and	x9, x9, x10
0000000000024ee0	b	0x24f88
0000000000024ee4	mov	x1, #0x0
0000000000024ee8	str	xzr, [sp, #0x18]
0000000000024eec	ldr	x8, [x21]
0000000000024ef0	and	x8, x8, #0xfffffffffffffffc
0000000000024ef4	ldr	x8, [x8]
0000000000024ef8	ldr	w9, [x8, #0x3c]
0000000000024efc	ldr	x8, [x8, #0x40]
0000000000024f00	tbz	w9, #0x1f, 0x24ed8
0000000000024f04	neg	w10, w9
0000000000024f08	mvn	w9, w9
0000000000024f0c	cmp	w10, #0x9
0000000000024f10	b.ge	0x24f48
0000000000024f14	cmp	w10, #0x2
0000000000024f18	b.lt	0x24f7c
0000000000024f1c	mov	x10, #0x0
0000000000024f20	mov	x11, x8
0000000000024f24	ldr	w12, [x11]
0000000000024f28	cmp	w12, #0x2b
0000000000024f2c	b.gt	0x24f84
0000000000024f30	add	x10, x10, #0x1
0000000000024f34	add	x11, x11, #0x10
0000000000024f38	cmp	x9, x10
0000000000024f3c	b.ne	0x24f24
0000000000024f40	mov	x10, x9
0000000000024f44	b	0x24f84
0000000000024f48	mov	w10, #0x0
0000000000024f4c	add	w11, w9, w10
0000000000024f50	cmp	w11, #0x0
0000000000024f54	cinc	w11, w11, lt
0000000000024f58	asr	w11, w11, #1
0000000000024f5c	sbfiz	x12, x11, #4, #32
0000000000024f60	ldr	w12, [x8, x12]
0000000000024f64	cmp	w12, #0x2c
0000000000024f68	csinc	w10, w10, w11, ge
0000000000024f6c	csel	w9, w9, w11, lt
0000000000024f70	cmp	w10, w9
0000000000024f74	b.lt	0x24f4c
0000000000024f78	b	0x24f84
0000000000024f7c	mov	w10, #0x0
0000000000024f80	b	0x24f84
0000000000024f84	sxtw	x9, w10
0000000000024f88	add	x8, x8, x9, lsl #4
0000000000024f8c	ldr	x8, [x8, #0x8]
0000000000024f90	ldr	x8, [x8]
0000000000024f94	mov	x0, x21
0000000000024f98	mov	x2, x20
0000000000024f9c	blr	x8
0000000000024fa0	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000024fa4	mov	x1, x0
0000000000024fa8	mov	x0, x19
0000000000024fac	blr	x24
0000000000024fb0	ldr	x8, [x0]
0000000000024fb4	ldr	x9, [sp, #0x8]
0000000000024fb8	str	x9, [x8, #0x110]
0000000000024fbc	add	x8, x8, #0x138
0000000000024fc0	mov	w9, #0x1
0000000000024fc4	ldaxr	wzr, [x8]
0000000000024fc8	stlxr	w10, w9, [x8]
0000000000024fcc	cbnz	w10, 0x24fc4
0000000000024fd0	mov	x0, x1
0000000000024fd4	ldp	x29, x30, [sp, #0x70]
0000000000024fd8	ldp	x20, x19, [sp, #0x60]
0000000000024fdc	ldp	x22, x21, [sp, #0x50]
0000000000024fe0	ldp	x24, x23, [sp, #0x40]
0000000000024fe4	ldp	x26, x25, [sp, #0x30]
0000000000024fe8	add	sp, sp, #0x80
0000000000024fec	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000024ff0	mov	x1, x0
0000000000024ff4	mov	x0, x19
0000000000024ff8	blr	x24
0000000000024ffc	ldr	x8, [x0]
0000000000025000	mov	x9, sp
0000000000025004	str	x9, [x8, #0x110]
0000000000025008	mov	x0, x1
000000000002500c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000025010	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000025014	b	0x25014
_convertFunction0:
0000000000025018	sub	sp, sp, #0x80
000000000002501c	stp	x22, x21, [sp, #0x50]
0000000000025020	stp	x20, x19, [sp, #0x60]
0000000000025024	stp	x29, x30, [sp, #0x70]
0000000000025028	add	x29, sp, #0x70
000000000002502c	mov	x20, x0
0000000000025030	str	xzr, [sp, #0x8]
0000000000025034	adrp	x19, 85 ; 0x7a000
0000000000025038	add	x19, x19, #0x2c0
000000000002503c	ldr	x21, [x19]
0000000000025040	mov	x0, x19
0000000000025044	blr	x21
0000000000025048	ldr	x8, [x0]
000000000002504c	ldr	x9, [x8, #0x110]
0000000000025050	add	x10, sp, #0x8
0000000000025054	str	x10, [x8, #0x110]
0000000000025058	mov	x8, #0x300000000
000000000002505c	stp	x9, x8, [sp, #0x10]
0000000000025060	adr	x8, #0x6f229
0000000000025064	nop
0000000000025068	ldarb	w8, [x8]
000000000002506c	tbz	w8, #0x0, 0x25074
0000000000025070	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025074	cbz	x20, 0x250b0
0000000000025078	nop
000000000002507c	ldr	x8, #0x3af9c ; literal pool symbol address: __NSConcreteStackBlock
0000000000025080	mov	w9, #-0x3e000000
0000000000025084	stp	x8, x9, [sp, #0x20]
0000000000025088	adr	x8, #0x80
000000000002508c	nop
0000000000025090	adr	x9, #0x52a90
0000000000025094	nop
0000000000025098	stp	x8, x9, [sp, #0x30]
000000000002509c	stp	x20, xzr, [sp, #0x40]
00000000000250a0	add	x0, sp, #0x20
00000000000250a4	bl	0x555cc ; symbol stub for: _objc_retainBlock
00000000000250a8	mov	x1, x0
00000000000250ac	b	0x250b4
00000000000250b0	mov	x1, #0x0
00000000000250b4	mov	x0, x19
00000000000250b8	blr	x21
00000000000250bc	ldr	x8, [x0]
00000000000250c0	ldr	x9, [sp, #0x10]
00000000000250c4	str	x9, [x8, #0x110]
00000000000250c8	mov	x0, x1
00000000000250cc	ldp	x29, x30, [sp, #0x70]
00000000000250d0	ldp	x20, x19, [sp, #0x60]
00000000000250d4	ldp	x22, x21, [sp, #0x50]
00000000000250d8	add	sp, sp, #0x80
00000000000250dc	ret
00000000000250e0	mov	x1, x0
00000000000250e4	mov	x0, x19
00000000000250e8	blr	x21
00000000000250ec	ldr	x8, [x0]
00000000000250f0	add	x9, sp, #0x8
00000000000250f4	str	x9, [x8, #0x110]
00000000000250f8	mov	x0, x1
00000000000250fc	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000025100	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000025104	b	0x25104
_invokeBlock0:
0000000000025108	sub	sp, sp, #0x60
000000000002510c	stp	x24, x23, [sp, #0x20]
0000000000025110	stp	x22, x21, [sp, #0x30]
0000000000025114	stp	x20, x19, [sp, #0x40]
0000000000025118	stp	x29, x30, [sp, #0x50]
000000000002511c	add	x29, sp, #0x50
0000000000025120	mov	x21, x0
0000000000025124	movi.16b	v0, #0x0
0000000000025128	stp	q0, q0, [sp]
000000000002512c	mov	x8, sp
0000000000025130	add	x20, x8, #0x18
0000000000025134	bl	_Kotlin_initRuntimeIfNeeded
0000000000025138	adrp	x19, 85 ; 0x7a000
000000000002513c	add	x19, x19, #0x2c0
0000000000025140	ldr	x22, [x19]
0000000000025144	mov	x0, x19
0000000000025148	blr	x22
000000000002514c	ldr	x8, [x0]
0000000000025150	add	x0, x8, #0x138
0000000000025154	ldaxr	w8, [x0]
0000000000025158	stlxr	w9, wzr, [x0]
000000000002515c	cbnz	w9, 0x25154
0000000000025160	adr	x23, #0x6f129
0000000000025164	nop
0000000000025168	cmp	w8, #0x1
000000000002516c	b.ne	0x2517c
0000000000025170	ldarb	w8, [x23]
0000000000025174	tbz	w8, #0x0, 0x2517c
0000000000025178	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002517c	mov	x0, x19
0000000000025180	blr	x22
0000000000025184	ldr	x8, [x0]
0000000000025188	ldr	x9, [x8, #0x110]
000000000002518c	mov	x10, sp
0000000000025190	str	x10, [x8, #0x110]
0000000000025194	mov	x8, #0x400000000
0000000000025198	stp	x9, x8, [sp, #0x8]
000000000002519c	ldarb	w8, [x23]
00000000000251a0	tbz	w8, #0x0, 0x251a8
00000000000251a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000251a8	bl	_Kotlin_initRuntimeIfNeeded
00000000000251ac	ldr	x0, [x21, #0x20]
00000000000251b0	ldr	x8, [x0]
00000000000251b4	and	x8, x8, #0xfffffffffffffffc
00000000000251b8	ldr	x8, [x8]
00000000000251bc	ldr	w9, [x8, #0x3c]
00000000000251c0	ldr	x8, [x8, #0x40]
00000000000251c4	tbnz	w9, #0x1f, 0x251d4
00000000000251c8	mov	w10, #0x59
00000000000251cc	and	x9, x9, x10
00000000000251d0	b	0x25258
00000000000251d4	neg	w10, w9
00000000000251d8	mvn	w9, w9
00000000000251dc	cmp	w10, #0x9
00000000000251e0	b.ge	0x25218
00000000000251e4	cmp	w10, #0x2
00000000000251e8	b.lt	0x2524c
00000000000251ec	mov	x10, #0x0
00000000000251f0	mov	x11, x8
00000000000251f4	ldr	w12, [x11]
00000000000251f8	cmp	w12, #0x58
00000000000251fc	b.gt	0x25254
0000000000025200	add	x10, x10, #0x1
0000000000025204	add	x11, x11, #0x10
0000000000025208	cmp	x9, x10
000000000002520c	b.ne	0x251f4
0000000000025210	mov	x10, x9
0000000000025214	b	0x25254
0000000000025218	mov	w10, #0x0
000000000002521c	add	w11, w9, w10
0000000000025220	cmp	w11, #0x0
0000000000025224	cinc	w11, w11, lt
0000000000025228	asr	w11, w11, #1
000000000002522c	sbfiz	x12, x11, #4, #32
0000000000025230	ldr	w12, [x8, x12]
0000000000025234	cmp	w12, #0x59
0000000000025238	csinc	w10, w10, w11, ge
000000000002523c	csel	w9, w9, w11, lt
0000000000025240	cmp	w10, w9
0000000000025244	b.lt	0x2521c
0000000000025248	b	0x25254
000000000002524c	mov	w10, #0x0
0000000000025250	b	0x25254
0000000000025254	sxtw	x9, w10
0000000000025258	add	x8, x8, x9, lsl #4
000000000002525c	ldr	x8, [x8, #0x8]
0000000000025260	ldr	x8, [x8]
0000000000025264	mov	x1, x20
0000000000025268	blr	x8
000000000002526c	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000025270	mov	x1, x0
0000000000025274	mov	x0, x19
0000000000025278	blr	x22
000000000002527c	ldr	x8, [x0]
0000000000025280	ldr	x9, [sp, #0x8]
0000000000025284	str	x9, [x8, #0x110]
0000000000025288	add	x8, x8, #0x138
000000000002528c	mov	w9, #0x1
0000000000025290	ldaxr	wzr, [x8]
0000000000025294	stlxr	w10, w9, [x8]
0000000000025298	cbnz	w10, 0x25290
000000000002529c	mov	x0, x1
00000000000252a0	ldp	x29, x30, [sp, #0x50]
00000000000252a4	ldp	x20, x19, [sp, #0x40]
00000000000252a8	ldp	x22, x21, [sp, #0x30]
00000000000252ac	ldp	x24, x23, [sp, #0x20]
00000000000252b0	add	sp, sp, #0x60
00000000000252b4	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
00000000000252b8	mov	x1, x0
00000000000252bc	mov	x0, x19
00000000000252c0	blr	x22
00000000000252c4	ldr	x8, [x0]
00000000000252c8	mov	x9, sp
00000000000252cc	str	x9, [x8, #0x110]
00000000000252d0	mov	x0, x1
00000000000252d4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
00000000000252d8	bl	0x552fc ; symbol stub for: __ZSt9terminatev
00000000000252dc	b	0x252dc
_convertFunction2:
00000000000252e0	sub	sp, sp, #0x80
00000000000252e4	stp	x22, x21, [sp, #0x50]
00000000000252e8	stp	x20, x19, [sp, #0x60]
00000000000252ec	stp	x29, x30, [sp, #0x70]
00000000000252f0	add	x29, sp, #0x70
00000000000252f4	mov	x20, x0
00000000000252f8	str	xzr, [sp, #0x8]
00000000000252fc	adrp	x19, 85 ; 0x7a000
0000000000025300	add	x19, x19, #0x2c0
0000000000025304	ldr	x21, [x19]
0000000000025308	mov	x0, x19
000000000002530c	blr	x21
0000000000025310	ldr	x8, [x0]
0000000000025314	ldr	x9, [x8, #0x110]
0000000000025318	add	x10, sp, #0x8
000000000002531c	str	x10, [x8, #0x110]
0000000000025320	mov	x8, #0x300000000
0000000000025324	stp	x9, x8, [sp, #0x10]
0000000000025328	adr	x8, #0x6ef61
000000000002532c	nop
0000000000025330	ldarb	w8, [x8]
0000000000025334	tbz	w8, #0x0, 0x2533c
0000000000025338	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002533c	cbz	x20, 0x25378
0000000000025340	nop
0000000000025344	ldr	x8, #0x3acd4 ; literal pool symbol address: __NSConcreteStackBlock
0000000000025348	mov	w9, #-0x3e000000
000000000002534c	stp	x8, x9, [sp, #0x20]
0000000000025350	adr	x8, #0x80
0000000000025354	nop
0000000000025358	adr	x9, #0x527f8
000000000002535c	nop
0000000000025360	stp	x8, x9, [sp, #0x30]
0000000000025364	stp	x20, xzr, [sp, #0x40]
0000000000025368	add	x0, sp, #0x20
000000000002536c	bl	0x555cc ; symbol stub for: _objc_retainBlock
0000000000025370	mov	x1, x0
0000000000025374	b	0x2537c
0000000000025378	mov	x1, #0x0
000000000002537c	mov	x0, x19
0000000000025380	blr	x21
0000000000025384	ldr	x8, [x0]
0000000000025388	ldr	x9, [sp, #0x10]
000000000002538c	str	x9, [x8, #0x110]
0000000000025390	mov	x0, x1
0000000000025394	ldp	x29, x30, [sp, #0x70]
0000000000025398	ldp	x20, x19, [sp, #0x60]
000000000002539c	ldp	x22, x21, [sp, #0x50]
00000000000253a0	add	sp, sp, #0x80
00000000000253a4	ret
00000000000253a8	mov	x1, x0
00000000000253ac	mov	x0, x19
00000000000253b0	blr	x21
00000000000253b4	ldr	x8, [x0]
00000000000253b8	add	x9, sp, #0x8
00000000000253bc	str	x9, [x8, #0x110]
00000000000253c0	mov	x0, x1
00000000000253c4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
00000000000253c8	bl	0x552fc ; symbol stub for: __ZSt9terminatev
00000000000253cc	b	0x253cc
_invokeBlock2:
00000000000253d0	sub	sp, sp, #0x90
00000000000253d4	stp	x28, x27, [sp, #0x30]
00000000000253d8	stp	x26, x25, [sp, #0x40]
00000000000253dc	stp	x24, x23, [sp, #0x50]
00000000000253e0	stp	x22, x21, [sp, #0x60]
00000000000253e4	stp	x20, x19, [sp, #0x70]
00000000000253e8	stp	x29, x30, [sp, #0x80]
00000000000253ec	add	x29, sp, #0x80
00000000000253f0	mov	x23, x2
00000000000253f4	mov	x22, x1
00000000000253f8	mov	x21, x0
00000000000253fc	movi.16b	v0, #0x0
0000000000025400	stp	q0, q0, [sp, #0x10]
0000000000025404	str	q0, [sp]
0000000000025408	mov	x8, sp
000000000002540c	add	x24, x8, #0x20
0000000000025410	add	x25, x8, #0x18
0000000000025414	add	x20, x8, #0x28
0000000000025418	bl	_Kotlin_initRuntimeIfNeeded
000000000002541c	adrp	x19, 85 ; 0x7a000
0000000000025420	add	x19, x19, #0x2c0
0000000000025424	ldr	x26, [x19]
0000000000025428	mov	x0, x19
000000000002542c	blr	x26
0000000000025430	ldr	x8, [x0]
0000000000025434	add	x0, x8, #0x138
0000000000025438	ldaxr	w8, [x0]
000000000002543c	stlxr	w9, wzr, [x0]
0000000000025440	cbnz	w9, 0x25438
0000000000025444	adr	x27, #0x6ee45
0000000000025448	nop
000000000002544c	cmp	w8, #0x1
0000000000025450	b.ne	0x25460
0000000000025454	ldarb	w8, [x27]
0000000000025458	tbz	w8, #0x0, 0x25460
000000000002545c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025460	mov	x0, x19
0000000000025464	blr	x26
0000000000025468	ldr	x8, [x0]
000000000002546c	ldr	x9, [x8, #0x110]
0000000000025470	mov	x10, sp
0000000000025474	str	x10, [x8, #0x110]
0000000000025478	mov	x8, #0x600000000
000000000002547c	stp	x9, x8, [sp, #0x8]
0000000000025480	ldarb	w8, [x27]
0000000000025484	tbz	w8, #0x0, 0x2548c
0000000000025488	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002548c	bl	_Kotlin_initRuntimeIfNeeded
0000000000025490	ldr	x21, [x21, #0x20]
0000000000025494	adrp	x27, 111 ; 0x94000
0000000000025498	cbz	x22, 0x254ec
000000000002549c	ldr	x1, [x27, #0x4d8]
00000000000254a0	mov	x0, x22
00000000000254a4	mov	x2, x25
00000000000254a8	bl	0x55584 ; Objc message: -[x0 writeData:]
00000000000254ac	mov	x22, x0
00000000000254b0	cbz	x23, 0x254f4
00000000000254b4	ldr	x1, [x27, #0x4d8]
00000000000254b8	mov	x0, x23
00000000000254bc	mov	x2, x24
00000000000254c0	bl	0x55584 ; Objc message: -[x0 writeData:]
00000000000254c4	mov	x2, x0
00000000000254c8	ldr	x8, [x21]
00000000000254cc	and	x8, x8, #0xfffffffffffffffc
00000000000254d0	ldr	x8, [x8]
00000000000254d4	ldr	w9, [x8, #0x3c]
00000000000254d8	ldr	x8, [x8, #0x40]
00000000000254dc	tbnz	w9, #0x1f, 0x25514
00000000000254e0	mov	w10, #0x61
00000000000254e4	and	x9, x9, x10
00000000000254e8	b	0x25598
00000000000254ec	str	xzr, [sp, #0x18]
00000000000254f0	cbnz	x23, 0x254b4
00000000000254f4	mov	x2, #0x0
00000000000254f8	str	xzr, [sp, #0x20]
00000000000254fc	ldr	x8, [x21]
0000000000025500	and	x8, x8, #0xfffffffffffffffc
0000000000025504	ldr	x8, [x8]
0000000000025508	ldr	w9, [x8, #0x3c]
000000000002550c	ldr	x8, [x8, #0x40]
0000000000025510	tbz	w9, #0x1f, 0x254e0
0000000000025514	neg	w10, w9
0000000000025518	mvn	w9, w9
000000000002551c	cmp	w10, #0x9
0000000000025520	b.ge	0x25558
0000000000025524	cmp	w10, #0x2
0000000000025528	b.lt	0x2558c
000000000002552c	mov	x10, #0x0
0000000000025530	mov	x11, x8
0000000000025534	ldr	w12, [x11]
0000000000025538	cmp	w12, #0x60
000000000002553c	b.gt	0x25594
0000000000025540	add	x10, x10, #0x1
0000000000025544	add	x11, x11, #0x10
0000000000025548	cmp	x9, x10
000000000002554c	b.ne	0x25534
0000000000025550	mov	x10, x9
0000000000025554	b	0x25594
0000000000025558	mov	w10, #0x0
000000000002555c	add	w11, w9, w10
0000000000025560	cmp	w11, #0x0
0000000000025564	cinc	w11, w11, lt
0000000000025568	asr	w11, w11, #1
000000000002556c	sbfiz	x12, x11, #4, #32
0000000000025570	ldr	w12, [x8, x12]
0000000000025574	cmp	w12, #0x61
0000000000025578	csinc	w10, w10, w11, ge
000000000002557c	csel	w9, w9, w11, lt
0000000000025580	cmp	w10, w9
0000000000025584	b.lt	0x2555c
0000000000025588	b	0x25594
000000000002558c	mov	w10, #0x0
0000000000025590	b	0x25594
0000000000025594	sxtw	x9, w10
0000000000025598	add	x8, x8, x9, lsl #4
000000000002559c	ldr	x8, [x8, #0x8]
00000000000255a0	ldr	x8, [x8]
00000000000255a4	mov	x0, x21
00000000000255a8	mov	x1, x22
00000000000255ac	mov	x3, x20
00000000000255b0	blr	x8
00000000000255b4	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000255b8	mov	x1, x0
00000000000255bc	mov	x0, x19
00000000000255c0	blr	x26
00000000000255c4	ldr	x8, [x0]
00000000000255c8	ldr	x9, [sp, #0x8]
00000000000255cc	str	x9, [x8, #0x110]
00000000000255d0	add	x8, x8, #0x138
00000000000255d4	mov	w9, #0x1
00000000000255d8	ldaxr	wzr, [x8]
00000000000255dc	stlxr	w10, w9, [x8]
00000000000255e0	cbnz	w10, 0x255d8
00000000000255e4	mov	x0, x1
00000000000255e8	ldp	x29, x30, [sp, #0x80]
00000000000255ec	ldp	x20, x19, [sp, #0x70]
00000000000255f0	ldp	x22, x21, [sp, #0x60]
00000000000255f4	ldp	x24, x23, [sp, #0x50]
00000000000255f8	ldp	x26, x25, [sp, #0x40]
00000000000255fc	ldp	x28, x27, [sp, #0x30]
0000000000025600	add	sp, sp, #0x90
0000000000025604	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000025608	mov	x1, x0
000000000002560c	mov	x0, x19
0000000000025610	blr	x26
0000000000025614	ldr	x8, [x0]
0000000000025618	mov	x9, sp
000000000002561c	str	x9, [x8, #0x110]
0000000000025620	mov	x0, x1
0000000000025624	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000025628	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002562c	b	0x2562c
_convertFunction3:
0000000000025630	sub	sp, sp, #0x80
0000000000025634	stp	x22, x21, [sp, #0x50]
0000000000025638	stp	x20, x19, [sp, #0x60]
000000000002563c	stp	x29, x30, [sp, #0x70]
0000000000025640	add	x29, sp, #0x70
0000000000025644	mov	x20, x0
0000000000025648	str	xzr, [sp, #0x8]
000000000002564c	adrp	x19, 85 ; 0x7a000
0000000000025650	add	x19, x19, #0x2c0
0000000000025654	ldr	x21, [x19]
0000000000025658	mov	x0, x19
000000000002565c	blr	x21
0000000000025660	ldr	x8, [x0]
0000000000025664	ldr	x9, [x8, #0x110]
0000000000025668	add	x10, sp, #0x8
000000000002566c	str	x10, [x8, #0x110]
0000000000025670	mov	x8, #0x300000000
0000000000025674	stp	x9, x8, [sp, #0x10]
0000000000025678	adr	x8, #0x6ec11
000000000002567c	nop
0000000000025680	ldarb	w8, [x8]
0000000000025684	tbz	w8, #0x0, 0x2568c
0000000000025688	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002568c	cbz	x20, 0x256c8
0000000000025690	nop
0000000000025694	ldr	x8, #0x3a984 ; literal pool symbol address: __NSConcreteStackBlock
0000000000025698	mov	w9, #-0x3e000000
000000000002569c	stp	x8, x9, [sp, #0x20]
00000000000256a0	adr	x8, #0x80
00000000000256a4	nop
00000000000256a8	adr	x9, #0x524d8
00000000000256ac	nop
00000000000256b0	stp	x8, x9, [sp, #0x30]
00000000000256b4	stp	x20, xzr, [sp, #0x40]
00000000000256b8	add	x0, sp, #0x20
00000000000256bc	bl	0x555cc ; symbol stub for: _objc_retainBlock
00000000000256c0	mov	x1, x0
00000000000256c4	b	0x256cc
00000000000256c8	mov	x1, #0x0
00000000000256cc	mov	x0, x19
00000000000256d0	blr	x21
00000000000256d4	ldr	x8, [x0]
00000000000256d8	ldr	x9, [sp, #0x10]
00000000000256dc	str	x9, [x8, #0x110]
00000000000256e0	mov	x0, x1
00000000000256e4	ldp	x29, x30, [sp, #0x70]
00000000000256e8	ldp	x20, x19, [sp, #0x60]
00000000000256ec	ldp	x22, x21, [sp, #0x50]
00000000000256f0	add	sp, sp, #0x80
00000000000256f4	ret
00000000000256f8	mov	x1, x0
00000000000256fc	mov	x0, x19
0000000000025700	blr	x21
0000000000025704	ldr	x8, [x0]
0000000000025708	add	x9, sp, #0x8
000000000002570c	str	x9, [x8, #0x110]
0000000000025710	mov	x0, x1
0000000000025714	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000025718	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002571c	b	0x2571c
_invokeBlock3:
0000000000025720	sub	sp, sp, #0xb0
0000000000025724	stp	x28, x27, [sp, #0x50]
0000000000025728	stp	x26, x25, [sp, #0x60]
000000000002572c	stp	x24, x23, [sp, #0x70]
0000000000025730	stp	x22, x21, [sp, #0x80]
0000000000025734	stp	x20, x19, [sp, #0x90]
0000000000025738	stp	x29, x30, [sp, #0xa0]
000000000002573c	add	x29, sp, #0xa0
0000000000025740	mov	x24, x3
0000000000025744	mov	x23, x2
0000000000025748	mov	x22, x1
000000000002574c	mov	x21, x0
0000000000025750	str	xzr, [sp, #0x40]
0000000000025754	movi.16b	v0, #0x0
0000000000025758	stp	q0, q0, [sp, #0x20]
000000000002575c	add	x8, sp, #0x10
0000000000025760	str	q0, [sp, #0x10]
0000000000025764	add	x26, x8, #0x20
0000000000025768	add	x9, x8, #0x30
000000000002576c	str	x9, [sp, #0x8]
0000000000025770	add	x27, x8, #0x18
0000000000025774	add	x25, x8, #0x28
0000000000025778	bl	_Kotlin_initRuntimeIfNeeded
000000000002577c	adrp	x19, 85 ; 0x7a000
0000000000025780	add	x19, x19, #0x2c0
0000000000025784	ldr	x28, [x19]
0000000000025788	mov	x0, x19
000000000002578c	blr	x28
0000000000025790	ldr	x8, [x0]
0000000000025794	add	x0, x8, #0x138
0000000000025798	ldaxr	w8, [x0]
000000000002579c	stlxr	w9, wzr, [x0]
00000000000257a0	cbnz	w9, 0x25798
00000000000257a4	adr	x20, #0x6eae5
00000000000257a8	nop
00000000000257ac	cmp	w8, #0x1
00000000000257b0	b.ne	0x257c0
00000000000257b4	ldarb	w8, [x20]
00000000000257b8	tbz	w8, #0x0, 0x257c0
00000000000257bc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000257c0	mov	x0, x19
00000000000257c4	blr	x28
00000000000257c8	ldr	x8, [x0]
00000000000257cc	ldr	x9, [x8, #0x110]
00000000000257d0	add	x10, sp, #0x10
00000000000257d4	str	x10, [x8, #0x110]
00000000000257d8	mov	x8, #0x700000000
00000000000257dc	stp	x9, x8, [sp, #0x18]
00000000000257e0	ldarb	w8, [x20]
00000000000257e4	tbz	w8, #0x0, 0x257ec
00000000000257e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000257ec	bl	_Kotlin_initRuntimeIfNeeded
00000000000257f0	ldr	x21, [x21, #0x20]
00000000000257f4	adrp	x20, 111 ; 0x94000
00000000000257f8	cbz	x22, 0x25864
00000000000257fc	ldr	x1, [x20, #0x4d8]
0000000000025800	mov	x0, x22
0000000000025804	mov	x2, x27
0000000000025808	bl	0x55584 ; Objc message: -[x0 writeData:]
000000000002580c	mov	x22, x0
0000000000025810	cbz	x23, 0x2586c
0000000000025814	ldr	x1, [x20, #0x4d8]
0000000000025818	mov	x0, x23
000000000002581c	mov	x2, x26
0000000000025820	bl	0x55584 ; Objc message: -[x0 writeData:]
0000000000025824	mov	x23, x0
0000000000025828	cbz	x24, 0x25874
000000000002582c	ldr	x1, [x20, #0x4d8]
0000000000025830	mov	x0, x24
0000000000025834	mov	x2, x25
0000000000025838	bl	0x55584 ; Objc message: -[x0 writeData:]
000000000002583c	mov	x3, x0
0000000000025840	ldr	x8, [x21]
0000000000025844	and	x8, x8, #0xfffffffffffffffc
0000000000025848	ldr	x8, [x8]
000000000002584c	ldr	w9, [x8, #0x3c]
0000000000025850	ldr	x8, [x8, #0x40]
0000000000025854	tbnz	w9, #0x1f, 0x25894
0000000000025858	mov	w10, #0x158
000000000002585c	and	x9, x9, x10
0000000000025860	b	0x25918
0000000000025864	str	xzr, [sp, #0x28]
0000000000025868	cbnz	x23, 0x25814
000000000002586c	str	xzr, [sp, #0x30]
0000000000025870	cbnz	x24, 0x2582c
0000000000025874	mov	x3, #0x0
0000000000025878	str	xzr, [sp, #0x38]
000000000002587c	ldr	x8, [x21]
0000000000025880	and	x8, x8, #0xfffffffffffffffc
0000000000025884	ldr	x8, [x8]
0000000000025888	ldr	w9, [x8, #0x3c]
000000000002588c	ldr	x8, [x8, #0x40]
0000000000025890	tbz	w9, #0x1f, 0x25858
0000000000025894	neg	w10, w9
0000000000025898	mvn	w9, w9
000000000002589c	cmp	w10, #0x9
00000000000258a0	b.ge	0x258d8
00000000000258a4	cmp	w10, #0x2
00000000000258a8	b.lt	0x2590c
00000000000258ac	mov	x10, #0x0
00000000000258b0	mov	x11, x8
00000000000258b4	ldr	w12, [x11]
00000000000258b8	cmp	w12, #0x157
00000000000258bc	b.gt	0x25914
00000000000258c0	add	x10, x10, #0x1
00000000000258c4	add	x11, x11, #0x10
00000000000258c8	cmp	x9, x10
00000000000258cc	b.ne	0x258b4
00000000000258d0	mov	x10, x9
00000000000258d4	b	0x25914
00000000000258d8	mov	w10, #0x0
00000000000258dc	add	w11, w9, w10
00000000000258e0	cmp	w11, #0x0
00000000000258e4	cinc	w11, w11, lt
00000000000258e8	asr	w11, w11, #1
00000000000258ec	sbfiz	x12, x11, #4, #32
00000000000258f0	ldr	w12, [x8, x12]
00000000000258f4	cmp	w12, #0x158
00000000000258f8	csinc	w10, w10, w11, ge
00000000000258fc	csel	w9, w9, w11, lt
0000000000025900	cmp	w10, w9
0000000000025904	b.lt	0x258dc
0000000000025908	b	0x25914
000000000002590c	mov	w10, #0x0
0000000000025910	b	0x25914
0000000000025914	sxtw	x9, w10
0000000000025918	add	x8, x8, x9, lsl #4
000000000002591c	ldr	x8, [x8, #0x8]
0000000000025920	ldr	x8, [x8]
0000000000025924	mov	x0, x21
0000000000025928	mov	x1, x22
000000000002592c	mov	x2, x23
0000000000025930	ldr	x4, [sp, #0x8]
0000000000025934	blr	x8
0000000000025938	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002593c	mov	x1, x0
0000000000025940	mov	x0, x19
0000000000025944	blr	x28
0000000000025948	ldr	x8, [x0]
000000000002594c	ldr	x9, [sp, #0x18]
0000000000025950	str	x9, [x8, #0x110]
0000000000025954	add	x8, x8, #0x138
0000000000025958	mov	w9, #0x1
000000000002595c	ldaxr	wzr, [x8]
0000000000025960	stlxr	w10, w9, [x8]
0000000000025964	cbnz	w10, 0x2595c
0000000000025968	mov	x0, x1
000000000002596c	ldp	x29, x30, [sp, #0xa0]
0000000000025970	ldp	x20, x19, [sp, #0x90]
0000000000025974	ldp	x22, x21, [sp, #0x80]
0000000000025978	ldp	x24, x23, [sp, #0x70]
000000000002597c	ldp	x26, x25, [sp, #0x60]
0000000000025980	ldp	x28, x27, [sp, #0x50]
0000000000025984	add	sp, sp, #0xb0
0000000000025988	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002598c	mov	x1, x0
0000000000025990	mov	x0, x19
0000000000025994	blr	x28
0000000000025998	ldr	x8, [x0]
000000000002599c	add	x9, sp, #0x10
00000000000259a0	str	x9, [x8, #0x110]
00000000000259a4	mov	x0, x1
00000000000259a8	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
00000000000259ac	bl	0x552fc ; symbol stub for: __ZSt9terminatev
00000000000259b0	b	0x259b0
_invokeFunction0:
00000000000259b4	sub	sp, sp, #0x60
00000000000259b8	stp	x24, x23, [sp, #0x20]
00000000000259bc	stp	x22, x21, [sp, #0x30]
00000000000259c0	stp	x20, x19, [sp, #0x40]
00000000000259c4	stp	x29, x30, [sp, #0x50]
00000000000259c8	add	x29, sp, #0x50
00000000000259cc	mov	x19, x1
00000000000259d0	mov	x22, x0
00000000000259d4	movi.16b	v0, #0x0
00000000000259d8	stp	q0, q0, [sp]
00000000000259dc	mov	x21, sp
00000000000259e0	adrp	x20, 85 ; 0x7a000
00000000000259e4	add	x20, x20, #0x2c0
00000000000259e8	ldr	x23, [x20]
00000000000259ec	mov	x0, x20
00000000000259f0	blr	x23
00000000000259f4	ldr	x8, [x0]
00000000000259f8	ldr	x9, [x8, #0x110]
00000000000259fc	str	x21, [x8, #0x110]
0000000000025a00	mov	x8, #0x400000000
0000000000025a04	stp	x9, x8, [sp, #0x8]
0000000000025a08	adr	x24, #0x6e881
0000000000025a0c	nop
0000000000025a10	ldarb	w8, [x24]
0000000000025a14	tbz	w8, #0x0, 0x25a1c
0000000000025a18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025a1c	mov	x8, #0x0
0000000000025a20	add	x21, x21, #0x18
0000000000025a24	ldar	x9, [x22]
0000000000025a28	ands	x9, x9, #0xfffffffffffffffc
0000000000025a2c	b.eq	0x25a44
0000000000025a30	ldr	x10, [x9]
0000000000025a34	cmp	x10, x9
0000000000025a38	b.eq	0x25a44
0000000000025a3c	add	x8, x9, #0x10
0000000000025a40	ldar	x8, [x8]
0000000000025a44	ldr	x1, [x8, #0x10]
0000000000025a48	mov	x0, x20
0000000000025a4c	blr	x23
0000000000025a50	ldr	x9, [x0]
0000000000025a54	add	x9, x9, #0x138
0000000000025a58	mov	w10, #0x1
0000000000025a5c	ldaxr	wzr, [x9]
0000000000025a60	stlxr	w11, w10, [x9]
0000000000025a64	cbnz	w11, 0x25a5c
0000000000025a68	mov	x0, x8
0000000000025a6c	bl	0x25b80
0000000000025a70	mov	x22, x0
0000000000025a74	mov	x0, x20
0000000000025a78	blr	x23
0000000000025a7c	ldr	x8, [x0]
0000000000025a80	add	x0, x8, #0x138
0000000000025a84	ldaxr	w8, [x0]
0000000000025a88	stlxr	w9, wzr, [x0]
0000000000025a8c	cbnz	w9, 0x25a84
0000000000025a90	cmp	w8, #0x1
0000000000025a94	b.ne	0x25aa4
0000000000025a98	ldarb	w8, [x24]
0000000000025a9c	tbz	w8, #0x0, 0x25aa4
0000000000025aa0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025aa4	cbz	x22, 0x25ac4
0000000000025aa8	nop
0000000000025aac	ldr	x1, #0x6ea2c
0000000000025ab0	mov	x0, x22
0000000000025ab4	mov	x2, x21
0000000000025ab8	bl	0x55584 ; Objc message: -[x0 writeData:]
0000000000025abc	mov	x21, x0
0000000000025ac0	b	0x25acc
0000000000025ac4	mov	x21, #0x0
0000000000025ac8	str	xzr, [sp, #0x18]
0000000000025acc	mov	x0, x20
0000000000025ad0	blr	x23
0000000000025ad4	ldr	x8, [x0]
0000000000025ad8	add	x8, x8, #0x138
0000000000025adc	mov	w9, #0x1
0000000000025ae0	ldaxr	wzr, [x8]
0000000000025ae4	stlxr	w10, w9, [x8]
0000000000025ae8	cbnz	w10, 0x25ae0
0000000000025aec	mov	x0, x22
0000000000025af0	bl	0x555a8 ; symbol stub for: _objc_release
0000000000025af4	mov	x0, x20
0000000000025af8	blr	x23
0000000000025afc	ldr	x8, [x0]
0000000000025b00	add	x0, x8, #0x138
0000000000025b04	ldaxr	w8, [x0]
0000000000025b08	stlxr	w9, wzr, [x0]
0000000000025b0c	cbnz	w9, 0x25b04
0000000000025b10	cmp	w8, #0x1
0000000000025b14	b.ne	0x25b24
0000000000025b18	ldarb	w8, [x24]
0000000000025b1c	tbz	w8, #0x0, 0x25b24
0000000000025b20	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025b24	str	x21, [x19]
0000000000025b28	mov	x0, x20
0000000000025b2c	blr	x23
0000000000025b30	ldr	x8, [x0]
0000000000025b34	ldr	x9, [sp, #0x8]
0000000000025b38	str	x9, [x8, #0x110]
0000000000025b3c	mov	x0, x21
0000000000025b40	ldp	x29, x30, [sp, #0x50]
0000000000025b44	ldp	x20, x19, [sp, #0x40]
0000000000025b48	ldp	x22, x21, [sp, #0x30]
0000000000025b4c	ldp	x24, x23, [sp, #0x20]
0000000000025b50	add	sp, sp, #0x60
0000000000025b54	ret
0000000000025b58	mov	x1, x0
0000000000025b5c	mov	x0, x20
0000000000025b60	blr	x23
0000000000025b64	ldr	x8, [x0]
0000000000025b68	mov	x9, sp
0000000000025b6c	str	x9, [x8, #0x110]
0000000000025b70	mov	x0, x1
0000000000025b74	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000025b78	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000025b7c	b	0x25b7c
0000000000025b80	stp	x29, x30, [sp, #-0x10]!
0000000000025b84	mov	x29, sp
0000000000025b88	blr	x1
0000000000025b8c	mov	x29, x29
0000000000025b90	ldp	x29, x30, [sp], #0x10
0000000000025b94	b	0x555c0 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock0:
0000000000025b98	sub	sp, sp, #0x50
0000000000025b9c	stp	x22, x21, [sp, #0x20]
0000000000025ba0	stp	x20, x19, [sp, #0x30]
0000000000025ba4	stp	x29, x30, [sp, #0x40]
0000000000025ba8	add	x29, sp, #0x40
0000000000025bac	mov	x19, x1
0000000000025bb0	mov	x21, x0
0000000000025bb4	movi.16b	v0, #0x0
0000000000025bb8	stp	q0, q0, [sp]
0000000000025bbc	adrp	x20, 85 ; 0x7a000
0000000000025bc0	add	x20, x20, #0x2c0
0000000000025bc4	ldr	x22, [x20]
0000000000025bc8	mov	x0, x20
0000000000025bcc	blr	x22
0000000000025bd0	ldr	x8, [x0]
0000000000025bd4	ldr	x9, [x8, #0x110]
0000000000025bd8	mov	x10, sp
0000000000025bdc	str	x10, [x8, #0x110]
0000000000025be0	mov	x8, #0x400000000
0000000000025be4	stp	x9, x8, [sp, #0x8]
0000000000025be8	adr	x8, #0x6e6a1
0000000000025bec	nop
0000000000025bf0	ldarb	w8, [x8]
0000000000025bf4	tbz	w8, #0x0, 0x25bfc
0000000000025bf8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025bfc	cbz	x21, 0x25c28
0000000000025c00	mov	x0, x21
0000000000025c04	bl	0x555cc ; symbol stub for: _objc_retainBlock
0000000000025c08	mov	x1, x0
0000000000025c0c	mov	x8, sp
0000000000025c10	add	x2, x8, #0x18
0000000000025c14	adr	x0, #0x4953c
0000000000025c18	nop
0000000000025c1c	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
0000000000025c20	mov	x8, x0
0000000000025c24	b	0x25c2c
0000000000025c28	mov	x8, #0x0
0000000000025c2c	str	x8, [x19]
0000000000025c30	mov	x0, x20
0000000000025c34	blr	x22
0000000000025c38	ldr	x9, [x0]
0000000000025c3c	ldr	x10, [sp, #0x8]
0000000000025c40	str	x10, [x9, #0x110]
0000000000025c44	mov	x0, x8
0000000000025c48	ldp	x29, x30, [sp, #0x40]
0000000000025c4c	ldp	x20, x19, [sp, #0x30]
0000000000025c50	ldp	x22, x21, [sp, #0x20]
0000000000025c54	add	sp, sp, #0x50
0000000000025c58	ret
0000000000025c5c	mov	x1, x0
0000000000025c60	mov	x0, x20
0000000000025c64	blr	x22
0000000000025c68	ldr	x8, [x0]
0000000000025c6c	mov	x9, sp
0000000000025c70	str	x9, [x8, #0x110]
0000000000025c74	mov	x0, x1
0000000000025c78	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000025c7c	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000025c80	b	0x25c80
_invokeFunction1:
0000000000025c84	sub	sp, sp, #0x80
0000000000025c88	stp	x28, x27, [sp, #0x20]
0000000000025c8c	stp	x26, x25, [sp, #0x30]
0000000000025c90	stp	x24, x23, [sp, #0x40]
0000000000025c94	stp	x22, x21, [sp, #0x50]
0000000000025c98	stp	x20, x19, [sp, #0x60]
0000000000025c9c	stp	x29, x30, [sp, #0x70]
0000000000025ca0	add	x29, sp, #0x70
0000000000025ca4	mov	x19, x2
0000000000025ca8	mov	x22, x1
0000000000025cac	mov	x23, x0
0000000000025cb0	movi.16b	v0, #0x0
0000000000025cb4	stp	q0, q0, [sp]
0000000000025cb8	mov	x27, sp
0000000000025cbc	adrp	x20, 85 ; 0x7a000
0000000000025cc0	add	x20, x20, #0x2c0
0000000000025cc4	ldr	x25, [x20]
0000000000025cc8	mov	x0, x20
0000000000025ccc	blr	x25
0000000000025cd0	ldr	x8, [x0]
0000000000025cd4	ldr	x9, [x8, #0x110]
0000000000025cd8	str	x27, [x8, #0x110]
0000000000025cdc	mov	x8, #0x400000000
0000000000025ce0	stp	x9, x8, [sp, #0x8]
0000000000025ce4	adr	x26, #0x6e5a5
0000000000025ce8	nop
0000000000025cec	ldarb	w8, [x26]
0000000000025cf0	tbz	w8, #0x0, 0x25cf8
0000000000025cf4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025cf8	mov	x21, #0x0
0000000000025cfc	ldar	x8, [x23]
0000000000025d00	ands	x8, x8, #0xfffffffffffffffc
0000000000025d04	b.eq	0x25d1c
0000000000025d08	ldr	x9, [x8]
0000000000025d0c	cmp	x9, x8
0000000000025d10	b.eq	0x25d1c
0000000000025d14	add	x8, x8, #0x10
0000000000025d18	ldar	x21, [x8]
0000000000025d1c	ldr	x24, [x21, #0x10]
0000000000025d20	mov	x0, x22
0000000000025d24	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000025d28	mov	x23, x0
0000000000025d2c	add	x22, x27, #0x18
0000000000025d30	mov	x0, x20
0000000000025d34	blr	x25
0000000000025d38	ldr	x8, [x0]
0000000000025d3c	add	x8, x8, #0x138
0000000000025d40	mov	w9, #0x1
0000000000025d44	ldaxr	wzr, [x8]
0000000000025d48	stlxr	w10, w9, [x8]
0000000000025d4c	cbnz	w10, 0x25d44
0000000000025d50	mov	x0, x21
0000000000025d54	mov	x1, x23
0000000000025d58	mov	x2, x24
0000000000025d5c	bl	0x25e80
0000000000025d60	mov	x21, x0
0000000000025d64	mov	x0, x23
0000000000025d68	bl	0x555a8 ; symbol stub for: _objc_release
0000000000025d6c	mov	x0, x20
0000000000025d70	blr	x25
0000000000025d74	ldr	x8, [x0]
0000000000025d78	add	x0, x8, #0x138
0000000000025d7c	ldaxr	w8, [x0]
0000000000025d80	stlxr	w9, wzr, [x0]
0000000000025d84	cbnz	w9, 0x25d7c
0000000000025d88	cmp	w8, #0x1
0000000000025d8c	b.ne	0x25d9c
0000000000025d90	ldarb	w8, [x26]
0000000000025d94	tbz	w8, #0x0, 0x25d9c
0000000000025d98	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025d9c	cbz	x21, 0x25dbc
0000000000025da0	nop
0000000000025da4	ldr	x1, #0x6e734
0000000000025da8	mov	x0, x21
0000000000025dac	mov	x2, x22
0000000000025db0	bl	0x55584 ; Objc message: -[x0 writeData:]
0000000000025db4	mov	x22, x0
0000000000025db8	b	0x25dc4
0000000000025dbc	mov	x22, #0x0
0000000000025dc0	str	xzr, [sp, #0x18]
0000000000025dc4	mov	x0, x20
0000000000025dc8	blr	x25
0000000000025dcc	ldr	x8, [x0]
0000000000025dd0	add	x8, x8, #0x138
0000000000025dd4	mov	w9, #0x1
0000000000025dd8	ldaxr	wzr, [x8]
0000000000025ddc	stlxr	w10, w9, [x8]
0000000000025de0	cbnz	w10, 0x25dd8
0000000000025de4	mov	x0, x21
0000000000025de8	bl	0x555a8 ; symbol stub for: _objc_release
0000000000025dec	mov	x0, x20
0000000000025df0	blr	x25
0000000000025df4	ldr	x8, [x0]
0000000000025df8	add	x0, x8, #0x138
0000000000025dfc	ldaxr	w8, [x0]
0000000000025e00	stlxr	w9, wzr, [x0]
0000000000025e04	cbnz	w9, 0x25dfc
0000000000025e08	cmp	w8, #0x1
0000000000025e0c	b.ne	0x25e1c
0000000000025e10	ldarb	w8, [x26]
0000000000025e14	tbz	w8, #0x0, 0x25e1c
0000000000025e18	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025e1c	str	x22, [x19]
0000000000025e20	mov	x0, x20
0000000000025e24	blr	x25
0000000000025e28	ldr	x8, [x0]
0000000000025e2c	ldr	x9, [sp, #0x8]
0000000000025e30	str	x9, [x8, #0x110]
0000000000025e34	mov	x0, x22
0000000000025e38	ldp	x29, x30, [sp, #0x70]
0000000000025e3c	ldp	x20, x19, [sp, #0x60]
0000000000025e40	ldp	x22, x21, [sp, #0x50]
0000000000025e44	ldp	x24, x23, [sp, #0x40]
0000000000025e48	ldp	x26, x25, [sp, #0x30]
0000000000025e4c	ldp	x28, x27, [sp, #0x20]
0000000000025e50	add	sp, sp, #0x80
0000000000025e54	ret
0000000000025e58	mov	x1, x0
0000000000025e5c	mov	x0, x20
0000000000025e60	blr	x25
0000000000025e64	ldr	x8, [x0]
0000000000025e68	mov	x9, sp
0000000000025e6c	str	x9, [x8, #0x110]
0000000000025e70	mov	x0, x1
0000000000025e74	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000025e78	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000025e7c	b	0x25e7c
0000000000025e80	stp	x29, x30, [sp, #-0x10]!
0000000000025e84	mov	x29, sp
0000000000025e88	blr	x2
0000000000025e8c	mov	x29, x29
0000000000025e90	ldp	x29, x30, [sp], #0x10
0000000000025e94	b	0x555c0 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock1:
0000000000025e98	sub	sp, sp, #0x50
0000000000025e9c	stp	x22, x21, [sp, #0x20]
0000000000025ea0	stp	x20, x19, [sp, #0x30]
0000000000025ea4	stp	x29, x30, [sp, #0x40]
0000000000025ea8	add	x29, sp, #0x40
0000000000025eac	mov	x19, x1
0000000000025eb0	mov	x21, x0
0000000000025eb4	movi.16b	v0, #0x0
0000000000025eb8	stp	q0, q0, [sp]
0000000000025ebc	adrp	x20, 85 ; 0x7a000
0000000000025ec0	add	x20, x20, #0x2c0
0000000000025ec4	ldr	x22, [x20]
0000000000025ec8	mov	x0, x20
0000000000025ecc	blr	x22
0000000000025ed0	ldr	x8, [x0]
0000000000025ed4	ldr	x9, [x8, #0x110]
0000000000025ed8	mov	x10, sp
0000000000025edc	str	x10, [x8, #0x110]
0000000000025ee0	mov	x8, #0x400000000
0000000000025ee4	stp	x9, x8, [sp, #0x8]
0000000000025ee8	adr	x8, #0x6e3a1
0000000000025eec	nop
0000000000025ef0	ldarb	w8, [x8]
0000000000025ef4	tbz	w8, #0x0, 0x25efc
0000000000025ef8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025efc	cbz	x21, 0x25f28
0000000000025f00	mov	x0, x21
0000000000025f04	bl	0x555cc ; symbol stub for: _objc_retainBlock
0000000000025f08	mov	x1, x0
0000000000025f0c	mov	x8, sp
0000000000025f10	add	x2, x8, #0x18
0000000000025f14	adr	x0, #0x492fc
0000000000025f18	nop
0000000000025f1c	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
0000000000025f20	mov	x8, x0
0000000000025f24	b	0x25f2c
0000000000025f28	mov	x8, #0x0
0000000000025f2c	str	x8, [x19]
0000000000025f30	mov	x0, x20
0000000000025f34	blr	x22
0000000000025f38	ldr	x9, [x0]
0000000000025f3c	ldr	x10, [sp, #0x8]
0000000000025f40	str	x10, [x9, #0x110]
0000000000025f44	mov	x0, x8
0000000000025f48	ldp	x29, x30, [sp, #0x40]
0000000000025f4c	ldp	x20, x19, [sp, #0x30]
0000000000025f50	ldp	x22, x21, [sp, #0x20]
0000000000025f54	add	sp, sp, #0x50
0000000000025f58	ret
0000000000025f5c	mov	x1, x0
0000000000025f60	mov	x0, x20
0000000000025f64	blr	x22
0000000000025f68	ldr	x8, [x0]
0000000000025f6c	mov	x9, sp
0000000000025f70	str	x9, [x8, #0x110]
0000000000025f74	mov	x0, x1
0000000000025f78	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000025f7c	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000025f80	b	0x25f80
_invokeFunction2:
0000000000025f84	sub	sp, sp, #0x80
0000000000025f88	stp	x28, x27, [sp, #0x20]
0000000000025f8c	stp	x26, x25, [sp, #0x30]
0000000000025f90	stp	x24, x23, [sp, #0x40]
0000000000025f94	stp	x22, x21, [sp, #0x50]
0000000000025f98	stp	x20, x19, [sp, #0x60]
0000000000025f9c	stp	x29, x30, [sp, #0x70]
0000000000025fa0	add	x29, sp, #0x70
0000000000025fa4	mov	x19, x3
0000000000025fa8	mov	x22, x2
0000000000025fac	mov	x23, x1
0000000000025fb0	mov	x24, x0
0000000000025fb4	movi.16b	v0, #0x0
0000000000025fb8	stp	q0, q0, [sp]
0000000000025fbc	mov	x28, sp
0000000000025fc0	adrp	x20, 85 ; 0x7a000
0000000000025fc4	add	x20, x20, #0x2c0
0000000000025fc8	ldr	x26, [x20]
0000000000025fcc	mov	x0, x20
0000000000025fd0	blr	x26
0000000000025fd4	ldr	x8, [x0]
0000000000025fd8	ldr	x9, [x8, #0x110]
0000000000025fdc	str	x28, [x8, #0x110]
0000000000025fe0	mov	x8, #0x400000000
0000000000025fe4	stp	x9, x8, [sp, #0x8]
0000000000025fe8	adr	x27, #0x6e2a1
0000000000025fec	nop
0000000000025ff0	ldarb	w8, [x27]
0000000000025ff4	tbz	w8, #0x0, 0x25ffc
0000000000025ff8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025ffc	mov	x21, #0x0
0000000000026000	ldar	x8, [x24]
0000000000026004	ands	x8, x8, #0xfffffffffffffffc
0000000000026008	b.eq	0x26020
000000000002600c	ldr	x9, [x8]
0000000000026010	cmp	x9, x8
0000000000026014	b.eq	0x26020
0000000000026018	add	x8, x8, #0x10
000000000002601c	ldar	x21, [x8]
0000000000026020	ldr	x24, [x21, #0x10]
0000000000026024	mov	x0, x23
0000000000026028	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002602c	mov	x23, x0
0000000000026030	mov	x0, x22
0000000000026034	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000026038	mov	x25, x0
000000000002603c	add	x22, x28, #0x18
0000000000026040	mov	x0, x20
0000000000026044	blr	x26
0000000000026048	ldr	x8, [x0]
000000000002604c	add	x8, x8, #0x138
0000000000026050	mov	w9, #0x1
0000000000026054	ldaxr	wzr, [x8]
0000000000026058	stlxr	w10, w9, [x8]
000000000002605c	cbnz	w10, 0x26054
0000000000026060	mov	x0, x21
0000000000026064	mov	x1, x23
0000000000026068	mov	x2, x25
000000000002606c	mov	x3, x24
0000000000026070	bl	0x2619c
0000000000026074	mov	x21, x0
0000000000026078	mov	x0, x23
000000000002607c	bl	0x555a8 ; symbol stub for: _objc_release
0000000000026080	mov	x0, x25
0000000000026084	bl	0x555a8 ; symbol stub for: _objc_release
0000000000026088	mov	x0, x20
000000000002608c	blr	x26
0000000000026090	ldr	x8, [x0]
0000000000026094	add	x0, x8, #0x138
0000000000026098	ldaxr	w8, [x0]
000000000002609c	stlxr	w9, wzr, [x0]
00000000000260a0	cbnz	w9, 0x26098
00000000000260a4	cmp	w8, #0x1
00000000000260a8	b.ne	0x260b8
00000000000260ac	ldarb	w8, [x27]
00000000000260b0	tbz	w8, #0x0, 0x260b8
00000000000260b4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000260b8	cbz	x21, 0x260d8
00000000000260bc	nop
00000000000260c0	ldr	x1, #0x6e418
00000000000260c4	mov	x0, x21
00000000000260c8	mov	x2, x22
00000000000260cc	bl	0x55584 ; Objc message: -[x0 writeData:]
00000000000260d0	mov	x22, x0
00000000000260d4	b	0x260e0
00000000000260d8	mov	x22, #0x0
00000000000260dc	str	xzr, [sp, #0x18]
00000000000260e0	mov	x0, x20
00000000000260e4	blr	x26
00000000000260e8	ldr	x8, [x0]
00000000000260ec	add	x8, x8, #0x138
00000000000260f0	mov	w9, #0x1
00000000000260f4	ldaxr	wzr, [x8]
00000000000260f8	stlxr	w10, w9, [x8]
00000000000260fc	cbnz	w10, 0x260f4
0000000000026100	mov	x0, x21
0000000000026104	bl	0x555a8 ; symbol stub for: _objc_release
0000000000026108	mov	x0, x20
000000000002610c	blr	x26
0000000000026110	ldr	x8, [x0]
0000000000026114	add	x0, x8, #0x138
0000000000026118	ldaxr	w8, [x0]
000000000002611c	stlxr	w9, wzr, [x0]
0000000000026120	cbnz	w9, 0x26118
0000000000026124	cmp	w8, #0x1
0000000000026128	b.ne	0x26138
000000000002612c	ldarb	w8, [x27]
0000000000026130	tbz	w8, #0x0, 0x26138
0000000000026134	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026138	str	x22, [x19]
000000000002613c	mov	x0, x20
0000000000026140	blr	x26
0000000000026144	ldr	x8, [x0]
0000000000026148	ldr	x9, [sp, #0x8]
000000000002614c	str	x9, [x8, #0x110]
0000000000026150	mov	x0, x22
0000000000026154	ldp	x29, x30, [sp, #0x70]
0000000000026158	ldp	x20, x19, [sp, #0x60]
000000000002615c	ldp	x22, x21, [sp, #0x50]
0000000000026160	ldp	x24, x23, [sp, #0x40]
0000000000026164	ldp	x26, x25, [sp, #0x30]
0000000000026168	ldp	x28, x27, [sp, #0x20]
000000000002616c	add	sp, sp, #0x80
0000000000026170	ret
0000000000026174	mov	x1, x0
0000000000026178	mov	x0, x20
000000000002617c	blr	x26
0000000000026180	ldr	x8, [x0]
0000000000026184	mov	x9, sp
0000000000026188	str	x9, [x8, #0x110]
000000000002618c	mov	x0, x1
0000000000026190	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000026194	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000026198	b	0x26198
000000000002619c	stp	x29, x30, [sp, #-0x10]!
00000000000261a0	mov	x29, sp
00000000000261a4	blr	x3
00000000000261a8	mov	x29, x29
00000000000261ac	ldp	x29, x30, [sp], #0x10
00000000000261b0	b	0x555c0 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock2:
00000000000261b4	sub	sp, sp, #0x50
00000000000261b8	stp	x22, x21, [sp, #0x20]
00000000000261bc	stp	x20, x19, [sp, #0x30]
00000000000261c0	stp	x29, x30, [sp, #0x40]
00000000000261c4	add	x29, sp, #0x40
00000000000261c8	mov	x19, x1
00000000000261cc	mov	x21, x0
00000000000261d0	movi.16b	v0, #0x0
00000000000261d4	stp	q0, q0, [sp]
00000000000261d8	adrp	x20, 84 ; 0x7a000
00000000000261dc	add	x20, x20, #0x2c0
00000000000261e0	ldr	x22, [x20]
00000000000261e4	mov	x0, x20
00000000000261e8	blr	x22
00000000000261ec	ldr	x8, [x0]
00000000000261f0	ldr	x9, [x8, #0x110]
00000000000261f4	mov	x10, sp
00000000000261f8	str	x10, [x8, #0x110]
00000000000261fc	mov	x8, #0x400000000
0000000000026200	stp	x9, x8, [sp, #0x8]
0000000000026204	adr	x8, #0x6e085
0000000000026208	nop
000000000002620c	ldarb	w8, [x8]
0000000000026210	tbz	w8, #0x0, 0x26218
0000000000026214	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026218	cbz	x21, 0x26244
000000000002621c	mov	x0, x21
0000000000026220	bl	0x555cc ; symbol stub for: _objc_retainBlock
0000000000026224	mov	x1, x0
0000000000026228	mov	x8, sp
000000000002622c	add	x2, x8, #0x18
0000000000026230	adr	x0, #0x49100
0000000000026234	nop
0000000000026238	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
000000000002623c	mov	x8, x0
0000000000026240	b	0x26248
0000000000026244	mov	x8, #0x0
0000000000026248	str	x8, [x19]
000000000002624c	mov	x0, x20
0000000000026250	blr	x22
0000000000026254	ldr	x9, [x0]
0000000000026258	ldr	x10, [sp, #0x8]
000000000002625c	str	x10, [x9, #0x110]
0000000000026260	mov	x0, x8
0000000000026264	ldp	x29, x30, [sp, #0x40]
0000000000026268	ldp	x20, x19, [sp, #0x30]
000000000002626c	ldp	x22, x21, [sp, #0x20]
0000000000026270	add	sp, sp, #0x50
0000000000026274	ret
0000000000026278	mov	x1, x0
000000000002627c	mov	x0, x20
0000000000026280	blr	x22
0000000000026284	ldr	x8, [x0]
0000000000026288	mov	x9, sp
000000000002628c	str	x9, [x8, #0x110]
0000000000026290	mov	x0, x1
0000000000026294	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000026298	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002629c	b	0x2629c
_invokeFunction3:
00000000000262a0	sub	sp, sp, #0x80
00000000000262a4	stp	x28, x27, [sp, #0x20]
00000000000262a8	stp	x26, x25, [sp, #0x30]
00000000000262ac	stp	x24, x23, [sp, #0x40]
00000000000262b0	stp	x22, x21, [sp, #0x50]
00000000000262b4	stp	x20, x19, [sp, #0x60]
00000000000262b8	stp	x29, x30, [sp, #0x70]
00000000000262bc	add	x29, sp, #0x70
00000000000262c0	mov	x19, x4
00000000000262c4	mov	x22, x3
00000000000262c8	mov	x23, x2
00000000000262cc	mov	x24, x1
00000000000262d0	mov	x25, x0
00000000000262d4	movi.16b	v0, #0x0
00000000000262d8	stp	q0, q0, [sp]
00000000000262dc	mov	x28, sp
00000000000262e0	adrp	x20, 84 ; 0x7a000
00000000000262e4	add	x20, x20, #0x2c0
00000000000262e8	ldr	x27, [x20]
00000000000262ec	mov	x0, x20
00000000000262f0	blr	x27
00000000000262f4	ldr	x8, [x0]
00000000000262f8	ldr	x9, [x8, #0x110]
00000000000262fc	str	x28, [x8, #0x110]
0000000000026300	mov	x8, #0x400000000
0000000000026304	stp	x9, x8, [sp, #0x8]
0000000000026308	adr	x8, #0x6df81
000000000002630c	nop
0000000000026310	ldarb	w8, [x8]
0000000000026314	tbz	w8, #0x0, 0x2631c
0000000000026318	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002631c	mov	x21, #0x0
0000000000026320	ldar	x8, [x25]
0000000000026324	ands	x8, x8, #0xfffffffffffffffc
0000000000026328	b.eq	0x26340
000000000002632c	ldr	x9, [x8]
0000000000026330	cmp	x9, x8
0000000000026334	b.eq	0x26340
0000000000026338	add	x8, x8, #0x10
000000000002633c	ldar	x21, [x8]
0000000000026340	ldr	x25, [x21, #0x10]
0000000000026344	mov	x0, x24
0000000000026348	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002634c	mov	x24, x0
0000000000026350	mov	x0, x23
0000000000026354	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000026358	mov	x23, x0
000000000002635c	mov	x0, x22
0000000000026360	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000026364	mov	x26, x0
0000000000026368	add	x22, x28, #0x18
000000000002636c	mov	x0, x20
0000000000026370	blr	x27
0000000000026374	ldr	x8, [x0]
0000000000026378	add	x8, x8, #0x138
000000000002637c	mov	w9, #0x1
0000000000026380	ldaxr	wzr, [x8]
0000000000026384	stlxr	w10, w9, [x8]
0000000000026388	cbnz	w10, 0x26380
000000000002638c	mov	x0, x21
0000000000026390	mov	x1, x24
0000000000026394	mov	x2, x23
0000000000026398	mov	x3, x26
000000000002639c	mov	x4, x25
00000000000263a0	bl	0x264e4
00000000000263a4	mov	x21, x0
00000000000263a8	mov	x0, x24
00000000000263ac	bl	0x555a8 ; symbol stub for: _objc_release
00000000000263b0	mov	x0, x23
00000000000263b4	bl	0x555a8 ; symbol stub for: _objc_release
00000000000263b8	mov	x0, x26
00000000000263bc	bl	0x555a8 ; symbol stub for: _objc_release
00000000000263c0	mov	x0, x20
00000000000263c4	blr	x27
00000000000263c8	ldr	x8, [x0]
00000000000263cc	add	x0, x8, #0x138
00000000000263d0	ldaxr	w8, [x0]
00000000000263d4	stlxr	w9, wzr, [x0]
00000000000263d8	cbnz	w9, 0x263d0
00000000000263dc	cmp	w8, #0x1
00000000000263e0	b.ne	0x263f8
00000000000263e4	adr	x8, #0x6dea5
00000000000263e8	nop
00000000000263ec	ldarb	w8, [x8]
00000000000263f0	tbz	w8, #0x0, 0x263f8
00000000000263f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000263f8	cbz	x21, 0x26418
00000000000263fc	nop
0000000000026400	ldr	x1, #0x6e0d8
0000000000026404	mov	x0, x21
0000000000026408	mov	x2, x22
000000000002640c	bl	0x55584 ; Objc message: -[x0 writeData:]
0000000000026410	mov	x22, x0
0000000000026414	b	0x26420
0000000000026418	mov	x22, #0x0
000000000002641c	str	xzr, [sp, #0x18]
0000000000026420	mov	x0, x20
0000000000026424	blr	x27
0000000000026428	ldr	x8, [x0]
000000000002642c	add	x8, x8, #0x138
0000000000026430	mov	w9, #0x1
0000000000026434	ldaxr	wzr, [x8]
0000000000026438	stlxr	w10, w9, [x8]
000000000002643c	cbnz	w10, 0x26434
0000000000026440	mov	x0, x21
0000000000026444	bl	0x555a8 ; symbol stub for: _objc_release
0000000000026448	mov	x0, x20
000000000002644c	blr	x27
0000000000026450	ldr	x8, [x0]
0000000000026454	add	x0, x8, #0x138
0000000000026458	ldaxr	w8, [x0]
000000000002645c	stlxr	w9, wzr, [x0]
0000000000026460	cbnz	w9, 0x26458
0000000000026464	cmp	w8, #0x1
0000000000026468	b.ne	0x26480
000000000002646c	adr	x8, #0x6de1d
0000000000026470	nop
0000000000026474	ldarb	w8, [x8]
0000000000026478	tbz	w8, #0x0, 0x26480
000000000002647c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026480	str	x22, [x19]
0000000000026484	mov	x0, x20
0000000000026488	blr	x27
000000000002648c	ldr	x8, [x0]
0000000000026490	ldr	x9, [sp, #0x8]
0000000000026494	str	x9, [x8, #0x110]
0000000000026498	mov	x0, x22
000000000002649c	ldp	x29, x30, [sp, #0x70]
00000000000264a0	ldp	x20, x19, [sp, #0x60]
00000000000264a4	ldp	x22, x21, [sp, #0x50]
00000000000264a8	ldp	x24, x23, [sp, #0x40]
00000000000264ac	ldp	x26, x25, [sp, #0x30]
00000000000264b0	ldp	x28, x27, [sp, #0x20]
00000000000264b4	add	sp, sp, #0x80
00000000000264b8	ret
00000000000264bc	mov	x1, x0
00000000000264c0	mov	x0, x20
00000000000264c4	blr	x27
00000000000264c8	ldr	x8, [x0]
00000000000264cc	mov	x9, sp
00000000000264d0	str	x9, [x8, #0x110]
00000000000264d4	mov	x0, x1
00000000000264d8	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
00000000000264dc	bl	0x552fc ; symbol stub for: __ZSt9terminatev
00000000000264e0	b	0x264e0
00000000000264e4	stp	x29, x30, [sp, #-0x10]!
00000000000264e8	mov	x29, sp
00000000000264ec	blr	x4
00000000000264f0	mov	x29, x29
00000000000264f4	ldp	x29, x30, [sp], #0x10
00000000000264f8	b	0x555c0 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock3:
00000000000264fc	sub	sp, sp, #0x50
0000000000026500	stp	x22, x21, [sp, #0x20]
0000000000026504	stp	x20, x19, [sp, #0x30]
0000000000026508	stp	x29, x30, [sp, #0x40]
000000000002650c	add	x29, sp, #0x40
0000000000026510	mov	x19, x1
0000000000026514	mov	x21, x0
0000000000026518	movi.16b	v0, #0x0
000000000002651c	stp	q0, q0, [sp]
0000000000026520	adrp	x20, 84 ; 0x7a000
0000000000026524	add	x20, x20, #0x2c0
0000000000026528	ldr	x22, [x20]
000000000002652c	mov	x0, x20
0000000000026530	blr	x22
0000000000026534	ldr	x8, [x0]
0000000000026538	ldr	x9, [x8, #0x110]
000000000002653c	mov	x10, sp
0000000000026540	str	x10, [x8, #0x110]
0000000000026544	mov	x8, #0x400000000
0000000000026548	stp	x9, x8, [sp, #0x8]
000000000002654c	adr	x8, #0x6dd3d
0000000000026550	nop
0000000000026554	ldarb	w8, [x8]
0000000000026558	tbz	w8, #0x0, 0x26560
000000000002655c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026560	cbz	x21, 0x2658c
0000000000026564	mov	x0, x21
0000000000026568	bl	0x555cc ; symbol stub for: _objc_retainBlock
000000000002656c	mov	x1, x0
0000000000026570	mov	x8, sp
0000000000026574	add	x2, x8, #0x18
0000000000026578	adr	x0, #0x48e78
000000000002657c	nop
0000000000026580	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
0000000000026584	mov	x8, x0
0000000000026588	b	0x26590
000000000002658c	mov	x8, #0x0
0000000000026590	str	x8, [x19]
0000000000026594	mov	x0, x20
0000000000026598	blr	x22
000000000002659c	ldr	x9, [x0]
00000000000265a0	ldr	x10, [sp, #0x8]
00000000000265a4	str	x10, [x9, #0x110]
00000000000265a8	mov	x0, x8
00000000000265ac	ldp	x29, x30, [sp, #0x40]
00000000000265b0	ldp	x20, x19, [sp, #0x30]
00000000000265b4	ldp	x22, x21, [sp, #0x20]
00000000000265b8	add	sp, sp, #0x50
00000000000265bc	ret
00000000000265c0	mov	x1, x0
00000000000265c4	mov	x0, x20
00000000000265c8	blr	x22
00000000000265cc	ldr	x8, [x0]
00000000000265d0	mov	x9, sp
00000000000265d4	str	x9, [x8, #0x110]
00000000000265d8	mov	x0, x1
00000000000265dc	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
00000000000265e0	bl	0x552fc ; symbol stub for: __ZSt9terminatev
00000000000265e4	b	0x265e4
_kotlin2objc_Kotlin_Any_equals:
00000000000265e8	sub	sp, sp, #0x70
00000000000265ec	stp	x26, x25, [sp, #0x20]
00000000000265f0	stp	x24, x23, [sp, #0x30]
00000000000265f4	stp	x22, x21, [sp, #0x40]
00000000000265f8	stp	x20, x19, [sp, #0x50]
00000000000265fc	stp	x29, x30, [sp, #0x60]
0000000000026600	add	x29, sp, #0x60
0000000000026604	mov	x20, x1
0000000000026608	mov	x21, x0
000000000002660c	str	xzr, [sp, #0x8]
0000000000026610	adrp	x19, 84 ; 0x7a000
0000000000026614	add	x19, x19, #0x2c0
0000000000026618	ldr	x24, [x19]
000000000002661c	mov	x0, x19
0000000000026620	blr	x24
0000000000026624	ldr	x8, [x0]
0000000000026628	ldr	x9, [x8, #0x110]
000000000002662c	add	x10, sp, #0x8
0000000000026630	str	x10, [x8, #0x110]
0000000000026634	mov	x8, #0x300000000
0000000000026638	stp	x9, x8, [sp, #0x10]
000000000002663c	adr	x25, #0x6dc4d
0000000000026640	nop
0000000000026644	ldarb	w8, [x25]
0000000000026648	tbz	w8, #0x0, 0x26650
000000000002664c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026650	mov	x0, x21
0000000000026654	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000026658	mov	x21, x0
000000000002665c	nop
0000000000026660	ldr	x23, #0x50330 ; Objc selector ref: isEqual:
0000000000026664	mov	x0, x20
0000000000026668	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002666c	mov	x22, x0
0000000000026670	mov	x0, x19
0000000000026674	blr	x24
0000000000026678	ldr	x8, [x0]
000000000002667c	add	x8, x8, #0x138
0000000000026680	mov	w9, #0x1
0000000000026684	ldaxr	wzr, [x8]
0000000000026688	stlxr	w10, w9, [x8]
000000000002668c	cbnz	w10, 0x26684
0000000000026690	mov	x0, x21
0000000000026694	mov	x1, x23
0000000000026698	mov	x2, x22
000000000002669c	bl	0x55584 ; Objc message: -[x0 isEqual:]
00000000000266a0	mov	x20, x0
00000000000266a4	mov	x0, x22
00000000000266a8	bl	0x555a8 ; symbol stub for: _objc_release
00000000000266ac	mov	x0, x19
00000000000266b0	blr	x24
00000000000266b4	ldr	x8, [x0]
00000000000266b8	add	x0, x8, #0x138
00000000000266bc	ldaxr	w8, [x0]
00000000000266c0	stlxr	w9, wzr, [x0]
00000000000266c4	cbnz	w9, 0x266bc
00000000000266c8	cmp	w8, #0x1
00000000000266cc	b.ne	0x266dc
00000000000266d0	ldarb	w8, [x25]
00000000000266d4	tbz	w8, #0x0, 0x266dc
00000000000266d8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000266dc	cmp	w20, #0x0
00000000000266e0	cset	w8, ne
00000000000266e4	mov	x0, x19
00000000000266e8	blr	x24
00000000000266ec	ldr	x9, [x0]
00000000000266f0	ldr	x10, [sp, #0x10]
00000000000266f4	str	x10, [x9, #0x110]
00000000000266f8	mov	x0, x8
00000000000266fc	ldp	x29, x30, [sp, #0x60]
0000000000026700	ldp	x20, x19, [sp, #0x50]
0000000000026704	ldp	x22, x21, [sp, #0x40]
0000000000026708	ldp	x24, x23, [sp, #0x30]
000000000002670c	ldp	x26, x25, [sp, #0x20]
0000000000026710	add	sp, sp, #0x70
0000000000026714	ret
0000000000026718	mov	x1, x0
000000000002671c	mov	x0, x19
0000000000026720	blr	x24
0000000000026724	ldr	x8, [x0]
0000000000026728	add	x9, sp, #0x8
000000000002672c	str	x9, [x8, #0x110]
0000000000026730	mov	x0, x1
0000000000026734	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000026738	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002673c	b	0x2673c
_kotlin2objc_kfun:kotlin.Any#hashCode(){}kotlin.Int:
0000000000026740	sub	sp, sp, #0x50
0000000000026744	stp	x22, x21, [sp, #0x20]
0000000000026748	stp	x20, x19, [sp, #0x30]
000000000002674c	stp	x29, x30, [sp, #0x40]
0000000000026750	add	x29, sp, #0x40
0000000000026754	mov	x20, x0
0000000000026758	str	xzr, [sp, #0x8]
000000000002675c	adrp	x19, 84 ; 0x7a000
0000000000026760	add	x19, x19, #0x2c0
0000000000026764	ldr	x21, [x19]
0000000000026768	mov	x0, x19
000000000002676c	blr	x21
0000000000026770	ldr	x8, [x0]
0000000000026774	ldr	x9, [x8, #0x110]
0000000000026778	add	x10, sp, #0x8
000000000002677c	str	x10, [x8, #0x110]
0000000000026780	mov	x8, #0x300000000
0000000000026784	stp	x9, x8, [sp, #0x10]
0000000000026788	adr	x22, #0x6db01
000000000002678c	nop
0000000000026790	ldarb	w8, [x22]
0000000000026794	tbz	w8, #0x0, 0x2679c
0000000000026798	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002679c	mov	x0, x20
00000000000267a0	bl	_Kotlin_ObjCExport_refToLocalObjC
00000000000267a4	mov	x2, x0
00000000000267a8	nop
00000000000267ac	ldr	x1, #0x5012c ; Objc selector ref: hash
00000000000267b0	mov	x0, x19
00000000000267b4	blr	x21
00000000000267b8	ldr	x8, [x0]
00000000000267bc	add	x8, x8, #0x138
00000000000267c0	mov	w9, #0x1
00000000000267c4	ldaxr	wzr, [x8]
00000000000267c8	stlxr	w10, w9, [x8]
00000000000267cc	cbnz	w10, 0x267c4
00000000000267d0	mov	x0, x2
00000000000267d4	bl	0x55584 ; Objc message: -[x0 hash]
00000000000267d8	mov	x20, x0
00000000000267dc	mov	x0, x19
00000000000267e0	blr	x21
00000000000267e4	ldr	x8, [x0]
00000000000267e8	add	x0, x8, #0x138
00000000000267ec	ldaxr	w8, [x0]
00000000000267f0	stlxr	w9, wzr, [x0]
00000000000267f4	cbnz	w9, 0x267ec
00000000000267f8	cmp	w8, #0x1
00000000000267fc	b.ne	0x2680c
0000000000026800	ldarb	w8, [x22]
0000000000026804	tbz	w8, #0x0, 0x2680c
0000000000026808	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002680c	lsr	x8, x20, #32
0000000000026810	eor	w8, w20, w8
0000000000026814	mov	x0, x19
0000000000026818	blr	x21
000000000002681c	ldr	x9, [x0]
0000000000026820	ldr	x10, [sp, #0x10]
0000000000026824	str	x10, [x9, #0x110]
0000000000026828	mov	x0, x8
000000000002682c	ldp	x29, x30, [sp, #0x40]
0000000000026830	ldp	x20, x19, [sp, #0x30]
0000000000026834	ldp	x22, x21, [sp, #0x20]
0000000000026838	add	sp, sp, #0x50
000000000002683c	ret
0000000000026840	mov	x1, x0
0000000000026844	mov	x0, x19
0000000000026848	blr	x21
000000000002684c	ldr	x8, [x0]
0000000000026850	add	x9, sp, #0x8
0000000000026854	str	x9, [x8, #0x110]
0000000000026858	mov	x0, x1
000000000002685c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000026860	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000026864	b	0x26864
_kotlin2objc_kfun:kotlin.Any#toString(){}kotlin.String:
0000000000026868	sub	sp, sp, #0x60
000000000002686c	stp	x24, x23, [sp, #0x20]
0000000000026870	stp	x22, x21, [sp, #0x30]
0000000000026874	stp	x20, x19, [sp, #0x40]
0000000000026878	stp	x29, x30, [sp, #0x50]
000000000002687c	add	x29, sp, #0x50
0000000000026880	mov	x19, x1
0000000000026884	mov	x21, x0
0000000000026888	movi.16b	v0, #0x0
000000000002688c	stp	q0, q0, [sp]
0000000000026890	mov	x22, sp
0000000000026894	adrp	x20, 84 ; 0x7a000
0000000000026898	add	x20, x20, #0x2c0
000000000002689c	ldr	x23, [x20]
00000000000268a0	mov	x0, x20
00000000000268a4	blr	x23
00000000000268a8	ldr	x8, [x0]
00000000000268ac	ldr	x9, [x8, #0x110]
00000000000268b0	str	x22, [x8, #0x110]
00000000000268b4	mov	x8, #0x400000000
00000000000268b8	stp	x9, x8, [sp, #0x8]
00000000000268bc	adr	x24, #0x6d9cd
00000000000268c0	nop
00000000000268c4	ldarb	w8, [x24]
00000000000268c8	tbz	w8, #0x0, 0x268d0
00000000000268cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000268d0	mov	x0, x21
00000000000268d4	bl	_Kotlin_ObjCExport_refToLocalObjC
00000000000268d8	mov	x2, x0
00000000000268dc	add	x22, x22, #0x18
00000000000268e0	nop
00000000000268e4	ldr	x1, #0x4ffbc ; Objc selector ref: description
00000000000268e8	mov	x0, x20
00000000000268ec	blr	x23
00000000000268f0	ldr	x8, [x0]
00000000000268f4	add	x8, x8, #0x138
00000000000268f8	mov	w9, #0x1
00000000000268fc	ldaxr	wzr, [x8]
0000000000026900	stlxr	w10, w9, [x8]
0000000000026904	cbnz	w10, 0x268fc
0000000000026908	mov	x0, x2
000000000002690c	bl	0x26a20
0000000000026910	mov	x21, x0
0000000000026914	mov	x0, x20
0000000000026918	blr	x23
000000000002691c	ldr	x8, [x0]
0000000000026920	add	x0, x8, #0x138
0000000000026924	ldaxr	w8, [x0]
0000000000026928	stlxr	w9, wzr, [x0]
000000000002692c	cbnz	w9, 0x26924
0000000000026930	cmp	w8, #0x1
0000000000026934	b.ne	0x26944
0000000000026938	ldarb	w8, [x24]
000000000002693c	tbz	w8, #0x0, 0x26944
0000000000026940	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026944	cbz	x21, 0x26964
0000000000026948	nop
000000000002694c	ldr	x1, #0x6db8c
0000000000026950	mov	x0, x21
0000000000026954	mov	x2, x22
0000000000026958	bl	0x55584 ; Objc message: -[x0 description]
000000000002695c	mov	x22, x0
0000000000026960	b	0x2696c
0000000000026964	mov	x22, #0x0
0000000000026968	str	xzr, [sp, #0x18]
000000000002696c	mov	x0, x20
0000000000026970	blr	x23
0000000000026974	ldr	x8, [x0]
0000000000026978	add	x8, x8, #0x138
000000000002697c	mov	w9, #0x1
0000000000026980	ldaxr	wzr, [x8]
0000000000026984	stlxr	w10, w9, [x8]
0000000000026988	cbnz	w10, 0x26980
000000000002698c	mov	x0, x21
0000000000026990	bl	0x555a8 ; symbol stub for: _objc_release
0000000000026994	mov	x0, x20
0000000000026998	blr	x23
000000000002699c	ldr	x8, [x0]
00000000000269a0	add	x0, x8, #0x138
00000000000269a4	ldaxr	w8, [x0]
00000000000269a8	stlxr	w9, wzr, [x0]
00000000000269ac	cbnz	w9, 0x269a4
00000000000269b0	cmp	w8, #0x1
00000000000269b4	b.ne	0x269c4
00000000000269b8	ldarb	w8, [x24]
00000000000269bc	tbz	w8, #0x0, 0x269c4
00000000000269c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000269c4	str	x22, [x19]
00000000000269c8	mov	x0, x20
00000000000269cc	blr	x23
00000000000269d0	ldr	x8, [x0]
00000000000269d4	ldr	x9, [sp, #0x8]
00000000000269d8	str	x9, [x8, #0x110]
00000000000269dc	mov	x0, x22
00000000000269e0	ldp	x29, x30, [sp, #0x50]
00000000000269e4	ldp	x20, x19, [sp, #0x40]
00000000000269e8	ldp	x22, x21, [sp, #0x30]
00000000000269ec	ldp	x24, x23, [sp, #0x20]
00000000000269f0	add	sp, sp, #0x60
00000000000269f4	ret
00000000000269f8	mov	x1, x0
00000000000269fc	mov	x0, x20
0000000000026a00	blr	x23
0000000000026a04	ldr	x8, [x0]
0000000000026a08	mov	x9, sp
0000000000026a0c	str	x9, [x8, #0x110]
0000000000026a10	mov	x0, x1
0000000000026a14	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000026a18	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000026a1c	b	0x26a1c
0000000000026a20	stp	x29, x30, [sp, #-0x10]!
0000000000026a24	mov	x29, sp
0000000000026a28	bl	0x55584 ; Objc message: -[x0 description]
0000000000026a2c	mov	x29, x29
0000000000026a30	ldp	x29, x30, [sp], #0x10
0000000000026a34	b	0x555c0 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_kotlin2objc_kfun:kotlin.collections.Iterator#next(){}1:0:
0000000000026a38	sub	sp, sp, #0x60
0000000000026a3c	stp	x24, x23, [sp, #0x20]
0000000000026a40	stp	x22, x21, [sp, #0x30]
0000000000026a44	stp	x20, x19, [sp, #0x40]
0000000000026a48	stp	x29, x30, [sp, #0x50]
0000000000026a4c	add	x29, sp, #0x50
0000000000026a50	mov	x19, x1
0000000000026a54	mov	x21, x0
0000000000026a58	movi.16b	v0, #0x0
0000000000026a5c	stp	q0, q0, [sp]
0000000000026a60	mov	x22, sp
0000000000026a64	adrp	x20, 84 ; 0x7a000
0000000000026a68	add	x20, x20, #0x2c0
0000000000026a6c	ldr	x23, [x20]
0000000000026a70	mov	x0, x20
0000000000026a74	blr	x23
0000000000026a78	ldr	x8, [x0]
0000000000026a7c	ldr	x9, [x8, #0x110]
0000000000026a80	str	x22, [x8, #0x110]
0000000000026a84	mov	x8, #0x400000000
0000000000026a88	stp	x9, x8, [sp, #0x8]
0000000000026a8c	adr	x24, #0x6d7fd
0000000000026a90	nop
0000000000026a94	ldarb	w8, [x24]
0000000000026a98	tbz	w8, #0x0, 0x26aa0
0000000000026a9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026aa0	mov	x0, x21
0000000000026aa4	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000026aa8	mov	x2, x0
0000000000026aac	add	x22, x22, #0x18
0000000000026ab0	nop
0000000000026ab4	ldr	x1, #0x4ff24 ; Objc selector ref: next
0000000000026ab8	mov	x0, x20
0000000000026abc	blr	x23
0000000000026ac0	ldr	x8, [x0]
0000000000026ac4	add	x8, x8, #0x138
0000000000026ac8	mov	w9, #0x1
0000000000026acc	ldaxr	wzr, [x8]
0000000000026ad0	stlxr	w10, w9, [x8]
0000000000026ad4	cbnz	w10, 0x26acc
0000000000026ad8	mov	x0, x2
0000000000026adc	bl	0x26bf0
0000000000026ae0	mov	x21, x0
0000000000026ae4	mov	x0, x20
0000000000026ae8	blr	x23
0000000000026aec	ldr	x8, [x0]
0000000000026af0	add	x0, x8, #0x138
0000000000026af4	ldaxr	w8, [x0]
0000000000026af8	stlxr	w9, wzr, [x0]
0000000000026afc	cbnz	w9, 0x26af4
0000000000026b00	cmp	w8, #0x1
0000000000026b04	b.ne	0x26b14
0000000000026b08	ldarb	w8, [x24]
0000000000026b0c	tbz	w8, #0x0, 0x26b14
0000000000026b10	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026b14	cbz	x21, 0x26b34
0000000000026b18	nop
0000000000026b1c	ldr	x1, #0x6d9bc
0000000000026b20	mov	x0, x21
0000000000026b24	mov	x2, x22
0000000000026b28	bl	0x55584 ; Objc message: -[x0 next]
0000000000026b2c	mov	x22, x0
0000000000026b30	b	0x26b3c
0000000000026b34	mov	x22, #0x0
0000000000026b38	str	xzr, [sp, #0x18]
0000000000026b3c	mov	x0, x20
0000000000026b40	blr	x23
0000000000026b44	ldr	x8, [x0]
0000000000026b48	add	x8, x8, #0x138
0000000000026b4c	mov	w9, #0x1
0000000000026b50	ldaxr	wzr, [x8]
0000000000026b54	stlxr	w10, w9, [x8]
0000000000026b58	cbnz	w10, 0x26b50
0000000000026b5c	mov	x0, x21
0000000000026b60	bl	0x555a8 ; symbol stub for: _objc_release
0000000000026b64	mov	x0, x20
0000000000026b68	blr	x23
0000000000026b6c	ldr	x8, [x0]
0000000000026b70	add	x0, x8, #0x138
0000000000026b74	ldaxr	w8, [x0]
0000000000026b78	stlxr	w9, wzr, [x0]
0000000000026b7c	cbnz	w9, 0x26b74
0000000000026b80	cmp	w8, #0x1
0000000000026b84	b.ne	0x26b94
0000000000026b88	ldarb	w8, [x24]
0000000000026b8c	tbz	w8, #0x0, 0x26b94
0000000000026b90	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026b94	str	x22, [x19]
0000000000026b98	mov	x0, x20
0000000000026b9c	blr	x23
0000000000026ba0	ldr	x8, [x0]
0000000000026ba4	ldr	x9, [sp, #0x8]
0000000000026ba8	str	x9, [x8, #0x110]
0000000000026bac	mov	x0, x22
0000000000026bb0	ldp	x29, x30, [sp, #0x50]
0000000000026bb4	ldp	x20, x19, [sp, #0x40]
0000000000026bb8	ldp	x22, x21, [sp, #0x30]
0000000000026bbc	ldp	x24, x23, [sp, #0x20]
0000000000026bc0	add	sp, sp, #0x60
0000000000026bc4	ret
0000000000026bc8	mov	x1, x0
0000000000026bcc	mov	x0, x20
0000000000026bd0	blr	x23
0000000000026bd4	ldr	x8, [x0]
0000000000026bd8	mov	x9, sp
0000000000026bdc	str	x9, [x8, #0x110]
0000000000026be0	mov	x0, x1
0000000000026be4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000026be8	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000026bec	b	0x26bec
0000000000026bf0	stp	x29, x30, [sp, #-0x10]!
0000000000026bf4	mov	x29, sp
0000000000026bf8	bl	0x55584 ; Objc message: -[x0 next]
0000000000026bfc	mov	x29, x29
0000000000026c00	ldp	x29, x30, [sp], #0x10
0000000000026c04	b	0x555c0 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_kotlin2objc_kfun:kotlin.collections.Iterator#hasNext(){}kotlin.Boolean:
0000000000026c08	sub	sp, sp, #0x50
0000000000026c0c	stp	x22, x21, [sp, #0x20]
0000000000026c10	stp	x20, x19, [sp, #0x30]
0000000000026c14	stp	x29, x30, [sp, #0x40]
0000000000026c18	add	x29, sp, #0x40
0000000000026c1c	mov	x20, x0
0000000000026c20	str	xzr, [sp, #0x8]
0000000000026c24	adrp	x19, 84 ; 0x7a000
0000000000026c28	add	x19, x19, #0x2c0
0000000000026c2c	ldr	x21, [x19]
0000000000026c30	mov	x0, x19
0000000000026c34	blr	x21
0000000000026c38	ldr	x8, [x0]
0000000000026c3c	ldr	x9, [x8, #0x110]
0000000000026c40	add	x10, sp, #0x8
0000000000026c44	str	x10, [x8, #0x110]
0000000000026c48	mov	x8, #0x300000000
0000000000026c4c	stp	x9, x8, [sp, #0x10]
0000000000026c50	adr	x22, #0x6d639
0000000000026c54	nop
0000000000026c58	ldarb	w8, [x22]
0000000000026c5c	tbz	w8, #0x0, 0x26c64
0000000000026c60	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026c64	mov	x0, x20
0000000000026c68	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000026c6c	mov	x2, x0
0000000000026c70	nop
0000000000026c74	ldr	x1, #0x4fc5c ; Objc selector ref: hasNext
0000000000026c78	mov	x0, x19
0000000000026c7c	blr	x21
0000000000026c80	ldr	x8, [x0]
0000000000026c84	add	x8, x8, #0x138
0000000000026c88	mov	w9, #0x1
0000000000026c8c	ldaxr	wzr, [x8]
0000000000026c90	stlxr	w10, w9, [x8]
0000000000026c94	cbnz	w10, 0x26c8c
0000000000026c98	mov	x0, x2
0000000000026c9c	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000026ca0	mov	x20, x0
0000000000026ca4	mov	x0, x19
0000000000026ca8	blr	x21
0000000000026cac	ldr	x8, [x0]
0000000000026cb0	add	x0, x8, #0x138
0000000000026cb4	ldaxr	w8, [x0]
0000000000026cb8	stlxr	w9, wzr, [x0]
0000000000026cbc	cbnz	w9, 0x26cb4
0000000000026cc0	cmp	w8, #0x1
0000000000026cc4	b.ne	0x26cd4
0000000000026cc8	ldarb	w8, [x22]
0000000000026ccc	tbz	w8, #0x0, 0x26cd4
0000000000026cd0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026cd4	cmp	w20, #0x0
0000000000026cd8	cset	w8, ne
0000000000026cdc	mov	x0, x19
0000000000026ce0	blr	x21
0000000000026ce4	ldr	x9, [x0]
0000000000026ce8	ldr	x10, [sp, #0x10]
0000000000026cec	str	x10, [x9, #0x110]
0000000000026cf0	mov	x0, x8
0000000000026cf4	ldp	x29, x30, [sp, #0x40]
0000000000026cf8	ldp	x20, x19, [sp, #0x30]
0000000000026cfc	ldp	x22, x21, [sp, #0x20]
0000000000026d00	add	sp, sp, #0x50
0000000000026d04	ret
0000000000026d08	mov	x1, x0
0000000000026d0c	mov	x0, x19
0000000000026d10	blr	x21
0000000000026d14	ldr	x8, [x0]
0000000000026d18	add	x9, sp, #0x8
0000000000026d1c	str	x9, [x8, #0x110]
0000000000026d20	mov	x0, x1
0000000000026d24	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000026d28	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000026d2c	b	0x26d2c
_kotlin2objc_kfun:kotlin.collections.ByteIterator#nextByte(){}kotlin.Byte:
0000000000026d30	sub	sp, sp, #0x50
0000000000026d34	stp	x22, x21, [sp, #0x20]
0000000000026d38	stp	x20, x19, [sp, #0x30]
0000000000026d3c	stp	x29, x30, [sp, #0x40]
0000000000026d40	add	x29, sp, #0x40
0000000000026d44	mov	x20, x0
0000000000026d48	str	xzr, [sp, #0x8]
0000000000026d4c	adrp	x19, 84 ; 0x7a000
0000000000026d50	add	x19, x19, #0x2c0
0000000000026d54	ldr	x21, [x19]
0000000000026d58	mov	x0, x19
0000000000026d5c	blr	x21
0000000000026d60	ldr	x8, [x0]
0000000000026d64	ldr	x9, [x8, #0x110]
0000000000026d68	add	x10, sp, #0x8
0000000000026d6c	str	x10, [x8, #0x110]
0000000000026d70	mov	x8, #0x300000000
0000000000026d74	stp	x9, x8, [sp, #0x10]
0000000000026d78	adr	x22, #0x6d511
0000000000026d7c	nop
0000000000026d80	ldarb	w8, [x22]
0000000000026d84	tbz	w8, #0x0, 0x26d8c
0000000000026d88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026d8c	mov	x0, x20
0000000000026d90	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000026d94	mov	x2, x0
0000000000026d98	nop
0000000000026d9c	ldr	x1, #0x4fc44 ; Objc selector ref: nextByte
0000000000026da0	mov	x0, x19
0000000000026da4	blr	x21
0000000000026da8	ldr	x8, [x0]
0000000000026dac	add	x8, x8, #0x138
0000000000026db0	mov	w9, #0x1
0000000000026db4	ldaxr	wzr, [x8]
0000000000026db8	stlxr	w10, w9, [x8]
0000000000026dbc	cbnz	w10, 0x26db4
0000000000026dc0	mov	x0, x2
0000000000026dc4	bl	0x55584 ; Objc message: -[x0 nextByte]
0000000000026dc8	mov	x20, x0
0000000000026dcc	mov	x0, x19
0000000000026dd0	blr	x21
0000000000026dd4	ldr	x8, [x0]
0000000000026dd8	add	x0, x8, #0x138
0000000000026ddc	ldaxr	w8, [x0]
0000000000026de0	stlxr	w9, wzr, [x0]
0000000000026de4	cbnz	w9, 0x26ddc
0000000000026de8	cmp	w8, #0x1
0000000000026dec	b.ne	0x26dfc
0000000000026df0	ldarb	w8, [x22]
0000000000026df4	tbz	w8, #0x0, 0x26dfc
0000000000026df8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026dfc	mov	x0, x19
0000000000026e00	blr	x21
0000000000026e04	ldr	x8, [x0]
0000000000026e08	ldr	x9, [sp, #0x10]
0000000000026e0c	str	x9, [x8, #0x110]
0000000000026e10	mov	x0, x20
0000000000026e14	ldp	x29, x30, [sp, #0x40]
0000000000026e18	ldp	x20, x19, [sp, #0x30]
0000000000026e1c	ldp	x22, x21, [sp, #0x20]
0000000000026e20	add	sp, sp, #0x50
0000000000026e24	ret
0000000000026e28	mov	x1, x0
0000000000026e2c	mov	x0, x19
0000000000026e30	blr	x21
0000000000026e34	ldr	x8, [x0]
0000000000026e38	add	x9, sp, #0x8
0000000000026e3c	str	x9, [x8, #0x110]
0000000000026e40	mov	x0, x1
0000000000026e44	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000026e48	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000026e4c	b	0x26e4c
_kotlin2objc_kfun:kotlin.collections.Iterator#hasNext(){}kotlin.Boolean.71:
0000000000026e50	sub	sp, sp, #0x50
0000000000026e54	stp	x22, x21, [sp, #0x20]
0000000000026e58	stp	x20, x19, [sp, #0x30]
0000000000026e5c	stp	x29, x30, [sp, #0x40]
0000000000026e60	add	x29, sp, #0x40
0000000000026e64	mov	x20, x0
0000000000026e68	str	xzr, [sp, #0x8]
0000000000026e6c	adrp	x19, 84 ; 0x7a000
0000000000026e70	add	x19, x19, #0x2c0
0000000000026e74	ldr	x21, [x19]
0000000000026e78	mov	x0, x19
0000000000026e7c	blr	x21
0000000000026e80	ldr	x8, [x0]
0000000000026e84	ldr	x9, [x8, #0x110]
0000000000026e88	add	x10, sp, #0x8
0000000000026e8c	str	x10, [x8, #0x110]
0000000000026e90	mov	x8, #0x300000000
0000000000026e94	stp	x9, x8, [sp, #0x10]
0000000000026e98	adr	x22, #0x6d3f1
0000000000026e9c	nop
0000000000026ea0	ldarb	w8, [x22]
0000000000026ea4	tbz	w8, #0x0, 0x26eac
0000000000026ea8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026eac	mov	x0, x20
0000000000026eb0	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000026eb4	mov	x2, x0
0000000000026eb8	nop
0000000000026ebc	ldr	x1, #0x4fa14 ; Objc selector ref: hasNext
0000000000026ec0	mov	x0, x19
0000000000026ec4	blr	x21
0000000000026ec8	ldr	x8, [x0]
0000000000026ecc	add	x8, x8, #0x138
0000000000026ed0	mov	w9, #0x1
0000000000026ed4	ldaxr	wzr, [x8]
0000000000026ed8	stlxr	w10, w9, [x8]
0000000000026edc	cbnz	w10, 0x26ed4
0000000000026ee0	mov	x0, x2
0000000000026ee4	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000026ee8	mov	x20, x0
0000000000026eec	mov	x0, x19
0000000000026ef0	blr	x21
0000000000026ef4	ldr	x8, [x0]
0000000000026ef8	add	x0, x8, #0x138
0000000000026efc	ldaxr	w8, [x0]
0000000000026f00	stlxr	w9, wzr, [x0]
0000000000026f04	cbnz	w9, 0x26efc
0000000000026f08	cmp	w8, #0x1
0000000000026f0c	b.ne	0x26f1c
0000000000026f10	ldarb	w8, [x22]
0000000000026f14	tbz	w8, #0x0, 0x26f1c
0000000000026f18	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026f1c	cmp	w20, #0x0
0000000000026f20	cset	w8, ne
0000000000026f24	mov	x0, x19
0000000000026f28	blr	x21
0000000000026f2c	ldr	x9, [x0]
0000000000026f30	ldr	x10, [sp, #0x10]
0000000000026f34	str	x10, [x9, #0x110]
0000000000026f38	mov	x0, x8
0000000000026f3c	ldp	x29, x30, [sp, #0x40]
0000000000026f40	ldp	x20, x19, [sp, #0x30]
0000000000026f44	ldp	x22, x21, [sp, #0x20]
0000000000026f48	add	sp, sp, #0x50
0000000000026f4c	ret
0000000000026f50	mov	x1, x0
0000000000026f54	mov	x0, x19
0000000000026f58	blr	x21
0000000000026f5c	ldr	x8, [x0]
0000000000026f60	add	x9, sp, #0x8
0000000000026f64	str	x9, [x8, #0x110]
0000000000026f68	mov	x0, x1
0000000000026f6c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000026f70	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000026f74	b	0x26f74
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#<init>(){}:
0000000000026f78	stp	x28, x27, [sp, #-0x60]!
0000000000026f7c	stp	x26, x25, [sp, #0x10]
0000000000026f80	stp	x24, x23, [sp, #0x20]
0000000000026f84	stp	x22, x21, [sp, #0x30]
0000000000026f88	stp	x20, x19, [sp, #0x40]
0000000000026f8c	stp	x29, x30, [sp, #0x50]
0000000000026f90	add	x29, sp, #0x50
0000000000026f94	sub	sp, sp, #0x2e0
0000000000026f98	mov	x19, x0
0000000000026f9c	str	xzr, [sp, #0x20]
0000000000026fa0	movi.16b	v0, #0x0
0000000000026fa4	stp	q0, q0, [sp]
0000000000026fa8	mov	x8, sp
0000000000026fac	add	x20, x8, #0x18
0000000000026fb0	bl	_Kotlin_initRuntimeIfNeeded
0000000000026fb4	adrp	x21, 84 ; 0x7a000
0000000000026fb8	add	x21, x21, #0x2c0
0000000000026fbc	ldr	x22, [x21]
0000000000026fc0	mov	x0, x21
0000000000026fc4	blr	x22
0000000000026fc8	ldr	x8, [x0]
0000000000026fcc	add	x0, x8, #0x138
0000000000026fd0	ldaxr	w8, [x0]
0000000000026fd4	stlxr	w9, wzr, [x0]
0000000000026fd8	cbnz	w9, 0x26fd0
0000000000026fdc	adr	x23, #0x6d2ad
0000000000026fe0	nop
0000000000026fe4	cmp	w8, #0x1
0000000000026fe8	b.ne	0x26ff8
0000000000026fec	ldarb	w8, [x23]
0000000000026ff0	tbz	w8, #0x0, 0x26ff8
0000000000026ff4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026ff8	mov	x0, x21
0000000000026ffc	blr	x22
0000000000027000	ldr	x8, [x0]
0000000000027004	ldr	x9, [x8, #0x110]
0000000000027008	mov	x10, sp
000000000002700c	str	x10, [x8, #0x110]
0000000000027010	mov	x8, #0x500000000
0000000000027014	stp	x9, x8, [sp, #0x8]
0000000000027018	ldarb	w8, [x23]
000000000002701c	tbz	w8, #0x0, 0x27024
0000000000027020	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027024	cbz	x19, 0x27044
0000000000027028	nop
000000000002702c	ldr	x1, #0x6d4ac
0000000000027030	mov	x0, x19
0000000000027034	mov	x2, x20
0000000000027038	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002703c	mov	x20, x0
0000000000027040	b	0x2704c
0000000000027044	mov	x20, #0x0
0000000000027048	str	xzr, [sp, #0x18]
000000000002704c	add	x24, sp, #0x30
0000000000027050	add	x0, sp, #0x30
0000000000027054	mov	w1, #0x2b0
0000000000027058	bl	0x553c8 ; symbol stub for: _bzero
000000000002705c	mov	x0, x21
0000000000027060	blr	x22
0000000000027064	ldr	x8, [x0]
0000000000027068	ldr	x9, [x8, #0x110]
000000000002706c	str	x24, [x8, #0x110]
0000000000027070	mov	x8, #0x5600000000
0000000000027074	stp	x9, x8, [sp, #0x38]
0000000000027078	ldarb	w8, [x23]
000000000002707c	tbz	w8, #0x0, 0x27084
0000000000027080	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027084	mov	x8, #0x22c0
0000000000027088	movk	x8, #0x2, lsl #16
000000000002708c	movk	x8, #0xf25, lsl #32
0000000000027090	mov	x9, #0x7385
0000000000027094	movk	x9, #0x3c, lsl #32
0000000000027098	stp	x8, x9, [x20, #0x28]
000000000002709c	mov	w8, #0xf400
00000000000270a0	str	w8, [x20, #0x38]
00000000000270a4	mov	x0, x21
00000000000270a8	blr	x22
00000000000270ac	mov	x21, x0
00000000000270b0	ldr	x8, [x0]
00000000000270b4	ldr	x8, [x8, #0x118]
00000000000270b8	add	x0, x8, #0x70
00000000000270bc	mov	w1, #0x10
00000000000270c0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000270c4	adr	x8, #0x3e97c
00000000000270c8	nop
00000000000270cc	str	x8, [x0, #0x10]!
00000000000270d0	stur	xzr, [x0, #-0x8]
00000000000270d4	str	x0, [sp, #0x48]
00000000000270d8	mov	w8, #0x2a
00000000000270dc	adr	x9, #0x47c54
00000000000270e0	nop
00000000000270e4	str	w8, [x20, #0x3c]
00000000000270e8	stp	x0, x9, [x20, #0x8]
00000000000270ec	ldr	x8, [x21]
00000000000270f0	ldr	x8, [x8, #0x118]
00000000000270f4	add	x0, x8, #0x70
00000000000270f8	mov	w1, #0x20
00000000000270fc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027100	adr	x22, #0x3e8b0
0000000000027104	nop
0000000000027108	str	x22, [x0, #0x10]!
000000000002710c	stur	xzr, [x0, #-0x8]
0000000000027110	str	x0, [sp, #0x50]
0000000000027114	mov	x26, #0xe148
0000000000027118	movk	x26, #0x147a, lsl #16
000000000002711c	movk	x26, #0x47ae, lsl #32
0000000000027120	movk	x26, #0x3fd1, lsl #48
0000000000027124	str	x26, [x0, #0x8]
0000000000027128	mov	w23, #0x61
000000000002712c	strb	w23, [x0, #0x10]
0000000000027130	str	x0, [sp, #0x58]
0000000000027134	ldr	x8, [x21]
0000000000027138	ldr	x8, [x8, #0x118]
000000000002713c	add	x0, x8, #0x70
0000000000027140	mov	w1, #0x20
0000000000027144	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027148	str	x22, [x0, #0x10]!
000000000002714c	stur	xzr, [x0, #-0x8]
0000000000027150	str	x0, [sp, #0x60]
0000000000027154	mov	x25, #0x1eb8
0000000000027158	movk	x25, #0xeb85, lsl #16
000000000002715c	movk	x25, #0xb851, lsl #32
0000000000027160	movk	x25, #0x3fbe, lsl #48
0000000000027164	str	x25, [x0, #0x8]
0000000000027168	mov	w24, #0x63
000000000002716c	strb	w24, [x0, #0x10]
0000000000027170	str	x0, [sp, #0x68]
0000000000027174	ldr	x8, [x21]
0000000000027178	ldr	x8, [x8, #0x118]
000000000002717c	add	x0, x8, #0x70
0000000000027180	mov	w1, #0x20
0000000000027184	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027188	str	x22, [x0, #0x10]!
000000000002718c	stur	xzr, [x0, #-0x8]
0000000000027190	str	x0, [sp, #0x70]
0000000000027194	str	x25, [x0, #0x8]
0000000000027198	mov	w25, #0x67
000000000002719c	strb	w25, [x0, #0x10]
00000000000271a0	str	x0, [sp, #0x78]
00000000000271a4	ldr	x8, [x21]
00000000000271a8	ldr	x8, [x8, #0x118]
00000000000271ac	add	x0, x8, #0x70
00000000000271b0	mov	w1, #0x20
00000000000271b4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000271b8	str	x22, [x0, #0x10]!
00000000000271bc	stur	xzr, [x0, #-0x8]
00000000000271c0	str	x0, [sp, #0x80]
00000000000271c4	str	x26, [x0, #0x8]
00000000000271c8	mov	w26, #0x74
00000000000271cc	strb	w26, [x0, #0x10]
00000000000271d0	str	x0, [sp, #0x88]
00000000000271d4	ldr	x8, [x21]
00000000000271d8	ldr	x8, [x8, #0x118]
00000000000271dc	add	x0, x8, #0x70
00000000000271e0	mov	w1, #0x20
00000000000271e4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000271e8	str	x22, [x0, #0x10]!
00000000000271ec	stur	xzr, [x0, #-0x8]
00000000000271f0	str	x0, [sp, #0x90]
00000000000271f4	mov	x27, #0x147b
00000000000271f8	movk	x27, #0x47ae, lsl #16
00000000000271fc	movk	x27, #0x7ae1, lsl #32
0000000000027200	movk	x27, #0x3f94, lsl #48
0000000000027204	str	x27, [x0, #0x8]
0000000000027208	mov	w8, #0x42
000000000002720c	strb	w8, [x0, #0x10]
0000000000027210	str	x0, [sp, #0x98]
0000000000027214	ldr	x8, [x21]
0000000000027218	ldr	x8, [x8, #0x118]
000000000002721c	add	x0, x8, #0x70
0000000000027220	mov	w1, #0x20
0000000000027224	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027228	str	x22, [x0, #0x10]!
000000000002722c	stur	xzr, [x0, #-0x8]
0000000000027230	str	x0, [sp, #0xa0]
0000000000027234	str	x27, [x0, #0x8]
0000000000027238	mov	w8, #0x44
000000000002723c	strb	w8, [x0, #0x10]
0000000000027240	str	x0, [sp, #0xa8]
0000000000027244	ldr	x8, [x21]
0000000000027248	ldr	x8, [x8, #0x118]
000000000002724c	add	x0, x8, #0x70
0000000000027250	mov	w1, #0x20
0000000000027254	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027258	str	x22, [x0, #0x10]!
000000000002725c	stur	xzr, [x0, #-0x8]
0000000000027260	str	x0, [sp, #0xb0]
0000000000027264	str	x27, [x0, #0x8]
0000000000027268	mov	w8, #0x48
000000000002726c	strb	w8, [x0, #0x10]
0000000000027270	str	x0, [sp, #0xb8]
0000000000027274	ldr	x8, [x21]
0000000000027278	ldr	x8, [x8, #0x118]
000000000002727c	add	x0, x8, #0x70
0000000000027280	mov	w1, #0x20
0000000000027284	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027288	str	x22, [x0, #0x10]!
000000000002728c	stur	xzr, [x0, #-0x8]
0000000000027290	str	x0, [sp, #0xc0]
0000000000027294	str	x27, [x0, #0x8]
0000000000027298	mov	w8, #0x4b
000000000002729c	strb	w8, [x0, #0x10]
00000000000272a0	str	x0, [sp, #0xc8]
00000000000272a4	ldr	x8, [x21]
00000000000272a8	ldr	x8, [x8, #0x118]
00000000000272ac	add	x0, x8, #0x70
00000000000272b0	mov	w1, #0x20
00000000000272b4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000272b8	str	x22, [x0, #0x10]!
00000000000272bc	stur	xzr, [x0, #-0x8]
00000000000272c0	str	x0, [sp, #0xd0]
00000000000272c4	str	x27, [x0, #0x8]
00000000000272c8	mov	w8, #0x4d
00000000000272cc	strb	w8, [x0, #0x10]
00000000000272d0	str	x0, [sp, #0xd8]
00000000000272d4	ldr	x8, [x21]
00000000000272d8	ldr	x8, [x8, #0x118]
00000000000272dc	add	x0, x8, #0x70
00000000000272e0	mov	w1, #0x20
00000000000272e4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000272e8	str	x22, [x0, #0x10]!
00000000000272ec	stur	xzr, [x0, #-0x8]
00000000000272f0	str	x0, [sp, #0xe0]
00000000000272f4	str	x27, [x0, #0x8]
00000000000272f8	mov	w8, #0x4e
00000000000272fc	strb	w8, [x0, #0x10]
0000000000027300	str	x0, [sp, #0xe8]
0000000000027304	ldr	x8, [x21]
0000000000027308	ldr	x8, [x8, #0x118]
000000000002730c	add	x0, x8, #0x70
0000000000027310	mov	w1, #0x20
0000000000027314	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027318	str	x22, [x0, #0x10]!
000000000002731c	stur	xzr, [x0, #-0x8]
0000000000027320	str	x0, [sp, #0xf0]
0000000000027324	str	x27, [x0, #0x8]
0000000000027328	mov	w8, #0x52
000000000002732c	strb	w8, [x0, #0x10]
0000000000027330	str	x0, [sp, #0xf8]
0000000000027334	ldr	x8, [x21]
0000000000027338	ldr	x8, [x8, #0x118]
000000000002733c	add	x0, x8, #0x70
0000000000027340	mov	w1, #0x20
0000000000027344	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027348	str	x22, [x0, #0x10]!
000000000002734c	stur	xzr, [x0, #-0x8]
0000000000027350	str	x0, [sp, #0x100]
0000000000027354	str	x27, [x0, #0x8]
0000000000027358	mov	w8, #0x53
000000000002735c	strb	w8, [x0, #0x10]
0000000000027360	str	x0, [sp, #0x108]
0000000000027364	ldr	x8, [x21]
0000000000027368	ldr	x8, [x8, #0x118]
000000000002736c	add	x0, x8, #0x70
0000000000027370	mov	w1, #0x20
0000000000027374	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027378	str	x22, [x0, #0x10]!
000000000002737c	stur	xzr, [x0, #-0x8]
0000000000027380	str	x0, [sp, #0x110]
0000000000027384	str	x27, [x0, #0x8]
0000000000027388	mov	w8, #0x56
000000000002738c	strb	w8, [x0, #0x10]
0000000000027390	str	x0, [sp, #0x118]
0000000000027394	ldr	x8, [x21]
0000000000027398	ldr	x8, [x8, #0x118]
000000000002739c	add	x0, x8, #0x70
00000000000273a0	mov	w1, #0x20
00000000000273a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000273a8	str	x22, [x0, #0x10]!
00000000000273ac	stur	xzr, [x0, #-0x8]
00000000000273b0	str	x0, [sp, #0x120]
00000000000273b4	str	x27, [x0, #0x8]
00000000000273b8	mov	w8, #0x57
00000000000273bc	strb	w8, [x0, #0x10]
00000000000273c0	str	x0, [sp, #0x128]
00000000000273c4	ldr	x8, [x21]
00000000000273c8	ldr	x8, [x8, #0x118]
00000000000273cc	add	x0, x8, #0x70
00000000000273d0	mov	w1, #0x20
00000000000273d4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000273d8	str	x22, [x0, #0x10]!
00000000000273dc	stur	xzr, [x0, #-0x8]
00000000000273e0	str	x0, [sp, #0x130]
00000000000273e4	str	x27, [x0, #0x8]
00000000000273e8	mov	w8, #0x59
00000000000273ec	strb	w8, [x0, #0x10]
00000000000273f0	str	x0, [sp, #0x138]
00000000000273f4	ldr	x8, [x21]
00000000000273f8	ldr	x8, [x8, #0x118]
00000000000273fc	add	x0, x8, #0x70
0000000000027400	mov	w1, #0x90
0000000000027404	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027408	adr	x27, #0x39778
000000000002740c	nop
0000000000027410	stp	x27, xzr, [x0, #0x10]!
0000000000027414	stur	xzr, [x0, #-0x8]
0000000000027418	mov	w8, #0xf
000000000002741c	str	w8, [x0, #0x8]
0000000000027420	stp	x0, x0, [sp, #0x140]
0000000000027424	ldr	x8, [sp, #0x58]
0000000000027428	stp	x0, x8, [sp, #0x150]
000000000002742c	ldr	xzr, [x0]
0000000000027430	str	x8, [x0, #0x10]
0000000000027434	ldr	x8, [sp, #0x148]
0000000000027438	ldr	x9, [sp, #0x68]
000000000002743c	stp	x8, x9, [sp, #0x160]
0000000000027440	ldr	xzr, [x8]
0000000000027444	str	x9, [x8, #0x18]
0000000000027448	ldr	x8, [sp, #0x148]
000000000002744c	ldr	x9, [sp, #0x78]
0000000000027450	stp	x8, x9, [sp, #0x170]
0000000000027454	ldr	xzr, [x8]
0000000000027458	str	x9, [x8, #0x20]
000000000002745c	ldr	x8, [sp, #0x148]
0000000000027460	ldr	x9, [sp, #0x88]
0000000000027464	stp	x8, x9, [sp, #0x180]
0000000000027468	ldr	xzr, [x8]
000000000002746c	str	x9, [x8, #0x28]
0000000000027470	ldr	x8, [sp, #0x148]
0000000000027474	ldr	x9, [sp, #0x98]
0000000000027478	stp	x8, x9, [sp, #0x190]
000000000002747c	ldr	xzr, [x8]
0000000000027480	str	x9, [x8, #0x30]
0000000000027484	ldr	x8, [sp, #0x148]
0000000000027488	ldr	x9, [sp, #0xa8]
000000000002748c	stp	x8, x9, [sp, #0x1a0]
0000000000027490	ldr	xzr, [x8]
0000000000027494	str	x9, [x8, #0x38]
0000000000027498	ldr	x8, [sp, #0x148]
000000000002749c	ldr	x9, [sp, #0xb8]
00000000000274a0	stp	x8, x9, [sp, #0x1b0]
00000000000274a4	ldr	xzr, [x8]
00000000000274a8	str	x9, [x8, #0x40]
00000000000274ac	ldr	x8, [sp, #0x148]
00000000000274b0	ldr	x9, [sp, #0xc8]
00000000000274b4	stp	x8, x9, [sp, #0x1c0]
00000000000274b8	ldr	xzr, [x8]
00000000000274bc	str	x9, [x8, #0x48]
00000000000274c0	ldr	x8, [sp, #0x148]
00000000000274c4	ldr	x9, [sp, #0xd8]
00000000000274c8	stp	x8, x9, [sp, #0x1d0]
00000000000274cc	ldr	xzr, [x8]
00000000000274d0	str	x9, [x8, #0x50]
00000000000274d4	ldr	x8, [sp, #0x148]
00000000000274d8	ldr	x9, [sp, #0xe8]
00000000000274dc	stp	x8, x9, [sp, #0x1e0]
00000000000274e0	ldr	xzr, [x8]
00000000000274e4	str	x9, [x8, #0x58]
00000000000274e8	ldr	x8, [sp, #0x148]
00000000000274ec	ldr	x9, [sp, #0xf8]
00000000000274f0	stp	x8, x9, [sp, #0x1f0]
00000000000274f4	ldr	xzr, [x8]
00000000000274f8	str	x9, [x8, #0x60]
00000000000274fc	ldr	x8, [sp, #0x148]
0000000000027500	ldr	x9, [sp, #0x108]
0000000000027504	str	x8, [sp, #0x200]
0000000000027508	str	x9, [sp, #0x208]
000000000002750c	ldr	xzr, [x8]
0000000000027510	str	x9, [x8, #0x68]
0000000000027514	ldr	x8, [sp, #0x148]
0000000000027518	ldr	x9, [sp, #0x118]
000000000002751c	str	x8, [sp, #0x210]
0000000000027520	str	x9, [sp, #0x218]
0000000000027524	ldr	xzr, [x8]
0000000000027528	str	x9, [x8, #0x70]
000000000002752c	ldr	x8, [sp, #0x148]
0000000000027530	ldr	x9, [sp, #0x128]
0000000000027534	str	x8, [sp, #0x220]
0000000000027538	str	x9, [sp, #0x228]
000000000002753c	ldr	xzr, [x8]
0000000000027540	str	x9, [x8, #0x78]
0000000000027544	ldr	x8, [sp, #0x148]
0000000000027548	ldr	x9, [sp, #0x138]
000000000002754c	str	x8, [sp, #0x230]
0000000000027550	str	x9, [sp, #0x238]
0000000000027554	ldr	xzr, [x8]
0000000000027558	str	x9, [x8, #0x80]
000000000002755c	ldr	x8, [sp, #0x148]
0000000000027560	str	x8, [sp, #0x240]
0000000000027564	str	x8, [x20, #0x18]
0000000000027568	ldr	x8, [x21]
000000000002756c	ldr	x8, [x8, #0x118]
0000000000027570	add	x0, x8, #0x70
0000000000027574	mov	w1, #0x20
0000000000027578	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002757c	str	x22, [x0, #0x10]!
0000000000027580	stur	xzr, [x0, #-0x8]
0000000000027584	str	x0, [sp, #0x248]
0000000000027588	mov	x8, #0xeb5b
000000000002758c	movk	x8, #0x20ba, lsl #16
0000000000027590	movk	x8, #0x639d, lsl #32
0000000000027594	movk	x8, #0x3fd3, lsl #48
0000000000027598	str	x8, [x0, #0x8]
000000000002759c	strb	w23, [x0, #0x10]
00000000000275a0	str	x0, [sp, #0x250]
00000000000275a4	ldr	x8, [x21]
00000000000275a8	ldr	x8, [x8, #0x118]
00000000000275ac	add	x0, x8, #0x70
00000000000275b0	mov	w1, #0x20
00000000000275b4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000275b8	str	x22, [x0, #0x10]!
00000000000275bc	stur	xzr, [x0, #-0x8]
00000000000275c0	str	x0, [sp, #0x258]
00000000000275c4	mov	x8, #0x561b
00000000000275c8	movk	x8, #0x3dcd, lsl #16
00000000000275cc	movk	x8, #0x57ae, lsl #32
00000000000275d0	movk	x8, #0x3fc9, lsl #48
00000000000275d4	str	x8, [x0, #0x8]
00000000000275d8	strb	w24, [x0, #0x10]
00000000000275dc	str	x0, [sp, #0x260]
00000000000275e0	ldr	x8, [x21]
00000000000275e4	ldr	x8, [x8, #0x118]
00000000000275e8	add	x0, x8, #0x70
00000000000275ec	mov	w1, #0x20
00000000000275f0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000275f4	str	x22, [x0, #0x10]!
00000000000275f8	stur	xzr, [x0, #-0x8]
00000000000275fc	str	x0, [sp, #0x268]
0000000000027600	mov	x8, #0xc2bf
0000000000027604	movk	x8, #0xeab6, lsl #16
0000000000027608	movk	x8, #0x493a, lsl #32
000000000002760c	movk	x8, #0x3fc9, lsl #48
0000000000027610	str	x8, [x0, #0x8]
0000000000027614	strb	w25, [x0, #0x10]
0000000000027618	str	x0, [sp, #0x270]
000000000002761c	ldr	x8, [x21]
0000000000027620	ldr	x8, [x8, #0x118]
0000000000027624	add	x0, x8, #0x70
0000000000027628	mov	w1, #0x20
000000000002762c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027630	str	x22, [x0, #0x10]!
0000000000027634	stur	xzr, [x0, #-0x8]
0000000000027638	str	x0, [sp, #0x278]
000000000002763c	mov	x8, #0x838
0000000000027640	movk	x8, #0x4b03, lsl #16
0000000000027644	movk	x8, #0x4bee, lsl #32
0000000000027648	movk	x8, #0x3fd3, lsl #48
000000000002764c	str	x8, [x0, #0x8]
0000000000027650	strb	w26, [x0, #0x10]
0000000000027654	str	x0, [sp, #0x280]
0000000000027658	ldr	x8, [x21]
000000000002765c	ldr	x8, [x8, #0x118]
0000000000027660	add	x0, x8, #0x70
0000000000027664	mov	w1, #0x38
0000000000027668	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002766c	stp	x27, xzr, [x0, #0x10]!
0000000000027670	stur	xzr, [x0, #-0x8]
0000000000027674	mov	w8, #0x4
0000000000027678	str	w8, [x0, #0x8]
000000000002767c	str	x0, [sp, #0x288]
0000000000027680	str	x0, [sp, #0x290]
0000000000027684	str	x0, [sp, #0x298]
0000000000027688	ldr	x8, [sp, #0x250]
000000000002768c	str	x8, [sp, #0x2a0]
0000000000027690	ldr	xzr, [x0]
0000000000027694	str	x8, [x0, #0x10]
0000000000027698	ldr	x8, [sp, #0x290]
000000000002769c	str	x8, [sp, #0x2a8]
00000000000276a0	ldr	x9, [sp, #0x260]
00000000000276a4	str	x9, [sp, #0x2b0]
00000000000276a8	ldr	xzr, [x8]
00000000000276ac	str	x9, [x8, #0x18]
00000000000276b0	ldr	x8, [sp, #0x290]
00000000000276b4	str	x8, [sp, #0x2b8]
00000000000276b8	ldr	x9, [sp, #0x270]
00000000000276bc	str	x9, [sp, #0x2c0]
00000000000276c0	ldr	xzr, [x8]
00000000000276c4	str	x9, [x8, #0x20]
00000000000276c8	ldr	x8, [sp, #0x290]
00000000000276cc	str	x8, [sp, #0x2c8]
00000000000276d0	ldr	x9, [sp, #0x280]
00000000000276d4	str	x9, [sp, #0x2d0]
00000000000276d8	ldr	xzr, [x8]
00000000000276dc	str	x9, [x8, #0x28]
00000000000276e0	ldr	x8, [sp, #0x290]
00000000000276e4	ldr	x9, [sp, #0x38]
00000000000276e8	str	x8, [sp, #0x2d8]
00000000000276ec	str	x8, [x20, #0x20]
00000000000276f0	ldr	x8, [x21]
00000000000276f4	str	x9, [x8, #0x110]
00000000000276f8	ldr	x9, [sp, #0x8]
00000000000276fc	str	x9, [x8, #0x110]
0000000000027700	add	x8, x8, #0x138
0000000000027704	mov	w9, #0x1
0000000000027708	ldaxr	wzr, [x8]
000000000002770c	stlxr	w10, w9, [x8]
0000000000027710	cbnz	w10, 0x27708
0000000000027714	mov	x0, x19
0000000000027718	add	sp, sp, #0x2e0
000000000002771c	ldp	x29, x30, [sp, #0x50]
0000000000027720	ldp	x20, x19, [sp, #0x40]
0000000000027724	ldp	x22, x21, [sp, #0x30]
0000000000027728	ldp	x24, x23, [sp, #0x20]
000000000002772c	ldp	x26, x25, [sp, #0x10]
0000000000027730	ldp	x28, x27, [sp], #0x60
0000000000027734	ret
0000000000027738	mov	x1, x0
000000000002773c	mov	x0, x21
0000000000027740	blr	x22
0000000000027744	ldr	x8, [x0]
0000000000027748	mov	x9, sp
000000000002774c	str	x9, [x8, #0x110]
0000000000027750	mov	x0, x1
0000000000027754	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000027758	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002775c	b	0x2775c
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#accumulateProbabilities(kotlin.Array<com.example.fastakmm.FastaKmm.AminoAcid>){}:
0000000000027760	sub	sp, sp, #0x80
0000000000027764	stp	x26, x25, [sp, #0x30]
0000000000027768	stp	x24, x23, [sp, #0x40]
000000000002776c	stp	x22, x21, [sp, #0x50]
0000000000027770	stp	x20, x19, [sp, #0x60]
0000000000027774	stp	x29, x30, [sp, #0x70]
0000000000027778	add	x29, sp, #0x70
000000000002777c	mov	x20, x2
0000000000027780	mov	x22, x0
0000000000027784	movi.16b	v0, #0x0
0000000000027788	stp	q0, q0, [sp, #0x10]
000000000002778c	str	q0, [sp]
0000000000027790	mov	x8, sp
0000000000027794	add	x21, x8, #0x20
0000000000027798	add	x23, x8, #0x18
000000000002779c	bl	_Kotlin_initRuntimeIfNeeded
00000000000277a0	adrp	x19, 83 ; 0x7a000
00000000000277a4	add	x19, x19, #0x2c0
00000000000277a8	ldr	x24, [x19]
00000000000277ac	mov	x0, x19
00000000000277b0	blr	x24
00000000000277b4	ldr	x8, [x0]
00000000000277b8	add	x0, x8, #0x138
00000000000277bc	ldaxr	w8, [x0]
00000000000277c0	stlxr	w9, wzr, [x0]
00000000000277c4	cbnz	w9, 0x277bc
00000000000277c8	adr	x25, #0x6cac1
00000000000277cc	nop
00000000000277d0	cmp	w8, #0x1
00000000000277d4	b.ne	0x277e4
00000000000277d8	ldarb	w8, [x25]
00000000000277dc	tbz	w8, #0x0, 0x277e4
00000000000277e0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000277e4	mov	x0, x19
00000000000277e8	blr	x24
00000000000277ec	ldr	x8, [x0]
00000000000277f0	ldr	x9, [x8, #0x110]
00000000000277f4	mov	x10, sp
00000000000277f8	str	x10, [x8, #0x110]
00000000000277fc	mov	x8, #0x600000000
0000000000027800	stp	x9, x8, [sp, #0x8]
0000000000027804	ldarb	w8, [x25]
0000000000027808	tbz	w8, #0x0, 0x27810
000000000002780c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027810	adrp	x25, 109 ; 0x94000
0000000000027814	cbz	x22, 0x27840
0000000000027818	ldr	x1, [x25, #0x4d8]
000000000002781c	mov	x0, x22
0000000000027820	mov	x2, x23
0000000000027824	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000027828	cbz	x20, 0x27848
000000000002782c	ldr	x1, [x25, #0x4d8]
0000000000027830	mov	x0, x20
0000000000027834	mov	x2, x21
0000000000027838	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002783c	b	0x27850
0000000000027840	str	xzr, [sp, #0x18]
0000000000027844	cbnz	x20, 0x2782c
0000000000027848	mov	x0, #0x0
000000000002784c	str	xzr, [sp, #0x20]
0000000000027850	bl	"_kfun:com.example.fastakmm.FastaKmm#accumulateProbabilities(kotlin.Array<com.example.fastakmm.FastaKmm.AminoAcid>){}"
0000000000027854	mov	x0, x19
0000000000027858	blr	x24
000000000002785c	ldr	x8, [x0]
0000000000027860	ldr	x9, [sp, #0x8]
0000000000027864	str	x9, [x8, #0x110]
0000000000027868	add	x8, x8, #0x138
000000000002786c	mov	w9, #0x1
0000000000027870	ldaxr	wzr, [x8]
0000000000027874	stlxr	w10, w9, [x8]
0000000000027878	cbnz	w10, 0x27870
000000000002787c	ldp	x29, x30, [sp, #0x70]
0000000000027880	ldp	x20, x19, [sp, #0x60]
0000000000027884	ldp	x22, x21, [sp, #0x50]
0000000000027888	ldp	x24, x23, [sp, #0x40]
000000000002788c	ldp	x26, x25, [sp, #0x30]
0000000000027890	add	sp, sp, #0x80
0000000000027894	ret
0000000000027898	mov	x1, x0
000000000002789c	mov	x0, x19
00000000000278a0	blr	x24
00000000000278a4	ldr	x8, [x0]
00000000000278a8	mov	x9, sp
00000000000278ac	str	x9, [x8, #0x110]
00000000000278b0	mov	x0, x1
00000000000278b4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
00000000000278b8	ldr	x8, [x0, #0x8]
00000000000278bc	ldr	x20, [x8]
00000000000278c0	str	x20, [sp, #0x28]
00000000000278c4	bl	0x55338 ; symbol stub for: ___cxa_end_catch
00000000000278c8	mov	x0, x20
00000000000278cc	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
00000000000278d0	brk	#0x1
00000000000278d4	mov	x1, x0
00000000000278d8	mov	x0, x19
00000000000278dc	blr	x24
00000000000278e0	ldr	x8, [x0]
00000000000278e4	mov	x9, sp
00000000000278e8	str	x9, [x8, #0x110]
00000000000278ec	mov	x0, x1
00000000000278f0	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
00000000000278f4	bl	0x552fc ; symbol stub for: __ZSt9terminatev
00000000000278f8	b	0x278f8
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#binarySearch(kotlin.Double;kotlin.Array<com.example.fastakmm.FastaKmm.AminoAcid>){}kotlin.Byte:
00000000000278fc	sub	sp, sp, #0x90
0000000000027900	stp	d9, d8, [sp, #0x30]
0000000000027904	stp	x26, x25, [sp, #0x40]
0000000000027908	stp	x24, x23, [sp, #0x50]
000000000002790c	stp	x22, x21, [sp, #0x60]
0000000000027910	stp	x20, x19, [sp, #0x70]
0000000000027914	stp	x29, x30, [sp, #0x80]
0000000000027918	add	x29, sp, #0x80
000000000002791c	mov	x20, x2
0000000000027920	fmov	d8, d0
0000000000027924	mov	x22, x0
0000000000027928	movi.16b	v0, #0x0
000000000002792c	stp	q0, q0, [sp, #0x10]
0000000000027930	str	q0, [sp]
0000000000027934	mov	x8, sp
0000000000027938	add	x21, x8, #0x20
000000000002793c	add	x23, x8, #0x18
0000000000027940	bl	_Kotlin_initRuntimeIfNeeded
0000000000027944	adrp	x19, 83 ; 0x7a000
0000000000027948	add	x19, x19, #0x2c0
000000000002794c	ldr	x24, [x19]
0000000000027950	mov	x0, x19
0000000000027954	blr	x24
0000000000027958	ldr	x8, [x0]
000000000002795c	add	x0, x8, #0x138
0000000000027960	ldaxr	w8, [x0]
0000000000027964	stlxr	w9, wzr, [x0]
0000000000027968	cbnz	w9, 0x27960
000000000002796c	adr	x25, #0x6c91d
0000000000027970	nop
0000000000027974	cmp	w8, #0x1
0000000000027978	b.ne	0x27988
000000000002797c	ldarb	w8, [x25]
0000000000027980	tbz	w8, #0x0, 0x27988
0000000000027984	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000027988	mov	x0, x19
000000000002798c	blr	x24
0000000000027990	ldr	x8, [x0]
0000000000027994	ldr	x9, [x8, #0x110]
0000000000027998	mov	x10, sp
000000000002799c	str	x10, [x8, #0x110]
00000000000279a0	mov	x8, #0x600000000
00000000000279a4	stp	x9, x8, [sp, #0x8]
00000000000279a8	ldarb	w8, [x25]
00000000000279ac	tbz	w8, #0x0, 0x279b4
00000000000279b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000279b4	adrp	x25, 109 ; 0x94000
00000000000279b8	cbz	x22, 0x279e4
00000000000279bc	ldr	x1, [x25, #0x4d8]
00000000000279c0	mov	x0, x22
00000000000279c4	mov	x2, x23
00000000000279c8	bl	0x55584 ; Objc message: -[x0 hasNext]
00000000000279cc	cbz	x20, 0x279ec
00000000000279d0	ldr	x1, [x25, #0x4d8]
00000000000279d4	mov	x0, x20
00000000000279d8	mov	x2, x21
00000000000279dc	bl	0x55584 ; Objc message: -[x0 hasNext]
00000000000279e0	b	0x279f4
00000000000279e4	str	xzr, [sp, #0x18]
00000000000279e8	cbnz	x20, 0x279d0
00000000000279ec	mov	x0, #0x0
00000000000279f0	str	xzr, [sp, #0x20]
00000000000279f4	fmov	d0, d8
00000000000279f8	bl	"_kfun:com.example.fastakmm.FastaKmm#binarySearch(kotlin.Double;kotlin.Array<com.example.fastakmm.FastaKmm.AminoAcid>){}kotlin.Byte"
00000000000279fc	mov	x1, x0
0000000000027a00	mov	x0, x19
0000000000027a04	blr	x24
0000000000027a08	ldr	x8, [x0]
0000000000027a0c	ldr	x9, [sp, #0x8]
0000000000027a10	str	x9, [x8, #0x110]
0000000000027a14	add	x8, x8, #0x138
0000000000027a18	mov	w9, #0x1
0000000000027a1c	ldaxr	wzr, [x8]
0000000000027a20	stlxr	w10, w9, [x8]
0000000000027a24	cbnz	w10, 0x27a1c
0000000000027a28	mov	x0, x1
0000000000027a2c	ldp	x29, x30, [sp, #0x80]
0000000000027a30	ldp	x20, x19, [sp, #0x70]
0000000000027a34	ldp	x22, x21, [sp, #0x60]
0000000000027a38	ldp	x24, x23, [sp, #0x50]
0000000000027a3c	ldp	x26, x25, [sp, #0x40]
0000000000027a40	ldp	d9, d8, [sp, #0x30]
0000000000027a44	add	sp, sp, #0x90
0000000000027a48	ret
0000000000027a4c	mov	x1, x0
0000000000027a50	mov	x0, x19
0000000000027a54	blr	x24
0000000000027a58	ldr	x8, [x0]
0000000000027a5c	mov	x9, sp
0000000000027a60	str	x9, [x8, #0x110]
0000000000027a64	mov	x0, x1
0000000000027a68	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000027a6c	ldr	x8, [x0, #0x8]
0000000000027a70	ldr	x20, [x8]
0000000000027a74	str	x20, [sp, #0x28]
0000000000027a78	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000027a7c	mov	x0, x20
0000000000027a80	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
0000000000027a84	brk	#0x1
0000000000027a88	mov	x1, x0
0000000000027a8c	mov	x0, x19
0000000000027a90	blr	x24
0000000000027a94	ldr	x8, [x0]
0000000000027a98	mov	x9, sp
0000000000027a9c	str	x9, [x8, #0x110]
0000000000027aa0	mov	x0, x1
0000000000027aa4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000027aa8	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000027aac	b	0x27aac
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#makeRandomFasta(kotlin.String;kotlin.String;kotlin.Array<com.example.fastakmm.FastaKmm.AminoAcid>;kotlin.Int){}:
0000000000027ab0	sub	sp, sp, #0xb0
0000000000027ab4	stp	x28, x27, [sp, #0x50]
0000000000027ab8	stp	x26, x25, [sp, #0x60]
0000000000027abc	stp	x24, x23, [sp, #0x70]
0000000000027ac0	stp	x22, x21, [sp, #0x80]
0000000000027ac4	stp	x20, x19, [sp, #0x90]
0000000000027ac8	stp	x29, x30, [sp, #0xa0]
0000000000027acc	add	x29, sp, #0xa0
0000000000027ad0	str	w5, [sp, #0xc]
0000000000027ad4	mov	x21, x4
0000000000027ad8	mov	x23, x3
0000000000027adc	mov	x25, x2
0000000000027ae0	mov	x27, x0
0000000000027ae4	movi.16b	v0, #0x0
0000000000027ae8	stp	q0, q0, [sp, #0x30]
0000000000027aec	add	x8, sp, #0x10
0000000000027af0	stp	q0, q0, [sp, #0x10]
0000000000027af4	add	x26, x8, #0x20
0000000000027af8	add	x9, x8, #0x30
0000000000027afc	str	x9, [sp]
0000000000027b00	add	x28, x8, #0x18
0000000000027b04	add	x24, x8, #0x28
0000000000027b08	bl	_Kotlin_initRuntimeIfNeeded
0000000000027b0c	adrp	x19, 83 ; 0x7a000
0000000000027b10	add	x19, x19, #0x2c0
0000000000027b14	ldr	x22, [x19]
0000000000027b18	mov	x0, x19
0000000000027b1c	blr	x22
0000000000027b20	ldr	x8, [x0]
0000000000027b24	add	x0, x8, #0x138
0000000000027b28	ldaxr	w8, [x0]
0000000000027b2c	stlxr	w9, wzr, [x0]
0000000000027b30	cbnz	w9, 0x27b28
0000000000027b34	adr	x20, #0x6c755
0000000000027b38	nop
0000000000027b3c	cmp	w8, #0x1
0000000000027b40	b.ne	0x27b50
0000000000027b44	ldarb	w8, [x20]
0000000000027b48	tbz	w8, #0x0, 0x27b50
0000000000027b4c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000027b50	mov	x0, x19
0000000000027b54	blr	x22
0000000000027b58	ldr	x8, [x0]
0000000000027b5c	ldr	x9, [x8, #0x110]
0000000000027b60	add	x10, sp, #0x10
0000000000027b64	str	x10, [x8, #0x110]
0000000000027b68	mov	x8, #0x800000000
0000000000027b6c	stp	x9, x8, [sp, #0x18]
0000000000027b70	ldarb	w8, [x20]
0000000000027b74	tbz	w8, #0x0, 0x27b7c
0000000000027b78	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027b7c	adrp	x20, 109 ; 0x94000
0000000000027b80	cbz	x27, 0x27be4
0000000000027b84	ldr	x1, [x20, #0x4d8]
0000000000027b88	mov	x0, x27
0000000000027b8c	mov	x2, x28
0000000000027b90	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000027b94	mov	x27, x0
0000000000027b98	cbz	x25, 0x27bec
0000000000027b9c	ldr	x1, [x20, #0x4d8]
0000000000027ba0	mov	x0, x25
0000000000027ba4	mov	x2, x26
0000000000027ba8	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000027bac	mov	x25, x0
0000000000027bb0	cbz	x23, 0x27bf4
0000000000027bb4	ldr	x1, [x20, #0x4d8]
0000000000027bb8	mov	x0, x23
0000000000027bbc	mov	x2, x24
0000000000027bc0	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000027bc4	mov	x23, x0
0000000000027bc8	cbz	x21, 0x27bfc
0000000000027bcc	ldr	x1, [x20, #0x4d8]
0000000000027bd0	mov	x0, x21
0000000000027bd4	ldr	x2, [sp]
0000000000027bd8	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000027bdc	mov	x3, x0
0000000000027be0	b	0x27c04
0000000000027be4	str	xzr, [sp, #0x28]
0000000000027be8	cbnz	x25, 0x27b9c
0000000000027bec	str	xzr, [sp, #0x30]
0000000000027bf0	cbnz	x23, 0x27bb4
0000000000027bf4	str	xzr, [sp, #0x38]
0000000000027bf8	cbnz	x21, 0x27bcc
0000000000027bfc	mov	x3, #0x0
0000000000027c00	str	xzr, [sp, #0x40]
0000000000027c04	mov	x0, x27
0000000000027c08	mov	x1, x25
0000000000027c0c	mov	x2, x23
0000000000027c10	ldr	w4, [sp, #0xc]
0000000000027c14	bl	"_kfun:com.example.fastakmm.FastaKmm#makeRandomFasta(kotlin.String;kotlin.String;kotlin.Array<com.example.fastakmm.FastaKmm.AminoAcid>;kotlin.Int){}"
0000000000027c18	mov	x0, x19
0000000000027c1c	blr	x22
0000000000027c20	ldr	x8, [x0]
0000000000027c24	ldr	x9, [sp, #0x18]
0000000000027c28	str	x9, [x8, #0x110]
0000000000027c2c	add	x8, x8, #0x138
0000000000027c30	mov	w9, #0x1
0000000000027c34	ldaxr	wzr, [x8]
0000000000027c38	stlxr	w10, w9, [x8]
0000000000027c3c	cbnz	w10, 0x27c34
0000000000027c40	ldp	x29, x30, [sp, #0xa0]
0000000000027c44	ldp	x20, x19, [sp, #0x90]
0000000000027c48	ldp	x22, x21, [sp, #0x80]
0000000000027c4c	ldp	x24, x23, [sp, #0x70]
0000000000027c50	ldp	x26, x25, [sp, #0x60]
0000000000027c54	ldp	x28, x27, [sp, #0x50]
0000000000027c58	add	sp, sp, #0xb0
0000000000027c5c	ret
0000000000027c60	mov	x1, x0
0000000000027c64	mov	x0, x19
0000000000027c68	blr	x22
0000000000027c6c	ldr	x8, [x0]
0000000000027c70	add	x9, sp, #0x10
0000000000027c74	str	x9, [x8, #0x110]
0000000000027c78	mov	x0, x1
0000000000027c7c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000027c80	ldr	x8, [x0, #0x8]
0000000000027c84	ldr	x20, [x8]
0000000000027c88	str	x20, [sp, #0x48]
0000000000027c8c	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000027c90	mov	x0, x20
0000000000027c94	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
0000000000027c98	brk	#0x1
0000000000027c9c	mov	x1, x0
0000000000027ca0	mov	x0, x19
0000000000027ca4	blr	x22
0000000000027ca8	ldr	x8, [x0]
0000000000027cac	add	x9, sp, #0x10
0000000000027cb0	str	x9, [x8, #0x110]
0000000000027cb4	mov	x0, x1
0000000000027cb8	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000027cbc	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000027cc0	b	0x27cc0
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#makeRepeatFasta(kotlin.String;kotlin.String;kotlin.String;kotlin.Int){}:
0000000000027cc4	sub	sp, sp, #0xb0
0000000000027cc8	stp	x28, x27, [sp, #0x50]
0000000000027ccc	stp	x26, x25, [sp, #0x60]
0000000000027cd0	stp	x24, x23, [sp, #0x70]
0000000000027cd4	stp	x22, x21, [sp, #0x80]
0000000000027cd8	stp	x20, x19, [sp, #0x90]
0000000000027cdc	stp	x29, x30, [sp, #0xa0]
0000000000027ce0	add	x29, sp, #0xa0
0000000000027ce4	str	w5, [sp, #0xc]
0000000000027ce8	mov	x21, x4
0000000000027cec	mov	x23, x3
0000000000027cf0	mov	x25, x2
0000000000027cf4	mov	x27, x0
0000000000027cf8	movi.16b	v0, #0x0
0000000000027cfc	stp	q0, q0, [sp, #0x30]
0000000000027d00	add	x8, sp, #0x10
0000000000027d04	stp	q0, q0, [sp, #0x10]
0000000000027d08	add	x26, x8, #0x20
0000000000027d0c	add	x9, x8, #0x30
0000000000027d10	str	x9, [sp]
0000000000027d14	add	x28, x8, #0x18
0000000000027d18	add	x24, x8, #0x28
0000000000027d1c	bl	_Kotlin_initRuntimeIfNeeded
0000000000027d20	adrp	x19, 83 ; 0x7a000
0000000000027d24	add	x19, x19, #0x2c0
0000000000027d28	ldr	x22, [x19]
0000000000027d2c	mov	x0, x19
0000000000027d30	blr	x22
0000000000027d34	ldr	x8, [x0]
0000000000027d38	add	x0, x8, #0x138
0000000000027d3c	ldaxr	w8, [x0]
0000000000027d40	stlxr	w9, wzr, [x0]
0000000000027d44	cbnz	w9, 0x27d3c
0000000000027d48	adr	x20, #0x6c541
0000000000027d4c	nop
0000000000027d50	cmp	w8, #0x1
0000000000027d54	b.ne	0x27d64
0000000000027d58	ldarb	w8, [x20]
0000000000027d5c	tbz	w8, #0x0, 0x27d64
0000000000027d60	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000027d64	mov	x0, x19
0000000000027d68	blr	x22
0000000000027d6c	ldr	x8, [x0]
0000000000027d70	ldr	x9, [x8, #0x110]
0000000000027d74	add	x10, sp, #0x10
0000000000027d78	str	x10, [x8, #0x110]
0000000000027d7c	mov	x8, #0x800000000
0000000000027d80	stp	x9, x8, [sp, #0x18]
0000000000027d84	ldarb	w8, [x20]
0000000000027d88	tbz	w8, #0x0, 0x27d90
0000000000027d8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027d90	adrp	x20, 109 ; 0x94000
0000000000027d94	cbz	x27, 0x27df8
0000000000027d98	ldr	x1, [x20, #0x4d8]
0000000000027d9c	mov	x0, x27
0000000000027da0	mov	x2, x28
0000000000027da4	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000027da8	mov	x27, x0
0000000000027dac	cbz	x25, 0x27e00
0000000000027db0	ldr	x1, [x20, #0x4d8]
0000000000027db4	mov	x0, x25
0000000000027db8	mov	x2, x26
0000000000027dbc	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000027dc0	mov	x25, x0
0000000000027dc4	cbz	x23, 0x27e08
0000000000027dc8	ldr	x1, [x20, #0x4d8]
0000000000027dcc	mov	x0, x23
0000000000027dd0	mov	x2, x24
0000000000027dd4	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000027dd8	mov	x23, x0
0000000000027ddc	cbz	x21, 0x27e10
0000000000027de0	ldr	x1, [x20, #0x4d8]
0000000000027de4	mov	x0, x21
0000000000027de8	ldr	x2, [sp]
0000000000027dec	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000027df0	mov	x3, x0
0000000000027df4	b	0x27e18
0000000000027df8	str	xzr, [sp, #0x28]
0000000000027dfc	cbnz	x25, 0x27db0
0000000000027e00	str	xzr, [sp, #0x30]
0000000000027e04	cbnz	x23, 0x27dc8
0000000000027e08	str	xzr, [sp, #0x38]
0000000000027e0c	cbnz	x21, 0x27de0
0000000000027e10	mov	x3, #0x0
0000000000027e14	str	xzr, [sp, #0x40]
0000000000027e18	mov	x0, x27
0000000000027e1c	mov	x1, x25
0000000000027e20	mov	x2, x23
0000000000027e24	ldr	w4, [sp, #0xc]
0000000000027e28	bl	"_kfun:com.example.fastakmm.FastaKmm#makeRepeatFasta(kotlin.String;kotlin.String;kotlin.String;kotlin.Int){}"
0000000000027e2c	mov	x0, x19
0000000000027e30	blr	x22
0000000000027e34	ldr	x8, [x0]
0000000000027e38	ldr	x9, [sp, #0x18]
0000000000027e3c	str	x9, [x8, #0x110]
0000000000027e40	add	x8, x8, #0x138
0000000000027e44	mov	w9, #0x1
0000000000027e48	ldaxr	wzr, [x8]
0000000000027e4c	stlxr	w10, w9, [x8]
0000000000027e50	cbnz	w10, 0x27e48
0000000000027e54	ldp	x29, x30, [sp, #0xa0]
0000000000027e58	ldp	x20, x19, [sp, #0x90]
0000000000027e5c	ldp	x22, x21, [sp, #0x80]
0000000000027e60	ldp	x24, x23, [sp, #0x70]
0000000000027e64	ldp	x26, x25, [sp, #0x60]
0000000000027e68	ldp	x28, x27, [sp, #0x50]
0000000000027e6c	add	sp, sp, #0xb0
0000000000027e70	ret
0000000000027e74	mov	x1, x0
0000000000027e78	mov	x0, x19
0000000000027e7c	blr	x22
0000000000027e80	ldr	x8, [x0]
0000000000027e84	add	x9, sp, #0x10
0000000000027e88	str	x9, [x8, #0x110]
0000000000027e8c	mov	x0, x1
0000000000027e90	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000027e94	ldr	x8, [x0, #0x8]
0000000000027e98	ldr	x20, [x8]
0000000000027e9c	str	x20, [sp, #0x48]
0000000000027ea0	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000027ea4	mov	x0, x20
0000000000027ea8	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
0000000000027eac	brk	#0x1
0000000000027eb0	mov	x1, x0
0000000000027eb4	mov	x0, x19
0000000000027eb8	blr	x22
0000000000027ebc	ldr	x8, [x0]
0000000000027ec0	add	x9, sp, #0x10
0000000000027ec4	str	x9, [x8, #0x110]
0000000000027ec8	mov	x0, x1
0000000000027ecc	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000027ed0	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000027ed4	b	0x27ed4
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#random(kotlin.Float){}kotlin.Float:
0000000000027ed8	sub	sp, sp, #0x80
0000000000027edc	stp	d9, d8, [sp, #0x30]
0000000000027ee0	stp	x24, x23, [sp, #0x40]
0000000000027ee4	stp	x22, x21, [sp, #0x50]
0000000000027ee8	stp	x20, x19, [sp, #0x60]
0000000000027eec	stp	x29, x30, [sp, #0x70]
0000000000027ef0	add	x29, sp, #0x70
0000000000027ef4	fmov	s8, s0
0000000000027ef8	mov	x20, x0
0000000000027efc	str	xzr, [sp, #0x20]
0000000000027f00	movi.16b	v0, #0x0
0000000000027f04	stp	q0, q0, [sp]
0000000000027f08	mov	x8, sp
0000000000027f0c	add	x21, x8, #0x18
0000000000027f10	bl	_Kotlin_initRuntimeIfNeeded
0000000000027f14	adrp	x19, 83 ; 0x7a000
0000000000027f18	add	x19, x19, #0x2c0
0000000000027f1c	ldr	x22, [x19]
0000000000027f20	mov	x0, x19
0000000000027f24	blr	x22
0000000000027f28	ldr	x8, [x0]
0000000000027f2c	add	x0, x8, #0x138
0000000000027f30	ldaxr	w8, [x0]
0000000000027f34	stlxr	w9, wzr, [x0]
0000000000027f38	cbnz	w9, 0x27f30
0000000000027f3c	adr	x23, #0x6c34d
0000000000027f40	nop
0000000000027f44	cmp	w8, #0x1
0000000000027f48	b.ne	0x27f58
0000000000027f4c	ldarb	w8, [x23]
0000000000027f50	tbz	w8, #0x0, 0x27f58
0000000000027f54	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000027f58	mov	x0, x19
0000000000027f5c	blr	x22
0000000000027f60	ldr	x8, [x0]
0000000000027f64	ldr	x9, [x8, #0x110]
0000000000027f68	mov	x10, sp
0000000000027f6c	str	x10, [x8, #0x110]
0000000000027f70	mov	x8, #0x500000000
0000000000027f74	stp	x9, x8, [sp, #0x8]
0000000000027f78	ldarb	w8, [x23]
0000000000027f7c	tbz	w8, #0x0, 0x27f84
0000000000027f80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027f84	cbz	x20, 0x27fa0
0000000000027f88	nop
0000000000027f8c	ldr	x1, #0x6c54c
0000000000027f90	mov	x0, x20
0000000000027f94	mov	x2, x21
0000000000027f98	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000027f9c	b	0x27fa8
0000000000027fa0	mov	x0, #0x0
0000000000027fa4	str	xzr, [sp, #0x18]
0000000000027fa8	fmov	s0, s8
0000000000027fac	bl	"_kfun:com.example.fastakmm.FastaKmm#random(kotlin.Float){}kotlin.Float"
0000000000027fb0	mov	x0, x19
0000000000027fb4	blr	x22
0000000000027fb8	ldr	x8, [x0]
0000000000027fbc	ldr	x9, [sp, #0x8]
0000000000027fc0	str	x9, [x8, #0x110]
0000000000027fc4	add	x8, x8, #0x138
0000000000027fc8	mov	w9, #0x1
0000000000027fcc	ldaxr	wzr, [x8]
0000000000027fd0	stlxr	w10, w9, [x8]
0000000000027fd4	cbnz	w10, 0x27fcc
0000000000027fd8	ldp	x29, x30, [sp, #0x70]
0000000000027fdc	ldp	x20, x19, [sp, #0x60]
0000000000027fe0	ldp	x22, x21, [sp, #0x50]
0000000000027fe4	ldp	x24, x23, [sp, #0x40]
0000000000027fe8	ldp	d9, d8, [sp, #0x30]
0000000000027fec	add	sp, sp, #0x80
0000000000027ff0	ret
0000000000027ff4	mov	x1, x0
0000000000027ff8	mov	x0, x19
0000000000027ffc	blr	x22
0000000000028000	ldr	x8, [x0]
0000000000028004	mov	x9, sp
0000000000028008	str	x9, [x8, #0x110]
000000000002800c	mov	x0, x1
0000000000028010	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000028014	ldr	x8, [x0, #0x8]
0000000000028018	ldr	x20, [x8]
000000000002801c	str	x20, [sp, #0x20]
0000000000028020	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000028024	mov	x0, x20
0000000000028028	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002802c	brk	#0x1
0000000000028030	mov	x1, x0
0000000000028034	mov	x0, x19
0000000000028038	blr	x22
000000000002803c	ldr	x8, [x0]
0000000000028040	mov	x9, sp
0000000000028044	str	x9, [x8, #0x110]
0000000000028048	mov	x0, x1
000000000002804c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000028050	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000028054	b	0x28054
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#runBenchmark(kotlin.Int){}:
0000000000028058	sub	sp, sp, #0x90
000000000002805c	stp	x24, x23, [sp, #0x50]
0000000000028060	stp	x22, x21, [sp, #0x60]
0000000000028064	stp	x20, x19, [sp, #0x70]
0000000000028068	stp	x29, x30, [sp, #0x80]
000000000002806c	add	x29, sp, #0x80
0000000000028070	mov	x20, x2
0000000000028074	mov	x21, x0
0000000000028078	str	xzr, [sp, #0x20]
000000000002807c	movi.16b	v0, #0x0
0000000000028080	stp	q0, q0, [sp]
0000000000028084	mov	x8, sp
0000000000028088	add	x22, x8, #0x18
000000000002808c	bl	_Kotlin_initRuntimeIfNeeded
0000000000028090	adrp	x19, 82 ; 0x7a000
0000000000028094	add	x19, x19, #0x2c0
0000000000028098	ldr	x23, [x19]
000000000002809c	mov	x0, x19
00000000000280a0	blr	x23
00000000000280a4	ldr	x8, [x0]
00000000000280a8	add	x0, x8, #0x138
00000000000280ac	ldaxr	w8, [x0]
00000000000280b0	stlxr	w9, wzr, [x0]
00000000000280b4	cbnz	w9, 0x280ac
00000000000280b8	adr	x24, #0x6c1d1
00000000000280bc	nop
00000000000280c0	cmp	w8, #0x1
00000000000280c4	b.ne	0x280d4
00000000000280c8	ldarb	w8, [x24]
00000000000280cc	tbz	w8, #0x0, 0x280d4
00000000000280d0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000280d4	mov	x0, x19
00000000000280d8	blr	x23
00000000000280dc	ldr	x8, [x0]
00000000000280e0	ldr	x9, [x8, #0x110]
00000000000280e4	mov	x10, sp
00000000000280e8	str	x10, [x8, #0x110]
00000000000280ec	mov	x8, #0x500000000
00000000000280f0	stp	x9, x8, [sp, #0x8]
00000000000280f4	ldarb	w8, [x24]
00000000000280f8	tbz	w8, #0x0, 0x28100
00000000000280fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028100	cbz	x21, 0x28120
0000000000028104	nop
0000000000028108	ldr	x1, #0x6c3d0
000000000002810c	mov	x0, x21
0000000000028110	mov	x2, x22
0000000000028114	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000028118	mov	x21, x0
000000000002811c	b	0x28124
0000000000028120	str	xzr, [sp, #0x18]
0000000000028124	movi.16b	v0, #0x0
0000000000028128	stp	q0, q0, [sp, #0x30]
000000000002812c	mov	x0, x19
0000000000028130	blr	x23
0000000000028134	ldr	x8, [x0]
0000000000028138	ldr	x9, [x8, #0x110]
000000000002813c	add	x10, sp, #0x30
0000000000028140	str	x10, [x8, #0x110]
0000000000028144	mov	x8, #0x400000000
0000000000028148	stp	x9, x8, [sp, #0x38]
000000000002814c	ldarb	w8, [x24]
0000000000028150	tbz	w8, #0x0, 0x28158
0000000000028154	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028158	ldr	x3, [x21, #0x10]
000000000002815c	str	x3, [sp, #0x48]
0000000000028160	lsl	w4, w20, #1
0000000000028164	adr	x1, #0x46ecc
0000000000028168	nop
000000000002816c	adr	x2, #0x46ee4
0000000000028170	nop
0000000000028174	mov	x0, x21
0000000000028178	bl	"_kfun:com.example.fastakmm.FastaKmm#makeRepeatFasta(kotlin.String;kotlin.String;kotlin.String;kotlin.Int){}"
000000000002817c	ldr	x3, [x21, #0x18]
0000000000028180	add	w4, w20, w20, lsl #1
0000000000028184	adr	x1, #0x46efc
0000000000028188	nop
000000000002818c	adr	x2, #0x46f14
0000000000028190	nop
0000000000028194	mov	x0, x21
0000000000028198	bl	"_kfun:com.example.fastakmm.FastaKmm#makeRandomFasta(kotlin.String;kotlin.String;kotlin.Array<com.example.fastakmm.FastaKmm.AminoAcid>;kotlin.Int){}"
000000000002819c	ldr	x3, [x21, #0x20]
00000000000281a0	add	w4, w20, w20, lsl #2
00000000000281a4	adr	x1, #0x46f3c
00000000000281a8	nop
00000000000281ac	adr	x2, #0x46f54
00000000000281b0	nop
00000000000281b4	mov	x0, x21
00000000000281b8	bl	"_kfun:com.example.fastakmm.FastaKmm#makeRandomFasta(kotlin.String;kotlin.String;kotlin.Array<com.example.fastakmm.FastaKmm.AminoAcid>;kotlin.Int){}"
00000000000281bc	mov	x0, x19
00000000000281c0	blr	x23
00000000000281c4	ldr	x8, [x0]
00000000000281c8	ldr	x9, [sp, #0x8]
00000000000281cc	str	x9, [x8, #0x110]
00000000000281d0	add	x8, x8, #0x138
00000000000281d4	mov	w9, #0x1
00000000000281d8	ldaxr	wzr, [x8]
00000000000281dc	stlxr	w10, w9, [x8]
00000000000281e0	cbnz	w10, 0x281d8
00000000000281e4	ldp	x29, x30, [sp, #0x80]
00000000000281e8	ldp	x20, x19, [sp, #0x70]
00000000000281ec	ldp	x22, x21, [sp, #0x60]
00000000000281f0	ldp	x24, x23, [sp, #0x50]
00000000000281f4	add	sp, sp, #0x90
00000000000281f8	ret
00000000000281fc	mov	x1, x0
0000000000028200	mov	x0, x19
0000000000028204	blr	x23
0000000000028208	ldr	x8, [x0]
000000000002820c	mov	x9, sp
0000000000028210	str	x9, [x8, #0x110]
0000000000028214	mov	x0, x1
0000000000028218	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002821c	ldr	x8, [x0, #0x8]
0000000000028220	ldr	x20, [x8]
0000000000028224	str	x20, [sp, #0x20]
0000000000028228	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002822c	mov	x0, x20
0000000000028230	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
0000000000028234	brk	#0x1
0000000000028238	mov	x1, x0
000000000002823c	mov	x0, x19
0000000000028240	blr	x23
0000000000028244	ldr	x8, [x0]
0000000000028248	mov	x9, sp
000000000002824c	str	x9, [x8, #0x110]
0000000000028250	mov	x0, x1
0000000000028254	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000028258	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002825c	b	0x2825c
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#<get-ALU>(){}kotlin.String:
0000000000028260	sub	sp, sp, #0x70
0000000000028264	stp	x24, x23, [sp, #0x30]
0000000000028268	stp	x22, x21, [sp, #0x40]
000000000002826c	stp	x20, x19, [sp, #0x50]
0000000000028270	stp	x29, x30, [sp, #0x60]
0000000000028274	add	x29, sp, #0x60
0000000000028278	mov	x20, x0
000000000002827c	movi.16b	v0, #0x0
0000000000028280	stp	q0, q0, [sp, #0x10]
0000000000028284	str	q0, [sp]
0000000000028288	mov	x8, sp
000000000002828c	add	x21, x8, #0x18
0000000000028290	bl	_Kotlin_initRuntimeIfNeeded
0000000000028294	adrp	x19, 82 ; 0x7a000
0000000000028298	add	x19, x19, #0x2c0
000000000002829c	ldr	x22, [x19]
00000000000282a0	mov	x0, x19
00000000000282a4	blr	x22
00000000000282a8	ldr	x8, [x0]
00000000000282ac	add	x0, x8, #0x138
00000000000282b0	ldaxr	w8, [x0]
00000000000282b4	stlxr	w9, wzr, [x0]
00000000000282b8	cbnz	w9, 0x282b0
00000000000282bc	adr	x23, #0x6bfcd
00000000000282c0	nop
00000000000282c4	cmp	w8, #0x1
00000000000282c8	b.ne	0x282d8
00000000000282cc	ldarb	w8, [x23]
00000000000282d0	tbz	w8, #0x0, 0x282d8
00000000000282d4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000282d8	mov	x0, x19
00000000000282dc	blr	x22
00000000000282e0	ldr	x8, [x0]
00000000000282e4	ldr	x9, [x8, #0x110]
00000000000282e8	mov	x10, sp
00000000000282ec	str	x10, [x8, #0x110]
00000000000282f0	mov	x8, #0x600000000
00000000000282f4	stp	x9, x8, [sp, #0x8]
00000000000282f8	ldarb	w8, [x23]
00000000000282fc	tbz	w8, #0x0, 0x28304
0000000000028300	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028304	cbz	x20, 0x28380
0000000000028308	nop
000000000002830c	ldr	x1, #0x6c1cc
0000000000028310	mov	x0, x20
0000000000028314	mov	x2, x21
0000000000028318	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002831c	mov	x20, x0
0000000000028320	ldarb	w8, [x23]
0000000000028324	tbz	w8, #0x0, 0x2832c
0000000000028328	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002832c	ldr	x0, [x20, #0x10]
0000000000028330	str	x0, [sp, #0x28]
0000000000028334	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000028338	mov	x1, x0
000000000002833c	mov	x0, x19
0000000000028340	blr	x22
0000000000028344	ldr	x8, [x0]
0000000000028348	ldr	x9, [sp, #0x8]
000000000002834c	str	x9, [x8, #0x110]
0000000000028350	add	x8, x8, #0x138
0000000000028354	mov	w9, #0x1
0000000000028358	ldaxr	wzr, [x8]
000000000002835c	stlxr	w10, w9, [x8]
0000000000028360	cbnz	w10, 0x28358
0000000000028364	mov	x0, x1
0000000000028368	ldp	x29, x30, [sp, #0x60]
000000000002836c	ldp	x20, x19, [sp, #0x50]
0000000000028370	ldp	x22, x21, [sp, #0x40]
0000000000028374	ldp	x24, x23, [sp, #0x30]
0000000000028378	add	sp, sp, #0x70
000000000002837c	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000028380	str	xzr, [sp, #0x18]
0000000000028384	ldarb	w8, [x23]
0000000000028388	tbnz	w8, #0x0, 0x28328
000000000002838c	b	0x2832c
0000000000028390	mov	x1, x0
0000000000028394	mov	x0, x19
0000000000028398	blr	x22
000000000002839c	ldr	x8, [x0]
00000000000283a0	mov	x9, sp
00000000000283a4	str	x9, [x8, #0x110]
00000000000283a8	mov	x0, x1
00000000000283ac	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
00000000000283b0	bl	0x552fc ; symbol stub for: __ZSt9terminatev
00000000000283b4	b	0x283b4
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#<get-BUFFER_SIZE>(){}kotlin.Int:
00000000000283b8	sub	sp, sp, #0x70
00000000000283bc	stp	x24, x23, [sp, #0x30]
00000000000283c0	stp	x22, x21, [sp, #0x40]
00000000000283c4	stp	x20, x19, [sp, #0x50]
00000000000283c8	stp	x29, x30, [sp, #0x60]
00000000000283cc	add	x29, sp, #0x60
00000000000283d0	mov	x20, x0
00000000000283d4	str	xzr, [sp, #0x20]
00000000000283d8	movi.16b	v0, #0x0
00000000000283dc	stp	q0, q0, [sp]
00000000000283e0	mov	x8, sp
00000000000283e4	add	x21, x8, #0x18
00000000000283e8	bl	_Kotlin_initRuntimeIfNeeded
00000000000283ec	adrp	x19, 82 ; 0x7a000
00000000000283f0	add	x19, x19, #0x2c0
00000000000283f4	ldr	x22, [x19]
00000000000283f8	mov	x0, x19
00000000000283fc	blr	x22
0000000000028400	ldr	x8, [x0]
0000000000028404	add	x0, x8, #0x138
0000000000028408	ldaxr	w8, [x0]
000000000002840c	stlxr	w9, wzr, [x0]
0000000000028410	cbnz	w9, 0x28408
0000000000028414	adr	x23, #0x6be75
0000000000028418	nop
000000000002841c	cmp	w8, #0x1
0000000000028420	b.ne	0x28430
0000000000028424	ldarb	w8, [x23]
0000000000028428	tbz	w8, #0x0, 0x28430
000000000002842c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028430	mov	x0, x19
0000000000028434	blr	x22
0000000000028438	ldr	x8, [x0]
000000000002843c	ldr	x9, [x8, #0x110]
0000000000028440	mov	x10, sp
0000000000028444	str	x10, [x8, #0x110]
0000000000028448	mov	x8, #0x500000000
000000000002844c	stp	x9, x8, [sp, #0x8]
0000000000028450	ldarb	w8, [x23]
0000000000028454	tbz	w8, #0x0, 0x2845c
0000000000028458	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002845c	cbz	x20, 0x284cc
0000000000028460	nop
0000000000028464	ldr	x1, #0x6c074
0000000000028468	mov	x0, x20
000000000002846c	mov	x2, x21
0000000000028470	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000028474	mov	x20, x0
0000000000028478	ldarb	w8, [x23]
000000000002847c	tbz	w8, #0x0, 0x28484
0000000000028480	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028484	ldr	w8, [x20, #0x38]
0000000000028488	mov	x0, x19
000000000002848c	blr	x22
0000000000028490	ldr	x9, [x0]
0000000000028494	ldr	x10, [sp, #0x8]
0000000000028498	str	x10, [x9, #0x110]
000000000002849c	add	x9, x9, #0x138
00000000000284a0	mov	w10, #0x1
00000000000284a4	ldaxr	wzr, [x9]
00000000000284a8	stlxr	w11, w10, [x9]
00000000000284ac	cbnz	w11, 0x284a4
00000000000284b0	mov	x0, x8
00000000000284b4	ldp	x29, x30, [sp, #0x60]
00000000000284b8	ldp	x20, x19, [sp, #0x50]
00000000000284bc	ldp	x22, x21, [sp, #0x40]
00000000000284c0	ldp	x24, x23, [sp, #0x30]
00000000000284c4	add	sp, sp, #0x70
00000000000284c8	ret
00000000000284cc	str	xzr, [sp, #0x18]
00000000000284d0	ldarb	w8, [x23]
00000000000284d4	tbnz	w8, #0x0, 0x28480
00000000000284d8	b	0x28484
00000000000284dc	mov	x1, x0
00000000000284e0	mov	x0, x19
00000000000284e4	blr	x22
00000000000284e8	ldr	x8, [x0]
00000000000284ec	mov	x9, sp
00000000000284f0	str	x9, [x8, #0x110]
00000000000284f4	mov	x0, x1
00000000000284f8	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
00000000000284fc	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000028500	b	0x28500
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#<get-IA>(){}kotlin.Int:
0000000000028504	sub	sp, sp, #0x70
0000000000028508	stp	x24, x23, [sp, #0x30]
000000000002850c	stp	x22, x21, [sp, #0x40]
0000000000028510	stp	x20, x19, [sp, #0x50]
0000000000028514	stp	x29, x30, [sp, #0x60]
0000000000028518	add	x29, sp, #0x60
000000000002851c	mov	x20, x0
0000000000028520	str	xzr, [sp, #0x20]
0000000000028524	movi.16b	v0, #0x0
0000000000028528	stp	q0, q0, [sp]
000000000002852c	mov	x8, sp
0000000000028530	add	x21, x8, #0x18
0000000000028534	bl	_Kotlin_initRuntimeIfNeeded
0000000000028538	adrp	x19, 82 ; 0x7a000
000000000002853c	add	x19, x19, #0x2c0
0000000000028540	ldr	x22, [x19]
0000000000028544	mov	x0, x19
0000000000028548	blr	x22
000000000002854c	ldr	x8, [x0]
0000000000028550	add	x0, x8, #0x138
0000000000028554	ldaxr	w8, [x0]
0000000000028558	stlxr	w9, wzr, [x0]
000000000002855c	cbnz	w9, 0x28554
0000000000028560	adr	x23, #0x6bd29
0000000000028564	nop
0000000000028568	cmp	w8, #0x1
000000000002856c	b.ne	0x2857c
0000000000028570	ldarb	w8, [x23]
0000000000028574	tbz	w8, #0x0, 0x2857c
0000000000028578	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002857c	mov	x0, x19
0000000000028580	blr	x22
0000000000028584	ldr	x8, [x0]
0000000000028588	ldr	x9, [x8, #0x110]
000000000002858c	mov	x10, sp
0000000000028590	str	x10, [x8, #0x110]
0000000000028594	mov	x8, #0x500000000
0000000000028598	stp	x9, x8, [sp, #0x8]
000000000002859c	ldarb	w8, [x23]
00000000000285a0	tbz	w8, #0x0, 0x285a8
00000000000285a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000285a8	cbz	x20, 0x28618
00000000000285ac	nop
00000000000285b0	ldr	x1, #0x6bf28
00000000000285b4	mov	x0, x20
00000000000285b8	mov	x2, x21
00000000000285bc	bl	0x55584 ; Objc message: -[x0 hasNext]
00000000000285c0	mov	x20, x0
00000000000285c4	ldarb	w8, [x23]
00000000000285c8	tbz	w8, #0x0, 0x285d0
00000000000285cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000285d0	ldr	w8, [x20, #0x2c]
00000000000285d4	mov	x0, x19
00000000000285d8	blr	x22
00000000000285dc	ldr	x9, [x0]
00000000000285e0	ldr	x10, [sp, #0x8]
00000000000285e4	str	x10, [x9, #0x110]
00000000000285e8	add	x9, x9, #0x138
00000000000285ec	mov	w10, #0x1
00000000000285f0	ldaxr	wzr, [x9]
00000000000285f4	stlxr	w11, w10, [x9]
00000000000285f8	cbnz	w11, 0x285f0
00000000000285fc	mov	x0, x8
0000000000028600	ldp	x29, x30, [sp, #0x60]
0000000000028604	ldp	x20, x19, [sp, #0x50]
0000000000028608	ldp	x22, x21, [sp, #0x40]
000000000002860c	ldp	x24, x23, [sp, #0x30]
0000000000028610	add	sp, sp, #0x70
0000000000028614	ret
0000000000028618	str	xzr, [sp, #0x18]
000000000002861c	ldarb	w8, [x23]
0000000000028620	tbnz	w8, #0x0, 0x285cc
0000000000028624	b	0x285d0
0000000000028628	mov	x1, x0
000000000002862c	mov	x0, x19
0000000000028630	blr	x22
0000000000028634	ldr	x8, [x0]
0000000000028638	mov	x9, sp
000000000002863c	str	x9, [x8, #0x110]
0000000000028640	mov	x0, x1
0000000000028644	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000028648	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002864c	b	0x2864c
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#<get-IC>(){}kotlin.Int:
0000000000028650	sub	sp, sp, #0x70
0000000000028654	stp	x24, x23, [sp, #0x30]
0000000000028658	stp	x22, x21, [sp, #0x40]
000000000002865c	stp	x20, x19, [sp, #0x50]
0000000000028660	stp	x29, x30, [sp, #0x60]
0000000000028664	add	x29, sp, #0x60
0000000000028668	mov	x20, x0
000000000002866c	str	xzr, [sp, #0x20]
0000000000028670	movi.16b	v0, #0x0
0000000000028674	stp	q0, q0, [sp]
0000000000028678	mov	x8, sp
000000000002867c	add	x21, x8, #0x18
0000000000028680	bl	_Kotlin_initRuntimeIfNeeded
0000000000028684	adrp	x19, 82 ; 0x7a000
0000000000028688	add	x19, x19, #0x2c0
000000000002868c	ldr	x22, [x19]
0000000000028690	mov	x0, x19
0000000000028694	blr	x22
0000000000028698	ldr	x8, [x0]
000000000002869c	add	x0, x8, #0x138
00000000000286a0	ldaxr	w8, [x0]
00000000000286a4	stlxr	w9, wzr, [x0]
00000000000286a8	cbnz	w9, 0x286a0
00000000000286ac	adr	x23, #0x6bbdd
00000000000286b0	nop
00000000000286b4	cmp	w8, #0x1
00000000000286b8	b.ne	0x286c8
00000000000286bc	ldarb	w8, [x23]
00000000000286c0	tbz	w8, #0x0, 0x286c8
00000000000286c4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000286c8	mov	x0, x19
00000000000286cc	blr	x22
00000000000286d0	ldr	x8, [x0]
00000000000286d4	ldr	x9, [x8, #0x110]
00000000000286d8	mov	x10, sp
00000000000286dc	str	x10, [x8, #0x110]
00000000000286e0	mov	x8, #0x500000000
00000000000286e4	stp	x9, x8, [sp, #0x8]
00000000000286e8	ldarb	w8, [x23]
00000000000286ec	tbz	w8, #0x0, 0x286f4
00000000000286f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000286f4	cbz	x20, 0x28764
00000000000286f8	nop
00000000000286fc	ldr	x1, #0x6bddc
0000000000028700	mov	x0, x20
0000000000028704	mov	x2, x21
0000000000028708	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002870c	mov	x20, x0
0000000000028710	ldarb	w8, [x23]
0000000000028714	tbz	w8, #0x0, 0x2871c
0000000000028718	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002871c	ldr	w8, [x20, #0x30]
0000000000028720	mov	x0, x19
0000000000028724	blr	x22
0000000000028728	ldr	x9, [x0]
000000000002872c	ldr	x10, [sp, #0x8]
0000000000028730	str	x10, [x9, #0x110]
0000000000028734	add	x9, x9, #0x138
0000000000028738	mov	w10, #0x1
000000000002873c	ldaxr	wzr, [x9]
0000000000028740	stlxr	w11, w10, [x9]
0000000000028744	cbnz	w11, 0x2873c
0000000000028748	mov	x0, x8
000000000002874c	ldp	x29, x30, [sp, #0x60]
0000000000028750	ldp	x20, x19, [sp, #0x50]
0000000000028754	ldp	x22, x21, [sp, #0x40]
0000000000028758	ldp	x24, x23, [sp, #0x30]
000000000002875c	add	sp, sp, #0x70
0000000000028760	ret
0000000000028764	str	xzr, [sp, #0x18]
0000000000028768	ldarb	w8, [x23]
000000000002876c	tbnz	w8, #0x0, 0x28718
0000000000028770	b	0x2871c
0000000000028774	mov	x1, x0
0000000000028778	mov	x0, x19
000000000002877c	blr	x22
0000000000028780	ldr	x8, [x0]
0000000000028784	mov	x9, sp
0000000000028788	str	x9, [x8, #0x110]
000000000002878c	mov	x0, x1
0000000000028790	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000028794	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000028798	b	0x28798
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#<get-IM>(){}kotlin.Int:
000000000002879c	sub	sp, sp, #0x70
00000000000287a0	stp	x24, x23, [sp, #0x30]
00000000000287a4	stp	x22, x21, [sp, #0x40]
00000000000287a8	stp	x20, x19, [sp, #0x50]
00000000000287ac	stp	x29, x30, [sp, #0x60]
00000000000287b0	add	x29, sp, #0x60
00000000000287b4	mov	x20, x0
00000000000287b8	str	xzr, [sp, #0x20]
00000000000287bc	movi.16b	v0, #0x0
00000000000287c0	stp	q0, q0, [sp]
00000000000287c4	mov	x8, sp
00000000000287c8	add	x21, x8, #0x18
00000000000287cc	bl	_Kotlin_initRuntimeIfNeeded
00000000000287d0	adrp	x19, 82 ; 0x7a000
00000000000287d4	add	x19, x19, #0x2c0
00000000000287d8	ldr	x22, [x19]
00000000000287dc	mov	x0, x19
00000000000287e0	blr	x22
00000000000287e4	ldr	x8, [x0]
00000000000287e8	add	x0, x8, #0x138
00000000000287ec	ldaxr	w8, [x0]
00000000000287f0	stlxr	w9, wzr, [x0]
00000000000287f4	cbnz	w9, 0x287ec
00000000000287f8	adr	x23, #0x6ba91
00000000000287fc	nop
0000000000028800	cmp	w8, #0x1
0000000000028804	b.ne	0x28814
0000000000028808	ldarb	w8, [x23]
000000000002880c	tbz	w8, #0x0, 0x28814
0000000000028810	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028814	mov	x0, x19
0000000000028818	blr	x22
000000000002881c	ldr	x8, [x0]
0000000000028820	ldr	x9, [x8, #0x110]
0000000000028824	mov	x10, sp
0000000000028828	str	x10, [x8, #0x110]
000000000002882c	mov	x8, #0x500000000
0000000000028830	stp	x9, x8, [sp, #0x8]
0000000000028834	ldarb	w8, [x23]
0000000000028838	tbz	w8, #0x0, 0x28840
000000000002883c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028840	cbz	x20, 0x288b0
0000000000028844	nop
0000000000028848	ldr	x1, #0x6bc90
000000000002884c	mov	x0, x20
0000000000028850	mov	x2, x21
0000000000028854	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000028858	mov	x20, x0
000000000002885c	ldarb	w8, [x23]
0000000000028860	tbz	w8, #0x0, 0x28868
0000000000028864	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028868	ldr	w8, [x20, #0x28]
000000000002886c	mov	x0, x19
0000000000028870	blr	x22
0000000000028874	ldr	x9, [x0]
0000000000028878	ldr	x10, [sp, #0x8]
000000000002887c	str	x10, [x9, #0x110]
0000000000028880	add	x9, x9, #0x138
0000000000028884	mov	w10, #0x1
0000000000028888	ldaxr	wzr, [x9]
000000000002888c	stlxr	w11, w10, [x9]
0000000000028890	cbnz	w11, 0x28888
0000000000028894	mov	x0, x8
0000000000028898	ldp	x29, x30, [sp, #0x60]
000000000002889c	ldp	x20, x19, [sp, #0x50]
00000000000288a0	ldp	x22, x21, [sp, #0x40]
00000000000288a4	ldp	x24, x23, [sp, #0x30]
00000000000288a8	add	sp, sp, #0x70
00000000000288ac	ret
00000000000288b0	str	xzr, [sp, #0x18]
00000000000288b4	ldarb	w8, [x23]
00000000000288b8	tbnz	w8, #0x0, 0x28864
00000000000288bc	b	0x28868
00000000000288c0	mov	x1, x0
00000000000288c4	mov	x0, x19
00000000000288c8	blr	x22
00000000000288cc	ldr	x8, [x0]
00000000000288d0	mov	x9, sp
00000000000288d4	str	x9, [x8, #0x110]
00000000000288d8	mov	x0, x1
00000000000288dc	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
00000000000288e0	bl	0x552fc ; symbol stub for: __ZSt9terminatev
00000000000288e4	b	0x288e4
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#<get-LINE_LENGTH>(){}kotlin.Int:
00000000000288e8	sub	sp, sp, #0x70
00000000000288ec	stp	x24, x23, [sp, #0x30]
00000000000288f0	stp	x22, x21, [sp, #0x40]
00000000000288f4	stp	x20, x19, [sp, #0x50]
00000000000288f8	stp	x29, x30, [sp, #0x60]
00000000000288fc	add	x29, sp, #0x60
0000000000028900	mov	x20, x0
0000000000028904	str	xzr, [sp, #0x20]
0000000000028908	movi.16b	v0, #0x0
000000000002890c	stp	q0, q0, [sp]
0000000000028910	mov	x8, sp
0000000000028914	add	x21, x8, #0x18
0000000000028918	bl	_Kotlin_initRuntimeIfNeeded
000000000002891c	adrp	x19, 82 ; 0x7a000
0000000000028920	add	x19, x19, #0x2c0
0000000000028924	ldr	x22, [x19]
0000000000028928	mov	x0, x19
000000000002892c	blr	x22
0000000000028930	ldr	x8, [x0]
0000000000028934	add	x0, x8, #0x138
0000000000028938	ldaxr	w8, [x0]
000000000002893c	stlxr	w9, wzr, [x0]
0000000000028940	cbnz	w9, 0x28938
0000000000028944	adr	x23, #0x6b945
0000000000028948	nop
000000000002894c	cmp	w8, #0x1
0000000000028950	b.ne	0x28960
0000000000028954	ldarb	w8, [x23]
0000000000028958	tbz	w8, #0x0, 0x28960
000000000002895c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028960	mov	x0, x19
0000000000028964	blr	x22
0000000000028968	ldr	x8, [x0]
000000000002896c	ldr	x9, [x8, #0x110]
0000000000028970	mov	x10, sp
0000000000028974	str	x10, [x8, #0x110]
0000000000028978	mov	x8, #0x500000000
000000000002897c	stp	x9, x8, [sp, #0x8]
0000000000028980	ldarb	w8, [x23]
0000000000028984	tbz	w8, #0x0, 0x2898c
0000000000028988	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002898c	cbz	x20, 0x289fc
0000000000028990	nop
0000000000028994	ldr	x1, #0x6bb44
0000000000028998	mov	x0, x20
000000000002899c	mov	x2, x21
00000000000289a0	bl	0x55584 ; Objc message: -[x0 hasNext]
00000000000289a4	mov	x20, x0
00000000000289a8	ldarb	w8, [x23]
00000000000289ac	tbz	w8, #0x0, 0x289b4
00000000000289b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000289b4	ldr	w8, [x20, #0x34]
00000000000289b8	mov	x0, x19
00000000000289bc	blr	x22
00000000000289c0	ldr	x9, [x0]
00000000000289c4	ldr	x10, [sp, #0x8]
00000000000289c8	str	x10, [x9, #0x110]
00000000000289cc	add	x9, x9, #0x138
00000000000289d0	mov	w10, #0x1
00000000000289d4	ldaxr	wzr, [x9]
00000000000289d8	stlxr	w11, w10, [x9]
00000000000289dc	cbnz	w11, 0x289d4
00000000000289e0	mov	x0, x8
00000000000289e4	ldp	x29, x30, [sp, #0x60]
00000000000289e8	ldp	x20, x19, [sp, #0x50]
00000000000289ec	ldp	x22, x21, [sp, #0x40]
00000000000289f0	ldp	x24, x23, [sp, #0x30]
00000000000289f4	add	sp, sp, #0x70
00000000000289f8	ret
00000000000289fc	str	xzr, [sp, #0x18]
0000000000028a00	ldarb	w8, [x23]
0000000000028a04	tbnz	w8, #0x0, 0x289b0
0000000000028a08	b	0x289b4
0000000000028a0c	mov	x1, x0
0000000000028a10	mov	x0, x19
0000000000028a14	blr	x22
0000000000028a18	ldr	x8, [x0]
0000000000028a1c	mov	x9, sp
0000000000028a20	str	x9, [x8, #0x110]
0000000000028a24	mov	x0, x1
0000000000028a28	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000028a2c	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000028a30	b	0x28a30
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#<get-last>(){}kotlin.Int:
0000000000028a34	sub	sp, sp, #0x70
0000000000028a38	stp	x24, x23, [sp, #0x30]
0000000000028a3c	stp	x22, x21, [sp, #0x40]
0000000000028a40	stp	x20, x19, [sp, #0x50]
0000000000028a44	stp	x29, x30, [sp, #0x60]
0000000000028a48	add	x29, sp, #0x60
0000000000028a4c	mov	x20, x0
0000000000028a50	str	xzr, [sp, #0x20]
0000000000028a54	movi.16b	v0, #0x0
0000000000028a58	stp	q0, q0, [sp]
0000000000028a5c	mov	x8, sp
0000000000028a60	add	x21, x8, #0x18
0000000000028a64	bl	_Kotlin_initRuntimeIfNeeded
0000000000028a68	adrp	x19, 82 ; 0x7a000
0000000000028a6c	add	x19, x19, #0x2c0
0000000000028a70	ldr	x22, [x19]
0000000000028a74	mov	x0, x19
0000000000028a78	blr	x22
0000000000028a7c	ldr	x8, [x0]
0000000000028a80	add	x0, x8, #0x138
0000000000028a84	ldaxr	w8, [x0]
0000000000028a88	stlxr	w9, wzr, [x0]
0000000000028a8c	cbnz	w9, 0x28a84
0000000000028a90	adr	x23, #0x6b7f9
0000000000028a94	nop
0000000000028a98	cmp	w8, #0x1
0000000000028a9c	b.ne	0x28aac
0000000000028aa0	ldarb	w8, [x23]
0000000000028aa4	tbz	w8, #0x0, 0x28aac
0000000000028aa8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028aac	mov	x0, x19
0000000000028ab0	blr	x22
0000000000028ab4	ldr	x8, [x0]
0000000000028ab8	ldr	x9, [x8, #0x110]
0000000000028abc	mov	x10, sp
0000000000028ac0	str	x10, [x8, #0x110]
0000000000028ac4	mov	x8, #0x500000000
0000000000028ac8	stp	x9, x8, [sp, #0x8]
0000000000028acc	ldarb	w8, [x23]
0000000000028ad0	tbz	w8, #0x0, 0x28ad8
0000000000028ad4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028ad8	cbz	x20, 0x28b48
0000000000028adc	nop
0000000000028ae0	ldr	x1, #0x6b9f8
0000000000028ae4	mov	x0, x20
0000000000028ae8	mov	x2, x21
0000000000028aec	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000028af0	mov	x20, x0
0000000000028af4	ldarb	w8, [x23]
0000000000028af8	tbz	w8, #0x0, 0x28b00
0000000000028afc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028b00	ldr	w8, [x20, #0x3c]
0000000000028b04	mov	x0, x19
0000000000028b08	blr	x22
0000000000028b0c	ldr	x9, [x0]
0000000000028b10	ldr	x10, [sp, #0x8]
0000000000028b14	str	x10, [x9, #0x110]
0000000000028b18	add	x9, x9, #0x138
0000000000028b1c	mov	w10, #0x1
0000000000028b20	ldaxr	wzr, [x9]
0000000000028b24	stlxr	w11, w10, [x9]
0000000000028b28	cbnz	w11, 0x28b20
0000000000028b2c	mov	x0, x8
0000000000028b30	ldp	x29, x30, [sp, #0x60]
0000000000028b34	ldp	x20, x19, [sp, #0x50]
0000000000028b38	ldp	x22, x21, [sp, #0x40]
0000000000028b3c	ldp	x24, x23, [sp, #0x30]
0000000000028b40	add	sp, sp, #0x70
0000000000028b44	ret
0000000000028b48	str	xzr, [sp, #0x18]
0000000000028b4c	ldarb	w8, [x23]
0000000000028b50	tbnz	w8, #0x0, 0x28afc
0000000000028b54	b	0x28b00
0000000000028b58	mov	x1, x0
0000000000028b5c	mov	x0, x19
0000000000028b60	blr	x22
0000000000028b64	ldr	x8, [x0]
0000000000028b68	mov	x9, sp
0000000000028b6c	str	x9, [x8, #0x110]
0000000000028b70	mov	x0, x1
0000000000028b74	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000028b78	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000028b7c	b	0x28b7c
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#<get-operator>(){}com.example.fastakmm.utils.IOAndBufferOperator:
0000000000028b80	sub	sp, sp, #0x70
0000000000028b84	stp	x24, x23, [sp, #0x30]
0000000000028b88	stp	x22, x21, [sp, #0x40]
0000000000028b8c	stp	x20, x19, [sp, #0x50]
0000000000028b90	stp	x29, x30, [sp, #0x60]
0000000000028b94	add	x29, sp, #0x60
0000000000028b98	mov	x20, x0
0000000000028b9c	movi.16b	v0, #0x0
0000000000028ba0	stp	q0, q0, [sp, #0x10]
0000000000028ba4	str	q0, [sp]
0000000000028ba8	mov	x8, sp
0000000000028bac	add	x21, x8, #0x18
0000000000028bb0	bl	_Kotlin_initRuntimeIfNeeded
0000000000028bb4	adrp	x19, 82 ; 0x7a000
0000000000028bb8	add	x19, x19, #0x2c0
0000000000028bbc	ldr	x22, [x19]
0000000000028bc0	mov	x0, x19
0000000000028bc4	blr	x22
0000000000028bc8	ldr	x8, [x0]
0000000000028bcc	add	x0, x8, #0x138
0000000000028bd0	ldaxr	w8, [x0]
0000000000028bd4	stlxr	w9, wzr, [x0]
0000000000028bd8	cbnz	w9, 0x28bd0
0000000000028bdc	adr	x23, #0x6b6ad
0000000000028be0	nop
0000000000028be4	cmp	w8, #0x1
0000000000028be8	b.ne	0x28bf8
0000000000028bec	ldarb	w8, [x23]
0000000000028bf0	tbz	w8, #0x0, 0x28bf8
0000000000028bf4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028bf8	mov	x0, x19
0000000000028bfc	blr	x22
0000000000028c00	ldr	x8, [x0]
0000000000028c04	ldr	x9, [x8, #0x110]
0000000000028c08	mov	x10, sp
0000000000028c0c	str	x10, [x8, #0x110]
0000000000028c10	mov	x8, #0x600000000
0000000000028c14	stp	x9, x8, [sp, #0x8]
0000000000028c18	ldarb	w8, [x23]
0000000000028c1c	tbz	w8, #0x0, 0x28c24
0000000000028c20	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028c24	cbz	x20, 0x28ca0
0000000000028c28	nop
0000000000028c2c	ldr	x1, #0x6b8ac
0000000000028c30	mov	x0, x20
0000000000028c34	mov	x2, x21
0000000000028c38	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000028c3c	mov	x20, x0
0000000000028c40	ldarb	w8, [x23]
0000000000028c44	tbz	w8, #0x0, 0x28c4c
0000000000028c48	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028c4c	ldr	x0, [x20, #0x8]
0000000000028c50	str	x0, [sp, #0x28]
0000000000028c54	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000028c58	mov	x1, x0
0000000000028c5c	mov	x0, x19
0000000000028c60	blr	x22
0000000000028c64	ldr	x8, [x0]
0000000000028c68	ldr	x9, [sp, #0x8]
0000000000028c6c	str	x9, [x8, #0x110]
0000000000028c70	add	x8, x8, #0x138
0000000000028c74	mov	w9, #0x1
0000000000028c78	ldaxr	wzr, [x8]
0000000000028c7c	stlxr	w10, w9, [x8]
0000000000028c80	cbnz	w10, 0x28c78
0000000000028c84	mov	x0, x1
0000000000028c88	ldp	x29, x30, [sp, #0x60]
0000000000028c8c	ldp	x20, x19, [sp, #0x50]
0000000000028c90	ldp	x22, x21, [sp, #0x40]
0000000000028c94	ldp	x24, x23, [sp, #0x30]
0000000000028c98	add	sp, sp, #0x70
0000000000028c9c	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000028ca0	str	xzr, [sp, #0x18]
0000000000028ca4	ldarb	w8, [x23]
0000000000028ca8	tbnz	w8, #0x0, 0x28c48
0000000000028cac	b	0x28c4c
0000000000028cb0	mov	x1, x0
0000000000028cb4	mov	x0, x19
0000000000028cb8	blr	x22
0000000000028cbc	ldr	x8, [x0]
0000000000028cc0	mov	x9, sp
0000000000028cc4	str	x9, [x8, #0x110]
0000000000028cc8	mov	x0, x1
0000000000028ccc	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000028cd0	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000028cd4	b	0x28cd4
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#<set-ALU>(kotlin.String){}:
0000000000028cd8	sub	sp, sp, #0x80
0000000000028cdc	stp	x26, x25, [sp, #0x30]
0000000000028ce0	stp	x24, x23, [sp, #0x40]
0000000000028ce4	stp	x22, x21, [sp, #0x50]
0000000000028ce8	stp	x20, x19, [sp, #0x60]
0000000000028cec	stp	x29, x30, [sp, #0x70]
0000000000028cf0	add	x29, sp, #0x70
0000000000028cf4	mov	x20, x2
0000000000028cf8	mov	x22, x0
0000000000028cfc	movi.16b	v0, #0x0
0000000000028d00	stp	q0, q0, [sp, #0x10]
0000000000028d04	str	q0, [sp]
0000000000028d08	mov	x8, sp
0000000000028d0c	add	x21, x8, #0x20
0000000000028d10	add	x23, x8, #0x18
0000000000028d14	bl	_Kotlin_initRuntimeIfNeeded
0000000000028d18	adrp	x19, 82 ; 0x7a000
0000000000028d1c	add	x19, x19, #0x2c0
0000000000028d20	ldr	x24, [x19]
0000000000028d24	mov	x0, x19
0000000000028d28	blr	x24
0000000000028d2c	ldr	x8, [x0]
0000000000028d30	add	x0, x8, #0x138
0000000000028d34	ldaxr	w8, [x0]
0000000000028d38	stlxr	w9, wzr, [x0]
0000000000028d3c	cbnz	w9, 0x28d34
0000000000028d40	adr	x25, #0x6b549
0000000000028d44	nop
0000000000028d48	cmp	w8, #0x1
0000000000028d4c	b.ne	0x28d5c
0000000000028d50	ldarb	w8, [x25]
0000000000028d54	tbz	w8, #0x0, 0x28d5c
0000000000028d58	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028d5c	mov	x0, x19
0000000000028d60	blr	x24
0000000000028d64	ldr	x8, [x0]
0000000000028d68	ldr	x9, [x8, #0x110]
0000000000028d6c	mov	x10, sp
0000000000028d70	str	x10, [x8, #0x110]
0000000000028d74	mov	x8, #0x600000000
0000000000028d78	stp	x9, x8, [sp, #0x8]
0000000000028d7c	ldarb	w8, [x25]
0000000000028d80	tbz	w8, #0x0, 0x28d88
0000000000028d84	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028d88	adrp	x26, 108 ; 0x94000
0000000000028d8c	cbz	x22, 0x28e10
0000000000028d90	ldr	x1, [x26, #0x4d8]
0000000000028d94	mov	x0, x22
0000000000028d98	mov	x2, x23
0000000000028d9c	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000028da0	mov	x22, x0
0000000000028da4	cbz	x20, 0x28e18
0000000000028da8	ldr	x1, [x26, #0x4d8]
0000000000028dac	mov	x0, x20
0000000000028db0	mov	x2, x21
0000000000028db4	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000028db8	mov	x20, x0
0000000000028dbc	ldarb	w8, [x25]
0000000000028dc0	tbz	w8, #0x0, 0x28dc8
0000000000028dc4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028dc8	str	x20, [x22, #0x10]
0000000000028dcc	mov	x0, x19
0000000000028dd0	blr	x24
0000000000028dd4	ldr	x8, [x0]
0000000000028dd8	ldr	x9, [sp, #0x8]
0000000000028ddc	str	x9, [x8, #0x110]
0000000000028de0	add	x8, x8, #0x138
0000000000028de4	mov	w9, #0x1
0000000000028de8	ldaxr	wzr, [x8]
0000000000028dec	stlxr	w10, w9, [x8]
0000000000028df0	cbnz	w10, 0x28de8
0000000000028df4	ldp	x29, x30, [sp, #0x70]
0000000000028df8	ldp	x20, x19, [sp, #0x60]
0000000000028dfc	ldp	x22, x21, [sp, #0x50]
0000000000028e00	ldp	x24, x23, [sp, #0x40]
0000000000028e04	ldp	x26, x25, [sp, #0x30]
0000000000028e08	add	sp, sp, #0x80
0000000000028e0c	ret
0000000000028e10	str	xzr, [sp, #0x18]
0000000000028e14	cbnz	x20, 0x28da8
0000000000028e18	str	xzr, [sp, #0x20]
0000000000028e1c	ldarb	w8, [x25]
0000000000028e20	tbnz	w8, #0x0, 0x28dc4
0000000000028e24	b	0x28dc8
0000000000028e28	mov	x1, x0
0000000000028e2c	mov	x0, x19
0000000000028e30	blr	x24
0000000000028e34	ldr	x8, [x0]
0000000000028e38	mov	x9, sp
0000000000028e3c	str	x9, [x8, #0x110]
0000000000028e40	mov	x0, x1
0000000000028e44	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000028e48	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000028e4c	b	0x28e4c
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm#<set-last>(kotlin.Int){}:
0000000000028e50	sub	sp, sp, #0x70
0000000000028e54	stp	x24, x23, [sp, #0x30]
0000000000028e58	stp	x22, x21, [sp, #0x40]
0000000000028e5c	stp	x20, x19, [sp, #0x50]
0000000000028e60	stp	x29, x30, [sp, #0x60]
0000000000028e64	add	x29, sp, #0x60
0000000000028e68	mov	x19, x2
0000000000028e6c	mov	x21, x0
0000000000028e70	str	xzr, [sp, #0x20]
0000000000028e74	movi.16b	v0, #0x0
0000000000028e78	stp	q0, q0, [sp]
0000000000028e7c	mov	x8, sp
0000000000028e80	add	x22, x8, #0x18
0000000000028e84	bl	_Kotlin_initRuntimeIfNeeded
0000000000028e88	adrp	x20, 82 ; 0x7a000
0000000000028e8c	add	x20, x20, #0x2c0
0000000000028e90	ldr	x23, [x20]
0000000000028e94	mov	x0, x20
0000000000028e98	blr	x23
0000000000028e9c	ldr	x8, [x0]
0000000000028ea0	add	x0, x8, #0x138
0000000000028ea4	ldaxr	w8, [x0]
0000000000028ea8	stlxr	w9, wzr, [x0]
0000000000028eac	cbnz	w9, 0x28ea4
0000000000028eb0	adr	x24, #0x6b3d9
0000000000028eb4	nop
0000000000028eb8	cmp	w8, #0x1
0000000000028ebc	b.ne	0x28ecc
0000000000028ec0	ldarb	w8, [x24]
0000000000028ec4	tbz	w8, #0x0, 0x28ecc
0000000000028ec8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028ecc	mov	x0, x20
0000000000028ed0	blr	x23
0000000000028ed4	ldr	x8, [x0]
0000000000028ed8	ldr	x9, [x8, #0x110]
0000000000028edc	mov	x10, sp
0000000000028ee0	str	x10, [x8, #0x110]
0000000000028ee4	mov	x8, #0x500000000
0000000000028ee8	stp	x9, x8, [sp, #0x8]
0000000000028eec	ldarb	w8, [x24]
0000000000028ef0	tbz	w8, #0x0, 0x28ef8
0000000000028ef4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028ef8	cbz	x21, 0x28f64
0000000000028efc	nop
0000000000028f00	ldr	x1, #0x6b5d8
0000000000028f04	mov	x0, x21
0000000000028f08	mov	x2, x22
0000000000028f0c	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000028f10	mov	x21, x0
0000000000028f14	ldarb	w8, [x24]
0000000000028f18	tbz	w8, #0x0, 0x28f20
0000000000028f1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028f20	str	w19, [x21, #0x3c]
0000000000028f24	mov	x0, x20
0000000000028f28	blr	x23
0000000000028f2c	ldr	x8, [x0]
0000000000028f30	ldr	x9, [sp, #0x8]
0000000000028f34	str	x9, [x8, #0x110]
0000000000028f38	add	x8, x8, #0x138
0000000000028f3c	mov	w9, #0x1
0000000000028f40	ldaxr	wzr, [x8]
0000000000028f44	stlxr	w10, w9, [x8]
0000000000028f48	cbnz	w10, 0x28f40
0000000000028f4c	ldp	x29, x30, [sp, #0x60]
0000000000028f50	ldp	x20, x19, [sp, #0x50]
0000000000028f54	ldp	x22, x21, [sp, #0x40]
0000000000028f58	ldp	x24, x23, [sp, #0x30]
0000000000028f5c	add	sp, sp, #0x70
0000000000028f60	ret
0000000000028f64	str	xzr, [sp, #0x18]
0000000000028f68	ldarb	w8, [x24]
0000000000028f6c	tbnz	w8, #0x0, 0x28f1c
0000000000028f70	b	0x28f20
0000000000028f74	mov	x1, x0
0000000000028f78	mov	x0, x20
0000000000028f7c	blr	x23
0000000000028f80	ldr	x8, [x0]
0000000000028f84	mov	x9, sp
0000000000028f88	str	x9, [x8, #0x110]
0000000000028f8c	mov	x0, x1
0000000000028f90	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000028f94	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000028f98	b	0x28f98
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm.AminoAcid#<init>(kotlin.Double;kotlin.Byte){}:
0000000000028f9c	sub	sp, sp, #0x80
0000000000028fa0	stp	d9, d8, [sp, #0x30]
0000000000028fa4	stp	x24, x23, [sp, #0x40]
0000000000028fa8	stp	x22, x21, [sp, #0x50]
0000000000028fac	stp	x20, x19, [sp, #0x60]
0000000000028fb0	stp	x29, x30, [sp, #0x70]
0000000000028fb4	add	x29, sp, #0x70
0000000000028fb8	mov	x20, x2
0000000000028fbc	fmov	d8, d0
0000000000028fc0	mov	x19, x0
0000000000028fc4	str	xzr, [sp, #0x20]
0000000000028fc8	movi.16b	v0, #0x0
0000000000028fcc	stp	q0, q0, [sp]
0000000000028fd0	mov	x8, sp
0000000000028fd4	add	x22, x8, #0x18
0000000000028fd8	bl	_Kotlin_initRuntimeIfNeeded
0000000000028fdc	adrp	x21, 82 ; 0x7a000
0000000000028fe0	add	x21, x21, #0x2c0
0000000000028fe4	ldr	x23, [x21]
0000000000028fe8	mov	x0, x21
0000000000028fec	blr	x23
0000000000028ff0	ldr	x8, [x0]
0000000000028ff4	add	x0, x8, #0x138
0000000000028ff8	ldaxr	w8, [x0]
0000000000028ffc	stlxr	w9, wzr, [x0]
0000000000029000	cbnz	w9, 0x28ff8
0000000000029004	adr	x24, #0x6b285
0000000000029008	nop
000000000002900c	cmp	w8, #0x1
0000000000029010	b.ne	0x29020
0000000000029014	ldarb	w8, [x24]
0000000000029018	tbz	w8, #0x0, 0x29020
000000000002901c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029020	mov	x0, x21
0000000000029024	blr	x23
0000000000029028	ldr	x8, [x0]
000000000002902c	ldr	x9, [x8, #0x110]
0000000000029030	mov	x10, sp
0000000000029034	str	x10, [x8, #0x110]
0000000000029038	mov	x8, #0x500000000
000000000002903c	stp	x9, x8, [sp, #0x8]
0000000000029040	ldarb	w8, [x24]
0000000000029044	tbz	w8, #0x0, 0x2904c
0000000000029048	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002904c	cbz	x19, 0x290c4
0000000000029050	nop
0000000000029054	ldr	x1, #0x6b484
0000000000029058	mov	x0, x19
000000000002905c	mov	x2, x22
0000000000029060	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000029064	mov	x22, x0
0000000000029068	ldarb	w8, [x24]
000000000002906c	tbz	w8, #0x0, 0x29074
0000000000029070	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029074	str	d8, [x22, #0x8]
0000000000029078	strb	w20, [x22, #0x10]
000000000002907c	mov	x0, x21
0000000000029080	blr	x23
0000000000029084	ldr	x8, [x0]
0000000000029088	ldr	x9, [sp, #0x8]
000000000002908c	str	x9, [x8, #0x110]
0000000000029090	add	x8, x8, #0x138
0000000000029094	mov	w9, #0x1
0000000000029098	ldaxr	wzr, [x8]
000000000002909c	stlxr	w10, w9, [x8]
00000000000290a0	cbnz	w10, 0x29098
00000000000290a4	mov	x0, x19
00000000000290a8	ldp	x29, x30, [sp, #0x70]
00000000000290ac	ldp	x20, x19, [sp, #0x60]
00000000000290b0	ldp	x22, x21, [sp, #0x50]
00000000000290b4	ldp	x24, x23, [sp, #0x40]
00000000000290b8	ldp	d9, d8, [sp, #0x30]
00000000000290bc	add	sp, sp, #0x80
00000000000290c0	ret
00000000000290c4	mov	x22, #0x0
00000000000290c8	str	xzr, [sp, #0x18]
00000000000290cc	ldarb	w8, [x24]
00000000000290d0	tbnz	w8, #0x0, 0x29070
00000000000290d4	b	0x29074
00000000000290d8	mov	x1, x0
00000000000290dc	mov	x0, x21
00000000000290e0	blr	x23
00000000000290e4	ldr	x8, [x0]
00000000000290e8	mov	x9, sp
00000000000290ec	str	x9, [x8, #0x110]
00000000000290f0	mov	x0, x1
00000000000290f4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
00000000000290f8	bl	0x552fc ; symbol stub for: __ZSt9terminatev
00000000000290fc	b	0x290fc
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm.AminoAcid#copy(kotlin.Double;kotlin.Byte){}com.example.fastakmm.FastaKmm.AminoAcid:
0000000000029100	sub	sp, sp, #0x80
0000000000029104	stp	d9, d8, [sp, #0x30]
0000000000029108	stp	x24, x23, [sp, #0x40]
000000000002910c	stp	x22, x21, [sp, #0x50]
0000000000029110	stp	x20, x19, [sp, #0x60]
0000000000029114	stp	x29, x30, [sp, #0x70]
0000000000029118	add	x29, sp, #0x70
000000000002911c	mov	x20, x2
0000000000029120	fmov	d8, d0
0000000000029124	mov	x21, x0
0000000000029128	movi.16b	v0, #0x0
000000000002912c	stp	q0, q0, [sp, #0x10]
0000000000029130	str	q0, [sp]
0000000000029134	mov	x8, sp
0000000000029138	add	x22, x8, #0x18
000000000002913c	bl	_Kotlin_initRuntimeIfNeeded
0000000000029140	adrp	x19, 81 ; 0x7a000
0000000000029144	add	x19, x19, #0x2c0
0000000000029148	ldr	x23, [x19]
000000000002914c	mov	x0, x19
0000000000029150	blr	x23
0000000000029154	ldr	x8, [x0]
0000000000029158	add	x0, x8, #0x138
000000000002915c	ldaxr	w8, [x0]
0000000000029160	stlxr	w9, wzr, [x0]
0000000000029164	cbnz	w9, 0x2915c
0000000000029168	adr	x24, #0x6b121
000000000002916c	nop
0000000000029170	cmp	w8, #0x1
0000000000029174	b.ne	0x29184
0000000000029178	ldarb	w8, [x24]
000000000002917c	tbz	w8, #0x0, 0x29184
0000000000029180	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029184	mov	x0, x19
0000000000029188	blr	x23
000000000002918c	ldr	x8, [x0]
0000000000029190	ldr	x9, [x8, #0x110]
0000000000029194	mov	x10, sp
0000000000029198	str	x10, [x8, #0x110]
000000000002919c	mov	x8, #0x600000000
00000000000291a0	stp	x9, x8, [sp, #0x8]
00000000000291a4	ldarb	w8, [x24]
00000000000291a8	tbz	w8, #0x0, 0x291b0
00000000000291ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000291b0	cbz	x21, 0x29260
00000000000291b4	nop
00000000000291b8	ldr	x1, #0x6b320
00000000000291bc	mov	x0, x21
00000000000291c0	mov	x2, x22
00000000000291c4	bl	0x55584 ; Objc message: -[x0 hasNext]
00000000000291c8	ldarb	w8, [x24]
00000000000291cc	tbz	w8, #0x0, 0x291d4
00000000000291d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000291d4	mov	x0, x19
00000000000291d8	blr	x23
00000000000291dc	ldr	x8, [x0]
00000000000291e0	ldr	x8, [x8, #0x118]
00000000000291e4	add	x0, x8, #0x70
00000000000291e8	mov	w1, #0x20
00000000000291ec	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000291f0	adr	x8, #0x3c7c0
00000000000291f4	nop
00000000000291f8	str	x8, [x0, #0x10]!
00000000000291fc	stur	xzr, [x0, #-0x8]
0000000000029200	str	x0, [sp, #0x28]
0000000000029204	str	d8, [x0, #0x8]
0000000000029208	strb	w20, [x0, #0x10]
000000000002920c	str	x0, [sp, #0x28]
0000000000029210	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000029214	mov	x1, x0
0000000000029218	mov	x0, x19
000000000002921c	blr	x23
0000000000029220	ldr	x8, [x0]
0000000000029224	ldr	x9, [sp, #0x8]
0000000000029228	str	x9, [x8, #0x110]
000000000002922c	add	x8, x8, #0x138
0000000000029230	mov	w9, #0x1
0000000000029234	ldaxr	wzr, [x8]
0000000000029238	stlxr	w10, w9, [x8]
000000000002923c	cbnz	w10, 0x29234
0000000000029240	mov	x0, x1
0000000000029244	ldp	x29, x30, [sp, #0x70]
0000000000029248	ldp	x20, x19, [sp, #0x60]
000000000002924c	ldp	x22, x21, [sp, #0x50]
0000000000029250	ldp	x24, x23, [sp, #0x40]
0000000000029254	ldp	d9, d8, [sp, #0x30]
0000000000029258	add	sp, sp, #0x80
000000000002925c	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000029260	str	xzr, [sp, #0x18]
0000000000029264	ldarb	w8, [x24]
0000000000029268	tbnz	w8, #0x0, 0x291d0
000000000002926c	b	0x291d4
0000000000029270	mov	x1, x0
0000000000029274	mov	x0, x19
0000000000029278	blr	x23
000000000002927c	ldr	x8, [x0]
0000000000029280	mov	x9, sp
0000000000029284	str	x9, [x8, #0x110]
0000000000029288	mov	x0, x1
000000000002928c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000029290	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000029294	b	0x29294
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm.AminoAcid#equals(kotlin.Any?){}kotlin.Boolean:
0000000000029298	sub	sp, sp, #0x80
000000000002929c	stp	x26, x25, [sp, #0x30]
00000000000292a0	stp	x24, x23, [sp, #0x40]
00000000000292a4	stp	x22, x21, [sp, #0x50]
00000000000292a8	stp	x20, x19, [sp, #0x60]
00000000000292ac	stp	x29, x30, [sp, #0x70]
00000000000292b0	add	x29, sp, #0x70
00000000000292b4	mov	x20, x2
00000000000292b8	mov	x22, x0
00000000000292bc	movi.16b	v0, #0x0
00000000000292c0	stp	q0, q0, [sp, #0x10]
00000000000292c4	str	q0, [sp]
00000000000292c8	mov	x8, sp
00000000000292cc	add	x21, x8, #0x20
00000000000292d0	add	x23, x8, #0x18
00000000000292d4	bl	_Kotlin_initRuntimeIfNeeded
00000000000292d8	adrp	x19, 81 ; 0x7a000
00000000000292dc	add	x19, x19, #0x2c0
00000000000292e0	ldr	x24, [x19]
00000000000292e4	mov	x0, x19
00000000000292e8	blr	x24
00000000000292ec	ldr	x8, [x0]
00000000000292f0	add	x0, x8, #0x138
00000000000292f4	ldaxr	w8, [x0]
00000000000292f8	stlxr	w9, wzr, [x0]
00000000000292fc	cbnz	w9, 0x292f4
0000000000029300	adr	x25, #0x6af89
0000000000029304	nop
0000000000029308	cmp	w8, #0x1
000000000002930c	b.ne	0x2931c
0000000000029310	ldarb	w8, [x25]
0000000000029314	tbz	w8, #0x0, 0x2931c
0000000000029318	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002931c	mov	x0, x19
0000000000029320	blr	x24
0000000000029324	ldr	x8, [x0]
0000000000029328	ldr	x9, [x8, #0x110]
000000000002932c	mov	x10, sp
0000000000029330	str	x10, [x8, #0x110]
0000000000029334	mov	x8, #0x600000000
0000000000029338	stp	x9, x8, [sp, #0x8]
000000000002933c	ldarb	w8, [x25]
0000000000029340	tbz	w8, #0x0, 0x29348
0000000000029344	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029348	adrp	x25, 107 ; 0x94000
000000000002934c	cbz	x22, 0x29380
0000000000029350	ldr	x1, [x25, #0x4d8]
0000000000029354	mov	x0, x22
0000000000029358	mov	x2, x23
000000000002935c	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000029360	mov	x22, x0
0000000000029364	cbz	x20, 0x29388
0000000000029368	ldr	x1, [x25, #0x4d8]
000000000002936c	mov	x0, x20
0000000000029370	mov	x2, x21
0000000000029374	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000029378	mov	x1, x0
000000000002937c	b	0x29390
0000000000029380	str	xzr, [sp, #0x18]
0000000000029384	cbnz	x20, 0x29368
0000000000029388	mov	x1, #0x0
000000000002938c	str	xzr, [sp, #0x20]
0000000000029390	mov	x0, x22
0000000000029394	bl	"_kfun:com.example.fastakmm.FastaKmm.AminoAcid#equals(kotlin.Any?){}kotlin.Boolean"
0000000000029398	mov	x1, x0
000000000002939c	mov	x0, x19
00000000000293a0	blr	x24
00000000000293a4	ldr	x8, [x0]
00000000000293a8	ldr	x9, [sp, #0x8]
00000000000293ac	str	x9, [x8, #0x110]
00000000000293b0	add	x8, x8, #0x138
00000000000293b4	mov	w9, #0x1
00000000000293b8	ldaxr	wzr, [x8]
00000000000293bc	stlxr	w10, w9, [x8]
00000000000293c0	cbnz	w10, 0x293b8
00000000000293c4	mov	x0, x1
00000000000293c8	ldp	x29, x30, [sp, #0x70]
00000000000293cc	ldp	x20, x19, [sp, #0x60]
00000000000293d0	ldp	x22, x21, [sp, #0x50]
00000000000293d4	ldp	x24, x23, [sp, #0x40]
00000000000293d8	ldp	x26, x25, [sp, #0x30]
00000000000293dc	add	sp, sp, #0x80
00000000000293e0	ret
00000000000293e4	mov	x1, x0
00000000000293e8	mov	x0, x19
00000000000293ec	blr	x24
00000000000293f0	ldr	x8, [x0]
00000000000293f4	mov	x9, sp
00000000000293f8	str	x9, [x8, #0x110]
00000000000293fc	mov	x0, x1
0000000000029400	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000029404	ldr	x8, [x0, #0x8]
0000000000029408	ldr	x20, [x8]
000000000002940c	str	x20, [sp, #0x28]
0000000000029410	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000029414	mov	x0, x20
0000000000029418	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002941c	brk	#0x1
0000000000029420	mov	x1, x0
0000000000029424	mov	x0, x19
0000000000029428	blr	x24
000000000002942c	ldr	x8, [x0]
0000000000029430	mov	x9, sp
0000000000029434	str	x9, [x8, #0x110]
0000000000029438	mov	x0, x1
000000000002943c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000029440	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000029444	b	0x29444
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm.AminoAcid#hashCode(){}kotlin.Int:
0000000000029448	sub	sp, sp, #0x70
000000000002944c	stp	x24, x23, [sp, #0x30]
0000000000029450	stp	x22, x21, [sp, #0x40]
0000000000029454	stp	x20, x19, [sp, #0x50]
0000000000029458	stp	x29, x30, [sp, #0x60]
000000000002945c	add	x29, sp, #0x60
0000000000029460	mov	x20, x0
0000000000029464	str	xzr, [sp, #0x20]
0000000000029468	movi.16b	v0, #0x0
000000000002946c	stp	q0, q0, [sp]
0000000000029470	mov	x8, sp
0000000000029474	add	x21, x8, #0x18
0000000000029478	bl	_Kotlin_initRuntimeIfNeeded
000000000002947c	adrp	x19, 81 ; 0x7a000
0000000000029480	add	x19, x19, #0x2c0
0000000000029484	ldr	x22, [x19]
0000000000029488	mov	x0, x19
000000000002948c	blr	x22
0000000000029490	ldr	x8, [x0]
0000000000029494	add	x0, x8, #0x138
0000000000029498	ldaxr	w8, [x0]
000000000002949c	stlxr	w9, wzr, [x0]
00000000000294a0	cbnz	w9, 0x29498
00000000000294a4	adr	x23, #0x6ade5
00000000000294a8	nop
00000000000294ac	cmp	w8, #0x1
00000000000294b0	b.ne	0x294c0
00000000000294b4	ldarb	w8, [x23]
00000000000294b8	tbz	w8, #0x0, 0x294c0
00000000000294bc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000294c0	mov	x0, x19
00000000000294c4	blr	x22
00000000000294c8	ldr	x8, [x0]
00000000000294cc	ldr	x9, [x8, #0x110]
00000000000294d0	mov	x10, sp
00000000000294d4	str	x10, [x8, #0x110]
00000000000294d8	mov	x8, #0x500000000
00000000000294dc	stp	x9, x8, [sp, #0x8]
00000000000294e0	ldarb	w8, [x23]
00000000000294e4	tbz	w8, #0x0, 0x294ec
00000000000294e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000294ec	cbz	x20, 0x29508
00000000000294f0	nop
00000000000294f4	ldr	x1, #0x6afe4
00000000000294f8	mov	x0, x20
00000000000294fc	mov	x2, x21
0000000000029500	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000029504	b	0x29510
0000000000029508	mov	x0, #0x0
000000000002950c	str	xzr, [sp, #0x18]
0000000000029510	bl	"_kfun:com.example.fastakmm.FastaKmm.AminoAcid#hashCode(){}kotlin.Int"
0000000000029514	mov	w8, w0
0000000000029518	mov	x0, x19
000000000002951c	blr	x22
0000000000029520	ldr	x9, [x0]
0000000000029524	ldr	x10, [sp, #0x8]
0000000000029528	str	x10, [x9, #0x110]
000000000002952c	add	x9, x9, #0x138
0000000000029530	mov	w10, #0x1
0000000000029534	ldaxr	wzr, [x9]
0000000000029538	stlxr	w11, w10, [x9]
000000000002953c	cbnz	w11, 0x29534
0000000000029540	mov	x0, x8
0000000000029544	ldp	x29, x30, [sp, #0x60]
0000000000029548	ldp	x20, x19, [sp, #0x50]
000000000002954c	ldp	x22, x21, [sp, #0x40]
0000000000029550	ldp	x24, x23, [sp, #0x30]
0000000000029554	add	sp, sp, #0x70
0000000000029558	ret
000000000002955c	mov	x1, x0
0000000000029560	mov	x0, x19
0000000000029564	blr	x22
0000000000029568	ldr	x8, [x0]
000000000002956c	mov	x9, sp
0000000000029570	str	x9, [x8, #0x110]
0000000000029574	mov	x0, x1
0000000000029578	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002957c	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000029580	b	0x29580
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm.AminoAcid#toString(){}kotlin.String:
0000000000029584	sub	sp, sp, #0x70
0000000000029588	stp	x24, x23, [sp, #0x30]
000000000002958c	stp	x22, x21, [sp, #0x40]
0000000000029590	stp	x20, x19, [sp, #0x50]
0000000000029594	stp	x29, x30, [sp, #0x60]
0000000000029598	add	x29, sp, #0x60
000000000002959c	mov	x21, x0
00000000000295a0	movi.16b	v0, #0x0
00000000000295a4	stp	q0, q0, [sp, #0x10]
00000000000295a8	str	q0, [sp]
00000000000295ac	mov	x8, sp
00000000000295b0	add	x22, x8, #0x18
00000000000295b4	add	x20, x8, #0x28
00000000000295b8	bl	_Kotlin_initRuntimeIfNeeded
00000000000295bc	adrp	x19, 81 ; 0x7a000
00000000000295c0	add	x19, x19, #0x2c0
00000000000295c4	ldr	x23, [x19]
00000000000295c8	mov	x0, x19
00000000000295cc	blr	x23
00000000000295d0	ldr	x8, [x0]
00000000000295d4	add	x0, x8, #0x138
00000000000295d8	ldaxr	w8, [x0]
00000000000295dc	stlxr	w9, wzr, [x0]
00000000000295e0	cbnz	w9, 0x295d8
00000000000295e4	adr	x24, #0x6aca5
00000000000295e8	nop
00000000000295ec	cmp	w8, #0x1
00000000000295f0	b.ne	0x29600
00000000000295f4	ldarb	w8, [x24]
00000000000295f8	tbz	w8, #0x0, 0x29600
00000000000295fc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029600	mov	x0, x19
0000000000029604	blr	x23
0000000000029608	ldr	x8, [x0]
000000000002960c	ldr	x9, [x8, #0x110]
0000000000029610	mov	x10, sp
0000000000029614	str	x10, [x8, #0x110]
0000000000029618	mov	x8, #0x600000000
000000000002961c	stp	x9, x8, [sp, #0x8]
0000000000029620	ldarb	w8, [x24]
0000000000029624	tbz	w8, #0x0, 0x2962c
0000000000029628	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002962c	cbz	x21, 0x29648
0000000000029630	nop
0000000000029634	ldr	x1, #0x6aea4
0000000000029638	mov	x0, x21
000000000002963c	mov	x2, x22
0000000000029640	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000029644	b	0x29650
0000000000029648	mov	x0, #0x0
000000000002964c	str	xzr, [sp, #0x18]
0000000000029650	mov	x1, x20
0000000000029654	bl	"_kfun:com.example.fastakmm.FastaKmm.AminoAcid#toString(){}kotlin.String"
0000000000029658	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002965c	mov	x1, x0
0000000000029660	mov	x0, x19
0000000000029664	blr	x23
0000000000029668	ldr	x8, [x0]
000000000002966c	ldr	x9, [sp, #0x8]
0000000000029670	str	x9, [x8, #0x110]
0000000000029674	add	x8, x8, #0x138
0000000000029678	mov	w9, #0x1
000000000002967c	ldaxr	wzr, [x8]
0000000000029680	stlxr	w10, w9, [x8]
0000000000029684	cbnz	w10, 0x2967c
0000000000029688	mov	x0, x1
000000000002968c	ldp	x29, x30, [sp, #0x60]
0000000000029690	ldp	x20, x19, [sp, #0x50]
0000000000029694	ldp	x22, x21, [sp, #0x40]
0000000000029698	ldp	x24, x23, [sp, #0x30]
000000000002969c	add	sp, sp, #0x70
00000000000296a0	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
00000000000296a4	mov	x1, x0
00000000000296a8	mov	x0, x19
00000000000296ac	blr	x23
00000000000296b0	ldr	x8, [x0]
00000000000296b4	mov	x9, sp
00000000000296b8	str	x9, [x8, #0x110]
00000000000296bc	mov	x0, x1
00000000000296c0	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
00000000000296c4	ldr	x8, [x0, #0x8]
00000000000296c8	ldr	x20, [x8]
00000000000296cc	str	x20, [sp, #0x20]
00000000000296d0	bl	0x55338 ; symbol stub for: ___cxa_end_catch
00000000000296d4	mov	x0, x20
00000000000296d8	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
00000000000296dc	brk	#0x1
00000000000296e0	mov	x1, x0
00000000000296e4	mov	x0, x19
00000000000296e8	blr	x23
00000000000296ec	ldr	x8, [x0]
00000000000296f0	mov	x9, sp
00000000000296f4	str	x9, [x8, #0x110]
00000000000296f8	mov	x0, x1
00000000000296fc	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000029700	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000029704	b	0x29704
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm.AminoAcid#<get-char>(){}kotlin.Byte:
0000000000029708	sub	sp, sp, #0x70
000000000002970c	stp	x24, x23, [sp, #0x30]
0000000000029710	stp	x22, x21, [sp, #0x40]
0000000000029714	stp	x20, x19, [sp, #0x50]
0000000000029718	stp	x29, x30, [sp, #0x60]
000000000002971c	add	x29, sp, #0x60
0000000000029720	mov	x20, x0
0000000000029724	str	xzr, [sp, #0x20]
0000000000029728	movi.16b	v0, #0x0
000000000002972c	stp	q0, q0, [sp]
0000000000029730	mov	x8, sp
0000000000029734	add	x21, x8, #0x18
0000000000029738	bl	_Kotlin_initRuntimeIfNeeded
000000000002973c	adrp	x19, 81 ; 0x7a000
0000000000029740	add	x19, x19, #0x2c0
0000000000029744	ldr	x22, [x19]
0000000000029748	mov	x0, x19
000000000002974c	blr	x22
0000000000029750	ldr	x8, [x0]
0000000000029754	add	x0, x8, #0x138
0000000000029758	ldaxr	w8, [x0]
000000000002975c	stlxr	w9, wzr, [x0]
0000000000029760	cbnz	w9, 0x29758
0000000000029764	adr	x23, #0x6ab25
0000000000029768	nop
000000000002976c	cmp	w8, #0x1
0000000000029770	b.ne	0x29780
0000000000029774	ldarb	w8, [x23]
0000000000029778	tbz	w8, #0x0, 0x29780
000000000002977c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029780	mov	x0, x19
0000000000029784	blr	x22
0000000000029788	ldr	x8, [x0]
000000000002978c	ldr	x9, [x8, #0x110]
0000000000029790	mov	x10, sp
0000000000029794	str	x10, [x8, #0x110]
0000000000029798	mov	x8, #0x500000000
000000000002979c	stp	x9, x8, [sp, #0x8]
00000000000297a0	ldarb	w8, [x23]
00000000000297a4	tbz	w8, #0x0, 0x297ac
00000000000297a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000297ac	cbz	x20, 0x2981c
00000000000297b0	nop
00000000000297b4	ldr	x1, #0x6ad24
00000000000297b8	mov	x0, x20
00000000000297bc	mov	x2, x21
00000000000297c0	bl	0x55584 ; Objc message: -[x0 hasNext]
00000000000297c4	mov	x20, x0
00000000000297c8	ldarb	w8, [x23]
00000000000297cc	tbz	w8, #0x0, 0x297d4
00000000000297d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000297d4	ldrb	w8, [x20, #0x10]
00000000000297d8	mov	x0, x19
00000000000297dc	blr	x22
00000000000297e0	ldr	x9, [x0]
00000000000297e4	ldr	x10, [sp, #0x8]
00000000000297e8	str	x10, [x9, #0x110]
00000000000297ec	add	x9, x9, #0x138
00000000000297f0	mov	w10, #0x1
00000000000297f4	ldaxr	wzr, [x9]
00000000000297f8	stlxr	w11, w10, [x9]
00000000000297fc	cbnz	w11, 0x297f4
0000000000029800	sxtb	w0, w8
0000000000029804	ldp	x29, x30, [sp, #0x60]
0000000000029808	ldp	x20, x19, [sp, #0x50]
000000000002980c	ldp	x22, x21, [sp, #0x40]
0000000000029810	ldp	x24, x23, [sp, #0x30]
0000000000029814	add	sp, sp, #0x70
0000000000029818	ret
000000000002981c	str	xzr, [sp, #0x18]
0000000000029820	ldarb	w8, [x23]
0000000000029824	tbnz	w8, #0x0, 0x297d0
0000000000029828	b	0x297d4
000000000002982c	mov	x1, x0
0000000000029830	mov	x0, x19
0000000000029834	blr	x22
0000000000029838	ldr	x8, [x0]
000000000002983c	mov	x9, sp
0000000000029840	str	x9, [x8, #0x110]
0000000000029844	mov	x0, x1
0000000000029848	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002984c	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000029850	b	0x29850
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm.AminoAcid#<get-prob>(){}kotlin.Double:
0000000000029854	sub	sp, sp, #0x70
0000000000029858	stp	x24, x23, [sp, #0x30]
000000000002985c	stp	x22, x21, [sp, #0x40]
0000000000029860	stp	x20, x19, [sp, #0x50]
0000000000029864	stp	x29, x30, [sp, #0x60]
0000000000029868	add	x29, sp, #0x60
000000000002986c	mov	x20, x0
0000000000029870	str	xzr, [sp, #0x20]
0000000000029874	movi.16b	v0, #0x0
0000000000029878	stp	q0, q0, [sp]
000000000002987c	mov	x8, sp
0000000000029880	add	x21, x8, #0x18
0000000000029884	bl	_Kotlin_initRuntimeIfNeeded
0000000000029888	adrp	x19, 81 ; 0x7a000
000000000002988c	add	x19, x19, #0x2c0
0000000000029890	ldr	x22, [x19]
0000000000029894	mov	x0, x19
0000000000029898	blr	x22
000000000002989c	ldr	x8, [x0]
00000000000298a0	add	x0, x8, #0x138
00000000000298a4	ldaxr	w8, [x0]
00000000000298a8	stlxr	w9, wzr, [x0]
00000000000298ac	cbnz	w9, 0x298a4
00000000000298b0	adr	x23, #0x6a9d9
00000000000298b4	nop
00000000000298b8	cmp	w8, #0x1
00000000000298bc	b.ne	0x298cc
00000000000298c0	ldarb	w8, [x23]
00000000000298c4	tbz	w8, #0x0, 0x298cc
00000000000298c8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000298cc	mov	x0, x19
00000000000298d0	blr	x22
00000000000298d4	ldr	x8, [x0]
00000000000298d8	ldr	x9, [x8, #0x110]
00000000000298dc	mov	x10, sp
00000000000298e0	str	x10, [x8, #0x110]
00000000000298e4	mov	x8, #0x500000000
00000000000298e8	stp	x9, x8, [sp, #0x8]
00000000000298ec	ldarb	w8, [x23]
00000000000298f0	tbz	w8, #0x0, 0x298f8
00000000000298f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000298f8	cbz	x20, 0x29964
00000000000298fc	nop
0000000000029900	ldr	x1, #0x6abd8
0000000000029904	mov	x0, x20
0000000000029908	mov	x2, x21
000000000002990c	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000029910	mov	x20, x0
0000000000029914	ldarb	w8, [x23]
0000000000029918	tbz	w8, #0x0, 0x29920
000000000002991c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029920	ldr	d0, [x20, #0x8]
0000000000029924	mov	x0, x19
0000000000029928	blr	x22
000000000002992c	ldr	x8, [x0]
0000000000029930	ldr	x9, [sp, #0x8]
0000000000029934	str	x9, [x8, #0x110]
0000000000029938	add	x8, x8, #0x138
000000000002993c	mov	w9, #0x1
0000000000029940	ldaxr	wzr, [x8]
0000000000029944	stlxr	w10, w9, [x8]
0000000000029948	cbnz	w10, 0x29940
000000000002994c	ldp	x29, x30, [sp, #0x60]
0000000000029950	ldp	x20, x19, [sp, #0x50]
0000000000029954	ldp	x22, x21, [sp, #0x40]
0000000000029958	ldp	x24, x23, [sp, #0x30]
000000000002995c	add	sp, sp, #0x70
0000000000029960	ret
0000000000029964	str	xzr, [sp, #0x18]
0000000000029968	ldarb	w8, [x23]
000000000002996c	tbnz	w8, #0x0, 0x2991c
0000000000029970	b	0x29920
0000000000029974	mov	x1, x0
0000000000029978	mov	x0, x19
000000000002997c	blr	x22
0000000000029980	ldr	x8, [x0]
0000000000029984	mov	x9, sp
0000000000029988	str	x9, [x8, #0x110]
000000000002998c	mov	x0, x1
0000000000029990	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000029994	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000029998	b	0x29998
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm.AminoAcid#<set-char>(kotlin.Byte){}:
000000000002999c	sub	sp, sp, #0x70
00000000000299a0	stp	x24, x23, [sp, #0x30]
00000000000299a4	stp	x22, x21, [sp, #0x40]
00000000000299a8	stp	x20, x19, [sp, #0x50]
00000000000299ac	stp	x29, x30, [sp, #0x60]
00000000000299b0	add	x29, sp, #0x60
00000000000299b4	mov	x19, x2
00000000000299b8	mov	x21, x0
00000000000299bc	str	xzr, [sp, #0x20]
00000000000299c0	movi.16b	v0, #0x0
00000000000299c4	stp	q0, q0, [sp]
00000000000299c8	mov	x8, sp
00000000000299cc	add	x22, x8, #0x18
00000000000299d0	bl	_Kotlin_initRuntimeIfNeeded
00000000000299d4	adrp	x20, 81 ; 0x7a000
00000000000299d8	add	x20, x20, #0x2c0
00000000000299dc	ldr	x23, [x20]
00000000000299e0	mov	x0, x20
00000000000299e4	blr	x23
00000000000299e8	ldr	x8, [x0]
00000000000299ec	add	x0, x8, #0x138
00000000000299f0	ldaxr	w8, [x0]
00000000000299f4	stlxr	w9, wzr, [x0]
00000000000299f8	cbnz	w9, 0x299f0
00000000000299fc	adr	x24, #0x6a88d
0000000000029a00	nop
0000000000029a04	cmp	w8, #0x1
0000000000029a08	b.ne	0x29a18
0000000000029a0c	ldarb	w8, [x24]
0000000000029a10	tbz	w8, #0x0, 0x29a18
0000000000029a14	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029a18	mov	x0, x20
0000000000029a1c	blr	x23
0000000000029a20	ldr	x8, [x0]
0000000000029a24	ldr	x9, [x8, #0x110]
0000000000029a28	mov	x10, sp
0000000000029a2c	str	x10, [x8, #0x110]
0000000000029a30	mov	x8, #0x500000000
0000000000029a34	stp	x9, x8, [sp, #0x8]
0000000000029a38	ldarb	w8, [x24]
0000000000029a3c	tbz	w8, #0x0, 0x29a44
0000000000029a40	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029a44	cbz	x21, 0x29ab0
0000000000029a48	nop
0000000000029a4c	ldr	x1, #0x6aa8c
0000000000029a50	mov	x0, x21
0000000000029a54	mov	x2, x22
0000000000029a58	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000029a5c	mov	x21, x0
0000000000029a60	ldarb	w8, [x24]
0000000000029a64	tbz	w8, #0x0, 0x29a6c
0000000000029a68	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029a6c	strb	w19, [x21, #0x10]
0000000000029a70	mov	x0, x20
0000000000029a74	blr	x23
0000000000029a78	ldr	x8, [x0]
0000000000029a7c	ldr	x9, [sp, #0x8]
0000000000029a80	str	x9, [x8, #0x110]
0000000000029a84	add	x8, x8, #0x138
0000000000029a88	mov	w9, #0x1
0000000000029a8c	ldaxr	wzr, [x8]
0000000000029a90	stlxr	w10, w9, [x8]
0000000000029a94	cbnz	w10, 0x29a8c
0000000000029a98	ldp	x29, x30, [sp, #0x60]
0000000000029a9c	ldp	x20, x19, [sp, #0x50]
0000000000029aa0	ldp	x22, x21, [sp, #0x40]
0000000000029aa4	ldp	x24, x23, [sp, #0x30]
0000000000029aa8	add	sp, sp, #0x70
0000000000029aac	ret
0000000000029ab0	str	xzr, [sp, #0x18]
0000000000029ab4	ldarb	w8, [x24]
0000000000029ab8	tbnz	w8, #0x0, 0x29a68
0000000000029abc	b	0x29a6c
0000000000029ac0	mov	x1, x0
0000000000029ac4	mov	x0, x20
0000000000029ac8	blr	x23
0000000000029acc	ldr	x8, [x0]
0000000000029ad0	mov	x9, sp
0000000000029ad4	str	x9, [x8, #0x110]
0000000000029ad8	mov	x0, x1
0000000000029adc	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000029ae0	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000029ae4	b	0x29ae4
_objc2kotlin_kfun:com.example.fastakmm.FastaKmm.AminoAcid#<set-prob>(kotlin.Double){}:
0000000000029ae8	sub	sp, sp, #0x80
0000000000029aec	stp	d9, d8, [sp, #0x30]
0000000000029af0	stp	x24, x23, [sp, #0x40]
0000000000029af4	stp	x22, x21, [sp, #0x50]
0000000000029af8	stp	x20, x19, [sp, #0x60]
0000000000029afc	stp	x29, x30, [sp, #0x70]
0000000000029b00	add	x29, sp, #0x70
0000000000029b04	fmov	d8, d0
0000000000029b08	mov	x20, x0
0000000000029b0c	str	xzr, [sp, #0x20]
0000000000029b10	movi.16b	v0, #0x0
0000000000029b14	stp	q0, q0, [sp]
0000000000029b18	mov	x8, sp
0000000000029b1c	add	x21, x8, #0x18
0000000000029b20	bl	_Kotlin_initRuntimeIfNeeded
0000000000029b24	adrp	x19, 81 ; 0x7a000
0000000000029b28	add	x19, x19, #0x2c0
0000000000029b2c	ldr	x22, [x19]
0000000000029b30	mov	x0, x19
0000000000029b34	blr	x22
0000000000029b38	ldr	x8, [x0]
0000000000029b3c	add	x0, x8, #0x138
0000000000029b40	ldaxr	w8, [x0]
0000000000029b44	stlxr	w9, wzr, [x0]
0000000000029b48	cbnz	w9, 0x29b40
0000000000029b4c	adr	x23, #0x6a73d
0000000000029b50	nop
0000000000029b54	cmp	w8, #0x1
0000000000029b58	b.ne	0x29b68
0000000000029b5c	ldarb	w8, [x23]
0000000000029b60	tbz	w8, #0x0, 0x29b68
0000000000029b64	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029b68	mov	x0, x19
0000000000029b6c	blr	x22
0000000000029b70	ldr	x8, [x0]
0000000000029b74	ldr	x9, [x8, #0x110]
0000000000029b78	mov	x10, sp
0000000000029b7c	str	x10, [x8, #0x110]
0000000000029b80	mov	x8, #0x500000000
0000000000029b84	stp	x9, x8, [sp, #0x8]
0000000000029b88	ldarb	w8, [x23]
0000000000029b8c	tbz	w8, #0x0, 0x29b94
0000000000029b90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029b94	cbz	x20, 0x29c04
0000000000029b98	nop
0000000000029b9c	ldr	x1, #0x6a93c
0000000000029ba0	mov	x0, x20
0000000000029ba4	mov	x2, x21
0000000000029ba8	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000029bac	mov	x20, x0
0000000000029bb0	ldarb	w8, [x23]
0000000000029bb4	tbz	w8, #0x0, 0x29bbc
0000000000029bb8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029bbc	str	d8, [x20, #0x8]
0000000000029bc0	mov	x0, x19
0000000000029bc4	blr	x22
0000000000029bc8	ldr	x8, [x0]
0000000000029bcc	ldr	x9, [sp, #0x8]
0000000000029bd0	str	x9, [x8, #0x110]
0000000000029bd4	add	x8, x8, #0x138
0000000000029bd8	mov	w9, #0x1
0000000000029bdc	ldaxr	wzr, [x8]
0000000000029be0	stlxr	w10, w9, [x8]
0000000000029be4	cbnz	w10, 0x29bdc
0000000000029be8	ldp	x29, x30, [sp, #0x70]
0000000000029bec	ldp	x20, x19, [sp, #0x60]
0000000000029bf0	ldp	x22, x21, [sp, #0x50]
0000000000029bf4	ldp	x24, x23, [sp, #0x40]
0000000000029bf8	ldp	d9, d8, [sp, #0x30]
0000000000029bfc	add	sp, sp, #0x80
0000000000029c00	ret
0000000000029c04	str	xzr, [sp, #0x18]
0000000000029c08	ldarb	w8, [x23]
0000000000029c0c	tbnz	w8, #0x0, 0x29bb8
0000000000029c10	b	0x29bbc
0000000000029c14	mov	x1, x0
0000000000029c18	mov	x0, x19
0000000000029c1c	blr	x22
0000000000029c20	ldr	x8, [x0]
0000000000029c24	mov	x9, sp
0000000000029c28	str	x9, [x8, #0x110]
0000000000029c2c	mov	x0, x1
0000000000029c30	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000029c34	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000029c38	b	0x29c38
_objc2kotlin_kfun:com.example.fastakmm.utils.IOAndBufferOperator#<init>(){}:
0000000000029c3c	sub	sp, sp, #0x70
0000000000029c40	stp	x24, x23, [sp, #0x30]
0000000000029c44	stp	x22, x21, [sp, #0x40]
0000000000029c48	stp	x20, x19, [sp, #0x50]
0000000000029c4c	stp	x29, x30, [sp, #0x60]
0000000000029c50	add	x29, sp, #0x60
0000000000029c54	mov	x19, x0
0000000000029c58	str	xzr, [sp, #0x20]
0000000000029c5c	movi.16b	v0, #0x0
0000000000029c60	stp	q0, q0, [sp]
0000000000029c64	mov	x8, sp
0000000000029c68	add	x21, x8, #0x18
0000000000029c6c	bl	_Kotlin_initRuntimeIfNeeded
0000000000029c70	adrp	x20, 81 ; 0x7a000
0000000000029c74	add	x20, x20, #0x2c0
0000000000029c78	ldr	x22, [x20]
0000000000029c7c	mov	x0, x20
0000000000029c80	blr	x22
0000000000029c84	ldr	x8, [x0]
0000000000029c88	add	x0, x8, #0x138
0000000000029c8c	ldaxr	w8, [x0]
0000000000029c90	stlxr	w9, wzr, [x0]
0000000000029c94	cbnz	w9, 0x29c8c
0000000000029c98	adr	x23, #0x6a5f1
0000000000029c9c	nop
0000000000029ca0	cmp	w8, #0x1
0000000000029ca4	b.ne	0x29cb4
0000000000029ca8	ldarb	w8, [x23]
0000000000029cac	tbz	w8, #0x0, 0x29cb4
0000000000029cb0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029cb4	mov	x0, x20
0000000000029cb8	blr	x22
0000000000029cbc	ldr	x8, [x0]
0000000000029cc0	ldr	x9, [x8, #0x110]
0000000000029cc4	mov	x10, sp
0000000000029cc8	str	x10, [x8, #0x110]
0000000000029ccc	mov	x8, #0x500000000
0000000000029cd0	stp	x9, x8, [sp, #0x8]
0000000000029cd4	ldarb	w8, [x23]
0000000000029cd8	tbz	w8, #0x0, 0x29ce0
0000000000029cdc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029ce0	cbz	x19, 0x29d48
0000000000029ce4	nop
0000000000029ce8	ldr	x1, #0x6a7f0
0000000000029cec	mov	x0, x19
0000000000029cf0	mov	x2, x21
0000000000029cf4	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000029cf8	ldarb	w8, [x23]
0000000000029cfc	tbz	w8, #0x0, 0x29d04
0000000000029d00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029d04	mov	x0, x20
0000000000029d08	blr	x22
0000000000029d0c	ldr	x8, [x0]
0000000000029d10	ldr	x9, [sp, #0x8]
0000000000029d14	str	x9, [x8, #0x110]
0000000000029d18	add	x8, x8, #0x138
0000000000029d1c	mov	w9, #0x1
0000000000029d20	ldaxr	wzr, [x8]
0000000000029d24	stlxr	w10, w9, [x8]
0000000000029d28	cbnz	w10, 0x29d20
0000000000029d2c	mov	x0, x19
0000000000029d30	ldp	x29, x30, [sp, #0x60]
0000000000029d34	ldp	x20, x19, [sp, #0x50]
0000000000029d38	ldp	x22, x21, [sp, #0x40]
0000000000029d3c	ldp	x24, x23, [sp, #0x30]
0000000000029d40	add	sp, sp, #0x70
0000000000029d44	ret
0000000000029d48	str	xzr, [sp, #0x18]
0000000000029d4c	ldarb	w8, [x23]
0000000000029d50	tbnz	w8, #0x0, 0x29d00
0000000000029d54	b	0x29d04
0000000000029d58	mov	x1, x0
0000000000029d5c	mov	x0, x20
0000000000029d60	blr	x22
0000000000029d64	ldr	x8, [x0]
0000000000029d68	mov	x9, sp
0000000000029d6c	str	x9, [x8, #0x110]
0000000000029d70	mov	x0, x1
0000000000029d74	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000029d78	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000029d7c	b	0x29d7c
_objc2kotlin_kfun:com.example.fastakmm.utils.IOAndBufferOperator#writeBytes(kotlin.ByteArray;kotlin.Int;kotlin.Int){}:
0000000000029d80	sub	sp, sp, #0x90
0000000000029d84	stp	x28, x27, [sp, #0x30]
0000000000029d88	stp	x26, x25, [sp, #0x40]
0000000000029d8c	stp	x24, x23, [sp, #0x50]
0000000000029d90	stp	x22, x21, [sp, #0x60]
0000000000029d94	stp	x20, x19, [sp, #0x70]
0000000000029d98	stp	x29, x30, [sp, #0x80]
0000000000029d9c	add	x29, sp, #0x80
0000000000029da0	mov	x20, x4
0000000000029da4	mov	x21, x3
0000000000029da8	mov	x22, x2
0000000000029dac	mov	x24, x0
0000000000029db0	movi.16b	v0, #0x0
0000000000029db4	stp	q0, q0, [sp, #0x10]
0000000000029db8	str	q0, [sp]
0000000000029dbc	mov	x8, sp
0000000000029dc0	add	x23, x8, #0x20
0000000000029dc4	add	x25, x8, #0x18
0000000000029dc8	bl	_Kotlin_initRuntimeIfNeeded
0000000000029dcc	adrp	x19, 81 ; 0x7a000
0000000000029dd0	add	x19, x19, #0x2c0
0000000000029dd4	ldr	x26, [x19]
0000000000029dd8	mov	x0, x19
0000000000029ddc	blr	x26
0000000000029de0	ldr	x8, [x0]
0000000000029de4	add	x0, x8, #0x138
0000000000029de8	ldaxr	w8, [x0]
0000000000029dec	stlxr	w9, wzr, [x0]
0000000000029df0	cbnz	w9, 0x29de8
0000000000029df4	adr	x27, #0x6a495
0000000000029df8	nop
0000000000029dfc	cmp	w8, #0x1
0000000000029e00	b.ne	0x29e10
0000000000029e04	ldarb	w8, [x27]
0000000000029e08	tbz	w8, #0x0, 0x29e10
0000000000029e0c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029e10	mov	x0, x19
0000000000029e14	blr	x26
0000000000029e18	ldr	x8, [x0]
0000000000029e1c	ldr	x9, [x8, #0x110]
0000000000029e20	mov	x10, sp
0000000000029e24	str	x10, [x8, #0x110]
0000000000029e28	mov	x8, #0x600000000
0000000000029e2c	stp	x9, x8, [sp, #0x8]
0000000000029e30	ldarb	w8, [x27]
0000000000029e34	tbz	w8, #0x0, 0x29e3c
0000000000029e38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029e3c	adrp	x27, 107 ; 0x94000
0000000000029e40	cbz	x24, 0x29e6c
0000000000029e44	ldr	x1, [x27, #0x4d8]
0000000000029e48	mov	x0, x24
0000000000029e4c	mov	x2, x25
0000000000029e50	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000029e54	cbz	x22, 0x29e74
0000000000029e58	ldr	x1, [x27, #0x4d8]
0000000000029e5c	mov	x0, x22
0000000000029e60	mov	x2, x23
0000000000029e64	bl	0x55584 ; Objc message: -[x0 hasNext]
0000000000029e68	b	0x29e7c
0000000000029e6c	str	xzr, [sp, #0x18]
0000000000029e70	cbnz	x22, 0x29e58
0000000000029e74	mov	x0, #0x0
0000000000029e78	str	xzr, [sp, #0x20]
0000000000029e7c	mov	x1, x21
0000000000029e80	mov	x2, x20
0000000000029e84	bl	"_kfun:com.example.fastakmm.utils.IOAndBufferOperator#writeBytes(kotlin.ByteArray;kotlin.Int;kotlin.Int){}"
0000000000029e88	mov	x0, x19
0000000000029e8c	blr	x26
0000000000029e90	ldr	x8, [x0]
0000000000029e94	ldr	x9, [sp, #0x8]
0000000000029e98	str	x9, [x8, #0x110]
0000000000029e9c	add	x8, x8, #0x138
0000000000029ea0	mov	w9, #0x1
0000000000029ea4	ldaxr	wzr, [x8]
0000000000029ea8	stlxr	w10, w9, [x8]
0000000000029eac	cbnz	w10, 0x29ea4
0000000000029eb0	ldp	x29, x30, [sp, #0x80]
0000000000029eb4	ldp	x20, x19, [sp, #0x70]
0000000000029eb8	ldp	x22, x21, [sp, #0x60]
0000000000029ebc	ldp	x24, x23, [sp, #0x50]
0000000000029ec0	ldp	x26, x25, [sp, #0x40]
0000000000029ec4	ldp	x28, x27, [sp, #0x30]
0000000000029ec8	add	sp, sp, #0x90
0000000000029ecc	ret
0000000000029ed0	mov	x1, x0
0000000000029ed4	mov	x0, x19
0000000000029ed8	blr	x26
0000000000029edc	ldr	x8, [x0]
0000000000029ee0	mov	x9, sp
0000000000029ee4	str	x9, [x8, #0x110]
0000000000029ee8	mov	x0, x1
0000000000029eec	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000029ef0	ldr	x8, [x0, #0x8]
0000000000029ef4	ldr	x20, [x8]
0000000000029ef8	str	x20, [sp, #0x28]
0000000000029efc	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000029f00	mov	x0, x20
0000000000029f04	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
0000000000029f08	brk	#0x1
0000000000029f0c	mov	x1, x0
0000000000029f10	mov	x0, x19
0000000000029f14	blr	x26
0000000000029f18	ldr	x8, [x0]
0000000000029f1c	mov	x9, sp
0000000000029f20	str	x9, [x8, #0x110]
0000000000029f24	mov	x0, x1
0000000000029f28	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000029f2c	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000029f30	b	0x29f30
_objc2kotlin_kfun:kotlin.Array#<init>(kotlin.Int;kotlin.Function1<kotlin.Int,1:0>){}:
0000000000029f34	sub	sp, sp, #0xd0
0000000000029f38	stp	x28, x27, [sp, #0x70]
0000000000029f3c	stp	x26, x25, [sp, #0x80]
0000000000029f40	stp	x24, x23, [sp, #0x90]
0000000000029f44	stp	x22, x21, [sp, #0xa0]
0000000000029f48	stp	x20, x19, [sp, #0xb0]
0000000000029f4c	stp	x29, x30, [sp, #0xc0]
0000000000029f50	add	x29, sp, #0xc0
0000000000029f54	mov	x20, x3
0000000000029f58	mov	x23, x2
0000000000029f5c	movi.16b	v0, #0x0
0000000000029f60	stp	q0, q0, [sp, #0x20]
0000000000029f64	str	q0, [sp, #0x10]
0000000000029f68	add	x8, sp, #0x10
0000000000029f6c	add	x21, x8, #0x18
0000000000029f70	bl	_Kotlin_initRuntimeIfNeeded
0000000000029f74	adrp	x22, 81 ; 0x7a000
0000000000029f78	add	x22, x22, #0x2c0
0000000000029f7c	ldr	x19, [x22]
0000000000029f80	mov	x0, x22
0000000000029f84	blr	x19
0000000000029f88	ldr	x8, [x0]
0000000000029f8c	add	x0, x8, #0x138
0000000000029f90	ldaxr	w8, [x0]
0000000000029f94	stlxr	w9, wzr, [x0]
0000000000029f98	cbnz	w9, 0x29f90
0000000000029f9c	adr	x27, #0x6a2ed
0000000000029fa0	nop
0000000000029fa4	cmp	w8, #0x1
0000000000029fa8	b.ne	0x29fb8
0000000000029fac	ldarb	w8, [x27]
0000000000029fb0	tbz	w8, #0x0, 0x29fb8
0000000000029fb4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029fb8	mov	x0, x22
0000000000029fbc	blr	x19
0000000000029fc0	ldr	x8, [x0]
0000000000029fc4	ldr	x9, [x8, #0x110]
0000000000029fc8	add	x10, sp, #0x10
0000000000029fcc	str	x10, [x8, #0x110]
0000000000029fd0	mov	x8, #0x600000000
0000000000029fd4	stp	x9, x8, [sp, #0x18]
0000000000029fd8	ldarb	w8, [x27]
0000000000029fdc	tbz	w8, #0x0, 0x29fe4
0000000000029fe0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029fe4	mov	x0, x20
0000000000029fe8	mov	x1, x21
0000000000029fec	bl	_convertBlock1.76
0000000000029ff0	tbnz	w23, #0x1f, 0x2a210
0000000000029ff4	mov	x20, x0
0000000000029ff8	mov	x0, x22
0000000000029ffc	str	x19, [sp, #0x8]
000000000002a000	blr	x19
000000000002a004	mov	x25, x0
000000000002a008	ldr	x8, [x0]
000000000002a00c	ldr	x8, [x8, #0x118]
000000000002a010	mov	w28, w23
000000000002a014	lsl	x9, x28, #3
000000000002a018	add	x9, x9, #0x1f
000000000002a01c	and	x1, x9, #0xffffffff8
000000000002a020	add	x0, x8, #0x70
000000000002a024	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002a028	mov	x22, x0
000000000002a02c	adr	x8, #0x36b54
000000000002a030	nop
000000000002a034	mov	x21, x0
000000000002a038	str	x8, [x21, #0x10]!
000000000002a03c	str	xzr, [x0, #0x18]
000000000002a040	str	xzr, [x0, #0x8]
000000000002a044	str	w23, [x0, #0x18]
000000000002a048	str	x21, [sp, #0x38]
000000000002a04c	movi.16b	v0, #0x0
000000000002a050	stp	q0, q0, [sp, #0x40]
000000000002a054	str	xzr, [sp, #0x60]
000000000002a058	add	x8, sp, #0x40
000000000002a05c	add	x23, x8, #0x20
000000000002a060	add	x24, x8, #0x18
000000000002a064	ldr	x9, [x25]
000000000002a068	ldr	x10, [x9, #0x110]
000000000002a06c	str	x8, [x9, #0x110]
000000000002a070	mov	x8, #0x500000000
000000000002a074	stp	x10, x8, [sp, #0x48]
000000000002a078	ldarb	w8, [x27]
000000000002a07c	tbz	w8, #0x0, 0x2a084
000000000002a080	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a084	mov	x25, #0x0
000000000002a088	add	x19, x22, #0x20
000000000002a08c	mov	w26, #0x2c
000000000002a090	cmp	x25, x28
000000000002a094	b.eq	0x2a190
000000000002a098	ldarb	w8, [x27]
000000000002a09c	tbz	w8, #0x0, 0x2a0a4
000000000002a0a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a0a4	mov	x0, x25
000000000002a0a8	mov	x1, x24
000000000002a0ac	bl	"_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any"
000000000002a0b0	mov	x1, x0
000000000002a0b4	ldr	x8, [x20]
000000000002a0b8	and	x8, x8, #0xfffffffffffffffc
000000000002a0bc	ldr	x8, [x8]
000000000002a0c0	ldr	w9, [x8, #0x3c]
000000000002a0c4	ldr	x8, [x8, #0x40]
000000000002a0c8	tbnz	w9, #0x1f, 0x2a0d4
000000000002a0cc	and	x9, x9, x26
000000000002a0d0	b	0x2a158
000000000002a0d4	neg	w10, w9
000000000002a0d8	mvn	w9, w9
000000000002a0dc	cmp	w10, #0x9
000000000002a0e0	b.ge	0x2a118
000000000002a0e4	cmp	w10, #0x2
000000000002a0e8	b.lt	0x2a14c
000000000002a0ec	mov	x10, #0x0
000000000002a0f0	mov	x11, x8
000000000002a0f4	ldr	w12, [x11]
000000000002a0f8	cmp	w12, #0x2b
000000000002a0fc	b.gt	0x2a154
000000000002a100	add	x10, x10, #0x1
000000000002a104	add	x11, x11, #0x10
000000000002a108	cmp	x9, x10
000000000002a10c	b.ne	0x2a0f4
000000000002a110	mov	x10, x9
000000000002a114	b	0x2a154
000000000002a118	mov	w10, #0x0
000000000002a11c	add	w11, w9, w10
000000000002a120	cmp	w11, #0x0
000000000002a124	cinc	w11, w11, lt
000000000002a128	asr	w11, w11, #1
000000000002a12c	sbfiz	x12, x11, #4, #32
000000000002a130	ldr	w12, [x8, x12]
000000000002a134	cmp	w12, #0x2c
000000000002a138	csinc	w10, w10, w11, ge
000000000002a13c	csel	w9, w9, w11, lt
000000000002a140	cmp	w10, w9
000000000002a144	b.lt	0x2a11c
000000000002a148	b	0x2a154
000000000002a14c	mov	w10, #0x0
000000000002a150	b	0x2a154
000000000002a154	sxtw	x9, w10
000000000002a158	add	x8, x8, x9, lsl #4
000000000002a15c	ldr	x8, [x8, #0x8]
000000000002a160	ldr	x8, [x8]
000000000002a164	mov	x0, x20
000000000002a168	mov	x2, x23
000000000002a16c	blr	x8
000000000002a170	ldr	w8, [x22, #0x18]
000000000002a174	cmp	x25, x8
000000000002a178	b.hs	0x2a208
000000000002a17c	ldr	xzr, [x21]
000000000002a180	str	x0, [x19, x25, lsl #3]
000000000002a184	add	x25, x25, #0x1
000000000002a188	cmp	x25, x28
000000000002a18c	b.ne	0x2a098
000000000002a190	adrp	x22, 80 ; 0x7a000
000000000002a194	add	x22, x22, #0x2c0
000000000002a198	mov	x0, x22
000000000002a19c	ldr	x19, [sp, #0x8]
000000000002a1a0	blr	x19
000000000002a1a4	ldr	x8, [x0]
000000000002a1a8	ldr	x9, [sp, #0x48]
000000000002a1ac	str	x9, [x8, #0x110]
000000000002a1b0	mov	x0, x21
000000000002a1b4	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002a1b8	mov	x1, x0
000000000002a1bc	mov	x0, x22
000000000002a1c0	blr	x19
000000000002a1c4	ldr	x8, [x0]
000000000002a1c8	ldr	x9, [sp, #0x18]
000000000002a1cc	str	x9, [x8, #0x110]
000000000002a1d0	add	x8, x8, #0x138
000000000002a1d4	mov	w9, #0x1
000000000002a1d8	ldaxr	wzr, [x8]
000000000002a1dc	stlxr	w10, w9, [x8]
000000000002a1e0	cbnz	w10, 0x2a1d8
000000000002a1e4	mov	x0, x1
000000000002a1e8	ldp	x29, x30, [sp, #0xc0]
000000000002a1ec	ldp	x20, x19, [sp, #0xb0]
000000000002a1f0	ldp	x22, x21, [sp, #0xa0]
000000000002a1f4	ldp	x24, x23, [sp, #0x90]
000000000002a1f8	ldp	x26, x25, [sp, #0x80]
000000000002a1fc	ldp	x28, x27, [sp, #0x70]
000000000002a200	add	sp, sp, #0xd0
000000000002a204	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002a208	bl	_ThrowArrayIndexOutOfBoundsException
000000000002a20c	b	0x2a260
000000000002a210	bl	_ThrowIllegalArgumentException
000000000002a214	b	0x2a260
000000000002a218	b	0x2a21c
000000000002a21c	mov	x1, x0
000000000002a220	adrp	x22, 80 ; 0x7a000
000000000002a224	add	x22, x22, #0x2c0
000000000002a228	mov	x0, x22
000000000002a22c	ldr	x19, [sp, #0x8]
000000000002a230	blr	x19
000000000002a234	ldr	x8, [x0]
000000000002a238	add	x9, sp, #0x10
000000000002a23c	str	x9, [x8, #0x110]
000000000002a240	mov	x0, x1
000000000002a244	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002a248	ldr	x8, [x0, #0x8]
000000000002a24c	ldr	x20, [x8]
000000000002a250	str	x20, [sp, #0x30]
000000000002a254	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002a258	mov	x0, x20
000000000002a25c	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002a260	brk	#0x1
000000000002a264	mov	x1, x0
000000000002a268	mov	x0, x22
000000000002a26c	blr	x19
000000000002a270	ldr	x8, [x0]
000000000002a274	add	x9, sp, #0x10
000000000002a278	str	x9, [x8, #0x110]
000000000002a27c	mov	x0, x1
000000000002a280	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002a284	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002a288	b	0x2a288
_invokeFunction1.75:
000000000002a28c	sub	sp, sp, #0x80
000000000002a290	stp	x28, x27, [sp, #0x20]
000000000002a294	stp	x26, x25, [sp, #0x30]
000000000002a298	stp	x24, x23, [sp, #0x40]
000000000002a29c	stp	x22, x21, [sp, #0x50]
000000000002a2a0	stp	x20, x19, [sp, #0x60]
000000000002a2a4	stp	x29, x30, [sp, #0x70]
000000000002a2a8	add	x29, sp, #0x70
000000000002a2ac	mov	x19, x2
000000000002a2b0	mov	x22, x1
000000000002a2b4	mov	x23, x0
000000000002a2b8	movi.16b	v0, #0x0
000000000002a2bc	stp	q0, q0, [sp]
000000000002a2c0	mov	x27, sp
000000000002a2c4	adrp	x20, 80 ; 0x7a000
000000000002a2c8	add	x20, x20, #0x2c0
000000000002a2cc	ldr	x25, [x20]
000000000002a2d0	mov	x0, x20
000000000002a2d4	blr	x25
000000000002a2d8	ldr	x8, [x0]
000000000002a2dc	ldr	x9, [x8, #0x110]
000000000002a2e0	str	x27, [x8, #0x110]
000000000002a2e4	mov	x8, #0x400000000
000000000002a2e8	stp	x9, x8, [sp, #0x8]
000000000002a2ec	adr	x26, #0x69f9d
000000000002a2f0	nop
000000000002a2f4	ldarb	w8, [x26]
000000000002a2f8	tbz	w8, #0x0, 0x2a300
000000000002a2fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a300	mov	x21, #0x0
000000000002a304	ldar	x8, [x23]
000000000002a308	ands	x8, x8, #0xfffffffffffffffc
000000000002a30c	b.eq	0x2a324
000000000002a310	ldr	x9, [x8]
000000000002a314	cmp	x9, x8
000000000002a318	b.eq	0x2a324
000000000002a31c	add	x8, x8, #0x10
000000000002a320	ldar	x21, [x8]
000000000002a324	ldr	x24, [x21, #0x10]
000000000002a328	mov	x0, x22
000000000002a32c	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002a330	mov	x23, x0
000000000002a334	add	x22, x27, #0x18
000000000002a338	mov	x0, x20
000000000002a33c	blr	x25
000000000002a340	ldr	x8, [x0]
000000000002a344	add	x8, x8, #0x138
000000000002a348	mov	w9, #0x1
000000000002a34c	ldaxr	wzr, [x8]
000000000002a350	stlxr	w10, w9, [x8]
000000000002a354	cbnz	w10, 0x2a34c
000000000002a358	mov	x0, x21
000000000002a35c	mov	x1, x23
000000000002a360	mov	x2, x24
000000000002a364	bl	0x2a488
000000000002a368	mov	x21, x0
000000000002a36c	mov	x0, x23
000000000002a370	bl	0x555a8 ; symbol stub for: _objc_release
000000000002a374	mov	x0, x20
000000000002a378	blr	x25
000000000002a37c	ldr	x8, [x0]
000000000002a380	add	x0, x8, #0x138
000000000002a384	ldaxr	w8, [x0]
000000000002a388	stlxr	w9, wzr, [x0]
000000000002a38c	cbnz	w9, 0x2a384
000000000002a390	cmp	w8, #0x1
000000000002a394	b.ne	0x2a3a4
000000000002a398	ldarb	w8, [x26]
000000000002a39c	tbz	w8, #0x0, 0x2a3a4
000000000002a3a0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002a3a4	cbz	x21, 0x2a3c4
000000000002a3a8	nop
000000000002a3ac	ldr	x1, #0x6a12c
000000000002a3b0	mov	x0, x21
000000000002a3b4	mov	x2, x22
000000000002a3b8	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002a3bc	mov	x22, x0
000000000002a3c0	b	0x2a3cc
000000000002a3c4	mov	x22, #0x0
000000000002a3c8	str	xzr, [sp, #0x18]
000000000002a3cc	mov	x0, x20
000000000002a3d0	blr	x25
000000000002a3d4	ldr	x8, [x0]
000000000002a3d8	add	x8, x8, #0x138
000000000002a3dc	mov	w9, #0x1
000000000002a3e0	ldaxr	wzr, [x8]
000000000002a3e4	stlxr	w10, w9, [x8]
000000000002a3e8	cbnz	w10, 0x2a3e0
000000000002a3ec	mov	x0, x21
000000000002a3f0	bl	0x555a8 ; symbol stub for: _objc_release
000000000002a3f4	mov	x0, x20
000000000002a3f8	blr	x25
000000000002a3fc	ldr	x8, [x0]
000000000002a400	add	x0, x8, #0x138
000000000002a404	ldaxr	w8, [x0]
000000000002a408	stlxr	w9, wzr, [x0]
000000000002a40c	cbnz	w9, 0x2a404
000000000002a410	cmp	w8, #0x1
000000000002a414	b.ne	0x2a424
000000000002a418	ldarb	w8, [x26]
000000000002a41c	tbz	w8, #0x0, 0x2a424
000000000002a420	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002a424	str	x22, [x19]
000000000002a428	mov	x0, x20
000000000002a42c	blr	x25
000000000002a430	ldr	x8, [x0]
000000000002a434	ldr	x9, [sp, #0x8]
000000000002a438	str	x9, [x8, #0x110]
000000000002a43c	mov	x0, x22
000000000002a440	ldp	x29, x30, [sp, #0x70]
000000000002a444	ldp	x20, x19, [sp, #0x60]
000000000002a448	ldp	x22, x21, [sp, #0x50]
000000000002a44c	ldp	x24, x23, [sp, #0x40]
000000000002a450	ldp	x26, x25, [sp, #0x30]
000000000002a454	ldp	x28, x27, [sp, #0x20]
000000000002a458	add	sp, sp, #0x80
000000000002a45c	ret
000000000002a460	mov	x1, x0
000000000002a464	mov	x0, x20
000000000002a468	blr	x25
000000000002a46c	ldr	x8, [x0]
000000000002a470	mov	x9, sp
000000000002a474	str	x9, [x8, #0x110]
000000000002a478	mov	x0, x1
000000000002a47c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002a480	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002a484	b	0x2a484
000000000002a488	stp	x29, x30, [sp, #-0x10]!
000000000002a48c	mov	x29, sp
000000000002a490	blr	x2
000000000002a494	mov	x29, x29
000000000002a498	ldp	x29, x30, [sp], #0x10
000000000002a49c	b	0x555c0 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock1.76:
000000000002a4a0	sub	sp, sp, #0x50
000000000002a4a4	stp	x22, x21, [sp, #0x20]
000000000002a4a8	stp	x20, x19, [sp, #0x30]
000000000002a4ac	stp	x29, x30, [sp, #0x40]
000000000002a4b0	add	x29, sp, #0x40
000000000002a4b4	mov	x19, x1
000000000002a4b8	mov	x21, x0
000000000002a4bc	movi.16b	v0, #0x0
000000000002a4c0	stp	q0, q0, [sp]
000000000002a4c4	adrp	x20, 80 ; 0x7a000
000000000002a4c8	add	x20, x20, #0x2c0
000000000002a4cc	ldr	x22, [x20]
000000000002a4d0	mov	x0, x20
000000000002a4d4	blr	x22
000000000002a4d8	ldr	x8, [x0]
000000000002a4dc	ldr	x9, [x8, #0x110]
000000000002a4e0	mov	x10, sp
000000000002a4e4	str	x10, [x8, #0x110]
000000000002a4e8	mov	x8, #0x400000000
000000000002a4ec	stp	x9, x8, [sp, #0x8]
000000000002a4f0	adr	x8, #0x69d99
000000000002a4f4	nop
000000000002a4f8	ldarb	w8, [x8]
000000000002a4fc	tbz	w8, #0x0, 0x2a504
000000000002a500	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a504	cbz	x21, 0x2a530
000000000002a508	mov	x0, x21
000000000002a50c	bl	0x555cc ; symbol stub for: _objc_retainBlock
000000000002a510	mov	x1, x0
000000000002a514	mov	x8, sp
000000000002a518	add	x2, x8, #0x18
000000000002a51c	adr	x0, #0x45644
000000000002a520	nop
000000000002a524	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
000000000002a528	mov	x8, x0
000000000002a52c	b	0x2a534
000000000002a530	mov	x8, #0x0
000000000002a534	str	x8, [x19]
000000000002a538	mov	x0, x20
000000000002a53c	blr	x22
000000000002a540	ldr	x9, [x0]
000000000002a544	ldr	x10, [sp, #0x8]
000000000002a548	str	x10, [x9, #0x110]
000000000002a54c	mov	x0, x8
000000000002a550	ldp	x29, x30, [sp, #0x40]
000000000002a554	ldp	x20, x19, [sp, #0x30]
000000000002a558	ldp	x22, x21, [sp, #0x20]
000000000002a55c	add	sp, sp, #0x50
000000000002a560	ret
000000000002a564	mov	x1, x0
000000000002a568	mov	x0, x20
000000000002a56c	blr	x22
000000000002a570	ldr	x8, [x0]
000000000002a574	mov	x9, sp
000000000002a578	str	x9, [x8, #0x110]
000000000002a57c	mov	x0, x1
000000000002a580	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002a584	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002a588	b	0x2a588
_objc2kotlin_Kotlin_Array_get:
000000000002a58c	sub	sp, sp, #0x70
000000000002a590	stp	x24, x23, [sp, #0x30]
000000000002a594	stp	x22, x21, [sp, #0x40]
000000000002a598	stp	x20, x19, [sp, #0x50]
000000000002a59c	stp	x29, x30, [sp, #0x60]
000000000002a5a0	add	x29, sp, #0x60
000000000002a5a4	mov	x20, x2
000000000002a5a8	mov	x21, x0
000000000002a5ac	movi.16b	v0, #0x0
000000000002a5b0	stp	q0, q0, [sp, #0x10]
000000000002a5b4	str	q0, [sp]
000000000002a5b8	mov	x8, sp
000000000002a5bc	add	x22, x8, #0x18
000000000002a5c0	bl	_Kotlin_initRuntimeIfNeeded
000000000002a5c4	adrp	x19, 80 ; 0x7a000
000000000002a5c8	add	x19, x19, #0x2c0
000000000002a5cc	ldr	x23, [x19]
000000000002a5d0	mov	x0, x19
000000000002a5d4	blr	x23
000000000002a5d8	ldr	x8, [x0]
000000000002a5dc	add	x0, x8, #0x138
000000000002a5e0	ldaxr	w8, [x0]
000000000002a5e4	stlxr	w9, wzr, [x0]
000000000002a5e8	cbnz	w9, 0x2a5e0
000000000002a5ec	adr	x24, #0x69c9d
000000000002a5f0	nop
000000000002a5f4	cmp	w8, #0x1
000000000002a5f8	b.ne	0x2a608
000000000002a5fc	ldarb	w8, [x24]
000000000002a600	tbz	w8, #0x0, 0x2a608
000000000002a604	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002a608	mov	x0, x19
000000000002a60c	blr	x23
000000000002a610	ldr	x8, [x0]
000000000002a614	ldr	x9, [x8, #0x110]
000000000002a618	mov	x10, sp
000000000002a61c	str	x10, [x8, #0x110]
000000000002a620	mov	x8, #0x600000000
000000000002a624	stp	x9, x8, [sp, #0x8]
000000000002a628	ldarb	w8, [x24]
000000000002a62c	tbz	w8, #0x0, 0x2a634
000000000002a630	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a634	cbz	x21, 0x2a6b0
000000000002a638	nop
000000000002a63c	ldr	x1, #0x69e9c
000000000002a640	mov	x0, x21
000000000002a644	mov	x2, x22
000000000002a648	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002a64c	ldr	w8, [x0, #0x8]
000000000002a650	cmp	w8, w20
000000000002a654	b.ls	0x2a6c4
000000000002a658	add	x8, x0, w20, sxtw #3
000000000002a65c	ldr	x0, [x8, #0x10]
000000000002a660	str	x0, [sp, #0x28]
000000000002a664	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002a668	mov	x1, x0
000000000002a66c	mov	x0, x19
000000000002a670	blr	x23
000000000002a674	ldr	x8, [x0]
000000000002a678	ldr	x9, [sp, #0x8]
000000000002a67c	str	x9, [x8, #0x110]
000000000002a680	add	x8, x8, #0x138
000000000002a684	mov	w9, #0x1
000000000002a688	ldaxr	wzr, [x8]
000000000002a68c	stlxr	w10, w9, [x8]
000000000002a690	cbnz	w10, 0x2a688
000000000002a694	mov	x0, x1
000000000002a698	ldp	x29, x30, [sp, #0x60]
000000000002a69c	ldp	x20, x19, [sp, #0x50]
000000000002a6a0	ldp	x22, x21, [sp, #0x40]
000000000002a6a4	ldp	x24, x23, [sp, #0x30]
000000000002a6a8	add	sp, sp, #0x70
000000000002a6ac	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002a6b0	mov	x0, #0x0
000000000002a6b4	str	xzr, [sp, #0x18]
000000000002a6b8	ldr	w8, [x0, #0x8]
000000000002a6bc	cmp	w8, w20
000000000002a6c0	b.hi	0x2a658
000000000002a6c4	bl	_ThrowArrayIndexOutOfBoundsException
000000000002a6c8	b	0x2a704
000000000002a6cc	mov	x1, x0
000000000002a6d0	mov	x0, x19
000000000002a6d4	blr	x23
000000000002a6d8	ldr	x8, [x0]
000000000002a6dc	mov	x9, sp
000000000002a6e0	str	x9, [x8, #0x110]
000000000002a6e4	mov	x0, x1
000000000002a6e8	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002a6ec	ldr	x8, [x0, #0x8]
000000000002a6f0	ldr	x20, [x8]
000000000002a6f4	str	x20, [sp, #0x20]
000000000002a6f8	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002a6fc	mov	x0, x20
000000000002a700	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002a704	brk	#0x1
000000000002a708	mov	x1, x0
000000000002a70c	mov	x0, x19
000000000002a710	blr	x23
000000000002a714	ldr	x8, [x0]
000000000002a718	mov	x9, sp
000000000002a71c	str	x9, [x8, #0x110]
000000000002a720	mov	x0, x1
000000000002a724	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002a728	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002a72c	b	0x2a72c
_objc2kotlin_kfun:kotlin.Array#iterator(){}kotlin.collections.Iterator<1:0>:
000000000002a730	sub	sp, sp, #0x70
000000000002a734	stp	x24, x23, [sp, #0x30]
000000000002a738	stp	x22, x21, [sp, #0x40]
000000000002a73c	stp	x20, x19, [sp, #0x50]
000000000002a740	stp	x29, x30, [sp, #0x60]
000000000002a744	add	x29, sp, #0x60
000000000002a748	mov	x20, x0
000000000002a74c	movi.16b	v0, #0x0
000000000002a750	stp	q0, q0, [sp, #0x10]
000000000002a754	str	q0, [sp]
000000000002a758	mov	x8, sp
000000000002a75c	add	x21, x8, #0x18
000000000002a760	bl	_Kotlin_initRuntimeIfNeeded
000000000002a764	adrp	x19, 80 ; 0x7a000
000000000002a768	add	x19, x19, #0x2c0
000000000002a76c	ldr	x22, [x19]
000000000002a770	mov	x0, x19
000000000002a774	blr	x22
000000000002a778	ldr	x8, [x0]
000000000002a77c	add	x0, x8, #0x138
000000000002a780	ldaxr	w8, [x0]
000000000002a784	stlxr	w9, wzr, [x0]
000000000002a788	cbnz	w9, 0x2a780
000000000002a78c	adr	x23, #0x69afd
000000000002a790	nop
000000000002a794	cmp	w8, #0x1
000000000002a798	b.ne	0x2a7a8
000000000002a79c	ldarb	w8, [x23]
000000000002a7a0	tbz	w8, #0x0, 0x2a7a8
000000000002a7a4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002a7a8	mov	x0, x19
000000000002a7ac	blr	x22
000000000002a7b0	ldr	x8, [x0]
000000000002a7b4	ldr	x9, [x8, #0x110]
000000000002a7b8	mov	x10, sp
000000000002a7bc	str	x10, [x8, #0x110]
000000000002a7c0	mov	x8, #0x600000000
000000000002a7c4	stp	x9, x8, [sp, #0x8]
000000000002a7c8	ldarb	w8, [x23]
000000000002a7cc	tbz	w8, #0x0, 0x2a7d4
000000000002a7d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a7d4	cbz	x20, 0x2a880
000000000002a7d8	nop
000000000002a7dc	ldr	x1, #0x69cfc
000000000002a7e0	mov	x0, x20
000000000002a7e4	mov	x2, x21
000000000002a7e8	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002a7ec	mov	x20, x0
000000000002a7f0	ldarb	w8, [x23]
000000000002a7f4	tbz	w8, #0x0, 0x2a7fc
000000000002a7f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a7fc	mov	x0, x19
000000000002a800	blr	x22
000000000002a804	ldr	x8, [x0]
000000000002a808	ldr	x8, [x8, #0x118]
000000000002a80c	add	x0, x8, #0x70
000000000002a810	mov	w1, #0x20
000000000002a814	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002a818	adr	x8, #0x363f8
000000000002a81c	nop
000000000002a820	str	x8, [x0, #0x10]!
000000000002a824	stur	xzr, [x0, #-0x8]
000000000002a828	str	x0, [sp, #0x28]
000000000002a82c	str	x20, [x0, #0x8]
000000000002a830	str	x0, [sp, #0x28]
000000000002a834	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002a838	mov	x1, x0
000000000002a83c	mov	x0, x19
000000000002a840	blr	x22
000000000002a844	ldr	x8, [x0]
000000000002a848	ldr	x9, [sp, #0x8]
000000000002a84c	str	x9, [x8, #0x110]
000000000002a850	add	x8, x8, #0x138
000000000002a854	mov	w9, #0x1
000000000002a858	ldaxr	wzr, [x8]
000000000002a85c	stlxr	w10, w9, [x8]
000000000002a860	cbnz	w10, 0x2a858
000000000002a864	mov	x0, x1
000000000002a868	ldp	x29, x30, [sp, #0x60]
000000000002a86c	ldp	x20, x19, [sp, #0x50]
000000000002a870	ldp	x22, x21, [sp, #0x40]
000000000002a874	ldp	x24, x23, [sp, #0x30]
000000000002a878	add	sp, sp, #0x70
000000000002a87c	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002a880	str	xzr, [sp, #0x18]
000000000002a884	ldarb	w8, [x23]
000000000002a888	tbnz	w8, #0x0, 0x2a7f8
000000000002a88c	b	0x2a7fc
000000000002a890	mov	x1, x0
000000000002a894	mov	x0, x19
000000000002a898	blr	x22
000000000002a89c	ldr	x8, [x0]
000000000002a8a0	mov	x9, sp
000000000002a8a4	str	x9, [x8, #0x110]
000000000002a8a8	mov	x0, x1
000000000002a8ac	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002a8b0	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002a8b4	b	0x2a8b4
_objc2kotlin_Kotlin_Array_set:
000000000002a8b8	sub	sp, sp, #0x80
000000000002a8bc	stp	x26, x25, [sp, #0x30]
000000000002a8c0	stp	x24, x23, [sp, #0x40]
000000000002a8c4	stp	x22, x21, [sp, #0x50]
000000000002a8c8	stp	x20, x19, [sp, #0x60]
000000000002a8cc	stp	x29, x30, [sp, #0x70]
000000000002a8d0	add	x29, sp, #0x70
000000000002a8d4	mov	x21, x3
000000000002a8d8	mov	x20, x2
000000000002a8dc	mov	x23, x0
000000000002a8e0	movi.16b	v0, #0x0
000000000002a8e4	stp	q0, q0, [sp, #0x10]
000000000002a8e8	str	q0, [sp]
000000000002a8ec	mov	x8, sp
000000000002a8f0	add	x22, x8, #0x20
000000000002a8f4	add	x24, x8, #0x18
000000000002a8f8	bl	_Kotlin_initRuntimeIfNeeded
000000000002a8fc	adrp	x19, 80 ; 0x7a000
000000000002a900	add	x19, x19, #0x2c0
000000000002a904	ldr	x25, [x19]
000000000002a908	mov	x0, x19
000000000002a90c	blr	x25
000000000002a910	ldr	x8, [x0]
000000000002a914	add	x0, x8, #0x138
000000000002a918	ldaxr	w8, [x0]
000000000002a91c	stlxr	w9, wzr, [x0]
000000000002a920	cbnz	w9, 0x2a918
000000000002a924	adr	x26, #0x69965
000000000002a928	nop
000000000002a92c	cmp	w8, #0x1
000000000002a930	b.ne	0x2a940
000000000002a934	ldarb	w8, [x26]
000000000002a938	tbz	w8, #0x0, 0x2a940
000000000002a93c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002a940	mov	x0, x19
000000000002a944	blr	x25
000000000002a948	ldr	x8, [x0]
000000000002a94c	ldr	x9, [x8, #0x110]
000000000002a950	mov	x10, sp
000000000002a954	str	x10, [x8, #0x110]
000000000002a958	mov	x8, #0x600000000
000000000002a95c	stp	x9, x8, [sp, #0x8]
000000000002a960	ldarb	w8, [x26]
000000000002a964	tbz	w8, #0x0, 0x2a96c
000000000002a968	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a96c	adrp	x26, 106 ; 0x94000
000000000002a970	cbz	x23, 0x2a9f8
000000000002a974	ldr	x1, [x26, #0x4d8]
000000000002a978	mov	x0, x23
000000000002a97c	mov	x2, x24
000000000002a980	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002a984	mov	x23, x0
000000000002a988	cbz	x21, 0x2aa00
000000000002a98c	ldr	x1, [x26, #0x4d8]
000000000002a990	mov	x0, x21
000000000002a994	mov	x2, x22
000000000002a998	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002a99c	ldr	w8, [x23, #0x8]
000000000002a9a0	cmp	w8, w20
000000000002a9a4	b.ls	0x2aa14
000000000002a9a8	ldr	xzr, [x23]
000000000002a9ac	add	x8, x23, w20, sxtw #3
000000000002a9b0	str	x0, [x8, #0x10]
000000000002a9b4	mov	x0, x19
000000000002a9b8	blr	x25
000000000002a9bc	ldr	x8, [x0]
000000000002a9c0	ldr	x9, [sp, #0x8]
000000000002a9c4	str	x9, [x8, #0x110]
000000000002a9c8	add	x8, x8, #0x138
000000000002a9cc	mov	w9, #0x1
000000000002a9d0	ldaxr	wzr, [x8]
000000000002a9d4	stlxr	w10, w9, [x8]
000000000002a9d8	cbnz	w10, 0x2a9d0
000000000002a9dc	ldp	x29, x30, [sp, #0x70]
000000000002a9e0	ldp	x20, x19, [sp, #0x60]
000000000002a9e4	ldp	x22, x21, [sp, #0x50]
000000000002a9e8	ldp	x24, x23, [sp, #0x40]
000000000002a9ec	ldp	x26, x25, [sp, #0x30]
000000000002a9f0	add	sp, sp, #0x80
000000000002a9f4	ret
000000000002a9f8	str	xzr, [sp, #0x18]
000000000002a9fc	cbnz	x21, 0x2a98c
000000000002aa00	mov	x0, #0x0
000000000002aa04	str	xzr, [sp, #0x20]
000000000002aa08	ldr	w8, [x23, #0x8]
000000000002aa0c	cmp	w8, w20
000000000002aa10	b.hi	0x2a9a8
000000000002aa14	bl	_ThrowArrayIndexOutOfBoundsException
000000000002aa18	b	0x2aa54
000000000002aa1c	mov	x1, x0
000000000002aa20	mov	x0, x19
000000000002aa24	blr	x25
000000000002aa28	ldr	x8, [x0]
000000000002aa2c	mov	x9, sp
000000000002aa30	str	x9, [x8, #0x110]
000000000002aa34	mov	x0, x1
000000000002aa38	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002aa3c	ldr	x8, [x0, #0x8]
000000000002aa40	ldr	x20, [x8]
000000000002aa44	str	x20, [sp, #0x28]
000000000002aa48	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002aa4c	mov	x0, x20
000000000002aa50	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002aa54	brk	#0x1
000000000002aa58	mov	x1, x0
000000000002aa5c	mov	x0, x19
000000000002aa60	blr	x25
000000000002aa64	ldr	x8, [x0]
000000000002aa68	mov	x9, sp
000000000002aa6c	str	x9, [x8, #0x110]
000000000002aa70	mov	x0, x1
000000000002aa74	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002aa78	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002aa7c	b	0x2aa7c
_objc2kotlin_kfun:kotlin.Array#<get-size>(){}kotlin.Int:
000000000002aa80	sub	sp, sp, #0x70
000000000002aa84	stp	x24, x23, [sp, #0x30]
000000000002aa88	stp	x22, x21, [sp, #0x40]
000000000002aa8c	stp	x20, x19, [sp, #0x50]
000000000002aa90	stp	x29, x30, [sp, #0x60]
000000000002aa94	add	x29, sp, #0x60
000000000002aa98	mov	x20, x0
000000000002aa9c	str	xzr, [sp, #0x20]
000000000002aaa0	movi.16b	v0, #0x0
000000000002aaa4	stp	q0, q0, [sp]
000000000002aaa8	mov	x8, sp
000000000002aaac	add	x21, x8, #0x18
000000000002aab0	bl	_Kotlin_initRuntimeIfNeeded
000000000002aab4	adrp	x19, 80 ; 0x7a000
000000000002aab8	add	x19, x19, #0x2c0
000000000002aabc	ldr	x22, [x19]
000000000002aac0	mov	x0, x19
000000000002aac4	blr	x22
000000000002aac8	ldr	x8, [x0]
000000000002aacc	add	x0, x8, #0x138
000000000002aad0	ldaxr	w8, [x0]
000000000002aad4	stlxr	w9, wzr, [x0]
000000000002aad8	cbnz	w9, 0x2aad0
000000000002aadc	adr	x23, #0x697ad
000000000002aae0	nop
000000000002aae4	cmp	w8, #0x1
000000000002aae8	b.ne	0x2aaf8
000000000002aaec	ldarb	w8, [x23]
000000000002aaf0	tbz	w8, #0x0, 0x2aaf8
000000000002aaf4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002aaf8	mov	x0, x19
000000000002aafc	blr	x22
000000000002ab00	ldr	x8, [x0]
000000000002ab04	ldr	x9, [x8, #0x110]
000000000002ab08	mov	x10, sp
000000000002ab0c	str	x10, [x8, #0x110]
000000000002ab10	mov	x8, #0x500000000
000000000002ab14	stp	x9, x8, [sp, #0x8]
000000000002ab18	ldarb	w8, [x23]
000000000002ab1c	tbz	w8, #0x0, 0x2ab24
000000000002ab20	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002ab24	cbz	x20, 0x2ab94
000000000002ab28	nop
000000000002ab2c	ldr	x1, #0x699ac
000000000002ab30	mov	x0, x20
000000000002ab34	mov	x2, x21
000000000002ab38	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002ab3c	mov	x20, x0
000000000002ab40	ldarb	w8, [x23]
000000000002ab44	tbz	w8, #0x0, 0x2ab4c
000000000002ab48	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002ab4c	ldr	w8, [x20, #0x8]
000000000002ab50	mov	x0, x19
000000000002ab54	blr	x22
000000000002ab58	ldr	x9, [x0]
000000000002ab5c	ldr	x10, [sp, #0x8]
000000000002ab60	str	x10, [x9, #0x110]
000000000002ab64	add	x9, x9, #0x138
000000000002ab68	mov	w10, #0x1
000000000002ab6c	ldaxr	wzr, [x9]
000000000002ab70	stlxr	w11, w10, [x9]
000000000002ab74	cbnz	w11, 0x2ab6c
000000000002ab78	mov	x0, x8
000000000002ab7c	ldp	x29, x30, [sp, #0x60]
000000000002ab80	ldp	x20, x19, [sp, #0x50]
000000000002ab84	ldp	x22, x21, [sp, #0x40]
000000000002ab88	ldp	x24, x23, [sp, #0x30]
000000000002ab8c	add	sp, sp, #0x70
000000000002ab90	ret
000000000002ab94	str	xzr, [sp, #0x18]
000000000002ab98	ldarb	w8, [x23]
000000000002ab9c	tbnz	w8, #0x0, 0x2ab48
000000000002aba0	b	0x2ab4c
000000000002aba4	mov	x1, x0
000000000002aba8	mov	x0, x19
000000000002abac	blr	x22
000000000002abb0	ldr	x8, [x0]
000000000002abb4	mov	x9, sp
000000000002abb8	str	x9, [x8, #0x110]
000000000002abbc	mov	x0, x1
000000000002abc0	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002abc4	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002abc8	b	0x2abc8
_objc2kotlin_kfun:kotlin.ByteArray#<init>(kotlin.Int){}:
000000000002abcc	sub	sp, sp, #0x70
000000000002abd0	stp	x24, x23, [sp, #0x30]
000000000002abd4	stp	x22, x21, [sp, #0x40]
000000000002abd8	stp	x20, x19, [sp, #0x50]
000000000002abdc	stp	x29, x30, [sp, #0x60]
000000000002abe0	add	x29, sp, #0x60
000000000002abe4	mov	x20, x2
000000000002abe8	str	xzr, [sp, #0x20]
000000000002abec	movi.16b	v0, #0x0
000000000002abf0	stp	q0, q0, [sp]
000000000002abf4	bl	_Kotlin_initRuntimeIfNeeded
000000000002abf8	adrp	x19, 80 ; 0x7a000
000000000002abfc	add	x19, x19, #0x2c0
000000000002ac00	ldr	x22, [x19]
000000000002ac04	mov	x0, x19
000000000002ac08	blr	x22
000000000002ac0c	ldr	x8, [x0]
000000000002ac10	add	x0, x8, #0x138
000000000002ac14	ldaxr	w8, [x0]
000000000002ac18	stlxr	w9, wzr, [x0]
000000000002ac1c	cbnz	w9, 0x2ac14
000000000002ac20	adr	x23, #0x69669
000000000002ac24	nop
000000000002ac28	cmp	w8, #0x1
000000000002ac2c	b.ne	0x2ac3c
000000000002ac30	ldarb	w8, [x23]
000000000002ac34	tbz	w8, #0x0, 0x2ac3c
000000000002ac38	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002ac3c	mov	x0, x19
000000000002ac40	blr	x22
000000000002ac44	ldr	x8, [x0]
000000000002ac48	ldr	x9, [x8, #0x110]
000000000002ac4c	mov	x10, sp
000000000002ac50	str	x10, [x8, #0x110]
000000000002ac54	mov	x8, #0x500000000
000000000002ac58	stp	x9, x8, [sp, #0x8]
000000000002ac5c	ldarb	w8, [x23]
000000000002ac60	tbz	w8, #0x0, 0x2ac68
000000000002ac64	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002ac68	tbnz	w20, #0x1f, 0x2ad08
000000000002ac6c	mov	x0, x19
000000000002ac70	blr	x22
000000000002ac74	ldr	x8, [x0]
000000000002ac78	ldr	x8, [x8, #0x118]
000000000002ac7c	mov	w9, w20
000000000002ac80	add	x9, x9, #0x1f
000000000002ac84	and	x1, x9, #0x1fffffff8
000000000002ac88	add	x0, x8, #0x70
000000000002ac8c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002ac90	mov	x21, x0
000000000002ac94	adr	x8, #0x3600c
000000000002ac98	nop
000000000002ac9c	stp	x8, xzr, [x21, #0x10]!
000000000002aca0	stur	xzr, [x21, #-0x8]
000000000002aca4	str	w20, [x21, #0x8]
000000000002aca8	str	x21, [sp, #0x20]
000000000002acac	ldarb	w8, [x23]
000000000002acb0	tbz	w8, #0x0, 0x2acb8
000000000002acb4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002acb8	mov	x0, x21
000000000002acbc	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002acc0	mov	x1, x0
000000000002acc4	mov	x0, x19
000000000002acc8	blr	x22
000000000002accc	ldr	x8, [x0]
000000000002acd0	ldr	x9, [sp, #0x8]
000000000002acd4	str	x9, [x8, #0x110]
000000000002acd8	add	x8, x8, #0x138
000000000002acdc	mov	w9, #0x1
000000000002ace0	ldaxr	wzr, [x8]
000000000002ace4	stlxr	w10, w9, [x8]
000000000002ace8	cbnz	w10, 0x2ace0
000000000002acec	mov	x0, x1
000000000002acf0	ldp	x29, x30, [sp, #0x60]
000000000002acf4	ldp	x20, x19, [sp, #0x50]
000000000002acf8	ldp	x22, x21, [sp, #0x40]
000000000002acfc	ldp	x24, x23, [sp, #0x30]
000000000002ad00	add	sp, sp, #0x70
000000000002ad04	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002ad08	bl	_ThrowIllegalArgumentException
000000000002ad0c	brk	#0x1
000000000002ad10	mov	x1, x0
000000000002ad14	mov	x0, x19
000000000002ad18	blr	x22
000000000002ad1c	ldr	x8, [x0]
000000000002ad20	mov	x9, sp
000000000002ad24	str	x9, [x8, #0x110]
000000000002ad28	mov	x0, x1
000000000002ad2c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002ad30	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002ad34	b	0x2ad34
_objc2kotlin_kfun:kotlin.ByteArray#<init>(kotlin.Int;kotlin.Function1<kotlin.Int,kotlin.Byte>){}:
000000000002ad38	sub	sp, sp, #0xd0
000000000002ad3c	stp	x28, x27, [sp, #0x70]
000000000002ad40	stp	x26, x25, [sp, #0x80]
000000000002ad44	stp	x24, x23, [sp, #0x90]
000000000002ad48	stp	x22, x21, [sp, #0xa0]
000000000002ad4c	stp	x20, x19, [sp, #0xb0]
000000000002ad50	stp	x29, x30, [sp, #0xc0]
000000000002ad54	add	x29, sp, #0xc0
000000000002ad58	mov	x20, x3
000000000002ad5c	mov	x23, x2
000000000002ad60	movi.16b	v0, #0x0
000000000002ad64	stp	q0, q0, [sp, #0x20]
000000000002ad68	str	q0, [sp, #0x10]
000000000002ad6c	add	x8, sp, #0x10
000000000002ad70	add	x21, x8, #0x18
000000000002ad74	bl	_Kotlin_initRuntimeIfNeeded
000000000002ad78	adrp	x22, 80 ; 0x7a000
000000000002ad7c	add	x22, x22, #0x2c0
000000000002ad80	ldr	x19, [x22]
000000000002ad84	mov	x0, x22
000000000002ad88	blr	x19
000000000002ad8c	ldr	x8, [x0]
000000000002ad90	add	x0, x8, #0x138
000000000002ad94	ldaxr	w8, [x0]
000000000002ad98	stlxr	w9, wzr, [x0]
000000000002ad9c	cbnz	w9, 0x2ad94
000000000002ada0	adr	x27, #0x694e9
000000000002ada4	nop
000000000002ada8	cmp	w8, #0x1
000000000002adac	b.ne	0x2adbc
000000000002adb0	ldarb	w8, [x27]
000000000002adb4	tbz	w8, #0x0, 0x2adbc
000000000002adb8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002adbc	mov	x0, x22
000000000002adc0	blr	x19
000000000002adc4	ldr	x8, [x0]
000000000002adc8	ldr	x9, [x8, #0x110]
000000000002adcc	add	x10, sp, #0x10
000000000002add0	str	x10, [x8, #0x110]
000000000002add4	mov	x8, #0x600000000
000000000002add8	stp	x9, x8, [sp, #0x18]
000000000002addc	ldarb	w8, [x27]
000000000002ade0	tbz	w8, #0x0, 0x2ade8
000000000002ade4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002ade8	mov	x0, x20
000000000002adec	mov	x1, x21
000000000002adf0	bl	_convertBlock1.76
000000000002adf4	tbnz	w23, #0x1f, 0x2b018
000000000002adf8	mov	x20, x0
000000000002adfc	mov	x0, x22
000000000002ae00	str	x19, [sp, #0x8]
000000000002ae04	blr	x19
000000000002ae08	mov	x24, x0
000000000002ae0c	ldr	x8, [x0]
000000000002ae10	ldr	x8, [x8, #0x118]
000000000002ae14	mov	w9, w23
000000000002ae18	add	x9, x9, #0x1f
000000000002ae1c	and	x1, x9, #0x1fffffff8
000000000002ae20	add	x0, x8, #0x70
000000000002ae24	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002ae28	mov	x22, x0
000000000002ae2c	adr	x8, #0x35e74
000000000002ae30	nop
000000000002ae34	mov	x21, x0
000000000002ae38	str	x8, [x21, #0x10]!
000000000002ae3c	str	xzr, [x0, #0x18]
000000000002ae40	str	xzr, [x0, #0x8]
000000000002ae44	str	w23, [x0, #0x18]
000000000002ae48	str	x21, [sp, #0x38]
000000000002ae4c	movi.16b	v0, #0x0
000000000002ae50	stp	q0, q0, [sp, #0x40]
000000000002ae54	str	xzr, [sp, #0x60]
000000000002ae58	add	x19, sp, #0x40
000000000002ae5c	ldr	x8, [x24]
000000000002ae60	ldr	x9, [x8, #0x110]
000000000002ae64	str	x19, [x8, #0x110]
000000000002ae68	mov	x8, #0x500000000
000000000002ae6c	stp	x9, x8, [sp, #0x48]
000000000002ae70	ldarb	w8, [x27]
000000000002ae74	tbz	w8, #0x0, 0x2ae7c
000000000002ae78	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002ae7c	subs	w28, w23, #0x1
000000000002ae80	b.mi	0x2af98
000000000002ae84	mov	w24, #0x0
000000000002ae88	add	x23, x19, #0x20
000000000002ae8c	add	x25, x19, #0x18
000000000002ae90	add	x19, x22, #0x20
000000000002ae94	mov	w26, #0x2c
000000000002ae98	ldarb	w8, [x27]
000000000002ae9c	tbz	w8, #0x0, 0x2aea4
000000000002aea0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002aea4	mov	x0, x24
000000000002aea8	mov	x1, x25
000000000002aeac	bl	"_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any"
000000000002aeb0	mov	x1, x0
000000000002aeb4	ldr	x8, [x20]
000000000002aeb8	and	x8, x8, #0xfffffffffffffffc
000000000002aebc	ldr	x8, [x8]
000000000002aec0	ldr	w9, [x8, #0x3c]
000000000002aec4	ldr	x8, [x8, #0x40]
000000000002aec8	tbnz	w9, #0x1f, 0x2aed4
000000000002aecc	and	x9, x9, x26
000000000002aed0	b	0x2af58
000000000002aed4	neg	w10, w9
000000000002aed8	mvn	w9, w9
000000000002aedc	cmp	w10, #0x9
000000000002aee0	b.ge	0x2af18
000000000002aee4	cmp	w10, #0x2
000000000002aee8	b.lt	0x2af4c
000000000002aeec	mov	x10, #0x0
000000000002aef0	mov	x11, x8
000000000002aef4	ldr	w12, [x11]
000000000002aef8	cmp	w12, #0x2b
000000000002aefc	b.gt	0x2af54
000000000002af00	add	x10, x10, #0x1
000000000002af04	add	x11, x11, #0x10
000000000002af08	cmp	x9, x10
000000000002af0c	b.ne	0x2aef4
000000000002af10	mov	x10, x9
000000000002af14	b	0x2af54
000000000002af18	mov	w10, #0x0
000000000002af1c	add	w11, w9, w10
000000000002af20	cmp	w11, #0x0
000000000002af24	cinc	w11, w11, lt
000000000002af28	asr	w11, w11, #1
000000000002af2c	sbfiz	x12, x11, #4, #32
000000000002af30	ldr	w12, [x8, x12]
000000000002af34	cmp	w12, #0x2c
000000000002af38	csinc	w10, w10, w11, ge
000000000002af3c	csel	w9, w9, w11, lt
000000000002af40	cmp	w10, w9
000000000002af44	b.lt	0x2af1c
000000000002af48	b	0x2af54
000000000002af4c	mov	w10, #0x0
000000000002af50	b	0x2af54
000000000002af54	sxtw	x9, w10
000000000002af58	add	x8, x8, x9, lsl #4
000000000002af5c	ldr	x8, [x8, #0x8]
000000000002af60	ldr	x8, [x8]
000000000002af64	mov	x0, x20
000000000002af68	mov	x2, x23
000000000002af6c	blr	x8
000000000002af70	ldr	w8, [x22, #0x18]
000000000002af74	cmp	w8, w24
000000000002af78	b.ls	0x2b010
000000000002af7c	ldrb	w8, [x0, #0x8]
000000000002af80	ldr	xzr, [x21]
000000000002af84	strb	w8, [x19, w24, sxtw]
000000000002af88	add	w8, w24, #0x1
000000000002af8c	cmp	w24, w28
000000000002af90	mov	x24, x8
000000000002af94	b.ne	0x2ae98
000000000002af98	adrp	x22, 80 ; 0x7a000
000000000002af9c	add	x22, x22, #0x2c0
000000000002afa0	mov	x0, x22
000000000002afa4	ldr	x19, [sp, #0x8]
000000000002afa8	blr	x19
000000000002afac	ldr	x8, [x0]
000000000002afb0	ldr	x9, [sp, #0x48]
000000000002afb4	str	x9, [x8, #0x110]
000000000002afb8	mov	x0, x21
000000000002afbc	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002afc0	mov	x1, x0
000000000002afc4	mov	x0, x22
000000000002afc8	blr	x19
000000000002afcc	ldr	x8, [x0]
000000000002afd0	ldr	x9, [sp, #0x18]
000000000002afd4	str	x9, [x8, #0x110]
000000000002afd8	add	x8, x8, #0x138
000000000002afdc	mov	w9, #0x1
000000000002afe0	ldaxr	wzr, [x8]
000000000002afe4	stlxr	w10, w9, [x8]
000000000002afe8	cbnz	w10, 0x2afe0
000000000002afec	mov	x0, x1
000000000002aff0	ldp	x29, x30, [sp, #0xc0]
000000000002aff4	ldp	x20, x19, [sp, #0xb0]
000000000002aff8	ldp	x22, x21, [sp, #0xa0]
000000000002affc	ldp	x24, x23, [sp, #0x90]
000000000002b000	ldp	x26, x25, [sp, #0x80]
000000000002b004	ldp	x28, x27, [sp, #0x70]
000000000002b008	add	sp, sp, #0xd0
000000000002b00c	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002b010	bl	_ThrowArrayIndexOutOfBoundsException
000000000002b014	b	0x2b068
000000000002b018	bl	_ThrowIllegalArgumentException
000000000002b01c	b	0x2b068
000000000002b020	b	0x2b024
000000000002b024	mov	x1, x0
000000000002b028	adrp	x22, 79 ; 0x7a000
000000000002b02c	add	x22, x22, #0x2c0
000000000002b030	mov	x0, x22
000000000002b034	ldr	x19, [sp, #0x8]
000000000002b038	blr	x19
000000000002b03c	ldr	x8, [x0]
000000000002b040	add	x9, sp, #0x10
000000000002b044	str	x9, [x8, #0x110]
000000000002b048	mov	x0, x1
000000000002b04c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002b050	ldr	x8, [x0, #0x8]
000000000002b054	ldr	x20, [x8]
000000000002b058	str	x20, [sp, #0x30]
000000000002b05c	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002b060	mov	x0, x20
000000000002b064	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002b068	brk	#0x1
000000000002b06c	mov	x1, x0
000000000002b070	mov	x0, x22
000000000002b074	blr	x19
000000000002b078	ldr	x8, [x0]
000000000002b07c	add	x9, sp, #0x10
000000000002b080	str	x9, [x8, #0x110]
000000000002b084	mov	x0, x1
000000000002b088	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002b08c	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002b090	b	0x2b090
_objc2kotlin_Kotlin_ByteArray_get:
000000000002b094	sub	sp, sp, #0x70
000000000002b098	stp	x24, x23, [sp, #0x30]
000000000002b09c	stp	x22, x21, [sp, #0x40]
000000000002b0a0	stp	x20, x19, [sp, #0x50]
000000000002b0a4	stp	x29, x30, [sp, #0x60]
000000000002b0a8	add	x29, sp, #0x60
000000000002b0ac	mov	x20, x2
000000000002b0b0	mov	x21, x0
000000000002b0b4	str	xzr, [sp, #0x20]
000000000002b0b8	movi.16b	v0, #0x0
000000000002b0bc	stp	q0, q0, [sp]
000000000002b0c0	mov	x8, sp
000000000002b0c4	add	x22, x8, #0x18
000000000002b0c8	bl	_Kotlin_initRuntimeIfNeeded
000000000002b0cc	adrp	x19, 79 ; 0x7a000
000000000002b0d0	add	x19, x19, #0x2c0
000000000002b0d4	ldr	x23, [x19]
000000000002b0d8	mov	x0, x19
000000000002b0dc	blr	x23
000000000002b0e0	ldr	x8, [x0]
000000000002b0e4	add	x0, x8, #0x138
000000000002b0e8	ldaxr	w8, [x0]
000000000002b0ec	stlxr	w9, wzr, [x0]
000000000002b0f0	cbnz	w9, 0x2b0e8
000000000002b0f4	adr	x24, #0x69195
000000000002b0f8	nop
000000000002b0fc	cmp	w8, #0x1
000000000002b100	b.ne	0x2b110
000000000002b104	ldarb	w8, [x24]
000000000002b108	tbz	w8, #0x0, 0x2b110
000000000002b10c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002b110	mov	x0, x19
000000000002b114	blr	x23
000000000002b118	ldr	x8, [x0]
000000000002b11c	ldr	x9, [x8, #0x110]
000000000002b120	mov	x10, sp
000000000002b124	str	x10, [x8, #0x110]
000000000002b128	mov	x8, #0x500000000
000000000002b12c	stp	x9, x8, [sp, #0x8]
000000000002b130	ldarb	w8, [x24]
000000000002b134	tbz	w8, #0x0, 0x2b13c
000000000002b138	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b13c	cbz	x21, 0x2b1ac
000000000002b140	nop
000000000002b144	ldr	x1, #0x69394
000000000002b148	mov	x0, x21
000000000002b14c	mov	x2, x22
000000000002b150	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002b154	ldr	w8, [x0, #0x8]
000000000002b158	cmp	w8, w20
000000000002b15c	b.ls	0x2b1c0
000000000002b160	add	x8, x0, w20, sxtw
000000000002b164	ldrb	w8, [x8, #0x10]
000000000002b168	mov	x0, x19
000000000002b16c	blr	x23
000000000002b170	ldr	x9, [x0]
000000000002b174	ldr	x10, [sp, #0x8]
000000000002b178	str	x10, [x9, #0x110]
000000000002b17c	add	x9, x9, #0x138
000000000002b180	mov	w10, #0x1
000000000002b184	ldaxr	wzr, [x9]
000000000002b188	stlxr	w11, w10, [x9]
000000000002b18c	cbnz	w11, 0x2b184
000000000002b190	sxtb	w0, w8
000000000002b194	ldp	x29, x30, [sp, #0x60]
000000000002b198	ldp	x20, x19, [sp, #0x50]
000000000002b19c	ldp	x22, x21, [sp, #0x40]
000000000002b1a0	ldp	x24, x23, [sp, #0x30]
000000000002b1a4	add	sp, sp, #0x70
000000000002b1a8	ret
000000000002b1ac	mov	x0, #0x0
000000000002b1b0	str	xzr, [sp, #0x18]
000000000002b1b4	ldr	w8, [x0, #0x8]
000000000002b1b8	cmp	w8, w20
000000000002b1bc	b.hi	0x2b160
000000000002b1c0	bl	_ThrowArrayIndexOutOfBoundsException
000000000002b1c4	b	0x2b200
000000000002b1c8	mov	x1, x0
000000000002b1cc	mov	x0, x19
000000000002b1d0	blr	x23
000000000002b1d4	ldr	x8, [x0]
000000000002b1d8	mov	x9, sp
000000000002b1dc	str	x9, [x8, #0x110]
000000000002b1e0	mov	x0, x1
000000000002b1e4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002b1e8	ldr	x8, [x0, #0x8]
000000000002b1ec	ldr	x20, [x8]
000000000002b1f0	str	x20, [sp, #0x20]
000000000002b1f4	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002b1f8	mov	x0, x20
000000000002b1fc	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002b200	brk	#0x1
000000000002b204	mov	x1, x0
000000000002b208	mov	x0, x19
000000000002b20c	blr	x23
000000000002b210	ldr	x8, [x0]
000000000002b214	mov	x9, sp
000000000002b218	str	x9, [x8, #0x110]
000000000002b21c	mov	x0, x1
000000000002b220	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002b224	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002b228	b	0x2b228
_objc2kotlin_kfun:kotlin.ByteArray#iterator(){}kotlin.collections.ByteIterator:
000000000002b22c	sub	sp, sp, #0x70
000000000002b230	stp	x24, x23, [sp, #0x30]
000000000002b234	stp	x22, x21, [sp, #0x40]
000000000002b238	stp	x20, x19, [sp, #0x50]
000000000002b23c	stp	x29, x30, [sp, #0x60]
000000000002b240	add	x29, sp, #0x60
000000000002b244	mov	x20, x0
000000000002b248	movi.16b	v0, #0x0
000000000002b24c	stp	q0, q0, [sp, #0x10]
000000000002b250	str	q0, [sp]
000000000002b254	mov	x8, sp
000000000002b258	add	x21, x8, #0x18
000000000002b25c	bl	_Kotlin_initRuntimeIfNeeded
000000000002b260	adrp	x19, 79 ; 0x7a000
000000000002b264	add	x19, x19, #0x2c0
000000000002b268	ldr	x22, [x19]
000000000002b26c	mov	x0, x19
000000000002b270	blr	x22
000000000002b274	ldr	x8, [x0]
000000000002b278	add	x0, x8, #0x138
000000000002b27c	ldaxr	w8, [x0]
000000000002b280	stlxr	w9, wzr, [x0]
000000000002b284	cbnz	w9, 0x2b27c
000000000002b288	adr	x23, #0x69001
000000000002b28c	nop
000000000002b290	cmp	w8, #0x1
000000000002b294	b.ne	0x2b2a4
000000000002b298	ldarb	w8, [x23]
000000000002b29c	tbz	w8, #0x0, 0x2b2a4
000000000002b2a0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002b2a4	mov	x0, x19
000000000002b2a8	blr	x22
000000000002b2ac	ldr	x8, [x0]
000000000002b2b0	ldr	x9, [x8, #0x110]
000000000002b2b4	mov	x10, sp
000000000002b2b8	str	x10, [x8, #0x110]
000000000002b2bc	mov	x8, #0x600000000
000000000002b2c0	stp	x9, x8, [sp, #0x8]
000000000002b2c4	ldarb	w8, [x23]
000000000002b2c8	tbz	w8, #0x0, 0x2b2d0
000000000002b2cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b2d0	cbz	x20, 0x2b37c
000000000002b2d4	nop
000000000002b2d8	ldr	x1, #0x69200
000000000002b2dc	mov	x0, x20
000000000002b2e0	mov	x2, x21
000000000002b2e4	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002b2e8	mov	x20, x0
000000000002b2ec	ldarb	w8, [x23]
000000000002b2f0	tbz	w8, #0x0, 0x2b2f8
000000000002b2f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b2f8	mov	x0, x19
000000000002b2fc	blr	x22
000000000002b300	ldr	x8, [x0]
000000000002b304	ldr	x8, [x8, #0x118]
000000000002b308	add	x0, x8, #0x70
000000000002b30c	mov	w1, #0x20
000000000002b310	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002b314	adr	x8, #0x35bcc
000000000002b318	nop
000000000002b31c	str	x8, [x0, #0x10]!
000000000002b320	stur	xzr, [x0, #-0x8]
000000000002b324	str	x0, [sp, #0x28]
000000000002b328	str	x20, [x0, #0x8]
000000000002b32c	str	x0, [sp, #0x28]
000000000002b330	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002b334	mov	x1, x0
000000000002b338	mov	x0, x19
000000000002b33c	blr	x22
000000000002b340	ldr	x8, [x0]
000000000002b344	ldr	x9, [sp, #0x8]
000000000002b348	str	x9, [x8, #0x110]
000000000002b34c	add	x8, x8, #0x138
000000000002b350	mov	w9, #0x1
000000000002b354	ldaxr	wzr, [x8]
000000000002b358	stlxr	w10, w9, [x8]
000000000002b35c	cbnz	w10, 0x2b354
000000000002b360	mov	x0, x1
000000000002b364	ldp	x29, x30, [sp, #0x60]
000000000002b368	ldp	x20, x19, [sp, #0x50]
000000000002b36c	ldp	x22, x21, [sp, #0x40]
000000000002b370	ldp	x24, x23, [sp, #0x30]
000000000002b374	add	sp, sp, #0x70
000000000002b378	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002b37c	str	xzr, [sp, #0x18]
000000000002b380	ldarb	w8, [x23]
000000000002b384	tbnz	w8, #0x0, 0x2b2f4
000000000002b388	b	0x2b2f8
000000000002b38c	mov	x1, x0
000000000002b390	mov	x0, x19
000000000002b394	blr	x22
000000000002b398	ldr	x8, [x0]
000000000002b39c	mov	x9, sp
000000000002b3a0	str	x9, [x8, #0x110]
000000000002b3a4	mov	x0, x1
000000000002b3a8	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002b3ac	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002b3b0	b	0x2b3b0
_objc2kotlin_Kotlin_ByteArray_set:
000000000002b3b4	sub	sp, sp, #0x80
000000000002b3b8	stp	x26, x25, [sp, #0x30]
000000000002b3bc	stp	x24, x23, [sp, #0x40]
000000000002b3c0	stp	x22, x21, [sp, #0x50]
000000000002b3c4	stp	x20, x19, [sp, #0x60]
000000000002b3c8	stp	x29, x30, [sp, #0x70]
000000000002b3cc	add	x29, sp, #0x70
000000000002b3d0	mov	x20, x3
000000000002b3d4	mov	x21, x2
000000000002b3d8	mov	x22, x0
000000000002b3dc	str	xzr, [sp, #0x20]
000000000002b3e0	movi.16b	v0, #0x0
000000000002b3e4	stp	q0, q0, [sp]
000000000002b3e8	mov	x8, sp
000000000002b3ec	add	x23, x8, #0x18
000000000002b3f0	bl	_Kotlin_initRuntimeIfNeeded
000000000002b3f4	adrp	x19, 79 ; 0x7a000
000000000002b3f8	add	x19, x19, #0x2c0
000000000002b3fc	ldr	x24, [x19]
000000000002b400	mov	x0, x19
000000000002b404	blr	x24
000000000002b408	ldr	x8, [x0]
000000000002b40c	add	x0, x8, #0x138
000000000002b410	ldaxr	w8, [x0]
000000000002b414	stlxr	w9, wzr, [x0]
000000000002b418	cbnz	w9, 0x2b410
000000000002b41c	adr	x25, #0x68e6d
000000000002b420	nop
000000000002b424	cmp	w8, #0x1
000000000002b428	b.ne	0x2b438
000000000002b42c	ldarb	w8, [x25]
000000000002b430	tbz	w8, #0x0, 0x2b438
000000000002b434	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002b438	mov	x0, x19
000000000002b43c	blr	x24
000000000002b440	ldr	x8, [x0]
000000000002b444	ldr	x9, [x8, #0x110]
000000000002b448	mov	x10, sp
000000000002b44c	str	x10, [x8, #0x110]
000000000002b450	mov	x8, #0x500000000
000000000002b454	stp	x9, x8, [sp, #0x8]
000000000002b458	ldarb	w8, [x25]
000000000002b45c	tbz	w8, #0x0, 0x2b464
000000000002b460	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b464	cbz	x22, 0x2b4d8
000000000002b468	nop
000000000002b46c	ldr	x1, #0x6906c
000000000002b470	mov	x0, x22
000000000002b474	mov	x2, x23
000000000002b478	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002b47c	ldr	w8, [x0, #0x8]
000000000002b480	cmp	w8, w21
000000000002b484	b.ls	0x2b4ec
000000000002b488	ldr	xzr, [x0]
000000000002b48c	add	x8, x0, w21, sxtw
000000000002b490	strb	w20, [x8, #0x10]
000000000002b494	mov	x0, x19
000000000002b498	blr	x24
000000000002b49c	ldr	x8, [x0]
000000000002b4a0	ldr	x9, [sp, #0x8]
000000000002b4a4	str	x9, [x8, #0x110]
000000000002b4a8	add	x8, x8, #0x138
000000000002b4ac	mov	w9, #0x1
000000000002b4b0	ldaxr	wzr, [x8]
000000000002b4b4	stlxr	w10, w9, [x8]
000000000002b4b8	cbnz	w10, 0x2b4b0
000000000002b4bc	ldp	x29, x30, [sp, #0x70]
000000000002b4c0	ldp	x20, x19, [sp, #0x60]
000000000002b4c4	ldp	x22, x21, [sp, #0x50]
000000000002b4c8	ldp	x24, x23, [sp, #0x40]
000000000002b4cc	ldp	x26, x25, [sp, #0x30]
000000000002b4d0	add	sp, sp, #0x80
000000000002b4d4	ret
000000000002b4d8	mov	x0, #0x0
000000000002b4dc	str	xzr, [sp, #0x18]
000000000002b4e0	ldr	w8, [x0, #0x8]
000000000002b4e4	cmp	w8, w21
000000000002b4e8	b.hi	0x2b488
000000000002b4ec	bl	_ThrowArrayIndexOutOfBoundsException
000000000002b4f0	b	0x2b52c
000000000002b4f4	mov	x1, x0
000000000002b4f8	mov	x0, x19
000000000002b4fc	blr	x24
000000000002b500	ldr	x8, [x0]
000000000002b504	mov	x9, sp
000000000002b508	str	x9, [x8, #0x110]
000000000002b50c	mov	x0, x1
000000000002b510	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002b514	ldr	x8, [x0, #0x8]
000000000002b518	ldr	x20, [x8]
000000000002b51c	str	x20, [sp, #0x20]
000000000002b520	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002b524	mov	x0, x20
000000000002b528	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002b52c	brk	#0x1
000000000002b530	mov	x1, x0
000000000002b534	mov	x0, x19
000000000002b538	blr	x24
000000000002b53c	ldr	x8, [x0]
000000000002b540	mov	x9, sp
000000000002b544	str	x9, [x8, #0x110]
000000000002b548	mov	x0, x1
000000000002b54c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002b550	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002b554	b	0x2b554
_objc2kotlin_kfun:kotlin.ByteArray#<get-size>(){}kotlin.Int:
000000000002b558	sub	sp, sp, #0x70
000000000002b55c	stp	x24, x23, [sp, #0x30]
000000000002b560	stp	x22, x21, [sp, #0x40]
000000000002b564	stp	x20, x19, [sp, #0x50]
000000000002b568	stp	x29, x30, [sp, #0x60]
000000000002b56c	add	x29, sp, #0x60
000000000002b570	mov	x20, x0
000000000002b574	str	xzr, [sp, #0x20]
000000000002b578	movi.16b	v0, #0x0
000000000002b57c	stp	q0, q0, [sp]
000000000002b580	mov	x8, sp
000000000002b584	add	x21, x8, #0x18
000000000002b588	bl	_Kotlin_initRuntimeIfNeeded
000000000002b58c	adrp	x19, 79 ; 0x7a000
000000000002b590	add	x19, x19, #0x2c0
000000000002b594	ldr	x22, [x19]
000000000002b598	mov	x0, x19
000000000002b59c	blr	x22
000000000002b5a0	ldr	x8, [x0]
000000000002b5a4	add	x0, x8, #0x138
000000000002b5a8	ldaxr	w8, [x0]
000000000002b5ac	stlxr	w9, wzr, [x0]
000000000002b5b0	cbnz	w9, 0x2b5a8
000000000002b5b4	adr	x23, #0x68cd5
000000000002b5b8	nop
000000000002b5bc	cmp	w8, #0x1
000000000002b5c0	b.ne	0x2b5d0
000000000002b5c4	ldarb	w8, [x23]
000000000002b5c8	tbz	w8, #0x0, 0x2b5d0
000000000002b5cc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002b5d0	mov	x0, x19
000000000002b5d4	blr	x22
000000000002b5d8	ldr	x8, [x0]
000000000002b5dc	ldr	x9, [x8, #0x110]
000000000002b5e0	mov	x10, sp
000000000002b5e4	str	x10, [x8, #0x110]
000000000002b5e8	mov	x8, #0x500000000
000000000002b5ec	stp	x9, x8, [sp, #0x8]
000000000002b5f0	ldarb	w8, [x23]
000000000002b5f4	tbz	w8, #0x0, 0x2b5fc
000000000002b5f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b5fc	cbz	x20, 0x2b66c
000000000002b600	nop
000000000002b604	ldr	x1, #0x68ed4
000000000002b608	mov	x0, x20
000000000002b60c	mov	x2, x21
000000000002b610	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002b614	mov	x20, x0
000000000002b618	ldarb	w8, [x23]
000000000002b61c	tbz	w8, #0x0, 0x2b624
000000000002b620	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b624	ldr	w8, [x20, #0x8]
000000000002b628	mov	x0, x19
000000000002b62c	blr	x22
000000000002b630	ldr	x9, [x0]
000000000002b634	ldr	x10, [sp, #0x8]
000000000002b638	str	x10, [x9, #0x110]
000000000002b63c	add	x9, x9, #0x138
000000000002b640	mov	w10, #0x1
000000000002b644	ldaxr	wzr, [x9]
000000000002b648	stlxr	w11, w10, [x9]
000000000002b64c	cbnz	w11, 0x2b644
000000000002b650	mov	x0, x8
000000000002b654	ldp	x29, x30, [sp, #0x60]
000000000002b658	ldp	x20, x19, [sp, #0x50]
000000000002b65c	ldp	x22, x21, [sp, #0x40]
000000000002b660	ldp	x24, x23, [sp, #0x30]
000000000002b664	add	sp, sp, #0x70
000000000002b668	ret
000000000002b66c	str	xzr, [sp, #0x18]
000000000002b670	ldarb	w8, [x23]
000000000002b674	tbnz	w8, #0x0, 0x2b620
000000000002b678	b	0x2b624
000000000002b67c	mov	x1, x0
000000000002b680	mov	x0, x19
000000000002b684	blr	x22
000000000002b688	ldr	x8, [x0]
000000000002b68c	mov	x9, sp
000000000002b690	str	x9, [x8, #0x110]
000000000002b694	mov	x0, x1
000000000002b698	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002b69c	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002b6a0	b	0x2b6a0
_objc2kotlin_virtual_kfun:kotlin.collections.Iterator#hasNext(){}kotlin.Boolean:
000000000002b6a4	sub	sp, sp, #0x70
000000000002b6a8	stp	x24, x23, [sp, #0x30]
000000000002b6ac	stp	x22, x21, [sp, #0x40]
000000000002b6b0	stp	x20, x19, [sp, #0x50]
000000000002b6b4	stp	x29, x30, [sp, #0x60]
000000000002b6b8	add	x29, sp, #0x60
000000000002b6bc	mov	x20, x0
000000000002b6c0	str	xzr, [sp, #0x20]
000000000002b6c4	movi.16b	v0, #0x0
000000000002b6c8	stp	q0, q0, [sp]
000000000002b6cc	mov	x8, sp
000000000002b6d0	add	x21, x8, #0x18
000000000002b6d4	bl	_Kotlin_initRuntimeIfNeeded
000000000002b6d8	adrp	x19, 79 ; 0x7a000
000000000002b6dc	add	x19, x19, #0x2c0
000000000002b6e0	ldr	x22, [x19]
000000000002b6e4	mov	x0, x19
000000000002b6e8	blr	x22
000000000002b6ec	ldr	x8, [x0]
000000000002b6f0	add	x0, x8, #0x138
000000000002b6f4	ldaxr	w8, [x0]
000000000002b6f8	stlxr	w9, wzr, [x0]
000000000002b6fc	cbnz	w9, 0x2b6f4
000000000002b700	adr	x23, #0x68b89
000000000002b704	nop
000000000002b708	cmp	w8, #0x1
000000000002b70c	b.ne	0x2b71c
000000000002b710	ldarb	w8, [x23]
000000000002b714	tbz	w8, #0x0, 0x2b71c
000000000002b718	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002b71c	mov	x0, x19
000000000002b720	blr	x22
000000000002b724	ldr	x8, [x0]
000000000002b728	ldr	x9, [x8, #0x110]
000000000002b72c	mov	x10, sp
000000000002b730	str	x10, [x8, #0x110]
000000000002b734	mov	x8, #0x500000000
000000000002b738	stp	x9, x8, [sp, #0x8]
000000000002b73c	ldarb	w8, [x23]
000000000002b740	tbz	w8, #0x0, 0x2b748
000000000002b744	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b748	nop
000000000002b74c	ldr	x1, #0x68d8c
000000000002b750	mov	x0, x20
000000000002b754	mov	x2, x21
000000000002b758	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002b75c	ldr	x8, [x0]
000000000002b760	and	x8, x8, #0xfffffffffffffffc
000000000002b764	ldr	x8, [x8]
000000000002b768	ldr	w9, [x8, #0x3c]
000000000002b76c	ldr	x8, [x8, #0x40]
000000000002b770	tbnz	w9, #0x1f, 0x2b780
000000000002b774	mov	w10, #0xa0
000000000002b778	and	x9, x9, x10
000000000002b77c	b	0x2b804
000000000002b780	neg	w10, w9
000000000002b784	mvn	w9, w9
000000000002b788	cmp	w10, #0x9
000000000002b78c	b.ge	0x2b7c4
000000000002b790	cmp	w10, #0x2
000000000002b794	b.lt	0x2b7f8
000000000002b798	mov	x10, #0x0
000000000002b79c	mov	x11, x8
000000000002b7a0	ldr	w12, [x11]
000000000002b7a4	cmp	w12, #0x9f
000000000002b7a8	b.gt	0x2b800
000000000002b7ac	add	x10, x10, #0x1
000000000002b7b0	add	x11, x11, #0x10
000000000002b7b4	cmp	x9, x10
000000000002b7b8	b.ne	0x2b7a0
000000000002b7bc	mov	x10, x9
000000000002b7c0	b	0x2b800
000000000002b7c4	mov	w10, #0x0
000000000002b7c8	add	w11, w9, w10
000000000002b7cc	cmp	w11, #0x0
000000000002b7d0	cinc	w11, w11, lt
000000000002b7d4	asr	w11, w11, #1
000000000002b7d8	sbfiz	x12, x11, #4, #32
000000000002b7dc	ldr	w12, [x8, x12]
000000000002b7e0	cmp	w12, #0xa0
000000000002b7e4	csinc	w10, w10, w11, ge
000000000002b7e8	csel	w9, w9, w11, lt
000000000002b7ec	cmp	w10, w9
000000000002b7f0	b.lt	0x2b7c8
000000000002b7f4	b	0x2b800
000000000002b7f8	mov	w10, #0x0
000000000002b7fc	b	0x2b800
000000000002b800	sxtw	x9, w10
000000000002b804	add	x8, x8, x9, lsl #4
000000000002b808	ldr	x8, [x8, #0x8]
000000000002b80c	ldr	x8, [x8]
000000000002b810	blr	x8
000000000002b814	mov	x1, x0
000000000002b818	mov	x0, x19
000000000002b81c	blr	x22
000000000002b820	ldr	x8, [x0]
000000000002b824	ldr	x9, [sp, #0x8]
000000000002b828	str	x9, [x8, #0x110]
000000000002b82c	add	x8, x8, #0x138
000000000002b830	mov	w9, #0x1
000000000002b834	ldaxr	wzr, [x8]
000000000002b838	stlxr	w10, w9, [x8]
000000000002b83c	cbnz	w10, 0x2b834
000000000002b840	mov	x0, x1
000000000002b844	ldp	x29, x30, [sp, #0x60]
000000000002b848	ldp	x20, x19, [sp, #0x50]
000000000002b84c	ldp	x22, x21, [sp, #0x40]
000000000002b850	ldp	x24, x23, [sp, #0x30]
000000000002b854	add	sp, sp, #0x70
000000000002b858	ret
000000000002b85c	mov	x1, x0
000000000002b860	mov	x0, x19
000000000002b864	blr	x22
000000000002b868	ldr	x8, [x0]
000000000002b86c	mov	x9, sp
000000000002b870	str	x9, [x8, #0x110]
000000000002b874	mov	x0, x1
000000000002b878	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002b87c	ldr	x8, [x0, #0x8]
000000000002b880	ldr	x20, [x8]
000000000002b884	str	x20, [sp, #0x20]
000000000002b888	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002b88c	mov	x0, x20
000000000002b890	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002b894	brk	#0x1
000000000002b898	mov	x1, x0
000000000002b89c	mov	x0, x19
000000000002b8a0	blr	x22
000000000002b8a4	ldr	x8, [x0]
000000000002b8a8	mov	x9, sp
000000000002b8ac	str	x9, [x8, #0x110]
000000000002b8b0	mov	x0, x1
000000000002b8b4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002b8b8	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002b8bc	b	0x2b8bc
_objc2kotlin_virtual_kfun:kotlin.collections.Iterator#next(){}1:0:
000000000002b8c0	sub	sp, sp, #0x70
000000000002b8c4	stp	x24, x23, [sp, #0x30]
000000000002b8c8	stp	x22, x21, [sp, #0x40]
000000000002b8cc	stp	x20, x19, [sp, #0x50]
000000000002b8d0	stp	x29, x30, [sp, #0x60]
000000000002b8d4	add	x29, sp, #0x60
000000000002b8d8	mov	x21, x0
000000000002b8dc	movi.16b	v0, #0x0
000000000002b8e0	stp	q0, q0, [sp, #0x10]
000000000002b8e4	str	q0, [sp]
000000000002b8e8	mov	x8, sp
000000000002b8ec	add	x22, x8, #0x18
000000000002b8f0	add	x20, x8, #0x28
000000000002b8f4	bl	_Kotlin_initRuntimeIfNeeded
000000000002b8f8	adrp	x19, 79 ; 0x7a000
000000000002b8fc	add	x19, x19, #0x2c0
000000000002b900	ldr	x23, [x19]
000000000002b904	mov	x0, x19
000000000002b908	blr	x23
000000000002b90c	ldr	x8, [x0]
000000000002b910	add	x0, x8, #0x138
000000000002b914	ldaxr	w8, [x0]
000000000002b918	stlxr	w9, wzr, [x0]
000000000002b91c	cbnz	w9, 0x2b914
000000000002b920	adr	x24, #0x68969
000000000002b924	nop
000000000002b928	cmp	w8, #0x1
000000000002b92c	b.ne	0x2b93c
000000000002b930	ldarb	w8, [x24]
000000000002b934	tbz	w8, #0x0, 0x2b93c
000000000002b938	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002b93c	mov	x0, x19
000000000002b940	blr	x23
000000000002b944	ldr	x8, [x0]
000000000002b948	ldr	x9, [x8, #0x110]
000000000002b94c	mov	x10, sp
000000000002b950	str	x10, [x8, #0x110]
000000000002b954	mov	x8, #0x600000000
000000000002b958	stp	x9, x8, [sp, #0x8]
000000000002b95c	ldarb	w8, [x24]
000000000002b960	tbz	w8, #0x0, 0x2b968
000000000002b964	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b968	nop
000000000002b96c	ldr	x1, #0x68b6c
000000000002b970	mov	x0, x21
000000000002b974	mov	x2, x22
000000000002b978	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002b97c	ldr	x8, [x0]
000000000002b980	and	x8, x8, #0xfffffffffffffffc
000000000002b984	ldr	x8, [x8]
000000000002b988	ldr	w9, [x8, #0x3c]
000000000002b98c	ldr	x8, [x8, #0x40]
000000000002b990	tbnz	w9, #0x1f, 0x2b9a0
000000000002b994	mov	w10, #0xa0
000000000002b998	and	x9, x9, x10
000000000002b99c	b	0x2ba24
000000000002b9a0	neg	w10, w9
000000000002b9a4	mvn	w9, w9
000000000002b9a8	cmp	w10, #0x9
000000000002b9ac	b.ge	0x2b9e4
000000000002b9b0	cmp	w10, #0x2
000000000002b9b4	b.lt	0x2ba18
000000000002b9b8	mov	x10, #0x0
000000000002b9bc	mov	x11, x8
000000000002b9c0	ldr	w12, [x11]
000000000002b9c4	cmp	w12, #0x9f
000000000002b9c8	b.gt	0x2ba20
000000000002b9cc	add	x10, x10, #0x1
000000000002b9d0	add	x11, x11, #0x10
000000000002b9d4	cmp	x9, x10
000000000002b9d8	b.ne	0x2b9c0
000000000002b9dc	mov	x10, x9
000000000002b9e0	b	0x2ba20
000000000002b9e4	mov	w10, #0x0
000000000002b9e8	add	w11, w9, w10
000000000002b9ec	cmp	w11, #0x0
000000000002b9f0	cinc	w11, w11, lt
000000000002b9f4	asr	w11, w11, #1
000000000002b9f8	sbfiz	x12, x11, #4, #32
000000000002b9fc	ldr	w12, [x8, x12]
000000000002ba00	cmp	w12, #0xa0
000000000002ba04	csinc	w10, w10, w11, ge
000000000002ba08	csel	w9, w9, w11, lt
000000000002ba0c	cmp	w10, w9
000000000002ba10	b.lt	0x2b9e8
000000000002ba14	b	0x2ba20
000000000002ba18	mov	w10, #0x0
000000000002ba1c	b	0x2ba20
000000000002ba20	sxtw	x9, w10
000000000002ba24	add	x8, x8, x9, lsl #4
000000000002ba28	ldr	x8, [x8, #0x8]
000000000002ba2c	ldr	x8, [x8, #0x8]
000000000002ba30	mov	x1, x20
000000000002ba34	blr	x8
000000000002ba38	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002ba3c	mov	x1, x0
000000000002ba40	mov	x0, x19
000000000002ba44	blr	x23
000000000002ba48	ldr	x8, [x0]
000000000002ba4c	ldr	x9, [sp, #0x8]
000000000002ba50	str	x9, [x8, #0x110]
000000000002ba54	add	x8, x8, #0x138
000000000002ba58	mov	w9, #0x1
000000000002ba5c	ldaxr	wzr, [x8]
000000000002ba60	stlxr	w10, w9, [x8]
000000000002ba64	cbnz	w10, 0x2ba5c
000000000002ba68	mov	x0, x1
000000000002ba6c	ldp	x29, x30, [sp, #0x60]
000000000002ba70	ldp	x20, x19, [sp, #0x50]
000000000002ba74	ldp	x22, x21, [sp, #0x40]
000000000002ba78	ldp	x24, x23, [sp, #0x30]
000000000002ba7c	add	sp, sp, #0x70
000000000002ba80	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002ba84	mov	x1, x0
000000000002ba88	mov	x0, x19
000000000002ba8c	blr	x23
000000000002ba90	ldr	x8, [x0]
000000000002ba94	mov	x9, sp
000000000002ba98	str	x9, [x8, #0x110]
000000000002ba9c	mov	x0, x1
000000000002baa0	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002baa4	ldr	x8, [x0, #0x8]
000000000002baa8	ldr	x20, [x8]
000000000002baac	str	x20, [sp, #0x20]
000000000002bab0	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002bab4	mov	x0, x20
000000000002bab8	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002babc	brk	#0x1
000000000002bac0	mov	x1, x0
000000000002bac4	mov	x0, x19
000000000002bac8	blr	x23
000000000002bacc	ldr	x8, [x0]
000000000002bad0	mov	x9, sp
000000000002bad4	str	x9, [x8, #0x110]
000000000002bad8	mov	x0, x1
000000000002badc	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002bae0	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002bae4	b	0x2bae4
_objc2kotlin_kfun:kotlin.collections.ByteIterator#<init>(){}:
000000000002bae8	sub	sp, sp, #0x80
000000000002baec	stp	x24, x23, [sp, #0x40]
000000000002baf0	stp	x22, x21, [sp, #0x50]
000000000002baf4	stp	x20, x19, [sp, #0x60]
000000000002baf8	stp	x29, x30, [sp, #0x70]
000000000002bafc	add	x29, sp, #0x70
000000000002bb00	mov	x19, x0
000000000002bb04	str	xzr, [sp, #0x30]
000000000002bb08	movi.16b	v0, #0x0
000000000002bb0c	stp	q0, q0, [sp, #0x10]
000000000002bb10	add	x8, sp, #0x10
000000000002bb14	add	x21, x8, #0x18
000000000002bb18	bl	_Kotlin_initRuntimeIfNeeded
000000000002bb1c	adrp	x20, 79 ; 0x7a000
000000000002bb20	add	x20, x20, #0x2c0
000000000002bb24	ldr	x23, [x20]
000000000002bb28	mov	x0, x20
000000000002bb2c	blr	x23
000000000002bb30	ldr	x8, [x0]
000000000002bb34	add	x0, x8, #0x138
000000000002bb38	ldaxr	w8, [x0]
000000000002bb3c	stlxr	w9, wzr, [x0]
000000000002bb40	cbnz	w9, 0x2bb38
000000000002bb44	adr	x24, #0x68745
000000000002bb48	nop
000000000002bb4c	cmp	w8, #0x1
000000000002bb50	b.ne	0x2bb60
000000000002bb54	ldarb	w8, [x24]
000000000002bb58	tbz	w8, #0x0, 0x2bb60
000000000002bb5c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002bb60	mov	x0, x20
000000000002bb64	blr	x23
000000000002bb68	ldr	x8, [x0]
000000000002bb6c	ldr	x9, [x8, #0x110]
000000000002bb70	add	x10, sp, #0x10
000000000002bb74	str	x10, [x8, #0x110]
000000000002bb78	mov	x8, #0x500000000
000000000002bb7c	stp	x9, x8, [sp, #0x18]
000000000002bb80	ldarb	w8, [x24]
000000000002bb84	tbz	w8, #0x0, 0x2bb8c
000000000002bb88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002bb8c	cbz	x19, 0x2bba8
000000000002bb90	nop
000000000002bb94	ldr	x1, #0x68944
000000000002bb98	mov	x0, x19
000000000002bb9c	mov	x2, x21
000000000002bba0	bl	0x55584 ; Objc message: -[x0 hasNext]
000000000002bba4	b	0x2bbac
000000000002bba8	str	xzr, [sp, #0x28]
000000000002bbac	mov	x0, x19
000000000002bbb0	bl	0x555f0 ; symbol stub for: _object_getClass
000000000002bbb4	mov	x21, x0
000000000002bbb8	adr	x0, #0x39628
000000000002bbbc	nop
000000000002bbc0	bl	__ZL16getOrCreateClassPK8TypeInfo
000000000002bbc4	cmp	x21, x0
000000000002bbc8	b.ne	0x2bc04
000000000002bbcc	nop
000000000002bbd0	ldr	x22, #0x4b0a8 ; Objc class ref: _OBJC_CLASS_$_NSException
000000000002bbd4	mov	x0, x21
000000000002bbd8	bl	0x5541c ; symbol stub for: _class_getName
000000000002bbdc	nop
000000000002bbe0	ldr	x8, #0x34428 ; literal pool symbol address: _NSGenericException
000000000002bbe4	ldr	x2, [x8]
000000000002bbe8	nop
000000000002bbec	ldr	x1, #0x4ae44 ; Objc selector ref: raise:format:
000000000002bbf0	str	x0, [sp]
000000000002bbf4	adr	x3, #0x45ddc ; Objc cfstring ref: @"bad cfstring ref"
000000000002bbf8	nop
000000000002bbfc	mov	x0, x22
000000000002bc00	bl	0x55584 ; Objc message: +[NSException raise:format:]
000000000002bc04	ldarb	w8, [x24]
000000000002bc08	tbz	w8, #0x0, 0x2bc10
000000000002bc0c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002bc10	mov	x0, x20
000000000002bc14	blr	x23
000000000002bc18	ldr	x8, [x0]
000000000002bc1c	ldr	x9, [sp, #0x18]
000000000002bc20	str	x9, [x8, #0x110]
000000000002bc24	add	x8, x8, #0x138
000000000002bc28	mov	w9, #0x1
000000000002bc2c	ldaxr	wzr, [x8]
000000000002bc30	stlxr	w10, w9, [x8]
000000000002bc34	cbnz	w10, 0x2bc2c
000000000002bc38	mov	x0, x19
000000000002bc3c	ldp	x29, x30, [sp, #0x70]
000000000002bc40	ldp	x20, x19, [sp, #0x60]
000000000002bc44	ldp	x22, x21, [sp, #0x50]
000000000002bc48	ldp	x24, x23, [sp, #0x40]
000000000002bc4c	add	sp, sp, #0x80
000000000002bc50	ret
000000000002bc54	mov	x1, x0
000000000002bc58	mov	x0, x20
000000000002bc5c	blr	x23
000000000002bc60	ldr	x8, [x0]
000000000002bc64	add	x9, sp, #0x10
000000000002bc68	str	x9, [x8, #0x110]
000000000002bc6c	mov	x0, x1
000000000002bc70	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002bc74	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002bc78	b	0x2bc78
_objc2kotlin_kfun:kotlin.collections.Iterator#hasNext(){}kotlin.Boolean:
000000000002bc7c	sub	sp, sp, #0x60
000000000002bc80	stp	x24, x23, [sp, #0x20]
000000000002bc84	stp	x22, x21, [sp, #0x30]
000000000002bc88	stp	x20, x19, [sp, #0x40]
000000000002bc8c	stp	x29, x30, [sp, #0x50]
000000000002bc90	add	x29, sp, #0x50
000000000002bc94	mov	x19, x1
000000000002bc98	mov	x21, x0
000000000002bc9c	stp	xzr, xzr, [sp, #0x8]
000000000002bca0	str	xzr, [sp, #0x18]
000000000002bca4	bl	_Kotlin_initRuntimeIfNeeded
000000000002bca8	adrp	x20, 79 ; 0x7a000
000000000002bcac	add	x20, x20, #0x2c0
000000000002bcb0	ldr	x22, [x20]
000000000002bcb4	mov	x0, x20
000000000002bcb8	blr	x22
000000000002bcbc	ldr	x8, [x0]
000000000002bcc0	add	x0, x8, #0x138
000000000002bcc4	ldaxr	w8, [x0]
000000000002bcc8	stlxr	w9, wzr, [x0]
000000000002bccc	cbnz	w9, 0x2bcc4
000000000002bcd0	adr	x23, #0x685b9
000000000002bcd4	nop
000000000002bcd8	cmp	w8, #0x1
000000000002bcdc	b.ne	0x2bcec
000000000002bce0	ldarb	w8, [x23]
000000000002bce4	tbz	w8, #0x0, 0x2bcec
000000000002bce8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002bcec	mov	x0, x20
000000000002bcf0	blr	x22
000000000002bcf4	ldr	x8, [x0]
000000000002bcf8	ldr	x9, [x8, #0x110]
000000000002bcfc	add	x10, sp, #0x8
000000000002bd00	str	x10, [x8, #0x110]
000000000002bd04	mov	x8, #0x300000000
000000000002bd08	stp	x9, x8, [sp, #0x10]
000000000002bd0c	ldarb	w8, [x23]
000000000002bd10	tbz	w8, #0x0, 0x2bd18
000000000002bd14	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002bd18	mov	x0, x21
000000000002bd1c	mov	x1, x19
000000000002bd20	bl	_Kotlin_ObjCExport_AbstractMethodCalled
000000000002bd24	brk	#0x1
000000000002bd28	mov	x1, x0
000000000002bd2c	mov	x0, x20
000000000002bd30	blr	x22
000000000002bd34	ldr	x8, [x0]
000000000002bd38	add	x9, sp, #0x8
000000000002bd3c	str	x9, [x8, #0x110]
000000000002bd40	mov	x0, x1
000000000002bd44	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002bd48	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002bd4c	b	0x2bd4c
_objc2kotlin_kfun:kotlin.collections.ByteIterator#$<bridge-BNN>next(){}kotlin.Byte(){}kotlin.Any?:
000000000002bd50	sub	sp, sp, #0x70
000000000002bd54	stp	x24, x23, [sp, #0x30]
000000000002bd58	stp	x22, x21, [sp, #0x40]
000000000002bd5c	stp	x20, x19, [sp, #0x50]
000000000002bd60	stp	x29, x30, [sp, #0x60]
000000000002bd64	add	x29, sp, #0x60
000000000002bd68	mov	x21, x0
000000000002bd6c	movi.16b	v0, #0x0
000000000002bd70	stp	q0, q0, [sp, #0x10]
000000000002bd74	str	q0, [sp]
000000000002bd78	mov	x8, sp
000000000002bd7c	add	x22, x8, #0x18
000000000002bd80	add	x20, x8, #0x28
000000000002bd84	bl	_Kotlin_initRuntimeIfNeeded
000000000002bd88	adrp	x19, 79 ; 0x7a000
000000000002bd8c	add	x19, x19, #0x2c0
000000000002bd90	ldr	x23, [x19]
000000000002bd94	mov	x0, x19
000000000002bd98	blr	x23
000000000002bd9c	ldr	x8, [x0]
000000000002bda0	add	x0, x8, #0x138
000000000002bda4	ldaxr	w8, [x0]
000000000002bda8	stlxr	w9, wzr, [x0]
000000000002bdac	cbnz	w9, 0x2bda4
000000000002bdb0	adr	x24, #0x684d9
000000000002bdb4	nop
000000000002bdb8	cmp	w8, #0x1
000000000002bdbc	b.ne	0x2bdcc
000000000002bdc0	ldarb	w8, [x24]
000000000002bdc4	tbz	w8, #0x0, 0x2bdcc
000000000002bdc8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002bdcc	mov	x0, x19
000000000002bdd0	blr	x23
000000000002bdd4	ldr	x8, [x0]
000000000002bdd8	ldr	x9, [x8, #0x110]
000000000002bddc	mov	x10, sp
000000000002bde0	str	x10, [x8, #0x110]
000000000002bde4	mov	x8, #0x600000000
000000000002bde8	stp	x9, x8, [sp, #0x8]
000000000002bdec	ldarb	w8, [x24]
000000000002bdf0	tbz	w8, #0x0, 0x2bdf8
000000000002bdf4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002bdf8	cbz	x21, 0x2be90
000000000002bdfc	nop
000000000002be00	ldr	x1, #0x686d8
000000000002be04	mov	x0, x21
000000000002be08	mov	x2, x22
000000000002be0c	bl	0x55584 ; Objc message: -[x0 raise:format:]
000000000002be10	mov	x21, x0
000000000002be14	ldarb	w8, [x24]
000000000002be18	tbz	w8, #0x0, 0x2be20
000000000002be1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002be20	ldr	x8, [x21]
000000000002be24	and	x8, x8, #0xfffffffffffffffc
000000000002be28	ldr	x8, [x8]
000000000002be2c	ldr	x8, [x8, #0x90]
000000000002be30	mov	x0, x21
000000000002be34	blr	x8
000000000002be38	mov	x1, x20
000000000002be3c	bl	"_kfun:kotlin#<Byte-box>(kotlin.Byte){}kotlin.Any"
000000000002be40	str	x0, [sp, #0x28]
000000000002be44	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002be48	mov	x1, x0
000000000002be4c	mov	x0, x19
000000000002be50	blr	x23
000000000002be54	ldr	x8, [x0]
000000000002be58	ldr	x9, [sp, #0x8]
000000000002be5c	str	x9, [x8, #0x110]
000000000002be60	add	x8, x8, #0x138
000000000002be64	mov	w9, #0x1
000000000002be68	ldaxr	wzr, [x8]
000000000002be6c	stlxr	w10, w9, [x8]
000000000002be70	cbnz	w10, 0x2be68
000000000002be74	mov	x0, x1
000000000002be78	ldp	x29, x30, [sp, #0x60]
000000000002be7c	ldp	x20, x19, [sp, #0x50]
000000000002be80	ldp	x22, x21, [sp, #0x40]
000000000002be84	ldp	x24, x23, [sp, #0x30]
000000000002be88	add	sp, sp, #0x70
000000000002be8c	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002be90	str	xzr, [sp, #0x18]
000000000002be94	ldarb	w8, [x24]
000000000002be98	tbnz	w8, #0x0, 0x2be1c
000000000002be9c	b	0x2be20
000000000002bea0	mov	x1, x0
000000000002bea4	mov	x0, x19
000000000002bea8	blr	x23
000000000002beac	ldr	x8, [x0]
000000000002beb0	mov	x9, sp
000000000002beb4	str	x9, [x8, #0x110]
000000000002beb8	mov	x0, x1
000000000002bebc	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002bec0	ldr	x8, [x0, #0x8]
000000000002bec4	ldr	x20, [x8]
000000000002bec8	str	x20, [sp, #0x20]
000000000002becc	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002bed0	mov	x0, x20
000000000002bed4	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002bed8	brk	#0x1
000000000002bedc	mov	x1, x0
000000000002bee0	mov	x0, x19
000000000002bee4	blr	x23
000000000002bee8	ldr	x8, [x0]
000000000002beec	mov	x9, sp
000000000002bef0	str	x9, [x8, #0x110]
000000000002bef4	mov	x0, x1
000000000002bef8	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002befc	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002bf00	b	0x2bf00
_objc2kotlin_kfun:kotlin.collections.ByteIterator#nextByte(){}kotlin.Byte:
000000000002bf04	sub	sp, sp, #0x60
000000000002bf08	stp	x24, x23, [sp, #0x20]
000000000002bf0c	stp	x22, x21, [sp, #0x30]
000000000002bf10	stp	x20, x19, [sp, #0x40]
000000000002bf14	stp	x29, x30, [sp, #0x50]
000000000002bf18	add	x29, sp, #0x50
000000000002bf1c	mov	x19, x1
000000000002bf20	mov	x21, x0
000000000002bf24	stp	xzr, xzr, [sp, #0x8]
000000000002bf28	str	xzr, [sp, #0x18]
000000000002bf2c	bl	_Kotlin_initRuntimeIfNeeded
000000000002bf30	adrp	x20, 79 ; 0x7a000
000000000002bf34	add	x20, x20, #0x2c0
000000000002bf38	ldr	x22, [x20]
000000000002bf3c	mov	x0, x20
000000000002bf40	blr	x22
000000000002bf44	ldr	x8, [x0]
000000000002bf48	add	x0, x8, #0x138
000000000002bf4c	ldaxr	w8, [x0]
000000000002bf50	stlxr	w9, wzr, [x0]
000000000002bf54	cbnz	w9, 0x2bf4c
000000000002bf58	adr	x23, #0x68331
000000000002bf5c	nop
000000000002bf60	cmp	w8, #0x1
000000000002bf64	b.ne	0x2bf74
000000000002bf68	ldarb	w8, [x23]
000000000002bf6c	tbz	w8, #0x0, 0x2bf74
000000000002bf70	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002bf74	mov	x0, x20
000000000002bf78	blr	x22
000000000002bf7c	ldr	x8, [x0]
000000000002bf80	ldr	x9, [x8, #0x110]
000000000002bf84	add	x10, sp, #0x8
000000000002bf88	str	x10, [x8, #0x110]
000000000002bf8c	mov	x8, #0x300000000
000000000002bf90	stp	x9, x8, [sp, #0x10]
000000000002bf94	ldarb	w8, [x23]
000000000002bf98	tbz	w8, #0x0, 0x2bfa0
000000000002bf9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002bfa0	mov	x0, x21
000000000002bfa4	mov	x1, x19
000000000002bfa8	bl	_Kotlin_ObjCExport_AbstractMethodCalled
000000000002bfac	brk	#0x1
000000000002bfb0	mov	x1, x0
000000000002bfb4	mov	x0, x20
000000000002bfb8	blr	x22
000000000002bfbc	ldr	x8, [x0]
000000000002bfc0	add	x9, sp, #0x8
000000000002bfc4	str	x9, [x8, #0x110]
000000000002bfc8	mov	x0, x1
000000000002bfcc	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002bfd0	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002bfd4	b	0x2bfd4
_objc2kotlin_virtual_kfun:kotlin.collections.ByteIterator#nextByte(){}kotlin.Byte:
000000000002bfd8	sub	sp, sp, #0x70
000000000002bfdc	stp	x24, x23, [sp, #0x30]
000000000002bfe0	stp	x22, x21, [sp, #0x40]
000000000002bfe4	stp	x20, x19, [sp, #0x50]
000000000002bfe8	stp	x29, x30, [sp, #0x60]
000000000002bfec	add	x29, sp, #0x60
000000000002bff0	mov	x20, x0
000000000002bff4	str	xzr, [sp, #0x20]
000000000002bff8	movi.16b	v0, #0x0
000000000002bffc	stp	q0, q0, [sp]
000000000002c000	mov	x8, sp
000000000002c004	add	x21, x8, #0x18
000000000002c008	bl	_Kotlin_initRuntimeIfNeeded
000000000002c00c	adrp	x19, 78 ; 0x7a000
000000000002c010	add	x19, x19, #0x2c0
000000000002c014	ldr	x22, [x19]
000000000002c018	mov	x0, x19
000000000002c01c	blr	x22
000000000002c020	ldr	x8, [x0]
000000000002c024	add	x0, x8, #0x138
000000000002c028	ldaxr	w8, [x0]
000000000002c02c	stlxr	w9, wzr, [x0]
000000000002c030	cbnz	w9, 0x2c028
000000000002c034	adr	x23, #0x68255
000000000002c038	nop
000000000002c03c	cmp	w8, #0x1
000000000002c040	b.ne	0x2c050
000000000002c044	ldarb	w8, [x23]
000000000002c048	tbz	w8, #0x0, 0x2c050
000000000002c04c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c050	mov	x0, x19
000000000002c054	blr	x22
000000000002c058	ldr	x8, [x0]
000000000002c05c	ldr	x9, [x8, #0x110]
000000000002c060	mov	x10, sp
000000000002c064	str	x10, [x8, #0x110]
000000000002c068	mov	x8, #0x500000000
000000000002c06c	stp	x9, x8, [sp, #0x8]
000000000002c070	ldarb	w8, [x23]
000000000002c074	tbz	w8, #0x0, 0x2c07c
000000000002c078	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c07c	nop
000000000002c080	ldr	x1, #0x68458
000000000002c084	mov	x0, x20
000000000002c088	mov	x2, x21
000000000002c08c	bl	0x55584 ; Objc message: -[x0 raise:format:]
000000000002c090	ldr	x8, [x0]
000000000002c094	and	x8, x8, #0xfffffffffffffffc
000000000002c098	ldr	x8, [x8]
000000000002c09c	ldr	x8, [x8, #0x90]
000000000002c0a0	blr	x8
000000000002c0a4	mov	x1, x0
000000000002c0a8	mov	x0, x19
000000000002c0ac	blr	x22
000000000002c0b0	ldr	x8, [x0]
000000000002c0b4	ldr	x9, [sp, #0x8]
000000000002c0b8	str	x9, [x8, #0x110]
000000000002c0bc	add	x8, x8, #0x138
000000000002c0c0	mov	w9, #0x1
000000000002c0c4	ldaxr	wzr, [x8]
000000000002c0c8	stlxr	w10, w9, [x8]
000000000002c0cc	cbnz	w10, 0x2c0c4
000000000002c0d0	mov	x0, x1
000000000002c0d4	ldp	x29, x30, [sp, #0x60]
000000000002c0d8	ldp	x20, x19, [sp, #0x50]
000000000002c0dc	ldp	x22, x21, [sp, #0x40]
000000000002c0e0	ldp	x24, x23, [sp, #0x30]
000000000002c0e4	add	sp, sp, #0x70
000000000002c0e8	ret
000000000002c0ec	mov	x1, x0
000000000002c0f0	mov	x0, x19
000000000002c0f4	blr	x22
000000000002c0f8	ldr	x8, [x0]
000000000002c0fc	mov	x9, sp
000000000002c100	str	x9, [x8, #0x110]
000000000002c104	mov	x0, x1
000000000002c108	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002c10c	ldr	x8, [x0, #0x8]
000000000002c110	ldr	x20, [x8]
000000000002c114	str	x20, [sp, #0x20]
000000000002c118	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002c11c	mov	x0, x20
000000000002c120	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002c124	brk	#0x1
000000000002c128	mov	x1, x0
000000000002c12c	mov	x0, x19
000000000002c130	blr	x22
000000000002c134	ldr	x8, [x0]
000000000002c138	mov	x9, sp
000000000002c13c	str	x9, [x8, #0x110]
000000000002c140	mov	x0, x1
000000000002c144	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002c148	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002c14c	b	0x2c14c
_objc2kotlin_Kotlin_Any_equals:
000000000002c150	sub	sp, sp, #0x80
000000000002c154	stp	x26, x25, [sp, #0x30]
000000000002c158	stp	x24, x23, [sp, #0x40]
000000000002c15c	stp	x22, x21, [sp, #0x50]
000000000002c160	stp	x20, x19, [sp, #0x60]
000000000002c164	stp	x29, x30, [sp, #0x70]
000000000002c168	add	x29, sp, #0x70
000000000002c16c	mov	x20, x2
000000000002c170	mov	x22, x0
000000000002c174	movi.16b	v0, #0x0
000000000002c178	stp	q0, q0, [sp, #0x10]
000000000002c17c	str	q0, [sp]
000000000002c180	mov	x8, sp
000000000002c184	add	x21, x8, #0x20
000000000002c188	add	x23, x8, #0x18
000000000002c18c	bl	_Kotlin_initRuntimeIfNeeded
000000000002c190	adrp	x19, 78 ; 0x7a000
000000000002c194	add	x19, x19, #0x2c0
000000000002c198	ldr	x24, [x19]
000000000002c19c	mov	x0, x19
000000000002c1a0	blr	x24
000000000002c1a4	ldr	x8, [x0]
000000000002c1a8	add	x0, x8, #0x138
000000000002c1ac	ldaxr	w8, [x0]
000000000002c1b0	stlxr	w9, wzr, [x0]
000000000002c1b4	cbnz	w9, 0x2c1ac
000000000002c1b8	adr	x25, #0x680d1
000000000002c1bc	nop
000000000002c1c0	cmp	w8, #0x1
000000000002c1c4	b.ne	0x2c1d4
000000000002c1c8	ldarb	w8, [x25]
000000000002c1cc	tbz	w8, #0x0, 0x2c1d4
000000000002c1d0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c1d4	mov	x0, x19
000000000002c1d8	blr	x24
000000000002c1dc	ldr	x8, [x0]
000000000002c1e0	ldr	x9, [x8, #0x110]
000000000002c1e4	mov	x10, sp
000000000002c1e8	str	x10, [x8, #0x110]
000000000002c1ec	mov	x8, #0x600000000
000000000002c1f0	stp	x9, x8, [sp, #0x8]
000000000002c1f4	ldarb	w8, [x25]
000000000002c1f8	tbz	w8, #0x0, 0x2c200
000000000002c1fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c200	adrp	x25, 104 ; 0x94000
000000000002c204	cbz	x22, 0x2c234
000000000002c208	ldr	x1, [x25, #0x4d8]
000000000002c20c	mov	x0, x22
000000000002c210	mov	x2, x23
000000000002c214	bl	0x55584 ; Objc message: -[x0 raise:format:]
000000000002c218	mov	x22, x0
000000000002c21c	cbz	x20, 0x2c23c
000000000002c220	ldr	x1, [x25, #0x4d8]
000000000002c224	mov	x0, x20
000000000002c228	mov	x2, x21
000000000002c22c	bl	0x55584 ; Objc message: -[x0 raise:format:]
000000000002c230	b	0x2c244
000000000002c234	str	xzr, [sp, #0x18]
000000000002c238	cbnz	x20, 0x2c220
000000000002c23c	mov	x0, #0x0
000000000002c240	str	xzr, [sp, #0x20]
000000000002c244	cmp	x22, x0
000000000002c248	cset	w8, eq
000000000002c24c	mov	x0, x19
000000000002c250	blr	x24
000000000002c254	ldr	x9, [x0]
000000000002c258	ldr	x10, [sp, #0x8]
000000000002c25c	str	x10, [x9, #0x110]
000000000002c260	add	x9, x9, #0x138
000000000002c264	mov	w10, #0x1
000000000002c268	ldaxr	wzr, [x9]
000000000002c26c	stlxr	w11, w10, [x9]
000000000002c270	cbnz	w11, 0x2c268
000000000002c274	mov	x0, x8
000000000002c278	ldp	x29, x30, [sp, #0x70]
000000000002c27c	ldp	x20, x19, [sp, #0x60]
000000000002c280	ldp	x22, x21, [sp, #0x50]
000000000002c284	ldp	x24, x23, [sp, #0x40]
000000000002c288	ldp	x26, x25, [sp, #0x30]
000000000002c28c	add	sp, sp, #0x80
000000000002c290	ret
000000000002c294	mov	x1, x0
000000000002c298	mov	x0, x19
000000000002c29c	blr	x24
000000000002c2a0	ldr	x8, [x0]
000000000002c2a4	mov	x9, sp
000000000002c2a8	str	x9, [x8, #0x110]
000000000002c2ac	mov	x0, x1
000000000002c2b0	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002c2b4	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002c2b8	b	0x2c2b8
_objc2kotlin_kfun:kotlin.Any#hashCode(){}kotlin.Int:
000000000002c2bc	sub	sp, sp, #0x70
000000000002c2c0	stp	x24, x23, [sp, #0x30]
000000000002c2c4	stp	x22, x21, [sp, #0x40]
000000000002c2c8	stp	x20, x19, [sp, #0x50]
000000000002c2cc	stp	x29, x30, [sp, #0x60]
000000000002c2d0	add	x29, sp, #0x60
000000000002c2d4	mov	x20, x0
000000000002c2d8	str	xzr, [sp, #0x20]
000000000002c2dc	movi.16b	v0, #0x0
000000000002c2e0	stp	q0, q0, [sp]
000000000002c2e4	mov	x8, sp
000000000002c2e8	add	x21, x8, #0x18
000000000002c2ec	bl	_Kotlin_initRuntimeIfNeeded
000000000002c2f0	adrp	x19, 78 ; 0x7a000
000000000002c2f4	add	x19, x19, #0x2c0
000000000002c2f8	ldr	x22, [x19]
000000000002c2fc	mov	x0, x19
000000000002c300	blr	x22
000000000002c304	ldr	x8, [x0]
000000000002c308	add	x0, x8, #0x138
000000000002c30c	ldaxr	w8, [x0]
000000000002c310	stlxr	w9, wzr, [x0]
000000000002c314	cbnz	w9, 0x2c30c
000000000002c318	adr	x23, #0x67f71
000000000002c31c	nop
000000000002c320	cmp	w8, #0x1
000000000002c324	b.ne	0x2c334
000000000002c328	ldarb	w8, [x23]
000000000002c32c	tbz	w8, #0x0, 0x2c334
000000000002c330	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c334	mov	x0, x19
000000000002c338	blr	x22
000000000002c33c	ldr	x8, [x0]
000000000002c340	ldr	x9, [x8, #0x110]
000000000002c344	mov	x10, sp
000000000002c348	str	x10, [x8, #0x110]
000000000002c34c	mov	x8, #0x500000000
000000000002c350	stp	x9, x8, [sp, #0x8]
000000000002c354	ldarb	w8, [x23]
000000000002c358	tbz	w8, #0x0, 0x2c360
000000000002c35c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c360	cbz	x20, 0x2c3cc
000000000002c364	nop
000000000002c368	ldr	x1, #0x68170
000000000002c36c	mov	x0, x20
000000000002c370	mov	x2, x21
000000000002c374	bl	0x55584 ; Objc message: -[x0 raise:format:]
000000000002c378	and	x20, x0, #0xffffffff
000000000002c37c	ldarb	w8, [x23]
000000000002c380	tbz	w8, #0x0, 0x2c388
000000000002c384	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c388	mov	x0, x19
000000000002c38c	blr	x22
000000000002c390	ldr	x8, [x0]
000000000002c394	ldr	x9, [sp, #0x8]
000000000002c398	str	x9, [x8, #0x110]
000000000002c39c	add	x8, x8, #0x138
000000000002c3a0	mov	w9, #0x1
000000000002c3a4	ldaxr	wzr, [x8]
000000000002c3a8	stlxr	w10, w9, [x8]
000000000002c3ac	cbnz	w10, 0x2c3a4
000000000002c3b0	mov	x0, x20
000000000002c3b4	ldp	x29, x30, [sp, #0x60]
000000000002c3b8	ldp	x20, x19, [sp, #0x50]
000000000002c3bc	ldp	x22, x21, [sp, #0x40]
000000000002c3c0	ldp	x24, x23, [sp, #0x30]
000000000002c3c4	add	sp, sp, #0x70
000000000002c3c8	ret
000000000002c3cc	str	xzr, [sp, #0x18]
000000000002c3d0	ldarb	w8, [x23]
000000000002c3d4	tbnz	w8, #0x0, 0x2c384
000000000002c3d8	b	0x2c388
000000000002c3dc	mov	x1, x0
000000000002c3e0	mov	x0, x19
000000000002c3e4	blr	x22
000000000002c3e8	ldr	x8, [x0]
000000000002c3ec	mov	x9, sp
000000000002c3f0	str	x9, [x8, #0x110]
000000000002c3f4	mov	x0, x1
000000000002c3f8	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002c3fc	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002c400	b	0x2c400
_objc2kotlin_kfun:kotlin.Any#toString(){}kotlin.String:
000000000002c404	sub	sp, sp, #0x70
000000000002c408	stp	x24, x23, [sp, #0x30]
000000000002c40c	stp	x22, x21, [sp, #0x40]
000000000002c410	stp	x20, x19, [sp, #0x50]
000000000002c414	stp	x29, x30, [sp, #0x60]
000000000002c418	add	x29, sp, #0x60
000000000002c41c	mov	x21, x0
000000000002c420	movi.16b	v0, #0x0
000000000002c424	stp	q0, q0, [sp, #0x10]
000000000002c428	str	q0, [sp]
000000000002c42c	mov	x8, sp
000000000002c430	add	x22, x8, #0x18
000000000002c434	add	x20, x8, #0x28
000000000002c438	bl	_Kotlin_initRuntimeIfNeeded
000000000002c43c	adrp	x19, 78 ; 0x7a000
000000000002c440	add	x19, x19, #0x2c0
000000000002c444	ldr	x23, [x19]
000000000002c448	mov	x0, x19
000000000002c44c	blr	x23
000000000002c450	ldr	x8, [x0]
000000000002c454	add	x0, x8, #0x138
000000000002c458	ldaxr	w8, [x0]
000000000002c45c	stlxr	w9, wzr, [x0]
000000000002c460	cbnz	w9, 0x2c458
000000000002c464	adr	x24, #0x67e25
000000000002c468	nop
000000000002c46c	cmp	w8, #0x1
000000000002c470	b.ne	0x2c480
000000000002c474	ldarb	w8, [x24]
000000000002c478	tbz	w8, #0x0, 0x2c480
000000000002c47c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c480	mov	x0, x19
000000000002c484	blr	x23
000000000002c488	ldr	x8, [x0]
000000000002c48c	ldr	x9, [x8, #0x110]
000000000002c490	mov	x10, sp
000000000002c494	str	x10, [x8, #0x110]
000000000002c498	mov	x8, #0x600000000
000000000002c49c	stp	x9, x8, [sp, #0x8]
000000000002c4a0	ldarb	w8, [x24]
000000000002c4a4	tbz	w8, #0x0, 0x2c4ac
000000000002c4a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c4ac	cbz	x21, 0x2c4c8
000000000002c4b0	nop
000000000002c4b4	ldr	x1, #0x68024
000000000002c4b8	mov	x0, x21
000000000002c4bc	mov	x2, x22
000000000002c4c0	bl	0x55584 ; Objc message: -[x0 raise:format:]
000000000002c4c4	b	0x2c4d0
000000000002c4c8	mov	x0, #0x0
000000000002c4cc	str	xzr, [sp, #0x18]
000000000002c4d0	mov	x1, x20
000000000002c4d4	bl	"_kfun:kotlin.Any#toString(){}kotlin.String"
000000000002c4d8	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002c4dc	mov	x1, x0
000000000002c4e0	mov	x0, x19
000000000002c4e4	blr	x23
000000000002c4e8	ldr	x8, [x0]
000000000002c4ec	ldr	x9, [sp, #0x8]
000000000002c4f0	str	x9, [x8, #0x110]
000000000002c4f4	add	x8, x8, #0x138
000000000002c4f8	mov	w9, #0x1
000000000002c4fc	ldaxr	wzr, [x8]
000000000002c500	stlxr	w10, w9, [x8]
000000000002c504	cbnz	w10, 0x2c4fc
000000000002c508	mov	x0, x1
000000000002c50c	ldp	x29, x30, [sp, #0x60]
000000000002c510	ldp	x20, x19, [sp, #0x50]
000000000002c514	ldp	x22, x21, [sp, #0x40]
000000000002c518	ldp	x24, x23, [sp, #0x30]
000000000002c51c	add	sp, sp, #0x70
000000000002c520	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002c524	mov	x1, x0
000000000002c528	mov	x0, x19
000000000002c52c	blr	x23
000000000002c530	ldr	x8, [x0]
000000000002c534	mov	x9, sp
000000000002c538	str	x9, [x8, #0x110]
000000000002c53c	mov	x0, x1
000000000002c540	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002c544	ldr	x8, [x0, #0x8]
000000000002c548	ldr	x20, [x8]
000000000002c54c	str	x20, [sp, #0x20]
000000000002c550	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002c554	mov	x0, x20
000000000002c558	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002c55c	brk	#0x1
000000000002c560	mov	x1, x0
000000000002c564	mov	x0, x19
000000000002c568	blr	x23
000000000002c56c	ldr	x8, [x0]
000000000002c570	mov	x9, sp
000000000002c574	str	x9, [x8, #0x110]
000000000002c578	mov	x0, x1
000000000002c57c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002c580	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002c584	b	0x2c584
_objc2kotlin_virtual_Kotlin_Any_equals:
000000000002c588	sub	sp, sp, #0x80
000000000002c58c	stp	x26, x25, [sp, #0x30]
000000000002c590	stp	x24, x23, [sp, #0x40]
000000000002c594	stp	x22, x21, [sp, #0x50]
000000000002c598	stp	x20, x19, [sp, #0x60]
000000000002c59c	stp	x29, x30, [sp, #0x70]
000000000002c5a0	add	x29, sp, #0x70
000000000002c5a4	mov	x20, x2
000000000002c5a8	mov	x22, x0
000000000002c5ac	movi.16b	v0, #0x0
000000000002c5b0	stp	q0, q0, [sp, #0x10]
000000000002c5b4	str	q0, [sp]
000000000002c5b8	mov	x8, sp
000000000002c5bc	add	x21, x8, #0x20
000000000002c5c0	add	x23, x8, #0x18
000000000002c5c4	bl	_Kotlin_initRuntimeIfNeeded
000000000002c5c8	adrp	x19, 78 ; 0x7a000
000000000002c5cc	add	x19, x19, #0x2c0
000000000002c5d0	ldr	x24, [x19]
000000000002c5d4	mov	x0, x19
000000000002c5d8	blr	x24
000000000002c5dc	ldr	x8, [x0]
000000000002c5e0	add	x0, x8, #0x138
000000000002c5e4	ldaxr	w8, [x0]
000000000002c5e8	stlxr	w9, wzr, [x0]
000000000002c5ec	cbnz	w9, 0x2c5e4
000000000002c5f0	adr	x25, #0x67c99
000000000002c5f4	nop
000000000002c5f8	cmp	w8, #0x1
000000000002c5fc	b.ne	0x2c60c
000000000002c600	ldarb	w8, [x25]
000000000002c604	tbz	w8, #0x0, 0x2c60c
000000000002c608	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c60c	mov	x0, x19
000000000002c610	blr	x24
000000000002c614	ldr	x8, [x0]
000000000002c618	ldr	x9, [x8, #0x110]
000000000002c61c	mov	x10, sp
000000000002c620	str	x10, [x8, #0x110]
000000000002c624	mov	x8, #0x600000000
000000000002c628	stp	x9, x8, [sp, #0x8]
000000000002c62c	ldarb	w8, [x25]
000000000002c630	tbz	w8, #0x0, 0x2c638
000000000002c634	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c638	adrp	x25, 104 ; 0x94000
000000000002c63c	cbz	x22, 0x2c670
000000000002c640	ldr	x1, [x25, #0x4d8]
000000000002c644	mov	x0, x22
000000000002c648	mov	x2, x23
000000000002c64c	bl	0x55584 ; Objc message: -[x0 raise:format:]
000000000002c650	mov	x22, x0
000000000002c654	cbz	x20, 0x2c678
000000000002c658	ldr	x1, [x25, #0x4d8]
000000000002c65c	mov	x0, x20
000000000002c660	mov	x2, x21
000000000002c664	bl	0x55584 ; Objc message: -[x0 raise:format:]
000000000002c668	mov	x1, x0
000000000002c66c	b	0x2c680
000000000002c670	str	xzr, [sp, #0x18]
000000000002c674	cbnz	x20, 0x2c658
000000000002c678	mov	x1, #0x0
000000000002c67c	str	xzr, [sp, #0x20]
000000000002c680	ldr	x8, [x22]
000000000002c684	and	x8, x8, #0xfffffffffffffffc
000000000002c688	ldr	x8, [x8]
000000000002c68c	ldr	x8, [x8, #0x70]
000000000002c690	mov	x0, x22
000000000002c694	blr	x8
000000000002c698	mov	x1, x0
000000000002c69c	mov	x0, x19
000000000002c6a0	blr	x24
000000000002c6a4	ldr	x8, [x0]
000000000002c6a8	ldr	x9, [sp, #0x8]
000000000002c6ac	str	x9, [x8, #0x110]
000000000002c6b0	add	x8, x8, #0x138
000000000002c6b4	mov	w9, #0x1
000000000002c6b8	ldaxr	wzr, [x8]
000000000002c6bc	stlxr	w10, w9, [x8]
000000000002c6c0	cbnz	w10, 0x2c6b8
000000000002c6c4	mov	x0, x1
000000000002c6c8	ldp	x29, x30, [sp, #0x70]
000000000002c6cc	ldp	x20, x19, [sp, #0x60]
000000000002c6d0	ldp	x22, x21, [sp, #0x50]
000000000002c6d4	ldp	x24, x23, [sp, #0x40]
000000000002c6d8	ldp	x26, x25, [sp, #0x30]
000000000002c6dc	add	sp, sp, #0x80
000000000002c6e0	ret
000000000002c6e4	mov	x1, x0
000000000002c6e8	mov	x0, x19
000000000002c6ec	blr	x24
000000000002c6f0	ldr	x8, [x0]
000000000002c6f4	mov	x9, sp
000000000002c6f8	str	x9, [x8, #0x110]
000000000002c6fc	mov	x0, x1
000000000002c700	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002c704	ldr	x8, [x0, #0x8]
000000000002c708	ldr	x20, [x8]
000000000002c70c	str	x20, [sp, #0x28]
000000000002c710	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002c714	mov	x0, x20
000000000002c718	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002c71c	brk	#0x1
000000000002c720	mov	x1, x0
000000000002c724	mov	x0, x19
000000000002c728	blr	x24
000000000002c72c	ldr	x8, [x0]
000000000002c730	mov	x9, sp
000000000002c734	str	x9, [x8, #0x110]
000000000002c738	mov	x0, x1
000000000002c73c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002c740	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002c744	b	0x2c744
_objc2kotlin_virtual_kfun:kotlin.Any#hashCode(){}kotlin.Int:
000000000002c748	sub	sp, sp, #0x70
000000000002c74c	stp	x24, x23, [sp, #0x30]
000000000002c750	stp	x22, x21, [sp, #0x40]
000000000002c754	stp	x20, x19, [sp, #0x50]
000000000002c758	stp	x29, x30, [sp, #0x60]
000000000002c75c	add	x29, sp, #0x60
000000000002c760	mov	x20, x0
000000000002c764	str	xzr, [sp, #0x20]
000000000002c768	movi.16b	v0, #0x0
000000000002c76c	stp	q0, q0, [sp]
000000000002c770	mov	x8, sp
000000000002c774	add	x21, x8, #0x18
000000000002c778	bl	_Kotlin_initRuntimeIfNeeded
000000000002c77c	adrp	x19, 78 ; 0x7a000
000000000002c780	add	x19, x19, #0x2c0
000000000002c784	ldr	x22, [x19]
000000000002c788	mov	x0, x19
000000000002c78c	blr	x22
000000000002c790	ldr	x8, [x0]
000000000002c794	add	x0, x8, #0x138
000000000002c798	ldaxr	w8, [x0]
000000000002c79c	stlxr	w9, wzr, [x0]
000000000002c7a0	cbnz	w9, 0x2c798
000000000002c7a4	adr	x23, #0x67ae5
000000000002c7a8	nop
000000000002c7ac	cmp	w8, #0x1
000000000002c7b0	b.ne	0x2c7c0
000000000002c7b4	ldarb	w8, [x23]
000000000002c7b8	tbz	w8, #0x0, 0x2c7c0
000000000002c7bc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c7c0	mov	x0, x19
000000000002c7c4	blr	x22
000000000002c7c8	ldr	x8, [x0]
000000000002c7cc	ldr	x9, [x8, #0x110]
000000000002c7d0	mov	x10, sp
000000000002c7d4	str	x10, [x8, #0x110]
000000000002c7d8	mov	x8, #0x500000000
000000000002c7dc	stp	x9, x8, [sp, #0x8]
000000000002c7e0	ldarb	w8, [x23]
000000000002c7e4	tbz	w8, #0x0, 0x2c7ec
000000000002c7e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c7ec	nop
000000000002c7f0	ldr	x1, #0x67ce8
000000000002c7f4	mov	x0, x20
000000000002c7f8	mov	x2, x21
000000000002c7fc	bl	0x55584 ; Objc message: -[x0 raise:format:]
000000000002c800	ldr	x8, [x0]
000000000002c804	and	x8, x8, #0xfffffffffffffffc
000000000002c808	ldr	x8, [x8]
000000000002c80c	ldr	x8, [x8, #0x78]
000000000002c810	blr	x8
000000000002c814	mov	w8, w0
000000000002c818	mov	x0, x19
000000000002c81c	blr	x22
000000000002c820	ldr	x9, [x0]
000000000002c824	ldr	x10, [sp, #0x8]
000000000002c828	str	x10, [x9, #0x110]
000000000002c82c	add	x9, x9, #0x138
000000000002c830	mov	w10, #0x1
000000000002c834	ldaxr	wzr, [x9]
000000000002c838	stlxr	w11, w10, [x9]
000000000002c83c	cbnz	w11, 0x2c834
000000000002c840	mov	x0, x8
000000000002c844	ldp	x29, x30, [sp, #0x60]
000000000002c848	ldp	x20, x19, [sp, #0x50]
000000000002c84c	ldp	x22, x21, [sp, #0x40]
000000000002c850	ldp	x24, x23, [sp, #0x30]
000000000002c854	add	sp, sp, #0x70
000000000002c858	ret
000000000002c85c	mov	x1, x0
000000000002c860	mov	x0, x19
000000000002c864	blr	x22
000000000002c868	ldr	x8, [x0]
000000000002c86c	mov	x9, sp
000000000002c870	str	x9, [x8, #0x110]
000000000002c874	mov	x0, x1
000000000002c878	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002c87c	ldr	x8, [x0, #0x8]
000000000002c880	ldr	x20, [x8]
000000000002c884	str	x20, [sp, #0x20]
000000000002c888	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002c88c	mov	x0, x20
000000000002c890	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002c894	brk	#0x1
000000000002c898	mov	x1, x0
000000000002c89c	mov	x0, x19
000000000002c8a0	blr	x22
000000000002c8a4	ldr	x8, [x0]
000000000002c8a8	mov	x9, sp
000000000002c8ac	str	x9, [x8, #0x110]
000000000002c8b0	mov	x0, x1
000000000002c8b4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002c8b8	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002c8bc	b	0x2c8bc
_objc2kotlin_virtual_kfun:kotlin.Any#toString(){}kotlin.String:
000000000002c8c0	sub	sp, sp, #0x70
000000000002c8c4	stp	x24, x23, [sp, #0x30]
000000000002c8c8	stp	x22, x21, [sp, #0x40]
000000000002c8cc	stp	x20, x19, [sp, #0x50]
000000000002c8d0	stp	x29, x30, [sp, #0x60]
000000000002c8d4	add	x29, sp, #0x60
000000000002c8d8	mov	x21, x0
000000000002c8dc	movi.16b	v0, #0x0
000000000002c8e0	stp	q0, q0, [sp, #0x10]
000000000002c8e4	str	q0, [sp]
000000000002c8e8	mov	x8, sp
000000000002c8ec	add	x22, x8, #0x18
000000000002c8f0	add	x20, x8, #0x28
000000000002c8f4	bl	_Kotlin_initRuntimeIfNeeded
000000000002c8f8	adrp	x19, 78 ; 0x7a000
000000000002c8fc	add	x19, x19, #0x2c0
000000000002c900	ldr	x23, [x19]
000000000002c904	mov	x0, x19
000000000002c908	blr	x23
000000000002c90c	ldr	x8, [x0]
000000000002c910	add	x0, x8, #0x138
000000000002c914	ldaxr	w8, [x0]
000000000002c918	stlxr	w9, wzr, [x0]
000000000002c91c	cbnz	w9, 0x2c914
000000000002c920	adr	x24, #0x67969
000000000002c924	nop
000000000002c928	cmp	w8, #0x1
000000000002c92c	b.ne	0x2c93c
000000000002c930	ldarb	w8, [x24]
000000000002c934	tbz	w8, #0x0, 0x2c93c
000000000002c938	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c93c	mov	x0, x19
000000000002c940	blr	x23
000000000002c944	ldr	x8, [x0]
000000000002c948	ldr	x9, [x8, #0x110]
000000000002c94c	mov	x10, sp
000000000002c950	str	x10, [x8, #0x110]
000000000002c954	mov	x8, #0x600000000
000000000002c958	stp	x9, x8, [sp, #0x8]
000000000002c95c	ldarb	w8, [x24]
000000000002c960	tbz	w8, #0x0, 0x2c968
000000000002c964	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c968	nop
000000000002c96c	ldr	x1, #0x67b6c
000000000002c970	mov	x0, x21
000000000002c974	mov	x2, x22
000000000002c978	bl	0x55584 ; Objc message: -[x0 raise:format:]
000000000002c97c	ldr	x8, [x0]
000000000002c980	and	x8, x8, #0xfffffffffffffffc
000000000002c984	ldr	x8, [x8]
000000000002c988	ldr	x8, [x8, #0x80]
000000000002c98c	mov	x1, x20
000000000002c990	blr	x8
000000000002c994	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002c998	mov	x1, x0
000000000002c99c	mov	x0, x19
000000000002c9a0	blr	x23
000000000002c9a4	ldr	x8, [x0]
000000000002c9a8	ldr	x9, [sp, #0x8]
000000000002c9ac	str	x9, [x8, #0x110]
000000000002c9b0	add	x8, x8, #0x138
000000000002c9b4	mov	w9, #0x1
000000000002c9b8	ldaxr	wzr, [x8]
000000000002c9bc	stlxr	w10, w9, [x8]
000000000002c9c0	cbnz	w10, 0x2c9b8
000000000002c9c4	mov	x0, x1
000000000002c9c8	ldp	x29, x30, [sp, #0x60]
000000000002c9cc	ldp	x20, x19, [sp, #0x50]
000000000002c9d0	ldp	x22, x21, [sp, #0x40]
000000000002c9d4	ldp	x24, x23, [sp, #0x30]
000000000002c9d8	add	sp, sp, #0x70
000000000002c9dc	b	0x55530 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002c9e0	mov	x1, x0
000000000002c9e4	mov	x0, x19
000000000002c9e8	blr	x23
000000000002c9ec	ldr	x8, [x0]
000000000002c9f0	mov	x9, sp
000000000002c9f4	str	x9, [x8, #0x110]
000000000002c9f8	mov	x0, x1
000000000002c9fc	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002ca00	ldr	x8, [x0, #0x8]
000000000002ca04	ldr	x20, [x8]
000000000002ca08	str	x20, [sp, #0x20]
000000000002ca0c	bl	0x55338 ; symbol stub for: ___cxa_end_catch
000000000002ca10	mov	x0, x20
000000000002ca14	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002ca18	brk	#0x1
000000000002ca1c	mov	x1, x0
000000000002ca20	mov	x0, x19
000000000002ca24	blr	x23
000000000002ca28	ldr	x8, [x0]
000000000002ca2c	mov	x9, sp
000000000002ca30	str	x9, [x8, #0x110]
000000000002ca34	mov	x0, x1
000000000002ca38	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002ca3c	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002ca40	b	0x2ca40
000000000002ca44	sub	sp, sp, #0x50
000000000002ca48	stp	x22, x21, [sp, #0x20]
000000000002ca4c	stp	x20, x19, [sp, #0x30]
000000000002ca50	stp	x29, x30, [sp, #0x40]
000000000002ca54	add	x29, sp, #0x40
000000000002ca58	mov	x20, x0
000000000002ca5c	str	xzr, [sp, #0x8]
000000000002ca60	adrp	x19, 78 ; 0x7a000
000000000002ca64	add	x19, x19, #0x2c0
000000000002ca68	ldr	x21, [x19]
000000000002ca6c	mov	x0, x19
000000000002ca70	blr	x21
000000000002ca74	ldr	x8, [x0]
000000000002ca78	ldr	x9, [x8, #0x110]
000000000002ca7c	add	x10, sp, #0x8
000000000002ca80	str	x10, [x8, #0x110]
000000000002ca84	mov	x8, #0x300000000
000000000002ca88	stp	x9, x8, [sp, #0x10]
000000000002ca8c	adr	x8, #0x677fd
000000000002ca90	nop
000000000002ca94	ldarb	w8, [x8]
000000000002ca98	tbz	w8, #0x0, 0x2caa0
000000000002ca9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002caa0	ldrb	w20, [x20, #0x8]
000000000002caa4	nop
000000000002caa8	ldr	x0, #0x4a170 ; Objc class ref: FastaKmmBoolean
000000000002caac	bl	0x55500 ; symbol stub for: _objc_alloc
000000000002cab0	nop
000000000002cab4	ldr	x1, #0x49e34 ; Objc selector ref: initWithBool:
000000000002cab8	mov	x2, x20
000000000002cabc	bl	0x55584 ; Objc message: +[FastaKmmBoolean initWithBool:]
000000000002cac0	mov	x1, x0
000000000002cac4	mov	x0, x19
000000000002cac8	blr	x21
000000000002cacc	ldr	x8, [x0]
000000000002cad0	ldr	x9, [sp, #0x10]
000000000002cad4	str	x9, [x8, #0x110]
000000000002cad8	mov	x0, x1
000000000002cadc	ldp	x29, x30, [sp, #0x40]
000000000002cae0	ldp	x20, x19, [sp, #0x30]
000000000002cae4	ldp	x22, x21, [sp, #0x20]
000000000002cae8	add	sp, sp, #0x50
000000000002caec	ret
000000000002caf0	mov	x1, x0
000000000002caf4	mov	x0, x19
000000000002caf8	blr	x21
000000000002cafc	ldr	x8, [x0]
000000000002cb00	add	x9, sp, #0x8
000000000002cb04	str	x9, [x8, #0x110]
000000000002cb08	mov	x0, x1
000000000002cb0c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002cb10	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002cb14	b	0x2cb14
000000000002cb18	sub	sp, sp, #0x50
000000000002cb1c	stp	x22, x21, [sp, #0x20]
000000000002cb20	stp	x20, x19, [sp, #0x30]
000000000002cb24	stp	x29, x30, [sp, #0x40]
000000000002cb28	add	x29, sp, #0x40
000000000002cb2c	mov	x20, x0
000000000002cb30	str	xzr, [sp, #0x8]
000000000002cb34	adrp	x19, 78 ; 0x7a000
000000000002cb38	add	x19, x19, #0x2c0
000000000002cb3c	ldr	x21, [x19]
000000000002cb40	mov	x0, x19
000000000002cb44	blr	x21
000000000002cb48	ldr	x8, [x0]
000000000002cb4c	ldr	x9, [x8, #0x110]
000000000002cb50	add	x10, sp, #0x8
000000000002cb54	str	x10, [x8, #0x110]
000000000002cb58	mov	x8, #0x300000000
000000000002cb5c	stp	x9, x8, [sp, #0x10]
000000000002cb60	adr	x8, #0x67729
000000000002cb64	nop
000000000002cb68	ldarb	w8, [x8]
000000000002cb6c	tbz	w8, #0x0, 0x2cb74
000000000002cb70	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002cb74	ldrb	w20, [x20, #0x8]
000000000002cb78	nop
000000000002cb7c	ldr	x0, #0x4a0a4 ; Objc class ref: FastaKmmByte
000000000002cb80	bl	0x55500 ; symbol stub for: _objc_alloc
000000000002cb84	nop
000000000002cb88	ldr	x1, #0x49d90 ; Objc selector ref: initWithChar:
000000000002cb8c	sxtb	w2, w20
000000000002cb90	bl	0x55584 ; Objc message: +[FastaKmmByte initWithChar:]
000000000002cb94	mov	x1, x0
000000000002cb98	mov	x0, x19
000000000002cb9c	blr	x21
000000000002cba0	ldr	x8, [x0]
000000000002cba4	ldr	x9, [sp, #0x10]
000000000002cba8	str	x9, [x8, #0x110]
000000000002cbac	mov	x0, x1
000000000002cbb0	ldp	x29, x30, [sp, #0x40]
000000000002cbb4	ldp	x20, x19, [sp, #0x30]
000000000002cbb8	ldp	x22, x21, [sp, #0x20]
000000000002cbbc	add	sp, sp, #0x50
000000000002cbc0	ret
000000000002cbc4	mov	x1, x0
000000000002cbc8	mov	x0, x19
000000000002cbcc	blr	x21
000000000002cbd0	ldr	x8, [x0]
000000000002cbd4	add	x9, sp, #0x8
000000000002cbd8	str	x9, [x8, #0x110]
000000000002cbdc	mov	x0, x1
000000000002cbe0	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002cbe4	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002cbe8	b	0x2cbe8
000000000002cbec	sub	sp, sp, #0x50
000000000002cbf0	stp	x22, x21, [sp, #0x20]
000000000002cbf4	stp	x20, x19, [sp, #0x30]
000000000002cbf8	stp	x29, x30, [sp, #0x40]
000000000002cbfc	add	x29, sp, #0x40
000000000002cc00	mov	x20, x0
000000000002cc04	str	xzr, [sp, #0x8]
000000000002cc08	adrp	x19, 78 ; 0x7a000
000000000002cc0c	add	x19, x19, #0x2c0
000000000002cc10	ldr	x21, [x19]
000000000002cc14	mov	x0, x19
000000000002cc18	blr	x21
000000000002cc1c	ldr	x8, [x0]
000000000002cc20	ldr	x9, [x8, #0x110]
000000000002cc24	add	x10, sp, #0x8
000000000002cc28	str	x10, [x8, #0x110]
000000000002cc2c	mov	x8, #0x300000000
000000000002cc30	stp	x9, x8, [sp, #0x10]
000000000002cc34	adr	x8, #0x67655
000000000002cc38	nop
000000000002cc3c	ldarb	w8, [x8]
000000000002cc40	tbz	w8, #0x0, 0x2cc48
000000000002cc44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002cc48	ldrh	w20, [x20, #0x8]
000000000002cc4c	nop
000000000002cc50	ldr	x0, #0x49fd8 ; Objc class ref: FastaKmmShort
000000000002cc54	bl	0x55500 ; symbol stub for: _objc_alloc
000000000002cc58	nop
000000000002cc5c	ldr	x1, #0x49cfc ; Objc selector ref: initWithShort:
000000000002cc60	sxth	w2, w20
000000000002cc64	bl	0x55584 ; Objc message: +[FastaKmmShort initWithShort:]
000000000002cc68	mov	x1, x0
000000000002cc6c	mov	x0, x19
000000000002cc70	blr	x21
000000000002cc74	ldr	x8, [x0]
000000000002cc78	ldr	x9, [sp, #0x10]
000000000002cc7c	str	x9, [x8, #0x110]
000000000002cc80	mov	x0, x1
000000000002cc84	ldp	x29, x30, [sp, #0x40]
000000000002cc88	ldp	x20, x19, [sp, #0x30]
000000000002cc8c	ldp	x22, x21, [sp, #0x20]
000000000002cc90	add	sp, sp, #0x50
000000000002cc94	ret
000000000002cc98	mov	x1, x0
000000000002cc9c	mov	x0, x19
000000000002cca0	blr	x21
000000000002cca4	ldr	x8, [x0]
000000000002cca8	add	x9, sp, #0x8
000000000002ccac	str	x9, [x8, #0x110]
000000000002ccb0	mov	x0, x1
000000000002ccb4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002ccb8	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002ccbc	b	0x2ccbc
000000000002ccc0	sub	sp, sp, #0x50
000000000002ccc4	stp	x22, x21, [sp, #0x20]
000000000002ccc8	stp	x20, x19, [sp, #0x30]
000000000002cccc	stp	x29, x30, [sp, #0x40]
000000000002ccd0	add	x29, sp, #0x40
000000000002ccd4	mov	x20, x0
000000000002ccd8	str	xzr, [sp, #0x8]
000000000002ccdc	adrp	x19, 78 ; 0x7a000
000000000002cce0	add	x19, x19, #0x2c0
000000000002cce4	ldr	x21, [x19]
000000000002cce8	mov	x0, x19
000000000002ccec	blr	x21
000000000002ccf0	ldr	x8, [x0]
000000000002ccf4	ldr	x9, [x8, #0x110]
000000000002ccf8	add	x10, sp, #0x8
000000000002ccfc	str	x10, [x8, #0x110]
000000000002cd00	mov	x8, #0x300000000
000000000002cd04	stp	x9, x8, [sp, #0x10]
000000000002cd08	adr	x8, #0x67581
000000000002cd0c	nop
000000000002cd10	ldarb	w8, [x8]
000000000002cd14	tbz	w8, #0x0, 0x2cd1c
000000000002cd18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002cd1c	ldr	w20, [x20, #0x8]
000000000002cd20	nop
000000000002cd24	ldr	x0, #0x49f0c ; Objc class ref: FastaKmmInt
000000000002cd28	bl	0x55500 ; symbol stub for: _objc_alloc
000000000002cd2c	nop
000000000002cd30	ldr	x1, #0x49c00 ; Objc selector ref: initWithInt:
000000000002cd34	mov	x2, x20
000000000002cd38	bl	0x55584 ; Objc message: +[FastaKmmInt initWithInt:]
000000000002cd3c	mov	x1, x0
000000000002cd40	mov	x0, x19
000000000002cd44	blr	x21
000000000002cd48	ldr	x8, [x0]
000000000002cd4c	ldr	x9, [sp, #0x10]
000000000002cd50	str	x9, [x8, #0x110]
000000000002cd54	mov	x0, x1
000000000002cd58	ldp	x29, x30, [sp, #0x40]
000000000002cd5c	ldp	x20, x19, [sp, #0x30]
000000000002cd60	ldp	x22, x21, [sp, #0x20]
000000000002cd64	add	sp, sp, #0x50
000000000002cd68	ret
000000000002cd6c	mov	x1, x0
000000000002cd70	mov	x0, x19
000000000002cd74	blr	x21
000000000002cd78	ldr	x8, [x0]
000000000002cd7c	add	x9, sp, #0x8
000000000002cd80	str	x9, [x8, #0x110]
000000000002cd84	mov	x0, x1
000000000002cd88	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002cd8c	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002cd90	b	0x2cd90
000000000002cd94	sub	sp, sp, #0x50
000000000002cd98	stp	x22, x21, [sp, #0x20]
000000000002cd9c	stp	x20, x19, [sp, #0x30]
000000000002cda0	stp	x29, x30, [sp, #0x40]
000000000002cda4	add	x29, sp, #0x40
000000000002cda8	mov	x20, x0
000000000002cdac	str	xzr, [sp, #0x8]
000000000002cdb0	adrp	x19, 78 ; 0x7a000
000000000002cdb4	add	x19, x19, #0x2c0
000000000002cdb8	ldr	x21, [x19]
000000000002cdbc	mov	x0, x19
000000000002cdc0	blr	x21
000000000002cdc4	ldr	x8, [x0]
000000000002cdc8	ldr	x9, [x8, #0x110]
000000000002cdcc	add	x10, sp, #0x8
000000000002cdd0	str	x10, [x8, #0x110]
000000000002cdd4	mov	x8, #0x300000000
000000000002cdd8	stp	x9, x8, [sp, #0x10]
000000000002cddc	adr	x8, #0x674ad
000000000002cde0	nop
000000000002cde4	ldarb	w8, [x8]
000000000002cde8	tbz	w8, #0x0, 0x2cdf0
000000000002cdec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002cdf0	ldr	x20, [x20, #0x8]
000000000002cdf4	nop
000000000002cdf8	ldr	x0, #0x49e40 ; Objc class ref: FastaKmmLong
000000000002cdfc	bl	0x55500 ; symbol stub for: _objc_alloc
000000000002ce00	nop
000000000002ce04	ldr	x1, #0x49b44 ; Objc selector ref: initWithLongLong:
000000000002ce08	mov	x2, x20
000000000002ce0c	bl	0x55584 ; Objc message: +[FastaKmmLong initWithLongLong:]
000000000002ce10	mov	x1, x0
000000000002ce14	mov	x0, x19
000000000002ce18	blr	x21
000000000002ce1c	ldr	x8, [x0]
000000000002ce20	ldr	x9, [sp, #0x10]
000000000002ce24	str	x9, [x8, #0x110]
000000000002ce28	mov	x0, x1
000000000002ce2c	ldp	x29, x30, [sp, #0x40]
000000000002ce30	ldp	x20, x19, [sp, #0x30]
000000000002ce34	ldp	x22, x21, [sp, #0x20]
000000000002ce38	add	sp, sp, #0x50
000000000002ce3c	ret
000000000002ce40	mov	x1, x0
000000000002ce44	mov	x0, x19
000000000002ce48	blr	x21
000000000002ce4c	ldr	x8, [x0]
000000000002ce50	add	x9, sp, #0x8
000000000002ce54	str	x9, [x8, #0x110]
000000000002ce58	mov	x0, x1
000000000002ce5c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002ce60	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002ce64	b	0x2ce64
000000000002ce68	sub	sp, sp, #0x50
000000000002ce6c	stp	x22, x21, [sp, #0x20]
000000000002ce70	stp	x20, x19, [sp, #0x30]
000000000002ce74	stp	x29, x30, [sp, #0x40]
000000000002ce78	add	x29, sp, #0x40
000000000002ce7c	mov	x20, x0
000000000002ce80	str	xzr, [sp, #0x8]
000000000002ce84	adrp	x19, 78 ; 0x7a000
000000000002ce88	add	x19, x19, #0x2c0
000000000002ce8c	ldr	x21, [x19]
000000000002ce90	mov	x0, x19
000000000002ce94	blr	x21
000000000002ce98	ldr	x8, [x0]
000000000002ce9c	ldr	x9, [x8, #0x110]
000000000002cea0	add	x10, sp, #0x8
000000000002cea4	str	x10, [x8, #0x110]
000000000002cea8	mov	x8, #0x300000000
000000000002ceac	stp	x9, x8, [sp, #0x10]
000000000002ceb0	adr	x8, #0x673d9
000000000002ceb4	nop
000000000002ceb8	ldarb	w8, [x8]
000000000002cebc	tbz	w8, #0x0, 0x2cec4
000000000002cec0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002cec4	ldrb	w20, [x20, #0x8]
000000000002cec8	nop
000000000002cecc	ldr	x0, #0x49d74 ; Objc class ref: FastaKmmUByte
000000000002ced0	bl	0x55500 ; symbol stub for: _objc_alloc
000000000002ced4	nop
000000000002ced8	ldr	x1, #0x49a88 ; Objc selector ref: initWithUnsignedChar:
000000000002cedc	mov	x2, x20
000000000002cee0	bl	0x55584 ; Objc message: +[FastaKmmUByte initWithUnsignedChar:]
000000000002cee4	mov	x1, x0
000000000002cee8	mov	x0, x19
000000000002ceec	blr	x21
000000000002cef0	ldr	x8, [x0]
000000000002cef4	ldr	x9, [sp, #0x10]
000000000002cef8	str	x9, [x8, #0x110]
000000000002cefc	mov	x0, x1
000000000002cf00	ldp	x29, x30, [sp, #0x40]
000000000002cf04	ldp	x20, x19, [sp, #0x30]
000000000002cf08	ldp	x22, x21, [sp, #0x20]
000000000002cf0c	add	sp, sp, #0x50
000000000002cf10	ret
000000000002cf14	mov	x1, x0
000000000002cf18	mov	x0, x19
000000000002cf1c	blr	x21
000000000002cf20	ldr	x8, [x0]
000000000002cf24	add	x9, sp, #0x8
000000000002cf28	str	x9, [x8, #0x110]
000000000002cf2c	mov	x0, x1
000000000002cf30	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002cf34	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002cf38	b	0x2cf38
000000000002cf3c	sub	sp, sp, #0x50
000000000002cf40	stp	x22, x21, [sp, #0x20]
000000000002cf44	stp	x20, x19, [sp, #0x30]
000000000002cf48	stp	x29, x30, [sp, #0x40]
000000000002cf4c	add	x29, sp, #0x40
000000000002cf50	mov	x20, x0
000000000002cf54	str	xzr, [sp, #0x8]
000000000002cf58	adrp	x19, 78 ; 0x7a000
000000000002cf5c	add	x19, x19, #0x2c0
000000000002cf60	ldr	x21, [x19]
000000000002cf64	mov	x0, x19
000000000002cf68	blr	x21
000000000002cf6c	ldr	x8, [x0]
000000000002cf70	ldr	x9, [x8, #0x110]
000000000002cf74	add	x10, sp, #0x8
000000000002cf78	str	x10, [x8, #0x110]
000000000002cf7c	mov	x8, #0x300000000
000000000002cf80	stp	x9, x8, [sp, #0x10]
000000000002cf84	adr	x8, #0x67305
000000000002cf88	nop
000000000002cf8c	ldarb	w8, [x8]
000000000002cf90	tbz	w8, #0x0, 0x2cf98
000000000002cf94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002cf98	ldrh	w20, [x20, #0x8]
000000000002cf9c	nop
000000000002cfa0	ldr	x0, #0x49ca8 ; Objc class ref: FastaKmmUShort
000000000002cfa4	bl	0x55500 ; symbol stub for: _objc_alloc
000000000002cfa8	nop
000000000002cfac	ldr	x1, #0x499cc ; Objc selector ref: initWithUnsignedShort:
000000000002cfb0	mov	x2, x20
000000000002cfb4	bl	0x55584 ; Objc message: +[FastaKmmUShort initWithUnsignedShort:]
000000000002cfb8	mov	x1, x0
000000000002cfbc	mov	x0, x19
000000000002cfc0	blr	x21
000000000002cfc4	ldr	x8, [x0]
000000000002cfc8	ldr	x9, [sp, #0x10]
000000000002cfcc	str	x9, [x8, #0x110]
000000000002cfd0	mov	x0, x1
000000000002cfd4	ldp	x29, x30, [sp, #0x40]
000000000002cfd8	ldp	x20, x19, [sp, #0x30]
000000000002cfdc	ldp	x22, x21, [sp, #0x20]
000000000002cfe0	add	sp, sp, #0x50
000000000002cfe4	ret
000000000002cfe8	mov	x1, x0
000000000002cfec	mov	x0, x19
000000000002cff0	blr	x21
000000000002cff4	ldr	x8, [x0]
000000000002cff8	add	x9, sp, #0x8
000000000002cffc	str	x9, [x8, #0x110]
000000000002d000	mov	x0, x1
000000000002d004	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002d008	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002d00c	b	0x2d00c
000000000002d010	sub	sp, sp, #0x50
000000000002d014	stp	x22, x21, [sp, #0x20]
000000000002d018	stp	x20, x19, [sp, #0x30]
000000000002d01c	stp	x29, x30, [sp, #0x40]
000000000002d020	add	x29, sp, #0x40
000000000002d024	mov	x20, x0
000000000002d028	str	xzr, [sp, #0x8]
000000000002d02c	adrp	x19, 77 ; 0x7a000
000000000002d030	add	x19, x19, #0x2c0
000000000002d034	ldr	x21, [x19]
000000000002d038	mov	x0, x19
000000000002d03c	blr	x21
000000000002d040	ldr	x8, [x0]
000000000002d044	ldr	x9, [x8, #0x110]
000000000002d048	add	x10, sp, #0x8
000000000002d04c	str	x10, [x8, #0x110]
000000000002d050	mov	x8, #0x300000000
000000000002d054	stp	x9, x8, [sp, #0x10]
000000000002d058	adr	x8, #0x67231
000000000002d05c	nop
000000000002d060	ldarb	w8, [x8]
000000000002d064	tbz	w8, #0x0, 0x2d06c
000000000002d068	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d06c	ldr	w20, [x20, #0x8]
000000000002d070	nop
000000000002d074	ldr	x0, #0x49bdc ; Objc class ref: FastaKmmUInt
000000000002d078	bl	0x55500 ; symbol stub for: _objc_alloc
000000000002d07c	nop
000000000002d080	ldr	x1, #0x498e8 ; Objc selector ref: initWithUnsignedInt:
000000000002d084	mov	x2, x20
000000000002d088	bl	0x55584 ; Objc message: +[FastaKmmUInt initWithUnsignedInt:]
000000000002d08c	mov	x1, x0
000000000002d090	mov	x0, x19
000000000002d094	blr	x21
000000000002d098	ldr	x8, [x0]
000000000002d09c	ldr	x9, [sp, #0x10]
000000000002d0a0	str	x9, [x8, #0x110]
000000000002d0a4	mov	x0, x1
000000000002d0a8	ldp	x29, x30, [sp, #0x40]
000000000002d0ac	ldp	x20, x19, [sp, #0x30]
000000000002d0b0	ldp	x22, x21, [sp, #0x20]
000000000002d0b4	add	sp, sp, #0x50
000000000002d0b8	ret
000000000002d0bc	mov	x1, x0
000000000002d0c0	mov	x0, x19
000000000002d0c4	blr	x21
000000000002d0c8	ldr	x8, [x0]
000000000002d0cc	add	x9, sp, #0x8
000000000002d0d0	str	x9, [x8, #0x110]
000000000002d0d4	mov	x0, x1
000000000002d0d8	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002d0dc	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002d0e0	b	0x2d0e0
000000000002d0e4	sub	sp, sp, #0x50
000000000002d0e8	stp	x22, x21, [sp, #0x20]
000000000002d0ec	stp	x20, x19, [sp, #0x30]
000000000002d0f0	stp	x29, x30, [sp, #0x40]
000000000002d0f4	add	x29, sp, #0x40
000000000002d0f8	mov	x20, x0
000000000002d0fc	str	xzr, [sp, #0x8]
000000000002d100	adrp	x19, 77 ; 0x7a000
000000000002d104	add	x19, x19, #0x2c0
000000000002d108	ldr	x21, [x19]
000000000002d10c	mov	x0, x19
000000000002d110	blr	x21
000000000002d114	ldr	x8, [x0]
000000000002d118	ldr	x9, [x8, #0x110]
000000000002d11c	add	x10, sp, #0x8
000000000002d120	str	x10, [x8, #0x110]
000000000002d124	mov	x8, #0x300000000
000000000002d128	stp	x9, x8, [sp, #0x10]
000000000002d12c	adr	x8, #0x6715d
000000000002d130	nop
000000000002d134	ldarb	w8, [x8]
000000000002d138	tbz	w8, #0x0, 0x2d140
000000000002d13c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d140	ldr	x20, [x20, #0x8]
000000000002d144	nop
000000000002d148	ldr	x0, #0x49b10 ; Objc class ref: FastaKmmULong
000000000002d14c	bl	0x55500 ; symbol stub for: _objc_alloc
000000000002d150	nop
000000000002d154	ldr	x1, #0x4981c ; Objc selector ref: initWithUnsignedLongLong:
000000000002d158	mov	x2, x20
000000000002d15c	bl	0x55584 ; Objc message: +[FastaKmmULong initWithUnsignedLongLong:]
000000000002d160	mov	x1, x0
000000000002d164	mov	x0, x19
000000000002d168	blr	x21
000000000002d16c	ldr	x8, [x0]
000000000002d170	ldr	x9, [sp, #0x10]
000000000002d174	str	x9, [x8, #0x110]
000000000002d178	mov	x0, x1
000000000002d17c	ldp	x29, x30, [sp, #0x40]
000000000002d180	ldp	x20, x19, [sp, #0x30]
000000000002d184	ldp	x22, x21, [sp, #0x20]
000000000002d188	add	sp, sp, #0x50
000000000002d18c	ret
000000000002d190	mov	x1, x0
000000000002d194	mov	x0, x19
000000000002d198	blr	x21
000000000002d19c	ldr	x8, [x0]
000000000002d1a0	add	x9, sp, #0x8
000000000002d1a4	str	x9, [x8, #0x110]
000000000002d1a8	mov	x0, x1
000000000002d1ac	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002d1b0	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002d1b4	b	0x2d1b4
000000000002d1b8	sub	sp, sp, #0x60
000000000002d1bc	stp	d9, d8, [sp, #0x20]
000000000002d1c0	stp	x22, x21, [sp, #0x30]
000000000002d1c4	stp	x20, x19, [sp, #0x40]
000000000002d1c8	stp	x29, x30, [sp, #0x50]
000000000002d1cc	add	x29, sp, #0x50
000000000002d1d0	mov	x20, x0
000000000002d1d4	str	xzr, [sp, #0x8]
000000000002d1d8	adrp	x19, 77 ; 0x7a000
000000000002d1dc	add	x19, x19, #0x2c0
000000000002d1e0	ldr	x21, [x19]
000000000002d1e4	mov	x0, x19
000000000002d1e8	blr	x21
000000000002d1ec	ldr	x8, [x0]
000000000002d1f0	ldr	x9, [x8, #0x110]
000000000002d1f4	add	x10, sp, #0x8
000000000002d1f8	str	x10, [x8, #0x110]
000000000002d1fc	mov	x8, #0x300000000
000000000002d200	stp	x9, x8, [sp, #0x10]
000000000002d204	adr	x8, #0x67085
000000000002d208	nop
000000000002d20c	ldarb	w8, [x8]
000000000002d210	tbz	w8, #0x0, 0x2d218
000000000002d214	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d218	ldr	s8, [x20, #0x8]
000000000002d21c	nop
000000000002d220	ldr	x0, #0x49a40 ; Objc class ref: FastaKmmFloat
000000000002d224	bl	0x55500 ; symbol stub for: _objc_alloc
000000000002d228	nop
000000000002d22c	ldr	x1, #0x496fc ; Objc selector ref: initWithFloat:
000000000002d230	fmov	s0, s8
000000000002d234	bl	0x55584 ; Objc message: +[FastaKmmFloat initWithFloat:]
000000000002d238	mov	x1, x0
000000000002d23c	mov	x0, x19
000000000002d240	blr	x21
000000000002d244	ldr	x8, [x0]
000000000002d248	ldr	x9, [sp, #0x10]
000000000002d24c	str	x9, [x8, #0x110]
000000000002d250	mov	x0, x1
000000000002d254	ldp	x29, x30, [sp, #0x50]
000000000002d258	ldp	x20, x19, [sp, #0x40]
000000000002d25c	ldp	x22, x21, [sp, #0x30]
000000000002d260	ldp	d9, d8, [sp, #0x20]
000000000002d264	add	sp, sp, #0x60
000000000002d268	ret
000000000002d26c	mov	x1, x0
000000000002d270	mov	x0, x19
000000000002d274	blr	x21
000000000002d278	ldr	x8, [x0]
000000000002d27c	add	x9, sp, #0x8
000000000002d280	str	x9, [x8, #0x110]
000000000002d284	mov	x0, x1
000000000002d288	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002d28c	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002d290	b	0x2d290
000000000002d294	sub	sp, sp, #0x60
000000000002d298	stp	d9, d8, [sp, #0x20]
000000000002d29c	stp	x22, x21, [sp, #0x30]
000000000002d2a0	stp	x20, x19, [sp, #0x40]
000000000002d2a4	stp	x29, x30, [sp, #0x50]
000000000002d2a8	add	x29, sp, #0x50
000000000002d2ac	mov	x20, x0
000000000002d2b0	str	xzr, [sp, #0x8]
000000000002d2b4	adrp	x19, 77 ; 0x7a000
000000000002d2b8	add	x19, x19, #0x2c0
000000000002d2bc	ldr	x21, [x19]
000000000002d2c0	mov	x0, x19
000000000002d2c4	blr	x21
000000000002d2c8	ldr	x8, [x0]
000000000002d2cc	ldr	x9, [x8, #0x110]
000000000002d2d0	add	x10, sp, #0x8
000000000002d2d4	str	x10, [x8, #0x110]
000000000002d2d8	mov	x8, #0x300000000
000000000002d2dc	stp	x9, x8, [sp, #0x10]
000000000002d2e0	adr	x8, #0x66fa9
000000000002d2e4	nop
000000000002d2e8	ldarb	w8, [x8]
000000000002d2ec	tbz	w8, #0x0, 0x2d2f4
000000000002d2f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d2f4	ldr	d8, [x20, #0x8]
000000000002d2f8	nop
000000000002d2fc	ldr	x0, #0x4996c ; Objc class ref: FastaKmmDouble
000000000002d300	bl	0x55500 ; symbol stub for: _objc_alloc
000000000002d304	nop
000000000002d308	ldr	x1, #0x49618 ; Objc selector ref: initWithDouble:
000000000002d30c	fmov	d0, d8
000000000002d310	bl	0x55584 ; Objc message: +[FastaKmmDouble initWithDouble:]
000000000002d314	mov	x1, x0
000000000002d318	mov	x0, x19
000000000002d31c	blr	x21
000000000002d320	ldr	x8, [x0]
000000000002d324	ldr	x9, [sp, #0x10]
000000000002d328	str	x9, [x8, #0x110]
000000000002d32c	mov	x0, x1
000000000002d330	ldp	x29, x30, [sp, #0x50]
000000000002d334	ldp	x20, x19, [sp, #0x40]
000000000002d338	ldp	x22, x21, [sp, #0x30]
000000000002d33c	ldp	d9, d8, [sp, #0x20]
000000000002d340	add	sp, sp, #0x60
000000000002d344	ret
000000000002d348	mov	x1, x0
000000000002d34c	mov	x0, x19
000000000002d350	blr	x21
000000000002d354	ldr	x8, [x0]
000000000002d358	add	x9, sp, #0x8
000000000002d35c	str	x9, [x8, #0x110]
000000000002d360	mov	x0, x1
000000000002d364	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002d368	bl	0x552fc ; symbol stub for: __ZSt9terminatev
000000000002d36c	b	0x2d36c
___unnamed_131:
000000000002d370	brk	#0x1
000000000002d374	adrp	x8, 103 ; 0x94000
000000000002d378	ldrb	w8, [x8, #0x280]
000000000002d37c	tbz	w8, #0x0, 0x2d3e4
000000000002d380	adrp	x8, 103 ; 0x94000
000000000002d384	ldrb	w9, [x8, #0x281]
000000000002d388	tbz	w9, #0x0, 0x2d7d0
000000000002d38c	adrp	x8, 103 ; 0x94000
000000000002d390	ldrb	w9, [x8, #0x282]
000000000002d394	tbz	w9, #0x0, 0x2d7e4
000000000002d398	adrp	x8, 103 ; 0x94000
000000000002d39c	ldrb	w9, [x8, #0x283]
000000000002d3a0	tbz	w9, #0x0, 0x2d7f8
000000000002d3a4	adrp	x8, 103 ; 0x94000
000000000002d3a8	ldrb	w9, [x8, #0x284]
000000000002d3ac	tbz	w9, #0x0, 0x2d80c
000000000002d3b0	adrp	x8, 103 ; 0x94000
000000000002d3b4	ldrb	w9, [x8, #0x285]
000000000002d3b8	tbz	w9, #0x0, 0x2d820
000000000002d3bc	adrp	x8, 103 ; 0x94000
000000000002d3c0	ldrb	w9, [x8, #0x286]
000000000002d3c4	tbz	w9, #0x0, 0x2d834
000000000002d3c8	adrp	x8, 103 ; 0x94000
000000000002d3cc	ldrb	w9, [x8, #0x287]
000000000002d3d0	tbz	w9, #0x0, 0x2d848
000000000002d3d4	adrp	x8, 103 ; 0x94000
000000000002d3d8	ldrb	w9, [x8, #0x288]
000000000002d3dc	tbz	w9, #0x0, 0x2d85c
000000000002d3e0	ret
000000000002d3e4	adr	x8, #0x66e9c
000000000002d3e8	nop
000000000002d3ec	mov	w9, #0x1
000000000002d3f0	strb	w9, [x8]
000000000002d3f4	add	x9, x8, #0x270
000000000002d3f8	ldr	x10, [x8, #0x270]
000000000002d3fc	ldr	x11, [x8, #0x2c8]
000000000002d400	add	x11, x11, #0x8
000000000002d404	cmp	x10, #0x0
000000000002d408	csel	x11, x9, x11, eq
000000000002d40c	adr	x10, #0x4c974
000000000002d410	nop
000000000002d414	str	x10, [x11]
000000000002d418	ldr	x11, [x8, #0x270]
000000000002d41c	add	x12, x10, #0x8
000000000002d420	cmp	x11, #0x0
000000000002d424	csel	x11, x9, x12, eq
000000000002d428	add	x12, x10, #0x10
000000000002d42c	str	x12, [x11]
000000000002d430	ldr	x11, [x8, #0x270]
000000000002d434	add	x12, x10, #0x18
000000000002d438	cmp	x11, #0x0
000000000002d43c	csel	x11, x9, x12, eq
000000000002d440	add	x12, x10, #0x20
000000000002d444	str	x12, [x11]
000000000002d448	ldr	x11, [x8, #0x270]
000000000002d44c	add	x12, x10, #0x28
000000000002d450	cmp	x11, #0x0
000000000002d454	csel	x11, x9, x12, eq
000000000002d458	add	x12, x10, #0x30
000000000002d45c	str	x12, [x11]
000000000002d460	ldr	x11, [x8, #0x270]
000000000002d464	add	x12, x10, #0x38
000000000002d468	cmp	x11, #0x0
000000000002d46c	csel	x11, x9, x12, eq
000000000002d470	add	x12, x10, #0x40
000000000002d474	str	x12, [x11]
000000000002d478	ldr	x11, [x8, #0x270]
000000000002d47c	add	x12, x10, #0x48
000000000002d480	cmp	x11, #0x0
000000000002d484	csel	x11, x9, x12, eq
000000000002d488	add	x12, x10, #0x50
000000000002d48c	str	x12, [x11]
000000000002d490	ldr	x11, [x8, #0x270]
000000000002d494	add	x12, x10, #0x58
000000000002d498	cmp	x11, #0x0
000000000002d49c	csel	x11, x9, x12, eq
000000000002d4a0	add	x12, x10, #0x60
000000000002d4a4	str	x12, [x11]
000000000002d4a8	ldr	x11, [x8, #0x270]
000000000002d4ac	add	x12, x10, #0x68
000000000002d4b0	cmp	x11, #0x0
000000000002d4b4	csel	x11, x9, x12, eq
000000000002d4b8	add	x12, x10, #0x70
000000000002d4bc	str	x12, [x11]
000000000002d4c0	ldr	x11, [x8, #0x270]
000000000002d4c4	add	x12, x10, #0x78
000000000002d4c8	cmp	x11, #0x0
000000000002d4cc	csel	x11, x9, x12, eq
000000000002d4d0	add	x12, x10, #0x80
000000000002d4d4	str	x12, [x11]
000000000002d4d8	ldr	x11, [x8, #0x270]
000000000002d4dc	add	x12, x10, #0x88
000000000002d4e0	cmp	x11, #0x0
000000000002d4e4	csel	x11, x9, x12, eq
000000000002d4e8	add	x12, x10, #0x90
000000000002d4ec	str	x12, [x11]
000000000002d4f0	ldr	x11, [x8, #0x270]
000000000002d4f4	add	x12, x10, #0x98
000000000002d4f8	cmp	x11, #0x0
000000000002d4fc	csel	x11, x9, x12, eq
000000000002d500	add	x12, x10, #0xa0
000000000002d504	str	x12, [x11]
000000000002d508	ldr	x11, [x8, #0x270]
000000000002d50c	add	x12, x10, #0xa8
000000000002d510	cmp	x11, #0x0
000000000002d514	csel	x11, x9, x12, eq
000000000002d518	add	x12, x10, #0xb0
000000000002d51c	str	x12, [x11]
000000000002d520	ldr	x11, [x8, #0x270]
000000000002d524	add	x12, x10, #0xb8
000000000002d528	cmp	x11, #0x0
000000000002d52c	csel	x11, x9, x12, eq
000000000002d530	add	x12, x10, #0xc0
000000000002d534	str	x12, [x11]
000000000002d538	ldr	x11, [x8, #0x270]
000000000002d53c	add	x12, x10, #0xc8
000000000002d540	cmp	x11, #0x0
000000000002d544	csel	x11, x9, x12, eq
000000000002d548	add	x12, x10, #0xd0
000000000002d54c	str	x12, [x11]
000000000002d550	ldr	x11, [x8, #0x270]
000000000002d554	add	x12, x10, #0xd8
000000000002d558	cmp	x11, #0x0
000000000002d55c	csel	x11, x9, x12, eq
000000000002d560	add	x12, x10, #0xe0
000000000002d564	str	x12, [x11]
000000000002d568	ldr	x11, [x8, #0x270]
000000000002d56c	add	x12, x10, #0xe8
000000000002d570	cmp	x11, #0x0
000000000002d574	csel	x11, x9, x12, eq
000000000002d578	add	x12, x10, #0xf0
000000000002d57c	str	x12, [x11]
000000000002d580	ldr	x11, [x8, #0x270]
000000000002d584	add	x12, x10, #0xf8
000000000002d588	cmp	x11, #0x0
000000000002d58c	csel	x11, x9, x12, eq
000000000002d590	add	x12, x10, #0x100
000000000002d594	str	x12, [x11]
000000000002d598	ldr	x11, [x8, #0x270]
000000000002d59c	add	x12, x10, #0x108
000000000002d5a0	cmp	x11, #0x0
000000000002d5a4	csel	x11, x9, x12, eq
000000000002d5a8	add	x12, x10, #0x110
000000000002d5ac	str	x12, [x11]
000000000002d5b0	ldr	x11, [x8, #0x270]
000000000002d5b4	add	x12, x10, #0x118
000000000002d5b8	cmp	x11, #0x0
000000000002d5bc	csel	x11, x9, x12, eq
000000000002d5c0	add	x12, x10, #0x120
000000000002d5c4	str	x12, [x11]
000000000002d5c8	ldr	x11, [x8, #0x270]
000000000002d5cc	add	x12, x10, #0x128
000000000002d5d0	cmp	x11, #0x0
000000000002d5d4	csel	x11, x9, x12, eq
000000000002d5d8	add	x12, x10, #0x130
000000000002d5dc	str	x12, [x11]
000000000002d5e0	ldr	x11, [x8, #0x270]
000000000002d5e4	add	x12, x10, #0x138
000000000002d5e8	cmp	x11, #0x0
000000000002d5ec	csel	x11, x9, x12, eq
000000000002d5f0	add	x12, x10, #0x140
000000000002d5f4	str	x12, [x11]
000000000002d5f8	ldr	x11, [x8, #0x270]
000000000002d5fc	add	x12, x10, #0x148
000000000002d600	cmp	x11, #0x0
000000000002d604	csel	x11, x9, x12, eq
000000000002d608	add	x12, x10, #0x150
000000000002d60c	str	x12, [x11]
000000000002d610	ldr	x11, [x8, #0x270]
000000000002d614	add	x12, x10, #0x158
000000000002d618	cmp	x11, #0x0
000000000002d61c	csel	x11, x9, x12, eq
000000000002d620	add	x12, x10, #0x160
000000000002d624	str	x12, [x11]
000000000002d628	ldr	x11, [x8, #0x270]
000000000002d62c	add	x12, x10, #0x168
000000000002d630	cmp	x11, #0x0
000000000002d634	csel	x11, x9, x12, eq
000000000002d638	add	x12, x10, #0x170
000000000002d63c	str	x12, [x11]
000000000002d640	ldr	x11, [x8, #0x270]
000000000002d644	add	x12, x10, #0x178
000000000002d648	cmp	x11, #0x0
000000000002d64c	csel	x11, x9, x12, eq
000000000002d650	add	x12, x10, #0x180
000000000002d654	str	x12, [x11]
000000000002d658	ldr	x11, [x8, #0x270]
000000000002d65c	add	x12, x10, #0x188
000000000002d660	cmp	x11, #0x0
000000000002d664	csel	x11, x9, x12, eq
000000000002d668	add	x12, x10, #0x190
000000000002d66c	str	x12, [x11]
000000000002d670	ldr	x11, [x8, #0x270]
000000000002d674	add	x12, x10, #0x198
000000000002d678	cmp	x11, #0x0
000000000002d67c	csel	x11, x9, x12, eq
000000000002d680	add	x12, x10, #0x1a0
000000000002d684	str	x12, [x11]
000000000002d688	ldr	x11, [x8, #0x270]
000000000002d68c	add	x12, x10, #0x1a8
000000000002d690	cmp	x11, #0x0
000000000002d694	csel	x11, x9, x12, eq
000000000002d698	add	x12, x10, #0x1b0
000000000002d69c	str	x12, [x11]
000000000002d6a0	ldr	x11, [x8, #0x270]
000000000002d6a4	add	x12, x10, #0x1b8
000000000002d6a8	cmp	x11, #0x0
000000000002d6ac	csel	x11, x9, x12, eq
000000000002d6b0	add	x12, x10, #0x1c0
000000000002d6b4	str	x12, [x11]
000000000002d6b8	ldr	x11, [x8, #0x270]
000000000002d6bc	add	x12, x10, #0x1c8
000000000002d6c0	cmp	x11, #0x0
000000000002d6c4	csel	x11, x9, x12, eq
000000000002d6c8	add	x12, x10, #0x1d0
000000000002d6cc	str	x12, [x11]
000000000002d6d0	ldr	x11, [x8, #0x270]
000000000002d6d4	add	x12, x10, #0x1d8
000000000002d6d8	cmp	x11, #0x0
000000000002d6dc	csel	x11, x9, x12, eq
000000000002d6e0	add	x12, x10, #0x1e0
000000000002d6e4	str	x12, [x11]
000000000002d6e8	ldr	x11, [x8, #0x270]
000000000002d6ec	add	x12, x10, #0x1e8
000000000002d6f0	cmp	x11, #0x0
000000000002d6f4	csel	x11, x9, x12, eq
000000000002d6f8	add	x12, x10, #0x1f0
000000000002d6fc	str	x12, [x11]
000000000002d700	ldr	x11, [x8, #0x270]
000000000002d704	add	x12, x10, #0x1f8
000000000002d708	cmp	x11, #0x0
000000000002d70c	csel	x11, x9, x12, eq
000000000002d710	add	x12, x10, #0x200
000000000002d714	str	x12, [x11]
000000000002d718	ldr	x11, [x8, #0x270]
000000000002d71c	add	x12, x10, #0x208
000000000002d720	cmp	x11, #0x0
000000000002d724	csel	x11, x9, x12, eq
000000000002d728	add	x12, x10, #0x210
000000000002d72c	str	x12, [x11]
000000000002d730	ldr	x11, [x8, #0x270]
000000000002d734	add	x12, x10, #0x218
000000000002d738	cmp	x11, #0x0
000000000002d73c	csel	x11, x9, x12, eq
000000000002d740	add	x12, x10, #0x220
000000000002d744	str	x12, [x11]
000000000002d748	ldr	x11, [x8, #0x270]
000000000002d74c	add	x12, x10, #0x228
000000000002d750	cmp	x11, #0x0
000000000002d754	csel	x11, x9, x12, eq
000000000002d758	add	x12, x10, #0x230
000000000002d75c	str	x12, [x11]
000000000002d760	ldr	x11, [x8, #0x270]
000000000002d764	add	x12, x10, #0x238
000000000002d768	cmp	x11, #0x0
000000000002d76c	csel	x11, x9, x12, eq
000000000002d770	add	x12, x10, #0x240
000000000002d774	str	x12, [x11]
000000000002d778	ldr	x11, [x8, #0x270]
000000000002d77c	add	x12, x10, #0x248
000000000002d780	cmp	x11, #0x0
000000000002d784	csel	x11, x9, x12, eq
000000000002d788	add	x12, x10, #0x250
000000000002d78c	str	x12, [x11]
000000000002d790	ldr	x11, [x8, #0x270]
000000000002d794	add	x12, x10, #0x258
000000000002d798	cmp	x11, #0x0
000000000002d79c	csel	x11, x9, x12, eq
000000000002d7a0	add	x12, x10, #0x260
000000000002d7a4	str	x12, [x11]
000000000002d7a8	ldr	x11, [x8, #0x270]
000000000002d7ac	add	x12, x10, #0x268
000000000002d7b0	cmp	x11, #0x0
000000000002d7b4	csel	x9, x9, x12, eq
000000000002d7b8	add	x10, x10, #0x270
000000000002d7bc	str	x10, [x9]
000000000002d7c0	str	x10, [x8, #0x2c8]
000000000002d7c4	adrp	x8, 103 ; 0x94000
000000000002d7c8	ldrb	w9, [x8, #0x281]
000000000002d7cc	tbnz	w9, #0x0, 0x2d38c
000000000002d7d0	mov	w9, #0x1
000000000002d7d4	strb	w9, [x8, #0x281]
000000000002d7d8	adrp	x8, 103 ; 0x94000
000000000002d7dc	ldrb	w9, [x8, #0x282]
000000000002d7e0	tbnz	w9, #0x0, 0x2d398
000000000002d7e4	mov	w9, #0x1
000000000002d7e8	strb	w9, [x8, #0x282]
000000000002d7ec	adrp	x8, 103 ; 0x94000
000000000002d7f0	ldrb	w9, [x8, #0x283]
000000000002d7f4	tbnz	w9, #0x0, 0x2d3a4
000000000002d7f8	mov	w9, #0x1
000000000002d7fc	strb	w9, [x8, #0x283]
000000000002d800	adrp	x8, 103 ; 0x94000
000000000002d804	ldrb	w9, [x8, #0x284]
000000000002d808	tbnz	w9, #0x0, 0x2d3b0
000000000002d80c	mov	w9, #0x1
000000000002d810	strb	w9, [x8, #0x284]
000000000002d814	adrp	x8, 103 ; 0x94000
000000000002d818	ldrb	w9, [x8, #0x285]
000000000002d81c	tbnz	w9, #0x0, 0x2d3bc
000000000002d820	mov	w9, #0x1
000000000002d824	strb	w9, [x8, #0x285]
000000000002d828	adrp	x8, 103 ; 0x94000
000000000002d82c	ldrb	w9, [x8, #0x286]
000000000002d830	tbnz	w9, #0x0, 0x2d3c8
000000000002d834	mov	w9, #0x1
000000000002d838	strb	w9, [x8, #0x286]
000000000002d83c	adrp	x8, 103 ; 0x94000
000000000002d840	ldrb	w9, [x8, #0x287]
000000000002d844	tbnz	w9, #0x0, 0x2d3d4
000000000002d848	mov	w9, #0x1
000000000002d84c	strb	w9, [x8, #0x287]
000000000002d850	adrp	x8, 103 ; 0x94000
000000000002d854	ldrb	w9, [x8, #0x288]
000000000002d858	tbnz	w9, #0x0, 0x2d3e0
000000000002d85c	mov	w9, #0x1
000000000002d860	strb	w9, [x8, #0x288]
000000000002d864	ret
___clang_call_terminate:
000000000002d868	stp	x29, x30, [sp, #-0x10]!
000000000002d86c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000002d870	bl	0x552fc ; symbol stub for: __ZSt9terminatev
__ZNSt3__125__throw_bad_function_callEv:
000000000002d874	stp	x29, x30, [sp, #-0x10]!
000000000002d878	mov	x29, sp
000000000002d87c	mov	w0, #0x8
000000000002d880	bl	0x55320 ; symbol stub for: ___cxa_allocate_exception
000000000002d884	adr	x8, #0x429a4
000000000002d888	nop
000000000002d88c	str	x8, [x0]
000000000002d890	adr	x1, #0x429b0
000000000002d894	nop
000000000002d898	adr	x2, #0xc
000000000002d89c	nop
000000000002d8a0	bl	0x55368 ; symbol stub for: ___cxa_throw
__ZNSt3__117bad_function_callD1Ev:
000000000002d8a4	b	0x552cc ; symbol stub for: __ZNSt9exceptionD2Ev
__ZNSt3__117bad_function_callD0Ev:
000000000002d8a8	stp	x29, x30, [sp, #-0x10]!
000000000002d8ac	mov	x29, sp
000000000002d8b0	bl	0x552cc ; symbol stub for: __ZNSt9exceptionD2Ev
000000000002d8b4	ldp	x29, x30, [sp], #0x10
000000000002d8b8	b	0x55308 ; symbol stub for: __ZdlPv
__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_:
000000000002d8bc	stp	x26, x25, [sp, #-0x50]!
000000000002d8c0	stp	x24, x23, [sp, #0x10]
000000000002d8c4	stp	x22, x21, [sp, #0x20]
000000000002d8c8	stp	x20, x19, [sp, #0x30]
000000000002d8cc	stp	x29, x30, [sp, #0x40]
000000000002d8d0	add	x29, sp, #0x40
000000000002d8d4	mov	x20, x2
000000000002d8d8	mov	x21, x1
000000000002d8dc	mov	x19, x0
000000000002d8e0	ldrb	w8, [x0, #0x18]
000000000002d8e4	cbz	w8, 0x2d90c
000000000002d8e8	ldrsb	w8, [x19, #0x17]
000000000002d8ec	tbnz	w8, #0x1f, 0x2d92c
000000000002d8f0	subs	x8, x20, #0x16
000000000002d8f4	b.ls	0x2d9c8
000000000002d8f8	cmn	x8, #0x28
000000000002d8fc	b.hi	0x2da6c
000000000002d900	mov	w25, #0x16
000000000002d904	mov	x22, x19
000000000002d908	b	0x2d968
000000000002d90c	cmn	x20, #0x10
000000000002d910	b.hs	0x2da6c
000000000002d914	cmp	x20, #0x17
000000000002d918	b.hs	0x2d9f4
000000000002d91c	strb	w20, [x19, #0x17]
000000000002d920	mov	x22, x19
000000000002d924	cbnz	x20, 0x2da18
000000000002d928	b	0x2da28
000000000002d92c	ldr	x8, [x19, #0x10]
000000000002d930	and	x8, x8, #0x7fffffffffffffff
000000000002d934	sub	x25, x8, #0x1
000000000002d938	cmp	x25, x20
000000000002d93c	b.hs	0x2da38
000000000002d940	sub	x9, x20, x25
000000000002d944	mov	x10, #-0x11
000000000002d948	sub	x8, x10, x8
000000000002d94c	cmp	x8, x9
000000000002d950	b.lo	0x2da6c
000000000002d954	ldr	x22, [x19]
000000000002d958	mov	x8, #-0x1a
000000000002d95c	movk	x8, #0x7fff, lsl #48
000000000002d960	cmp	x25, x8
000000000002d964	b.hi	0x2da64
000000000002d968	lsl	x8, x25, #1
000000000002d96c	cmp	x8, x20
000000000002d970	csel	x8, x8, x20, hi
000000000002d974	add	x9, x8, #0x10
000000000002d978	and	x9, x9, #0xfffffffffffffff0
000000000002d97c	cmp	x8, #0x17
000000000002d980	mov	w8, #0x17
000000000002d984	csel	x23, x8, x9, lo
000000000002d988	mov	x0, x23
000000000002d98c	mov	w1, #0x1
000000000002d990	bl	0x553d4 ; symbol stub for: _calloc
000000000002d994	mov	x24, x0
000000000002d998	mov	x1, x21
000000000002d99c	mov	x2, x20
000000000002d9a0	bl	0x554ac ; symbol stub for: _memcpy
000000000002d9a4	cmp	x25, #0x16
000000000002d9a8	b.eq	0x2d9b4
000000000002d9ac	mov	x0, x22
000000000002d9b0	bl	0x55458 ; symbol stub for: _free
000000000002d9b4	orr	x8, x23, #0x8000000000000000
000000000002d9b8	stp	x20, x8, [x19, #0x8]
000000000002d9bc	str	x24, [x19]
000000000002d9c0	strb	wzr, [x24, x20]
000000000002d9c4	b	0x2da48
000000000002d9c8	mov	x22, x19
000000000002d9cc	cbz	x20, 0x2d9e0
000000000002d9d0	mov	x0, x22
000000000002d9d4	mov	x1, x21
000000000002d9d8	mov	x2, x20
000000000002d9dc	bl	0x554b8 ; symbol stub for: _memmove
000000000002d9e0	strb	wzr, [x22, x20]
000000000002d9e4	ldrsb	w8, [x19, #0x17]
000000000002d9e8	tbnz	w8, #0x1f, 0x2da44
000000000002d9ec	strb	w20, [x19, #0x17]
000000000002d9f0	b	0x2da48
000000000002d9f4	add	x8, x20, #0x10
000000000002d9f8	and	x23, x8, #0xfffffffffffffff0
000000000002d9fc	mov	x0, x23
000000000002da00	mov	w1, #0x1
000000000002da04	bl	0x553d4 ; symbol stub for: _calloc
000000000002da08	mov	x22, x0
000000000002da0c	orr	x8, x23, #0x8000000000000000
000000000002da10	stp	x20, x8, [x19, #0x8]
000000000002da14	str	x0, [x19]
000000000002da18	mov	x0, x22
000000000002da1c	mov	x1, x21
000000000002da20	mov	x2, x20
000000000002da24	bl	0x554ac ; symbol stub for: _memcpy
000000000002da28	strb	wzr, [x22, x20]
000000000002da2c	mov	w8, #0x1
000000000002da30	strb	w8, [x19, #0x18]
000000000002da34	b	0x2da48
000000000002da38	ldr	x22, [x19]
000000000002da3c	cbnz	x20, 0x2d9d0
000000000002da40	b	0x2d9e0
000000000002da44	str	x20, [x19, #0x8]
000000000002da48	mov	x0, x19
000000000002da4c	ldp	x29, x30, [sp, #0x40]
000000000002da50	ldp	x20, x19, [sp, #0x30]
000000000002da54	ldp	x22, x21, [sp, #0x20]
000000000002da58	ldp	x24, x23, [sp, #0x10]
000000000002da5c	ldp	x26, x25, [sp], #0x50
000000000002da60	ret
000000000002da64	mov	x23, #-0x11
000000000002da68	b	0x2d988
000000000002da6c	mov	x0, x19
000000000002da70	bl	0x551ac ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ZN6kotlin13RepeatedTimerINS_12steady_clockEE3RunIZNS_2gc8internal24GCSchedulerDataWithTimerIS1_EC1ERNS4_17GCSchedulerConfigENSt3__18functionIFvvEEEEUlvE_EEvOT_:
000000000002da74	sub	sp, sp, #0x70
000000000002da78	stp	x28, x27, [sp, #0x10]
000000000002da7c	stp	x26, x25, [sp, #0x20]
000000000002da80	stp	x24, x23, [sp, #0x30]
000000000002da84	stp	x22, x21, [sp, #0x40]
000000000002da88	stp	x20, x19, [sp, #0x50]
000000000002da8c	stp	x29, x30, [sp, #0x60]
000000000002da90	add	x29, sp, #0x60
000000000002da94	mov	x20, x1
000000000002da98	mov	x19, x0
000000000002da9c	str	x0, [sp]
000000000002daa0	mov	w8, #0x1
000000000002daa4	strb	w8, [sp, #0x8]
000000000002daa8	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002daac	ldrb	w8, [x19, #0x70]
000000000002dab0	cbz	w8, 0x2dcb4
000000000002dab4	mov	x22, #0x914f0000
000000000002dab8	movk	x22, #0x4e94, lsl #32
000000000002dabc	add	x21, x19, #0x40
000000000002dac0	mov	x23, #0x53f7
000000000002dac4	movk	x23, #0xa5e3, lsl #16
000000000002dac8	movk	x23, #0xc49b, lsl #32
000000000002dacc	movk	x23, #0x20, lsl #48
000000000002dad0	mov	w24, #0x3e8
000000000002dad4	mov	x25, #0xac09
000000000002dad8	movk	x25, #0x5a1c, lsl #16
000000000002dadc	movk	x25, #0x3b64, lsl #32
000000000002dae0	movk	x25, #0xffdf, lsl #48
000000000002dae4	b	0x2db14
000000000002dae8	mov	w8, #0x1
000000000002daec	strb	w8, [sp, #0x8]
000000000002daf0	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002daf4	ldr	x8, [x19, #0x78]
000000000002daf8	adds	x8, x0, x8
000000000002dafc	asr	x9, x8, #63
000000000002db00	eor	x9, x9, #0x8000000000000000
000000000002db04	csel	x8, x9, x8, vs
000000000002db08	str	x8, [x19, #0x80]
000000000002db0c	ldrb	w8, [x19, #0x70]
000000000002db10	cbz	w8, 0x2dca8
000000000002db14	strb	wzr, [x19, #0x88]
000000000002db18	ldr	x27, [x19, #0x80]
000000000002db1c	b	0x2db28
000000000002db20	ldrb	w8, [x19, #0x88]
000000000002db24	cbnz	w8, 0x2db0c
000000000002db28	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002db2c	cmp	x0, x27
000000000002db30	b.ge	0x2dc0c
000000000002db34	subs	x8, x27, x0
000000000002db38	asr	x9, x8, #63
000000000002db3c	eor	x9, x9, #0x8000000000000000
000000000002db40	csel	x8, x9, x8, vs
000000000002db44	cmp	x8, x22
000000000002db48	csel	x26, x8, x22, lt
000000000002db4c	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002db50	add	x28, x0, x26
000000000002db54	b	0x2db7c
000000000002db58	mov	x8, #-0x8000000000000000
000000000002db5c	add	x2, x8, x26
000000000002db60	mov	x1, sp
000000000002db64	mov	x0, x21
000000000002db68	bl	0x55230 ; symbol stub for: __ZNSt3__118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE
000000000002db6c	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002db70	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002db74	cmp	x0, x28
000000000002db78	b.ge	0x2db20
000000000002db7c	ldrb	w8, [x19, #0x88]
000000000002db80	cbnz	w8, 0x2db0c
000000000002db84	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002db88	cmp	x0, x28
000000000002db8c	b.ge	0x2db20
000000000002db90	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002db94	sub	x26, x28, x0
000000000002db98	cmp	x26, #0x1
000000000002db9c	b.lt	0x2db70
000000000002dba0	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002dba4	bl	0x5529c ; symbol stub for: __ZNSt3__16chrono12system_clock3nowEv
000000000002dba8	cbz	x0, 0x2dbd4
000000000002dbac	cmp	x0, #0x1
000000000002dbb0	b.lt	0x2dbec
000000000002dbb4	cmp	x0, x23
000000000002dbb8	b.le	0x2dbf4
000000000002dbbc	mov	x8, #0x7fffffffffffffff
000000000002dbc0	mov	x2, #0x7fffffffffffffff
000000000002dbc4	sub	x9, x2, x26
000000000002dbc8	cmp	x8, x9
000000000002dbcc	b.le	0x2db5c
000000000002dbd0	b	0x2db60
000000000002dbd4	mov	x8, #0x0
000000000002dbd8	mov	x2, #0x7fffffffffffffff
000000000002dbdc	sub	x9, x2, x26
000000000002dbe0	cmp	x8, x9
000000000002dbe4	b.le	0x2db5c
000000000002dbe8	b	0x2db60
000000000002dbec	cmp	x0, x25
000000000002dbf0	b.lt	0x2db58
000000000002dbf4	mul	x8, x0, x24
000000000002dbf8	mov	x2, #0x7fffffffffffffff
000000000002dbfc	sub	x9, x2, x26
000000000002dc00	cmp	x8, x9
000000000002dc04	b.le	0x2db5c
000000000002dc08	b	0x2db60
000000000002dc0c	ldrb	w8, [sp, #0x8]
000000000002dc10	cbz	w8, 0x2dd04
000000000002dc14	ldr	x0, [sp]
000000000002dc18	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002dc1c	strb	wzr, [sp, #0x8]
000000000002dc20	ldr	x26, [x20]
000000000002dc24	ldr	x8, [x26, #0x10]
000000000002dc28	ldar	w8, [x8]
000000000002dc2c	cmp	w8, #0x1
000000000002dc30	b.eq	0x2dc90
000000000002dc34	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002dc38	add	x8, x26, #0x38
000000000002dc3c	ldar	x8, [x8]
000000000002dc40	ldr	x9, [x26, #0x30]
000000000002dc44	add	x9, x9, #0x18
000000000002dc48	ldar	x9, [x9]
000000000002dc4c	mul	x10, x9, x24
000000000002dc50	smulh	x11, x9, x24
000000000002dc54	cmp	x11, x10, asr #63
000000000002dc58	asr	x9, x9, #63
000000000002dc5c	eor	x9, x9, #0x7fffffffffffffff
000000000002dc60	csel	x9, x9, x10, ne
000000000002dc64	adds	x8, x8, x9
000000000002dc68	asr	x9, x8, #63
000000000002dc6c	eor	x9, x9, #0x8000000000000000
000000000002dc70	csel	x8, x9, x8, vs
000000000002dc74	cmp	x0, x8
000000000002dc78	b.lt	0x2dc90
000000000002dc7c	ldr	x0, [x26, #0x58]
000000000002dc80	cbz	x0, 0x2dd18
000000000002dc84	ldr	x8, [x0]
000000000002dc88	ldr	x8, [x8, #0x30]
000000000002dc8c	blr	x8
000000000002dc90	ldr	x0, [sp]
000000000002dc94	cbz	x0, 0x2dcf0
000000000002dc98	ldrb	w8, [sp, #0x8]
000000000002dc9c	cbnz	w8, 0x2dcdc
000000000002dca0	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002dca4	b	0x2dae8
000000000002dca8	ldrb	w8, [sp, #0x8]
000000000002dcac	cbz	w8, 0x2dcbc
000000000002dcb0	ldr	x19, [sp]
000000000002dcb4	mov	x0, x19
000000000002dcb8	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002dcbc	ldp	x29, x30, [sp, #0x60]
000000000002dcc0	ldp	x20, x19, [sp, #0x50]
000000000002dcc4	ldp	x22, x21, [sp, #0x40]
000000000002dcc8	ldp	x24, x23, [sp, #0x30]
000000000002dccc	ldp	x26, x25, [sp, #0x20]
000000000002dcd0	ldp	x28, x27, [sp, #0x10]
000000000002dcd4	add	sp, sp, #0x70
000000000002dcd8	ret
000000000002dcdc	adr	x1, #0x2f353 ; literal pool for: "unique_lock::lock: already locked"
000000000002dce0	nop
000000000002dce4	mov	w0, #0xb
000000000002dce8	bl	0x55260 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000002dcec	b	0x2dd1c
000000000002dcf0	adr	x1, #0x2f316 ; literal pool for: "unique_lock::lock: references null mutex"
000000000002dcf4	nop
000000000002dcf8	mov	w0, #0x1
000000000002dcfc	bl	0x55260 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000002dd00	b	0x2dd1c
000000000002dd04	adr	x1, #0x303b4 ; literal pool for: "unique_lock::unlock: not locked"
000000000002dd08	nop
000000000002dd0c	mov	w0, #0x1
000000000002dd10	bl	0x55260 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000002dd14	b	0x2dd1c
000000000002dd18	bl	__ZNSt3__125__throw_bad_function_callEv
000000000002dd1c	brk	#0x1
000000000002dd20	bl	___clang_call_terminate
000000000002dd24	b	0x2dd28
000000000002dd28	mov	x19, x0
000000000002dd2c	ldrb	w8, [sp, #0x8]
000000000002dd30	cbz	w8, 0x2dd3c
000000000002dd34	ldr	x0, [sp]
000000000002dd38	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002dd3c	mov	x0, x19
000000000002dd40	bl	___clang_call_terminate
__ZN6kotlin12ScopedThread3RunIMNS_13RepeatedTimerINS_12steady_clockEEEDoFvOZNS_2gc8internal24GCSchedulerDataWithTimerIS3_EC1ERNS5_17GCSchedulerConfigENSt3__18functionIFvvEEEEUlvE_EJPS4_SF_EEENSB_13invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOSL_DpOSM_:
000000000002dd44	stp	x22, x21, [sp, #-0x30]!
000000000002dd48	stp	x20, x19, [sp, #0x10]
000000000002dd4c	stp	x29, x30, [sp, #0x20]
000000000002dd50	add	x29, sp, #0x20
000000000002dd54	mov	x19, x3
000000000002dd58	mov	x21, x2
000000000002dd5c	mov	x20, x1
000000000002dd60	ldrb	w8, [x0, #0x18]
000000000002dd64	cbz	w8, 0x2dd78
000000000002dd68	ldrsb	w8, [x0, #0x17]
000000000002dd6c	tbz	w8, #0x1f, 0x2dd74
000000000002dd70	ldr	x0, [x0]
000000000002dd74	bl	0x556d4 ; symbol stub for: _pthread_setname_np
000000000002dd78	ldr	x8, [x21]
000000000002dd7c	ldp	x2, x9, [x20]
000000000002dd80	add	x0, x8, x9, asr #1
000000000002dd84	tbz	w9, #0x0, 0x2dd90
000000000002dd88	ldr	x8, [x0]
000000000002dd8c	ldr	x2, [x8, w2, uxtw]
000000000002dd90	mov	x1, x19
000000000002dd94	ldp	x29, x30, [sp, #0x20]
000000000002dd98	ldp	x20, x19, [sp, #0x10]
000000000002dd9c	ldp	x22, x21, [sp], #0x30
000000000002dda0	br	x2
000000000002dda4	bl	___clang_call_terminate
__ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvN6kotlin12ScopedThread10attributesEOMNS7_13RepeatedTimerINS7_12steady_clockEEEDoFvOZNS7_2gc8internal24GCSchedulerDataWithTimerISB_EC1ERNSD_17GCSchedulerConfigENS_8functionIFvvEEEEUlvE_EOPSC_SN_ES9_SP_SR_SM_EEEEEPvSW_:
000000000002dda8	sub	sp, sp, #0x40
000000000002ddac	stp	x20, x19, [sp, #0x20]
000000000002ddb0	stp	x29, x30, [sp, #0x30]
000000000002ddb4	add	x29, sp, #0x30
000000000002ddb8	mov	x19, x0
000000000002ddbc	bl	0x55254 ; symbol stub for: __ZNSt3__119__thread_local_dataEv
000000000002ddc0	ldr	x1, [x19]
000000000002ddc4	str	xzr, [x19]
000000000002ddc8	ldr	x0, [x0]
000000000002ddcc	bl	0x556e0 ; symbol stub for: _pthread_setspecific
000000000002ddd0	add	x1, x19, #0x30
000000000002ddd4	add	x2, x19, #0x40
000000000002ddd8	add	x3, x19, #0x48
000000000002dddc	ldr	x8, [x19, #0x8]
000000000002dde0	strb	wzr, [sp]
000000000002dde4	strb	wzr, [sp, #0x18]
000000000002dde8	ldrb	w9, [x19, #0x28]
000000000002ddec	cbz	w9, 0x2de10
000000000002ddf0	ldr	q0, [x19, #0x10]
000000000002ddf4	str	q0, [sp]
000000000002ddf8	ldr	x9, [x19, #0x20]
000000000002ddfc	str	x9, [sp, #0x10]
000000000002de00	stp	xzr, xzr, [x19, #0x18]
000000000002de04	str	xzr, [x19, #0x10]
000000000002de08	mov	w9, #0x1
000000000002de0c	strb	w9, [sp, #0x18]
000000000002de10	mov	x0, sp
000000000002de14	blr	x8
000000000002de18	ldrb	w8, [sp, #0x18]
000000000002de1c	cbz	w8, 0x2de30
000000000002de20	ldrsb	w8, [sp, #0x17]
000000000002de24	tbz	w8, #0x1f, 0x2de30
000000000002de28	ldr	x0, [sp]
000000000002de2c	bl	0x55458 ; symbol stub for: _free
000000000002de30	ldrb	w8, [x19, #0x28]
000000000002de34	cbz	w8, 0x2de48
000000000002de38	ldrsb	w8, [x19, #0x27]
000000000002de3c	tbz	w8, #0x1f, 0x2de48
000000000002de40	ldr	x0, [x19, #0x10]
000000000002de44	bl	0x55458 ; symbol stub for: _free
000000000002de48	ldr	x0, [x19]
000000000002de4c	str	xzr, [x19]
000000000002de50	cbz	x0, 0x2de5c
000000000002de54	bl	0x551f4 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002de58	bl	0x55308 ; symbol stub for: __ZdlPv
000000000002de5c	mov	x0, x19
000000000002de60	bl	0x55308 ; symbol stub for: __ZdlPv
000000000002de64	mov	x0, #0x0
000000000002de68	ldp	x29, x30, [sp, #0x30]
000000000002de6c	ldp	x20, x19, [sp, #0x20]
000000000002de70	add	sp, sp, #0x40
000000000002de74	ret
000000000002de78	mov	x20, x0
000000000002de7c	ldrb	w8, [sp, #0x18]
000000000002de80	cbz	w8, 0x2dea8
000000000002de84	ldrsb	w8, [sp, #0x17]
000000000002de88	tbz	w8, #0x1f, 0x2dea8
000000000002de8c	ldr	x0, [sp]
000000000002de90	bl	0x55458 ; symbol stub for: _free
000000000002de94	b	0x2dea8
000000000002de98	mov	x20, x0
000000000002de9c	b	0x2dea8
000000000002dea0	mov	x20, x0
000000000002dea4	cbz	x19, 0x2dedc
000000000002dea8	ldrb	w8, [x19, #0x28]
000000000002deac	cbz	w8, 0x2dec0
000000000002deb0	ldrsb	w8, [x19, #0x27]
000000000002deb4	tbz	w8, #0x1f, 0x2dec0
000000000002deb8	ldr	x0, [x19, #0x10]
000000000002debc	bl	0x55458 ; symbol stub for: _free
000000000002dec0	ldr	x0, [x19]
000000000002dec4	str	xzr, [x19]
000000000002dec8	cbz	x0, 0x2ded4
000000000002decc	bl	0x551f4 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002ded0	bl	0x55308 ; symbol stub for: __ZdlPv
000000000002ded4	mov	x0, x19
000000000002ded8	bl	0x55308 ; symbol stub for: __ZdlPv
000000000002dedc	mov	x0, x20
000000000002dee0	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEED1Ev:
000000000002dee4	stp	x20, x19, [sp, #-0x20]!
000000000002dee8	stp	x29, x30, [sp, #0x10]
000000000002deec	add	x29, sp, #0x10
000000000002def0	mov	x19, x0
000000000002def4	adr	x8, #0x42384
000000000002def8	nop
000000000002defc	str	x8, [x0], #0x60
000000000002df00	bl	__ZN6kotlin13RepeatedTimerINS_12steady_clockEED2Ev
000000000002df04	add	x8, x19, #0x40
000000000002df08	ldr	x0, [x19, #0x58]
000000000002df0c	cmp	x8, x0
000000000002df10	b.eq	0x2df24
000000000002df14	cbz	x0, 0x2df30
000000000002df18	ldr	x8, [x0]
000000000002df1c	ldr	x8, [x8, #0x28]
000000000002df20	b	0x2df2c
000000000002df24	ldr	x8, [x0]
000000000002df28	ldr	x8, [x8, #0x20]
000000000002df2c	blr	x8
000000000002df30	mov	x0, x19
000000000002df34	ldp	x29, x30, [sp, #0x10]
000000000002df38	ldp	x20, x19, [sp], #0x20
000000000002df3c	ret
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEED0Ev:
000000000002df40	stp	x20, x19, [sp, #-0x20]!
000000000002df44	stp	x29, x30, [sp, #0x10]
000000000002df48	add	x29, sp, #0x10
000000000002df4c	mov	x19, x0
000000000002df50	adr	x8, #0x42328
000000000002df54	nop
000000000002df58	str	x8, [x0], #0x60
000000000002df5c	bl	__ZN6kotlin13RepeatedTimerINS_12steady_clockEED2Ev
000000000002df60	add	x8, x19, #0x40
000000000002df64	ldr	x0, [x19, #0x58]
000000000002df68	cmp	x8, x0
000000000002df6c	b.eq	0x2df80
000000000002df70	cbz	x0, 0x2df8c
000000000002df74	ldr	x8, [x0]
000000000002df78	ldr	x8, [x8, #0x28]
000000000002df7c	b	0x2df88
000000000002df80	ldr	x8, [x0]
000000000002df84	ldr	x8, [x8, #0x20]
000000000002df88	blr	x8
000000000002df8c	mov	x0, x19
000000000002df90	ldp	x29, x30, [sp, #0x10]
000000000002df94	ldp	x20, x19, [sp], #0x20
000000000002df98	b	0x55308 ; symbol stub for: __ZdlPv
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEE20UpdateFromThreadDataERNS0_21GCSchedulerThreadDataE:
000000000002df9c	stp	x29, x30, [sp, #-0x10]!
000000000002dfa0	mov	x29, sp
000000000002dfa4	ldr	x8, [x1, #0x28]
000000000002dfa8	add	x9, x0, #0x20
000000000002dfac	ldaxr	x10, [x9]
000000000002dfb0	add	x10, x10, x8
000000000002dfb4	stlxr	w11, x10, [x9]
000000000002dfb8	cbnz	w11, 0x2dfac
000000000002dfbc	add	x8, x0, #0x20
000000000002dfc0	ldar	x8, [x8]
000000000002dfc4	add	x9, x0, #0x28
000000000002dfc8	ldar	x9, [x9]
000000000002dfcc	add	x8, x9, x8
000000000002dfd0	ldr	x9, [x0, #0x18]
000000000002dfd4	add	x9, x9, #0x20
000000000002dfd8	ldar	x9, [x9]
000000000002dfdc	cmp	x8, x9
000000000002dfe0	b.lo	0x2dff8
000000000002dfe4	ldr	x0, [x0, #0x58]
000000000002dfe8	cbz	x0, 0x2e000
000000000002dfec	ldr	x8, [x0]
000000000002dff0	ldr	x8, [x8, #0x30]
000000000002dff4	blr	x8
000000000002dff8	ldp	x29, x30, [sp], #0x10
000000000002dffc	ret
000000000002e000	bl	__ZNSt3__125__throw_bad_function_callEv
000000000002e004	brk	#0x1
000000000002e008	bl	___clang_call_terminate
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEE15OnPerformFullGCEv:
000000000002e00c	stp	x22, x21, [sp, #-0x30]!
000000000002e010	stp	x20, x19, [sp, #0x10]
000000000002e014	stp	x29, x30, [sp, #0x20]
000000000002e018	add	x29, sp, #0x20
000000000002e01c	mov	x19, x0
000000000002e020	add	x8, x0, #0x20
000000000002e024	stlr	xzr, [x8]
000000000002e028	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e02c	add	x8, x19, #0x38
000000000002e030	stlr	x0, [x8]
000000000002e034	ldr	x8, [x19, #0x8]
000000000002e038	add	x8, x8, #0x18
000000000002e03c	ldar	x21, [x8]
000000000002e040	add	x20, x19, #0x60
000000000002e044	mov	x0, x20
000000000002e048	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002e04c	mov	w8, #0x3e8
000000000002e050	mul	x9, x21, x8
000000000002e054	smulh	x8, x21, x8
000000000002e058	cmp	x8, x9, asr #63
000000000002e05c	asr	x8, x21, #63
000000000002e060	eor	x8, x8, #0x7fffffffffffffff
000000000002e064	csel	x8, x8, x9, ne
000000000002e068	str	x8, [x19, #0xd8]
000000000002e06c	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e070	ldr	x8, [x19, #0xd8]
000000000002e074	adds	x8, x0, x8
000000000002e078	asr	x9, x8, #63
000000000002e07c	eor	x9, x9, #0x8000000000000000
000000000002e080	csel	x8, x9, x8, vs
000000000002e084	str	x8, [x19, #0xe0]
000000000002e088	mov	w8, #0x1
000000000002e08c	strb	w8, [x19, #0xe8]
000000000002e090	mov	x0, x20
000000000002e094	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002e098	add	x0, x19, #0xa0
000000000002e09c	ldp	x29, x30, [sp, #0x20]
000000000002e0a0	ldp	x20, x19, [sp, #0x10]
000000000002e0a4	ldp	x22, x21, [sp], #0x30
000000000002e0a8	b	0x55224 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002e0ac	bl	___clang_call_terminate
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEE19UpdateAliveSetBytesEm:
000000000002e0b0	add	x8, x0, #0x28
000000000002e0b4	stlr	x1, [x8]
000000000002e0b8	ldr	x8, [x0, #0x18]
000000000002e0bc	add	x8, x8, #0x10
000000000002e0c0	ldarb	w8, [x8]
000000000002e0c4	tbz	w8, #0x0, 0x2e138
000000000002e0c8	ucvtf	d0, x1
000000000002e0cc	ldr	x8, [x0, #0x18]
000000000002e0d0	add	x8, x8, #0x28
000000000002e0d4	ldar	x8, [x8]
000000000002e0d8	fmov	d1, x8
000000000002e0dc	fdiv	d0, d0, d1
000000000002e0e0	fabs	d1, d0
000000000002e0e4	fcmp	d0, d0
000000000002e0e8	mov	x8, #0x7ff0000000000000
000000000002e0ec	fmov	d2, x8
000000000002e0f0	fccmp	d1, d2, #0x4, vc
000000000002e0f4	b.eq	0x2e138
000000000002e0f8	ldr	x8, [x0, #0x18]
000000000002e0fc	add	x8, x8, #0x30
000000000002e100	ldar	x8, [x8]
000000000002e104	scvtf	d1, x8
000000000002e108	ldr	x8, [x0, #0x18]
000000000002e10c	add	x8, x8, #0x38
000000000002e110	ldar	x8, [x8]
000000000002e114	scvtf	d2, x8
000000000002e118	fcmp	d0, d1
000000000002e11c	fcsel	d0, d1, d0, mi
000000000002e120	fcmp	d0, d2
000000000002e124	fcsel	d0, d2, d0, gt
000000000002e128	fcvtzs	x8, d0
000000000002e12c	ldr	x9, [x0, #0x18]
000000000002e130	add	x9, x9, #0x20
000000000002e134	stlr	x8, [x9]
000000000002e138	ret
__ZN6kotlin13RepeatedTimerINS_12steady_clockEED2Ev:
000000000002e13c	stp	x22, x21, [sp, #-0x30]!
000000000002e140	stp	x20, x19, [sp, #0x10]
000000000002e144	stp	x29, x30, [sp, #0x20]
000000000002e148	add	x29, sp, #0x20
000000000002e14c	mov	x19, x0
000000000002e150	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002e154	strb	wzr, [x19, #0x70]
000000000002e158	mov	w8, #0x1
000000000002e15c	strb	w8, [x19, #0x88]
000000000002e160	mov	x0, x19
000000000002e164	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002e168	add	x20, x19, #0x40
000000000002e16c	mov	x0, x20
000000000002e170	bl	0x55224 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002e174	add	x21, x19, #0x90
000000000002e178	mov	x0, x21
000000000002e17c	bl	0x552a8 ; symbol stub for: __ZNSt3__16thread4joinEv
000000000002e180	ldr	x8, [x21]
000000000002e184	cbz	x8, 0x2e190
000000000002e188	mov	x0, x21
000000000002e18c	bl	0x552a8 ; symbol stub for: __ZNSt3__16thread4joinEv
000000000002e190	mov	x0, x21
000000000002e194	bl	0x552b4 ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002e198	mov	x0, x20
000000000002e19c	bl	0x55248 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000002e1a0	mov	x0, x19
000000000002e1a4	ldp	x29, x30, [sp, #0x20]
000000000002e1a8	ldp	x20, x19, [sp, #0x10]
000000000002e1ac	ldp	x22, x21, [sp], #0x30
000000000002e1b0	b	0x55284 ; symbol stub for: __ZNSt3__15mutexD1Ev
000000000002e1b4	mov	x19, x0
000000000002e1b8	mov	x0, x21
000000000002e1bc	bl	0x552b4 ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002e1c0	mov	x0, x19
000000000002e1c4	bl	___clang_call_terminate
000000000002e1c8	b	0x2e1cc
000000000002e1cc	mov	x20, x0
000000000002e1d0	add	x0, x19, #0x90
000000000002e1d4	bl	__ZN6kotlin12ScopedThreadD1Ev
000000000002e1d8	add	x0, x19, #0x40
000000000002e1dc	bl	0x55248 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000002e1e0	mov	x0, x19
000000000002e1e4	bl	0x55284 ; symbol stub for: __ZNSt3__15mutexD1Ev
000000000002e1e8	mov	x0, x20
000000000002e1ec	bl	___clang_call_terminate
__ZN6kotlin12ScopedThreadD1Ev:
000000000002e1f0	stp	x20, x19, [sp, #-0x20]!
000000000002e1f4	stp	x29, x30, [sp, #0x10]
000000000002e1f8	add	x29, sp, #0x10
000000000002e1fc	mov	x19, x0
000000000002e200	ldr	x8, [x0]
000000000002e204	cbz	x8, 0x2e210
000000000002e208	mov	x0, x19
000000000002e20c	bl	0x552a8 ; symbol stub for: __ZNSt3__16thread4joinEv
000000000002e210	mov	x0, x19
000000000002e214	ldp	x29, x30, [sp, #0x10]
000000000002e218	ldp	x20, x19, [sp], #0x20
000000000002e21c	b	0x552b4 ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002e220	mov	x20, x0
000000000002e224	mov	x0, x19
000000000002e228	bl	0x552b4 ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002e22c	mov	x0, x20
000000000002e230	bl	___clang_call_terminate
__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv:
000000000002e234	sub	sp, sp, #0x40
000000000002e238	stp	x22, x21, [sp, #0x10]
000000000002e23c	stp	x20, x19, [sp, #0x20]
000000000002e240	stp	x29, x30, [sp, #0x30]
000000000002e244	add	x29, sp, #0x30
000000000002e248	adr	x20, #0x66041
000000000002e24c	nop
000000000002e250	ldarb	w8, [x20]
000000000002e254	tbz	w8, #0x0, 0x2e2dc
000000000002e258	mov	x19, x0
000000000002e25c	ldr	x8, [x0, #0x8]
000000000002e260	ldr	x8, [x8, #0x110]
000000000002e264	add	x0, x8, #0x48
000000000002e268	bl	__ZN6kotlin2gc22ConcurrentMarkAndSweep10ThreadData14OnSuspendForGCEv
000000000002e26c	adr	x0, #0x4bdf4
000000000002e270	nop
000000000002e274	str	x0, [sp]
000000000002e278	mov	w8, #0x1
000000000002e27c	strb	w8, [sp, #0x8]
000000000002e280	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002e284	bl	__ZN5konan15currentThreadIdEv
000000000002e288	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e28c	add	x21, x19, #0x10
000000000002e290	ldarb	w8, [x21]
000000000002e294	and	w22, w8, #0x1
000000000002e298	mov	w8, #0x1
000000000002e29c	stlrb	w8, [x21]
000000000002e2a0	ldarb	w8, [x20]
000000000002e2a4	tbz	w8, #0x0, 0x2e2c4
000000000002e2a8	adr	x19, #0x4bd58
000000000002e2ac	nop
000000000002e2b0	mov	x1, sp
000000000002e2b4	mov	x0, x19
000000000002e2b8	bl	0x5523c ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
000000000002e2bc	ldarb	w8, [x20]
000000000002e2c0	tbnz	w8, #0x0, 0x2e2b0
000000000002e2c4	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e2c8	stlrb	w22, [x21]
000000000002e2cc	ldrb	w8, [sp, #0x8]
000000000002e2d0	cbz	w8, 0x2e2dc
000000000002e2d4	ldr	x0, [sp]
000000000002e2d8	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002e2dc	ldp	x29, x30, [sp, #0x30]
000000000002e2e0	ldp	x20, x19, [sp, #0x20]
000000000002e2e4	ldp	x22, x21, [sp, #0x10]
000000000002e2e8	add	sp, sp, #0x40
000000000002e2ec	ret
000000000002e2f0	mov	x19, x0
000000000002e2f4	adr	x0, #0x4bd6c
000000000002e2f8	nop
000000000002e2fc	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002e300	mov	x0, x19
000000000002e304	bl	___clang_call_terminate
000000000002e308	bl	___clang_call_terminate
__ZN6kotlin2mm24RequestThreadsSuspensionEv:
000000000002e30c	stp	x20, x19, [sp, #-0x20]!
000000000002e310	stp	x29, x30, [sp, #0x10]
000000000002e314	add	x29, sp, #0x10
000000000002e318	adr	x0, #0x4bd48
000000000002e31c	nop
000000000002e320	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002e324	adr	x8, #0x65f65
000000000002e328	nop
000000000002e32c	ldaxrb	w9, [x8]
000000000002e330	cbnz	w9, 0x2e344
000000000002e334	mov	w19, #0x1
000000000002e338	stlxrb	w9, w19, [x8]
000000000002e33c	cbnz	w9, 0x2e32c
000000000002e340	b	0x2e34c
000000000002e344	mov	w19, #0x0
000000000002e348	clrex
000000000002e34c	adr	x0, #0x4bd14
000000000002e350	nop
000000000002e354	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002e358	mov	x0, x19
000000000002e35c	ldp	x29, x30, [sp, #0x10]
000000000002e360	ldp	x20, x19, [sp], #0x20
000000000002e364	ret
000000000002e368	bl	___clang_call_terminate
__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_:
000000000002e36c	stp	x22, x21, [sp, #-0x30]!
000000000002e370	stp	x20, x19, [sp, #0x10]
000000000002e374	stp	x29, x30, [sp, #0x20]
000000000002e378	add	x29, sp, #0x20
000000000002e37c	mov	x19, x0
000000000002e380	ldr	x20, [x0, #0x150]
000000000002e384	str	xzr, [x0, #0x150]
000000000002e388	cbz	x20, 0x2e39c
000000000002e38c	mov	x0, x20
000000000002e390	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000002e394	mov	x0, x20
000000000002e398	bl	0x55458 ; symbol stub for: _free
000000000002e39c	ldr	x0, [x19, #0x120]
000000000002e3a0	cbz	x0, 0x2e3ac
000000000002e3a4	str	x0, [x19, #0x128]
000000000002e3a8	bl	0x55458 ; symbol stub for: _free
000000000002e3ac	add	x0, x19, #0x118
000000000002e3b0	bl	__ZN6kotlin2gc2GC10ThreadDataD1Ev
000000000002e3b4	add	x0, x19, #0xd8
000000000002e3b8	bl	__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv
000000000002e3bc	ldr	x8, [x19, #0x108]
000000000002e3c0	cbz	x8, 0x2e400
000000000002e3c4	add	x20, x19, #0xf8
000000000002e3c8	ldp	x8, x0, [x19, #0xf8]
000000000002e3cc	ldr	x9, [x8, #0x8]
000000000002e3d0	ldr	x10, [x0]
000000000002e3d4	str	x9, [x10, #0x8]
000000000002e3d8	ldr	x8, [x8, #0x8]
000000000002e3dc	str	x10, [x8]
000000000002e3e0	str	xzr, [x19, #0x108]
000000000002e3e4	cmp	x0, x20
000000000002e3e8	b.eq	0x2e400
000000000002e3ec	ldr	x21, [x0, #0x8]
000000000002e3f0	bl	_mi_free
000000000002e3f4	mov	x0, x21
000000000002e3f8	cmp	x21, x20
000000000002e3fc	b.ne	0x2e3ec
000000000002e400	ldr	x8, [x19, #0xf0]
000000000002e404	cbz	x8, 0x2e444
000000000002e408	add	x20, x19, #0xe0
000000000002e40c	ldp	x8, x0, [x19, #0xe0]
000000000002e410	ldr	x9, [x8, #0x8]
000000000002e414	ldr	x10, [x0]
000000000002e418	str	x9, [x10, #0x8]
000000000002e41c	ldr	x8, [x8, #0x8]
000000000002e420	str	x10, [x8]
000000000002e424	str	xzr, [x19, #0xf0]
000000000002e428	cmp	x0, x20
000000000002e42c	b.eq	0x2e444
000000000002e430	ldr	x21, [x0, #0x8]
000000000002e434	bl	_mi_free
000000000002e438	mov	x0, x21
000000000002e43c	cmp	x21, x20
000000000002e440	b.ne	0x2e430
000000000002e444	add	x0, x19, #0xa0
000000000002e448	bl	__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv
000000000002e44c	ldr	x8, [x19, #0xd0]
000000000002e450	cbz	x8, 0x2e490
000000000002e454	add	x20, x19, #0xc0
000000000002e458	ldp	x8, x0, [x19, #0xc0]
000000000002e45c	ldr	x9, [x8, #0x8]
000000000002e460	ldr	x10, [x0]
000000000002e464	str	x9, [x10, #0x8]
000000000002e468	ldr	x8, [x8, #0x8]
000000000002e46c	str	x10, [x8]
000000000002e470	str	xzr, [x19, #0xd0]
000000000002e474	cmp	x0, x20
000000000002e478	b.eq	0x2e490
000000000002e47c	ldr	x21, [x0, #0x8]
000000000002e480	bl	0x55458 ; symbol stub for: _free
000000000002e484	mov	x0, x21
000000000002e488	cmp	x21, x20
000000000002e48c	b.ne	0x2e47c
000000000002e490	ldr	x8, [x19, #0xb8]
000000000002e494	cbz	x8, 0x2e4d4
000000000002e498	add	x20, x19, #0xa8
000000000002e49c	ldp	x8, x0, [x19, #0xa8]
000000000002e4a0	ldr	x9, [x8, #0x8]
000000000002e4a4	ldr	x10, [x0]
000000000002e4a8	str	x9, [x10, #0x8]
000000000002e4ac	ldr	x8, [x8, #0x8]
000000000002e4b0	str	x10, [x8]
000000000002e4b4	str	xzr, [x19, #0xb8]
000000000002e4b8	cmp	x0, x20
000000000002e4bc	b.eq	0x2e4d4
000000000002e4c0	ldr	x21, [x0, #0x8]
000000000002e4c4	bl	0x55458 ; symbol stub for: _free
000000000002e4c8	mov	x0, x21
000000000002e4cc	cmp	x21, x20
000000000002e4d0	b.ne	0x2e4c0
000000000002e4d4	ldr	x0, [x19, #0x70]
000000000002e4d8	cbz	x0, 0x2e4ec
000000000002e4dc	ldr	x20, [x0]
000000000002e4e0	bl	0x55458 ; symbol stub for: _free
000000000002e4e4	mov	x0, x20
000000000002e4e8	cbnz	x20, 0x2e4dc
000000000002e4ec	ldr	x0, [x19, #0x60]
000000000002e4f0	str	xzr, [x19, #0x60]
000000000002e4f4	cbz	x0, 0x2e4fc
000000000002e4f8	bl	0x55458 ; symbol stub for: _free
000000000002e4fc	ldr	x0, [x19, #0x48]
000000000002e500	cbz	x0, 0x2e50c
000000000002e504	str	x0, [x19, #0x50]
000000000002e508	bl	0x55458 ; symbol stub for: _free
000000000002e50c	add	x0, x19, #0x10
000000000002e510	bl	__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv
000000000002e514	ldr	x8, [x19, #0x40]
000000000002e518	cbz	x8, 0x2e558
000000000002e51c	add	x20, x19, #0x30
000000000002e520	ldp	x8, x0, [x19, #0x30]
000000000002e524	ldr	x9, [x8, #0x8]
000000000002e528	ldr	x10, [x0]
000000000002e52c	str	x9, [x10, #0x8]
000000000002e530	ldr	x8, [x8, #0x8]
000000000002e534	str	x10, [x8]
000000000002e538	str	xzr, [x19, #0x40]
000000000002e53c	cmp	x0, x20
000000000002e540	b.eq	0x2e558
000000000002e544	ldr	x21, [x0, #0x8]
000000000002e548	bl	0x55458 ; symbol stub for: _free
000000000002e54c	mov	x0, x21
000000000002e550	cmp	x21, x20
000000000002e554	b.ne	0x2e544
000000000002e558	ldr	x8, [x19, #0x28]
000000000002e55c	cbz	x8, 0x2e59c
000000000002e560	add	x20, x19, #0x18
000000000002e564	ldp	x8, x0, [x19, #0x18]
000000000002e568	ldr	x9, [x8, #0x8]
000000000002e56c	ldr	x10, [x0]
000000000002e570	str	x9, [x10, #0x8]
000000000002e574	ldr	x8, [x8, #0x8]
000000000002e578	str	x10, [x8]
000000000002e57c	str	xzr, [x19, #0x28]
000000000002e580	cmp	x0, x20
000000000002e584	b.eq	0x2e59c
000000000002e588	ldr	x19, [x0, #0x8]
000000000002e58c	bl	0x55458 ; symbol stub for: _free
000000000002e590	mov	x0, x19
000000000002e594	cmp	x19, x20
000000000002e598	b.ne	0x2e588
000000000002e59c	ldp	x29, x30, [sp, #0x20]
000000000002e5a0	ldp	x20, x19, [sp, #0x10]
000000000002e5a4	ldp	x22, x21, [sp], #0x30
000000000002e5a8	ret
__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv:
000000000002e5ac	stp	x22, x21, [sp, #-0x30]!
000000000002e5b0	stp	x20, x19, [sp, #0x10]
000000000002e5b4	stp	x29, x30, [sp, #0x20]
000000000002e5b8	add	x29, sp, #0x20
000000000002e5bc	mov	x19, x0
000000000002e5c0	add	x8, x0, #0x8
000000000002e5c4	ldr	x9, [x0, #0x10]
000000000002e5c8	cmp	x8, x9
000000000002e5cc	b.eq	0x2e5e4
000000000002e5d0	add	x10, x9, #0x18
000000000002e5d4	stlr	xzr, [x10]
000000000002e5d8	ldr	x9, [x9, #0x8]
000000000002e5dc	cmp	x8, x9
000000000002e5e0	b.ne	0x2e5d0
000000000002e5e4	ldr	x8, [x19]
000000000002e5e8	add	x20, x8, #0x30
000000000002e5ec	mov	w21, #0x1
000000000002e5f0	ldaxrb	w8, [x20]
000000000002e5f4	stxrb	w9, w21, [x20]
000000000002e5f8	cbnz	w9, 0x2e5f0
000000000002e5fc	tbz	w8, #0x0, 0x2e608
000000000002e600	bl	0x556f8 ; symbol stub for: _sched_yield
000000000002e604	b	0x2e5f0
000000000002e608	ldr	x8, [x19]
000000000002e60c	ldr	x9, [x19, #0x18]
000000000002e610	cbz	x9, 0x2e650
000000000002e614	ldp	x11, x10, [x19, #0x8]
000000000002e618	ldr	x12, [x11, #0x8]
000000000002e61c	ldr	x13, [x10]
000000000002e620	str	x12, [x13, #0x8]
000000000002e624	ldr	x12, [x11, #0x8]
000000000002e628	str	x13, [x12]
000000000002e62c	ldr	x12, [x8]
000000000002e630	str	x10, [x12, #0x8]
000000000002e634	str	x12, [x10]
000000000002e638	str	x11, [x8]
000000000002e63c	str	x8, [x11, #0x8]
000000000002e640	ldr	x10, [x8, #0x10]
000000000002e644	add	x9, x10, x9
000000000002e648	str	x9, [x8, #0x10]
000000000002e64c	str	xzr, [x19, #0x18]
000000000002e650	ldr	x9, [x19, #0x30]
000000000002e654	cbz	x9, 0x2e698
000000000002e658	add	x10, x8, #0x18
000000000002e65c	ldp	x12, x11, [x19, #0x20]
000000000002e660	ldr	x13, [x12, #0x8]
000000000002e664	ldr	x14, [x11]
000000000002e668	str	x13, [x14, #0x8]
000000000002e66c	ldr	x13, [x12, #0x8]
000000000002e670	str	x14, [x13]
000000000002e674	ldr	x13, [x8, #0x18]
000000000002e678	str	x11, [x13, #0x8]
000000000002e67c	str	x13, [x11]
000000000002e680	str	x12, [x8, #0x18]
000000000002e684	str	x10, [x12, #0x8]
000000000002e688	ldr	x10, [x8, #0x28]
000000000002e68c	add	x9, x10, x9
000000000002e690	str	x9, [x8, #0x28]
000000000002e694	str	xzr, [x19, #0x30]
000000000002e698	stlrb	wzr, [x20]
000000000002e69c	ldp	x29, x30, [sp, #0x20]
000000000002e6a0	ldp	x20, x19, [sp, #0x10]
000000000002e6a4	ldp	x22, x21, [sp], #0x30
000000000002e6a8	ret
000000000002e6ac	bl	___clang_call_terminate
__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv:
000000000002e6b0	stp	x22, x21, [sp, #-0x30]!
000000000002e6b4	stp	x20, x19, [sp, #0x10]
000000000002e6b8	stp	x29, x30, [sp, #0x20]
000000000002e6bc	add	x29, sp, #0x20
000000000002e6c0	mov	x19, x0
000000000002e6c4	add	x8, x0, #0x8
000000000002e6c8	ldr	x9, [x0, #0x10]
000000000002e6cc	cmp	x8, x9
000000000002e6d0	b.eq	0x2e6e8
000000000002e6d4	add	x10, x9, #0x18
000000000002e6d8	stlr	xzr, [x10]
000000000002e6dc	ldr	x9, [x9, #0x8]
000000000002e6e0	cmp	x8, x9
000000000002e6e4	b.ne	0x2e6d4
000000000002e6e8	ldr	x8, [x19]
000000000002e6ec	add	x20, x8, #0x30
000000000002e6f0	mov	w21, #0x1
000000000002e6f4	ldaxrb	w8, [x20]
000000000002e6f8	stxrb	w9, w21, [x20]
000000000002e6fc	cbnz	w9, 0x2e6f4
000000000002e700	tbz	w8, #0x0, 0x2e70c
000000000002e704	bl	0x556f8 ; symbol stub for: _sched_yield
000000000002e708	b	0x2e6f4
000000000002e70c	ldr	x8, [x19]
000000000002e710	ldr	x9, [x19, #0x18]
000000000002e714	cbz	x9, 0x2e754
000000000002e718	ldp	x11, x10, [x19, #0x8]
000000000002e71c	ldr	x12, [x11, #0x8]
000000000002e720	ldr	x13, [x10]
000000000002e724	str	x12, [x13, #0x8]
000000000002e728	ldr	x12, [x11, #0x8]
000000000002e72c	str	x13, [x12]
000000000002e730	ldr	x12, [x8]
000000000002e734	str	x10, [x12, #0x8]
000000000002e738	str	x12, [x10]
000000000002e73c	str	x11, [x8]
000000000002e740	str	x8, [x11, #0x8]
000000000002e744	ldr	x10, [x8, #0x10]
000000000002e748	add	x9, x10, x9
000000000002e74c	str	x9, [x8, #0x10]
000000000002e750	str	xzr, [x19, #0x18]
000000000002e754	ldr	x9, [x19, #0x30]
000000000002e758	cbz	x9, 0x2e79c
000000000002e75c	add	x10, x8, #0x18
000000000002e760	ldp	x12, x11, [x19, #0x20]
000000000002e764	ldr	x13, [x12, #0x8]
000000000002e768	ldr	x14, [x11]
000000000002e76c	str	x13, [x14, #0x8]
000000000002e770	ldr	x13, [x12, #0x8]
000000000002e774	str	x14, [x13]
000000000002e778	ldr	x13, [x8, #0x18]
000000000002e77c	str	x11, [x13, #0x8]
000000000002e780	str	x13, [x11]
000000000002e784	str	x12, [x8, #0x18]
000000000002e788	str	x10, [x12, #0x8]
000000000002e78c	ldr	x10, [x8, #0x28]
000000000002e790	add	x9, x10, x9
000000000002e794	str	x9, [x8, #0x28]
000000000002e798	str	xzr, [x19, #0x30]
000000000002e79c	stlrb	wzr, [x20]
000000000002e7a0	ldp	x29, x30, [sp, #0x20]
000000000002e7a4	ldp	x20, x19, [sp, #0x10]
000000000002e7a8	ldp	x22, x21, [sp], #0x30
000000000002e7ac	ret
000000000002e7b0	bl	___clang_call_terminate
__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv:
000000000002e7b4	stp	x22, x21, [sp, #-0x30]!
000000000002e7b8	stp	x20, x19, [sp, #0x10]
000000000002e7bc	stp	x29, x30, [sp, #0x20]
000000000002e7c0	add	x29, sp, #0x20
000000000002e7c4	mov	x19, x0
000000000002e7c8	add	x8, x0, #0x8
000000000002e7cc	ldr	x9, [x0, #0x10]
000000000002e7d0	cmp	x8, x9
000000000002e7d4	b.eq	0x2e7ec
000000000002e7d8	add	x10, x9, #0x38
000000000002e7dc	stlr	xzr, [x10]
000000000002e7e0	ldr	x9, [x9, #0x8]
000000000002e7e4	cmp	x8, x9
000000000002e7e8	b.ne	0x2e7d8
000000000002e7ec	ldr	x8, [x19]
000000000002e7f0	add	x20, x8, #0x30
000000000002e7f4	mov	w21, #0x1
000000000002e7f8	ldaxrb	w8, [x20]
000000000002e7fc	stxrb	w9, w21, [x20]
000000000002e800	cbnz	w9, 0x2e7f8
000000000002e804	tbz	w8, #0x0, 0x2e810
000000000002e808	bl	0x556f8 ; symbol stub for: _sched_yield
000000000002e80c	b	0x2e7f8
000000000002e810	ldr	x8, [x19]
000000000002e814	ldr	x9, [x19, #0x18]
000000000002e818	cbz	x9, 0x2e858
000000000002e81c	ldp	x11, x10, [x19, #0x8]
000000000002e820	ldr	x12, [x11, #0x8]
000000000002e824	ldr	x13, [x10]
000000000002e828	str	x12, [x13, #0x8]
000000000002e82c	ldr	x12, [x11, #0x8]
000000000002e830	str	x13, [x12]
000000000002e834	ldr	x12, [x8]
000000000002e838	str	x10, [x12, #0x8]
000000000002e83c	str	x12, [x10]
000000000002e840	str	x11, [x8]
000000000002e844	str	x8, [x11, #0x8]
000000000002e848	ldr	x10, [x8, #0x10]
000000000002e84c	add	x9, x10, x9
000000000002e850	str	x9, [x8, #0x10]
000000000002e854	str	xzr, [x19, #0x18]
000000000002e858	ldr	x9, [x19, #0x30]
000000000002e85c	cbz	x9, 0x2e8a0
000000000002e860	add	x10, x8, #0x18
000000000002e864	ldp	x12, x11, [x19, #0x20]
000000000002e868	ldr	x13, [x12, #0x8]
000000000002e86c	ldr	x14, [x11]
000000000002e870	str	x13, [x14, #0x8]
000000000002e874	ldr	x13, [x12, #0x8]
000000000002e878	str	x14, [x13]
000000000002e87c	ldr	x13, [x8, #0x18]
000000000002e880	str	x11, [x13, #0x8]
000000000002e884	str	x13, [x11]
000000000002e888	str	x12, [x8, #0x18]
000000000002e88c	str	x10, [x12, #0x8]
000000000002e890	ldr	x10, [x8, #0x28]
000000000002e894	add	x9, x10, x9
000000000002e898	str	x9, [x8, #0x28]
000000000002e89c	str	xzr, [x19, #0x30]
000000000002e8a0	stlrb	wzr, [x20]
000000000002e8a4	ldp	x29, x30, [sp, #0x20]
000000000002e8a8	ldp	x20, x19, [sp, #0x10]
000000000002e8ac	ldp	x22, x21, [sp], #0x30
000000000002e8b0	ret
000000000002e8b4	bl	___clang_call_terminate
__ZNSt3__110unique_ptrIN6kotlin14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS1_11std_support9allocatorIS4_EEE4NodeENS6_17allocator_deleterISA_NS7_ISA_EEEEED1Ev:
000000000002e8b8	stp	x20, x19, [sp, #-0x20]!
000000000002e8bc	stp	x29, x30, [sp, #0x10]
000000000002e8c0	add	x29, sp, #0x10
000000000002e8c4	adrp	x8, 102 ; 0x94000
000000000002e8c8	ldr	x19, [x8, #0x570]
000000000002e8cc	str	xzr, [x8, #0x570]
000000000002e8d0	cbz	x19, 0x2e8ec
000000000002e8d4	mov	x0, x19
000000000002e8d8	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000002e8dc	mov	x0, x19
000000000002e8e0	ldp	x29, x30, [sp, #0x10]
000000000002e8e4	ldp	x20, x19, [sp], #0x20
000000000002e8e8	b	0x55458 ; symbol stub for: _free
000000000002e8ec	ldp	x29, x30, [sp, #0x10]
000000000002e8f0	ldp	x20, x19, [sp], #0x20
000000000002e8f4	ret
__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_:
000000000002e8f8	sub	sp, sp, #0x70
000000000002e8fc	stp	x28, x27, [sp, #0x10]
000000000002e900	stp	x26, x25, [sp, #0x20]
000000000002e904	stp	x24, x23, [sp, #0x30]
000000000002e908	stp	x22, x21, [sp, #0x40]
000000000002e90c	stp	x20, x19, [sp, #0x50]
000000000002e910	stp	x29, x30, [sp, #0x60]
000000000002e914	add	x29, sp, #0x60
000000000002e918	mov	x20, x1
000000000002e91c	mov	x19, x0
000000000002e920	sub	x21, x20, #0x10
000000000002e924	sub	x26, x20, #0x20
000000000002e928	mov	x22, x19
000000000002e92c	mov	x19, x22
000000000002e930	sub	x9, x20, x22
000000000002e934	asr	x8, x9, #4
000000000002e938	cmp	x8, #0x5
000000000002e93c	b.ls	0x2ed28
000000000002e940	cmp	x9, #0x1ef
000000000002e944	b.le	0x2edfc
000000000002e948	cmp	x8, #0x0
000000000002e94c	cinc	x10, x8, lt
000000000002e950	asr	x27, x10, #1
000000000002e954	add	x22, x19, x27, lsl #4
000000000002e958	mov	w10, #0x3e71
000000000002e95c	cmp	x9, x10
000000000002e960	b.lt	0x2e994
000000000002e964	add	x9, x8, #0x3
000000000002e968	cmp	x8, #0x0
000000000002e96c	csel	x8, x9, x8, lt
000000000002e970	lsl	x8, x8, #2
000000000002e974	and	x8, x8, #0xfffffffffffffff0
000000000002e978	add	x1, x19, x8
000000000002e97c	add	x3, x22, x8
000000000002e980	mov	x0, x19
000000000002e984	mov	x2, x22
000000000002e988	mov	x4, x21
000000000002e98c	bl	__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_
000000000002e990	b	0x2e9a4
000000000002e994	mov	x0, x19
000000000002e998	mov	x1, x22
000000000002e99c	mov	x2, x21
000000000002e9a0	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002e9a4	mov	x23, x0
000000000002e9a8	ldr	x24, [x19, #0x8]
000000000002e9ac	add	x8, x19, x27, lsl #4
000000000002e9b0	ldr	x28, [x8, #0x8]
000000000002e9b4	cmp	x28, x24
000000000002e9b8	csel	x2, x28, x24, lo
000000000002e9bc	cbz	x2, 0x2ea28
000000000002e9c0	ldr	x1, [x22]
000000000002e9c4	ldr	x0, [x19]
000000000002e9c8	bl	0x554a0 ; symbol stub for: _memcmp
000000000002e9cc	cbz	w0, 0x2ea28
000000000002e9d0	tbnz	w0, #0x1f, 0x2ea30
000000000002e9d4	mov	x8, x26
000000000002e9d8	b	0x2e9e8
000000000002e9dc	mov	w0, #0x0
000000000002e9e0	sub	x8, x27, #0x10
000000000002e9e4	tbnz	w0, #0x1f, 0x2ea44
000000000002e9e8	cmp	x8, x19
000000000002e9ec	b.eq	0x2ebcc
000000000002e9f0	mov	x27, x8
000000000002e9f4	ldr	x25, [x8, #0x8]
000000000002e9f8	cmp	x28, x25
000000000002e9fc	csel	x2, x28, x25, lo
000000000002ea00	cbz	x2, 0x2ea14
000000000002ea04	ldr	x1, [x22]
000000000002ea08	ldr	x0, [x27]
000000000002ea0c	bl	0x554a0 ; symbol stub for: _memcmp
000000000002ea10	cbnz	w0, 0x2e9e0
000000000002ea14	cmp	x25, x28
000000000002ea18	b.eq	0x2e9dc
000000000002ea1c	b.lo	0x2ea44
000000000002ea20	mov	w0, #0x1
000000000002ea24	b	0x2e9e0
000000000002ea28	cmp	x24, x28
000000000002ea2c	b.hs	0x2e9d4
000000000002ea30	mov	x27, x21
000000000002ea34	add	x24, x19, #0x10
000000000002ea38	cmp	x24, x27
000000000002ea3c	b.lo	0x2ea98
000000000002ea40	b	0x2eb24
000000000002ea44	ldr	q0, [x19]
000000000002ea48	str	q0, [sp]
000000000002ea4c	ldr	q0, [x27]
000000000002ea50	str	q0, [x19]
000000000002ea54	ldr	q0, [sp]
000000000002ea58	str	q0, [x27]
000000000002ea5c	add	w23, w23, #0x1
000000000002ea60	add	x24, x19, #0x10
000000000002ea64	cmp	x24, x27
000000000002ea68	b.hs	0x2eb24
000000000002ea6c	b	0x2ea98
000000000002ea70	ldr	q0, [x24]
000000000002ea74	str	q0, [sp]
000000000002ea78	ldr	q0, [x27]
000000000002ea7c	str	q0, [x24]
000000000002ea80	ldr	q0, [sp]
000000000002ea84	str	q0, [x27]
000000000002ea88	add	w23, w23, #0x1
000000000002ea8c	cmp	x24, x22
000000000002ea90	csel	x22, x27, x22, eq
000000000002ea94	add	x24, x24, #0x10
000000000002ea98	ldr	x28, [x22, #0x8]
000000000002ea9c	b	0x2eaac
000000000002eaa0	cmp	x25, x28
000000000002eaa4	b.hs	0x2ead0
000000000002eaa8	add	x24, x24, #0x10
000000000002eaac	ldr	x25, [x24, #0x8]
000000000002eab0	cmp	x28, x25
000000000002eab4	csel	x2, x28, x25, lo
000000000002eab8	cbz	x2, 0x2eaa0
000000000002eabc	ldr	x1, [x22]
000000000002eac0	ldr	x0, [x24]
000000000002eac4	bl	0x554a0 ; symbol stub for: _memcmp
000000000002eac8	cbz	w0, 0x2eaa0
000000000002eacc	tbnz	w0, #0x1f, 0x2eaa8
000000000002ead0	sub	x8, x27, #0x10
000000000002ead4	b	0x2eae4
000000000002ead8	mov	w0, #0x0
000000000002eadc	sub	x8, x27, #0x10
000000000002eae0	tbnz	w0, #0x1f, 0x2eb1c
000000000002eae4	mov	x27, x8
000000000002eae8	ldr	x25, [x8, #0x8]
000000000002eaec	cmp	x28, x25
000000000002eaf0	csel	x2, x28, x25, lo
000000000002eaf4	cbz	x2, 0x2eb08
000000000002eaf8	ldr	x1, [x22]
000000000002eafc	ldr	x0, [x27]
000000000002eb00	bl	0x554a0 ; symbol stub for: _memcmp
000000000002eb04	cbnz	w0, 0x2eadc
000000000002eb08	cmp	x25, x28
000000000002eb0c	b.eq	0x2ead8
000000000002eb10	b.lo	0x2eb1c
000000000002eb14	mov	w0, #0x1
000000000002eb18	b	0x2eadc
000000000002eb1c	cmp	x24, x27
000000000002eb20	b.ls	0x2ea70
000000000002eb24	cmp	x24, x22
000000000002eb28	b.eq	0x2eb7c
000000000002eb2c	ldr	x25, [x22, #0x8]
000000000002eb30	ldr	x27, [x24, #0x8]
000000000002eb34	cmp	x27, x25
000000000002eb38	csel	x2, x27, x25, lo
000000000002eb3c	cbz	x2, 0x2eb58
000000000002eb40	ldr	x1, [x24]
000000000002eb44	ldr	x0, [x22]
000000000002eb48	bl	0x554a0 ; symbol stub for: _memcmp
000000000002eb4c	cbz	w0, 0x2eb58
000000000002eb50	tbnz	w0, #0x1f, 0x2eb60
000000000002eb54	b	0x2eb7c
000000000002eb58	cmp	x25, x27
000000000002eb5c	b.hs	0x2eb7c
000000000002eb60	ldr	q0, [x24]
000000000002eb64	str	q0, [sp]
000000000002eb68	ldr	q0, [x22]
000000000002eb6c	str	q0, [x24]
000000000002eb70	ldr	q0, [sp]
000000000002eb74	str	q0, [x22]
000000000002eb78	add	w23, w23, #0x1
000000000002eb7c	cbnz	w23, 0x2eba8
000000000002eb80	mov	x0, x19
000000000002eb84	mov	x1, x24
000000000002eb88	bl	__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEbT0_S9_T_
000000000002eb8c	mov	x23, x0
000000000002eb90	add	x22, x24, #0x10
000000000002eb94	mov	x0, x22
000000000002eb98	mov	x1, x20
000000000002eb9c	bl	__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEbT0_S9_T_
000000000002eba0	cbnz	w0, 0x2ed1c
000000000002eba4	tbnz	w23, #0x0, 0x2e92c
000000000002eba8	sub	x8, x24, x19
000000000002ebac	sub	x9, x20, x24
000000000002ebb0	cmp	x8, x9
000000000002ebb4	b.ge	0x2ed08
000000000002ebb8	mov	x0, x19
000000000002ebbc	mov	x1, x24
000000000002ebc0	bl	__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_
000000000002ebc4	add	x22, x24, #0x10
000000000002ebc8	b	0x2e92c
000000000002ebcc	add	x22, x19, #0x10
000000000002ebd0	ldur	x23, [x20, #-0x8]
000000000002ebd4	cmp	x23, x24
000000000002ebd8	csel	x2, x23, x24, lo
000000000002ebdc	cbz	x2, 0x2ebf8
000000000002ebe0	ldr	x1, [x21]
000000000002ebe4	ldr	x0, [x19]
000000000002ebe8	bl	0x554a0 ; symbol stub for: _memcmp
000000000002ebec	cbz	w0, 0x2ebf8
000000000002ebf0	tbz	w0, #0x1f, 0x2ec18
000000000002ebf4	b	0x2ec00
000000000002ebf8	cmp	x24, x23
000000000002ebfc	b.hs	0x2ec18
000000000002ec00	cmp	x22, x21
000000000002ec04	b.ne	0x2ec64
000000000002ec08	b	0x2ef0c
000000000002ec0c	cmp	x24, x23
000000000002ec10	b.lo	0x2ec44
000000000002ec14	add	x22, x22, #0x10
000000000002ec18	cmp	x22, x21
000000000002ec1c	b.eq	0x2ef0c
000000000002ec20	ldr	x23, [x22, #0x8]
000000000002ec24	cmp	x23, x24
000000000002ec28	csel	x2, x23, x24, lo
000000000002ec2c	cbz	x2, 0x2ec0c
000000000002ec30	ldr	x1, [x22]
000000000002ec34	ldr	x0, [x19]
000000000002ec38	bl	0x554a0 ; symbol stub for: _memcmp
000000000002ec3c	cbz	w0, 0x2ec0c
000000000002ec40	tbz	w0, #0x1f, 0x2ec14
000000000002ec44	ldr	q0, [x22]
000000000002ec48	str	q0, [sp]
000000000002ec4c	ldr	q0, [x21]
000000000002ec50	str	q0, [x22], #0x10
000000000002ec54	ldr	q0, [sp]
000000000002ec58	str	q0, [x21]
000000000002ec5c	cmp	x22, x21
000000000002ec60	b.eq	0x2ef0c
000000000002ec64	mov	x23, x21
000000000002ec68	ldr	x24, [x19, #0x8]
000000000002ec6c	b	0x2ec7c
000000000002ec70	cmp	x24, x25
000000000002ec74	b.lo	0x2eca0
000000000002ec78	add	x22, x22, #0x10
000000000002ec7c	ldr	x25, [x22, #0x8]
000000000002ec80	cmp	x25, x24
000000000002ec84	csel	x2, x25, x24, lo
000000000002ec88	cbz	x2, 0x2ec70
000000000002ec8c	ldr	x1, [x22]
000000000002ec90	ldr	x0, [x19]
000000000002ec94	bl	0x554a0 ; symbol stub for: _memcmp
000000000002ec98	cbz	w0, 0x2ec70
000000000002ec9c	tbz	w0, #0x1f, 0x2ec78
000000000002eca0	sub	x8, x23, #0x10
000000000002eca4	b	0x2ecb0
000000000002eca8	sub	x8, x23, #0x10
000000000002ecac	tbz	w0, #0x1f, 0x2ece4
000000000002ecb0	mov	x23, x8
000000000002ecb4	ldr	x25, [x8, #0x8]
000000000002ecb8	cmp	x25, x24
000000000002ecbc	csel	x2, x25, x24, lo
000000000002ecc0	cbz	x2, 0x2ecd4
000000000002ecc4	ldr	x1, [x23]
000000000002ecc8	ldr	x0, [x19]
000000000002eccc	bl	0x554a0 ; symbol stub for: _memcmp
000000000002ecd0	cbnz	w0, 0x2eca8
000000000002ecd4	cmp	x24, x25
000000000002ecd8	b.hs	0x2ece4
000000000002ecdc	mov	w0, #-0x1
000000000002ece0	b	0x2eca8
000000000002ece4	cmp	x22, x23
000000000002ece8	b.hs	0x2e92c
000000000002ecec	ldr	q0, [x22]
000000000002ecf0	str	q0, [sp]
000000000002ecf4	ldr	q0, [x23]
000000000002ecf8	str	q0, [x22], #0x10
000000000002ecfc	ldr	q0, [sp]
000000000002ed00	str	q0, [x23]
000000000002ed04	b	0x2ec68
000000000002ed08	add	x0, x24, #0x10
000000000002ed0c	mov	x1, x20
000000000002ed10	bl	__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_
000000000002ed14	mov	x20, x24
000000000002ed18	b	0x2e920
000000000002ed1c	mov	x20, x24
000000000002ed20	tbz	w23, #0x0, 0x2e920
000000000002ed24	b	0x2ef0c
000000000002ed28	adr	x9, #0x28f18
000000000002ed2c	nop
000000000002ed30	adr	x10, #0x10
000000000002ed34	ldrb	w11, [x9, x8]
000000000002ed38	add	x10, x10, x11, lsl #2
000000000002ed3c	br	x10
000000000002ed40	ldur	x20, [x20, #-0x8]
000000000002ed44	ldr	x22, [x19, #0x8]
000000000002ed48	cmp	x22, x20
000000000002ed4c	csel	x2, x22, x20, lo
000000000002ed50	cbz	x2, 0x2eeec
000000000002ed54	ldr	x1, [x19]
000000000002ed58	ldr	x0, [x21]
000000000002ed5c	bl	0x554a0 ; symbol stub for: _memcmp
000000000002ed60	cbz	w0, 0x2eeec
000000000002ed64	tbnz	w0, #0x1f, 0x2eef4
000000000002ed68	b	0x2ef0c
000000000002ed6c	add	x1, x19, #0x10
000000000002ed70	mov	x0, x19
000000000002ed74	mov	x2, x21
000000000002ed78	ldp	x29, x30, [sp, #0x60]
000000000002ed7c	ldp	x20, x19, [sp, #0x50]
000000000002ed80	ldp	x22, x21, [sp, #0x40]
000000000002ed84	ldp	x24, x23, [sp, #0x30]
000000000002ed88	ldp	x26, x25, [sp, #0x20]
000000000002ed8c	ldp	x28, x27, [sp, #0x10]
000000000002ed90	add	sp, sp, #0x70
000000000002ed94	b	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002ed98	add	x1, x19, #0x10
000000000002ed9c	add	x2, x19, #0x20
000000000002eda0	mov	x0, x19
000000000002eda4	mov	x3, x21
000000000002eda8	ldp	x29, x30, [sp, #0x60]
000000000002edac	ldp	x20, x19, [sp, #0x50]
000000000002edb0	ldp	x22, x21, [sp, #0x40]
000000000002edb4	ldp	x24, x23, [sp, #0x30]
000000000002edb8	ldp	x26, x25, [sp, #0x20]
000000000002edbc	ldp	x28, x27, [sp, #0x10]
000000000002edc0	add	sp, sp, #0x70
000000000002edc4	b	__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_
000000000002edc8	add	x1, x19, #0x10
000000000002edcc	add	x2, x19, #0x20
000000000002edd0	add	x3, x19, #0x30
000000000002edd4	mov	x0, x19
000000000002edd8	mov	x4, x21
000000000002eddc	ldp	x29, x30, [sp, #0x60]
000000000002ede0	ldp	x20, x19, [sp, #0x50]
000000000002ede4	ldp	x22, x21, [sp, #0x40]
000000000002ede8	ldp	x24, x23, [sp, #0x30]
000000000002edec	ldp	x26, x25, [sp, #0x20]
000000000002edf0	ldp	x28, x27, [sp, #0x10]
000000000002edf4	add	sp, sp, #0x70
000000000002edf8	b	__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_
000000000002edfc	add	x21, x19, #0x20
000000000002ee00	add	x1, x19, #0x10
000000000002ee04	mov	x0, x19
000000000002ee08	mov	x2, x21
000000000002ee0c	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002ee10	add	x8, x19, #0x30
000000000002ee14	cmp	x8, x20
000000000002ee18	b.eq	0x2ef0c
000000000002ee1c	mov	x23, #0x0
000000000002ee20	b	0x2ee3c
000000000002ee24	mov	x25, x19
000000000002ee28	stp	x22, x24, [x25]
000000000002ee2c	add	x8, x21, #0x10
000000000002ee30	add	x23, x23, #0x10
000000000002ee34	cmp	x8, x20
000000000002ee38	b.eq	0x2ef0c
000000000002ee3c	mov	x26, x21
000000000002ee40	mov	x21, x8
000000000002ee44	ldr	x24, [x8, #0x8]
000000000002ee48	ldr	x25, [x26, #0x8]
000000000002ee4c	cmp	x25, x24
000000000002ee50	csel	x2, x25, x24, lo
000000000002ee54	cbz	x2, 0x2ee74
000000000002ee58	ldr	x1, [x26]
000000000002ee5c	ldr	x22, [x21]
000000000002ee60	mov	x0, x22
000000000002ee64	bl	0x554a0 ; symbol stub for: _memcmp
000000000002ee68	cbz	w0, 0x2ee74
000000000002ee6c	tbz	w0, #0x1f, 0x2ee2c
000000000002ee70	b	0x2ee80
000000000002ee74	cmp	x24, x25
000000000002ee78	b.hs	0x2ee2c
000000000002ee7c	ldr	x22, [x21]
000000000002ee80	mov	x27, x23
000000000002ee84	b	0x2eea0
000000000002ee88	cmp	x24, x26
000000000002ee8c	b.hs	0x2eee0
000000000002ee90	mov	w0, #-0x1
000000000002ee94	sub	x26, x25, #0x10
000000000002ee98	sub	x27, x27, #0x10
000000000002ee9c	tbz	w0, #0x1f, 0x2ee28
000000000002eea0	add	x8, x19, x27
000000000002eea4	ldr	q0, [x8, #0x20]
000000000002eea8	str	q0, [x8, #0x30]
000000000002eeac	cmn	x27, #0x20
000000000002eeb0	b.eq	0x2ee24
000000000002eeb4	mov	x25, x26
000000000002eeb8	ldr	x26, [x8, #0x18]
000000000002eebc	cmp	x26, x24
000000000002eec0	csel	x2, x26, x24, lo
000000000002eec4	cbz	x2, 0x2ee88
000000000002eec8	add	x8, x19, x27
000000000002eecc	ldr	x1, [x8, #0x10]
000000000002eed0	mov	x0, x22
000000000002eed4	bl	0x554a0 ; symbol stub for: _memcmp
000000000002eed8	cbnz	w0, 0x2ee94
000000000002eedc	b	0x2ee88
000000000002eee0	add	x8, x19, x27
000000000002eee4	add	x25, x8, #0x20
000000000002eee8	b	0x2ee28
000000000002eeec	cmp	x20, x22
000000000002eef0	b.hs	0x2ef0c
000000000002eef4	ldr	q0, [x19]
000000000002eef8	str	q0, [sp]
000000000002eefc	ldr	q0, [x21]
000000000002ef00	str	q0, [x19]
000000000002ef04	ldr	q0, [sp]
000000000002ef08	str	q0, [x21]
000000000002ef0c	ldp	x29, x30, [sp, #0x60]
000000000002ef10	ldp	x20, x19, [sp, #0x50]
000000000002ef14	ldp	x22, x21, [sp, #0x40]
000000000002ef18	ldp	x24, x23, [sp, #0x30]
000000000002ef1c	ldp	x26, x25, [sp, #0x20]
000000000002ef20	ldp	x28, x27, [sp, #0x10]
000000000002ef24	add	sp, sp, #0x70
000000000002ef28	ret
__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_:
000000000002ef2c	sub	sp, sp, #0x90
000000000002ef30	stp	x24, x23, [sp, #0x50]
000000000002ef34	stp	x22, x21, [sp, #0x60]
000000000002ef38	stp	x20, x19, [sp, #0x70]
000000000002ef3c	stp	x29, x30, [sp, #0x80]
000000000002ef40	add	x29, sp, #0x80
000000000002ef44	mov	x20, x2
000000000002ef48	mov	x19, x1
000000000002ef4c	mov	x21, x0
000000000002ef50	ldr	x23, [x1, #0x8]
000000000002ef54	ldr	x24, [x0, #0x8]
000000000002ef58	cmp	x24, x23
000000000002ef5c	csel	x2, x24, x23, lo
000000000002ef60	cbz	x2, 0x2ef8c
000000000002ef64	ldr	x1, [x21]
000000000002ef68	ldr	x0, [x19]
000000000002ef6c	bl	0x554a0 ; symbol stub for: _memcmp
000000000002ef70	mov	x22, x0
000000000002ef74	cbz	w0, 0x2ef8c
000000000002ef78	ldr	x24, [x20, #0x8]
000000000002ef7c	cmp	x23, x24
000000000002ef80	csel	x2, x23, x24, lo
000000000002ef84	cbnz	x2, 0x2efac
000000000002ef88	b	0x2efe0
000000000002ef8c	cmp	x23, x24
000000000002ef90	mov	w8, #-0x1
000000000002ef94	cneg	w8, w8, hs
000000000002ef98	csel	w22, wzr, w8, eq
000000000002ef9c	ldr	x24, [x20, #0x8]
000000000002efa0	cmp	x23, x24
000000000002efa4	csel	x2, x23, x24, lo
000000000002efa8	cbz	x2, 0x2efe0
000000000002efac	ldr	x1, [x19]
000000000002efb0	ldr	x0, [x20]
000000000002efb4	bl	0x554a0 ; symbol stub for: _memcmp
000000000002efb8	cbz	w0, 0x2efe0
000000000002efbc	tbnz	w22, #0x1f, 0x2eff4
000000000002efc0	tbnz	w0, #0x1f, 0x2f034
000000000002efc4	mov	w0, #0x0
000000000002efc8	ldp	x29, x30, [sp, #0x80]
000000000002efcc	ldp	x20, x19, [sp, #0x70]
000000000002efd0	ldp	x22, x21, [sp, #0x60]
000000000002efd4	ldp	x24, x23, [sp, #0x50]
000000000002efd8	add	sp, sp, #0x90
000000000002efdc	ret
000000000002efe0	cmp	x24, x23
000000000002efe4	mov	w8, #-0x1
000000000002efe8	cneg	w8, w8, hs
000000000002efec	csel	w0, wzr, w8, eq
000000000002eff0	tbz	w22, #0x1f, 0x2efc0
000000000002eff4	tbnz	w0, #0x1f, 0x2f070
000000000002eff8	ldr	q0, [x21]
000000000002effc	ldr	q1, [x19]
000000000002f000	str	q1, [x21]
000000000002f004	str	q0, [x19]
000000000002f008	ldr	x21, [x20, #0x8]
000000000002f00c	ldr	x22, [x19, #0x8]
000000000002f010	cmp	x22, x21
000000000002f014	csel	x2, x22, x21, lo
000000000002f018	cbz	x2, 0x2f084
000000000002f01c	ldr	x1, [x19]
000000000002f020	ldr	x0, [x20]
000000000002f024	bl	0x554a0 ; symbol stub for: _memcmp
000000000002f028	cbz	w0, 0x2f084
000000000002f02c	tbz	w0, #0x1f, 0x2f0d4
000000000002f030	b	0x2f08c
000000000002f034	ldr	q0, [x19]
000000000002f038	ldr	q1, [x20]
000000000002f03c	str	q1, [x19]
000000000002f040	str	q0, [x20]
000000000002f044	ldr	x20, [x19, #0x8]
000000000002f048	ldr	x22, [x21, #0x8]
000000000002f04c	cmp	x22, x20
000000000002f050	csel	x2, x22, x20, lo
000000000002f054	cbz	x2, 0x2f0a0
000000000002f058	ldr	x1, [x21]
000000000002f05c	ldr	x0, [x19]
000000000002f060	bl	0x554a0 ; symbol stub for: _memcmp
000000000002f064	cbz	w0, 0x2f0a0
000000000002f068	tbz	w0, #0x1f, 0x2f0d4
000000000002f06c	b	0x2f0a8
000000000002f070	ldr	q0, [x21]
000000000002f074	ldr	q1, [x20]
000000000002f078	str	q1, [x21]
000000000002f07c	str	q0, [x20]
000000000002f080	b	0x2f0d4
000000000002f084	cmp	x21, x22
000000000002f088	b.hs	0x2f0d4
000000000002f08c	ldr	q0, [x19]
000000000002f090	ldr	q1, [x20]
000000000002f094	str	q1, [x19]
000000000002f098	str	q0, [x20]
000000000002f09c	b	0x2f0b8
000000000002f0a0	cmp	x20, x22
000000000002f0a4	b.hs	0x2f0d4
000000000002f0a8	ldr	q0, [x21]
000000000002f0ac	ldr	q1, [x19]
000000000002f0b0	str	q1, [x21]
000000000002f0b4	str	q0, [x19]
000000000002f0b8	mov	w0, #0x2
000000000002f0bc	ldp	x29, x30, [sp, #0x80]
000000000002f0c0	ldp	x20, x19, [sp, #0x70]
000000000002f0c4	ldp	x22, x21, [sp, #0x60]
000000000002f0c8	ldp	x24, x23, [sp, #0x50]
000000000002f0cc	add	sp, sp, #0x90
000000000002f0d0	ret
000000000002f0d4	mov	w0, #0x1
000000000002f0d8	ldp	x29, x30, [sp, #0x80]
000000000002f0dc	ldp	x20, x19, [sp, #0x70]
000000000002f0e0	ldp	x22, x21, [sp, #0x60]
000000000002f0e4	ldp	x24, x23, [sp, #0x50]
000000000002f0e8	add	sp, sp, #0x90
000000000002f0ec	ret
__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_:
000000000002f0f0	sub	sp, sp, #0x80
000000000002f0f4	stp	x26, x25, [sp, #0x30]
000000000002f0f8	stp	x24, x23, [sp, #0x40]
000000000002f0fc	stp	x22, x21, [sp, #0x50]
000000000002f100	stp	x20, x19, [sp, #0x60]
000000000002f104	stp	x29, x30, [sp, #0x70]
000000000002f108	add	x29, sp, #0x70
000000000002f10c	mov	x24, x3
000000000002f110	mov	x23, x2
000000000002f114	mov	x19, x1
000000000002f118	mov	x20, x0
000000000002f11c	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002f120	mov	x21, x0
000000000002f124	mov	x22, x0
000000000002f128	ldr	x25, [x24, #0x8]
000000000002f12c	ldr	x26, [x23, #0x8]
000000000002f130	cmp	x26, x25
000000000002f134	csel	x2, x26, x25, lo
000000000002f138	cbz	x2, 0x2f154
000000000002f13c	ldr	x1, [x23]
000000000002f140	ldr	x0, [x24]
000000000002f144	bl	0x554a0 ; symbol stub for: _memcmp
000000000002f148	cbz	w0, 0x2f154
000000000002f14c	tbnz	w0, #0x1f, 0x2f15c
000000000002f150	b	0x2f200
000000000002f154	cmp	x25, x26
000000000002f158	b.hs	0x2f200
000000000002f15c	ldr	q0, [x23]
000000000002f160	ldr	q1, [x24]
000000000002f164	str	q1, [x23]
000000000002f168	str	q0, [x24]
000000000002f16c	add	w22, w21, #0x1
000000000002f170	ldr	x24, [x23, #0x8]
000000000002f174	ldr	x25, [x19, #0x8]
000000000002f178	cmp	x25, x24
000000000002f17c	csel	x2, x25, x24, lo
000000000002f180	cbz	x2, 0x2f19c
000000000002f184	ldr	x1, [x19]
000000000002f188	ldr	x0, [x23]
000000000002f18c	bl	0x554a0 ; symbol stub for: _memcmp
000000000002f190	cbz	w0, 0x2f19c
000000000002f194	tbnz	w0, #0x1f, 0x2f1a4
000000000002f198	b	0x2f200
000000000002f19c	cmp	x24, x25
000000000002f1a0	b.hs	0x2f200
000000000002f1a4	ldr	q0, [x19]
000000000002f1a8	ldr	q1, [x23]
000000000002f1ac	str	q1, [x19]
000000000002f1b0	str	q0, [x23]
000000000002f1b4	add	w22, w21, #0x2
000000000002f1b8	ldr	x23, [x19, #0x8]
000000000002f1bc	ldr	x24, [x20, #0x8]
000000000002f1c0	cmp	x24, x23
000000000002f1c4	csel	x2, x24, x23, lo
000000000002f1c8	cbz	x2, 0x2f1e4
000000000002f1cc	ldr	x1, [x20]
000000000002f1d0	ldr	x0, [x19]
000000000002f1d4	bl	0x554a0 ; symbol stub for: _memcmp
000000000002f1d8	cbz	w0, 0x2f1e4
000000000002f1dc	tbnz	w0, #0x1f, 0x2f1ec
000000000002f1e0	b	0x2f200
000000000002f1e4	cmp	x23, x24
000000000002f1e8	b.hs	0x2f200
000000000002f1ec	ldr	q0, [x20]
000000000002f1f0	ldr	q1, [x19]
000000000002f1f4	str	q1, [x20]
000000000002f1f8	str	q0, [x19]
000000000002f1fc	add	w22, w21, #0x3
000000000002f200	mov	x0, x22
000000000002f204	ldp	x29, x30, [sp, #0x70]
000000000002f208	ldp	x20, x19, [sp, #0x60]
000000000002f20c	ldp	x22, x21, [sp, #0x50]
000000000002f210	ldp	x24, x23, [sp, #0x40]
000000000002f214	ldp	x26, x25, [sp, #0x30]
000000000002f218	add	sp, sp, #0x80
000000000002f21c	ret
__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_:
000000000002f220	sub	sp, sp, #0xa0
000000000002f224	stp	x28, x27, [sp, #0x40]
000000000002f228	stp	x26, x25, [sp, #0x50]
000000000002f22c	stp	x24, x23, [sp, #0x60]
000000000002f230	stp	x22, x21, [sp, #0x70]
000000000002f234	stp	x20, x19, [sp, #0x80]
000000000002f238	stp	x29, x30, [sp, #0x90]
000000000002f23c	add	x29, sp, #0x90
000000000002f240	mov	x25, x4
000000000002f244	mov	x24, x3
000000000002f248	mov	x23, x2
000000000002f24c	mov	x19, x1
000000000002f250	mov	x20, x0
000000000002f254	bl	__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_
000000000002f258	mov	x21, x0
000000000002f25c	mov	x22, x0
000000000002f260	ldr	x26, [x25, #0x8]
000000000002f264	ldr	x27, [x24, #0x8]
000000000002f268	cmp	x27, x26
000000000002f26c	csel	x2, x27, x26, lo
000000000002f270	cbz	x2, 0x2f28c
000000000002f274	ldr	x1, [x24]
000000000002f278	ldr	x0, [x25]
000000000002f27c	bl	0x554a0 ; symbol stub for: _memcmp
000000000002f280	cbz	w0, 0x2f28c
000000000002f284	tbnz	w0, #0x1f, 0x2f294
000000000002f288	b	0x2f380
000000000002f28c	cmp	x26, x27
000000000002f290	b.hs	0x2f380
000000000002f294	ldr	q0, [x24]
000000000002f298	ldr	q1, [x25]
000000000002f29c	str	q1, [x24]
000000000002f2a0	str	q0, [x25]
000000000002f2a4	add	w22, w21, #0x1
000000000002f2a8	ldr	x25, [x24, #0x8]
000000000002f2ac	ldr	x26, [x23, #0x8]
000000000002f2b0	cmp	x26, x25
000000000002f2b4	csel	x2, x26, x25, lo
000000000002f2b8	cbz	x2, 0x2f2d4
000000000002f2bc	ldr	x1, [x23]
000000000002f2c0	ldr	x0, [x24]
000000000002f2c4	bl	0x554a0 ; symbol stub for: _memcmp
000000000002f2c8	cbz	w0, 0x2f2d4
000000000002f2cc	tbnz	w0, #0x1f, 0x2f2dc
000000000002f2d0	b	0x2f380
000000000002f2d4	cmp	x25, x26
000000000002f2d8	b.hs	0x2f380
000000000002f2dc	ldr	q0, [x23]
000000000002f2e0	ldr	q1, [x24]
000000000002f2e4	str	q1, [x23]
000000000002f2e8	str	q0, [x24]
000000000002f2ec	add	w22, w21, #0x2
000000000002f2f0	ldr	x24, [x23, #0x8]
000000000002f2f4	ldr	x25, [x19, #0x8]
000000000002f2f8	cmp	x25, x24
000000000002f2fc	csel	x2, x25, x24, lo
000000000002f300	cbz	x2, 0x2f31c
000000000002f304	ldr	x1, [x19]
000000000002f308	ldr	x0, [x23]
000000000002f30c	bl	0x554a0 ; symbol stub for: _memcmp
000000000002f310	cbz	w0, 0x2f31c
000000000002f314	tbnz	w0, #0x1f, 0x2f324
000000000002f318	b	0x2f380
000000000002f31c	cmp	x24, x25
000000000002f320	b.hs	0x2f380
000000000002f324	ldr	q0, [x19]
000000000002f328	ldr	q1, [x23]
000000000002f32c	str	q1, [x19]
000000000002f330	str	q0, [x23]
000000000002f334	add	w22, w21, #0x3
000000000002f338	ldr	x23, [x19, #0x8]
000000000002f33c	ldr	x24, [x20, #0x8]
000000000002f340	cmp	x24, x23
000000000002f344	csel	x2, x24, x23, lo
000000000002f348	cbz	x2, 0x2f364
000000000002f34c	ldr	x1, [x20]
000000000002f350	ldr	x0, [x19]
000000000002f354	bl	0x554a0 ; symbol stub for: _memcmp
000000000002f358	cbz	w0, 0x2f364
000000000002f35c	tbnz	w0, #0x1f, 0x2f36c
000000000002f360	b	0x2f380
000000000002f364	cmp	x23, x24
000000000002f368	b.hs	0x2f380
000000000002f36c	ldr	q0, [x20]
000000000002f370	ldr	q1, [x19]
000000000002f374	str	q1, [x20]
000000000002f378	str	q0, [x19]
000000000002f37c	add	w22, w21, #0x4
000000000002f380	mov	x0, x22
000000000002f384	ldp	x29, x30, [sp, #0x90]
000000000002f388	ldp	x20, x19, [sp, #0x80]
000000000002f38c	ldp	x22, x21, [sp, #0x70]
000000000002f390	ldp	x24, x23, [sp, #0x60]
000000000002f394	ldp	x26, x25, [sp, #0x50]
000000000002f398	ldp	x28, x27, [sp, #0x40]
000000000002f39c	add	sp, sp, #0xa0
000000000002f3a0	ret
__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEbT0_S9_T_:
000000000002f3a4	sub	sp, sp, #0x70
000000000002f3a8	stp	x28, x27, [sp, #0x10]
000000000002f3ac	stp	x26, x25, [sp, #0x20]
000000000002f3b0	stp	x24, x23, [sp, #0x30]
000000000002f3b4	stp	x22, x21, [sp, #0x40]
000000000002f3b8	stp	x20, x19, [sp, #0x50]
000000000002f3bc	stp	x29, x30, [sp, #0x60]
000000000002f3c0	add	x29, sp, #0x60
000000000002f3c4	mov	x20, x1
000000000002f3c8	mov	x19, x0
000000000002f3cc	sub	x8, x1, x0
000000000002f3d0	asr	x8, x8, #4
000000000002f3d4	cmp	x8, #0x5
000000000002f3d8	b.hi	0x2f428
000000000002f3dc	mov	w0, #0x1
000000000002f3e0	adr	x9, #0x28866
000000000002f3e4	nop
000000000002f3e8	adr	x10, #0x10
000000000002f3ec	ldrb	w11, [x9, x8]
000000000002f3f0	add	x10, x10, x11, lsl #2
000000000002f3f4	br	x10
000000000002f3f8	sub	x21, x20, #0x10
000000000002f3fc	ldur	x20, [x20, #-0x8]
000000000002f400	ldr	x22, [x19, #0x8]
000000000002f404	cmp	x22, x20
000000000002f408	csel	x2, x22, x20, lo
000000000002f40c	cbz	x2, 0x2f57c
000000000002f410	ldr	x1, [x19]
000000000002f414	ldr	x0, [x21]
000000000002f418	bl	0x554a0 ; symbol stub for: _memcmp
000000000002f41c	cbz	w0, 0x2f57c
000000000002f420	tbnz	w0, #0x1f, 0x2f584
000000000002f424	b	0x2f594
000000000002f428	add	x21, x19, #0x20
000000000002f42c	add	x1, x19, #0x10
000000000002f430	mov	x0, x19
000000000002f434	mov	x2, x21
000000000002f438	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002f43c	add	x8, x19, #0x30
000000000002f440	cmp	x8, x20
000000000002f444	b.eq	0x2f594
000000000002f448	mov	x23, #0x0
000000000002f44c	mov	w24, #0x0
000000000002f450	b	0x2f478
000000000002f454	mov	x26, x19
000000000002f458	stp	x22, x25, [x26]
000000000002f45c	add	w24, w24, #0x1
000000000002f460	cmp	w24, #0x8
000000000002f464	b.eq	0x2f5b8
000000000002f468	add	x8, x21, #0x10
000000000002f46c	add	x23, x23, #0x10
000000000002f470	cmp	x8, x20
000000000002f474	b.eq	0x2f594
000000000002f478	mov	x27, x21
000000000002f47c	mov	x21, x8
000000000002f480	ldr	x25, [x8, #0x8]
000000000002f484	ldr	x26, [x27, #0x8]
000000000002f488	cmp	x26, x25
000000000002f48c	csel	x2, x26, x25, lo
000000000002f490	cbz	x2, 0x2f4b0
000000000002f494	ldr	x1, [x27]
000000000002f498	ldr	x22, [x21]
000000000002f49c	mov	x0, x22
000000000002f4a0	bl	0x554a0 ; symbol stub for: _memcmp
000000000002f4a4	cbz	w0, 0x2f4b0
000000000002f4a8	tbz	w0, #0x1f, 0x2f468
000000000002f4ac	b	0x2f4bc
000000000002f4b0	cmp	x25, x26
000000000002f4b4	b.hs	0x2f468
000000000002f4b8	ldr	x22, [x21]
000000000002f4bc	mov	x28, x23
000000000002f4c0	b	0x2f4dc
000000000002f4c4	cmp	x25, x27
000000000002f4c8	b.hs	0x2f51c
000000000002f4cc	mov	w0, #-0x1
000000000002f4d0	sub	x27, x26, #0x10
000000000002f4d4	sub	x28, x28, #0x10
000000000002f4d8	tbz	w0, #0x1f, 0x2f458
000000000002f4dc	add	x8, x19, x28
000000000002f4e0	ldr	q0, [x8, #0x20]
000000000002f4e4	str	q0, [x8, #0x30]
000000000002f4e8	cmn	x28, #0x20
000000000002f4ec	b.eq	0x2f454
000000000002f4f0	mov	x26, x27
000000000002f4f4	ldr	x27, [x8, #0x18]
000000000002f4f8	cmp	x27, x25
000000000002f4fc	csel	x2, x27, x25, lo
000000000002f500	cbz	x2, 0x2f4c4
000000000002f504	add	x8, x19, x28
000000000002f508	ldr	x1, [x8, #0x10]
000000000002f50c	mov	x0, x22
000000000002f510	bl	0x554a0 ; symbol stub for: _memcmp
000000000002f514	cbnz	w0, 0x2f4d0
000000000002f518	b	0x2f4c4
000000000002f51c	add	x8, x19, x28
000000000002f520	add	x26, x8, #0x20
000000000002f524	b	0x2f458
000000000002f528	add	x1, x19, #0x10
000000000002f52c	sub	x2, x20, #0x10
000000000002f530	mov	x0, x19
000000000002f534	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002f538	mov	w0, #0x1
000000000002f53c	b	0x2f598
000000000002f540	add	x1, x19, #0x10
000000000002f544	add	x2, x19, #0x20
000000000002f548	sub	x3, x20, #0x10
000000000002f54c	mov	x0, x19
000000000002f550	bl	__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_
000000000002f554	mov	w0, #0x1
000000000002f558	b	0x2f598
000000000002f55c	add	x1, x19, #0x10
000000000002f560	add	x2, x19, #0x20
000000000002f564	add	x3, x19, #0x30
000000000002f568	sub	x4, x20, #0x10
000000000002f56c	mov	x0, x19
000000000002f570	bl	__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_
000000000002f574	mov	w0, #0x1
000000000002f578	b	0x2f598
000000000002f57c	cmp	x20, x22
000000000002f580	b.hs	0x2f594
000000000002f584	ldr	q0, [x19]
000000000002f588	ldr	q1, [x21]
000000000002f58c	str	q1, [x19]
000000000002f590	str	q0, [x21]
000000000002f594	mov	w0, #0x1
000000000002f598	ldp	x29, x30, [sp, #0x60]
000000000002f59c	ldp	x20, x19, [sp, #0x50]
000000000002f5a0	ldp	x22, x21, [sp, #0x40]
000000000002f5a4	ldp	x24, x23, [sp, #0x30]
000000000002f5a8	ldp	x26, x25, [sp, #0x20]
000000000002f5ac	ldp	x28, x27, [sp, #0x10]
000000000002f5b0	add	sp, sp, #0x70
000000000002f5b4	ret
000000000002f5b8	add	x8, x21, #0x10
000000000002f5bc	cmp	x8, x20
000000000002f5c0	cset	w0, eq
000000000002f5c4	b	0x2f598
__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader:
000000000002f5c8	stp	x22, x21, [sp, #-0x30]!
000000000002f5cc	stp	x20, x19, [sp, #0x10]
000000000002f5d0	stp	x29, x30, [sp, #0x20]
000000000002f5d4	add	x29, sp, #0x20
000000000002f5d8	ldar	x21, [x0]
000000000002f5dc	and	x1, x21, #0xfffffffffffffffc
000000000002f5e0	ldr	x8, [x1]
000000000002f5e4	cmp	x1, #0x0
000000000002f5e8	ccmp	x8, x1, #0x4, ne
000000000002f5ec	b.ne	0x2f694
000000000002f5f0	tst	x21, #0x3
000000000002f5f4	b.ne	0x2f6a8
000000000002f5f8	mov	x19, x0
000000000002f5fc	adrp	x0, 75 ; 0x7a000
000000000002f600	add	x0, x0, #0x2c0
000000000002f604	ldr	x8, [x0]
000000000002f608	blr	x8
000000000002f60c	ldr	x20, [x0]
000000000002f610	add	x22, x20, #0xd8
000000000002f614	mov	w0, #0x48
000000000002f618	bl	__ZN6kotlin20allocateInObjectPoolEm
000000000002f61c	mov	x1, x0
000000000002f620	str	xzr, [x1, #0x18]!
000000000002f624	str	xzr, [x0]
000000000002f628	str	wzr, [x0, #0x20]
000000000002f62c	stp	xzr, x19, [x0, #0x28]
000000000002f630	stlr	x21, [x1]
000000000002f634	stp	x22, xzr, [x0, #0x38]
000000000002f638	mov	x8, x20
000000000002f63c	ldr	x9, [x8, #0xe0]!
000000000002f640	stp	x9, x8, [x0]
000000000002f644	str	x0, [x9, #0x8]
000000000002f648	str	x0, [x8]
000000000002f64c	ldr	x8, [x20, #0xf0]
000000000002f650	add	x8, x8, #0x1
000000000002f654	str	x8, [x20, #0xf0]
000000000002f658	str	x0, [x0, #0x40]
000000000002f65c	ldaxr	x22, [x19]
000000000002f660	cmp	x22, x21
000000000002f664	b.ne	0x2f67c
000000000002f668	stlxr	w8, x1, [x19]
000000000002f66c	cbnz	w8, 0x2f65c
000000000002f670	mov	w8, #0x1
000000000002f674	tbz	w8, #0x0, 0x2f688
000000000002f678	b	0x2f694
000000000002f67c	mov	w8, #0x0
000000000002f680	clrex
000000000002f684	tbnz	w8, #0x0, 0x2f694
000000000002f688	add	x0, x20, #0x8
000000000002f68c	bl	__ZN6kotlin2mm22ExtraObjectDataFactory22DestroyExtraObjectDataEPNS0_10ThreadDataERNS0_15ExtraObjectDataE
000000000002f690	mov	x1, x22
000000000002f694	mov	x0, x1
000000000002f698	ldp	x29, x30, [sp, #0x20]
000000000002f69c	ldp	x20, x19, [sp, #0x10]
000000000002f6a0	ldp	x22, x21, [sp], #0x30
000000000002f6a4	ret
000000000002f6a8	adr	x2, #0x2e970 ; literal pool for: "Object must not be tagged"
000000000002f6ac	nop
000000000002f6b0	mov	w0, #0x0
000000000002f6b4	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
000000000002f6b8	brk	#0x1
000000000002f6bc	bl	___clang_call_terminate
__ZN6kotlin2mm22ExtraObjectDataFactory22DestroyExtraObjectDataEPNS0_10ThreadDataERNS0_15ExtraObjectDataE:
000000000002f6c0	stp	x20, x19, [sp, #-0x20]!
000000000002f6c4	stp	x29, x30, [sp, #0x10]
000000000002f6c8	add	x29, sp, #0x10
000000000002f6cc	mov	x19, x0
000000000002f6d0	add	x8, x0, #0xd0
000000000002f6d4	sub	x20, x1, #0x8
000000000002f6d8	add	x9, x1, #0x20
000000000002f6dc	ldar	x9, [x9]
000000000002f6e0	cmp	x8, x9
000000000002f6e4	b.eq	0x2f71c
000000000002f6e8	mov	w0, #0x18
000000000002f6ec	bl	__ZN6kotlin20allocateInObjectPoolEm
000000000002f6f0	ldr	x8, [x19, #0xf0]!
000000000002f6f4	stp	x19, x20, [x0, #0x8]
000000000002f6f8	str	x8, [x0]
000000000002f6fc	str	x0, [x8, #0x8]
000000000002f700	str	x0, [x19]
000000000002f704	ldr	x8, [x19, #0x10]
000000000002f708	add	x8, x8, #0x1
000000000002f70c	str	x8, [x19, #0x10]
000000000002f710	ldp	x29, x30, [sp, #0x10]
000000000002f714	ldp	x20, x19, [sp], #0x20
000000000002f718	ret
000000000002f71c	ldr	x0, [x20, #0x30]
000000000002f720	ldp	x9, x8, [x0]
000000000002f724	str	x8, [x9, #0x8]
000000000002f728	ldr	x8, [x0, #0x8]
000000000002f72c	str	x9, [x8]
000000000002f730	ldr	x8, [x19, #0xe8]
000000000002f734	sub	x8, x8, #0x1
000000000002f738	str	x8, [x19, #0xe8]
000000000002f73c	ldp	x29, x30, [sp, #0x10]
000000000002f740	ldp	x20, x19, [sp], #0x20
000000000002f744	b	_mi_free
__ZN6kotlin2mm15ExtraObjectData9UninstallEv:
000000000002f748	stp	x22, x21, [sp, #-0x30]!
000000000002f74c	stp	x20, x19, [sp, #0x10]
000000000002f750	stp	x29, x30, [sp, #0x20]
000000000002f754	add	x29, sp, #0x20
000000000002f758	mov	x19, x0
000000000002f75c	add	x8, x0, #0x18
000000000002f760	ldar	x8, [x8]
000000000002f764	tbz	w8, #0x0, 0x2f770
000000000002f768	and	x8, x8, #0xfffffffffffffffe
000000000002f76c	ldr	x8, [x8, #0x8]
000000000002f770	mov	x9, x19
000000000002f774	ldr	x10, [x9], #0x10
000000000002f778	stlr	x10, [x8]
000000000002f77c	ldar	x8, [x9]
000000000002f780	cbz	x8, 0x2f7f4
000000000002f784	adrp	x0, 75 ; 0x7a000
000000000002f788	add	x0, x0, #0x2c0
000000000002f78c	ldr	x9, [x0]
000000000002f790	blr	x9
000000000002f794	ldr	x22, [x0]
000000000002f798	add	x20, x22, #0x138
000000000002f79c	mov	w9, #0x1
000000000002f7a0	ldaxr	w21, [x20]
000000000002f7a4	stlxr	w10, w9, [x20]
000000000002f7a8	cbnz	w10, 0x2f7a0
000000000002f7ac	nop
000000000002f7b0	ldr	x1, #0x64d30
000000000002f7b4	mov	x0, x8
000000000002f7b8	mov	w2, #0x0
000000000002f7bc	bl	0x55584 ; Objc message: -[x0 initWithDouble:]
000000000002f7c0	cbz	x22, 0x2f7f4
000000000002f7c4	ldaxr	w8, [x20]
000000000002f7c8	stlxr	w9, w21, [x20]
000000000002f7cc	cbnz	w9, 0x2f7c4
000000000002f7d0	cbnz	w21, 0x2f7f4
000000000002f7d4	cmp	w8, #0x1
000000000002f7d8	b.ne	0x2f7f4
000000000002f7dc	adr	x8, #0x64aad
000000000002f7e0	nop
000000000002f7e4	ldarb	w8, [x8]
000000000002f7e8	tbz	w8, #0x0, 0x2f7f4
000000000002f7ec	mov	x0, x20
000000000002f7f0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002f7f4	add	x8, x19, #0x10
000000000002f7f8	stlr	xzr, [x8]
000000000002f7fc	ldp	x29, x30, [sp, #0x20]
000000000002f800	ldp	x20, x19, [sp, #0x10]
000000000002f804	ldp	x22, x21, [sp], #0x30
000000000002f808	ret
000000000002f80c	mov	x19, x0
000000000002f810	cbz	x22, 0x2f844
000000000002f814	ldaxr	w8, [x20]
000000000002f818	stlxr	w9, w21, [x20]
000000000002f81c	cbnz	w9, 0x2f814
000000000002f820	cbnz	w21, 0x2f844
000000000002f824	cmp	w8, #0x1
000000000002f828	b.ne	0x2f844
000000000002f82c	adr	x8, #0x64a5d
000000000002f830	nop
000000000002f834	ldarb	w8, [x8]
000000000002f838	tbz	w8, #0x0, 0x2f844
000000000002f83c	mov	x0, x20
000000000002f840	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002f844	mov	x0, x19
000000000002f848	bl	___clang_call_terminate
_AddTLSRecord:
000000000002f84c	stp	x28, x27, [sp, #-0x60]!
000000000002f850	stp	x26, x25, [sp, #0x10]
000000000002f854	stp	x24, x23, [sp, #0x20]
000000000002f858	stp	x22, x21, [sp, #0x30]
000000000002f85c	stp	x20, x19, [sp, #0x40]
000000000002f860	stp	x29, x30, [sp, #0x50]
000000000002f864	add	x29, sp, #0x50
000000000002f868	mov	x19, x2
000000000002f86c	mov	x22, x1
000000000002f870	mov	x20, x0
000000000002f874	add	x21, x0, #0x60
000000000002f878	lsr	x8, x1, #32
000000000002f87c	lsl	w9, w22, #3
000000000002f880	add	x9, x9, #0x8
000000000002f884	eor	x9, x9, x8
000000000002f888	mov	x10, #0x2d69
000000000002f88c	movk	x10, #0xeb38, lsl #16
000000000002f890	movk	x10, #0xea08, lsl #32
000000000002f894	movk	x10, #0x9ddf, lsl #48
000000000002f898	mul	x9, x9, x10
000000000002f89c	eor	x8, x9, x8
000000000002f8a0	eor	x8, x8, x9, lsr #47
000000000002f8a4	mul	x8, x8, x10
000000000002f8a8	eor	x8, x8, x8, lsr #47
000000000002f8ac	mul	x25, x8, x10
000000000002f8b0	ldr	x24, [x0, #0x68]
000000000002f8b4	cbz	x24, 0x2f8dc
000000000002f8b8	fmov	d0, x24
000000000002f8bc	cnt.8b	v0, v0
000000000002f8c0	uaddlv.8b	h0, v0
000000000002f8c4	fmov	w8, s0
000000000002f8c8	cmp	x8, #0x1
000000000002f8cc	b.hi	0x2f8e8
000000000002f8d0	sub	x9, x24, #0x1
000000000002f8d4	and	x9, x25, x9
000000000002f8d8	b	0x2f8fc
000000000002f8dc	mov	x26, x20
000000000002f8e0	ldr	w27, [x26, #0x8c]!
000000000002f8e4	b	0x2fa24
000000000002f8e8	mov	x9, x25
000000000002f8ec	cmp	x25, x24
000000000002f8f0	b.lo	0x2f8fc
000000000002f8f4	udiv	x9, x25, x24
000000000002f8f8	msub	x9, x9, x24, x25
000000000002f8fc	ldr	x10, [x21]
000000000002f900	ldr	x10, [x10, x9, lsl #3]
000000000002f904	cbz	x10, 0x2f990
000000000002f908	ldr	x10, [x10]
000000000002f90c	cbz	x10, 0x2f990
000000000002f910	sub	x11, x24, #0x1
000000000002f914	b	0x2f92c
000000000002f918	ldr	x12, [x10, #0x10]
000000000002f91c	cmp	x12, x22
000000000002f920	b.eq	0x2fc08
000000000002f924	ldr	x10, [x10]
000000000002f928	cbz	x10, 0x2f960
000000000002f92c	ldr	x12, [x10, #0x8]
000000000002f930	cmp	x12, x25
000000000002f934	b.eq	0x2f918
000000000002f938	cmp	x8, #0x1
000000000002f93c	b.hi	0x2f948
000000000002f940	and	x12, x12, x11
000000000002f944	b	0x2f958
000000000002f948	cmp	x12, x24
000000000002f94c	b.lo	0x2f958
000000000002f950	udiv	x13, x12, x24
000000000002f954	msub	x12, x13, x24, x12
000000000002f958	cmp	x12, x9
000000000002f95c	b.eq	0x2f924
000000000002f960	mov	x26, x20
000000000002f964	ldr	w27, [x26, #0x8c]!
000000000002f968	cbz	x24, 0x2f8e4
000000000002f96c	fmov	d0, x24
000000000002f970	cnt.8b	v0, v0
000000000002f974	uaddlv.8b	h0, v0
000000000002f978	fmov	w8, s0
000000000002f97c	cmp	x8, #0x1
000000000002f980	b.hi	0x2f9b0
000000000002f984	sub	x9, x24, #0x1
000000000002f988	and	x28, x25, x9
000000000002f98c	b	0x2f9c8
000000000002f990	mov	x26, x20
000000000002f994	ldr	w27, [x26, #0x8c]!
000000000002f998	fmov	d0, x24
000000000002f99c	cnt.8b	v0, v0
000000000002f9a0	uaddlv.8b	h0, v0
000000000002f9a4	fmov	w8, s0
000000000002f9a8	cmp	x8, #0x1
000000000002f9ac	b.ls	0x2f984
000000000002f9b0	mov	x28, x25
000000000002f9b4	cmp	x25, x24
000000000002f9b8	b.lo	0x2f9c8
000000000002f9bc	udiv	x9, x25, x24
000000000002f9c0	mul	x9, x9, x24
000000000002f9c4	sub	x28, x25, x9
000000000002f9c8	ldr	x9, [x21]
000000000002f9cc	ldr	x9, [x9, x28, lsl #3]
000000000002f9d0	cbz	x9, 0x2fa24
000000000002f9d4	sub	x10, x24, #0x1
000000000002f9d8	b	0x2f9f4
000000000002f9dc	and	x11, x11, x10
000000000002f9e0	cmp	x11, x28
000000000002f9e4	b.ne	0x2fa24
000000000002f9e8	ldr	x11, [x9, #0x10]
000000000002f9ec	cmp	x11, x22
000000000002f9f0	b.eq	0x2fc00
000000000002f9f4	ldr	x9, [x9]
000000000002f9f8	cbz	x9, 0x2fa24
000000000002f9fc	ldr	x11, [x9, #0x8]
000000000002fa00	cmp	x11, x25
000000000002fa04	b.eq	0x2f9e8
000000000002fa08	cmp	x8, #0x1
000000000002fa0c	b.ls	0x2f9dc
000000000002fa10	cmp	x11, x24
000000000002fa14	b.lo	0x2f9e0
000000000002fa18	udiv	x12, x11, x24
000000000002fa1c	msub	x11, x12, x24, x11
000000000002fa20	b	0x2f9e0
000000000002fa24	mov	w0, #0x1
000000000002fa28	mov	w1, #0x20
000000000002fa2c	bl	0x553d4 ; symbol stub for: _calloc
000000000002fa30	mov	x23, x0
000000000002fa34	mov	w8, w27
000000000002fa38	bfi	x8, x19, #32, #32
000000000002fa3c	stp	x22, x8, [x0, #0x10]
000000000002fa40	str	x25, [x0, #0x8]
000000000002fa44	ldr	x8, [x20, #0x78]
000000000002fa48	add	x8, x8, #0x1
000000000002fa4c	ucvtf	s0, x8
000000000002fa50	ldr	s1, [x20, #0x80]
000000000002fa54	cbz	x24, 0x2fa68
000000000002fa58	ucvtf	s2, x24
000000000002fa5c	fmul	s2, s1, s2
000000000002fa60	fcmp	s2, s0
000000000002fa64	b.pl	0x2fb70
000000000002fa68	cmp	x24, #0x3
000000000002fa6c	cset	w8, lo
000000000002fa70	sub	x9, x24, #0x1
000000000002fa74	tst	x24, x9
000000000002fa78	cset	w9, ne
000000000002fa7c	orr	w8, w8, w9
000000000002fa80	bfi	x8, x24, #1, #63
000000000002fa84	fdiv	s0, s0, s1
000000000002fa88	fcvtpu	x9, s0
000000000002fa8c	cmp	x8, x9
000000000002fa90	csel	x22, x9, x8, lo
000000000002fa94	subs	x8, x22, #0x1
000000000002fa98	b.ne	0x2faa4
000000000002fa9c	mov	w22, #0x2
000000000002faa0	b	0x2fabc
000000000002faa4	tst	x22, x8
000000000002faa8	b.eq	0x2fabc
000000000002faac	mov	x0, x22
000000000002fab0	bl	0x551dc ; symbol stub for: __ZNSt3__112__next_primeEm
000000000002fab4	mov	x22, x0
000000000002fab8	ldr	x24, [x20, #0x68]
000000000002fabc	cmp	x22, x24
000000000002fac0	b.ls	0x2fad4
000000000002fac4	mov	x0, x21
000000000002fac8	mov	x1, x22
000000000002facc	bl	__ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN6kotlin2mm18ThreadLocalStorage5EntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_NS_8equal_toIS2_EELb1EEENS3_11std_support9allocatorIS7_EEE8__rehashEm
000000000002fad0	b	0x2fb40
000000000002fad4	b.hs	0x2fb40
000000000002fad8	ldr	x8, [x20, #0x78]
000000000002fadc	ucvtf	s0, x8
000000000002fae0	ldr	s1, [x20, #0x80]
000000000002fae4	fdiv	s0, s0, s1
000000000002fae8	fcvtpu	x0, s0
000000000002faec	cmp	x24, #0x3
000000000002faf0	b.lo	0x2fb2c
000000000002faf4	fmov	d0, x24
000000000002faf8	cnt.8b	v0, v0
000000000002fafc	uaddlv.8b	h0, v0
000000000002fb00	fmov	w8, s0
000000000002fb04	cmp	x8, #0x1
000000000002fb08	b.hi	0x2fb2c
000000000002fb0c	sub	x8, x0, #0x1
000000000002fb10	clz	x8, x8
000000000002fb14	neg	x8, x8
000000000002fb18	mov	w9, #0x1
000000000002fb1c	lsl	x8, x9, x8
000000000002fb20	cmp	x0, #0x2
000000000002fb24	csel	x0, x0, x8, lo
000000000002fb28	b	0x2fb30
000000000002fb2c	bl	0x551dc ; symbol stub for: __ZNSt3__112__next_primeEm
000000000002fb30	cmp	x22, x0
000000000002fb34	csel	x22, x0, x22, lo
000000000002fb38	cmp	x22, x24
000000000002fb3c	b.lo	0x2fac4
000000000002fb40	ldr	x24, [x20, #0x68]
000000000002fb44	sub	x8, x24, #0x1
000000000002fb48	tst	x24, x8
000000000002fb4c	b.ne	0x2fb64
000000000002fb50	and	x28, x8, x25
000000000002fb54	ldr	x9, [x21]
000000000002fb58	ldr	x8, [x9, x28, lsl #3]
000000000002fb5c	cbnz	x8, 0x2fb7c
000000000002fb60	b	0x2fba0
000000000002fb64	cmp	x25, x24
000000000002fb68	b.hs	0x2fb88
000000000002fb6c	mov	x28, x25
000000000002fb70	ldr	x9, [x21]
000000000002fb74	ldr	x8, [x9, x28, lsl #3]
000000000002fb78	cbz	x8, 0x2fba0
000000000002fb7c	ldr	x9, [x8]
000000000002fb80	str	x9, [x23]
000000000002fb84	b	0x2fbec
000000000002fb88	udiv	x8, x25, x24
000000000002fb8c	mul	x8, x8, x24
000000000002fb90	sub	x28, x25, x8
000000000002fb94	ldr	x9, [x21]
000000000002fb98	ldr	x8, [x9, x28, lsl #3]
000000000002fb9c	cbnz	x8, 0x2fb7c
000000000002fba0	mov	x8, x20
000000000002fba4	ldr	x10, [x8, #0x70]!
000000000002fba8	str	x10, [x23]
000000000002fbac	str	x23, [x8]
000000000002fbb0	str	x8, [x9, x28, lsl #3]
000000000002fbb4	ldr	x8, [x23]
000000000002fbb8	cbz	x8, 0x2fbf0
000000000002fbbc	ldr	x8, [x8, #0x8]
000000000002fbc0	sub	x9, x24, #0x1
000000000002fbc4	tst	x24, x9
000000000002fbc8	b.ne	0x2fbd4
000000000002fbcc	and	x8, x8, x9
000000000002fbd0	b	0x2fbe4
000000000002fbd4	cmp	x8, x24
000000000002fbd8	b.lo	0x2fbe4
000000000002fbdc	udiv	x9, x8, x24
000000000002fbe0	msub	x8, x9, x24, x8
000000000002fbe4	ldr	x9, [x21]
000000000002fbe8	add	x8, x9, x8, lsl #3
000000000002fbec	str	x23, [x8]
000000000002fbf0	ldr	x8, [x20, #0x78]
000000000002fbf4	add	x8, x8, #0x1
000000000002fbf8	str	x8, [x20, #0x78]
000000000002fbfc	ldr	w27, [x20, #0x8c]
000000000002fc00	add	w8, w27, w19
000000000002fc04	str	w8, [x26]
000000000002fc08	ldp	x29, x30, [sp, #0x50]
000000000002fc0c	ldp	x20, x19, [sp, #0x40]
000000000002fc10	ldp	x22, x21, [sp, #0x30]
000000000002fc14	ldp	x24, x23, [sp, #0x20]
000000000002fc18	ldp	x26, x25, [sp, #0x10]
000000000002fc1c	ldp	x28, x27, [sp], #0x60
000000000002fc20	ret
000000000002fc24	mov	x19, x0
000000000002fc28	cbz	x23, 0x2fc34
000000000002fc2c	mov	x0, x23
000000000002fc30	bl	0x55458 ; symbol stub for: _free
000000000002fc34	mov	x0, x19
000000000002fc38	bl	___clang_call_terminate
__ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN6kotlin2mm18ThreadLocalStorage5EntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_NS_8equal_toIS2_EELb1EEENS3_11std_support9allocatorIS7_EEE8__rehashEm:
000000000002fc3c	stp	x20, x19, [sp, #-0x20]!
000000000002fc40	stp	x29, x30, [sp, #0x10]
000000000002fc44	add	x29, sp, #0x10
000000000002fc48	mov	x19, x0
000000000002fc4c	cbz	x1, 0x2fcc4
000000000002fc50	mov	x20, x1
000000000002fc54	mov	x0, x1
000000000002fc58	mov	w1, #0x8
000000000002fc5c	bl	0x553d4 ; symbol stub for: _calloc
000000000002fc60	mov	x8, x0
000000000002fc64	ldr	x0, [x19]
000000000002fc68	str	x8, [x19]
000000000002fc6c	cbz	x0, 0x2fc74
000000000002fc70	bl	0x55458 ; symbol stub for: _free
000000000002fc74	mov	x8, #0x0
000000000002fc78	str	x20, [x19, #0x8]
000000000002fc7c	ldr	x9, [x19]
000000000002fc80	str	xzr, [x9, x8, lsl #3]
000000000002fc84	add	x8, x8, #0x1
000000000002fc88	cmp	x8, x20
000000000002fc8c	b.lo	0x2fc7c
000000000002fc90	mov	x11, x19
000000000002fc94	ldr	x8, [x11, #0x10]!
000000000002fc98	cbz	x8, 0x2fda0
000000000002fc9c	ldr	x9, [x8, #0x8]
000000000002fca0	fmov	d0, x20
000000000002fca4	cnt.8b	v0, v0
000000000002fca8	uaddlv.8b	h0, v0
000000000002fcac	fmov	w10, s0
000000000002fcb0	cmp	x10, #0x1
000000000002fcb4	b.hi	0x2fcdc
000000000002fcb8	sub	x12, x20, #0x1
000000000002fcbc	and	x9, x9, x12
000000000002fcc0	b	0x2fcec
000000000002fcc4	ldr	x0, [x19]
000000000002fcc8	str	xzr, [x19]
000000000002fccc	cbz	x0, 0x2fcd4
000000000002fcd0	bl	0x55458 ; symbol stub for: _free
000000000002fcd4	str	xzr, [x19, #0x8]
000000000002fcd8	b	0x2fda0
000000000002fcdc	cmp	x9, x20
000000000002fce0	b.lo	0x2fcec
000000000002fce4	udiv	x12, x9, x20
000000000002fce8	msub	x9, x12, x20, x9
000000000002fcec	ldr	x12, [x19]
000000000002fcf0	str	x11, [x12, x9, lsl #3]
000000000002fcf4	ldr	x12, [x8]
000000000002fcf8	cbz	x12, 0x2fda0
000000000002fcfc	sub	x11, x20, #0x1
000000000002fd00	b	0x2fd10
000000000002fd04	mov	x8, x12
000000000002fd08	ldr	x12, [x8]
000000000002fd0c	cbz	x12, 0x2fda0
000000000002fd10	ldr	x13, [x12, #0x8]
000000000002fd14	cmp	x10, #0x1
000000000002fd18	b.hi	0x2fd24
000000000002fd1c	and	x13, x13, x11
000000000002fd20	b	0x2fd34
000000000002fd24	cmp	x13, x20
000000000002fd28	b.lo	0x2fd34
000000000002fd2c	udiv	x14, x13, x20
000000000002fd30	msub	x13, x14, x20, x13
000000000002fd34	cmp	x13, x9
000000000002fd38	b.eq	0x2fd04
000000000002fd3c	ldr	x14, [x19]
000000000002fd40	ldr	x16, [x14, x13, lsl #3]
000000000002fd44	mov	x15, x12
000000000002fd48	cbz	x16, 0x2fd90
000000000002fd4c	mov	x14, x15
000000000002fd50	ldr	x15, [x15]
000000000002fd54	cbz	x15, 0x2fd68
000000000002fd58	ldr	x16, [x12, #0x10]
000000000002fd5c	ldr	x17, [x15, #0x10]
000000000002fd60	cmp	x16, x17
000000000002fd64	b.eq	0x2fd4c
000000000002fd68	str	x15, [x8]
000000000002fd6c	ldr	x15, [x19]
000000000002fd70	lsl	x13, x13, #3
000000000002fd74	ldr	x15, [x15, x13]
000000000002fd78	ldr	x15, [x15]
000000000002fd7c	str	x15, [x14]
000000000002fd80	ldr	x14, [x19]
000000000002fd84	ldr	x13, [x14, x13]
000000000002fd88	str	x12, [x13]
000000000002fd8c	b	0x2fd08
000000000002fd90	str	x8, [x14, x13, lsl #3]
000000000002fd94	mov	x8, x12
000000000002fd98	mov	x9, x13
000000000002fd9c	b	0x2fd08
000000000002fda0	ldp	x29, x30, [sp, #0x10]
000000000002fda4	ldp	x20, x19, [sp], #0x20
000000000002fda8	ret
_LookupTLS:
000000000002fdac	stp	x29, x30, [sp, #-0x10]!
000000000002fdb0	mov	x29, sp
000000000002fdb4	adrp	x0, 75 ; 0x7a000
000000000002fdb8	add	x0, x0, #0x2c0
000000000002fdbc	ldr	x8, [x0]
000000000002fdc0	blr	x8
000000000002fdc4	ldr	x8, [x0]
000000000002fdc8	ldr	x10, [x8, #0x90]
000000000002fdcc	adr	x9, #0x6455c
000000000002fdd0	nop
000000000002fdd4	cmp	x10, x9
000000000002fdd8	b.eq	0x2fe40
000000000002fddc	ldr	x10, [x8, #0x68]
000000000002fde0	cbz	x10, 0x2ff64
000000000002fde4	fmov	d0, x10
000000000002fde8	cnt.8b	v0, v0
000000000002fdec	uaddlv.8b	h0, v0
000000000002fdf0	fmov	w11, s0
000000000002fdf4	cmp	x11, #0x1
000000000002fdf8	b.hi	0x2fe5c
000000000002fdfc	sub	x12, x10, #0x1
000000000002fe00	lsr	x13, x9, #32
000000000002fe04	lsl	w14, w9, #3
000000000002fe08	add	x14, x14, #0x8
000000000002fe0c	eor	x14, x14, x13
000000000002fe10	mov	x15, #0x2d69
000000000002fe14	movk	x15, #0xeb38, lsl #16
000000000002fe18	movk	x15, #0xea08, lsl #32
000000000002fe1c	movk	x15, #0x9ddf, lsl #48
000000000002fe20	mul	x14, x14, x15
000000000002fe24	eor	x13, x14, x13
000000000002fe28	eor	x13, x13, x14, lsr #47
000000000002fe2c	mul	x13, x13, x15
000000000002fe30	eor	x13, x13, x13, lsr #47
000000000002fe34	mul	x13, x13, x15
000000000002fe38	and	x13, x12, x13
000000000002fe3c	b	0x2fec8
000000000002fe40	add	x12, x8, #0x98
000000000002fe44	ldr	x9, [x12]
000000000002fe48	lsl	x9, x9, #32
000000000002fe4c	ldr	x8, [x8, #0x48]
000000000002fe50	add	x0, x8, x9, asr #29
000000000002fe54	ldp	x29, x30, [sp], #0x10
000000000002fe58	ret
000000000002fe5c	lsr	x12, x9, #32
000000000002fe60	lsl	w13, w9, #3
000000000002fe64	add	x13, x13, #0x8
000000000002fe68	eor	x13, x13, x12
000000000002fe6c	mov	x14, #0x2d69
000000000002fe70	movk	x14, #0xeb38, lsl #16
000000000002fe74	movk	x14, #0xea08, lsl #32
000000000002fe78	movk	x14, #0x9ddf, lsl #48
000000000002fe7c	mul	x13, x13, x14
000000000002fe80	eor	x15, x13, x12
000000000002fe84	eor	x13, x15, x13, lsr #47
000000000002fe88	mul	x13, x13, x14
000000000002fe8c	eor	x13, x13, x13, lsr #47
000000000002fe90	mul	x13, x13, x14
000000000002fe94	cmp	x10, x13
000000000002fe98	b.hi	0x2fec8
000000000002fe9c	lsl	w13, w9, #3
000000000002fea0	add	x13, x13, #0x8
000000000002fea4	eor	x13, x13, x12
000000000002fea8	mul	x13, x13, x14
000000000002feac	eor	x12, x13, x12
000000000002feb0	eor	x12, x12, x13, lsr #47
000000000002feb4	mul	x12, x12, x14
000000000002feb8	eor	x12, x12, x12, lsr #47
000000000002febc	mul	x12, x12, x14
000000000002fec0	udiv	x13, x12, x10
000000000002fec4	msub	x13, x13, x10, x12
000000000002fec8	ldr	x12, [x8, #0x60]
000000000002fecc	ldr	x12, [x12, x13, lsl #3]
000000000002fed0	cbz	x12, 0x2ff68
000000000002fed4	ldr	x12, [x12]
000000000002fed8	cbz	x12, 0x2ff68
000000000002fedc	sub	x14, x10, #0x1
000000000002fee0	lsr	x15, x9, #32
000000000002fee4	mov	x16, #0x2d69
000000000002fee8	movk	x16, #0xeb38, lsl #16
000000000002feec	movk	x16, #0xea08, lsl #32
000000000002fef0	movk	x16, #0x9ddf, lsl #48
000000000002fef4	b	0x2ff0c
000000000002fef8	ldr	x17, [x12, #0x10]
000000000002fefc	cmp	x17, x9
000000000002ff00	b.eq	0x2ff68
000000000002ff04	ldr	x12, [x12]
000000000002ff08	cbz	x12, 0x2ff68
000000000002ff0c	ldr	x17, [x12, #0x8]
000000000002ff10	lsl	w0, w9, #3
000000000002ff14	add	x0, x0, #0x8
000000000002ff18	eor	x0, x0, x15
000000000002ff1c	mul	x0, x0, x16
000000000002ff20	eor	x1, x0, x15
000000000002ff24	eor	x0, x1, x0, lsr #47
000000000002ff28	mul	x0, x0, x16
000000000002ff2c	eor	x0, x0, x0, lsr #47
000000000002ff30	mul	x0, x0, x16
000000000002ff34	cmp	x17, x0
000000000002ff38	b.eq	0x2fef8
000000000002ff3c	cmp	x11, #0x1
000000000002ff40	b.hi	0x2ff4c
000000000002ff44	and	x17, x17, x14
000000000002ff48	b	0x2ff5c
000000000002ff4c	cmp	x17, x10
000000000002ff50	b.lo	0x2ff5c
000000000002ff54	udiv	x0, x17, x10
000000000002ff58	msub	x17, x0, x10, x17
000000000002ff5c	cmp	x17, x13
000000000002ff60	b.eq	0x2ff04
000000000002ff64	mov	x12, #0x0
000000000002ff68	ldr	x9, [x12, #0x10]
000000000002ff6c	str	x9, [x8, #0x90]
000000000002ff70	ldr	x9, [x12, #0x18]!
000000000002ff74	str	x9, [x8, #0x98]
000000000002ff78	ldr	x9, [x12]
000000000002ff7c	lsl	x9, x9, #32
000000000002ff80	ldr	x8, [x8, #0x48]
000000000002ff84	add	x0, x8, x9, asr #29
000000000002ff88	ldp	x29, x30, [sp], #0x10
000000000002ff8c	ret
__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE:
000000000002ff90	stp	x20, x19, [sp, #-0x20]!
000000000002ff94	stp	x29, x30, [sp, #0x10]
000000000002ff98	add	x29, sp, #0x10
000000000002ff9c	mov	x20, x1
000000000002ffa0	mov	x19, x0
000000000002ffa4	add	x8, x0, #0x98
000000000002ffa8	add	x9, x1, #0x8
000000000002ffac	ldar	x9, [x9]
000000000002ffb0	cmp	x8, x9
000000000002ffb4	b.eq	0x2fff0
000000000002ffb8	mov	w0, #0x1
000000000002ffbc	mov	w1, #0x18
000000000002ffc0	bl	0x553d4 ; symbol stub for: _calloc
000000000002ffc4	ldr	x8, [x19, #0xb8]!
000000000002ffc8	stp	x19, x20, [x0, #0x8]
000000000002ffcc	str	x8, [x0]
000000000002ffd0	str	x0, [x8, #0x8]
000000000002ffd4	str	x0, [x19]
000000000002ffd8	ldr	x8, [x19, #0x10]
000000000002ffdc	add	x8, x8, #0x1
000000000002ffe0	str	x8, [x19, #0x10]
000000000002ffe4	ldp	x29, x30, [sp, #0x10]
000000000002ffe8	ldp	x20, x19, [sp], #0x20
000000000002ffec	ret
000000000002fff0	ldr	x0, [x20, #0x10]
000000000002fff4	ldp	x9, x8, [x0]
000000000002fff8	str	x8, [x9, #0x8]
000000000002fffc	ldr	x8, [x0, #0x8]
0000000000030000	str	x9, [x8]
0000000000030004	ldr	x8, [x19, #0xb0]
0000000000030008	sub	x8, x8, #0x1
000000000003000c	str	x8, [x19, #0xb0]
0000000000030010	ldp	x29, x30, [sp, #0x10]
0000000000030014	ldp	x20, x19, [sp], #0x20
0000000000030018	b	0x55458 ; symbol stub for: _free
__ZN18ExceptionObjHolder5ThrowEP9ObjHeader:
000000000003001c	stp	x20, x19, [sp, #-0x20]!
0000000000030020	stp	x29, x30, [sp, #0x10]
0000000000030024	add	x29, sp, #0x10
0000000000030028	mov	x19, x0
000000000003002c	mov	w0, #0x10
0000000000030030	bl	0x55320 ; symbol stub for: ___cxa_allocate_exception
0000000000030034	mov	x1, x19
0000000000030038	bl	__ZN12_GLOBAL__N_122ExceptionObjHolderImplC1EP9ObjHeader
000000000003003c	adr	x1, #0x409fc
0000000000030040	nop
0000000000030044	adr	x2, #0x90
0000000000030048	nop
000000000003004c	bl	0x55368 ; symbol stub for: ___cxa_throw
__ZN12_GLOBAL__N_122ExceptionObjHolderImplC1EP9ObjHeader:
0000000000030050	stp	x22, x21, [sp, #-0x30]!
0000000000030054	stp	x20, x19, [sp, #0x10]
0000000000030058	stp	x29, x30, [sp, #0x20]
000000000003005c	add	x29, sp, #0x20
0000000000030060	mov	x19, x1
0000000000030064	mov	x20, x0
0000000000030068	adr	x8, #0x409f8
000000000003006c	nop
0000000000030070	str	x8, [x0]
0000000000030074	adrp	x0, 74 ; 0x7a000
0000000000030078	add	x0, x0, #0x2c0
000000000003007c	ldr	x8, [x0]
0000000000030080	blr	x8
0000000000030084	ldr	x21, [x0]
0000000000030088	mov	w0, #0x1
000000000003008c	mov	w1, #0x28
0000000000030090	bl	0x553d4 ; symbol stub for: _calloc
0000000000030094	ldr	x8, [x21, #0xa8]!
0000000000030098	sub	x9, x21, #0x8
000000000003009c	stp	x8, x21, [x0]
00000000000300a0	str	x0, [x8, #0x8]
00000000000300a4	str	x0, [x21]
00000000000300a8	ldr	x8, [x21, #0x10]
00000000000300ac	add	x8, x8, #0x1
00000000000300b0	str	x8, [x21, #0x10]
00000000000300b4	stp	x9, x0, [x0, #0x18]
00000000000300b8	str	x19, [x0, #0x10]!
00000000000300bc	str	x0, [x20, #0x8]
00000000000300c0	mov	x0, x20
00000000000300c4	ldp	x29, x30, [sp, #0x20]
00000000000300c8	ldp	x20, x19, [sp, #0x10]
00000000000300cc	ldp	x22, x21, [sp], #0x30
00000000000300d0	ret
__ZN12_GLOBAL__N_122ExceptionObjHolderImplD1Ev:
00000000000300d4	stp	x22, x21, [sp, #-0x30]!
00000000000300d8	stp	x20, x19, [sp, #0x10]
00000000000300dc	stp	x29, x30, [sp, #0x20]
00000000000300e0	add	x29, sp, #0x20
00000000000300e4	mov	x19, x0
00000000000300e8	adr	x8, #0x40978
00000000000300ec	nop
00000000000300f0	str	x8, [x0]
00000000000300f4	adrp	x0, 74 ; 0x7a000
00000000000300f8	add	x0, x0, #0x2c0
00000000000300fc	ldr	x8, [x0]
0000000000030100	blr	x8
0000000000030104	ldr	x20, [x0]
0000000000030108	add	x8, x20, #0xa0
000000000003010c	ldr	x21, [x19, #0x8]
0000000000030110	add	x9, x21, #0x8
0000000000030114	ldar	x9, [x9]
0000000000030118	cmp	x8, x9
000000000003011c	b.eq	0x30160
0000000000030120	mov	w0, #0x1
0000000000030124	mov	w1, #0x18
0000000000030128	bl	0x553d4 ; symbol stub for: _calloc
000000000003012c	str	x21, [x0, #0x10]
0000000000030130	ldr	x8, [x20, #0xc0]!
0000000000030134	stp	x8, x20, [x0]
0000000000030138	str	x0, [x8, #0x8]
000000000003013c	str	x0, [x20]
0000000000030140	ldr	x8, [x20, #0x10]
0000000000030144	add	x8, x8, #0x1
0000000000030148	str	x8, [x20, #0x10]
000000000003014c	mov	x0, x19
0000000000030150	ldp	x29, x30, [sp, #0x20]
0000000000030154	ldp	x20, x19, [sp, #0x10]
0000000000030158	ldp	x22, x21, [sp], #0x30
000000000003015c	ret
0000000000030160	ldr	x0, [x21, #0x10]
0000000000030164	ldp	x9, x8, [x0]
0000000000030168	str	x8, [x9, #0x8]
000000000003016c	ldr	x8, [x0, #0x8]
0000000000030170	str	x9, [x8]
0000000000030174	ldr	x8, [x20, #0xb8]
0000000000030178	sub	x8, x8, #0x1
000000000003017c	str	x8, [x20, #0xb8]
0000000000030180	bl	0x55458 ; symbol stub for: _free
0000000000030184	mov	x0, x19
0000000000030188	ldp	x29, x30, [sp, #0x20]
000000000003018c	ldp	x20, x19, [sp, #0x10]
0000000000030190	ldp	x22, x21, [sp], #0x30
0000000000030194	ret
__ZN12_GLOBAL__N_122ExceptionObjHolderImplD0Ev:
0000000000030198	stp	x29, x30, [sp, #-0x10]!
000000000003019c	mov	x29, sp
00000000000301a0	bl	__ZN12_GLOBAL__N_122ExceptionObjHolderImplD1Ev
00000000000301a4	ldp	x29, x30, [sp], #0x10
00000000000301a8	b	0x55308 ; symbol stub for: __ZdlPv
__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv:
00000000000301ac	stp	x29, x30, [sp, #-0x10]!
00000000000301b0	mov	x29, sp
00000000000301b4	adrp	x0, 74 ; 0x7a000
00000000000301b8	add	x0, x0, #0x2c0
00000000000301bc	ldr	x8, [x0]
00000000000301c0	blr	x8
00000000000301c4	ldr	x8, [x0]
00000000000301c8	add	x0, x8, #0x138
00000000000301cc	ldp	x29, x30, [sp], #0x10
00000000000301d0	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
__ZN6kotlin2gc22ConcurrentMarkAndSweep10ThreadData14OnSuspendForGCEv:
00000000000301d4	sub	sp, sp, #0x80
00000000000301d8	stp	x22, x21, [sp, #0x50]
00000000000301dc	stp	x20, x19, [sp, #0x60]
00000000000301e0	stp	x29, x30, [sp, #0x70]
00000000000301e4	add	x29, sp, #0x70
00000000000301e8	mov	x19, x0
00000000000301ec	adr	x0, #0x49eb4
00000000000301f0	nop
00000000000301f4	stur	x0, [x29, #-0x30]
00000000000301f8	mov	w8, #0x1
00000000000301fc	sturb	w8, [x29, #-0x28]
0000000000030200	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000030204	adr	x22, #0x64086
0000000000030208	nop
000000000003020c	ldarb	w8, [x22]
0000000000030210	tbz	w8, #0x0, 0x302fc
0000000000030214	add	x8, x19, #0x18
0000000000030218	ldarb	w9, [x8]
000000000003021c	and	w21, w9, #0x1
0000000000030220	mov	w9, #0x1
0000000000030224	stlrb	w9, [x8]
0000000000030228	ldr	x20, [x19, #0x8]
000000000003022c	add	x0, x20, #0x8
0000000000030230	bl	__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv
0000000000030234	add	x0, x20, #0x98
0000000000030238	bl	__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv
000000000003023c	add	x0, x20, #0xd0
0000000000030240	bl	__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv
0000000000030244	ldr	x8, [x20, #0x110]
0000000000030248	add	x0, x8, #0x70
000000000003024c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv
0000000000030250	ldarb	w8, [x22]
0000000000030254	tbz	w8, #0x0, 0x30274
0000000000030258	adr	x20, #0x49dd8
000000000003025c	nop
0000000000030260	sub	x1, x29, #0x30
0000000000030264	mov	x0, x20
0000000000030268	bl	0x5523c ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
000000000003026c	ldarb	w8, [x22]
0000000000030270	tbnz	w8, #0x0, 0x30260
0000000000030274	ldurb	w8, [x29, #-0x28]
0000000000030278	cbz	w8, 0x30320
000000000003027c	ldur	x0, [x29, #-0x30]
0000000000030280	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000030284	sturb	wzr, [x29, #-0x28]
0000000000030288	stp	xzr, xzr, [sp, #0x30]
000000000003028c	ldr	x8, [sp, #0x30]
0000000000030290	and	x8, x8, #0x1
0000000000030294	str	x8, [sp, #0x30]
0000000000030298	ldr	x1, [x19, #0x8]
000000000003029c	add	x0, sp, #0x30
00000000000302a0	bl	__ZN6kotlin2gc23collectRootSetForThreadIN12_GLOBAL__N_110MarkTraitsEEEvRNT_9MarkQueueERNS_2mm10ThreadDataE
00000000000302a4	add	x0, sp, #0x10
00000000000302a8	add	x1, sp, #0x30
00000000000302ac	bl	__ZN6kotlin2gc4MarkIN12_GLOBAL__N_110MarkTraitsEEENS0_9MarkStatsERNT_9MarkQueueE
00000000000302b0	ldr	x20, [x19]
00000000000302b4	ldr	q0, [sp, #0x10]
00000000000302b8	str	q0, [sp]
00000000000302bc	ldr	x22, [sp, #0x20]
00000000000302c0	adr	x0, #0x49de0
00000000000302c4	nop
00000000000302c8	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
00000000000302cc	ldr	q0, [x20, #0x180]
00000000000302d0	ldr	q1, [sp]
00000000000302d4	add.2d	v0, v0, v1
00000000000302d8	str	q0, [x20, #0x180]
00000000000302dc	ldr	x8, [x20, #0x190]
00000000000302e0	add	x8, x8, x22
00000000000302e4	str	x8, [x20, #0x190]
00000000000302e8	adr	x0, #0x49db8
00000000000302ec	nop
00000000000302f0	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000302f4	add	x8, x19, #0x18
00000000000302f8	stlrb	w21, [x8]
00000000000302fc	ldurb	w8, [x29, #-0x28]
0000000000030300	cbz	w8, 0x3030c
0000000000030304	ldur	x0, [x29, #-0x30]
0000000000030308	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000003030c	ldp	x29, x30, [sp, #0x70]
0000000000030310	ldp	x20, x19, [sp, #0x60]
0000000000030314	ldp	x22, x21, [sp, #0x50]
0000000000030318	add	sp, sp, #0x80
000000000003031c	ret
0000000000030320	adr	x1, #0x2dd98 ; literal pool for: "unique_lock::unlock: not locked"
0000000000030324	nop
0000000000030328	mov	w0, #0x1
000000000003032c	bl	0x55260 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000030330	brk	#0x1
0000000000030334	bl	___clang_call_terminate
0000000000030338	mov	x20, x0
000000000003033c	add	x8, x19, #0x18
0000000000030340	stlrb	w21, [x8]
0000000000030344	ldurb	w8, [x29, #-0x28]
0000000000030348	cbz	w8, 0x30354
000000000003034c	ldur	x0, [x29, #-0x30]
0000000000030350	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000030354	mov	x0, x20
0000000000030358	bl	___clang_call_terminate
000000000003035c	bl	___clang_call_terminate
__ZN6kotlin2gc22ConcurrentMarkAndSweep29CollectRootSetAndStartMarkingEv:
0000000000030360	sub	sp, sp, #0x70
0000000000030364	stp	x26, x25, [sp, #0x20]
0000000000030368	stp	x24, x23, [sp, #0x30]
000000000003036c	stp	x22, x21, [sp, #0x40]
0000000000030370	stp	x20, x19, [sp, #0x50]
0000000000030374	stp	x29, x30, [sp, #0x60]
0000000000030378	add	x29, sp, #0x60
000000000003037c	mov	x19, x0
0000000000030380	adr	x0, #0x49d20
0000000000030384	nop
0000000000030388	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000003038c	adr	x8, #0x63efe
0000000000030390	nop
0000000000030394	stlrb	wzr, [x8]
0000000000030398	ldr	x9, [x19, #0x170]
000000000003039c	and	x9, x9, #0x1
00000000000303a0	str	x9, [x19, #0x170]
00000000000303a4	str	xzr, [x19, #0x178]
00000000000303a8	add	x0, x8, #0x2f6
00000000000303ac	bl	0x55200 ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
00000000000303b0	nop
00000000000303b4	ldr	x22, #0x641bc
00000000000303b8	cbz	x22, 0x30414
00000000000303bc	add	x20, x19, #0x170
00000000000303c0	b	0x303cc
00000000000303c4	ldr	x22, [x22, #0x150]
00000000000303c8	cbz	x22, 0x30414
00000000000303cc	ldr	x8, [x22, #0x118]
00000000000303d0	add	x8, x8, #0x60
00000000000303d4	ldarb	w8, [x8]
00000000000303d8	tbnz	w8, #0x0, 0x303c4
00000000000303dc	add	x21, x22, #0x8
00000000000303e0	add	x0, x22, #0x10
00000000000303e4	bl	__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv
00000000000303e8	add	x0, x22, #0xa0
00000000000303ec	bl	__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv
00000000000303f0	add	x0, x22, #0xd8
00000000000303f4	bl	__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv
00000000000303f8	ldr	x8, [x22, #0x118]
00000000000303fc	add	x0, x8, #0x70
0000000000030400	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv
0000000000030404	mov	x0, x20
0000000000030408	mov	x1, x21
000000000003040c	bl	__ZN6kotlin2gc23collectRootSetForThreadIN12_GLOBAL__N_110MarkTraitsEEEvRNT_9MarkQueueERNS_2mm10ThreadDataE
0000000000030410	b	0x303c4
0000000000030414	adr	x0, #0x6416c
0000000000030418	nop
000000000003041c	bl	0x5520c ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
0000000000030420	adr	x21, #0x64218
0000000000030424	nop
0000000000030428	mov	w20, #0x1
000000000003042c	ldaxrb	w8, [x21]
0000000000030430	stxrb	w9, w20, [x21]
0000000000030434	cbnz	w9, 0x3042c
0000000000030438	tbz	w8, #0x0, 0x30444
000000000003043c	bl	0x556f8 ; symbol stub for: _sched_yield
0000000000030440	b	0x3042c
0000000000030444	add	x22, sp, #0x8
0000000000030448	stp	x22, x22, [sp, #0x8]
000000000003044c	str	xzr, [sp, #0x18]
0000000000030450	adr	x20, #0x641d0
0000000000030454	nop
0000000000030458	ldr	x8, [x20, #0x8]
000000000003045c	adrp	x23, 100 ; 0x94000
0000000000030460	cmp	x8, x20
0000000000030464	b.eq	0x30500
0000000000030468	adrp	x24, 100 ; 0x94000
000000000003046c	b	0x304a0
0000000000030470	ldr	x0, [x9, #0x10]
0000000000030474	ldp	x9, x8, [x0]
0000000000030478	str	x8, [x9, #0x8]
000000000003047c	ldr	x8, [x0, #0x8]
0000000000030480	str	x9, [x8]
0000000000030484	ldr	x8, [x24, #0x618]
0000000000030488	sub	x8, x8, #0x1
000000000003048c	str	x8, [x24, #0x618]
0000000000030490	bl	0x55458 ; symbol stub for: _free
0000000000030494	mov	x8, x25
0000000000030498	cmp	x25, x20
000000000003049c	b.eq	0x30500
00000000000304a0	ldp	x25, x9, [x8, #0x8]
00000000000304a4	add	x10, x9, #0x8
00000000000304a8	ldar	x10, [x10]
00000000000304ac	cbz	x10, 0x30470
00000000000304b0	cmp	x22, x8
00000000000304b4	b.eq	0x30494
00000000000304b8	ldr	x9, [x8, #0x8]
00000000000304bc	cmp	x9, x22
00000000000304c0	b.eq	0x30494
00000000000304c4	ldr	x10, [x8]
00000000000304c8	str	x9, [x10, #0x8]
00000000000304cc	ldr	x9, [x8, #0x8]
00000000000304d0	str	x10, [x9]
00000000000304d4	ldr	x9, [sp, #0x8]
00000000000304d8	str	x8, [x9, #0x8]
00000000000304dc	stp	x9, x22, [x8]
00000000000304e0	ldr	x9, [x23, #0x630]
00000000000304e4	sub	x9, x9, #0x1
00000000000304e8	str	x9, [x23, #0x630]
00000000000304ec	ldr	x9, [sp, #0x18]
00000000000304f0	add	x9, x9, #0x1
00000000000304f4	str	x8, [sp, #0x8]
00000000000304f8	str	x9, [sp, #0x18]
00000000000304fc	b	0x30494
0000000000030500	ldr	x8, [x23, #0x630]
0000000000030504	cbz	x8, 0x30540
0000000000030508	ldp	x8, x0, [x20]
000000000003050c	ldr	x9, [x8, #0x8]
0000000000030510	ldr	x10, [x0]
0000000000030514	str	x9, [x10, #0x8]
0000000000030518	ldr	x8, [x8, #0x8]
000000000003051c	str	x10, [x8]
0000000000030520	str	xzr, [x20, #0x10]
0000000000030524	cmp	x0, x20
0000000000030528	b.eq	0x30540
000000000003052c	ldr	x22, [x0, #0x8]
0000000000030530	bl	0x55458 ; symbol stub for: _free
0000000000030534	mov	x0, x22
0000000000030538	cmp	x22, x20
000000000003053c	b.ne	0x3052c
0000000000030540	ldr	x8, [sp, #0x18]
0000000000030544	cbz	x8, 0x30584
0000000000030548	ldp	x10, x9, [sp, #0x8]
000000000003054c	ldr	x11, [x10, #0x8]
0000000000030550	ldr	x12, [x9]
0000000000030554	str	x11, [x12, #0x8]
0000000000030558	ldr	x11, [x10, #0x8]
000000000003055c	str	x12, [x11]
0000000000030560	ldr	x11, [x20]
0000000000030564	str	x9, [x11, #0x8]
0000000000030568	str	x11, [x9]
000000000003056c	str	x10, [x20]
0000000000030570	str	x20, [x10, #0x8]
0000000000030574	ldr	x9, [x20, #0x10]
0000000000030578	add	x8, x9, x8
000000000003057c	str	x8, [x20, #0x10]
0000000000030580	str	xzr, [sp, #0x18]
0000000000030584	stlrb	wzr, [x21]
0000000000030588	adr	x20, #0x64078
000000000003058c	nop
0000000000030590	mov	w22, #0x1
0000000000030594	ldaxrb	w8, [x20]
0000000000030598	stxrb	w9, w22, [x20]
000000000003059c	cbnz	w9, 0x30594
00000000000305a0	tbz	w8, #0x0, 0x305ac
00000000000305a4	bl	0x556f8 ; symbol stub for: _sched_yield
00000000000305a8	b	0x30594
00000000000305ac	mov	w22, #0x1
00000000000305b0	ldaxrb	w8, [x21]
00000000000305b4	stxrb	w9, w22, [x21]
00000000000305b8	cbnz	w9, 0x305b0
00000000000305bc	tbz	w8, #0x0, 0x305c8
00000000000305c0	bl	0x556f8 ; symbol stub for: _sched_yield
00000000000305c4	b	0x305b0
00000000000305c8	mov	w11, #0x0
00000000000305cc	adr	x8, #0x6400c
00000000000305d0	nop
00000000000305d4	ldr	x14, [x8]
00000000000305d8	ldr	x12, [x8, #0x38]
00000000000305dc	adr	x8, #0x6402c
00000000000305e0	nop
00000000000305e4	adr	x9, #0x63fec
00000000000305e8	nop
00000000000305ec	mov	x13, x14
00000000000305f0	mov	x10, x11
00000000000305f4	cmp	w10, #0x2
00000000000305f8	b.eq	0x308d4
00000000000305fc	cmp	w10, #0x1
0000000000030600	b.eq	0x3060c
0000000000030604	cbnz	w10, 0x305f4
0000000000030608	b	0x3061c
000000000003060c	mov	w10, #0x2
0000000000030610	cmp	x13, x8
0000000000030614	b.eq	0x305f4
0000000000030618	b	0x30630
000000000003061c	mov	w11, #0x1
0000000000030620	mov	x14, x12
0000000000030624	cmp	x13, x9
0000000000030628	b.eq	0x305ec
000000000003062c	b	0x30634
0000000000030630	mov	x10, x11
0000000000030634	adrp	x11, 100 ; 0x94000
0000000000030638	adr	x12, #0x30548
000000000003063c	nop
0000000000030640	cbz	w10, 0x30654
0000000000030644	cmp	w10, #0x1
0000000000030648	b.ne	0x30914
000000000003064c	add	x14, x13, #0x10
0000000000030650	b	0x30658
0000000000030654	ldr	x14, [x13, #0x10]
0000000000030658	ldr	x14, [x14]
000000000003065c	cmp	x14, #0x2
0000000000030660	b.hs	0x306b8
0000000000030664	cbz	w10, 0x306ec
0000000000030668	cmp	w10, #0x1
000000000003066c	b.ne	0x308d4
0000000000030670	ldr	x14, [x13, #0x8]
0000000000030674	ldr	x15, [x11, #0x610]
0000000000030678	mov	w10, #0x1
000000000003067c	cmp	w10, #0x2
0000000000030680	b.eq	0x308d4
0000000000030684	cmp	w10, #0x1
0000000000030688	b.eq	0x30694
000000000003068c	cbnz	w10, 0x3067c
0000000000030690	b	0x306a4
0000000000030694	mov	w10, #0x2
0000000000030698	cmp	x14, x8
000000000003069c	b.eq	0x3067c
00000000000306a0	b	0x308c8
00000000000306a4	mov	x13, x14
00000000000306a8	cmp	x14, x9
00000000000306ac	mov	x14, x15
00000000000306b0	b.eq	0x30678
00000000000306b4	b	0x30640
00000000000306b8	ldr	x15, [x14]
00000000000306bc	tst	x15, #0x3
00000000000306c0	b.eq	0x307c8
00000000000306c4	ldr	x15, [x14]
00000000000306c8	and	x15, x15, #0xfffffffffffffffc
00000000000306cc	ldr	x15, [x15]
00000000000306d0	cmp	x15, x12
00000000000306d4	b.eq	0x3081c
00000000000306d8	ldr	w16, [x15, #0x28]
00000000000306dc	cmp	w16, #0x1
00000000000306e0	b.lt	0x30664
00000000000306e4	mov	x16, #0x0
00000000000306e8	b	0x30750
00000000000306ec	mov	w15, #0x0
00000000000306f0	ldr	x14, [x13, #0x8]
00000000000306f4	ldr	x16, [x11, #0x610]
00000000000306f8	mov	x10, x15
00000000000306fc	cmp	w10, #0x2
0000000000030700	b.eq	0x308d4
0000000000030704	cmp	w10, #0x1
0000000000030708	b.eq	0x30714
000000000003070c	cbnz	w10, 0x306fc
0000000000030710	b	0x30724
0000000000030714	mov	w10, #0x2
0000000000030718	cmp	x14, x8
000000000003071c	b.eq	0x306fc
0000000000030720	b	0x308bc
0000000000030724	mov	w15, #0x1
0000000000030728	mov	x13, x14
000000000003072c	cmp	x14, x9
0000000000030730	mov	x14, x16
0000000000030734	b.eq	0x306f8
0000000000030738	b	0x30640
000000000003073c	clrex
0000000000030740	add	x16, x16, #0x1
0000000000030744	ldrsw	x17, [x15, #0x28]
0000000000030748	cmp	x16, x17
000000000003074c	b.ge	0x30664
0000000000030750	ldr	x17, [x15, #0x20]
0000000000030754	ldrsw	x17, [x17, x16, lsl #2]
0000000000030758	ldr	x17, [x17, x14]
000000000003075c	cbz	x17, 0x30740
0000000000030760	ldr	x0, [x17]
0000000000030764	and	x0, x0, #0x3
0000000000030768	cmp	x17, #0x2
000000000003076c	ccmp	x0, #0x0, #0x0, hs
0000000000030770	b.ne	0x30740
0000000000030774	ldur	x0, [x17, #-0x8]
0000000000030778	tbnz	w0, #0x0, 0x30740
000000000003077c	sub	x17, x17, #0x8
0000000000030780	orr	x1, x0, #0x1
0000000000030784	ldxr	x2, [x17]
0000000000030788	cmp	x2, x0
000000000003078c	b.ne	0x3073c
0000000000030790	stxr	w2, x1, [x17]
0000000000030794	cbnz	w2, 0x30784
0000000000030798	ldr	x0, [x19, #0x170]
000000000003079c	ldr	x1, [x19, #0x170]
00000000000307a0	and	x1, x1, #0x1
00000000000307a4	orr	x1, x1, x17
00000000000307a8	str	x1, [x19, #0x170]
00000000000307ac	ldr	x1, [x17]
00000000000307b0	bfxil	x0, x1, #0, #1
00000000000307b4	str	x0, [x17]
00000000000307b8	ldr	x17, [x19, #0x178]
00000000000307bc	add	x17, x17, #0x1
00000000000307c0	str	x17, [x19, #0x178]
00000000000307c4	b	0x30740
00000000000307c8	ldur	x15, [x14, #-0x8]
00000000000307cc	tbnz	w15, #0x0, 0x30664
00000000000307d0	sub	x14, x14, #0x8
00000000000307d4	orr	x16, x15, #0x1
00000000000307d8	ldxr	x17, [x14]
00000000000307dc	cmp	x17, x15
00000000000307e0	b.ne	0x308b4
00000000000307e4	stxr	w17, x16, [x14]
00000000000307e8	cbnz	w17, 0x307d8
00000000000307ec	ldr	x15, [x19, #0x170]
00000000000307f0	ldr	x16, [x19, #0x170]
00000000000307f4	and	x16, x16, #0x1
00000000000307f8	orr	x16, x16, x14
00000000000307fc	str	x16, [x19, #0x170]
0000000000030800	ldr	x16, [x14]
0000000000030804	bfxil	x15, x16, #0, #1
0000000000030808	str	x15, [x14]
000000000003080c	ldr	x14, [x19, #0x178]
0000000000030810	add	x14, x14, #0x1
0000000000030814	str	x14, [x19, #0x178]
0000000000030818	b	0x30664
000000000003081c	ldr	w15, [x14, #0x8]
0000000000030820	cbz	w15, 0x30664
0000000000030824	mov	w15, #0x0
0000000000030828	add	x16, x14, #0x10
000000000003082c	b	0x30844
0000000000030830	clrex
0000000000030834	add	w15, w15, #0x1
0000000000030838	ldr	w17, [x14, #0x8]
000000000003083c	cmp	w15, w17
0000000000030840	b.hs	0x30664
0000000000030844	ldr	x17, [x16, w15, sxtw #3]
0000000000030848	cbz	x17, 0x30834
000000000003084c	ldr	x0, [x17]
0000000000030850	and	x0, x0, #0x3
0000000000030854	cmp	x17, #0x2
0000000000030858	ccmp	x0, #0x0, #0x0, hs
000000000003085c	b.ne	0x30834
0000000000030860	ldur	x0, [x17, #-0x8]
0000000000030864	tbnz	w0, #0x0, 0x30834
0000000000030868	sub	x17, x17, #0x8
000000000003086c	orr	x1, x0, #0x1
0000000000030870	ldxr	x2, [x17]
0000000000030874	cmp	x2, x0
0000000000030878	b.ne	0x30830
000000000003087c	stxr	w2, x1, [x17]
0000000000030880	cbnz	w2, 0x30870
0000000000030884	ldr	x0, [x19, #0x170]
0000000000030888	ldr	x1, [x19, #0x170]
000000000003088c	and	x1, x1, #0x1
0000000000030890	orr	x1, x1, x17
0000000000030894	str	x1, [x19, #0x170]
0000000000030898	ldr	x1, [x17]
000000000003089c	bfxil	x0, x1, #0, #1
00000000000308a0	str	x0, [x17]
00000000000308a4	ldr	x17, [x19, #0x178]
00000000000308a8	add	x17, x17, #0x1
00000000000308ac	str	x17, [x19, #0x178]
00000000000308b0	b	0x30834
00000000000308b4	clrex
00000000000308b8	b	0x30664
00000000000308bc	mov	x10, x15
00000000000308c0	mov	x13, x14
00000000000308c4	b	0x30640
00000000000308c8	mov	w10, #0x1
00000000000308cc	mov	x13, x14
00000000000308d0	b	0x30640
00000000000308d4	add	x8, x20, #0x38
00000000000308d8	stlrb	wzr, [x8]
00000000000308dc	stlrb	wzr, [x20]
00000000000308e0	adr	x19, #0x49750
00000000000308e4	nop
00000000000308e8	mov	x0, x19
00000000000308ec	bl	0x55224 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
00000000000308f0	add	x0, x19, #0x70
00000000000308f4	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000308f8	ldp	x29, x30, [sp, #0x60]
00000000000308fc	ldp	x20, x19, [sp, #0x50]
0000000000030900	ldp	x22, x21, [sp, #0x40]
0000000000030904	ldp	x24, x23, [sp, #0x30]
0000000000030908	ldp	x26, x25, [sp, #0x20]
000000000003090c	add	sp, sp, #0x70
0000000000030910	ret
0000000000030914	adr	x2, #0x2d71e ; literal pool for: "Cannot dereference"
0000000000030918	nop
000000000003091c	mov	w0, #0x0
0000000000030920	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
0000000000030924	brk	#0x1
0000000000030928	bl	___clang_call_terminate
000000000003092c	bl	___clang_call_terminate
0000000000030930	bl	___clang_call_terminate
0000000000030934	bl	___clang_call_terminate
0000000000030938	bl	___clang_call_terminate
000000000003093c	bl	___clang_call_terminate
__ZN6kotlin2gc23collectRootSetForThreadIN12_GLOBAL__N_110MarkTraitsEEEvRNT_9MarkQueueERNS_2mm10ThreadDataE:
0000000000030940	sub	sp, sp, #0x20
0000000000030944	stp	x29, x30, [sp, #0x10]
0000000000030948	add	x29, sp, #0x10
000000000003094c	ldr	x8, [x1, #0x110]
0000000000030950	str	xzr, [x8, #0x28]
0000000000030954	str	xzr, [x8, #0x38]
0000000000030958	ldr	x9, [x8]
000000000003095c	add	x9, x9, #0x8
0000000000030960	ldar	x9, [x9]
0000000000030964	str	x9, [x8, #0x30]
0000000000030968	ldr	x9, [x8]
000000000003096c	ldar	w9, [x9]
0000000000030970	sxtw	x9, w9
0000000000030974	str	x9, [x8, #0x40]
0000000000030978	ldr	x9, [x1, #0x108]
000000000003097c	cbz	x9, 0x309dc
0000000000030980	ldpsw	x8, x10, [x9, #0x10]
0000000000030984	lsl	x11, x8, #3
0000000000030988	add	x8, x9, x11
000000000003098c	add	x8, x8, #0x18
0000000000030990	add	x10, x8, x10, lsl #3
0000000000030994	sub	x10, x10, x11
0000000000030998	sub	x10, x10, #0x18
000000000003099c	stp	x8, x10, [sp]
00000000000309a0	cbz	x9, 0x309e4
00000000000309a4	cmp	x8, x10
00000000000309a8	b.lo	0x309e4
00000000000309ac	ldr	x9, [x9, #0x8]
00000000000309b0	cbz	x9, 0x309dc
00000000000309b4	ldpsw	x8, x10, [x9, #0x10]
00000000000309b8	lsl	x11, x8, #3
00000000000309bc	add	x12, x9, x11
00000000000309c0	add	x8, x12, #0x18
00000000000309c4	add	x10, x12, x10, lsl #3
00000000000309c8	sub	x10, x10, x11
00000000000309cc	stp	x8, x10, [sp]
00000000000309d0	cmp	x8, x10
00000000000309d4	b.hs	0x309ac
00000000000309d8	b	0x309e4
00000000000309dc	mov	x8, #0x0
00000000000309e0	stp	xzr, xzr, [sp]
00000000000309e4	mov	w14, #0x0
00000000000309e8	ldp	x13, x12, [x1, #0x40]
00000000000309ec	mov	x10, x9
00000000000309f0	mov	x11, x14
00000000000309f4	cmp	w11, #0x2
00000000000309f8	b.eq	0x30d0c
00000000000309fc	cmp	w11, #0x1
0000000000030a00	b.eq	0x30a0c
0000000000030a04	cbnz	w11, 0x309f4
0000000000030a08	b	0x30a1c
0000000000030a0c	mov	w14, #0x2
0000000000030a10	cmp	x12, x10
0000000000030a14	b.eq	0x309f0
0000000000030a18	b	0x30a2c
0000000000030a1c	cbnz	x10, 0x30a2c
0000000000030a20	mov	w14, #0x1
0000000000030a24	mov	x9, x13
0000000000030a28	cbz	x8, 0x309ec
0000000000030a2c	adr	x9, #0x30154
0000000000030a30	nop
0000000000030a34	mov	x12, x8
0000000000030a38	cbz	w11, 0x30a48
0000000000030a3c	cmp	w11, #0x1
0000000000030a40	b.ne	0x30d18
0000000000030a44	mov	x12, x10
0000000000030a48	ldr	x12, [x12]
0000000000030a4c	cmp	x12, #0x2
0000000000030a50	b.hs	0x30aa4
0000000000030a54	cmp	w11, #0x1
0000000000030a58	b.ne	0x30c50
0000000000030a5c	add	x12, x10, #0x8
0000000000030a60	ldp	x14, x13, [x1, #0x40]
0000000000030a64	mov	w11, #0x1
0000000000030a68	cmp	w11, #0x2
0000000000030a6c	b.eq	0x30d0c
0000000000030a70	cmp	w11, #0x1
0000000000030a74	b.eq	0x30a80
0000000000030a78	cbnz	w11, 0x30a68
0000000000030a7c	b	0x30a90
0000000000030a80	mov	w11, #0x2
0000000000030a84	cmp	x12, x13
0000000000030a88	b.eq	0x30a68
0000000000030a8c	b	0x30ca8
0000000000030a90	mov	x10, x12
0000000000030a94	cbnz	x12, 0x30a34
0000000000030a98	mov	x12, x14
0000000000030a9c	cbz	x8, 0x30a64
0000000000030aa0	b	0x30a34
0000000000030aa4	ldr	x13, [x12]
0000000000030aa8	tst	x13, #0x3
0000000000030aac	b.eq	0x30b64
0000000000030ab0	ldr	x13, [x12]
0000000000030ab4	and	x13, x13, #0xfffffffffffffffc
0000000000030ab8	ldr	x13, [x13]
0000000000030abc	cmp	x13, x9
0000000000030ac0	b.eq	0x30bb8
0000000000030ac4	ldr	w14, [x13, #0x28]
0000000000030ac8	cmp	w14, #0x1
0000000000030acc	b.lt	0x30a54
0000000000030ad0	mov	x14, #0x0
0000000000030ad4	b	0x30aec
0000000000030ad8	clrex
0000000000030adc	add	x14, x14, #0x1
0000000000030ae0	ldrsw	x15, [x13, #0x28]
0000000000030ae4	cmp	x14, x15
0000000000030ae8	b.ge	0x30a54
0000000000030aec	ldr	x15, [x13, #0x20]
0000000000030af0	ldrsw	x15, [x15, x14, lsl #2]
0000000000030af4	ldr	x15, [x15, x12]
0000000000030af8	cbz	x15, 0x30adc
0000000000030afc	ldr	x16, [x15]
0000000000030b00	and	x16, x16, #0x3
0000000000030b04	cmp	x15, #0x2
0000000000030b08	ccmp	x16, #0x0, #0x0, hs
0000000000030b0c	b.ne	0x30adc
0000000000030b10	ldur	x16, [x15, #-0x8]
0000000000030b14	tbnz	w16, #0x0, 0x30adc
0000000000030b18	sub	x15, x15, #0x8
0000000000030b1c	orr	x17, x16, #0x1
0000000000030b20	ldxr	x2, [x15]
0000000000030b24	cmp	x2, x16
0000000000030b28	b.ne	0x30ad8
0000000000030b2c	stxr	w2, x17, [x15]
0000000000030b30	cbnz	w2, 0x30b20
0000000000030b34	ldr	x16, [x0]
0000000000030b38	ldr	x17, [x0]
0000000000030b3c	and	x17, x17, #0x1
0000000000030b40	orr	x17, x17, x15
0000000000030b44	str	x17, [x0]
0000000000030b48	ldr	x17, [x15]
0000000000030b4c	bfxil	x16, x17, #0, #1
0000000000030b50	str	x16, [x15]
0000000000030b54	ldr	x15, [x0, #0x8]
0000000000030b58	add	x15, x15, #0x1
0000000000030b5c	str	x15, [x0, #0x8]
0000000000030b60	b	0x30adc
0000000000030b64	ldur	x13, [x12, #-0x8]
0000000000030b68	tbnz	w13, #0x0, 0x30a54
0000000000030b6c	sub	x12, x12, #0x8
0000000000030b70	orr	x14, x13, #0x1
0000000000030b74	ldxr	x15, [x12]
0000000000030b78	cmp	x15, x13
0000000000030b7c	b.ne	0x30ca0
0000000000030b80	stxr	w15, x14, [x12]
0000000000030b84	cbnz	w15, 0x30b74
0000000000030b88	ldr	x13, [x0]
0000000000030b8c	ldr	x14, [x0]
0000000000030b90	and	x14, x14, #0x1
0000000000030b94	orr	x14, x14, x12
0000000000030b98	str	x14, [x0]
0000000000030b9c	ldr	x14, [x12]
0000000000030ba0	bfxil	x13, x14, #0, #1
0000000000030ba4	str	x13, [x12]
0000000000030ba8	ldr	x12, [x0, #0x8]
0000000000030bac	add	x12, x12, #0x1
0000000000030bb0	str	x12, [x0, #0x8]
0000000000030bb4	b	0x30a54
0000000000030bb8	ldr	w13, [x12, #0x8]
0000000000030bbc	cbz	w13, 0x30a54
0000000000030bc0	mov	w13, #0x0
0000000000030bc4	add	x14, x12, #0x10
0000000000030bc8	b	0x30be0
0000000000030bcc	clrex
0000000000030bd0	add	w13, w13, #0x1
0000000000030bd4	ldr	w15, [x12, #0x8]
0000000000030bd8	cmp	w13, w15
0000000000030bdc	b.hs	0x30a54
0000000000030be0	ldr	x15, [x14, w13, sxtw #3]
0000000000030be4	cbz	x15, 0x30bd0
0000000000030be8	ldr	x16, [x15]
0000000000030bec	and	x16, x16, #0x3
0000000000030bf0	cmp	x15, #0x2
0000000000030bf4	ccmp	x16, #0x0, #0x0, hs
0000000000030bf8	b.ne	0x30bd0
0000000000030bfc	ldur	x16, [x15, #-0x8]
0000000000030c00	tbnz	w16, #0x0, 0x30bd0
0000000000030c04	sub	x15, x15, #0x8
0000000000030c08	orr	x17, x16, #0x1
0000000000030c0c	ldxr	x2, [x15]
0000000000030c10	cmp	x2, x16
0000000000030c14	b.ne	0x30bcc
0000000000030c18	stxr	w2, x17, [x15]
0000000000030c1c	cbnz	w2, 0x30c0c
0000000000030c20	ldr	x16, [x0]
0000000000030c24	ldr	x17, [x0]
0000000000030c28	and	x17, x17, #0x1
0000000000030c2c	orr	x17, x17, x15
0000000000030c30	str	x17, [x0]
0000000000030c34	ldr	x17, [x15]
0000000000030c38	bfxil	x16, x17, #0, #1
0000000000030c3c	str	x16, [x15]
0000000000030c40	ldr	x15, [x0, #0x8]
0000000000030c44	add	x15, x15, #0x1
0000000000030c48	str	x15, [x0, #0x8]
0000000000030c4c	b	0x30bd0
0000000000030c50	cmp	w11, #0x2
0000000000030c54	b.eq	0x30d0c
0000000000030c58	add	x8, x8, #0x8
0000000000030c5c	str	x8, [sp]
0000000000030c60	cbz	x10, 0x30cbc
0000000000030c64	ldr	x11, [sp, #0x8]
0000000000030c68	cmp	x8, x11
0000000000030c6c	b.lo	0x30cbc
0000000000030c70	ldr	x10, [x10, #0x8]
0000000000030c74	cbz	x10, 0x30cb4
0000000000030c78	ldpsw	x8, x11, [x10, #0x10]
0000000000030c7c	lsl	x12, x8, #3
0000000000030c80	add	x13, x10, x12
0000000000030c84	add	x8, x13, #0x18
0000000000030c88	add	x11, x13, x11, lsl #3
0000000000030c8c	sub	x11, x11, x12
0000000000030c90	stp	x8, x11, [sp]
0000000000030c94	cmp	x8, x11
0000000000030c98	b.hs	0x30c70
0000000000030c9c	b	0x30cbc
0000000000030ca0	clrex
0000000000030ca4	b	0x30a54
0000000000030ca8	mov	w11, #0x1
0000000000030cac	mov	x10, x12
0000000000030cb0	b	0x30a34
0000000000030cb4	mov	x8, #0x0
0000000000030cb8	stp	xzr, xzr, [sp]
0000000000030cbc	mov	w14, #0x0
0000000000030cc0	ldp	x13, x12, [x1, #0x40]
0000000000030cc4	mov	x15, x10
0000000000030cc8	mov	x10, x15
0000000000030ccc	mov	x11, x14
0000000000030cd0	cmp	w11, #0x2
0000000000030cd4	b.eq	0x30d0c
0000000000030cd8	cmp	w11, #0x1
0000000000030cdc	b.eq	0x30ce8
0000000000030ce0	cbnz	w11, 0x30cd0
0000000000030ce4	b	0x30cf8
0000000000030ce8	mov	w14, #0x2
0000000000030cec	cmp	x12, x10
0000000000030cf0	b.eq	0x30ccc
0000000000030cf4	b	0x30a34
0000000000030cf8	cbnz	x10, 0x30a34
0000000000030cfc	mov	w14, #0x1
0000000000030d00	mov	x15, x13
0000000000030d04	cbz	x8, 0x30cc8
0000000000030d08	b	0x30a34
0000000000030d0c	ldp	x29, x30, [sp, #0x10]
0000000000030d10	add	sp, sp, #0x20
0000000000030d14	ret
0000000000030d18	adr	x2, #0x2d31a ; literal pool for: "Cannot dereference"
0000000000030d1c	nop
0000000000030d20	mov	w0, #0x0
0000000000030d24	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
0000000000030d28	brk	#0x1
0000000000030d2c	bl	___clang_call_terminate
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv:
0000000000030d30	stp	x22, x21, [sp, #-0x30]!
0000000000030d34	stp	x20, x19, [sp, #0x10]
0000000000030d38	stp	x29, x30, [sp, #0x20]
0000000000030d3c	add	x29, sp, #0x20
0000000000030d40	ldr	x8, [x0, #0x18]
0000000000030d44	cbz	x8, 0x30dbc
0000000000030d48	mov	x19, x0
0000000000030d4c	ldr	x8, [x0]
0000000000030d50	add	x20, x8, #0x18
0000000000030d54	mov	w21, #0x1
0000000000030d58	ldaxrb	w8, [x20]
0000000000030d5c	stxrb	w9, w21, [x20]
0000000000030d60	cbnz	w9, 0x30d58
0000000000030d64	tbz	w8, #0x0, 0x30d70
0000000000030d68	bl	0x556f8 ; symbol stub for: _sched_yield
0000000000030d6c	b	0x30d58
0000000000030d70	ldr	x8, [x19]
0000000000030d74	ldr	x9, [x8]
0000000000030d78	cbz	x9, 0x30d80
0000000000030d7c	ldr	x8, [x8, #0x8]
0000000000030d80	ldr	x9, [x19, #0x18]
0000000000030d84	str	xzr, [x19, #0x18]
0000000000030d88	ldr	x0, [x8]
0000000000030d8c	str	x9, [x8]
0000000000030d90	cbz	x0, 0x30d9c
0000000000030d94	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000030d98	bl	_mi_free
0000000000030d9c	ldr	x8, [x19]
0000000000030da0	ldp	x9, x10, [x19, #0x20]
0000000000030da4	str	x9, [x8, #0x8]
0000000000030da8	stp	xzr, xzr, [x19, #0x20]
0000000000030dac	ldr	x9, [x8, #0x10]
0000000000030db0	add	x9, x9, x10
0000000000030db4	str	x9, [x8, #0x10]
0000000000030db8	stlrb	wzr, [x20]
0000000000030dbc	ldp	x29, x30, [sp, #0x20]
0000000000030dc0	ldp	x20, x19, [sp, #0x10]
0000000000030dc4	ldp	x22, x21, [sp], #0x30
0000000000030dc8	ret
0000000000030dcc	bl	___clang_call_terminate
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev:
0000000000030dd0	stp	x20, x19, [sp, #-0x20]!
0000000000030dd4	stp	x29, x30, [sp, #0x10]
0000000000030dd8	add	x29, sp, #0x10
0000000000030ddc	mov	x19, x0
0000000000030de0	ldr	x0, [x0]
0000000000030de4	str	xzr, [x19]
0000000000030de8	cbz	x0, 0x30df4
0000000000030dec	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000030df0	bl	_mi_free
0000000000030df4	mov	x0, x19
0000000000030df8	ldp	x29, x30, [sp, #0x10]
0000000000030dfc	ldp	x20, x19, [sp], #0x20
0000000000030e00	ret
__ZN6kotlin2gc4MarkIN12_GLOBAL__N_110MarkTraitsEEENS0_9MarkStatsERNT_9MarkQueueE:
0000000000030e04	stp	x20, x19, [sp, #-0x20]!
0000000000030e08	stp	x29, x30, [sp, #0x10]
0000000000030e0c	add	x29, sp, #0x10
0000000000030e10	mov	x19, x1
0000000000030e14	mov	x20, x0
0000000000030e18	stp	xzr, xzr, [x0]
0000000000030e1c	ldr	x8, [x1, #0x8]
0000000000030e20	str	x8, [x0, #0x10]
0000000000030e24	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000030e28	ldr	x8, [x19, #0x8]
0000000000030e2c	cbz	x8, 0x310a8
0000000000030e30	adr	x8, #0x2fd50
0000000000030e34	nop
0000000000030e38	ldr	x9, [x19]
0000000000030e3c	ldr	x10, [x19]
0000000000030e40	ands	x10, x10, #0xfffffffffffffffe
0000000000030e44	b.eq	0x30e70
0000000000030e48	ldr	x11, [x10]
0000000000030e4c	ldr	x12, [x19]
0000000000030e50	bfxil	x11, x12, #0, #1
0000000000030e54	str	x11, [x19]
0000000000030e58	ldr	x11, [x10]
0000000000030e5c	and	x11, x11, #0x1
0000000000030e60	str	x11, [x10]
0000000000030e64	ldr	x10, [x19, #0x8]
0000000000030e68	sub	x10, x10, #0x1
0000000000030e6c	str	x10, [x19, #0x8]
0000000000030e70	sub	x9, x9, #0x8
0000000000030e74	and	x10, x9, #0xfffffffffffffffe
0000000000030e78	ldr	x9, [x20]
0000000000030e7c	add	x9, x9, #0x1
0000000000030e80	str	x9, [x20]
0000000000030e84	ldr	x9, [x10, #0x10]
0000000000030e88	and	x9, x9, #0xfffffffffffffffc
0000000000030e8c	ldr	x9, [x9]
0000000000030e90	ldrsw	x9, [x9, #0x14]
0000000000030e94	tbnz	w9, #0x1f, 0x30ea4
0000000000030e98	and	x9, x9, #0xffffffff
0000000000030e9c	add	x11, x9, #0xf
0000000000030ea0	b	0x30eb0
0000000000030ea4	ldr	w11, [x10, #0x18]
0000000000030ea8	mneg	x9, x9, x11
0000000000030eac	add	x11, x9, #0x1f
0000000000030eb0	add	x9, x10, #0x10
0000000000030eb4	and	x11, x11, #0xfffffffffffffff8
0000000000030eb8	add	x11, x11, #0xf
0000000000030ebc	and	x11, x11, #0xfffffffffffffff8
0000000000030ec0	ldr	x12, [x20, #0x8]
0000000000030ec4	add	x11, x12, x11
0000000000030ec8	str	x11, [x20, #0x8]
0000000000030ecc	ldr	x11, [x9]
0000000000030ed0	and	x11, x11, #0xfffffffffffffffc
0000000000030ed4	ldr	x11, [x11]
0000000000030ed8	cmp	x11, x8
0000000000030edc	b.eq	0x30f7c
0000000000030ee0	ldr	w10, [x11, #0x28]
0000000000030ee4	cmp	w10, #0x1
0000000000030ee8	b.lt	0x31010
0000000000030eec	mov	x10, #0x0
0000000000030ef0	b	0x30f08
0000000000030ef4	clrex
0000000000030ef8	add	x10, x10, #0x1
0000000000030efc	ldrsw	x12, [x11, #0x28]
0000000000030f00	cmp	x10, x12
0000000000030f04	b.ge	0x31010
0000000000030f08	ldr	x12, [x11, #0x20]
0000000000030f0c	ldrsw	x12, [x12, x10, lsl #2]
0000000000030f10	ldr	x12, [x12, x9]
0000000000030f14	cmp	x12, #0x2
0000000000030f18	b.lo	0x30ef8
0000000000030f1c	ldr	x13, [x12]
0000000000030f20	tst	x13, #0x3
0000000000030f24	b.ne	0x30ef8
0000000000030f28	ldur	x13, [x12, #-0x8]
0000000000030f2c	tbnz	w13, #0x0, 0x30ef8
0000000000030f30	sub	x12, x12, #0x8
0000000000030f34	orr	x14, x13, #0x1
0000000000030f38	ldxr	x15, [x12]
0000000000030f3c	cmp	x15, x13
0000000000030f40	b.ne	0x30ef4
0000000000030f44	stxr	w15, x14, [x12]
0000000000030f48	cbnz	w15, 0x30f38
0000000000030f4c	ldr	x13, [x19]
0000000000030f50	ldr	x14, [x19]
0000000000030f54	and	x14, x14, #0x1
0000000000030f58	orr	x14, x14, x12
0000000000030f5c	str	x14, [x19]
0000000000030f60	ldr	x14, [x12]
0000000000030f64	bfxil	x13, x14, #0, #1
0000000000030f68	str	x13, [x12]
0000000000030f6c	ldr	x12, [x19, #0x8]
0000000000030f70	add	x12, x12, #0x1
0000000000030f74	str	x12, [x19, #0x8]
0000000000030f78	b	0x30ef8
0000000000030f7c	ldr	w11, [x10, #0x18]
0000000000030f80	cbz	w11, 0x31010
0000000000030f84	mov	w11, #0x0
0000000000030f88	add	x12, x10, #0x20
0000000000030f8c	b	0x30fa4
0000000000030f90	clrex
0000000000030f94	add	w11, w11, #0x1
0000000000030f98	ldr	w13, [x10, #0x18]
0000000000030f9c	cmp	w11, w13
0000000000030fa0	b.hs	0x31010
0000000000030fa4	ldr	x13, [x12, w11, sxtw #3]
0000000000030fa8	cmp	x13, #0x2
0000000000030fac	b.lo	0x30f94
0000000000030fb0	ldr	x14, [x13]
0000000000030fb4	tst	x14, #0x3
0000000000030fb8	b.ne	0x30f94
0000000000030fbc	ldur	x14, [x13, #-0x8]
0000000000030fc0	tbnz	w14, #0x0, 0x30f94
0000000000030fc4	sub	x13, x13, #0x8
0000000000030fc8	orr	x15, x14, #0x1
0000000000030fcc	ldxr	x16, [x13]
0000000000030fd0	cmp	x16, x14
0000000000030fd4	b.ne	0x30f90
0000000000030fd8	stxr	w16, x15, [x13]
0000000000030fdc	cbnz	w16, 0x30fcc
0000000000030fe0	ldr	x14, [x19]
0000000000030fe4	ldr	x15, [x19]
0000000000030fe8	and	x15, x15, #0x1
0000000000030fec	orr	x15, x15, x13
0000000000030ff0	str	x15, [x19]
0000000000030ff4	ldr	x15, [x13]
0000000000030ff8	bfxil	x14, x15, #0, #1
0000000000030ffc	str	x14, [x13]
0000000000031000	ldr	x13, [x19, #0x8]
0000000000031004	add	x13, x13, #0x1
0000000000031008	str	x13, [x19, #0x8]
000000000003100c	b	0x30f94
0000000000031010	ldar	x9, [x9]
0000000000031014	and	x9, x9, #0xfffffffffffffffc
0000000000031018	ldr	x10, [x9]
000000000003101c	cmp	x9, #0x0
0000000000031020	ccmp	x10, x9, #0x4, ne
0000000000031024	b.eq	0x310a0
0000000000031028	add	x9, x9, #0x18
000000000003102c	ldar	x9, [x9]
0000000000031030	sbfx	x10, x9, #0, #1
0000000000031034	and	x9, x9, x10
0000000000031038	and	x9, x9, #0xfffffffffffffffe
000000000003103c	cmp	x9, #0x2
0000000000031040	b.lo	0x310a0
0000000000031044	ldur	x10, [x9, #-0x8]
0000000000031048	tbnz	w10, #0x0, 0x310a0
000000000003104c	sub	x9, x9, #0x8
0000000000031050	orr	x11, x10, #0x1
0000000000031054	ldxr	x12, [x9]
0000000000031058	cmp	x12, x10
000000000003105c	b.ne	0x3109c
0000000000031060	stxr	w12, x11, [x9]
0000000000031064	cbnz	w12, 0x31054
0000000000031068	ldr	x10, [x19]
000000000003106c	ldr	x11, [x19]
0000000000031070	and	x11, x11, #0x1
0000000000031074	orr	x11, x11, x9
0000000000031078	str	x11, [x19]
000000000003107c	ldr	x11, [x9]
0000000000031080	bfxil	x10, x11, #0, #1
0000000000031084	str	x10, [x9]
0000000000031088	ldr	x9, [x19, #0x8]
000000000003108c	add	x9, x9, #0x1
0000000000031090	str	x9, [x19, #0x8]
0000000000031094	cbnz	x9, 0x30e38
0000000000031098	b	0x310a8
000000000003109c	clrex
00000000000310a0	ldr	x9, [x19, #0x8]
00000000000310a4	cbnz	x9, 0x30e38
00000000000310a8	ldp	x29, x30, [sp, #0x10]
00000000000310ac	ldp	x20, x19, [sp], #0x20
00000000000310b0	b	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEED1Ev:
00000000000310b4	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEED0Ev:
00000000000310b8	b	0x55308 ; symbol stub for: __ZdlPv
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE7__cloneEv:
00000000000310bc	stp	x20, x19, [sp, #-0x20]!
00000000000310c0	stp	x29, x30, [sp, #0x10]
00000000000310c4	add	x29, sp, #0x10
00000000000310c8	mov	x19, x0
00000000000310cc	mov	w0, #0x10
00000000000310d0	bl	0x55314 ; symbol stub for: __Znwm
00000000000310d4	ldr	x8, [x19, #0x8]
00000000000310d8	adr	x9, #0x3f9a8
00000000000310dc	nop
00000000000310e0	stp	x9, x8, [x0]
00000000000310e4	ldp	x29, x30, [sp, #0x10]
00000000000310e8	ldp	x20, x19, [sp], #0x20
00000000000310ec	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE7__cloneEPNS0_6__baseISC_EE:
00000000000310f0	ldr	x8, [x0, #0x8]
00000000000310f4	adr	x9, #0x3f98c
00000000000310f8	nop
00000000000310fc	stp	x9, x8, [x1]
0000000000031100	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE7destroyEv:
0000000000031104	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE18destroy_deallocateEv:
0000000000031108	b	0x55308 ; symbol stub for: __ZdlPv
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEEclESB_:
000000000003110c	ldr	x8, [x0, #0x8]
0000000000031110	ldr	x0, [x8, #0x40]
0000000000031114	ldr	x8, [x0]
0000000000031118	ldr	x2, [x8, #0x10]
000000000003111c	br	x2
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE6targetERKSt9type_info:
0000000000031120	stp	x20, x19, [sp, #-0x20]!
0000000000031124	stp	x29, x30, [sp, #0x10]
0000000000031128	add	x29, sp, #0x10
000000000003112c	mov	x19, x0
0000000000031130	ldr	x9, [x1, #0x8]
0000000000031134	adr	x8, #0x27642
0000000000031138	nop
000000000003113c	mov	x10, #-0x8000000000000000
0000000000031140	add	x10, x8, x10
0000000000031144	cmp	x9, x10
0000000000031148	b.ne	0x3115c
000000000003114c	add	x0, x19, #0x8
0000000000031150	ldp	x29, x30, [sp, #0x10]
0000000000031154	ldp	x20, x19, [sp], #0x20
0000000000031158	ret
000000000003115c	tst	x9, x10
0000000000031160	b.lt	0x31174
0000000000031164	mov	x0, #0x0
0000000000031168	ldp	x29, x30, [sp, #0x10]
000000000003116c	ldp	x20, x19, [sp], #0x20
0000000000031170	ret
0000000000031174	and	x0, x9, #0x7fffffffffffffff
0000000000031178	mov	x9, #-0x8000000000000000
000000000003117c	add	x8, x8, x9
0000000000031180	and	x1, x8, #0x7fffffffffffffff
0000000000031184	bl	0x55734 ; symbol stub for: _strcmp
0000000000031188	cbz	w0, 0x3114c
000000000003118c	mov	x0, #0x0
0000000000031190	ldp	x29, x30, [sp, #0x10]
0000000000031194	ldp	x20, x19, [sp], #0x20
0000000000031198	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE11target_typeEv:
000000000003119c	adr	x0, #0x3f944
00000000000311a0	nop
00000000000311a4	ret
__ZN6kotlin2gc2GC10ThreadDataC1ERS1_RNS_2mm10ThreadDataE:
00000000000311a8	sub	sp, sp, #0x50
00000000000311ac	stp	x22, x21, [sp, #0x20]
00000000000311b0	stp	x20, x19, [sp, #0x30]
00000000000311b4	stp	x29, x30, [sp, #0x40]
00000000000311b8	add	x29, sp, #0x40
00000000000311bc	mov	x20, x2
00000000000311c0	mov	x22, x1
00000000000311c4	mov	x19, x0
00000000000311c8	mov	w0, #0x1
00000000000311cc	mov	w1, #0xa0
00000000000311d0	bl	0x553d4 ; symbol stub for: _calloc
00000000000311d4	mov	x21, x0
00000000000311d8	ldr	x8, [x22]
00000000000311dc	add	x9, x8, #0x30
00000000000311e0	adr	x10, #0x3f8a0
00000000000311e4	nop
00000000000311e8	stp	x10, x9, [sp]
00000000000311ec	mov	x11, sp
00000000000311f0	str	x11, [sp, #0x18]
00000000000311f4	str	x9, [x0]
00000000000311f8	mov	x12, x0
00000000000311fc	str	x10, [x12, #0x8]!
0000000000031200	str	x12, [x0, #0x20]
0000000000031204	str	x9, [x0, #0x10]
0000000000031208	add	x8, x8, #0x38
000000000003120c	movi.16b	v0, #0x0
0000000000031210	stur	q0, [x0, #0x28]
0000000000031214	stur	q0, [x0, #0x38]
0000000000031218	ldar	x8, [x8]
000000000003121c	str	x8, [x0, #0x30]
0000000000031220	mov	x8, x9
0000000000031224	ldar	w8, [x8]
0000000000031228	sxtw	x8, w8
000000000003122c	str	x8, [x0, #0x40]
0000000000031230	mov	x0, x11
0000000000031234	cmp	x11, x0
0000000000031238	b.eq	0x3124c
000000000003123c	cbz	x0, 0x31258
0000000000031240	ldr	x8, [x0]
0000000000031244	ldr	x8, [x8, #0x28]
0000000000031248	b	0x31254
000000000003124c	ldr	x8, [x0]
0000000000031250	ldr	x8, [x8, #0x20]
0000000000031254	blr	x8
0000000000031258	ldr	x8, [x22]
000000000003125c	add	x9, x8, #0x98
0000000000031260	mov	x10, x21
0000000000031264	str	x9, [x10, #0x48]!
0000000000031268	stp	x20, x21, [x21, #0x50]
000000000003126c	add	x8, x8, #0x10
0000000000031270	str	x8, [x21, #0x70]
0000000000031274	stp	x10, xzr, [x21, #0x80]
0000000000031278	stp	xzr, xzr, [x21, #0x90]
000000000003127c	str	x21, [x19]
0000000000031280	mov	x0, x19
0000000000031284	ldp	x29, x30, [sp, #0x40]
0000000000031288	ldp	x20, x19, [sp, #0x30]
000000000003128c	ldp	x22, x21, [sp, #0x20]
0000000000031290	add	sp, sp, #0x50
0000000000031294	ret
__ZN6kotlin2gc2GC10ThreadDataD1Ev:
0000000000031298	stp	x20, x19, [sp, #-0x20]!
000000000003129c	stp	x29, x30, [sp, #0x10]
00000000000312a0	add	x29, sp, #0x10
00000000000312a4	mov	x19, x0
00000000000312a8	ldr	x20, [x0]
00000000000312ac	str	xzr, [x0]
00000000000312b0	cbz	x20, 0x31304
00000000000312b4	add	x0, x20, #0x70
00000000000312b8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv
00000000000312bc	ldr	x0, [x20, #0x88]
00000000000312c0	str	xzr, [x20, #0x88]
00000000000312c4	cbz	x0, 0x312d0
00000000000312c8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
00000000000312cc	bl	_mi_free
00000000000312d0	add	x8, x20, #0x8
00000000000312d4	ldr	x0, [x20, #0x20]
00000000000312d8	cmp	x8, x0
00000000000312dc	b.eq	0x312f0
00000000000312e0	cbz	x0, 0x312fc
00000000000312e4	ldr	x8, [x0]
00000000000312e8	ldr	x8, [x8, #0x28]
00000000000312ec	b	0x312f8
00000000000312f0	ldr	x8, [x0]
00000000000312f4	ldr	x8, [x8, #0x20]
00000000000312f8	blr	x8
00000000000312fc	mov	x0, x20
0000000000031300	bl	0x55458 ; symbol stub for: _free
0000000000031304	mov	x0, x19
0000000000031308	ldp	x29, x30, [sp, #0x10]
000000000003130c	ldp	x20, x19, [sp], #0x20
0000000000031310	ret
__ZN13GCStateHolder8scheduleEv:
0000000000031314	stp	x20, x19, [sp, #-0x20]!
0000000000031318	stp	x29, x30, [sp, #0x10]
000000000003131c	add	x29, sp, #0x10
0000000000031320	mov	x19, x0
0000000000031324	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000031328	ldr	x20, [x19, #0xc0]
000000000003132c	ldr	x8, [x19, #0x40]
0000000000031330	cmp	x20, x8
0000000000031334	b.gt	0x3134c
0000000000031338	add	x8, x8, #0x1
000000000003133c	str	x8, [x19, #0xc0]
0000000000031340	add	x0, x19, #0xd0
0000000000031344	bl	0x55224 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000031348	ldr	x20, [x19, #0xc0]
000000000003134c	mov	x0, x19
0000000000031350	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000031354	mov	x0, x20
0000000000031358	ldp	x29, x30, [sp, #0x10]
000000000003135c	ldp	x20, x19, [sp], #0x20
0000000000031360	ret
__ZN6kotlin16ThreadStateGuardD1Ev:
0000000000031364	stp	x20, x19, [sp, #-0x20]!
0000000000031368	stp	x29, x30, [sp, #0x10]
000000000003136c	add	x29, sp, #0x10
0000000000031370	mov	x19, x0
0000000000031374	ldr	x9, [x0]
0000000000031378	cbz	x9, 0x313b0
000000000003137c	ldr	w8, [x19, #0x8]
0000000000031380	add	x0, x9, #0x138
0000000000031384	ldaxr	w9, [x0]
0000000000031388	stlxr	w10, w8, [x0]
000000000003138c	cbnz	w10, 0x31384
0000000000031390	cbnz	w8, 0x313b0
0000000000031394	cmp	w9, #0x1
0000000000031398	b.ne	0x313b0
000000000003139c	adr	x8, #0x62eed
00000000000313a0	nop
00000000000313a4	ldarb	w8, [x8]
00000000000313a8	tbz	w8, #0x0, 0x313b0
00000000000313ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000313b0	mov	x0, x19
00000000000313b4	ldp	x29, x30, [sp, #0x10]
00000000000313b8	ldp	x20, x19, [sp], #0x20
00000000000313bc	ret
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy:
00000000000313c0	sub	sp, sp, #0x70
00000000000313c4	stp	x24, x23, [sp, #0x30]
00000000000313c8	stp	x22, x21, [sp, #0x40]
00000000000313cc	stp	x20, x19, [sp, #0x50]
00000000000313d0	stp	x29, x30, [sp, #0x60]
00000000000313d4	add	x29, sp, #0x60
00000000000313d8	mov	x19, x0
00000000000313dc	add	x8, x1, #0xf
00000000000313e0	and	x20, x8, #0xfffffffffffffff8
00000000000313e4	ldr	x8, [x0, #0x10]
00000000000313e8	ldr	x21, [x8, #0x10]
00000000000313ec	ldp	x8, x9, [x21, #0x28]
00000000000313f0	add	x8, x8, x20
00000000000313f4	str	x8, [x21, #0x28]
00000000000313f8	cmp	x8, x9
00000000000313fc	b.lo	0x31440
0000000000031400	ldr	x0, [x21, #0x20]
0000000000031404	cbz	x0, 0x315a4
0000000000031408	ldr	x8, [x0]
000000000003140c	ldr	x8, [x8, #0x30]
0000000000031410	mov	x1, x21
0000000000031414	blr	x8
0000000000031418	str	xzr, [x21, #0x28]
000000000003141c	str	xzr, [x21, #0x38]
0000000000031420	ldr	x8, [x21]
0000000000031424	add	x8, x8, #0x8
0000000000031428	ldar	x8, [x8]
000000000003142c	str	x8, [x21, #0x30]
0000000000031430	ldr	x8, [x21]
0000000000031434	ldar	w8, [x8]
0000000000031438	sxtw	x8, w8
000000000003143c	str	x8, [x21, #0x40]
0000000000031440	adr	x23, #0x62e49
0000000000031444	nop
0000000000031448	ldarb	w8, [x23]
000000000003144c	tbz	w8, #0x0, 0x31454
0000000000031450	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000031454	mov	x0, x20
0000000000031458	bl	__ZN6kotlin20allocateInObjectPoolEm
000000000003145c	mov	x21, x0
0000000000031460	cbnz	x0, 0x31550
0000000000031464	ldr	x22, [x19, #0x10]
0000000000031468	adrp	x0, 73 ; 0x7a000
000000000003146c	add	x0, x0, #0x2c0
0000000000031470	ldr	x8, [x0]
0000000000031474	blr	x8
0000000000031478	ldr	x8, [x0]
000000000003147c	str	x8, [sp, #0x10]
0000000000031480	strb	wzr, [sp, #0x1c]
0000000000031484	add	x8, x8, #0x138
0000000000031488	mov	w9, #0x1
000000000003148c	ldaxr	w10, [x8]
0000000000031490	stlxr	w11, w9, [x8]
0000000000031494	cbnz	w11, 0x3148c
0000000000031498	str	w10, [sp, #0x18]
000000000003149c	ldr	x8, [x22]
00000000000314a0	add	x0, x8, #0x18
00000000000314a4	bl	__ZN13GCStateHolder8scheduleEv
00000000000314a8	mov	x21, x0
00000000000314ac	ldr	x24, [x22]
00000000000314b0	ldr	x22, [x24, #0xa0]
00000000000314b4	str	x22, [sp, #0x20]
00000000000314b8	mov	w8, #0x1
00000000000314bc	strb	w8, [sp, #0x28]
00000000000314c0	mov	x0, x22
00000000000314c4	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
00000000000314c8	ldr	x8, [x24, #0x98]
00000000000314cc	cmp	x8, x21
00000000000314d0	b.ge	0x31504
00000000000314d4	add	x22, x24, #0xa8
00000000000314d8	ldrb	w8, [x24, #0x158]
00000000000314dc	cbnz	w8, 0x314f8
00000000000314e0	add	x1, sp, #0x20
00000000000314e4	mov	x0, x22
00000000000314e8	bl	0x5523c ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
00000000000314ec	ldr	x8, [x24, #0x98]
00000000000314f0	cmp	x8, x21
00000000000314f4	b.lt	0x314d8
00000000000314f8	ldrb	w8, [sp, #0x28]
00000000000314fc	cbz	w8, 0x3150c
0000000000031500	ldr	x22, [sp, #0x20]
0000000000031504	mov	x0, x22
0000000000031508	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000003150c	ldr	x9, [sp, #0x10]
0000000000031510	cbz	x9, 0x31540
0000000000031514	ldr	w8, [sp, #0x18]
0000000000031518	add	x0, x9, #0x138
000000000003151c	ldaxr	w9, [x0]
0000000000031520	stlxr	w10, w8, [x0]
0000000000031524	cbnz	w10, 0x3151c
0000000000031528	cbnz	w8, 0x31540
000000000003152c	cmp	w9, #0x1
0000000000031530	b.ne	0x31540
0000000000031534	ldarb	w8, [x23]
0000000000031538	tbz	w8, #0x0, 0x31540
000000000003153c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000031540	mov	x0, x20
0000000000031544	bl	__ZN6kotlin20allocateInObjectPoolEm
0000000000031548	mov	x21, x0
000000000003154c	cbz	x0, 0x315ac
0000000000031550	str	xzr, [x21]
0000000000031554	ldr	x8, [x19, #0x18]
0000000000031558	cbz	x8, 0x31578
000000000003155c	ldr	x8, [x19, #0x20]
0000000000031560	ldr	x0, [x8]
0000000000031564	str	x21, [x8]
0000000000031568	cbz	x0, 0x3157c
000000000003156c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000031570	bl	_mi_free
0000000000031574	b	0x3157c
0000000000031578	str	x21, [x19, #0x18]
000000000003157c	ldr	x8, [x19, #0x28]
0000000000031580	add	x8, x8, #0x1
0000000000031584	stp	x21, x8, [x19, #0x20]
0000000000031588	mov	x0, x21
000000000003158c	ldp	x29, x30, [sp, #0x60]
0000000000031590	ldp	x20, x19, [sp, #0x50]
0000000000031594	ldp	x22, x21, [sp, #0x40]
0000000000031598	ldp	x24, x23, [sp, #0x30]
000000000003159c	add	sp, sp, #0x70
00000000000315a0	ret
00000000000315a4	bl	__ZNSt3__125__throw_bad_function_callEv
00000000000315a8	b	0x315c0
00000000000315ac	str	x20, [sp]
00000000000315b0	adr	x0, #0x2ca95 ; literal pool for: "Out of memory trying to allocate %llu bytes. Aborting.\n"
00000000000315b4	nop
00000000000315b8	bl	__ZN5konan13consoleErrorfEPKcz
00000000000315bc	bl	__ZN5konan5abortEv
00000000000315c0	brk	#0x1
00000000000315c4	bl	___clang_call_terminate
00000000000315c8	mov	x19, x0
00000000000315cc	add	x0, sp, #0x10
00000000000315d0	bl	__ZN6kotlin16ThreadStateGuardD1Ev
00000000000315d4	mov	x0, x19
00000000000315d8	bl	___clang_call_terminate
00000000000315dc	bl	___clang_call_terminate
__ZN6kotlin12ScopedThread3RunIZNS_2gc22ConcurrentMarkAndSweepC1ERNS_2mm13ObjectFactoryIS3_EERNS2_11GCSchedulerEE3$_3JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOSD_DpOSE_:
00000000000315e0	sub	sp, sp, #0x170
00000000000315e4	stp	x28, x27, [sp, #0x110]
00000000000315e8	stp	x26, x25, [sp, #0x120]
00000000000315ec	stp	x24, x23, [sp, #0x130]
00000000000315f0	stp	x22, x21, [sp, #0x140]
00000000000315f4	stp	x20, x19, [sp, #0x150]
00000000000315f8	stp	x29, x30, [sp, #0x160]
00000000000315fc	add	x29, sp, #0x160
0000000000031600	mov	x19, x1
0000000000031604	ldrb	w8, [x0, #0x18]
0000000000031608	cbz	w8, 0x3161c
000000000003160c	ldrsb	w8, [x0, #0x17]
0000000000031610	tbz	w8, #0x1f, 0x31618
0000000000031614	ldr	x0, [x0]
0000000000031618	bl	0x556d4 ; symbol stub for: _pthread_setname_np
000000000003161c	ldr	x25, [x19]
0000000000031620	add	x26, x25, #0xe8
0000000000031624	add	x9, x25, #0x180
0000000000031628	add	x8, x25, #0x68
000000000003162c	stp	x8, x9, [sp, #0x40]
0000000000031630	add	x9, x25, #0x170
0000000000031634	add	x8, x25, #0xa8
0000000000031638	stp	x8, x9, [sp, #0x30]
000000000003163c	mov	w24, #0x1
0000000000031640	adrp	x23, 73 ; 0x7a000
0000000000031644	add	x23, x23, #0x2c0
0000000000031648	ldr	x27, [x23]
000000000003164c	adr	x28, #0x62f34
0000000000031650	nop
0000000000031654	adr	x20, #0x6301c
0000000000031658	nop
000000000003165c	str	x25, [sp, #0x50]
0000000000031660	stp	x27, x26, [sp, #0x20]
0000000000031664	b	0x31678
0000000000031668	stlrb	wzr, [x23]
000000000003166c	ldp	x27, x26, [sp, #0x20]
0000000000031670	adrp	x23, 73 ; 0x7a000
0000000000031674	add	x23, x23, #0x2c0
0000000000031678	ldr	x0, [x25, #0xe0]
000000000003167c	stur	x0, [x29, #-0x80]
0000000000031680	sturb	w24, [x29, #-0x78]
0000000000031684	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000031688	ldr	x21, [x25, #0xd8]
000000000003168c	ldr	x8, [x25, #0x98]
0000000000031690	cmp	x21, x8
0000000000031694	b.gt	0x316c4
0000000000031698	ldrb	w8, [x25, #0x158]
000000000003169c	cbnz	w8, 0x316bc
00000000000316a0	sub	x1, x29, #0x80
00000000000316a4	mov	x0, x26
00000000000316a8	bl	0x5523c ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
00000000000316ac	ldr	x21, [x25, #0xd8]
00000000000316b0	ldr	x8, [x25, #0x98]
00000000000316b4	cmp	x21, x8
00000000000316b8	b.le	0x31698
00000000000316bc	ldurb	w8, [x29, #-0x78]
00000000000316c0	cbz	w8, 0x316d0
00000000000316c4	ldur	x0, [x29, #-0x80]
00000000000316c8	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000316cc	ldr	x21, [x25, #0xd8]
00000000000316d0	ldrb	w8, [x25, #0x158]
00000000000316d4	cmp	w8, #0x1
00000000000316d8	b.eq	0x31fb0
00000000000316dc	ldr	w8, [x25, #0x198]
00000000000316e0	cmp	w8, #0x0
00000000000316e4	cset	w8, eq
00000000000316e8	adr	x9, #0x62ba2
00000000000316ec	nop
00000000000316f0	stlrb	w8, [x9]
00000000000316f4	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
00000000000316f8	bl	__ZN6kotlin2mm24RequestThreadsSuspensionEv
00000000000316fc	mov	x0, x23
0000000000031700	blr	x27
0000000000031704	ldr	x8, [x0]
0000000000031708	add	x9, x8, #0x8
000000000003170c	cmp	x8, #0x0
0000000000031710	csel	x19, xzr, x9, eq
0000000000031714	mov	x0, x28
0000000000031718	bl	0x55200 ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
000000000003171c	nop
0000000000031720	ldr	x8, #0x62e50
0000000000031724	cbnz	x8, 0x31734
0000000000031728	b	0x3177c
000000000003172c	ldr	x8, [x8, #0x150]
0000000000031730	cbz	x8, 0x3177c
0000000000031734	add	x9, x8, #0x8
0000000000031738	cmp	x9, x19
000000000003173c	b.eq	0x3172c
0000000000031740	add	x9, x8, #0x148
0000000000031744	ldarb	w9, [x9]
0000000000031748	tbnz	w9, #0x0, 0x3172c
000000000003174c	add	x9, x8, #0x138
0000000000031750	ldar	w9, [x9]
0000000000031754	cmp	w9, #0x1
0000000000031758	b.eq	0x3172c
000000000003175c	ldr	x9, [x8, #0x118]
0000000000031760	add	x9, x9, #0x60
0000000000031764	ldarb	w9, [x9]
0000000000031768	tbnz	w9, #0x0, 0x3172c
000000000003176c	mov	x0, x28
0000000000031770	bl	0x5520c ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
0000000000031774	bl	0x556f8 ; symbol stub for: _sched_yield
0000000000031778	b	0x316fc
000000000003177c	str	x21, [sp, #0x78]
0000000000031780	mov	x0, x28
0000000000031784	bl	0x5520c ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
0000000000031788	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000003178c	ldr	x8, [sp, #0x48]
0000000000031790	stp	xzr, xzr, [x8, #0x8]
0000000000031794	str	xzr, [x8]
0000000000031798	ldr	x22, [x25, #0x8]
000000000003179c	ldr	x0, [x22, #0x40]
00000000000317a0	ldr	x8, [x0]
00000000000317a4	ldr	x8, [x8, #0x18]
00000000000317a8	blr	x8
00000000000317ac	ldr	x21, [x25, #0x60]
00000000000317b0	mov	x0, x21
00000000000317b4	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
00000000000317b8	ldr	x8, [sp, #0x78]
00000000000317bc	str	x8, [x25, #0x58]
00000000000317c0	ldr	x0, [sp, #0x40]
00000000000317c4	bl	0x55224 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
00000000000317c8	mov	x0, x21
00000000000317cc	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000317d0	mov	x0, x25
00000000000317d4	bl	__ZN6kotlin2gc22ConcurrentMarkAndSweep29CollectRootSetAndStartMarkingEv
00000000000317d8	add	x0, sp, #0x80
00000000000317dc	ldr	x1, [sp, #0x38]
00000000000317e0	bl	__ZN6kotlin2gc4MarkIN12_GLOBAL__N_110MarkTraitsEEENS0_9MarkStatsERNT_9MarkQueueE
00000000000317e4	ldr	q0, [sp, #0x80]
00000000000317e8	str	q0, [sp, #0x60]
00000000000317ec	ldr	x19, [sp, #0x90]
00000000000317f0	adr	x21, #0x488b0
00000000000317f4	nop
00000000000317f8	mov	x0, x21
00000000000317fc	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000031800	ldr	q0, [x25, #0x180]
0000000000031804	ldr	q1, [sp, #0x60]
0000000000031808	add.2d	v0, v0, v1
000000000003180c	str	q0, [x25, #0x180]
0000000000031810	ldr	x8, [x25, #0x190]
0000000000031814	add	x8, x8, x19
0000000000031818	str	x8, [x25, #0x190]
000000000003181c	mov	x0, x21
0000000000031820	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000031824	mov	x0, x23
0000000000031828	blr	x27
000000000003182c	ldr	x8, [x0]
0000000000031830	add	x9, x8, #0x8
0000000000031834	cmp	x8, #0x0
0000000000031838	csel	x19, xzr, x9, eq
000000000003183c	mov	x0, x28
0000000000031840	bl	0x55200 ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
0000000000031844	nop
0000000000031848	ldr	x8, #0x62d28
000000000003184c	cbnz	x8, 0x3185c
0000000000031850	b	0x31894
0000000000031854	ldr	x8, [x8, #0x150]
0000000000031858	cbz	x8, 0x31894
000000000003185c	add	x9, x8, #0x8
0000000000031860	cmp	x9, x19
0000000000031864	b.eq	0x31854
0000000000031868	add	x9, x8, #0x148
000000000003186c	ldarb	w9, [x9]
0000000000031870	tbnz	w9, #0x0, 0x31854
0000000000031874	add	x9, x8, #0x138
0000000000031878	ldar	w9, [x9]
000000000003187c	cmp	w9, #0x1
0000000000031880	b.eq	0x31854
0000000000031884	mov	x0, x28
0000000000031888	bl	0x5520c ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000003188c	bl	0x556f8 ; symbol stub for: _sched_yield
0000000000031890	b	0x31824
0000000000031894	mov	x0, x28
0000000000031898	bl	0x5520c ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000003189c	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
00000000000318a0	ldr	x0, [x22, #0x40]
00000000000318a4	ldr	x1, [x25, #0x188]
00000000000318a8	ldr	x8, [x0]
00000000000318ac	ldr	x8, [x8, #0x20]
00000000000318b0	blr	x8
00000000000318b4	sub	x21, x29, #0x80
00000000000318b8	adr	x22, #0x62da0
00000000000318bc	nop
00000000000318c0	adrp	x23, 99 ; 0x94000
00000000000318c4	adrp	x28, 99 ; 0x94000
00000000000318c8	ldaxrb	w8, [x20]
00000000000318cc	stxrb	w9, w24, [x20]
00000000000318d0	cbnz	w9, 0x318c8
00000000000318d4	tbz	w8, #0x0, 0x318e0
00000000000318d8	bl	0x556f8 ; symbol stub for: _sched_yield
00000000000318dc	b	0x318c8
00000000000318e0	stp	x21, x21, [x29, #-0x80]
00000000000318e4	stur	xzr, [x29, #-0x70]
00000000000318e8	ldr	x8, [x22, #0x8]
00000000000318ec	cmp	x8, x22
00000000000318f0	b.ne	0x319cc
00000000000318f4	ldr	x8, [x23, #0x668]
00000000000318f8	cbz	x8, 0x31934
00000000000318fc	ldp	x8, x0, [x22]
0000000000031900	ldr	x9, [x8, #0x8]
0000000000031904	ldr	x10, [x0]
0000000000031908	str	x9, [x10, #0x8]
000000000003190c	ldr	x8, [x8, #0x8]
0000000000031910	str	x10, [x8]
0000000000031914	str	xzr, [x22, #0x10]
0000000000031918	cmp	x0, x22
000000000003191c	b.eq	0x31934
0000000000031920	ldr	x19, [x0, #0x8]
0000000000031924	bl	_mi_free
0000000000031928	mov	x0, x19
000000000003192c	cmp	x19, x22
0000000000031930	b.ne	0x31920
0000000000031934	ldur	x8, [x29, #-0x70]
0000000000031938	adr	x23, #0x62d08
000000000003193c	nop
0000000000031940	cbz	x8, 0x31980
0000000000031944	ldp	x10, x9, [x29, #-0x80]
0000000000031948	ldr	x11, [x10, #0x8]
000000000003194c	ldr	x12, [x9]
0000000000031950	str	x11, [x12, #0x8]
0000000000031954	ldr	x11, [x10, #0x8]
0000000000031958	str	x12, [x11]
000000000003195c	ldr	x11, [x22]
0000000000031960	str	x9, [x11, #0x8]
0000000000031964	str	x11, [x9]
0000000000031968	str	x10, [x22]
000000000003196c	str	x22, [x10, #0x8]
0000000000031970	ldr	x9, [x22, #0x10]
0000000000031974	add	x8, x9, x8
0000000000031978	str	x8, [x22, #0x10]
000000000003197c	stur	xzr, [x29, #-0x70]
0000000000031980	stlrb	wzr, [x20]
0000000000031984	ldaxrb	w8, [x20]
0000000000031988	stxrb	w9, w24, [x20]
000000000003198c	cbnz	w9, 0x31984
0000000000031990	tbz	w8, #0x0, 0x31a2c
0000000000031994	bl	0x556f8 ; symbol stub for: _sched_yield
0000000000031998	b	0x31984
000000000003199c	ldr	x0, [x9, #0x30]
00000000000319a0	ldp	x9, x8, [x0]
00000000000319a4	str	x8, [x9, #0x8]
00000000000319a8	ldr	x8, [x0, #0x8]
00000000000319ac	str	x9, [x8]
00000000000319b0	ldr	x8, [x28, #0x650]
00000000000319b4	sub	x8, x8, #0x1
00000000000319b8	str	x8, [x28, #0x650]
00000000000319bc	bl	_mi_free
00000000000319c0	mov	x8, x19
00000000000319c4	cmp	x19, x22
00000000000319c8	b.eq	0x318f4
00000000000319cc	ldp	x19, x9, [x8, #0x8]
00000000000319d0	add	x10, x9, #0x28
00000000000319d4	ldar	x10, [x10]
00000000000319d8	cbz	x10, 0x3199c
00000000000319dc	cmp	x21, x8
00000000000319e0	b.eq	0x319c0
00000000000319e4	ldr	x9, [x8, #0x8]
00000000000319e8	cmp	x9, x21
00000000000319ec	b.eq	0x319c0
00000000000319f0	ldr	x10, [x8]
00000000000319f4	str	x9, [x10, #0x8]
00000000000319f8	ldr	x9, [x8, #0x8]
00000000000319fc	str	x10, [x9]
0000000000031a00	ldur	x9, [x29, #-0x80]
0000000000031a04	str	x8, [x9, #0x8]
0000000000031a08	stp	x9, x21, [x8]
0000000000031a0c	ldr	x9, [x23, #0x668]
0000000000031a10	sub	x9, x9, #0x1
0000000000031a14	str	x9, [x23, #0x668]
0000000000031a18	ldur	x9, [x29, #-0x70]
0000000000031a1c	add	x9, x9, #0x1
0000000000031a20	stur	x8, [x29, #-0x80]
0000000000031a24	stur	x9, [x29, #-0x70]
0000000000031a28	b	0x319c0
0000000000031a2c	ldr	x21, [x23, #0x8]
0000000000031a30	cmp	x21, x23
0000000000031a34	b.ne	0x31a54
0000000000031a38	b	0x31b6c
0000000000031a3c	ldr	x9, [x8]
0000000000031a40	tst	x9, #0x3
0000000000031a44	b.eq	0x31a78
0000000000031a48	ldr	x21, [x21, #0x8]
0000000000031a4c	cmp	x21, x23
0000000000031a50	b.eq	0x31b6c
0000000000031a54	add	x22, x21, #0x20
0000000000031a58	ldar	w8, [x22]
0000000000031a5c	tbnz	w8, #0x2, 0x31a48
0000000000031a60	add	x8, x21, #0x30
0000000000031a64	ldar	x8, [x8]
0000000000031a68	tbz	w8, #0x0, 0x31a3c
0000000000031a6c	and	x8, x8, #0xfffffffffffffffe
0000000000031a70	ldr	x8, [x8, #0x8]
0000000000031a74	b	0x31a3c
0000000000031a78	ldur	x8, [x8, #-0x8]
0000000000031a7c	tbnz	w8, #0x0, 0x31a48
0000000000031a80	add	x8, x21, #0x30
0000000000031a84	ldar	x9, [x8]
0000000000031a88	tbz	w9, #0x0, 0x31afc
0000000000031a8c	ldar	x8, [x8]
0000000000031a90	tbz	w8, #0x0, 0x31a9c
0000000000031a94	and	x8, x8, #0xfffffffffffffffe
0000000000031a98	ldr	x8, [x8, #0x8]
0000000000031a9c	add	x9, x21, #0x30
0000000000031aa0	ldar	x9, [x9]
0000000000031aa4	sbfx	x10, x9, #0, #1
0000000000031aa8	and	x9, x9, x10
0000000000031aac	and	x10, x9, #0xfffffffffffffffe
0000000000031ab0	add	x9, x10, #0x10
0000000000031ab4	b	0x31ac0
0000000000031ab8	stlxr	w12, w24, [x9]
0000000000031abc	cbz	w12, 0x31acc
0000000000031ac0	ldaxr	w11, [x9]
0000000000031ac4	cbz	w11, 0x31ab8
0000000000031ac8	clrex
0000000000031acc	cmp	w11, #0x1
0000000000031ad0	b.eq	0x31ac0
0000000000031ad4	str	xzr, [x10, #0x8]
0000000000031ad8	ldaxr	w10, [x9]
0000000000031adc	cmp	w10, #0x1
0000000000031ae0	b.ne	0x31af0
0000000000031ae4	stlxr	w10, wzr, [x9]
0000000000031ae8	cbnz	w10, 0x31ad8
0000000000031aec	b	0x31af4
0000000000031af0	clrex
0000000000031af4	add	x9, x21, #0x30
0000000000031af8	stlr	x8, [x9]
0000000000031afc	add	x8, x21, #0x28
0000000000031b00	ldar	x9, [x8]
0000000000031b04	cbz	x9, 0x31b34
0000000000031b08	ldar	x0, [x8]
0000000000031b0c	cbz	x0, 0x31b20
0000000000031b10	nop
0000000000031b14	ldr	x1, #0x629cc
0000000000031b18	mov	w2, #0x2
0000000000031b1c	bl	0x55584 ; Objc message: -[x0 initWithDouble:]
0000000000031b20	ldaxr	w8, [x22]
0000000000031b24	orr	w8, w8, #0x4
0000000000031b28	stlxr	w9, w8, [x22]
0000000000031b2c	cbnz	w9, 0x31b20
0000000000031b30	b	0x31a48
0000000000031b34	add	x0, x21, #0x18
0000000000031b38	bl	__ZN6kotlin2mm15ExtraObjectData9UninstallEv
0000000000031b3c	ldp	x8, x19, [x21]
0000000000031b40	str	x19, [x8, #0x8]
0000000000031b44	ldr	x9, [x21, #0x8]
0000000000031b48	str	x8, [x9]
0000000000031b4c	ldr	x8, [x28, #0x650]
0000000000031b50	sub	x8, x8, #0x1
0000000000031b54	str	x8, [x28, #0x650]
0000000000031b58	mov	x0, x21
0000000000031b5c	bl	_mi_free
0000000000031b60	mov	x21, x19
0000000000031b64	cmp	x21, x23
0000000000031b68	b.ne	0x31a54
0000000000031b6c	stlrb	wzr, [x20]
0000000000031b70	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000031b74	ldr	x8, [x25]
0000000000031b78	add	x21, x8, #0x8
0000000000031b7c	add	x23, x8, #0x20
0000000000031b80	ldaxrb	w8, [x23]
0000000000031b84	stxrb	w9, w24, [x23]
0000000000031b88	cbnz	w9, 0x31b80
0000000000031b8c	tbz	w8, #0x0, 0x31b98
0000000000031b90	bl	0x556f8 ; symbol stub for: _sched_yield
0000000000031b94	b	0x31b80
0000000000031b98	adr	x0, #0x484c8
0000000000031b9c	nop
0000000000031ba0	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000031ba4	adr	x8, #0x626e5
0000000000031ba8	nop
0000000000031bac	stlrb	wzr, [x8]
0000000000031bb0	adr	x19, #0x48450
0000000000031bb4	nop
0000000000031bb8	add	x0, x19, #0x60
0000000000031bbc	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000031bc0	mov	x0, x19
0000000000031bc4	bl	0x55224 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000031bc8	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000031bcc	str	x0, [sp, #0x60]
0000000000031bd0	ldr	x28, [x21]
0000000000031bd4	cbz	x28, 0x31ce0
0000000000031bd8	mov	x22, #0x0
0000000000031bdc	mov	x27, #0x0
0000000000031be0	mov	x25, #0x0
0000000000031be4	mov	x26, #0x0
0000000000031be8	b	0x31c0c
0000000000031bec	ldr	x8, [x28, #0x8]
0000000000031bf0	and	x8, x8, #0xfffffffffffffffe
0000000000031bf4	str	x8, [x28, #0x8]
0000000000031bf8	ldr	x8, [x28]
0000000000031bfc	mov	x22, x28
0000000000031c00	mov	x28, x8
0000000000031c04	mov	x19, x25
0000000000031c08	cbz	x8, 0x31cec
0000000000031c0c	ldr	x8, [x28, #0x8]
0000000000031c10	tbnz	w8, #0x0, 0x31bec
0000000000031c14	add	x8, x28, #0x10
0000000000031c18	ldar	x8, [x8]
0000000000031c1c	and	x8, x8, #0xfffffffffffffffc
0000000000031c20	ldr	x9, [x8]
0000000000031c24	cmp	x8, #0x0
0000000000031c28	ccmp	x9, x8, #0x4, ne
0000000000031c2c	b.ne	0x31c74
0000000000031c30	ldr	x8, [x28, #0x10]
0000000000031c34	and	x8, x8, #0xfffffffffffffffc
0000000000031c38	ldr	x8, [x8]
0000000000031c3c	ldrb	w8, [x8, #0x58]
0000000000031c40	tbnz	w8, #0x6, 0x31c74
0000000000031c44	sub	x0, x29, #0x80
0000000000031c48	mov	x1, x21
0000000000031c4c	mov	x2, x22
0000000000031c50	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE13ExtractUnsafeEPNS9_4NodeE
0000000000031c54	ldp	x0, x28, [x29, #-0x80]
0000000000031c58	stur	xzr, [x29, #-0x80]
0000000000031c5c	cbz	x0, 0x31c68
0000000000031c60	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000031c64	bl	_mi_free
0000000000031c68	mov	x19, x25
0000000000031c6c	cbnz	x28, 0x31c0c
0000000000031c70	b	0x31cec
0000000000031c74	sub	x0, x29, #0x80
0000000000031c78	mov	x1, x21
0000000000031c7c	mov	x2, x22
0000000000031c80	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE13ExtractUnsafeEPNS9_4NodeE
0000000000031c84	ldp	x19, x28, [x29, #-0x80]
0000000000031c88	stur	xzr, [x29, #-0x80]
0000000000031c8c	cbz	x27, 0x31cc8
0000000000031c90	ldr	x0, [x25]
0000000000031c94	str	x19, [x25]
0000000000031c98	cbz	x0, 0x31ca4
0000000000031c9c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000031ca0	bl	_mi_free
0000000000031ca4	ldur	x0, [x29, #-0x80]
0000000000031ca8	add	x26, x26, #0x1
0000000000031cac	stur	xzr, [x29, #-0x80]
0000000000031cb0	cbz	x0, 0x31cbc
0000000000031cb4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000031cb8	bl	_mi_free
0000000000031cbc	mov	x25, x19
0000000000031cc0	cbnz	x28, 0x31c0c
0000000000031cc4	b	0x31cec
0000000000031cc8	add	x26, x26, #0x1
0000000000031ccc	stur	xzr, [x29, #-0x80]
0000000000031cd0	mov	x27, x19
0000000000031cd4	mov	x25, x19
0000000000031cd8	cbnz	x28, 0x31c0c
0000000000031cdc	b	0x31cec
0000000000031ce0	mov	x27, #0x0
0000000000031ce4	mov	x19, #0x0
0000000000031ce8	mov	x26, #0x0
0000000000031cec	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000031cf0	ldr	x25, [sp, #0x50]
0000000000031cf4	ldr	x21, [x25, #0xa0]
0000000000031cf8	mov	x0, x21
0000000000031cfc	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000031d00	ldr	x8, [sp, #0x78]
0000000000031d04	str	x8, [x25, #0x98]
0000000000031d08	ldr	x0, [sp, #0x30]
0000000000031d0c	bl	0x55224 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000031d10	mov	x0, x21
0000000000031d14	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000031d18	ldr	x21, [x25, #0x168]
0000000000031d1c	add	x0, x21, #0x58
0000000000031d20	str	x0, [sp, #0xa0]
0000000000031d24	strb	w24, [sp, #0xa8]
0000000000031d28	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000031d2c	adr	x28, #0x62854
0000000000031d30	nop
0000000000031d34	cbnz	x26, 0x31d40
0000000000031d38	ldr	x8, [x21]
0000000000031d3c	cbz	x8, 0x31dd8
0000000000031d40	add	x28, x21, #0x28
0000000000031d44	ldrb	w8, [x21, #0xc1]
0000000000031d48	cbnz	w8, 0x31d60
0000000000031d4c	add	x1, sp, #0xa0
0000000000031d50	mov	x0, x28
0000000000031d54	bl	0x5523c ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
0000000000031d58	ldrb	w8, [x21, #0xc1]
0000000000031d5c	cbz	w8, 0x31d4c
0000000000031d60	add	x0, x21, #0x140
0000000000031d64	str	x0, [sp, #0x58]
0000000000031d68	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000031d6c	ldr	x8, [x21]
0000000000031d70	cbnz	x8, 0x31f48
0000000000031d74	movi.16b	v0, #0x0
0000000000031d78	stp	q0, q0, [sp, #0xb0]
0000000000031d7c	add	x0, sp, #0xb0
0000000000031d80	adr	x1, #0x2c307 ; literal pool for: "GC finalizer processor"
0000000000031d84	nop
0000000000031d88	mov	w2, #0x16
0000000000031d8c	bl	__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_
0000000000031d90	mov	w0, #0x8
0000000000031d94	bl	0x55314 ; symbol stub for: __Znwm
0000000000031d98	mov	x25, x0
0000000000031d9c	bl	0x551e8 ; symbol stub for: __ZNSt3__115__thread_structC1Ev
0000000000031da0	mov	w0, #0x38
0000000000031da4	bl	0x55314 ; symbol stub for: __Znwm
0000000000031da8	mov	x22, x0
0000000000031dac	sturb	wzr, [x29, #-0x80]
0000000000031db0	sturb	wzr, [x29, #-0x68]
0000000000031db4	ldrb	w8, [sp, #0xc8]
0000000000031db8	cbz	w8, 0x31e50
0000000000031dbc	ldrsb	w8, [sp, #0xc7]
0000000000031dc0	tbnz	w8, #0x1f, 0x31e58
0000000000031dc4	ldr	q0, [sp, #0xb0]
0000000000031dc8	stur	q0, [x29, #-0x80]
0000000000031dcc	ldr	x8, [sp, #0xc0]
0000000000031dd0	stur	x8, [x29, #-0x70]
0000000000031dd4	b	0x31eb0
0000000000031dd8	ldr	x8, [sp, #0x78]
0000000000031ddc	stur	x8, [x29, #-0x80]
0000000000031de0	ldr	x0, [x21, #0xb0]
0000000000031de4	cbz	x0, 0x31fe4
0000000000031de8	ldr	x8, [x0]
0000000000031dec	ldr	x8, [x8, #0x30]
0000000000031df0	sub	x1, x29, #0x80
0000000000031df4	blr	x8
0000000000031df8	ldrb	w8, [sp, #0xa8]
0000000000031dfc	cbz	w8, 0x31e08
0000000000031e00	ldr	x0, [sp, #0xa0]
0000000000031e04	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000031e08	mov	x8, #0xf7cf
0000000000031e0c	movk	x8, #0xe353, lsl #16
0000000000031e10	movk	x8, #0x9ba5, lsl #32
0000000000031e14	movk	x8, #0x20c4, lsl #48
0000000000031e18	ldr	x9, [sp, #0x60]
0000000000031e1c	smulh	x8, x9, x8
0000000000031e20	asr	x9, x8, #7
0000000000031e24	add	x8, x9, x8, lsr #63
0000000000031e28	str	x8, [x25, #0x10]
0000000000031e2c	cbz	x27, 0x31668
0000000000031e30	ldr	x19, [x27]
0000000000031e34	str	xzr, [x27]
0000000000031e38	mov	x0, x27
0000000000031e3c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000031e40	bl	_mi_free
0000000000031e44	mov	x27, x19
0000000000031e48	cbnz	x19, 0x31e30
0000000000031e4c	b	0x31668
0000000000031e50	mov	w8, #0x1
0000000000031e54	b	0x31eb8
0000000000031e58	str	x25, [sp, #0x18]
0000000000031e5c	ldp	x1, x25, [sp, #0xb0]
0000000000031e60	cmp	x25, #0x16
0000000000031e64	b.hi	0x31e74
0000000000031e68	sub	x0, x29, #0x80
0000000000031e6c	sturb	w25, [x29, #-0x69]
0000000000031e70	b	0x31ea4
0000000000031e74	str	x1, [sp, #0x10]
0000000000031e78	cmn	x25, #0x10
0000000000031e7c	b.hs	0x31fec
0000000000031e80	add	x8, x25, #0x10
0000000000031e84	and	x0, x8, #0xfffffffffffffff0
0000000000031e88	str	x0, [sp, #0x8]
0000000000031e8c	mov	w1, #0x1
0000000000031e90	bl	0x553d4 ; symbol stub for: _calloc
0000000000031e94	ldp	x8, x1, [sp, #0x8]
0000000000031e98	orr	x8, x8, #0x8000000000000000
0000000000031e9c	stp	x25, x8, [x29, #-0x78]
0000000000031ea0	stur	x0, [x29, #-0x80]
0000000000031ea4	add	x2, x25, #0x1
0000000000031ea8	bl	0x554ac ; symbol stub for: _memcpy
0000000000031eac	ldr	x25, [sp, #0x18]
0000000000031eb0	mov	w8, #0x0
0000000000031eb4	sturb	w24, [x29, #-0x68]
0000000000031eb8	adr	x9, #0x4a8
0000000000031ebc	nop
0000000000031ec0	stp	x25, x9, [x22]
0000000000031ec4	mov	x25, x22
0000000000031ec8	strb	wzr, [x25, #0x10]!
0000000000031ecc	strb	wzr, [x22, #0x28]
0000000000031ed0	tbnz	w8, #0x0, 0x31ef0
0000000000031ed4	ldur	q0, [x29, #-0x80]
0000000000031ed8	str	q0, [x25]
0000000000031edc	ldur	x8, [x29, #-0x70]
0000000000031ee0	str	x8, [x25, #0x10]
0000000000031ee4	stp	xzr, xzr, [x29, #-0x78]
0000000000031ee8	stur	xzr, [x29, #-0x80]
0000000000031eec	strb	w24, [x22, #0x28]
0000000000031ef0	str	x21, [x22, #0x30]
0000000000031ef4	sub	x0, x29, #0x88
0000000000031ef8	mov	x1, #0x0
0000000000031efc	adr	x2, #0x7a8
0000000000031f00	nop
0000000000031f04	mov	x3, x22
0000000000031f08	bl	0x55650 ; symbol stub for: _pthread_create
0000000000031f0c	cbnz	w0, 0x31fd4
0000000000031f10	ldr	x8, [x21]
0000000000031f14	cbnz	x8, 0x31fd0
0000000000031f18	ldur	x8, [x29, #-0x88]
0000000000031f1c	str	x8, [x21]
0000000000031f20	stur	xzr, [x29, #-0x88]
0000000000031f24	sub	x0, x29, #0x88
0000000000031f28	bl	0x552b4 ; symbol stub for: __ZNSt3__16threadD1Ev
0000000000031f2c	ldrb	w8, [sp, #0xc8]
0000000000031f30	ldr	x25, [sp, #0x50]
0000000000031f34	cbz	w8, 0x31f48
0000000000031f38	ldrsb	w8, [sp, #0xc7]
0000000000031f3c	tbz	w8, #0x1f, 0x31f48
0000000000031f40	ldr	x0, [sp, #0xb0]
0000000000031f44	bl	0x55458 ; symbol stub for: _free
0000000000031f48	ldr	x0, [sp, #0x58]
0000000000031f4c	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000031f50	cbz	x27, 0x31f8c
0000000000031f54	ldr	x8, [x21, #0x10]
0000000000031f58	cbz	x8, 0x31f78
0000000000031f5c	ldr	x8, [x21, #0x18]
0000000000031f60	ldr	x0, [x8]
0000000000031f64	str	x27, [x8]
0000000000031f68	cbz	x0, 0x31f7c
0000000000031f6c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000031f70	bl	_mi_free
0000000000031f74	b	0x31f7c
0000000000031f78	str	x27, [x21, #0x10]
0000000000031f7c	mov	x27, #0x0
0000000000031f80	ldr	x8, [x21, #0x20]
0000000000031f84	add	x8, x8, x26
0000000000031f88	stp	x19, x8, [x21, #0x18]
0000000000031f8c	ldr	x8, [sp, #0x78]
0000000000031f90	str	x8, [x21, #0xb8]
0000000000031f94	mov	x0, x28
0000000000031f98	bl	0x55224 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000031f9c	adr	x28, #0x625e4
0000000000031fa0	nop
0000000000031fa4	ldrb	w8, [sp, #0xa8]
0000000000031fa8	cbnz	w8, 0x31e00
0000000000031fac	b	0x31e08
0000000000031fb0	ldp	x29, x30, [sp, #0x160]
0000000000031fb4	ldp	x20, x19, [sp, #0x150]
0000000000031fb8	ldp	x22, x21, [sp, #0x140]
0000000000031fbc	ldp	x24, x23, [sp, #0x130]
0000000000031fc0	ldp	x26, x25, [sp, #0x120]
0000000000031fc4	ldp	x28, x27, [sp, #0x110]
0000000000031fc8	add	sp, sp, #0x170
0000000000031fcc	ret
0000000000031fd0	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000031fd4	adr	x1, #0x2c0ca ; literal pool for: "thread constructor failed"
0000000000031fd8	nop
0000000000031fdc	bl	0x55260 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000031fe0	b	0x31ff4
0000000000031fe4	bl	__ZNSt3__125__throw_bad_function_callEv
0000000000031fe8	b	0x31ff4
0000000000031fec	sub	x0, x29, #0x80
0000000000031ff0	bl	0x551ac ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
0000000000031ff4	brk	#0x1
0000000000031ff8	bl	___clang_call_terminate
0000000000031ffc	mov	x19, x0
0000000000032000	ldurb	w8, [x29, #-0x68]
0000000000032004	cbz	w8, 0x32024
0000000000032008	sub	x0, x29, #0x80
000000000003200c	bl	__ZN6kotlin2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEv.cold.1
0000000000032010	b	0x32024
0000000000032014	b	0x32018
0000000000032018	mov	x19, x0
000000000003201c	ldrb	w8, [sp, #0xa8]
0000000000032020	cbnz	w8, 0x3202c
0000000000032024	mov	x0, x19
0000000000032028	bl	___clang_call_terminate
000000000003202c	ldr	x0, [sp, #0xa0]
0000000000032030	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000032034	mov	x0, x19
0000000000032038	bl	___clang_call_terminate
000000000003203c	bl	___clang_call_terminate
0000000000032040	bl	___clang_call_terminate
0000000000032044	bl	___clang_call_terminate
0000000000032048	b	0x3204c
000000000003204c	mov	x19, x0
0000000000032050	ldrb	w8, [x22, #0x28]
0000000000032054	cbz	w8, 0x32068
0000000000032058	ldrsb	w8, [x22, #0x27]
000000000003205c	tbz	w8, #0x1f, 0x32068
0000000000032060	ldr	x0, [x25]
0000000000032064	bl	0x55458 ; symbol stub for: _free
0000000000032068	ldr	x0, [x22]
000000000003206c	str	xzr, [x22]
0000000000032070	cbz	x0, 0x3209c
0000000000032074	bl	0x551f4 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000032078	bl	0x55308 ; symbol stub for: __ZdlPv
000000000003207c	b	0x3209c
0000000000032080	mov	x19, x0
0000000000032084	mov	x22, x25
0000000000032088	mov	x0, x25
000000000003208c	bl	0x551f4 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000032090	b	0x3209c
0000000000032094	mov	x22, x25
0000000000032098	mov	x19, x0
000000000003209c	mov	x0, x22
00000000000320a0	bl	0x55308 ; symbol stub for: __ZdlPv
00000000000320a4	b	0x320ac
00000000000320a8	mov	x19, x0
00000000000320ac	ldrb	w8, [sp, #0xc8]
00000000000320b0	cbz	w8, 0x320c4
00000000000320b4	ldrsb	w8, [sp, #0xc7]
00000000000320b8	tbz	w8, #0x1f, 0x320c4
00000000000320bc	ldr	x0, [sp, #0xb0]
00000000000320c0	bl	0x55458 ; symbol stub for: _free
00000000000320c4	ldr	x0, [sp, #0x58]
00000000000320c8	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000320cc	mov	x0, x19
00000000000320d0	bl	___clang_call_terminate
00000000000320d4	bl	___clang_call_terminate
00000000000320d8	bl	___clang_call_terminate
00000000000320dc	bl	___clang_call_terminate
00000000000320e0	mov	x19, x0
00000000000320e4	cbz	x27, 0x32104
00000000000320e8	ldr	x20, [x27]
00000000000320ec	str	xzr, [x27]
00000000000320f0	mov	x0, x27
00000000000320f4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
00000000000320f8	bl	_mi_free
00000000000320fc	mov	x27, x20
0000000000032100	cbnz	x20, 0x320e8
0000000000032104	stlrb	wzr, [x23]
0000000000032108	mov	x0, x19
000000000003210c	bl	___clang_call_terminate
0000000000032110	bl	___clang_call_terminate
0000000000032114	bl	___clang_call_terminate
0000000000032118	bl	___clang_call_terminate
000000000003211c	bl	___clang_call_terminate
0000000000032120	bl	___clang_call_terminate
0000000000032124	bl	___clang_call_terminate
0000000000032128	bl	___clang_call_terminate
000000000003212c	bl	___clang_call_terminate
__ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvN6kotlin12ScopedThread10attributesEOZNS7_2gc22ConcurrentMarkAndSweepC1ERNS7_2mm13ObjectFactoryISB_EERNSA_11GCSchedulerEE3$_3ES9_SI_EEEEEPvSN_:
0000000000032130	sub	sp, sp, #0x40
0000000000032134	stp	x20, x19, [sp, #0x20]
0000000000032138	stp	x29, x30, [sp, #0x30]
000000000003213c	add	x29, sp, #0x30
0000000000032140	mov	x19, x0
0000000000032144	bl	0x55254 ; symbol stub for: __ZNSt3__119__thread_local_dataEv
0000000000032148	ldr	x1, [x19]
000000000003214c	str	xzr, [x19]
0000000000032150	ldr	x0, [x0]
0000000000032154	bl	0x556e0 ; symbol stub for: _pthread_setspecific
0000000000032158	add	x1, x19, #0x30
000000000003215c	ldr	x8, [x19, #0x8]
0000000000032160	strb	wzr, [sp]
0000000000032164	strb	wzr, [sp, #0x18]
0000000000032168	ldrb	w9, [x19, #0x28]
000000000003216c	cbz	w9, 0x32190
0000000000032170	ldr	q0, [x19, #0x10]
0000000000032174	str	q0, [sp]
0000000000032178	ldr	x9, [x19, #0x20]
000000000003217c	str	x9, [sp, #0x10]
0000000000032180	stp	xzr, xzr, [x19, #0x18]
0000000000032184	str	xzr, [x19, #0x10]
0000000000032188	mov	w9, #0x1
000000000003218c	strb	w9, [sp, #0x18]
0000000000032190	mov	x0, sp
0000000000032194	blr	x8
0000000000032198	ldrb	w8, [sp, #0x18]
000000000003219c	cbz	w8, 0x321b0
00000000000321a0	ldrsb	w8, [sp, #0x17]
00000000000321a4	tbz	w8, #0x1f, 0x321b0
00000000000321a8	ldr	x0, [sp]
00000000000321ac	bl	0x55458 ; symbol stub for: _free
00000000000321b0	ldrb	w8, [x19, #0x28]
00000000000321b4	cbz	w8, 0x321c8
00000000000321b8	ldrsb	w8, [x19, #0x27]
00000000000321bc	tbz	w8, #0x1f, 0x321c8
00000000000321c0	ldr	x0, [x19, #0x10]
00000000000321c4	bl	0x55458 ; symbol stub for: _free
00000000000321c8	ldr	x0, [x19]
00000000000321cc	str	xzr, [x19]
00000000000321d0	cbz	x0, 0x321dc
00000000000321d4	bl	0x551f4 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
00000000000321d8	bl	0x55308 ; symbol stub for: __ZdlPv
00000000000321dc	mov	x0, x19
00000000000321e0	bl	0x55308 ; symbol stub for: __ZdlPv
00000000000321e4	mov	x0, #0x0
00000000000321e8	ldp	x29, x30, [sp, #0x30]
00000000000321ec	ldp	x20, x19, [sp, #0x20]
00000000000321f0	add	sp, sp, #0x40
00000000000321f4	ret
00000000000321f8	mov	x20, x0
00000000000321fc	ldrb	w8, [sp, #0x18]
0000000000032200	cbz	w8, 0x32228
0000000000032204	ldrsb	w8, [sp, #0x17]
0000000000032208	tbz	w8, #0x1f, 0x32228
000000000003220c	ldr	x0, [sp]
0000000000032210	bl	0x55458 ; symbol stub for: _free
0000000000032214	b	0x32228
0000000000032218	mov	x20, x0
000000000003221c	b	0x32228
0000000000032220	mov	x20, x0
0000000000032224	cbz	x19, 0x3225c
0000000000032228	ldrb	w8, [x19, #0x28]
000000000003222c	cbz	w8, 0x32240
0000000000032230	ldrsb	w8, [x19, #0x27]
0000000000032234	tbz	w8, #0x1f, 0x32240
0000000000032238	ldr	x0, [x19, #0x10]
000000000003223c	bl	0x55458 ; symbol stub for: _free
0000000000032240	ldr	x0, [x19]
0000000000032244	str	xzr, [x19]
0000000000032248	cbz	x0, 0x32254
000000000003224c	bl	0x551f4 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000032250	bl	0x55308 ; symbol stub for: __ZdlPv
0000000000032254	mov	x0, x19
0000000000032258	bl	0x55308 ; symbol stub for: __ZdlPv
000000000003225c	mov	x0, x20
0000000000032260	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZN13GCStateHolderD1Ev:
0000000000032264	stp	x20, x19, [sp, #-0x20]!
0000000000032268	stp	x29, x30, [sp, #0x10]
000000000003226c	add	x29, sp, #0x10
0000000000032270	mov	x19, x0
0000000000032274	add	x0, x0, #0x110
0000000000032278	bl	0x55248 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000003227c	add	x0, x19, #0xd0
0000000000032280	bl	0x55248 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
0000000000032284	add	x0, x19, #0x90
0000000000032288	bl	0x55248 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000003228c	add	x0, x19, #0x50
0000000000032290	bl	0x55248 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
0000000000032294	mov	x0, x19
0000000000032298	ldp	x29, x30, [sp, #0x10]
000000000003229c	ldp	x20, x19, [sp], #0x20
00000000000322a0	b	0x55284 ; symbol stub for: __ZNSt3__15mutexD1Ev
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE13ExtractUnsafeEPNS9_4NodeE:
00000000000322a4	stp	x22, x21, [sp, #-0x30]!
00000000000322a8	stp	x20, x19, [sp, #0x10]
00000000000322ac	stp	x29, x30, [sp, #0x20]
00000000000322b0	add	x29, sp, #0x20
00000000000322b4	mov	x20, x1
00000000000322b8	mov	x19, x0
00000000000322bc	cbz	x2, 0x322f8
00000000000322c0	mov	x21, x2
00000000000322c4	ldr	x22, [x2]
00000000000322c8	str	xzr, [x2]
00000000000322cc	ldr	x8, [x22]
00000000000322d0	str	xzr, [x22]
00000000000322d4	ldr	x0, [x2]
00000000000322d8	str	x8, [x2]
00000000000322dc	cbz	x0, 0x322ec
00000000000322e0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
00000000000322e4	bl	_mi_free
00000000000322e8	ldr	x8, [x21]
00000000000322ec	mov	x0, x21
00000000000322f0	cbnz	x8, 0x3233c
00000000000322f4	b	0x32334
00000000000322f8	ldr	x22, [x20]
00000000000322fc	str	xzr, [x20]
0000000000032300	ldr	x8, [x22]
0000000000032304	str	xzr, [x22]
0000000000032308	ldr	x0, [x20]
000000000003230c	str	x8, [x20]
0000000000032310	cbz	x0, 0x32320
0000000000032314	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000032318	bl	_mi_free
000000000003231c	ldr	x8, [x20]
0000000000032320	cbz	x8, 0x3232c
0000000000032324	mov	x21, x20
0000000000032328	b	0x3233c
000000000003232c	mov	x21, #0x0
0000000000032330	mov	x0, x20
0000000000032334	str	x21, [x20, #0x8]
0000000000032338	mov	x21, x0
000000000003233c	ldr	x8, [x20, #0x10]
0000000000032340	sub	x8, x8, #0x1
0000000000032344	str	x8, [x20, #0x10]
0000000000032348	ldr	x8, [x21]
000000000003234c	stp	x22, x8, [x19]
0000000000032350	ldp	x29, x30, [sp, #0x20]
0000000000032354	ldp	x20, x19, [sp, #0x10]
0000000000032358	ldp	x22, x21, [sp], #0x30
000000000003235c	ret
__ZN6kotlin12ScopedThread3RunIZNS_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOS7_DpOS8_:
0000000000032360	sub	sp, sp, #0xc0
0000000000032364	stp	x28, x27, [sp, #0x60]
0000000000032368	stp	x26, x25, [sp, #0x70]
000000000003236c	stp	x24, x23, [sp, #0x80]
0000000000032370	stp	x22, x21, [sp, #0x90]
0000000000032374	stp	x20, x19, [sp, #0xa0]
0000000000032378	stp	x29, x30, [sp, #0xb0]
000000000003237c	add	x29, sp, #0xb0
0000000000032380	mov	x19, x1
0000000000032384	ldrb	w8, [x0, #0x18]
0000000000032388	cbz	w8, 0x3239c
000000000003238c	ldrsb	w8, [x0, #0x17]
0000000000032390	tbz	w8, #0x1f, 0x32398
0000000000032394	ldr	x0, [x0]
0000000000032398	bl	0x556d4 ; symbol stub for: _pthread_setname_np
000000000003239c	ldr	x28, [x19]
00000000000323a0	bl	_Kotlin_initRuntimeIfNeeded
00000000000323a4	add	x19, x28, #0xc8
00000000000323a8	mov	x0, x19
00000000000323ac	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
00000000000323b0	mov	w23, #0x1
00000000000323b4	strb	w23, [x28, #0x138]
00000000000323b8	str	x19, [sp, #0x18]
00000000000323bc	mov	x0, x19
00000000000323c0	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000323c4	add	x0, x28, #0x108
00000000000323c8	str	x0, [sp, #0x10]
00000000000323cc	bl	0x55224 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
00000000000323d0	mov	x21, #0x0
00000000000323d4	add	x25, x28, #0x58
00000000000323d8	add	x8, sp, #0x48
00000000000323dc	add	x9, x8, #0x8
00000000000323e0	add	x24, x28, #0x28
00000000000323e4	add	x8, sp, #0x28
00000000000323e8	add	x8, x8, #0x8
00000000000323ec	stp	x8, x9, [sp]
00000000000323f0	add	x8, x28, #0x18
00000000000323f4	str	x8, [sp, #0x20]
00000000000323f8	adrp	x8, 72 ; 0x7a000
00000000000323fc	add	x8, x8, #0x2c0
0000000000032400	ldr	x19, [x8]
0000000000032404	str	x25, [sp, #0x48]
0000000000032408	strb	w23, [sp, #0x50]
000000000003240c	mov	x0, x25
0000000000032410	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000032414	ldr	x20, [x28, #0x20]
0000000000032418	cbnz	x20, 0x32444
000000000003241c	ldr	x8, [x28, #0xb8]
0000000000032420	cmp	x8, x21
0000000000032424	b.ne	0x32608
0000000000032428	ldrb	w8, [x28, #0xc0]
000000000003242c	cbnz	w8, 0x32610
0000000000032430	add	x1, sp, #0x48
0000000000032434	mov	x0, x24
0000000000032438	bl	0x5523c ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
000000000003243c	ldr	x20, [x28, #0x20]
0000000000032440	cbz	x20, 0x3241c
0000000000032444	ldp	x8, x9, [x28, #0x10]
0000000000032448	str	xzr, [x28, #0x10]
000000000003244c	ldr	x21, [x28, #0xb8]
0000000000032450	ldrb	w10, [sp, #0x50]
0000000000032454	stp	x9, x20, [sp, #0x38]
0000000000032458	str	x8, [sp, #0x30]
000000000003245c	ldr	x8, [sp, #0x20]
0000000000032460	stp	xzr, xzr, [x8]
0000000000032464	cbz	w10, 0x3266c
0000000000032468	ldr	x0, [sp, #0x48]
000000000003246c	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000032470	strb	wzr, [sp, #0x50]
0000000000032474	cbz	x20, 0x324f8
0000000000032478	adrp	x0, 72 ; 0x7a000
000000000003247c	add	x0, x0, #0x2c0
0000000000032480	blr	x19
0000000000032484	ldr	x22, [x0]
0000000000032488	add	x26, x22, #0x138
000000000003248c	ldaxr	w20, [x26]
0000000000032490	stlxr	w8, wzr, [x26]
0000000000032494	cbnz	w8, 0x3248c
0000000000032498	cmp	w20, #0x1
000000000003249c	b.ne	0x324b8
00000000000324a0	adr	x8, #0x61de9
00000000000324a4	nop
00000000000324a8	ldarb	w8, [x8]
00000000000324ac	tbz	w8, #0x0, 0x324b8
00000000000324b0	mov	x0, x26
00000000000324b4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000324b8	ldr	x23, [sp, #0x30]
00000000000324bc	cbnz	x23, 0x32560
00000000000324c0	mov	w23, #0x1
00000000000324c4	cbz	x22, 0x324f8
00000000000324c8	ldaxr	w8, [x26]
00000000000324cc	stlxr	w9, w20, [x26]
00000000000324d0	cbnz	w9, 0x324c8
00000000000324d4	cbnz	w20, 0x324f8
00000000000324d8	cmp	w8, #0x1
00000000000324dc	b.ne	0x324f8
00000000000324e0	adr	x8, #0x61da9
00000000000324e4	nop
00000000000324e8	ldarb	w8, [x8]
00000000000324ec	tbz	w8, #0x0, 0x324f8
00000000000324f0	mov	x0, x26
00000000000324f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000324f8	str	x21, [sp, #0x58]
00000000000324fc	ldr	x0, [x28, #0xb0]
0000000000032500	cbz	x0, 0x32664
0000000000032504	ldr	x8, [x0]
0000000000032508	ldr	x8, [x8, #0x30]
000000000003250c	add	x1, sp, #0x58
0000000000032510	blr	x8
0000000000032514	ldr	x0, [sp, #0x30]
0000000000032518	str	xzr, [sp, #0x30]
000000000003251c	cbz	x0, 0x325f0
0000000000032520	ldr	x20, [x0]
0000000000032524	str	xzr, [x0]
0000000000032528	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000003252c	bl	_mi_free
0000000000032530	mov	x0, x20
0000000000032534	cbnz	x20, 0x32520
0000000000032538	ldr	x0, [sp, #0x30]
000000000003253c	str	xzr, [sp, #0x30]
0000000000032540	cbz	x0, 0x3254c
0000000000032544	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000032548	bl	_mi_free
000000000003254c	ldrb	w8, [sp, #0x50]
0000000000032550	cbnz	w8, 0x325fc
0000000000032554	b	0x32404
0000000000032558	ldr	x23, [x23]
000000000003255c	cbz	x23, 0x324c0
0000000000032560	add	x27, x23, #0x10
0000000000032564	ldr	x8, [x23, #0x10]
0000000000032568	and	x8, x8, #0xfffffffffffffffc
000000000003256c	ldr	x1, [x8]
0000000000032570	ldrb	w8, [x1, #0x58]
0000000000032574	tbnz	w8, #0x6, 0x32594
0000000000032578	ldar	x8, [x27]
000000000003257c	and	x8, x8, #0xfffffffffffffffc
0000000000032580	ldr	x9, [x8]
0000000000032584	cmp	x8, #0x0
0000000000032588	ccmp	x9, x8, #0x4, ne
000000000003258c	b.eq	0x32558
0000000000032590	b	0x325b4
0000000000032594	mov	x0, x27
0000000000032598	bl	__ZN12_GLOBAL__N_121RunFinalizerHooksImplEP9ObjHeaderPK8TypeInfo
000000000003259c	ldar	x8, [x27]
00000000000325a0	and	x8, x8, #0xfffffffffffffffc
00000000000325a4	ldr	x9, [x8]
00000000000325a8	cmp	x8, #0x0
00000000000325ac	ccmp	x9, x8, #0x4, ne
00000000000325b0	b.eq	0x32558
00000000000325b4	ldar	x8, [x27]
00000000000325b8	and	x8, x8, #0xfffffffffffffffc
00000000000325bc	ldr	x9, [x8]
00000000000325c0	cmp	x9, x8
00000000000325c4	csel	x27, xzr, x8, eq
00000000000325c8	mov	x0, x27
00000000000325cc	bl	__ZN6kotlin2mm15ExtraObjectData9UninstallEv
00000000000325d0	adrp	x0, 72 ; 0x7a000
00000000000325d4	add	x0, x0, #0x2c0
00000000000325d8	blr	x19
00000000000325dc	ldr	x8, [x0]
00000000000325e0	add	x0, x8, #0x8
00000000000325e4	mov	x1, x27
00000000000325e8	bl	__ZN6kotlin2mm22ExtraObjectDataFactory22DestroyExtraObjectDataEPNS0_10ThreadDataERNS0_15ExtraObjectDataE
00000000000325ec	b	0x32558
00000000000325f0	str	xzr, [sp, #0x30]
00000000000325f4	ldrb	w8, [sp, #0x50]
00000000000325f8	cbz	w8, 0x32404
00000000000325fc	ldr	x0, [sp, #0x48]
0000000000032600	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000032604	b	0x32404
0000000000032608	mov	x20, #0x0
000000000003260c	b	0x32444
0000000000032610	strb	wzr, [x28, #0xc1]
0000000000032614	ldrb	w8, [sp, #0x50]
0000000000032618	cbz	w8, 0x32624
000000000003261c	ldr	x0, [sp, #0x48]
0000000000032620	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000032624	ldr	x19, [sp, #0x18]
0000000000032628	mov	x0, x19
000000000003262c	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000032630	strb	wzr, [x28, #0x138]
0000000000032634	mov	x0, x19
0000000000032638	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000003263c	ldr	x0, [sp, #0x10]
0000000000032640	bl	0x55224 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000032644	ldp	x29, x30, [sp, #0xb0]
0000000000032648	ldp	x20, x19, [sp, #0xa0]
000000000003264c	ldp	x22, x21, [sp, #0x90]
0000000000032650	ldp	x24, x23, [sp, #0x80]
0000000000032654	ldp	x26, x25, [sp, #0x70]
0000000000032658	ldp	x28, x27, [sp, #0x60]
000000000003265c	add	sp, sp, #0xc0
0000000000032660	ret
0000000000032664	bl	__ZNSt3__125__throw_bad_function_callEv
0000000000032668	b	0x3267c
000000000003266c	adr	x1, #0x2ba4c ; literal pool for: "unique_lock::unlock: not locked"
0000000000032670	nop
0000000000032674	mov	w0, #0x1
0000000000032678	bl	0x55260 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000003267c	brk	#0x1
0000000000032680	bl	___clang_call_terminate
0000000000032684	b	0x32688
0000000000032688	mov	x19, x0
000000000003268c	ldr	x3, [sp, #0x30]
0000000000032690	add	x0, sp, #0x48
0000000000032694	ldp	x2, x1, [sp]
0000000000032698	bl	__ZN6kotlin12ScopedThread3RunIZNS_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOS7_DpOS8_.cold.1
000000000003269c	mov	x0, x19
00000000000326a0	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvN6kotlin12ScopedThread10attributesEOZNS7_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0ES9_SC_EEEEEPvSH_:
00000000000326a4	sub	sp, sp, #0x40
00000000000326a8	stp	x20, x19, [sp, #0x20]
00000000000326ac	stp	x29, x30, [sp, #0x30]
00000000000326b0	add	x29, sp, #0x30
00000000000326b4	mov	x19, x0
00000000000326b8	bl	0x55254 ; symbol stub for: __ZNSt3__119__thread_local_dataEv
00000000000326bc	ldr	x1, [x19]
00000000000326c0	str	xzr, [x19]
00000000000326c4	ldr	x0, [x0]
00000000000326c8	bl	0x556e0 ; symbol stub for: _pthread_setspecific
00000000000326cc	add	x1, x19, #0x30
00000000000326d0	ldr	x8, [x19, #0x8]
00000000000326d4	strb	wzr, [sp]
00000000000326d8	strb	wzr, [sp, #0x18]
00000000000326dc	ldrb	w9, [x19, #0x28]
00000000000326e0	cbz	w9, 0x32704
00000000000326e4	ldr	q0, [x19, #0x10]
00000000000326e8	str	q0, [sp]
00000000000326ec	ldr	x9, [x19, #0x20]
00000000000326f0	str	x9, [sp, #0x10]
00000000000326f4	stp	xzr, xzr, [x19, #0x18]
00000000000326f8	str	xzr, [x19, #0x10]
00000000000326fc	mov	w9, #0x1
0000000000032700	strb	w9, [sp, #0x18]
0000000000032704	mov	x0, sp
0000000000032708	blr	x8
000000000003270c	ldrb	w8, [sp, #0x18]
0000000000032710	cbz	w8, 0x32724
0000000000032714	ldrsb	w8, [sp, #0x17]
0000000000032718	tbz	w8, #0x1f, 0x32724
000000000003271c	ldr	x0, [sp]
0000000000032720	bl	0x55458 ; symbol stub for: _free
0000000000032724	ldrb	w8, [x19, #0x28]
0000000000032728	cbz	w8, 0x3273c
000000000003272c	ldrsb	w8, [x19, #0x27]
0000000000032730	tbz	w8, #0x1f, 0x3273c
0000000000032734	ldr	x0, [x19, #0x10]
0000000000032738	bl	0x55458 ; symbol stub for: _free
000000000003273c	ldr	x0, [x19]
0000000000032740	str	xzr, [x19]
0000000000032744	cbz	x0, 0x32750
0000000000032748	bl	0x551f4 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000003274c	bl	0x55308 ; symbol stub for: __ZdlPv
0000000000032750	mov	x0, x19
0000000000032754	bl	0x55308 ; symbol stub for: __ZdlPv
0000000000032758	mov	x0, #0x0
000000000003275c	ldp	x29, x30, [sp, #0x30]
0000000000032760	ldp	x20, x19, [sp, #0x20]
0000000000032764	add	sp, sp, #0x40
0000000000032768	ret
000000000003276c	mov	x20, x0
0000000000032770	ldrb	w8, [sp, #0x18]
0000000000032774	cbz	w8, 0x3279c
0000000000032778	ldrsb	w8, [sp, #0x17]
000000000003277c	tbz	w8, #0x1f, 0x3279c
0000000000032780	ldr	x0, [sp]
0000000000032784	bl	0x55458 ; symbol stub for: _free
0000000000032788	b	0x3279c
000000000003278c	mov	x20, x0
0000000000032790	b	0x3279c
0000000000032794	mov	x20, x0
0000000000032798	cbz	x19, 0x327d0
000000000003279c	ldrb	w8, [x19, #0x28]
00000000000327a0	cbz	w8, 0x327b4
00000000000327a4	ldrsb	w8, [x19, #0x27]
00000000000327a8	tbz	w8, #0x1f, 0x327b4
00000000000327ac	ldr	x0, [x19, #0x10]
00000000000327b0	bl	0x55458 ; symbol stub for: _free
00000000000327b4	ldr	x0, [x19]
00000000000327b8	str	xzr, [x19]
00000000000327bc	cbz	x0, 0x327c8
00000000000327c0	bl	0x551f4 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
00000000000327c4	bl	0x55308 ; symbol stub for: __ZdlPv
00000000000327c8	mov	x0, x19
00000000000327cc	bl	0x55308 ; symbol stub for: __ZdlPv
00000000000327d0	mov	x0, x20
00000000000327d4	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEED1Ev:
00000000000327d8	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEED0Ev:
00000000000327dc	b	0x55308 ; symbol stub for: __ZdlPv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE7__cloneEv:
00000000000327e0	stp	x20, x19, [sp, #-0x20]!
00000000000327e4	stp	x29, x30, [sp, #0x10]
00000000000327e8	add	x29, sp, #0x10
00000000000327ec	mov	x19, x0
00000000000327f0	mov	w0, #0x10
00000000000327f4	bl	0x55314 ; symbol stub for: __Znwm
00000000000327f8	ldr	x8, [x19, #0x8]
00000000000327fc	adr	x9, #0x3e36c
0000000000032800	nop
0000000000032804	stp	x9, x8, [x0]
0000000000032808	ldp	x29, x30, [sp, #0x10]
000000000003280c	ldp	x20, x19, [sp], #0x20
0000000000032810	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE7__cloneEPNS0_6__baseISE_EE:
0000000000032814	ldr	x8, [x0, #0x8]
0000000000032818	adr	x9, #0x3e350
000000000003281c	nop
0000000000032820	stp	x9, x8, [x1]
0000000000032824	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE7destroyEv:
0000000000032828	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE18destroy_deallocateEv:
000000000003282c	b	0x55308 ; symbol stub for: __ZdlPv
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEEclEv:
0000000000032830	ldr	x0, [x0, #0x8]
0000000000032834	b	__ZZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerEENK3$_2clEv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE6targetERKSt9type_info:
0000000000032838	stp	x20, x19, [sp, #-0x20]!
000000000003283c	stp	x29, x30, [sp, #0x10]
0000000000032840	add	x29, sp, #0x10
0000000000032844	mov	x19, x0
0000000000032848	ldr	x9, [x1, #0x8]
000000000003284c	adr	x8, #0x26025
0000000000032850	nop
0000000000032854	cmp	x9, x8
0000000000032858	b.ne	0x3286c
000000000003285c	add	x0, x19, #0x8
0000000000032860	ldp	x29, x30, [sp, #0x10]
0000000000032864	ldp	x20, x19, [sp], #0x20
0000000000032868	ret
000000000003286c	tst	x9, x8
0000000000032870	b.lt	0x32884
0000000000032874	mov	x0, #0x0
0000000000032878	ldp	x29, x30, [sp, #0x10]
000000000003287c	ldp	x20, x19, [sp], #0x20
0000000000032880	ret
0000000000032884	and	x0, x9, #0x7fffffffffffffff
0000000000032888	and	x1, x8, #0x7fffffffffffffff
000000000003288c	bl	0x55734 ; symbol stub for: _strcmp
0000000000032890	cbz	w0, 0x3285c
0000000000032894	mov	x0, #0x0
0000000000032898	ldp	x29, x30, [sp, #0x10]
000000000003289c	ldp	x20, x19, [sp], #0x20
00000000000328a0	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE11target_typeEv:
00000000000328a4	adr	x0, #0x3e324
00000000000328a8	nop
00000000000328ac	ret
__ZZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerEENK3$_2clEv:
00000000000328b0	stp	x20, x19, [sp, #-0x20]!
00000000000328b4	stp	x29, x30, [sp, #0x10]
00000000000328b8	add	x29, sp, #0x10
00000000000328bc	mov	x8, x0
00000000000328c0	adrp	x0, 72 ; 0x7a000
00000000000328c4	add	x0, x0, #0x2c0
00000000000328c8	ldr	x9, [x0]
00000000000328cc	blr	x9
00000000000328d0	ldr	x19, [x0]
00000000000328d4	cbz	x19, 0x328f0
00000000000328d8	add	x9, x19, #0x138
00000000000328dc	mov	w10, #0x1
00000000000328e0	ldaxr	w20, [x9]
00000000000328e4	stlxr	w11, w10, [x9]
00000000000328e8	cbnz	w11, 0x328e0
00000000000328ec	b	0x328f4
00000000000328f0	mov	w20, #0x1
00000000000328f4	add	x0, x8, #0x18
00000000000328f8	bl	__ZN13GCStateHolder8scheduleEv
00000000000328fc	cbz	x19, 0x3292c
0000000000032900	add	x0, x19, #0x138
0000000000032904	ldaxr	w8, [x0]
0000000000032908	stlxr	w9, w20, [x0]
000000000003290c	cbnz	w9, 0x32904
0000000000032910	cbnz	w20, 0x3292c
0000000000032914	cmp	w8, #0x1
0000000000032918	b.ne	0x3292c
000000000003291c	adr	x8, #0x6196d
0000000000032920	nop
0000000000032924	ldarb	w8, [x8]
0000000000032928	tbnz	w8, #0x0, 0x32938
000000000003292c	ldp	x29, x30, [sp, #0x10]
0000000000032930	ldp	x20, x19, [sp], #0x20
0000000000032934	ret
0000000000032938	ldp	x29, x30, [sp, #0x10]
000000000003293c	ldp	x20, x19, [sp], #0x20
0000000000032940	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000032944	mov	x9, x19
0000000000032948	mov	x19, x0
000000000003294c	cbz	x9, 0x32984
0000000000032950	mov	x8, x9
0000000000032954	add	x0, x9, #0x138
0000000000032958	ldaxr	w8, [x0]
000000000003295c	stlxr	w9, w20, [x0]
0000000000032960	cbnz	w9, 0x32958
0000000000032964	cbnz	w20, 0x32984
0000000000032968	cmp	w8, #0x1
000000000003296c	b.ne	0x32984
0000000000032970	adr	x8, #0x61919
0000000000032974	nop
0000000000032978	ldarb	w8, [x8]
000000000003297c	tbz	w8, #0x0, 0x32984
0000000000032980	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000032984	mov	x0, x19
0000000000032988	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEED1Ev:
000000000003298c	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEED0Ev:
0000000000032990	b	0x55308 ; symbol stub for: __ZdlPv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE7__cloneEv:
0000000000032994	stp	x20, x19, [sp, #-0x20]!
0000000000032998	stp	x29, x30, [sp, #0x10]
000000000003299c	add	x29, sp, #0x10
00000000000329a0	mov	x19, x0
00000000000329a4	mov	w0, #0x10
00000000000329a8	bl	0x55314 ; symbol stub for: __Znwm
00000000000329ac	ldr	x8, [x19, #0x8]
00000000000329b0	adr	x9, #0x3e160
00000000000329b4	nop
00000000000329b8	stp	x9, x8, [x0]
00000000000329bc	ldp	x29, x30, [sp, #0x10]
00000000000329c0	ldp	x20, x19, [sp], #0x20
00000000000329c4	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE7__cloneEPNS0_6__baseISE_EE:
00000000000329c8	ldr	x8, [x0, #0x8]
00000000000329cc	adr	x9, #0x3e144
00000000000329d0	nop
00000000000329d4	stp	x9, x8, [x1]
00000000000329d8	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE7destroyEv:
00000000000329dc	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE18destroy_deallocateEv:
00000000000329e0	b	0x55308 ; symbol stub for: __ZdlPv
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEEclEOx:
00000000000329e4	stp	x22, x21, [sp, #-0x30]!
00000000000329e8	stp	x20, x19, [sp, #0x10]
00000000000329ec	stp	x29, x30, [sp, #0x20]
00000000000329f0	add	x29, sp, #0x20
00000000000329f4	ldr	x20, [x1]
00000000000329f8	ldr	x21, [x0, #0x8]
00000000000329fc	ldr	x19, [x21, #0x120]
0000000000032a00	mov	x0, x19
0000000000032a04	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000032a08	str	x20, [x21, #0x118]
0000000000032a0c	add	x0, x21, #0x128
0000000000032a10	bl	0x55224 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000032a14	mov	x0, x19
0000000000032a18	ldp	x29, x30, [sp, #0x20]
0000000000032a1c	ldp	x20, x19, [sp, #0x10]
0000000000032a20	ldp	x22, x21, [sp], #0x30
0000000000032a24	b	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE6targetERKSt9type_info:
0000000000032a28	stp	x20, x19, [sp, #-0x20]!
0000000000032a2c	stp	x29, x30, [sp, #0x10]
0000000000032a30	add	x29, sp, #0x10
0000000000032a34	mov	x19, x0
0000000000032a38	ldr	x9, [x1, #0x8]
0000000000032a3c	adr	x8, #0x25f22
0000000000032a40	nop
0000000000032a44	cmp	x9, x8
0000000000032a48	b.ne	0x32a5c
0000000000032a4c	add	x0, x19, #0x8
0000000000032a50	ldp	x29, x30, [sp, #0x10]
0000000000032a54	ldp	x20, x19, [sp], #0x20
0000000000032a58	ret
0000000000032a5c	tst	x9, x8
0000000000032a60	b.lt	0x32a74
0000000000032a64	mov	x0, #0x0
0000000000032a68	ldp	x29, x30, [sp, #0x10]
0000000000032a6c	ldp	x20, x19, [sp], #0x20
0000000000032a70	ret
0000000000032a74	and	x0, x9, #0x7fffffffffffffff
0000000000032a78	and	x1, x8, #0x7fffffffffffffff
0000000000032a7c	bl	0x55734 ; symbol stub for: _strcmp
0000000000032a80	cbz	w0, 0x32a4c
0000000000032a84	mov	x0, #0x0
0000000000032a88	ldp	x29, x30, [sp, #0x10]
0000000000032a8c	ldp	x20, x19, [sp], #0x20
0000000000032a90	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE11target_typeEv:
0000000000032a94	adr	x0, #0x3e15c
0000000000032a98	nop
0000000000032a9c	ret
__ZNSt3__117__call_once_proxyINS_5tupleIJOZN6kotlin14initObjectPoolEvE3$_0EEEEEvPv:
0000000000032aa0	adr	x8, #0x476b8
0000000000032aa4	nop
0000000000032aa8	mov	w9, #0x1
0000000000032aac	str	x9, [x8]
0000000000032ab0	mov	w9, #0x2
0000000000032ab4	str	w9, [x8, #0x8]
0000000000032ab8	ret
__ZN6kotlin20allocateInObjectPoolEm:
0000000000032abc	stp	x20, x19, [sp, #-0x20]!
0000000000032ac0	stp	x29, x30, [sp, #0x10]
0000000000032ac4	add	x29, sp, #0x10
0000000000032ac8	mov	x1, x0
0000000000032acc	adrp	x0, 72 ; 0x7a000
0000000000032ad0	add	x0, x0, #0x2d8
0000000000032ad4	ldr	x8, [x0]
0000000000032ad8	blr	x8
0000000000032adc	tbnz	x1, #0x3f, 0x32b6c
0000000000032ae0	ldr	x0, [x0]
0000000000032ae4	cmp	x1, #0x400
0000000000032ae8	b.hi	0x32b80
0000000000032aec	add	x8, x1, #0x7
0000000000032af0	and	x8, x8, #0xfffffffffffffff8
0000000000032af4	add	x8, x0, x8
0000000000032af8	ldr	x8, [x8, #0x8]
0000000000032afc	ldr	x19, [x8, #0x8]
0000000000032b00	and	x9, x19, #0x7
0000000000032b04	cmp	x19, #0x0
0000000000032b08	ccmp	x9, #0x0, #0x0, ne
0000000000032b0c	b.ne	0x32b80
0000000000032b10	ldr	w9, [x8, #0x10]
0000000000032b14	add	w9, w9, #0x1
0000000000032b18	str	w9, [x8, #0x10]
0000000000032b1c	ldr	x9, [x19]
0000000000032b20	str	x9, [x8, #0x8]
0000000000032b24	cmp	x1, #0x9
0000000000032b28	b.lo	0x32b48
0000000000032b2c	ldrb	w8, [x8, #0x7]
0000000000032b30	tbz	w8, #0x0, 0x32b48
0000000000032b34	str	xzr, [x19]
0000000000032b38	mov	x0, x19
0000000000032b3c	ldp	x29, x30, [sp, #0x10]
0000000000032b40	ldp	x20, x19, [sp], #0x20
0000000000032b44	ret
0000000000032b48	mov	x0, x19
0000000000032b4c	bl	__mi_usable_size
0000000000032b50	mov	x1, x0
0000000000032b54	mov	x0, x19
0000000000032b58	bl	0x553c8 ; symbol stub for: _bzero
0000000000032b5c	mov	x0, x19
0000000000032b60	ldp	x29, x30, [sp, #0x10]
0000000000032b64	ldp	x20, x19, [sp], #0x20
0000000000032b68	ret
0000000000032b6c	mov	x19, #0x0
0000000000032b70	mov	x0, x19
0000000000032b74	ldp	x29, x30, [sp, #0x10]
0000000000032b78	ldp	x20, x19, [sp], #0x20
0000000000032b7c	ret
0000000000032b80	sub	x8, x1, #0x8
0000000000032b84	mov	w9, #0x1fff8
0000000000032b88	cmp	x8, x9
0000000000032b8c	b.hi	0x32ba4
0000000000032b90	and	x8, x1, #0x7
0000000000032b94	cbnz	x8, 0x32ba4
0000000000032b98	ldp	x29, x30, [sp, #0x10]
0000000000032b9c	ldp	x20, x19, [sp], #0x20
0000000000032ba0	b	__mi_heap_malloc_zero
0000000000032ba4	add	x1, x1, #0x7
0000000000032ba8	bl	__mi_heap_malloc_zero
0000000000032bac	mov	x19, x0
0000000000032bb0	cbz	x0, 0x32b38
0000000000032bb4	and	x8, x19, #0xfffffffffffffff8
0000000000032bb8	add	x8, x8, #0x8
0000000000032bbc	tst	x19, #0x7
0000000000032bc0	csel	x8, x19, x8, eq
0000000000032bc4	cmp	x8, x19
0000000000032bc8	b.eq	0x32b38
0000000000032bcc	and	x9, x19, #0xffffffffffc00000
0000000000032bd0	and	x10, x19, #0x3fffff
0000000000032bd4	ldr	x11, [x9, #0x60]
0000000000032bd8	lsr	x10, x10, x11
0000000000032bdc	add	x9, x9, x10, lsl #6
0000000000032be0	ldrb	w10, [x9, #0x7e]
0000000000032be4	orr	w10, w10, #0x2
0000000000032be8	strb	w10, [x9, #0x7e]
0000000000032bec	mov	x19, x8
0000000000032bf0	mov	x0, x19
0000000000032bf4	ldp	x29, x30, [sp, #0x10]
0000000000032bf8	ldp	x20, x19, [sp], #0x20
0000000000032bfc	ret
__mi_process_init:
0000000000032c00	sub	sp, sp, #0x30
0000000000032c04	stp	x20, x19, [sp, #0x10]
0000000000032c08	stp	x29, x30, [sp, #0x20]
0000000000032c0c	add	x29, sp, #0x20
0000000000032c10	nop
0000000000032c14	ldr	x8, #0x45e74
0000000000032c18	cbnz	x8, 0x32ccc
0000000000032c1c	bl	0x556c8 ; symbol stub for: _pthread_self
0000000000032c20	bl	0x55680 ; symbol stub for: _pthread_mach_thread_np
0000000000032c24	mov	w8, w0
0000000000032c28	adrp	x9, 70 ; 0x78000
0000000000032c2c	str	x8, [x9, #0xa80]
0000000000032c30	bl	0x5547c ; symbol stub for: _mach_absolute_time
0000000000032c34	adr	x8, #0x440
0000000000032c38	nop
0000000000032c3c	adr	x9, #0x358
0000000000032c40	nop
0000000000032c44	eor	x8, x9, x8
0000000000032c48	eor	x8, x0, x8
0000000000032c4c	eor	w9, w8, w8, lsr #17
0000000000032c50	and	x9, x9, #0xf
0000000000032c54	add	x9, x9, #0x1
0000000000032c58	mov	w10, #0x11
0000000000032c5c	mov	x11, #0xe5b9
0000000000032c60	movk	x11, #0x1ce4, lsl #16
0000000000032c64	movk	x11, #0x476d, lsl #32
0000000000032c68	movk	x11, #0xbf58, lsl #48
0000000000032c6c	mov	x12, #0x11eb
0000000000032c70	movk	x12, #0x1331, lsl #16
0000000000032c74	movk	x12, #0x49bb, lsl #32
0000000000032c78	movk	x12, #0x94d0, lsl #48
0000000000032c7c	cmp	x8, #0x0
0000000000032c80	csel	x8, x10, x8, eq
0000000000032c84	eor	x8, x8, x8, lsr #30
0000000000032c88	mul	x8, x8, x11
0000000000032c8c	eor	x8, x8, x8, lsr #27
0000000000032c90	mul	x8, x8, x12
0000000000032c94	eor	x8, x8, x8, lsr #31
0000000000032c98	subs	x9, x9, #0x1
0000000000032c9c	b.ne	0x32c7c
0000000000032ca0	adr	x19, #0x452c0
0000000000032ca4	nop
0000000000032ca8	str	x8, [x19, #0xb28]
0000000000032cac	add	x0, x19, #0xb40
0000000000032cb0	bl	__mi_random_init
0000000000032cb4	mov	x0, x19
0000000000032cb8	bl	__mi_heap_random_next
0000000000032cbc	str	x0, [x19, #0xb30]
0000000000032cc0	mov	x0, x19
0000000000032cc4	bl	__mi_heap_random_next
0000000000032cc8	str	x0, [x19, #0xb38]
0000000000032ccc	adrp	x8, 98 ; 0x94000
0000000000032cd0	mov	w9, #0x1
0000000000032cd4	strb	w9, [x8, #0x28c]
0000000000032cd8	adr	x0, #0x530
0000000000032cdc	nop
0000000000032ce0	bl	0x553b0 ; symbol stub for: _atexit
0000000000032ce4	adr	x9, #0x6167c
0000000000032ce8	nop
0000000000032cec	ldaxr	x8, [x9]
0000000000032cf0	add	x10, x8, #0x1
0000000000032cf4	stlxr	w11, x10, [x9]
0000000000032cf8	cbnz	w11, 0x32cec
0000000000032cfc	cmp	x8, #0x8, lsl #12
0000000000032d00	mov	w9, #0x8000
0000000000032d04	adr	x19, #0x49504
0000000000032d08	nop
0000000000032d0c	csel	x20, x8, x9, lo
0000000000032d10	strb	wzr, [x19, x20]
0000000000032d14	nop
0000000000032d18	ldr	x8, #0x2d318 ; literal pool symbol address: ___stderrp
0000000000032d1c	ldr	x1, [x8]
0000000000032d20	mov	x0, x19
0000000000032d24	bl	0x5544c ; symbol stub for: _fputs
0000000000032d28	mov	w8, #0xa
0000000000032d2c	strb	w8, [x19, x20]
0000000000032d30	adrp	x8, 98 ; 0x94000
0000000000032d34	adr	x9, #0x9124
0000000000032d38	nop
0000000000032d3c	str	x9, [x8, #0x358]
0000000000032d40	mov	w0, #0x0
0000000000032d44	bl	_mi_option_get
0000000000032d48	adr	x20, #0x47020
0000000000032d4c	nop
0000000000032d50	ldr	x8, [x20, #0x388]
0000000000032d54	ldr	x9, [x20, #0x378]
0000000000032d58	stp	x8, x9, [sp]
0000000000032d5c	adr	x19, #0x2b895 ; literal pool for: "option '%s': %ld\n"
0000000000032d60	nop
0000000000032d64	mov	x0, x19
0000000000032d68	bl	__mi_verbose_message
0000000000032d6c	mov	w0, #0x1
0000000000032d70	bl	_mi_option_get
0000000000032d74	ldr	x8, [x20, #0x3a0]
0000000000032d78	ldr	x9, [x20, #0x390]
0000000000032d7c	stp	x8, x9, [sp]
0000000000032d80	mov	x0, x19
0000000000032d84	bl	__mi_verbose_message
0000000000032d88	mov	w0, #0x2
0000000000032d8c	bl	_mi_option_get
0000000000032d90	mov	w0, #0x3
0000000000032d94	bl	_mi_option_get
0000000000032d98	ldr	x8, [x20, #0x3d0]
0000000000032d9c	ldr	x9, [x20, #0x3c0]
0000000000032da0	stp	x8, x9, [sp]
0000000000032da4	mov	x0, x19
0000000000032da8	bl	__mi_verbose_message
0000000000032dac	mov	w0, #0x4
0000000000032db0	bl	_mi_option_get
0000000000032db4	ldr	x8, [x20, #0x3e8]
0000000000032db8	ldr	x9, [x20, #0x3d8]
0000000000032dbc	stp	x8, x9, [sp]
0000000000032dc0	mov	x0, x19
0000000000032dc4	bl	__mi_verbose_message
0000000000032dc8	mov	w0, #0x5
0000000000032dcc	bl	_mi_option_get
0000000000032dd0	ldr	x8, [x20, #0x400]
0000000000032dd4	ldr	x9, [x20, #0x3f0]
0000000000032dd8	stp	x8, x9, [sp]
0000000000032ddc	mov	x0, x19
0000000000032de0	bl	__mi_verbose_message
0000000000032de4	mov	w0, #0x6
0000000000032de8	bl	_mi_option_get
0000000000032dec	ldr	x8, [x20, #0x418]
0000000000032df0	ldr	x9, [x20, #0x408]
0000000000032df4	stp	x8, x9, [sp]
0000000000032df8	mov	x0, x19
0000000000032dfc	bl	__mi_verbose_message
0000000000032e00	mov	w0, #0x7
0000000000032e04	bl	_mi_option_get
0000000000032e08	ldr	x8, [x20, #0x430]
0000000000032e0c	ldr	x9, [x20, #0x420]
0000000000032e10	stp	x8, x9, [sp]
0000000000032e14	mov	x0, x19
0000000000032e18	bl	__mi_verbose_message
0000000000032e1c	mov	w0, #0x8
0000000000032e20	bl	_mi_option_get
0000000000032e24	ldr	x8, [x20, #0x448]
0000000000032e28	ldr	x9, [x20, #0x438]
0000000000032e2c	stp	x8, x9, [sp]
0000000000032e30	mov	x0, x19
0000000000032e34	bl	__mi_verbose_message
0000000000032e38	mov	w0, #0x9
0000000000032e3c	bl	_mi_option_get
0000000000032e40	ldr	x8, [x20, #0x460]
0000000000032e44	ldr	x9, [x20, #0x450]
0000000000032e48	stp	x8, x9, [sp]
0000000000032e4c	mov	x0, x19
0000000000032e50	bl	__mi_verbose_message
0000000000032e54	mov	w0, #0xa
0000000000032e58	bl	_mi_option_get
0000000000032e5c	ldr	x8, [x20, #0x478]
0000000000032e60	ldr	x9, [x20, #0x468]
0000000000032e64	stp	x8, x9, [sp]
0000000000032e68	mov	x0, x19
0000000000032e6c	bl	__mi_verbose_message
0000000000032e70	mov	w0, #0xb
0000000000032e74	bl	_mi_option_get
0000000000032e78	ldr	x8, [x20, #0x490]
0000000000032e7c	ldr	x9, [x20, #0x480]
0000000000032e80	stp	x8, x9, [sp]
0000000000032e84	mov	x0, x19
0000000000032e88	bl	__mi_verbose_message
0000000000032e8c	mov	w0, #0xc
0000000000032e90	bl	_mi_option_get
0000000000032e94	ldr	x8, [x20, #0x4a8]
0000000000032e98	ldr	x9, [x20, #0x498]
0000000000032e9c	stp	x8, x9, [sp]
0000000000032ea0	mov	x0, x19
0000000000032ea4	bl	__mi_verbose_message
0000000000032ea8	mov	w0, #0xd
0000000000032eac	bl	_mi_option_get
0000000000032eb0	ldr	x8, [x20, #0x4c0]
0000000000032eb4	ldr	x9, [x20, #0x4b0]
0000000000032eb8	stp	x8, x9, [sp]
0000000000032ebc	mov	x0, x19
0000000000032ec0	bl	__mi_verbose_message
0000000000032ec4	mov	w0, #0xe
0000000000032ec8	bl	_mi_option_get
0000000000032ecc	ldr	x8, [x20, #0x4d8]
0000000000032ed0	ldr	x9, [x20, #0x4c8]
0000000000032ed4	stp	x8, x9, [sp]
0000000000032ed8	mov	x0, x19
0000000000032edc	bl	__mi_verbose_message
0000000000032ee0	mov	w0, #0xf
0000000000032ee4	bl	_mi_option_get
0000000000032ee8	ldr	x8, [x20, #0x4f0]
0000000000032eec	ldr	x9, [x20, #0x4e0]
0000000000032ef0	stp	x8, x9, [sp]
0000000000032ef4	mov	x0, x19
0000000000032ef8	bl	__mi_verbose_message
0000000000032efc	mov	w0, #0x10
0000000000032f00	bl	_mi_option_get
0000000000032f04	ldr	x8, [x20, #0x508]
0000000000032f08	ldr	x9, [x20, #0x4f8]
0000000000032f0c	stp	x8, x9, [sp]
0000000000032f10	mov	x0, x19
0000000000032f14	bl	__mi_verbose_message
0000000000032f18	mov	w0, #0x11
0000000000032f1c	bl	_mi_option_get
0000000000032f20	ldr	x8, [x20, #0x520]
0000000000032f24	ldr	x9, [x20, #0x510]
0000000000032f28	stp	x8, x9, [sp]
0000000000032f2c	mov	x0, x19
0000000000032f30	bl	__mi_verbose_message
0000000000032f34	mov	w0, #0x12
0000000000032f38	bl	_mi_option_get
0000000000032f3c	ldr	x8, [x20, #0x538]
0000000000032f40	ldr	x9, [x20, #0x528]
0000000000032f44	stp	x8, x9, [sp]
0000000000032f48	mov	x0, x19
0000000000032f4c	bl	__mi_verbose_message
0000000000032f50	mov	w0, #0x13
0000000000032f54	bl	_mi_option_get
0000000000032f58	ldr	x8, [x20, #0x550]
0000000000032f5c	ldr	x9, [x20, #0x540]
0000000000032f60	stp	x8, x9, [sp]
0000000000032f64	mov	x0, x19
0000000000032f68	bl	__mi_verbose_message
0000000000032f6c	mov	w0, #0x12
0000000000032f70	bl	_mi_option_get
0000000000032f74	str	x0, [x20, #0x8]
0000000000032f78	mov	w0, #0x13
0000000000032f7c	bl	_mi_option_get
0000000000032f80	str	x0, [x20]
0000000000032f84	ldp	x29, x30, [sp, #0x20]
0000000000032f88	ldp	x20, x19, [sp, #0x10]
0000000000032f8c	add	sp, sp, #0x30
0000000000032f90	b	_mi_process_init
_mi_heap_main_init:
0000000000032f94	stp	x20, x19, [sp, #-0x20]!
0000000000032f98	stp	x29, x30, [sp, #0x10]
0000000000032f9c	add	x29, sp, #0x10
0000000000032fa0	nop
0000000000032fa4	ldr	x8, #0x45ae4
0000000000032fa8	cbz	x8, 0x32fb8
0000000000032fac	ldp	x29, x30, [sp, #0x10]
0000000000032fb0	ldp	x20, x19, [sp], #0x20
0000000000032fb4	ret
0000000000032fb8	bl	0x556c8 ; symbol stub for: _pthread_self
0000000000032fbc	bl	0x55680 ; symbol stub for: _pthread_mach_thread_np
0000000000032fc0	mov	w8, w0
0000000000032fc4	adrp	x9, 70 ; 0x78000
0000000000032fc8	str	x8, [x9, #0xa80]
0000000000032fcc	bl	0x5547c ; symbol stub for: _mach_absolute_time
0000000000032fd0	adr	x8, #0xa4
0000000000032fd4	nop
0000000000032fd8	adr	x9, #-0x44
0000000000032fdc	nop
0000000000032fe0	eor	x8, x9, x8
0000000000032fe4	eor	x8, x0, x8
0000000000032fe8	eor	w9, w8, w8, lsr #17
0000000000032fec	and	x9, x9, #0xf
0000000000032ff0	add	x9, x9, #0x1
0000000000032ff4	mov	w10, #0x11
0000000000032ff8	mov	x11, #0xe5b9
0000000000032ffc	movk	x11, #0x1ce4, lsl #16
0000000000033000	movk	x11, #0x476d, lsl #32
0000000000033004	movk	x11, #0xbf58, lsl #48
0000000000033008	mov	x12, #0x11eb
000000000003300c	movk	x12, #0x1331, lsl #16
0000000000033010	movk	x12, #0x49bb, lsl #32
0000000000033014	movk	x12, #0x94d0, lsl #48
0000000000033018	cmp	x8, #0x0
000000000003301c	csel	x8, x10, x8, eq
0000000000033020	eor	x8, x8, x8, lsr #30
0000000000033024	mul	x8, x8, x11
0000000000033028	eor	x8, x8, x8, lsr #27
000000000003302c	mul	x8, x8, x12
0000000000033030	eor	x8, x8, x8, lsr #31
0000000000033034	subs	x9, x9, #0x1
0000000000033038	b.ne	0x33018
000000000003303c	adr	x19, #0x44f24
0000000000033040	nop
0000000000033044	str	x8, [x19, #0xb28]
0000000000033048	add	x0, x19, #0xb40
000000000003304c	bl	__mi_random_init
0000000000033050	mov	x0, x19
0000000000033054	bl	__mi_heap_random_next
0000000000033058	str	x0, [x19, #0xb30]
000000000003305c	mov	x0, x19
0000000000033060	bl	__mi_heap_random_next
0000000000033064	str	x0, [x19, #0xb38]
0000000000033068	ldp	x29, x30, [sp, #0x10]
000000000003306c	ldp	x20, x19, [sp], #0x20
0000000000033070	ret
__os_random_weak:
0000000000033074	stp	x20, x19, [sp, #-0x20]!
0000000000033078	stp	x29, x30, [sp, #0x10]
000000000003307c	add	x29, sp, #0x10
0000000000033080	adr	x8, #-0xc
0000000000033084	nop
0000000000033088	eor	x19, x0, x8
000000000003308c	bl	0x5547c ; symbol stub for: _mach_absolute_time
0000000000033090	eor	x0, x19, x0
0000000000033094	eor	w8, w0, w0, lsr #17
0000000000033098	and	x8, x8, #0xf
000000000003309c	add	x8, x8, #0x1
00000000000330a0	mov	w9, #0x11
00000000000330a4	mov	x10, #0xe5b9
00000000000330a8	movk	x10, #0x1ce4, lsl #16
00000000000330ac	movk	x10, #0x476d, lsl #32
00000000000330b0	movk	x10, #0xbf58, lsl #48
00000000000330b4	mov	x11, #0x11eb
00000000000330b8	movk	x11, #0x1331, lsl #16
00000000000330bc	movk	x11, #0x49bb, lsl #32
00000000000330c0	movk	x11, #0x94d0, lsl #48
00000000000330c4	cmp	x0, #0x0
00000000000330c8	csel	x12, x9, x0, eq
00000000000330cc	eor	x12, x12, x12, lsr #30
00000000000330d0	mul	x12, x12, x10
00000000000330d4	eor	x12, x12, x12, lsr #27
00000000000330d8	mul	x12, x12, x11
00000000000330dc	eor	x0, x12, x12, lsr #31
00000000000330e0	subs	x8, x8, #0x1
00000000000330e4	b.ne	0x330c4
00000000000330e8	ldp	x29, x30, [sp, #0x10]
00000000000330ec	ldp	x20, x19, [sp], #0x20
00000000000330f0	ret
__mi_random_init:
00000000000330f4	sub	sp, sp, #0x40
00000000000330f8	stp	x20, x19, [sp, #0x20]
00000000000330fc	stp	x29, x30, [sp, #0x30]
0000000000033100	add	x29, sp, #0x30
0000000000033104	mov	x19, x0
0000000000033108	mov	x0, sp
000000000003310c	mov	w1, #0x20
0000000000033110	bl	0x553a4 ; symbol stub for: _arc4random_buf
0000000000033114	movi.16b	v0, #0x0
0000000000033118	stp	q0, q0, [x19, #0x20]
000000000003311c	str	wzr, [x19, #0x80]
0000000000033120	stp	q0, q0, [x19, #0x60]
0000000000033124	stp	q0, q0, [x19, #0x40]
0000000000033128	nop
000000000003312c	ldr	q0, 0x57ba0
0000000000033130	ldr	q1, [sp]
0000000000033134	stp	q0, q1, [x19]
0000000000033138	ldr	w8, [sp, #0x10]
000000000003313c	str	w8, [x19, #0x20]
0000000000033140	ldur	x8, [sp, #0x14]
0000000000033144	stur	x8, [x19, #0x24]
0000000000033148	ldr	w8, [sp, #0x1c]
000000000003314c	str	w8, [x19, #0x2c]
0000000000033150	str	xzr, [x19, #0x30]
0000000000033154	lsr	x8, x19, #32
0000000000033158	stp	w19, w8, [x19, #0x38]
000000000003315c	ldp	x29, x30, [sp, #0x30]
0000000000033160	ldp	x20, x19, [sp, #0x20]
0000000000033164	add	sp, sp, #0x40
0000000000033168	ret
__mi_heap_random_next:
000000000003316c	stp	x22, x21, [sp, #-0x30]!
0000000000033170	stp	x20, x19, [sp, #0x10]
0000000000033174	stp	x29, x30, [sp, #0x20]
0000000000033178	add	x29, sp, #0x20
000000000003317c	mov	x19, x0
0000000000033180	add	x20, x0, #0xb40
0000000000033184	ldr	w8, [x0, #0xbc0]
0000000000033188	cmp	w8, #0x0
000000000003318c	b.gt	0x331a0
0000000000033190	mov	x0, x20
0000000000033194	bl	_chacha_block
0000000000033198	mov	w8, #0x10
000000000003319c	str	w8, [x19, #0xbc0]
00000000000331a0	mov	w22, #0x10
00000000000331a4	sub	x8, x22, w8, sxtw
00000000000331a8	add	x8, x19, x8, lsl #2
00000000000331ac	ldr	w21, [x8, #0xb80]
00000000000331b0	str	wzr, [x8, #0xb80]
00000000000331b4	ldr	w8, [x19, #0xbc0]
00000000000331b8	subs	w8, w8, #0x1
00000000000331bc	str	w8, [x19, #0xbc0]
00000000000331c0	b.gt	0x331d4
00000000000331c4	mov	x0, x20
00000000000331c8	bl	_chacha_block
00000000000331cc	str	w22, [x19, #0xbc0]
00000000000331d0	mov	w8, #0x10
00000000000331d4	mov	w9, #0x10
00000000000331d8	sub	x8, x9, w8, sxtw
00000000000331dc	add	x8, x19, x8, lsl #2
00000000000331e0	ldr	w0, [x8, #0xb80]
00000000000331e4	str	wzr, [x8, #0xb80]
00000000000331e8	ldr	w8, [x19, #0xbc0]
00000000000331ec	sub	w8, w8, #0x1
00000000000331f0	str	w8, [x19, #0xbc0]
00000000000331f4	bfi	x0, x21, #32, #32
00000000000331f8	ldp	x29, x30, [sp, #0x20]
00000000000331fc	ldp	x20, x19, [sp, #0x10]
0000000000033200	ldp	x22, x21, [sp], #0x30
0000000000033204	ret
_mi_process_done:
0000000000033208	stp	x28, x27, [sp, #-0x60]!
000000000003320c	stp	x26, x25, [sp, #0x10]
0000000000033210	stp	x24, x23, [sp, #0x20]
0000000000033214	stp	x22, x21, [sp, #0x30]
0000000000033218	stp	x20, x19, [sp, #0x40]
000000000003321c	stp	x29, x30, [sp, #0x50]
0000000000033220	add	x29, sp, #0x50
0000000000033224	sub	sp, sp, #0x230
0000000000033228	adrp	x8, 97 ; 0x94000
000000000003322c	ldrb	w8, [x8, #0x28b]
0000000000033230	cmp	w8, #0x1
0000000000033234	b.ne	0x33824
0000000000033238	adrp	x8, 97 ; 0x94000
000000000003323c	ldrb	w9, [x8, #0x291]
0000000000033240	tbnz	w9, #0x0, 0x33824
0000000000033244	mov	w9, #0x1
0000000000033248	strb	w9, [x8, #0x291]
000000000003324c	adrp	x19, 71 ; 0x7a000
0000000000033250	add	x19, x19, #0x2d8
0000000000033254	ldr	x20, [x19]
0000000000033258	mov	x0, x19
000000000003325c	blr	x20
0000000000033260	ldr	x0, [x0]
0000000000033264	mov	w1, #0x1
0000000000033268	bl	_mi_heap_collect_ex
000000000003326c	mov	w0, #0x1
0000000000033270	bl	_mi_option_get
0000000000033274	cbnz	x0, 0x33284
0000000000033278	mov	w0, #0x2
000000000003327c	bl	_mi_option_get
0000000000033280	cbz	x0, 0x33804
0000000000033284	bl	_mi_thread_init
0000000000033288	mov	x0, x19
000000000003328c	blr	x20
0000000000033290	ldr	x8, [x0]
0000000000033294	ldr	x8, [x8]
0000000000033298	add	x0, x8, #0xb0
000000000003329c	bl	_mi_stats_merge_from
00000000000332a0	stp	xzr, xzr, [sp, #0x40]
00000000000332a4	nop
00000000000332a8	ldr	q0, 0x57bb0
00000000000332ac	stur	q0, [sp, #0x58]
00000000000332b0	add	x8, sp, #0x6c
00000000000332b4	str	x8, [sp, #0x50]
00000000000332b8	adr	x10, #0x2b3b8 ; literal pool for: "count  "
00000000000332bc	nop
00000000000332c0	adr	x8, #0x2b3a9 ; literal pool for: "unit  "
00000000000332c4	nop
00000000000332c8	adr	x11, #0x2b397 ; literal pool for: "current  "
00000000000332cc	nop
00000000000332d0	stp	x8, x10, [sp, #0x28]
00000000000332d4	adr	x8, #0x2b383 ; literal pool for: "freed  "
00000000000332d8	nop
00000000000332dc	adr	x10, #0x2b373 ; literal pool for: "total  "
00000000000332e0	nop
00000000000332e4	stp	x8, x11, [sp, #0x18]
00000000000332e8	adr	x8, #0x2b360 ; literal pool for: "peak  "
00000000000332ec	nop
00000000000332f0	adr	x9, #0x2b34d ; literal pool for: "heap stats"
00000000000332f4	nop
00000000000332f8	stp	x8, x10, [sp, #0x8]
00000000000332fc	str	x9, [sp]
0000000000033300	add	x1, sp, #0x40
0000000000033304	adr	x2, #0x2b314 ; literal pool for: "%10s: %10s %10s %10s %10s %10s %10s\n"
0000000000033308	nop
000000000003330c	bl	__mi_fprintf
0000000000033310	adr	x19, #0x61570
0000000000033314	nop
0000000000033318	add	x0, x19, #0x40
000000000003331c	adr	x1, #0x2b35c ; literal pool for: "reserved"
0000000000033320	nop
0000000000033324	add	x3, sp, #0x40
0000000000033328	mov	w2, #0x1
000000000003332c	bl	_mi_stat_print
0000000000033330	add	x0, x19, #0x60
0000000000033334	adr	x1, #0x2b34d ; literal pool for: "committed"
0000000000033338	nop
000000000003333c	add	x3, sp, #0x40
0000000000033340	mov	w2, #0x1
0000000000033344	bl	_mi_stat_print
0000000000033348	add	x0, x19, #0x80
000000000003334c	adr	x1, #0x2b33f ; literal pool for: "reset"
0000000000033350	nop
0000000000033354	add	x3, sp, #0x40
0000000000033358	mov	w2, #0x1
000000000003335c	bl	_mi_stat_print
0000000000033360	add	x0, x19, #0xa0
0000000000033364	adr	x1, #0x2b32d ; literal pool for: "touched"
0000000000033368	nop
000000000003336c	add	x3, sp, #0x40
0000000000033370	mov	w2, #0x1
0000000000033374	bl	_mi_stat_print
0000000000033378	adr	x1, #0x2b321 ; literal pool for: "segments"
000000000003337c	nop
0000000000033380	add	x3, sp, #0x40
0000000000033384	mov	x0, x19
0000000000033388	mov	x2, #-0x1
000000000003338c	bl	_mi_stat_print
0000000000033390	add	x0, x19, #0xc0
0000000000033394	adr	x20, #0x2b30e ; literal pool for: "-abandoned"
0000000000033398	nop
000000000003339c	add	x3, sp, #0x40
00000000000333a0	mov	x1, x20
00000000000333a4	mov	x2, #-0x1
00000000000333a8	bl	_mi_stat_print
00000000000333ac	add	x0, x19, #0x1a0
00000000000333b0	adr	x1, #0x2b2fd ; literal pool for: "-cached"
00000000000333b4	nop
00000000000333b8	add	x3, sp, #0x40
00000000000333bc	mov	x2, #-0x1
00000000000333c0	bl	_mi_stat_print
00000000000333c4	add	x0, x19, #0x20
00000000000333c8	adr	x1, #0x2b2ed ; literal pool for: "pages"
00000000000333cc	nop
00000000000333d0	add	x3, sp, #0x40
00000000000333d4	mov	x2, #-0x1
00000000000333d8	bl	_mi_stat_print
00000000000333dc	add	x0, x19, #0xe0
00000000000333e0	add	x3, sp, #0x40
00000000000333e4	mov	x1, x20
00000000000333e8	mov	x2, #-0x1
00000000000333ec	bl	_mi_stat_print
00000000000333f0	add	x0, x19, #0x1c0
00000000000333f4	adr	x1, #0x2b2c7 ; literal pool for: "-extended"
00000000000333f8	nop
00000000000333fc	add	x2, sp, #0x40
0000000000033400	bl	_mi_stat_counter_print
0000000000033404	add	x0, x19, #0x1f0
0000000000033408	adr	x1, #0x2b2bd ; literal pool for: "-noretire"
000000000003340c	nop
0000000000033410	add	x2, sp, #0x40
0000000000033414	bl	_mi_stat_counter_print
0000000000033418	add	x0, x19, #0x1d0
000000000003341c	adr	x1, #0x2b2b3 ; literal pool for: "mmaps"
0000000000033420	nop
0000000000033424	add	x2, sp, #0x40
0000000000033428	bl	_mi_stat_counter_print
000000000003342c	add	x0, x19, #0x1e0
0000000000033430	adr	x1, #0x2b2a5 ; literal pool for: "commits"
0000000000033434	nop
0000000000033438	add	x2, sp, #0x40
000000000003343c	bl	_mi_stat_counter_print
0000000000033440	add	x0, x19, #0x100
0000000000033444	adr	x1, #0x2b299 ; literal pool for: "threads"
0000000000033448	nop
000000000003344c	add	x3, sp, #0x40
0000000000033450	mov	x2, #-0x1
0000000000033454	bl	_mi_stat_print
0000000000033458	ldr	x8, [x19, #0x208]
000000000003345c	cbz	x8, 0x33474
0000000000033460	nop
0000000000033464	ldr	x9, #0x6161c
0000000000033468	add	x9, x9, x9, lsl #2
000000000003346c	lsl	x9, x9, #1
0000000000033470	sdiv	x8, x9, x8
0000000000033474	mov	x9, #0x6666666666666666
0000000000033478	movk	x9, #0x6667
000000000003347c	smulh	x9, x8, x9
0000000000033480	asr	x10, x9, #2
0000000000033484	add	x9, x10, x9, lsr #63
0000000000033488	mov	x10, #-0xa
000000000003348c	madd	x8, x9, x10, x8
0000000000033490	adr	x10, #0x2b269 ; literal pool for: "searches"
0000000000033494	nop
0000000000033498	stp	x10, x9, [sp]
000000000003349c	str	x8, [sp, #0x10]
00000000000334a0	adr	x2, #0x2b245 ; literal pool for: "%10s: %5ld.%ld avg\n"
00000000000334a4	nop
00000000000334a8	add	x1, sp, #0x40
00000000000334ac	bl	__mi_fprintf
00000000000334b0	nop
00000000000334b4	ldr	x19, #0x60ebc
00000000000334b8	cbz	x19, 0x33844
00000000000334bc	adr	x8, #0x2b251 ; literal pool for: "numa nodes"
00000000000334c0	nop
00000000000334c4	stp	x8, x19, [sp]
00000000000334c8	adr	x2, #0x2b23a ; literal pool for: "%10s: %7i\n"
00000000000334cc	nop
00000000000334d0	add	x1, sp, #0x40
00000000000334d4	bl	__mi_fprintf
00000000000334d8	adr	x20, #0x60eb0
00000000000334dc	nop
00000000000334e0	ldr	x19, [x20, #0x8]
00000000000334e4	sub	x0, x29, #0xe0
00000000000334e8	mov	x1, #0x0
00000000000334ec	bl	0x55470 ; symbol stub for: _gettimeofday
00000000000334f0	ldur	x8, [x29, #-0xe0]
00000000000334f4	mov	w21, #0x3e8
00000000000334f8	mul	x8, x8, x21
00000000000334fc	ldursw	x9, [x29, #-0xd8]
0000000000033500	mov	w22, #0x4dd3
0000000000033504	movk	w22, #0x1062, lsl #16
0000000000033508	mul	x9, x9, x22
000000000003350c	lsr	x10, x9, #32
0000000000033510	lsr	x9, x9, #63
0000000000033514	add	w9, w9, w10, asr #6
0000000000033518	ldr	x10, [x20]
000000000003351c	add	x8, x8, w9, sxtw
0000000000033520	add	x9, x19, x10
0000000000033524	sub	x23, x8, x9
0000000000033528	sub	x1, x29, #0xe0
000000000003352c	mov	w0, #0x0
0000000000033530	bl	0x55464 ; symbol stub for: _getrusage
0000000000033534	ldur	x8, [x29, #-0xe0]
0000000000033538	ldursw	x9, [x29, #-0xd8]
000000000003353c	mul	x8, x8, x21
0000000000033540	mul	x9, x9, x22
0000000000033544	lsr	x10, x9, #32
0000000000033548	lsr	x9, x9, #63
000000000003354c	add	w9, w9, w10, asr #6
0000000000033550	add	x24, x8, w9, sxtw
0000000000033554	ldur	x8, [x29, #-0xd0]
0000000000033558	ldursw	x9, [x29, #-0xc8]
000000000003355c	mul	x8, x8, x21
0000000000033560	mul	x9, x9, x22
0000000000033564	lsr	x10, x9, #32
0000000000033568	lsr	x9, x9, #63
000000000003356c	add	w9, w9, w10, asr #6
0000000000033570	add	x21, x8, w9, sxtw
0000000000033574	ldur	x22, [x29, #-0x98]
0000000000033578	ldr	x19, [x20, #0x568]
000000000003357c	ldr	xzr, [x20, #0x570]
0000000000033580	ldur	x20, [x29, #-0xc0]
0000000000033584	mov	w8, #0xc
0000000000033588	str	w8, [sp, #0x16c]
000000000003358c	nop
0000000000033590	ldr	x8, #0x2cab0 ; literal pool symbol address: _mach_task_self_
0000000000033594	ldr	w0, [x8]
0000000000033598	add	x2, sp, #0x170
000000000003359c	add	x3, sp, #0x16c
00000000000335a0	mov	w1, #0x14
00000000000335a4	bl	0x557a0 ; symbol stub for: _task_info
00000000000335a8	mov	x25, #0xf7cf
00000000000335ac	movk	x25, #0xe353, lsl #16
00000000000335b0	movk	x25, #0x9ba5, lsl #32
00000000000335b4	movk	x25, #0x20c4, lsl #48
00000000000335b8	smulh	x8, x23, x25
00000000000335bc	asr	x9, x8, #7
00000000000335c0	add	x8, x9, x8, lsr #63
00000000000335c4	mov	x26, #-0x3e8
00000000000335c8	madd	x9, x8, x26, x23
00000000000335cc	stp	x8, x9, [sp, #0x8]
00000000000335d0	adr	x9, #0x2b15c ; literal pool for: "elapsed"
00000000000335d4	nop
00000000000335d8	str	x9, [sp]
00000000000335dc	adr	x2, #0x2b13c ; literal pool for: "%10s: %7ld.%03ld s\n"
00000000000335e0	nop
00000000000335e4	add	x1, sp, #0x40
00000000000335e8	bl	__mi_fprintf
00000000000335ec	smulh	x8, x24, x25
00000000000335f0	asr	x9, x8, #7
00000000000335f4	add	x8, x9, x8, lsr #63
00000000000335f8	madd	x9, x8, x26, x24
00000000000335fc	smulh	x10, x21, x25
0000000000033600	asr	x11, x10, #7
0000000000033604	add	x10, x11, x10, lsr #63
0000000000033608	madd	x11, x10, x26, x21
000000000003360c	stp	x11, x22, [sp, #0x20]
0000000000033610	stp	x9, x10, [sp, #0x10]
0000000000033614	adr	x9, #0x2b161 ; literal pool for: "process"
0000000000033618	nop
000000000003361c	stp	x9, x8, [sp]
0000000000033620	adr	x2, #0x2b114 ; literal pool for: "%10s: user: %ld.%03ld s, system: %ld.%03ld s, faults: %lu, rss: "
0000000000033624	nop
0000000000033628	add	x1, sp, #0x40
000000000003362c	bl	__mi_fprintf
0000000000033630	cmp	x20, #0x0
0000000000033634	cneg	x8, x20, mi
0000000000033638	cmp	x8, #0x3ff
000000000003363c	b.gt	0x33658
0000000000033640	adr	x8, #0x2b144 ; literal pool for: "b"
0000000000033644	nop
0000000000033648	stp	x20, x8, [sp]
000000000003364c	adr	x2, #0x2b131 ; literal pool for: "%d %s "
0000000000033650	nop
0000000000033654	b	0x336e4
0000000000033658	adr	x9, #0x2b130 ; literal pool for: "m"
000000000003365c	nop
0000000000033660	adr	x10, #0x2b126 ; literal pool for: "k"
0000000000033664	nop
0000000000033668	cmp	x8, #0x100, lsl #12
000000000003366c	csel	x9, x10, x9, lt
0000000000033670	mov	w10, #0x100000
0000000000033674	mov	w11, #0x400
0000000000033678	csel	x10, x11, x10, lt
000000000003367c	lsl	x11, x10, #10
0000000000033680	adr	x12, #0x2b10a ; literal pool for: "g"
0000000000033684	nop
0000000000033688	cmp	x8, x11
000000000003368c	csel	x8, x9, x12, lt
0000000000033690	csel	x9, x10, x11, lt
0000000000033694	mov	w10, #0xcccd
0000000000033698	movk	w10, #0xcccc, lsl #16
000000000003369c	mul	x9, x9, x10
00000000000336a0	lsr	x9, x9, #35
00000000000336a4	sdiv	x9, x20, x9
00000000000336a8	mov	x10, #0x6666666666666666
00000000000336ac	movk	x10, #0x6667
00000000000336b0	smulh	x10, x9, x10
00000000000336b4	asr	x11, x10, #2
00000000000336b8	add	x10, x11, x10, lsr #63
00000000000336bc	mov	x11, #-0xa
00000000000336c0	madd	x9, x10, x11, x9
00000000000336c4	cmp	x9, #0x0
00000000000336c8	cneg	x9, x9, mi
00000000000336cc	adr	x11, #0x2b0b8 ; literal pool for: "b"
00000000000336d0	nop
00000000000336d4	stp	x8, x11, [sp, #0x10]
00000000000336d8	stp	x10, x9, [sp]
00000000000336dc	adr	x2, #0x2b0b0 ; literal pool for: "%ld.%ld %s%s"
00000000000336e0	nop
00000000000336e4	sub	x0, x29, #0xe0
00000000000336e8	mov	w1, #0x20
00000000000336ec	bl	0x55728 ; symbol stub for: _snprintf
00000000000336f0	sub	x8, x29, #0xe0
00000000000336f4	str	x8, [sp]
00000000000336f8	adr	x2, #0x2b1d9 ; literal pool for: "%s"
00000000000336fc	nop
0000000000033700	add	x1, sp, #0x40
0000000000033704	bl	__mi_fprintf
0000000000033708	cbz	x19, 0x337f4
000000000003370c	adr	x2, #0x2b08d ; literal pool for: ", commit: "
0000000000033710	nop
0000000000033714	add	x1, sp, #0x40
0000000000033718	bl	__mi_fprintf
000000000003371c	cmp	x19, #0x0
0000000000033720	cneg	x8, x19, mi
0000000000033724	cmp	x8, #0x3ff
0000000000033728	b.gt	0x33744
000000000003372c	adr	x8, #0x2b058 ; literal pool for: "b"
0000000000033730	nop
0000000000033734	stp	x19, x8, [sp]
0000000000033738	adr	x2, #0x2b045 ; literal pool for: "%d %s "
000000000003373c	nop
0000000000033740	b	0x337d0
0000000000033744	adr	x9, #0x2b044 ; literal pool for: "m"
0000000000033748	nop
000000000003374c	adr	x10, #0x2b03a ; literal pool for: "k"
0000000000033750	nop
0000000000033754	cmp	x8, #0x100, lsl #12
0000000000033758	csel	x9, x10, x9, lt
000000000003375c	mov	w10, #0x100000
0000000000033760	mov	w11, #0x400
0000000000033764	csel	x10, x11, x10, lt
0000000000033768	lsl	x11, x10, #10
000000000003376c	adr	x12, #0x2b01e ; literal pool for: "g"
0000000000033770	nop
0000000000033774	cmp	x8, x11
0000000000033778	csel	x8, x9, x12, lt
000000000003377c	csel	x9, x10, x11, lt
0000000000033780	mov	w10, #0xcccd
0000000000033784	movk	w10, #0xcccc, lsl #16
0000000000033788	mul	x9, x9, x10
000000000003378c	lsr	x9, x9, #35
0000000000033790	sdiv	x9, x19, x9
0000000000033794	mov	x10, #0x6666666666666666
0000000000033798	movk	x10, #0x6667
000000000003379c	smulh	x10, x9, x10
00000000000337a0	asr	x11, x10, #2
00000000000337a4	add	x10, x11, x10, lsr #63
00000000000337a8	mov	x11, #-0xa
00000000000337ac	madd	x9, x10, x11, x9
00000000000337b0	cmp	x9, #0x0
00000000000337b4	cneg	x9, x9, mi
00000000000337b8	adr	x11, #0x2afcc ; literal pool for: "b"
00000000000337bc	nop
00000000000337c0	stp	x8, x11, [sp, #0x10]
00000000000337c4	stp	x10, x9, [sp]
00000000000337c8	adr	x2, #0x2afc4 ; literal pool for: "%ld.%ld %s%s"
00000000000337cc	nop
00000000000337d0	sub	x0, x29, #0xe0
00000000000337d4	mov	w1, #0x20
00000000000337d8	bl	0x55728 ; symbol stub for: _snprintf
00000000000337dc	sub	x8, x29, #0xe0
00000000000337e0	str	x8, [sp]
00000000000337e4	adr	x2, #0x2b0ed ; literal pool for: "%s"
00000000000337e8	nop
00000000000337ec	add	x1, sp, #0x40
00000000000337f0	bl	__mi_fprintf
00000000000337f4	adr	x2, #0x2b486 ; literal pool for: "\n"
00000000000337f8	nop
00000000000337fc	add	x1, sp, #0x40
0000000000033800	bl	__mi_fprintf
0000000000033804	nop
0000000000033808	ldr	x8, #0x45278
000000000003380c	str	x8, [sp]
0000000000033810	adr	x0, #0x2adf3 ; literal pool for: "process done: 0x%zx\n"
0000000000033814	nop
0000000000033818	bl	__mi_verbose_message
000000000003381c	adrp	x8, 97 ; 0x94000
0000000000033820	strb	wzr, [x8, #0x28c]
0000000000033824	add	sp, sp, #0x230
0000000000033828	ldp	x29, x30, [sp, #0x50]
000000000003382c	ldp	x20, x19, [sp, #0x40]
0000000000033830	ldp	x22, x21, [sp, #0x30]
0000000000033834	ldp	x24, x23, [sp, #0x20]
0000000000033838	ldp	x26, x25, [sp, #0x10]
000000000003383c	ldp	x28, x27, [sp], #0x60
0000000000033840	ret
0000000000033844	adr	x20, #0x60b2c
0000000000033848	nop
000000000003384c	ldar	x19, [x20]
0000000000033850	cbnz	x19, 0x334bc
0000000000033854	mov	w0, #0xf
0000000000033858	bl	_mi_option_get
000000000003385c	cmp	x0, #0x1
0000000000033860	csinc	x19, x0, xzr, gt
0000000000033864	stlr	x19, [x20]
0000000000033868	str	x19, [sp]
000000000003386c	adr	x0, #0x2aa44 ; literal pool for: "using %zd numa regions\n"
0000000000033870	nop
0000000000033874	bl	__mi_verbose_message
0000000000033878	b	0x334bc
_mi_process_init:
000000000003387c	sub	sp, sp, #0xf0
0000000000033880	stp	x28, x27, [sp, #0x90]
0000000000033884	stp	x26, x25, [sp, #0xa0]
0000000000033888	stp	x24, x23, [sp, #0xb0]
000000000003388c	stp	x22, x21, [sp, #0xc0]
0000000000033890	stp	x20, x19, [sp, #0xd0]
0000000000033894	stp	x29, x30, [sp, #0xe0]
0000000000033898	add	x29, sp, #0xe0
000000000003389c	adrp	x8, 97 ; 0x94000
00000000000338a0	ldrb	w8, [x8, #0x28b]
00000000000338a4	tbnz	w8, #0x0, 0x34648
00000000000338a8	adr	x9, #0x609e3
00000000000338ac	nop
00000000000338b0	mov	w8, #0x1
00000000000338b4	strb	w8, [x9]
00000000000338b8	ldrb	w9, [x9, #0x2]
00000000000338bc	tbnz	w9, #0x0, 0x33914
00000000000338c0	adrp	x9, 97 ; 0x94000
00000000000338c4	strb	w8, [x9, #0x28d]
00000000000338c8	adr	x20, #0x46490
00000000000338cc	nop
00000000000338d0	adr	x1, #0xdd8
00000000000338d4	nop
00000000000338d8	mov	x0, x20
00000000000338dc	bl	0x55674 ; symbol stub for: _pthread_key_create
00000000000338e0	adrp	x0, 71 ; 0x7a000
00000000000338e4	add	x0, x0, #0x2d8
00000000000338e8	ldr	x8, [x0]
00000000000338ec	blr	x8
00000000000338f0	adr	x8, #0x44670
00000000000338f4	nop
00000000000338f8	str	x8, [x0]
00000000000338fc	ldr	x0, [x20]
0000000000033900	cmn	x0, #0x1
0000000000033904	b.eq	0x33914
0000000000033908	adr	x1, #0x44658
000000000003390c	nop
0000000000033910	bl	0x556e0 ; symbol stub for: _pthread_setspecific
0000000000033914	bl	0x556c8 ; symbol stub for: _pthread_self
0000000000033918	bl	0x55680 ; symbol stub for: _pthread_mach_thread_np
000000000003391c	mov	w8, w0
0000000000033920	str	x8, [sp]
0000000000033924	adr	x0, #0x2a7b4 ; literal pool for: "process init: 0x%zx\n"
0000000000033928	nop
000000000003392c	bl	__mi_verbose_message
0000000000033930	mov	w0, #0x1d
0000000000033934	bl	0x55794 ; symbol stub for: _sysconf
0000000000033938	cmp	x0, #0x1
000000000003393c	b.lt	0x33948
0000000000033940	adrp	x8, 70 ; 0x79000
0000000000033944	str	x0, [x8, #0xd60]
0000000000033948	adrp	x8, 97 ; 0x94000
000000000003394c	mov	w9, #0x1
0000000000033950	strb	w9, [x8, #0x290]
0000000000033954	nop
0000000000033958	ldr	x8, #0x45130
000000000003395c	cbnz	x8, 0x33a10
0000000000033960	bl	0x556c8 ; symbol stub for: _pthread_self
0000000000033964	bl	0x55680 ; symbol stub for: _pthread_mach_thread_np
0000000000033968	mov	w8, w0
000000000003396c	adrp	x9, 69 ; 0x78000
0000000000033970	str	x8, [x9, #0xa80]
0000000000033974	bl	0x5547c ; symbol stub for: _mach_absolute_time
0000000000033978	adr	x8, #-0x904
000000000003397c	nop
0000000000033980	adr	x9, #-0x9ec
0000000000033984	nop
0000000000033988	eor	x8, x9, x8
000000000003398c	eor	x8, x0, x8
0000000000033990	eor	w9, w8, w8, lsr #17
0000000000033994	and	x9, x9, #0xf
0000000000033998	add	x9, x9, #0x1
000000000003399c	mov	w10, #0x11
00000000000339a0	mov	x11, #0xe5b9
00000000000339a4	movk	x11, #0x1ce4, lsl #16
00000000000339a8	movk	x11, #0x476d, lsl #32
00000000000339ac	movk	x11, #0xbf58, lsl #48
00000000000339b0	mov	x12, #0x11eb
00000000000339b4	movk	x12, #0x1331, lsl #16
00000000000339b8	movk	x12, #0x49bb, lsl #32
00000000000339bc	movk	x12, #0x94d0, lsl #48
00000000000339c0	cmp	x8, #0x0
00000000000339c4	csel	x8, x10, x8, eq
00000000000339c8	eor	x8, x8, x8, lsr #30
00000000000339cc	mul	x8, x8, x11
00000000000339d0	eor	x8, x8, x8, lsr #27
00000000000339d4	mul	x8, x8, x12
00000000000339d8	eor	x8, x8, x8, lsr #31
00000000000339dc	subs	x9, x9, #0x1
00000000000339e0	b.ne	0x339c0
00000000000339e4	adr	x20, #0x4457c
00000000000339e8	nop
00000000000339ec	str	x8, [x20, #0xb28]
00000000000339f0	add	x0, x20, #0xb40
00000000000339f4	bl	__mi_random_init
00000000000339f8	mov	x0, x20
00000000000339fc	bl	__mi_heap_random_next
0000000000033a00	str	x0, [x20, #0xb30]
0000000000033a04	mov	x0, x20
0000000000033a08	bl	__mi_heap_random_next
0000000000033a0c	str	x0, [x20, #0xb38]
0000000000033a10	str	xzr, [sp]
0000000000033a14	adr	x0, #0x2a6d9 ; literal pool for: "secure level: %d\n"
0000000000033a18	nop
0000000000033a1c	bl	__mi_verbose_message
0000000000033a20	bl	_mi_thread_init
0000000000033a24	bl	_mi_thread_init
0000000000033a28	adrp	x0, 71 ; 0x7a000
0000000000033a2c	add	x0, x0, #0x2d8
0000000000033a30	ldr	x8, [x0]
0000000000033a34	str	x8, [sp, #0x70]
0000000000033a38	blr	x8
0000000000033a3c	ldr	x8, [x0]
0000000000033a40	ldr	x8, [x8]
0000000000033a44	add	x0, x8, #0xb0
0000000000033a48	adr	x8, #0x60e38
0000000000033a4c	nop
0000000000033a50	cmp	x0, x8
0000000000033a54	b.eq	0x33a60
0000000000033a58	mov	w1, #0x240
0000000000033a5c	bl	0x553c8 ; symbol stub for: _bzero
0000000000033a60	adr	x19, #0x60930
0000000000033a64	nop
0000000000033a68	add	x0, x19, #0x4f0
0000000000033a6c	mov	w1, #0x240
0000000000033a70	bl	0x553c8 ; symbol stub for: _bzero
0000000000033a74	ldr	x8, [x19]
0000000000033a78	cbnz	x8, 0x33b38
0000000000033a7c	adrp	x19, 97 ; 0x94000
0000000000033a80	ldr	x8, [x19, #0x388]
0000000000033a84	cbnz	x8, 0x33af8
0000000000033a88	sub	x0, x29, #0x60
0000000000033a8c	mov	x1, #0x0
0000000000033a90	bl	0x55470 ; symbol stub for: _gettimeofday
0000000000033a94	ldur	x20, [x29, #-0x60]
0000000000033a98	ldursw	x8, [x29, #-0x58]
0000000000033a9c	mov	x9, #-0x4dd3
0000000000033aa0	movk	x9, #0xef9d, lsl #16
0000000000033aa4	mul	x8, x8, x9
0000000000033aa8	lsr	x9, x8, #63
0000000000033aac	asr	x8, x8, #38
0000000000033ab0	add	w21, w8, w9
0000000000033ab4	sub	x0, x29, #0x60
0000000000033ab8	mov	x1, #0x0
0000000000033abc	bl	0x55470 ; symbol stub for: _gettimeofday
0000000000033ac0	ldur	x8, [x29, #-0x60]
0000000000033ac4	ldursw	x9, [x29, #-0x58]
0000000000033ac8	mov	w10, #0x4dd3
0000000000033acc	movk	w10, #0x1062, lsl #16
0000000000033ad0	mul	x9, x9, x10
0000000000033ad4	lsr	x10, x9, #63
0000000000033ad8	asr	x9, x9, #38
0000000000033adc	add	w9, w9, w10
0000000000033ae0	sub	x8, x8, x20
0000000000033ae4	mov	w10, #0x3e8
0000000000033ae8	mul	x8, x8, x10
0000000000033aec	add	w9, w9, w21
0000000000033af0	add	x8, x8, w9, sxtw
0000000000033af4	str	x8, [x19, #0x388]
0000000000033af8	sub	x0, x29, #0x60
0000000000033afc	mov	x1, #0x0
0000000000033b00	bl	0x55470 ; symbol stub for: _gettimeofday
0000000000033b04	ldur	x8, [x29, #-0x60]
0000000000033b08	mov	w9, #0x3e8
0000000000033b0c	mul	x8, x8, x9
0000000000033b10	ldursw	x9, [x29, #-0x58]
0000000000033b14	mov	w10, #0x4dd3
0000000000033b18	movk	w10, #0x1062, lsl #16
0000000000033b1c	mul	x9, x9, x10
0000000000033b20	lsr	x10, x9, #63
0000000000033b24	asr	x9, x9, #38
0000000000033b28	add	w9, w9, w10
0000000000033b2c	add	x8, x8, w9, sxtw
0000000000033b30	adrp	x9, 97 ; 0x94000
0000000000033b34	str	x8, [x9, #0x390]
0000000000033b38	mov	w0, #0x7
0000000000033b3c	bl	_mi_option_get
0000000000033b40	cbz	x0, 0x34454
0000000000033b44	mov	w0, #0x7
0000000000033b48	bl	_mi_option_get
0000000000033b4c	cbz	x0, 0x34454
0000000000033b50	mov	x25, x0
0000000000033b54	mov	w8, #0x1f4
0000000000033b58	mul	x19, x0, x8
0000000000033b5c	nop
0000000000033b60	ldr	x20, #0x60810
0000000000033b64	cbz	x20, 0x34668
0000000000033b68	mov	x26, #0x0
0000000000033b6c	cmp	x20, #0x0
0000000000033b70	csinc	x9, x20, xzr, ne
0000000000033b74	adr	x28, #0x6080c
0000000000033b78	nop
0000000000033b7c	adr	x21, #0x60d7c
0000000000033b80	nop
0000000000033b84	adr	x20, #0x60d5c
0000000000033b88	nop
0000000000033b8c	adr	x22, #0x60d4c
0000000000033b90	nop
0000000000033b94	adr	x23, #0x60d2c
0000000000033b98	nop
0000000000033b9c	udiv	x10, x25, x9
0000000000033ba0	udiv	x8, x19, x9
0000000000033ba4	str	x9, [sp, #0x20]
0000000000033ba8	msub	x9, x10, x9, x25
0000000000033bac	stp	x9, x10, [sp, #0x28]
0000000000033bb0	add	x8, x8, #0x32
0000000000033bb4	cmp	x19, #0x0
0000000000033bb8	csel	x8, xzr, x8, eq
0000000000033bbc	lsl	x9, x8, #1
0000000000033bc0	str	x8, [sp, #0x68]
0000000000033bc4	add	x8, x8, #0x1
0000000000033bc8	stp	x8, x9, [sp, #0x50]
0000000000033bcc	mov	w19, #0x40000000
0000000000033bd0	b	0x33c04
0000000000033bd4	adr	x9, #0x606ac
0000000000033bd8	nop
0000000000033bdc	add	x8, x9, x8, lsl #3
0000000000033be0	add	x8, x8, #0x400
0000000000033be4	stlr	x0, [x8]
0000000000033be8	ldur	x8, [x29, #-0x68]
0000000000033bec	subs	x8, x25, x8
0000000000033bf0	csel	x25, xzr, x8, lo
0000000000033bf4	add	x26, x26, #0x1
0000000000033bf8	ldr	x8, [sp, #0x20]
0000000000033bfc	ccmp	x26, x8, #0x2, hi
0000000000033c00	b.hs	0x34454
0000000000033c04	ldr	x8, [sp, #0x28]
0000000000033c08	cmp	x26, x8
0000000000033c0c	ldr	x8, [sp, #0x30]
0000000000033c10	cinc	x8, x8, lo
0000000000033c14	stur	x8, [x29, #-0x68]
0000000000033c18	cbz	x8, 0x33be8
0000000000033c1c	stp	x26, x25, [sp, #0x38]
0000000000033c20	tbnz	w26, #0x1f, 0x33c40
0000000000033c24	nop
0000000000033c28	ldr	x24, #0x60748
0000000000033c2c	cbz	x24, 0x342b8
0000000000033c30	and	x8, x26, #0xffffffff
0000000000033c34	udiv	x9, x8, x24
0000000000033c38	msub	w8, w9, w24, w8
0000000000033c3c	b	0x33c44
0000000000033c40	mov	w8, #-0x1
0000000000033c44	str	x8, [sp, #0x48]
0000000000033c48	ldur	x8, [x29, #-0x68]
0000000000033c4c	lsl	x24, x8, #30
0000000000033c50	nop
0000000000033c54	ldr	x26, #0x6072c
0000000000033c58	b	0x33c6c
0000000000033c5c	mov	w9, #0x0
0000000000033c60	clrex
0000000000033c64	mov	x26, x8
0000000000033c68	cbnz	w9, 0x33cbc
0000000000033c6c	mov	x25, x26
0000000000033c70	cbnz	x26, 0x33c98
0000000000033c74	adrp	x0, 71 ; 0x7a000
0000000000033c78	add	x0, x0, #0x2d8
0000000000033c7c	ldr	x8, [sp, #0x70]
0000000000033c80	blr	x8
0000000000033c84	ldr	x0, [x0]
0000000000033c88	bl	__mi_heap_random_next
0000000000033c8c	lsr	x8, x0, #17
0000000000033c90	mov	x25, #0x200000000000
0000000000033c94	bfi	x25, x8, #30, #12
0000000000033c98	add	x9, x25, x24
0000000000033c9c	ldaxr	x8, [x28]
0000000000033ca0	cmp	x8, x26
0000000000033ca4	b.ne	0x33c5c
0000000000033ca8	stlxr	w10, x9, [x28]
0000000000033cac	cbnz	w10, 0x33c9c
0000000000033cb0	mov	w9, #0x1
0000000000033cb4	mov	x26, x8
0000000000033cb8	cbz	w9, 0x33c6c
0000000000033cbc	nop
0000000000033cc0	ldr	x8, #0x606c8
0000000000033cc4	cbz	x8, 0x33edc
0000000000033cc8	sub	x0, x29, #0x60
0000000000033ccc	mov	x1, #0x0
0000000000033cd0	bl	0x55470 ; symbol stub for: _gettimeofday
0000000000033cd4	ldr	x8, [sp, #0x68]
0000000000033cd8	cmp	x8, #0x0
0000000000033cdc	b.le	0x33f68
0000000000033ce0	mov	x24, #0x0
0000000000033ce4	ldur	x8, [x29, #-0x60]
0000000000033ce8	mov	w9, #0x3e8
0000000000033cec	mul	x8, x8, x9
0000000000033cf0	ldursw	x9, [x29, #-0x58]
0000000000033cf4	mov	w10, #0x4dd3
0000000000033cf8	movk	w10, #0x1062, lsl #16
0000000000033cfc	mul	x9, x9, x10
0000000000033d00	lsr	x10, x9, #63
0000000000033d04	asr	x9, x9, #38
0000000000033d08	add	w9, w9, w10
0000000000033d0c	add	x8, x8, w9, sxtw
0000000000033d10	str	x8, [sp, #0x60]
0000000000033d14	add	x27, x25, x24, lsl #30
0000000000033d18	mov	w0, #0x11
0000000000033d1c	bl	_mi_option_get
0000000000033d20	sub	w8, w0, #0x64
0000000000033d24	adr	x9, #0x60644
0000000000033d28	nop
0000000000033d2c	ldar	xzr, [x9]
0000000000033d30	mov	w9, #0x20000
0000000000033d34	bfi	w9, w0, #24, #8
0000000000033d38	cmp	w8, #0x9b
0000000000033d3c	mov	w8, #0x64020000
0000000000033d40	csel	w4, w8, w9, hi
0000000000033d44	mov	x0, x27
0000000000033d48	mov	w1, #0x40000000
0000000000033d4c	mov	w2, #0x3
0000000000033d50	mov	w3, #0x1002
0000000000033d54	mov	x5, #0x0
0000000000033d58	bl	0x554dc ; symbol stub for: _mmap
0000000000033d5c	cmn	x0, #0x1
0000000000033d60	csel	x26, xzr, x0, eq
0000000000033d64	cmp	x26, x27
0000000000033d68	b.ne	0x340bc
0000000000033d6c	adr	x13, #0x60b64
0000000000033d70	nop
0000000000033d74	ldxr	x8, [x21]
0000000000033d78	add	x9, x8, x19
0000000000033d7c	stxr	w10, x9, [x21]
0000000000033d80	cbnz	w10, 0x33d74
0000000000033d84	add	x8, x8, x19
0000000000033d88	nop
0000000000033d8c	ldr	x10, #0x60b64
0000000000033d90	adr	x12, #0x60b60
0000000000033d94	nop
0000000000033d98	b	0x33dac
0000000000033d9c	clrex
0000000000033da0	mov	w11, #0x0
0000000000033da4	mov	x10, x9
0000000000033da8	cbnz	w11, 0x33dd4
0000000000033dac	cmp	x10, x8
0000000000033db0	b.ge	0x33dd4
0000000000033db4	ldxr	x9, [x12]
0000000000033db8	cmp	x9, x10
0000000000033dbc	b.ne	0x33d9c
0000000000033dc0	stlxr	w10, x8, [x12]
0000000000033dc4	cbnz	w10, 0x33da0
0000000000033dc8	mov	w11, #0x1
0000000000033dcc	mov	x10, x9
0000000000033dd0	cbz	w11, 0x33dac
0000000000033dd4	ldxr	x8, [x20]
0000000000033dd8	add	x8, x8, x19
0000000000033ddc	stxr	w9, x8, [x20]
0000000000033de0	cbnz	w9, 0x33dd4
0000000000033de4	ldxr	x8, [x22]
0000000000033de8	add	x9, x8, x19
0000000000033dec	stxr	w10, x9, [x22]
0000000000033df0	cbnz	w10, 0x33de4
0000000000033df4	add	x8, x8, x19
0000000000033df8	nop
0000000000033dfc	ldr	x10, #0x60ad4
0000000000033e00	b	0x33e14
0000000000033e04	clrex
0000000000033e08	mov	w11, #0x0
0000000000033e0c	mov	x10, x9
0000000000033e10	cbnz	w11, 0x33e3c
0000000000033e14	cmp	x10, x8
0000000000033e18	b.ge	0x33e3c
0000000000033e1c	ldxr	x9, [x13]
0000000000033e20	cmp	x9, x10
0000000000033e24	b.ne	0x33e04
0000000000033e28	stlxr	w10, x8, [x13]
0000000000033e2c	cbnz	w10, 0x33e08
0000000000033e30	mov	w11, #0x1
0000000000033e34	mov	x10, x9
0000000000033e38	cbz	w11, 0x33e14
0000000000033e3c	ldxr	x8, [x23]
0000000000033e40	add	x8, x8, x19
0000000000033e44	stxr	w9, x8, [x23]
0000000000033e48	cbnz	w9, 0x33e3c
0000000000033e4c	sub	x0, x29, #0x60
0000000000033e50	mov	x1, #0x0
0000000000033e54	bl	0x55470 ; symbol stub for: _gettimeofday
0000000000033e58	ldur	x8, [x29, #-0x60]
0000000000033e5c	mov	w9, #0x3e8
0000000000033e60	mul	x8, x8, x9
0000000000033e64	ldursw	x9, [x29, #-0x58]
0000000000033e68	mov	w10, #0x4dd3
0000000000033e6c	movk	w10, #0x1062, lsl #16
0000000000033e70	mul	x9, x9, x10
0000000000033e74	lsr	x10, x9, #63
0000000000033e78	asr	x9, x9, #38
0000000000033e7c	add	w9, w9, w10
0000000000033e80	nop
0000000000033e84	ldr	x10, #0x60504
0000000000033e88	add	x8, x8, w9, sxtw
0000000000033e8c	ldr	x9, [sp, #0x60]
0000000000033e90	add	x9, x10, x9
0000000000033e94	sub	x8, x8, x9
0000000000033e98	cbz	x24, 0x33ebc
0000000000033e9c	add	x9, x24, #0x1
0000000000033ea0	udiv	x9, x8, x9
0000000000033ea4	ldur	x10, [x29, #-0x68]
0000000000033ea8	mul	x9, x9, x10
0000000000033eac	ldr	x10, [sp, #0x58]
0000000000033eb0	cmp	x9, x10
0000000000033eb4	ldr	x9, [sp, #0x50]
0000000000033eb8	csel	x8, x9, x8, gt
0000000000033ebc	ldr	x9, [sp, #0x68]
0000000000033ec0	cmp	x8, x9
0000000000033ec4	b.gt	0x341f4
0000000000033ec8	add	x24, x24, #0x1
0000000000033ecc	ldur	x8, [x29, #-0x68]
0000000000033ed0	cmp	x24, x8
0000000000033ed4	b.ne	0x33d14
0000000000033ed8	b	0x340b4
0000000000033edc	sub	x0, x29, #0x60
0000000000033ee0	mov	x1, #0x0
0000000000033ee4	bl	0x55470 ; symbol stub for: _gettimeofday
0000000000033ee8	ldur	x24, [x29, #-0x60]
0000000000033eec	ldursw	x8, [x29, #-0x58]
0000000000033ef0	mov	x9, #-0x4dd3
0000000000033ef4	movk	x9, #0xef9d, lsl #16
0000000000033ef8	mul	x8, x8, x9
0000000000033efc	lsr	x9, x8, #63
0000000000033f00	asr	x8, x8, #38
0000000000033f04	add	w26, w8, w9
0000000000033f08	sub	x0, x29, #0x60
0000000000033f0c	mov	x1, #0x0
0000000000033f10	bl	0x55470 ; symbol stub for: _gettimeofday
0000000000033f14	ldur	x8, [x29, #-0x60]
0000000000033f18	ldursw	x9, [x29, #-0x58]
0000000000033f1c	mov	w10, #0x4dd3
0000000000033f20	movk	w10, #0x1062, lsl #16
0000000000033f24	mul	x9, x9, x10
0000000000033f28	lsr	x10, x9, #63
0000000000033f2c	asr	x9, x9, #38
0000000000033f30	add	w9, w9, w10
0000000000033f34	sub	x8, x8, x24
0000000000033f38	mov	w10, #0x3e8
0000000000033f3c	mul	x8, x8, x10
0000000000033f40	add	w9, w9, w26
0000000000033f44	add	x8, x8, w9, sxtw
0000000000033f48	adrp	x9, 97 ; 0x94000
0000000000033f4c	str	x8, [x9, #0x388]
0000000000033f50	sub	x0, x29, #0x60
0000000000033f54	mov	x1, #0x0
0000000000033f58	bl	0x55470 ; symbol stub for: _gettimeofday
0000000000033f5c	ldr	x8, [sp, #0x68]
0000000000033f60	cmp	x8, #0x0
0000000000033f64	b.gt	0x33ce0
0000000000033f68	mov	x24, #0x0
0000000000033f6c	add	x27, x25, x24, lsl #30
0000000000033f70	mov	w0, #0x11
0000000000033f74	bl	_mi_option_get
0000000000033f78	sub	w8, w0, #0x64
0000000000033f7c	adr	x9, #0x603ec
0000000000033f80	nop
0000000000033f84	ldar	xzr, [x9]
0000000000033f88	mov	w9, #0x20000
0000000000033f8c	bfi	w9, w0, #24, #8
0000000000033f90	cmp	w8, #0x9b
0000000000033f94	mov	w8, #0x64020000
0000000000033f98	csel	w4, w8, w9, hi
0000000000033f9c	mov	x0, x27
0000000000033fa0	mov	w1, #0x40000000
0000000000033fa4	mov	w2, #0x3
0000000000033fa8	mov	w3, #0x1002
0000000000033fac	mov	x5, #0x0
0000000000033fb0	bl	0x554dc ; symbol stub for: _mmap
0000000000033fb4	cmn	x0, #0x1
0000000000033fb8	csel	x26, xzr, x0, eq
0000000000033fbc	cmp	x26, x27
0000000000033fc0	b.ne	0x340bc
0000000000033fc4	ldxr	x8, [x21]
0000000000033fc8	add	x9, x8, x19
0000000000033fcc	stxr	w10, x9, [x21]
0000000000033fd0	cbnz	w10, 0x33fc4
0000000000033fd4	add	x8, x8, x19
0000000000033fd8	nop
0000000000033fdc	ldr	x10, #0x60914
0000000000033fe0	adr	x12, #0x60910
0000000000033fe4	nop
0000000000033fe8	adr	x13, #0x608e8
0000000000033fec	nop
0000000000033ff0	b	0x34004
0000000000033ff4	clrex
0000000000033ff8	mov	w11, #0x0
0000000000033ffc	mov	x10, x9
0000000000034000	cbnz	w11, 0x3402c
0000000000034004	cmp	x10, x8
0000000000034008	b.ge	0x3402c
000000000003400c	ldxr	x9, [x12]
0000000000034010	cmp	x9, x10
0000000000034014	b.ne	0x33ff4
0000000000034018	stlxr	w10, x8, [x12]
000000000003401c	cbnz	w10, 0x33ff8
0000000000034020	mov	w11, #0x1
0000000000034024	mov	x10, x9
0000000000034028	cbz	w11, 0x34004
000000000003402c	ldxr	x8, [x20]
0000000000034030	add	x8, x8, x19
0000000000034034	stxr	w9, x8, [x20]
0000000000034038	cbnz	w9, 0x3402c
000000000003403c	ldxr	x8, [x22]
0000000000034040	add	x9, x8, x19
0000000000034044	stxr	w10, x9, [x22]
0000000000034048	cbnz	w10, 0x3403c
000000000003404c	add	x8, x8, x19
0000000000034050	nop
0000000000034054	ldr	x10, #0x6087c
0000000000034058	b	0x3406c
000000000003405c	clrex
0000000000034060	mov	w11, #0x0
0000000000034064	mov	x10, x9
0000000000034068	cbnz	w11, 0x34094
000000000003406c	cmp	x10, x8
0000000000034070	b.ge	0x34094
0000000000034074	ldxr	x9, [x13]
0000000000034078	cmp	x9, x10
000000000003407c	b.ne	0x3405c
0000000000034080	stlxr	w10, x8, [x13]
0000000000034084	cbnz	w10, 0x34060
0000000000034088	mov	w11, #0x1
000000000003408c	mov	x10, x9
0000000000034090	cbz	w11, 0x3406c
0000000000034094	ldxr	x8, [x23]
0000000000034098	add	x8, x8, x19
000000000003409c	stxr	w9, x8, [x23]
00000000000340a0	cbnz	w9, 0x34094
00000000000340a4	add	x24, x24, #0x1
00000000000340a8	ldur	x8, [x29, #-0x68]
00000000000340ac	cmp	x24, x8
00000000000340b0	b.ne	0x33f6c
00000000000340b4	ldur	x24, [x29, #-0x68]
00000000000340b8	b	0x34200
00000000000340bc	cbz	x26, 0x34200
00000000000340c0	stp	x24, x27, [sp]
00000000000340c4	adr	x0, #0x2a199 ; literal pool for: "could not allocate contiguous huge page %zu at %p\n"
00000000000340c8	nop
00000000000340cc	bl	__mi_warning_message
00000000000340d0	mov	x0, x26
00000000000340d4	mov	w1, #0x40000000
00000000000340d8	bl	0x554f4 ; symbol stub for: _munmap
00000000000340dc	mov	x10, #-0x40000000
00000000000340e0	ldxr	x8, [x21]
00000000000340e4	add	x8, x8, x10
00000000000340e8	stxr	w9, x8, [x21]
00000000000340ec	cbnz	w9, 0x340e0
00000000000340f0	nop
00000000000340f4	ldr	x10, #0x607fc
00000000000340f8	adr	x12, #0x607f8
00000000000340fc	nop
0000000000034100	adr	x13, #0x607d0
0000000000034104	nop
0000000000034108	b	0x3411c
000000000003410c	clrex
0000000000034110	mov	w11, #0x0
0000000000034114	mov	x10, x9
0000000000034118	cbnz	w11, 0x34144
000000000003411c	cmp	x10, x8
0000000000034120	b.ge	0x34144
0000000000034124	ldxr	x9, [x12]
0000000000034128	cmp	x9, x10
000000000003412c	b.ne	0x3410c
0000000000034130	stlxr	w10, x8, [x12]
0000000000034134	cbnz	w10, 0x34110
0000000000034138	mov	w11, #0x1
000000000003413c	mov	x10, x9
0000000000034140	cbz	w11, 0x3411c
0000000000034144	adr	x10, #0x607a4
0000000000034148	nop
000000000003414c	ldxr	x8, [x10]
0000000000034150	add	x8, x8, x19
0000000000034154	stxr	w9, x8, [x10]
0000000000034158	cbnz	w9, 0x3414c
000000000003415c	mov	x10, #-0x40000000
0000000000034160	ldxr	x8, [x22]
0000000000034164	add	x8, x8, x10
0000000000034168	stxr	w9, x8, [x22]
000000000003416c	cbnz	w9, 0x34160
0000000000034170	nop
0000000000034174	ldr	x10, #0x6075c
0000000000034178	b	0x3418c
000000000003417c	clrex
0000000000034180	mov	w11, #0x0
0000000000034184	mov	x10, x9
0000000000034188	cbnz	w11, 0x341b4
000000000003418c	cmp	x10, x8
0000000000034190	b.ge	0x341b4
0000000000034194	ldxr	x9, [x13]
0000000000034198	cmp	x9, x10
000000000003419c	b.ne	0x3417c
00000000000341a0	stlxr	w10, x8, [x13]
00000000000341a4	cbnz	w10, 0x34180
00000000000341a8	mov	w11, #0x1
00000000000341ac	mov	x10, x9
00000000000341b0	cbz	w11, 0x3418c
00000000000341b4	adr	x10, #0x60714
00000000000341b8	nop
00000000000341bc	ldxr	x8, [x10]
00000000000341c0	add	x8, x8, x19
00000000000341c4	stxr	w9, x8, [x10]
00000000000341c8	cbnz	w9, 0x341bc
00000000000341cc	cmn	w0, #0x1
00000000000341d0	b.ne	0x34200
00000000000341d4	bl	0x55374 ; symbol stub for: ___error
00000000000341d8	ldr	w0, [x0]
00000000000341dc	bl	0x55740 ; symbol stub for: _strerror
00000000000341e0	stp	x26, x19, [sp, #0x8]
00000000000341e4	str	x0, [sp]
00000000000341e8	adr	x0, #0x29f66 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
00000000000341ec	nop
00000000000341f0	b	0x341fc
00000000000341f4	adr	x0, #0x2a09c ; literal pool for: "huge page allocation timed out\n"
00000000000341f8	nop
00000000000341fc	bl	__mi_warning_message
0000000000034200	cmp	x24, #0x0
0000000000034204	csel	x8, xzr, x25, eq
0000000000034208	ldr	x26, [sp, #0x48]
000000000003420c	str	x8, [sp, #0x60]
0000000000034210	cbz	x8, 0x342f8
0000000000034214	cbz	x24, 0x342f8
0000000000034218	ldur	x8, [x29, #-0x68]
000000000003421c	stp	x24, x8, [sp, #0x8]
0000000000034220	str	x26, [sp]
0000000000034224	adr	x0, #0x29ff5 ; literal pool for: "numa node %i: reserved %zu gb huge pages (of the %zu gb requested)\n"
0000000000034228	nop
000000000003422c	bl	__mi_verbose_message
0000000000034230	lsl	x27, x24, #6
0000000000034234	and	x25, x27, #0xffffffffc0
0000000000034238	lsr	x8, x25, #2
000000000003423c	add	x0, x8, #0x40
0000000000034240	bl	__mi_os_alloc
0000000000034244	cbz	x0, 0x34310
0000000000034248	ubfx	x8, x27, #6, #34
000000000003424c	stp	x25, x8, [x0, #0x8]
0000000000034250	ldr	x9, [sp, #0x60]
0000000000034254	stlr	x9, [x0]
0000000000034258	str	w26, [x0, #0x18]
000000000003425c	mov	w9, #0x1
0000000000034260	strb	w9, [x0, #0x1e]
0000000000034264	mov	w9, #0x101
0000000000034268	strh	w9, [x0, #0x1c]
000000000003426c	add	x9, x0, #0x20
0000000000034270	stlr	xzr, [x9]
0000000000034274	add	x8, x0, x8, lsl #3
0000000000034278	add	x8, x8, #0x38
000000000003427c	stp	x8, xzr, [x0, #0x28]
0000000000034280	adr	x11, #0x600c0
0000000000034284	nop
0000000000034288	ldaxr	x8, [x11]
000000000003428c	add	x9, x8, #0x1
0000000000034290	stlxr	w10, x9, [x11]
0000000000034294	cbnz	w10, 0x34288
0000000000034298	cmp	x8, #0x40
000000000003429c	ldp	x26, x25, [sp, #0x38]
00000000000342a0	b.lo	0x33bd4
00000000000342a4	ldaxr	x8, [x11]
00000000000342a8	sub	x8, x8, #0x1
00000000000342ac	stlxr	w9, x8, [x11]
00000000000342b0	cbnz	w9, 0x342a4
00000000000342b4	b	0x33be8
00000000000342b8	adr	x8, #0x600b8
00000000000342bc	nop
00000000000342c0	ldar	x24, [x8]
00000000000342c4	cbnz	x24, 0x33c30
00000000000342c8	mov	w0, #0xf
00000000000342cc	bl	_mi_option_get
00000000000342d0	cmp	x0, #0x1
00000000000342d4	csinc	x24, x0, xzr, gt
00000000000342d8	adr	x8, #0x60098
00000000000342dc	nop
00000000000342e0	stlr	x24, [x8]
00000000000342e4	str	x24, [sp]
00000000000342e8	adr	x0, #0x29fc8 ; literal pool for: "using %zd numa regions\n"
00000000000342ec	nop
00000000000342f0	bl	__mi_verbose_message
00000000000342f4	b	0x33c30
00000000000342f8	ldur	x8, [x29, #-0x68]
00000000000342fc	str	x8, [sp]
0000000000034300	adr	x0, #0x29ef4 ; literal pool for: "failed to reserve %zu gb huge pages\n"
0000000000034304	nop
0000000000034308	bl	__mi_warning_message
000000000003430c	b	0x34454
0000000000034310	lsl	x19, x24, #30
0000000000034314	adr	x25, #0x605dc
0000000000034318	nop
000000000003431c	adr	x27, #0x605b4
0000000000034320	nop
0000000000034324	ldr	x26, [sp, #0x60]
0000000000034328	cbz	x19, 0x34454
000000000003432c	mov	w23, #0x40000000
0000000000034330	mov	x24, #-0x40000000
0000000000034334	adr	x20, #0x29e1a ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
0000000000034338	nop
000000000003433c	b	0x34348
0000000000034340	adds	x19, x19, x24
0000000000034344	b.eq	0x34454
0000000000034348	mov	x0, x26
000000000003434c	mov	w1, #0x40000000
0000000000034350	bl	0x554f4 ; symbol stub for: _munmap
0000000000034354	ldxr	x8, [x21]
0000000000034358	add	x8, x8, x24
000000000003435c	stxr	w9, x8, [x21]
0000000000034360	cbnz	w9, 0x34354
0000000000034364	nop
0000000000034368	ldr	x10, #0x60588
000000000003436c	b	0x34380
0000000000034370	clrex
0000000000034374	mov	w11, #0x0
0000000000034378	mov	x10, x9
000000000003437c	cbnz	w11, 0x343a8
0000000000034380	cmp	x10, x8
0000000000034384	b.ge	0x343a8
0000000000034388	ldxr	x9, [x25]
000000000003438c	cmp	x9, x10
0000000000034390	b.ne	0x34370
0000000000034394	stlxr	w10, x8, [x25]
0000000000034398	cbnz	w10, 0x34374
000000000003439c	mov	w11, #0x1
00000000000343a0	mov	x10, x9
00000000000343a4	cbz	w11, 0x34380
00000000000343a8	adr	x10, #0x60540
00000000000343ac	nop
00000000000343b0	ldxr	x8, [x10]
00000000000343b4	add	x8, x8, x23
00000000000343b8	stxr	w9, x8, [x10]
00000000000343bc	cbnz	w9, 0x343b0
00000000000343c0	ldxr	x8, [x22]
00000000000343c4	add	x8, x8, x24
00000000000343c8	stxr	w9, x8, [x22]
00000000000343cc	cbnz	w9, 0x343c0
00000000000343d0	nop
00000000000343d4	ldr	x10, #0x604fc
00000000000343d8	b	0x343ec
00000000000343dc	clrex
00000000000343e0	mov	w11, #0x0
00000000000343e4	mov	x10, x9
00000000000343e8	cbnz	w11, 0x34414
00000000000343ec	cmp	x10, x8
00000000000343f0	b.ge	0x34414
00000000000343f4	ldxr	x9, [x27]
00000000000343f8	cmp	x9, x10
00000000000343fc	b.ne	0x343dc
0000000000034400	stlxr	w10, x8, [x27]
0000000000034404	cbnz	w10, 0x343e0
0000000000034408	mov	w11, #0x1
000000000003440c	mov	x10, x9
0000000000034410	cbz	w11, 0x343ec
0000000000034414	adr	x10, #0x604b4
0000000000034418	nop
000000000003441c	ldxr	x8, [x10]
0000000000034420	add	x8, x8, x23
0000000000034424	stxr	w9, x8, [x10]
0000000000034428	cbnz	w9, 0x3441c
000000000003442c	cmn	w0, #0x1
0000000000034430	b.ne	0x34340
0000000000034434	bl	0x55374 ; symbol stub for: ___error
0000000000034438	ldr	w0, [x0]
000000000003443c	bl	0x55740 ; symbol stub for: _strerror
0000000000034440	stp	x26, x23, [sp, #0x8]
0000000000034444	str	x0, [sp]
0000000000034448	mov	x0, x20
000000000003444c	bl	__mi_warning_message
0000000000034450	b	0x34340
0000000000034454	mov	w0, #0x8
0000000000034458	bl	_mi_option_get
000000000003445c	cbz	x0, 0x34648
0000000000034460	mov	w0, #0x8
0000000000034464	bl	_mi_option_get
0000000000034468	cmp	x0, #0x1
000000000003446c	b.lt	0x34648
0000000000034470	lsl	x19, x0, #10
0000000000034474	ubfx	x8, x0, #9, #45
0000000000034478	cbnz	x8, 0x34488
000000000003447c	nop
0000000000034480	ldr	x8, #0x458e0
0000000000034484	b	0x344b4
0000000000034488	mov	w8, #0x10000
000000000003448c	mov	w9, #0x40000
0000000000034490	lsr	x10, x19, #25
0000000000034494	cmp	x10, #0x0
0000000000034498	mov	w10, #0x400000
000000000003449c	mov	w11, #0x100000
00000000000344a0	csel	x10, x11, x10, eq
00000000000344a4	cmp	x19, #0x800, lsl #12
00000000000344a8	csel	x9, x9, x10, lo
00000000000344ac	cmp	x19, #0x200, lsl #12
00000000000344b0	csel	x8, x8, x9, lo
00000000000344b4	mvn	x9, x8
00000000000344b8	cmp	x19, x9
00000000000344bc	b.hs	0x344e8
00000000000344c0	add	x9, x19, x8
00000000000344c4	sub	x9, x9, #0x1
00000000000344c8	sub	x10, x8, #0x1
00000000000344cc	tst	x8, x10
00000000000344d0	b.ne	0x344e0
00000000000344d4	neg	x8, x8
00000000000344d8	and	x19, x9, x8
00000000000344dc	b	0x344e8
00000000000344e0	udiv	x9, x9, x8
00000000000344e4	mul	x19, x9, x8
00000000000344e8	mov	w8, #0x1
00000000000344ec	sturb	w8, [x29, #-0x60]
00000000000344f0	sub	x2, x29, #0x60
00000000000344f4	mov	x0, x19
00000000000344f8	mov	w1, #0x1
00000000000344fc	bl	__mi_os_alloc_aligned
0000000000034500	cbz	x0, 0x34648
0000000000034504	mov	x20, x0
0000000000034508	ldurb	w25, [x29, #-0x60]
000000000003450c	mov	w8, #0xffffff
0000000000034510	add	x22, x19, x8
0000000000034514	lsr	x21, x22, #24
0000000000034518	add	x23, x21, #0x3f
000000000003451c	lsr	x24, x23, #6
0000000000034520	lsl	x8, x24, #4
0000000000034524	add	x0, x8, #0x40
0000000000034528	bl	__mi_os_alloc
000000000003452c	cbz	x0, 0x345d8
0000000000034530	stp	x21, x24, [x0, #0x8]
0000000000034534	stlr	x20, [x0]
0000000000034538	mov	w8, #-0x1
000000000003453c	str	w8, [x0, #0x18]
0000000000034540	strb	w25, [x0, #0x1e]
0000000000034544	mov	w8, #0x101
0000000000034548	strh	w8, [x0, #0x1c]
000000000003454c	add	x9, x0, #0x20
0000000000034550	add	x8, x0, #0x38
0000000000034554	stlr	xzr, [x9]
0000000000034558	add	x10, x8, x24, lsl #3
000000000003455c	and	x9, x23, #0x1ffffffffc0
0000000000034560	sub	x9, x9, x21
0000000000034564	stp	x10, xzr, [x0, #0x28]
0000000000034568	cmp	x9, #0x1
000000000003456c	b.lt	0x345a4
0000000000034570	lsr	x10, x22, #27
0000000000034574	and	x10, x10, #0x1ffffffff8
0000000000034578	mov	x11, #-0x1
000000000003457c	lsl	x11, x11, x9
0000000000034580	mvn	x11, x11
0000000000034584	lsl	x11, x11, x21
0000000000034588	cmp	x9, #0x3f
000000000003458c	csinv	x9, x11, xzr, ls
0000000000034590	add	x8, x8, x10
0000000000034594	ldaxr	x10, [x8]
0000000000034598	orr	x10, x10, x9
000000000003459c	stlxr	w11, x10, [x8]
00000000000345a0	cbnz	w11, 0x34594
00000000000345a4	adr	x8, #0x5fd9c
00000000000345a8	nop
00000000000345ac	ldaxr	x9, [x8]
00000000000345b0	add	x10, x9, #0x1
00000000000345b4	stlxr	w11, x10, [x8]
00000000000345b8	cbnz	w11, 0x345ac
00000000000345bc	cmp	x9, #0x40
00000000000345c0	b.lo	0x34600
00000000000345c4	ldaxr	x9, [x8]
00000000000345c8	sub	x9, x9, #0x1
00000000000345cc	stlxr	w10, x9, [x8]
00000000000345d0	cbnz	w10, 0x345c4
00000000000345d4	b	0x34614
00000000000345d8	mov	x0, x20
00000000000345dc	mov	x1, x19
00000000000345e0	mov	w2, #0x1
00000000000345e4	bl	__mi_os_free_ex
00000000000345e8	add	x8, x19, #0x3ff
00000000000345ec	lsr	x8, x8, #10
00000000000345f0	str	x8, [sp]
00000000000345f4	adr	x0, #0x29b0b ; literal pool for: "failed to reserve %zu k memory\n"
00000000000345f8	nop
00000000000345fc	b	0x34644
0000000000034600	adr	x8, #0x5fc80
0000000000034604	nop
0000000000034608	add	x8, x8, x9, lsl #3
000000000003460c	add	x8, x8, #0x400
0000000000034610	stlr	x0, [x8]
0000000000034614	add	x8, x19, #0x3ff
0000000000034618	lsr	x8, x8, #10
000000000003461c	ldurb	w9, [x29, #-0x60]
0000000000034620	adr	x10, #0x29aff ; literal pool for: " (in large os pages)"
0000000000034624	nop
0000000000034628	adr	x11, #0x2a35f ; literal pool for: ""
000000000003462c	nop
0000000000034630	cmp	w9, #0x0
0000000000034634	csel	x9, x11, x10, eq
0000000000034638	stp	x8, x9, [sp]
000000000003463c	adr	x0, #0x29af8 ; literal pool for: "reserved %zu kb memory%s\n"
0000000000034640	nop
0000000000034644	bl	__mi_verbose_message
0000000000034648	ldp	x29, x30, [sp, #0xe0]
000000000003464c	ldp	x20, x19, [sp, #0xd0]
0000000000034650	ldp	x22, x21, [sp, #0xc0]
0000000000034654	ldp	x24, x23, [sp, #0xb0]
0000000000034658	ldp	x26, x25, [sp, #0xa0]
000000000003465c	ldp	x28, x27, [sp, #0x90]
0000000000034660	add	sp, sp, #0xf0
0000000000034664	ret
0000000000034668	adr	x8, #0x5fd08
000000000003466c	nop
0000000000034670	ldar	x20, [x8]
0000000000034674	cbnz	x20, 0x33b68
0000000000034678	mov	w0, #0xf
000000000003467c	bl	_mi_option_get
0000000000034680	cmp	x0, #0x1
0000000000034684	csinc	x20, x0, xzr, gt
0000000000034688	adr	x8, #0x5fce8
000000000003468c	nop
0000000000034690	stlr	x20, [x8]
0000000000034694	str	x20, [sp]
0000000000034698	adr	x0, #0x29c18 ; literal pool for: "using %zd numa regions\n"
000000000003469c	nop
00000000000346a0	bl	__mi_verbose_message
00000000000346a4	b	0x33b68
_mi_pthread_done:
00000000000346a8	stp	x28, x27, [sp, #-0x60]!
00000000000346ac	stp	x26, x25, [sp, #0x10]
00000000000346b0	stp	x24, x23, [sp, #0x20]
00000000000346b4	stp	x22, x21, [sp, #0x30]
00000000000346b8	stp	x20, x19, [sp, #0x40]
00000000000346bc	stp	x29, x30, [sp, #0x50]
00000000000346c0	add	x29, sp, #0x50
00000000000346c4	cbz	x0, 0x347f8
00000000000346c8	mov	x19, x0
00000000000346cc	adr	x9, #0x602cc
00000000000346d0	nop
00000000000346d4	ldxr	x8, [x9]
00000000000346d8	sub	x8, x8, #0x1
00000000000346dc	stxr	w10, x8, [x9]
00000000000346e0	cbnz	w10, 0x346d4
00000000000346e4	nop
00000000000346e8	ldr	x11, #0x602a8
00000000000346ec	adr	x9, #0x602a4
00000000000346f0	nop
00000000000346f4	b	0x34708
00000000000346f8	clrex
00000000000346fc	mov	w12, #0x0
0000000000034700	mov	x11, x10
0000000000034704	cbnz	w12, 0x34730
0000000000034708	cmp	x11, x8
000000000003470c	b.ge	0x34730
0000000000034710	ldxr	x10, [x9]
0000000000034714	cmp	x10, x11
0000000000034718	b.ne	0x346f8
000000000003471c	stlxr	w11, x8, [x9]
0000000000034720	cbnz	w11, 0x346fc
0000000000034724	mov	w12, #0x1
0000000000034728	mov	x11, x10
000000000003472c	cbz	w12, 0x34708
0000000000034730	adr	x8, #0x60258
0000000000034734	nop
0000000000034738	ldxr	x9, [x8]
000000000003473c	add	x9, x9, #0x1
0000000000034740	stxr	w10, x9, [x8]
0000000000034744	cbnz	w10, 0x34738
0000000000034748	ldr	x20, [x19, #0xb20]
000000000003474c	bl	0x556c8 ; symbol stub for: _pthread_self
0000000000034750	bl	0x55680 ; symbol stub for: _pthread_mach_thread_np
0000000000034754	adr	x23, #0x3c4ec
0000000000034758	nop
000000000003475c	cmp	x19, x23
0000000000034760	b.eq	0x347f8
0000000000034764	mov	w8, w0
0000000000034768	cmp	x20, x8
000000000003476c	b.ne	0x347f8
0000000000034770	nop
0000000000034774	ldr	x20, #0x4430c
0000000000034778	cbz	x20, 0x3478c
000000000003477c	bl	0x556c8 ; symbol stub for: _pthread_self
0000000000034780	bl	0x55680 ; symbol stub for: _pthread_mach_thread_np
0000000000034784	cmp	x20, w0, uxtw
0000000000034788	b.ne	0x34798
000000000003478c	adr	x1, #0x437d4
0000000000034790	nop
0000000000034794	b	0x347a0
0000000000034798	adr	x1, #0x3c4a8
000000000003479c	nop
00000000000347a0	adrp	x20, 70 ; 0x7a000
00000000000347a4	add	x20, x20, #0x2d8
00000000000347a8	ldr	x24, [x20]
00000000000347ac	mov	x0, x20
00000000000347b0	blr	x24
00000000000347b4	str	x1, [x0]
00000000000347b8	nop
00000000000347bc	ldr	x0, #0x4559c
00000000000347c0	cmn	x0, #0x1
00000000000347c4	b.eq	0x347cc
00000000000347c8	bl	0x556e0 ; symbol stub for: _pthread_setspecific
00000000000347cc	ldr	x8, [x19]
00000000000347d0	ldr	x19, [x8, #0x10]
00000000000347d4	cmp	x19, x23
00000000000347d8	b.eq	0x347f8
00000000000347dc	ldr	x8, [x19]
00000000000347e0	ldr	x26, [x8, #0x18]
00000000000347e4	cbz	x26, 0x34c5c
00000000000347e8	mov	w27, #0x18
00000000000347ec	mov	w21, #0x7
00000000000347f0	movk	w21, #0x20, lsl #16
00000000000347f4	b	0x34820
00000000000347f8	ldp	x29, x30, [sp, #0x50]
00000000000347fc	ldp	x20, x19, [sp, #0x40]
0000000000034800	ldp	x22, x21, [sp, #0x30]
0000000000034804	ldp	x24, x23, [sp, #0x20]
0000000000034808	ldp	x26, x25, [sp, #0x10]
000000000003480c	ldp	x28, x27, [sp], #0x60
0000000000034810	ret
0000000000034814	mov	x0, x22
0000000000034818	bl	_mi_free
000000000003481c	cbz	x26, 0x34c5c
0000000000034820	mov	x22, x26
0000000000034824	ldr	x26, [x26, #0xbe0]
0000000000034828	cmp	x22, x19
000000000003482c	b.eq	0x3481c
0000000000034830	cbz	x22, 0x3481c
0000000000034834	cmp	x22, x23
0000000000034838	b.eq	0x3481c
000000000003483c	ldr	x8, [x22]
0000000000034840	ldr	x25, [x8, #0x10]
0000000000034844	cmp	x25, x22
0000000000034848	b.eq	0x34bc4
000000000003484c	ldr	x8, [x22, #0xbc8]
0000000000034850	cbz	x8, 0x34bb0
0000000000034854	add	x20, x22, #0xb18
0000000000034858	ldr	x8, [x22, #0xb18]
000000000003485c	b	0x3486c
0000000000034860	clrex
0000000000034864	mov	w9, #0x0
0000000000034868	cbnz	w9, 0x34890
000000000003486c	cbz	x8, 0x348a0
0000000000034870	mov	x0, x8
0000000000034874	ldaxr	x8, [x20]
0000000000034878	cmp	x8, x0
000000000003487c	b.ne	0x34860
0000000000034880	stlxr	w9, xzr, [x20]
0000000000034884	cbnz	w9, 0x34864
0000000000034888	mov	w9, #0x1
000000000003488c	cbz	w9, 0x3486c
0000000000034890	ldr	x28, [x0]
0000000000034894	bl	__mi_free_delayed_block
0000000000034898	mov	x0, x28
000000000003489c	cbnz	x28, 0x34890
00000000000348a0	mov	x8, #0x0
00000000000348a4	add	x9, x25, #0x410
00000000000348a8	add	x10, x25, #0x3f8
00000000000348ac	add	x11, x25, #0x8
00000000000348b0	add	x12, x25, #0x18
00000000000348b4	b	0x348e4
00000000000348b8	mov	x13, #0x0
00000000000348bc	ldr	x14, [x25, #0xbc8]
00000000000348c0	add	x14, x14, x13
00000000000348c4	str	x14, [x25, #0xbc8]
00000000000348c8	ldr	x14, [x22, #0xbc8]
00000000000348cc	sub	x13, x14, x13
00000000000348d0	str	x13, [x22, #0xbc8]
00000000000348d4	add	x8, x8, #0x1
00000000000348d8	add	x10, x10, #0x18
00000000000348dc	cmp	x8, #0x4b
00000000000348e0	b.eq	0x34b34
00000000000348e4	add	x13, x8, x8, lsl #1
00000000000348e8	lsl	x14, x13, #3
00000000000348ec	add	x16, x22, x14
00000000000348f0	ldr	x15, [x16, #0x410]
00000000000348f4	cbz	x15, 0x348b8
00000000000348f8	mov	x13, #0x0
00000000000348fc	add	x14, x25, x14
0000000000034900	add	x14, x14, #0x410
0000000000034904	add	x16, x16, #0x410
0000000000034908	b	0x34918
000000000003490c	add	x13, x13, #0x1
0000000000034910	ldr	x15, [x15, #0x30]
0000000000034914	cbz	x15, 0x3496c
0000000000034918	add	x17, x15, #0x28
000000000003491c	stlr	x25, [x17]
0000000000034920	add	x17, x15, #0x20
0000000000034924	ldar	x0, [x17]
0000000000034928	and	w1, w0, #0x3
000000000003492c	cmp	w1, #0x0
0000000000034930	ccmp	w1, #0x3, #0x4, ne
0000000000034934	b.eq	0x3490c
0000000000034938	cmp	w1, #0x1
000000000003493c	b.eq	0x34964
0000000000034940	ldxr	x1, [x17]
0000000000034944	cmp	x1, x0
0000000000034948	b.ne	0x3495c
000000000003494c	and	x0, x0, #0xfffffffffffffffc
0000000000034950	stlxr	w1, x0, [x17]
0000000000034954	cbnz	w1, 0x34924
0000000000034958	b	0x3490c
000000000003495c	clrex
0000000000034960	b	0x34924
0000000000034964	wfe
0000000000034968	b	0x34924
000000000003496c	madd	x15, x8, x27, x25
0000000000034970	add	x17, x15, #0x418
0000000000034974	ldr	x0, [x15, #0x418]
0000000000034978	ldr	x15, [x16]
000000000003497c	cbz	x0, 0x34998
0000000000034980	str	x15, [x0, #0x30]
0000000000034984	str	x0, [x15, #0x38]
0000000000034988	madd	x14, x8, x27, x22
000000000003498c	ldr	x14, [x14, #0x418]
0000000000034990	str	x14, [x17]
0000000000034994	b	0x348bc
0000000000034998	str	x15, [x14]
000000000003499c	add	x14, x8, x8, lsl #1
00000000000349a0	lsl	x14, x14, #3
00000000000349a4	add	x16, x22, x14
00000000000349a8	ldr	x16, [x16, #0x418]
00000000000349ac	str	x16, [x17]
00000000000349b0	add	x14, x25, x14
00000000000349b4	ldr	x16, [x14, #0x420]
00000000000349b8	cmp	x16, #0x400
00000000000349bc	b.hi	0x348bc
00000000000349c0	cmp	x15, #0x0
00000000000349c4	adr	x14, #0x240bc
00000000000349c8	nop
00000000000349cc	csel	x14, x14, x15, eq
00000000000349d0	add	x15, x16, #0x7
00000000000349d4	lsr	x15, x15, #3
00000000000349d8	add	x17, x25, x15, lsl #3
00000000000349dc	ldr	x17, [x17, #0x8]
00000000000349e0	cmp	x17, x14
00000000000349e4	b.eq	0x348bc
00000000000349e8	cmp	x16, #0x9
00000000000349ec	b.hs	0x349f8
00000000000349f0	mov	x16, #0x0
00000000000349f4	b	0x34adc
00000000000349f8	sub	x17, x15, #0x1
00000000000349fc	clz	x0, x17
0000000000034a00	mov	w1, #0x3f
0000000000034a04	sub	w0, w1, w0
0000000000034a08	and	w0, w0, #0xff
0000000000034a0c	sub	w1, w0, #0x2
0000000000034a10	lsr	x17, x17, x1
0000000000034a14	and	w17, w17, #0x3
0000000000034a18	bfi	w17, w0, #2, #8
0000000000034a1c	sub	w17, w17, #0x3
0000000000034a20	add	w0, w15, #0x1
0000000000034a24	and	w0, w0, #0xfffffffe
0000000000034a28	cmp	x16, #0x40
0000000000034a2c	csel	w16, w17, w0, hi
0000000000034a30	mov	x17, x10
0000000000034a34	ldr	x0, [x17, #0x10]
0000000000034a38	add	x1, x0, #0x7
0000000000034a3c	lsr	x0, x1, #3
0000000000034a40	cmp	x1, #0x10
0000000000034a44	b.hs	0x34a58
0000000000034a48	mov	w1, #0x1
0000000000034a4c	cmp	x17, x9
0000000000034a50	b.hi	0x34abc
0000000000034a54	b	0x34acc
0000000000034a58	cmp	x1, #0x47
0000000000034a5c	b.hi	0x34a74
0000000000034a60	add	w1, w0, #0x1
0000000000034a64	and	w1, w1, #0xfffffffe
0000000000034a68	cmp	x17, x9
0000000000034a6c	b.hi	0x34abc
0000000000034a70	b	0x34acc
0000000000034a74	cmp	x1, x21
0000000000034a78	b.ls	0x34a8c
0000000000034a7c	mov	w1, #0x49
0000000000034a80	cmp	x17, x9
0000000000034a84	b.hi	0x34abc
0000000000034a88	b	0x34acc
0000000000034a8c	sub	x1, x0, #0x1
0000000000034a90	clz	x2, x1
0000000000034a94	mov	w3, #0x3f
0000000000034a98	sub	w2, w3, w2
0000000000034a9c	and	w2, w2, #0xff
0000000000034aa0	sub	w3, w2, #0x2
0000000000034aa4	lsr	x1, x1, x3
0000000000034aa8	and	w1, w1, #0x3
0000000000034aac	bfi	w1, w2, #2, #8
0000000000034ab0	sub	w1, w1, #0x3
0000000000034ab4	cmp	x17, x9
0000000000034ab8	b.ls	0x34acc
0000000000034abc	sub	x17, x17, #0x18
0000000000034ac0	and	w2, w16, #0xff
0000000000034ac4	cmp	w2, w1, uxtb
0000000000034ac8	b.eq	0x34a34
0000000000034acc	cmp	x0, x15
0000000000034ad0	csinc	x16, x15, x0, hs
0000000000034ad4	cmp	x16, x15
0000000000034ad8	b.hi	0x348bc
0000000000034adc	sub	x17, x15, x16
0000000000034ae0	add	x17, x17, #0x1
0000000000034ae4	cmp	x17, #0x4
0000000000034ae8	b.lo	0x34b18
0000000000034aec	and	x0, x17, #0xfffffffffffffffc
0000000000034af0	dup.2d	v0, x14
0000000000034af4	add	x1, x12, x16, lsl #3
0000000000034af8	mov	x2, x0
0000000000034afc	stp	q0, q0, [x1, #-0x10]
0000000000034b00	add	x1, x1, #0x20
0000000000034b04	subs	x2, x2, #0x4
0000000000034b08	b.ne	0x34afc
0000000000034b0c	cmp	x17, x0
0000000000034b10	b.eq	0x348bc
0000000000034b14	add	x16, x16, x0
0000000000034b18	sub	x15, x15, x16
0000000000034b1c	add	x15, x15, #0x1
0000000000034b20	add	x16, x11, x16, lsl #3
0000000000034b24	str	x14, [x16], #0x8
0000000000034b28	subs	x15, x15, #0x1
0000000000034b2c	b.ne	0x34b24
0000000000034b30	b	0x348bc
0000000000034b34	ldr	x8, [x20]
0000000000034b38	b	0x34b48
0000000000034b3c	clrex
0000000000034b40	mov	w9, #0x0
0000000000034b44	cbnz	w9, 0x34b6c
0000000000034b48	cbz	x8, 0x34b7c
0000000000034b4c	mov	x0, x8
0000000000034b50	ldaxr	x8, [x20]
0000000000034b54	cmp	x8, x0
0000000000034b58	b.ne	0x34b3c
0000000000034b5c	stlxr	w9, xzr, [x20]
0000000000034b60	cbnz	w9, 0x34b40
0000000000034b64	mov	w9, #0x1
0000000000034b68	cbz	w9, 0x34b48
0000000000034b6c	ldr	x20, [x0]
0000000000034b70	bl	__mi_free_delayed_block
0000000000034b74	mov	x0, x20
0000000000034b78	cbnz	x20, 0x34b6c
0000000000034b7c	add	x0, x22, #0x8
0000000000034b80	mov	w1, #0x408
0000000000034b84	bl	0x553c8 ; symbol stub for: _bzero
0000000000034b88	add	x0, x22, #0x410
0000000000034b8c	adr	x1, #0x3c4c4
0000000000034b90	nop
0000000000034b94	mov	w2, #0x708
0000000000034b98	bl	0x554ac ; symbol stub for: _memcpy
0000000000034b9c	add	x8, x22, #0xb18
0000000000034ba0	stlr	xzr, [x8]
0000000000034ba4	str	xzr, [x22, #0xbc8]
0000000000034ba8	adrp	x20, 70 ; 0x7a000
0000000000034bac	add	x20, x20, #0x2d8
0000000000034bb0	ldr	x8, [x22]
0000000000034bb4	ldr	x1, [x8, #0x10]
0000000000034bb8	cmp	x1, x22
0000000000034bbc	b.ne	0x34be0
0000000000034bc0	b	0x3481c
0000000000034bc4	mov	x0, x22
0000000000034bc8	mov	w1, #0x2
0000000000034bcc	bl	_mi_heap_collect_ex
0000000000034bd0	ldr	x8, [x22]
0000000000034bd4	ldr	x1, [x8, #0x10]
0000000000034bd8	cmp	x1, x22
0000000000034bdc	b.eq	0x3481c
0000000000034be0	mov	x0, x20
0000000000034be4	blr	x24
0000000000034be8	ldr	x9, [x0]
0000000000034bec	cmp	x9, x22
0000000000034bf0	b.ne	0x34c18
0000000000034bf4	mov	x0, x20
0000000000034bf8	blr	x24
0000000000034bfc	str	x1, [x0]
0000000000034c00	nop
0000000000034c04	ldr	x0, #0x45154
0000000000034c08	cmn	x0, #0x1
0000000000034c0c	b.eq	0x34c14
0000000000034c10	bl	0x556e0 ; symbol stub for: _pthread_setspecific
0000000000034c14	ldr	x8, [x22]
0000000000034c18	mov	x9, #0x0
0000000000034c1c	add	x8, x8, #0x18
0000000000034c20	mov	x11, x8
0000000000034c24	mov	x10, x9
0000000000034c28	ldr	x9, [x11]
0000000000034c2c	add	x11, x9, #0xbe0
0000000000034c30	cmp	x9, x22
0000000000034c34	ccmp	x9, #0x0, #0x4, ne
0000000000034c38	b.ne	0x34c24
0000000000034c3c	cmp	x9, x22
0000000000034c40	b.ne	0x34814
0000000000034c44	ldr	x9, [x22, #0xbe0]
0000000000034c48	add	x11, x10, #0xbe0
0000000000034c4c	cmp	x10, #0x0
0000000000034c50	csel	x8, x8, x11, eq
0000000000034c54	str	x9, [x8]
0000000000034c58	b	0x34814
0000000000034c5c	adr	x8, #0x43304
0000000000034c60	nop
0000000000034c64	cmp	x19, x8
0000000000034c68	b.eq	0x34cac
0000000000034c6c	mov	x0, x19
0000000000034c70	mov	w1, #0x2
0000000000034c74	bl	_mi_heap_collect_ex
0000000000034c78	ldr	x8, [x19]
0000000000034c7c	add	x0, x8, #0xb0
0000000000034c80	bl	_mi_stats_merge_from
0000000000034c84	mov	x0, x19
0000000000034c88	mov	w1, #0xee0
0000000000034c8c	mov	w2, #0x1
0000000000034c90	ldp	x29, x30, [sp, #0x50]
0000000000034c94	ldp	x20, x19, [sp, #0x40]
0000000000034c98	ldp	x22, x21, [sp, #0x30]
0000000000034c9c	ldp	x24, x23, [sp, #0x20]
0000000000034ca0	ldp	x26, x25, [sp, #0x10]
0000000000034ca4	ldp	x28, x27, [sp], #0x60
0000000000034ca8	b	__mi_os_free_ex
0000000000034cac	ldr	x8, [x19]
0000000000034cb0	add	x0, x8, #0xb0
0000000000034cb4	ldp	x29, x30, [sp, #0x50]
0000000000034cb8	ldp	x20, x19, [sp, #0x40]
0000000000034cbc	ldp	x22, x21, [sp, #0x30]
0000000000034cc0	ldp	x24, x23, [sp, #0x20]
0000000000034cc4	ldp	x26, x25, [sp, #0x10]
0000000000034cc8	ldp	x28, x27, [sp], #0x60
0000000000034ccc	b	_mi_stats_merge_from
__mi_verbose_message:
0000000000034cd0	stp	x28, x27, [sp, #-0x40]!
0000000000034cd4	stp	x22, x21, [sp, #0x10]
0000000000034cd8	stp	x20, x19, [sp, #0x20]
0000000000034cdc	stp	x29, x30, [sp, #0x30]
0000000000034ce0	add	x29, sp, #0x30
0000000000034ce4	sub	sp, sp, #0x210
0000000000034ce8	mov	x20, x0
0000000000034cec	mov	w0, #0x2
0000000000034cf0	bl	_mi_option_get
0000000000034cf4	cbz	x0, 0x34dd0
0000000000034cf8	add	x8, x29, #0x10
0000000000034cfc	str	x8, [sp, #0x8]
0000000000034d00	cbz	x20, 0x34dd0
0000000000034d04	adrp	x21, 96 ; 0x94000
0000000000034d08	ldrb	w8, [x21, #0x28c]
0000000000034d0c	adrp	x19, 70 ; 0x7a000
0000000000034d10	add	x19, x19, #0x2f0
0000000000034d14	cmp	w8, #0x1
0000000000034d18	b.ne	0x34d40
0000000000034d1c	ldr	x8, [x19]
0000000000034d20	mov	x0, x19
0000000000034d24	blr	x8
0000000000034d28	ldrb	w9, [x0]
0000000000034d2c	tbnz	w9, #0x0, 0x34dd0
0000000000034d30	mov	x0, x19
0000000000034d34	blr	x8
0000000000034d38	mov	w8, #0x1
0000000000034d3c	strb	w8, [x0]
0000000000034d40	add	x0, sp, #0x10
0000000000034d44	add	x3, x29, #0x10
0000000000034d48	mov	w1, #0x1ff
0000000000034d4c	mov	x2, x20
0000000000034d50	bl	0x557ac ; symbol stub for: _vsnprintf
0000000000034d54	ldrb	w8, [x21, #0x28c]
0000000000034d58	cmp	w8, #0x1
0000000000034d5c	b.ne	0x34d74
0000000000034d60	ldr	x8, [x19]
0000000000034d64	mov	x0, x19
0000000000034d68	blr	x8
0000000000034d6c	mov	w8, #0x1
0000000000034d70	strb	w8, [x0]
0000000000034d74	adr	x21, #0x5f518
0000000000034d78	nop
0000000000034d7c	add	x8, x21, #0xc4
0000000000034d80	ldar	x20, [x8]
0000000000034d84	ldur	x8, [x21, #0xcc]
0000000000034d88	adr	x9, #0x1748
0000000000034d8c	nop
0000000000034d90	cmp	x8, #0x0
0000000000034d94	csel	x22, x9, x8, eq
0000000000034d98	adr	x0, #0x296fc ; literal pool for: "mimalloc: "
0000000000034d9c	nop
0000000000034da0	mov	x1, x20
0000000000034da4	blr	x22
0000000000034da8	add	x0, sp, #0x10
0000000000034dac	mov	x1, x20
0000000000034db0	blr	x22
0000000000034db4	ldrb	w8, [x21]
0000000000034db8	cmp	w8, #0x1
0000000000034dbc	b.ne	0x34dd0
0000000000034dc0	ldr	x8, [x19]
0000000000034dc4	mov	x0, x19
0000000000034dc8	blr	x8
0000000000034dcc	strb	wzr, [x0]
0000000000034dd0	add	sp, sp, #0x210
0000000000034dd4	ldp	x29, x30, [sp, #0x30]
0000000000034dd8	ldp	x20, x19, [sp, #0x20]
0000000000034ddc	ldp	x22, x21, [sp, #0x10]
0000000000034de0	ldp	x28, x27, [sp], #0x40
0000000000034de4	ret
_mi_thread_init:
0000000000034de8	sub	sp, sp, #0x40
0000000000034dec	stp	x22, x21, [sp, #0x10]
0000000000034df0	stp	x20, x19, [sp, #0x20]
0000000000034df4	stp	x29, x30, [sp, #0x30]
0000000000034df8	add	x29, sp, #0x30
0000000000034dfc	bl	_mi_process_init
0000000000034e00	adrp	x19, 70 ; 0x7a000
0000000000034e04	add	x19, x19, #0x2d8
0000000000034e08	ldr	x21, [x19]
0000000000034e0c	mov	x0, x19
0000000000034e10	blr	x21
0000000000034e14	ldr	x8, [x0]
0000000000034e18	adr	x9, #0x3be28
0000000000034e1c	nop
0000000000034e20	cmp	x8, x9
0000000000034e24	b.ne	0x35060
0000000000034e28	adrp	x22, 68 ; 0x78000
0000000000034e2c	ldr	x20, [x22, #0xa80]
0000000000034e30	cbz	x20, 0x34e44
0000000000034e34	bl	0x556c8 ; symbol stub for: _pthread_self
0000000000034e38	bl	0x55680 ; symbol stub for: _pthread_mach_thread_np
0000000000034e3c	cmp	x20, w0, uxtw
0000000000034e40	b.ne	0x34f24
0000000000034e44	nop
0000000000034e48	ldr	x8, #0x43c40
0000000000034e4c	adr	x20, #0x43114
0000000000034e50	nop
0000000000034e54	cbnz	x8, 0x34efc
0000000000034e58	bl	0x556c8 ; symbol stub for: _pthread_self
0000000000034e5c	bl	0x55680 ; symbol stub for: _pthread_mach_thread_np
0000000000034e60	mov	w8, w0
0000000000034e64	str	x8, [x22, #0xa80]
0000000000034e68	bl	0x5547c ; symbol stub for: _mach_absolute_time
0000000000034e6c	adr	x8, #-0x1df8
0000000000034e70	nop
0000000000034e74	adr	x9, #-0x1ee0
0000000000034e78	nop
0000000000034e7c	eor	x8, x9, x8
0000000000034e80	eor	x8, x0, x8
0000000000034e84	eor	w9, w8, w8, lsr #17
0000000000034e88	and	x9, x9, #0xf
0000000000034e8c	add	x9, x9, #0x1
0000000000034e90	mov	w10, #0x11
0000000000034e94	mov	x11, #0xe5b9
0000000000034e98	movk	x11, #0x1ce4, lsl #16
0000000000034e9c	movk	x11, #0x476d, lsl #32
0000000000034ea0	movk	x11, #0xbf58, lsl #48
0000000000034ea4	mov	x12, #0x11eb
0000000000034ea8	movk	x12, #0x1331, lsl #16
0000000000034eac	movk	x12, #0x49bb, lsl #32
0000000000034eb0	movk	x12, #0x94d0, lsl #48
0000000000034eb4	cmp	x8, #0x0
0000000000034eb8	csel	x8, x10, x8, eq
0000000000034ebc	eor	x8, x8, x8, lsr #30
0000000000034ec0	mul	x8, x8, x11
0000000000034ec4	eor	x8, x8, x8, lsr #27
0000000000034ec8	mul	x8, x8, x12
0000000000034ecc	eor	x8, x8, x8, lsr #31
0000000000034ed0	subs	x9, x9, #0x1
0000000000034ed4	b.ne	0x34eb4
0000000000034ed8	str	x8, [x20, #0xb28]
0000000000034edc	add	x0, x20, #0xb40
0000000000034ee0	bl	__mi_random_init
0000000000034ee4	mov	x0, x20
0000000000034ee8	bl	__mi_heap_random_next
0000000000034eec	str	x0, [x20, #0xb30]
0000000000034ef0	mov	x0, x20
0000000000034ef4	bl	__mi_heap_random_next
0000000000034ef8	str	x0, [x20, #0xb38]
0000000000034efc	mov	x0, x19
0000000000034f00	blr	x21
0000000000034f04	str	x20, [x0]
0000000000034f08	nop
0000000000034f0c	ldr	x0, #0x44e4c
0000000000034f10	cmn	x0, #0x1
0000000000034f14	b.eq	0x34fe4
0000000000034f18	adr	x1, #0x43048
0000000000034f1c	nop
0000000000034f20	b	0x34fe0
0000000000034f24	mov	w0, #0xee0
0000000000034f28	bl	__mi_os_alloc
0000000000034f2c	mov	x20, x0
0000000000034f30	cbnz	x0, 0x34f44
0000000000034f34	mov	w0, #0xee0
0000000000034f38	bl	__mi_os_alloc
0000000000034f3c	mov	x20, x0
0000000000034f40	cbz	x0, 0x35074
0000000000034f44	add	x22, x20, #0xbf0
0000000000034f48	adr	x1, #0x3bcf8
0000000000034f4c	nop
0000000000034f50	mov	x0, x20
0000000000034f54	mov	w2, #0xbf0
0000000000034f58	bl	0x554ac ; symbol stub for: _memcpy
0000000000034f5c	bl	0x556c8 ; symbol stub for: _pthread_self
0000000000034f60	bl	0x55680 ; symbol stub for: _pthread_mach_thread_np
0000000000034f64	mov	w8, w0
0000000000034f68	str	x8, [x20, #0xb20]
0000000000034f6c	add	x0, x20, #0xb40
0000000000034f70	bl	__mi_random_init
0000000000034f74	mov	x0, x20
0000000000034f78	bl	__mi_heap_random_next
0000000000034f7c	orr	x8, x0, #0x1
0000000000034f80	str	x8, [x20, #0xb28]
0000000000034f84	mov	x0, x20
0000000000034f88	bl	__mi_heap_random_next
0000000000034f8c	str	x0, [x20, #0xb30]
0000000000034f90	mov	x0, x20
0000000000034f94	bl	__mi_heap_random_next
0000000000034f98	str	x0, [x20, #0xb38]
0000000000034f9c	str	x22, [x20]
0000000000034fa0	str	x20, [x20, #0xc00]
0000000000034fa4	str	x20, [x20, #0xc08]
0000000000034fa8	dup.2d	v0, x20
0000000000034fac	nop
0000000000034fb0	ldr	q1, 0x57bc0
0000000000034fb4	add.2d	v0, v0, v1
0000000000034fb8	str	q0, [x20, #0xc80]
0000000000034fbc	str	d0, [x20, #0xc98]
0000000000034fc0	mov	x0, x19
0000000000034fc4	blr	x21
0000000000034fc8	str	x20, [x0]
0000000000034fcc	nop
0000000000034fd0	ldr	x0, #0x44d88
0000000000034fd4	cmn	x0, #0x1
0000000000034fd8	b.eq	0x34fe4
0000000000034fdc	mov	x1, x20
0000000000034fe0	bl	0x556e0 ; symbol stub for: _pthread_setspecific
0000000000034fe4	adr	x10, #0x5f9b4
0000000000034fe8	nop
0000000000034fec	ldxr	x8, [x10]
0000000000034ff0	add	x9, x8, #0x1
0000000000034ff4	stxr	w11, x9, [x10]
0000000000034ff8	cbnz	w11, 0x34fec
0000000000034ffc	nop
0000000000035000	ldr	x12, #0x5f990
0000000000035004	adr	x10, #0x5f98c
0000000000035008	nop
000000000003500c	b	0x35020
0000000000035010	clrex
0000000000035014	mov	w13, #0x0
0000000000035018	mov	x12, x11
000000000003501c	cbnz	w13, 0x35048
0000000000035020	cmp	x12, x8
0000000000035024	b.gt	0x35048
0000000000035028	ldxr	x11, [x10]
000000000003502c	cmp	x11, x12
0000000000035030	b.ne	0x35010
0000000000035034	stlxr	w12, x9, [x10]
0000000000035038	cbnz	w12, 0x35014
000000000003503c	mov	w13, #0x1
0000000000035040	mov	x12, x11
0000000000035044	cbz	w13, 0x35020
0000000000035048	adr	x8, #0x5f938
000000000003504c	nop
0000000000035050	ldxr	x9, [x8]
0000000000035054	add	x9, x9, #0x1
0000000000035058	stxr	w10, x9, [x8]
000000000003505c	cbnz	w10, 0x35050
0000000000035060	ldp	x29, x30, [sp, #0x30]
0000000000035064	ldp	x20, x19, [sp, #0x20]
0000000000035068	ldp	x22, x21, [sp, #0x10]
000000000003506c	add	sp, sp, #0x40
0000000000035070	ret
0000000000035074	mov	w8, #0xee0
0000000000035078	str	x8, [sp]
000000000003507c	adr	x1, #0x293cb ; literal pool for: "unable to allocate thread local heap metadata (%zu bytes)\n"
0000000000035080	nop
0000000000035084	mov	w0, #0xc
0000000000035088	bl	__mi_error_message
000000000003508c	b	0x34fe4
_mi_option_get:
0000000000035090	sub	sp, sp, #0x130
0000000000035094	stp	x28, x27, [sp, #0xd0]
0000000000035098	stp	x26, x25, [sp, #0xe0]
000000000003509c	stp	x24, x23, [sp, #0xf0]
00000000000350a0	stp	x22, x21, [sp, #0x100]
00000000000350a4	stp	x20, x19, [sp, #0x110]
00000000000350a8	stp	x29, x30, [sp, #0x120]
00000000000350ac	add	x29, sp, #0x120
00000000000350b0	adr	x25, #0x44ca8
00000000000350b4	nop
00000000000350b8	mov	w8, #0x18
00000000000350bc	umaddl	x8, w0, w8, x25
00000000000350c0	add	x22, x8, #0x388
00000000000350c4	ldr	w9, [x8, #0x390]
00000000000350c8	cbz	w9, 0x350f0
00000000000350cc	ldr	x0, [x22]
00000000000350d0	ldp	x29, x30, [sp, #0x120]
00000000000350d4	ldp	x20, x19, [sp, #0x110]
00000000000350d8	ldp	x22, x21, [sp, #0x100]
00000000000350dc	ldp	x24, x23, [sp, #0xf0]
00000000000350e0	ldp	x26, x25, [sp, #0xe0]
00000000000350e4	ldp	x28, x27, [sp, #0xd0]
00000000000350e8	add	sp, sp, #0x130
00000000000350ec	ret
00000000000350f0	mov	w19, w0
00000000000350f4	add	x8, x8, #0x390
00000000000350f8	str	x8, [sp, #0x20]
00000000000350fc	strb	wzr, [sp, #0x87]
0000000000035100	adr	x1, #0x291c8 ; literal pool for: "mimalloc_"
0000000000035104	nop
0000000000035108	add	x0, sp, #0x87
000000000003510c	mov	w2, #0x40
0000000000035110	bl	0x55764 ; symbol stub for: _strncpy
0000000000035114	strb	wzr, [sp, #0xc7]
0000000000035118	mov	w8, #0x18
000000000003511c	str	x19, [sp, #0x18]
0000000000035120	madd	x19, x19, x8, x25
0000000000035124	ldr	x1, [x19, #0x398]
0000000000035128	add	x0, sp, #0x87
000000000003512c	mov	w2, #0x40
0000000000035130	mov	w3, #0x41
0000000000035134	bl	0x55380 ; symbol stub for: ___strncat_chk
0000000000035138	strb	wzr, [sp, #0xc7]
000000000003513c	add	x0, sp, #0x87
0000000000035140	bl	0x5574c ; symbol stub for: _strlen
0000000000035144	cbz	x0, 0x35214
0000000000035148	mov	x24, x0
000000000003514c	bl	0x55188 ; symbol stub for: __NSGetEnviron
0000000000035150	ldr	x8, [x0]
0000000000035154	str	x8, [sp, #0x30]
0000000000035158	cbz	x8, 0x35214
000000000003515c	mov	x28, #0x0
0000000000035160	add	x8, x19, #0x398
0000000000035164	str	x8, [sp, #0x10]
0000000000035168	add	x8, sp, #0x87
000000000003516c	add	x8, x8, #0x1
0000000000035170	str	x8, [sp, #0x28]
0000000000035174	b	0x35194
0000000000035178	add	x8, x26, x24
000000000003517c	ldrb	w9, [x8]
0000000000035180	cmp	w9, #0x3d
0000000000035184	b.eq	0x35230
0000000000035188	add	x28, x28, #0x1
000000000003518c	cmp	x28, #0x100
0000000000035190	b.eq	0x35214
0000000000035194	ldr	x8, [sp, #0x30]
0000000000035198	ldr	x26, [x8, x28, lsl #3]
000000000003519c	cbz	x26, 0x35214
00000000000351a0	ldrb	w8, [sp, #0x87]
00000000000351a4	cbz	w8, 0x351f8
00000000000351a8	ldr	x27, [sp, #0x28]
00000000000351ac	mov	x19, x24
00000000000351b0	mov	x23, x26
00000000000351b4	cbz	x19, 0x351f0
00000000000351b8	ldrb	w9, [x23]
00000000000351bc	cbz	w9, 0x351f0
00000000000351c0	sxtb	w20, w9
00000000000351c4	sxtb	w0, w8
00000000000351c8	bl	0x5538c ; symbol stub for: ___toupper
00000000000351cc	mov	x21, x0
00000000000351d0	mov	x0, x20
00000000000351d4	bl	0x5538c ; symbol stub for: ___toupper
00000000000351d8	cmp	w21, w0
00000000000351dc	b.ne	0x35200
00000000000351e0	add	x23, x23, #0x1
00000000000351e4	sub	x19, x19, #0x1
00000000000351e8	ldrb	w8, [x27], #0x1
00000000000351ec	cbnz	w8, 0x351b4
00000000000351f0	cbnz	x19, 0x35204
00000000000351f4	b	0x35178
00000000000351f8	mov	x23, x26
00000000000351fc	b	0x35204
0000000000035200	ldurb	w8, [x27, #-0x1]
0000000000035204	ldrb	w9, [x23]
0000000000035208	cmp	w9, w8, uxtb
000000000003520c	b.eq	0x35178
0000000000035210	b	0x35188
0000000000035214	adrp	x8, 95 ; 0x94000
0000000000035218	ldrb	w8, [x8, #0x28c]
000000000003521c	cmp	w8, #0x1
0000000000035220	b.ne	0x350cc
0000000000035224	ldr	x9, [sp, #0x20]
0000000000035228	str	w8, [x9]
000000000003522c	b	0x350cc
0000000000035230	add	x1, x8, #0x1
0000000000035234	strb	wzr, [sp, #0x46]
0000000000035238	mov	w19, #0x40
000000000003523c	add	x0, sp, #0x46
0000000000035240	mov	w2, #0x40
0000000000035244	bl	0x55764 ; symbol stub for: _strncpy
0000000000035248	strb	wzr, [sp, #0x86]
000000000003524c	add	x0, sp, #0x46
0000000000035250	bl	0x5574c ; symbol stub for: _strlen
0000000000035254	cmp	x0, #0x40
0000000000035258	csel	x19, x0, x19, lo
000000000003525c	cbz	x19, 0x35280
0000000000035260	add	x20, sp, #0x87
0000000000035264	add	x21, sp, #0x46
0000000000035268	mov	x23, x19
000000000003526c	ldrsb	w0, [x21], #0x1
0000000000035270	bl	0x5538c ; symbol stub for: ___toupper
0000000000035274	strb	w0, [x20], #0x1
0000000000035278	subs	x23, x23, #0x1
000000000003527c	b.ne	0x3526c
0000000000035280	add	x8, sp, #0x87
0000000000035284	strb	wzr, [x8, x19]
0000000000035288	ldrb	w8, [sp, #0x87]
000000000003528c	cbz	w8, 0x352a4
0000000000035290	adr	x0, #0x29042 ; literal pool for: "1;TRUE;YES;ON"
0000000000035294	nop
0000000000035298	add	x1, sp, #0x87
000000000003529c	bl	0x5577c ; symbol stub for: _strstr
00000000000352a0	cbz	x0, 0x352b4
00000000000352a4	mov	w8, #0x1
00000000000352a8	str	x8, [x22]
00000000000352ac	mov	w8, #0x2
00000000000352b0	b	0x35224
00000000000352b4	adr	x0, #0x2902c ; literal pool for: "0;FALSE;NO;OFF"
00000000000352b8	nop
00000000000352bc	add	x19, sp, #0x87
00000000000352c0	add	x1, sp, #0x87
00000000000352c4	bl	0x5577c ; symbol stub for: _strstr
00000000000352c8	cbz	x0, 0x352d8
00000000000352cc	str	xzr, [x22]
00000000000352d0	mov	w8, #0x2
00000000000352d4	b	0x35224
00000000000352d8	str	x19, [sp, #0x38]
00000000000352dc	add	x0, sp, #0x87
00000000000352e0	add	x1, sp, #0x38
00000000000352e4	mov	w2, #0xa
00000000000352e8	bl	0x55788 ; symbol stub for: _strtol
00000000000352ec	mov	w8, #0x18
00000000000352f0	ldr	x9, [sp, #0x18]
00000000000352f4	madd	x8, x9, x8, x25
00000000000352f8	ldr	w9, [x8, #0x394]
00000000000352fc	ldr	x8, [sp, #0x38]
0000000000035300	cmp	w9, #0x8
0000000000035304	b.ne	0x35358
0000000000035308	ldrb	w9, [x8]
000000000003530c	cmp	w9, #0x47
0000000000035310	b.eq	0x35330
0000000000035314	cmp	w9, #0x4d
0000000000035318	b.eq	0x35338
000000000003531c	cmp	w9, #0x4b
0000000000035320	b.eq	0x3533c
0000000000035324	add	x10, x0, #0x3ff
0000000000035328	lsr	x0, x10, #10
000000000003532c	b	0x35348
0000000000035330	lsl	x0, x0, #20
0000000000035334	b	0x3533c
0000000000035338	lsl	x0, x0, #10
000000000003533c	add	x8, x8, #0x1
0000000000035340	str	x8, [sp, #0x38]
0000000000035344	ldrb	w9, [x8]
0000000000035348	cmp	w9, #0x42
000000000003534c	b.ne	0x35358
0000000000035350	add	x8, x8, #0x1
0000000000035354	str	x8, [sp, #0x38]
0000000000035358	ldrb	w8, [x8]
000000000003535c	cbz	w8, 0x35384
0000000000035360	ldr	x8, [sp, #0x10]
0000000000035364	ldr	x8, [x8]
0000000000035368	add	x9, sp, #0x87
000000000003536c	stp	x8, x9, [sp]
0000000000035370	adr	x0, #0x28f7f ; literal pool for: "environment option mimalloc_%s has an invalid value: %s\n"
0000000000035374	nop
0000000000035378	bl	__mi_warning_message
000000000003537c	mov	w8, #0x1
0000000000035380	b	0x35224
0000000000035384	str	x0, [x22]
0000000000035388	mov	w8, #0x2
000000000003538c	b	0x35224
__mi_os_alloc_aligned:
0000000000035390	sub	sp, sp, #0x90
0000000000035394	stp	x28, x27, [sp, #0x30]
0000000000035398	stp	x26, x25, [sp, #0x40]
000000000003539c	stp	x24, x23, [sp, #0x50]
00000000000353a0	stp	x22, x21, [sp, #0x60]
00000000000353a4	stp	x20, x19, [sp, #0x70]
00000000000353a8	stp	x29, x30, [sp, #0x80]
00000000000353ac	add	x29, sp, #0x80
00000000000353b0	cbz	x0, 0x354b0
00000000000353b4	mov	x23, x2
00000000000353b8	mov	x19, x1
00000000000353bc	lsr	x8, x0, #19
00000000000353c0	adrp	x28, 68 ; 0x79000
00000000000353c4	cbnz	x8, 0x353d0
00000000000353c8	ldr	x8, [x28, #0xd60]
00000000000353cc	b	0x35404
00000000000353d0	cmp	x0, #0x200, lsl #12
00000000000353d4	b.hs	0x353e0
00000000000353d8	mov	w8, #0x10000
00000000000353dc	b	0x35404
00000000000353e0	cmp	x0, #0x800, lsl #12
00000000000353e4	b.hs	0x353f0
00000000000353e8	mov	w8, #0x40000
00000000000353ec	b	0x35404
00000000000353f0	lsr	x8, x0, #25
00000000000353f4	cmp	x8, #0x0
00000000000353f8	mov	w8, #0x400000
00000000000353fc	mov	w9, #0x100000
0000000000035400	csel	x8, x9, x8, eq
0000000000035404	mvn	x9, x8
0000000000035408	cmp	x9, x0
000000000003540c	b.ls	0x35438
0000000000035410	add	x9, x0, x8
0000000000035414	sub	x9, x9, #0x1
0000000000035418	sub	x10, x8, #0x1
000000000003541c	tst	x8, x10
0000000000035420	b.ne	0x35430
0000000000035424	neg	x8, x8
0000000000035428	and	x0, x9, x8
000000000003542c	b	0x35438
0000000000035430	udiv	x9, x9, x8
0000000000035434	mul	x0, x9, x8
0000000000035438	ldr	x8, [x28, #0xd60]
000000000003543c	fmov	d0, x8
0000000000035440	cnt.8b	v0, v0
0000000000035444	uaddlv.8b	h0, v0
0000000000035448	fmov	w9, s0
000000000003544c	mov	w10, #0x3fffff
0000000000035450	add	x10, x8, x10
0000000000035454	udiv	x11, x10, x8
0000000000035458	mul	x11, x11, x8
000000000003545c	neg	x12, x8
0000000000035460	and	x10, x10, x12
0000000000035464	cmp	x9, #0x1
0000000000035468	csel	x21, x11, x10, hi
000000000003546c	strb	wzr, [sp, #0x2f]
0000000000035470	cbz	x23, 0x35484
0000000000035474	ldrb	w10, [x23]
0000000000035478	strb	w10, [sp, #0x2f]
000000000003547c	strb	wzr, [x23]
0000000000035480	b	0x3548c
0000000000035484	mov	w10, #0x0
0000000000035488	add	x23, sp, #0x2f
000000000003548c	cmp	w10, #0x0
0000000000035490	cset	w10, ne
0000000000035494	fmov	d0, x21
0000000000035498	cnt.8b	v0, v0
000000000003549c	uaddlv.8b	h0, v0
00000000000354a0	fmov	w11, s0
00000000000354a4	cmp	x8, x21
00000000000354a8	ccmp	x11, #0x1, #0x2, ls
00000000000354ac	b.ls	0x354d8
00000000000354b0	mov	x20, #0x0
00000000000354b4	mov	x0, x20
00000000000354b8	ldp	x29, x30, [sp, #0x80]
00000000000354bc	ldp	x20, x19, [sp, #0x70]
00000000000354c0	ldp	x22, x21, [sp, #0x60]
00000000000354c4	ldp	x24, x23, [sp, #0x50]
00000000000354c8	ldp	x26, x25, [sp, #0x40]
00000000000354cc	ldp	x28, x27, [sp, #0x30]
00000000000354d0	add	sp, sp, #0x90
00000000000354d4	ret
00000000000354d8	sub	x11, x8, #0x1
00000000000354dc	add	x11, x11, x0
00000000000354e0	cmp	x9, #0x1
00000000000354e4	b.hi	0x354f8
00000000000354e8	neg	x8, x8
00000000000354ec	and	x22, x11, x8
00000000000354f0	cbnz	x22, 0x35504
00000000000354f4	b	0x354b0
00000000000354f8	udiv	x9, x11, x8
00000000000354fc	mul	x22, x9, x8
0000000000035500	cbz	x22, 0x354b0
0000000000035504	and	w26, w10, w19
0000000000035508	cmp	w19, #0x0
000000000003550c	mov	w8, #0x3
0000000000035510	csel	w24, w8, wzr, ne
0000000000035514	mov	w0, #0x11
0000000000035518	bl	_mi_option_get
000000000003551c	sub	w8, w0, #0x64
0000000000035520	lsl	w9, w0, #24
0000000000035524	cmp	w8, #0x9b
0000000000035528	mov	w8, #0x64000000
000000000003552c	csel	w25, w8, w9, hi
0000000000035530	adrp	x8, 95 ; 0x94000
0000000000035534	ldrb	w8, [x8, #0x290]
0000000000035538	cmp	w8, #0x1
000000000003553c	b.ne	0x355c4
0000000000035540	mov	w0, #0x6
0000000000035544	bl	_mi_option_get
0000000000035548	cbz	x0, 0x355c4
000000000003554c	orr	w8, w21, w22
0000000000035550	tst	x8, #0x1fffff
0000000000035554	b.ne	0x355c4
0000000000035558	eor	w8, w26, #0x1
000000000003555c	tbnz	w8, #0x0, 0x355c4
0000000000035560	adr	x27, #0x5ee08
0000000000035564	nop
0000000000035568	ldar	x8, [x27]
000000000003556c	cbz	x8, 0x3558c
0000000000035570	sub	x9, x8, #0x1
0000000000035574	ldaxr	x10, [x27]
0000000000035578	cmp	x10, x8
000000000003557c	b.ne	0x355c0
0000000000035580	stlxr	w10, x9, [x27]
0000000000035584	cbnz	w10, 0x35574
0000000000035588	b	0x355c4
000000000003558c	orr	w4, w25, #0x20000
0000000000035590	mov	w8, #0x1
0000000000035594	strb	w8, [x23]
0000000000035598	mov	x0, x22
000000000003559c	mov	x1, x21
00000000000355a0	mov	x2, x24
00000000000355a4	mov	w3, #0x1002
00000000000355a8	bl	_mi_unix_mmapx
00000000000355ac	mov	x20, x0
00000000000355b0	cbnz	x0, 0x355e8
00000000000355b4	mov	w8, #0xa
00000000000355b8	stlr	x8, [x27]
00000000000355bc	b	0x355c4
00000000000355c0	clrex
00000000000355c4	strb	wzr, [x23]
00000000000355c8	mov	x0, x22
00000000000355cc	mov	x1, x21
00000000000355d0	mov	x2, x24
00000000000355d4	mov	w3, #0x1042
00000000000355d8	mov	x4, x25
00000000000355dc	bl	_mi_unix_mmapx
00000000000355e0	mov	x20, x0
00000000000355e4	cbz	x0, 0x35670
00000000000355e8	adr	x27, #0x5f2f0
00000000000355ec	nop
00000000000355f0	ldxr	x8, [x27]
00000000000355f4	add	x8, x8, x22
00000000000355f8	stxr	w9, x8, [x27]
00000000000355fc	cbnz	w9, 0x355f0
0000000000035600	adrp	x25, 95 ; 0x94000
0000000000035604	ldr	x10, [x25, #0x8d0]
0000000000035608	adr	x26, #0x5f2c8
000000000003560c	nop
0000000000035610	b	0x35624
0000000000035614	clrex
0000000000035618	mov	w11, #0x0
000000000003561c	mov	x10, x9
0000000000035620	cbnz	w11, 0x3564c
0000000000035624	cmp	x10, x8
0000000000035628	b.ge	0x3564c
000000000003562c	ldxr	x9, [x26]
0000000000035630	cmp	x9, x10
0000000000035634	b.ne	0x35614
0000000000035638	stlxr	w10, x8, [x26]
000000000003563c	cbnz	w10, 0x35618
0000000000035640	mov	w11, #0x1
0000000000035644	mov	x10, x9
0000000000035648	cbz	w11, 0x35624
000000000003564c	cmp	x22, #0x1
0000000000035650	b.lt	0x35694
0000000000035654	adr	x8, #0x5f26c
0000000000035658	nop
000000000003565c	ldxr	x9, [x8]
0000000000035660	add	x9, x9, x22
0000000000035664	stxr	w10, x9, [x8]
0000000000035668	cbnz	w10, 0x3565c
000000000003566c	b	0x356b0
0000000000035670	bl	0x55374 ; symbol stub for: ___error
0000000000035674	ldr	w8, [x0]
0000000000035678	stp	xzr, xzr, [sp, #0x10]
000000000003567c	str	x26, [sp, #0x20]
0000000000035680	stp	x22, x8, [sp]
0000000000035684	adr	x0, #0x28b08 ; literal pool for: "unable to allocate OS memory (%zu bytes, error code: %i, address: %p, large only: %d, allow large: %d)\n"
0000000000035688	nop
000000000003568c	bl	__mi_warning_message
0000000000035690	b	0x354b4
0000000000035694	neg	x8, x22
0000000000035698	adr	x9, #0x5f230
000000000003569c	nop
00000000000356a0	ldxr	x10, [x9]
00000000000356a4	add	x10, x10, x8
00000000000356a8	stxr	w11, x10, [x9]
00000000000356ac	cbnz	w11, 0x356a0
00000000000356b0	cbz	w19, 0x35758
00000000000356b4	adr	x9, #0x5f244
00000000000356b8	nop
00000000000356bc	ldxr	x8, [x9]
00000000000356c0	add	x8, x8, x22
00000000000356c4	stxr	w10, x8, [x9]
00000000000356c8	cbnz	w10, 0x356bc
00000000000356cc	nop
00000000000356d0	ldr	x11, #0x5f220
00000000000356d4	adr	x9, #0x5f21c
00000000000356d8	nop
00000000000356dc	b	0x356f0
00000000000356e0	clrex
00000000000356e4	mov	w12, #0x0
00000000000356e8	mov	x11, x10
00000000000356ec	cbnz	w12, 0x35718
00000000000356f0	cmp	x11, x8
00000000000356f4	b.ge	0x35718
00000000000356f8	ldxr	x10, [x9]
00000000000356fc	cmp	x10, x11
0000000000035700	b.ne	0x356e0
0000000000035704	stlxr	w11, x8, [x9]
0000000000035708	cbnz	w11, 0x356e4
000000000003570c	mov	w12, #0x1
0000000000035710	mov	x11, x10
0000000000035714	cbz	w12, 0x356f0
0000000000035718	cmp	x22, #0x1
000000000003571c	b.lt	0x3573c
0000000000035720	adr	x8, #0x5f1c0
0000000000035724	nop
0000000000035728	ldxr	x9, [x8]
000000000003572c	add	x9, x9, x22
0000000000035730	stxr	w10, x9, [x8]
0000000000035734	cbnz	w10, 0x35728
0000000000035738	b	0x35758
000000000003573c	neg	x8, x22
0000000000035740	adr	x9, #0x5f1a8
0000000000035744	nop
0000000000035748	ldxr	x10, [x9]
000000000003574c	add	x10, x10, x8
0000000000035750	stxr	w11, x10, [x9]
0000000000035754	cbnz	w11, 0x35748
0000000000035758	udiv	x8, x20, x21
000000000003575c	msub	x8, x8, x21, x20
0000000000035760	cbz	x8, 0x354b4
0000000000035764	mov	x0, x20
0000000000035768	mov	x1, x22
000000000003576c	bl	0x554f4 ; symbol stub for: _munmap
0000000000035770	neg	x8, x22
0000000000035774	cbz	w19, 0x35818
0000000000035778	adr	x9, #0x5f180
000000000003577c	nop
0000000000035780	ldxr	x10, [x9]
0000000000035784	add	x11, x10, x8
0000000000035788	stxr	w12, x11, [x9]
000000000003578c	cbnz	w12, 0x35780
0000000000035790	sub	x9, x10, x22
0000000000035794	nop
0000000000035798	ldr	x12, #0x5f158
000000000003579c	adr	x10, #0x5f154
00000000000357a0	nop
00000000000357a4	b	0x357b8
00000000000357a8	clrex
00000000000357ac	mov	w13, #0x0
00000000000357b0	mov	x12, x11
00000000000357b4	cbnz	w13, 0x357e0
00000000000357b8	cmp	x12, x9
00000000000357bc	b.ge	0x357e0
00000000000357c0	ldxr	x11, [x10]
00000000000357c4	cmp	x11, x12
00000000000357c8	b.ne	0x357a8
00000000000357cc	stlxr	w12, x9, [x10]
00000000000357d0	cbnz	w12, 0x357ac
00000000000357d4	mov	w13, #0x1
00000000000357d8	mov	x12, x11
00000000000357dc	cbz	w13, 0x357b8
00000000000357e0	tbnz	x22, #0x3f, 0x35800
00000000000357e4	adr	x9, #0x5f104
00000000000357e8	nop
00000000000357ec	ldxr	x10, [x9]
00000000000357f0	add	x10, x10, x22
00000000000357f4	stxr	w11, x10, [x9]
00000000000357f8	cbnz	w11, 0x357ec
00000000000357fc	b	0x35818
0000000000035800	adr	x9, #0x5f0e0
0000000000035804	nop
0000000000035808	ldxr	x10, [x9]
000000000003580c	add	x10, x10, x8
0000000000035810	stxr	w11, x10, [x9]
0000000000035814	cbnz	w11, 0x35808
0000000000035818	ldxr	x9, [x27]
000000000003581c	add	x10, x9, x8
0000000000035820	stxr	w11, x10, [x27]
0000000000035824	cbnz	w11, 0x35818
0000000000035828	sub	x9, x9, x22
000000000003582c	ldr	x11, [x25, #0x8d0]
0000000000035830	b	0x35844
0000000000035834	clrex
0000000000035838	mov	w12, #0x0
000000000003583c	mov	x11, x10
0000000000035840	cbnz	w12, 0x3586c
0000000000035844	cmp	x11, x9
0000000000035848	b.ge	0x3586c
000000000003584c	ldxr	x10, [x26]
0000000000035850	cmp	x10, x11
0000000000035854	b.ne	0x35834
0000000000035858	stlxr	w11, x9, [x26]
000000000003585c	cbnz	w11, 0x35838
0000000000035860	mov	w12, #0x1
0000000000035864	mov	x11, x10
0000000000035868	cbz	w12, 0x35844
000000000003586c	tbnz	x22, #0x3f, 0x3588c
0000000000035870	adr	x8, #0x5f058
0000000000035874	nop
0000000000035878	ldxr	x9, [x8]
000000000003587c	add	x9, x9, x22
0000000000035880	stxr	w10, x9, [x8]
0000000000035884	cbnz	w10, 0x35878
0000000000035888	b	0x358a4
000000000003588c	adr	x9, #0x5f034
0000000000035890	nop
0000000000035894	ldxr	x10, [x9]
0000000000035898	add	x10, x10, x8
000000000003589c	stxr	w11, x10, [x9]
00000000000358a0	cbnz	w11, 0x35894
00000000000358a4	cmn	w0, #0x1
00000000000358a8	b.ne	0x358cc
00000000000358ac	bl	0x55374 ; symbol stub for: ___error
00000000000358b0	ldr	w0, [x0]
00000000000358b4	bl	0x55740 ; symbol stub for: _strerror
00000000000358b8	stp	x20, x22, [sp, #0x8]
00000000000358bc	str	x0, [sp]
00000000000358c0	adr	x0, #0x2888e ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
00000000000358c4	nop
00000000000358c8	bl	__mi_warning_message
00000000000358cc	mvn	x8, x21
00000000000358d0	cmp	x22, x8
00000000000358d4	b.hs	0x354b0
00000000000358d8	adds	x25, x22, x21
00000000000358dc	b.eq	0x354b0
00000000000358e0	mov	w0, #0x11
00000000000358e4	bl	_mi_option_get
00000000000358e8	sub	w8, w0, #0x64
00000000000358ec	lsl	w9, w0, #24
00000000000358f0	cmp	w8, #0x9b
00000000000358f4	mov	w8, #0x64000000
00000000000358f8	csel	w20, w8, w9, hi
00000000000358fc	adrp	x8, 95 ; 0x94000
0000000000035900	ldrb	w8, [x8, #0x290]
0000000000035904	cmp	w8, #0x1
0000000000035908	b.ne	0x35914
000000000003590c	mov	w0, #0x6
0000000000035910	bl	_mi_option_get
0000000000035914	strb	wzr, [x23]
0000000000035918	mov	x0, x25
000000000003591c	mov	x1, x21
0000000000035920	mov	x2, x24
0000000000035924	mov	w3, #0x1042
0000000000035928	mov	x4, x20
000000000003592c	bl	_mi_unix_mmapx
0000000000035930	cbz	x0, 0x359b0
0000000000035934	mov	x23, x0
0000000000035938	ldxr	x8, [x27]
000000000003593c	add	x8, x8, x25
0000000000035940	stxr	w9, x8, [x27]
0000000000035944	cbnz	w9, 0x35938
0000000000035948	nop
000000000003594c	ldr	x10, #0x5ef84
0000000000035950	b	0x35964
0000000000035954	clrex
0000000000035958	mov	w11, #0x0
000000000003595c	mov	x10, x9
0000000000035960	cbnz	w11, 0x3598c
0000000000035964	cmp	x10, x8
0000000000035968	b.ge	0x3598c
000000000003596c	ldxr	x9, [x26]
0000000000035970	cmp	x9, x10
0000000000035974	b.ne	0x35954
0000000000035978	stlxr	w10, x8, [x26]
000000000003597c	cbnz	w10, 0x35958
0000000000035980	mov	w11, #0x1
0000000000035984	mov	x10, x9
0000000000035988	cbz	w11, 0x35964
000000000003598c	cmp	x25, #0x1
0000000000035990	b.lt	0x359d8
0000000000035994	adr	x8, #0x5ef2c
0000000000035998	nop
000000000003599c	ldxr	x9, [x8]
00000000000359a0	add	x9, x9, x25
00000000000359a4	stxr	w10, x9, [x8]
00000000000359a8	cbnz	w10, 0x3599c
00000000000359ac	b	0x359f4
00000000000359b0	bl	0x55374 ; symbol stub for: ___error
00000000000359b4	ldr	w8, [x0]
00000000000359b8	stp	xzr, xzr, [sp, #0x10]
00000000000359bc	str	xzr, [sp, #0x20]
00000000000359c0	stp	x25, x8, [sp]
00000000000359c4	adr	x0, #0x287c8 ; literal pool for: "unable to allocate OS memory (%zu bytes, error code: %i, address: %p, large only: %d, allow large: %d)\n"
00000000000359c8	nop
00000000000359cc	bl	__mi_warning_message
00000000000359d0	mov	x20, #0x0
00000000000359d4	b	0x354b4
00000000000359d8	neg	x8, x25
00000000000359dc	adr	x9, #0x5eeec
00000000000359e0	nop
00000000000359e4	ldxr	x10, [x9]
00000000000359e8	add	x10, x10, x8
00000000000359ec	stxr	w11, x10, [x9]
00000000000359f0	cbnz	w11, 0x359e4
00000000000359f4	cbz	w19, 0x35a9c
00000000000359f8	adr	x9, #0x5ef00
00000000000359fc	nop
0000000000035a00	ldxr	x8, [x9]
0000000000035a04	add	x8, x8, x25
0000000000035a08	stxr	w10, x8, [x9]
0000000000035a0c	cbnz	w10, 0x35a00
0000000000035a10	nop
0000000000035a14	ldr	x11, #0x5eedc
0000000000035a18	adr	x9, #0x5eed8
0000000000035a1c	nop
0000000000035a20	b	0x35a34
0000000000035a24	clrex
0000000000035a28	mov	w12, #0x0
0000000000035a2c	mov	x11, x10
0000000000035a30	cbnz	w12, 0x35a5c
0000000000035a34	cmp	x11, x8
0000000000035a38	b.ge	0x35a5c
0000000000035a3c	ldxr	x10, [x9]
0000000000035a40	cmp	x10, x11
0000000000035a44	b.ne	0x35a24
0000000000035a48	stlxr	w11, x8, [x9]
0000000000035a4c	cbnz	w11, 0x35a28
0000000000035a50	mov	w12, #0x1
0000000000035a54	mov	x11, x10
0000000000035a58	cbz	w12, 0x35a34
0000000000035a5c	cmp	x25, #0x1
0000000000035a60	b.lt	0x35a80
0000000000035a64	adr	x8, #0x5ee7c
0000000000035a68	nop
0000000000035a6c	ldxr	x9, [x8]
0000000000035a70	add	x9, x9, x25
0000000000035a74	stxr	w10, x9, [x8]
0000000000035a78	cbnz	w10, 0x35a6c
0000000000035a7c	b	0x35a9c
0000000000035a80	neg	x8, x25
0000000000035a84	adr	x9, #0x5ee64
0000000000035a88	nop
0000000000035a8c	ldxr	x10, [x9]
0000000000035a90	add	x10, x10, x8
0000000000035a94	stxr	w11, x10, [x9]
0000000000035a98	cbnz	w11, 0x35a8c
0000000000035a9c	add	x8, x21, x23
0000000000035aa0	sub	x8, x8, #0x1
0000000000035aa4	neg	x9, x21
0000000000035aa8	and	x20, x8, x9
0000000000035aac	ldr	x8, [x28, #0xd60]
0000000000035ab0	add	x9, x22, x8
0000000000035ab4	sub	x9, x9, #0x1
0000000000035ab8	sub	x10, x8, #0x1
0000000000035abc	udiv	x11, x9, x8
0000000000035ac0	mul	x11, x11, x8
0000000000035ac4	neg	x12, x8
0000000000035ac8	and	x9, x9, x12
0000000000035acc	tst	x8, x10
0000000000035ad0	csel	x24, x11, x9, ne
0000000000035ad4	sub	x22, x20, x23
0000000000035ad8	sub	x8, x25, x22
0000000000035adc	sub	x21, x8, x24
0000000000035ae0	adrp	x25, 95 ; 0x94000
0000000000035ae4	cbz	x22, 0x35c50
0000000000035ae8	mov	x0, x23
0000000000035aec	mov	x1, x22
0000000000035af0	bl	0x554f4 ; symbol stub for: _munmap
0000000000035af4	neg	x8, x22
0000000000035af8	cbz	w19, 0x35b9c
0000000000035afc	adr	x9, #0x5edfc
0000000000035b00	nop
0000000000035b04	ldxr	x10, [x9]
0000000000035b08	add	x11, x10, x8
0000000000035b0c	stxr	w12, x11, [x9]
0000000000035b10	cbnz	w12, 0x35b04
0000000000035b14	sub	x9, x10, x22
0000000000035b18	nop
0000000000035b1c	ldr	x12, #0x5edd4
0000000000035b20	adr	x10, #0x5edd0
0000000000035b24	nop
0000000000035b28	b	0x35b3c
0000000000035b2c	clrex
0000000000035b30	mov	w13, #0x0
0000000000035b34	mov	x12, x11
0000000000035b38	cbnz	w13, 0x35b64
0000000000035b3c	cmp	x12, x9
0000000000035b40	b.ge	0x35b64
0000000000035b44	ldxr	x11, [x10]
0000000000035b48	cmp	x11, x12
0000000000035b4c	b.ne	0x35b2c
0000000000035b50	stlxr	w12, x9, [x10]
0000000000035b54	cbnz	w12, 0x35b30
0000000000035b58	mov	w13, #0x1
0000000000035b5c	mov	x12, x11
0000000000035b60	cbz	w13, 0x35b3c
0000000000035b64	tbnz	x22, #0x3f, 0x35b84
0000000000035b68	adr	x9, #0x5ed80
0000000000035b6c	nop
0000000000035b70	ldxr	x10, [x9]
0000000000035b74	add	x10, x10, x22
0000000000035b78	stxr	w11, x10, [x9]
0000000000035b7c	cbnz	w11, 0x35b70
0000000000035b80	b	0x35b9c
0000000000035b84	adr	x9, #0x5ed5c
0000000000035b88	nop
0000000000035b8c	ldxr	x10, [x9]
0000000000035b90	add	x10, x10, x8
0000000000035b94	stxr	w11, x10, [x9]
0000000000035b98	cbnz	w11, 0x35b8c
0000000000035b9c	ldxr	x9, [x27]
0000000000035ba0	add	x10, x9, x8
0000000000035ba4	stxr	w11, x10, [x27]
0000000000035ba8	cbnz	w11, 0x35b9c
0000000000035bac	sub	x9, x9, x22
0000000000035bb0	ldr	x11, [x25, #0x8d0]
0000000000035bb4	b	0x35bc8
0000000000035bb8	clrex
0000000000035bbc	mov	w12, #0x0
0000000000035bc0	mov	x11, x10
0000000000035bc4	cbnz	w12, 0x35bf0
0000000000035bc8	cmp	x11, x9
0000000000035bcc	b.ge	0x35bf0
0000000000035bd0	ldxr	x10, [x26]
0000000000035bd4	cmp	x10, x11
0000000000035bd8	b.ne	0x35bb8
0000000000035bdc	stlxr	w11, x9, [x26]
0000000000035be0	cbnz	w11, 0x35bbc
0000000000035be4	mov	w12, #0x1
0000000000035be8	mov	x11, x10
0000000000035bec	cbz	w12, 0x35bc8
0000000000035bf0	tbnz	x22, #0x3f, 0x35c10
0000000000035bf4	adr	x8, #0x5ecd4
0000000000035bf8	nop
0000000000035bfc	ldxr	x9, [x8]
0000000000035c00	add	x9, x9, x22
0000000000035c04	stxr	w10, x9, [x8]
0000000000035c08	cbnz	w10, 0x35bfc
0000000000035c0c	b	0x35c28
0000000000035c10	adr	x9, #0x5ecb0
0000000000035c14	nop
0000000000035c18	ldxr	x10, [x9]
0000000000035c1c	add	x10, x10, x8
0000000000035c20	stxr	w11, x10, [x9]
0000000000035c24	cbnz	w11, 0x35c18
0000000000035c28	cmn	w0, #0x1
0000000000035c2c	b.ne	0x35c50
0000000000035c30	bl	0x55374 ; symbol stub for: ___error
0000000000035c34	ldr	w0, [x0]
0000000000035c38	bl	0x55740 ; symbol stub for: _strerror
0000000000035c3c	stp	x23, x22, [sp, #0x8]
0000000000035c40	str	x0, [sp]
0000000000035c44	adr	x0, #0x2850a ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
0000000000035c48	nop
0000000000035c4c	bl	__mi_warning_message
0000000000035c50	cbz	x21, 0x354b4
0000000000035c54	cbz	x20, 0x354b4
0000000000035c58	add	x22, x20, x24
0000000000035c5c	mov	x0, x22
0000000000035c60	mov	x1, x21
0000000000035c64	bl	0x554f4 ; symbol stub for: _munmap
0000000000035c68	neg	x8, x21
0000000000035c6c	cbz	w19, 0x35d10
0000000000035c70	adr	x9, #0x5ec88
0000000000035c74	nop
0000000000035c78	ldxr	x10, [x9]
0000000000035c7c	add	x11, x10, x8
0000000000035c80	stxr	w12, x11, [x9]
0000000000035c84	cbnz	w12, 0x35c78
0000000000035c88	sub	x9, x10, x21
0000000000035c8c	nop
0000000000035c90	ldr	x12, #0x5ec60
0000000000035c94	adr	x10, #0x5ec5c
0000000000035c98	nop
0000000000035c9c	b	0x35cb0
0000000000035ca0	clrex
0000000000035ca4	mov	w13, #0x0
0000000000035ca8	mov	x12, x11
0000000000035cac	cbnz	w13, 0x35cd8
0000000000035cb0	cmp	x12, x9
0000000000035cb4	b.ge	0x35cd8
0000000000035cb8	ldxr	x11, [x10]
0000000000035cbc	cmp	x11, x12
0000000000035cc0	b.ne	0x35ca0
0000000000035cc4	stlxr	w12, x9, [x10]
0000000000035cc8	cbnz	w12, 0x35ca4
0000000000035ccc	mov	w13, #0x1
0000000000035cd0	mov	x12, x11
0000000000035cd4	cbz	w13, 0x35cb0
0000000000035cd8	tbnz	x21, #0x3f, 0x35cf8
0000000000035cdc	adr	x9, #0x5ec0c
0000000000035ce0	nop
0000000000035ce4	ldxr	x10, [x9]
0000000000035ce8	add	x10, x10, x21
0000000000035cec	stxr	w11, x10, [x9]
0000000000035cf0	cbnz	w11, 0x35ce4
0000000000035cf4	b	0x35d10
0000000000035cf8	adr	x9, #0x5ebe8
0000000000035cfc	nop
0000000000035d00	ldxr	x10, [x9]
0000000000035d04	add	x10, x10, x8
0000000000035d08	stxr	w11, x10, [x9]
0000000000035d0c	cbnz	w11, 0x35d00
0000000000035d10	ldxr	x9, [x27]
0000000000035d14	add	x10, x9, x8
0000000000035d18	stxr	w11, x10, [x27]
0000000000035d1c	cbnz	w11, 0x35d10
0000000000035d20	sub	x9, x9, x21
0000000000035d24	ldr	x11, [x25, #0x8d0]
0000000000035d28	b	0x35d3c
0000000000035d2c	clrex
0000000000035d30	mov	w12, #0x0
0000000000035d34	mov	x11, x10
0000000000035d38	cbnz	w12, 0x35d64
0000000000035d3c	cmp	x11, x9
0000000000035d40	b.ge	0x35d64
0000000000035d44	ldxr	x10, [x26]
0000000000035d48	cmp	x10, x11
0000000000035d4c	b.ne	0x35d2c
0000000000035d50	stlxr	w11, x9, [x26]
0000000000035d54	cbnz	w11, 0x35d30
0000000000035d58	mov	w12, #0x1
0000000000035d5c	mov	x11, x10
0000000000035d60	cbz	w12, 0x35d3c
0000000000035d64	tbnz	x21, #0x3f, 0x35d84
0000000000035d68	adr	x8, #0x5eb60
0000000000035d6c	nop
0000000000035d70	ldxr	x9, [x8]
0000000000035d74	add	x9, x9, x21
0000000000035d78	stxr	w10, x9, [x8]
0000000000035d7c	cbnz	w10, 0x35d70
0000000000035d80	b	0x35d9c
0000000000035d84	adr	x9, #0x5eb3c
0000000000035d88	nop
0000000000035d8c	ldxr	x10, [x9]
0000000000035d90	add	x10, x10, x8
0000000000035d94	stxr	w11, x10, [x9]
0000000000035d98	cbnz	w11, 0x35d8c
0000000000035d9c	cmn	w0, #0x1
0000000000035da0	b.ne	0x354b4
0000000000035da4	bl	0x55374 ; symbol stub for: ___error
0000000000035da8	ldr	w0, [x0]
0000000000035dac	bl	0x55740 ; symbol stub for: _strerror
0000000000035db0	stp	x22, x21, [sp, #0x8]
0000000000035db4	str	x0, [sp]
0000000000035db8	adr	x0, #0x28396 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
0000000000035dbc	nop
0000000000035dc0	b	0x3568c
__mi_os_alloc:
0000000000035dc4	sub	sp, sp, #0x50
0000000000035dc8	stp	x20, x19, [sp, #0x30]
0000000000035dcc	stp	x29, x30, [sp, #0x40]
0000000000035dd0	add	x29, sp, #0x40
0000000000035dd4	mov	x19, x0
0000000000035dd8	lsr	x8, x0, #19
0000000000035ddc	cbnz	x8, 0x35dec
0000000000035de0	nop
0000000000035de4	ldr	x8, #0x43f7c
0000000000035de8	b	0x35e1c
0000000000035dec	cmp	x19, #0x200, lsl #12
0000000000035df0	b.hs	0x35dfc
0000000000035df4	mov	w8, #0x10000
0000000000035df8	b	0x35e1c
0000000000035dfc	mov	w8, #0x40000
0000000000035e00	lsr	x9, x19, #25
0000000000035e04	cmp	x9, #0x0
0000000000035e08	mov	w9, #0x400000
0000000000035e0c	mov	w10, #0x100000
0000000000035e10	csel	x9, x10, x9, eq
0000000000035e14	cmp	x19, #0x800, lsl #12
0000000000035e18	csel	x8, x8, x9, lo
0000000000035e1c	mvn	x9, x8
0000000000035e20	cmp	x9, x19
0000000000035e24	b.ls	0x35e48
0000000000035e28	add	x9, x19, x8
0000000000035e2c	sub	x9, x9, #0x1
0000000000035e30	sub	x10, x8, #0x1
0000000000035e34	tst	x8, x10
0000000000035e38	b.ne	0x35f30
0000000000035e3c	neg	x8, x8
0000000000035e40	and	x19, x9, x8
0000000000035e44	cbz	x19, 0x35f3c
0000000000035e48	mov	w0, #0x11
0000000000035e4c	bl	_mi_option_get
0000000000035e50	sub	w8, w0, #0x64
0000000000035e54	lsl	w9, w0, #24
0000000000035e58	cmp	w8, #0x9b
0000000000035e5c	mov	w8, #0x64000000
0000000000035e60	csel	w20, w8, w9, hi
0000000000035e64	adrp	x8, 95 ; 0x94000
0000000000035e68	ldrb	w8, [x8, #0x290]
0000000000035e6c	cmp	w8, #0x1
0000000000035e70	b.ne	0x35e7c
0000000000035e74	mov	w0, #0x6
0000000000035e78	bl	_mi_option_get
0000000000035e7c	mov	x0, #0x0
0000000000035e80	mov	x1, x19
0000000000035e84	mov	w2, #0x3
0000000000035e88	mov	w3, #0x1042
0000000000035e8c	mov	x4, x20
0000000000035e90	mov	x5, #0x0
0000000000035e94	bl	0x554dc ; symbol stub for: _mmap
0000000000035e98	cmn	x0, #0x1
0000000000035e9c	csel	x0, xzr, x0, eq
0000000000035ea0	cbz	x0, 0x35f50
0000000000035ea4	cbz	x19, 0x35f40
0000000000035ea8	adr	x9, #0x5ea30
0000000000035eac	nop
0000000000035eb0	ldxr	x8, [x9]
0000000000035eb4	add	x8, x8, x19
0000000000035eb8	stxr	w10, x8, [x9]
0000000000035ebc	cbnz	w10, 0x35eb0
0000000000035ec0	nop
0000000000035ec4	ldr	x11, #0x5ea0c
0000000000035ec8	adr	x9, #0x5ea08
0000000000035ecc	nop
0000000000035ed0	b	0x35ee4
0000000000035ed4	clrex
0000000000035ed8	mov	w12, #0x0
0000000000035edc	mov	x11, x10
0000000000035ee0	cbnz	w12, 0x35f0c
0000000000035ee4	cmp	x11, x8
0000000000035ee8	b.ge	0x35f0c
0000000000035eec	ldxr	x10, [x9]
0000000000035ef0	cmp	x10, x11
0000000000035ef4	b.ne	0x35ed4
0000000000035ef8	stlxr	w11, x8, [x9]
0000000000035efc	cbnz	w11, 0x35ed8
0000000000035f00	mov	w12, #0x1
0000000000035f04	mov	x11, x10
0000000000035f08	cbz	w12, 0x35ee4
0000000000035f0c	cmp	x19, #0x1
0000000000035f10	b.lt	0x35f84
0000000000035f14	adr	x8, #0x5e9ac
0000000000035f18	nop
0000000000035f1c	ldxr	x9, [x8]
0000000000035f20	add	x9, x9, x19
0000000000035f24	stxr	w10, x9, [x8]
0000000000035f28	cbnz	w10, 0x35f1c
0000000000035f2c	b	0x35fa0
0000000000035f30	udiv	x9, x9, x8
0000000000035f34	mul	x19, x9, x8
0000000000035f38	cbnz	x19, 0x35e48
0000000000035f3c	mov	x0, #0x0
0000000000035f40	ldp	x29, x30, [sp, #0x40]
0000000000035f44	ldp	x20, x19, [sp, #0x30]
0000000000035f48	add	sp, sp, #0x50
0000000000035f4c	ret
0000000000035f50	bl	0x55374 ; symbol stub for: ___error
0000000000035f54	ldr	w8, [x0]
0000000000035f58	stp	xzr, xzr, [sp, #0x10]
0000000000035f5c	str	xzr, [sp, #0x20]
0000000000035f60	stp	x19, x8, [sp]
0000000000035f64	adr	x0, #0x28228 ; literal pool for: "unable to allocate OS memory (%zu bytes, error code: %i, address: %p, large only: %d, allow large: %d)\n"
0000000000035f68	nop
0000000000035f6c	bl	__mi_warning_message
0000000000035f70	mov	x0, #0x0
0000000000035f74	ldp	x29, x30, [sp, #0x40]
0000000000035f78	ldp	x20, x19, [sp, #0x30]
0000000000035f7c	add	sp, sp, #0x50
0000000000035f80	ret
0000000000035f84	neg	x8, x19
0000000000035f88	adr	x9, #0x5e940
0000000000035f8c	nop
0000000000035f90	ldxr	x10, [x9]
0000000000035f94	add	x10, x10, x8
0000000000035f98	stxr	w11, x10, [x9]
0000000000035f9c	cbnz	w11, 0x35f90
0000000000035fa0	adr	x9, #0x5e958
0000000000035fa4	nop
0000000000035fa8	ldxr	x8, [x9]
0000000000035fac	add	x8, x8, x19
0000000000035fb0	stxr	w10, x8, [x9]
0000000000035fb4	cbnz	w10, 0x35fa8
0000000000035fb8	nop
0000000000035fbc	ldr	x11, #0x5e934
0000000000035fc0	adr	x9, #0x5e930
0000000000035fc4	nop
0000000000035fc8	b	0x35fdc
0000000000035fcc	clrex
0000000000035fd0	mov	w12, #0x0
0000000000035fd4	mov	x11, x10
0000000000035fd8	cbnz	w12, 0x36004
0000000000035fdc	cmp	x11, x8
0000000000035fe0	b.ge	0x36004
0000000000035fe4	ldxr	x10, [x9]
0000000000035fe8	cmp	x10, x11
0000000000035fec	b.ne	0x35fcc
0000000000035ff0	stlxr	w11, x8, [x9]
0000000000035ff4	cbnz	w11, 0x35fd0
0000000000035ff8	mov	w12, #0x1
0000000000035ffc	mov	x11, x10
0000000000036000	cbz	w12, 0x35fdc
0000000000036004	cmp	x19, #0x1
0000000000036008	b.lt	0x36028
000000000003600c	adr	x8, #0x5e8d4
0000000000036010	nop
0000000000036014	ldxr	x9, [x8]
0000000000036018	add	x9, x9, x19
000000000003601c	stxr	w10, x9, [x8]
0000000000036020	cbnz	w10, 0x36014
0000000000036024	b	0x35f40
0000000000036028	neg	x8, x19
000000000003602c	adr	x9, #0x5e8bc
0000000000036030	nop
0000000000036034	ldxr	x10, [x9]
0000000000036038	add	x10, x10, x8
000000000003603c	stxr	w11, x10, [x9]
0000000000036040	cbnz	w11, 0x36034
0000000000036044	b	0x35f40
__mi_os_free_ex:
0000000000036048	sub	sp, sp, #0x50
000000000003604c	stp	x22, x21, [sp, #0x20]
0000000000036050	stp	x20, x19, [sp, #0x30]
0000000000036054	stp	x29, x30, [sp, #0x40]
0000000000036058	add	x29, sp, #0x40
000000000003605c	cbz	x0, 0x360e0
0000000000036060	mov	x20, x1
0000000000036064	cbz	x1, 0x360e0
0000000000036068	mov	x21, x2
000000000003606c	mov	x19, x0
0000000000036070	lsr	x8, x20, #19
0000000000036074	cbnz	x8, 0x36084
0000000000036078	nop
000000000003607c	ldr	x8, #0x43ce4
0000000000036080	b	0x360b4
0000000000036084	cmp	x20, #0x200, lsl #12
0000000000036088	b.hs	0x36094
000000000003608c	mov	w8, #0x10000
0000000000036090	b	0x360b4
0000000000036094	mov	w8, #0x40000
0000000000036098	lsr	x9, x20, #25
000000000003609c	cmp	x9, #0x0
00000000000360a0	mov	w9, #0x400000
00000000000360a4	mov	w10, #0x100000
00000000000360a8	csel	x9, x10, x9, eq
00000000000360ac	cmp	x20, #0x800, lsl #12
00000000000360b0	csel	x8, x8, x9, lo
00000000000360b4	mvn	x9, x8
00000000000360b8	cmp	x9, x20
00000000000360bc	b.ls	0x36100
00000000000360c0	add	x9, x20, x8
00000000000360c4	sub	x9, x9, #0x1
00000000000360c8	sub	x10, x8, #0x1
00000000000360cc	tst	x8, x10
00000000000360d0	b.ne	0x360f4
00000000000360d4	neg	x8, x8
00000000000360d8	and	x20, x9, x8
00000000000360dc	cbnz	x20, 0x36100
00000000000360e0	ldp	x29, x30, [sp, #0x40]
00000000000360e4	ldp	x20, x19, [sp, #0x30]
00000000000360e8	ldp	x22, x21, [sp, #0x20]
00000000000360ec	add	sp, sp, #0x50
00000000000360f0	ret
00000000000360f4	udiv	x9, x9, x8
00000000000360f8	mul	x20, x9, x8
00000000000360fc	cbz	x20, 0x360e0
0000000000036100	mov	x0, x19
0000000000036104	mov	x1, x20
0000000000036108	bl	0x554f4 ; symbol stub for: _munmap
000000000003610c	neg	x8, x20
0000000000036110	cbz	w21, 0x361b8
0000000000036114	adr	x9, #0x5e7e4
0000000000036118	nop
000000000003611c	ldxr	x10, [x9]
0000000000036120	add	x11, x10, x8
0000000000036124	stxr	w12, x11, [x9]
0000000000036128	cbnz	w12, 0x3611c
000000000003612c	sub	x9, x10, x20
0000000000036130	nop
0000000000036134	ldr	x12, #0x5e7bc
0000000000036138	adr	x10, #0x5e7b8
000000000003613c	nop
0000000000036140	b	0x36154
0000000000036144	clrex
0000000000036148	mov	w13, #0x0
000000000003614c	mov	x12, x11
0000000000036150	cbnz	w13, 0x3617c
0000000000036154	cmp	x12, x9
0000000000036158	b.ge	0x3617c
000000000003615c	ldxr	x11, [x10]
0000000000036160	cmp	x11, x12
0000000000036164	b.ne	0x36144
0000000000036168	stlxr	w12, x9, [x10]
000000000003616c	cbnz	w12, 0x36148
0000000000036170	mov	w13, #0x1
0000000000036174	mov	x12, x11
0000000000036178	cbz	w13, 0x36154
000000000003617c	tbnz	x20, #0x3f, 0x361a0
0000000000036180	adr	x9, #0x5e768
0000000000036184	nop
0000000000036188	ldxr	x10, [x9]
000000000003618c	add	x10, x10, x20
0000000000036190	stxr	w11, x10, [x9]
0000000000036194	cbnz	w11, 0x36188
0000000000036198	cbnz	x20, 0x361b8
000000000003619c	b	0x36258
00000000000361a0	adr	x9, #0x5e740
00000000000361a4	nop
00000000000361a8	ldxr	x10, [x9]
00000000000361ac	add	x10, x10, x8
00000000000361b0	stxr	w11, x10, [x9]
00000000000361b4	cbnz	w11, 0x361a8
00000000000361b8	adr	x9, #0x5e720
00000000000361bc	nop
00000000000361c0	ldxr	x10, [x9]
00000000000361c4	add	x11, x10, x8
00000000000361c8	stxr	w12, x11, [x9]
00000000000361cc	cbnz	w12, 0x361c0
00000000000361d0	sub	x9, x10, x20
00000000000361d4	nop
00000000000361d8	ldr	x12, #0x5e6f8
00000000000361dc	adr	x10, #0x5e6f4
00000000000361e0	nop
00000000000361e4	b	0x361f8
00000000000361e8	clrex
00000000000361ec	mov	w13, #0x0
00000000000361f0	mov	x12, x11
00000000000361f4	cbnz	w13, 0x36220
00000000000361f8	cmp	x12, x9
00000000000361fc	b.ge	0x36220
0000000000036200	ldxr	x11, [x10]
0000000000036204	cmp	x11, x12
0000000000036208	b.ne	0x361e8
000000000003620c	stlxr	w12, x9, [x10]
0000000000036210	cbnz	w12, 0x361ec
0000000000036214	mov	w13, #0x1
0000000000036218	mov	x12, x11
000000000003621c	cbz	w13, 0x361f8
0000000000036220	tbnz	x20, #0x3f, 0x36240
0000000000036224	adr	x8, #0x5e6a4
0000000000036228	nop
000000000003622c	ldxr	x9, [x8]
0000000000036230	add	x9, x9, x20
0000000000036234	stxr	w10, x9, [x8]
0000000000036238	cbnz	w10, 0x3622c
000000000003623c	b	0x36258
0000000000036240	adr	x9, #0x5e680
0000000000036244	nop
0000000000036248	ldxr	x10, [x9]
000000000003624c	add	x10, x10, x8
0000000000036250	stxr	w11, x10, [x9]
0000000000036254	cbnz	w11, 0x36248
0000000000036258	cmn	w0, #0x1
000000000003625c	b.ne	0x360e0
0000000000036260	bl	0x55374 ; symbol stub for: ___error
0000000000036264	ldr	w0, [x0]
0000000000036268	bl	0x55740 ; symbol stub for: _strerror
000000000003626c	stp	x19, x20, [sp, #0x8]
0000000000036270	str	x0, [sp]
0000000000036274	adr	x0, #0x27eda ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
0000000000036278	nop
000000000003627c	bl	__mi_warning_message
0000000000036280	ldp	x29, x30, [sp, #0x40]
0000000000036284	ldp	x20, x19, [sp, #0x30]
0000000000036288	ldp	x22, x21, [sp, #0x20]
000000000003628c	add	sp, sp, #0x50
0000000000036290	ret
__mi_stat_decrease:
0000000000036294	cbz	x1, 0x36330
0000000000036298	adr	x8, #0x5e5e8
000000000003629c	nop
00000000000362a0	cmp	x0, x8
00000000000362a4	b.lo	0x36348
00000000000362a8	adr	x8, #0x5e818
00000000000362ac	nop
00000000000362b0	cmp	x0, x8
00000000000362b4	b.hs	0x36348
00000000000362b8	neg	x8, x1
00000000000362bc	add	x9, x0, #0x18
00000000000362c0	ldxr	x10, [x9]
00000000000362c4	add	x11, x10, x8
00000000000362c8	stxr	w12, x11, [x9]
00000000000362cc	cbnz	w12, 0x362c0
00000000000362d0	add	x9, x0, #0x10
00000000000362d4	sub	x10, x10, x1
00000000000362d8	ldr	x12, [x0, #0x10]
00000000000362dc	b	0x362f0
00000000000362e0	clrex
00000000000362e4	mov	w13, #0x0
00000000000362e8	mov	x12, x11
00000000000362ec	cbnz	w13, 0x36318
00000000000362f0	cmp	x12, x10
00000000000362f4	b.ge	0x36318
00000000000362f8	ldxr	x11, [x9]
00000000000362fc	cmp	x11, x12
0000000000036300	b.ne	0x362e0
0000000000036304	stlxr	w12, x10, [x9]
0000000000036308	cbnz	w12, 0x362e4
000000000003630c	mov	w13, #0x1
0000000000036310	mov	x12, x11
0000000000036314	cbz	w13, 0x362f0
0000000000036318	tbnz	x1, #0x3f, 0x36334
000000000003631c	add	x8, x0, #0x8
0000000000036320	ldxr	x9, [x8]
0000000000036324	add	x9, x9, x1
0000000000036328	stxr	w10, x9, [x8]
000000000003632c	cbnz	w10, 0x36320
0000000000036330	ret
0000000000036334	ldxr	x9, [x0]
0000000000036338	add	x9, x9, x8
000000000003633c	stxr	w10, x9, [x0]
0000000000036340	cbnz	w10, 0x36334
0000000000036344	b	0x36330
0000000000036348	ldp	x9, x8, [x0, #0x10]
000000000003634c	sub	x8, x8, x1
0000000000036350	str	x8, [x0, #0x18]
0000000000036354	cmp	x8, x9
0000000000036358	b.le	0x36360
000000000003635c	str	x8, [x0, #0x10]
0000000000036360	tbnz	x1, #0x3f, 0x36374
0000000000036364	ldr	x8, [x0, #0x8]
0000000000036368	add	x8, x8, x1
000000000003636c	str	x8, [x0, #0x8]
0000000000036370	ret
0000000000036374	ldr	x8, [x0]
0000000000036378	sub	x8, x8, x1
000000000003637c	str	x8, [x0]
0000000000036380	ret
__mi_warning_message:
0000000000036384	stp	x28, x27, [sp, #-0x40]!
0000000000036388	stp	x22, x21, [sp, #0x10]
000000000003638c	stp	x20, x19, [sp, #0x20]
0000000000036390	stp	x29, x30, [sp, #0x30]
0000000000036394	add	x29, sp, #0x30
0000000000036398	sub	sp, sp, #0x210
000000000003639c	mov	x19, x0
00000000000363a0	mov	w0, #0x0
00000000000363a4	bl	_mi_option_get
00000000000363a8	cbnz	x0, 0x363b8
00000000000363ac	mov	w0, #0x2
00000000000363b0	bl	_mi_option_get
00000000000363b4	cbz	x0, 0x364b8
00000000000363b8	adr	x9, #0x5df90
00000000000363bc	nop
00000000000363c0	ldaxr	x8, [x9]
00000000000363c4	add	x10, x8, #0x1
00000000000363c8	stlxr	w11, x10, [x9]
00000000000363cc	cbnz	w11, 0x363c0
00000000000363d0	nop
00000000000363d4	ldr	x9, #0x43994
00000000000363d8	cmp	x8, x9
00000000000363dc	b.hi	0x364b8
00000000000363e0	add	x8, x29, #0x10
00000000000363e4	str	x8, [sp, #0x8]
00000000000363e8	cbz	x19, 0x364b8
00000000000363ec	adrp	x21, 94 ; 0x94000
00000000000363f0	ldrb	w8, [x21, #0x28c]
00000000000363f4	adrp	x20, 68 ; 0x7a000
00000000000363f8	add	x20, x20, #0x2f0
00000000000363fc	cmp	w8, #0x1
0000000000036400	b.ne	0x36428
0000000000036404	ldr	x8, [x20]
0000000000036408	mov	x0, x20
000000000003640c	blr	x8
0000000000036410	ldrb	w9, [x0]
0000000000036414	tbnz	w9, #0x0, 0x364b8
0000000000036418	mov	x0, x20
000000000003641c	blr	x8
0000000000036420	mov	w8, #0x1
0000000000036424	strb	w8, [x0]
0000000000036428	add	x0, sp, #0x10
000000000003642c	add	x3, x29, #0x10
0000000000036430	mov	w1, #0x1ff
0000000000036434	mov	x2, x19
0000000000036438	bl	0x557ac ; symbol stub for: _vsnprintf
000000000003643c	ldrb	w8, [x21, #0x28c]
0000000000036440	cmp	w8, #0x1
0000000000036444	b.ne	0x3645c
0000000000036448	ldr	x8, [x20]
000000000003644c	mov	x0, x20
0000000000036450	blr	x8
0000000000036454	mov	w8, #0x1
0000000000036458	strb	w8, [x0]
000000000003645c	adr	x21, #0x5de30
0000000000036460	nop
0000000000036464	add	x8, x21, #0xc4
0000000000036468	ldar	x19, [x8]
000000000003646c	ldur	x8, [x21, #0xcc]
0000000000036470	adr	x9, #0x60
0000000000036474	nop
0000000000036478	cmp	x8, #0x0
000000000003647c	csel	x22, x9, x8, eq
0000000000036480	adr	x0, #0x27cf8 ; literal pool for: "mimalloc: warning: "
0000000000036484	nop
0000000000036488	mov	x1, x19
000000000003648c	blr	x22
0000000000036490	add	x0, sp, #0x10
0000000000036494	mov	x1, x19
0000000000036498	blr	x22
000000000003649c	ldrb	w8, [x21]
00000000000364a0	cmp	w8, #0x1
00000000000364a4	b.ne	0x364b8
00000000000364a8	ldr	x8, [x20]
00000000000364ac	mov	x0, x20
00000000000364b0	blr	x8
00000000000364b4	strb	wzr, [x0]
00000000000364b8	add	sp, sp, #0x210
00000000000364bc	ldp	x29, x30, [sp, #0x30]
00000000000364c0	ldp	x20, x19, [sp, #0x20]
00000000000364c4	ldp	x22, x21, [sp, #0x10]
00000000000364c8	ldp	x28, x27, [sp], #0x40
00000000000364cc	ret
_mi_out_buf:
00000000000364d0	stp	x20, x19, [sp, #-0x20]!
00000000000364d4	stp	x29, x30, [sp, #0x10]
00000000000364d8	add	x29, sp, #0x10
00000000000364dc	cbz	x0, 0x3651c
00000000000364e0	nop
00000000000364e4	ldr	x8, #0x5de7c
00000000000364e8	lsr	x8, x8, #15
00000000000364ec	cbnz	x8, 0x3651c
00000000000364f0	mov	x19, x0
00000000000364f4	bl	0x5574c ; symbol stub for: _strlen
00000000000364f8	cbz	x0, 0x3651c
00000000000364fc	adr	x9, #0x5de64
0000000000036500	nop
0000000000036504	ldaxr	x8, [x9]
0000000000036508	add	x10, x8, x0
000000000003650c	stlxr	w11, x10, [x9]
0000000000036510	cbnz	w11, 0x36504
0000000000036514	lsr	x9, x8, #15
0000000000036518	cbz	x9, 0x36528
000000000003651c	ldp	x29, x30, [sp, #0x10]
0000000000036520	ldp	x20, x19, [sp], #0x20
0000000000036524	ret
0000000000036528	add	x9, x8, x0
000000000003652c	mov	w10, #0x7fff
0000000000036530	sub	x10, x10, x8
0000000000036534	lsr	x9, x9, #15
0000000000036538	cmp	x9, #0x0
000000000003653c	csel	x2, x10, x0, ne
0000000000036540	adr	x9, #0x45cc8
0000000000036544	nop
0000000000036548	add	x0, x9, x8
000000000003654c	mov	x1, x19
0000000000036550	ldp	x29, x30, [sp, #0x10]
0000000000036554	ldp	x20, x19, [sp], #0x20
0000000000036558	b	0x554ac ; symbol stub for: _memcpy
__mi_stat_increase:
000000000003655c	cbz	x1, 0x365f0
0000000000036560	adr	x8, #0x5e320
0000000000036564	nop
0000000000036568	cmp	x0, x8
000000000003656c	b.lo	0x365f4
0000000000036570	adr	x8, #0x5e550
0000000000036574	nop
0000000000036578	cmp	x0, x8
000000000003657c	b.hs	0x365f4
0000000000036580	add	x9, x0, #0x18
0000000000036584	ldxr	x8, [x9]
0000000000036588	add	x8, x8, x1
000000000003658c	stxr	w10, x8, [x9]
0000000000036590	cbnz	w10, 0x36584
0000000000036594	add	x9, x0, #0x10
0000000000036598	ldr	x11, [x0, #0x10]
000000000003659c	b	0x365b0
00000000000365a0	clrex
00000000000365a4	mov	w12, #0x0
00000000000365a8	mov	x11, x10
00000000000365ac	cbnz	w12, 0x365d8
00000000000365b0	cmp	x11, x8
00000000000365b4	b.ge	0x365d8
00000000000365b8	ldxr	x10, [x9]
00000000000365bc	cmp	x10, x11
00000000000365c0	b.ne	0x365a0
00000000000365c4	stlxr	w11, x8, [x9]
00000000000365c8	cbnz	w11, 0x365a4
00000000000365cc	mov	w12, #0x1
00000000000365d0	mov	x11, x10
00000000000365d4	cbz	w12, 0x365b0
00000000000365d8	cmp	x1, #0x1
00000000000365dc	b.lt	0x36624
00000000000365e0	ldxr	x8, [x0]
00000000000365e4	add	x8, x8, x1
00000000000365e8	stxr	w9, x8, [x0]
00000000000365ec	cbnz	w9, 0x365e0
00000000000365f0	ret
00000000000365f4	ldp	x9, x8, [x0, #0x10]
00000000000365f8	add	x8, x8, x1
00000000000365fc	str	x8, [x0, #0x18]
0000000000036600	cmp	x8, x9
0000000000036604	b.le	0x3660c
0000000000036608	str	x8, [x0, #0x10]
000000000003660c	cmp	x1, #0x1
0000000000036610	b.lt	0x36640
0000000000036614	ldr	x8, [x0]
0000000000036618	add	x8, x8, x1
000000000003661c	str	x8, [x0]
0000000000036620	ret
0000000000036624	add	x8, x0, #0x8
0000000000036628	neg	x9, x1
000000000003662c	ldxr	x10, [x8]
0000000000036630	add	x10, x10, x9
0000000000036634	stxr	w11, x10, [x8]
0000000000036638	cbnz	w11, 0x3662c
000000000003663c	b	0x365f0
0000000000036640	ldr	x8, [x0, #0x8]
0000000000036644	sub	x8, x8, x1
0000000000036648	str	x8, [x0, #0x8]
000000000003664c	ret
_mi_unix_mmapx:
0000000000036650	stp	x26, x25, [sp, #-0x50]!
0000000000036654	stp	x24, x23, [sp, #0x10]
0000000000036658	stp	x22, x21, [sp, #0x20]
000000000003665c	stp	x20, x19, [sp, #0x30]
0000000000036660	stp	x29, x30, [sp, #0x40]
0000000000036664	add	x29, sp, #0x40
0000000000036668	mov	x19, x4
000000000003666c	mov	x20, x3
0000000000036670	mov	x21, x2
0000000000036674	mov	x22, x0
0000000000036678	sub	x8, x1, #0x1
000000000003667c	and	x9, x0, #0x3fffff
0000000000036680	mov	w10, #0x40000000
0000000000036684	cmp	x0, x10
0000000000036688	ccmp	x9, #0x0, #0x0, ls
000000000003668c	lsr	x8, x8, #22
0000000000036690	ccmp	x8, #0x0, #0x0, eq
0000000000036694	b.ne	0x36754
0000000000036698	mov	x23, x1
000000000003669c	adr	x25, #0x4dba4
00000000000366a0	nop
00000000000366a4	ldaxr	x24, [x25]
00000000000366a8	add	x8, x24, x22
00000000000366ac	stlxr	w9, x8, [x25]
00000000000366b0	cbnz	w9, 0x366a4
00000000000366b4	sub	x8, x24, #0x1
00000000000366b8	lsr	x8, x8, #41
00000000000366bc	cmp	x8, #0xf
00000000000366c0	b.lo	0x3671c
00000000000366c4	adrp	x0, 68 ; 0x7a000
00000000000366c8	add	x0, x0, #0x2d8
00000000000366cc	ldr	x8, [x0]
00000000000366d0	blr	x8
00000000000366d4	ldr	x0, [x0]
00000000000366d8	bl	__mi_heap_random_next
00000000000366dc	lsl	x8, x0, #5
00000000000366e0	and	x8, x8, #0x3ffffc00000
00000000000366e4	mov	x9, #0x20000000000
00000000000366e8	add	x8, x8, x9
00000000000366ec	add	x9, x24, x22
00000000000366f0	ldaxr	x10, [x25]
00000000000366f4	cmp	x10, x9
00000000000366f8	b.ne	0x36708
00000000000366fc	stlxr	w10, x8, [x25]
0000000000036700	cbnz	w10, 0x366f0
0000000000036704	b	0x3670c
0000000000036708	clrex
000000000003670c	ldaxr	x24, [x25]
0000000000036710	add	x8, x24, x22
0000000000036714	stlxr	w9, x8, [x25]
0000000000036718	cbnz	w9, 0x3670c
000000000003671c	cbz	x24, 0x36754
0000000000036720	udiv	x8, x24, x23
0000000000036724	msub	x8, x8, x23, x24
0000000000036728	cbnz	x8, 0x36754
000000000003672c	mov	x0, x24
0000000000036730	mov	x1, x22
0000000000036734	mov	x2, x21
0000000000036738	mov	x3, x20
000000000003673c	mov	x4, x19
0000000000036740	mov	x5, #0x0
0000000000036744	bl	0x554dc ; symbol stub for: _mmap
0000000000036748	add	x8, x0, #0x1
000000000003674c	cmp	x8, #0x1
0000000000036750	b.hi	0x36778
0000000000036754	mov	x0, #0x0
0000000000036758	mov	x1, x22
000000000003675c	mov	x2, x21
0000000000036760	mov	x3, x20
0000000000036764	mov	x4, x19
0000000000036768	mov	x5, #0x0
000000000003676c	bl	0x554dc ; symbol stub for: _mmap
0000000000036770	cmn	x0, #0x1
0000000000036774	csel	x0, xzr, x0, eq
0000000000036778	ldp	x29, x30, [sp, #0x40]
000000000003677c	ldp	x20, x19, [sp, #0x30]
0000000000036780	ldp	x22, x21, [sp, #0x20]
0000000000036784	ldp	x24, x23, [sp, #0x10]
0000000000036788	ldp	x26, x25, [sp], #0x50
000000000003678c	ret
__mi_error_message:
0000000000036790	stp	x24, x23, [sp, #-0x40]!
0000000000036794	stp	x22, x21, [sp, #0x10]
0000000000036798	stp	x20, x19, [sp, #0x20]
000000000003679c	stp	x29, x30, [sp, #0x30]
00000000000367a0	add	x29, sp, #0x30
00000000000367a4	sub	sp, sp, #0x210
00000000000367a8	mov	x20, x1
00000000000367ac	mov	x19, x0
00000000000367b0	add	x8, x29, #0x10
00000000000367b4	str	x8, [sp, #0x8]
00000000000367b8	mov	w0, #0x0
00000000000367bc	bl	_mi_option_get
00000000000367c0	cbnz	x0, 0x367d0
00000000000367c4	mov	w0, #0x2
00000000000367c8	bl	_mi_option_get
00000000000367cc	cbz	x0, 0x368c8
00000000000367d0	adr	x9, #0x5dbc8
00000000000367d4	nop
00000000000367d8	ldaxr	x8, [x9]
00000000000367dc	add	x10, x8, #0x1
00000000000367e0	stlxr	w11, x10, [x9]
00000000000367e4	cbnz	w11, 0x367d8
00000000000367e8	nop
00000000000367ec	ldr	x9, #0x43584
00000000000367f0	cmp	x8, x9
00000000000367f4	b.hi	0x368c8
00000000000367f8	cbz	x20, 0x368c8
00000000000367fc	adrp	x22, 94 ; 0x94000
0000000000036800	ldrb	w8, [x22, #0x28c]
0000000000036804	adrp	x21, 68 ; 0x7a000
0000000000036808	add	x21, x21, #0x2f0
000000000003680c	cmp	w8, #0x1
0000000000036810	b.ne	0x36838
0000000000036814	ldr	x8, [x21]
0000000000036818	mov	x0, x21
000000000003681c	blr	x8
0000000000036820	ldrb	w9, [x0]
0000000000036824	tbnz	w9, #0x0, 0x368c8
0000000000036828	mov	x0, x21
000000000003682c	blr	x8
0000000000036830	mov	w8, #0x1
0000000000036834	strb	w8, [x0]
0000000000036838	add	x0, sp, #0x10
000000000003683c	add	x3, x29, #0x10
0000000000036840	mov	w1, #0x1ff
0000000000036844	mov	x2, x20
0000000000036848	bl	0x557ac ; symbol stub for: _vsnprintf
000000000003684c	ldrb	w8, [x22, #0x28c]
0000000000036850	cmp	w8, #0x1
0000000000036854	b.ne	0x3686c
0000000000036858	ldr	x8, [x21]
000000000003685c	mov	x0, x21
0000000000036860	blr	x8
0000000000036864	mov	w8, #0x1
0000000000036868	strb	w8, [x0]
000000000003686c	adr	x22, #0x5da20
0000000000036870	nop
0000000000036874	add	x8, x22, #0xc4
0000000000036878	ldar	x20, [x8]
000000000003687c	ldur	x8, [x22, #0xcc]
0000000000036880	adr	x9, #-0x3b0
0000000000036884	nop
0000000000036888	cmp	x8, #0x0
000000000003688c	csel	x23, x9, x8, eq
0000000000036890	adr	x0, #0x27bf2 ; literal pool for: "mimalloc: error: "
0000000000036894	nop
0000000000036898	mov	x1, x20
000000000003689c	blr	x23
00000000000368a0	add	x0, sp, #0x10
00000000000368a4	mov	x1, x20
00000000000368a8	blr	x23
00000000000368ac	ldrb	w8, [x22]
00000000000368b0	cmp	w8, #0x1
00000000000368b4	b.ne	0x368c8
00000000000368b8	ldr	x8, [x21]
00000000000368bc	mov	x0, x21
00000000000368c0	blr	x8
00000000000368c4	strb	wzr, [x0]
00000000000368c8	nop
00000000000368cc	ldr	x8, #0x5dad4
00000000000368d0	cbz	x8, 0x368ec
00000000000368d4	adr	x8, #0x5dacc
00000000000368d8	nop
00000000000368dc	ldr	x9, [x8], #0x8
00000000000368e0	ldar	x1, [x8]
00000000000368e4	mov	x0, x19
00000000000368e8	blr	x9
00000000000368ec	add	sp, sp, #0x210
00000000000368f0	ldp	x29, x30, [sp, #0x30]
00000000000368f4	ldp	x20, x19, [sp, #0x20]
00000000000368f8	ldp	x22, x21, [sp, #0x10]
00000000000368fc	ldp	x24, x23, [sp], #0x40
0000000000036900	ret
_mi_stats_merge_from:
0000000000036904	adr	x8, #0x5df7c
0000000000036908	nop
000000000003690c	cmp	x0, x8
0000000000036910	b.eq	0x371a8
0000000000036914	stp	x29, x30, [sp, #-0x10]!
0000000000036918	mov	x29, sp
000000000003691c	ldr	x9, [x0]
0000000000036920	cbnz	x9, 0x3692c
0000000000036924	ldr	x10, [x0, #0x8]
0000000000036928	cbz	x10, 0x36990
000000000003692c	ldxr	x10, [x8]
0000000000036930	add	x10, x10, x9
0000000000036934	stxr	w11, x10, [x8]
0000000000036938	cbnz	w11, 0x3692c
000000000003693c	ldr	x8, [x0, #0x18]
0000000000036940	adr	x9, #0x5df58
0000000000036944	nop
0000000000036948	ldxr	x10, [x9]
000000000003694c	add	x10, x10, x8
0000000000036950	stxr	w11, x10, [x9]
0000000000036954	cbnz	w11, 0x36948
0000000000036958	ldr	x8, [x0, #0x8]
000000000003695c	adr	x9, #0x5df2c
0000000000036960	nop
0000000000036964	ldxr	x10, [x9]
0000000000036968	add	x10, x10, x8
000000000003696c	stxr	w11, x10, [x9]
0000000000036970	cbnz	w11, 0x36964
0000000000036974	ldr	x8, [x0, #0x10]
0000000000036978	adr	x9, #0x5df18
000000000003697c	nop
0000000000036980	ldxr	x10, [x9]
0000000000036984	add	x10, x10, x8
0000000000036988	stxr	w11, x10, [x9]
000000000003698c	cbnz	w11, 0x36980
0000000000036990	ldr	x8, [x0, #0x20]
0000000000036994	cbnz	x8, 0x369a0
0000000000036998	ldr	x9, [x0, #0x28]
000000000003699c	cbz	x9, 0x36a0c
00000000000369a0	adr	x9, #0x5df00
00000000000369a4	nop
00000000000369a8	ldxr	x10, [x9]
00000000000369ac	add	x10, x10, x8
00000000000369b0	stxr	w11, x10, [x9]
00000000000369b4	cbnz	w11, 0x369a8
00000000000369b8	ldr	x8, [x0, #0x38]
00000000000369bc	adr	x9, #0x5defc
00000000000369c0	nop
00000000000369c4	ldxr	x10, [x9]
00000000000369c8	add	x10, x10, x8
00000000000369cc	stxr	w11, x10, [x9]
00000000000369d0	cbnz	w11, 0x369c4
00000000000369d4	ldr	x8, [x0, #0x28]
00000000000369d8	adr	x9, #0x5ded0
00000000000369dc	nop
00000000000369e0	ldxr	x10, [x9]
00000000000369e4	add	x10, x10, x8
00000000000369e8	stxr	w11, x10, [x9]
00000000000369ec	cbnz	w11, 0x369e0
00000000000369f0	ldr	x8, [x0, #0x30]
00000000000369f4	adr	x9, #0x5debc
00000000000369f8	nop
00000000000369fc	ldxr	x10, [x9]
0000000000036a00	add	x10, x10, x8
0000000000036a04	stxr	w11, x10, [x9]
0000000000036a08	cbnz	w11, 0x369fc
0000000000036a0c	ldr	x8, [x0, #0x40]
0000000000036a10	cbnz	x8, 0x36a1c
0000000000036a14	ldr	x9, [x0, #0x48]
0000000000036a18	cbz	x9, 0x36a88
0000000000036a1c	adr	x9, #0x5dea4
0000000000036a20	nop
0000000000036a24	ldxr	x10, [x9]
0000000000036a28	add	x10, x10, x8
0000000000036a2c	stxr	w11, x10, [x9]
0000000000036a30	cbnz	w11, 0x36a24
0000000000036a34	ldr	x8, [x0, #0x58]
0000000000036a38	adr	x9, #0x5dea0
0000000000036a3c	nop
0000000000036a40	ldxr	x10, [x9]
0000000000036a44	add	x10, x10, x8
0000000000036a48	stxr	w11, x10, [x9]
0000000000036a4c	cbnz	w11, 0x36a40
0000000000036a50	ldr	x8, [x0, #0x48]
0000000000036a54	adr	x9, #0x5de74
0000000000036a58	nop
0000000000036a5c	ldxr	x10, [x9]
0000000000036a60	add	x10, x10, x8
0000000000036a64	stxr	w11, x10, [x9]
0000000000036a68	cbnz	w11, 0x36a5c
0000000000036a6c	ldr	x8, [x0, #0x50]
0000000000036a70	adr	x9, #0x5de60
0000000000036a74	nop
0000000000036a78	ldxr	x10, [x9]
0000000000036a7c	add	x10, x10, x8
0000000000036a80	stxr	w11, x10, [x9]
0000000000036a84	cbnz	w11, 0x36a78
0000000000036a88	ldr	x8, [x0, #0x60]
0000000000036a8c	cbnz	x8, 0x36a98
0000000000036a90	ldr	x9, [x0, #0x68]
0000000000036a94	cbz	x9, 0x36b04
0000000000036a98	adr	x9, #0x5de48
0000000000036a9c	nop
0000000000036aa0	ldxr	x10, [x9]
0000000000036aa4	add	x10, x10, x8
0000000000036aa8	stxr	w11, x10, [x9]
0000000000036aac	cbnz	w11, 0x36aa0
0000000000036ab0	ldr	x8, [x0, #0x78]
0000000000036ab4	adr	x9, #0x5de44
0000000000036ab8	nop
0000000000036abc	ldxr	x10, [x9]
0000000000036ac0	add	x10, x10, x8
0000000000036ac4	stxr	w11, x10, [x9]
0000000000036ac8	cbnz	w11, 0x36abc
0000000000036acc	ldr	x8, [x0, #0x68]
0000000000036ad0	adr	x9, #0x5de18
0000000000036ad4	nop
0000000000036ad8	ldxr	x10, [x9]
0000000000036adc	add	x10, x10, x8
0000000000036ae0	stxr	w11, x10, [x9]
0000000000036ae4	cbnz	w11, 0x36ad8
0000000000036ae8	ldr	x8, [x0, #0x70]
0000000000036aec	adr	x9, #0x5de04
0000000000036af0	nop
0000000000036af4	ldxr	x10, [x9]
0000000000036af8	add	x10, x10, x8
0000000000036afc	stxr	w11, x10, [x9]
0000000000036b00	cbnz	w11, 0x36af4
0000000000036b04	ldr	x8, [x0, #0x80]
0000000000036b08	cbnz	x8, 0x36b14
0000000000036b0c	ldr	x9, [x0, #0x88]
0000000000036b10	cbz	x9, 0x36b80
0000000000036b14	adr	x9, #0x5ddec
0000000000036b18	nop
0000000000036b1c	ldxr	x10, [x9]
0000000000036b20	add	x10, x10, x8
0000000000036b24	stxr	w11, x10, [x9]
0000000000036b28	cbnz	w11, 0x36b1c
0000000000036b2c	ldr	x8, [x0, #0x98]
0000000000036b30	adr	x9, #0x5dde8
0000000000036b34	nop
0000000000036b38	ldxr	x10, [x9]
0000000000036b3c	add	x10, x10, x8
0000000000036b40	stxr	w11, x10, [x9]
0000000000036b44	cbnz	w11, 0x36b38
0000000000036b48	ldr	x8, [x0, #0x88]
0000000000036b4c	adr	x9, #0x5ddbc
0000000000036b50	nop
0000000000036b54	ldxr	x10, [x9]
0000000000036b58	add	x10, x10, x8
0000000000036b5c	stxr	w11, x10, [x9]
0000000000036b60	cbnz	w11, 0x36b54
0000000000036b64	ldr	x8, [x0, #0x90]
0000000000036b68	adr	x9, #0x5dda8
0000000000036b6c	nop
0000000000036b70	ldxr	x10, [x9]
0000000000036b74	add	x10, x10, x8
0000000000036b78	stxr	w11, x10, [x9]
0000000000036b7c	cbnz	w11, 0x36b70
0000000000036b80	ldr	x8, [x0, #0xa0]
0000000000036b84	cbnz	x8, 0x36b90
0000000000036b88	ldr	x9, [x0, #0xa8]
0000000000036b8c	cbz	x9, 0x36bfc
0000000000036b90	adr	x9, #0x5dd90
0000000000036b94	nop
0000000000036b98	ldxr	x10, [x9]
0000000000036b9c	add	x10, x10, x8
0000000000036ba0	stxr	w11, x10, [x9]
0000000000036ba4	cbnz	w11, 0x36b98
0000000000036ba8	ldr	x8, [x0, #0xb8]
0000000000036bac	adr	x9, #0x5dd8c
0000000000036bb0	nop
0000000000036bb4	ldxr	x10, [x9]
0000000000036bb8	add	x10, x10, x8
0000000000036bbc	stxr	w11, x10, [x9]
0000000000036bc0	cbnz	w11, 0x36bb4
0000000000036bc4	ldr	x8, [x0, #0xa8]
0000000000036bc8	adr	x9, #0x5dd60
0000000000036bcc	nop
0000000000036bd0	ldxr	x10, [x9]
0000000000036bd4	add	x10, x10, x8
0000000000036bd8	stxr	w11, x10, [x9]
0000000000036bdc	cbnz	w11, 0x36bd0
0000000000036be0	ldr	x8, [x0, #0xb0]
0000000000036be4	adr	x9, #0x5dd4c
0000000000036be8	nop
0000000000036bec	ldxr	x10, [x9]
0000000000036bf0	add	x10, x10, x8
0000000000036bf4	stxr	w11, x10, [x9]
0000000000036bf8	cbnz	w11, 0x36bec
0000000000036bfc	ldr	x8, [x0, #0xe0]
0000000000036c00	cbnz	x8, 0x36c0c
0000000000036c04	ldr	x9, [x0, #0xe8]
0000000000036c08	cbz	x9, 0x36c78
0000000000036c0c	adr	x9, #0x5dd54
0000000000036c10	nop
0000000000036c14	ldxr	x10, [x9]
0000000000036c18	add	x10, x10, x8
0000000000036c1c	stxr	w11, x10, [x9]
0000000000036c20	cbnz	w11, 0x36c14
0000000000036c24	ldr	x8, [x0, #0xf8]
0000000000036c28	adr	x9, #0x5dd50
0000000000036c2c	nop
0000000000036c30	ldxr	x10, [x9]
0000000000036c34	add	x10, x10, x8
0000000000036c38	stxr	w11, x10, [x9]
0000000000036c3c	cbnz	w11, 0x36c30
0000000000036c40	ldr	x8, [x0, #0xe8]
0000000000036c44	adr	x9, #0x5dd24
0000000000036c48	nop
0000000000036c4c	ldxr	x10, [x9]
0000000000036c50	add	x10, x10, x8
0000000000036c54	stxr	w11, x10, [x9]
0000000000036c58	cbnz	w11, 0x36c4c
0000000000036c5c	ldr	x8, [x0, #0xf0]
0000000000036c60	adr	x9, #0x5dd10
0000000000036c64	nop
0000000000036c68	ldxr	x10, [x9]
0000000000036c6c	add	x10, x10, x8
0000000000036c70	stxr	w11, x10, [x9]
0000000000036c74	cbnz	w11, 0x36c68
0000000000036c78	ldr	x8, [x0, #0xc0]
0000000000036c7c	cbnz	x8, 0x36c88
0000000000036c80	ldr	x9, [x0, #0xc8]
0000000000036c84	cbz	x9, 0x36cf4
0000000000036c88	adr	x9, #0x5dcb8
0000000000036c8c	nop
0000000000036c90	ldxr	x10, [x9]
0000000000036c94	add	x10, x10, x8
0000000000036c98	stxr	w11, x10, [x9]
0000000000036c9c	cbnz	w11, 0x36c90
0000000000036ca0	ldr	x8, [x0, #0xd8]
0000000000036ca4	adr	x9, #0x5dcb4
0000000000036ca8	nop
0000000000036cac	ldxr	x10, [x9]
0000000000036cb0	add	x10, x10, x8
0000000000036cb4	stxr	w11, x10, [x9]
0000000000036cb8	cbnz	w11, 0x36cac
0000000000036cbc	ldr	x8, [x0, #0xc8]
0000000000036cc0	adr	x9, #0x5dc88
0000000000036cc4	nop
0000000000036cc8	ldxr	x10, [x9]
0000000000036ccc	add	x10, x10, x8
0000000000036cd0	stxr	w11, x10, [x9]
0000000000036cd4	cbnz	w11, 0x36cc8
0000000000036cd8	ldr	x8, [x0, #0xd0]
0000000000036cdc	adr	x9, #0x5dc74
0000000000036ce0	nop
0000000000036ce4	ldxr	x10, [x9]
0000000000036ce8	add	x10, x10, x8
0000000000036cec	stxr	w11, x10, [x9]
0000000000036cf0	cbnz	w11, 0x36ce4
0000000000036cf4	ldr	x8, [x0, #0x100]
0000000000036cf8	cbnz	x8, 0x36d04
0000000000036cfc	ldr	x9, [x0, #0x108]
0000000000036d00	cbz	x9, 0x36d70
0000000000036d04	adr	x9, #0x5dc7c
0000000000036d08	nop
0000000000036d0c	ldxr	x10, [x9]
0000000000036d10	add	x10, x10, x8
0000000000036d14	stxr	w11, x10, [x9]
0000000000036d18	cbnz	w11, 0x36d0c
0000000000036d1c	ldr	x8, [x0, #0x118]
0000000000036d20	adr	x9, #0x5dc78
0000000000036d24	nop
0000000000036d28	ldxr	x10, [x9]
0000000000036d2c	add	x10, x10, x8
0000000000036d30	stxr	w11, x10, [x9]
0000000000036d34	cbnz	w11, 0x36d28
0000000000036d38	ldr	x8, [x0, #0x108]
0000000000036d3c	adr	x9, #0x5dc4c
0000000000036d40	nop
0000000000036d44	ldxr	x10, [x9]
0000000000036d48	add	x10, x10, x8
0000000000036d4c	stxr	w11, x10, [x9]
0000000000036d50	cbnz	w11, 0x36d44
0000000000036d54	ldr	x8, [x0, #0x110]
0000000000036d58	adr	x9, #0x5dc38
0000000000036d5c	nop
0000000000036d60	ldxr	x10, [x9]
0000000000036d64	add	x10, x10, x8
0000000000036d68	stxr	w11, x10, [x9]
0000000000036d6c	cbnz	w11, 0x36d60
0000000000036d70	ldr	x8, [x0, #0x180]
0000000000036d74	cbnz	x8, 0x36d80
0000000000036d78	ldr	x9, [x0, #0x188]
0000000000036d7c	cbz	x9, 0x36dec
0000000000036d80	adr	x9, #0x5dc80
0000000000036d84	nop
0000000000036d88	ldxr	x10, [x9]
0000000000036d8c	add	x10, x10, x8
0000000000036d90	stxr	w11, x10, [x9]
0000000000036d94	cbnz	w11, 0x36d88
0000000000036d98	ldr	x8, [x0, #0x198]
0000000000036d9c	adr	x9, #0x5dc7c
0000000000036da0	nop
0000000000036da4	ldxr	x10, [x9]
0000000000036da8	add	x10, x10, x8
0000000000036dac	stxr	w11, x10, [x9]
0000000000036db0	cbnz	w11, 0x36da4
0000000000036db4	ldr	x8, [x0, #0x188]
0000000000036db8	adr	x9, #0x5dc50
0000000000036dbc	nop
0000000000036dc0	ldxr	x10, [x9]
0000000000036dc4	add	x10, x10, x8
0000000000036dc8	stxr	w11, x10, [x9]
0000000000036dcc	cbnz	w11, 0x36dc0
0000000000036dd0	ldr	x8, [x0, #0x190]
0000000000036dd4	adr	x9, #0x5dc3c
0000000000036dd8	nop
0000000000036ddc	ldxr	x10, [x9]
0000000000036de0	add	x10, x10, x8
0000000000036de4	stxr	w11, x10, [x9]
0000000000036de8	cbnz	w11, 0x36ddc
0000000000036dec	ldr	x8, [x0, #0x1a0]
0000000000036df0	cbnz	x8, 0x36dfc
0000000000036df4	ldr	x9, [x0, #0x1a8]
0000000000036df8	cbz	x9, 0x36e68
0000000000036dfc	adr	x9, #0x5dc24
0000000000036e00	nop
0000000000036e04	ldxr	x10, [x9]
0000000000036e08	add	x10, x10, x8
0000000000036e0c	stxr	w11, x10, [x9]
0000000000036e10	cbnz	w11, 0x36e04
0000000000036e14	ldr	x8, [x0, #0x1b8]
0000000000036e18	adr	x9, #0x5dc20
0000000000036e1c	nop
0000000000036e20	ldxr	x10, [x9]
0000000000036e24	add	x10, x10, x8
0000000000036e28	stxr	w11, x10, [x9]
0000000000036e2c	cbnz	w11, 0x36e20
0000000000036e30	ldr	x8, [x0, #0x1a8]
0000000000036e34	adr	x9, #0x5dbf4
0000000000036e38	nop
0000000000036e3c	ldxr	x10, [x9]
0000000000036e40	add	x10, x10, x8
0000000000036e44	stxr	w11, x10, [x9]
0000000000036e48	cbnz	w11, 0x36e3c
0000000000036e4c	ldr	x8, [x0, #0x1b0]
0000000000036e50	adr	x9, #0x5dbe0
0000000000036e54	nop
0000000000036e58	ldxr	x10, [x9]
0000000000036e5c	add	x10, x10, x8
0000000000036e60	stxr	w11, x10, [x9]
0000000000036e64	cbnz	w11, 0x36e58
0000000000036e68	ldr	x8, [x0, #0x120]
0000000000036e6c	cbnz	x8, 0x36e78
0000000000036e70	ldr	x9, [x0, #0x128]
0000000000036e74	cbz	x9, 0x36ee4
0000000000036e78	adr	x9, #0x5db28
0000000000036e7c	nop
0000000000036e80	ldxr	x10, [x9]
0000000000036e84	add	x10, x10, x8
0000000000036e88	stxr	w11, x10, [x9]
0000000000036e8c	cbnz	w11, 0x36e80
0000000000036e90	ldr	x8, [x0, #0x138]
0000000000036e94	adr	x9, #0x5db24
0000000000036e98	nop
0000000000036e9c	ldxr	x10, [x9]
0000000000036ea0	add	x10, x10, x8
0000000000036ea4	stxr	w11, x10, [x9]
0000000000036ea8	cbnz	w11, 0x36e9c
0000000000036eac	ldr	x8, [x0, #0x128]
0000000000036eb0	adr	x9, #0x5daf8
0000000000036eb4	nop
0000000000036eb8	ldxr	x10, [x9]
0000000000036ebc	add	x10, x10, x8
0000000000036ec0	stxr	w11, x10, [x9]
0000000000036ec4	cbnz	w11, 0x36eb8
0000000000036ec8	ldr	x8, [x0, #0x130]
0000000000036ecc	adr	x9, #0x5dae4
0000000000036ed0	nop
0000000000036ed4	ldxr	x10, [x9]
0000000000036ed8	add	x10, x10, x8
0000000000036edc	stxr	w11, x10, [x9]
0000000000036ee0	cbnz	w11, 0x36ed4
0000000000036ee4	ldr	x8, [x0, #0x140]
0000000000036ee8	cbnz	x8, 0x36ef4
0000000000036eec	ldr	x9, [x0, #0x148]
0000000000036ef0	cbz	x9, 0x36f60
0000000000036ef4	adr	x9, #0x5dacc
0000000000036ef8	nop
0000000000036efc	ldxr	x10, [x9]
0000000000036f00	add	x10, x10, x8
0000000000036f04	stxr	w11, x10, [x9]
0000000000036f08	cbnz	w11, 0x36efc
0000000000036f0c	ldr	x8, [x0, #0x158]
0000000000036f10	adr	x9, #0x5dac8
0000000000036f14	nop
0000000000036f18	ldxr	x10, [x9]
0000000000036f1c	add	x10, x10, x8
0000000000036f20	stxr	w11, x10, [x9]
0000000000036f24	cbnz	w11, 0x36f18
0000000000036f28	ldr	x8, [x0, #0x148]
0000000000036f2c	adr	x9, #0x5da9c
0000000000036f30	nop
0000000000036f34	ldxr	x10, [x9]
0000000000036f38	add	x10, x10, x8
0000000000036f3c	stxr	w11, x10, [x9]
0000000000036f40	cbnz	w11, 0x36f34
0000000000036f44	ldr	x8, [x0, #0x150]
0000000000036f48	adr	x9, #0x5da88
0000000000036f4c	nop
0000000000036f50	ldxr	x10, [x9]
0000000000036f54	add	x10, x10, x8
0000000000036f58	stxr	w11, x10, [x9]
0000000000036f5c	cbnz	w11, 0x36f50
0000000000036f60	ldr	x8, [x0, #0x160]
0000000000036f64	cbnz	x8, 0x36f70
0000000000036f68	ldr	x9, [x0, #0x168]
0000000000036f6c	cbz	x9, 0x36fdc
0000000000036f70	adr	x9, #0x5da70
0000000000036f74	nop
0000000000036f78	ldxr	x10, [x9]
0000000000036f7c	add	x10, x10, x8
0000000000036f80	stxr	w11, x10, [x9]
0000000000036f84	cbnz	w11, 0x36f78
0000000000036f88	ldr	x8, [x0, #0x178]
0000000000036f8c	adr	x9, #0x5da6c
0000000000036f90	nop
0000000000036f94	ldxr	x10, [x9]
0000000000036f98	add	x10, x10, x8
0000000000036f9c	stxr	w11, x10, [x9]
0000000000036fa0	cbnz	w11, 0x36f94
0000000000036fa4	ldr	x8, [x0, #0x168]
0000000000036fa8	adr	x9, #0x5da40
0000000000036fac	nop
0000000000036fb0	ldxr	x10, [x9]
0000000000036fb4	add	x10, x10, x8
0000000000036fb8	stxr	w11, x10, [x9]
0000000000036fbc	cbnz	w11, 0x36fb0
0000000000036fc0	ldr	x8, [x0, #0x170]
0000000000036fc4	adr	x9, #0x5da2c
0000000000036fc8	nop
0000000000036fcc	ldxr	x10, [x9]
0000000000036fd0	add	x10, x10, x8
0000000000036fd4	stxr	w11, x10, [x9]
0000000000036fd8	cbnz	w11, 0x36fcc
0000000000036fdc	ldr	x8, [x0, #0x1c0]
0000000000036fe0	adr	x9, #0x5da60
0000000000036fe4	nop
0000000000036fe8	ldxr	x10, [x9]
0000000000036fec	add	x10, x10, x8
0000000000036ff0	stxr	w11, x10, [x9]
0000000000036ff4	cbnz	w11, 0x36fe8
0000000000036ff8	ldr	x8, [x0, #0x1c8]
0000000000036ffc	adr	x9, #0x5da4c
0000000000037000	nop
0000000000037004	ldxr	x10, [x9]
0000000000037008	add	x10, x10, x8
000000000003700c	stxr	w11, x10, [x9]
0000000000037010	cbnz	w11, 0x37004
0000000000037014	ldr	x8, [x0, #0x1d0]
0000000000037018	adr	x9, #0x5da38
000000000003701c	nop
0000000000037020	ldxr	x10, [x9]
0000000000037024	add	x10, x10, x8
0000000000037028	stxr	w11, x10, [x9]
000000000003702c	cbnz	w11, 0x37020
0000000000037030	ldr	x8, [x0, #0x1d8]
0000000000037034	adr	x9, #0x5da24
0000000000037038	nop
000000000003703c	ldxr	x10, [x9]
0000000000037040	add	x10, x10, x8
0000000000037044	stxr	w11, x10, [x9]
0000000000037048	cbnz	w11, 0x3703c
000000000003704c	ldr	x8, [x0, #0x1e0]
0000000000037050	adr	x9, #0x5da10
0000000000037054	nop
0000000000037058	ldxr	x10, [x9]
000000000003705c	add	x10, x10, x8
0000000000037060	stxr	w11, x10, [x9]
0000000000037064	cbnz	w11, 0x37058
0000000000037068	ldr	x8, [x0, #0x1e8]
000000000003706c	adr	x9, #0x5d9fc
0000000000037070	nop
0000000000037074	ldxr	x10, [x9]
0000000000037078	add	x10, x10, x8
000000000003707c	stxr	w11, x10, [x9]
0000000000037080	cbnz	w11, 0x37074
0000000000037084	ldr	x8, [x0, #0x1f0]
0000000000037088	adr	x9, #0x5d9e8
000000000003708c	nop
0000000000037090	ldxr	x10, [x9]
0000000000037094	add	x10, x10, x8
0000000000037098	stxr	w11, x10, [x9]
000000000003709c	cbnz	w11, 0x37090
00000000000370a0	ldr	x8, [x0, #0x1f8]
00000000000370a4	adr	x9, #0x5d9d4
00000000000370a8	nop
00000000000370ac	ldxr	x10, [x9]
00000000000370b0	add	x10, x10, x8
00000000000370b4	stxr	w11, x10, [x9]
00000000000370b8	cbnz	w11, 0x370ac
00000000000370bc	ldr	x8, [x0, #0x200]
00000000000370c0	adr	x9, #0x5d9c0
00000000000370c4	nop
00000000000370c8	ldxr	x10, [x9]
00000000000370cc	add	x10, x10, x8
00000000000370d0	stxr	w11, x10, [x9]
00000000000370d4	cbnz	w11, 0x370c8
00000000000370d8	ldr	x8, [x0, #0x208]
00000000000370dc	adr	x9, #0x5d9ac
00000000000370e0	nop
00000000000370e4	ldxr	x10, [x9]
00000000000370e8	add	x10, x10, x8
00000000000370ec	stxr	w11, x10, [x9]
00000000000370f0	cbnz	w11, 0x370e4
00000000000370f4	ldr	x8, [x0, #0x210]
00000000000370f8	adr	x9, #0x5d998
00000000000370fc	nop
0000000000037100	ldxr	x10, [x9]
0000000000037104	add	x10, x10, x8
0000000000037108	stxr	w11, x10, [x9]
000000000003710c	cbnz	w11, 0x37100
0000000000037110	ldr	x8, [x0, #0x218]
0000000000037114	adr	x9, #0x5d984
0000000000037118	nop
000000000003711c	ldxr	x10, [x9]
0000000000037120	add	x10, x10, x8
0000000000037124	stxr	w11, x10, [x9]
0000000000037128	cbnz	w11, 0x3711c
000000000003712c	ldr	x8, [x0, #0x220]
0000000000037130	adr	x9, #0x5d970
0000000000037134	nop
0000000000037138	ldxr	x10, [x9]
000000000003713c	add	x10, x10, x8
0000000000037140	stxr	w11, x10, [x9]
0000000000037144	cbnz	w11, 0x37138
0000000000037148	ldr	x8, [x0, #0x228]
000000000003714c	adr	x9, #0x5d95c
0000000000037150	nop
0000000000037154	ldxr	x10, [x9]
0000000000037158	add	x10, x10, x8
000000000003715c	stxr	w11, x10, [x9]
0000000000037160	cbnz	w11, 0x37154
0000000000037164	ldr	x8, [x0, #0x230]
0000000000037168	adr	x9, #0x5d948
000000000003716c	nop
0000000000037170	ldxr	x10, [x9]
0000000000037174	add	x10, x10, x8
0000000000037178	stxr	w11, x10, [x9]
000000000003717c	cbnz	w11, 0x37170
0000000000037180	ldr	x8, [x0, #0x238]
0000000000037184	adr	x9, #0x5d934
0000000000037188	nop
000000000003718c	ldxr	x10, [x9]
0000000000037190	add	x10, x10, x8
0000000000037194	stxr	w11, x10, [x9]
0000000000037198	cbnz	w11, 0x3718c
000000000003719c	mov	w1, #0x240
00000000000371a0	bl	0x553c8 ; symbol stub for: _bzero
00000000000371a4	ldp	x29, x30, [sp], #0x10
00000000000371a8	ret
_mi_heap_collect_ex:
00000000000371ac	sub	sp, sp, #0x70
00000000000371b0	stp	x28, x27, [sp, #0x10]
00000000000371b4	stp	x26, x25, [sp, #0x20]
00000000000371b8	stp	x24, x23, [sp, #0x30]
00000000000371bc	stp	x22, x21, [sp, #0x40]
00000000000371c0	stp	x20, x19, [sp, #0x50]
00000000000371c4	stp	x29, x30, [sp, #0x60]
00000000000371c8	add	x29, sp, #0x60
00000000000371cc	cbz	x0, 0x37dec
00000000000371d0	mov	x28, x0
00000000000371d4	adr	x8, #0x39a6c
00000000000371d8	nop
00000000000371dc	cmp	x0, x8
00000000000371e0	b.eq	0x37dec
00000000000371e4	mov	x20, x1
00000000000371e8	ldr	x8, [x28]
00000000000371ec	ldr	x9, [x8]
00000000000371f0	add	x1, x9, #0x1
00000000000371f4	str	x1, [x8]
00000000000371f8	nop
00000000000371fc	ldr	x9, #0x5d2cc
0000000000037200	cbz	x9, 0x3720c
0000000000037204	ldrb	w9, [x8, #0x8]
0000000000037208	cbz	w9, 0x37258
000000000003720c	adrp	x9, 65 ; 0x78000
0000000000037210	cmp	w20, #0x2
0000000000037214	b.eq	0x3728c
0000000000037218	cmp	w20, #0x1
000000000003721c	b.ne	0x37250
0000000000037220	ldr	x19, [x9, #0xa80]
0000000000037224	cbz	x19, 0x3723c
0000000000037228	bl	0x556c8 ; symbol stub for: _pthread_self
000000000003722c	bl	0x55680 ; symbol stub for: _pthread_mach_thread_np
0000000000037230	cmp	x19, w0, uxtw
0000000000037234	b.ne	0x37250
0000000000037238	ldr	x8, [x28]
000000000003723c	ldr	x9, [x8, #0x10]
0000000000037240	cmp	x9, x28
0000000000037244	b.ne	0x37250
0000000000037248	ldrb	w9, [x28, #0xbe8]
000000000003724c	cbz	w9, 0x37ecc
0000000000037250	mov	w21, #0x0
0000000000037254	b	0x37310
0000000000037258	mov	w9, #0x1
000000000003725c	strb	w9, [x8, #0x8]
0000000000037260	adr	x8, #0x5d268
0000000000037264	nop
0000000000037268	ldr	x9, [x8], #0x8
000000000003726c	ldr	x2, [x8]
0000000000037270	mov	w0, #0x1
0000000000037274	blr	x9
0000000000037278	ldr	x8, [x28]
000000000003727c	strb	wzr, [x8, #0x8]
0000000000037280	adrp	x9, 65 ; 0x78000
0000000000037284	cmp	w20, #0x2
0000000000037288	b.ne	0x37218
000000000003728c	ldr	x8, [x28, #0xbc8]
0000000000037290	cbz	x8, 0x3730c
0000000000037294	mov	x8, #0x0
0000000000037298	mov	w9, #0x18
000000000003729c	b	0x372ac
00000000000372a0	add	x8, x8, #0x1
00000000000372a4	cmp	x8, #0x4b
00000000000372a8	b.eq	0x3730c
00000000000372ac	madd	x10, x8, x9, x28
00000000000372b0	ldr	x10, [x10, #0x410]
00000000000372b4	cbnz	x10, 0x372c0
00000000000372b8	b	0x372a0
00000000000372bc	cbz	x10, 0x372a0
00000000000372c0	add	x11, x10, #0x20
00000000000372c4	ldr	x10, [x10, #0x30]
00000000000372c8	ldar	x12, [x11]
00000000000372cc	and	w13, w12, #0x3
00000000000372d0	cmp	w13, #0x3
00000000000372d4	b.eq	0x372bc
00000000000372d8	cmp	w13, #0x1
00000000000372dc	b.eq	0x37304
00000000000372e0	ldxr	x13, [x11]
00000000000372e4	cmp	x13, x12
00000000000372e8	b.ne	0x372fc
00000000000372ec	orr	x12, x12, #0x3
00000000000372f0	stlxr	w13, x12, [x11]
00000000000372f4	cbnz	w13, 0x372c8
00000000000372f8	b	0x372bc
00000000000372fc	clrex
0000000000037300	b	0x372c8
0000000000037304	wfe
0000000000037308	b	0x372c8
000000000003730c	mov	w21, #0x1
0000000000037310	add	x8, x28, #0xb18
0000000000037314	ldr	x9, [x28, #0xb18]
0000000000037318	b	0x37328
000000000003731c	clrex
0000000000037320	mov	w10, #0x0
0000000000037324	cbnz	w10, 0x3734c
0000000000037328	cbz	x9, 0x3735c
000000000003732c	mov	x0, x9
0000000000037330	ldaxr	x9, [x8]
0000000000037334	cmp	x9, x0
0000000000037338	b.ne	0x3731c
000000000003733c	stlxr	w10, xzr, [x8]
0000000000037340	cbnz	w10, 0x37320
0000000000037344	mov	w10, #0x1
0000000000037348	cbz	w10, 0x37328
000000000003734c	ldr	x19, [x0]
0000000000037350	bl	__mi_free_delayed_block
0000000000037354	mov	x0, x19
0000000000037358	cbnz	x19, 0x3734c
000000000003735c	ldr	x19, [x28, #0xbd0]
0000000000037360	ldr	x8, [x28, #0xbd8]
0000000000037364	cmp	x19, x8
0000000000037368	b.ls	0x37704
000000000003736c	mov	w8, #0x4a
0000000000037370	str	x8, [x28, #0xbd0]
0000000000037374	str	xzr, [x28, #0xbd8]
0000000000037378	ldr	x8, [x28, #0xbc8]
000000000003737c	cbz	x8, 0x377c4
0000000000037380	tbz	w21, #0x0, 0x37764
0000000000037384	mov	x23, #0x0
0000000000037388	add	x24, x28, #0x3f8
000000000003738c	adr	x22, #0x5d4f4
0000000000037390	nop
0000000000037394	adr	x25, #0x5d72c
0000000000037398	nop
000000000003739c	str	x28, [sp, #0x8]
00000000000373a0	b	0x373b8
00000000000373a4	add	x23, x23, #0x1
00000000000373a8	add	x24, x24, #0x18
00000000000373ac	cmp	x23, #0x4b
00000000000373b0	ldr	x28, [sp, #0x8]
00000000000373b4	b.eq	0x377c4
00000000000373b8	mov	w8, #0x18
00000000000373bc	madd	x8, x23, x8, x28
00000000000373c0	ldr	x26, [x8, #0x410]
00000000000373c4	cbz	x26, 0x373a4
00000000000373c8	add	x20, x8, #0x410
00000000000373cc	ldr	x8, [sp, #0x8]
00000000000373d0	mov	w9, #0x18
00000000000373d4	madd	x8, x23, x9, x8
00000000000373d8	add	x19, x8, #0x418
00000000000373dc	add	x27, x8, #0x420
00000000000373e0	b	0x373f8
00000000000373e4	mov	x0, x21
00000000000373e8	mov	x1, x20
00000000000373ec	mov	w2, #0x1
00000000000373f0	bl	__mi_page_free
00000000000373f4	cbz	x26, 0x373a4
00000000000373f8	mov	x21, x26
00000000000373fc	mov	x28, x26
0000000000037400	ldr	x26, [x28, #0x30]!
0000000000037404	mov	x0, x21
0000000000037408	mov	w1, #0x1
000000000003740c	bl	__mi_page_free_collect
0000000000037410	ldr	w8, [x21, #0x10]
0000000000037414	cbz	w8, 0x373e4
0000000000037418	ldr	x8, [x21, #0x28]
000000000003741c	ldr	x8, [x8]
0000000000037420	ldr	x9, [x21, #0x28]
0000000000037424	ldr	x11, [x21, #0x38]
0000000000037428	cbz	x11, 0x37434
000000000003742c	ldr	x10, [x28]
0000000000037430	str	x10, [x11, #0x30]
0000000000037434	ldr	x10, [x28]
0000000000037438	cbz	x10, 0x37440
000000000003743c	str	x11, [x10, #0x38]
0000000000037440	ldr	x11, [x19]
0000000000037444	cmp	x11, x21
0000000000037448	b.eq	0x3745c
000000000003744c	ldr	x11, [x20]
0000000000037450	cmp	x11, x21
0000000000037454	b.ne	0x37604
0000000000037458	b	0x37470
000000000003745c	ldr	x11, [x21, #0x38]
0000000000037460	str	x11, [x19]
0000000000037464	ldr	x11, [x20]
0000000000037468	cmp	x11, x21
000000000003746c	b.ne	0x37604
0000000000037470	str	x10, [x20]
0000000000037474	ldr	x12, [x27]
0000000000037478	cmp	x12, #0x400
000000000003747c	b.hi	0x37604
0000000000037480	cmp	x10, #0x0
0000000000037484	adr	x11, #0x215fc
0000000000037488	nop
000000000003748c	csel	x10, x11, x10, eq
0000000000037490	add	x11, x12, #0x7
0000000000037494	lsr	x11, x11, #3
0000000000037498	add	x13, x9, x11, lsl #3
000000000003749c	ldr	x13, [x13, #0x8]
00000000000374a0	cmp	x13, x10
00000000000374a4	b.eq	0x37604
00000000000374a8	cmp	x12, #0x9
00000000000374ac	b.hs	0x374b8
00000000000374b0	mov	x12, #0x0
00000000000374b4	b	0x375a8
00000000000374b8	sub	x13, x11, #0x1
00000000000374bc	clz	x14, x13
00000000000374c0	mov	w15, #0x3f
00000000000374c4	sub	w14, w15, w14
00000000000374c8	and	w14, w14, #0xff
00000000000374cc	sub	w15, w14, #0x2
00000000000374d0	lsr	x13, x13, x15
00000000000374d4	and	w13, w13, #0x3
00000000000374d8	bfi	w13, w14, #2, #8
00000000000374dc	sub	w13, w13, #0x3
00000000000374e0	add	w14, w11, #0x1
00000000000374e4	and	w14, w14, #0xfffffffe
00000000000374e8	cmp	x12, #0x40
00000000000374ec	csel	w12, w13, w14, hi
00000000000374f0	add	x13, x9, #0x410
00000000000374f4	mov	x14, x24
00000000000374f8	b	0x37518
00000000000374fc	mov	w16, #0x1
0000000000037500	cmp	x14, x13
0000000000037504	b.ls	0x37598
0000000000037508	sub	x14, x14, #0x18
000000000003750c	and	w17, w12, #0xff
0000000000037510	cmp	w17, w16, uxtb
0000000000037514	b.ne	0x37598
0000000000037518	ldr	x15, [x14, #0x10]
000000000003751c	add	x16, x15, #0x7
0000000000037520	lsr	x15, x16, #3
0000000000037524	cmp	x16, #0x10
0000000000037528	b.lo	0x374fc
000000000003752c	cmp	x16, #0x47
0000000000037530	b.hi	0x37548
0000000000037534	add	w16, w15, #0x1
0000000000037538	and	w16, w16, #0xfffffffe
000000000003753c	cmp	x14, x13
0000000000037540	b.hi	0x37508
0000000000037544	b	0x37598
0000000000037548	mov	w17, #0x7
000000000003754c	movk	w17, #0x20, lsl #16
0000000000037550	cmp	x16, x17
0000000000037554	b.ls	0x37568
0000000000037558	mov	w16, #0x49
000000000003755c	cmp	x14, x13
0000000000037560	b.hi	0x37508
0000000000037564	b	0x37598
0000000000037568	sub	x16, x15, #0x1
000000000003756c	clz	x17, x16
0000000000037570	mov	w0, #0x3f
0000000000037574	sub	w17, w0, w17
0000000000037578	and	w17, w17, #0xff
000000000003757c	sub	w0, w17, #0x2
0000000000037580	lsr	x16, x16, x0
0000000000037584	and	w16, w16, #0x3
0000000000037588	bfi	w16, w17, #2, #8
000000000003758c	sub	w16, w16, #0x3
0000000000037590	cmp	x14, x13
0000000000037594	b.hi	0x37508
0000000000037598	cmp	x15, x11
000000000003759c	csinc	x12, x11, x15, hs
00000000000375a0	cmp	x12, x11
00000000000375a4	b.hi	0x37604
00000000000375a8	sub	x13, x11, x12
00000000000375ac	add	x13, x13, #0x1
00000000000375b0	cmp	x13, #0x4
00000000000375b4	b.lo	0x375e8
00000000000375b8	and	x14, x13, #0xfffffffffffffffc
00000000000375bc	dup.2d	v0, x10
00000000000375c0	add	x15, x9, x12, lsl #3
00000000000375c4	add	x15, x15, #0x18
00000000000375c8	mov	x16, x14
00000000000375cc	stp	q0, q0, [x15, #-0x10]
00000000000375d0	add	x15, x15, #0x20
00000000000375d4	subs	x16, x16, #0x4
00000000000375d8	b.ne	0x375cc
00000000000375dc	cmp	x13, x14
00000000000375e0	b.eq	0x37604
00000000000375e4	add	x12, x12, x14
00000000000375e8	sub	x11, x11, x12
00000000000375ec	add	x11, x11, #0x1
00000000000375f0	add	x12, x9, x12, lsl #3
00000000000375f4	add	x12, x12, #0x8
00000000000375f8	str	x10, [x12], #0x8
00000000000375fc	subs	x11, x11, #0x1
0000000000037600	b.ne	0x375f8
0000000000037604	ldr	x10, [x9, #0xbc8]
0000000000037608	sub	x10, x10, #0x1
000000000003760c	str	x10, [x9, #0xbc8]
0000000000037610	stp	xzr, xzr, [x28]
0000000000037614	ldrb	w9, [x21, #0x6]
0000000000037618	and	w9, w9, #0xfe
000000000003761c	strb	w9, [x21, #0x6]
0000000000037620	add	x9, x21, #0x28
0000000000037624	stlr	xzr, [x9]
0000000000037628	and	x0, x21, #0xffffffffffc00000
000000000003762c	ldr	x9, [x0, #0x28]
0000000000037630	add	x10, x9, #0x1
0000000000037634	str	x10, [x0, #0x28]
0000000000037638	ldr	x13, [x8, #0x90]
000000000003763c	add	x9, x13, #0xe0
0000000000037640	cmp	x9, x22
0000000000037644	ccmp	x9, x25, #0x2, hs
0000000000037648	b.lo	0x37680
000000000003764c	ldp	x14, x12, [x13, #0xf0]
0000000000037650	add	x11, x12, #0x1
0000000000037654	str	x11, [x13, #0xf8]
0000000000037658	cmp	x12, x14
000000000003765c	b.lt	0x37664
0000000000037660	str	x11, [x13, #0xf0]
0000000000037664	ldr	x11, [x9]
0000000000037668	add	x11, x11, #0x1
000000000003766c	str	x11, [x9]
0000000000037670	ldr	x9, [x0, #0x38]
0000000000037674	cmp	x9, x10
0000000000037678	b.ne	0x373f4
000000000003767c	b	0x376f8
0000000000037680	add	x12, x13, #0xf8
0000000000037684	ldxr	x10, [x12]
0000000000037688	add	x11, x10, #0x1
000000000003768c	stxr	w14, x11, [x12]
0000000000037690	cbnz	w14, 0x37684
0000000000037694	add	x12, x13, #0xf0
0000000000037698	ldr	x14, [x13, #0xf0]
000000000003769c	b	0x376b0
00000000000376a0	clrex
00000000000376a4	mov	w15, #0x0
00000000000376a8	mov	x14, x13
00000000000376ac	cbnz	w15, 0x376d8
00000000000376b0	cmp	x14, x10
00000000000376b4	b.gt	0x376d8
00000000000376b8	ldxr	x13, [x12]
00000000000376bc	cmp	x13, x14
00000000000376c0	b.ne	0x376a0
00000000000376c4	stlxr	w14, x11, [x12]
00000000000376c8	cbnz	w14, 0x376a4
00000000000376cc	mov	w15, #0x1
00000000000376d0	mov	x14, x13
00000000000376d4	cbz	w15, 0x376b0
00000000000376d8	ldxr	x10, [x9]
00000000000376dc	add	x10, x10, #0x1
00000000000376e0	stxr	w11, x10, [x9]
00000000000376e4	cbnz	w11, 0x376d8
00000000000376e8	ldr	x10, [x0, #0x28]
00000000000376ec	ldr	x9, [x0, #0x38]
00000000000376f0	cmp	x9, x10
00000000000376f4	b.ne	0x373f4
00000000000376f8	add	x1, x8, #0x20
00000000000376fc	bl	_mi_segment_abandon
0000000000037700	b	0x373f4
0000000000037704	mov	w8, #0x18
0000000000037708	madd	x8, x19, x8, x28
000000000003770c	add	x20, x8, #0x410
0000000000037710	b	0x3773c
0000000000037714	strb	w10, [x8, #0x7]
0000000000037718	ldr	x0, [x20]
000000000003771c	mov	x1, x20
0000000000037720	mov	w2, #0x1
0000000000037724	bl	__mi_page_free
0000000000037728	add	x19, x19, #0x1
000000000003772c	ldr	x8, [x28, #0xbd8]
0000000000037730	add	x20, x20, #0x18
0000000000037734	cmp	x19, x8
0000000000037738	b.hi	0x3736c
000000000003773c	ldr	x8, [x20]
0000000000037740	cbz	x8, 0x37728
0000000000037744	ldrb	w9, [x8, #0x7]
0000000000037748	subs	w10, w9, #0x2
000000000003774c	b.lo	0x37728
0000000000037750	ldr	w11, [x8, #0x10]
0000000000037754	cbz	w11, 0x37714
0000000000037758	and	w9, w9, #0x1
000000000003775c	strb	w9, [x8, #0x7]
0000000000037760	b	0x37728
0000000000037764	mov	x19, #0x0
0000000000037768	mov	w22, #0x18
000000000003776c	b	0x3777c
0000000000037770	add	x19, x19, #0x1
0000000000037774	cmp	x19, #0x4b
0000000000037778	b.eq	0x377c4
000000000003777c	madd	x8, x19, x22, x28
0000000000037780	ldr	x21, [x8, #0x410]
0000000000037784	cbz	x21, 0x37770
0000000000037788	add	x20, x8, #0x410
000000000003778c	b	0x37798
0000000000037790	mov	x21, x23
0000000000037794	cbz	x23, 0x37770
0000000000037798	ldr	x23, [x21, #0x30]
000000000003779c	mov	x0, x21
00000000000377a0	mov	w1, #0x1
00000000000377a4	bl	__mi_page_free_collect
00000000000377a8	ldr	w8, [x21, #0x10]
00000000000377ac	cbnz	w8, 0x37790
00000000000377b0	mov	x0, x21
00000000000377b4	mov	x1, x20
00000000000377b8	mov	w2, #0x1
00000000000377bc	bl	__mi_page_free
00000000000377c0	b	0x37790
00000000000377c4	ldr	x23, [x28]
00000000000377c8	ldr	x20, [x23, #0x88]
00000000000377cc	cbz	x20, 0x37dc0
00000000000377d0	adr	x24, #0x5d0b0
00000000000377d4	nop
00000000000377d8	mov	w25, #0x1039
00000000000377dc	movi.16b	v16, #0x4
00000000000377e0	movi.16b	v17, #0x2
00000000000377e4	adr	x26, #0x5d2dc
00000000000377e8	nop
00000000000377ec	b	0x3781c
00000000000377f0	mov	w4, #0x0
00000000000377f4	mov	w19, #0x1
00000000000377f8	ldr	x2, [x20]
00000000000377fc	and	w3, w19, #0x1
0000000000037800	mov	x0, x20
0000000000037804	mov	x1, x21
0000000000037808	bl	__mi_mem_free
000000000003780c	ldr	x20, [x23, #0x88]
0000000000037810	movi.16b	v16, #0x4
0000000000037814	movi.16b	v17, #0x2
0000000000037818	cbz	x20, 0x37dc0
000000000003781c	ldr	x8, [x23, #0x78]
0000000000037820	sub	x8, x8, #0x1
0000000000037824	str	x8, [x23, #0x78]
0000000000037828	ldr	x8, [x20, #0x18]
000000000003782c	str	x8, [x23, #0x88]
0000000000037830	str	xzr, [x20, #0x18]
0000000000037834	ldr	x8, [x23, #0x90]
0000000000037838	add	x9, x8, #0x1a0
000000000003783c	cmp	x9, x24
0000000000037840	ccmp	x9, x26, #0x2, hs
0000000000037844	b.lo	0x37870
0000000000037848	ldp	x10, x9, [x8, #0x1b0]
000000000003784c	sub	x9, x9, #0x1
0000000000037850	str	x9, [x8, #0x1b8]
0000000000037854	cmp	x9, x10
0000000000037858	b.le	0x37860
000000000003785c	str	x9, [x8, #0x1b0]
0000000000037860	ldr	x9, [x8, #0x1a8]
0000000000037864	add	x9, x9, #0x1
0000000000037868	str	x9, [x8, #0x1a8]
000000000003786c	b	0x378dc
0000000000037870	add	x10, x8, #0x1b8
0000000000037874	ldxr	x9, [x10]
0000000000037878	sub	x9, x9, #0x1
000000000003787c	stxr	w11, x9, [x10]
0000000000037880	cbnz	w11, 0x37874
0000000000037884	add	x10, x8, #0x1b0
0000000000037888	ldr	x12, [x8, #0x1b0]
000000000003788c	b	0x378a0
0000000000037890	clrex
0000000000037894	mov	w13, #0x0
0000000000037898	mov	x12, x11
000000000003789c	cbnz	w13, 0x378c8
00000000000378a0	cmp	x12, x9
00000000000378a4	b.ge	0x378c8
00000000000378a8	ldxr	x11, [x10]
00000000000378ac	cmp	x11, x12
00000000000378b0	b.ne	0x37890
00000000000378b4	stlxr	w12, x9, [x10]
00000000000378b8	cbnz	w12, 0x37894
00000000000378bc	mov	w13, #0x1
00000000000378c0	mov	x12, x11
00000000000378c4	cbz	w13, 0x378a0
00000000000378c8	add	x8, x8, #0x1a8
00000000000378cc	ldxr	x9, [x8]
00000000000378d0	add	x9, x9, #0x1
00000000000378d4	stxr	w10, x9, [x8]
00000000000378d8	cbnz	w10, 0x378cc
00000000000378dc	ldr	x21, [x20, #0x48]
00000000000378e0	add	x8, x20, #0x68
00000000000378e4	stlr	xzr, [x8]
00000000000378e8	ldr	x8, [x23, #0x90]
00000000000378ec	cmp	x8, x24
00000000000378f0	cset	w9, hs
00000000000378f4	add	x10, x24, #0x240
00000000000378f8	cmp	x8, x10
00000000000378fc	cset	w10, lo
0000000000037900	and	w9, w9, w10
0000000000037904	add	x11, x8, #0x18
0000000000037908	cmp	x21, #0x0
000000000003790c	b.le	0x37998
0000000000037910	cbz	w9, 0x37a3c
0000000000037914	ldxr	x9, [x11]
0000000000037918	sub	x9, x9, #0x1
000000000003791c	stxr	w10, x9, [x11]
0000000000037920	cbnz	w10, 0x37914
0000000000037924	add	x10, x8, #0x10
0000000000037928	ldr	x12, [x8, #0x10]
000000000003792c	b	0x37940
0000000000037930	clrex
0000000000037934	mov	w13, #0x0
0000000000037938	mov	x12, x11
000000000003793c	cbnz	w13, 0x37968
0000000000037940	cmp	x12, x9
0000000000037944	b.ge	0x37968
0000000000037948	ldxr	x11, [x10]
000000000003794c	cmp	x11, x12
0000000000037950	b.ne	0x37930
0000000000037954	stlxr	w12, x9, [x10]
0000000000037958	cbnz	w12, 0x37934
000000000003795c	mov	w13, #0x1
0000000000037960	mov	x12, x11
0000000000037964	cbz	w13, 0x37940
0000000000037968	add	x8, x8, #0x8
000000000003796c	ldxr	x9, [x8]
0000000000037970	add	x9, x9, #0x1
0000000000037974	stxr	w10, x9, [x8]
0000000000037978	cbnz	w10, 0x3796c
000000000003797c	mov	x9, #-0x1
0000000000037980	ldp	x8, x10, [x23, #0x58]
0000000000037984	add	x8, x8, x9
0000000000037988	str	x8, [x23, #0x58]
000000000003798c	cmp	x8, x10
0000000000037990	b.hi	0x37a9c
0000000000037994	b	0x37a18
0000000000037998	cbz	w9, 0x37a60
000000000003799c	ldxr	x9, [x11]
00000000000379a0	add	x10, x9, #0x1
00000000000379a4	stxr	w12, x10, [x11]
00000000000379a8	cbnz	w12, 0x3799c
00000000000379ac	add	x11, x8, #0x10
00000000000379b0	ldr	x13, [x8, #0x10]
00000000000379b4	b	0x379c8
00000000000379b8	clrex
00000000000379bc	mov	w14, #0x0
00000000000379c0	mov	x13, x12
00000000000379c4	cbnz	w14, 0x379f0
00000000000379c8	cmp	x13, x9
00000000000379cc	b.gt	0x379f0
00000000000379d0	ldxr	x12, [x11]
00000000000379d4	cmp	x12, x13
00000000000379d8	b.ne	0x379b8
00000000000379dc	stlxr	w13, x10, [x11]
00000000000379e0	cbnz	w13, 0x379bc
00000000000379e4	mov	w14, #0x1
00000000000379e8	mov	x13, x12
00000000000379ec	cbz	w14, 0x379c8
00000000000379f0	ldxr	x9, [x8]
00000000000379f4	add	x9, x9, #0x1
00000000000379f8	stxr	w10, x9, [x8]
00000000000379fc	cbnz	w10, 0x379f0
0000000000037a00	mov	w9, #0x1
0000000000037a04	ldp	x8, x10, [x23, #0x58]
0000000000037a08	add	x8, x8, x9
0000000000037a0c	str	x8, [x23, #0x58]
0000000000037a10	cmp	x8, x10
0000000000037a14	b.hi	0x37a9c
0000000000037a18	ldp	x8, x9, [x23, #0x68]
0000000000037a1c	sub	x8, x8, x21
0000000000037a20	str	x8, [x23, #0x68]
0000000000037a24	cmp	x8, x9
0000000000037a28	b.ls	0x37ab4
0000000000037a2c	str	x8, [x23, #0x70]
0000000000037a30	ldr	x8, [x20, #0x40]
0000000000037a34	cbnz	x8, 0x37abc
0000000000037a38	b	0x377f0
0000000000037a3c	ldp	x10, x9, [x8, #0x10]
0000000000037a40	sub	x9, x9, #0x1
0000000000037a44	str	x9, [x8, #0x18]
0000000000037a48	cmp	x9, x10
0000000000037a4c	b.le	0x37a54
0000000000037a50	str	x9, [x8, #0x10]
0000000000037a54	add	x8, x8, #0x8
0000000000037a58	mov	x9, #-0x1
0000000000037a5c	b	0x37a7c
0000000000037a60	ldp	x11, x10, [x8, #0x10]
0000000000037a64	add	x9, x10, #0x1
0000000000037a68	str	x9, [x8, #0x18]
0000000000037a6c	cmp	x10, x11
0000000000037a70	b.lt	0x37a78
0000000000037a74	str	x9, [x8, #0x10]
0000000000037a78	mov	w9, #0x1
0000000000037a7c	ldr	x10, [x8]
0000000000037a80	add	x10, x10, #0x1
0000000000037a84	str	x10, [x8]
0000000000037a88	ldp	x8, x10, [x23, #0x58]
0000000000037a8c	add	x8, x8, x9
0000000000037a90	str	x8, [x23, #0x58]
0000000000037a94	cmp	x8, x10
0000000000037a98	b.ls	0x37a18
0000000000037a9c	str	x8, [x23, #0x60]
0000000000037aa0	ldp	x8, x9, [x23, #0x68]
0000000000037aa4	sub	x8, x8, x21
0000000000037aa8	str	x8, [x23, #0x68]
0000000000037aac	cmp	x8, x9
0000000000037ab0	b.hi	0x37a2c
0000000000037ab4	ldr	x8, [x20, #0x40]
0000000000037ab8	cbz	x8, 0x377f0
0000000000037abc	cmp	x8, #0x1f
0000000000037ac0	b.hi	0x37ad4
0000000000037ac4	mov	w10, #0x0
0000000000037ac8	mov	x9, #0x0
0000000000037acc	mov	w19, #0x1
0000000000037ad0	b	0x37d70
0000000000037ad4	and	x9, x8, #0xffffffffffffffe0
0000000000037ad8	add	x10, x20, x25
0000000000037adc	movi.16b	v2, #0x1
0000000000037ae0	movi.16b	v0, #0x0
0000000000037ae4	mov	x11, x9
0000000000037ae8	movi.16b	v1, #0x0
0000000000037aec	movi.16b	v3, #0x1
0000000000037af0	sub	x12, x10, #0x7c0
0000000000037af4	prfm	pldl1keep, [x12]
0000000000037af8	sub	x12, x10, #0x780
0000000000037afc	prfm	pldl1keep, [x12]
0000000000037b00	sub	x12, x10, #0xfc0
0000000000037b04	ldr	b4, [x12]
0000000000037b08	sub	x12, x10, #0x740
0000000000037b0c	prfm	pldl1keep, [x12]
0000000000037b10	sub	x12, x10, #0xf80
0000000000037b14	ld1.b	{ v4 }[1], [x12]
0000000000037b18	sub	x12, x10, #0x700
0000000000037b1c	prfm	pldl1keep, [x12]
0000000000037b20	sub	x12, x10, #0xf40
0000000000037b24	ld1.b	{ v4 }[2], [x12]
0000000000037b28	sub	x12, x10, #0x6c0
0000000000037b2c	prfm	pldl1keep, [x12]
0000000000037b30	sub	x12, x10, #0xf00
0000000000037b34	ld1.b	{ v4 }[3], [x12]
0000000000037b38	sub	x12, x10, #0x680
0000000000037b3c	prfm	pldl1keep, [x12]
0000000000037b40	sub	x12, x10, #0xec0
0000000000037b44	ld1.b	{ v4 }[4], [x12]
0000000000037b48	sub	x12, x10, #0x640
0000000000037b4c	prfm	pldl1keep, [x12]
0000000000037b50	sub	x12, x10, #0xe80
0000000000037b54	ld1.b	{ v4 }[5], [x12]
0000000000037b58	sub	x12, x10, #0x600
0000000000037b5c	prfm	pldl1keep, [x12]
0000000000037b60	sub	x12, x10, #0xe40
0000000000037b64	ld1.b	{ v4 }[6], [x12]
0000000000037b68	sub	x12, x10, #0x5c0
0000000000037b6c	prfm	pldl1keep, [x12]
0000000000037b70	sub	x12, x10, #0xe00
0000000000037b74	ld1.b	{ v4 }[7], [x12]
0000000000037b78	sub	x12, x10, #0x580
0000000000037b7c	prfm	pldl1keep, [x12]
0000000000037b80	sub	x12, x10, #0xdc0
0000000000037b84	ld1.b	{ v4 }[8], [x12]
0000000000037b88	sub	x12, x10, #0x540
0000000000037b8c	prfm	pldl1keep, [x12]
0000000000037b90	sub	x12, x10, #0xd80
0000000000037b94	ld1.b	{ v4 }[9], [x12]
0000000000037b98	sub	x12, x10, #0x500
0000000000037b9c	prfm	pldl1keep, [x12]
0000000000037ba0	sub	x12, x10, #0xd40
0000000000037ba4	ld1.b	{ v4 }[10], [x12]
0000000000037ba8	sub	x12, x10, #0x4c0
0000000000037bac	prfm	pldl1keep, [x12]
0000000000037bb0	sub	x12, x10, #0xd00
0000000000037bb4	ld1.b	{ v4 }[11], [x12]
0000000000037bb8	sub	x12, x10, #0x480
0000000000037bbc	prfm	pldl1keep, [x12]
0000000000037bc0	sub	x12, x10, #0xcc0
0000000000037bc4	ld1.b	{ v4 }[12], [x12]
0000000000037bc8	sub	x12, x10, #0x440
0000000000037bcc	prfm	pldl1keep, [x12]
0000000000037bd0	sub	x12, x10, #0xc80
0000000000037bd4	ld1.b	{ v4 }[13], [x12]
0000000000037bd8	sub	x12, x10, #0x400
0000000000037bdc	prfm	pldl1keep, [x12]
0000000000037be0	sub	x12, x10, #0xc40
0000000000037be4	ld1.b	{ v4 }[14], [x12]
0000000000037be8	sub	x12, x10, #0xc00
0000000000037bec	ld1.b	{ v4 }[15], [x12]
0000000000037bf0	sub	x12, x10, #0x3c0
0000000000037bf4	prfm	pldl1keep, [x12]
0000000000037bf8	sub	x12, x10, #0x380
0000000000037bfc	prfm	pldl1keep, [x12]
0000000000037c00	sub	x12, x10, #0xbc0
0000000000037c04	ldr	b5, [x12]
0000000000037c08	sub	x12, x10, #0x340
0000000000037c0c	prfm	pldl1keep, [x12]
0000000000037c10	sub	x12, x10, #0xb80
0000000000037c14	ld1.b	{ v5 }[1], [x12]
0000000000037c18	sub	x12, x10, #0x300
0000000000037c1c	prfm	pldl1keep, [x12]
0000000000037c20	sub	x12, x10, #0xb40
0000000000037c24	ld1.b	{ v5 }[2], [x12]
0000000000037c28	sub	x12, x10, #0x2c0
0000000000037c2c	prfm	pldl1keep, [x12]
0000000000037c30	sub	x12, x10, #0xb00
0000000000037c34	ld1.b	{ v5 }[3], [x12]
0000000000037c38	sub	x12, x10, #0x280
0000000000037c3c	prfm	pldl1keep, [x12]
0000000000037c40	sub	x12, x10, #0xac0
0000000000037c44	ld1.b	{ v5 }[4], [x12]
0000000000037c48	sub	x12, x10, #0x240
0000000000037c4c	prfm	pldl1keep, [x12]
0000000000037c50	sub	x12, x10, #0xa80
0000000000037c54	ld1.b	{ v5 }[5], [x12]
0000000000037c58	sub	x12, x10, #0x200
0000000000037c5c	prfm	pldl1keep, [x12]
0000000000037c60	sub	x12, x10, #0xa40
0000000000037c64	ld1.b	{ v5 }[6], [x12]
0000000000037c68	sub	x12, x10, #0x1c0
0000000000037c6c	prfm	pldl1keep, [x12]
0000000000037c70	sub	x12, x10, #0xa00
0000000000037c74	ld1.b	{ v5 }[7], [x12]
0000000000037c78	sub	x12, x10, #0x180
0000000000037c7c	prfm	pldl1keep, [x12]
0000000000037c80	sub	x12, x10, #0x9c0
0000000000037c84	ld1.b	{ v5 }[8], [x12]
0000000000037c88	sub	x12, x10, #0x140
0000000000037c8c	prfm	pldl1keep, [x12]
0000000000037c90	sub	x12, x10, #0x980
0000000000037c94	ld1.b	{ v5 }[9], [x12]
0000000000037c98	sub	x12, x10, #0x940
0000000000037c9c	prfum	pldl1keep, [x10, #-0x100]
0000000000037ca0	ld1.b	{ v5 }[10], [x12]
0000000000037ca4	sub	x12, x10, #0x900
0000000000037ca8	prfum	pldl1keep, [x10, #-0xc0]
0000000000037cac	ld1.b	{ v5 }[11], [x12]
0000000000037cb0	sub	x12, x10, #0x8c0
0000000000037cb4	prfum	pldl1keep, [x10, #-0x80]
0000000000037cb8	ld1.b	{ v5 }[12], [x12]
0000000000037cbc	sub	x12, x10, #0x880
0000000000037cc0	prfum	pldl1keep, [x10, #-0x40]
0000000000037cc4	ld1.b	{ v5 }[13], [x12]
0000000000037cc8	sub	x12, x10, #0x840
0000000000037ccc	prfm	pldl1keep, [x10]
0000000000037cd0	ld1.b	{ v5 }[14], [x12]
0000000000037cd4	sub	x12, x10, #0x800
0000000000037cd8	ld1.b	{ v5 }[15], [x12]
0000000000037cdc	and.16b	v6, v4, v16
0000000000037ce0	and.16b	v7, v5, v16
0000000000037ce4	cmeq.16b	v6, v6, #0
0000000000037ce8	cmeq.16b	v7, v7, #0
0000000000037cec	bic.16b	v2, v2, v6
0000000000037cf0	and.16b	v4, v4, v17
0000000000037cf4	and.16b	v5, v5, v17
0000000000037cf8	bic.16b	v3, v3, v7
0000000000037cfc	cmeq.16b	v4, v4, #0
0000000000037d00	cmeq.16b	v5, v5, #0
0000000000037d04	orn.16b	v0, v0, v4
0000000000037d08	orn.16b	v1, v1, v5
0000000000037d0c	add	x10, x10, #0x800
0000000000037d10	subs	x11, x11, #0x20
0000000000037d14	b.ne	0x37af0
0000000000037d18	and.16b	v2, v3, v2
0000000000037d1c	dup.2d	v3, v2[1]
0000000000037d20	and.16b	v2, v2, v3
0000000000037d24	dup.4s	v3, v2[1]
0000000000037d28	and.16b	v2, v2, v3
0000000000037d2c	dup.8h	v3, v2[1]
0000000000037d30	and.16b	v2, v2, v3
0000000000037d34	dup.16b	v3, v2[1]
0000000000037d38	and.16b	v2, v2, v3
0000000000037d3c	umov.b	w19, v2[0]
0000000000037d40	orr.16b	v0, v1, v0
0000000000037d44	dup.2d	v1, v0[1]
0000000000037d48	orr.16b	v0, v0, v1
0000000000037d4c	dup.4s	v1, v0[1]
0000000000037d50	orr.16b	v0, v0, v1
0000000000037d54	dup.8h	v1, v0[1]
0000000000037d58	orr.16b	v0, v0, v1
0000000000037d5c	dup.16b	v1, v0[1]
0000000000037d60	orr.16b	v0, v0, v1
0000000000037d64	umov.b	w10, v0[0]
0000000000037d68	cmp	x8, x9
0000000000037d6c	b.eq	0x37d98
0000000000037d70	sub	x8, x8, x9
0000000000037d74	add	x9, x20, x9, lsl #6
0000000000037d78	add	x9, x9, #0x79
0000000000037d7c	ldrb	w11, [x9], #0x40
0000000000037d80	and	w12, w11, #0x4
0000000000037d84	and	w19, w19, w12, lsr #2
0000000000037d88	and	w11, w11, #0x2
0000000000037d8c	orr	w10, w10, w11, lsr #1
0000000000037d90	subs	x8, x8, #0x1
0000000000037d94	b.ne	0x37d7c
0000000000037d98	tbz	w10, #0x0, 0x37db8
0000000000037d9c	mov	w0, #0x5
0000000000037da0	bl	_mi_option_get
0000000000037da4	cmp	x0, #0x0
0000000000037da8	cset	w8, eq
0000000000037dac	and	w19, w19, w8
0000000000037db0	mov	w4, #0x1
0000000000037db4	b	0x377f8
0000000000037db8	mov	w4, #0x0
0000000000037dbc	b	0x377f8
0000000000037dc0	nop
0000000000037dc4	ldr	x19, #0x40cbc
0000000000037dc8	cbz	x19, 0x37ddc
0000000000037dcc	bl	0x556c8 ; symbol stub for: _pthread_self
0000000000037dd0	bl	0x55680 ; symbol stub for: _pthread_mach_thread_np
0000000000037dd4	cmp	x19, w0, uxtw
0000000000037dd8	b.ne	0x37dec
0000000000037ddc	ldr	x8, [x28]
0000000000037de0	ldr	x8, [x8, #0x10]
0000000000037de4	cmp	x8, x28
0000000000037de8	b.eq	0x37e0c
0000000000037dec	ldp	x29, x30, [sp, #0x60]
0000000000037df0	ldp	x20, x19, [sp, #0x50]
0000000000037df4	ldp	x22, x21, [sp, #0x40]
0000000000037df8	ldp	x24, x23, [sp, #0x30]
0000000000037dfc	ldp	x26, x25, [sp, #0x20]
0000000000037e00	ldp	x28, x27, [sp, #0x10]
0000000000037e04	add	sp, sp, #0x70
0000000000037e08	ret
0000000000037e0c	nop
0000000000037e10	ldr	x19, #0x5c5a0
0000000000037e14	cbz	x19, 0x37dec
0000000000037e18	mov	x20, #0x0
0000000000037e1c	adr	x21, #0x4c42c
0000000000037e20	nop
0000000000037e24	mov	x22, #-0x1
0000000000037e28	adr	x23, #0x5c598
0000000000037e2c	nop
0000000000037e30	b	0x37e40
0000000000037e34	add	x20, x20, #0x1
0000000000037e38	cmp	x20, x19
0000000000037e3c	b.eq	0x37dec
0000000000037e40	add	x8, x21, x20, lsl #6
0000000000037e44	ldr	x9, [x8]
0000000000037e48	cbz	x9, 0x37e34
0000000000037e4c	add	x9, x8, #0x10
0000000000037e50	ldr	x10, [x8, #0x10]
0000000000037e54	b	0x37e64
0000000000037e58	clrex
0000000000037e5c	mov	w11, #0x0
0000000000037e60	cbnz	w11, 0x37e80
0000000000037e64	cbnz	x10, 0x37e34
0000000000037e68	ldxr	x10, [x9]
0000000000037e6c	cbnz	x10, 0x37e58
0000000000037e70	stlxr	w11, x22, [x9]
0000000000037e74	cbnz	w11, 0x37e5c
0000000000037e78	mov	w11, #0x1
0000000000037e7c	cbz	w11, 0x37e64
0000000000037e80	add	x9, x21, x20, lsl #6
0000000000037e84	add	x10, x9, #0x8
0000000000037e88	ldar	x0, [x10]
0000000000037e8c	ldr	x2, [x9, #0x30]
0000000000037e90	ldr	x9, [x9, #0x20]
0000000000037e94	movi.16b	v0, #0x0
0000000000037e98	stp	q0, q0, [x8, #0x20]
0000000000037e9c	stp	q0, q0, [x8]
0000000000037ea0	stlr	xzr, [x8]
0000000000037ea4	cbnz	x0, 0x37eb0
0000000000037ea8	b	0x37e34
0000000000037eac	wfe
0000000000037eb0	ldar	x8, [x23]
0000000000037eb4	cbnz	x8, 0x37eac
0000000000037eb8	cmn	x9, #0x1
0000000000037ebc	cset	w3, eq
0000000000037ec0	mov	w1, #0x10000000
0000000000037ec4	bl	__mi_arena_free
0000000000037ec8	b	0x37e34
0000000000037ecc	add	x20, x8, #0x20
0000000000037ed0	adrp	x21, 93 ; 0x94000
0000000000037ed4	adrp	x22, 93 ; 0x94000
0000000000037ed8	adr	x23, #0x5c5a8
0000000000037edc	nop
0000000000037ee0	adrp	x24, 93 ; 0x94000
0000000000037ee4	adr	x25, #0x5c51c
0000000000037ee8	nop
0000000000037eec	adr	x26, #0x5c554
0000000000037ef0	nop
0000000000037ef4	adr	x27, #0x5c5cc
0000000000037ef8	nop
0000000000037efc	adr	x19, #0x5c4c4
0000000000037f00	nop
0000000000037f04	ldr	x8, [x21, #0x400]
0000000000037f08	lsr	x8, x8, #22
0000000000037f0c	cbnz	x8, 0x37fe4
0000000000037f10	ldr	x8, [x22, #0x480]
0000000000037f14	cbz	x8, 0x37250
0000000000037f18	ldaxr	x8, [x23]
0000000000037f1c	stlxr	w9, xzr, [x23]
0000000000037f20	cbnz	w9, 0x37f18
0000000000037f24	cbz	x8, 0x37250
0000000000037f28	ldr	x10, [x21, #0x400]
0000000000037f2c	lsr	x9, x10, #22
0000000000037f30	cbnz	x9, 0x37f60
0000000000037f34	ldr	x9, [x24, #0x4c0]
0000000000037f38	add	w11, w10, #0x1
0000000000037f3c	and	x11, x11, #0x3fffff
0000000000037f40	orr	x11, x11, x8
0000000000037f44	ldaxr	x12, [x25]
0000000000037f48	cmp	x12, x10
0000000000037f4c	b.ne	0x37f5c
0000000000037f50	stlxr	w12, x11, [x25]
0000000000037f54	cbnz	w12, 0x37f44
0000000000037f58	b	0x37fc4
0000000000037f5c	clrex
0000000000037f60	mov	x9, x8
0000000000037f64	mov	x10, x9
0000000000037f68	ldr	x9, [x9, #0x10]
0000000000037f6c	cbnz	x9, 0x37f64
0000000000037f70	ldr	x12, [x21, #0x400]
0000000000037f74	b	0x37f88
0000000000037f78	clrex
0000000000037f7c	mov	w13, #0x0
0000000000037f80	mov	x12, x11
0000000000037f84	cbnz	w13, 0x37fc4
0000000000037f88	ldr	x9, [x25, #0xc0]
0000000000037f8c	and	x11, x12, #0xffffffffffc00000
0000000000037f90	add	x13, x10, #0x10
0000000000037f94	stlr	x11, [x13]
0000000000037f98	ldxr	x11, [x25]
0000000000037f9c	cmp	x11, x12
0000000000037fa0	b.ne	0x37f78
0000000000037fa4	add	w12, w12, #0x1
0000000000037fa8	and	x12, x12, #0x3fffff
0000000000037fac	orr	x12, x12, x8
0000000000037fb0	stlxr	w13, x12, [x25]
0000000000037fb4	cbnz	w13, 0x37f7c
0000000000037fb8	mov	w13, #0x1
0000000000037fbc	mov	x12, x11
0000000000037fc0	cbz	w13, 0x37f88
0000000000037fc4	ldxr	x8, [x26]
0000000000037fc8	add	x8, x8, x9
0000000000037fcc	stxr	w10, x8, [x26]
0000000000037fd0	cbnz	w10, 0x37fc4
0000000000037fd4	ldxr	x8, [x27]
0000000000037fd8	sub	x8, x8, x9
0000000000037fdc	stxr	w10, x8, [x27]
0000000000037fe0	cbnz	w10, 0x37fd4
0000000000037fe4	ldxr	x8, [x19]
0000000000037fe8	add	x8, x8, #0x1
0000000000037fec	stxr	w9, x8, [x19]
0000000000037ff0	cbnz	w9, 0x37fe4
0000000000037ff4	ldar	x9, [x25]
0000000000037ff8	b	0x3800c
0000000000037ffc	clrex
0000000000038000	mov	w10, #0x0
0000000000038004	mov	x9, x8
0000000000038008	cbnz	w10, 0x38044
000000000003800c	ands	x0, x9, #0xffffffffffc00000
0000000000038010	b.eq	0x38090
0000000000038014	ldr	x10, [x0, #0x10]
0000000000038018	ldaxr	x8, [x25]
000000000003801c	cmp	x8, x9
0000000000038020	b.ne	0x37ffc
0000000000038024	add	w9, w9, #0x1
0000000000038028	and	x9, x9, #0x3fffff
000000000003802c	orr	x9, x10, x9
0000000000038030	stlxr	w10, x9, [x25]
0000000000038034	cbnz	w10, 0x38000
0000000000038038	mov	w10, #0x1
000000000003803c	mov	x9, x8
0000000000038040	cbz	w10, 0x3800c
0000000000038044	ldxr	x8, [x19]
0000000000038048	sub	x8, x8, #0x1
000000000003804c	stxr	w9, x8, [x19]
0000000000038050	cbnz	w9, 0x38044
0000000000038054	add	x8, x0, #0x10
0000000000038058	stlr	xzr, [x8]
000000000003805c	ldxr	x8, [x26]
0000000000038060	sub	x8, x8, #0x1
0000000000038064	stxr	w9, x8, [x26]
0000000000038068	cbnz	w9, 0x3805c
000000000003806c	mov	x1, x28
0000000000038070	mov	x2, #0x0
0000000000038074	mov	x3, #0x0
0000000000038078	mov	x4, x20
000000000003807c	bl	_mi_segment_reclaim
0000000000038080	ldr	x8, [x21, #0x400]
0000000000038084	lsr	x8, x8, #22
0000000000038088	cbz	x8, 0x37f10
000000000003808c	b	0x37fe4
0000000000038090	mov	w21, #0x0
0000000000038094	ldxr	x8, [x19]
0000000000038098	sub	x8, x8, #0x1
000000000003809c	stxr	w9, x8, [x19]
00000000000380a0	cbnz	w9, 0x38094
00000000000380a4	b	0x37310
__mi_page_free_collect:
00000000000380a8	stp	x20, x19, [sp, #-0x20]!
00000000000380ac	stp	x29, x30, [sp, #0x10]
00000000000380b0	add	x29, sp, #0x10
00000000000380b4	mov	x20, x1
00000000000380b8	mov	x19, x0
00000000000380bc	tbnz	w1, #0x0, 0x380cc
00000000000380c0	ldr	x8, [x19, #0x20]
00000000000380c4	cmp	x8, #0x4
00000000000380c8	b.lo	0x3814c
00000000000380cc	add	x8, x19, #0x20
00000000000380d0	ldr	x9, [x19, #0x20]
00000000000380d4	b	0x380e4
00000000000380d8	clrex
00000000000380dc	mov	w11, #0x0
00000000000380e0	cbnz	w11, 0x38108
00000000000380e4	mov	x10, x9
00000000000380e8	ldaxr	x9, [x8]
00000000000380ec	cmp	x9, x10
00000000000380f0	b.ne	0x380d8
00000000000380f4	and	x11, x10, #0x3
00000000000380f8	stlxr	w12, x11, [x8]
00000000000380fc	cbnz	w12, 0x380dc
0000000000038100	mov	w11, #0x1
0000000000038104	cbz	w11, 0x380e4
0000000000038108	ands	x8, x10, #0xfffffffffffffffc
000000000003810c	b.eq	0x3814c
0000000000038110	mov	w9, #0x0
0000000000038114	ldrh	w10, [x19, #0x2]
0000000000038118	mov	x12, x8
000000000003811c	mov	x11, x12
0000000000038120	add	w9, w9, #0x1
0000000000038124	ldr	x12, [x12]
0000000000038128	cmp	w9, w10
000000000003812c	ccmp	x12, #0x0, #0x4, ls
0000000000038130	b.ne	0x3811c
0000000000038134	cmp	w9, w10
0000000000038138	b.ls	0x3817c
000000000003813c	adr	x1, #0x26499 ; literal pool for: "corrupted thread-free list\n"
0000000000038140	nop
0000000000038144	mov	w0, #0xe
0000000000038148	bl	__mi_error_message
000000000003814c	ldr	x8, [x19, #0x18]
0000000000038150	cbz	x8, 0x38170
0000000000038154	ldr	x9, [x19, #0x8]
0000000000038158	cbnz	x9, 0x381a0
000000000003815c	str	x8, [x19, #0x8]
0000000000038160	str	xzr, [x19, #0x18]
0000000000038164	ldrb	w8, [x19, #0x7]
0000000000038168	and	w8, w8, #0xfe
000000000003816c	strb	w8, [x19, #0x7]
0000000000038170	ldp	x29, x30, [sp, #0x10]
0000000000038174	ldp	x20, x19, [sp], #0x20
0000000000038178	ret
000000000003817c	ldr	x10, [x19, #0x18]
0000000000038180	str	x10, [x11]
0000000000038184	str	x8, [x19, #0x18]
0000000000038188	ldr	w8, [x19, #0x10]
000000000003818c	sub	w8, w8, w9
0000000000038190	str	w8, [x19, #0x10]
0000000000038194	ldr	x8, [x19, #0x18]
0000000000038198	cbnz	x8, 0x38154
000000000003819c	b	0x38170
00000000000381a0	cbz	w20, 0x38170
00000000000381a4	mov	x11, x8
00000000000381a8	mov	x10, x11
00000000000381ac	ldr	x11, [x11]
00000000000381b0	cbnz	x11, 0x381a8
00000000000381b4	str	x9, [x10]
00000000000381b8	b	0x3815c
__mi_page_free:
00000000000381bc	mov	x8, x2
00000000000381c0	ldrb	w9, [x0, #0x6]
00000000000381c4	and	w9, w9, #0xfffffffd
00000000000381c8	strb	w9, [x0, #0x6]
00000000000381cc	ldr	x9, [x0, #0x28]
00000000000381d0	ldr	x10, [x9]
00000000000381d4	ldr	x9, [x0, #0x28]
00000000000381d8	ldr	x13, [x0, #0x38]
00000000000381dc	cbz	x13, 0x381e8
00000000000381e0	ldr	x11, [x0, #0x30]
00000000000381e4	str	x11, [x13, #0x30]
00000000000381e8	mov	x11, x0
00000000000381ec	ldr	x12, [x11, #0x30]!
00000000000381f0	cbz	x12, 0x381f8
00000000000381f4	str	x13, [x12, #0x38]
00000000000381f8	ldr	x13, [x1, #0x8]
00000000000381fc	cmp	x13, x0
0000000000038200	b.eq	0x38214
0000000000038204	ldr	x13, [x1]
0000000000038208	cmp	x13, x0
000000000003820c	b.ne	0x383a0
0000000000038210	b	0x38228
0000000000038214	ldr	x13, [x0, #0x38]
0000000000038218	str	x13, [x1, #0x8]
000000000003821c	ldr	x13, [x1]
0000000000038220	cmp	x13, x0
0000000000038224	b.ne	0x383a0
0000000000038228	str	x12, [x1]
000000000003822c	ldr	x15, [x1, #0x10]
0000000000038230	cmp	x15, #0x400
0000000000038234	b.hi	0x383a0
0000000000038238	adr	x13, #0x20848
000000000003823c	nop
0000000000038240	cmp	x12, #0x0
0000000000038244	csel	x12, x13, x12, eq
0000000000038248	add	x13, x15, #0x7
000000000003824c	lsr	x13, x13, #3
0000000000038250	add	x14, x9, x13, lsl #3
0000000000038254	ldr	x14, [x14, #0x8]
0000000000038258	cmp	x14, x12
000000000003825c	b.eq	0x383a0
0000000000038260	cmp	x15, #0x9
0000000000038264	b.hs	0x38270
0000000000038268	mov	x14, #0x0
000000000003826c	b	0x38344
0000000000038270	sub	x16, x13, #0x1
0000000000038274	clz	x17, x16
0000000000038278	mov	w14, #0x3f
000000000003827c	sub	w17, w14, w17
0000000000038280	and	w17, w17, #0xff
0000000000038284	sub	w2, w17, #0x2
0000000000038288	lsr	x16, x16, x2
000000000003828c	and	w16, w16, #0x3
0000000000038290	bfi	w16, w17, #2, #8
0000000000038294	sub	w16, w16, #0x3
0000000000038298	add	w17, w13, #0x1
000000000003829c	and	w17, w17, #0xfffffffe
00000000000382a0	cmp	x15, #0x40
00000000000382a4	csel	w17, w16, w17, hi
00000000000382a8	add	x15, x9, #0x410
00000000000382ac	sub	x16, x1, #0x18
00000000000382b0	and	w17, w17, #0xff
00000000000382b4	mov	w1, #0x7
00000000000382b8	movk	w1, #0x20, lsl #16
00000000000382bc	ldr	x2, [x16, #0x10]
00000000000382c0	add	x3, x2, #0x7
00000000000382c4	lsr	x2, x3, #3
00000000000382c8	cmp	x3, #0x10
00000000000382cc	b.hs	0x382d8
00000000000382d0	mov	w3, #0x1
00000000000382d4	b	0x38320
00000000000382d8	cmp	x3, #0x47
00000000000382dc	b.hi	0x382ec
00000000000382e0	add	w3, w2, #0x1
00000000000382e4	and	w3, w3, #0xfffffffe
00000000000382e8	b	0x38320
00000000000382ec	cmp	x3, x1
00000000000382f0	b.ls	0x382fc
00000000000382f4	mov	w3, #0x49
00000000000382f8	b	0x38320
00000000000382fc	sub	x3, x2, #0x1
0000000000038300	clz	x4, x3
0000000000038304	sub	w4, w14, w4
0000000000038308	and	w4, w4, #0xff
000000000003830c	sub	w5, w4, #0x2
0000000000038310	lsr	x3, x3, x5
0000000000038314	and	w3, w3, #0x3
0000000000038318	bfi	w3, w4, #2, #8
000000000003831c	sub	w3, w3, #0x3
0000000000038320	cmp	x16, x15
0000000000038324	b.ls	0x38334
0000000000038328	sub	x16, x16, #0x18
000000000003832c	cmp	w17, w3, uxtb
0000000000038330	b.eq	0x382bc
0000000000038334	cmp	x2, x13
0000000000038338	csinc	x14, x13, x2, hs
000000000003833c	cmp	x14, x13
0000000000038340	b.hi	0x383a0
0000000000038344	sub	x15, x13, x14
0000000000038348	add	x15, x15, #0x1
000000000003834c	cmp	x15, #0x4
0000000000038350	b.lo	0x38384
0000000000038354	and	x16, x15, #0xfffffffffffffffc
0000000000038358	dup.2d	v0, x12
000000000003835c	add	x17, x9, x14, lsl #3
0000000000038360	add	x17, x17, #0x18
0000000000038364	mov	x1, x16
0000000000038368	stp	q0, q0, [x17, #-0x10]
000000000003836c	add	x17, x17, #0x20
0000000000038370	subs	x1, x1, #0x4
0000000000038374	b.ne	0x38368
0000000000038378	cmp	x15, x16
000000000003837c	b.eq	0x383a0
0000000000038380	add	x14, x14, x16
0000000000038384	sub	x13, x13, x14
0000000000038388	add	x13, x13, #0x1
000000000003838c	add	x14, x9, x14, lsl #3
0000000000038390	add	x14, x14, #0x8
0000000000038394	str	x12, [x14], #0x8
0000000000038398	subs	x13, x13, #0x1
000000000003839c	b.ne	0x38394
00000000000383a0	add	x2, x10, #0x20
00000000000383a4	ldr	x10, [x9, #0xbc8]
00000000000383a8	sub	x10, x10, #0x1
00000000000383ac	str	x10, [x9, #0xbc8]
00000000000383b0	stp	xzr, xzr, [x11]
00000000000383b4	ldrb	w9, [x0, #0x6]
00000000000383b8	and	w9, w9, #0xfe
00000000000383bc	strb	w9, [x0, #0x6]
00000000000383c0	add	x9, x0, #0x28
00000000000383c4	stlr	xzr, [x9]
00000000000383c8	mov	x1, x8
00000000000383cc	b	__mi_segment_page_free
__mi_arena_free:
00000000000383d0	sub	sp, sp, #0x60
00000000000383d4	stp	x24, x23, [sp, #0x20]
00000000000383d8	stp	x22, x21, [sp, #0x30]
00000000000383dc	stp	x20, x19, [sp, #0x40]
00000000000383e0	stp	x29, x30, [sp, #0x50]
00000000000383e4	add	x29, sp, #0x50
00000000000383e8	cbz	x0, 0x384d4
00000000000383ec	mov	x20, x1
00000000000383f0	cbz	x1, 0x384d4
00000000000383f4	mov	x19, x0
00000000000383f8	cbz	x2, 0x38484
00000000000383fc	adr	x8, #0x5be84
0000000000038400	nop
0000000000038404	add	x8, x8, w2, uxtb #3
0000000000038408	ldr	x23, [x8, #0x3f8]
000000000003840c	cbz	x23, 0x384a8
0000000000038410	ldr	x8, [x23, #0x10]
0000000000038414	cmp	x8, x2, lsr #14
0000000000038418	b.ls	0x384bc
000000000003841c	lsr	x21, x2, #8
0000000000038420	mov	w8, #0xffffff
0000000000038424	add	x8, x20, x8
0000000000038428	lsr	x22, x8, #24
000000000003842c	ldrb	w9, [x23, #0x1d]
0000000000038430	cbnz	w9, 0x3845c
0000000000038434	and	x1, x8, #0xffffffffff000000
0000000000038438	add	x4, sp, #0x1f
000000000003843c	mov	x0, x19
0000000000038440	mov	w2, #0x0
0000000000038444	mov	w3, #0x1
0000000000038448	bl	_mi_os_commitx
000000000003844c	ldr	x0, [x23, #0x30]
0000000000038450	mov	x1, x22
0000000000038454	mov	x2, x21
0000000000038458	bl	__mi_bitmap_unclaim_across
000000000003845c	add	x0, x23, #0x38
0000000000038460	mov	x1, x22
0000000000038464	mov	x2, x21
0000000000038468	bl	__mi_bitmap_unclaim_across
000000000003846c	tbnz	w0, #0x0, 0x384d4
0000000000038470	stp	x19, x20, [sp]
0000000000038474	adr	x1, #0x260b9 ; literal pool for: "trying to free an already freed block: %p, size %zu\n"
0000000000038478	nop
000000000003847c	mov	w0, #0x23
0000000000038480	b	0x384d0
0000000000038484	mov	x0, x19
0000000000038488	mov	x1, x20
000000000003848c	mov	x2, x3
0000000000038490	ldp	x29, x30, [sp, #0x50]
0000000000038494	ldp	x20, x19, [sp, #0x40]
0000000000038498	ldp	x22, x21, [sp, #0x30]
000000000003849c	ldp	x24, x23, [sp, #0x20]
00000000000384a0	add	sp, sp, #0x60
00000000000384a4	b	__mi_os_free_ex
00000000000384a8	stp	x20, x2, [sp, #0x8]
00000000000384ac	str	x19, [sp]
00000000000384b0	adr	x1, #0x25fef ; literal pool for: "trying to free from non-existent arena: %p, size %zu, memid: 0x%zx\n"
00000000000384b4	nop
00000000000384b8	b	0x384cc
00000000000384bc	stp	x20, x2, [sp, #0x8]
00000000000384c0	str	x19, [sp]
00000000000384c4	adr	x1, #0x2601f ; literal pool for: "trying to free from non-existent arena block: %p, size %zu, memid: 0x%zx\n"
00000000000384c8	nop
00000000000384cc	mov	w0, #0x16
00000000000384d0	bl	__mi_error_message
00000000000384d4	ldp	x29, x30, [sp, #0x50]
00000000000384d8	ldp	x20, x19, [sp, #0x40]
00000000000384dc	ldp	x22, x21, [sp, #0x30]
00000000000384e0	ldp	x24, x23, [sp, #0x20]
00000000000384e4	add	sp, sp, #0x60
00000000000384e8	ret
__mi_bitmap_unclaim_across:
00000000000384ec	lsr	x12, x2, #6
00000000000384f0	ands	x8, x2, #0x3f
00000000000384f4	add	x9, x8, x1
00000000000384f8	mov	w10, #0x40
00000000000384fc	sub	x10, x10, x8
0000000000038500	neg	x11, x8
0000000000038504	mov	x13, #-0x1
0000000000038508	lsl	x11, x13, x11
000000000003850c	mvn	x11, x11
0000000000038510	lsl	x11, x11, x8
0000000000038514	csinv	x11, x11, xzr, ne
0000000000038518	sub	x10, x1, x10
000000000003851c	lsr	x14, x10, #6
0000000000038520	ands	x10, x10, #0x3f
0000000000038524	lsl	x10, x13, x10
0000000000038528	csel	x13, x13, x13, eq
000000000003852c	csinv	x15, xzr, x10, eq
0000000000038530	mov	x10, #-0x1
0000000000038534	lsl	x16, x10, x1
0000000000038538	mvn	x16, x16
000000000003853c	lsl	x8, x16, x8
0000000000038540	cmp	x1, #0x0
0000000000038544	csel	x16, xzr, xzr, eq
0000000000038548	csel	x8, xzr, x8, eq
000000000003854c	cmp	x1, #0x3f
0000000000038550	csel	x16, xzr, x16, hi
0000000000038554	csel	x8, x10, x8, hi
0000000000038558	cmp	x9, #0x40
000000000003855c	csel	x9, x13, x16, hi
0000000000038560	csel	x10, x11, x8, hi
0000000000038564	csel	x8, x15, x16, hi
0000000000038568	csel	x11, x14, x16, hi
000000000003856c	add	x12, x0, x12, lsl #3
0000000000038570	mvn	x13, x10
0000000000038574	ldaxr	x14, [x12]
0000000000038578	and	x15, x14, x13
000000000003857c	stlxr	w16, x15, [x12]
0000000000038580	cbnz	w16, 0x38574
0000000000038584	bics	xzr, x10, x14
0000000000038588	cset	w0, eq
000000000003858c	add	x10, x12, #0x8
0000000000038590	cbz	x11, 0x385c0
0000000000038594	mvn	x12, x9
0000000000038598	sub	x11, x11, #0x1
000000000003859c	ldaxr	x13, [x10]
00000000000385a0	and	x14, x13, x12
00000000000385a4	stlxr	w15, x14, [x10]
00000000000385a8	cbnz	w15, 0x3859c
00000000000385ac	bics	xzr, x9, x13
00000000000385b0	cset	w13, eq
00000000000385b4	and	w0, w0, w13
00000000000385b8	add	x10, x10, #0x8
00000000000385bc	cbnz	x11, 0x38598
00000000000385c0	cbz	x8, 0x385e4
00000000000385c4	mvn	x9, x8
00000000000385c8	ldaxr	x11, [x10]
00000000000385cc	and	x12, x11, x9
00000000000385d0	stlxr	w13, x12, [x10]
00000000000385d4	cbnz	w13, 0x385c8
00000000000385d8	bics	xzr, x8, x11
00000000000385dc	cset	w8, eq
00000000000385e0	and	w0, w0, w8
00000000000385e4	ret
_mi_os_commitx:
00000000000385e8	sub	sp, sp, #0x50
00000000000385ec	stp	x22, x21, [sp, #0x20]
00000000000385f0	stp	x20, x19, [sp, #0x30]
00000000000385f4	stp	x29, x30, [sp, #0x40]
00000000000385f8	add	x29, sp, #0x40
00000000000385fc	cbz	x4, 0x38604
0000000000038600	strb	wzr, [x4]
0000000000038604	mov	w8, #0x1
0000000000038608	cbz	x0, 0x3865c
000000000003860c	cbz	x1, 0x3865c
0000000000038610	nop
0000000000038614	ldr	x8, #0x4174c
0000000000038618	fmov	d0, x8
000000000003861c	cnt.8b	v0, v0
0000000000038620	uaddlv.8b	h0, v0
0000000000038624	fmov	w9, s0
0000000000038628	cbz	w3, 0x38674
000000000003862c	add	x10, x8, x0
0000000000038630	sub	x10, x10, #0x1
0000000000038634	cmp	x9, #0x2
0000000000038638	b.hs	0x387b8
000000000003863c	neg	x8, x8
0000000000038640	and	x19, x10, x8
0000000000038644	add	x9, x0, x1
0000000000038648	and	x8, x8, x9
000000000003864c	sub	x20, x8, x19
0000000000038650	cmp	x20, #0x1
0000000000038654	b.ge	0x386a0
0000000000038658	mov	w8, #0x1
000000000003865c	mov	x0, x8
0000000000038660	ldp	x29, x30, [sp, #0x40]
0000000000038664	ldp	x20, x19, [sp, #0x30]
0000000000038668	ldp	x22, x21, [sp, #0x20]
000000000003866c	add	sp, sp, #0x50
0000000000038670	ret
0000000000038674	cmp	x9, #0x2
0000000000038678	b.hs	0x387dc
000000000003867c	neg	x9, x8
0000000000038680	and	x19, x9, x0
0000000000038684	add	x10, x0, x1
0000000000038688	add	x8, x8, x10
000000000003868c	sub	x8, x8, #0x1
0000000000038690	and	x8, x8, x9
0000000000038694	sub	x20, x8, x19
0000000000038698	cmp	x20, #0x1
000000000003869c	b.lt	0x38658
00000000000386a0	cbz	w2, 0x3872c
00000000000386a4	adr	x9, #0x5c254
00000000000386a8	nop
00000000000386ac	ldxr	x8, [x9]
00000000000386b0	add	x8, x8, x1
00000000000386b4	stxr	w10, x8, [x9]
00000000000386b8	cbnz	w10, 0x386ac
00000000000386bc	nop
00000000000386c0	ldr	x11, #0x5c230
00000000000386c4	adr	x9, #0x5c22c
00000000000386c8	nop
00000000000386cc	b	0x386e0
00000000000386d0	clrex
00000000000386d4	mov	w12, #0x0
00000000000386d8	mov	x11, x10
00000000000386dc	cbnz	w12, 0x38708
00000000000386e0	cmp	x11, x8
00000000000386e4	b.ge	0x38708
00000000000386e8	ldxr	x10, [x9]
00000000000386ec	cmp	x10, x11
00000000000386f0	b.ne	0x386d0
00000000000386f4	stlxr	w11, x8, [x9]
00000000000386f8	cbnz	w11, 0x386d4
00000000000386fc	mov	w12, #0x1
0000000000038700	mov	x11, x10
0000000000038704	cbz	w12, 0x386e0
0000000000038708	cmp	x1, #0x1
000000000003870c	b.lt	0x38808
0000000000038710	adr	x8, #0x5c1d0
0000000000038714	nop
0000000000038718	ldxr	x9, [x8]
000000000003871c	add	x9, x9, x1
0000000000038720	stxr	w10, x9, [x8]
0000000000038724	cbnz	w10, 0x38718
0000000000038728	b	0x38824
000000000003872c	neg	x8, x1
0000000000038730	adr	x9, #0x5c1c8
0000000000038734	nop
0000000000038738	ldxr	x10, [x9]
000000000003873c	add	x11, x10, x8
0000000000038740	stxr	w12, x11, [x9]
0000000000038744	cbnz	w12, 0x38738
0000000000038748	sub	x9, x10, x1
000000000003874c	nop
0000000000038750	ldr	x12, #0x5c1a0
0000000000038754	adr	x10, #0x5c19c
0000000000038758	nop
000000000003875c	b	0x38770
0000000000038760	clrex
0000000000038764	mov	w13, #0x0
0000000000038768	mov	x12, x11
000000000003876c	cbnz	w13, 0x38798
0000000000038770	cmp	x12, x9
0000000000038774	b.ge	0x38798
0000000000038778	ldxr	x11, [x10]
000000000003877c	cmp	x11, x12
0000000000038780	b.ne	0x38760
0000000000038784	stlxr	w12, x9, [x10]
0000000000038788	cbnz	w12, 0x38764
000000000003878c	mov	w13, #0x1
0000000000038790	mov	x12, x11
0000000000038794	cbz	w13, 0x38770
0000000000038798	tbnz	x1, #0x3f, 0x38914
000000000003879c	adr	x8, #0x5c14c
00000000000387a0	nop
00000000000387a4	ldxr	x9, [x8]
00000000000387a8	add	x9, x9, x1
00000000000387ac	stxr	w10, x9, [x8]
00000000000387b0	cbnz	w10, 0x387a4
00000000000387b4	b	0x3892c
00000000000387b8	udiv	x9, x10, x8
00000000000387bc	mul	x19, x9, x8
00000000000387c0	add	x9, x0, x1
00000000000387c4	udiv	x9, x9, x8
00000000000387c8	mul	x8, x9, x8
00000000000387cc	sub	x20, x8, x19
00000000000387d0	cmp	x20, #0x1
00000000000387d4	b.ge	0x386a0
00000000000387d8	b	0x38658
00000000000387dc	udiv	x9, x0, x8
00000000000387e0	mul	x19, x9, x8
00000000000387e4	add	x9, x0, x1
00000000000387e8	add	x9, x8, x9
00000000000387ec	sub	x9, x9, #0x1
00000000000387f0	udiv	x9, x9, x8
00000000000387f4	mul	x8, x9, x8
00000000000387f8	sub	x20, x8, x19
00000000000387fc	cmp	x20, #0x1
0000000000038800	b.ge	0x386a0
0000000000038804	b	0x38658
0000000000038808	neg	x8, x1
000000000003880c	adr	x9, #0x5c0dc
0000000000038810	nop
0000000000038814	ldxr	x10, [x9]
0000000000038818	add	x10, x10, x8
000000000003881c	stxr	w11, x10, [x9]
0000000000038820	cbnz	w11, 0x38814
0000000000038824	adr	x8, #0x5c05c
0000000000038828	nop
000000000003882c	add	x9, x8, #0x1e0
0000000000038830	cmp	x9, x8
0000000000038834	b.lo	0x388e4
0000000000038838	adr	x8, #0x5c230
000000000003883c	nop
0000000000038840	ldxr	x9, [x8]
0000000000038844	add	x9, x9, #0x1
0000000000038848	stxr	w10, x9, [x8]
000000000003884c	cbnz	w10, 0x38840
0000000000038850	adr	x8, #0x5c210
0000000000038854	nop
0000000000038858	ldxr	x9, [x8]
000000000003885c	add	x9, x9, #0x1
0000000000038860	stxr	w10, x9, [x8]
0000000000038864	cbnz	w10, 0x38858
0000000000038868	mov	x0, x19
000000000003886c	mov	x1, x20
0000000000038870	mov	w2, #0x3
0000000000038874	bl	0x554e8 ; symbol stub for: _mprotect
0000000000038878	cbz	w0, 0x38880
000000000003887c	bl	0x55374 ; symbol stub for: ___error
0000000000038880	mov	x0, x19
0000000000038884	mov	x1, x20
0000000000038888	mov	w2, #0x8
000000000003888c	bl	0x55488 ; symbol stub for: _madvise
0000000000038890	cbz	w0, 0x38994
0000000000038894	mov	x21, x0
0000000000038898	bl	0x55374 ; symbol stub for: ___error
000000000003889c	ldr	w8, [x0]
00000000000388a0	adr	x22, #0x25ccb ; literal pool for: "commit"
00000000000388a4	nop
00000000000388a8	cmp	w8, #0x23
00000000000388ac	b.ne	0x38964
00000000000388b0	bl	0x55374 ; symbol stub for: ___error
00000000000388b4	str	wzr, [x0]
00000000000388b8	mov	x0, x19
00000000000388bc	mov	x1, x20
00000000000388c0	mov	w2, #0x8
00000000000388c4	bl	0x55488 ; symbol stub for: _madvise
00000000000388c8	cbz	w0, 0x38994
00000000000388cc	mov	x21, x0
00000000000388d0	bl	0x55374 ; symbol stub for: ___error
00000000000388d4	ldr	w8, [x0]
00000000000388d8	cmp	w8, #0x23
00000000000388dc	b.eq	0x388b0
00000000000388e0	b	0x38964
00000000000388e4	adr	x8, #0x5c17c
00000000000388e8	nop
00000000000388ec	ldp	x10, x9, [x8]
00000000000388f0	add	x9, x9, #0x1
00000000000388f4	add	x10, x10, #0x1
00000000000388f8	stp	x10, x9, [x8]
00000000000388fc	mov	x0, x19
0000000000038900	mov	x1, x20
0000000000038904	mov	w2, #0x3
0000000000038908	bl	0x554e8 ; symbol stub for: _mprotect
000000000003890c	cbnz	w0, 0x3887c
0000000000038910	b	0x38880
0000000000038914	adr	x9, #0x5bfcc
0000000000038918	nop
000000000003891c	ldxr	x10, [x9]
0000000000038920	add	x10, x10, x8
0000000000038924	stxr	w11, x10, [x9]
0000000000038928	cbnz	w11, 0x3891c
000000000003892c	mov	x0, x19
0000000000038930	mov	x1, x20
0000000000038934	mov	w2, #0x0
0000000000038938	mov	w3, #0x1052
000000000003893c	mov	w4, #-0x1
0000000000038940	mov	x5, #0x0
0000000000038944	bl	0x554dc ; symbol stub for: _mmap
0000000000038948	cmp	x0, x19
000000000003894c	b.eq	0x38994
0000000000038950	bl	0x55374 ; symbol stub for: ___error
0000000000038954	ldr	w21, [x0]
0000000000038958	cbz	w21, 0x38994
000000000003895c	adr	x22, #0x25c06 ; literal pool for: "decommit"
0000000000038960	nop
0000000000038964	stp	x20, x21, [sp, #0x10]
0000000000038968	stp	x22, x19, [sp]
000000000003896c	adr	x0, #0x25c06 ; literal pool for: "%s error: start: %p, csize: 0x%x, err: %i\n"
0000000000038970	nop
0000000000038974	bl	__mi_warning_message
0000000000038978	mov	w8, #0x0
000000000003897c	mov	x0, x8
0000000000038980	ldp	x29, x30, [sp, #0x40]
0000000000038984	ldp	x20, x19, [sp, #0x30]
0000000000038988	ldp	x22, x21, [sp, #0x20]
000000000003898c	add	sp, sp, #0x50
0000000000038990	ret
0000000000038994	mov	w8, #0x1
0000000000038998	mov	x0, x8
000000000003899c	ldp	x29, x30, [sp, #0x40]
00000000000389a0	ldp	x20, x19, [sp, #0x30]
00000000000389a4	ldp	x22, x21, [sp, #0x20]
00000000000389a8	add	sp, sp, #0x50
00000000000389ac	ret
__mi_mem_free:
00000000000389b0	stp	x26, x25, [sp, #-0x50]!
00000000000389b4	stp	x24, x23, [sp, #0x10]
00000000000389b8	stp	x22, x21, [sp, #0x20]
00000000000389bc	stp	x20, x19, [sp, #0x30]
00000000000389c0	stp	x29, x30, [sp, #0x40]
00000000000389c4	add	x29, sp, #0x40
00000000000389c8	cbz	x0, 0x38afc
00000000000389cc	cbz	x1, 0x38afc
00000000000389d0	mov	x19, x0
00000000000389d4	nop
00000000000389d8	ldr	x8, #0x41388
00000000000389dc	add	x9, x1, x8
00000000000389e0	sub	x9, x9, #0x1
00000000000389e4	sub	x10, x8, #0x1
00000000000389e8	udiv	x11, x9, x8
00000000000389ec	mul	x11, x11, x8
00000000000389f0	neg	x12, x8
00000000000389f4	and	x9, x9, x12
00000000000389f8	tst	x8, x10
00000000000389fc	csel	x20, x11, x9, ne
0000000000038a00	tbnz	w2, #0x0, 0x38b14
0000000000038a04	mov	w8, #0x4000000
0000000000038a08	cmp	x20, x8
0000000000038a0c	b.hi	0x38afc
0000000000038a10	lsr	x23, x2, #7
0000000000038a14	ubfx	x21, x2, #1, #6
0000000000038a18	mov	w8, #0x3fffff
0000000000038a1c	add	x25, x20, x8
0000000000038a20	lsr	x22, x25, #22
0000000000038a24	adr	x24, #0x4b824
0000000000038a28	nop
0000000000038a2c	add	x9, x24, x23, lsl #6
0000000000038a30	ldar	x8, [x9]
0000000000038a34	add	x9, x9, #0x8
0000000000038a38	ldar	x9, [x9]
0000000000038a3c	add	x9, x9, x21, lsl #22
0000000000038a40	add	x10, x22, x21
0000000000038a44	cmp	x10, #0x40
0000000000038a48	ccmp	x9, x19, #0x0, ls
0000000000038a4c	b.ne	0x38afc
0000000000038a50	and	x9, x20, #0x3fffff
0000000000038a54	cmp	x9, #0x0
0000000000038a58	ccmp	w3, #0x0, #0x4, eq
0000000000038a5c	b.eq	0x38a90
0000000000038a60	add	x9, x24, x23, lsl #6
0000000000038a64	add	x9, x9, #0x20
0000000000038a68	mov	x10, #-0x1
0000000000038a6c	lsl	x10, x10, x22
0000000000038a70	mvn	x10, x10
0000000000038a74	lsl	x10, x10, x21
0000000000038a78	cmp	x22, #0x0
0000000000038a7c	csel	x10, xzr, x10, eq
0000000000038a80	ldaxr	x11, [x9]
0000000000038a84	orr	x11, x11, x10
0000000000038a88	stlxr	w12, x11, [x9]
0000000000038a8c	cbnz	w12, 0x38a80
0000000000038a90	cbz	w4, 0x38ac4
0000000000038a94	add	x9, x24, x23, lsl #6
0000000000038a98	add	x9, x9, #0x28
0000000000038a9c	mov	x10, #-0x1
0000000000038aa0	lsl	x10, x10, x22
0000000000038aa4	mvn	x10, x10
0000000000038aa8	lsl	x10, x10, x21
0000000000038aac	cmp	x22, #0x0
0000000000038ab0	csel	x10, xzr, x10, eq
0000000000038ab4	ldaxr	x11, [x9]
0000000000038ab8	orr	x11, x11, x10
0000000000038abc	stlxr	w12, x11, [x9]
0000000000038ac0	cbnz	w12, 0x38ab4
0000000000038ac4	tst	x8, #0x300
0000000000038ac8	b.eq	0x38b38
0000000000038acc	add	x8, x24, x23, lsl #6
0000000000038ad0	add	x8, x8, #0x10
0000000000038ad4	mov	x9, #-0x1
0000000000038ad8	lsl	x10, x9, x22
0000000000038adc	mvn	x10, x10
0000000000038ae0	lsl	x10, x10, x21
0000000000038ae4	cmp	x22, #0x0
0000000000038ae8	csinv	x9, x9, x10, eq
0000000000038aec	ldaxr	x10, [x8]
0000000000038af0	and	x10, x10, x9
0000000000038af4	stlxr	w11, x10, [x8]
0000000000038af8	cbnz	w11, 0x38aec
0000000000038afc	ldp	x29, x30, [sp, #0x40]
0000000000038b00	ldp	x20, x19, [sp, #0x30]
0000000000038b04	ldp	x22, x21, [sp, #0x20]
0000000000038b08	ldp	x24, x23, [sp, #0x10]
0000000000038b0c	ldp	x26, x25, [sp], #0x50
0000000000038b10	ret
0000000000038b14	lsr	x2, x2, #1
0000000000038b18	mov	x0, x19
0000000000038b1c	mov	x1, x20
0000000000038b20	ldp	x29, x30, [sp, #0x40]
0000000000038b24	ldp	x20, x19, [sp, #0x30]
0000000000038b28	ldp	x22, x21, [sp, #0x20]
0000000000038b2c	ldp	x24, x23, [sp, #0x10]
0000000000038b30	ldp	x26, x25, [sp], #0x50
0000000000038b34	b	__mi_arena_free
0000000000038b38	mov	w0, #0xc
0000000000038b3c	bl	_mi_option_get
0000000000038b40	cbz	x0, 0x38acc
0000000000038b44	mov	w0, #0x3
0000000000038b48	bl	_mi_option_get
0000000000038b4c	cbnz	x0, 0x38b5c
0000000000038b50	mov	w0, #0x5
0000000000038b54	bl	_mi_option_get
0000000000038b58	cbz	x0, 0x38acc
0000000000038b5c	add	x8, x24, x23, lsl #6
0000000000038b60	add	x8, x8, #0x28
0000000000038b64	mov	x9, #-0x1
0000000000038b68	lsl	x9, x9, x22
0000000000038b6c	mvn	x9, x9
0000000000038b70	lsl	x9, x9, x21
0000000000038b74	cmp	x22, #0x0
0000000000038b78	csel	x9, xzr, x9, eq
0000000000038b7c	ldaxr	x10, [x8]
0000000000038b80	orr	x11, x10, x9
0000000000038b84	stlxr	w12, x11, [x8]
0000000000038b88	cbnz	w12, 0x38b7c
0000000000038b8c	bics	xzr, x9, x10
0000000000038b90	b.eq	0x38acc
0000000000038b94	adr	x8, #0x5b82c
0000000000038b98	nop
0000000000038b9c	ldar	x9, [x8]
0000000000038ba0	cbz	x9, 0x38bb0
0000000000038ba4	wfe
0000000000038ba8	ldar	x9, [x8]
0000000000038bac	cbnz	x9, 0x38ba4
0000000000038bb0	and	x1, x25, #0xffffffffffc00000
0000000000038bb4	mov	x0, x19
0000000000038bb8	bl	__mi_os_reset
0000000000038bbc	add	x8, x24, x23, lsl #6
0000000000038bc0	add	x8, x8, #0x10
0000000000038bc4	mov	w9, #0xfc00000
0000000000038bc8	cmp	x20, x9
0000000000038bcc	b.ls	0x38ad4
0000000000038bd0	mov	x9, #0x0
0000000000038bd4	b	0x38aec
__mi_os_reset:
0000000000038bd8	sub	sp, sp, #0x50
0000000000038bdc	stp	x22, x21, [sp, #0x20]
0000000000038be0	stp	x20, x19, [sp, #0x30]
0000000000038be4	stp	x29, x30, [sp, #0x40]
0000000000038be8	add	x29, sp, #0x40
0000000000038bec	mov	x20, x1
0000000000038bf0	mov	x21, x0
0000000000038bf4	mov	w0, #0x5
0000000000038bf8	bl	_mi_option_get
0000000000038bfc	cbz	x0, 0x38c2c
0000000000038c00	add	x4, sp, #0x1f
0000000000038c04	mov	x0, x21
0000000000038c08	mov	x1, x20
0000000000038c0c	mov	w2, #0x0
0000000000038c10	mov	w3, #0x1
0000000000038c14	bl	_mi_os_commitx
0000000000038c18	ldp	x29, x30, [sp, #0x40]
0000000000038c1c	ldp	x20, x19, [sp, #0x30]
0000000000038c20	ldp	x22, x21, [sp, #0x20]
0000000000038c24	add	sp, sp, #0x50
0000000000038c28	ret
0000000000038c2c	cbz	x21, 0x38c18
0000000000038c30	cbz	x20, 0x38c18
0000000000038c34	nop
0000000000038c38	ldr	x8, #0x41128
0000000000038c3c	add	x9, x21, x8
0000000000038c40	sub	x9, x9, #0x1
0000000000038c44	sub	x10, x8, #0x1
0000000000038c48	tst	x8, x10
0000000000038c4c	b.ne	0x38c70
0000000000038c50	neg	x8, x8
0000000000038c54	and	x19, x9, x8
0000000000038c58	add	x9, x21, x20
0000000000038c5c	and	x8, x8, x9
0000000000038c60	sub	x20, x8, x19
0000000000038c64	cmp	x20, #0x1
0000000000038c68	b.ge	0x38c90
0000000000038c6c	b	0x38c18
0000000000038c70	udiv	x9, x9, x8
0000000000038c74	mul	x19, x9, x8
0000000000038c78	add	x9, x21, x20
0000000000038c7c	udiv	x9, x9, x8
0000000000038c80	mul	x8, x9, x8
0000000000038c84	sub	x20, x8, x19
0000000000038c88	cmp	x20, #0x1
0000000000038c8c	b.lt	0x38c18
0000000000038c90	adr	x9, #0x5bc88
0000000000038c94	nop
0000000000038c98	ldxr	x8, [x9]
0000000000038c9c	add	x8, x8, x20
0000000000038ca0	stxr	w10, x8, [x9]
0000000000038ca4	cbnz	w10, 0x38c98
0000000000038ca8	nop
0000000000038cac	ldr	x11, #0x5bc64
0000000000038cb0	adr	x9, #0x5bc60
0000000000038cb4	nop
0000000000038cb8	b	0x38ccc
0000000000038cbc	clrex
0000000000038cc0	mov	w12, #0x0
0000000000038cc4	mov	x11, x10
0000000000038cc8	cbnz	w12, 0x38cf4
0000000000038ccc	cmp	x11, x8
0000000000038cd0	b.ge	0x38cf4
0000000000038cd4	ldxr	x10, [x9]
0000000000038cd8	cmp	x10, x11
0000000000038cdc	b.ne	0x38cbc
0000000000038ce0	stlxr	w11, x8, [x9]
0000000000038ce4	cbnz	w11, 0x38cc0
0000000000038ce8	mov	w12, #0x1
0000000000038cec	mov	x11, x10
0000000000038cf0	cbz	w12, 0x38ccc
0000000000038cf4	cmp	x20, #0x1
0000000000038cf8	b.lt	0x38d18
0000000000038cfc	adr	x8, #0x5bc04
0000000000038d00	nop
0000000000038d04	ldxr	x9, [x8]
0000000000038d08	add	x9, x9, x20
0000000000038d0c	stxr	w10, x9, [x8]
0000000000038d10	cbnz	w10, 0x38d04
0000000000038d14	b	0x38d34
0000000000038d18	neg	x8, x20
0000000000038d1c	adr	x9, #0x5bbec
0000000000038d20	nop
0000000000038d24	ldxr	x10, [x9]
0000000000038d28	add	x10, x10, x8
0000000000038d2c	stxr	w11, x10, [x9]
0000000000038d30	cbnz	w11, 0x38d24
0000000000038d34	nop
0000000000038d38	ldr	x21, #0x41040
0000000000038d3c	mov	x0, x19
0000000000038d40	mov	x1, x20
0000000000038d44	mov	x2, x21
0000000000038d48	bl	0x55488 ; symbol stub for: _madvise
0000000000038d4c	cbz	w0, 0x38c18
0000000000038d50	bl	0x55374 ; symbol stub for: ___error
0000000000038d54	ldr	w22, [x0]
0000000000038d58	bl	0x55374 ; symbol stub for: ___error
0000000000038d5c	cmp	w22, #0x23
0000000000038d60	b.ne	0x38d80
0000000000038d64	str	wzr, [x0]
0000000000038d68	mov	x0, x19
0000000000038d6c	mov	x1, x20
0000000000038d70	mov	x2, x21
0000000000038d74	bl	0x55488 ; symbol stub for: _madvise
0000000000038d78	cbnz	w0, 0x38d50
0000000000038d7c	b	0x38c18
0000000000038d80	cmp	w21, #0x7
0000000000038d84	b.ne	0x38db8
0000000000038d88	ldr	w8, [x0]
0000000000038d8c	cmp	w8, #0x16
0000000000038d90	b.ne	0x38db8
0000000000038d94	adr	x8, #0x40fe4
0000000000038d98	nop
0000000000038d9c	mov	w9, #0x4
0000000000038da0	stlr	x9, [x8]
0000000000038da4	mov	x0, x19
0000000000038da8	mov	x1, x20
0000000000038dac	mov	w2, #0x4
0000000000038db0	bl	0x55488 ; symbol stub for: _madvise
0000000000038db4	cbz	w0, 0x38c18
0000000000038db8	bl	0x55374 ; symbol stub for: ___error
0000000000038dbc	ldr	w8, [x0]
0000000000038dc0	stp	x20, x8, [sp, #0x8]
0000000000038dc4	str	x19, [sp]
0000000000038dc8	adr	x0, #0x257d5 ; literal pool for: "madvise reset error: start: %p, csize: 0x%x, errno: %i\n"
0000000000038dcc	nop
0000000000038dd0	bl	__mi_warning_message
0000000000038dd4	ldp	x29, x30, [sp, #0x40]
0000000000038dd8	ldp	x20, x19, [sp, #0x30]
0000000000038ddc	ldp	x22, x21, [sp, #0x20]
0000000000038de0	add	sp, sp, #0x50
0000000000038de4	ret
__mi_segment_page_free:
0000000000038de8	sub	sp, sp, #0x60
0000000000038dec	stp	x26, x25, [sp, #0x10]
0000000000038df0	stp	x24, x23, [sp, #0x20]
0000000000038df4	stp	x22, x21, [sp, #0x30]
0000000000038df8	stp	x20, x19, [sp, #0x40]
0000000000038dfc	stp	x29, x30, [sp, #0x50]
0000000000038e00	add	x29, sp, #0x50
0000000000038e04	mov	x20, x2
0000000000038e08	mov	x21, x1
0000000000038e0c	mov	x22, x0
0000000000038e10	and	x19, x0, #0xffffffffffc00000
0000000000038e14	mov	w0, #0xa
0000000000038e18	bl	_mi_option_get
0000000000038e1c	cbz	x0, 0x38f04
0000000000038e20	mov	x0, sp
0000000000038e24	mov	x1, #0x0
0000000000038e28	bl	0x55470 ; symbol stub for: _gettimeofday
0000000000038e2c	ldr	x23, [x20, #0x28]
0000000000038e30	cbz	x23, 0x38f00
0000000000038e34	ldr	x8, [sp]
0000000000038e38	ldr	w9, [sp, #0x8]
0000000000038e3c	mov	w10, #0x4dd3
0000000000038e40	movk	w10, #0x1062, lsl #16
0000000000038e44	smull	x9, w9, w10
0000000000038e48	lsr	x10, x9, #63
0000000000038e4c	asr	x9, x9, #38
0000000000038e50	add	w9, w9, w10
0000000000038e54	mov	w10, #0x3e8
0000000000038e58	madd	w24, w8, w10, w9
0000000000038e5c	mov	w25, #0x1
0000000000038e60	b	0x38e70
0000000000038e64	str	wzr, [x26, #0x10]
0000000000038e68	stp	xzr, xzr, [x26, #0x30]
0000000000038e6c	cbz	x23, 0x38f00
0000000000038e70	mov	x26, x23
0000000000038e74	ldr	w8, [x23, #0x10]
0000000000038e78	cmp	w8, w24
0000000000038e7c	b.gt	0x38fb0
0000000000038e80	ldr	x23, [x26, #0x38]
0000000000038e84	mov	w0, #0xa
0000000000038e88	bl	_mi_option_get
0000000000038e8c	cbz	x0, 0x38e64
0000000000038e90	and	x9, x26, #0xffffffffffc00000
0000000000038e94	ldrb	w8, [x9, #0x8]
0000000000038e98	cbnz	w8, 0x38e64
0000000000038e9c	ldrb	w8, [x26, #0x1]
0000000000038ea0	and	w10, w8, #0x7
0000000000038ea4	cmp	w10, #0x4
0000000000038ea8	b.ne	0x38e64
0000000000038eac	ldr	w10, [x9, #0x70]
0000000000038eb0	cmp	w10, #0x3
0000000000038eb4	b.ne	0x38ecc
0000000000038eb8	ldr	x1, [x9, #0x48]
0000000000038ebc	ldrb	w10, [x26]
0000000000038ec0	madd	x0, x1, x10, x9
0000000000038ec4	cbnz	x10, 0x38eec
0000000000038ec8	b	0x38ee0
0000000000038ecc	ldr	x10, [x9, #0x60]
0000000000038ed0	lsl	x1, x25, x10
0000000000038ed4	ldrb	w10, [x26]
0000000000038ed8	madd	x0, x1, x10, x9
0000000000038edc	cbnz	x10, 0x38eec
0000000000038ee0	ldr	x9, [x9, #0x50]
0000000000038ee4	add	x0, x0, x9
0000000000038ee8	sub	x1, x1, x9
0000000000038eec	orr	w8, w8, #0x2
0000000000038ef0	strb	w8, [x26, #0x1]
0000000000038ef4	cbz	x1, 0x38e64
0000000000038ef8	bl	__mi_os_reset
0000000000038efc	b	0x38e64
0000000000038f00	stp	xzr, xzr, [x20, #0x20]
0000000000038f04	mov	x0, x19
0000000000038f08	mov	x1, x22
0000000000038f0c	mov	x2, x20
0000000000038f10	bl	_mi_segment_page_clear
0000000000038f14	ldr	x8, [x19, #0x38]
0000000000038f18	cbz	x8, 0x38fd0
0000000000038f1c	ldr	x9, [x19, #0x28]
0000000000038f20	cmp	x8, x9
0000000000038f24	b.ne	0x38f4c
0000000000038f28	mov	x0, x19
0000000000038f2c	mov	x1, x20
0000000000038f30	ldp	x29, x30, [sp, #0x50]
0000000000038f34	ldp	x20, x19, [sp, #0x40]
0000000000038f38	ldp	x22, x21, [sp, #0x30]
0000000000038f3c	ldp	x24, x23, [sp, #0x20]
0000000000038f40	ldp	x26, x25, [sp, #0x10]
0000000000038f44	add	sp, sp, #0x60
0000000000038f48	b	_mi_segment_abandon
0000000000038f4c	add	x8, x8, #0x1
0000000000038f50	ldr	x9, [x19, #0x40]
0000000000038f54	cmp	x8, x9
0000000000038f58	b.ne	0x38f94
0000000000038f5c	ldr	w8, [x19, #0x70]
0000000000038f60	add	x9, x20, #0x10
0000000000038f64	cmp	w8, #0x0
0000000000038f68	csel	x10, xzr, x20, ne
0000000000038f6c	cmp	w8, #0x1
0000000000038f70	csel	x8, x9, x10, eq
0000000000038f74	str	xzr, [x19, #0x18]
0000000000038f78	ldr	x9, [x8, #0x8]
0000000000038f7c	str	x9, [x19, #0x20]
0000000000038f80	add	x10, x9, #0x18
0000000000038f84	cmp	x9, #0x0
0000000000038f88	csel	x9, x8, x10, eq
0000000000038f8c	str	x19, [x9]
0000000000038f90	str	x19, [x8, #0x8]
0000000000038f94	ldp	x29, x30, [sp, #0x50]
0000000000038f98	ldp	x20, x19, [sp, #0x40]
0000000000038f9c	ldp	x22, x21, [sp, #0x30]
0000000000038fa0	ldp	x24, x23, [sp, #0x20]
0000000000038fa4	ldp	x26, x25, [sp, #0x10]
0000000000038fa8	add	sp, sp, #0x60
0000000000038fac	ret
0000000000038fb0	str	x26, [x20, #0x28]
0000000000038fb4	str	xzr, [x26, #0x30]
0000000000038fb8	mov	x0, x19
0000000000038fbc	mov	x1, x22
0000000000038fc0	mov	x2, x20
0000000000038fc4	bl	_mi_segment_page_clear
0000000000038fc8	ldr	x8, [x19, #0x38]
0000000000038fcc	cbnz	x8, 0x38f1c
0000000000038fd0	mov	x0, x19
0000000000038fd4	mov	x1, x21
0000000000038fd8	mov	x2, x20
0000000000038fdc	ldp	x29, x30, [sp, #0x50]
0000000000038fe0	ldp	x20, x19, [sp, #0x40]
0000000000038fe4	ldp	x22, x21, [sp, #0x30]
0000000000038fe8	ldp	x24, x23, [sp, #0x20]
0000000000038fec	ldp	x26, x25, [sp, #0x10]
0000000000038ff0	add	sp, sp, #0x60
0000000000038ff4	b	_mi_segment_free
_mi_segment_page_clear:
0000000000038ff8	sub	sp, sp, #0x40
0000000000038ffc	stp	x22, x21, [sp, #0x10]
0000000000039000	stp	x20, x19, [sp, #0x20]
0000000000039004	stp	x29, x30, [sp, #0x30]
0000000000039008	add	x29, sp, #0x30
000000000003900c	mov	x21, x2
0000000000039010	mov	x19, x1
0000000000039014	mov	x20, x0
0000000000039018	ldrh	w8, [x1, #0x2]
000000000003901c	ldr	w9, [x1, #0x14]
0000000000039020	ubfx	x10, x9, #26, #6
0000000000039024	cbnz	w10, 0x39274
0000000000039028	mov	x10, x9
000000000003902c	mul	x1, x10, x8
0000000000039030	ldr	x8, [x21, #0x70]
0000000000039034	add	x0, x8, #0xa0
0000000000039038	bl	__mi_stat_decrease
000000000003903c	ldr	x8, [x21, #0x70]
0000000000039040	add	x9, x8, #0x20
0000000000039044	adr	x10, #0x5b83c
0000000000039048	nop
000000000003904c	cmp	x9, x10
0000000000039050	adr	x10, #0x5ba70
0000000000039054	nop
0000000000039058	ccmp	x9, x10, #0x2, hs
000000000003905c	b.lo	0x39088
0000000000039060	ldp	x10, x9, [x8, #0x30]
0000000000039064	sub	x9, x9, #0x1
0000000000039068	str	x9, [x8, #0x38]
000000000003906c	cmp	x9, x10
0000000000039070	b.le	0x39078
0000000000039074	str	x9, [x8, #0x30]
0000000000039078	ldr	x9, [x8, #0x28]
000000000003907c	add	x9, x9, #0x1
0000000000039080	str	x9, [x8, #0x28]
0000000000039084	b	0x390f4
0000000000039088	add	x10, x8, #0x38
000000000003908c	ldxr	x9, [x10]
0000000000039090	sub	x9, x9, #0x1
0000000000039094	stxr	w11, x9, [x10]
0000000000039098	cbnz	w11, 0x3908c
000000000003909c	add	x10, x8, #0x30
00000000000390a0	ldr	x12, [x8, #0x30]
00000000000390a4	b	0x390b8
00000000000390a8	clrex
00000000000390ac	mov	w13, #0x0
00000000000390b0	mov	x12, x11
00000000000390b4	cbnz	w13, 0x390e0
00000000000390b8	cmp	x12, x9
00000000000390bc	b.ge	0x390e0
00000000000390c0	ldxr	x11, [x10]
00000000000390c4	cmp	x11, x12
00000000000390c8	b.ne	0x390a8
00000000000390cc	stlxr	w12, x9, [x10]
00000000000390d0	cbnz	w12, 0x390ac
00000000000390d4	mov	w13, #0x1
00000000000390d8	mov	x12, x11
00000000000390dc	cbz	w13, 0x390b8
00000000000390e0	add	x8, x8, #0x28
00000000000390e4	ldxr	x9, [x8]
00000000000390e8	add	x9, x9, #0x1
00000000000390ec	stxr	w10, x9, [x8]
00000000000390f0	cbnz	w10, 0x390e4
00000000000390f4	ldrb	w8, [x19, #0x1]
00000000000390f8	mov	w9, #0xf6
00000000000390fc	and	w8, w8, w9
0000000000039100	strb	w8, [x19, #0x1]
0000000000039104	ldr	w8, [x19, #0x14]
0000000000039108	movi.16b	v0, #0x0
000000000003910c	stur	q0, [x19, #0x16]
0000000000039110	stur	q0, [x19, #0x6]
0000000000039114	stur	q0, [x19, #0x26]
0000000000039118	str	q0, [x19, #0x30]
000000000003911c	str	w8, [x19, #0x14]
0000000000039120	ldr	x8, [x20, #0x38]
0000000000039124	sub	x8, x8, #0x1
0000000000039128	str	x8, [x20, #0x38]
000000000003912c	mov	w0, #0xa
0000000000039130	bl	_mi_option_get
0000000000039134	cbz	x0, 0x39140
0000000000039138	ldrb	w8, [x20, #0x8]
000000000003913c	cbz	w8, 0x39158
0000000000039140	stur	wzr, [x19, #0x2]
0000000000039144	ldp	x29, x30, [sp, #0x30]
0000000000039148	ldp	x20, x19, [sp, #0x20]
000000000003914c	ldp	x22, x21, [sp, #0x10]
0000000000039150	add	sp, sp, #0x40
0000000000039154	ret
0000000000039158	ldrb	w8, [x19, #0x1]
000000000003915c	and	w8, w8, #0x7
0000000000039160	cmp	w8, #0x4
0000000000039164	b.ne	0x39140
0000000000039168	mov	w0, #0xe
000000000003916c	bl	_mi_option_get
0000000000039170	cbz	x0, 0x391f0
0000000000039174	mov	x0, sp
0000000000039178	mov	x1, #0x0
000000000003917c	bl	0x55470 ; symbol stub for: _gettimeofday
0000000000039180	mov	w8, #0x3e8
0000000000039184	ldr	w9, [sp]
0000000000039188	ldrsw	x10, [sp, #0x8]
000000000003918c	mov	w11, #0x4dd3
0000000000039190	movk	w11, #0x1062, lsl #16
0000000000039194	mul	x10, x10, x11
0000000000039198	lsr	x11, x10, #32
000000000003919c	lsr	x10, x10, #63
00000000000391a0	add	w10, w10, w11, asr #6
00000000000391a4	madd	w20, w9, w8, w10
00000000000391a8	mov	w0, #0xe
00000000000391ac	bl	_mi_option_get
00000000000391b0	add	w8, w0, w20
00000000000391b4	str	w8, [x19, #0x10]
00000000000391b8	ldr	x8, [x21, #0x20]
00000000000391bc	stp	x8, xzr, [x19, #0x30]
00000000000391c0	add	x9, x8, #0x38
00000000000391c4	add	x10, x21, #0x28
00000000000391c8	cmp	x8, #0x0
00000000000391cc	csel	x8, x10, x9, eq
00000000000391d0	str	x19, [x8]
00000000000391d4	str	x19, [x21, #0x20]
00000000000391d8	stur	wzr, [x19, #0x2]
00000000000391dc	ldp	x29, x30, [sp, #0x30]
00000000000391e0	ldp	x20, x19, [sp, #0x20]
00000000000391e4	ldp	x22, x21, [sp, #0x10]
00000000000391e8	add	sp, sp, #0x40
00000000000391ec	ret
00000000000391f0	mov	w0, #0xa
00000000000391f4	bl	_mi_option_get
00000000000391f8	cbz	x0, 0x39140
00000000000391fc	ldrb	w8, [x20, #0x8]
0000000000039200	cbnz	w8, 0x39140
0000000000039204	ldrb	w8, [x19, #0x1]
0000000000039208	and	w9, w8, #0x7
000000000003920c	cmp	w9, #0x4
0000000000039210	b.ne	0x39140
0000000000039214	ldr	w9, [x20, #0x70]
0000000000039218	cmp	w9, #0x3
000000000003921c	b.ne	0x39228
0000000000039220	ldr	x1, [x20, #0x48]
0000000000039224	b	0x39234
0000000000039228	ldr	x9, [x20, #0x60]
000000000003922c	mov	w10, #0x1
0000000000039230	lsl	x1, x10, x9
0000000000039234	ldrb	w9, [x19]
0000000000039238	madd	x0, x1, x9, x20
000000000003923c	cbnz	x9, 0x3924c
0000000000039240	ldr	x9, [x20, #0x50]
0000000000039244	add	x0, x0, x9
0000000000039248	sub	x1, x1, x9
000000000003924c	orr	w8, w8, #0x2
0000000000039250	strb	w8, [x19, #0x1]
0000000000039254	cbz	x1, 0x39140
0000000000039258	bl	__mi_os_reset
000000000003925c	stur	wzr, [x19, #0x2]
0000000000039260	ldp	x29, x30, [sp, #0x30]
0000000000039264	ldp	x20, x19, [sp, #0x20]
0000000000039268	ldp	x22, x21, [sp, #0x10]
000000000003926c	add	sp, sp, #0x40
0000000000039270	ret
0000000000039274	and	x11, x19, #0xffffffffffc00000
0000000000039278	ldr	w12, [x11, #0x70]
000000000003927c	cmp	w12, #0x3
0000000000039280	b.ne	0x3928c
0000000000039284	ldr	x10, [x11, #0x48]
0000000000039288	b	0x39298
000000000003928c	ldr	x10, [x11, #0x60]
0000000000039290	mov	w13, #0x1
0000000000039294	lsl	x10, x13, x10
0000000000039298	ldrb	w13, [x19]
000000000003929c	cbnz	w13, 0x3902c
00000000000392a0	ldr	x13, [x11, #0x50]
00000000000392a4	sub	x10, x10, x13
00000000000392a8	cmp	w12, #0x1
00000000000392ac	b.hi	0x3902c
00000000000392b0	add	x11, x11, x13
00000000000392b4	udiv	x12, x11, x9
00000000000392b8	neg	x11, x11
00000000000392bc	madd	x11, x12, x9, x11
00000000000392c0	add	x11, x9, x11
00000000000392c4	cmp	x11, x9
00000000000392c8	csel	x9, x11, xzr, lo
00000000000392cc	sub	x10, x10, x9
00000000000392d0	b	0x3902c
_mi_segment_free:
00000000000392d4	stp	x28, x27, [sp, #-0x60]!
00000000000392d8	stp	x26, x25, [sp, #0x10]
00000000000392dc	stp	x24, x23, [sp, #0x20]
00000000000392e0	stp	x22, x21, [sp, #0x30]
00000000000392e4	stp	x20, x19, [sp, #0x40]
00000000000392e8	stp	x29, x30, [sp, #0x50]
00000000000392ec	add	x29, sp, #0x50
00000000000392f0	mov	x20, x2
00000000000392f4	mov	x19, x0
00000000000392f8	adr	x24, #0x5b588
00000000000392fc	nop
0000000000039300	cbz	w1, 0x3932c
0000000000039304	mov	w0, #0xb
0000000000039308	bl	_mi_option_get
000000000003930c	ldrb	w8, [x19, #0x8]
0000000000039310	cbz	w8, 0x3934c
0000000000039314	ldr	w8, [x19, #0x70]
0000000000039318	cbz	w8, 0x3952c
000000000003931c	cmp	w8, #0x1
0000000000039320	b.ne	0x39594
0000000000039324	add	x8, x20, #0x10
0000000000039328	b	0x39534
000000000003932c	ldrb	w8, [x19, #0x8]
0000000000039330	cbz	w8, 0x39480
0000000000039334	ldr	w8, [x19, #0x70]
0000000000039338	cbz	w8, 0x39548
000000000003933c	cmp	w8, #0x1
0000000000039340	b.ne	0x395d8
0000000000039344	add	x8, x20, #0x10
0000000000039348	b	0x39550
000000000003934c	ldr	x8, [x19, #0x40]
0000000000039350	cbz	x8, 0x39314
0000000000039354	cbz	x0, 0x3a1bc
0000000000039358	mov	x21, #0x0
000000000003935c	add	x22, x19, #0x78
0000000000039360	mov	w23, #0x1
0000000000039364	b	0x3937c
0000000000039368	ldr	x8, [x19, #0x40]
000000000003936c	add	x21, x21, #0x1
0000000000039370	add	x22, x22, #0x40
0000000000039374	cmp	x21, x8
0000000000039378	b.hs	0x39314
000000000003937c	ldrb	w9, [x22, #0x1]
0000000000039380	and	w9, w9, #0x7
0000000000039384	cmp	w9, #0x4
0000000000039388	b.ne	0x3936c
000000000003938c	ldp	x8, x9, [x22, #0x30]
0000000000039390	cbz	x8, 0x3939c
0000000000039394	cbnz	x9, 0x393a0
0000000000039398	b	0x393ac
000000000003939c	cbz	x9, 0x39430
00000000000393a0	str	x8, [x9, #0x30]
00000000000393a4	ldr	x8, [x22, #0x30]
00000000000393a8	cbz	x8, 0x393b0
00000000000393ac	str	x9, [x8, #0x38]
00000000000393b0	ldr	x9, [x20, #0x28]
00000000000393b4	cmp	x22, x9
00000000000393b8	b.eq	0x39414
00000000000393bc	ldr	x9, [x20, #0x20]
00000000000393c0	cmp	x22, x9
00000000000393c4	b.eq	0x39428
00000000000393c8	str	wzr, [x22, #0x10]
00000000000393cc	stp	xzr, xzr, [x22, #0x30]
00000000000393d0	mov	w0, #0xa
00000000000393d4	bl	_mi_option_get
00000000000393d8	cbz	x0, 0x39368
00000000000393dc	ldrb	w8, [x19, #0x8]
00000000000393e0	cbnz	w8, 0x39368
00000000000393e4	ldrb	w8, [x22, #0x1]
00000000000393e8	and	w9, w8, #0x7
00000000000393ec	cmp	w9, #0x4
00000000000393f0	b.ne	0x39368
00000000000393f4	ldr	w9, [x19, #0x70]
00000000000393f8	cmp	w9, #0x3
00000000000393fc	b.ne	0x3944c
0000000000039400	ldr	x1, [x19, #0x48]
0000000000039404	ldrb	w9, [x22]
0000000000039408	madd	x0, x1, x9, x19
000000000003940c	cbnz	x9, 0x3946c
0000000000039410	b	0x39460
0000000000039414	ldr	x9, [x22, #0x38]
0000000000039418	str	x9, [x20, #0x28]
000000000003941c	ldr	x9, [x20, #0x20]
0000000000039420	cmp	x22, x9
0000000000039424	b.ne	0x393c8
0000000000039428	str	x8, [x20, #0x20]
000000000003942c	b	0x393c8
0000000000039430	ldr	x9, [x20, #0x20]
0000000000039434	cmp	x22, x9
0000000000039438	b.eq	0x393b0
000000000003943c	ldr	x9, [x20, #0x28]
0000000000039440	cmp	x22, x9
0000000000039444	b.ne	0x393d0
0000000000039448	b	0x393b0
000000000003944c	ldr	x9, [x19, #0x60]
0000000000039450	lsl	x1, x23, x9
0000000000039454	ldrb	w9, [x22]
0000000000039458	madd	x0, x1, x9, x19
000000000003945c	cbnz	x9, 0x3946c
0000000000039460	ldr	x9, [x19, #0x50]
0000000000039464	add	x0, x0, x9
0000000000039468	sub	x1, x1, x9
000000000003946c	orr	w8, w8, #0x2
0000000000039470	strb	w8, [x22, #0x1]
0000000000039474	cbz	x1, 0x39368
0000000000039478	bl	__mi_os_reset
000000000003947c	b	0x39368
0000000000039480	ldr	x8, [x19, #0x40]
0000000000039484	cbz	x8, 0x39334
0000000000039488	add	x9, x19, #0x78
000000000003948c	b	0x394a4
0000000000039490	str	wzr, [x9, #0x10]
0000000000039494	stp	xzr, xzr, [x9, #0x30]
0000000000039498	add	x9, x9, #0x40
000000000003949c	subs	x8, x8, #0x1
00000000000394a0	b.eq	0x39334
00000000000394a4	ldrb	w10, [x9, #0x1]
00000000000394a8	and	w10, w10, #0x7
00000000000394ac	cmp	w10, #0x4
00000000000394b0	b.ne	0x39498
00000000000394b4	ldp	x10, x11, [x9, #0x30]
00000000000394b8	cbz	x10, 0x394c4
00000000000394bc	cbnz	x11, 0x394c8
00000000000394c0	b	0x394d4
00000000000394c4	cbz	x11, 0x39510
00000000000394c8	str	x10, [x11, #0x30]
00000000000394cc	ldr	x10, [x9, #0x30]
00000000000394d0	cbz	x10, 0x394d8
00000000000394d4	str	x11, [x10, #0x38]
00000000000394d8	ldr	x11, [x20, #0x28]
00000000000394dc	cmp	x9, x11
00000000000394e0	b.eq	0x394f4
00000000000394e4	ldr	x11, [x20, #0x20]
00000000000394e8	cmp	x9, x11
00000000000394ec	b.ne	0x39490
00000000000394f0	b	0x39508
00000000000394f4	ldr	x11, [x9, #0x38]
00000000000394f8	str	x11, [x20, #0x28]
00000000000394fc	ldr	x11, [x20, #0x20]
0000000000039500	cmp	x9, x11
0000000000039504	b.ne	0x39490
0000000000039508	str	x10, [x20, #0x20]
000000000003950c	b	0x39490
0000000000039510	ldr	x11, [x20, #0x20]
0000000000039514	cmp	x9, x11
0000000000039518	b.eq	0x394d8
000000000003951c	ldr	x11, [x20, #0x28]
0000000000039520	cmp	x9, x11
0000000000039524	b.ne	0x39498
0000000000039528	b	0x394d8
000000000003952c	mov	x8, x20
0000000000039530	cbz	x20, 0x39594
0000000000039534	mov	x9, x19
0000000000039538	ldp	x10, x11, [x9, #0x18]!
000000000003953c	cbz	x10, 0x39564
0000000000039540	cbnz	x11, 0x39568
0000000000039544	b	0x39574
0000000000039548	mov	x8, x20
000000000003954c	cbz	x20, 0x395d8
0000000000039550	mov	x9, x19
0000000000039554	ldp	x10, x11, [x9, #0x18]!
0000000000039558	cbz	x10, 0x395a8
000000000003955c	cbnz	x11, 0x395ac
0000000000039560	b	0x395b8
0000000000039564	cbz	x11, 0x3a260
0000000000039568	str	x10, [x11, #0x18]
000000000003956c	ldr	x10, [x9]
0000000000039570	cbz	x10, 0x39578
0000000000039574	str	x11, [x10, #0x20]
0000000000039578	ldr	x11, [x8]
000000000003957c	cmp	x11, x19
0000000000039580	b.eq	0x3a0e8
0000000000039584	ldr	x10, [x8, #0x8]
0000000000039588	cmp	x10, x19
000000000003958c	b.eq	0x3a0f8
0000000000039590	stp	xzr, xzr, [x9]
0000000000039594	ldr	x8, [x20, #0x70]
0000000000039598	add	x0, x8, #0xa0
000000000003959c	ldr	x1, [x19, #0x50]
00000000000395a0	bl	__mi_stat_decrease
00000000000395a4	b	0x39bec
00000000000395a8	cbz	x11, 0x3a270
00000000000395ac	str	x10, [x11, #0x18]
00000000000395b0	ldr	x10, [x9]
00000000000395b4	cbz	x10, 0x395bc
00000000000395b8	str	x11, [x10, #0x20]
00000000000395bc	ldr	x11, [x8]
00000000000395c0	cmp	x11, x19
00000000000395c4	b.eq	0x3a104
00000000000395c8	ldr	x10, [x8, #0x8]
00000000000395cc	cmp	x10, x19
00000000000395d0	b.eq	0x3a114
00000000000395d4	stp	xzr, xzr, [x9]
00000000000395d8	ldr	x8, [x20, #0x70]
00000000000395dc	add	x0, x8, #0xa0
00000000000395e0	ldr	x1, [x19, #0x50]
00000000000395e4	bl	__mi_stat_decrease
00000000000395e8	ldr	x8, [x19, #0x48]
00000000000395ec	cmp	x8, #0x400, lsl #12
00000000000395f0	b.ne	0x39bec
00000000000395f4	mov	w0, #0x9
00000000000395f8	bl	_mi_option_get
00000000000395fc	mov	x21, x0
0000000000039600	ldr	x8, [x20, #0x58]
0000000000039604	cmp	x8, x0
0000000000039608	b.hs	0x39618
000000000003960c	ldr	x9, [x20, #0x40]
0000000000039610	cmp	x8, x9, lsr #3
0000000000039614	b.ls	0x3a120
0000000000039618	cmp	x8, x21
000000000003961c	b.ls	0x39bec
0000000000039620	adr	x25, #0x5b4a0
0000000000039624	nop
0000000000039628	mov	w26, #0x1039
000000000003962c	movi.16b	v16, #0x4
0000000000039630	movi.16b	v17, #0x2
0000000000039634	b	0x39668
0000000000039638	mov	w4, #0x0
000000000003963c	mov	w27, #0x1
0000000000039640	ldr	x2, [x22]
0000000000039644	and	w3, w27, #0x1
0000000000039648	mov	x0, x22
000000000003964c	mov	x1, x23
0000000000039650	bl	__mi_mem_free
0000000000039654	ldr	x8, [x20, #0x58]
0000000000039658	movi.16b	v16, #0x4
000000000003965c	movi.16b	v17, #0x2
0000000000039660	cmp	x8, x21
0000000000039664	b.ls	0x39bec
0000000000039668	ldr	x22, [x20, #0x68]
000000000003966c	cbz	x22, 0x39660
0000000000039670	sub	x8, x8, #0x1
0000000000039674	str	x8, [x20, #0x58]
0000000000039678	ldr	x8, [x22, #0x18]
000000000003967c	str	x8, [x20, #0x68]
0000000000039680	str	xzr, [x22, #0x18]
0000000000039684	ldr	x8, [x20, #0x70]
0000000000039688	add	x9, x8, #0x1a0
000000000003968c	cmp	x9, x24
0000000000039690	ccmp	x9, x25, #0x2, hs
0000000000039694	b.lo	0x396c0
0000000000039698	ldp	x10, x9, [x8, #0x1b0]
000000000003969c	sub	x9, x9, #0x1
00000000000396a0	str	x9, [x8, #0x1b8]
00000000000396a4	cmp	x9, x10
00000000000396a8	b.le	0x396b0
00000000000396ac	str	x9, [x8, #0x1b0]
00000000000396b0	ldr	x9, [x8, #0x1a8]
00000000000396b4	add	x9, x9, #0x1
00000000000396b8	str	x9, [x8, #0x1a8]
00000000000396bc	b	0x3972c
00000000000396c0	add	x10, x8, #0x1b8
00000000000396c4	ldxr	x9, [x10]
00000000000396c8	sub	x9, x9, #0x1
00000000000396cc	stxr	w11, x9, [x10]
00000000000396d0	cbnz	w11, 0x396c4
00000000000396d4	add	x10, x8, #0x1b0
00000000000396d8	ldr	x12, [x8, #0x1b0]
00000000000396dc	b	0x396f0
00000000000396e0	clrex
00000000000396e4	mov	w13, #0x0
00000000000396e8	mov	x12, x11
00000000000396ec	cbnz	w13, 0x39718
00000000000396f0	cmp	x12, x9
00000000000396f4	b.ge	0x39718
00000000000396f8	ldxr	x11, [x10]
00000000000396fc	cmp	x11, x12
0000000000039700	b.ne	0x396e0
0000000000039704	stlxr	w12, x9, [x10]
0000000000039708	cbnz	w12, 0x396e4
000000000003970c	mov	w13, #0x1
0000000000039710	mov	x12, x11
0000000000039714	cbz	w13, 0x396f0
0000000000039718	add	x8, x8, #0x1a8
000000000003971c	ldxr	x9, [x8]
0000000000039720	add	x9, x9, #0x1
0000000000039724	stxr	w10, x9, [x8]
0000000000039728	cbnz	w10, 0x3971c
000000000003972c	ldr	x23, [x22, #0x48]
0000000000039730	add	x8, x22, #0x68
0000000000039734	stlr	xzr, [x8]
0000000000039738	ldr	x8, [x20, #0x70]
000000000003973c	cmp	x8, x24
0000000000039740	cset	w9, hs
0000000000039744	add	x10, x24, #0x240
0000000000039748	cmp	x8, x10
000000000003974c	cset	w10, lo
0000000000039750	and	w9, w9, w10
0000000000039754	add	x11, x8, #0x18
0000000000039758	cmp	x23, #0x0
000000000003975c	b.le	0x397d4
0000000000039760	cbz	w9, 0x39844
0000000000039764	ldxr	x9, [x11]
0000000000039768	sub	x9, x9, #0x1
000000000003976c	stxr	w10, x9, [x11]
0000000000039770	cbnz	w10, 0x39764
0000000000039774	add	x10, x8, #0x10
0000000000039778	ldr	x12, [x8, #0x10]
000000000003977c	b	0x39790
0000000000039780	clrex
0000000000039784	mov	w13, #0x0
0000000000039788	mov	x12, x11
000000000003978c	cbnz	w13, 0x397b8
0000000000039790	cmp	x12, x9
0000000000039794	b.ge	0x397b8
0000000000039798	ldxr	x11, [x10]
000000000003979c	cmp	x11, x12
00000000000397a0	b.ne	0x39780
00000000000397a4	stlxr	w12, x9, [x10]
00000000000397a8	cbnz	w12, 0x39784
00000000000397ac	mov	w13, #0x1
00000000000397b0	mov	x12, x11
00000000000397b4	cbz	w13, 0x39790
00000000000397b8	add	x8, x8, #0x8
00000000000397bc	ldxr	x9, [x8]
00000000000397c0	add	x9, x9, #0x1
00000000000397c4	stxr	w10, x9, [x8]
00000000000397c8	cbnz	w10, 0x397bc
00000000000397cc	mov	x9, #-0x1
00000000000397d0	b	0x39890
00000000000397d4	cbz	w9, 0x39868
00000000000397d8	ldxr	x9, [x11]
00000000000397dc	add	x10, x9, #0x1
00000000000397e0	stxr	w12, x10, [x11]
00000000000397e4	cbnz	w12, 0x397d8
00000000000397e8	add	x11, x8, #0x10
00000000000397ec	ldr	x13, [x8, #0x10]
00000000000397f0	b	0x39804
00000000000397f4	clrex
00000000000397f8	mov	w14, #0x0
00000000000397fc	mov	x13, x12
0000000000039800	cbnz	w14, 0x3982c
0000000000039804	cmp	x13, x9
0000000000039808	b.gt	0x3982c
000000000003980c	ldxr	x12, [x11]
0000000000039810	cmp	x12, x13
0000000000039814	b.ne	0x397f4
0000000000039818	stlxr	w13, x10, [x11]
000000000003981c	cbnz	w13, 0x397f8
0000000000039820	mov	w14, #0x1
0000000000039824	mov	x13, x12
0000000000039828	cbz	w14, 0x39804
000000000003982c	ldxr	x9, [x8]
0000000000039830	add	x9, x9, #0x1
0000000000039834	stxr	w10, x9, [x8]
0000000000039838	cbnz	w10, 0x3982c
000000000003983c	mov	w9, #0x1
0000000000039840	b	0x39890
0000000000039844	ldp	x10, x9, [x8, #0x10]
0000000000039848	sub	x9, x9, #0x1
000000000003984c	str	x9, [x8, #0x18]
0000000000039850	cmp	x9, x10
0000000000039854	b.le	0x3985c
0000000000039858	str	x9, [x8, #0x10]
000000000003985c	add	x8, x8, #0x8
0000000000039860	mov	x9, #-0x1
0000000000039864	b	0x39884
0000000000039868	ldp	x11, x10, [x8, #0x10]
000000000003986c	add	x9, x10, #0x1
0000000000039870	str	x9, [x8, #0x18]
0000000000039874	cmp	x10, x11
0000000000039878	b.lt	0x39880
000000000003987c	str	x9, [x8, #0x10]
0000000000039880	mov	w9, #0x1
0000000000039884	ldr	x10, [x8]
0000000000039888	add	x10, x10, #0x1
000000000003988c	str	x10, [x8]
0000000000039890	ldp	x8, x10, [x20, #0x38]
0000000000039894	add	x8, x8, x9
0000000000039898	str	x8, [x20, #0x38]
000000000003989c	cmp	x8, x10
00000000000398a0	b.hi	0x398c4
00000000000398a4	ldp	x8, x9, [x20, #0x48]
00000000000398a8	sub	x8, x8, x23
00000000000398ac	str	x8, [x20, #0x48]
00000000000398b0	cmp	x8, x9
00000000000398b4	b.hi	0x398dc
00000000000398b8	ldr	x8, [x22, #0x40]
00000000000398bc	cbnz	x8, 0x398e8
00000000000398c0	b	0x39638
00000000000398c4	str	x8, [x20, #0x40]
00000000000398c8	ldp	x8, x9, [x20, #0x48]
00000000000398cc	sub	x8, x8, x23
00000000000398d0	str	x8, [x20, #0x48]
00000000000398d4	cmp	x8, x9
00000000000398d8	b.ls	0x398b8
00000000000398dc	str	x8, [x20, #0x50]
00000000000398e0	ldr	x8, [x22, #0x40]
00000000000398e4	cbz	x8, 0x39638
00000000000398e8	cmp	x8, #0x1f
00000000000398ec	b.hi	0x39900
00000000000398f0	mov	w10, #0x0
00000000000398f4	mov	x9, #0x0
00000000000398f8	mov	w27, #0x1
00000000000398fc	b	0x39b9c
0000000000039900	and	x9, x8, #0xffffffffffffffe0
0000000000039904	add	x10, x22, x26
0000000000039908	movi.16b	v2, #0x1
000000000003990c	movi.16b	v0, #0x0
0000000000039910	mov	x11, x9
0000000000039914	movi.16b	v1, #0x0
0000000000039918	movi.16b	v3, #0x1
000000000003991c	sub	x12, x10, #0x7c0
0000000000039920	prfm	pldl1keep, [x12]
0000000000039924	sub	x12, x10, #0x780
0000000000039928	prfm	pldl1keep, [x12]
000000000003992c	sub	x12, x10, #0xfc0
0000000000039930	ldr	b4, [x12]
0000000000039934	sub	x12, x10, #0x740
0000000000039938	prfm	pldl1keep, [x12]
000000000003993c	sub	x12, x10, #0xf80
0000000000039940	ld1.b	{ v4 }[1], [x12]
0000000000039944	sub	x12, x10, #0x700
0000000000039948	prfm	pldl1keep, [x12]
000000000003994c	sub	x12, x10, #0xf40
0000000000039950	ld1.b	{ v4 }[2], [x12]
0000000000039954	sub	x12, x10, #0x6c0
0000000000039958	prfm	pldl1keep, [x12]
000000000003995c	sub	x12, x10, #0xf00
0000000000039960	ld1.b	{ v4 }[3], [x12]
0000000000039964	sub	x12, x10, #0x680
0000000000039968	prfm	pldl1keep, [x12]
000000000003996c	sub	x12, x10, #0xec0
0000000000039970	ld1.b	{ v4 }[4], [x12]
0000000000039974	sub	x12, x10, #0x640
0000000000039978	prfm	pldl1keep, [x12]
000000000003997c	sub	x12, x10, #0xe80
0000000000039980	ld1.b	{ v4 }[5], [x12]
0000000000039984	sub	x12, x10, #0x600
0000000000039988	prfm	pldl1keep, [x12]
000000000003998c	sub	x12, x10, #0xe40
0000000000039990	ld1.b	{ v4 }[6], [x12]
0000000000039994	sub	x12, x10, #0x5c0
0000000000039998	prfm	pldl1keep, [x12]
000000000003999c	sub	x12, x10, #0xe00
00000000000399a0	ld1.b	{ v4 }[7], [x12]
00000000000399a4	sub	x12, x10, #0x580
00000000000399a8	prfm	pldl1keep, [x12]
00000000000399ac	sub	x12, x10, #0xdc0
00000000000399b0	ld1.b	{ v4 }[8], [x12]
00000000000399b4	sub	x12, x10, #0x540
00000000000399b8	prfm	pldl1keep, [x12]
00000000000399bc	sub	x12, x10, #0xd80
00000000000399c0	ld1.b	{ v4 }[9], [x12]
00000000000399c4	sub	x12, x10, #0x500
00000000000399c8	prfm	pldl1keep, [x12]
00000000000399cc	sub	x12, x10, #0xd40
00000000000399d0	ld1.b	{ v4 }[10], [x12]
00000000000399d4	sub	x12, x10, #0x4c0
00000000000399d8	prfm	pldl1keep, [x12]
00000000000399dc	sub	x12, x10, #0xd00
00000000000399e0	ld1.b	{ v4 }[11], [x12]
00000000000399e4	sub	x12, x10, #0x480
00000000000399e8	prfm	pldl1keep, [x12]
00000000000399ec	sub	x12, x10, #0xcc0
00000000000399f0	ld1.b	{ v4 }[12], [x12]
00000000000399f4	sub	x12, x10, #0x440
00000000000399f8	prfm	pldl1keep, [x12]
00000000000399fc	sub	x12, x10, #0xc80
0000000000039a00	ld1.b	{ v4 }[13], [x12]
0000000000039a04	sub	x12, x10, #0x400
0000000000039a08	prfm	pldl1keep, [x12]
0000000000039a0c	sub	x12, x10, #0xc40
0000000000039a10	ld1.b	{ v4 }[14], [x12]
0000000000039a14	sub	x12, x10, #0xc00
0000000000039a18	ld1.b	{ v4 }[15], [x12]
0000000000039a1c	sub	x12, x10, #0x3c0
0000000000039a20	prfm	pldl1keep, [x12]
0000000000039a24	sub	x12, x10, #0x380
0000000000039a28	prfm	pldl1keep, [x12]
0000000000039a2c	sub	x12, x10, #0xbc0
0000000000039a30	ldr	b5, [x12]
0000000000039a34	sub	x12, x10, #0x340
0000000000039a38	prfm	pldl1keep, [x12]
0000000000039a3c	sub	x12, x10, #0xb80
0000000000039a40	ld1.b	{ v5 }[1], [x12]
0000000000039a44	sub	x12, x10, #0x300
0000000000039a48	prfm	pldl1keep, [x12]
0000000000039a4c	sub	x12, x10, #0xb40
0000000000039a50	ld1.b	{ v5 }[2], [x12]
0000000000039a54	sub	x12, x10, #0x2c0
0000000000039a58	prfm	pldl1keep, [x12]
0000000000039a5c	sub	x12, x10, #0xb00
0000000000039a60	ld1.b	{ v5 }[3], [x12]
0000000000039a64	sub	x12, x10, #0x280
0000000000039a68	prfm	pldl1keep, [x12]
0000000000039a6c	sub	x12, x10, #0xac0
0000000000039a70	ld1.b	{ v5 }[4], [x12]
0000000000039a74	sub	x12, x10, #0x240
0000000000039a78	prfm	pldl1keep, [x12]
0000000000039a7c	sub	x12, x10, #0xa80
0000000000039a80	ld1.b	{ v5 }[5], [x12]
0000000000039a84	sub	x12, x10, #0x200
0000000000039a88	prfm	pldl1keep, [x12]
0000000000039a8c	sub	x12, x10, #0xa40
0000000000039a90	ld1.b	{ v5 }[6], [x12]
0000000000039a94	sub	x12, x10, #0x1c0
0000000000039a98	prfm	pldl1keep, [x12]
0000000000039a9c	sub	x12, x10, #0xa00
0000000000039aa0	ld1.b	{ v5 }[7], [x12]
0000000000039aa4	sub	x12, x10, #0x180
0000000000039aa8	prfm	pldl1keep, [x12]
0000000000039aac	sub	x12, x10, #0x9c0
0000000000039ab0	ld1.b	{ v5 }[8], [x12]
0000000000039ab4	sub	x12, x10, #0x140
0000000000039ab8	prfm	pldl1keep, [x12]
0000000000039abc	sub	x12, x10, #0x980
0000000000039ac0	ld1.b	{ v5 }[9], [x12]
0000000000039ac4	sub	x12, x10, #0x940
0000000000039ac8	prfum	pldl1keep, [x10, #-0x100]
0000000000039acc	ld1.b	{ v5 }[10], [x12]
0000000000039ad0	sub	x12, x10, #0x900
0000000000039ad4	prfum	pldl1keep, [x10, #-0xc0]
0000000000039ad8	ld1.b	{ v5 }[11], [x12]
0000000000039adc	sub	x12, x10, #0x8c0
0000000000039ae0	prfum	pldl1keep, [x10, #-0x80]
0000000000039ae4	ld1.b	{ v5 }[12], [x12]
0000000000039ae8	sub	x12, x10, #0x880
0000000000039aec	prfum	pldl1keep, [x10, #-0x40]
0000000000039af0	ld1.b	{ v5 }[13], [x12]
0000000000039af4	sub	x12, x10, #0x840
0000000000039af8	prfm	pldl1keep, [x10]
0000000000039afc	ld1.b	{ v5 }[14], [x12]
0000000000039b00	sub	x12, x10, #0x800
0000000000039b04	ld1.b	{ v5 }[15], [x12]
0000000000039b08	and.16b	v6, v4, v16
0000000000039b0c	and.16b	v7, v5, v16
0000000000039b10	cmeq.16b	v6, v6, #0
0000000000039b14	cmeq.16b	v7, v7, #0
0000000000039b18	bic.16b	v2, v2, v6
0000000000039b1c	and.16b	v4, v4, v17
0000000000039b20	and.16b	v5, v5, v17
0000000000039b24	bic.16b	v3, v3, v7
0000000000039b28	cmeq.16b	v4, v4, #0
0000000000039b2c	cmeq.16b	v5, v5, #0
0000000000039b30	orn.16b	v0, v0, v4
0000000000039b34	orn.16b	v1, v1, v5
0000000000039b38	add	x10, x10, #0x800
0000000000039b3c	subs	x11, x11, #0x20
0000000000039b40	b.ne	0x3991c
0000000000039b44	and.16b	v2, v3, v2
0000000000039b48	dup.2d	v3, v2[1]
0000000000039b4c	and.16b	v2, v2, v3
0000000000039b50	dup.4s	v3, v2[1]
0000000000039b54	and.16b	v2, v2, v3
0000000000039b58	dup.8h	v3, v2[1]
0000000000039b5c	and.16b	v2, v2, v3
0000000000039b60	dup.16b	v3, v2[1]
0000000000039b64	and.16b	v2, v2, v3
0000000000039b68	umov.b	w27, v2[0]
0000000000039b6c	orr.16b	v0, v1, v0
0000000000039b70	dup.2d	v1, v0[1]
0000000000039b74	orr.16b	v0, v0, v1
0000000000039b78	dup.4s	v1, v0[1]
0000000000039b7c	orr.16b	v0, v0, v1
0000000000039b80	dup.8h	v1, v0[1]
0000000000039b84	orr.16b	v0, v0, v1
0000000000039b88	dup.16b	v1, v0[1]
0000000000039b8c	orr.16b	v0, v0, v1
0000000000039b90	umov.b	w10, v0[0]
0000000000039b94	cmp	x8, x9
0000000000039b98	b.eq	0x39bc4
0000000000039b9c	sub	x8, x8, x9
0000000000039ba0	add	x9, x22, x9, lsl #6
0000000000039ba4	add	x9, x9, #0x79
0000000000039ba8	ldrb	w11, [x9], #0x40
0000000000039bac	and	w12, w11, #0x4
0000000000039bb0	and	w27, w27, w12, lsr #2
0000000000039bb4	and	w11, w11, #0x2
0000000000039bb8	orr	w10, w10, w11, lsr #1
0000000000039bbc	subs	x8, x8, #0x1
0000000000039bc0	b.ne	0x39ba8
0000000000039bc4	tbz	w10, #0x0, 0x39be4
0000000000039bc8	mov	w0, #0x5
0000000000039bcc	bl	_mi_option_get
0000000000039bd0	cmp	x0, #0x0
0000000000039bd4	cset	w8, eq
0000000000039bd8	and	w27, w27, w8
0000000000039bdc	mov	w4, #0x1
0000000000039be0	b	0x39640
0000000000039be4	mov	w4, #0x0
0000000000039be8	b	0x39640
0000000000039bec	ldr	x21, [x19, #0x48]
0000000000039bf0	add	x8, x19, #0x68
0000000000039bf4	stlr	xzr, [x8]
0000000000039bf8	ldr	x8, [x20, #0x70]
0000000000039bfc	cmp	x8, x24
0000000000039c00	cset	w9, hs
0000000000039c04	add	x10, x24, #0x240
0000000000039c08	cmp	x8, x10
0000000000039c0c	cset	w10, lo
0000000000039c10	and	w9, w9, w10
0000000000039c14	add	x11, x8, #0x18
0000000000039c18	cmp	x21, #0x0
0000000000039c1c	b.le	0x39c94
0000000000039c20	cbz	w9, 0x39d04
0000000000039c24	ldxr	x9, [x11]
0000000000039c28	sub	x9, x9, #0x1
0000000000039c2c	stxr	w10, x9, [x11]
0000000000039c30	cbnz	w10, 0x39c24
0000000000039c34	add	x10, x8, #0x10
0000000000039c38	ldr	x12, [x8, #0x10]
0000000000039c3c	b	0x39c50
0000000000039c40	clrex
0000000000039c44	mov	w13, #0x0
0000000000039c48	mov	x12, x11
0000000000039c4c	cbnz	w13, 0x39c78
0000000000039c50	cmp	x12, x9
0000000000039c54	b.ge	0x39c78
0000000000039c58	ldxr	x11, [x10]
0000000000039c5c	cmp	x11, x12
0000000000039c60	b.ne	0x39c40
0000000000039c64	stlxr	w12, x9, [x10]
0000000000039c68	cbnz	w12, 0x39c44
0000000000039c6c	mov	w13, #0x1
0000000000039c70	mov	x12, x11
0000000000039c74	cbz	w13, 0x39c50
0000000000039c78	add	x8, x8, #0x8
0000000000039c7c	ldxr	x9, [x8]
0000000000039c80	add	x9, x9, #0x1
0000000000039c84	stxr	w10, x9, [x8]
0000000000039c88	cbnz	w10, 0x39c7c
0000000000039c8c	mov	x9, #-0x1
0000000000039c90	b	0x39d50
0000000000039c94	cbz	w9, 0x39d28
0000000000039c98	ldxr	x9, [x11]
0000000000039c9c	add	x10, x9, #0x1
0000000000039ca0	stxr	w12, x10, [x11]
0000000000039ca4	cbnz	w12, 0x39c98
0000000000039ca8	add	x11, x8, #0x10
0000000000039cac	ldr	x13, [x8, #0x10]
0000000000039cb0	b	0x39cc4
0000000000039cb4	clrex
0000000000039cb8	mov	w14, #0x0
0000000000039cbc	mov	x13, x12
0000000000039cc0	cbnz	w14, 0x39cec
0000000000039cc4	cmp	x13, x9
0000000000039cc8	b.gt	0x39cec
0000000000039ccc	ldxr	x12, [x11]
0000000000039cd0	cmp	x12, x13
0000000000039cd4	b.ne	0x39cb4
0000000000039cd8	stlxr	w13, x10, [x11]
0000000000039cdc	cbnz	w13, 0x39cb8
0000000000039ce0	mov	w14, #0x1
0000000000039ce4	mov	x13, x12
0000000000039ce8	cbz	w14, 0x39cc4
0000000000039cec	mov	w9, #0x1
0000000000039cf0	ldxr	x10, [x8]
0000000000039cf4	add	x10, x10, #0x1
0000000000039cf8	stxr	w11, x10, [x8]
0000000000039cfc	cbnz	w11, 0x39cf0
0000000000039d00	b	0x39d50
0000000000039d04	ldp	x10, x9, [x8, #0x10]
0000000000039d08	sub	x9, x9, #0x1
0000000000039d0c	str	x9, [x8, #0x18]
0000000000039d10	cmp	x9, x10
0000000000039d14	b.le	0x39d1c
0000000000039d18	str	x9, [x8, #0x10]
0000000000039d1c	add	x8, x8, #0x8
0000000000039d20	mov	x9, #-0x1
0000000000039d24	b	0x39d44
0000000000039d28	ldp	x11, x10, [x8, #0x10]
0000000000039d2c	add	x9, x10, #0x1
0000000000039d30	str	x9, [x8, #0x18]
0000000000039d34	cmp	x10, x11
0000000000039d38	b.lt	0x39d40
0000000000039d3c	str	x9, [x8, #0x10]
0000000000039d40	mov	w9, #0x1
0000000000039d44	ldr	x10, [x8]
0000000000039d48	add	x10, x10, #0x1
0000000000039d4c	str	x10, [x8]
0000000000039d50	ldp	x8, x10, [x20, #0x38]
0000000000039d54	add	x8, x8, x9
0000000000039d58	str	x8, [x20, #0x38]
0000000000039d5c	cmp	x8, x10
0000000000039d60	b.hi	0x39d98
0000000000039d64	ldp	x8, x9, [x20, #0x48]
0000000000039d68	sub	x8, x8, x21
0000000000039d6c	str	x8, [x20, #0x48]
0000000000039d70	cmp	x8, x9
0000000000039d74	b.hi	0x39db0
0000000000039d78	ldr	x8, [x19, #0x40]
0000000000039d7c	cbz	x8, 0x39dbc
0000000000039d80	cmp	x8, #0x1f
0000000000039d84	b.hi	0x39dc8
0000000000039d88	mov	w10, #0x0
0000000000039d8c	mov	x9, #0x0
0000000000039d90	mov	w20, #0x1
0000000000039d94	b	0x3a070
0000000000039d98	str	x8, [x20, #0x40]
0000000000039d9c	ldp	x8, x9, [x20, #0x48]
0000000000039da0	sub	x8, x8, x21
0000000000039da4	str	x8, [x20, #0x48]
0000000000039da8	cmp	x8, x9
0000000000039dac	b.ls	0x39d78
0000000000039db0	str	x8, [x20, #0x50]
0000000000039db4	ldr	x8, [x19, #0x40]
0000000000039db8	cbnz	x8, 0x39d80
0000000000039dbc	mov	w4, #0x0
0000000000039dc0	mov	w20, #0x1
0000000000039dc4	b	0x3a0bc
0000000000039dc8	and	x9, x8, #0xffffffffffffffe0
0000000000039dcc	mov	w10, #0x1039
0000000000039dd0	add	x10, x19, x10
0000000000039dd4	movi.16b	v2, #0x1
0000000000039dd8	movi.16b	v0, #0x0
0000000000039ddc	movi.16b	v3, #0x4
0000000000039de0	movi.16b	v4, #0x2
0000000000039de4	mov	x11, x9
0000000000039de8	movi.16b	v1, #0x0
0000000000039dec	movi.16b	v5, #0x1
0000000000039df0	sub	x12, x10, #0x7c0
0000000000039df4	prfm	pldl1keep, [x12]
0000000000039df8	sub	x12, x10, #0x780
0000000000039dfc	prfm	pldl1keep, [x12]
0000000000039e00	sub	x12, x10, #0xfc0
0000000000039e04	ldr	b6, [x12]
0000000000039e08	sub	x12, x10, #0x740
0000000000039e0c	prfm	pldl1keep, [x12]
0000000000039e10	sub	x12, x10, #0xf80
0000000000039e14	ld1.b	{ v6 }[1], [x12]
0000000000039e18	sub	x12, x10, #0x700
0000000000039e1c	prfm	pldl1keep, [x12]
0000000000039e20	sub	x12, x10, #0xf40
0000000000039e24	ld1.b	{ v6 }[2], [x12]
0000000000039e28	sub	x12, x10, #0x6c0
0000000000039e2c	prfm	pldl1keep, [x12]
0000000000039e30	sub	x12, x10, #0xf00
0000000000039e34	ld1.b	{ v6 }[3], [x12]
0000000000039e38	sub	x12, x10, #0x680
0000000000039e3c	prfm	pldl1keep, [x12]
0000000000039e40	sub	x12, x10, #0xec0
0000000000039e44	ld1.b	{ v6 }[4], [x12]
0000000000039e48	sub	x12, x10, #0x640
0000000000039e4c	prfm	pldl1keep, [x12]
0000000000039e50	sub	x12, x10, #0xe80
0000000000039e54	ld1.b	{ v6 }[5], [x12]
0000000000039e58	sub	x12, x10, #0x600
0000000000039e5c	prfm	pldl1keep, [x12]
0000000000039e60	sub	x12, x10, #0xe40
0000000000039e64	ld1.b	{ v6 }[6], [x12]
0000000000039e68	sub	x12, x10, #0x5c0
0000000000039e6c	prfm	pldl1keep, [x12]
0000000000039e70	sub	x12, x10, #0xe00
0000000000039e74	ld1.b	{ v6 }[7], [x12]
0000000000039e78	sub	x12, x10, #0x580
0000000000039e7c	prfm	pldl1keep, [x12]
0000000000039e80	sub	x12, x10, #0xdc0
0000000000039e84	ld1.b	{ v6 }[8], [x12]
0000000000039e88	sub	x12, x10, #0x540
0000000000039e8c	prfm	pldl1keep, [x12]
0000000000039e90	sub	x12, x10, #0xd80
0000000000039e94	ld1.b	{ v6 }[9], [x12]
0000000000039e98	sub	x12, x10, #0x500
0000000000039e9c	prfm	pldl1keep, [x12]
0000000000039ea0	sub	x12, x10, #0xd40
0000000000039ea4	ld1.b	{ v6 }[10], [x12]
0000000000039ea8	sub	x12, x10, #0x4c0
0000000000039eac	prfm	pldl1keep, [x12]
0000000000039eb0	sub	x12, x10, #0xd00
0000000000039eb4	ld1.b	{ v6 }[11], [x12]
0000000000039eb8	sub	x12, x10, #0x480
0000000000039ebc	prfm	pldl1keep, [x12]
0000000000039ec0	sub	x12, x10, #0xcc0
0000000000039ec4	ld1.b	{ v6 }[12], [x12]
0000000000039ec8	sub	x12, x10, #0x440
0000000000039ecc	prfm	pldl1keep, [x12]
0000000000039ed0	sub	x12, x10, #0xc80
0000000000039ed4	ld1.b	{ v6 }[13], [x12]
0000000000039ed8	sub	x12, x10, #0x400
0000000000039edc	prfm	pldl1keep, [x12]
0000000000039ee0	sub	x12, x10, #0xc40
0000000000039ee4	ld1.b	{ v6 }[14], [x12]
0000000000039ee8	sub	x12, x10, #0xc00
0000000000039eec	ld1.b	{ v6 }[15], [x12]
0000000000039ef0	sub	x12, x10, #0x3c0
0000000000039ef4	prfm	pldl1keep, [x12]
0000000000039ef8	sub	x12, x10, #0x380
0000000000039efc	prfm	pldl1keep, [x12]
0000000000039f00	sub	x12, x10, #0xbc0
0000000000039f04	ldr	b7, [x12]
0000000000039f08	sub	x12, x10, #0x340
0000000000039f0c	prfm	pldl1keep, [x12]
0000000000039f10	sub	x12, x10, #0xb80
0000000000039f14	ld1.b	{ v7 }[1], [x12]
0000000000039f18	sub	x12, x10, #0x300
0000000000039f1c	prfm	pldl1keep, [x12]
0000000000039f20	sub	x12, x10, #0xb40
0000000000039f24	ld1.b	{ v7 }[2], [x12]
0000000000039f28	sub	x12, x10, #0x2c0
0000000000039f2c	prfm	pldl1keep, [x12]
0000000000039f30	sub	x12, x10, #0xb00
0000000000039f34	ld1.b	{ v7 }[3], [x12]
0000000000039f38	sub	x12, x10, #0x280
0000000000039f3c	prfm	pldl1keep, [x12]
0000000000039f40	sub	x12, x10, #0xac0
0000000000039f44	ld1.b	{ v7 }[4], [x12]
0000000000039f48	sub	x12, x10, #0x240
0000000000039f4c	prfm	pldl1keep, [x12]
0000000000039f50	sub	x12, x10, #0xa80
0000000000039f54	ld1.b	{ v7 }[5], [x12]
0000000000039f58	sub	x12, x10, #0x200
0000000000039f5c	prfm	pldl1keep, [x12]
0000000000039f60	sub	x12, x10, #0xa40
0000000000039f64	ld1.b	{ v7 }[6], [x12]
0000000000039f68	sub	x12, x10, #0x1c0
0000000000039f6c	prfm	pldl1keep, [x12]
0000000000039f70	sub	x12, x10, #0xa00
0000000000039f74	ld1.b	{ v7 }[7], [x12]
0000000000039f78	sub	x12, x10, #0x180
0000000000039f7c	prfm	pldl1keep, [x12]
0000000000039f80	sub	x12, x10, #0x9c0
0000000000039f84	ld1.b	{ v7 }[8], [x12]
0000000000039f88	sub	x12, x10, #0x140
0000000000039f8c	prfm	pldl1keep, [x12]
0000000000039f90	sub	x12, x10, #0x980
0000000000039f94	ld1.b	{ v7 }[9], [x12]
0000000000039f98	sub	x12, x10, #0x940
0000000000039f9c	prfum	pldl1keep, [x10, #-0x100]
0000000000039fa0	ld1.b	{ v7 }[10], [x12]
0000000000039fa4	sub	x12, x10, #0x900
0000000000039fa8	prfum	pldl1keep, [x10, #-0xc0]
0000000000039fac	ld1.b	{ v7 }[11], [x12]
0000000000039fb0	sub	x12, x10, #0x8c0
0000000000039fb4	prfum	pldl1keep, [x10, #-0x80]
0000000000039fb8	ld1.b	{ v7 }[12], [x12]
0000000000039fbc	sub	x12, x10, #0x880
0000000000039fc0	prfum	pldl1keep, [x10, #-0x40]
0000000000039fc4	ld1.b	{ v7 }[13], [x12]
0000000000039fc8	sub	x12, x10, #0x840
0000000000039fcc	prfm	pldl1keep, [x10]
0000000000039fd0	ld1.b	{ v7 }[14], [x12]
0000000000039fd4	sub	x12, x10, #0x800
0000000000039fd8	ld1.b	{ v7 }[15], [x12]
0000000000039fdc	and.16b	v16, v6, v3
0000000000039fe0	and.16b	v17, v7, v3
0000000000039fe4	cmeq.16b	v16, v16, #0
0000000000039fe8	cmeq.16b	v17, v17, #0
0000000000039fec	bic.16b	v2, v2, v16
0000000000039ff0	and.16b	v6, v6, v4
0000000000039ff4	and.16b	v7, v7, v4
0000000000039ff8	bic.16b	v5, v5, v17
0000000000039ffc	cmeq.16b	v6, v6, #0
000000000003a000	cmeq.16b	v7, v7, #0
000000000003a004	orn.16b	v0, v0, v6
000000000003a008	orn.16b	v1, v1, v7
000000000003a00c	add	x10, x10, #0x800
000000000003a010	subs	x11, x11, #0x20
000000000003a014	b.ne	0x39df0
000000000003a018	and.16b	v2, v5, v2
000000000003a01c	dup.2d	v3, v2[1]
000000000003a020	and.16b	v2, v2, v3
000000000003a024	dup.4s	v3, v2[1]
000000000003a028	and.16b	v2, v2, v3
000000000003a02c	dup.8h	v3, v2[1]
000000000003a030	and.16b	v2, v2, v3
000000000003a034	dup.16b	v3, v2[1]
000000000003a038	and.16b	v2, v2, v3
000000000003a03c	umov.b	w20, v2[0]
000000000003a040	orr.16b	v0, v1, v0
000000000003a044	dup.2d	v1, v0[1]
000000000003a048	orr.16b	v0, v0, v1
000000000003a04c	dup.4s	v1, v0[1]
000000000003a050	orr.16b	v0, v0, v1
000000000003a054	dup.8h	v1, v0[1]
000000000003a058	orr.16b	v0, v0, v1
000000000003a05c	dup.16b	v1, v0[1]
000000000003a060	orr.16b	v0, v0, v1
000000000003a064	umov.b	w10, v0[0]
000000000003a068	cmp	x8, x9
000000000003a06c	b.eq	0x3a098
000000000003a070	sub	x8, x8, x9
000000000003a074	add	x9, x19, x9, lsl #6
000000000003a078	add	x9, x9, #0x79
000000000003a07c	ldrb	w11, [x9], #0x40
000000000003a080	and	w12, w11, #0x4
000000000003a084	and	w20, w20, w12, lsr #2
000000000003a088	and	w11, w11, #0x2
000000000003a08c	orr	w10, w10, w11, lsr #1
000000000003a090	subs	x8, x8, #0x1
000000000003a094	b.ne	0x3a07c
000000000003a098	tbz	w10, #0x0, 0x3a0b8
000000000003a09c	mov	w0, #0x5
000000000003a0a0	bl	_mi_option_get
000000000003a0a4	cmp	x0, #0x0
000000000003a0a8	cset	w8, eq
000000000003a0ac	and	w20, w20, w8
000000000003a0b0	mov	w4, #0x1
000000000003a0b4	b	0x3a0bc
000000000003a0b8	mov	w4, #0x0
000000000003a0bc	ldr	x2, [x19]
000000000003a0c0	and	w3, w20, #0x1
000000000003a0c4	mov	x0, x19
000000000003a0c8	mov	x1, x21
000000000003a0cc	ldp	x29, x30, [sp, #0x50]
000000000003a0d0	ldp	x20, x19, [sp, #0x40]
000000000003a0d4	ldp	x22, x21, [sp, #0x30]
000000000003a0d8	ldp	x24, x23, [sp, #0x20]
000000000003a0dc	ldp	x26, x25, [sp, #0x10]
000000000003a0e0	ldp	x28, x27, [sp], #0x60
000000000003a0e4	b	__mi_mem_free
000000000003a0e8	str	x10, [x8]
000000000003a0ec	ldr	x10, [x8, #0x8]
000000000003a0f0	cmp	x10, x19
000000000003a0f4	b.ne	0x39590
000000000003a0f8	ldr	x10, [x19, #0x20]
000000000003a0fc	str	x10, [x8, #0x8]
000000000003a100	b	0x39590
000000000003a104	str	x10, [x8]
000000000003a108	ldr	x10, [x8, #0x8]
000000000003a10c	cmp	x10, x19
000000000003a110	b.ne	0x395d4
000000000003a114	ldr	x10, [x19, #0x20]
000000000003a118	str	x10, [x8, #0x8]
000000000003a11c	b	0x395d4
000000000003a120	ldp	x9, x12, [x20, #0x68]
000000000003a124	str	x9, [x19, #0x18]
000000000003a128	str	x19, [x20, #0x68]
000000000003a12c	add	x8, x8, #0x1
000000000003a130	str	x8, [x20, #0x58]
000000000003a134	add	x8, x12, #0x1a0
000000000003a138	cmp	x8, x24
000000000003a13c	b.lo	0x3a280
000000000003a140	adr	x9, #0x5a980
000000000003a144	nop
000000000003a148	cmp	x8, x9
000000000003a14c	b.hs	0x3a280
000000000003a150	add	x11, x12, #0x1b8
000000000003a154	ldxr	x9, [x11]
000000000003a158	add	x10, x9, #0x1
000000000003a15c	stxr	w13, x10, [x11]
000000000003a160	cbnz	w13, 0x3a154
000000000003a164	add	x11, x12, #0x1b0
000000000003a168	ldr	x13, [x12, #0x1b0]
000000000003a16c	b	0x3a180
000000000003a170	clrex
000000000003a174	mov	w14, #0x0
000000000003a178	mov	x13, x12
000000000003a17c	cbnz	w14, 0x3a1a8
000000000003a180	cmp	x13, x9
000000000003a184	b.gt	0x3a1a8
000000000003a188	ldxr	x12, [x11]
000000000003a18c	cmp	x12, x13
000000000003a190	b.ne	0x3a170
000000000003a194	stlxr	w13, x10, [x11]
000000000003a198	cbnz	w13, 0x3a174
000000000003a19c	mov	w14, #0x1
000000000003a1a0	mov	x13, x12
000000000003a1a4	cbz	w14, 0x3a180
000000000003a1a8	ldxr	x9, [x8]
000000000003a1ac	add	x9, x9, #0x1
000000000003a1b0	stxr	w10, x9, [x8]
000000000003a1b4	cbnz	w10, 0x3a1a8
000000000003a1b8	b	0x3a2a4
000000000003a1bc	add	x9, x19, #0x78
000000000003a1c0	b	0x3a1d8
000000000003a1c4	str	wzr, [x9, #0x10]
000000000003a1c8	stp	xzr, xzr, [x9, #0x30]
000000000003a1cc	add	x9, x9, #0x40
000000000003a1d0	subs	x8, x8, #0x1
000000000003a1d4	b.eq	0x39314
000000000003a1d8	ldrb	w10, [x9, #0x1]
000000000003a1dc	and	w10, w10, #0x7
000000000003a1e0	cmp	w10, #0x4
000000000003a1e4	b.ne	0x3a1cc
000000000003a1e8	ldp	x10, x11, [x9, #0x30]
000000000003a1ec	cbz	x10, 0x3a1f8
000000000003a1f0	cbnz	x11, 0x3a1fc
000000000003a1f4	b	0x3a208
000000000003a1f8	cbz	x11, 0x3a244
000000000003a1fc	str	x10, [x11, #0x30]
000000000003a200	ldr	x10, [x9, #0x30]
000000000003a204	cbz	x10, 0x3a20c
000000000003a208	str	x11, [x10, #0x38]
000000000003a20c	ldr	x11, [x20, #0x28]
000000000003a210	cmp	x9, x11
000000000003a214	b.eq	0x3a228
000000000003a218	ldr	x11, [x20, #0x20]
000000000003a21c	cmp	x9, x11
000000000003a220	b.ne	0x3a1c4
000000000003a224	b	0x3a23c
000000000003a228	ldr	x11, [x9, #0x38]
000000000003a22c	str	x11, [x20, #0x28]
000000000003a230	ldr	x11, [x20, #0x20]
000000000003a234	cmp	x9, x11
000000000003a238	b.ne	0x3a1c4
000000000003a23c	str	x10, [x20, #0x20]
000000000003a240	b	0x3a1c4
000000000003a244	ldr	x11, [x20, #0x20]
000000000003a248	cmp	x9, x11
000000000003a24c	b.eq	0x3a20c
000000000003a250	ldr	x11, [x20, #0x28]
000000000003a254	cmp	x9, x11
000000000003a258	b.ne	0x3a1cc
000000000003a25c	b	0x3a20c
000000000003a260	ldr	x11, [x8]
000000000003a264	cmp	x11, x19
000000000003a268	b.ne	0x39594
000000000003a26c	b	0x39578
000000000003a270	ldr	x11, [x8]
000000000003a274	cmp	x11, x19
000000000003a278	b.ne	0x395d8
000000000003a27c	b	0x395bc
000000000003a280	ldp	x11, x10, [x12, #0x1b0]
000000000003a284	add	x9, x10, #0x1
000000000003a288	str	x9, [x12, #0x1b8]
000000000003a28c	cmp	x10, x11
000000000003a290	b.lt	0x3a298
000000000003a294	str	x9, [x12, #0x1b0]
000000000003a298	ldr	x9, [x8]
000000000003a29c	add	x9, x9, #0x1
000000000003a2a0	str	x9, [x8]
000000000003a2a4	ldp	x29, x30, [sp, #0x50]
000000000003a2a8	ldp	x20, x19, [sp, #0x40]
000000000003a2ac	ldp	x22, x21, [sp, #0x30]
000000000003a2b0	ldp	x24, x23, [sp, #0x20]
000000000003a2b4	ldp	x26, x25, [sp, #0x10]
000000000003a2b8	ldp	x28, x27, [sp], #0x60
000000000003a2bc	ret
_mi_segment_abandon:
000000000003a2c0	sub	sp, sp, #0x50
000000000003a2c4	stp	x24, x23, [sp, #0x10]
000000000003a2c8	stp	x22, x21, [sp, #0x20]
000000000003a2cc	stp	x20, x19, [sp, #0x30]
000000000003a2d0	stp	x29, x30, [sp, #0x40]
000000000003a2d4	add	x29, sp, #0x40
000000000003a2d8	mov	x20, x1
000000000003a2dc	mov	x19, x0
000000000003a2e0	mov	w0, #0xa
000000000003a2e4	bl	_mi_option_get
000000000003a2e8	cbz	x0, 0x3a3d0
000000000003a2ec	mov	x0, sp
000000000003a2f0	mov	x1, #0x0
000000000003a2f4	bl	0x55470 ; symbol stub for: _gettimeofday
000000000003a2f8	ldr	x21, [x20, #0x28]
000000000003a2fc	cbz	x21, 0x3a3cc
000000000003a300	ldr	x8, [sp]
000000000003a304	ldr	w9, [sp, #0x8]
000000000003a308	mov	w10, #0x4dd3
000000000003a30c	movk	w10, #0x1062, lsl #16
000000000003a310	smull	x9, w9, w10
000000000003a314	lsr	x10, x9, #63
000000000003a318	asr	x9, x9, #38
000000000003a31c	add	w9, w9, w10
000000000003a320	mov	w10, #0x3e8
000000000003a324	madd	w22, w8, w10, w9
000000000003a328	mov	w23, #0x1
000000000003a32c	b	0x3a33c
000000000003a330	str	wzr, [x24, #0x10]
000000000003a334	stp	xzr, xzr, [x24, #0x30]
000000000003a338	cbz	x21, 0x3a3cc
000000000003a33c	mov	x24, x21
000000000003a340	ldr	w8, [x21, #0x10]
000000000003a344	cmp	w8, w22
000000000003a348	b.gt	0x3a638
000000000003a34c	ldr	x21, [x24, #0x38]
000000000003a350	mov	w0, #0xa
000000000003a354	bl	_mi_option_get
000000000003a358	cbz	x0, 0x3a330
000000000003a35c	and	x9, x24, #0xffffffffffc00000
000000000003a360	ldrb	w8, [x9, #0x8]
000000000003a364	cbnz	w8, 0x3a330
000000000003a368	ldrb	w8, [x24, #0x1]
000000000003a36c	and	w10, w8, #0x7
000000000003a370	cmp	w10, #0x4
000000000003a374	b.ne	0x3a330
000000000003a378	ldr	w10, [x9, #0x70]
000000000003a37c	cmp	w10, #0x3
000000000003a380	b.ne	0x3a398
000000000003a384	ldr	x1, [x9, #0x48]
000000000003a388	ldrb	w10, [x24]
000000000003a38c	madd	x0, x1, x10, x9
000000000003a390	cbnz	x10, 0x3a3b8
000000000003a394	b	0x3a3ac
000000000003a398	ldr	x10, [x9, #0x60]
000000000003a39c	lsl	x1, x23, x10
000000000003a3a0	ldrb	w10, [x24]
000000000003a3a4	madd	x0, x1, x10, x9
000000000003a3a8	cbnz	x10, 0x3a3b8
000000000003a3ac	ldr	x9, [x9, #0x50]
000000000003a3b0	add	x0, x0, x9
000000000003a3b4	sub	x1, x1, x9
000000000003a3b8	orr	w8, w8, #0x2
000000000003a3bc	strb	w8, [x24, #0x1]
000000000003a3c0	cbz	x1, 0x3a330
000000000003a3c4	bl	__mi_os_reset
000000000003a3c8	b	0x3a330
000000000003a3cc	stp	xzr, xzr, [x20, #0x20]
000000000003a3d0	mov	w0, #0xb
000000000003a3d4	bl	_mi_option_get
000000000003a3d8	ldrb	w8, [x19, #0x8]
000000000003a3dc	cbz	w8, 0x3a650
000000000003a3e0	ldr	w8, [x19, #0x70]
000000000003a3e4	cbz	w8, 0x3a3f8
000000000003a3e8	cmp	w8, #0x1
000000000003a3ec	b.ne	0x3a44c
000000000003a3f0	add	x8, x20, #0x10
000000000003a3f4	b	0x3a400
000000000003a3f8	mov	x8, x20
000000000003a3fc	cbz	x20, 0x3a44c
000000000003a400	mov	x9, x19
000000000003a404	ldp	x10, x11, [x9, #0x18]!
000000000003a408	cbz	x10, 0x3a414
000000000003a40c	cbnz	x11, 0x3a418
000000000003a410	b	0x3a424
000000000003a414	cbz	x11, 0x3a930
000000000003a418	str	x10, [x11, #0x18]
000000000003a41c	ldr	x10, [x9]
000000000003a420	cbz	x10, 0x3a428
000000000003a424	str	x11, [x10, #0x20]
000000000003a428	ldr	x11, [x8]
000000000003a42c	cmp	x11, x19
000000000003a430	b.eq	0x3a784
000000000003a434	ldr	x10, [x8, #0x8]
000000000003a438	cmp	x10, x19
000000000003a43c	b.ne	0x3a448
000000000003a440	ldr	x10, [x19, #0x20]
000000000003a444	str	x10, [x8, #0x8]
000000000003a448	stp	xzr, xzr, [x9]
000000000003a44c	ldr	x8, [x20, #0x70]
000000000003a450	add	x9, x8, #0xc0
000000000003a454	adr	x10, #0x5a42c
000000000003a458	nop
000000000003a45c	cmp	x9, x10
000000000003a460	b.lo	0x3a4e4
000000000003a464	adr	x11, #0x5a65c
000000000003a468	nop
000000000003a46c	cmp	x9, x11
000000000003a470	b.hs	0x3a4e4
000000000003a474	add	x13, x8, #0xd8
000000000003a478	ldxr	x11, [x13]
000000000003a47c	add	x12, x11, #0x1
000000000003a480	stxr	w14, x12, [x13]
000000000003a484	cbnz	w14, 0x3a478
000000000003a488	add	x13, x8, #0xd0
000000000003a48c	ldr	x14, [x8, #0xd0]
000000000003a490	b	0x3a4a4
000000000003a494	clrex
000000000003a498	mov	w15, #0x0
000000000003a49c	mov	x14, x8
000000000003a4a0	cbnz	w15, 0x3a4cc
000000000003a4a4	cmp	x14, x11
000000000003a4a8	b.gt	0x3a4cc
000000000003a4ac	ldxr	x8, [x13]
000000000003a4b0	cmp	x8, x14
000000000003a4b4	b.ne	0x3a494
000000000003a4b8	stlxr	w14, x12, [x13]
000000000003a4bc	cbnz	w14, 0x3a498
000000000003a4c0	mov	w15, #0x1
000000000003a4c4	mov	x14, x8
000000000003a4c8	cbz	w15, 0x3a4a4
000000000003a4cc	ldxr	x8, [x9]
000000000003a4d0	add	x8, x8, #0x1
000000000003a4d4	stxr	w11, x8, [x9]
000000000003a4d8	cbnz	w11, 0x3a4cc
000000000003a4dc	ldr	x8, [x20, #0x70]
000000000003a4e0	b	0x3a508
000000000003a4e4	ldp	x13, x12, [x8, #0xd0]
000000000003a4e8	add	x11, x12, #0x1
000000000003a4ec	str	x11, [x8, #0xd8]
000000000003a4f0	cmp	x12, x13
000000000003a4f4	b.lt	0x3a4fc
000000000003a4f8	str	x11, [x8, #0xd0]
000000000003a4fc	ldr	x11, [x9]
000000000003a500	add	x11, x11, #0x1
000000000003a504	str	x11, [x9]
000000000003a508	ldr	x9, [x19, #0x48]
000000000003a50c	cmp	x8, x10
000000000003a510	cset	w11, hs
000000000003a514	add	x10, x10, #0x240
000000000003a518	cmp	x8, x10
000000000003a51c	cset	w10, lo
000000000003a520	and	w10, w11, w10
000000000003a524	add	x12, x8, #0x18
000000000003a528	cmp	x9, #0x0
000000000003a52c	b.le	0x3a5a4
000000000003a530	cbz	w10, 0x3a614
000000000003a534	ldxr	x10, [x12]
000000000003a538	sub	x10, x10, #0x1
000000000003a53c	stxr	w11, x10, [x12]
000000000003a540	cbnz	w11, 0x3a534
000000000003a544	add	x11, x8, #0x10
000000000003a548	ldr	x13, [x8, #0x10]
000000000003a54c	b	0x3a560
000000000003a550	clrex
000000000003a554	mov	w14, #0x0
000000000003a558	mov	x13, x12
000000000003a55c	cbnz	w14, 0x3a588
000000000003a560	cmp	x13, x10
000000000003a564	b.ge	0x3a588
000000000003a568	ldxr	x12, [x11]
000000000003a56c	cmp	x12, x13
000000000003a570	b.ne	0x3a550
000000000003a574	stlxr	w13, x10, [x11]
000000000003a578	cbnz	w13, 0x3a554
000000000003a57c	mov	w14, #0x1
000000000003a580	mov	x13, x12
000000000003a584	cbz	w14, 0x3a560
000000000003a588	add	x8, x8, #0x8
000000000003a58c	ldxr	x10, [x8]
000000000003a590	add	x10, x10, #0x1
000000000003a594	stxr	w11, x10, [x8]
000000000003a598	cbnz	w11, 0x3a58c
000000000003a59c	mov	x10, #-0x1
000000000003a5a0	b	0x3a7c0
000000000003a5a4	cbz	w10, 0x3a798
000000000003a5a8	ldxr	x10, [x12]
000000000003a5ac	add	x11, x10, #0x1
000000000003a5b0	stxr	w13, x11, [x12]
000000000003a5b4	cbnz	w13, 0x3a5a8
000000000003a5b8	add	x12, x8, #0x10
000000000003a5bc	ldr	x14, [x8, #0x10]
000000000003a5c0	b	0x3a5d4
000000000003a5c4	clrex
000000000003a5c8	mov	w15, #0x0
000000000003a5cc	mov	x14, x13
000000000003a5d0	cbnz	w15, 0x3a5fc
000000000003a5d4	cmp	x14, x10
000000000003a5d8	b.gt	0x3a5fc
000000000003a5dc	ldxr	x13, [x12]
000000000003a5e0	cmp	x13, x14
000000000003a5e4	b.ne	0x3a5c4
000000000003a5e8	stlxr	w14, x11, [x12]
000000000003a5ec	cbnz	w14, 0x3a5c8
000000000003a5f0	mov	w15, #0x1
000000000003a5f4	mov	x14, x13
000000000003a5f8	cbz	w15, 0x3a5d4
000000000003a5fc	mov	w10, #0x1
000000000003a600	ldxr	x11, [x8]
000000000003a604	add	x11, x11, #0x1
000000000003a608	stxr	w12, x11, [x8]
000000000003a60c	cbnz	w12, 0x3a600
000000000003a610	b	0x3a7c0
000000000003a614	ldp	x11, x10, [x8, #0x10]
000000000003a618	sub	x10, x10, #0x1
000000000003a61c	str	x10, [x8, #0x18]
000000000003a620	cmp	x10, x11
000000000003a624	b.le	0x3a62c
000000000003a628	str	x10, [x8, #0x10]
000000000003a62c	add	x8, x8, #0x8
000000000003a630	mov	x10, #-0x1
000000000003a634	b	0x3a7b4
000000000003a638	str	x24, [x20, #0x28]
000000000003a63c	str	xzr, [x24, #0x30]
000000000003a640	mov	w0, #0xb
000000000003a644	bl	_mi_option_get
000000000003a648	ldrb	w8, [x19, #0x8]
000000000003a64c	cbnz	w8, 0x3a3e0
000000000003a650	ldr	x8, [x19, #0x40]
000000000003a654	cbz	x8, 0x3a3e0
000000000003a658	cbz	x0, 0x3a88c
000000000003a65c	mov	x21, #0x0
000000000003a660	add	x22, x19, #0x78
000000000003a664	mov	w23, #0x1
000000000003a668	b	0x3a680
000000000003a66c	ldr	x8, [x19, #0x40]
000000000003a670	add	x21, x21, #0x1
000000000003a674	add	x22, x22, #0x40
000000000003a678	cmp	x21, x8
000000000003a67c	b.hs	0x3a3e0
000000000003a680	ldrb	w9, [x22, #0x1]
000000000003a684	and	w9, w9, #0x7
000000000003a688	cmp	w9, #0x4
000000000003a68c	b.ne	0x3a670
000000000003a690	ldp	x8, x9, [x22, #0x30]
000000000003a694	cbz	x8, 0x3a6a0
000000000003a698	cbnz	x9, 0x3a6a4
000000000003a69c	b	0x3a6b0
000000000003a6a0	cbz	x9, 0x3a734
000000000003a6a4	str	x8, [x9, #0x30]
000000000003a6a8	ldr	x8, [x22, #0x30]
000000000003a6ac	cbz	x8, 0x3a6b4
000000000003a6b0	str	x9, [x8, #0x38]
000000000003a6b4	ldr	x9, [x20, #0x28]
000000000003a6b8	cmp	x22, x9
000000000003a6bc	b.eq	0x3a718
000000000003a6c0	ldr	x9, [x20, #0x20]
000000000003a6c4	cmp	x22, x9
000000000003a6c8	b.eq	0x3a72c
000000000003a6cc	str	wzr, [x22, #0x10]
000000000003a6d0	stp	xzr, xzr, [x22, #0x30]
000000000003a6d4	mov	w0, #0xa
000000000003a6d8	bl	_mi_option_get
000000000003a6dc	cbz	x0, 0x3a66c
000000000003a6e0	ldrb	w8, [x19, #0x8]
000000000003a6e4	cbnz	w8, 0x3a66c
000000000003a6e8	ldrb	w8, [x22, #0x1]
000000000003a6ec	and	w9, w8, #0x7
000000000003a6f0	cmp	w9, #0x4
000000000003a6f4	b.ne	0x3a66c
000000000003a6f8	ldr	w9, [x19, #0x70]
000000000003a6fc	cmp	w9, #0x3
000000000003a700	b.ne	0x3a750
000000000003a704	ldr	x1, [x19, #0x48]
000000000003a708	ldrb	w9, [x22]
000000000003a70c	madd	x0, x1, x9, x19
000000000003a710	cbnz	x9, 0x3a770
000000000003a714	b	0x3a764
000000000003a718	ldr	x9, [x22, #0x38]
000000000003a71c	str	x9, [x20, #0x28]
000000000003a720	ldr	x9, [x20, #0x20]
000000000003a724	cmp	x22, x9
000000000003a728	b.ne	0x3a6cc
000000000003a72c	str	x8, [x20, #0x20]
000000000003a730	b	0x3a6cc
000000000003a734	ldr	x9, [x20, #0x20]
000000000003a738	cmp	x22, x9
000000000003a73c	b.eq	0x3a6b4
000000000003a740	ldr	x9, [x20, #0x28]
000000000003a744	cmp	x22, x9
000000000003a748	b.ne	0x3a6d4
000000000003a74c	b	0x3a6b4
000000000003a750	ldr	x9, [x19, #0x60]
000000000003a754	lsl	x1, x23, x9
000000000003a758	ldrb	w9, [x22]
000000000003a75c	madd	x0, x1, x9, x19
000000000003a760	cbnz	x9, 0x3a770
000000000003a764	ldr	x9, [x19, #0x50]
000000000003a768	add	x0, x0, x9
000000000003a76c	sub	x1, x1, x9
000000000003a770	orr	w8, w8, #0x2
000000000003a774	strb	w8, [x22, #0x1]
000000000003a778	cbz	x1, 0x3a66c
000000000003a77c	bl	__mi_os_reset
000000000003a780	b	0x3a66c
000000000003a784	str	x10, [x8]
000000000003a788	ldr	x10, [x8, #0x8]
000000000003a78c	cmp	x10, x19
000000000003a790	b.ne	0x3a448
000000000003a794	b	0x3a440
000000000003a798	ldp	x12, x11, [x8, #0x10]
000000000003a79c	add	x10, x11, #0x1
000000000003a7a0	str	x10, [x8, #0x18]
000000000003a7a4	cmp	x11, x12
000000000003a7a8	b.lt	0x3a7b0
000000000003a7ac	str	x10, [x8, #0x10]
000000000003a7b0	mov	w10, #0x1
000000000003a7b4	ldr	x11, [x8]
000000000003a7b8	add	x11, x11, #0x1
000000000003a7bc	str	x11, [x8]
000000000003a7c0	ldp	x8, x11, [x20, #0x38]
000000000003a7c4	add	x8, x8, x10
000000000003a7c8	str	x8, [x20, #0x38]
000000000003a7cc	cmp	x8, x11
000000000003a7d0	b.ls	0x3a7d8
000000000003a7d4	str	x8, [x20, #0x40]
000000000003a7d8	ldp	x8, x10, [x20, #0x48]
000000000003a7dc	sub	x8, x8, x9
000000000003a7e0	str	x8, [x20, #0x48]
000000000003a7e4	cmp	x8, x10
000000000003a7e8	b.ls	0x3a7f0
000000000003a7ec	str	x8, [x20, #0x50]
000000000003a7f0	add	x8, x19, #0x68
000000000003a7f4	stlr	xzr, [x8]
000000000003a7f8	str	xzr, [x19, #0x30]
000000000003a7fc	add	x8, x19, #0x10
000000000003a800	stlr	xzr, [x8]
000000000003a804	nop
000000000003a808	ldr	x11, #0x59bf8
000000000003a80c	adr	x9, #0x59bf4
000000000003a810	nop
000000000003a814	b	0x3a828
000000000003a818	clrex
000000000003a81c	mov	w12, #0x0
000000000003a820	mov	x11, x10
000000000003a824	cbnz	w12, 0x3a85c
000000000003a828	and	x10, x11, #0xffffffffffc00000
000000000003a82c	stlr	x10, [x8]
000000000003a830	ldxr	x10, [x9]
000000000003a834	cmp	x10, x11
000000000003a838	b.ne	0x3a818
000000000003a83c	add	w11, w11, #0x1
000000000003a840	and	x11, x11, #0x3fffff
000000000003a844	orr	x11, x11, x19
000000000003a848	stlxr	w12, x11, [x9]
000000000003a84c	cbnz	w12, 0x3a81c
000000000003a850	mov	w12, #0x1
000000000003a854	mov	x11, x10
000000000003a858	cbz	w12, 0x3a828
000000000003a85c	adr	x8, #0x59be4
000000000003a860	nop
000000000003a864	ldxr	x9, [x8]
000000000003a868	add	x9, x9, #0x1
000000000003a86c	stxr	w10, x9, [x8]
000000000003a870	cbnz	w10, 0x3a864
000000000003a874	ldp	x29, x30, [sp, #0x40]
000000000003a878	ldp	x20, x19, [sp, #0x30]
000000000003a87c	ldp	x22, x21, [sp, #0x20]
000000000003a880	ldp	x24, x23, [sp, #0x10]
000000000003a884	add	sp, sp, #0x50
000000000003a888	ret
000000000003a88c	add	x9, x19, #0x78
000000000003a890	b	0x3a8a8
000000000003a894	str	wzr, [x9, #0x10]
000000000003a898	stp	xzr, xzr, [x9, #0x30]
000000000003a89c	add	x9, x9, #0x40
000000000003a8a0	subs	x8, x8, #0x1
000000000003a8a4	b.eq	0x3a3e0
000000000003a8a8	ldrb	w10, [x9, #0x1]
000000000003a8ac	and	w10, w10, #0x7
000000000003a8b0	cmp	w10, #0x4
000000000003a8b4	b.ne	0x3a89c
000000000003a8b8	ldp	x10, x11, [x9, #0x30]
000000000003a8bc	cbz	x10, 0x3a8c8
000000000003a8c0	cbnz	x11, 0x3a8cc
000000000003a8c4	b	0x3a8d8
000000000003a8c8	cbz	x11, 0x3a914
000000000003a8cc	str	x10, [x11, #0x30]
000000000003a8d0	ldr	x10, [x9, #0x30]
000000000003a8d4	cbz	x10, 0x3a8dc
000000000003a8d8	str	x11, [x10, #0x38]
000000000003a8dc	ldr	x11, [x20, #0x28]
000000000003a8e0	cmp	x9, x11
000000000003a8e4	b.eq	0x3a8f8
000000000003a8e8	ldr	x11, [x20, #0x20]
000000000003a8ec	cmp	x9, x11
000000000003a8f0	b.ne	0x3a894
000000000003a8f4	b	0x3a90c
000000000003a8f8	ldr	x11, [x9, #0x38]
000000000003a8fc	str	x11, [x20, #0x28]
000000000003a900	ldr	x11, [x20, #0x20]
000000000003a904	cmp	x9, x11
000000000003a908	b.ne	0x3a894
000000000003a90c	str	x10, [x20, #0x20]
000000000003a910	b	0x3a894
000000000003a914	ldr	x11, [x20, #0x20]
000000000003a918	cmp	x9, x11
000000000003a91c	b.eq	0x3a8dc
000000000003a920	ldr	x11, [x20, #0x28]
000000000003a924	cmp	x9, x11
000000000003a928	b.ne	0x3a89c
000000000003a92c	b	0x3a8dc
000000000003a930	ldr	x11, [x8]
000000000003a934	cmp	x11, x19
000000000003a938	b.ne	0x3a44c
000000000003a93c	b	0x3a428
__mi_free_delayed_block:
000000000003a940	stp	x22, x21, [sp, #-0x30]!
000000000003a944	stp	x20, x19, [sp, #0x10]
000000000003a948	stp	x29, x30, [sp, #0x20]
000000000003a94c	add	x29, sp, #0x20
000000000003a950	mov	x20, x0
000000000003a954	and	x21, x0, #0xffffffffffc00000
000000000003a958	and	x8, x0, #0x3fffff
000000000003a95c	ldr	x9, [x21, #0x60]
000000000003a960	lsr	x22, x8, x9
000000000003a964	add	x8, x21, x22, lsl #6
000000000003a968	add	x19, x8, #0x78
000000000003a96c	add	x8, x8, #0x98
000000000003a970	ldar	x9, [x8]
000000000003a974	and	w10, w9, #0x3
000000000003a978	cmp	w10, #0x0
000000000003a97c	ccmp	w10, #0x3, #0x4, ne
000000000003a980	b.eq	0x3a9b8
000000000003a984	cmp	w10, #0x1
000000000003a988	b.eq	0x3a9b0
000000000003a98c	ldxr	x10, [x8]
000000000003a990	cmp	x10, x9
000000000003a994	b.ne	0x3a9a8
000000000003a998	and	x9, x9, #0xfffffffffffffffc
000000000003a99c	stlxr	w10, x9, [x8]
000000000003a9a0	cbnz	w10, 0x3a970
000000000003a9a4	b	0x3a9b8
000000000003a9a8	clrex
000000000003a9ac	b	0x3a970
000000000003a9b0	wfe
000000000003a9b4	b	0x3a970
000000000003a9b8	mov	x0, x19
000000000003a9bc	mov	w1, #0x0
000000000003a9c0	bl	__mi_page_free_collect
000000000003a9c4	add	x8, x21, x22, lsl #6
000000000003a9c8	ldr	x9, [x8, #0x90]
000000000003a9cc	str	x9, [x20]
000000000003a9d0	str	x20, [x8, #0x90]
000000000003a9d4	ldr	w9, [x8, #0x88]
000000000003a9d8	subs	w9, w9, #0x1
000000000003a9dc	str	w9, [x8, #0x88]
000000000003a9e0	b.eq	0x3a9fc
000000000003a9e4	ldrb	w8, [x8, #0x7e]
000000000003a9e8	tbnz	w8, #0x0, 0x3aa10
000000000003a9ec	ldp	x29, x30, [sp, #0x20]
000000000003a9f0	ldp	x20, x19, [sp, #0x10]
000000000003a9f4	ldp	x22, x21, [sp], #0x30
000000000003a9f8	ret
000000000003a9fc	mov	x0, x19
000000000003aa00	ldp	x29, x30, [sp, #0x20]
000000000003aa04	ldp	x20, x19, [sp, #0x10]
000000000003aa08	ldp	x22, x21, [sp], #0x30
000000000003aa0c	b	__mi_page_retire
000000000003aa10	mov	x0, x19
000000000003aa14	ldp	x29, x30, [sp, #0x20]
000000000003aa18	ldp	x20, x19, [sp, #0x10]
000000000003aa1c	ldp	x22, x21, [sp], #0x30
000000000003aa20	b	__mi_page_unfull
__mi_page_retire:
000000000003aa24	ldrb	w9, [x0, #0x6]
000000000003aa28	and	w8, w9, #0xfffffffd
000000000003aa2c	strb	w8, [x0, #0x6]
000000000003aa30	ldr	w8, [x0, #0x14]
000000000003aa34	tbnz	w9, #0x0, 0x3aa48
000000000003aa38	cmp	w8, #0x9
000000000003aa3c	b.hs	0x3aa50
000000000003aa40	mov	w10, #0x1
000000000003aa44	b	0x3aaa4
000000000003aa48	mov	w10, #0x4a
000000000003aa4c	b	0x3aaa8
000000000003aa50	add	x10, x8, #0x7
000000000003aa54	lsr	x10, x10, #3
000000000003aa58	cmp	w8, #0x40
000000000003aa5c	b.hi	0x3aa6c
000000000003aa60	add	w10, w10, #0x1
000000000003aa64	and	x10, x10, #0xfe
000000000003aa68	b	0x3aaa4
000000000003aa6c	cmp	w8, #0x200, lsl #12
000000000003aa70	b.ls	0x3aa7c
000000000003aa74	mov	w10, #0x49
000000000003aa78	b	0x3aaa4
000000000003aa7c	sub	x10, x10, #0x1
000000000003aa80	clz	x11, x10
000000000003aa84	mov	w12, #0x3f
000000000003aa88	sub	w11, w12, w11
000000000003aa8c	and	w11, w11, #0xff
000000000003aa90	sub	w12, w11, #0x2
000000000003aa94	lsr	x10, x10, x12
000000000003aa98	and	w10, w10, #0x3
000000000003aa9c	bfi	w10, w11, #2, #8
000000000003aaa0	add	w10, w10, #0xfd
000000000003aaa4	and	x10, x10, #0xff
000000000003aaa8	ldr	x11, [x0, #0x28]
000000000003aaac	mov	w12, #0x18
000000000003aab0	madd	x12, x10, x12, x11
000000000003aab4	add	x1, x12, #0x410
000000000003aab8	tbnz	w9, #0x0, 0x3aae4
000000000003aabc	cmp	w8, #0x200, lsl #12
000000000003aac0	b.hi	0x3aae4
000000000003aac4	mov	w9, #0x18
000000000003aac8	madd	x9, x10, x9, x11
000000000003aacc	ldr	x9, [x9, #0x418]
000000000003aad0	cmp	x9, x0
000000000003aad4	b.ne	0x3aae4
000000000003aad8	ldr	x9, [x1]
000000000003aadc	cmp	x9, x0
000000000003aae0	b.eq	0x3aaec
000000000003aae4	mov	w2, #0x0
000000000003aae8	b	__mi_page_free
000000000003aaec	cmp	w8, #0x4, lsl #12
000000000003aaf0	mov	w8, #0x4
000000000003aaf4	mov	w9, #0x10
000000000003aaf8	csel	w8, w9, w8, ls
000000000003aafc	ldrb	w9, [x0, #0x7]
000000000003ab00	bfxil	w8, w9, #0, #1
000000000003ab04	strb	w8, [x0, #0x7]
000000000003ab08	ldr	x8, [x0, #0x28]
000000000003ab0c	sub	x9, x1, x8
000000000003ab10	sub	x9, x9, #0x410
000000000003ab14	asr	x9, x9, #3
000000000003ab18	mov	x10, #-0x5555555555555556
000000000003ab1c	movk	x10, #0xaaab
000000000003ab20	mul	x9, x9, x10
000000000003ab24	ldr	x10, [x8, #0xbd0]
000000000003ab28	cmp	x9, x10
000000000003ab2c	b.lo	0x3ab40
000000000003ab30	ldr	x10, [x8, #0xbd8]
000000000003ab34	cmp	x9, x10
000000000003ab38	b.hi	0x3ab50
000000000003ab3c	ret
000000000003ab40	str	x9, [x8, #0xbd0]
000000000003ab44	ldr	x10, [x8, #0xbd8]
000000000003ab48	cmp	x9, x10
000000000003ab4c	b.ls	0x3ab3c
000000000003ab50	str	x9, [x8, #0xbd8]
000000000003ab54	ret
__mi_page_unfull:
000000000003ab58	ldrb	w8, [x0, #0x6]
000000000003ab5c	tbz	w8, #0x0, 0x3afbc
000000000003ab60	ldr	x10, [x0, #0x28]
000000000003ab64	and	w9, w8, #0xfe
000000000003ab68	strb	w9, [x0, #0x6]
000000000003ab6c	ldr	w9, [x0, #0x14]
000000000003ab70	cmp	w9, #0x9
000000000003ab74	b.hs	0x3ab94
000000000003ab78	mov	w11, #0x1
000000000003ab7c	orr	w8, w8, #0x1
000000000003ab80	strb	w8, [x0, #0x6]
000000000003ab84	ldr	x9, [x0, #0x28]
000000000003ab88	ldr	x8, [x0, #0x38]
000000000003ab8c	cbnz	x8, 0x3ac24
000000000003ab90	b	0x3ac2c
000000000003ab94	add	x11, x9, #0x7
000000000003ab98	lsr	x11, x11, #3
000000000003ab9c	cmp	w9, #0x40
000000000003aba0	b.hi	0x3abc4
000000000003aba4	add	w9, w11, #0x1
000000000003aba8	and	x11, x9, #0xfe
000000000003abac	orr	w8, w8, #0x1
000000000003abb0	strb	w8, [x0, #0x6]
000000000003abb4	ldr	x9, [x0, #0x28]
000000000003abb8	ldr	x8, [x0, #0x38]
000000000003abbc	cbnz	x8, 0x3ac24
000000000003abc0	b	0x3ac2c
000000000003abc4	cmp	w9, #0x200, lsl #12
000000000003abc8	b.ls	0x3abe8
000000000003abcc	mov	w11, #0x49
000000000003abd0	orr	w8, w8, #0x1
000000000003abd4	strb	w8, [x0, #0x6]
000000000003abd8	ldr	x9, [x0, #0x28]
000000000003abdc	ldr	x8, [x0, #0x38]
000000000003abe0	cbnz	x8, 0x3ac24
000000000003abe4	b	0x3ac2c
000000000003abe8	sub	x9, x11, #0x1
000000000003abec	clz	x11, x9
000000000003abf0	mov	w12, #0x3f
000000000003abf4	sub	w11, w12, w11
000000000003abf8	and	w11, w11, #0xff
000000000003abfc	sub	w12, w11, #0x2
000000000003ac00	lsr	x9, x9, x12
000000000003ac04	and	w9, w9, #0x3
000000000003ac08	bfi	w9, w11, #2, #8
000000000003ac0c	add	w11, w9, #0xfd
000000000003ac10	orr	w8, w8, #0x1
000000000003ac14	strb	w8, [x0, #0x6]
000000000003ac18	ldr	x9, [x0, #0x28]
000000000003ac1c	ldr	x8, [x0, #0x38]
000000000003ac20	cbz	x8, 0x3ac2c
000000000003ac24	ldr	x12, [x0, #0x30]
000000000003ac28	str	x12, [x8, #0x30]
000000000003ac2c	ldr	x12, [x0, #0x30]
000000000003ac30	cbz	x12, 0x3ac38
000000000003ac34	str	x8, [x12, #0x38]
000000000003ac38	ldr	x8, [x10, #0xb08]
000000000003ac3c	cmp	x8, x0
000000000003ac40	b.eq	0x3ac60
000000000003ac44	and	x11, x11, #0xff
000000000003ac48	mov	w8, #0x7
000000000003ac4c	movk	w8, #0x20, lsl #16
000000000003ac50	ldr	x13, [x10, #0xb00]
000000000003ac54	cmp	x13, x0
000000000003ac58	b.ne	0x3adf0
000000000003ac5c	b	0x3ac80
000000000003ac60	ldr	x8, [x0, #0x38]
000000000003ac64	str	x8, [x10, #0xb08]
000000000003ac68	and	x11, x11, #0xff
000000000003ac6c	mov	w8, #0x7
000000000003ac70	movk	w8, #0x20, lsl #16
000000000003ac74	ldr	x13, [x10, #0xb00]
000000000003ac78	cmp	x13, x0
000000000003ac7c	b.ne	0x3adf0
000000000003ac80	str	x12, [x10, #0xb00]
000000000003ac84	ldr	x15, [x10, #0xb10]
000000000003ac88	cmp	x15, #0x400
000000000003ac8c	b.hi	0x3adf0
000000000003ac90	adr	x13, #0x1ddf0
000000000003ac94	nop
000000000003ac98	cmp	x12, #0x0
000000000003ac9c	csel	x12, x13, x12, eq
000000000003aca0	add	x13, x15, #0x7
000000000003aca4	lsr	x13, x13, #3
000000000003aca8	add	x14, x9, x13, lsl #3
000000000003acac	ldr	x14, [x14, #0x8]
000000000003acb0	cmp	x14, x12
000000000003acb4	b.eq	0x3adf0
000000000003acb8	cmp	x15, #0x9
000000000003acbc	b.hs	0x3acc8
000000000003acc0	mov	x14, #0x0
000000000003acc4	b	0x3ad94
000000000003acc8	sub	x16, x13, #0x1
000000000003accc	clz	x17, x16
000000000003acd0	mov	w14, #0x3f
000000000003acd4	sub	w17, w14, w17
000000000003acd8	and	w17, w17, #0xff
000000000003acdc	sub	w1, w17, #0x2
000000000003ace0	lsr	x16, x16, x1
000000000003ace4	and	w16, w16, #0x3
000000000003ace8	bfi	w16, w17, #2, #8
000000000003acec	sub	w16, w16, #0x3
000000000003acf0	add	w17, w13, #0x1
000000000003acf4	and	w17, w17, #0xfffffffe
000000000003acf8	cmp	x15, #0x40
000000000003acfc	csel	w17, w16, w17, hi
000000000003ad00	add	x15, x9, #0x410
000000000003ad04	add	x16, x10, #0xae8
000000000003ad08	and	w17, w17, #0xff
000000000003ad0c	ldr	x1, [x16, #0x10]
000000000003ad10	add	x2, x1, #0x7
000000000003ad14	lsr	x1, x2, #3
000000000003ad18	cmp	x2, #0x10
000000000003ad1c	b.hs	0x3ad28
000000000003ad20	mov	w2, #0x1
000000000003ad24	b	0x3ad70
000000000003ad28	cmp	x2, #0x47
000000000003ad2c	b.hi	0x3ad3c
000000000003ad30	add	w2, w1, #0x1
000000000003ad34	and	w2, w2, #0xfffffffe
000000000003ad38	b	0x3ad70
000000000003ad3c	cmp	x2, x8
000000000003ad40	b.ls	0x3ad4c
000000000003ad44	mov	w2, #0x49
000000000003ad48	b	0x3ad70
000000000003ad4c	sub	x2, x1, #0x1
000000000003ad50	clz	x3, x2
000000000003ad54	sub	w3, w14, w3
000000000003ad58	and	w3, w3, #0xff
000000000003ad5c	sub	w4, w3, #0x2
000000000003ad60	lsr	x2, x2, x4
000000000003ad64	and	w2, w2, #0x3
000000000003ad68	bfi	w2, w3, #2, #8
000000000003ad6c	sub	w2, w2, #0x3
000000000003ad70	cmp	x16, x15
000000000003ad74	b.ls	0x3ad84
000000000003ad78	sub	x16, x16, #0x18
000000000003ad7c	cmp	w17, w2, uxtb
000000000003ad80	b.eq	0x3ad0c
000000000003ad84	cmp	x1, x13
000000000003ad88	csinc	x14, x13, x1, hs
000000000003ad8c	cmp	x14, x13
000000000003ad90	b.hi	0x3adf0
000000000003ad94	sub	x15, x13, x14
000000000003ad98	add	x15, x15, #0x1
000000000003ad9c	cmp	x15, #0x4
000000000003ada0	b.lo	0x3add4
000000000003ada4	and	x16, x15, #0xfffffffffffffffc
000000000003ada8	dup.2d	v0, x12
000000000003adac	add	x17, x9, x14, lsl #3
000000000003adb0	add	x17, x17, #0x18
000000000003adb4	mov	x1, x16
000000000003adb8	stp	q0, q0, [x17, #-0x10]
000000000003adbc	add	x17, x17, #0x20
000000000003adc0	subs	x1, x1, #0x4
000000000003adc4	b.ne	0x3adb8
000000000003adc8	cmp	x15, x16
000000000003adcc	b.eq	0x3adf0
000000000003add0	add	x14, x14, x16
000000000003add4	sub	x13, x13, x14
000000000003add8	add	x13, x13, #0x1
000000000003addc	add	x14, x9, x14, lsl #3
000000000003ade0	add	x14, x14, #0x8
000000000003ade4	str	x12, [x14], #0x8
000000000003ade8	subs	x13, x13, #0x1
000000000003adec	b.ne	0x3ade4
000000000003adf0	mov	w12, #0x18
000000000003adf4	madd	x12, x11, x12, x10
000000000003adf8	ldr	x13, [x12, #0x418]
000000000003adfc	add	x12, x12, #0x418
000000000003ae00	stp	xzr, x13, [x0, #0x30]
000000000003ae04	cbz	x13, 0x3ae20
000000000003ae08	str	x0, [x13, #0x30]
000000000003ae0c	str	x0, [x12]
000000000003ae10	mov	w9, #0x18
000000000003ae14	madd	x9, x11, x9, x10
000000000003ae18	ldr	x12, [x9, #0x420]
000000000003ae1c	b	0x3afa0
000000000003ae20	mov	w13, #0x18
000000000003ae24	madd	x13, x11, x13, x10
000000000003ae28	add	x13, x13, #0x410
000000000003ae2c	str	x0, [x13]
000000000003ae30	str	x0, [x12]
000000000003ae34	mov	w12, #0x18
000000000003ae38	madd	x12, x11, x12, x10
000000000003ae3c	ldr	x12, [x12, #0x420]
000000000003ae40	cmp	x12, #0x400
000000000003ae44	b.hi	0x3afa0
000000000003ae48	add	x13, x12, #0x7
000000000003ae4c	lsr	x13, x13, #3
000000000003ae50	add	x14, x9, x13, lsl #3
000000000003ae54	ldr	x14, [x14, #0x8]
000000000003ae58	cmp	x14, x0
000000000003ae5c	b.eq	0x3afa0
000000000003ae60	cmp	x12, #0x9
000000000003ae64	b.hs	0x3ae70
000000000003ae68	mov	x10, #0x0
000000000003ae6c	b	0x3af44
000000000003ae70	sub	x15, x13, #0x1
000000000003ae74	clz	x16, x15
000000000003ae78	mov	w14, #0x3f
000000000003ae7c	sub	w16, w14, w16
000000000003ae80	and	w16, w16, #0xff
000000000003ae84	sub	w17, w16, #0x2
000000000003ae88	lsr	x15, x15, x17
000000000003ae8c	and	w15, w15, #0x3
000000000003ae90	bfi	w15, w16, #2, #8
000000000003ae94	sub	w15, w15, #0x3
000000000003ae98	add	w16, w13, #0x1
000000000003ae9c	and	w16, w16, #0xfffffffe
000000000003aea0	cmp	x12, #0x40
000000000003aea4	csel	w16, w15, w16, hi
000000000003aea8	add	x15, x9, #0x410
000000000003aeac	mov	w17, #0x18
000000000003aeb0	madd	x10, x11, x17, x10
000000000003aeb4	add	x10, x10, #0x3f8
000000000003aeb8	and	w11, w16, #0xff
000000000003aebc	ldr	x16, [x10, #0x10]
000000000003aec0	add	x17, x16, #0x7
000000000003aec4	lsr	x16, x17, #3
000000000003aec8	cmp	x17, #0x10
000000000003aecc	b.hs	0x3aed8
000000000003aed0	mov	w17, #0x1
000000000003aed4	b	0x3af20
000000000003aed8	cmp	x17, #0x47
000000000003aedc	b.hi	0x3aeec
000000000003aee0	add	w17, w16, #0x1
000000000003aee4	and	w17, w17, #0xfffffffe
000000000003aee8	b	0x3af20
000000000003aeec	cmp	x17, x8
000000000003aef0	b.ls	0x3aefc
000000000003aef4	mov	w17, #0x49
000000000003aef8	b	0x3af20
000000000003aefc	sub	x17, x16, #0x1
000000000003af00	clz	x1, x17
000000000003af04	sub	w1, w14, w1
000000000003af08	and	w1, w1, #0xff
000000000003af0c	sub	w2, w1, #0x2
000000000003af10	lsr	x17, x17, x2
000000000003af14	and	w17, w17, #0x3
000000000003af18	bfi	w17, w1, #2, #8
000000000003af1c	sub	w17, w17, #0x3
000000000003af20	cmp	x10, x15
000000000003af24	b.ls	0x3af34
000000000003af28	sub	x10, x10, #0x18
000000000003af2c	cmp	w11, w17, uxtb
000000000003af30	b.eq	0x3aebc
000000000003af34	cmp	x16, x13
000000000003af38	csinc	x10, x13, x16, hs
000000000003af3c	cmp	x10, x13
000000000003af40	b.hi	0x3afa0
000000000003af44	sub	x11, x13, x10
000000000003af48	add	x11, x11, #0x1
000000000003af4c	cmp	x11, #0x4
000000000003af50	b.lo	0x3af84
000000000003af54	and	x14, x11, #0xfffffffffffffffc
000000000003af58	dup.2d	v0, x0
000000000003af5c	add	x15, x9, x10, lsl #3
000000000003af60	add	x15, x15, #0x18
000000000003af64	mov	x16, x14
000000000003af68	stp	q0, q0, [x15, #-0x10]
000000000003af6c	add	x15, x15, #0x20
000000000003af70	subs	x16, x16, #0x4
000000000003af74	b.ne	0x3af68
000000000003af78	cmp	x11, x14
000000000003af7c	b.eq	0x3afa0
000000000003af80	add	x10, x10, x14
000000000003af84	sub	x11, x13, x10
000000000003af88	add	x11, x11, #0x1
000000000003af8c	add	x9, x9, x10, lsl #3
000000000003af90	add	x9, x9, #0x8
000000000003af94	str	x0, [x9], #0x8
000000000003af98	subs	x11, x11, #0x1
000000000003af9c	b.ne	0x3af94
000000000003afa0	add	x8, x8, #0x9
000000000003afa4	cmp	x12, x8
000000000003afa8	cset	w8, eq
000000000003afac	ldrb	w9, [x0, #0x6]
000000000003afb0	and	w9, w9, #0xfe
000000000003afb4	orr	w8, w9, w8
000000000003afb8	strb	w8, [x0, #0x6]
000000000003afbc	ret
_mi_segment_reclaim:
000000000003afc0	sub	sp, sp, #0x70
000000000003afc4	stp	x28, x27, [sp, #0x10]
000000000003afc8	stp	x26, x25, [sp, #0x20]
000000000003afcc	stp	x24, x23, [sp, #0x30]
000000000003afd0	stp	x22, x21, [sp, #0x40]
000000000003afd4	stp	x20, x19, [sp, #0x50]
000000000003afd8	stp	x29, x30, [sp, #0x60]
000000000003afdc	add	x29, sp, #0x60
000000000003afe0	mov	x20, x4
000000000003afe4	mov	x23, x3
000000000003afe8	mov	x21, x2
000000000003afec	mov	x22, x1
000000000003aff0	mov	x19, x0
000000000003aff4	cbz	x3, 0x3affc
000000000003aff8	strb	wzr, [x23]
000000000003affc	bl	0x556c8 ; symbol stub for: _pthread_self
000000000003b000	bl	0x55680 ; symbol stub for: _pthread_mach_thread_np
000000000003b004	mov	w8, w0
000000000003b008	add	x9, x19, #0x68
000000000003b00c	stlr	x8, [x9]
000000000003b010	str	xzr, [x19, #0x30]
000000000003b014	ldr	x8, [x19, #0x48]
000000000003b018	ldr	x9, [x20, #0x70]
000000000003b01c	adr	x11, #0x59864
000000000003b020	nop
000000000003b024	cmp	x9, x11
000000000003b028	cset	w10, hs
000000000003b02c	add	x11, x11, #0x240
000000000003b030	cmp	x9, x11
000000000003b034	cset	w11, lo
000000000003b038	and	w10, w10, w11
000000000003b03c	add	x12, x9, #0x18
000000000003b040	tbnz	x8, #0x3f, 0x3b0b4
000000000003b044	cbz	w10, 0x3b128
000000000003b048	ldxr	x10, [x12]
000000000003b04c	add	x11, x10, #0x1
000000000003b050	stxr	w13, x11, [x12]
000000000003b054	cbnz	w13, 0x3b048
000000000003b058	add	x12, x9, #0x10
000000000003b05c	ldr	x14, [x9, #0x10]
000000000003b060	b	0x3b074
000000000003b064	clrex
000000000003b068	mov	w15, #0x0
000000000003b06c	mov	x14, x13
000000000003b070	cbnz	w15, 0x3b09c
000000000003b074	cmp	x14, x10
000000000003b078	b.gt	0x3b09c
000000000003b07c	ldxr	x13, [x12]
000000000003b080	cmp	x13, x14
000000000003b084	b.ne	0x3b064
000000000003b088	stlxr	w14, x11, [x12]
000000000003b08c	cbnz	w14, 0x3b068
000000000003b090	mov	w15, #0x1
000000000003b094	mov	x14, x13
000000000003b098	cbz	w15, 0x3b074
000000000003b09c	mov	w10, #0x1
000000000003b0a0	ldxr	x11, [x9]
000000000003b0a4	add	x11, x11, #0x1
000000000003b0a8	stxr	w12, x11, [x9]
000000000003b0ac	cbnz	w12, 0x3b0a0
000000000003b0b0	b	0x3b174
000000000003b0b4	cbz	w10, 0x3b148
000000000003b0b8	ldxr	x10, [x12]
000000000003b0bc	sub	x10, x10, #0x1
000000000003b0c0	stxr	w11, x10, [x12]
000000000003b0c4	cbnz	w11, 0x3b0b8
000000000003b0c8	add	x11, x9, #0x10
000000000003b0cc	ldr	x13, [x9, #0x10]
000000000003b0d0	b	0x3b0e4
000000000003b0d4	clrex
000000000003b0d8	mov	w14, #0x0
000000000003b0dc	mov	x13, x12
000000000003b0e0	cbnz	w14, 0x3b10c
000000000003b0e4	cmp	x13, x10
000000000003b0e8	b.ge	0x3b10c
000000000003b0ec	ldxr	x12, [x11]
000000000003b0f0	cmp	x12, x13
000000000003b0f4	b.ne	0x3b0d4
000000000003b0f8	stlxr	w13, x10, [x11]
000000000003b0fc	cbnz	w13, 0x3b0d8
000000000003b100	mov	w14, #0x1
000000000003b104	mov	x13, x12
000000000003b108	cbz	w14, 0x3b0e4
000000000003b10c	add	x9, x9, #0x8
000000000003b110	ldxr	x10, [x9]
000000000003b114	add	x10, x10, #0x1
000000000003b118	stxr	w11, x10, [x9]
000000000003b11c	cbnz	w11, 0x3b110
000000000003b120	mov	x10, #-0x1
000000000003b124	b	0x3b174
000000000003b128	ldp	x12, x11, [x9, #0x10]
000000000003b12c	add	x10, x11, #0x1
000000000003b130	str	x10, [x9, #0x18]
000000000003b134	cmp	x11, x12
000000000003b138	b.lt	0x3b140
000000000003b13c	str	x10, [x9, #0x10]
000000000003b140	mov	w10, #0x1
000000000003b144	b	0x3b168
000000000003b148	ldp	x11, x10, [x9, #0x10]
000000000003b14c	sub	x10, x10, #0x1
000000000003b150	str	x10, [x9, #0x18]
000000000003b154	cmp	x10, x11
000000000003b158	b.le	0x3b160
000000000003b15c	str	x10, [x9, #0x10]
000000000003b160	add	x9, x9, #0x8
000000000003b164	mov	x10, #-0x1
000000000003b168	ldr	x11, [x9]
000000000003b16c	add	x11, x11, #0x1
000000000003b170	str	x11, [x9]
000000000003b174	ldp	x9, x11, [x20, #0x38]
000000000003b178	add	x9, x9, x10
000000000003b17c	str	x9, [x20, #0x38]
000000000003b180	cmp	x9, x11
000000000003b184	b.ls	0x3b18c
000000000003b188	str	x9, [x20, #0x40]
000000000003b18c	ldp	x9, x10, [x20, #0x48]
000000000003b190	add	x8, x9, x8
000000000003b194	str	x8, [x20, #0x48]
000000000003b198	cmp	x8, x10
000000000003b19c	b.ls	0x3b1a4
000000000003b1a0	str	x8, [x20, #0x50]
000000000003b1a4	ldr	x8, [x20, #0x70]
000000000003b1a8	add	x9, x8, #0xc0
000000000003b1ac	adr	x10, #0x596d4
000000000003b1b0	nop
000000000003b1b4	cmp	x9, x10
000000000003b1b8	adr	x26, #0x59908
000000000003b1bc	nop
000000000003b1c0	ccmp	x9, x26, #0x2, hs
000000000003b1c4	b.lo	0x3b1f0
000000000003b1c8	ldp	x10, x9, [x8, #0xd0]
000000000003b1cc	sub	x9, x9, #0x1
000000000003b1d0	str	x9, [x8, #0xd8]
000000000003b1d4	cmp	x9, x10
000000000003b1d8	b.le	0x3b1e0
000000000003b1dc	str	x9, [x8, #0xd0]
000000000003b1e0	ldr	x9, [x8, #0xc8]
000000000003b1e4	add	x9, x9, #0x1
000000000003b1e8	str	x9, [x8, #0xc8]
000000000003b1ec	b	0x3b25c
000000000003b1f0	add	x10, x8, #0xd8
000000000003b1f4	ldxr	x9, [x10]
000000000003b1f8	sub	x9, x9, #0x1
000000000003b1fc	stxr	w11, x9, [x10]
000000000003b200	cbnz	w11, 0x3b1f4
000000000003b204	add	x10, x8, #0xd0
000000000003b208	ldr	x12, [x8, #0xd0]
000000000003b20c	b	0x3b220
000000000003b210	clrex
000000000003b214	mov	w13, #0x0
000000000003b218	mov	x12, x11
000000000003b21c	cbnz	w13, 0x3b248
000000000003b220	cmp	x12, x9
000000000003b224	b.ge	0x3b248
000000000003b228	ldxr	x11, [x10]
000000000003b22c	cmp	x11, x12
000000000003b230	b.ne	0x3b210
000000000003b234	stlxr	w12, x9, [x10]
000000000003b238	cbnz	w12, 0x3b214
000000000003b23c	mov	w13, #0x1
000000000003b240	mov	x12, x11
000000000003b244	cbz	w13, 0x3b220
000000000003b248	add	x8, x8, #0xc8
000000000003b24c	ldxr	x9, [x8]
000000000003b250	add	x9, x9, #0x1
000000000003b254	stxr	w10, x9, [x8]
000000000003b258	cbnz	w10, 0x3b24c
000000000003b25c	ldr	x8, [x19, #0x40]
000000000003b260	cbz	x8, 0x3b5a8
000000000003b264	cbz	x23, 0x3b414
000000000003b268	str	x23, [sp, #0x8]
000000000003b26c	mov	x27, #0x0
000000000003b270	b	0x3b294
000000000003b274	mov	x0, x19
000000000003b278	mov	x1, x24
000000000003b27c	mov	x2, x20
000000000003b280	bl	_mi_segment_page_clear
000000000003b284	add	x27, x27, #0x1
000000000003b288	ldr	x8, [x19, #0x40]
000000000003b28c	cmp	x27, x8
000000000003b290	b.hs	0x3b5a8
000000000003b294	add	x8, x19, x27, lsl #6
000000000003b298	ldrb	w9, [x8, #0x79]
000000000003b29c	tbz	w9, #0x0, 0x3b284
000000000003b2a0	ldr	x9, [x19, #0x28]
000000000003b2a4	sub	x9, x9, #0x1
000000000003b2a8	str	x9, [x19, #0x28]
000000000003b2ac	ldr	x9, [x20, #0x70]
000000000003b2b0	add	x10, x9, #0xe0
000000000003b2b4	adr	x11, #0x595cc
000000000003b2b8	nop
000000000003b2bc	cmp	x10, x11
000000000003b2c0	ccmp	x10, x26, #0x2, hs
000000000003b2c4	b.lo	0x3b2f0
000000000003b2c8	ldp	x11, x10, [x9, #0xf0]
000000000003b2cc	sub	x10, x10, #0x1
000000000003b2d0	str	x10, [x9, #0xf8]
000000000003b2d4	cmp	x10, x11
000000000003b2d8	b.le	0x3b2e0
000000000003b2dc	str	x10, [x9, #0xf0]
000000000003b2e0	ldr	x10, [x9, #0xe8]
000000000003b2e4	add	x10, x10, #0x1
000000000003b2e8	str	x10, [x9, #0xe8]
000000000003b2ec	b	0x3b35c
000000000003b2f0	add	x11, x9, #0xf8
000000000003b2f4	ldxr	x10, [x11]
000000000003b2f8	sub	x10, x10, #0x1
000000000003b2fc	stxr	w12, x10, [x11]
000000000003b300	cbnz	w12, 0x3b2f4
000000000003b304	add	x11, x9, #0xf0
000000000003b308	ldr	x13, [x9, #0xf0]
000000000003b30c	b	0x3b320
000000000003b310	clrex
000000000003b314	mov	w14, #0x0
000000000003b318	mov	x13, x12
000000000003b31c	cbnz	w14, 0x3b348
000000000003b320	cmp	x13, x10
000000000003b324	b.ge	0x3b348
000000000003b328	ldxr	x12, [x11]
000000000003b32c	cmp	x12, x13
000000000003b330	b.ne	0x3b310
000000000003b334	stlxr	w13, x10, [x11]
000000000003b338	cbnz	w13, 0x3b314
000000000003b33c	mov	w14, #0x1
000000000003b340	mov	x13, x12
000000000003b344	cbz	w14, 0x3b320
000000000003b348	add	x9, x9, #0xe8
000000000003b34c	ldxr	x10, [x9]
000000000003b350	add	x10, x10, #0x1
000000000003b354	stxr	w11, x10, [x9]
000000000003b358	cbnz	w11, 0x3b34c
000000000003b35c	add	x24, x8, #0x78
000000000003b360	add	x8, x19, x27, lsl #6
000000000003b364	add	x9, x8, #0xa0
000000000003b368	stlr	x22, [x9]
000000000003b36c	add	x28, x8, #0x98
000000000003b370	ldar	x8, [x28]
000000000003b374	ands	w9, w8, #0x3
000000000003b378	b.eq	0x3b3b0
000000000003b37c	cmp	w9, #0x1
000000000003b380	b.eq	0x3b3a8
000000000003b384	ldxr	x9, [x28]
000000000003b388	cmp	x9, x8
000000000003b38c	b.ne	0x3b3a0
000000000003b390	and	x8, x8, #0xfffffffffffffffc
000000000003b394	stlxr	w9, x8, [x28]
000000000003b398	cbnz	w9, 0x3b370
000000000003b39c	b	0x3b3b0
000000000003b3a0	clrex
000000000003b3a4	b	0x3b370
000000000003b3a8	wfe
000000000003b3ac	b	0x3b370
000000000003b3b0	mov	x0, x24
000000000003b3b4	mov	w1, #0x0
000000000003b3b8	bl	__mi_page_free_collect
000000000003b3bc	add	x25, x19, x27, lsl #6
000000000003b3c0	mov	x23, x25
000000000003b3c4	ldr	w8, [x23, #0x88]!
000000000003b3c8	cbz	w8, 0x3b274
000000000003b3cc	mov	x0, x22
000000000003b3d0	mov	x1, x24
000000000003b3d4	bl	__mi_page_reclaim
000000000003b3d8	ldr	w8, [x25, #0x8c]
000000000003b3dc	cmp	x8, x21
000000000003b3e0	b.ne	0x3b284
000000000003b3e4	ldr	w8, [x23]
000000000003b3e8	add	x9, x19, x27, lsl #6
000000000003b3ec	ldrh	w9, [x9, #0x7c]
000000000003b3f0	cmp	w8, w9
000000000003b3f4	b.lo	0x3b404
000000000003b3f8	ldr	x8, [x28]
000000000003b3fc	cmp	x8, #0x4
000000000003b400	b.lo	0x3b284
000000000003b404	ldr	x8, [sp, #0x8]
000000000003b408	mov	w9, #0x1
000000000003b40c	strb	w9, [x8]
000000000003b410	b	0x3b284
000000000003b414	mov	x24, #0x0
000000000003b418	b	0x3b43c
000000000003b41c	mov	x0, x19
000000000003b420	mov	x1, x23
000000000003b424	mov	x2, x20
000000000003b428	bl	_mi_segment_page_clear
000000000003b42c	add	x24, x24, #0x1
000000000003b430	ldr	x8, [x19, #0x40]
000000000003b434	cmp	x24, x8
000000000003b438	b.hs	0x3b5a8
000000000003b43c	add	x8, x19, x24, lsl #6
000000000003b440	ldrb	w9, [x8, #0x79]
000000000003b444	tbz	w9, #0x0, 0x3b42c
000000000003b448	ldr	x9, [x19, #0x28]
000000000003b44c	sub	x9, x9, #0x1
000000000003b450	str	x9, [x19, #0x28]
000000000003b454	ldr	x9, [x20, #0x70]
000000000003b458	add	x10, x9, #0xe0
000000000003b45c	adr	x11, #0x59424
000000000003b460	nop
000000000003b464	cmp	x10, x11
000000000003b468	ccmp	x10, x26, #0x2, hs
000000000003b46c	b.lo	0x3b498
000000000003b470	ldp	x11, x10, [x9, #0xf0]
000000000003b474	sub	x10, x10, #0x1
000000000003b478	str	x10, [x9, #0xf8]
000000000003b47c	cmp	x10, x11
000000000003b480	b.le	0x3b488
000000000003b484	str	x10, [x9, #0xf0]
000000000003b488	ldr	x10, [x9, #0xe8]
000000000003b48c	add	x10, x10, #0x1
000000000003b490	str	x10, [x9, #0xe8]
000000000003b494	b	0x3b504
000000000003b498	add	x11, x9, #0xf8
000000000003b49c	ldxr	x10, [x11]
000000000003b4a0	sub	x10, x10, #0x1
000000000003b4a4	stxr	w12, x10, [x11]
000000000003b4a8	cbnz	w12, 0x3b49c
000000000003b4ac	add	x11, x9, #0xf0
000000000003b4b0	ldr	x13, [x9, #0xf0]
000000000003b4b4	b	0x3b4c8
000000000003b4b8	clrex
000000000003b4bc	mov	w14, #0x0
000000000003b4c0	mov	x13, x12
000000000003b4c4	cbnz	w14, 0x3b4f0
000000000003b4c8	cmp	x13, x10
000000000003b4cc	b.ge	0x3b4f0
000000000003b4d0	ldxr	x12, [x11]
000000000003b4d4	cmp	x12, x13
000000000003b4d8	b.ne	0x3b4b8
000000000003b4dc	stlxr	w13, x10, [x11]
000000000003b4e0	cbnz	w13, 0x3b4bc
000000000003b4e4	mov	w14, #0x1
000000000003b4e8	mov	x13, x12
000000000003b4ec	cbz	w14, 0x3b4c8
000000000003b4f0	add	x9, x9, #0xe8
000000000003b4f4	ldxr	x10, [x9]
000000000003b4f8	add	x10, x10, #0x1
000000000003b4fc	stxr	w11, x10, [x9]
000000000003b500	cbnz	w11, 0x3b4f4
000000000003b504	add	x23, x8, #0x78
000000000003b508	add	x8, x19, x24, lsl #6
000000000003b50c	add	x9, x8, #0xa0
000000000003b510	stlr	x22, [x9]
000000000003b514	add	x27, x8, #0x98
000000000003b518	ldar	x8, [x27]
000000000003b51c	ands	w9, w8, #0x3
000000000003b520	b.eq	0x3b558
000000000003b524	cmp	w9, #0x1
000000000003b528	b.eq	0x3b550
000000000003b52c	ldxr	x9, [x27]
000000000003b530	cmp	x9, x8
000000000003b534	b.ne	0x3b548
000000000003b538	and	x8, x8, #0xfffffffffffffffc
000000000003b53c	stlxr	w9, x8, [x27]
000000000003b540	cbnz	w9, 0x3b518
000000000003b544	b	0x3b558
000000000003b548	clrex
000000000003b54c	b	0x3b518
000000000003b550	wfe
000000000003b554	b	0x3b518
000000000003b558	mov	x0, x23
000000000003b55c	mov	w1, #0x0
000000000003b560	bl	__mi_page_free_collect
000000000003b564	add	x25, x19, x24, lsl #6
000000000003b568	mov	x28, x25
000000000003b56c	ldr	w8, [x28, #0x88]!
000000000003b570	cbz	w8, 0x3b41c
000000000003b574	mov	x0, x22
000000000003b578	mov	x1, x23
000000000003b57c	bl	__mi_page_reclaim
000000000003b580	ldr	w8, [x25, #0x8c]
000000000003b584	cmp	x8, x21
000000000003b588	b.ne	0x3b42c
000000000003b58c	ldr	w8, [x28]
000000000003b590	add	x9, x19, x24, lsl #6
000000000003b594	ldrh	w9, [x9, #0x7c]
000000000003b598	cmp	w8, w9
000000000003b59c	b.lo	0x3b42c
000000000003b5a0	ldr	xzr, [x27]
000000000003b5a4	b	0x3b42c
000000000003b5a8	ldr	x10, [x19, #0x38]
000000000003b5ac	cbz	x10, 0x3b5f4
000000000003b5b0	ldr	w9, [x19, #0x70]
000000000003b5b4	cmp	x10, x8
000000000003b5b8	ccmp	w9, #0x1, #0x2, lo
000000000003b5bc	b.hi	0x3b608
000000000003b5c0	add	x8, x20, #0x10
000000000003b5c4	cmp	w9, #0x0
000000000003b5c8	csel	x10, xzr, x20, ne
000000000003b5cc	cmp	w9, #0x1
000000000003b5d0	csel	x8, x8, x10, eq
000000000003b5d4	ldr	x9, [x8, #0x8]
000000000003b5d8	stp	xzr, x9, [x19, #0x18]
000000000003b5dc	add	x10, x9, #0x18
000000000003b5e0	cmp	x9, #0x0
000000000003b5e4	csel	x9, x8, x10, eq
000000000003b5e8	str	x19, [x9]
000000000003b5ec	str	x19, [x8, #0x8]
000000000003b5f0	b	0x3b608
000000000003b5f4	mov	x0, x19
000000000003b5f8	mov	w1, #0x0
000000000003b5fc	mov	x2, x20
000000000003b600	bl	_mi_segment_free
000000000003b604	mov	x19, #0x0
000000000003b608	mov	x0, x19
000000000003b60c	ldp	x29, x30, [sp, #0x60]
000000000003b610	ldp	x20, x19, [sp, #0x50]
000000000003b614	ldp	x22, x21, [sp, #0x40]
000000000003b618	ldp	x24, x23, [sp, #0x30]
000000000003b61c	ldp	x26, x25, [sp, #0x20]
000000000003b620	ldp	x28, x27, [sp, #0x10]
000000000003b624	add	sp, sp, #0x70
000000000003b628	ret
__mi_page_reclaim:
000000000003b62c	ldr	w8, [x1, #0x14]
000000000003b630	ubfx	x9, x8, #26, #6
000000000003b634	cbnz	w9, 0x3b868
000000000003b638	mov	x10, x8
000000000003b63c	mov	w8, #0x7
000000000003b640	movk	w8, #0x20, lsl #16
000000000003b644	add	x10, x10, #0x7
000000000003b648	cmp	x10, #0x10
000000000003b64c	b.hs	0x3b658
000000000003b650	mov	w9, #0x1
000000000003b654	b	0x3b6a8
000000000003b658	lsr	x9, x10, #3
000000000003b65c	cmp	x10, #0x47
000000000003b660	b.hi	0x3b670
000000000003b664	add	w9, w9, #0x1
000000000003b668	and	x9, x9, #0xfe
000000000003b66c	b	0x3b6a8
000000000003b670	cmp	x10, x8
000000000003b674	b.ls	0x3b680
000000000003b678	mov	w9, #0x49
000000000003b67c	b	0x3b6a8
000000000003b680	sub	x9, x9, #0x1
000000000003b684	clz	x10, x9
000000000003b688	mov	w11, #0x3f
000000000003b68c	sub	w10, w11, w10
000000000003b690	and	w10, w10, #0xff
000000000003b694	sub	w11, w10, #0x2
000000000003b698	lsr	x9, x9, x11
000000000003b69c	and	w9, w9, #0x3
000000000003b6a0	bfi	w9, w10, #2, #8
000000000003b6a4	add	w9, w9, #0xfd
000000000003b6a8	and	x12, x9, #0xff
000000000003b6ac	mov	w9, #0x18
000000000003b6b0	madd	x9, x12, x9, x0
000000000003b6b4	ldr	x10, [x9, #0x420]
000000000003b6b8	add	x11, x8, #0x9
000000000003b6bc	cmp	x10, x11
000000000003b6c0	cset	w10, eq
000000000003b6c4	ldrb	w11, [x1, #0x6]
000000000003b6c8	and	w11, w11, #0xfe
000000000003b6cc	orr	w10, w11, w10
000000000003b6d0	strb	w10, [x1, #0x6]
000000000003b6d4	ldr	x10, [x9, #0x410]
000000000003b6d8	stp	x10, xzr, [x1, #0x30]
000000000003b6dc	add	x11, x10, #0x38
000000000003b6e0	add	x13, x9, #0x418
000000000003b6e4	cmp	x10, #0x0
000000000003b6e8	csel	x10, x13, x11, eq
000000000003b6ec	str	x1, [x10]
000000000003b6f0	str	x1, [x9, #0x410]
000000000003b6f4	ldr	x11, [x9, #0x420]
000000000003b6f8	cmp	x11, #0x400
000000000003b6fc	b.hi	0x3b858
000000000003b700	add	x9, x11, #0x7
000000000003b704	lsr	x9, x9, #3
000000000003b708	add	x10, x0, x9, lsl #3
000000000003b70c	ldr	x10, [x10, #0x8]
000000000003b710	cmp	x10, x1
000000000003b714	b.eq	0x3b858
000000000003b718	cmp	x11, #0x9
000000000003b71c	b.hs	0x3b728
000000000003b720	mov	x8, #0x0
000000000003b724	b	0x3b7fc
000000000003b728	sub	x13, x9, #0x1
000000000003b72c	clz	x14, x13
000000000003b730	mov	w10, #0x3f
000000000003b734	sub	w14, w10, w14
000000000003b738	and	w14, w14, #0xff
000000000003b73c	sub	w15, w14, #0x2
000000000003b740	lsr	x13, x13, x15
000000000003b744	and	w13, w13, #0x3
000000000003b748	bfi	w13, w14, #2, #8
000000000003b74c	sub	w13, w13, #0x3
000000000003b750	add	w14, w9, #0x1
000000000003b754	and	w14, w14, #0xfffffffe
000000000003b758	cmp	x11, #0x40
000000000003b75c	csel	w13, w13, w14, hi
000000000003b760	add	x11, x0, #0x410
000000000003b764	mov	w14, #0x18
000000000003b768	madd	x12, x12, x14, x0
000000000003b76c	add	x12, x12, #0x3f8
000000000003b770	and	w13, w13, #0xff
000000000003b774	ldr	x14, [x12, #0x10]
000000000003b778	add	x15, x14, #0x7
000000000003b77c	lsr	x14, x15, #3
000000000003b780	cmp	x15, #0x10
000000000003b784	b.hs	0x3b790
000000000003b788	mov	w15, #0x1
000000000003b78c	b	0x3b7d8
000000000003b790	cmp	x15, #0x47
000000000003b794	b.hi	0x3b7a4
000000000003b798	add	w15, w14, #0x1
000000000003b79c	and	w15, w15, #0xfffffffe
000000000003b7a0	b	0x3b7d8
000000000003b7a4	cmp	x15, x8
000000000003b7a8	b.ls	0x3b7b4
000000000003b7ac	mov	w15, #0x49
000000000003b7b0	b	0x3b7d8
000000000003b7b4	sub	x15, x14, #0x1
000000000003b7b8	clz	x16, x15
000000000003b7bc	sub	w16, w10, w16
000000000003b7c0	and	w16, w16, #0xff
000000000003b7c4	sub	w17, w16, #0x2
000000000003b7c8	lsr	x15, x15, x17
000000000003b7cc	and	w15, w15, #0x3
000000000003b7d0	bfi	w15, w16, #2, #8
000000000003b7d4	sub	w15, w15, #0x3
000000000003b7d8	cmp	x12, x11
000000000003b7dc	b.ls	0x3b7ec
000000000003b7e0	sub	x12, x12, #0x18
000000000003b7e4	cmp	w13, w15, uxtb
000000000003b7e8	b.eq	0x3b774
000000000003b7ec	cmp	x14, x9
000000000003b7f0	csinc	x8, x9, x14, hs
000000000003b7f4	cmp	x8, x9
000000000003b7f8	b.hi	0x3b858
000000000003b7fc	sub	x10, x9, x8
000000000003b800	add	x10, x10, #0x1
000000000003b804	cmp	x10, #0x4
000000000003b808	b.lo	0x3b83c
000000000003b80c	and	x11, x10, #0xfffffffffffffffc
000000000003b810	dup.2d	v0, x1
000000000003b814	add	x12, x0, x8, lsl #3
000000000003b818	add	x12, x12, #0x18
000000000003b81c	mov	x13, x11
000000000003b820	stp	q0, q0, [x12, #-0x10]
000000000003b824	add	x12, x12, #0x20
000000000003b828	subs	x13, x13, #0x4
000000000003b82c	b.ne	0x3b820
000000000003b830	cmp	x10, x11
000000000003b834	b.eq	0x3b858
000000000003b838	add	x8, x8, x11
000000000003b83c	sub	x9, x9, x8
000000000003b840	add	x9, x9, #0x1
000000000003b844	add	x8, x0, x8, lsl #3
000000000003b848	add	x8, x8, #0x8
000000000003b84c	str	x1, [x8], #0x8
000000000003b850	subs	x9, x9, #0x1
000000000003b854	b.ne	0x3b84c
000000000003b858	ldr	x8, [x0, #0xbc8]
000000000003b85c	add	x8, x8, #0x1
000000000003b860	str	x8, [x0, #0xbc8]
000000000003b864	ret
000000000003b868	and	x9, x1, #0xffffffffffc00000
000000000003b86c	ldr	w11, [x9, #0x70]
000000000003b870	cmp	w11, #0x3
000000000003b874	b.ne	0x3b880
000000000003b878	ldr	x12, [x9, #0x48]
000000000003b87c	b	0x3b88c
000000000003b880	ldr	x10, [x9, #0x60]
000000000003b884	mov	w12, #0x1
000000000003b888	lsl	x12, x12, x10
000000000003b88c	ldrb	w13, [x1]
000000000003b890	cbz	x13, 0x3b89c
000000000003b894	mov	x10, x12
000000000003b898	b	0x3b63c
000000000003b89c	ldr	x14, [x9, #0x50]
000000000003b8a0	sub	x10, x12, x14
000000000003b8a4	cmp	w11, #0x1
000000000003b8a8	ccmp	w8, #0x0, #0x4, ls
000000000003b8ac	b.eq	0x3b63c
000000000003b8b0	madd	x9, x12, x13, x9
000000000003b8b4	add	x9, x9, x14
000000000003b8b8	udiv	x11, x9, x8
000000000003b8bc	neg	x9, x9
000000000003b8c0	madd	x9, x11, x8, x9
000000000003b8c4	add	x9, x8, x9
000000000003b8c8	cmp	x9, x8
000000000003b8cc	csel	x8, x9, xzr, lo
000000000003b8d0	sub	x10, x10, x8
000000000003b8d4	b	0x3b63c
_mi_free:
000000000003b8d8	stp	x20, x19, [sp, #-0x20]!
000000000003b8dc	stp	x29, x30, [sp, #0x10]
000000000003b8e0	add	x29, sp, #0x10
000000000003b8e4	ands	x20, x0, #0xffffffffffc00000
000000000003b8e8	b.eq	0x3b944
000000000003b8ec	mov	x19, x0
000000000003b8f0	bl	0x556c8 ; symbol stub for: _pthread_self
000000000003b8f4	bl	0x55680 ; symbol stub for: _pthread_mach_thread_np
000000000003b8f8	mov	w8, w0
000000000003b8fc	ldr	x9, [x20, #0x60]
000000000003b900	add	x10, x20, #0x68
000000000003b904	ldar	x11, [x10]
000000000003b908	cmp	x11, x8
000000000003b90c	b.ne	0x3b950
000000000003b910	and	x11, x19, #0x3fffff
000000000003b914	lsr	x11, x11, x9
000000000003b918	add	x9, x20, x11, lsl #6
000000000003b91c	ldrb	w12, [x9, #0x7e]
000000000003b920	cbnz	w12, 0x3b950
000000000003b924	add	x8, x20, x11, lsl #6
000000000003b928	ldr	x10, [x8, #0x90]
000000000003b92c	str	x10, [x19]
000000000003b930	str	x19, [x8, #0x90]
000000000003b934	ldr	w10, [x8, #0x88]
000000000003b938	subs	w10, w10, #0x1
000000000003b93c	str	w10, [x8, #0x88]
000000000003b940	b.eq	0x3b970
000000000003b944	ldp	x29, x30, [sp, #0x10]
000000000003b948	ldp	x20, x19, [sp], #0x20
000000000003b94c	ret
000000000003b950	ldar	x9, [x10]
000000000003b954	cmp	x9, x8
000000000003b958	cset	w1, eq
000000000003b95c	mov	x0, x20
000000000003b960	mov	x2, x19
000000000003b964	ldp	x29, x30, [sp, #0x10]
000000000003b968	ldp	x20, x19, [sp], #0x20
000000000003b96c	b	_mi_free_generic
000000000003b970	add	x0, x9, #0x78
000000000003b974	ldp	x29, x30, [sp, #0x10]
000000000003b978	ldp	x20, x19, [sp], #0x20
000000000003b97c	b	__mi_page_retire
_mi_free_generic:
000000000003b980	mov	x8, x0
000000000003b984	sub	x9, x2, x0
000000000003b988	ldr	x12, [x0, #0x60]
000000000003b98c	lsr	x10, x9, x12
000000000003b990	add	x11, x0, x10, lsl #6
000000000003b994	mov	x9, x11
000000000003b998	ldrb	w13, [x9, #0x7e]!
000000000003b99c	sub	x0, x9, #0x6
000000000003b9a0	tbz	w13, #0x1, 0x3ba2c
000000000003b9a4	ldr	w11, [x11, #0x8c]
000000000003b9a8	ldr	w14, [x8, #0x70]
000000000003b9ac	cmp	w14, #0x3
000000000003b9b0	b.ne	0x3b9c8
000000000003b9b4	ldr	x12, [x8, #0x48]
000000000003b9b8	ldrb	w13, [x0]
000000000003b9bc	madd	x12, x12, x13, x8
000000000003b9c0	cbnz	x13, 0x3ba0c
000000000003b9c4	b	0x3b9dc
000000000003b9c8	mov	w13, #0x1
000000000003b9cc	lsl	x12, x13, x12
000000000003b9d0	ldrb	w13, [x0]
000000000003b9d4	madd	x12, x12, x13, x8
000000000003b9d8	cbnz	x13, 0x3ba0c
000000000003b9dc	ldr	x15, [x8, #0x50]
000000000003b9e0	add	x12, x12, x15
000000000003b9e4	cmp	w14, #0x1
000000000003b9e8	b.hi	0x3ba0c
000000000003b9ec	cbz	w11, 0x3ba0c
000000000003b9f0	udiv	x14, x12, x11
000000000003b9f4	neg	x15, x12
000000000003b9f8	madd	x14, x14, x11, x15
000000000003b9fc	add	x14, x11, x14
000000000003ba00	add	x15, x12, x14
000000000003ba04	cmp	x14, x11
000000000003ba08	csel	x12, x15, x12, lo
000000000003ba0c	ubfx	x14, x11, #26, #6
000000000003ba10	cbnz	w14, 0x3ba6c
000000000003ba14	mov	x15, x11
000000000003ba18	sub	x11, x2, x12
000000000003ba1c	udiv	x12, x11, x15
000000000003ba20	neg	x11, x11
000000000003ba24	madd	x11, x12, x15, x11
000000000003ba28	add	x2, x2, x11
000000000003ba2c	cbz	w1, 0x3ba5c
000000000003ba30	add	x8, x8, x10, lsl #6
000000000003ba34	ldr	x10, [x8, #0x90]
000000000003ba38	str	x10, [x2]
000000000003ba3c	str	x2, [x8, #0x90]
000000000003ba40	ldr	w10, [x8, #0x88]
000000000003ba44	subs	w10, w10, #0x1
000000000003ba48	str	w10, [x8, #0x88]
000000000003ba4c	b.eq	0x3ba64
000000000003ba50	ldrb	w8, [x9]
000000000003ba54	tbnz	w8, #0x0, 0x3ba68
000000000003ba58	ret
000000000003ba5c	mov	x1, x2
000000000003ba60	b	__mi_free_block_mt
000000000003ba64	b	__mi_page_retire
000000000003ba68	b	__mi_page_unfull
000000000003ba6c	and	x14, x0, #0xffffffffffc00000
000000000003ba70	ldr	w16, [x14, #0x70]
000000000003ba74	cmp	w16, #0x3
000000000003ba78	b.ne	0x3ba84
000000000003ba7c	ldr	x17, [x14, #0x48]
000000000003ba80	b	0x3ba90
000000000003ba84	ldr	x15, [x14, #0x60]
000000000003ba88	mov	w17, #0x1
000000000003ba8c	lsl	x17, x17, x15
000000000003ba90	cbz	w13, 0x3ba9c
000000000003ba94	mov	x15, x17
000000000003ba98	b	0x3ba18
000000000003ba9c	ldr	x3, [x14, #0x50]
000000000003baa0	sub	x15, x17, x3
000000000003baa4	cmp	w16, #0x1
000000000003baa8	ccmp	w11, #0x0, #0x4, ls
000000000003baac	b.eq	0x3ba18
000000000003bab0	madd	x13, x17, x13, x14
000000000003bab4	add	x13, x13, x3
000000000003bab8	udiv	x14, x13, x11
000000000003babc	neg	x13, x13
000000000003bac0	madd	x13, x14, x11, x13
000000000003bac4	add	x13, x11, x13
000000000003bac8	cmp	x13, x11
000000000003bacc	csel	x11, x13, xzr, lo
000000000003bad0	sub	x15, x15, x11
000000000003bad4	b	0x3ba18
__mi_free_block_mt:
000000000003bad8	stp	x22, x21, [sp, #-0x30]!
000000000003badc	stp	x20, x19, [sp, #0x10]
000000000003bae0	stp	x29, x30, [sp, #0x20]
000000000003bae4	add	x29, sp, #0x20
000000000003bae8	mov	x20, x1
000000000003baec	mov	x19, x0
000000000003baf0	and	x21, x0, #0xffffffffffc00000
000000000003baf4	ldr	w8, [x21, #0x70]
000000000003baf8	cmp	w8, #0x3
000000000003bafc	b.ne	0x3bbf8
000000000003bb00	bl	_mi_thread_init
000000000003bb04	adrp	x0, 63 ; 0x7a000
000000000003bb08	add	x0, x0, #0x2d8
000000000003bb0c	ldr	x8, [x0]
000000000003bb10	blr	x8
000000000003bb14	ldr	x8, [x0]
000000000003bb18	add	x9, x21, #0x68
000000000003bb1c	ldr	x10, [x8, #0xb20]
000000000003bb20	ldaxr	x11, [x9]
000000000003bb24	cbnz	x11, 0x3bc94
000000000003bb28	stlxr	w11, x10, [x9]
000000000003bb2c	cbnz	w11, 0x3bb20
000000000003bb30	ldr	x9, [x19, #0x8]
000000000003bb34	str	x9, [x20]
000000000003bb38	str	x20, [x19, #0x8]
000000000003bb3c	ldr	w9, [x19, #0x10]
000000000003bb40	sub	w9, w9, #0x1
000000000003bb44	str	w9, [x19, #0x10]
000000000003bb48	ldrb	w9, [x19, #0x7]
000000000003bb4c	and	w9, w9, #0xfe
000000000003bb50	strb	w9, [x19, #0x7]
000000000003bb54	ldr	x8, [x8]
000000000003bb58	ldr	x9, [x21, #0x48]
000000000003bb5c	ldr	x10, [x8, #0x90]
000000000003bb60	adr	x11, #0x58d20
000000000003bb64	nop
000000000003bb68	cmp	x10, x11
000000000003bb6c	cset	w12, hs
000000000003bb70	add	x11, x11, #0x240
000000000003bb74	cmp	x10, x11
000000000003bb78	cset	w11, lo
000000000003bb7c	and	w11, w12, w11
000000000003bb80	add	x13, x10, #0x18
000000000003bb84	tbnz	x9, #0x3f, 0x3bca8
000000000003bb88	cbz	w11, 0x3bd1c
000000000003bb8c	ldxr	x11, [x13]
000000000003bb90	add	x12, x11, #0x1
000000000003bb94	stxr	w14, x12, [x13]
000000000003bb98	cbnz	w14, 0x3bb8c
000000000003bb9c	add	x13, x10, #0x10
000000000003bba0	ldr	x15, [x10, #0x10]
000000000003bba4	b	0x3bbb8
000000000003bba8	clrex
000000000003bbac	mov	w16, #0x0
000000000003bbb0	mov	x15, x14
000000000003bbb4	cbnz	w16, 0x3bbe0
000000000003bbb8	cmp	x15, x11
000000000003bbbc	b.gt	0x3bbe0
000000000003bbc0	ldxr	x14, [x13]
000000000003bbc4	cmp	x14, x15
000000000003bbc8	b.ne	0x3bba8
000000000003bbcc	stlxr	w15, x12, [x13]
000000000003bbd0	cbnz	w15, 0x3bbac
000000000003bbd4	mov	w16, #0x1
000000000003bbd8	mov	x15, x14
000000000003bbdc	cbz	w16, 0x3bbb8
000000000003bbe0	mov	w11, #0x1
000000000003bbe4	ldxr	x12, [x10]
000000000003bbe8	add	x12, x12, #0x1
000000000003bbec	stxr	w13, x12, [x10]
000000000003bbf0	cbnz	w13, 0x3bbe4
000000000003bbf4	b	0x3bd68
000000000003bbf8	add	x8, x19, #0x20
000000000003bbfc	ldr	x10, [x19, #0x20]
000000000003bc00	b	0x3bc14
000000000003bc04	clrex
000000000003bc08	mov	w11, #0x0
000000000003bc0c	mov	x10, x9
000000000003bc10	tbnz	w11, #0x0, 0x3bc98
000000000003bc14	and	x11, x10, #0xfffffffffffffffc
000000000003bc18	ands	x12, x10, #0x3
000000000003bc1c	b.eq	0x3bc4c
000000000003bc20	str	x11, [x20]
000000000003bc24	ldxr	x9, [x8]
000000000003bc28	cmp	x9, x10
000000000003bc2c	b.ne	0x3bc04
000000000003bc30	orr	x10, x12, x20
000000000003bc34	stlxr	w11, x10, [x8]
000000000003bc38	cbnz	w11, 0x3bc08
000000000003bc3c	mov	w11, #0x1
000000000003bc40	mov	x10, x9
000000000003bc44	tbz	w11, #0x0, 0x3bc14
000000000003bc48	b	0x3bc98
000000000003bc4c	ldxr	x9, [x8]
000000000003bc50	cmp	x9, x10
000000000003bc54	b.ne	0x3bc6c
000000000003bc58	orr	x10, x11, #0x1
000000000003bc5c	stlxr	w11, x10, [x8]
000000000003bc60	cbnz	w11, 0x3bc70
000000000003bc64	mov	w11, #0x1
000000000003bc68	b	0x3bc74
000000000003bc6c	clrex
000000000003bc70	mov	w11, #0x0
000000000003bc74	mov	x10, x9
000000000003bc78	tbz	w11, #0x0, 0x3bc14
000000000003bc7c	add	x9, x19, #0x28
000000000003bc80	ldar	x10, [x9]
000000000003bc84	cbz	x10, 0x3be14
000000000003bc88	add	x9, x10, #0xb18
000000000003bc8c	ldr	x11, [x10, #0xb18]
000000000003bc90	b	0x3bdf0
000000000003bc94	clrex
000000000003bc98	ldp	x29, x30, [sp, #0x20]
000000000003bc9c	ldp	x20, x19, [sp, #0x10]
000000000003bca0	ldp	x22, x21, [sp], #0x30
000000000003bca4	ret
000000000003bca8	cbz	w11, 0x3bd3c
000000000003bcac	ldxr	x11, [x13]
000000000003bcb0	sub	x11, x11, #0x1
000000000003bcb4	stxr	w12, x11, [x13]
000000000003bcb8	cbnz	w12, 0x3bcac
000000000003bcbc	add	x12, x10, #0x10
000000000003bcc0	ldr	x14, [x10, #0x10]
000000000003bcc4	b	0x3bcd8
000000000003bcc8	clrex
000000000003bccc	mov	w15, #0x0
000000000003bcd0	mov	x14, x13
000000000003bcd4	cbnz	w15, 0x3bd00
000000000003bcd8	cmp	x14, x11
000000000003bcdc	b.ge	0x3bd00
000000000003bce0	ldxr	x13, [x12]
000000000003bce4	cmp	x13, x14
000000000003bce8	b.ne	0x3bcc8
000000000003bcec	stlxr	w14, x11, [x12]
000000000003bcf0	cbnz	w14, 0x3bccc
000000000003bcf4	mov	w15, #0x1
000000000003bcf8	mov	x14, x13
000000000003bcfc	cbz	w15, 0x3bcd8
000000000003bd00	add	x10, x10, #0x8
000000000003bd04	ldxr	x11, [x10]
000000000003bd08	add	x11, x11, #0x1
000000000003bd0c	stxr	w12, x11, [x10]
000000000003bd10	cbnz	w12, 0x3bd04
000000000003bd14	mov	x11, #-0x1
000000000003bd18	b	0x3bd68
000000000003bd1c	ldp	x13, x12, [x10, #0x10]
000000000003bd20	add	x11, x12, #0x1
000000000003bd24	str	x11, [x10, #0x18]
000000000003bd28	cmp	x12, x13
000000000003bd2c	b.lt	0x3bd34
000000000003bd30	str	x11, [x10, #0x10]
000000000003bd34	mov	w11, #0x1
000000000003bd38	b	0x3bd5c
000000000003bd3c	ldp	x12, x11, [x10, #0x10]
000000000003bd40	sub	x11, x11, #0x1
000000000003bd44	str	x11, [x10, #0x18]
000000000003bd48	cmp	x11, x12
000000000003bd4c	b.le	0x3bd54
000000000003bd50	str	x11, [x10, #0x10]
000000000003bd54	add	x10, x10, #0x8
000000000003bd58	mov	x11, #-0x1
000000000003bd5c	ldr	x12, [x10]
000000000003bd60	add	x12, x12, #0x1
000000000003bd64	str	x12, [x10]
000000000003bd68	add	x2, x8, #0x20
000000000003bd6c	ldp	x10, x12, [x8, #0x58]
000000000003bd70	add	x10, x10, x11
000000000003bd74	str	x10, [x8, #0x58]
000000000003bd78	cmp	x10, x12
000000000003bd7c	b.hi	0x3bdac
000000000003bd80	ldp	x10, x11, [x8, #0x68]
000000000003bd84	add	x9, x10, x9
000000000003bd88	str	x9, [x8, #0x68]
000000000003bd8c	cmp	x9, x11
000000000003bd90	b.hi	0x3bdc4
000000000003bd94	mov	x0, x19
000000000003bd98	mov	w1, #0x1
000000000003bd9c	ldp	x29, x30, [sp, #0x20]
000000000003bda0	ldp	x20, x19, [sp, #0x10]
000000000003bda4	ldp	x22, x21, [sp], #0x30
000000000003bda8	b	__mi_segment_page_free
000000000003bdac	str	x10, [x8, #0x60]
000000000003bdb0	ldp	x10, x11, [x8, #0x68]
000000000003bdb4	add	x9, x10, x9
000000000003bdb8	str	x9, [x8, #0x68]
000000000003bdbc	cmp	x9, x11
000000000003bdc0	b.ls	0x3bd94
000000000003bdc4	str	x9, [x8, #0x70]
000000000003bdc8	mov	x0, x19
000000000003bdcc	mov	w1, #0x1
000000000003bdd0	ldp	x29, x30, [sp, #0x20]
000000000003bdd4	ldp	x20, x19, [sp, #0x10]
000000000003bdd8	ldp	x22, x21, [sp], #0x30
000000000003bddc	b	__mi_segment_page_free
000000000003bde0	clrex
000000000003bde4	mov	w12, #0x0
000000000003bde8	mov	x11, x10
000000000003bdec	cbnz	w12, 0x3be14
000000000003bdf0	str	x11, [x20]
000000000003bdf4	ldxr	x10, [x9]
000000000003bdf8	cmp	x10, x11
000000000003bdfc	b.ne	0x3bde0
000000000003be00	stlxr	w11, x20, [x9]
000000000003be04	cbnz	w11, 0x3bde4
000000000003be08	mov	w12, #0x1
000000000003be0c	mov	x11, x10
000000000003be10	cbz	w12, 0x3bdf0
000000000003be14	ldr	x10, [x8]
000000000003be18	b	0x3be2c
000000000003be1c	clrex
000000000003be20	mov	w11, #0x0
000000000003be24	mov	x10, x9
000000000003be28	cbnz	w11, 0x3bc98
000000000003be2c	ldxr	x9, [x8]
000000000003be30	cmp	x9, x10
000000000003be34	b.ne	0x3be1c
000000000003be38	and	x10, x10, #0xfffffffffffffffc
000000000003be3c	orr	x10, x10, #0x2
000000000003be40	stlxr	w11, x10, [x8]
000000000003be44	cbnz	w11, 0x3be20
000000000003be48	mov	w11, #0x1
000000000003be4c	mov	x10, x9
000000000003be50	cbz	w11, 0x3be2c
000000000003be54	b	0x3bc98
_mi_out_buf_stderr:
000000000003be58	stp	x20, x19, [sp, #-0x20]!
000000000003be5c	stp	x29, x30, [sp, #0x10]
000000000003be60	add	x29, sp, #0x10
000000000003be64	mov	x19, x0
000000000003be68	nop
000000000003be6c	ldr	x8, #0x241c4 ; literal pool symbol address: ___stderrp
000000000003be70	ldr	x1, [x8]
000000000003be74	bl	0x5544c ; symbol stub for: _fputs
000000000003be78	cbz	x19, 0x3beb8
000000000003be7c	nop
000000000003be80	ldr	x8, #0x584e0
000000000003be84	lsr	x8, x8, #15
000000000003be88	cbnz	x8, 0x3beb8
000000000003be8c	mov	x0, x19
000000000003be90	bl	0x5574c ; symbol stub for: _strlen
000000000003be94	cbz	x0, 0x3beb8
000000000003be98	adr	x9, #0x584c8
000000000003be9c	nop
000000000003bea0	ldaxr	x8, [x9]
000000000003bea4	add	x10, x8, x0
000000000003bea8	stlxr	w11, x10, [x9]
000000000003beac	cbnz	w11, 0x3bea0
000000000003beb0	lsr	x9, x8, #15
000000000003beb4	cbz	x9, 0x3bec4
000000000003beb8	ldp	x29, x30, [sp, #0x10]
000000000003bebc	ldp	x20, x19, [sp], #0x20
000000000003bec0	ret
000000000003bec4	add	x9, x8, x0
000000000003bec8	mov	w10, #0x7fff
000000000003becc	sub	x10, x10, x8
000000000003bed0	lsr	x9, x9, #15
000000000003bed4	cmp	x9, #0x0
000000000003bed8	csel	x2, x10, x0, ne
000000000003bedc	adr	x9, #0x4032c
000000000003bee0	nop
000000000003bee4	add	x0, x9, x8
000000000003bee8	mov	x1, x19
000000000003beec	ldp	x29, x30, [sp, #0x10]
000000000003bef0	ldp	x20, x19, [sp], #0x20
000000000003bef4	b	0x554ac ; symbol stub for: _memcpy
_mi_buffered_out:
000000000003bef8	stp	x28, x27, [sp, #-0x60]!
000000000003befc	stp	x26, x25, [sp, #0x10]
000000000003bf00	stp	x24, x23, [sp, #0x20]
000000000003bf04	stp	x22, x21, [sp, #0x30]
000000000003bf08	stp	x20, x19, [sp, #0x40]
000000000003bf0c	stp	x29, x30, [sp, #0x50]
000000000003bf10	add	x29, sp, #0x50
000000000003bf14	cbz	x0, 0x3c0e4
000000000003bf18	mov	x19, x1
000000000003bf1c	cbz	x1, 0x3c0e4
000000000003bf20	ldrb	w24, [x0]
000000000003bf24	cbz	w24, 0x3c0e4
000000000003bf28	add	x21, x0, #0x1
000000000003bf2c	adrp	x22, 89 ; 0x94000
000000000003bf30	adrp	x20, 63 ; 0x7a000
000000000003bf34	add	x20, x20, #0x2f0
000000000003bf38	ldr	x23, [x20]
000000000003bf3c	adr	x25, #0x58350
000000000003bf40	nop
000000000003bf44	adr	x26, #-0x5a74
000000000003bf48	nop
000000000003bf4c	nop
000000000003bf50	ldr	x27, #0x240e8 ; literal pool symbol address: ___stdoutp
000000000003bf54	nop
000000000003bf58	ldr	x28, #0x240d8 ; literal pool symbol address: ___stderrp
000000000003bf5c	b	0x3bf78
000000000003bf60	ldr	x1, [x19, #0x8]
000000000003bf64	mov	x0, x8
000000000003bf68	blr	x9
000000000003bf6c	str	xzr, [x19, #0x18]
000000000003bf70	ldrb	w24, [x21], #0x1
000000000003bf74	cbz	w24, 0x3c0e4
000000000003bf78	ldp	x8, x9, [x19, #0x18]
000000000003bf7c	cmp	x8, x9
000000000003bf80	b.hs	0x3bfa0
000000000003bf84	ldr	x9, [x19, #0x10]
000000000003bf88	add	x10, x8, #0x1
000000000003bf8c	str	x10, [x19, #0x18]
000000000003bf90	strb	w24, [x9, x8]
000000000003bf94	cmp	w24, #0xa
000000000003bf98	b.ne	0x3bf70
000000000003bf9c	b	0x3c058
000000000003bfa0	ldr	x9, [x19, #0x10]
000000000003bfa4	strb	wzr, [x9, x8]
000000000003bfa8	ldr	x9, [x19]
000000000003bfac	ldr	x8, [x19, #0x10]
000000000003bfb0	cbz	x9, 0x3bfc8
000000000003bfb4	ldr	x10, [x27]
000000000003bfb8	ldr	x11, [x28]
000000000003bfbc	cmp	x10, x9
000000000003bfc0	ccmp	x11, x9, #0x4, ne
000000000003bfc4	b.ne	0x3c02c
000000000003bfc8	ldrb	w9, [x22, #0x28c]
000000000003bfcc	cmp	w9, #0x1
000000000003bfd0	b.ne	0x3bff4
000000000003bfd4	mov	x0, x20
000000000003bfd8	blr	x23
000000000003bfdc	ldrb	w9, [x0]
000000000003bfe0	tbnz	w9, #0x0, 0x3c038
000000000003bfe4	mov	x0, x20
000000000003bfe8	blr	x23
000000000003bfec	mov	w9, #0x1
000000000003bff0	strb	w9, [x0]
000000000003bff4	add	x9, x25, #0xc4
000000000003bff8	ldar	x1, [x9]
000000000003bffc	ldur	x9, [x25, #0xcc]
000000000003c000	cmp	x9, #0x0
000000000003c004	csel	x9, x26, x9, eq
000000000003c008	mov	x0, x8
000000000003c00c	blr	x9
000000000003c010	ldrb	w8, [x25]
000000000003c014	cmp	w8, #0x1
000000000003c018	b.ne	0x3c038
000000000003c01c	mov	x0, x20
000000000003c020	blr	x23
000000000003c024	strb	wzr, [x0]
000000000003c028	b	0x3c038
000000000003c02c	ldr	x1, [x19, #0x8]
000000000003c030	mov	x0, x8
000000000003c034	blr	x9
000000000003c038	mov	x8, #0x0
000000000003c03c	str	xzr, [x19, #0x18]
000000000003c040	ldr	x9, [x19, #0x10]
000000000003c044	add	x10, x8, #0x1
000000000003c048	str	x10, [x19, #0x18]
000000000003c04c	strb	w24, [x9, x8]
000000000003c050	cmp	w24, #0xa
000000000003c054	b.ne	0x3bf70
000000000003c058	ldp	x8, x9, [x19, #0x10]
000000000003c05c	strb	wzr, [x8, x9]
000000000003c060	ldr	x9, [x19]
000000000003c064	ldr	x8, [x19, #0x10]
000000000003c068	cbz	x9, 0x3c080
000000000003c06c	ldr	x10, [x27]
000000000003c070	ldr	x11, [x28]
000000000003c074	cmp	x10, x9
000000000003c078	ccmp	x11, x9, #0x4, ne
000000000003c07c	b.ne	0x3bf60
000000000003c080	ldrb	w9, [x22, #0x28c]
000000000003c084	cmp	w9, #0x1
000000000003c088	b.ne	0x3c0ac
000000000003c08c	mov	x0, x20
000000000003c090	blr	x23
000000000003c094	ldrb	w9, [x0]
000000000003c098	tbnz	w9, #0x0, 0x3bf6c
000000000003c09c	mov	x0, x20
000000000003c0a0	blr	x23
000000000003c0a4	mov	w9, #0x1
000000000003c0a8	strb	w9, [x0]
000000000003c0ac	add	x9, x25, #0xc4
000000000003c0b0	ldar	x1, [x9]
000000000003c0b4	ldur	x9, [x25, #0xcc]
000000000003c0b8	cmp	x9, #0x0
000000000003c0bc	csel	x9, x26, x9, eq
000000000003c0c0	mov	x0, x8
000000000003c0c4	blr	x9
000000000003c0c8	ldrb	w8, [x25]
000000000003c0cc	cmp	w8, #0x1
000000000003c0d0	b.ne	0x3bf6c
000000000003c0d4	mov	x0, x20
000000000003c0d8	blr	x23
000000000003c0dc	strb	wzr, [x0]
000000000003c0e0	b	0x3bf6c
000000000003c0e4	ldp	x29, x30, [sp, #0x50]
000000000003c0e8	ldp	x20, x19, [sp, #0x40]
000000000003c0ec	ldp	x22, x21, [sp, #0x30]
000000000003c0f0	ldp	x24, x23, [sp, #0x20]
000000000003c0f4	ldp	x26, x25, [sp, #0x10]
000000000003c0f8	ldp	x28, x27, [sp], #0x60
000000000003c0fc	ret
__mi_fprintf:
000000000003c100	stp	x28, x27, [sp, #-0x30]!
000000000003c104	stp	x20, x19, [sp, #0x10]
000000000003c108	stp	x29, x30, [sp, #0x20]
000000000003c10c	add	x29, sp, #0x20
000000000003c110	sub	sp, sp, #0x210
000000000003c114	add	x8, x29, #0x10
000000000003c118	str	x8, [sp, #0x8]
000000000003c11c	cbz	x2, 0x3c25c
000000000003c120	mov	x19, x1
000000000003c124	adrp	x20, 88 ; 0x94000
000000000003c128	ldrb	w8, [x20, #0x28c]
000000000003c12c	cmp	w8, #0x1
000000000003c130	b.ne	0x3c160
000000000003c134	adrp	x8, 62 ; 0x7a000
000000000003c138	add	x8, x8, #0x2f0
000000000003c13c	ldr	x9, [x8]
000000000003c140	mov	x0, x8
000000000003c144	blr	x9
000000000003c148	ldrb	w10, [x0]
000000000003c14c	tbnz	w10, #0x0, 0x3c25c
000000000003c150	mov	x0, x8
000000000003c154	blr	x9
000000000003c158	mov	w8, #0x1
000000000003c15c	strb	w8, [x0]
000000000003c160	add	x0, sp, #0x10
000000000003c164	add	x3, x29, #0x10
000000000003c168	mov	w1, #0x1ff
000000000003c16c	bl	0x557ac ; symbol stub for: _vsnprintf
000000000003c170	ldrb	w8, [x20, #0x28c]
000000000003c174	cmp	w8, #0x1
000000000003c178	b.ne	0x3c1e4
000000000003c17c	adrp	x8, 62 ; 0x7a000
000000000003c180	add	x8, x8, #0x2f0
000000000003c184	ldr	x9, [x8]
000000000003c188	mov	x0, x8
000000000003c18c	blr	x9
000000000003c190	strb	wzr, [x0]
000000000003c194	nop
000000000003c198	ldr	x10, #0x23ea0 ; literal pool symbol address: ___stdoutp
000000000003c19c	adr	x11, #-0x2a4
000000000003c1a0	nop
000000000003c1a4	ldr	x10, [x10]
000000000003c1a8	nop
000000000003c1ac	ldr	x12, #0x23e84 ; literal pool symbol address: ___stderrp
000000000003c1b0	ldr	x12, [x12]
000000000003c1b4	cmp	x10, x11
000000000003c1b8	ccmp	x12, x11, #0x4, ne
000000000003c1bc	b.ne	0x3c270
000000000003c1c0	mov	x0, x8
000000000003c1c4	blr	x9
000000000003c1c8	ldrb	w10, [x0]
000000000003c1cc	tbnz	w10, #0x0, 0x3c25c
000000000003c1d0	mov	x0, x8
000000000003c1d4	blr	x9
000000000003c1d8	mov	w8, #0x1
000000000003c1dc	strb	w8, [x0]
000000000003c1e0	b	0x3c210
000000000003c1e4	nop
000000000003c1e8	ldr	x8, #0x23e50 ; literal pool symbol address: ___stdoutp
000000000003c1ec	adr	x9, #-0x2f4
000000000003c1f0	nop
000000000003c1f4	ldr	x8, [x8]
000000000003c1f8	nop
000000000003c1fc	ldr	x10, #0x23e34 ; literal pool symbol address: ___stderrp
000000000003c200	ldr	x10, [x10]
000000000003c204	cmp	x8, x9
000000000003c208	ccmp	x10, x9, #0x4, ne
000000000003c20c	b.ne	0x3c270
000000000003c210	adr	x19, #0x5807c
000000000003c214	nop
000000000003c218	add	x8, x19, #0xc4
000000000003c21c	ldar	x1, [x8]
000000000003c220	ldur	x8, [x19, #0xcc]
000000000003c224	adr	x9, #-0x5d54
000000000003c228	nop
000000000003c22c	cmp	x8, #0x0
000000000003c230	csel	x8, x9, x8, eq
000000000003c234	add	x0, sp, #0x10
000000000003c238	blr	x8
000000000003c23c	ldrb	w8, [x19]
000000000003c240	cmp	w8, #0x1
000000000003c244	b.ne	0x3c25c
000000000003c248	adrp	x0, 62 ; 0x7a000
000000000003c24c	add	x0, x0, #0x2f0
000000000003c250	ldr	x8, [x0]
000000000003c254	blr	x8
000000000003c258	strb	wzr, [x0]
000000000003c25c	add	sp, sp, #0x210
000000000003c260	ldp	x29, x30, [sp, #0x20]
000000000003c264	ldp	x20, x19, [sp, #0x10]
000000000003c268	ldp	x28, x27, [sp], #0x30
000000000003c26c	ret
000000000003c270	add	x0, sp, #0x10
000000000003c274	mov	x1, x19
000000000003c278	bl	_mi_buffered_out
000000000003c27c	add	sp, sp, #0x210
000000000003c280	ldp	x29, x30, [sp, #0x20]
000000000003c284	ldp	x20, x19, [sp, #0x10]
000000000003c288	ldp	x28, x27, [sp], #0x30
000000000003c28c	ret
_mi_stat_print:
000000000003c290	sub	sp, sp, #0x90
000000000003c294	stp	x26, x25, [sp, #0x40]
000000000003c298	stp	x24, x23, [sp, #0x50]
000000000003c29c	stp	x22, x21, [sp, #0x60]
000000000003c2a0	stp	x20, x19, [sp, #0x70]
000000000003c2a4	stp	x29, x30, [sp, #0x80]
000000000003c2a8	add	x29, sp, #0x80
000000000003c2ac	mov	x19, x3
000000000003c2b0	mov	x21, x2
000000000003c2b4	mov	x20, x0
000000000003c2b8	str	x1, [sp]
000000000003c2bc	adr	x2, #0x224e8 ; literal pool for: "%10s:"
000000000003c2c0	nop
000000000003c2c4	mov	x1, x3
000000000003c2c8	bl	__mi_fprintf
000000000003c2cc	cmp	x21, #0x1
000000000003c2d0	b.lt	0x3c300
000000000003c2d4	ldr	x8, [x20, #0x10]
000000000003c2d8	cmp	x8, #0x0
000000000003c2dc	cneg	x9, x8, mi
000000000003c2e0	cmp	x9, #0x3ff
000000000003c2e4	b.gt	0x3c348
000000000003c2e8	adr	x9, #0x2249c ; literal pool for: "b"
000000000003c2ec	nop
000000000003c2f0	stp	x8, x9, [sp]
000000000003c2f4	adr	x2, #0x22489 ; literal pool for: "%d %s "
000000000003c2f8	nop
000000000003c2fc	b	0x3c3d4
000000000003c300	ldr	x8, [x20, #0x10]
000000000003c304	cmp	x8, #0x0
000000000003c308	cneg	x9, x8, mi
000000000003c30c	tbnz	x21, #0x3f, 0x3c6fc
000000000003c310	adr	x24, #0x22478 ; literal pool for: "m"
000000000003c314	nop
000000000003c318	adr	x25, #0x2246e ; literal pool for: "k"
000000000003c31c	nop
000000000003c320	adr	x23, #0x2246a ; literal pool for: "g"
000000000003c324	nop
000000000003c328	adr	x22, #0x2245c ; literal pool for: "b"
000000000003c32c	nop
000000000003c330	cmp	x9, #0x3ff
000000000003c334	b.gt	0x3c71c
000000000003c338	stp	x8, x22, [sp]
000000000003c33c	adr	x2, #0x22441 ; literal pool for: "%d %s "
000000000003c340	nop
000000000003c344	b	0x3c788
000000000003c348	adr	x10, #0x22440 ; literal pool for: "m"
000000000003c34c	nop
000000000003c350	adr	x11, #0x22436 ; literal pool for: "k"
000000000003c354	nop
000000000003c358	cmp	x9, #0x100, lsl #12
000000000003c35c	csel	x10, x11, x10, lt
000000000003c360	mov	w11, #0x100000
000000000003c364	mov	w12, #0x400
000000000003c368	csel	x11, x12, x11, lt
000000000003c36c	lsl	x12, x11, #10
000000000003c370	adr	x13, #0x2241a ; literal pool for: "g"
000000000003c374	nop
000000000003c378	cmp	x9, x12
000000000003c37c	csel	x9, x10, x13, lt
000000000003c380	csel	x10, x11, x12, lt
000000000003c384	mov	w11, #0xcccd
000000000003c388	movk	w11, #0xcccc, lsl #16
000000000003c38c	mul	x10, x10, x11
000000000003c390	lsr	x10, x10, #35
000000000003c394	sdiv	x8, x8, x10
000000000003c398	mov	x10, #0x6666666666666666
000000000003c39c	movk	x10, #0x6667
000000000003c3a0	smulh	x10, x8, x10
000000000003c3a4	asr	x11, x10, #2
000000000003c3a8	add	x10, x11, x10, lsr #63
000000000003c3ac	mov	x11, #-0xa
000000000003c3b0	madd	x8, x10, x11, x8
000000000003c3b4	cmp	x8, #0x0
000000000003c3b8	cneg	x8, x8, mi
000000000003c3bc	adr	x11, #0x223c8 ; literal pool for: "b"
000000000003c3c0	nop
000000000003c3c4	stp	x9, x11, [sp, #0x10]
000000000003c3c8	stp	x10, x8, [sp]
000000000003c3cc	adr	x2, #0x223c0 ; literal pool for: "%ld.%ld %s%s"
000000000003c3d0	nop
000000000003c3d4	add	x0, sp, #0x20
000000000003c3d8	mov	w1, #0x20
000000000003c3dc	bl	0x55728 ; symbol stub for: _snprintf
000000000003c3e0	add	x8, sp, #0x20
000000000003c3e4	str	x8, [sp]
000000000003c3e8	adr	x2, #0x223c4 ; literal pool for: "%11s"
000000000003c3ec	nop
000000000003c3f0	mov	x1, x19
000000000003c3f4	bl	__mi_fprintf
000000000003c3f8	ldr	x8, [x20]
000000000003c3fc	cmp	x8, #0x0
000000000003c400	cneg	x9, x8, mi
000000000003c404	cmp	x9, #0x3ff
000000000003c408	b.gt	0x3c424
000000000003c40c	adr	x9, #0x22378 ; literal pool for: "b"
000000000003c410	nop
000000000003c414	stp	x8, x9, [sp]
000000000003c418	adr	x2, #0x22365 ; literal pool for: "%d %s "
000000000003c41c	nop
000000000003c420	b	0x3c4b0
000000000003c424	adr	x10, #0x22364 ; literal pool for: "m"
000000000003c428	nop
000000000003c42c	adr	x11, #0x2235a ; literal pool for: "k"
000000000003c430	nop
000000000003c434	cmp	x9, #0x100, lsl #12
000000000003c438	csel	x10, x11, x10, lt
000000000003c43c	mov	w11, #0x100000
000000000003c440	mov	w12, #0x400
000000000003c444	csel	x11, x12, x11, lt
000000000003c448	lsl	x12, x11, #10
000000000003c44c	adr	x13, #0x2233e ; literal pool for: "g"
000000000003c450	nop
000000000003c454	cmp	x9, x12
000000000003c458	csel	x9, x10, x13, lt
000000000003c45c	csel	x10, x11, x12, lt
000000000003c460	mov	w11, #0xcccd
000000000003c464	movk	w11, #0xcccc, lsl #16
000000000003c468	mul	x10, x10, x11
000000000003c46c	lsr	x10, x10, #35
000000000003c470	sdiv	x8, x8, x10
000000000003c474	mov	x10, #0x6666666666666666
000000000003c478	movk	x10, #0x6667
000000000003c47c	smulh	x10, x8, x10
000000000003c480	asr	x11, x10, #2
000000000003c484	add	x10, x11, x10, lsr #63
000000000003c488	mov	x11, #-0xa
000000000003c48c	madd	x8, x10, x11, x8
000000000003c490	cmp	x8, #0x0
000000000003c494	cneg	x8, x8, mi
000000000003c498	adr	x11, #0x222ec ; literal pool for: "b"
000000000003c49c	nop
000000000003c4a0	stp	x9, x11, [sp, #0x10]
000000000003c4a4	stp	x10, x8, [sp]
000000000003c4a8	adr	x2, #0x222e4 ; literal pool for: "%ld.%ld %s%s"
000000000003c4ac	nop
000000000003c4b0	add	x0, sp, #0x20
000000000003c4b4	mov	w1, #0x20
000000000003c4b8	bl	0x55728 ; symbol stub for: _snprintf
000000000003c4bc	add	x8, sp, #0x20
000000000003c4c0	str	x8, [sp]
000000000003c4c4	adr	x2, #0x222e8 ; literal pool for: "%11s"
000000000003c4c8	nop
000000000003c4cc	mov	x1, x19
000000000003c4d0	bl	__mi_fprintf
000000000003c4d4	ldr	x8, [x20, #0x8]
000000000003c4d8	cmp	x8, #0x0
000000000003c4dc	cneg	x9, x8, mi
000000000003c4e0	cmp	x9, #0x3ff
000000000003c4e4	b.gt	0x3c500
000000000003c4e8	adr	x9, #0x2229c ; literal pool for: "b"
000000000003c4ec	nop
000000000003c4f0	stp	x8, x9, [sp]
000000000003c4f4	adr	x2, #0x22289 ; literal pool for: "%d %s "
000000000003c4f8	nop
000000000003c4fc	b	0x3c58c
000000000003c500	adr	x10, #0x22288 ; literal pool for: "m"
000000000003c504	nop
000000000003c508	adr	x11, #0x2227e ; literal pool for: "k"
000000000003c50c	nop
000000000003c510	cmp	x9, #0x100, lsl #12
000000000003c514	csel	x10, x11, x10, lt
000000000003c518	mov	w11, #0x100000
000000000003c51c	mov	w12, #0x400
000000000003c520	csel	x11, x12, x11, lt
000000000003c524	lsl	x12, x11, #10
000000000003c528	adr	x13, #0x22262 ; literal pool for: "g"
000000000003c52c	nop
000000000003c530	cmp	x9, x12
000000000003c534	csel	x9, x10, x13, lt
000000000003c538	csel	x10, x11, x12, lt
000000000003c53c	mov	w11, #0xcccd
000000000003c540	movk	w11, #0xcccc, lsl #16
000000000003c544	mul	x10, x10, x11
000000000003c548	lsr	x10, x10, #35
000000000003c54c	sdiv	x8, x8, x10
000000000003c550	mov	x10, #0x6666666666666666
000000000003c554	movk	x10, #0x6667
000000000003c558	smulh	x10, x8, x10
000000000003c55c	asr	x11, x10, #2
000000000003c560	add	x10, x11, x10, lsr #63
000000000003c564	mov	x11, #-0xa
000000000003c568	madd	x8, x10, x11, x8
000000000003c56c	cmp	x8, #0x0
000000000003c570	cneg	x8, x8, mi
000000000003c574	adr	x11, #0x22210 ; literal pool for: "b"
000000000003c578	nop
000000000003c57c	stp	x9, x11, [sp, #0x10]
000000000003c580	stp	x10, x8, [sp]
000000000003c584	adr	x2, #0x22208 ; literal pool for: "%ld.%ld %s%s"
000000000003c588	nop
000000000003c58c	add	x0, sp, #0x20
000000000003c590	mov	w1, #0x20
000000000003c594	bl	0x55728 ; symbol stub for: _snprintf
000000000003c598	add	x8, sp, #0x20
000000000003c59c	str	x8, [sp]
000000000003c5a0	adr	x2, #0x2220c ; literal pool for: "%11s"
000000000003c5a4	nop
000000000003c5a8	mov	x1, x19
000000000003c5ac	bl	__mi_fprintf
000000000003c5b0	ldr	x8, [x20, #0x18]
000000000003c5b4	cmp	x8, #0x0
000000000003c5b8	cneg	x9, x8, mi
000000000003c5bc	cmp	x9, #0x3ff
000000000003c5c0	b.gt	0x3c5dc
000000000003c5c4	adr	x9, #0x221c0 ; literal pool for: "b"
000000000003c5c8	nop
000000000003c5cc	stp	x8, x9, [sp]
000000000003c5d0	adr	x2, #0x221ad ; literal pool for: "%d %s "
000000000003c5d4	nop
000000000003c5d8	b	0x3c668
000000000003c5dc	adr	x10, #0x221ac ; literal pool for: "m"
000000000003c5e0	nop
000000000003c5e4	adr	x11, #0x221a2 ; literal pool for: "k"
000000000003c5e8	nop
000000000003c5ec	cmp	x9, #0x100, lsl #12
000000000003c5f0	csel	x10, x11, x10, lt
000000000003c5f4	mov	w11, #0x100000
000000000003c5f8	mov	w12, #0x400
000000000003c5fc	csel	x11, x12, x11, lt
000000000003c600	lsl	x12, x11, #10
000000000003c604	adr	x13, #0x22186 ; literal pool for: "g"
000000000003c608	nop
000000000003c60c	cmp	x9, x12
000000000003c610	csel	x9, x10, x13, lt
000000000003c614	csel	x10, x11, x12, lt
000000000003c618	mov	w11, #0xcccd
000000000003c61c	movk	w11, #0xcccc, lsl #16
000000000003c620	mul	x10, x10, x11
000000000003c624	lsr	x10, x10, #35
000000000003c628	sdiv	x8, x8, x10
000000000003c62c	mov	x10, #0x6666666666666666
000000000003c630	movk	x10, #0x6667
000000000003c634	smulh	x10, x8, x10
000000000003c638	asr	x11, x10, #2
000000000003c63c	add	x10, x11, x10, lsr #63
000000000003c640	mov	x11, #-0xa
000000000003c644	madd	x8, x10, x11, x8
000000000003c648	cmp	x8, #0x0
000000000003c64c	cneg	x8, x8, mi
000000000003c650	adr	x11, #0x22134 ; literal pool for: "b"
000000000003c654	nop
000000000003c658	stp	x9, x11, [sp, #0x10]
000000000003c65c	stp	x10, x8, [sp]
000000000003c660	adr	x2, #0x2212c ; literal pool for: "%ld.%ld %s%s"
000000000003c664	nop
000000000003c668	add	x0, sp, #0x20
000000000003c66c	mov	w1, #0x20
000000000003c670	bl	0x55728 ; symbol stub for: _snprintf
000000000003c674	add	x22, sp, #0x20
000000000003c678	str	x22, [sp]
000000000003c67c	adr	x21, #0x22130 ; literal pool for: "%11s"
000000000003c680	nop
000000000003c684	mov	x1, x19
000000000003c688	mov	x2, x21
000000000003c68c	bl	__mi_fprintf
000000000003c690	adr	x8, #0x220f4 ; literal pool for: "b"
000000000003c694	nop
000000000003c698	mov	w9, #0x1
000000000003c69c	stp	x9, x8, [sp]
000000000003c6a0	adr	x2, #0x220dd ; literal pool for: "%d %s "
000000000003c6a4	nop
000000000003c6a8	add	x0, sp, #0x20
000000000003c6ac	mov	w1, #0x20
000000000003c6b0	bl	0x55728 ; symbol stub for: _snprintf
000000000003c6b4	str	x22, [sp]
000000000003c6b8	mov	x1, x19
000000000003c6bc	mov	x2, x21
000000000003c6c0	bl	__mi_fprintf
000000000003c6c4	adr	x8, #0x220e6 ; literal pool for: " "
000000000003c6c8	nop
000000000003c6cc	str	x8, [sp]
000000000003c6d0	mov	x1, x19
000000000003c6d4	mov	x2, x21
000000000003c6d8	bl	__mi_fprintf
000000000003c6dc	ldp	x8, x9, [x20]
000000000003c6e0	adr	x10, #0x220e3 ; literal pool for: "  ok\n"
000000000003c6e4	nop
000000000003c6e8	adr	x11, #0x220c9 ; literal pool for: "  not all freed!\n"
000000000003c6ec	nop
000000000003c6f0	cmp	x8, x9
000000000003c6f4	csel	x2, x11, x10, gt
000000000003c6f8	b	0x3c938
000000000003c6fc	cmp	x9, #0x3ff
000000000003c700	b.gt	0x3c95c
000000000003c704	adr	x9, #0x220a6 ; literal pool for: " "
000000000003c708	nop
000000000003c70c	stp	x8, x9, [sp]
000000000003c710	adr	x2, #0x2206d ; literal pool for: "%d %s "
000000000003c714	nop
000000000003c718	b	0x3c9e8
000000000003c71c	cmp	x9, #0x100, lsl #12
000000000003c720	csel	x10, x25, x24, lt
000000000003c724	mov	w11, #0x100000
000000000003c728	mov	w12, #0x400
000000000003c72c	csel	x11, x12, x11, lt
000000000003c730	lsl	x12, x11, #10
000000000003c734	cmp	x9, x12
000000000003c738	csel	x9, x10, x23, lt
000000000003c73c	csel	x10, x11, x12, lt
000000000003c740	mov	w11, #0xcccd
000000000003c744	movk	w11, #0xcccc, lsl #16
000000000003c748	mul	x10, x10, x11
000000000003c74c	lsr	x10, x10, #35
000000000003c750	sdiv	x8, x8, x10
000000000003c754	mov	x10, #0x6666666666666666
000000000003c758	movk	x10, #0x6667
000000000003c75c	smulh	x10, x8, x10
000000000003c760	asr	x11, x10, #2
000000000003c764	add	x10, x11, x10, lsr #63
000000000003c768	mov	x11, #-0xa
000000000003c76c	madd	x8, x10, x11, x8
000000000003c770	cmp	x8, #0x0
000000000003c774	cneg	x8, x8, mi
000000000003c778	stp	x9, x22, [sp, #0x10]
000000000003c77c	stp	x10, x8, [sp]
000000000003c780	adr	x2, #0x2200c ; literal pool for: "%ld.%ld %s%s"
000000000003c784	nop
000000000003c788	add	x0, sp, #0x20
000000000003c78c	mov	w1, #0x20
000000000003c790	bl	0x55728 ; symbol stub for: _snprintf
000000000003c794	add	x8, sp, #0x20
000000000003c798	str	x8, [sp]
000000000003c79c	adr	x2, #0x22010 ; literal pool for: "%11s"
000000000003c7a0	nop
000000000003c7a4	mov	x1, x19
000000000003c7a8	bl	__mi_fprintf
000000000003c7ac	ldr	x8, [x20]
000000000003c7b0	cmp	x8, #0x0
000000000003c7b4	cneg	x9, x8, mi
000000000003c7b8	cmp	x9, #0x3ff
000000000003c7bc	b.gt	0x3c7d0
000000000003c7c0	stp	x8, x22, [sp]
000000000003c7c4	adr	x2, #0x21fb9 ; literal pool for: "%d %s "
000000000003c7c8	nop
000000000003c7cc	b	0x3c83c
000000000003c7d0	cmp	x9, #0x100, lsl #12
000000000003c7d4	csel	x10, x25, x24, lt
000000000003c7d8	mov	w11, #0x100000
000000000003c7dc	mov	w12, #0x400
000000000003c7e0	csel	x11, x12, x11, lt
000000000003c7e4	lsl	x12, x11, #10
000000000003c7e8	cmp	x9, x12
000000000003c7ec	csel	x9, x10, x23, lt
000000000003c7f0	csel	x10, x11, x12, lt
000000000003c7f4	mov	w11, #0xcccd
000000000003c7f8	movk	w11, #0xcccc, lsl #16
000000000003c7fc	mul	x10, x10, x11
000000000003c800	lsr	x10, x10, #35
000000000003c804	sdiv	x8, x8, x10
000000000003c808	mov	x10, #0x6666666666666666
000000000003c80c	movk	x10, #0x6667
000000000003c810	smulh	x10, x8, x10
000000000003c814	asr	x11, x10, #2
000000000003c818	add	x10, x11, x10, lsr #63
000000000003c81c	mov	x11, #-0xa
000000000003c820	madd	x8, x10, x11, x8
000000000003c824	cmp	x8, #0x0
000000000003c828	cneg	x8, x8, mi
000000000003c82c	stp	x9, x22, [sp, #0x10]
000000000003c830	stp	x10, x8, [sp]
000000000003c834	adr	x2, #0x21f58 ; literal pool for: "%ld.%ld %s%s"
000000000003c838	nop
000000000003c83c	add	x0, sp, #0x20
000000000003c840	mov	w1, #0x20
000000000003c844	bl	0x55728 ; symbol stub for: _snprintf
000000000003c848	add	x8, sp, #0x20
000000000003c84c	str	x8, [sp]
000000000003c850	adr	x21, #0x21f5c ; literal pool for: "%11s"
000000000003c854	nop
000000000003c858	mov	x1, x19
000000000003c85c	mov	x2, x21
000000000003c860	bl	__mi_fprintf
000000000003c864	adr	x8, #0x21f46 ; literal pool for: " "
000000000003c868	nop
000000000003c86c	str	x8, [sp]
000000000003c870	mov	x1, x19
000000000003c874	mov	x2, x21
000000000003c878	bl	__mi_fprintf
000000000003c87c	ldr	x8, [x20, #0x18]
000000000003c880	cmp	x8, #0x0
000000000003c884	cneg	x9, x8, mi
000000000003c888	cmp	x9, #0x3ff
000000000003c88c	b.gt	0x3c8a0
000000000003c890	stp	x8, x22, [sp]
000000000003c894	adr	x2, #0x21ee9 ; literal pool for: "%d %s "
000000000003c898	nop
000000000003c89c	b	0x3c90c
000000000003c8a0	cmp	x9, #0x100, lsl #12
000000000003c8a4	csel	x10, x25, x24, lt
000000000003c8a8	mov	w11, #0x100000
000000000003c8ac	mov	w12, #0x400
000000000003c8b0	csel	x11, x12, x11, lt
000000000003c8b4	lsl	x12, x11, #10
000000000003c8b8	cmp	x9, x12
000000000003c8bc	csel	x9, x10, x23, lt
000000000003c8c0	csel	x10, x11, x12, lt
000000000003c8c4	mov	w11, #0xcccd
000000000003c8c8	movk	w11, #0xcccc, lsl #16
000000000003c8cc	mul	x10, x10, x11
000000000003c8d0	lsr	x10, x10, #35
000000000003c8d4	sdiv	x8, x8, x10
000000000003c8d8	mov	x10, #0x6666666666666666
000000000003c8dc	movk	x10, #0x6667
000000000003c8e0	smulh	x10, x8, x10
000000000003c8e4	asr	x11, x10, #2
000000000003c8e8	add	x10, x11, x10, lsr #63
000000000003c8ec	mov	x11, #-0xa
000000000003c8f0	madd	x8, x10, x11, x8
000000000003c8f4	cmp	x8, #0x0
000000000003c8f8	cneg	x8, x8, mi
000000000003c8fc	stp	x9, x22, [sp, #0x10]
000000000003c900	stp	x10, x8, [sp]
000000000003c904	adr	x2, #0x21e88 ; literal pool for: "%ld.%ld %s%s"
000000000003c908	nop
000000000003c90c	add	x0, sp, #0x20
000000000003c910	mov	w1, #0x20
000000000003c914	bl	0x55728 ; symbol stub for: _snprintf
000000000003c918	add	x8, sp, #0x20
000000000003c91c	str	x8, [sp]
000000000003c920	adr	x2, #0x21e8c ; literal pool for: "%11s"
000000000003c924	nop
000000000003c928	mov	x1, x19
000000000003c92c	bl	__mi_fprintf
000000000003c930	adr	x2, #0x2234a ; literal pool for: "\n"
000000000003c934	nop
000000000003c938	mov	x1, x19
000000000003c93c	bl	__mi_fprintf
000000000003c940	ldp	x29, x30, [sp, #0x80]
000000000003c944	ldp	x20, x19, [sp, #0x70]
000000000003c948	ldp	x22, x21, [sp, #0x60]
000000000003c94c	ldp	x24, x23, [sp, #0x50]
000000000003c950	ldp	x26, x25, [sp, #0x40]
000000000003c954	add	sp, sp, #0x90
000000000003c958	ret
000000000003c95c	adr	x10, #0x21e2c ; literal pool for: "m"
000000000003c960	nop
000000000003c964	adr	x11, #0x21e22 ; literal pool for: "k"
000000000003c968	nop
000000000003c96c	cmp	x9, #0x100, lsl #12
000000000003c970	csel	x10, x11, x10, lt
000000000003c974	mov	w11, #0x100000
000000000003c978	mov	w12, #0x400
000000000003c97c	csel	x11, x12, x11, lt
000000000003c980	lsl	x12, x11, #10
000000000003c984	adr	x13, #0x21e06 ; literal pool for: "g"
000000000003c988	nop
000000000003c98c	cmp	x9, x12
000000000003c990	csel	x9, x10, x13, lt
000000000003c994	csel	x10, x11, x12, lt
000000000003c998	mov	w11, #0xcccd
000000000003c99c	movk	w11, #0xcccc, lsl #16
000000000003c9a0	mul	x10, x10, x11
000000000003c9a4	lsr	x10, x10, #35
000000000003c9a8	sdiv	x8, x8, x10
000000000003c9ac	mov	x10, #0x6666666666666666
000000000003c9b0	movk	x10, #0x6667
000000000003c9b4	smulh	x10, x8, x10
000000000003c9b8	asr	x11, x10, #2
000000000003c9bc	add	x10, x11, x10, lsr #63
000000000003c9c0	mov	x11, #-0xa
000000000003c9c4	madd	x8, x10, x11, x8
000000000003c9c8	cmp	x8, #0x0
000000000003c9cc	cneg	x8, x8, mi
000000000003c9d0	adr	x11, #0x21dda ; literal pool for: " "
000000000003c9d4	nop
000000000003c9d8	stp	x9, x11, [sp, #0x10]
000000000003c9dc	stp	x10, x8, [sp]
000000000003c9e0	adr	x2, #0x21dac ; literal pool for: "%ld.%ld %s%s"
000000000003c9e4	nop
000000000003c9e8	add	x0, sp, #0x20
000000000003c9ec	mov	w1, #0x20
000000000003c9f0	bl	0x55728 ; symbol stub for: _snprintf
000000000003c9f4	add	x8, sp, #0x20
000000000003c9f8	str	x8, [sp]
000000000003c9fc	adr	x2, #0x21db0 ; literal pool for: "%11s"
000000000003ca00	nop
000000000003ca04	mov	x1, x19
000000000003ca08	bl	__mi_fprintf
000000000003ca0c	ldr	x8, [x20]
000000000003ca10	cmp	x8, #0x0
000000000003ca14	cneg	x9, x8, mi
000000000003ca18	cmp	x9, #0x3ff
000000000003ca1c	b.gt	0x3ca38
000000000003ca20	adr	x9, #0x21d8a ; literal pool for: " "
000000000003ca24	nop
000000000003ca28	stp	x8, x9, [sp]
000000000003ca2c	adr	x2, #0x21d51 ; literal pool for: "%d %s "
000000000003ca30	nop
000000000003ca34	b	0x3cac4
000000000003ca38	adr	x10, #0x21d50 ; literal pool for: "m"
000000000003ca3c	nop
000000000003ca40	adr	x11, #0x21d46 ; literal pool for: "k"
000000000003ca44	nop
000000000003ca48	cmp	x9, #0x100, lsl #12
000000000003ca4c	csel	x10, x11, x10, lt
000000000003ca50	mov	w11, #0x100000
000000000003ca54	mov	w12, #0x400
000000000003ca58	csel	x11, x12, x11, lt
000000000003ca5c	lsl	x12, x11, #10
000000000003ca60	adr	x13, #0x21d2a ; literal pool for: "g"
000000000003ca64	nop
000000000003ca68	cmp	x9, x12
000000000003ca6c	csel	x9, x10, x13, lt
000000000003ca70	csel	x10, x11, x12, lt
000000000003ca74	mov	w11, #0xcccd
000000000003ca78	movk	w11, #0xcccc, lsl #16
000000000003ca7c	mul	x10, x10, x11
000000000003ca80	lsr	x10, x10, #35
000000000003ca84	sdiv	x8, x8, x10
000000000003ca88	mov	x10, #0x6666666666666666
000000000003ca8c	movk	x10, #0x6667
000000000003ca90	smulh	x10, x8, x10
000000000003ca94	asr	x11, x10, #2
000000000003ca98	add	x10, x11, x10, lsr #63
000000000003ca9c	mov	x11, #-0xa
000000000003caa0	madd	x8, x10, x11, x8
000000000003caa4	cmp	x8, #0x0
000000000003caa8	cneg	x8, x8, mi
000000000003caac	adr	x11, #0x21cfe ; literal pool for: " "
000000000003cab0	nop
000000000003cab4	stp	x9, x11, [sp, #0x10]
000000000003cab8	stp	x10, x8, [sp]
000000000003cabc	adr	x2, #0x21cd0 ; literal pool for: "%ld.%ld %s%s"
000000000003cac0	nop
000000000003cac4	add	x0, sp, #0x20
000000000003cac8	mov	w1, #0x20
000000000003cacc	bl	0x55728 ; symbol stub for: _snprintf
000000000003cad0	add	x8, sp, #0x20
000000000003cad4	str	x8, [sp]
000000000003cad8	adr	x2, #0x21cd4 ; literal pool for: "%11s"
000000000003cadc	nop
000000000003cae0	mov	x1, x19
000000000003cae4	bl	__mi_fprintf
000000000003cae8	ldr	x8, [x20, #0x8]
000000000003caec	cmp	x8, #0x0
000000000003caf0	cneg	x9, x8, mi
000000000003caf4	cmp	x9, #0x3ff
000000000003caf8	b.gt	0x3cb14
000000000003cafc	adr	x9, #0x21cae ; literal pool for: " "
000000000003cb00	nop
000000000003cb04	stp	x8, x9, [sp]
000000000003cb08	adr	x2, #0x21c75 ; literal pool for: "%d %s "
000000000003cb0c	nop
000000000003cb10	b	0x3cba0
000000000003cb14	adr	x10, #0x21c74 ; literal pool for: "m"
000000000003cb18	nop
000000000003cb1c	adr	x11, #0x21c6a ; literal pool for: "k"
000000000003cb20	nop
000000000003cb24	cmp	x9, #0x100, lsl #12
000000000003cb28	csel	x10, x11, x10, lt
000000000003cb2c	mov	w11, #0x100000
000000000003cb30	mov	w12, #0x400
000000000003cb34	csel	x11, x12, x11, lt
000000000003cb38	lsl	x12, x11, #10
000000000003cb3c	adr	x13, #0x21c4e ; literal pool for: "g"
000000000003cb40	nop
000000000003cb44	cmp	x9, x12
000000000003cb48	csel	x9, x10, x13, lt
000000000003cb4c	csel	x10, x11, x12, lt
000000000003cb50	mov	w11, #0xcccd
000000000003cb54	movk	w11, #0xcccc, lsl #16
000000000003cb58	mul	x10, x10, x11
000000000003cb5c	lsr	x10, x10, #35
000000000003cb60	sdiv	x8, x8, x10
000000000003cb64	mov	x10, #0x6666666666666666
000000000003cb68	movk	x10, #0x6667
000000000003cb6c	smulh	x10, x8, x10
000000000003cb70	asr	x11, x10, #2
000000000003cb74	add	x10, x11, x10, lsr #63
000000000003cb78	mov	x11, #-0xa
000000000003cb7c	madd	x8, x10, x11, x8
000000000003cb80	cmp	x8, #0x0
000000000003cb84	cneg	x8, x8, mi
000000000003cb88	adr	x11, #0x21c22 ; literal pool for: " "
000000000003cb8c	nop
000000000003cb90	stp	x9, x11, [sp, #0x10]
000000000003cb94	stp	x10, x8, [sp]
000000000003cb98	adr	x2, #0x21bf4 ; literal pool for: "%ld.%ld %s%s"
000000000003cb9c	nop
000000000003cba0	add	x0, sp, #0x20
000000000003cba4	mov	w1, #0x20
000000000003cba8	bl	0x55728 ; symbol stub for: _snprintf
000000000003cbac	add	x8, sp, #0x20
000000000003cbb0	str	x8, [sp]
000000000003cbb4	adr	x2, #0x21bf8 ; literal pool for: "%11s"
000000000003cbb8	nop
000000000003cbbc	mov	x1, x19
000000000003cbc0	bl	__mi_fprintf
000000000003cbc4	ldr	x8, [x20, #0x18]
000000000003cbc8	cmp	x8, #0x0
000000000003cbcc	cneg	x9, x8, mi
000000000003cbd0	cmp	x9, #0x3ff
000000000003cbd4	b.gt	0x3cbf0
000000000003cbd8	adr	x9, #0x21bd2 ; literal pool for: " "
000000000003cbdc	nop
000000000003cbe0	stp	x8, x9, [sp]
000000000003cbe4	adr	x2, #0x21b99 ; literal pool for: "%d %s "
000000000003cbe8	nop
000000000003cbec	b	0x3cc7c
000000000003cbf0	adr	x10, #0x21b98 ; literal pool for: "m"
000000000003cbf4	nop
000000000003cbf8	adr	x11, #0x21b8e ; literal pool for: "k"
000000000003cbfc	nop
000000000003cc00	cmp	x9, #0x100, lsl #12
000000000003cc04	csel	x10, x11, x10, lt
000000000003cc08	mov	w11, #0x100000
000000000003cc0c	mov	w12, #0x400
000000000003cc10	csel	x11, x12, x11, lt
000000000003cc14	lsl	x12, x11, #10
000000000003cc18	adr	x13, #0x21b72 ; literal pool for: "g"
000000000003cc1c	nop
000000000003cc20	cmp	x9, x12
000000000003cc24	csel	x9, x10, x13, lt
000000000003cc28	csel	x10, x11, x12, lt
000000000003cc2c	mov	w11, #0xcccd
000000000003cc30	movk	w11, #0xcccc, lsl #16
000000000003cc34	mul	x10, x10, x11
000000000003cc38	lsr	x10, x10, #35
000000000003cc3c	sdiv	x8, x8, x10
000000000003cc40	mov	x10, #0x6666666666666666
000000000003cc44	movk	x10, #0x6667
000000000003cc48	smulh	x10, x8, x10
000000000003cc4c	asr	x11, x10, #2
000000000003cc50	add	x10, x11, x10, lsr #63
000000000003cc54	mov	x11, #-0xa
000000000003cc58	madd	x8, x10, x11, x8
000000000003cc5c	cmp	x8, #0x0
000000000003cc60	cneg	x8, x8, mi
000000000003cc64	adr	x11, #0x21b46 ; literal pool for: " "
000000000003cc68	nop
000000000003cc6c	stp	x9, x11, [sp, #0x10]
000000000003cc70	stp	x10, x8, [sp]
000000000003cc74	adr	x2, #0x21b18 ; literal pool for: "%ld.%ld %s%s"
000000000003cc78	nop
000000000003cc7c	add	x0, sp, #0x20
000000000003cc80	mov	w1, #0x20
000000000003cc84	bl	0x55728 ; symbol stub for: _snprintf
000000000003cc88	add	x8, sp, #0x20
000000000003cc8c	str	x8, [sp]
000000000003cc90	adr	x2, #0x21b1c ; literal pool for: "%11s"
000000000003cc94	nop
000000000003cc98	mov	x1, x19
000000000003cc9c	bl	__mi_fprintf
000000000003cca0	adr	x8, #0x21ce7 ; literal pool for: ""
000000000003cca4	nop
000000000003cca8	str	x8, [sp]
000000000003ccac	adr	x2, #0x21b1d ; literal pool for: "%22s"
000000000003ccb0	nop
000000000003ccb4	mov	x1, x19
000000000003ccb8	b	0x3c6d8
_mi_stat_counter_print:
000000000003ccbc	sub	sp, sp, #0x60
000000000003ccc0	stp	x20, x19, [sp, #0x40]
000000000003ccc4	stp	x29, x30, [sp, #0x50]
000000000003ccc8	add	x29, sp, #0x50
000000000003cccc	mov	x19, x2
000000000003ccd0	mov	x20, x0
000000000003ccd4	str	x1, [sp]
000000000003ccd8	adr	x2, #0x21acc ; literal pool for: "%10s:"
000000000003ccdc	nop
000000000003cce0	mov	x1, x19
000000000003cce4	bl	__mi_fprintf
000000000003cce8	ldr	x8, [x20]
000000000003ccec	cmp	x8, #0x0
000000000003ccf0	cneg	x9, x8, mi
000000000003ccf4	cmp	x9, #0x3ff
000000000003ccf8	b.gt	0x3cd14
000000000003ccfc	adr	x9, #0x21aae ; literal pool for: " "
000000000003cd00	nop
000000000003cd04	stp	x8, x9, [sp]
000000000003cd08	adr	x2, #0x21a75 ; literal pool for: "%d %s "
000000000003cd0c	nop
000000000003cd10	b	0x3cda0
000000000003cd14	adr	x10, #0x21a74 ; literal pool for: "m"
000000000003cd18	nop
000000000003cd1c	adr	x11, #0x21a6a ; literal pool for: "k"
000000000003cd20	nop
000000000003cd24	cmp	x9, #0x100, lsl #12
000000000003cd28	csel	x10, x11, x10, lt
000000000003cd2c	mov	w11, #0x100000
000000000003cd30	mov	w12, #0x400
000000000003cd34	csel	x11, x12, x11, lt
000000000003cd38	lsl	x12, x11, #10
000000000003cd3c	adr	x13, #0x21a4e ; literal pool for: "g"
000000000003cd40	nop
000000000003cd44	cmp	x9, x12
000000000003cd48	csel	x9, x10, x13, lt
000000000003cd4c	csel	x10, x11, x12, lt
000000000003cd50	mov	w11, #0xcccd
000000000003cd54	movk	w11, #0xcccc, lsl #16
000000000003cd58	mul	x10, x10, x11
000000000003cd5c	lsr	x10, x10, #35
000000000003cd60	sdiv	x8, x8, x10
000000000003cd64	mov	x10, #0x6666666666666666
000000000003cd68	movk	x10, #0x6667
000000000003cd6c	smulh	x10, x8, x10
000000000003cd70	asr	x11, x10, #2
000000000003cd74	add	x10, x11, x10, lsr #63
000000000003cd78	mov	x11, #-0xa
000000000003cd7c	madd	x8, x10, x11, x8
000000000003cd80	cmp	x8, #0x0
000000000003cd84	cneg	x8, x8, mi
000000000003cd88	adr	x11, #0x21a22 ; literal pool for: " "
000000000003cd8c	nop
000000000003cd90	stp	x9, x11, [sp, #0x10]
000000000003cd94	stp	x10, x8, [sp]
000000000003cd98	adr	x2, #0x219f4 ; literal pool for: "%ld.%ld %s%s"
000000000003cd9c	nop
000000000003cda0	add	x0, sp, #0x20
000000000003cda4	mov	w1, #0x20
000000000003cda8	bl	0x55728 ; symbol stub for: _snprintf
000000000003cdac	add	x8, sp, #0x20
000000000003cdb0	str	x8, [sp]
000000000003cdb4	adr	x2, #0x219f8 ; literal pool for: "%11s"
000000000003cdb8	nop
000000000003cdbc	mov	x1, x19
000000000003cdc0	bl	__mi_fprintf
000000000003cdc4	adr	x2, #0x21eb6 ; literal pool for: "\n"
000000000003cdc8	nop
000000000003cdcc	mov	x1, x19
000000000003cdd0	bl	__mi_fprintf
000000000003cdd4	ldp	x29, x30, [sp, #0x50]
000000000003cdd8	ldp	x20, x19, [sp, #0x40]
000000000003cddc	add	sp, sp, #0x60
000000000003cde0	ret
_chacha_block:
000000000003cde4	stp	x20, x19, [sp, #-0x10]!
000000000003cde8	ldp	w15, w16, [x0]
000000000003cdec	ldp	w17, w2, [x0, #0x8]
000000000003cdf0	ldp	w7, w12, [x0, #0x10]
000000000003cdf4	ldp	w13, w14, [x0, #0x18]
000000000003cdf8	ldp	w5, w6, [x0, #0x20]
000000000003cdfc	ldp	w9, w10, [x0, #0x28]
000000000003ce00	ldp	w1, w3, [x0, #0x30]
000000000003ce04	mov	x11, #-0x2
000000000003ce08	ldp	w4, w8, [x0, #0x38]
000000000003ce0c	add	w15, w15, w7
000000000003ce10	eor	w1, w1, w15
000000000003ce14	ror	w1, w1, #0x10
000000000003ce18	add	w5, w1, w5
000000000003ce1c	eor	w7, w5, w7
000000000003ce20	ror	w7, w7, #0x14
000000000003ce24	add	w15, w7, w15
000000000003ce28	eor	w1, w15, w1
000000000003ce2c	ror	w1, w1, #0x18
000000000003ce30	add	w5, w1, w5
000000000003ce34	eor	w7, w5, w7
000000000003ce38	ror	w7, w7, #0x19
000000000003ce3c	add	w16, w16, w12
000000000003ce40	eor	w3, w3, w16
000000000003ce44	ror	w3, w3, #0x10
000000000003ce48	add	w6, w3, w6
000000000003ce4c	eor	w12, w6, w12
000000000003ce50	ror	w12, w12, #0x14
000000000003ce54	add	w16, w12, w16
000000000003ce58	eor	w3, w16, w3
000000000003ce5c	ror	w3, w3, #0x18
000000000003ce60	add	w6, w3, w6
000000000003ce64	eor	w12, w6, w12
000000000003ce68	ror	w12, w12, #0x19
000000000003ce6c	add	w17, w17, w13
000000000003ce70	eor	w4, w4, w17
000000000003ce74	ror	w4, w4, #0x10
000000000003ce78	add	w9, w4, w9
000000000003ce7c	eor	w13, w9, w13
000000000003ce80	ror	w13, w13, #0x14
000000000003ce84	add	w17, w13, w17
000000000003ce88	eor	w4, w17, w4
000000000003ce8c	ror	w4, w4, #0x18
000000000003ce90	add	w9, w4, w9
000000000003ce94	eor	w13, w9, w13
000000000003ce98	ror	w13, w13, #0x19
000000000003ce9c	add	w2, w2, w14
000000000003cea0	eor	w8, w8, w2
000000000003cea4	ror	w8, w8, #0x10
000000000003cea8	add	w10, w8, w10
000000000003ceac	eor	w14, w10, w14
000000000003ceb0	ror	w14, w14, #0x14
000000000003ceb4	add	w2, w14, w2
000000000003ceb8	eor	w8, w2, w8
000000000003cebc	ror	w8, w8, #0x18
000000000003cec0	add	w10, w8, w10
000000000003cec4	eor	w14, w10, w14
000000000003cec8	ror	w14, w14, #0x19
000000000003cecc	add	w15, w12, w15
000000000003ced0	eor	w8, w8, w15
000000000003ced4	ror	w8, w8, #0x10
000000000003ced8	add	w9, w8, w9
000000000003cedc	eor	w12, w9, w12
000000000003cee0	ror	w12, w12, #0x14
000000000003cee4	add	w15, w12, w15
000000000003cee8	eor	w8, w15, w8
000000000003ceec	ror	w8, w8, #0x18
000000000003cef0	add	w9, w8, w9
000000000003cef4	eor	w12, w9, w12
000000000003cef8	ror	w12, w12, #0x19
000000000003cefc	add	w16, w13, w16
000000000003cf00	eor	w1, w16, w1
000000000003cf04	ror	w1, w1, #0x10
000000000003cf08	add	w10, w10, w1
000000000003cf0c	eor	w13, w10, w13
000000000003cf10	ror	w13, w13, #0x14
000000000003cf14	add	w16, w13, w16
000000000003cf18	eor	w1, w16, w1
000000000003cf1c	ror	w1, w1, #0x18
000000000003cf20	add	w10, w1, w10
000000000003cf24	eor	w13, w10, w13
000000000003cf28	ror	w13, w13, #0x19
000000000003cf2c	add	w17, w14, w17
000000000003cf30	eor	w3, w17, w3
000000000003cf34	ror	w3, w3, #0x10
000000000003cf38	add	w5, w3, w5
000000000003cf3c	eor	w14, w5, w14
000000000003cf40	ror	w14, w14, #0x14
000000000003cf44	add	w17, w14, w17
000000000003cf48	eor	w3, w17, w3
000000000003cf4c	ror	w3, w3, #0x18
000000000003cf50	add	w5, w3, w5
000000000003cf54	eor	w14, w5, w14
000000000003cf58	ror	w14, w14, #0x19
000000000003cf5c	add	w2, w2, w7
000000000003cf60	eor	w4, w2, w4
000000000003cf64	ror	w4, w4, #0x10
000000000003cf68	add	w6, w4, w6
000000000003cf6c	eor	w7, w6, w7
000000000003cf70	ror	w7, w7, #0x14
000000000003cf74	add	w2, w7, w2
000000000003cf78	eor	w4, w2, w4
000000000003cf7c	ror	w4, w4, #0x18
000000000003cf80	add	w6, w4, w6
000000000003cf84	eor	w7, w6, w7
000000000003cf88	ror	w7, w7, #0x19
000000000003cf8c	add	x11, x11, #0x2
000000000003cf90	cmp	x11, #0x12
000000000003cf94	b.lo	0x3ce0c
000000000003cf98	ldp	w11, w19, [x0]
000000000003cf9c	add	w11, w11, w15
000000000003cfa0	add	w15, w19, w16
000000000003cfa4	stp	w11, w15, [x0, #0x40]
000000000003cfa8	ldp	w11, w15, [x0, #0x8]
000000000003cfac	add	w11, w11, w17
000000000003cfb0	add	w15, w15, w2
000000000003cfb4	stp	w11, w15, [x0, #0x48]
000000000003cfb8	ldp	w11, w15, [x0, #0x10]
000000000003cfbc	add	w11, w11, w7
000000000003cfc0	add	w12, w15, w12
000000000003cfc4	stp	w11, w12, [x0, #0x50]
000000000003cfc8	ldp	w11, w12, [x0, #0x18]
000000000003cfcc	add	w11, w11, w13
000000000003cfd0	add	w12, w12, w14
000000000003cfd4	stp	w11, w12, [x0, #0x58]
000000000003cfd8	ldp	w11, w12, [x0, #0x20]
000000000003cfdc	add	w11, w11, w5
000000000003cfe0	add	w12, w12, w6
000000000003cfe4	stp	w11, w12, [x0, #0x60]
000000000003cfe8	ldp	w11, w12, [x0, #0x28]
000000000003cfec	add	w9, w11, w9
000000000003cff0	add	w10, w12, w10
000000000003cff4	stp	w9, w10, [x0, #0x68]
000000000003cff8	ldp	w11, w10, [x0, #0x30]
000000000003cffc	add	w9, w11, w1
000000000003d000	add	w12, w10, w3
000000000003d004	stp	w9, w12, [x0, #0x70]
000000000003d008	ldp	w9, w12, [x0, #0x38]
000000000003d00c	add	w13, w9, w4
000000000003d010	add	w8, w12, w8
000000000003d014	stp	w13, w8, [x0, #0x78]
000000000003d018	mov	w8, #0x10
000000000003d01c	str	w8, [x0, #0x80]
000000000003d020	adds	w8, w11, #0x1
000000000003d024	str	w8, [x0, #0x30]
000000000003d028	b.lo	0x3d040
000000000003d02c	adds	w8, w10, #0x1
000000000003d030	str	w8, [x0, #0x34]
000000000003d034	b.lo	0x3d040
000000000003d038	add	w8, w9, #0x1
000000000003d03c	str	w8, [x0, #0x38]
000000000003d040	ldp	x20, x19, [sp], #0x10
000000000003d044	ret
__mi_malloc_generic:
000000000003d048	sub	sp, sp, #0x70
000000000003d04c	stp	x28, x27, [sp, #0x10]
000000000003d050	stp	x26, x25, [sp, #0x20]
000000000003d054	stp	x24, x23, [sp, #0x30]
000000000003d058	stp	x22, x21, [sp, #0x40]
000000000003d05c	stp	x20, x19, [sp, #0x50]
000000000003d060	stp	x29, x30, [sp, #0x60]
000000000003d064	add	x29, sp, #0x60
000000000003d068	mov	x19, x1
000000000003d06c	mov	x21, x0
000000000003d070	adr	x22, #0x33bd0
000000000003d074	nop
000000000003d078	adrp	x20, 61 ; 0x7a000
000000000003d07c	add	x20, x20, #0x2d8
000000000003d080	ldr	x23, [x20]
000000000003d084	adrp	x24, 87 ; 0x94000
000000000003d088	mov	w25, #0x1
000000000003d08c	adr	x26, #0x5743c
000000000003d090	nop
000000000003d094	cmp	x21, x22
000000000003d098	b.eq	0x3d144
000000000003d09c	ldr	x8, [x21]
000000000003d0a0	ldr	x9, [x8]
000000000003d0a4	add	x1, x9, #0x1
000000000003d0a8	str	x1, [x8]
000000000003d0ac	ldr	x9, [x24, #0x4c8]
000000000003d0b0	cbz	x9, 0x3d0dc
000000000003d0b4	ldrb	w9, [x8, #0x8]
000000000003d0b8	cbnz	w9, 0x3d0dc
000000000003d0bc	strb	w25, [x8, #0x8]
000000000003d0c0	mov	x8, x26
000000000003d0c4	ldr	x9, [x8], #0x8
000000000003d0c8	ldr	x2, [x8]
000000000003d0cc	mov	w0, #0x0
000000000003d0d0	blr	x9
000000000003d0d4	ldr	x8, [x21]
000000000003d0d8	strb	wzr, [x8, #0x8]
000000000003d0dc	add	x8, x21, #0xb18
000000000003d0e0	ldr	x9, [x21, #0xb18]
000000000003d0e4	b	0x3d0f4
000000000003d0e8	clrex
000000000003d0ec	mov	w10, #0x0
000000000003d0f0	cbnz	w10, 0x3d118
000000000003d0f4	cbz	x9, 0x3d128
000000000003d0f8	mov	x0, x9
000000000003d0fc	ldaxr	x9, [x8]
000000000003d100	cmp	x9, x0
000000000003d104	b.ne	0x3d0e8
000000000003d108	stlxr	w10, xzr, [x8]
000000000003d10c	cbnz	w10, 0x3d0ec
000000000003d110	mov	w10, #0x1
000000000003d114	cbz	w10, 0x3d0f4
000000000003d118	ldr	x27, [x0]
000000000003d11c	bl	__mi_free_delayed_block
000000000003d120	mov	x0, x27
000000000003d124	cbnz	x27, 0x3d118
000000000003d128	mov	x0, x21
000000000003d12c	mov	x1, x19
000000000003d130	bl	_mi_find_page
000000000003d134	cbz	x0, 0x3d160
000000000003d138	ldr	x8, [x0, #0x8]
000000000003d13c	cbnz	x8, 0x3d198
000000000003d140	b	0x3d094
000000000003d144	bl	_mi_thread_init
000000000003d148	mov	x0, x20
000000000003d14c	blr	x23
000000000003d150	ldr	x21, [x0]
000000000003d154	cmp	x21, x22
000000000003d158	b.ne	0x3d09c
000000000003d15c	b	0x3d1d0
000000000003d160	mov	x0, x21
000000000003d164	mov	w1, #0x1
000000000003d168	bl	_mi_heap_collect_ex
000000000003d16c	mov	x0, x21
000000000003d170	mov	x1, x19
000000000003d174	bl	_mi_find_page
000000000003d178	cbnz	x0, 0x3d138
000000000003d17c	str	x19, [sp]
000000000003d180	adr	x1, #0x2164e ; literal pool for: "unable to allocate memory (%zu bytes)\n"
000000000003d184	nop
000000000003d188	mov	w0, #0xc
000000000003d18c	bl	__mi_error_message
000000000003d190	mov	x8, #0x0
000000000003d194	b	0x3d1ac
000000000003d198	ldr	w9, [x0, #0x10]
000000000003d19c	add	w9, w9, #0x1
000000000003d1a0	str	w9, [x0, #0x10]
000000000003d1a4	ldr	x9, [x8]
000000000003d1a8	str	x9, [x0, #0x8]
000000000003d1ac	mov	x0, x8
000000000003d1b0	ldp	x29, x30, [sp, #0x60]
000000000003d1b4	ldp	x20, x19, [sp, #0x50]
000000000003d1b8	ldp	x22, x21, [sp, #0x40]
000000000003d1bc	ldp	x24, x23, [sp, #0x30]
000000000003d1c0	ldp	x26, x25, [sp, #0x20]
000000000003d1c4	ldp	x28, x27, [sp, #0x10]
000000000003d1c8	add	sp, sp, #0x70
000000000003d1cc	ret
000000000003d1d0	mov	x8, #0x0
000000000003d1d4	b	0x3d1ac
_mi_find_page:
000000000003d1d8	sub	sp, sp, #0x40
000000000003d1dc	stp	x22, x21, [sp, #0x10]
000000000003d1e0	stp	x20, x19, [sp, #0x20]
000000000003d1e4	stp	x29, x30, [sp, #0x30]
000000000003d1e8	add	x29, sp, #0x30
000000000003d1ec	mov	x20, x0
000000000003d1f0	cmp	x1, #0x200, lsl #12
000000000003d1f4	b.hi	0x3d3a8
000000000003d1f8	cmp	x1, #0x9
000000000003d1fc	b.hs	0x3d21c
000000000003d200	mov	w8, #0x1
000000000003d204	and	x8, x8, #0xff
000000000003d208	mov	w9, #0x18
000000000003d20c	madd	x21, x8, x9, x20
000000000003d210	ldr	x19, [x21, #0x410]
000000000003d214	cbnz	x19, 0x3d288
000000000003d218	b	0x3d388
000000000003d21c	add	x8, x1, #0x7
000000000003d220	lsr	x8, x8, #3
000000000003d224	cmp	x1, #0x40
000000000003d228	b.hi	0x3d24c
000000000003d22c	add	w8, w8, #0x1
000000000003d230	and	x8, x8, #0xfe
000000000003d234	and	x8, x8, #0xff
000000000003d238	mov	w9, #0x18
000000000003d23c	madd	x21, x8, x9, x20
000000000003d240	ldr	x19, [x21, #0x410]
000000000003d244	cbnz	x19, 0x3d288
000000000003d248	b	0x3d388
000000000003d24c	sub	x8, x8, #0x1
000000000003d250	clz	x9, x8
000000000003d254	mov	w10, #0x3f
000000000003d258	sub	w9, w10, w9
000000000003d25c	and	w9, w9, #0xff
000000000003d260	sub	w10, w9, #0x2
000000000003d264	lsr	x8, x8, x10
000000000003d268	and	w8, w8, #0x3
000000000003d26c	bfi	w8, w9, #2, #8
000000000003d270	add	w8, w8, #0xfd
000000000003d274	and	x8, x8, #0xff
000000000003d278	mov	w9, #0x18
000000000003d27c	madd	x21, x8, x9, x20
000000000003d280	ldr	x19, [x21, #0x410]
000000000003d284	cbz	x19, 0x3d388
000000000003d288	ldr	x8, [x19, #0x20]
000000000003d28c	cmp	x8, #0x4
000000000003d290	b.lo	0x3d314
000000000003d294	add	x8, x19, #0x20
000000000003d298	ldr	x9, [x8]
000000000003d29c	b	0x3d2ac
000000000003d2a0	clrex
000000000003d2a4	mov	w11, #0x0
000000000003d2a8	cbnz	w11, 0x3d2d0
000000000003d2ac	mov	x10, x9
000000000003d2b0	ldaxr	x9, [x8]
000000000003d2b4	cmp	x9, x10
000000000003d2b8	b.ne	0x3d2a0
000000000003d2bc	and	x11, x10, #0x3
000000000003d2c0	stlxr	w12, x11, [x8]
000000000003d2c4	cbnz	w12, 0x3d2a4
000000000003d2c8	mov	w11, #0x1
000000000003d2cc	cbz	w11, 0x3d2ac
000000000003d2d0	ands	x8, x10, #0xfffffffffffffffc
000000000003d2d4	b.eq	0x3d314
000000000003d2d8	mov	w9, #0x0
000000000003d2dc	ldrh	w10, [x19, #0x2]
000000000003d2e0	mov	x12, x8
000000000003d2e4	mov	x11, x12
000000000003d2e8	add	w9, w9, #0x1
000000000003d2ec	ldr	x12, [x12]
000000000003d2f0	cmp	w9, w10
000000000003d2f4	ccmp	x12, #0x0, #0x4, ls
000000000003d2f8	b.ne	0x3d2e4
000000000003d2fc	cmp	w9, w10
000000000003d300	b.ls	0x3d33c
000000000003d304	adr	x1, #0x212d1 ; literal pool for: "corrupted thread-free list\n"
000000000003d308	nop
000000000003d30c	mov	w0, #0xe
000000000003d310	bl	__mi_error_message
000000000003d314	ldr	x8, [x19, #0x18]
000000000003d318	ldr	x9, [x19, #0x8]
000000000003d31c	cbz	x8, 0x3d360
000000000003d320	cbnz	x9, 0x3d364
000000000003d324	str	x8, [x19, #0x8]
000000000003d328	str	xzr, [x19, #0x18]
000000000003d32c	ldrb	w8, [x19, #0x7]
000000000003d330	and	w8, w8, #0xfe
000000000003d334	strb	w8, [x19, #0x7]
000000000003d338	b	0x3d364
000000000003d33c	ldr	x10, [x19, #0x18]
000000000003d340	str	x10, [x11]
000000000003d344	str	x8, [x19, #0x18]
000000000003d348	ldr	w8, [x19, #0x10]
000000000003d34c	sub	w8, w8, w9
000000000003d350	str	w8, [x19, #0x10]
000000000003d354	ldr	x8, [x19, #0x18]
000000000003d358	ldr	x9, [x19, #0x8]
000000000003d35c	cbnz	x8, 0x3d320
000000000003d360	cbz	x9, 0x3d388
000000000003d364	ldrb	w8, [x19, #0x7]
000000000003d368	and	w8, w8, #0x1
000000000003d36c	strb	w8, [x19, #0x7]
000000000003d370	mov	x0, x19
000000000003d374	ldp	x29, x30, [sp, #0x30]
000000000003d378	ldp	x20, x19, [sp, #0x20]
000000000003d37c	ldp	x22, x21, [sp, #0x10]
000000000003d380	add	sp, sp, #0x40
000000000003d384	ret
000000000003d388	add	x1, x21, #0x410
000000000003d38c	mov	x0, x20
000000000003d390	mov	w2, #0x1
000000000003d394	ldp	x29, x30, [sp, #0x30]
000000000003d398	ldp	x20, x19, [sp, #0x20]
000000000003d39c	ldp	x22, x21, [sp, #0x10]
000000000003d3a0	add	sp, sp, #0x40
000000000003d3a4	b	_mi_page_queue_find_free_ex
000000000003d3a8	tbnz	x1, #0x3f, 0x3d508
000000000003d3ac	lsr	x8, x1, #25
000000000003d3b0	cmp	x8, #0x0
000000000003d3b4	mov	w8, #0x400000
000000000003d3b8	mov	w9, #0x100000
000000000003d3bc	csel	x8, x9, x8, eq
000000000003d3c0	cmp	x1, #0x800, lsl #12
000000000003d3c4	mov	w9, #0x40000
000000000003d3c8	csel	x8, x9, x8, lo
000000000003d3cc	mvn	x9, x8
000000000003d3d0	add	x10, x1, x8
000000000003d3d4	sub	x10, x10, #0x1
000000000003d3d8	neg	x8, x8
000000000003d3dc	and	x8, x10, x8
000000000003d3e0	cmp	x9, x1
000000000003d3e4	csel	x2, x8, x1, hi
000000000003d3e8	mov	x0, x20
000000000003d3ec	mov	x1, #0x0
000000000003d3f0	bl	_mi_page_fresh_alloc
000000000003d3f4	mov	x19, x0
000000000003d3f8	cbz	x0, 0x3d370
000000000003d3fc	ldr	w8, [x19, #0x14]
000000000003d400	ubfx	x9, x8, #26, #6
000000000003d404	cbnz	w9, 0x3d538
000000000003d408	mov	x1, x8
000000000003d40c	add	x8, x19, #0x28
000000000003d410	stlr	xzr, [x8]
000000000003d414	ldr	x8, [x20]
000000000003d418	mov	w9, #0x1
000000000003d41c	movk	w9, #0x400, lsl #16
000000000003d420	cmp	x1, x9
000000000003d424	b.lo	0x3d480
000000000003d428	add	x0, x8, #0x210
000000000003d42c	bl	__mi_stat_increase
000000000003d430	ldr	x9, [x20]
000000000003d434	add	x8, x9, #0x2e0
000000000003d438	adr	x10, #0x57448
000000000003d43c	nop
000000000003d440	add	x9, x9, #0x2e8
000000000003d444	cmp	x8, x10
000000000003d448	b.lo	0x3d4d8
000000000003d44c	adr	x10, #0x57674
000000000003d450	nop
000000000003d454	cmp	x8, x10
000000000003d458	b.hs	0x3d4d8
000000000003d45c	ldxr	x10, [x9]
000000000003d460	add	x10, x10, #0x1
000000000003d464	stxr	w11, x10, [x9]
000000000003d468	cbnz	w11, 0x3d45c
000000000003d46c	ldxr	x9, [x8]
000000000003d470	add	x9, x9, #0x1
000000000003d474	stxr	w10, x9, [x8]
000000000003d478	cbnz	w10, 0x3d46c
000000000003d47c	b	0x3d370
000000000003d480	add	x0, x8, #0x1f0
000000000003d484	bl	__mi_stat_increase
000000000003d488	ldr	x9, [x20]
000000000003d48c	add	x8, x9, #0x2d0
000000000003d490	adr	x10, #0x573f0
000000000003d494	nop
000000000003d498	add	x9, x9, #0x2d8
000000000003d49c	cmp	x8, x10
000000000003d4a0	b.lo	0x3d4d8
000000000003d4a4	adr	x10, #0x5761c
000000000003d4a8	nop
000000000003d4ac	cmp	x8, x10
000000000003d4b0	b.hs	0x3d4d8
000000000003d4b4	ldxr	x10, [x9]
000000000003d4b8	add	x10, x10, #0x1
000000000003d4bc	stxr	w11, x10, [x9]
000000000003d4c0	cbnz	w11, 0x3d4b4
000000000003d4c4	ldxr	x9, [x8]
000000000003d4c8	add	x9, x9, #0x1
000000000003d4cc	stxr	w10, x9, [x8]
000000000003d4d0	cbnz	w10, 0x3d4c4
000000000003d4d4	b	0x3d370
000000000003d4d8	ldr	x10, [x9]
000000000003d4dc	add	x10, x10, #0x1
000000000003d4e0	str	x10, [x9]
000000000003d4e4	ldr	x9, [x8]
000000000003d4e8	add	x9, x9, #0x1
000000000003d4ec	str	x9, [x8]
000000000003d4f0	mov	x0, x19
000000000003d4f4	ldp	x29, x30, [sp, #0x30]
000000000003d4f8	ldp	x20, x19, [sp, #0x20]
000000000003d4fc	ldp	x22, x21, [sp, #0x10]
000000000003d500	add	sp, sp, #0x40
000000000003d504	ret
000000000003d508	str	x1, [sp]
000000000003d50c	adr	x1, #0x212e9 ; literal pool for: "allocation request is too large (%zu bytes)\n"
000000000003d510	nop
000000000003d514	mov	w0, #0x54
000000000003d518	bl	__mi_error_message
000000000003d51c	mov	x19, #0x0
000000000003d520	mov	x0, x19
000000000003d524	ldp	x29, x30, [sp, #0x30]
000000000003d528	ldp	x20, x19, [sp, #0x20]
000000000003d52c	ldp	x22, x21, [sp, #0x10]
000000000003d530	add	sp, sp, #0x40
000000000003d534	ret
000000000003d538	and	x9, x19, #0xffffffffffc00000
000000000003d53c	ldr	w10, [x9, #0x70]
000000000003d540	cmp	w10, #0x3
000000000003d544	b.ne	0x3d550
000000000003d548	ldr	x11, [x9, #0x48]
000000000003d54c	b	0x3d55c
000000000003d550	ldr	x11, [x9, #0x60]
000000000003d554	mov	w12, #0x1
000000000003d558	lsl	x11, x12, x11
000000000003d55c	ldrb	w12, [x19]
000000000003d560	cbz	x12, 0x3d56c
000000000003d564	mov	x1, x11
000000000003d568	b	0x3d40c
000000000003d56c	ldr	x13, [x9, #0x50]
000000000003d570	sub	x1, x11, x13
000000000003d574	cmp	w10, #0x1
000000000003d578	ccmp	w8, #0x0, #0x4, ls
000000000003d57c	b.eq	0x3d40c
000000000003d580	madd	x9, x11, x12, x9
000000000003d584	add	x9, x9, x13
000000000003d588	udiv	x10, x9, x8
000000000003d58c	neg	x9, x9
000000000003d590	madd	x9, x10, x8, x9
000000000003d594	add	x9, x8, x9
000000000003d598	cmp	x9, x8
000000000003d59c	csel	x8, x9, xzr, lo
000000000003d5a0	sub	x1, x1, x8
000000000003d5a4	b	0x3d40c
_mi_page_fresh_alloc:
000000000003d5a8	sub	sp, sp, #0x70
000000000003d5ac	stp	x28, x27, [sp, #0x10]
000000000003d5b0	stp	x26, x25, [sp, #0x20]
000000000003d5b4	stp	x24, x23, [sp, #0x30]
000000000003d5b8	stp	x22, x21, [sp, #0x40]
000000000003d5bc	stp	x20, x19, [sp, #0x50]
000000000003d5c0	stp	x29, x30, [sp, #0x60]
000000000003d5c4	add	x29, sp, #0x60
000000000003d5c8	mov	x22, x2
000000000003d5cc	mov	x20, x1
000000000003d5d0	mov	x19, x0
000000000003d5d4	ldr	x23, [x0]
000000000003d5d8	add	x21, x23, #0x20
000000000003d5dc	add	x5, x23, #0xa0
000000000003d5e0	cmp	x2, #0x4, lsl #12
000000000003d5e4	b.hi	0x3d614
000000000003d5e8	ldr	x0, [x21]
000000000003d5ec	cbnz	x0, 0x3d848
000000000003d5f0	mov	x0, x19
000000000003d5f4	mov	x1, x22
000000000003d5f8	mov	w2, #0x0
000000000003d5fc	mov	w3, #0x10
000000000003d600	mov	x4, x21
000000000003d604	bl	_mi_segment_reclaim_or_alloc
000000000003d608	cbz	x0, 0x3d6f4
000000000003d60c	ldr	x0, [x21]
000000000003d610	b	0x3d848
000000000003d614	cmp	x22, #0x20, lsl #12
000000000003d618	b.hi	0x3d648
000000000003d61c	ldr	x0, [x23, #0x30]
000000000003d620	cbnz	x0, 0x3d848
000000000003d624	mov	x0, x19
000000000003d628	mov	x1, x22
000000000003d62c	mov	w2, #0x1
000000000003d630	mov	w3, #0x13
000000000003d634	mov	x4, x21
000000000003d638	bl	_mi_segment_reclaim_or_alloc
000000000003d63c	cbz	x0, 0x3d6f4
000000000003d640	ldr	x0, [x23, #0x30]
000000000003d644	b	0x3d848
000000000003d648	mov	w8, #0x1
000000000003d64c	movk	w8, #0x2, lsl #16
000000000003d650	add	x8, x8, #0x1e0, lsl #12
000000000003d654	cmp	x22, x8
000000000003d658	b.hs	0x3d67c
000000000003d65c	mov	x0, x19
000000000003d660	mov	x1, x22
000000000003d664	mov	w2, #0x2
000000000003d668	mov	w3, #0x16
000000000003d66c	mov	x4, x21
000000000003d670	bl	_mi_segment_reclaim_or_alloc
000000000003d674	cbnz	x0, 0x3d848
000000000003d678	b	0x3d6f4
000000000003d67c	mov	x0, #0x0
000000000003d680	mov	x1, x22
000000000003d684	mov	w2, #0x3
000000000003d688	mov	w3, #0x16
000000000003d68c	mov	x4, x21
000000000003d690	bl	_mi_segment_init
000000000003d694	cbz	x0, 0x3d6f4
000000000003d698	add	x8, x0, #0x68
000000000003d69c	stlr	xzr, [x8]
000000000003d6a0	ldr	x8, [x0, #0x48]
000000000003d6a4	ldr	x9, [x23, #0x90]
000000000003d6a8	adr	x10, #0x571d8
000000000003d6ac	nop
000000000003d6b0	cmp	x9, x10
000000000003d6b4	cset	w11, hs
000000000003d6b8	add	x10, x10, #0x240
000000000003d6bc	cmp	x9, x10
000000000003d6c0	cset	w10, lo
000000000003d6c4	and	w10, w11, w10
000000000003d6c8	add	x12, x9, #0x18
000000000003d6cc	cmp	x8, #0x0
000000000003d6d0	b.le	0x3d75c
000000000003d6d4	cbz	w10, 0x3d7cc
000000000003d6d8	ldxr	x10, [x12]
000000000003d6dc	sub	x10, x10, #0x1
000000000003d6e0	stxr	w11, x10, [x12]
000000000003d6e4	cbnz	w11, 0x3d6d8
000000000003d6e8	add	x11, x9, #0x10
000000000003d6ec	ldr	x13, [x9, #0x10]
000000000003d6f0	b	0x3d718
000000000003d6f4	mov	x21, #0x0
000000000003d6f8	mov	w0, #0xa
000000000003d6fc	bl	_mi_option_get
000000000003d700	cbnz	x0, 0x3d860
000000000003d704	b	0x3d944
000000000003d708	clrex
000000000003d70c	mov	w14, #0x0
000000000003d710	mov	x13, x12
000000000003d714	cbnz	w14, 0x3d740
000000000003d718	cmp	x13, x10
000000000003d71c	b.ge	0x3d740
000000000003d720	ldxr	x12, [x11]
000000000003d724	cmp	x12, x13
000000000003d728	b.ne	0x3d708
000000000003d72c	stlxr	w13, x10, [x11]
000000000003d730	cbnz	w13, 0x3d70c
000000000003d734	mov	w14, #0x1
000000000003d738	mov	x13, x12
000000000003d73c	cbz	w14, 0x3d718
000000000003d740	add	x9, x9, #0x8
000000000003d744	ldxr	x10, [x9]
000000000003d748	add	x10, x10, #0x1
000000000003d74c	stxr	w11, x10, [x9]
000000000003d750	cbnz	w11, 0x3d744
000000000003d754	mov	x10, #-0x1
000000000003d758	b	0x3d818
000000000003d75c	cbz	w10, 0x3d7f0
000000000003d760	ldxr	x10, [x12]
000000000003d764	add	x11, x10, #0x1
000000000003d768	stxr	w13, x11, [x12]
000000000003d76c	cbnz	w13, 0x3d760
000000000003d770	add	x12, x9, #0x10
000000000003d774	ldr	x14, [x9, #0x10]
000000000003d778	b	0x3d78c
000000000003d77c	clrex
000000000003d780	mov	w15, #0x0
000000000003d784	mov	x14, x13
000000000003d788	cbnz	w15, 0x3d7b4
000000000003d78c	cmp	x14, x10
000000000003d790	b.gt	0x3d7b4
000000000003d794	ldxr	x13, [x12]
000000000003d798	cmp	x13, x14
000000000003d79c	b.ne	0x3d77c
000000000003d7a0	stlxr	w14, x11, [x12]
000000000003d7a4	cbnz	w14, 0x3d780
000000000003d7a8	mov	w15, #0x1
000000000003d7ac	mov	x14, x13
000000000003d7b0	cbz	w15, 0x3d78c
000000000003d7b4	mov	w10, #0x1
000000000003d7b8	ldxr	x11, [x9]
000000000003d7bc	add	x11, x11, #0x1
000000000003d7c0	stxr	w12, x11, [x9]
000000000003d7c4	cbnz	w12, 0x3d7b8
000000000003d7c8	b	0x3d818
000000000003d7cc	ldp	x11, x10, [x9, #0x10]
000000000003d7d0	sub	x10, x10, #0x1
000000000003d7d4	str	x10, [x9, #0x18]
000000000003d7d8	cmp	x10, x11
000000000003d7dc	b.le	0x3d7e4
000000000003d7e0	str	x10, [x9, #0x10]
000000000003d7e4	add	x9, x9, #0x8
000000000003d7e8	mov	x10, #-0x1
000000000003d7ec	b	0x3d80c
000000000003d7f0	ldp	x12, x11, [x9, #0x10]
000000000003d7f4	add	x10, x11, #0x1
000000000003d7f8	str	x10, [x9, #0x18]
000000000003d7fc	cmp	x11, x12
000000000003d800	b.lt	0x3d808
000000000003d804	str	x10, [x9, #0x10]
000000000003d808	mov	w10, #0x1
000000000003d80c	ldr	x11, [x9]
000000000003d810	add	x11, x11, #0x1
000000000003d814	str	x11, [x9]
000000000003d818	ldp	x9, x11, [x23, #0x58]
000000000003d81c	add	x9, x9, x10
000000000003d820	str	x9, [x23, #0x58]
000000000003d824	cmp	x9, x11
000000000003d828	b.ls	0x3d830
000000000003d82c	str	x9, [x23, #0x60]
000000000003d830	ldp	x9, x10, [x23, #0x68]
000000000003d834	sub	x8, x9, x8
000000000003d838	str	x8, [x23, #0x68]
000000000003d83c	cmp	x8, x10
000000000003d840	b.ls	0x3d848
000000000003d844	str	x8, [x23, #0x70]
000000000003d848	mov	x1, x21
000000000003d84c	bl	_mi_segment_find_free
000000000003d850	mov	x21, x0
000000000003d854	mov	w0, #0xa
000000000003d858	bl	_mi_option_get
000000000003d85c	cbz	x0, 0x3d944
000000000003d860	mov	x0, sp
000000000003d864	mov	x1, #0x0
000000000003d868	bl	0x55470 ; symbol stub for: _gettimeofday
000000000003d86c	ldr	x24, [x23, #0x48]
000000000003d870	cbz	x24, 0x3d940
000000000003d874	ldr	x8, [sp]
000000000003d878	ldr	w9, [sp, #0x8]
000000000003d87c	mov	w10, #0x4dd3
000000000003d880	movk	w10, #0x1062, lsl #16
000000000003d884	smull	x9, w9, w10
000000000003d888	lsr	x10, x9, #63
000000000003d88c	asr	x9, x9, #38
000000000003d890	add	w9, w9, w10
000000000003d894	mov	w10, #0x3e8
000000000003d898	madd	w25, w8, w10, w9
000000000003d89c	mov	w26, #0x1
000000000003d8a0	b	0x3d8b0
000000000003d8a4	str	wzr, [x27, #0x10]
000000000003d8a8	stp	xzr, xzr, [x27, #0x30]
000000000003d8ac	cbz	x24, 0x3d940
000000000003d8b0	mov	x27, x24
000000000003d8b4	ldr	w8, [x24, #0x10]
000000000003d8b8	cmp	w8, w25
000000000003d8bc	b.gt	0x3da1c
000000000003d8c0	ldr	x24, [x27, #0x38]
000000000003d8c4	mov	w0, #0xa
000000000003d8c8	bl	_mi_option_get
000000000003d8cc	cbz	x0, 0x3d8a4
000000000003d8d0	and	x9, x27, #0xffffffffffc00000
000000000003d8d4	ldrb	w8, [x9, #0x8]
000000000003d8d8	cbnz	w8, 0x3d8a4
000000000003d8dc	ldrb	w8, [x27, #0x1]
000000000003d8e0	and	w10, w8, #0x7
000000000003d8e4	cmp	w10, #0x4
000000000003d8e8	b.ne	0x3d8a4
000000000003d8ec	ldr	w10, [x9, #0x70]
000000000003d8f0	cmp	w10, #0x3
000000000003d8f4	b.ne	0x3d90c
000000000003d8f8	ldr	x1, [x9, #0x48]
000000000003d8fc	ldrb	w10, [x27]
000000000003d900	madd	x0, x1, x10, x9
000000000003d904	cbnz	x10, 0x3d92c
000000000003d908	b	0x3d920
000000000003d90c	ldr	x10, [x9, #0x60]
000000000003d910	lsl	x1, x26, x10
000000000003d914	ldrb	w10, [x27]
000000000003d918	madd	x0, x1, x10, x9
000000000003d91c	cbnz	x10, 0x3d92c
000000000003d920	ldr	x9, [x9, #0x50]
000000000003d924	add	x0, x0, x9
000000000003d928	sub	x1, x1, x9
000000000003d92c	orr	w8, w8, #0x2
000000000003d930	strb	w8, [x27, #0x1]
000000000003d934	cbz	x1, 0x3d8a4
000000000003d938	bl	__mi_os_reset
000000000003d93c	b	0x3d8a4
000000000003d940	stp	xzr, xzr, [x23, #0x40]
000000000003d944	cbz	x21, 0x3dd44
000000000003d948	and	x8, x21, #0xffffffffffc00000
000000000003d94c	add	x9, x21, #0x28
000000000003d950	stlr	x19, [x9]
000000000003d954	ldr	w10, [x8, #0x70]
000000000003d958	cmp	w10, #0x3
000000000003d95c	b.ne	0x3d974
000000000003d960	ldr	x12, [x8, #0x48]
000000000003d964	ldrb	w9, [x21]
000000000003d968	cbz	x9, 0x3d988
000000000003d96c	mov	x11, x12
000000000003d970	b	0x3d9c0
000000000003d974	ldr	x9, [x8, #0x60]
000000000003d978	mov	w11, #0x1
000000000003d97c	lsl	x12, x11, x9
000000000003d980	ldrb	w9, [x21]
000000000003d984	cbnz	x9, 0x3d96c
000000000003d988	ldr	x13, [x8, #0x50]
000000000003d98c	sub	x11, x12, x13
000000000003d990	cmp	w10, #0x1
000000000003d994	b.hi	0x3d9c0
000000000003d998	cbz	x22, 0x3d9c0
000000000003d99c	madd	x10, x12, x9, x8
000000000003d9a0	add	x10, x10, x13
000000000003d9a4	udiv	x12, x10, x22
000000000003d9a8	neg	x10, x10
000000000003d9ac	madd	x10, x12, x22, x10
000000000003d9b0	add	x10, x22, x10
000000000003d9b4	cmp	x10, x22
000000000003d9b8	csel	x10, x10, xzr, lo
000000000003d9bc	sub	x11, x11, x10
000000000003d9c0	lsr	x10, x22, #26
000000000003d9c4	cmp	x10, #0x0
000000000003d9c8	mov	w10, #0x4000000
000000000003d9cc	csel	x10, x22, x10, eq
000000000003d9d0	str	w10, [x21, #0x14]
000000000003d9d4	udiv	x11, x11, x22
000000000003d9d8	strh	w11, [x21, #0x4]
000000000003d9dc	ldrb	w12, [x21, #0x1]
000000000003d9e0	ldrb	w13, [x21, #0x7]
000000000003d9e4	bfxil	w13, w12, #3, #1
000000000003d9e8	strb	w13, [x21, #0x7]
000000000003d9ec	ldr	x12, [x21, #0x8]
000000000003d9f0	cbnz	x12, 0x3dad4
000000000003d9f4	ldrh	w12, [x21, #0x2]
000000000003d9f8	cmp	w12, w11, uxth
000000000003d9fc	b.hs	0x3dad4
000000000003da00	ldr	w15, [x8, #0x70]
000000000003da04	cmp	w15, #0x3
000000000003da08	b.ne	0x3da2c
000000000003da0c	ldr	x14, [x8, #0x48]
000000000003da10	cbz	w9, 0x3da3c
000000000003da14	mov	x13, x14
000000000003da18	b	0x3da74
000000000003da1c	str	x27, [x23, #0x48]
000000000003da20	str	xzr, [x27, #0x30]
000000000003da24	cbnz	x21, 0x3d948
000000000003da28	b	0x3dd44
000000000003da2c	ldr	x13, [x8, #0x60]
000000000003da30	mov	w14, #0x1
000000000003da34	lsl	x14, x14, x13
000000000003da38	cbnz	w9, 0x3da14
000000000003da3c	ldr	x16, [x8, #0x50]
000000000003da40	sub	x13, x14, x16
000000000003da44	cmp	w15, #0x1
000000000003da48	b.hi	0x3da74
000000000003da4c	cbz	x10, 0x3da74
000000000003da50	madd	x8, x14, x9, x8
000000000003da54	add	x8, x8, x16
000000000003da58	udiv	x9, x8, x10
000000000003da5c	neg	x8, x8
000000000003da60	madd	x8, x9, x10, x8
000000000003da64	add	x8, x10, x8
000000000003da68	cmp	x8, x10
000000000003da6c	csel	x8, x8, xzr, lo
000000000003da70	sub	x13, x13, x8
000000000003da74	lsr	w8, w10, #26
000000000003da78	cmp	w8, #0x0
000000000003da7c	csel	x1, x10, x13, eq
000000000003da80	and	x8, x11, #0xffff
000000000003da84	sub	x8, x8, x12
000000000003da88	mov	w9, #0x1
000000000003da8c	cmp	x1, #0xfff
000000000003da90	and	w10, w1, #0xffff
000000000003da94	mov	w11, #0x1000
000000000003da98	udiv	w10, w11, w10
000000000003da9c	csel	x9, x9, x10, hi
000000000003daa0	cmp	x8, x9
000000000003daa4	csel	x22, x9, x8, hi
000000000003daa8	mov	x0, x21
000000000003daac	mov	x2, x22
000000000003dab0	bl	_mi_page_free_list_extend
000000000003dab4	ldrh	w8, [x21, #0x2]
000000000003dab8	add	w8, w8, w22
000000000003dabc	strh	w8, [x21, #0x2]
000000000003dac0	ldrb	w8, [x21, #0x1]
000000000003dac4	tbnz	w8, #0x3, 0x3dad4
000000000003dac8	ldrb	w8, [x21, #0x7]
000000000003dacc	and	w8, w8, #0xfe
000000000003dad0	strb	w8, [x21, #0x7]
000000000003dad4	ldr	x12, [x19]
000000000003dad8	add	x8, x12, #0xd0
000000000003dadc	adr	x9, #0x56da4
000000000003dae0	nop
000000000003dae4	cmp	x8, x9
000000000003dae8	b.lo	0x3db6c
000000000003daec	adr	x9, #0x56fd4
000000000003daf0	nop
000000000003daf4	cmp	x8, x9
000000000003daf8	b.hs	0x3db6c
000000000003dafc	add	x11, x12, #0xe8
000000000003db00	ldxr	x9, [x11]
000000000003db04	add	x10, x9, #0x1
000000000003db08	stxr	w13, x10, [x11]
000000000003db0c	cbnz	w13, 0x3db00
000000000003db10	add	x11, x12, #0xe0
000000000003db14	ldr	x13, [x12, #0xe0]
000000000003db18	b	0x3db2c
000000000003db1c	clrex
000000000003db20	mov	w14, #0x0
000000000003db24	mov	x13, x12
000000000003db28	cbnz	w14, 0x3db54
000000000003db2c	cmp	x13, x9
000000000003db30	b.gt	0x3db54
000000000003db34	ldxr	x12, [x11]
000000000003db38	cmp	x12, x13
000000000003db3c	b.ne	0x3db1c
000000000003db40	stlxr	w13, x10, [x11]
000000000003db44	cbnz	w13, 0x3db20
000000000003db48	mov	w14, #0x1
000000000003db4c	mov	x13, x12
000000000003db50	cbz	w14, 0x3db2c
000000000003db54	ldxr	x9, [x8]
000000000003db58	add	x9, x9, #0x1
000000000003db5c	stxr	w10, x9, [x8]
000000000003db60	cbnz	w10, 0x3db54
000000000003db64	cbnz	x20, 0x3db94
000000000003db68	b	0x3dd44
000000000003db6c	ldp	x11, x10, [x12, #0xe0]
000000000003db70	add	x9, x10, #0x1
000000000003db74	str	x9, [x12, #0xe8]
000000000003db78	cmp	x10, x11
000000000003db7c	b.lt	0x3db84
000000000003db80	str	x9, [x12, #0xe0]
000000000003db84	ldr	x9, [x8]
000000000003db88	add	x9, x9, #0x1
000000000003db8c	str	x9, [x8]
000000000003db90	cbz	x20, 0x3dd44
000000000003db94	mov	w9, #0x7
000000000003db98	movk	w9, #0x20, lsl #16
000000000003db9c	ldr	x8, [x20, #0x10]
000000000003dba0	add	x10, x9, #0x9
000000000003dba4	cmp	x8, x10
000000000003dba8	cset	w8, eq
000000000003dbac	ldrb	w10, [x21, #0x6]
000000000003dbb0	and	w10, w10, #0xfe
000000000003dbb4	orr	w8, w10, w8
000000000003dbb8	strb	w8, [x21, #0x6]
000000000003dbbc	ldr	x8, [x20]
000000000003dbc0	stp	x8, xzr, [x21, #0x30]
000000000003dbc4	add	x10, x8, #0x38
000000000003dbc8	add	x11, x20, #0x8
000000000003dbcc	cmp	x8, #0x0
000000000003dbd0	csel	x8, x11, x10, eq
000000000003dbd4	str	x21, [x8]
000000000003dbd8	str	x21, [x20]
000000000003dbdc	ldr	x11, [x20, #0x10]
000000000003dbe0	cmp	x11, #0x400
000000000003dbe4	b.hi	0x3dd38
000000000003dbe8	add	x8, x11, #0x7
000000000003dbec	lsr	x8, x8, #3
000000000003dbf0	add	x10, x19, x8, lsl #3
000000000003dbf4	ldr	x10, [x10, #0x8]
000000000003dbf8	cmp	x10, x21
000000000003dbfc	b.eq	0x3dd38
000000000003dc00	cmp	x11, #0x9
000000000003dc04	b.hs	0x3dc10
000000000003dc08	mov	x9, #0x0
000000000003dc0c	b	0x3dcdc
000000000003dc10	sub	x12, x8, #0x1
000000000003dc14	clz	x13, x12
000000000003dc18	mov	w10, #0x3f
000000000003dc1c	sub	w13, w10, w13
000000000003dc20	and	w13, w13, #0xff
000000000003dc24	sub	w14, w13, #0x2
000000000003dc28	lsr	x12, x12, x14
000000000003dc2c	and	w12, w12, #0x3
000000000003dc30	bfi	w12, w13, #2, #8
000000000003dc34	sub	w12, w12, #0x3
000000000003dc38	add	w13, w8, #0x1
000000000003dc3c	and	w13, w13, #0xfffffffe
000000000003dc40	cmp	x11, #0x40
000000000003dc44	csel	w13, w12, w13, hi
000000000003dc48	add	x11, x19, #0x410
000000000003dc4c	sub	x12, x20, #0x18
000000000003dc50	and	w13, w13, #0xff
000000000003dc54	ldr	x14, [x12, #0x10]
000000000003dc58	add	x15, x14, #0x7
000000000003dc5c	lsr	x14, x15, #3
000000000003dc60	cmp	x15, #0x10
000000000003dc64	b.hs	0x3dc70
000000000003dc68	mov	w15, #0x1
000000000003dc6c	b	0x3dcb8
000000000003dc70	cmp	x15, #0x47
000000000003dc74	b.hi	0x3dc84
000000000003dc78	add	w15, w14, #0x1
000000000003dc7c	and	w15, w15, #0xfffffffe
000000000003dc80	b	0x3dcb8
000000000003dc84	cmp	x15, x9
000000000003dc88	b.ls	0x3dc94
000000000003dc8c	mov	w15, #0x49
000000000003dc90	b	0x3dcb8
000000000003dc94	sub	x15, x14, #0x1
000000000003dc98	clz	x16, x15
000000000003dc9c	sub	w16, w10, w16
000000000003dca0	and	w16, w16, #0xff
000000000003dca4	sub	w17, w16, #0x2
000000000003dca8	lsr	x15, x15, x17
000000000003dcac	and	w15, w15, #0x3
000000000003dcb0	bfi	w15, w16, #2, #8
000000000003dcb4	sub	w15, w15, #0x3
000000000003dcb8	cmp	x12, x11
000000000003dcbc	b.ls	0x3dccc
000000000003dcc0	sub	x12, x12, #0x18
000000000003dcc4	cmp	w13, w15, uxtb
000000000003dcc8	b.eq	0x3dc54
000000000003dccc	cmp	x14, x8
000000000003dcd0	csinc	x9, x8, x14, hs
000000000003dcd4	cmp	x9, x8
000000000003dcd8	b.hi	0x3dd38
000000000003dcdc	sub	x10, x8, x9
000000000003dce0	add	x10, x10, #0x1
000000000003dce4	cmp	x10, #0x4
000000000003dce8	b.lo	0x3dd1c
000000000003dcec	and	x11, x10, #0xfffffffffffffffc
000000000003dcf0	dup.2d	v0, x21
000000000003dcf4	add	x12, x19, x9, lsl #3
000000000003dcf8	add	x12, x12, #0x18
000000000003dcfc	mov	x13, x11
000000000003dd00	stp	q0, q0, [x12, #-0x10]
000000000003dd04	add	x12, x12, #0x20
000000000003dd08	subs	x13, x13, #0x4
000000000003dd0c	b.ne	0x3dd00
000000000003dd10	cmp	x10, x11
000000000003dd14	b.eq	0x3dd38
000000000003dd18	add	x9, x9, x11
000000000003dd1c	sub	x8, x8, x9
000000000003dd20	add	x8, x8, #0x1
000000000003dd24	add	x9, x19, x9, lsl #3
000000000003dd28	add	x9, x9, #0x8
000000000003dd2c	str	x21, [x9], #0x8
000000000003dd30	subs	x8, x8, #0x1
000000000003dd34	b.ne	0x3dd2c
000000000003dd38	ldr	x8, [x19, #0xbc8]
000000000003dd3c	add	x8, x8, #0x1
000000000003dd40	str	x8, [x19, #0xbc8]
000000000003dd44	mov	x0, x21
000000000003dd48	ldp	x29, x30, [sp, #0x60]
000000000003dd4c	ldp	x20, x19, [sp, #0x50]
000000000003dd50	ldp	x22, x21, [sp, #0x40]
000000000003dd54	ldp	x24, x23, [sp, #0x30]
000000000003dd58	ldp	x26, x25, [sp, #0x20]
000000000003dd5c	ldp	x28, x27, [sp, #0x10]
000000000003dd60	add	sp, sp, #0x70
000000000003dd64	ret
_mi_page_queue_find_free_ex:
000000000003dd68	sub	sp, sp, #0x70
000000000003dd6c	stp	x28, x27, [sp, #0x10]
000000000003dd70	stp	x26, x25, [sp, #0x20]
000000000003dd74	stp	x24, x23, [sp, #0x30]
000000000003dd78	stp	x22, x21, [sp, #0x40]
000000000003dd7c	stp	x20, x19, [sp, #0x50]
000000000003dd80	stp	x29, x30, [sp, #0x60]
000000000003dd84	add	x29, sp, #0x60
000000000003dd88	mov	x19, x1
000000000003dd8c	mov	x20, x0
000000000003dd90	mov	w23, #0x7
000000000003dd94	movk	w23, #0x20, lsl #16
000000000003dd98	eor	w24, w2, #0x1
000000000003dd9c	sub	x9, x1, #0x18
000000000003dda0	add	x8, x0, #0x410
000000000003dda4	stp	x9, x8, [sp]
000000000003dda8	mov	w27, #0x3f
000000000003ddac	adr	x21, #0x20829 ; literal pool for: "corrupted thread-free list\n"
000000000003ddb0	nop
000000000003ddb4	ldr	x28, [x19]
000000000003ddb8	cbnz	x28, 0x3de08
000000000003ddbc	ldr	x28, [x20, #0xbd0]
000000000003ddc0	ldr	x8, [x20, #0xbd8]
000000000003ddc4	cmp	x28, x8
000000000003ddc8	b.ls	0x3e358
000000000003ddcc	mov	x25, #0x0
000000000003ddd0	mov	w26, #0x4a
000000000003ddd4	str	x26, [x20, #0xbd0]
000000000003ddd8	str	x25, [x20, #0xbd8]
000000000003dddc	ldr	x2, [x19, #0x10]
000000000003dde0	mov	x0, x20
000000000003dde4	mov	x1, x19
000000000003dde8	bl	_mi_page_fresh_alloc
000000000003ddec	cmp	x0, #0x0
000000000003ddf0	cset	w8, ne
000000000003ddf4	orr	w8, w8, w24
000000000003ddf8	mov	w24, #0x1
000000000003ddfc	tbz	w8, #0x0, 0x3ddb4
000000000003de00	b	0x3e4e0
000000000003de04	cbz	x28, 0x3ddbc
000000000003de08	mov	x22, x28
000000000003de0c	ldr	x28, [x28, #0x30]
000000000003de10	add	x25, x22, #0x20
000000000003de14	ldr	x8, [x22, #0x20]
000000000003de18	cmp	x8, #0x4
000000000003de1c	b.lo	0x3de98
000000000003de20	ldr	x8, [x25]
000000000003de24	b	0x3de34
000000000003de28	clrex
000000000003de2c	mov	w10, #0x0
000000000003de30	cbnz	w10, 0x3de58
000000000003de34	mov	x9, x8
000000000003de38	ldaxr	x8, [x25]
000000000003de3c	cmp	x8, x9
000000000003de40	b.ne	0x3de28
000000000003de44	and	x10, x9, #0x3
000000000003de48	stlxr	w11, x10, [x25]
000000000003de4c	cbnz	w11, 0x3de2c
000000000003de50	mov	w10, #0x1
000000000003de54	cbz	w10, 0x3de34
000000000003de58	ands	x8, x9, #0xfffffffffffffffc
000000000003de5c	b.eq	0x3de98
000000000003de60	mov	w9, #0x0
000000000003de64	ldrh	w10, [x22, #0x2]
000000000003de68	mov	x12, x8
000000000003de6c	mov	x11, x12
000000000003de70	add	w9, w9, #0x1
000000000003de74	ldr	x12, [x12]
000000000003de78	cmp	w9, w10
000000000003de7c	ccmp	x12, #0x0, #0x4, ls
000000000003de80	b.ne	0x3de6c
000000000003de84	cmp	w9, w10
000000000003de88	b.ls	0x3df78
000000000003de8c	mov	w0, #0xe
000000000003de90	mov	x1, x21
000000000003de94	bl	__mi_error_message
000000000003de98	ldr	x8, [x22, #0x18]
000000000003de9c	cbz	x8, 0x3debc
000000000003dea0	ldr	x9, [x22, #0x8]
000000000003dea4	cbnz	x9, 0x3debc
000000000003dea8	str	x8, [x22, #0x8]
000000000003deac	str	xzr, [x22, #0x18]
000000000003deb0	ldrb	w8, [x22, #0x7]
000000000003deb4	and	w8, w8, #0xfe
000000000003deb8	strb	w8, [x22, #0x7]
000000000003debc	ldr	x8, [x22, #0x8]
000000000003dec0	cbnz	x8, 0x3e4b0
000000000003dec4	ldrh	w8, [x22, #0x2]
000000000003dec8	ldrh	w9, [x22, #0x4]
000000000003decc	cmp	w8, w9
000000000003ded0	b.lo	0x3e3dc
000000000003ded4	ldrb	w8, [x22, #0x6]
000000000003ded8	tbnz	w8, #0x0, 0x3de04
000000000003dedc	ldr	x9, [x22, #0x28]
000000000003dee0	ldr	x8, [x22, #0x28]
000000000003dee4	ldr	x11, [x22, #0x38]
000000000003dee8	cbz	x11, 0x3def4
000000000003deec	ldr	x10, [x22, #0x30]
000000000003def0	str	x10, [x11, #0x30]
000000000003def4	ldr	x10, [x22, #0x30]
000000000003def8	cbz	x10, 0x3df00
000000000003defc	str	x11, [x10, #0x38]
000000000003df00	ldr	x11, [x19, #0x8]
000000000003df04	cmp	x11, x22
000000000003df08	b.eq	0x3df1c
000000000003df0c	ldr	x11, [x19]
000000000003df10	cmp	x11, x22
000000000003df14	b.ne	0x3e0dc
000000000003df18	b	0x3df30
000000000003df1c	ldr	x11, [x22, #0x38]
000000000003df20	str	x11, [x19, #0x8]
000000000003df24	ldr	x11, [x19]
000000000003df28	cmp	x11, x22
000000000003df2c	b.ne	0x3e0dc
000000000003df30	str	x10, [x19]
000000000003df34	ldr	x12, [x19, #0x10]
000000000003df38	cmp	x12, #0x400
000000000003df3c	b.hi	0x3e0dc
000000000003df40	cmp	x10, #0x0
000000000003df44	adr	x11, #0x1ab3c
000000000003df48	nop
000000000003df4c	csel	x10, x11, x10, eq
000000000003df50	add	x11, x12, #0x7
000000000003df54	lsr	x11, x11, #3
000000000003df58	add	x13, x8, x11, lsl #3
000000000003df5c	ldr	x13, [x13, #0x8]
000000000003df60	cmp	x13, x10
000000000003df64	b.eq	0x3e0dc
000000000003df68	cmp	x12, #0x9
000000000003df6c	b.hs	0x3df9c
000000000003df70	mov	x12, #0x0
000000000003df74	b	0x3e080
000000000003df78	ldr	x10, [x22, #0x18]
000000000003df7c	str	x10, [x11]
000000000003df80	str	x8, [x22, #0x18]
000000000003df84	ldr	w8, [x22, #0x10]
000000000003df88	sub	w8, w8, w9
000000000003df8c	str	w8, [x22, #0x10]
000000000003df90	ldr	x8, [x22, #0x18]
000000000003df94	cbnz	x8, 0x3dea0
000000000003df98	b	0x3debc
000000000003df9c	cmp	x12, #0x40
000000000003dfa0	b.hi	0x3dfb0
000000000003dfa4	add	w12, w11, #0x1
000000000003dfa8	and	w12, w12, #0xfffffffe
000000000003dfac	b	0x3dfd4
000000000003dfb0	sub	x12, x11, #0x1
000000000003dfb4	clz	x13, x12
000000000003dfb8	sub	w13, w27, w13
000000000003dfbc	and	w13, w13, #0xff
000000000003dfc0	sub	w14, w13, #0x2
000000000003dfc4	lsr	x12, x12, x14
000000000003dfc8	and	w12, w12, #0x3
000000000003dfcc	bfi	w12, w13, #2, #8
000000000003dfd0	sub	w12, w12, #0x3
000000000003dfd4	add	x13, x8, #0x410
000000000003dfd8	ldr	x14, [sp]
000000000003dfdc	ldr	x15, [x14, #0x10]
000000000003dfe0	add	x16, x15, #0x7
000000000003dfe4	lsr	x15, x16, #3
000000000003dfe8	cmp	x16, #0x10
000000000003dfec	b.hs	0x3e000
000000000003dff0	mov	w16, #0x1
000000000003dff4	cmp	x14, x13
000000000003dff8	b.hi	0x3e060
000000000003dffc	b	0x3e070
000000000003e000	cmp	x16, #0x47
000000000003e004	b.hi	0x3e01c
000000000003e008	add	w16, w15, #0x1
000000000003e00c	and	w16, w16, #0xfffffffe
000000000003e010	cmp	x14, x13
000000000003e014	b.hi	0x3e060
000000000003e018	b	0x3e070
000000000003e01c	cmp	x16, x23
000000000003e020	b.ls	0x3e034
000000000003e024	mov	w16, #0x49
000000000003e028	cmp	x14, x13
000000000003e02c	b.hi	0x3e060
000000000003e030	b	0x3e070
000000000003e034	sub	x16, x15, #0x1
000000000003e038	clz	x17, x16
000000000003e03c	sub	w17, w27, w17
000000000003e040	and	w17, w17, #0xff
000000000003e044	sub	w0, w17, #0x2
000000000003e048	lsr	x16, x16, x0
000000000003e04c	and	w16, w16, #0x3
000000000003e050	bfi	w16, w17, #2, #8
000000000003e054	sub	w16, w16, #0x3
000000000003e058	cmp	x14, x13
000000000003e05c	b.ls	0x3e070
000000000003e060	sub	x14, x14, #0x18
000000000003e064	and	w17, w12, #0xff
000000000003e068	cmp	w17, w16, uxtb
000000000003e06c	b.eq	0x3dfdc
000000000003e070	cmp	x15, x11
000000000003e074	csinc	x12, x11, x15, hs
000000000003e078	cmp	x12, x11
000000000003e07c	b.hi	0x3e0dc
000000000003e080	sub	x13, x11, x12
000000000003e084	add	x13, x13, #0x1
000000000003e088	cmp	x13, #0x4
000000000003e08c	b.lo	0x3e0c0
000000000003e090	and	x14, x13, #0xfffffffffffffffc
000000000003e094	dup.2d	v0, x10
000000000003e098	add	x15, x8, x12, lsl #3
000000000003e09c	add	x15, x15, #0x18
000000000003e0a0	mov	x16, x14
000000000003e0a4	stp	q0, q0, [x15, #-0x10]
000000000003e0a8	add	x15, x15, #0x20
000000000003e0ac	subs	x16, x16, #0x4
000000000003e0b0	b.ne	0x3e0a4
000000000003e0b4	cmp	x13, x14
000000000003e0b8	b.eq	0x3e0dc
000000000003e0bc	add	x12, x12, x14
000000000003e0c0	sub	x11, x11, x12
000000000003e0c4	add	x11, x11, #0x1
000000000003e0c8	add	x12, x8, x12, lsl #3
000000000003e0cc	add	x12, x12, #0x8
000000000003e0d0	str	x10, [x12], #0x8
000000000003e0d4	subs	x11, x11, #0x1
000000000003e0d8	b.ne	0x3e0d0
000000000003e0dc	ldr	x10, [x9, #0xb08]
000000000003e0e0	stp	xzr, x10, [x22, #0x30]
000000000003e0e4	cbz	x10, 0x3e0f8
000000000003e0e8	str	x22, [x10, #0x30]
000000000003e0ec	str	x22, [x9, #0xb08]
000000000003e0f0	ldr	x10, [x9, #0xb10]
000000000003e0f4	b	0x3e270
000000000003e0f8	str	x22, [x9, #0xb00]
000000000003e0fc	str	x22, [x9, #0xb08]
000000000003e100	ldr	x10, [x9, #0xb10]
000000000003e104	cmp	x10, #0x400
000000000003e108	b.hi	0x3e270
000000000003e10c	add	x11, x10, #0x7
000000000003e110	lsr	x11, x11, #3
000000000003e114	add	x12, x8, x11, lsl #3
000000000003e118	ldr	x12, [x12, #0x8]
000000000003e11c	cmp	x12, x22
000000000003e120	b.eq	0x3e270
000000000003e124	cmp	x10, #0x9
000000000003e128	b.hs	0x3e134
000000000003e12c	mov	x9, #0x0
000000000003e130	b	0x3e214
000000000003e134	sub	x12, x11, #0x1
000000000003e138	clz	x13, x12
000000000003e13c	sub	w13, w27, w13
000000000003e140	and	w13, w13, #0xff
000000000003e144	sub	w14, w13, #0x2
000000000003e148	lsr	x12, x12, x14
000000000003e14c	and	w12, w12, #0x3
000000000003e150	bfi	w12, w13, #2, #8
000000000003e154	sub	w12, w12, #0x3
000000000003e158	add	w13, w11, #0x1
000000000003e15c	and	w13, w13, #0xfffffffe
000000000003e160	cmp	x10, #0x40
000000000003e164	csel	w12, w12, w13, hi
000000000003e168	add	x13, x8, #0x410
000000000003e16c	add	x9, x9, #0xae8
000000000003e170	ldr	x14, [x9, #0x10]
000000000003e174	add	x15, x14, #0x7
000000000003e178	lsr	x14, x15, #3
000000000003e17c	cmp	x15, #0x10
000000000003e180	b.hs	0x3e194
000000000003e184	mov	w15, #0x1
000000000003e188	cmp	x9, x13
000000000003e18c	b.hi	0x3e1f4
000000000003e190	b	0x3e204
000000000003e194	cmp	x15, #0x47
000000000003e198	b.hi	0x3e1b0
000000000003e19c	add	w15, w14, #0x1
000000000003e1a0	and	w15, w15, #0xfffffffe
000000000003e1a4	cmp	x9, x13
000000000003e1a8	b.hi	0x3e1f4
000000000003e1ac	b	0x3e204
000000000003e1b0	cmp	x15, x23
000000000003e1b4	b.ls	0x3e1c8
000000000003e1b8	mov	w15, #0x49
000000000003e1bc	cmp	x9, x13
000000000003e1c0	b.hi	0x3e1f4
000000000003e1c4	b	0x3e204
000000000003e1c8	sub	x15, x14, #0x1
000000000003e1cc	clz	x16, x15
000000000003e1d0	sub	w16, w27, w16
000000000003e1d4	and	w16, w16, #0xff
000000000003e1d8	sub	w17, w16, #0x2
000000000003e1dc	lsr	x15, x15, x17
000000000003e1e0	and	w15, w15, #0x3
000000000003e1e4	bfi	w15, w16, #2, #8
000000000003e1e8	sub	w15, w15, #0x3
000000000003e1ec	cmp	x9, x13
000000000003e1f0	b.ls	0x3e204
000000000003e1f4	sub	x9, x9, #0x18
000000000003e1f8	and	w16, w12, #0xff
000000000003e1fc	cmp	w16, w15, uxtb
000000000003e200	b.eq	0x3e170
000000000003e204	cmp	x14, x11
000000000003e208	csinc	x9, x11, x14, hs
000000000003e20c	cmp	x9, x11
000000000003e210	b.hi	0x3e270
000000000003e214	sub	x12, x11, x9
000000000003e218	add	x12, x12, #0x1
000000000003e21c	cmp	x12, #0x4
000000000003e220	b.lo	0x3e254
000000000003e224	and	x13, x12, #0xfffffffffffffffc
000000000003e228	dup.2d	v0, x22
000000000003e22c	add	x14, x8, x9, lsl #3
000000000003e230	add	x14, x14, #0x18
000000000003e234	mov	x15, x13
000000000003e238	stp	q0, q0, [x14, #-0x10]
000000000003e23c	add	x14, x14, #0x20
000000000003e240	subs	x15, x15, #0x4
000000000003e244	b.ne	0x3e238
000000000003e248	cmp	x12, x13
000000000003e24c	b.eq	0x3e270
000000000003e250	add	x9, x9, x13
000000000003e254	sub	x11, x11, x9
000000000003e258	add	x11, x11, #0x1
000000000003e25c	add	x8, x8, x9, lsl #3
000000000003e260	add	x8, x8, #0x8
000000000003e264	str	x22, [x8], #0x8
000000000003e268	subs	x11, x11, #0x1
000000000003e26c	b.ne	0x3e264
000000000003e270	add	x8, x23, #0x9
000000000003e274	cmp	x10, x8
000000000003e278	cset	w8, eq
000000000003e27c	ldrb	w9, [x22, #0x6]
000000000003e280	and	w9, w9, #0xfe
000000000003e284	orr	w8, w9, w8
000000000003e288	strb	w8, [x22, #0x6]
000000000003e28c	ldr	x8, [x22, #0x20]
000000000003e290	cmp	x8, #0x4
000000000003e294	b.lo	0x3e310
000000000003e298	ldr	x8, [x25]
000000000003e29c	b	0x3e2ac
000000000003e2a0	clrex
000000000003e2a4	mov	w10, #0x0
000000000003e2a8	cbnz	w10, 0x3e2d0
000000000003e2ac	mov	x9, x8
000000000003e2b0	ldaxr	x8, [x25]
000000000003e2b4	cmp	x8, x9
000000000003e2b8	b.ne	0x3e2a0
000000000003e2bc	and	x10, x9, #0x3
000000000003e2c0	stlxr	w11, x10, [x25]
000000000003e2c4	cbnz	w11, 0x3e2a4
000000000003e2c8	mov	w10, #0x1
000000000003e2cc	cbz	w10, 0x3e2ac
000000000003e2d0	ands	x8, x9, #0xfffffffffffffffc
000000000003e2d4	b.eq	0x3e310
000000000003e2d8	mov	w9, #0x0
000000000003e2dc	ldrh	w11, [x22, #0x2]
000000000003e2e0	mov	x12, x8
000000000003e2e4	mov	x10, x12
000000000003e2e8	add	w9, w9, #0x1
000000000003e2ec	ldr	x12, [x12]
000000000003e2f0	cmp	w9, w11
000000000003e2f4	ccmp	x12, #0x0, #0x4, ls
000000000003e2f8	b.ne	0x3e2e4
000000000003e2fc	cmp	w9, w11
000000000003e300	b.ls	0x3e338
000000000003e304	mov	w0, #0xe
000000000003e308	mov	x1, x21
000000000003e30c	bl	__mi_error_message
000000000003e310	ldr	x8, [x22, #0x18]
000000000003e314	cbz	x8, 0x3de04
000000000003e318	ldr	x9, [x22, #0x8]
000000000003e31c	cbnz	x9, 0x3de04
000000000003e320	str	x8, [x22, #0x8]
000000000003e324	str	xzr, [x22, #0x18]
000000000003e328	ldrb	w8, [x22, #0x7]
000000000003e32c	and	w8, w8, #0xfe
000000000003e330	strb	w8, [x22, #0x7]
000000000003e334	b	0x3de04
000000000003e338	ldr	x11, [x22, #0x18]
000000000003e33c	str	x11, [x10]
000000000003e340	str	x8, [x22, #0x18]
000000000003e344	ldr	w10, [x22, #0x10]
000000000003e348	sub	w9, w10, w9
000000000003e34c	str	w9, [x22, #0x10]
000000000003e350	cbnz	x8, 0x3e318
000000000003e354	b	0x3de04
000000000003e358	mov	x25, #0x0
000000000003e35c	ldr	x8, [sp, #0x8]
000000000003e360	mov	w9, #0x18
000000000003e364	madd	x22, x28, x9, x8
000000000003e368	mov	w26, #0x4a
000000000003e36c	b	0x3e38c
000000000003e370	and	w9, w9, #0x1
000000000003e374	strb	w9, [x8, #0x7]
000000000003e378	add	x28, x28, #0x1
000000000003e37c	ldr	x8, [x20, #0xbd8]
000000000003e380	add	x22, x22, #0x18
000000000003e384	cmp	x28, x8
000000000003e388	b.hi	0x3ddd4
000000000003e38c	ldr	x8, [x22]
000000000003e390	cbz	x8, 0x3e378
000000000003e394	ldrb	w9, [x8, #0x7]
000000000003e398	subs	w10, w9, #0x2
000000000003e39c	b.lo	0x3e378
000000000003e3a0	ldr	w11, [x8, #0x10]
000000000003e3a4	cbnz	w11, 0x3e370
000000000003e3a8	strb	w10, [x8, #0x7]
000000000003e3ac	cmp	w10, #0x1
000000000003e3b0	b.hi	0x3e3c8
000000000003e3b4	ldr	x0, [x22]
000000000003e3b8	mov	x1, x22
000000000003e3bc	mov	w2, #0x0
000000000003e3c0	bl	__mi_page_free
000000000003e3c4	b	0x3e378
000000000003e3c8	cmp	x28, x26
000000000003e3cc	csel	x26, x28, x26, lo
000000000003e3d0	cmp	x28, x25
000000000003e3d4	csel	x25, x28, x25, hi
000000000003e3d8	b	0x3e378
000000000003e3dc	and	x11, x22, #0xffffffffffc00000
000000000003e3e0	ldr	w10, [x22, #0x14]
000000000003e3e4	ldr	w14, [x11, #0x70]
000000000003e3e8	cmp	w14, #0x3
000000000003e3ec	b.ne	0x3e404
000000000003e3f0	ldr	x13, [x11, #0x48]
000000000003e3f4	ldrb	w15, [x22]
000000000003e3f8	cbz	x15, 0x3e418
000000000003e3fc	mov	x12, x13
000000000003e400	b	0x3e450
000000000003e404	ldr	x12, [x11, #0x60]
000000000003e408	mov	w13, #0x1
000000000003e40c	lsl	x13, x13, x12
000000000003e410	ldrb	w15, [x22]
000000000003e414	cbnz	x15, 0x3e3fc
000000000003e418	ldr	x16, [x11, #0x50]
000000000003e41c	sub	x12, x13, x16
000000000003e420	cmp	w14, #0x1
000000000003e424	b.hi	0x3e450
000000000003e428	cbz	w10, 0x3e450
000000000003e42c	madd	x11, x13, x15, x11
000000000003e430	add	x11, x11, x16
000000000003e434	udiv	x13, x11, x10
000000000003e438	neg	x11, x11
000000000003e43c	madd	x11, x13, x10, x11
000000000003e440	add	x11, x10, x11
000000000003e444	cmp	x11, x10
000000000003e448	csel	x11, x11, xzr, lo
000000000003e44c	sub	x12, x12, x11
000000000003e450	ubfx	x11, x10, #26, #6
000000000003e454	cmp	w11, #0x0
000000000003e458	csel	x1, x10, x12, eq
000000000003e45c	sub	x8, x9, x8
000000000003e460	cmp	x1, #0xfff
000000000003e464	b.ls	0x3e470
000000000003e468	mov	w9, #0x1
000000000003e46c	b	0x3e47c
000000000003e470	and	w9, w1, #0xffff
000000000003e474	mov	w10, #0x1000
000000000003e478	udiv	w9, w10, w9
000000000003e47c	cmp	x8, x9
000000000003e480	csel	x19, x9, x8, hi
000000000003e484	mov	x0, x22
000000000003e488	mov	x2, x19
000000000003e48c	bl	_mi_page_free_list_extend
000000000003e490	ldrh	w8, [x22, #0x2]
000000000003e494	add	w8, w8, w19
000000000003e498	strh	w8, [x22, #0x2]
000000000003e49c	ldrb	w8, [x22, #0x1]
000000000003e4a0	tbnz	w8, #0x3, 0x3e4b0
000000000003e4a4	ldrb	w8, [x22, #0x7]
000000000003e4a8	and	w8, w8, #0xfe
000000000003e4ac	strb	w8, [x22, #0x7]
000000000003e4b0	ldrb	w8, [x22, #0x7]
000000000003e4b4	and	w8, w8, #0x1
000000000003e4b8	strb	w8, [x22, #0x7]
000000000003e4bc	mov	x0, x22
000000000003e4c0	ldp	x29, x30, [sp, #0x60]
000000000003e4c4	ldp	x20, x19, [sp, #0x50]
000000000003e4c8	ldp	x22, x21, [sp, #0x40]
000000000003e4cc	ldp	x24, x23, [sp, #0x30]
000000000003e4d0	ldp	x26, x25, [sp, #0x20]
000000000003e4d4	ldp	x28, x27, [sp, #0x10]
000000000003e4d8	add	sp, sp, #0x70
000000000003e4dc	ret
000000000003e4e0	mov	x22, x0
000000000003e4e4	b	0x3e4bc
_mi_page_free_list_extend:
000000000003e4e8	and	x10, x0, #0xffffffffffc00000
000000000003e4ec	ldr	w9, [x10, #0x70]
000000000003e4f0	cmp	w9, #0x3
000000000003e4f4	b.ne	0x3e50c
000000000003e4f8	ldr	x8, [x10, #0x48]
000000000003e4fc	ldrb	w11, [x0]
000000000003e500	madd	x8, x8, x11, x10
000000000003e504	cbnz	x11, 0x3e558
000000000003e508	b	0x3e524
000000000003e50c	ldr	x8, [x10, #0x60]
000000000003e510	mov	w11, #0x1
000000000003e514	lsl	x8, x11, x8
000000000003e518	ldrb	w11, [x0]
000000000003e51c	madd	x8, x8, x11, x10
000000000003e520	cbnz	x11, 0x3e558
000000000003e524	ldr	w11, [x0, #0x14]
000000000003e528	ldr	x10, [x10, #0x50]
000000000003e52c	add	x8, x8, x10
000000000003e530	cmp	w9, #0x1
000000000003e534	ccmp	w11, #0x0, #0x4, ls
000000000003e538	b.eq	0x3e558
000000000003e53c	udiv	x9, x8, x11
000000000003e540	neg	x10, x8
000000000003e544	madd	x9, x9, x11, x10
000000000003e548	add	x9, x11, x9
000000000003e54c	add	x10, x8, x9
000000000003e550	cmp	x9, x11
000000000003e554	csel	x8, x10, x8, lo
000000000003e558	ldrh	w12, [x0, #0x2]
000000000003e55c	mul	x11, x12, x1
000000000003e560	add	x9, x8, x11
000000000003e564	add	x10, x2, x12
000000000003e568	sub	x10, x10, #0x1
000000000003e56c	mul	x13, x10, x1
000000000003e570	add	x10, x8, x13
000000000003e574	cmp	x11, x13
000000000003e578	b.gt	0x3e5a0
000000000003e57c	mov	x11, #0x0
000000000003e580	add	x12, x12, #0x1
000000000003e584	madd	x8, x1, x12, x8
000000000003e588	add	x12, x8, x11
000000000003e58c	str	x12, [x9, x11]
000000000003e590	add	x11, x11, x1
000000000003e594	add	x12, x9, x11
000000000003e598	cmp	x12, x10
000000000003e59c	b.ls	0x3e588
000000000003e5a0	ldr	x8, [x0, #0x8]
000000000003e5a4	str	x8, [x10]
000000000003e5a8	str	x9, [x0, #0x8]
000000000003e5ac	ret
_mi_segment_reclaim_or_alloc:
000000000003e5b0	sub	sp, sp, #0xb0
000000000003e5b4	stp	x28, x27, [sp, #0x50]
000000000003e5b8	stp	x26, x25, [sp, #0x60]
000000000003e5bc	stp	x24, x23, [sp, #0x70]
000000000003e5c0	stp	x22, x21, [sp, #0x80]
000000000003e5c4	stp	x20, x19, [sp, #0x90]
000000000003e5c8	stp	x29, x30, [sp, #0xa0]
000000000003e5cc	add	x29, sp, #0xa0
000000000003e5d0	mov	x20, x5
000000000003e5d4	mov	x22, x4
000000000003e5d8	mov	x23, x3
000000000003e5dc	mov	x24, x2
000000000003e5e0	ldr	x25, [x4, #0x68]
000000000003e5e4	cbz	x25, 0x3e64c
000000000003e5e8	ldr	x8, [x22, #0x58]
000000000003e5ec	sub	x8, x8, #0x1
000000000003e5f0	str	x8, [x22, #0x58]
000000000003e5f4	ldr	x8, [x25, #0x18]
000000000003e5f8	str	x8, [x22, #0x68]
000000000003e5fc	str	xzr, [x25, #0x18]
000000000003e600	ldr	x8, [x22, #0x70]
000000000003e604	add	x9, x8, #0x1a0
000000000003e608	adr	x10, #0x56278
000000000003e60c	nop
000000000003e610	cmp	x9, x10
000000000003e614	adr	x10, #0x564ac
000000000003e618	nop
000000000003e61c	ccmp	x9, x10, #0x2, hs
000000000003e620	b.lo	0x3e9bc
000000000003e624	ldp	x10, x9, [x8, #0x1b0]
000000000003e628	sub	x9, x9, #0x1
000000000003e62c	str	x9, [x8, #0x1b8]
000000000003e630	cmp	x9, x10
000000000003e634	b.le	0x3e63c
000000000003e638	str	x9, [x8, #0x1b0]
000000000003e63c	ldr	x9, [x8, #0x1a8]
000000000003e640	add	x9, x9, #0x1
000000000003e644	str	x9, [x8, #0x1a8]
000000000003e648	b	0x3ea28
000000000003e64c	str	x0, [sp, #0x28]
000000000003e650	str	x1, [sp, #0x38]
000000000003e654	mov	w8, #0x7
000000000003e658	adrp	x13, 86 ; 0x94000
000000000003e65c	strb	wzr, [sp, #0x4f]
000000000003e660	adrp	x9, 86 ; 0x94000
000000000003e664	adr	x28, #0x55e1c
000000000003e668	nop
000000000003e66c	adr	x26, #0x55d94
000000000003e670	nop
000000000003e674	adr	x19, #0x55dcc
000000000003e678	nop
000000000003e67c	adr	x15, #0x55e44
000000000003e680	nop
000000000003e684	adr	x27, #0x55d3c
000000000003e688	nop
000000000003e68c	mov	x14, x8
000000000003e690	ldr	x8, [x13, #0x400]
000000000003e694	lsr	x8, x8, #22
000000000003e698	cbnz	x8, 0x3e774
000000000003e69c	ldr	x8, [x9, #0x480]
000000000003e6a0	cbz	x8, 0x3e9a8
000000000003e6a4	ldaxr	x8, [x28]
000000000003e6a8	stlxr	w9, xzr, [x28]
000000000003e6ac	cbnz	w9, 0x3e6a4
000000000003e6b0	cbz	x8, 0x3e9a8
000000000003e6b4	ldr	x10, [x13, #0x400]
000000000003e6b8	lsr	x9, x10, #22
000000000003e6bc	cbnz	x9, 0x3e6f0
000000000003e6c0	nop
000000000003e6c4	ldr	x9, #0x55dfc
000000000003e6c8	add	w11, w10, #0x1
000000000003e6cc	and	x11, x11, #0x3fffff
000000000003e6d0	orr	x11, x11, x8
000000000003e6d4	ldaxr	x12, [x26]
000000000003e6d8	cmp	x12, x10
000000000003e6dc	b.ne	0x3e6ec
000000000003e6e0	stlxr	w12, x11, [x26]
000000000003e6e4	cbnz	w12, 0x3e6d4
000000000003e6e8	b	0x3e754
000000000003e6ec	clrex
000000000003e6f0	mov	x9, x8
000000000003e6f4	mov	x10, x9
000000000003e6f8	ldr	x9, [x9, #0x10]
000000000003e6fc	cbnz	x9, 0x3e6f4
000000000003e700	ldr	x12, [x13, #0x400]
000000000003e704	b	0x3e718
000000000003e708	clrex
000000000003e70c	mov	w13, #0x0
000000000003e710	mov	x12, x11
000000000003e714	cbnz	w13, 0x3e754
000000000003e718	ldr	x9, [x26, #0xc0]
000000000003e71c	and	x11, x12, #0xffffffffffc00000
000000000003e720	add	x13, x10, #0x10
000000000003e724	stlr	x11, [x13]
000000000003e728	ldxr	x11, [x26]
000000000003e72c	cmp	x11, x12
000000000003e730	b.ne	0x3e708
000000000003e734	add	w12, w12, #0x1
000000000003e738	and	x12, x12, #0x3fffff
000000000003e73c	orr	x12, x12, x8
000000000003e740	stlxr	w13, x12, [x26]
000000000003e744	cbnz	w13, 0x3e70c
000000000003e748	mov	w13, #0x1
000000000003e74c	mov	x12, x11
000000000003e750	cbz	w13, 0x3e718
000000000003e754	ldxr	x8, [x19]
000000000003e758	add	x8, x8, x9
000000000003e75c	stxr	w10, x8, [x19]
000000000003e760	cbnz	w10, 0x3e754
000000000003e764	ldxr	x8, [x15]
000000000003e768	sub	x8, x8, x9
000000000003e76c	stxr	w10, x8, [x15]
000000000003e770	cbnz	w10, 0x3e764
000000000003e774	str	w14, [sp, #0x34]
000000000003e778	ldxr	x8, [x27]
000000000003e77c	add	x8, x8, #0x1
000000000003e780	stxr	w9, x8, [x27]
000000000003e784	cbnz	w9, 0x3e778
000000000003e788	ldar	x9, [x26]
000000000003e78c	b	0x3e7a0
000000000003e790	clrex
000000000003e794	mov	w10, #0x0
000000000003e798	mov	x9, x8
000000000003e79c	cbnz	w10, 0x3e7d8
000000000003e7a0	ands	x25, x9, #0xffffffffffc00000
000000000003e7a4	b.eq	0x3e998
000000000003e7a8	ldr	x10, [x25, #0x10]
000000000003e7ac	ldaxr	x8, [x26]
000000000003e7b0	cmp	x8, x9
000000000003e7b4	b.ne	0x3e790
000000000003e7b8	add	w9, w9, #0x1
000000000003e7bc	and	x9, x9, #0x3fffff
000000000003e7c0	orr	x9, x10, x9
000000000003e7c4	stlxr	w10, x9, [x26]
000000000003e7c8	cbnz	w10, 0x3e794
000000000003e7cc	mov	w10, #0x1
000000000003e7d0	mov	x9, x8
000000000003e7d4	cbz	w10, 0x3e7a0
000000000003e7d8	ldxr	x8, [x27]
000000000003e7dc	sub	x8, x8, #0x1
000000000003e7e0	stxr	w9, x8, [x27]
000000000003e7e4	cbnz	w9, 0x3e7d8
000000000003e7e8	add	x8, x25, #0x10
000000000003e7ec	stlr	xzr, [x8]
000000000003e7f0	ldxr	x8, [x19]
000000000003e7f4	sub	x8, x8, #0x1
000000000003e7f8	stxr	w9, x8, [x19]
000000000003e7fc	cbnz	w9, 0x3e7f0
000000000003e800	ldr	x8, [x25, #0x30]
000000000003e804	add	x8, x8, #0x1
000000000003e808	str	x8, [x25, #0x30]
000000000003e80c	ldr	x8, [x25, #0x40]
000000000003e810	cbz	x8, 0x3e900
000000000003e814	str	w24, [sp, #0xc]
000000000003e818	stp	x23, x22, [sp, #0x10]
000000000003e81c	str	x20, [sp, #0x20]
000000000003e820	mov	x22, #0x0
000000000003e824	mov	w9, #0x0
000000000003e828	mov	x20, #0x0
000000000003e82c	str	xzr, [sp, #0x40]
000000000003e830	mov	x21, #0x0
000000000003e834	b	0x3e85c
000000000003e838	ldr	x8, [sp, #0x40]
000000000003e83c	add	x8, x8, #0x1
000000000003e840	str	x8, [sp, #0x40]
000000000003e844	mov	w9, #0x1
000000000003e848	add	x20, x20, #0x1
000000000003e84c	ldr	x8, [x25, #0x40]
000000000003e850	add	x22, x22, #0x40
000000000003e854	cmp	x20, x8
000000000003e858	b.hs	0x3e8cc
000000000003e85c	add	x24, x25, x22
000000000003e860	ldrb	w8, [x24, #0x79]
000000000003e864	tbz	w8, #0x0, 0x3e844
000000000003e868	mov	x23, x9
000000000003e86c	add	x0, x24, #0x78
000000000003e870	add	x21, x21, #0x1
000000000003e874	mov	w1, #0x0
000000000003e878	bl	__mi_page_free_collect
000000000003e87c	ldr	w8, [x24, #0x88]
000000000003e880	cbz	w8, 0x3e838
000000000003e884	add	x9, x25, x22
000000000003e888	ldr	w10, [x9, #0x8c]
000000000003e88c	ldr	x11, [sp, #0x38]
000000000003e890	cmp	x10, x11
000000000003e894	b.ne	0x3e8b4
000000000003e898	ldrh	w9, [x9, #0x7c]
000000000003e89c	cmp	w8, w9
000000000003e8a0	b.lo	0x3e844
000000000003e8a4	add	x8, x25, x22
000000000003e8a8	ldr	x8, [x8, #0x98]
000000000003e8ac	cmp	x8, #0x4
000000000003e8b0	b.hs	0x3e844
000000000003e8b4	mov	x9, x23
000000000003e8b8	add	x20, x20, #0x1
000000000003e8bc	ldr	x8, [x25, #0x40]
000000000003e8c0	add	x22, x22, #0x40
000000000003e8c4	cmp	x20, x8
000000000003e8c8	b.lo	0x3e85c
000000000003e8cc	ldr	x8, [sp, #0x40]
000000000003e8d0	cmp	x21, x8
000000000003e8d4	ldp	x22, x20, [sp, #0x18]
000000000003e8d8	ldr	x23, [sp, #0x10]
000000000003e8dc	ldr	w24, [sp, #0xc]
000000000003e8e0	b.eq	0x3e900
000000000003e8e4	tbz	w9, #0x0, 0x3e8f4
000000000003e8e8	ldr	w8, [x25, #0x70]
000000000003e8ec	cmp	w8, w24
000000000003e8f0	b.eq	0x3ea68
000000000003e8f4	ldr	x8, [x25, #0x30]
000000000003e8f8	cmp	x8, #0x2
000000000003e8fc	b.ls	0x3e938
000000000003e900	mov	x0, x25
000000000003e904	ldr	x1, [sp, #0x28]
000000000003e908	mov	x2, #0x0
000000000003e90c	mov	x3, #0x0
000000000003e910	mov	x4, x22
000000000003e914	bl	_mi_segment_reclaim
000000000003e918	adr	x15, #0x55ba8
000000000003e91c	nop
000000000003e920	ldr	w10, [sp, #0x34]
000000000003e924	sub	w8, w10, #0x1
000000000003e928	adrp	x13, 86 ; 0x94000
000000000003e92c	adrp	x9, 86 ; 0x94000
000000000003e930	cbnz	w10, 0x3e68c
000000000003e934	b	0x3e9a8
000000000003e938	nop
000000000003e93c	ldr	x9, #0x55b44
000000000003e940	b	0x3e954
000000000003e944	clrex
000000000003e948	mov	w10, #0x0
000000000003e94c	mov	x9, x8
000000000003e950	cbnz	w10, 0x3e97c
000000000003e954	add	x8, x25, #0x10
000000000003e958	stlr	x9, [x8]
000000000003e95c	ldxr	x8, [x28]
000000000003e960	cmp	x8, x9
000000000003e964	b.ne	0x3e944
000000000003e968	stlxr	w9, x25, [x28]
000000000003e96c	cbnz	w9, 0x3e948
000000000003e970	mov	w10, #0x1
000000000003e974	mov	x9, x8
000000000003e978	cbz	w10, 0x3e954
000000000003e97c	adr	x15, #0x55b44
000000000003e980	nop
000000000003e984	ldxr	x8, [x15]
000000000003e988	add	x8, x8, #0x1
000000000003e98c	stxr	w9, x8, [x15]
000000000003e990	cbnz	w9, 0x3e984
000000000003e994	b	0x3e920
000000000003e998	ldxr	x8, [x27]
000000000003e99c	sub	x8, x8, #0x1
000000000003e9a0	stxr	w9, x8, [x27]
000000000003e9a4	cbnz	w9, 0x3e998
000000000003e9a8	mov	x25, #0x0
000000000003e9ac	ldrb	w8, [sp, #0x4f]
000000000003e9b0	cbz	w8, 0x3ea8c
000000000003e9b4	mov	x25, #0x0
000000000003e9b8	b	0x3ea44
000000000003e9bc	add	x10, x8, #0x1b8
000000000003e9c0	ldxr	x9, [x10]
000000000003e9c4	sub	x9, x9, #0x1
000000000003e9c8	stxr	w11, x9, [x10]
000000000003e9cc	cbnz	w11, 0x3e9c0
000000000003e9d0	add	x10, x8, #0x1b0
000000000003e9d4	ldr	x12, [x8, #0x1b0]
000000000003e9d8	b	0x3e9ec
000000000003e9dc	clrex
000000000003e9e0	mov	w13, #0x0
000000000003e9e4	mov	x12, x11
000000000003e9e8	cbnz	w13, 0x3ea14
000000000003e9ec	cmp	x12, x9
000000000003e9f0	b.ge	0x3ea14
000000000003e9f4	ldxr	x11, [x10]
000000000003e9f8	cmp	x11, x12
000000000003e9fc	b.ne	0x3e9dc
000000000003ea00	stlxr	w12, x9, [x10]
000000000003ea04	cbnz	w12, 0x3e9e0
000000000003ea08	mov	w13, #0x1
000000000003ea0c	mov	x12, x11
000000000003ea10	cbz	w13, 0x3e9ec
000000000003ea14	add	x8, x8, #0x1a8
000000000003ea18	ldxr	x9, [x8]
000000000003ea1c	add	x9, x9, #0x1
000000000003ea20	stxr	w10, x9, [x8]
000000000003ea24	cbnz	w10, 0x3ea18
000000000003ea28	mov	x0, x25
000000000003ea2c	mov	x1, #0x0
000000000003ea30	mov	x2, x24
000000000003ea34	mov	x3, x23
000000000003ea38	mov	x4, x22
000000000003ea3c	mov	x5, x20
000000000003ea40	bl	_mi_segment_init
000000000003ea44	mov	x0, x25
000000000003ea48	ldp	x29, x30, [sp, #0xa0]
000000000003ea4c	ldp	x20, x19, [sp, #0x90]
000000000003ea50	ldp	x22, x21, [sp, #0x80]
000000000003ea54	ldp	x24, x23, [sp, #0x70]
000000000003ea58	ldp	x26, x25, [sp, #0x60]
000000000003ea5c	ldp	x28, x27, [sp, #0x50]
000000000003ea60	add	sp, sp, #0xb0
000000000003ea64	ret
000000000003ea68	add	x3, sp, #0x4f
000000000003ea6c	mov	x0, x25
000000000003ea70	ldr	x1, [sp, #0x28]
000000000003ea74	ldr	x2, [sp, #0x38]
000000000003ea78	mov	x4, x22
000000000003ea7c	bl	_mi_segment_reclaim
000000000003ea80	mov	x25, x0
000000000003ea84	ldrb	w8, [sp, #0x4f]
000000000003ea88	cbnz	w8, 0x3e9b4
000000000003ea8c	cbnz	x25, 0x3ea44
000000000003ea90	mov	x0, #0x0
000000000003ea94	mov	x1, #0x0
000000000003ea98	mov	x2, x24
000000000003ea9c	mov	x3, x23
000000000003eaa0	mov	x4, x22
000000000003eaa4	mov	x5, x20
000000000003eaa8	bl	_mi_segment_init
000000000003eaac	mov	x25, x0
000000000003eab0	b	0x3ea44
_mi_segment_find_free:
000000000003eab4	sub	sp, sp, #0x50
000000000003eab8	stp	x24, x23, [sp, #0x10]
000000000003eabc	stp	x22, x21, [sp, #0x20]
000000000003eac0	stp	x20, x19, [sp, #0x30]
000000000003eac4	stp	x29, x30, [sp, #0x40]
000000000003eac8	add	x29, sp, #0x40
000000000003eacc	ldr	x8, [x0, #0x40]
000000000003ead0	cbz	x8, 0x3ecc0
000000000003ead4	mov	x20, x1
000000000003ead8	mov	x21, x0
000000000003eadc	mov	x22, #0x0
000000000003eae0	add	x19, x0, #0x78
000000000003eae4	mov	w23, #0x1
000000000003eae8	b	0x3eb24
000000000003eaec	ldrb	w8, [x19, #0x1]
000000000003eaf0	orr	w8, w8, #0x8
000000000003eaf4	strb	w8, [x19, #0x1]
000000000003eaf8	tbnz	w0, #0x0, 0x3ecc8
000000000003eafc	and	w8, w8, #0xfe
000000000003eb00	strb	w8, [x19, #0x1]
000000000003eb04	ldr	x8, [x21, #0x38]
000000000003eb08	sub	x8, x8, #0x1
000000000003eb0c	str	x8, [x21, #0x38]
000000000003eb10	add	x22, x22, #0x1
000000000003eb14	ldr	x8, [x21, #0x40]
000000000003eb18	add	x19, x19, #0x40
000000000003eb1c	cmp	x22, x8
000000000003eb20	b.hs	0x3ecc0
000000000003eb24	ldrb	w9, [x19, #0x1]
000000000003eb28	tbnz	w9, #0x0, 0x3eb10
000000000003eb2c	ldp	x8, x10, [x19, #0x30]
000000000003eb30	cbz	x8, 0x3eb3c
000000000003eb34	cbnz	x10, 0x3eb40
000000000003eb38	b	0x3eb4c
000000000003eb3c	cbz	x10, 0x3eca4
000000000003eb40	str	x8, [x10, #0x30]
000000000003eb44	ldr	x8, [x19, #0x30]
000000000003eb48	cbz	x8, 0x3eb50
000000000003eb4c	str	x10, [x8, #0x38]
000000000003eb50	ldr	x9, [x20, #0x28]
000000000003eb54	cmp	x19, x9
000000000003eb58	b.eq	0x3eb98
000000000003eb5c	ldr	x9, [x20, #0x20]
000000000003eb60	cmp	x19, x9
000000000003eb64	b.eq	0x3ebac
000000000003eb68	str	wzr, [x19, #0x10]
000000000003eb6c	stp	xzr, xzr, [x19, #0x30]
000000000003eb70	ldrb	w9, [x19, #0x1]
000000000003eb74	tbnz	w9, #0x2, 0x3ec08
000000000003eb78	ldr	w8, [x21, #0x70]
000000000003eb7c	cmp	w8, #0x3
000000000003eb80	b.ne	0x3ebb4
000000000003eb84	ldr	x1, [x21, #0x48]
000000000003eb88	ldrb	w8, [x19]
000000000003eb8c	madd	x0, x1, x8, x21
000000000003eb90	cbnz	x8, 0x3ebd4
000000000003eb94	b	0x3ebc8
000000000003eb98	ldr	x9, [x19, #0x38]
000000000003eb9c	str	x9, [x20, #0x28]
000000000003eba0	ldr	x9, [x20, #0x20]
000000000003eba4	cmp	x19, x9
000000000003eba8	b.ne	0x3eb68
000000000003ebac	str	x8, [x20, #0x20]
000000000003ebb0	b	0x3eb68
000000000003ebb4	ldr	x8, [x21, #0x60]
000000000003ebb8	lsl	x1, x23, x8
000000000003ebbc	ldrb	w8, [x19]
000000000003ebc0	madd	x0, x1, x8, x21
000000000003ebc4	cbnz	x8, 0x3ebd4
000000000003ebc8	ldr	x8, [x21, #0x50]
000000000003ebcc	add	x0, x0, x8
000000000003ebd0	sub	x1, x1, x8
000000000003ebd4	strb	wzr, [sp, #0xe]
000000000003ebd8	add	x4, sp, #0xe
000000000003ebdc	mov	w2, #0x1
000000000003ebe0	mov	w3, #0x0
000000000003ebe4	bl	_mi_os_commitx
000000000003ebe8	cbz	w0, 0x3eb10
000000000003ebec	ldrb	w9, [sp, #0xe]
000000000003ebf0	ldrb	w8, [x19, #0x1]
000000000003ebf4	cbz	w9, 0x3ec00
000000000003ebf8	orr	w8, w8, #0x8
000000000003ebfc	strb	w8, [x19, #0x1]
000000000003ec00	orr	w9, w8, #0x4
000000000003ec04	strb	w9, [x19, #0x1]
000000000003ec08	orr	w8, w9, #0x1
000000000003ec0c	strb	w8, [x19, #0x1]
000000000003ec10	ldr	x8, [x21, #0x38]
000000000003ec14	add	x8, x8, #0x1
000000000003ec18	str	x8, [x21, #0x38]
000000000003ec1c	ldrb	w8, [x19, #0x1]
000000000003ec20	tbz	w8, #0x1, 0x3ecc8
000000000003ec24	mvn	w9, w8
000000000003ec28	tst	w9, #0x6
000000000003ec2c	b.ne	0x3ecc8
000000000003ec30	ldrb	w9, [x21, #0x8]
000000000003ec34	cbnz	w9, 0x3ecc8
000000000003ec38	and	w8, w8, #0xfffffffd
000000000003ec3c	strb	w8, [x19, #0x1]
000000000003ec40	ldr	w8, [x21, #0x70]
000000000003ec44	cmp	w8, #0x3
000000000003ec48	b.ne	0x3ec60
000000000003ec4c	ldr	x1, [x21, #0x48]
000000000003ec50	ldrb	w8, [x19]
000000000003ec54	madd	x0, x1, x8, x21
000000000003ec58	cbnz	x8, 0x3ec80
000000000003ec5c	b	0x3ec74
000000000003ec60	ldr	x8, [x21, #0x60]
000000000003ec64	lsl	x1, x23, x8
000000000003ec68	ldrb	w8, [x19]
000000000003ec6c	madd	x0, x1, x8, x21
000000000003ec70	cbnz	x8, 0x3ec80
000000000003ec74	ldr	x8, [x21, #0x50]
000000000003ec78	add	x0, x0, x8
000000000003ec7c	sub	x1, x1, x8
000000000003ec80	strb	wzr, [sp, #0xf]
000000000003ec84	cbz	x1, 0x3ecc8
000000000003ec88	add	x2, sp, #0xf
000000000003ec8c	bl	__mi_os_unreset
000000000003ec90	ldrb	w8, [sp, #0xf]
000000000003ec94	cbnz	w8, 0x3eaec
000000000003ec98	tbnz	w0, #0x0, 0x3ecc8
000000000003ec9c	ldrb	w8, [x19, #0x1]
000000000003eca0	b	0x3eafc
000000000003eca4	ldr	x10, [x20, #0x20]
000000000003eca8	cmp	x19, x10
000000000003ecac	b.eq	0x3eb50
000000000003ecb0	ldr	x10, [x20, #0x28]
000000000003ecb4	cmp	x19, x10
000000000003ecb8	b.ne	0x3eb74
000000000003ecbc	b	0x3eb50
000000000003ecc0	mov	x19, #0x0
000000000003ecc4	b	0x3ed40
000000000003ecc8	ldp	x8, x9, [x21, #0x38]
000000000003eccc	cmp	x8, x9
000000000003ecd0	b.ne	0x3ed40
000000000003ecd4	ldr	w8, [x21, #0x70]
000000000003ecd8	cmp	w8, #0x1
000000000003ecdc	b.hi	0x3ed40
000000000003ece0	cbz	w8, 0x3ecf0
000000000003ece4	cmp	w8, #0x1
000000000003ece8	b.ne	0x3ed40
000000000003ecec	add	x20, x20, #0x10
000000000003ecf0	mov	x8, x21
000000000003ecf4	ldp	x9, x10, [x8, #0x18]!
000000000003ecf8	cbz	x9, 0x3ed04
000000000003ecfc	cbnz	x10, 0x3ed08
000000000003ed00	b	0x3ed14
000000000003ed04	cbz	x10, 0x3ed5c
000000000003ed08	str	x9, [x10, #0x18]
000000000003ed0c	ldr	x9, [x8]
000000000003ed10	cbz	x9, 0x3ed18
000000000003ed14	str	x10, [x9, #0x20]
000000000003ed18	ldr	x10, [x20]
000000000003ed1c	cmp	x10, x21
000000000003ed20	b.ne	0x3ed28
000000000003ed24	str	x9, [x20]
000000000003ed28	ldr	x9, [x20, #0x8]
000000000003ed2c	cmp	x9, x21
000000000003ed30	b.ne	0x3ed3c
000000000003ed34	ldr	x9, [x21, #0x20]
000000000003ed38	str	x9, [x20, #0x8]
000000000003ed3c	stp	xzr, xzr, [x8]
000000000003ed40	mov	x0, x19
000000000003ed44	ldp	x29, x30, [sp, #0x40]
000000000003ed48	ldp	x20, x19, [sp, #0x30]
000000000003ed4c	ldp	x22, x21, [sp, #0x20]
000000000003ed50	ldp	x24, x23, [sp, #0x10]
000000000003ed54	add	sp, sp, #0x50
000000000003ed58	ret
000000000003ed5c	ldr	x10, [x20]
000000000003ed60	cmp	x10, x21
000000000003ed64	b.ne	0x3ed40
000000000003ed68	b	0x3ed18
_mi_segment_init:
000000000003ed6c	sub	sp, sp, #0xc0
000000000003ed70	stp	x28, x27, [sp, #0x60]
000000000003ed74	stp	x26, x25, [sp, #0x70]
000000000003ed78	stp	x24, x23, [sp, #0x80]
000000000003ed7c	stp	x22, x21, [sp, #0x90]
000000000003ed80	stp	x20, x19, [sp, #0xa0]
000000000003ed84	stp	x29, x30, [sp, #0xb0]
000000000003ed88	add	x29, sp, #0xb0
000000000003ed8c	mov	x26, x5
000000000003ed90	mov	x28, x4
000000000003ed94	mov	x21, x3
000000000003ed98	mov	x20, x2
000000000003ed9c	mov	x23, x0
000000000003eda0	mov	w8, #0x400000
000000000003eda4	lsr	x9, x8, x3
000000000003eda8	cmp	w2, #0x3
000000000003edac	csinc	x27, x9, xzr, ne
000000000003edb0	lsl	w9, w27, #6
000000000003edb4	add	w9, w9, #0x187
000000000003edb8	and	x22, x9, #0x3fffff00
000000000003edbc	add	x9, x1, x22
000000000003edc0	mov	w10, #0x3ffff
000000000003edc4	add	x9, x9, x10
000000000003edc8	and	x9, x9, #0xfffffffffffc0000
000000000003edcc	cmp	x1, #0x0
000000000003edd0	csel	x25, x8, x9, eq
000000000003edd4	cmp	w2, #0x1
000000000003edd8	b.hi	0x3eea4
000000000003eddc	ldr	x19, [x28, #0x38]
000000000003ede0	mov	w0, #0xd
000000000003ede4	bl	_mi_option_get
000000000003ede8	cmp	x19, x0
000000000003edec	b.hs	0x3eea4
000000000003edf0	mov	w8, #0x0
000000000003edf4	mov	w24, #0x0
000000000003edf8	strb	w24, [sp, #0x47]
000000000003edfc	strb	wzr, [sp, #0x46]
000000000003ee00	cbnz	x23, 0x3eec4
000000000003ee04	strb	w8, [sp, #0x45]
000000000003ee08	strb	wzr, [sp, #0x46]
000000000003ee0c	strb	wzr, [sp, #0x44]
000000000003ee10	cbz	x25, 0x3f7a4
000000000003ee14	nop
000000000003ee18	ldr	x8, #0x3af48
000000000003ee1c	add	x9, x25, x8
000000000003ee20	sub	x9, x9, #0x1
000000000003ee24	sub	x10, x8, #0x1
000000000003ee28	udiv	x11, x9, x8
000000000003ee2c	mul	x11, x11, x8
000000000003ee30	neg	x12, x8
000000000003ee34	and	x9, x9, x12
000000000003ee38	tst	x8, x10
000000000003ee3c	csel	x23, x11, x9, ne
000000000003ee40	mov	w8, #0x3fffff
000000000003ee44	add	x8, x23, x8
000000000003ee48	lsr	x9, x8, #22
000000000003ee4c	cmp	x9, #0x10
000000000003ee50	b.hi	0x3f5cc
000000000003ee54	str	x8, [sp, #0x10]
000000000003ee58	str	x21, [sp, #0x28]
000000000003ee5c	adrp	x8, 86 ; 0x94000
000000000003ee60	ldr	x19, [x8, #0x370]
000000000003ee64	str	x9, [sp, #0x38]
000000000003ee68	cbz	x19, 0x3f8f4
000000000003ee6c	adrp	x21, 86 ; 0x94000
000000000003ee70	cmp	x19, #0x2
000000000003ee74	str	x28, [sp, #0x30]
000000000003ee78	stp	x23, x25, [sp, #0x18]
000000000003ee7c	b.hs	0x3f0c8
000000000003ee80	ldrb	w9, [sp, #0x45]
000000000003ee84	ldr	x23, [x21, #0x3b0]
000000000003ee88	cbz	x23, 0x3f16c
000000000003ee8c	ldr	x8, [x26]
000000000003ee90	adr	x19, #0x453b8
000000000003ee94	nop
000000000003ee98	mov	x25, x23
000000000003ee9c	cbnz	w9, 0x3f000
000000000003eea0	b	0x3f08c
000000000003eea4	mov	w0, #0x3
000000000003eea8	bl	_mi_option_get
000000000003eeac	cmp	x0, #0x0
000000000003eeb0	cset	w24, ne
000000000003eeb4	mov	w8, #0x1
000000000003eeb8	strb	w24, [sp, #0x47]
000000000003eebc	strb	wzr, [sp, #0x46]
000000000003eec0	cbz	x23, 0x3ee04
000000000003eec4	cmp	w20, #0x1
000000000003eec8	b.hi	0x3ef08
000000000003eecc	ldr	w8, [x23, #0x70]
000000000003eed0	cmp	w8, w20
000000000003eed4	b.ne	0x3ef08
000000000003eed8	ldr	x8, [x23, #0x48]
000000000003eedc	cmp	x8, x25
000000000003eee0	b.ne	0x3ef08
000000000003eee4	add	x8, x23, #0x10
000000000003eee8	stlr	xzr, [x8]
000000000003eeec	movi.16b	v0, #0x0
000000000003eef0	mov	x24, x23
000000000003eef4	str	q0, [x24, #0x18]!
000000000003eef8	stp	q0, q0, [x24, #0x40]
000000000003eefc	stp	q0, q0, [x24, #0x20]
000000000003ef00	str	q0, [x24, #0x10]
000000000003ef04	b	0x3f85c
000000000003ef08	ldr	x8, [x23, #0x40]
000000000003ef0c	cbz	x8, 0x3f044
000000000003ef10	str	w20, [sp, #0x38]
000000000003ef14	mov	x20, x28
000000000003ef18	mov	x28, x22
000000000003ef1c	mov	x22, x25
000000000003ef20	mov	x19, x21
000000000003ef24	mov	x25, #0x0
000000000003ef28	add	x26, x23, #0x79
000000000003ef2c	mov	w21, #0x1
000000000003ef30	b	0x3ef50
000000000003ef34	ldrb	w8, [x23, #0x8]
000000000003ef38	cbz	w8, 0x3ef78
000000000003ef3c	add	x25, x25, #0x1
000000000003ef40	ldr	x8, [x23, #0x40]
000000000003ef44	add	x26, x26, #0x40
000000000003ef48	cmp	x25, x8
000000000003ef4c	b.hs	0x3f030
000000000003ef50	ldrb	w8, [x26]
000000000003ef54	tbz	w8, #0x1, 0x3ef3c
000000000003ef58	tbnz	w24, #0x0, 0x3ef34
000000000003ef5c	mov	w0, #0x5
000000000003ef60	bl	_mi_option_get
000000000003ef64	cbz	x0, 0x3ef34
000000000003ef68	ldrb	w8, [x26]
000000000003ef6c	and	w8, w8, #0xfffffffd
000000000003ef70	strb	w8, [x26]
000000000003ef74	b	0x3ef3c
000000000003ef78	ldrb	w8, [x26]
000000000003ef7c	mvn	w9, w8
000000000003ef80	tst	w9, #0x6
000000000003ef84	b.ne	0x3ef3c
000000000003ef88	and	w8, w8, #0xfffffffd
000000000003ef8c	strb	w8, [x26]
000000000003ef90	ldr	w8, [x23, #0x70]
000000000003ef94	cmp	w8, #0x3
000000000003ef98	b.ne	0x3efb0
000000000003ef9c	ldr	x1, [x23, #0x48]
000000000003efa0	ldurb	w8, [x26, #-0x1]
000000000003efa4	madd	x0, x1, x8, x23
000000000003efa8	cbnz	x8, 0x3efd0
000000000003efac	b	0x3efc4
000000000003efb0	ldr	x8, [x23, #0x60]
000000000003efb4	lsl	x1, x21, x8
000000000003efb8	ldurb	w8, [x26, #-0x1]
000000000003efbc	madd	x0, x1, x8, x23
000000000003efc0	cbnz	x8, 0x3efd0
000000000003efc4	ldr	x8, [x23, #0x50]
000000000003efc8	add	x0, x0, x8
000000000003efcc	sub	x1, x1, x8
000000000003efd0	strb	wzr, [sp, #0x50]
000000000003efd4	cbz	x1, 0x3ef3c
000000000003efd8	add	x2, sp, #0x50
000000000003efdc	bl	__mi_os_unreset
000000000003efe0	ldrb	w8, [sp, #0x50]
000000000003efe4	cbz	w8, 0x3ef3c
000000000003efe8	ldrb	w8, [x26]
000000000003efec	orr	w8, w8, #0x8
000000000003eff0	b	0x3ef70
000000000003eff4	add	x8, x21, #0x1
000000000003eff8	subs	x25, x25, #0x1
000000000003effc	b.eq	0x3f16c
000000000003f000	cmp	x8, x23
000000000003f004	csel	x21, x8, xzr, lo
000000000003f008	add	x24, x19, x21, lsl #6
000000000003f00c	ldr	x8, [x24]
000000000003f010	cbz	x8, 0x3eff4
000000000003f014	add	x0, x24, #0x10
000000000003f018	add	x2, sp, #0x48
000000000003f01c	ldr	x1, [sp, #0x38]
000000000003f020	bl	__mi_bitmap_try_find_claim_field
000000000003f024	ldr	x14, [sp, #0x38]
000000000003f028	tbz	w0, #0x0, 0x3eff4
000000000003f02c	b	0x3f15c
000000000003f030	mov	x21, x19
000000000003f034	mov	x25, x22
000000000003f038	mov	x22, x28
000000000003f03c	mov	x28, x20
000000000003f040	ldr	w20, [sp, #0x38]
000000000003f044	cmp	x8, x27
000000000003f048	b.hs	0x3f808
000000000003f04c	strb	wzr, [sp, #0x50]
000000000003f050	mov	w19, #0x1
000000000003f054	add	x4, sp, #0x50
000000000003f058	mov	x0, x23
000000000003f05c	mov	x1, x22
000000000003f060	mov	w2, #0x1
000000000003f064	mov	w3, #0x0
000000000003f068	bl	_mi_os_commitx
000000000003f06c	ldrb	w8, [sp, #0x50]
000000000003f070	cbz	w8, 0x3f078
000000000003f074	strb	w19, [sp, #0x46]
000000000003f078	tbnz	w0, #0x0, 0x3f808
000000000003f07c	b	0x3f7a4
000000000003f080	add	x8, x21, #0x1
000000000003f084	subs	x25, x25, #0x1
000000000003f088	b.eq	0x3f16c
000000000003f08c	cmp	x8, x23
000000000003f090	csel	x21, x8, xzr, lo
000000000003f094	add	x24, x19, x21, lsl #6
000000000003f098	ldr	x8, [x24]
000000000003f09c	and	x9, x8, #0x100
000000000003f0a0	cmp	x8, #0x0
000000000003f0a4	ccmp	x9, #0x0, #0x0, ne
000000000003f0a8	b.ne	0x3f080
000000000003f0ac	add	x0, x24, #0x10
000000000003f0b0	add	x2, sp, #0x48
000000000003f0b4	ldr	x1, [sp, #0x38]
000000000003f0b8	bl	__mi_bitmap_try_find_claim_field
000000000003f0bc	ldr	x14, [sp, #0x38]
000000000003f0c0	tbz	w0, #0x0, 0x3f080
000000000003f0c4	b	0x3f15c
000000000003f0c8	ldr	x8, [x8, #0x370]
000000000003f0cc	cmp	x8, #0x1
000000000003f0d0	b.ne	0x3f934
000000000003f0d4	ldrb	w23, [sp, #0x45]
000000000003f0d8	ldr	x25, [x21, #0x3b0]
000000000003f0dc	cbz	x25, 0x3f16c
000000000003f0e0	ldr	x8, [x26]
000000000003f0e4	adr	x19, #0x45164
000000000003f0e8	nop
000000000003f0ec	mov	x28, x25
000000000003f0f0	b	0x3f100
000000000003f0f4	add	x8, x21, #0x1
000000000003f0f8	subs	x28, x28, #0x1
000000000003f0fc	b.eq	0x3f16c
000000000003f100	cmp	x8, x25
000000000003f104	csel	x21, x8, xzr, lo
000000000003f108	add	x24, x19, x21, lsl #6
000000000003f10c	ldr	x8, [x24]
000000000003f110	cbz	x8, 0x3f0f4
000000000003f114	cmp	w23, #0x0
000000000003f118	cset	w10, eq
000000000003f11c	ubfx	x11, x8, #8, #1
000000000003f120	cmp	w8, #0x0
000000000003f124	cset	w9, lt
000000000003f128	cmp	w8, #0x10, lsl #12
000000000003f12c	cset	w8, lo
000000000003f130	and	w10, w10, w11
000000000003f134	tbnz	w10, #0x0, 0x3f0f4
000000000003f138	orr	w8, w9, w8
000000000003f13c	cbz	w8, 0x3f0f4
000000000003f140	add	x8, x19, x21, lsl #6
000000000003f144	add	x0, x8, #0x10
000000000003f148	add	x2, sp, #0x48
000000000003f14c	ldr	x1, [sp, #0x38]
000000000003f150	bl	__mi_bitmap_try_find_claim_field
000000000003f154	ldr	x14, [sp, #0x38]
000000000003f158	tbz	w0, #0x0, 0x3f0f4
000000000003f15c	ldr	x25, [sp, #0x20]
000000000003f160	str	x21, [x26]
000000000003f164	ldr	x28, [sp, #0x30]
000000000003f168	b	0x3f314
000000000003f16c	ldrb	w19, [sp, #0x47]
000000000003f170	ldrb	w21, [sp, #0x45]
000000000003f174	nop
000000000003f178	ldr	x8, #0x55238
000000000003f17c	cmp	x8, #0x3fe
000000000003f180	ldr	x28, [sp, #0x30]
000000000003f184	ldr	x25, [sp, #0x20]
000000000003f188	b.hi	0x3f5b4
000000000003f18c	cbz	w19, 0x3f1a4
000000000003f190	mov	w0, #0x4
000000000003f194	bl	_mi_option_get
000000000003f198	cmp	x0, #0x0
000000000003f19c	cset	w8, ne
000000000003f1a0	b	0x3f1a8
000000000003f1a4	mov	w8, #0x0
000000000003f1a8	cmp	w21, #0x0
000000000003f1ac	cset	w9, ne
000000000003f1b0	cmp	w19, #0x0
000000000003f1b4	sturb	w8, [x29, #-0x51]
000000000003f1b8	cset	w8, ne
000000000003f1bc	and	w8, w8, w9
000000000003f1c0	sturb	w8, [x29, #-0x52]
000000000003f1c4	sturh	wzr, [x29, #-0x54]
000000000003f1c8	str	xzr, [sp, #0x50]
000000000003f1cc	sub	x1, x29, #0x51
000000000003f1d0	sub	x2, x29, #0x52
000000000003f1d4	sub	x3, x29, #0x54
000000000003f1d8	sub	x4, x29, #0x53
000000000003f1dc	add	x5, sp, #0x50
000000000003f1e0	mov	w0, #0x10000000
000000000003f1e4	bl	__mi_arena_alloc_aligned
000000000003f1e8	cbz	x0, 0x3f248
000000000003f1ec	adr	x9, #0x551c4
000000000003f1f0	nop
000000000003f1f4	ldr	x14, [sp, #0x38]
000000000003f1f8	ldaxr	x8, [x9]
000000000003f1fc	add	x10, x8, #0x1
000000000003f200	stlxr	w11, x10, [x9]
000000000003f204	cbnz	w11, 0x3f1f8
000000000003f208	cmp	x8, #0x400
000000000003f20c	ldr	x13, [sp, #0x10]
000000000003f210	b.lo	0x3f258
000000000003f214	ldaxr	x8, [x9]
000000000003f218	sub	x8, x8, #0x1
000000000003f21c	stlxr	w10, x8, [x9]
000000000003f220	cbnz	w10, 0x3f214
000000000003f224	ldr	x2, [sp, #0x50]
000000000003f228	ldurb	w3, [x29, #-0x51]
000000000003f22c	mov	w1, #0x10000000
000000000003f230	bl	__mi_arena_free
000000000003f234	mov	w8, #0x100
000000000003f238	str	x8, [sp]
000000000003f23c	adr	x0, #0x1f5e6 ; literal pool for: "maximum regions used: %zu GiB (perhaps recompile with a larger setting for MI_HEAP_REGION_MAX_SIZE)"
000000000003f240	nop
000000000003f244	bl	__mi_warning_message
000000000003f248	mov	w8, #0x0
000000000003f24c	ldr	x14, [sp, #0x38]
000000000003f250	cbnz	w8, 0x3f314
000000000003f254	b	0x3f5b4
000000000003f258	adr	x9, #0x44ff0
000000000003f25c	nop
000000000003f260	add	x24, x9, x8, lsl #6
000000000003f264	ldr	x10, [sp, #0x50]
000000000003f268	add	x11, x24, #0x30
000000000003f26c	stlr	x10, [x11]
000000000003f270	add	x10, x24, #0x10
000000000003f274	stlr	xzr, [x10]
000000000003f278	add	x11, x24, #0x18
000000000003f27c	ldurb	w12, [x29, #-0x53]
000000000003f280	sub	x12, x12, #0x1
000000000003f284	stlr	x12, [x11]
000000000003f288	add	x11, x24, #0x20
000000000003f28c	ldurb	w12, [x29, #-0x51]
000000000003f290	sbfx	w12, w12, #0, #1
000000000003f294	sxtw	x12, w12
000000000003f298	stlr	x12, [x11]
000000000003f29c	add	x11, x24, #0x28
000000000003f2a0	stlr	xzr, [x11]
000000000003f2a4	str	xzr, [sp, #0x48]
000000000003f2a8	mov	x11, #-0x1
000000000003f2ac	lsr	x12, x13, #28
000000000003f2b0	lsl	x13, x11, x14
000000000003f2b4	cmp	x14, #0x0
000000000003f2b8	csinv	x13, xzr, x13, eq
000000000003f2bc	cmp	x12, #0x0
000000000003f2c0	csel	x11, x11, x13, ne
000000000003f2c4	ldaxr	x12, [x10]
000000000003f2c8	orr	x12, x12, x11
000000000003f2cc	stlxr	w13, x12, [x10]
000000000003f2d0	cbnz	w13, 0x3f2c4
000000000003f2d4	add	x8, x9, x8, lsl #6
000000000003f2d8	add	x8, x8, #0x8
000000000003f2dc	stlr	x0, [x8]
000000000003f2e0	ldurb	w8, [x29, #-0x52]
000000000003f2e4	ldurb	w9, [x29, #-0x54]
000000000003f2e8	orr	w19, w8, w9, lsl #1
000000000003f2ec	adrp	x9, 85 ; 0x94000
000000000003f2f0	ldr	x8, [x9, #0x370]
000000000003f2f4	cmp	x8, #0x1
000000000003f2f8	b.ne	0x3f978
000000000003f2fc	and	x9, x19, #0xff
000000000003f300	mov	w8, #0x1
000000000003f304	mov	w10, #0x1
000000000003f308	bfi	x10, x9, #8, #8
000000000003f30c	stlr	x10, [x24]
000000000003f310	cbz	w8, 0x3f5b4
000000000003f314	ldar	x8, [x24]
000000000003f318	add	x9, x24, #0x8
000000000003f31c	ldar	x15, [x9]
000000000003f320	add	x10, x24, #0x18
000000000003f324	ldr	x9, [sp, #0x48]
000000000003f328	lsr	x11, x9, #6
000000000003f32c	and	x9, x9, #0x3f
000000000003f330	mov	x12, #-0x1
000000000003f334	ldr	x19, [sp, #0x10]
000000000003f338	lsr	x16, x19, #28
000000000003f33c	lsl	x13, x12, x14
000000000003f340	mvn	x13, x13
000000000003f344	lsl	x9, x13, x9
000000000003f348	cmp	x14, #0x0
000000000003f34c	csel	x9, xzr, x9, eq
000000000003f350	cmp	x16, #0x0
000000000003f354	csel	x9, x12, x9, ne
000000000003f358	add	x10, x10, x11, lsl #3
000000000003f35c	ldaxr	x11, [x10]
000000000003f360	orr	x12, x11, x9
000000000003f364	stlxr	w13, x12, [x10]
000000000003f368	cbnz	w13, 0x3f35c
000000000003f36c	tst	x11, x9
000000000003f370	cset	w9, eq
000000000003f374	strb	w9, [sp, #0x46]
000000000003f378	ubfx	w9, w8, #8, #1
000000000003f37c	strb	w9, [sp, #0x45]
000000000003f380	ubfx	w8, w8, #9, #1
000000000003f384	strb	w8, [sp, #0x44]
000000000003f388	ldr	x21, [sp, #0x48]
000000000003f38c	lsl	w8, w21, #22
000000000003f390	and	x8, x8, #0xfc00000
000000000003f394	add	x23, x15, x8
000000000003f398	ldrb	w9, [sp, #0x47]
000000000003f39c	add	x8, x24, #0x20
000000000003f3a0	cbz	w9, 0x3f430
000000000003f3a4	lsr	x10, x21, #6
000000000003f3a8	and	x9, x21, #0x3f
000000000003f3ac	mov	x11, #-0x1
000000000003f3b0	lsl	x12, x11, x14
000000000003f3b4	mvn	x12, x12
000000000003f3b8	lsl	x9, x12, x9
000000000003f3bc	cmp	x14, #0x0
000000000003f3c0	csel	x9, xzr, x9, eq
000000000003f3c4	cmp	x16, #0x0
000000000003f3c8	csel	x9, x11, x9, ne
000000000003f3cc	add	x8, x8, x10, lsl #3
000000000003f3d0	ldaxr	x10, [x8]
000000000003f3d4	orr	x11, x10, x9
000000000003f3d8	stlxr	w12, x11, [x8]
000000000003f3dc	cbnz	w12, 0x3f3d0
000000000003f3e0	bics	xzr, x9, x10
000000000003f3e4	b.eq	0x3f46c
000000000003f3e8	mov	x26, x16
000000000003f3ec	str	x15, [sp, #0x8]
000000000003f3f0	strb	wzr, [sp, #0x50]
000000000003f3f4	and	x1, x19, #0xffffffffffc00000
000000000003f3f8	add	x4, sp, #0x50
000000000003f3fc	mov	x0, x23
000000000003f400	mov	w2, #0x1
000000000003f404	mov	w3, #0x0
000000000003f408	bl	_mi_os_commitx
000000000003f40c	tbz	w0, #0x0, 0x3f568
000000000003f410	ldrb	w8, [sp, #0x50]
000000000003f414	ldr	x14, [sp, #0x38]
000000000003f418	mov	x16, x26
000000000003f41c	cbz	w8, 0x3f428
000000000003f420	mov	w8, #0x1
000000000003f424	strb	w8, [sp, #0x46]
000000000003f428	ldr	x15, [sp, #0x8]
000000000003f42c	b	0x3f46c
000000000003f430	and	x9, x21, #0x3f
000000000003f434	mov	x10, #-0x1
000000000003f438	lsl	x11, x10, x14
000000000003f43c	mvn	x11, x11
000000000003f440	lsl	x9, x11, x9
000000000003f444	cmp	x14, #0x0
000000000003f448	csel	x9, xzr, x9, eq
000000000003f44c	cmp	x16, #0x0
000000000003f450	csel	x9, x10, x9, ne
000000000003f454	lsr	x10, x21, #3
000000000003f458	and	x10, x10, #0x1ffffffffffffff8
000000000003f45c	ldr	x8, [x8, x10]
000000000003f460	bics	xzr, x9, x8
000000000003f464	cset	w8, eq
000000000003f468	strb	w8, [sp, #0x47]
000000000003f46c	adr	x8, #0x44ddc
000000000003f470	nop
000000000003f474	sub	x8, x24, x8
000000000003f478	add	x8, x8, x21
000000000003f47c	lsl	x26, x8, #1
000000000003f480	add	x8, x24, #0x28
000000000003f484	ldr	x10, [sp, #0x48]
000000000003f488	cbz	x16, 0x3f4ac
000000000003f48c	lsr	x9, x10, #3
000000000003f490	and	x9, x9, #0x1ffffffffffffff8
000000000003f494	add	x8, x8, x9
000000000003f498	ldr	x9, [x8]
000000000003f49c	ldr	x21, [sp, #0x28]
000000000003f4a0	cbz	x9, 0x3f560
000000000003f4a4	mov	x9, #0x0
000000000003f4a8	b	0x3f504
000000000003f4ac	and	x9, x10, #0x3f
000000000003f4b0	mov	x11, #-0x1
000000000003f4b4	lsl	x11, x11, x14
000000000003f4b8	mvn	x11, x11
000000000003f4bc	lsl	x11, x11, x9
000000000003f4c0	cmp	x14, #0x0
000000000003f4c4	csel	x11, xzr, x11, eq
000000000003f4c8	lsr	x10, x10, #3
000000000003f4cc	and	x10, x10, #0x1ffffffffffffff8
000000000003f4d0	add	x8, x8, x10
000000000003f4d4	ldr	x10, [x8]
000000000003f4d8	tst	x10, x11
000000000003f4dc	ldr	x21, [sp, #0x28]
000000000003f4e0	b.eq	0x3f560
000000000003f4e4	mov	x10, #-0x1
000000000003f4e8	lsl	x11, x10, x14
000000000003f4ec	mvn	x11, x11
000000000003f4f0	lsl	x9, x11, x9
000000000003f4f4	cmp	x14, #0x0
000000000003f4f8	csinv	x9, x10, x9, eq
000000000003f4fc	cmp	x16, #0x0
000000000003f500	csel	x9, xzr, x9, ne
000000000003f504	ldaxr	x10, [x8]
000000000003f508	and	x10, x10, x9
000000000003f50c	stlxr	w11, x10, [x8]
000000000003f510	cbnz	w11, 0x3f504
000000000003f514	ldrb	w8, [sp, #0x47]
000000000003f518	cbz	w8, 0x3f54c
000000000003f51c	mov	x24, x15
000000000003f520	strb	wzr, [sp, #0x50]
000000000003f524	and	x1, x19, #0xffffffffffc00000
000000000003f528	add	x2, sp, #0x50
000000000003f52c	mov	x0, x23
000000000003f530	bl	__mi_os_unreset
000000000003f534	ldrb	w8, [sp, #0x50]
000000000003f538	cbz	w8, 0x3f544
000000000003f53c	mov	w8, #0x1
000000000003f540	strb	w8, [sp, #0x46]
000000000003f544	mov	x15, x24
000000000003f548	b	0x3f560
000000000003f54c	mov	w0, #0x5
000000000003f550	mov	x24, x15
000000000003f554	bl	_mi_option_get
000000000003f558	mov	x15, x24
000000000003f55c	cbz	x0, 0x3f51c
000000000003f560	cbnz	x15, 0x3f5f8
000000000003f564	b	0x3f5b8
000000000003f568	add	x9, x24, #0x10
000000000003f56c	ldr	x10, [sp, #0x48]
000000000003f570	and	x8, x10, #0x3f
000000000003f574	mov	x11, #-0x1
000000000003f578	ldr	x13, [sp, #0x38]
000000000003f57c	lsl	x12, x11, x13
000000000003f580	mvn	x12, x12
000000000003f584	lsl	x8, x12, x8
000000000003f588	cmp	x13, #0x0
000000000003f58c	csinv	x8, x11, x8, eq
000000000003f590	cmp	x26, #0x0
000000000003f594	csel	x8, xzr, x8, ne
000000000003f598	lsr	x10, x10, #3
000000000003f59c	and	x10, x10, #0x1ffffffffffffff8
000000000003f5a0	add	x9, x9, x10
000000000003f5a4	ldaxr	x10, [x9]
000000000003f5a8	and	x10, x10, x8
000000000003f5ac	stlxr	w11, x10, [x9]
000000000003f5b0	cbnz	w11, 0x3f5a4
000000000003f5b4	ldr	x21, [sp, #0x28]
000000000003f5b8	ldr	x23, [sp, #0x18]
000000000003f5bc	str	x23, [sp]
000000000003f5c0	adr	x0, #0x1f2c6 ; literal pool for: "unable to allocate from region: size %zu\n"
000000000003f5c4	nop
000000000003f5c8	bl	__mi_warning_message
000000000003f5cc	add	x1, sp, #0x47
000000000003f5d0	add	x2, sp, #0x45
000000000003f5d4	add	x3, sp, #0x44
000000000003f5d8	add	x4, sp, #0x46
000000000003f5dc	add	x5, sp, #0x50
000000000003f5e0	mov	x0, x23
000000000003f5e4	bl	__mi_arena_alloc_aligned
000000000003f5e8	mov	x23, x0
000000000003f5ec	ldr	x8, [sp, #0x50]
000000000003f5f0	mov	w26, #0x1
000000000003f5f4	bfi	x26, x8, #1, #63
000000000003f5f8	cbz	x23, 0x3f7a4
000000000003f5fc	ldrb	w8, [sp, #0x47]
000000000003f600	cbz	w8, 0x3f60c
000000000003f604	mov	w8, #0x1
000000000003f608	b	0x3f640
000000000003f60c	strb	wzr, [sp, #0x50]
000000000003f610	mov	w19, #0x1
000000000003f614	add	x4, sp, #0x50
000000000003f618	mov	x0, x23
000000000003f61c	mov	x1, x22
000000000003f620	mov	w2, #0x1
000000000003f624	mov	w3, #0x0
000000000003f628	bl	_mi_os_commitx
000000000003f62c	ldrb	w8, [sp, #0x50]
000000000003f630	cbz	w8, 0x3f638
000000000003f634	strb	w19, [sp, #0x46]
000000000003f638	tbz	w0, #0x0, 0x3f78c
000000000003f63c	mov	w8, #0x0
000000000003f640	str	x26, [x23]
000000000003f644	ldrb	w9, [sp, #0x45]
000000000003f648	ldrb	w10, [sp, #0x44]
000000000003f64c	and	w10, w10, #0x1
000000000003f650	orr	w9, w10, w9
000000000003f654	strb	w9, [x23, #0x8]
000000000003f658	strb	w8, [x23, #0x9]
000000000003f65c	ldr	x8, [x28, #0x70]
000000000003f660	adr	x9, #0x55220
000000000003f664	nop
000000000003f668	cmp	x8, x9
000000000003f66c	cset	w10, hs
000000000003f670	add	x9, x9, #0x240
000000000003f674	cmp	x8, x9
000000000003f678	cset	w9, lo
000000000003f67c	and	w9, w10, w9
000000000003f680	add	x11, x8, #0x18
000000000003f684	tbnz	x25, #0x3f, 0x3f6f8
000000000003f688	cbz	w9, 0x3f76c
000000000003f68c	ldxr	x9, [x11]
000000000003f690	add	x10, x9, #0x1
000000000003f694	stxr	w12, x10, [x11]
000000000003f698	cbnz	w12, 0x3f68c
000000000003f69c	add	x11, x8, #0x10
000000000003f6a0	ldr	x13, [x8, #0x10]
000000000003f6a4	b	0x3f6b8
000000000003f6a8	clrex
000000000003f6ac	mov	w14, #0x0
000000000003f6b0	mov	x13, x12
000000000003f6b4	cbnz	w14, 0x3f6e0
000000000003f6b8	cmp	x13, x9
000000000003f6bc	b.gt	0x3f6e0
000000000003f6c0	ldxr	x12, [x11]
000000000003f6c4	cmp	x12, x13
000000000003f6c8	b.ne	0x3f6a8
000000000003f6cc	stlxr	w13, x10, [x11]
000000000003f6d0	cbnz	w13, 0x3f6ac
000000000003f6d4	mov	w14, #0x1
000000000003f6d8	mov	x13, x12
000000000003f6dc	cbz	w14, 0x3f6b8
000000000003f6e0	mov	w9, #0x1
000000000003f6e4	ldxr	x10, [x8]
000000000003f6e8	add	x10, x10, #0x1
000000000003f6ec	stxr	w11, x10, [x8]
000000000003f6f0	cbnz	w11, 0x3f6e4
000000000003f6f4	b	0x3f7d8
000000000003f6f8	cbz	w9, 0x3f7ac
000000000003f6fc	ldxr	x9, [x11]
000000000003f700	sub	x9, x9, #0x1
000000000003f704	stxr	w10, x9, [x11]
000000000003f708	cbnz	w10, 0x3f6fc
000000000003f70c	add	x10, x8, #0x10
000000000003f710	ldr	x12, [x8, #0x10]
000000000003f714	b	0x3f728
000000000003f718	clrex
000000000003f71c	mov	w13, #0x0
000000000003f720	mov	x12, x11
000000000003f724	cbnz	w13, 0x3f750
000000000003f728	cmp	x12, x9
000000000003f72c	b.ge	0x3f750
000000000003f730	ldxr	x11, [x10]
000000000003f734	cmp	x11, x12
000000000003f738	b.ne	0x3f718
000000000003f73c	stlxr	w12, x9, [x10]
000000000003f740	cbnz	w12, 0x3f71c
000000000003f744	mov	w13, #0x1
000000000003f748	mov	x12, x11
000000000003f74c	cbz	w13, 0x3f728
000000000003f750	add	x8, x8, #0x8
000000000003f754	ldxr	x9, [x8]
000000000003f758	add	x9, x9, #0x1
000000000003f75c	stxr	w10, x9, [x8]
000000000003f760	cbnz	w10, 0x3f754
000000000003f764	mov	x9, #-0x1
000000000003f768	b	0x3f7d8
000000000003f76c	ldp	x11, x10, [x8, #0x10]
000000000003f770	add	x9, x10, #0x1
000000000003f774	str	x9, [x8, #0x18]
000000000003f778	cmp	x10, x11
000000000003f77c	b.lt	0x3f784
000000000003f780	str	x9, [x8, #0x10]
000000000003f784	mov	w9, #0x1
000000000003f788	b	0x3f7cc
000000000003f78c	mov	x0, x23
000000000003f790	mov	w1, #0x400000
000000000003f794	mov	x2, x26
000000000003f798	mov	w3, #0x0
000000000003f79c	mov	w4, #0x0
000000000003f7a0	bl	__mi_mem_free
000000000003f7a4	mov	x23, #0x0
000000000003f7a8	b	0x3f8d0
000000000003f7ac	ldp	x10, x9, [x8, #0x10]
000000000003f7b0	sub	x9, x9, #0x1
000000000003f7b4	str	x9, [x8, #0x18]
000000000003f7b8	cmp	x9, x10
000000000003f7bc	b.le	0x3f7c4
000000000003f7c0	str	x9, [x8, #0x10]
000000000003f7c4	add	x8, x8, #0x8
000000000003f7c8	mov	x9, #-0x1
000000000003f7cc	ldr	x10, [x8]
000000000003f7d0	add	x10, x10, #0x1
000000000003f7d4	str	x10, [x8]
000000000003f7d8	ldp	x8, x10, [x28, #0x38]
000000000003f7dc	add	x8, x8, x9
000000000003f7e0	str	x8, [x28, #0x38]
000000000003f7e4	cmp	x8, x10
000000000003f7e8	b.ls	0x3f7f0
000000000003f7ec	str	x8, [x28, #0x40]
000000000003f7f0	ldp	x8, x9, [x28, #0x48]
000000000003f7f4	add	x8, x8, x25
000000000003f7f8	str	x8, [x28, #0x48]
000000000003f7fc	cmp	x8, x9
000000000003f800	b.ls	0x3f808
000000000003f804	str	x8, [x28, #0x50]
000000000003f808	add	x8, x23, #0x10
000000000003f80c	stlr	xzr, [x8]
000000000003f810	add	x24, x23, #0x18
000000000003f814	sub	x1, x22, #0x18
000000000003f818	mov	x0, x24
000000000003f81c	bl	0x553c8 ; symbol stub for: _bzero
000000000003f820	mov	x8, #0x0
000000000003f824	add	x9, x23, x8, lsl #6
000000000003f828	strb	w8, [x9, #0x78]
000000000003f82c	ldrb	w10, [x9, #0x79]
000000000003f830	ldrb	w11, [sp, #0x47]
000000000003f834	and	w10, w10, #0xfffffff1
000000000003f838	orr	w10, w10, w11, lsl #2
000000000003f83c	ldrb	w11, [sp, #0x46]
000000000003f840	and	w10, w10, #0xfffffff7
000000000003f844	orr	w10, w10, w11, lsl #3
000000000003f848	strb	w10, [x9, #0x79]
000000000003f84c	add	w8, w8, #0x1
000000000003f850	and	x8, x8, #0xff
000000000003f854	cmp	x27, x8
000000000003f858	b.hi	0x3f824
000000000003f85c	str	w20, [x23, #0x70]
000000000003f860	str	x21, [x23, #0x60]
000000000003f864	stp	x27, x25, [x23, #0x40]
000000000003f868	str	x22, [x23, #0x50]
000000000003f86c	bl	0x556c8 ; symbol stub for: _pthread_self
000000000003f870	bl	0x55680 ; symbol stub for: _pthread_mach_thread_np
000000000003f874	mov	w8, w0
000000000003f878	add	x9, x23, #0x68
000000000003f87c	stlr	x8, [x9]
000000000003f880	nop
000000000003f884	ldr	x8, #0x39204
000000000003f888	eor	x8, x8, x23
000000000003f88c	str	x8, [x23, #0x58]
000000000003f890	cmp	w20, #0x1
000000000003f894	b.hi	0x3f8d0
000000000003f898	ldr	w8, [x23, #0x70]
000000000003f89c	add	x9, x28, #0x10
000000000003f8a0	cmp	w8, #0x0
000000000003f8a4	csel	x10, xzr, x28, ne
000000000003f8a8	cmp	w8, #0x1
000000000003f8ac	csel	x8, x9, x10, eq
000000000003f8b0	str	xzr, [x24]
000000000003f8b4	ldr	x9, [x8, #0x8]
000000000003f8b8	str	x9, [x23, #0x20]
000000000003f8bc	add	x10, x9, #0x18
000000000003f8c0	cmp	x9, #0x0
000000000003f8c4	csel	x9, x8, x10, eq
000000000003f8c8	str	x23, [x9]
000000000003f8cc	str	x23, [x8, #0x8]
000000000003f8d0	mov	x0, x23
000000000003f8d4	ldp	x29, x30, [sp, #0xb0]
000000000003f8d8	ldp	x20, x19, [sp, #0xa0]
000000000003f8dc	ldp	x22, x21, [sp, #0x90]
000000000003f8e0	ldp	x24, x23, [sp, #0x80]
000000000003f8e4	ldp	x26, x25, [sp, #0x70]
000000000003f8e8	ldp	x28, x27, [sp, #0x60]
000000000003f8ec	add	sp, sp, #0xc0
000000000003f8f0	ret
000000000003f8f4	adr	x21, #0x54a7c
000000000003f8f8	nop
000000000003f8fc	ldar	x19, [x21]
000000000003f900	cbnz	x19, 0x3ee6c
000000000003f904	mov	w0, #0xf
000000000003f908	mov	x24, x8
000000000003f90c	bl	_mi_option_get
000000000003f910	cmp	x0, #0x1
000000000003f914	csinc	x19, x0, xzr, gt
000000000003f918	stlr	x19, [x21]
000000000003f91c	str	x19, [sp]
000000000003f920	adr	x0, #0x1e990 ; literal pool for: "using %zd numa regions\n"
000000000003f924	nop
000000000003f928	bl	__mi_verbose_message
000000000003f92c	mov	x8, x24
000000000003f930	b	0x3ee6c
000000000003f934	nop
000000000003f938	ldr	x8, #0x54a38
000000000003f93c	cbnz	x8, 0x3f0d4
000000000003f940	adr	x19, #0x54a30
000000000003f944	nop
000000000003f948	ldar	x8, [x19]
000000000003f94c	cbnz	x8, 0x3f0d4
000000000003f950	mov	w0, #0xf
000000000003f954	bl	_mi_option_get
000000000003f958	cmp	x0, #0x1
000000000003f95c	csinc	x8, x0, xzr, gt
000000000003f960	stlr	x8, [x19]
000000000003f964	str	x8, [sp]
000000000003f968	adr	x0, #0x1e948 ; literal pool for: "using %zd numa regions\n"
000000000003f96c	nop
000000000003f970	bl	__mi_verbose_message
000000000003f974	b	0x3f0d4
000000000003f978	ldr	x8, [x9, #0x370]
000000000003f97c	cbnz	x8, 0x3f2fc
000000000003f980	adr	x21, #0x549f0
000000000003f984	nop
000000000003f988	ldar	x8, [x21]
000000000003f98c	cbnz	x8, 0x3f2fc
000000000003f990	mov	w0, #0xf
000000000003f994	bl	_mi_option_get
000000000003f998	cmp	x0, #0x1
000000000003f99c	csinc	x8, x0, xzr, gt
000000000003f9a0	stlr	x8, [x21]
000000000003f9a4	str	x8, [sp]
000000000003f9a8	adr	x0, #0x1e908 ; literal pool for: "using %zd numa regions\n"
000000000003f9ac	nop
000000000003f9b0	bl	__mi_verbose_message
000000000003f9b4	ldr	x14, [sp, #0x38]
000000000003f9b8	b	0x3f2fc
__mi_bitmap_try_find_claim_field:
000000000003f9bc	ldr	x11, [x0]
000000000003f9c0	cmn	x11, #0x1
000000000003f9c4	b.eq	0x3f9fc
000000000003f9c8	mov	x8, #-0x1
000000000003f9cc	lsl	x9, x8, x1
000000000003f9d0	cmp	x1, #0x0
000000000003f9d4	csinv	x9, xzr, x9, eq
000000000003f9d8	cmp	x1, #0x3f
000000000003f9dc	csel	x10, x8, x9, hi
000000000003f9e0	mov	w8, #0x40
000000000003f9e4	sub	x8, x8, x1
000000000003f9e8	mvn	x9, x11
000000000003f9ec	rbit	x9, x9
000000000003f9f0	clz	x9, x9
000000000003f9f4	cmp	x9, x8
000000000003f9f8	b.ls	0x3fa04
000000000003f9fc	mov	w0, #0x0
000000000003fa00	ret
000000000003fa04	lsl	x10, x10, x9
000000000003fa08	cmp	x1, #0x1
000000000003fa0c	b.ne	0x3fa88
000000000003fa10	b	0x3fa24
000000000003fa14	add	x9, x9, #0x1
000000000003fa18	lsl	x10, x10, #1
000000000003fa1c	cmp	x9, x8
000000000003fa20	b.hi	0x3f9fc
000000000003fa24	tst	x11, x10
000000000003fa28	b.ne	0x3fa14
000000000003fa2c	ldaxr	x12, [x0]
000000000003fa30	cmp	x12, x11
000000000003fa34	b.ne	0x3fa54
000000000003fa38	orr	x11, x11, x10
000000000003fa3c	stlxr	w13, x11, [x0]
000000000003fa40	cbnz	w13, 0x3fa58
000000000003fa44	mov	w13, #0x1
000000000003fa48	mov	x11, x12
000000000003fa4c	tbz	w13, #0x0, 0x3fa1c
000000000003fa50	b	0x3fac8
000000000003fa54	clrex
000000000003fa58	mov	w13, #0x0
000000000003fa5c	mov	x11, x12
000000000003fa60	tbz	w13, #0x0, 0x3fa1c
000000000003fa64	b	0x3fac8
000000000003fa68	clz	x12, x12
000000000003fa6c	eor	x12, x12, #0x3f
000000000003fa70	sub	x9, x12, x9
000000000003fa74	add	x13, x9, #0x1
000000000003fa78	add	x9, x12, #0x1
000000000003fa7c	lsl	x10, x10, x13
000000000003fa80	cmp	x9, x8
000000000003fa84	b.hi	0x3f9fc
000000000003fa88	ands	x12, x11, x10
000000000003fa8c	b.ne	0x3fa68
000000000003fa90	ldaxr	x12, [x0]
000000000003fa94	cmp	x12, x11
000000000003fa98	b.ne	0x3fab8
000000000003fa9c	orr	x11, x11, x10
000000000003faa0	stlxr	w13, x11, [x0]
000000000003faa4	cbnz	w13, 0x3fabc
000000000003faa8	mov	w13, #0x1
000000000003faac	mov	x11, x12
000000000003fab0	cbz	w13, 0x3fa80
000000000003fab4	b	0x3fac8
000000000003fab8	clrex
000000000003fabc	mov	w13, #0x0
000000000003fac0	mov	x11, x12
000000000003fac4	cbz	w13, 0x3fa80
000000000003fac8	str	x9, [x2]
000000000003facc	mov	w0, #0x1
000000000003fad0	ret
__mi_arena_alloc_aligned:
000000000003fad4	sub	sp, sp, #0x70
000000000003fad8	stp	x28, x27, [sp, #0x10]
000000000003fadc	stp	x26, x25, [sp, #0x20]
000000000003fae0	stp	x24, x23, [sp, #0x30]
000000000003fae4	stp	x22, x21, [sp, #0x40]
000000000003fae8	stp	x20, x19, [sp, #0x50]
000000000003faec	stp	x29, x30, [sp, #0x60]
000000000003faf0	add	x29, sp, #0x60
000000000003faf4	mov	x21, x5
000000000003faf8	mov	x24, x4
000000000003fafc	mov	x19, x3
000000000003fb00	mov	x20, x2
000000000003fb04	mov	x23, x1
000000000003fb08	mov	x22, x0
000000000003fb0c	str	xzr, [x5]
000000000003fb10	strb	wzr, [x4]
000000000003fb14	strb	wzr, [x3]
000000000003fb18	cmp	x0, #0x800, lsl #12
000000000003fb1c	b.lo	0x3fc18
000000000003fb20	nop
000000000003fb24	ldr	x8, #0x5481c
000000000003fb28	cbz	x8, 0x3fc18
000000000003fb2c	mov	w8, #0xffffff
000000000003fb30	add	x8, x22, x8
000000000003fb34	lsr	x25, x8, #24
000000000003fb38	adrp	x8, 85 ; 0x94000
000000000003fb3c	ldr	x9, [x8, #0x370]
000000000003fb40	cmp	x9, #0x1
000000000003fb44	b.ne	0x3fc84
000000000003fb48	mov	x26, #0x0
000000000003fb4c	adr	x27, #0x54734
000000000003fb50	nop
000000000003fb54	b	0x3fb88
000000000003fb58	mov	x1, x26
000000000003fb5c	mov	x2, x25
000000000003fb60	mov	x3, x23
000000000003fb64	mov	x4, x20
000000000003fb68	mov	x5, x19
000000000003fb6c	mov	x6, x24
000000000003fb70	mov	x7, x21
000000000003fb74	bl	_mi_arena_alloc_from
000000000003fb78	cbnz	x0, 0x3fc64
000000000003fb7c	add	x26, x26, #0x1
000000000003fb80	cmp	x26, #0x40
000000000003fb84	b.eq	0x3fbb4
000000000003fb88	add	x8, x27, x26, lsl #3
000000000003fb8c	ldr	x0, [x8, #0x400]
000000000003fb90	cbz	x0, 0x3fbb4
000000000003fb94	ldr	w8, [x0, #0x18]
000000000003fb98	cmp	w8, #0x0
000000000003fb9c	b.gt	0x3fb7c
000000000003fba0	ldrb	w8, [x20]
000000000003fba4	cbnz	w8, 0x3fb58
000000000003fba8	ldrb	w8, [x0, #0x1e]
000000000003fbac	cbnz	w8, 0x3fb7c
000000000003fbb0	b	0x3fb58
000000000003fbb4	mov	x26, #0x0
000000000003fbb8	b	0x3fbec
000000000003fbbc	mov	x1, x26
000000000003fbc0	mov	x2, x25
000000000003fbc4	mov	x3, x23
000000000003fbc8	mov	x4, x20
000000000003fbcc	mov	x5, x19
000000000003fbd0	mov	x6, x24
000000000003fbd4	mov	x7, x21
000000000003fbd8	bl	_mi_arena_alloc_from
000000000003fbdc	cbnz	x0, 0x3fc64
000000000003fbe0	add	x26, x26, #0x1
000000000003fbe4	cmp	x26, #0x40
000000000003fbe8	b.eq	0x3fc18
000000000003fbec	add	x8, x27, x26, lsl #3
000000000003fbf0	ldr	x0, [x8, #0x400]
000000000003fbf4	cbz	x0, 0x3fc18
000000000003fbf8	ldr	w8, [x0, #0x18]
000000000003fbfc	cmp	w8, #0x1
000000000003fc00	b.lt	0x3fbe0
000000000003fc04	ldrb	w8, [x20]
000000000003fc08	cbnz	w8, 0x3fbbc
000000000003fc0c	ldrb	w8, [x0, #0x1e]
000000000003fc10	cbnz	w8, 0x3fbe0
000000000003fc14	b	0x3fbbc
000000000003fc18	mov	w0, #0x10
000000000003fc1c	bl	_mi_option_get
000000000003fc20	cbz	x0, 0x3fc3c
000000000003fc24	bl	0x55374 ; symbol stub for: ___error
000000000003fc28	mov	x8, x0
000000000003fc2c	mov	x0, #0x0
000000000003fc30	mov	w9, #0xc
000000000003fc34	str	w9, [x8]
000000000003fc38	b	0x3fc64
000000000003fc3c	mov	w8, #0x1
000000000003fc40	strb	w8, [x24]
000000000003fc44	str	xzr, [x21]
000000000003fc48	ldrb	w1, [x23]
000000000003fc4c	mov	x0, x22
000000000003fc50	mov	x2, x20
000000000003fc54	bl	__mi_os_alloc_aligned
000000000003fc58	cbz	x0, 0x3fc64
000000000003fc5c	ldrb	w8, [x20]
000000000003fc60	strb	w8, [x19]
000000000003fc64	ldp	x29, x30, [sp, #0x60]
000000000003fc68	ldp	x20, x19, [sp, #0x50]
000000000003fc6c	ldp	x22, x21, [sp, #0x40]
000000000003fc70	ldp	x24, x23, [sp, #0x30]
000000000003fc74	ldp	x26, x25, [sp, #0x20]
000000000003fc78	ldp	x28, x27, [sp, #0x10]
000000000003fc7c	add	sp, sp, #0x70
000000000003fc80	ret
000000000003fc84	ldr	x8, [x8, #0x370]
000000000003fc88	cbnz	x8, 0x3fb48
000000000003fc8c	adr	x26, #0x546e4
000000000003fc90	nop
000000000003fc94	ldar	x8, [x26]
000000000003fc98	cbnz	x8, 0x3fb48
000000000003fc9c	mov	w0, #0xf
000000000003fca0	bl	_mi_option_get
000000000003fca4	cmp	x0, #0x1
000000000003fca8	csinc	x8, x0, xzr, gt
000000000003fcac	stlr	x8, [x26]
000000000003fcb0	str	x8, [sp]
000000000003fcb4	adr	x0, #0x1e5fc ; literal pool for: "using %zd numa regions\n"
000000000003fcb8	nop
000000000003fcbc	bl	__mi_verbose_message
000000000003fcc0	b	0x3fb48
__mi_os_unreset:
000000000003fcc4	stp	x22, x21, [sp, #-0x30]!
000000000003fcc8	stp	x20, x19, [sp, #0x10]
000000000003fccc	stp	x29, x30, [sp, #0x20]
000000000003fcd0	add	x29, sp, #0x20
000000000003fcd4	mov	x21, x2
000000000003fcd8	mov	x19, x1
000000000003fcdc	mov	x20, x0
000000000003fce0	mov	w0, #0x5
000000000003fce4	bl	_mi_option_get
000000000003fce8	cbz	x0, 0x3fd10
000000000003fcec	mov	x0, x20
000000000003fcf0	mov	x1, x19
000000000003fcf4	mov	w2, #0x1
000000000003fcf8	mov	w3, #0x1
000000000003fcfc	mov	x4, x21
000000000003fd00	ldp	x29, x30, [sp, #0x20]
000000000003fd04	ldp	x20, x19, [sp, #0x10]
000000000003fd08	ldp	x22, x21, [sp], #0x30
000000000003fd0c	b	_mi_os_commitx
000000000003fd10	strb	wzr, [x21]
000000000003fd14	cbz	x20, 0x3fe1c
000000000003fd18	cbz	x19, 0x3fe1c
000000000003fd1c	nop
000000000003fd20	ldr	x9, #0x3a040
000000000003fd24	add	x8, x20, x9
000000000003fd28	sub	x8, x8, #0x1
000000000003fd2c	sub	x10, x9, #0x1
000000000003fd30	tst	x9, x10
000000000003fd34	b.ne	0x3fd58
000000000003fd38	neg	x9, x9
000000000003fd3c	and	x8, x8, x9
000000000003fd40	add	x10, x20, x19
000000000003fd44	and	x9, x9, x10
000000000003fd48	sub	x8, x9, x8
000000000003fd4c	cmp	x8, #0x1
000000000003fd50	b.ge	0x3fd78
000000000003fd54	b	0x3fe1c
000000000003fd58	udiv	x8, x8, x9
000000000003fd5c	mul	x8, x8, x9
000000000003fd60	add	x10, x20, x19
000000000003fd64	udiv	x10, x10, x9
000000000003fd68	mul	x9, x10, x9
000000000003fd6c	sub	x8, x9, x8
000000000003fd70	cmp	x8, #0x1
000000000003fd74	b.lt	0x3fe1c
000000000003fd78	neg	x9, x8
000000000003fd7c	adr	x10, #0x54b9c
000000000003fd80	nop
000000000003fd84	ldxr	x11, [x10]
000000000003fd88	add	x12, x11, x9
000000000003fd8c	stxr	w13, x12, [x10]
000000000003fd90	cbnz	w13, 0x3fd84
000000000003fd94	sub	x10, x11, x8
000000000003fd98	nop
000000000003fd9c	ldr	x13, #0x54b74
000000000003fda0	adr	x11, #0x54b70
000000000003fda4	nop
000000000003fda8	b	0x3fdbc
000000000003fdac	clrex
000000000003fdb0	mov	w14, #0x0
000000000003fdb4	mov	x13, x12
000000000003fdb8	cbnz	w14, 0x3fde4
000000000003fdbc	cmp	x13, x10
000000000003fdc0	b.ge	0x3fde4
000000000003fdc4	ldxr	x12, [x11]
000000000003fdc8	cmp	x12, x13
000000000003fdcc	b.ne	0x3fdac
000000000003fdd0	stlxr	w13, x10, [x11]
000000000003fdd4	cbnz	w13, 0x3fdb0
000000000003fdd8	mov	w14, #0x1
000000000003fddc	mov	x13, x12
000000000003fde0	cbz	w14, 0x3fdbc
000000000003fde4	tbnz	x8, #0x3f, 0x3fe04
000000000003fde8	adr	x9, #0x54b20
000000000003fdec	nop
000000000003fdf0	ldxr	x10, [x9]
000000000003fdf4	add	x10, x10, x8
000000000003fdf8	stxr	w11, x10, [x9]
000000000003fdfc	cbnz	w11, 0x3fdf0
000000000003fe00	b	0x3fe1c
000000000003fe04	adr	x8, #0x54afc
000000000003fe08	nop
000000000003fe0c	ldxr	x10, [x8]
000000000003fe10	add	x10, x10, x9
000000000003fe14	stxr	w11, x10, [x8]
000000000003fe18	cbnz	w11, 0x3fe0c
000000000003fe1c	mov	w0, #0x1
000000000003fe20	ldp	x29, x30, [sp, #0x20]
000000000003fe24	ldp	x20, x19, [sp, #0x10]
000000000003fe28	ldp	x22, x21, [sp], #0x30
000000000003fe2c	ret
_mi_arena_alloc_from:
000000000003fe30	sub	sp, sp, #0x70
000000000003fe34	stp	x28, x27, [sp, #0x10]
000000000003fe38	stp	x26, x25, [sp, #0x20]
000000000003fe3c	stp	x24, x23, [sp, #0x30]
000000000003fe40	stp	x22, x21, [sp, #0x40]
000000000003fe44	stp	x20, x19, [sp, #0x50]
000000000003fe48	stp	x29, x30, [sp, #0x60]
000000000003fe4c	add	x29, sp, #0x60
000000000003fe50	mov	x21, x6
000000000003fe54	mov	x23, x5
000000000003fe58	mov	x24, x4
000000000003fe5c	mov	x20, x2
000000000003fe60	mov	x22, x0
000000000003fe64	add	x8, x0, #0x20
000000000003fe68	ldar	x8, [x8]
000000000003fe6c	ldr	x9, [x0, #0x10]
000000000003fe70	cmp	x2, #0x1
000000000003fe74	b.ne	0x3ffa0
000000000003fe78	cbz	x9, 0x40378
000000000003fe7c	mov	x11, #0x0
000000000003fe80	mov	w12, #0x1
000000000003fe84	mov	x10, x8
000000000003fe88	b	0x3fe9c
000000000003fe8c	add	x11, x11, #0x1
000000000003fe90	add	x10, x10, #0x1
000000000003fe94	cmp	x11, x9
000000000003fe98	b.eq	0x40378
000000000003fe9c	cmp	x10, x9
000000000003fea0	csel	x10, x10, xzr, lo
000000000003fea4	add	x13, x22, x10, lsl #3
000000000003fea8	ldr	x15, [x13, #0x38]
000000000003feac	cmn	x15, #0x1
000000000003feb0	b.eq	0x3fe8c
000000000003feb4	mvn	x14, x15
000000000003feb8	rbit	x14, x14
000000000003febc	clz	x2, x14
000000000003fec0	cmp	x2, #0x3f
000000000003fec4	b.hi	0x3fe8c
000000000003fec8	add	x13, x13, #0x38
000000000003fecc	lsl	x14, x12, x2
000000000003fed0	b	0x3fee4
000000000003fed4	add	x2, x2, #0x1
000000000003fed8	lsl	x14, x14, #1
000000000003fedc	cmp	x2, #0x40
000000000003fee0	b.hs	0x3fe8c
000000000003fee4	tst	x14, x15
000000000003fee8	b.ne	0x3fed4
000000000003feec	ldaxr	x16, [x13]
000000000003fef0	cmp	x16, x15
000000000003fef4	b.ne	0x3ff14
000000000003fef8	orr	x15, x14, x15
000000000003fefc	stlxr	w17, x15, [x13]
000000000003ff00	cbz	w17, 0x3ff28
000000000003ff04	mov	w17, #0x0
000000000003ff08	mov	x15, x16
000000000003ff0c	tbz	w17, #0x0, 0x3fedc
000000000003ff10	b	0x3ff34
000000000003ff14	clrex
000000000003ff18	mov	w17, #0x0
000000000003ff1c	mov	x15, x16
000000000003ff20	tbz	w17, #0x0, 0x3fedc
000000000003ff24	b	0x3ff34
000000000003ff28	mov	w17, #0x1
000000000003ff2c	mov	x15, x16
000000000003ff30	tbz	w17, #0x0, 0x3fedc
000000000003ff34	str	x3, [sp]
000000000003ff38	add	x26, x2, x10, lsl #6
000000000003ff3c	add	x9, x22, #0x20
000000000003ff40	stlr	x8, [x9]
000000000003ff44	ldar	x8, [x22]
000000000003ff48	add	x25, x8, x26, lsl #24
000000000003ff4c	add	w8, w1, #0x1
000000000003ff50	bfi	x8, x26, #8, #56
000000000003ff54	str	x8, [x7]
000000000003ff58	ldr	x0, [x22, #0x28]
000000000003ff5c	mov	x1, x20
000000000003ff60	mov	x2, x26
000000000003ff64	mov	x3, #0x0
000000000003ff68	bl	__mi_bitmap_claim_across
000000000003ff6c	strb	w0, [x21]
000000000003ff70	ldrb	w8, [x22, #0x1e]
000000000003ff74	strb	w8, [x24]
000000000003ff78	ldrb	w8, [x22, #0x1e]
000000000003ff7c	cbz	w8, 0x3ffdc
000000000003ff80	mov	w8, #0x1
000000000003ff84	ldr	x14, [sp]
000000000003ff88	strb	w8, [x23]
000000000003ff8c	ldrb	w8, [x22, #0x1d]
000000000003ff90	cbz	w8, 0x3fff8
000000000003ff94	mov	w8, #0x1
000000000003ff98	strb	w8, [x14]
000000000003ff9c	b	0x4037c
000000000003ffa0	cbz	x9, 0x40378
000000000003ffa4	str	x3, [sp]
000000000003ffa8	mov	x11, #0x0
000000000003ffac	mov	x12, #-0x1
000000000003ffb0	lsl	x10, x12, x20
000000000003ffb4	mov	w13, #0x40
000000000003ffb8	sub	x14, x13, x20
000000000003ffbc	add	x15, x20, #0x3f
000000000003ffc0	cmp	x20, #0x0
000000000003ffc4	csinv	x10, xzr, x10, eq
000000000003ffc8	cmp	x20, #0x3f
000000000003ffcc	csinv	x16, x10, xzr, ls
000000000003ffd0	add	x17, x22, #0x30
000000000003ffd4	mov	x10, x8
000000000003ffd8	b	0x40074
000000000003ffdc	ldrb	w8, [x22, #0x1d]
000000000003ffe0	cmp	w8, #0x0
000000000003ffe4	cset	w8, ne
000000000003ffe8	ldr	x14, [sp]
000000000003ffec	strb	w8, [x23]
000000000003fff0	ldrb	w8, [x22, #0x1d]
000000000003fff4	cbnz	w8, 0x3ff94
000000000003fff8	ldrb	w8, [x14]
000000000003fffc	cbz	w8, 0x403a0
0000000000040000	ldr	x0, [x22, #0x30]
0000000000040004	add	x3, sp, #0xf
0000000000040008	mov	x1, x20
000000000004000c	mov	x2, x26
0000000000040010	bl	__mi_bitmap_claim_across
0000000000040014	ldrb	w8, [sp, #0xf]
0000000000040018	cbz	w8, 0x4037c
000000000004001c	lsl	x1, x20, #24
0000000000040020	mov	w19, #0x1
0000000000040024	add	x4, sp, #0xe
0000000000040028	mov	x0, x25
000000000004002c	mov	w2, #0x1
0000000000040030	mov	w3, #0x0
0000000000040034	bl	_mi_os_commitx
0000000000040038	ldrb	w8, [sp, #0xe]
000000000004003c	cbz	w8, 0x4037c
0000000000040040	strb	w19, [x21]
0000000000040044	b	0x4037c
0000000000040048	ldr	x4, [x0]
000000000004004c	cmn	x4, #0x1
0000000000040050	mvn	x2, x4
0000000000040054	rbit	x2, x2
0000000000040058	clz	x2, x2
000000000004005c	ccmp	x2, x14, #0x2, ne
0000000000040060	b.ls	0x402fc
0000000000040064	add	x11, x11, #0x1
0000000000040068	add	x10, x10, #0x1
000000000004006c	cmp	x11, x9
0000000000040070	b.eq	0x40378
0000000000040074	cmp	x10, x9
0000000000040078	csel	x10, x10, xzr, lo
000000000004007c	cmp	x20, #0x40
0000000000040080	b.hi	0x400a4
0000000000040084	add	x0, x22, x10, lsl #3
0000000000040088	ldr	x4, [x0, #0x38]
000000000004008c	cmn	x4, #0x1
0000000000040090	mvn	x2, x4
0000000000040094	rbit	x2, x2
0000000000040098	clz	x2, x2
000000000004009c	ccmp	x2, x14, #0x2, ne
00000000000400a0	b.ls	0x4027c
00000000000400a4	add	x0, x22, x10, lsl #3
00000000000400a8	ldr	x6, [x0, #0x38]
00000000000400ac	clz	x27, x6
00000000000400b0	cbz	x27, 0x40064
00000000000400b4	mov	x3, #0x0
00000000000400b8	add	x0, x0, #0x38
00000000000400bc	sub	x4, x9, x10
00000000000400c0	add	x5, x17, x10, lsl #3
00000000000400c4	cmp	x27, x20
00000000000400c8	b.hs	0x40048
00000000000400cc	sub	x2, x15, x27
00000000000400d0	cmp	x4, x2, lsr #6
00000000000400d4	b.ls	0x40064
00000000000400d8	mov	x26, x5
00000000000400dc	mov	x2, x27
00000000000400e0	ldr	x30, [x26, #0x10]
00000000000400e4	add	x25, x2, #0x40
00000000000400e8	sub	x28, x20, x2
00000000000400ec	cmp	x25, x20
00000000000400f0	csel	x28, x28, x13, hi
00000000000400f4	lsl	x25, x12, x28
00000000000400f8	cmp	x28, #0x0
00000000000400fc	csinv	x25, xzr, x25, eq
0000000000040100	cmp	x28, #0x3f
0000000000040104	csel	x25, x12, x25, hi
0000000000040108	tst	x25, x30
000000000004010c	b.ne	0x40064
0000000000040110	add	x2, x28, x2
0000000000040114	add	x26, x26, #0x8
0000000000040118	cmp	x2, x20
000000000004011c	b.lo	0x400e0
0000000000040120	sub	x2, x13, x27
0000000000040124	lsl	x28, x12, x27
0000000000040128	mvn	x28, x28
000000000004012c	neg	x27, x27
0000000000040130	lsl	x27, x28, x27
0000000000040134	cmp	x6, #0x0
0000000000040138	csinv	x6, x27, xzr, ne
000000000004013c	ldr	x27, [x0]
0000000000040140	b	0x40154
0000000000040144	mov	w30, #0x0
0000000000040148	clrex
000000000004014c	mov	x27, x28
0000000000040150	cbnz	w30, 0x40180
0000000000040154	tst	x27, x6
0000000000040158	b.ne	0x401a8
000000000004015c	orr	x30, x27, x6
0000000000040160	ldaxr	x28, [x0]
0000000000040164	cmp	x28, x27
0000000000040168	b.ne	0x40144
000000000004016c	stlxr	w19, x30, [x0]
0000000000040170	cbnz	w19, 0x40160
0000000000040174	mov	w30, #0x1
0000000000040178	mov	x27, x28
000000000004017c	cbz	w30, 0x40154
0000000000040180	mov	x27, x0
0000000000040184	mov	x19, x27
0000000000040188	add	x27, x27, #0x8
000000000004018c	cmp	x19, x26
0000000000040190	b.hs	0x40234
0000000000040194	ldaxr	x19, [x27]
0000000000040198	cbnz	x19, 0x401b4
000000000004019c	stlxr	w19, x12, [x27]
00000000000401a0	cbnz	w19, 0x40194
00000000000401a4	b	0x40184
00000000000401a8	mov	x27, x0
00000000000401ac	sub	x2, x0, #0x8
00000000000401b0	b	0x401c8
00000000000401b4	clrex
00000000000401b8	sub	x2, x27, #0x8
00000000000401bc	b	0x401c8
00000000000401c0	stlr	xzr, [x2]
00000000000401c4	sub	x2, x2, #0x8
00000000000401c8	cmp	x2, x0
00000000000401cc	b.hi	0x401c0
00000000000401d0	cmp	x2, x0
00000000000401d4	b.ne	0x40218
00000000000401d8	ldr	x25, [x0]
00000000000401dc	mvn	x2, x6
00000000000401e0	b	0x401f4
00000000000401e4	mov	w26, #0x0
00000000000401e8	clrex
00000000000401ec	mov	x25, x6
00000000000401f0	cbnz	w26, 0x40218
00000000000401f4	and	x26, x25, x2
00000000000401f8	ldaxr	x6, [x0]
00000000000401fc	cmp	x6, x25
0000000000040200	b.ne	0x401e4
0000000000040204	stlxr	w19, x26, [x0]
0000000000040208	cbnz	w19, 0x401f8
000000000004020c	mov	w26, #0x1
0000000000040210	mov	x25, x6
0000000000040214	cbz	w26, 0x401f4
0000000000040218	cmp	x3, #0x4
000000000004021c	b.eq	0x40064
0000000000040220	add	x3, x3, #0x1
0000000000040224	ldr	x6, [x0]
0000000000040228	clz	x27, x6
000000000004022c	cbnz	x27, 0x400c4
0000000000040230	b	0x40064
0000000000040234	ldr	x28, [x27]
0000000000040238	b	0x4024c
000000000004023c	mov	w30, #0x0
0000000000040240	clrex
0000000000040244	mov	x28, x26
0000000000040248	tbnz	w30, #0x0, 0x3ff38
000000000004024c	tst	x28, x25
0000000000040250	b.ne	0x401b8
0000000000040254	orr	x30, x28, x25
0000000000040258	ldaxr	x26, [x27]
000000000004025c	cmp	x26, x28
0000000000040260	b.ne	0x4023c
0000000000040264	stlxr	w19, x30, [x27]
0000000000040268	cbnz	w19, 0x40258
000000000004026c	mov	w30, #0x1
0000000000040270	mov	x28, x26
0000000000040274	tbz	w30, #0x0, 0x4024c
0000000000040278	b	0x3ff38
000000000004027c	add	x0, x0, #0x38
0000000000040280	lsl	x3, x16, x2
0000000000040284	b	0x402a8
0000000000040288	clz	x5, x5
000000000004028c	eor	x5, x5, #0x3f
0000000000040290	sub	x2, x5, x2
0000000000040294	add	x6, x2, #0x1
0000000000040298	add	x2, x5, #0x1
000000000004029c	lsl	x3, x3, x6
00000000000402a0	cmp	x2, x14
00000000000402a4	b.hi	0x400a4
00000000000402a8	ands	x5, x3, x4
00000000000402ac	b.ne	0x40288
00000000000402b0	ldaxr	x5, [x0]
00000000000402b4	cmp	x5, x4
00000000000402b8	b.ne	0x402d8
00000000000402bc	orr	x4, x3, x4
00000000000402c0	stlxr	w6, x4, [x0]
00000000000402c4	cbz	w6, 0x402ec
00000000000402c8	mov	w6, #0x0
00000000000402cc	mov	x4, x5
00000000000402d0	tbz	w6, #0x0, 0x402a0
00000000000402d4	b	0x3ff38
00000000000402d8	clrex
00000000000402dc	mov	w6, #0x0
00000000000402e0	mov	x4, x5
00000000000402e4	tbz	w6, #0x0, 0x402a0
00000000000402e8	b	0x3ff38
00000000000402ec	mov	w6, #0x1
00000000000402f0	mov	x4, x5
00000000000402f4	tbz	w6, #0x0, 0x402a0
00000000000402f8	b	0x3ff38
00000000000402fc	lsl	x3, x16, x2
0000000000040300	b	0x40324
0000000000040304	clz	x5, x5
0000000000040308	eor	x5, x5, #0x3f
000000000004030c	sub	x2, x5, x2
0000000000040310	add	x6, x2, #0x1
0000000000040314	add	x2, x5, #0x1
0000000000040318	lsl	x3, x3, x6
000000000004031c	cmp	x2, x14
0000000000040320	b.hi	0x40064
0000000000040324	ands	x5, x3, x4
0000000000040328	b.ne	0x40304
000000000004032c	ldaxr	x5, [x0]
0000000000040330	cmp	x5, x4
0000000000040334	b.ne	0x40354
0000000000040338	orr	x4, x3, x4
000000000004033c	stlxr	w6, x4, [x0]
0000000000040340	cbz	w6, 0x40368
0000000000040344	mov	w6, #0x0
0000000000040348	mov	x4, x5
000000000004034c	tbz	w6, #0x0, 0x4031c
0000000000040350	b	0x3ff38
0000000000040354	clrex
0000000000040358	mov	w6, #0x0
000000000004035c	mov	x4, x5
0000000000040360	tbz	w6, #0x0, 0x4031c
0000000000040364	b	0x3ff38
0000000000040368	mov	w6, #0x1
000000000004036c	mov	x4, x5
0000000000040370	tbz	w6, #0x0, 0x4031c
0000000000040374	b	0x3ff38
0000000000040378	mov	x25, #0x0
000000000004037c	mov	x0, x25
0000000000040380	ldp	x29, x30, [sp, #0x60]
0000000000040384	ldp	x20, x19, [sp, #0x50]
0000000000040388	ldp	x22, x21, [sp, #0x40]
000000000004038c	ldp	x24, x23, [sp, #0x30]
0000000000040390	ldp	x26, x25, [sp, #0x20]
0000000000040394	ldp	x28, x27, [sp, #0x10]
0000000000040398	add	sp, sp, #0x70
000000000004039c	ret
00000000000403a0	ldr	x8, [x22, #0x30]
00000000000403a4	lsr	x11, x26, #6
00000000000403a8	and	x9, x26, #0x3f
00000000000403ac	add	x10, x9, x20
00000000000403b0	cmp	x10, #0x40
00000000000403b4	b.hi	0x403e8
00000000000403b8	mov	x10, #-0x1
00000000000403bc	lsl	x12, x10, x20
00000000000403c0	mvn	x12, x12
00000000000403c4	lsl	x9, x12, x9
00000000000403c8	cmp	x20, #0x0
00000000000403cc	csel	x9, xzr, x9, eq
00000000000403d0	cmp	x20, #0x3f
00000000000403d4	csel	x9, x10, x9, hi
00000000000403d8	ldr	x8, [x8, x11, lsl #3]
00000000000403dc	bics	xzr, x9, x8
00000000000403e0	cset	w8, eq
00000000000403e4	b	0x3ff98
00000000000403e8	mov	w10, #0x40
00000000000403ec	sub	x10, x10, x9
00000000000403f0	neg	x12, x9
00000000000403f4	mov	x13, #-0x1
00000000000403f8	lsl	x12, x13, x12
00000000000403fc	mvn	x12, x12
0000000000040400	lsl	x12, x12, x9
0000000000040404	cmp	x9, #0x0
0000000000040408	csinv	x12, x12, xzr, ne
000000000004040c	sub	x9, x20, x10
0000000000040410	lsr	x10, x9, #6
0000000000040414	lsl	x13, x13, x9
0000000000040418	tst	x9, #0x3f
000000000004041c	csinv	x9, xzr, x13, eq
0000000000040420	add	x11, x8, x11, lsl #3
0000000000040424	ldr	x8, [x11], #0x8
0000000000040428	bics	xzr, x12, x8
000000000004042c	cset	w8, eq
0000000000040430	cbz	x10, 0x4044c
0000000000040434	ldr	x12, [x11], #0x8
0000000000040438	cmn	x12, #0x1
000000000004043c	cset	w12, eq
0000000000040440	and	w8, w8, w12
0000000000040444	sub	x10, x10, #0x1
0000000000040448	cbnz	x10, 0x40434
000000000004044c	cbz	x9, 0x3ff98
0000000000040450	ldr	x10, [x11]
0000000000040454	bics	xzr, x9, x10
0000000000040458	cset	w9, eq
000000000004045c	and	w8, w8, w9
0000000000040460	b	0x3ff98
__mi_bitmap_claim_across:
0000000000040464	lsr	x11, x2, #6
0000000000040468	ands	x8, x2, #0x3f
000000000004046c	add	x9, x8, x1
0000000000040470	mov	w10, #0x40
0000000000040474	sub	x10, x10, x8
0000000000040478	neg	x12, x8
000000000004047c	mov	x13, #-0x1
0000000000040480	lsl	x12, x13, x12
0000000000040484	mvn	x12, x12
0000000000040488	lsl	x12, x12, x8
000000000004048c	csinv	x12, x12, xzr, ne
0000000000040490	sub	x10, x1, x10
0000000000040494	lsr	x14, x10, #6
0000000000040498	ands	x10, x10, #0x3f
000000000004049c	lsl	x10, x13, x10
00000000000404a0	csel	x13, x13, x13, eq
00000000000404a4	csinv	x15, xzr, x10, eq
00000000000404a8	mov	x10, #-0x1
00000000000404ac	lsl	x16, x10, x1
00000000000404b0	mvn	x16, x16
00000000000404b4	lsl	x8, x16, x8
00000000000404b8	cmp	x1, #0x0
00000000000404bc	csel	x16, xzr, xzr, eq
00000000000404c0	csel	x8, xzr, x8, eq
00000000000404c4	cmp	x1, #0x3f
00000000000404c8	csel	x16, xzr, x16, hi
00000000000404cc	csel	x8, x10, x8, hi
00000000000404d0	cmp	x9, #0x40
00000000000404d4	csel	x10, x13, x16, hi
00000000000404d8	csel	x8, x12, x8, hi
00000000000404dc	csel	x9, x15, x16, hi
00000000000404e0	csel	x12, x14, x16, hi
00000000000404e4	add	x11, x0, x11, lsl #3
00000000000404e8	ldaxr	x13, [x11]
00000000000404ec	orr	x14, x13, x8
00000000000404f0	stlxr	w15, x14, [x11]
00000000000404f4	cbnz	w15, 0x404e8
00000000000404f8	ands	x13, x13, x8
00000000000404fc	cset	w0, eq
0000000000040500	cmp	x13, x8
0000000000040504	cset	w8, ne
0000000000040508	add	x11, x11, #0x8
000000000004050c	cbz	x12, 0x40544
0000000000040510	sub	x12, x12, #0x1
0000000000040514	ldaxr	x13, [x11]
0000000000040518	orr	x14, x13, x10
000000000004051c	stlxr	w15, x14, [x11]
0000000000040520	cbnz	w15, 0x40514
0000000000040524	ands	x13, x13, x10
0000000000040528	cset	w14, eq
000000000004052c	and	w0, w0, w14
0000000000040530	cmp	x13, x10
0000000000040534	cset	w13, ne
0000000000040538	orr	w8, w8, w13
000000000004053c	add	x11, x11, #0x8
0000000000040540	cbnz	x12, 0x40510
0000000000040544	cbz	x9, 0x40570
0000000000040548	ldaxr	x10, [x11]
000000000004054c	orr	x12, x10, x9
0000000000040550	stlxr	w13, x12, [x11]
0000000000040554	cbnz	w13, 0x40548
0000000000040558	ands	x10, x10, x9
000000000004055c	cset	w11, eq
0000000000040560	and	w0, w0, w11
0000000000040564	cmp	x10, x9
0000000000040568	cset	w9, ne
000000000004056c	orr	w8, w8, w9
0000000000040570	cbz	x3, 0x4057c
0000000000040574	and	w8, w8, #0x1
0000000000040578	strb	w8, [x3]
000000000004057c	ret
__mi_usable_size:
0000000000040580	ands	x12, x0, #0xffffffffffc00000
0000000000040584	b.eq	0x405b8
0000000000040588	and	x8, x0, #0x3fffff
000000000004058c	ldr	x10, [x12, #0x60]
0000000000040590	lsr	x8, x8, x10
0000000000040594	add	x8, x12, x8, lsl #6
0000000000040598	add	x9, x8, #0x78
000000000004059c	ldrb	w11, [x8, #0x7e]
00000000000405a0	ldr	w8, [x8, #0x8c]
00000000000405a4	tbnz	w11, #0x1, 0x405c0
00000000000405a8	ubfx	x10, x8, #26, #6
00000000000405ac	cbnz	w10, 0x405d4
00000000000405b0	mov	x0, x8
00000000000405b4	ret
00000000000405b8	mov	x0, #0x0
00000000000405bc	ret
00000000000405c0	ldr	w13, [x12, #0x70]
00000000000405c4	cmp	w13, #0x3
00000000000405c8	b.ne	0x405ec
00000000000405cc	ldr	x11, [x12, #0x48]
00000000000405d0	b	0x405f4
00000000000405d4	and	x10, x9, #0xffffffffffc00000
00000000000405d8	ldr	w11, [x10, #0x70]
00000000000405dc	cmp	w11, #0x3
00000000000405e0	b.ne	0x4064c
00000000000405e4	ldr	x12, [x10, #0x48]
00000000000405e8	b	0x40658
00000000000405ec	mov	w11, #0x1
00000000000405f0	lsl	x11, x11, x10
00000000000405f4	ldrb	w10, [x9]
00000000000405f8	madd	x11, x11, x10, x12
00000000000405fc	cbnz	x10, 0x40630
0000000000040600	ldr	x12, [x12, #0x50]
0000000000040604	add	x11, x11, x12
0000000000040608	cmp	w13, #0x1
000000000004060c	b.hi	0x40630
0000000000040610	cbz	w8, 0x40630
0000000000040614	udiv	x12, x11, x8
0000000000040618	neg	x13, x11
000000000004061c	madd	x12, x12, x8, x13
0000000000040620	add	x12, x8, x12
0000000000040624	add	x13, x11, x12
0000000000040628	cmp	x12, x8
000000000004062c	csel	x11, x13, x11, lo
0000000000040630	ubfx	x12, x8, #26, #6
0000000000040634	cbnz	w12, 0x406a4
0000000000040638	sub	x9, x0, x11
000000000004063c	udiv	x10, x9, x8
0000000000040640	msub	x11, x10, x8, x9
0000000000040644	sub	x0, x8, x11
0000000000040648	ret
000000000004064c	ldr	x12, [x10, #0x60]
0000000000040650	mov	w13, #0x1
0000000000040654	lsl	x12, x13, x12
0000000000040658	ldrb	w9, [x9]
000000000004065c	cbz	x9, 0x40668
0000000000040660	mov	x0, x12
0000000000040664	ret
0000000000040668	ldr	x13, [x10, #0x50]
000000000004066c	sub	x0, x12, x13
0000000000040670	cmp	w11, #0x1
0000000000040674	ccmp	w8, #0x0, #0x4, ls
0000000000040678	b.eq	0x406a0
000000000004067c	madd	x9, x12, x9, x10
0000000000040680	add	x9, x9, x13
0000000000040684	udiv	x10, x9, x8
0000000000040688	neg	x9, x9
000000000004068c	madd	x9, x10, x8, x9
0000000000040690	add	x9, x8, x9
0000000000040694	cmp	x9, x8
0000000000040698	csel	x8, x9, xzr, lo
000000000004069c	sub	x0, x0, x8
00000000000406a0	ret
00000000000406a4	and	x12, x9, #0xffffffffffc00000
00000000000406a8	ldr	w14, [x12, #0x70]
00000000000406ac	cmp	w14, #0x3
00000000000406b0	b.ne	0x406bc
00000000000406b4	ldr	x15, [x12, #0x48]
00000000000406b8	b	0x406c8
00000000000406bc	ldr	x13, [x12, #0x60]
00000000000406c0	mov	w15, #0x1
00000000000406c4	lsl	x15, x15, x13
00000000000406c8	cbz	w10, 0x406d4
00000000000406cc	mov	x13, x15
00000000000406d0	b	0x4070c
00000000000406d4	ldr	x16, [x12, #0x50]
00000000000406d8	sub	x13, x15, x16
00000000000406dc	cmp	w14, #0x1
00000000000406e0	ccmp	w8, #0x0, #0x4, ls
00000000000406e4	b.eq	0x4070c
00000000000406e8	madd	x12, x15, x10, x12
00000000000406ec	add	x12, x12, x16
00000000000406f0	udiv	x14, x12, x8
00000000000406f4	neg	x12, x12
00000000000406f8	madd	x12, x14, x8, x12
00000000000406fc	add	x12, x8, x12
0000000000040700	cmp	x12, x8
0000000000040704	csel	x12, x12, xzr, lo
0000000000040708	sub	x13, x13, x12
000000000004070c	sub	x11, x0, x11
0000000000040710	udiv	x12, x11, x13
0000000000040714	msub	x11, x12, x13, x11
0000000000040718	and	x12, x9, #0xffffffffffc00000
000000000004071c	ldr	w9, [x12, #0x70]
0000000000040720	cmp	w9, #0x3
0000000000040724	b.ne	0x40730
0000000000040728	ldr	x13, [x12, #0x48]
000000000004072c	b	0x4073c
0000000000040730	ldr	x13, [x12, #0x60]
0000000000040734	mov	w14, #0x1
0000000000040738	lsl	x13, x14, x13
000000000004073c	cbz	w10, 0x40748
0000000000040740	sub	x0, x13, x11
0000000000040744	ret
0000000000040748	ldr	x14, [x12, #0x50]
000000000004074c	sub	x15, x13, x14
0000000000040750	madd	x10, x13, x10, x12
0000000000040754	add	x10, x10, x14
0000000000040758	udiv	x12, x10, x8
000000000004075c	neg	x10, x10
0000000000040760	madd	x10, x12, x8, x10
0000000000040764	add	x10, x8, x10
0000000000040768	cmp	x10, x8
000000000004076c	csel	x10, x10, xzr, lo
0000000000040770	sub	x10, x15, x10
0000000000040774	cmp	w9, #0x1
0000000000040778	ccmp	w8, #0x0, #0x4, ls
000000000004077c	csel	x8, x15, x10, eq
0000000000040780	sub	x0, x8, x11
0000000000040784	ret
__mi_heap_malloc_zero:
0000000000040788	stp	x20, x19, [sp, #-0x20]!
000000000004078c	stp	x29, x30, [sp, #0x10]
0000000000040790	add	x29, sp, #0x10
0000000000040794	mov	x20, x1
0000000000040798	cmp	x1, #0x400
000000000004079c	b.hi	0x4082c
00000000000407a0	add	x8, x20, #0x7
00000000000407a4	and	x8, x8, #0xfffffffffffffff8
00000000000407a8	add	x8, x0, x8
00000000000407ac	ldr	x8, [x8, #0x8]
00000000000407b0	ldr	x19, [x8, #0x8]
00000000000407b4	cbz	x19, 0x4082c
00000000000407b8	ldr	w9, [x8, #0x10]
00000000000407bc	add	w9, w9, #0x1
00000000000407c0	str	w9, [x8, #0x10]
00000000000407c4	ldr	x9, [x19]
00000000000407c8	str	x9, [x8, #0x8]
00000000000407cc	cbz	x19, 0x407f8
00000000000407d0	cmp	x20, #0x9
00000000000407d4	b.lo	0x40808
00000000000407d8	and	x8, x19, #0xffffffffffc00000
00000000000407dc	and	x9, x19, #0x3fffff
00000000000407e0	ldr	x10, [x8, #0x60]
00000000000407e4	lsr	x9, x9, x10
00000000000407e8	add	x8, x8, x9, lsl #6
00000000000407ec	ldrb	w8, [x8, #0x7f]
00000000000407f0	tbz	w8, #0x0, 0x40808
00000000000407f4	str	xzr, [x19]
00000000000407f8	mov	x0, x19
00000000000407fc	ldp	x29, x30, [sp, #0x10]
0000000000040800	ldp	x20, x19, [sp], #0x20
0000000000040804	ret
0000000000040808	mov	x0, x19
000000000004080c	bl	__mi_usable_size
0000000000040810	mov	x1, x0
0000000000040814	mov	x0, x19
0000000000040818	bl	0x553c8 ; symbol stub for: _bzero
000000000004081c	mov	x0, x19
0000000000040820	ldp	x29, x30, [sp, #0x10]
0000000000040824	ldp	x20, x19, [sp], #0x20
0000000000040828	ret
000000000004082c	mov	x1, x20
0000000000040830	bl	__mi_malloc_generic
0000000000040834	mov	x19, x0
0000000000040838	cbnz	x19, 0x407d0
000000000004083c	b	0x407f8
-[NSError(NSErrorKotlinException) kotlinException]:
0000000000040840	stp	x29, x30, [sp, #-0x10]!
0000000000040844	mov	x29, sp
0000000000040848	nop
000000000004084c	ldr	x1, #0x36274 ; Objc selector ref: userInfo
0000000000040850	bl	0x55584 ; Objc message: -[x0 userInfo]
0000000000040854	cbz	x0, 0x40870
0000000000040858	nop
000000000004085c	ldr	x1, #0x361c4 ; Objc selector ref: objectForKeyedSubscript:
0000000000040860	adr	x2, #0x31050 ; Objc cfstring ref: @"bad cfstring ref"
0000000000040864	nop
0000000000040868	ldp	x29, x30, [sp], #0x10
000000000004086c	b	0x55584 ; Objc message: -[x0 objectForKeyedSubscript:]
0000000000040870	ldp	x29, x30, [sp], #0x10
0000000000040874	ret
_Kotlin_NSArrayAsKList_get:
0000000000040878	stp	x20, x19, [sp, #-0x20]!
000000000004087c	stp	x29, x30, [sp, #0x10]
0000000000040880	add	x29, sp, #0x10
0000000000040884	mov	x19, x2
0000000000040888	ldar	x8, [x0]
000000000004088c	and	x8, x8, #0xfffffffffffffffc
0000000000040890	ldr	x9, [x8]
0000000000040894	cmp	x8, #0x0
0000000000040898	ccmp	x9, x8, #0x4, ne
000000000004089c	b.ne	0x408a8
00000000000408a0	mov	x0, #0x0
00000000000408a4	b	0x408b0
00000000000408a8	add	x8, x8, #0x10
00000000000408ac	ldar	x0, [x8]
00000000000408b0	sxtw	x2, w1
00000000000408b4	nop
00000000000408b8	ldr	x1, #0x36150 ; Objc selector ref: objectAtIndex:
00000000000408bc	bl	0x55584 ; Objc message: -[x0 objectAtIndex:]
00000000000408c0	mov	x20, x0
00000000000408c4	nop
00000000000408c8	ldr	x0, #0x363d0 ; Objc class ref: _OBJC_CLASS_$_NSNull
00000000000408cc	nop
00000000000408d0	ldr	x1, #0x36120 ; Objc selector ref: null
00000000000408d4	bl	0x55584 ; Objc message: +[NSNull null]
00000000000408d8	cmp	x20, x0
00000000000408dc	b.eq	0x40900
00000000000408e0	cbz	x20, 0x40900
00000000000408e4	nop
00000000000408e8	ldr	x1, #0x53bf0
00000000000408ec	mov	x0, x20
00000000000408f0	mov	x2, x19
00000000000408f4	ldp	x29, x30, [sp, #0x10]
00000000000408f8	ldp	x20, x19, [sp], #0x20
00000000000408fc	b	0x55584 ; Objc message: -[x0 null]
0000000000040900	str	xzr, [x19]
0000000000040904	mov	x0, #0x0
0000000000040908	ldp	x29, x30, [sp, #0x10]
000000000004090c	ldp	x20, x19, [sp], #0x20
0000000000040910	ret
_Kotlin_NSMutableArrayAsKMutableList_add:
0000000000040914	stp	x20, x19, [sp, #-0x20]!
0000000000040918	stp	x29, x30, [sp, #0x10]
000000000004091c	add	x29, sp, #0x10
0000000000040920	mov	x19, x1
0000000000040924	ldar	x8, [x0]
0000000000040928	and	x8, x8, #0xfffffffffffffffc
000000000004092c	ldr	x9, [x8]
0000000000040930	cmp	x8, #0x0
0000000000040934	ccmp	x9, x8, #0x4, ne
0000000000040938	b.ne	0x40950
000000000004093c	mov	x20, #0x0
0000000000040940	cbz	x2, 0x4095c
0000000000040944	mov	x0, x2
0000000000040948	bl	_Kotlin_ObjCExport_refToObjC
000000000004094c	b	0x40970
0000000000040950	add	x8, x8, #0x10
0000000000040954	ldar	x20, [x8]
0000000000040958	cbnz	x2, 0x40944
000000000004095c	nop
0000000000040960	ldr	x0, #0x36338 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000040964	nop
0000000000040968	ldr	x1, #0x36088 ; Objc selector ref: null
000000000004096c	bl	0x55584 ; Objc message: +[NSNull null]
0000000000040970	mov	x2, x0
0000000000040974	sxtw	x3, w19
0000000000040978	nop
000000000004097c	ldr	x1, #0x36004 ; Objc selector ref: insertObject:atIndex:
0000000000040980	mov	x0, x20
0000000000040984	ldp	x29, x30, [sp, #0x10]
0000000000040988	ldp	x20, x19, [sp], #0x20
000000000004098c	b	0x55584 ; Objc message: -[x0 insertObject:atIndex:]
_Kotlin_NSMutableArrayAsKMutableList_removeAt:
0000000000040990	stp	x22, x21, [sp, #-0x30]!
0000000000040994	stp	x20, x19, [sp, #0x10]
0000000000040998	stp	x29, x30, [sp, #0x20]
000000000004099c	add	x29, sp, #0x20
00000000000409a0	mov	x20, x2
00000000000409a4	ldar	x8, [x0]
00000000000409a8	and	x8, x8, #0xfffffffffffffffc
00000000000409ac	ldr	x9, [x8]
00000000000409b0	cmp	x8, #0x0
00000000000409b4	ccmp	x9, x8, #0x4, ne
00000000000409b8	b.ne	0x409c4
00000000000409bc	mov	x19, #0x0
00000000000409c0	b	0x409cc
00000000000409c4	add	x8, x8, #0x10
00000000000409c8	ldar	x19, [x8]
00000000000409cc	sxtw	x21, w1
00000000000409d0	nop
00000000000409d4	ldr	x1, #0x36034 ; Objc selector ref: objectAtIndex:
00000000000409d8	mov	x0, x19
00000000000409dc	mov	x2, x21
00000000000409e0	bl	0x55584 ; Objc message: -[x0 objectAtIndex:]
00000000000409e4	mov	x22, x0
00000000000409e8	nop
00000000000409ec	ldr	x0, #0x362ac ; Objc class ref: _OBJC_CLASS_$_NSNull
00000000000409f0	nop
00000000000409f4	ldr	x1, #0x35ffc ; Objc selector ref: null
00000000000409f8	bl	0x55584 ; Objc message: +[NSNull null]
00000000000409fc	cmp	x22, x0
0000000000040a00	b.eq	0x40a24
0000000000040a04	cbz	x22, 0x40a28
0000000000040a08	nop
0000000000040a0c	ldr	x1, #0x53acc
0000000000040a10	mov	x0, x22
0000000000040a14	mov	x2, x20
0000000000040a18	bl	0x55584 ; Objc message: -[x0 null]
0000000000040a1c	mov	x22, x0
0000000000040a20	b	0x40a2c
0000000000040a24	mov	x22, #0x0
0000000000040a28	str	xzr, [x20]
0000000000040a2c	nop
0000000000040a30	ldr	x1, #0x36020 ; Objc selector ref: removeObjectAtIndex:
0000000000040a34	mov	x0, x19
0000000000040a38	mov	x2, x21
0000000000040a3c	bl	0x55584 ; Objc message: -[x0 removeObjectAtIndex:]
0000000000040a40	mov	x0, x22
0000000000040a44	ldp	x29, x30, [sp, #0x20]
0000000000040a48	ldp	x20, x19, [sp, #0x10]
0000000000040a4c	ldp	x22, x21, [sp], #0x30
0000000000040a50	ret
_Kotlin_NSMutableArrayAsKMutableList_set:
0000000000040a54	stp	x26, x25, [sp, #-0x50]!
0000000000040a58	stp	x24, x23, [sp, #0x10]
0000000000040a5c	stp	x22, x21, [sp, #0x20]
0000000000040a60	stp	x20, x19, [sp, #0x30]
0000000000040a64	stp	x29, x30, [sp, #0x40]
0000000000040a68	add	x29, sp, #0x40
0000000000040a6c	mov	x22, x3
0000000000040a70	mov	x21, x2
0000000000040a74	ldar	x8, [x0]
0000000000040a78	and	x8, x8, #0xfffffffffffffffc
0000000000040a7c	ldr	x9, [x8]
0000000000040a80	cmp	x8, #0x0
0000000000040a84	ccmp	x9, x8, #0x4, ne
0000000000040a88	b.ne	0x40a94
0000000000040a8c	mov	x19, #0x0
0000000000040a90	b	0x40a9c
0000000000040a94	add	x8, x8, #0x10
0000000000040a98	ldar	x19, [x8]
0000000000040a9c	sxtw	x20, w1
0000000000040aa0	nop
0000000000040aa4	ldr	x1, #0x35f64 ; Objc selector ref: objectAtIndex:
0000000000040aa8	mov	x0, x19
0000000000040aac	mov	x2, x20
0000000000040ab0	bl	0x55584 ; Objc message: -[x0 objectAtIndex:]
0000000000040ab4	mov	x23, x0
0000000000040ab8	adrp	x25, 54 ; 0x76000
0000000000040abc	ldr	x0, [x25, #0xc98] ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000040ac0	nop
0000000000040ac4	ldr	x24, #0x35f2c ; Objc selector ref: null
0000000000040ac8	mov	x1, x24
0000000000040acc	bl	0x55584 ; Objc message: +[NSNull null]
0000000000040ad0	cmp	x23, x0
0000000000040ad4	b.eq	0x40afc
0000000000040ad8	cbz	x23, 0x40b14
0000000000040adc	nop
0000000000040ae0	ldr	x1, #0x539f8
0000000000040ae4	mov	x0, x23
0000000000040ae8	mov	x2, x22
0000000000040aec	bl	0x55584 ; Objc message: -[x0 null]
0000000000040af0	mov	x23, x0
0000000000040af4	cbnz	x21, 0x40b08
0000000000040af8	b	0x40b1c
0000000000040afc	mov	x23, #0x0
0000000000040b00	str	xzr, [x22]
0000000000040b04	cbz	x21, 0x40b1c
0000000000040b08	mov	x0, x21
0000000000040b0c	bl	_Kotlin_ObjCExport_refToObjC
0000000000040b10	b	0x40b28
0000000000040b14	str	xzr, [x22]
0000000000040b18	cbnz	x21, 0x40b08
0000000000040b1c	ldr	x0, [x25, #0xc98]
0000000000040b20	mov	x1, x24
0000000000040b24	bl	0x55584 ; Objc message: -[x0 null]
0000000000040b28	mov	x3, x0
0000000000040b2c	nop
0000000000040b30	ldr	x1, #0x35f30 ; Objc selector ref: replaceObjectAtIndex:withObject:
0000000000040b34	mov	x0, x19
0000000000040b38	mov	x2, x20
0000000000040b3c	bl	0x55584 ; Objc message: -[x0 replaceObjectAtIndex:withObject:]
0000000000040b40	mov	x0, x23
0000000000040b44	ldp	x29, x30, [sp, #0x40]
0000000000040b48	ldp	x20, x19, [sp, #0x30]
0000000000040b4c	ldp	x22, x21, [sp, #0x20]
0000000000040b50	ldp	x24, x23, [sp, #0x10]
0000000000040b54	ldp	x26, x25, [sp], #0x50
0000000000040b58	ret
_Kotlin_NSEnumeratorAsKIterator_computeNext:
0000000000040b5c	sub	sp, sp, #0xd0
0000000000040b60	stp	x28, x27, [sp, #0x70]
0000000000040b64	stp	x26, x25, [sp, #0x80]
0000000000040b68	stp	x24, x23, [sp, #0x90]
0000000000040b6c	stp	x22, x21, [sp, #0xa0]
0000000000040b70	stp	x20, x19, [sp, #0xb0]
0000000000040b74	stp	x29, x30, [sp, #0xc0]
0000000000040b78	add	x29, sp, #0xc0
0000000000040b7c	mov	x19, x0
0000000000040b80	ldar	x8, [x0]
0000000000040b84	and	x8, x8, #0xfffffffffffffffc
0000000000040b88	ldr	x9, [x8]
0000000000040b8c	cmp	x8, #0x0
0000000000040b90	ccmp	x9, x8, #0x4, ne
0000000000040b94	b.ne	0x40c18
0000000000040b98	mov	x0, #0x0
0000000000040b9c	nop
0000000000040ba0	ldr	x1, #0x35e48 ; Objc selector ref: nextObject
0000000000040ba4	bl	0x55584 ; Objc message: -[x0 nextObject]
0000000000040ba8	cbz	x0, 0x40c30
0000000000040bac	mov	x21, x0
0000000000040bb0	add	x22, sp, #0x8
0000000000040bb4	str	xzr, [sp, #0x20]
0000000000040bb8	adrp	x20, 58 ; 0x7a000
0000000000040bbc	add	x20, x20, #0x2c0
0000000000040bc0	ldr	x24, [x20]
0000000000040bc4	mov	x0, x20
0000000000040bc8	blr	x24
0000000000040bcc	ldr	x8, [x0]
0000000000040bd0	ldr	x9, [x8, #0x110]
0000000000040bd4	str	x22, [x8, #0x110]
0000000000040bd8	mov	x8, #0x400000000
0000000000040bdc	stp	x9, x8, [sp, #0x10]
0000000000040be0	nop
0000000000040be4	ldr	x0, #0x360b4 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000040be8	nop
0000000000040bec	ldr	x1, #0x35e04 ; Objc selector ref: null
0000000000040bf0	bl	0x55584 ; Objc message: +[NSNull null]
0000000000040bf4	cmp	x21, x0
0000000000040bf8	b.eq	0x40d98
0000000000040bfc	add	x2, x22, #0x18
0000000000040c00	nop
0000000000040c04	ldr	x1, #0x538d4
0000000000040c08	mov	x0, x21
0000000000040c0c	bl	0x55584 ; Objc message: -[x0 null]
0000000000040c10	mov	x21, x0
0000000000040c14	b	0x40da0
0000000000040c18	add	x8, x8, #0x10
0000000000040c1c	ldar	x0, [x8]
0000000000040c20	nop
0000000000040c24	ldr	x1, #0x35dc4 ; Objc selector ref: nextObject
0000000000040c28	bl	0x55584 ; Objc message: -[x0 nextObject]
0000000000040c2c	cbnz	x0, 0x40bac
0000000000040c30	str	xzr, [sp, #0x28]
0000000000040c34	adrp	x20, 58 ; 0x7a000
0000000000040c38	add	x20, x20, #0x2c0
0000000000040c3c	ldr	x24, [x20]
0000000000040c40	mov	x0, x20
0000000000040c44	blr	x24
0000000000040c48	ldr	x8, [x0]
0000000000040c4c	ldr	x9, [x8, #0x110]
0000000000040c50	add	x10, sp, #0x28
0000000000040c54	str	x10, [x8, #0x110]
0000000000040c58	mov	x8, #0x300000000
0000000000040c5c	stp	x9, x8, [sp, #0x30]
0000000000040c60	adr	x23, #0x53629
0000000000040c64	nop
0000000000040c68	ldarb	w8, [x23]
0000000000040c6c	tbz	w8, #0x0, 0x40c74
0000000000040c70	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000040c74	movi.16b	v0, #0x0
0000000000040c78	stp	q0, q0, [sp, #0x40]
0000000000040c7c	str	xzr, [sp, #0x60]
0000000000040c80	mov	x0, x20
0000000000040c84	blr	x24
0000000000040c88	ldr	x8, [x0]
0000000000040c8c	ldr	x9, [x8, #0x110]
0000000000040c90	add	x10, sp, #0x40
0000000000040c94	str	x10, [x8, #0x110]
0000000000040c98	mov	x8, #0x500000000
0000000000040c9c	stp	x9, x8, [sp, #0x48]
0000000000040ca0	adr	x25, #0x53670
0000000000040ca4	nop
0000000000040ca8	ldar	x21, [x25]
0000000000040cac	cmp	x21, #0x2
0000000000040cb0	b.hs	0x410fc
0000000000040cb4	mov	x0, x20
0000000000040cb8	blr	x24
0000000000040cbc	ldr	x26, [x0]
0000000000040cc0	ldp	x8, x9, [x26, #0x120]
0000000000040cc4	cmp	x8, x9
0000000000040cc8	b.eq	0x40ce8
0000000000040ccc	mov	x10, x9
0000000000040cd0	ldr	x11, [x10, #-0x10]!
0000000000040cd4	cmp	x11, x25
0000000000040cd8	b.eq	0x40f1c
0000000000040cdc	mov	x9, x10
0000000000040ce0	cmp	x10, x8
0000000000040ce4	b.ne	0x40cd0
0000000000040ce8	add	x22, x26, #0x120
0000000000040cec	add	x0, x26, #0x138
0000000000040cf0	mov	w9, #0x1
0000000000040cf4	ldaxr	w8, [x0]
0000000000040cf8	stlxr	w10, w9, [x0]
0000000000040cfc	cbnz	w10, 0x40cf4
0000000000040d00	b	0x40d10
0000000000040d04	mov	w27, #0x1
0000000000040d08	stlxr	w9, x27, [x25]
0000000000040d0c	cbz	w9, 0x40d20
0000000000040d10	ldaxr	x21, [x25]
0000000000040d14	cbz	x21, 0x40d04
0000000000040d18	mov	w27, #0x0
0000000000040d1c	clrex
0000000000040d20	cmp	x21, #0x1
0000000000040d24	b.eq	0x40d10
0000000000040d28	cbz	x26, 0x40d50
0000000000040d2c	ldaxr	w9, [x0]
0000000000040d30	stlxr	w10, w8, [x0]
0000000000040d34	cbnz	w10, 0x40d2c
0000000000040d38	cbnz	w8, 0x40d50
0000000000040d3c	cmp	w9, #0x1
0000000000040d40	b.ne	0x40d50
0000000000040d44	ldarb	w8, [x23]
0000000000040d48	tbz	w8, #0x0, 0x40d50
0000000000040d4c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040d50	tbz	w27, #0x0, 0x40f14
0000000000040d54	ldr	x8, [x26, #0x118]
0000000000040d58	add	x0, x8, #0x70
0000000000040d5c	mov	w1, #0x20
0000000000040d60	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000040d64	mov	x21, x0
0000000000040d68	adr	x8, #0x240b8
0000000000040d6c	nop
0000000000040d70	str	x8, [x21, #0x10]!
0000000000040d74	stur	xzr, [x21, #-0x8]
0000000000040d78	str	x21, [sp, #0x58]
0000000000040d7c	ldp	x9, x8, [x26, #0x128]
0000000000040d80	cmp	x9, x8
0000000000040d84	b.hs	0x41028
0000000000040d88	stp	x25, x21, [x9]
0000000000040d8c	add	x8, x9, #0x10
0000000000040d90	str	x8, [x26, #0x128]
0000000000040d94	b	0x410b0
0000000000040d98	mov	x21, #0x0
0000000000040d9c	str	xzr, [sp, #0x20]
0000000000040da0	str	xzr, [sp, #0x28]
0000000000040da4	mov	x0, x20
0000000000040da8	blr	x24
0000000000040dac	ldr	x8, [x0]
0000000000040db0	ldr	x9, [x8, #0x110]
0000000000040db4	add	x10, sp, #0x28
0000000000040db8	str	x10, [x8, #0x110]
0000000000040dbc	mov	x8, #0x300000000
0000000000040dc0	stp	x9, x8, [sp, #0x30]
0000000000040dc4	adr	x23, #0x534c5
0000000000040dc8	nop
0000000000040dcc	ldarb	w8, [x23]
0000000000040dd0	tbz	w8, #0x0, 0x40dd8
0000000000040dd4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000040dd8	movi.16b	v0, #0x0
0000000000040ddc	stp	q0, q0, [sp, #0x40]
0000000000040de0	str	xzr, [sp, #0x60]
0000000000040de4	mov	x0, x20
0000000000040de8	blr	x24
0000000000040dec	ldr	x8, [x0]
0000000000040df0	ldr	x9, [x8, #0x110]
0000000000040df4	add	x10, sp, #0x40
0000000000040df8	str	x10, [x8, #0x110]
0000000000040dfc	mov	x8, #0x500000000
0000000000040e00	stp	x9, x8, [sp, #0x48]
0000000000040e04	str	x21, [x19, #0x10]
0000000000040e08	adr	x25, #0x53508
0000000000040e0c	nop
0000000000040e10	ldar	x21, [x25]
0000000000040e14	cmp	x21, #0x2
0000000000040e18	b.hs	0x40ffc
0000000000040e1c	mov	x0, x20
0000000000040e20	blr	x24
0000000000040e24	ldr	x26, [x0]
0000000000040e28	ldp	x8, x9, [x26, #0x120]
0000000000040e2c	cmp	x8, x9
0000000000040e30	b.eq	0x40e50
0000000000040e34	mov	x10, x9
0000000000040e38	ldr	x11, [x10, #-0x10]!
0000000000040e3c	cmp	x11, x25
0000000000040e40	b.eq	0x40f08
0000000000040e44	mov	x9, x10
0000000000040e48	cmp	x10, x8
0000000000040e4c	b.ne	0x40e38
0000000000040e50	add	x22, x26, #0x120
0000000000040e54	add	x0, x26, #0x138
0000000000040e58	mov	w9, #0x1
0000000000040e5c	ldaxr	w8, [x0]
0000000000040e60	stlxr	w10, w9, [x0]
0000000000040e64	cbnz	w10, 0x40e5c
0000000000040e68	b	0x40e78
0000000000040e6c	mov	w27, #0x1
0000000000040e70	stlxr	w9, x27, [x25]
0000000000040e74	cbz	w9, 0x40e88
0000000000040e78	ldaxr	x21, [x25]
0000000000040e7c	cbz	x21, 0x40e6c
0000000000040e80	mov	w27, #0x0
0000000000040e84	clrex
0000000000040e88	cmp	x21, #0x1
0000000000040e8c	b.eq	0x40e78
0000000000040e90	cbz	x26, 0x40eb8
0000000000040e94	ldaxr	w9, [x0]
0000000000040e98	stlxr	w10, w8, [x0]
0000000000040e9c	cbnz	w10, 0x40e94
0000000000040ea0	cbnz	w8, 0x40eb8
0000000000040ea4	cmp	w9, #0x1
0000000000040ea8	b.ne	0x40eb8
0000000000040eac	ldarb	w8, [x23]
0000000000040eb0	tbz	w8, #0x0, 0x40eb8
0000000000040eb4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040eb8	tbz	w27, #0x0, 0x40f00
0000000000040ebc	ldr	x8, [x26, #0x118]
0000000000040ec0	add	x0, x8, #0x70
0000000000040ec4	mov	w1, #0x20
0000000000040ec8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000040ecc	mov	x21, x0
0000000000040ed0	adr	x8, #0x23f50
0000000000040ed4	nop
0000000000040ed8	str	x8, [x21, #0x10]!
0000000000040edc	stur	xzr, [x21, #-0x8]
0000000000040ee0	str	x21, [sp, #0x58]
0000000000040ee4	ldp	x9, x8, [x26, #0x128]
0000000000040ee8	cmp	x9, x8
0000000000040eec	b.hs	0x40f28
0000000000040ef0	stp	x25, x21, [x9]
0000000000040ef4	add	x8, x9, #0x10
0000000000040ef8	str	x8, [x26, #0x128]
0000000000040efc	b	0x40fb0
0000000000040f00	str	x21, [sp, #0x58]
0000000000040f04	b	0x40ffc
0000000000040f08	ldur	x21, [x9, #-0x8]
0000000000040f0c	str	x21, [sp, #0x58]
0000000000040f10	b	0x40ffc
0000000000040f14	str	x21, [sp, #0x58]
0000000000040f18	b	0x410fc
0000000000040f1c	ldur	x21, [x9, #-0x8]
0000000000040f20	str	x21, [sp, #0x58]
0000000000040f24	b	0x410fc
0000000000040f28	ldr	x10, [x22]
0000000000040f2c	sub	x9, x9, x10
0000000000040f30	asr	x27, x9, #4
0000000000040f34	add	x9, x27, #0x1
0000000000040f38	lsr	x11, x9, #60
0000000000040f3c	cbnz	x11, 0x41154
0000000000040f40	sub	x8, x8, x10
0000000000040f44	asr	x10, x8, #3
0000000000040f48	cmp	x10, x9
0000000000040f4c	csel	x9, x9, x10, lo
0000000000040f50	mov	x10, #0x7ffffffffffffff
0000000000040f54	cmp	x10, x8, asr #4
0000000000040f58	mov	x8, #0xfffffffffffffff
0000000000040f5c	csel	x23, x9, x8, hi
0000000000040f60	mov	x0, x23
0000000000040f64	mov	w1, #0x10
0000000000040f68	bl	0x553d4 ; symbol stub for: _calloc
0000000000040f6c	add	x8, x0, x27, lsl #4
0000000000040f70	add	x27, x0, x23, lsl #4
0000000000040f74	stp	x25, x21, [x8]
0000000000040f78	add	x28, x8, #0x10
0000000000040f7c	ldp	x1, x9, [x26, #0x120]
0000000000040f80	sub	x2, x9, x1
0000000000040f84	sub	x23, x8, x2
0000000000040f88	cmp	x2, #0x1
0000000000040f8c	b.lt	0x40f9c
0000000000040f90	mov	x0, x23
0000000000040f94	bl	0x554ac ; symbol stub for: _memcpy
0000000000040f98	ldr	x1, [x22]
0000000000040f9c	stp	x23, x28, [x26, #0x120]
0000000000040fa0	str	x27, [x26, #0x130]
0000000000040fa4	cbz	x1, 0x40fb0
0000000000040fa8	mov	x0, x1
0000000000040fac	bl	0x55458 ; symbol stub for: _free
0000000000040fb0	mov	x0, x21
0000000000040fb4	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
0000000000040fb8	mov	w0, #0x1
0000000000040fbc	mov	w1, #0x28
0000000000040fc0	bl	0x553d4 ; symbol stub for: _calloc
0000000000040fc4	ldr	x8, [x26, #0x18]!
0000000000040fc8	sub	x9, x26, #0x8
0000000000040fcc	stp	x25, x9, [x0, #0x10]
0000000000040fd0	stp	x8, x26, [x0]
0000000000040fd4	str	x0, [x8, #0x8]
0000000000040fd8	str	x0, [x26]
0000000000040fdc	ldr	x8, [x26, #0x10]
0000000000040fe0	add	x8, x8, #0x1
0000000000040fe4	str	x8, [x26, #0x10]
0000000000040fe8	str	x0, [x0, #0x20]
0000000000040fec	stlr	x21, [x25]
0000000000040ff0	ldr	x8, [x26, #0x110]
0000000000040ff4	sub	x8, x8, #0x10
0000000000040ff8	str	x8, [x26, #0x110]
0000000000040ffc	ldr	x8, [x21, #0x8]
0000000000041000	ldr	w9, [x8, #0x8]
0000000000041004	cmp	w9, #0x3
0000000000041008	b.ls	0x41144
000000000004100c	ldr	x8, [x8, #0x28]
0000000000041010	str	x8, [x19, #0x8]
0000000000041014	mov	x0, x20
0000000000041018	blr	x24
000000000004101c	ldr	x8, [x0]
0000000000041020	ldr	x9, [sp, #0x10]
0000000000041024	b	0x41120
0000000000041028	ldr	x10, [x22]
000000000004102c	sub	x9, x9, x10
0000000000041030	asr	x27, x9, #4
0000000000041034	add	x9, x27, #0x1
0000000000041038	lsr	x11, x9, #60
000000000004103c	cbnz	x11, 0x41160
0000000000041040	sub	x8, x8, x10
0000000000041044	asr	x10, x8, #3
0000000000041048	cmp	x10, x9
000000000004104c	csel	x9, x9, x10, lo
0000000000041050	mov	x10, #0x7ffffffffffffff
0000000000041054	cmp	x10, x8, asr #4
0000000000041058	mov	x8, #0xfffffffffffffff
000000000004105c	csel	x23, x9, x8, hi
0000000000041060	mov	x0, x23
0000000000041064	mov	w1, #0x10
0000000000041068	bl	0x553d4 ; symbol stub for: _calloc
000000000004106c	add	x8, x0, x27, lsl #4
0000000000041070	add	x27, x0, x23, lsl #4
0000000000041074	stp	x25, x21, [x8]
0000000000041078	add	x28, x8, #0x10
000000000004107c	ldp	x1, x9, [x26, #0x120]
0000000000041080	sub	x2, x9, x1
0000000000041084	sub	x23, x8, x2
0000000000041088	cmp	x2, #0x1
000000000004108c	b.lt	0x4109c
0000000000041090	mov	x0, x23
0000000000041094	bl	0x554ac ; symbol stub for: _memcpy
0000000000041098	ldr	x1, [x22]
000000000004109c	stp	x23, x28, [x26, #0x120]
00000000000410a0	str	x27, [x26, #0x130]
00000000000410a4	cbz	x1, 0x410b0
00000000000410a8	mov	x0, x1
00000000000410ac	bl	0x55458 ; symbol stub for: _free
00000000000410b0	mov	x0, x21
00000000000410b4	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
00000000000410b8	mov	w0, #0x1
00000000000410bc	mov	w1, #0x28
00000000000410c0	bl	0x553d4 ; symbol stub for: _calloc
00000000000410c4	ldr	x8, [x26, #0x18]!
00000000000410c8	sub	x9, x26, #0x8
00000000000410cc	stp	x25, x9, [x0, #0x10]
00000000000410d0	stp	x8, x26, [x0]
00000000000410d4	str	x0, [x8, #0x8]
00000000000410d8	str	x0, [x26]
00000000000410dc	ldr	x8, [x26, #0x10]
00000000000410e0	add	x8, x8, #0x1
00000000000410e4	str	x8, [x26, #0x10]
00000000000410e8	str	x0, [x0, #0x20]
00000000000410ec	stlr	x21, [x25]
00000000000410f0	ldr	x8, [x26, #0x110]
00000000000410f4	sub	x8, x8, #0x10
00000000000410f8	str	x8, [x26, #0x110]
00000000000410fc	ldr	x8, [x21, #0x8]
0000000000041100	ldr	w9, [x8, #0x8]
0000000000041104	cbz	w9, 0x4114c
0000000000041108	ldr	x8, [x8, #0x10]
000000000004110c	str	x8, [x19, #0x8]
0000000000041110	mov	x0, x20
0000000000041114	blr	x24
0000000000041118	ldr	x8, [x0]
000000000004111c	ldr	x9, [sp, #0x30]
0000000000041120	str	x9, [x8, #0x110]
0000000000041124	ldp	x29, x30, [sp, #0xc0]
0000000000041128	ldp	x20, x19, [sp, #0xb0]
000000000004112c	ldp	x22, x21, [sp, #0xa0]
0000000000041130	ldp	x24, x23, [sp, #0x90]
0000000000041134	ldp	x26, x25, [sp, #0x80]
0000000000041138	ldp	x28, x27, [sp, #0x70]
000000000004113c	add	sp, sp, #0xd0
0000000000041140	ret
0000000000041144	bl	_ThrowArrayIndexOutOfBoundsException
0000000000041148	b	0x411b4
000000000004114c	bl	_ThrowArrayIndexOutOfBoundsException
0000000000041150	b	0x411b4
0000000000041154	mov	x0, x22
0000000000041158	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000004115c	b	0x411b4
0000000000041160	mov	x0, x22
0000000000041164	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000041168	b	0x411b4
000000000004116c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000041170	str	xzr, [sp, #0x58]
0000000000041174	stlr	xzr, [x25]
0000000000041178	ldr	x8, [x26, #0x128]
000000000004117c	sub	x8, x8, #0x10
0000000000041180	str	x8, [x26, #0x128]
0000000000041184	bl	0x5535c ; symbol stub for: ___cxa_rethrow
0000000000041188	b	0x411b4
000000000004118c	mov	x19, x0
0000000000041190	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000041194	b	0x411c8
0000000000041198	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000004119c	str	xzr, [sp, #0x58]
00000000000411a0	stlr	xzr, [x25]
00000000000411a4	ldr	x8, [x26, #0x128]
00000000000411a8	sub	x8, x8, #0x10
00000000000411ac	str	x8, [x26, #0x128]
00000000000411b0	bl	0x5535c ; symbol stub for: ___cxa_rethrow
00000000000411b4	brk	#0x1
00000000000411b8	mov	x19, x0
00000000000411bc	bl	0x55338 ; symbol stub for: ___cxa_end_catch
00000000000411c0	b	0x411e0
00000000000411c4	mov	x19, x0
00000000000411c8	mov	x0, x20
00000000000411cc	blr	x24
00000000000411d0	ldr	x8, [x0]
00000000000411d4	ldr	x9, [sp, #0x30]
00000000000411d8	b	0x4120c
00000000000411dc	mov	x19, x0
00000000000411e0	mov	x0, x20
00000000000411e4	blr	x24
00000000000411e8	ldr	x8, [x0]
00000000000411ec	ldr	x9, [sp, #0x30]
00000000000411f0	str	x9, [x8, #0x110]
00000000000411f4	b	0x41208
00000000000411f8	mov	x19, x0
00000000000411fc	mov	x0, x20
0000000000041200	blr	x24
0000000000041204	ldr	x8, [x0]
0000000000041208	ldr	x9, [sp, #0x10]
000000000004120c	str	x9, [x8, #0x110]
0000000000041210	mov	x0, x19
0000000000041214	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_NSSetAsKSet_iterator:
0000000000041218	stp	x20, x19, [sp, #-0x20]!
000000000004121c	stp	x29, x30, [sp, #0x10]
0000000000041220	add	x29, sp, #0x10
0000000000041224	mov	x19, x1
0000000000041228	ldar	x8, [x0]
000000000004122c	and	x8, x8, #0xfffffffffffffffc
0000000000041230	ldr	x9, [x8]
0000000000041234	cmp	x8, #0x0
0000000000041238	ccmp	x9, x8, #0x4, ne
000000000004123c	b.ne	0x41248
0000000000041240	mov	x0, #0x0
0000000000041244	b	0x41250
0000000000041248	add	x8, x8, #0x10
000000000004124c	ldar	x0, [x8]
0000000000041250	nop
0000000000041254	ldr	x1, #0x357bc ; Objc selector ref: objectEnumerator
0000000000041258	bl	0x55584 ; Objc message: -[x0 objectEnumerator]
000000000004125c	bl	0x555b4 ; symbol stub for: _objc_retain
0000000000041260	mov	x20, x0
0000000000041264	bl	_Kotlin_initRuntimeIfNeeded
0000000000041268	mov	x0, x19
000000000004126c	bl	_Kotlin_NSEnumeratorAsKIterator_create
0000000000041270	mov	x19, x0
0000000000041274	ldar	x8, [x0]
0000000000041278	and	x8, x8, #0xfffffffffffffffc
000000000004127c	ldr	x9, [x8]
0000000000041280	cmp	x9, x8
0000000000041284	csel	x0, xzr, x8, eq
0000000000041288	cbz	x0, 0x412a4
000000000004128c	add	x8, x0, #0x10
0000000000041290	stlr	x20, [x8]
0000000000041294	mov	x0, x19
0000000000041298	ldp	x29, x30, [sp, #0x10]
000000000004129c	ldp	x20, x19, [sp], #0x20
00000000000412a0	ret
00000000000412a4	mov	x0, x19
00000000000412a8	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
00000000000412ac	add	x8, x0, #0x10
00000000000412b0	stlr	x20, [x8]
00000000000412b4	mov	x0, x19
00000000000412b8	ldp	x29, x30, [sp, #0x10]
00000000000412bc	ldp	x20, x19, [sp], #0x20
00000000000412c0	ret
_Kotlin_NSDictionaryAsKMap_keyIterator:
00000000000412c4	stp	x20, x19, [sp, #-0x20]!
00000000000412c8	stp	x29, x30, [sp, #0x10]
00000000000412cc	add	x29, sp, #0x10
00000000000412d0	mov	x19, x1
00000000000412d4	ldar	x8, [x0]
00000000000412d8	and	x8, x8, #0xfffffffffffffffc
00000000000412dc	ldr	x9, [x8]
00000000000412e0	cmp	x8, #0x0
00000000000412e4	ccmp	x9, x8, #0x4, ne
00000000000412e8	b.ne	0x412f4
00000000000412ec	mov	x0, #0x0
00000000000412f0	b	0x412fc
00000000000412f4	add	x8, x8, #0x10
00000000000412f8	ldar	x0, [x8]
00000000000412fc	nop
0000000000041300	ldr	x1, #0x356a0 ; Objc selector ref: keyEnumerator
0000000000041304	bl	0x55584 ; Objc message: -[x0 keyEnumerator]
0000000000041308	bl	0x555b4 ; symbol stub for: _objc_retain
000000000004130c	mov	x20, x0
0000000000041310	bl	_Kotlin_initRuntimeIfNeeded
0000000000041314	mov	x0, x19
0000000000041318	bl	_Kotlin_NSEnumeratorAsKIterator_create
000000000004131c	mov	x19, x0
0000000000041320	ldar	x8, [x0]
0000000000041324	and	x8, x8, #0xfffffffffffffffc
0000000000041328	ldr	x9, [x8]
000000000004132c	cmp	x9, x8
0000000000041330	csel	x0, xzr, x8, eq
0000000000041334	cbz	x0, 0x41350
0000000000041338	add	x8, x0, #0x10
000000000004133c	stlr	x20, [x8]
0000000000041340	mov	x0, x19
0000000000041344	ldp	x29, x30, [sp, #0x10]
0000000000041348	ldp	x20, x19, [sp], #0x20
000000000004134c	ret
0000000000041350	mov	x0, x19
0000000000041354	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000041358	add	x8, x0, #0x10
000000000004135c	stlr	x20, [x8]
0000000000041360	mov	x0, x19
0000000000041364	ldp	x29, x30, [sp, #0x10]
0000000000041368	ldp	x20, x19, [sp], #0x20
000000000004136c	ret
_Kotlin_NSDictionaryAsKMap_valueIterator:
0000000000041370	stp	x20, x19, [sp, #-0x20]!
0000000000041374	stp	x29, x30, [sp, #0x10]
0000000000041378	add	x29, sp, #0x10
000000000004137c	mov	x19, x1
0000000000041380	ldar	x8, [x0]
0000000000041384	and	x8, x8, #0xfffffffffffffffc
0000000000041388	ldr	x9, [x8]
000000000004138c	cmp	x8, #0x0
0000000000041390	ccmp	x9, x8, #0x4, ne
0000000000041394	b.ne	0x413a0
0000000000041398	mov	x0, #0x0
000000000004139c	b	0x413a8
00000000000413a0	add	x8, x8, #0x10
00000000000413a4	ldar	x0, [x8]
00000000000413a8	nop
00000000000413ac	ldr	x1, #0x35664 ; Objc selector ref: objectEnumerator
00000000000413b0	bl	0x55584 ; Objc message: -[x0 objectEnumerator]
00000000000413b4	bl	0x555b4 ; symbol stub for: _objc_retain
00000000000413b8	mov	x20, x0
00000000000413bc	bl	_Kotlin_initRuntimeIfNeeded
00000000000413c0	mov	x0, x19
00000000000413c4	bl	_Kotlin_NSEnumeratorAsKIterator_create
00000000000413c8	mov	x19, x0
00000000000413cc	ldar	x8, [x0]
00000000000413d0	and	x8, x8, #0xfffffffffffffffc
00000000000413d4	ldr	x9, [x8]
00000000000413d8	cmp	x9, x8
00000000000413dc	csel	x0, xzr, x8, eq
00000000000413e0	cbz	x0, 0x413fc
00000000000413e4	add	x8, x0, #0x10
00000000000413e8	stlr	x20, [x8]
00000000000413ec	mov	x0, x19
00000000000413f0	ldp	x29, x30, [sp, #0x10]
00000000000413f4	ldp	x20, x19, [sp], #0x20
00000000000413f8	ret
00000000000413fc	mov	x0, x19
0000000000041400	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000041404	add	x8, x0, #0x10
0000000000041408	stlr	x20, [x8]
000000000004140c	mov	x0, x19
0000000000041410	ldp	x29, x30, [sp, #0x10]
0000000000041414	ldp	x20, x19, [sp], #0x20
0000000000041418	ret
__ZN5konan13consolePrintfEPKcz:
000000000004141c	stp	x28, x27, [sp, #-0x20]!
0000000000041420	stp	x29, x30, [sp, #0x10]
0000000000041424	add	x29, sp, #0x10
0000000000041428	sub	sp, sp, #0x410
000000000004142c	mov	x2, x0
0000000000041430	add	x8, x29, #0x10
0000000000041434	str	x8, [sp, #0x8]
0000000000041438	add	x0, sp, #0x10
000000000004143c	add	x3, x29, #0x10
0000000000041440	mov	w1, #0x400
0000000000041444	bl	0x557ac ; symbol stub for: _vsnprintf
0000000000041448	tbnz	w0, #0x1f, 0x41464
000000000004144c	cmp	w0, #0x3ff
0000000000041450	mov	w8, #0x3ff
0000000000041454	csel	w2, w0, w8, lo
0000000000041458	add	x1, sp, #0x10
000000000004145c	mov	w0, #0x1
0000000000041460	bl	0x557b8 ; symbol stub for: _write
0000000000041464	add	sp, sp, #0x410
0000000000041468	ldp	x29, x30, [sp, #0x10]
000000000004146c	ldp	x28, x27, [sp], #0x20
0000000000041470	ret
__ZN5konan13consoleErrorfEPKcz:
0000000000041474	stp	x28, x27, [sp, #-0x20]!
0000000000041478	stp	x29, x30, [sp, #0x10]
000000000004147c	add	x29, sp, #0x10
0000000000041480	sub	sp, sp, #0x410
0000000000041484	mov	x2, x0
0000000000041488	add	x8, x29, #0x10
000000000004148c	str	x8, [sp, #0x8]
0000000000041490	add	x0, sp, #0x10
0000000000041494	add	x3, x29, #0x10
0000000000041498	mov	w1, #0x400
000000000004149c	bl	0x557ac ; symbol stub for: _vsnprintf
00000000000414a0	tbnz	w0, #0x1f, 0x414bc
00000000000414a4	cmp	w0, #0x3ff
00000000000414a8	mov	w8, #0x3ff
00000000000414ac	csel	w2, w0, w8, lo
00000000000414b0	add	x1, sp, #0x10
00000000000414b4	mov	w0, #0x2
00000000000414b8	bl	0x557b8 ; symbol stub for: _write
00000000000414bc	add	sp, sp, #0x410
00000000000414c0	ldp	x29, x30, [sp, #0x10]
00000000000414c4	ldp	x28, x27, [sp], #0x20
00000000000414c8	ret
__ZN5konan15currentThreadIdEv:
00000000000414cc	sub	sp, sp, #0x20
00000000000414d0	stp	x29, x30, [sp, #0x10]
00000000000414d4	add	x29, sp, #0x10
00000000000414d8	bl	0x556c8 ; symbol stub for: _pthread_self
00000000000414dc	add	x1, sp, #0x8
00000000000414e0	bl	0x556ec ; symbol stub for: _pthread_threadid_np
00000000000414e4	cbnz	w0, 0x41500
00000000000414e8	ldr	w8, [sp, #0xc]
00000000000414ec	cbnz	w8, 0x41510
00000000000414f0	ldr	w0, [sp, #0x8]
00000000000414f4	ldp	x29, x30, [sp, #0x10]
00000000000414f8	add	sp, sp, #0x20
00000000000414fc	ret
0000000000041500	adr	x2, #0x1d401 ; literal pool for: "Error getting thread id"
0000000000041504	nop
0000000000041508	mov	w0, #0x0
000000000004150c	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
0000000000041510	adr	x2, #0x1d409 ; literal pool for: "Thread id is not a uint32"
0000000000041514	nop
0000000000041518	mov	w0, #0x0
000000000004151c	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z:
0000000000041520	sub	sp, sp, #0x20
0000000000041524	stp	x29, x30, [sp, #0x10]
0000000000041528	add	x29, sp, #0x10
000000000004152c	mov	x0, x2
0000000000041530	add	x8, x29, #0x10
0000000000041534	str	x8, [sp, #0x8]
0000000000041538	add	x1, x29, #0x10
000000000004153c	bl	__ZN12_GLOBAL__N_111PrintAssertEbPKcS1_Pc
0000000000041540	bl	__ZN5konan5abortEv
__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE6appendEPKcm:
0000000000041544	stp	x28, x27, [sp, #-0x60]!
0000000000041548	stp	x26, x25, [sp, #0x10]
000000000004154c	stp	x24, x23, [sp, #0x20]
0000000000041550	stp	x22, x21, [sp, #0x30]
0000000000041554	stp	x20, x19, [sp, #0x40]
0000000000041558	stp	x29, x30, [sp, #0x50]
000000000004155c	add	x29, sp, #0x50
0000000000041560	mov	x20, x2
0000000000041564	mov	x21, x1
0000000000041568	mov	x19, x0
000000000004156c	ldrsb	w9, [x0, #0x17]
0000000000041570	and	x8, x9, #0xff
0000000000041574	tbnz	w9, #0x1f, 0x415f4
0000000000041578	mov	w26, #0x16
000000000004157c	mov	x22, x8
0000000000041580	sub	x9, x26, x22
0000000000041584	cmp	x9, x20
0000000000041588	b.hs	0x4160c
000000000004158c	add	x27, x22, x20
0000000000041590	sub	x9, x27, x26
0000000000041594	mov	x10, #-0x12
0000000000041598	sub	x10, x10, x26
000000000004159c	cmp	x10, x9
00000000000415a0	b.lo	0x416e0
00000000000415a4	tbnz	w8, #0x7, 0x4161c
00000000000415a8	mov	x23, x19
00000000000415ac	mov	x8, #-0x1a
00000000000415b0	movk	x8, #0x7fff, lsl #48
00000000000415b4	cmp	x26, x8
00000000000415b8	b.hi	0x41630
00000000000415bc	lsl	x8, x26, #1
00000000000415c0	cmp	x27, x8
00000000000415c4	csel	x8, x8, x27, lo
00000000000415c8	add	x9, x8, #0x10
00000000000415cc	and	x9, x9, #0xfffffffffffffff0
00000000000415d0	cmp	x8, #0x17
00000000000415d4	mov	w8, #0x17
00000000000415d8	csel	x24, x8, x9, lo
00000000000415dc	mov	x0, x24
00000000000415e0	mov	w1, #0x1
00000000000415e4	bl	0x553d4 ; symbol stub for: _calloc
00000000000415e8	mov	x25, x0
00000000000415ec	cbnz	x22, 0x41648
00000000000415f0	b	0x41658
00000000000415f4	ldp	x22, x9, [x19, #0x8]
00000000000415f8	and	x9, x9, #0x7fffffffffffffff
00000000000415fc	sub	x26, x9, #0x1
0000000000041600	sub	x9, x26, x22
0000000000041604	cmp	x9, x20
0000000000041608	b.lo	0x4158c
000000000004160c	cbz	x20, 0x416c0
0000000000041610	tbnz	w8, #0x7, 0x4168c
0000000000041614	mov	x23, x19
0000000000041618	b	0x41690
000000000004161c	ldr	x23, [x19]
0000000000041620	mov	x8, #-0x1a
0000000000041624	movk	x8, #0x7fff, lsl #48
0000000000041628	cmp	x26, x8
000000000004162c	b.ls	0x415bc
0000000000041630	mov	x24, #-0x11
0000000000041634	mov	x0, x24
0000000000041638	mov	w1, #0x1
000000000004163c	bl	0x553d4 ; symbol stub for: _calloc
0000000000041640	mov	x25, x0
0000000000041644	cbz	x22, 0x41658
0000000000041648	mov	x0, x25
000000000004164c	mov	x1, x23
0000000000041650	mov	x2, x22
0000000000041654	bl	0x554ac ; symbol stub for: _memcpy
0000000000041658	add	x0, x25, x22
000000000004165c	mov	x1, x21
0000000000041660	mov	x2, x20
0000000000041664	bl	0x554ac ; symbol stub for: _memcpy
0000000000041668	cmp	x26, #0x16
000000000004166c	b.eq	0x41678
0000000000041670	mov	x0, x23
0000000000041674	bl	0x55458 ; symbol stub for: _free
0000000000041678	orr	x8, x24, #0x8000000000000000
000000000004167c	stp	x27, x8, [x19, #0x8]
0000000000041680	str	x25, [x19]
0000000000041684	add	x8, x25, x27
0000000000041688	b	0x416bc
000000000004168c	ldr	x23, [x19]
0000000000041690	add	x0, x23, x22
0000000000041694	mov	x1, x21
0000000000041698	mov	x2, x20
000000000004169c	bl	0x554ac ; symbol stub for: _memcpy
00000000000416a0	add	x8, x22, x20
00000000000416a4	ldrsb	w9, [x19, #0x17]
00000000000416a8	tbnz	w9, #0x1f, 0x416b4
00000000000416ac	strb	w8, [x19, #0x17]
00000000000416b0	b	0x416b8
00000000000416b4	str	x8, [x19, #0x8]
00000000000416b8	add	x8, x23, x8
00000000000416bc	strb	wzr, [x8]
00000000000416c0	mov	x0, x19
00000000000416c4	ldp	x29, x30, [sp, #0x50]
00000000000416c8	ldp	x20, x19, [sp, #0x40]
00000000000416cc	ldp	x22, x21, [sp, #0x30]
00000000000416d0	ldp	x24, x23, [sp, #0x20]
00000000000416d4	ldp	x26, x25, [sp, #0x10]
00000000000416d8	ldp	x28, x27, [sp], #0x60
00000000000416dc	ret
00000000000416e0	mov	x0, x19
00000000000416e4	bl	0x551ac ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ZN12_GLOBAL__N_111PrintAssertEbPKcS1_Pc:
00000000000416e8	stp	x24, x23, [sp, #-0x40]!
00000000000416ec	stp	x22, x21, [sp, #0x10]
00000000000416f0	stp	x20, x19, [sp, #0x20]
00000000000416f4	stp	x29, x30, [sp, #0x30]
00000000000416f8	add	x29, sp, #0x30
00000000000416fc	sub	sp, sp, #0x400
0000000000041700	mov	x20, x1
0000000000041704	mov	x21, x0
0000000000041708	adr	x2, #0x1d1b8 ; literal pool for: "runtime assert: "
000000000004170c	nop
0000000000041710	mov	w22, #0x400
0000000000041714	mov	x0, sp
0000000000041718	mov	w1, #0x400
000000000004171c	bl	__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz
0000000000041720	mov	x19, x1
0000000000041724	cbz	x1, 0x41760
0000000000041728	subs	x23, x19, #0x1
000000000004172c	b.ne	0x41738
0000000000041730	strb	wzr, [x0]
0000000000041734	b	0x41760
0000000000041738	mov	x1, x19
000000000004173c	mov	x2, x21
0000000000041740	mov	x3, x20
0000000000041744	bl	0x557ac ; symbol stub for: _vsnprintf
0000000000041748	mov	w8, w0
000000000004174c	cmp	x23, x8
0000000000041750	csel	x8, x23, x8, lo
0000000000041754	sub	x8, x19, x8
0000000000041758	tst	w0, #0x80000000
000000000004175c	csel	x19, x19, x8, ne
0000000000041760	sub	w2, w22, w19
0000000000041764	mov	x1, sp
0000000000041768	mov	w0, #0x2
000000000004176c	bl	0x557b8 ; symbol stub for: _write
0000000000041770	adr	x0, #0x1d50a ; literal pool for: "\n"
0000000000041774	nop
0000000000041778	bl	__ZN5konan13consoleErrorfEPKcz
000000000004177c	add	sp, sp, #0x400
0000000000041780	ldp	x29, x30, [sp, #0x30]
0000000000041784	ldp	x20, x19, [sp, #0x20]
0000000000041788	ldp	x22, x21, [sp, #0x10]
000000000004178c	ldp	x24, x23, [sp], #0x40
0000000000041790	ret
0000000000041794	bl	___clang_call_terminate
__ZN5konan5abortEv:
0000000000041798	stp	x29, x30, [sp, #-0x10]!
000000000004179c	mov	x29, sp
00000000000417a0	bl	0x55398 ; symbol stub for: _abort
__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz:
00000000000417a4	sub	sp, sp, #0x40
00000000000417a8	stp	x22, x21, [sp, #0x10]
00000000000417ac	stp	x20, x19, [sp, #0x20]
00000000000417b0	stp	x29, x30, [sp, #0x30]
00000000000417b4	add	x29, sp, #0x30
00000000000417b8	mov	x20, x1
00000000000417bc	mov	x19, x0
00000000000417c0	add	x8, x29, #0x10
00000000000417c4	str	x8, [sp, #0x8]
00000000000417c8	cbz	x1, 0x41804
00000000000417cc	subs	x21, x20, #0x1
00000000000417d0	b.ne	0x417dc
00000000000417d4	strb	wzr, [x19]
00000000000417d8	b	0x41804
00000000000417dc	ldr	x3, [sp, #0x8]
00000000000417e0	mov	x0, x19
00000000000417e4	mov	x1, x20
00000000000417e8	bl	0x557ac ; symbol stub for: _vsnprintf
00000000000417ec	tbnz	w0, #0x1f, 0x41804
00000000000417f0	mov	w8, w0
00000000000417f4	cmp	x21, x8
00000000000417f8	csel	x8, x21, x8, lo
00000000000417fc	add	x19, x19, x8
0000000000041800	sub	x20, x20, x8
0000000000041804	mov	x0, x19
0000000000041808	mov	x1, x20
000000000004180c	ldp	x29, x30, [sp, #0x30]
0000000000041810	ldp	x20, x19, [sp, #0x20]
0000000000041814	ldp	x22, x21, [sp, #0x10]
0000000000041818	add	sp, sp, #0x40
000000000004181c	ret
__ZN6kotlin10StackTraceILm18446744073709551615EE7currentEm:
0000000000041820	sub	sp, sp, #0x60
0000000000041824	stp	x24, x23, [sp, #0x20]
0000000000041828	stp	x22, x21, [sp, #0x30]
000000000004182c	stp	x20, x19, [sp, #0x40]
0000000000041830	stp	x29, x30, [sp, #0x50]
0000000000041834	add	x29, sp, #0x50
0000000000041838	mov	x19, x0
000000000004183c	add	x0, sp, #0x8
0000000000041840	bl	__ZN6kotlin8internal20GetCurrentStackTraceEm
0000000000041844	stp	xzr, xzr, [x19]
0000000000041848	str	xzr, [x19, #0x10]
000000000004184c	ldp	x20, x8, [sp, #0x8]
0000000000041850	subs	x21, x8, x20
0000000000041854	b.eq	0x418a0
0000000000041858	asr	x23, x21, #3
000000000004185c	lsr	x8, x23, #61
0000000000041860	cbnz	x8, 0x418dc
0000000000041864	mov	x0, x23
0000000000041868	mov	w1, #0x8
000000000004186c	bl	0x553d4 ; symbol stub for: _calloc
0000000000041870	mov	x22, x0
0000000000041874	stp	x0, x0, [x19]
0000000000041878	add	x8, x0, x23, lsl #3
000000000004187c	str	x8, [x19, #0x10]
0000000000041880	cmp	x21, #0x1
0000000000041884	b.lt	0x4189c
0000000000041888	mov	x0, x22
000000000004188c	mov	x1, x20
0000000000041890	mov	x2, x21
0000000000041894	bl	0x554ac ; symbol stub for: _memcpy
0000000000041898	add	x22, x22, x21
000000000004189c	str	x22, [x19, #0x8]
00000000000418a0	cbz	x20, 0x418c4
00000000000418a4	str	x20, [sp, #0x10]
00000000000418a8	mov	x0, x20
00000000000418ac	ldp	x29, x30, [sp, #0x50]
00000000000418b0	ldp	x20, x19, [sp, #0x40]
00000000000418b4	ldp	x22, x21, [sp, #0x30]
00000000000418b8	ldp	x24, x23, [sp, #0x20]
00000000000418bc	add	sp, sp, #0x60
00000000000418c0	b	0x55458 ; symbol stub for: _free
00000000000418c4	ldp	x29, x30, [sp, #0x50]
00000000000418c8	ldp	x20, x19, [sp, #0x40]
00000000000418cc	ldp	x22, x21, [sp, #0x30]
00000000000418d0	ldp	x24, x23, [sp, #0x20]
00000000000418d4	add	sp, sp, #0x60
00000000000418d8	ret
00000000000418dc	mov	x0, x19
00000000000418e0	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000418e4	brk	#0x1
00000000000418e8	mov	x20, x0
00000000000418ec	ldr	x0, [x19]
00000000000418f0	cbz	x0, 0x418fc
00000000000418f4	str	x0, [x19, #0x8]
00000000000418f8	bl	0x55458 ; symbol stub for: _free
00000000000418fc	mov	x0, x20
0000000000041900	bl	___clang_call_terminate
__ZL18snprintf_with_addrPcmmPKvbPKcz:
0000000000041904	stp	x28, x27, [sp, #-0x60]!
0000000000041908	stp	x26, x25, [sp, #0x10]
000000000004190c	stp	x24, x23, [sp, #0x20]
0000000000041910	stp	x22, x21, [sp, #0x30]
0000000000041914	stp	x20, x19, [sp, #0x40]
0000000000041918	stp	x29, x30, [sp, #0x50]
000000000004191c	add	x29, sp, #0x50
0000000000041920	sub	sp, sp, #0x290
0000000000041924	mov	x19, x5
0000000000041928	mov	x20, x4
000000000004192c	mov	x23, x3
0000000000041930	mov	x22, x2
0000000000041934	mov	x21, x0
0000000000041938	mov	w8, #0x7830
000000000004193c	movk	w8, #0x30, lsl #16
0000000000041940	str	w8, [sp, #0x5c]
0000000000041944	movi.16b	v0, #0x0
0000000000041948	stp	q0, q0, [sp, #0x30]
000000000004194c	add	x1, sp, #0x30
0000000000041950	mov	x0, x3
0000000000041954	bl	0x55440 ; symbol stub for: _dladdr
0000000000041958	ldr	x24, [sp, #0x30]
000000000004195c	cbz	x24, 0x4197c
0000000000041960	mov	x0, x24
0000000000041964	mov	w1, #0x2f
0000000000041968	bl	0x55770 ; symbol stub for: _strrchr
000000000004196c	cmp	x0, #0x0
0000000000041970	csinc	x25, x24, x0, eq
0000000000041974	cbnz	x23, 0x41988
0000000000041978	b	0x41a04
000000000004197c	adr	x25, #0x1cf58 ; literal pool for: "???"
0000000000041980	nop
0000000000041984	cbz	x23, 0x41a04
0000000000041988	sub	x1, x29, #0x70
000000000004198c	mov	x0, x23
0000000000041990	bl	0x55440 ; symbol stub for: _dladdr
0000000000041994	cbz	w0, 0x41a04
0000000000041998	ldur	x24, [x29, #-0x60]
000000000004199c	cbz	x24, 0x419ac
00000000000419a0	sub	x8, x29, #0x70
00000000000419a4	add	x8, x8, #0x18
00000000000419a8	b	0x419bc
00000000000419ac	ldur	x24, [x29, #-0x70]
00000000000419b0	cbz	x24, 0x419dc
00000000000419b4	sub	x8, x29, #0x70
00000000000419b8	add	x8, x8, #0x8
00000000000419bc	ldr	x8, [x8]
00000000000419c0	sub	x26, x23, x8
00000000000419c4	add	x0, sp, #0x5c
00000000000419c8	mov	x1, x24
00000000000419cc	mov	w2, #0x200
00000000000419d0	bl	0x55764 ; symbol stub for: _strncpy
00000000000419d4	strb	wzr, [sp, #0x25b]
00000000000419d8	b	0x41a08
00000000000419dc	sub	x24, x29, #0x84
00000000000419e0	ldur	x8, [x29, #-0x58]
00000000000419e4	str	x8, [sp]
00000000000419e8	adr	x2, #0x1cf16 ; literal pool for: "%p"
00000000000419ec	nop
00000000000419f0	sub	x0, x29, #0x84
00000000000419f4	mov	w1, #0x14
00000000000419f8	bl	__ZN5konan8snprintfEPcmPKcz
00000000000419fc	cmp	w0, #0x1
0000000000041a00	b.ge	0x419a0
0000000000041a04	mov	x26, x23
0000000000041a08	add	x8, sp, #0x5c
0000000000041a0c	stp	x8, x26, [sp, #0x18]
0000000000041a10	stp	x25, x23, [sp, #0x8]
0000000000041a14	str	x22, [sp]
0000000000041a18	adr	x2, #0x1cec0 ; literal pool for: "%-4zd%-35s %-18p %s + %td "
0000000000041a1c	nop
0000000000041a20	mov	x0, x21
0000000000041a24	mov	w1, #0x3ff
0000000000041a28	bl	__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz
0000000000041a2c	cbz	w20, 0x41a3c
0000000000041a30	adr	x2, #0x1cec3 ; literal pool for: "[inlined] "
0000000000041a34	nop
0000000000041a38	bl	__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz
0000000000041a3c	add	x8, x29, #0x10
0000000000041a40	stur	x8, [x29, #-0x70]
0000000000041a44	cbz	x1, 0x41a64
0000000000041a48	cmp	x1, #0x1
0000000000041a4c	b.ne	0x41a58
0000000000041a50	strb	wzr, [x0]
0000000000041a54	b	0x41a64
0000000000041a58	ldur	x3, [x29, #-0x70]
0000000000041a5c	mov	x2, x19
0000000000041a60	bl	0x557ac ; symbol stub for: _vsnprintf
0000000000041a64	add	sp, sp, #0x290
0000000000041a68	ldp	x29, x30, [sp, #0x50]
0000000000041a6c	ldp	x20, x19, [sp, #0x40]
0000000000041a70	ldp	x22, x21, [sp, #0x30]
0000000000041a74	ldp	x24, x23, [sp, #0x20]
0000000000041a78	ldp	x26, x25, [sp, #0x10]
0000000000041a7c	ldp	x28, x27, [sp], #0x60
0000000000041a80	ret
__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEENS6_IS8_EEED1Ev:
0000000000041a84	stp	x22, x21, [sp, #-0x30]!
0000000000041a88	stp	x20, x19, [sp, #0x10]
0000000000041a8c	stp	x29, x30, [sp, #0x20]
0000000000041a90	add	x29, sp, #0x20
0000000000041a94	mov	x19, x0
0000000000041a98	ldr	x20, [x0]
0000000000041a9c	cbz	x20, 0x41ae4
0000000000041aa0	ldr	x8, [x19, #0x8]
0000000000041aa4	cmp	x8, x20
0000000000041aa8	b.ne	0x41ac0
0000000000041aac	mov	x0, x20
0000000000041ab0	b	0x41adc
0000000000041ab4	mov	x8, x21
0000000000041ab8	cmp	x21, x20
0000000000041abc	b.eq	0x41ad8
0000000000041ac0	sub	x21, x8, #0x18
0000000000041ac4	ldursb	w9, [x8, #-0x1]
0000000000041ac8	tbz	w9, #0x1f, 0x41ab4
0000000000041acc	ldur	x0, [x8, #-0x18]
0000000000041ad0	bl	0x55458 ; symbol stub for: _free
0000000000041ad4	b	0x41ab4
0000000000041ad8	ldr	x0, [x19]
0000000000041adc	str	x20, [x19, #0x8]
0000000000041ae0	bl	0x55458 ; symbol stub for: _free
0000000000041ae4	mov	x0, x19
0000000000041ae8	ldp	x29, x30, [sp, #0x20]
0000000000041aec	ldp	x20, x19, [sp, #0x10]
0000000000041af0	ldp	x22, x21, [sp], #0x30
0000000000041af4	ret
__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev:
0000000000041af8	stp	x20, x19, [sp, #-0x20]!
0000000000041afc	stp	x29, x30, [sp, #0x10]
0000000000041b00	add	x29, sp, #0x10
0000000000041b04	mov	x19, x0
0000000000041b08	ldr	x9, [x0, #0x8]
0000000000041b0c	cbz	x9, 0x41b44
0000000000041b10	ldr	w8, [x19, #0x10]
0000000000041b14	add	x0, x9, #0x138
0000000000041b18	ldaxr	w9, [x0]
0000000000041b1c	stlxr	w10, w8, [x0]
0000000000041b20	cbnz	w10, 0x41b18
0000000000041b24	cbnz	w8, 0x41b44
0000000000041b28	cmp	w9, #0x1
0000000000041b2c	b.ne	0x41b44
0000000000041b30	adr	x8, #0x52759
0000000000041b34	nop
0000000000041b38	ldarb	w8, [x8]
0000000000041b3c	tbz	w8, #0x0, 0x41b44
0000000000041b40	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000041b44	mov	x0, x19
0000000000041b48	ldp	x29, x30, [sp, #0x10]
0000000000041b4c	ldp	x20, x19, [sp], #0x20
0000000000041b50	ret
__ZN5konan8snprintfEPcmPKcz:
0000000000041b54	sub	sp, sp, #0x20
0000000000041b58	stp	x29, x30, [sp, #0x10]
0000000000041b5c	add	x29, sp, #0x10
0000000000041b60	add	x8, x29, #0x10
0000000000041b64	str	x8, [sp, #0x8]
0000000000041b68	add	x3, x29, #0x10
0000000000041b6c	bl	0x557ac ; symbol stub for: _vsnprintf
0000000000041b70	ldp	x29, x30, [sp, #0x10]
0000000000041b74	add	sp, sp, #0x20
0000000000041b78	ret
__ZN6kotlin8internal20GetCurrentStackTraceEm:
0000000000041b7c	sub	sp, sp, #0x60
0000000000041b80	stp	x22, x21, [sp, #0x30]
0000000000041b84	stp	x20, x19, [sp, #0x40]
0000000000041b88	stp	x29, x30, [sp, #0x50]
0000000000041b8c	add	x29, sp, #0x50
0000000000041b90	mov	x19, x0
0000000000041b94	str	xzr, [sp, #0x20]
0000000000041b98	mov	w8, #0x1
0000000000041b9c	str	w8, [sp, #0x28]
0000000000041ba0	strb	wzr, [sp, #0x2c]
0000000000041ba4	adrp	x0, 57 ; 0x7a000
0000000000041ba8	add	x0, x0, #0x2c0
0000000000041bac	ldr	x8, [x0]
0000000000041bb0	blr	x8
0000000000041bb4	ldr	x8, [x0]
0000000000041bb8	cbz	x8, 0x41be0
0000000000041bbc	add	x9, x8, #0x138
0000000000041bc0	mov	w11, #0x1
0000000000041bc4	ldaxr	w10, [x9]
0000000000041bc8	stlxr	w12, w11, [x9]
0000000000041bcc	cbnz	w12, 0x41bc4
0000000000041bd0	str	x8, [sp, #0x20]
0000000000041bd4	str	w10, [sp, #0x28]
0000000000041bd8	mov	w8, #0x1
0000000000041bdc	strb	w8, [sp, #0x2c]
0000000000041be0	stp	xzr, xzr, [sp]
0000000000041be4	str	xzr, [sp, #0x10]
0000000000041be8	mov	x0, sp
0000000000041bec	mov	w1, #0x82
0000000000041bf0	bl	__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEE8__appendEm
0000000000041bf4	ldp	x0, x8, [sp]
0000000000041bf8	sub	x8, x8, x0
0000000000041bfc	lsr	x1, x8, #3
0000000000041c00	bl	0x553bc ; symbol stub for: _backtrace
0000000000041c04	cmp	w0, #0x4
0000000000041c08	b.ls	0x41c50
0000000000041c0c	sxtw	x9, w0
0000000000041c10	ldp	x0, x8, [sp]
0000000000041c14	sub	x10, x8, x0
0000000000041c18	asr	x10, x10, #3
0000000000041c1c	cmp	x10, x9
0000000000041c20	b.hs	0x41c6c
0000000000041c24	sub	x1, x9, x10
0000000000041c28	mov	x0, sp
0000000000041c2c	bl	__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEE8__appendEm
0000000000041c30	ldp	x21, x8, [sp]
0000000000041c34	mov	x0, x21
0000000000041c38	sub	x9, x21, x0
0000000000041c3c	add	x9, x9, x21
0000000000041c40	add	x1, x9, #0x20
0000000000041c44	subs	x20, x8, x1
0000000000041c48	b.ne	0x41c90
0000000000041c4c	b	0x41c9c
0000000000041c50	stp	xzr, xzr, [x19]
0000000000041c54	str	xzr, [x19, #0x10]
0000000000041c58	ldr	x0, [sp]
0000000000041c5c	cbz	x0, 0x41cb4
0000000000041c60	str	x0, [sp, #0x8]
0000000000041c64	bl	0x55458 ; symbol stub for: _free
0000000000041c68	b	0x41cb4
0000000000041c6c	b.ls	0x41c78
0000000000041c70	add	x8, x0, x9, lsl #3
0000000000041c74	str	x8, [sp, #0x8]
0000000000041c78	mov	x21, x0
0000000000041c7c	sub	x9, x21, x0
0000000000041c80	add	x9, x9, x21
0000000000041c84	add	x1, x9, #0x20
0000000000041c88	subs	x20, x8, x1
0000000000041c8c	b.eq	0x41c9c
0000000000041c90	mov	x2, x20
0000000000041c94	bl	0x554b8 ; symbol stub for: _memmove
0000000000041c98	ldr	x0, [sp]
0000000000041c9c	add	x8, x21, x20
0000000000041ca0	stp	x0, x8, [x19]
0000000000041ca4	ldr	x8, [sp, #0x10]
0000000000041ca8	str	x8, [x19, #0x10]
0000000000041cac	stp	xzr, xzr, [sp]
0000000000041cb0	str	xzr, [sp, #0x10]
0000000000041cb4	ldr	x9, [sp, #0x20]
0000000000041cb8	cbz	x9, 0x41cf0
0000000000041cbc	ldr	w8, [sp, #0x28]
0000000000041cc0	add	x0, x9, #0x138
0000000000041cc4	ldaxr	w9, [x0]
0000000000041cc8	stlxr	w10, w8, [x0]
0000000000041ccc	cbnz	w10, 0x41cc4
0000000000041cd0	cbnz	w8, 0x41cf0
0000000000041cd4	cmp	w9, #0x1
0000000000041cd8	b.ne	0x41cf0
0000000000041cdc	adr	x8, #0x525ad
0000000000041ce0	nop
0000000000041ce4	ldarb	w8, [x8]
0000000000041ce8	tbz	w8, #0x0, 0x41cf0
0000000000041cec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000041cf0	ldp	x29, x30, [sp, #0x50]
0000000000041cf4	ldp	x20, x19, [sp, #0x40]
0000000000041cf8	ldp	x22, x21, [sp, #0x30]
0000000000041cfc	add	sp, sp, #0x60
0000000000041d00	ret
0000000000041d04	b	0x41d08
0000000000041d08	mov	x19, x0
0000000000041d0c	mov	x0, sp
0000000000041d10	bl	__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEED1Ev
0000000000041d14	add	x0, sp, #0x18
0000000000041d18	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
0000000000041d1c	mov	x0, x19
0000000000041d20	bl	___clang_call_terminate
__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEE8__appendEm:
0000000000041d24	stp	x26, x25, [sp, #-0x50]!
0000000000041d28	stp	x24, x23, [sp, #0x10]
0000000000041d2c	stp	x22, x21, [sp, #0x20]
0000000000041d30	stp	x20, x19, [sp, #0x30]
0000000000041d34	stp	x29, x30, [sp, #0x40]
0000000000041d38	add	x29, sp, #0x40
0000000000041d3c	mov	x22, x1
0000000000041d40	mov	x19, x0
0000000000041d44	ldp	x0, x8, [x0, #0x8]
0000000000041d48	sub	x9, x8, x0
0000000000041d4c	cmp	x1, x9, asr #3
0000000000041d50	b.ls	0x41da4
0000000000041d54	ldr	x20, [x19]
0000000000041d58	sub	x21, x0, x20
0000000000041d5c	asr	x25, x21, #3
0000000000041d60	add	x9, x25, x22
0000000000041d64	lsr	x10, x9, #61
0000000000041d68	cbnz	x10, 0x41e38
0000000000041d6c	sub	x8, x8, x20
0000000000041d70	asr	x10, x8, #2
0000000000041d74	cmp	x10, x9
0000000000041d78	csel	x9, x9, x10, lo
0000000000041d7c	mov	x10, #0xfffffffffffffff
0000000000041d80	cmp	x10, x8, asr #3
0000000000041d84	mov	x8, #0x1fffffffffffffff
0000000000041d88	csel	x24, x9, x8, hi
0000000000041d8c	cbz	x24, 0x41dc0
0000000000041d90	mov	x0, x24
0000000000041d94	mov	w1, #0x8
0000000000041d98	bl	0x553d4 ; symbol stub for: _calloc
0000000000041d9c	mov	x23, x0
0000000000041da0	b	0x41dc4
0000000000041da4	cbz	x22, 0x41db8
0000000000041da8	lsl	x1, x22, #3
0000000000041dac	add	x20, x0, x1
0000000000041db0	bl	0x553c8 ; symbol stub for: _bzero
0000000000041db4	mov	x0, x20
0000000000041db8	str	x0, [x19, #0x8]
0000000000041dbc	b	0x41e20
0000000000041dc0	mov	x23, #0x0
0000000000041dc4	add	x25, x23, x25, lsl #3
0000000000041dc8	lsl	x22, x22, #3
0000000000041dcc	add	x24, x23, x24, lsl #3
0000000000041dd0	mov	x0, x25
0000000000041dd4	mov	x1, x22
0000000000041dd8	bl	0x553c8 ; symbol stub for: _bzero
0000000000041ddc	add	x22, x25, x22
0000000000041de0	cmp	x21, #0x1
0000000000041de4	b.lt	0x41df8
0000000000041de8	mov	x0, x23
0000000000041dec	mov	x1, x20
0000000000041df0	mov	x2, x21
0000000000041df4	bl	0x554ac ; symbol stub for: _memcpy
0000000000041df8	stp	x23, x22, [x19]
0000000000041dfc	str	x24, [x19, #0x10]
0000000000041e00	cbz	x20, 0x41e20
0000000000041e04	mov	x0, x20
0000000000041e08	ldp	x29, x30, [sp, #0x40]
0000000000041e0c	ldp	x20, x19, [sp, #0x30]
0000000000041e10	ldp	x22, x21, [sp, #0x20]
0000000000041e14	ldp	x24, x23, [sp, #0x10]
0000000000041e18	ldp	x26, x25, [sp], #0x50
0000000000041e1c	b	0x55458 ; symbol stub for: _free
0000000000041e20	ldp	x29, x30, [sp, #0x40]
0000000000041e24	ldp	x20, x19, [sp, #0x30]
0000000000041e28	ldp	x22, x21, [sp, #0x20]
0000000000041e2c	ldp	x24, x23, [sp, #0x10]
0000000000041e30	ldp	x26, x25, [sp], #0x50
0000000000041e34	ret
0000000000041e38	mov	x0, x19
0000000000041e3c	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEED1Ev:
0000000000041e40	stp	x20, x19, [sp, #-0x20]!
0000000000041e44	stp	x29, x30, [sp, #0x10]
0000000000041e48	add	x29, sp, #0x10
0000000000041e4c	mov	x19, x0
0000000000041e50	ldr	x0, [x0]
0000000000041e54	cbz	x0, 0x41e60
0000000000041e58	str	x0, [x19, #0x8]
0000000000041e5c	bl	0x55458 ; symbol stub for: _free
0000000000041e60	mov	x0, x19
0000000000041e64	ldp	x29, x30, [sp, #0x10]
0000000000041e68	ldp	x20, x19, [sp], #0x20
0000000000041e6c	ret
_Kotlin_initRuntimeIfNeeded:
0000000000041e70	sub	sp, sp, #0xc0
0000000000041e74	stp	x28, x27, [sp, #0x60]
0000000000041e78	stp	x26, x25, [sp, #0x70]
0000000000041e7c	stp	x24, x23, [sp, #0x80]
0000000000041e80	stp	x22, x21, [sp, #0x90]
0000000000041e84	stp	x20, x19, [sp, #0xa0]
0000000000041e88	stp	x29, x30, [sp, #0xb0]
0000000000041e8c	add	x29, sp, #0xb0
0000000000041e90	adrp	x22, 57 ; 0x7a000
0000000000041e94	add	x22, x22, #0x308
0000000000041e98	ldr	x23, [x22]
0000000000041e9c	mov	x0, x22
0000000000041ea0	blr	x23
0000000000041ea4	ldr	x8, [x0]
0000000000041ea8	cbnz	x8, 0x4273c
0000000000041eac	adr	x8, #0x5265c
0000000000041eb0	nop
0000000000041eb4	ldarb	w8, [x8]
0000000000041eb8	tbz	w8, #0x0, 0x4277c
0000000000041ebc	adr	x8, #0x52474
0000000000041ec0	nop
0000000000041ec4	ldar	x8, [x8]
0000000000041ec8	cmn	x8, #0x1
0000000000041ecc	b.eq	0x41ef8
0000000000041ed0	add	x8, sp, #0x38
0000000000041ed4	str	x8, [sp, #0x48]
0000000000041ed8	add	x8, sp, #0x48
0000000000041edc	str	x8, [sp, #0x40]
0000000000041ee0	adr	x0, #0x52450
0000000000041ee4	nop
0000000000041ee8	adr	x2, #-0xf448
0000000000041eec	nop
0000000000041ef0	add	x1, sp, #0x40
0000000000041ef4	bl	0x551d0 ; symbol stub for: __ZNSt3__111__call_onceERVmPvPFvS2_E
0000000000041ef8	bl	_mi_thread_init
0000000000041efc	mov	w0, #0x1
0000000000041f00	mov	w1, #0x18
0000000000041f04	bl	0x553d4 ; symbol stub for: _calloc
0000000000041f08	cbz	x0, 0x426e4
0000000000041f0c	mov	x25, x0
0000000000041f10	stp	xzr, xzr, [x0]
0000000000041f14	str	xzr, [x0, #0x10]
0000000000041f18	mov	x0, x22
0000000000041f1c	blr	x23
0000000000041f20	ldr	x8, [x0]
0000000000041f24	cbnz	x8, 0x427ac
0000000000041f28	mov	x0, x22
0000000000041f2c	blr	x23
0000000000041f30	str	x25, [x0]
0000000000041f34	adr	x8, #0x52374
0000000000041f38	nop
0000000000041f3c	ldaxr	w9, [x8]
0000000000041f40	add	w9, w9, #0x1
0000000000041f44	stlxr	w10, w9, [x8]
0000000000041f48	cbnz	w10, 0x41f3c
0000000000041f4c	adr	x8, #0x52358
0000000000041f50	nop
0000000000041f54	ldaxr	w9, [x8]
0000000000041f58	cbnz	w9, 0x41f6c
0000000000041f5c	mov	w28, #0x1
0000000000041f60	stlxr	w9, w28, [x8]
0000000000041f64	cbnz	w9, 0x41f54
0000000000041f68	b	0x41f74
0000000000041f6c	mov	w28, #0x0
0000000000041f70	clrex
0000000000041f74	str	x23, [sp, #0x28]
0000000000041f78	bl	__ZN5konan15currentThreadIdEv
0000000000041f7c	mov	x21, x0
0000000000041f80	mov	w19, #0x1
0000000000041f84	mov	w0, #0x1
0000000000041f88	mov	w1, #0x160
0000000000041f8c	bl	0x553d4 ; symbol stub for: _calloc
0000000000041f90	mov	x20, x0
0000000000041f94	mov	x23, x0
0000000000041f98	str	w21, [x23, #0x8]!
0000000000041f9c	adr	x21, #0x525e4
0000000000041fa0	nop
0000000000041fa4	add	x8, x21, #0x50
0000000000041fa8	add	x9, x0, #0x18
0000000000041fac	stp	x8, x9, [x0, #0x10]
0000000000041fb0	str	x9, [x0, #0x20]
0000000000041fb4	add	x8, x0, #0x30
0000000000041fb8	stp	x8, x8, [x0, #0x30]
0000000000041fbc	movi.16b	v0, #0x0
0000000000041fc0	stp	q0, q0, [x0, #0x40]
0000000000041fc4	stp	q0, q0, [x0, #0x60]
0000000000041fc8	mov	w8, #0x3f800000
0000000000041fcc	str	w8, [x0, #0x80]
0000000000041fd0	stp	xzr, xzr, [x0, #0x88]
0000000000041fd4	add	x8, x21, #0x88
0000000000041fd8	stp	xzr, x8, [x0, #0x98]
0000000000041fdc	add	x8, x0, #0xa8
0000000000041fe0	stp	x8, x8, [x0, #0xa8]
0000000000041fe4	add	x8, x0, #0xc0
0000000000041fe8	stp	x8, x8, [x0, #0xc0]
0000000000041fec	add	x8, x21, #0xc0
0000000000041ff0	add	x9, x0, #0xe0
0000000000041ff4	stp	x8, x9, [x0, #0xd8]
0000000000041ff8	str	x9, [x0, #0xe8]
0000000000041ffc	add	x8, x0, #0xf8
0000000000042000	stp	x8, x8, [x0, #0xf8]
0000000000042004	add	x0, x0, #0x118
0000000000042008	stp	xzr, xzr, [x20, #0x108]
000000000004200c	add	x1, x21, #0xf8
0000000000042010	mov	x2, x23
0000000000042014	bl	__ZN6kotlin2gc2GC10ThreadDataC1ERS1_RNS_2mm10ThreadDataE
0000000000042018	stp	xzr, xzr, [x20, #0x120]
000000000004201c	str	xzr, [x20, #0x130]
0000000000042020	str	w19, [x20, #0x138]
0000000000042024	str	x23, [x20, #0x140]
0000000000042028	strb	wzr, [x20, #0x148]
000000000004202c	stp	xzr, xzr, [x20, #0x150]
0000000000042030	mov	x0, x21
0000000000042034	bl	0x55200 ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
0000000000042038	adr	x8, #0x52538
000000000004203c	nop
0000000000042040	ldr	x9, [x8]
0000000000042044	add	x10, x9, #0x158
0000000000042048	add	x11, x8, #0x8
000000000004204c	cmp	x9, #0x0
0000000000042050	csel	x10, x11, x10, eq
0000000000042054	csel	x9, xzr, x9, eq
0000000000042058	str	x20, [x10]
000000000004205c	str	xzr, [x8]
0000000000042060	ldr	x21, [x20, #0x150]
0000000000042064	str	x9, [x20, #0x150]
0000000000042068	cbz	x21, 0x420a0
000000000004206c	mov	x0, x21
0000000000042070	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
0000000000042074	mov	x0, x21
0000000000042078	bl	0x55458 ; symbol stub for: _free
000000000004207c	adrp	x8, 82 ; 0x94000
0000000000042080	ldr	x21, [x8, #0x570]
0000000000042084	str	x20, [x8, #0x570]
0000000000042088	cbz	x21, 0x420a8
000000000004208c	mov	x0, x21
0000000000042090	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
0000000000042094	mov	x0, x21
0000000000042098	bl	0x55458 ; symbol stub for: _free
000000000004209c	b	0x420a8
00000000000420a0	adrp	x8, 82 ; 0x94000
00000000000420a4	str	x20, [x8, #0x570]
00000000000420a8	add	x21, x20, #0x138
00000000000420ac	adr	x0, #0x524d4
00000000000420b0	nop
00000000000420b4	bl	0x5520c ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
00000000000420b8	adrp	x26, 56 ; 0x7a000
00000000000420bc	add	x26, x26, #0x2c0
00000000000420c0	ldr	x23, [x26]
00000000000420c4	mov	x0, x26
00000000000420c8	blr	x23
00000000000420cc	str	x20, [x0]
00000000000420d0	str	x20, [x25]
00000000000420d4	ldaxr	w19, [x21]
00000000000420d8	stlxr	w8, wzr, [x21]
00000000000420dc	cbnz	w8, 0x420d4
00000000000420e0	cmp	w19, #0x1
00000000000420e4	b.ne	0x42100
00000000000420e8	adr	x8, #0x521a1
00000000000420ec	nop
00000000000420f0	ldarb	w8, [x8]
00000000000420f4	tbz	w8, #0x0, 0x42100
00000000000420f8	mov	x0, x21
00000000000420fc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042100	ldr	x22, [x25]
0000000000042104	adrp	x0, 56 ; 0x7a000
0000000000042108	add	x0, x0, #0x320
000000000004210c	ldr	x8, [x0]
0000000000042110	blr	x8
0000000000042114	ldr	x24, [x0]
0000000000042118	str	x25, [sp, #0x30]
000000000004211c	cbnz	x24, 0x424f4
0000000000042120	str	x8, [sp, #0x18]
0000000000042124	bl	__ZN12_GLOBAL__N_18theStateEv
0000000000042128	str	x22, [sp, #0x10]
000000000004212c	str	x0, [sp, #0x20]
0000000000042130	str	x0, [sp, #0x48]
0000000000042134	mov	w8, #0x1
0000000000042138	strb	w8, [sp, #0x50]
000000000004213c	str	xzr, [sp, #0x58]
0000000000042140	mov	x0, x26
0000000000042144	blr	x23
0000000000042148	ldr	x27, [x0]
000000000004214c	add	x24, x27, #0x138
0000000000042150	ldaxr	w25, [x24]
0000000000042154	stlxr	w9, w8, [x24]
0000000000042158	cbnz	w9, 0x42150
000000000004215c	ldr	x0, [sp, #0x20]
0000000000042160	bl	0x556a4 ; symbol stub for: _pthread_mutex_lock
0000000000042164	cbz	x27, 0x42198
0000000000042168	ldaxr	w8, [x24]
000000000004216c	stlxr	w9, w25, [x24]
0000000000042170	cbnz	w9, 0x42168
0000000000042174	cbnz	w25, 0x42198
0000000000042178	cmp	w8, #0x1
000000000004217c	b.ne	0x42198
0000000000042180	adr	x8, #0x52109
0000000000042184	nop
0000000000042188	ldarb	w8, [x8]
000000000004218c	tbz	w8, #0x0, 0x42198
0000000000042190	mov	x0, x24
0000000000042194	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042198	mov	w22, #0x1
000000000004219c	mov	w0, #0x1
00000000000421a0	mov	w1, #0xe0
00000000000421a4	bl	0x553d4 ; symbol stub for: _calloc
00000000000421a8	mov	x24, x0
00000000000421ac	cbz	x0, 0x424d0
00000000000421b0	ldr	x10, [sp, #0x20]
00000000000421b4	ldr	w8, [x10, #0xe8]
00000000000421b8	add	w9, w8, #0x1
00000000000421bc	str	w9, [x10, #0xe8]
00000000000421c0	stp	w8, w22, [x24]
00000000000421c4	movi.16b	v0, #0x0
00000000000421c8	mov	x27, x24
00000000000421cc	str	q0, [x27, #0x8]!
00000000000421d0	stur	q0, [x24, #0x18]
00000000000421d4	stur	q0, [x24, #0x28]
00000000000421d8	str	xzr, [x24, #0x48]
00000000000421dc	mov	x8, x24
00000000000421e0	str	xzr, [x8, #0x40]!
00000000000421e4	str	x8, [x24, #0x38]
00000000000421e8	stp	xzr, xzr, [x24, #0xd0]
00000000000421ec	mov	x0, x26
00000000000421f0	blr	x23
00000000000421f4	ldr	x25, [x0]
00000000000421f8	add	x26, x25, #0x138
00000000000421fc	ldaxr	w23, [x26]
0000000000042200	stlxr	w8, w22, [x26]
0000000000042204	cbnz	w8, 0x421fc
0000000000042208	add	x0, x24, #0x58
000000000004220c	mov	x1, #0x0
0000000000042210	bl	0x55698 ; symbol stub for: _pthread_mutex_init
0000000000042214	add	x0, x24, #0x98
0000000000042218	mov	x1, #0x0
000000000004221c	bl	0x55638 ; symbol stub for: _pthread_cond_init
0000000000042220	cbz	x25, 0x42254
0000000000042224	ldaxr	w8, [x26]
0000000000042228	stlxr	w9, w23, [x26]
000000000004222c	cbnz	w9, 0x42224
0000000000042230	cbnz	w23, 0x42254
0000000000042234	cmp	w8, #0x1
0000000000042238	b.ne	0x42254
000000000004223c	adr	x8, #0x5204d
0000000000042240	nop
0000000000042244	ldarb	w8, [x8]
0000000000042248	tbz	w8, #0x0, 0x42254
000000000004224c	mov	x0, x26
0000000000042250	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042254	ldr	w25, [x24]
0000000000042258	ldr	x8, [sp, #0x20]
000000000004225c	add	x10, x8, #0x98
0000000000042260	sxtw	x22, w25
0000000000042264	ldr	x26, [x8, #0xa0]
0000000000042268	str	x10, [sp, #0x8]
000000000004226c	cbz	x26, 0x42294
0000000000042270	fmov	d0, x26
0000000000042274	cnt.8b	v0, v0
0000000000042278	uaddlv.8b	h0, v0
000000000004227c	fmov	w8, s0
0000000000042280	cmp	x8, #0x1
0000000000042284	b.hi	0x42298
0000000000042288	sub	x9, x26, #0x1
000000000004228c	and	x23, x9, x22
0000000000042290	b	0x422ac
0000000000042294	b	0x42308
0000000000042298	mov	x23, x22
000000000004229c	cmp	x26, x22
00000000000422a0	b.hi	0x422ac
00000000000422a4	udiv	x9, x22, x26
00000000000422a8	msub	x23, x9, x26, x22
00000000000422ac	ldr	x9, [x10]
00000000000422b0	ldr	x27, [x9, x23, lsl #3]
00000000000422b4	cbz	x27, 0x42308
00000000000422b8	sub	x9, x26, #0x1
00000000000422bc	b	0x422d8
00000000000422c0	and	x10, x10, x9
00000000000422c4	cmp	x10, x23
00000000000422c8	b.ne	0x42308
00000000000422cc	ldr	w10, [x27, #0x10]
00000000000422d0	cmp	w10, w25
00000000000422d4	b.eq	0x424cc
00000000000422d8	ldr	x27, [x27]
00000000000422dc	cbz	x27, 0x42308
00000000000422e0	ldr	x10, [x27, #0x8]
00000000000422e4	cmp	x10, x22
00000000000422e8	b.eq	0x422cc
00000000000422ec	cmp	x8, #0x1
00000000000422f0	b.ls	0x422c0
00000000000422f4	cmp	x10, x26
00000000000422f8	b.lo	0x422c4
00000000000422fc	udiv	x11, x10, x26
0000000000042300	msub	x10, x11, x26, x10
0000000000042304	b	0x422c4
0000000000042308	mov	w0, #0x1
000000000004230c	mov	w1, #0x20
0000000000042310	bl	0x553d4 ; symbol stub for: _calloc
0000000000042314	mov	x27, x0
0000000000042318	str	w25, [x0, #0x10]
000000000004231c	str	x22, [x0, #0x8]
0000000000042320	ldr	x25, [sp, #0x20]
0000000000042324	ldr	x8, [x25, #0xb0]
0000000000042328	add	x8, x8, #0x1
000000000004232c	ucvtf	s0, x8
0000000000042330	ldr	s1, [x25, #0xb8]
0000000000042334	cbz	x26, 0x42348
0000000000042338	ucvtf	s2, x26
000000000004233c	fmul	s2, s1, s2
0000000000042340	fcmp	s2, s0
0000000000042344	b.pl	0x42450
0000000000042348	cmp	x26, #0x3
000000000004234c	cset	w8, lo
0000000000042350	sub	x9, x26, #0x1
0000000000042354	tst	x26, x9
0000000000042358	cset	w9, ne
000000000004235c	orr	w8, w8, w9
0000000000042360	bfi	x8, x26, #1, #63
0000000000042364	fdiv	s0, s0, s1
0000000000042368	fcvtpu	x9, s0
000000000004236c	cmp	x8, x9
0000000000042370	csel	x26, x9, x8, lo
0000000000042374	subs	x8, x26, #0x1
0000000000042378	b.ne	0x42384
000000000004237c	mov	w26, #0x2
0000000000042380	b	0x42398
0000000000042384	tst	x26, x8
0000000000042388	b.eq	0x42398
000000000004238c	mov	x0, x26
0000000000042390	bl	0x551dc ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000042394	mov	x26, x0
0000000000042398	ldr	x23, [x25, #0xa0]
000000000004239c	cmp	x26, x23
00000000000423a0	b.ls	0x423b4
00000000000423a4	ldr	x0, [sp, #0x8]
00000000000423a8	mov	x1, x26
00000000000423ac	bl	__ZNSt3__112__hash_tableINS_17__hash_value_typeIiP6WorkerEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEEN6kotlin11std_support9allocatorIS4_EEE8__rehashEm
00000000000423b0	b	0x42420
00000000000423b4	b.hs	0x42420
00000000000423b8	ldr	x8, [x25, #0xb0]
00000000000423bc	ucvtf	s0, x8
00000000000423c0	ldr	s1, [x25, #0xb8]
00000000000423c4	fdiv	s0, s0, s1
00000000000423c8	fcvtpu	x0, s0
00000000000423cc	cmp	x23, #0x3
00000000000423d0	b.lo	0x4240c
00000000000423d4	fmov	d0, x23
00000000000423d8	cnt.8b	v0, v0
00000000000423dc	uaddlv.8b	h0, v0
00000000000423e0	fmov	w8, s0
00000000000423e4	cmp	x8, #0x1
00000000000423e8	b.hi	0x4240c
00000000000423ec	sub	x8, x0, #0x1
00000000000423f0	clz	x8, x8
00000000000423f4	neg	x8, x8
00000000000423f8	mov	w9, #0x1
00000000000423fc	lsl	x8, x9, x8
0000000000042400	cmp	x0, #0x2
0000000000042404	csel	x0, x0, x8, lo
0000000000042408	b	0x42410
000000000004240c	bl	0x551dc ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000042410	cmp	x26, x0
0000000000042414	csel	x26, x0, x26, lo
0000000000042418	cmp	x26, x23
000000000004241c	b.lo	0x423a4
0000000000042420	ldr	x26, [x25, #0xa0]
0000000000042424	sub	x8, x26, #0x1
0000000000042428	tst	x26, x8
000000000004242c	b.ne	0x42438
0000000000042430	and	x23, x8, x22
0000000000042434	b	0x42450
0000000000042438	cmp	x26, x22
000000000004243c	b.ls	0x42448
0000000000042440	mov	x23, x22
0000000000042444	b	0x42450
0000000000042448	udiv	x8, x22, x26
000000000004244c	msub	x23, x8, x26, x22
0000000000042450	ldr	x10, [sp, #0x8]
0000000000042454	ldr	x8, [x10]
0000000000042458	ldr	x8, [x8, x23, lsl #3]
000000000004245c	cbz	x8, 0x4246c
0000000000042460	ldr	x9, [x8]
0000000000042464	str	x9, [x27]
0000000000042468	b	0x424bc
000000000004246c	mov	x8, x25
0000000000042470	ldr	x9, [x8, #0xa8]!
0000000000042474	str	x9, [x27]
0000000000042478	str	x27, [x8]
000000000004247c	ldur	x9, [x8, #-0x10]
0000000000042480	str	x8, [x9, x23, lsl #3]
0000000000042484	ldr	x8, [x27]
0000000000042488	cbz	x8, 0x424c0
000000000004248c	ldr	x8, [x8, #0x8]
0000000000042490	sub	x9, x26, #0x1
0000000000042494	tst	x26, x9
0000000000042498	b.ne	0x424a4
000000000004249c	and	x8, x8, x9
00000000000424a0	b	0x424b4
00000000000424a4	cmp	x8, x26
00000000000424a8	b.lo	0x424b4
00000000000424ac	udiv	x9, x8, x26
00000000000424b0	msub	x8, x9, x26, x8
00000000000424b4	ldr	x9, [x10]
00000000000424b8	add	x8, x9, x8, lsl #3
00000000000424bc	str	x27, [x8]
00000000000424c0	ldr	x8, [x25, #0xb0]
00000000000424c4	add	x8, x8, #0x1
00000000000424c8	str	x8, [x25, #0xb0]
00000000000424cc	str	x24, [x27, #0x18]
00000000000424d0	add	x0, sp, #0x48
00000000000424d4	bl	__ZN12_GLOBAL__N_16LockerD1Ev
00000000000424d8	adrp	x0, 56 ; 0x7a000
00000000000424dc	add	x0, x0, #0x320
00000000000424e0	ldr	x8, [sp, #0x18]
00000000000424e4	blr	x8
00000000000424e8	str	x24, [x0]
00000000000424ec	ldr	x25, [sp, #0x30]
00000000000424f0	ldr	x22, [sp, #0x10]
00000000000424f4	bl	0x556c8 ; symbol stub for: _pthread_self
00000000000424f8	stp	x0, x22, [x24, #0xd0]
00000000000424fc	str	x24, [x25, #0x8]
0000000000042500	ldr	x23, [x25]
0000000000042504	adrp	x26, 82 ; 0x94000
0000000000042508	ldr	x22, [x26, #0x4f0]
000000000004250c	cbz	x22, 0x4252c
0000000000042510	ldr	x8, [x22]
0000000000042514	mov	w0, #0x0
0000000000042518	mov	x1, x23
000000000004251c	blr	x8
0000000000042520	ldr	x22, [x22, #0x8]
0000000000042524	cbnz	x22, 0x42510
0000000000042528	ldr	x23, [x25]
000000000004252c	mov	x24, x23
0000000000042530	ldr	x8, [x24, #0x48]!
0000000000042534	ldrsw	x22, [x24, #0x44]
0000000000042538	ldr	x0, [x24, #0x8]
000000000004253c	sub	x9, x0, x8
0000000000042540	asr	x27, x9, #3
0000000000042544	cmp	x27, x22
0000000000042548	b.hs	0x425a4
000000000004254c	sub	x25, x22, x27
0000000000042550	ldr	x9, [x23, #0x58]
0000000000042554	sub	x10, x9, x0
0000000000042558	cmp	x25, x10, asr #3
000000000004255c	b.ls	0x425b8
0000000000042560	tbnz	w22, #0x1f, 0x427c0
0000000000042564	sub	x8, x9, x8
0000000000042568	asr	x9, x8, #2
000000000004256c	cmp	x9, x22
0000000000042570	csel	x9, x22, x9, lo
0000000000042574	mov	x10, #0xfffffffffffffff
0000000000042578	cmp	x10, x8, asr #3
000000000004257c	mov	x8, #0x1fffffffffffffff
0000000000042580	csel	x8, x9, x8, hi
0000000000042584	cbz	x8, 0x425d8
0000000000042588	str	x8, [sp, #0x20]
000000000004258c	mov	x0, x8
0000000000042590	mov	w1, #0x8
0000000000042594	bl	0x553d4 ; symbol stub for: _calloc
0000000000042598	mov	x26, x0
000000000004259c	ldr	x8, [sp, #0x20]
00000000000425a0	b	0x425dc
00000000000425a4	ldr	x24, [sp, #0x30]
00000000000425a8	b.ls	0x42638
00000000000425ac	add	x8, x8, x22, lsl #3
00000000000425b0	str	x8, [x23, #0x50]
00000000000425b4	b	0x42638
00000000000425b8	cbz	x25, 0x425cc
00000000000425bc	lsl	x1, x25, #3
00000000000425c0	add	x22, x0, x1
00000000000425c4	bl	0x553c8 ; symbol stub for: _bzero
00000000000425c8	mov	x0, x22
00000000000425cc	ldr	x24, [sp, #0x30]
00000000000425d0	str	x0, [x23, #0x50]
00000000000425d4	b	0x42638
00000000000425d8	mov	x26, #0x0
00000000000425dc	add	x27, x26, x27, lsl #3
00000000000425e0	lsl	x1, x25, #3
00000000000425e4	add	x8, x26, x8, lsl #3
00000000000425e8	str	x8, [sp, #0x20]
00000000000425ec	mov	x0, x27
00000000000425f0	bl	0x553c8 ; symbol stub for: _bzero
00000000000425f4	add	x22, x26, x22, lsl #3
00000000000425f8	ldp	x1, x8, [x23, #0x48]
00000000000425fc	sub	x2, x8, x1
0000000000042600	sub	x25, x27, x2
0000000000042604	cmp	x2, #0x1
0000000000042608	b.lt	0x42618
000000000004260c	mov	x0, x25
0000000000042610	bl	0x554ac ; symbol stub for: _memcpy
0000000000042614	ldr	x1, [x24]
0000000000042618	ldr	x24, [sp, #0x30]
000000000004261c	adrp	x26, 82 ; 0x94000
0000000000042620	stp	x25, x22, [x23, #0x48]
0000000000042624	ldr	x8, [sp, #0x20]
0000000000042628	str	x8, [x23, #0x58]
000000000004262c	cbz	x1, 0x42638
0000000000042630	mov	x0, x1
0000000000042634	bl	0x55458 ; symbol stub for: _free
0000000000042638	mov	w8, #0x1
000000000004263c	str	w8, [x23, #0x88]
0000000000042640	cbz	w28, 0x42678
0000000000042644	nop
0000000000042648	ldr	x8, #0x51eb8
000000000004264c	cmn	x8, #0x1
0000000000042650	b.ne	0x4275c
0000000000042654	ldr	x22, [x26, #0x4f0]
0000000000042658	cbz	x22, 0x4269c
000000000004265c	ldr	x23, [x24]
0000000000042660	ldr	x8, [x22]
0000000000042664	mov	w0, #0x1
0000000000042668	mov	x1, x23
000000000004266c	blr	x8
0000000000042670	ldr	x22, [x22, #0x8]
0000000000042674	cbnz	x22, 0x42660
0000000000042678	ldr	x22, [x26, #0x4f0]
000000000004267c	cbz	x22, 0x4269c
0000000000042680	ldr	x23, [x24]
0000000000042684	ldr	x8, [x22]
0000000000042688	mov	w0, #0x2
000000000004268c	mov	x1, x23
0000000000042690	blr	x8
0000000000042694	ldr	x22, [x22, #0x8]
0000000000042698	cbnz	x22, 0x42684
000000000004269c	mov	w8, #0x1
00000000000426a0	str	w8, [x24, #0x10]
00000000000426a4	adrp	x22, 56 ; 0x7a000
00000000000426a8	add	x22, x22, #0x308
00000000000426ac	ldr	x23, [sp, #0x28]
00000000000426b0	cbz	x20, 0x426e4
00000000000426b4	ldaxr	w8, [x21]
00000000000426b8	stlxr	w9, w19, [x21]
00000000000426bc	cbnz	w9, 0x426b4
00000000000426c0	cbnz	w19, 0x426e4
00000000000426c4	cmp	w8, #0x1
00000000000426c8	b.ne	0x426e4
00000000000426cc	adr	x8, #0x51bbd
00000000000426d0	nop
00000000000426d4	ldarb	w8, [x8]
00000000000426d8	tbz	w8, #0x0, 0x426e4
00000000000426dc	mov	x0, x21
00000000000426e0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000426e4	mov	x0, x22
00000000000426e8	blr	x23
00000000000426ec	ldr	x20, [x0]
00000000000426f0	adr	x0, #0x36750
00000000000426f4	nop
00000000000426f8	adr	x1, #0xae8
00000000000426fc	nop
0000000000042700	bl	0x556bc ; symbol stub for: _pthread_once
0000000000042704	mov	w0, #0x1
0000000000042708	mov	w1, #0x18
000000000004270c	bl	0x553d4 ; symbol stub for: _calloc
0000000000042710	mov	x19, x0
0000000000042714	adr	x8, #0x1e8
0000000000042718	nop
000000000004271c	stp	x8, x20, [x0, #0x8]
0000000000042720	adrp	x20, 82 ; 0x94000
0000000000042724	ldr	x0, [x20, #0x4e8]
0000000000042728	bl	0x55668 ; symbol stub for: _pthread_getspecific
000000000004272c	str	x0, [x19]
0000000000042730	ldr	x0, [x20, #0x4e8]
0000000000042734	mov	x1, x19
0000000000042738	bl	0x556e0 ; symbol stub for: _pthread_setspecific
000000000004273c	ldp	x29, x30, [sp, #0xb0]
0000000000042740	ldp	x20, x19, [sp, #0xa0]
0000000000042744	ldp	x22, x21, [sp, #0x90]
0000000000042748	ldp	x24, x23, [sp, #0x80]
000000000004274c	ldp	x26, x25, [sp, #0x70]
0000000000042750	ldp	x28, x27, [sp, #0x60]
0000000000042754	add	sp, sp, #0xc0
0000000000042758	ret
000000000004275c	adr	x0, #0x51da4
0000000000042760	nop
0000000000042764	adr	x1, #0x2f0cc
0000000000042768	nop
000000000004276c	bl	0x55434 ; symbol stub for: _dispatch_once
0000000000042770	ldr	x22, [x26, #0x4f0]
0000000000042774	cbnz	x22, 0x4265c
0000000000042778	b	0x4269c
000000000004277c	adr	x20, #0x51d8c
0000000000042780	nop
0000000000042784	mov	x0, x20
0000000000042788	bl	0x55344 ; symbol stub for: ___cxa_guard_acquire
000000000004278c	cbz	w0, 0x41ebc
0000000000042790	adr	x0, #0x4c24
0000000000042794	nop
0000000000042798	bl	0x552d8 ; symbol stub for: __ZSt13set_terminatePFvvE
000000000004279c	str	x0, [x20, #0x8]
00000000000427a0	mov	x0, x20
00000000000427a4	bl	0x55350 ; symbol stub for: ___cxa_guard_release
00000000000427a8	b	0x41ebc
00000000000427ac	adr	x2, #0x1c187 ; literal pool for: "No active runtimes allowed"
00000000000427b0	nop
00000000000427b4	mov	w0, #0x0
00000000000427b8	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
00000000000427bc	b	0x427c8
00000000000427c0	mov	x0, x24
00000000000427c4	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000427c8	brk	#0x1
00000000000427cc	mov	x22, x0
00000000000427d0	cbz	x27, 0x4286c
00000000000427d4	mov	x0, x27
00000000000427d8	b	0x42868
00000000000427dc	bl	___clang_call_terminate
00000000000427e0	mov	x22, x0
00000000000427e4	cbz	x27, 0x428bc
00000000000427e8	ldaxr	w8, [x24]
00000000000427ec	stlxr	w9, w25, [x24]
00000000000427f0	cbnz	w9, 0x427e8
00000000000427f4	cbnz	w25, 0x428bc
00000000000427f8	cmp	w8, #0x1
00000000000427fc	b.ne	0x428bc
0000000000042800	adr	x8, #0x51a89
0000000000042804	nop
0000000000042808	ldarb	w8, [x8]
000000000004280c	tbz	w8, #0x0, 0x428bc
0000000000042810	mov	x0, x24
0000000000042814	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042818	b	0x428bc
000000000004281c	mov	x22, x0
0000000000042820	cbz	x25, 0x42854
0000000000042824	ldaxr	w8, [x26]
0000000000042828	stlxr	w9, w23, [x26]
000000000004282c	cbnz	w9, 0x42824
0000000000042830	cbnz	w23, 0x42854
0000000000042834	cmp	w8, #0x1
0000000000042838	b.ne	0x42854
000000000004283c	adr	x8, #0x51a4d
0000000000042840	nop
0000000000042844	ldarb	w8, [x8]
0000000000042848	tbz	w8, #0x0, 0x42854
000000000004284c	mov	x0, x26
0000000000042850	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042854	ldr	x0, [x24, #0x40]
0000000000042858	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
000000000004285c	mov	x0, x27
0000000000042860	bl	__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev
0000000000042864	mov	x0, x24
0000000000042868	bl	0x55458 ; symbol stub for: _free
000000000004286c	add	x0, sp, #0x48
0000000000042870	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000042874	b	0x428b8
0000000000042878	mov	x19, x0
000000000004287c	cbz	x20, 0x42890
0000000000042880	mov	x0, x20
0000000000042884	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
0000000000042888	mov	x0, x20
000000000004288c	bl	0x55458 ; symbol stub for: _free
0000000000042890	mov	x0, x19
0000000000042894	bl	___clang_call_terminate
0000000000042898	bl	___clang_call_terminate
000000000004289c	bl	___clang_call_terminate
00000000000428a0	b	0x428b4
00000000000428a4	mov	x22, x0
00000000000428a8	b	0x428e4
00000000000428ac	b	0x428b4
00000000000428b0	b	0x428b4
00000000000428b4	mov	x22, x0
00000000000428b8	cbz	x20, 0x428e4
00000000000428bc	ldaxr	w8, [x21]
00000000000428c0	stlxr	w9, w19, [x21]
00000000000428c4	cbnz	w9, 0x428bc
00000000000428c8	cbnz	w19, 0x428e4
00000000000428cc	cmp	w8, #0x1
00000000000428d0	b.ne	0x428e4
00000000000428d4	adr	x8, #0x519b5
00000000000428d8	nop
00000000000428dc	ldarb	w8, [x8]
00000000000428e0	tbnz	w8, #0x0, 0x428ec
00000000000428e4	mov	x0, x22
00000000000428e8	bl	___clang_call_terminate
00000000000428ec	mov	x0, x21
00000000000428f0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000428f4	mov	x0, x22
00000000000428f8	bl	___clang_call_terminate
__ZN12_GLOBAL__N_128Kotlin_deinitRuntimeCallbackEPv:
00000000000428fc	sub	sp, sp, #0x80
0000000000042900	stp	x28, x27, [sp, #0x20]
0000000000042904	stp	x26, x25, [sp, #0x30]
0000000000042908	stp	x24, x23, [sp, #0x40]
000000000004290c	stp	x22, x21, [sp, #0x50]
0000000000042910	stp	x20, x19, [sp, #0x60]
0000000000042914	stp	x29, x30, [sp, #0x70]
0000000000042918	add	x29, sp, #0x70
000000000004291c	mov	x20, x0
0000000000042920	ldr	x8, [x0]
0000000000042924	add	x0, x8, #0x138
0000000000042928	ldaxr	w8, [x0]
000000000004292c	stlxr	w9, wzr, [x0]
0000000000042930	cbnz	w9, 0x42928
0000000000042934	cmp	w8, #0x1
0000000000042938	b.ne	0x42950
000000000004293c	adr	x8, #0x5194d
0000000000042940	nop
0000000000042944	ldarb	w8, [x8]
0000000000042948	tbz	w8, #0x0, 0x42950
000000000004294c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042950	mov	w8, #0x2
0000000000042954	str	w8, [x20, #0x10]
0000000000042958	adrp	x19, 56 ; 0x7a000
000000000004295c	add	x19, x19, #0x308
0000000000042960	ldr	x24, [x19]
0000000000042964	mov	x0, x19
0000000000042968	blr	x24
000000000004296c	str	x20, [x0]
0000000000042970	adr	x8, #0x51938
0000000000042974	nop
0000000000042978	ldaxr	w9, [x8]
000000000004297c	sub	w9, w9, #0x1
0000000000042980	stlxr	w10, w9, [x8]
0000000000042984	cbnz	w10, 0x42978
0000000000042988	ldr	x8, [x20]
000000000004298c	ldr	x9, [x8, #0x48]
0000000000042990	str	x9, [x8, #0x50]
0000000000042994	mov	w9, #0x2
0000000000042998	str	w9, [x8, #0x88]
000000000004299c	ldr	x21, [x20, #0x8]
00000000000429a0	ldrsw	x25, [x21]
00000000000429a4	adrp	x0, 56 ; 0x7a000
00000000000429a8	add	x0, x0, #0x320
00000000000429ac	ldr	x8, [x0]
00000000000429b0	blr	x8
00000000000429b4	str	xzr, [x0]
00000000000429b8	bl	__ZN12_GLOBAL__N_18theStateEv
00000000000429bc	mov	x22, x0
00000000000429c0	ldr	x27, [x21, #0xd8]
00000000000429c4	str	x0, [sp, #0x8]
00000000000429c8	mov	w8, #0x1
00000000000429cc	strb	w8, [sp, #0x10]
00000000000429d0	str	x27, [sp, #0x18]
00000000000429d4	add	x23, x27, #0x138
00000000000429d8	ldaxr	w26, [x23]
00000000000429dc	stlxr	w9, w8, [x23]
00000000000429e0	cbnz	w9, 0x429d8
00000000000429e4	mov	x0, x22
00000000000429e8	bl	0x556a4 ; symbol stub for: _pthread_mutex_lock
00000000000429ec	cbz	x27, 0x42a20
00000000000429f0	ldaxr	w8, [x23]
00000000000429f4	stlxr	w9, w26, [x23]
00000000000429f8	cbnz	w9, 0x429f0
00000000000429fc	cbnz	w26, 0x42a20
0000000000042a00	cmp	w8, #0x1
0000000000042a04	b.ne	0x42a20
0000000000042a08	adr	x8, #0x51881
0000000000042a0c	nop
0000000000042a10	ldarb	w8, [x8]
0000000000042a14	tbz	w8, #0x0, 0x42a20
0000000000042a18	mov	x0, x23
0000000000042a1c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042a20	ldr	x9, [x22, #0xa0]
0000000000042a24	cbz	x9, 0x42ac8
0000000000042a28	ldrsw	x8, [x21]
0000000000042a2c	fmov	d0, x9
0000000000042a30	cnt.8b	v0, v0
0000000000042a34	uaddlv.8b	h0, v0
0000000000042a38	fmov	w10, s0
0000000000042a3c	cmp	x10, #0x1
0000000000042a40	b.hi	0x42a50
0000000000042a44	sub	x11, x9, #0x1
0000000000042a48	and	x13, x11, x8
0000000000042a4c	b	0x42a64
0000000000042a50	mov	x13, x8
0000000000042a54	cmp	x9, x8
0000000000042a58	b.hi	0x42a64
0000000000042a5c	udiv	x11, x8, x9
0000000000042a60	msub	x13, x11, x9, x8
0000000000042a64	ldr	x11, [x22, #0x98]
0000000000042a68	ldr	x12, [x11, x13, lsl #3]
0000000000042a6c	cbz	x12, 0x42ac8
0000000000042a70	ldr	x0, [x12]
0000000000042a74	cbz	x0, 0x42ac8
0000000000042a78	sub	x12, x9, #0x1
0000000000042a7c	b	0x42a94
0000000000042a80	ldr	w14, [x0, #0x10]
0000000000042a84	cmp	w14, w8
0000000000042a88	b.eq	0x42bc8
0000000000042a8c	ldr	x0, [x0]
0000000000042a90	cbz	x0, 0x42ac8
0000000000042a94	ldr	x14, [x0, #0x8]
0000000000042a98	cmp	x14, x8
0000000000042a9c	b.eq	0x42a80
0000000000042aa0	cmp	x10, #0x1
0000000000042aa4	b.hi	0x42ab0
0000000000042aa8	and	x14, x14, x12
0000000000042aac	b	0x42ac0
0000000000042ab0	cmp	x14, x9
0000000000042ab4	b.lo	0x42ac0
0000000000042ab8	udiv	x15, x14, x9
0000000000042abc	msub	x14, x15, x9, x14
0000000000042ac0	cmp	x14, x13
0000000000042ac4	b.eq	0x42a8c
0000000000042ac8	add	x0, sp, #0x8
0000000000042acc	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000042ad0	ldp	x8, x9, [x21, #0x10]
0000000000042ad4	cmp	x9, x8
0000000000042ad8	b.eq	0x42cd8
0000000000042adc	mov	x10, #0xa0a1
0000000000042ae0	movk	x10, #0xa0a0, lsl #16
0000000000042ae4	movk	x10, #0xa0a0, lsl #32
0000000000042ae8	movk	x10, #0xa0a0, lsl #48
0000000000042aec	ldp	x11, x12, [x21, #0x28]
0000000000042af0	umulh	x9, x11, x10
0000000000042af4	lsr	x9, x9, #6
0000000000042af8	ldr	x13, [x8, x9, lsl #3]
0000000000042afc	mov	x14, #-0x66
0000000000042b00	madd	x15, x9, x14, x11
0000000000042b04	mov	w16, #0x28
0000000000042b08	madd	x23, x15, x16, x13
0000000000042b0c	add	x11, x12, x11
0000000000042b10	umulh	x10, x11, x10
0000000000042b14	lsr	x10, x10, #6
0000000000042b18	ldr	x12, [x8, x10, lsl #3]
0000000000042b1c	madd	x10, x10, x14, x11
0000000000042b20	madd	x26, x10, x16, x12
0000000000042b24	cmp	x26, x23
0000000000042b28	b.eq	0x42cd8
0000000000042b2c	add	x27, x8, x9, lsl #3
0000000000042b30	adr	x28, #0x1511c
0000000000042b34	nop
0000000000042b38	b	0x42b44
0000000000042b3c	cmp	x26, x23
0000000000042b40	b.eq	0x42cd8
0000000000042b44	ldr	w9, [x23]
0000000000042b48	cmp	w9, #0x3
0000000000042b4c	b.hi	0x42bac
0000000000042b50	ldr	x8, [x23, #0x8]
0000000000042b54	adr	x10, #0x10
0000000000042b58	ldrh	w11, [x28, x9, lsl #1]
0000000000042b5c	add	x10, x10, x11, lsl #2
0000000000042b60	br	x10
0000000000042b64	ldr	x1, [x21, #0xd8]
0000000000042b68	mov	x0, x8
0000000000042b6c	bl	__ZN12_GLOBAL__N_16Future14cancelUnlockedEP11MemoryState
0000000000042b70	b	0x42bac
0000000000042b74	ldp	x1, x22, [x23, #0x10]
0000000000042b78	cbz	x1, 0x42b88
0000000000042b7c	ldr	x8, [x21, #0xd8]
0000000000042b80	add	x0, x8, #0x8
0000000000042b84	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000042b88	ldr	x1, [x21, #0xd8]
0000000000042b8c	mov	x0, x22
0000000000042b90	bl	__ZN12_GLOBAL__N_16Future14cancelUnlockedEP11MemoryState
0000000000042b94	b	0x42bac
0000000000042b98	cbz	x8, 0x42bac
0000000000042b9c	ldr	x9, [x21, #0xd8]
0000000000042ba0	add	x0, x9, #0x8
0000000000042ba4	mov	x1, x8
0000000000042ba8	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000042bac	add	x23, x23, #0x28
0000000000042bb0	ldr	x8, [x27]
0000000000042bb4	sub	x8, x23, x8
0000000000042bb8	cmp	x8, #0xff0
0000000000042bbc	b.ne	0x42b3c
0000000000042bc0	ldr	x23, [x27, #0x8]!
0000000000042bc4	b	0x42b3c
0000000000042bc8	cmp	x10, #0x1
0000000000042bcc	b.hi	0x42bd8
0000000000042bd0	and	x8, x12, x8
0000000000042bd4	b	0x42be8
0000000000042bd8	cmp	x9, x8
0000000000042bdc	b.hi	0x42be8
0000000000042be0	udiv	x13, x8, x9
0000000000042be4	msub	x8, x13, x9, x8
0000000000042be8	ldr	x14, [x11, x8, lsl #3]
0000000000042bec	mov	x13, x14
0000000000042bf0	ldr	x14, [x14]
0000000000042bf4	cmp	x14, x0
0000000000042bf8	b.ne	0x42bec
0000000000042bfc	add	x14, x22, #0xa8
0000000000042c00	cmp	x13, x14
0000000000042c04	b.eq	0x42c34
0000000000042c08	ldr	x14, [x13, #0x8]
0000000000042c0c	cmp	x10, #0x1
0000000000042c10	b.hi	0x42c1c
0000000000042c14	and	x14, x14, x12
0000000000042c18	b	0x42c2c
0000000000042c1c	cmp	x14, x9
0000000000042c20	b.lo	0x42c2c
0000000000042c24	udiv	x15, x14, x9
0000000000042c28	msub	x14, x15, x9, x14
0000000000042c2c	cmp	x14, x8
0000000000042c30	b.eq	0x42c6c
0000000000042c34	ldr	x14, [x0]
0000000000042c38	cbz	x14, 0x42c68
0000000000042c3c	ldr	x14, [x14, #0x8]
0000000000042c40	cmp	x10, #0x1
0000000000042c44	b.hi	0x42c50
0000000000042c48	and	x14, x14, x12
0000000000042c4c	b	0x42c60
0000000000042c50	cmp	x14, x9
0000000000042c54	b.lo	0x42c60
0000000000042c58	udiv	x15, x14, x9
0000000000042c5c	msub	x14, x15, x9, x14
0000000000042c60	cmp	x14, x8
0000000000042c64	b.eq	0x42c6c
0000000000042c68	str	xzr, [x11, x8, lsl #3]
0000000000042c6c	ldr	x11, [x0]
0000000000042c70	cbz	x11, 0x42cac
0000000000042c74	ldr	x14, [x11, #0x8]
0000000000042c78	cmp	x10, #0x1
0000000000042c7c	b.hi	0x42c88
0000000000042c80	and	x14, x14, x12
0000000000042c84	b	0x42c98
0000000000042c88	cmp	x14, x9
0000000000042c8c	b.lo	0x42c98
0000000000042c90	udiv	x10, x14, x9
0000000000042c94	msub	x14, x10, x9, x14
0000000000042c98	cmp	x14, x8
0000000000042c9c	b.eq	0x42cac
0000000000042ca0	ldr	x8, [x22, #0x98]
0000000000042ca4	str	x13, [x8, x14, lsl #3]
0000000000042ca8	ldr	x11, [x0]
0000000000042cac	str	x11, [x13]
0000000000042cb0	str	xzr, [x0]
0000000000042cb4	ldr	x8, [x22, #0xb0]
0000000000042cb8	sub	x8, x8, #0x1
0000000000042cbc	str	x8, [x22, #0xb0]
0000000000042cc0	bl	0x55458 ; symbol stub for: _free
0000000000042cc4	add	x0, sp, #0x8
0000000000042cc8	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000042ccc	ldp	x8, x9, [x21, #0x10]
0000000000042cd0	cmp	x9, x8
0000000000042cd4	b.ne	0x42adc
0000000000042cd8	ldr	x23, [x21, #0x38]
0000000000042cdc	add	x22, x21, #0x40
0000000000042ce0	b	0x42ce8
0000000000042ce4	mov	x23, x9
0000000000042ce8	cmp	x23, x22
0000000000042cec	b.eq	0x42d4c
0000000000042cf0	ldr	x1, [x23, #0x28]
0000000000042cf4	cbz	x1, 0x42d04
0000000000042cf8	ldr	x8, [x21, #0xd8]
0000000000042cfc	add	x0, x8, #0x8
0000000000042d00	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000042d04	ldr	x8, [x23, #0x8]
0000000000042d08	cbz	x8, 0x42d1c
0000000000042d0c	mov	x23, x8
0000000000042d10	ldr	x8, [x8]
0000000000042d14	cbnz	x8, 0x42d0c
0000000000042d18	b	0x42ce8
0000000000042d1c	mov	x8, x23
0000000000042d20	ldr	x9, [x8, #0x10]!
0000000000042d24	ldr	x10, [x9]
0000000000042d28	cmp	x10, x23
0000000000042d2c	b.eq	0x42ce4
0000000000042d30	ldr	x9, [x8]
0000000000042d34	mov	x8, x9
0000000000042d38	ldr	x23, [x8, #0x10]!
0000000000042d3c	ldr	x10, [x23]
0000000000042d40	cmp	x10, x9
0000000000042d44	b.ne	0x42d30
0000000000042d48	b	0x42ce8
0000000000042d4c	ldr	x1, [x21, #0x50]
0000000000042d50	cbz	x1, 0x42d60
0000000000042d54	ldr	x8, [x21, #0xd8]
0000000000042d58	add	x0, x8, #0x8
0000000000042d5c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000042d60	ldr	x26, [x21, #0xd8]
0000000000042d64	add	x22, x26, #0x138
0000000000042d68	mov	w8, #0x1
0000000000042d6c	ldaxr	w23, [x22]
0000000000042d70	stlxr	w9, w8, [x22]
0000000000042d74	cbnz	w9, 0x42d6c
0000000000042d78	add	x0, x21, #0x58
0000000000042d7c	bl	0x5568c ; symbol stub for: _pthread_mutex_destroy
0000000000042d80	add	x0, x21, #0x98
0000000000042d84	bl	0x5562c ; symbol stub for: _pthread_cond_destroy
0000000000042d88	cbz	x26, 0x42dbc
0000000000042d8c	ldaxr	w8, [x22]
0000000000042d90	stlxr	w9, w23, [x22]
0000000000042d94	cbnz	w9, 0x42d8c
0000000000042d98	cbnz	w23, 0x42dbc
0000000000042d9c	cmp	w8, #0x1
0000000000042da0	b.ne	0x42dbc
0000000000042da4	adr	x8, #0x514e5
0000000000042da8	nop
0000000000042dac	ldarb	w8, [x8]
0000000000042db0	tbz	w8, #0x0, 0x42dbc
0000000000042db4	mov	x0, x22
0000000000042db8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042dbc	add	x22, x21, #0x8
0000000000042dc0	ldr	x0, [x21, #0x40]
0000000000042dc4	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
0000000000042dc8	mov	x0, x22
0000000000042dcc	bl	__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev
0000000000042dd0	mov	x0, x21
0000000000042dd4	bl	0x55458 ; symbol stub for: _free
0000000000042dd8	ldr	x8, [x20]
0000000000042ddc	add	x8, x8, #0x138
0000000000042de0	mov	w9, #0x1
0000000000042de4	ldaxr	wzr, [x8]
0000000000042de8	stlxr	w10, w9, [x8]
0000000000042dec	cbnz	w10, 0x42de4
0000000000042df0	ldr	x21, [x20]
0000000000042df4	nop
0000000000042df8	ldr	x0, #0x516f0
0000000000042dfc	cbz	x0, 0x42e08
0000000000042e00	bl	0x55668 ; symbol stub for: _pthread_getspecific
0000000000042e04	cbz	x0, 0x42e1c
0000000000042e08	adrp	x0, 56 ; 0x7a000
0000000000042e0c	add	x0, x0, #0x2c0
0000000000042e10	ldr	x8, [x0]
0000000000042e14	blr	x8
0000000000042e18	str	xzr, [x0]
0000000000042e1c	adr	x0, #0x51764
0000000000042e20	nop
0000000000042e24	bl	0x55200 ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
0000000000042e28	adr	x9, #0x51748
0000000000042e2c	nop
0000000000042e30	ldp	x8, x9, [x9]
0000000000042e34	cmp	x9, x21
0000000000042e38	b.eq	0x42e98
0000000000042e3c	cmp	x8, x21
0000000000042e40	b.eq	0x42eac
0000000000042e44	ldr	x23, [x21, #0x158]
0000000000042e48	ldr	x22, [x23, #0x150]
0000000000042e4c	str	xzr, [x23, #0x150]
0000000000042e50	ldr	x8, [x21, #0x150]
0000000000042e54	str	xzr, [x21, #0x150]
0000000000042e58	ldr	x21, [x23, #0x150]
0000000000042e5c	str	x8, [x23, #0x150]
0000000000042e60	cbz	x21, 0x42e78
0000000000042e64	mov	x0, x21
0000000000042e68	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
0000000000042e6c	mov	x0, x21
0000000000042e70	bl	0x55458 ; symbol stub for: _free
0000000000042e74	ldr	x8, [x23, #0x150]
0000000000042e78	cbz	x8, 0x42e80
0000000000042e7c	str	x23, [x8, #0x158]
0000000000042e80	cbz	x22, 0x42edc
0000000000042e84	mov	x0, x22
0000000000042e88	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
0000000000042e8c	mov	x0, x22
0000000000042e90	bl	0x55458 ; symbol stub for: _free
0000000000042e94	b	0x42edc
0000000000042e98	ldr	x9, [x21, #0x158]
0000000000042e9c	adrp	x10, 82 ; 0x94000
0000000000042ea0	str	x9, [x10, #0x578]
0000000000042ea4	cmp	x8, x21
0000000000042ea8	b.ne	0x42e44
0000000000042eac	ldr	x9, [x21, #0x150]
0000000000042eb0	str	xzr, [x21, #0x150]
0000000000042eb4	adrp	x22, 82 ; 0x94000
0000000000042eb8	str	x9, [x22, #0x570]
0000000000042ebc	cbz	x8, 0x42ed4
0000000000042ec0	mov	x0, x21
0000000000042ec4	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
0000000000042ec8	mov	x0, x21
0000000000042ecc	bl	0x55458 ; symbol stub for: _free
0000000000042ed0	ldr	x9, [x22, #0x570]
0000000000042ed4	cbz	x9, 0x42edc
0000000000042ed8	str	xzr, [x9, #0x158]
0000000000042edc	adr	x0, #0x516a4
0000000000042ee0	nop
0000000000042ee4	bl	0x5520c ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
0000000000042ee8	mov	x0, x20
0000000000042eec	bl	0x55458 ; symbol stub for: _free
0000000000042ef0	bl	__ZN12_GLOBAL__N_18theStateEv
0000000000042ef4	mov	x20, x0
0000000000042ef8	str	x0, [sp, #0x8]
0000000000042efc	strb	wzr, [sp, #0x10]
0000000000042f00	str	xzr, [sp, #0x18]
0000000000042f04	bl	0x556a4 ; symbol stub for: _pthread_mutex_lock
0000000000042f08	ldr	x8, [x20, #0xc8]
0000000000042f0c	cbz	x8, 0x430e4
0000000000042f10	fmov	d0, x8
0000000000042f14	cnt.8b	v0, v0
0000000000042f18	uaddlv.8b	h0, v0
0000000000042f1c	fmov	w9, s0
0000000000042f20	cmp	x9, #0x1
0000000000042f24	b.hi	0x42f34
0000000000042f28	sub	x10, x8, #0x1
0000000000042f2c	and	x10, x10, x25
0000000000042f30	b	0x42f48
0000000000042f34	mov	x10, x25
0000000000042f38	cmp	x8, x25
0000000000042f3c	b.hi	0x42f48
0000000000042f40	udiv	x10, x25, x8
0000000000042f44	msub	x10, x10, x8, x25
0000000000042f48	ldr	x11, [x20, #0xc0]
0000000000042f4c	ldr	x11, [x11, x10, lsl #3]
0000000000042f50	cbz	x11, 0x430e4
0000000000042f54	ldr	x21, [x11]
0000000000042f58	cbz	x21, 0x430e4
0000000000042f5c	sub	x11, x8, #0x1
0000000000042f60	b	0x42f78
0000000000042f64	ldr	w12, [x21, #0x10]
0000000000042f68	cmp	w12, w25
0000000000042f6c	b.eq	0x42fb0
0000000000042f70	ldr	x21, [x21]
0000000000042f74	cbz	x21, 0x430e4
0000000000042f78	ldr	x12, [x21, #0x8]
0000000000042f7c	cmp	x12, x25
0000000000042f80	b.eq	0x42f64
0000000000042f84	cmp	x9, #0x1
0000000000042f88	b.hi	0x42f94
0000000000042f8c	and	x12, x12, x11
0000000000042f90	b	0x42fa4
0000000000042f94	cmp	x12, x8
0000000000042f98	b.lo	0x42fa4
0000000000042f9c	udiv	x13, x12, x8
0000000000042fa0	msub	x12, x13, x8, x12
0000000000042fa4	cmp	x12, x10
0000000000042fa8	b.eq	0x42f70
0000000000042fac	b	0x430e4
0000000000042fb0	ldr	x0, [x21, #0x18]
0000000000042fb4	bl	0x5565c ; symbol stub for: _pthread_detach
0000000000042fb8	ldr	x9, [x20, #0xc8]
0000000000042fbc	ldr	x8, [x21, #0x8]
0000000000042fc0	fmov	d0, x9
0000000000042fc4	cnt.8b	v0, v0
0000000000042fc8	uaddlv.8b	h0, v0
0000000000042fcc	fmov	w11, s0
0000000000042fd0	cmp	x11, #0x1
0000000000042fd4	b.hi	0x42fe4
0000000000042fd8	sub	x10, x9, #0x1
0000000000042fdc	and	x8, x10, x8
0000000000042fe0	b	0x42ff4
0000000000042fe4	cmp	x8, x9
0000000000042fe8	b.lo	0x42ff4
0000000000042fec	udiv	x10, x8, x9
0000000000042ff0	msub	x8, x10, x9, x8
0000000000042ff4	ldr	x12, [x20, #0xc0]
0000000000042ff8	ldr	x13, [x12, x8, lsl #3]
0000000000042ffc	mov	x10, x13
0000000000043000	ldr	x13, [x13]
0000000000043004	cmp	x13, x21
0000000000043008	b.ne	0x42ffc
000000000004300c	add	x13, x20, #0xd0
0000000000043010	cmp	x10, x13
0000000000043014	b.eq	0x43048
0000000000043018	ldr	x13, [x10, #0x8]
000000000004301c	cmp	x11, #0x1
0000000000043020	b.hi	0x43030
0000000000043024	sub	x14, x9, #0x1
0000000000043028	and	x13, x13, x14
000000000004302c	b	0x43040
0000000000043030	cmp	x13, x9
0000000000043034	b.lo	0x43040
0000000000043038	udiv	x14, x13, x9
000000000004303c	msub	x13, x14, x9, x13
0000000000043040	cmp	x13, x8
0000000000043044	b.eq	0x43084
0000000000043048	ldr	x13, [x21]
000000000004304c	cbz	x13, 0x43080
0000000000043050	ldr	x13, [x13, #0x8]
0000000000043054	cmp	x11, #0x1
0000000000043058	b.hi	0x43068
000000000004305c	sub	x14, x9, #0x1
0000000000043060	and	x13, x13, x14
0000000000043064	b	0x43078
0000000000043068	cmp	x13, x9
000000000004306c	b.lo	0x43078
0000000000043070	udiv	x14, x13, x9
0000000000043074	msub	x13, x14, x9, x13
0000000000043078	cmp	x13, x8
000000000004307c	b.eq	0x43084
0000000000043080	str	xzr, [x12, x8, lsl #3]
0000000000043084	ldr	x12, [x21]
0000000000043088	cbz	x12, 0x430c8
000000000004308c	ldr	x13, [x12, #0x8]
0000000000043090	cmp	x11, #0x1
0000000000043094	b.hi	0x430a4
0000000000043098	sub	x9, x9, #0x1
000000000004309c	and	x13, x13, x9
00000000000430a0	b	0x430b4
00000000000430a4	cmp	x13, x9
00000000000430a8	b.lo	0x430b4
00000000000430ac	udiv	x11, x13, x9
00000000000430b0	msub	x13, x11, x9, x13
00000000000430b4	cmp	x13, x8
00000000000430b8	b.eq	0x430c8
00000000000430bc	ldr	x8, [x20, #0xc0]
00000000000430c0	str	x10, [x8, x13, lsl #3]
00000000000430c4	ldr	x12, [x21]
00000000000430c8	str	x12, [x10]
00000000000430cc	str	xzr, [x21]
00000000000430d0	ldr	x8, [x20, #0xd8]
00000000000430d4	sub	x8, x8, #0x1
00000000000430d8	str	x8, [x20, #0xd8]
00000000000430dc	mov	x0, x21
00000000000430e0	bl	0x55458 ; symbol stub for: _free
00000000000430e4	add	x0, sp, #0x8
00000000000430e8	bl	__ZN12_GLOBAL__N_16LockerD1Ev
00000000000430ec	mov	x0, x19
00000000000430f0	blr	x24
00000000000430f4	str	xzr, [x0]
00000000000430f8	ldp	x29, x30, [sp, #0x70]
00000000000430fc	ldp	x20, x19, [sp, #0x60]
0000000000043100	ldp	x22, x21, [sp, #0x50]
0000000000043104	ldp	x24, x23, [sp, #0x40]
0000000000043108	ldp	x26, x25, [sp, #0x30]
000000000004310c	ldp	x28, x27, [sp, #0x20]
0000000000043110	add	sp, sp, #0x80
0000000000043114	ret
0000000000043118	adr	x2, #0x1b836 ; literal pool for: "Cannot be in queue"
000000000004311c	nop
0000000000043120	mov	w0, #0x0
0000000000043124	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
0000000000043128	brk	#0x1
000000000004312c	mov	x19, x0
0000000000043130	add	x0, sp, #0x8
0000000000043134	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000043138	mov	x0, x19
000000000004313c	bl	0x55194 ; symbol stub for: __Unwind_Resume
0000000000043140	bl	___clang_call_terminate
0000000000043144	mov	x19, x0
0000000000043148	cbz	x27, 0x4317c
000000000004314c	ldaxr	w8, [x23]
0000000000043150	stlxr	w9, w26, [x23]
0000000000043154	cbnz	w9, 0x4314c
0000000000043158	cbnz	w26, 0x4317c
000000000004315c	cmp	w8, #0x1
0000000000043160	b.ne	0x4317c
0000000000043164	adr	x8, #0x51125
0000000000043168	nop
000000000004316c	ldarb	w8, [x8]
0000000000043170	tbz	w8, #0x0, 0x4317c
0000000000043174	mov	x0, x23
0000000000043178	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004317c	mov	x0, x19
0000000000043180	bl	0x55194 ; symbol stub for: __Unwind_Resume
0000000000043184	mov	x19, x0
0000000000043188	cbz	x26, 0x431c8
000000000004318c	ldaxr	w8, [x22]
0000000000043190	stlxr	w9, w23, [x22]
0000000000043194	cbnz	w9, 0x4318c
0000000000043198	cbnz	w23, 0x431c8
000000000004319c	cmp	w8, #0x1
00000000000431a0	b.ne	0x431c8
00000000000431a4	adr	x8, #0x510e5
00000000000431a8	nop
00000000000431ac	ldarb	w8, [x8]
00000000000431b0	tbz	w8, #0x0, 0x431c8
00000000000431b4	mov	x0, x22
00000000000431b8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000431bc	b	0x431c8
00000000000431c0	b	0x431c4
00000000000431c4	mov	x19, x0
00000000000431c8	add	x0, x21, #0x38
00000000000431cc	bl	__ZNSt3__18multisetIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEED1Ev
00000000000431d0	add	x0, x21, #0x8
00000000000431d4	bl	__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev
00000000000431d8	mov	x0, x19
00000000000431dc	bl	___clang_call_terminate
__ZN5konanL16onThreadExitInitEv:
00000000000431e0	adr	x0, #0x51308
00000000000431e4	nop
00000000000431e8	adr	x1, #0xc
00000000000431ec	nop
00000000000431f0	b	0x55674 ; symbol stub for: _pthread_key_create
__ZN5konanL20onThreadExitCallbackEPv:
00000000000431f4	stp	x20, x19, [sp, #-0x20]!
00000000000431f8	stp	x29, x30, [sp, #0x10]
00000000000431fc	add	x29, sp, #0x10
0000000000043200	mov	x19, x0
0000000000043204	nop
0000000000043208	ldr	x0, #0x512e0
000000000004320c	mov	x1, #0x0
0000000000043210	bl	0x556e0 ; symbol stub for: _pthread_setspecific
0000000000043214	cbz	x19, 0x43234
0000000000043218	ldp	x8, x0, [x19, #0x8]
000000000004321c	blr	x8
0000000000043220	ldr	x20, [x19]
0000000000043224	mov	x0, x19
0000000000043228	bl	0x55458 ; symbol stub for: _free
000000000004322c	mov	x19, x20
0000000000043230	cbnz	x20, 0x43218
0000000000043234	ldp	x29, x30, [sp, #0x10]
0000000000043238	ldp	x20, x19, [sp], #0x20
000000000004323c	ret
__ZN12_GLOBAL__N_18theStateEv:
0000000000043240	sub	sp, sp, #0x70
0000000000043244	stp	x28, x27, [sp, #0x10]
0000000000043248	stp	x26, x25, [sp, #0x20]
000000000004324c	stp	x24, x23, [sp, #0x30]
0000000000043250	stp	x22, x21, [sp, #0x40]
0000000000043254	stp	x20, x19, [sp, #0x50]
0000000000043258	stp	x29, x30, [sp, #0x60]
000000000004325c	add	x29, sp, #0x60
0000000000043260	adrp	x25, 81 ; 0x94000
0000000000043264	ldr	x20, [x25, #0x4f8]
0000000000043268	cbnz	x20, 0x43468
000000000004326c	mov	w0, #0x1
0000000000043270	mov	w1, #0xf8
0000000000043274	bl	0x553d4 ; symbol stub for: _calloc
0000000000043278	mov	x19, x0
000000000004327c	adrp	x21, 55 ; 0x7a000
0000000000043280	add	x21, x21, #0x2c0
0000000000043284	cbz	x0, 0x43338
0000000000043288	movi.16b	v0, #0x0
000000000004328c	mov	x22, x19
0000000000043290	stp	q0, q0, [x22, #0x70]!
0000000000043294	mov	w8, #0x3f800000
0000000000043298	str	w8, [x22, #0x20]
000000000004329c	mov	x23, x22
00000000000432a0	str	q0, [x23, #0x28]!
00000000000432a4	stur	q0, [x22, #0x38]
00000000000432a8	str	w8, [x22, #0x48]
00000000000432ac	mov	x24, x22
00000000000432b0	str	q0, [x24, #0x50]!
00000000000432b4	str	q0, [x22, #0x60]
00000000000432b8	str	w8, [x22, #0x70]
00000000000432bc	ldr	x8, [x21]
00000000000432c0	mov	x0, x21
00000000000432c4	blr	x8
00000000000432c8	ldr	x27, [x0]
00000000000432cc	add	x20, x27, #0x138
00000000000432d0	mov	w8, #0x1
00000000000432d4	ldaxr	w26, [x20]
00000000000432d8	stlxr	w9, w8, [x20]
00000000000432dc	cbnz	w9, 0x432d4
00000000000432e0	mov	x0, x19
00000000000432e4	mov	x1, #0x0
00000000000432e8	bl	0x55698 ; symbol stub for: _pthread_mutex_init
00000000000432ec	add	x0, x19, #0x40
00000000000432f0	mov	x1, #0x0
00000000000432f4	bl	0x55638 ; symbol stub for: _pthread_cond_init
00000000000432f8	movi.2s	v0, #0x1
00000000000432fc	str	d0, [x19, #0xe8]
0000000000043300	str	wzr, [x19, #0xf0]
0000000000043304	cbz	x27, 0x43338
0000000000043308	ldaxr	w8, [x20]
000000000004330c	stlxr	w9, w26, [x20]
0000000000043310	cbnz	w9, 0x43308
0000000000043314	cbnz	w26, 0x43338
0000000000043318	cmp	w8, #0x1
000000000004331c	b.ne	0x43338
0000000000043320	adr	x8, #0x50f69
0000000000043324	nop
0000000000043328	ldarb	w8, [x8]
000000000004332c	tbz	w8, #0x0, 0x43338
0000000000043330	mov	x0, x20
0000000000043334	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043338	adr	x8, #0x511c0
000000000004333c	nop
0000000000043340	ldaxr	x20, [x8]
0000000000043344	cbnz	x20, 0x43458
0000000000043348	stlxr	w9, x19, [x8]
000000000004334c	cbnz	w9, 0x43340
0000000000043350	mov	w8, #0x1
0000000000043354	tbnz	w8, #0x0, 0x43464
0000000000043358	ldr	x8, [x21]
000000000004335c	mov	x0, x21
0000000000043360	blr	x8
0000000000043364	ldr	x8, [x0]
0000000000043368	str	x8, [sp]
000000000004336c	strb	wzr, [sp, #0xc]
0000000000043370	add	x8, x8, #0x138
0000000000043374	mov	w9, #0x1
0000000000043378	ldaxr	w10, [x8]
000000000004337c	stlxr	w11, w9, [x8]
0000000000043380	cbnz	w11, 0x43378
0000000000043384	str	w10, [sp, #0x8]
0000000000043388	mov	x0, x19
000000000004338c	bl	0x5568c ; symbol stub for: _pthread_mutex_destroy
0000000000043390	add	x0, x19, #0x40
0000000000043394	bl	0x5562c ; symbol stub for: _pthread_cond_destroy
0000000000043398	ldr	x9, [sp]
000000000004339c	cbz	x9, 0x433d4
00000000000433a0	ldr	w8, [sp, #0x8]
00000000000433a4	add	x0, x9, #0x138
00000000000433a8	ldaxr	w9, [x0]
00000000000433ac	stlxr	w10, w8, [x0]
00000000000433b0	cbnz	w10, 0x433a8
00000000000433b4	cbnz	w8, 0x433d4
00000000000433b8	cmp	w9, #0x1
00000000000433bc	b.ne	0x433d4
00000000000433c0	adr	x8, #0x50ec9
00000000000433c4	nop
00000000000433c8	ldarb	w8, [x8]
00000000000433cc	tbz	w8, #0x0, 0x433d4
00000000000433d0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000433d4	ldr	x0, [x19, #0xd0]
00000000000433d8	cbz	x0, 0x433ec
00000000000433dc	ldr	x21, [x0]
00000000000433e0	bl	0x55458 ; symbol stub for: _free
00000000000433e4	mov	x0, x21
00000000000433e8	cbnz	x21, 0x433dc
00000000000433ec	ldr	x0, [x19, #0xc0]
00000000000433f0	str	xzr, [x19, #0xc0]
00000000000433f4	cbz	x0, 0x433fc
00000000000433f8	bl	0x55458 ; symbol stub for: _free
00000000000433fc	ldr	x0, [x19, #0xa8]
0000000000043400	cbz	x0, 0x43414
0000000000043404	ldr	x21, [x0]
0000000000043408	bl	0x55458 ; symbol stub for: _free
000000000004340c	mov	x0, x21
0000000000043410	cbnz	x21, 0x43404
0000000000043414	ldr	x0, [x19, #0x98]
0000000000043418	str	xzr, [x19, #0x98]
000000000004341c	cbz	x0, 0x43424
0000000000043420	bl	0x55458 ; symbol stub for: _free
0000000000043424	ldr	x0, [x19, #0x80]
0000000000043428	cbz	x0, 0x4343c
000000000004342c	ldr	x21, [x0]
0000000000043430	bl	0x55458 ; symbol stub for: _free
0000000000043434	mov	x0, x21
0000000000043438	cbnz	x21, 0x4342c
000000000004343c	ldr	x0, [x19, #0x70]
0000000000043440	str	xzr, [x19, #0x70]
0000000000043444	cbz	x0, 0x4344c
0000000000043448	bl	0x55458 ; symbol stub for: _free
000000000004344c	mov	x0, x19
0000000000043450	bl	0x55458 ; symbol stub for: _free
0000000000043454	b	0x43468
0000000000043458	mov	w8, #0x0
000000000004345c	clrex
0000000000043460	tbz	w8, #0x0, 0x43358
0000000000043464	ldr	x20, [x25, #0x4f8]
0000000000043468	mov	x0, x20
000000000004346c	ldp	x29, x30, [sp, #0x60]
0000000000043470	ldp	x20, x19, [sp, #0x50]
0000000000043474	ldp	x22, x21, [sp, #0x40]
0000000000043478	ldp	x24, x23, [sp, #0x30]
000000000004347c	ldp	x26, x25, [sp, #0x20]
0000000000043480	ldp	x28, x27, [sp, #0x10]
0000000000043484	add	sp, sp, #0x70
0000000000043488	ret
000000000004348c	mov	x20, x0
0000000000043490	mov	x0, sp
0000000000043494	bl	__ZN6kotlin16ThreadStateGuardD1Ev
0000000000043498	add	x0, x19, #0xc0
000000000004349c	bl	__ZNSt3__113unordered_mapIiP17_opaque_pthread_tNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev
00000000000434a0	add	x0, x19, #0x98
00000000000434a4	bl	__ZNSt3__113unordered_mapIiP6WorkerNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev
00000000000434a8	add	x0, x19, #0x70
00000000000434ac	bl	__ZNSt3__113unordered_mapIiPN12_GLOBAL__N_16FutureENS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS3_EEEEED1Ev
00000000000434b0	mov	x0, x20
00000000000434b4	bl	___clang_call_terminate
00000000000434b8	mov	x21, x0
00000000000434bc	cbz	x27, 0x434f0
00000000000434c0	ldaxr	w8, [x20]
00000000000434c4	stlxr	w9, w26, [x20]
00000000000434c8	cbnz	w9, 0x434c0
00000000000434cc	cbnz	w26, 0x434f0
00000000000434d0	cmp	w8, #0x1
00000000000434d4	b.ne	0x434f0
00000000000434d8	adr	x8, #0x50db1
00000000000434dc	nop
00000000000434e0	ldarb	w8, [x8]
00000000000434e4	tbz	w8, #0x0, 0x434f0
00000000000434e8	mov	x0, x20
00000000000434ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000434f0	mov	x0, x19
00000000000434f4	mov	x1, x24
00000000000434f8	mov	x2, x23
00000000000434fc	mov	x3, x22
0000000000043500	bl	__ZN12_GLOBAL__N_18theStateEv.cold.1
0000000000043504	mov	x0, x19
0000000000043508	bl	0x55458 ; symbol stub for: _free
000000000004350c	mov	x0, x21
0000000000043510	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZN12_GLOBAL__N_16LockerD1Ev:
0000000000043514	stp	x22, x21, [sp, #-0x30]!
0000000000043518	stp	x20, x19, [sp, #0x10]
000000000004351c	stp	x29, x30, [sp, #0x20]
0000000000043520	add	x29, sp, #0x20
0000000000043524	mov	x19, x0
0000000000043528	ldrb	w8, [x0, #0x8]
000000000004352c	cbz	w8, 0x43550
0000000000043530	ldr	x20, [x19, #0x10]
0000000000043534	cbz	x20, 0x4355c
0000000000043538	add	x8, x20, #0x138
000000000004353c	mov	w9, #0x1
0000000000043540	ldaxr	w21, [x8]
0000000000043544	stlxr	w10, w9, [x8]
0000000000043548	cbnz	w10, 0x43540
000000000004354c	b	0x43584
0000000000043550	mov	x20, #0x0
0000000000043554	mov	w21, #0x1
0000000000043558	b	0x43584
000000000004355c	adrp	x0, 55 ; 0x7a000
0000000000043560	add	x0, x0, #0x2c0
0000000000043564	ldr	x8, [x0]
0000000000043568	blr	x8
000000000004356c	ldr	x20, [x0]
0000000000043570	add	x8, x20, #0x138
0000000000043574	mov	w9, #0x1
0000000000043578	ldaxr	w21, [x8]
000000000004357c	stlxr	w10, w9, [x8]
0000000000043580	cbnz	w10, 0x43578
0000000000043584	ldr	x0, [x19]
0000000000043588	bl	0x556b0 ; symbol stub for: _pthread_mutex_unlock
000000000004358c	cbz	x20, 0x435c0
0000000000043590	add	x0, x20, #0x138
0000000000043594	ldaxr	w8, [x0]
0000000000043598	stlxr	w9, w21, [x0]
000000000004359c	cbnz	w9, 0x43594
00000000000435a0	cbnz	w21, 0x435c0
00000000000435a4	cmp	w8, #0x1
00000000000435a8	b.ne	0x435c0
00000000000435ac	adr	x8, #0x50cdd
00000000000435b0	nop
00000000000435b4	ldarb	w8, [x8]
00000000000435b8	tbz	w8, #0x0, 0x435c0
00000000000435bc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000435c0	mov	x0, x19
00000000000435c4	ldp	x29, x30, [sp, #0x20]
00000000000435c8	ldp	x20, x19, [sp, #0x10]
00000000000435cc	ldp	x22, x21, [sp], #0x30
00000000000435d0	ret
00000000000435d4	mov	x19, x0
00000000000435d8	cbz	x20, 0x4360c
00000000000435dc	add	x0, x20, #0x138
00000000000435e0	ldaxr	w8, [x0]
00000000000435e4	stlxr	w9, w21, [x0]
00000000000435e8	cbnz	w9, 0x435e0
00000000000435ec	cbnz	w21, 0x4360c
00000000000435f0	cmp	w8, #0x1
00000000000435f4	b.ne	0x4360c
00000000000435f8	adr	x8, #0x50c91
00000000000435fc	nop
0000000000043600	ldarb	w8, [x8]
0000000000043604	tbz	w8, #0x0, 0x4360c
0000000000043608	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004360c	mov	x0, x19
0000000000043610	bl	___clang_call_terminate
__ZNSt3__113unordered_mapIiP17_opaque_pthread_tNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev:
0000000000043614	stp	x20, x19, [sp, #-0x20]!
0000000000043618	stp	x29, x30, [sp, #0x10]
000000000004361c	add	x29, sp, #0x10
0000000000043620	mov	x19, x0
0000000000043624	ldr	x0, [x0, #0x10]
0000000000043628	cbz	x0, 0x4363c
000000000004362c	ldr	x20, [x0]
0000000000043630	bl	0x55458 ; symbol stub for: _free
0000000000043634	mov	x0, x20
0000000000043638	cbnz	x20, 0x4362c
000000000004363c	ldr	x0, [x19]
0000000000043640	str	xzr, [x19]
0000000000043644	cbz	x0, 0x4364c
0000000000043648	bl	0x55458 ; symbol stub for: _free
000000000004364c	mov	x0, x19
0000000000043650	ldp	x29, x30, [sp, #0x10]
0000000000043654	ldp	x20, x19, [sp], #0x20
0000000000043658	ret
__ZNSt3__113unordered_mapIiP6WorkerNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev:
000000000004365c	stp	x20, x19, [sp, #-0x20]!
0000000000043660	stp	x29, x30, [sp, #0x10]
0000000000043664	add	x29, sp, #0x10
0000000000043668	mov	x19, x0
000000000004366c	ldr	x0, [x0, #0x10]
0000000000043670	cbz	x0, 0x43684
0000000000043674	ldr	x20, [x0]
0000000000043678	bl	0x55458 ; symbol stub for: _free
000000000004367c	mov	x0, x20
0000000000043680	cbnz	x20, 0x43674
0000000000043684	ldr	x0, [x19]
0000000000043688	str	xzr, [x19]
000000000004368c	cbz	x0, 0x43694
0000000000043690	bl	0x55458 ; symbol stub for: _free
0000000000043694	mov	x0, x19
0000000000043698	ldp	x29, x30, [sp, #0x10]
000000000004369c	ldp	x20, x19, [sp], #0x20
00000000000436a0	ret
__ZNSt3__113unordered_mapIiPN12_GLOBAL__N_16FutureENS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS3_EEEEED1Ev:
00000000000436a4	stp	x20, x19, [sp, #-0x20]!
00000000000436a8	stp	x29, x30, [sp, #0x10]
00000000000436ac	add	x29, sp, #0x10
00000000000436b0	mov	x19, x0
00000000000436b4	ldr	x0, [x0, #0x10]
00000000000436b8	cbz	x0, 0x436cc
00000000000436bc	ldr	x20, [x0]
00000000000436c0	bl	0x55458 ; symbol stub for: _free
00000000000436c4	mov	x0, x20
00000000000436c8	cbnz	x20, 0x436bc
00000000000436cc	ldr	x0, [x19]
00000000000436d0	str	xzr, [x19]
00000000000436d4	cbz	x0, 0x436dc
00000000000436d8	bl	0x55458 ; symbol stub for: _free
00000000000436dc	mov	x0, x19
00000000000436e0	ldp	x29, x30, [sp, #0x10]
00000000000436e4	ldp	x20, x19, [sp], #0x20
00000000000436e8	ret
__ZN12_GLOBAL__N_16Future14cancelUnlockedEP11MemoryState:
00000000000436ec	sub	sp, sp, #0x60
00000000000436f0	stp	x24, x23, [sp, #0x20]
00000000000436f4	stp	x22, x21, [sp, #0x30]
00000000000436f8	stp	x20, x19, [sp, #0x40]
00000000000436fc	stp	x29, x30, [sp, #0x50]
0000000000043700	add	x29, sp, #0x50
0000000000043704	mov	x20, x1
0000000000043708	mov	x21, x0
000000000004370c	add	x19, x1, #0x138
0000000000043710	mov	w8, #0x1
0000000000043714	ldaxr	w22, [x19]
0000000000043718	stlxr	w9, w8, [x19]
000000000004371c	cbnz	w9, 0x43714
0000000000043720	add	x0, x21, #0x10
0000000000043724	str	x0, [sp, #0x8]
0000000000043728	mov	w8, #0x1
000000000004372c	strb	w8, [sp, #0x10]
0000000000043730	str	x20, [sp, #0x18]
0000000000043734	ldaxr	w23, [x19]
0000000000043738	stlxr	w9, w8, [x19]
000000000004373c	cbnz	w9, 0x43734
0000000000043740	bl	0x556a4 ; symbol stub for: _pthread_mutex_lock
0000000000043744	cbz	x20, 0x43778
0000000000043748	ldaxr	w8, [x19]
000000000004374c	stlxr	w9, w23, [x19]
0000000000043750	cbnz	w9, 0x43748
0000000000043754	cbnz	w23, 0x43778
0000000000043758	cmp	w8, #0x1
000000000004375c	b.ne	0x43778
0000000000043760	adr	x8, #0x50b29
0000000000043764	nop
0000000000043768	ldarb	w8, [x8]
000000000004376c	tbz	w8, #0x0, 0x43778
0000000000043770	mov	x0, x19
0000000000043774	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043778	mov	w8, #0x3
000000000004377c	str	w8, [x21]
0000000000043780	str	xzr, [x21, #0x8]
0000000000043784	add	x0, x21, #0x50
0000000000043788	bl	0x55620 ; symbol stub for: _pthread_cond_broadcast
000000000004378c	add	x0, sp, #0x8
0000000000043790	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000043794	bl	__ZN12_GLOBAL__N_18theStateEv
0000000000043798	mov	x21, x0
000000000004379c	str	x0, [sp, #0x8]
00000000000437a0	mov	w8, #0x1
00000000000437a4	strb	w8, [sp, #0x10]
00000000000437a8	str	x20, [sp, #0x18]
00000000000437ac	ldaxr	w23, [x19]
00000000000437b0	stlxr	w9, w8, [x19]
00000000000437b4	cbnz	w9, 0x437ac
00000000000437b8	mov	x0, x21
00000000000437bc	bl	0x556a4 ; symbol stub for: _pthread_mutex_lock
00000000000437c0	cbz	x20, 0x437f4
00000000000437c4	ldaxr	w8, [x19]
00000000000437c8	stlxr	w9, w23, [x19]
00000000000437cc	cbnz	w9, 0x437c4
00000000000437d0	cbnz	w23, 0x437f4
00000000000437d4	cmp	w8, #0x1
00000000000437d8	b.ne	0x437f4
00000000000437dc	adr	x8, #0x50aad
00000000000437e0	nop
00000000000437e4	ldarb	w8, [x8]
00000000000437e8	tbz	w8, #0x0, 0x437f4
00000000000437ec	mov	x0, x19
00000000000437f0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000437f4	ldr	w8, [x21, #0xf0]
00000000000437f8	add	w8, w8, #0x1
00000000000437fc	str	w8, [x21, #0xf0]
0000000000043800	add	x0, sp, #0x8
0000000000043804	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000043808	add	x0, x21, #0x40
000000000004380c	bl	0x55620 ; symbol stub for: _pthread_cond_broadcast
0000000000043810	cbz	x20, 0x43844
0000000000043814	ldaxr	w8, [x19]
0000000000043818	stlxr	w9, w22, [x19]
000000000004381c	cbnz	w9, 0x43814
0000000000043820	cbnz	w22, 0x43844
0000000000043824	cmp	w8, #0x1
0000000000043828	b.ne	0x43844
000000000004382c	adr	x8, #0x50a5d
0000000000043830	nop
0000000000043834	ldarb	w8, [x8]
0000000000043838	tbz	w8, #0x0, 0x43844
000000000004383c	mov	x0, x19
0000000000043840	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043844	ldp	x29, x30, [sp, #0x50]
0000000000043848	ldp	x20, x19, [sp, #0x40]
000000000004384c	ldp	x22, x21, [sp, #0x30]
0000000000043850	ldp	x24, x23, [sp, #0x20]
0000000000043854	add	sp, sp, #0x60
0000000000043858	ret
000000000004385c	mov	x21, x0
0000000000043860	cbz	x20, 0x438c4
0000000000043864	ldaxr	w8, [x19]
0000000000043868	stlxr	w9, w23, [x19]
000000000004386c	cbnz	w9, 0x43864
0000000000043870	b	0x43898
0000000000043874	mov	x21, x0
0000000000043878	add	x0, sp, #0x8
000000000004387c	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000043880	b	0x438c4
0000000000043884	mov	x21, x0
0000000000043888	cbz	x20, 0x438c4
000000000004388c	ldaxr	w8, [x19]
0000000000043890	stlxr	w9, w23, [x19]
0000000000043894	cbnz	w9, 0x4388c
0000000000043898	cbnz	w23, 0x438c4
000000000004389c	cmp	w8, #0x1
00000000000438a0	b.ne	0x438c4
00000000000438a4	adr	x8, #0x509e5
00000000000438a8	nop
00000000000438ac	ldarb	w8, [x8]
00000000000438b0	tbz	w8, #0x0, 0x438c4
00000000000438b4	mov	x0, x19
00000000000438b8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000438bc	b	0x438c4
00000000000438c0	mov	x21, x0
00000000000438c4	cbnz	x20, 0x438d0
00000000000438c8	mov	x0, x21
00000000000438cc	bl	0x55194 ; symbol stub for: __Unwind_Resume
00000000000438d0	ldaxr	w8, [x19]
00000000000438d4	stlxr	w9, w22, [x19]
00000000000438d8	cbnz	w9, 0x438d0
00000000000438dc	cbnz	w22, 0x438c8
00000000000438e0	cmp	w8, #0x1
00000000000438e4	b.ne	0x438c8
00000000000438e8	adr	x8, #0x509a1
00000000000438ec	nop
00000000000438f0	ldarb	w8, [x8]
00000000000438f4	tbz	w8, #0x0, 0x438c8
00000000000438f8	mov	x0, x19
00000000000438fc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043900	mov	x0, x21
0000000000043904	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE:
0000000000043908	cbz	x0, 0x4393c
000000000004390c	stp	x20, x19, [sp, #-0x20]!
0000000000043910	stp	x29, x30, [sp, #0x10]
0000000000043914	add	x29, sp, #0x10
0000000000043918	mov	x19, x0
000000000004391c	ldr	x0, [x0]
0000000000043920	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
0000000000043924	ldr	x0, [x19, #0x8]
0000000000043928	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
000000000004392c	mov	x0, x19
0000000000043930	ldp	x29, x30, [sp, #0x10]
0000000000043934	ldp	x20, x19, [sp], #0x20
0000000000043938	b	0x55458 ; symbol stub for: _free
000000000004393c	ret
__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev:
0000000000043940	stp	x22, x21, [sp, #-0x30]!
0000000000043944	stp	x20, x19, [sp, #0x10]
0000000000043948	stp	x29, x30, [sp, #0x20]
000000000004394c	add	x29, sp, #0x20
0000000000043950	mov	x19, x0
0000000000043954	ldp	x20, x21, [x0, #0x8]
0000000000043958	subs	x8, x21, x20
000000000004395c	b.eq	0x439e4
0000000000043960	ldr	x11, [x19, #0x20]
0000000000043964	mov	x13, #0xa0a1
0000000000043968	movk	x13, #0xa0a0, lsl #16
000000000004396c	movk	x13, #0xa0a0, lsl #32
0000000000043970	movk	x13, #0xa0a0, lsl #48
0000000000043974	umulh	x9, x11, x13
0000000000043978	lsr	x12, x9, #6
000000000004397c	ldr	x9, [x20, x12, lsl #3]
0000000000043980	mov	x14, #-0x66
0000000000043984	madd	x10, x12, x14, x11
0000000000043988	mov	w15, #0x28
000000000004398c	madd	x10, x10, x15, x9
0000000000043990	mov	x9, x19
0000000000043994	ldr	x16, [x9, #0x28]!
0000000000043998	add	x11, x16, x11
000000000004399c	umulh	x13, x11, x13
00000000000439a0	lsr	x13, x13, #6
00000000000439a4	ldr	x16, [x20, x13, lsl #3]
00000000000439a8	madd	x11, x13, x14, x11
00000000000439ac	madd	x11, x11, x15, x16
00000000000439b0	cmp	x11, x10
00000000000439b4	b.eq	0x439e8
00000000000439b8	add	x12, x20, x12, lsl #3
00000000000439bc	b	0x439c8
00000000000439c0	cmp	x11, x10
00000000000439c4	b.eq	0x439e8
00000000000439c8	add	x10, x10, #0x28
00000000000439cc	ldr	x13, [x12]
00000000000439d0	sub	x13, x10, x13
00000000000439d4	cmp	x13, #0xff0
00000000000439d8	b.ne	0x439c0
00000000000439dc	ldr	x10, [x12, #0x8]!
00000000000439e0	b	0x439c0
00000000000439e4	add	x9, x19, #0x28
00000000000439e8	str	xzr, [x9]
00000000000439ec	asr	x8, x8, #3
00000000000439f0	cmp	x8, #0x3
00000000000439f4	b.lo	0x43a1c
00000000000439f8	ldr	x0, [x20]
00000000000439fc	bl	0x55458 ; symbol stub for: _free
0000000000043a00	ldp	x8, x21, [x19, #0x8]
0000000000043a04	add	x20, x8, #0x8
0000000000043a08	str	x20, [x19, #0x8]
0000000000043a0c	sub	x8, x21, x20
0000000000043a10	asr	x8, x8, #3
0000000000043a14	cmp	x8, #0x2
0000000000043a18	b.hi	0x439f8
0000000000043a1c	cmp	x8, #0x1
0000000000043a20	b.eq	0x43a34
0000000000043a24	cmp	x8, #0x2
0000000000043a28	b.ne	0x43a3c
0000000000043a2c	mov	w8, #0x66
0000000000043a30	b	0x43a38
0000000000043a34	mov	w8, #0x33
0000000000043a38	str	x8, [x19, #0x20]
0000000000043a3c	cmp	x20, x21
0000000000043a40	b.eq	0x43a74
0000000000043a44	ldr	x0, [x20], #0x8
0000000000043a48	bl	0x55458 ; symbol stub for: _free
0000000000043a4c	cmp	x20, x21
0000000000043a50	b.ne	0x43a44
0000000000043a54	ldp	x9, x8, [x19, #0x8]
0000000000043a58	subs	x9, x8, x9
0000000000043a5c	b.eq	0x43a74
0000000000043a60	sub	x9, x9, #0x8
0000000000043a64	mov	x10, #-0x1
0000000000043a68	eor	x9, x10, x9, lsr #3
0000000000043a6c	add	x8, x8, x9, lsl #3
0000000000043a70	str	x8, [x19, #0x10]
0000000000043a74	ldr	x0, [x19]
0000000000043a78	cbz	x0, 0x43a80
0000000000043a7c	bl	0x55458 ; symbol stub for: _free
0000000000043a80	mov	x0, x19
0000000000043a84	ldp	x29, x30, [sp, #0x20]
0000000000043a88	ldp	x20, x19, [sp, #0x10]
0000000000043a8c	ldp	x22, x21, [sp], #0x30
0000000000043a90	ret
__ZNSt3__18multisetIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEED1Ev:
0000000000043a94	stp	x20, x19, [sp, #-0x20]!
0000000000043a98	stp	x29, x30, [sp, #0x10]
0000000000043a9c	add	x29, sp, #0x10
0000000000043aa0	mov	x19, x0
0000000000043aa4	ldr	x0, [x0, #0x8]
0000000000043aa8	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
0000000000043aac	mov	x0, x19
0000000000043ab0	ldp	x29, x30, [sp, #0x10]
0000000000043ab4	ldp	x20, x19, [sp], #0x20
0000000000043ab8	ret
___Kotlin_ObjCExport_initialize_block_invoke:
0000000000043abc	stp	x26, x25, [sp, #-0x50]!
0000000000043ac0	stp	x24, x23, [sp, #0x10]
0000000000043ac4	stp	x22, x21, [sp, #0x20]
0000000000043ac8	stp	x20, x19, [sp, #0x30]
0000000000043acc	stp	x29, x30, [sp, #0x40]
0000000000043ad0	add	x29, sp, #0x40
0000000000043ad4	adrp	x8, 81 ; 0x94000
0000000000043ad8	ldr	x19, [x8, #0x4d8]
0000000000043adc	cbz	x19, 0x43c94
0000000000043ae0	adrp	x20, 81 ; 0x94000
0000000000043ae4	ldr	x9, [x20, #0x4e0]
0000000000043ae8	cbz	x9, 0x43c94
0000000000043aec	adrp	x0, 55 ; 0x7a000
0000000000043af0	add	x0, x0, #0x2c0
0000000000043af4	ldr	x9, [x0]
0000000000043af8	blr	x9
0000000000043afc	ldr	x25, [x0]
0000000000043b00	cbz	x25, 0x43b20
0000000000043b04	add	x9, x25, #0x138
0000000000043b08	mov	w10, #0x1
0000000000043b0c	ldaxr	w24, [x9]
0000000000043b10	stlxr	w11, w10, [x9]
0000000000043b14	cbnz	w11, 0x43b0c
0000000000043b18	ldr	x19, [x8, #0x4d8]
0000000000043b1c	b	0x43b24
0000000000043b20	mov	w24, #0x1
0000000000043b24	adrp	x23, 51 ; 0x76000
0000000000043b28	ldr	x0, [x23, #0xc88] ; Objc class ref: _OBJC_CLASS_$_NSObject
0000000000043b2c	nop
0000000000043b30	ldr	x22, #0x32d08 ; Objc selector ref: class
0000000000043b34	mov	x1, x22
0000000000043b38	bl	0x55584 ; Objc message: +[NSObject class]
0000000000043b3c	mov	x1, x19
0000000000043b40	bl	0x55410 ; symbol stub for: _class_getClassMethod
0000000000043b44	bl	0x554d0 ; symbol stub for: _method_getTypeEncoding
0000000000043b48	mov	x21, x0
0000000000043b4c	ldr	x20, [x20, #0x4e0]
0000000000043b50	ldr	x0, [x23, #0xc88]
0000000000043b54	mov	x1, x22
0000000000043b58	bl	0x55584 ; Objc message: -[x0 class]
0000000000043b5c	mov	x1, x20
0000000000043b60	bl	0x55410 ; symbol stub for: _class_getClassMethod
0000000000043b64	bl	0x554d0 ; symbol stub for: _method_getTypeEncoding
0000000000043b68	mov	x22, x0
0000000000043b6c	adr	x0, #0x1ae1c ; literal pool for: "NSBlock"
0000000000043b70	nop
0000000000043b74	bl	0x55560 ; symbol stub for: _objc_getClass
0000000000043b78	adr	x2, #0x188
0000000000043b7c	nop
0000000000043b80	mov	x1, x19
0000000000043b84	mov	x3, x21
0000000000043b88	bl	0x553e0 ; symbol stub for: _class_addMethod
0000000000043b8c	adr	x0, #0x1ae04 ; literal pool for: "__NSCFBoolean"
0000000000043b90	nop
0000000000043b94	bl	0x55560 ; symbol stub for: _objc_getClass
0000000000043b98	adr	x2, #0x494
0000000000043b9c	nop
0000000000043ba0	mov	x1, x19
0000000000043ba4	mov	x3, x21
0000000000043ba8	bl	0x553e0 ; symbol stub for: _class_addMethod
0000000000043bac	adr	x0, #0x1adf2 ; literal pool for: "SwiftObject"
0000000000043bb0	nop
0000000000043bb4	bl	0x55560 ; symbol stub for: _objc_getClass
0000000000043bb8	mov	x23, x0
0000000000043bbc	cbz	x0, 0x43bf0
0000000000043bc0	adr	x2, #0x518
0000000000043bc4	nop
0000000000043bc8	mov	x0, x23
0000000000043bcc	mov	x1, x19
0000000000043bd0	mov	x3, x21
0000000000043bd4	bl	0x553e0 ; symbol stub for: _class_addMethod
0000000000043bd8	adr	x2, #0x5a8
0000000000043bdc	nop
0000000000043be0	mov	x0, x23
0000000000043be4	mov	x1, x20
0000000000043be8	mov	x3, x22
0000000000043bec	bl	0x553e0 ; symbol stub for: _class_addMethod
0000000000043bf0	adr	x0, #0x1adba ; literal pool for: "_TtCs12_SwiftObject"
0000000000043bf4	nop
0000000000043bf8	bl	0x55560 ; symbol stub for: _objc_getClass
0000000000043bfc	mov	x23, x0
0000000000043c00	cbz	x0, 0x43c34
0000000000043c04	adr	x2, #0x4d4
0000000000043c08	nop
0000000000043c0c	mov	x0, x23
0000000000043c10	mov	x1, x19
0000000000043c14	mov	x3, x21
0000000000043c18	bl	0x553e0 ; symbol stub for: _class_addMethod
0000000000043c1c	adr	x2, #0x564
0000000000043c20	nop
0000000000043c24	mov	x0, x23
0000000000043c28	mov	x1, x20
0000000000043c2c	mov	x3, x22
0000000000043c30	bl	0x553e0 ; symbol stub for: _class_addMethod
0000000000043c34	cbz	x25, 0x43c64
0000000000043c38	add	x0, x25, #0x138
0000000000043c3c	ldaxr	w8, [x0]
0000000000043c40	stlxr	w9, w24, [x0]
0000000000043c44	cbnz	w9, 0x43c3c
0000000000043c48	cbnz	w24, 0x43c64
0000000000043c4c	cmp	w8, #0x1
0000000000043c50	b.ne	0x43c64
0000000000043c54	adr	x8, #0x50635
0000000000043c58	nop
0000000000043c5c	ldarb	w8, [x8]
0000000000043c60	tbnz	w8, #0x0, 0x43c7c
0000000000043c64	ldp	x29, x30, [sp, #0x40]
0000000000043c68	ldp	x20, x19, [sp, #0x30]
0000000000043c6c	ldp	x22, x21, [sp, #0x20]
0000000000043c70	ldp	x24, x23, [sp, #0x10]
0000000000043c74	ldp	x26, x25, [sp], #0x50
0000000000043c78	ret
0000000000043c7c	ldp	x29, x30, [sp, #0x40]
0000000000043c80	ldp	x20, x19, [sp, #0x30]
0000000000043c84	ldp	x22, x21, [sp, #0x20]
0000000000043c88	ldp	x24, x23, [sp, #0x10]
0000000000043c8c	ldp	x26, x25, [sp], #0x50
0000000000043c90	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043c94	adr	x2, #0x1acd3 ; literal pool for: "unexpected initialization order"
0000000000043c98	nop
0000000000043c9c	mov	w0, #0x0
0000000000043ca0	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
0000000000043ca4	b	0x43cc0
0000000000043ca8	b	0x43cc0
0000000000043cac	b	0x43cc0
0000000000043cb0	b	0x43cc0
0000000000043cb4	b	0x43cc0
0000000000043cb8	b	0x43cc0
0000000000043cbc	b	0x43cc0
0000000000043cc0	mov	x19, x0
0000000000043cc4	cbz	x25, 0x43cf8
0000000000043cc8	add	x0, x25, #0x138
0000000000043ccc	ldaxr	w8, [x0]
0000000000043cd0	stlxr	w9, w24, [x0]
0000000000043cd4	cbnz	w9, 0x43ccc
0000000000043cd8	cbnz	w24, 0x43cf8
0000000000043cdc	cmp	w8, #0x1
0000000000043ce0	b.ne	0x43cf8
0000000000043ce4	adr	x8, #0x505a5
0000000000043ce8	nop
0000000000043cec	ldarb	w8, [x8]
0000000000043cf0	tbz	w8, #0x0, 0x43cf8
0000000000043cf4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043cf8	mov	x0, x19
0000000000043cfc	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZL16blockToKotlinImpP11objc_objectP13objc_selectorPP9ObjHeader:
0000000000043d00	sub	sp, sp, #0x90
0000000000043d04	stp	x28, x27, [sp, #0x30]
0000000000043d08	stp	x26, x25, [sp, #0x40]
0000000000043d0c	stp	x24, x23, [sp, #0x50]
0000000000043d10	stp	x22, x21, [sp, #0x60]
0000000000043d14	stp	x20, x19, [sp, #0x70]
0000000000043d18	stp	x29, x30, [sp, #0x80]
0000000000043d1c	add	x29, sp, #0x80
0000000000043d20	stp	x0, x2, [sp, #0x18]
0000000000043d24	ldr	w8, [x0, #0x8]
0000000000043d28	ldr	x9, [x0, #0x18]
0000000000043d2c	tst	w8, #0x2000000
0000000000043d30	mov	w8, #0x20
0000000000043d34	mov	w10, #0x10
0000000000043d38	csel	x8, x10, x8, eq
0000000000043d3c	ldr	x2, [x9, x8]
0000000000043d40	nop
0000000000043d44	ldr	x0, #0x32f4c ; Objc class ref: _OBJC_CLASS_$_NSMethodSignature
0000000000043d48	nop
0000000000043d4c	ldr	x1, #0x32d34 ; Objc selector ref: signatureWithObjCTypes:
0000000000043d50	bl	0x55584 ; Objc message: +[NSMethodSignature signatureWithObjCTypes:]
0000000000043d54	mov	x23, x0
0000000000043d58	nop
0000000000043d5c	ldr	x1, #0x32c9c ; Objc selector ref: numberOfArguments
0000000000043d60	bl	0x55584 ; Objc message: -[x0 numberOfArguments]
0000000000043d64	sub	w8, w0, #0x1
0000000000043d68	str	w8, [sp, #0x14]
0000000000043d6c	cmp	w8, #0x1
0000000000043d70	b.lt	0x43e54
0000000000043d74	nop
0000000000043d78	ldr	x24, #0x32b50 ; Objc selector ref: getArgumentTypeAtIndex:
0000000000043d7c	nop
0000000000043d80	ldr	x8, #0x1c288 ; literal pool symbol address: _NSGenericException
0000000000043d84	ldr	x8, [x8]
0000000000043d88	str	x8, [sp, #0x28]
0000000000043d8c	nop
0000000000043d90	ldr	x26, #0x32ca0 ; Objc selector ref: raise:format:
0000000000043d94	and	x19, x0, #0xffffffff
0000000000043d98	mov	w21, #0x1
0000000000043d9c	adrp	x8, 55 ; 0x7a000
0000000000043da0	add	x8, x8, #0x2c0
0000000000043da4	ldr	x20, [x8]
0000000000043da8	mov	w28, #0x1
0000000000043dac	b	0x43dbc
0000000000043db0	add	x28, x28, #0x1
0000000000043db4	cmp	x28, x19
0000000000043db8	b.eq	0x43e54
0000000000043dbc	mov	x0, x23
0000000000043dc0	mov	x1, x24
0000000000043dc4	mov	x2, x28
0000000000043dc8	bl	0x55584 ; Objc message: -[x0 raise:format:]
0000000000043dcc	ldrb	w9, [x0]
0000000000043dd0	cmp	w9, #0x40
0000000000043dd4	b.eq	0x43db0
0000000000043dd8	mov	x8, x0
0000000000043ddc	adrp	x0, 55 ; 0x7a000
0000000000043de0	add	x0, x0, #0x2c0
0000000000043de4	blr	x20
0000000000043de8	ldr	x25, [x0]
0000000000043dec	add	x22, x25, #0x138
0000000000043df0	ldaxr	w27, [x22]
0000000000043df4	stlxr	w9, w21, [x22]
0000000000043df8	cbnz	w9, 0x43df0
0000000000043dfc	nop
0000000000043e00	ldr	x0, #0x32e78 ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000043e04	str	x8, [sp]
0000000000043e08	mov	x1, x26
0000000000043e0c	ldr	x2, [sp, #0x28]
0000000000043e10	adr	x3, #0x2db40 ; Objc cfstring ref: @"bad cfstring ref"
0000000000043e14	nop
0000000000043e18	bl	0x55584 ; Objc message: +[NSException raise:format:]
0000000000043e1c	cbz	x25, 0x43db0
0000000000043e20	ldaxr	w8, [x22]
0000000000043e24	stlxr	w9, w27, [x22]
0000000000043e28	cbnz	w9, 0x43e20
0000000000043e2c	cbnz	w27, 0x43db0
0000000000043e30	cmp	w8, #0x1
0000000000043e34	b.ne	0x43db0
0000000000043e38	adr	x8, #0x50451
0000000000043e3c	nop
0000000000043e40	ldarb	w8, [x8]
0000000000043e44	tbz	w8, #0x0, 0x43db0
0000000000043e48	mov	x0, x22
0000000000043e4c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043e50	b	0x43db0
0000000000043e54	nop
0000000000043e58	ldr	x1, #0x32b68 ; Objc selector ref: methodReturnType
0000000000043e5c	mov	x0, x23
0000000000043e60	bl	0x55584 ; Objc message: -[x0 methodReturnType]
0000000000043e64	ldrb	w9, [x0]
0000000000043e68	cmp	w9, #0x40
0000000000043e6c	b.eq	0x43efc
0000000000043e70	mov	x8, x0
0000000000043e74	adrp	x0, 55 ; 0x7a000
0000000000043e78	add	x0, x0, #0x2c0
0000000000043e7c	ldr	x9, [x0]
0000000000043e80	blr	x9
0000000000043e84	ldr	x21, [x0]
0000000000043e88	add	x22, x21, #0x138
0000000000043e8c	mov	w9, #0x1
0000000000043e90	ldaxr	w20, [x22]
0000000000043e94	stlxr	w10, w9, [x22]
0000000000043e98	cbnz	w10, 0x43e90
0000000000043e9c	nop
0000000000043ea0	ldr	x0, #0x32dd8 ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000043ea4	nop
0000000000043ea8	ldr	x9, #0x1c160 ; literal pool symbol address: _NSGenericException
0000000000043eac	ldr	x2, [x9]
0000000000043eb0	nop
0000000000043eb4	ldr	x1, #0x32b7c ; Objc selector ref: raise:format:
0000000000043eb8	str	x8, [sp]
0000000000043ebc	adr	x3, #0x2dab4 ; Objc cfstring ref: @"bad cfstring ref"
0000000000043ec0	nop
0000000000043ec4	bl	0x55584 ; Objc message: +[NSException raise:format:]
0000000000043ec8	cbz	x21, 0x43efc
0000000000043ecc	ldaxr	w8, [x22]
0000000000043ed0	stlxr	w9, w20, [x22]
0000000000043ed4	cbnz	w9, 0x43ecc
0000000000043ed8	cbnz	w20, 0x43efc
0000000000043edc	cmp	w8, #0x1
0000000000043ee0	b.ne	0x43efc
0000000000043ee4	adr	x8, #0x503a5
0000000000043ee8	nop
0000000000043eec	ldarb	w8, [x8]
0000000000043ef0	tbz	w8, #0x0, 0x43efc
0000000000043ef4	mov	x0, x22
0000000000043ef8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043efc	ldr	w9, [sp, #0x14]
0000000000043f00	cmp	w9, #0x3
0000000000043f04	b.gt	0x43f38
0000000000043f08	adr	x8, #0x2b598
0000000000043f0c	nop
0000000000043f10	ldr	x2, [x8, w9, sxtw #3]
0000000000043f14	ldp	x0, x1, [sp, #0x18]
0000000000043f18	ldp	x29, x30, [sp, #0x80]
0000000000043f1c	ldp	x20, x19, [sp, #0x70]
0000000000043f20	ldp	x22, x21, [sp, #0x60]
0000000000043f24	ldp	x24, x23, [sp, #0x50]
0000000000043f28	ldp	x26, x25, [sp, #0x40]
0000000000043f2c	ldp	x28, x27, [sp, #0x30]
0000000000043f30	add	sp, sp, #0x90
0000000000043f34	br	x2
0000000000043f38	ldr	x0, [sp, #0x18]
0000000000043f3c	bl	0x555cc ; symbol stub for: _objc_retainBlock
0000000000043f40	mov	x20, x0
0000000000043f44	adrp	x0, 55 ; 0x7a000
0000000000043f48	add	x0, x0, #0x2c0
0000000000043f4c	ldr	x8, [x0]
0000000000043f50	blr	x8
0000000000043f54	ldr	x8, [x0]
0000000000043f58	ldr	x8, [x8, #0x118]
0000000000043f5c	add	x0, x8, #0x70
0000000000043f60	mov	w1, #0x10
0000000000043f64	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000043f68	mov	x21, x0
0000000000043f6c	adr	x8, #0x1ec94
0000000000043f70	nop
0000000000043f74	str	x8, [x21, #0x10]!
0000000000043f78	stur	xzr, [x21, #-0x8]
0000000000043f7c	ldr	x8, [sp, #0x20]
0000000000043f80	str	x21, [x8]
0000000000043f84	ldar	x8, [x21]
0000000000043f88	and	x8, x8, #0xfffffffffffffffc
0000000000043f8c	ldr	x9, [x8]
0000000000043f90	cmp	x9, x8
0000000000043f94	csel	x0, xzr, x8, eq
0000000000043f98	cbnz	x0, 0x43fa4
0000000000043f9c	mov	x0, x21
0000000000043fa0	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000043fa4	add	x8, x0, #0x10
0000000000043fa8	stlr	x20, [x8]
0000000000043fac	mov	x0, x21
0000000000043fb0	ldp	x29, x30, [sp, #0x80]
0000000000043fb4	ldp	x20, x19, [sp, #0x70]
0000000000043fb8	ldp	x22, x21, [sp, #0x60]
0000000000043fbc	ldp	x24, x23, [sp, #0x50]
0000000000043fc0	ldp	x26, x25, [sp, #0x40]
0000000000043fc4	ldp	x28, x27, [sp, #0x30]
0000000000043fc8	add	sp, sp, #0x90
0000000000043fcc	ret
0000000000043fd0	mov	x19, x0
0000000000043fd4	cbz	x21, 0x44024
0000000000043fd8	ldaxr	w8, [x22]
0000000000043fdc	stlxr	w9, w20, [x22]
0000000000043fe0	cbnz	w9, 0x43fd8
0000000000043fe4	cbz	w20, 0x44004
0000000000043fe8	b	0x44024
0000000000043fec	mov	x19, x0
0000000000043ff0	cbz	x25, 0x44024
0000000000043ff4	ldaxr	w8, [x22]
0000000000043ff8	stlxr	w9, w27, [x22]
0000000000043ffc	cbnz	w9, 0x43ff4
0000000000044000	cbnz	w27, 0x44024
0000000000044004	cmp	w8, #0x1
0000000000044008	b.ne	0x44024
000000000004400c	adr	x8, #0x5027d
0000000000044010	nop
0000000000044014	ldarb	w8, [x8]
0000000000044018	tbz	w8, #0x0, 0x44024
000000000004401c	mov	x0, x22
0000000000044020	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000044024	mov	x0, x19
0000000000044028	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZL23boxedBooleanToKotlinImpP8NSNumberP13objc_selectorPP9ObjHeader:
000000000004402c	sub	sp, sp, #0x50
0000000000044030	stp	x22, x21, [sp, #0x20]
0000000000044034	stp	x20, x19, [sp, #0x30]
0000000000044038	stp	x29, x30, [sp, #0x40]
000000000004403c	add	x29, sp, #0x40
0000000000044040	mov	x19, x2
0000000000044044	nop
0000000000044048	ldr	x1, #0x327e0 ; Objc selector ref: boolValue
000000000004404c	bl	0x55584 ; Objc message: -[x0 boolValue]
0000000000044050	mov	x21, x0
0000000000044054	str	xzr, [sp, #0x8]
0000000000044058	adrp	x20, 54 ; 0x7a000
000000000004405c	add	x20, x20, #0x2c0
0000000000044060	ldr	x22, [x20]
0000000000044064	mov	x0, x20
0000000000044068	blr	x22
000000000004406c	ldr	x8, [x0]
0000000000044070	ldr	x9, [x8, #0x110]
0000000000044074	add	x10, sp, #0x8
0000000000044078	str	x10, [x8, #0x110]
000000000004407c	mov	x8, #0x300000000
0000000000044080	stp	x9, x8, [sp, #0x10]
0000000000044084	adr	x8, #0x50205
0000000000044088	nop
000000000004408c	ldarb	w8, [x8]
0000000000044090	tbz	w8, #0x0, 0x44098
0000000000044094	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000044098	mov	x0, x21
000000000004409c	mov	x1, x19
00000000000440a0	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
00000000000440a4	mov	x8, x0
00000000000440a8	str	x0, [x19]
00000000000440ac	mov	x0, x20
00000000000440b0	blr	x22
00000000000440b4	ldr	x9, [x0]
00000000000440b8	ldr	x10, [sp, #0x10]
00000000000440bc	str	x10, [x9, #0x110]
00000000000440c0	mov	x0, x8
00000000000440c4	ldp	x29, x30, [sp, #0x40]
00000000000440c8	ldp	x20, x19, [sp, #0x30]
00000000000440cc	ldp	x22, x21, [sp, #0x20]
00000000000440d0	add	sp, sp, #0x50
00000000000440d4	ret
__ZL23SwiftObject_toKotlinImpP11objc_objectP13objc_selectorPP9ObjHeader:
00000000000440d8	stp	x22, x21, [sp, #-0x30]!
00000000000440dc	stp	x20, x19, [sp, #0x10]
00000000000440e0	stp	x29, x30, [sp, #0x20]
00000000000440e4	add	x29, sp, #0x20
00000000000440e8	mov	x21, x2
00000000000440ec	mov	x19, x0
00000000000440f0	bl	0x555f0 ; symbol stub for: _object_getClass
00000000000440f4	bl	__ZL19getOrCreateTypeInfoP10objc_class
00000000000440f8	mov	x22, x0
00000000000440fc	mov	x0, x19
0000000000044100	bl	0x555b4 ; symbol stub for: _objc_retain
0000000000044104	mov	x19, x0
0000000000044108	adrp	x0, 54 ; 0x7a000
000000000004410c	add	x0, x0, #0x2c0
0000000000044110	ldr	x8, [x0]
0000000000044114	blr	x8
0000000000044118	ldr	x8, [x0]
000000000004411c	ldr	x8, [x8, #0x118]
0000000000044120	ldrsw	x9, [x22, #0x14]
0000000000044124	add	x9, x9, #0xf
0000000000044128	and	x1, x9, #0xfffffffffffffff8
000000000004412c	add	x0, x8, #0x70
0000000000044130	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000044134	mov	x20, x0
0000000000044138	str	x22, [x20, #0x10]!
000000000004413c	stur	xzr, [x20, #-0x8]
0000000000044140	str	x20, [x21]
0000000000044144	ldar	x8, [x20]
0000000000044148	and	x8, x8, #0xfffffffffffffffc
000000000004414c	ldr	x9, [x8]
0000000000044150	cmp	x9, x8
0000000000044154	csel	x0, xzr, x8, eq
0000000000044158	cbnz	x0, 0x44164
000000000004415c	mov	x0, x20
0000000000044160	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000044164	add	x8, x0, #0x10
0000000000044168	stlr	x19, [x8]
000000000004416c	mov	x0, x20
0000000000044170	ldp	x29, x30, [sp, #0x20]
0000000000044174	ldp	x20, x19, [sp, #0x10]
0000000000044178	ldp	x22, x21, [sp], #0x30
000000000004417c	ret
__ZL40SwiftObject_releaseAsAssociatedObjectImpP11objc_objectP13objc_selector11ReleaseMode:
0000000000044180	cmp	w2, #0x1
0000000000044184	b.hi	0x4418c
0000000000044188	b	0x555a8 ; symbol stub for: _objc_release
000000000004418c	ret
__ZL19getOrCreateTypeInfoP10objc_class:
0000000000044190	sub	sp, sp, #0x1f0
0000000000044194	stp	x28, x27, [sp, #0x190]
0000000000044198	stp	x26, x25, [sp, #0x1a0]
000000000004419c	stp	x24, x23, [sp, #0x1b0]
00000000000441a0	stp	x22, x21, [sp, #0x1c0]
00000000000441a4	stp	x20, x19, [sp, #0x1d0]
00000000000441a8	stp	x29, x30, [sp, #0x1e0]
00000000000441ac	add	x29, sp, #0x1e0
00000000000441b0	mov	x19, x0
00000000000441b4	adr	x23, #0x500de
00000000000441b8	nop
00000000000441bc	mov	x1, x23
00000000000441c0	bl	0x55554 ; symbol stub for: _objc_getAssociatedObject
00000000000441c4	nop
00000000000441c8	ldr	x20, #0x32860 ; Objc selector ref: pointerValue
00000000000441cc	mov	x1, x20
00000000000441d0	bl	0x55584 ; Objc message: -[x0 pointerValue]
00000000000441d4	mov	x22, x0
00000000000441d8	cbnz	x0, 0x4422c
00000000000441dc	mov	x0, x19
00000000000441e0	bl	0x55428 ; symbol stub for: _class_getSuperclass
00000000000441e4	cbz	x0, 0x441f4
00000000000441e8	bl	__ZL19getOrCreateTypeInfoP10objc_class
00000000000441ec	mov	x21, x0
00000000000441f0	b	0x441fc
00000000000441f4	adr	x21, #0x1c86c
00000000000441f8	nop
00000000000441fc	add	x0, x23, #0x1
0000000000044200	bl	__ZN6kotlin8SpinLockILNS_24MutexThreadStateHandlingE1EE4lockEv
0000000000044204	mov	x0, x19
0000000000044208	mov	x1, x23
000000000004420c	bl	0x55554 ; symbol stub for: _objc_getAssociatedObject
0000000000044210	mov	x1, x20
0000000000044214	bl	0x55584 ; Objc message: -[x0 pointerValue]
0000000000044218	mov	x22, x0
000000000004421c	cbz	x0, 0x44250
0000000000044220	adr	x8, #0x50073
0000000000044224	nop
0000000000044228	stlrb	wzr, [x8]
000000000004422c	mov	x0, x22
0000000000044230	ldp	x29, x30, [sp, #0x1e0]
0000000000044234	ldp	x20, x19, [sp, #0x1d0]
0000000000044238	ldp	x22, x21, [sp, #0x1c0]
000000000004423c	ldp	x24, x23, [sp, #0x1b0]
0000000000044240	ldp	x26, x25, [sp, #0x1a0]
0000000000044244	ldp	x28, x27, [sp, #0x190]
0000000000044248	add	sp, sp, #0x1f0
000000000004424c	ret
0000000000044250	add	x27, sp, #0xe0
0000000000044254	adrp	x0, 54 ; 0x7a000
0000000000044258	add	x0, x0, #0x2c0
000000000004425c	ldr	x20, [x0]
0000000000044260	blr	x20
0000000000044264	ldr	x8, [x0]
0000000000044268	cbz	x8, 0x4428c
000000000004426c	str	x8, [sp, #0x30]
0000000000044270	add	x8, x8, #0x138
0000000000044274	mov	w9, #0x1
0000000000044278	ldaxr	w11, [x8]
000000000004427c	stlxr	w10, w9, [x8]
0000000000044280	cbnz	w10, 0x44278
0000000000044284	str	x11, [sp, #0x20]
0000000000044288	b	0x44298
000000000004428c	str	xzr, [sp, #0x30]
0000000000044290	mov	w8, #0x1
0000000000044294	str	x8, [sp, #0x20]
0000000000044298	movi.16b	v0, #0x0
000000000004429c	stp	q0, q0, [sp, #0xe0]
00000000000442a0	mov	w8, #0x3f800000
00000000000442a4	str	w8, [x27, #0x20]
00000000000442a8	sub	x1, x29, #0xd0
00000000000442ac	mov	x0, x19
00000000000442b0	bl	0x553f8 ; symbol stub for: _class_copyMethodList
00000000000442b4	mov	x22, x0
00000000000442b8	str	x21, [sp, #0x40]
00000000000442bc	str	x20, [sp, #0x28]
00000000000442c0	str	x19, [sp, #0x60]
00000000000442c4	mov	x20, #0x2d69
00000000000442c8	movk	x20, #0xeb38, lsl #16
00000000000442cc	movk	x20, #0xea08, lsl #32
00000000000442d0	movk	x20, #0x9ddf, lsl #48
00000000000442d4	ldr	w8, [x27, #0x30]
00000000000442d8	cbz	w8, 0x445c4
00000000000442dc	mov	x19, #0x0
00000000000442e0	add	x8, sp, #0xe0
00000000000442e4	add	x21, x8, #0x10
00000000000442e8	mov	w25, #0x1
00000000000442ec	b	0x44338
00000000000442f0	and	x20, x8, x28
00000000000442f4	ldr	x9, [sp, #0xe0]
00000000000442f8	ldr	x8, [x9, x20, lsl #3]
00000000000442fc	cbz	x8, 0x4445c
0000000000044300	ldr	x9, [x8]
0000000000044304	str	x9, [x23]
0000000000044308	str	x23, [x8]
000000000004430c	ldr	x8, [sp, #0xf8]
0000000000044310	add	x8, x8, #0x1
0000000000044314	str	x8, [sp, #0xf8]
0000000000044318	add	x19, x19, #0x1
000000000004431c	ldr	w8, [x27, #0x30]
0000000000044320	cmp	x19, x8
0000000000044324	mov	x20, #0x2d69
0000000000044328	movk	x20, #0xeb38, lsl #16
000000000004432c	movk	x20, #0xea08, lsl #32
0000000000044330	movk	x20, #0x9ddf, lsl #48
0000000000044334	b.hs	0x445c8
0000000000044338	ldr	x0, [x22, x19, lsl #3]
000000000004433c	bl	0x554c4 ; symbol stub for: _method_getName
0000000000044340	mov	x24, x0
0000000000044344	lsr	x8, x0, #32
0000000000044348	lsl	w9, w24, #3
000000000004434c	add	x9, x9, #0x8
0000000000044350	eor	x9, x9, x8
0000000000044354	mul	x9, x9, x20
0000000000044358	eor	x8, x9, x8
000000000004435c	eor	x8, x8, x9, lsr #47
0000000000044360	mul	x8, x8, x20
0000000000044364	eor	x8, x8, x8, lsr #47
0000000000044368	mov	x9, #0x2d69
000000000004436c	movk	x9, #0xeb38, lsl #16
0000000000044370	movk	x9, #0xea08, lsl #32
0000000000044374	movk	x9, #0x9ddf, lsl #48
0000000000044378	mul	x28, x8, x9
000000000004437c	ldr	x26, [sp, #0xe8]
0000000000044380	cbz	x26, 0x44418
0000000000044384	fmov	d0, x26
0000000000044388	cnt.8b	v0, v0
000000000004438c	uaddlv.8b	h0, v0
0000000000044390	fmov	w8, s0
0000000000044394	cmp	x8, #0x1
0000000000044398	b.hi	0x443a8
000000000004439c	sub	x9, x26, #0x1
00000000000443a0	and	x20, x28, x9
00000000000443a4	b	0x443bc
00000000000443a8	mov	x20, x28
00000000000443ac	cmp	x28, x26
00000000000443b0	b.lo	0x443bc
00000000000443b4	udiv	x9, x28, x26
00000000000443b8	msub	x20, x9, x26, x28
00000000000443bc	ldr	x9, [sp, #0xe0]
00000000000443c0	ldr	x9, [x9, x20, lsl #3]
00000000000443c4	cbz	x9, 0x44418
00000000000443c8	sub	x10, x26, #0x1
00000000000443cc	b	0x443e8
00000000000443d0	and	x11, x11, x10
00000000000443d4	cmp	x11, x20
00000000000443d8	b.ne	0x44418
00000000000443dc	ldr	x11, [x9, #0x10]
00000000000443e0	cmp	x11, x24
00000000000443e4	b.eq	0x44318
00000000000443e8	ldr	x9, [x9]
00000000000443ec	cbz	x9, 0x44418
00000000000443f0	ldr	x11, [x9, #0x8]
00000000000443f4	cmp	x11, x28
00000000000443f8	b.eq	0x443dc
00000000000443fc	cmp	x8, #0x1
0000000000044400	b.ls	0x443d0
0000000000044404	cmp	x11, x26
0000000000044408	b.lo	0x443d4
000000000004440c	udiv	x12, x11, x26
0000000000044410	msub	x11, x12, x26, x11
0000000000044414	b	0x443d4
0000000000044418	mov	w0, #0x1
000000000004441c	mov	w1, #0x18
0000000000044420	bl	0x553d4 ; symbol stub for: _calloc
0000000000044424	mov	x23, x0
0000000000044428	stp	x28, x24, [x0, #0x8]
000000000004442c	ldr	x8, [sp, #0xf8]
0000000000044430	add	x8, x8, #0x1
0000000000044434	ucvtf	s0, x8
0000000000044438	ldr	s1, [x27, #0x20]
000000000004443c	cbz	x26, 0x4448c
0000000000044440	ucvtf	s2, x26
0000000000044444	fmul	s2, s1, s2
0000000000044448	fcmp	s2, s0
000000000004444c	b.mi	0x4448c
0000000000044450	ldr	x9, [sp, #0xe0]
0000000000044454	ldr	x8, [x9, x20, lsl #3]
0000000000044458	cbnz	x8, 0x44300
000000000004445c	ldr	x8, [sp, #0xf0]
0000000000044460	str	x8, [x23]
0000000000044464	str	x23, [sp, #0xf0]
0000000000044468	str	x21, [x9, x20, lsl #3]
000000000004446c	ldr	x8, [x23]
0000000000044470	cbz	x8, 0x4430c
0000000000044474	ldr	x8, [x8, #0x8]
0000000000044478	sub	x9, x26, #0x1
000000000004447c	tst	x26, x9
0000000000044480	b.ne	0x4454c
0000000000044484	and	x8, x8, x9
0000000000044488	b	0x4455c
000000000004448c	cmp	x26, #0x3
0000000000044490	cset	w8, lo
0000000000044494	sub	x9, x26, #0x1
0000000000044498	tst	x26, x9
000000000004449c	cset	w9, ne
00000000000444a0	orr	w8, w8, w9
00000000000444a4	bfi	x8, x26, #1, #63
00000000000444a8	fdiv	s0, s0, s1
00000000000444ac	fcvtpu	x9, s0
00000000000444b0	cmp	x8, x9
00000000000444b4	csel	x24, x9, x8, lo
00000000000444b8	subs	x8, x24, #0x1
00000000000444bc	b.ne	0x444c8
00000000000444c0	mov	w24, #0x2
00000000000444c4	b	0x444e0
00000000000444c8	tst	x24, x8
00000000000444cc	b.eq	0x444e0
00000000000444d0	mov	x0, x24
00000000000444d4	bl	0x551dc ; symbol stub for: __ZNSt3__112__next_primeEm
00000000000444d8	mov	x24, x0
00000000000444dc	ldr	x26, [sp, #0xe8]
00000000000444e0	cmp	x24, x26
00000000000444e4	b.ls	0x444f8
00000000000444e8	add	x0, sp, #0xe0
00000000000444ec	mov	x1, x24
00000000000444f0	bl	__ZNSt3__112__hash_tableIP13objc_selectorNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm
00000000000444f4	b	0x4457c
00000000000444f8	b.hs	0x4457c
00000000000444fc	ldr	x8, [sp, #0xf8]
0000000000044500	ucvtf	s0, x8
0000000000044504	ldr	s1, [x27, #0x20]
0000000000044508	fdiv	s0, s0, s1
000000000004450c	fcvtpu	x0, s0
0000000000044510	cmp	x26, #0x3
0000000000044514	b.lo	0x44568
0000000000044518	fmov	d0, x26
000000000004451c	cnt.8b	v0, v0
0000000000044520	uaddlv.8b	h0, v0
0000000000044524	fmov	w8, s0
0000000000044528	cmp	x8, #0x1
000000000004452c	b.hi	0x44568
0000000000044530	sub	x8, x0, #0x1
0000000000044534	clz	x8, x8
0000000000044538	neg	x8, x8
000000000004453c	lsl	x8, x25, x8
0000000000044540	cmp	x0, #0x2
0000000000044544	csel	x0, x0, x8, lo
0000000000044548	b	0x4456c
000000000004454c	cmp	x8, x26
0000000000044550	b.lo	0x4455c
0000000000044554	udiv	x9, x8, x26
0000000000044558	msub	x8, x9, x26, x8
000000000004455c	ldr	x9, [sp, #0xe0]
0000000000044560	add	x8, x9, x8, lsl #3
0000000000044564	b	0x44308
0000000000044568	bl	0x551dc ; symbol stub for: __ZNSt3__112__next_primeEm
000000000004456c	cmp	x24, x0
0000000000044570	csel	x24, x0, x24, lo
0000000000044574	cmp	x24, x26
0000000000044578	b.lo	0x444e8
000000000004457c	ldr	x26, [sp, #0xe8]
0000000000044580	sub	x8, x26, #0x1
0000000000044584	tst	x26, x8
0000000000044588	b.eq	0x442f0
000000000004458c	cmp	x28, x26
0000000000044590	b.hs	0x445a8
0000000000044594	mov	x20, x28
0000000000044598	ldr	x9, [sp, #0xe0]
000000000004459c	ldr	x8, [x9, x20, lsl #3]
00000000000445a0	cbnz	x8, 0x44300
00000000000445a4	b	0x4445c
00000000000445a8	udiv	x8, x28, x26
00000000000445ac	mul	x8, x8, x26
00000000000445b0	sub	x20, x28, x8
00000000000445b4	ldr	x9, [sp, #0xe0]
00000000000445b8	ldr	x8, [x9, x20, lsl #3]
00000000000445bc	cbnz	x8, 0x44300
00000000000445c0	b	0x4445c
00000000000445c4	cbz	x22, 0x445d0
00000000000445c8	mov	x0, x22
00000000000445cc	bl	0x55458 ; symbol stub for: _free
00000000000445d0	ldr	x20, [sp, #0x40]
00000000000445d4	ldr	x8, [x20, #0x60]
00000000000445d8	ldr	x9, [x8, #0x10]
00000000000445dc	cbz	x20, 0x44690
00000000000445e0	mov	x10, x9
00000000000445e4	cbnz	x9, 0x44600
00000000000445e8	mov	x8, x20
00000000000445ec	ldr	x8, [x8, #0x18]
00000000000445f0	cbz	x8, 0x44690
00000000000445f4	ldr	x10, [x8, #0x60]
00000000000445f8	ldr	x10, [x10, #0x10]
00000000000445fc	cbz	x10, 0x445ec
0000000000044600	ldr	w8, [x10, #0x10]
0000000000044604	cbz	x9, 0x44698
0000000000044608	ldr	x22, [x9, #0x8]
000000000004460c	ldr	x23, [x9, #0x18]
0000000000044610	ldr	w9, [x9, #0x20]
0000000000044614	str	w9, [sp, #0x3c]
0000000000044618	cbz	x22, 0x446a0
000000000004461c	stp	xzr, xzr, [sp, #0xc8]
0000000000044620	str	xzr, [sp, #0xd8]
0000000000044624	cbz	w8, 0x446b0
0000000000044628	tbnz	w8, #0x1f, 0x45e44
000000000004462c	mov	x21, x23
0000000000044630	sxtw	x23, w8
0000000000044634	sbfiz	x24, x8, #3, #32
0000000000044638	mov	x0, x23
000000000004463c	mov	w1, #0x8
0000000000044640	bl	0x553d4 ; symbol stub for: _calloc
0000000000044644	stp	x0, x0, [sp, #0xc8]
0000000000044648	add	x19, x0, x23, lsl #3
000000000004464c	str	x19, [sp, #0xd8]
0000000000044650	mov	x1, x22
0000000000044654	mov	x2, x24
0000000000044658	bl	0x554ac ; symbol stub for: _memcpy
000000000004465c	str	x19, [sp, #0xd0]
0000000000044660	mov	x23, x21
0000000000044664	cbnz	x23, 0x446b4
0000000000044668	ldr	x23, [x20, #0x40]
000000000004466c	ldr	w8, [x20, #0x3c]
0000000000044670	str	w8, [sp, #0x3c]
0000000000044674	add	x8, sp, #0xb0
0000000000044678	stp	xzr, xzr, [sp, #0xb8]
000000000004467c	add	x28, x8, #0x8
0000000000044680	str	x28, [sp, #0xb0]
0000000000044684	str	x23, [sp, #0x70]
0000000000044688	cbnz	x23, 0x446cc
000000000004468c	b	0x44874
0000000000044690	mov	w8, #-0x1
0000000000044694	cbnz	x9, 0x44608
0000000000044698	mov	x23, #0x0
000000000004469c	str	wzr, [sp, #0x3c]
00000000000446a0	add	x22, x20, #0x70
00000000000446a4	stp	xzr, xzr, [sp, #0xc8]
00000000000446a8	str	xzr, [sp, #0xd8]
00000000000446ac	cbnz	w8, 0x44628
00000000000446b0	cbz	x23, 0x44668
00000000000446b4	add	x8, sp, #0xb0
00000000000446b8	stp	xzr, xzr, [sp, #0xb8]
00000000000446bc	add	x28, x8, #0x8
00000000000446c0	str	x28, [sp, #0xb0]
00000000000446c4	str	x23, [sp, #0x70]
00000000000446c8	cbz	x23, 0x44874
00000000000446cc	ldr	w9, [sp, #0x3c]
00000000000446d0	neg	w8, w9
00000000000446d4	cmp	w9, #0x0
00000000000446d8	csinc	w21, w8, w9, lt
00000000000446dc	cmp	w21, #0x1
00000000000446e0	b.lt	0x44874
00000000000446e4	mov	x24, #0x0
00000000000446e8	b	0x446f8
00000000000446ec	add	x24, x24, #0x1
00000000000446f0	cmp	x24, x21
00000000000446f4	b.eq	0x44874
00000000000446f8	lsl	x8, x24, #4
00000000000446fc	ldr	w25, [x23, x8]
0000000000044700	cbz	w25, 0x446ec
0000000000044704	add	x8, x23, x24, lsl #4
0000000000044708	ldrsw	x23, [x8, #0x4]
000000000004470c	stp	xzr, xzr, [x27, #0x30]
0000000000044710	str	xzr, [x27, #0x40]
0000000000044714	cbz	w23, 0x4478c
0000000000044718	tbnz	w23, #0x1f, 0x45e14
000000000004471c	mov	x0, x23
0000000000044720	mov	w1, #0x8
0000000000044724	bl	0x553d4 ; symbol stub for: _calloc
0000000000044728	mov	x22, x0
000000000004472c	str	x0, [x27, #0x30]
0000000000044730	lsl	x1, x23, #3
0000000000044734	add	x19, x0, x1
0000000000044738	str	x19, [x27, #0x40]
000000000004473c	bl	0x553c8 ; symbol stub for: _bzero
0000000000044740	mov	x8, #0x0
0000000000044744	str	x19, [x27, #0x38]
0000000000044748	ldr	x9, [sp, #0x70]
000000000004474c	add	x9, x9, x24, lsl #4
0000000000044750	and	x10, x23, #0xffffffff
0000000000044754	lsl	x10, x10, #3
0000000000044758	sub	x10, x10, #0x8
000000000004475c	ldr	x11, [x9, #0x8]!
0000000000044760	ldr	x11, [x11, x8]
0000000000044764	str	x11, [x22, x8]
0000000000044768	cmp	x10, x8
000000000004476c	b.eq	0x4478c
0000000000044770	ldr	x22, [x27, #0x30]
0000000000044774	add	x8, x8, #0x8
0000000000044778	ldr	x11, [x9]
000000000004477c	ldr	x11, [x11, x8]
0000000000044780	str	x11, [x22, x8]
0000000000044784	cmp	x10, x8
0000000000044788	b.ne	0x44770
000000000004478c	ldr	x20, [sp, #0xb8]
0000000000044790	cbz	x20, 0x447d8
0000000000044794	mov	x19, x28
0000000000044798	ldr	x23, [sp, #0x70]
000000000004479c	ldr	w8, [x20, #0x20]
00000000000447a0	cmp	w25, w8
00000000000447a4	b.ge	0x447bc
00000000000447a8	ldr	x8, [x20]
00000000000447ac	cbz	x8, 0x44838
00000000000447b0	mov	x19, x20
00000000000447b4	mov	x20, x8
00000000000447b8	b	0x4479c
00000000000447bc	cmp	w8, w25
00000000000447c0	b.ge	0x447e4
00000000000447c4	mov	x19, x20
00000000000447c8	ldr	x8, [x19, #0x8]!
00000000000447cc	cbz	x8, 0x447e4
00000000000447d0	mov	x20, x8
00000000000447d4	b	0x4479c
00000000000447d8	mov	x20, x28
00000000000447dc	mov	x19, x28
00000000000447e0	ldr	x23, [sp, #0x70]
00000000000447e4	ldr	x8, [x19]
00000000000447e8	cbnz	x8, 0x44860
00000000000447ec	mov	w0, #0x1
00000000000447f0	mov	w1, #0x40
00000000000447f4	bl	0x553d4 ; symbol stub for: _calloc
00000000000447f8	str	w25, [x0, #0x20]
00000000000447fc	ldr	q0, [x27, #0x30]
0000000000044800	stur	q0, [x0, #0x28]
0000000000044804	ldr	x8, [x27, #0x40]
0000000000044808	str	x8, [x0, #0x38]
000000000004480c	stp	xzr, xzr, [x27, #0x30]
0000000000044810	str	xzr, [x27, #0x40]
0000000000044814	stp	xzr, xzr, [x0]
0000000000044818	str	x20, [x0, #0x10]
000000000004481c	str	x0, [x19]
0000000000044820	ldr	x8, [sp, #0xb0]
0000000000044824	ldr	x8, [x8]
0000000000044828	cbz	x8, 0x44848
000000000004482c	str	x8, [sp, #0xb0]
0000000000044830	ldr	x1, [x19]
0000000000044834	b	0x4484c
0000000000044838	mov	x19, x20
000000000004483c	ldr	x8, [x19]
0000000000044840	cbnz	x8, 0x44860
0000000000044844	b	0x447ec
0000000000044848	mov	x1, x0
000000000004484c	ldr	x0, [sp, #0xb8]
0000000000044850	bl	__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_
0000000000044854	ldr	x8, [sp, #0xc0]
0000000000044858	add	x8, x8, #0x1
000000000004485c	str	x8, [sp, #0xc0]
0000000000044860	ldr	x0, [x27, #0x30]
0000000000044864	cbz	x0, 0x446ec
0000000000044868	str	x0, [x27, #0x38]
000000000004486c	bl	0x55458 ; symbol stub for: _free
0000000000044870	b	0x446ec
0000000000044874	stp	xzr, xzr, [sp, #0x98]
0000000000044878	str	xzr, [sp, #0xa8]
000000000004487c	movi.16b	v0, #0x0
0000000000044880	stp	q0, q0, [x27, #0x30]
0000000000044884	mov	w8, #0x3f800000
0000000000044888	str	w8, [x27, #0x50]
000000000004488c	stp	xzr, xzr, [x27, #0x70]
0000000000044890	str	xzr, [x27, #0x80]
0000000000044894	sub	x1, x29, #0xa8
0000000000044898	ldr	x0, [sp, #0x60]
000000000004489c	bl	0x55404 ; symbol stub for: _class_copyProtocolList
00000000000448a0	mov	x22, x0
00000000000448a4	cbz	x0, 0x44cd0
00000000000448a8	ldr	w8, [x27, #0x58]
00000000000448ac	add	x3, x22, x8, lsl #3
00000000000448b0	sub	x0, x29, #0x90
00000000000448b4	mov	x1, #0x0
00000000000448b8	mov	x2, x22
00000000000448bc	bl	__ZNSt3__16vectorIP8ProtocolN6kotlin11std_support9allocatorIS2_EEE6insertIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueENS_11__wrap_iterIS9_EEE4typeENSF_IPKS2_EESB_SB_
00000000000448c0	mov	x0, x22
00000000000448c4	bl	0x55458 ; symbol stub for: _free
00000000000448c8	ldp	x8, x0, [x27, #0x70]
00000000000448cc	cmp	x8, x0
00000000000448d0	b.eq	0x44cc0
00000000000448d4	sub	x9, x29, #0xd0
00000000000448d8	add	x19, x9, #0x10
00000000000448dc	adrp	x21, 51 ; 0x77000
00000000000448e0	b	0x448f0
00000000000448e4	ldp	x8, x0, [x27, #0x70]
00000000000448e8	cmp	x8, x0
00000000000448ec	b.eq	0x44cc4
00000000000448f0	ldr	x22, [x0, #-0x8]!
00000000000448f4	str	x0, [x27, #0x78]
00000000000448f8	lsr	x9, x22, #32
00000000000448fc	lsl	w10, w22, #3
0000000000044900	add	x10, x10, #0x8
0000000000044904	eor	x10, x10, x9
0000000000044908	mov	x11, #0x2d69
000000000004490c	movk	x11, #0xeb38, lsl #16
0000000000044910	movk	x11, #0xea08, lsl #32
0000000000044914	movk	x11, #0x9ddf, lsl #48
0000000000044918	mul	x10, x10, x11
000000000004491c	eor	x9, x10, x9
0000000000044920	eor	x9, x9, x10, lsr #47
0000000000044924	mul	x9, x9, x11
0000000000044928	eor	x9, x9, x9, lsr #47
000000000004492c	mul	x26, x9, x11
0000000000044930	ldr	x25, [x27, #0x38]
0000000000044934	cbz	x25, 0x449cc
0000000000044938	fmov	d0, x25
000000000004493c	cnt.8b	v0, v0
0000000000044940	uaddlv.8b	h0, v0
0000000000044944	fmov	w9, s0
0000000000044948	cmp	x9, #0x1
000000000004494c	b.hi	0x4495c
0000000000044950	sub	x10, x25, #0x1
0000000000044954	and	x20, x26, x10
0000000000044958	b	0x44970
000000000004495c	mov	x20, x26
0000000000044960	cmp	x26, x25
0000000000044964	b.lo	0x44970
0000000000044968	udiv	x10, x26, x25
000000000004496c	msub	x20, x10, x25, x26
0000000000044970	ldr	x10, [x27, #0x30]
0000000000044974	ldr	x10, [x10, x20, lsl #3]
0000000000044978	cbz	x10, 0x449cc
000000000004497c	sub	x11, x25, #0x1
0000000000044980	b	0x4499c
0000000000044984	and	x12, x12, x11
0000000000044988	cmp	x12, x20
000000000004498c	b.ne	0x449cc
0000000000044990	ldr	x12, [x10, #0x10]
0000000000044994	cmp	x12, x22
0000000000044998	b.eq	0x448e8
000000000004499c	ldr	x10, [x10]
00000000000449a0	cbz	x10, 0x449cc
00000000000449a4	ldr	x12, [x10, #0x8]
00000000000449a8	cmp	x12, x26
00000000000449ac	b.eq	0x44990
00000000000449b0	cmp	x9, #0x1
00000000000449b4	b.ls	0x44984
00000000000449b8	cmp	x12, x25
00000000000449bc	b.lo	0x44988
00000000000449c0	udiv	x13, x12, x25
00000000000449c4	msub	x12, x13, x25, x12
00000000000449c8	b	0x44988
00000000000449cc	mov	w0, #0x1
00000000000449d0	mov	w1, #0x18
00000000000449d4	bl	0x553d4 ; symbol stub for: _calloc
00000000000449d8	mov	x23, x0
00000000000449dc	stp	x26, x22, [x0, #0x8]
00000000000449e0	ldr	x8, [x27, #0x48]
00000000000449e4	add	x8, x8, #0x1
00000000000449e8	ucvtf	s0, x8
00000000000449ec	ldr	s1, [x27, #0x50]
00000000000449f0	cbz	x25, 0x44a1c
00000000000449f4	ucvtf	s2, x25
00000000000449f8	fmul	s2, s1, s2
00000000000449fc	fcmp	s2, s0
0000000000044a00	b.mi	0x44a1c
0000000000044a04	ldr	x9, [x27, #0x30]
0000000000044a08	ldr	x8, [x9, x20, lsl #3]
0000000000044a0c	cbz	x8, 0x44b14
0000000000044a10	ldr	x9, [x8]
0000000000044a14	str	x9, [x23]
0000000000044a18	b	0x44b90
0000000000044a1c	cmp	x25, #0x3
0000000000044a20	cset	w8, lo
0000000000044a24	sub	x9, x25, #0x1
0000000000044a28	tst	x25, x9
0000000000044a2c	cset	w9, ne
0000000000044a30	orr	w8, w8, w9
0000000000044a34	bfi	x8, x25, #1, #63
0000000000044a38	fdiv	s0, s0, s1
0000000000044a3c	fcvtpu	x9, s0
0000000000044a40	cmp	x8, x9
0000000000044a44	csel	x24, x9, x8, lo
0000000000044a48	subs	x8, x24, #0x1
0000000000044a4c	b.ne	0x44a58
0000000000044a50	mov	w24, #0x2
0000000000044a54	b	0x44a70
0000000000044a58	tst	x24, x8
0000000000044a5c	b.eq	0x44a70
0000000000044a60	mov	x0, x24
0000000000044a64	bl	0x551dc ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000044a68	mov	x24, x0
0000000000044a6c	ldr	x25, [x27, #0x38]
0000000000044a70	cmp	x24, x25
0000000000044a74	b.ls	0x44a88
0000000000044a78	sub	x0, x29, #0xd0
0000000000044a7c	mov	x1, x24
0000000000044a80	bl	__ZNSt3__112__hash_tableIP8ProtocolNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm
0000000000044a84	b	0x44af4
0000000000044a88	b.hs	0x44af4
0000000000044a8c	ldr	x8, [x27, #0x48]
0000000000044a90	ucvtf	s0, x8
0000000000044a94	ldr	s1, [x27, #0x50]
0000000000044a98	fdiv	s0, s0, s1
0000000000044a9c	fcvtpu	x0, s0
0000000000044aa0	cmp	x25, #0x3
0000000000044aa4	b.lo	0x44ae0
0000000000044aa8	fmov	d0, x25
0000000000044aac	cnt.8b	v0, v0
0000000000044ab0	uaddlv.8b	h0, v0
0000000000044ab4	fmov	w8, s0
0000000000044ab8	cmp	x8, #0x1
0000000000044abc	b.hi	0x44ae0
0000000000044ac0	sub	x8, x0, #0x1
0000000000044ac4	clz	x8, x8
0000000000044ac8	neg	x8, x8
0000000000044acc	mov	w9, #0x1
0000000000044ad0	lsl	x8, x9, x8
0000000000044ad4	cmp	x0, #0x2
0000000000044ad8	csel	x0, x0, x8, lo
0000000000044adc	b	0x44ae4
0000000000044ae0	bl	0x551dc ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000044ae4	cmp	x24, x0
0000000000044ae8	csel	x24, x0, x24, lo
0000000000044aec	cmp	x24, x25
0000000000044af0	b.lo	0x44a78
0000000000044af4	ldr	x25, [x27, #0x38]
0000000000044af8	sub	x8, x25, #0x1
0000000000044afc	tst	x25, x8
0000000000044b00	b.ne	0x44b44
0000000000044b04	and	x20, x8, x26
0000000000044b08	ldr	x9, [x27, #0x30]
0000000000044b0c	ldr	x8, [x9, x20, lsl #3]
0000000000044b10	cbnz	x8, 0x44a10
0000000000044b14	ldr	x8, [x27, #0x40]
0000000000044b18	str	x8, [x23]
0000000000044b1c	str	x23, [x27, #0x40]
0000000000044b20	str	x19, [x9, x20, lsl #3]
0000000000044b24	ldr	x8, [x23]
0000000000044b28	cbz	x8, 0x44b94
0000000000044b2c	ldr	x8, [x8, #0x8]
0000000000044b30	sub	x9, x25, #0x1
0000000000044b34	tst	x25, x9
0000000000044b38	b.ne	0x44b78
0000000000044b3c	and	x8, x8, x9
0000000000044b40	b	0x44b88
0000000000044b44	cmp	x26, x25
0000000000044b48	b.hs	0x44b60
0000000000044b4c	mov	x20, x26
0000000000044b50	ldr	x9, [x27, #0x30]
0000000000044b54	ldr	x8, [x9, x20, lsl #3]
0000000000044b58	cbnz	x8, 0x44a10
0000000000044b5c	b	0x44b14
0000000000044b60	udiv	x8, x26, x25
0000000000044b64	msub	x20, x8, x25, x26
0000000000044b68	ldr	x9, [x27, #0x30]
0000000000044b6c	ldr	x8, [x9, x20, lsl #3]
0000000000044b70	cbnz	x8, 0x44a10
0000000000044b74	b	0x44b14
0000000000044b78	cmp	x8, x25
0000000000044b7c	b.lo	0x44b88
0000000000044b80	udiv	x9, x8, x25
0000000000044b84	msub	x8, x9, x25, x8
0000000000044b88	ldr	x9, [x27, #0x30]
0000000000044b8c	add	x8, x9, x8, lsl #3
0000000000044b90	str	x23, [x8]
0000000000044b94	ldr	x8, [x27, #0x48]
0000000000044b98	add	x8, x8, #0x1
0000000000044b9c	str	x8, [x27, #0x48]
0000000000044ba0	mov	x0, x22
0000000000044ba4	bl	0x55614 ; symbol stub for: _protocol_getName
0000000000044ba8	ldr	x1, [x21, #0xe38]
0000000000044bac	bl	0x55734 ; symbol stub for: _strcmp
0000000000044bb0	cbnz	w0, 0x44c68
0000000000044bb4	ldp	x9, x8, [sp, #0xa0]
0000000000044bb8	cmp	x9, x8
0000000000044bbc	b.eq	0x44bd4
0000000000044bc0	nop
0000000000044bc4	ldr	x8, #0x3324c
0000000000044bc8	str	x8, [x9], #0x8
0000000000044bcc	str	x9, [sp, #0xa0]
0000000000044bd0	b	0x44c68
0000000000044bd4	mov	x20, x19
0000000000044bd8	ldr	x23, [sp, #0x98]
0000000000044bdc	sub	x24, x9, x23
0000000000044be0	asr	x19, x24, #3
0000000000044be4	add	x9, x19, #0x1
0000000000044be8	lsr	x10, x9, #61
0000000000044bec	cbnz	x10, 0x45e34
0000000000044bf0	sub	x8, x8, x23
0000000000044bf4	asr	x10, x8, #2
0000000000044bf8	cmp	x10, x9
0000000000044bfc	csel	x9, x9, x10, lo
0000000000044c00	mov	x10, #0xfffffffffffffff
0000000000044c04	cmp	x10, x8, asr #3
0000000000044c08	mov	x8, #0x1fffffffffffffff
0000000000044c0c	csel	x25, x9, x8, hi
0000000000044c10	cbz	x25, 0x44ca0
0000000000044c14	mov	x0, x25
0000000000044c18	mov	w1, #0x8
0000000000044c1c	bl	0x553d4 ; symbol stub for: _calloc
0000000000044c20	mov	x26, x0
0000000000044c24	add	x19, x26, x19, lsl #3
0000000000044c28	nop
0000000000044c2c	ldr	x8, #0x331e4
0000000000044c30	str	x8, [x19], #0x8
0000000000044c34	cmp	x24, #0x1
0000000000044c38	b.lt	0x44c4c
0000000000044c3c	mov	x0, x26
0000000000044c40	mov	x1, x23
0000000000044c44	mov	x2, x24
0000000000044c48	bl	0x554ac ; symbol stub for: _memcpy
0000000000044c4c	add	x8, x26, x25, lsl #3
0000000000044c50	stp	x26, x19, [sp, #0x98]
0000000000044c54	str	x8, [sp, #0xa8]
0000000000044c58	mov	x19, x20
0000000000044c5c	cbz	x23, 0x44c68
0000000000044c60	mov	x0, x23
0000000000044c64	bl	0x55458 ; symbol stub for: _free
0000000000044c68	sub	x1, x29, #0xa8
0000000000044c6c	mov	x0, x22
0000000000044c70	bl	0x55608 ; symbol stub for: _protocol_copyProtocolList
0000000000044c74	mov	x22, x0
0000000000044c78	cbz	x0, 0x448e4
0000000000044c7c	ldr	x1, [x27, #0x78]
0000000000044c80	ldr	w8, [x27, #0x58]
0000000000044c84	add	x3, x22, x8, lsl #3
0000000000044c88	sub	x0, x29, #0x90
0000000000044c8c	mov	x2, x22
0000000000044c90	bl	__ZNSt3__16vectorIP8ProtocolN6kotlin11std_support9allocatorIS2_EEE6insertIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueENS_11__wrap_iterIS9_EEE4typeENSF_IPKS2_EESB_SB_
0000000000044c94	mov	x0, x22
0000000000044c98	bl	0x55458 ; symbol stub for: _free
0000000000044c9c	b	0x448e4
0000000000044ca0	mov	x26, #0x0
0000000000044ca4	add	x19, x26, x19, lsl #3
0000000000044ca8	nop
0000000000044cac	ldr	x8, #0x33164
0000000000044cb0	str	x8, [x19], #0x8
0000000000044cb4	cmp	x24, #0x1
0000000000044cb8	b.ge	0x44c3c
0000000000044cbc	b	0x44c4c
0000000000044cc0	mov	x0, x8
0000000000044cc4	cbz	x0, 0x44cd0
0000000000044cc8	str	x0, [x27, #0x78]
0000000000044ccc	bl	0x55458 ; symbol stub for: _free
0000000000044cd0	ldr	x0, [x27, #0x40]
0000000000044cd4	ldr	x20, [sp, #0x40]
0000000000044cd8	cbz	x0, 0x44cec
0000000000044cdc	ldr	x19, [x0]
0000000000044ce0	bl	0x55458 ; symbol stub for: _free
0000000000044ce4	mov	x0, x19
0000000000044ce8	cbnz	x19, 0x44cdc
0000000000044cec	ldr	x0, [x27, #0x30]
0000000000044cf0	str	xzr, [x27, #0x30]
0000000000044cf4	cbz	x0, 0x44cfc
0000000000044cf8	bl	0x55458 ; symbol stub for: _free
0000000000044cfc	ldr	x22, [x20, #0x30]
0000000000044d00	ldrsw	x23, [x20, #0x38]
0000000000044d04	stp	xzr, xzr, [sp, #0x88]
0000000000044d08	str	xzr, [sp, #0x80]
0000000000044d0c	cbz	w23, 0x44d44
0000000000044d10	tbnz	w23, #0x1f, 0x45e50
0000000000044d14	lsl	x24, x23, #3
0000000000044d18	mov	x0, x23
0000000000044d1c	mov	w1, #0x8
0000000000044d20	bl	0x553d4 ; symbol stub for: _calloc
0000000000044d24	stp	x0, x0, [sp, #0x80]
0000000000044d28	add	x19, x0, x23, lsl #3
0000000000044d2c	str	x19, [sp, #0x90]
0000000000044d30	mov	x1, x22
0000000000044d34	mov	x2, x24
0000000000044d38	bl	0x554ac ; symbol stub for: _memcpy
0000000000044d3c	str	x19, [sp, #0x88]
0000000000044d40	b	0x44d48
0000000000044d44	mov	x19, #0x0
0000000000044d48	mov	x27, #0xfffffffffffffff
0000000000044d4c	mov	x21, #0x1fffffffffffffff
0000000000044d50	mov	x8, x19
0000000000044d54	mov	x26, x19
0000000000044d58	ldr	x20, [sp, #0x40]
0000000000044d5c	cmp	x26, x8
0000000000044d60	b.eq	0x44d7c
0000000000044d64	str	x20, [x26], #0x8
0000000000044d68	str	x26, [sp, #0x88]
0000000000044d6c	mov	x19, x26
0000000000044d70	ldr	x20, [x20, #0x18]
0000000000044d74	cbnz	x20, 0x44e38
0000000000044d78	b	0x44e48
0000000000044d7c	ldr	x22, [sp, #0x80]
0000000000044d80	sub	x8, x8, x22
0000000000044d84	asr	x25, x8, #3
0000000000044d88	add	x9, x25, #0x1
0000000000044d8c	lsr	x10, x9, #61
0000000000044d90	cbnz	x10, 0x45e08
0000000000044d94	asr	x8, x8, #2
0000000000044d98	cmp	x8, x9
0000000000044d9c	csel	x8, x9, x8, lo
0000000000044da0	cmp	x25, x27
0000000000044da4	csel	x23, x8, x21, lo
0000000000044da8	cbz	x23, 0x44e0c
0000000000044dac	mov	x0, x23
0000000000044db0	mov	w1, #0x8
0000000000044db4	bl	0x553d4 ; symbol stub for: _calloc
0000000000044db8	mov	x24, x0
0000000000044dbc	add	x26, x24, x25, lsl #3
0000000000044dc0	sub	x2, x19, x22
0000000000044dc4	sub	x25, x26, x2
0000000000044dc8	str	x20, [x26], #0x8
0000000000044dcc	cmp	x2, #0x1
0000000000044dd0	b.lt	0x44de0
0000000000044dd4	mov	x0, x25
0000000000044dd8	mov	x1, x22
0000000000044ddc	bl	0x554ac ; symbol stub for: _memcpy
0000000000044de0	add	x8, x24, x23, lsl #3
0000000000044de4	stp	x25, x26, [sp, #0x80]
0000000000044de8	str	x8, [sp, #0x90]
0000000000044dec	cbz	x22, 0x44e2c
0000000000044df0	mov	x0, x22
0000000000044df4	bl	0x55458 ; symbol stub for: _free
0000000000044df8	ldr	x19, [sp, #0x88]
0000000000044dfc	mov	x26, x19
0000000000044e00	ldr	x20, [x20, #0x18]
0000000000044e04	cbnz	x20, 0x44e38
0000000000044e08	b	0x44e48
0000000000044e0c	mov	x24, #0x0
0000000000044e10	add	x26, x24, x25, lsl #3
0000000000044e14	sub	x2, x19, x22
0000000000044e18	sub	x25, x26, x2
0000000000044e1c	str	x20, [x26], #0x8
0000000000044e20	cmp	x2, #0x1
0000000000044e24	b.ge	0x44dd4
0000000000044e28	b	0x44de0
0000000000044e2c	mov	x19, x26
0000000000044e30	ldr	x20, [x20, #0x18]
0000000000044e34	cbz	x20, 0x44e48
0000000000044e38	ldr	x8, [sp, #0x90]
0000000000044e3c	cmp	x26, x8
0000000000044e40	b.ne	0x44d64
0000000000044e44	b	0x44d7c
0000000000044e48	mov	w8, #0x1
0000000000044e4c	strb	w8, [sp, #0x7f]
0000000000044e50	nop
0000000000044e54	ldr	x8, #0x1b1b4 ; literal pool symbol address: _NSGenericException
0000000000044e58	ldr	x23, [sp, #0x80]
0000000000044e5c	cmp	x23, x26
0000000000044e60	str	x28, [sp, #0x68]
0000000000044e64	b.eq	0x450e0
0000000000044e68	ldr	x8, [x8]
0000000000044e6c	str	x8, [sp, #0x48]
0000000000044e70	mov	w27, #0x1
0000000000044e74	mov	x25, #0x2d69
0000000000044e78	movk	x25, #0xeb38, lsl #16
0000000000044e7c	movk	x25, #0xea08, lsl #32
0000000000044e80	movk	x25, #0x9ddf, lsl #48
0000000000044e84	b	0x44e94
0000000000044e88	add	x23, x23, #0x8
0000000000044e8c	cmp	x23, x26
0000000000044e90	b.eq	0x450d4
0000000000044e94	ldr	x8, [x23]
0000000000044e98	ldr	x8, [x8, #0x60]
0000000000044e9c	ldr	x22, [x8, #0x10]
0000000000044ea0	cbz	x22, 0x44e88
0000000000044ea4	ldr	w8, [x22, #0x68]
0000000000044ea8	cmp	w8, #0x1
0000000000044eac	b.lt	0x44e88
0000000000044eb0	mov	x24, #0x0
0000000000044eb4	nop
0000000000044eb8	ldr	x8, #0x31b78 ; Objc selector ref: raise:format:
0000000000044ebc	str	x8, [sp, #0x50]
0000000000044ec0	b	0x44eec
0000000000044ec4	mov	x9, x15
0000000000044ec8	mov	w27, #0x0
0000000000044ecc	sxtw	x8, w8
0000000000044ed0	ldr	x10, [x19]
0000000000044ed4	ldr	x9, [x9, #0x28]
0000000000044ed8	str	x10, [x9, x8, lsl #3]
0000000000044edc	add	x24, x24, #0x1
0000000000044ee0	ldrsw	x8, [x22, #0x68]
0000000000044ee4	cmp	x24, x8
0000000000044ee8	b.ge	0x44e88
0000000000044eec	ldr	x21, [x22, #0x60]
0000000000044ef0	add	x20, x21, x24, lsl #5
0000000000044ef4	ldr	x0, [x20]
0000000000044ef8	bl	0x55710 ; symbol stub for: _sel_registerName
0000000000044efc	ldr	x8, [sp, #0xe8]
0000000000044f00	cbz	x8, 0x44edc
0000000000044f04	lsr	x9, x0, #32
0000000000044f08	lsl	w10, w0, #3
0000000000044f0c	add	x10, x10, #0x8
0000000000044f10	eor	x10, x10, x9
0000000000044f14	mul	x10, x10, x25
0000000000044f18	eor	x9, x10, x9
0000000000044f1c	eor	x9, x9, x10, lsr #47
0000000000044f20	mul	x9, x9, x25
0000000000044f24	eor	x9, x9, x9, lsr #47
0000000000044f28	mul	x9, x9, x25
0000000000044f2c	fmov	d0, x8
0000000000044f30	cnt.8b	v0, v0
0000000000044f34	uaddlv.8b	h0, v0
0000000000044f38	fmov	w10, s0
0000000000044f3c	cmp	x10, #0x1
0000000000044f40	b.hi	0x44f50
0000000000044f44	sub	x11, x8, #0x1
0000000000044f48	and	x11, x11, x9
0000000000044f4c	b	0x44f64
0000000000044f50	mov	x11, x9
0000000000044f54	cmp	x9, x8
0000000000044f58	b.lo	0x44f64
0000000000044f5c	udiv	x11, x9, x8
0000000000044f60	msub	x11, x11, x8, x9
0000000000044f64	ldr	x12, [sp, #0xe0]
0000000000044f68	ldr	x12, [x12, x11, lsl #3]
0000000000044f6c	cbz	x12, 0x44edc
0000000000044f70	ldr	x12, [x12]
0000000000044f74	cbz	x12, 0x44edc
0000000000044f78	sub	x13, x8, #0x1
0000000000044f7c	b	0x44f94
0000000000044f80	ldr	x14, [x12, #0x10]
0000000000044f84	cmp	x14, x0
0000000000044f88	b.eq	0x44fcc
0000000000044f8c	ldr	x12, [x12]
0000000000044f90	cbz	x12, 0x44edc
0000000000044f94	ldr	x14, [x12, #0x8]
0000000000044f98	cmp	x14, x9
0000000000044f9c	b.eq	0x44f80
0000000000044fa0	cmp	x10, #0x1
0000000000044fa4	b.hi	0x44fb0
0000000000044fa8	and	x14, x14, x13
0000000000044fac	b	0x44fc0
0000000000044fb0	cmp	x14, x8
0000000000044fb4	b.lo	0x44fc0
0000000000044fb8	udiv	x15, x14, x8
0000000000044fbc	msub	x14, x15, x8, x14
0000000000044fc0	cmp	x14, x11
0000000000044fc4	b.eq	0x44f8c
0000000000044fc8	b	0x44edc
0000000000044fcc	str	w27, [sp, #0x58]
0000000000044fd0	add	x28, x21, x24, lsl #5
0000000000044fd4	mov	x19, x28
0000000000044fd8	ldr	x8, [x19, #0x18]!
0000000000044fdc	cbnz	x8, 0x4503c
0000000000044fe0	ldr	w8, [x28, #0x14]
0000000000044fe4	cmn	w8, #0x2
0000000000044fe8	adr	x9, #0x2c8e8 ; Objc cfstring ref: @"bad cfstring ref"
0000000000044fec	nop
0000000000044ff0	adr	x10, #0x2c900 ; Objc cfstring ref: @"bad cfstring ref"
0000000000044ff4	nop
0000000000044ff8	csel	x9, x10, x9, eq
0000000000044ffc	cmn	w8, #0x1
0000000000045000	adr	x8, #0x2c910 ; Objc cfstring ref: @"bad cfstring ref"
0000000000045004	nop
0000000000045008	csel	x27, x8, x9, eq
000000000004500c	nop
0000000000045010	ldr	x25, #0x31c68 ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000045014	ldr	x0, [sp, #0x60]
0000000000045018	bl	0x5541c ; symbol stub for: _class_getName
000000000004501c	ldr	x8, [x20]
0000000000045020	stp	x8, x27, [sp, #0x8]
0000000000045024	str	x0, [sp]
0000000000045028	mov	x0, x25
000000000004502c	ldp	x2, x1, [sp, #0x48]
0000000000045030	adr	x3, #0x2c900 ; Objc cfstring ref: @"bad cfstring ref"
0000000000045034	nop
0000000000045038	bl	0x55584 ; Objc message: +[NSException raise:format:]
000000000004503c	ldrsw	x8, [x28, #0x14]
0000000000045040	cmn	w8, #0x1
0000000000045044	b.eq	0x45054
0000000000045048	ldr	x9, [x19]
000000000004504c	ldr	x10, [sp, #0xc8]
0000000000045050	str	x9, [x10, x8, lsl #3]
0000000000045054	mov	w27, #0x0
0000000000045058	ldp	x15, x8, [sp, #0x68]
000000000004505c	mov	x25, #0x2d69
0000000000045060	movk	x25, #0xeb38, lsl #16
0000000000045064	movk	x25, #0xea08, lsl #32
0000000000045068	movk	x25, #0x9ddf, lsl #48
000000000004506c	cbz	x8, 0x44edc
0000000000045070	add	x8, x21, x24, lsl #5
0000000000045074	ldr	w8, [x8, #0x10]
0000000000045078	cmn	w8, #0x1
000000000004507c	b.eq	0x44edc
0000000000045080	ldr	x14, [sp, #0xb8]
0000000000045084	cbz	x14, 0x44ec4
0000000000045088	add	x9, x21, x24, lsl #5
000000000004508c	ldr	w10, [x9, #0x8]
0000000000045090	mov	x9, x15
0000000000045094	mov	x11, x14
0000000000045098	mov	x12, x9
000000000004509c	ldr	w13, [x14, #0x20]
00000000000450a0	cmp	w13, w10
00000000000450a4	cset	w14, lt
00000000000450a8	csel	x9, x9, x11, lt
00000000000450ac	ldr	x14, [x11, w14, uxtw #3]
00000000000450b0	cbnz	x14, 0x45094
00000000000450b4	cmp	x9, x15
00000000000450b8	b.eq	0x44ec4
00000000000450bc	cmp	w13, w10
00000000000450c0	csel	x11, x12, x11, lt
00000000000450c4	ldr	w11, [x11, #0x20]
00000000000450c8	cmp	w11, w10
00000000000450cc	b.gt	0x44ec4
00000000000450d0	b	0x44ec8
00000000000450d4	strb	w27, [sp, #0x7f]
00000000000450d8	nop
00000000000450dc	ldr	x8, #0x1af2c ; literal pool symbol address: _NSGenericException
00000000000450e0	ldp	x21, x9, [sp, #0x98]
00000000000450e4	str	x9, [sp, #0x58]
00000000000450e8	cmp	x21, x9
00000000000450ec	ldr	x23, [sp, #0x70]
00000000000450f0	b.eq	0x4526c
00000000000450f4	ldr	x22, [x8]
00000000000450f8	b	0x4510c
00000000000450fc	add	x21, x21, #0x8
0000000000045100	ldr	x8, [sp, #0x58]
0000000000045104	cmp	x21, x8
0000000000045108	b.eq	0x4526c
000000000004510c	ldr	x8, [x21]
0000000000045110	ldr	x9, [x8, #0x60]
0000000000045114	ldr	x27, [x9, #0x10]
0000000000045118	cbz	x27, 0x450fc
000000000004511c	cbz	x23, 0x45134
0000000000045120	ldr	w2, [x8, #0x5c]
0000000000045124	ldr	w3, [x27, #0x20]
0000000000045128	add	x0, sp, #0xb0
000000000004512c	add	x1, sp, #0x7f
0000000000045130	bl	__ZZL14createTypeInfoP10objc_classPK8TypeInfoS3_ENK3$_1clEii
0000000000045134	ldr	w8, [x27, #0x68]
0000000000045138	cmp	w8, #0x1
000000000004513c	b.lt	0x450fc
0000000000045140	mov	x20, #0x0
0000000000045144	nop
0000000000045148	ldr	x24, #0x318e8 ; Objc selector ref: raise:format:
000000000004514c	b	0x45174
0000000000045150	mov	x8, x13
0000000000045154	ldrsw	x9, [x19]
0000000000045158	ldr	x10, [x26]
000000000004515c	ldr	x8, [x8, #0x28]
0000000000045160	str	x10, [x8, x9, lsl #3]
0000000000045164	add	x20, x20, #0x1
0000000000045168	ldrsw	x8, [x27, #0x68]
000000000004516c	cmp	x20, x8
0000000000045170	b.ge	0x450fc
0000000000045174	strb	wzr, [sp, #0x7f]
0000000000045178	ldr	x28, [x27, #0x60]
000000000004517c	add	x19, x28, x20, lsl #5
0000000000045180	mov	x26, x19
0000000000045184	ldr	x8, [x26, #0x18]!
0000000000045188	cbnz	x8, 0x451f0
000000000004518c	ldr	w8, [x19, #0x14]
0000000000045190	cmn	w8, #0x2
0000000000045194	adr	x9, #0x2c73c ; Objc cfstring ref: @"bad cfstring ref"
0000000000045198	nop
000000000004519c	adr	x10, #0x2c754 ; Objc cfstring ref: @"bad cfstring ref"
00000000000451a0	nop
00000000000451a4	csel	x9, x10, x9, eq
00000000000451a8	cmn	w8, #0x1
00000000000451ac	adr	x8, #0x2c764 ; Objc cfstring ref: @"bad cfstring ref"
00000000000451b0	nop
00000000000451b4	csel	x23, x8, x9, eq
00000000000451b8	nop
00000000000451bc	ldr	x25, #0x31abc ; Objc class ref: _OBJC_CLASS_$_NSException
00000000000451c0	ldr	x0, [sp, #0x60]
00000000000451c4	bl	0x5541c ; symbol stub for: _class_getName
00000000000451c8	lsl	x8, x20, #5
00000000000451cc	ldr	x8, [x28, x8]
00000000000451d0	stp	x8, x23, [sp, #0x8]
00000000000451d4	str	x0, [sp]
00000000000451d8	mov	x0, x25
00000000000451dc	mov	x1, x24
00000000000451e0	mov	x2, x22
00000000000451e4	adr	x3, #0x2c74c ; Objc cfstring ref: @"bad cfstring ref"
00000000000451e8	nop
00000000000451ec	bl	0x55584 ; Objc message: +[NSException raise:format:]
00000000000451f0	ldr	x23, [sp, #0x70]
00000000000451f4	cbz	x23, 0x45164
00000000000451f8	ldr	w8, [x19, #0x10]!
00000000000451fc	cmn	w8, #0x1
0000000000045200	b.eq	0x45164
0000000000045204	add	x8, x28, x20, lsl #5
0000000000045208	ldp	w25, w3, [x8, #0x8]
000000000004520c	add	x0, sp, #0xb0
0000000000045210	add	x1, sp, #0x7f
0000000000045214	mov	x2, x25
0000000000045218	bl	__ZZL14createTypeInfoP10objc_classPK8TypeInfoS3_ENK3$_1clEii
000000000004521c	ldr	x12, [sp, #0xb8]
0000000000045220	ldr	x13, [sp, #0x68]
0000000000045224	cbz	x12, 0x45150
0000000000045228	mov	x8, x13
000000000004522c	mov	x9, x12
0000000000045230	mov	x10, x8
0000000000045234	ldr	w11, [x12, #0x20]
0000000000045238	cmp	w11, w25
000000000004523c	cset	w12, lt
0000000000045240	csel	x8, x8, x9, lt
0000000000045244	ldr	x12, [x9, w12, uxtw #3]
0000000000045248	cbnz	x12, 0x4522c
000000000004524c	cmp	x8, x13
0000000000045250	b.eq	0x45150
0000000000045254	cmp	w11, w25
0000000000045258	csel	x9, x10, x9, lt
000000000004525c	ldr	w9, [x9, #0x20]
0000000000045260	cmp	w9, w25
0000000000045264	b.gt	0x45150
0000000000045268	b	0x45154
000000000004526c	ldr	x0, [sp, #0x60]
0000000000045270	bl	0x5541c ; symbol stub for: _class_getName
0000000000045274	str	x0, [sp, #0x58]
0000000000045278	ldrb	w8, [sp, #0x7f]
000000000004527c	str	w8, [sp, #0x50]
0000000000045280	ldp	x9, x8, [sp, #0xc8]
0000000000045284	sub	x8, x8, x9
0000000000045288	add	x1, x8, #0x70
000000000004528c	mov	w0, #0x1
0000000000045290	bl	0x553d4 ; symbol stub for: _calloc
0000000000045294	mov	x22, x0
0000000000045298	str	x0, [x0]
000000000004529c	mov	w8, #0x8
00000000000452a0	str	w8, [x0, #0x58]
00000000000452a4	ldr	x9, [sp, #0x40]
00000000000452a8	str	x9, [x0, #0x18]
00000000000452ac	ldr	w8, [x9, #0x14]
00000000000452b0	str	w8, [x0, #0x14]
00000000000452b4	ldr	x8, [x9, #0x20]
00000000000452b8	str	x8, [x0, #0x20]
00000000000452bc	ldr	w8, [x9, #0x28]
00000000000452c0	str	w8, [x0, #0x28]
00000000000452c4	ldrb	w8, [x9, #0x58]
00000000000452c8	add	x27, sp, #0xe0
00000000000452cc	ldr	x28, [sp, #0x68]
00000000000452d0	tbz	w8, #0x0, 0x452dc
00000000000452d4	mov	w8, #0x9
00000000000452d8	str	w8, [x22, #0x58]
00000000000452dc	ldr	w8, [x9, #0x5c]
00000000000452e0	str	w8, [x22, #0x5c]
00000000000452e4	ldr	x24, [x9, #0x30]
00000000000452e8	ldrsw	x25, [x9, #0x38]
00000000000452ec	stp	xzr, xzr, [x27, #0x60]
00000000000452f0	str	xzr, [x27, #0x58]
00000000000452f4	cbz	w25, 0x45598
00000000000452f8	tbnz	w25, #0x1f, 0x45e5c
00000000000452fc	lsl	x26, x25, #3
0000000000045300	mov	x0, x25
0000000000045304	mov	w1, #0x8
0000000000045308	bl	0x553d4 ; symbol stub for: _calloc
000000000004530c	mov	x21, x0
0000000000045310	str	x0, [x27, #0x58]
0000000000045314	add	x19, x0, x25, lsl #3
0000000000045318	str	x19, [x27, #0x68]
000000000004531c	mov	x1, x24
0000000000045320	mov	x2, x26
0000000000045324	bl	0x554ac ; symbol stub for: _memcpy
0000000000045328	str	x19, [x27, #0x60]
000000000004532c	movi.16b	v0, #0x0
0000000000045330	stp	q0, q0, [x27, #0x30]
0000000000045334	mov	w8, #0x3f800000
0000000000045338	str	w8, [x27, #0x50]
000000000004533c	cmp	x21, x19
0000000000045340	b.eq	0x45360
0000000000045344	ldr	x1, [x21]
0000000000045348	sub	x0, x29, #0xd0
000000000004534c	mov	x2, x21
0000000000045350	bl	__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_
0000000000045354	add	x21, x21, #0x8
0000000000045358	cmp	x21, x19
000000000004535c	b.ne	0x45344
0000000000045360	ldp	x20, x23, [sp, #0x98]
0000000000045364	cmp	x20, x23
0000000000045368	b.ne	0x453a4
000000000004536c	ldp	x19, x20, [x27, #0x58]
0000000000045370	subs	x8, x20, x19
0000000000045374	asr	x21, x8, #3
0000000000045378	mov	x0, x21
000000000004537c	mov	w1, #0x8
0000000000045380	bl	0x553d4 ; symbol stub for: _calloc
0000000000045384	cmp	x20, x19
0000000000045388	b.ne	0x4548c
000000000004538c	mov	x21, #0x0
0000000000045390	ldr	x11, [sp, #0x70]
0000000000045394	b	0x454ac
0000000000045398	add	x20, x20, #0x8
000000000004539c	cmp	x20, x23
00000000000453a0	b.eq	0x4536c
00000000000453a4	ldr	x21, [x20]
00000000000453a8	str	x21, [x27, #0x70]
00000000000453ac	sub	x0, x29, #0xd0
00000000000453b0	sub	x2, x29, #0x90
00000000000453b4	mov	x1, x21
00000000000453b8	bl	__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_
00000000000453bc	tbz	w0, #0x0, 0x45398
00000000000453c0	ldp	x9, x8, [x27, #0x60]
00000000000453c4	cmp	x9, x8
00000000000453c8	b.eq	0x453e4
00000000000453cc	str	x21, [x9], #0x8
00000000000453d0	str	x9, [x27, #0x60]
00000000000453d4	add	x20, x20, #0x8
00000000000453d8	cmp	x20, x23
00000000000453dc	b.ne	0x453a4
00000000000453e0	b	0x4536c
00000000000453e4	ldr	x24, [x27, #0x58]
00000000000453e8	sub	x25, x9, x24
00000000000453ec	asr	x19, x25, #3
00000000000453f0	add	x9, x19, #0x1
00000000000453f4	lsr	x10, x9, #61
00000000000453f8	cbnz	x10, 0x45e24
00000000000453fc	sub	x8, x8, x24
0000000000045400	asr	x10, x8, #2
0000000000045404	cmp	x10, x9
0000000000045408	csel	x9, x9, x10, lo
000000000004540c	mov	x10, #0xfffffffffffffff
0000000000045410	cmp	x10, x8, asr #3
0000000000045414	mov	x8, #0x1fffffffffffffff
0000000000045418	csel	x26, x9, x8, hi
000000000004541c	cbz	x26, 0x45474
0000000000045420	mov	x0, x26
0000000000045424	mov	w1, #0x8
0000000000045428	bl	0x553d4 ; symbol stub for: _calloc
000000000004542c	mov	x27, x0
0000000000045430	add	x19, x27, x19, lsl #3
0000000000045434	str	x21, [x19], #0x8
0000000000045438	cmp	x25, #0x1
000000000004543c	b.lt	0x45450
0000000000045440	mov	x0, x27
0000000000045444	mov	x1, x24
0000000000045448	mov	x2, x25
000000000004544c	bl	0x554ac ; symbol stub for: _memcpy
0000000000045450	add	x8, x27, x26, lsl #3
0000000000045454	add	x9, sp, #0xe0
0000000000045458	str	x27, [x9, #0x58]
000000000004545c	add	x27, sp, #0xe0
0000000000045460	stp	x19, x8, [x27, #0x60]
0000000000045464	cbz	x24, 0x45398
0000000000045468	mov	x0, x24
000000000004546c	bl	0x55458 ; symbol stub for: _free
0000000000045470	b	0x45398
0000000000045474	mov	x27, #0x0
0000000000045478	add	x19, x27, x19, lsl #3
000000000004547c	str	x21, [x19], #0x8
0000000000045480	cmp	x25, #0x1
0000000000045484	b.ge	0x45440
0000000000045488	b	0x45450
000000000004548c	mov	x8, #0x0
0000000000045490	ldr	x11, [sp, #0x70]
0000000000045494	lsl	x9, x8, #3
0000000000045498	ldr	x10, [x19, x9]
000000000004549c	str	x10, [x0, x9]
00000000000454a0	add	x8, x8, #0x1
00000000000454a4	cmp	x8, x21
00000000000454a8	b.lo	0x45494
00000000000454ac	str	x0, [x22, #0x30]
00000000000454b0	str	w21, [x22, #0x38]
00000000000454b4	cbz	x11, 0x454cc
00000000000454b8	ldr	w8, [sp, #0x50]
00000000000454bc	cbz	w8, 0x45888
00000000000454c0	ldr	w8, [sp, #0x3c]
00000000000454c4	str	w8, [x22, #0x3c]
00000000000454c8	str	x11, [x22, #0x40]
00000000000454cc	str	xzr, [x22, #0x48]
00000000000454d0	ldr	x26, [sp, #0x58]
00000000000454d4	mov	x0, x26
00000000000454d8	bl	0x5574c ; symbol stub for: _strlen
00000000000454dc	mov	x24, x0
00000000000454e0	add	x21, x26, x0
00000000000454e4	str	x26, [x27, #0x70]
00000000000454e8	cmp	x0, #0x1
00000000000454ec	b.lt	0x455bc
00000000000454f0	mov	w20, #0x0
00000000000454f4	mov	w19, #0x1
00000000000454f8	mov	w23, #0x34
00000000000454fc	mov	w25, #0xa
0000000000045500	b	0x45520
0000000000045504	ldr	x8, [x27, #0x70]
0000000000045508	add	x8, x8, #0x1
000000000004550c	str	x8, [x27, #0x70]
0000000000045510	mov	w9, #0x1
0000000000045514	add	w20, w9, w20
0000000000045518	cmp	x8, x21
000000000004551c	b.hs	0x455c0
0000000000045520	str	wzr, [x27, #0x9c]
0000000000045524	sub	x0, x29, #0x90
0000000000045528	sub	x2, x29, #0x64
000000000004552c	mov	x1, x21
0000000000045530	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
0000000000045534	lsl	w8, w19, w0
0000000000045538	tst	w8, w23
000000000004553c	b.ne	0x45504
0000000000045540	tst	w8, w25
0000000000045544	b.eq	0x45578
0000000000045548	ldr	x8, [x27, #0x70]
000000000004554c	add	x9, x8, #0x1
0000000000045550	mov	x8, x9
0000000000045554	str	x9, [x27, #0x70]
0000000000045558	cmp	x9, x21
000000000004555c	b.hs	0x45510
0000000000045560	mov	x9, x8
0000000000045564	ldrb	w10, [x9], #0x1
0000000000045568	and	w10, w10, #0xc0
000000000004556c	cmp	w10, #0x80
0000000000045570	b.eq	0x45550
0000000000045574	b	0x45510
0000000000045578	ldrh	w9, [x27, #0x9e]
000000000004557c	ldr	x8, [x27, #0x70]
0000000000045580	cmp	w9, #0x0
0000000000045584	cinc	w9, w19, ne
0000000000045588	add	w20, w9, w20
000000000004558c	cmp	x8, x21
0000000000045590	b.lo	0x45520
0000000000045594	b	0x455c0
0000000000045598	mov	x19, #0x0
000000000004559c	mov	x21, #0x0
00000000000455a0	movi.16b	v0, #0x0
00000000000455a4	stp	q0, q0, [x27, #0x30]
00000000000455a8	mov	w8, #0x3f800000
00000000000455ac	str	w8, [x27, #0x50]
00000000000455b0	cmp	x21, x19
00000000000455b4	b.ne	0x45344
00000000000455b8	b	0x45360
00000000000455bc	mov	w20, #0x0
00000000000455c0	mov	w8, w20
00000000000455c4	lsl	x8, x8, #1
00000000000455c8	add	x0, x8, #0x10
00000000000455cc	mov	w19, #0x1
00000000000455d0	mov	w1, #0x1
00000000000455d4	bl	0x553d4 ; symbol stub for: _calloc
00000000000455d8	mov	x25, x0
00000000000455dc	adr	x8, #0x1c904
00000000000455e0	nop
00000000000455e4	orr	x8, x8, #0x1
00000000000455e8	str	x8, [x0]
00000000000455ec	str	w20, [x0, #0x8]
00000000000455f0	str	x26, [x27, #0x70]
00000000000455f4	cbz	x24, 0x456b4
00000000000455f8	add	x20, x25, #0x10
00000000000455fc	mov	w23, #0x34
0000000000045600	mov	w24, #0xa
0000000000045604	mov	w26, #-0x2840
0000000000045608	b	0x45630
000000000004560c	add	w9, w26, w8, lsr #10
0000000000045610	strh	w9, [x20]
0000000000045614	mov	w9, #0xdc00
0000000000045618	bfxil	w9, w8, #0, #10
000000000004561c	strh	w9, [x20, #0x2]
0000000000045620	add	x20, x20, #0x4
0000000000045624	ldr	x8, [x27, #0x70]
0000000000045628	cmp	x8, x21
000000000004562c	b.eq	0x456b4
0000000000045630	str	wzr, [x27, #0x9c]
0000000000045634	sub	x0, x29, #0x90
0000000000045638	sub	x2, x29, #0x64
000000000004563c	mov	x1, x21
0000000000045640	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
0000000000045644	lsl	w8, w19, w0
0000000000045648	tst	w8, w23
000000000004564c	b.eq	0x45660
0000000000045650	ldr	x8, [x27, #0x70]
0000000000045654	add	x8, x8, #0x1
0000000000045658	str	x8, [x27, #0x70]
000000000004565c	b	0x4568c
0000000000045660	tst	w8, w24
0000000000045664	b.eq	0x456a4
0000000000045668	ldr	x8, [x27, #0x70]
000000000004566c	add	x8, x8, #0x1
0000000000045670	str	x8, [x27, #0x70]
0000000000045674	cmp	x8, x21
0000000000045678	b.hs	0x4568c
000000000004567c	ldrb	w9, [x8], #0x1
0000000000045680	and	w9, w9, #0xc0
0000000000045684	cmp	w9, #0x80
0000000000045688	b.eq	0x45670
000000000004568c	mov	w8, #0xfffd
0000000000045690	strh	w8, [x20], #0x2
0000000000045694	ldr	x8, [x27, #0x70]
0000000000045698	cmp	x8, x21
000000000004569c	b.ne	0x45630
00000000000456a0	b	0x456b4
00000000000456a4	ldr	w8, [x27, #0x9c]
00000000000456a8	cmp	w8, #0x10, lsl #12
00000000000456ac	b.lo	0x45690
00000000000456b0	b	0x4560c
00000000000456b4	str	x25, [x22, #0x50]
00000000000456b8	mov	w0, #0x1
00000000000456bc	mov	w1, #0x18
00000000000456c0	bl	0x553d4 ; symbol stub for: _calloc
00000000000456c4	str	x0, [x22, #0x60]
00000000000456c8	ldp	x8, x9, [sp, #0xc8]
00000000000456cc	subs	x11, x9, x8
00000000000456d0	b.eq	0x456f8
00000000000456d4	mov	x9, #0x0
00000000000456d8	add	x10, x22, #0x70
00000000000456dc	asr	x11, x11, #3
00000000000456e0	lsl	x12, x9, #3
00000000000456e4	ldr	x13, [x8, x12]
00000000000456e8	str	x13, [x10, x12]
00000000000456ec	add	x9, x9, #0x1
00000000000456f0	cmp	x9, x11
00000000000456f4	b.lo	0x456e0
00000000000456f8	ldr	x0, [x27, #0x40]
00000000000456fc	ldr	x20, [sp, #0x60]
0000000000045700	cbz	x0, 0x45714
0000000000045704	ldr	x19, [x0]
0000000000045708	bl	0x55458 ; symbol stub for: _free
000000000004570c	mov	x0, x19
0000000000045710	cbnz	x19, 0x45704
0000000000045714	ldr	x0, [x27, #0x30]
0000000000045718	str	xzr, [x27, #0x30]
000000000004571c	cbz	x0, 0x45724
0000000000045720	bl	0x55458 ; symbol stub for: _free
0000000000045724	ldr	x0, [x27, #0x58]
0000000000045728	cbz	x0, 0x45734
000000000004572c	str	x0, [x27, #0x60]
0000000000045730	bl	0x55458 ; symbol stub for: _free
0000000000045734	ldr	x8, [x22, #0x60]
0000000000045738	str	x20, [x8, #0x8]
000000000004573c	ldr	x0, [sp, #0x80]
0000000000045740	cbz	x0, 0x4574c
0000000000045744	str	x0, [sp, #0x88]
0000000000045748	bl	0x55458 ; symbol stub for: _free
000000000004574c	ldr	x0, [sp, #0x98]
0000000000045750	adrp	x20, 53 ; 0x7a000
0000000000045754	add	x20, x20, #0x2c0
0000000000045758	cbz	x0, 0x45764
000000000004575c	str	x0, [sp, #0xa0]
0000000000045760	bl	0x55458 ; symbol stub for: _free
0000000000045764	ldr	x0, [sp, #0xb8]
0000000000045768	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
000000000004576c	ldr	x0, [sp, #0xc8]
0000000000045770	cbz	x0, 0x4577c
0000000000045774	str	x0, [sp, #0xd0]
0000000000045778	bl	0x55458 ; symbol stub for: _free
000000000004577c	ldr	x0, [sp, #0xf0]
0000000000045780	cbz	x0, 0x45794
0000000000045784	ldr	x19, [x0]
0000000000045788	bl	0x55458 ; symbol stub for: _free
000000000004578c	mov	x0, x19
0000000000045790	cbnz	x19, 0x45784
0000000000045794	ldr	x0, [sp, #0xe0]
0000000000045798	str	xzr, [sp, #0xe0]
000000000004579c	cbz	x0, 0x457a4
00000000000457a0	bl	0x55458 ; symbol stub for: _free
00000000000457a4	ldr	x8, [sp, #0x30]
00000000000457a8	cbz	x8, 0x457e0
00000000000457ac	add	x0, x8, #0x138
00000000000457b0	ldr	x10, [sp, #0x20]
00000000000457b4	ldaxr	w8, [x0]
00000000000457b8	stlxr	w9, w10, [x0]
00000000000457bc	cbnz	w9, 0x457b4
00000000000457c0	cbnz	w10, 0x457e0
00000000000457c4	cmp	w8, #0x1
00000000000457c8	b.ne	0x457e0
00000000000457cc	adr	x8, #0x4eabd
00000000000457d0	nop
00000000000457d4	ldarb	w8, [x8]
00000000000457d8	tbz	w8, #0x0, 0x457e0
00000000000457dc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000457e0	str	x22, [x27, #0x30]
00000000000457e4	mov	x0, x20
00000000000457e8	ldr	x8, [sp, #0x28]
00000000000457ec	blr	x8
00000000000457f0	ldr	x21, [x0]
00000000000457f4	cbz	x21, 0x45810
00000000000457f8	add	x8, x21, #0x138
00000000000457fc	mov	w9, #0x1
0000000000045800	ldaxr	w20, [x8]
0000000000045804	stlxr	w10, w9, [x8]
0000000000045808	cbnz	w10, 0x45800
000000000004580c	b	0x45814
0000000000045810	mov	w20, #0x1
0000000000045814	nop
0000000000045818	ldr	x0, #0x31468 ; Objc class ref: _OBJC_CLASS_$_NSValue
000000000004581c	bl	0x55500 ; symbol stub for: _objc_alloc
0000000000045820	nop
0000000000045824	ldr	x1, #0x310dc ; Objc selector ref: initWithBytes:objCType:
0000000000045828	adr	x3, #0x19196 ; literal pool for: "^v"
000000000004582c	nop
0000000000045830	sub	x2, x29, #0xd0
0000000000045834	bl	0x55584 ; Objc message: +[NSValue initWithBytes:objCType:]
0000000000045838	mov	x2, x0
000000000004583c	adr	x1, #0x4ea56
0000000000045840	nop
0000000000045844	ldr	x0, [sp, #0x60]
0000000000045848	mov	x3, #0x0
000000000004584c	bl	0x555d8 ; symbol stub for: _objc_setAssociatedObject
0000000000045850	cbz	x21, 0x44220
0000000000045854	add	x0, x21, #0x138
0000000000045858	ldaxr	w8, [x0]
000000000004585c	stlxr	w9, w20, [x0]
0000000000045860	cbnz	w9, 0x45858
0000000000045864	cbnz	w20, 0x44220
0000000000045868	cmp	w8, #0x1
000000000004586c	b.ne	0x44220
0000000000045870	adr	x8, #0x4ea19
0000000000045874	nop
0000000000045878	ldarb	w8, [x8]
000000000004587c	tbz	w8, #0x0, 0x44220
0000000000045880	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045884	b	0x44220
0000000000045888	ldr	x24, [sp, #0xb0]
000000000004588c	movi.16b	v0, #0x0
0000000000045890	stp	q0, q0, [x27, #0x70]
0000000000045894	mov	w25, #0x1
0000000000045898	cmp	x24, x28
000000000004589c	b.eq	0x45b94
00000000000458a0	mov	x8, x24
00000000000458a4	b	0x458b4
00000000000458a8	mov	x8, x10
00000000000458ac	cmp	x8, x28
00000000000458b0	b.eq	0x45b90
00000000000458b4	ldurb	w9, [x29, #-0x90]
00000000000458b8	cbnz	w9, 0x45908
00000000000458bc	sturb	w25, [x29, #-0x90]
00000000000458c0	ldr	x9, [x8, #0x8]
00000000000458c4	cbz	x9, 0x458d8
00000000000458c8	mov	x8, x9
00000000000458cc	ldr	x9, [x9]
00000000000458d0	cbnz	x9, 0x458c8
00000000000458d4	b	0x458ac
00000000000458d8	mov	x9, x8
00000000000458dc	ldr	x10, [x9, #0x10]!
00000000000458e0	ldr	x11, [x10]
00000000000458e4	cmp	x11, x8
00000000000458e8	b.eq	0x458a8
00000000000458ec	ldr	x10, [x9]
00000000000458f0	mov	x9, x10
00000000000458f4	ldr	x8, [x9, #0x10]!
00000000000458f8	ldr	x11, [x8]
00000000000458fc	cmp	x11, x10
0000000000045900	b.ne	0x458ec
0000000000045904	b	0x458ac
0000000000045908	movi.16b	v0, #0x0
000000000004590c	stp	q0, q0, [x27, #0x70]
0000000000045910	mov	w25, #0x1
0000000000045914	cmp	x24, x28
0000000000045918	b.eq	0x45b94
000000000004591c	sub	x8, x29, #0x90
0000000000045920	mov	x9, x24
0000000000045924	b	0x45934
0000000000045928	mov	x9, x11
000000000004592c	cmp	x9, x28
0000000000045930	b.eq	0x45a30
0000000000045934	ldr	w10, [x9, #0x20]
0000000000045938	sub	x11, x29, #0x90
000000000004593c	bfxil	x11, x10, #0, #1
0000000000045940	ldrb	w11, [x11]
0000000000045944	cbnz	w11, 0x4599c
0000000000045948	and	x10, x10, #0x1
000000000004594c	orr	x10, x8, x10
0000000000045950	strb	w25, [x10]
0000000000045954	ldr	x10, [x9, #0x8]
0000000000045958	cbz	x10, 0x4596c
000000000004595c	mov	x9, x10
0000000000045960	ldr	x10, [x10]
0000000000045964	cbnz	x10, 0x4595c
0000000000045968	b	0x4592c
000000000004596c	mov	x10, x9
0000000000045970	ldr	x11, [x10, #0x10]!
0000000000045974	ldr	x12, [x11]
0000000000045978	cmp	x12, x9
000000000004597c	b.eq	0x45928
0000000000045980	ldr	x11, [x10]
0000000000045984	mov	x10, x11
0000000000045988	ldr	x9, [x10, #0x10]!
000000000004598c	ldr	x12, [x9]
0000000000045990	cmp	x12, x11
0000000000045994	b.ne	0x45980
0000000000045998	b	0x4592c
000000000004599c	movi.16b	v0, #0x0
00000000000459a0	stp	q0, q0, [x27, #0x70]
00000000000459a4	mov	w25, #0x1
00000000000459a8	cmp	x24, x28
00000000000459ac	b.eq	0x45b94
00000000000459b0	sub	x8, x29, #0x90
00000000000459b4	mov	x9, x24
00000000000459b8	b	0x459c8
00000000000459bc	mov	x9, x11
00000000000459c0	cmp	x9, x28
00000000000459c4	b.eq	0x45ad0
00000000000459c8	ldr	w10, [x9, #0x20]
00000000000459cc	sub	x11, x29, #0x90
00000000000459d0	bfxil	x11, x10, #0, #2
00000000000459d4	ldrb	w11, [x11]
00000000000459d8	cbnz	w11, 0x45a38
00000000000459dc	and	x10, x10, #0x3
00000000000459e0	orr	x10, x8, x10
00000000000459e4	strb	w25, [x10]
00000000000459e8	ldr	x10, [x9, #0x8]
00000000000459ec	cbz	x10, 0x45a00
00000000000459f0	mov	x9, x10
00000000000459f4	ldr	x10, [x10]
00000000000459f8	cbnz	x10, 0x459f0
00000000000459fc	b	0x459c0
0000000000045a00	mov	x10, x9
0000000000045a04	ldr	x11, [x10, #0x10]!
0000000000045a08	ldr	x12, [x11]
0000000000045a0c	cmp	x12, x9
0000000000045a10	b.eq	0x459bc
0000000000045a14	ldr	x11, [x10]
0000000000045a18	mov	x10, x11
0000000000045a1c	ldr	x9, [x10, #0x10]!
0000000000045a20	ldr	x12, [x9]
0000000000045a24	cmp	x12, x11
0000000000045a28	b.ne	0x45a14
0000000000045a2c	b	0x459c0
0000000000045a30	mov	w25, #0x2
0000000000045a34	b	0x45b94
0000000000045a38	movi.16b	v0, #0x0
0000000000045a3c	stp	q0, q0, [x27, #0x70]
0000000000045a40	mov	w8, #0x1
0000000000045a44	cmp	x24, x28
0000000000045a48	b.eq	0x45b90
0000000000045a4c	sub	x9, x29, #0x90
0000000000045a50	mov	x10, x24
0000000000045a54	b	0x45a68
0000000000045a58	mov	x10, x12
0000000000045a5c	mov	w25, #0x8
0000000000045a60	cmp	x10, x28
0000000000045a64	b.eq	0x45b94
0000000000045a68	ldr	w11, [x10, #0x20]
0000000000045a6c	sub	x12, x29, #0x90
0000000000045a70	bfxil	x12, x11, #0, #3
0000000000045a74	ldrb	w12, [x12]
0000000000045a78	cbnz	w12, 0x45ad8
0000000000045a7c	and	x11, x11, #0x7
0000000000045a80	orr	x11, x9, x11
0000000000045a84	strb	w8, [x11]
0000000000045a88	ldr	x11, [x10, #0x8]
0000000000045a8c	cbz	x11, 0x45aa0
0000000000045a90	mov	x10, x11
0000000000045a94	ldr	x11, [x11]
0000000000045a98	cbnz	x11, 0x45a90
0000000000045a9c	b	0x45a5c
0000000000045aa0	mov	x11, x10
0000000000045aa4	ldr	x12, [x11, #0x10]!
0000000000045aa8	ldr	x13, [x12]
0000000000045aac	cmp	x13, x10
0000000000045ab0	b.eq	0x45a58
0000000000045ab4	ldr	x12, [x11]
0000000000045ab8	mov	x11, x12
0000000000045abc	ldr	x10, [x11, #0x10]!
0000000000045ac0	ldr	x13, [x10]
0000000000045ac4	cmp	x13, x12
0000000000045ac8	b.ne	0x45ab4
0000000000045acc	b	0x45a5c
0000000000045ad0	mov	w25, #0x4
0000000000045ad4	b	0x45b94
0000000000045ad8	movi.16b	v0, #0x0
0000000000045adc	stp	q0, q0, [x27, #0x70]
0000000000045ae0	mov	w8, #0x1
0000000000045ae4	cmp	x24, x28
0000000000045ae8	b.eq	0x45b90
0000000000045aec	sub	x9, x29, #0x90
0000000000045af0	mov	x10, x24
0000000000045af4	b	0x45b08
0000000000045af8	mov	x10, x12
0000000000045afc	mov	w25, #0x10
0000000000045b00	cmp	x10, x28
0000000000045b04	b.eq	0x45b94
0000000000045b08	ldr	w11, [x10, #0x20]
0000000000045b0c	sub	x12, x29, #0x90
0000000000045b10	bfxil	x12, x11, #0, #4
0000000000045b14	ldrb	w12, [x12]
0000000000045b18	cbnz	w12, 0x45b70
0000000000045b1c	and	x11, x11, #0xf
0000000000045b20	orr	x11, x9, x11
0000000000045b24	strb	w8, [x11]
0000000000045b28	ldr	x11, [x10, #0x8]
0000000000045b2c	cbz	x11, 0x45b40
0000000000045b30	mov	x10, x11
0000000000045b34	ldr	x11, [x11]
0000000000045b38	cbnz	x11, 0x45b30
0000000000045b3c	b	0x45afc
0000000000045b40	mov	x11, x10
0000000000045b44	ldr	x12, [x11, #0x10]!
0000000000045b48	ldr	x13, [x12]
0000000000045b4c	cmp	x13, x10
0000000000045b50	b.eq	0x45af8
0000000000045b54	ldr	x12, [x11]
0000000000045b58	mov	x11, x12
0000000000045b5c	ldr	x10, [x11, #0x10]!
0000000000045b60	ldr	x13, [x10]
0000000000045b64	cmp	x13, x12
0000000000045b68	b.ne	0x45b54
0000000000045b6c	b	0x45afc
0000000000045b70	movi.16b	v0, #0x0
0000000000045b74	stp	q0, q0, [x27, #0x70]
0000000000045b78	mov	w8, #0x1
0000000000045b7c	cmp	x24, x28
0000000000045b80	b.eq	0x45b90
0000000000045b84	sub	x9, x29, #0x90
0000000000045b88	mov	x10, x24
0000000000045b8c	b	0x45c34
0000000000045b90	mov	w25, #0x1
0000000000045b94	ldr	w19, [sp, #0xc0]
0000000000045b98	mov	w20, #0x1
0000000000045b9c	sxtw	x0, w25
0000000000045ba0	mov	w1, #0x10
0000000000045ba4	bl	0x553d4 ; symbol stub for: _calloc
0000000000045ba8	mov	x21, x0
0000000000045bac	str	x0, [x22, #0x40]
0000000000045bb0	tbz	w20, #0x0, 0x45cb4
0000000000045bb4	sub	w8, w25, #0x1
0000000000045bb8	str	w8, [x22, #0x3c]
0000000000045bbc	b	0x45bc4
0000000000045bc0	mov	x24, x10
0000000000045bc4	cmp	x24, x28
0000000000045bc8	b.eq	0x45d30
0000000000045bcc	ldr	w9, [x24, #0x20]
0000000000045bd0	and	w10, w9, w8
0000000000045bd4	sbfiz	x10, x10, #4, #32
0000000000045bd8	str	w9, [x21, x10]
0000000000045bdc	ldr	x9, [x24, #0x8]
0000000000045be0	cbz	x9, 0x45bf4
0000000000045be4	mov	x24, x9
0000000000045be8	ldr	x9, [x9]
0000000000045bec	cbnz	x9, 0x45be4
0000000000045bf0	b	0x45bc4
0000000000045bf4	mov	x9, x24
0000000000045bf8	ldr	x10, [x9, #0x10]!
0000000000045bfc	ldr	x11, [x10]
0000000000045c00	cmp	x11, x24
0000000000045c04	b.eq	0x45bc0
0000000000045c08	ldr	x10, [x9]
0000000000045c0c	mov	x9, x10
0000000000045c10	ldr	x24, [x9, #0x10]!
0000000000045c14	ldr	x11, [x24]
0000000000045c18	cmp	x11, x10
0000000000045c1c	b.ne	0x45c08
0000000000045c20	b	0x45bc4
0000000000045c24	mov	x10, x12
0000000000045c28	mov	w25, #0x20
0000000000045c2c	cmp	x10, x28
0000000000045c30	b.eq	0x45b94
0000000000045c34	ldr	w11, [x10, #0x20]
0000000000045c38	and	x11, x11, #0x1f
0000000000045c3c	ldrb	w12, [x9, x11]
0000000000045c40	cbnz	w12, 0x45c90
0000000000045c44	strb	w8, [x9, x11]
0000000000045c48	ldr	x11, [x10, #0x8]
0000000000045c4c	cbz	x11, 0x45c60
0000000000045c50	mov	x10, x11
0000000000045c54	ldr	x11, [x11]
0000000000045c58	cbnz	x11, 0x45c50
0000000000045c5c	b	0x45c28
0000000000045c60	mov	x11, x10
0000000000045c64	ldr	x12, [x11, #0x10]!
0000000000045c68	ldr	x13, [x12]
0000000000045c6c	cmp	x13, x10
0000000000045c70	b.eq	0x45c24
0000000000045c74	ldr	x12, [x11]
0000000000045c78	mov	x11, x12
0000000000045c7c	ldr	x10, [x11, #0x10]!
0000000000045c80	ldr	x13, [x10]
0000000000045c84	cmp	x13, x12
0000000000045c88	b.ne	0x45c74
0000000000045c8c	b	0x45c28
0000000000045c90	mov	w20, #0x0
0000000000045c94	ldr	w19, [sp, #0xc0]
0000000000045c98	mov	x25, x19
0000000000045c9c	sxtw	x0, w25
0000000000045ca0	mov	w1, #0x10
0000000000045ca4	bl	0x553d4 ; symbol stub for: _calloc
0000000000045ca8	mov	x21, x0
0000000000045cac	str	x0, [x22, #0x40]
0000000000045cb0	tbnz	w20, #0x0, 0x45bb4
0000000000045cb4	neg	w8, w19
0000000000045cb8	str	w8, [x22, #0x3c]
0000000000045cbc	cmp	x24, x28
0000000000045cc0	b.eq	0x45d30
0000000000045cc4	mov	x8, #0x0
0000000000045cc8	b	0x45cdc
0000000000045ccc	mov	x24, x10
0000000000045cd0	add	x8, x8, #0x1
0000000000045cd4	cmp	x24, x28
0000000000045cd8	b.eq	0x45d30
0000000000045cdc	ldr	w9, [x24, #0x20]
0000000000045ce0	lsl	x10, x8, #4
0000000000045ce4	str	w9, [x21, x10]
0000000000045ce8	ldr	x9, [x24, #0x8]
0000000000045cec	cbz	x9, 0x45d00
0000000000045cf0	mov	x24, x9
0000000000045cf4	ldr	x9, [x9]
0000000000045cf8	cbnz	x9, 0x45cf0
0000000000045cfc	b	0x45cd0
0000000000045d00	mov	x9, x24
0000000000045d04	ldr	x10, [x9, #0x10]!
0000000000045d08	ldr	x11, [x10]
0000000000045d0c	cmp	x11, x24
0000000000045d10	b.eq	0x45ccc
0000000000045d14	ldr	x10, [x9]
0000000000045d18	mov	x9, x10
0000000000045d1c	ldr	x24, [x9, #0x10]!
0000000000045d20	ldr	x11, [x24]
0000000000045d24	cmp	x11, x10
0000000000045d28	b.ne	0x45d14
0000000000045d2c	b	0x45cd0
0000000000045d30	cmp	w25, #0x1
0000000000045d34	b.lt	0x454cc
0000000000045d38	mov	x20, #0x0
0000000000045d3c	mov	w23, w25
0000000000045d40	ldr	x24, [sp, #0xb8]
0000000000045d44	b	0x45d64
0000000000045d48	mov	x0, #0x0
0000000000045d4c	add	x8, x21, x20, lsl #4
0000000000045d50	str	x0, [x8, #0x8]
0000000000045d54	str	w25, [x8, #0x4]
0000000000045d58	add	x20, x20, #0x1
0000000000045d5c	cmp	x20, x23
0000000000045d60	b.eq	0x454cc
0000000000045d64	lsl	x8, x20, #4
0000000000045d68	ldr	w8, [x21, x8]
0000000000045d6c	cbz	w8, 0x45d58
0000000000045d70	cbz	x24, 0x45db8
0000000000045d74	mov	x19, x28
0000000000045d78	mov	x12, x24
0000000000045d7c	mov	x9, x12
0000000000045d80	mov	x10, x19
0000000000045d84	ldr	w11, [x12, #0x20]
0000000000045d88	cmp	w11, w8
0000000000045d8c	cset	w12, lt
0000000000045d90	csel	x19, x19, x9, lt
0000000000045d94	ldr	x12, [x9, w12, uxtw #3]
0000000000045d98	cbnz	x12, 0x45d7c
0000000000045d9c	cmp	x19, x28
0000000000045da0	b.eq	0x45db8
0000000000045da4	cmp	w11, w8
0000000000045da8	csel	x9, x10, x9, lt
0000000000045dac	ldr	w9, [x9, #0x20]
0000000000045db0	cmp	w8, w9
0000000000045db4	b.ge	0x45dbc
0000000000045db8	mov	x19, x28
0000000000045dbc	ldp	x9, x8, [x19, #0x28]
0000000000045dc0	sub	x26, x8, x9
0000000000045dc4	lsr	x25, x26, #3
0000000000045dc8	cbz	w25, 0x45d48
0000000000045dcc	sbfx	x0, x26, #3, #32
0000000000045dd0	mov	w1, #0x8
0000000000045dd4	bl	0x553d4 ; symbol stub for: _calloc
0000000000045dd8	cmp	w25, #0x1
0000000000045ddc	b.lt	0x45d4c
0000000000045de0	mov	x8, #0x0
0000000000045de4	ubfx	x9, x26, #3, #32
0000000000045de8	lsl	x9, x9, #3
0000000000045dec	ldr	x10, [x19, #0x28]
0000000000045df0	ldr	x10, [x10, x8]
0000000000045df4	str	x10, [x0, x8]
0000000000045df8	add	x8, x8, #0x8
0000000000045dfc	cmp	x9, x8
0000000000045e00	b.ne	0x45dec
0000000000045e04	b	0x45d4c
0000000000045e08	add	x0, sp, #0x80
0000000000045e0c	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000045e10	b	0x45e68
0000000000045e14	add	x20, sp, #0xe0
0000000000045e18	sub	x0, x29, #0xd0
0000000000045e1c	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000045e20	b	0x45e68
0000000000045e24	add	x20, sp, #0xe0
0000000000045e28	sub	x0, x29, #0xa8
0000000000045e2c	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000045e30	b	0x45e68
0000000000045e34	add	x20, sp, #0xe0
0000000000045e38	add	x0, sp, #0x98
0000000000045e3c	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000045e40	b	0x45e68
0000000000045e44	add	x0, sp, #0xc8
0000000000045e48	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000045e4c	b	0x45e68
0000000000045e50	add	x0, sp, #0x80
0000000000045e54	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000045e58	b	0x45e68
0000000000045e5c	add	x20, sp, #0xe0
0000000000045e60	sub	x0, x29, #0xa8
0000000000045e64	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000045e68	brk	#0x1
0000000000045e6c	mov	x19, x0
0000000000045e70	b	0x4601c
0000000000045e74	b	0x4603c
0000000000045e78	b	0x45f8c
0000000000045e7c	mov	x19, x0
0000000000045e80	b	0x46074
0000000000045e84	b	0x4603c
0000000000045e88	b	0x45f8c
0000000000045e8c	mov	x19, x0
0000000000045e90	b	0x46084
0000000000045e94	mov	x19, x0
0000000000045e98	ldr	x0, [x20, #0x70]
0000000000045e9c	cbz	x0, 0x45eb8
0000000000045ea0	b	0x45f9c
0000000000045ea4	add	x20, sp, #0xe0
0000000000045ea8	mov	x19, x0
0000000000045eac	cbnz	x23, 0x45ee4
0000000000045eb0	ldr	x0, [x20, #0x70]
0000000000045eb4	cbnz	x0, 0x45f9c
0000000000045eb8	ldr	x0, [x20, #0x40]
0000000000045ebc	cbz	x0, 0x45ed0
0000000000045ec0	ldr	x20, [x0]
0000000000045ec4	bl	0x55458 ; symbol stub for: _free
0000000000045ec8	mov	x0, x20
0000000000045ecc	cbnz	x20, 0x45ec0
0000000000045ed0	add	x8, sp, #0xe0
0000000000045ed4	ldr	x0, [x8, #0x30]
0000000000045ed8	str	xzr, [x8, #0x30]
0000000000045edc	cbnz	x0, 0x46058
0000000000045ee0	b	0x4605c
0000000000045ee4	mov	x0, x23
0000000000045ee8	bl	0x55458 ; symbol stub for: _free
0000000000045eec	ldr	x0, [x20, #0x70]
0000000000045ef0	cbz	x0, 0x45eb8
0000000000045ef4	b	0x45f9c
0000000000045ef8	mov	x19, x0
0000000000045efc	cbz	x21, 0x460b4
0000000000045f00	add	x0, x21, #0x138
0000000000045f04	ldaxr	w8, [x0]
0000000000045f08	stlxr	w9, w20, [x0]
0000000000045f0c	cbnz	w9, 0x45f04
0000000000045f10	cbnz	w20, 0x460b4
0000000000045f14	cmp	w8, #0x1
0000000000045f18	b.ne	0x460b4
0000000000045f1c	adr	x8, #0x4e36d
0000000000045f20	nop
0000000000045f24	ldarb	w8, [x8]
0000000000045f28	tbnz	w8, #0x0, 0x460f8
0000000000045f2c	b	0x460b4
0000000000045f30	mov	x19, x0
0000000000045f34	cbz	x23, 0x46084
0000000000045f38	mov	x0, x23
0000000000045f3c	b	0x46080
0000000000045f40	b	0x45fc8
0000000000045f44	mov	x19, x0
0000000000045f48	ldr	x0, [x20, #0x30]
0000000000045f4c	cbz	x0, 0x4606c
0000000000045f50	str	x0, [x20, #0x38]
0000000000045f54	b	0x46068
0000000000045f58	mov	x19, x0
0000000000045f5c	adr	x8, #0x4e337
0000000000045f60	nop
0000000000045f64	stlrb	wzr, [x8]
0000000000045f68	mov	x0, x19
0000000000045f6c	bl	0x55194 ; symbol stub for: __Unwind_Resume
0000000000045f70	b	0x45f8c
0000000000045f74	b	0x4603c
0000000000045f78	add	x20, sp, #0xe0
0000000000045f7c	mov	x19, x0
0000000000045f80	ldr	x0, [x20, #0x70]
0000000000045f84	cbz	x0, 0x45eb8
0000000000045f88	b	0x45f9c
0000000000045f8c	add	x20, sp, #0xe0
0000000000045f90	mov	x19, x0
0000000000045f94	ldr	x0, [x20, #0x70]
0000000000045f98	cbz	x0, 0x45eb8
0000000000045f9c	str	x0, [x20, #0x78]
0000000000045fa0	bl	0x55458 ; symbol stub for: _free
0000000000045fa4	ldr	x0, [x20, #0x40]
0000000000045fa8	cbnz	x0, 0x45ec0
0000000000045fac	b	0x45ed0
0000000000045fb0	mov	x19, x0
0000000000045fb4	ldr	w8, [sp, #0x58]
0000000000045fb8	strb	w8, [sp, #0x7f]
0000000000045fbc	b	0x4604c
0000000000045fc0	b	0x4603c
0000000000045fc4	add	x20, sp, #0xe0
0000000000045fc8	mov	x19, x0
0000000000045fcc	ldr	x0, [x20, #0x40]
0000000000045fd0	cbz	x0, 0x46004
0000000000045fd4	ldr	x20, [x0]
0000000000045fd8	bl	0x55458 ; symbol stub for: _free
0000000000045fdc	mov	x0, x20
0000000000045fe0	cbnz	x20, 0x45fd4
0000000000045fe4	b	0x46004
0000000000045fe8	mov	x19, x0
0000000000045fec	ldr	x0, [x27, #0x40]
0000000000045ff0	cbz	x0, 0x46004
0000000000045ff4	ldr	x20, [x0]
0000000000045ff8	bl	0x55458 ; symbol stub for: _free
0000000000045ffc	mov	x0, x20
0000000000046000	cbnz	x20, 0x45ff4
0000000000046004	add	x8, sp, #0xe0
0000000000046008	ldr	x0, [x8, #0x30]
000000000004600c	add	x20, sp, #0xe0
0000000000046010	str	xzr, [x8, #0x30]
0000000000046014	cbz	x0, 0x4601c
0000000000046018	bl	0x55458 ; symbol stub for: _free
000000000004601c	ldr	x0, [x20, #0x58]
0000000000046020	cbz	x0, 0x4604c
0000000000046024	str	x0, [x20, #0x60]
0000000000046028	bl	0x55458 ; symbol stub for: _free
000000000004602c	b	0x4604c
0000000000046030	mov	x19, x0
0000000000046034	b	0x46084
0000000000046038	b	0x4603c
000000000004603c	mov	x19, x0
0000000000046040	b	0x4604c
0000000000046044	mov	x19, x0
0000000000046048	strb	w27, [sp, #0x7f]
000000000004604c	ldr	x0, [sp, #0x80]
0000000000046050	cbz	x0, 0x4605c
0000000000046054	str	x0, [sp, #0x88]
0000000000046058	bl	0x55458 ; symbol stub for: _free
000000000004605c	ldr	x0, [sp, #0x98]
0000000000046060	cbz	x0, 0x4606c
0000000000046064	str	x0, [sp, #0xa0]
0000000000046068	bl	0x55458 ; symbol stub for: _free
000000000004606c	ldr	x0, [sp, #0xb8]
0000000000046070	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
0000000000046074	ldr	x0, [sp, #0xc8]
0000000000046078	cbz	x0, 0x46084
000000000004607c	str	x0, [sp, #0xd0]
0000000000046080	bl	0x55458 ; symbol stub for: _free
0000000000046084	ldr	x0, [sp, #0xf0]
0000000000046088	cbz	x0, 0x4609c
000000000004608c	ldr	x20, [x0]
0000000000046090	bl	0x55458 ; symbol stub for: _free
0000000000046094	mov	x0, x20
0000000000046098	cbnz	x20, 0x4608c
000000000004609c	ldr	x0, [sp, #0xe0]
00000000000460a0	str	xzr, [sp, #0xe0]
00000000000460a4	cbz	x0, 0x460ac
00000000000460a8	bl	0x55458 ; symbol stub for: _free
00000000000460ac	ldr	x8, [sp, #0x30]
00000000000460b0	cbnz	x8, 0x460c8
00000000000460b4	adr	x8, #0x4e1df
00000000000460b8	nop
00000000000460bc	stlrb	wzr, [x8]
00000000000460c0	mov	x0, x19
00000000000460c4	bl	0x55194 ; symbol stub for: __Unwind_Resume
00000000000460c8	add	x0, x8, #0x138
00000000000460cc	ldr	x10, [sp, #0x20]
00000000000460d0	ldaxr	w8, [x0]
00000000000460d4	stlxr	w9, w10, [x0]
00000000000460d8	cbnz	w9, 0x460d0
00000000000460dc	cbnz	w10, 0x460b4
00000000000460e0	cmp	w8, #0x1
00000000000460e4	b.ne	0x460b4
00000000000460e8	adr	x8, #0x4e1a1
00000000000460ec	nop
00000000000460f0	ldarb	w8, [x8]
00000000000460f4	tbz	w8, #0x0, 0x460b4
00000000000460f8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000460fc	adr	x8, #0x4e197
0000000000046100	nop
0000000000046104	stlrb	wzr, [x8]
0000000000046108	mov	x0, x19
000000000004610c	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZN6kotlin8SpinLockILNS_24MutexThreadStateHandlingE1EE4lockEv:
0000000000046110	stp	x22, x21, [sp, #-0x30]!
0000000000046114	stp	x20, x19, [sp, #0x10]
0000000000046118	stp	x29, x30, [sp, #0x20]
000000000004611c	add	x29, sp, #0x20
0000000000046120	mov	x19, x0
0000000000046124	mov	w8, #0x1
0000000000046128	ldaxrb	w9, [x19]
000000000004612c	stxrb	w10, w8, [x19]
0000000000046130	cbnz	w10, 0x46128
0000000000046134	tbz	w9, #0x0, 0x461b8
0000000000046138	adrp	x0, 52 ; 0x7a000
000000000004613c	add	x0, x0, #0x2c0
0000000000046140	ldr	x8, [x0]
0000000000046144	blr	x8
0000000000046148	ldr	x20, [x0]
000000000004614c	cbz	x20, 0x46168
0000000000046150	add	x8, x20, #0x138
0000000000046154	mov	w9, #0x1
0000000000046158	ldaxr	w21, [x8]
000000000004615c	stlxr	w10, w9, [x8]
0000000000046160	cbnz	w10, 0x46158
0000000000046164	b	0x4616c
0000000000046168	mov	w21, #0x1
000000000004616c	mov	w22, #0x1
0000000000046170	ldaxrb	w8, [x19]
0000000000046174	stxrb	w9, w22, [x19]
0000000000046178	cbnz	w9, 0x46170
000000000004617c	tbz	w8, #0x0, 0x46188
0000000000046180	bl	0x556f8 ; symbol stub for: _sched_yield
0000000000046184	b	0x46170
0000000000046188	cbz	x20, 0x461b8
000000000004618c	add	x0, x20, #0x138
0000000000046190	ldaxr	w8, [x0]
0000000000046194	stlxr	w9, w21, [x0]
0000000000046198	cbnz	w9, 0x46190
000000000004619c	cbnz	w21, 0x461b8
00000000000461a0	cmp	w8, #0x1
00000000000461a4	b.ne	0x461b8
00000000000461a8	adr	x8, #0x4e0e1
00000000000461ac	nop
00000000000461b0	ldarb	w8, [x8]
00000000000461b4	tbnz	w8, #0x0, 0x461c8
00000000000461b8	ldp	x29, x30, [sp, #0x20]
00000000000461bc	ldp	x20, x19, [sp, #0x10]
00000000000461c0	ldp	x22, x21, [sp], #0x30
00000000000461c4	ret
00000000000461c8	ldp	x29, x30, [sp, #0x20]
00000000000461cc	ldp	x20, x19, [sp, #0x10]
00000000000461d0	ldp	x22, x21, [sp], #0x30
00000000000461d4	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000461d8	bl	___clang_call_terminate
__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_:
00000000000461dc	cmp	x1, x0
00000000000461e0	cset	w8, eq
00000000000461e4	strb	w8, [x1, #0x18]
00000000000461e8	b.eq	0x46378
00000000000461ec	mov	w10, #0x1
00000000000461f0	b	0x46210
00000000000461f4	strb	w10, [x9, #0x18]
00000000000461f8	mov	x1, x8
00000000000461fc	cmp	x8, x0
0000000000046200	cset	w9, eq
0000000000046204	strb	w9, [x8, #0x18]
0000000000046208	strb	w10, [x11]
000000000004620c	b.eq	0x46378
0000000000046210	ldr	x9, [x1, #0x10]
0000000000046214	ldrb	w8, [x9, #0x18]
0000000000046218	cbnz	w8, 0x46378
000000000004621c	ldr	x8, [x9, #0x10]
0000000000046220	ldr	x11, [x8]
0000000000046224	cmp	x11, x9
0000000000046228	b.eq	0x4623c
000000000004622c	cbz	x11, 0x46298
0000000000046230	ldrb	w12, [x11, #0x18]!
0000000000046234	cbz	w12, 0x461f4
0000000000046238	b	0x46298
000000000004623c	ldr	x11, [x8, #0x8]
0000000000046240	cbz	x11, 0x4624c
0000000000046244	ldrb	w12, [x11, #0x18]!
0000000000046248	cbz	w12, 0x461f4
000000000004624c	ldr	x10, [x9]
0000000000046250	cmp	x10, x1
0000000000046254	b.eq	0x4632c
0000000000046258	ldr	x10, [x9, #0x8]
000000000004625c	ldr	x11, [x10]
0000000000046260	str	x11, [x9, #0x8]
0000000000046264	cbz	x11, 0x46270
0000000000046268	str	x9, [x11, #0x10]
000000000004626c	ldr	x8, [x9, #0x10]
0000000000046270	str	x8, [x10, #0x10]
0000000000046274	ldr	x8, [x9, #0x10]
0000000000046278	ldr	x11, [x8]
000000000004627c	cmp	x11, x9
0000000000046280	cset	w11, ne
0000000000046284	str	x10, [x8, w11, uxtw #3]
0000000000046288	str	x9, [x10]
000000000004628c	str	x10, [x9, #0x10]
0000000000046290	ldr	x8, [x10, #0x10]
0000000000046294	b	0x46330
0000000000046298	ldr	x10, [x9]
000000000004629c	cmp	x10, x1
00000000000462a0	b.eq	0x462ac
00000000000462a4	mov	x1, x9
00000000000462a8	b	0x462e4
00000000000462ac	ldr	x10, [x1, #0x8]
00000000000462b0	str	x10, [x9]
00000000000462b4	cbz	x10, 0x462c0
00000000000462b8	str	x9, [x10, #0x10]
00000000000462bc	ldr	x8, [x9, #0x10]
00000000000462c0	str	x8, [x1, #0x10]
00000000000462c4	ldr	x8, [x9, #0x10]
00000000000462c8	ldr	x10, [x8]
00000000000462cc	cmp	x10, x9
00000000000462d0	cset	w10, ne
00000000000462d4	str	x1, [x8, w10, uxtw #3]
00000000000462d8	str	x9, [x1, #0x8]
00000000000462dc	str	x1, [x9, #0x10]
00000000000462e0	ldr	x8, [x1, #0x10]
00000000000462e4	mov	w9, #0x1
00000000000462e8	strb	w9, [x1, #0x18]
00000000000462ec	strb	wzr, [x8, #0x18]
00000000000462f0	ldr	x9, [x8, #0x8]
00000000000462f4	ldr	x10, [x9]
00000000000462f8	str	x10, [x8, #0x8]
00000000000462fc	cbz	x10, 0x46304
0000000000046300	str	x8, [x10, #0x10]
0000000000046304	mov	x10, x8
0000000000046308	ldr	x11, [x10, #0x10]!
000000000004630c	str	x11, [x9, #0x10]
0000000000046310	ldr	x11, [x10]
0000000000046314	ldr	x12, [x11]
0000000000046318	cmp	x12, x8
000000000004631c	cset	w12, ne
0000000000046320	str	x9, [x11, w12, uxtw #3]
0000000000046324	str	x8, [x9]
0000000000046328	b	0x46374
000000000004632c	mov	x10, x9
0000000000046330	mov	w9, #0x1
0000000000046334	strb	w9, [x10, #0x18]
0000000000046338	strb	wzr, [x8, #0x18]
000000000004633c	ldr	x9, [x8]
0000000000046340	ldr	x10, [x9, #0x8]
0000000000046344	str	x10, [x8]
0000000000046348	cbz	x10, 0x46350
000000000004634c	str	x8, [x10, #0x10]
0000000000046350	mov	x10, x8
0000000000046354	ldr	x11, [x10, #0x10]!
0000000000046358	str	x11, [x9, #0x10]
000000000004635c	ldr	x11, [x10]
0000000000046360	ldr	x12, [x11]
0000000000046364	cmp	x12, x8
0000000000046368	cset	w12, ne
000000000004636c	str	x9, [x11, w12, uxtw #3]
0000000000046370	str	x8, [x9, #0x8]
0000000000046374	str	x9, [x10]
0000000000046378	ret
__ZNSt3__16vectorIP8ProtocolN6kotlin11std_support9allocatorIS2_EEE6insertIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueENS_11__wrap_iterIS9_EEE4typeENSF_IPKS2_EESB_SB_:
000000000004637c	stp	x28, x27, [sp, #-0x60]!
0000000000046380	stp	x26, x25, [sp, #0x10]
0000000000046384	stp	x24, x23, [sp, #0x20]
0000000000046388	stp	x22, x21, [sp, #0x30]
000000000004638c	stp	x20, x19, [sp, #0x40]
0000000000046390	stp	x29, x30, [sp, #0x50]
0000000000046394	add	x29, sp, #0x50
0000000000046398	sub	x28, x3, x2
000000000004639c	cmp	x28, #0x1
00000000000463a0	b.lt	0x46688
00000000000463a4	mov	x21, x2
00000000000463a8	mov	x19, x1
00000000000463ac	mov	x20, x0
00000000000463b0	ldp	x26, x23, [x0]
00000000000463b4	sub	x8, x1, x26
00000000000463b8	asr	x25, x8, #3
00000000000463bc	asr	x27, x28, #3
00000000000463c0	ldr	x8, [x0, #0x10]
00000000000463c4	sub	x9, x8, x23
00000000000463c8	cmp	x27, x9, asr #3
00000000000463cc	b.le	0x4642c
00000000000463d0	sub	x9, x23, x26
00000000000463d4	add	x9, x27, x9, asr #3
00000000000463d8	lsr	x10, x9, #61
00000000000463dc	cbnz	x10, 0x466a4
00000000000463e0	sub	x8, x8, x26
00000000000463e4	asr	x10, x8, #2
00000000000463e8	cmp	x10, x9
00000000000463ec	csel	x9, x9, x10, lo
00000000000463f0	mov	x10, #0xfffffffffffffff
00000000000463f4	cmp	x10, x8, asr #3
00000000000463f8	mov	x8, #0x1fffffffffffffff
00000000000463fc	csel	x22, x9, x8, hi
0000000000046400	cbz	x22, 0x46480
0000000000046404	mov	x0, x22
0000000000046408	mov	w1, #0x8
000000000004640c	bl	0x553d4 ; symbol stub for: _calloc
0000000000046410	mov	x24, x0
0000000000046414	add	x8, x24, x25, lsl #3
0000000000046418	add	x23, x8, x27, lsl #3
000000000004641c	sub	x9, x28, #0x8
0000000000046420	lsr	x9, x9, #3
0000000000046424	cbnz	x9, 0x46498
0000000000046428	b	0x464bc
000000000004642c	sub	x28, x23, x19
0000000000046430	asr	x8, x28, #3
0000000000046434	cmp	x27, x8
0000000000046438	b.le	0x46470
000000000004643c	add	x22, x21, x8, lsl #3
0000000000046440	sub	x24, x3, x22
0000000000046444	cmp	x24, #0x1
0000000000046448	b.lt	0x46580
000000000004644c	mov	x0, x23
0000000000046450	mov	x1, x22
0000000000046454	mov	x2, x24
0000000000046458	bl	0x554ac ; symbol stub for: _memcpy
000000000004645c	add	x11, x23, x24
0000000000046460	str	x11, [x20, #0x8]
0000000000046464	cmp	x28, #0x1
0000000000046468	b.ge	0x46590
000000000004646c	b	0x46688
0000000000046470	mov	x11, x23
0000000000046474	mov	x8, x23
0000000000046478	mov	x22, x3
000000000004647c	b	0x46594
0000000000046480	mov	x24, #0x0
0000000000046484	add	x8, x24, x25, lsl #3
0000000000046488	add	x23, x8, x27, lsl #3
000000000004648c	sub	x9, x28, #0x8
0000000000046490	lsr	x9, x9, #3
0000000000046494	cbz	x9, 0x464bc
0000000000046498	add	x10, x21, x9, lsl #3
000000000004649c	add	x10, x10, #0x8
00000000000464a0	cmp	x8, x10
00000000000464a4	b.hs	0x46548
00000000000464a8	add	x10, x25, x9
00000000000464ac	add	x10, x24, x10, lsl #3
00000000000464b0	add	x10, x10, #0x8
00000000000464b4	cmp	x10, x21
00000000000464b8	b.ls	0x46548
00000000000464bc	mov	x9, x8
00000000000464c0	mov	x10, x21
00000000000464c4	ldr	x11, [x10], #0x8
00000000000464c8	str	x11, [x9], #0x8
00000000000464cc	cmp	x9, x23
00000000000464d0	b.ne	0x464c4
00000000000464d4	ldr	x21, [x20]
00000000000464d8	sub	x2, x19, x21
00000000000464dc	sub	x25, x8, x2
00000000000464e0	cmp	x2, #0x1
00000000000464e4	b.lt	0x464f4
00000000000464e8	mov	x0, x25
00000000000464ec	mov	x1, x21
00000000000464f0	bl	0x554ac ; symbol stub for: _memcpy
00000000000464f4	add	x24, x24, x22, lsl #3
00000000000464f8	ldr	x8, [x20, #0x8]
00000000000464fc	sub	x22, x8, x19
0000000000046500	cmp	x22, #0x1
0000000000046504	b.lt	0x4651c
0000000000046508	mov	x0, x23
000000000004650c	mov	x1, x19
0000000000046510	mov	x2, x22
0000000000046514	bl	0x554ac ; symbol stub for: _memcpy
0000000000046518	add	x23, x23, x22
000000000004651c	stp	x25, x23, [x20]
0000000000046520	str	x24, [x20, #0x10]
0000000000046524	cbz	x21, 0x46688
0000000000046528	mov	x0, x21
000000000004652c	ldp	x29, x30, [sp, #0x50]
0000000000046530	ldp	x20, x19, [sp, #0x40]
0000000000046534	ldp	x22, x21, [sp, #0x30]
0000000000046538	ldp	x24, x23, [sp, #0x20]
000000000004653c	ldp	x26, x25, [sp, #0x10]
0000000000046540	ldp	x28, x27, [sp], #0x60
0000000000046544	b	0x55458 ; symbol stub for: _free
0000000000046548	add	x11, x9, #0x1
000000000004654c	and	x12, x11, #0x3ffffffffffffffe
0000000000046550	lsl	x10, x12, #3
0000000000046554	add	x9, x8, x10
0000000000046558	add	x10, x21, x10
000000000004655c	mov	x13, x8
0000000000046560	mov	x14, x12
0000000000046564	ldr	q0, [x21], #0x10
0000000000046568	str	q0, [x13], #0x10
000000000004656c	subs	x14, x14, #0x2
0000000000046570	b.ne	0x46564
0000000000046574	cmp	x11, x12
0000000000046578	b.ne	0x464c4
000000000004657c	b	0x464d4
0000000000046580	mov	x11, x23
0000000000046584	str	x11, [x20, #0x8]
0000000000046588	cmp	x28, #0x1
000000000004658c	b.lt	0x46688
0000000000046590	mov	x8, x11
0000000000046594	lsl	x10, x27, #3
0000000000046598	add	x9, x19, x10
000000000004659c	sub	x2, x11, x9
00000000000465a0	asr	x9, x2, #3
00000000000465a4	sub	x10, x11, x10
00000000000465a8	cmp	x10, x23
00000000000465ac	b.hs	0x46648
00000000000465b0	add	x11, x9, x25
00000000000465b4	sub	x12, x23, x11, lsl #3
00000000000465b8	mvn	x13, x26
00000000000465bc	add	x12, x12, x13
00000000000465c0	cmp	x12, #0x17
00000000000465c4	b.hi	0x465d0
00000000000465c8	mov	x11, x8
00000000000465cc	b	0x46638
00000000000465d0	lsr	x13, x12, #3
00000000000465d4	add	x12, x13, #0x1
00000000000465d8	add	x14, x8, x12, lsl #3
00000000000465dc	add	x11, x11, x13
00000000000465e0	add	x11, x26, x11, lsl #3
00000000000465e4	add	x11, x11, #0x8
00000000000465e8	cmp	x8, x11
00000000000465ec	ccmp	x10, x14, #0x2, lo
00000000000465f0	mov	x11, x8
00000000000465f4	b.lo	0x46638
00000000000465f8	and	x13, x12, #0x3ffffffffffffffc
00000000000465fc	add	x10, x10, x13, lsl #3
0000000000046600	add	x11, x8, #0x10
0000000000046604	add	x14, x9, x25
0000000000046608	add	x14, x26, x14, lsl #3
000000000004660c	add	x14, x14, #0x10
0000000000046610	mov	x15, x13
0000000000046614	ldp	q0, q1, [x14, #-0x10]
0000000000046618	stp	q0, q1, [x11, #-0x10]
000000000004661c	add	x11, x11, #0x20
0000000000046620	add	x14, x14, #0x20
0000000000046624	subs	x15, x15, #0x4
0000000000046628	b.ne	0x46614
000000000004662c	add	x11, x8, x13, lsl #3
0000000000046630	cmp	x12, x13
0000000000046634	b.eq	0x46648
0000000000046638	ldr	x12, [x10], #0x8
000000000004663c	str	x12, [x11], #0x8
0000000000046640	cmp	x10, x23
0000000000046644	b.lo	0x46638
0000000000046648	str	x11, [x20, #0x8]
000000000004664c	cbz	x2, 0x4665c
0000000000046650	sub	x0, x8, x9, lsl #3
0000000000046654	mov	x1, x19
0000000000046658	bl	0x554b8 ; symbol stub for: _memmove
000000000004665c	subs	x2, x22, x21
0000000000046660	b.eq	0x46688
0000000000046664	mov	x0, x19
0000000000046668	mov	x1, x21
000000000004666c	ldp	x29, x30, [sp, #0x50]
0000000000046670	ldp	x20, x19, [sp, #0x40]
0000000000046674	ldp	x22, x21, [sp, #0x30]
0000000000046678	ldp	x24, x23, [sp, #0x20]
000000000004667c	ldp	x26, x25, [sp, #0x10]
0000000000046680	ldp	x28, x27, [sp], #0x60
0000000000046684	b	0x554b8 ; symbol stub for: _memmove
0000000000046688	ldp	x29, x30, [sp, #0x50]
000000000004668c	ldp	x20, x19, [sp, #0x40]
0000000000046690	ldp	x22, x21, [sp, #0x30]
0000000000046694	ldp	x24, x23, [sp, #0x20]
0000000000046698	ldp	x26, x25, [sp, #0x10]
000000000004669c	ldp	x28, x27, [sp], #0x60
00000000000466a0	ret
00000000000466a4	mov	x0, x20
00000000000466a8	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ZZL14createTypeInfoP10objc_classPK8TypeInfoS3_ENK3$_1clEii:
00000000000466ac	sub	sp, sp, #0x70
00000000000466b0	stp	x26, x25, [sp, #0x20]
00000000000466b4	stp	x24, x23, [sp, #0x30]
00000000000466b8	stp	x22, x21, [sp, #0x40]
00000000000466bc	stp	x20, x19, [sp, #0x50]
00000000000466c0	stp	x29, x30, [sp, #0x60]
00000000000466c4	add	x29, sp, #0x60
00000000000466c8	mov	x20, x2
00000000000466cc	mov	x19, x0
00000000000466d0	mov	x23, x0
00000000000466d4	ldr	x24, [x23, #0x8]!
00000000000466d8	cbz	x24, 0x46710
00000000000466dc	mov	x8, x23
00000000000466e0	mov	x9, x24
00000000000466e4	ldr	w10, [x9, #0x20]
00000000000466e8	cmp	w10, w20
00000000000466ec	cset	w10, lt
00000000000466f0	csel	x8, x8, x9, lt
00000000000466f4	ldr	x9, [x9, w10, uxtw #3]
00000000000466f8	cbnz	x9, 0x466e4
00000000000466fc	cmp	x8, x23
0000000000046700	b.eq	0x46710
0000000000046704	ldr	w8, [x8, #0x20]
0000000000046708	cmp	w8, w20
000000000004670c	b.le	0x46838
0000000000046710	strb	wzr, [x1]
0000000000046714	stp	xzr, xzr, [sp, #0x8]
0000000000046718	str	xzr, [sp, #0x18]
000000000004671c	cbz	w3, 0x4679c
0000000000046720	tbnz	w3, #0x1f, 0x46854
0000000000046724	sxtw	x22, w3
0000000000046728	mov	x0, x22
000000000004672c	mov	w1, #0x8
0000000000046730	bl	0x553d4 ; symbol stub for: _calloc
0000000000046734	mov	x21, x0
0000000000046738	lsl	x1, x22, #3
000000000004673c	add	x22, x0, x1
0000000000046740	str	x0, [sp, #0x8]
0000000000046744	str	x22, [sp, #0x18]
0000000000046748	bl	0x553c8 ; symbol stub for: _bzero
000000000004674c	str	x22, [sp, #0x10]
0000000000046750	cbz	x24, 0x467a8
0000000000046754	add	x25, x19, #0x8
0000000000046758	b	0x46760
000000000004675c	mov	x24, x8
0000000000046760	ldr	w8, [x24, #0x20]
0000000000046764	cmp	w8, w20
0000000000046768	b.le	0x4677c
000000000004676c	ldr	x8, [x24]
0000000000046770	cbz	x8, 0x467b8
0000000000046774	mov	x25, x24
0000000000046778	b	0x4675c
000000000004677c	b.ge	0x4678c
0000000000046780	mov	x25, x24
0000000000046784	ldr	x8, [x25, #0x8]!
0000000000046788	cbnz	x8, 0x4675c
000000000004678c	mov	x23, x24
0000000000046790	ldr	x8, [x25]
0000000000046794	cbnz	x8, 0x46828
0000000000046798	b	0x467c8
000000000004679c	mov	x21, #0x0
00000000000467a0	mov	x22, #0x0
00000000000467a4	cbnz	x24, 0x46754
00000000000467a8	mov	x25, x23
00000000000467ac	ldr	x8, [x25]
00000000000467b0	cbnz	x8, 0x46828
00000000000467b4	b	0x467c8
00000000000467b8	mov	x23, x24
00000000000467bc	mov	x25, x24
00000000000467c0	ldr	x8, [x25]
00000000000467c4	cbnz	x8, 0x46828
00000000000467c8	mov	w0, #0x1
00000000000467cc	mov	w1, #0x40
00000000000467d0	bl	0x553d4 ; symbol stub for: _calloc
00000000000467d4	str	w20, [x0, #0x20]
00000000000467d8	stp	x21, x22, [x0, #0x28]
00000000000467dc	str	x22, [x0, #0x38]
00000000000467e0	stp	xzr, xzr, [sp, #0x10]
00000000000467e4	str	xzr, [sp, #0x8]
00000000000467e8	stp	xzr, xzr, [x0]
00000000000467ec	str	x23, [x0, #0x10]
00000000000467f0	str	x0, [x25]
00000000000467f4	ldr	x8, [x19]
00000000000467f8	ldr	x8, [x8]
00000000000467fc	cbz	x8, 0x4680c
0000000000046800	str	x8, [x19]
0000000000046804	ldr	x1, [x25]
0000000000046808	b	0x46810
000000000004680c	mov	x1, x0
0000000000046810	ldr	x0, [x19, #0x8]
0000000000046814	bl	__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_
0000000000046818	ldr	x8, [x19, #0x10]
000000000004681c	add	x8, x8, #0x1
0000000000046820	str	x8, [x19, #0x10]
0000000000046824	ldr	x21, [sp, #0x8]
0000000000046828	cbz	x21, 0x46838
000000000004682c	str	x21, [sp, #0x10]
0000000000046830	mov	x0, x21
0000000000046834	bl	0x55458 ; symbol stub for: _free
0000000000046838	ldp	x29, x30, [sp, #0x60]
000000000004683c	ldp	x20, x19, [sp, #0x50]
0000000000046840	ldp	x22, x21, [sp, #0x40]
0000000000046844	ldp	x24, x23, [sp, #0x30]
0000000000046848	ldp	x26, x25, [sp, #0x20]
000000000004684c	add	sp, sp, #0x70
0000000000046850	ret
0000000000046854	add	x0, sp, #0x8
0000000000046858	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000004685c	brk	#0x1
0000000000046860	mov	x19, x0
0000000000046864	ldr	x0, [sp, #0x8]
0000000000046868	cbz	x0, 0x46874
000000000004686c	str	x0, [sp, #0x10]
0000000000046870	bl	0x55458 ; symbol stub for: _free
0000000000046874	mov	x0, x19
0000000000046878	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_:
000000000004687c	stp	x24, x23, [sp, #-0x40]!
0000000000046880	stp	x22, x21, [sp, #0x10]
0000000000046884	stp	x20, x19, [sp, #0x20]
0000000000046888	stp	x29, x30, [sp, #0x30]
000000000004688c	add	x29, sp, #0x30
0000000000046890	mov	x21, x2
0000000000046894	mov	x19, x0
0000000000046898	lsr	x8, x1, #32
000000000004689c	lsl	w9, w1, #3
00000000000468a0	add	x9, x9, #0x8
00000000000468a4	eor	x9, x9, x8
00000000000468a8	mov	x10, #0x2d69
00000000000468ac	movk	x10, #0xeb38, lsl #16
00000000000468b0	movk	x10, #0xea08, lsl #32
00000000000468b4	movk	x10, #0x9ddf, lsl #48
00000000000468b8	mul	x9, x9, x10
00000000000468bc	eor	x8, x9, x8
00000000000468c0	eor	x8, x8, x9, lsr #47
00000000000468c4	mul	x8, x8, x10
00000000000468c8	eor	x8, x8, x8, lsr #47
00000000000468cc	mul	x23, x8, x10
00000000000468d0	ldr	x22, [x0, #0x8]
00000000000468d4	cbz	x22, 0x468fc
00000000000468d8	fmov	d0, x22
00000000000468dc	cnt.8b	v0, v0
00000000000468e0	uaddlv.8b	h0, v0
00000000000468e4	fmov	w8, s0
00000000000468e8	cmp	x8, #0x1
00000000000468ec	b.hi	0x46900
00000000000468f0	sub	x9, x22, #0x1
00000000000468f4	and	x24, x23, x9
00000000000468f8	b	0x46914
00000000000468fc	b	0x46970
0000000000046900	mov	x24, x23
0000000000046904	cmp	x23, x22
0000000000046908	b.lo	0x46914
000000000004690c	udiv	x9, x23, x22
0000000000046910	msub	x24, x9, x22, x23
0000000000046914	ldr	x9, [x19]
0000000000046918	ldr	x9, [x9, x24, lsl #3]
000000000004691c	cbz	x9, 0x46970
0000000000046920	sub	x10, x22, #0x1
0000000000046924	b	0x46940
0000000000046928	and	x11, x11, x10
000000000004692c	cmp	x11, x24
0000000000046930	b.ne	0x46970
0000000000046934	ldr	x11, [x9, #0x10]
0000000000046938	cmp	x11, x1
000000000004693c	b.eq	0x46a70
0000000000046940	ldr	x9, [x9]
0000000000046944	cbz	x9, 0x46970
0000000000046948	ldr	x11, [x9, #0x8]
000000000004694c	cmp	x11, x23
0000000000046950	b.eq	0x46934
0000000000046954	cmp	x8, #0x1
0000000000046958	b.ls	0x46928
000000000004695c	cmp	x11, x22
0000000000046960	b.lo	0x4692c
0000000000046964	udiv	x12, x11, x22
0000000000046968	msub	x11, x12, x22, x11
000000000004696c	b	0x4692c
0000000000046970	mov	w0, #0x1
0000000000046974	mov	w1, #0x18
0000000000046978	bl	0x553d4 ; symbol stub for: _calloc
000000000004697c	mov	x20, x0
0000000000046980	ldr	x8, [x21]
0000000000046984	stp	x23, x8, [x0, #0x8]
0000000000046988	ldr	x8, [x19, #0x18]
000000000004698c	add	x8, x8, #0x1
0000000000046990	ucvtf	s0, x8
0000000000046994	ldr	s1, [x19, #0x20]
0000000000046998	cbz	x22, 0x469ac
000000000004699c	ucvtf	s2, x22
00000000000469a0	fmul	s2, s1, s2
00000000000469a4	fcmp	s2, s0
00000000000469a8	b.pl	0x46acc
00000000000469ac	cmp	x22, #0x3
00000000000469b0	cset	w8, lo
00000000000469b4	sub	x9, x22, #0x1
00000000000469b8	tst	x22, x9
00000000000469bc	cset	w9, ne
00000000000469c0	orr	w8, w8, w9
00000000000469c4	bfi	x8, x22, #1, #63
00000000000469c8	fdiv	s0, s0, s1
00000000000469cc	fcvtpu	x9, s0
00000000000469d0	cmp	x8, x9
00000000000469d4	csel	x21, x9, x8, lo
00000000000469d8	subs	x8, x21, #0x1
00000000000469dc	b.ne	0x469e8
00000000000469e0	mov	w21, #0x2
00000000000469e4	b	0x46a00
00000000000469e8	tst	x21, x8
00000000000469ec	b.eq	0x46a00
00000000000469f0	mov	x0, x21
00000000000469f4	bl	0x551dc ; symbol stub for: __ZNSt3__112__next_primeEm
00000000000469f8	mov	x21, x0
00000000000469fc	ldr	x22, [x19, #0x8]
0000000000046a00	cmp	x21, x22
0000000000046a04	b.ls	0x46a18
0000000000046a08	mov	x0, x19
0000000000046a0c	mov	x1, x21
0000000000046a10	bl	__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE8__rehashEm
0000000000046a14	b	0x46a9c
0000000000046a18	b.hs	0x46a9c
0000000000046a1c	ldr	x8, [x19, #0x18]
0000000000046a20	ucvtf	s0, x8
0000000000046a24	ldr	s1, [x19, #0x20]
0000000000046a28	fdiv	s0, s0, s1
0000000000046a2c	fcvtpu	x0, s0
0000000000046a30	cmp	x22, #0x3
0000000000046a34	b.lo	0x46a88
0000000000046a38	fmov	d0, x22
0000000000046a3c	cnt.8b	v0, v0
0000000000046a40	uaddlv.8b	h0, v0
0000000000046a44	fmov	w8, s0
0000000000046a48	cmp	x8, #0x1
0000000000046a4c	b.hi	0x46a88
0000000000046a50	sub	x8, x0, #0x1
0000000000046a54	clz	x8, x8
0000000000046a58	neg	x8, x8
0000000000046a5c	mov	w9, #0x1
0000000000046a60	lsl	x8, x9, x8
0000000000046a64	cmp	x0, #0x2
0000000000046a68	csel	x0, x0, x8, lo
0000000000046a6c	b	0x46a8c
0000000000046a70	mov	x0, #0x0
0000000000046a74	ldp	x29, x30, [sp, #0x30]
0000000000046a78	ldp	x20, x19, [sp, #0x20]
0000000000046a7c	ldp	x22, x21, [sp, #0x10]
0000000000046a80	ldp	x24, x23, [sp], #0x40
0000000000046a84	ret
0000000000046a88	bl	0x551dc ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000046a8c	cmp	x21, x0
0000000000046a90	csel	x21, x0, x21, lo
0000000000046a94	cmp	x21, x22
0000000000046a98	b.lo	0x46a08
0000000000046a9c	ldr	x22, [x19, #0x8]
0000000000046aa0	sub	x8, x22, #0x1
0000000000046aa4	tst	x22, x8
0000000000046aa8	b.ne	0x46ac0
0000000000046aac	and	x24, x8, x23
0000000000046ab0	ldr	x9, [x19]
0000000000046ab4	ldr	x8, [x9, x24, lsl #3]
0000000000046ab8	cbnz	x8, 0x46ad8
0000000000046abc	b	0x46af8
0000000000046ac0	cmp	x23, x22
0000000000046ac4	b.hs	0x46ae4
0000000000046ac8	mov	x24, x23
0000000000046acc	ldr	x9, [x19]
0000000000046ad0	ldr	x8, [x9, x24, lsl #3]
0000000000046ad4	cbz	x8, 0x46af8
0000000000046ad8	ldr	x9, [x8]
0000000000046adc	str	x9, [x20]
0000000000046ae0	b	0x46b44
0000000000046ae4	udiv	x8, x23, x22
0000000000046ae8	msub	x24, x8, x22, x23
0000000000046aec	ldr	x9, [x19]
0000000000046af0	ldr	x8, [x9, x24, lsl #3]
0000000000046af4	cbnz	x8, 0x46ad8
0000000000046af8	mov	x8, x19
0000000000046afc	ldr	x10, [x8, #0x10]!
0000000000046b00	str	x10, [x20]
0000000000046b04	str	x20, [x8]
0000000000046b08	str	x8, [x9, x24, lsl #3]
0000000000046b0c	ldr	x8, [x20]
0000000000046b10	cbz	x8, 0x46b48
0000000000046b14	ldr	x8, [x8, #0x8]
0000000000046b18	sub	x9, x22, #0x1
0000000000046b1c	tst	x22, x9
0000000000046b20	b.ne	0x46b2c
0000000000046b24	and	x8, x8, x9
0000000000046b28	b	0x46b3c
0000000000046b2c	cmp	x8, x22
0000000000046b30	b.lo	0x46b3c
0000000000046b34	udiv	x9, x8, x22
0000000000046b38	msub	x8, x9, x22, x8
0000000000046b3c	ldr	x9, [x19]
0000000000046b40	add	x8, x9, x8, lsl #3
0000000000046b44	str	x20, [x8]
0000000000046b48	ldr	x8, [x19, #0x18]
0000000000046b4c	add	x8, x8, #0x1
0000000000046b50	str	x8, [x19, #0x18]
0000000000046b54	mov	w0, #0x1
0000000000046b58	ldp	x29, x30, [sp, #0x30]
0000000000046b5c	ldp	x20, x19, [sp, #0x20]
0000000000046b60	ldp	x22, x21, [sp, #0x10]
0000000000046b64	ldp	x24, x23, [sp], #0x40
0000000000046b68	ret
0000000000046b6c	mov	x19, x0
0000000000046b70	cbz	x20, 0x46b7c
0000000000046b74	mov	x0, x20
0000000000046b78	bl	0x55458 ; symbol stub for: _free
0000000000046b7c	mov	x0, x19
0000000000046b80	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE:
0000000000046b84	cbz	x0, 0x46bc8
0000000000046b88	stp	x20, x19, [sp, #-0x20]!
0000000000046b8c	stp	x29, x30, [sp, #0x10]
0000000000046b90	add	x29, sp, #0x10
0000000000046b94	mov	x19, x0
0000000000046b98	ldr	x0, [x0]
0000000000046b9c	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
0000000000046ba0	ldr	x0, [x19, #0x8]
0000000000046ba4	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
0000000000046ba8	ldr	x0, [x19, #0x28]
0000000000046bac	cbz	x0, 0x46bb8
0000000000046bb0	str	x0, [x19, #0x30]
0000000000046bb4	bl	0x55458 ; symbol stub for: _free
0000000000046bb8	mov	x0, x19
0000000000046bbc	ldp	x29, x30, [sp, #0x10]
0000000000046bc0	ldp	x20, x19, [sp], #0x20
0000000000046bc4	b	0x55458 ; symbol stub for: _free
0000000000046bc8	ret
__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj:
0000000000046bcc	ldr	x9, [x0]
0000000000046bd0	ldrsb	w10, [x9]
0000000000046bd4	and	w8, w10, #0xff
0000000000046bd8	tbnz	w10, #0x1f, 0x46c04
0000000000046bdc	cmp	x9, x1
0000000000046be0	b.eq	0x46dd4
0000000000046be4	mov	x10, x9
0000000000046be8	mov	x11, x8
0000000000046bec	mov	w8, #0x0
0000000000046bf0	str	w11, [x2]
0000000000046bf4	add	x9, x10, #0x1
0000000000046bf8	str	x9, [x0]
0000000000046bfc	mov	x0, x8
0000000000046c00	ret
0000000000046c04	and	w10, w8, #0xe0
0000000000046c08	cmp	w10, #0xc0
0000000000046c0c	b.ne	0x46c58
0000000000046c10	cmp	x9, x1
0000000000046c14	b.eq	0x46dd4
0000000000046c18	add	x10, x9, #0x1
0000000000046c1c	str	x10, [x0]
0000000000046c20	cmp	x10, x1
0000000000046c24	b.eq	0x46dd4
0000000000046c28	ldrb	w11, [x10]
0000000000046c2c	and	w12, w11, #0xc0
0000000000046c30	cmp	w12, #0x80
0000000000046c34	b.ne	0x46de4
0000000000046c38	and	w11, w11, #0x3f
0000000000046c3c	bfi	w11, w8, #6, #5
0000000000046c40	cmp	w11, #0x80
0000000000046c44	b.hs	0x46bec
0000000000046c48	mov	w8, #0x4
0000000000046c4c	str	x9, [x0]
0000000000046c50	mov	x0, x8
0000000000046c54	ret
0000000000046c58	and	w10, w8, #0xf0
0000000000046c5c	cmp	w10, #0xe0
0000000000046c60	b.ne	0x46cb4
0000000000046c64	cmp	x9, x1
0000000000046c68	b.eq	0x46dd4
0000000000046c6c	add	x10, x9, #0x1
0000000000046c70	str	x10, [x0]
0000000000046c74	cmp	x10, x1
0000000000046c78	b.eq	0x46dd4
0000000000046c7c	ldrb	w10, [x10]
0000000000046c80	and	w11, w10, #0xc0
0000000000046c84	cmp	w11, #0x80
0000000000046c88	b.ne	0x46de4
0000000000046c8c	ubfiz	w8, w8, #12, #4
0000000000046c90	bfi	w8, w10, #6, #6
0000000000046c94	and	w10, w8, #0xf800
0000000000046c98	mov	w11, #0xd800
0000000000046c9c	cmp	w10, w11
0000000000046ca0	b.ne	0x46d14
0000000000046ca4	mov	w8, #0x5
0000000000046ca8	str	x9, [x0]
0000000000046cac	mov	x0, x8
0000000000046cb0	ret
0000000000046cb4	and	w10, w8, #0xf8
0000000000046cb8	cmp	w10, #0xf0
0000000000046cbc	b.ne	0x46d0c
0000000000046cc0	cmp	x9, x1
0000000000046cc4	b.eq	0x46dd4
0000000000046cc8	add	x10, x9, #0x1
0000000000046ccc	str	x10, [x0]
0000000000046cd0	cmp	x10, x1
0000000000046cd4	b.eq	0x46dd4
0000000000046cd8	ldrb	w10, [x10]
0000000000046cdc	and	w11, w10, #0xc0
0000000000046ce0	cmp	w11, #0x80
0000000000046ce4	b.ne	0x46de4
0000000000046ce8	ubfiz	w8, w8, #18, #3
0000000000046cec	bfi	w8, w10, #12, #6
0000000000046cf0	lsr	w10, w8, #16
0000000000046cf4	cmp	w10, #0x10
0000000000046cf8	b.ls	0x46d2c
0000000000046cfc	mov	w8, #0x5
0000000000046d00	str	x9, [x0]
0000000000046d04	mov	x0, x8
0000000000046d08	ret
0000000000046d0c	mov	w0, #0x2
0000000000046d10	ret
0000000000046d14	cmp	w8, #0x800
0000000000046d18	b.hs	0x46d44
0000000000046d1c	mov	w8, #0x4
0000000000046d20	str	x9, [x0]
0000000000046d24	mov	x0, x8
0000000000046d28	ret
0000000000046d2c	cmp	w8, #0x10, lsl #12
0000000000046d30	b.hs	0x46d84
0000000000046d34	mov	w8, #0x4
0000000000046d38	str	x9, [x0]
0000000000046d3c	mov	x0, x8
0000000000046d40	ret
0000000000046d44	add	x10, x9, #0x2
0000000000046d48	str	x10, [x0]
0000000000046d4c	cmp	x10, x1
0000000000046d50	b.eq	0x46dd4
0000000000046d54	ldrb	w11, [x10]
0000000000046d58	and	w12, w11, #0xc0
0000000000046d5c	cmp	w12, #0x80
0000000000046d60	b.ne	0x46de4
0000000000046d64	and	w9, w11, #0x3f
0000000000046d68	orr	w11, w8, w9
0000000000046d6c	mov	w8, #0x0
0000000000046d70	str	w11, [x2]
0000000000046d74	add	x9, x10, #0x1
0000000000046d78	str	x9, [x0]
0000000000046d7c	mov	x0, x8
0000000000046d80	ret
0000000000046d84	add	x10, x9, #0x2
0000000000046d88	str	x10, [x0]
0000000000046d8c	cmp	x10, x1
0000000000046d90	b.eq	0x46dd4
0000000000046d94	ldrb	w11, [x10]
0000000000046d98	and	w10, w11, #0xc0
0000000000046d9c	cmp	w10, #0x80
0000000000046da0	b.ne	0x46de4
0000000000046da4	add	x10, x9, #0x3
0000000000046da8	str	x10, [x0]
0000000000046dac	cmp	x10, x1
0000000000046db0	b.eq	0x46dd4
0000000000046db4	ldrb	w12, [x10]
0000000000046db8	and	w13, w12, #0xc0
0000000000046dbc	cmp	w13, #0x80
0000000000046dc0	b.ne	0x46de4
0000000000046dc4	ubfiz	w9, w11, #6, #6
0000000000046dc8	orr	w8, w9, w8
0000000000046dcc	and	w9, w12, #0x3f
0000000000046dd0	b	0x46d68
0000000000046dd4	mov	w8, #0x1
0000000000046dd8	str	x9, [x0]
0000000000046ddc	mov	x0, x8
0000000000046de0	ret
0000000000046de4	mov	w8, #0x3
0000000000046de8	str	x9, [x0]
0000000000046dec	mov	x0, x8
0000000000046df0	ret
__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE8__rehashEm:
0000000000046df4	stp	x20, x19, [sp, #-0x20]!
0000000000046df8	stp	x29, x30, [sp, #0x10]
0000000000046dfc	add	x29, sp, #0x10
0000000000046e00	mov	x19, x0
0000000000046e04	cbz	x1, 0x46e7c
0000000000046e08	mov	x20, x1
0000000000046e0c	mov	x0, x1
0000000000046e10	mov	w1, #0x8
0000000000046e14	bl	0x553d4 ; symbol stub for: _calloc
0000000000046e18	mov	x8, x0
0000000000046e1c	ldr	x0, [x19]
0000000000046e20	str	x8, [x19]
0000000000046e24	cbz	x0, 0x46e2c
0000000000046e28	bl	0x55458 ; symbol stub for: _free
0000000000046e2c	mov	x8, #0x0
0000000000046e30	str	x20, [x19, #0x8]
0000000000046e34	ldr	x9, [x19]
0000000000046e38	str	xzr, [x9, x8, lsl #3]
0000000000046e3c	add	x8, x8, #0x1
0000000000046e40	cmp	x8, x20
0000000000046e44	b.lo	0x46e34
0000000000046e48	mov	x11, x19
0000000000046e4c	ldr	x8, [x11, #0x10]!
0000000000046e50	cbz	x8, 0x46f58
0000000000046e54	ldr	x9, [x8, #0x8]
0000000000046e58	fmov	d0, x20
0000000000046e5c	cnt.8b	v0, v0
0000000000046e60	uaddlv.8b	h0, v0
0000000000046e64	fmov	w10, s0
0000000000046e68	cmp	x10, #0x1
0000000000046e6c	b.hi	0x46e94
0000000000046e70	sub	x12, x20, #0x1
0000000000046e74	and	x9, x9, x12
0000000000046e78	b	0x46ea4
0000000000046e7c	ldr	x0, [x19]
0000000000046e80	str	xzr, [x19]
0000000000046e84	cbz	x0, 0x46e8c
0000000000046e88	bl	0x55458 ; symbol stub for: _free
0000000000046e8c	str	xzr, [x19, #0x8]
0000000000046e90	b	0x46f58
0000000000046e94	cmp	x9, x20
0000000000046e98	b.lo	0x46ea4
0000000000046e9c	udiv	x12, x9, x20
0000000000046ea0	msub	x9, x12, x20, x9
0000000000046ea4	ldr	x12, [x19]
0000000000046ea8	str	x11, [x12, x9, lsl #3]
0000000000046eac	ldr	x12, [x8]
0000000000046eb0	cbz	x12, 0x46f58
0000000000046eb4	sub	x11, x20, #0x1
0000000000046eb8	b	0x46ec8
0000000000046ebc	mov	x8, x12
0000000000046ec0	ldr	x12, [x8]
0000000000046ec4	cbz	x12, 0x46f58
0000000000046ec8	ldr	x13, [x12, #0x8]
0000000000046ecc	cmp	x10, #0x1
0000000000046ed0	b.hi	0x46edc
0000000000046ed4	and	x13, x13, x11
0000000000046ed8	b	0x46eec
0000000000046edc	cmp	x13, x20
0000000000046ee0	b.lo	0x46eec
0000000000046ee4	udiv	x14, x13, x20
0000000000046ee8	msub	x13, x14, x20, x13
0000000000046eec	cmp	x13, x9
0000000000046ef0	b.eq	0x46ebc
0000000000046ef4	ldr	x14, [x19]
0000000000046ef8	ldr	x16, [x14, x13, lsl #3]
0000000000046efc	mov	x15, x12
0000000000046f00	cbz	x16, 0x46f48
0000000000046f04	mov	x14, x15
0000000000046f08	ldr	x15, [x15]
0000000000046f0c	cbz	x15, 0x46f20
0000000000046f10	ldr	x16, [x12, #0x10]
0000000000046f14	ldr	x17, [x15, #0x10]
0000000000046f18	cmp	x16, x17
0000000000046f1c	b.eq	0x46f04
0000000000046f20	str	x15, [x8]
0000000000046f24	ldr	x15, [x19]
0000000000046f28	lsl	x13, x13, #3
0000000000046f2c	ldr	x15, [x15, x13]
0000000000046f30	ldr	x15, [x15]
0000000000046f34	str	x15, [x14]
0000000000046f38	ldr	x14, [x19]
0000000000046f3c	ldr	x13, [x14, x13]
0000000000046f40	str	x12, [x13]
0000000000046f44	b	0x46ec0
0000000000046f48	str	x8, [x14, x13, lsl #3]
0000000000046f4c	mov	x8, x12
0000000000046f50	mov	x9, x13
0000000000046f54	b	0x46ec0
0000000000046f58	ldp	x29, x30, [sp, #0x10]
0000000000046f5c	ldp	x20, x19, [sp], #0x20
0000000000046f60	ret
__ZNSt3__112__hash_tableIP8ProtocolNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm:
0000000000046f64	stp	x20, x19, [sp, #-0x20]!
0000000000046f68	stp	x29, x30, [sp, #0x10]
0000000000046f6c	add	x29, sp, #0x10
0000000000046f70	mov	x19, x0
0000000000046f74	cbz	x1, 0x46fec
0000000000046f78	mov	x20, x1
0000000000046f7c	mov	x0, x1
0000000000046f80	mov	w1, #0x8
0000000000046f84	bl	0x553d4 ; symbol stub for: _calloc
0000000000046f88	mov	x8, x0
0000000000046f8c	ldr	x0, [x19]
0000000000046f90	str	x8, [x19]
0000000000046f94	cbz	x0, 0x46f9c
0000000000046f98	bl	0x55458 ; symbol stub for: _free
0000000000046f9c	mov	x8, #0x0
0000000000046fa0	str	x20, [x19, #0x8]
0000000000046fa4	ldr	x9, [x19]
0000000000046fa8	str	xzr, [x9, x8, lsl #3]
0000000000046fac	add	x8, x8, #0x1
0000000000046fb0	cmp	x8, x20
0000000000046fb4	b.lo	0x46fa4
0000000000046fb8	mov	x11, x19
0000000000046fbc	ldr	x8, [x11, #0x10]!
0000000000046fc0	cbz	x8, 0x470c8
0000000000046fc4	ldr	x9, [x8, #0x8]
0000000000046fc8	fmov	d0, x20
0000000000046fcc	cnt.8b	v0, v0
0000000000046fd0	uaddlv.8b	h0, v0
0000000000046fd4	fmov	w10, s0
0000000000046fd8	cmp	x10, #0x1
0000000000046fdc	b.hi	0x47004
0000000000046fe0	sub	x12, x20, #0x1
0000000000046fe4	and	x9, x9, x12
0000000000046fe8	b	0x47014
0000000000046fec	ldr	x0, [x19]
0000000000046ff0	str	xzr, [x19]
0000000000046ff4	cbz	x0, 0x46ffc
0000000000046ff8	bl	0x55458 ; symbol stub for: _free
0000000000046ffc	str	xzr, [x19, #0x8]
0000000000047000	b	0x470c8
0000000000047004	cmp	x9, x20
0000000000047008	b.lo	0x47014
000000000004700c	udiv	x12, x9, x20
0000000000047010	msub	x9, x12, x20, x9
0000000000047014	ldr	x12, [x19]
0000000000047018	str	x11, [x12, x9, lsl #3]
000000000004701c	ldr	x12, [x8]
0000000000047020	cbz	x12, 0x470c8
0000000000047024	sub	x11, x20, #0x1
0000000000047028	b	0x47038
000000000004702c	mov	x8, x12
0000000000047030	ldr	x12, [x8]
0000000000047034	cbz	x12, 0x470c8
0000000000047038	ldr	x13, [x12, #0x8]
000000000004703c	cmp	x10, #0x1
0000000000047040	b.hi	0x4704c
0000000000047044	and	x13, x13, x11
0000000000047048	b	0x4705c
000000000004704c	cmp	x13, x20
0000000000047050	b.lo	0x4705c
0000000000047054	udiv	x14, x13, x20
0000000000047058	msub	x13, x14, x20, x13
000000000004705c	cmp	x13, x9
0000000000047060	b.eq	0x4702c
0000000000047064	ldr	x14, [x19]
0000000000047068	ldr	x16, [x14, x13, lsl #3]
000000000004706c	mov	x15, x12
0000000000047070	cbz	x16, 0x470b8
0000000000047074	mov	x14, x15
0000000000047078	ldr	x15, [x15]
000000000004707c	cbz	x15, 0x47090
0000000000047080	ldr	x16, [x12, #0x10]
0000000000047084	ldr	x17, [x15, #0x10]
0000000000047088	cmp	x16, x17
000000000004708c	b.eq	0x47074
0000000000047090	str	x15, [x8]
0000000000047094	ldr	x15, [x19]
0000000000047098	lsl	x13, x13, #3
000000000004709c	ldr	x15, [x15, x13]
00000000000470a0	ldr	x15, [x15]
00000000000470a4	str	x15, [x14]
00000000000470a8	ldr	x14, [x19]
00000000000470ac	ldr	x13, [x14, x13]
00000000000470b0	str	x12, [x13]
00000000000470b4	b	0x47030
00000000000470b8	str	x8, [x14, x13, lsl #3]
00000000000470bc	mov	x8, x12
00000000000470c0	mov	x9, x13
00000000000470c4	b	0x47030
00000000000470c8	ldp	x29, x30, [sp, #0x10]
00000000000470cc	ldp	x20, x19, [sp], #0x20
00000000000470d0	ret
__ZNSt3__112__hash_tableIP13objc_selectorNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm:
00000000000470d4	stp	x20, x19, [sp, #-0x20]!
00000000000470d8	stp	x29, x30, [sp, #0x10]
00000000000470dc	add	x29, sp, #0x10
00000000000470e0	mov	x19, x0
00000000000470e4	cbz	x1, 0x4715c
00000000000470e8	mov	x20, x1
00000000000470ec	mov	x0, x1
00000000000470f0	mov	w1, #0x8
00000000000470f4	bl	0x553d4 ; symbol stub for: _calloc
00000000000470f8	mov	x8, x0
00000000000470fc	ldr	x0, [x19]
0000000000047100	str	x8, [x19]
0000000000047104	cbz	x0, 0x4710c
0000000000047108	bl	0x55458 ; symbol stub for: _free
000000000004710c	mov	x8, #0x0
0000000000047110	str	x20, [x19, #0x8]
0000000000047114	ldr	x9, [x19]
0000000000047118	str	xzr, [x9, x8, lsl #3]
000000000004711c	add	x8, x8, #0x1
0000000000047120	cmp	x8, x20
0000000000047124	b.lo	0x47114
0000000000047128	mov	x11, x19
000000000004712c	ldr	x8, [x11, #0x10]!
0000000000047130	cbz	x8, 0x47238
0000000000047134	ldr	x9, [x8, #0x8]
0000000000047138	fmov	d0, x20
000000000004713c	cnt.8b	v0, v0
0000000000047140	uaddlv.8b	h0, v0
0000000000047144	fmov	w10, s0
0000000000047148	cmp	x10, #0x1
000000000004714c	b.hi	0x47174
0000000000047150	sub	x12, x20, #0x1
0000000000047154	and	x9, x9, x12
0000000000047158	b	0x47184
000000000004715c	ldr	x0, [x19]
0000000000047160	str	xzr, [x19]
0000000000047164	cbz	x0, 0x4716c
0000000000047168	bl	0x55458 ; symbol stub for: _free
000000000004716c	str	xzr, [x19, #0x8]
0000000000047170	b	0x47238
0000000000047174	cmp	x9, x20
0000000000047178	b.lo	0x47184
000000000004717c	udiv	x12, x9, x20
0000000000047180	msub	x9, x12, x20, x9
0000000000047184	ldr	x12, [x19]
0000000000047188	str	x11, [x12, x9, lsl #3]
000000000004718c	ldr	x12, [x8]
0000000000047190	cbz	x12, 0x47238
0000000000047194	sub	x11, x20, #0x1
0000000000047198	b	0x471a8
000000000004719c	mov	x8, x12
00000000000471a0	ldr	x12, [x8]
00000000000471a4	cbz	x12, 0x47238
00000000000471a8	ldr	x13, [x12, #0x8]
00000000000471ac	cmp	x10, #0x1
00000000000471b0	b.hi	0x471bc
00000000000471b4	and	x13, x13, x11
00000000000471b8	b	0x471cc
00000000000471bc	cmp	x13, x20
00000000000471c0	b.lo	0x471cc
00000000000471c4	udiv	x14, x13, x20
00000000000471c8	msub	x13, x14, x20, x13
00000000000471cc	cmp	x13, x9
00000000000471d0	b.eq	0x4719c
00000000000471d4	ldr	x14, [x19]
00000000000471d8	ldr	x16, [x14, x13, lsl #3]
00000000000471dc	mov	x15, x12
00000000000471e0	cbz	x16, 0x47228
00000000000471e4	mov	x14, x15
00000000000471e8	ldr	x15, [x15]
00000000000471ec	cbz	x15, 0x47200
00000000000471f0	ldr	x16, [x12, #0x10]
00000000000471f4	ldr	x17, [x15, #0x10]
00000000000471f8	cmp	x16, x17
00000000000471fc	b.eq	0x471e4
0000000000047200	str	x15, [x8]
0000000000047204	ldr	x15, [x19]
0000000000047208	lsl	x13, x13, #3
000000000004720c	ldr	x15, [x15, x13]
0000000000047210	ldr	x15, [x15]
0000000000047214	str	x15, [x14]
0000000000047218	ldr	x14, [x19]
000000000004721c	ldr	x13, [x14, x13]
0000000000047220	str	x12, [x13]
0000000000047224	b	0x471a0
0000000000047228	str	x8, [x14, x13, lsl #3]
000000000004722c	mov	x8, x12
0000000000047230	mov	x9, x13
0000000000047234	b	0x471a0
0000000000047238	ldp	x29, x30, [sp, #0x10]
000000000004723c	ldp	x20, x19, [sp], #0x20
0000000000047240	ret
__ZNSt3__112__hash_tableINS_17__hash_value_typeIiP6WorkerEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEEN6kotlin11std_support9allocatorIS4_EEE8__rehashEm:
0000000000047244	stp	x20, x19, [sp, #-0x20]!
0000000000047248	stp	x29, x30, [sp, #0x10]
000000000004724c	add	x29, sp, #0x10
0000000000047250	mov	x19, x0
0000000000047254	cbz	x1, 0x472cc
0000000000047258	mov	x20, x1
000000000004725c	mov	x0, x1
0000000000047260	mov	w1, #0x8
0000000000047264	bl	0x553d4 ; symbol stub for: _calloc
0000000000047268	mov	x8, x0
000000000004726c	ldr	x0, [x19]
0000000000047270	str	x8, [x19]
0000000000047274	cbz	x0, 0x4727c
0000000000047278	bl	0x55458 ; symbol stub for: _free
000000000004727c	mov	x8, #0x0
0000000000047280	str	x20, [x19, #0x8]
0000000000047284	ldr	x9, [x19]
0000000000047288	str	xzr, [x9, x8, lsl #3]
000000000004728c	add	x8, x8, #0x1
0000000000047290	cmp	x8, x20
0000000000047294	b.lo	0x47284
0000000000047298	mov	x11, x19
000000000004729c	ldr	x8, [x11, #0x10]!
00000000000472a0	cbz	x8, 0x473a8
00000000000472a4	ldr	x9, [x8, #0x8]
00000000000472a8	fmov	d0, x20
00000000000472ac	cnt.8b	v0, v0
00000000000472b0	uaddlv.8b	h0, v0
00000000000472b4	fmov	w10, s0
00000000000472b8	cmp	x10, #0x1
00000000000472bc	b.hi	0x472e4
00000000000472c0	sub	x12, x20, #0x1
00000000000472c4	and	x9, x9, x12
00000000000472c8	b	0x472f4
00000000000472cc	ldr	x0, [x19]
00000000000472d0	str	xzr, [x19]
00000000000472d4	cbz	x0, 0x472dc
00000000000472d8	bl	0x55458 ; symbol stub for: _free
00000000000472dc	str	xzr, [x19, #0x8]
00000000000472e0	b	0x473a8
00000000000472e4	cmp	x9, x20
00000000000472e8	b.lo	0x472f4
00000000000472ec	udiv	x12, x9, x20
00000000000472f0	msub	x9, x12, x20, x9
00000000000472f4	ldr	x12, [x19]
00000000000472f8	str	x11, [x12, x9, lsl #3]
00000000000472fc	ldr	x12, [x8]
0000000000047300	cbz	x12, 0x473a8
0000000000047304	sub	x11, x20, #0x1
0000000000047308	b	0x47318
000000000004730c	mov	x8, x12
0000000000047310	ldr	x12, [x8]
0000000000047314	cbz	x12, 0x473a8
0000000000047318	ldr	x13, [x12, #0x8]
000000000004731c	cmp	x10, #0x1
0000000000047320	b.hi	0x4732c
0000000000047324	and	x13, x13, x11
0000000000047328	b	0x4733c
000000000004732c	cmp	x13, x20
0000000000047330	b.lo	0x4733c
0000000000047334	udiv	x14, x13, x20
0000000000047338	msub	x13, x14, x20, x13
000000000004733c	cmp	x13, x9
0000000000047340	b.eq	0x4730c
0000000000047344	ldr	x14, [x19]
0000000000047348	ldr	x16, [x14, x13, lsl #3]
000000000004734c	mov	x15, x12
0000000000047350	cbz	x16, 0x47398
0000000000047354	mov	x14, x15
0000000000047358	ldr	x15, [x15]
000000000004735c	cbz	x15, 0x47370
0000000000047360	ldr	w16, [x12, #0x10]
0000000000047364	ldr	w17, [x15, #0x10]
0000000000047368	cmp	w16, w17
000000000004736c	b.eq	0x47354
0000000000047370	str	x15, [x8]
0000000000047374	ldr	x15, [x19]
0000000000047378	lsl	x13, x13, #3
000000000004737c	ldr	x15, [x15, x13]
0000000000047380	ldr	x15, [x15]
0000000000047384	str	x15, [x14]
0000000000047388	ldr	x14, [x19]
000000000004738c	ldr	x13, [x14, x13]
0000000000047390	str	x12, [x13]
0000000000047394	b	0x47310
0000000000047398	str	x8, [x14, x13, lsl #3]
000000000004739c	mov	x8, x12
00000000000473a0	mov	x9, x13
00000000000473a4	b	0x47310
00000000000473a8	ldp	x29, x30, [sp, #0x10]
00000000000473ac	ldp	x20, x19, [sp], #0x20
00000000000473b0	ret
__ZN12_GLOBAL__N_116TerminateHandler13kotlinHandlerEv:
00000000000473b4	sub	sp, sp, #0x40
00000000000473b8	stp	x22, x21, [sp, #0x10]
00000000000473bc	stp	x20, x19, [sp, #0x20]
00000000000473c0	stp	x29, x30, [sp, #0x30]
00000000000473c4	add	x29, sp, #0x30
00000000000473c8	add	x8, sp, #0x8
00000000000473cc	bl	0x552e4 ; symbol stub for: __ZSt17current_exceptionv
00000000000473d0	ldr	x8, [sp, #0x8]
00000000000473d4	cbnz	x8, 0x47400
00000000000473d8	add	x0, sp, #0x8
00000000000473dc	bl	0x551c4 ; symbol stub for: __ZNSt13exception_ptrD1Ev
00000000000473e0	adrp	x0, 51 ; 0x7a000
00000000000473e4	add	x0, x0, #0x2c0
00000000000473e8	ldr	x8, [x0]
00000000000473ec	blr	x8
00000000000473f0	ldr	x20, [x0]
00000000000473f4	cbnz	x20, 0x47418
00000000000473f8	mov	w21, #0x1
00000000000473fc	b	0x4742c
0000000000047400	mov	x0, sp
0000000000047404	add	x1, sp, #0x8
0000000000047408	bl	0x551b8 ; symbol stub for: __ZNSt13exception_ptrC1ERKS_
000000000004740c	mov	x0, sp
0000000000047410	bl	0x552f0 ; symbol stub for: __ZSt17rethrow_exceptionSt13exception_ptr
0000000000047414	b	0x4753c
0000000000047418	add	x8, x20, #0x138
000000000004741c	mov	w9, #0x1
0000000000047420	ldaxr	w21, [x8]
0000000000047424	stlxr	w10, w9, [x8]
0000000000047428	cbnz	w10, 0x47420
000000000004742c	bl	__ZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEv
0000000000047430	b	0x4753c
0000000000047434	mov	x19, x0
0000000000047438	cbnz	x20, 0x47444
000000000004743c	mov	x0, x19
0000000000047440	bl	0x55194 ; symbol stub for: __Unwind_Resume
0000000000047444	add	x0, x20, #0x138
0000000000047448	ldaxr	w8, [x0]
000000000004744c	stlxr	w9, w21, [x0]
0000000000047450	cbnz	w9, 0x47448
0000000000047454	cbnz	w21, 0x4743c
0000000000047458	cmp	w8, #0x1
000000000004745c	b.ne	0x4743c
0000000000047460	adr	x8, #0x4ce29
0000000000047464	nop
0000000000047468	ldarb	w8, [x8]
000000000004746c	tbz	w8, #0x0, 0x4743c
0000000000047470	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047474	mov	x0, x19
0000000000047478	bl	0x55194 ; symbol stub for: __Unwind_Resume
000000000004747c	mov	x20, x1
0000000000047480	mov	x19, x0
0000000000047484	mov	x0, sp
0000000000047488	bl	0x551c4 ; symbol stub for: __ZNSt13exception_ptrD1Ev
000000000004748c	mov	x0, x19
0000000000047490	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000047494	cmp	w20, #0x2
0000000000047498	b.ne	0x47504
000000000004749c	mov	x19, x0
00000000000474a0	bl	_Kotlin_initRuntimeIfNeeded
00000000000474a4	adrp	x0, 51 ; 0x7a000
00000000000474a8	add	x0, x0, #0x2c0
00000000000474ac	ldr	x8, [x0]
00000000000474b0	blr	x8
00000000000474b4	ldr	x8, [x0]
00000000000474b8	add	x20, x8, #0x138
00000000000474bc	ldaxr	w21, [x20]
00000000000474c0	stlxr	w8, wzr, [x20]
00000000000474c4	cbnz	w8, 0x474bc
00000000000474c8	cmp	w21, #0x1
00000000000474cc	b.ne	0x474e8
00000000000474d0	adr	x8, #0x4cdb9
00000000000474d4	nop
00000000000474d8	ldarb	w8, [x8]
00000000000474dc	tbz	w8, #0x0, 0x474e8
00000000000474e0	mov	x0, x20
00000000000474e4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000474e8	ldr	x8, [x19, #0x8]
00000000000474ec	ldr	x0, [x8]
00000000000474f0	bl	__ZN12_GLOBAL__N_125processUnhandledExceptionEP9ObjHeader
00000000000474f4	ldr	x8, [x19, #0x8]
00000000000474f8	ldr	x0, [x8]
00000000000474fc	bl	__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader
0000000000047500	b	0x4753c
0000000000047504	adrp	x0, 51 ; 0x7a000
0000000000047508	add	x0, x0, #0x2c0
000000000004750c	ldr	x8, [x0]
0000000000047510	blr	x8
0000000000047514	ldr	x20, [x0]
0000000000047518	cbnz	x20, 0x47524
000000000004751c	mov	w21, #0x1
0000000000047520	b	0x47538
0000000000047524	add	x8, x20, #0x138
0000000000047528	mov	w9, #0x1
000000000004752c	ldaxr	w21, [x8]
0000000000047530	stlxr	w10, w9, [x8]
0000000000047534	cbnz	w10, 0x4752c
0000000000047538	bl	__ZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEv
000000000004753c	brk	#0x1
0000000000047540	mov	x19, x0
0000000000047544	cbz	x20, 0x47574
0000000000047548	add	x0, x20, #0x138
000000000004754c	ldaxr	w8, [x0]
0000000000047550	stlxr	w9, w21, [x0]
0000000000047554	cbnz	w9, 0x4754c
0000000000047558	cbnz	w21, 0x47574
000000000004755c	cmp	w8, #0x1
0000000000047560	b.ne	0x47574
0000000000047564	adr	x8, #0x4cd25
0000000000047568	nop
000000000004756c	ldarb	w8, [x8]
0000000000047570	tbnz	w8, #0x0, 0x475b8
0000000000047574	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000047578	add	x0, sp, #0x8
000000000004757c	bl	0x551c4 ; symbol stub for: __ZNSt13exception_ptrD1Ev
0000000000047580	mov	x0, x19
0000000000047584	bl	0x55194 ; symbol stub for: __Unwind_Resume
0000000000047588	mov	x19, x0
000000000004758c	ldaxr	w8, [x20]
0000000000047590	stlxr	w9, w21, [x20]
0000000000047594	cbnz	w9, 0x4758c
0000000000047598	cbnz	w21, 0x47574
000000000004759c	cmp	w8, #0x1
00000000000475a0	b.ne	0x47574
00000000000475a4	adr	x8, #0x4cce5
00000000000475a8	nop
00000000000475ac	ldarb	w8, [x8]
00000000000475b0	tbz	w8, #0x0, 0x47574
00000000000475b4	mov	x0, x20
00000000000475b8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000475bc	bl	0x55338 ; symbol stub for: ___cxa_end_catch
00000000000475c0	add	x0, sp, #0x8
00000000000475c4	bl	0x551c4 ; symbol stub for: __ZNSt13exception_ptrD1Ev
00000000000475c8	mov	x0, x19
00000000000475cc	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZN12_GLOBAL__N_125processUnhandledExceptionEP9ObjHeader:
00000000000475d0	sub	sp, sp, #0x180
00000000000475d4	stp	x28, x27, [sp, #0x120]
00000000000475d8	stp	x26, x25, [sp, #0x130]
00000000000475dc	stp	x24, x23, [sp, #0x140]
00000000000475e0	stp	x22, x21, [sp, #0x150]
00000000000475e4	stp	x20, x19, [sp, #0x160]
00000000000475e8	stp	x29, x30, [sp, #0x170]
00000000000475ec	add	x29, sp, #0x170
00000000000475f0	mov	x21, x0
00000000000475f4	movi.16b	v0, #0x0
00000000000475f8	stp	q0, q0, [sp, #0x30]
00000000000475fc	str	q0, [sp, #0x50]
0000000000047600	add	x23, sp, #0x30
0000000000047604	adrp	x19, 51 ; 0x7a000
0000000000047608	add	x19, x19, #0x2c0
000000000004760c	ldr	x26, [x19]
0000000000047610	mov	x0, x19
0000000000047614	blr	x26
0000000000047618	ldr	x8, [x0]
000000000004761c	ldr	x9, [x8, #0x110]
0000000000047620	str	x23, [x8, #0x110]
0000000000047624	mov	x8, #0x600000000
0000000000047628	stp	x9, x8, [sp, #0x38]
000000000004762c	adr	x24, #0x4cc5d
0000000000047630	nop
0000000000047634	ldarb	w8, [x24]
0000000000047638	tbz	w8, #0x0, 0x47640
000000000004763c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000047640	adr	x27, #0x4ccc8
0000000000047644	nop
0000000000047648	ldar	x25, [x27]
000000000004764c	cmp	x25, #0x2
0000000000047650	b.hs	0x47e44
0000000000047654	mov	x0, x19
0000000000047658	blr	x26
000000000004765c	ldr	x28, [x0]
0000000000047660	ldp	x8, x9, [x28, #0x120]
0000000000047664	cmp	x8, x9
0000000000047668	b.eq	0x47688
000000000004766c	mov	x10, x9
0000000000047670	ldr	x11, [x10, #-0x10]!
0000000000047674	cmp	x11, x27
0000000000047678	b.eq	0x47748
000000000004767c	mov	x9, x10
0000000000047680	cmp	x10, x8
0000000000047684	b.ne	0x47670
0000000000047688	add	x22, x28, #0x120
000000000004768c	add	x0, x28, #0x138
0000000000047690	mov	w9, #0x1
0000000000047694	ldaxr	w8, [x0]
0000000000047698	stlxr	w10, w9, [x0]
000000000004769c	cbnz	w10, 0x47694
00000000000476a0	b	0x476b0
00000000000476a4	mov	w20, #0x1
00000000000476a8	stlxr	w9, x20, [x27]
00000000000476ac	cbz	w9, 0x476c0
00000000000476b0	ldaxr	x25, [x27]
00000000000476b4	cbz	x25, 0x476a4
00000000000476b8	mov	w20, #0x0
00000000000476bc	clrex
00000000000476c0	cmp	x25, #0x1
00000000000476c4	b.eq	0x476b0
00000000000476c8	cbz	x28, 0x476f0
00000000000476cc	ldaxr	w9, [x0]
00000000000476d0	stlxr	w10, w8, [x0]
00000000000476d4	cbnz	w10, 0x476cc
00000000000476d8	cbnz	w8, 0x476f0
00000000000476dc	cmp	w9, #0x1
00000000000476e0	b.ne	0x476f0
00000000000476e4	ldarb	w8, [x24]
00000000000476e8	tbz	w8, #0x0, 0x476f0
00000000000476ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000476f0	tbz	w20, #0x0, 0x47740
00000000000476f4	str	x21, [sp, #0x20]
00000000000476f8	ldr	x8, [x28, #0x118]
00000000000476fc	add	x0, x8, #0x70
0000000000047700	mov	w1, #0x18
0000000000047704	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000047708	adr	x8, #0x1bd08
000000000004770c	nop
0000000000047710	mov	x25, x0
0000000000047714	str	x8, [x25, #0x10]!
0000000000047718	str	x0, [sp, #0x18]
000000000004771c	str	xzr, [x0, #0x8]
0000000000047720	str	x25, [sp, #0x48]
0000000000047724	ldp	x9, x8, [x28, #0x128]
0000000000047728	cmp	x9, x8
000000000004772c	b.hs	0x47754
0000000000047730	stp	x27, x25, [x9]
0000000000047734	add	x8, x9, #0x10
0000000000047738	str	x8, [x28, #0x128]
000000000004773c	b	0x477e4
0000000000047740	str	x25, [sp, #0x48]
0000000000047744	b	0x47e44
0000000000047748	ldur	x25, [x9, #-0x8]
000000000004774c	str	x25, [sp, #0x48]
0000000000047750	b	0x47e44
0000000000047754	mov	x21, x19
0000000000047758	ldr	x10, [x22]
000000000004775c	sub	x9, x9, x10
0000000000047760	asr	x19, x9, #4
0000000000047764	add	x9, x19, #0x1
0000000000047768	lsr	x11, x9, #60
000000000004776c	cbnz	x11, 0x47f8c
0000000000047770	sub	x8, x8, x10
0000000000047774	asr	x10, x8, #3
0000000000047778	cmp	x10, x9
000000000004777c	csel	x9, x9, x10, lo
0000000000047780	mov	x10, #0x7ffffffffffffff
0000000000047784	cmp	x10, x8, asr #4
0000000000047788	mov	x8, #0xfffffffffffffff
000000000004778c	csel	x23, x9, x8, hi
0000000000047790	mov	x0, x23
0000000000047794	mov	w1, #0x10
0000000000047798	bl	0x553d4 ; symbol stub for: _calloc
000000000004779c	add	x8, x0, x19, lsl #4
00000000000477a0	add	x19, x0, x23, lsl #4
00000000000477a4	stp	x27, x25, [x8]
00000000000477a8	add	x20, x8, #0x10
00000000000477ac	ldp	x1, x9, [x28, #0x120]
00000000000477b0	sub	x2, x9, x1
00000000000477b4	sub	x23, x8, x2
00000000000477b8	cmp	x2, #0x1
00000000000477bc	b.lt	0x477cc
00000000000477c0	mov	x0, x23
00000000000477c4	bl	0x554ac ; symbol stub for: _memcpy
00000000000477c8	ldr	x1, [x22]
00000000000477cc	stp	x23, x20, [x28, #0x120]
00000000000477d0	str	x19, [x28, #0x130]
00000000000477d4	mov	x19, x21
00000000000477d8	cbz	x1, 0x477e4
00000000000477dc	mov	x0, x1
00000000000477e0	bl	0x55458 ; symbol stub for: _free
00000000000477e4	movi.16b	v0, #0x0
00000000000477e8	stp	q0, q0, [sp, #0x60]
00000000000477ec	str	xzr, [sp, #0xa0]
00000000000477f0	stp	q0, q0, [sp, #0x80]
00000000000477f4	mov	x0, x19
00000000000477f8	blr	x26
00000000000477fc	ldr	x8, [x0]
0000000000047800	ldr	x9, [x8, #0x110]
0000000000047804	add	x10, sp, #0x60
0000000000047808	str	x10, [x8, #0x110]
000000000004780c	add	x11, sp, #0xb0
0000000000047810	str	x11, [x8, #0x110]
0000000000047814	ldr	x8, [x0]
0000000000047818	ldr	x11, [x8, #0x110]
000000000004781c	sub	x12, x29, #0xa0
0000000000047820	str	x12, [x8, #0x110]
0000000000047824	mov	x8, #0x900000000
0000000000047828	stp	x9, x8, [sp, #0x68]
000000000004782c	stp	q0, q0, [sp, #0xb0]
0000000000047830	mov	x8, #0x400000000
0000000000047834	stp	x10, x8, [sp, #0xb8]
0000000000047838	stp	q0, q0, [x29, #-0xa0]
000000000004783c	stp	x11, x8, [x29, #-0x98]
0000000000047840	adr	x21, #0x4caa8
0000000000047844	nop
0000000000047848	ldar	x22, [x21]
000000000004784c	cmp	x22, #0x2
0000000000047850	str	x26, [sp, #0x28]
0000000000047854	b.hs	0x47a44
0000000000047858	mov	x0, x19
000000000004785c	blr	x26
0000000000047860	ldr	x23, [x0]
0000000000047864	ldp	x8, x9, [x23, #0x120]
0000000000047868	cmp	x8, x9
000000000004786c	b.eq	0x4788c
0000000000047870	mov	x10, x9
0000000000047874	ldr	x11, [x10, #-0x10]!
0000000000047878	cmp	x11, x21
000000000004787c	b.eq	0x4794c
0000000000047880	mov	x9, x10
0000000000047884	cmp	x10, x8
0000000000047888	b.ne	0x47874
000000000004788c	add	x8, x23, #0x120
0000000000047890	str	x8, [sp, #0x10]
0000000000047894	add	x0, x23, #0x138
0000000000047898	mov	w9, #0x1
000000000004789c	ldaxr	w8, [x0]
00000000000478a0	stlxr	w10, w9, [x0]
00000000000478a4	cbnz	w10, 0x4789c
00000000000478a8	b	0x478b8
00000000000478ac	mov	w20, #0x1
00000000000478b0	stlxr	w9, x20, [x21]
00000000000478b4	cbz	w9, 0x478c8
00000000000478b8	ldaxr	x22, [x21]
00000000000478bc	cbz	x22, 0x478ac
00000000000478c0	mov	w20, #0x0
00000000000478c4	clrex
00000000000478c8	cmp	x22, #0x1
00000000000478cc	b.eq	0x478b8
00000000000478d0	cbz	x23, 0x478fc
00000000000478d4	ldaxr	w9, [x0]
00000000000478d8	stlxr	w10, w8, [x0]
00000000000478dc	cbnz	w10, 0x478d4
00000000000478e0	cbnz	w8, 0x478fc
00000000000478e4	cmp	w9, #0x1
00000000000478e8	b.ne	0x478fc
00000000000478ec	ldarb	w8, [x24]
00000000000478f0	tbz	w8, #0x0, 0x478fc
00000000000478f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000478f8	movi.16b	v0, #0x0
00000000000478fc	tbz	w20, #0x0, 0x47944
0000000000047900	ldr	x8, [x23, #0x118]
0000000000047904	add	x0, x8, #0x70
0000000000047908	mov	w1, #0x20
000000000004790c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000047910	mov	x22, x0
0000000000047914	adr	x8, #0x1a9ac
0000000000047918	nop
000000000004791c	str	x8, [x22, #0x10]!
0000000000047920	stur	xzr, [x22, #-0x8]
0000000000047924	stur	x22, [x29, #-0x88]
0000000000047928	ldp	x9, x8, [x23, #0x128]
000000000004792c	cmp	x9, x8
0000000000047930	b.hs	0x47958
0000000000047934	stp	x21, x22, [x9]
0000000000047938	add	x8, x9, #0x10
000000000004793c	str	x8, [x23, #0x128]
0000000000047940	b	0x479f4
0000000000047944	stur	x22, [x29, #-0x88]
0000000000047948	b	0x47a44
000000000004794c	ldur	x22, [x9, #-0x8]
0000000000047950	stur	x22, [x29, #-0x88]
0000000000047954	b	0x47a44
0000000000047958	ldr	x10, [sp, #0x10]
000000000004795c	ldr	x10, [x10]
0000000000047960	sub	x9, x9, x10
0000000000047964	asr	x19, x9, #4
0000000000047968	add	x9, x19, #0x1
000000000004796c	lsr	x11, x9, #60
0000000000047970	cbnz	x11, 0x47f98
0000000000047974	sub	x8, x8, x10
0000000000047978	asr	x10, x8, #3
000000000004797c	cmp	x10, x9
0000000000047980	csel	x9, x9, x10, lo
0000000000047984	mov	x10, #0x7ffffffffffffff
0000000000047988	cmp	x10, x8, asr #4
000000000004798c	mov	x8, #0xfffffffffffffff
0000000000047990	csel	x20, x9, x8, hi
0000000000047994	mov	x0, x20
0000000000047998	mov	w1, #0x10
000000000004799c	bl	0x553d4 ; symbol stub for: _calloc
00000000000479a0	add	x8, x0, x19, lsl #4
00000000000479a4	add	x20, x0, x20, lsl #4
00000000000479a8	stp	x21, x22, [x8]
00000000000479ac	add	x11, x8, #0x10
00000000000479b0	ldp	x1, x9, [x23, #0x120]
00000000000479b4	sub	x2, x9, x1
00000000000479b8	sub	x19, x8, x2
00000000000479bc	cmp	x2, #0x1
00000000000479c0	b.lt	0x479d8
00000000000479c4	mov	x0, x19
00000000000479c8	str	x11, [sp, #0x8]
00000000000479cc	bl	0x554ac ; symbol stub for: _memcpy
00000000000479d0	ldp	x11, x8, [sp, #0x8]
00000000000479d4	ldr	x1, [x8]
00000000000479d8	stp	x19, x11, [x23, #0x120]
00000000000479dc	str	x20, [x23, #0x130]
00000000000479e0	adrp	x19, 51 ; 0x7a000
00000000000479e4	add	x19, x19, #0x2c0
00000000000479e8	cbz	x1, 0x479f4
00000000000479ec	mov	x0, x1
00000000000479f0	bl	0x55458 ; symbol stub for: _free
00000000000479f4	mov	x0, x22
00000000000479f8	bl	"_kfun:kotlin.native.MemoryModel.$OBJECT#<init>(){}"
00000000000479fc	mov	w0, #0x1
0000000000047a00	mov	w1, #0x28
0000000000047a04	bl	0x553d4 ; symbol stub for: _calloc
0000000000047a08	ldr	x8, [x23, #0x18]!
0000000000047a0c	sub	x9, x23, #0x8
0000000000047a10	stp	x21, x9, [x0, #0x10]
0000000000047a14	stp	x8, x23, [x0]
0000000000047a18	str	x0, [x8, #0x8]
0000000000047a1c	str	x0, [x23]
0000000000047a20	ldr	x8, [x23, #0x10]
0000000000047a24	add	x8, x8, #0x1
0000000000047a28	str	x8, [x23, #0x10]
0000000000047a2c	str	x0, [x0, #0x20]
0000000000047a30	stlr	x22, [x21]
0000000000047a34	ldr	x8, [x23, #0x110]
0000000000047a38	sub	x8, x8, #0x10
0000000000047a3c	str	x8, [x23, #0x110]
0000000000047a40	movi.16b	v0, #0x0
0000000000047a44	ldr	x20, [x22, #0x8]
0000000000047a48	stp	q0, q0, [x29, #-0x80]
0000000000047a4c	stur	xzr, [x29, #-0x60]
0000000000047a50	mov	x0, x19
0000000000047a54	blr	x26
0000000000047a58	ldr	x8, [x0]
0000000000047a5c	ldr	x9, [x8, #0x110]
0000000000047a60	sub	x10, x29, #0x80
0000000000047a64	str	x10, [x8, #0x110]
0000000000047a68	mov	x8, #0x500000000
0000000000047a6c	stp	x9, x8, [x29, #-0x78]
0000000000047a70	mov	x0, x19
0000000000047a74	ldr	w19, [x20, #0x8]
0000000000047a78	tbnz	w19, #0x1f, 0x47f60
0000000000047a7c	blr	x26
0000000000047a80	ldr	x8, [x0]
0000000000047a84	ldr	x8, [x8, #0x118]
0000000000047a88	lsl	x9, x19, #3
0000000000047a8c	add	x9, x9, #0x1f
0000000000047a90	and	x1, x9, #0xffffffff8
0000000000047a94	add	x0, x8, #0x70
0000000000047a98	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000047a9c	mov	x22, x0
0000000000047aa0	mov	x23, x0
0000000000047aa4	str	xzr, [x23, #0x10]!
0000000000047aa8	str	xzr, [x0, #0x18]
0000000000047aac	str	xzr, [x0, #0x8]
0000000000047ab0	adr	x8, #0x190d0
0000000000047ab4	nop
0000000000047ab8	str	x8, [x23]
0000000000047abc	str	w19, [x0, #0x18]
0000000000047ac0	stur	x23, [x29, #-0x68]
0000000000047ac4	ldr	w8, [x20, #0x8]
0000000000047ac8	add	x19, x20, #0x10
0000000000047acc	add	x20, x0, #0x20
0000000000047ad0	bic	w26, w8, w8, asr #31
0000000000047ad4	cbz	w26, 0x47b10
0000000000047ad8	ldarb	w8, [x24]
0000000000047adc	tbz	w8, #0x0, 0x47ae4
0000000000047ae0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000047ae4	ldr	x8, [x19]
0000000000047ae8	stur	x8, [x29, #-0x60]
0000000000047aec	ldrsw	x9, [x8, #0x10]
0000000000047af0	ldr	w10, [x22, #0x18]
0000000000047af4	cmp	w10, w9
0000000000047af8	b.ls	0x47f4c
0000000000047afc	ldr	xzr, [x23]
0000000000047b00	str	x8, [x20, x9, lsl #3]
0000000000047b04	sub	w26, w26, #0x1
0000000000047b08	add	x19, x19, #0x8
0000000000047b0c	cbnz	w26, 0x47ad8
0000000000047b10	ldr	x8, [x23]
0000000000047b14	and	x8, x8, #0xfffffffffffffffc
0000000000047b18	ldr	x8, [x8]
0000000000047b1c	ldr	w8, [x8, #0x5c]
0000000000047b20	cmp	w8, #0x49
0000000000047b24	b.ne	0x47f68
0000000000047b28	adrp	x19, 51 ; 0x7a000
0000000000047b2c	add	x19, x19, #0x2c0
0000000000047b30	mov	x0, x19
0000000000047b34	ldr	x26, [sp, #0x28]
0000000000047b38	blr	x26
0000000000047b3c	ldr	x8, [x0]
0000000000047b40	str	x23, [sp, #0xc8]
0000000000047b44	ldur	x9, [x29, #-0x98]
0000000000047b48	str	x9, [x8, #0x110]
0000000000047b4c	ldr	w9, [x22, #0x18]
0000000000047b50	cmp	w9, #0x2
0000000000047b54	b.ls	0x47f7c
0000000000047b58	ldr	x22, [x22, #0x30]
0000000000047b5c	str	x22, [sp, #0x78]
0000000000047b60	ldr	x9, [sp, #0xb8]
0000000000047b64	str	x9, [x8, #0x110]
0000000000047b68	ldar	x23, [x21]
0000000000047b6c	cmp	x23, #0x2
0000000000047b70	b.hs	0x47d60
0000000000047b74	mov	x0, x19
0000000000047b78	blr	x26
0000000000047b7c	ldr	x20, [x0]
0000000000047b80	ldp	x8, x9, [x20, #0x120]
0000000000047b84	cmp	x8, x9
0000000000047b88	b.eq	0x47ba8
0000000000047b8c	mov	x10, x9
0000000000047b90	ldr	x11, [x10, #-0x10]!
0000000000047b94	cmp	x11, x21
0000000000047b98	b.eq	0x47c6c
0000000000047b9c	mov	x9, x10
0000000000047ba0	cmp	x10, x8
0000000000047ba4	b.ne	0x47b90
0000000000047ba8	add	x8, x20, #0x120
0000000000047bac	str	x8, [sp, #0x10]
0000000000047bb0	add	x0, x20, #0x138
0000000000047bb4	mov	w9, #0x1
0000000000047bb8	ldaxr	w8, [x0]
0000000000047bbc	stlxr	w10, w9, [x0]
0000000000047bc0	cbnz	w10, 0x47bb8
0000000000047bc4	b	0x47bd4
0000000000047bc8	mov	w19, #0x1
0000000000047bcc	stlxr	w9, x19, [x21]
0000000000047bd0	cbz	w9, 0x47be4
0000000000047bd4	ldaxr	x23, [x21]
0000000000047bd8	cbz	x23, 0x47bc8
0000000000047bdc	mov	w19, #0x0
0000000000047be0	clrex
0000000000047be4	cmp	x23, #0x1
0000000000047be8	b.eq	0x47bd4
0000000000047bec	cbz	x20, 0x47c14
0000000000047bf0	ldaxr	w9, [x0]
0000000000047bf4	stlxr	w10, w8, [x0]
0000000000047bf8	cbnz	w10, 0x47bf0
0000000000047bfc	cbnz	w8, 0x47c14
0000000000047c00	cmp	w9, #0x1
0000000000047c04	b.ne	0x47c14
0000000000047c08	ldarb	w8, [x24]
0000000000047c0c	tbz	w8, #0x0, 0x47c14
0000000000047c10	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047c14	tbz	w19, #0x0, 0x47c5c
0000000000047c18	ldr	x8, [x20, #0x118]
0000000000047c1c	add	x0, x8, #0x70
0000000000047c20	mov	w1, #0x20
0000000000047c24	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000047c28	mov	x23, x0
0000000000047c2c	adr	x8, #0x1a694
0000000000047c30	nop
0000000000047c34	str	x8, [x23, #0x10]!
0000000000047c38	stur	xzr, [x23, #-0x8]
0000000000047c3c	str	x23, [sp, #0x80]
0000000000047c40	ldp	x9, x8, [x20, #0x128]
0000000000047c44	cmp	x9, x8
0000000000047c48	b.hs	0x47c78
0000000000047c4c	stp	x21, x23, [x9]
0000000000047c50	add	x8, x9, #0x10
0000000000047c54	str	x8, [x20, #0x128]
0000000000047c58	b	0x47d0c
0000000000047c5c	str	x23, [sp, #0x80]
0000000000047c60	adrp	x19, 51 ; 0x7a000
0000000000047c64	add	x19, x19, #0x2c0
0000000000047c68	b	0x47d60
0000000000047c6c	ldur	x23, [x9, #-0x8]
0000000000047c70	str	x23, [sp, #0x80]
0000000000047c74	b	0x47d60
0000000000047c78	ldr	x10, [sp, #0x10]
0000000000047c7c	ldr	x10, [x10]
0000000000047c80	sub	x9, x9, x10
0000000000047c84	asr	x19, x9, #4
0000000000047c88	add	x9, x19, #0x1
0000000000047c8c	lsr	x11, x9, #60
0000000000047c90	cbnz	x11, 0x47fa4
0000000000047c94	sub	x8, x8, x10
0000000000047c98	asr	x10, x8, #3
0000000000047c9c	cmp	x10, x9
0000000000047ca0	csel	x9, x9, x10, lo
0000000000047ca4	mov	x10, #0x7ffffffffffffff
0000000000047ca8	cmp	x10, x8, asr #4
0000000000047cac	mov	x8, #0xfffffffffffffff
0000000000047cb0	csel	x24, x9, x8, hi
0000000000047cb4	mov	x0, x24
0000000000047cb8	mov	w1, #0x10
0000000000047cbc	bl	0x553d4 ; symbol stub for: _calloc
0000000000047cc0	add	x8, x0, x19, lsl #4
0000000000047cc4	add	x19, x0, x24, lsl #4
0000000000047cc8	stp	x21, x23, [x8]
0000000000047ccc	add	x26, x8, #0x10
0000000000047cd0	ldp	x1, x9, [x20, #0x120]
0000000000047cd4	sub	x2, x9, x1
0000000000047cd8	sub	x24, x8, x2
0000000000047cdc	cmp	x2, #0x1
0000000000047ce0	b.lt	0x47cf4
0000000000047ce4	mov	x0, x24
0000000000047ce8	bl	0x554ac ; symbol stub for: _memcpy
0000000000047cec	ldr	x8, [sp, #0x10]
0000000000047cf0	ldr	x1, [x8]
0000000000047cf4	stp	x24, x26, [x20, #0x120]
0000000000047cf8	str	x19, [x20, #0x130]
0000000000047cfc	ldr	x26, [sp, #0x28]
0000000000047d00	cbz	x1, 0x47d0c
0000000000047d04	mov	x0, x1
0000000000047d08	bl	0x55458 ; symbol stub for: _free
0000000000047d0c	mov	x0, x23
0000000000047d10	adrp	x19, 51 ; 0x7a000
0000000000047d14	add	x19, x19, #0x2c0
0000000000047d18	bl	"_kfun:kotlin.native.MemoryModel.$OBJECT#<init>(){}"
0000000000047d1c	mov	w0, #0x1
0000000000047d20	mov	w1, #0x28
0000000000047d24	bl	0x553d4 ; symbol stub for: _calloc
0000000000047d28	ldr	x8, [x20, #0x18]!
0000000000047d2c	sub	x9, x20, #0x8
0000000000047d30	stp	x21, x9, [x0, #0x10]
0000000000047d34	stp	x8, x20, [x0]
0000000000047d38	str	x0, [x8, #0x8]
0000000000047d3c	str	x0, [x20]
0000000000047d40	ldr	x8, [x20, #0x10]
0000000000047d44	add	x8, x8, #0x1
0000000000047d48	str	x8, [x20, #0x10]
0000000000047d4c	str	x0, [x0, #0x20]
0000000000047d50	stlr	x23, [x21]
0000000000047d54	ldr	x8, [x20, #0x110]
0000000000047d58	sub	x8, x8, #0x10
0000000000047d5c	str	x8, [x20, #0x110]
0000000000047d60	ldr	x8, [x23, #0x8]
0000000000047d64	ldr	w9, [x8, #0x8]
0000000000047d68	cbz	w9, 0x47f84
0000000000047d6c	ldr	x1, [x8, #0x10]
0000000000047d70	str	x1, [sp, #0x88]
0000000000047d74	ldr	x8, [x22]
0000000000047d78	and	x8, x8, #0xfffffffffffffffc
0000000000047d7c	ldr	x8, [x8]
0000000000047d80	ldr	x8, [x8, #0x70]
0000000000047d84	mov	x0, x22
0000000000047d88	blr	x8
0000000000047d8c	ldr	x21, [sp, #0x20]
0000000000047d90	add	x23, sp, #0x30
0000000000047d94	mov	x22, x0
0000000000047d98	mov	x0, x19
0000000000047d9c	blr	x26
0000000000047da0	ldr	x8, [x0]
0000000000047da4	ldr	x8, [x8, #0x118]
0000000000047da8	add	x0, x8, #0x70
0000000000047dac	mov	w1, #0x20
0000000000047db0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000047db4	adr	x9, #0x1a59c
0000000000047db8	nop
0000000000047dbc	mov	x8, x0
0000000000047dc0	str	x9, [x8, #0x10]!
0000000000047dc4	str	xzr, [x0, #0x8]
0000000000047dc8	tbz	w22, #0x0, 0x47dd8
0000000000047dcc	str	x8, [sp, #0x90]
0000000000047dd0	str	xzr, [x0, #0x18]
0000000000047dd4	b	0x47de4
0000000000047dd8	str	x8, [sp, #0x98]
0000000000047ddc	str	xzr, [x0, #0x18]
0000000000047de0	str	x8, [sp, #0xa0]
0000000000047de4	ldr	x9, [sp, #0x18]
0000000000047de8	str	x8, [x9, #0x18]
0000000000047dec	mov	x0, x19
0000000000047df0	blr	x26
0000000000047df4	ldr	x8, [x0]
0000000000047df8	ldr	x9, [sp, #0x68]
0000000000047dfc	str	x9, [x8, #0x110]
0000000000047e00	mov	w0, #0x1
0000000000047e04	mov	w1, #0x28
0000000000047e08	bl	0x553d4 ; symbol stub for: _calloc
0000000000047e0c	ldr	x8, [x28, #0x18]!
0000000000047e10	sub	x9, x28, #0x8
0000000000047e14	stp	x27, x9, [x0, #0x10]
0000000000047e18	stp	x8, x28, [x0]
0000000000047e1c	str	x0, [x8, #0x8]
0000000000047e20	str	x0, [x28]
0000000000047e24	ldr	x8, [x28, #0x10]
0000000000047e28	add	x8, x8, #0x1
0000000000047e2c	str	x8, [x28, #0x10]
0000000000047e30	str	x0, [x0, #0x20]
0000000000047e34	stlr	x25, [x27]
0000000000047e38	ldr	x8, [x28, #0x110]
0000000000047e3c	sub	x8, x8, #0x10
0000000000047e40	str	x8, [x28, #0x110]
0000000000047e44	ldr	x8, [x25, #0x8]
0000000000047e48	add	x8, x8, #0x8
0000000000047e4c	ldar	x0, [x8]
0000000000047e50	str	x0, [sp, #0x50]
0000000000047e54	cbz	x0, 0x47f54
0000000000047e58	add	x2, x23, #0x28
0000000000047e5c	ldr	x8, [x0]
0000000000047e60	and	x8, x8, #0xfffffffffffffffc
0000000000047e64	ldr	x8, [x8]
0000000000047e68	ldr	w9, [x8, #0x3c]
0000000000047e6c	ldr	x8, [x8, #0x40]
0000000000047e70	tbnz	w9, #0x1f, 0x47e80
0000000000047e74	mov	w10, #0x2c
0000000000047e78	and	x9, x9, x10
0000000000047e7c	b	0x47f04
0000000000047e80	neg	w10, w9
0000000000047e84	mvn	w9, w9
0000000000047e88	cmp	w10, #0x9
0000000000047e8c	b.ge	0x47ec4
0000000000047e90	cmp	w10, #0x2
0000000000047e94	b.lt	0x47ef8
0000000000047e98	mov	x10, #0x0
0000000000047e9c	mov	x11, x8
0000000000047ea0	ldr	w12, [x11]
0000000000047ea4	cmp	w12, #0x2b
0000000000047ea8	b.gt	0x47f00
0000000000047eac	add	x10, x10, #0x1
0000000000047eb0	add	x11, x11, #0x10
0000000000047eb4	cmp	x9, x10
0000000000047eb8	b.ne	0x47ea0
0000000000047ebc	mov	x10, x9
0000000000047ec0	b	0x47f00
0000000000047ec4	mov	w10, #0x0
0000000000047ec8	add	w11, w9, w10
0000000000047ecc	cmp	w11, #0x0
0000000000047ed0	cinc	w11, w11, lt
0000000000047ed4	asr	w11, w11, #1
0000000000047ed8	sbfiz	x12, x11, #4, #32
0000000000047edc	ldr	w12, [x8, x12]
0000000000047ee0	cmp	w12, #0x2c
0000000000047ee4	csinc	w10, w10, w11, ge
0000000000047ee8	csel	w9, w9, w11, lt
0000000000047eec	cmp	w10, w9
0000000000047ef0	b.lt	0x47ec8
0000000000047ef4	b	0x47f00
0000000000047ef8	mov	w10, #0x0
0000000000047efc	b	0x47f00
0000000000047f00	sxtw	x9, w10
0000000000047f04	add	x8, x8, x9, lsl #4
0000000000047f08	ldr	x8, [x8, #0x8]
0000000000047f0c	ldr	x8, [x8]
0000000000047f10	mov	x1, x21
0000000000047f14	blr	x8
0000000000047f18	mov	x0, x19
0000000000047f1c	blr	x26
0000000000047f20	ldr	x8, [x0]
0000000000047f24	ldr	x9, [sp, #0x38]
0000000000047f28	str	x9, [x8, #0x110]
0000000000047f2c	ldp	x29, x30, [sp, #0x170]
0000000000047f30	ldp	x20, x19, [sp, #0x160]
0000000000047f34	ldp	x22, x21, [sp, #0x150]
0000000000047f38	ldp	x24, x23, [sp, #0x140]
0000000000047f3c	ldp	x26, x25, [sp, #0x130]
0000000000047f40	ldp	x28, x27, [sp, #0x120]
0000000000047f44	add	sp, sp, #0x180
0000000000047f48	ret
0000000000047f4c	bl	_ThrowArrayIndexOutOfBoundsException
0000000000047f50	b	0x4807c
0000000000047f54	mov	x0, x21
0000000000047f58	bl	_ThrowException
0000000000047f5c	b	0x4807c
0000000000047f60	bl	_ThrowIllegalArgumentException
0000000000047f64	b	0x4807c
0000000000047f68	adr	x1, #0x18c18
0000000000047f6c	nop
0000000000047f70	mov	x0, x23
0000000000047f74	bl	_ThrowClassCastException
0000000000047f78	b	0x4807c
0000000000047f7c	bl	_ThrowArrayIndexOutOfBoundsException
0000000000047f80	b	0x4807c
0000000000047f84	bl	_ThrowArrayIndexOutOfBoundsException
0000000000047f88	b	0x4807c
0000000000047f8c	mov	x0, x22
0000000000047f90	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000047f94	b	0x4807c
0000000000047f98	ldr	x0, [sp, #0x10]
0000000000047f9c	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000047fa0	b	0x4807c
0000000000047fa4	ldr	x0, [sp, #0x10]
0000000000047fa8	bl	0x551a0 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000047fac	b	0x4807c
0000000000047fb0	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000047fb4	str	xzr, [sp, #0x80]
0000000000047fb8	stlr	xzr, [x21]
0000000000047fbc	ldr	x8, [x20, #0x128]
0000000000047fc0	sub	x8, x8, #0x10
0000000000047fc4	str	x8, [x20, #0x128]
0000000000047fc8	bl	0x5535c ; symbol stub for: ___cxa_rethrow
0000000000047fcc	b	0x4807c
0000000000047fd0	b	0x47ff4
0000000000047fd4	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000047fd8	stur	xzr, [x29, #-0x88]
0000000000047fdc	stlr	xzr, [x21]
0000000000047fe0	ldr	x8, [x23, #0x128]
0000000000047fe4	sub	x8, x8, #0x10
0000000000047fe8	str	x8, [x23, #0x128]
0000000000047fec	bl	0x5535c ; symbol stub for: ___cxa_rethrow
0000000000047ff0	b	0x4807c
0000000000047ff4	mov	x20, x0
0000000000047ff8	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000047ffc	b	0x48014
0000000000048000	str	x26, [sp, #0x28]
0000000000048004	mov	x21, x1
0000000000048008	mov	x20, x0
000000000004800c	b	0x48044
0000000000048010	mov	x20, x0
0000000000048014	mov	x0, x20
0000000000048018	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
000000000004801c	str	xzr, [sp, #0x48]
0000000000048020	stlr	xzr, [x27]
0000000000048024	ldr	x8, [x28, #0x128]
0000000000048028	sub	x8, x8, #0x10
000000000004802c	str	x8, [x28, #0x128]
0000000000048030	bl	0x5535c ; symbol stub for: ___cxa_rethrow
0000000000048034	b	0x4807c
0000000000048038	mov	x21, x1
000000000004803c	mov	x20, x0
0000000000048040	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000048044	adrp	x0, 50 ; 0x7a000
0000000000048048	add	x0, x0, #0x2c0
000000000004804c	ldr	x8, [sp, #0x28]
0000000000048050	blr	x8
0000000000048054	ldr	x8, [x0]
0000000000048058	ldr	x9, [sp, #0x38]
000000000004805c	str	x9, [x8, #0x110]
0000000000048060	cmp	w21, #0x2
0000000000048064	b.ne	0x48088
0000000000048068	mov	x0, x20
000000000004806c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000048070	ldr	x8, [x0, #0x8]
0000000000048074	ldr	x0, [x8]
0000000000048078	bl	__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader
000000000004807c	brk	#0x1
0000000000048080	mov	x20, x0
0000000000048084	bl	0x55338 ; symbol stub for: ___cxa_end_catch
0000000000048088	mov	x0, x20
000000000004808c	bl	___clang_call_terminate
__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader:
0000000000048090	stp	x29, x30, [sp, #-0x10]!
0000000000048094	mov	x29, sp
0000000000048098	bl	__ZN12_GLOBAL__N_13$_0clIZNS_31terminateWithUnhandledExceptionEP9ObjHeaderE3$_1EEvT_
__ZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEv:
000000000004809c	stp	x29, x30, [sp, #-0x10]!
00000000000480a0	mov	x29, sp
00000000000480a4	bl	__ZN12_GLOBAL__N_13$_0clIZNS_16TerminateHandler13queuedHandlerEvEUlvE_EEvT_
__ZN12_GLOBAL__N_13$_0clIZNS_16TerminateHandler13queuedHandlerEvEUlvE_EEvT_:
00000000000480a8	sub	sp, sp, #0x50
00000000000480ac	stp	x22, x21, [sp, #0x20]
00000000000480b0	stp	x20, x19, [sp, #0x30]
00000000000480b4	stp	x29, x30, [sp, #0x40]
00000000000480b8	add	x29, sp, #0x40
00000000000480bc	adr	x8, #0x30d98
00000000000480c0	nop
00000000000480c4	mov	w9, #0x1
00000000000480c8	ldaxr	w10, [x8]
00000000000480cc	cbnz	w10, 0x480dc
00000000000480d0	stlxr	w10, w9, [x8]
00000000000480d4	cbnz	w10, 0x480c8
00000000000480d8	bl	__ZZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEvENKUlvE_clEv
00000000000480dc	clrex
00000000000480e0	str	xzr, [sp, #0x10]
00000000000480e4	mov	w20, #0x1
00000000000480e8	str	w20, [sp, #0x18]
00000000000480ec	strb	wzr, [sp, #0x1c]
00000000000480f0	adrp	x0, 50 ; 0x7a000
00000000000480f4	add	x0, x0, #0x2c0
00000000000480f8	ldr	x8, [x0]
00000000000480fc	blr	x8
0000000000048100	ldr	x21, [x0]
0000000000048104	cbz	x21, 0x4812c
0000000000048108	add	x8, x21, #0x138
000000000004810c	mov	w9, #0x1
0000000000048110	ldaxr	w20, [x8]
0000000000048114	stlxr	w10, w9, [x8]
0000000000048118	cbnz	w10, 0x48110
000000000004811c	str	x21, [sp, #0x10]
0000000000048120	str	w20, [sp, #0x18]
0000000000048124	mov	w8, #0x1
0000000000048128	strb	w8, [sp, #0x1c]
000000000004812c	nop
0000000000048130	ldr	w0, __ZN12_GLOBAL__N_126concurrentTerminateWrapperE
0000000000048134	bl	0x5571c ; symbol stub for: _sleep
0000000000048138	add	x0, sp, #0x8
000000000004813c	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
0000000000048140	mov	w0, #0x1
0000000000048144	bl	0x5517c ; symbol stub for: __Exit
0000000000048148	mov	x19, x0
000000000004814c	cbz	x21, 0x48180
0000000000048150	add	x0, x21, #0x138
0000000000048154	ldaxr	w8, [x0]
0000000000048158	stlxr	w9, w20, [x0]
000000000004815c	cbnz	w9, 0x48154
0000000000048160	cbnz	w20, 0x48180
0000000000048164	cmp	w8, #0x1
0000000000048168	b.ne	0x48180
000000000004816c	adr	x8, #0x4c11d
0000000000048170	nop
0000000000048174	ldarb	w8, [x8]
0000000000048178	tbz	w8, #0x0, 0x48180
000000000004817c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048180	mov	x0, x19
0000000000048184	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEvENKUlvE_clEv:
0000000000048188	stp	x29, x30, [sp, #-0x10]!
000000000004818c	mov	x29, sp
0000000000048190	bl	__ZN12_GLOBAL__N_116TerminateHandler8instanceEv
0000000000048194	nop
0000000000048198	ldr	x8, #0x4c378
000000000004819c	blr	x8
__ZN12_GLOBAL__N_116TerminateHandler8instanceEv:
00000000000481a0	stp	x20, x19, [sp, #-0x20]!
00000000000481a4	stp	x29, x30, [sp, #0x10]
00000000000481a8	add	x29, sp, #0x10
00000000000481ac	adr	x8, #0x4c35c
00000000000481b0	nop
00000000000481b4	ldarb	w8, [x8]
00000000000481b8	tbz	w8, #0x0, 0x481c8
00000000000481bc	ldp	x29, x30, [sp, #0x10]
00000000000481c0	ldp	x20, x19, [sp], #0x20
00000000000481c4	ret
00000000000481c8	adr	x19, #0x4c340
00000000000481cc	nop
00000000000481d0	mov	x0, x19
00000000000481d4	bl	0x55344 ; symbol stub for: ___cxa_guard_acquire
00000000000481d8	cbz	w0, 0x481bc
00000000000481dc	adr	x0, #-0xe28
00000000000481e0	nop
00000000000481e4	bl	0x552d8 ; symbol stub for: __ZSt13set_terminatePFvvE
00000000000481e8	str	x0, [x19, #0x8]
00000000000481ec	mov	x0, x19
00000000000481f0	ldp	x29, x30, [sp, #0x10]
00000000000481f4	ldp	x20, x19, [sp], #0x20
00000000000481f8	b	0x55350 ; symbol stub for: ___cxa_guard_release
__ZN12_GLOBAL__N_13$_0clIZNS_31terminateWithUnhandledExceptionEP9ObjHeaderE3$_1EEvT_:
00000000000481fc	sub	sp, sp, #0x50
0000000000048200	stp	x22, x21, [sp, #0x20]
0000000000048204	stp	x20, x19, [sp, #0x30]
0000000000048208	stp	x29, x30, [sp, #0x40]
000000000004820c	add	x29, sp, #0x40
0000000000048210	str	x0, [sp, #0x18]
0000000000048214	adr	x8, #0x30c40
0000000000048218	nop
000000000004821c	mov	w9, #0x1
0000000000048220	ldaxr	w10, [x8]
0000000000048224	cbnz	w10, 0x48238
0000000000048228	stlxr	w10, w9, [x8]
000000000004822c	cbnz	w10, 0x48220
0000000000048230	add	x0, sp, #0x18
0000000000048234	bl	__ZZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeaderENK3$_1clEv
0000000000048238	clrex
000000000004823c	str	xzr, [sp, #0x8]
0000000000048240	mov	w20, #0x1
0000000000048244	str	w20, [sp, #0x10]
0000000000048248	strb	wzr, [sp, #0x14]
000000000004824c	adrp	x0, 50 ; 0x7a000
0000000000048250	add	x0, x0, #0x2c0
0000000000048254	ldr	x8, [x0]
0000000000048258	blr	x8
000000000004825c	ldr	x21, [x0]
0000000000048260	cbz	x21, 0x48288
0000000000048264	add	x8, x21, #0x138
0000000000048268	mov	w9, #0x1
000000000004826c	ldaxr	w20, [x8]
0000000000048270	stlxr	w10, w9, [x8]
0000000000048274	cbnz	w10, 0x4826c
0000000000048278	str	x21, [sp, #0x8]
000000000004827c	str	w20, [sp, #0x10]
0000000000048280	mov	w8, #0x1
0000000000048284	strb	w8, [sp, #0x14]
0000000000048288	nop
000000000004828c	ldr	w0, __ZN12_GLOBAL__N_126concurrentTerminateWrapperE
0000000000048290	bl	0x5571c ; symbol stub for: _sleep
0000000000048294	mov	x0, sp
0000000000048298	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
000000000004829c	mov	w0, #0x1
00000000000482a0	bl	0x5517c ; symbol stub for: __Exit
00000000000482a4	mov	x19, x0
00000000000482a8	cbz	x21, 0x482dc
00000000000482ac	add	x0, x21, #0x138
00000000000482b0	ldaxr	w8, [x0]
00000000000482b4	stlxr	w9, w20, [x0]
00000000000482b8	cbnz	w9, 0x482b0
00000000000482bc	cbnz	w20, 0x482dc
00000000000482c0	cmp	w8, #0x1
00000000000482c4	b.ne	0x482dc
00000000000482c8	adr	x8, #0x4bfc1
00000000000482cc	nop
00000000000482d0	ldarb	w8, [x8]
00000000000482d4	tbz	w8, #0x0, 0x482dc
00000000000482d8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000482dc	mov	x0, x19
00000000000482e0	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeaderENK3$_1clEv:
00000000000482e4	stp	x20, x19, [sp, #-0x20]!
00000000000482e8	stp	x29, x30, [sp, #0x10]
00000000000482ec	add	x29, sp, #0x10
00000000000482f0	mov	x19, x0
00000000000482f4	ldr	x0, [x0]
00000000000482f8	bl	_ReportUnhandledException
00000000000482fc	ldr	x0, [x19]
0000000000048300	bl	__Z28ReportBacktraceToIosCrashLogP9ObjHeader
0000000000048304	bl	__ZN5konan5abortEv
__Z28ReportBacktraceToIosCrashLogP9ObjHeader:
0000000000048308	sub	sp, sp, #0xb0
000000000004830c	stp	x28, x27, [sp, #0x50]
0000000000048310	stp	x26, x25, [sp, #0x60]
0000000000048314	stp	x24, x23, [sp, #0x70]
0000000000048318	stp	x22, x21, [sp, #0x80]
000000000004831c	stp	x20, x19, [sp, #0x90]
0000000000048320	stp	x29, x30, [sp, #0xa0]
0000000000048324	add	x29, sp, #0xa0
0000000000048328	mov	x19, x0
000000000004832c	nop
0000000000048330	ldr	x0, #0x17cd0 ; literal pool symbol address: _CFRunLoopRun
0000000000048334	add	x1, sp, #0x18
0000000000048338	bl	0x55440 ; symbol stub for: _dladdr
000000000004833c	ldr	x24, [sp, #0x20]
0000000000048340	cmp	w0, #0x0
0000000000048344	ccmp	x24, #0x0, #0x4, ne
0000000000048348	b.eq	0x48548
000000000004834c	ldr	w8, [x24]
0000000000048350	mov	w9, #0xfacf
0000000000048354	movk	w9, #0xfeed, lsl #16
0000000000048358	cmp	w8, w9
000000000004835c	b.ne	0x48548
0000000000048360	ldr	w25, [x24, #0x10]
0000000000048364	cbz	w25, 0x48548
0000000000048368	str	xzr, [sp, #0x10]
000000000004836c	mov	w27, #0x0
0000000000048370	add	x28, x24, #0x20
0000000000048374	adr	x20, #0x1676c ; literal pool for: "__TEXT"
0000000000048378	nop
000000000004837c	adr	x21, #0x1676b ; literal pool for: "__DATA"
0000000000048380	nop
0000000000048384	adr	x22, #0x1676a ; literal pool for: "__cf_except_bt"
0000000000048388	nop
000000000004838c	b	0x483a4
0000000000048390	ldr	w8, [x28, #0x4]
0000000000048394	add	x28, x8, x28
0000000000048398	add	w27, w27, #0x1
000000000004839c	cmp	w27, w25
00000000000483a0	b.eq	0x48548
00000000000483a4	ldr	w8, [x28]
00000000000483a8	cmp	w8, #0x19
00000000000483ac	b.ne	0x48390
00000000000483b0	add	x23, x28, #0x8
00000000000483b4	mov	x0, x23
00000000000483b8	mov	x1, x20
00000000000483bc	mov	w2, #0x10
00000000000483c0	bl	0x55758 ; symbol stub for: _strncmp
00000000000483c4	cbz	w0, 0x483e0
00000000000483c8	mov	x0, x23
00000000000483cc	mov	x1, x21
00000000000483d0	mov	w2, #0x10
00000000000483d4	bl	0x55758 ; symbol stub for: _strncmp
00000000000483d8	cbnz	w0, 0x48390
00000000000483dc	b	0x483fc
00000000000483e0	ldr	x8, [x28, #0x18]
00000000000483e4	str	x8, [sp, #0x10]
00000000000483e8	mov	x0, x23
00000000000483ec	mov	x1, x21
00000000000483f0	mov	w2, #0x10
00000000000483f4	bl	0x55758 ; symbol stub for: _strncmp
00000000000483f8	cbnz	w0, 0x48390
00000000000483fc	ldr	w26, [x28, #0x40]
0000000000048400	cbz	w26, 0x48390
0000000000048404	add	x23, x28, #0x48
0000000000048408	b	0x48418
000000000004840c	add	x23, x23, #0x50
0000000000048410	subs	x26, x26, #0x1
0000000000048414	b.eq	0x48390
0000000000048418	mov	x0, x23
000000000004841c	mov	x1, x22
0000000000048420	mov	w2, #0x10
0000000000048424	bl	0x55758 ; symbol stub for: _strncmp
0000000000048428	cbnz	w0, 0x4840c
000000000004842c	add	x0, x23, #0x10
0000000000048430	mov	x1, x21
0000000000048434	mov	w2, #0x10
0000000000048438	bl	0x55758 ; symbol stub for: _strncmp
000000000004843c	cbnz	w0, 0x4840c
0000000000048440	ldp	x8, x22, [x23, #0x20]
0000000000048444	ldr	x9, [sp, #0x10]
0000000000048448	sub	x9, x24, x9
000000000004844c	add	x20, x8, x9
0000000000048450	cmp	x22, #0x2
0000000000048454	ccmp	x20, #0x0, #0x4, hs
0000000000048458	b.eq	0x48548
000000000004845c	str	xzr, [sp, #0x30]
0000000000048460	adrp	x21, 50 ; 0x7a000
0000000000048464	add	x21, x21, #0x2c0
0000000000048468	ldr	x23, [x21]
000000000004846c	mov	x0, x21
0000000000048470	blr	x23
0000000000048474	ldr	x8, [x0]
0000000000048478	ldr	x9, [x8, #0x110]
000000000004847c	mov	x10, #0x400000000
0000000000048480	stp	x9, x10, [sp, #0x20]
0000000000048484	add	x9, sp, #0x18
0000000000048488	stp	xzr, x9, [sp, #0x38]
000000000004848c	add	x9, sp, #0x38
0000000000048490	str	x9, [x8, #0x110]
0000000000048494	mov	x8, #0x300000000
0000000000048498	str	x8, [sp, #0x48]
000000000004849c	adr	x8, #0x4bded
00000000000484a0	nop
00000000000484a4	ldarb	w8, [x8]
00000000000484a8	tbz	w8, #0x0, 0x484b0
00000000000484ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000484b0	ldr	x24, [x19, #0x18]
00000000000484b4	str	x24, [sp, #0x30]
00000000000484b8	mov	x0, x21
00000000000484bc	blr	x23
00000000000484c0	ldr	x8, [x0]
00000000000484c4	ldr	x9, [sp, #0x40]
00000000000484c8	str	x9, [x8, #0x110]
00000000000484cc	mov	w8, #0x28
00000000000484d0	strb	w8, [x20], #0x1
00000000000484d4	ldr	w8, [x24, #0x8]
00000000000484d8	cbz	w8, 0x4852c
00000000000484dc	mov	w25, #0x0
00000000000484e0	add	x26, x24, #0x10
00000000000484e4	sub	x19, x22, #0x1
00000000000484e8	adr	x22, #0x16615 ; literal pool for: "0x%lx "
00000000000484ec	nop
00000000000484f0	ldr	x8, [x26, w25, sxtw #3]
00000000000484f4	str	x8, [sp]
00000000000484f8	mov	x0, x20
00000000000484fc	mov	x1, x19
0000000000048500	mov	x2, x22
0000000000048504	bl	0x55728 ; symbol stub for: _snprintf
0000000000048508	tbnz	w0, #0x1f, 0x4852c
000000000004850c	mov	w8, w0
0000000000048510	subs	x19, x19, x8
0000000000048514	b.ls	0x4852c
0000000000048518	add	x20, x20, x8
000000000004851c	add	w25, w25, #0x1
0000000000048520	ldr	w8, [x24, #0x8]
0000000000048524	cmp	w25, w8
0000000000048528	b.lo	0x484f0
000000000004852c	mov	w8, #0x29
0000000000048530	sturh	w8, [x20, #-0x1]
0000000000048534	mov	x0, x21
0000000000048538	blr	x23
000000000004853c	ldr	x8, [x0]
0000000000048540	ldr	x9, [sp, #0x20]
0000000000048544	str	x9, [x8, #0x110]
0000000000048548	ldp	x29, x30, [sp, #0xa0]
000000000004854c	ldp	x20, x19, [sp, #0x90]
0000000000048550	ldp	x22, x21, [sp, #0x80]
0000000000048554	ldp	x24, x23, [sp, #0x70]
0000000000048558	ldp	x26, x25, [sp, #0x60]
000000000004855c	ldp	x28, x27, [sp, #0x50]
0000000000048560	add	sp, sp, #0xb0
0000000000048564	ret
_Kotlin_ObjCExport_refToObjC:
0000000000048568	stp	x29, x30, [sp, #-0x10]!
000000000004856c	mov	x29, sp
0000000000048570	cbz	x0, 0x485d0
0000000000048574	ldar	x8, [x0]
0000000000048578	and	x8, x8, #0xfffffffffffffffc
000000000004857c	ldr	x9, [x8]
0000000000048580	cmp	x8, #0x0
0000000000048584	ccmp	x9, x8, #0x4, ne
0000000000048588	b.eq	0x485a8
000000000004858c	add	x8, x8, #0x10
0000000000048590	ldar	x8, [x8]
0000000000048594	cbz	x8, 0x485a8
0000000000048598	mov	x0, x8
000000000004859c	bl	0x555b4 ; symbol stub for: _objc_retain
00000000000485a0	ldp	x29, x30, [sp], #0x10
00000000000485a4	b	0x55524 ; symbol stub for: _objc_autorelease
00000000000485a8	ldr	x8, [x0]
00000000000485ac	and	x8, x8, #0xfffffffffffffffc
00000000000485b0	ldr	x8, [x8]
00000000000485b4	ldr	x8, [x8, #0x60]
00000000000485b8	ldr	x8, [x8]
00000000000485bc	cbz	x8, 0x485cc
00000000000485c0	blr	x8
00000000000485c4	ldp	x29, x30, [sp], #0x10
00000000000485c8	b	0x55524 ; symbol stub for: _objc_autorelease
00000000000485cc	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
00000000000485d0	ldp	x29, x30, [sp], #0x10
00000000000485d4	b	0x55524 ; symbol stub for: _objc_autorelease
__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader:
00000000000485d8	sub	sp, sp, #0x70
00000000000485dc	stp	x28, x27, [sp, #0x10]
00000000000485e0	stp	x26, x25, [sp, #0x20]
00000000000485e4	stp	x24, x23, [sp, #0x30]
00000000000485e8	stp	x22, x21, [sp, #0x40]
00000000000485ec	stp	x20, x19, [sp, #0x50]
00000000000485f0	stp	x29, x30, [sp, #0x60]
00000000000485f4	add	x29, sp, #0x60
00000000000485f8	mov	x19, x0
00000000000485fc	ldr	x8, [x0]
0000000000048600	and	x8, x8, #0xfffffffffffffffc
0000000000048604	ldr	x20, [x8]
0000000000048608	ldr	w8, [x20, #0x38]
000000000004860c	cmp	w8, #0x1
0000000000048610	b.lt	0x48778
0000000000048614	mov	x26, #0x0
0000000000048618	mov	x28, #0x0
000000000004861c	nop
0000000000048620	ldr	x9, #0x179e8 ; literal pool symbol address: _NSGenericException
0000000000048624	ldr	x21, [x9]
0000000000048628	nop
000000000004862c	ldr	x22, #0x2e404 ; Objc selector ref: raise:format:
0000000000048630	adr	x23, #0x29360 ; Objc cfstring ref: @"bad cfstring ref"
0000000000048634	nop
0000000000048638	b	0x4864c
000000000004863c	mov	x28, x27
0000000000048640	add	x26, x26, #0x1
0000000000048644	cmp	x26, w8, sxtw
0000000000048648	b.ge	0x48768
000000000004864c	ldr	x9, [x20, #0x30]
0000000000048650	ldr	x27, [x9, x26, lsl #3]
0000000000048654	ldrb	w9, [x27, #0x58]
0000000000048658	tbnz	w9, #0x5, 0x48778
000000000004865c	ldr	x9, [x27, #0x60]
0000000000048660	ldr	x9, [x9]
0000000000048664	cbz	x9, 0x48640
0000000000048668	cbz	x28, 0x4863c
000000000004866c	ldrsw	x9, [x27, #0x38]
0000000000048670	cmp	w9, #0x1
0000000000048674	b.lt	0x48694
0000000000048678	ldr	x10, [x27, #0x30]
000000000004867c	ldr	x11, [x10]
0000000000048680	cmp	x11, x28
0000000000048684	b.eq	0x4863c
0000000000048688	add	x10, x10, #0x8
000000000004868c	subs	x9, x9, #0x1
0000000000048690	b.ne	0x4867c
0000000000048694	ldrsw	x9, [x28, #0x38]
0000000000048698	cmp	w9, #0x1
000000000004869c	b.lt	0x486bc
00000000000486a0	ldr	x10, [x28, #0x30]
00000000000486a4	ldr	x11, [x10]
00000000000486a8	cmp	x11, x27
00000000000486ac	b.eq	0x48640
00000000000486b0	add	x10, x10, #0x8
00000000000486b4	subs	x9, x9, #0x1
00000000000486b8	b.ne	0x486a4
00000000000486bc	nop
00000000000486c0	ldr	x24, #0x2e5b8 ; Objc class ref: _OBJC_CLASS_$_NSException
00000000000486c4	ldr	x0, [x28, #0x50]
00000000000486c8	cbz	x0, 0x48738
00000000000486cc	ldar	x8, [x0]
00000000000486d0	and	x8, x8, #0xfffffffffffffffc
00000000000486d4	ldr	x9, [x8]
00000000000486d8	cmp	x8, #0x0
00000000000486dc	ccmp	x9, x8, #0x4, ne
00000000000486e0	b.eq	0x486f0
00000000000486e4	add	x8, x8, #0x10
00000000000486e8	ldar	x25, [x8]
00000000000486ec	cbnz	x25, 0x486fc
00000000000486f0	bl	_Kotlin_ObjCExport_CreateRetainedNSStringFromKString
00000000000486f4	bl	0x55524 ; symbol stub for: _objc_autorelease
00000000000486f8	mov	x25, x0
00000000000486fc	ldr	x0, [x27, #0x50]
0000000000048700	cbz	x0, 0x48744
0000000000048704	ldar	x8, [x0]
0000000000048708	and	x8, x8, #0xfffffffffffffffc
000000000004870c	ldr	x9, [x8]
0000000000048710	cmp	x8, #0x0
0000000000048714	ccmp	x9, x8, #0x4, ne
0000000000048718	b.eq	0x48728
000000000004871c	add	x8, x8, #0x10
0000000000048720	ldar	x8, [x8]
0000000000048724	cbnz	x8, 0x48748
0000000000048728	bl	_Kotlin_ObjCExport_CreateRetainedNSStringFromKString
000000000004872c	bl	0x55524 ; symbol stub for: _objc_autorelease
0000000000048730	mov	x8, x0
0000000000048734	b	0x48748
0000000000048738	mov	x25, #0x0
000000000004873c	ldr	x0, [x27, #0x50]
0000000000048740	cbnz	x0, 0x48704
0000000000048744	mov	x8, #0x0
0000000000048748	stp	x25, x8, [sp]
000000000004874c	mov	x0, x24
0000000000048750	mov	x1, x22
0000000000048754	mov	x2, x21
0000000000048758	mov	x3, x23
000000000004875c	bl	0x55584 ; Objc message: +[NSException raise:format:]
0000000000048760	ldr	w8, [x20, #0x38]
0000000000048764	b	0x48640
0000000000048768	cbz	x28, 0x48778
000000000004876c	ldr	x8, [x28, #0x60]
0000000000048770	ldr	x1, [x8]
0000000000048774	cbnz	x1, 0x487a0
0000000000048778	mov	x0, x20
000000000004877c	bl	__ZL16getOrCreateClassPK8TypeInfo
0000000000048780	adr	x8, #0x199b0
0000000000048784	nop
0000000000048788	adr	x9, #0x708
000000000004878c	nop
0000000000048790	adr	x10, #0x67c
0000000000048794	nop
0000000000048798	cmp	x20, x8
000000000004879c	csel	x1, x10, x9, eq
00000000000487a0	ldr	x8, [x20, #0x60]
00000000000487a4	str	x1, [x8]
00000000000487a8	mov	x0, x19
00000000000487ac	ldp	x29, x30, [sp, #0x60]
00000000000487b0	ldp	x20, x19, [sp, #0x50]
00000000000487b4	ldp	x22, x21, [sp, #0x40]
00000000000487b8	ldp	x24, x23, [sp, #0x30]
00000000000487bc	ldp	x26, x25, [sp, #0x20]
00000000000487c0	ldp	x28, x27, [sp, #0x10]
00000000000487c4	add	sp, sp, #0x70
00000000000487c8	br	x1
__ZL16getOrCreateClassPK8TypeInfo:
00000000000487cc	sub	sp, sp, #0xc0
00000000000487d0	stp	x28, x27, [sp, #0x60]
00000000000487d4	stp	x26, x25, [sp, #0x70]
00000000000487d8	stp	x24, x23, [sp, #0x80]
00000000000487dc	stp	x22, x21, [sp, #0x90]
00000000000487e0	stp	x20, x19, [sp, #0xa0]
00000000000487e4	stp	x29, x30, [sp, #0xb0]
00000000000487e8	add	x29, sp, #0xb0
00000000000487ec	ldr	x8, [x0, #0x60]
00000000000487f0	ldr	x21, [x8, #0x8]
00000000000487f4	cbnz	x21, 0x48ca4
00000000000487f8	mov	x20, x0
00000000000487fc	ldr	x8, [x8, #0x10]
0000000000048800	cbz	x8, 0x4881c
0000000000048804	ldr	x0, [x8, #0x28]
0000000000048808	bl	0x55560 ; symbol stub for: _objc_getClass
000000000004880c	mov	x21, x0
0000000000048810	ldr	x8, [x20, #0x60]
0000000000048814	str	x0, [x8, #0x8]
0000000000048818	b	0x48ca4
000000000004881c	ldr	x0, [x20, #0x18]
0000000000048820	bl	__ZL16getOrCreateClassPK8TypeInfo
0000000000048824	mov	x23, x0
0000000000048828	adr	x19, #0x4ba6c
000000000004882c	nop
0000000000048830	mov	x0, x19
0000000000048834	bl	__ZN6kotlin8SpinLockILNS_24MutexThreadStateHandlingE1EE4lockEv
0000000000048838	ldr	x8, [x20, #0x60]
000000000004883c	ldr	x21, [x8, #0x8]
0000000000048840	cbnz	x21, 0x48ca0
0000000000048844	adrp	x0, 50 ; 0x7a000
0000000000048848	add	x0, x0, #0x2c0
000000000004884c	ldr	x26, [x0]
0000000000048850	blr	x26
0000000000048854	ldr	x8, [x0]
0000000000048858	cbz	x8, 0x48878
000000000004885c	str	x8, [sp, #0x8]
0000000000048860	add	x8, x8, #0x138
0000000000048864	mov	w9, #0x1
0000000000048868	ldaxr	w24, [x8]
000000000004886c	stlxr	w10, w9, [x8]
0000000000048870	cbnz	w10, 0x48868
0000000000048874	b	0x48880
0000000000048878	str	xzr, [sp, #0x8]
000000000004887c	mov	w24, #0x1
0000000000048880	adrp	x8, 76 ; 0x94000
0000000000048884	ldr	w21, [x8, #0x2ac]
0000000000048888	add	w9, w21, #0x1
000000000004888c	str	w9, [x8, #0x2ac]
0000000000048890	mov	w8, #0x8
0000000000048894	strb	w8, [sp, #0x57]
0000000000048898	mov	x8, #0x6146
000000000004889c	movk	x8, #0x7473, lsl #16
00000000000488a0	movk	x8, #0x4b61, lsl #32
00000000000488a4	movk	x8, #0x6d6d, lsl #48
00000000000488a8	str	x8, [sp, #0x40]
00000000000488ac	strb	wzr, [sp, #0x48]
00000000000488b0	adr	x1, #0x16254 ; literal pool for: "_kobjcc"
00000000000488b4	nop
00000000000488b8	add	x0, sp, #0x40
00000000000488bc	mov	w2, #0x7
00000000000488c0	bl	__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE6appendEPKcm
00000000000488c4	add	x19, sp, #0x10
00000000000488c8	add	x8, sp, #0x10
00000000000488cc	mov	x0, x21
00000000000488d0	bl	0x552c0 ; symbol stub for: __ZNSt3__19to_stringEi
00000000000488d4	ldrb	w8, [sp, #0x27]
00000000000488d8	sxtb	w9, w8
00000000000488dc	ldp	x10, x11, [sp, #0x10]
00000000000488e0	cmp	w9, #0x0
00000000000488e4	csel	x1, x10, x19, lt
00000000000488e8	csel	x2, x11, x8, lt
00000000000488ec	add	x0, sp, #0x40
00000000000488f0	bl	__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE6appendEPKcm
00000000000488f4	ldrsb	w8, [sp, #0x27]
00000000000488f8	tbz	w8, #0x1f, 0x48904
00000000000488fc	ldr	x0, [sp, #0x10]
0000000000048900	bl	0x55308 ; symbol stub for: __ZdlPv
0000000000048904	ldrsb	w8, [sp, #0x57]
0000000000048908	ldr	x9, [sp, #0x40]
000000000004890c	cmp	w8, #0x0
0000000000048910	add	x8, sp, #0x40
0000000000048914	csel	x1, x9, x8, lt
0000000000048918	mov	x0, x23
000000000004891c	mov	x2, #0x0
0000000000048920	bl	0x55518 ; symbol stub for: _objc_allocateClassPair
0000000000048924	mov	x21, x0
0000000000048928	cbz	x0, 0x48cc8
000000000004892c	ldr	x22, [x20, #0x18]
0000000000048930	ldr	x8, [x22, #0x60]
0000000000048934	ldr	x23, [x8, #0x10]
0000000000048938	str	x26, [sp]
000000000004893c	cbz	x23, 0x489a8
0000000000048940	cbz	x23, 0x4898c
0000000000048944	ldr	w8, [x23, #0x58]
0000000000048948	cmp	w8, #0x1
000000000004894c	b.lt	0x4898c
0000000000048950	mov	x27, #0x0
0000000000048954	mov	x19, #0x0
0000000000048958	ldr	x25, [x23, #0x50]
000000000004895c	ldr	x0, [x25, x27]
0000000000048960	bl	0x55710 ; symbol stub for: _sel_registerName
0000000000048964	mov	x1, x0
0000000000048968	add	x8, x25, x27
000000000004896c	ldp	x3, x2, [x8, #0x8]
0000000000048970	mov	x0, x21
0000000000048974	bl	0x553e0 ; symbol stub for: _class_addMethod
0000000000048978	add	x19, x19, #0x1
000000000004897c	ldrsw	x8, [x23, #0x58]
0000000000048980	add	x27, x27, #0x18
0000000000048984	cmp	x19, x8
0000000000048988	b.lt	0x48958
000000000004898c	ldr	x22, [x22, #0x18]
0000000000048990	cbz	x22, 0x489a4
0000000000048994	ldr	x8, [x22, #0x60]
0000000000048998	ldr	x23, [x8, #0x10]
000000000004899c	cbnz	x23, 0x48944
00000000000489a0	b	0x4898c
00000000000489a4	ldr	x22, [x20, #0x18]
00000000000489a8	ldr	x23, [x22, #0x30]
00000000000489ac	ldrsw	x8, [x22, #0x38]
00000000000489b0	movi.16b	v0, #0x0
00000000000489b4	stp	q0, q0, [sp, #0x10]
00000000000489b8	mov	w9, #0x3f800000
00000000000489bc	str	w9, [sp, #0x30]
00000000000489c0	cbz	w8, 0x489e4
00000000000489c4	lsl	x19, x8, #3
00000000000489c8	ldr	x1, [x23]
00000000000489cc	add	x0, sp, #0x10
00000000000489d0	mov	x2, x23
00000000000489d4	bl	__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_
00000000000489d8	add	x23, x23, #0x8
00000000000489dc	subs	x19, x19, #0x8
00000000000489e0	b.ne	0x489c8
00000000000489e4	ldr	w8, [x20, #0x38]
00000000000489e8	cmp	w8, #0x1
00000000000489ec	b.lt	0x48b70
00000000000489f0	mov	x27, #0x0
00000000000489f4	mov	x28, #0x2d69
00000000000489f8	movk	x28, #0xeb38, lsl #16
00000000000489fc	movk	x28, #0xea08, lsl #32
0000000000048a00	movk	x28, #0x9ddf, lsl #48
0000000000048a04	b	0x48a18
0000000000048a08	add	x27, x27, #0x1
0000000000048a0c	ldrsw	x8, [x20, #0x38]
0000000000048a10	cmp	x27, x8
0000000000048a14	b.ge	0x48b70
0000000000048a18	ldr	x8, [x20, #0x30]
0000000000048a1c	ldr	x23, [x8, x27, lsl #3]
0000000000048a20	ldr	x8, [x23, #0x60]
0000000000048a24	ldr	x22, [x8, #0x10]
0000000000048a28	cbz	x22, 0x48a08
0000000000048a2c	ldr	w8, [x22, #0x58]
0000000000048a30	cmp	w8, #0x1
0000000000048a34	b.lt	0x48a74
0000000000048a38	mov	x19, #0x0
0000000000048a3c	mov	x25, #0x0
0000000000048a40	ldr	x26, [x22, #0x50]
0000000000048a44	ldr	x0, [x26, x19]
0000000000048a48	bl	0x55710 ; symbol stub for: _sel_registerName
0000000000048a4c	mov	x1, x0
0000000000048a50	add	x8, x26, x19
0000000000048a54	ldp	x3, x2, [x8, #0x8]
0000000000048a58	mov	x0, x21
0000000000048a5c	bl	0x553e0 ; symbol stub for: _class_addMethod
0000000000048a60	add	x25, x25, #0x1
0000000000048a64	ldrsw	x8, [x22, #0x58]
0000000000048a68	add	x19, x19, #0x18
0000000000048a6c	cmp	x25, x8
0000000000048a70	b.lt	0x48a40
0000000000048a74	ldr	x8, [sp, #0x18]
0000000000048a78	cbz	x8, 0x48b40
0000000000048a7c	lsr	x9, x23, #32
0000000000048a80	lsl	w10, w23, #3
0000000000048a84	add	x10, x10, #0x8
0000000000048a88	eor	x10, x10, x9
0000000000048a8c	mul	x10, x10, x28
0000000000048a90	eor	x9, x10, x9
0000000000048a94	eor	x9, x9, x10, lsr #47
0000000000048a98	mul	x9, x9, x28
0000000000048a9c	eor	x9, x9, x9, lsr #47
0000000000048aa0	mul	x9, x9, x28
0000000000048aa4	fmov	d0, x8
0000000000048aa8	cnt.8b	v0, v0
0000000000048aac	uaddlv.8b	h0, v0
0000000000048ab0	fmov	w10, s0
0000000000048ab4	cmp	x10, #0x1
0000000000048ab8	b.hi	0x48ac8
0000000000048abc	sub	x11, x8, #0x1
0000000000048ac0	and	x11, x11, x9
0000000000048ac4	b	0x48adc
0000000000048ac8	mov	x11, x9
0000000000048acc	cmp	x9, x8
0000000000048ad0	b.lo	0x48adc
0000000000048ad4	udiv	x11, x9, x8
0000000000048ad8	msub	x11, x11, x8, x9
0000000000048adc	ldr	x12, [sp, #0x10]
0000000000048ae0	ldr	x12, [x12, x11, lsl #3]
0000000000048ae4	cbz	x12, 0x48b40
0000000000048ae8	ldr	x12, [x12]
0000000000048aec	cbz	x12, 0x48b40
0000000000048af0	sub	x13, x8, #0x1
0000000000048af4	b	0x48b0c
0000000000048af8	ldr	x14, [x12, #0x10]
0000000000048afc	cmp	x14, x23
0000000000048b00	b.eq	0x48a08
0000000000048b04	ldr	x12, [x12]
0000000000048b08	cbz	x12, 0x48b40
0000000000048b0c	ldr	x14, [x12, #0x8]
0000000000048b10	cmp	x14, x9
0000000000048b14	b.eq	0x48af8
0000000000048b18	cmp	x10, #0x1
0000000000048b1c	b.hi	0x48b28
0000000000048b20	and	x14, x14, x13
0000000000048b24	b	0x48b38
0000000000048b28	cmp	x14, x8
0000000000048b2c	b.lo	0x48b38
0000000000048b30	udiv	x15, x14, x8
0000000000048b34	msub	x14, x15, x8, x14
0000000000048b38	cmp	x14, x11
0000000000048b3c	b.eq	0x48b04
0000000000048b40	ldr	x0, [x22, #0x28]
0000000000048b44	bl	0x5556c ; symbol stub for: _objc_getProtocol
0000000000048b48	mov	x23, x0
0000000000048b4c	cbz	x0, 0x48a08
0000000000048b50	mov	x0, x21
0000000000048b54	mov	x1, x23
0000000000048b58	bl	0x553ec ; symbol stub for: _class_addProtocol
0000000000048b5c	mov	x0, x21
0000000000048b60	bl	0x555f0 ; symbol stub for: _object_getClass
0000000000048b64	mov	x1, x23
0000000000048b68	bl	0x553ec ; symbol stub for: _class_addProtocol
0000000000048b6c	b	0x48a08
0000000000048b70	mov	x0, x21
0000000000048b74	bl	0x5559c ; symbol stub for: _objc_registerClassPair
0000000000048b78	str	x20, [sp, #0x58]
0000000000048b7c	adrp	x0, 50 ; 0x7a000
0000000000048b80	add	x0, x0, #0x2c0
0000000000048b84	ldr	x8, [sp]
0000000000048b88	blr	x8
0000000000048b8c	ldr	x23, [x0]
0000000000048b90	cbz	x23, 0x48bac
0000000000048b94	add	x8, x23, #0x138
0000000000048b98	mov	w9, #0x1
0000000000048b9c	ldaxr	w22, [x8]
0000000000048ba0	stlxr	w10, w9, [x8]
0000000000048ba4	cbnz	w10, 0x48b9c
0000000000048ba8	b	0x48bb0
0000000000048bac	mov	w22, #0x1
0000000000048bb0	nop
0000000000048bb4	ldr	x0, #0x2e0cc ; Objc class ref: _OBJC_CLASS_$_NSValue
0000000000048bb8	bl	0x55500 ; symbol stub for: _objc_alloc
0000000000048bbc	nop
0000000000048bc0	ldr	x1, #0x2dd40 ; Objc selector ref: initWithBytes:objCType:
0000000000048bc4	adr	x3, #0x15dfa ; literal pool for: "^v"
0000000000048bc8	nop
0000000000048bcc	add	x2, sp, #0x58
0000000000048bd0	bl	0x55584 ; Objc message: +[NSValue initWithBytes:objCType:]
0000000000048bd4	mov	x2, x0
0000000000048bd8	adr	x1, #0x4b6ba
0000000000048bdc	nop
0000000000048be0	mov	x0, x21
0000000000048be4	mov	x3, #0x0
0000000000048be8	bl	0x555d8 ; symbol stub for: _objc_setAssociatedObject
0000000000048bec	cbz	x23, 0x48c20
0000000000048bf0	add	x0, x23, #0x138
0000000000048bf4	ldaxr	w8, [x0]
0000000000048bf8	stlxr	w9, w22, [x0]
0000000000048bfc	cbnz	w9, 0x48bf4
0000000000048c00	cbnz	w22, 0x48c20
0000000000048c04	cmp	w8, #0x1
0000000000048c08	b.ne	0x48c20
0000000000048c0c	adr	x8, #0x4b67d
0000000000048c10	nop
0000000000048c14	ldarb	w8, [x8]
0000000000048c18	tbz	w8, #0x0, 0x48c20
0000000000048c1c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048c20	ldr	x0, [sp, #0x20]
0000000000048c24	cbz	x0, 0x48c38
0000000000048c28	ldr	x19, [x0]
0000000000048c2c	bl	0x55458 ; symbol stub for: _free
0000000000048c30	mov	x0, x19
0000000000048c34	cbnz	x19, 0x48c28
0000000000048c38	ldr	x0, [sp, #0x10]
0000000000048c3c	str	xzr, [sp, #0x10]
0000000000048c40	cbz	x0, 0x48c48
0000000000048c44	bl	0x55458 ; symbol stub for: _free
0000000000048c48	ldrsb	w8, [sp, #0x57]
0000000000048c4c	tbz	w8, #0x1f, 0x48c58
0000000000048c50	ldr	x0, [sp, #0x40]
0000000000048c54	bl	0x55458 ; symbol stub for: _free
0000000000048c58	ldr	x8, [sp, #0x8]
0000000000048c5c	cbz	x8, 0x48c90
0000000000048c60	add	x0, x8, #0x138
0000000000048c64	ldaxr	w8, [x0]
0000000000048c68	stlxr	w9, w24, [x0]
0000000000048c6c	cbnz	w9, 0x48c64
0000000000048c70	cbnz	w24, 0x48c90
0000000000048c74	cmp	w8, #0x1
0000000000048c78	b.ne	0x48c90
0000000000048c7c	adr	x8, #0x4b60d
0000000000048c80	nop
0000000000048c84	ldarb	w8, [x8]
0000000000048c88	tbz	w8, #0x0, 0x48c90
0000000000048c8c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048c90	ldr	x8, [x20, #0x60]
0000000000048c94	str	x21, [x8, #0x8]
0000000000048c98	adr	x19, #0x4b5fc
0000000000048c9c	nop
0000000000048ca0	stlrb	wzr, [x19]
0000000000048ca4	mov	x0, x21
0000000000048ca8	ldp	x29, x30, [sp, #0xb0]
0000000000048cac	ldp	x20, x19, [sp, #0xa0]
0000000000048cb0	ldp	x22, x21, [sp, #0x90]
0000000000048cb4	ldp	x24, x23, [sp, #0x80]
0000000000048cb8	ldp	x26, x25, [sp, #0x70]
0000000000048cbc	ldp	x28, x27, [sp, #0x60]
0000000000048cc0	add	sp, sp, #0xc0
0000000000048cc4	ret
0000000000048cc8	adr	x2, #0x15cbf ; literal pool for: ""
0000000000048ccc	nop
0000000000048cd0	mov	w0, #0x0
0000000000048cd4	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
0000000000048cd8	brk	#0x1
0000000000048cdc	b	0x48d64
0000000000048ce0	mov	x20, x0
0000000000048ce4	ldrsb	w8, [sp, #0x27]
0000000000048ce8	tbz	w8, #0x1f, 0x48d98
0000000000048cec	ldr	x0, [sp, #0x10]
0000000000048cf0	bl	0x55308 ; symbol stub for: __ZdlPv
0000000000048cf4	b	0x48d98
0000000000048cf8	b	0x48d94
0000000000048cfc	b	0x48d94
0000000000048d00	b	0x48d94
0000000000048d04	mov	x20, x0
0000000000048d08	cbz	x23, 0x48d68
0000000000048d0c	add	x0, x23, #0x138
0000000000048d10	ldaxr	w8, [x0]
0000000000048d14	stlxr	w9, w22, [x0]
0000000000048d18	cbnz	w9, 0x48d10
0000000000048d1c	cbnz	w22, 0x48d68
0000000000048d20	cmp	w8, #0x1
0000000000048d24	b.ne	0x48d68
0000000000048d28	adr	x8, #0x4b561
0000000000048d2c	nop
0000000000048d30	ldarb	w8, [x8]
0000000000048d34	tbz	w8, #0x0, 0x48d68
0000000000048d38	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048d3c	b	0x48d68
0000000000048d40	mov	x20, x0
0000000000048d44	ldr	x0, [sp, #0x20]
0000000000048d48	cbz	x0, 0x48d80
0000000000048d4c	ldr	x19, [x0]
0000000000048d50	bl	0x55458 ; symbol stub for: _free
0000000000048d54	mov	x0, x19
0000000000048d58	cbnz	x19, 0x48d4c
0000000000048d5c	b	0x48d80
0000000000048d60	b	0x48d64
0000000000048d64	mov	x20, x0
0000000000048d68	ldr	x0, [sp, #0x20]
0000000000048d6c	cbz	x0, 0x48d80
0000000000048d70	ldr	x19, [x0]
0000000000048d74	bl	0x55458 ; symbol stub for: _free
0000000000048d78	mov	x0, x19
0000000000048d7c	cbnz	x19, 0x48d70
0000000000048d80	ldr	x0, [sp, #0x10]
0000000000048d84	str	xzr, [sp, #0x10]
0000000000048d88	cbz	x0, 0x48d98
0000000000048d8c	bl	0x55458 ; symbol stub for: _free
0000000000048d90	b	0x48d98
0000000000048d94	mov	x20, x0
0000000000048d98	ldrsb	w8, [sp, #0x57]
0000000000048d9c	tbz	w8, #0x1f, 0x48da8
0000000000048da0	ldr	x0, [sp, #0x40]
0000000000048da4	bl	0x55458 ; symbol stub for: _free
0000000000048da8	ldr	x8, [sp, #0x8]
0000000000048dac	cbnz	x8, 0x48dc4
0000000000048db0	adr	x8, #0x4b4e4
0000000000048db4	nop
0000000000048db8	stlrb	wzr, [x8]
0000000000048dbc	mov	x0, x20
0000000000048dc0	bl	0x55194 ; symbol stub for: __Unwind_Resume
0000000000048dc4	ldr	x8, [sp, #0x8]
0000000000048dc8	add	x0, x8, #0x138
0000000000048dcc	ldaxr	w8, [x0]
0000000000048dd0	stlxr	w9, w24, [x0]
0000000000048dd4	cbnz	w9, 0x48dcc
0000000000048dd8	cbnz	w24, 0x48db0
0000000000048ddc	cmp	w8, #0x1
0000000000048de0	b.ne	0x48db0
0000000000048de4	adr	x8, #0x4b4a5
0000000000048de8	nop
0000000000048dec	ldarb	w8, [x8]
0000000000048df0	tbz	w8, #0x0, 0x48db0
0000000000048df4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048df8	adr	x8, #0x4b49c
0000000000048dfc	nop
0000000000048e00	stlrb	wzr, [x8]
0000000000048e04	mov	x0, x20
0000000000048e08	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_ObjCExport_convertUnitToRetained:
0000000000048e0c	sub	sp, sp, #0x40
0000000000048e10	stp	x29, x30, [sp, #0x30]
0000000000048e14	add	x29, sp, #0x30
0000000000048e18	nop
0000000000048e1c	ldr	x8, #0x171f4 ; literal pool symbol address: __NSConcreteGlobalBlock
0000000000048e20	str	x8, [sp, #0x8]
0000000000048e24	nop
0000000000048e28	ldr	d0, 0x57b60
0000000000048e2c	str	d0, [sp, #0x10]
0000000000048e30	adr	x8, #0x84
0000000000048e34	nop
0000000000048e38	adr	x9, #0x28a38
0000000000048e3c	nop
0000000000048e40	stp	x8, x9, [sp, #0x18]
0000000000048e44	str	x0, [sp, #0x28]
0000000000048e48	nop
0000000000048e4c	ldr	x8, #0x4b6cc
0000000000048e50	cmn	x8, #0x1
0000000000048e54	b.ne	0x48e6c
0000000000048e58	nop
0000000000048e5c	ldr	x0, #0x4b6c4
0000000000048e60	ldp	x29, x30, [sp, #0x30]
0000000000048e64	add	sp, sp, #0x40
0000000000048e68	b	0x555b4 ; symbol stub for: _objc_retain
0000000000048e6c	adr	x0, #0x4b6ac
0000000000048e70	nop
0000000000048e74	add	x1, sp, #0x8
0000000000048e78	bl	0x55434 ; symbol stub for: _dispatch_once
0000000000048e7c	nop
0000000000048e80	ldr	x0, #0x4b6a0
0000000000048e84	ldp	x29, x30, [sp, #0x30]
0000000000048e88	add	sp, sp, #0x40
0000000000048e8c	b	0x555b4 ; symbol stub for: _objc_retain
__ZL29convertKotlinObjectToRetainedP9ObjHeader:
0000000000048e90	mov	x2, x0
0000000000048e94	ldr	x8, [x0]
0000000000048e98	and	x8, x8, #0xfffffffffffffffc
0000000000048e9c	ldr	x8, [x8]
0000000000048ea0	ldr	x8, [x8, #0x60]
0000000000048ea4	ldr	x0, [x8, #0x8]
0000000000048ea8	nop
0000000000048eac	ldr	x1, #0x2d9d4 ; Objc selector ref: createRetainedWrapper:
0000000000048eb0	b	0x55584 ; Objc message: -[x0 createRetainedWrapper:]
___Kotlin_ObjCExport_convertUnitToRetained_block_invoke:
0000000000048eb4	stp	x20, x19, [sp, #-0x20]!
0000000000048eb8	stp	x29, x30, [sp, #0x10]
0000000000048ebc	add	x29, sp, #0x10
0000000000048ec0	mov	x19, x0
0000000000048ec4	ldr	x8, [x0, #0x20]
0000000000048ec8	ldr	x8, [x8]
0000000000048ecc	and	x8, x8, #0xfffffffffffffffc
0000000000048ed0	ldr	x0, [x8]
0000000000048ed4	bl	__ZL16getOrCreateClassPK8TypeInfo
0000000000048ed8	ldr	x2, [x19, #0x20]
0000000000048edc	nop
0000000000048ee0	ldr	x1, #0x2d9a0 ; Objc selector ref: createRetainedWrapper:
0000000000048ee4	bl	0x55584 ; Objc message: -[x0 createRetainedWrapper:]
0000000000048ee8	adrp	x8, 76 ; 0x94000
0000000000048eec	str	x0, [x8, #0x520]
0000000000048ef0	ldp	x29, x30, [sp, #0x10]
0000000000048ef4	ldp	x20, x19, [sp], #0x20
0000000000048ef8	ret
_Kotlin_ObjCExport_CreateRetainedNSStringFromKString:
0000000000048efc	stp	x22, x21, [sp, #-0x30]!
0000000000048f00	stp	x20, x19, [sp, #0x10]
0000000000048f04	stp	x29, x30, [sp, #0x20]
0000000000048f08	add	x29, sp, #0x20
0000000000048f0c	mov	x20, x0
0000000000048f10	add	x19, x0, #0x10
0000000000048f14	ldr	w8, [x0, #0x8]
0000000000048f18	lsl	x21, x8, #1
0000000000048f1c	ldr	x22, [x0]
0000000000048f20	nop
0000000000048f24	ldr	x0, #0x2dd4c ; Objc class ref: _OBJC_CLASS_$_NSString
0000000000048f28	bl	0x55500 ; symbol stub for: _objc_alloc
0000000000048f2c	tbnz	w22, #0x0, 0x48f94
0000000000048f30	nop
0000000000048f34	ldr	x1, #0x2d9c4 ; Objc selector ref: initWithBytes:length:encoding:
0000000000048f38	mov	x2, x19
0000000000048f3c	mov	x3, x21
0000000000048f40	mov	w4, #0x100
0000000000048f44	movk	w4, #0x9400, lsl #16
0000000000048f48	bl	0x55584 ; Objc message: +[NSString initWithBytes:length:encoding:]
0000000000048f4c	mov	x19, x0
0000000000048f50	ldar	x8, [x20]
0000000000048f54	and	x8, x8, #0xfffffffffffffffc
0000000000048f58	ldr	x9, [x8]
0000000000048f5c	cmp	x9, x8
0000000000048f60	csel	x0, xzr, x8, eq
0000000000048f64	cbnz	x0, 0x48f70
0000000000048f68	mov	x0, x20
0000000000048f6c	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000048f70	add	x8, x0, #0x10
0000000000048f74	ldaxr	x20, [x8]
0000000000048f78	cbnz	x20, 0x48fc0
0000000000048f7c	stlxr	w9, x19, [x8]
0000000000048f80	cbnz	w9, 0x48f74
0000000000048f84	mov	w8, #0x1
0000000000048f88	mov	x0, x19
0000000000048f8c	tbz	w8, #0x0, 0x48fd0
0000000000048f90	b	0x48fd8
0000000000048f94	nop
0000000000048f98	ldr	x1, #0x2d970 ; Objc selector ref: initWithBytesNoCopy:length:encoding:freeWhenDone:
0000000000048f9c	mov	x2, x19
0000000000048fa0	mov	x3, x21
0000000000048fa4	mov	w4, #0x100
0000000000048fa8	movk	w4, #0x9400, lsl #16
0000000000048fac	mov	w5, #0x0
0000000000048fb0	ldp	x29, x30, [sp, #0x20]
0000000000048fb4	ldp	x20, x19, [sp, #0x10]
0000000000048fb8	ldp	x22, x21, [sp], #0x30
0000000000048fbc	b	0x55584 ; Objc message: -[x0 initWithBytesNoCopy:length:encoding:freeWhenDone:]
0000000000048fc0	mov	w8, #0x0
0000000000048fc4	clrex
0000000000048fc8	mov	x0, x19
0000000000048fcc	tbnz	w8, #0x0, 0x48fd8
0000000000048fd0	bl	0x555a8 ; symbol stub for: _objc_release
0000000000048fd4	mov	x0, x20
0000000000048fd8	ldp	x29, x30, [sp, #0x20]
0000000000048fdc	ldp	x20, x19, [sp, #0x10]
0000000000048fe0	ldp	x22, x21, [sp], #0x30
0000000000048fe4	b	0x555b4 ; symbol stub for: _objc_retain
_ThrowException:
0000000000048fe8	stp	x29, x30, [sp, #-0x10]!
0000000000048fec	mov	x29, sp
0000000000048ff0	bl	__ZN18ExceptionObjHolder5ThrowEP9ObjHeader
__ZN6kotlin25ProcessUnhandledExceptionEP9ObjHeader:
0000000000048ff4	stp	x22, x21, [sp, #-0x30]!
0000000000048ff8	stp	x20, x19, [sp, #0x10]
0000000000048ffc	stp	x29, x30, [sp, #0x20]
0000000000049000	add	x29, sp, #0x20
0000000000049004	mov	x20, x0
0000000000049008	adrp	x0, 49 ; 0x7a000
000000000004900c	add	x0, x0, #0x2c0
0000000000049010	ldr	x8, [x0]
0000000000049014	blr	x8
0000000000049018	ldr	x22, [x0]
000000000004901c	add	x19, x22, #0x138
0000000000049020	ldaxr	w21, [x19]
0000000000049024	stlxr	w8, wzr, [x19]
0000000000049028	cbnz	w8, 0x49020
000000000004902c	cmp	w21, #0x1
0000000000049030	b.ne	0x4904c
0000000000049034	adr	x8, #0x4b255
0000000000049038	nop
000000000004903c	ldarb	w8, [x8]
0000000000049040	tbz	w8, #0x0, 0x4904c
0000000000049044	mov	x0, x19
0000000000049048	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004904c	mov	x0, x20
0000000000049050	bl	__ZN12_GLOBAL__N_125processUnhandledExceptionEP9ObjHeader
0000000000049054	cbz	x22, 0x49080
0000000000049058	ldaxr	w8, [x19]
000000000004905c	stlxr	w9, w21, [x19]
0000000000049060	cbnz	w9, 0x49058
0000000000049064	cbnz	w21, 0x49080
0000000000049068	cmp	w8, #0x1
000000000004906c	b.ne	0x49080
0000000000049070	adr	x8, #0x4b219
0000000000049074	nop
0000000000049078	ldarb	w8, [x8]
000000000004907c	tbnz	w8, #0x0, 0x49090
0000000000049080	ldp	x29, x30, [sp, #0x20]
0000000000049084	ldp	x20, x19, [sp, #0x10]
0000000000049088	ldp	x22, x21, [sp], #0x30
000000000004908c	ret
0000000000049090	mov	x0, x19
0000000000049094	ldp	x29, x30, [sp, #0x20]
0000000000049098	ldp	x20, x19, [sp, #0x10]
000000000004909c	ldp	x22, x21, [sp], #0x30
00000000000490a0	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
__ZN6kotlin31TerminateWithUnhandledExceptionEP9ObjHeader:
00000000000490a4	sub	sp, sp, #0x30
00000000000490a8	stp	x20, x19, [sp, #0x10]
00000000000490ac	stp	x29, x30, [sp, #0x20]
00000000000490b0	add	x29, sp, #0x20
00000000000490b4	mov	x19, x0
00000000000490b8	adrp	x0, 49 ; 0x7a000
00000000000490bc	add	x0, x0, #0x2c0
00000000000490c0	ldr	x8, [x0]
00000000000490c4	blr	x8
00000000000490c8	ldr	x8, [x0]
00000000000490cc	str	x8, [sp]
00000000000490d0	mov	w9, #0x1
00000000000490d4	strb	w9, [sp, #0xc]
00000000000490d8	add	x0, x8, #0x138
00000000000490dc	ldaxr	w20, [x0]
00000000000490e0	stlxr	w8, wzr, [x0]
00000000000490e4	cbnz	w8, 0x490dc
00000000000490e8	cmp	w20, #0x1
00000000000490ec	b.ne	0x49104
00000000000490f0	adr	x8, #0x4b199
00000000000490f4	nop
00000000000490f8	ldarb	w8, [x8]
00000000000490fc	tbz	w8, #0x0, 0x49104
0000000000049100	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049104	str	w20, [sp, #0x8]
0000000000049108	mov	x0, x19
000000000004910c	bl	__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader
0000000000049110	brk	#0x1
0000000000049114	mov	x19, x0
0000000000049118	mov	x0, sp
000000000004911c	bl	__ZN6kotlin16ThreadStateGuardD1Ev
0000000000049120	mov	x0, x19
0000000000049124	bl	___clang_call_terminate
__ZN12_GLOBAL__N_121RunFinalizerHooksImplEP9ObjHeaderPK8TypeInfo:
0000000000049128	sub	sp, sp, #0xc0
000000000004912c	stp	x28, x27, [sp, #0x60]
0000000000049130	stp	x26, x25, [sp, #0x70]
0000000000049134	stp	x24, x23, [sp, #0x80]
0000000000049138	stp	x22, x21, [sp, #0x90]
000000000004913c	stp	x20, x19, [sp, #0xa0]
0000000000049140	stp	x29, x30, [sp, #0xb0]
0000000000049144	add	x29, sp, #0xb0
0000000000049148	adr	x8, #0x195f8
000000000004914c	nop
0000000000049150	cmp	x1, x8
0000000000049154	b.eq	0x491bc
0000000000049158	adr	x8, #0x19558
000000000004915c	nop
0000000000049160	cmp	x1, x8
0000000000049164	b.ne	0x49834
0000000000049168	ldr	x19, [x0, #0x8]
000000000004916c	cbz	x19, 0x49834
0000000000049170	ldr	x8, [x19]
0000000000049174	cbz	x8, 0x49198
0000000000049178	ldr	x1, [x19, #0x8]
000000000004917c	adrp	x0, 49 ; 0x7a000
0000000000049180	add	x0, x0, #0x2c0
0000000000049184	ldr	x8, [x0]
0000000000049188	blr	x8
000000000004918c	ldr	x8, [x0]
0000000000049190	add	x0, x8, #0x8
0000000000049194	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000049198	mov	x0, x19
000000000004919c	ldp	x29, x30, [sp, #0xb0]
00000000000491a0	ldp	x20, x19, [sp, #0xa0]
00000000000491a4	ldp	x22, x21, [sp, #0x90]
00000000000491a8	ldp	x24, x23, [sp, #0x80]
00000000000491ac	ldp	x26, x25, [sp, #0x70]
00000000000491b0	ldp	x28, x27, [sp, #0x60]
00000000000491b4	add	sp, sp, #0xc0
00000000000491b8	b	0x55458 ; symbol stub for: _free
00000000000491bc	adr	x8, #0x4b0f4
00000000000491c0	nop
00000000000491c4	ldar	w20, [x8]
00000000000491c8	cmn	w20, #0x2
00000000000491cc	b.eq	0x49834
00000000000491d0	ldr	x27, [x0, #0x8]
00000000000491d4	bl	__ZN12_GLOBAL__N_18theStateEv
00000000000491d8	mov	x19, x0
00000000000491dc	sxtw	x23, w20
00000000000491e0	str	x0, [sp, #0x30]
00000000000491e4	mov	w8, #0x1
00000000000491e8	strb	w8, [sp, #0x38]
00000000000491ec	str	xzr, [sp, #0x40]
00000000000491f0	adrp	x20, 49 ; 0x7a000
00000000000491f4	add	x20, x20, #0x2c0
00000000000491f8	ldr	x22, [x20]
00000000000491fc	mov	x0, x20
0000000000049200	blr	x22
0000000000049204	ldr	x25, [x0]
0000000000049208	add	x21, x25, #0x138
000000000004920c	ldaxr	w24, [x21]
0000000000049210	stlxr	w9, w8, [x21]
0000000000049214	cbnz	w9, 0x4920c
0000000000049218	mov	x0, x19
000000000004921c	bl	0x556a4 ; symbol stub for: _pthread_mutex_lock
0000000000049220	cbz	x25, 0x49254
0000000000049224	ldaxr	w8, [x21]
0000000000049228	stlxr	w9, w24, [x21]
000000000004922c	cbnz	w9, 0x49224
0000000000049230	cbnz	w24, 0x49254
0000000000049234	cmp	w8, #0x1
0000000000049238	b.ne	0x49254
000000000004923c	adr	x8, #0x4b04d
0000000000049240	nop
0000000000049244	ldarb	w8, [x8]
0000000000049248	tbz	w8, #0x0, 0x49254
000000000004924c	mov	x0, x21
0000000000049250	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049254	ldr	x8, [x19, #0xa0]
0000000000049258	cbz	x8, 0x4982c
000000000004925c	fmov	d0, x8
0000000000049260	cnt.8b	v0, v0
0000000000049264	uaddlv.8b	h0, v0
0000000000049268	fmov	w9, s0
000000000004926c	cmp	x9, #0x1
0000000000049270	b.hi	0x49280
0000000000049274	sub	x10, x8, #0x1
0000000000049278	and	x10, x10, x23
000000000004927c	b	0x49294
0000000000049280	mov	x10, x23
0000000000049284	cmp	x8, x23
0000000000049288	b.hi	0x49294
000000000004928c	udiv	x10, x23, x8
0000000000049290	msub	x10, x10, x8, x23
0000000000049294	ldr	x11, [x19, #0x98]
0000000000049298	ldr	x11, [x11, x10, lsl #3]
000000000004929c	cbz	x11, 0x4982c
00000000000492a0	ldr	x11, [x11]
00000000000492a4	cbz	x11, 0x4982c
00000000000492a8	sub	x12, x8, #0x1
00000000000492ac	b	0x492c4
00000000000492b0	ldr	w13, [x11, #0x10]
00000000000492b4	cmp	w13, w23
00000000000492b8	b.eq	0x492fc
00000000000492bc	ldr	x11, [x11]
00000000000492c0	cbz	x11, 0x4982c
00000000000492c4	ldr	x13, [x11, #0x8]
00000000000492c8	cmp	x13, x23
00000000000492cc	b.eq	0x492b0
00000000000492d0	cmp	x9, #0x1
00000000000492d4	b.hi	0x492e0
00000000000492d8	and	x13, x13, x12
00000000000492dc	b	0x492f0
00000000000492e0	cmp	x13, x8
00000000000492e4	b.lo	0x492f0
00000000000492e8	udiv	x14, x13, x8
00000000000492ec	msub	x13, x14, x8, x13
00000000000492f0	cmp	x13, x10
00000000000492f4	b.eq	0x492bc
00000000000492f8	b	0x4982c
00000000000492fc	ldr	x28, [x11, #0x18]
0000000000049300	mov	x0, x20
0000000000049304	blr	x22
0000000000049308	ldr	x24, [x0]
000000000004930c	add	x19, x24, #0x138
0000000000049310	mov	w8, #0x1
0000000000049314	ldaxr	w26, [x19]
0000000000049318	stlxr	w9, w8, [x19]
000000000004931c	cbnz	w9, 0x49314
0000000000049320	add	x8, x28, #0x58
0000000000049324	str	x8, [sp, #0x48]
0000000000049328	mov	w9, #0x1
000000000004932c	strb	w9, [sp, #0x50]
0000000000049330	str	xzr, [sp, #0x58]
0000000000049334	mov	x0, x20
0000000000049338	blr	x22
000000000004933c	ldr	x23, [x0]
0000000000049340	add	x21, x23, #0x138
0000000000049344	ldaxr	w22, [x21]
0000000000049348	stlxr	w10, w9, [x21]
000000000004934c	cbnz	w10, 0x49344
0000000000049350	mov	x0, x8
0000000000049354	bl	0x556a4 ; symbol stub for: _pthread_mutex_lock
0000000000049358	cbz	x23, 0x4938c
000000000004935c	ldaxr	w8, [x21]
0000000000049360	stlxr	w9, w22, [x21]
0000000000049364	cbnz	w9, 0x4935c
0000000000049368	cbnz	w22, 0x4938c
000000000004936c	cmp	w8, #0x1
0000000000049370	b.ne	0x4938c
0000000000049374	adr	x8, #0x4af15
0000000000049378	nop
000000000004937c	ldarb	w8, [x8]
0000000000049380	tbz	w8, #0x0, 0x4938c
0000000000049384	mov	x0, x21
0000000000049388	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004938c	str	x27, [sp, #0x10]
0000000000049390	ldp	x1, x27, [x28, #0x10]
0000000000049394	subs	x8, x27, x1
0000000000049398	asr	x25, x8, #3
000000000004939c	mov	w8, #0x66
00000000000493a0	mul	x8, x25, x8
00000000000493a4	sub	x8, x8, #0x1
00000000000493a8	csel	x9, xzr, x8, eq
00000000000493ac	ldp	x8, x10, [x28, #0x28]
00000000000493b0	add	x10, x10, x8
00000000000493b4	cmp	x9, x10
00000000000493b8	b.ne	0x49774
00000000000493bc	subs	x8, x8, #0x66
00000000000493c0	b.lo	0x49430
00000000000493c4	str	x8, [x28, #0x28]
00000000000493c8	ldr	x22, [x1], #0x8
00000000000493cc	str	x1, [x28, #0x10]
00000000000493d0	ldr	x8, [x28, #0x20]
00000000000493d4	cmp	x8, x27
00000000000493d8	b.ne	0x49764
00000000000493dc	ldr	x9, [x28, #0x8]
00000000000493e0	subs	x10, x1, x9
00000000000493e4	b.ls	0x49534
00000000000493e8	asr	x9, x10, #3
00000000000493ec	add	x10, x9, #0x1
00000000000493f0	add	x11, x9, #0x2
00000000000493f4	cmp	x10, #0x0
00000000000493f8	csinc	x9, x11, x9, lt
00000000000493fc	asr	x9, x9, #1
0000000000049400	neg	x23, x9
0000000000049404	sub	x20, x1, x9, lsl #3
0000000000049408	subs	x21, x8, x1
000000000004940c	b.eq	0x49420
0000000000049410	mov	x0, x20
0000000000049414	mov	x2, x21
0000000000049418	bl	0x554b8 ; symbol stub for: _memmove
000000000004941c	ldr	x1, [x28, #0x10]
0000000000049420	add	x27, x20, x21
0000000000049424	add	x8, x1, x23, lsl #3
0000000000049428	stp	x8, x27, [x28, #0x10]
000000000004942c	b	0x49764
0000000000049430	ldr	x21, [x28, #0x20]
0000000000049434	ldr	x8, [x28, #0x8]
0000000000049438	sub	x8, x21, x8
000000000004943c	cmp	x25, x8, asr #3
0000000000049440	b.hs	0x494b4
0000000000049444	mov	w0, #0x66
0000000000049448	mov	w1, #0x28
000000000004944c	bl	0x553d4 ; symbol stub for: _calloc
0000000000049450	mov	x20, x0
0000000000049454	cmp	x21, x27
0000000000049458	b.ne	0x49520
000000000004945c	ldp	x9, x1, [x28, #0x8]
0000000000049460	cmp	x1, x9
0000000000049464	b.ne	0x49938
0000000000049468	ldp	x8, x10, [x28, #0x18]
000000000004946c	cmp	x8, x10
0000000000049470	b.hs	0x49854
0000000000049474	sub	x9, x10, x8
0000000000049478	asr	x9, x9, #3
000000000004947c	add	x10, x9, #0x1
0000000000049480	add	x11, x9, #0x2
0000000000049484	cmp	x10, #0x0
0000000000049488	csinc	x9, x11, x9, lt
000000000004948c	asr	x22, x9, #1
0000000000049490	add	x9, x8, x22, lsl #3
0000000000049494	subs	x2, x8, x1
0000000000049498	b.eq	0x49908
000000000004949c	sub	x21, x9, x2
00000000000494a0	mov	x0, x21
00000000000494a4	bl	0x554b8 ; symbol stub for: _memmove
00000000000494a8	ldr	x8, [x28, #0x18]
00000000000494ac	mov	x1, x21
00000000000494b0	b	0x4990c
00000000000494b4	str	x24, [sp, #0x8]
00000000000494b8	asr	x9, x8, #2
00000000000494bc	cmp	x8, #0x0
00000000000494c0	csinc	x23, x9, xzr, ne
00000000000494c4	mov	x0, x23
00000000000494c8	mov	w1, #0x8
00000000000494cc	bl	0x553d4 ; symbol stub for: _calloc
00000000000494d0	mov	x20, x0
00000000000494d4	add	x21, x0, x25, lsl #3
00000000000494d8	add	x24, x0, x23, lsl #3
00000000000494dc	mov	w0, #0x66
00000000000494e0	mov	w1, #0x28
00000000000494e4	bl	0x553d4 ; symbol stub for: _calloc
00000000000494e8	mov	x22, x0
00000000000494ec	cmp	x25, x23
00000000000494f0	b.ne	0x495c8
00000000000494f4	subs	x8, x21, x20
00000000000494f8	b.ls	0x4958c
00000000000494fc	asr	x8, x8, #3
0000000000049500	add	x9, x8, #0x1
0000000000049504	add	x10, x8, #0x2
0000000000049508	cmp	x9, #0x0
000000000004950c	csinc	x8, x10, x8, lt
0000000000049510	lsl	x8, x8, #2
0000000000049514	and	x8, x8, #0xfffffffffffffff8
0000000000049518	sub	x21, x21, x8
000000000004951c	b	0x495c8
0000000000049520	ldp	x9, x8, [x28, #0x18]
0000000000049524	cmp	x9, x8
0000000000049528	b.eq	0x496ec
000000000004952c	str	x20, [x9]
0000000000049530	b	0x49768
0000000000049534	subs	x8, x8, x9
0000000000049538	asr	x8, x8, #2
000000000004953c	csinc	x20, x8, xzr, ne
0000000000049540	lsl	x8, x20, #1
0000000000049544	and	x21, x8, #0xfffffffffffffff8
0000000000049548	mov	x0, x20
000000000004954c	mov	w1, #0x8
0000000000049550	bl	0x553d4 ; symbol stub for: _calloc
0000000000049554	add	x9, x0, x21
0000000000049558	add	x10, x0, x20, lsl #3
000000000004955c	ldp	x8, x11, [x28, #0x10]
0000000000049560	subs	x11, x11, x8
0000000000049564	b.eq	0x49744
0000000000049568	asr	x12, x11, #3
000000000004956c	add	x27, x9, x11
0000000000049570	lsl	x11, x12, #3
0000000000049574	mov	x12, x9
0000000000049578	ldr	x13, [x8], #0x8
000000000004957c	str	x13, [x12], #0x8
0000000000049580	subs	x11, x11, #0x8
0000000000049584	b.ne	0x49578
0000000000049588	b	0x49748
000000000004958c	subs	x8, x24, x20
0000000000049590	asr	x8, x8, #2
0000000000049594	csinc	x24, x8, xzr, ne
0000000000049598	lsl	x8, x24, #1
000000000004959c	and	x21, x8, #0xfffffffffffffff8
00000000000495a0	mov	x0, x24
00000000000495a4	mov	w1, #0x8
00000000000495a8	bl	0x553d4 ; symbol stub for: _calloc
00000000000495ac	mov	x23, x0
00000000000495b0	add	x21, x0, x21
00000000000495b4	add	x24, x0, x24, lsl #3
00000000000495b8	cbz	x20, 0x495c4
00000000000495bc	mov	x0, x20
00000000000495c0	bl	0x55458 ; symbol stub for: _free
00000000000495c4	mov	x20, x23
00000000000495c8	str	x22, [x21]
00000000000495cc	add	x27, x21, #0x8
00000000000495d0	ldr	x25, [x28, #0x18]
00000000000495d4	b	0x495e8
00000000000495d8	mov	x22, x21
00000000000495dc	ldr	x8, [x25]
00000000000495e0	stur	x8, [x22, #-0x8]
00000000000495e4	sub	x21, x21, #0x8
00000000000495e8	ldr	x8, [x28, #0x10]
00000000000495ec	cmp	x25, x8
00000000000495f0	b.eq	0x496cc
00000000000495f4	sub	x25, x25, #0x8
00000000000495f8	cmp	x21, x20
00000000000495fc	b.ne	0x495d8
0000000000049600	cmp	x27, x24
0000000000049604	b.hs	0x49654
0000000000049608	sub	x8, x24, x27
000000000004960c	asr	x8, x8, #3
0000000000049610	add	x9, x8, #0x1
0000000000049614	add	x10, x8, #0x2
0000000000049618	cmp	x9, #0x0
000000000004961c	csinc	x8, x10, x8, lt
0000000000049620	lsl	x8, x8, #2
0000000000049624	and	x8, x8, #0xfffffffffffffff8
0000000000049628	add	x23, x27, x8
000000000004962c	mov	x22, x23
0000000000049630	subs	x2, x27, x21
0000000000049634	b.eq	0x49648
0000000000049638	sub	x22, x23, x2
000000000004963c	mov	x0, x22
0000000000049640	mov	x1, x21
0000000000049644	bl	0x554b8 ; symbol stub for: _memmove
0000000000049648	mov	x21, x22
000000000004964c	mov	x27, x23
0000000000049650	b	0x495dc
0000000000049654	subs	x8, x24, x20
0000000000049658	asr	x8, x8, #2
000000000004965c	csinc	x24, x8, xzr, ne
0000000000049660	lsl	x8, x24, #1
0000000000049664	add	x8, x8, #0x6
0000000000049668	and	x22, x8, #0xfffffffffffffff8
000000000004966c	mov	x0, x24
0000000000049670	mov	w1, #0x8
0000000000049674	bl	0x553d4 ; symbol stub for: _calloc
0000000000049678	mov	x23, x0
000000000004967c	add	x22, x0, x22
0000000000049680	subs	x8, x27, x21
0000000000049684	b.eq	0x496ac
0000000000049688	asr	x9, x8, #3
000000000004968c	add	x27, x22, x8
0000000000049690	lsl	x8, x9, #3
0000000000049694	mov	x9, x22
0000000000049698	ldr	x10, [x21], #0x8
000000000004969c	str	x10, [x9], #0x8
00000000000496a0	subs	x8, x8, #0x8
00000000000496a4	b.ne	0x49698
00000000000496a8	b	0x496b0
00000000000496ac	mov	x27, x22
00000000000496b0	add	x24, x23, x24, lsl #3
00000000000496b4	cbz	x20, 0x496c0
00000000000496b8	mov	x0, x20
00000000000496bc	bl	0x55458 ; symbol stub for: _free
00000000000496c0	mov	x20, x23
00000000000496c4	mov	x21, x22
00000000000496c8	b	0x495dc
00000000000496cc	ldr	x0, [x28, #0x8]
00000000000496d0	stp	x20, x21, [x28, #0x8]
00000000000496d4	stp	x27, x24, [x28, #0x18]
00000000000496d8	cbz	x0, 0x496e4
00000000000496dc	bl	0x55458 ; symbol stub for: _free
00000000000496e0	ldr	x27, [x28, #0x18]
00000000000496e4	ldr	x24, [sp, #0x8]
00000000000496e8	b	0x49774
00000000000496ec	ldp	x10, x1, [x28, #0x8]
00000000000496f0	subs	x11, x1, x10
00000000000496f4	b.ls	0x498b0
00000000000496f8	asr	x8, x11, #3
00000000000496fc	add	x10, x8, #0x1
0000000000049700	add	x11, x8, #0x2
0000000000049704	cmp	x10, #0x0
0000000000049708	csinc	x8, x11, x8, lt
000000000004970c	asr	x8, x8, #1
0000000000049710	neg	x23, x8
0000000000049714	sub	x21, x1, x8, lsl #3
0000000000049718	subs	x22, x9, x1
000000000004971c	b.eq	0x49730
0000000000049720	mov	x0, x21
0000000000049724	mov	x2, x22
0000000000049728	bl	0x554b8 ; symbol stub for: _memmove
000000000004972c	ldr	x1, [x28, #0x10]
0000000000049730	add	x9, x21, x22
0000000000049734	add	x8, x1, x23, lsl #3
0000000000049738	stp	x8, x9, [x28, #0x10]
000000000004973c	str	x20, [x9]
0000000000049740	b	0x49768
0000000000049744	mov	x27, x9
0000000000049748	ldr	x8, [x28, #0x8]
000000000004974c	stp	x0, x9, [x28, #0x8]
0000000000049750	stp	x27, x10, [x28, #0x18]
0000000000049754	cbz	x8, 0x49764
0000000000049758	mov	x0, x8
000000000004975c	bl	0x55458 ; symbol stub for: _free
0000000000049760	ldr	x27, [x28, #0x18]
0000000000049764	str	x22, [x27]
0000000000049768	ldr	x8, [x28, #0x18]
000000000004976c	add	x27, x8, #0x8
0000000000049770	str	x27, [x28, #0x18]
0000000000049774	ldr	x8, [x28, #0x10]
0000000000049778	cmp	x27, x8
000000000004977c	b.eq	0x497b8
0000000000049780	ldp	x9, x10, [x28, #0x28]
0000000000049784	add	x9, x9, x10
0000000000049788	mov	x10, #0xa0a1
000000000004978c	movk	x10, #0xa0a0, lsl #16
0000000000049790	movk	x10, #0xa0a0, lsl #32
0000000000049794	movk	x10, #0xa0a0, lsl #48
0000000000049798	umulh	x10, x9, x10
000000000004979c	lsr	x10, x10, #6
00000000000497a0	ldr	x8, [x8, x10, lsl #3]
00000000000497a4	mov	x11, #-0x66
00000000000497a8	madd	x9, x10, x11, x9
00000000000497ac	mov	w10, #0x28
00000000000497b0	madd	x8, x9, x10, x8
00000000000497b4	b	0x497bc
00000000000497b8	mov	x8, #0x0
00000000000497bc	ldr	x10, [sp, #0x10]
00000000000497c0	mov	w9, #0x3
00000000000497c4	str	w9, [x8]
00000000000497c8	str	x10, [x8, #0x8]
00000000000497cc	ldur	q0, [sp, #0x18]
00000000000497d0	str	q0, [x8, #0x10]
00000000000497d4	ldr	x9, [sp, #0x28]
00000000000497d8	str	x9, [x8, #0x20]
00000000000497dc	ldr	x8, [x28, #0x30]
00000000000497e0	add	x8, x8, #0x1
00000000000497e4	str	x8, [x28, #0x30]
00000000000497e8	add	x0, x28, #0x98
00000000000497ec	bl	0x55644 ; symbol stub for: _pthread_cond_signal
00000000000497f0	add	x0, sp, #0x48
00000000000497f4	bl	__ZN12_GLOBAL__N_16LockerD1Ev
00000000000497f8	cbz	x24, 0x4982c
00000000000497fc	ldaxr	w8, [x19]
0000000000049800	stlxr	w9, w26, [x19]
0000000000049804	cbnz	w9, 0x497fc
0000000000049808	cbnz	w26, 0x4982c
000000000004980c	cmp	w8, #0x1
0000000000049810	b.ne	0x4982c
0000000000049814	adr	x8, #0x4aa75
0000000000049818	nop
000000000004981c	ldarb	w8, [x8]
0000000000049820	tbz	w8, #0x0, 0x4982c
0000000000049824	mov	x0, x19
0000000000049828	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004982c	add	x0, sp, #0x30
0000000000049830	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000049834	ldp	x29, x30, [sp, #0xb0]
0000000000049838	ldp	x20, x19, [sp, #0xa0]
000000000004983c	ldp	x22, x21, [sp, #0x90]
0000000000049840	ldp	x24, x23, [sp, #0x80]
0000000000049844	ldp	x26, x25, [sp, #0x70]
0000000000049848	ldp	x28, x27, [sp, #0x60]
000000000004984c	add	sp, sp, #0xc0
0000000000049850	ret
0000000000049854	subs	x8, x10, x9
0000000000049858	asr	x8, x8, #2
000000000004985c	csinc	x21, x8, xzr, ne
0000000000049860	lsl	x8, x21, #1
0000000000049864	add	x8, x8, #0x6
0000000000049868	and	x22, x8, #0xfffffffffffffff8
000000000004986c	mov	x0, x21
0000000000049870	mov	w1, #0x8
0000000000049874	bl	0x553d4 ; symbol stub for: _calloc
0000000000049878	add	x1, x0, x22
000000000004987c	add	x9, x0, x21, lsl #3
0000000000049880	ldp	x8, x10, [x28, #0x10]
0000000000049884	subs	x10, x10, x8
0000000000049888	b.eq	0x49918
000000000004988c	asr	x11, x10, #3
0000000000049890	add	x10, x1, x10
0000000000049894	lsl	x11, x11, #3
0000000000049898	mov	x12, x1
000000000004989c	ldr	x13, [x8], #0x8
00000000000498a0	str	x13, [x12], #0x8
00000000000498a4	subs	x11, x11, #0x8
00000000000498a8	b.ne	0x4989c
00000000000498ac	b	0x4991c
00000000000498b0	subs	x8, x8, x10
00000000000498b4	asr	x8, x8, #2
00000000000498b8	csinc	x21, x8, xzr, ne
00000000000498bc	lsl	x8, x21, #1
00000000000498c0	and	x22, x8, #0xfffffffffffffff8
00000000000498c4	mov	x0, x21
00000000000498c8	mov	w1, #0x8
00000000000498cc	bl	0x553d4 ; symbol stub for: _calloc
00000000000498d0	add	x10, x0, x22
00000000000498d4	add	x11, x0, x21, lsl #3
00000000000498d8	ldp	x8, x9, [x28, #0x10]
00000000000498dc	subs	x9, x9, x8
00000000000498e0	b.eq	0x49a14
00000000000498e4	asr	x12, x9, #3
00000000000498e8	add	x9, x10, x9
00000000000498ec	lsl	x12, x12, #3
00000000000498f0	mov	x13, x10
00000000000498f4	ldr	x14, [x8], #0x8
00000000000498f8	str	x14, [x13], #0x8
00000000000498fc	subs	x12, x12, #0x8
0000000000049900	b.ne	0x498f4
0000000000049904	b	0x49a18
0000000000049908	mov	x1, x9
000000000004990c	add	x8, x8, x22, lsl #3
0000000000049910	stp	x1, x8, [x28, #0x10]
0000000000049914	b	0x49938
0000000000049918	mov	x10, x1
000000000004991c	ldr	x8, [x28, #0x8]
0000000000049920	stp	x0, x1, [x28, #0x8]
0000000000049924	stp	x10, x9, [x28, #0x18]
0000000000049928	cbz	x8, 0x49938
000000000004992c	mov	x0, x8
0000000000049930	bl	0x55458 ; symbol stub for: _free
0000000000049934	ldr	x1, [x28, #0x10]
0000000000049938	stur	x20, [x1, #-0x8]
000000000004993c	ldp	x1, x9, [x28, #0x10]
0000000000049940	sub	x8, x1, #0x8
0000000000049944	str	x8, [x28, #0x10]
0000000000049948	ldur	x22, [x1, #-0x8]
000000000004994c	str	x1, [x28, #0x10]
0000000000049950	ldr	x8, [x28, #0x20]
0000000000049954	cmp	x9, x8
0000000000049958	b.eq	0x49964
000000000004995c	str	x22, [x9]
0000000000049960	b	0x49768
0000000000049964	ldr	x10, [x28, #0x8]
0000000000049968	subs	x11, x1, x10
000000000004996c	b.ls	0x499bc
0000000000049970	asr	x8, x11, #3
0000000000049974	add	x10, x8, #0x1
0000000000049978	add	x11, x8, #0x2
000000000004997c	cmp	x10, #0x0
0000000000049980	csinc	x8, x11, x8, lt
0000000000049984	asr	x8, x8, #1
0000000000049988	neg	x23, x8
000000000004998c	sub	x20, x1, x8, lsl #3
0000000000049990	subs	x21, x9, x1
0000000000049994	b.eq	0x499a8
0000000000049998	mov	x0, x20
000000000004999c	mov	x2, x21
00000000000499a0	bl	0x554b8 ; symbol stub for: _memmove
00000000000499a4	ldr	x1, [x28, #0x10]
00000000000499a8	add	x9, x20, x21
00000000000499ac	add	x8, x1, x23, lsl #3
00000000000499b0	stp	x8, x9, [x28, #0x10]
00000000000499b4	str	x22, [x9]
00000000000499b8	b	0x49768
00000000000499bc	subs	x8, x8, x10
00000000000499c0	asr	x8, x8, #2
00000000000499c4	csinc	x20, x8, xzr, ne
00000000000499c8	lsl	x8, x20, #1
00000000000499cc	and	x21, x8, #0xfffffffffffffff8
00000000000499d0	mov	x0, x20
00000000000499d4	mov	w1, #0x8
00000000000499d8	bl	0x553d4 ; symbol stub for: _calloc
00000000000499dc	add	x10, x0, x21
00000000000499e0	add	x11, x0, x20, lsl #3
00000000000499e4	ldp	x8, x9, [x28, #0x10]
00000000000499e8	subs	x9, x9, x8
00000000000499ec	b.eq	0x49a38
00000000000499f0	asr	x12, x9, #3
00000000000499f4	add	x9, x10, x9
00000000000499f8	lsl	x12, x12, #3
00000000000499fc	mov	x13, x10
0000000000049a00	ldr	x14, [x8], #0x8
0000000000049a04	str	x14, [x13], #0x8
0000000000049a08	subs	x12, x12, #0x8
0000000000049a0c	b.ne	0x49a00
0000000000049a10	b	0x49a3c
0000000000049a14	mov	x9, x10
0000000000049a18	ldr	x8, [x28, #0x8]
0000000000049a1c	stp	x0, x10, [x28, #0x8]
0000000000049a20	stp	x9, x11, [x28, #0x18]
0000000000049a24	cbz	x8, 0x4952c
0000000000049a28	mov	x0, x8
0000000000049a2c	bl	0x55458 ; symbol stub for: _free
0000000000049a30	ldr	x9, [x28, #0x18]
0000000000049a34	b	0x4952c
0000000000049a38	mov	x9, x10
0000000000049a3c	ldr	x8, [x28, #0x8]
0000000000049a40	stp	x0, x10, [x28, #0x8]
0000000000049a44	stp	x9, x11, [x28, #0x18]
0000000000049a48	cbz	x8, 0x4995c
0000000000049a4c	mov	x0, x8
0000000000049a50	bl	0x55458 ; symbol stub for: _free
0000000000049a54	ldr	x9, [x28, #0x18]
0000000000049a58	b	0x4995c
0000000000049a5c	mov	x20, x0
0000000000049a60	add	x0, sp, #0x48
0000000000049a64	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000049a68	b	0x49aa4
0000000000049a6c	mov	x20, x0
0000000000049a70	cbz	x23, 0x49aa4
0000000000049a74	ldaxr	w8, [x21]
0000000000049a78	stlxr	w9, w22, [x21]
0000000000049a7c	cbnz	w9, 0x49a74
0000000000049a80	cbnz	w22, 0x49aa4
0000000000049a84	cmp	w8, #0x1
0000000000049a88	b.ne	0x49aa4
0000000000049a8c	adr	x8, #0x4a7fd
0000000000049a90	nop
0000000000049a94	ldarb	w8, [x8]
0000000000049a98	tbz	w8, #0x0, 0x49aa4
0000000000049a9c	mov	x0, x21
0000000000049aa0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049aa4	cbnz	x24, 0x49ab4
0000000000049aa8	add	x0, sp, #0x30
0000000000049aac	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000049ab0	b	0x49b28
0000000000049ab4	ldaxr	w8, [x19]
0000000000049ab8	stlxr	w9, w26, [x19]
0000000000049abc	cbnz	w9, 0x49ab4
0000000000049ac0	cbnz	w26, 0x49aa8
0000000000049ac4	cmp	w8, #0x1
0000000000049ac8	b.ne	0x49aa8
0000000000049acc	adr	x8, #0x4a7bd
0000000000049ad0	nop
0000000000049ad4	ldarb	w8, [x8]
0000000000049ad8	tbz	w8, #0x0, 0x49aa8
0000000000049adc	mov	x0, x19
0000000000049ae0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049ae4	b	0x49aa8
0000000000049ae8	mov	x20, x0
0000000000049aec	cbz	x25, 0x49b28
0000000000049af0	ldaxr	w8, [x21]
0000000000049af4	stlxr	w9, w24, [x21]
0000000000049af8	cbnz	w9, 0x49af0
0000000000049afc	cbnz	w24, 0x49b28
0000000000049b00	cmp	w8, #0x1
0000000000049b04	b.ne	0x49b28
0000000000049b08	adr	x8, #0x4a781
0000000000049b0c	nop
0000000000049b10	ldarb	w8, [x8]
0000000000049b14	tbz	w8, #0x0, 0x49b28
0000000000049b18	mov	x0, x21
0000000000049b1c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049b20	b	0x49b28
0000000000049b24	mov	x20, x0
0000000000049b28	mov	x0, x20
0000000000049b2c	bl	0x5532c ; symbol stub for: ___cxa_begin_catch
0000000000049b30	bl	0x552fc ; symbol stub for: __ZSt9terminatev
_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject:
0000000000049b34	stp	x22, x21, [sp, #-0x30]!
0000000000049b38	stp	x20, x19, [sp, #0x10]
0000000000049b3c	stp	x29, x30, [sp, #0x20]
0000000000049b40	add	x29, sp, #0x20
0000000000049b44	mov	x21, x2
0000000000049b48	mov	x19, x1
0000000000049b4c	mov	x22, x0
0000000000049b50	adrp	x0, 49 ; 0x7a000
0000000000049b54	add	x0, x0, #0x2c0
0000000000049b58	ldr	x8, [x0]
0000000000049b5c	blr	x8
0000000000049b60	ldr	x8, [x0]
0000000000049b64	ldr	x8, [x8, #0x118]
0000000000049b68	ldrsw	x9, [x22, #0x14]
0000000000049b6c	add	x9, x9, #0xf
0000000000049b70	and	x1, x9, #0xfffffffffffffff8
0000000000049b74	add	x0, x8, #0x70
0000000000049b78	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000049b7c	mov	x20, x0
0000000000049b80	str	x22, [x20, #0x10]!
0000000000049b84	stur	xzr, [x20, #-0x8]
0000000000049b88	str	x20, [x21]
0000000000049b8c	ldar	x8, [x20]
0000000000049b90	and	x8, x8, #0xfffffffffffffffc
0000000000049b94	ldr	x9, [x8]
0000000000049b98	cmp	x9, x8
0000000000049b9c	csel	x0, xzr, x8, eq
0000000000049ba0	cbnz	x0, 0x49bac
0000000000049ba4	mov	x0, x20
0000000000049ba8	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000049bac	add	x8, x0, #0x10
0000000000049bb0	stlr	x19, [x8]
0000000000049bb4	mov	x0, x20
0000000000049bb8	ldp	x29, x30, [sp, #0x20]
0000000000049bbc	ldp	x20, x19, [sp, #0x10]
0000000000049bc0	ldp	x22, x21, [sp], #0x30
0000000000049bc4	ret
_Kotlin_ObjCExport_refToRetainedObjC:
0000000000049bc8	cbz	x0, 0x49c14
0000000000049bcc	ldar	x8, [x0]
0000000000049bd0	and	x8, x8, #0xfffffffffffffffc
0000000000049bd4	ldr	x9, [x8]
0000000000049bd8	cmp	x8, #0x0
0000000000049bdc	ccmp	x9, x8, #0x4, ne
0000000000049be0	b.eq	0x49bf8
0000000000049be4	add	x8, x8, #0x10
0000000000049be8	ldar	x8, [x8]
0000000000049bec	cbz	x8, 0x49bf8
0000000000049bf0	mov	x0, x8
0000000000049bf4	b	0x555b4 ; symbol stub for: _objc_retain
0000000000049bf8	ldr	x8, [x0]
0000000000049bfc	and	x8, x8, #0xfffffffffffffffc
0000000000049c00	ldr	x8, [x8]
0000000000049c04	ldr	x8, [x8, #0x60]
0000000000049c08	ldr	x1, [x8]
0000000000049c0c	cbz	x1, 0x49c18
0000000000049c10	br	x1
0000000000049c14	ret
0000000000049c18	b	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
_Kotlin_ObjCExport_refToLocalObjC:
0000000000049c1c	stp	x29, x30, [sp, #-0x10]!
0000000000049c20	mov	x29, sp
0000000000049c24	cbz	x0, 0x49c7c
0000000000049c28	ldar	x8, [x0]
0000000000049c2c	and	x8, x8, #0xfffffffffffffffc
0000000000049c30	ldr	x9, [x8]
0000000000049c34	cmp	x8, #0x0
0000000000049c38	ccmp	x9, x8, #0x4, ne
0000000000049c3c	b.eq	0x49c58
0000000000049c40	add	x8, x8, #0x10
0000000000049c44	ldar	x8, [x8]
0000000000049c48	cbz	x8, 0x49c58
0000000000049c4c	mov	x0, x8
0000000000049c50	ldp	x29, x30, [sp], #0x10
0000000000049c54	ret
0000000000049c58	ldr	x8, [x0]
0000000000049c5c	and	x8, x8, #0xfffffffffffffffc
0000000000049c60	ldr	x8, [x8]
0000000000049c64	ldr	x8, [x8, #0x60]
0000000000049c68	ldr	x8, [x8]
0000000000049c6c	cbz	x8, 0x49c8c
0000000000049c70	blr	x8
0000000000049c74	ldp	x29, x30, [sp], #0x10
0000000000049c78	b	0x55524 ; symbol stub for: _objc_autorelease
0000000000049c7c	mov	x8, #0x0
0000000000049c80	mov	x0, x8
0000000000049c84	ldp	x29, x30, [sp], #0x10
0000000000049c88	ret
0000000000049c8c	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
0000000000049c90	ldp	x29, x30, [sp], #0x10
0000000000049c94	b	0x55524 ; symbol stub for: _objc_autorelease
_Kotlin_ObjCExport_AbstractMethodCalled:
0000000000049c98	sub	sp, sp, #0x40
0000000000049c9c	stp	x22, x21, [sp, #0x10]
0000000000049ca0	stp	x20, x19, [sp, #0x20]
0000000000049ca4	stp	x29, x30, [sp, #0x30]
0000000000049ca8	add	x29, sp, #0x30
0000000000049cac	mov	x19, x1
0000000000049cb0	nop
0000000000049cb4	ldr	x20, #0x2cfc4 ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000049cb8	nop
0000000000049cbc	ldr	x8, #0x1634c ; literal pool symbol address: _NSGenericException
0000000000049cc0	ldr	x21, [x8]
0000000000049cc4	bl	0x555f0 ; symbol stub for: _object_getClass
0000000000049cc8	bl	0x5541c ; symbol stub for: _class_getName
0000000000049ccc	mov	x22, x0
0000000000049cd0	mov	x0, x19
0000000000049cd4	bl	0x55704 ; symbol stub for: _sel_getName
0000000000049cd8	nop
0000000000049cdc	ldr	x1, #0x2cd54 ; Objc selector ref: raise:format:
0000000000049ce0	stp	x22, x0, [sp]
0000000000049ce4	adr	x3, #0x27ccc ; Objc cfstring ref: @"bad cfstring ref"
0000000000049ce8	nop
0000000000049cec	mov	x0, x20
0000000000049cf0	mov	x2, x21
0000000000049cf4	bl	0x55584 ; Objc message: +[NSException raise:format:]
0000000000049cf8	ldp	x29, x30, [sp, #0x30]
0000000000049cfc	ldp	x20, x19, [sp, #0x20]
0000000000049d00	ldp	x22, x21, [sp, #0x10]
0000000000049d04	add	sp, sp, #0x40
0000000000049d08	ret
_Kotlin_NSSetAsKSet_contains:
0000000000049d0c	stp	x22, x21, [sp, #-0x30]!
0000000000049d10	stp	x20, x19, [sp, #0x10]
0000000000049d14	stp	x29, x30, [sp, #0x20]
0000000000049d18	add	x29, sp, #0x20
0000000000049d1c	ldar	x8, [x0]
0000000000049d20	and	x8, x8, #0xfffffffffffffffc
0000000000049d24	ldr	x9, [x8]
0000000000049d28	cmp	x8, #0x0
0000000000049d2c	ccmp	x9, x8, #0x4, ne
0000000000049d30	b.ne	0x49d48
0000000000049d34	mov	x20, #0x0
0000000000049d38	cbz	x1, 0x49d54
0000000000049d3c	mov	x0, x1
0000000000049d40	bl	_Kotlin_ObjCExport_refToObjC
0000000000049d44	b	0x49d68
0000000000049d48	add	x8, x8, #0x10
0000000000049d4c	ldar	x20, [x8]
0000000000049d50	cbnz	x1, 0x49d3c
0000000000049d54	nop
0000000000049d58	ldr	x0, #0x2cf40 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000049d5c	nop
0000000000049d60	ldr	x1, #0x2cc90 ; Objc selector ref: null
0000000000049d64	bl	0x55584 ; Objc message: +[NSNull null]
0000000000049d68	mov	x2, x0
0000000000049d6c	adrp	x0, 49 ; 0x7a000
0000000000049d70	add	x0, x0, #0x2c0
0000000000049d74	ldr	x8, [x0]
0000000000049d78	blr	x8
0000000000049d7c	ldr	x22, [x0]
0000000000049d80	add	x19, x22, #0x138
0000000000049d84	mov	w8, #0x1
0000000000049d88	ldaxr	w21, [x19]
0000000000049d8c	stlxr	w9, w8, [x19]
0000000000049d90	cbnz	w9, 0x49d88
0000000000049d94	nop
0000000000049d98	ldr	x1, #0x2cab0 ; Objc selector ref: containsObject:
0000000000049d9c	mov	x0, x20
0000000000049da0	bl	0x55584 ; Objc message: -[x0 containsObject:]
0000000000049da4	mov	x20, x0
0000000000049da8	cbz	x22, 0x49ddc
0000000000049dac	ldaxr	w8, [x19]
0000000000049db0	stlxr	w9, w21, [x19]
0000000000049db4	cbnz	w9, 0x49dac
0000000000049db8	cbnz	w21, 0x49ddc
0000000000049dbc	cmp	w8, #0x1
0000000000049dc0	b.ne	0x49ddc
0000000000049dc4	adr	x8, #0x4a4c5
0000000000049dc8	nop
0000000000049dcc	ldarb	w8, [x8]
0000000000049dd0	tbz	w8, #0x0, 0x49ddc
0000000000049dd4	mov	x0, x19
0000000000049dd8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049ddc	mov	x0, x20
0000000000049de0	ldp	x29, x30, [sp, #0x20]
0000000000049de4	ldp	x20, x19, [sp, #0x10]
0000000000049de8	ldp	x22, x21, [sp], #0x30
0000000000049dec	ret
0000000000049df0	mov	x20, x0
0000000000049df4	cbz	x22, 0x49e28
0000000000049df8	ldaxr	w8, [x19]
0000000000049dfc	stlxr	w9, w21, [x19]
0000000000049e00	cbnz	w9, 0x49df8
0000000000049e04	cbnz	w21, 0x49e28
0000000000049e08	cmp	w8, #0x1
0000000000049e0c	b.ne	0x49e28
0000000000049e10	adr	x8, #0x4a479
0000000000049e14	nop
0000000000049e18	ldarb	w8, [x8]
0000000000049e1c	tbz	w8, #0x0, 0x49e28
0000000000049e20	mov	x0, x19
0000000000049e24	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049e28	mov	x0, x20
0000000000049e2c	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_NSSetAsKSet_getElement:
0000000000049e30	stp	x26, x25, [sp, #-0x50]!
0000000000049e34	stp	x24, x23, [sp, #0x10]
0000000000049e38	stp	x22, x21, [sp, #0x20]
0000000000049e3c	stp	x20, x19, [sp, #0x30]
0000000000049e40	stp	x29, x30, [sp, #0x40]
0000000000049e44	add	x29, sp, #0x40
0000000000049e48	mov	x19, x2
0000000000049e4c	ldar	x8, [x0]
0000000000049e50	and	x8, x8, #0xfffffffffffffffc
0000000000049e54	ldr	x9, [x8]
0000000000049e58	cmp	x8, #0x0
0000000000049e5c	ccmp	x9, x8, #0x4, ne
0000000000049e60	b.ne	0x49e80
0000000000049e64	mov	x21, #0x0
0000000000049e68	adrp	x22, 45 ; 0x76000
0000000000049e6c	adrp	x23, 45 ; 0x76000
0000000000049e70	cbz	x1, 0x49e94
0000000000049e74	mov	x0, x1
0000000000049e78	bl	_Kotlin_ObjCExport_refToObjC
0000000000049e7c	b	0x49ea0
0000000000049e80	add	x8, x8, #0x10
0000000000049e84	ldar	x21, [x8]
0000000000049e88	adrp	x22, 45 ; 0x76000
0000000000049e8c	adrp	x23, 45 ; 0x76000
0000000000049e90	cbnz	x1, 0x49e74
0000000000049e94	ldr	x0, [x22, #0xc98]
0000000000049e98	ldr	x1, [x23, #0x9f0]
0000000000049e9c	bl	0x55584 ; Objc message: -[x0 containsObject:]
0000000000049ea0	mov	x2, x0
0000000000049ea4	adrp	x0, 49 ; 0x7a000
0000000000049ea8	add	x0, x0, #0x2c0
0000000000049eac	ldr	x8, [x0]
0000000000049eb0	blr	x8
0000000000049eb4	ldr	x25, [x0]
0000000000049eb8	add	x20, x25, #0x138
0000000000049ebc	mov	w8, #0x1
0000000000049ec0	ldaxr	w24, [x20]
0000000000049ec4	stlxr	w9, w8, [x20]
0000000000049ec8	cbnz	w9, 0x49ec0
0000000000049ecc	nop
0000000000049ed0	ldr	x1, #0x2cae8 ; Objc selector ref: member:
0000000000049ed4	mov	x0, x21
0000000000049ed8	bl	0x55584 ; Objc message: -[x0 member:]
0000000000049edc	mov	x21, x0
0000000000049ee0	cbz	x25, 0x49f14
0000000000049ee4	ldaxr	w8, [x20]
0000000000049ee8	stlxr	w9, w24, [x20]
0000000000049eec	cbnz	w9, 0x49ee4
0000000000049ef0	cbnz	w24, 0x49f14
0000000000049ef4	cmp	w8, #0x1
0000000000049ef8	b.ne	0x49f14
0000000000049efc	adr	x8, #0x4a38d
0000000000049f00	nop
0000000000049f04	ldarb	w8, [x8]
0000000000049f08	tbz	w8, #0x0, 0x49f14
0000000000049f0c	mov	x0, x20
0000000000049f10	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049f14	ldr	x0, [x22, #0xc98]
0000000000049f18	ldr	x1, [x23, #0x9f0]
0000000000049f1c	bl	0x55584 ; Objc message: -[x0 member:]
0000000000049f20	cmp	x21, x0
0000000000049f24	b.eq	0x49f54
0000000000049f28	cbz	x21, 0x49f54
0000000000049f2c	nop
0000000000049f30	ldr	x1, #0x4a5a8
0000000000049f34	mov	x0, x21
0000000000049f38	mov	x2, x19
0000000000049f3c	ldp	x29, x30, [sp, #0x40]
0000000000049f40	ldp	x20, x19, [sp, #0x30]
0000000000049f44	ldp	x22, x21, [sp, #0x20]
0000000000049f48	ldp	x24, x23, [sp, #0x10]
0000000000049f4c	ldp	x26, x25, [sp], #0x50
0000000000049f50	b	0x55584 ; Objc message: -[x0 member:]
0000000000049f54	str	xzr, [x19]
0000000000049f58	mov	x0, #0x0
0000000000049f5c	ldp	x29, x30, [sp, #0x40]
0000000000049f60	ldp	x20, x19, [sp, #0x30]
0000000000049f64	ldp	x22, x21, [sp, #0x20]
0000000000049f68	ldp	x24, x23, [sp, #0x10]
0000000000049f6c	ldp	x26, x25, [sp], #0x50
0000000000049f70	ret
0000000000049f74	mov	x19, x0
0000000000049f78	cbz	x25, 0x49fac
0000000000049f7c	ldaxr	w8, [x20]
0000000000049f80	stlxr	w9, w24, [x20]
0000000000049f84	cbnz	w9, 0x49f7c
0000000000049f88	cbnz	w24, 0x49fac
0000000000049f8c	cmp	w8, #0x1
0000000000049f90	b.ne	0x49fac
0000000000049f94	adr	x8, #0x4a2f5
0000000000049f98	nop
0000000000049f9c	ldarb	w8, [x8]
0000000000049fa0	tbz	w8, #0x0, 0x49fac
0000000000049fa4	mov	x0, x20
0000000000049fa8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049fac	mov	x0, x19
0000000000049fb0	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_containsKey:
0000000000049fb4	stp	x22, x21, [sp, #-0x30]!
0000000000049fb8	stp	x20, x19, [sp, #0x10]
0000000000049fbc	stp	x29, x30, [sp, #0x20]
0000000000049fc0	add	x29, sp, #0x20
0000000000049fc4	ldar	x8, [x0]
0000000000049fc8	and	x8, x8, #0xfffffffffffffffc
0000000000049fcc	ldr	x9, [x8]
0000000000049fd0	cmp	x8, #0x0
0000000000049fd4	ccmp	x9, x8, #0x4, ne
0000000000049fd8	b.ne	0x49ff0
0000000000049fdc	mov	x20, #0x0
0000000000049fe0	cbz	x1, 0x49ffc
0000000000049fe4	mov	x0, x1
0000000000049fe8	bl	_Kotlin_ObjCExport_refToObjC
0000000000049fec	b	0x4a010
0000000000049ff0	add	x8, x8, #0x10
0000000000049ff4	ldar	x20, [x8]
0000000000049ff8	cbnz	x1, 0x49fe4
0000000000049ffc	nop
000000000004a000	ldr	x0, #0x2cc98 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004a004	nop
000000000004a008	ldr	x1, #0x2c9e8 ; Objc selector ref: null
000000000004a00c	bl	0x55584 ; Objc message: +[NSNull null]
000000000004a010	mov	x2, x0
000000000004a014	adrp	x0, 48 ; 0x7a000
000000000004a018	add	x0, x0, #0x2c0
000000000004a01c	ldr	x8, [x0]
000000000004a020	blr	x8
000000000004a024	ldr	x22, [x0]
000000000004a028	add	x19, x22, #0x138
000000000004a02c	mov	w8, #0x1
000000000004a030	ldaxr	w21, [x19]
000000000004a034	stlxr	w9, w8, [x19]
000000000004a038	cbnz	w9, 0x4a030
000000000004a03c	nop
000000000004a040	ldr	x1, #0x2c9d8 ; Objc selector ref: objectForKey:
000000000004a044	mov	x0, x20
000000000004a048	bl	0x55584 ; Objc message: -[x0 objectForKey:]
000000000004a04c	mov	x20, x0
000000000004a050	cbz	x22, 0x4a084
000000000004a054	ldaxr	w8, [x19]
000000000004a058	stlxr	w9, w21, [x19]
000000000004a05c	cbnz	w9, 0x4a054
000000000004a060	cbnz	w21, 0x4a084
000000000004a064	cmp	w8, #0x1
000000000004a068	b.ne	0x4a084
000000000004a06c	adr	x8, #0x4a21d
000000000004a070	nop
000000000004a074	ldarb	w8, [x8]
000000000004a078	tbz	w8, #0x0, 0x4a084
000000000004a07c	mov	x0, x19
000000000004a080	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a084	cmp	x20, #0x0
000000000004a088	cset	w0, ne
000000000004a08c	ldp	x29, x30, [sp, #0x20]
000000000004a090	ldp	x20, x19, [sp, #0x10]
000000000004a094	ldp	x22, x21, [sp], #0x30
000000000004a098	ret
000000000004a09c	mov	x20, x0
000000000004a0a0	cbz	x22, 0x4a0d4
000000000004a0a4	ldaxr	w8, [x19]
000000000004a0a8	stlxr	w9, w21, [x19]
000000000004a0ac	cbnz	w9, 0x4a0a4
000000000004a0b0	cbnz	w21, 0x4a0d4
000000000004a0b4	cmp	w8, #0x1
000000000004a0b8	b.ne	0x4a0d4
000000000004a0bc	adr	x8, #0x4a1cd
000000000004a0c0	nop
000000000004a0c4	ldarb	w8, [x8]
000000000004a0c8	tbz	w8, #0x0, 0x4a0d4
000000000004a0cc	mov	x0, x19
000000000004a0d0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a0d4	mov	x0, x20
000000000004a0d8	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_containsValue:
000000000004a0dc	sub	sp, sp, #0x140
000000000004a0e0	stp	x28, x27, [sp, #0xe0]
000000000004a0e4	stp	x26, x25, [sp, #0xf0]
000000000004a0e8	stp	x24, x23, [sp, #0x100]
000000000004a0ec	stp	x22, x21, [sp, #0x110]
000000000004a0f0	stp	x20, x19, [sp, #0x120]
000000000004a0f4	stp	x29, x30, [sp, #0x130]
000000000004a0f8	add	x29, sp, #0x130
000000000004a0fc	ldar	x8, [x0]
000000000004a100	and	x8, x8, #0xfffffffffffffffc
000000000004a104	ldr	x9, [x8]
000000000004a108	cmp	x8, #0x0
000000000004a10c	ccmp	x9, x8, #0x4, ne
000000000004a110	b.ne	0x4a128
000000000004a114	mov	x20, #0x0
000000000004a118	cbz	x1, 0x4a134
000000000004a11c	mov	x0, x1
000000000004a120	bl	_Kotlin_ObjCExport_refToObjC
000000000004a124	b	0x4a148
000000000004a128	add	x8, x8, #0x10
000000000004a12c	ldar	x20, [x8]
000000000004a130	cbnz	x1, 0x4a11c
000000000004a134	nop
000000000004a138	ldr	x0, #0x2cb60 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004a13c	nop
000000000004a140	ldr	x1, #0x2c8b0 ; Objc selector ref: null
000000000004a144	bl	0x55584 ; Objc message: +[NSNull null]
000000000004a148	mov	x21, x0
000000000004a14c	adrp	x0, 48 ; 0x7a000
000000000004a150	add	x0, x0, #0x2c0
000000000004a154	ldr	x8, [x0]
000000000004a158	blr	x8
000000000004a15c	ldr	x23, [x0]
000000000004a160	add	x19, x23, #0x138
000000000004a164	mov	w8, #0x1
000000000004a168	ldaxr	w25, [x19]
000000000004a16c	stlxr	w9, w8, [x19]
000000000004a170	cbnz	w9, 0x4a168
000000000004a174	movi.16b	v0, #0x0
000000000004a178	stp	q0, q0, [sp, #0xb0]
000000000004a17c	stp	q0, q0, [sp, #0x90]
000000000004a180	nop
000000000004a184	ldr	x22, #0x2c6dc ; Objc selector ref: countByEnumeratingWithState:objects:count:
000000000004a188	add	x2, sp, #0x90
000000000004a18c	add	x3, sp, #0x10
000000000004a190	mov	x0, x20
000000000004a194	mov	x1, x22
000000000004a198	mov	w4, #0x10
000000000004a19c	bl	0x55584 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
000000000004a1a0	cbz	x0, 0x4a258
000000000004a1a4	str	x23, [sp, #0x8]
000000000004a1a8	ldr	x8, [sp, #0xa0]
000000000004a1ac	ldr	x27, [x8]
000000000004a1b0	adrp	x8, 44 ; 0x76000
000000000004a1b4	adrp	x9, 44 ; 0x76000
000000000004a1b8	mov	x28, #0x0
000000000004a1bc	ldr	x23, [x8, #0xa18]
000000000004a1c0	ldr	x24, [x9, #0x990]
000000000004a1c4	cmp	x0, #0x1
000000000004a1c8	csinc	x26, x0, xzr, hi
000000000004a1cc	ldr	x8, [sp, #0xa0]
000000000004a1d0	ldr	x8, [x8]
000000000004a1d4	cmp	x8, x27
000000000004a1d8	b.eq	0x4a1e4
000000000004a1dc	mov	x0, x20
000000000004a1e0	bl	0x55548 ; symbol stub for: _objc_enumerationMutation
000000000004a1e4	ldr	x8, [sp, #0x98]
000000000004a1e8	ldr	x2, [x8, x28, lsl #3]
000000000004a1ec	mov	x0, x20
000000000004a1f0	mov	x1, x23
000000000004a1f4	bl	0x55584 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
000000000004a1f8	mov	x1, x24
000000000004a1fc	mov	x2, x21
000000000004a200	bl	0x55584 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
000000000004a204	tbnz	w0, #0x0, 0x4a248
000000000004a208	add	x28, x28, #0x1
000000000004a20c	cmp	x26, x28
000000000004a210	b.ne	0x4a1cc
000000000004a214	add	x2, sp, #0x90
000000000004a218	add	x3, sp, #0x10
000000000004a21c	mov	x0, x20
000000000004a220	mov	x1, x22
000000000004a224	mov	w4, #0x10
000000000004a228	bl	0x55584 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
000000000004a22c	adrp	x8, 44 ; 0x76000
000000000004a230	adrp	x9, 44 ; 0x76000
000000000004a234	cbnz	x0, 0x4a1b8
000000000004a238	mov	w20, #0x0
000000000004a23c	ldr	x23, [sp, #0x8]
000000000004a240	cbnz	x23, 0x4a260
000000000004a244	b	0x4a290
000000000004a248	mov	w20, #0x1
000000000004a24c	ldr	x23, [sp, #0x8]
000000000004a250	cbnz	x23, 0x4a260
000000000004a254	b	0x4a290
000000000004a258	mov	w20, #0x0
000000000004a25c	cbz	x23, 0x4a290
000000000004a260	ldaxr	w8, [x19]
000000000004a264	stlxr	w9, w25, [x19]
000000000004a268	cbnz	w9, 0x4a260
000000000004a26c	cbnz	w25, 0x4a290
000000000004a270	cmp	w8, #0x1
000000000004a274	b.ne	0x4a290
000000000004a278	adr	x8, #0x4a011
000000000004a27c	nop
000000000004a280	ldarb	w8, [x8]
000000000004a284	tbz	w8, #0x0, 0x4a290
000000000004a288	mov	x0, x19
000000000004a28c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a290	mov	x0, x20
000000000004a294	ldp	x29, x30, [sp, #0x130]
000000000004a298	ldp	x20, x19, [sp, #0x120]
000000000004a29c	ldp	x22, x21, [sp, #0x110]
000000000004a2a0	ldp	x24, x23, [sp, #0x100]
000000000004a2a4	ldp	x26, x25, [sp, #0xf0]
000000000004a2a8	ldp	x28, x27, [sp, #0xe0]
000000000004a2ac	add	sp, sp, #0x140
000000000004a2b0	ret
000000000004a2b4	b	0x4a2c0
000000000004a2b8	str	x23, [sp, #0x8]
000000000004a2bc	b	0x4a2c0
000000000004a2c0	mov	x20, x0
000000000004a2c4	ldr	x8, [sp, #0x8]
000000000004a2c8	cbnz	x8, 0x4a2d4
000000000004a2cc	mov	x0, x20
000000000004a2d0	bl	0x55194 ; symbol stub for: __Unwind_Resume
000000000004a2d4	ldaxr	w8, [x19]
000000000004a2d8	stlxr	w9, w25, [x19]
000000000004a2dc	cbnz	w9, 0x4a2d4
000000000004a2e0	cbnz	w25, 0x4a2cc
000000000004a2e4	cmp	w8, #0x1
000000000004a2e8	b.ne	0x4a2cc
000000000004a2ec	adr	x8, #0x49f9d
000000000004a2f0	nop
000000000004a2f4	ldarb	w8, [x8]
000000000004a2f8	tbz	w8, #0x0, 0x4a2cc
000000000004a2fc	mov	x0, x19
000000000004a300	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a304	mov	x0, x20
000000000004a308	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_get:
000000000004a30c	stp	x26, x25, [sp, #-0x50]!
000000000004a310	stp	x24, x23, [sp, #0x10]
000000000004a314	stp	x22, x21, [sp, #0x20]
000000000004a318	stp	x20, x19, [sp, #0x30]
000000000004a31c	stp	x29, x30, [sp, #0x40]
000000000004a320	add	x29, sp, #0x40
000000000004a324	mov	x19, x2
000000000004a328	ldar	x8, [x0]
000000000004a32c	and	x8, x8, #0xfffffffffffffffc
000000000004a330	ldr	x9, [x8]
000000000004a334	cmp	x8, #0x0
000000000004a338	ccmp	x9, x8, #0x4, ne
000000000004a33c	b.ne	0x4a35c
000000000004a340	mov	x21, #0x0
000000000004a344	adrp	x22, 44 ; 0x76000
000000000004a348	adrp	x23, 44 ; 0x76000
000000000004a34c	cbz	x1, 0x4a370
000000000004a350	mov	x0, x1
000000000004a354	bl	_Kotlin_ObjCExport_refToObjC
000000000004a358	b	0x4a37c
000000000004a35c	add	x8, x8, #0x10
000000000004a360	ldar	x21, [x8]
000000000004a364	adrp	x22, 44 ; 0x76000
000000000004a368	adrp	x23, 44 ; 0x76000
000000000004a36c	cbnz	x1, 0x4a350
000000000004a370	ldr	x0, [x22, #0xc98]
000000000004a374	ldr	x1, [x23, #0x9f0]
000000000004a378	bl	0x55584 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
000000000004a37c	mov	x2, x0
000000000004a380	adrp	x0, 48 ; 0x7a000
000000000004a384	add	x0, x0, #0x2c0
000000000004a388	ldr	x8, [x0]
000000000004a38c	blr	x8
000000000004a390	ldr	x25, [x0]
000000000004a394	add	x20, x25, #0x138
000000000004a398	mov	w8, #0x1
000000000004a39c	ldaxr	w24, [x20]
000000000004a3a0	stlxr	w9, w8, [x20]
000000000004a3a4	cbnz	w9, 0x4a39c
000000000004a3a8	nop
000000000004a3ac	ldr	x1, #0x2c66c ; Objc selector ref: objectForKey:
000000000004a3b0	mov	x0, x21
000000000004a3b4	bl	0x55584 ; Objc message: -[x0 objectForKey:]
000000000004a3b8	mov	x21, x0
000000000004a3bc	cbz	x25, 0x4a3f0
000000000004a3c0	ldaxr	w8, [x20]
000000000004a3c4	stlxr	w9, w24, [x20]
000000000004a3c8	cbnz	w9, 0x4a3c0
000000000004a3cc	cbnz	w24, 0x4a3f0
000000000004a3d0	cmp	w8, #0x1
000000000004a3d4	b.ne	0x4a3f0
000000000004a3d8	adr	x8, #0x49eb1
000000000004a3dc	nop
000000000004a3e0	ldarb	w8, [x8]
000000000004a3e4	tbz	w8, #0x0, 0x4a3f0
000000000004a3e8	mov	x0, x20
000000000004a3ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a3f0	ldr	x0, [x22, #0xc98]
000000000004a3f4	ldr	x1, [x23, #0x9f0]
000000000004a3f8	bl	0x55584 ; Objc message: -[x0 objectForKey:]
000000000004a3fc	cmp	x21, x0
000000000004a400	b.eq	0x4a430
000000000004a404	cbz	x21, 0x4a430
000000000004a408	nop
000000000004a40c	ldr	x1, #0x4a0cc
000000000004a410	mov	x0, x21
000000000004a414	mov	x2, x19
000000000004a418	ldp	x29, x30, [sp, #0x40]
000000000004a41c	ldp	x20, x19, [sp, #0x30]
000000000004a420	ldp	x22, x21, [sp, #0x20]
000000000004a424	ldp	x24, x23, [sp, #0x10]
000000000004a428	ldp	x26, x25, [sp], #0x50
000000000004a42c	b	0x55584 ; Objc message: -[x0 objectForKey:]
000000000004a430	str	xzr, [x19]
000000000004a434	mov	x0, #0x0
000000000004a438	ldp	x29, x30, [sp, #0x40]
000000000004a43c	ldp	x20, x19, [sp, #0x30]
000000000004a440	ldp	x22, x21, [sp, #0x20]
000000000004a444	ldp	x24, x23, [sp, #0x10]
000000000004a448	ldp	x26, x25, [sp], #0x50
000000000004a44c	ret
000000000004a450	mov	x19, x0
000000000004a454	cbz	x25, 0x4a488
000000000004a458	ldaxr	w8, [x20]
000000000004a45c	stlxr	w9, w24, [x20]
000000000004a460	cbnz	w9, 0x4a458
000000000004a464	cbnz	w24, 0x4a488
000000000004a468	cmp	w8, #0x1
000000000004a46c	b.ne	0x4a488
000000000004a470	adr	x8, #0x49e19
000000000004a474	nop
000000000004a478	ldarb	w8, [x8]
000000000004a47c	tbz	w8, #0x0, 0x4a488
000000000004a480	mov	x0, x20
000000000004a484	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a488	mov	x0, x19
000000000004a48c	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification:
000000000004a490	sub	sp, sp, #0x80
000000000004a494	stp	x28, x27, [sp, #0x20]
000000000004a498	stp	x26, x25, [sp, #0x30]
000000000004a49c	stp	x24, x23, [sp, #0x40]
000000000004a4a0	stp	x22, x21, [sp, #0x50]
000000000004a4a4	stp	x20, x19, [sp, #0x60]
000000000004a4a8	stp	x29, x30, [sp, #0x70]
000000000004a4ac	add	x29, sp, #0x70
000000000004a4b0	mov	x20, x2
000000000004a4b4	ldar	x8, [x0]
000000000004a4b8	and	x8, x8, #0xfffffffffffffffc
000000000004a4bc	ldr	x9, [x8]
000000000004a4c0	cmp	x8, #0x0
000000000004a4c4	ccmp	x9, x8, #0x4, ne
000000000004a4c8	b.ne	0x4a4e8
000000000004a4cc	mov	x22, #0x0
000000000004a4d0	adrp	x24, 44 ; 0x76000
000000000004a4d4	adrp	x25, 44 ; 0x76000
000000000004a4d8	cbz	x1, 0x4a4fc
000000000004a4dc	mov	x0, x1
000000000004a4e0	bl	_Kotlin_ObjCExport_refToObjC
000000000004a4e4	b	0x4a508
000000000004a4e8	add	x8, x8, #0x10
000000000004a4ec	ldar	x22, [x8]
000000000004a4f0	adrp	x24, 44 ; 0x76000
000000000004a4f4	adrp	x25, 44 ; 0x76000
000000000004a4f8	cbnz	x1, 0x4a4dc
000000000004a4fc	ldr	x0, [x24, #0xc98]
000000000004a500	ldr	x1, [x25, #0x9f0]
000000000004a504	bl	0x55584 ; Objc message: -[x0 objectForKey:]
000000000004a508	mov	x2, x0
000000000004a50c	adrp	x19, 48 ; 0x7a000
000000000004a510	add	x19, x19, #0x2c0
000000000004a514	ldr	x23, [x19]
000000000004a518	mov	x0, x19
000000000004a51c	blr	x23
000000000004a520	ldr	x27, [x0]
000000000004a524	add	x21, x27, #0x138
000000000004a528	mov	w8, #0x1
000000000004a52c	ldaxr	w26, [x21]
000000000004a530	stlxr	w9, w8, [x21]
000000000004a534	cbnz	w9, 0x4a52c
000000000004a538	nop
000000000004a53c	ldr	x1, #0x2c4dc ; Objc selector ref: objectForKey:
000000000004a540	mov	x0, x22
000000000004a544	bl	0x55584 ; Objc message: -[x0 objectForKey:]
000000000004a548	mov	x22, x0
000000000004a54c	cbz	x27, 0x4a580
000000000004a550	ldaxr	w8, [x21]
000000000004a554	stlxr	w9, w26, [x21]
000000000004a558	cbnz	w9, 0x4a550
000000000004a55c	cbnz	w26, 0x4a580
000000000004a560	cmp	w8, #0x1
000000000004a564	b.ne	0x4a580
000000000004a568	adr	x8, #0x49d21
000000000004a56c	nop
000000000004a570	ldarb	w8, [x8]
000000000004a574	tbz	w8, #0x0, 0x4a580
000000000004a578	mov	x0, x21
000000000004a57c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a580	cbz	x22, 0x4a5f0
000000000004a584	ldr	x0, [x24, #0xc98]
000000000004a588	ldr	x1, [x25, #0x9f0]
000000000004a58c	bl	0x55584 ; Objc message: -[x0 objectForKey:]
000000000004a590	cmp	x22, x0
000000000004a594	b.eq	0x4a5c8
000000000004a598	nop
000000000004a59c	ldr	x1, #0x49f3c
000000000004a5a0	mov	x0, x22
000000000004a5a4	mov	x2, x20
000000000004a5a8	ldp	x29, x30, [sp, #0x70]
000000000004a5ac	ldp	x20, x19, [sp, #0x60]
000000000004a5b0	ldp	x22, x21, [sp, #0x50]
000000000004a5b4	ldp	x24, x23, [sp, #0x40]
000000000004a5b8	ldp	x26, x25, [sp, #0x30]
000000000004a5bc	ldp	x28, x27, [sp, #0x20]
000000000004a5c0	add	sp, sp, #0x80
000000000004a5c4	b	0x55584 ; Objc message: -[x0 objectForKey:]
000000000004a5c8	str	xzr, [x20]
000000000004a5cc	mov	x0, #0x0
000000000004a5d0	ldp	x29, x30, [sp, #0x70]
000000000004a5d4	ldp	x20, x19, [sp, #0x60]
000000000004a5d8	ldp	x22, x21, [sp, #0x50]
000000000004a5dc	ldp	x24, x23, [sp, #0x40]
000000000004a5e0	ldp	x26, x25, [sp, #0x30]
000000000004a5e4	ldp	x28, x27, [sp, #0x20]
000000000004a5e8	add	sp, sp, #0x80
000000000004a5ec	ret
000000000004a5f0	movi.16b	v0, #0x0
000000000004a5f4	stp	q0, q0, [sp]
000000000004a5f8	mov	x0, x19
000000000004a5fc	blr	x23
000000000004a600	ldr	x8, [x0]
000000000004a604	ldr	x9, [x8, #0x110]
000000000004a608	mov	x10, sp
000000000004a60c	str	x10, [x8, #0x110]
000000000004a610	mov	x8, #0x400000000
000000000004a614	stp	x9, x8, [sp, #0x8]
000000000004a618	adr	x21, #0x49c71
000000000004a61c	nop
000000000004a620	ldarb	w8, [x21]
000000000004a624	tbz	w8, #0x0, 0x4a62c
000000000004a628	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004a62c	mov	x0, x19
000000000004a630	blr	x23
000000000004a634	ldr	x8, [x0]
000000000004a638	ldr	x8, [x8, #0x118]
000000000004a63c	add	x0, x8, #0x70
000000000004a640	mov	w1, #0x38
000000000004a644	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004a648	mov	x20, x0
000000000004a64c	adr	x8, #0x16f74
000000000004a650	nop
000000000004a654	str	x8, [x20, #0x10]!
000000000004a658	stur	xzr, [x20, #-0x8]
000000000004a65c	str	x20, [sp, #0x18]
000000000004a660	adr	x1, #0x24000
000000000004a664	nop
000000000004a668	mov	x0, x20
000000000004a66c	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000004a670	ldarb	w8, [x21]
000000000004a674	tbz	w8, #0x0, 0x4a67c
000000000004a678	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004a67c	mov	x0, x20
000000000004a680	bl	_ThrowException
000000000004a684	brk	#0x1
000000000004a688	mov	x20, x0
000000000004a68c	mov	x0, x19
000000000004a690	blr	x23
000000000004a694	ldr	x8, [x0]
000000000004a698	ldr	x9, [sp, #0x8]
000000000004a69c	str	x9, [x8, #0x110]
000000000004a6a0	mov	x0, x20
000000000004a6a4	bl	0x55194 ; symbol stub for: __Unwind_Resume
000000000004a6a8	mov	x20, x0
000000000004a6ac	cbnz	x27, 0x4a6b8
000000000004a6b0	mov	x0, x20
000000000004a6b4	bl	0x55194 ; symbol stub for: __Unwind_Resume
000000000004a6b8	ldaxr	w8, [x21]
000000000004a6bc	stlxr	w9, w26, [x21]
000000000004a6c0	cbnz	w9, 0x4a6b8
000000000004a6c4	cbnz	w26, 0x4a6b0
000000000004a6c8	cmp	w8, #0x1
000000000004a6cc	b.ne	0x4a6b0
000000000004a6d0	adr	x8, #0x49bb9
000000000004a6d4	nop
000000000004a6d8	ldarb	w8, [x8]
000000000004a6dc	tbz	w8, #0x0, 0x4a6b0
000000000004a6e0	mov	x0, x21
000000000004a6e4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a6e8	mov	x0, x20
000000000004a6ec	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_containsEntry:
000000000004a6f0	stp	x24, x23, [sp, #-0x40]!
000000000004a6f4	stp	x22, x21, [sp, #0x10]
000000000004a6f8	stp	x20, x19, [sp, #0x20]
000000000004a6fc	stp	x29, x30, [sp, #0x30]
000000000004a700	add	x29, sp, #0x30
000000000004a704	mov	x19, x1
000000000004a708	ldar	x8, [x0]
000000000004a70c	and	x8, x8, #0xfffffffffffffffc
000000000004a710	ldr	x9, [x8]
000000000004a714	cmp	x8, #0x0
000000000004a718	ccmp	x9, x8, #0x4, ne
000000000004a71c	b.ne	0x4a744
000000000004a720	mov	x20, #0x0
000000000004a724	cbz	x2, 0x4a750
000000000004a728	mov	x0, x2
000000000004a72c	bl	_Kotlin_ObjCExport_refToObjC
000000000004a730	mov	x21, x0
000000000004a734	cbz	x19, 0x4a76c
000000000004a738	mov	x0, x19
000000000004a73c	bl	_Kotlin_ObjCExport_refToObjC
000000000004a740	b	0x4a780
000000000004a744	add	x8, x8, #0x10
000000000004a748	ldar	x20, [x8]
000000000004a74c	cbnz	x2, 0x4a728
000000000004a750	nop
000000000004a754	ldr	x0, #0x2c544 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004a758	nop
000000000004a75c	ldr	x1, #0x2c294 ; Objc selector ref: null
000000000004a760	bl	0x55584 ; Objc message: +[NSNull null]
000000000004a764	mov	x21, x0
000000000004a768	cbnz	x19, 0x4a738
000000000004a76c	nop
000000000004a770	ldr	x0, #0x2c528 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004a774	nop
000000000004a778	ldr	x1, #0x2c278 ; Objc selector ref: null
000000000004a77c	bl	0x55584 ; Objc message: +[NSNull null]
000000000004a780	mov	x2, x0
000000000004a784	adrp	x0, 48 ; 0x7a000
000000000004a788	add	x0, x0, #0x2c0
000000000004a78c	ldr	x8, [x0]
000000000004a790	blr	x8
000000000004a794	ldr	x23, [x0]
000000000004a798	add	x19, x23, #0x138
000000000004a79c	mov	w8, #0x1
000000000004a7a0	ldaxr	w22, [x19]
000000000004a7a4	stlxr	w9, w8, [x19]
000000000004a7a8	cbnz	w9, 0x4a7a0
000000000004a7ac	nop
000000000004a7b0	ldr	x1, #0x2c268 ; Objc selector ref: objectForKey:
000000000004a7b4	mov	x0, x20
000000000004a7b8	bl	0x55584 ; Objc message: -[x0 objectForKey:]
000000000004a7bc	mov	x2, x0
000000000004a7c0	nop
000000000004a7c4	ldr	x1, #0x2c1cc ; Objc selector ref: isEqual:
000000000004a7c8	mov	x0, x21
000000000004a7cc	bl	0x55584 ; Objc message: -[x0 isEqual:]
000000000004a7d0	mov	x20, x0
000000000004a7d4	cbz	x23, 0x4a808
000000000004a7d8	ldaxr	w8, [x19]
000000000004a7dc	stlxr	w9, w22, [x19]
000000000004a7e0	cbnz	w9, 0x4a7d8
000000000004a7e4	cbnz	w22, 0x4a808
000000000004a7e8	cmp	w8, #0x1
000000000004a7ec	b.ne	0x4a808
000000000004a7f0	adr	x8, #0x49a99
000000000004a7f4	nop
000000000004a7f8	ldarb	w8, [x8]
000000000004a7fc	tbz	w8, #0x0, 0x4a808
000000000004a800	mov	x0, x19
000000000004a804	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a808	mov	x0, x20
000000000004a80c	ldp	x29, x30, [sp, #0x30]
000000000004a810	ldp	x20, x19, [sp, #0x20]
000000000004a814	ldp	x22, x21, [sp, #0x10]
000000000004a818	ldp	x24, x23, [sp], #0x40
000000000004a81c	ret
000000000004a820	mov	x20, x0
000000000004a824	cbz	x23, 0x4a858
000000000004a828	ldaxr	w8, [x19]
000000000004a82c	stlxr	w9, w22, [x19]
000000000004a830	cbnz	w9, 0x4a828
000000000004a834	cbnz	w22, 0x4a858
000000000004a838	cmp	w8, #0x1
000000000004a83c	b.ne	0x4a858
000000000004a840	adr	x8, #0x49a49
000000000004a844	nop
000000000004a848	ldarb	w8, [x8]
000000000004a84c	tbz	w8, #0x0, 0x4a858
000000000004a850	mov	x0, x19
000000000004a854	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a858	mov	x0, x20
000000000004a85c	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_ObjCExport_trapOnUndeclaredException:
000000000004a860	stp	x20, x19, [sp, #-0x20]!
000000000004a864	stp	x29, x30, [sp, #0x10]
000000000004a868	add	x29, sp, #0x10
000000000004a86c	mov	x19, x0
000000000004a870	bl	__ZL14printlnMessagePKc
000000000004a874	mov	x0, x19
000000000004a878	bl	__ZN6kotlin25ProcessUnhandledExceptionEP9ObjHeader
000000000004a87c	mov	x0, x19
000000000004a880	bl	__ZN6kotlin31TerminateWithUnhandledExceptionEP9ObjHeader
__ZL14printlnMessagePKc:
000000000004a884	sub	sp, sp, #0x20
000000000004a888	stp	x29, x30, [sp, #0x10]
000000000004a88c	add	x29, sp, #0x10
000000000004a890	adr	x8, #0x14312 ; literal pool for: "Function doesn't have or inherit @Throws annotation and thus exception isn't propagated from Kotlin to Objective-C/Swift as NSError.\nIt is considered unexpected and unhandled instead. Program will be terminated."
000000000004a894	nop
000000000004a898	str	x8, [sp]
000000000004a89c	adr	x0, #0x143da ; literal pool for: "%s\n"
000000000004a8a0	nop
000000000004a8a4	bl	__ZN5konan13consolePrintfEPKcz
000000000004a8a8	ldp	x29, x30, [sp, #0x10]
000000000004a8ac	add	sp, sp, #0x20
000000000004a8b0	ret
_Kotlin_Interop_CreateKStringFromNSString:
000000000004a8b4	stp	x22, x21, [sp, #-0x30]!
000000000004a8b8	stp	x20, x19, [sp, #0x10]
000000000004a8bc	stp	x29, x30, [sp, #0x20]
000000000004a8c0	add	x29, sp, #0x20
000000000004a8c4	mov	x19, x1
000000000004a8c8	cbz	x0, 0x4a984
000000000004a8cc	mov	x1, x0
000000000004a8d0	mov	x0, #0x0
000000000004a8d4	bl	0x5514c ; symbol stub for: _CFStringCreateCopy
000000000004a8d8	mov	x20, x0
000000000004a8dc	bl	0x55164 ; symbol stub for: _CFStringGetLength
000000000004a8e0	mov	x22, x0
000000000004a8e4	tbnz	w22, #0x1f, 0x4a9a0
000000000004a8e8	adrp	x0, 48 ; 0x7a000
000000000004a8ec	add	x0, x0, #0x2c0
000000000004a8f0	ldr	x8, [x0]
000000000004a8f4	blr	x8
000000000004a8f8	ldr	x8, [x0]
000000000004a8fc	ldr	x8, [x8, #0x118]
000000000004a900	ubfiz	x9, x22, #1, #32
000000000004a904	add	x9, x9, #0x1f
000000000004a908	and	x1, x9, #0x3fffffff8
000000000004a90c	add	x0, x8, #0x70
000000000004a910	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004a914	mov	x21, x0
000000000004a918	adr	x8, #0x175c8
000000000004a91c	nop
000000000004a920	stp	x8, xzr, [x21, #0x10]!
000000000004a924	stur	xzr, [x21, #-0x8]
000000000004a928	str	w22, [x21, #0x8]
000000000004a92c	str	x21, [x19]
000000000004a930	add	x3, x21, #0x10
000000000004a934	mov	x0, x20
000000000004a938	mov	x1, #0x0
000000000004a93c	mov	x2, x22
000000000004a940	bl	0x55158 ; symbol stub for: _CFStringGetCharacters
000000000004a944	ldar	x8, [x21]
000000000004a948	and	x8, x8, #0xfffffffffffffffc
000000000004a94c	ldr	x9, [x8]
000000000004a950	cmp	x9, x8
000000000004a954	csel	x0, xzr, x8, eq
000000000004a958	cbnz	x0, 0x4a964
000000000004a95c	mov	x0, x21
000000000004a960	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004a964	add	x8, x0, #0x10
000000000004a968	stlr	x20, [x8]
000000000004a96c	str	x21, [x19]
000000000004a970	mov	x0, x21
000000000004a974	ldp	x29, x30, [sp, #0x20]
000000000004a978	ldp	x20, x19, [sp, #0x10]
000000000004a97c	ldp	x22, x21, [sp], #0x30
000000000004a980	ret
000000000004a984	mov	x21, #0x0
000000000004a988	str	x21, [x19]
000000000004a98c	mov	x0, x21
000000000004a990	ldp	x29, x30, [sp, #0x20]
000000000004a994	ldp	x20, x19, [sp, #0x10]
000000000004a998	ldp	x22, x21, [sp], #0x30
000000000004a99c	ret
000000000004a9a0	bl	_ThrowIllegalArgumentException
_Kotlin_io_Console_print:
000000000004a9a4	sub	sp, sp, #0x60
000000000004a9a8	stp	x24, x23, [sp, #0x20]
000000000004a9ac	stp	x22, x21, [sp, #0x30]
000000000004a9b0	stp	x20, x19, [sp, #0x40]
000000000004a9b4	stp	x29, x30, [sp, #0x50]
000000000004a9b8	add	x29, sp, #0x50
000000000004a9bc	mov	x19, x0
000000000004a9c0	ldr	x8, [x0]
000000000004a9c4	and	x8, x8, #0xfffffffffffffffc
000000000004a9c8	ldr	x8, [x8]
000000000004a9cc	adr	x9, #0x17514
000000000004a9d0	nop
000000000004a9d4	cmp	x8, x9
000000000004a9d8	b.ne	0x4ab58
000000000004a9dc	stp	xzr, xzr, [sp, #0x8]
000000000004a9e0	str	xzr, [sp, #0x18]
000000000004a9e4	ldr	w1, [x19, #0x8]
000000000004a9e8	add	x0, sp, #0x8
000000000004a9ec	bl	__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE7reserveEm
000000000004a9f0	ldr	w8, [x19, #0x8]
000000000004a9f4	lsl	x8, x8, #1
000000000004a9f8	cbz	x8, 0x4aa94
000000000004a9fc	add	x24, x19, #0x10
000000000004aa00	add	x19, x24, x8
000000000004aa04	mov	w20, #0xd800
000000000004aa08	mov	w21, #0x2400
000000000004aa0c	movk	w21, #0xfca0, lsl #16
000000000004aa10	mov	w22, #0xdc00
000000000004aa14	mov	w23, #0xfffd
000000000004aa18	b	0x4aa38
000000000004aa1c	cmp	w10, w22
000000000004aa20	csel	w0, w23, w9, eq
000000000004aa24	mov	x24, x8
000000000004aa28	add	x1, sp, #0x8
000000000004aa2c	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
000000000004aa30	cmp	x24, x19
000000000004aa34	b.eq	0x4aa94
000000000004aa38	mov	x8, x24
000000000004aa3c	ldrh	w9, [x8], #0x2
000000000004aa40	and	w10, w9, #0xfc00
000000000004aa44	cmp	w10, w20
000000000004aa48	b.ne	0x4aa1c
000000000004aa4c	cmp	x8, x19
000000000004aa50	b.eq	0x4aa88
000000000004aa54	ldrh	w10, [x24, #0x2]
000000000004aa58	and	w11, w10, #0xfc00
000000000004aa5c	add	w9, w10, w9, lsl #10
000000000004aa60	add	w9, w9, w21
000000000004aa64	add	x10, x24, #0x4
000000000004aa68	cmp	w11, w22
000000000004aa6c	csel	w0, w9, w23, eq
000000000004aa70	csel	x24, x10, x8, eq
000000000004aa74	add	x1, sp, #0x8
000000000004aa78	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
000000000004aa7c	cmp	x24, x19
000000000004aa80	b.ne	0x4aa38
000000000004aa84	b	0x4aa94
000000000004aa88	add	x1, sp, #0x8
000000000004aa8c	mov	w0, #0xfffd
000000000004aa90	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
000000000004aa94	adrp	x0, 48 ; 0x7a000
000000000004aa98	add	x0, x0, #0x2c0
000000000004aa9c	ldr	x8, [x0]
000000000004aaa0	blr	x8
000000000004aaa4	ldr	x22, [x0]
000000000004aaa8	add	x19, x22, #0x138
000000000004aaac	mov	w8, #0x1
000000000004aab0	ldaxr	w21, [x19]
000000000004aab4	stlxr	w9, w8, [x19]
000000000004aab8	cbnz	w9, 0x4aab0
000000000004aabc	ldrb	w8, [sp, #0x1f]
000000000004aac0	sxtb	w9, w8
000000000004aac4	ldp	x10, x11, [sp, #0x8]
000000000004aac8	cmp	w9, #0x0
000000000004aacc	add	x9, sp, #0x8
000000000004aad0	csel	x1, x10, x9, lt
000000000004aad4	csel	x8, x11, x8, lt
000000000004aad8	and	x2, x8, #0xffffffff
000000000004aadc	mov	w0, #0x1
000000000004aae0	bl	0x557b8 ; symbol stub for: _write
000000000004aae4	cbz	x22, 0x4ab18
000000000004aae8	ldaxr	w8, [x19]
000000000004aaec	stlxr	w9, w21, [x19]
000000000004aaf0	cbnz	w9, 0x4aae8
000000000004aaf4	cbnz	w21, 0x4ab18
000000000004aaf8	cmp	w8, #0x1
000000000004aafc	b.ne	0x4ab18
000000000004ab00	adr	x8, #0x49789
000000000004ab04	nop
000000000004ab08	ldarb	w8, [x8]
000000000004ab0c	tbz	w8, #0x0, 0x4ab18
000000000004ab10	mov	x0, x19
000000000004ab14	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ab18	ldrsb	w8, [sp, #0x1f]
000000000004ab1c	tbnz	w8, #0x1f, 0x4ab38
000000000004ab20	ldp	x29, x30, [sp, #0x50]
000000000004ab24	ldp	x20, x19, [sp, #0x40]
000000000004ab28	ldp	x22, x21, [sp, #0x30]
000000000004ab2c	ldp	x24, x23, [sp, #0x20]
000000000004ab30	add	sp, sp, #0x60
000000000004ab34	ret
000000000004ab38	ldr	x0, [sp, #0x8]
000000000004ab3c	bl	0x55458 ; symbol stub for: _free
000000000004ab40	ldp	x29, x30, [sp, #0x50]
000000000004ab44	ldp	x20, x19, [sp, #0x40]
000000000004ab48	ldp	x22, x21, [sp, #0x30]
000000000004ab4c	ldp	x24, x23, [sp, #0x20]
000000000004ab50	add	sp, sp, #0x60
000000000004ab54	ret
000000000004ab58	adr	x1, #0x17388
000000000004ab5c	nop
000000000004ab60	mov	x0, x19
000000000004ab64	bl	_ThrowClassCastException
000000000004ab68	mov	x20, x0
000000000004ab6c	cbz	x22, 0x4abb0
000000000004ab70	ldaxr	w8, [x19]
000000000004ab74	stlxr	w9, w21, [x19]
000000000004ab78	cbnz	w9, 0x4ab70
000000000004ab7c	add	x22, sp, #0x8
000000000004ab80	cbnz	w21, 0x4abb4
000000000004ab84	cmp	w8, #0x1
000000000004ab88	b.ne	0x4abb4
000000000004ab8c	adr	x8, #0x496fd
000000000004ab90	nop
000000000004ab94	ldarb	w8, [x8]
000000000004ab98	tbz	w8, #0x0, 0x4abb0
000000000004ab9c	add	x22, sp, #0x8
000000000004aba0	mov	x0, x19
000000000004aba4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004aba8	b	0x4abb4
000000000004abac	mov	x20, x0
000000000004abb0	add	x22, sp, #0x8
000000000004abb4	ldrsb	w8, [x22, #0x17]
000000000004abb8	tbz	w8, #0x1f, 0x4abc4
000000000004abbc	ldr	x0, [sp, #0x8]
000000000004abc0	bl	0x55458 ; symbol stub for: _free
000000000004abc4	mov	x0, x20
000000000004abc8	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE7reserveEm:
000000000004abcc	stp	x26, x25, [sp, #-0x50]!
000000000004abd0	stp	x24, x23, [sp, #0x10]
000000000004abd4	stp	x22, x21, [sp, #0x20]
000000000004abd8	stp	x20, x19, [sp, #0x30]
000000000004abdc	stp	x29, x30, [sp, #0x40]
000000000004abe0	add	x29, sp, #0x40
000000000004abe4	mov	x19, x0
000000000004abe8	cmn	x1, #0x10
000000000004abec	b.hs	0x4ad20
000000000004abf0	ldrsb	w8, [x19, #0x17]
000000000004abf4	and	x24, x8, #0xff
000000000004abf8	tbnz	w8, #0x1f, 0x4ac08
000000000004abfc	mov	w8, #0x16
000000000004ac00	mov	x22, x24
000000000004ac04	b	0x4ac14
000000000004ac08	ldp	x22, x8, [x19, #0x8]
000000000004ac0c	and	x8, x8, #0x7fffffffffffffff
000000000004ac10	sub	x8, x8, #0x1
000000000004ac14	cmp	x22, x1
000000000004ac18	csel	x9, x22, x1, hi
000000000004ac1c	add	x10, x9, #0x10
000000000004ac20	and	x10, x10, #0xfffffffffffffff0
000000000004ac24	sub	x10, x10, #0x1
000000000004ac28	cmp	x9, #0x16
000000000004ac2c	mov	w9, #0x16
000000000004ac30	csel	x23, x10, x9, hi
000000000004ac34	cmp	x23, x8
000000000004ac38	b.eq	0x4ace0
000000000004ac3c	cmp	x23, #0x16
000000000004ac40	b.ne	0x4ac64
000000000004ac44	mov	w25, #0x0
000000000004ac48	ldr	x21, [x19]
000000000004ac4c	tbnz	w24, #0x7, 0x4ac90
000000000004ac50	mov	w26, #0x1
000000000004ac54	mov	x20, x19
000000000004ac58	adds	x2, x24, #0x1
000000000004ac5c	b.lo	0x4acbc
000000000004ac60	b	0x4acc8
000000000004ac64	add	x0, x23, #0x1
000000000004ac68	mov	w1, #0x1
000000000004ac6c	bl	0x553d4 ; symbol stub for: _calloc
000000000004ac70	mov	x20, x0
000000000004ac74	tbnz	w24, #0x7, 0x4aca8
000000000004ac78	mov	w26, #0x0
000000000004ac7c	mov	w25, #0x1
000000000004ac80	mov	x21, x19
000000000004ac84	adds	x2, x24, #0x1
000000000004ac88	b.lo	0x4acbc
000000000004ac8c	b	0x4acc8
000000000004ac90	mov	x20, x19
000000000004ac94	ldr	x24, [x19, #0x8]
000000000004ac98	mov	w26, #0x1
000000000004ac9c	adds	x2, x24, #0x1
000000000004aca0	b.lo	0x4acbc
000000000004aca4	b	0x4acc8
000000000004aca8	ldp	x21, x24, [x19]
000000000004acac	mov	w25, #0x1
000000000004acb0	mov	w26, #0x1
000000000004acb4	adds	x2, x24, #0x1
000000000004acb8	b.hs	0x4acc8
000000000004acbc	mov	x0, x20
000000000004acc0	mov	x1, x21
000000000004acc4	bl	0x554ac ; symbol stub for: _memcpy
000000000004acc8	cbnz	w26, 0x4acf8
000000000004accc	cbz	w25, 0x4ad04
000000000004acd0	add	x8, x23, #0x1
000000000004acd4	orr	x8, x8, #0x8000000000000000
000000000004acd8	stp	x22, x8, [x19, #0x8]
000000000004acdc	str	x20, [x19]
000000000004ace0	ldp	x29, x30, [sp, #0x40]
000000000004ace4	ldp	x20, x19, [sp, #0x30]
000000000004ace8	ldp	x22, x21, [sp, #0x20]
000000000004acec	ldp	x24, x23, [sp, #0x10]
000000000004acf0	ldp	x26, x25, [sp], #0x50
000000000004acf4	ret
000000000004acf8	mov	x0, x21
000000000004acfc	bl	0x55458 ; symbol stub for: _free
000000000004ad00	cbnz	w25, 0x4acd0
000000000004ad04	strb	w22, [x19, #0x17]
000000000004ad08	ldp	x29, x30, [sp, #0x40]
000000000004ad0c	ldp	x20, x19, [sp, #0x30]
000000000004ad10	ldp	x22, x21, [sp, #0x20]
000000000004ad14	ldp	x24, x23, [sp, #0x10]
000000000004ad18	ldp	x26, x25, [sp], #0x50
000000000004ad1c	ret
000000000004ad20	mov	x0, x19
000000000004ad24	bl	0x551ac ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_:
000000000004ad28	stp	x26, x25, [sp, #-0x50]!
000000000004ad2c	stp	x24, x23, [sp, #0x10]
000000000004ad30	stp	x22, x21, [sp, #0x20]
000000000004ad34	stp	x20, x19, [sp, #0x30]
000000000004ad38	stp	x29, x30, [sp, #0x40]
000000000004ad3c	add	x29, sp, #0x40
000000000004ad40	mov	x19, x1
000000000004ad44	mov	x20, x0
000000000004ad48	cmp	w0, #0x7f
000000000004ad4c	b.hi	0x4ad70
000000000004ad50	ldrsb	w8, [x19, #0x17]
000000000004ad54	tbnz	w8, #0x1f, 0x4adfc
000000000004ad58	and	w9, w8, #0xff
000000000004ad5c	cmp	w9, #0x16
000000000004ad60	b.ne	0x4ae8c
000000000004ad64	mov	w21, #0x16
000000000004ad68	mov	x22, x19
000000000004ad6c	b	0x4ae24
000000000004ad70	cmp	w20, #0x7ff
000000000004ad74	b.hi	0x4adcc
000000000004ad78	lsr	w8, w20, #6
000000000004ad7c	orr	w25, w8, #0xffffffc0
000000000004ad80	ldrsb	w8, [x19, #0x17]
000000000004ad84	tbz	w8, #0x1f, 0x4b0d4
000000000004ad88	ldr	x8, [x19, #0x10]
000000000004ad8c	and	x8, x8, #0x7fffffffffffffff
000000000004ad90	sub	x21, x8, #0x1
000000000004ad94	ldp	x22, x8, [x19]
000000000004ad98	cmp	x8, x21
000000000004ad9c	b.ne	0x4aec8
000000000004ada0	mov	x8, #-0x19
000000000004ada4	movk	x8, #0x7fff, lsl #48
000000000004ada8	cmp	x21, x8
000000000004adac	b.lo	0x4b0e8
000000000004adb0	mov	x23, #-0x11
000000000004adb4	mov	x0, x23
000000000004adb8	mov	w1, #0x1
000000000004adbc	bl	0x553d4 ; symbol stub for: _calloc
000000000004adc0	mov	x24, x0
000000000004adc4	cbnz	x21, 0x4b120
000000000004adc8	b	0x4b138
000000000004adcc	lsr	w8, w20, #16
000000000004add0	cbnz	w8, 0x4aea0
000000000004add4	lsr	w8, w20, #12
000000000004add8	orr	w25, w8, #0xffffffe0
000000000004addc	ldrsb	w8, [x19, #0x17]
000000000004ade0	tbnz	w8, #0x1f, 0x4b018
000000000004ade4	and	w9, w8, #0xff
000000000004ade8	cmp	w9, #0x16
000000000004adec	b.ne	0x4b004
000000000004adf0	mov	w21, #0x16
000000000004adf4	mov	x22, x19
000000000004adf8	b	0x4b040
000000000004adfc	ldr	x8, [x19, #0x10]
000000000004ae00	and	x8, x8, #0x7fffffffffffffff
000000000004ae04	sub	x21, x8, #0x1
000000000004ae08	ldp	x22, x8, [x19]
000000000004ae0c	cmp	x8, x21
000000000004ae10	b.ne	0x4aed4
000000000004ae14	mov	x8, #-0x19
000000000004ae18	movk	x8, #0x7fff, lsl #48
000000000004ae1c	cmp	x21, x8
000000000004ae20	b.hs	0x4aef0
000000000004ae24	add	x8, x21, #0x1
000000000004ae28	lsl	x9, x21, #1
000000000004ae2c	cmp	x8, x9
000000000004ae30	csinc	x8, x9, x21, lo
000000000004ae34	add	x9, x8, #0x10
000000000004ae38	and	x9, x9, #0xfffffffffffffff0
000000000004ae3c	cmp	x8, #0x17
000000000004ae40	mov	w8, #0x17
000000000004ae44	csel	x23, x8, x9, lo
000000000004ae48	mov	x0, x23
000000000004ae4c	mov	w1, #0x1
000000000004ae50	bl	0x553d4 ; symbol stub for: _calloc
000000000004ae54	mov	x24, x0
000000000004ae58	cbz	x21, 0x4ae74
000000000004ae5c	mov	x0, x24
000000000004ae60	mov	x1, x22
000000000004ae64	mov	x2, x21
000000000004ae68	bl	0x554ac ; symbol stub for: _memcpy
000000000004ae6c	cmp	x21, #0x16
000000000004ae70	b.eq	0x4ae7c
000000000004ae74	mov	x0, x22
000000000004ae78	bl	0x55458 ; symbol stub for: _free
000000000004ae7c	str	x24, [x19]
000000000004ae80	orr	x8, x23, #0x8000000000000000
000000000004ae84	str	x8, [x19, #0x10]
000000000004ae88	b	0x4aedc
000000000004ae8c	and	x21, x8, #0xff
000000000004ae90	add	w8, w9, #0x1
000000000004ae94	strb	w8, [x19, #0x17]
000000000004ae98	mov	x24, x19
000000000004ae9c	b	0x4aee4
000000000004aea0	lsr	w8, w20, #18
000000000004aea4	orr	w25, w8, #0xfffffff0
000000000004aea8	ldrsb	w8, [x19, #0x17]
000000000004aeac	tbnz	w8, #0x1f, 0x4af0c
000000000004aeb0	and	w9, w8, #0xff
000000000004aeb4	cmp	w9, #0x16
000000000004aeb8	b.ne	0x4af88
000000000004aebc	mov	w21, #0x16
000000000004aec0	mov	x22, x19
000000000004aec4	b	0x4af34
000000000004aec8	mov	x21, x8
000000000004aecc	mov	x24, x22
000000000004aed0	b	0x4b14c
000000000004aed4	mov	x21, x8
000000000004aed8	mov	x24, x22
000000000004aedc	add	x8, x21, #0x1
000000000004aee0	str	x8, [x19, #0x8]
000000000004aee4	add	x8, x24, x21
000000000004aee8	strb	w20, [x8]
000000000004aeec	b	0x4b274
000000000004aef0	mov	x23, #-0x11
000000000004aef4	mov	x0, x23
000000000004aef8	mov	w1, #0x1
000000000004aefc	bl	0x553d4 ; symbol stub for: _calloc
000000000004af00	mov	x24, x0
000000000004af04	cbnz	x21, 0x4ae5c
000000000004af08	b	0x4ae74
000000000004af0c	ldr	x8, [x19, #0x10]
000000000004af10	and	x8, x8, #0x7fffffffffffffff
000000000004af14	sub	x21, x8, #0x1
000000000004af18	ldp	x22, x8, [x19]
000000000004af1c	cmp	x8, x21
000000000004af20	b.ne	0x4af9c
000000000004af24	mov	x8, #-0x19
000000000004af28	movk	x8, #0x7fff, lsl #48
000000000004af2c	cmp	x21, x8
000000000004af30	b.hs	0x4afa8
000000000004af34	add	x8, x21, #0x1
000000000004af38	lsl	x9, x21, #1
000000000004af3c	cmp	x8, x9
000000000004af40	csinc	x8, x9, x21, lo
000000000004af44	add	x9, x8, #0x10
000000000004af48	and	x9, x9, #0xfffffffffffffff0
000000000004af4c	cmp	x8, #0x17
000000000004af50	mov	w8, #0x17
000000000004af54	csel	x23, x8, x9, lo
000000000004af58	mov	x0, x23
000000000004af5c	mov	w1, #0x1
000000000004af60	bl	0x553d4 ; symbol stub for: _calloc
000000000004af64	mov	x24, x0
000000000004af68	cbz	x21, 0x4afc0
000000000004af6c	mov	x0, x24
000000000004af70	mov	x1, x22
000000000004af74	mov	x2, x21
000000000004af78	bl	0x554ac ; symbol stub for: _memcpy
000000000004af7c	cmp	x21, #0x16
000000000004af80	b.ne	0x4afc0
000000000004af84	b	0x4afc8
000000000004af88	and	x21, x8, #0xff
000000000004af8c	add	w8, w9, #0x1
000000000004af90	strb	w8, [x19, #0x17]
000000000004af94	mov	x24, x19
000000000004af98	b	0x4afdc
000000000004af9c	mov	x21, x8
000000000004afa0	mov	x24, x22
000000000004afa4	b	0x4afd4
000000000004afa8	mov	x23, #-0x11
000000000004afac	mov	x0, x23
000000000004afb0	mov	w1, #0x1
000000000004afb4	bl	0x553d4 ; symbol stub for: _calloc
000000000004afb8	mov	x24, x0
000000000004afbc	cbnz	x21, 0x4af6c
000000000004afc0	mov	x0, x22
000000000004afc4	bl	0x55458 ; symbol stub for: _free
000000000004afc8	str	x24, [x19]
000000000004afcc	orr	x8, x23, #0x8000000000000000
000000000004afd0	str	x8, [x19, #0x10]
000000000004afd4	add	x8, x21, #0x1
000000000004afd8	str	x8, [x19, #0x8]
000000000004afdc	add	x8, x24, x21
000000000004afe0	strb	w25, [x8]
000000000004afe4	strb	wzr, [x8, #0x1]
000000000004afe8	mov	w25, #-0x80
000000000004afec	bfxil	w25, w20, #12, #6
000000000004aff0	ldrsb	w8, [x19, #0x17]
000000000004aff4	tbnz	w8, #0x1f, 0x4b018
000000000004aff8	and	w9, w8, #0xff
000000000004affc	cmp	w9, #0x16
000000000004b000	b.eq	0x4adf0
000000000004b004	and	x21, x8, #0xff
000000000004b008	add	w8, w9, #0x1
000000000004b00c	strb	w8, [x19, #0x17]
000000000004b010	mov	x24, x19
000000000004b014	b	0x4b0b8
000000000004b018	ldr	x8, [x19, #0x10]
000000000004b01c	and	x8, x8, #0x7fffffffffffffff
000000000004b020	sub	x21, x8, #0x1
000000000004b024	ldp	x22, x8, [x19]
000000000004b028	cmp	x8, x21
000000000004b02c	b.ne	0x4b0a8
000000000004b030	mov	x8, #-0x19
000000000004b034	movk	x8, #0x7fff, lsl #48
000000000004b038	cmp	x21, x8
000000000004b03c	b.hs	0x4b294
000000000004b040	add	x8, x21, #0x1
000000000004b044	lsl	x9, x21, #1
000000000004b048	cmp	x8, x9
000000000004b04c	csinc	x8, x9, x21, lo
000000000004b050	add	x9, x8, #0x10
000000000004b054	and	x9, x9, #0xfffffffffffffff0
000000000004b058	cmp	x8, #0x17
000000000004b05c	mov	w8, #0x17
000000000004b060	csel	x23, x8, x9, lo
000000000004b064	mov	x0, x23
000000000004b068	mov	w1, #0x1
000000000004b06c	bl	0x553d4 ; symbol stub for: _calloc
000000000004b070	mov	x24, x0
000000000004b074	cbz	x21, 0x4b090
000000000004b078	mov	x0, x24
000000000004b07c	mov	x1, x22
000000000004b080	mov	x2, x21
000000000004b084	bl	0x554ac ; symbol stub for: _memcpy
000000000004b088	cmp	x21, #0x16
000000000004b08c	b.eq	0x4b098
000000000004b090	mov	x0, x22
000000000004b094	bl	0x55458 ; symbol stub for: _free
000000000004b098	str	x24, [x19]
000000000004b09c	orr	x8, x23, #0x8000000000000000
000000000004b0a0	str	x8, [x19, #0x10]
000000000004b0a4	b	0x4b0b0
000000000004b0a8	mov	x21, x8
000000000004b0ac	mov	x24, x22
000000000004b0b0	add	x8, x21, #0x1
000000000004b0b4	str	x8, [x19, #0x8]
000000000004b0b8	add	x8, x24, x21
000000000004b0bc	strb	w25, [x8]
000000000004b0c0	strb	wzr, [x8, #0x1]
000000000004b0c4	mov	w25, #-0x80
000000000004b0c8	bfxil	w25, w20, #6, #6
000000000004b0cc	ldrsb	w8, [x19, #0x17]
000000000004b0d0	tbnz	w8, #0x1f, 0x4ad88
000000000004b0d4	and	w9, w8, #0xff
000000000004b0d8	cmp	w9, #0x16
000000000004b0dc	b.ne	0x4b158
000000000004b0e0	mov	w21, #0x16
000000000004b0e4	mov	x22, x19
000000000004b0e8	add	x8, x21, #0x1
000000000004b0ec	lsl	x9, x21, #1
000000000004b0f0	cmp	x8, x9
000000000004b0f4	csinc	x8, x9, x21, lo
000000000004b0f8	add	x9, x8, #0x10
000000000004b0fc	and	x9, x9, #0xfffffffffffffff0
000000000004b100	cmp	x8, #0x17
000000000004b104	mov	w8, #0x17
000000000004b108	csel	x23, x8, x9, lo
000000000004b10c	mov	x0, x23
000000000004b110	mov	w1, #0x1
000000000004b114	bl	0x553d4 ; symbol stub for: _calloc
000000000004b118	mov	x24, x0
000000000004b11c	cbz	x21, 0x4b138
000000000004b120	mov	x0, x24
000000000004b124	mov	x1, x22
000000000004b128	mov	x2, x21
000000000004b12c	bl	0x554ac ; symbol stub for: _memcpy
000000000004b130	cmp	x21, #0x16
000000000004b134	b.eq	0x4b140
000000000004b138	mov	x0, x22
000000000004b13c	bl	0x55458 ; symbol stub for: _free
000000000004b140	str	x24, [x19]
000000000004b144	orr	x8, x23, #0x8000000000000000
000000000004b148	str	x8, [x19, #0x10]
000000000004b14c	add	x8, x21, #0x1
000000000004b150	str	x8, [x19, #0x8]
000000000004b154	b	0x4b168
000000000004b158	and	x21, x8, #0xff
000000000004b15c	add	w8, w9, #0x1
000000000004b160	strb	w8, [x19, #0x17]
000000000004b164	mov	x24, x19
000000000004b168	add	x8, x24, x21
000000000004b16c	strb	w25, [x8]
000000000004b170	strb	wzr, [x8, #0x1]
000000000004b174	mov	w24, #-0x80
000000000004b178	bfxil	w24, w20, #0, #6
000000000004b17c	ldrsb	w8, [x19, #0x17]
000000000004b180	tbnz	w8, #0x1f, 0x4b19c
000000000004b184	and	w9, w8, #0xff
000000000004b188	cmp	w9, #0x16
000000000004b18c	b.ne	0x4b200
000000000004b190	mov	w20, #0x16
000000000004b194	mov	x21, x19
000000000004b198	b	0x4b1c4
000000000004b19c	ldr	x8, [x19, #0x10]
000000000004b1a0	and	x8, x8, #0x7fffffffffffffff
000000000004b1a4	sub	x20, x8, #0x1
000000000004b1a8	ldp	x21, x8, [x19]
000000000004b1ac	cmp	x8, x20
000000000004b1b0	b.ne	0x4b214
000000000004b1b4	mov	x8, #-0x19
000000000004b1b8	movk	x8, #0x7fff, lsl #48
000000000004b1bc	cmp	x20, x8
000000000004b1c0	b.hs	0x4b220
000000000004b1c4	add	x8, x20, #0x1
000000000004b1c8	lsl	x9, x20, #1
000000000004b1cc	cmp	x8, x9
000000000004b1d0	csinc	x8, x9, x20, lo
000000000004b1d4	add	x9, x8, #0x10
000000000004b1d8	and	x9, x9, #0xfffffffffffffff0
000000000004b1dc	cmp	x8, #0x17
000000000004b1e0	mov	w8, #0x17
000000000004b1e4	csel	x22, x8, x9, lo
000000000004b1e8	mov	x0, x22
000000000004b1ec	mov	w1, #0x1
000000000004b1f0	bl	0x553d4 ; symbol stub for: _calloc
000000000004b1f4	mov	x23, x0
000000000004b1f8	cbnz	x20, 0x4b238
000000000004b1fc	b	0x4b250
000000000004b200	and	x20, x8, #0xff
000000000004b204	add	w8, w9, #0x1
000000000004b208	strb	w8, [x19, #0x17]
000000000004b20c	mov	x23, x19
000000000004b210	b	0x4b26c
000000000004b214	mov	x20, x8
000000000004b218	mov	x23, x21
000000000004b21c	b	0x4b264
000000000004b220	mov	x22, #-0x11
000000000004b224	mov	x0, x22
000000000004b228	mov	w1, #0x1
000000000004b22c	bl	0x553d4 ; symbol stub for: _calloc
000000000004b230	mov	x23, x0
000000000004b234	cbz	x20, 0x4b250
000000000004b238	mov	x0, x23
000000000004b23c	mov	x1, x21
000000000004b240	mov	x2, x20
000000000004b244	bl	0x554ac ; symbol stub for: _memcpy
000000000004b248	cmp	x20, #0x16
000000000004b24c	b.eq	0x4b258
000000000004b250	mov	x0, x21
000000000004b254	bl	0x55458 ; symbol stub for: _free
000000000004b258	str	x23, [x19]
000000000004b25c	orr	x8, x22, #0x8000000000000000
000000000004b260	str	x8, [x19, #0x10]
000000000004b264	add	x8, x20, #0x1
000000000004b268	str	x8, [x19, #0x8]
000000000004b26c	add	x8, x23, x20
000000000004b270	strb	w24, [x8]
000000000004b274	strb	wzr, [x8, #0x1]
000000000004b278	mov	x0, x19
000000000004b27c	ldp	x29, x30, [sp, #0x40]
000000000004b280	ldp	x20, x19, [sp, #0x30]
000000000004b284	ldp	x22, x21, [sp, #0x20]
000000000004b288	ldp	x24, x23, [sp, #0x10]
000000000004b28c	ldp	x26, x25, [sp], #0x50
000000000004b290	ret
000000000004b294	mov	x23, #-0x11
000000000004b298	mov	x0, x23
000000000004b29c	mov	w1, #0x1
000000000004b2a0	bl	0x553d4 ; symbol stub for: _calloc
000000000004b2a4	mov	x24, x0
000000000004b2a8	cbnz	x21, 0x4b078
000000000004b2ac	b	0x4b090
_Kotlin_io_Console_println:
000000000004b2b0	stp	x22, x21, [sp, #-0x30]!
000000000004b2b4	stp	x20, x19, [sp, #0x10]
000000000004b2b8	stp	x29, x30, [sp, #0x20]
000000000004b2bc	add	x29, sp, #0x20
000000000004b2c0	bl	_Kotlin_io_Console_print
000000000004b2c4	adrp	x0, 47 ; 0x7a000
000000000004b2c8	add	x0, x0, #0x2c0
000000000004b2cc	ldr	x8, [x0]
000000000004b2d0	blr	x8
000000000004b2d4	ldr	x20, [x0]
000000000004b2d8	add	x19, x20, #0x138
000000000004b2dc	mov	w8, #0x1
000000000004b2e0	ldaxr	w21, [x19]
000000000004b2e4	stlxr	w9, w8, [x19]
000000000004b2e8	cbnz	w9, 0x4b2e0
000000000004b2ec	adr	x1, #0x1398e ; literal pool for: "\n"
000000000004b2f0	nop
000000000004b2f4	mov	w0, #0x1
000000000004b2f8	mov	w2, #0x1
000000000004b2fc	bl	0x557b8 ; symbol stub for: _write
000000000004b300	cbz	x20, 0x4b32c
000000000004b304	ldaxr	w8, [x19]
000000000004b308	stlxr	w9, w21, [x19]
000000000004b30c	cbnz	w9, 0x4b304
000000000004b310	cbnz	w21, 0x4b32c
000000000004b314	cmp	w8, #0x1
000000000004b318	b.ne	0x4b32c
000000000004b31c	adr	x8, #0x48f6d
000000000004b320	nop
000000000004b324	ldarb	w8, [x8]
000000000004b328	tbnz	w8, #0x0, 0x4b33c
000000000004b32c	ldp	x29, x30, [sp, #0x20]
000000000004b330	ldp	x20, x19, [sp, #0x10]
000000000004b334	ldp	x22, x21, [sp], #0x30
000000000004b338	ret
000000000004b33c	mov	x0, x19
000000000004b340	ldp	x29, x30, [sp, #0x20]
000000000004b344	ldp	x20, x19, [sp, #0x10]
000000000004b348	ldp	x22, x21, [sp], #0x30
000000000004b34c	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b350	mov	x8, x20
000000000004b354	mov	x20, x0
000000000004b358	cbz	x8, 0x4b38c
000000000004b35c	ldaxr	w8, [x19]
000000000004b360	stlxr	w9, w21, [x19]
000000000004b364	cbnz	w9, 0x4b35c
000000000004b368	cbnz	w21, 0x4b38c
000000000004b36c	cmp	w8, #0x1
000000000004b370	b.ne	0x4b38c
000000000004b374	adr	x8, #0x48f15
000000000004b378	nop
000000000004b37c	ldarb	w8, [x8]
000000000004b380	tbz	w8, #0x0, 0x4b38c
000000000004b384	mov	x0, x19
000000000004b388	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b38c	mov	x0, x20
000000000004b390	bl	0x55194 ; symbol stub for: __Unwind_Resume
_CreateStringFromCString:
000000000004b394	sub	sp, sp, #0x60
000000000004b398	stp	x26, x25, [sp, #0x10]
000000000004b39c	stp	x24, x23, [sp, #0x20]
000000000004b3a0	stp	x22, x21, [sp, #0x30]
000000000004b3a4	stp	x20, x19, [sp, #0x40]
000000000004b3a8	stp	x29, x30, [sp, #0x50]
000000000004b3ac	add	x29, sp, #0x50
000000000004b3b0	mov	x19, x1
000000000004b3b4	cbz	x0, 0x4b480
000000000004b3b8	mov	x21, x0
000000000004b3bc	bl	0x5574c ; symbol stub for: _strlen
000000000004b3c0	mov	x22, x0
000000000004b3c4	add	x20, x21, x0
000000000004b3c8	str	x21, [sp]
000000000004b3cc	cmp	x0, #0x0
000000000004b3d0	b.le	0x4b488
000000000004b3d4	mov	w24, #0x0
000000000004b3d8	mov	w23, #0x1
000000000004b3dc	mov	w25, #0x34
000000000004b3e0	mov	w26, #0xa
000000000004b3e4	b	0x4b404
000000000004b3e8	ldr	x8, [sp]
000000000004b3ec	add	x8, x8, #0x1
000000000004b3f0	str	x8, [sp]
000000000004b3f4	mov	w9, #0x1
000000000004b3f8	add	w24, w9, w24
000000000004b3fc	cmp	x8, x20
000000000004b400	b.hs	0x4b478
000000000004b404	str	wzr, [sp, #0xc]
000000000004b408	mov	x0, sp
000000000004b40c	add	x2, sp, #0xc
000000000004b410	mov	x1, x20
000000000004b414	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
000000000004b418	lsl	w8, w23, w0
000000000004b41c	tst	w8, w25
000000000004b420	b.ne	0x4b3e8
000000000004b424	tst	w8, w26
000000000004b428	b.eq	0x4b45c
000000000004b42c	ldr	x8, [sp]
000000000004b430	add	x9, x8, #0x1
000000000004b434	mov	x8, x9
000000000004b438	str	x9, [sp]
000000000004b43c	cmp	x9, x20
000000000004b440	b.hs	0x4b3f4
000000000004b444	mov	x9, x8
000000000004b448	ldrb	w10, [x9], #0x1
000000000004b44c	and	w10, w10, #0xc0
000000000004b450	cmp	w10, #0x80
000000000004b454	b.eq	0x4b434
000000000004b458	b	0x4b3f4
000000000004b45c	ldrh	w9, [sp, #0xe]
000000000004b460	ldr	x8, [sp]
000000000004b464	cmp	w9, #0x0
000000000004b468	cinc	w9, w23, ne
000000000004b46c	add	w24, w9, w24
000000000004b470	cmp	x8, x20
000000000004b474	b.lo	0x4b404
000000000004b478	tbz	w24, #0x1f, 0x4b48c
000000000004b47c	bl	_ThrowIllegalArgumentException
000000000004b480	mov	x23, #0x0
000000000004b484	b	0x4b5a4
000000000004b488	mov	w24, #0x0
000000000004b48c	adrp	x0, 47 ; 0x7a000
000000000004b490	add	x0, x0, #0x2c0
000000000004b494	ldr	x8, [x0]
000000000004b498	blr	x8
000000000004b49c	ldr	x8, [x0]
000000000004b4a0	ldr	x8, [x8, #0x118]
000000000004b4a4	mov	w9, w24
000000000004b4a8	lsl	x9, x9, #1
000000000004b4ac	add	x9, x9, #0x1f
000000000004b4b0	and	x1, x9, #0x3fffffff8
000000000004b4b4	add	x0, x8, #0x70
000000000004b4b8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004b4bc	adr	x8, #0x16a24
000000000004b4c0	nop
000000000004b4c4	mov	x23, x0
000000000004b4c8	str	x8, [x23, #0x10]!
000000000004b4cc	str	xzr, [x0, #0x18]
000000000004b4d0	str	xzr, [x0, #0x8]
000000000004b4d4	str	w24, [x0, #0x18]
000000000004b4d8	str	x23, [x19]
000000000004b4dc	str	x21, [sp]
000000000004b4e0	cbz	x22, 0x4b5a4
000000000004b4e4	add	x21, x0, #0x20
000000000004b4e8	mov	w22, #0x1
000000000004b4ec	mov	w24, #0x34
000000000004b4f0	mov	w25, #0xa
000000000004b4f4	mov	w26, #-0x2840
000000000004b4f8	b	0x4b520
000000000004b4fc	add	w9, w26, w8, lsr #10
000000000004b500	strh	w9, [x21]
000000000004b504	mov	w9, #0xdc00
000000000004b508	bfxil	w9, w8, #0, #10
000000000004b50c	strh	w9, [x21, #0x2]
000000000004b510	add	x21, x21, #0x4
000000000004b514	ldr	x8, [sp]
000000000004b518	cmp	x8, x20
000000000004b51c	b.eq	0x4b5a4
000000000004b520	str	wzr, [sp, #0xc]
000000000004b524	mov	x0, sp
000000000004b528	add	x2, sp, #0xc
000000000004b52c	mov	x1, x20
000000000004b530	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
000000000004b534	lsl	w8, w22, w0
000000000004b538	tst	w8, w24
000000000004b53c	b.eq	0x4b550
000000000004b540	ldr	x8, [sp]
000000000004b544	add	x8, x8, #0x1
000000000004b548	str	x8, [sp]
000000000004b54c	b	0x4b57c
000000000004b550	tst	w8, w25
000000000004b554	b.eq	0x4b594
000000000004b558	ldr	x8, [sp]
000000000004b55c	add	x8, x8, #0x1
000000000004b560	str	x8, [sp]
000000000004b564	cmp	x8, x20
000000000004b568	b.hs	0x4b57c
000000000004b56c	ldrb	w9, [x8], #0x1
000000000004b570	and	w9, w9, #0xc0
000000000004b574	cmp	w9, #0x80
000000000004b578	b.eq	0x4b560
000000000004b57c	mov	w8, #0xfffd
000000000004b580	strh	w8, [x21], #0x2
000000000004b584	ldr	x8, [sp]
000000000004b588	cmp	x8, x20
000000000004b58c	b.ne	0x4b520
000000000004b590	b	0x4b5a4
000000000004b594	ldr	w8, [sp, #0xc]
000000000004b598	cmp	w8, #0x10, lsl #12
000000000004b59c	b.lo	0x4b580
000000000004b5a0	b	0x4b4fc
000000000004b5a4	str	x23, [x19]
000000000004b5a8	mov	x0, x23
000000000004b5ac	ldp	x29, x30, [sp, #0x50]
000000000004b5b0	ldp	x20, x19, [sp, #0x40]
000000000004b5b4	ldp	x22, x21, [sp, #0x30]
000000000004b5b8	ldp	x24, x23, [sp, #0x20]
000000000004b5bc	ldp	x26, x25, [sp, #0x10]
000000000004b5c0	add	sp, sp, #0x60
000000000004b5c4	ret
__ZN27BackRefFromAssociatedObject10releaseRefEv:
000000000004b5c8	stp	x24, x23, [sp, #-0x40]!
000000000004b5cc	stp	x22, x21, [sp, #0x10]
000000000004b5d0	stp	x20, x19, [sp, #0x20]
000000000004b5d4	stp	x29, x30, [sp, #0x30]
000000000004b5d8	add	x29, sp, #0x30
000000000004b5dc	ldr	x19, [x0, #0x8]
000000000004b5e0	add	x8, x0, #0x10
000000000004b5e4	ldaxr	w9, [x8]
000000000004b5e8	subs	w9, w9, #0x1
000000000004b5ec	stlxr	w10, w9, [x8]
000000000004b5f0	cbnz	w10, 0x4b5e4
000000000004b5f4	b.ne	0x4b68c
000000000004b5f8	ldr	x8, [x0]
000000000004b5fc	cbz	x8, 0x4b68c
000000000004b600	bl	_Kotlin_initRuntimeIfNeeded
000000000004b604	adrp	x21, 47 ; 0x7a000
000000000004b608	add	x21, x21, #0x2c0
000000000004b60c	ldr	x23, [x21]
000000000004b610	mov	x0, x21
000000000004b614	blr	x23
000000000004b618	ldr	x8, [x0]
000000000004b61c	add	x20, x8, #0x138
000000000004b620	ldaxr	w22, [x20]
000000000004b624	stlxr	w8, wzr, [x20]
000000000004b628	cbnz	w8, 0x4b620
000000000004b62c	cmp	w22, #0x1
000000000004b630	b.ne	0x4b64c
000000000004b634	adr	x8, #0x48c55
000000000004b638	nop
000000000004b63c	ldarb	w8, [x8]
000000000004b640	tbz	w8, #0x0, 0x4b64c
000000000004b644	mov	x0, x20
000000000004b648	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b64c	mov	x0, x21
000000000004b650	blr	x23
000000000004b654	ldr	x8, [x0]
000000000004b658	add	x0, x8, #0x8
000000000004b65c	mov	x1, x19
000000000004b660	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004b664	ldaxr	w8, [x20]
000000000004b668	stlxr	w9, w22, [x20]
000000000004b66c	cbnz	w9, 0x4b664
000000000004b670	cbnz	w22, 0x4b68c
000000000004b674	cmp	w8, #0x1
000000000004b678	b.ne	0x4b68c
000000000004b67c	adr	x8, #0x48c0d
000000000004b680	nop
000000000004b684	ldarb	w8, [x8]
000000000004b688	tbnz	w8, #0x0, 0x4b6a0
000000000004b68c	ldp	x29, x30, [sp, #0x30]
000000000004b690	ldp	x20, x19, [sp, #0x20]
000000000004b694	ldp	x22, x21, [sp, #0x10]
000000000004b698	ldp	x24, x23, [sp], #0x40
000000000004b69c	ret
000000000004b6a0	mov	x0, x20
000000000004b6a4	ldp	x29, x30, [sp, #0x30]
000000000004b6a8	ldp	x20, x19, [sp, #0x20]
000000000004b6ac	ldp	x22, x21, [sp, #0x10]
000000000004b6b0	ldp	x24, x23, [sp], #0x40
000000000004b6b4	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
_addHighPrecision:
000000000004b6b8	cbz	w1, 0x4b730
000000000004b6bc	cbz	w3, 0x4b730
000000000004b6c0	mov	x9, #0x0
000000000004b6c4	cmp	w1, w3
000000000004b6c8	csel	w8, w1, w3, lt
000000000004b6cc	cmp	w8, #0x1
000000000004b6d0	csinc	w8, w8, wzr, gt
000000000004b6d4	mov	x10, x0
000000000004b6d8	mov	x11, x8
000000000004b6dc	ldr	x12, [x10]
000000000004b6e0	ldr	x13, [x2]
000000000004b6e4	add	x12, x12, x9
000000000004b6e8	add	x12, x12, x13
000000000004b6ec	str	x12, [x10], #0x8
000000000004b6f0	ldr	x13, [x2], #0x8
000000000004b6f4	cmp	x13, x12
000000000004b6f8	csinc	x9, x9, xzr, eq
000000000004b6fc	csel	x9, xzr, x9, lo
000000000004b700	subs	x11, x11, #0x1
000000000004b704	b.ne	0x4b6dc
000000000004b708	cmp	x9, #0x0
000000000004b70c	ccmp	w8, w1, #0x4, ne
000000000004b710	b.eq	0x4b730
000000000004b714	lsl	x9, x8, #3
000000000004b718	ldr	x10, [x0, x9]
000000000004b71c	adds	x10, x10, #0x1
000000000004b720	str	x10, [x0, x9]
000000000004b724	add	x8, x8, #0x1
000000000004b728	ccmp	w8, w1, #0x0, hs
000000000004b72c	b.lt	0x4b714
000000000004b730	ret
_subtractHighPrecision:
000000000004b734	cmp	w1, #0x1
000000000004b738	b.lt	0x4b79c
000000000004b73c	mov	w8, w1
000000000004b740	cmp	w1, #0x4
000000000004b744	b.hs	0x4b750
000000000004b748	mov	x9, #0x0
000000000004b74c	b	0x4b780
000000000004b750	and	x9, x8, #0xfffffffc
000000000004b754	add	x10, x0, #0x10
000000000004b758	mov	x11, x9
000000000004b75c	ldp	q0, q1, [x10, #-0x10]
000000000004b760	mvn.16b	v0, v0
000000000004b764	mvn.16b	v1, v1
000000000004b768	stp	q0, q1, [x10, #-0x10]
000000000004b76c	add	x10, x10, #0x20
000000000004b770	subs	x11, x11, #0x4
000000000004b774	b.ne	0x4b75c
000000000004b778	cmp	x9, x8
000000000004b77c	b.eq	0x4b79c
000000000004b780	sub	x8, x8, x9
000000000004b784	add	x9, x0, x9, lsl #3
000000000004b788	ldr	x10, [x9]
000000000004b78c	mvn	x10, x10
000000000004b790	str	x10, [x9], #0x8
000000000004b794	subs	x8, x8, #0x1
000000000004b798	b.ne	0x4b788
000000000004b79c	ldr	x8, [x0]
000000000004b7a0	add	x8, x8, #0x1
000000000004b7a4	str	x8, [x0]
000000000004b7a8	cmp	w1, #0x1
000000000004b7ac	b.eq	0x4b7e4
000000000004b7b0	cbnz	x8, 0x4b7e4
000000000004b7b4	cmp	w1, #0x2
000000000004b7b8	mov	w8, #0x2
000000000004b7bc	csel	w8, w1, w8, gt
000000000004b7c0	sub	x8, x8, #0x2
000000000004b7c4	add	x9, x0, #0x8
000000000004b7c8	ldr	x10, [x9]
000000000004b7cc	add	x10, x10, #0x1
000000000004b7d0	str	x10, [x9], #0x8
000000000004b7d4	cmp	x10, #0x0
000000000004b7d8	ccmp	x8, #0x0, #0x4, eq
000000000004b7dc	sub	x8, x8, #0x1
000000000004b7e0	b.ne	0x4b7c8
000000000004b7e4	mov	w9, w3
000000000004b7e8	and	w8, w3, w3, asr #31
000000000004b7ec	cmp	w9, #0x1
000000000004b7f0	b.lt	0x4b808
000000000004b7f4	sub	w10, w9, #0x1
000000000004b7f8	ldr	x10, [x2, w10, uxtw #3]
000000000004b7fc	sub	x9, x9, #0x1
000000000004b800	cbz	x10, 0x4b7ec
000000000004b804	add	w8, w9, #0x1
000000000004b808	cbz	w1, 0x4b880
000000000004b80c	cbz	w8, 0x4b880
000000000004b810	mov	x9, #0x0
000000000004b814	cmp	w8, w1
000000000004b818	csel	w8, w1, w8, gt
000000000004b81c	cmp	w8, #0x1
000000000004b820	csinc	w8, w8, wzr, gt
000000000004b824	mov	x10, x0
000000000004b828	mov	x11, x8
000000000004b82c	ldr	x12, [x10]
000000000004b830	ldr	x13, [x2]
000000000004b834	add	x12, x12, x9
000000000004b838	add	x12, x12, x13
000000000004b83c	str	x12, [x10], #0x8
000000000004b840	ldr	x13, [x2], #0x8
000000000004b844	cmp	x13, x12
000000000004b848	csinc	x9, x9, xzr, eq
000000000004b84c	csel	x9, xzr, x9, lo
000000000004b850	subs	x11, x11, #0x1
000000000004b854	b.ne	0x4b82c
000000000004b858	cmp	w8, w1
000000000004b85c	b.eq	0x4b880
000000000004b860	cbz	x9, 0x4b880
000000000004b864	lsl	x9, x8, #3
000000000004b868	ldr	x10, [x0, x9]
000000000004b86c	adds	x10, x10, #0x1
000000000004b870	str	x10, [x0, x9]
000000000004b874	add	x8, x8, #0x1
000000000004b878	ccmp	w8, w1, #0x0, hs
000000000004b87c	b.lt	0x4b864
000000000004b880	cmp	w1, #0x1
000000000004b884	b.lt	0x4b8e8
000000000004b888	mov	w8, w1
000000000004b88c	cmp	w1, #0x4
000000000004b890	b.hs	0x4b89c
000000000004b894	mov	x9, #0x0
000000000004b898	b	0x4b8cc
000000000004b89c	and	x9, x8, #0xfffffffc
000000000004b8a0	add	x10, x0, #0x10
000000000004b8a4	mov	x11, x9
000000000004b8a8	ldp	q0, q1, [x10, #-0x10]
000000000004b8ac	mvn.16b	v0, v0
000000000004b8b0	mvn.16b	v1, v1
000000000004b8b4	stp	q0, q1, [x10, #-0x10]
000000000004b8b8	add	x10, x10, #0x20
000000000004b8bc	subs	x11, x11, #0x4
000000000004b8c0	b.ne	0x4b8a8
000000000004b8c4	cmp	x9, x8
000000000004b8c8	b.eq	0x4b8e8
000000000004b8cc	sub	x8, x8, x9
000000000004b8d0	add	x9, x0, x9, lsl #3
000000000004b8d4	ldr	x10, [x9]
000000000004b8d8	mvn	x10, x10
000000000004b8dc	str	x10, [x9], #0x8
000000000004b8e0	subs	x8, x8, #0x1
000000000004b8e4	b.ne	0x4b8d4
000000000004b8e8	ldr	x8, [x0]
000000000004b8ec	add	x8, x8, #0x1
000000000004b8f0	str	x8, [x0]
000000000004b8f4	cmp	w1, #0x1
000000000004b8f8	b.eq	0x4b930
000000000004b8fc	cbnz	x8, 0x4b930
000000000004b900	cmp	w1, #0x2
000000000004b904	mov	w8, #0x2
000000000004b908	csel	w8, w1, w8, gt
000000000004b90c	sub	x8, x8, #0x2
000000000004b910	add	x9, x0, #0x8
000000000004b914	ldr	x10, [x9]
000000000004b918	add	x10, x10, #0x1
000000000004b91c	str	x10, [x9], #0x8
000000000004b920	cmp	x10, #0x0
000000000004b924	ccmp	x8, #0x0, #0x4, eq
000000000004b928	sub	x8, x8, #0x1
000000000004b92c	b.ne	0x4b914
000000000004b930	ret
_simpleShiftLeftHighPrecision:
000000000004b934	stp	x22, x21, [sp, #-0x30]!
000000000004b938	stp	x20, x19, [sp, #0x10]
000000000004b93c	stp	x29, x30, [sp, #0x20]
000000000004b940	add	x29, sp, #0x20
000000000004b944	mov	x21, x2
000000000004b948	mov	x20, x1
000000000004b94c	mov	x19, x0
000000000004b950	cmp	w2, #0x40
000000000004b954	b.lt	0x4b9c0
000000000004b958	lsr	w11, w21, #6
000000000004b95c	sub	w8, w20, #0x1
000000000004b960	subs	w9, w8, w11
000000000004b964	b.mi	0x4b9a0
000000000004b968	sxtw	x10, w20
000000000004b96c	sub	x12, x10, #0x1
000000000004b970	neg	w10, w11
000000000004b974	sub	x11, x12, w11, uxtw
000000000004b978	add	x12, x19, x12, lsl #3
000000000004b97c	mov	x13, x8
000000000004b980	ldr	x8, [x19, w9, uxtw #3]
000000000004b984	str	x8, [x12], #-0x8
000000000004b988	sub	w8, w13, #0x1
000000000004b98c	add	w9, w10, w13
000000000004b990	sub	w9, w9, #0x1
000000000004b994	mov	x13, x8
000000000004b998	subs	x11, x11, #0x1
000000000004b99c	b.pl	0x4b980
000000000004b9a0	sxtw	x9, w8
000000000004b9a4	bic	w8, w8, w8, asr #31
000000000004b9a8	sub	x9, x9, x8
000000000004b9ac	add	x0, x19, x9, lsl #3
000000000004b9b0	lsl	x8, x8, #3
000000000004b9b4	add	x1, x8, #0x8
000000000004b9b8	bl	0x553c8 ; symbol stub for: _bzero
000000000004b9bc	and	w21, w21, #0x3f
000000000004b9c0	cbz	w21, 0x4ba24
000000000004b9c4	mov	w8, w21
000000000004b9c8	cmp	w20, #0x2
000000000004b9cc	b.lt	0x4ba18
000000000004b9d0	mov	w9, #0x40
000000000004b9d4	sub	w9, w9, w21
000000000004b9d8	mov	w12, w20
000000000004b9dc	mov	w10, #-0x2
000000000004b9e0	add	x10, x10, w20, sxtw
000000000004b9e4	add	x11, x19, w20, sxtw #3
000000000004b9e8	sub	x11, x11, #0x8
000000000004b9ec	add	x12, x12, #0x1
000000000004b9f0	ldr	x13, [x11]
000000000004b9f4	lsl	x13, x13, x8
000000000004b9f8	ldr	x14, [x19, w10, uxtw #3]
000000000004b9fc	lsr	x14, x14, x9
000000000004ba00	orr	x13, x14, x13
000000000004ba04	str	x13, [x11], #-0x8
000000000004ba08	sub	x10, x10, #0x1
000000000004ba0c	sub	x12, x12, #0x1
000000000004ba10	cmp	x12, #0x2
000000000004ba14	b.gt	0x4b9f0
000000000004ba18	ldr	x9, [x19]
000000000004ba1c	lsl	x8, x9, x8
000000000004ba20	str	x8, [x19]
000000000004ba24	ldp	x29, x30, [sp, #0x20]
000000000004ba28	ldp	x20, x19, [sp, #0x10]
000000000004ba2c	ldp	x22, x21, [sp], #0x30
000000000004ba30	ret
_compareHighPrecision:
000000000004ba34	sxtw	x10, w1
000000000004ba38	and	w8, w1, w1, asr #31
000000000004ba3c	sub	w9, w8, #0x1
000000000004ba40	sub	x12, x0, #0x8
000000000004ba44	subs	x11, x10, #0x1
000000000004ba48	b.lt	0x4ba68
000000000004ba4c	ldr	x13, [x12, x10, lsl #3]
000000000004ba50	mov	x10, x11
000000000004ba54	cbz	x13, 0x4ba44
000000000004ba58	mov	w10, #0x0
000000000004ba5c	add	w8, w11, #0x1
000000000004ba60	mov	x9, x11
000000000004ba64	b	0x4ba6c
000000000004ba68	mov	w10, #0x1
000000000004ba6c	sxtw	x12, w3
000000000004ba70	add	w11, w3, #0x1
000000000004ba74	sub	x14, x2, #0x8
000000000004ba78	and	w13, w3, w3, asr #31
000000000004ba7c	subs	x15, x12, #0x1
000000000004ba80	b.lt	0x4baa0
000000000004ba84	ldr	x16, [x14, x12, lsl #3]
000000000004ba88	sub	w11, w11, #0x1
000000000004ba8c	mov	x12, x15
000000000004ba90	cbz	x16, 0x4ba7c
000000000004ba94	cmp	w8, w11
000000000004ba98	b.le	0x4bab4
000000000004ba9c	b	0x4baac
000000000004baa0	mov	x11, x13
000000000004baa4	cmp	w8, w11
000000000004baa8	b.le	0x4bab4
000000000004baac	mov	w0, #0x1
000000000004bab0	ret
000000000004bab4	cset	w8, lt
000000000004bab8	orr	w10, w8, w10
000000000004babc	csetm	w8, lt
000000000004bac0	tbnz	w10, #0x0, 0x4baf4
000000000004bac4	sxtw	x8, w9
000000000004bac8	lsl	x9, x8, #3
000000000004bacc	ldr	x10, [x0, x9]
000000000004bad0	ldr	x9, [x2, x9]
000000000004bad4	cmp	x10, x9
000000000004bad8	b.hi	0x4baac
000000000004badc	b.lo	0x4bafc
000000000004bae0	sub	x9, x8, #0x1
000000000004bae4	cmp	x8, #0x0
000000000004bae8	mov	x8, x9
000000000004baec	b.gt	0x4bac8
000000000004baf0	mov	w8, #0x0
000000000004baf4	mov	x0, x8
000000000004baf8	ret
000000000004bafc	mov	w0, #-0x1
000000000004bb00	ret
_timesTenToTheEHighPrecision:
000000000004bb04	cbz	w2, 0x4bec4
000000000004bb08	cmp	w2, #0x13
000000000004bb0c	b.lt	0x4bbe4
000000000004bb10	mov	w8, #0x2304
000000000004bb14	movk	w8, #0x8ac7, lsl #16
000000000004bb18	add	x9, x0, #0x4
000000000004bb1c	mov	w10, #-0x76180000
000000000004bb20	b	0x4bb34
000000000004bb24	sub	w11, w2, #0x13
000000000004bb28	cmp	w2, #0x25
000000000004bb2c	mov	x2, x11
000000000004bb30	b.le	0x4bbe8
000000000004bb34	mov	x12, #0x0
000000000004bb38	mov	w14, #0x0
000000000004bb3c	mov	w11, #0x0
000000000004bb40	mov	w15, #0x0
000000000004bb44	mov	x13, x9
000000000004bb48	b	0x4bb5c
000000000004bb4c	add	w11, w11, #0x1
000000000004bb50	add	x13, x13, #0x8
000000000004bb54	cmp	w11, w1
000000000004bb58	b.ge	0x4bbcc
000000000004bb5c	ldur	x17, [x13, #-0x4]
000000000004bb60	mov	w16, w14
000000000004bb64	bfi	x16, x15, #32, #32
000000000004bb68	orr	x3, x16, x17
000000000004bb6c	cbz	x3, 0x4bb4c
000000000004bb70	and	x14, x17, #0xffffffff
000000000004bb74	mul	x15, x14, x10
000000000004bb78	adds	x15, x15, x16
000000000004bb7c	cset	w17, hs
000000000004bb80	cmp	x15, x16
000000000004bb84	cset	w16, lo
000000000004bb88	orr	w16, w17, w16
000000000004bb8c	ldr	w17, [x13]
000000000004bb90	mul	x3, x17, x10
000000000004bb94	mul	x14, x14, x8
000000000004bb98	add	x12, x14, x12
000000000004bb9c	add	x12, x12, x15, lsr #32
000000000004bba0	adds	x3, x12, x3
000000000004bba4	cset	w12, hs
000000000004bba8	cmp	x3, x14
000000000004bbac	cset	w14, lo
000000000004bbb0	orr	w12, w12, w14
000000000004bbb4	stp	w15, w3, [x13, #-0x4]
000000000004bbb8	mul	x14, x17, x8
000000000004bbbc	orr	x14, x14, x16
000000000004bbc0	add	x14, x14, x3, lsr #32
000000000004bbc4	lsr	x15, x14, #32
000000000004bbc8	b	0x4bb4c
000000000004bbcc	mov	w11, w14
000000000004bbd0	bfi	x11, x15, #32, #32
000000000004bbd4	cbz	x11, 0x4bb24
000000000004bbd8	str	x11, [x0, w1, sxtw #3]
000000000004bbdc	add	w1, w1, #0x1
000000000004bbe0	b	0x4bb24
000000000004bbe4	mov	x11, x2
000000000004bbe8	cmp	w11, #0x9
000000000004bbec	b.lt	0x4bc58
000000000004bbf0	mov	w8, #0xca00
000000000004bbf4	movk	w8, #0x3b9a, lsl #16
000000000004bbf8	add	x9, x0, #0x4
000000000004bbfc	b	0x4bc10
000000000004bc00	sub	w10, w11, #0x9
000000000004bc04	cmp	w11, #0x11
000000000004bc08	mov	x11, x10
000000000004bc0c	b.le	0x4bc5c
000000000004bc10	mov	x10, #0x0
000000000004bc14	cmp	w1, #0x1
000000000004bc18	csinc	w12, w1, wzr, gt
000000000004bc1c	mov	x13, x9
000000000004bc20	ldur	w14, [x13, #-0x4]
000000000004bc24	madd	x10, x14, x8, x10
000000000004bc28	stur	w10, [x13, #-0x4]
000000000004bc2c	ldr	w14, [x13]
000000000004bc30	mul	x14, x14, x8
000000000004bc34	add	x14, x14, x10, lsr #32
000000000004bc38	lsr	x10, x14, #32
000000000004bc3c	str	w14, [x13], #0x8
000000000004bc40	subs	x12, x12, #0x1
000000000004bc44	b.ne	0x4bc20
000000000004bc48	cbz	x10, 0x4bc00
000000000004bc4c	str	x10, [x0, w1, sxtw #3]
000000000004bc50	add	w1, w1, #0x1
000000000004bc54	b	0x4bc00
000000000004bc58	mov	x10, x11
000000000004bc5c	sub	w8, w10, #0x1
000000000004bc60	cmp	w8, #0x7
000000000004bc64	b.hi	0x4bec4
000000000004bc68	adr	x9, #0xbfec
000000000004bc6c	nop
000000000004bc70	adr	x10, #0x10
000000000004bc74	ldrb	w11, [x9, x8]
000000000004bc78	add	x10, x10, x11, lsl #2
000000000004bc7c	br	x10
000000000004bc80	mov	x8, #0x0
000000000004bc84	cmp	w1, #0x1
000000000004bc88	csinc	w9, w1, wzr, gt
000000000004bc8c	mov	w10, #0xa
000000000004bc90	mov	x11, x0
000000000004bc94	ldp	w12, w13, [x11]
000000000004bc98	madd	x12, x12, x10, x8
000000000004bc9c	mul	x8, x13, x10
000000000004bca0	add	x13, x8, x12, lsr #32
000000000004bca4	lsr	x8, x13, #32
000000000004bca8	stp	w12, w13, [x11], #0x8
000000000004bcac	subs	x9, x9, #0x1
000000000004bcb0	b.ne	0x4bc94
000000000004bcb4	b	0x4bebc
000000000004bcb8	mov	x8, #0x0
000000000004bcbc	cmp	w1, #0x1
000000000004bcc0	csinc	w9, w1, wzr, gt
000000000004bcc4	mov	w10, #0xa
000000000004bcc8	mov	x11, x0
000000000004bccc	ldp	w12, w13, [x11]
000000000004bcd0	madd	x12, x12, x10, x8
000000000004bcd4	mul	x8, x13, x10
000000000004bcd8	add	x13, x8, x12, lsr #32
000000000004bcdc	lsr	x8, x13, #32
000000000004bce0	stp	w12, w13, [x11], #0x8
000000000004bce4	subs	x9, x9, #0x1
000000000004bce8	b.ne	0x4bccc
000000000004bcec	cbz	x8, 0x4bcf8
000000000004bcf0	str	x8, [x0, w1, sxtw #3]
000000000004bcf4	add	w1, w1, #0x1
000000000004bcf8	mov	x8, #0x0
000000000004bcfc	cmp	w1, #0x1
000000000004bd00	csinc	w9, w1, wzr, gt
000000000004bd04	mov	w10, #0xa
000000000004bd08	mov	x11, x0
000000000004bd0c	ldp	w12, w13, [x11]
000000000004bd10	madd	x12, x12, x10, x8
000000000004bd14	mul	x8, x13, x10
000000000004bd18	add	x13, x8, x12, lsr #32
000000000004bd1c	lsr	x8, x13, #32
000000000004bd20	stp	w12, w13, [x11], #0x8
000000000004bd24	subs	x9, x9, #0x1
000000000004bd28	b.ne	0x4bd0c
000000000004bd2c	b	0x4bebc
000000000004bd30	mov	x8, #0x0
000000000004bd34	cmp	w1, #0x1
000000000004bd38	csinc	w9, w1, wzr, gt
000000000004bd3c	add	x10, x0, #0x4
000000000004bd40	mov	w11, #0x3e8
000000000004bd44	ldur	w12, [x10, #-0x4]
000000000004bd48	madd	x8, x12, x11, x8
000000000004bd4c	stur	w8, [x10, #-0x4]
000000000004bd50	ldr	w12, [x10]
000000000004bd54	mul	x12, x12, x11
000000000004bd58	add	x12, x12, x8, lsr #32
000000000004bd5c	lsr	x8, x12, #32
000000000004bd60	str	w12, [x10], #0x8
000000000004bd64	subs	x9, x9, #0x1
000000000004bd68	b.ne	0x4bd44
000000000004bd6c	b	0x4bebc
000000000004bd70	mov	x8, #0x0
000000000004bd74	cmp	w1, #0x1
000000000004bd78	csinc	w9, w1, wzr, gt
000000000004bd7c	add	x10, x0, #0x4
000000000004bd80	mov	w11, #0x2710
000000000004bd84	ldur	w12, [x10, #-0x4]
000000000004bd88	madd	x8, x12, x11, x8
000000000004bd8c	stur	w8, [x10, #-0x4]
000000000004bd90	ldr	w12, [x10]
000000000004bd94	mul	x12, x12, x11
000000000004bd98	add	x12, x12, x8, lsr #32
000000000004bd9c	lsr	x8, x12, #32
000000000004bda0	str	w12, [x10], #0x8
000000000004bda4	subs	x9, x9, #0x1
000000000004bda8	b.ne	0x4bd84
000000000004bdac	b	0x4bebc
000000000004bdb0	mov	x8, #0x0
000000000004bdb4	mov	w9, #0x86a0
000000000004bdb8	movk	w9, #0x1, lsl #16
000000000004bdbc	cmp	w1, #0x1
000000000004bdc0	csinc	w10, w1, wzr, gt
000000000004bdc4	add	x11, x0, #0x4
000000000004bdc8	ldur	w12, [x11, #-0x4]
000000000004bdcc	madd	x8, x12, x9, x8
000000000004bdd0	stur	w8, [x11, #-0x4]
000000000004bdd4	ldr	w12, [x11]
000000000004bdd8	mul	x12, x12, x9
000000000004bddc	add	x12, x12, x8, lsr #32
000000000004bde0	lsr	x8, x12, #32
000000000004bde4	str	w12, [x11], #0x8
000000000004bde8	subs	x10, x10, #0x1
000000000004bdec	b.ne	0x4bdc8
000000000004bdf0	b	0x4bebc
000000000004bdf4	mov	x8, #0x0
000000000004bdf8	mov	w9, #0x4240
000000000004bdfc	movk	w9, #0xf, lsl #16
000000000004be00	cmp	w1, #0x1
000000000004be04	csinc	w10, w1, wzr, gt
000000000004be08	add	x11, x0, #0x4
000000000004be0c	ldur	w12, [x11, #-0x4]
000000000004be10	madd	x8, x12, x9, x8
000000000004be14	stur	w8, [x11, #-0x4]
000000000004be18	ldr	w12, [x11]
000000000004be1c	mul	x12, x12, x9
000000000004be20	add	x12, x12, x8, lsr #32
000000000004be24	lsr	x8, x12, #32
000000000004be28	str	w12, [x11], #0x8
000000000004be2c	subs	x10, x10, #0x1
000000000004be30	b.ne	0x4be0c
000000000004be34	b	0x4bebc
000000000004be38	mov	x8, #0x0
000000000004be3c	mov	w9, #0x9680
000000000004be40	movk	w9, #0x98, lsl #16
000000000004be44	cmp	w1, #0x1
000000000004be48	csinc	w10, w1, wzr, gt
000000000004be4c	add	x11, x0, #0x4
000000000004be50	ldur	w12, [x11, #-0x4]
000000000004be54	madd	x8, x12, x9, x8
000000000004be58	stur	w8, [x11, #-0x4]
000000000004be5c	ldr	w12, [x11]
000000000004be60	mul	x12, x12, x9
000000000004be64	add	x12, x12, x8, lsr #32
000000000004be68	lsr	x8, x12, #32
000000000004be6c	str	w12, [x11], #0x8
000000000004be70	subs	x10, x10, #0x1
000000000004be74	b.ne	0x4be50
000000000004be78	b	0x4bebc
000000000004be7c	mov	x8, #0x0
000000000004be80	mov	w9, #0xe100
000000000004be84	movk	w9, #0x5f5, lsl #16
000000000004be88	cmp	w1, #0x1
000000000004be8c	csinc	w10, w1, wzr, gt
000000000004be90	add	x11, x0, #0x4
000000000004be94	ldur	w12, [x11, #-0x4]
000000000004be98	madd	x8, x12, x9, x8
000000000004be9c	stur	w8, [x11, #-0x4]
000000000004bea0	ldr	w12, [x11]
000000000004bea4	mul	x12, x12, x9
000000000004bea8	add	x12, x12, x8, lsr #32
000000000004beac	lsr	x8, x12, #32
000000000004beb0	str	w12, [x11], #0x8
000000000004beb4	subs	x10, x10, #0x1
000000000004beb8	b.ne	0x4be94
000000000004bebc	cbz	x8, 0x4bec4
000000000004bec0	str	x8, [x0, w1, sxtw #3]
000000000004bec4	ret
_Kotlin_Any_equals:
000000000004bec8	cmp	x0, x1
000000000004becc	cset	w0, eq
000000000004bed0	ret
_Kotlin_getCurrentStackTrace:
000000000004bed4	sub	sp, sp, #0x80
000000000004bed8	stp	x28, x27, [sp, #0x20]
000000000004bedc	stp	x26, x25, [sp, #0x30]
000000000004bee0	stp	x24, x23, [sp, #0x40]
000000000004bee4	stp	x22, x21, [sp, #0x50]
000000000004bee8	stp	x20, x19, [sp, #0x60]
000000000004beec	stp	x29, x30, [sp, #0x70]
000000000004bef0	add	x29, sp, #0x70
000000000004bef4	mov	x21, x0
000000000004bef8	adrp	x19, 47 ; 0x7a000
000000000004befc	add	x19, x19, #0x2c0
000000000004bf00	ldr	x23, [x19]
000000000004bf04	mov	x0, x19
000000000004bf08	blr	x23
000000000004bf0c	ldr	x27, [x0]
000000000004bf10	add	x22, x27, #0x138
000000000004bf14	mov	w8, #0x1
000000000004bf18	ldaxr	w26, [x22]
000000000004bf1c	stlxr	w9, w8, [x22]
000000000004bf20	cbnz	w9, 0x4bf18
000000000004bf24	mov	x24, sp
000000000004bf28	mov	x0, sp
000000000004bf2c	bl	__ZN6kotlin10StackTraceILm18446744073709551615EE7currentEm
000000000004bf30	ldp	x20, x25, [sp]
000000000004bf34	cbz	x27, 0x4bf68
000000000004bf38	ldaxr	w8, [x22]
000000000004bf3c	stlxr	w9, w26, [x22]
000000000004bf40	cbnz	w9, 0x4bf38
000000000004bf44	cbnz	w26, 0x4bf68
000000000004bf48	cmp	w8, #0x1
000000000004bf4c	b.ne	0x4bf68
000000000004bf50	adr	x8, #0x48339
000000000004bf54	nop
000000000004bf58	ldarb	w8, [x8]
000000000004bf5c	tbz	w8, #0x0, 0x4bf68
000000000004bf60	mov	x0, x22
000000000004bf64	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bf68	str	xzr, [sp, #0x18]
000000000004bf6c	mov	x0, x19
000000000004bf70	blr	x23
000000000004bf74	ldr	x8, [x0]
000000000004bf78	ldr	x9, [x8, #0x110]
000000000004bf7c	str	x24, [x8, #0x110]
000000000004bf80	mov	x10, #0x400000000
000000000004bf84	stp	x9, x10, [sp, #0x8]
000000000004bf88	sub	x24, x25, x20
000000000004bf8c	asr	x25, x24, #3
000000000004bf90	tbnz	w25, #0x1f, 0x4c060
000000000004bf94	ldr	x8, [x8, #0x118]
000000000004bf98	and	x9, x24, #0x7fffffff8
000000000004bf9c	add	x9, x9, #0x1f
000000000004bfa0	and	x1, x9, #0xffffffff8
000000000004bfa4	add	x0, x8, #0x70
000000000004bfa8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004bfac	adr	x8, #0x16994
000000000004bfb0	nop
000000000004bfb4	mov	x22, x0
000000000004bfb8	str	x8, [x22, #0x10]!
000000000004bfbc	str	xzr, [x0, #0x18]
000000000004bfc0	str	xzr, [x0, #0x8]
000000000004bfc4	str	w25, [x0, #0x18]
000000000004bfc8	str	x22, [sp, #0x18]
000000000004bfcc	cbz	x24, 0x4c010
000000000004bfd0	mov	x8, #0x0
000000000004bfd4	cmp	x25, #0x1
000000000004bfd8	csinc	x9, x25, xzr, hi
000000000004bfdc	add	x10, x0, #0x20
000000000004bfe0	ubfx	x11, x24, #3, #32
000000000004bfe4	mov	x12, #0x100000000
000000000004bfe8	mov	x13, x20
000000000004bfec	cbz	x11, 0x4c058
000000000004bff0	ldr	x14, [x13], #0x8
000000000004bff4	asr	x15, x8, #29
000000000004bff8	ldr	xzr, [x22]
000000000004bffc	str	x14, [x10, x15]
000000000004c000	add	x8, x8, x12
000000000004c004	sub	x11, x11, #0x1
000000000004c008	sub	x9, x9, #0x1
000000000004c00c	cbnz	x9, 0x4bfec
000000000004c010	str	x22, [x21]
000000000004c014	mov	x0, x19
000000000004c018	blr	x23
000000000004c01c	ldr	x8, [x0]
000000000004c020	ldr	x9, [sp, #0x8]
000000000004c024	str	x9, [x8, #0x110]
000000000004c028	cbz	x20, 0x4c034
000000000004c02c	mov	x0, x20
000000000004c030	bl	0x55458 ; symbol stub for: _free
000000000004c034	mov	x0, x22
000000000004c038	ldp	x29, x30, [sp, #0x70]
000000000004c03c	ldp	x20, x19, [sp, #0x60]
000000000004c040	ldp	x22, x21, [sp, #0x50]
000000000004c044	ldp	x24, x23, [sp, #0x40]
000000000004c048	ldp	x26, x25, [sp, #0x30]
000000000004c04c	ldp	x28, x27, [sp, #0x20]
000000000004c050	add	sp, sp, #0x80
000000000004c054	ret
000000000004c058	bl	_ThrowArrayIndexOutOfBoundsException
000000000004c05c	b	0x4c064
000000000004c060	bl	_ThrowIllegalArgumentException
000000000004c064	brk	#0x1
000000000004c068	b	0x4c06c
000000000004c06c	mov	x21, x0
000000000004c070	mov	x0, x19
000000000004c074	blr	x23
000000000004c078	ldr	x8, [x0]
000000000004c07c	ldr	x9, [sp, #0x8]
000000000004c080	str	x9, [x8, #0x110]
000000000004c084	cbz	x20, 0x4c090
000000000004c088	mov	x0, x20
000000000004c08c	bl	0x55458 ; symbol stub for: _free
000000000004c090	mov	x0, x21
000000000004c094	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_Long_toStringRadix:
000000000004c098	cbz	x0, 0x4c0c0
000000000004c09c	sub	sp, sp, #0x60
000000000004c0a0	stp	x29, x30, [sp, #0x50]
000000000004c0a4	add	x29, sp, #0x50
000000000004c0a8	cmp	x0, #0x0
000000000004c0ac	cneg	x8, x0, mi
000000000004c0b0	negs	x10, x8
000000000004c0b4	b.mi	0x4c0d0
000000000004c0b8	mov	w8, #0x0
000000000004c0bc	b	0x4c10c
000000000004c0c0	adr	x0, #0x12bbc ; literal pool for: "0"
000000000004c0c4	nop
000000000004c0c8	mov	x1, x2
000000000004c0cc	b	_CreateStringFromCString
000000000004c0d0	mov	x8, #0x0
000000000004c0d4	mov	w9, #0x57
000000000004c0d8	mov	w11, #0x30
000000000004c0dc	add	x12, sp, #0xe
000000000004c0e0	mov	w13, w1
000000000004c0e4	sdiv	x14, x10, x13
000000000004c0e8	neg	w10, w10
000000000004c0ec	madd	w10, w14, w13, w10
000000000004c0f0	cmp	w10, #0xa
000000000004c0f4	csel	w15, w11, w9, lo
000000000004c0f8	add	w10, w15, w10
000000000004c0fc	strb	w10, [x12, x8]
000000000004c100	add	x8, x8, #0x1
000000000004c104	mov	x10, x14
000000000004c108	tbnz	x14, #0x3f, 0x4c0e4
000000000004c10c	tbnz	x0, #0x3f, 0x4c14c
000000000004c110	cmp	w8, #0x1
000000000004c114	b.le	0x4c164
000000000004c118	mov	x9, #0x0
000000000004c11c	mov	w8, w8
000000000004c120	sub	x10, x8, #0x1
000000000004c124	add	x11, sp, #0xe
000000000004c128	ldrb	w12, [x11, x9]
000000000004c12c	ldrb	w13, [x11, x10]
000000000004c130	strb	w13, [x11, x9]
000000000004c134	strb	w12, [x11, x10]
000000000004c138	add	x9, x9, #0x1
000000000004c13c	sub	x10, x10, #0x1
000000000004c140	cmp	x9, x10
000000000004c144	b.lt	0x4c128
000000000004c148	b	0x4c168
000000000004c14c	add	x9, sp, #0xe
000000000004c150	mov	w10, #0x2d
000000000004c154	strb	w10, [x9, w8, uxtw]
000000000004c158	add	w8, w8, #0x1
000000000004c15c	cmp	w8, #0x1
000000000004c160	b.gt	0x4c118
000000000004c164	sxtw	x8, w8
000000000004c168	add	x9, sp, #0xe
000000000004c16c	strb	wzr, [x9, x8]
000000000004c170	add	x0, sp, #0xe
000000000004c174	mov	x1, x2
000000000004c178	bl	_CreateStringFromCString
000000000004c17c	ldp	x29, x30, [sp, #0x50]
000000000004c180	add	sp, sp, #0x60
000000000004c184	ret
_Kotlin_String_plusImpl:
000000000004c188	stp	x24, x23, [sp, #-0x40]!
000000000004c18c	stp	x22, x21, [sp, #0x10]
000000000004c190	stp	x20, x19, [sp, #0x20]
000000000004c194	stp	x29, x30, [sp, #0x30]
000000000004c198	add	x29, sp, #0x30
000000000004c19c	ldr	w8, [x0, #0x8]
000000000004c1a0	ldr	w9, [x1, #0x8]
000000000004c1a4	adds	w23, w9, w8
000000000004c1a8	b.mi	0x4c24c
000000000004c1ac	mov	x19, x2
000000000004c1b0	mov	x20, x1
000000000004c1b4	mov	x21, x0
000000000004c1b8	adrp	x0, 46 ; 0x7a000
000000000004c1bc	add	x0, x0, #0x2c0
000000000004c1c0	ldr	x8, [x0]
000000000004c1c4	blr	x8
000000000004c1c8	ldr	x8, [x0]
000000000004c1cc	ldr	x8, [x8, #0x118]
000000000004c1d0	lsl	x9, x23, #1
000000000004c1d4	add	x9, x9, #0x1f
000000000004c1d8	and	x1, x9, #0x3fffffff8
000000000004c1dc	add	x0, x8, #0x70
000000000004c1e0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004c1e4	mov	x22, x0
000000000004c1e8	stp	xzr, xzr, [x22, #0x10]!
000000000004c1ec	adr	x8, #0x15cf4
000000000004c1f0	nop
000000000004c1f4	stp	xzr, x8, [x22, #-0x8]
000000000004c1f8	str	w23, [x22, #0x8]
000000000004c1fc	str	x22, [x19]
000000000004c200	add	x23, x22, #0x10
000000000004c204	add	x1, x21, #0x10
000000000004c208	ldr	w8, [x21, #0x8]
000000000004c20c	lsl	x2, x8, #1
000000000004c210	mov	x0, x23
000000000004c214	bl	0x554ac ; symbol stub for: _memcpy
000000000004c218	ldrsw	x8, [x21, #0x8]
000000000004c21c	add	x0, x23, x8, lsl #1
000000000004c220	add	x1, x20, #0x10
000000000004c224	ldr	w8, [x20, #0x8]
000000000004c228	lsl	x2, x8, #1
000000000004c22c	bl	0x554ac ; symbol stub for: _memcpy
000000000004c230	str	x22, [x19]
000000000004c234	mov	x0, x22
000000000004c238	ldp	x29, x30, [sp, #0x30]
000000000004c23c	ldp	x20, x19, [sp, #0x20]
000000000004c240	ldp	x22, x21, [sp, #0x10]
000000000004c244	ldp	x24, x23, [sp], #0x40
000000000004c248	ret
000000000004c24c	bl	_ThrowArrayIndexOutOfBoundsException
_Kotlin_String_subSequence:
000000000004c250	sub	sp, sp, #0x60
000000000004c254	stp	x24, x23, [sp, #0x20]
000000000004c258	stp	x22, x21, [sp, #0x30]
000000000004c25c	stp	x20, x19, [sp, #0x40]
000000000004c260	stp	x29, x30, [sp, #0x50]
000000000004c264	add	x29, sp, #0x50
000000000004c268	tbnz	w1, #0x1f, 0x4c37c
000000000004c26c	mov	x20, x1
000000000004c270	cmp	w2, w1
000000000004c274	b.lt	0x4c37c
000000000004c278	mov	x21, x0
000000000004c27c	ldr	w8, [x0, #0x8]
000000000004c280	cmp	w8, w2
000000000004c284	b.lo	0x4c37c
000000000004c288	mov	x19, x3
000000000004c28c	subs	w23, w2, w20
000000000004c290	b.ne	0x4c2fc
000000000004c294	str	xzr, [sp, #0x8]
000000000004c298	adrp	x20, 46 ; 0x7a000
000000000004c29c	add	x20, x20, #0x2c0
000000000004c2a0	ldr	x21, [x20]
000000000004c2a4	mov	x0, x20
000000000004c2a8	blr	x21
000000000004c2ac	ldr	x8, [x0]
000000000004c2b0	ldr	x9, [x8, #0x110]
000000000004c2b4	add	x10, sp, #0x8
000000000004c2b8	str	x10, [x8, #0x110]
000000000004c2bc	mov	x8, #0x300000000
000000000004c2c0	stp	x9, x8, [sp, #0x10]
000000000004c2c4	adr	x8, #0x47fc5
000000000004c2c8	nop
000000000004c2cc	ldarb	w8, [x8]
000000000004c2d0	tbz	w8, #0x0, 0x4c2d8
000000000004c2d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004c2d8	adr	x22, #0x21c08
000000000004c2dc	nop
000000000004c2e0	str	x22, [x19]
000000000004c2e4	mov	x0, x20
000000000004c2e8	blr	x21
000000000004c2ec	ldr	x8, [x0]
000000000004c2f0	ldr	x9, [sp, #0x10]
000000000004c2f4	str	x9, [x8, #0x110]
000000000004c2f8	b	0x4c360
000000000004c2fc	b.mi	0x4c380
000000000004c300	adrp	x0, 46 ; 0x7a000
000000000004c304	add	x0, x0, #0x2c0
000000000004c308	ldr	x8, [x0]
000000000004c30c	blr	x8
000000000004c310	ldr	x8, [x0]
000000000004c314	ldr	x8, [x8, #0x118]
000000000004c318	lsl	x9, x23, #1
000000000004c31c	add	x9, x9, #0x1f
000000000004c320	and	x1, x9, #0x3fffffff8
000000000004c324	add	x0, x8, #0x70
000000000004c328	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004c32c	mov	x22, x0
000000000004c330	adr	x8, #0x15bb0
000000000004c334	nop
000000000004c338	stp	x8, xzr, [x22, #0x10]!
000000000004c33c	stur	xzr, [x22, #-0x8]
000000000004c340	str	w23, [x22, #0x8]
000000000004c344	str	x22, [x19]
000000000004c348	add	x0, x22, #0x10
000000000004c34c	add	x8, x21, w20, uxtw #1
000000000004c350	add	x1, x8, #0x10
000000000004c354	sbfiz	x2, x23, #1, #32
000000000004c358	bl	0x554ac ; symbol stub for: _memcpy
000000000004c35c	str	x22, [x19]
000000000004c360	mov	x0, x22
000000000004c364	ldp	x29, x30, [sp, #0x50]
000000000004c368	ldp	x20, x19, [sp, #0x40]
000000000004c36c	ldp	x22, x21, [sp, #0x30]
000000000004c370	ldp	x24, x23, [sp, #0x20]
000000000004c374	add	sp, sp, #0x60
000000000004c378	ret
000000000004c37c	bl	_ThrowArrayIndexOutOfBoundsException
000000000004c380	bl	_ThrowIllegalArgumentException
_Kotlin_String_compareTo:
000000000004c384	add	x8, x0, #0x10
000000000004c388	add	x9, x1, #0x10
000000000004c38c	ldr	w10, [x1, #0x8]
000000000004c390	ldr	w11, [x0, #0x8]
000000000004c394	cmp	w10, w11
000000000004c398	csel	w12, w10, w11, lo
000000000004c39c	lsr	w13, w12, #2
000000000004c3a0	cbz	w13, 0x4c3c8
000000000004c3a4	mov	x14, #0x0
000000000004c3a8	lsl	x15, x14, #3
000000000004c3ac	ldr	x16, [x8, x15]
000000000004c3b0	ldr	x15, [x9, x15]
000000000004c3b4	cmp	x16, x15
000000000004c3b8	b.ne	0x4c3d8
000000000004c3bc	add	x14, x14, #0x1
000000000004c3c0	cmp	x13, x14
000000000004c3c4	b.ne	0x4c3a8
000000000004c3c8	lsl	w14, w13, #2
000000000004c3cc	cmp	w14, w12
000000000004c3d0	b.lo	0x4c3e8
000000000004c3d4	b	0x4c430
000000000004c3d8	mov	x13, x14
000000000004c3dc	lsl	w14, w13, #2
000000000004c3e0	cmp	w14, w12
000000000004c3e4	b.hs	0x4c430
000000000004c3e8	mov	w13, w13
000000000004c3ec	lsl	x13, x13, #2
000000000004c3f0	sub	w12, w12, w14
000000000004c3f4	lsl	x14, x13, #1
000000000004c3f8	ldrh	w15, [x8, x14]
000000000004c3fc	ldrh	w14, [x9, x14]
000000000004c400	cmp	w15, w14
000000000004c404	b.ne	0x4c418
000000000004c408	add	x13, x13, #0x1
000000000004c40c	subs	w12, w12, #0x1
000000000004c410	b.ne	0x4c3f4
000000000004c414	b	0x4c430
000000000004c418	cbz	w12, 0x4c430
000000000004c41c	ubfiz	x10, x13, #1, #32
000000000004c420	ldrh	w8, [x8, x10]
000000000004c424	ldrh	w9, [x9, x10]
000000000004c428	cmp	w8, w9
000000000004c42c	b	0x4c434
000000000004c430	cmp	w11, w10
000000000004c434	cset	w8, eq
000000000004c438	cset	w9, lo
000000000004c43c	cmp	w9, #0x0
000000000004c440	mov	w9, #-0x1
000000000004c444	cneg	w9, w9, eq
000000000004c448	cmp	w8, #0x0
000000000004c44c	csel	w0, wzr, w9, ne
000000000004c450	ret
_Kotlin_String_get:
000000000004c454	stp	x29, x30, [sp, #-0x10]!
000000000004c458	mov	x29, sp
000000000004c45c	ldr	w8, [x0, #0x8]
000000000004c460	cmp	w8, w1
000000000004c464	b.ls	0x4c478
000000000004c468	add	x8, x0, w1, sxtw #1
000000000004c46c	ldrh	w0, [x8, #0x10]
000000000004c470	ldp	x29, x30, [sp], #0x10
000000000004c474	ret
000000000004c478	bl	_ThrowArrayIndexOutOfBoundsException
_Kotlin_String_unsafeStringToUtf8:
000000000004c47c	sub	sp, sp, #0x70
000000000004c480	stp	x26, x25, [sp, #0x20]
000000000004c484	stp	x24, x23, [sp, #0x30]
000000000004c488	stp	x22, x21, [sp, #0x40]
000000000004c48c	stp	x20, x19, [sp, #0x50]
000000000004c490	stp	x29, x30, [sp, #0x60]
000000000004c494	add	x29, sp, #0x60
000000000004c498	mov	x19, x3
000000000004c49c	mov	x22, x2
000000000004c4a0	mov	x20, x1
000000000004c4a4	mov	x21, x0
000000000004c4a8	stp	xzr, xzr, [sp, #0x8]
000000000004c4ac	str	xzr, [sp, #0x18]
000000000004c4b0	sxtw	x23, w22
000000000004c4b4	add	x0, sp, #0x8
000000000004c4b8	mov	x1, x23
000000000004c4bc	bl	__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE7reserveEm
000000000004c4c0	cbz	w22, 0x4c560
000000000004c4c4	add	x8, x21, w20, sxtw #1
000000000004c4c8	add	x25, x8, #0x10
000000000004c4cc	add	x20, x25, x23, lsl #1
000000000004c4d0	mov	w21, #0xd800
000000000004c4d4	mov	w22, #0x2400
000000000004c4d8	movk	w22, #0xfca0, lsl #16
000000000004c4dc	mov	w23, #0xdc00
000000000004c4e0	mov	w24, #0xfffd
000000000004c4e4	b	0x4c504
000000000004c4e8	cmp	w10, w23
000000000004c4ec	csel	w0, w24, w9, eq
000000000004c4f0	mov	x25, x8
000000000004c4f4	add	x1, sp, #0x8
000000000004c4f8	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
000000000004c4fc	cmp	x25, x20
000000000004c500	b.eq	0x4c560
000000000004c504	mov	x8, x25
000000000004c508	ldrh	w9, [x8], #0x2
000000000004c50c	and	w10, w9, #0xfc00
000000000004c510	cmp	w10, w21
000000000004c514	b.ne	0x4c4e8
000000000004c518	cmp	x8, x20
000000000004c51c	b.eq	0x4c554
000000000004c520	ldrh	w10, [x25, #0x2]
000000000004c524	and	w11, w10, #0xfc00
000000000004c528	add	w9, w10, w9, lsl #10
000000000004c52c	add	w9, w9, w22
000000000004c530	add	x10, x25, #0x4
000000000004c534	cmp	w11, w23
000000000004c538	csel	w0, w9, w24, eq
000000000004c53c	csel	x25, x10, x8, eq
000000000004c540	add	x1, sp, #0x8
000000000004c544	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
000000000004c548	cmp	x25, x20
000000000004c54c	b.ne	0x4c504
000000000004c550	b	0x4c560
000000000004c554	add	x1, sp, #0x8
000000000004c558	mov	w0, #0xfffd
000000000004c55c	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
000000000004c560	ldrb	w8, [sp, #0x1f]
000000000004c564	sxtb	w9, w8
000000000004c568	ldr	x10, [sp, #0x10]
000000000004c56c	cmp	w9, #0x0
000000000004c570	csel	x21, x10, x8, lt
000000000004c574	tbnz	w21, #0x1f, 0x4c614
000000000004c578	adrp	x0, 46 ; 0x7a000
000000000004c57c	add	x0, x0, #0x2c0
000000000004c580	ldr	x8, [x0]
000000000004c584	blr	x8
000000000004c588	ldr	x8, [x0]
000000000004c58c	ldr	x8, [x8, #0x118]
000000000004c590	and	x9, x21, #0xffffffff
000000000004c594	add	x9, x9, #0x1f
000000000004c598	and	x1, x9, #0x1fffffff8
000000000004c59c	add	x0, x8, #0x70
000000000004c5a0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004c5a4	mov	x20, x0
000000000004c5a8	stp	xzr, xzr, [x20, #0x10]!
000000000004c5ac	adr	x8, #0x146f4
000000000004c5b0	nop
000000000004c5b4	stp	xzr, x8, [x20, #-0x8]
000000000004c5b8	str	w21, [x20, #0x8]
000000000004c5bc	str	x20, [x19]
000000000004c5c0	add	x0, x20, #0x10
000000000004c5c4	ldrsb	w22, [sp, #0x1f]
000000000004c5c8	ldp	x21, x8, [sp, #0x8]
000000000004c5cc	and	x9, x22, #0xff
000000000004c5d0	cmp	w22, #0x0
000000000004c5d4	add	x10, sp, #0x8
000000000004c5d8	csel	x1, x21, x10, lt
000000000004c5dc	csel	x2, x8, x9, lt
000000000004c5e0	bl	0x554ac ; symbol stub for: _memcpy
000000000004c5e4	str	x20, [x19]
000000000004c5e8	tbz	w22, #0x1f, 0x4c5f4
000000000004c5ec	mov	x0, x21
000000000004c5f0	bl	0x55458 ; symbol stub for: _free
000000000004c5f4	mov	x0, x20
000000000004c5f8	ldp	x29, x30, [sp, #0x60]
000000000004c5fc	ldp	x20, x19, [sp, #0x50]
000000000004c600	ldp	x22, x21, [sp, #0x40]
000000000004c604	ldp	x24, x23, [sp, #0x30]
000000000004c608	ldp	x26, x25, [sp, #0x20]
000000000004c60c	add	sp, sp, #0x70
000000000004c610	ret
000000000004c614	bl	_ThrowIllegalArgumentException
000000000004c618	brk	#0x1
000000000004c61c	b	0x4c620
000000000004c620	mov	x19, x0
000000000004c624	ldrsb	w8, [sp, #0x1f]
000000000004c628	tbz	w8, #0x1f, 0x4c634
000000000004c62c	ldr	x0, [sp, #0x8]
000000000004c630	bl	0x55458 ; symbol stub for: _free
000000000004c634	mov	x0, x19
000000000004c638	bl	0x55194 ; symbol stub for: __Unwind_Resume
_Kotlin_String_equals:
000000000004c63c	stp	x29, x30, [sp, #-0x10]!
000000000004c640	mov	x29, sp
000000000004c644	cbz	x1, 0x4c664
000000000004c648	ldr	x8, [x1]
000000000004c64c	and	x8, x8, #0xfffffffffffffffc
000000000004c650	ldr	x8, [x8]
000000000004c654	adr	x9, #0x1588c
000000000004c658	nop
000000000004c65c	cmp	x8, x9
000000000004c660	b.eq	0x4c670
000000000004c664	mov	w0, #0x0
000000000004c668	ldp	x29, x30, [sp], #0x10
000000000004c66c	ret
000000000004c670	cmp	x1, x0
000000000004c674	b.eq	0x4c6a8
000000000004c678	ldr	w8, [x0, #0x8]
000000000004c67c	ldr	w9, [x1, #0x8]
000000000004c680	cmp	w8, w9
000000000004c684	b.ne	0x4c664
000000000004c688	add	x0, x0, #0x10
000000000004c68c	add	x1, x1, #0x10
000000000004c690	lsl	x2, x8, #1
000000000004c694	bl	0x554a0 ; symbol stub for: _memcmp
000000000004c698	cmp	w0, #0x0
000000000004c69c	cset	w0, eq
000000000004c6a0	ldp	x29, x30, [sp], #0x10
000000000004c6a4	ret
000000000004c6a8	mov	w0, #0x1
000000000004c6ac	ldp	x29, x30, [sp], #0x10
000000000004c6b0	ret
_Kotlin_String_hashCode:
000000000004c6b4	stp	d9, d8, [sp, #-0x10]!
000000000004c6b8	ldrsw	x9, [x0, #0x8]
000000000004c6bc	add	x8, x0, #0x10
000000000004c6c0	add	w10, w9, #0x3
000000000004c6c4	cmp	w9, #0x0
000000000004c6c8	csel	w10, w10, w9, lt
000000000004c6cc	asr	w11, w10, #2
000000000004c6d0	adrp	x10, 11 ; 0x57000
000000000004c6d4	movi.16b	v0, #0x0
000000000004c6d8	cmp	w9, #0x1e8
000000000004c6dc	b.ge	0x4c7ec
000000000004c6e0	cmp	w9, #0x10
000000000004c6e4	b.lt	0x4c778
000000000004c6e8	mov	w12, #0xde01
000000000004c6ec	movk	w12, #0x50a9, lsl #16
000000000004c6f0	dup.4s	v1, w12
000000000004c6f4	nop
000000000004c6f8	ldr	q2, 0x57c10
000000000004c6fc	nop
000000000004c700	ldr	q3, 0x57c20
000000000004c704	nop
000000000004c708	ldr	q4, 0x57c30
000000000004c70c	movi.16b	v5, #0x0
000000000004c710	movi.16b	v6, #0x0
000000000004c714	movi.16b	v7, #0x0
000000000004c718	ldr	d16, [x10, #0xb68]
000000000004c71c	mov	x12, x11
000000000004c720	ldp	d17, d18, [x8]
000000000004c724	ushll.4s	v17, v17, #0x0
000000000004c728	ushll.4s	v18, v18, #0x0
000000000004c72c	ldp	d19, d20, [x8, #0x10]
000000000004c730	ushll.4s	v19, v19, #0x0
000000000004c734	mul.4s	v7, v7, v1
000000000004c738	mul.4s	v6, v6, v1
000000000004c73c	mul.4s	v5, v5, v1
000000000004c740	mul.4s	v0, v0, v1
000000000004c744	mla.4s	v7, v17, v2
000000000004c748	mla.4s	v6, v18, v3
000000000004c74c	mla.4s	v5, v19, v4
000000000004c750	umlal.4s	v0, v20, v16
000000000004c754	add	x8, x8, #0x20
000000000004c758	sub	w11, w11, #0x4
000000000004c75c	cmp	w12, #0x7
000000000004c760	b.gt	0x4c71c
000000000004c764	add.4s	v1, v6, v7
000000000004c768	add.4s	v0, v0, v5
000000000004c76c	add.4s	v0, v0, v1
000000000004c770	addv.4s	s0, v0
000000000004c774	dup.4s	v0, v0[0]
000000000004c778	cmp	w11, #0x1
000000000004c77c	b.le	0x4c9f0
000000000004c780	movi.16b	v1, #0x0
000000000004c784	mov	w12, #0x6f01
000000000004c788	movk	w12, #0x9444, lsl #16
000000000004c78c	dup.4s	v2, w12
000000000004c790	nop
000000000004c794	ldr	q3, 0x57c30
000000000004c798	ldr	d5, [x10, #0xb68]
000000000004c79c	movi.16b	v4, #0x0
000000000004c7a0	mov	x12, x11
000000000004c7a4	ldp	d6, d7, [x8], #0x10
000000000004c7a8	ushll.4s	v6, v6, #0x0
000000000004c7ac	mul.4s	v4, v4, v2
000000000004c7b0	mul.4s	v1, v1, v2
000000000004c7b4	mla.4s	v4, v6, v3
000000000004c7b8	umlal.4s	v1, v7, v5
000000000004c7bc	sub	w11, w11, #0x2
000000000004c7c0	cmp	w12, #0x3
000000000004c7c4	b.gt	0x4c7a0
000000000004c7c8	mov	w12, #0x6f01
000000000004c7cc	movk	w12, #0x9444, lsl #16
000000000004c7d0	dup.4s	v2, w12
000000000004c7d4	add.4s	v1, v1, v4
000000000004c7d8	addv.4s	s1, v1
000000000004c7dc	dup.4s	v1, v1[0]
000000000004c7e0	mla.4s	v1, v0, v2
000000000004c7e4	mov.16b	v0, v1
000000000004c7e8	b	0x4c9f0
000000000004c7ec	mov	w12, #0xbc01
000000000004c7f0	movk	w12, #0x7dd7, lsl #16
000000000004c7f4	dup.4s	v5, w12
000000000004c7f8	nop
000000000004c7fc	ldr	q6, 0x57bd0
000000000004c800	nop
000000000004c804	ldr	q7, 0x57be0
000000000004c808	nop
000000000004c80c	ldr	q16, 0x57bf0
000000000004c810	nop
000000000004c814	ldr	q17, 0x57c00
000000000004c818	nop
000000000004c81c	ldr	q3, 0x57c10
000000000004c820	nop
000000000004c824	ldr	q4, 0x57c20
000000000004c828	nop
000000000004c82c	movi.16b	v18, #0x0
000000000004c830	movi.16b	v19, #0x0
000000000004c834	movi.16b	v20, #0x0
000000000004c838	movi.16b	v21, #0x0
000000000004c83c	movi.16b	v22, #0x0
000000000004c840	ldr	q1, 0x57c30
000000000004c844	movi.16b	v23, #0x0
000000000004c848	movi.16b	v24, #0x0
000000000004c84c	ldr	d2, [x10, #0xb68]
000000000004c850	mov	x12, x11
000000000004c854	ldp	d25, d26, [x8]
000000000004c858	ushll.4s	v25, v25, #0x0
000000000004c85c	ushll.4s	v26, v26, #0x0
000000000004c860	ldp	d27, d28, [x8, #0x10]
000000000004c864	ushll.4s	v27, v27, #0x0
000000000004c868	ushll.4s	v28, v28, #0x0
000000000004c86c	ldp	d29, d30, [x8, #0x20]
000000000004c870	ushll.4s	v29, v29, #0x0
000000000004c874	ushll.4s	v30, v30, #0x0
000000000004c878	mul.4s	v24, v24, v5
000000000004c87c	mul.4s	v23, v23, v5
000000000004c880	ldp	d31, d8, [x8, #0x30]
000000000004c884	mul.4s	v22, v22, v5
000000000004c888	mul.4s	v21, v21, v5
000000000004c88c	mul.4s	v20, v20, v5
000000000004c890	mul.4s	v19, v19, v5
000000000004c894	mul.4s	v18, v18, v5
000000000004c898	mul.4s	v0, v0, v5
000000000004c89c	ushll.4s	v31, v31, #0x0
000000000004c8a0	mla.4s	v24, v25, v6
000000000004c8a4	mla.4s	v23, v26, v7
000000000004c8a8	mla.4s	v22, v27, v16
000000000004c8ac	mla.4s	v21, v28, v17
000000000004c8b0	mla.4s	v20, v29, v3
000000000004c8b4	mla.4s	v19, v30, v4
000000000004c8b8	mla.4s	v18, v31, v1
000000000004c8bc	add	x8, x8, #0x40
000000000004c8c0	sub	w11, w11, #0x8
000000000004c8c4	umlal.4s	v0, v8, v2
000000000004c8c8	cmp	w12, #0xf
000000000004c8cc	b.gt	0x4c850
000000000004c8d0	add.4s	v5, v23, v24
000000000004c8d4	add.4s	v6, v21, v22
000000000004c8d8	add.4s	v7, v19, v20
000000000004c8dc	add.4s	v0, v0, v18
000000000004c8e0	add.4s	v5, v6, v5
000000000004c8e4	add.4s	v5, v5, v7
000000000004c8e8	add.4s	v0, v5, v0
000000000004c8ec	addv.4s	s0, v0
000000000004c8f0	dup.4s	v0, v0[0]
000000000004c8f4	add	w12, w11, #0x8
000000000004c8f8	cmp	w12, #0xc
000000000004c8fc	b.lt	0x4c98c
000000000004c900	movi.16b	v5, #0x0
000000000004c904	mov	w12, #0xde01
000000000004c908	movk	w12, #0x50a9, lsl #16
000000000004c90c	dup.4s	v7, w12
000000000004c910	movi.16b	v6, #0x0
000000000004c914	movi.16b	v16, #0x0
000000000004c918	movi.16b	v17, #0x0
000000000004c91c	mov	x12, x11
000000000004c920	ldp	d18, d19, [x8]
000000000004c924	ushll.4s	v18, v18, #0x0
000000000004c928	ushll.4s	v19, v19, #0x0
000000000004c92c	ldp	d20, d21, [x8, #0x10]
000000000004c930	ushll.4s	v20, v20, #0x0
000000000004c934	mul.4s	v17, v17, v7
000000000004c938	mul.4s	v16, v16, v7
000000000004c93c	mul.4s	v6, v6, v7
000000000004c940	mul.4s	v5, v5, v7
000000000004c944	mla.4s	v17, v18, v3
000000000004c948	mla.4s	v16, v19, v4
000000000004c94c	mla.4s	v6, v20, v1
000000000004c950	umlal.4s	v5, v21, v2
000000000004c954	add	x8, x8, #0x20
000000000004c958	sub	w11, w11, #0x4
000000000004c95c	cmp	w12, #0x7
000000000004c960	b.gt	0x4c91c
000000000004c964	mov	w12, #0xde01
000000000004c968	movk	w12, #0x50a9, lsl #16
000000000004c96c	dup.4s	v3, w12
000000000004c970	add.4s	v4, v16, v17
000000000004c974	add.4s	v5, v5, v6
000000000004c978	add.4s	v4, v5, v4
000000000004c97c	addv.4s	s4, v4
000000000004c980	dup.4s	v4, v4[0]
000000000004c984	mla.4s	v4, v0, v3
000000000004c988	mov.16b	v0, v4
000000000004c98c	cmp	w11, #0x1
000000000004c990	b.le	0x4c9f0
000000000004c994	movi.16b	v3, #0x0
000000000004c998	mov	w12, #0x6f01
000000000004c99c	movk	w12, #0x9444, lsl #16
000000000004c9a0	dup.4s	v5, w12
000000000004c9a4	movi.16b	v4, #0x0
000000000004c9a8	mov	x12, x11
000000000004c9ac	ldp	d6, d7, [x8], #0x10
000000000004c9b0	ushll.4s	v6, v6, #0x0
000000000004c9b4	mul.4s	v4, v4, v5
000000000004c9b8	mul.4s	v3, v3, v5
000000000004c9bc	mla.4s	v4, v6, v1
000000000004c9c0	umlal.4s	v3, v7, v2
000000000004c9c4	sub	w11, w11, #0x2
000000000004c9c8	cmp	w12, #0x3
000000000004c9cc	b.gt	0x4c9a8
000000000004c9d0	mov	w12, #0x6f01
000000000004c9d4	movk	w12, #0x9444, lsl #16
000000000004c9d8	dup.4s	v1, w12
000000000004c9dc	add.4s	v2, v3, v4
000000000004c9e0	addv.4s	s2, v2
000000000004c9e4	dup.4s	v2, v2[0]
000000000004c9e8	mla.4s	v2, v0, v1
000000000004c9ec	mov.16b	v0, v2
000000000004c9f0	cmp	w11, #0x1
000000000004c9f4	b.lt	0x4ca20
000000000004c9f8	ldr	d1, [x8]
000000000004c9fc	mov	w8, #0x1781
000000000004ca00	movk	w8, #0xe, lsl #16
000000000004ca04	dup.4s	v2, w8
000000000004ca08	ldr	d3, [x10, #0xb68]
000000000004ca0c	umull.4s	v1, v1, v3
000000000004ca10	addv.4s	s1, v1
000000000004ca14	dup.4s	v1, v1[0]
000000000004ca18	mla.4s	v1, v0, v2
000000000004ca1c	mov.16b	v0, v1
000000000004ca20	fmov	w8, s0
000000000004ca24	and	x10, x9, #0xfffffffffffffffc
000000000004ca28	cmp	w10, w9
000000000004ca2c	b.ge	0x4ca54
000000000004ca30	sub	x9, x9, x10
000000000004ca34	add	x10, x0, x10, lsl #1
000000000004ca38	add	x10, x10, #0x10
000000000004ca3c	lsl	w11, w8, #5
000000000004ca40	sub	w8, w11, w8
000000000004ca44	ldrh	w11, [x10], #0x2
000000000004ca48	add	w8, w8, w11
000000000004ca4c	subs	x9, x9, #0x1
000000000004ca50	b.ne	0x4ca3c
000000000004ca54	mov	x0, x8
000000000004ca58	ldp	d9, d8, [sp], #0x10
000000000004ca5c	ret
-[KIteratorAsNSEnumerator dealloc]:
000000000004ca60	sub	sp, sp, #0x60
000000000004ca64	stp	x26, x25, [sp, #0x10]
000000000004ca68	stp	x24, x23, [sp, #0x20]
000000000004ca6c	stp	x22, x21, [sp, #0x30]
000000000004ca70	stp	x20, x19, [sp, #0x40]
000000000004ca74	stp	x29, x30, [sp, #0x50]
000000000004ca78	add	x29, sp, #0x50
000000000004ca7c	mov	x19, x0
000000000004ca80	nop
000000000004ca84	ldrsw	x8, _OBJC_IVAR_$_FastaKmmKIteratorAsNSEnumerator.iteratorHolder
000000000004ca88	add	x24, x0, x8
000000000004ca8c	bl	_Kotlin_initRuntimeIfNeeded
000000000004ca90	adrp	x21, 46 ; 0x7a000
000000000004ca94	add	x21, x21, #0x2c0
000000000004ca98	ldr	x25, [x21]
000000000004ca9c	mov	x0, x21
000000000004caa0	blr	x25
000000000004caa4	ldr	x8, [x0]
000000000004caa8	add	x20, x8, #0x138
000000000004caac	ldaxr	w22, [x20]
000000000004cab0	stlxr	w8, wzr, [x20]
000000000004cab4	cbnz	w8, 0x4caac
000000000004cab8	adr	x23, #0x477d1
000000000004cabc	nop
000000000004cac0	cmp	w22, #0x1
000000000004cac4	b.ne	0x4cad8
000000000004cac8	ldarb	w8, [x23]
000000000004cacc	tbz	w8, #0x0, 0x4cad8
000000000004cad0	mov	x0, x20
000000000004cad4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004cad8	ldr	x8, [x24]
000000000004cadc	cbz	x8, 0x4caf8
000000000004cae0	ldr	x1, [x24, #0x8]
000000000004cae4	mov	x0, x21
000000000004cae8	blr	x25
000000000004caec	ldr	x8, [x0]
000000000004caf0	add	x0, x8, #0x8
000000000004caf4	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004caf8	ldaxr	w8, [x20]
000000000004cafc	stlxr	w9, w22, [x20]
000000000004cb00	cbnz	w9, 0x4caf8
000000000004cb04	cbnz	w22, 0x4cb20
000000000004cb08	cmp	w8, #0x1
000000000004cb0c	b.ne	0x4cb20
000000000004cb10	ldarb	w8, [x23]
000000000004cb14	tbz	w8, #0x0, 0x4cb20
000000000004cb18	mov	x0, x20
000000000004cb1c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004cb20	nop
000000000004cb24	ldr	x8, #0x2a1e4 ; Objc class ref: FastaKmmKIteratorAsNSEnumerator
000000000004cb28	stp	x19, x8, [sp]
000000000004cb2c	nop
000000000004cb30	ldr	x1, #0x29d60 ; Objc selector ref: dealloc
000000000004cb34	mov	x0, sp
000000000004cb38	bl	0x55590 ; Objc message: -[[x0 super] dealloc]
000000000004cb3c	ldp	x29, x30, [sp, #0x50]
000000000004cb40	ldp	x20, x19, [sp, #0x40]
000000000004cb44	ldp	x22, x21, [sp, #0x30]
000000000004cb48	ldp	x24, x23, [sp, #0x20]
000000000004cb4c	ldp	x26, x25, [sp, #0x10]
000000000004cb50	add	sp, sp, #0x60
000000000004cb54	ret
-[KIteratorAsNSEnumerator nextObject]:
000000000004cb58	sub	sp, sp, #0x90
000000000004cb5c	stp	x26, x25, [sp, #0x40]
000000000004cb60	stp	x24, x23, [sp, #0x50]
000000000004cb64	stp	x22, x21, [sp, #0x60]
000000000004cb68	stp	x20, x19, [sp, #0x70]
000000000004cb6c	stp	x29, x30, [sp, #0x80]
000000000004cb70	add	x29, sp, #0x80
000000000004cb74	mov	x21, x0
000000000004cb78	bl	_Kotlin_initRuntimeIfNeeded
000000000004cb7c	adrp	x20, 46 ; 0x7a000
000000000004cb80	add	x20, x20, #0x2c0
000000000004cb84	ldr	x25, [x20]
000000000004cb88	mov	x0, x20
000000000004cb8c	blr	x25
000000000004cb90	ldr	x8, [x0]
000000000004cb94	add	x19, x8, #0x138
000000000004cb98	ldaxr	w24, [x19]
000000000004cb9c	stlxr	w8, wzr, [x19]
000000000004cba0	cbnz	w8, 0x4cb98
000000000004cba4	adr	x23, #0x476e5
000000000004cba8	nop
000000000004cbac	cmp	w24, #0x1
000000000004cbb0	b.ne	0x4cbc4
000000000004cbb4	ldarb	w8, [x23]
000000000004cbb8	tbz	w8, #0x0, 0x4cbc4
000000000004cbbc	mov	x0, x19
000000000004cbc0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004cbc4	nop
000000000004cbc8	ldrsw	x22, _OBJC_IVAR_$_FastaKmmKIteratorAsNSEnumerator.iteratorHolder
000000000004cbcc	bl	_Kotlin_initRuntimeIfNeeded
000000000004cbd0	ldr	x21, [x21, x22]
000000000004cbd4	str	xzr, [sp, #0x28]
000000000004cbd8	mov	x0, x20
000000000004cbdc	blr	x25
000000000004cbe0	ldr	x8, [x0]
000000000004cbe4	ldr	x9, [x8, #0x110]
000000000004cbe8	add	x10, sp, #0x28
000000000004cbec	str	x10, [x8, #0x110]
000000000004cbf0	mov	x8, #0x300000000
000000000004cbf4	stp	x9, x8, [sp, #0x30]
000000000004cbf8	ldarb	w8, [x23]
000000000004cbfc	tbz	w8, #0x0, 0x4cc04
000000000004cc00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004cc04	ldr	x8, [x21]
000000000004cc08	and	x8, x8, #0xfffffffffffffffc
000000000004cc0c	ldr	x8, [x8]
000000000004cc10	ldr	w9, [x8, #0x3c]
000000000004cc14	ldr	x8, [x8, #0x40]
000000000004cc18	tbnz	w9, #0x1f, 0x4cc28
000000000004cc1c	mov	w10, #0xa0
000000000004cc20	and	x9, x9, x10
000000000004cc24	b	0x4ccac
000000000004cc28	neg	w10, w9
000000000004cc2c	mvn	w9, w9
000000000004cc30	cmp	w10, #0x9
000000000004cc34	b.ge	0x4cc6c
000000000004cc38	cmp	w10, #0x2
000000000004cc3c	b.lt	0x4cca0
000000000004cc40	mov	x10, #0x0
000000000004cc44	mov	x11, x8
000000000004cc48	ldr	w12, [x11]
000000000004cc4c	cmp	w12, #0x9f
000000000004cc50	b.gt	0x4cca8
000000000004cc54	add	x10, x10, #0x1
000000000004cc58	add	x11, x11, #0x10
000000000004cc5c	cmp	x9, x10
000000000004cc60	b.ne	0x4cc48
000000000004cc64	mov	x10, x9
000000000004cc68	b	0x4cca8
000000000004cc6c	mov	w10, #0x0
000000000004cc70	add	w11, w9, w10
000000000004cc74	cmp	w11, #0x0
000000000004cc78	cinc	w11, w11, lt
000000000004cc7c	asr	w11, w11, #1
000000000004cc80	sbfiz	x12, x11, #4, #32
000000000004cc84	ldr	w12, [x8, x12]
000000000004cc88	cmp	w12, #0xa0
000000000004cc8c	csinc	w10, w10, w11, ge
000000000004cc90	csel	w9, w9, w11, lt
000000000004cc94	cmp	w10, w9
000000000004cc98	b.lt	0x4cc70
000000000004cc9c	b	0x4cca8
000000000004cca0	mov	w10, #0x0
000000000004cca4	b	0x4cca8
000000000004cca8	sxtw	x9, w10
000000000004ccac	add	x8, x8, x9, lsl #4
000000000004ccb0	ldr	x8, [x8, #0x8]
000000000004ccb4	ldr	x8, [x8]
000000000004ccb8	mov	x0, x21
000000000004ccbc	blr	x8
000000000004ccc0	mov	x8, x0
000000000004ccc4	mov	x0, x20
000000000004ccc8	blr	x25
000000000004cccc	ldr	x9, [x0]
000000000004ccd0	ldr	x10, [sp, #0x30]
000000000004ccd4	str	x10, [x9, #0x110]
000000000004ccd8	cbz	w8, 0x4cd34
000000000004ccdc	add	x8, sp, #0x8
000000000004cce0	add	x22, x8, #0x18
000000000004cce4	mov	x11, #0x400000000
000000000004cce8	str	x10, [sp, #0x10]
000000000004ccec	stp	x11, xzr, [sp, #0x18]
000000000004ccf0	stp	xzr, x8, [sp, #0x28]
000000000004ccf4	add	x8, sp, #0x28
000000000004ccf8	str	x8, [x9, #0x110]
000000000004ccfc	mov	x8, #0x300000000
000000000004cd00	str	x8, [sp, #0x38]
000000000004cd04	ldarb	w8, [x23]
000000000004cd08	tbz	w8, #0x0, 0x4cd10
000000000004cd0c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004cd10	ldr	x8, [x21]
000000000004cd14	and	x8, x8, #0xfffffffffffffffc
000000000004cd18	ldr	x8, [x8]
000000000004cd1c	ldr	w9, [x8, #0x3c]
000000000004cd20	ldr	x8, [x8, #0x40]
000000000004cd24	tbnz	w9, #0x1f, 0x4cd3c
000000000004cd28	mov	w10, #0xa0
000000000004cd2c	and	x9, x9, x10
000000000004cd30	b	0x4cdc0
000000000004cd34	mov	x21, #0x0
000000000004cd38	b	0x4ce30
000000000004cd3c	neg	w10, w9
000000000004cd40	mvn	w9, w9
000000000004cd44	cmp	w10, #0x9
000000000004cd48	b.ge	0x4cd80
000000000004cd4c	cmp	w10, #0x2
000000000004cd50	b.lt	0x4cdb4
000000000004cd54	mov	x10, #0x0
000000000004cd58	mov	x11, x8
000000000004cd5c	ldr	w12, [x11]
000000000004cd60	cmp	w12, #0x9f
000000000004cd64	b.gt	0x4cdbc
000000000004cd68	add	x10, x10, #0x1
000000000004cd6c	add	x11, x11, #0x10
000000000004cd70	cmp	x9, x10
000000000004cd74	b.ne	0x4cd5c
000000000004cd78	mov	x10, x9
000000000004cd7c	b	0x4cdbc
000000000004cd80	mov	w10, #0x0
000000000004cd84	add	w11, w9, w10
000000000004cd88	cmp	w11, #0x0
000000000004cd8c	cinc	w11, w11, lt
000000000004cd90	asr	w11, w11, #1
000000000004cd94	sbfiz	x12, x11, #4, #32
000000000004cd98	ldr	w12, [x8, x12]
000000000004cd9c	cmp	w12, #0xa0
000000000004cda0	csinc	w10, w10, w11, ge
000000000004cda4	csel	w9, w9, w11, lt
000000000004cda8	cmp	w10, w9
000000000004cdac	b.lt	0x4cd84
000000000004cdb0	b	0x4cdbc
000000000004cdb4	mov	w10, #0x0
000000000004cdb8	b	0x4cdbc
000000000004cdbc	sxtw	x9, w10
000000000004cdc0	add	x8, x8, x9, lsl #4
000000000004cdc4	ldr	x8, [x8, #0x8]
000000000004cdc8	ldr	x8, [x8, #0x8]
000000000004cdcc	mov	x0, x21
000000000004cdd0	mov	x1, x22
000000000004cdd4	blr	x8
000000000004cdd8	mov	x8, x0
000000000004cddc	str	x0, [sp, #0x20]
000000000004cde0	mov	x0, x20
000000000004cde4	blr	x25
000000000004cde8	ldr	x9, [x0]
000000000004cdec	ldr	x10, [sp, #0x30]
000000000004cdf0	str	x10, [x9, #0x110]
000000000004cdf4	cbz	x8, 0x4ce04
000000000004cdf8	mov	x0, x8
000000000004cdfc	bl	_Kotlin_ObjCExport_refToObjC
000000000004ce00	b	0x4ce18
000000000004ce04	nop
000000000004ce08	ldr	x0, #0x29e90 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004ce0c	nop
000000000004ce10	ldr	x1, #0x29be0 ; Objc selector ref: null
000000000004ce14	bl	0x55584 ; Objc message: +[NSNull null]
000000000004ce18	mov	x21, x0
000000000004ce1c	mov	x0, x20
000000000004ce20	blr	x25
000000000004ce24	ldr	x8, [x0]
000000000004ce28	ldr	x9, [sp, #0x10]
000000000004ce2c	str	x9, [x8, #0x110]
000000000004ce30	ldaxr	w8, [x19]
000000000004ce34	stlxr	w9, w24, [x19]
000000000004ce38	cbnz	w9, 0x4ce30
000000000004ce3c	cbnz	w24, 0x4ce58
000000000004ce40	cmp	w8, #0x1
000000000004ce44	b.ne	0x4ce58
000000000004ce48	ldarb	w8, [x23]
000000000004ce4c	tbz	w8, #0x0, 0x4ce58
000000000004ce50	mov	x0, x19
000000000004ce54	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ce58	mov	x0, x21
000000000004ce5c	ldp	x29, x30, [sp, #0x80]
000000000004ce60	ldp	x20, x19, [sp, #0x70]
000000000004ce64	ldp	x22, x21, [sp, #0x60]
000000000004ce68	ldp	x24, x23, [sp, #0x50]
000000000004ce6c	ldp	x26, x25, [sp, #0x40]
000000000004ce70	add	sp, sp, #0x90
000000000004ce74	ret
000000000004ce78	mov	x21, x0
000000000004ce7c	mov	x0, x20
000000000004ce80	blr	x25
000000000004ce84	ldr	x8, [x0]
000000000004ce88	ldr	x9, [sp, #0x10]
000000000004ce8c	b	0x4cec4
000000000004ce90	mov	x21, x0
000000000004ce94	mov	x0, x20
000000000004ce98	blr	x25
000000000004ce9c	ldr	x8, [x0]
000000000004cea0	ldr	x9, [sp, #0x30]
000000000004cea4	str	x9, [x8, #0x110]
000000000004cea8	ldr	x9, [sp, #0x10]
000000000004ceac	b	0x4cec4
000000000004ceb0	mov	x21, x0
000000000004ceb4	mov	x0, x20
000000000004ceb8	blr	x25
000000000004cebc	ldr	x8, [x0]
000000000004cec0	ldr	x9, [sp, #0x30]
000000000004cec4	str	x9, [x8, #0x110]
000000000004cec8	ldaxr	w8, [x19]
000000000004cecc	stlxr	w9, w24, [x19]
000000000004ced0	cbnz	w9, 0x4cec8
000000000004ced4	cbnz	w24, 0x4cef0
000000000004ced8	cmp	w8, #0x1
000000000004cedc	b.ne	0x4cef0
000000000004cee0	ldarb	w8, [x23]
000000000004cee4	tbz	w8, #0x0, 0x4cef0
000000000004cee8	mov	x0, x19
000000000004ceec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004cef0	mov	x0, x21
000000000004cef4	bl	0x55194 ; symbol stub for: __Unwind_Resume
+[KIteratorAsNSEnumerator createWithKIterator:]:
000000000004cef8	stp	x22, x21, [sp, #-0x30]!
000000000004cefc	stp	x20, x19, [sp, #0x10]
000000000004cf00	stp	x29, x30, [sp, #0x20]
000000000004cf04	add	x29, sp, #0x20
000000000004cf08	mov	x19, x2
000000000004cf0c	nop
000000000004cf10	ldr	x0, #0x29da8 ; Objc class ref: FastaKmmKIteratorAsNSEnumerator
000000000004cf14	bl	0x55500 ; symbol stub for: _objc_alloc
000000000004cf18	nop
000000000004cf1c	ldr	x1, #0x299c4 ; Objc selector ref: init
000000000004cf20	bl	0x55584 ; Objc message: +[FastaKmmKIteratorAsNSEnumerator init]
000000000004cf24	bl	0x55524 ; symbol stub for: _objc_autorelease
000000000004cf28	mov	x20, x0
000000000004cf2c	nop
000000000004cf30	ldrsw	x8, _OBJC_IVAR_$_FastaKmmKIteratorAsNSEnumerator.iteratorHolder
000000000004cf34	add	x21, x0, x8
000000000004cf38	adrp	x0, 46 ; 0x7a000
000000000004cf3c	add	x0, x0, #0x2c0
000000000004cf40	ldr	x8, [x0]
000000000004cf44	blr	x8
000000000004cf48	ldr	x22, [x0]
000000000004cf4c	mov	w0, #0x1
000000000004cf50	mov	w1, #0x28
000000000004cf54	bl	0x553d4 ; symbol stub for: _calloc
000000000004cf58	ldr	x8, [x22, #0xa8]!
000000000004cf5c	sub	x9, x22, #0x8
000000000004cf60	stp	x8, x22, [x0]
000000000004cf64	str	x0, [x8, #0x8]
000000000004cf68	str	x0, [x22]
000000000004cf6c	ldr	x8, [x22, #0x10]
000000000004cf70	add	x8, x8, #0x1
000000000004cf74	str	x8, [x22, #0x10]
000000000004cf78	stp	x9, x0, [x0, #0x18]
000000000004cf7c	str	x19, [x0, #0x10]!
000000000004cf80	stp	x19, x0, [x21]
000000000004cf84	mov	x0, x20
000000000004cf88	ldp	x29, x30, [sp, #0x20]
000000000004cf8c	ldp	x20, x19, [sp, #0x10]
000000000004cf90	ldp	x22, x21, [sp], #0x30
000000000004cf94	ret
-[KListAsNSArray dealloc]:
000000000004cf98	sub	sp, sp, #0x60
000000000004cf9c	stp	x26, x25, [sp, #0x10]
000000000004cfa0	stp	x24, x23, [sp, #0x20]
000000000004cfa4	stp	x22, x21, [sp, #0x30]
000000000004cfa8	stp	x20, x19, [sp, #0x40]
000000000004cfac	stp	x29, x30, [sp, #0x50]
000000000004cfb0	add	x29, sp, #0x50
000000000004cfb4	mov	x19, x0
000000000004cfb8	nop
000000000004cfbc	ldrsw	x8, _OBJC_IVAR_$_FastaKmmKListAsNSArray.listHolder
000000000004cfc0	add	x24, x0, x8
000000000004cfc4	bl	_Kotlin_initRuntimeIfNeeded
000000000004cfc8	adrp	x21, 46 ; 0x7a000
000000000004cfcc	add	x21, x21, #0x2c0
000000000004cfd0	ldr	x25, [x21]
000000000004cfd4	mov	x0, x21
000000000004cfd8	blr	x25
000000000004cfdc	ldr	x8, [x0]
000000000004cfe0	add	x20, x8, #0x138
000000000004cfe4	ldaxr	w22, [x20]
000000000004cfe8	stlxr	w8, wzr, [x20]
000000000004cfec	cbnz	w8, 0x4cfe4
000000000004cff0	adr	x23, #0x47299
000000000004cff4	nop
000000000004cff8	cmp	w22, #0x1
000000000004cffc	b.ne	0x4d010
000000000004d000	ldarb	w8, [x23]
000000000004d004	tbz	w8, #0x0, 0x4d010
000000000004d008	mov	x0, x20
000000000004d00c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d010	ldr	x8, [x24]
000000000004d014	cbz	x8, 0x4d030
000000000004d018	ldr	x1, [x24, #0x8]
000000000004d01c	mov	x0, x21
000000000004d020	blr	x25
000000000004d024	ldr	x8, [x0]
000000000004d028	add	x0, x8, #0x8
000000000004d02c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004d030	ldaxr	w8, [x20]
000000000004d034	stlxr	w9, w22, [x20]
000000000004d038	cbnz	w9, 0x4d030
000000000004d03c	cbnz	w22, 0x4d058
000000000004d040	cmp	w8, #0x1
000000000004d044	b.ne	0x4d058
000000000004d048	ldarb	w8, [x23]
000000000004d04c	tbz	w8, #0x0, 0x4d058
000000000004d050	mov	x0, x20
000000000004d054	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d058	nop
000000000004d05c	ldr	x8, #0x29cb4 ; Objc class ref: FastaKmmKListAsNSArray
000000000004d060	stp	x19, x8, [sp]
000000000004d064	nop
000000000004d068	ldr	x1, #0x29828 ; Objc selector ref: dealloc
000000000004d06c	mov	x0, sp
000000000004d070	bl	0x55590 ; Objc message: -[[x0 super] dealloc]
000000000004d074	ldp	x29, x30, [sp, #0x50]
000000000004d078	ldp	x20, x19, [sp, #0x40]
000000000004d07c	ldp	x22, x21, [sp, #0x30]
000000000004d080	ldp	x24, x23, [sp, #0x20]
000000000004d084	ldp	x26, x25, [sp, #0x10]
000000000004d088	add	sp, sp, #0x60
000000000004d08c	ret
-[KListAsNSArray toKotlin:]:
000000000004d090	stp	x22, x21, [sp, #-0x30]!
000000000004d094	stp	x20, x19, [sp, #0x10]
000000000004d098	stp	x29, x30, [sp, #0x20]
000000000004d09c	add	x29, sp, #0x20
000000000004d0a0	mov	x19, x2
000000000004d0a4	mov	x20, x0
000000000004d0a8	nop
000000000004d0ac	ldrsw	x21, _OBJC_IVAR_$_FastaKmmKListAsNSArray.listHolder
000000000004d0b0	bl	_Kotlin_initRuntimeIfNeeded
000000000004d0b4	ldr	x0, [x20, x21]
000000000004d0b8	str	x0, [x19]
000000000004d0bc	ldp	x29, x30, [sp, #0x20]
000000000004d0c0	ldp	x20, x19, [sp, #0x10]
000000000004d0c4	ldp	x22, x21, [sp], #0x30
000000000004d0c8	ret
-[KListAsNSArray objectAtIndex:]:
000000000004d0cc	sub	sp, sp, #0x70
000000000004d0d0	stp	x26, x25, [sp, #0x20]
000000000004d0d4	stp	x24, x23, [sp, #0x30]
000000000004d0d8	stp	x22, x21, [sp, #0x40]
000000000004d0dc	stp	x20, x19, [sp, #0x50]
000000000004d0e0	stp	x29, x30, [sp, #0x60]
000000000004d0e4	add	x29, sp, #0x60
000000000004d0e8	mov	x21, x2
000000000004d0ec	mov	x22, x0
000000000004d0f0	bl	_Kotlin_initRuntimeIfNeeded
000000000004d0f4	adrp	x20, 45 ; 0x7a000
000000000004d0f8	add	x20, x20, #0x2c0
000000000004d0fc	ldr	x25, [x20]
000000000004d100	mov	x0, x20
000000000004d104	blr	x25
000000000004d108	ldr	x8, [x0]
000000000004d10c	add	x19, x8, #0x138
000000000004d110	ldaxr	w24, [x19]
000000000004d114	stlxr	w8, wzr, [x19]
000000000004d118	cbnz	w8, 0x4d110
000000000004d11c	cmp	w24, #0x1
000000000004d120	b.ne	0x4d13c
000000000004d124	adr	x8, #0x47165
000000000004d128	nop
000000000004d12c	ldarb	w8, [x8]
000000000004d130	tbz	w8, #0x0, 0x4d13c
000000000004d134	mov	x0, x19
000000000004d138	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d13c	mov	x8, sp
000000000004d140	add	x23, x8, #0x18
000000000004d144	str	xzr, [sp, #0x18]
000000000004d148	mov	x0, x20
000000000004d14c	blr	x25
000000000004d150	ldr	x9, [x0]
000000000004d154	ldr	x10, [x9, #0x110]
000000000004d158	str	x8, [x9, #0x110]
000000000004d15c	mov	x8, #0x400000000
000000000004d160	stp	x10, x8, [sp, #0x8]
000000000004d164	nop
000000000004d168	ldrsw	x26, _OBJC_IVAR_$_FastaKmmKListAsNSArray.listHolder
000000000004d16c	bl	_Kotlin_initRuntimeIfNeeded
000000000004d170	ldr	x0, [x22, x26]
000000000004d174	mov	x1, x21
000000000004d178	mov	x2, x23
000000000004d17c	bl	_Kotlin_List_get
000000000004d180	cbz	x0, 0x4d18c
000000000004d184	bl	_Kotlin_ObjCExport_refToObjC
000000000004d188	b	0x4d1a0
000000000004d18c	nop
000000000004d190	ldr	x0, #0x29b08 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004d194	nop
000000000004d198	ldr	x1, #0x29858 ; Objc selector ref: null
000000000004d19c	bl	0x55584 ; Objc message: +[NSNull null]
000000000004d1a0	mov	x21, x0
000000000004d1a4	mov	x0, x20
000000000004d1a8	blr	x25
000000000004d1ac	ldr	x8, [x0]
000000000004d1b0	ldr	x9, [sp, #0x8]
000000000004d1b4	str	x9, [x8, #0x110]
000000000004d1b8	ldaxr	w8, [x19]
000000000004d1bc	stlxr	w9, w24, [x19]
000000000004d1c0	cbnz	w9, 0x4d1b8
000000000004d1c4	cbnz	w24, 0x4d1e8
000000000004d1c8	cmp	w8, #0x1
000000000004d1cc	b.ne	0x4d1e8
000000000004d1d0	adr	x8, #0x470b9
000000000004d1d4	nop
000000000004d1d8	ldarb	w8, [x8]
000000000004d1dc	tbz	w8, #0x0, 0x4d1e8
000000000004d1e0	mov	x0, x19
000000000004d1e4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d1e8	mov	x0, x21
000000000004d1ec	ldp	x29, x30, [sp, #0x60]
000000000004d1f0	ldp	x20, x19, [sp, #0x50]
000000000004d1f4	ldp	x22, x21, [sp, #0x40]
000000000004d1f8	ldp	x24, x23, [sp, #0x30]
000000000004d1fc	ldp	x26, x25, [sp, #0x20]
000000000004d200	add	sp, sp, #0x70
000000000004d204	ret
000000000004d208	mov	x21, x0
000000000004d20c	mov	x0, x20
000000000004d210	blr	x25
000000000004d214	ldr	x8, [x0]
000000000004d218	ldr	x9, [sp, #0x8]
000000000004d21c	str	x9, [x8, #0x110]
000000000004d220	ldaxr	w8, [x19]
000000000004d224	stlxr	w9, w24, [x19]
000000000004d228	cbnz	w9, 0x4d220
000000000004d22c	cbnz	w24, 0x4d250
000000000004d230	cmp	w8, #0x1
000000000004d234	b.ne	0x4d250
000000000004d238	adr	x8, #0x47051
000000000004d23c	nop
000000000004d240	ldarb	w8, [x8]
000000000004d244	tbz	w8, #0x0, 0x4d250
000000000004d248	mov	x0, x19
000000000004d24c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d250	mov	x0, x21
000000000004d254	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KListAsNSArray count]:
000000000004d258	stp	x22, x21, [sp, #-0x30]!
000000000004d25c	stp	x20, x19, [sp, #0x10]
000000000004d260	stp	x29, x30, [sp, #0x20]
000000000004d264	add	x29, sp, #0x20
000000000004d268	mov	x20, x0
000000000004d26c	bl	_Kotlin_initRuntimeIfNeeded
000000000004d270	adrp	x0, 45 ; 0x7a000
000000000004d274	add	x0, x0, #0x2c0
000000000004d278	ldr	x8, [x0]
000000000004d27c	blr	x8
000000000004d280	ldr	x8, [x0]
000000000004d284	add	x19, x8, #0x138
000000000004d288	ldaxr	w21, [x19]
000000000004d28c	stlxr	w8, wzr, [x19]
000000000004d290	cbnz	w8, 0x4d288
000000000004d294	cmp	w21, #0x1
000000000004d298	b.ne	0x4d2b4
000000000004d29c	adr	x8, #0x46fed
000000000004d2a0	nop
000000000004d2a4	ldarb	w8, [x8]
000000000004d2a8	tbz	w8, #0x0, 0x4d2b4
000000000004d2ac	mov	x0, x19
000000000004d2b0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d2b4	nop
000000000004d2b8	ldrsw	x22, _OBJC_IVAR_$_FastaKmmKListAsNSArray.listHolder
000000000004d2bc	bl	_Kotlin_initRuntimeIfNeeded
000000000004d2c0	ldr	x0, [x20, x22]
000000000004d2c4	bl	_Kotlin_Collection_getSize
000000000004d2c8	mov	x20, x0
000000000004d2cc	ldaxr	w8, [x19]
000000000004d2d0	stlxr	w9, w21, [x19]
000000000004d2d4	cbnz	w9, 0x4d2cc
000000000004d2d8	cbnz	w21, 0x4d2fc
000000000004d2dc	cmp	w8, #0x1
000000000004d2e0	b.ne	0x4d2fc
000000000004d2e4	adr	x8, #0x46fa5
000000000004d2e8	nop
000000000004d2ec	ldarb	w8, [x8]
000000000004d2f0	tbz	w8, #0x0, 0x4d2fc
000000000004d2f4	mov	x0, x19
000000000004d2f8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d2fc	sxtw	x0, w20
000000000004d300	ldp	x29, x30, [sp, #0x20]
000000000004d304	ldp	x20, x19, [sp, #0x10]
000000000004d308	ldp	x22, x21, [sp], #0x30
000000000004d30c	ret
000000000004d310	mov	x20, x0
000000000004d314	ldaxr	w8, [x19]
000000000004d318	stlxr	w9, w21, [x19]
000000000004d31c	cbnz	w9, 0x4d314
000000000004d320	cbnz	w21, 0x4d344
000000000004d324	cmp	w8, #0x1
000000000004d328	b.ne	0x4d344
000000000004d32c	adr	x8, #0x46f5d
000000000004d330	nop
000000000004d334	ldarb	w8, [x8]
000000000004d338	tbz	w8, #0x0, 0x4d344
000000000004d33c	mov	x0, x19
000000000004d340	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d344	mov	x0, x20
000000000004d348	bl	0x55194 ; symbol stub for: __Unwind_Resume
+[KListAsNSArray createRetainedWithKList:]:
000000000004d34c	stp	x22, x21, [sp, #-0x30]!
000000000004d350	stp	x20, x19, [sp, #0x10]
000000000004d354	stp	x29, x30, [sp, #0x20]
000000000004d358	add	x29, sp, #0x20
000000000004d35c	mov	x19, x2
000000000004d360	nop
000000000004d364	ldr	x0, #0x2995c ; Objc class ref: FastaKmmKListAsNSArray
000000000004d368	bl	0x55500 ; symbol stub for: _objc_alloc
000000000004d36c	nop
000000000004d370	ldr	x1, #0x29570 ; Objc selector ref: init
000000000004d374	bl	0x55584 ; Objc message: +[FastaKmmKListAsNSArray init]
000000000004d378	mov	x20, x0
000000000004d37c	nop
000000000004d380	ldrsw	x8, _OBJC_IVAR_$_FastaKmmKListAsNSArray.listHolder
000000000004d384	add	x21, x0, x8
000000000004d388	adrp	x0, 45 ; 0x7a000
000000000004d38c	add	x0, x0, #0x2c0
000000000004d390	ldr	x8, [x0]
000000000004d394	blr	x8
000000000004d398	ldr	x22, [x0]
000000000004d39c	mov	w0, #0x1
000000000004d3a0	mov	w1, #0x28
000000000004d3a4	bl	0x553d4 ; symbol stub for: _calloc
000000000004d3a8	ldr	x8, [x22, #0xa8]!
000000000004d3ac	sub	x9, x22, #0x8
000000000004d3b0	stp	x8, x22, [x0]
000000000004d3b4	str	x0, [x8, #0x8]
000000000004d3b8	str	x0, [x22]
000000000004d3bc	ldr	x8, [x22, #0x10]
000000000004d3c0	add	x8, x8, #0x1
000000000004d3c4	str	x8, [x22, #0x10]
000000000004d3c8	stp	x9, x0, [x0, #0x18]
000000000004d3cc	str	x19, [x0, #0x10]!
000000000004d3d0	stp	x19, x0, [x21]
000000000004d3d4	mov	x0, x20
000000000004d3d8	ldp	x29, x30, [sp, #0x20]
000000000004d3dc	ldp	x20, x19, [sp, #0x10]
000000000004d3e0	ldp	x22, x21, [sp], #0x30
000000000004d3e4	ret
-[KMutableListAsNSMutableArray dealloc]:
000000000004d3e8	sub	sp, sp, #0x60
000000000004d3ec	stp	x26, x25, [sp, #0x10]
000000000004d3f0	stp	x24, x23, [sp, #0x20]
000000000004d3f4	stp	x22, x21, [sp, #0x30]
000000000004d3f8	stp	x20, x19, [sp, #0x40]
000000000004d3fc	stp	x29, x30, [sp, #0x50]
000000000004d400	add	x29, sp, #0x50
000000000004d404	mov	x19, x0
000000000004d408	nop
000000000004d40c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmKMutableListAsNSMutableArray.listHolder
000000000004d410	add	x24, x0, x8
000000000004d414	bl	_Kotlin_initRuntimeIfNeeded
000000000004d418	adrp	x21, 45 ; 0x7a000
000000000004d41c	add	x21, x21, #0x2c0
000000000004d420	ldr	x25, [x21]
000000000004d424	mov	x0, x21
000000000004d428	blr	x25
000000000004d42c	ldr	x8, [x0]
000000000004d430	add	x20, x8, #0x138
000000000004d434	ldaxr	w22, [x20]
000000000004d438	stlxr	w8, wzr, [x20]
000000000004d43c	cbnz	w8, 0x4d434
000000000004d440	adr	x23, #0x46e49
000000000004d444	nop
000000000004d448	cmp	w22, #0x1
000000000004d44c	b.ne	0x4d460
000000000004d450	ldarb	w8, [x23]
000000000004d454	tbz	w8, #0x0, 0x4d460
000000000004d458	mov	x0, x20
000000000004d45c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d460	ldr	x8, [x24]
000000000004d464	cbz	x8, 0x4d480
000000000004d468	ldr	x1, [x24, #0x8]
000000000004d46c	mov	x0, x21
000000000004d470	blr	x25
000000000004d474	ldr	x8, [x0]
000000000004d478	add	x0, x8, #0x8
000000000004d47c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004d480	ldaxr	w8, [x20]
000000000004d484	stlxr	w9, w22, [x20]
000000000004d488	cbnz	w9, 0x4d480
000000000004d48c	cbnz	w22, 0x4d4a8
000000000004d490	cmp	w8, #0x1
000000000004d494	b.ne	0x4d4a8
000000000004d498	ldarb	w8, [x23]
000000000004d49c	tbz	w8, #0x0, 0x4d4a8
000000000004d4a0	mov	x0, x20
000000000004d4a4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d4a8	nop
000000000004d4ac	ldr	x8, #0x2986c ; Objc class ref: FastaKmmKMutableListAsNSMutableArray
000000000004d4b0	stp	x19, x8, [sp]
000000000004d4b4	nop
000000000004d4b8	ldr	x1, #0x293d8 ; Objc selector ref: dealloc
000000000004d4bc	mov	x0, sp
000000000004d4c0	bl	0x55590 ; Objc message: -[[x0 super] dealloc]
000000000004d4c4	ldp	x29, x30, [sp, #0x50]
000000000004d4c8	ldp	x20, x19, [sp, #0x40]
000000000004d4cc	ldp	x22, x21, [sp, #0x30]
000000000004d4d0	ldp	x24, x23, [sp, #0x20]
000000000004d4d4	ldp	x26, x25, [sp, #0x10]
000000000004d4d8	add	sp, sp, #0x60
000000000004d4dc	ret
-[KMutableListAsNSMutableArray toKotlin:]:
000000000004d4e0	stp	x22, x21, [sp, #-0x30]!
000000000004d4e4	stp	x20, x19, [sp, #0x10]
000000000004d4e8	stp	x29, x30, [sp, #0x20]
000000000004d4ec	add	x29, sp, #0x20
000000000004d4f0	mov	x19, x2
000000000004d4f4	mov	x20, x0
000000000004d4f8	nop
000000000004d4fc	ldrsw	x21, _OBJC_IVAR_$_FastaKmmKMutableListAsNSMutableArray.listHolder
000000000004d500	bl	_Kotlin_initRuntimeIfNeeded
000000000004d504	ldr	x0, [x20, x21]
000000000004d508	str	x0, [x19]
000000000004d50c	ldp	x29, x30, [sp, #0x20]
000000000004d510	ldp	x20, x19, [sp, #0x10]
000000000004d514	ldp	x22, x21, [sp], #0x30
000000000004d518	ret
-[KMutableListAsNSMutableArray objectAtIndex:]:
000000000004d51c	sub	sp, sp, #0x70
000000000004d520	stp	x26, x25, [sp, #0x20]
000000000004d524	stp	x24, x23, [sp, #0x30]
000000000004d528	stp	x22, x21, [sp, #0x40]
000000000004d52c	stp	x20, x19, [sp, #0x50]
000000000004d530	stp	x29, x30, [sp, #0x60]
000000000004d534	add	x29, sp, #0x60
000000000004d538	mov	x21, x2
000000000004d53c	mov	x22, x0
000000000004d540	bl	_Kotlin_initRuntimeIfNeeded
000000000004d544	adrp	x20, 45 ; 0x7a000
000000000004d548	add	x20, x20, #0x2c0
000000000004d54c	ldr	x25, [x20]
000000000004d550	mov	x0, x20
000000000004d554	blr	x25
000000000004d558	ldr	x8, [x0]
000000000004d55c	add	x19, x8, #0x138
000000000004d560	ldaxr	w24, [x19]
000000000004d564	stlxr	w8, wzr, [x19]
000000000004d568	cbnz	w8, 0x4d560
000000000004d56c	cmp	w24, #0x1
000000000004d570	b.ne	0x4d58c
000000000004d574	adr	x8, #0x46d15
000000000004d578	nop
000000000004d57c	ldarb	w8, [x8]
000000000004d580	tbz	w8, #0x0, 0x4d58c
000000000004d584	mov	x0, x19
000000000004d588	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d58c	mov	x8, sp
000000000004d590	add	x23, x8, #0x18
000000000004d594	str	xzr, [sp, #0x18]
000000000004d598	mov	x0, x20
000000000004d59c	blr	x25
000000000004d5a0	ldr	x9, [x0]
000000000004d5a4	ldr	x10, [x9, #0x110]
000000000004d5a8	str	x8, [x9, #0x110]
000000000004d5ac	mov	x8, #0x400000000
000000000004d5b0	stp	x10, x8, [sp, #0x8]
000000000004d5b4	nop
000000000004d5b8	ldrsw	x26, _OBJC_IVAR_$_FastaKmmKMutableListAsNSMutableArray.listHolder
000000000004d5bc	bl	_Kotlin_initRuntimeIfNeeded
000000000004d5c0	ldr	x0, [x22, x26]
000000000004d5c4	mov	x1, x21
000000000004d5c8	mov	x2, x23
000000000004d5cc	bl	_Kotlin_List_get
000000000004d5d0	cbz	x0, 0x4d5dc
000000000004d5d4	bl	_Kotlin_ObjCExport_refToObjC
000000000004d5d8	b	0x4d5f0
000000000004d5dc	nop
000000000004d5e0	ldr	x0, #0x296b8 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004d5e4	nop
000000000004d5e8	ldr	x1, #0x29408 ; Objc selector ref: null
000000000004d5ec	bl	0x55584 ; Objc message: +[NSNull null]
000000000004d5f0	mov	x21, x0
000000000004d5f4	mov	x0, x20
000000000004d5f8	blr	x25
000000000004d5fc	ldr	x8, [x0]
000000000004d600	ldr	x9, [sp, #0x8]
000000000004d604	str	x9, [x8, #0x110]
000000000004d608	ldaxr	w8, [x19]
000000000004d60c	stlxr	w9, w24, [x19]
000000000004d610	cbnz	w9, 0x4d608
000000000004d614	cbnz	w24, 0x4d638
000000000004d618	cmp	w8, #0x1
000000000004d61c	b.ne	0x4d638
000000000004d620	adr	x8, #0x46c69
000000000004d624	nop
000000000004d628	ldarb	w8, [x8]
000000000004d62c	tbz	w8, #0x0, 0x4d638
000000000004d630	mov	x0, x19
000000000004d634	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d638	mov	x0, x21
000000000004d63c	ldp	x29, x30, [sp, #0x60]
000000000004d640	ldp	x20, x19, [sp, #0x50]
000000000004d644	ldp	x22, x21, [sp, #0x40]
000000000004d648	ldp	x24, x23, [sp, #0x30]
000000000004d64c	ldp	x26, x25, [sp, #0x20]
000000000004d650	add	sp, sp, #0x70
000000000004d654	ret
000000000004d658	mov	x21, x0
000000000004d65c	mov	x0, x20
000000000004d660	blr	x25
000000000004d664	ldr	x8, [x0]
000000000004d668	ldr	x9, [sp, #0x8]
000000000004d66c	str	x9, [x8, #0x110]
000000000004d670	ldaxr	w8, [x19]
000000000004d674	stlxr	w9, w24, [x19]
000000000004d678	cbnz	w9, 0x4d670
000000000004d67c	cbnz	w24, 0x4d6a0
000000000004d680	cmp	w8, #0x1
000000000004d684	b.ne	0x4d6a0
000000000004d688	adr	x8, #0x46c01
000000000004d68c	nop
000000000004d690	ldarb	w8, [x8]
000000000004d694	tbz	w8, #0x0, 0x4d6a0
000000000004d698	mov	x0, x19
000000000004d69c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d6a0	mov	x0, x21
000000000004d6a4	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray count]:
000000000004d6a8	stp	x22, x21, [sp, #-0x30]!
000000000004d6ac	stp	x20, x19, [sp, #0x10]
000000000004d6b0	stp	x29, x30, [sp, #0x20]
000000000004d6b4	add	x29, sp, #0x20
000000000004d6b8	mov	x20, x0
000000000004d6bc	bl	_Kotlin_initRuntimeIfNeeded
000000000004d6c0	adrp	x0, 45 ; 0x7a000
000000000004d6c4	add	x0, x0, #0x2c0
000000000004d6c8	ldr	x8, [x0]
000000000004d6cc	blr	x8
000000000004d6d0	ldr	x8, [x0]
000000000004d6d4	add	x19, x8, #0x138
000000000004d6d8	ldaxr	w21, [x19]
000000000004d6dc	stlxr	w8, wzr, [x19]
000000000004d6e0	cbnz	w8, 0x4d6d8
000000000004d6e4	cmp	w21, #0x1
000000000004d6e8	b.ne	0x4d704
000000000004d6ec	adr	x8, #0x46b9d
000000000004d6f0	nop
000000000004d6f4	ldarb	w8, [x8]
000000000004d6f8	tbz	w8, #0x0, 0x4d704
000000000004d6fc	mov	x0, x19
000000000004d700	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d704	nop
000000000004d708	ldrsw	x22, _OBJC_IVAR_$_FastaKmmKMutableListAsNSMutableArray.listHolder
000000000004d70c	bl	_Kotlin_initRuntimeIfNeeded
000000000004d710	ldr	x0, [x20, x22]
000000000004d714	bl	_Kotlin_Collection_getSize
000000000004d718	mov	x20, x0
000000000004d71c	ldaxr	w8, [x19]
000000000004d720	stlxr	w9, w21, [x19]
000000000004d724	cbnz	w9, 0x4d71c
000000000004d728	cbnz	w21, 0x4d74c
000000000004d72c	cmp	w8, #0x1
000000000004d730	b.ne	0x4d74c
000000000004d734	adr	x8, #0x46b55
000000000004d738	nop
000000000004d73c	ldarb	w8, [x8]
000000000004d740	tbz	w8, #0x0, 0x4d74c
000000000004d744	mov	x0, x19
000000000004d748	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d74c	sxtw	x0, w20
000000000004d750	ldp	x29, x30, [sp, #0x20]
000000000004d754	ldp	x20, x19, [sp, #0x10]
000000000004d758	ldp	x22, x21, [sp], #0x30
000000000004d75c	ret
000000000004d760	mov	x20, x0
000000000004d764	ldaxr	w8, [x19]
000000000004d768	stlxr	w9, w21, [x19]
000000000004d76c	cbnz	w9, 0x4d764
000000000004d770	cbnz	w21, 0x4d794
000000000004d774	cmp	w8, #0x1
000000000004d778	b.ne	0x4d794
000000000004d77c	adr	x8, #0x46b0d
000000000004d780	nop
000000000004d784	ldarb	w8, [x8]
000000000004d788	tbz	w8, #0x0, 0x4d794
000000000004d78c	mov	x0, x19
000000000004d790	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d794	mov	x0, x20
000000000004d798	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray insertObject:atIndex:]:
000000000004d79c	sub	sp, sp, #0x90
000000000004d7a0	stp	x26, x25, [sp, #0x40]
000000000004d7a4	stp	x24, x23, [sp, #0x50]
000000000004d7a8	stp	x22, x21, [sp, #0x60]
000000000004d7ac	stp	x20, x19, [sp, #0x70]
000000000004d7b0	stp	x29, x30, [sp, #0x80]
000000000004d7b4	add	x29, sp, #0x80
000000000004d7b8	mov	x21, x3
000000000004d7bc	mov	x22, x2
000000000004d7c0	mov	x23, x0
000000000004d7c4	bl	_Kotlin_initRuntimeIfNeeded
000000000004d7c8	adrp	x20, 45 ; 0x7a000
000000000004d7cc	add	x20, x20, #0x2c0
000000000004d7d0	ldr	x25, [x20]
000000000004d7d4	mov	x0, x20
000000000004d7d8	blr	x25
000000000004d7dc	ldr	x8, [x0]
000000000004d7e0	add	x19, x8, #0x138
000000000004d7e4	ldaxr	w24, [x19]
000000000004d7e8	stlxr	w8, wzr, [x19]
000000000004d7ec	cbnz	w8, 0x4d7e4
000000000004d7f0	cmp	w24, #0x1
000000000004d7f4	b.ne	0x4d810
000000000004d7f8	adr	x8, #0x46a91
000000000004d7fc	nop
000000000004d800	ldarb	w8, [x8]
000000000004d804	tbz	w8, #0x0, 0x4d810
000000000004d808	mov	x0, x19
000000000004d80c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d810	add	x26, sp, #0x8
000000000004d814	str	xzr, [sp, #0x20]
000000000004d818	mov	x0, x20
000000000004d81c	blr	x25
000000000004d820	ldr	x8, [x0]
000000000004d824	ldr	x9, [x8, #0x110]
000000000004d828	str	x26, [x8, #0x110]
000000000004d82c	mov	x8, #0x400000000
000000000004d830	stp	x9, x8, [sp, #0x10]
000000000004d834	nop
000000000004d838	ldr	x0, #0x29460 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004d83c	nop
000000000004d840	ldr	x1, #0x291b0 ; Objc selector ref: null
000000000004d844	bl	0x55584 ; Objc message: +[NSNull null]
000000000004d848	cmp	x0, x22
000000000004d84c	ccmp	x22, #0x0, #0x4, ne
000000000004d850	b.ne	0x4d860
000000000004d854	mov	x22, #0x0
000000000004d858	str	xzr, [sp, #0x20]
000000000004d85c	b	0x4d878
000000000004d860	add	x2, x26, #0x18
000000000004d864	nop
000000000004d868	ldr	x1, #0x46c70
000000000004d86c	mov	x0, x22
000000000004d870	bl	0x55584 ; Objc message: -[x0 null]
000000000004d874	mov	x22, x0
000000000004d878	bl	_Kotlin_initRuntimeIfNeeded
000000000004d87c	lsr	x8, x21, #31
000000000004d880	cbnz	x8, 0x4d9e4
000000000004d884	nop
000000000004d888	ldrsw	x8, _OBJC_IVAR_$_FastaKmmKMutableListAsNSMutableArray.listHolder
000000000004d88c	ldr	x23, [x23, x8]
000000000004d890	str	xzr, [sp, #0x28]
000000000004d894	mov	x0, x20
000000000004d898	blr	x25
000000000004d89c	ldr	x8, [x0]
000000000004d8a0	ldr	x9, [x8, #0x110]
000000000004d8a4	add	x10, sp, #0x28
000000000004d8a8	str	x10, [x8, #0x110]
000000000004d8ac	mov	x8, #0x300000000
000000000004d8b0	stp	x9, x8, [sp, #0x30]
000000000004d8b4	adr	x26, #0x469d5
000000000004d8b8	nop
000000000004d8bc	ldarb	w8, [x26]
000000000004d8c0	tbz	w8, #0x0, 0x4d8c8
000000000004d8c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004d8c8	ldr	x8, [x23]
000000000004d8cc	and	x8, x8, #0xfffffffffffffffc
000000000004d8d0	ldr	x8, [x8]
000000000004d8d4	ldr	w9, [x8, #0x3c]
000000000004d8d8	ldr	x8, [x8, #0x40]
000000000004d8dc	tbnz	w9, #0x1f, 0x4d8ec
000000000004d8e0	mov	w10, #0x16
000000000004d8e4	and	x9, x9, x10
000000000004d8e8	b	0x4d970
000000000004d8ec	neg	w10, w9
000000000004d8f0	mvn	w9, w9
000000000004d8f4	cmp	w10, #0x9
000000000004d8f8	b.ge	0x4d930
000000000004d8fc	cmp	w10, #0x2
000000000004d900	b.lt	0x4d964
000000000004d904	mov	x10, #0x0
000000000004d908	mov	x11, x8
000000000004d90c	ldr	w12, [x11]
000000000004d910	cmp	w12, #0x15
000000000004d914	b.gt	0x4d96c
000000000004d918	add	x10, x10, #0x1
000000000004d91c	add	x11, x11, #0x10
000000000004d920	cmp	x9, x10
000000000004d924	b.ne	0x4d90c
000000000004d928	mov	x10, x9
000000000004d92c	b	0x4d96c
000000000004d930	mov	w10, #0x0
000000000004d934	add	w11, w9, w10
000000000004d938	cmp	w11, #0x0
000000000004d93c	cinc	w11, w11, lt
000000000004d940	asr	w11, w11, #1
000000000004d944	sbfiz	x12, x11, #4, #32
000000000004d948	ldr	w12, [x8, x12]
000000000004d94c	cmp	w12, #0x16
000000000004d950	csinc	w10, w10, w11, ge
000000000004d954	csel	w9, w9, w11, lt
000000000004d958	cmp	w10, w9
000000000004d95c	b.lt	0x4d934
000000000004d960	b	0x4d96c
000000000004d964	mov	w10, #0x0
000000000004d968	b	0x4d96c
000000000004d96c	sxtw	x9, w10
000000000004d970	add	x8, x8, x9, lsl #4
000000000004d974	ldr	x8, [x8, #0x8]
000000000004d978	ldr	x8, [x8, #0x8]
000000000004d97c	mov	x0, x23
000000000004d980	mov	x1, x21
000000000004d984	mov	x2, x22
000000000004d988	blr	x8
000000000004d98c	mov	x0, x20
000000000004d990	blr	x25
000000000004d994	ldr	x8, [x0]
000000000004d998	ldr	x9, [sp, #0x10]
000000000004d99c	str	x9, [x8, #0x110]
000000000004d9a0	ldaxr	w8, [x19]
000000000004d9a4	stlxr	w9, w24, [x19]
000000000004d9a8	cbnz	w9, 0x4d9a0
000000000004d9ac	cbnz	w24, 0x4d9c8
000000000004d9b0	cmp	w8, #0x1
000000000004d9b4	b.ne	0x4d9c8
000000000004d9b8	ldarb	w8, [x26]
000000000004d9bc	tbz	w8, #0x0, 0x4d9c8
000000000004d9c0	mov	x0, x19
000000000004d9c4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d9c8	ldp	x29, x30, [sp, #0x80]
000000000004d9cc	ldp	x20, x19, [sp, #0x70]
000000000004d9d0	ldp	x22, x21, [sp, #0x60]
000000000004d9d4	ldp	x24, x23, [sp, #0x50]
000000000004d9d8	ldp	x26, x25, [sp, #0x40]
000000000004d9dc	add	sp, sp, #0x90
000000000004d9e0	ret
000000000004d9e4	bl	_ThrowArrayIndexOutOfBoundsException
000000000004d9e8	brk	#0x1
000000000004d9ec	mov	x21, x0
000000000004d9f0	mov	x0, x20
000000000004d9f4	blr	x25
000000000004d9f8	ldr	x8, [x0]
000000000004d9fc	ldr	x9, [sp, #0x30]
000000000004da00	str	x9, [x8, #0x110]
000000000004da04	b	0x4da18
000000000004da08	mov	x21, x0
000000000004da0c	mov	x0, x20
000000000004da10	blr	x25
000000000004da14	ldr	x8, [x0]
000000000004da18	ldr	x9, [sp, #0x10]
000000000004da1c	str	x9, [x8, #0x110]
000000000004da20	ldaxr	w8, [x19]
000000000004da24	stlxr	w9, w24, [x19]
000000000004da28	cbnz	w9, 0x4da20
000000000004da2c	cbnz	w24, 0x4da50
000000000004da30	cmp	w8, #0x1
000000000004da34	b.ne	0x4da50
000000000004da38	adr	x8, #0x46851
000000000004da3c	nop
000000000004da40	ldarb	w8, [x8]
000000000004da44	tbz	w8, #0x0, 0x4da50
000000000004da48	mov	x0, x19
000000000004da4c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004da50	mov	x0, x21
000000000004da54	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray removeObjectAtIndex:]:
000000000004da58	sub	sp, sp, #0x70
000000000004da5c	stp	x26, x25, [sp, #0x20]
000000000004da60	stp	x24, x23, [sp, #0x30]
000000000004da64	stp	x22, x21, [sp, #0x40]
000000000004da68	stp	x20, x19, [sp, #0x50]
000000000004da6c	stp	x29, x30, [sp, #0x60]
000000000004da70	add	x29, sp, #0x60
000000000004da74	mov	x21, x2
000000000004da78	mov	x22, x0
000000000004da7c	bl	_Kotlin_initRuntimeIfNeeded
000000000004da80	adrp	x20, 45 ; 0x7a000
000000000004da84	add	x20, x20, #0x2c0
000000000004da88	ldr	x26, [x20]
000000000004da8c	mov	x0, x20
000000000004da90	blr	x26
000000000004da94	ldr	x8, [x0]
000000000004da98	add	x19, x8, #0x138
000000000004da9c	ldaxr	w25, [x19]
000000000004daa0	stlxr	w8, wzr, [x19]
000000000004daa4	cbnz	w8, 0x4da9c
000000000004daa8	adr	x24, #0x467e1
000000000004daac	nop
000000000004dab0	cmp	w25, #0x1
000000000004dab4	b.ne	0x4dac8
000000000004dab8	ldarb	w8, [x24]
000000000004dabc	tbz	w8, #0x0, 0x4dac8
000000000004dac0	mov	x0, x19
000000000004dac4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004dac8	bl	_Kotlin_initRuntimeIfNeeded
000000000004dacc	lsr	x8, x21, #31
000000000004dad0	cbnz	x8, 0x4dc34
000000000004dad4	nop
000000000004dad8	ldrsw	x8, _OBJC_IVAR_$_FastaKmmKMutableListAsNSMutableArray.listHolder
000000000004dadc	ldr	x22, [x22, x8]
000000000004dae0	movi.16b	v0, #0x0
000000000004dae4	stp	q0, q0, [sp]
000000000004dae8	mov	x8, sp
000000000004daec	add	x23, x8, #0x18
000000000004daf0	mov	x0, x20
000000000004daf4	blr	x26
000000000004daf8	ldr	x9, [x0]
000000000004dafc	ldr	x10, [x9, #0x110]
000000000004db00	str	x8, [x9, #0x110]
000000000004db04	mov	x8, #0x400000000
000000000004db08	stp	x10, x8, [sp, #0x8]
000000000004db0c	ldarb	w8, [x24]
000000000004db10	tbz	w8, #0x0, 0x4db18
000000000004db14	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004db18	ldr	x8, [x22]
000000000004db1c	and	x8, x8, #0xfffffffffffffffc
000000000004db20	ldr	x8, [x8]
000000000004db24	ldr	w9, [x8, #0x3c]
000000000004db28	ldr	x8, [x8, #0x40]
000000000004db2c	tbnz	w9, #0x1f, 0x4db3c
000000000004db30	mov	w10, #0x16
000000000004db34	and	x9, x9, x10
000000000004db38	b	0x4dbc0
000000000004db3c	neg	w10, w9
000000000004db40	mvn	w9, w9
000000000004db44	cmp	w10, #0x9
000000000004db48	b.ge	0x4db80
000000000004db4c	cmp	w10, #0x2
000000000004db50	b.lt	0x4dbb4
000000000004db54	mov	x10, #0x0
000000000004db58	mov	x11, x8
000000000004db5c	ldr	w12, [x11]
000000000004db60	cmp	w12, #0x15
000000000004db64	b.gt	0x4dbbc
000000000004db68	add	x10, x10, #0x1
000000000004db6c	add	x11, x11, #0x10
000000000004db70	cmp	x9, x10
000000000004db74	b.ne	0x4db5c
000000000004db78	mov	x10, x9
000000000004db7c	b	0x4dbbc
000000000004db80	mov	w10, #0x0
000000000004db84	add	w11, w9, w10
000000000004db88	cmp	w11, #0x0
000000000004db8c	cinc	w11, w11, lt
000000000004db90	asr	w11, w11, #1
000000000004db94	sbfiz	x12, x11, #4, #32
000000000004db98	ldr	w12, [x8, x12]
000000000004db9c	cmp	w12, #0x16
000000000004dba0	csinc	w10, w10, w11, ge
000000000004dba4	csel	w9, w9, w11, lt
000000000004dba8	cmp	w10, w9
000000000004dbac	b.lt	0x4db84
000000000004dbb0	b	0x4dbbc
000000000004dbb4	mov	w10, #0x0
000000000004dbb8	b	0x4dbbc
000000000004dbbc	sxtw	x9, w10
000000000004dbc0	add	x8, x8, x9, lsl #4
000000000004dbc4	ldr	x8, [x8, #0x8]
000000000004dbc8	ldr	x8, [x8, #0x48]
000000000004dbcc	mov	x0, x22
000000000004dbd0	mov	x1, x21
000000000004dbd4	mov	x2, x23
000000000004dbd8	blr	x8
000000000004dbdc	mov	x0, x20
000000000004dbe0	blr	x26
000000000004dbe4	ldr	x8, [x0]
000000000004dbe8	ldr	x9, [sp, #0x8]
000000000004dbec	str	x9, [x8, #0x110]
000000000004dbf0	ldaxr	w8, [x19]
000000000004dbf4	stlxr	w9, w25, [x19]
000000000004dbf8	cbnz	w9, 0x4dbf0
000000000004dbfc	cbnz	w25, 0x4dc18
000000000004dc00	cmp	w8, #0x1
000000000004dc04	b.ne	0x4dc18
000000000004dc08	ldarb	w8, [x24]
000000000004dc0c	tbz	w8, #0x0, 0x4dc18
000000000004dc10	mov	x0, x19
000000000004dc14	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004dc18	ldp	x29, x30, [sp, #0x60]
000000000004dc1c	ldp	x20, x19, [sp, #0x50]
000000000004dc20	ldp	x22, x21, [sp, #0x40]
000000000004dc24	ldp	x24, x23, [sp, #0x30]
000000000004dc28	ldp	x26, x25, [sp, #0x20]
000000000004dc2c	add	sp, sp, #0x70
000000000004dc30	ret
000000000004dc34	bl	_ThrowArrayIndexOutOfBoundsException
000000000004dc38	brk	#0x1
000000000004dc3c	mov	x21, x0
000000000004dc40	mov	x0, x20
000000000004dc44	blr	x26
000000000004dc48	ldr	x8, [x0]
000000000004dc4c	ldr	x9, [sp, #0x8]
000000000004dc50	str	x9, [x8, #0x110]
000000000004dc54	b	0x4dc5c
000000000004dc58	mov	x21, x0
000000000004dc5c	ldaxr	w8, [x19]
000000000004dc60	stlxr	w9, w25, [x19]
000000000004dc64	cbnz	w9, 0x4dc5c
000000000004dc68	cbnz	w25, 0x4dc84
000000000004dc6c	cmp	w8, #0x1
000000000004dc70	b.ne	0x4dc84
000000000004dc74	ldarb	w8, [x24]
000000000004dc78	tbz	w8, #0x0, 0x4dc84
000000000004dc7c	mov	x0, x19
000000000004dc80	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004dc84	mov	x0, x21
000000000004dc88	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray addObject:]:
000000000004dc8c	sub	sp, sp, #0x70
000000000004dc90	stp	x26, x25, [sp, #0x20]
000000000004dc94	stp	x24, x23, [sp, #0x30]
000000000004dc98	stp	x22, x21, [sp, #0x40]
000000000004dc9c	stp	x20, x19, [sp, #0x50]
000000000004dca0	stp	x29, x30, [sp, #0x60]
000000000004dca4	add	x29, sp, #0x60
000000000004dca8	mov	x21, x2
000000000004dcac	mov	x22, x0
000000000004dcb0	bl	_Kotlin_initRuntimeIfNeeded
000000000004dcb4	adrp	x20, 45 ; 0x7a000
000000000004dcb8	add	x20, x20, #0x2c0
000000000004dcbc	ldr	x24, [x20]
000000000004dcc0	mov	x0, x20
000000000004dcc4	blr	x24
000000000004dcc8	ldr	x8, [x0]
000000000004dccc	add	x19, x8, #0x138
000000000004dcd0	ldaxr	w23, [x19]
000000000004dcd4	stlxr	w8, wzr, [x19]
000000000004dcd8	cbnz	w8, 0x4dcd0
000000000004dcdc	cmp	w23, #0x1
000000000004dce0	b.ne	0x4dcfc
000000000004dce4	adr	x8, #0x465a5
000000000004dce8	nop
000000000004dcec	ldarb	w8, [x8]
000000000004dcf0	tbz	w8, #0x0, 0x4dcfc
000000000004dcf4	mov	x0, x19
000000000004dcf8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004dcfc	mov	x25, sp
000000000004dd00	str	xzr, [sp, #0x18]
000000000004dd04	mov	x0, x20
000000000004dd08	blr	x24
000000000004dd0c	ldr	x8, [x0]
000000000004dd10	ldr	x9, [x8, #0x110]
000000000004dd14	str	x25, [x8, #0x110]
000000000004dd18	mov	x8, #0x400000000
000000000004dd1c	stp	x9, x8, [sp, #0x8]
000000000004dd20	nop
000000000004dd24	ldrsw	x26, _OBJC_IVAR_$_FastaKmmKMutableListAsNSMutableArray.listHolder
000000000004dd28	bl	_Kotlin_initRuntimeIfNeeded
000000000004dd2c	ldr	x22, [x22, x26]
000000000004dd30	nop
000000000004dd34	ldr	x0, #0x28f64 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004dd38	nop
000000000004dd3c	ldr	x1, #0x28cb4 ; Objc selector ref: null
000000000004dd40	bl	0x55584 ; Objc message: +[NSNull null]
000000000004dd44	cmp	x0, x21
000000000004dd48	b.eq	0x4dd6c
000000000004dd4c	cbz	x21, 0x4dd6c
000000000004dd50	add	x2, x25, #0x18
000000000004dd54	nop
000000000004dd58	ldr	x1, #0x46780
000000000004dd5c	mov	x0, x21
000000000004dd60	bl	0x55584 ; Objc message: -[x0 null]
000000000004dd64	mov	x1, x0
000000000004dd68	b	0x4dd74
000000000004dd6c	mov	x1, #0x0
000000000004dd70	str	xzr, [sp, #0x18]
000000000004dd74	mov	x0, x22
000000000004dd78	bl	_Kotlin_MutableCollection_addObject
000000000004dd7c	mov	x0, x20
000000000004dd80	blr	x24
000000000004dd84	ldr	x8, [x0]
000000000004dd88	ldr	x9, [sp, #0x8]
000000000004dd8c	str	x9, [x8, #0x110]
000000000004dd90	ldaxr	w8, [x19]
000000000004dd94	stlxr	w9, w23, [x19]
000000000004dd98	cbnz	w9, 0x4dd90
000000000004dd9c	cbnz	w23, 0x4ddc0
000000000004dda0	cmp	w8, #0x1
000000000004dda4	b.ne	0x4ddc0
000000000004dda8	adr	x8, #0x464e1
000000000004ddac	nop
000000000004ddb0	ldarb	w8, [x8]
000000000004ddb4	tbz	w8, #0x0, 0x4ddc0
000000000004ddb8	mov	x0, x19
000000000004ddbc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ddc0	ldp	x29, x30, [sp, #0x60]
000000000004ddc4	ldp	x20, x19, [sp, #0x50]
000000000004ddc8	ldp	x22, x21, [sp, #0x40]
000000000004ddcc	ldp	x24, x23, [sp, #0x30]
000000000004ddd0	ldp	x26, x25, [sp, #0x20]
000000000004ddd4	add	sp, sp, #0x70
000000000004ddd8	ret
000000000004dddc	mov	x21, x0
000000000004dde0	mov	x0, x20
000000000004dde4	blr	x24
000000000004dde8	ldr	x8, [x0]
000000000004ddec	ldr	x9, [sp, #0x8]
000000000004ddf0	str	x9, [x8, #0x110]
000000000004ddf4	ldaxr	w8, [x19]
000000000004ddf8	stlxr	w9, w23, [x19]
000000000004ddfc	cbnz	w9, 0x4ddf4
000000000004de00	cbnz	w23, 0x4de24
000000000004de04	cmp	w8, #0x1
000000000004de08	b.ne	0x4de24
000000000004de0c	adr	x8, #0x4647d
000000000004de10	nop
000000000004de14	ldarb	w8, [x8]
000000000004de18	tbz	w8, #0x0, 0x4de24
000000000004de1c	mov	x0, x19
000000000004de20	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004de24	mov	x0, x21
000000000004de28	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray removeLastObject]:
000000000004de2c	sub	sp, sp, #0x70
000000000004de30	stp	x26, x25, [sp, #0x20]
000000000004de34	stp	x24, x23, [sp, #0x30]
000000000004de38	stp	x22, x21, [sp, #0x40]
000000000004de3c	stp	x20, x19, [sp, #0x50]
000000000004de40	stp	x29, x30, [sp, #0x60]
000000000004de44	add	x29, sp, #0x60
000000000004de48	mov	x21, x0
000000000004de4c	bl	_Kotlin_initRuntimeIfNeeded
000000000004de50	adrp	x20, 45 ; 0x7a000
000000000004de54	add	x20, x20, #0x2c0
000000000004de58	ldr	x24, [x20]
000000000004de5c	mov	x0, x20
000000000004de60	blr	x24
000000000004de64	ldr	x8, [x0]
000000000004de68	add	x19, x8, #0x138
000000000004de6c	ldaxr	w23, [x19]
000000000004de70	stlxr	w8, wzr, [x19]
000000000004de74	cbnz	w8, 0x4de6c
000000000004de78	adr	x22, #0x46411
000000000004de7c	nop
000000000004de80	cmp	w23, #0x1
000000000004de84	b.ne	0x4de98
000000000004de88	ldarb	w8, [x22]
000000000004de8c	tbz	w8, #0x0, 0x4de98
000000000004de90	mov	x0, x19
000000000004de94	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004de98	nop
000000000004de9c	ldrsw	x25, _OBJC_IVAR_$_FastaKmmKMutableListAsNSMutableArray.listHolder
000000000004dea0	bl	_Kotlin_initRuntimeIfNeeded
000000000004dea4	ldr	x21, [x21, x25]
000000000004dea8	movi.16b	v0, #0x0
000000000004deac	stp	q0, q0, [sp]
000000000004deb0	mov	x25, sp
000000000004deb4	mov	x0, x20
000000000004deb8	blr	x24
000000000004debc	ldr	x8, [x0]
000000000004dec0	ldr	x9, [x8, #0x110]
000000000004dec4	str	x25, [x8, #0x110]
000000000004dec8	mov	x8, #0x400000000
000000000004decc	stp	x9, x8, [sp, #0x8]
000000000004ded0	ldarb	w8, [x22]
000000000004ded4	tbz	w8, #0x0, 0x4dedc
000000000004ded8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004dedc	mov	x0, x21
000000000004dee0	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0§<kotlin.Any?>}kotlin.Int"
000000000004dee4	mov	x1, x0
000000000004dee8	add	x2, x25, #0x18
000000000004deec	ldr	x8, [x21]
000000000004def0	and	x8, x8, #0xfffffffffffffffc
000000000004def4	ldr	x8, [x8]
000000000004def8	ldr	w9, [x8, #0x3c]
000000000004defc	ldr	x8, [x8, #0x40]
000000000004df00	tbnz	w9, #0x1f, 0x4df10
000000000004df04	mov	w10, #0x16
000000000004df08	and	x9, x9, x10
000000000004df0c	b	0x4df94
000000000004df10	neg	w10, w9
000000000004df14	mvn	w9, w9
000000000004df18	cmp	w10, #0x9
000000000004df1c	b.ge	0x4df54
000000000004df20	cmp	w10, #0x2
000000000004df24	b.lt	0x4df88
000000000004df28	mov	x10, #0x0
000000000004df2c	mov	x11, x8
000000000004df30	ldr	w12, [x11]
000000000004df34	cmp	w12, #0x15
000000000004df38	b.gt	0x4df90
000000000004df3c	add	x10, x10, #0x1
000000000004df40	add	x11, x11, #0x10
000000000004df44	cmp	x9, x10
000000000004df48	b.ne	0x4df30
000000000004df4c	mov	x10, x9
000000000004df50	b	0x4df90
000000000004df54	mov	w10, #0x0
000000000004df58	add	w11, w9, w10
000000000004df5c	cmp	w11, #0x0
000000000004df60	cinc	w11, w11, lt
000000000004df64	asr	w11, w11, #1
000000000004df68	sbfiz	x12, x11, #4, #32
000000000004df6c	ldr	w12, [x8, x12]
000000000004df70	cmp	w12, #0x16
000000000004df74	csinc	w10, w10, w11, ge
000000000004df78	csel	w9, w9, w11, lt
000000000004df7c	cmp	w10, w9
000000000004df80	b.lt	0x4df58
000000000004df84	b	0x4df90
000000000004df88	mov	w10, #0x0
000000000004df8c	b	0x4df90
000000000004df90	sxtw	x9, w10
000000000004df94	add	x8, x8, x9, lsl #4
000000000004df98	ldr	x8, [x8, #0x8]
000000000004df9c	ldr	x8, [x8, #0x48]
000000000004dfa0	mov	x0, x21
000000000004dfa4	blr	x8
000000000004dfa8	mov	x0, x20
000000000004dfac	blr	x24
000000000004dfb0	ldr	x8, [x0]
000000000004dfb4	ldr	x9, [sp, #0x8]
000000000004dfb8	str	x9, [x8, #0x110]
000000000004dfbc	ldaxr	w8, [x19]
000000000004dfc0	stlxr	w9, w23, [x19]
000000000004dfc4	cbnz	w9, 0x4dfbc
000000000004dfc8	cbnz	w23, 0x4dfe4
000000000004dfcc	cmp	w8, #0x1
000000000004dfd0	b.ne	0x4dfe4
000000000004dfd4	ldarb	w8, [x22]
000000000004dfd8	tbz	w8, #0x0, 0x4dfe4
000000000004dfdc	mov	x0, x19
000000000004dfe0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004dfe4	ldp	x29, x30, [sp, #0x60]
000000000004dfe8	ldp	x20, x19, [sp, #0x50]
000000000004dfec	ldp	x22, x21, [sp, #0x40]
000000000004dff0	ldp	x24, x23, [sp, #0x30]
000000000004dff4	ldp	x26, x25, [sp, #0x20]
000000000004dff8	add	sp, sp, #0x70
000000000004dffc	ret
000000000004e000	mov	x21, x0
000000000004e004	mov	x0, x20
000000000004e008	blr	x24
000000000004e00c	ldr	x8, [x0]
000000000004e010	ldr	x9, [sp, #0x8]
000000000004e014	str	x9, [x8, #0x110]
000000000004e018	ldaxr	w8, [x19]
000000000004e01c	stlxr	w9, w23, [x19]
000000000004e020	cbnz	w9, 0x4e018
000000000004e024	cbnz	w23, 0x4e040
000000000004e028	cmp	w8, #0x1
000000000004e02c	b.ne	0x4e040
000000000004e030	ldarb	w8, [x22]
000000000004e034	tbz	w8, #0x0, 0x4e040
000000000004e038	mov	x0, x19
000000000004e03c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e040	mov	x0, x21
000000000004e044	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray replaceObjectAtIndex:withObject:]:
000000000004e048	sub	sp, sp, #0xa0
000000000004e04c	stp	x28, x27, [sp, #0x40]
000000000004e050	stp	x26, x25, [sp, #0x50]
000000000004e054	stp	x24, x23, [sp, #0x60]
000000000004e058	stp	x22, x21, [sp, #0x70]
000000000004e05c	stp	x20, x19, [sp, #0x80]
000000000004e060	stp	x29, x30, [sp, #0x90]
000000000004e064	add	x29, sp, #0x90
000000000004e068	mov	x22, x3
000000000004e06c	mov	x21, x2
000000000004e070	mov	x23, x0
000000000004e074	bl	_Kotlin_initRuntimeIfNeeded
000000000004e078	adrp	x20, 44 ; 0x7a000
000000000004e07c	add	x20, x20, #0x2c0
000000000004e080	ldr	x26, [x20]
000000000004e084	mov	x0, x20
000000000004e088	blr	x26
000000000004e08c	ldr	x8, [x0]
000000000004e090	add	x19, x8, #0x138
000000000004e094	ldaxr	w25, [x19]
000000000004e098	stlxr	w8, wzr, [x19]
000000000004e09c	cbnz	w8, 0x4e094
000000000004e0a0	cmp	w25, #0x1
000000000004e0a4	b.ne	0x4e0c0
000000000004e0a8	adr	x8, #0x461e1
000000000004e0ac	nop
000000000004e0b0	ldarb	w8, [x8]
000000000004e0b4	tbz	w8, #0x0, 0x4e0c0
000000000004e0b8	mov	x0, x19
000000000004e0bc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e0c0	mov	x24, sp
000000000004e0c4	str	xzr, [sp, #0x18]
000000000004e0c8	mov	x0, x20
000000000004e0cc	blr	x26
000000000004e0d0	ldr	x8, [x0]
000000000004e0d4	ldr	x9, [x8, #0x110]
000000000004e0d8	str	x24, [x8, #0x110]
000000000004e0dc	mov	x8, #0x400000000
000000000004e0e0	stp	x9, x8, [sp, #0x8]
000000000004e0e4	nop
000000000004e0e8	ldr	x0, #0x28bb0 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004e0ec	nop
000000000004e0f0	ldr	x1, #0x28900 ; Objc selector ref: null
000000000004e0f4	bl	0x55584 ; Objc message: +[NSNull null]
000000000004e0f8	cmp	x0, x22
000000000004e0fc	ccmp	x22, #0x0, #0x4, ne
000000000004e100	b.ne	0x4e110
000000000004e104	mov	x22, #0x0
000000000004e108	str	xzr, [sp, #0x18]
000000000004e10c	b	0x4e128
000000000004e110	add	x2, x24, #0x18
000000000004e114	nop
000000000004e118	ldr	x1, #0x463c0
000000000004e11c	mov	x0, x22
000000000004e120	bl	0x55584 ; Objc message: -[x0 null]
000000000004e124	mov	x22, x0
000000000004e128	bl	_Kotlin_initRuntimeIfNeeded
000000000004e12c	lsr	x8, x21, #31
000000000004e130	cbnz	x8, 0x4e2a4
000000000004e134	nop
000000000004e138	ldrsw	x8, _OBJC_IVAR_$_FastaKmmKMutableListAsNSMutableArray.listHolder
000000000004e13c	ldr	x23, [x23, x8]
000000000004e140	movi.16b	v0, #0x0
000000000004e144	stp	q0, q0, [sp, #0x20]
000000000004e148	add	x8, sp, #0x20
000000000004e14c	add	x24, x8, #0x18
000000000004e150	mov	x0, x20
000000000004e154	blr	x26
000000000004e158	ldr	x9, [x0]
000000000004e15c	ldr	x10, [x9, #0x110]
000000000004e160	str	x8, [x9, #0x110]
000000000004e164	mov	x8, #0x400000000
000000000004e168	stp	x10, x8, [sp, #0x28]
000000000004e16c	adr	x27, #0x4611d
000000000004e170	nop
000000000004e174	ldarb	w8, [x27]
000000000004e178	tbz	w8, #0x0, 0x4e180
000000000004e17c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004e180	ldr	x8, [x23]
000000000004e184	and	x8, x8, #0xfffffffffffffffc
000000000004e188	ldr	x8, [x8]
000000000004e18c	ldr	w9, [x8, #0x3c]
000000000004e190	ldr	x8, [x8, #0x40]
000000000004e194	tbnz	w9, #0x1f, 0x4e1a4
000000000004e198	mov	w10, #0x16
000000000004e19c	and	x9, x9, x10
000000000004e1a0	b	0x4e228
000000000004e1a4	neg	w10, w9
000000000004e1a8	mvn	w9, w9
000000000004e1ac	cmp	w10, #0x9
000000000004e1b0	b.ge	0x4e1e8
000000000004e1b4	cmp	w10, #0x2
000000000004e1b8	b.lt	0x4e21c
000000000004e1bc	mov	x10, #0x0
000000000004e1c0	mov	x11, x8
000000000004e1c4	ldr	w12, [x11]
000000000004e1c8	cmp	w12, #0x15
000000000004e1cc	b.gt	0x4e224
000000000004e1d0	add	x10, x10, #0x1
000000000004e1d4	add	x11, x11, #0x10
000000000004e1d8	cmp	x9, x10
000000000004e1dc	b.ne	0x4e1c4
000000000004e1e0	mov	x10, x9
000000000004e1e4	b	0x4e224
000000000004e1e8	mov	w10, #0x0
000000000004e1ec	add	w11, w9, w10
000000000004e1f0	cmp	w11, #0x0
000000000004e1f4	cinc	w11, w11, lt
000000000004e1f8	asr	w11, w11, #1
000000000004e1fc	sbfiz	x12, x11, #4, #32
000000000004e200	ldr	w12, [x8, x12]
000000000004e204	cmp	w12, #0x16
000000000004e208	csinc	w10, w10, w11, ge
000000000004e20c	csel	w9, w9, w11, lt
000000000004e210	cmp	w10, w9
000000000004e214	b.lt	0x4e1ec
000000000004e218	b	0x4e224
000000000004e21c	mov	w10, #0x0
000000000004e220	b	0x4e224
000000000004e224	sxtw	x9, w10
000000000004e228	add	x8, x8, x9, lsl #4
000000000004e22c	ldr	x8, [x8, #0x8]
000000000004e230	ldr	x8, [x8, #0x58]
000000000004e234	mov	x0, x23
000000000004e238	mov	x1, x21
000000000004e23c	mov	x2, x22
000000000004e240	mov	x3, x24
000000000004e244	blr	x8
000000000004e248	mov	x0, x20
000000000004e24c	blr	x26
000000000004e250	ldr	x8, [x0]
000000000004e254	ldr	x9, [sp, #0x8]
000000000004e258	str	x9, [x8, #0x110]
000000000004e25c	ldaxr	w8, [x19]
000000000004e260	stlxr	w9, w25, [x19]
000000000004e264	cbnz	w9, 0x4e25c
000000000004e268	cbnz	w25, 0x4e284
000000000004e26c	cmp	w8, #0x1
000000000004e270	b.ne	0x4e284
000000000004e274	ldarb	w8, [x27]
000000000004e278	tbz	w8, #0x0, 0x4e284
000000000004e27c	mov	x0, x19
000000000004e280	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e284	ldp	x29, x30, [sp, #0x90]
000000000004e288	ldp	x20, x19, [sp, #0x80]
000000000004e28c	ldp	x22, x21, [sp, #0x70]
000000000004e290	ldp	x24, x23, [sp, #0x60]
000000000004e294	ldp	x26, x25, [sp, #0x50]
000000000004e298	ldp	x28, x27, [sp, #0x40]
000000000004e29c	add	sp, sp, #0xa0
000000000004e2a0	ret
000000000004e2a4	bl	_ThrowArrayIndexOutOfBoundsException
000000000004e2a8	brk	#0x1
000000000004e2ac	mov	x21, x0
000000000004e2b0	mov	x0, x20
000000000004e2b4	blr	x26
000000000004e2b8	ldr	x8, [x0]
000000000004e2bc	ldr	x9, [sp, #0x28]
000000000004e2c0	str	x9, [x8, #0x110]
000000000004e2c4	b	0x4e2d8
000000000004e2c8	mov	x21, x0
000000000004e2cc	mov	x0, x20
000000000004e2d0	blr	x26
000000000004e2d4	ldr	x8, [x0]
000000000004e2d8	ldr	x9, [sp, #0x8]
000000000004e2dc	str	x9, [x8, #0x110]
000000000004e2e0	ldaxr	w8, [x19]
000000000004e2e4	stlxr	w9, w25, [x19]
000000000004e2e8	cbnz	w9, 0x4e2e0
000000000004e2ec	cbnz	w25, 0x4e310
000000000004e2f0	cmp	w8, #0x1
000000000004e2f4	b.ne	0x4e310
000000000004e2f8	adr	x8, #0x45f91
000000000004e2fc	nop
000000000004e300	ldarb	w8, [x8]
000000000004e304	tbz	w8, #0x0, 0x4e310
000000000004e308	mov	x0, x19
000000000004e30c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e310	mov	x0, x21
000000000004e314	bl	0x55194 ; symbol stub for: __Unwind_Resume
+[KMutableListAsNSMutableArray createRetainedWithKList:]:
000000000004e318	stp	x22, x21, [sp, #-0x30]!
000000000004e31c	stp	x20, x19, [sp, #0x10]
000000000004e320	stp	x29, x30, [sp, #0x20]
000000000004e324	add	x29, sp, #0x20
000000000004e328	mov	x19, x2
000000000004e32c	nop
000000000004e330	ldr	x0, #0x28998 ; Objc class ref: FastaKmmKMutableListAsNSMutableArray
000000000004e334	bl	0x55500 ; symbol stub for: _objc_alloc
000000000004e338	nop
000000000004e33c	ldr	x1, #0x285a4 ; Objc selector ref: init
000000000004e340	bl	0x55584 ; Objc message: +[FastaKmmKMutableListAsNSMutableArray init]
000000000004e344	mov	x20, x0
000000000004e348	nop
000000000004e34c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmKMutableListAsNSMutableArray.listHolder
000000000004e350	add	x21, x0, x8
000000000004e354	adrp	x0, 44 ; 0x7a000
000000000004e358	add	x0, x0, #0x2c0
000000000004e35c	ldr	x8, [x0]
000000000004e360	blr	x8
000000000004e364	ldr	x22, [x0]
000000000004e368	mov	w0, #0x1
000000000004e36c	mov	w1, #0x28
000000000004e370	bl	0x553d4 ; symbol stub for: _calloc
000000000004e374	ldr	x8, [x22, #0xa8]!
000000000004e378	sub	x9, x22, #0x8
000000000004e37c	stp	x8, x22, [x0]
000000000004e380	str	x0, [x8, #0x8]
000000000004e384	str	x0, [x22]
000000000004e388	ldr	x8, [x22, #0x10]
000000000004e38c	add	x8, x8, #0x1
000000000004e390	str	x8, [x22, #0x10]
000000000004e394	stp	x9, x0, [x0, #0x18]
000000000004e398	str	x19, [x0, #0x10]!
000000000004e39c	stp	x19, x0, [x21]
000000000004e3a0	mov	x0, x20
000000000004e3a4	ldp	x29, x30, [sp, #0x20]
000000000004e3a8	ldp	x20, x19, [sp, #0x10]
000000000004e3ac	ldp	x22, x21, [sp], #0x30
000000000004e3b0	ret
-[KSetAsNSSet dealloc]:
000000000004e3b4	sub	sp, sp, #0x60
000000000004e3b8	stp	x26, x25, [sp, #0x10]
000000000004e3bc	stp	x24, x23, [sp, #0x20]
000000000004e3c0	stp	x22, x21, [sp, #0x30]
000000000004e3c4	stp	x20, x19, [sp, #0x40]
000000000004e3c8	stp	x29, x30, [sp, #0x50]
000000000004e3cc	add	x29, sp, #0x50
000000000004e3d0	mov	x19, x0
000000000004e3d4	nop
000000000004e3d8	ldrsw	x8, _OBJC_IVAR_$_FastaKmmKSetAsNSSet.setHolder
000000000004e3dc	add	x24, x0, x8
000000000004e3e0	bl	_Kotlin_initRuntimeIfNeeded
000000000004e3e4	adrp	x21, 44 ; 0x7a000
000000000004e3e8	add	x21, x21, #0x2c0
000000000004e3ec	ldr	x25, [x21]
000000000004e3f0	mov	x0, x21
000000000004e3f4	blr	x25
000000000004e3f8	ldr	x8, [x0]
000000000004e3fc	add	x20, x8, #0x138
000000000004e400	ldaxr	w22, [x20]
000000000004e404	stlxr	w8, wzr, [x20]
000000000004e408	cbnz	w8, 0x4e400
000000000004e40c	adr	x23, #0x45e7d
000000000004e410	nop
000000000004e414	cmp	w22, #0x1
000000000004e418	b.ne	0x4e42c
000000000004e41c	ldarb	w8, [x23]
000000000004e420	tbz	w8, #0x0, 0x4e42c
000000000004e424	mov	x0, x20
000000000004e428	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e42c	ldr	x8, [x24]
000000000004e430	cbz	x8, 0x4e44c
000000000004e434	ldr	x1, [x24, #0x8]
000000000004e438	mov	x0, x21
000000000004e43c	blr	x25
000000000004e440	ldr	x8, [x0]
000000000004e444	add	x0, x8, #0x8
000000000004e448	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004e44c	ldaxr	w8, [x20]
000000000004e450	stlxr	w9, w22, [x20]
000000000004e454	cbnz	w9, 0x4e44c
000000000004e458	cbnz	w22, 0x4e474
000000000004e45c	cmp	w8, #0x1
000000000004e460	b.ne	0x4e474
000000000004e464	ldarb	w8, [x23]
000000000004e468	tbz	w8, #0x0, 0x4e474
000000000004e46c	mov	x0, x20
000000000004e470	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e474	nop
000000000004e478	ldr	x8, #0x288a8 ; Objc class ref: FastaKmmKSetAsNSSet
000000000004e47c	stp	x19, x8, [sp]
000000000004e480	nop
000000000004e484	ldr	x1, #0x2840c ; Objc selector ref: dealloc
000000000004e488	mov	x0, sp
000000000004e48c	bl	0x55590 ; Objc message: -[[x0 super] dealloc]
000000000004e490	ldp	x29, x30, [sp, #0x50]
000000000004e494	ldp	x20, x19, [sp, #0x40]
000000000004e498	ldp	x22, x21, [sp, #0x30]
000000000004e49c	ldp	x24, x23, [sp, #0x20]
000000000004e4a0	ldp	x26, x25, [sp, #0x10]
000000000004e4a4	add	sp, sp, #0x60
000000000004e4a8	ret
-[KSetAsNSSet toKotlin:]:
000000000004e4ac	stp	x22, x21, [sp, #-0x30]!
000000000004e4b0	stp	x20, x19, [sp, #0x10]
000000000004e4b4	stp	x29, x30, [sp, #0x20]
000000000004e4b8	add	x29, sp, #0x20
000000000004e4bc	mov	x19, x2
000000000004e4c0	mov	x20, x0
000000000004e4c4	nop
000000000004e4c8	ldrsw	x21, _OBJC_IVAR_$_FastaKmmKSetAsNSSet.setHolder
000000000004e4cc	bl	_Kotlin_initRuntimeIfNeeded
000000000004e4d0	ldr	x0, [x20, x21]
000000000004e4d4	str	x0, [x19]
000000000004e4d8	ldp	x29, x30, [sp, #0x20]
000000000004e4dc	ldp	x20, x19, [sp, #0x10]
000000000004e4e0	ldp	x22, x21, [sp], #0x30
000000000004e4e4	ret
-[KSetAsNSSet count]:
000000000004e4e8	stp	x22, x21, [sp, #-0x30]!
000000000004e4ec	stp	x20, x19, [sp, #0x10]
000000000004e4f0	stp	x29, x30, [sp, #0x20]
000000000004e4f4	add	x29, sp, #0x20
000000000004e4f8	mov	x20, x0
000000000004e4fc	bl	_Kotlin_initRuntimeIfNeeded
000000000004e500	adrp	x0, 44 ; 0x7a000
000000000004e504	add	x0, x0, #0x2c0
000000000004e508	ldr	x8, [x0]
000000000004e50c	blr	x8
000000000004e510	ldr	x8, [x0]
000000000004e514	add	x19, x8, #0x138
000000000004e518	ldaxr	w21, [x19]
000000000004e51c	stlxr	w8, wzr, [x19]
000000000004e520	cbnz	w8, 0x4e518
000000000004e524	cmp	w21, #0x1
000000000004e528	b.ne	0x4e544
000000000004e52c	adr	x8, #0x45d5d
000000000004e530	nop
000000000004e534	ldarb	w8, [x8]
000000000004e538	tbz	w8, #0x0, 0x4e544
000000000004e53c	mov	x0, x19
000000000004e540	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e544	nop
000000000004e548	ldrsw	x22, _OBJC_IVAR_$_FastaKmmKSetAsNSSet.setHolder
000000000004e54c	bl	_Kotlin_initRuntimeIfNeeded
000000000004e550	ldr	x0, [x20, x22]
000000000004e554	bl	_Kotlin_Collection_getSize
000000000004e558	mov	x20, x0
000000000004e55c	ldaxr	w8, [x19]
000000000004e560	stlxr	w9, w21, [x19]
000000000004e564	cbnz	w9, 0x4e55c
000000000004e568	cbnz	w21, 0x4e58c
000000000004e56c	cmp	w8, #0x1
000000000004e570	b.ne	0x4e58c
000000000004e574	adr	x8, #0x45d15
000000000004e578	nop
000000000004e57c	ldarb	w8, [x8]
000000000004e580	tbz	w8, #0x0, 0x4e58c
000000000004e584	mov	x0, x19
000000000004e588	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e58c	sxtw	x0, w20
000000000004e590	ldp	x29, x30, [sp, #0x20]
000000000004e594	ldp	x20, x19, [sp, #0x10]
000000000004e598	ldp	x22, x21, [sp], #0x30
000000000004e59c	ret
000000000004e5a0	mov	x20, x0
000000000004e5a4	ldaxr	w8, [x19]
000000000004e5a8	stlxr	w9, w21, [x19]
000000000004e5ac	cbnz	w9, 0x4e5a4
000000000004e5b0	cbnz	w21, 0x4e5d4
000000000004e5b4	cmp	w8, #0x1
000000000004e5b8	b.ne	0x4e5d4
000000000004e5bc	adr	x8, #0x45ccd
000000000004e5c0	nop
000000000004e5c4	ldarb	w8, [x8]
000000000004e5c8	tbz	w8, #0x0, 0x4e5d4
000000000004e5cc	mov	x0, x19
000000000004e5d0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e5d4	mov	x0, x20
000000000004e5d8	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KSetAsNSSet member:]:
000000000004e5dc	stp	x24, x23, [sp, #-0x40]!
000000000004e5e0	stp	x22, x21, [sp, #0x10]
000000000004e5e4	stp	x20, x19, [sp, #0x20]
000000000004e5e8	stp	x29, x30, [sp, #0x30]
000000000004e5ec	add	x29, sp, #0x30
000000000004e5f0	mov	x20, x2
000000000004e5f4	mov	x21, x0
000000000004e5f8	bl	_Kotlin_initRuntimeIfNeeded
000000000004e5fc	adrp	x0, 44 ; 0x7a000
000000000004e600	add	x0, x0, #0x2c0
000000000004e604	ldr	x8, [x0]
000000000004e608	blr	x8
000000000004e60c	ldr	x8, [x0]
000000000004e610	add	x19, x8, #0x138
000000000004e614	ldaxr	w22, [x19]
000000000004e618	stlxr	w8, wzr, [x19]
000000000004e61c	cbnz	w8, 0x4e614
000000000004e620	cmp	w22, #0x1
000000000004e624	b.ne	0x4e640
000000000004e628	adr	x8, #0x45c61
000000000004e62c	nop
000000000004e630	ldarb	w8, [x8]
000000000004e634	tbz	w8, #0x0, 0x4e640
000000000004e638	mov	x0, x19
000000000004e63c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e640	nop
000000000004e644	ldrsw	x23, _OBJC_IVAR_$_FastaKmmKSetAsNSSet.setHolder
000000000004e648	bl	_Kotlin_initRuntimeIfNeeded
000000000004e64c	ldr	x0, [x21, x23]
000000000004e650	mov	x1, x20
000000000004e654	bl	__ZL15KSet_getElementP9ObjHeaderP11objc_object
000000000004e658	mov	x20, x0
000000000004e65c	ldaxr	w8, [x19]
000000000004e660	stlxr	w9, w22, [x19]
000000000004e664	cbnz	w9, 0x4e65c
000000000004e668	cbnz	w22, 0x4e68c
000000000004e66c	cmp	w8, #0x1
000000000004e670	b.ne	0x4e68c
000000000004e674	adr	x8, #0x45c15
000000000004e678	nop
000000000004e67c	ldarb	w8, [x8]
000000000004e680	tbz	w8, #0x0, 0x4e68c
000000000004e684	mov	x0, x19
000000000004e688	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e68c	mov	x0, x20
000000000004e690	ldp	x29, x30, [sp, #0x30]
000000000004e694	ldp	x20, x19, [sp, #0x20]
000000000004e698	ldp	x22, x21, [sp, #0x10]
000000000004e69c	ldp	x24, x23, [sp], #0x40
000000000004e6a0	ret
000000000004e6a4	mov	x20, x0
000000000004e6a8	ldaxr	w8, [x19]
000000000004e6ac	stlxr	w9, w22, [x19]
000000000004e6b0	cbnz	w9, 0x4e6a8
000000000004e6b4	cbnz	w22, 0x4e6d8
000000000004e6b8	cmp	w8, #0x1
000000000004e6bc	b.ne	0x4e6d8
000000000004e6c0	adr	x8, #0x45bc9
000000000004e6c4	nop
000000000004e6c8	ldarb	w8, [x8]
000000000004e6cc	tbz	w8, #0x0, 0x4e6d8
000000000004e6d0	mov	x0, x19
000000000004e6d4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e6d8	mov	x0, x20
000000000004e6dc	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KSetAsNSSet containsObject:]:
000000000004e6e0	sub	sp, sp, #0x70
000000000004e6e4	stp	x26, x25, [sp, #0x20]
000000000004e6e8	stp	x24, x23, [sp, #0x30]
000000000004e6ec	stp	x22, x21, [sp, #0x40]
000000000004e6f0	stp	x20, x19, [sp, #0x50]
000000000004e6f4	stp	x29, x30, [sp, #0x60]
000000000004e6f8	add	x29, sp, #0x60
000000000004e6fc	mov	x21, x2
000000000004e700	mov	x22, x0
000000000004e704	bl	_Kotlin_initRuntimeIfNeeded
000000000004e708	adrp	x20, 44 ; 0x7a000
000000000004e70c	add	x20, x20, #0x2c0
000000000004e710	ldr	x24, [x20]
000000000004e714	mov	x0, x20
000000000004e718	blr	x24
000000000004e71c	ldr	x8, [x0]
000000000004e720	add	x19, x8, #0x138
000000000004e724	ldaxr	w23, [x19]
000000000004e728	stlxr	w8, wzr, [x19]
000000000004e72c	cbnz	w8, 0x4e724
000000000004e730	cmp	w23, #0x1
000000000004e734	b.ne	0x4e750
000000000004e738	adr	x8, #0x45b51
000000000004e73c	nop
000000000004e740	ldarb	w8, [x8]
000000000004e744	tbz	w8, #0x0, 0x4e750
000000000004e748	mov	x0, x19
000000000004e74c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e750	mov	x25, sp
000000000004e754	str	xzr, [sp, #0x18]
000000000004e758	mov	x0, x20
000000000004e75c	blr	x24
000000000004e760	ldr	x8, [x0]
000000000004e764	ldr	x9, [x8, #0x110]
000000000004e768	str	x25, [x8, #0x110]
000000000004e76c	mov	x8, #0x400000000
000000000004e770	stp	x9, x8, [sp, #0x8]
000000000004e774	nop
000000000004e778	ldrsw	x26, _OBJC_IVAR_$_FastaKmmKSetAsNSSet.setHolder
000000000004e77c	bl	_Kotlin_initRuntimeIfNeeded
000000000004e780	ldr	x22, [x22, x26]
000000000004e784	nop
000000000004e788	ldr	x0, #0x28510 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004e78c	nop
000000000004e790	ldr	x1, #0x28260 ; Objc selector ref: null
000000000004e794	bl	0x55584 ; Objc message: +[NSNull null]
000000000004e798	cmp	x0, x21
000000000004e79c	b.eq	0x4e7c0
000000000004e7a0	cbz	x21, 0x4e7c0
000000000004e7a4	add	x2, x25, #0x18
000000000004e7a8	nop
000000000004e7ac	ldr	x1, #0x45d2c
000000000004e7b0	mov	x0, x21
000000000004e7b4	bl	0x55584 ; Objc message: -[x0 null]
000000000004e7b8	mov	x1, x0
000000000004e7bc	b	0x4e7c8
000000000004e7c0	mov	x1, #0x0
000000000004e7c4	str	xzr, [sp, #0x18]
000000000004e7c8	mov	x0, x22
000000000004e7cc	bl	_Kotlin_Set_contains
000000000004e7d0	mov	x21, x0
000000000004e7d4	mov	x0, x20
000000000004e7d8	blr	x24
000000000004e7dc	ldr	x8, [x0]
000000000004e7e0	ldr	x9, [sp, #0x8]
000000000004e7e4	str	x9, [x8, #0x110]
000000000004e7e8	ldaxr	w8, [x19]
000000000004e7ec	stlxr	w9, w23, [x19]
000000000004e7f0	cbnz	w9, 0x4e7e8
000000000004e7f4	cbnz	w23, 0x4e818
000000000004e7f8	cmp	w8, #0x1
000000000004e7fc	b.ne	0x4e818
000000000004e800	adr	x8, #0x45a89
000000000004e804	nop
000000000004e808	ldarb	w8, [x8]
000000000004e80c	tbz	w8, #0x0, 0x4e818
000000000004e810	mov	x0, x19
000000000004e814	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e818	mov	x0, x21
000000000004e81c	ldp	x29, x30, [sp, #0x60]
000000000004e820	ldp	x20, x19, [sp, #0x50]
000000000004e824	ldp	x22, x21, [sp, #0x40]
000000000004e828	ldp	x24, x23, [sp, #0x30]
000000000004e82c	ldp	x26, x25, [sp, #0x20]
000000000004e830	add	sp, sp, #0x70
000000000004e834	ret
000000000004e838	mov	x21, x0
000000000004e83c	mov	x0, x20
000000000004e840	blr	x24
000000000004e844	ldr	x8, [x0]
000000000004e848	ldr	x9, [sp, #0x8]
000000000004e84c	str	x9, [x8, #0x110]
000000000004e850	ldaxr	w8, [x19]
000000000004e854	stlxr	w9, w23, [x19]
000000000004e858	cbnz	w9, 0x4e850
000000000004e85c	cbnz	w23, 0x4e880
000000000004e860	cmp	w8, #0x1
000000000004e864	b.ne	0x4e880
000000000004e868	adr	x8, #0x45a21
000000000004e86c	nop
000000000004e870	ldarb	w8, [x8]
000000000004e874	tbz	w8, #0x0, 0x4e880
000000000004e878	mov	x0, x19
000000000004e87c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e880	mov	x0, x21
000000000004e884	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KSetAsNSSet objectEnumerator]:
000000000004e888	sub	sp, sp, #0x70
000000000004e88c	stp	x26, x25, [sp, #0x20]
000000000004e890	stp	x24, x23, [sp, #0x30]
000000000004e894	stp	x22, x21, [sp, #0x40]
000000000004e898	stp	x20, x19, [sp, #0x50]
000000000004e89c	stp	x29, x30, [sp, #0x60]
000000000004e8a0	add	x29, sp, #0x60
000000000004e8a4	mov	x21, x0
000000000004e8a8	bl	_Kotlin_initRuntimeIfNeeded
000000000004e8ac	adrp	x20, 44 ; 0x7a000
000000000004e8b0	add	x20, x20, #0x2c0
000000000004e8b4	ldr	x25, [x20]
000000000004e8b8	mov	x0, x20
000000000004e8bc	blr	x25
000000000004e8c0	ldr	x8, [x0]
000000000004e8c4	add	x19, x8, #0x138
000000000004e8c8	ldaxr	w24, [x19]
000000000004e8cc	stlxr	w8, wzr, [x19]
000000000004e8d0	cbnz	w8, 0x4e8c8
000000000004e8d4	cmp	w24, #0x1
000000000004e8d8	b.ne	0x4e8f4
000000000004e8dc	adr	x8, #0x459ad
000000000004e8e0	nop
000000000004e8e4	ldarb	w8, [x8]
000000000004e8e8	tbz	w8, #0x0, 0x4e8f4
000000000004e8ec	mov	x0, x19
000000000004e8f0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e8f4	mov	x8, sp
000000000004e8f8	add	x23, x8, #0x18
000000000004e8fc	str	xzr, [sp, #0x18]
000000000004e900	mov	x0, x20
000000000004e904	blr	x25
000000000004e908	ldr	x9, [x0]
000000000004e90c	ldr	x10, [x9, #0x110]
000000000004e910	str	x8, [x9, #0x110]
000000000004e914	mov	x8, #0x400000000
000000000004e918	stp	x10, x8, [sp, #0x8]
000000000004e91c	nop
000000000004e920	ldr	x22, #0x28398 ; Objc class ref: FastaKmmKIteratorAsNSEnumerator
000000000004e924	nop
000000000004e928	ldrsw	x26, _OBJC_IVAR_$_FastaKmmKSetAsNSSet.setHolder
000000000004e92c	bl	_Kotlin_initRuntimeIfNeeded
000000000004e930	ldr	x0, [x21, x26]
000000000004e934	mov	x1, x23
000000000004e938	bl	_Kotlin_Set_iterator
000000000004e93c	mov	x2, x0
000000000004e940	nop
000000000004e944	ldr	x1, #0x27f44 ; Objc selector ref: createWithKIterator:
000000000004e948	mov	x0, x22
000000000004e94c	bl	0x55584 ; Objc message: +[FastaKmmKIteratorAsNSEnumerator createWithKIterator:]
000000000004e950	mov	x21, x0
000000000004e954	mov	x0, x20
000000000004e958	blr	x25
000000000004e95c	ldr	x8, [x0]
000000000004e960	ldr	x9, [sp, #0x8]
000000000004e964	str	x9, [x8, #0x110]
000000000004e968	ldaxr	w8, [x19]
000000000004e96c	stlxr	w9, w24, [x19]
000000000004e970	cbnz	w9, 0x4e968
000000000004e974	cbnz	w24, 0x4e998
000000000004e978	cmp	w8, #0x1
000000000004e97c	b.ne	0x4e998
000000000004e980	adr	x8, #0x45909
000000000004e984	nop
000000000004e988	ldarb	w8, [x8]
000000000004e98c	tbz	w8, #0x0, 0x4e998
000000000004e990	mov	x0, x19
000000000004e994	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e998	mov	x0, x21
000000000004e99c	ldp	x29, x30, [sp, #0x60]
000000000004e9a0	ldp	x20, x19, [sp, #0x50]
000000000004e9a4	ldp	x22, x21, [sp, #0x40]
000000000004e9a8	ldp	x24, x23, [sp, #0x30]
000000000004e9ac	ldp	x26, x25, [sp, #0x20]
000000000004e9b0	add	sp, sp, #0x70
000000000004e9b4	ret
000000000004e9b8	mov	x21, x0
000000000004e9bc	mov	x0, x20
000000000004e9c0	blr	x25
000000000004e9c4	ldr	x8, [x0]
000000000004e9c8	ldr	x9, [sp, #0x8]
000000000004e9cc	str	x9, [x8, #0x110]
000000000004e9d0	ldaxr	w8, [x19]
000000000004e9d4	stlxr	w9, w24, [x19]
000000000004e9d8	cbnz	w9, 0x4e9d0
000000000004e9dc	cbnz	w24, 0x4ea00
000000000004e9e0	cmp	w8, #0x1
000000000004e9e4	b.ne	0x4ea00
000000000004e9e8	adr	x8, #0x458a1
000000000004e9ec	nop
000000000004e9f0	ldarb	w8, [x8]
000000000004e9f4	tbz	w8, #0x0, 0x4ea00
000000000004e9f8	mov	x0, x19
000000000004e9fc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ea00	mov	x0, x21
000000000004ea04	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZL15KSet_getElementP9ObjHeaderP11objc_object:
000000000004ea08	sub	sp, sp, #0xc0
000000000004ea0c	stp	x26, x25, [sp, #0x70]
000000000004ea10	stp	x24, x23, [sp, #0x80]
000000000004ea14	stp	x22, x21, [sp, #0x90]
000000000004ea18	stp	x20, x19, [sp, #0xa0]
000000000004ea1c	stp	x29, x30, [sp, #0xb0]
000000000004ea20	add	x29, sp, #0xb0
000000000004ea24	mov	x20, x1
000000000004ea28	mov	x21, x0
000000000004ea2c	nop
000000000004ea30	ldr	x0, #0x28268 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004ea34	nop
000000000004ea38	ldr	x1, #0x27fb8 ; Objc selector ref: null
000000000004ea3c	bl	0x55584 ; Objc message: +[NSNull null]
000000000004ea40	cmp	x0, x20
000000000004ea44	b.eq	0x4eab4
000000000004ea48	add	x9, sp, #0x20
000000000004ea4c	str	xzr, [sp, #0x38]
000000000004ea50	adrp	x19, 44 ; 0x7a000
000000000004ea54	add	x19, x19, #0x2c0
000000000004ea58	ldr	x24, [x19]
000000000004ea5c	mov	x0, x19
000000000004ea60	blr	x24
000000000004ea64	ldr	x8, [x0]
000000000004ea68	ldr	x10, [x8, #0x110]
000000000004ea6c	mov	x11, #0x400000000
000000000004ea70	stp	x10, x11, [sp, #0x28]
000000000004ea74	mov	x23, sp
000000000004ea78	stp	x11, xzr, [sp, #0x10]
000000000004ea7c	str	x23, [x8, #0x110]
000000000004ea80	str	x9, [sp, #0x8]
000000000004ea84	cbz	x20, 0x4eacc
000000000004ea88	add	x2, x9, #0x18
000000000004ea8c	nop
000000000004ea90	ldr	x1, #0x45a48
000000000004ea94	mov	x0, x20
000000000004ea98	bl	0x55584 ; Objc message: -[x0 null]
000000000004ea9c	mov	x20, x0
000000000004eaa0	mov	x0, x19
000000000004eaa4	blr	x24
000000000004eaa8	ldr	x8, [x0]
000000000004eaac	ldr	x9, [x8, #0x110]
000000000004eab0	b	0x4ead4
000000000004eab4	mov	x0, x21
000000000004eab8	mov	x1, #0x0
000000000004eabc	bl	_Kotlin_Set_contains
000000000004eac0	cmp	w0, #0x0
000000000004eac4	csel	x8, x20, xzr, ne
000000000004eac8	b	0x4f054
000000000004eacc	mov	x9, sp
000000000004ead0	str	xzr, [sp, #0x38]
000000000004ead4	movi.16b	v0, #0x0
000000000004ead8	stp	q0, q0, [sp, #0x40]
000000000004eadc	str	q0, [sp, #0x60]
000000000004eae0	add	x22, sp, #0x40
000000000004eae4	str	x22, [x8, #0x110]
000000000004eae8	mov	x8, #0x600000000
000000000004eaec	stp	x9, x8, [sp, #0x48]
000000000004eaf0	adr	x25, #0x45799
000000000004eaf4	nop
000000000004eaf8	ldarb	w8, [x25]
000000000004eafc	tbz	w8, #0x0, 0x4eb04
000000000004eb00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004eb04	cbz	x21, 0x4ec40
000000000004eb08	ldr	x8, [x21]
000000000004eb0c	and	x8, x8, #0xfffffffffffffffc
000000000004eb10	ldr	x8, [x8]
000000000004eb14	ldr	w9, [x8, #0x3c]
000000000004eb18	ldr	x8, [x8, #0x40]
000000000004eb1c	tbnz	w9, #0x1f, 0x4eb60
000000000004eb20	mov	w10, #0xb
000000000004eb24	and	x9, x9, x10
000000000004eb28	lsl	x9, x9, #4
000000000004eb2c	ldr	w8, [x8, x9]
000000000004eb30	cmp	w8, #0xb
000000000004eb34	b.ne	0x4ec40
000000000004eb38	add	x2, x23, #0x18
000000000004eb3c	ldr	x8, [x21]
000000000004eb40	and	x8, x8, #0xfffffffffffffffc
000000000004eb44	ldr	x8, [x8]
000000000004eb48	ldr	w9, [x8, #0x3c]
000000000004eb4c	ldr	x8, [x8, #0x40]
000000000004eb50	tbnz	w9, #0x1f, 0x4ebb8
000000000004eb54	mov	w10, #0xb
000000000004eb58	and	x9, x9, x10
000000000004eb5c	b	0x4f000
000000000004eb60	neg	w10, w9
000000000004eb64	mvn	w9, w9
000000000004eb68	cmp	w10, #0x9
000000000004eb6c	b.ge	0x4ebfc
000000000004eb70	cmp	w10, #0x2
000000000004eb74	b.lt	0x4ece0
000000000004eb78	mov	x10, #0x0
000000000004eb7c	mov	x11, x8
000000000004eb80	ldr	w12, [x11]
000000000004eb84	cmp	w12, #0xa
000000000004eb88	b.gt	0x4edf8
000000000004eb8c	add	x10, x10, #0x1
000000000004eb90	add	x11, x11, #0x10
000000000004eb94	cmp	x9, x10
000000000004eb98	b.ne	0x4eb80
000000000004eb9c	mov	x10, x9
000000000004eba0	sxtw	x9, w10
000000000004eba4	lsl	x9, x9, #4
000000000004eba8	ldr	w8, [x8, x9]
000000000004ebac	cmp	w8, #0xb
000000000004ebb0	b.ne	0x4ec40
000000000004ebb4	b	0x4eb38
000000000004ebb8	neg	w10, w9
000000000004ebbc	mvn	w9, w9
000000000004ebc0	cmp	w10, #0x9
000000000004ebc4	b.ge	0x4ecfc
000000000004ebc8	cmp	w10, #0x2
000000000004ebcc	b.lt	0x4ee10
000000000004ebd0	mov	x10, #0x0
000000000004ebd4	mov	x11, x8
000000000004ebd8	ldr	w12, [x11]
000000000004ebdc	cmp	w12, #0xa
000000000004ebe0	b.gt	0x4effc
000000000004ebe4	add	x10, x10, #0x1
000000000004ebe8	add	x11, x11, #0x10
000000000004ebec	cmp	x9, x10
000000000004ebf0	b.ne	0x4ebd8
000000000004ebf4	mov	x10, x9
000000000004ebf8	b	0x4effc
000000000004ebfc	mov	w10, #0x0
000000000004ec00	add	w11, w9, w10
000000000004ec04	cmp	w11, #0x0
000000000004ec08	cinc	w11, w11, lt
000000000004ec0c	asr	w11, w11, #1
000000000004ec10	sbfiz	x12, x11, #4, #32
000000000004ec14	ldr	w12, [x8, x12]
000000000004ec18	cmp	w12, #0xb
000000000004ec1c	csinc	w10, w10, w11, ge
000000000004ec20	csel	w9, w9, w11, lt
000000000004ec24	cmp	w10, w9
000000000004ec28	b.lt	0x4ec00
000000000004ec2c	sxtw	x9, w10
000000000004ec30	lsl	x9, x9, #4
000000000004ec34	ldr	w8, [x8, x9]
000000000004ec38	cmp	w8, #0xb
000000000004ec3c	b.eq	0x4eb38
000000000004ec40	ldr	x8, [x21]
000000000004ec44	and	x8, x8, #0xfffffffffffffffc
000000000004ec48	ldr	x8, [x8]
000000000004ec4c	ldr	w9, [x8, #0x3c]
000000000004ec50	ldr	x8, [x8, #0x40]
000000000004ec54	tbnz	w9, #0x1f, 0x4ec60
000000000004ec58	and	x9, x9, #0x1e
000000000004ec5c	b	0x4ed34
000000000004ec60	neg	w10, w9
000000000004ec64	mvn	w9, w9
000000000004ec68	cmp	w10, #0x9
000000000004ec6c	b.ge	0x4eca4
000000000004ec70	cmp	w10, #0x2
000000000004ec74	b.lt	0x4ecd8
000000000004ec78	mov	x10, #0x0
000000000004ec7c	mov	x11, x8
000000000004ec80	ldr	w12, [x11]
000000000004ec84	cmp	w12, #0x1d
000000000004ec88	b.gt	0x4ed30
000000000004ec8c	add	x10, x10, #0x1
000000000004ec90	add	x11, x11, #0x10
000000000004ec94	cmp	x9, x10
000000000004ec98	b.ne	0x4ec80
000000000004ec9c	mov	x10, x9
000000000004eca0	b	0x4ed30
000000000004eca4	mov	w10, #0x0
000000000004eca8	add	w11, w9, w10
000000000004ecac	cmp	w11, #0x0
000000000004ecb0	cinc	w11, w11, lt
000000000004ecb4	asr	w11, w11, #1
000000000004ecb8	sbfiz	x12, x11, #4, #32
000000000004ecbc	ldr	w12, [x8, x12]
000000000004ecc0	cmp	w12, #0x1e
000000000004ecc4	csinc	w10, w10, w11, ge
000000000004ecc8	csel	w9, w9, w11, lt
000000000004eccc	cmp	w10, w9
000000000004ecd0	b.lt	0x4eca8
000000000004ecd4	b	0x4ed30
000000000004ecd8	mov	w10, #0x0
000000000004ecdc	b	0x4ed30
000000000004ece0	mov	w10, #0x0
000000000004ece4	sxtw	x9, w10
000000000004ece8	lsl	x9, x9, #4
000000000004ecec	ldr	w8, [x8, x9]
000000000004ecf0	cmp	w8, #0xb
000000000004ecf4	b.eq	0x4eb38
000000000004ecf8	b	0x4ec40
000000000004ecfc	mov	w10, #0x0
000000000004ed00	add	w11, w9, w10
000000000004ed04	cmp	w11, #0x0
000000000004ed08	cinc	w11, w11, lt
000000000004ed0c	asr	w11, w11, #1
000000000004ed10	sbfiz	x12, x11, #4, #32
000000000004ed14	ldr	w12, [x8, x12]
000000000004ed18	cmp	w12, #0xb
000000000004ed1c	csinc	w10, w10, w11, ge
000000000004ed20	csel	w9, w9, w11, lt
000000000004ed24	cmp	w10, w9
000000000004ed28	b.lt	0x4ed00
000000000004ed2c	b	0x4effc
000000000004ed30	sxtw	x9, w10
000000000004ed34	add	x8, x8, x9, lsl #4
000000000004ed38	ldr	x8, [x8, #0x8]
000000000004ed3c	ldr	x8, [x8, #0x8]
000000000004ed40	mov	x0, x21
000000000004ed44	mov	x1, x20
000000000004ed48	blr	x8
000000000004ed4c	tbz	w0, #0x0, 0x4eff4
000000000004ed50	add	x1, x22, #0x18
000000000004ed54	ldr	x8, [x21]
000000000004ed58	and	x8, x8, #0xfffffffffffffffc
000000000004ed5c	ldr	x8, [x8]
000000000004ed60	ldr	w9, [x8, #0x3c]
000000000004ed64	ldr	x8, [x8, #0x40]
000000000004ed68	tbnz	w9, #0x1f, 0x4ed78
000000000004ed6c	mov	w10, #0x31
000000000004ed70	and	x9, x9, x10
000000000004ed74	b	0x4ee1c
000000000004ed78	neg	w10, w9
000000000004ed7c	mvn	w9, w9
000000000004ed80	cmp	w10, #0x9
000000000004ed84	b.ge	0x4edbc
000000000004ed88	cmp	w10, #0x2
000000000004ed8c	b.lt	0x4edf0
000000000004ed90	mov	x10, #0x0
000000000004ed94	mov	x11, x8
000000000004ed98	ldr	w12, [x11]
000000000004ed9c	cmp	w12, #0x30
000000000004eda0	b.gt	0x4ee18
000000000004eda4	add	x10, x10, #0x1
000000000004eda8	add	x11, x11, #0x10
000000000004edac	cmp	x9, x10
000000000004edb0	b.ne	0x4ed98
000000000004edb4	mov	x10, x9
000000000004edb8	b	0x4ee18
000000000004edbc	mov	w10, #0x0
000000000004edc0	add	w11, w9, w10
000000000004edc4	cmp	w11, #0x0
000000000004edc8	cinc	w11, w11, lt
000000000004edcc	asr	w11, w11, #1
000000000004edd0	sbfiz	x12, x11, #4, #32
000000000004edd4	ldr	w12, [x8, x12]
000000000004edd8	cmp	w12, #0x31
000000000004eddc	csinc	w10, w10, w11, ge
000000000004ede0	csel	w9, w9, w11, lt
000000000004ede4	cmp	w10, w9
000000000004ede8	b.lt	0x4edc0
000000000004edec	b	0x4ee18
000000000004edf0	mov	w10, #0x0
000000000004edf4	b	0x4ee18
000000000004edf8	sxtw	x9, w10
000000000004edfc	lsl	x9, x9, #4
000000000004ee00	ldr	w8, [x8, x9]
000000000004ee04	cmp	w8, #0xb
000000000004ee08	b.ne	0x4ec40
000000000004ee0c	b	0x4eb38
000000000004ee10	mov	w10, #0x0
000000000004ee14	b	0x4effc
000000000004ee18	sxtw	x9, w10
000000000004ee1c	add	x8, x8, x9, lsl #4
000000000004ee20	ldr	x8, [x8, #0x8]
000000000004ee24	ldr	x8, [x8]
000000000004ee28	mov	x0, x21
000000000004ee2c	blr	x8
000000000004ee30	mov	x21, x0
000000000004ee34	add	x22, x22, #0x20
000000000004ee38	mov	w26, #0xa0
000000000004ee3c	b	0x4ee44
000000000004ee40	cbz	x20, 0x4eff4
000000000004ee44	ldr	x8, [x21]
000000000004ee48	and	x8, x8, #0xfffffffffffffffc
000000000004ee4c	ldr	x8, [x8]
000000000004ee50	ldr	w9, [x8, #0x3c]
000000000004ee54	ldr	x8, [x8, #0x40]
000000000004ee58	tbnz	w9, #0x1f, 0x4ee64
000000000004ee5c	and	x9, x9, x26
000000000004ee60	b	0x4eee8
000000000004ee64	neg	w10, w9
000000000004ee68	mvn	w9, w9
000000000004ee6c	cmp	w10, #0x9
000000000004ee70	b.ge	0x4eea8
000000000004ee74	cmp	w10, #0x2
000000000004ee78	b.lt	0x4eedc
000000000004ee7c	mov	x10, #0x0
000000000004ee80	mov	x11, x8
000000000004ee84	ldr	w12, [x11]
000000000004ee88	cmp	w12, #0x9f
000000000004ee8c	b.gt	0x4eee4
000000000004ee90	add	x10, x10, #0x1
000000000004ee94	add	x11, x11, #0x10
000000000004ee98	cmp	x9, x10
000000000004ee9c	b.ne	0x4ee84
000000000004eea0	mov	x10, x9
000000000004eea4	b	0x4eee4
000000000004eea8	mov	w10, #0x0
000000000004eeac	add	w11, w9, w10
000000000004eeb0	cmp	w11, #0x0
000000000004eeb4	cinc	w11, w11, lt
000000000004eeb8	asr	w11, w11, #1
000000000004eebc	sbfiz	x12, x11, #4, #32
000000000004eec0	ldr	w12, [x8, x12]
000000000004eec4	cmp	w12, #0xa0
000000000004eec8	csinc	w10, w10, w11, ge
000000000004eecc	csel	w9, w9, w11, lt
000000000004eed0	cmp	w10, w9
000000000004eed4	b.lt	0x4eeac
000000000004eed8	b	0x4eee4
000000000004eedc	mov	w10, #0x0
000000000004eee0	b	0x4eee4
000000000004eee4	sxtw	x9, w10
000000000004eee8	add	x8, x8, x9, lsl #4
000000000004eeec	ldr	x8, [x8, #0x8]
000000000004eef0	ldr	x8, [x8]
000000000004eef4	mov	x0, x21
000000000004eef8	blr	x8
000000000004eefc	tbz	w0, #0x0, 0x4f074
000000000004ef00	ldarb	w8, [x25]
000000000004ef04	tbz	w8, #0x0, 0x4ef0c
000000000004ef08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004ef0c	ldr	x8, [x21]
000000000004ef10	and	x8, x8, #0xfffffffffffffffc
000000000004ef14	ldr	x8, [x8]
000000000004ef18	ldr	w9, [x8, #0x3c]
000000000004ef1c	ldr	x8, [x8, #0x40]
000000000004ef20	tbnz	w9, #0x1f, 0x4ef2c
000000000004ef24	and	x9, x9, x26
000000000004ef28	b	0x4efb0
000000000004ef2c	neg	w10, w9
000000000004ef30	mvn	w9, w9
000000000004ef34	cmp	w10, #0x9
000000000004ef38	b.ge	0x4ef70
000000000004ef3c	cmp	w10, #0x2
000000000004ef40	b.lt	0x4efa4
000000000004ef44	mov	x10, #0x0
000000000004ef48	mov	x11, x8
000000000004ef4c	ldr	w12, [x11]
000000000004ef50	cmp	w12, #0x9f
000000000004ef54	b.gt	0x4efac
000000000004ef58	add	x10, x10, #0x1
000000000004ef5c	add	x11, x11, #0x10
000000000004ef60	cmp	x9, x10
000000000004ef64	b.ne	0x4ef4c
000000000004ef68	mov	x10, x9
000000000004ef6c	b	0x4efac
000000000004ef70	mov	w10, #0x0
000000000004ef74	add	w11, w9, w10
000000000004ef78	cmp	w11, #0x0
000000000004ef7c	cinc	w11, w11, lt
000000000004ef80	asr	w11, w11, #1
000000000004ef84	sbfiz	x12, x11, #4, #32
000000000004ef88	ldr	w12, [x8, x12]
000000000004ef8c	cmp	w12, #0xa0
000000000004ef90	csinc	w10, w10, w11, ge
000000000004ef94	csel	w9, w9, w11, lt
000000000004ef98	cmp	w10, w9
000000000004ef9c	b.lt	0x4ef74
000000000004efa0	b	0x4efac
000000000004efa4	mov	w10, #0x0
000000000004efa8	b	0x4efac
000000000004efac	sxtw	x9, w10
000000000004efb0	add	x8, x8, x9, lsl #4
000000000004efb4	ldr	x8, [x8, #0x8]
000000000004efb8	ldr	x8, [x8, #0x8]
000000000004efbc	mov	x0, x21
000000000004efc0	mov	x1, x22
000000000004efc4	blr	x8
000000000004efc8	mov	x23, x0
000000000004efcc	cbz	x0, 0x4ee40
000000000004efd0	ldr	x8, [x23]
000000000004efd4	and	x8, x8, #0xfffffffffffffffc
000000000004efd8	ldr	x8, [x8]
000000000004efdc	ldr	x8, [x8, #0x70]
000000000004efe0	mov	x0, x23
000000000004efe4	mov	x1, x20
000000000004efe8	blr	x8
000000000004efec	tbz	w0, #0x0, 0x4ee44
000000000004eff0	b	0x4f01c
000000000004eff4	mov	x23, #0x0
000000000004eff8	b	0x4f01c
000000000004effc	sxtw	x9, w10
000000000004f000	add	x8, x8, x9, lsl #4
000000000004f004	ldr	x8, [x8, #0x8]
000000000004f008	ldr	x8, [x8]
000000000004f00c	mov	x0, x21
000000000004f010	mov	x1, x20
000000000004f014	blr	x8
000000000004f018	mov	x23, x0
000000000004f01c	str	x23, [sp, #0x18]
000000000004f020	mov	x0, x19
000000000004f024	blr	x24
000000000004f028	ldr	x8, [x0]
000000000004f02c	ldr	x9, [sp, #0x48]
000000000004f030	str	x9, [x8, #0x110]
000000000004f034	mov	x0, x23
000000000004f038	bl	_Kotlin_ObjCExport_refToObjC
000000000004f03c	mov	x8, x0
000000000004f040	mov	x0, x19
000000000004f044	blr	x24
000000000004f048	ldr	x9, [x0]
000000000004f04c	ldr	x10, [sp, #0x28]
000000000004f050	str	x10, [x9, #0x110]
000000000004f054	mov	x0, x8
000000000004f058	ldp	x29, x30, [sp, #0xb0]
000000000004f05c	ldp	x20, x19, [sp, #0xa0]
000000000004f060	ldp	x22, x21, [sp, #0x90]
000000000004f064	ldp	x24, x23, [sp, #0x80]
000000000004f068	ldp	x26, x25, [sp, #0x70]
000000000004f06c	add	sp, sp, #0xc0
000000000004f070	ret
000000000004f074	mov	x0, x19
000000000004f078	blr	x24
000000000004f07c	ldr	x8, [x0]
000000000004f080	ldr	x8, [x8, #0x118]
000000000004f084	add	x0, x8, #0x70
000000000004f088	mov	w1, #0x38
000000000004f08c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004f090	adr	x8, #0x12170
000000000004f094	nop
000000000004f098	mov	x20, x0
000000000004f09c	str	x8, [x20, #0x10]!
000000000004f0a0	stur	xzr, [x20, #-0x8]
000000000004f0a4	str	x20, [sp, #0x68]
000000000004f0a8	ldarb	w8, [x25]
000000000004f0ac	tbz	w8, #0x0, 0x4f0b4
000000000004f0b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004f0b4	adr	x1, #0x1f4cc
000000000004f0b8	nop
000000000004f0bc	mov	x0, x20
000000000004f0c0	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000004f0c4	ldarb	w8, [x25]
000000000004f0c8	tbz	w8, #0x0, 0x4f0d0
000000000004f0cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004f0d0	mov	x0, x20
000000000004f0d4	bl	_ThrowException
000000000004f0d8	brk	#0x1
000000000004f0dc	b	0x4f0e0
000000000004f0e0	mov	x1, x0
000000000004f0e4	b	0x4f104
000000000004f0e8	b	0x4f0ec
000000000004f0ec	mov	x1, x0
000000000004f0f0	mov	x0, x19
000000000004f0f4	blr	x24
000000000004f0f8	ldr	x8, [x0]
000000000004f0fc	ldr	x9, [sp, #0x48]
000000000004f100	str	x9, [x8, #0x110]
000000000004f104	mov	x0, x19
000000000004f108	blr	x24
000000000004f10c	ldr	x8, [x0]
000000000004f110	ldr	x9, [sp, #0x28]
000000000004f114	str	x9, [x8, #0x110]
000000000004f118	mov	x0, x1
000000000004f11c	bl	0x55194 ; symbol stub for: __Unwind_Resume
+[KSetAsNSSet createRetainedWithKSet:]:
000000000004f120	stp	x22, x21, [sp, #-0x30]!
000000000004f124	stp	x20, x19, [sp, #0x10]
000000000004f128	stp	x29, x30, [sp, #0x20]
000000000004f12c	add	x29, sp, #0x20
000000000004f130	mov	x19, x2
000000000004f134	nop
000000000004f138	ldr	x0, #0x27b98 ; Objc class ref: FastaKmmKSetAsNSSet
000000000004f13c	bl	0x55500 ; symbol stub for: _objc_alloc
000000000004f140	nop
000000000004f144	ldr	x1, #0x2779c ; Objc selector ref: init
000000000004f148	bl	0x55584 ; Objc message: +[FastaKmmKSetAsNSSet init]
000000000004f14c	mov	x20, x0
000000000004f150	nop
000000000004f154	ldrsw	x8, _OBJC_IVAR_$_FastaKmmKSetAsNSSet.setHolder
000000000004f158	add	x21, x0, x8
000000000004f15c	adrp	x0, 43 ; 0x7a000
000000000004f160	add	x0, x0, #0x2c0
000000000004f164	ldr	x8, [x0]
000000000004f168	blr	x8
000000000004f16c	ldr	x22, [x0]
000000000004f170	mov	w0, #0x1
000000000004f174	mov	w1, #0x28
000000000004f178	bl	0x553d4 ; symbol stub for: _calloc
000000000004f17c	ldr	x8, [x22, #0xa8]!
000000000004f180	sub	x9, x22, #0x8
000000000004f184	stp	x8, x22, [x0]
000000000004f188	str	x0, [x8, #0x8]
000000000004f18c	str	x0, [x22]
000000000004f190	ldr	x8, [x22, #0x10]
000000000004f194	add	x8, x8, #0x1
000000000004f198	str	x8, [x22, #0x10]
000000000004f19c	stp	x9, x0, [x0, #0x18]
000000000004f1a0	str	x19, [x0, #0x10]!
000000000004f1a4	stp	x19, x0, [x21]
000000000004f1a8	mov	x0, x20
000000000004f1ac	ldp	x29, x30, [sp, #0x20]
000000000004f1b0	ldp	x20, x19, [sp, #0x10]
000000000004f1b4	ldp	x22, x21, [sp], #0x30
000000000004f1b8	ret
-[KotlinMutableSet init]:
000000000004f1bc	sub	sp, sp, #0x80
000000000004f1c0	stp	x26, x25, [sp, #0x30]
000000000004f1c4	stp	x24, x23, [sp, #0x40]
000000000004f1c8	stp	x22, x21, [sp, #0x50]
000000000004f1cc	stp	x20, x19, [sp, #0x60]
000000000004f1d0	stp	x29, x30, [sp, #0x70]
000000000004f1d4	add	x29, sp, #0x70
000000000004f1d8	nop
000000000004f1dc	ldr	x8, #0x27b4c ; Objc class ref: FastaKmmMutableSet
000000000004f1e0	stp	x0, x8, [sp, #0x20]
000000000004f1e4	nop
000000000004f1e8	ldr	x1, #0x276f8 ; Objc selector ref: init
000000000004f1ec	add	x0, sp, #0x20
000000000004f1f0	bl	0x55590 ; Objc message: -[[x0 super] init]
000000000004f1f4	mov	x20, x0
000000000004f1f8	cbz	x0, 0x4f318
000000000004f1fc	bl	_Kotlin_initRuntimeIfNeeded
000000000004f200	adrp	x21, 43 ; 0x7a000
000000000004f204	add	x21, x21, #0x2c0
000000000004f208	ldr	x25, [x21]
000000000004f20c	mov	x0, x21
000000000004f210	blr	x25
000000000004f214	ldr	x24, [x0]
000000000004f218	add	x19, x24, #0x138
000000000004f21c	ldaxr	w23, [x19]
000000000004f220	stlxr	w8, wzr, [x19]
000000000004f224	cbnz	w8, 0x4f21c
000000000004f228	cmp	w23, #0x1
000000000004f22c	b.ne	0x4f248
000000000004f230	adr	x8, #0x45059
000000000004f234	nop
000000000004f238	ldarb	w8, [x8]
000000000004f23c	tbz	w8, #0x0, 0x4f248
000000000004f240	mov	x0, x19
000000000004f244	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f248	mov	x8, sp
000000000004f24c	add	x1, x8, #0x18
000000000004f250	str	xzr, [sp, #0x18]
000000000004f254	mov	x0, x21
000000000004f258	blr	x25
000000000004f25c	ldr	x9, [x0]
000000000004f260	ldr	x10, [x9, #0x110]
000000000004f264	str	x8, [x9, #0x110]
000000000004f268	mov	x8, #0x400000000
000000000004f26c	stp	x10, x8, [sp, #0x8]
000000000004f270	mov	w0, #0x8
000000000004f274	bl	_Kotlin_MutableSet_createWithCapacity
000000000004f278	mov	x22, x0
000000000004f27c	nop
000000000004f280	ldrsw	x8, _OBJC_IVAR_$_FastaKmmMutableSet.setHolder
000000000004f284	add	x26, x20, x8
000000000004f288	mov	x0, x21
000000000004f28c	blr	x25
000000000004f290	mov	x21, x0
000000000004f294	ldr	x25, [x0]
000000000004f298	mov	w0, #0x1
000000000004f29c	mov	w1, #0x28
000000000004f2a0	bl	0x553d4 ; symbol stub for: _calloc
000000000004f2a4	ldr	x8, [x25, #0xa8]!
000000000004f2a8	sub	x9, x25, #0x8
000000000004f2ac	mov	x10, x0
000000000004f2b0	str	x22, [x10, #0x10]!
000000000004f2b4	str	x9, [x0, #0x18]
000000000004f2b8	stp	x8, x25, [x0]
000000000004f2bc	str	x0, [x8, #0x8]
000000000004f2c0	str	x0, [x25]
000000000004f2c4	ldr	x8, [x25, #0x10]
000000000004f2c8	add	x8, x8, #0x1
000000000004f2cc	str	x8, [x25, #0x10]
000000000004f2d0	str	x0, [x0, #0x20]
000000000004f2d4	stp	x22, x10, [x26]
000000000004f2d8	ldr	x8, [x21]
000000000004f2dc	ldr	x9, [sp, #0x8]
000000000004f2e0	str	x9, [x8, #0x110]
000000000004f2e4	cbz	x24, 0x4f318
000000000004f2e8	ldaxr	w8, [x19]
000000000004f2ec	stlxr	w9, w23, [x19]
000000000004f2f0	cbnz	w9, 0x4f2e8
000000000004f2f4	cbnz	w23, 0x4f318
000000000004f2f8	cmp	w8, #0x1
000000000004f2fc	b.ne	0x4f318
000000000004f300	adr	x8, #0x44f89
000000000004f304	nop
000000000004f308	ldarb	w8, [x8]
000000000004f30c	tbz	w8, #0x0, 0x4f318
000000000004f310	mov	x0, x19
000000000004f314	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f318	mov	x0, x20
000000000004f31c	ldp	x29, x30, [sp, #0x70]
000000000004f320	ldp	x20, x19, [sp, #0x60]
000000000004f324	ldp	x22, x21, [sp, #0x50]
000000000004f328	ldp	x24, x23, [sp, #0x40]
000000000004f32c	ldp	x26, x25, [sp, #0x30]
000000000004f330	add	sp, sp, #0x80
000000000004f334	ret
000000000004f338	mov	x20, x0
000000000004f33c	mov	x0, x21
000000000004f340	blr	x25
000000000004f344	ldr	x8, [x0]
000000000004f348	ldr	x9, [sp, #0x8]
000000000004f34c	str	x9, [x8, #0x110]
000000000004f350	cbz	x24, 0x4f384
000000000004f354	ldaxr	w8, [x19]
000000000004f358	stlxr	w9, w23, [x19]
000000000004f35c	cbnz	w9, 0x4f354
000000000004f360	cbnz	w23, 0x4f384
000000000004f364	cmp	w8, #0x1
000000000004f368	b.ne	0x4f384
000000000004f36c	adr	x8, #0x44f1d
000000000004f370	nop
000000000004f374	ldarb	w8, [x8]
000000000004f378	tbz	w8, #0x0, 0x4f384
000000000004f37c	mov	x0, x19
000000000004f380	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f384	mov	x0, x20
000000000004f388	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet initWithCapacity:]:
000000000004f38c	sub	sp, sp, #0x80
000000000004f390	stp	x26, x25, [sp, #0x30]
000000000004f394	stp	x24, x23, [sp, #0x40]
000000000004f398	stp	x22, x21, [sp, #0x50]
000000000004f39c	stp	x20, x19, [sp, #0x60]
000000000004f3a0	stp	x29, x30, [sp, #0x70]
000000000004f3a4	add	x29, sp, #0x70
000000000004f3a8	mov	x21, x2
000000000004f3ac	nop
000000000004f3b0	ldr	x8, #0x27978 ; Objc class ref: FastaKmmMutableSet
000000000004f3b4	stp	x0, x8, [sp, #0x20]
000000000004f3b8	nop
000000000004f3bc	ldr	x1, #0x27524 ; Objc selector ref: init
000000000004f3c0	add	x0, sp, #0x20
000000000004f3c4	bl	0x55590 ; Objc message: -[[x0 super] init]
000000000004f3c8	mov	x20, x0
000000000004f3cc	cbz	x0, 0x4f4f4
000000000004f3d0	bl	_Kotlin_initRuntimeIfNeeded
000000000004f3d4	adrp	x22, 43 ; 0x7a000
000000000004f3d8	add	x22, x22, #0x2c0
000000000004f3dc	ldr	x25, [x22]
000000000004f3e0	mov	x0, x22
000000000004f3e4	blr	x25
000000000004f3e8	ldr	x24, [x0]
000000000004f3ec	add	x19, x24, #0x138
000000000004f3f0	ldaxr	w23, [x19]
000000000004f3f4	stlxr	w8, wzr, [x19]
000000000004f3f8	cbnz	w8, 0x4f3f0
000000000004f3fc	cmp	w23, #0x1
000000000004f400	b.ne	0x4f41c
000000000004f404	adr	x8, #0x44e85
000000000004f408	nop
000000000004f40c	ldarb	w8, [x8]
000000000004f410	tbz	w8, #0x0, 0x4f41c
000000000004f414	mov	x0, x19
000000000004f418	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f41c	mov	x8, sp
000000000004f420	add	x1, x8, #0x18
000000000004f424	str	xzr, [sp, #0x18]
000000000004f428	mov	x0, x22
000000000004f42c	blr	x25
000000000004f430	ldr	x9, [x0]
000000000004f434	ldr	x10, [x9, #0x110]
000000000004f438	str	x8, [x9, #0x110]
000000000004f43c	mov	x8, #0x400000000
000000000004f440	stp	x10, x8, [sp, #0x8]
000000000004f444	mov	w8, #0x7fffffff
000000000004f448	cmp	x21, x8
000000000004f44c	csel	w0, w21, w8, lo
000000000004f450	bl	_Kotlin_MutableSet_createWithCapacity
000000000004f454	mov	x21, x0
000000000004f458	nop
000000000004f45c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmMutableSet.setHolder
000000000004f460	add	x26, x20, x8
000000000004f464	mov	x0, x22
000000000004f468	blr	x25
000000000004f46c	mov	x22, x0
000000000004f470	ldr	x25, [x0]
000000000004f474	mov	w0, #0x1
000000000004f478	mov	w1, #0x28
000000000004f47c	bl	0x553d4 ; symbol stub for: _calloc
000000000004f480	ldr	x8, [x25, #0xa8]!
000000000004f484	sub	x9, x25, #0x8
000000000004f488	mov	x10, x0
000000000004f48c	str	x21, [x10, #0x10]!
000000000004f490	str	x9, [x0, #0x18]
000000000004f494	stp	x8, x25, [x0]
000000000004f498	str	x0, [x8, #0x8]
000000000004f49c	str	x0, [x25]
000000000004f4a0	ldr	x8, [x25, #0x10]
000000000004f4a4	add	x8, x8, #0x1
000000000004f4a8	str	x8, [x25, #0x10]
000000000004f4ac	str	x0, [x0, #0x20]
000000000004f4b0	stp	x21, x10, [x26]
000000000004f4b4	ldr	x8, [x22]
000000000004f4b8	ldr	x9, [sp, #0x8]
000000000004f4bc	str	x9, [x8, #0x110]
000000000004f4c0	cbz	x24, 0x4f4f4
000000000004f4c4	ldaxr	w8, [x19]
000000000004f4c8	stlxr	w9, w23, [x19]
000000000004f4cc	cbnz	w9, 0x4f4c4
000000000004f4d0	cbnz	w23, 0x4f4f4
000000000004f4d4	cmp	w8, #0x1
000000000004f4d8	b.ne	0x4f4f4
000000000004f4dc	adr	x8, #0x44dad
000000000004f4e0	nop
000000000004f4e4	ldarb	w8, [x8]
000000000004f4e8	tbz	w8, #0x0, 0x4f4f4
000000000004f4ec	mov	x0, x19
000000000004f4f0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f4f4	mov	x0, x20
000000000004f4f8	ldp	x29, x30, [sp, #0x70]
000000000004f4fc	ldp	x20, x19, [sp, #0x60]
000000000004f500	ldp	x22, x21, [sp, #0x50]
000000000004f504	ldp	x24, x23, [sp, #0x40]
000000000004f508	ldp	x26, x25, [sp, #0x30]
000000000004f50c	add	sp, sp, #0x80
000000000004f510	ret
000000000004f514	mov	x20, x0
000000000004f518	mov	x0, x22
000000000004f51c	blr	x25
000000000004f520	ldr	x8, [x0]
000000000004f524	ldr	x9, [sp, #0x8]
000000000004f528	str	x9, [x8, #0x110]
000000000004f52c	cbz	x24, 0x4f560
000000000004f530	ldaxr	w8, [x19]
000000000004f534	stlxr	w9, w23, [x19]
000000000004f538	cbnz	w9, 0x4f530
000000000004f53c	cbnz	w23, 0x4f560
000000000004f540	cmp	w8, #0x1
000000000004f544	b.ne	0x4f560
000000000004f548	adr	x8, #0x44d41
000000000004f54c	nop
000000000004f550	ldarb	w8, [x8]
000000000004f554	tbz	w8, #0x0, 0x4f560
000000000004f558	mov	x0, x19
000000000004f55c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f560	mov	x0, x20
000000000004f564	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet initWithObjects:count:]:
000000000004f568	stp	x22, x21, [sp, #-0x30]!
000000000004f56c	stp	x20, x19, [sp, #0x10]
000000000004f570	stp	x29, x30, [sp, #0x20]
000000000004f574	add	x29, sp, #0x20
000000000004f578	mov	x19, x3
000000000004f57c	mov	x20, x2
000000000004f580	nop
000000000004f584	ldr	x1, #0x2738c ; Objc selector ref: initWithCapacity:
000000000004f588	mov	x2, x3
000000000004f58c	bl	0x55584 ; Objc message: -[x0 initWithCapacity:]
000000000004f590	mov	x21, x0
000000000004f594	cmp	x0, #0x0
000000000004f598	ccmp	x19, #0x0, #0x4, ne
000000000004f59c	b.eq	0x4f5c0
000000000004f5a0	nop
000000000004f5a4	ldr	x22, #0x2726c ; Objc selector ref: addObject:
000000000004f5a8	ldr	x2, [x20], #0x8
000000000004f5ac	mov	x0, x21
000000000004f5b0	mov	x1, x22
000000000004f5b4	bl	0x55584 ; Objc message: -[x0 addObject:]
000000000004f5b8	subs	x19, x19, #0x1
000000000004f5bc	b.ne	0x4f5a8
000000000004f5c0	mov	x0, x21
000000000004f5c4	ldp	x29, x30, [sp, #0x20]
000000000004f5c8	ldp	x20, x19, [sp, #0x10]
000000000004f5cc	ldp	x22, x21, [sp], #0x30
000000000004f5d0	ret
-[KotlinMutableSet dealloc]:
000000000004f5d4	sub	sp, sp, #0x60
000000000004f5d8	stp	x26, x25, [sp, #0x10]
000000000004f5dc	stp	x24, x23, [sp, #0x20]
000000000004f5e0	stp	x22, x21, [sp, #0x30]
000000000004f5e4	stp	x20, x19, [sp, #0x40]
000000000004f5e8	stp	x29, x30, [sp, #0x50]
000000000004f5ec	add	x29, sp, #0x50
000000000004f5f0	mov	x19, x0
000000000004f5f4	nop
000000000004f5f8	ldrsw	x8, _OBJC_IVAR_$_FastaKmmMutableSet.setHolder
000000000004f5fc	add	x24, x0, x8
000000000004f600	bl	_Kotlin_initRuntimeIfNeeded
000000000004f604	adrp	x21, 43 ; 0x7a000
000000000004f608	add	x21, x21, #0x2c0
000000000004f60c	ldr	x25, [x21]
000000000004f610	mov	x0, x21
000000000004f614	blr	x25
000000000004f618	ldr	x8, [x0]
000000000004f61c	add	x20, x8, #0x138
000000000004f620	ldaxr	w22, [x20]
000000000004f624	stlxr	w8, wzr, [x20]
000000000004f628	cbnz	w8, 0x4f620
000000000004f62c	adr	x23, #0x44c5d
000000000004f630	nop
000000000004f634	cmp	w22, #0x1
000000000004f638	b.ne	0x4f64c
000000000004f63c	ldarb	w8, [x23]
000000000004f640	tbz	w8, #0x0, 0x4f64c
000000000004f644	mov	x0, x20
000000000004f648	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f64c	ldr	x8, [x24]
000000000004f650	cbz	x8, 0x4f66c
000000000004f654	ldr	x1, [x24, #0x8]
000000000004f658	mov	x0, x21
000000000004f65c	blr	x25
000000000004f660	ldr	x8, [x0]
000000000004f664	add	x0, x8, #0x8
000000000004f668	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004f66c	ldaxr	w8, [x20]
000000000004f670	stlxr	w9, w22, [x20]
000000000004f674	cbnz	w9, 0x4f66c
000000000004f678	cbnz	w22, 0x4f694
000000000004f67c	cmp	w8, #0x1
000000000004f680	b.ne	0x4f694
000000000004f684	ldarb	w8, [x23]
000000000004f688	tbz	w8, #0x0, 0x4f694
000000000004f68c	mov	x0, x20
000000000004f690	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f694	nop
000000000004f698	ldr	x8, #0x27690 ; Objc class ref: FastaKmmMutableSet
000000000004f69c	stp	x19, x8, [sp]
000000000004f6a0	nop
000000000004f6a4	ldr	x1, #0x271ec ; Objc selector ref: dealloc
000000000004f6a8	mov	x0, sp
000000000004f6ac	bl	0x55590 ; Objc message: -[[x0 super] dealloc]
000000000004f6b0	ldp	x29, x30, [sp, #0x50]
000000000004f6b4	ldp	x20, x19, [sp, #0x40]
000000000004f6b8	ldp	x22, x21, [sp, #0x30]
000000000004f6bc	ldp	x24, x23, [sp, #0x20]
000000000004f6c0	ldp	x26, x25, [sp, #0x10]
000000000004f6c4	add	sp, sp, #0x60
000000000004f6c8	ret
-[KotlinMutableSet initWithKSet:]:
000000000004f6cc	sub	sp, sp, #0x40
000000000004f6d0	stp	x22, x21, [sp, #0x10]
000000000004f6d4	stp	x20, x19, [sp, #0x20]
000000000004f6d8	stp	x29, x30, [sp, #0x30]
000000000004f6dc	add	x29, sp, #0x30
000000000004f6e0	mov	x19, x2
000000000004f6e4	nop
000000000004f6e8	ldr	x8, #0x27640 ; Objc class ref: FastaKmmMutableSet
000000000004f6ec	stp	x0, x8, [sp]
000000000004f6f0	nop
000000000004f6f4	ldr	x1, #0x271ec ; Objc selector ref: init
000000000004f6f8	mov	x0, sp
000000000004f6fc	bl	0x55590 ; Objc message: -[[x0 super] init]
000000000004f700	mov	x20, x0
000000000004f704	cbz	x0, 0x4f760
000000000004f708	nop
000000000004f70c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmMutableSet.setHolder
000000000004f710	add	x21, x20, x8
000000000004f714	adrp	x0, 43 ; 0x7a000
000000000004f718	add	x0, x0, #0x2c0
000000000004f71c	ldr	x8, [x0]
000000000004f720	blr	x8
000000000004f724	ldr	x22, [x0]
000000000004f728	mov	w0, #0x1
000000000004f72c	mov	w1, #0x28
000000000004f730	bl	0x553d4 ; symbol stub for: _calloc
000000000004f734	ldr	x8, [x22, #0xa8]!
000000000004f738	sub	x9, x22, #0x8
000000000004f73c	stp	x8, x22, [x0]
000000000004f740	str	x0, [x8, #0x8]
000000000004f744	str	x0, [x22]
000000000004f748	ldr	x8, [x22, #0x10]
000000000004f74c	add	x8, x8, #0x1
000000000004f750	str	x8, [x22, #0x10]
000000000004f754	stp	x9, x0, [x0, #0x18]
000000000004f758	str	x19, [x0, #0x10]!
000000000004f75c	stp	x19, x0, [x21]
000000000004f760	mov	x0, x20
000000000004f764	ldp	x29, x30, [sp, #0x30]
000000000004f768	ldp	x20, x19, [sp, #0x20]
000000000004f76c	ldp	x22, x21, [sp, #0x10]
000000000004f770	add	sp, sp, #0x40
000000000004f774	ret
-[KotlinMutableSet toKotlin:]:
000000000004f778	stp	x22, x21, [sp, #-0x30]!
000000000004f77c	stp	x20, x19, [sp, #0x10]
000000000004f780	stp	x29, x30, [sp, #0x20]
000000000004f784	add	x29, sp, #0x20
000000000004f788	mov	x19, x2
000000000004f78c	mov	x20, x0
000000000004f790	nop
000000000004f794	ldrsw	x21, _OBJC_IVAR_$_FastaKmmMutableSet.setHolder
000000000004f798	bl	_Kotlin_initRuntimeIfNeeded
000000000004f79c	ldr	x0, [x20, x21]
000000000004f7a0	str	x0, [x19]
000000000004f7a4	ldp	x29, x30, [sp, #0x20]
000000000004f7a8	ldp	x20, x19, [sp, #0x10]
000000000004f7ac	ldp	x22, x21, [sp], #0x30
000000000004f7b0	ret
-[KotlinMutableSet count]:
000000000004f7b4	stp	x22, x21, [sp, #-0x30]!
000000000004f7b8	stp	x20, x19, [sp, #0x10]
000000000004f7bc	stp	x29, x30, [sp, #0x20]
000000000004f7c0	add	x29, sp, #0x20
000000000004f7c4	mov	x20, x0
000000000004f7c8	bl	_Kotlin_initRuntimeIfNeeded
000000000004f7cc	adrp	x0, 43 ; 0x7a000
000000000004f7d0	add	x0, x0, #0x2c0
000000000004f7d4	ldr	x8, [x0]
000000000004f7d8	blr	x8
000000000004f7dc	ldr	x8, [x0]
000000000004f7e0	add	x19, x8, #0x138
000000000004f7e4	ldaxr	w21, [x19]
000000000004f7e8	stlxr	w8, wzr, [x19]
000000000004f7ec	cbnz	w8, 0x4f7e4
000000000004f7f0	cmp	w21, #0x1
000000000004f7f4	b.ne	0x4f810
000000000004f7f8	adr	x8, #0x44a91
000000000004f7fc	nop
000000000004f800	ldarb	w8, [x8]
000000000004f804	tbz	w8, #0x0, 0x4f810
000000000004f808	mov	x0, x19
000000000004f80c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f810	nop
000000000004f814	ldrsw	x22, _OBJC_IVAR_$_FastaKmmMutableSet.setHolder
000000000004f818	bl	_Kotlin_initRuntimeIfNeeded
000000000004f81c	ldr	x0, [x20, x22]
000000000004f820	bl	_Kotlin_Collection_getSize
000000000004f824	mov	x20, x0
000000000004f828	ldaxr	w8, [x19]
000000000004f82c	stlxr	w9, w21, [x19]
000000000004f830	cbnz	w9, 0x4f828
000000000004f834	cbnz	w21, 0x4f858
000000000004f838	cmp	w8, #0x1
000000000004f83c	b.ne	0x4f858
000000000004f840	adr	x8, #0x44a49
000000000004f844	nop
000000000004f848	ldarb	w8, [x8]
000000000004f84c	tbz	w8, #0x0, 0x4f858
000000000004f850	mov	x0, x19
000000000004f854	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f858	sxtw	x0, w20
000000000004f85c	ldp	x29, x30, [sp, #0x20]
000000000004f860	ldp	x20, x19, [sp, #0x10]
000000000004f864	ldp	x22, x21, [sp], #0x30
000000000004f868	ret
000000000004f86c	mov	x20, x0
000000000004f870	ldaxr	w8, [x19]
000000000004f874	stlxr	w9, w21, [x19]
000000000004f878	cbnz	w9, 0x4f870
000000000004f87c	cbnz	w21, 0x4f8a0
000000000004f880	cmp	w8, #0x1
000000000004f884	b.ne	0x4f8a0
000000000004f888	adr	x8, #0x44a01
000000000004f88c	nop
000000000004f890	ldarb	w8, [x8]
000000000004f894	tbz	w8, #0x0, 0x4f8a0
000000000004f898	mov	x0, x19
000000000004f89c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f8a0	mov	x0, x20
000000000004f8a4	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet member:]:
000000000004f8a8	stp	x24, x23, [sp, #-0x40]!
000000000004f8ac	stp	x22, x21, [sp, #0x10]
000000000004f8b0	stp	x20, x19, [sp, #0x20]
000000000004f8b4	stp	x29, x30, [sp, #0x30]
000000000004f8b8	add	x29, sp, #0x30
000000000004f8bc	mov	x20, x2
000000000004f8c0	mov	x21, x0
000000000004f8c4	bl	_Kotlin_initRuntimeIfNeeded
000000000004f8c8	adrp	x0, 43 ; 0x7a000
000000000004f8cc	add	x0, x0, #0x2c0
000000000004f8d0	ldr	x8, [x0]
000000000004f8d4	blr	x8
000000000004f8d8	ldr	x8, [x0]
000000000004f8dc	add	x19, x8, #0x138
000000000004f8e0	ldaxr	w22, [x19]
000000000004f8e4	stlxr	w8, wzr, [x19]
000000000004f8e8	cbnz	w8, 0x4f8e0
000000000004f8ec	cmp	w22, #0x1
000000000004f8f0	b.ne	0x4f90c
000000000004f8f4	adr	x8, #0x44995
000000000004f8f8	nop
000000000004f8fc	ldarb	w8, [x8]
000000000004f900	tbz	w8, #0x0, 0x4f90c
000000000004f904	mov	x0, x19
000000000004f908	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f90c	nop
000000000004f910	ldrsw	x23, _OBJC_IVAR_$_FastaKmmMutableSet.setHolder
000000000004f914	bl	_Kotlin_initRuntimeIfNeeded
000000000004f918	ldr	x0, [x21, x23]
000000000004f91c	mov	x1, x20
000000000004f920	bl	__ZL15KSet_getElementP9ObjHeaderP11objc_object
000000000004f924	mov	x20, x0
000000000004f928	ldaxr	w8, [x19]
000000000004f92c	stlxr	w9, w22, [x19]
000000000004f930	cbnz	w9, 0x4f928
000000000004f934	cbnz	w22, 0x4f958
000000000004f938	cmp	w8, #0x1
000000000004f93c	b.ne	0x4f958
000000000004f940	adr	x8, #0x44949
000000000004f944	nop
000000000004f948	ldarb	w8, [x8]
000000000004f94c	tbz	w8, #0x0, 0x4f958
000000000004f950	mov	x0, x19
000000000004f954	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f958	mov	x0, x20
000000000004f95c	ldp	x29, x30, [sp, #0x30]
000000000004f960	ldp	x20, x19, [sp, #0x20]
000000000004f964	ldp	x22, x21, [sp, #0x10]
000000000004f968	ldp	x24, x23, [sp], #0x40
000000000004f96c	ret
000000000004f970	mov	x20, x0
000000000004f974	ldaxr	w8, [x19]
000000000004f978	stlxr	w9, w22, [x19]
000000000004f97c	cbnz	w9, 0x4f974
000000000004f980	cbnz	w22, 0x4f9a4
000000000004f984	cmp	w8, #0x1
000000000004f988	b.ne	0x4f9a4
000000000004f98c	adr	x8, #0x448fd
000000000004f990	nop
000000000004f994	ldarb	w8, [x8]
000000000004f998	tbz	w8, #0x0, 0x4f9a4
000000000004f99c	mov	x0, x19
000000000004f9a0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f9a4	mov	x0, x20
000000000004f9a8	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet containsObject:]:
000000000004f9ac	sub	sp, sp, #0x70
000000000004f9b0	stp	x26, x25, [sp, #0x20]
000000000004f9b4	stp	x24, x23, [sp, #0x30]
000000000004f9b8	stp	x22, x21, [sp, #0x40]
000000000004f9bc	stp	x20, x19, [sp, #0x50]
000000000004f9c0	stp	x29, x30, [sp, #0x60]
000000000004f9c4	add	x29, sp, #0x60
000000000004f9c8	mov	x21, x2
000000000004f9cc	mov	x22, x0
000000000004f9d0	bl	_Kotlin_initRuntimeIfNeeded
000000000004f9d4	adrp	x20, 43 ; 0x7a000
000000000004f9d8	add	x20, x20, #0x2c0
000000000004f9dc	ldr	x24, [x20]
000000000004f9e0	mov	x0, x20
000000000004f9e4	blr	x24
000000000004f9e8	ldr	x8, [x0]
000000000004f9ec	add	x19, x8, #0x138
000000000004f9f0	ldaxr	w23, [x19]
000000000004f9f4	stlxr	w8, wzr, [x19]
000000000004f9f8	cbnz	w8, 0x4f9f0
000000000004f9fc	cmp	w23, #0x1
000000000004fa00	b.ne	0x4fa1c
000000000004fa04	adr	x8, #0x44885
000000000004fa08	nop
000000000004fa0c	ldarb	w8, [x8]
000000000004fa10	tbz	w8, #0x0, 0x4fa1c
000000000004fa14	mov	x0, x19
000000000004fa18	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fa1c	mov	x25, sp
000000000004fa20	str	xzr, [sp, #0x18]
000000000004fa24	mov	x0, x20
000000000004fa28	blr	x24
000000000004fa2c	ldr	x8, [x0]
000000000004fa30	ldr	x9, [x8, #0x110]
000000000004fa34	str	x25, [x8, #0x110]
000000000004fa38	mov	x8, #0x400000000
000000000004fa3c	stp	x9, x8, [sp, #0x8]
000000000004fa40	nop
000000000004fa44	ldrsw	x26, _OBJC_IVAR_$_FastaKmmMutableSet.setHolder
000000000004fa48	bl	_Kotlin_initRuntimeIfNeeded
000000000004fa4c	ldr	x22, [x22, x26]
000000000004fa50	nop
000000000004fa54	ldr	x0, #0x27244 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004fa58	nop
000000000004fa5c	ldr	x1, #0x26f94 ; Objc selector ref: null
000000000004fa60	bl	0x55584 ; Objc message: +[NSNull null]
000000000004fa64	cmp	x0, x21
000000000004fa68	b.eq	0x4fa8c
000000000004fa6c	cbz	x21, 0x4fa8c
000000000004fa70	add	x2, x25, #0x18
000000000004fa74	nop
000000000004fa78	ldr	x1, #0x44a60
000000000004fa7c	mov	x0, x21
000000000004fa80	bl	0x55584 ; Objc message: -[x0 null]
000000000004fa84	mov	x1, x0
000000000004fa88	b	0x4fa94
000000000004fa8c	mov	x1, #0x0
000000000004fa90	str	xzr, [sp, #0x18]
000000000004fa94	mov	x0, x22
000000000004fa98	bl	_Kotlin_Set_contains
000000000004fa9c	mov	x21, x0
000000000004faa0	mov	x0, x20
000000000004faa4	blr	x24
000000000004faa8	ldr	x8, [x0]
000000000004faac	ldr	x9, [sp, #0x8]
000000000004fab0	str	x9, [x8, #0x110]
000000000004fab4	ldaxr	w8, [x19]
000000000004fab8	stlxr	w9, w23, [x19]
000000000004fabc	cbnz	w9, 0x4fab4
000000000004fac0	cbnz	w23, 0x4fae4
000000000004fac4	cmp	w8, #0x1
000000000004fac8	b.ne	0x4fae4
000000000004facc	adr	x8, #0x447bd
000000000004fad0	nop
000000000004fad4	ldarb	w8, [x8]
000000000004fad8	tbz	w8, #0x0, 0x4fae4
000000000004fadc	mov	x0, x19
000000000004fae0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fae4	mov	x0, x21
000000000004fae8	ldp	x29, x30, [sp, #0x60]
000000000004faec	ldp	x20, x19, [sp, #0x50]
000000000004faf0	ldp	x22, x21, [sp, #0x40]
000000000004faf4	ldp	x24, x23, [sp, #0x30]
000000000004faf8	ldp	x26, x25, [sp, #0x20]
000000000004fafc	add	sp, sp, #0x70
000000000004fb00	ret
000000000004fb04	mov	x21, x0
000000000004fb08	mov	x0, x20
000000000004fb0c	blr	x24
000000000004fb10	ldr	x8, [x0]
000000000004fb14	ldr	x9, [sp, #0x8]
000000000004fb18	str	x9, [x8, #0x110]
000000000004fb1c	ldaxr	w8, [x19]
000000000004fb20	stlxr	w9, w23, [x19]
000000000004fb24	cbnz	w9, 0x4fb1c
000000000004fb28	cbnz	w23, 0x4fb4c
000000000004fb2c	cmp	w8, #0x1
000000000004fb30	b.ne	0x4fb4c
000000000004fb34	adr	x8, #0x44755
000000000004fb38	nop
000000000004fb3c	ldarb	w8, [x8]
000000000004fb40	tbz	w8, #0x0, 0x4fb4c
000000000004fb44	mov	x0, x19
000000000004fb48	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fb4c	mov	x0, x21
000000000004fb50	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet objectEnumerator]:
000000000004fb54	sub	sp, sp, #0x70
000000000004fb58	stp	x26, x25, [sp, #0x20]
000000000004fb5c	stp	x24, x23, [sp, #0x30]
000000000004fb60	stp	x22, x21, [sp, #0x40]
000000000004fb64	stp	x20, x19, [sp, #0x50]
000000000004fb68	stp	x29, x30, [sp, #0x60]
000000000004fb6c	add	x29, sp, #0x60
000000000004fb70	mov	x21, x0
000000000004fb74	bl	_Kotlin_initRuntimeIfNeeded
000000000004fb78	adrp	x20, 43 ; 0x7a000
000000000004fb7c	add	x20, x20, #0x2c0
000000000004fb80	ldr	x25, [x20]
000000000004fb84	mov	x0, x20
000000000004fb88	blr	x25
000000000004fb8c	ldr	x8, [x0]
000000000004fb90	add	x19, x8, #0x138
000000000004fb94	ldaxr	w24, [x19]
000000000004fb98	stlxr	w8, wzr, [x19]
000000000004fb9c	cbnz	w8, 0x4fb94
000000000004fba0	cmp	w24, #0x1
000000000004fba4	b.ne	0x4fbc0
000000000004fba8	adr	x8, #0x446e1
000000000004fbac	nop
000000000004fbb0	ldarb	w8, [x8]
000000000004fbb4	tbz	w8, #0x0, 0x4fbc0
000000000004fbb8	mov	x0, x19
000000000004fbbc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fbc0	mov	x8, sp
000000000004fbc4	add	x23, x8, #0x18
000000000004fbc8	str	xzr, [sp, #0x18]
000000000004fbcc	mov	x0, x20
000000000004fbd0	blr	x25
000000000004fbd4	ldr	x9, [x0]
000000000004fbd8	ldr	x10, [x9, #0x110]
000000000004fbdc	str	x8, [x9, #0x110]
000000000004fbe0	mov	x8, #0x400000000
000000000004fbe4	stp	x10, x8, [sp, #0x8]
000000000004fbe8	nop
000000000004fbec	ldr	x22, #0x270cc ; Objc class ref: FastaKmmKIteratorAsNSEnumerator
000000000004fbf0	nop
000000000004fbf4	ldrsw	x26, _OBJC_IVAR_$_FastaKmmMutableSet.setHolder
000000000004fbf8	bl	_Kotlin_initRuntimeIfNeeded
000000000004fbfc	ldr	x0, [x21, x26]
000000000004fc00	mov	x1, x23
000000000004fc04	bl	_Kotlin_Set_iterator
000000000004fc08	mov	x2, x0
000000000004fc0c	nop
000000000004fc10	ldr	x1, #0x26c78 ; Objc selector ref: createWithKIterator:
000000000004fc14	mov	x0, x22
000000000004fc18	bl	0x55584 ; Objc message: +[FastaKmmKIteratorAsNSEnumerator createWithKIterator:]
000000000004fc1c	mov	x21, x0
000000000004fc20	mov	x0, x20
000000000004fc24	blr	x25
000000000004fc28	ldr	x8, [x0]
000000000004fc2c	ldr	x9, [sp, #0x8]
000000000004fc30	str	x9, [x8, #0x110]
000000000004fc34	ldaxr	w8, [x19]
000000000004fc38	stlxr	w9, w24, [x19]
000000000004fc3c	cbnz	w9, 0x4fc34
000000000004fc40	cbnz	w24, 0x4fc64
000000000004fc44	cmp	w8, #0x1
000000000004fc48	b.ne	0x4fc64
000000000004fc4c	adr	x8, #0x4463d
000000000004fc50	nop
000000000004fc54	ldarb	w8, [x8]
000000000004fc58	tbz	w8, #0x0, 0x4fc64
000000000004fc5c	mov	x0, x19
000000000004fc60	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fc64	mov	x0, x21
000000000004fc68	ldp	x29, x30, [sp, #0x60]
000000000004fc6c	ldp	x20, x19, [sp, #0x50]
000000000004fc70	ldp	x22, x21, [sp, #0x40]
000000000004fc74	ldp	x24, x23, [sp, #0x30]
000000000004fc78	ldp	x26, x25, [sp, #0x20]
000000000004fc7c	add	sp, sp, #0x70
000000000004fc80	ret
000000000004fc84	mov	x21, x0
000000000004fc88	mov	x0, x20
000000000004fc8c	blr	x25
000000000004fc90	ldr	x8, [x0]
000000000004fc94	ldr	x9, [sp, #0x8]
000000000004fc98	str	x9, [x8, #0x110]
000000000004fc9c	ldaxr	w8, [x19]
000000000004fca0	stlxr	w9, w24, [x19]
000000000004fca4	cbnz	w9, 0x4fc9c
000000000004fca8	cbnz	w24, 0x4fccc
000000000004fcac	cmp	w8, #0x1
000000000004fcb0	b.ne	0x4fccc
000000000004fcb4	adr	x8, #0x445d5
000000000004fcb8	nop
000000000004fcbc	ldarb	w8, [x8]
000000000004fcc0	tbz	w8, #0x0, 0x4fccc
000000000004fcc4	mov	x0, x19
000000000004fcc8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fccc	mov	x0, x21
000000000004fcd0	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet addObject:]:
000000000004fcd4	sub	sp, sp, #0x70
000000000004fcd8	stp	x26, x25, [sp, #0x20]
000000000004fcdc	stp	x24, x23, [sp, #0x30]
000000000004fce0	stp	x22, x21, [sp, #0x40]
000000000004fce4	stp	x20, x19, [sp, #0x50]
000000000004fce8	stp	x29, x30, [sp, #0x60]
000000000004fcec	add	x29, sp, #0x60
000000000004fcf0	mov	x21, x2
000000000004fcf4	mov	x22, x0
000000000004fcf8	bl	_Kotlin_initRuntimeIfNeeded
000000000004fcfc	adrp	x20, 43 ; 0x7a000
000000000004fd00	add	x20, x20, #0x2c0
000000000004fd04	ldr	x24, [x20]
000000000004fd08	mov	x0, x20
000000000004fd0c	blr	x24
000000000004fd10	ldr	x8, [x0]
000000000004fd14	add	x19, x8, #0x138
000000000004fd18	ldaxr	w23, [x19]
000000000004fd1c	stlxr	w8, wzr, [x19]
000000000004fd20	cbnz	w8, 0x4fd18
000000000004fd24	cmp	w23, #0x1
000000000004fd28	b.ne	0x4fd44
000000000004fd2c	adr	x8, #0x4455d
000000000004fd30	nop
000000000004fd34	ldarb	w8, [x8]
000000000004fd38	tbz	w8, #0x0, 0x4fd44
000000000004fd3c	mov	x0, x19
000000000004fd40	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fd44	mov	x25, sp
000000000004fd48	str	xzr, [sp, #0x18]
000000000004fd4c	mov	x0, x20
000000000004fd50	blr	x24
000000000004fd54	ldr	x8, [x0]
000000000004fd58	ldr	x9, [x8, #0x110]
000000000004fd5c	str	x25, [x8, #0x110]
000000000004fd60	mov	x8, #0x400000000
000000000004fd64	stp	x9, x8, [sp, #0x8]
000000000004fd68	nop
000000000004fd6c	ldrsw	x26, _OBJC_IVAR_$_FastaKmmMutableSet.setHolder
000000000004fd70	bl	_Kotlin_initRuntimeIfNeeded
000000000004fd74	ldr	x22, [x22, x26]
000000000004fd78	nop
000000000004fd7c	ldr	x0, #0x26f1c ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004fd80	nop
000000000004fd84	ldr	x1, #0x26c6c ; Objc selector ref: null
000000000004fd88	bl	0x55584 ; Objc message: +[NSNull null]
000000000004fd8c	cmp	x0, x21
000000000004fd90	b.eq	0x4fdb4
000000000004fd94	cbz	x21, 0x4fdb4
000000000004fd98	add	x2, x25, #0x18
000000000004fd9c	nop
000000000004fda0	ldr	x1, #0x44738
000000000004fda4	mov	x0, x21
000000000004fda8	bl	0x55584 ; Objc message: -[x0 null]
000000000004fdac	mov	x1, x0
000000000004fdb0	b	0x4fdbc
000000000004fdb4	mov	x1, #0x0
000000000004fdb8	str	xzr, [sp, #0x18]
000000000004fdbc	mov	x0, x22
000000000004fdc0	bl	_Kotlin_MutableCollection_addObject
000000000004fdc4	mov	x0, x20
000000000004fdc8	blr	x24
000000000004fdcc	ldr	x8, [x0]
000000000004fdd0	ldr	x9, [sp, #0x8]
000000000004fdd4	str	x9, [x8, #0x110]
000000000004fdd8	ldaxr	w8, [x19]
000000000004fddc	stlxr	w9, w23, [x19]
000000000004fde0	cbnz	w9, 0x4fdd8
000000000004fde4	cbnz	w23, 0x4fe08
000000000004fde8	cmp	w8, #0x1
000000000004fdec	b.ne	0x4fe08
000000000004fdf0	adr	x8, #0x44499
000000000004fdf4	nop
000000000004fdf8	ldarb	w8, [x8]
000000000004fdfc	tbz	w8, #0x0, 0x4fe08
000000000004fe00	mov	x0, x19
000000000004fe04	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fe08	ldp	x29, x30, [sp, #0x60]
000000000004fe0c	ldp	x20, x19, [sp, #0x50]
000000000004fe10	ldp	x22, x21, [sp, #0x40]
000000000004fe14	ldp	x24, x23, [sp, #0x30]
000000000004fe18	ldp	x26, x25, [sp, #0x20]
000000000004fe1c	add	sp, sp, #0x70
000000000004fe20	ret
000000000004fe24	mov	x21, x0
000000000004fe28	mov	x0, x20
000000000004fe2c	blr	x24
000000000004fe30	ldr	x8, [x0]
000000000004fe34	ldr	x9, [sp, #0x8]
000000000004fe38	str	x9, [x8, #0x110]
000000000004fe3c	ldaxr	w8, [x19]
000000000004fe40	stlxr	w9, w23, [x19]
000000000004fe44	cbnz	w9, 0x4fe3c
000000000004fe48	cbnz	w23, 0x4fe6c
000000000004fe4c	cmp	w8, #0x1
000000000004fe50	b.ne	0x4fe6c
000000000004fe54	adr	x8, #0x44435
000000000004fe58	nop
000000000004fe5c	ldarb	w8, [x8]
000000000004fe60	tbz	w8, #0x0, 0x4fe6c
000000000004fe64	mov	x0, x19
000000000004fe68	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fe6c	mov	x0, x21
000000000004fe70	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet removeObject:]:
000000000004fe74	sub	sp, sp, #0x90
000000000004fe78	stp	x26, x25, [sp, #0x40]
000000000004fe7c	stp	x24, x23, [sp, #0x50]
000000000004fe80	stp	x22, x21, [sp, #0x60]
000000000004fe84	stp	x20, x19, [sp, #0x70]
000000000004fe88	stp	x29, x30, [sp, #0x80]
000000000004fe8c	add	x29, sp, #0x80
000000000004fe90	mov	x22, x2
000000000004fe94	mov	x21, x0
000000000004fe98	bl	_Kotlin_initRuntimeIfNeeded
000000000004fe9c	adrp	x20, 43 ; 0x7a000
000000000004fea0	add	x20, x20, #0x2c0
000000000004fea4	ldr	x24, [x20]
000000000004fea8	mov	x0, x20
000000000004feac	blr	x24
000000000004feb0	ldr	x8, [x0]
000000000004feb4	add	x19, x8, #0x138
000000000004feb8	ldaxr	w23, [x19]
000000000004febc	stlxr	w8, wzr, [x19]
000000000004fec0	cbnz	w8, 0x4feb8
000000000004fec4	cmp	w23, #0x1
000000000004fec8	b.ne	0x4fee4
000000000004fecc	adr	x8, #0x443bd
000000000004fed0	nop
000000000004fed4	ldarb	w8, [x8]
000000000004fed8	tbz	w8, #0x0, 0x4fee4
000000000004fedc	mov	x0, x19
000000000004fee0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fee4	add	x25, sp, #0x8
000000000004fee8	str	xzr, [sp, #0x20]
000000000004feec	mov	x0, x20
000000000004fef0	blr	x24
000000000004fef4	ldr	x8, [x0]
000000000004fef8	ldr	x9, [x8, #0x110]
000000000004fefc	str	x25, [x8, #0x110]
000000000004ff00	mov	x8, #0x400000000
000000000004ff04	stp	x9, x8, [sp, #0x10]
000000000004ff08	nop
000000000004ff0c	ldrsw	x26, _OBJC_IVAR_$_FastaKmmMutableSet.setHolder
000000000004ff10	bl	_Kotlin_initRuntimeIfNeeded
000000000004ff14	ldr	x21, [x21, x26]
000000000004ff18	nop
000000000004ff1c	ldr	x0, #0x26d7c ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004ff20	nop
000000000004ff24	ldr	x1, #0x26acc ; Objc selector ref: null
000000000004ff28	bl	0x55584 ; Objc message: +[NSNull null]
000000000004ff2c	cmp	x0, x22
000000000004ff30	b.eq	0x4ff54
000000000004ff34	cbz	x22, 0x4ff54
000000000004ff38	add	x2, x25, #0x18
000000000004ff3c	nop
000000000004ff40	ldr	x1, #0x44598
000000000004ff44	mov	x0, x22
000000000004ff48	bl	0x55584 ; Objc message: -[x0 null]
000000000004ff4c	mov	x22, x0
000000000004ff50	b	0x4ff5c
000000000004ff54	mov	x22, #0x0
000000000004ff58	str	xzr, [sp, #0x20]
000000000004ff5c	str	xzr, [sp, #0x28]
000000000004ff60	mov	x0, x20
000000000004ff64	blr	x24
000000000004ff68	ldr	x8, [x0]
000000000004ff6c	ldr	x9, [x8, #0x110]
000000000004ff70	add	x10, sp, #0x28
000000000004ff74	str	x10, [x8, #0x110]
000000000004ff78	mov	x8, #0x300000000
000000000004ff7c	stp	x9, x8, [sp, #0x30]
000000000004ff80	adr	x25, #0x44309
000000000004ff84	nop
000000000004ff88	ldarb	w8, [x25]
000000000004ff8c	tbz	w8, #0x0, 0x4ff94
000000000004ff90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004ff94	ldr	x8, [x21]
000000000004ff98	and	x8, x8, #0xfffffffffffffffc
000000000004ff9c	ldr	x8, [x8]
000000000004ffa0	ldr	w9, [x8, #0x3c]
000000000004ffa4	ldr	x8, [x8, #0x40]
000000000004ffa8	tbnz	w9, #0x1f, 0x4ffb8
000000000004ffac	mov	w10, #0x15
000000000004ffb0	and	x9, x9, x10
000000000004ffb4	b	0x5003c
000000000004ffb8	neg	w10, w9
000000000004ffbc	mvn	w9, w9
000000000004ffc0	cmp	w10, #0x9
000000000004ffc4	b.ge	0x4fffc
000000000004ffc8	cmp	w10, #0x2
000000000004ffcc	b.lt	0x50030
000000000004ffd0	mov	x10, #0x0
000000000004ffd4	mov	x11, x8
000000000004ffd8	ldr	w12, [x11]
000000000004ffdc	cmp	w12, #0x14
000000000004ffe0	b.gt	0x50038
000000000004ffe4	add	x10, x10, #0x1
000000000004ffe8	add	x11, x11, #0x10
000000000004ffec	cmp	x9, x10
000000000004fff0	b.ne	0x4ffd8
000000000004fff4	mov	x10, x9
000000000004fff8	b	0x50038
000000000004fffc	mov	w10, #0x0
0000000000050000	add	w11, w9, w10
0000000000050004	cmp	w11, #0x0
0000000000050008	cinc	w11, w11, lt
000000000005000c	asr	w11, w11, #1
0000000000050010	sbfiz	x12, x11, #4, #32
0000000000050014	ldr	w12, [x8, x12]
0000000000050018	cmp	w12, #0x15
000000000005001c	csinc	w10, w10, w11, ge
0000000000050020	csel	w9, w9, w11, lt
0000000000050024	cmp	w10, w9
0000000000050028	b.lt	0x50000
000000000005002c	b	0x50038
0000000000050030	mov	w10, #0x0
0000000000050034	b	0x50038
0000000000050038	sxtw	x9, w10
000000000005003c	add	x8, x8, x9, lsl #4
0000000000050040	ldr	x8, [x8, #0x8]
0000000000050044	ldr	x8, [x8, #0x20]
0000000000050048	mov	x0, x21
000000000005004c	mov	x1, x22
0000000000050050	blr	x8
0000000000050054	mov	x0, x20
0000000000050058	blr	x24
000000000005005c	ldr	x8, [x0]
0000000000050060	ldr	x9, [sp, #0x10]
0000000000050064	str	x9, [x8, #0x110]
0000000000050068	ldaxr	w8, [x19]
000000000005006c	stlxr	w9, w23, [x19]
0000000000050070	cbnz	w9, 0x50068
0000000000050074	cbnz	w23, 0x50090
0000000000050078	cmp	w8, #0x1
000000000005007c	b.ne	0x50090
0000000000050080	ldarb	w8, [x25]
0000000000050084	tbz	w8, #0x0, 0x50090
0000000000050088	mov	x0, x19
000000000005008c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050090	ldp	x29, x30, [sp, #0x80]
0000000000050094	ldp	x20, x19, [sp, #0x70]
0000000000050098	ldp	x22, x21, [sp, #0x60]
000000000005009c	ldp	x24, x23, [sp, #0x50]
00000000000500a0	ldp	x26, x25, [sp, #0x40]
00000000000500a4	add	sp, sp, #0x90
00000000000500a8	ret
00000000000500ac	mov	x21, x0
00000000000500b0	mov	x0, x20
00000000000500b4	blr	x24
00000000000500b8	ldr	x8, [x0]
00000000000500bc	ldr	x9, [sp, #0x30]
00000000000500c0	str	x9, [x8, #0x110]
00000000000500c4	b	0x500d8
00000000000500c8	mov	x21, x0
00000000000500cc	mov	x0, x20
00000000000500d0	blr	x24
00000000000500d4	ldr	x8, [x0]
00000000000500d8	ldr	x9, [sp, #0x10]
00000000000500dc	str	x9, [x8, #0x110]
00000000000500e0	ldaxr	w8, [x19]
00000000000500e4	stlxr	w9, w23, [x19]
00000000000500e8	cbnz	w9, 0x500e0
00000000000500ec	cbnz	w23, 0x50110
00000000000500f0	cmp	w8, #0x1
00000000000500f4	b.ne	0x50110
00000000000500f8	adr	x8, #0x44191
00000000000500fc	nop
0000000000050100	ldarb	w8, [x8]
0000000000050104	tbz	w8, #0x0, 0x50110
0000000000050108	mov	x0, x19
000000000005010c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050110	mov	x0, x21
0000000000050114	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KMapAsNSDictionary dealloc]:
0000000000050118	sub	sp, sp, #0x60
000000000005011c	stp	x26, x25, [sp, #0x10]
0000000000050120	stp	x24, x23, [sp, #0x20]
0000000000050124	stp	x22, x21, [sp, #0x30]
0000000000050128	stp	x20, x19, [sp, #0x40]
000000000005012c	stp	x29, x30, [sp, #0x50]
0000000000050130	add	x29, sp, #0x50
0000000000050134	mov	x19, x0
0000000000050138	nop
000000000005013c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmKMapAsNSDictionary.mapHolder
0000000000050140	add	x24, x0, x8
0000000000050144	bl	_Kotlin_initRuntimeIfNeeded
0000000000050148	adrp	x21, 42 ; 0x7a000
000000000005014c	add	x21, x21, #0x2c0
0000000000050150	ldr	x25, [x21]
0000000000050154	mov	x0, x21
0000000000050158	blr	x25
000000000005015c	ldr	x8, [x0]
0000000000050160	add	x20, x8, #0x138
0000000000050164	ldaxr	w22, [x20]
0000000000050168	stlxr	w8, wzr, [x20]
000000000005016c	cbnz	w8, 0x50164
0000000000050170	adr	x23, #0x44119
0000000000050174	nop
0000000000050178	cmp	w22, #0x1
000000000005017c	b.ne	0x50190
0000000000050180	ldarb	w8, [x23]
0000000000050184	tbz	w8, #0x0, 0x50190
0000000000050188	mov	x0, x20
000000000005018c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050190	ldr	x8, [x24]
0000000000050194	cbz	x8, 0x501b0
0000000000050198	ldr	x1, [x24, #0x8]
000000000005019c	mov	x0, x21
00000000000501a0	blr	x25
00000000000501a4	ldr	x8, [x0]
00000000000501a8	add	x0, x8, #0x8
00000000000501ac	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
00000000000501b0	ldaxr	w8, [x20]
00000000000501b4	stlxr	w9, w22, [x20]
00000000000501b8	cbnz	w9, 0x501b0
00000000000501bc	cbnz	w22, 0x501d8
00000000000501c0	cmp	w8, #0x1
00000000000501c4	b.ne	0x501d8
00000000000501c8	ldarb	w8, [x23]
00000000000501cc	tbz	w8, #0x0, 0x501d8
00000000000501d0	mov	x0, x20
00000000000501d4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000501d8	nop
00000000000501dc	ldr	x8, #0x26b54 ; Objc class ref: FastaKmmKMapAsNSDictionary
00000000000501e0	stp	x19, x8, [sp]
00000000000501e4	nop
00000000000501e8	ldr	x1, #0x266a8 ; Objc selector ref: dealloc
00000000000501ec	mov	x0, sp
00000000000501f0	bl	0x55590 ; Objc message: -[[x0 super] dealloc]
00000000000501f4	ldp	x29, x30, [sp, #0x50]
00000000000501f8	ldp	x20, x19, [sp, #0x40]
00000000000501fc	ldp	x22, x21, [sp, #0x30]
0000000000050200	ldp	x24, x23, [sp, #0x20]
0000000000050204	ldp	x26, x25, [sp, #0x10]
0000000000050208	add	sp, sp, #0x60
000000000005020c	ret
-[KMapAsNSDictionary toKotlin:]:
0000000000050210	stp	x22, x21, [sp, #-0x30]!
0000000000050214	stp	x20, x19, [sp, #0x10]
0000000000050218	stp	x29, x30, [sp, #0x20]
000000000005021c	add	x29, sp, #0x20
0000000000050220	mov	x19, x2
0000000000050224	mov	x20, x0
0000000000050228	nop
000000000005022c	ldrsw	x21, _OBJC_IVAR_$_FastaKmmKMapAsNSDictionary.mapHolder
0000000000050230	bl	_Kotlin_initRuntimeIfNeeded
0000000000050234	ldr	x0, [x20, x21]
0000000000050238	str	x0, [x19]
000000000005023c	ldp	x29, x30, [sp, #0x20]
0000000000050240	ldp	x20, x19, [sp, #0x10]
0000000000050244	ldp	x22, x21, [sp], #0x30
0000000000050248	ret
-[KMapAsNSDictionary count]:
000000000005024c	stp	x22, x21, [sp, #-0x30]!
0000000000050250	stp	x20, x19, [sp, #0x10]
0000000000050254	stp	x29, x30, [sp, #0x20]
0000000000050258	add	x29, sp, #0x20
000000000005025c	mov	x20, x0
0000000000050260	bl	_Kotlin_initRuntimeIfNeeded
0000000000050264	adrp	x0, 42 ; 0x7a000
0000000000050268	add	x0, x0, #0x2c0
000000000005026c	ldr	x8, [x0]
0000000000050270	blr	x8
0000000000050274	ldr	x8, [x0]
0000000000050278	add	x19, x8, #0x138
000000000005027c	ldaxr	w21, [x19]
0000000000050280	stlxr	w8, wzr, [x19]
0000000000050284	cbnz	w8, 0x5027c
0000000000050288	cmp	w21, #0x1
000000000005028c	b.ne	0x502a8
0000000000050290	adr	x8, #0x43ff9
0000000000050294	nop
0000000000050298	ldarb	w8, [x8]
000000000005029c	tbz	w8, #0x0, 0x502a8
00000000000502a0	mov	x0, x19
00000000000502a4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000502a8	nop
00000000000502ac	ldrsw	x22, _OBJC_IVAR_$_FastaKmmKMapAsNSDictionary.mapHolder
00000000000502b0	bl	_Kotlin_initRuntimeIfNeeded
00000000000502b4	ldr	x0, [x20, x22]
00000000000502b8	bl	_Kotlin_Map_getSize
00000000000502bc	mov	x20, x0
00000000000502c0	ldaxr	w8, [x19]
00000000000502c4	stlxr	w9, w21, [x19]
00000000000502c8	cbnz	w9, 0x502c0
00000000000502cc	cbnz	w21, 0x502f0
00000000000502d0	cmp	w8, #0x1
00000000000502d4	b.ne	0x502f0
00000000000502d8	adr	x8, #0x43fb1
00000000000502dc	nop
00000000000502e0	ldarb	w8, [x8]
00000000000502e4	tbz	w8, #0x0, 0x502f0
00000000000502e8	mov	x0, x19
00000000000502ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000502f0	sxtw	x0, w20
00000000000502f4	ldp	x29, x30, [sp, #0x20]
00000000000502f8	ldp	x20, x19, [sp, #0x10]
00000000000502fc	ldp	x22, x21, [sp], #0x30
0000000000050300	ret
0000000000050304	mov	x20, x0
0000000000050308	ldaxr	w8, [x19]
000000000005030c	stlxr	w9, w21, [x19]
0000000000050310	cbnz	w9, 0x50308
0000000000050314	cbnz	w21, 0x50338
0000000000050318	cmp	w8, #0x1
000000000005031c	b.ne	0x50338
0000000000050320	adr	x8, #0x43f69
0000000000050324	nop
0000000000050328	ldarb	w8, [x8]
000000000005032c	tbz	w8, #0x0, 0x50338
0000000000050330	mov	x0, x19
0000000000050334	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050338	mov	x0, x20
000000000005033c	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KMapAsNSDictionary objectForKey:]:
0000000000050340	stp	x24, x23, [sp, #-0x40]!
0000000000050344	stp	x22, x21, [sp, #0x10]
0000000000050348	stp	x20, x19, [sp, #0x20]
000000000005034c	stp	x29, x30, [sp, #0x30]
0000000000050350	add	x29, sp, #0x30
0000000000050354	mov	x20, x2
0000000000050358	mov	x21, x0
000000000005035c	bl	_Kotlin_initRuntimeIfNeeded
0000000000050360	adrp	x0, 42 ; 0x7a000
0000000000050364	add	x0, x0, #0x2c0
0000000000050368	ldr	x8, [x0]
000000000005036c	blr	x8
0000000000050370	ldr	x8, [x0]
0000000000050374	add	x19, x8, #0x138
0000000000050378	ldaxr	w22, [x19]
000000000005037c	stlxr	w8, wzr, [x19]
0000000000050380	cbnz	w8, 0x50378
0000000000050384	cmp	w22, #0x1
0000000000050388	b.ne	0x503a4
000000000005038c	adr	x8, #0x43efd
0000000000050390	nop
0000000000050394	ldarb	w8, [x8]
0000000000050398	tbz	w8, #0x0, 0x503a4
000000000005039c	mov	x0, x19
00000000000503a0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000503a4	nop
00000000000503a8	ldrsw	x23, _OBJC_IVAR_$_FastaKmmKMapAsNSDictionary.mapHolder
00000000000503ac	bl	_Kotlin_initRuntimeIfNeeded
00000000000503b0	ldr	x0, [x21, x23]
00000000000503b4	mov	x1, x20
00000000000503b8	bl	__ZL8KMap_getP9ObjHeaderP11objc_object
00000000000503bc	mov	x20, x0
00000000000503c0	ldaxr	w8, [x19]
00000000000503c4	stlxr	w9, w22, [x19]
00000000000503c8	cbnz	w9, 0x503c0
00000000000503cc	cbnz	w22, 0x503f0
00000000000503d0	cmp	w8, #0x1
00000000000503d4	b.ne	0x503f0
00000000000503d8	adr	x8, #0x43eb1
00000000000503dc	nop
00000000000503e0	ldarb	w8, [x8]
00000000000503e4	tbz	w8, #0x0, 0x503f0
00000000000503e8	mov	x0, x19
00000000000503ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000503f0	mov	x0, x20
00000000000503f4	ldp	x29, x30, [sp, #0x30]
00000000000503f8	ldp	x20, x19, [sp, #0x20]
00000000000503fc	ldp	x22, x21, [sp, #0x10]
0000000000050400	ldp	x24, x23, [sp], #0x40
0000000000050404	ret
0000000000050408	mov	x20, x0
000000000005040c	ldaxr	w8, [x19]
0000000000050410	stlxr	w9, w22, [x19]
0000000000050414	cbnz	w9, 0x5040c
0000000000050418	cbnz	w22, 0x5043c
000000000005041c	cmp	w8, #0x1
0000000000050420	b.ne	0x5043c
0000000000050424	adr	x8, #0x43e65
0000000000050428	nop
000000000005042c	ldarb	w8, [x8]
0000000000050430	tbz	w8, #0x0, 0x5043c
0000000000050434	mov	x0, x19
0000000000050438	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000005043c	mov	x0, x20
0000000000050440	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KMapAsNSDictionary keyEnumerator]:
0000000000050444	sub	sp, sp, #0x70
0000000000050448	stp	x26, x25, [sp, #0x20]
000000000005044c	stp	x24, x23, [sp, #0x30]
0000000000050450	stp	x22, x21, [sp, #0x40]
0000000000050454	stp	x20, x19, [sp, #0x50]
0000000000050458	stp	x29, x30, [sp, #0x60]
000000000005045c	add	x29, sp, #0x60
0000000000050460	mov	x21, x0
0000000000050464	bl	_Kotlin_initRuntimeIfNeeded
0000000000050468	adrp	x20, 42 ; 0x7a000
000000000005046c	add	x20, x20, #0x2c0
0000000000050470	ldr	x25, [x20]
0000000000050474	mov	x0, x20
0000000000050478	blr	x25
000000000005047c	ldr	x8, [x0]
0000000000050480	add	x19, x8, #0x138
0000000000050484	ldaxr	w24, [x19]
0000000000050488	stlxr	w8, wzr, [x19]
000000000005048c	cbnz	w8, 0x50484
0000000000050490	cmp	w24, #0x1
0000000000050494	b.ne	0x504b0
0000000000050498	adr	x8, #0x43df1
000000000005049c	nop
00000000000504a0	ldarb	w8, [x8]
00000000000504a4	tbz	w8, #0x0, 0x504b0
00000000000504a8	mov	x0, x19
00000000000504ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000504b0	mov	x8, sp
00000000000504b4	add	x23, x8, #0x18
00000000000504b8	str	xzr, [sp, #0x18]
00000000000504bc	mov	x0, x20
00000000000504c0	blr	x25
00000000000504c4	ldr	x9, [x0]
00000000000504c8	ldr	x10, [x9, #0x110]
00000000000504cc	str	x8, [x9, #0x110]
00000000000504d0	mov	x8, #0x400000000
00000000000504d4	stp	x10, x8, [sp, #0x8]
00000000000504d8	nop
00000000000504dc	ldr	x22, #0x267dc ; Objc class ref: FastaKmmKIteratorAsNSEnumerator
00000000000504e0	nop
00000000000504e4	ldrsw	x26, _OBJC_IVAR_$_FastaKmmKMapAsNSDictionary.mapHolder
00000000000504e8	bl	_Kotlin_initRuntimeIfNeeded
00000000000504ec	ldr	x0, [x21, x26]
00000000000504f0	mov	x1, x23
00000000000504f4	bl	_Kotlin_Map_keyIterator
00000000000504f8	mov	x2, x0
00000000000504fc	nop
0000000000050500	ldr	x1, #0x26388 ; Objc selector ref: createWithKIterator:
0000000000050504	mov	x0, x22
0000000000050508	bl	0x55584 ; Objc message: +[FastaKmmKIteratorAsNSEnumerator createWithKIterator:]
000000000005050c	mov	x21, x0
0000000000050510	mov	x0, x20
0000000000050514	blr	x25
0000000000050518	ldr	x8, [x0]
000000000005051c	ldr	x9, [sp, #0x8]
0000000000050520	str	x9, [x8, #0x110]
0000000000050524	ldaxr	w8, [x19]
0000000000050528	stlxr	w9, w24, [x19]
000000000005052c	cbnz	w9, 0x50524
0000000000050530	cbnz	w24, 0x50554
0000000000050534	cmp	w8, #0x1
0000000000050538	b.ne	0x50554
000000000005053c	adr	x8, #0x43d4d
0000000000050540	nop
0000000000050544	ldarb	w8, [x8]
0000000000050548	tbz	w8, #0x0, 0x50554
000000000005054c	mov	x0, x19
0000000000050550	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050554	mov	x0, x21
0000000000050558	ldp	x29, x30, [sp, #0x60]
000000000005055c	ldp	x20, x19, [sp, #0x50]
0000000000050560	ldp	x22, x21, [sp, #0x40]
0000000000050564	ldp	x24, x23, [sp, #0x30]
0000000000050568	ldp	x26, x25, [sp, #0x20]
000000000005056c	add	sp, sp, #0x70
0000000000050570	ret
0000000000050574	mov	x21, x0
0000000000050578	mov	x0, x20
000000000005057c	blr	x25
0000000000050580	ldr	x8, [x0]
0000000000050584	ldr	x9, [sp, #0x8]
0000000000050588	str	x9, [x8, #0x110]
000000000005058c	ldaxr	w8, [x19]
0000000000050590	stlxr	w9, w24, [x19]
0000000000050594	cbnz	w9, 0x5058c
0000000000050598	cbnz	w24, 0x505bc
000000000005059c	cmp	w8, #0x1
00000000000505a0	b.ne	0x505bc
00000000000505a4	adr	x8, #0x43ce5
00000000000505a8	nop
00000000000505ac	ldarb	w8, [x8]
00000000000505b0	tbz	w8, #0x0, 0x505bc
00000000000505b4	mov	x0, x19
00000000000505b8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000505bc	mov	x0, x21
00000000000505c0	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZL8KMap_getP9ObjHeaderP11objc_object:
00000000000505c4	sub	sp, sp, #0xb0
00000000000505c8	stp	x26, x25, [sp, #0x60]
00000000000505cc	stp	x24, x23, [sp, #0x70]
00000000000505d0	stp	x22, x21, [sp, #0x80]
00000000000505d4	stp	x20, x19, [sp, #0x90]
00000000000505d8	stp	x29, x30, [sp, #0xa0]
00000000000505dc	add	x29, sp, #0xa0
00000000000505e0	mov	x22, x1
00000000000505e4	mov	x20, x0
00000000000505e8	add	x26, sp, #0x28
00000000000505ec	str	xzr, [sp, #0x40]
00000000000505f0	adrp	x19, 42 ; 0x7a000
00000000000505f4	add	x19, x19, #0x2c0
00000000000505f8	ldr	x24, [x19]
00000000000505fc	mov	x0, x19
0000000000050600	blr	x24
0000000000050604	ldr	x8, [x0]
0000000000050608	ldr	x9, [x8, #0x110]
000000000005060c	mov	x10, #0x400000000
0000000000050610	stp	x9, x10, [sp, #0x30]
0000000000050614	add	x23, sp, #0x8
0000000000050618	stp	x10, xzr, [sp, #0x18]
000000000005061c	str	x23, [x8, #0x110]
0000000000050620	str	x26, [sp, #0x10]
0000000000050624	adrp	x25, 38 ; 0x76000
0000000000050628	ldr	x0, [x25, #0xc98] ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000005062c	nop
0000000000050630	ldr	x21, #0x263c0 ; Objc selector ref: null
0000000000050634	mov	x1, x21
0000000000050638	bl	0x55584 ; Objc message: +[NSNull null]
000000000005063c	cmp	x0, x22
0000000000050640	ccmp	x22, #0x0, #0x4, ne
0000000000050644	b.ne	0x50654
0000000000050648	mov	x22, #0x0
000000000005064c	str	xzr, [sp, #0x40]
0000000000050650	b	0x5066c
0000000000050654	add	x2, x26, #0x18
0000000000050658	nop
000000000005065c	ldr	x1, #0x43e7c
0000000000050660	mov	x0, x22
0000000000050664	bl	0x55584 ; Objc message: -[x0 null]
0000000000050668	mov	x22, x0
000000000005066c	add	x23, x23, #0x18
0000000000050670	str	xzr, [sp, #0x48]
0000000000050674	mov	x0, x19
0000000000050678	blr	x24
000000000005067c	ldr	x8, [x0]
0000000000050680	ldr	x9, [x8, #0x110]
0000000000050684	add	x10, sp, #0x48
0000000000050688	str	x10, [x8, #0x110]
000000000005068c	mov	x8, #0x300000000
0000000000050690	stp	x9, x8, [sp, #0x50]
0000000000050694	adr	x26, #0x43bf5
0000000000050698	nop
000000000005069c	ldarb	w8, [x26]
00000000000506a0	tbz	w8, #0x0, 0x506a8
00000000000506a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000506a8	ldr	x8, [x20]
00000000000506ac	and	x8, x8, #0xfffffffffffffffc
00000000000506b0	ldr	x8, [x8]
00000000000506b4	ldr	w9, [x8, #0x3c]
00000000000506b8	ldr	x8, [x8, #0x40]
00000000000506bc	tbnz	w9, #0x1f, 0x506cc
00000000000506c0	mov	w10, #0x41
00000000000506c4	and	x9, x9, x10
00000000000506c8	b	0x50750
00000000000506cc	neg	w10, w9
00000000000506d0	mvn	w9, w9
00000000000506d4	cmp	w10, #0x9
00000000000506d8	b.ge	0x50710
00000000000506dc	cmp	w10, #0x2
00000000000506e0	b.lt	0x50744
00000000000506e4	mov	x10, #0x0
00000000000506e8	mov	x11, x8
00000000000506ec	ldr	w12, [x11]
00000000000506f0	cmp	w12, #0x40
00000000000506f4	b.gt	0x5074c
00000000000506f8	add	x10, x10, #0x1
00000000000506fc	add	x11, x11, #0x10
0000000000050700	cmp	x9, x10
0000000000050704	b.ne	0x506ec
0000000000050708	mov	x10, x9
000000000005070c	b	0x5074c
0000000000050710	mov	w10, #0x0
0000000000050714	add	w11, w9, w10
0000000000050718	cmp	w11, #0x0
000000000005071c	cinc	w11, w11, lt
0000000000050720	asr	w11, w11, #1
0000000000050724	sbfiz	x12, x11, #4, #32
0000000000050728	ldr	w12, [x8, x12]
000000000005072c	cmp	w12, #0x41
0000000000050730	csinc	w10, w10, w11, ge
0000000000050734	csel	w9, w9, w11, lt
0000000000050738	cmp	w10, w9
000000000005073c	b.lt	0x50714
0000000000050740	b	0x5074c
0000000000050744	mov	w10, #0x0
0000000000050748	b	0x5074c
000000000005074c	sxtw	x9, w10
0000000000050750	add	x8, x8, x9, lsl #4
0000000000050754	ldr	x8, [x8, #0x8]
0000000000050758	ldr	x8, [x8, #0x30]
000000000005075c	mov	x0, x20
0000000000050760	mov	x1, x22
0000000000050764	mov	x2, x23
0000000000050768	blr	x8
000000000005076c	mov	x8, x0
0000000000050770	str	x0, [sp, #0x20]
0000000000050774	mov	x0, x19
0000000000050778	blr	x24
000000000005077c	ldr	x9, [x0]
0000000000050780	ldr	x10, [sp, #0x50]
0000000000050784	str	x10, [x9, #0x110]
0000000000050788	cbz	x8, 0x50798
000000000005078c	mov	x0, x8
0000000000050790	bl	_Kotlin_ObjCExport_refToObjC
0000000000050794	b	0x508a0
0000000000050798	stp	xzr, x10, [sp, #0x48]
000000000005079c	add	x8, sp, #0x48
00000000000507a0	str	x8, [x9, #0x110]
00000000000507a4	mov	x8, #0x300000000
00000000000507a8	str	x8, [sp, #0x58]
00000000000507ac	ldarb	w8, [x26]
00000000000507b0	tbz	w8, #0x0, 0x507b8
00000000000507b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000507b8	ldr	x8, [x20]
00000000000507bc	and	x8, x8, #0xfffffffffffffffc
00000000000507c0	ldr	x8, [x8]
00000000000507c4	ldr	w9, [x8, #0x3c]
00000000000507c8	ldr	x8, [x8, #0x40]
00000000000507cc	tbnz	w9, #0x1f, 0x507dc
00000000000507d0	mov	w10, #0x41
00000000000507d4	and	x9, x9, x10
00000000000507d8	b	0x50860
00000000000507dc	neg	w10, w9
00000000000507e0	mvn	w9, w9
00000000000507e4	cmp	w10, #0x9
00000000000507e8	b.ge	0x50820
00000000000507ec	cmp	w10, #0x2
00000000000507f0	b.lt	0x50854
00000000000507f4	mov	x10, #0x0
00000000000507f8	mov	x11, x8
00000000000507fc	ldr	w12, [x11]
0000000000050800	cmp	w12, #0x40
0000000000050804	b.gt	0x5085c
0000000000050808	add	x10, x10, #0x1
000000000005080c	add	x11, x11, #0x10
0000000000050810	cmp	x9, x10
0000000000050814	b.ne	0x507fc
0000000000050818	mov	x10, x9
000000000005081c	b	0x5085c
0000000000050820	mov	w10, #0x0
0000000000050824	add	w11, w9, w10
0000000000050828	cmp	w11, #0x0
000000000005082c	cinc	w11, w11, lt
0000000000050830	asr	w11, w11, #1
0000000000050834	sbfiz	x12, x11, #4, #32
0000000000050838	ldr	w12, [x8, x12]
000000000005083c	cmp	w12, #0x41
0000000000050840	csinc	w10, w10, w11, ge
0000000000050844	csel	w9, w9, w11, lt
0000000000050848	cmp	w10, w9
000000000005084c	b.lt	0x50824
0000000000050850	b	0x5085c
0000000000050854	mov	w10, #0x0
0000000000050858	b	0x5085c
000000000005085c	sxtw	x9, w10
0000000000050860	add	x8, x8, x9, lsl #4
0000000000050864	ldr	x8, [x8, #0x8]
0000000000050868	ldr	x8, [x8, #0x20]
000000000005086c	mov	x0, x20
0000000000050870	mov	x1, x22
0000000000050874	blr	x8
0000000000050878	mov	x8, x0
000000000005087c	mov	x0, x19
0000000000050880	blr	x24
0000000000050884	ldr	x9, [x0]
0000000000050888	ldr	x10, [sp, #0x50]
000000000005088c	str	x10, [x9, #0x110]
0000000000050890	cbz	w8, 0x508d8
0000000000050894	ldr	x0, [x25, #0xc98]
0000000000050898	mov	x1, x21
000000000005089c	bl	0x55584 ; Objc message: -[x0 null]
00000000000508a0	mov	x2, x0
00000000000508a4	mov	x0, x19
00000000000508a8	blr	x24
00000000000508ac	ldr	x8, [x0]
00000000000508b0	ldr	x9, [sp, #0x30]
00000000000508b4	str	x9, [x8, #0x110]
00000000000508b8	mov	x0, x2
00000000000508bc	ldp	x29, x30, [sp, #0xa0]
00000000000508c0	ldp	x20, x19, [sp, #0x90]
00000000000508c4	ldp	x22, x21, [sp, #0x80]
00000000000508c8	ldp	x24, x23, [sp, #0x70]
00000000000508cc	ldp	x26, x25, [sp, #0x60]
00000000000508d0	add	sp, sp, #0xb0
00000000000508d4	ret
00000000000508d8	mov	x2, #0x0
00000000000508dc	b	0x508a4
00000000000508e0	b	0x508e8
00000000000508e4	b	0x50904
00000000000508e8	mov	x1, x0
00000000000508ec	mov	x0, x19
00000000000508f0	blr	x24
00000000000508f4	ldr	x8, [x0]
00000000000508f8	ldr	x9, [sp, #0x50]
00000000000508fc	str	x9, [x8, #0x110]
0000000000050900	b	0x50908
0000000000050904	mov	x1, x0
0000000000050908	mov	x0, x19
000000000005090c	blr	x24
0000000000050910	ldr	x8, [x0]
0000000000050914	ldr	x9, [sp, #0x30]
0000000000050918	str	x9, [x8, #0x110]
000000000005091c	mov	x0, x1
0000000000050920	bl	0x55194 ; symbol stub for: __Unwind_Resume
+[KMapAsNSDictionary createRetainedWithKMap:]:
0000000000050924	stp	x22, x21, [sp, #-0x30]!
0000000000050928	stp	x20, x19, [sp, #0x10]
000000000005092c	stp	x29, x30, [sp, #0x20]
0000000000050930	add	x29, sp, #0x20
0000000000050934	mov	x19, x2
0000000000050938	nop
000000000005093c	ldr	x0, #0x2639c ; Objc class ref: FastaKmmKMapAsNSDictionary
0000000000050940	bl	0x55500 ; symbol stub for: _objc_alloc
0000000000050944	nop
0000000000050948	ldr	x1, #0x25f98 ; Objc selector ref: init
000000000005094c	bl	0x55584 ; Objc message: +[FastaKmmKMapAsNSDictionary init]
0000000000050950	mov	x20, x0
0000000000050954	nop
0000000000050958	ldrsw	x8, _OBJC_IVAR_$_FastaKmmKMapAsNSDictionary.mapHolder
000000000005095c	add	x21, x0, x8
0000000000050960	adrp	x0, 42 ; 0x7a000
0000000000050964	add	x0, x0, #0x2c0
0000000000050968	ldr	x8, [x0]
000000000005096c	blr	x8
0000000000050970	ldr	x22, [x0]
0000000000050974	mov	w0, #0x1
0000000000050978	mov	w1, #0x28
000000000005097c	bl	0x553d4 ; symbol stub for: _calloc
0000000000050980	ldr	x8, [x22, #0xa8]!
0000000000050984	sub	x9, x22, #0x8
0000000000050988	stp	x8, x22, [x0]
000000000005098c	str	x0, [x8, #0x8]
0000000000050990	str	x0, [x22]
0000000000050994	ldr	x8, [x22, #0x10]
0000000000050998	add	x8, x8, #0x1
000000000005099c	str	x8, [x22, #0x10]
00000000000509a0	stp	x9, x0, [x0, #0x18]
00000000000509a4	str	x19, [x0, #0x10]!
00000000000509a8	stp	x19, x0, [x21]
00000000000509ac	mov	x0, x20
00000000000509b0	ldp	x29, x30, [sp, #0x20]
00000000000509b4	ldp	x20, x19, [sp, #0x10]
00000000000509b8	ldp	x22, x21, [sp], #0x30
00000000000509bc	ret
-[KotlinMutableDictionary dealloc]:
00000000000509c0	sub	sp, sp, #0x60
00000000000509c4	stp	x26, x25, [sp, #0x10]
00000000000509c8	stp	x24, x23, [sp, #0x20]
00000000000509cc	stp	x22, x21, [sp, #0x30]
00000000000509d0	stp	x20, x19, [sp, #0x40]
00000000000509d4	stp	x29, x30, [sp, #0x50]
00000000000509d8	add	x29, sp, #0x50
00000000000509dc	mov	x19, x0
00000000000509e0	nop
00000000000509e4	ldrsw	x8, _OBJC_IVAR_$_FastaKmmMutableDictionary.mapHolder
00000000000509e8	add	x24, x0, x8
00000000000509ec	bl	_Kotlin_initRuntimeIfNeeded
00000000000509f0	adrp	x21, 42 ; 0x7a000
00000000000509f4	add	x21, x21, #0x2c0
00000000000509f8	ldr	x25, [x21]
00000000000509fc	mov	x0, x21
0000000000050a00	blr	x25
0000000000050a04	ldr	x8, [x0]
0000000000050a08	add	x20, x8, #0x138
0000000000050a0c	ldaxr	w22, [x20]
0000000000050a10	stlxr	w8, wzr, [x20]
0000000000050a14	cbnz	w8, 0x50a0c
0000000000050a18	adr	x23, #0x43871
0000000000050a1c	nop
0000000000050a20	cmp	w22, #0x1
0000000000050a24	b.ne	0x50a38
0000000000050a28	ldarb	w8, [x23]
0000000000050a2c	tbz	w8, #0x0, 0x50a38
0000000000050a30	mov	x0, x20
0000000000050a34	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050a38	ldr	x8, [x24]
0000000000050a3c	cbz	x8, 0x50a58
0000000000050a40	ldr	x1, [x24, #0x8]
0000000000050a44	mov	x0, x21
0000000000050a48	blr	x25
0000000000050a4c	ldr	x8, [x0]
0000000000050a50	add	x0, x8, #0x8
0000000000050a54	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000050a58	ldaxr	w8, [x20]
0000000000050a5c	stlxr	w9, w22, [x20]
0000000000050a60	cbnz	w9, 0x50a58
0000000000050a64	cbnz	w22, 0x50a80
0000000000050a68	cmp	w8, #0x1
0000000000050a6c	b.ne	0x50a80
0000000000050a70	ldarb	w8, [x23]
0000000000050a74	tbz	w8, #0x0, 0x50a80
0000000000050a78	mov	x0, x20
0000000000050a7c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050a80	nop
0000000000050a84	ldr	x8, #0x262b4 ; Objc class ref: FastaKmmMutableDictionary
0000000000050a88	stp	x19, x8, [sp]
0000000000050a8c	nop
0000000000050a90	ldr	x1, #0x25e00 ; Objc selector ref: dealloc
0000000000050a94	mov	x0, sp
0000000000050a98	bl	0x55590 ; Objc message: -[[x0 super] dealloc]
0000000000050a9c	ldp	x29, x30, [sp, #0x50]
0000000000050aa0	ldp	x20, x19, [sp, #0x40]
0000000000050aa4	ldp	x22, x21, [sp, #0x30]
0000000000050aa8	ldp	x24, x23, [sp, #0x20]
0000000000050aac	ldp	x26, x25, [sp, #0x10]
0000000000050ab0	add	sp, sp, #0x60
0000000000050ab4	ret
-[KotlinMutableDictionary init]:
0000000000050ab8	sub	sp, sp, #0x80
0000000000050abc	stp	x26, x25, [sp, #0x30]
0000000000050ac0	stp	x24, x23, [sp, #0x40]
0000000000050ac4	stp	x22, x21, [sp, #0x50]
0000000000050ac8	stp	x20, x19, [sp, #0x60]
0000000000050acc	stp	x29, x30, [sp, #0x70]
0000000000050ad0	add	x29, sp, #0x70
0000000000050ad4	nop
0000000000050ad8	ldr	x8, #0x26260 ; Objc class ref: FastaKmmMutableDictionary
0000000000050adc	stp	x0, x8, [sp, #0x20]
0000000000050ae0	nop
0000000000050ae4	ldr	x1, #0x25dfc ; Objc selector ref: init
0000000000050ae8	add	x0, sp, #0x20
0000000000050aec	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000050af0	mov	x20, x0
0000000000050af4	cbz	x0, 0x50c14
0000000000050af8	bl	_Kotlin_initRuntimeIfNeeded
0000000000050afc	adrp	x21, 42 ; 0x7a000
0000000000050b00	add	x21, x21, #0x2c0
0000000000050b04	ldr	x25, [x21]
0000000000050b08	mov	x0, x21
0000000000050b0c	blr	x25
0000000000050b10	ldr	x24, [x0]
0000000000050b14	add	x19, x24, #0x138
0000000000050b18	ldaxr	w23, [x19]
0000000000050b1c	stlxr	w8, wzr, [x19]
0000000000050b20	cbnz	w8, 0x50b18
0000000000050b24	cmp	w23, #0x1
0000000000050b28	b.ne	0x50b44
0000000000050b2c	adr	x8, #0x4375d
0000000000050b30	nop
0000000000050b34	ldarb	w8, [x8]
0000000000050b38	tbz	w8, #0x0, 0x50b44
0000000000050b3c	mov	x0, x19
0000000000050b40	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050b44	mov	x8, sp
0000000000050b48	add	x1, x8, #0x18
0000000000050b4c	str	xzr, [sp, #0x18]
0000000000050b50	mov	x0, x21
0000000000050b54	blr	x25
0000000000050b58	ldr	x9, [x0]
0000000000050b5c	ldr	x10, [x9, #0x110]
0000000000050b60	str	x8, [x9, #0x110]
0000000000050b64	mov	x8, #0x400000000
0000000000050b68	stp	x10, x8, [sp, #0x8]
0000000000050b6c	mov	w0, #0x8
0000000000050b70	bl	_Kotlin_MutableMap_createWithCapacity
0000000000050b74	mov	x22, x0
0000000000050b78	nop
0000000000050b7c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmMutableDictionary.mapHolder
0000000000050b80	add	x26, x20, x8
0000000000050b84	mov	x0, x21
0000000000050b88	blr	x25
0000000000050b8c	mov	x21, x0
0000000000050b90	ldr	x25, [x0]
0000000000050b94	mov	w0, #0x1
0000000000050b98	mov	w1, #0x28
0000000000050b9c	bl	0x553d4 ; symbol stub for: _calloc
0000000000050ba0	ldr	x8, [x25, #0xa8]!
0000000000050ba4	sub	x9, x25, #0x8
0000000000050ba8	mov	x10, x0
0000000000050bac	str	x22, [x10, #0x10]!
0000000000050bb0	str	x9, [x0, #0x18]
0000000000050bb4	stp	x8, x25, [x0]
0000000000050bb8	str	x0, [x8, #0x8]
0000000000050bbc	str	x0, [x25]
0000000000050bc0	ldr	x8, [x25, #0x10]
0000000000050bc4	add	x8, x8, #0x1
0000000000050bc8	str	x8, [x25, #0x10]
0000000000050bcc	str	x0, [x0, #0x20]
0000000000050bd0	stp	x22, x10, [x26]
0000000000050bd4	ldr	x8, [x21]
0000000000050bd8	ldr	x9, [sp, #0x8]
0000000000050bdc	str	x9, [x8, #0x110]
0000000000050be0	cbz	x24, 0x50c14
0000000000050be4	ldaxr	w8, [x19]
0000000000050be8	stlxr	w9, w23, [x19]
0000000000050bec	cbnz	w9, 0x50be4
0000000000050bf0	cbnz	w23, 0x50c14
0000000000050bf4	cmp	w8, #0x1
0000000000050bf8	b.ne	0x50c14
0000000000050bfc	adr	x8, #0x4368d
0000000000050c00	nop
0000000000050c04	ldarb	w8, [x8]
0000000000050c08	tbz	w8, #0x0, 0x50c14
0000000000050c0c	mov	x0, x19
0000000000050c10	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050c14	mov	x0, x20
0000000000050c18	ldp	x29, x30, [sp, #0x70]
0000000000050c1c	ldp	x20, x19, [sp, #0x60]
0000000000050c20	ldp	x22, x21, [sp, #0x50]
0000000000050c24	ldp	x24, x23, [sp, #0x40]
0000000000050c28	ldp	x26, x25, [sp, #0x30]
0000000000050c2c	add	sp, sp, #0x80
0000000000050c30	ret
0000000000050c34	mov	x20, x0
0000000000050c38	mov	x0, x21
0000000000050c3c	blr	x25
0000000000050c40	ldr	x8, [x0]
0000000000050c44	ldr	x9, [sp, #0x8]
0000000000050c48	str	x9, [x8, #0x110]
0000000000050c4c	cbz	x24, 0x50c80
0000000000050c50	ldaxr	w8, [x19]
0000000000050c54	stlxr	w9, w23, [x19]
0000000000050c58	cbnz	w9, 0x50c50
0000000000050c5c	cbnz	w23, 0x50c80
0000000000050c60	cmp	w8, #0x1
0000000000050c64	b.ne	0x50c80
0000000000050c68	adr	x8, #0x43621
0000000000050c6c	nop
0000000000050c70	ldarb	w8, [x8]
0000000000050c74	tbz	w8, #0x0, 0x50c80
0000000000050c78	mov	x0, x19
0000000000050c7c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050c80	mov	x0, x20
0000000000050c84	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary initWithCapacity:]:
0000000000050c88	sub	sp, sp, #0x80
0000000000050c8c	stp	x26, x25, [sp, #0x30]
0000000000050c90	stp	x24, x23, [sp, #0x40]
0000000000050c94	stp	x22, x21, [sp, #0x50]
0000000000050c98	stp	x20, x19, [sp, #0x60]
0000000000050c9c	stp	x29, x30, [sp, #0x70]
0000000000050ca0	add	x29, sp, #0x70
0000000000050ca4	mov	x21, x2
0000000000050ca8	nop
0000000000050cac	ldr	x8, #0x2608c ; Objc class ref: FastaKmmMutableDictionary
0000000000050cb0	stp	x0, x8, [sp, #0x20]
0000000000050cb4	nop
0000000000050cb8	ldr	x1, #0x25c28 ; Objc selector ref: init
0000000000050cbc	add	x0, sp, #0x20
0000000000050cc0	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000050cc4	mov	x20, x0
0000000000050cc8	cbz	x0, 0x50df0
0000000000050ccc	bl	_Kotlin_initRuntimeIfNeeded
0000000000050cd0	adrp	x22, 42 ; 0x7a000
0000000000050cd4	add	x22, x22, #0x2c0
0000000000050cd8	ldr	x25, [x22]
0000000000050cdc	mov	x0, x22
0000000000050ce0	blr	x25
0000000000050ce4	ldr	x24, [x0]
0000000000050ce8	add	x19, x24, #0x138
0000000000050cec	ldaxr	w23, [x19]
0000000000050cf0	stlxr	w8, wzr, [x19]
0000000000050cf4	cbnz	w8, 0x50cec
0000000000050cf8	cmp	w23, #0x1
0000000000050cfc	b.ne	0x50d18
0000000000050d00	adr	x8, #0x43589
0000000000050d04	nop
0000000000050d08	ldarb	w8, [x8]
0000000000050d0c	tbz	w8, #0x0, 0x50d18
0000000000050d10	mov	x0, x19
0000000000050d14	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050d18	mov	x8, sp
0000000000050d1c	add	x1, x8, #0x18
0000000000050d20	str	xzr, [sp, #0x18]
0000000000050d24	mov	x0, x22
0000000000050d28	blr	x25
0000000000050d2c	ldr	x9, [x0]
0000000000050d30	ldr	x10, [x9, #0x110]
0000000000050d34	str	x8, [x9, #0x110]
0000000000050d38	mov	x8, #0x400000000
0000000000050d3c	stp	x10, x8, [sp, #0x8]
0000000000050d40	mov	w8, #0x7fffffff
0000000000050d44	cmp	x21, x8
0000000000050d48	csel	w0, w21, w8, lo
0000000000050d4c	bl	_Kotlin_MutableMap_createWithCapacity
0000000000050d50	mov	x21, x0
0000000000050d54	nop
0000000000050d58	ldrsw	x8, _OBJC_IVAR_$_FastaKmmMutableDictionary.mapHolder
0000000000050d5c	add	x26, x20, x8
0000000000050d60	mov	x0, x22
0000000000050d64	blr	x25
0000000000050d68	mov	x22, x0
0000000000050d6c	ldr	x25, [x0]
0000000000050d70	mov	w0, #0x1
0000000000050d74	mov	w1, #0x28
0000000000050d78	bl	0x553d4 ; symbol stub for: _calloc
0000000000050d7c	ldr	x8, [x25, #0xa8]!
0000000000050d80	sub	x9, x25, #0x8
0000000000050d84	mov	x10, x0
0000000000050d88	str	x21, [x10, #0x10]!
0000000000050d8c	str	x9, [x0, #0x18]
0000000000050d90	stp	x8, x25, [x0]
0000000000050d94	str	x0, [x8, #0x8]
0000000000050d98	str	x0, [x25]
0000000000050d9c	ldr	x8, [x25, #0x10]
0000000000050da0	add	x8, x8, #0x1
0000000000050da4	str	x8, [x25, #0x10]
0000000000050da8	str	x0, [x0, #0x20]
0000000000050dac	stp	x21, x10, [x26]
0000000000050db0	ldr	x8, [x22]
0000000000050db4	ldr	x9, [sp, #0x8]
0000000000050db8	str	x9, [x8, #0x110]
0000000000050dbc	cbz	x24, 0x50df0
0000000000050dc0	ldaxr	w8, [x19]
0000000000050dc4	stlxr	w9, w23, [x19]
0000000000050dc8	cbnz	w9, 0x50dc0
0000000000050dcc	cbnz	w23, 0x50df0
0000000000050dd0	cmp	w8, #0x1
0000000000050dd4	b.ne	0x50df0
0000000000050dd8	adr	x8, #0x434b1
0000000000050ddc	nop
0000000000050de0	ldarb	w8, [x8]
0000000000050de4	tbz	w8, #0x0, 0x50df0
0000000000050de8	mov	x0, x19
0000000000050dec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050df0	mov	x0, x20
0000000000050df4	ldp	x29, x30, [sp, #0x70]
0000000000050df8	ldp	x20, x19, [sp, #0x60]
0000000000050dfc	ldp	x22, x21, [sp, #0x50]
0000000000050e00	ldp	x24, x23, [sp, #0x40]
0000000000050e04	ldp	x26, x25, [sp, #0x30]
0000000000050e08	add	sp, sp, #0x80
0000000000050e0c	ret
0000000000050e10	mov	x20, x0
0000000000050e14	mov	x0, x22
0000000000050e18	blr	x25
0000000000050e1c	ldr	x8, [x0]
0000000000050e20	ldr	x9, [sp, #0x8]
0000000000050e24	str	x9, [x8, #0x110]
0000000000050e28	cbz	x24, 0x50e5c
0000000000050e2c	ldaxr	w8, [x19]
0000000000050e30	stlxr	w9, w23, [x19]
0000000000050e34	cbnz	w9, 0x50e2c
0000000000050e38	cbnz	w23, 0x50e5c
0000000000050e3c	cmp	w8, #0x1
0000000000050e40	b.ne	0x50e5c
0000000000050e44	adr	x8, #0x43445
0000000000050e48	nop
0000000000050e4c	ldarb	w8, [x8]
0000000000050e50	tbz	w8, #0x0, 0x50e5c
0000000000050e54	mov	x0, x19
0000000000050e58	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050e5c	mov	x0, x20
0000000000050e60	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary initWithKMap:]:
0000000000050e64	sub	sp, sp, #0x40
0000000000050e68	stp	x22, x21, [sp, #0x10]
0000000000050e6c	stp	x20, x19, [sp, #0x20]
0000000000050e70	stp	x29, x30, [sp, #0x30]
0000000000050e74	add	x29, sp, #0x30
0000000000050e78	mov	x19, x2
0000000000050e7c	nop
0000000000050e80	ldr	x8, #0x25eb8 ; Objc class ref: FastaKmmMutableDictionary
0000000000050e84	stp	x0, x8, [sp]
0000000000050e88	nop
0000000000050e8c	ldr	x1, #0x25a54 ; Objc selector ref: init
0000000000050e90	mov	x0, sp
0000000000050e94	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000050e98	mov	x20, x0
0000000000050e9c	cbz	x0, 0x50ef8
0000000000050ea0	nop
0000000000050ea4	ldrsw	x8, _OBJC_IVAR_$_FastaKmmMutableDictionary.mapHolder
0000000000050ea8	add	x21, x20, x8
0000000000050eac	adrp	x0, 42 ; 0x7a000
0000000000050eb0	add	x0, x0, #0x2c0
0000000000050eb4	ldr	x8, [x0]
0000000000050eb8	blr	x8
0000000000050ebc	ldr	x22, [x0]
0000000000050ec0	mov	w0, #0x1
0000000000050ec4	mov	w1, #0x28
0000000000050ec8	bl	0x553d4 ; symbol stub for: _calloc
0000000000050ecc	ldr	x8, [x22, #0xa8]!
0000000000050ed0	sub	x9, x22, #0x8
0000000000050ed4	stp	x8, x22, [x0]
0000000000050ed8	str	x0, [x8, #0x8]
0000000000050edc	str	x0, [x22]
0000000000050ee0	ldr	x8, [x22, #0x10]
0000000000050ee4	add	x8, x8, #0x1
0000000000050ee8	str	x8, [x22, #0x10]
0000000000050eec	stp	x9, x0, [x0, #0x18]
0000000000050ef0	str	x19, [x0, #0x10]!
0000000000050ef4	stp	x19, x0, [x21]
0000000000050ef8	mov	x0, x20
0000000000050efc	ldp	x29, x30, [sp, #0x30]
0000000000050f00	ldp	x20, x19, [sp, #0x20]
0000000000050f04	ldp	x22, x21, [sp, #0x10]
0000000000050f08	add	sp, sp, #0x40
0000000000050f0c	ret
-[KotlinMutableDictionary toKotlin:]:
0000000000050f10	stp	x22, x21, [sp, #-0x30]!
0000000000050f14	stp	x20, x19, [sp, #0x10]
0000000000050f18	stp	x29, x30, [sp, #0x20]
0000000000050f1c	add	x29, sp, #0x20
0000000000050f20	mov	x19, x2
0000000000050f24	mov	x20, x0
0000000000050f28	nop
0000000000050f2c	ldrsw	x21, _OBJC_IVAR_$_FastaKmmMutableDictionary.mapHolder
0000000000050f30	bl	_Kotlin_initRuntimeIfNeeded
0000000000050f34	ldr	x0, [x20, x21]
0000000000050f38	str	x0, [x19]
0000000000050f3c	ldp	x29, x30, [sp, #0x20]
0000000000050f40	ldp	x20, x19, [sp, #0x10]
0000000000050f44	ldp	x22, x21, [sp], #0x30
0000000000050f48	ret
-[KotlinMutableDictionary count]:
0000000000050f4c	stp	x22, x21, [sp, #-0x30]!
0000000000050f50	stp	x20, x19, [sp, #0x10]
0000000000050f54	stp	x29, x30, [sp, #0x20]
0000000000050f58	add	x29, sp, #0x20
0000000000050f5c	mov	x20, x0
0000000000050f60	bl	_Kotlin_initRuntimeIfNeeded
0000000000050f64	adrp	x0, 42 ; 0x7a000
0000000000050f68	add	x0, x0, #0x2c0
0000000000050f6c	ldr	x8, [x0]
0000000000050f70	blr	x8
0000000000050f74	ldr	x8, [x0]
0000000000050f78	add	x19, x8, #0x138
0000000000050f7c	ldaxr	w21, [x19]
0000000000050f80	stlxr	w8, wzr, [x19]
0000000000050f84	cbnz	w8, 0x50f7c
0000000000050f88	cmp	w21, #0x1
0000000000050f8c	b.ne	0x50fa8
0000000000050f90	adr	x8, #0x432f9
0000000000050f94	nop
0000000000050f98	ldarb	w8, [x8]
0000000000050f9c	tbz	w8, #0x0, 0x50fa8
0000000000050fa0	mov	x0, x19
0000000000050fa4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050fa8	nop
0000000000050fac	ldrsw	x22, _OBJC_IVAR_$_FastaKmmMutableDictionary.mapHolder
0000000000050fb0	bl	_Kotlin_initRuntimeIfNeeded
0000000000050fb4	ldr	x0, [x20, x22]
0000000000050fb8	bl	_Kotlin_Map_getSize
0000000000050fbc	mov	x20, x0
0000000000050fc0	ldaxr	w8, [x19]
0000000000050fc4	stlxr	w9, w21, [x19]
0000000000050fc8	cbnz	w9, 0x50fc0
0000000000050fcc	cbnz	w21, 0x50ff0
0000000000050fd0	cmp	w8, #0x1
0000000000050fd4	b.ne	0x50ff0
0000000000050fd8	adr	x8, #0x432b1
0000000000050fdc	nop
0000000000050fe0	ldarb	w8, [x8]
0000000000050fe4	tbz	w8, #0x0, 0x50ff0
0000000000050fe8	mov	x0, x19
0000000000050fec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050ff0	sxtw	x0, w20
0000000000050ff4	ldp	x29, x30, [sp, #0x20]
0000000000050ff8	ldp	x20, x19, [sp, #0x10]
0000000000050ffc	ldp	x22, x21, [sp], #0x30
0000000000051000	ret
0000000000051004	mov	x20, x0
0000000000051008	ldaxr	w8, [x19]
000000000005100c	stlxr	w9, w21, [x19]
0000000000051010	cbnz	w9, 0x51008
0000000000051014	cbnz	w21, 0x51038
0000000000051018	cmp	w8, #0x1
000000000005101c	b.ne	0x51038
0000000000051020	adr	x8, #0x43269
0000000000051024	nop
0000000000051028	ldarb	w8, [x8]
000000000005102c	tbz	w8, #0x0, 0x51038
0000000000051030	mov	x0, x19
0000000000051034	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051038	mov	x0, x20
000000000005103c	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary objectForKey:]:
0000000000051040	stp	x24, x23, [sp, #-0x40]!
0000000000051044	stp	x22, x21, [sp, #0x10]
0000000000051048	stp	x20, x19, [sp, #0x20]
000000000005104c	stp	x29, x30, [sp, #0x30]
0000000000051050	add	x29, sp, #0x30
0000000000051054	mov	x20, x2
0000000000051058	mov	x21, x0
000000000005105c	bl	_Kotlin_initRuntimeIfNeeded
0000000000051060	adrp	x0, 41 ; 0x7a000
0000000000051064	add	x0, x0, #0x2c0
0000000000051068	ldr	x8, [x0]
000000000005106c	blr	x8
0000000000051070	ldr	x8, [x0]
0000000000051074	add	x19, x8, #0x138
0000000000051078	ldaxr	w22, [x19]
000000000005107c	stlxr	w8, wzr, [x19]
0000000000051080	cbnz	w8, 0x51078
0000000000051084	cmp	w22, #0x1
0000000000051088	b.ne	0x510a4
000000000005108c	adr	x8, #0x431fd
0000000000051090	nop
0000000000051094	ldarb	w8, [x8]
0000000000051098	tbz	w8, #0x0, 0x510a4
000000000005109c	mov	x0, x19
00000000000510a0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000510a4	nop
00000000000510a8	ldrsw	x23, _OBJC_IVAR_$_FastaKmmMutableDictionary.mapHolder
00000000000510ac	bl	_Kotlin_initRuntimeIfNeeded
00000000000510b0	ldr	x0, [x21, x23]
00000000000510b4	mov	x1, x20
00000000000510b8	bl	__ZL8KMap_getP9ObjHeaderP11objc_object
00000000000510bc	mov	x20, x0
00000000000510c0	ldaxr	w8, [x19]
00000000000510c4	stlxr	w9, w22, [x19]
00000000000510c8	cbnz	w9, 0x510c0
00000000000510cc	cbnz	w22, 0x510f0
00000000000510d0	cmp	w8, #0x1
00000000000510d4	b.ne	0x510f0
00000000000510d8	adr	x8, #0x431b1
00000000000510dc	nop
00000000000510e0	ldarb	w8, [x8]
00000000000510e4	tbz	w8, #0x0, 0x510f0
00000000000510e8	mov	x0, x19
00000000000510ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000510f0	mov	x0, x20
00000000000510f4	ldp	x29, x30, [sp, #0x30]
00000000000510f8	ldp	x20, x19, [sp, #0x20]
00000000000510fc	ldp	x22, x21, [sp, #0x10]
0000000000051100	ldp	x24, x23, [sp], #0x40
0000000000051104	ret
0000000000051108	mov	x20, x0
000000000005110c	ldaxr	w8, [x19]
0000000000051110	stlxr	w9, w22, [x19]
0000000000051114	cbnz	w9, 0x5110c
0000000000051118	cbnz	w22, 0x5113c
000000000005111c	cmp	w8, #0x1
0000000000051120	b.ne	0x5113c
0000000000051124	adr	x8, #0x43165
0000000000051128	nop
000000000005112c	ldarb	w8, [x8]
0000000000051130	tbz	w8, #0x0, 0x5113c
0000000000051134	mov	x0, x19
0000000000051138	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000005113c	mov	x0, x20
0000000000051140	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary keyEnumerator]:
0000000000051144	sub	sp, sp, #0x70
0000000000051148	stp	x26, x25, [sp, #0x20]
000000000005114c	stp	x24, x23, [sp, #0x30]
0000000000051150	stp	x22, x21, [sp, #0x40]
0000000000051154	stp	x20, x19, [sp, #0x50]
0000000000051158	stp	x29, x30, [sp, #0x60]
000000000005115c	add	x29, sp, #0x60
0000000000051160	mov	x21, x0
0000000000051164	bl	_Kotlin_initRuntimeIfNeeded
0000000000051168	adrp	x20, 41 ; 0x7a000
000000000005116c	add	x20, x20, #0x2c0
0000000000051170	ldr	x25, [x20]
0000000000051174	mov	x0, x20
0000000000051178	blr	x25
000000000005117c	ldr	x8, [x0]
0000000000051180	add	x19, x8, #0x138
0000000000051184	ldaxr	w24, [x19]
0000000000051188	stlxr	w8, wzr, [x19]
000000000005118c	cbnz	w8, 0x51184
0000000000051190	cmp	w24, #0x1
0000000000051194	b.ne	0x511b0
0000000000051198	adr	x8, #0x430f1
000000000005119c	nop
00000000000511a0	ldarb	w8, [x8]
00000000000511a4	tbz	w8, #0x0, 0x511b0
00000000000511a8	mov	x0, x19
00000000000511ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000511b0	mov	x8, sp
00000000000511b4	add	x23, x8, #0x18
00000000000511b8	str	xzr, [sp, #0x18]
00000000000511bc	mov	x0, x20
00000000000511c0	blr	x25
00000000000511c4	ldr	x9, [x0]
00000000000511c8	ldr	x10, [x9, #0x110]
00000000000511cc	str	x8, [x9, #0x110]
00000000000511d0	mov	x8, #0x400000000
00000000000511d4	stp	x10, x8, [sp, #0x8]
00000000000511d8	nop
00000000000511dc	ldr	x22, #0x25adc ; Objc class ref: FastaKmmKIteratorAsNSEnumerator
00000000000511e0	nop
00000000000511e4	ldrsw	x26, _OBJC_IVAR_$_FastaKmmMutableDictionary.mapHolder
00000000000511e8	bl	_Kotlin_initRuntimeIfNeeded
00000000000511ec	ldr	x0, [x21, x26]
00000000000511f0	mov	x1, x23
00000000000511f4	bl	_Kotlin_Map_keyIterator
00000000000511f8	mov	x2, x0
00000000000511fc	nop
0000000000051200	ldr	x1, #0x25688 ; Objc selector ref: createWithKIterator:
0000000000051204	mov	x0, x22
0000000000051208	bl	0x55584 ; Objc message: +[FastaKmmKIteratorAsNSEnumerator createWithKIterator:]
000000000005120c	mov	x21, x0
0000000000051210	mov	x0, x20
0000000000051214	blr	x25
0000000000051218	ldr	x8, [x0]
000000000005121c	ldr	x9, [sp, #0x8]
0000000000051220	str	x9, [x8, #0x110]
0000000000051224	ldaxr	w8, [x19]
0000000000051228	stlxr	w9, w24, [x19]
000000000005122c	cbnz	w9, 0x51224
0000000000051230	cbnz	w24, 0x51254
0000000000051234	cmp	w8, #0x1
0000000000051238	b.ne	0x51254
000000000005123c	adr	x8, #0x4304d
0000000000051240	nop
0000000000051244	ldarb	w8, [x8]
0000000000051248	tbz	w8, #0x0, 0x51254
000000000005124c	mov	x0, x19
0000000000051250	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051254	mov	x0, x21
0000000000051258	ldp	x29, x30, [sp, #0x60]
000000000005125c	ldp	x20, x19, [sp, #0x50]
0000000000051260	ldp	x22, x21, [sp, #0x40]
0000000000051264	ldp	x24, x23, [sp, #0x30]
0000000000051268	ldp	x26, x25, [sp, #0x20]
000000000005126c	add	sp, sp, #0x70
0000000000051270	ret
0000000000051274	mov	x21, x0
0000000000051278	mov	x0, x20
000000000005127c	blr	x25
0000000000051280	ldr	x8, [x0]
0000000000051284	ldr	x9, [sp, #0x8]
0000000000051288	str	x9, [x8, #0x110]
000000000005128c	ldaxr	w8, [x19]
0000000000051290	stlxr	w9, w24, [x19]
0000000000051294	cbnz	w9, 0x5128c
0000000000051298	cbnz	w24, 0x512bc
000000000005129c	cmp	w8, #0x1
00000000000512a0	b.ne	0x512bc
00000000000512a4	adr	x8, #0x42fe5
00000000000512a8	nop
00000000000512ac	ldarb	w8, [x8]
00000000000512b0	tbz	w8, #0x0, 0x512bc
00000000000512b4	mov	x0, x19
00000000000512b8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000512bc	mov	x0, x21
00000000000512c0	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary setObject:forKey:]:
00000000000512c4	sub	sp, sp, #0xc0
00000000000512c8	stp	x28, x27, [sp, #0x60]
00000000000512cc	stp	x26, x25, [sp, #0x70]
00000000000512d0	stp	x24, x23, [sp, #0x80]
00000000000512d4	stp	x22, x21, [sp, #0x90]
00000000000512d8	stp	x20, x19, [sp, #0xa0]
00000000000512dc	stp	x29, x30, [sp, #0xb0]
00000000000512e0	add	x29, sp, #0xb0
00000000000512e4	mov	x24, x2
00000000000512e8	mov	x23, x0
00000000000512ec	nop
00000000000512f0	ldr	x1, #0x25560 ; Objc selector ref: copyWithZone:
00000000000512f4	mov	x0, x3
00000000000512f8	mov	x2, #0x0
00000000000512fc	bl	0x55584 ; Objc message: -[x0 copyWithZone:]
0000000000051300	mov	x20, x0
0000000000051304	bl	_Kotlin_initRuntimeIfNeeded
0000000000051308	adrp	x21, 41 ; 0x7a000
000000000005130c	add	x21, x21, #0x2c0
0000000000051310	ldr	x27, [x21]
0000000000051314	mov	x0, x21
0000000000051318	blr	x27
000000000005131c	ldr	x8, [x0]
0000000000051320	add	x19, x8, #0x138
0000000000051324	ldaxr	w26, [x19]
0000000000051328	stlxr	w8, wzr, [x19]
000000000005132c	cbnz	w8, 0x51324
0000000000051330	cmp	w26, #0x1
0000000000051334	b.ne	0x51350
0000000000051338	adr	x8, #0x42f51
000000000005133c	nop
0000000000051340	ldarb	w8, [x8]
0000000000051344	tbz	w8, #0x0, 0x51350
0000000000051348	mov	x0, x19
000000000005134c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051350	add	x22, sp, #0x20
0000000000051354	str	xzr, [sp, #0x38]
0000000000051358	mov	x0, x21
000000000005135c	blr	x27
0000000000051360	ldr	x8, [x0]
0000000000051364	ldr	x9, [x8, #0x110]
0000000000051368	mov	x10, #0x400000000
000000000005136c	stp	x9, x10, [sp, #0x28]
0000000000051370	mov	x28, sp
0000000000051374	stp	x10, xzr, [sp, #0x10]
0000000000051378	str	x28, [x8, #0x110]
000000000005137c	str	x22, [sp, #0x8]
0000000000051380	adrp	x21, 37 ; 0x76000
0000000000051384	ldr	x0, [x21, #0xc98] ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000051388	nop
000000000005138c	ldr	x25, #0x25664 ; Objc selector ref: null
0000000000051390	mov	x1, x25
0000000000051394	bl	0x55584 ; Objc message: +[NSNull null]
0000000000051398	cmp	x20, x0
000000000005139c	b.eq	0x513c0
00000000000513a0	cbz	x20, 0x513c0
00000000000513a4	add	x2, x22, #0x18
00000000000513a8	nop
00000000000513ac	ldr	x1, #0x4312c
00000000000513b0	mov	x0, x20
00000000000513b4	bl	0x55584 ; Objc message: -[x0 null]
00000000000513b8	mov	x22, x0
00000000000513bc	b	0x513c8
00000000000513c0	mov	x22, #0x0
00000000000513c4	str	xzr, [sp, #0x38]
00000000000513c8	ldr	x0, [x21, #0xc98]
00000000000513cc	mov	x1, x25
00000000000513d0	bl	0x55584 ; Objc message: -[x0 null]
00000000000513d4	cmp	x0, x24
00000000000513d8	b.eq	0x513fc
00000000000513dc	cbz	x24, 0x513fc
00000000000513e0	add	x2, x28, #0x18
00000000000513e4	nop
00000000000513e8	ldr	x1, #0x430f0
00000000000513ec	mov	x0, x24
00000000000513f0	bl	0x55584 ; Objc message: -[x0 null]
00000000000513f4	mov	x24, x0
00000000000513f8	b	0x51404
00000000000513fc	mov	x24, #0x0
0000000000051400	str	xzr, [sp, #0x18]
0000000000051404	nop
0000000000051408	ldrsw	x21, _OBJC_IVAR_$_FastaKmmMutableDictionary.mapHolder
000000000005140c	bl	_Kotlin_initRuntimeIfNeeded
0000000000051410	ldr	x23, [x23, x21]
0000000000051414	movi.16b	v0, #0x0
0000000000051418	stp	q0, q0, [sp, #0x40]
000000000005141c	add	x8, sp, #0x40
0000000000051420	add	x25, x8, #0x18
0000000000051424	adrp	x21, 41 ; 0x7a000
0000000000051428	add	x21, x21, #0x2c0
000000000005142c	mov	x0, x21
0000000000051430	blr	x27
0000000000051434	ldr	x9, [x0]
0000000000051438	ldr	x10, [x9, #0x110]
000000000005143c	str	x8, [x9, #0x110]
0000000000051440	mov	x8, #0x400000000
0000000000051444	stp	x10, x8, [sp, #0x48]
0000000000051448	adr	x28, #0x42e41
000000000005144c	nop
0000000000051450	ldarb	w8, [x28]
0000000000051454	tbz	w8, #0x0, 0x5145c
0000000000051458	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000005145c	ldr	x8, [x23]
0000000000051460	and	x8, x8, #0xfffffffffffffffc
0000000000051464	ldr	x8, [x8]
0000000000051468	ldr	w9, [x8, #0x3c]
000000000005146c	ldr	x8, [x8, #0x40]
0000000000051470	tbnz	w9, #0x1f, 0x51480
0000000000051474	mov	w10, #0xb0
0000000000051478	and	x9, x9, x10
000000000005147c	b	0x51504
0000000000051480	neg	w10, w9
0000000000051484	mvn	w9, w9
0000000000051488	cmp	w10, #0x9
000000000005148c	b.ge	0x514c4
0000000000051490	cmp	w10, #0x2
0000000000051494	b.lt	0x514f8
0000000000051498	mov	x10, #0x0
000000000005149c	mov	x11, x8
00000000000514a0	ldr	w12, [x11]
00000000000514a4	cmp	w12, #0xaf
00000000000514a8	b.gt	0x51500
00000000000514ac	add	x10, x10, #0x1
00000000000514b0	add	x11, x11, #0x10
00000000000514b4	cmp	x9, x10
00000000000514b8	b.ne	0x514a0
00000000000514bc	mov	x10, x9
00000000000514c0	b	0x51500
00000000000514c4	mov	w10, #0x0
00000000000514c8	add	w11, w9, w10
00000000000514cc	cmp	w11, #0x0
00000000000514d0	cinc	w11, w11, lt
00000000000514d4	asr	w11, w11, #1
00000000000514d8	sbfiz	x12, x11, #4, #32
00000000000514dc	ldr	w12, [x8, x12]
00000000000514e0	cmp	w12, #0xb0
00000000000514e4	csinc	w10, w10, w11, ge
00000000000514e8	csel	w9, w9, w11, lt
00000000000514ec	cmp	w10, w9
00000000000514f0	b.lt	0x514c8
00000000000514f4	b	0x51500
00000000000514f8	mov	w10, #0x0
00000000000514fc	b	0x51500
0000000000051500	sxtw	x9, w10
0000000000051504	add	x8, x8, x9, lsl #4
0000000000051508	ldr	x8, [x8, #0x8]
000000000005150c	ldr	x8, [x8, #0x20]
0000000000051510	mov	x0, x23
0000000000051514	mov	x1, x22
0000000000051518	mov	x2, x24
000000000005151c	mov	x3, x25
0000000000051520	blr	x8
0000000000051524	mov	x0, x21
0000000000051528	blr	x27
000000000005152c	ldr	x8, [x0]
0000000000051530	ldr	x9, [sp, #0x28]
0000000000051534	str	x9, [x8, #0x110]
0000000000051538	ldaxr	w8, [x19]
000000000005153c	stlxr	w9, w26, [x19]
0000000000051540	cbnz	w9, 0x51538
0000000000051544	cbnz	w26, 0x51560
0000000000051548	cmp	w8, #0x1
000000000005154c	b.ne	0x51560
0000000000051550	ldarb	w8, [x28]
0000000000051554	tbz	w8, #0x0, 0x51560
0000000000051558	mov	x0, x19
000000000005155c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051560	mov	x0, x20
0000000000051564	bl	0x555a8 ; symbol stub for: _objc_release
0000000000051568	ldp	x29, x30, [sp, #0xb0]
000000000005156c	ldp	x20, x19, [sp, #0xa0]
0000000000051570	ldp	x22, x21, [sp, #0x90]
0000000000051574	ldp	x24, x23, [sp, #0x80]
0000000000051578	ldp	x26, x25, [sp, #0x70]
000000000005157c	ldp	x28, x27, [sp, #0x60]
0000000000051580	add	sp, sp, #0xc0
0000000000051584	ret
0000000000051588	mov	x20, x0
000000000005158c	mov	x0, x21
0000000000051590	blr	x27
0000000000051594	ldr	x8, [x0]
0000000000051598	ldr	x9, [sp, #0x48]
000000000005159c	str	x9, [x8, #0x110]
00000000000515a0	b	0x515ac
00000000000515a4	b	0x515a8
00000000000515a8	mov	x20, x0
00000000000515ac	adrp	x0, 41 ; 0x7a000
00000000000515b0	add	x0, x0, #0x2c0
00000000000515b4	blr	x27
00000000000515b8	ldr	x8, [x0]
00000000000515bc	ldr	x9, [sp, #0x28]
00000000000515c0	str	x9, [x8, #0x110]
00000000000515c4	ldaxr	w8, [x19]
00000000000515c8	stlxr	w9, w26, [x19]
00000000000515cc	cbnz	w9, 0x515c4
00000000000515d0	cbnz	w26, 0x515f4
00000000000515d4	cmp	w8, #0x1
00000000000515d8	b.ne	0x515f4
00000000000515dc	adr	x8, #0x42cad
00000000000515e0	nop
00000000000515e4	ldarb	w8, [x8]
00000000000515e8	tbz	w8, #0x0, 0x515f4
00000000000515ec	mov	x0, x19
00000000000515f0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000515f4	mov	x0, x20
00000000000515f8	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary removeObjectForKey:]:
00000000000515fc	sub	sp, sp, #0x90
0000000000051600	stp	x26, x25, [sp, #0x40]
0000000000051604	stp	x24, x23, [sp, #0x50]
0000000000051608	stp	x22, x21, [sp, #0x60]
000000000005160c	stp	x20, x19, [sp, #0x70]
0000000000051610	stp	x29, x30, [sp, #0x80]
0000000000051614	add	x29, sp, #0x80
0000000000051618	mov	x21, x2
000000000005161c	mov	x22, x0
0000000000051620	bl	_Kotlin_initRuntimeIfNeeded
0000000000051624	adrp	x20, 41 ; 0x7a000
0000000000051628	add	x20, x20, #0x2c0
000000000005162c	ldr	x25, [x20]
0000000000051630	mov	x0, x20
0000000000051634	blr	x25
0000000000051638	ldr	x8, [x0]
000000000005163c	add	x19, x8, #0x138
0000000000051640	ldaxr	w24, [x19]
0000000000051644	stlxr	w8, wzr, [x19]
0000000000051648	cbnz	w8, 0x51640
000000000005164c	cmp	w24, #0x1
0000000000051650	b.ne	0x5166c
0000000000051654	adr	x8, #0x42c35
0000000000051658	nop
000000000005165c	ldarb	w8, [x8]
0000000000051660	tbz	w8, #0x0, 0x5166c
0000000000051664	mov	x0, x19
0000000000051668	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000005166c	mov	x23, sp
0000000000051670	str	xzr, [sp, #0x18]
0000000000051674	mov	x0, x20
0000000000051678	blr	x25
000000000005167c	ldr	x8, [x0]
0000000000051680	ldr	x9, [x8, #0x110]
0000000000051684	str	x23, [x8, #0x110]
0000000000051688	mov	x8, #0x400000000
000000000005168c	stp	x9, x8, [sp, #0x8]
0000000000051690	nop
0000000000051694	ldr	x0, #0x25604 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000051698	nop
000000000005169c	ldr	x1, #0x25354 ; Objc selector ref: null
00000000000516a0	bl	0x55584 ; Objc message: +[NSNull null]
00000000000516a4	cmp	x0, x21
00000000000516a8	ccmp	x21, #0x0, #0x4, ne
00000000000516ac	b.ne	0x516bc
00000000000516b0	mov	x21, #0x0
00000000000516b4	str	xzr, [sp, #0x18]
00000000000516b8	b	0x516d4
00000000000516bc	add	x2, x23, #0x18
00000000000516c0	nop
00000000000516c4	ldr	x1, #0x42e14
00000000000516c8	mov	x0, x21
00000000000516cc	bl	0x55584 ; Objc message: -[x0 null]
00000000000516d0	mov	x21, x0
00000000000516d4	nop
00000000000516d8	ldrsw	x23, _OBJC_IVAR_$_FastaKmmMutableDictionary.mapHolder
00000000000516dc	bl	_Kotlin_initRuntimeIfNeeded
00000000000516e0	ldr	x22, [x22, x23]
00000000000516e4	movi.16b	v0, #0x0
00000000000516e8	stp	q0, q0, [sp, #0x20]
00000000000516ec	add	x8, sp, #0x20
00000000000516f0	add	x23, x8, #0x18
00000000000516f4	mov	x0, x20
00000000000516f8	blr	x25
00000000000516fc	ldr	x9, [x0]
0000000000051700	ldr	x10, [x9, #0x110]
0000000000051704	str	x8, [x9, #0x110]
0000000000051708	mov	x8, #0x400000000
000000000005170c	stp	x10, x8, [sp, #0x28]
0000000000051710	adr	x26, #0x42b79
0000000000051714	nop
0000000000051718	ldarb	w8, [x26]
000000000005171c	tbz	w8, #0x0, 0x51724
0000000000051720	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000051724	ldr	x8, [x22]
0000000000051728	and	x8, x8, #0xfffffffffffffffc
000000000005172c	ldr	x8, [x8]
0000000000051730	ldr	w9, [x8, #0x3c]
0000000000051734	ldr	x8, [x8, #0x40]
0000000000051738	tbnz	w9, #0x1f, 0x51748
000000000005173c	mov	w10, #0xb0
0000000000051740	and	x9, x9, x10
0000000000051744	b	0x517cc
0000000000051748	neg	w10, w9
000000000005174c	mvn	w9, w9
0000000000051750	cmp	w10, #0x9
0000000000051754	b.ge	0x5178c
0000000000051758	cmp	w10, #0x2
000000000005175c	b.lt	0x517c0
0000000000051760	mov	x10, #0x0
0000000000051764	mov	x11, x8
0000000000051768	ldr	w12, [x11]
000000000005176c	cmp	w12, #0xaf
0000000000051770	b.gt	0x517c8
0000000000051774	add	x10, x10, #0x1
0000000000051778	add	x11, x11, #0x10
000000000005177c	cmp	x9, x10
0000000000051780	b.ne	0x51768
0000000000051784	mov	x10, x9
0000000000051788	b	0x517c8
000000000005178c	mov	w10, #0x0
0000000000051790	add	w11, w9, w10
0000000000051794	cmp	w11, #0x0
0000000000051798	cinc	w11, w11, lt
000000000005179c	asr	w11, w11, #1
00000000000517a0	sbfiz	x12, x11, #4, #32
00000000000517a4	ldr	w12, [x8, x12]
00000000000517a8	cmp	w12, #0xb0
00000000000517ac	csinc	w10, w10, w11, ge
00000000000517b0	csel	w9, w9, w11, lt
00000000000517b4	cmp	w10, w9
00000000000517b8	b.lt	0x51790
00000000000517bc	b	0x517c8
00000000000517c0	mov	w10, #0x0
00000000000517c4	b	0x517c8
00000000000517c8	sxtw	x9, w10
00000000000517cc	add	x8, x8, x9, lsl #4
00000000000517d0	ldr	x8, [x8, #0x8]
00000000000517d4	ldr	x8, [x8, #0x30]
00000000000517d8	mov	x0, x22
00000000000517dc	mov	x1, x21
00000000000517e0	mov	x2, x23
00000000000517e4	blr	x8
00000000000517e8	mov	x0, x20
00000000000517ec	blr	x25
00000000000517f0	ldr	x8, [x0]
00000000000517f4	ldr	x9, [sp, #0x8]
00000000000517f8	str	x9, [x8, #0x110]
00000000000517fc	ldaxr	w8, [x19]
0000000000051800	stlxr	w9, w24, [x19]
0000000000051804	cbnz	w9, 0x517fc
0000000000051808	cbnz	w24, 0x51824
000000000005180c	cmp	w8, #0x1
0000000000051810	b.ne	0x51824
0000000000051814	ldarb	w8, [x26]
0000000000051818	tbz	w8, #0x0, 0x51824
000000000005181c	mov	x0, x19
0000000000051820	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051824	ldp	x29, x30, [sp, #0x80]
0000000000051828	ldp	x20, x19, [sp, #0x70]
000000000005182c	ldp	x22, x21, [sp, #0x60]
0000000000051830	ldp	x24, x23, [sp, #0x50]
0000000000051834	ldp	x26, x25, [sp, #0x40]
0000000000051838	add	sp, sp, #0x90
000000000005183c	ret
0000000000051840	mov	x21, x0
0000000000051844	mov	x0, x20
0000000000051848	blr	x25
000000000005184c	ldr	x8, [x0]
0000000000051850	ldr	x9, [sp, #0x28]
0000000000051854	str	x9, [x8, #0x110]
0000000000051858	b	0x5186c
000000000005185c	mov	x21, x0
0000000000051860	mov	x0, x20
0000000000051864	blr	x25
0000000000051868	ldr	x8, [x0]
000000000005186c	ldr	x9, [sp, #0x8]
0000000000051870	str	x9, [x8, #0x110]
0000000000051874	ldaxr	w8, [x19]
0000000000051878	stlxr	w9, w24, [x19]
000000000005187c	cbnz	w9, 0x51874
0000000000051880	cbnz	w24, 0x518a4
0000000000051884	cmp	w8, #0x1
0000000000051888	b.ne	0x518a4
000000000005188c	adr	x8, #0x429fd
0000000000051890	nop
0000000000051894	ldarb	w8, [x8]
0000000000051898	tbz	w8, #0x0, 0x518a4
000000000005189c	mov	x0, x19
00000000000518a0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000518a4	mov	x0, x21
00000000000518a8	bl	0x55194 ; symbol stub for: __Unwind_Resume
-[KotlinUShort getValue:]:
00000000000518ac	nop
00000000000518b0	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUShort.value_
00000000000518b4	ldrh	w8, [x0, x8]
00000000000518b8	strh	w8, [x2]
00000000000518bc	ret
-[KotlinUShort initWithUnsignedShort:]:
00000000000518c0	sub	sp, sp, #0x30
00000000000518c4	stp	x20, x19, [sp, #0x10]
00000000000518c8	stp	x29, x30, [sp, #0x20]
00000000000518cc	add	x29, sp, #0x20
00000000000518d0	mov	x19, x2
00000000000518d4	nop
00000000000518d8	ldr	x8, #0x254c0 ; Objc class ref: FastaKmmUShort
00000000000518dc	stp	x0, x8, [sp]
00000000000518e0	nop
00000000000518e4	ldr	x1, #0x24ffc ; Objc selector ref: init
00000000000518e8	mov	x0, sp
00000000000518ec	bl	0x55590 ; Objc message: -[[x0 super] init]
00000000000518f0	nop
00000000000518f4	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUShort.value_
00000000000518f8	strh	w19, [x0, x8]
00000000000518fc	ldp	x29, x30, [sp, #0x20]
0000000000051900	ldp	x20, x19, [sp, #0x10]
0000000000051904	add	sp, sp, #0x30
0000000000051908	ret
-[KotlinUShort initWithInteger:]:
000000000005190c	sub	sp, sp, #0x30
0000000000051910	stp	x20, x19, [sp, #0x10]
0000000000051914	stp	x29, x30, [sp, #0x20]
0000000000051918	add	x29, sp, #0x20
000000000005191c	mov	x19, x2
0000000000051920	nop
0000000000051924	ldr	x8, #0x25474 ; Objc class ref: FastaKmmUShort
0000000000051928	stp	x0, x8, [sp]
000000000005192c	nop
0000000000051930	ldr	x1, #0x24fb0 ; Objc selector ref: init
0000000000051934	mov	x0, sp
0000000000051938	bl	0x55590 ; Objc message: -[[x0 super] init]
000000000005193c	nop
0000000000051940	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUShort.value_
0000000000051944	strh	w19, [x0, x8]
0000000000051948	ldp	x29, x30, [sp, #0x20]
000000000005194c	ldp	x20, x19, [sp, #0x10]
0000000000051950	add	sp, sp, #0x30
0000000000051954	ret
-[KotlinUShort unsignedShortValue]:
0000000000051958	nop
000000000005195c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUShort.value_
0000000000051960	ldrh	w0, [x0, x8]
0000000000051964	ret
-[KotlinUShort objCType]:
0000000000051968	adr	x0, #0xd31e ; literal pool for: "S"
000000000005196c	nop
0000000000051970	ret
-[KotlinUShort toKotlin:]:
0000000000051974	mov	x1, x2
0000000000051978	nop
000000000005197c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUShort.value_
0000000000051980	ldrh	w0, [x0, x8]
0000000000051984	b	_Kotlin_boxUShort
-[KotlinULong getValue:]:
0000000000051988	nop
000000000005198c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmULong.value_
0000000000051990	ldr	x8, [x0, x8]
0000000000051994	str	x8, [x2]
0000000000051998	ret
-[KotlinULong initWithUnsignedLongLong:]:
000000000005199c	sub	sp, sp, #0x30
00000000000519a0	stp	x20, x19, [sp, #0x10]
00000000000519a4	stp	x29, x30, [sp, #0x20]
00000000000519a8	add	x29, sp, #0x20
00000000000519ac	mov	x19, x2
00000000000519b0	nop
00000000000519b4	ldr	x8, #0x253f4 ; Objc class ref: FastaKmmULong
00000000000519b8	stp	x0, x8, [sp]
00000000000519bc	nop
00000000000519c0	ldr	x1, #0x24f20 ; Objc selector ref: init
00000000000519c4	mov	x0, sp
00000000000519c8	bl	0x55590 ; Objc message: -[[x0 super] init]
00000000000519cc	nop
00000000000519d0	ldrsw	x8, _OBJC_IVAR_$_FastaKmmULong.value_
00000000000519d4	str	x19, [x0, x8]
00000000000519d8	ldp	x29, x30, [sp, #0x20]
00000000000519dc	ldp	x20, x19, [sp, #0x10]
00000000000519e0	add	sp, sp, #0x30
00000000000519e4	ret
-[KotlinULong initWithInteger:]:
00000000000519e8	sub	sp, sp, #0x30
00000000000519ec	stp	x20, x19, [sp, #0x10]
00000000000519f0	stp	x29, x30, [sp, #0x20]
00000000000519f4	add	x29, sp, #0x20
00000000000519f8	mov	x19, x2
00000000000519fc	nop
0000000000051a00	ldr	x8, #0x253a8 ; Objc class ref: FastaKmmULong
0000000000051a04	stp	x0, x8, [sp]
0000000000051a08	nop
0000000000051a0c	ldr	x1, #0x24ed4 ; Objc selector ref: init
0000000000051a10	mov	x0, sp
0000000000051a14	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000051a18	nop
0000000000051a1c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmULong.value_
0000000000051a20	str	x19, [x0, x8]
0000000000051a24	ldp	x29, x30, [sp, #0x20]
0000000000051a28	ldp	x20, x19, [sp, #0x10]
0000000000051a2c	add	sp, sp, #0x30
0000000000051a30	ret
-[KotlinULong unsignedLongLongValue]:
0000000000051a34	nop
0000000000051a38	ldrsw	x8, _OBJC_IVAR_$_FastaKmmULong.value_
0000000000051a3c	ldr	x0, [x0, x8]
0000000000051a40	ret
-[KotlinULong objCType]:
0000000000051a44	adr	x0, #0xd244 ; literal pool for: "Q"
0000000000051a48	nop
0000000000051a4c	ret
-[KotlinULong toKotlin:]:
0000000000051a50	mov	x1, x2
0000000000051a54	nop
0000000000051a58	ldrsw	x8, _OBJC_IVAR_$_FastaKmmULong.value_
0000000000051a5c	ldr	x0, [x0, x8]
0000000000051a60	b	_Kotlin_boxULong
-[KotlinUInt getValue:]:
0000000000051a64	nop
0000000000051a68	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUInt.value_
0000000000051a6c	ldr	w8, [x0, x8]
0000000000051a70	str	w8, [x2]
0000000000051a74	ret
-[KotlinUInt initWithUnsignedInt:]:
0000000000051a78	sub	sp, sp, #0x30
0000000000051a7c	stp	x20, x19, [sp, #0x10]
0000000000051a80	stp	x29, x30, [sp, #0x20]
0000000000051a84	add	x29, sp, #0x20
0000000000051a88	mov	x19, x2
0000000000051a8c	nop
0000000000051a90	ldr	x8, #0x25310 ; Objc class ref: FastaKmmUInt
0000000000051a94	stp	x0, x8, [sp]
0000000000051a98	nop
0000000000051a9c	ldr	x1, #0x24e44 ; Objc selector ref: init
0000000000051aa0	mov	x0, sp
0000000000051aa4	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000051aa8	nop
0000000000051aac	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUInt.value_
0000000000051ab0	str	w19, [x0, x8]
0000000000051ab4	ldp	x29, x30, [sp, #0x20]
0000000000051ab8	ldp	x20, x19, [sp, #0x10]
0000000000051abc	add	sp, sp, #0x30
0000000000051ac0	ret
-[KotlinUInt initWithInteger:]:
0000000000051ac4	sub	sp, sp, #0x30
0000000000051ac8	stp	x20, x19, [sp, #0x10]
0000000000051acc	stp	x29, x30, [sp, #0x20]
0000000000051ad0	add	x29, sp, #0x20
0000000000051ad4	mov	x19, x2
0000000000051ad8	nop
0000000000051adc	ldr	x8, #0x252c4 ; Objc class ref: FastaKmmUInt
0000000000051ae0	stp	x0, x8, [sp]
0000000000051ae4	nop
0000000000051ae8	ldr	x1, #0x24df8 ; Objc selector ref: init
0000000000051aec	mov	x0, sp
0000000000051af0	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000051af4	nop
0000000000051af8	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUInt.value_
0000000000051afc	str	w19, [x0, x8]
0000000000051b00	ldp	x29, x30, [sp, #0x20]
0000000000051b04	ldp	x20, x19, [sp, #0x10]
0000000000051b08	add	sp, sp, #0x30
0000000000051b0c	ret
-[KotlinUInt unsignedIntValue]:
0000000000051b10	nop
0000000000051b14	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUInt.value_
0000000000051b18	ldr	w0, [x0, x8]
0000000000051b1c	ret
-[KotlinUInt objCType]:
0000000000051b20	adr	x0, #0xd16a ; literal pool for: "I"
0000000000051b24	nop
0000000000051b28	ret
-[KotlinUInt toKotlin:]:
0000000000051b2c	mov	x1, x2
0000000000051b30	nop
0000000000051b34	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUInt.value_
0000000000051b38	ldr	w0, [x0, x8]
0000000000051b3c	b	_Kotlin_boxUInt
-[KotlinUByte getValue:]:
0000000000051b40	nop
0000000000051b44	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUByte.value_
0000000000051b48	ldrb	w8, [x0, x8]
0000000000051b4c	strb	w8, [x2]
0000000000051b50	ret
-[KotlinUByte initWithUnsignedChar:]:
0000000000051b54	sub	sp, sp, #0x30
0000000000051b58	stp	x20, x19, [sp, #0x10]
0000000000051b5c	stp	x29, x30, [sp, #0x20]
0000000000051b60	add	x29, sp, #0x20
0000000000051b64	mov	x19, x2
0000000000051b68	nop
0000000000051b6c	ldr	x8, #0x25224 ; Objc class ref: FastaKmmUByte
0000000000051b70	stp	x0, x8, [sp]
0000000000051b74	nop
0000000000051b78	ldr	x1, #0x24d68 ; Objc selector ref: init
0000000000051b7c	mov	x0, sp
0000000000051b80	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000051b84	nop
0000000000051b88	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUByte.value_
0000000000051b8c	strb	w19, [x0, x8]
0000000000051b90	ldp	x29, x30, [sp, #0x20]
0000000000051b94	ldp	x20, x19, [sp, #0x10]
0000000000051b98	add	sp, sp, #0x30
0000000000051b9c	ret
-[KotlinUByte initWithInteger:]:
0000000000051ba0	sub	sp, sp, #0x30
0000000000051ba4	stp	x20, x19, [sp, #0x10]
0000000000051ba8	stp	x29, x30, [sp, #0x20]
0000000000051bac	add	x29, sp, #0x20
0000000000051bb0	mov	x19, x2
0000000000051bb4	nop
0000000000051bb8	ldr	x8, #0x251d8 ; Objc class ref: FastaKmmUByte
0000000000051bbc	stp	x0, x8, [sp]
0000000000051bc0	nop
0000000000051bc4	ldr	x1, #0x24d1c ; Objc selector ref: init
0000000000051bc8	mov	x0, sp
0000000000051bcc	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000051bd0	nop
0000000000051bd4	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUByte.value_
0000000000051bd8	strb	w19, [x0, x8]
0000000000051bdc	ldp	x29, x30, [sp, #0x20]
0000000000051be0	ldp	x20, x19, [sp, #0x10]
0000000000051be4	add	sp, sp, #0x30
0000000000051be8	ret
-[KotlinUByte unsignedCharValue]:
0000000000051bec	nop
0000000000051bf0	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUByte.value_
0000000000051bf4	ldrb	w0, [x0, x8]
0000000000051bf8	ret
-[KotlinUByte objCType]:
0000000000051bfc	adr	x0, #0xd090 ; literal pool for: "C"
0000000000051c00	nop
0000000000051c04	ret
-[KotlinUByte toKotlin:]:
0000000000051c08	mov	x1, x2
0000000000051c0c	nop
0000000000051c10	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUByte.value_
0000000000051c14	ldrb	w0, [x0, x8]
0000000000051c18	b	_Kotlin_boxUByte
-[KotlinShort getValue:]:
0000000000051c1c	nop
0000000000051c20	ldrsw	x8, _OBJC_IVAR_$_FastaKmmShort.value_
0000000000051c24	ldrh	w8, [x0, x8]
0000000000051c28	strh	w8, [x2]
0000000000051c2c	ret
-[KotlinShort initWithShort:]:
0000000000051c30	sub	sp, sp, #0x30
0000000000051c34	stp	x20, x19, [sp, #0x10]
0000000000051c38	stp	x29, x30, [sp, #0x20]
0000000000051c3c	add	x29, sp, #0x20
0000000000051c40	mov	x19, x2
0000000000051c44	nop
0000000000051c48	ldr	x8, #0x25130 ; Objc class ref: FastaKmmShort
0000000000051c4c	stp	x0, x8, [sp]
0000000000051c50	nop
0000000000051c54	ldr	x1, #0x24c8c ; Objc selector ref: init
0000000000051c58	mov	x0, sp
0000000000051c5c	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000051c60	nop
0000000000051c64	ldrsw	x8, _OBJC_IVAR_$_FastaKmmShort.value_
0000000000051c68	strh	w19, [x0, x8]
0000000000051c6c	ldp	x29, x30, [sp, #0x20]
0000000000051c70	ldp	x20, x19, [sp, #0x10]
0000000000051c74	add	sp, sp, #0x30
0000000000051c78	ret
-[KotlinShort initWithInteger:]:
0000000000051c7c	sub	sp, sp, #0x30
0000000000051c80	stp	x20, x19, [sp, #0x10]
0000000000051c84	stp	x29, x30, [sp, #0x20]
0000000000051c88	add	x29, sp, #0x20
0000000000051c8c	mov	x19, x2
0000000000051c90	nop
0000000000051c94	ldr	x8, #0x250e4 ; Objc class ref: FastaKmmShort
0000000000051c98	stp	x0, x8, [sp]
0000000000051c9c	nop
0000000000051ca0	ldr	x1, #0x24c40 ; Objc selector ref: init
0000000000051ca4	mov	x0, sp
0000000000051ca8	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000051cac	nop
0000000000051cb0	ldrsw	x8, _OBJC_IVAR_$_FastaKmmShort.value_
0000000000051cb4	strh	w19, [x0, x8]
0000000000051cb8	ldp	x29, x30, [sp, #0x20]
0000000000051cbc	ldp	x20, x19, [sp, #0x10]
0000000000051cc0	add	sp, sp, #0x30
0000000000051cc4	ret
-[KotlinShort shortValue]:
0000000000051cc8	nop
0000000000051ccc	ldrsw	x8, _OBJC_IVAR_$_FastaKmmShort.value_
0000000000051cd0	ldrsh	w0, [x0, x8]
0000000000051cd4	ret
-[KotlinShort objCType]:
0000000000051cd8	adr	x0, #0xcfb6 ; literal pool for: "s"
0000000000051cdc	nop
0000000000051ce0	ret
-[KotlinShort toKotlin:]:
0000000000051ce4	mov	x1, x2
0000000000051ce8	nop
0000000000051cec	ldrsw	x8, _OBJC_IVAR_$_FastaKmmShort.value_
0000000000051cf0	ldrsh	w0, [x0, x8]
0000000000051cf4	b	_Kotlin_boxShort
-[KotlinNumber initWithBool:]:
0000000000051cf8	stp	x29, x30, [sp, #-0x10]!
0000000000051cfc	mov	x29, sp
0000000000051d00	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithChar:]:
0000000000051d04	stp	x29, x30, [sp, #-0x10]!
0000000000051d08	mov	x29, sp
0000000000051d0c	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithShort:]:
0000000000051d10	stp	x29, x30, [sp, #-0x10]!
0000000000051d14	mov	x29, sp
0000000000051d18	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithInt:]:
0000000000051d1c	stp	x29, x30, [sp, #-0x10]!
0000000000051d20	mov	x29, sp
0000000000051d24	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithInteger:]:
0000000000051d28	stp	x29, x30, [sp, #-0x10]!
0000000000051d2c	mov	x29, sp
0000000000051d30	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithLong:]:
0000000000051d34	stp	x29, x30, [sp, #-0x10]!
0000000000051d38	mov	x29, sp
0000000000051d3c	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithLongLong:]:
0000000000051d40	stp	x29, x30, [sp, #-0x10]!
0000000000051d44	mov	x29, sp
0000000000051d48	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedChar:]:
0000000000051d4c	stp	x29, x30, [sp, #-0x10]!
0000000000051d50	mov	x29, sp
0000000000051d54	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedShort:]:
0000000000051d58	stp	x29, x30, [sp, #-0x10]!
0000000000051d5c	mov	x29, sp
0000000000051d60	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedInt:]:
0000000000051d64	stp	x29, x30, [sp, #-0x10]!
0000000000051d68	mov	x29, sp
0000000000051d6c	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedInteger:]:
0000000000051d70	stp	x29, x30, [sp, #-0x10]!
0000000000051d74	mov	x29, sp
0000000000051d78	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedLong:]:
0000000000051d7c	stp	x29, x30, [sp, #-0x10]!
0000000000051d80	mov	x29, sp
0000000000051d84	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedLongLong:]:
0000000000051d88	stp	x29, x30, [sp, #-0x10]!
0000000000051d8c	mov	x29, sp
0000000000051d90	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithFloat:]:
0000000000051d94	stp	x29, x30, [sp, #-0x10]!
0000000000051d98	mov	x29, sp
0000000000051d9c	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithDouble:]:
0000000000051da0	stp	x29, x30, [sp, #-0x10]!
0000000000051da4	mov	x29, sp
0000000000051da8	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector:
0000000000051dac	sub	sp, sp, #0x40
0000000000051db0	stp	x22, x21, [sp, #0x10]
0000000000051db4	stp	x20, x19, [sp, #0x20]
0000000000051db8	stp	x29, x30, [sp, #0x30]
0000000000051dbc	add	x29, sp, #0x30
0000000000051dc0	mov	x19, x1
0000000000051dc4	nop
0000000000051dc8	ldr	x20, #0x24eb0 ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000051dcc	nop
0000000000051dd0	ldr	x8, #0xe238 ; literal pool symbol address: _NSGenericException
0000000000051dd4	ldr	x21, [x8]
0000000000051dd8	nop
0000000000051ddc	ldr	x1, #0x24a5c ; Objc selector ref: class
0000000000051de0	bl	0x55584 ; Objc message: +[NSException class]
0000000000051de4	bl	0x55170 ; symbol stub for: _NSStringFromClass
0000000000051de8	mov	x22, x0
0000000000051dec	mov	x0, x19
0000000000051df0	bl	0x55704 ; symbol stub for: _sel_getName
0000000000051df4	nop
0000000000051df8	ldr	x1, #0x24c38 ; Objc selector ref: raise:format:
0000000000051dfc	stp	x22, x0, [sp]
0000000000051e00	adr	x3, #0x1fbf0 ; Objc cfstring ref: @"bad cfstring ref"
0000000000051e04	nop
0000000000051e08	mov	x0, x20
0000000000051e0c	mov	x2, x21
0000000000051e10	bl	0x55584 ; Objc message: -[x0 raise:format:]
0000000000051e14	bl	0x55398 ; symbol stub for: _abort
-[KotlinLong getValue:]:
0000000000051e18	nop
0000000000051e1c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmLong.value_
0000000000051e20	ldr	x8, [x0, x8]
0000000000051e24	str	x8, [x2]
0000000000051e28	ret
-[KotlinLong initWithLongLong:]:
0000000000051e2c	sub	sp, sp, #0x30
0000000000051e30	stp	x20, x19, [sp, #0x10]
0000000000051e34	stp	x29, x30, [sp, #0x20]
0000000000051e38	add	x29, sp, #0x20
0000000000051e3c	mov	x19, x2
0000000000051e40	nop
0000000000051e44	ldr	x8, #0x24f44 ; Objc class ref: FastaKmmLong
0000000000051e48	stp	x0, x8, [sp]
0000000000051e4c	nop
0000000000051e50	ldr	x1, #0x24a90 ; Objc selector ref: init
0000000000051e54	mov	x0, sp
0000000000051e58	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000051e5c	nop
0000000000051e60	ldrsw	x8, _OBJC_IVAR_$_FastaKmmLong.value_
0000000000051e64	str	x19, [x0, x8]
0000000000051e68	ldp	x29, x30, [sp, #0x20]
0000000000051e6c	ldp	x20, x19, [sp, #0x10]
0000000000051e70	add	sp, sp, #0x30
0000000000051e74	ret
-[KotlinLong initWithInteger:]:
0000000000051e78	sub	sp, sp, #0x30
0000000000051e7c	stp	x20, x19, [sp, #0x10]
0000000000051e80	stp	x29, x30, [sp, #0x20]
0000000000051e84	add	x29, sp, #0x20
0000000000051e88	mov	x19, x2
0000000000051e8c	nop
0000000000051e90	ldr	x8, #0x24ef8 ; Objc class ref: FastaKmmLong
0000000000051e94	stp	x0, x8, [sp]
0000000000051e98	nop
0000000000051e9c	ldr	x1, #0x24a44 ; Objc selector ref: init
0000000000051ea0	mov	x0, sp
0000000000051ea4	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000051ea8	nop
0000000000051eac	ldrsw	x8, _OBJC_IVAR_$_FastaKmmLong.value_
0000000000051eb0	str	x19, [x0, x8]
0000000000051eb4	ldp	x29, x30, [sp, #0x20]
0000000000051eb8	ldp	x20, x19, [sp, #0x10]
0000000000051ebc	add	sp, sp, #0x30
0000000000051ec0	ret
-[KotlinLong longLongValue]:
0000000000051ec4	nop
0000000000051ec8	ldrsw	x8, _OBJC_IVAR_$_FastaKmmLong.value_
0000000000051ecc	ldr	x0, [x0, x8]
0000000000051ed0	ret
-[KotlinLong objCType]:
0000000000051ed4	adr	x0, #0xcdfc ; literal pool for: "q"
0000000000051ed8	nop
0000000000051edc	ret
-[KotlinLong toKotlin:]:
0000000000051ee0	mov	x1, x2
0000000000051ee4	nop
0000000000051ee8	ldrsw	x8, _OBJC_IVAR_$_FastaKmmLong.value_
0000000000051eec	ldr	x0, [x0, x8]
0000000000051ef0	b	_Kotlin_boxLong
-[KotlinInt getValue:]:
0000000000051ef4	nop
0000000000051ef8	ldrsw	x8, _OBJC_IVAR_$_FastaKmmInt.value_
0000000000051efc	ldr	w8, [x0, x8]
0000000000051f00	str	w8, [x2]
0000000000051f04	ret
-[KotlinInt initWithInt:]:
0000000000051f08	sub	sp, sp, #0x30
0000000000051f0c	stp	x20, x19, [sp, #0x10]
0000000000051f10	stp	x29, x30, [sp, #0x20]
0000000000051f14	add	x29, sp, #0x20
0000000000051f18	mov	x19, x2
0000000000051f1c	nop
0000000000051f20	ldr	x8, #0x24e60 ; Objc class ref: FastaKmmInt
0000000000051f24	stp	x0, x8, [sp]
0000000000051f28	nop
0000000000051f2c	ldr	x1, #0x249b4 ; Objc selector ref: init
0000000000051f30	mov	x0, sp
0000000000051f34	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000051f38	nop
0000000000051f3c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmInt.value_
0000000000051f40	str	w19, [x0, x8]
0000000000051f44	ldp	x29, x30, [sp, #0x20]
0000000000051f48	ldp	x20, x19, [sp, #0x10]
0000000000051f4c	add	sp, sp, #0x30
0000000000051f50	ret
-[KotlinInt initWithInteger:]:
0000000000051f54	sub	sp, sp, #0x30
0000000000051f58	stp	x20, x19, [sp, #0x10]
0000000000051f5c	stp	x29, x30, [sp, #0x20]
0000000000051f60	add	x29, sp, #0x20
0000000000051f64	mov	x19, x2
0000000000051f68	nop
0000000000051f6c	ldr	x8, #0x24e14 ; Objc class ref: FastaKmmInt
0000000000051f70	stp	x0, x8, [sp]
0000000000051f74	nop
0000000000051f78	ldr	x1, #0x24968 ; Objc selector ref: init
0000000000051f7c	mov	x0, sp
0000000000051f80	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000051f84	nop
0000000000051f88	ldrsw	x8, _OBJC_IVAR_$_FastaKmmInt.value_
0000000000051f8c	str	w19, [x0, x8]
0000000000051f90	ldp	x29, x30, [sp, #0x20]
0000000000051f94	ldp	x20, x19, [sp, #0x10]
0000000000051f98	add	sp, sp, #0x30
0000000000051f9c	ret
-[KotlinInt intValue]:
0000000000051fa0	nop
0000000000051fa4	ldrsw	x8, _OBJC_IVAR_$_FastaKmmInt.value_
0000000000051fa8	ldr	w0, [x0, x8]
0000000000051fac	ret
-[KotlinInt objCType]:
0000000000051fb0	adr	x0, #0xcd22 ; literal pool for: "i"
0000000000051fb4	nop
0000000000051fb8	ret
-[KotlinInt toKotlin:]:
0000000000051fbc	sub	sp, sp, #0x50
0000000000051fc0	stp	x22, x21, [sp, #0x20]
0000000000051fc4	stp	x20, x19, [sp, #0x30]
0000000000051fc8	stp	x29, x30, [sp, #0x40]
0000000000051fcc	add	x29, sp, #0x40
0000000000051fd0	mov	x19, x2
0000000000051fd4	nop
0000000000051fd8	ldrsw	x8, _OBJC_IVAR_$_FastaKmmInt.value_
0000000000051fdc	ldr	w21, [x0, x8]
0000000000051fe0	str	xzr, [sp, #0x8]
0000000000051fe4	adrp	x20, 41 ; 0x7a000
0000000000051fe8	add	x20, x20, #0x2c0
0000000000051fec	ldr	x22, [x20]
0000000000051ff0	mov	x0, x20
0000000000051ff4	blr	x22
0000000000051ff8	ldr	x8, [x0]
0000000000051ffc	ldr	x9, [x8, #0x110]
0000000000052000	add	x10, sp, #0x8
0000000000052004	str	x10, [x8, #0x110]
0000000000052008	mov	x8, #0x300000000
000000000005200c	stp	x9, x8, [sp, #0x10]
0000000000052010	adr	x8, #0x42279
0000000000052014	nop
0000000000052018	ldarb	w8, [x8]
000000000005201c	tbz	w8, #0x0, 0x52024
0000000000052020	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000052024	mov	x0, x21
0000000000052028	mov	x1, x19
000000000005202c	bl	"_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any"
0000000000052030	mov	x8, x0
0000000000052034	str	x0, [x19]
0000000000052038	mov	x0, x20
000000000005203c	blr	x22
0000000000052040	ldr	x9, [x0]
0000000000052044	ldr	x10, [sp, #0x10]
0000000000052048	str	x10, [x9, #0x110]
000000000005204c	mov	x0, x8
0000000000052050	ldp	x29, x30, [sp, #0x40]
0000000000052054	ldp	x20, x19, [sp, #0x30]
0000000000052058	ldp	x22, x21, [sp, #0x20]
000000000005205c	add	sp, sp, #0x50
0000000000052060	ret
-[KotlinFloat getValue:]:
0000000000052064	nop
0000000000052068	ldrsw	x8, _OBJC_IVAR_$_FastaKmmFloat.value_
000000000005206c	ldr	w8, [x0, x8]
0000000000052070	str	w8, [x2]
0000000000052074	ret
-[KotlinFloat initWithFloat:]:
0000000000052078	sub	sp, sp, #0x30
000000000005207c	stp	d9, d8, [sp, #0x10]
0000000000052080	stp	x29, x30, [sp, #0x20]
0000000000052084	add	x29, sp, #0x20
0000000000052088	fmov	s8, s0
000000000005208c	nop
0000000000052090	ldr	x8, #0x24cd0 ; Objc class ref: FastaKmmFloat
0000000000052094	stp	x0, x8, [sp]
0000000000052098	nop
000000000005209c	ldr	x1, #0x24844 ; Objc selector ref: init
00000000000520a0	mov	x0, sp
00000000000520a4	bl	0x55590 ; Objc message: -[[x0 super] init]
00000000000520a8	nop
00000000000520ac	ldrsw	x8, _OBJC_IVAR_$_FastaKmmFloat.value_
00000000000520b0	str	s8, [x0, x8]
00000000000520b4	ldp	x29, x30, [sp, #0x20]
00000000000520b8	ldp	d9, d8, [sp, #0x10]
00000000000520bc	add	sp, sp, #0x30
00000000000520c0	ret
-[KotlinFloat initWithInteger:]:
00000000000520c4	sub	sp, sp, #0x30
00000000000520c8	stp	x20, x19, [sp, #0x10]
00000000000520cc	stp	x29, x30, [sp, #0x20]
00000000000520d0	add	x29, sp, #0x20
00000000000520d4	mov	x19, x2
00000000000520d8	nop
00000000000520dc	ldr	x8, #0x24c84 ; Objc class ref: FastaKmmFloat
00000000000520e0	stp	x0, x8, [sp]
00000000000520e4	nop
00000000000520e8	ldr	x1, #0x247f8 ; Objc selector ref: init
00000000000520ec	mov	x0, sp
00000000000520f0	bl	0x55590 ; Objc message: -[[x0 super] init]
00000000000520f4	scvtf	s0, x19
00000000000520f8	nop
00000000000520fc	ldrsw	x8, _OBJC_IVAR_$_FastaKmmFloat.value_
0000000000052100	str	s0, [x0, x8]
0000000000052104	ldp	x29, x30, [sp, #0x20]
0000000000052108	ldp	x20, x19, [sp, #0x10]
000000000005210c	add	sp, sp, #0x30
0000000000052110	ret
-[KotlinFloat initWithDouble:]:
0000000000052114	sub	sp, sp, #0x30
0000000000052118	stp	d9, d8, [sp, #0x10]
000000000005211c	stp	x29, x30, [sp, #0x20]
0000000000052120	add	x29, sp, #0x20
0000000000052124	fmov	d8, d0
0000000000052128	nop
000000000005212c	ldr	x8, #0x24c34 ; Objc class ref: FastaKmmFloat
0000000000052130	stp	x0, x8, [sp]
0000000000052134	nop
0000000000052138	ldr	x1, #0x247a8 ; Objc selector ref: init
000000000005213c	mov	x0, sp
0000000000052140	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000052144	fcvt	s0, d8
0000000000052148	nop
000000000005214c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmFloat.value_
0000000000052150	str	s0, [x0, x8]
0000000000052154	ldp	x29, x30, [sp, #0x20]
0000000000052158	ldp	d9, d8, [sp, #0x10]
000000000005215c	add	sp, sp, #0x30
0000000000052160	ret
-[KotlinFloat floatValue]:
0000000000052164	nop
0000000000052168	ldrsw	x8, _OBJC_IVAR_$_FastaKmmFloat.value_
000000000005216c	ldr	s0, [x0, x8]
0000000000052170	ret
-[KotlinFloat objCType]:
0000000000052174	adr	x0, #0xcb60 ; literal pool for: "f"
0000000000052178	nop
000000000005217c	ret
-[KotlinFloat toKotlin:]:
0000000000052180	nop
0000000000052184	ldrsw	x8, _OBJC_IVAR_$_FastaKmmFloat.value_
0000000000052188	ldr	s0, [x0, x8]
000000000005218c	mov	x0, x2
0000000000052190	b	_Kotlin_boxFloat
-[KotlinDouble getValue:]:
0000000000052194	nop
0000000000052198	ldrsw	x8, _OBJC_IVAR_$_FastaKmmDouble.value_
000000000005219c	ldr	x8, [x0, x8]
00000000000521a0	str	x8, [x2]
00000000000521a4	ret
-[KotlinDouble initWithDouble:]:
00000000000521a8	sub	sp, sp, #0x30
00000000000521ac	stp	d9, d8, [sp, #0x10]
00000000000521b0	stp	x29, x30, [sp, #0x20]
00000000000521b4	add	x29, sp, #0x20
00000000000521b8	fmov	d8, d0
00000000000521bc	nop
00000000000521c0	ldr	x8, #0x24ba8 ; Objc class ref: FastaKmmDouble
00000000000521c4	stp	x0, x8, [sp]
00000000000521c8	nop
00000000000521cc	ldr	x1, #0x24714 ; Objc selector ref: init
00000000000521d0	mov	x0, sp
00000000000521d4	bl	0x55590 ; Objc message: -[[x0 super] init]
00000000000521d8	nop
00000000000521dc	ldrsw	x8, _OBJC_IVAR_$_FastaKmmDouble.value_
00000000000521e0	str	d8, [x0, x8]
00000000000521e4	ldp	x29, x30, [sp, #0x20]
00000000000521e8	ldp	d9, d8, [sp, #0x10]
00000000000521ec	add	sp, sp, #0x30
00000000000521f0	ret
-[KotlinDouble initWithInteger:]:
00000000000521f4	sub	sp, sp, #0x30
00000000000521f8	stp	x20, x19, [sp, #0x10]
00000000000521fc	stp	x29, x30, [sp, #0x20]
0000000000052200	add	x29, sp, #0x20
0000000000052204	mov	x19, x2
0000000000052208	nop
000000000005220c	ldr	x8, #0x24b5c ; Objc class ref: FastaKmmDouble
0000000000052210	stp	x0, x8, [sp]
0000000000052214	nop
0000000000052218	ldr	x1, #0x246c8 ; Objc selector ref: init
000000000005221c	mov	x0, sp
0000000000052220	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000052224	scvtf	d0, x19
0000000000052228	nop
000000000005222c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmDouble.value_
0000000000052230	str	d0, [x0, x8]
0000000000052234	ldp	x29, x30, [sp, #0x20]
0000000000052238	ldp	x20, x19, [sp, #0x10]
000000000005223c	add	sp, sp, #0x30
0000000000052240	ret
-[KotlinDouble doubleValue]:
0000000000052244	nop
0000000000052248	ldrsw	x8, _OBJC_IVAR_$_FastaKmmDouble.value_
000000000005224c	ldr	d0, [x0, x8]
0000000000052250	ret
-[KotlinDouble objCType]:
0000000000052254	adr	x0, #0xca82 ; literal pool for: "d"
0000000000052258	nop
000000000005225c	ret
-[KotlinDouble toKotlin:]:
0000000000052260	nop
0000000000052264	ldrsw	x8, _OBJC_IVAR_$_FastaKmmDouble.value_
0000000000052268	ldr	d0, [x0, x8]
000000000005226c	mov	x0, x2
0000000000052270	b	_Kotlin_boxDouble
-[KotlinByte getValue:]:
0000000000052274	nop
0000000000052278	ldrsw	x8, _OBJC_IVAR_$_FastaKmmByte.value_
000000000005227c	ldrb	w8, [x0, x8]
0000000000052280	strb	w8, [x2]
0000000000052284	ret
-[KotlinByte initWithChar:]:
0000000000052288	sub	sp, sp, #0x30
000000000005228c	stp	x20, x19, [sp, #0x10]
0000000000052290	stp	x29, x30, [sp, #0x20]
0000000000052294	add	x29, sp, #0x20
0000000000052298	mov	x19, x2
000000000005229c	nop
00000000000522a0	ldr	x8, #0x24ad0 ; Objc class ref: FastaKmmByte
00000000000522a4	stp	x0, x8, [sp]
00000000000522a8	nop
00000000000522ac	ldr	x1, #0x24634 ; Objc selector ref: init
00000000000522b0	mov	x0, sp
00000000000522b4	bl	0x55590 ; Objc message: -[[x0 super] init]
00000000000522b8	nop
00000000000522bc	ldrsw	x8, _OBJC_IVAR_$_FastaKmmByte.value_
00000000000522c0	strb	w19, [x0, x8]
00000000000522c4	ldp	x29, x30, [sp, #0x20]
00000000000522c8	ldp	x20, x19, [sp, #0x10]
00000000000522cc	add	sp, sp, #0x30
00000000000522d0	ret
-[KotlinByte initWithInteger:]:
00000000000522d4	sub	sp, sp, #0x30
00000000000522d8	stp	x20, x19, [sp, #0x10]
00000000000522dc	stp	x29, x30, [sp, #0x20]
00000000000522e0	add	x29, sp, #0x20
00000000000522e4	mov	x19, x2
00000000000522e8	nop
00000000000522ec	ldr	x8, #0x24a84 ; Objc class ref: FastaKmmByte
00000000000522f0	stp	x0, x8, [sp]
00000000000522f4	nop
00000000000522f8	ldr	x1, #0x245e8 ; Objc selector ref: init
00000000000522fc	mov	x0, sp
0000000000052300	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000052304	nop
0000000000052308	ldrsw	x8, _OBJC_IVAR_$_FastaKmmByte.value_
000000000005230c	strb	w19, [x0, x8]
0000000000052310	ldp	x29, x30, [sp, #0x20]
0000000000052314	ldp	x20, x19, [sp, #0x10]
0000000000052318	add	sp, sp, #0x30
000000000005231c	ret
-[KotlinByte charValue]:
0000000000052320	nop
0000000000052324	ldrsw	x8, _OBJC_IVAR_$_FastaKmmByte.value_
0000000000052328	ldrsb	w0, [x0, x8]
000000000005232c	ret
-[KotlinByte objCType]:
0000000000052330	adr	x0, #0xc9a8 ; literal pool for: "c"
0000000000052334	nop
0000000000052338	ret
-[KotlinByte toKotlin:]:
000000000005233c	sub	sp, sp, #0x50
0000000000052340	stp	x22, x21, [sp, #0x20]
0000000000052344	stp	x20, x19, [sp, #0x30]
0000000000052348	stp	x29, x30, [sp, #0x40]
000000000005234c	add	x29, sp, #0x40
0000000000052350	mov	x19, x2
0000000000052354	nop
0000000000052358	ldrsw	x8, _OBJC_IVAR_$_FastaKmmByte.value_
000000000005235c	ldrb	w22, [x0, x8]
0000000000052360	str	xzr, [sp, #0x8]
0000000000052364	adrp	x20, 40 ; 0x7a000
0000000000052368	add	x20, x20, #0x2c0
000000000005236c	ldr	x21, [x20]
0000000000052370	mov	x0, x20
0000000000052374	blr	x21
0000000000052378	ldr	x8, [x0]
000000000005237c	ldr	x9, [x8, #0x110]
0000000000052380	add	x10, sp, #0x8
0000000000052384	str	x10, [x8, #0x110]
0000000000052388	mov	x8, #0x300000000
000000000005238c	stp	x9, x8, [sp, #0x10]
0000000000052390	adr	x8, #0x41ef9
0000000000052394	nop
0000000000052398	ldarb	w8, [x8]
000000000005239c	tbz	w8, #0x0, 0x523a4
00000000000523a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000523a4	sxtb	w0, w22
00000000000523a8	mov	x1, x19
00000000000523ac	bl	"_kfun:kotlin#<Byte-box>(kotlin.Byte){}kotlin.Any"
00000000000523b0	mov	x8, x0
00000000000523b4	str	x0, [x19]
00000000000523b8	mov	x0, x20
00000000000523bc	blr	x21
00000000000523c0	ldr	x9, [x0]
00000000000523c4	ldr	x10, [sp, #0x10]
00000000000523c8	str	x10, [x9, #0x110]
00000000000523cc	mov	x0, x8
00000000000523d0	ldp	x29, x30, [sp, #0x40]
00000000000523d4	ldp	x20, x19, [sp, #0x30]
00000000000523d8	ldp	x22, x21, [sp, #0x20]
00000000000523dc	add	sp, sp, #0x50
00000000000523e0	ret
-[KotlinBoolean getValue:]:
00000000000523e4	nop
00000000000523e8	ldrsw	x8, _OBJC_IVAR_$_FastaKmmBoolean.value_
00000000000523ec	ldrb	w8, [x0, x8]
00000000000523f0	strb	w8, [x2]
00000000000523f4	ret
-[KotlinBoolean initWithBool:]:
00000000000523f8	sub	sp, sp, #0x30
00000000000523fc	stp	x20, x19, [sp, #0x10]
0000000000052400	stp	x29, x30, [sp, #0x20]
0000000000052404	add	x29, sp, #0x20
0000000000052408	mov	x19, x2
000000000005240c	nop
0000000000052410	ldr	x8, #0x24948 ; Objc class ref: FastaKmmBoolean
0000000000052414	stp	x0, x8, [sp]
0000000000052418	nop
000000000005241c	ldr	x1, #0x244c4 ; Objc selector ref: init
0000000000052420	mov	x0, sp
0000000000052424	bl	0x55590 ; Objc message: -[[x0 super] init]
0000000000052428	nop
000000000005242c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmBoolean.value_
0000000000052430	strb	w19, [x0, x8]
0000000000052434	ldp	x29, x30, [sp, #0x20]
0000000000052438	ldp	x20, x19, [sp, #0x10]
000000000005243c	add	sp, sp, #0x30
0000000000052440	ret
-[KotlinBoolean boolValue]:
0000000000052444	nop
0000000000052448	ldrsw	x8, _OBJC_IVAR_$_FastaKmmBoolean.value_
000000000005244c	ldrb	w0, [x0, x8]
0000000000052450	ret
-[KotlinBoolean charValue]:
0000000000052454	nop
0000000000052458	ldrsw	x8, _OBJC_IVAR_$_FastaKmmBoolean.value_
000000000005245c	ldrsb	w0, [x0, x8]
0000000000052460	ret
-[KotlinBoolean objCType]:
0000000000052464	adr	x0, #0xc874 ; literal pool for: "c"
0000000000052468	nop
000000000005246c	ret
-[KotlinBoolean toKotlin:]:
0000000000052470	sub	sp, sp, #0x50
0000000000052474	stp	x22, x21, [sp, #0x20]
0000000000052478	stp	x20, x19, [sp, #0x30]
000000000005247c	stp	x29, x30, [sp, #0x40]
0000000000052480	add	x29, sp, #0x40
0000000000052484	mov	x19, x2
0000000000052488	nop
000000000005248c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmBoolean.value_
0000000000052490	ldrb	w22, [x0, x8]
0000000000052494	str	xzr, [sp, #0x8]
0000000000052498	adrp	x20, 40 ; 0x7a000
000000000005249c	add	x20, x20, #0x2c0
00000000000524a0	ldr	x21, [x20]
00000000000524a4	mov	x0, x20
00000000000524a8	blr	x21
00000000000524ac	ldr	x8, [x0]
00000000000524b0	ldr	x9, [x8, #0x110]
00000000000524b4	add	x10, sp, #0x8
00000000000524b8	str	x10, [x8, #0x110]
00000000000524bc	mov	x8, #0x300000000
00000000000524c0	stp	x9, x8, [sp, #0x10]
00000000000524c4	adr	x8, #0x41dc5
00000000000524c8	nop
00000000000524cc	ldarb	w8, [x8]
00000000000524d0	tbz	w8, #0x0, 0x524d8
00000000000524d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000524d8	cmp	w22, #0x0
00000000000524dc	cset	w0, ne
00000000000524e0	mov	x1, x19
00000000000524e4	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
00000000000524e8	mov	x8, x0
00000000000524ec	str	x0, [x19]
00000000000524f0	mov	x0, x20
00000000000524f4	blr	x21
00000000000524f8	ldr	x9, [x0]
00000000000524fc	ldr	x10, [sp, #0x10]
0000000000052500	str	x10, [x9, #0x110]
0000000000052504	mov	x0, x8
0000000000052508	ldp	x29, x30, [sp, #0x40]
000000000005250c	ldp	x20, x19, [sp, #0x30]
0000000000052510	ldp	x22, x21, [sp, #0x20]
0000000000052514	add	sp, sp, #0x50
0000000000052518	ret
+[KotlinUShort numberWithUnsignedShort:]:
000000000005251c	stp	x20, x19, [sp, #-0x20]!
0000000000052520	stp	x29, x30, [sp, #0x10]
0000000000052524	add	x29, sp, #0x10
0000000000052528	mov	x19, x2
000000000005252c	nop
0000000000052530	ldr	x1, #0x244a0 ; Objc selector ref: new
0000000000052534	bl	0x55584 ; Objc message: -[x0 new]
0000000000052538	bl	0x55524 ; symbol stub for: _objc_autorelease
000000000005253c	nop
0000000000052540	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUShort.value_
0000000000052544	strh	w19, [x0, x8]
0000000000052548	ldp	x29, x30, [sp, #0x10]
000000000005254c	ldp	x20, x19, [sp], #0x20
0000000000052550	ret
+[KotlinULong numberWithUnsignedLongLong:]:
0000000000052554	stp	x20, x19, [sp, #-0x20]!
0000000000052558	stp	x29, x30, [sp, #0x10]
000000000005255c	add	x29, sp, #0x10
0000000000052560	mov	x19, x2
0000000000052564	nop
0000000000052568	ldr	x1, #0x24468 ; Objc selector ref: new
000000000005256c	bl	0x55584 ; Objc message: -[x0 new]
0000000000052570	bl	0x55524 ; symbol stub for: _objc_autorelease
0000000000052574	nop
0000000000052578	ldrsw	x8, _OBJC_IVAR_$_FastaKmmULong.value_
000000000005257c	str	x19, [x0, x8]
0000000000052580	ldp	x29, x30, [sp, #0x10]
0000000000052584	ldp	x20, x19, [sp], #0x20
0000000000052588	ret
+[KotlinUInt numberWithUnsignedInt:]:
000000000005258c	stp	x20, x19, [sp, #-0x20]!
0000000000052590	stp	x29, x30, [sp, #0x10]
0000000000052594	add	x29, sp, #0x10
0000000000052598	mov	x19, x2
000000000005259c	nop
00000000000525a0	ldr	x1, #0x24430 ; Objc selector ref: new
00000000000525a4	bl	0x55584 ; Objc message: -[x0 new]
00000000000525a8	bl	0x55524 ; symbol stub for: _objc_autorelease
00000000000525ac	nop
00000000000525b0	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUInt.value_
00000000000525b4	str	w19, [x0, x8]
00000000000525b8	ldp	x29, x30, [sp, #0x10]
00000000000525bc	ldp	x20, x19, [sp], #0x20
00000000000525c0	ret
+[KotlinUByte numberWithUnsignedChar:]:
00000000000525c4	stp	x20, x19, [sp, #-0x20]!
00000000000525c8	stp	x29, x30, [sp, #0x10]
00000000000525cc	add	x29, sp, #0x10
00000000000525d0	mov	x19, x2
00000000000525d4	nop
00000000000525d8	ldr	x1, #0x243f8 ; Objc selector ref: new
00000000000525dc	bl	0x55584 ; Objc message: -[x0 new]
00000000000525e0	bl	0x55524 ; symbol stub for: _objc_autorelease
00000000000525e4	nop
00000000000525e8	ldrsw	x8, _OBJC_IVAR_$_FastaKmmUByte.value_
00000000000525ec	strb	w19, [x0, x8]
00000000000525f0	ldp	x29, x30, [sp, #0x10]
00000000000525f4	ldp	x20, x19, [sp], #0x20
00000000000525f8	ret
+[KotlinShort numberWithShort:]:
00000000000525fc	stp	x20, x19, [sp, #-0x20]!
0000000000052600	stp	x29, x30, [sp, #0x10]
0000000000052604	add	x29, sp, #0x10
0000000000052608	mov	x19, x2
000000000005260c	nop
0000000000052610	ldr	x1, #0x243c0 ; Objc selector ref: new
0000000000052614	bl	0x55584 ; Objc message: -[x0 new]
0000000000052618	bl	0x55524 ; symbol stub for: _objc_autorelease
000000000005261c	nop
0000000000052620	ldrsw	x8, _OBJC_IVAR_$_FastaKmmShort.value_
0000000000052624	strh	w19, [x0, x8]
0000000000052628	ldp	x29, x30, [sp, #0x10]
000000000005262c	ldp	x20, x19, [sp], #0x20
0000000000052630	ret
+[KotlinNumber numberWithBool:]:
0000000000052634	stp	x29, x30, [sp, #-0x10]!
0000000000052638	mov	x29, sp
000000000005263c	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithChar:]:
0000000000052640	stp	x29, x30, [sp, #-0x10]!
0000000000052644	mov	x29, sp
0000000000052648	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithShort:]:
000000000005264c	stp	x29, x30, [sp, #-0x10]!
0000000000052650	mov	x29, sp
0000000000052654	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithInt:]:
0000000000052658	stp	x29, x30, [sp, #-0x10]!
000000000005265c	mov	x29, sp
0000000000052660	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithInteger:]:
0000000000052664	stp	x29, x30, [sp, #-0x10]!
0000000000052668	mov	x29, sp
000000000005266c	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithLong:]:
0000000000052670	stp	x29, x30, [sp, #-0x10]!
0000000000052674	mov	x29, sp
0000000000052678	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithLongLong:]:
000000000005267c	stp	x29, x30, [sp, #-0x10]!
0000000000052680	mov	x29, sp
0000000000052684	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedChar:]:
0000000000052688	stp	x29, x30, [sp, #-0x10]!
000000000005268c	mov	x29, sp
0000000000052690	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedShort:]:
0000000000052694	stp	x29, x30, [sp, #-0x10]!
0000000000052698	mov	x29, sp
000000000005269c	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedInt:]:
00000000000526a0	stp	x29, x30, [sp, #-0x10]!
00000000000526a4	mov	x29, sp
00000000000526a8	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedLong:]:
00000000000526ac	stp	x29, x30, [sp, #-0x10]!
00000000000526b0	mov	x29, sp
00000000000526b4	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedInteger:]:
00000000000526b8	stp	x29, x30, [sp, #-0x10]!
00000000000526bc	mov	x29, sp
00000000000526c0	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedLongLong:]:
00000000000526c4	stp	x29, x30, [sp, #-0x10]!
00000000000526c8	mov	x29, sp
00000000000526cc	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithFloat:]:
00000000000526d0	stp	x29, x30, [sp, #-0x10]!
00000000000526d4	mov	x29, sp
00000000000526d8	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithDouble:]:
00000000000526dc	stp	x29, x30, [sp, #-0x10]!
00000000000526e0	mov	x29, sp
00000000000526e4	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
__ZL22incorrectNumberFactoryP10objc_classP13objc_selector:
00000000000526e8	sub	sp, sp, #0x40
00000000000526ec	stp	x22, x21, [sp, #0x10]
00000000000526f0	stp	x20, x19, [sp, #0x20]
00000000000526f4	stp	x29, x30, [sp, #0x30]
00000000000526f8	add	x29, sp, #0x30
00000000000526fc	mov	x19, x1
0000000000052700	nop
0000000000052704	ldr	x20, #0x24574 ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000052708	nop
000000000005270c	ldr	x8, #0xd8fc ; literal pool symbol address: _NSGenericException
0000000000052710	ldr	x21, [x8]
0000000000052714	bl	0x55170 ; symbol stub for: _NSStringFromClass
0000000000052718	mov	x22, x0
000000000005271c	mov	x0, x19
0000000000052720	bl	0x55704 ; symbol stub for: _sel_getName
0000000000052724	nop
0000000000052728	ldr	x1, #0x24308 ; Objc selector ref: raise:format:
000000000005272c	stp	x22, x0, [sp]
0000000000052730	adr	x3, #0x1f2e0 ; Objc cfstring ref: @"bad cfstring ref"
0000000000052734	nop
0000000000052738	mov	x0, x20
000000000005273c	mov	x2, x21
0000000000052740	bl	0x55584 ; Objc message: +[NSException raise:format:]
0000000000052744	bl	0x55398 ; symbol stub for: _abort
+[KotlinLong numberWithLongLong:]:
0000000000052748	stp	x20, x19, [sp, #-0x20]!
000000000005274c	stp	x29, x30, [sp, #0x10]
0000000000052750	add	x29, sp, #0x10
0000000000052754	mov	x19, x2
0000000000052758	nop
000000000005275c	ldr	x1, #0x24274 ; Objc selector ref: new
0000000000052760	bl	0x55584 ; Objc message: -[x0 new]
0000000000052764	bl	0x55524 ; symbol stub for: _objc_autorelease
0000000000052768	nop
000000000005276c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmLong.value_
0000000000052770	str	x19, [x0, x8]
0000000000052774	ldp	x29, x30, [sp, #0x10]
0000000000052778	ldp	x20, x19, [sp], #0x20
000000000005277c	ret
+[KotlinInt numberWithInt:]:
0000000000052780	stp	x20, x19, [sp, #-0x20]!
0000000000052784	stp	x29, x30, [sp, #0x10]
0000000000052788	add	x29, sp, #0x10
000000000005278c	mov	x19, x2
0000000000052790	nop
0000000000052794	ldr	x1, #0x2423c ; Objc selector ref: new
0000000000052798	bl	0x55584 ; Objc message: -[x0 new]
000000000005279c	bl	0x55524 ; symbol stub for: _objc_autorelease
00000000000527a0	nop
00000000000527a4	ldrsw	x8, _OBJC_IVAR_$_FastaKmmInt.value_
00000000000527a8	str	w19, [x0, x8]
00000000000527ac	ldp	x29, x30, [sp, #0x10]
00000000000527b0	ldp	x20, x19, [sp], #0x20
00000000000527b4	ret
+[KotlinFloat numberWithFloat:]:
00000000000527b8	stp	d9, d8, [sp, #-0x20]!
00000000000527bc	stp	x29, x30, [sp, #0x10]
00000000000527c0	add	x29, sp, #0x10
00000000000527c4	fmov	s8, s0
00000000000527c8	nop
00000000000527cc	ldr	x1, #0x24204 ; Objc selector ref: new
00000000000527d0	bl	0x55584 ; Objc message: -[x0 new]
00000000000527d4	bl	0x55524 ; symbol stub for: _objc_autorelease
00000000000527d8	nop
00000000000527dc	ldrsw	x8, _OBJC_IVAR_$_FastaKmmFloat.value_
00000000000527e0	str	s8, [x0, x8]
00000000000527e4	ldp	x29, x30, [sp, #0x10]
00000000000527e8	ldp	d9, d8, [sp], #0x20
00000000000527ec	ret
+[KotlinDouble numberWithDouble:]:
00000000000527f0	stp	d9, d8, [sp, #-0x20]!
00000000000527f4	stp	x29, x30, [sp, #0x10]
00000000000527f8	add	x29, sp, #0x10
00000000000527fc	fmov	d8, d0
0000000000052800	nop
0000000000052804	ldr	x1, #0x241cc ; Objc selector ref: new
0000000000052808	bl	0x55584 ; Objc message: -[x0 new]
000000000005280c	bl	0x55524 ; symbol stub for: _objc_autorelease
0000000000052810	nop
0000000000052814	ldrsw	x8, _OBJC_IVAR_$_FastaKmmDouble.value_
0000000000052818	str	d8, [x0, x8]
000000000005281c	ldp	x29, x30, [sp, #0x10]
0000000000052820	ldp	d9, d8, [sp], #0x20
0000000000052824	ret
+[KotlinByte numberWithChar:]:
0000000000052828	stp	x20, x19, [sp, #-0x20]!
000000000005282c	stp	x29, x30, [sp, #0x10]
0000000000052830	add	x29, sp, #0x10
0000000000052834	mov	x19, x2
0000000000052838	nop
000000000005283c	ldr	x1, #0x24194 ; Objc selector ref: new
0000000000052840	bl	0x55584 ; Objc message: -[x0 new]
0000000000052844	bl	0x55524 ; symbol stub for: _objc_autorelease
0000000000052848	nop
000000000005284c	ldrsw	x8, _OBJC_IVAR_$_FastaKmmByte.value_
0000000000052850	strb	w19, [x0, x8]
0000000000052854	ldp	x29, x30, [sp, #0x10]
0000000000052858	ldp	x20, x19, [sp], #0x20
000000000005285c	ret
+[KotlinBoolean numberWithBool:]:
0000000000052860	stp	x20, x19, [sp, #-0x20]!
0000000000052864	stp	x29, x30, [sp, #0x10]
0000000000052868	add	x29, sp, #0x10
000000000005286c	mov	x19, x2
0000000000052870	nop
0000000000052874	ldr	x1, #0x2415c ; Objc selector ref: new
0000000000052878	bl	0x55584 ; Objc message: -[x0 new]
000000000005287c	bl	0x55524 ; symbol stub for: _objc_autorelease
0000000000052880	nop
0000000000052884	ldrsw	x8, _OBJC_IVAR_$_FastaKmmBoolean.value_
0000000000052888	strb	w19, [x0, x8]
000000000005288c	ldp	x29, x30, [sp, #0x10]
0000000000052890	ldp	x20, x19, [sp], #0x20
0000000000052894	ret
-[KotlinObjectHolder initWithRef:]:
0000000000052898	sub	sp, sp, #0x40
000000000005289c	stp	x22, x21, [sp, #0x10]
00000000000528a0	stp	x20, x19, [sp, #0x20]
00000000000528a4	stp	x29, x30, [sp, #0x30]
00000000000528a8	add	x29, sp, #0x30
00000000000528ac	mov	x19, x2
00000000000528b0	nop
00000000000528b4	ldr	x8, #0x2449c ; Objc class ref: FastaKmmKotlinObjectHolder
00000000000528b8	stp	x0, x8, [sp]
00000000000528bc	nop
00000000000528c0	ldr	x1, #0x24020 ; Objc selector ref: init
00000000000528c4	mov	x0, sp
00000000000528c8	bl	0x55590 ; Objc message: -[[x0 super] init]
00000000000528cc	mov	x20, x0
00000000000528d0	cbz	x0, 0x52920
00000000000528d4	adrp	x0, 40 ; 0x7a000
00000000000528d8	add	x0, x0, #0x2c0
00000000000528dc	ldr	x8, [x0]
00000000000528e0	blr	x8
00000000000528e4	ldr	x21, [x0]
00000000000528e8	mov	w0, #0x1
00000000000528ec	mov	w1, #0x28
00000000000528f0	bl	0x553d4 ; symbol stub for: _calloc
00000000000528f4	ldr	x8, [x21, #0xa8]!
00000000000528f8	sub	x9, x21, #0x8
00000000000528fc	stp	x8, x21, [x0]
0000000000052900	str	x0, [x8, #0x8]
0000000000052904	str	x0, [x21]
0000000000052908	ldr	x8, [x21, #0x10]
000000000005290c	add	x8, x8, #0x1
0000000000052910	str	x8, [x21, #0x10]
0000000000052914	stp	x9, x0, [x0, #0x18]
0000000000052918	str	x19, [x0, #0x10]!
000000000005291c	stp	x19, x0, [x20, #0x8]
0000000000052920	mov	x0, x20
0000000000052924	ldp	x29, x30, [sp, #0x30]
0000000000052928	ldp	x20, x19, [sp, #0x20]
000000000005292c	ldp	x22, x21, [sp, #0x10]
0000000000052930	add	sp, sp, #0x40
0000000000052934	ret
-[KotlinObjectHolder ref]:
0000000000052938	stp	x20, x19, [sp, #-0x20]!
000000000005293c	stp	x29, x30, [sp, #0x10]
0000000000052940	add	x29, sp, #0x10
0000000000052944	mov	x19, x0
0000000000052948	bl	_Kotlin_initRuntimeIfNeeded
000000000005294c	ldr	x0, [x19, #0x8]
0000000000052950	ldp	x29, x30, [sp, #0x10]
0000000000052954	ldp	x20, x19, [sp], #0x20
0000000000052958	ret
-[KotlinObjectHolder dealloc]:
000000000005295c	sub	sp, sp, #0x50
0000000000052960	stp	x24, x23, [sp, #0x10]
0000000000052964	stp	x22, x21, [sp, #0x20]
0000000000052968	stp	x20, x19, [sp, #0x30]
000000000005296c	stp	x29, x30, [sp, #0x40]
0000000000052970	add	x29, sp, #0x40
0000000000052974	mov	x19, x0
0000000000052978	bl	_Kotlin_initRuntimeIfNeeded
000000000005297c	adrp	x21, 40 ; 0x7a000
0000000000052980	add	x21, x21, #0x2c0
0000000000052984	ldr	x24, [x21]
0000000000052988	mov	x0, x21
000000000005298c	blr	x24
0000000000052990	ldr	x8, [x0]
0000000000052994	add	x20, x8, #0x138
0000000000052998	ldaxr	w22, [x20]
000000000005299c	stlxr	w8, wzr, [x20]
00000000000529a0	cbnz	w8, 0x52998
00000000000529a4	adr	x23, #0x418e5
00000000000529a8	nop
00000000000529ac	cmp	w22, #0x1
00000000000529b0	b.ne	0x529c4
00000000000529b4	ldarb	w8, [x23]
00000000000529b8	tbz	w8, #0x0, 0x529c4
00000000000529bc	mov	x0, x20
00000000000529c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000529c4	ldr	x8, [x19, #0x8]
00000000000529c8	cbz	x8, 0x529e4
00000000000529cc	ldr	x1, [x19, #0x10]
00000000000529d0	mov	x0, x21
00000000000529d4	blr	x24
00000000000529d8	ldr	x8, [x0]
00000000000529dc	add	x0, x8, #0x8
00000000000529e0	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
00000000000529e4	ldaxr	w8, [x20]
00000000000529e8	stlxr	w9, w22, [x20]
00000000000529ec	cbnz	w9, 0x529e4
00000000000529f0	cbnz	w22, 0x52a0c
00000000000529f4	cmp	w8, #0x1
00000000000529f8	b.ne	0x52a0c
00000000000529fc	ldarb	w8, [x23]
0000000000052a00	tbz	w8, #0x0, 0x52a0c
0000000000052a04	mov	x0, x20
0000000000052a08	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000052a0c	nop
0000000000052a10	ldr	x8, #0x24340 ; Objc class ref: FastaKmmKotlinObjectHolder
0000000000052a14	stp	x19, x8, [sp]
0000000000052a18	nop
0000000000052a1c	ldr	x1, #0x23e74 ; Objc selector ref: dealloc
0000000000052a20	mov	x0, sp
0000000000052a24	bl	0x55590 ; Objc message: -[[x0 super] dealloc]
0000000000052a28	ldp	x29, x30, [sp, #0x40]
0000000000052a2c	ldp	x20, x19, [sp, #0x30]
0000000000052a30	ldp	x22, x21, [sp, #0x20]
0000000000052a34	ldp	x24, x23, [sp, #0x10]
0000000000052a38	add	sp, sp, #0x50
0000000000052a3c	ret
-[KotlinObjCWeakReference releaseAsAssociatedObject:]:
0000000000052a40	cmp	w2, #0x1
0000000000052a44	b.hi	0x52a70
0000000000052a48	stp	x20, x19, [sp, #-0x20]!
0000000000052a4c	stp	x29, x30, [sp, #0x10]
0000000000052a50	add	x29, sp, #0x10
0000000000052a54	mov	x19, x0
0000000000052a58	add	x0, x0, #0x8
0000000000052a5c	bl	0x5553c ; symbol stub for: _objc_destroyWeak
0000000000052a60	mov	x0, x19
0000000000052a64	ldp	x29, x30, [sp, #0x10]
0000000000052a68	ldp	x20, x19, [sp], #0x20
0000000000052a6c	b	0x555a8 ; symbol stub for: _objc_release
0000000000052a70	ret
-[KotlinBase toKotlin:]:
0000000000052a74	stp	x20, x19, [sp, #-0x20]!
0000000000052a78	stp	x29, x30, [sp, #0x10]
0000000000052a7c	add	x29, sp, #0x10
0000000000052a80	mov	x19, x2
0000000000052a84	mov	x20, x0
0000000000052a88	bl	_Kotlin_initRuntimeIfNeeded
0000000000052a8c	ldr	x0, [x20, #0x8]
0000000000052a90	str	x0, [x19]
0000000000052a94	ldp	x29, x30, [sp, #0x10]
0000000000052a98	ldp	x20, x19, [sp], #0x20
0000000000052a9c	ret
-[KotlinBase retain]:
0000000000052aa0	sub	sp, sp, #0x50
0000000000052aa4	stp	x24, x23, [sp, #0x10]
0000000000052aa8	stp	x22, x21, [sp, #0x20]
0000000000052aac	stp	x20, x19, [sp, #0x30]
0000000000052ab0	stp	x29, x30, [sp, #0x40]
0000000000052ab4	add	x29, sp, #0x40
0000000000052ab8	mov	x19, x0
0000000000052abc	ldrb	w8, [x0, #0x20]
0000000000052ac0	cbz	w8, 0x52ae4
0000000000052ac4	nop
0000000000052ac8	ldr	x8, #0x24280 ; Objc class ref: FastaKmmBase
0000000000052acc	stp	x19, x8, [sp]
0000000000052ad0	nop
0000000000052ad4	ldr	x1, #0x23f94 ; Objc selector ref: retain
0000000000052ad8	mov	x0, sp
0000000000052adc	bl	0x55590 ; Objc message: -[[x0 super] retain]
0000000000052ae0	b	0x52afc
0000000000052ae4	add	x8, x19, #0x18
0000000000052ae8	ldaxr	w9, [x8]
0000000000052aec	add	w10, w9, #0x1
0000000000052af0	stlxr	w11, w10, [x8]
0000000000052af4	cbnz	w11, 0x52ae8
0000000000052af8	cbz	w9, 0x52b18
0000000000052afc	mov	x0, x19
0000000000052b00	ldp	x29, x30, [sp, #0x40]
0000000000052b04	ldp	x20, x19, [sp, #0x30]
0000000000052b08	ldp	x22, x21, [sp, #0x20]
0000000000052b0c	ldp	x24, x23, [sp, #0x10]
0000000000052b10	add	sp, sp, #0x50
0000000000052b14	ret
0000000000052b18	ldr	x8, [x19, #0x8]
0000000000052b1c	cbz	x8, 0x52afc
0000000000052b20	bl	_Kotlin_initRuntimeIfNeeded
0000000000052b24	adrp	x21, 40 ; 0x7a000
0000000000052b28	add	x21, x21, #0x2c0
0000000000052b2c	ldr	x23, [x21]
0000000000052b30	mov	x0, x21
0000000000052b34	blr	x23
0000000000052b38	ldr	x8, [x0]
0000000000052b3c	add	x20, x8, #0x138
0000000000052b40	ldaxr	w22, [x20]
0000000000052b44	stlxr	w8, wzr, [x20]
0000000000052b48	cbnz	w8, 0x52b40
0000000000052b4c	cmp	w22, #0x1
0000000000052b50	b.ne	0x52b6c
0000000000052b54	adr	x8, #0x41735
0000000000052b58	nop
0000000000052b5c	ldarb	w8, [x8]
0000000000052b60	tbz	w8, #0x0, 0x52b6c
0000000000052b64	mov	x0, x20
0000000000052b68	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000052b6c	bl	_Kotlin_initRuntimeIfNeeded
0000000000052b70	ldr	x24, [x19, #0x8]
0000000000052b74	mov	x0, x21
0000000000052b78	blr	x23
0000000000052b7c	ldr	x21, [x0]
0000000000052b80	mov	w0, #0x1
0000000000052b84	mov	w1, #0x28
0000000000052b88	bl	0x553d4 ; symbol stub for: _calloc
0000000000052b8c	ldr	x8, [x21, #0xa8]!
0000000000052b90	sub	x9, x21, #0x8
0000000000052b94	stp	x8, x21, [x0]
0000000000052b98	str	x0, [x8, #0x8]
0000000000052b9c	str	x0, [x21]
0000000000052ba0	ldr	x8, [x21, #0x10]
0000000000052ba4	add	x8, x8, #0x1
0000000000052ba8	str	x8, [x21, #0x10]
0000000000052bac	stp	x9, x0, [x0, #0x18]
0000000000052bb0	str	x24, [x0, #0x10]!
0000000000052bb4	str	x0, [x19, #0x10]
0000000000052bb8	ldaxr	w8, [x20]
0000000000052bbc	stlxr	w9, w22, [x20]
0000000000052bc0	cbnz	w9, 0x52bb8
0000000000052bc4	cbnz	w22, 0x52afc
0000000000052bc8	cmp	w8, #0x1
0000000000052bcc	b.ne	0x52afc
0000000000052bd0	adr	x8, #0x416b9
0000000000052bd4	nop
0000000000052bd8	ldarb	w8, [x8]
0000000000052bdc	tbz	w8, #0x0, 0x52afc
0000000000052be0	mov	x0, x20
0000000000052be4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000052be8	b	0x52afc
-[KotlinBase _tryRetain]:
0000000000052bec	sub	sp, sp, #0x90
0000000000052bf0	stp	x28, x27, [sp, #0x30]
0000000000052bf4	stp	x26, x25, [sp, #0x40]
0000000000052bf8	stp	x24, x23, [sp, #0x50]
0000000000052bfc	stp	x22, x21, [sp, #0x60]
0000000000052c00	stp	x20, x19, [sp, #0x70]
0000000000052c04	stp	x29, x30, [sp, #0x80]
0000000000052c08	add	x29, sp, #0x80
0000000000052c0c	mov	x21, x0
0000000000052c10	ldrb	w8, [x0, #0x20]
0000000000052c14	cbz	w8, 0x52c5c
0000000000052c18	nop
0000000000052c1c	ldr	x8, #0x2412c ; Objc class ref: FastaKmmBase
0000000000052c20	stp	x21, x8, [sp]
0000000000052c24	nop
0000000000052c28	ldr	x1, #0x23be0 ; Objc selector ref: _tryRetain
0000000000052c2c	mov	x0, sp
0000000000052c30	bl	0x55590 ; Objc message: -[[x0 super] _tryRetain]
0000000000052c34	mov	x20, x0
0000000000052c38	mov	x0, x20
0000000000052c3c	ldp	x29, x30, [sp, #0x80]
0000000000052c40	ldp	x20, x19, [sp, #0x70]
0000000000052c44	ldp	x22, x21, [sp, #0x60]
0000000000052c48	ldp	x24, x23, [sp, #0x50]
0000000000052c4c	ldp	x26, x25, [sp, #0x40]
0000000000052c50	ldp	x28, x27, [sp, #0x30]
0000000000052c54	add	sp, sp, #0x90
0000000000052c58	ret
0000000000052c5c	bl	_Kotlin_initRuntimeIfNeeded
0000000000052c60	adrp	x20, 40 ; 0x7a000
0000000000052c64	add	x20, x20, #0x2c0
0000000000052c68	ldr	x24, [x20]
0000000000052c6c	mov	x0, x20
0000000000052c70	blr	x24
0000000000052c74	ldr	x8, [x0]
0000000000052c78	add	x19, x8, #0x138
0000000000052c7c	ldaxr	w23, [x19]
0000000000052c80	stlxr	w8, wzr, [x19]
0000000000052c84	cbnz	w8, 0x52c7c
0000000000052c88	cmp	w23, #0x1
0000000000052c8c	b.ne	0x52ca8
0000000000052c90	adr	x8, #0x415f9
0000000000052c94	nop
0000000000052c98	ldarb	w8, [x8]
0000000000052c9c	tbz	w8, #0x0, 0x52ca8
0000000000052ca0	mov	x0, x19
0000000000052ca4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000052ca8	ldr	x8, [x21, #0x8]
0000000000052cac	cbz	x8, 0x52d08
0000000000052cb0	mov	x0, x20
0000000000052cb4	blr	x24
0000000000052cb8	ldr	x9, [x0]
0000000000052cbc	ldr	x10, [x9, #0x110]
0000000000052cc0	add	x11, sp, #0x10
0000000000052cc4	str	x11, [x9, #0x110]
0000000000052cc8	mov	x9, #0x400000000
0000000000052ccc	stp	x10, x9, [sp, #0x18]
0000000000052cd0	str	x8, [sp, #0x28]
0000000000052cd4	add	x8, x21, #0x18
0000000000052cd8	ldaxr	w9, [x8]
0000000000052cdc	add	w10, w9, #0x1
0000000000052ce0	stlxr	w11, w10, [x8]
0000000000052ce4	cbnz	w11, 0x52cd8
0000000000052ce8	cbz	w9, 0x52d40
0000000000052cec	mov	x0, x20
0000000000052cf0	blr	x24
0000000000052cf4	ldr	x8, [x0]
0000000000052cf8	ldr	x9, [sp, #0x18]
0000000000052cfc	str	x9, [x8, #0x110]
0000000000052d00	mov	w20, #0x1
0000000000052d04	b	0x52d0c
0000000000052d08	mov	w20, #0x0
0000000000052d0c	ldaxr	w8, [x19]
0000000000052d10	stlxr	w9, w23, [x19]
0000000000052d14	cbnz	w9, 0x52d0c
0000000000052d18	cbnz	w23, 0x52c38
0000000000052d1c	cmp	w8, #0x1
0000000000052d20	b.ne	0x52c38
0000000000052d24	adr	x8, #0x41565
0000000000052d28	nop
0000000000052d2c	ldarb	w8, [x8]
0000000000052d30	tbz	w8, #0x0, 0x52c38
0000000000052d34	mov	x0, x19
0000000000052d38	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000052d3c	b	0x52c38
0000000000052d40	ldr	x8, [x21, #0x8]
0000000000052d44	cbz	x8, 0x52cec
0000000000052d48	bl	_Kotlin_initRuntimeIfNeeded
0000000000052d4c	mov	x0, x20
0000000000052d50	blr	x24
0000000000052d54	ldr	x8, [x0]
0000000000052d58	add	x22, x8, #0x138
0000000000052d5c	ldaxr	w25, [x22]
0000000000052d60	stlxr	w8, wzr, [x22]
0000000000052d64	cbnz	w8, 0x52d5c
0000000000052d68	cmp	w25, #0x1
0000000000052d6c	b.ne	0x52d88
0000000000052d70	adr	x8, #0x41519
0000000000052d74	nop
0000000000052d78	ldarb	w8, [x8]
0000000000052d7c	tbz	w8, #0x0, 0x52d88
0000000000052d80	mov	x0, x22
0000000000052d84	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000052d88	ldr	x26, [x21, #0x8]
0000000000052d8c	mov	x0, x20
0000000000052d90	blr	x24
0000000000052d94	ldr	x27, [x0]
0000000000052d98	mov	w0, #0x1
0000000000052d9c	mov	w1, #0x28
0000000000052da0	bl	0x553d4 ; symbol stub for: _calloc
0000000000052da4	ldr	x8, [x27, #0xa8]!
0000000000052da8	sub	x9, x27, #0x8
0000000000052dac	mov	x10, x0
0000000000052db0	str	x26, [x10, #0x10]!
0000000000052db4	str	x9, [x0, #0x18]
0000000000052db8	stp	x8, x27, [x0]
0000000000052dbc	str	x0, [x8, #0x8]
0000000000052dc0	str	x0, [x27]
0000000000052dc4	ldr	x8, [x27, #0x10]
0000000000052dc8	add	x8, x8, #0x1
0000000000052dcc	str	x8, [x27, #0x10]
0000000000052dd0	str	x0, [x0, #0x20]
0000000000052dd4	str	x10, [x21, #0x10]
0000000000052dd8	ldaxr	w8, [x22]
0000000000052ddc	stlxr	w9, w25, [x22]
0000000000052de0	cbnz	w9, 0x52dd8
0000000000052de4	cbnz	w25, 0x52cec
0000000000052de8	cmp	w8, #0x1
0000000000052dec	b.ne	0x52cec
0000000000052df0	adr	x8, #0x41499
0000000000052df4	nop
0000000000052df8	ldarb	w8, [x8]
0000000000052dfc	tbz	w8, #0x0, 0x52cec
0000000000052e00	mov	x0, x22
0000000000052e04	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000052e08	b	0x52cec
-[KotlinBase release]:
0000000000052e0c	sub	sp, sp, #0x20
0000000000052e10	stp	x29, x30, [sp, #0x10]
0000000000052e14	add	x29, sp, #0x10
0000000000052e18	ldrb	w8, [x0, #0x20]
0000000000052e1c	cbz	w8, 0x52e48
0000000000052e20	nop
0000000000052e24	ldr	x8, #0x23f24 ; Objc class ref: FastaKmmBase
0000000000052e28	stp	x0, x8, [sp]
0000000000052e2c	nop
0000000000052e30	ldr	x1, #0x23c18 ; Objc selector ref: release
0000000000052e34	mov	x0, sp
0000000000052e38	bl	0x55590 ; Objc message: -[[x0 super] release]
0000000000052e3c	ldp	x29, x30, [sp, #0x10]
0000000000052e40	add	sp, sp, #0x20
0000000000052e44	ret
0000000000052e48	add	x0, x0, #0x8
0000000000052e4c	ldp	x29, x30, [sp, #0x10]
0000000000052e50	add	sp, sp, #0x20
0000000000052e54	b	__ZN27BackRefFromAssociatedObject10releaseRefEv
-[KotlinBase releaseAsAssociatedObject:]:
0000000000052e58	sub	sp, sp, #0x20
0000000000052e5c	stp	x29, x30, [sp, #0x10]
0000000000052e60	add	x29, sp, #0x10
0000000000052e64	cbz	w2, 0x52e74
0000000000052e68	str	xzr, [x0, #0x8]
0000000000052e6c	cmp	w2, #0x1
0000000000052e70	b.ne	0x52e90
0000000000052e74	nop
0000000000052e78	ldr	x8, #0x23ed0 ; Objc class ref: FastaKmmBase
0000000000052e7c	stp	x0, x8, [sp]
0000000000052e80	nop
0000000000052e84	ldr	x1, #0x23bc4 ; Objc selector ref: release
0000000000052e88	mov	x0, sp
0000000000052e8c	bl	0x55590 ; Objc message: -[[x0 super] release]
0000000000052e90	ldp	x29, x30, [sp, #0x10]
0000000000052e94	add	sp, sp, #0x20
0000000000052e98	ret
-[KotlinBase copyWithZone:]:
0000000000052e9c	b	0x555b4 ; symbol stub for: _objc_retain
+[KotlinBase load]:
0000000000052ea0	nop
0000000000052ea4	ldr	x8, #0x416ac
0000000000052ea8	cmn	x8, #0x1
0000000000052eac	b.ne	0x52eb4
0000000000052eb0	ret
0000000000052eb4	adr	x0, #0x4169c
0000000000052eb8	nop
0000000000052ebc	adr	x1, #0x1e9d4
0000000000052ec0	nop
0000000000052ec4	b	0x55434 ; symbol stub for: _dispatch_once
+[KotlinBase initialize]:
0000000000052ec8	sub	sp, sp, #0x70
0000000000052ecc	stp	x28, x27, [sp, #0x10]
0000000000052ed0	stp	x26, x25, [sp, #0x20]
0000000000052ed4	stp	x24, x23, [sp, #0x30]
0000000000052ed8	stp	x22, x21, [sp, #0x40]
0000000000052edc	stp	x20, x19, [sp, #0x50]
0000000000052ee0	stp	x29, x30, [sp, #0x60]
0000000000052ee4	add	x29, sp, #0x60
0000000000052ee8	mov	x19, x0
0000000000052eec	nop
0000000000052ef0	ldr	x0, #0x23e00 ; Objc class ref: FastaKmmBase
0000000000052ef4	nop
0000000000052ef8	ldr	x1, #0x23940 ; Objc selector ref: class
0000000000052efc	bl	0x55584 ; Objc message: +[FastaKmmBase class]
0000000000052f00	cmp	x0, x19
0000000000052f04	b.ne	0x52f28
0000000000052f08	nop
0000000000052f0c	ldr	x8, #0x41644
0000000000052f10	cmn	x8, #0x1
0000000000052f14	b.ne	0x531ec
0000000000052f18	nop
0000000000052f1c	ldr	x8, #0x415e4
0000000000052f20	cmn	x8, #0x1
0000000000052f24	b.ne	0x53210
0000000000052f28	mov	x0, x19
0000000000052f2c	bl	0x5541c ; symbol stub for: _class_getName
0000000000052f30	mov	x20, x0
0000000000052f34	mov	w22, #0x0
0000000000052f38	mov	w21, #0x6
0000000000052f3c	adr	x23, #0x1d2a4
0000000000052f40	nop
0000000000052f44	b	0x52f54
0000000000052f48	sub	w21, w25, #0x1
0000000000052f4c	cmp	w21, w22
0000000000052f50	b.lt	0x52f88
0000000000052f54	add	w8, w21, w22
0000000000052f58	cmp	w8, #0x0
0000000000052f5c	cinc	w8, w8, lt
0000000000052f60	asr	w25, w8, #1
0000000000052f64	ldr	x24, [x23, w25, sxtw #3]
0000000000052f68	ldr	x1, [x24, #0x28]
0000000000052f6c	mov	x0, x20
0000000000052f70	bl	0x55734 ; symbol stub for: _strcmp
0000000000052f74	tbnz	w0, #0x1f, 0x52f48
0000000000052f78	cbz	w0, 0x52fac
0000000000052f7c	add	w22, w25, #0x1
0000000000052f80	cmp	w21, w22
0000000000052f84	b.ge	0x52f54
0000000000052f88	mov	x0, x19
0000000000052f8c	ldp	x29, x30, [sp, #0x60]
0000000000052f90	ldp	x20, x19, [sp, #0x50]
0000000000052f94	ldp	x22, x21, [sp, #0x40]
0000000000052f98	ldp	x24, x23, [sp, #0x30]
0000000000052f9c	ldp	x26, x25, [sp, #0x20]
0000000000052fa0	ldp	x28, x27, [sp, #0x10]
0000000000052fa4	add	sp, sp, #0x70
0000000000052fa8	b	__ZL19getOrCreateTypeInfoP10objc_class
0000000000052fac	adrp	x8, 40 ; 0x7a000
0000000000052fb0	add	x8, x8, #0x2c0
0000000000052fb4	ldr	x9, [x8]
0000000000052fb8	mov	x0, x8
0000000000052fbc	blr	x9
0000000000052fc0	ldr	x22, [x0]
0000000000052fc4	cbz	x22, 0x52fe8
0000000000052fc8	add	x10, x22, #0x138
0000000000052fcc	mov	w11, #0x1
0000000000052fd0	ldaxr	w21, [x10]
0000000000052fd4	stlxr	w12, w11, [x10]
0000000000052fd8	cbnz	w12, 0x52fd0
0000000000052fdc	ldr	x23, [x24]
0000000000052fe0	cbnz	x23, 0x52ff4
0000000000052fe4	b	0x53094
0000000000052fe8	mov	w21, #0x1
0000000000052fec	ldr	x23, [x24]
0000000000052ff0	cbz	x23, 0x53094
0000000000052ff4	str	x23, [sp, #0x8]
0000000000052ff8	mov	x0, x8
0000000000052ffc	blr	x9
0000000000053000	ldr	x25, [x0]
0000000000053004	cbz	x25, 0x53020
0000000000053008	add	x8, x25, #0x138
000000000005300c	mov	w9, #0x1
0000000000053010	ldaxr	w20, [x8]
0000000000053014	stlxr	w10, w9, [x8]
0000000000053018	cbnz	w10, 0x53010
000000000005301c	b	0x53024
0000000000053020	mov	w20, #0x1
0000000000053024	nop
0000000000053028	ldr	x0, #0x23c58 ; Objc class ref: _OBJC_CLASS_$_NSValue
000000000005302c	bl	0x55500 ; symbol stub for: _objc_alloc
0000000000053030	nop
0000000000053034	ldr	x1, #0x238cc ; Objc selector ref: initWithBytes:objCType:
0000000000053038	adr	x3, #0xb986 ; literal pool for: "^v"
000000000005303c	nop
0000000000053040	add	x2, sp, #0x8
0000000000053044	bl	0x55584 ; Objc message: +[NSValue initWithBytes:objCType:]
0000000000053048	mov	x2, x0
000000000005304c	adr	x1, #0x41246
0000000000053050	nop
0000000000053054	mov	x0, x19
0000000000053058	mov	x3, #0x0
000000000005305c	bl	0x555d8 ; symbol stub for: _objc_setAssociatedObject
0000000000053060	cbz	x25, 0x53094
0000000000053064	add	x0, x25, #0x138
0000000000053068	ldaxr	w8, [x0]
000000000005306c	stlxr	w9, w20, [x0]
0000000000053070	cbnz	w9, 0x53068
0000000000053074	cbnz	w20, 0x53094
0000000000053078	cmp	w8, #0x1
000000000005307c	b.ne	0x53094
0000000000053080	adr	x8, #0x41209
0000000000053084	nop
0000000000053088	ldarb	w8, [x8]
000000000005308c	tbz	w8, #0x0, 0x53094
0000000000053090	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000053094	ldr	w8, [x24, #0x38]
0000000000053098	cmp	w8, #0x1
000000000005309c	b.lt	0x530dc
00000000000530a0	mov	x20, #0x0
00000000000530a4	mov	x25, #0x0
00000000000530a8	ldr	x26, [x24, #0x30]
00000000000530ac	ldr	x0, [x26, x20]
00000000000530b0	bl	0x55710 ; symbol stub for: _sel_registerName
00000000000530b4	mov	x1, x0
00000000000530b8	add	x8, x26, x20
00000000000530bc	ldp	x3, x2, [x8, #0x8]
00000000000530c0	mov	x0, x19
00000000000530c4	bl	0x553e0 ; symbol stub for: _class_addMethod
00000000000530c8	add	x25, x25, #0x1
00000000000530cc	ldrsw	x8, [x24, #0x38]
00000000000530d0	add	x20, x20, #0x18
00000000000530d4	cmp	x25, x8
00000000000530d8	b.lt	0x530a8
00000000000530dc	ldr	w8, [x24, #0x48]
00000000000530e0	cmp	w8, #0x1
00000000000530e4	b.lt	0x5312c
00000000000530e8	mov	x25, #0x0
00000000000530ec	mov	x26, #0x0
00000000000530f0	ldr	x27, [x24, #0x40]
00000000000530f4	ldr	x0, [x27, x25]
00000000000530f8	bl	0x55710 ; symbol stub for: _sel_registerName
00000000000530fc	mov	x20, x0
0000000000053100	mov	x0, x19
0000000000053104	bl	0x555f0 ; symbol stub for: _object_getClass
0000000000053108	add	x8, x27, x25
000000000005310c	ldp	x3, x2, [x8, #0x8]
0000000000053110	mov	x1, x20
0000000000053114	bl	0x553e0 ; symbol stub for: _class_addMethod
0000000000053118	add	x26, x26, #0x1
000000000005311c	ldrsw	x8, [x24, #0x48]
0000000000053120	add	x25, x25, #0x18
0000000000053124	cmp	x26, x8
0000000000053128	b.lt	0x530f0
000000000005312c	cbz	x23, 0x53198
0000000000053130	ldr	w8, [x23, #0x38]
0000000000053134	cmp	w8, #0x1
0000000000053138	b.lt	0x53198
000000000005313c	mov	x24, #0x0
0000000000053140	b	0x53154
0000000000053144	add	x24, x24, #0x1
0000000000053148	ldrsw	x8, [x23, #0x38]
000000000005314c	cmp	x24, x8
0000000000053150	b.ge	0x53198
0000000000053154	ldr	x8, [x23, #0x30]
0000000000053158	ldr	x8, [x8, x24, lsl #3]
000000000005315c	ldr	x8, [x8, #0x60]
0000000000053160	ldr	x8, [x8, #0x10]
0000000000053164	cbz	x8, 0x53144
0000000000053168	ldr	x0, [x8, #0x28]
000000000005316c	bl	0x5556c ; symbol stub for: _objc_getProtocol
0000000000053170	mov	x20, x0
0000000000053174	cbz	x0, 0x53144
0000000000053178	mov	x0, x19
000000000005317c	mov	x1, x20
0000000000053180	bl	0x553ec ; symbol stub for: _class_addProtocol
0000000000053184	mov	x0, x19
0000000000053188	bl	0x555f0 ; symbol stub for: _object_getClass
000000000005318c	mov	x1, x20
0000000000053190	bl	0x553ec ; symbol stub for: _class_addProtocol
0000000000053194	b	0x53144
0000000000053198	cbz	x22, 0x531cc
000000000005319c	add	x0, x22, #0x138
00000000000531a0	ldaxr	w8, [x0]
00000000000531a4	stlxr	w9, w21, [x0]
00000000000531a8	cbnz	w9, 0x531a0
00000000000531ac	cbnz	w21, 0x531cc
00000000000531b0	cmp	w8, #0x1
00000000000531b4	b.ne	0x531cc
00000000000531b8	adr	x8, #0x410d1
00000000000531bc	nop
00000000000531c0	ldarb	w8, [x8]
00000000000531c4	tbz	w8, #0x0, 0x531cc
00000000000531c8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000531cc	ldp	x29, x30, [sp, #0x60]
00000000000531d0	ldp	x20, x19, [sp, #0x50]
00000000000531d4	ldp	x22, x21, [sp, #0x40]
00000000000531d8	ldp	x24, x23, [sp, #0x30]
00000000000531dc	ldp	x26, x25, [sp, #0x20]
00000000000531e0	ldp	x28, x27, [sp, #0x10]
00000000000531e4	add	sp, sp, #0x70
00000000000531e8	ret
00000000000531ec	adr	x0, #0x41364
00000000000531f0	nop
00000000000531f4	adr	x1, #0x1e69c
00000000000531f8	nop
00000000000531fc	bl	0x55434 ; symbol stub for: _dispatch_once
0000000000053200	nop
0000000000053204	ldr	x8, #0x412fc
0000000000053208	cmn	x8, #0x1
000000000005320c	b.eq	0x52f28
0000000000053210	adr	x0, #0x412f0
0000000000053214	nop
0000000000053218	adr	x1, #0x1e618
000000000005321c	nop
0000000000053220	bl	0x55434 ; symbol stub for: _dispatch_once
0000000000053224	b	0x52f28
0000000000053228	mov	x19, x0
000000000005322c	cbz	x25, 0x53270
0000000000053230	add	x0, x25, #0x138
0000000000053234	ldaxr	w8, [x0]
0000000000053238	stlxr	w9, w20, [x0]
000000000005323c	cbnz	w9, 0x53234
0000000000053240	cbnz	w20, 0x53270
0000000000053244	cmp	w8, #0x1
0000000000053248	b.ne	0x53270
000000000005324c	adr	x8, #0x4103d
0000000000053250	nop
0000000000053254	ldarb	w8, [x8]
0000000000053258	tbz	w8, #0x0, 0x53270
000000000005325c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000053260	b	0x53270
0000000000053264	b	0x5326c
0000000000053268	b	0x5326c
000000000005326c	mov	x19, x0
0000000000053270	cbnz	x22, 0x5327c
0000000000053274	mov	x0, x19
0000000000053278	bl	0x55194 ; symbol stub for: __Unwind_Resume
000000000005327c	add	x0, x22, #0x138
0000000000053280	ldaxr	w8, [x0]
0000000000053284	stlxr	w9, w21, [x0]
0000000000053288	cbnz	w9, 0x53280
000000000005328c	cbnz	w21, 0x53274
0000000000053290	cmp	w8, #0x1
0000000000053294	b.ne	0x53274
0000000000053298	adr	x8, #0x40ff1
000000000005329c	nop
00000000000532a0	ldarb	w8, [x8]
00000000000532a4	tbz	w8, #0x0, 0x53274
00000000000532a8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000532ac	mov	x0, x19
00000000000532b0	bl	0x55194 ; symbol stub for: __Unwind_Resume
+[KotlinBase allocWithZone:]:
00000000000532b4	sub	sp, sp, #0xa0
00000000000532b8	stp	x28, x27, [sp, #0x40]
00000000000532bc	stp	x26, x25, [sp, #0x50]
00000000000532c0	stp	x24, x23, [sp, #0x60]
00000000000532c4	stp	x22, x21, [sp, #0x70]
00000000000532c8	stp	x20, x19, [sp, #0x80]
00000000000532cc	stp	x29, x30, [sp, #0x90]
00000000000532d0	add	x29, sp, #0x90
00000000000532d4	mov	x20, x2
00000000000532d8	mov	x22, x0
00000000000532dc	bl	_Kotlin_initRuntimeIfNeeded
00000000000532e0	adrp	x21, 39 ; 0x7a000
00000000000532e4	add	x21, x21, #0x2c0
00000000000532e8	ldr	x27, [x21]
00000000000532ec	mov	x0, x21
00000000000532f0	blr	x27
00000000000532f4	ldr	x26, [x0]
00000000000532f8	add	x19, x26, #0x138
00000000000532fc	ldaxr	w25, [x19]
0000000000053300	stlxr	w8, wzr, [x19]
0000000000053304	cbnz	w8, 0x532fc
0000000000053308	cmp	w25, #0x1
000000000005330c	b.ne	0x53328
0000000000053310	adr	x8, #0x40f79
0000000000053314	nop
0000000000053318	ldarb	w8, [x8]
000000000005331c	tbz	w8, #0x0, 0x53328
0000000000053320	mov	x0, x19
0000000000053324	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000053328	nop
000000000005332c	ldr	x8, #0x23a14 ; Objc class ref: FastaKmmBase
0000000000053330	stp	x22, x8, [sp, #0x30]
0000000000053334	nop
0000000000053338	ldr	x1, #0x234e8 ; Objc selector ref: allocWithZone:
000000000005333c	add	x0, sp, #0x30
0000000000053340	mov	x2, x20
0000000000053344	bl	0x55590 ; Objc message: -[[x0 super] allocWithZone:]
0000000000053348	mov	x20, x0
000000000005334c	adr	x1, #0x40f46
0000000000053350	nop
0000000000053354	mov	x0, x22
0000000000053358	bl	0x55554 ; symbol stub for: _objc_getAssociatedObject
000000000005335c	nop
0000000000053360	ldr	x1, #0x236c8 ; Objc selector ref: pointerValue
0000000000053364	bl	0x55584 ; Objc message: -[x0 pointerValue]
0000000000053368	mov	x23, x0
000000000005336c	cbnz	x0, 0x533ac
0000000000053370	nop
0000000000053374	ldr	x24, #0x23904 ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000053378	mov	x0, x22
000000000005337c	bl	0x555f0 ; symbol stub for: _object_getClass
0000000000053380	bl	0x5541c ; symbol stub for: _class_getName
0000000000053384	nop
0000000000053388	ldr	x8, #0xcc80 ; literal pool symbol address: _NSGenericException
000000000005338c	ldr	x2, [x8]
0000000000053390	nop
0000000000053394	ldr	x1, #0x2369c ; Objc selector ref: raise:format:
0000000000053398	str	x0, [sp]
000000000005339c	adr	x3, #0x1e694 ; Objc cfstring ref: @"bad cfstring ref"
00000000000533a0	nop
00000000000533a4	mov	x0, x24
00000000000533a8	bl	0x55584 ; Objc message: +[NSException raise:format:]
00000000000533ac	ldr	w8, [x23, #0x14]
00000000000533b0	tbz	w8, #0x1f, 0x533f4
00000000000533b4	nop
00000000000533b8	ldr	x24, #0x238c0 ; Objc class ref: _OBJC_CLASS_$_NSException
00000000000533bc	mov	x0, x22
00000000000533c0	bl	0x555f0 ; symbol stub for: _object_getClass
00000000000533c4	bl	0x5541c ; symbol stub for: _class_getName
00000000000533c8	nop
00000000000533cc	ldr	x8, #0xcc3c ; literal pool symbol address: _NSGenericException
00000000000533d0	ldr	x2, [x8]
00000000000533d4	nop
00000000000533d8	ldr	x1, #0x23658 ; Objc selector ref: raise:format:
00000000000533dc	str	x0, [sp]
00000000000533e0	adr	x3, #0x1e670 ; Objc cfstring ref: @"bad cfstring ref"
00000000000533e4	nop
00000000000533e8	mov	x0, x24
00000000000533ec	bl	0x55584 ; Objc message: +[NSException raise:format:]
00000000000533f0	ldr	w8, [x23, #0x14]
00000000000533f4	str	xzr, [sp, #0x28]
00000000000533f8	mov	x0, x21
00000000000533fc	blr	x27
0000000000053400	ldr	x9, [x0]
0000000000053404	add	x10, sp, #0x10
0000000000053408	ldp	x11, x12, [x9, #0x110]
000000000005340c	str	x10, [x9, #0x110]
0000000000053410	mov	x9, #0x400000000
0000000000053414	stp	x11, x9, [sp, #0x18]
0000000000053418	sxtw	x8, w8
000000000005341c	add	x8, x8, #0xf
0000000000053420	and	x1, x8, #0xfffffffffffffff8
0000000000053424	add	x0, x12, #0x70
0000000000053428	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000005342c	str	x23, [x0, #0x10]!
0000000000053430	stur	xzr, [x0, #-0x8]
0000000000053434	str	x0, [sp, #0x28]
0000000000053438	ldar	x8, [x0]
000000000005343c	and	x8, x8, #0xfffffffffffffffc
0000000000053440	ldr	x9, [x8]
0000000000053444	cmp	x9, x8
0000000000053448	csel	x8, xzr, x8, eq
000000000005344c	cbnz	x8, 0x53458
0000000000053450	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000053454	mov	x8, x0
0000000000053458	add	x8, x8, #0x10
000000000005345c	stlr	x20, [x8]
0000000000053460	ldr	x22, [sp, #0x28]
0000000000053464	str	x22, [x20, #0x8]
0000000000053468	mov	x0, x21
000000000005346c	blr	x27
0000000000053470	ldr	x21, [x0]
0000000000053474	mov	w23, #0x1
0000000000053478	mov	w0, #0x1
000000000005347c	mov	w1, #0x28
0000000000053480	bl	0x553d4 ; symbol stub for: _calloc
0000000000053484	ldr	x8, [x21, #0xa8]!
0000000000053488	sub	x9, x21, #0x8
000000000005348c	mov	x10, x0
0000000000053490	str	x22, [x10, #0x10]!
0000000000053494	str	x9, [x0, #0x18]
0000000000053498	stp	x8, x21, [x0]
000000000005349c	str	x0, [x8, #0x8]
00000000000534a0	str	x0, [x21]
00000000000534a4	ldr	x8, [x21, #0x10]
00000000000534a8	add	x8, x8, #0x1
00000000000534ac	str	x8, [x21, #0x10]
00000000000534b0	str	x0, [x0, #0x20]
00000000000534b4	str	x10, [x20, #0x10]
00000000000534b8	str	w23, [x20, #0x18]
00000000000534bc	strb	wzr, [x20, #0x20]
00000000000534c0	ldr	x8, [sp, #0x18]
00000000000534c4	str	x8, [x21, #0x68]
00000000000534c8	cbz	x26, 0x534fc
00000000000534cc	ldaxr	w8, [x19]
00000000000534d0	stlxr	w9, w25, [x19]
00000000000534d4	cbnz	w9, 0x534cc
00000000000534d8	cbnz	w25, 0x534fc
00000000000534dc	cmp	w8, #0x1
00000000000534e0	b.ne	0x534fc
00000000000534e4	adr	x8, #0x40da5
00000000000534e8	nop
00000000000534ec	ldarb	w8, [x8]
00000000000534f0	tbz	w8, #0x0, 0x534fc
00000000000534f4	mov	x0, x19
00000000000534f8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000534fc	mov	x0, x20
0000000000053500	ldp	x29, x30, [sp, #0x90]
0000000000053504	ldp	x20, x19, [sp, #0x80]
0000000000053508	ldp	x22, x21, [sp, #0x70]
000000000005350c	ldp	x24, x23, [sp, #0x60]
0000000000053510	ldp	x26, x25, [sp, #0x50]
0000000000053514	ldp	x28, x27, [sp, #0x40]
0000000000053518	add	sp, sp, #0xa0
000000000005351c	ret
0000000000053520	b	0x53524
0000000000053524	mov	x20, x0
0000000000053528	cbz	x26, 0x5355c
000000000005352c	ldaxr	w8, [x19]
0000000000053530	stlxr	w9, w25, [x19]
0000000000053534	cbnz	w9, 0x5352c
0000000000053538	cbnz	w25, 0x5355c
000000000005353c	cmp	w8, #0x1
0000000000053540	b.ne	0x5355c
0000000000053544	adr	x8, #0x40d45
0000000000053548	nop
000000000005354c	ldarb	w8, [x8]
0000000000053550	tbz	w8, #0x0, 0x5355c
0000000000053554	mov	x0, x19
0000000000053558	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000005355c	mov	x0, x20
0000000000053560	bl	0x55194 ; symbol stub for: __Unwind_Resume
+[KotlinBase createRetainedWrapper:]:
0000000000053564	sub	sp, sp, #0x60
0000000000053568	stp	x26, x25, [sp, #0x10]
000000000005356c	stp	x24, x23, [sp, #0x20]
0000000000053570	stp	x22, x21, [sp, #0x30]
0000000000053574	stp	x20, x19, [sp, #0x40]
0000000000053578	stp	x29, x30, [sp, #0x50]
000000000005357c	add	x29, sp, #0x50
0000000000053580	mov	x21, x2
0000000000053584	nop
0000000000053588	ldr	x8, #0x237b8 ; Objc class ref: FastaKmmBase
000000000005358c	stp	x0, x8, [sp]
0000000000053590	nop
0000000000053594	ldr	x1, #0x2328c ; Objc selector ref: allocWithZone:
0000000000053598	mov	x0, sp
000000000005359c	mov	x2, #0x0
00000000000535a0	bl	0x55590 ; Objc message: -[[x0 super] allocWithZone:]
00000000000535a4	mov	x19, x0
00000000000535a8	mov	x20, x0
00000000000535ac	str	x21, [x20, #0x8]!
00000000000535b0	adrp	x22, 39 ; 0x7a000
00000000000535b4	add	x22, x22, #0x2c0
00000000000535b8	ldr	x23, [x22]
00000000000535bc	mov	x0, x22
00000000000535c0	blr	x23
00000000000535c4	ldr	x24, [x0]
00000000000535c8	mov	w25, #0x1
00000000000535cc	mov	w0, #0x1
00000000000535d0	mov	w1, #0x28
00000000000535d4	bl	0x553d4 ; symbol stub for: _calloc
00000000000535d8	ldr	x8, [x24, #0xa8]!
00000000000535dc	sub	x9, x24, #0x8
00000000000535e0	stp	x8, x24, [x0]
00000000000535e4	str	x0, [x8, #0x8]
00000000000535e8	str	x0, [x24]
00000000000535ec	ldr	x8, [x24, #0x10]
00000000000535f0	add	x8, x8, #0x1
00000000000535f4	str	x8, [x24, #0x10]
00000000000535f8	stp	x9, x0, [x0, #0x18]
00000000000535fc	str	x21, [x0, #0x10]!
0000000000053600	str	x0, [x19, #0x10]
0000000000053604	str	w25, [x19, #0x18]
0000000000053608	ldr	x8, [x21]
000000000005360c	and	w8, w8, #0x1
0000000000053610	strb	w8, [x19, #0x20]
0000000000053614	ldr	x8, [x21]
0000000000053618	tbnz	w8, #0x0, 0x536e4
000000000005361c	ldar	x8, [x21]
0000000000053620	and	x8, x8, #0xfffffffffffffffc
0000000000053624	ldr	x9, [x8]
0000000000053628	cmp	x9, x8
000000000005362c	csel	x0, xzr, x8, eq
0000000000053630	cbnz	x0, 0x5363c
0000000000053634	mov	x0, x21
0000000000053638	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000005363c	add	x8, x0, #0x10
0000000000053640	ldaxr	x21, [x8]
0000000000053644	cbnz	x21, 0x5365c
0000000000053648	stlxr	w9, x19, [x8]
000000000005364c	cbnz	w9, 0x53640
0000000000053650	mov	w8, #0x1
0000000000053654	tbz	w8, #0x0, 0x53668
0000000000053658	b	0x536e4
000000000005365c	mov	w8, #0x0
0000000000053660	clrex
0000000000053664	tbnz	w8, #0x0, 0x536e4
0000000000053668	mov	x0, x22
000000000005366c	blr	x23
0000000000053670	ldr	x24, [x0]
0000000000053674	add	x22, x24, #0x138
0000000000053678	mov	w8, #0x1
000000000005367c	ldaxr	w23, [x22]
0000000000053680	stlxr	w9, w8, [x22]
0000000000053684	cbnz	w9, 0x5367c
0000000000053688	mov	x0, x20
000000000005368c	bl	__ZN27BackRefFromAssociatedObject10releaseRefEv
0000000000053690	nop
0000000000053694	ldr	x1, #0x2315c ; Objc selector ref: FastaKmm_releaseAsAssociatedObject:
0000000000053698	mov	x0, x19
000000000005369c	mov	w2, #0x1
00000000000536a0	bl	0x55584 ; Objc message: -[x0 FastaKmm_releaseAsAssociatedObject:]
00000000000536a4	cbz	x24, 0x536d8
00000000000536a8	ldaxr	w8, [x22]
00000000000536ac	stlxr	w9, w23, [x22]
00000000000536b0	cbnz	w9, 0x536a8
00000000000536b4	cbnz	w23, 0x536d8
00000000000536b8	cmp	w8, #0x1
00000000000536bc	b.ne	0x536d8
00000000000536c0	adr	x8, #0x40bc9
00000000000536c4	nop
00000000000536c8	ldarb	w8, [x8]
00000000000536cc	tbz	w8, #0x0, 0x536d8
00000000000536d0	mov	x0, x22
00000000000536d4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000536d8	mov	x0, x21
00000000000536dc	bl	0x555b4 ; symbol stub for: _objc_retain
00000000000536e0	mov	x19, x0
00000000000536e4	mov	x0, x19
00000000000536e8	ldp	x29, x30, [sp, #0x50]
00000000000536ec	ldp	x20, x19, [sp, #0x40]
00000000000536f0	ldp	x22, x21, [sp, #0x30]
00000000000536f4	ldp	x24, x23, [sp, #0x20]
00000000000536f8	ldp	x26, x25, [sp, #0x10]
00000000000536fc	add	sp, sp, #0x60
0000000000053700	ret
0000000000053704	mov	x19, x0
0000000000053708	cbz	x24, 0x5373c
000000000005370c	ldaxr	w8, [x22]
0000000000053710	stlxr	w9, w23, [x22]
0000000000053714	cbnz	w9, 0x5370c
0000000000053718	cbnz	w23, 0x5373c
000000000005371c	cmp	w8, #0x1
0000000000053720	b.ne	0x5373c
0000000000053724	adr	x8, #0x40b65
0000000000053728	nop
000000000005372c	ldarb	w8, [x8]
0000000000053730	tbz	w8, #0x0, 0x5373c
0000000000053734	mov	x0, x22
0000000000053738	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000005373c	mov	x0, x19
0000000000053740	bl	0x55194 ; symbol stub for: __Unwind_Resume
____ZL15injectToRuntimev_block_invoke:
0000000000053744	stp	x29, x30, [sp, #-0x10]!
0000000000053748	mov	x29, sp
000000000005374c	nop
0000000000053750	ldr	x8, #0x40d88
0000000000053754	cbnz	x8, 0x5378c
0000000000053758	nop
000000000005375c	ldr	x8, #0x2309c ; Objc selector ref: FastaKmm_toKotlin:
0000000000053760	adr	x9, #0x40d78
0000000000053764	nop
0000000000053768	str	x8, [x9]
000000000005376c	ldr	x8, [x9, #0x8]
0000000000053770	cbnz	x8, 0x5378c
0000000000053774	nop
0000000000053778	ldr	x8, #0x23078 ; Objc selector ref: FastaKmm_releaseAsAssociatedObject:
000000000005377c	adrp	x9, 65 ; 0x94000
0000000000053780	str	x8, [x9, #0x4e0]
0000000000053784	ldp	x29, x30, [sp], #0x10
0000000000053788	ret
000000000005378c	adr	x2, #0xb60e ; literal pool for: "runtime injected twice; https://youtrack.jetbrains.com/issue/KT-42254 might be related"
0000000000053790	nop
0000000000053794	mov	w0, #0x0
0000000000053798	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
-[NSString(NSStringToKotlin) toKotlin:]:
000000000005379c	mov	x1, x2
00000000000537a0	b	_Kotlin_Interop_CreateKStringFromNSString
-[NSObject(NSObjectToKotlin) toKotlin:]:
00000000000537a4	stp	x22, x21, [sp, #-0x30]!
00000000000537a8	stp	x20, x19, [sp, #0x10]
00000000000537ac	stp	x29, x30, [sp, #0x20]
00000000000537b0	add	x29, sp, #0x20
00000000000537b4	mov	x21, x2
00000000000537b8	mov	x19, x0
00000000000537bc	bl	0x555f0 ; symbol stub for: _object_getClass
00000000000537c0	bl	__ZL19getOrCreateTypeInfoP10objc_class
00000000000537c4	mov	x22, x0
00000000000537c8	mov	x0, x19
00000000000537cc	bl	0x555b4 ; symbol stub for: _objc_retain
00000000000537d0	mov	x19, x0
00000000000537d4	adrp	x0, 39 ; 0x7a000
00000000000537d8	add	x0, x0, #0x2c0
00000000000537dc	ldr	x8, [x0]
00000000000537e0	blr	x8
00000000000537e4	ldr	x8, [x0]
00000000000537e8	ldr	x8, [x8, #0x118]
00000000000537ec	ldrsw	x9, [x22, #0x14]
00000000000537f0	add	x9, x9, #0xf
00000000000537f4	and	x1, x9, #0xfffffffffffffff8
00000000000537f8	add	x0, x8, #0x70
00000000000537fc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000053800	mov	x20, x0
0000000000053804	str	x22, [x20, #0x10]!
0000000000053808	stur	xzr, [x20, #-0x8]
000000000005380c	str	x20, [x21]
0000000000053810	ldar	x8, [x20]
0000000000053814	and	x8, x8, #0xfffffffffffffffc
0000000000053818	ldr	x9, [x8]
000000000005381c	cmp	x9, x8
0000000000053820	csel	x0, xzr, x8, eq
0000000000053824	cbnz	x0, 0x53830
0000000000053828	mov	x0, x20
000000000005382c	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000053830	add	x8, x0, #0x10
0000000000053834	stlr	x19, [x8]
0000000000053838	mov	x0, x20
000000000005383c	ldp	x29, x30, [sp, #0x20]
0000000000053840	ldp	x20, x19, [sp, #0x10]
0000000000053844	ldp	x22, x21, [sp], #0x30
0000000000053848	ret
-[NSObject(NSObjectToKotlin) releaseAsAssociatedObject:]:
000000000005384c	cmp	w2, #0x1
0000000000053850	b.hi	0x53858
0000000000053854	b	0x555a8 ; symbol stub for: _objc_release
0000000000053858	ret
-[NSNumber(NSNumberToKotlin) toKotlin:]:
000000000005385c	sub	sp, sp, #0x50
0000000000053860	stp	x22, x21, [sp, #0x20]
0000000000053864	stp	x20, x19, [sp, #0x30]
0000000000053868	stp	x29, x30, [sp, #0x40]
000000000005386c	add	x29, sp, #0x40
0000000000053870	mov	x19, x2
0000000000053874	mov	x20, x0
0000000000053878	nop
000000000005387c	ldr	x1, #0x23184 ; Objc selector ref: objCType
0000000000053880	bl	0x55584 ; Objc message: -[x0 objCType]
0000000000053884	ldrsb	w8, [x0]
0000000000053888	sub	w8, w8, #0x43
000000000005388c	cmp	w8, #0x30
0000000000053890	b.hi	0x538d4
0000000000053894	adr	x9, #0x43c8
0000000000053898	nop
000000000005389c	adr	x10, #0x10
00000000000538a0	ldrb	w11, [x9, x8]
00000000000538a4	add	x10, x10, x11, lsl #2
00000000000538a8	br	x10
00000000000538ac	nop
00000000000538b0	ldr	x1, #0x231f0 ; Objc selector ref: unsignedCharValue
00000000000538b4	mov	x0, x20
00000000000538b8	bl	0x55584 ; Objc message: -[x0 unsignedCharValue]
00000000000538bc	mov	x1, x19
00000000000538c0	ldp	x29, x30, [sp, #0x40]
00000000000538c4	ldp	x20, x19, [sp, #0x30]
00000000000538c8	ldp	x22, x21, [sp, #0x20]
00000000000538cc	add	sp, sp, #0x50
00000000000538d0	b	_Kotlin_boxUByte
00000000000538d4	mov	x0, x20
00000000000538d8	bl	0x555f0 ; symbol stub for: _object_getClass
00000000000538dc	bl	__ZL19getOrCreateTypeInfoP10objc_class
00000000000538e0	mov	x22, x0
00000000000538e4	mov	x0, x20
00000000000538e8	bl	0x555b4 ; symbol stub for: _objc_retain
00000000000538ec	mov	x21, x0
00000000000538f0	adrp	x0, 39 ; 0x7a000
00000000000538f4	add	x0, x0, #0x2c0
00000000000538f8	ldr	x8, [x0]
00000000000538fc	blr	x8
0000000000053900	ldr	x8, [x0]
0000000000053904	ldr	x8, [x8, #0x118]
0000000000053908	ldrsw	x9, [x22, #0x14]
000000000005390c	add	x9, x9, #0xf
0000000000053910	and	x1, x9, #0xfffffffffffffff8
0000000000053914	add	x0, x8, #0x70
0000000000053918	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000005391c	mov	x20, x0
0000000000053920	str	x22, [x20, #0x10]!
0000000000053924	stur	xzr, [x20, #-0x8]
0000000000053928	str	x20, [x19]
000000000005392c	ldar	x8, [x20]
0000000000053930	and	x8, x8, #0xfffffffffffffffc
0000000000053934	ldr	x9, [x8]
0000000000053938	cmp	x9, x8
000000000005393c	csel	x0, xzr, x8, eq
0000000000053940	cbnz	x0, 0x5394c
0000000000053944	mov	x0, x20
0000000000053948	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000005394c	add	x8, x0, #0x10
0000000000053950	stlr	x21, [x8]
0000000000053954	mov	x0, x20
0000000000053958	ldp	x29, x30, [sp, #0x40]
000000000005395c	ldp	x20, x19, [sp, #0x30]
0000000000053960	ldp	x22, x21, [sp, #0x20]
0000000000053964	add	sp, sp, #0x50
0000000000053968	ret
000000000005396c	nop
0000000000053970	ldr	x1, #0x23138 ; Objc selector ref: unsignedIntValue
0000000000053974	mov	x0, x20
0000000000053978	bl	0x55584 ; Objc message: -[x0 unsignedIntValue]
000000000005397c	mov	x1, x19
0000000000053980	ldp	x29, x30, [sp, #0x40]
0000000000053984	ldp	x20, x19, [sp, #0x30]
0000000000053988	ldp	x22, x21, [sp, #0x20]
000000000005398c	add	sp, sp, #0x50
0000000000053990	b	_Kotlin_boxUInt
0000000000053994	nop
0000000000053998	ldr	x1, #0x23118 ; Objc selector ref: unsignedLongLongValue
000000000005399c	mov	x0, x20
00000000000539a0	bl	0x55584 ; Objc message: -[x0 unsignedLongLongValue]
00000000000539a4	mov	x1, x19
00000000000539a8	ldp	x29, x30, [sp, #0x40]
00000000000539ac	ldp	x20, x19, [sp, #0x30]
00000000000539b0	ldp	x22, x21, [sp, #0x20]
00000000000539b4	add	sp, sp, #0x50
00000000000539b8	b	_Kotlin_boxULong
00000000000539bc	nop
00000000000539c0	ldr	x1, #0x230f8 ; Objc selector ref: unsignedShortValue
00000000000539c4	mov	x0, x20
00000000000539c8	bl	0x55584 ; Objc message: -[x0 unsignedShortValue]
00000000000539cc	mov	x1, x19
00000000000539d0	ldp	x29, x30, [sp, #0x40]
00000000000539d4	ldp	x20, x19, [sp, #0x30]
00000000000539d8	ldp	x22, x21, [sp, #0x20]
00000000000539dc	add	sp, sp, #0x50
00000000000539e0	b	_Kotlin_boxUShort
00000000000539e4	nop
00000000000539e8	ldr	x1, #0x22e48 ; Objc selector ref: charValue
00000000000539ec	mov	x0, x20
00000000000539f0	bl	0x55584 ; Objc message: -[x0 charValue]
00000000000539f4	mov	x20, x0
00000000000539f8	str	xzr, [sp, #0x8]
00000000000539fc	adrp	x21, 39 ; 0x7a000
0000000000053a00	add	x21, x21, #0x2c0
0000000000053a04	ldr	x22, [x21]
0000000000053a08	mov	x0, x21
0000000000053a0c	blr	x22
0000000000053a10	ldr	x8, [x0]
0000000000053a14	ldr	x9, [x8, #0x110]
0000000000053a18	add	x10, sp, #0x8
0000000000053a1c	str	x10, [x8, #0x110]
0000000000053a20	mov	x8, #0x300000000
0000000000053a24	stp	x9, x8, [sp, #0x10]
0000000000053a28	adr	x8, #0x40861
0000000000053a2c	nop
0000000000053a30	ldarb	w8, [x8]
0000000000053a34	tbz	w8, #0x0, 0x53a3c
0000000000053a38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000053a3c	mov	x0, x20
0000000000053a40	mov	x1, x19
0000000000053a44	bl	"_kfun:kotlin#<Byte-box>(kotlin.Byte){}kotlin.Any"
0000000000053a48	b	0x53b00
0000000000053a4c	nop
0000000000053a50	ldr	x1, #0x22e58 ; Objc selector ref: doubleValue
0000000000053a54	mov	x0, x20
0000000000053a58	bl	0x55584 ; Objc message: -[x0 doubleValue]
0000000000053a5c	mov	x0, x19
0000000000053a60	ldp	x29, x30, [sp, #0x40]
0000000000053a64	ldp	x20, x19, [sp, #0x30]
0000000000053a68	ldp	x22, x21, [sp, #0x20]
0000000000053a6c	add	sp, sp, #0x50
0000000000053a70	b	_Kotlin_boxDouble
0000000000053a74	nop
0000000000053a78	ldr	x1, #0x22e48 ; Objc selector ref: floatValue
0000000000053a7c	mov	x0, x20
0000000000053a80	bl	0x55584 ; Objc message: -[x0 floatValue]
0000000000053a84	mov	x0, x19
0000000000053a88	ldp	x29, x30, [sp, #0x40]
0000000000053a8c	ldp	x20, x19, [sp, #0x30]
0000000000053a90	ldp	x22, x21, [sp, #0x20]
0000000000053a94	add	sp, sp, #0x50
0000000000053a98	b	_Kotlin_boxFloat
0000000000053a9c	nop
0000000000053aa0	ldr	x1, #0x22ee8 ; Objc selector ref: intValue
0000000000053aa4	mov	x0, x20
0000000000053aa8	bl	0x55584 ; Objc message: -[x0 intValue]
0000000000053aac	mov	x20, x0
0000000000053ab0	str	xzr, [sp, #0x8]
0000000000053ab4	adrp	x21, 39 ; 0x7a000
0000000000053ab8	add	x21, x21, #0x2c0
0000000000053abc	ldr	x22, [x21]
0000000000053ac0	mov	x0, x21
0000000000053ac4	blr	x22
0000000000053ac8	ldr	x8, [x0]
0000000000053acc	ldr	x9, [x8, #0x110]
0000000000053ad0	add	x10, sp, #0x8
0000000000053ad4	str	x10, [x8, #0x110]
0000000000053ad8	mov	x8, #0x300000000
0000000000053adc	stp	x9, x8, [sp, #0x10]
0000000000053ae0	adr	x8, #0x407a9
0000000000053ae4	nop
0000000000053ae8	ldarb	w8, [x8]
0000000000053aec	tbz	w8, #0x0, 0x53af4
0000000000053af0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000053af4	mov	x0, x20
0000000000053af8	mov	x1, x19
0000000000053afc	bl	"_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any"
0000000000053b00	mov	x20, x0
0000000000053b04	str	x0, [x19]
0000000000053b08	mov	x0, x21
0000000000053b0c	blr	x22
0000000000053b10	ldr	x8, [x0]
0000000000053b14	ldr	x9, [sp, #0x10]
0000000000053b18	str	x9, [x8, #0x110]
0000000000053b1c	mov	x0, x20
0000000000053b20	ldp	x29, x30, [sp, #0x40]
0000000000053b24	ldp	x20, x19, [sp, #0x30]
0000000000053b28	ldp	x22, x21, [sp, #0x20]
0000000000053b2c	add	sp, sp, #0x50
0000000000053b30	ret
0000000000053b34	nop
0000000000053b38	ldr	x1, #0x22e78 ; Objc selector ref: longLongValue
0000000000053b3c	mov	x0, x20
0000000000053b40	bl	0x55584 ; Objc message: -[x0 longLongValue]
0000000000053b44	mov	x1, x19
0000000000053b48	ldp	x29, x30, [sp, #0x40]
0000000000053b4c	ldp	x20, x19, [sp, #0x30]
0000000000053b50	ldp	x22, x21, [sp, #0x20]
0000000000053b54	add	sp, sp, #0x50
0000000000053b58	b	_Kotlin_boxLong
0000000000053b5c	nop
0000000000053b60	ldr	x1, #0x22f18 ; Objc selector ref: shortValue
0000000000053b64	mov	x0, x20
0000000000053b68	bl	0x55584 ; Objc message: -[x0 shortValue]
0000000000053b6c	mov	x1, x19
0000000000053b70	ldp	x29, x30, [sp, #0x40]
0000000000053b74	ldp	x20, x19, [sp, #0x30]
0000000000053b78	ldp	x22, x21, [sp, #0x20]
0000000000053b7c	add	sp, sp, #0x50
0000000000053b80	b	_Kotlin_boxShort
-[NSDecimalNumber(NSDecimalNumberToKotlin) toKotlin:]:
0000000000053b84	stp	x22, x21, [sp, #-0x30]!
0000000000053b88	stp	x20, x19, [sp, #0x10]
0000000000053b8c	stp	x29, x30, [sp, #0x20]
0000000000053b90	add	x29, sp, #0x20
0000000000053b94	mov	x21, x2
0000000000053b98	mov	x19, x0
0000000000053b9c	bl	0x555f0 ; symbol stub for: _object_getClass
0000000000053ba0	bl	__ZL19getOrCreateTypeInfoP10objc_class
0000000000053ba4	mov	x22, x0
0000000000053ba8	mov	x0, x19
0000000000053bac	bl	0x555b4 ; symbol stub for: _objc_retain
0000000000053bb0	mov	x19, x0
0000000000053bb4	adrp	x0, 39 ; 0x7a000
0000000000053bb8	add	x0, x0, #0x2c0
0000000000053bbc	ldr	x8, [x0]
0000000000053bc0	blr	x8
0000000000053bc4	ldr	x8, [x0]
0000000000053bc8	ldr	x8, [x8, #0x118]
0000000000053bcc	ldrsw	x9, [x22, #0x14]
0000000000053bd0	add	x9, x9, #0xf
0000000000053bd4	and	x1, x9, #0xfffffffffffffff8
0000000000053bd8	add	x0, x8, #0x70
0000000000053bdc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000053be0	mov	x20, x0
0000000000053be4	str	x22, [x20, #0x10]!
0000000000053be8	stur	xzr, [x20, #-0x8]
0000000000053bec	str	x20, [x21]
0000000000053bf0	ldar	x8, [x20]
0000000000053bf4	and	x8, x8, #0xfffffffffffffffc
0000000000053bf8	ldr	x9, [x8]
0000000000053bfc	cmp	x9, x8
0000000000053c00	csel	x0, xzr, x8, eq
0000000000053c04	cbnz	x0, 0x53c10
0000000000053c08	mov	x0, x20
0000000000053c0c	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000053c10	add	x8, x0, #0x10
0000000000053c14	stlr	x19, [x8]
0000000000053c18	mov	x0, x20
0000000000053c1c	ldp	x29, x30, [sp, #0x20]
0000000000053c20	ldp	x20, x19, [sp, #0x10]
0000000000053c24	ldp	x22, x21, [sp], #0x30
0000000000053c28	ret
-[NSSet(NSSetToKotlin) toKotlin:]:
0000000000053c2c	sub	sp, sp, #0x50
0000000000053c30	stp	x22, x21, [sp, #0x20]
0000000000053c34	stp	x20, x19, [sp, #0x30]
0000000000053c38	stp	x29, x30, [sp, #0x40]
0000000000053c3c	add	x29, sp, #0x40
0000000000053c40	mov	x20, x2
0000000000053c44	bl	0x555b4 ; symbol stub for: _objc_retain
0000000000053c48	mov	x19, x0
0000000000053c4c	bl	_Kotlin_initRuntimeIfNeeded
0000000000053c50	str	xzr, [sp, #0x8]
0000000000053c54	adrp	x21, 39 ; 0x7a000
0000000000053c58	add	x21, x21, #0x2c0
0000000000053c5c	ldr	x22, [x21]
0000000000053c60	mov	x0, x21
0000000000053c64	blr	x22
0000000000053c68	ldr	x8, [x0]
0000000000053c6c	ldr	x9, [x8, #0x110]
0000000000053c70	add	x10, sp, #0x8
0000000000053c74	str	x10, [x8, #0x110]
0000000000053c78	mov	x8, #0x300000000
0000000000053c7c	stp	x9, x8, [sp, #0x10]
0000000000053c80	adr	x8, #0x40609
0000000000053c84	nop
0000000000053c88	ldarb	w8, [x8]
0000000000053c8c	tbz	w8, #0x0, 0x53c94
0000000000053c90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000053c94	mov	x0, x21
0000000000053c98	blr	x22
0000000000053c9c	mov	x22, x0
0000000000053ca0	ldr	x8, [x0]
0000000000053ca4	ldr	x8, [x8, #0x118]
0000000000053ca8	add	x0, x8, #0x70
0000000000053cac	mov	w1, #0x10
0000000000053cb0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000053cb4	mov	x21, x0
0000000000053cb8	adr	x8, #0xf218
0000000000053cbc	nop
0000000000053cc0	str	x8, [x21, #0x10]!
0000000000053cc4	stur	xzr, [x21, #-0x8]
0000000000053cc8	str	x21, [x20]
0000000000053ccc	ldr	x8, [x22]
0000000000053cd0	ldr	x9, [sp, #0x10]
0000000000053cd4	str	x9, [x8, #0x110]
0000000000053cd8	ldar	x8, [x21]
0000000000053cdc	and	x8, x8, #0xfffffffffffffffc
0000000000053ce0	ldr	x9, [x8]
0000000000053ce4	cmp	x9, x8
0000000000053ce8	csel	x0, xzr, x8, eq
0000000000053cec	cbnz	x0, 0x53cf8
0000000000053cf0	mov	x0, x21
0000000000053cf4	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000053cf8	add	x8, x0, #0x10
0000000000053cfc	stlr	x19, [x8]
0000000000053d00	mov	x0, x21
0000000000053d04	ldp	x29, x30, [sp, #0x40]
0000000000053d08	ldp	x20, x19, [sp, #0x30]
0000000000053d0c	ldp	x22, x21, [sp, #0x20]
0000000000053d10	add	sp, sp, #0x50
0000000000053d14	ret
-[NSSet(NSSetToKotlin) releaseAsAssociatedObject:]:
0000000000053d18	cmp	w2, #0x1
0000000000053d1c	b.hi	0x53d24
0000000000053d20	b	0x555a8 ; symbol stub for: _objc_release
0000000000053d24	ret
-[NSMutableArray(NSArrayToKotlin) toKotlin:]:
0000000000053d28	sub	sp, sp, #0x50
0000000000053d2c	stp	x22, x21, [sp, #0x20]
0000000000053d30	stp	x20, x19, [sp, #0x30]
0000000000053d34	stp	x29, x30, [sp, #0x40]
0000000000053d38	add	x29, sp, #0x40
0000000000053d3c	mov	x20, x2
0000000000053d40	bl	0x555b4 ; symbol stub for: _objc_retain
0000000000053d44	mov	x19, x0
0000000000053d48	bl	_Kotlin_initRuntimeIfNeeded
0000000000053d4c	str	xzr, [sp, #0x8]
0000000000053d50	adrp	x21, 39 ; 0x7a000
0000000000053d54	add	x21, x21, #0x2c0
0000000000053d58	ldr	x22, [x21]
0000000000053d5c	mov	x0, x21
0000000000053d60	blr	x22
0000000000053d64	ldr	x8, [x0]
0000000000053d68	ldr	x9, [x8, #0x110]
0000000000053d6c	add	x10, sp, #0x8
0000000000053d70	str	x10, [x8, #0x110]
0000000000053d74	mov	x8, #0x300000000
0000000000053d78	stp	x9, x8, [sp, #0x10]
0000000000053d7c	adr	x8, #0x4050d
0000000000053d80	nop
0000000000053d84	ldarb	w8, [x8]
0000000000053d88	tbz	w8, #0x0, 0x53d90
0000000000053d8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000053d90	mov	x0, x21
0000000000053d94	blr	x22
0000000000053d98	mov	x22, x0
0000000000053d9c	ldr	x8, [x0]
0000000000053da0	ldr	x8, [x8, #0x118]
0000000000053da4	add	x0, x8, #0x70
0000000000053da8	mov	w1, #0x18
0000000000053dac	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000053db0	mov	x21, x0
0000000000053db4	adr	x8, #0xefcc
0000000000053db8	nop
0000000000053dbc	str	x8, [x21, #0x10]!
0000000000053dc0	stur	xzr, [x21, #-0x8]
0000000000053dc4	str	x21, [x20]
0000000000053dc8	ldr	x8, [x22]
0000000000053dcc	ldr	x9, [sp, #0x10]
0000000000053dd0	str	x9, [x8, #0x110]
0000000000053dd4	ldar	x8, [x21]
0000000000053dd8	and	x8, x8, #0xfffffffffffffffc
0000000000053ddc	ldr	x9, [x8]
0000000000053de0	cmp	x9, x8
0000000000053de4	csel	x0, xzr, x8, eq
0000000000053de8	cbnz	x0, 0x53df4
0000000000053dec	mov	x0, x21
0000000000053df0	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000053df4	add	x8, x0, #0x10
0000000000053df8	stlr	x19, [x8]
0000000000053dfc	mov	x0, x21
0000000000053e00	ldp	x29, x30, [sp, #0x40]
0000000000053e04	ldp	x20, x19, [sp, #0x30]
0000000000053e08	ldp	x22, x21, [sp, #0x20]
0000000000053e0c	add	sp, sp, #0x50
0000000000053e10	ret
-[NSMutableArray(NSArrayToKotlin) releaseAsAssociatedObject:]:
0000000000053e14	cmp	w2, #0x1
0000000000053e18	b.hi	0x53e20
0000000000053e1c	b	0x555a8 ; symbol stub for: _objc_release
0000000000053e20	ret
-[NSEnumerator(NSEnumeratorAsAssociatedObject) releaseAsAssociatedObject:]:
0000000000053e24	cmp	w2, #0x1
0000000000053e28	b.hi	0x53e30
0000000000053e2c	b	0x555a8 ; symbol stub for: _objc_release
0000000000053e30	ret
-[NSDictionary(NSDictionaryToKotlin) toKotlin:]:
0000000000053e34	sub	sp, sp, #0x50
0000000000053e38	stp	x22, x21, [sp, #0x20]
0000000000053e3c	stp	x20, x19, [sp, #0x30]
0000000000053e40	stp	x29, x30, [sp, #0x40]
0000000000053e44	add	x29, sp, #0x40
0000000000053e48	mov	x20, x2
0000000000053e4c	bl	0x555b4 ; symbol stub for: _objc_retain
0000000000053e50	mov	x19, x0
0000000000053e54	bl	_Kotlin_initRuntimeIfNeeded
0000000000053e58	str	xzr, [sp, #0x8]
0000000000053e5c	adrp	x21, 39 ; 0x7a000
0000000000053e60	add	x21, x21, #0x2c0
0000000000053e64	ldr	x22, [x21]
0000000000053e68	mov	x0, x21
0000000000053e6c	blr	x22
0000000000053e70	ldr	x8, [x0]
0000000000053e74	ldr	x9, [x8, #0x110]
0000000000053e78	add	x10, sp, #0x8
0000000000053e7c	str	x10, [x8, #0x110]
0000000000053e80	mov	x8, #0x300000000
0000000000053e84	stp	x9, x8, [sp, #0x10]
0000000000053e88	adr	x8, #0x40401
0000000000053e8c	nop
0000000000053e90	ldarb	w8, [x8]
0000000000053e94	tbz	w8, #0x0, 0x53e9c
0000000000053e98	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000053e9c	mov	x0, x21
0000000000053ea0	blr	x22
0000000000053ea4	mov	x22, x0
0000000000053ea8	ldr	x8, [x0]
0000000000053eac	ldr	x8, [x8, #0x118]
0000000000053eb0	add	x0, x8, #0x70
0000000000053eb4	mov	w1, #0x10
0000000000053eb8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000053ebc	mov	x21, x0
0000000000053ec0	adr	x8, #0xf0d0
0000000000053ec4	nop
0000000000053ec8	str	x8, [x21, #0x10]!
0000000000053ecc	stur	xzr, [x21, #-0x8]
0000000000053ed0	str	x21, [x20]
0000000000053ed4	ldr	x8, [x22]
0000000000053ed8	ldr	x9, [sp, #0x10]
0000000000053edc	str	x9, [x8, #0x110]
0000000000053ee0	ldar	x8, [x21]
0000000000053ee4	and	x8, x8, #0xfffffffffffffffc
0000000000053ee8	ldr	x9, [x8]
0000000000053eec	cmp	x9, x8
0000000000053ef0	csel	x0, xzr, x8, eq
0000000000053ef4	cbnz	x0, 0x53f00
0000000000053ef8	mov	x0, x21
0000000000053efc	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000053f00	add	x8, x0, #0x10
0000000000053f04	stlr	x19, [x8]
0000000000053f08	mov	x0, x21
0000000000053f0c	ldp	x29, x30, [sp, #0x40]
0000000000053f10	ldp	x20, x19, [sp, #0x30]
0000000000053f14	ldp	x22, x21, [sp, #0x20]
0000000000053f18	add	sp, sp, #0x50
0000000000053f1c	ret
-[NSDictionary(NSDictionaryToKotlin) releaseAsAssociatedObject:]:
0000000000053f20	cmp	w2, #0x1
0000000000053f24	b.hi	0x53f2c
0000000000053f28	b	0x555a8 ; symbol stub for: _objc_release
0000000000053f2c	ret
-[NSArray(NSArrayToKotlin) toKotlin:]:
0000000000053f30	sub	sp, sp, #0x50
0000000000053f34	stp	x22, x21, [sp, #0x20]
0000000000053f38	stp	x20, x19, [sp, #0x30]
0000000000053f3c	stp	x29, x30, [sp, #0x40]
0000000000053f40	add	x29, sp, #0x40
0000000000053f44	mov	x20, x2
0000000000053f48	bl	0x555b4 ; symbol stub for: _objc_retain
0000000000053f4c	mov	x19, x0
0000000000053f50	bl	_Kotlin_initRuntimeIfNeeded
0000000000053f54	str	xzr, [sp, #0x8]
0000000000053f58	adrp	x21, 39 ; 0x7a000
0000000000053f5c	add	x21, x21, #0x2c0
0000000000053f60	ldr	x22, [x21]
0000000000053f64	mov	x0, x21
0000000000053f68	blr	x22
0000000000053f6c	ldr	x8, [x0]
0000000000053f70	ldr	x9, [x8, #0x110]
0000000000053f74	add	x10, sp, #0x8
0000000000053f78	str	x10, [x8, #0x110]
0000000000053f7c	mov	x8, #0x300000000
0000000000053f80	stp	x9, x8, [sp, #0x10]
0000000000053f84	adr	x8, #0x40305
0000000000053f88	nop
0000000000053f8c	ldarb	w8, [x8]
0000000000053f90	tbz	w8, #0x0, 0x53f98
0000000000053f94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000053f98	mov	x0, x21
0000000000053f9c	blr	x22
0000000000053fa0	mov	x22, x0
0000000000053fa4	ldr	x8, [x0]
0000000000053fa8	ldr	x8, [x8, #0x118]
0000000000053fac	add	x0, x8, #0x70
0000000000053fb0	mov	w1, #0x10
0000000000053fb4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000053fb8	mov	x21, x0
0000000000053fbc	adr	x8, #0xecd4
0000000000053fc0	nop
0000000000053fc4	str	x8, [x21, #0x10]!
0000000000053fc8	stur	xzr, [x21, #-0x8]
0000000000053fcc	str	x21, [x20]
0000000000053fd0	ldr	x8, [x22]
0000000000053fd4	ldr	x9, [sp, #0x10]
0000000000053fd8	str	x9, [x8, #0x110]
0000000000053fdc	ldar	x8, [x21]
0000000000053fe0	and	x8, x8, #0xfffffffffffffffc
0000000000053fe4	ldr	x9, [x8]
0000000000053fe8	cmp	x9, x8
0000000000053fec	csel	x0, xzr, x8, eq
0000000000053ff0	cbnz	x0, 0x53ffc
0000000000053ff4	mov	x0, x21
0000000000053ff8	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000053ffc	add	x8, x0, #0x10
0000000000054000	stlr	x19, [x8]
0000000000054004	mov	x0, x21
0000000000054008	ldp	x29, x30, [sp, #0x40]
000000000005400c	ldp	x20, x19, [sp, #0x30]
0000000000054010	ldp	x22, x21, [sp, #0x20]
0000000000054014	add	sp, sp, #0x50
0000000000054018	ret
-[NSArray(NSArrayToKotlin) releaseAsAssociatedObject:]:
000000000005401c	cmp	w2, #0x1
0000000000054020	b.hi	0x54028
0000000000054024	b	0x555a8 ; symbol stub for: _objc_release
0000000000054028	ret
__ZL15injectToRuntimev:
000000000005402c	stp	x29, x30, [sp, #-0x10]!
0000000000054030	mov	x29, sp
0000000000054034	nop
0000000000054038	ldr	x8, #0x404f0
000000000005403c	cbnz	x8, 0x540ac
0000000000054040	adr	x8, #0x404e8
0000000000054044	nop
0000000000054048	adr	x9, #0x74
000000000005404c	nop
0000000000054050	str	x9, [x8]
0000000000054054	ldr	x8, [x8, #0x8]
0000000000054058	cbnz	x8, 0x540ac
000000000005405c	adr	x8, #0x404d4
0000000000054060	nop
0000000000054064	adr	x9, #0x98
0000000000054068	nop
000000000005406c	str	x9, [x8]
0000000000054070	ldr	x8, [x8, #0x8]
0000000000054074	cbnz	x8, 0x540ac
0000000000054078	adr	x8, #0x404c0
000000000005407c	nop
0000000000054080	adr	x9, #0x90
0000000000054084	nop
0000000000054088	str	x9, [x8]
000000000005408c	ldr	x8, [x8, #0x8]
0000000000054090	cbnz	x8, 0x540ac
0000000000054094	adrp	x8, 64 ; 0x94000
0000000000054098	adr	x9, #0x22c
000000000005409c	nop
00000000000540a0	str	x9, [x8, #0x540]
00000000000540a4	ldp	x29, x30, [sp], #0x10
00000000000540a8	ret
00000000000540ac	adr	x2, #0xad45 ; literal pool for: "runtime injected twice"
00000000000540b0	nop
00000000000540b4	mov	w0, #0x0
00000000000540b8	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
__ZL39Kotlin_Interop_createKotlinObjectHolderP9ObjHeader:
00000000000540bc	cbz	x0, 0x540f8
00000000000540c0	stp	x20, x19, [sp, #-0x20]!
00000000000540c4	stp	x29, x30, [sp, #0x10]
00000000000540c8	add	x29, sp, #0x10
00000000000540cc	mov	x19, x0
00000000000540d0	nop
00000000000540d4	ldr	x0, #0x22c24 ; Objc class ref: FastaKmmKotlinObjectHolder
00000000000540d8	bl	0x55500 ; symbol stub for: _objc_alloc
00000000000540dc	nop
00000000000540e0	ldr	x1, #0x22870 ; Objc selector ref: initWithRef:
00000000000540e4	mov	x2, x19
00000000000540e8	bl	0x55584 ; Objc message: +[FastaKmmKotlinObjectHolder initWithRef:]
00000000000540ec	ldp	x29, x30, [sp, #0x10]
00000000000540f0	ldp	x20, x19, [sp], #0x20
00000000000540f4	b	0x55524 ; symbol stub for: _objc_autorelease
00000000000540f8	ret
__ZL39Kotlin_Interop_unwrapKotlinObjectHolderP11objc_object:
00000000000540fc	cbz	x0, 0x5410c
0000000000054100	nop
0000000000054104	ldr	x1, #0x2293c ; Objc selector ref: ref
0000000000054108	b	0x55584 ; Objc message: -[x0 ref]
000000000005410c	ret
__ZL34Konan_ObjCInterop_getWeakReferenceP9ObjHeaderPS0_:
0000000000054110	stp	x26, x25, [sp, #-0x50]!
0000000000054114	stp	x24, x23, [sp, #0x10]
0000000000054118	stp	x22, x21, [sp, #0x20]
000000000005411c	stp	x20, x19, [sp, #0x30]
0000000000054120	stp	x29, x30, [sp, #0x40]
0000000000054124	add	x29, sp, #0x40
0000000000054128	mov	x20, x1
000000000005412c	ldar	x8, [x0]
0000000000054130	and	x8, x8, #0xfffffffffffffffc
0000000000054134	ldr	x9, [x8]
0000000000054138	cmp	x8, #0x0
000000000005413c	ccmp	x9, x8, #0x4, ne
0000000000054140	b.ne	0x5414c
0000000000054144	mov	x8, #0x0
0000000000054148	b	0x54154
000000000005414c	add	x8, x8, #0x10
0000000000054150	ldar	x8, [x8]
0000000000054154	add	x8, x8, #0x8
0000000000054158	adrp	x21, 38 ; 0x7a000
000000000005415c	add	x21, x21, #0x2c0
0000000000054160	ldr	x24, [x21]
0000000000054164	mov	x0, x21
0000000000054168	blr	x24
000000000005416c	ldr	x25, [x0]
0000000000054170	add	x19, x25, #0x138
0000000000054174	mov	w9, #0x1
0000000000054178	ldaxr	w23, [x19]
000000000005417c	stlxr	w10, w9, [x19]
0000000000054180	cbnz	w10, 0x54178
0000000000054184	mov	x0, x8
0000000000054188	bl	0x55578 ; symbol stub for: _objc_loadWeakRetained
000000000005418c	mov	x22, x0
0000000000054190	cbz	x25, 0x541c4
0000000000054194	ldaxr	w8, [x19]
0000000000054198	stlxr	w9, w23, [x19]
000000000005419c	cbnz	w9, 0x54194
00000000000541a0	cbnz	w23, 0x541c4
00000000000541a4	cmp	w8, #0x1
00000000000541a8	b.ne	0x541c4
00000000000541ac	adr	x8, #0x400dd
00000000000541b0	nop
00000000000541b4	ldarb	w8, [x8]
00000000000541b8	tbz	w8, #0x0, 0x541c4
00000000000541bc	mov	x0, x19
00000000000541c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000541c4	cbz	x22, 0x541e4
00000000000541c8	nop
00000000000541cc	ldr	x1, #0x4030c
00000000000541d0	mov	x0, x22
00000000000541d4	mov	x2, x20
00000000000541d8	bl	0x55584 ; Objc message: -[x0 ref]
00000000000541dc	mov	x23, x0
00000000000541e0	b	0x541ec
00000000000541e4	mov	x23, #0x0
00000000000541e8	str	xzr, [x20]
00000000000541ec	mov	x0, x21
00000000000541f0	blr	x24
00000000000541f4	ldr	x24, [x0]
00000000000541f8	add	x19, x24, #0x138
00000000000541fc	mov	w8, #0x1
0000000000054200	ldaxr	w21, [x19]
0000000000054204	stlxr	w9, w8, [x19]
0000000000054208	cbnz	w9, 0x54200
000000000005420c	mov	x0, x22
0000000000054210	bl	0x555a8 ; symbol stub for: _objc_release
0000000000054214	cbz	x24, 0x54248
0000000000054218	ldaxr	w8, [x19]
000000000005421c	stlxr	w9, w21, [x19]
0000000000054220	cbnz	w9, 0x54218
0000000000054224	cbnz	w21, 0x54248
0000000000054228	cmp	w8, #0x1
000000000005422c	b.ne	0x54248
0000000000054230	adr	x8, #0x40059
0000000000054234	nop
0000000000054238	ldarb	w8, [x8]
000000000005423c	tbz	w8, #0x0, 0x54248
0000000000054240	mov	x0, x19
0000000000054244	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000054248	mov	x0, x23
000000000005424c	ldp	x29, x30, [sp, #0x40]
0000000000054250	ldp	x20, x19, [sp, #0x30]
0000000000054254	ldp	x22, x21, [sp, #0x20]
0000000000054258	ldp	x24, x23, [sp, #0x10]
000000000005425c	ldp	x26, x25, [sp], #0x50
0000000000054260	ret
0000000000054264	bl	___clang_call_terminate
0000000000054268	mov	x20, x0
000000000005426c	cbz	x24, 0x542bc
0000000000054270	ldaxr	w8, [x19]
0000000000054274	stlxr	w9, w21, [x19]
0000000000054278	cbnz	w9, 0x54270
000000000005427c	cbz	w21, 0x5429c
0000000000054280	b	0x542bc
0000000000054284	mov	x20, x0
0000000000054288	cbz	x25, 0x542bc
000000000005428c	ldaxr	w8, [x19]
0000000000054290	stlxr	w9, w23, [x19]
0000000000054294	cbnz	w9, 0x5428c
0000000000054298	cbnz	w23, 0x542bc
000000000005429c	cmp	w8, #0x1
00000000000542a0	b.ne	0x542bc
00000000000542a4	adr	x8, #0x3ffe5
00000000000542a8	nop
00000000000542ac	ldarb	w8, [x8]
00000000000542b0	tbz	w8, #0x0, 0x542bc
00000000000542b4	mov	x0, x19
00000000000542b8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000542bc	mov	x0, x20
00000000000542c0	bl	0x55194 ; symbol stub for: __Unwind_Resume
__ZL35Konan_ObjCInterop_initWeakReferenceP9ObjHeaderP11objc_object:
00000000000542c4	stp	x22, x21, [sp, #-0x30]!
00000000000542c8	stp	x20, x19, [sp, #0x10]
00000000000542cc	stp	x29, x30, [sp, #0x20]
00000000000542d0	add	x29, sp, #0x20
00000000000542d4	mov	x21, x1
00000000000542d8	mov	x19, x0
00000000000542dc	nop
00000000000542e0	ldr	x0, #0x22a20 ; Objc class ref: FastaKmmKotlinObjCWeakReference
00000000000542e4	nop
00000000000542e8	ldr	x1, #0x226e8 ; Objc selector ref: new
00000000000542ec	bl	0x55584 ; Objc message: +[FastaKmmKotlinObjCWeakReference new]
00000000000542f0	mov	x20, x0
00000000000542f4	add	x0, x0, #0x8
00000000000542f8	mov	x1, x21
00000000000542fc	bl	0x555e4 ; symbol stub for: _objc_storeWeak
0000000000054300	ldar	x8, [x19]
0000000000054304	and	x8, x8, #0xfffffffffffffffc
0000000000054308	ldr	x9, [x8]
000000000005430c	cmp	x9, x8
0000000000054310	csel	x0, xzr, x8, eq
0000000000054314	cbz	x0, 0x54330
0000000000054318	add	x8, x0, #0x10
000000000005431c	stlr	x20, [x8]
0000000000054320	ldp	x29, x30, [sp, #0x20]
0000000000054324	ldp	x20, x19, [sp, #0x10]
0000000000054328	ldp	x22, x21, [sp], #0x30
000000000005432c	ret
0000000000054330	mov	x0, x19
0000000000054334	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000054338	add	x8, x0, #0x10
000000000005433c	stlr	x20, [x8]
0000000000054340	ldp	x29, x30, [sp, #0x20]
0000000000054344	ldp	x20, x19, [sp, #0x10]
0000000000054348	ldp	x22, x21, [sp], #0x30
000000000005434c	ret
_Kotlin_Interop_CreateRetainedNSArrayFromKList:
0000000000054350	mov	x2, x0
0000000000054354	nop
0000000000054358	ldr	x0, #0x22968 ; Objc class ref: FastaKmmKListAsNSArray
000000000005435c	nop
0000000000054360	ldr	x1, #0x22508 ; Objc selector ref: createRetainedWithKList:
0000000000054364	b	0x55584 ; Objc message: +[FastaKmmKListAsNSArray createRetainedWithKList:]
_Kotlin_Interop_CreateRetainedNSMutableArrayFromKList:
0000000000054368	mov	x2, x0
000000000005436c	nop
0000000000054370	ldr	x0, #0x22958 ; Objc class ref: FastaKmmKMutableListAsNSMutableArray
0000000000054374	nop
0000000000054378	ldr	x1, #0x224f0 ; Objc selector ref: createRetainedWithKList:
000000000005437c	b	0x55584 ; Objc message: +[FastaKmmKMutableListAsNSMutableArray createRetainedWithKList:]
_Kotlin_Interop_CreateRetainedNSSetFromKSet:
0000000000054380	mov	x2, x0
0000000000054384	nop
0000000000054388	ldr	x0, #0x22948 ; Objc class ref: FastaKmmKSetAsNSSet
000000000005438c	nop
0000000000054390	ldr	x1, #0x224e8 ; Objc selector ref: createRetainedWithKSet:
0000000000054394	b	0x55584 ; Objc message: +[FastaKmmKSetAsNSSet createRetainedWithKSet:]
_Kotlin_Interop_CreateRetainedKotlinMutableSetFromKSet:
0000000000054398	stp	x20, x19, [sp, #-0x20]!
000000000005439c	stp	x29, x30, [sp, #0x10]
00000000000543a0	add	x29, sp, #0x10
00000000000543a4	mov	x19, x0
00000000000543a8	nop
00000000000543ac	ldr	x0, #0x22934 ; Objc class ref: FastaKmmMutableSet
00000000000543b0	bl	0x55500 ; symbol stub for: _objc_alloc
00000000000543b4	nop
00000000000543b8	ldr	x1, #0x22588 ; Objc selector ref: initWithKSet:
00000000000543bc	mov	x2, x19
00000000000543c0	ldp	x29, x30, [sp, #0x10]
00000000000543c4	ldp	x20, x19, [sp], #0x20
00000000000543c8	b	0x55584 ; Objc message: +[FastaKmmMutableSet initWithKSet:]
_Kotlin_Interop_CreateRetainedNSDictionaryFromKMap:
00000000000543cc	mov	x2, x0
00000000000543d0	nop
00000000000543d4	ldr	x0, #0x22904 ; Objc class ref: FastaKmmKMapAsNSDictionary
00000000000543d8	nop
00000000000543dc	ldr	x1, #0x22494 ; Objc selector ref: createRetainedWithKMap:
00000000000543e0	b	0x55584 ; Objc message: +[FastaKmmKMapAsNSDictionary createRetainedWithKMap:]
_Kotlin_Interop_CreateRetainedKotlinMutableDictionaryFromKMap:
00000000000543e4	stp	x20, x19, [sp, #-0x20]!
00000000000543e8	stp	x29, x30, [sp, #0x10]
00000000000543ec	add	x29, sp, #0x10
00000000000543f0	mov	x19, x0
00000000000543f4	nop
00000000000543f8	ldr	x0, #0x228f0 ; Objc class ref: FastaKmmMutableDictionary
00000000000543fc	bl	0x55500 ; symbol stub for: _objc_alloc
0000000000054400	nop
0000000000054404	ldr	x1, #0x22534 ; Objc selector ref: initWithKMap:
0000000000054408	mov	x2, x19
000000000005440c	ldp	x29, x30, [sp, #0x10]
0000000000054410	ldp	x20, x19, [sp], #0x20
0000000000054414	b	0x55584 ; Objc message: +[FastaKmmMutableDictionary initWithKMap:]
_OUTLINED_FUNCTION_0:
0000000000054418	ldr	x0, [x0]
000000000005441c	b	0x55458 ; symbol stub for: _free
__GLOBAL__sub_I_CallsChecker.cpp:
0000000000054420	stp	x22, x21, [sp, #-0x30]!
0000000000054424	stp	x20, x19, [sp, #0x10]
0000000000054428	stp	x29, x30, [sp, #0x20]
000000000005442c	add	x29, sp, #0x20
0000000000054430	adr	x8, #0x26ef0
0000000000054434	nop
0000000000054438	movi.16b	v0, #0x0
000000000005443c	stp	q0, q0, [x8]
0000000000054440	mov	w9, #0x3f800000
0000000000054444	str	w9, [x8, #0x20]
0000000000054448	add	x19, x8, #0x28
000000000005444c	mov	x0, x19
0000000000054450	mov	w1, #0xec0
0000000000054454	bl	0x553c8 ; symbol stub for: _bzero
0000000000054458	mov	x21, #0x0
000000000005445c	adr	x22, #0x1be6c
0000000000054460	nop
0000000000054464	ldr	x20, [x22, x21]
0000000000054468	mov	x0, x20
000000000005446c	bl	0x5574c ; symbol stub for: _strlen
0000000000054470	stp	x20, x0, [x19], #0x10
0000000000054474	add	x21, x21, #0x8
0000000000054478	cmp	x21, #0x760
000000000005447c	b.ne	0x54464
0000000000054480	adr	x0, #0x26ec8
0000000000054484	nop
0000000000054488	add	x1, x0, #0xec0
000000000005448c	ldp	x29, x30, [sp, #0x20]
0000000000054490	ldp	x20, x19, [sp, #0x10]
0000000000054494	ldp	x22, x21, [sp], #0x30
0000000000054498	b	__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_
__GLOBAL__sub_I_GlobalData.cpp:
000000000005449c	sub	sp, sp, #0x120
00000000000544a0	stp	x28, x27, [sp, #0xc0]
00000000000544a4	stp	x26, x25, [sp, #0xd0]
00000000000544a8	stp	x24, x23, [sp, #0xe0]
00000000000544ac	stp	x22, x21, [sp, #0xf0]
00000000000544b0	stp	x20, x19, [sp, #0x100]
00000000000544b4	stp	x29, x30, [sp, #0x110]
00000000000544b8	add	x29, sp, #0x110
00000000000544bc	adr	x8, #0x400b4
00000000000544c0	nop
00000000000544c4	stp	xzr, xzr, [x8]
00000000000544c8	add	x0, x8, #0x10
00000000000544cc	bl	0x55218 ; symbol stub for: __ZNSt3__115recursive_mutexC1Ev
00000000000544d0	adr	x25, #0x400f0
00000000000544d4	nop
00000000000544d8	str	wzr, [x25]
00000000000544dc	mov	w24, #0xb1bb
00000000000544e0	movk	w24, #0x3cb0, lsl #16
00000000000544e4	mov	w23, #0xaba7
00000000000544e8	movk	w23, #0x32aa, lsl #16
00000000000544ec	add	x8, x25, #0x10
00000000000544f0	stp	xzr, x8, [x25, #0x8]
00000000000544f4	stp	x8, xzr, [x25, #0x18]
00000000000544f8	add	x8, x25, #0x28
00000000000544fc	stp	x8, x8, [x25, #0x28]
0000000000054500	str	xzr, [x25, #0x38]
0000000000054504	strb	wzr, [x25, #0x40]
0000000000054508	add	x8, x25, #0x48
000000000005450c	stp	x8, x8, [x25, #0x48]
0000000000054510	add	x8, x25, #0x60
0000000000054514	stp	xzr, x8, [x25, #0x58]
0000000000054518	stp	x8, xzr, [x25, #0x68]
000000000005451c	strb	wzr, [x25, #0x78]
0000000000054520	add	x8, x25, #0x80
0000000000054524	stp	x8, x8, [x25, #0x80]
0000000000054528	add	x8, x25, #0x98
000000000005452c	stp	xzr, x8, [x25, #0x90]
0000000000054530	stp	x8, xzr, [x25, #0xa0]
0000000000054534	strb	wzr, [x25, #0xb0]
0000000000054538	mov	w19, #0x1
000000000005453c	mov	w0, #0x1
0000000000054540	mov	w1, #0x238
0000000000054544	bl	0x553d4 ; symbol stub for: _calloc
0000000000054548	mov	x20, x0
000000000005454c	str	xzr, [x0, #0x10]
0000000000054550	movi.16b	v0, #0x0
0000000000054554	stur	q0, [x0, #0x18]
0000000000054558	mov	w8, #0x86a0
000000000005455c	movk	w8, #0x1, lsl #16
0000000000054560	mov	x9, x0
0000000000054564	str	w8, [x9, #0x30]!
0000000000054568	add	x8, x0, #0x8
000000000005456c	strb	wzr, [x0, #0x28]
0000000000054570	mov	w10, #0x2800
0000000000054574	str	x10, [x0, #0x38]
0000000000054578	strb	w19, [x0, #0x40]
000000000005457c	nop
0000000000054580	ldr	q0, 0x57b70
0000000000054584	stur	q0, [x0, #0x48]
0000000000054588	mov	x10, #0x3fe0000000000000
000000000005458c	str	x10, [x0, #0x58]
0000000000054590	nop
0000000000054594	ldr	q0, 0x57b80
0000000000054598	str	q0, [x0, #0x60]
000000000005459c	mov	x28, x0
00000000000545a0	str	x8, [x28, #0x98]!
00000000000545a4	str	x9, [x0, #0xa0]
00000000000545a8	add	x27, x0, #0xb0
00000000000545ac	nop
00000000000545b0	ldr	q0, 0x57b90
00000000000545b4	stur	q0, [x0, #0xa8]
00000000000545b8	movi.16b	v0, #0x0
00000000000545bc	stur	q0, [x0, #0xb8]
00000000000545c0	stur	q0, [x0, #0xc8]
00000000000545c4	stur	q0, [x0, #0xd8]
00000000000545c8	stur	q0, [x0, #0xe8]
00000000000545cc	stp	x27, x24, [x0, #0xf8]
00000000000545d0	add	x8, x0, #0x108
00000000000545d4	stp	q0, q0, [x8]
00000000000545d8	str	q0, [x8, #0x20]
00000000000545dc	stp	x27, x24, [x0, #0x138]
00000000000545e0	add	x8, x0, #0x148
00000000000545e4	stp	q0, q0, [x8]
00000000000545e8	str	q0, [x8, #0x20]
00000000000545ec	stp	x27, x24, [x0, #0x178]
00000000000545f0	add	x8, x0, #0x188
00000000000545f4	stp	q0, q0, [x8, #0x10]
00000000000545f8	str	q0, [x8]
00000000000545fc	stp	x27, x24, [x0, #0x1b8]
0000000000054600	add	x8, x0, #0x1c8
0000000000054604	stp	q0, q0, [x8]
0000000000054608	stur	q0, [x8, #0x19]
000000000005460c	mov	w0, #0x1
0000000000054610	mov	w1, #0x180
0000000000054614	bl	0x553d4 ; symbol stub for: _calloc
0000000000054618	str	xzr, [x0, #0x10]
000000000005461c	movi.16b	v0, #0x0
0000000000054620	stur	q0, [x0, #0x18]
0000000000054624	str	x24, [x0, #0x28]
0000000000054628	stp	q0, q0, [x0, #0x30]
000000000005462c	stp	xzr, x23, [x0, #0x50]
0000000000054630	stp	q0, q0, [x0, #0x60]
0000000000054634	str	q0, [x0, #0x80]
0000000000054638	str	xzr, [x0, #0x90]
000000000005463c	adr	x8, #0x1c4d4
0000000000054640	nop
0000000000054644	mov	x9, x0
0000000000054648	str	x8, [x9, #0x98]!
000000000005464c	str	x9, [x0, #0xb0]
0000000000054650	str	x28, [x0, #0xa0]
0000000000054654	strb	w19, [x0, #0xc1]
0000000000054658	str	x23, [x0, #0xc8]
000000000005465c	stp	q0, q0, [x0, #0xe0]
0000000000054660	str	q0, [x0, #0xd0]
0000000000054664	stp	xzr, x24, [x0, #0x100]
0000000000054668	add	x8, x0, #0x110
000000000005466c	stp	q0, q0, [x0, #0x110]
0000000000054670	stur	q0, [x8, #0x19]
0000000000054674	str	x23, [x0, #0x140]
0000000000054678	add	x8, x0, #0x148
000000000005467c	stp	q0, q0, [x8]
0000000000054680	str	q0, [x8, #0x20]
0000000000054684	str	xzr, [x8, #0x30]
0000000000054688	str	x0, [x20, #0x200]
000000000005468c	add	x8, x20, #0x208
0000000000054690	str	q0, [x8]
0000000000054694	movi.16b	v0, #0x0
0000000000054698	ldr	x8, [x20, #0x208]
000000000005469c	and	x8, x8, #0x1
00000000000546a0	str	x8, [x20, #0x208]
00000000000546a4	add	x8, x20, #0x218
00000000000546a8	str	xzr, [x8, #0x10]
00000000000546ac	str	q0, [x8]
00000000000546b0	ldr	x19, [x20, #0xa0]
00000000000546b4	adr	x8, #0x1c4b4
00000000000546b8	nop
00000000000546bc	stp	x8, x28, [sp, #0x10]
00000000000546c0	add	x8, sp, #0x10
00000000000546c4	str	x8, [sp, #0x28]
00000000000546c8	add	x21, x19, #0x48
00000000000546cc	ldr	x0, [x19, #0x60]
00000000000546d0	str	xzr, [x19, #0x60]
00000000000546d4	cmp	x21, x0
00000000000546d8	b.eq	0x546ec
00000000000546dc	cbz	x0, 0x546f8
00000000000546e0	ldr	x8, [x0]
00000000000546e4	ldr	x8, [x8, #0x28]
00000000000546e8	b	0x546f4
00000000000546ec	ldr	x8, [x0]
00000000000546f0	ldr	x8, [x8, #0x20]
00000000000546f4	blr	x8
00000000000546f8	ldr	x0, [sp, #0x28]
00000000000546fc	cbz	x0, 0x54718
0000000000054700	add	x8, sp, #0x10
0000000000054704	cmp	x8, x0
0000000000054708	b.eq	0x54750
000000000005470c	str	x0, [x19, #0x60]
0000000000054710	str	xzr, [sp, #0x28]
0000000000054714	b	0x5476c
0000000000054718	str	xzr, [x19, #0x60]
000000000005471c	mov	x22, #0x0
0000000000054720	str	xzr, [sp, #0x48]
0000000000054724	mov	w0, #0x1
0000000000054728	mov	w1, #0xf8
000000000005472c	bl	0x553d4 ; symbol stub for: _calloc
0000000000054730	mov	x21, x0
0000000000054734	cbz	x22, 0x547a0
0000000000054738	add	x8, sp, #0x30
000000000005473c	cmp	x8, x22
0000000000054740	b.eq	0x547b0
0000000000054744	add	x8, x8, #0x18
0000000000054748	str	x22, [sp, #0x68]
000000000005474c	b	0x547a8
0000000000054750	str	x21, [x19, #0x60]
0000000000054754	ldr	x8, [x0]
0000000000054758	ldr	x8, [x8, #0x18]
000000000005475c	mov	x1, x21
0000000000054760	blr	x8
0000000000054764	ldr	x0, [x19, #0x60]
0000000000054768	cbz	x0, 0x5471c
000000000005476c	add	x8, sp, #0x30
0000000000054770	cmp	x21, x0
0000000000054774	b.eq	0x54934
0000000000054778	ldr	x8, [x0]
000000000005477c	ldr	x8, [x8, #0x10]
0000000000054780	blr	x8
0000000000054784	mov	x22, x0
0000000000054788	str	x0, [sp, #0x48]
000000000005478c	mov	w0, #0x1
0000000000054790	mov	w1, #0xf8
0000000000054794	bl	0x553d4 ; symbol stub for: _calloc
0000000000054798	mov	x21, x0
000000000005479c	cbnz	x22, 0x54738
00000000000547a0	add	x8, sp, #0x50
00000000000547a4	add	x8, x8, #0x18
00000000000547a8	str	xzr, [x8]
00000000000547ac	b	0x547cc
00000000000547b0	add	x8, sp, #0x50
00000000000547b4	str	x8, [sp, #0x68]
00000000000547b8	ldr	x8, [x22]
00000000000547bc	ldr	x8, [x8, #0x18]
00000000000547c0	add	x1, sp, #0x50
00000000000547c4	mov	x0, x22
00000000000547c8	blr	x8
00000000000547cc	adr	x8, #0x1baac
00000000000547d0	nop
00000000000547d4	stp	x8, x19, [x21]
00000000000547d8	stp	x25, x19, [x21, #0x10]
00000000000547dc	stp	xzr, xzr, [x21, #0x20]
00000000000547e0	str	x19, [x21, #0x30]
00000000000547e4	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
00000000000547e8	str	x0, [x21, #0x38]
00000000000547ec	ldr	x0, [sp, #0x68]
00000000000547f0	cbz	x0, 0x5480c
00000000000547f4	add	x8, sp, #0x50
00000000000547f8	cmp	x8, x0
00000000000547fc	b.eq	0x54818
0000000000054800	add	x8, x8, #0x18
0000000000054804	str	x0, [x21, #0x58]
0000000000054808	b	0x54810
000000000005480c	add	x8, x21, #0x58
0000000000054810	str	xzr, [x8]
0000000000054814	b	0x5482c
0000000000054818	add	x1, x21, #0x40
000000000005481c	str	x1, [x21, #0x58]
0000000000054820	ldr	x8, [x0]
0000000000054824	ldr	x8, [x8, #0x18]
0000000000054828	blr	x8
000000000005482c	ldr	x8, [x21, #0x8]
0000000000054830	add	x8, x8, #0x18
0000000000054834	ldar	x8, [x8]
0000000000054838	mov	x22, x21
000000000005483c	str	x23, [x22, #0x60]!
0000000000054840	movi.16b	v0, #0x0
0000000000054844	stur	q0, [x22, #0x8]
0000000000054848	stur	q0, [x22, #0x18]
000000000005484c	stur	q0, [x22, #0x28]
0000000000054850	str	xzr, [x22, #0x38]
0000000000054854	mov	x23, x22
0000000000054858	str	x24, [x23, #0x40]!
000000000005485c	stur	q0, [x22, #0x48]
0000000000054860	stur	q0, [x22, #0x58]
0000000000054864	str	xzr, [x22, #0x68]
0000000000054868	mov	w9, #0x1
000000000005486c	strb	w9, [x22, #0x70]
0000000000054870	mov	w9, #0x3e8
0000000000054874	mul	x10, x8, x9
0000000000054878	smulh	x9, x8, x9
000000000005487c	cmp	x9, x10, asr #63
0000000000054880	asr	x8, x8, #63
0000000000054884	eor	x8, x8, #0x7fffffffffffffff
0000000000054888	csel	x8, x8, x10, ne
000000000005488c	str	x8, [x22, #0x78]
0000000000054890	bl	0x55290 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000054894	ldr	x8, [x22, #0x78]
0000000000054898	adds	x8, x0, x8
000000000005489c	asr	x9, x8, #63
00000000000548a0	eor	x9, x9, #0x8000000000000000
00000000000548a4	csel	x8, x9, x8, vs
00000000000548a8	str	x8, [x22, #0x80]
00000000000548ac	strb	wzr, [x22, #0x88]
00000000000548b0	movi.16b	v0, #0x0
00000000000548b4	stp	q0, q0, [sp, #0x70]
00000000000548b8	adr	x1, #0x873e ; literal pool for: "GC Timer thread"
00000000000548bc	nop
00000000000548c0	add	x0, sp, #0x70
00000000000548c4	mov	w2, #0xf
00000000000548c8	bl	__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_
00000000000548cc	mov	w0, #0x8
00000000000548d0	bl	0x55314 ; symbol stub for: __Znwm
00000000000548d4	mov	x25, x0
00000000000548d8	bl	0x551e8 ; symbol stub for: __ZNSt3__115__thread_structC1Ev
00000000000548dc	mov	w0, #0x50
00000000000548e0	bl	0x55314 ; symbol stub for: __Znwm
00000000000548e4	mov	x24, x0
00000000000548e8	sturb	wzr, [x29, #-0x80]
00000000000548ec	sturb	wzr, [x29, #-0x68]
00000000000548f0	ldrb	w8, [sp, #0x88]
00000000000548f4	cbz	w8, 0x54914
00000000000548f8	ldrsb	w8, [sp, #0x87]
00000000000548fc	tbnz	w8, #0x1f, 0x5491c
0000000000054900	ldr	q0, [sp, #0x70]
0000000000054904	stur	q0, [x29, #-0x80]
0000000000054908	ldr	x8, [sp, #0x80]
000000000005490c	stur	x8, [x29, #-0x70]
0000000000054910	b	0x5499c
0000000000054914	mov	w8, #0x1
0000000000054918	b	0x549a8
000000000005491c	ldp	x1, x26, [sp, #0x70]
0000000000054920	cmp	x26, #0x16
0000000000054924	b.hi	0x54964
0000000000054928	sub	x0, x29, #0x80
000000000005492c	sturb	w26, [x29, #-0x69]
0000000000054930	b	0x54994
0000000000054934	str	x8, [sp, #0x48]
0000000000054938	ldr	x8, [x0]
000000000005493c	ldr	x8, [x8, #0x18]
0000000000054940	add	x1, sp, #0x30
0000000000054944	blr	x8
0000000000054948	ldr	x22, [sp, #0x48]
000000000005494c	mov	w0, #0x1
0000000000054950	mov	w1, #0xf8
0000000000054954	bl	0x553d4 ; symbol stub for: _calloc
0000000000054958	mov	x21, x0
000000000005495c	cbnz	x22, 0x54738
0000000000054960	b	0x547a0
0000000000054964	stp	x1, x27, [sp]
0000000000054968	cmn	x26, #0x10
000000000005496c	b.hs	0x54c80
0000000000054970	add	x8, x26, #0x10
0000000000054974	and	x27, x8, #0xfffffffffffffff0
0000000000054978	mov	x0, x27
000000000005497c	mov	w1, #0x1
0000000000054980	bl	0x553d4 ; symbol stub for: _calloc
0000000000054984	orr	x8, x27, #0x8000000000000000
0000000000054988	stp	x26, x8, [x29, #-0x78]
000000000005498c	stur	x0, [x29, #-0x80]
0000000000054990	ldp	x1, x27, [sp]
0000000000054994	add	x2, x26, #0x1
0000000000054998	bl	0x554ac ; symbol stub for: _memcpy
000000000005499c	mov	w8, #0x0
00000000000549a0	mov	w9, #0x1
00000000000549a4	sturb	w9, [x29, #-0x68]
00000000000549a8	add	x0, x21, #0xf0
00000000000549ac	adr	x9, #-0x26c68
00000000000549b0	nop
00000000000549b4	stp	x25, x9, [x24]
00000000000549b8	mov	x25, x24
00000000000549bc	strb	wzr, [x25, #0x10]!
00000000000549c0	strb	wzr, [x24, #0x28]
00000000000549c4	tbnz	w8, #0x0, 0x549e8
00000000000549c8	ldur	q0, [x29, #-0x80]
00000000000549cc	str	q0, [x25]
00000000000549d0	ldur	x8, [x29, #-0x70]
00000000000549d4	str	x8, [x25, #0x10]
00000000000549d8	stp	xzr, xzr, [x29, #-0x78]
00000000000549dc	stur	xzr, [x29, #-0x80]
00000000000549e0	mov	w8, #0x1
00000000000549e4	strb	w8, [x24, #0x28]
00000000000549e8	adr	x8, #-0x26f74
00000000000549ec	nop
00000000000549f0	movi.16b	v0, #0x0
00000000000549f4	mov.d	v0[0], x8
00000000000549f8	str	q0, [x24, #0x30]
00000000000549fc	stp	x22, x21, [x24, #0x40]
0000000000054a00	adr	x2, #-0x26c58
0000000000054a04	nop
0000000000054a08	mov	x1, #0x0
0000000000054a0c	mov	x3, x24
0000000000054a10	bl	0x55650 ; symbol stub for: _pthread_create
0000000000054a14	cbnz	w0, 0x54c5c
0000000000054a18	ldrb	w8, [sp, #0x88]
0000000000054a1c	cbz	w8, 0x54a30
0000000000054a20	ldrsb	w8, [sp, #0x87]
0000000000054a24	tbz	w8, #0x1f, 0x54a30
0000000000054a28	ldr	x0, [sp, #0x70]
0000000000054a2c	bl	0x55458 ; symbol stub for: _free
0000000000054a30	ldr	x0, [sp, #0x68]
0000000000054a34	add	x8, sp, #0x50
0000000000054a38	cmp	x8, x0
0000000000054a3c	b.eq	0x54a50
0000000000054a40	cbz	x0, 0x54a5c
0000000000054a44	ldr	x8, [x0]
0000000000054a48	ldr	x8, [x8, #0x28]
0000000000054a4c	b	0x54a58
0000000000054a50	ldr	x8, [x0]
0000000000054a54	ldr	x8, [x8, #0x20]
0000000000054a58	blr	x8
0000000000054a5c	ldr	x22, [x19, #0x40]
0000000000054a60	str	x21, [x19, #0x40]
0000000000054a64	cbz	x22, 0x54a80
0000000000054a68	ldr	x8, [x22]
0000000000054a6c	ldr	x8, [x8]
0000000000054a70	mov	x0, x22
0000000000054a74	blr	x8
0000000000054a78	mov	x0, x22
0000000000054a7c	bl	0x55458 ; symbol stub for: _free
0000000000054a80	ldr	x0, [sp, #0x48]
0000000000054a84	add	x8, sp, #0x30
0000000000054a88	cmp	x8, x0
0000000000054a8c	b.eq	0x54aa0
0000000000054a90	cbz	x0, 0x54aac
0000000000054a94	ldr	x8, [x0]
0000000000054a98	ldr	x8, [x8, #0x28]
0000000000054a9c	b	0x54aa8
0000000000054aa0	ldr	x8, [x0]
0000000000054aa4	ldr	x8, [x8, #0x20]
0000000000054aa8	blr	x8
0000000000054aac	ldr	x0, [sp, #0x28]
0000000000054ab0	add	x8, sp, #0x10
0000000000054ab4	cmp	x8, x0
0000000000054ab8	b.eq	0x54acc
0000000000054abc	cbz	x0, 0x54ad8
0000000000054ac0	ldr	x8, [x0]
0000000000054ac4	ldr	x8, [x8, #0x28]
0000000000054ac8	b	0x54ad4
0000000000054acc	ldr	x8, [x0]
0000000000054ad0	ldr	x8, [x8, #0x20]
0000000000054ad4	blr	x8
0000000000054ad8	movi.16b	v0, #0x0
0000000000054adc	stp	q0, q0, [sp, #0x70]
0000000000054ae0	adr	x1, #0x959d ; literal pool for: "GC thread"
0000000000054ae4	nop
0000000000054ae8	add	x0, sp, #0x70
0000000000054aec	mov	w2, #0x9
0000000000054af0	bl	__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_
0000000000054af4	add	x21, x20, #0x1f8
0000000000054af8	mov	w0, #0x8
0000000000054afc	bl	0x55314 ; symbol stub for: __Znwm
0000000000054b00	mov	x24, x0
0000000000054b04	bl	0x551e8 ; symbol stub for: __ZNSt3__115__thread_structC1Ev
0000000000054b08	mov	w0, #0x38
0000000000054b0c	bl	0x55314 ; symbol stub for: __Znwm
0000000000054b10	mov	x23, x0
0000000000054b14	sturb	wzr, [x29, #-0x80]
0000000000054b18	sturb	wzr, [x29, #-0x68]
0000000000054b1c	ldrb	w8, [sp, #0x88]
0000000000054b20	cbz	w8, 0x54b40
0000000000054b24	ldrsb	w8, [sp, #0x87]
0000000000054b28	tbnz	w8, #0x1f, 0x54b48
0000000000054b2c	ldr	q0, [sp, #0x70]
0000000000054b30	stur	q0, [x29, #-0x80]
0000000000054b34	ldr	x8, [sp, #0x80]
0000000000054b38	stur	x8, [x29, #-0x70]
0000000000054b3c	b	0x54b94
0000000000054b40	mov	w8, #0x1
0000000000054b44	b	0x54ba0
0000000000054b48	ldp	x22, x19, [sp, #0x70]
0000000000054b4c	cmp	x19, #0x16
0000000000054b50	b.hi	0x54b60
0000000000054b54	sub	x0, x29, #0x80
0000000000054b58	sturb	w19, [x29, #-0x69]
0000000000054b5c	b	0x54b88
0000000000054b60	cmn	x19, #0x10
0000000000054b64	b.hs	0x54c8c
0000000000054b68	add	x8, x19, #0x10
0000000000054b6c	and	x25, x8, #0xfffffffffffffff0
0000000000054b70	mov	x0, x25
0000000000054b74	mov	w1, #0x1
0000000000054b78	bl	0x553d4 ; symbol stub for: _calloc
0000000000054b7c	orr	x8, x25, #0x8000000000000000
0000000000054b80	stp	x19, x8, [x29, #-0x78]
0000000000054b84	stur	x0, [x29, #-0x80]
0000000000054b88	add	x2, x19, #0x1
0000000000054b8c	mov	x1, x22
0000000000054b90	bl	0x554ac ; symbol stub for: _memcpy
0000000000054b94	mov	w8, #0x0
0000000000054b98	mov	w9, #0x1
0000000000054b9c	sturb	w9, [x29, #-0x68]
0000000000054ba0	adr	x9, #-0x235c0
0000000000054ba4	nop
0000000000054ba8	stp	x24, x9, [x23]
0000000000054bac	mov	x19, x23
0000000000054bb0	strb	wzr, [x19, #0x10]!
0000000000054bb4	strb	wzr, [x23, #0x28]
0000000000054bb8	tbnz	w8, #0x0, 0x54bdc
0000000000054bbc	ldur	q0, [x29, #-0x80]
0000000000054bc0	str	q0, [x19]
0000000000054bc4	ldur	x8, [x29, #-0x70]
0000000000054bc8	str	x8, [x19, #0x10]
0000000000054bcc	stp	xzr, xzr, [x29, #-0x78]
0000000000054bd0	stur	xzr, [x29, #-0x80]
0000000000054bd4	mov	w8, #0x1
0000000000054bd8	strb	w8, [x23, #0x28]
0000000000054bdc	str	x28, [x23, #0x30]
0000000000054be0	adr	x2, #-0x22ab0
0000000000054be4	nop
0000000000054be8	add	x0, sp, #0x50
0000000000054bec	mov	x1, #0x0
0000000000054bf0	mov	x3, x23
0000000000054bf4	bl	0x55650 ; symbol stub for: _pthread_create
0000000000054bf8	cbnz	w0, 0x54c6c
0000000000054bfc	ldr	x8, [x21]
0000000000054c00	cbnz	x8, 0x54c7c
0000000000054c04	ldr	x8, [sp, #0x50]
0000000000054c08	str	x8, [x21]
0000000000054c0c	str	xzr, [sp, #0x50]
0000000000054c10	add	x0, sp, #0x50
0000000000054c14	bl	0x552b4 ; symbol stub for: __ZNSt3__16threadD1Ev
0000000000054c18	ldrb	w8, [sp, #0x88]
0000000000054c1c	cbz	w8, 0x54c30
0000000000054c20	ldrsb	w8, [sp, #0x87]
0000000000054c24	tbz	w8, #0x1f, 0x54c30
0000000000054c28	ldr	x0, [sp, #0x70]
0000000000054c2c	bl	0x55458 ; symbol stub for: _free
0000000000054c30	str	wzr, [x20, #0x230]
0000000000054c34	adrp	x8, 64 ; 0x94000
0000000000054c38	str	x20, [x8, #0x678]
0000000000054c3c	ldp	x29, x30, [sp, #0x110]
0000000000054c40	ldp	x20, x19, [sp, #0x100]
0000000000054c44	ldp	x22, x21, [sp, #0xf0]
0000000000054c48	ldp	x24, x23, [sp, #0xe0]
0000000000054c4c	ldp	x26, x25, [sp, #0xd0]
0000000000054c50	ldp	x28, x27, [sp, #0xc0]
0000000000054c54	add	sp, sp, #0x120
0000000000054c58	ret
0000000000054c5c	adr	x1, #0x9442 ; literal pool for: "thread constructor failed"
0000000000054c60	nop
0000000000054c64	bl	0x55260 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000054c68	b	0x54c94
0000000000054c6c	adr	x1, #0x9432 ; literal pool for: "thread constructor failed"
0000000000054c70	nop
0000000000054c74	bl	0x55260 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000054c78	b	0x54c94
0000000000054c7c	bl	0x552fc ; symbol stub for: __ZSt9terminatev
0000000000054c80	sub	x0, x29, #0x80
0000000000054c84	bl	0x551ac ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
0000000000054c88	b	0x54c94
0000000000054c8c	sub	x0, x29, #0x80
0000000000054c90	bl	0x551ac ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
0000000000054c94	brk	#0x1
0000000000054c98	mov	x19, x0
0000000000054c9c	ldurb	w8, [x29, #-0x68]
0000000000054ca0	cbz	w8, 0x54cc8
0000000000054ca4	sub	x0, x29, #0x80
0000000000054ca8	bl	__ZN6kotlin2gc22ConcurrentMarkAndSweepC2ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerE.cold.1
0000000000054cac	mov	x0, x19
0000000000054cb0	bl	___clang_call_terminate
0000000000054cb4	mov	x19, x0
0000000000054cb8	ldurb	w8, [x29, #-0x68]
0000000000054cbc	cbz	w8, 0x54cc8
0000000000054cc0	sub	x0, x29, #0x80
0000000000054cc4	bl	__ZNSt3__16threadC2IPFvN6kotlin12ScopedThread10attributesEOMNS2_13RepeatedTimerINS2_12steady_clockEEEDoFvOZNS2_2gc8internal24GCSchedulerDataWithTimerIS6_EC1ERNS8_17GCSchedulerConfigENS_8functionIFvvEEEEUlvE_EOPS7_SI_EJRKS4_SK_SM_SH_EvEEOT_DpOT0_.cold.1
0000000000054cc8	mov	x0, x19
0000000000054ccc	bl	___clang_call_terminate
0000000000054cd0	bl	___clang_call_terminate
0000000000054cd4	bl	___clang_call_terminate
0000000000054cd8	bl	___clang_call_terminate
0000000000054cdc	bl	___clang_call_terminate
0000000000054ce0	mov	x25, x27
0000000000054ce4	mov	x22, x0
0000000000054ce8	mov	x0, x24
0000000000054cec	bl	0x551f4 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000054cf0	b	0x54d7c
0000000000054cf4	mov	x25, x27
0000000000054cf8	mov	x22, x0
0000000000054cfc	b	0x54d7c
0000000000054d00	mov	x25, x27
0000000000054d04	mov	x22, x0
0000000000054d08	b	0x54d84
0000000000054d0c	bl	___clang_call_terminate
0000000000054d10	mov	x19, x0
0000000000054d14	mov	x0, x25
0000000000054d18	bl	0x551f4 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000054d1c	b	0x54f3c
0000000000054d20	mov	x19, x0
0000000000054d24	b	0x54f3c
0000000000054d28	mov	x19, x0
0000000000054d2c	b	0x54f44
0000000000054d30	bl	___clang_call_terminate
0000000000054d34	mov	x19, x0
0000000000054d38	bl	__ZNSt3__110unique_ptrIN6kotlin14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS1_11std_support9allocatorIS4_EEE4NodeENS6_17allocator_deleterISA_NS7_ISA_EEEEED1Ev
0000000000054d3c	mov	x0, x19
0000000000054d40	bl	___clang_call_terminate
0000000000054d44	mov	x25, x27
0000000000054d48	mov	x22, x0
0000000000054d4c	ldrb	w8, [x23, #0x28]
0000000000054d50	cbz	w8, 0x54d64
0000000000054d54	ldrsb	w8, [x23, #0x27]
0000000000054d58	tbz	w8, #0x1f, 0x54d64
0000000000054d5c	ldr	x0, [x19]
0000000000054d60	bl	0x55458 ; symbol stub for: _free
0000000000054d64	ldr	x0, [x23]
0000000000054d68	str	xzr, [x23]
0000000000054d6c	cbz	x0, 0x54d78
0000000000054d70	bl	0x551f4 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000054d74	bl	0x55308 ; symbol stub for: __ZdlPv
0000000000054d78	mov	x24, x23
0000000000054d7c	mov	x0, x24
0000000000054d80	bl	0x55308 ; symbol stub for: __ZdlPv
0000000000054d84	ldrb	w8, [sp, #0x88]
0000000000054d88	cbz	w8, 0x54d9c
0000000000054d8c	ldrsb	w8, [sp, #0x87]
0000000000054d90	tbz	w8, #0x1f, 0x54d9c
0000000000054d94	ldr	x0, [sp, #0x70]
0000000000054d98	bl	0x55458 ; symbol stub for: _free
0000000000054d9c	ldr	x23, [x20, #0x200]
0000000000054da0	str	xzr, [x20, #0x200]
0000000000054da4	cbnz	x23, 0x54dc0
0000000000054da8	mov	x0, x21
0000000000054dac	bl	__ZN6kotlin12ScopedThreadD1Ev
0000000000054db0	mov	x0, x25
0000000000054db4	bl	__ZN13GCStateHolderD1Ev
0000000000054db8	mov	x0, x22
0000000000054dbc	bl	___clang_call_terminate
0000000000054dc0	add	x20, x23, #0x58
0000000000054dc4	mov	x0, x20
0000000000054dc8	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000054dcc	ldr	x8, [x23]
0000000000054dd0	cbnz	x8, 0x54e10
0000000000054dd4	mov	x0, x20
0000000000054dd8	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000054ddc	add	x0, x23, #0x140
0000000000054de0	bl	0x55284 ; symbol stub for: __ZNSt3__15mutexD1Ev
0000000000054de4	add	x0, x23, #0x108
0000000000054de8	bl	0x55248 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
0000000000054dec	add	x0, x23, #0xc8
0000000000054df0	bl	0x55284 ; symbol stub for: __ZNSt3__15mutexD1Ev
0000000000054df4	add	x8, x23, #0x98
0000000000054df8	ldr	x0, [x23, #0xb0]
0000000000054dfc	cmp	x8, x0
0000000000054e00	b.ne	0x54e54
0000000000054e04	ldr	x8, [x0]
0000000000054e08	ldr	x8, [x8, #0x20]
0000000000054e0c	b	0x54e60
0000000000054e10	mov	w8, #0x1
0000000000054e14	strb	w8, [x23, #0xc0]
0000000000054e18	add	x24, x23, #0x28
0000000000054e1c	mov	x0, x24
0000000000054e20	bl	0x55224 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000054e24	mov	x0, x20
0000000000054e28	bl	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000054e2c	mov	x0, x23
0000000000054e30	bl	0x552a8 ; symbol stub for: __ZNSt3__16thread4joinEv
0000000000054e34	strb	wzr, [x23, #0xc0]
0000000000054e38	mov	x0, x20
0000000000054e3c	bl	0x5526c ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000054e40	mov	w8, #0x1
0000000000054e44	strb	w8, [x23, #0xc1]
0000000000054e48	mov	x0, x24
0000000000054e4c	bl	0x55224 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000054e50	b	0x54dd4
0000000000054e54	cbz	x0, 0x54e64
0000000000054e58	ldr	x8, [x0]
0000000000054e5c	ldr	x8, [x8, #0x28]
0000000000054e60	blr	x8
0000000000054e64	mov	x0, x20
0000000000054e68	bl	0x55284 ; symbol stub for: __ZNSt3__15mutexD1Ev
0000000000054e6c	add	x0, x23, #0x28
0000000000054e70	bl	0x55248 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
0000000000054e74	ldr	x0, [x23, #0x10]
0000000000054e78	str	xzr, [x23, #0x10]
0000000000054e7c	cbnz	x0, 0x54e88
0000000000054e80	str	xzr, [x23, #0x10]
0000000000054e84	b	0x54eb4
0000000000054e88	ldr	x19, [x0]
0000000000054e8c	str	xzr, [x0]
0000000000054e90	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000054e94	bl	_mi_free
0000000000054e98	mov	x0, x19
0000000000054e9c	cbnz	x19, 0x54e88
0000000000054ea0	ldr	x0, [x23, #0x10]
0000000000054ea4	str	xzr, [x23, #0x10]
0000000000054ea8	cbz	x0, 0x54eb4
0000000000054eac	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000054eb0	bl	_mi_free
0000000000054eb4	ldr	x8, [x23]
0000000000054eb8	cbz	x8, 0x54ec4
0000000000054ebc	mov	x0, x23
0000000000054ec0	bl	0x552a8 ; symbol stub for: __ZNSt3__16thread4joinEv
0000000000054ec4	mov	x0, x23
0000000000054ec8	bl	0x552b4 ; symbol stub for: __ZNSt3__16threadD1Ev
0000000000054ecc	bl	0x55458 ; symbol stub for: _free
0000000000054ed0	mov	x0, x21
0000000000054ed4	bl	__ZN6kotlin12ScopedThreadD1Ev
0000000000054ed8	mov	x0, x25
0000000000054edc	bl	__ZN13GCStateHolderD1Ev
0000000000054ee0	mov	x0, x22
0000000000054ee4	bl	___clang_call_terminate
0000000000054ee8	bl	___clang_call_terminate
0000000000054eec	mov	x19, x0
0000000000054ef0	mov	x0, x23
0000000000054ef4	bl	0x552b4 ; symbol stub for: __ZNSt3__16threadD1Ev
0000000000054ef8	mov	x0, x19
0000000000054efc	bl	___clang_call_terminate
0000000000054f00	bl	___clang_call_terminate
0000000000054f04	bl	___clang_call_terminate
0000000000054f08	mov	x19, x0
0000000000054f0c	ldrb	w8, [x24, #0x28]
0000000000054f10	cbz	w8, 0x54f24
0000000000054f14	ldrsb	w8, [x24, #0x27]
0000000000054f18	tbz	w8, #0x1f, 0x54f24
0000000000054f1c	ldr	x0, [x25]
0000000000054f20	bl	0x55458 ; symbol stub for: _free
0000000000054f24	ldr	x0, [x24]
0000000000054f28	str	xzr, [x24]
0000000000054f2c	cbz	x0, 0x54f38
0000000000054f30	bl	0x551f4 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000054f34	bl	0x55308 ; symbol stub for: __ZdlPv
0000000000054f38	mov	x25, x24
0000000000054f3c	mov	x0, x25
0000000000054f40	bl	0x55308 ; symbol stub for: __ZdlPv
0000000000054f44	ldrb	w8, [sp, #0x88]
0000000000054f48	cbz	w8, 0x54f54
0000000000054f4c	add	x0, sp, #0x70
0000000000054f50	bl	__ZN6kotlin13RepeatedTimerINS_12steady_clockEEC2IxNSt3__15ratioILl1ELl1000000EEEZNS_2gc8internal24GCSchedulerDataWithTimerIS1_EC1ERNS7_17GCSchedulerConfigENS4_8functionIFvvEEEEUlvE_EENS4_17basic_string_viewIcNS4_11char_traitsIcEEEENS4_6chrono8durationIT_T0_EEOT1_.cold.1
0000000000054f54	mov	x0, x23
0000000000054f58	bl	0x55248 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
0000000000054f5c	mov	x0, x22
0000000000054f60	bl	0x55284 ; symbol stub for: __ZNSt3__15mutexD1Ev
0000000000054f64	mov	x0, x19
0000000000054f68	bl	___clang_call_terminate
__ZN6kotlin13RepeatedTimerINS_12steady_clockEEC2IxNSt3__15ratioILl1ELl1000000EEEZNS_2gc8internal24GCSchedulerDataWithTimerIS1_EC1ERNS7_17GCSchedulerConfigENS4_8functionIFvvEEEEUlvE_EENS4_17basic_string_viewIcNS4_11char_traitsIcEEEENS4_6chrono8durationIT_T0_EEOT1_.cold.1:
0000000000054f6c	ldrsb	w8, [x0, #0x17]
0000000000054f70	tbnz	w8, #0x1f, 0x54f78
0000000000054f74	ret
0000000000054f78	b	_OUTLINED_FUNCTION_0
__ZNSt3__16threadC2IPFvN6kotlin12ScopedThread10attributesEOMNS2_13RepeatedTimerINS2_12steady_clockEEEDoFvOZNS2_2gc8internal24GCSchedulerDataWithTimerIS6_EC1ERNS8_17GCSchedulerConfigENS_8functionIFvvEEEEUlvE_EOPS7_SI_EJRKS4_SK_SM_SH_EvEEOT_DpOT0_.cold.1:
0000000000054f7c	ldrsb	w8, [x0, #0x17]
0000000000054f80	tbnz	w8, #0x1f, 0x54f88
0000000000054f84	ret
0000000000054f88	b	_OUTLINED_FUNCTION_0
__ZN6kotlin2gc22ConcurrentMarkAndSweepC2ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerE.cold.1:
0000000000054f8c	ldrsb	w8, [x0, #0x17]
0000000000054f90	tbnz	w8, #0x1f, 0x54f98
0000000000054f94	ret
0000000000054f98	b	_OUTLINED_FUNCTION_0
__ZN6kotlin2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEv.cold.1:
0000000000054f9c	ldrsb	w8, [x0, #0x17]
0000000000054fa0	tbnz	w8, #0x1f, 0x54fa8
0000000000054fa4	ret
0000000000054fa8	b	_OUTLINED_FUNCTION_0
__ZN6kotlin12ScopedThread3RunIZNS_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOS7_DpOS8_.cold.1:
0000000000054fac	stp	x24, x23, [sp, #-0x40]!
0000000000054fb0	stp	x22, x21, [sp, #0x10]
0000000000054fb4	stp	x20, x19, [sp, #0x20]
0000000000054fb8	stp	x29, x30, [sp, #0x30]
0000000000054fbc	add	x29, sp, #0x30
0000000000054fc0	mov	x21, x2
0000000000054fc4	mov	x20, x1
0000000000054fc8	mov	x19, x0
0000000000054fcc	str	xzr, [x2]
0000000000054fd0	cbz	x3, 0x5500c
0000000000054fd4	mov	x22, x3
0000000000054fd8	ldr	x23, [x22]
0000000000054fdc	str	xzr, [x22]
0000000000054fe0	mov	x0, x22
0000000000054fe4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000054fe8	bl	_mi_free
0000000000054fec	mov	x22, x23
0000000000054ff0	cbnz	x23, 0x54fd8
0000000000054ff4	ldr	x0, [x21]
0000000000054ff8	str	xzr, [x21]
0000000000054ffc	cbz	x0, 0x55010
0000000000055000	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000055004	bl	_mi_free
0000000000055008	b	0x55010
000000000005500c	str	xzr, [x21]
0000000000055010	ldrb	w8, [x20]
0000000000055014	cbz	w8, 0x55030
0000000000055018	ldr	x0, [x19]
000000000005501c	ldp	x29, x30, [sp, #0x30]
0000000000055020	ldp	x20, x19, [sp, #0x20]
0000000000055024	ldp	x22, x21, [sp, #0x10]
0000000000055028	ldp	x24, x23, [sp], #0x40
000000000005502c	b	0x55278 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000055030	ldp	x29, x30, [sp, #0x30]
0000000000055034	ldp	x20, x19, [sp, #0x20]
0000000000055038	ldp	x22, x21, [sp, #0x10]
000000000005503c	ldp	x24, x23, [sp], #0x40
0000000000055040	ret
__ZN12_GLOBAL__N_18theStateEv.cold.1:
0000000000055044	stp	x24, x23, [sp, #-0x40]!
0000000000055048	stp	x22, x21, [sp, #0x10]
000000000005504c	stp	x20, x19, [sp, #0x20]
0000000000055050	stp	x29, x30, [sp, #0x30]
0000000000055054	add	x29, sp, #0x30
0000000000055058	mov	x19, x3
000000000005505c	mov	x21, x2
0000000000055060	mov	x22, x1
0000000000055064	mov	x20, x0
0000000000055068	ldr	x0, [x0, #0xd0]
000000000005506c	cbz	x0, 0x55080
0000000000055070	ldr	x23, [x0]
0000000000055074	bl	0x55458 ; symbol stub for: _free
0000000000055078	mov	x0, x23
000000000005507c	cbnz	x23, 0x55070
0000000000055080	ldr	x0, [x22]
0000000000055084	str	xzr, [x22]
0000000000055088	bl	0x55458 ; symbol stub for: _free
000000000005508c	ldr	x0, [x20, #0xa8]
0000000000055090	cbz	x0, 0x550a4
0000000000055094	ldr	x22, [x0]
0000000000055098	bl	0x55458 ; symbol stub for: _free
000000000005509c	mov	x0, x22
00000000000550a0	cbnz	x22, 0x55094
00000000000550a4	ldr	x0, [x21]
00000000000550a8	str	xzr, [x21]
00000000000550ac	bl	0x55458 ; symbol stub for: _free
00000000000550b0	ldr	x0, [x20, #0x80]
00000000000550b4	cbz	x0, 0x550c8
00000000000550b8	ldr	x20, [x0]
00000000000550bc	bl	0x55458 ; symbol stub for: _free
00000000000550c0	mov	x0, x20
00000000000550c4	cbnz	x20, 0x550b8
00000000000550c8	ldr	x0, [x19]
00000000000550cc	str	xzr, [x19]
00000000000550d0	ldp	x29, x30, [sp, #0x30]
00000000000550d4	ldp	x20, x19, [sp, #0x20]
00000000000550d8	ldp	x22, x21, [sp, #0x10]
00000000000550dc	ldp	x24, x23, [sp], #0x40
00000000000550e0	b	0x55458 ; symbol stub for: _free
_Kotlin_getStackTraceStrings.cold.1:
00000000000550e4	stp	x22, x21, [sp, #-0x30]!
00000000000550e8	stp	x20, x19, [sp, #0x10]
00000000000550ec	stp	x29, x30, [sp, #0x20]
00000000000550f0	add	x29, sp, #0x20
00000000000550f4	mov	x19, x1
00000000000550f8	mov	x20, x0
00000000000550fc	ldr	x8, [x1]
0000000000055100	cmp	x8, x0
0000000000055104	b.eq	0x55134
0000000000055108	mov	x21, x2
000000000005510c	sub	x22, x8, #0x18
0000000000055110	ldursb	w9, [x8, #-0x1]
0000000000055114	tbz	w9, #0x1f, 0x55120
0000000000055118	ldur	x0, [x8, #-0x18]
000000000005511c	bl	0x55458 ; symbol stub for: _free
0000000000055120	mov	x8, x22
0000000000055124	cmp	x22, x20
0000000000055128	b.ne	0x5510c
000000000005512c	ldr	x0, [x21]
0000000000055130	b	0x55138
0000000000055134	mov	x0, x20
0000000000055138	str	x20, [x19]
000000000005513c	ldp	x29, x30, [sp, #0x20]
0000000000055140	ldp	x20, x19, [sp, #0x10]
0000000000055144	ldp	x22, x21, [sp], #0x30
0000000000055148	b	0x55458 ; symbol stub for: _free
