../../../SkantzBinaries/KMM/nBodyKmm:
(__TEXT,__text) section
_kfun:kotlin.collections#copyInto__at__kotlin.Array<out|0:0>(kotlin.Array<0:0>;kotlin.Int;kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0>:
0000000000007bc4	stp	x22, x21, [sp, #-0x30]!
0000000000007bc8	stp	x20, x19, [sp, #0x10]
0000000000007bcc	stp	x29, x30, [sp, #0x20]
0000000000007bd0	add	x29, sp, #0x20
0000000000007bd4	mov	x20, x3
0000000000007bd8	mov	x22, x2
0000000000007bdc	mov	x19, x1
0000000000007be0	mov	x21, x0
0000000000007be4	adr	x8, #0x7ee5f
0000000000007be8	nop
0000000000007bec	ldarb	w8, [x8]
0000000000007bf0	tbz	w8, #0x0, 0x7bf8
0000000000007bf4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007bf8	ldr	x8, [x21]
0000000000007bfc	and	x8, x8, #0xfffffffffffffffc
0000000000007c00	ldr	x8, [x8]
0000000000007c04	ldr	w8, [x8, #0x5c]
0000000000007c08	cmp	w8, #0x49
0000000000007c0c	b.ne	0x7ce8
0000000000007c10	ldr	x8, [x19]
0000000000007c14	and	x8, x8, #0xfffffffffffffffc
0000000000007c18	ldr	x8, [x8]
0000000000007c1c	ldr	w8, [x8, #0x5c]
0000000000007c20	cmp	w8, #0x49
0000000000007c24	b.ne	0x7cf8
0000000000007c28	tbnz	w22, #0x1f, 0x7ce4
0000000000007c2c	ldr	w8, [x21, #0x8]
0000000000007c30	cmp	w8, w22
0000000000007c34	b.lo	0x7ce4
0000000000007c38	ldr	w8, [x19, #0x8]
0000000000007c3c	cmp	w8, w22
0000000000007c40	b.lo	0x7ce4
0000000000007c44	ldr	xzr, [x19]
0000000000007c48	cmp	w22, #0x1
0000000000007c4c	b.lt	0x7cac
0000000000007c50	mov	w8, w22
0000000000007c54	cmp	w22, #0x1
0000000000007c58	b.eq	0x7c84
0000000000007c5c	add	x9, x19, #0x10
0000000000007c60	add	x10, x21, #0x10
0000000000007c64	lsl	x11, x8, #3
0000000000007c68	add	x11, x11, #0x10
0000000000007c6c	add	x12, x21, x11
0000000000007c70	cmp	x9, x12
0000000000007c74	b.hs	0x7cc0
0000000000007c78	add	x11, x19, x11
0000000000007c7c	cmp	x10, x11
0000000000007c80	b.hs	0x7cc0
0000000000007c84	mov	x11, #0x0
0000000000007c88	sub	x8, x8, x11
0000000000007c8c	lsl	x9, x11, #3
0000000000007c90	add	x10, x9, #0x10
0000000000007c94	add	x9, x21, x10
0000000000007c98	add	x10, x19, x10
0000000000007c9c	ldr	x11, [x9], #0x8
0000000000007ca0	str	x11, [x10], #0x8
0000000000007ca4	subs	x8, x8, #0x1
0000000000007ca8	b.ne	0x7c9c
0000000000007cac	str	x19, [x20]
0000000000007cb0	ldp	x29, x30, [sp, #0x20]
0000000000007cb4	ldp	x20, x19, [sp, #0x10]
0000000000007cb8	ldp	x22, x21, [sp], #0x30
0000000000007cbc	ret
0000000000007cc0	and	x11, x8, #0xfffffffe
0000000000007cc4	mov	x12, x11
0000000000007cc8	ldr	q0, [x10], #0x10
0000000000007ccc	str	q0, [x9], #0x10
0000000000007cd0	subs	x12, x12, #0x2
0000000000007cd4	b.ne	0x7cc8
0000000000007cd8	cmp	x11, x8
0000000000007cdc	b.eq	0x7cac
0000000000007ce0	b	0x7c88
0000000000007ce4	bl	_ThrowArrayIndexOutOfBoundsException
0000000000007ce8	adr	x1, #0x508f8
0000000000007cec	nop
0000000000007cf0	mov	x0, x21
0000000000007cf4	bl	_ThrowClassCastException
0000000000007cf8	adr	x1, #0x508e8
0000000000007cfc	nop
0000000000007d00	mov	x0, x19
0000000000007d04	bl	_ThrowClassCastException
_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0>:
0000000000007d08	sub	sp, sp, #0xc0
0000000000007d0c	stp	x24, x23, [sp, #0x80]
0000000000007d10	stp	x22, x21, [sp, #0x90]
0000000000007d14	stp	x20, x19, [sp, #0xa0]
0000000000007d18	stp	x29, x30, [sp, #0xb0]
0000000000007d1c	add	x29, sp, #0xb0
0000000000007d20	mov	x20, x2
0000000000007d24	mov	x19, x1
0000000000007d28	mov	x21, x0
0000000000007d2c	movi.16b	v0, #0x0
0000000000007d30	stp	q0, q0, [sp, #0x20]
0000000000007d34	stp	q0, q0, [sp, #0x60]
0000000000007d38	stp	q0, q0, [sp, #0x40]
0000000000007d3c	stp	xzr, xzr, [sp, #0x10]
0000000000007d40	adr	x8, #0x54650
0000000000007d44	nop
0000000000007d48	orr	x8, x8, #0x3
0000000000007d4c	str	x8, [sp, #0x8]
0000000000007d50	adrp	x0, 101 ; 0x6c000
0000000000007d54	add	x0, x0, #0xbb0
0000000000007d58	ldr	x8, [x0]
0000000000007d5c	blr	x8
0000000000007d60	ldr	x23, [x0]
0000000000007d64	ldr	x8, [x23, #0x110]
0000000000007d68	add	x9, sp, #0x20
0000000000007d6c	str	x9, [x23, #0x110]
0000000000007d70	mov	x9, #0xc00000000
0000000000007d74	stp	x8, x9, [sp, #0x28]
0000000000007d78	adr	x8, #0x7eccb
0000000000007d7c	nop
0000000000007d80	ldarb	w8, [x8]
0000000000007d84	tbz	w8, #0x0, 0x7d8c
0000000000007d88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007d8c	tbnz	w19, #0x1f, 0x7e10
0000000000007d90	ldr	x8, [x23, #0x118]
0000000000007d94	mov	w9, w19
0000000000007d98	lsl	x9, x9, #3
0000000000007d9c	add	x9, x9, #0x1f
0000000000007da0	and	x1, x9, #0xffffffff8
0000000000007da4	add	x0, x8, #0x70
0000000000007da8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000007dac	mov	x22, x0
0000000000007db0	stp	xzr, xzr, [x22, #0x10]!
0000000000007db4	adr	x8, #0x5082c
0000000000007db8	nop
0000000000007dbc	stp	xzr, x8, [x22, #-0x8]
0000000000007dc0	str	w19, [x22, #0x8]
0000000000007dc4	str	x22, [sp, #0x70]
0000000000007dc8	ldr	w8, [x21, #0x8]
0000000000007dcc	cmp	w8, w19
0000000000007dd0	csel	w2, w8, w19, lt
0000000000007dd4	add	x8, sp, #0x20
0000000000007dd8	add	x3, x8, #0x58
0000000000007ddc	mov	x0, x21
0000000000007de0	mov	x1, x22
0000000000007de4	bl	"_kfun:kotlin.collections#copyInto__at__kotlin.Array<out|0:0>(kotlin.Array<0:0>;kotlin.Int;kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0>"
0000000000007de8	str	x22, [x20]
0000000000007dec	ldr	x8, [sp, #0x28]
0000000000007df0	str	x8, [x23, #0x110]
0000000000007df4	mov	x0, x22
0000000000007df8	ldp	x29, x30, [sp, #0xb0]
0000000000007dfc	ldp	x20, x19, [sp, #0xa0]
0000000000007e00	ldp	x22, x21, [sp, #0x90]
0000000000007e04	ldp	x24, x23, [sp, #0x80]
0000000000007e08	add	sp, sp, #0xc0
0000000000007e0c	ret
0000000000007e10	add	x8, sp, #0x20
0000000000007e14	add	x20, x8, #0x38
0000000000007e18	add	x21, x8, #0x30
0000000000007e1c	add	x22, x8, #0x28
0000000000007e20	mov	x24, x23
0000000000007e24	add	x23, x8, #0x20
0000000000007e28	add	x8, sp, #0x8
0000000000007e2c	str	x8, [sp, #0x38]
0000000000007e30	add	x0, sp, #0x8
0000000000007e34	mov	w1, #0xa
0000000000007e38	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000007e3c	add	x0, sp, #0x8
0000000000007e40	mov	w1, #0x0
0000000000007e44	mov	x2, x23
0000000000007e48	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000007e4c	adr	x1, #0x5d424
0000000000007e50	nop
0000000000007e54	add	x0, sp, #0x8
0000000000007e58	mov	x2, x22
0000000000007e5c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000007e60	add	x0, sp, #0x8
0000000000007e64	mov	x1, x19
0000000000007e68	mov	x2, x21
0000000000007e6c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000007e70	add	x0, sp, #0x8
0000000000007e74	mov	x1, x20
0000000000007e78	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000007e7c	mov	x19, x0
0000000000007e80	ldr	x8, [x24, #0x118]
0000000000007e84	add	x0, x8, #0x70
0000000000007e88	mov	w1, #0x38
0000000000007e8c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000007e90	mov	x20, x0
0000000000007e94	adr	x8, #0x50dec
0000000000007e98	nop
0000000000007e9c	str	x8, [x20, #0x10]!
0000000000007ea0	stur	xzr, [x20, #-0x8]
0000000000007ea4	str	x20, [sp, #0x60]
0000000000007ea8	mov	x0, x20
0000000000007eac	mov	x1, x19
0000000000007eb0	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000007eb4	mov	x0, x20
0000000000007eb8	bl	_ThrowException
_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.IntArray(kotlin.Int;kotlin.Int){}kotlin.IntArray:
0000000000007ebc	sub	sp, sp, #0xc0
0000000000007ec0	stp	x24, x23, [sp, #0x80]
0000000000007ec4	stp	x22, x21, [sp, #0x90]
0000000000007ec8	stp	x20, x19, [sp, #0xa0]
0000000000007ecc	stp	x29, x30, [sp, #0xb0]
0000000000007ed0	add	x29, sp, #0xb0
0000000000007ed4	mov	x20, x2
0000000000007ed8	mov	x19, x1
0000000000007edc	mov	x21, x0
0000000000007ee0	movi.16b	v0, #0x0
0000000000007ee4	stp	q0, q0, [sp, #0x20]
0000000000007ee8	str	xzr, [sp, #0x70]
0000000000007eec	stp	q0, q0, [sp, #0x50]
0000000000007ef0	str	q0, [sp, #0x40]
0000000000007ef4	stp	xzr, xzr, [sp, #0x10]
0000000000007ef8	adr	x8, #0x54498
0000000000007efc	nop
0000000000007f00	orr	x8, x8, #0x3
0000000000007f04	str	x8, [sp, #0x8]
0000000000007f08	adrp	x0, 101 ; 0x6c000
0000000000007f0c	add	x0, x0, #0xbb0
0000000000007f10	ldr	x8, [x0]
0000000000007f14	blr	x8
0000000000007f18	ldr	x23, [x0]
0000000000007f1c	ldr	x8, [x23, #0x110]
0000000000007f20	add	x9, sp, #0x20
0000000000007f24	str	x9, [x23, #0x110]
0000000000007f28	mov	x9, #0xb00000000
0000000000007f2c	stp	x8, x9, [sp, #0x28]
0000000000007f30	adr	x8, #0x7eb13
0000000000007f34	nop
0000000000007f38	ldarb	w8, [x8]
0000000000007f3c	tbz	w8, #0x0, 0x7f44
0000000000007f40	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007f44	tbnz	w19, #0x1f, 0x7ff8
0000000000007f48	ldr	x8, [x23, #0x118]
0000000000007f4c	mov	w9, w19
0000000000007f50	lsl	x9, x9, #2
0000000000007f54	add	x9, x9, #0x1f
0000000000007f58	and	x1, x9, #0x7fffffff8
0000000000007f5c	add	x0, x8, #0x70
0000000000007f60	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000007f64	mov	x22, x0
0000000000007f68	str	xzr, [x22, #0x10]!
0000000000007f6c	str	xzr, [x0, #0x18]
0000000000007f70	adr	x8, #0x50790
0000000000007f74	nop
0000000000007f78	str	xzr, [x0, #0x8]
0000000000007f7c	str	x8, [x22]
0000000000007f80	str	w19, [x0, #0x18]
0000000000007f84	str	x22, [sp, #0x68]
0000000000007f88	ldr	w8, [x21, #0x8]
0000000000007f8c	cmp	w8, w19
0000000000007f90	b.ge	0x7f9c
0000000000007f94	mov	x19, x8
0000000000007f98	tbnz	w8, #0x1f, 0x7ff4
0000000000007f9c	ldr	w8, [x21, #0x8]
0000000000007fa0	cmp	w8, w19
0000000000007fa4	b.lo	0x7ff4
0000000000007fa8	ldr	w8, [x0, #0x18]
0000000000007fac	cmp	w8, w19
0000000000007fb0	b.lo	0x7ff4
0000000000007fb4	ldr	xzr, [x0, #0x10]
0000000000007fb8	add	x0, x0, #0x20
0000000000007fbc	add	x1, x21, #0x10
0000000000007fc0	sbfiz	x2, x19, #2, #32
0000000000007fc4	bl	0x51ab8 ; symbol stub for: _memmove
0000000000007fc8	str	x22, [sp, #0x70]
0000000000007fcc	str	x22, [x20]
0000000000007fd0	ldr	x8, [sp, #0x28]
0000000000007fd4	str	x8, [x23, #0x110]
0000000000007fd8	mov	x0, x22
0000000000007fdc	ldp	x29, x30, [sp, #0xb0]
0000000000007fe0	ldp	x20, x19, [sp, #0xa0]
0000000000007fe4	ldp	x22, x21, [sp, #0x90]
0000000000007fe8	ldp	x24, x23, [sp, #0x80]
0000000000007fec	add	sp, sp, #0xc0
0000000000007ff0	ret
0000000000007ff4	bl	_ThrowArrayIndexOutOfBoundsException
0000000000007ff8	add	x8, sp, #0x20
0000000000007ffc	add	x20, x8, #0x38
0000000000008000	add	x21, x8, #0x30
0000000000008004	add	x22, x8, #0x28
0000000000008008	mov	x24, x23
000000000000800c	add	x23, x8, #0x20
0000000000008010	add	x8, sp, #0x8
0000000000008014	str	x8, [sp, #0x38]
0000000000008018	add	x0, sp, #0x8
000000000000801c	mov	w1, #0xa
0000000000008020	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000008024	add	x0, sp, #0x8
0000000000008028	mov	w1, #0x0
000000000000802c	mov	x2, x23
0000000000008030	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000008034	adr	x1, #0x5d23c
0000000000008038	nop
000000000000803c	add	x0, sp, #0x8
0000000000008040	mov	x2, x22
0000000000008044	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000008048	add	x0, sp, #0x8
000000000000804c	mov	x1, x19
0000000000008050	mov	x2, x21
0000000000008054	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000008058	add	x0, sp, #0x8
000000000000805c	mov	x1, x20
0000000000008060	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000008064	mov	x19, x0
0000000000008068	ldr	x8, [x24, #0x118]
000000000000806c	add	x0, x8, #0x70
0000000000008070	mov	w1, #0x38
0000000000008074	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008078	mov	x20, x0
000000000000807c	adr	x8, #0x50c04
0000000000008080	nop
0000000000008084	str	x8, [x20, #0x10]!
0000000000008088	stur	xzr, [x20, #-0x8]
000000000000808c	str	x20, [sp, #0x60]
0000000000008090	mov	x0, x20
0000000000008094	mov	x1, x19
0000000000008098	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000000809c	mov	x0, x20
00000000000080a0	bl	_ThrowException
_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.CharArray(kotlin.Int;kotlin.Int){}kotlin.CharArray:
00000000000080a4	sub	sp, sp, #0xc0
00000000000080a8	stp	x24, x23, [sp, #0x80]
00000000000080ac	stp	x22, x21, [sp, #0x90]
00000000000080b0	stp	x20, x19, [sp, #0xa0]
00000000000080b4	stp	x29, x30, [sp, #0xb0]
00000000000080b8	add	x29, sp, #0xb0
00000000000080bc	mov	x20, x2
00000000000080c0	mov	x19, x1
00000000000080c4	mov	x21, x0
00000000000080c8	movi.16b	v0, #0x0
00000000000080cc	stp	q0, q0, [sp, #0x20]
00000000000080d0	str	xzr, [sp, #0x70]
00000000000080d4	stp	q0, q0, [sp, #0x50]
00000000000080d8	str	q0, [sp, #0x40]
00000000000080dc	stp	xzr, xzr, [sp, #0x10]
00000000000080e0	adr	x8, #0x542b0
00000000000080e4	nop
00000000000080e8	orr	x8, x8, #0x3
00000000000080ec	str	x8, [sp, #0x8]
00000000000080f0	adrp	x0, 100 ; 0x6c000
00000000000080f4	add	x0, x0, #0xbb0
00000000000080f8	ldr	x8, [x0]
00000000000080fc	blr	x8
0000000000008100	ldr	x23, [x0]
0000000000008104	ldr	x8, [x23, #0x110]
0000000000008108	add	x9, sp, #0x20
000000000000810c	str	x9, [x23, #0x110]
0000000000008110	mov	x9, #0xb00000000
0000000000008114	stp	x8, x9, [sp, #0x28]
0000000000008118	adr	x8, #0x7e92b
000000000000811c	nop
0000000000008120	ldarb	w8, [x8]
0000000000008124	tbz	w8, #0x0, 0x812c
0000000000008128	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000812c	tbnz	w19, #0x1f, 0x81e0
0000000000008130	ldr	x8, [x23, #0x118]
0000000000008134	mov	w9, w19
0000000000008138	lsl	x9, x9, #1
000000000000813c	add	x9, x9, #0x1f
0000000000008140	and	x1, x9, #0x3fffffff8
0000000000008144	add	x0, x8, #0x70
0000000000008148	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000814c	mov	x22, x0
0000000000008150	str	xzr, [x22, #0x10]!
0000000000008154	str	xzr, [x0, #0x18]
0000000000008158	adr	x8, #0x50518
000000000000815c	nop
0000000000008160	str	xzr, [x0, #0x8]
0000000000008164	str	x8, [x22]
0000000000008168	str	w19, [x0, #0x18]
000000000000816c	str	x22, [sp, #0x68]
0000000000008170	ldr	w8, [x21, #0x8]
0000000000008174	cmp	w8, w19
0000000000008178	b.ge	0x8184
000000000000817c	mov	x19, x8
0000000000008180	tbnz	w8, #0x1f, 0x81dc
0000000000008184	ldr	w8, [x21, #0x8]
0000000000008188	cmp	w8, w19
000000000000818c	b.lo	0x81dc
0000000000008190	ldr	w8, [x0, #0x18]
0000000000008194	cmp	w8, w19
0000000000008198	b.lo	0x81dc
000000000000819c	ldr	xzr, [x0, #0x10]
00000000000081a0	add	x0, x0, #0x20
00000000000081a4	add	x1, x21, #0x10
00000000000081a8	sbfiz	x2, x19, #1, #32
00000000000081ac	bl	0x51ab8 ; symbol stub for: _memmove
00000000000081b0	str	x22, [sp, #0x70]
00000000000081b4	str	x22, [x20]
00000000000081b8	ldr	x8, [sp, #0x28]
00000000000081bc	str	x8, [x23, #0x110]
00000000000081c0	mov	x0, x22
00000000000081c4	ldp	x29, x30, [sp, #0xb0]
00000000000081c8	ldp	x20, x19, [sp, #0xa0]
00000000000081cc	ldp	x22, x21, [sp, #0x90]
00000000000081d0	ldp	x24, x23, [sp, #0x80]
00000000000081d4	add	sp, sp, #0xc0
00000000000081d8	ret
00000000000081dc	bl	_ThrowArrayIndexOutOfBoundsException
00000000000081e0	add	x8, sp, #0x20
00000000000081e4	add	x20, x8, #0x38
00000000000081e8	add	x21, x8, #0x30
00000000000081ec	add	x22, x8, #0x28
00000000000081f0	mov	x24, x23
00000000000081f4	add	x23, x8, #0x20
00000000000081f8	add	x8, sp, #0x8
00000000000081fc	str	x8, [sp, #0x38]
0000000000008200	add	x0, sp, #0x8
0000000000008204	mov	w1, #0xa
0000000000008208	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000820c	add	x0, sp, #0x8
0000000000008210	mov	w1, #0x0
0000000000008214	mov	x2, x23
0000000000008218	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000821c	adr	x1, #0x5d054
0000000000008220	nop
0000000000008224	add	x0, sp, #0x8
0000000000008228	mov	x2, x22
000000000000822c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000008230	add	x0, sp, #0x8
0000000000008234	mov	x1, x19
0000000000008238	mov	x2, x21
000000000000823c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000008240	add	x0, sp, #0x8
0000000000008244	mov	x1, x20
0000000000008248	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000824c	mov	x19, x0
0000000000008250	ldr	x8, [x24, #0x118]
0000000000008254	add	x0, x8, #0x70
0000000000008258	mov	w1, #0x38
000000000000825c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008260	mov	x20, x0
0000000000008264	adr	x8, #0x50a1c
0000000000008268	nop
000000000000826c	str	x8, [x20, #0x10]!
0000000000008270	stur	xzr, [x20, #-0x8]
0000000000008274	str	x20, [sp, #0x60]
0000000000008278	mov	x0, x20
000000000000827c	mov	x1, x19
0000000000008280	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000008284	mov	x0, x20
0000000000008288	bl	_ThrowException
_kfun:kotlin.Any#hashCode(){}kotlin.Int:
000000000000828c	stp	x20, x19, [sp, #-0x20]!
0000000000008290	stp	x29, x30, [sp, #0x10]
0000000000008294	add	x29, sp, #0x10
0000000000008298	mov	x19, x0
000000000000829c	adr	x8, #0x7e7a7
00000000000082a0	nop
00000000000082a4	ldarb	w8, [x8]
00000000000082a8	tbz	w8, #0x0, 0x82b0
00000000000082ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000082b0	mov	x0, x19
00000000000082b4	ldp	x29, x30, [sp, #0x10]
00000000000082b8	ldp	x20, x19, [sp], #0x20
00000000000082bc	ret
_kfun:kotlin.Any#toString(){}kotlin.String:
00000000000082c0	sub	sp, sp, #0x140
00000000000082c4	stp	x28, x27, [sp, #0xe0]
00000000000082c8	stp	x26, x25, [sp, #0xf0]
00000000000082cc	stp	x24, x23, [sp, #0x100]
00000000000082d0	stp	x22, x21, [sp, #0x110]
00000000000082d4	stp	x20, x19, [sp, #0x120]
00000000000082d8	stp	x29, x30, [sp, #0x130]
00000000000082dc	add	x29, sp, #0x130
00000000000082e0	mov	x19, x1
00000000000082e4	mov	x20, x0
00000000000082e8	movi.16b	v0, #0x0
00000000000082ec	stp	q0, q0, [sp, #0x30]
00000000000082f0	stp	q0, q0, [sp, #0x60]
00000000000082f4	str	q0, [sp, #0x50]
00000000000082f8	add	x21, sp, #0x30
00000000000082fc	adr	x8, #0x51d44
0000000000008300	nop
0000000000008304	orr	x8, x8, #0x3
0000000000008308	stp	x8, xzr, [sp, #0x20]
000000000000830c	stp	xzr, xzr, [sp, #0x10]
0000000000008310	adr	x8, #0x54080
0000000000008314	nop
0000000000008318	orr	x8, x8, #0x3
000000000000831c	str	x8, [sp, #0x8]
0000000000008320	adrp	x0, 100 ; 0x6c000
0000000000008324	add	x0, x0, #0xbb0
0000000000008328	ldr	x8, [x0]
000000000000832c	blr	x8
0000000000008330	ldr	x26, [x0]
0000000000008334	ldr	x8, [x26, #0x110]
0000000000008338	str	x21, [x26, #0x110]
000000000000833c	mov	x9, #0xa00000000
0000000000008340	stp	x8, x9, [sp, #0x38]
0000000000008344	adr	x8, #0x7e6ff
0000000000008348	nop
000000000000834c	ldarb	w8, [x8]
0000000000008350	tbz	w8, #0x0, 0x8358
0000000000008354	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008358	ldr	x8, [x20]
000000000000835c	and	x8, x8, #0xfffffffffffffffc
0000000000008360	ldr	x8, [x8]
0000000000008364	add	x9, sp, #0x20
0000000000008368	str	x9, [sp, #0x48]
000000000000836c	str	x8, [sp, #0x28]
0000000000008370	ldr	x8, [sp, #0x20]
0000000000008374	and	x8, x8, #0xfffffffffffffffc
0000000000008378	ldr	x8, [x8]
000000000000837c	ldr	w8, [x8, #0x5c]
0000000000008380	cmp	w8, #0xd2
0000000000008384	b.ne	0x83ac
0000000000008388	add	x1, x21, #0x20
000000000000838c	add	x0, sp, #0x20
0000000000008390	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-fullName>(){}kotlin.String?"
0000000000008394	str	x0, [sp, #0x50]
0000000000008398	adr	x8, #0x5cf48
000000000000839c	nop
00000000000083a0	cmp	x0, #0x0
00000000000083a4	csel	x21, x8, x0, eq
00000000000083a8	b	0x83b8
00000000000083ac	str	xzr, [sp, #0x50]
00000000000083b0	adr	x21, #0x5cf30
00000000000083b4	nop
00000000000083b8	add	x8, sp, #0x30
00000000000083bc	add	x22, x8, #0x48
00000000000083c0	add	x23, x8, #0x40
00000000000083c4	add	x24, x8, #0x38
00000000000083c8	add	x25, x8, #0x28
00000000000083cc	ldr	x8, [x20]
00000000000083d0	and	x8, x8, #0xfffffffffffffffc
00000000000083d4	ldr	x8, [x8]
00000000000083d8	ldr	x8, [x8, #0x78]
00000000000083dc	mov	x0, x20
00000000000083e0	blr	x8
00000000000083e4	mov	w0, w0
00000000000083e8	mov	w1, #0x10
00000000000083ec	mov	x2, x25
00000000000083f0	bl	_Kotlin_Long_toStringRadix
00000000000083f4	mov	x20, x0
00000000000083f8	add	x8, sp, #0x8
00000000000083fc	str	x8, [sp, #0x60]
0000000000008400	add	x0, sp, #0x8
0000000000008404	mov	w1, #0xa
0000000000008408	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000840c	add	x0, sp, #0x8
0000000000008410	mov	x1, x21
0000000000008414	mov	x2, x24
0000000000008418	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000841c	adr	x1, #0x5cee4
0000000000008420	nop
0000000000008424	add	x0, sp, #0x8
0000000000008428	mov	x2, x23
000000000000842c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000008430	add	x0, sp, #0x8
0000000000008434	mov	x1, x20
0000000000008438	mov	x2, x22
000000000000843c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000008440	add	x0, sp, #0x8
0000000000008444	mov	x1, x19
0000000000008448	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000844c	str	x0, [x19]
0000000000008450	ldr	x8, [sp, #0x38]
0000000000008454	str	x8, [x26, #0x110]
0000000000008458	ldp	x29, x30, [sp, #0x130]
000000000000845c	ldp	x20, x19, [sp, #0x120]
0000000000008460	ldp	x22, x21, [sp, #0x110]
0000000000008464	ldp	x24, x23, [sp, #0x100]
0000000000008468	ldp	x26, x25, [sp, #0xf0]
000000000000846c	ldp	x28, x27, [sp, #0xe0]
0000000000008470	add	sp, sp, #0x140
0000000000008474	ret
_kfun:kotlin.Boolean#$<bridge-NBNB>compareTo(kotlin.Boolean){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000008478	stp	x20, x19, [sp, #-0x20]!
000000000000847c	stp	x29, x30, [sp, #0x10]
0000000000008480	add	x29, sp, #0x10
0000000000008484	mov	x19, x1
0000000000008488	mov	x20, x0
000000000000848c	adr	x8, #0x7e5b7
0000000000008490	nop
0000000000008494	ldarb	w8, [x8]
0000000000008498	tbz	w8, #0x0, 0x84a0
000000000000849c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000084a0	ldrb	w8, [x20, #0x8]
00000000000084a4	ldrb	w9, [x19, #0x8]
00000000000084a8	eor	w10, w8, w9
00000000000084ac	bic	w8, w9, w8
00000000000084b0	tst	w8, #0x1
00000000000084b4	mov	w8, #-0x1
00000000000084b8	cneg	w8, w8, eq
00000000000084bc	tst	w10, #0x1
00000000000084c0	csel	w0, w8, wzr, ne
00000000000084c4	ldp	x29, x30, [sp, #0x10]
00000000000084c8	ldp	x20, x19, [sp], #0x20
00000000000084cc	ret
_kfun:kotlin.Boolean#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
00000000000084d0	stp	x20, x19, [sp, #-0x20]!
00000000000084d4	stp	x29, x30, [sp, #0x10]
00000000000084d8	add	x29, sp, #0x10
00000000000084dc	mov	x19, x1
00000000000084e0	mov	x20, x0
00000000000084e4	adr	x8, #0x7e55f
00000000000084e8	nop
00000000000084ec	ldarb	w8, [x8]
00000000000084f0	tbz	w8, #0x0, 0x84f8
00000000000084f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000084f8	cbz	x19, 0x8534
00000000000084fc	ldrb	w8, [x20, #0x8]
0000000000008500	ldr	x9, [x19]
0000000000008504	and	x9, x9, #0xfffffffffffffffc
0000000000008508	ldr	x9, [x9]
000000000000850c	ldr	w9, [x9, #0x5c]
0000000000008510	cmp	w9, #0x53
0000000000008514	b.ne	0x8534
0000000000008518	ldrb	w9, [x19, #0x8]
000000000000851c	eor	w8, w9, w8
0000000000008520	eor	w8, w8, #0x1
0000000000008524	and	w0, w8, #0x1
0000000000008528	ldp	x29, x30, [sp, #0x10]
000000000000852c	ldp	x20, x19, [sp], #0x20
0000000000008530	ret
0000000000008534	mov	w8, #0x0
0000000000008538	and	w0, w8, #0x1
000000000000853c	ldp	x29, x30, [sp, #0x10]
0000000000008540	ldp	x20, x19, [sp], #0x20
0000000000008544	ret
_kfun:kotlin.Boolean#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000008548	stp	x20, x19, [sp, #-0x20]!
000000000000854c	stp	x29, x30, [sp, #0x10]
0000000000008550	add	x29, sp, #0x10
0000000000008554	mov	x19, x1
0000000000008558	mov	x20, x0
000000000000855c	adr	x8, #0x7e4e7
0000000000008560	nop
0000000000008564	ldarb	w8, [x8]
0000000000008568	tbz	w8, #0x0, 0x8570
000000000000856c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008570	ldrb	w8, [x20, #0x8]
0000000000008574	adr	x9, #0x5cdcc
0000000000008578	nop
000000000000857c	adr	x10, #0x5cda4
0000000000008580	nop
0000000000008584	cmp	w8, #0x0
0000000000008588	csel	x0, x10, x9, ne
000000000000858c	str	x0, [x19]
0000000000008590	ldp	x29, x30, [sp, #0x10]
0000000000008594	ldp	x20, x19, [sp], #0x20
0000000000008598	ret
_kfun:kotlin.Boolean#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
000000000000859c	stp	x20, x19, [sp, #-0x20]!
00000000000085a0	stp	x29, x30, [sp, #0x10]
00000000000085a4	add	x29, sp, #0x10
00000000000085a8	mov	x19, x0
00000000000085ac	adr	x8, #0x7e497
00000000000085b0	nop
00000000000085b4	ldarb	w8, [x8]
00000000000085b8	tbz	w8, #0x0, 0x85c0
00000000000085bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000085c0	ldrb	w0, [x19, #0x8]
00000000000085c4	ldp	x29, x30, [sp, #0x10]
00000000000085c8	ldp	x20, x19, [sp], #0x20
00000000000085cc	ret
_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any:
00000000000085d0	sub	sp, sp, #0x50
00000000000085d4	stp	x22, x21, [sp, #0x20]
00000000000085d8	stp	x20, x19, [sp, #0x30]
00000000000085dc	stp	x29, x30, [sp, #0x40]
00000000000085e0	add	x29, sp, #0x40
00000000000085e4	mov	x19, x1
00000000000085e8	mov	x20, x0
00000000000085ec	movi.16b	v0, #0x0
00000000000085f0	stp	q0, q0, [sp]
00000000000085f4	adrp	x0, 100 ; 0x6c000
00000000000085f8	add	x0, x0, #0xbb0
00000000000085fc	ldr	x8, [x0]
0000000000008600	blr	x8
0000000000008604	ldr	x21, [x0]
0000000000008608	ldr	x8, [x21, #0x110]
000000000000860c	mov	x9, sp
0000000000008610	str	x9, [x21, #0x110]
0000000000008614	mov	x9, #0x400000000
0000000000008618	stp	x8, x9, [sp, #0x8]
000000000000861c	adr	x8, #0x7e427
0000000000008620	nop
0000000000008624	ldarb	w8, [x8]
0000000000008628	tbz	w8, #0x0, 0x8630
000000000000862c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008630	adrp	x8, 74 ; 0x52000
0000000000008634	ldrb	w8, [x8, #0xb60]
0000000000008638	cbnz	w8, 0x866c
000000000000863c	cbz	w20, 0x866c
0000000000008640	ldr	x8, [x21, #0x118]
0000000000008644	add	x0, x8, #0x70
0000000000008648	mov	w1, #0x18
000000000000864c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008650	adr	x8, #0x501d0
0000000000008654	nop
0000000000008658	str	x8, [x0, #0x10]!
000000000000865c	stur	xzr, [x0, #-0x8]
0000000000008660	str	x0, [sp, #0x18]
0000000000008664	strb	w20, [x0, #0x8]
0000000000008668	b	0x867c
000000000000866c	adr	x8, #0x58b14
0000000000008670	nop
0000000000008674	add	x0, x8, w20, uxtw #4
0000000000008678	str	x0, [x19]
000000000000867c	str	x0, [x19]
0000000000008680	ldr	x8, [sp, #0x8]
0000000000008684	str	x8, [x21, #0x110]
0000000000008688	ldp	x29, x30, [sp, #0x40]
000000000000868c	ldp	x20, x19, [sp, #0x30]
0000000000008690	ldp	x22, x21, [sp, #0x20]
0000000000008694	add	sp, sp, #0x50
0000000000008698	ret
_kfun:kotlin.Enum#compareTo(1:0){}kotlin.Int:
000000000000869c	stp	x20, x19, [sp, #-0x20]!
00000000000086a0	stp	x29, x30, [sp, #0x10]
00000000000086a4	add	x29, sp, #0x10
00000000000086a8	mov	x19, x1
00000000000086ac	mov	x20, x0
00000000000086b0	adr	x8, #0x7e393
00000000000086b4	nop
00000000000086b8	ldarb	w8, [x8]
00000000000086bc	tbz	w8, #0x0, 0x86c4
00000000000086c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000086c4	ldr	w8, [x20, #0x10]
00000000000086c8	ldr	w9, [x19, #0x10]
00000000000086cc	sub	w0, w8, w9
00000000000086d0	ldp	x29, x30, [sp, #0x10]
00000000000086d4	ldp	x20, x19, [sp], #0x20
00000000000086d8	ret
_kfun:kotlin.Enum#equals(kotlin.Any?){}kotlin.Boolean:
00000000000086dc	stp	x20, x19, [sp, #-0x20]!
00000000000086e0	stp	x29, x30, [sp, #0x10]
00000000000086e4	add	x29, sp, #0x10
00000000000086e8	mov	x19, x1
00000000000086ec	mov	x20, x0
00000000000086f0	adr	x8, #0x7e353
00000000000086f4	nop
00000000000086f8	ldarb	w8, [x8]
00000000000086fc	tbz	w8, #0x0, 0x8704
0000000000008700	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008704	cmp	x20, x19
0000000000008708	cset	w0, eq
000000000000870c	ldp	x29, x30, [sp, #0x10]
0000000000008710	ldp	x20, x19, [sp], #0x20
0000000000008714	ret
_kfun:kotlin.Enum#hashCode(){}kotlin.Int:
0000000000008718	stp	x20, x19, [sp, #-0x20]!
000000000000871c	stp	x29, x30, [sp, #0x10]
0000000000008720	add	x29, sp, #0x10
0000000000008724	mov	x19, x0
0000000000008728	adr	x8, #0x7e31b
000000000000872c	nop
0000000000008730	ldarb	w8, [x8]
0000000000008734	tbz	w8, #0x0, 0x873c
0000000000008738	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000873c	ldr	w0, [x19, #0x10]
0000000000008740	ldp	x29, x30, [sp, #0x10]
0000000000008744	ldp	x20, x19, [sp], #0x20
0000000000008748	ret
_kfun:kotlin.Enum#toString(){}kotlin.String:
000000000000874c	stp	x20, x19, [sp, #-0x20]!
0000000000008750	stp	x29, x30, [sp, #0x10]
0000000000008754	add	x29, sp, #0x10
0000000000008758	mov	x19, x1
000000000000875c	mov	x20, x0
0000000000008760	adr	x8, #0x7e2e3
0000000000008764	nop
0000000000008768	ldarb	w8, [x8]
000000000000876c	tbz	w8, #0x0, 0x8774
0000000000008770	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008774	ldr	x0, [x20, #0x8]
0000000000008778	str	x0, [x19]
000000000000877c	ldp	x29, x30, [sp, #0x10]
0000000000008780	ldp	x20, x19, [sp], #0x20
0000000000008784	ret
_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}:
0000000000008788	stp	x20, x19, [sp, #-0x20]!
000000000000878c	stp	x29, x30, [sp, #0x10]
0000000000008790	add	x29, sp, #0x10
0000000000008794	mov	x19, x1
0000000000008798	mov	x20, x0
000000000000879c	adr	x8, #0x7e2a7
00000000000087a0	nop
00000000000087a4	ldarb	w8, [x8]
00000000000087a8	tbz	w8, #0x0, 0x87b0
00000000000087ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000087b0	mov	x0, x20
00000000000087b4	mov	x1, x19
00000000000087b8	ldp	x29, x30, [sp, #0x10]
00000000000087bc	ldp	x20, x19, [sp], #0x20
00000000000087c0	b	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
_kfun:kotlin.Int#$<bridge-NBNB>compareTo(kotlin.Int){}kotlin.Int(kotlin.Any?){}kotlin.Int:
00000000000087c4	stp	x20, x19, [sp, #-0x20]!
00000000000087c8	stp	x29, x30, [sp, #0x10]
00000000000087cc	add	x29, sp, #0x10
00000000000087d0	mov	x19, x1
00000000000087d4	mov	x20, x0
00000000000087d8	adr	x8, #0x7e26b
00000000000087dc	nop
00000000000087e0	ldarb	w8, [x8]
00000000000087e4	tbz	w8, #0x0, 0x87ec
00000000000087e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000087ec	ldr	w8, [x20, #0x8]
00000000000087f0	ldr	w9, [x19, #0x8]
00000000000087f4	cmp	w8, w9
00000000000087f8	mov	w8, #-0x1
00000000000087fc	cneg	w8, w8, ge
0000000000008800	csel	w0, wzr, w8, eq
0000000000008804	ldp	x29, x30, [sp, #0x10]
0000000000008808	ldp	x20, x19, [sp], #0x20
000000000000880c	ret
_kfun:kotlin.Int#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000008810	stp	x20, x19, [sp, #-0x20]!
0000000000008814	stp	x29, x30, [sp, #0x10]
0000000000008818	add	x29, sp, #0x10
000000000000881c	mov	x19, x0
0000000000008820	adr	x8, #0x7e223
0000000000008824	nop
0000000000008828	ldarb	w8, [x8]
000000000000882c	tbz	w8, #0x0, 0x8834
0000000000008830	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008834	ldrsb	w0, [x19, #0x8]
0000000000008838	ldp	x29, x30, [sp, #0x10]
000000000000883c	ldp	x20, x19, [sp], #0x20
0000000000008840	ret
_kfun:kotlin.Int#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
0000000000008844	stp	x20, x19, [sp, #-0x20]!
0000000000008848	stp	x29, x30, [sp, #0x10]
000000000000884c	add	x29, sp, #0x10
0000000000008850	mov	x19, x0
0000000000008854	adr	x8, #0x7e1ef
0000000000008858	nop
000000000000885c	ldarb	w8, [x8]
0000000000008860	tbz	w8, #0x0, 0x8868
0000000000008864	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008868	ldrh	w0, [x19, #0x8]
000000000000886c	ldp	x29, x30, [sp, #0x10]
0000000000008870	ldp	x20, x19, [sp], #0x20
0000000000008874	ret
_kfun:kotlin.Int#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
0000000000008878	stp	x20, x19, [sp, #-0x20]!
000000000000887c	stp	x29, x30, [sp, #0x10]
0000000000008880	add	x29, sp, #0x10
0000000000008884	mov	x19, x0
0000000000008888	adr	x8, #0x7e1bb
000000000000888c	nop
0000000000008890	ldarb	w8, [x8]
0000000000008894	tbz	w8, #0x0, 0x889c
0000000000008898	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000889c	ldrsh	w0, [x19, #0x8]
00000000000088a0	ldp	x29, x30, [sp, #0x10]
00000000000088a4	ldp	x20, x19, [sp], #0x20
00000000000088a8	ret
_kfun:kotlin.Int#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
00000000000088ac	stp	x20, x19, [sp, #-0x20]!
00000000000088b0	stp	x29, x30, [sp, #0x10]
00000000000088b4	add	x29, sp, #0x10
00000000000088b8	mov	x19, x0
00000000000088bc	adr	x8, #0x7e187
00000000000088c0	nop
00000000000088c4	ldarb	w8, [x8]
00000000000088c8	tbz	w8, #0x0, 0x88d0
00000000000088cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000088d0	ldr	w0, [x19, #0x8]
00000000000088d4	ldp	x29, x30, [sp, #0x10]
00000000000088d8	ldp	x20, x19, [sp], #0x20
00000000000088dc	ret
_kfun:kotlin.Int#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
00000000000088e0	stp	x20, x19, [sp, #-0x20]!
00000000000088e4	stp	x29, x30, [sp, #0x10]
00000000000088e8	add	x29, sp, #0x10
00000000000088ec	mov	x19, x0
00000000000088f0	adr	x8, #0x7e153
00000000000088f4	nop
00000000000088f8	ldarb	w8, [x8]
00000000000088fc	tbz	w8, #0x0, 0x8904
0000000000008900	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008904	ldrsw	x0, [x19, #0x8]
0000000000008908	ldp	x29, x30, [sp, #0x10]
000000000000890c	ldp	x20, x19, [sp], #0x20
0000000000008910	ret
_kfun:kotlin.Int#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
0000000000008914	stp	x20, x19, [sp, #-0x20]!
0000000000008918	stp	x29, x30, [sp, #0x10]
000000000000891c	add	x29, sp, #0x10
0000000000008920	mov	x19, x0
0000000000008924	adr	x8, #0x7e11f
0000000000008928	nop
000000000000892c	ldarb	w8, [x8]
0000000000008930	tbz	w8, #0x0, 0x8938
0000000000008934	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008938	ldr	s0, [x19, #0x8]
000000000000893c	scvtf	s0, s0
0000000000008940	ldp	x29, x30, [sp, #0x10]
0000000000008944	ldp	x20, x19, [sp], #0x20
0000000000008948	ret
_kfun:kotlin.Int#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
000000000000894c	stp	x20, x19, [sp, #-0x20]!
0000000000008950	stp	x29, x30, [sp, #0x10]
0000000000008954	add	x29, sp, #0x10
0000000000008958	mov	x19, x0
000000000000895c	adr	x8, #0x7e0e7
0000000000008960	nop
0000000000008964	ldarb	w8, [x8]
0000000000008968	tbz	w8, #0x0, 0x8970
000000000000896c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008970	ldr	s0, [x19, #0x8]
0000000000008974	sshll.2d	v0, v0, #0x0
0000000000008978	scvtf	d0, d0
000000000000897c	ldp	x29, x30, [sp, #0x10]
0000000000008980	ldp	x20, x19, [sp], #0x20
0000000000008984	ret
_kfun:kotlin.Int#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000008988	stp	x20, x19, [sp, #-0x20]!
000000000000898c	stp	x29, x30, [sp, #0x10]
0000000000008990	add	x29, sp, #0x10
0000000000008994	mov	x19, x1
0000000000008998	mov	x20, x0
000000000000899c	adr	x8, #0x7e0a7
00000000000089a0	nop
00000000000089a4	ldarb	w8, [x8]
00000000000089a8	tbz	w8, #0x0, 0x89b0
00000000000089ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000089b0	cbz	x19, 0x89e8
00000000000089b4	ldr	w8, [x20, #0x8]
00000000000089b8	ldr	x9, [x19]
00000000000089bc	and	x9, x9, #0xfffffffffffffffc
00000000000089c0	ldr	x9, [x9]
00000000000089c4	ldr	w9, [x9, #0x5c]
00000000000089c8	cmp	w9, #0x69
00000000000089cc	b.ne	0x89e8
00000000000089d0	ldr	w9, [x19, #0x8]
00000000000089d4	cmp	w9, w8
00000000000089d8	cset	w0, eq
00000000000089dc	ldp	x29, x30, [sp, #0x10]
00000000000089e0	ldp	x20, x19, [sp], #0x20
00000000000089e4	ret
00000000000089e8	mov	w0, #0x0
00000000000089ec	ldp	x29, x30, [sp, #0x10]
00000000000089f0	ldp	x20, x19, [sp], #0x20
00000000000089f4	ret
_kfun:kotlin.Int#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
00000000000089f8	sub	sp, sp, #0x40
00000000000089fc	stp	x20, x19, [sp, #0x20]
0000000000008a00	stp	x29, x30, [sp, #0x30]
0000000000008a04	add	x29, sp, #0x30
0000000000008a08	mov	x19, x1
0000000000008a0c	mov	x20, x0
0000000000008a10	adr	x8, #0x7e033
0000000000008a14	nop
0000000000008a18	ldarb	w8, [x8]
0000000000008a1c	tbz	w8, #0x0, 0x8a24
0000000000008a20	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008a24	ldr	w8, [x20, #0x8]
0000000000008a28	str	x8, [sp]
0000000000008a2c	adr	x2, #0x4e267 ; literal pool for: "%d"
0000000000008a30	nop
0000000000008a34	add	x0, sp, #0x10
0000000000008a38	mov	w1, #0x10
0000000000008a3c	bl	__ZN5konan8snprintfEPcmPKcz
0000000000008a40	add	x0, sp, #0x10
0000000000008a44	mov	x1, x19
0000000000008a48	bl	_CreateStringFromCString
0000000000008a4c	str	x0, [x19]
0000000000008a50	ldp	x29, x30, [sp, #0x30]
0000000000008a54	ldp	x20, x19, [sp, #0x20]
0000000000008a58	add	sp, sp, #0x40
0000000000008a5c	ret
_kfun:kotlin.Int#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000008a60	stp	x20, x19, [sp, #-0x20]!
0000000000008a64	stp	x29, x30, [sp, #0x10]
0000000000008a68	add	x29, sp, #0x10
0000000000008a6c	mov	x19, x0
0000000000008a70	adr	x8, #0x7dfd3
0000000000008a74	nop
0000000000008a78	ldarb	w8, [x8]
0000000000008a7c	tbz	w8, #0x0, 0x8a84
0000000000008a80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008a84	ldr	w0, [x19, #0x8]
0000000000008a88	ldp	x29, x30, [sp, #0x10]
0000000000008a8c	ldp	x20, x19, [sp], #0x20
0000000000008a90	ret
_kfun:kotlin.Double#$<bridge-NBNB>compareTo(kotlin.Double){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000008a94	stp	x20, x19, [sp, #-0x20]!
0000000000008a98	stp	x29, x30, [sp, #0x10]
0000000000008a9c	add	x29, sp, #0x10
0000000000008aa0	mov	x19, x1
0000000000008aa4	mov	x20, x0
0000000000008aa8	adr	x8, #0x7df9b
0000000000008aac	nop
0000000000008ab0	ldarb	w8, [x8]
0000000000008ab4	tbz	w8, #0x0, 0x8abc
0000000000008ab8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008abc	ldr	d1, [x20, #0x8]
0000000000008ac0	ldr	d0, [x19, #0x8]
0000000000008ac4	fcmp	d1, d0
0000000000008ac8	b.le	0x8adc
0000000000008acc	mov	w0, #0x1
0000000000008ad0	ldp	x29, x30, [sp, #0x10]
0000000000008ad4	ldp	x20, x19, [sp], #0x20
0000000000008ad8	ret
0000000000008adc	mov	w0, #-0x1
0000000000008ae0	b.mi	0x8ad0
0000000000008ae4	fmov	x8, d1
0000000000008ae8	fcmp	d1, d1
0000000000008aec	mov	x9, #0x7ff8000000000000
0000000000008af0	csel	x8, x9, x8, vs
0000000000008af4	fmov	x10, d0
0000000000008af8	fcmp	d0, d0
0000000000008afc	csel	x9, x9, x10, vs
0000000000008b00	cmp	x8, x9
0000000000008b04	cneg	w8, w0, ge
0000000000008b08	csel	w0, wzr, w8, eq
0000000000008b0c	ldp	x29, x30, [sp, #0x10]
0000000000008b10	ldp	x20, x19, [sp], #0x20
0000000000008b14	ret
_kfun:kotlin.Double#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000008b18	stp	x20, x19, [sp, #-0x20]!
0000000000008b1c	stp	x29, x30, [sp, #0x10]
0000000000008b20	add	x29, sp, #0x10
0000000000008b24	mov	x19, x0
0000000000008b28	adr	x8, #0x7df1b
0000000000008b2c	nop
0000000000008b30	ldarb	w8, [x8]
0000000000008b34	tbz	w8, #0x0, 0x8b3c
0000000000008b38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008b3c	ldr	d0, [x19, #0x8]
0000000000008b40	fcmp	d0, d0
0000000000008b44	b.vs	0x8b94
0000000000008b48	mov	x8, #0xffffffc00000
0000000000008b4c	movk	x8, #0x41df, lsl #48
0000000000008b50	fmov	d1, x8
0000000000008b54	fcmp	d0, d1
0000000000008b58	b.ge	0x8b80
0000000000008b5c	mov	x8, #-0x3e20000000000000
0000000000008b60	fmov	d1, x8
0000000000008b64	fcmp	d0, d1
0000000000008b68	b.ls	0x8b94
0000000000008b6c	fcvtzs	w8, d0
0000000000008b70	sxtb	w0, w8
0000000000008b74	ldp	x29, x30, [sp, #0x10]
0000000000008b78	ldp	x20, x19, [sp], #0x20
0000000000008b7c	ret
0000000000008b80	mov	w8, #0xff
0000000000008b84	sxtb	w0, w8
0000000000008b88	ldp	x29, x30, [sp, #0x10]
0000000000008b8c	ldp	x20, x19, [sp], #0x20
0000000000008b90	ret
0000000000008b94	mov	w8, #0x0
0000000000008b98	sxtb	w0, w8
0000000000008b9c	ldp	x29, x30, [sp, #0x10]
0000000000008ba0	ldp	x20, x19, [sp], #0x20
0000000000008ba4	ret
_kfun:kotlin.Double#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
0000000000008ba8	stp	x20, x19, [sp, #-0x20]!
0000000000008bac	stp	x29, x30, [sp, #0x10]
0000000000008bb0	add	x29, sp, #0x10
0000000000008bb4	mov	x19, x0
0000000000008bb8	adr	x8, #0x7de8b
0000000000008bbc	nop
0000000000008bc0	ldarb	w8, [x8]
0000000000008bc4	tbz	w8, #0x0, 0x8bcc
0000000000008bc8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008bcc	ldr	d0, [x19, #0x8]
0000000000008bd0	fcmp	d0, d0
0000000000008bd4	b.vs	0x8c24
0000000000008bd8	mov	x8, #0xffffffc00000
0000000000008bdc	movk	x8, #0x41df, lsl #48
0000000000008be0	fmov	d1, x8
0000000000008be4	fcmp	d0, d1
0000000000008be8	b.ge	0x8c10
0000000000008bec	mov	x8, #-0x3e20000000000000
0000000000008bf0	fmov	d1, x8
0000000000008bf4	fcmp	d0, d1
0000000000008bf8	b.ls	0x8c24
0000000000008bfc	fcvtzs	w8, d0
0000000000008c00	and	w0, w8, #0xffff
0000000000008c04	ldp	x29, x30, [sp, #0x10]
0000000000008c08	ldp	x20, x19, [sp], #0x20
0000000000008c0c	ret
0000000000008c10	mov	w8, #0xffff
0000000000008c14	and	w0, w8, #0xffff
0000000000008c18	ldp	x29, x30, [sp, #0x10]
0000000000008c1c	ldp	x20, x19, [sp], #0x20
0000000000008c20	ret
0000000000008c24	mov	w8, #0x0
0000000000008c28	and	w0, w8, #0xffff
0000000000008c2c	ldp	x29, x30, [sp, #0x10]
0000000000008c30	ldp	x20, x19, [sp], #0x20
0000000000008c34	ret
_kfun:kotlin.Double#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
0000000000008c38	stp	x20, x19, [sp, #-0x20]!
0000000000008c3c	stp	x29, x30, [sp, #0x10]
0000000000008c40	add	x29, sp, #0x10
0000000000008c44	mov	x19, x0
0000000000008c48	adr	x8, #0x7ddfb
0000000000008c4c	nop
0000000000008c50	ldarb	w8, [x8]
0000000000008c54	tbz	w8, #0x0, 0x8c5c
0000000000008c58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008c5c	ldr	d0, [x19, #0x8]
0000000000008c60	fcmp	d0, d0
0000000000008c64	b.vs	0x8cb4
0000000000008c68	mov	x8, #0xffffffc00000
0000000000008c6c	movk	x8, #0x41df, lsl #48
0000000000008c70	fmov	d1, x8
0000000000008c74	fcmp	d0, d1
0000000000008c78	b.ge	0x8ca0
0000000000008c7c	mov	x8, #-0x3e20000000000000
0000000000008c80	fmov	d1, x8
0000000000008c84	fcmp	d0, d1
0000000000008c88	b.ls	0x8cb4
0000000000008c8c	fcvtzs	w8, d0
0000000000008c90	sxth	w0, w8
0000000000008c94	ldp	x29, x30, [sp, #0x10]
0000000000008c98	ldp	x20, x19, [sp], #0x20
0000000000008c9c	ret
0000000000008ca0	mov	w8, #0xffff
0000000000008ca4	sxth	w0, w8
0000000000008ca8	ldp	x29, x30, [sp, #0x10]
0000000000008cac	ldp	x20, x19, [sp], #0x20
0000000000008cb0	ret
0000000000008cb4	mov	w8, #0x0
0000000000008cb8	sxth	w0, w8
0000000000008cbc	ldp	x29, x30, [sp, #0x10]
0000000000008cc0	ldp	x20, x19, [sp], #0x20
0000000000008cc4	ret
_kfun:kotlin.Double#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
0000000000008cc8	stp	x20, x19, [sp, #-0x20]!
0000000000008ccc	stp	x29, x30, [sp, #0x10]
0000000000008cd0	add	x29, sp, #0x10
0000000000008cd4	mov	x19, x0
0000000000008cd8	adr	x8, #0x7dd6b
0000000000008cdc	nop
0000000000008ce0	ldarb	w8, [x8]
0000000000008ce4	tbz	w8, #0x0, 0x8cec
0000000000008ce8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008cec	ldr	d0, [x19, #0x8]
0000000000008cf0	fcmp	d0, d0
0000000000008cf4	b.vs	0x8d4c
0000000000008cf8	mov	x8, #0xffffffc00000
0000000000008cfc	movk	x8, #0x41df, lsl #48
0000000000008d00	fmov	d1, x8
0000000000008d04	fcmp	d0, d1
0000000000008d08	b.ge	0x8d2c
0000000000008d0c	mov	x8, #-0x3e20000000000000
0000000000008d10	fmov	d1, x8
0000000000008d14	fcmp	d0, d1
0000000000008d18	b.ls	0x8d3c
0000000000008d1c	fcvtzs	w0, d0
0000000000008d20	ldp	x29, x30, [sp, #0x10]
0000000000008d24	ldp	x20, x19, [sp], #0x20
0000000000008d28	ret
0000000000008d2c	mov	w0, #0x7fffffff
0000000000008d30	ldp	x29, x30, [sp, #0x10]
0000000000008d34	ldp	x20, x19, [sp], #0x20
0000000000008d38	ret
0000000000008d3c	mov	w0, #-0x80000000
0000000000008d40	ldp	x29, x30, [sp, #0x10]
0000000000008d44	ldp	x20, x19, [sp], #0x20
0000000000008d48	ret
0000000000008d4c	mov	w0, #0x0
0000000000008d50	ldp	x29, x30, [sp, #0x10]
0000000000008d54	ldp	x20, x19, [sp], #0x20
0000000000008d58	ret
_kfun:kotlin.Double#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
0000000000008d5c	stp	x20, x19, [sp, #-0x20]!
0000000000008d60	stp	x29, x30, [sp, #0x10]
0000000000008d64	add	x29, sp, #0x10
0000000000008d68	mov	x19, x0
0000000000008d6c	adr	x8, #0x7dcd7
0000000000008d70	nop
0000000000008d74	ldarb	w8, [x8]
0000000000008d78	tbz	w8, #0x0, 0x8d80
0000000000008d7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008d80	ldr	d0, [x19, #0x8]
0000000000008d84	fcmp	d0, d0
0000000000008d88	b.vs	0x8ddc
0000000000008d8c	mov	x8, #0x43e0000000000000
0000000000008d90	fmov	d1, x8
0000000000008d94	fcmp	d0, d1
0000000000008d98	b.ge	0x8dbc
0000000000008d9c	mov	x8, #-0x3c20000000000000
0000000000008da0	fmov	d1, x8
0000000000008da4	fcmp	d0, d1
0000000000008da8	b.ls	0x8dcc
0000000000008dac	fcvtzs	x0, d0
0000000000008db0	ldp	x29, x30, [sp, #0x10]
0000000000008db4	ldp	x20, x19, [sp], #0x20
0000000000008db8	ret
0000000000008dbc	mov	x0, #0x7fffffffffffffff
0000000000008dc0	ldp	x29, x30, [sp, #0x10]
0000000000008dc4	ldp	x20, x19, [sp], #0x20
0000000000008dc8	ret
0000000000008dcc	mov	x0, #-0x8000000000000000
0000000000008dd0	ldp	x29, x30, [sp, #0x10]
0000000000008dd4	ldp	x20, x19, [sp], #0x20
0000000000008dd8	ret
0000000000008ddc	mov	x0, #0x0
0000000000008de0	ldp	x29, x30, [sp, #0x10]
0000000000008de4	ldp	x20, x19, [sp], #0x20
0000000000008de8	ret
_kfun:kotlin.Double#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
0000000000008dec	stp	x20, x19, [sp, #-0x20]!
0000000000008df0	stp	x29, x30, [sp, #0x10]
0000000000008df4	add	x29, sp, #0x10
0000000000008df8	mov	x19, x0
0000000000008dfc	adr	x8, #0x7dc47
0000000000008e00	nop
0000000000008e04	ldarb	w8, [x8]
0000000000008e08	tbz	w8, #0x0, 0x8e10
0000000000008e0c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008e10	ldr	d0, [x19, #0x8]
0000000000008e14	fcvt	s0, d0
0000000000008e18	ldp	x29, x30, [sp, #0x10]
0000000000008e1c	ldp	x20, x19, [sp], #0x20
0000000000008e20	ret
_kfun:kotlin.Double#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
0000000000008e24	stp	x20, x19, [sp, #-0x20]!
0000000000008e28	stp	x29, x30, [sp, #0x10]
0000000000008e2c	add	x29, sp, #0x10
0000000000008e30	mov	x19, x0
0000000000008e34	adr	x8, #0x7dc0f
0000000000008e38	nop
0000000000008e3c	ldarb	w8, [x8]
0000000000008e40	tbz	w8, #0x0, 0x8e48
0000000000008e44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008e48	ldr	d0, [x19, #0x8]
0000000000008e4c	ldp	x29, x30, [sp, #0x10]
0000000000008e50	ldp	x20, x19, [sp], #0x20
0000000000008e54	ret
_kfun:kotlin.Double#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000008e58	stp	x20, x19, [sp, #-0x20]!
0000000000008e5c	stp	x29, x30, [sp, #0x10]
0000000000008e60	add	x29, sp, #0x10
0000000000008e64	mov	x19, x1
0000000000008e68	mov	x20, x0
0000000000008e6c	adr	x8, #0x7dbd7
0000000000008e70	nop
0000000000008e74	ldarb	w8, [x8]
0000000000008e78	tbz	w8, #0x0, 0x8e80
0000000000008e7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008e80	cbz	x19, 0x8ed4
0000000000008e84	ldr	d0, [x20, #0x8]
0000000000008e88	ldr	x8, [x19]
0000000000008e8c	and	x8, x8, #0xfffffffffffffffc
0000000000008e90	ldr	x8, [x8]
0000000000008e94	ldr	w8, [x8, #0x5c]
0000000000008e98	cmp	w8, #0x6a
0000000000008e9c	b.ne	0x8ed4
0000000000008ea0	ldr	d1, [x19, #0x8]
0000000000008ea4	fmov	x8, d0
0000000000008ea8	fcmp	d0, d0
0000000000008eac	mov	x9, #0x7ff8000000000000
0000000000008eb0	csel	x8, x9, x8, vs
0000000000008eb4	fcmp	d1, d1
0000000000008eb8	fmov	x10, d1
0000000000008ebc	csel	x9, x9, x10, vs
0000000000008ec0	cmp	x8, x9
0000000000008ec4	cset	w0, eq
0000000000008ec8	ldp	x29, x30, [sp, #0x10]
0000000000008ecc	ldp	x20, x19, [sp], #0x20
0000000000008ed0	ret
0000000000008ed4	mov	w0, #0x0
0000000000008ed8	ldp	x29, x30, [sp, #0x10]
0000000000008edc	ldp	x20, x19, [sp], #0x20
0000000000008ee0	ret
_kfun:kotlin.Double#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000008ee4	sub	sp, sp, #0xf0
0000000000008ee8	stp	d9, d8, [sp, #0x80]
0000000000008eec	stp	x28, x27, [sp, #0x90]
0000000000008ef0	stp	x26, x25, [sp, #0xa0]
0000000000008ef4	stp	x24, x23, [sp, #0xb0]
0000000000008ef8	stp	x22, x21, [sp, #0xc0]
0000000000008efc	stp	x20, x19, [sp, #0xd0]
0000000000008f00	stp	x29, x30, [sp, #0xe0]
0000000000008f04	add	x29, sp, #0xe0
0000000000008f08	mov	x19, x1
0000000000008f0c	mov	x20, x0
0000000000008f10	adr	x26, #0x7db33
0000000000008f14	nop
0000000000008f18	ldarb	w8, [x26]
0000000000008f1c	tbz	w8, #0x0, 0x8f24
0000000000008f20	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008f24	ldr	d8, [x20, #0x8]
0000000000008f28	movi.16b	v0, #0x0
0000000000008f2c	stp	q0, q0, [sp, #0x10]
0000000000008f30	adrp	x23, 100 ; 0x6c000
0000000000008f34	add	x23, x23, #0xbb0
0000000000008f38	ldr	x25, [x23]
0000000000008f3c	mov	x0, x23
0000000000008f40	blr	x25
0000000000008f44	ldr	x8, [x0]
0000000000008f48	ldr	x9, [x8, #0x110]
0000000000008f4c	add	x10, sp, #0x10
0000000000008f50	str	x10, [x8, #0x110]
0000000000008f54	mov	x24, #0x400000000
0000000000008f58	stp	x9, x24, [sp, #0x18]
0000000000008f5c	adr	x27, #0x7db54
0000000000008f60	nop
0000000000008f64	ldar	x8, [x27]
0000000000008f68	cmp	x8, #0x2
0000000000008f6c	b.hs	0x915c
0000000000008f70	mov	x0, x23
0000000000008f74	blr	x25
0000000000008f78	ldr	x28, [x0]
0000000000008f7c	ldp	x8, x9, [x28, #0x120]
0000000000008f80	cmp	x8, x9
0000000000008f84	b.eq	0x8fa4
0000000000008f88	mov	x10, x9
0000000000008f8c	ldr	x11, [x10, #-0x10]!
0000000000008f90	cmp	x11, x27
0000000000008f94	b.eq	0x9068
0000000000008f98	mov	x9, x10
0000000000008f9c	cmp	x10, x8
0000000000008fa0	b.ne	0x8f8c
0000000000008fa4	add	x21, x28, #0x120
0000000000008fa8	add	x0, x28, #0x138
0000000000008fac	mov	w9, #0x1
0000000000008fb0	ldaxr	w8, [x0]
0000000000008fb4	stlxr	w10, w9, [x0]
0000000000008fb8	cbnz	w10, 0x8fb0
0000000000008fbc	b	0x8fcc
0000000000008fc0	mov	w23, #0x1
0000000000008fc4	stlxr	w9, x23, [x27]
0000000000008fc8	cbz	w9, 0x8fdc
0000000000008fcc	ldaxr	x22, [x27]
0000000000008fd0	cbz	x22, 0x8fc0
0000000000008fd4	mov	w23, #0x0
0000000000008fd8	clrex
0000000000008fdc	cmp	x22, #0x1
0000000000008fe0	b.eq	0x8fcc
0000000000008fe4	cbz	x28, 0x9010
0000000000008fe8	ldaxr	w9, [x0]
0000000000008fec	stlxr	w10, w8, [x0]
0000000000008ff0	cbnz	w10, 0x8fe8
0000000000008ff4	cbnz	w8, 0x9010
0000000000008ff8	cmp	w9, #0x1
0000000000008ffc	b.ne	0x9010
0000000000009000	ldarb	w8, [x26]
0000000000009004	tbz	w8, #0x0, 0x9010
0000000000009008	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000900c	movi.16b	v0, #0x0
0000000000009010	tbz	w23, #0x0, 0x9058
0000000000009014	ldr	x8, [x28, #0x118]
0000000000009018	add	x0, x8, #0x70
000000000000901c	mov	w1, #0x20
0000000000009020	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000009024	mov	x22, x0
0000000000009028	adr	x8, #0x51238
000000000000902c	nop
0000000000009030	str	x8, [x22, #0x10]!
0000000000009034	stur	xzr, [x22, #-0x8]
0000000000009038	str	x22, [sp, #0x28]
000000000000903c	ldp	x9, x8, [x28, #0x128]
0000000000009040	cmp	x9, x8
0000000000009044	b.hs	0x9074
0000000000009048	stp	x27, x22, [x9]
000000000000904c	add	x8, x9, #0x10
0000000000009050	str	x8, [x28, #0x128]
0000000000009054	b	0x9104
0000000000009058	str	x22, [sp, #0x28]
000000000000905c	adrp	x23, 99 ; 0x6c000
0000000000009060	add	x23, x23, #0xbb0
0000000000009064	b	0x915c
0000000000009068	ldur	x8, [x9, #-0x8]
000000000000906c	str	x8, [sp, #0x28]
0000000000009070	b	0x915c
0000000000009074	str	x21, [sp, #0x8]
0000000000009078	ldr	x10, [x21]
000000000000907c	sub	x9, x9, x10
0000000000009080	asr	x21, x9, #4
0000000000009084	add	x9, x21, #0x1
0000000000009088	lsr	x11, x9, #60
000000000000908c	cbnz	x11, 0x93a0
0000000000009090	sub	x8, x8, x10
0000000000009094	asr	x10, x8, #3
0000000000009098	cmp	x10, x9
000000000000909c	csel	x9, x9, x10, lo
00000000000090a0	mov	x10, #0x7ffffffffffffff
00000000000090a4	cmp	x10, x8, asr #4
00000000000090a8	mov	x8, #0xfffffffffffffff
00000000000090ac	csel	x23, x9, x8, hi
00000000000090b0	mov	x0, x23
00000000000090b4	mov	w1, #0x10
00000000000090b8	bl	0x519e0 ; symbol stub for: _calloc
00000000000090bc	add	x8, x0, x21, lsl #4
00000000000090c0	add	x20, x0, x23, lsl #4
00000000000090c4	stp	x27, x22, [x8]
00000000000090c8	add	x21, x8, #0x10
00000000000090cc	ldp	x1, x9, [x28, #0x120]
00000000000090d0	sub	x2, x9, x1
00000000000090d4	sub	x23, x8, x2
00000000000090d8	cmp	x2, #0x1
00000000000090dc	b.lt	0x90f0
00000000000090e0	mov	x0, x23
00000000000090e4	bl	0x51aac ; symbol stub for: _memcpy
00000000000090e8	ldr	x8, [sp, #0x8]
00000000000090ec	ldr	x1, [x8]
00000000000090f0	stp	x23, x21, [x28, #0x120]
00000000000090f4	str	x20, [x28, #0x130]
00000000000090f8	cbz	x1, 0x9104
00000000000090fc	mov	x0, x1
0000000000009100	bl	0x51a64 ; symbol stub for: _free
0000000000009104	mov	x0, x22
0000000000009108	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
000000000000910c	adrp	x23, 99 ; 0x6c000
0000000000009110	add	x23, x23, #0xbb0
0000000000009114	mov	w0, #0x1
0000000000009118	mov	w1, #0x28
000000000000911c	bl	0x519e0 ; symbol stub for: _calloc
0000000000009120	ldr	x8, [x28, #0x18]!
0000000000009124	sub	x9, x28, #0x8
0000000000009128	stp	x27, x9, [x0, #0x10]
000000000000912c	stp	x8, x28, [x0]
0000000000009130	str	x0, [x8, #0x8]
0000000000009134	str	x0, [x28]
0000000000009138	ldr	x8, [x28, #0x10]
000000000000913c	add	x8, x8, #0x1
0000000000009140	str	x8, [x28, #0x10]
0000000000009144	str	x0, [x0, #0x20]
0000000000009148	stlr	x22, [x27]
000000000000914c	ldr	x8, [x28, #0x110]
0000000000009150	sub	x8, x8, #0x10
0000000000009154	str	x8, [x28, #0x110]
0000000000009158	movi.16b	v0, #0x0
000000000000915c	stp	q0, q0, [sp, #0x30]
0000000000009160	add	x9, sp, #0x30
0000000000009164	add	x8, x9, #0x18
0000000000009168	mov	x0, x23
000000000000916c	blr	x25
0000000000009170	mov	x21, x0
0000000000009174	ldr	x10, [x0]
0000000000009178	ldr	x11, [x10, #0x110]
000000000000917c	str	x9, [x10, #0x110]
0000000000009180	stp	x11, x24, [sp, #0x38]
0000000000009184	mov	x0, x8
0000000000009188	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion.<get-converter>#internal"
000000000000918c	movi.16b	v0, #0x0
0000000000009190	stp	q0, q0, [sp, #0x50]
0000000000009194	str	xzr, [sp, #0x70]
0000000000009198	add	x27, sp, #0x50
000000000000919c	ldr	x8, [x21]
00000000000091a0	ldr	x9, [x8, #0x110]
00000000000091a4	str	x27, [x8, #0x110]
00000000000091a8	mov	x8, #0x500000000
00000000000091ac	stp	x9, x8, [sp, #0x58]
00000000000091b0	adr	x8, #0x5c5c0
00000000000091b4	nop
00000000000091b8	adr	x9, #0x5c020
00000000000091bc	nop
00000000000091c0	fmov	x10, d8
00000000000091c4	cmp	x10, #0x0
00000000000091c8	csel	x21, x9, x8, ge
00000000000091cc	ubfx	x28, x10, #52, #11
00000000000091d0	and	x20, x10, #0xfffffffffffff
00000000000091d4	cmp	w28, #0x7ff
00000000000091d8	b.ne	0x91ec
00000000000091dc	cbz	x20, 0x9214
00000000000091e0	adr	x8, #0x5c5d0
00000000000091e4	nop
00000000000091e8	b	0x933c
00000000000091ec	mov	x22, x0
00000000000091f0	cbz	w28, 0x9220
00000000000091f4	orr	x1, x20, #0x10000000000000
00000000000091f8	sub	w2, w28, #0x433
00000000000091fc	cmp	w28, #0x3f9
0000000000009200	b.lo	0x9238
0000000000009204	cmp	w28, #0x439
0000000000009208	b.lo	0x924c
000000000000920c	mov	w24, #0x34
0000000000009210	b	0x9268
0000000000009214	adr	x1, #0x5c57c
0000000000009218	nop
000000000000921c	b	0x932c
0000000000009220	cbz	x20, 0x9270
0000000000009224	cmp	x20, #0x1
0000000000009228	b.ne	0x927c
000000000000922c	adr	x1, #0x5c5c4
0000000000009230	nop
0000000000009234	b	0x932c
0000000000009238	mov	w24, #0x34
000000000000923c	cmn	w2, #0x3b
0000000000009240	b.ne	0x9268
0000000000009244	cbz	x20, 0x9268
0000000000009248	mov	w2, #-0x3b
000000000000924c	cmp	x20, #0x0
0000000000009250	cset	w4, eq
0000000000009254	mov	x0, x22
0000000000009258	mov	w3, #0x0
000000000000925c	mov	w5, #0x34
0000000000009260	bl	"_kfun:kotlin.native.internal.NumberConverter.longDigitGenerator#internal"
0000000000009264	b	0x92c8
0000000000009268	mov	x20, x1
000000000000926c	b	0x92b0
0000000000009270	adr	x1, #0x5c560
0000000000009274	nop
0000000000009278	b	0x932c
000000000000927c	mov	w24, #0x34
0000000000009280	mov	x23, x20
0000000000009284	b	0x9290
0000000000009288	lsl	x23, x23, #1
000000000000928c	sub	w24, w24, #0x1
0000000000009290	tbnz	x23, #0x34, 0x92a4
0000000000009294	ldarb	w8, [x26]
0000000000009298	tbz	w8, #0x0, 0x9288
000000000000929c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000092a0	b	0x9288
00000000000092a4	mov	w2, #-0x432
00000000000092a8	adrp	x23, 99 ; 0x6c000
00000000000092ac	add	x23, x23, #0xbb0
00000000000092b0	cmp	w28, #0x0
00000000000092b4	cset	w3, eq
00000000000092b8	mov	x0, x22
00000000000092bc	mov	x1, x20
00000000000092c0	mov	x4, x24
00000000000092c4	bl	"_kfun:kotlin.native.internal.NumberConverter.bigIntDigitGeneratorInstImpl#internal"
00000000000092c8	mov	x8, #0x12d000000000
00000000000092cc	movk	x8, #0x4163, lsl #48
00000000000092d0	fmov	d0, x8
00000000000092d4	fcmp	d8, d0
00000000000092d8	mov	x8, #0x12d000000000
00000000000092dc	movk	x8, #0xc163, lsl #48
00000000000092e0	fmov	d0, x8
00000000000092e4	fccmp	d8, d0, #0x0, lt
00000000000092e8	b.ls	0x930c
00000000000092ec	nop
00000000000092f0	ldr	d0, 0x52400
00000000000092f4	fcmp	d8, d0
00000000000092f8	b.le	0x931c
00000000000092fc	nop
0000000000009300	ldr	d0, 0x52408
0000000000009304	fcmp	d8, d0
0000000000009308	b.pl	0x931c
000000000000930c	add	x1, x27, #0x18
0000000000009310	mov	x0, x22
0000000000009314	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormatExponential#internal"
0000000000009318	b	0x9328
000000000000931c	add	x1, x27, #0x20
0000000000009320	mov	x0, x22
0000000000009324	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormat#internal"
0000000000009328	mov	x1, x0
000000000000932c	mov	x0, x21
0000000000009330	mov	x2, x19
0000000000009334	bl	_Kotlin_String_plusImpl
0000000000009338	mov	x8, x0
000000000000933c	str	x8, [x19]
0000000000009340	mov	x0, x23
0000000000009344	blr	x25
0000000000009348	ldr	x9, [x0]
000000000000934c	ldr	x10, [sp, #0x58]
0000000000009350	str	x10, [x9, #0x110]
0000000000009354	str	x8, [x19]
0000000000009358	ldr	x9, [x0]
000000000000935c	ldr	x10, [sp, #0x38]
0000000000009360	str	x10, [x9, #0x110]
0000000000009364	str	x8, [x19]
0000000000009368	ldr	x9, [x0]
000000000000936c	ldr	x10, [sp, #0x18]
0000000000009370	str	x10, [x9, #0x110]
0000000000009374	str	x8, [x19]
0000000000009378	mov	x0, x8
000000000000937c	ldp	x29, x30, [sp, #0xe0]
0000000000009380	ldp	x20, x19, [sp, #0xd0]
0000000000009384	ldp	x22, x21, [sp, #0xc0]
0000000000009388	ldp	x24, x23, [sp, #0xb0]
000000000000938c	ldp	x26, x25, [sp, #0xa0]
0000000000009390	ldp	x28, x27, [sp, #0x90]
0000000000009394	ldp	d9, d8, [sp, #0x80]
0000000000009398	add	sp, sp, #0xf0
000000000000939c	ret
00000000000093a0	ldr	x0, [sp, #0x8]
00000000000093a4	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000093a8	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
00000000000093ac	str	xzr, [sp, #0x28]
00000000000093b0	stlr	xzr, [x27]
00000000000093b4	ldr	x8, [x28, #0x128]
00000000000093b8	sub	x8, x8, #0x10
00000000000093bc	str	x8, [x28, #0x128]
00000000000093c0	bl	0x51968 ; symbol stub for: ___cxa_rethrow
00000000000093c4	brk	#0x1
00000000000093c8	mov	x19, x0
00000000000093cc	bl	0x51944 ; symbol stub for: ___cxa_end_catch
00000000000093d0	mov	x0, x19
00000000000093d4	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.Double#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
00000000000093d8	stp	x20, x19, [sp, #-0x20]!
00000000000093dc	stp	x29, x30, [sp, #0x10]
00000000000093e0	add	x29, sp, #0x10
00000000000093e4	mov	x19, x0
00000000000093e8	adr	x8, #0x7d65b
00000000000093ec	nop
00000000000093f0	ldarb	w8, [x8]
00000000000093f4	tbz	w8, #0x0, 0x93fc
00000000000093f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000093fc	ldr	d0, [x19, #0x8]
0000000000009400	fcmp	d0, d0
0000000000009404	fmov	x8, d0
0000000000009408	mov	x9, #0x7ff8000000000000
000000000000940c	csel	x8, x9, x8, vs
0000000000009410	lsr	x9, x8, #32
0000000000009414	eor	w0, w9, w8
0000000000009418	ldp	x29, x30, [sp, #0x10]
000000000000941c	ldp	x20, x19, [sp], #0x20
0000000000009420	ret
_kfun:kotlin.Long#$<bridge-NBNB>compareTo(kotlin.Long){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000009424	stp	x20, x19, [sp, #-0x20]!
0000000000009428	stp	x29, x30, [sp, #0x10]
000000000000942c	add	x29, sp, #0x10
0000000000009430	mov	x19, x1
0000000000009434	mov	x20, x0
0000000000009438	adr	x8, #0x7d60b
000000000000943c	nop
0000000000009440	ldarb	w8, [x8]
0000000000009444	tbz	w8, #0x0, 0x944c
0000000000009448	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000944c	ldr	x8, [x20, #0x8]
0000000000009450	ldr	x9, [x19, #0x8]
0000000000009454	cmp	x8, x9
0000000000009458	mov	w8, #-0x1
000000000000945c	cneg	w8, w8, ge
0000000000009460	csel	w0, wzr, w8, eq
0000000000009464	ldp	x29, x30, [sp, #0x10]
0000000000009468	ldp	x20, x19, [sp], #0x20
000000000000946c	ret
_kfun:kotlin.Long#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000009470	stp	x20, x19, [sp, #-0x20]!
0000000000009474	stp	x29, x30, [sp, #0x10]
0000000000009478	add	x29, sp, #0x10
000000000000947c	mov	x19, x0
0000000000009480	adr	x8, #0x7d5c3
0000000000009484	nop
0000000000009488	ldarb	w8, [x8]
000000000000948c	tbz	w8, #0x0, 0x9494
0000000000009490	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009494	ldrsb	w0, [x19, #0x8]
0000000000009498	ldp	x29, x30, [sp, #0x10]
000000000000949c	ldp	x20, x19, [sp], #0x20
00000000000094a0	ret
_kfun:kotlin.Long#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
00000000000094a4	stp	x20, x19, [sp, #-0x20]!
00000000000094a8	stp	x29, x30, [sp, #0x10]
00000000000094ac	add	x29, sp, #0x10
00000000000094b0	mov	x19, x0
00000000000094b4	adr	x8, #0x7d58f
00000000000094b8	nop
00000000000094bc	ldarb	w8, [x8]
00000000000094c0	tbz	w8, #0x0, 0x94c8
00000000000094c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000094c8	ldrh	w0, [x19, #0x8]
00000000000094cc	ldp	x29, x30, [sp, #0x10]
00000000000094d0	ldp	x20, x19, [sp], #0x20
00000000000094d4	ret
_kfun:kotlin.Long#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
00000000000094d8	stp	x20, x19, [sp, #-0x20]!
00000000000094dc	stp	x29, x30, [sp, #0x10]
00000000000094e0	add	x29, sp, #0x10
00000000000094e4	mov	x19, x0
00000000000094e8	adr	x8, #0x7d55b
00000000000094ec	nop
00000000000094f0	ldarb	w8, [x8]
00000000000094f4	tbz	w8, #0x0, 0x94fc
00000000000094f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000094fc	ldrsh	w0, [x19, #0x8]
0000000000009500	ldp	x29, x30, [sp, #0x10]
0000000000009504	ldp	x20, x19, [sp], #0x20
0000000000009508	ret
_kfun:kotlin.Long#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
000000000000950c	stp	x20, x19, [sp, #-0x20]!
0000000000009510	stp	x29, x30, [sp, #0x10]
0000000000009514	add	x29, sp, #0x10
0000000000009518	mov	x19, x0
000000000000951c	adr	x8, #0x7d527
0000000000009520	nop
0000000000009524	ldarb	w8, [x8]
0000000000009528	tbz	w8, #0x0, 0x9530
000000000000952c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009530	ldr	w0, [x19, #0x8]
0000000000009534	ldp	x29, x30, [sp, #0x10]
0000000000009538	ldp	x20, x19, [sp], #0x20
000000000000953c	ret
_kfun:kotlin.Long#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
0000000000009540	stp	x20, x19, [sp, #-0x20]!
0000000000009544	stp	x29, x30, [sp, #0x10]
0000000000009548	add	x29, sp, #0x10
000000000000954c	mov	x19, x0
0000000000009550	adr	x8, #0x7d4f3
0000000000009554	nop
0000000000009558	ldarb	w8, [x8]
000000000000955c	tbz	w8, #0x0, 0x9564
0000000000009560	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009564	ldr	x0, [x19, #0x8]
0000000000009568	ldp	x29, x30, [sp, #0x10]
000000000000956c	ldp	x20, x19, [sp], #0x20
0000000000009570	ret
_kfun:kotlin.Long#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
0000000000009574	stp	x20, x19, [sp, #-0x20]!
0000000000009578	stp	x29, x30, [sp, #0x10]
000000000000957c	add	x29, sp, #0x10
0000000000009580	mov	x19, x0
0000000000009584	adr	x8, #0x7d4bf
0000000000009588	nop
000000000000958c	ldarb	w8, [x8]
0000000000009590	tbz	w8, #0x0, 0x9598
0000000000009594	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009598	ldr	x8, [x19, #0x8]
000000000000959c	scvtf	s0, x8
00000000000095a0	ldp	x29, x30, [sp, #0x10]
00000000000095a4	ldp	x20, x19, [sp], #0x20
00000000000095a8	ret
_kfun:kotlin.Long#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
00000000000095ac	stp	x20, x19, [sp, #-0x20]!
00000000000095b0	stp	x29, x30, [sp, #0x10]
00000000000095b4	add	x29, sp, #0x10
00000000000095b8	mov	x19, x0
00000000000095bc	adr	x8, #0x7d487
00000000000095c0	nop
00000000000095c4	ldarb	w8, [x8]
00000000000095c8	tbz	w8, #0x0, 0x95d0
00000000000095cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000095d0	ldr	d0, [x19, #0x8]
00000000000095d4	scvtf	d0, d0
00000000000095d8	ldp	x29, x30, [sp, #0x10]
00000000000095dc	ldp	x20, x19, [sp], #0x20
00000000000095e0	ret
_kfun:kotlin.Long#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
00000000000095e4	stp	x20, x19, [sp, #-0x20]!
00000000000095e8	stp	x29, x30, [sp, #0x10]
00000000000095ec	add	x29, sp, #0x10
00000000000095f0	mov	x19, x1
00000000000095f4	mov	x20, x0
00000000000095f8	adr	x8, #0x7d44b
00000000000095fc	nop
0000000000009600	ldarb	w8, [x8]
0000000000009604	tbz	w8, #0x0, 0x960c
0000000000009608	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000960c	cbz	x19, 0x9644
0000000000009610	ldr	x8, [x20, #0x8]
0000000000009614	ldr	x9, [x19]
0000000000009618	and	x9, x9, #0xfffffffffffffffc
000000000000961c	ldr	x9, [x9]
0000000000009620	ldr	w9, [x9, #0x5c]
0000000000009624	cmp	w9, #0x6b
0000000000009628	b.ne	0x9644
000000000000962c	ldr	x9, [x19, #0x8]
0000000000009630	cmp	x9, x8
0000000000009634	cset	w0, eq
0000000000009638	ldp	x29, x30, [sp, #0x10]
000000000000963c	ldp	x20, x19, [sp], #0x20
0000000000009640	ret
0000000000009644	mov	w0, #0x0
0000000000009648	ldp	x29, x30, [sp, #0x10]
000000000000964c	ldp	x20, x19, [sp], #0x20
0000000000009650	ret
_kfun:kotlin.Long#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000009654	sub	sp, sp, #0x50
0000000000009658	stp	x20, x19, [sp, #0x30]
000000000000965c	stp	x29, x30, [sp, #0x40]
0000000000009660	add	x29, sp, #0x40
0000000000009664	mov	x19, x1
0000000000009668	mov	x20, x0
000000000000966c	adr	x8, #0x7d3d7
0000000000009670	nop
0000000000009674	ldarb	w8, [x8]
0000000000009678	tbz	w8, #0x0, 0x9680
000000000000967c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009680	ldr	x8, [x20, #0x8]
0000000000009684	str	x8, [sp]
0000000000009688	adr	x2, #0x4d606 ; literal pool for: "%lld"
000000000000968c	nop
0000000000009690	add	x0, sp, #0x10
0000000000009694	mov	w1, #0x20
0000000000009698	bl	__ZN5konan8snprintfEPcmPKcz
000000000000969c	add	x0, sp, #0x10
00000000000096a0	mov	x1, x19
00000000000096a4	bl	_CreateStringFromCString
00000000000096a8	str	x0, [x19]
00000000000096ac	ldp	x29, x30, [sp, #0x40]
00000000000096b0	ldp	x20, x19, [sp, #0x30]
00000000000096b4	add	sp, sp, #0x50
00000000000096b8	ret
_kfun:kotlin.Long#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
00000000000096bc	stp	x20, x19, [sp, #-0x20]!
00000000000096c0	stp	x29, x30, [sp, #0x10]
00000000000096c4	add	x29, sp, #0x10
00000000000096c8	mov	x19, x0
00000000000096cc	adr	x8, #0x7d377
00000000000096d0	nop
00000000000096d4	ldarb	w8, [x8]
00000000000096d8	tbz	w8, #0x0, 0x96e0
00000000000096dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000096e0	ldp	w8, w9, [x19, #0x8]
00000000000096e4	eor	w0, w9, w8
00000000000096e8	ldp	x29, x30, [sp, #0x10]
00000000000096ec	ldp	x20, x19, [sp], #0x20
00000000000096f0	ret
_kfun:kotlin.Byte#$<bridge-NBNB>compareTo(kotlin.Byte){}kotlin.Int(kotlin.Any?){}kotlin.Int:
00000000000096f4	stp	x20, x19, [sp, #-0x20]!
00000000000096f8	stp	x29, x30, [sp, #0x10]
00000000000096fc	add	x29, sp, #0x10
0000000000009700	mov	x19, x1
0000000000009704	mov	x20, x0
0000000000009708	adr	x8, #0x7d33b
000000000000970c	nop
0000000000009710	ldarb	w8, [x8]
0000000000009714	tbz	w8, #0x0, 0x971c
0000000000009718	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000971c	ldrb	w8, [x20, #0x8]
0000000000009720	sxtb	w9, w8
0000000000009724	ldrb	w10, [x19, #0x8]
0000000000009728	cmp	w9, w10, sxtb
000000000000972c	mov	w9, #-0x1
0000000000009730	cneg	w9, w9, ge
0000000000009734	cmp	w8, w10
0000000000009738	csel	w0, wzr, w9, eq
000000000000973c	ldp	x29, x30, [sp, #0x10]
0000000000009740	ldp	x20, x19, [sp], #0x20
0000000000009744	ret
_kfun:kotlin.Byte#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000009748	stp	x20, x19, [sp, #-0x20]!
000000000000974c	stp	x29, x30, [sp, #0x10]
0000000000009750	add	x29, sp, #0x10
0000000000009754	mov	x19, x0
0000000000009758	adr	x8, #0x7d2eb
000000000000975c	nop
0000000000009760	ldarb	w8, [x8]
0000000000009764	tbz	w8, #0x0, 0x976c
0000000000009768	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000976c	ldrsb	w0, [x19, #0x8]
0000000000009770	ldp	x29, x30, [sp, #0x10]
0000000000009774	ldp	x20, x19, [sp], #0x20
0000000000009778	ret
_kfun:kotlin.Byte#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
000000000000977c	stp	x20, x19, [sp, #-0x20]!
0000000000009780	stp	x29, x30, [sp, #0x10]
0000000000009784	add	x29, sp, #0x10
0000000000009788	mov	x19, x0
000000000000978c	adr	x8, #0x7d2b7
0000000000009790	nop
0000000000009794	ldarb	w8, [x8]
0000000000009798	tbz	w8, #0x0, 0x97a0
000000000000979c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000097a0	ldrsb	w8, [x19, #0x8]
00000000000097a4	and	w0, w8, #0xffff
00000000000097a8	ldp	x29, x30, [sp, #0x10]
00000000000097ac	ldp	x20, x19, [sp], #0x20
00000000000097b0	ret
_kfun:kotlin.Byte#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
00000000000097b4	stp	x20, x19, [sp, #-0x20]!
00000000000097b8	stp	x29, x30, [sp, #0x10]
00000000000097bc	add	x29, sp, #0x10
00000000000097c0	mov	x19, x0
00000000000097c4	adr	x8, #0x7d27f
00000000000097c8	nop
00000000000097cc	ldarb	w8, [x8]
00000000000097d0	tbz	w8, #0x0, 0x97d8
00000000000097d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000097d8	ldrsb	w0, [x19, #0x8]
00000000000097dc	ldp	x29, x30, [sp, #0x10]
00000000000097e0	ldp	x20, x19, [sp], #0x20
00000000000097e4	ret
_kfun:kotlin.Byte#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
00000000000097e8	stp	x20, x19, [sp, #-0x20]!
00000000000097ec	stp	x29, x30, [sp, #0x10]
00000000000097f0	add	x29, sp, #0x10
00000000000097f4	mov	x19, x0
00000000000097f8	adr	x8, #0x7d24b
00000000000097fc	nop
0000000000009800	ldarb	w8, [x8]
0000000000009804	tbz	w8, #0x0, 0x980c
0000000000009808	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000980c	ldrsb	w0, [x19, #0x8]
0000000000009810	ldp	x29, x30, [sp, #0x10]
0000000000009814	ldp	x20, x19, [sp], #0x20
0000000000009818	ret
_kfun:kotlin.Byte#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
000000000000981c	stp	x20, x19, [sp, #-0x20]!
0000000000009820	stp	x29, x30, [sp, #0x10]
0000000000009824	add	x29, sp, #0x10
0000000000009828	mov	x19, x0
000000000000982c	adr	x8, #0x7d217
0000000000009830	nop
0000000000009834	ldarb	w8, [x8]
0000000000009838	tbz	w8, #0x0, 0x9840
000000000000983c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009840	ldrsb	x0, [x19, #0x8]
0000000000009844	ldp	x29, x30, [sp, #0x10]
0000000000009848	ldp	x20, x19, [sp], #0x20
000000000000984c	ret
_kfun:kotlin.Byte#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
0000000000009850	stp	x20, x19, [sp, #-0x20]!
0000000000009854	stp	x29, x30, [sp, #0x10]
0000000000009858	add	x29, sp, #0x10
000000000000985c	mov	x19, x0
0000000000009860	adr	x8, #0x7d1e3
0000000000009864	nop
0000000000009868	ldarb	w8, [x8]
000000000000986c	tbz	w8, #0x0, 0x9874
0000000000009870	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009874	ldr	b0, [x19, #0x8]
0000000000009878	sshll.8h	v0, v0, #0x0
000000000000987c	sshll.4s	v0, v0, #0x0
0000000000009880	scvtf	s0, s0
0000000000009884	ldp	x29, x30, [sp, #0x10]
0000000000009888	ldp	x20, x19, [sp], #0x20
000000000000988c	ret
_kfun:kotlin.Byte#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
0000000000009890	stp	x20, x19, [sp, #-0x20]!
0000000000009894	stp	x29, x30, [sp, #0x10]
0000000000009898	add	x29, sp, #0x10
000000000000989c	mov	x19, x0
00000000000098a0	adr	x8, #0x7d1a3
00000000000098a4	nop
00000000000098a8	ldarb	w8, [x8]
00000000000098ac	tbz	w8, #0x0, 0x98b4
00000000000098b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000098b4	ldrsb	w8, [x19, #0x8]
00000000000098b8	scvtf	d0, w8
00000000000098bc	ldp	x29, x30, [sp, #0x10]
00000000000098c0	ldp	x20, x19, [sp], #0x20
00000000000098c4	ret
_kfun:kotlin.Byte#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
00000000000098c8	stp	x20, x19, [sp, #-0x20]!
00000000000098cc	stp	x29, x30, [sp, #0x10]
00000000000098d0	add	x29, sp, #0x10
00000000000098d4	mov	x19, x1
00000000000098d8	mov	x20, x0
00000000000098dc	adr	x8, #0x7d167
00000000000098e0	nop
00000000000098e4	ldarb	w8, [x8]
00000000000098e8	tbz	w8, #0x0, 0x98f0
00000000000098ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000098f0	cbz	x19, 0x9928
00000000000098f4	ldrb	w8, [x20, #0x8]
00000000000098f8	ldr	x9, [x19]
00000000000098fc	and	x9, x9, #0xfffffffffffffffc
0000000000009900	ldr	x9, [x9]
0000000000009904	ldr	w9, [x9, #0x5c]
0000000000009908	cmp	w9, #0x6c
000000000000990c	b.ne	0x9928
0000000000009910	ldrb	w9, [x19, #0x8]
0000000000009914	cmp	w9, w8
0000000000009918	cset	w0, eq
000000000000991c	ldp	x29, x30, [sp, #0x10]
0000000000009920	ldp	x20, x19, [sp], #0x20
0000000000009924	ret
0000000000009928	mov	w0, #0x0
000000000000992c	ldp	x29, x30, [sp, #0x10]
0000000000009930	ldp	x20, x19, [sp], #0x20
0000000000009934	ret
_kfun:kotlin.Byte#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000009938	sub	sp, sp, #0x30
000000000000993c	stp	x20, x19, [sp, #0x10]
0000000000009940	stp	x29, x30, [sp, #0x20]
0000000000009944	add	x29, sp, #0x20
0000000000009948	mov	x19, x1
000000000000994c	mov	x20, x0
0000000000009950	adr	x8, #0x7d0f3
0000000000009954	nop
0000000000009958	ldarb	w8, [x8]
000000000000995c	tbz	w8, #0x0, 0x9964
0000000000009960	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009964	ldrsb	x8, [x20, #0x8]
0000000000009968	str	x8, [sp]
000000000000996c	adr	x2, #0x4d327 ; literal pool for: "%d"
0000000000009970	nop
0000000000009974	add	x0, sp, #0x8
0000000000009978	mov	w1, #0x8
000000000000997c	bl	__ZN5konan8snprintfEPcmPKcz
0000000000009980	add	x0, sp, #0x8
0000000000009984	mov	x1, x19
0000000000009988	bl	_CreateStringFromCString
000000000000998c	str	x0, [x19]
0000000000009990	ldp	x29, x30, [sp, #0x20]
0000000000009994	ldp	x20, x19, [sp, #0x10]
0000000000009998	add	sp, sp, #0x30
000000000000999c	ret
_kfun:kotlin.Byte#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
00000000000099a0	stp	x20, x19, [sp, #-0x20]!
00000000000099a4	stp	x29, x30, [sp, #0x10]
00000000000099a8	add	x29, sp, #0x10
00000000000099ac	mov	x19, x0
00000000000099b0	adr	x8, #0x7d093
00000000000099b4	nop
00000000000099b8	ldarb	w8, [x8]
00000000000099bc	tbz	w8, #0x0, 0x99c4
00000000000099c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000099c4	ldrsb	w0, [x19, #0x8]
00000000000099c8	ldp	x29, x30, [sp, #0x10]
00000000000099cc	ldp	x20, x19, [sp], #0x20
00000000000099d0	ret
_kfun:kotlin.Short#$<bridge-NBNB>compareTo(kotlin.Short){}kotlin.Int(kotlin.Any?){}kotlin.Int:
00000000000099d4	stp	x20, x19, [sp, #-0x20]!
00000000000099d8	stp	x29, x30, [sp, #0x10]
00000000000099dc	add	x29, sp, #0x10
00000000000099e0	mov	x19, x1
00000000000099e4	mov	x20, x0
00000000000099e8	adr	x8, #0x7d05b
00000000000099ec	nop
00000000000099f0	ldarb	w8, [x8]
00000000000099f4	tbz	w8, #0x0, 0x99fc
00000000000099f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000099fc	ldrh	w8, [x20, #0x8]
0000000000009a00	sxth	w9, w8
0000000000009a04	ldrh	w10, [x19, #0x8]
0000000000009a08	cmp	w9, w10, sxth
0000000000009a0c	mov	w9, #-0x1
0000000000009a10	cneg	w9, w9, ge
0000000000009a14	cmp	w8, w10
0000000000009a18	csel	w0, wzr, w9, eq
0000000000009a1c	ldp	x29, x30, [sp, #0x10]
0000000000009a20	ldp	x20, x19, [sp], #0x20
0000000000009a24	ret
_kfun:kotlin.Short#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000009a28	stp	x20, x19, [sp, #-0x20]!
0000000000009a2c	stp	x29, x30, [sp, #0x10]
0000000000009a30	add	x29, sp, #0x10
0000000000009a34	mov	x19, x0
0000000000009a38	adr	x8, #0x7d00b
0000000000009a3c	nop
0000000000009a40	ldarb	w8, [x8]
0000000000009a44	tbz	w8, #0x0, 0x9a4c
0000000000009a48	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009a4c	ldrsb	w0, [x19, #0x8]
0000000000009a50	ldp	x29, x30, [sp, #0x10]
0000000000009a54	ldp	x20, x19, [sp], #0x20
0000000000009a58	ret
_kfun:kotlin.Short#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
0000000000009a5c	stp	x20, x19, [sp, #-0x20]!
0000000000009a60	stp	x29, x30, [sp, #0x10]
0000000000009a64	add	x29, sp, #0x10
0000000000009a68	mov	x19, x0
0000000000009a6c	adr	x8, #0x7cfd7
0000000000009a70	nop
0000000000009a74	ldarb	w8, [x8]
0000000000009a78	tbz	w8, #0x0, 0x9a80
0000000000009a7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009a80	ldrh	w0, [x19, #0x8]
0000000000009a84	ldp	x29, x30, [sp, #0x10]
0000000000009a88	ldp	x20, x19, [sp], #0x20
0000000000009a8c	ret
_kfun:kotlin.Short#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
0000000000009a90	stp	x20, x19, [sp, #-0x20]!
0000000000009a94	stp	x29, x30, [sp, #0x10]
0000000000009a98	add	x29, sp, #0x10
0000000000009a9c	mov	x19, x0
0000000000009aa0	adr	x8, #0x7cfa3
0000000000009aa4	nop
0000000000009aa8	ldarb	w8, [x8]
0000000000009aac	tbz	w8, #0x0, 0x9ab4
0000000000009ab0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009ab4	ldrsh	w0, [x19, #0x8]
0000000000009ab8	ldp	x29, x30, [sp, #0x10]
0000000000009abc	ldp	x20, x19, [sp], #0x20
0000000000009ac0	ret
_kfun:kotlin.Short#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
0000000000009ac4	stp	x20, x19, [sp, #-0x20]!
0000000000009ac8	stp	x29, x30, [sp, #0x10]
0000000000009acc	add	x29, sp, #0x10
0000000000009ad0	mov	x19, x0
0000000000009ad4	adr	x8, #0x7cf6f
0000000000009ad8	nop
0000000000009adc	ldarb	w8, [x8]
0000000000009ae0	tbz	w8, #0x0, 0x9ae8
0000000000009ae4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009ae8	ldrsh	w0, [x19, #0x8]
0000000000009aec	ldp	x29, x30, [sp, #0x10]
0000000000009af0	ldp	x20, x19, [sp], #0x20
0000000000009af4	ret
_kfun:kotlin.Short#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
0000000000009af8	stp	x20, x19, [sp, #-0x20]!
0000000000009afc	stp	x29, x30, [sp, #0x10]
0000000000009b00	add	x29, sp, #0x10
0000000000009b04	mov	x19, x0
0000000000009b08	adr	x8, #0x7cf3b
0000000000009b0c	nop
0000000000009b10	ldarb	w8, [x8]
0000000000009b14	tbz	w8, #0x0, 0x9b1c
0000000000009b18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009b1c	ldrsh	x0, [x19, #0x8]
0000000000009b20	ldp	x29, x30, [sp, #0x10]
0000000000009b24	ldp	x20, x19, [sp], #0x20
0000000000009b28	ret
_kfun:kotlin.Short#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
0000000000009b2c	stp	x20, x19, [sp, #-0x20]!
0000000000009b30	stp	x29, x30, [sp, #0x10]
0000000000009b34	add	x29, sp, #0x10
0000000000009b38	mov	x19, x0
0000000000009b3c	adr	x8, #0x7cf07
0000000000009b40	nop
0000000000009b44	ldarb	w8, [x8]
0000000000009b48	tbz	w8, #0x0, 0x9b50
0000000000009b4c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009b50	ldr	h0, [x19, #0x8]
0000000000009b54	sshll.4s	v0, v0, #0x0
0000000000009b58	scvtf	s0, s0
0000000000009b5c	ldp	x29, x30, [sp, #0x10]
0000000000009b60	ldp	x20, x19, [sp], #0x20
0000000000009b64	ret
_kfun:kotlin.Short#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
0000000000009b68	stp	x20, x19, [sp, #-0x20]!
0000000000009b6c	stp	x29, x30, [sp, #0x10]
0000000000009b70	add	x29, sp, #0x10
0000000000009b74	mov	x19, x0
0000000000009b78	adr	x8, #0x7cecb
0000000000009b7c	nop
0000000000009b80	ldarb	w8, [x8]
0000000000009b84	tbz	w8, #0x0, 0x9b8c
0000000000009b88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009b8c	ldr	h0, [x19, #0x8]
0000000000009b90	sshll.4s	v0, v0, #0x0
0000000000009b94	sshll.2d	v0, v0, #0x0
0000000000009b98	scvtf	d0, d0
0000000000009b9c	ldp	x29, x30, [sp, #0x10]
0000000000009ba0	ldp	x20, x19, [sp], #0x20
0000000000009ba4	ret
_kfun:kotlin.Short#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000009ba8	stp	x20, x19, [sp, #-0x20]!
0000000000009bac	stp	x29, x30, [sp, #0x10]
0000000000009bb0	add	x29, sp, #0x10
0000000000009bb4	mov	x19, x1
0000000000009bb8	mov	x20, x0
0000000000009bbc	adr	x8, #0x7ce87
0000000000009bc0	nop
0000000000009bc4	ldarb	w8, [x8]
0000000000009bc8	tbz	w8, #0x0, 0x9bd0
0000000000009bcc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009bd0	cbz	x19, 0x9c08
0000000000009bd4	ldrh	w8, [x20, #0x8]
0000000000009bd8	ldr	x9, [x19]
0000000000009bdc	and	x9, x9, #0xfffffffffffffffc
0000000000009be0	ldr	x9, [x9]
0000000000009be4	ldr	w9, [x9, #0x5c]
0000000000009be8	cmp	w9, #0x6d
0000000000009bec	b.ne	0x9c08
0000000000009bf0	ldrh	w9, [x19, #0x8]
0000000000009bf4	cmp	w9, w8
0000000000009bf8	cset	w0, eq
0000000000009bfc	ldp	x29, x30, [sp, #0x10]
0000000000009c00	ldp	x20, x19, [sp], #0x20
0000000000009c04	ret
0000000000009c08	mov	w0, #0x0
0000000000009c0c	ldp	x29, x30, [sp, #0x10]
0000000000009c10	ldp	x20, x19, [sp], #0x20
0000000000009c14	ret
_kfun:kotlin.Short#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000009c18	sub	sp, sp, #0x30
0000000000009c1c	stp	x20, x19, [sp, #0x10]
0000000000009c20	stp	x29, x30, [sp, #0x20]
0000000000009c24	add	x29, sp, #0x20
0000000000009c28	mov	x19, x1
0000000000009c2c	mov	x20, x0
0000000000009c30	adr	x8, #0x7ce13
0000000000009c34	nop
0000000000009c38	ldarb	w8, [x8]
0000000000009c3c	tbz	w8, #0x0, 0x9c44
0000000000009c40	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009c44	ldrsh	x8, [x20, #0x8]
0000000000009c48	str	x8, [sp]
0000000000009c4c	adr	x2, #0x4d047 ; literal pool for: "%d"
0000000000009c50	nop
0000000000009c54	add	x0, sp, #0x8
0000000000009c58	mov	w1, #0x8
0000000000009c5c	bl	__ZN5konan8snprintfEPcmPKcz
0000000000009c60	add	x0, sp, #0x8
0000000000009c64	mov	x1, x19
0000000000009c68	bl	_CreateStringFromCString
0000000000009c6c	str	x0, [x19]
0000000000009c70	ldp	x29, x30, [sp, #0x20]
0000000000009c74	ldp	x20, x19, [sp, #0x10]
0000000000009c78	add	sp, sp, #0x30
0000000000009c7c	ret
_kfun:kotlin.Short#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000009c80	stp	x20, x19, [sp, #-0x20]!
0000000000009c84	stp	x29, x30, [sp, #0x10]
0000000000009c88	add	x29, sp, #0x10
0000000000009c8c	mov	x19, x0
0000000000009c90	adr	x8, #0x7cdb3
0000000000009c94	nop
0000000000009c98	ldarb	w8, [x8]
0000000000009c9c	tbz	w8, #0x0, 0x9ca4
0000000000009ca0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009ca4	ldrsh	w0, [x19, #0x8]
0000000000009ca8	ldp	x29, x30, [sp, #0x10]
0000000000009cac	ldp	x20, x19, [sp], #0x20
0000000000009cb0	ret
_kfun:kotlin.Float#$<bridge-NBNB>compareTo(kotlin.Float){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000009cb4	stp	x20, x19, [sp, #-0x20]!
0000000000009cb8	stp	x29, x30, [sp, #0x10]
0000000000009cbc	add	x29, sp, #0x10
0000000000009cc0	mov	x19, x1
0000000000009cc4	mov	x20, x0
0000000000009cc8	adr	x8, #0x7cd7b
0000000000009ccc	nop
0000000000009cd0	ldarb	w8, [x8]
0000000000009cd4	tbz	w8, #0x0, 0x9cdc
0000000000009cd8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009cdc	ldr	s1, [x20, #0x8]
0000000000009ce0	ldr	s0, [x19, #0x8]
0000000000009ce4	fcmp	s1, s0
0000000000009ce8	b.le	0x9cfc
0000000000009cec	mov	w0, #0x1
0000000000009cf0	ldp	x29, x30, [sp, #0x10]
0000000000009cf4	ldp	x20, x19, [sp], #0x20
0000000000009cf8	ret
0000000000009cfc	mov	w0, #-0x1
0000000000009d00	b.mi	0x9cf0
0000000000009d04	fmov	w8, s1
0000000000009d08	fcmp	s1, s1
0000000000009d0c	mov	w9, #0x7fc00000
0000000000009d10	csel	w8, w9, w8, vs
0000000000009d14	fmov	w10, s0
0000000000009d18	fcmp	s0, s0
0000000000009d1c	csel	w9, w9, w10, vs
0000000000009d20	cmp	w8, w9
0000000000009d24	cneg	w8, w0, ge
0000000000009d28	csel	w0, wzr, w8, eq
0000000000009d2c	ldp	x29, x30, [sp, #0x10]
0000000000009d30	ldp	x20, x19, [sp], #0x20
0000000000009d34	ret
_kfun:kotlin.Float#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000009d38	stp	x20, x19, [sp, #-0x20]!
0000000000009d3c	stp	x29, x30, [sp, #0x10]
0000000000009d40	add	x29, sp, #0x10
0000000000009d44	mov	x19, x0
0000000000009d48	adr	x8, #0x7ccfb
0000000000009d4c	nop
0000000000009d50	ldarb	w8, [x8]
0000000000009d54	tbz	w8, #0x0, 0x9d5c
0000000000009d58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009d5c	ldr	s0, [x19, #0x8]
0000000000009d60	fcmp	s0, s0
0000000000009d64	b.vs	0x9db0
0000000000009d68	mov	w8, #0x4f000000
0000000000009d6c	fmov	s1, w8
0000000000009d70	fcmp	s0, s1
0000000000009d74	b.ge	0x9d9c
0000000000009d78	mov	w8, #-0x31000000
0000000000009d7c	fmov	s1, w8
0000000000009d80	fcmp	s0, s1
0000000000009d84	b.ls	0x9db0
0000000000009d88	fcvtzs	w8, s0
0000000000009d8c	sxtb	w0, w8
0000000000009d90	ldp	x29, x30, [sp, #0x10]
0000000000009d94	ldp	x20, x19, [sp], #0x20
0000000000009d98	ret
0000000000009d9c	mov	w8, #0xff
0000000000009da0	sxtb	w0, w8
0000000000009da4	ldp	x29, x30, [sp, #0x10]
0000000000009da8	ldp	x20, x19, [sp], #0x20
0000000000009dac	ret
0000000000009db0	mov	w8, #0x0
0000000000009db4	sxtb	w0, w8
0000000000009db8	ldp	x29, x30, [sp, #0x10]
0000000000009dbc	ldp	x20, x19, [sp], #0x20
0000000000009dc0	ret
_kfun:kotlin.Float#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
0000000000009dc4	stp	x20, x19, [sp, #-0x20]!
0000000000009dc8	stp	x29, x30, [sp, #0x10]
0000000000009dcc	add	x29, sp, #0x10
0000000000009dd0	mov	x19, x0
0000000000009dd4	adr	x8, #0x7cc6f
0000000000009dd8	nop
0000000000009ddc	ldarb	w8, [x8]
0000000000009de0	tbz	w8, #0x0, 0x9de8
0000000000009de4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009de8	ldr	s0, [x19, #0x8]
0000000000009dec	fcmp	s0, s0
0000000000009df0	b.vs	0x9e3c
0000000000009df4	mov	w8, #0x4f000000
0000000000009df8	fmov	s1, w8
0000000000009dfc	fcmp	s0, s1
0000000000009e00	b.ge	0x9e28
0000000000009e04	mov	w8, #-0x31000000
0000000000009e08	fmov	s1, w8
0000000000009e0c	fcmp	s0, s1
0000000000009e10	b.ls	0x9e3c
0000000000009e14	fcvtzs	w8, s0
0000000000009e18	and	w0, w8, #0xffff
0000000000009e1c	ldp	x29, x30, [sp, #0x10]
0000000000009e20	ldp	x20, x19, [sp], #0x20
0000000000009e24	ret
0000000000009e28	mov	w8, #0xffff
0000000000009e2c	and	w0, w8, #0xffff
0000000000009e30	ldp	x29, x30, [sp, #0x10]
0000000000009e34	ldp	x20, x19, [sp], #0x20
0000000000009e38	ret
0000000000009e3c	mov	w8, #0x0
0000000000009e40	and	w0, w8, #0xffff
0000000000009e44	ldp	x29, x30, [sp, #0x10]
0000000000009e48	ldp	x20, x19, [sp], #0x20
0000000000009e4c	ret
_kfun:kotlin.Float#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
0000000000009e50	stp	x20, x19, [sp, #-0x20]!
0000000000009e54	stp	x29, x30, [sp, #0x10]
0000000000009e58	add	x29, sp, #0x10
0000000000009e5c	mov	x19, x0
0000000000009e60	adr	x8, #0x7cbe3
0000000000009e64	nop
0000000000009e68	ldarb	w8, [x8]
0000000000009e6c	tbz	w8, #0x0, 0x9e74
0000000000009e70	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009e74	ldr	s0, [x19, #0x8]
0000000000009e78	fcmp	s0, s0
0000000000009e7c	b.vs	0x9ec8
0000000000009e80	mov	w8, #0x4f000000
0000000000009e84	fmov	s1, w8
0000000000009e88	fcmp	s0, s1
0000000000009e8c	b.ge	0x9eb4
0000000000009e90	mov	w8, #-0x31000000
0000000000009e94	fmov	s1, w8
0000000000009e98	fcmp	s0, s1
0000000000009e9c	b.ls	0x9ec8
0000000000009ea0	fcvtzs	w8, s0
0000000000009ea4	sxth	w0, w8
0000000000009ea8	ldp	x29, x30, [sp, #0x10]
0000000000009eac	ldp	x20, x19, [sp], #0x20
0000000000009eb0	ret
0000000000009eb4	mov	w8, #0xffff
0000000000009eb8	sxth	w0, w8
0000000000009ebc	ldp	x29, x30, [sp, #0x10]
0000000000009ec0	ldp	x20, x19, [sp], #0x20
0000000000009ec4	ret
0000000000009ec8	mov	w8, #0x0
0000000000009ecc	sxth	w0, w8
0000000000009ed0	ldp	x29, x30, [sp, #0x10]
0000000000009ed4	ldp	x20, x19, [sp], #0x20
0000000000009ed8	ret
_kfun:kotlin.Float#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
0000000000009edc	stp	x20, x19, [sp, #-0x20]!
0000000000009ee0	stp	x29, x30, [sp, #0x10]
0000000000009ee4	add	x29, sp, #0x10
0000000000009ee8	mov	x19, x0
0000000000009eec	adr	x8, #0x7cb57
0000000000009ef0	nop
0000000000009ef4	ldarb	w8, [x8]
0000000000009ef8	tbz	w8, #0x0, 0x9f00
0000000000009efc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009f00	ldr	s0, [x19, #0x8]
0000000000009f04	fcmp	s0, s0
0000000000009f08	b.vs	0x9f5c
0000000000009f0c	mov	w8, #0x4f000000
0000000000009f10	fmov	s1, w8
0000000000009f14	fcmp	s0, s1
0000000000009f18	b.ge	0x9f3c
0000000000009f1c	mov	w8, #-0x31000000
0000000000009f20	fmov	s1, w8
0000000000009f24	fcmp	s0, s1
0000000000009f28	b.ls	0x9f4c
0000000000009f2c	fcvtzs	w0, s0
0000000000009f30	ldp	x29, x30, [sp, #0x10]
0000000000009f34	ldp	x20, x19, [sp], #0x20
0000000000009f38	ret
0000000000009f3c	mov	w0, #0x7fffffff
0000000000009f40	ldp	x29, x30, [sp, #0x10]
0000000000009f44	ldp	x20, x19, [sp], #0x20
0000000000009f48	ret
0000000000009f4c	mov	w0, #-0x80000000
0000000000009f50	ldp	x29, x30, [sp, #0x10]
0000000000009f54	ldp	x20, x19, [sp], #0x20
0000000000009f58	ret
0000000000009f5c	mov	w0, #0x0
0000000000009f60	ldp	x29, x30, [sp, #0x10]
0000000000009f64	ldp	x20, x19, [sp], #0x20
0000000000009f68	ret
_kfun:kotlin.Float#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
0000000000009f6c	stp	x20, x19, [sp, #-0x20]!
0000000000009f70	stp	x29, x30, [sp, #0x10]
0000000000009f74	add	x29, sp, #0x10
0000000000009f78	mov	x19, x0
0000000000009f7c	adr	x8, #0x7cac7
0000000000009f80	nop
0000000000009f84	ldarb	w8, [x8]
0000000000009f88	tbz	w8, #0x0, 0x9f90
0000000000009f8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009f90	ldr	s0, [x19, #0x8]
0000000000009f94	fcmp	s0, s0
0000000000009f98	b.vs	0x9fec
0000000000009f9c	mov	w8, #0x5f000000
0000000000009fa0	fmov	s1, w8
0000000000009fa4	fcmp	s0, s1
0000000000009fa8	b.ge	0x9fcc
0000000000009fac	mov	w8, #-0x21000000
0000000000009fb0	fmov	s1, w8
0000000000009fb4	fcmp	s0, s1
0000000000009fb8	b.ls	0x9fdc
0000000000009fbc	fcvtzs	x0, s0
0000000000009fc0	ldp	x29, x30, [sp, #0x10]
0000000000009fc4	ldp	x20, x19, [sp], #0x20
0000000000009fc8	ret
0000000000009fcc	mov	x0, #0x7fffffffffffffff
0000000000009fd0	ldp	x29, x30, [sp, #0x10]
0000000000009fd4	ldp	x20, x19, [sp], #0x20
0000000000009fd8	ret
0000000000009fdc	mov	x0, #-0x8000000000000000
0000000000009fe0	ldp	x29, x30, [sp, #0x10]
0000000000009fe4	ldp	x20, x19, [sp], #0x20
0000000000009fe8	ret
0000000000009fec	mov	x0, #0x0
0000000000009ff0	ldp	x29, x30, [sp, #0x10]
0000000000009ff4	ldp	x20, x19, [sp], #0x20
0000000000009ff8	ret
_kfun:kotlin.Float#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
0000000000009ffc	stp	x20, x19, [sp, #-0x20]!
000000000000a000	stp	x29, x30, [sp, #0x10]
000000000000a004	add	x29, sp, #0x10
000000000000a008	mov	x19, x0
000000000000a00c	adr	x8, #0x7ca37
000000000000a010	nop
000000000000a014	ldarb	w8, [x8]
000000000000a018	tbz	w8, #0x0, 0xa020
000000000000a01c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a020	ldr	s0, [x19, #0x8]
000000000000a024	ldp	x29, x30, [sp, #0x10]
000000000000a028	ldp	x20, x19, [sp], #0x20
000000000000a02c	ret
_kfun:kotlin.Float#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
000000000000a030	stp	x20, x19, [sp, #-0x20]!
000000000000a034	stp	x29, x30, [sp, #0x10]
000000000000a038	add	x29, sp, #0x10
000000000000a03c	mov	x19, x0
000000000000a040	adr	x8, #0x7ca03
000000000000a044	nop
000000000000a048	ldarb	w8, [x8]
000000000000a04c	tbz	w8, #0x0, 0xa054
000000000000a050	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a054	ldr	s0, [x19, #0x8]
000000000000a058	fcvt	d0, s0
000000000000a05c	ldp	x29, x30, [sp, #0x10]
000000000000a060	ldp	x20, x19, [sp], #0x20
000000000000a064	ret
_kfun:kotlin.Float#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
000000000000a068	stp	x20, x19, [sp, #-0x20]!
000000000000a06c	stp	x29, x30, [sp, #0x10]
000000000000a070	add	x29, sp, #0x10
000000000000a074	mov	x19, x1
000000000000a078	mov	x20, x0
000000000000a07c	adr	x8, #0x7c9c7
000000000000a080	nop
000000000000a084	ldarb	w8, [x8]
000000000000a088	tbz	w8, #0x0, 0xa090
000000000000a08c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a090	cbz	x19, 0xa0e4
000000000000a094	ldr	s0, [x20, #0x8]
000000000000a098	ldr	x8, [x19]
000000000000a09c	and	x8, x8, #0xfffffffffffffffc
000000000000a0a0	ldr	x8, [x8]
000000000000a0a4	ldr	w8, [x8, #0x5c]
000000000000a0a8	cmp	w8, #0x6e
000000000000a0ac	b.ne	0xa0e4
000000000000a0b0	ldr	s1, [x19, #0x8]
000000000000a0b4	fmov	w8, s0
000000000000a0b8	fcmp	s0, s0
000000000000a0bc	mov	w9, #0x7fc00000
000000000000a0c0	csel	w8, w9, w8, vs
000000000000a0c4	fcmp	s1, s1
000000000000a0c8	fmov	w10, s1
000000000000a0cc	csel	w9, w9, w10, vs
000000000000a0d0	cmp	w8, w9
000000000000a0d4	cset	w0, eq
000000000000a0d8	ldp	x29, x30, [sp, #0x10]
000000000000a0dc	ldp	x20, x19, [sp], #0x20
000000000000a0e0	ret
000000000000a0e4	mov	w0, #0x0
000000000000a0e8	ldp	x29, x30, [sp, #0x10]
000000000000a0ec	ldp	x20, x19, [sp], #0x20
000000000000a0f0	ret
_kfun:kotlin.Float#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
000000000000a0f4	sub	sp, sp, #0xf0
000000000000a0f8	stp	d9, d8, [sp, #0x80]
000000000000a0fc	stp	x28, x27, [sp, #0x90]
000000000000a100	stp	x26, x25, [sp, #0xa0]
000000000000a104	stp	x24, x23, [sp, #0xb0]
000000000000a108	stp	x22, x21, [sp, #0xc0]
000000000000a10c	stp	x20, x19, [sp, #0xd0]
000000000000a110	stp	x29, x30, [sp, #0xe0]
000000000000a114	add	x29, sp, #0xe0
000000000000a118	mov	x19, x1
000000000000a11c	mov	x20, x0
000000000000a120	adr	x27, #0x7c923
000000000000a124	nop
000000000000a128	ldarb	w8, [x27]
000000000000a12c	tbz	w8, #0x0, 0xa134
000000000000a130	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a134	ldr	s8, [x20, #0x8]
000000000000a138	movi.16b	v0, #0x0
000000000000a13c	stp	q0, q0, [sp, #0x10]
000000000000a140	adrp	x23, 98 ; 0x6c000
000000000000a144	add	x23, x23, #0xbb0
000000000000a148	ldr	x26, [x23]
000000000000a14c	mov	x0, x23
000000000000a150	blr	x26
000000000000a154	ldr	x8, [x0]
000000000000a158	ldr	x9, [x8, #0x110]
000000000000a15c	add	x10, sp, #0x10
000000000000a160	str	x10, [x8, #0x110]
000000000000a164	mov	x24, #0x400000000
000000000000a168	stp	x9, x24, [sp, #0x18]
000000000000a16c	adr	x25, #0x7c944
000000000000a170	nop
000000000000a174	ldar	x8, [x25]
000000000000a178	cmp	x8, #0x2
000000000000a17c	b.hs	0xa364
000000000000a180	mov	x0, x23
000000000000a184	blr	x26
000000000000a188	ldr	x28, [x0]
000000000000a18c	ldp	x8, x9, [x28, #0x120]
000000000000a190	cmp	x8, x9
000000000000a194	b.eq	0xa1b4
000000000000a198	mov	x10, x9
000000000000a19c	ldr	x11, [x10, #-0x10]!
000000000000a1a0	cmp	x11, x25
000000000000a1a4	b.eq	0xa270
000000000000a1a8	mov	x9, x10
000000000000a1ac	cmp	x10, x8
000000000000a1b0	b.ne	0xa19c
000000000000a1b4	add	x21, x28, #0x120
000000000000a1b8	add	x0, x28, #0x138
000000000000a1bc	mov	w9, #0x1
000000000000a1c0	ldaxr	w8, [x0]
000000000000a1c4	stlxr	w10, w9, [x0]
000000000000a1c8	cbnz	w10, 0xa1c0
000000000000a1cc	b	0xa1dc
000000000000a1d0	mov	w22, #0x1
000000000000a1d4	stlxr	w9, x22, [x25]
000000000000a1d8	cbz	w9, 0xa1ec
000000000000a1dc	ldaxr	x20, [x25]
000000000000a1e0	cbz	x20, 0xa1d0
000000000000a1e4	mov	w22, #0x0
000000000000a1e8	clrex
000000000000a1ec	cmp	x20, #0x1
000000000000a1f0	b.eq	0xa1dc
000000000000a1f4	cbz	x28, 0xa220
000000000000a1f8	ldaxr	w9, [x0]
000000000000a1fc	stlxr	w10, w8, [x0]
000000000000a200	cbnz	w10, 0xa1f8
000000000000a204	cbnz	w8, 0xa220
000000000000a208	cmp	w9, #0x1
000000000000a20c	b.ne	0xa220
000000000000a210	ldarb	w8, [x27]
000000000000a214	tbz	w8, #0x0, 0xa220
000000000000a218	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000a21c	movi.16b	v0, #0x0
000000000000a220	tbz	w22, #0x0, 0xa268
000000000000a224	ldr	x8, [x28, #0x118]
000000000000a228	add	x0, x8, #0x70
000000000000a22c	mov	w1, #0x20
000000000000a230	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a234	mov	x22, x0
000000000000a238	adr	x8, #0x50028
000000000000a23c	nop
000000000000a240	str	x8, [x22, #0x10]!
000000000000a244	stur	xzr, [x22, #-0x8]
000000000000a248	str	x22, [sp, #0x28]
000000000000a24c	ldp	x9, x8, [x28, #0x128]
000000000000a250	cmp	x9, x8
000000000000a254	b.hs	0xa27c
000000000000a258	stp	x25, x22, [x9]
000000000000a25c	add	x8, x9, #0x10
000000000000a260	str	x8, [x28, #0x128]
000000000000a264	b	0xa314
000000000000a268	str	x20, [sp, #0x28]
000000000000a26c	b	0xa364
000000000000a270	ldur	x8, [x9, #-0x8]
000000000000a274	str	x8, [sp, #0x28]
000000000000a278	b	0xa364
000000000000a27c	str	x21, [sp, #0x8]
000000000000a280	ldr	x10, [x21]
000000000000a284	sub	x9, x9, x10
000000000000a288	asr	x20, x9, #4
000000000000a28c	add	x9, x20, #0x1
000000000000a290	lsr	x11, x9, #60
000000000000a294	cbnz	x11, 0xa5c0
000000000000a298	sub	x8, x8, x10
000000000000a29c	asr	x10, x8, #3
000000000000a2a0	cmp	x10, x9
000000000000a2a4	csel	x9, x9, x10, lo
000000000000a2a8	mov	x10, #0x7ffffffffffffff
000000000000a2ac	cmp	x10, x8, asr #4
000000000000a2b0	mov	x8, #0xfffffffffffffff
000000000000a2b4	csel	x23, x9, x8, hi
000000000000a2b8	mov	x0, x23
000000000000a2bc	mov	w1, #0x10
000000000000a2c0	bl	0x519e0 ; symbol stub for: _calloc
000000000000a2c4	add	x8, x0, x20, lsl #4
000000000000a2c8	add	x20, x0, x23, lsl #4
000000000000a2cc	stp	x25, x22, [x8]
000000000000a2d0	add	x21, x8, #0x10
000000000000a2d4	ldp	x1, x9, [x28, #0x120]
000000000000a2d8	sub	x2, x9, x1
000000000000a2dc	sub	x23, x8, x2
000000000000a2e0	cmp	x2, #0x1
000000000000a2e4	b.lt	0xa2f8
000000000000a2e8	mov	x0, x23
000000000000a2ec	bl	0x51aac ; symbol stub for: _memcpy
000000000000a2f0	ldr	x8, [sp, #0x8]
000000000000a2f4	ldr	x1, [x8]
000000000000a2f8	stp	x23, x21, [x28, #0x120]
000000000000a2fc	str	x20, [x28, #0x130]
000000000000a300	adrp	x23, 98 ; 0x6c000
000000000000a304	add	x23, x23, #0xbb0
000000000000a308	cbz	x1, 0xa314
000000000000a30c	mov	x0, x1
000000000000a310	bl	0x51a64 ; symbol stub for: _free
000000000000a314	mov	x0, x22
000000000000a318	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
000000000000a31c	mov	w0, #0x1
000000000000a320	mov	w1, #0x28
000000000000a324	bl	0x519e0 ; symbol stub for: _calloc
000000000000a328	ldr	x8, [x28, #0x18]!
000000000000a32c	sub	x9, x28, #0x8
000000000000a330	stp	x25, x9, [x0, #0x10]
000000000000a334	stp	x8, x28, [x0]
000000000000a338	str	x0, [x8, #0x8]
000000000000a33c	str	x0, [x28]
000000000000a340	ldr	x8, [x28, #0x10]
000000000000a344	add	x8, x8, #0x1
000000000000a348	str	x8, [x28, #0x10]
000000000000a34c	str	x0, [x0, #0x20]
000000000000a350	stlr	x22, [x25]
000000000000a354	ldr	x8, [x28, #0x110]
000000000000a358	sub	x8, x8, #0x10
000000000000a35c	str	x8, [x28, #0x110]
000000000000a360	movi.16b	v0, #0x0
000000000000a364	stp	q0, q0, [sp, #0x30]
000000000000a368	add	x9, sp, #0x30
000000000000a36c	add	x8, x9, #0x18
000000000000a370	mov	x0, x23
000000000000a374	blr	x26
000000000000a378	mov	x21, x0
000000000000a37c	ldr	x10, [x0]
000000000000a380	ldr	x11, [x10, #0x110]
000000000000a384	str	x9, [x10, #0x110]
000000000000a388	stp	x11, x24, [sp, #0x38]
000000000000a38c	mov	x0, x8
000000000000a390	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion.<get-converter>#internal"
000000000000a394	movi.16b	v0, #0x0
000000000000a398	stp	q0, q0, [sp, #0x50]
000000000000a39c	str	xzr, [sp, #0x70]
000000000000a3a0	add	x28, sp, #0x50
000000000000a3a4	ldr	x8, [x21]
000000000000a3a8	ldr	x9, [x8, #0x110]
000000000000a3ac	str	x28, [x8, #0x110]
000000000000a3b0	mov	x8, #0x500000000
000000000000a3b4	stp	x9, x8, [sp, #0x58]
000000000000a3b8	adr	x8, #0x5b3b8
000000000000a3bc	nop
000000000000a3c0	adr	x9, #0x5ae18
000000000000a3c4	nop
000000000000a3c8	fmov	w10, s8
000000000000a3cc	cmp	w10, #0x0
000000000000a3d0	csel	x21, x9, x8, ge
000000000000a3d4	ubfx	w20, w10, #23, #8
000000000000a3d8	and	w8, w10, #0x7fffff
000000000000a3dc	cmp	w20, #0xff
000000000000a3e0	b.ne	0xa3f4
000000000000a3e4	cbz	w8, 0xa41c
000000000000a3e8	adr	x8, #0x5b3c8
000000000000a3ec	nop
000000000000a3f0	b	0xa55c
000000000000a3f4	mov	x22, x0
000000000000a3f8	cbz	w20, 0xa428
000000000000a3fc	orr	w24, w8, #0x800000
000000000000a400	sub	w23, w20, #0x96
000000000000a404	cmp	w20, #0x5c
000000000000a408	b.lo	0xa470
000000000000a40c	cmp	w20, #0xb9
000000000000a410	b.lo	0xa484
000000000000a414	mov	w25, #0x17
000000000000a418	b	0xa4ac
000000000000a41c	adr	x1, #0x5b374
000000000000a420	nop
000000000000a424	b	0xa54c
000000000000a428	cbz	w8, 0xa544
000000000000a42c	lsl	w9, w8, #2
000000000000a430	cmp	w8, #0x8
000000000000a434	mov	w10, #-0x95
000000000000a438	mov	w11, #-0x97
000000000000a43c	csel	w23, w11, w10, lo
000000000000a440	csel	w24, w9, w8, lo
000000000000a444	mov	w25, #0x17
000000000000a448	tbnz	w24, #0x17, 0xa4ac
000000000000a44c	mov	x28, x24
000000000000a450	b	0xa460
000000000000a454	lsl	w28, w28, #1
000000000000a458	sub	w25, w25, #0x1
000000000000a45c	tbnz	w28, #0x17, 0xa4a8
000000000000a460	ldarb	w8, [x27]
000000000000a464	tbz	w8, #0x0, 0xa454
000000000000a468	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a46c	b	0xa454
000000000000a470	mov	w25, #0x17
000000000000a474	cmn	w23, #0x3b
000000000000a478	b.ne	0xa4ac
000000000000a47c	cbz	w8, 0xa4ac
000000000000a480	mov	w23, #-0x3b
000000000000a484	cmp	w8, #0x0
000000000000a488	cset	w4, eq
000000000000a48c	mov	x0, x22
000000000000a490	mov	x1, x24
000000000000a494	mov	x2, x23
000000000000a498	mov	w3, #0x0
000000000000a49c	mov	w5, #0x17
000000000000a4a0	bl	"_kfun:kotlin.native.internal.NumberConverter.longDigitGenerator#internal"
000000000000a4a4	b	0xa4c8
000000000000a4a8	add	x28, sp, #0x50
000000000000a4ac	cmp	w20, #0x0
000000000000a4b0	cset	w3, eq
000000000000a4b4	mov	w1, w24
000000000000a4b8	mov	x0, x22
000000000000a4bc	mov	x2, x23
000000000000a4c0	mov	x4, x25
000000000000a4c4	bl	"_kfun:kotlin.native.internal.NumberConverter.bigIntDigitGeneratorInstImpl#internal"
000000000000a4c8	mov	w8, #0x9680
000000000000a4cc	movk	w8, #0x4b18, lsl #16
000000000000a4d0	fmov	s0, w8
000000000000a4d4	fcmp	s8, s0
000000000000a4d8	mov	w8, #0x9680
000000000000a4dc	movk	w8, #0xcb18, lsl #16
000000000000a4e0	fmov	s0, w8
000000000000a4e4	fccmp	s8, s0, #0x0, lt
000000000000a4e8	adrp	x23, 98 ; 0x6c000
000000000000a4ec	add	x23, x23, #0xbb0
000000000000a4f0	b.ls	0xa51c
000000000000a4f4	mov	w8, #0x126f
000000000000a4f8	movk	w8, #0xba83, lsl #16
000000000000a4fc	fmov	s0, w8
000000000000a500	fcmp	s8, s0
000000000000a504	b.le	0xa530
000000000000a508	mov	w8, #0x126f
000000000000a50c	movk	w8, #0x3a83, lsl #16
000000000000a510	fmov	s0, w8
000000000000a514	fcmp	s8, s0
000000000000a518	b.pl	0xa530
000000000000a51c	add	x1, x28, #0x18
000000000000a520	mov	x0, x22
000000000000a524	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormatExponential#internal"
000000000000a528	mov	x1, x0
000000000000a52c	b	0xa54c
000000000000a530	add	x1, x28, #0x20
000000000000a534	mov	x0, x22
000000000000a538	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormat#internal"
000000000000a53c	mov	x1, x0
000000000000a540	b	0xa54c
000000000000a544	adr	x1, #0x5b28c
000000000000a548	nop
000000000000a54c	mov	x0, x21
000000000000a550	mov	x2, x19
000000000000a554	bl	_Kotlin_String_plusImpl
000000000000a558	mov	x8, x0
000000000000a55c	str	x8, [x19]
000000000000a560	mov	x0, x23
000000000000a564	blr	x26
000000000000a568	ldr	x9, [x0]
000000000000a56c	ldr	x10, [sp, #0x58]
000000000000a570	str	x10, [x9, #0x110]
000000000000a574	str	x8, [x19]
000000000000a578	ldr	x9, [x0]
000000000000a57c	ldr	x10, [sp, #0x38]
000000000000a580	str	x10, [x9, #0x110]
000000000000a584	str	x8, [x19]
000000000000a588	ldr	x9, [x0]
000000000000a58c	ldr	x10, [sp, #0x18]
000000000000a590	str	x10, [x9, #0x110]
000000000000a594	str	x8, [x19]
000000000000a598	mov	x0, x8
000000000000a59c	ldp	x29, x30, [sp, #0xe0]
000000000000a5a0	ldp	x20, x19, [sp, #0xd0]
000000000000a5a4	ldp	x22, x21, [sp, #0xc0]
000000000000a5a8	ldp	x24, x23, [sp, #0xb0]
000000000000a5ac	ldp	x26, x25, [sp, #0xa0]
000000000000a5b0	ldp	x28, x27, [sp, #0x90]
000000000000a5b4	ldp	d9, d8, [sp, #0x80]
000000000000a5b8	add	sp, sp, #0xf0
000000000000a5bc	ret
000000000000a5c0	ldr	x0, [sp, #0x8]
000000000000a5c4	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000a5c8	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000000a5cc	str	xzr, [sp, #0x28]
000000000000a5d0	stlr	xzr, [x25]
000000000000a5d4	ldr	x8, [x28, #0x128]
000000000000a5d8	sub	x8, x8, #0x10
000000000000a5dc	str	x8, [x28, #0x128]
000000000000a5e0	bl	0x51968 ; symbol stub for: ___cxa_rethrow
000000000000a5e4	brk	#0x1
000000000000a5e8	mov	x19, x0
000000000000a5ec	bl	0x51944 ; symbol stub for: ___cxa_end_catch
000000000000a5f0	mov	x0, x19
000000000000a5f4	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.Float#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
000000000000a5f8	stp	x20, x19, [sp, #-0x20]!
000000000000a5fc	stp	x29, x30, [sp, #0x10]
000000000000a600	add	x29, sp, #0x10
000000000000a604	mov	x19, x0
000000000000a608	adr	x8, #0x7c43b
000000000000a60c	nop
000000000000a610	ldarb	w8, [x8]
000000000000a614	tbz	w8, #0x0, 0xa61c
000000000000a618	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a61c	ldr	s0, [x19, #0x8]
000000000000a620	fcmp	s0, s0
000000000000a624	fmov	w8, s0
000000000000a628	mov	w9, #0x7fc00000
000000000000a62c	csel	w0, w9, w8, vs
000000000000a630	ldp	x29, x30, [sp, #0x10]
000000000000a634	ldp	x20, x19, [sp], #0x20
000000000000a638	ret
_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any:
000000000000a63c	sub	sp, sp, #0x50
000000000000a640	stp	x22, x21, [sp, #0x20]
000000000000a644	stp	x20, x19, [sp, #0x30]
000000000000a648	stp	x29, x30, [sp, #0x40]
000000000000a64c	add	x29, sp, #0x40
000000000000a650	mov	x19, x1
000000000000a654	mov	x20, x0
000000000000a658	movi.16b	v0, #0x0
000000000000a65c	stp	q0, q0, [sp]
000000000000a660	adrp	x0, 98 ; 0x6c000
000000000000a664	add	x0, x0, #0xbb0
000000000000a668	ldr	x8, [x0]
000000000000a66c	blr	x8
000000000000a670	ldr	x21, [x0]
000000000000a674	ldr	x8, [x21, #0x110]
000000000000a678	mov	x9, sp
000000000000a67c	str	x9, [x21, #0x110]
000000000000a680	mov	x9, #0x400000000
000000000000a684	stp	x8, x9, [sp, #0x8]
000000000000a688	adr	x8, #0x7c3bb
000000000000a68c	nop
000000000000a690	ldarb	w8, [x8]
000000000000a694	tbz	w8, #0x0, 0xa69c
000000000000a698	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a69c	cmp	w20, w20, sxtb
000000000000a6a0	b.ne	0xa6bc
000000000000a6a4	add	w8, w20, #0x80
000000000000a6a8	adr	x9, #0x58af8
000000000000a6ac	nop
000000000000a6b0	add	x0, x9, w8, sxtw #4
000000000000a6b4	str	x0, [x19]
000000000000a6b8	b	0xa6e4
000000000000a6bc	ldr	x8, [x21, #0x118]
000000000000a6c0	add	x0, x8, #0x70
000000000000a6c4	mov	w1, #0x18
000000000000a6c8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a6cc	adr	x8, #0x4eb94
000000000000a6d0	nop
000000000000a6d4	str	x8, [x0, #0x10]!
000000000000a6d8	stur	xzr, [x0, #-0x8]
000000000000a6dc	str	x0, [sp, #0x18]
000000000000a6e0	str	w20, [x0, #0x8]
000000000000a6e4	str	x0, [x19]
000000000000a6e8	ldr	x8, [sp, #0x8]
000000000000a6ec	str	x8, [x21, #0x110]
000000000000a6f0	ldp	x29, x30, [sp, #0x40]
000000000000a6f4	ldp	x20, x19, [sp, #0x30]
000000000000a6f8	ldp	x22, x21, [sp, #0x20]
000000000000a6fc	add	sp, sp, #0x50
000000000000a700	ret
_kfun:kotlin.String#toString(){}kotlin.String:
000000000000a704	stp	x20, x19, [sp, #-0x20]!
000000000000a708	stp	x29, x30, [sp, #0x10]
000000000000a70c	add	x29, sp, #0x10
000000000000a710	mov	x20, x1
000000000000a714	mov	x19, x0
000000000000a718	adr	x8, #0x7c32b
000000000000a71c	nop
000000000000a720	ldarb	w8, [x8]
000000000000a724	tbz	w8, #0x0, 0xa72c
000000000000a728	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a72c	str	x19, [x20]
000000000000a730	mov	x0, x19
000000000000a734	ldp	x29, x30, [sp, #0x10]
000000000000a738	ldp	x20, x19, [sp], #0x20
000000000000a73c	ret
_kfun:kotlin.String#<get-length>(){}kotlin.Int:
000000000000a740	stp	x20, x19, [sp, #-0x20]!
000000000000a744	stp	x29, x30, [sp, #0x10]
000000000000a748	add	x29, sp, #0x10
000000000000a74c	mov	x19, x0
000000000000a750	adr	x8, #0x7c2f3
000000000000a754	nop
000000000000a758	ldarb	w8, [x8]
000000000000a75c	tbz	w8, #0x0, 0xa764
000000000000a760	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a764	ldr	w0, [x19, #0x8]
000000000000a768	ldp	x29, x30, [sp, #0x10]
000000000000a76c	ldp	x20, x19, [sp], #0x20
000000000000a770	ret
_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}:
000000000000a774	sub	sp, sp, #0x140
000000000000a778	stp	x28, x27, [sp, #0xe0]
000000000000a77c	stp	x26, x25, [sp, #0xf0]
000000000000a780	stp	x24, x23, [sp, #0x100]
000000000000a784	stp	x22, x21, [sp, #0x110]
000000000000a788	stp	x20, x19, [sp, #0x120]
000000000000a78c	stp	x29, x30, [sp, #0x130]
000000000000a790	add	x29, sp, #0x130
000000000000a794	mov	x20, x1
000000000000a798	mov	x19, x0
000000000000a79c	movi.16b	v0, #0x0
000000000000a7a0	stp	q0, q0, [sp, #0x10]
000000000000a7a4	str	q0, [sp, #0x30]
000000000000a7a8	add	x8, sp, #0x10
000000000000a7ac	add	x21, x8, #0x18
000000000000a7b0	adrp	x0, 98 ; 0x6c000
000000000000a7b4	add	x0, x0, #0xbb0
000000000000a7b8	ldr	x9, [x0]
000000000000a7bc	blr	x9
000000000000a7c0	ldr	x24, [x0]
000000000000a7c4	ldr	x9, [x24, #0x110]
000000000000a7c8	str	x8, [x24, #0x110]
000000000000a7cc	mov	x8, #0x600000000
000000000000a7d0	stp	x9, x8, [sp, #0x18]
000000000000a7d4	adr	x23, #0x7c26f
000000000000a7d8	nop
000000000000a7dc	ldarb	w8, [x23]
000000000000a7e0	tbz	w8, #0x0, 0xa7e8
000000000000a7e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a7e8	stp	x20, xzr, [x19, #0x8]
000000000000a7ec	mov	x0, x21
000000000000a7f0	bl	_Kotlin_getCurrentStackTrace
000000000000a7f4	str	x0, [x19, #0x18]
000000000000a7f8	ldr	x8, [x24, #0x118]
000000000000a7fc	add	x0, x8, #0x70
000000000000a800	mov	w1, #0x18
000000000000a804	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a808	mov	x21, x0
000000000000a80c	adr	x8, #0x4f094
000000000000a810	nop
000000000000a814	str	x8, [x21, #0x10]!
000000000000a818	stur	xzr, [x21, #-0x8]
000000000000a81c	str	x21, [sp, #0x30]
000000000000a820	str	x19, [x21, #0x8]
000000000000a824	ldr	x8, [x24, #0x118]
000000000000a828	add	x0, x8, #0x70
000000000000a82c	mov	w1, #0x28
000000000000a830	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a834	mov	x20, x0
000000000000a838	adr	x8, #0x4f438
000000000000a83c	nop
000000000000a840	mov	x25, x0
000000000000a844	str	x8, [x25, #0x10]!
000000000000a848	str	xzr, [x0, #0x8]
000000000000a84c	movi.16b	v0, #0x0
000000000000a850	stp	q0, q0, [sp, #0x40]
000000000000a854	add	x8, sp, #0x40
000000000000a858	ldp	x9, x10, [x24, #0x110]
000000000000a85c	str	x8, [x24, #0x110]
000000000000a860	mov	x8, #0x700000000
000000000000a864	stp	x9, x8, [sp, #0x48]
000000000000a868	str	x25, [sp, #0x38]
000000000000a86c	str	xzr, [sp, #0x70]
000000000000a870	str	q0, [sp, #0x60]
000000000000a874	add	x0, x10, #0x70
000000000000a878	mov	w1, #0x20
000000000000a87c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a880	adr	x26, #0x4f2d0
000000000000a884	nop
000000000000a888	str	x26, [x0, #0x10]!
000000000000a88c	stur	xzr, [x0, #-0x8]
000000000000a890	str	x0, [sp, #0x58]
000000000000a894	str	x21, [x0, #0x8]
000000000000a898	str	x0, [x20, #0x18]
000000000000a89c	adr	x27, #0x7c204
000000000000a8a0	nop
000000000000a8a4	ldar	x21, [x27]
000000000000a8a8	cmp	x21, #0x1
000000000000a8ac	b.hi	0xaa74
000000000000a8b0	ldp	x8, x9, [x24, #0x120]
000000000000a8b4	cmp	x8, x9
000000000000a8b8	b.eq	0xa8d8
000000000000a8bc	mov	x10, x9
000000000000a8c0	ldr	x11, [x10, #-0x10]!
000000000000a8c4	cmp	x11, x27
000000000000a8c8	b.eq	0xa990
000000000000a8cc	mov	x9, x10
000000000000a8d0	cmp	x10, x8
000000000000a8d4	b.ne	0xa8c0
000000000000a8d8	add	x22, x24, #0x120
000000000000a8dc	add	x0, x24, #0x138
000000000000a8e0	mov	w9, #0x1
000000000000a8e4	ldaxr	w8, [x0]
000000000000a8e8	stlxr	w10, w9, [x0]
000000000000a8ec	cbnz	w10, 0xa8e4
000000000000a8f0	b	0xa900
000000000000a8f4	mov	w28, #0x1
000000000000a8f8	stlxr	w9, x28, [x27]
000000000000a8fc	cbz	w9, 0xa910
000000000000a900	ldaxr	x21, [x27]
000000000000a904	cbz	x21, 0xa8f4
000000000000a908	mov	w28, #0x0
000000000000a90c	clrex
000000000000a910	cmp	x21, #0x1
000000000000a914	b.eq	0xa900
000000000000a918	cbz	x24, 0xa940
000000000000a91c	ldaxr	w9, [x0]
000000000000a920	stlxr	w10, w8, [x0]
000000000000a924	cbnz	w10, 0xa91c
000000000000a928	cbnz	w8, 0xa940
000000000000a92c	cmp	w9, #0x1
000000000000a930	b.ne	0xa940
000000000000a934	ldarb	w8, [x23]
000000000000a938	tbz	w8, #0x0, 0xa940
000000000000a93c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000a940	tbz	w28, #0x0, 0xa988
000000000000a944	ldr	x8, [x24, #0x118]
000000000000a948	add	x0, x8, #0x70
000000000000a94c	mov	w1, #0x10
000000000000a950	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a954	mov	x21, x0
000000000000a958	adr	x8, #0x4f3a8
000000000000a95c	nop
000000000000a960	str	x8, [x21, #0x10]!
000000000000a964	stur	xzr, [x21, #-0x8]
000000000000a968	str	x21, [sp, #0x60]
000000000000a96c	ldp	x9, x8, [x24, #0x128]
000000000000a970	cmp	x9, x8
000000000000a974	b.hs	0xa99c
000000000000a978	stp	x27, x21, [x9]
000000000000a97c	add	x8, x9, #0x10
000000000000a980	str	x8, [x24, #0x128]
000000000000a984	b	0xaa2c
000000000000a988	str	x21, [sp, #0x60]
000000000000a98c	b	0xaa74
000000000000a990	ldur	x21, [x9, #-0x8]
000000000000a994	str	x21, [sp, #0x60]
000000000000a998	b	0xaa74
000000000000a99c	str	x22, [sp, #0x8]
000000000000a9a0	ldr	x10, [x22]
000000000000a9a4	sub	x9, x9, x10
000000000000a9a8	asr	x22, x9, #4
000000000000a9ac	add	x9, x22, #0x1
000000000000a9b0	lsr	x11, x9, #60
000000000000a9b4	cbnz	x11, 0xab60
000000000000a9b8	sub	x8, x8, x10
000000000000a9bc	asr	x10, x8, #3
000000000000a9c0	cmp	x10, x9
000000000000a9c4	csel	x9, x9, x10, lo
000000000000a9c8	mov	x10, #0x7ffffffffffffff
000000000000a9cc	cmp	x10, x8, asr #4
000000000000a9d0	mov	x8, #0xfffffffffffffff
000000000000a9d4	csel	x23, x9, x8, hi
000000000000a9d8	mov	x0, x23
000000000000a9dc	mov	w1, #0x10
000000000000a9e0	bl	0x519e0 ; symbol stub for: _calloc
000000000000a9e4	add	x8, x0, x22, lsl #4
000000000000a9e8	add	x28, x0, x23, lsl #4
000000000000a9ec	stp	x27, x21, [x8]
000000000000a9f0	add	x22, x8, #0x10
000000000000a9f4	ldp	x1, x9, [x24, #0x120]
000000000000a9f8	sub	x2, x9, x1
000000000000a9fc	sub	x23, x8, x2
000000000000aa00	cmp	x2, #0x1
000000000000aa04	b.lt	0xaa18
000000000000aa08	mov	x0, x23
000000000000aa0c	bl	0x51aac ; symbol stub for: _memcpy
000000000000aa10	ldr	x8, [sp, #0x8]
000000000000aa14	ldr	x1, [x8]
000000000000aa18	stp	x23, x22, [x24, #0x120]
000000000000aa1c	str	x28, [x24, #0x130]
000000000000aa20	cbz	x1, 0xaa2c
000000000000aa24	mov	x0, x1
000000000000aa28	bl	0x51a64 ; symbol stub for: _free
000000000000aa2c	mov	w0, #0x1
000000000000aa30	mov	w1, #0x28
000000000000aa34	bl	0x519e0 ; symbol stub for: _calloc
000000000000aa38	mov	x8, x24
000000000000aa3c	ldr	x9, [x8, #0x18]!
000000000000aa40	sub	x10, x8, #0x8
000000000000aa44	stp	x27, x10, [x0, #0x10]
000000000000aa48	stp	x9, x8, [x0]
000000000000aa4c	str	x0, [x9, #0x8]
000000000000aa50	str	x0, [x8]
000000000000aa54	ldr	x9, [x8, #0x10]
000000000000aa58	add	x9, x9, #0x1
000000000000aa5c	str	x9, [x8, #0x10]
000000000000aa60	str	x0, [x0, #0x20]
000000000000aa64	stlr	x21, [x27]
000000000000aa68	ldr	x9, [x8, #0x110]
000000000000aa6c	sub	x9, x9, #0x10
000000000000aa70	str	x9, [x8, #0x110]
000000000000aa74	ldr	x8, [x24, #0x118]
000000000000aa78	add	x0, x8, #0x70
000000000000aa7c	mov	w1, #0x20
000000000000aa80	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000aa84	str	x26, [x0, #0x10]!
000000000000aa88	stur	xzr, [x0, #-0x8]
000000000000aa8c	str	x0, [sp, #0x68]
000000000000aa90	str	x21, [x0, #0x8]
000000000000aa94	str	x0, [x20, #0x20]
000000000000aa98	ldr	x8, [x24, #0x118]
000000000000aa9c	add	x0, x8, #0x70
000000000000aaa0	mov	w1, #0x20
000000000000aaa4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000aaa8	mov	x21, x0
000000000000aaac	adr	x8, #0x4f2e4
000000000000aab0	nop
000000000000aab4	str	x8, [x21, #0x10]!
000000000000aab8	stur	xzr, [x21, #-0x8]
000000000000aabc	movi.16b	v0, #0x0
000000000000aac0	stp	q0, q0, [sp, #0x80]
000000000000aac4	add	x8, sp, #0x80
000000000000aac8	ldp	x9, x10, [x24, #0x110]
000000000000aacc	str	x8, [x24, #0x110]
000000000000aad0	mov	x8, #0x500000000
000000000000aad4	stp	x9, x8, [sp, #0x88]
000000000000aad8	str	x21, [sp, #0x70]
000000000000aadc	str	xzr, [sp, #0xa0]
000000000000aae0	add	x0, x10, #0x70
000000000000aae4	mov	w1, #0x18
000000000000aae8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000aaec	adr	x22, #0x4f0f4
000000000000aaf0	nop
000000000000aaf4	str	x22, [x0, #0x10]!
000000000000aaf8	stur	xzr, [x0, #-0x8]
000000000000aafc	str	x0, [sp, #0x98]
000000000000ab00	str	wzr, [x0, #0x8]
000000000000ab04	str	x0, [x21, #0x8]
000000000000ab08	ldr	x8, [x24, #0x118]
000000000000ab0c	add	x0, x8, #0x70
000000000000ab10	mov	w1, #0x18
000000000000ab14	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ab18	str	x22, [x0, #0x10]!
000000000000ab1c	stur	xzr, [x0, #-0x8]
000000000000ab20	str	x0, [sp, #0xa0]
000000000000ab24	str	wzr, [x0, #0x8]
000000000000ab28	str	x0, [x21, #0x10]
000000000000ab2c	str	x21, [x20, #0x28]
000000000000ab30	str	x25, [sp, #0x38]
000000000000ab34	str	x25, [x19, #0x20]
000000000000ab38	ldr	x8, [sp, #0x18]
000000000000ab3c	str	x8, [x24, #0x110]
000000000000ab40	ldp	x29, x30, [sp, #0x130]
000000000000ab44	ldp	x20, x19, [sp, #0x120]
000000000000ab48	ldp	x22, x21, [sp, #0x110]
000000000000ab4c	ldp	x24, x23, [sp, #0x100]
000000000000ab50	ldp	x26, x25, [sp, #0xf0]
000000000000ab54	ldp	x28, x27, [sp, #0xe0]
000000000000ab58	add	sp, sp, #0x140
000000000000ab5c	ret
000000000000ab60	ldr	x0, [sp, #0x8]
000000000000ab64	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
_kfun:kotlin.Throwable#<get-message>(){}kotlin.String?:
000000000000ab68	stp	x20, x19, [sp, #-0x20]!
000000000000ab6c	stp	x29, x30, [sp, #0x10]
000000000000ab70	add	x29, sp, #0x10
000000000000ab74	mov	x19, x1
000000000000ab78	mov	x20, x0
000000000000ab7c	adr	x8, #0x7bec7
000000000000ab80	nop
000000000000ab84	ldarb	w8, [x8]
000000000000ab88	tbz	w8, #0x0, 0xab90
000000000000ab8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ab90	ldr	x0, [x20, #0x8]
000000000000ab94	str	x0, [x19]
000000000000ab98	ldp	x29, x30, [sp, #0x10]
000000000000ab9c	ldp	x20, x19, [sp], #0x20
000000000000aba0	ret
_kfun:kotlin.Throwable#<get-cause>(){}kotlin.Throwable?:
000000000000aba4	stp	x20, x19, [sp, #-0x20]!
000000000000aba8	stp	x29, x30, [sp, #0x10]
000000000000abac	add	x29, sp, #0x10
000000000000abb0	mov	x19, x1
000000000000abb4	mov	x20, x0
000000000000abb8	adr	x8, #0x7be8b
000000000000abbc	nop
000000000000abc0	ldarb	w8, [x8]
000000000000abc4	tbz	w8, #0x0, 0xabcc
000000000000abc8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000abcc	ldr	x0, [x20, #0x10]
000000000000abd0	str	x0, [x19]
000000000000abd4	ldp	x29, x30, [sp, #0x10]
000000000000abd8	ldp	x20, x19, [sp], #0x20
000000000000abdc	ret
_kfun:kotlin.Throwable.<get-stackTraceStrings>#internal:
000000000000abe0	stp	x20, x19, [sp, #-0x20]!
000000000000abe4	stp	x29, x30, [sp, #0x10]
000000000000abe8	add	x29, sp, #0x10
000000000000abec	mov	x19, x1
000000000000abf0	mov	x20, x0
000000000000abf4	adr	x8, #0x7be4f
000000000000abf8	nop
000000000000abfc	ldarb	w8, [x8]
000000000000ac00	tbz	w8, #0x0, 0xac08
000000000000ac04	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ac08	ldr	x0, [x20, #0x20]
000000000000ac0c	ldr	x8, [x0]
000000000000ac10	and	x8, x8, #0xfffffffffffffffc
000000000000ac14	ldr	x8, [x8]
000000000000ac18	ldr	w9, [x8, #0x3c]
000000000000ac1c	ldr	x8, [x8, #0x40]
000000000000ac20	tbnz	w9, #0x1f, 0xac30
000000000000ac24	mov	w10, #0x150
000000000000ac28	and	x9, x9, x10
000000000000ac2c	b	0xacb4
000000000000ac30	neg	w10, w9
000000000000ac34	mvn	w9, w9
000000000000ac38	cmp	w10, #0x9
000000000000ac3c	b.ge	0xac74
000000000000ac40	cmp	w10, #0x2
000000000000ac44	b.lt	0xaca8
000000000000ac48	mov	x10, #0x0
000000000000ac4c	mov	x11, x8
000000000000ac50	ldr	w12, [x11]
000000000000ac54	cmp	w12, #0x14f
000000000000ac58	b.gt	0xacb0
000000000000ac5c	add	x10, x10, #0x1
000000000000ac60	add	x11, x11, #0x10
000000000000ac64	cmp	x9, x10
000000000000ac68	b.ne	0xac50
000000000000ac6c	mov	x10, x9
000000000000ac70	b	0xacb0
000000000000ac74	mov	w10, #0x0
000000000000ac78	add	w11, w9, w10
000000000000ac7c	cmp	w11, #0x0
000000000000ac80	cinc	w11, w11, lt
000000000000ac84	asr	w11, w11, #1
000000000000ac88	sbfiz	x12, x11, #4, #32
000000000000ac8c	ldr	w12, [x8, x12]
000000000000ac90	cmp	w12, #0x150
000000000000ac94	csinc	w10, w10, w11, ge
000000000000ac98	csel	w9, w9, w11, lt
000000000000ac9c	cmp	w10, w9
000000000000aca0	b.lt	0xac78
000000000000aca4	b	0xacb0
000000000000aca8	mov	w10, #0x0
000000000000acac	b	0xacb0
000000000000acb0	sxtw	x9, w10
000000000000acb4	add	x8, x8, x9, lsl #4
000000000000acb8	ldr	x8, [x8, #0x8]
000000000000acbc	ldr	x8, [x8]
000000000000acc0	mov	x1, x19
000000000000acc4	blr	x8
000000000000acc8	str	x0, [x19]
000000000000accc	ldp	x29, x30, [sp, #0x10]
000000000000acd0	ldp	x20, x19, [sp], #0x20
000000000000acd4	ret
_kfun:kotlin.Throwable#printStackTrace(){}:
000000000000acd8	sub	sp, sp, #0xd0
000000000000acdc	stp	x22, x21, [sp, #0xa0]
000000000000ace0	stp	x20, x19, [sp, #0xb0]
000000000000ace4	stp	x29, x30, [sp, #0xc0]
000000000000ace8	add	x29, sp, #0xc0
000000000000acec	mov	x19, x0
000000000000acf0	movi.16b	v0, #0x0
000000000000acf4	stp	q0, q0, [sp, #0x30]
000000000000acf8	stp	q0, q0, [sp, #0x10]
000000000000acfc	adr	x8, #0x4eb14
000000000000ad00	nop
000000000000ad04	orr	x8, x8, #0x3
000000000000ad08	str	x8, [sp, #0x8]
000000000000ad0c	adrp	x0, 98 ; 0x6c000
000000000000ad10	add	x0, x0, #0xbb0
000000000000ad14	ldr	x8, [x0]
000000000000ad18	blr	x8
000000000000ad1c	ldr	x21, [x0]
000000000000ad20	ldr	x8, [x21, #0x110]
000000000000ad24	add	x9, sp, #0x30
000000000000ad28	str	x9, [x21, #0x110]
000000000000ad2c	mov	x20, #0x400000000
000000000000ad30	stp	x8, x20, [sp, #0x38]
000000000000ad34	adr	x8, #0x7bd0f
000000000000ad38	nop
000000000000ad3c	ldarb	w8, [x8]
000000000000ad40	tbz	w8, #0x0, 0xad48
000000000000ad44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ad48	add	x8, sp, #0x8
000000000000ad4c	str	x8, [sp, #0x48]
000000000000ad50	movi.16b	v0, #0x0
000000000000ad54	stp	q0, q0, [sp, #0x50]
000000000000ad58	str	xzr, [sp, #0x70]
000000000000ad5c	add	x8, sp, #0x50
000000000000ad60	ldp	x9, x10, [x21, #0x110]
000000000000ad64	str	x8, [x21, #0x110]
000000000000ad68	mov	x8, #0x500000000
000000000000ad6c	stp	x9, x8, [sp, #0x58]
000000000000ad70	str	x19, [sp, #0x10]
000000000000ad74	add	x0, x10, #0x70
000000000000ad78	mov	w1, #0x20
000000000000ad7c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ad80	mov	x19, x0
000000000000ad84	adr	x8, #0x5160c
000000000000ad88	nop
000000000000ad8c	str	x8, [x19, #0x10]!
000000000000ad90	stur	xzr, [x19, #-0x8]
000000000000ad94	str	x19, [sp, #0x68]
000000000000ad98	mov	x0, x19
000000000000ad9c	mov	w1, #0xa
000000000000ada0	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000ada4	str	x19, [sp, #0x18]
000000000000ada8	ldr	x8, [x21, #0x118]
000000000000adac	add	x0, x8, #0x70
000000000000adb0	mov	w1, #0x18
000000000000adb4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000adb8	mov	x19, x0
000000000000adbc	adr	x8, #0x50ec4
000000000000adc0	nop
000000000000adc4	str	x8, [x19, #0x10]!
000000000000adc8	stur	xzr, [x19, #-0x8]
000000000000adcc	str	x19, [sp, #0x70]
000000000000add0	movi.16b	v0, #0x0
000000000000add4	stp	q0, q0, [x29, #-0x40]
000000000000add8	sub	x8, x29, #0x40
000000000000addc	ldp	x9, x10, [x21, #0x110]
000000000000ade0	str	x8, [x21, #0x110]
000000000000ade4	stp	x9, x20, [x29, #-0x38]
000000000000ade8	add	x0, x10, #0x70
000000000000adec	mov	w1, #0x60
000000000000adf0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000adf4	mov	x20, x0
000000000000adf8	adr	x8, #0x507d8
000000000000adfc	nop
000000000000ae00	str	x8, [x20, #0x10]!
000000000000ae04	stur	xzr, [x20, #-0x8]
000000000000ae08	stur	x20, [x29, #-0x28]
000000000000ae0c	mov	x0, x20
000000000000ae10	mov	w1, #0x8
000000000000ae14	bl	"_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}"
000000000000ae18	str	x20, [x19, #0x8]
000000000000ae1c	str	x19, [sp, #0x20]
000000000000ae20	ldr	x8, [sp, #0x58]
000000000000ae24	str	x8, [x21, #0x110]
000000000000ae28	mov	w8, #0x1
000000000000ae2c	strb	w8, [sp, #0x28]
000000000000ae30	ldr	x1, [sp, #0x10]
000000000000ae34	adr	x2, #0x5a3a4
000000000000ae38	nop
000000000000ae3c	add	x0, sp, #0x8
000000000000ae40	mov	x3, x2
000000000000ae44	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpFullTrace#internal"
000000000000ae48	ldr	x8, [sp, #0x38]
000000000000ae4c	str	x8, [x21, #0x110]
000000000000ae50	ldp	x29, x30, [sp, #0xc0]
000000000000ae54	ldp	x20, x19, [sp, #0xb0]
000000000000ae58	ldp	x22, x21, [sp, #0xa0]
000000000000ae5c	add	sp, sp, #0xd0
000000000000ae60	ret
_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal:
000000000000ae64	sub	sp, sp, #0xd0
000000000000ae68	stp	x24, x23, [sp, #0x90]
000000000000ae6c	stp	x22, x21, [sp, #0xa0]
000000000000ae70	stp	x20, x19, [sp, #0xb0]
000000000000ae74	stp	x29, x30, [sp, #0xc0]
000000000000ae78	add	x29, sp, #0xc0
000000000000ae7c	mov	x19, x1
000000000000ae80	mov	x20, x0
000000000000ae84	movi.16b	v0, #0x0
000000000000ae88	stp	q0, q0, [sp]
000000000000ae8c	str	xzr, [sp, #0x20]
000000000000ae90	adrp	x0, 98 ; 0x6c000
000000000000ae94	add	x0, x0, #0xbb0
000000000000ae98	ldr	x8, [x0]
000000000000ae9c	blr	x8
000000000000aea0	ldr	x22, [x0]
000000000000aea4	ldr	x8, [x22, #0x110]
000000000000aea8	mov	x9, sp
000000000000aeac	str	x9, [x22, #0x110]
000000000000aeb0	mov	x9, #0x500000000
000000000000aeb4	stp	x8, x9, [sp, #0x8]
000000000000aeb8	adr	x8, #0x7bb8b
000000000000aebc	nop
000000000000aec0	ldarb	w8, [x8]
000000000000aec4	tbz	w8, #0x0, 0xaecc
000000000000aec8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000aecc	ldrb	w8, [x20, #0x20]
000000000000aed0	cmp	w8, #0x1
000000000000aed4	b.ne	0xafb4
000000000000aed8	mov	x0, x19
000000000000aedc	bl	"_kfun:kotlin.io#println(kotlin.Any?){}"
000000000000aee0	movi.16b	v0, #0x0
000000000000aee4	stp	q0, q0, [sp, #0x30]
000000000000aee8	str	xzr, [sp, #0x80]
000000000000aeec	stp	q0, q0, [sp, #0x60]
000000000000aef0	str	q0, [sp, #0x50]
000000000000aef4	ldr	x8, [x22, #0x110]
000000000000aef8	add	x9, sp, #0x30
000000000000aefc	str	x9, [x22, #0x110]
000000000000af00	mov	x9, #0xb00000000
000000000000af04	stp	x8, x9, [sp, #0x38]
000000000000af08	ldr	w20, [x19, #0x10]
000000000000af0c	tbz	w20, #0x1f, 0xaf94
000000000000af10	ldr	x23, [x19, #0x8]
000000000000af14	stp	x23, x23, [sp, #0x78]
000000000000af18	ldr	w2, [x23, #0x8]
000000000000af1c	and	w21, w2, w2, asr #31
000000000000af20	mov	x0, x20
000000000000af24	mov	x1, x21
000000000000af28	bl	_checkRangeIndexes
000000000000af2c	ldr	xzr, [x23]
000000000000af30	cmp	w20, w21
000000000000af34	b.ge	0xaf94
000000000000af38	sxtw	x8, w20
000000000000af3c	add	x8, x23, x8, lsl #1
000000000000af40	add	x8, x8, #0x10
000000000000af44	mvn	w9, w20
000000000000af48	add	w9, w21, w9
000000000000af4c	cmp	w9, #0xf
000000000000af50	b.lo	0xaf84
000000000000af54	add	x10, x9, #0x1
000000000000af58	and	x9, x10, #0x1fffffff0
000000000000af5c	add	w20, w20, w9
000000000000af60	movi.16b	v0, #0x0
000000000000af64	mov	x11, x8
000000000000af68	mov	x12, x9
000000000000af6c	stp	q0, q0, [x11], #0x20
000000000000af70	subs	x12, x12, #0x10
000000000000af74	b.ne	0xaf6c
000000000000af78	cmp	x10, x9
000000000000af7c	b.eq	0xaf94
000000000000af80	add	x8, x8, x9, lsl #1
000000000000af84	sub	w9, w21, w20
000000000000af88	strh	wzr, [x8], #0x2
000000000000af8c	subs	w9, w9, #0x1
000000000000af90	b.ne	0xaf88
000000000000af94	mov	x0, x19
000000000000af98	mov	w1, #0x0
000000000000af9c	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000000afa0	str	wzr, [x19, #0x10]
000000000000afa4	ldr	x8, [sp, #0x38]
000000000000afa8	str	x8, [x22, #0x110]
000000000000afac	str	x19, [sp, #0x18]
000000000000afb0	b	0xafc8
000000000000afb4	mov	x8, sp
000000000000afb8	add	x2, x8, #0x20
000000000000afbc	mov	x0, x19
000000000000afc0	mov	w1, #0xa
000000000000afc4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Char){}kotlin.text.StringBuilder"
000000000000afc8	ldr	x8, [sp, #0x8]
000000000000afcc	str	x8, [x22, #0x110]
000000000000afd0	ldp	x29, x30, [sp, #0xc0]
000000000000afd4	ldp	x20, x19, [sp, #0xb0]
000000000000afd8	ldp	x22, x21, [sp, #0xa0]
000000000000afdc	ldp	x24, x23, [sp, #0x90]
000000000000afe0	add	sp, sp, #0xd0
000000000000afe4	ret
_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpFullTrace#internal:
000000000000afe8	sub	sp, sp, #0xa0
000000000000afec	stp	x26, x25, [sp, #0x50]
000000000000aff0	stp	x24, x23, [sp, #0x60]
000000000000aff4	stp	x22, x21, [sp, #0x70]
000000000000aff8	stp	x20, x19, [sp, #0x80]
000000000000affc	stp	x29, x30, [sp, #0x90]
000000000000b000	add	x29, sp, #0x90
000000000000b004	mov	x21, x3
000000000000b008	mov	x19, x2
000000000000b00c	mov	x22, x1
000000000000b010	mov	x20, x0
000000000000b014	movi.16b	v0, #0x0
000000000000b018	stp	q0, q0, [sp]
000000000000b01c	str	xzr, [sp, #0x40]
000000000000b020	stp	q0, q0, [sp, #0x20]
000000000000b024	mov	x25, sp
000000000000b028	adrp	x0, 97 ; 0x6c000
000000000000b02c	add	x0, x0, #0xbb0
000000000000b030	ldr	x8, [x0]
000000000000b034	blr	x8
000000000000b038	ldr	x23, [x0]
000000000000b03c	ldr	x8, [x23, #0x110]
000000000000b040	str	x25, [x23, #0x110]
000000000000b044	mov	x9, #0x900000000
000000000000b048	stp	x8, x9, [sp, #0x8]
000000000000b04c	adr	x24, #0x7b9f7
000000000000b050	nop
000000000000b054	ldarb	w8, [x24]
000000000000b058	tbz	w8, #0x0, 0xb060
000000000000b05c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b060	mov	x0, x20
000000000000b064	mov	x1, x22
000000000000b068	mov	x2, x19
000000000000b06c	mov	x3, x21
000000000000b070	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpSelfTrace#internal"
000000000000b074	cbz	w0, 0xb0f8
000000000000b078	add	x21, x25, #0x40
000000000000b07c	mov	x8, sp
000000000000b080	add	x1, x8, #0x18
000000000000b084	ldr	x8, [x22]
000000000000b088	and	x8, x8, #0xfffffffffffffffc
000000000000b08c	ldr	x8, [x8]
000000000000b090	ldr	x8, [x8, #0x88]
000000000000b094	mov	x0, x22
000000000000b098	blr	x8
000000000000b09c	adr	x22, #0x5a2c4
000000000000b0a0	nop
000000000000b0a4	b	0xb0e0
000000000000b0a8	ldr	x1, [sp, #0x20]
000000000000b0ac	str	x1, [sp, #0x30]
000000000000b0b0	mov	x0, x20
000000000000b0b4	mov	x2, x19
000000000000b0b8	mov	x3, x22
000000000000b0bc	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpSelfTrace#internal"
000000000000b0c0	ldr	x0, [sp, #0x20]
000000000000b0c4	str	x0, [sp, #0x38]
000000000000b0c8	ldr	x8, [x0]
000000000000b0cc	and	x8, x8, #0xfffffffffffffffc
000000000000b0d0	ldr	x8, [x8]
000000000000b0d4	ldr	x8, [x8, #0x88]
000000000000b0d8	mov	x1, x21
000000000000b0dc	blr	x8
000000000000b0e0	stp	x0, x0, [sp, #0x20]
000000000000b0e4	cbz	x0, 0xb0f8
000000000000b0e8	ldarb	w8, [x24]
000000000000b0ec	tbz	w8, #0x0, 0xb0a8
000000000000b0f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b0f4	b	0xb0a8
000000000000b0f8	ldr	x8, [sp, #0x8]
000000000000b0fc	str	x8, [x23, #0x110]
000000000000b100	ldp	x29, x30, [sp, #0x90]
000000000000b104	ldp	x20, x19, [sp, #0x80]
000000000000b108	ldp	x22, x21, [sp, #0x70]
000000000000b10c	ldp	x24, x23, [sp, #0x60]
000000000000b110	ldp	x26, x25, [sp, #0x50]
000000000000b114	add	sp, sp, #0xa0
000000000000b118	ret
_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpSelfTrace#internal:
000000000000b11c	sub	sp, sp, #0x170
000000000000b120	stp	x28, x27, [sp, #0x110]
000000000000b124	stp	x26, x25, [sp, #0x120]
000000000000b128	stp	x24, x23, [sp, #0x130]
000000000000b12c	stp	x22, x21, [sp, #0x140]
000000000000b130	stp	x20, x19, [sp, #0x150]
000000000000b134	stp	x29, x30, [sp, #0x160]
000000000000b138	add	x29, sp, #0x160
000000000000b13c	mov	x22, x3
000000000000b140	str	x2, [sp, #0x28]
000000000000b144	mov	x28, x1
000000000000b148	mov	x20, x0
000000000000b14c	movi.16b	v0, #0x0
000000000000b150	stp	q0, q0, [sp, #0x30]
000000000000b154	str	xzr, [sp, #0x100]
000000000000b158	stp	q0, q0, [sp, #0xe0]
000000000000b15c	stp	q0, q0, [sp, #0xc0]
000000000000b160	stp	q0, q0, [sp, #0xa0]
000000000000b164	stp	q0, q0, [sp, #0x80]
000000000000b168	stp	q0, q0, [sp, #0x60]
000000000000b16c	str	q0, [sp, #0x50]
000000000000b170	add	x21, sp, #0x30
000000000000b174	adrp	x0, 97 ; 0x6c000
000000000000b178	add	x0, x0, #0xbb0
000000000000b17c	ldr	x8, [x0]
000000000000b180	blr	x8
000000000000b184	ldr	x19, [x0]
000000000000b188	ldr	x8, [x19, #0x110]
000000000000b18c	str	x21, [x19, #0x110]
000000000000b190	mov	x9, #0x1b00000000
000000000000b194	stp	x8, x9, [sp, #0x38]
000000000000b198	adr	x8, #0x7b8ab
000000000000b19c	nop
000000000000b1a0	ldarb	w8, [x8]
000000000000b1a4	tbz	w8, #0x0, 0xb1ac
000000000000b1a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b1ac	ldr	x0, [x20, #0x18]
000000000000b1b0	ldr	x8, [x0]
000000000000b1b4	and	x8, x8, #0xfffffffffffffffc
000000000000b1b8	ldr	x8, [x8]
000000000000b1bc	ldr	w9, [x8, #0x3c]
000000000000b1c0	ldr	x8, [x8, #0x40]
000000000000b1c4	tbnz	w9, #0x1f, 0xb1d0
000000000000b1c8	and	x9, x9, #0xc0
000000000000b1cc	b	0xb254
000000000000b1d0	neg	w10, w9
000000000000b1d4	mvn	w9, w9
000000000000b1d8	cmp	w10, #0x9
000000000000b1dc	b.ge	0xb214
000000000000b1e0	cmp	w10, #0x2
000000000000b1e4	b.lt	0xb248
000000000000b1e8	mov	x10, #0x0
000000000000b1ec	mov	x11, x8
000000000000b1f0	ldr	w12, [x11]
000000000000b1f4	cmp	w12, #0xbf
000000000000b1f8	b.gt	0xb250
000000000000b1fc	add	x10, x10, #0x1
000000000000b200	add	x11, x11, #0x10
000000000000b204	cmp	x9, x10
000000000000b208	b.ne	0xb1f0
000000000000b20c	mov	x10, x9
000000000000b210	b	0xb250
000000000000b214	mov	w10, #0x0
000000000000b218	add	w11, w9, w10
000000000000b21c	cmp	w11, #0x0
000000000000b220	cinc	w11, w11, lt
000000000000b224	asr	w11, w11, #1
000000000000b228	sbfiz	x12, x11, #4, #32
000000000000b22c	ldr	w12, [x8, x12]
000000000000b230	cmp	w12, #0xc0
000000000000b234	csinc	w10, w10, w11, ge
000000000000b238	csel	w9, w9, w11, lt
000000000000b23c	cmp	w10, w9
000000000000b240	b.lt	0xb218
000000000000b244	b	0xb250
000000000000b248	mov	w10, #0x0
000000000000b24c	b	0xb250
000000000000b250	sxtw	x9, w10
000000000000b254	add	x8, x8, x9, lsl #4
000000000000b258	ldr	x8, [x8, #0x8]
000000000000b25c	ldr	x8, [x8]
000000000000b260	mov	x1, x28
000000000000b264	blr	x8
000000000000b268	ldr	x23, [x20, #0x10]
000000000000b26c	tbz	w0, #0x0, 0xb370
000000000000b270	str	x19, [sp, #0x10]
000000000000b274	add	x24, x21, #0x50
000000000000b278	add	x25, x21, #0x60
000000000000b27c	add	x2, x21, #0x48
000000000000b280	add	x26, x21, #0x58
000000000000b284	mov	x0, x23
000000000000b288	ldr	x1, [sp, #0x28]
000000000000b28c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000b290	mov	x1, x22
000000000000b294	mov	x2, x24
000000000000b298	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000b29c	ldr	x8, [x28]
000000000000b2a0	and	x8, x8, #0xfffffffffffffffc
000000000000b2a4	ldr	x8, [x8]
000000000000b2a8	ldr	x8, [x8, #0x80]
000000000000b2ac	mov	x0, x28
000000000000b2b0	mov	x1, x26
000000000000b2b4	blr	x8
000000000000b2b8	mov	x1, x0
000000000000b2bc	mov	x0, x23
000000000000b2c0	mov	x2, x25
000000000000b2c4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000b2c8	mov	x0, x20
000000000000b2cc	mov	x1, x23
000000000000b2d0	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
000000000000b2d4	stp	x28, x20, [sp, #0x18]
000000000000b2d8	ldr	x8, [x20, #0x8]
000000000000b2dc	cmp	x8, x28
000000000000b2e0	b.eq	0xb408
000000000000b2e4	mov	x20, #0x0
000000000000b2e8	ldr	x22, [x8, #0x18]
000000000000b2ec	ldr	w8, [x22, #0x8]
000000000000b2f0	ldr	x23, [x28, #0x18]
000000000000b2f4	ldr	w9, [x23, #0x8]
000000000000b2f8	cmp	w8, w9
000000000000b2fc	csel	w10, w9, w8, gt
000000000000b300	add	x25, x23, #0x10
000000000000b304	add	x26, x22, #0x10
000000000000b308	bic	w24, w10, w10, asr #31
000000000000b30c	sub	w27, w8, #0x1
000000000000b310	sub	w28, w9, #0x1
000000000000b314	cmp	x24, x20
000000000000b318	b.eq	0xb414
000000000000b31c	adr	x8, #0x7b727
000000000000b320	nop
000000000000b324	ldarb	w8, [x8]
000000000000b328	tbz	w8, #0x0, 0xb330
000000000000b32c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b330	ldr	w8, [x23, #0x8]
000000000000b334	cmp	w8, w28
000000000000b338	b.ls	0xb920
000000000000b33c	ldr	w8, [x22, #0x8]
000000000000b340	cmp	w8, w27
000000000000b344	b.ls	0xb920
000000000000b348	ldr	x8, [x25, w28, sxtw #3]
000000000000b34c	ldr	x9, [x26, w27, sxtw #3]
000000000000b350	cmp	x8, x9
000000000000b354	b.ne	0xb410
000000000000b358	add	x20, x20, #0x1
000000000000b35c	sub	w27, w27, #0x1
000000000000b360	sub	w28, w28, #0x1
000000000000b364	cmp	x24, x20
000000000000b368	b.ne	0xb31c
000000000000b36c	b	0xb414
000000000000b370	add	x24, x21, #0x20
000000000000b374	add	x25, x21, #0x30
000000000000b378	add	x26, x21, #0x40
000000000000b37c	add	x2, x21, #0x18
000000000000b380	add	x8, sp, #0x30
000000000000b384	add	x27, x8, #0x28
000000000000b388	mov	x21, x28
000000000000b38c	add	x28, x8, #0x38
000000000000b390	mov	x0, x23
000000000000b394	ldr	x1, [sp, #0x28]
000000000000b398	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000b39c	mov	x1, x22
000000000000b3a0	mov	x2, x24
000000000000b3a4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000b3a8	adr	x1, #0x59fe8
000000000000b3ac	nop
000000000000b3b0	mov	x2, x27
000000000000b3b4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000b3b8	ldr	x8, [x21]
000000000000b3bc	and	x8, x8, #0xfffffffffffffffc
000000000000b3c0	ldr	x8, [x8]
000000000000b3c4	ldr	x8, [x8, #0x80]
000000000000b3c8	mov	x0, x21
000000000000b3cc	mov	x1, x25
000000000000b3d0	blr	x8
000000000000b3d4	mov	x1, x0
000000000000b3d8	mov	x0, x23
000000000000b3dc	mov	x2, x28
000000000000b3e0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000b3e4	adr	x1, #0x59e6c
000000000000b3e8	nop
000000000000b3ec	mov	x2, x26
000000000000b3f0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000b3f4	mov	x0, x20
000000000000b3f8	mov	x1, x23
000000000000b3fc	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
000000000000b400	mov	w0, #0x0
000000000000b404	b	0xb8f8
000000000000b408	mov	w19, #0x0
000000000000b40c	b	0xb424
000000000000b410	mov	x24, x20
000000000000b414	sub	w8, w24, #0x1
000000000000b418	bic	w19, w8, w8, asr #31
000000000000b41c	add	x21, sp, #0x30
000000000000b420	ldr	x28, [sp, #0x18]
000000000000b424	add	x1, x21, #0x68
000000000000b428	mov	x0, x28
000000000000b42c	bl	"_kfun:kotlin.Throwable.<get-stackTraceStrings>#internal"
000000000000b430	ldr	w8, [x0, #0x8]
000000000000b434	str	w19, [sp, #0xc]
000000000000b438	sub	w20, w8, w19
000000000000b43c	cmp	w20, #0x1
000000000000b440	b.lt	0xb4ec
000000000000b444	mov	x22, #0x0
000000000000b448	add	x8, sp, #0x30
000000000000b44c	add	x23, x8, #0x70
000000000000b450	add	x24, x8, #0x80
000000000000b454	add	x25, x8, #0x90
000000000000b458	add	x26, x8, #0x88
000000000000b45c	adr	x27, #0x59f84
000000000000b460	nop
000000000000b464	ldr	x21, [sp, #0x20]
000000000000b468	adr	x8, #0x7b5db
000000000000b46c	nop
000000000000b470	ldarb	w8, [x8]
000000000000b474	tbz	w8, #0x0, 0xb47c
000000000000b478	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b47c	mov	x0, x28
000000000000b480	mov	x1, x23
000000000000b484	bl	"_kfun:kotlin.Throwable.<get-stackTraceStrings>#internal"
000000000000b488	ldr	w8, [x0, #0x8]
000000000000b48c	cmp	x22, x8
000000000000b490	b.hs	0xb920
000000000000b494	add	x19, x22, #0x1
000000000000b498	add	x8, x0, x22, lsl #3
000000000000b49c	ldr	x28, [x8, #0x10]
000000000000b4a0	str	x28, [sp, #0xa8]
000000000000b4a4	ldr	x22, [x21, #0x10]
000000000000b4a8	mov	x0, x22
000000000000b4ac	ldr	x1, [sp, #0x28]
000000000000b4b0	mov	x2, x24
000000000000b4b4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000b4b8	mov	x1, x27
000000000000b4bc	mov	x2, x26
000000000000b4c0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000b4c4	mov	x1, x28
000000000000b4c8	mov	x2, x25
000000000000b4cc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000b4d0	mov	x0, x21
000000000000b4d4	mov	x1, x22
000000000000b4d8	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
000000000000b4dc	mov	x22, x19
000000000000b4e0	cmp	x20, x19
000000000000b4e4	ldr	x28, [sp, #0x18]
000000000000b4e8	b.ne	0xb468
000000000000b4ec	ldr	x26, [sp, #0x20]
000000000000b4f0	add	x20, sp, #0x30
000000000000b4f4	ldr	w19, [sp, #0xc]
000000000000b4f8	cbz	w19, 0xb554
000000000000b4fc	add	x22, x20, #0xa0
000000000000b500	add	x23, x20, #0xb0
000000000000b504	add	x2, x20, #0x98
000000000000b508	add	x24, x20, #0xa8
000000000000b50c	ldr	x25, [x26, #0x10]
000000000000b510	mov	x0, x25
000000000000b514	ldr	x1, [sp, #0x28]
000000000000b518	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000b51c	adr	x1, #0x59ee4
000000000000b520	nop
000000000000b524	mov	x2, x22
000000000000b528	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000b52c	mov	x1, x19
000000000000b530	mov	x2, x24
000000000000b534	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000b538	adr	x1, #0x59ef8
000000000000b53c	nop
000000000000b540	mov	x2, x23
000000000000b544	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000b548	mov	x0, x26
000000000000b54c	mov	x1, x25
000000000000b550	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
000000000000b554	ldr	x22, [x28, #0x28]
000000000000b558	str	x22, [sp, #0xe8]
000000000000b55c	ldr	x19, [sp, #0x10]
000000000000b560	cbz	x22, 0xb59c
000000000000b564	ldr	x8, [x22]
000000000000b568	and	x8, x8, #0xfffffffffffffffc
000000000000b56c	ldr	x8, [x8]
000000000000b570	ldr	w9, [x8, #0x3c]
000000000000b574	ldr	x8, [x8, #0x40]
000000000000b578	tbnz	w9, #0x1f, 0xb5a4
000000000000b57c	mov	w10, #0x12
000000000000b580	and	x9, x9, x10
000000000000b584	add	x8, x8, x9, lsl #4
000000000000b588	ldr	x8, [x8, #0x8]
000000000000b58c	ldr	x8, [x8, #0x18]
000000000000b590	mov	x0, x22
000000000000b594	blr	x8
000000000000b598	tbz	w0, #0x0, 0xb640
000000000000b59c	mov	w0, #0x1
000000000000b5a0	b	0xb8f8
000000000000b5a4	neg	w10, w9
000000000000b5a8	mvn	w9, w9
000000000000b5ac	cmp	w10, #0x9
000000000000b5b0	b.ge	0xb5e8
000000000000b5b4	cmp	w10, #0x2
000000000000b5b8	b.lt	0xb61c
000000000000b5bc	mov	x10, #0x0
000000000000b5c0	mov	x11, x8
000000000000b5c4	ldr	w12, [x11]
000000000000b5c8	cmp	w12, #0x11
000000000000b5cc	b.gt	0xb624
000000000000b5d0	add	x10, x10, #0x1
000000000000b5d4	add	x11, x11, #0x10
000000000000b5d8	cmp	x9, x10
000000000000b5dc	b.ne	0xb5c4
000000000000b5e0	mov	x10, x9
000000000000b5e4	b	0xb624
000000000000b5e8	mov	w10, #0x0
000000000000b5ec	add	w11, w9, w10
000000000000b5f0	cmp	w11, #0x0
000000000000b5f4	cinc	w11, w11, lt
000000000000b5f8	asr	w11, w11, #1
000000000000b5fc	sbfiz	x12, x11, #4, #32
000000000000b600	ldr	w12, [x8, x12]
000000000000b604	cmp	w12, #0x12
000000000000b608	csinc	w10, w10, w11, ge
000000000000b60c	csel	w9, w9, w11, lt
000000000000b610	cmp	w10, w9
000000000000b614	b.lt	0xb5ec
000000000000b618	b	0xb624
000000000000b61c	mov	w10, #0x0
000000000000b620	b	0xb624
000000000000b624	sxtw	x9, w10
000000000000b628	add	x8, x8, x9, lsl #4
000000000000b62c	ldr	x8, [x8, #0x8]
000000000000b630	ldr	x8, [x8, #0x18]
000000000000b634	mov	x0, x22
000000000000b638	blr	x8
000000000000b63c	tbnz	w0, #0x0, 0xb59c
000000000000b640	add	x2, x20, #0xc0
000000000000b644	add	x21, x20, #0xd0
000000000000b648	add	x23, x20, #0xc8
000000000000b64c	adr	x1, #0x59e44
000000000000b650	nop
000000000000b654	ldr	x0, [sp, #0x28]
000000000000b658	bl	_Kotlin_String_plusImpl
000000000000b65c	mov	x20, x0
000000000000b660	ldr	x8, [x22]
000000000000b664	and	x8, x8, #0xfffffffffffffffc
000000000000b668	ldr	x8, [x8]
000000000000b66c	ldr	w9, [x8, #0x3c]
000000000000b670	ldr	x8, [x8, #0x40]
000000000000b674	tbnz	w9, #0x1f, 0xb684
000000000000b678	mov	w10, #0x2b
000000000000b67c	and	x9, x9, x10
000000000000b680	b	0xb708
000000000000b684	neg	w10, w9
000000000000b688	mvn	w9, w9
000000000000b68c	cmp	w10, #0x9
000000000000b690	b.ge	0xb6c8
000000000000b694	cmp	w10, #0x2
000000000000b698	b.lt	0xb6fc
000000000000b69c	mov	x10, #0x0
000000000000b6a0	mov	x11, x8
000000000000b6a4	ldr	w12, [x11]
000000000000b6a8	cmp	w12, #0x2a
000000000000b6ac	b.gt	0xb704
000000000000b6b0	add	x10, x10, #0x1
000000000000b6b4	add	x11, x11, #0x10
000000000000b6b8	cmp	x9, x10
000000000000b6bc	b.ne	0xb6a4
000000000000b6c0	mov	x10, x9
000000000000b6c4	b	0xb704
000000000000b6c8	mov	w10, #0x0
000000000000b6cc	add	w11, w9, w10
000000000000b6d0	cmp	w11, #0x0
000000000000b6d4	cinc	w11, w11, lt
000000000000b6d8	asr	w11, w11, #1
000000000000b6dc	sbfiz	x12, x11, #4, #32
000000000000b6e0	ldr	w12, [x8, x12]
000000000000b6e4	cmp	w12, #0x2b
000000000000b6e8	csinc	w10, w10, w11, ge
000000000000b6ec	csel	w9, w9, w11, lt
000000000000b6f0	cmp	w10, w9
000000000000b6f4	b.lt	0xb6cc
000000000000b6f8	b	0xb704
000000000000b6fc	mov	w10, #0x0
000000000000b700	b	0xb704
000000000000b704	sxtw	x9, w10
000000000000b708	add	x8, x8, x9, lsl #4
000000000000b70c	ldr	x8, [x8, #0x8]
000000000000b710	ldr	x8, [x8, #0x30]
000000000000b714	mov	x0, x22
000000000000b718	mov	x1, x23
000000000000b71c	blr	x8
000000000000b720	mov	x22, x0
000000000000b724	mov	w24, #0xa0
000000000000b728	adr	x23, #0x59d88
000000000000b72c	nop
000000000000b730	b	0xb77c
000000000000b734	ldr	x8, [x22]
000000000000b738	and	x8, x8, #0xfffffffffffffffc
000000000000b73c	ldr	x8, [x8]
000000000000b740	ldr	w9, [x8, #0x3c]
000000000000b744	ldr	x8, [x8, #0x40]
000000000000b748	tbnz	w9, #0x1f, 0xb7f8
000000000000b74c	and	x9, x9, x24
000000000000b750	add	x8, x8, x9, lsl #4
000000000000b754	ldr	x8, [x8, #0x8]
000000000000b758	ldr	x8, [x8, #0x8]
000000000000b75c	mov	x0, x22
000000000000b760	mov	x1, x21
000000000000b764	blr	x8
000000000000b768	mov	x1, x0
000000000000b76c	mov	x0, x26
000000000000b770	mov	x2, x20
000000000000b774	mov	x3, x23
000000000000b778	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpFullTrace#internal"
000000000000b77c	ldr	x8, [x22]
000000000000b780	and	x8, x8, #0xfffffffffffffffc
000000000000b784	ldr	x8, [x8]
000000000000b788	ldr	w9, [x8, #0x3c]
000000000000b78c	ldr	x8, [x8, #0x40]
000000000000b790	tbnz	w9, #0x1f, 0xb7b4
000000000000b794	and	x9, x9, x24
000000000000b798	add	x8, x8, x9, lsl #4
000000000000b79c	ldr	x8, [x8, #0x8]
000000000000b7a0	ldr	x8, [x8]
000000000000b7a4	mov	x0, x22
000000000000b7a8	blr	x8
000000000000b7ac	tbnz	w0, #0x0, 0xb8d0
000000000000b7b0	b	0xb8f0
000000000000b7b4	neg	w10, w9
000000000000b7b8	mvn	w9, w9
000000000000b7bc	cmp	w10, #0x9
000000000000b7c0	b.ge	0xb83c
000000000000b7c4	cmp	w10, #0x2
000000000000b7c8	b.lt	0xb8a4
000000000000b7cc	mov	x10, #0x0
000000000000b7d0	mov	x11, x8
000000000000b7d4	ldr	w12, [x11]
000000000000b7d8	cmp	w12, #0x9f
000000000000b7dc	b.gt	0xb8b4
000000000000b7e0	add	x10, x10, #0x1
000000000000b7e4	add	x11, x11, #0x10
000000000000b7e8	cmp	x9, x10
000000000000b7ec	b.ne	0xb7d4
000000000000b7f0	mov	x10, x9
000000000000b7f4	b	0xb8b4
000000000000b7f8	neg	w10, w9
000000000000b7fc	mvn	w9, w9
000000000000b800	cmp	w10, #0x9
000000000000b804	b.ge	0xb870
000000000000b808	cmp	w10, #0x2
000000000000b80c	b.lt	0xb8ac
000000000000b810	mov	x10, #0x0
000000000000b814	mov	x11, x8
000000000000b818	ldr	w12, [x11]
000000000000b81c	cmp	w12, #0x9f
000000000000b820	b.gt	0xb8e8
000000000000b824	add	x10, x10, #0x1
000000000000b828	add	x11, x11, #0x10
000000000000b82c	cmp	x9, x10
000000000000b830	b.ne	0xb818
000000000000b834	mov	x10, x9
000000000000b838	b	0xb8e8
000000000000b83c	mov	w10, #0x0
000000000000b840	add	w11, w9, w10
000000000000b844	cmp	w11, #0x0
000000000000b848	cinc	w11, w11, lt
000000000000b84c	asr	w11, w11, #1
000000000000b850	sbfiz	x12, x11, #4, #32
000000000000b854	ldr	w12, [x8, x12]
000000000000b858	cmp	w12, #0xa0
000000000000b85c	csinc	w10, w10, w11, ge
000000000000b860	csel	w9, w9, w11, lt
000000000000b864	cmp	w10, w9
000000000000b868	b.lt	0xb840
000000000000b86c	b	0xb8b4
000000000000b870	mov	w10, #0x0
000000000000b874	add	w11, w9, w10
000000000000b878	cmp	w11, #0x0
000000000000b87c	cinc	w11, w11, lt
000000000000b880	asr	w11, w11, #1
000000000000b884	sbfiz	x12, x11, #4, #32
000000000000b888	ldr	w12, [x8, x12]
000000000000b88c	cmp	w12, #0xa0
000000000000b890	csinc	w10, w10, w11, ge
000000000000b894	csel	w9, w9, w11, lt
000000000000b898	cmp	w10, w9
000000000000b89c	b.lt	0xb874
000000000000b8a0	b	0xb8e8
000000000000b8a4	mov	w10, #0x0
000000000000b8a8	b	0xb8b4
000000000000b8ac	mov	w10, #0x0
000000000000b8b0	b	0xb8e8
000000000000b8b4	sxtw	x9, w10
000000000000b8b8	add	x8, x8, x9, lsl #4
000000000000b8bc	ldr	x8, [x8, #0x8]
000000000000b8c0	ldr	x8, [x8]
000000000000b8c4	mov	x0, x22
000000000000b8c8	blr	x8
000000000000b8cc	tbz	w0, #0x0, 0xb8f0
000000000000b8d0	adr	x8, #0x7b173
000000000000b8d4	nop
000000000000b8d8	ldarb	w8, [x8]
000000000000b8dc	tbz	w8, #0x0, 0xb734
000000000000b8e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b8e4	b	0xb734
000000000000b8e8	sxtw	x9, w10
000000000000b8ec	b	0xb750
000000000000b8f0	mov	w0, #0x1
000000000000b8f4	ldr	x19, [sp, #0x10]
000000000000b8f8	ldr	x8, [sp, #0x38]
000000000000b8fc	str	x8, [x19, #0x110]
000000000000b900	ldp	x29, x30, [sp, #0x160]
000000000000b904	ldp	x20, x19, [sp, #0x150]
000000000000b908	ldp	x22, x21, [sp, #0x140]
000000000000b90c	ldp	x24, x23, [sp, #0x130]
000000000000b910	ldp	x26, x25, [sp, #0x120]
000000000000b914	ldp	x28, x27, [sp, #0x110]
000000000000b918	add	sp, sp, #0x170
000000000000b91c	ret
000000000000b920	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.Throwable#toString(){}kotlin.String:
000000000000b924	sub	sp, sp, #0x100
000000000000b928	stp	x28, x27, [sp, #0xa0]
000000000000b92c	stp	x26, x25, [sp, #0xb0]
000000000000b930	stp	x24, x23, [sp, #0xc0]
000000000000b934	stp	x22, x21, [sp, #0xd0]
000000000000b938	stp	x20, x19, [sp, #0xe0]
000000000000b93c	stp	x29, x30, [sp, #0xf0]
000000000000b940	add	x29, sp, #0xf0
000000000000b944	mov	x19, x1
000000000000b948	mov	x20, x0
000000000000b94c	movi.16b	v0, #0x0
000000000000b950	stp	q0, q0, [sp, #0x30]
000000000000b954	str	xzr, [sp, #0x90]
000000000000b958	stp	q0, q0, [sp, #0x70]
000000000000b95c	stp	q0, q0, [sp, #0x50]
000000000000b960	add	x27, sp, #0x30
000000000000b964	add	x22, x27, #0x20
000000000000b968	add	x21, x27, #0x30
000000000000b96c	adr	x8, #0x4e6d4
000000000000b970	nop
000000000000b974	orr	x8, x8, #0x3
000000000000b978	stp	x8, xzr, [sp, #0x20]
000000000000b97c	stp	xzr, xzr, [sp, #0x10]
000000000000b980	adr	x8, #0x50a10
000000000000b984	nop
000000000000b988	orr	x8, x8, #0x3
000000000000b98c	str	x8, [sp, #0x8]
000000000000b990	adrp	x0, 97 ; 0x6c000
000000000000b994	add	x0, x0, #0xbb0
000000000000b998	ldr	x8, [x0]
000000000000b99c	blr	x8
000000000000b9a0	ldr	x26, [x0]
000000000000b9a4	ldr	x8, [x26, #0x110]
000000000000b9a8	str	x27, [x26, #0x110]
000000000000b9ac	mov	x9, #0xd00000000
000000000000b9b0	stp	x8, x9, [sp, #0x38]
000000000000b9b4	adr	x8, #0x7b08f
000000000000b9b8	nop
000000000000b9bc	ldarb	w8, [x8]
000000000000b9c0	tbz	w8, #0x0, 0xb9c8
000000000000b9c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b9c8	ldr	x8, [x20]
000000000000b9cc	and	x8, x8, #0xfffffffffffffffc
000000000000b9d0	ldr	x8, [x8]
000000000000b9d4	add	x9, sp, #0x20
000000000000b9d8	str	x9, [sp, #0x48]
000000000000b9dc	str	x8, [sp, #0x28]
000000000000b9e0	add	x0, sp, #0x20
000000000000b9e4	mov	x1, x22
000000000000b9e8	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-qualifiedName>(){}kotlin.String?"
000000000000b9ec	mov	x22, x0
000000000000b9f0	cbnz	x0, 0xba14
000000000000b9f4	add	x8, sp, #0x30
000000000000b9f8	add	x1, x8, #0x28
000000000000b9fc	add	x0, sp, #0x20
000000000000ba00	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-simpleName>(){}kotlin.String?"
000000000000ba04	adr	x8, #0x520dc
000000000000ba08	nop
000000000000ba0c	cmp	x0, #0x0
000000000000ba10	csel	x22, x8, x0, eq
000000000000ba14	ldr	x8, [x20]
000000000000ba18	and	x8, x8, #0xfffffffffffffffc
000000000000ba1c	ldr	x8, [x8]
000000000000ba20	ldr	x8, [x8, #0x90]
000000000000ba24	mov	x0, x20
000000000000ba28	mov	x1, x21
000000000000ba2c	blr	x8
000000000000ba30	cbz	x0, 0xbae0
000000000000ba34	add	x23, x27, #0x40
000000000000ba38	add	x24, x27, #0x50
000000000000ba3c	add	x21, x27, #0x60
000000000000ba40	add	x25, x27, #0x48
000000000000ba44	add	x8, sp, #0x8
000000000000ba48	str	x8, [sp, #0x68]
000000000000ba4c	add	x0, sp, #0x8
000000000000ba50	mov	w1, #0xa
000000000000ba54	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000ba58	add	x0, sp, #0x8
000000000000ba5c	mov	x1, x22
000000000000ba60	mov	x2, x23
000000000000ba64	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000ba68	adr	x1, #0x59a78
000000000000ba6c	nop
000000000000ba70	add	x0, sp, #0x8
000000000000ba74	mov	x2, x25
000000000000ba78	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000ba7c	ldr	x8, [x20]
000000000000ba80	and	x8, x8, #0xfffffffffffffffc
000000000000ba84	ldr	x8, [x8]
000000000000ba88	ldr	x8, [x8, #0x90]
000000000000ba8c	mov	x0, x20
000000000000ba90	mov	x1, x24
000000000000ba94	blr	x8
000000000000ba98	cbz	x0, 0xbabc
000000000000ba9c	add	x1, x27, #0x58
000000000000baa0	ldr	x8, [x0]
000000000000baa4	and	x8, x8, #0xfffffffffffffffc
000000000000baa8	ldr	x8, [x8]
000000000000baac	ldr	x8, [x8, #0x80]
000000000000bab0	blr	x8
000000000000bab4	mov	x1, x0
000000000000bab8	b	0xbac4
000000000000babc	adr	x1, #0x59734
000000000000bac0	nop
000000000000bac4	add	x0, sp, #0x8
000000000000bac8	mov	x2, x21
000000000000bacc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000bad0	add	x0, sp, #0x8
000000000000bad4	mov	x1, x19
000000000000bad8	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000badc	mov	x22, x0
000000000000bae0	str	x22, [x19]
000000000000bae4	ldr	x8, [sp, #0x38]
000000000000bae8	str	x8, [x26, #0x110]
000000000000baec	mov	x0, x22
000000000000baf0	ldp	x29, x30, [sp, #0xf0]
000000000000baf4	ldp	x20, x19, [sp, #0xe0]
000000000000baf8	ldp	x22, x21, [sp, #0xd0]
000000000000bafc	ldp	x24, x23, [sp, #0xc0]
000000000000bb00	ldp	x26, x25, [sp, #0xb0]
000000000000bb04	ldp	x28, x27, [sp, #0xa0]
000000000000bb08	add	sp, sp, #0x100
000000000000bb0c	ret
_kfun:kotlin.Throwable.$<init>$lambda$0$FUNCTION_REFERENCE$2.invoke#internal:
000000000000bb10	stp	x28, x27, [sp, #-0x60]!
000000000000bb14	stp	x26, x25, [sp, #0x10]
000000000000bb18	stp	x24, x23, [sp, #0x20]
000000000000bb1c	stp	x22, x21, [sp, #0x30]
000000000000bb20	stp	x20, x19, [sp, #0x40]
000000000000bb24	stp	x29, x30, [sp, #0x50]
000000000000bb28	add	x29, sp, #0x50
000000000000bb2c	sub	sp, sp, #0x4a0
000000000000bb30	str	x1, [sp, #0x10]
000000000000bb34	mov	x20, x0
000000000000bb38	adr	x23, #0x7af0b
000000000000bb3c	nop
000000000000bb40	ldarb	w8, [x23]
000000000000bb44	tbz	w8, #0x0, 0xbb4c
000000000000bb48	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bb4c	ldr	x8, [x20, #0x8]
000000000000bb50	movi.16b	v0, #0x0
000000000000bb54	stp	q0, q0, [sp, #0x20]
000000000000bb58	adrp	x0, 97 ; 0x6c000
000000000000bb5c	add	x0, x0, #0xbb0
000000000000bb60	ldr	x9, [x0]
000000000000bb64	str	x9, [sp, #0x18]
000000000000bb68	blr	x9
000000000000bb6c	ldr	x20, [x0]
000000000000bb70	ldr	x9, [x20, #0x110]
000000000000bb74	add	x10, sp, #0x20
000000000000bb78	str	x10, [x20, #0x110]
000000000000bb7c	mov	x10, #0x400000000
000000000000bb80	stp	x9, x10, [sp, #0x28]
000000000000bb84	ldr	x8, [x8, #0x18]
000000000000bb88	add	x28, x8, #0x10
000000000000bb8c	ldr	w22, [x8, #0x8]
000000000000bb90	add	x21, x20, #0x138
000000000000bb94	mov	w8, #0x1
000000000000bb98	ldaxr	w19, [x21]
000000000000bb9c	stlxr	w9, w8, [x21]
000000000000bba0	cbnz	w9, 0xbb98
000000000000bba4	str	xzr, [sp, #0x50]
000000000000bba8	mov	w8, #0x1
000000000000bbac	str	w8, [sp, #0x58]
000000000000bbb0	strb	wzr, [sp, #0x5c]
000000000000bbb4	adrp	x0, 97 ; 0x6c000
000000000000bbb8	add	x0, x0, #0xbb0
000000000000bbbc	ldr	x8, [sp, #0x18]
000000000000bbc0	blr	x8
000000000000bbc4	ldr	x8, [x0]
000000000000bbc8	cbz	x8, 0xbbf0
000000000000bbcc	add	x9, x8, #0x138
000000000000bbd0	mov	w11, #0x1
000000000000bbd4	ldaxr	w10, [x9]
000000000000bbd8	stlxr	w12, w11, [x9]
000000000000bbdc	cbnz	w12, 0xbbd4
000000000000bbe0	str	x8, [sp, #0x50]
000000000000bbe4	str	w10, [sp, #0x58]
000000000000bbe8	mov	w9, #0x1
000000000000bbec	strb	w9, [sp, #0x5c]
000000000000bbf0	stp	xzr, xzr, [sp, #0x68]
000000000000bbf4	str	xzr, [sp, #0x78]
000000000000bbf8	cbz	w22, 0xbe70
000000000000bbfc	str	x20, [sp, #0x8]
000000000000bc00	mov	w23, #0x18
000000000000bc04	mov	x0, x22
000000000000bc08	mov	w1, #0x18
000000000000bc0c	bl	0x519e0 ; symbol stub for: _calloc
000000000000bc10	mov	x20, #0x0
000000000000bc14	madd	x8, x22, x23, x0
000000000000bc18	stp	x0, x0, [sp, #0x68]
000000000000bc1c	str	x8, [sp, #0x78]
000000000000bc20	mov	x23, #-0x5555555555555556
000000000000bc24	movk	x23, #0xaaab
000000000000bc28	adr	x27, #0x4adb2 ; literal pool for: ""
000000000000bc2c	nop
000000000000bc30	b	0xbc60
000000000000bc34	ldr	q0, [sp, #0x80]
000000000000bc38	ldr	x8, [sp, #0x90]
000000000000bc3c	str	x8, [x26, #0x10]
000000000000bc40	str	q0, [x26]
000000000000bc44	stp	xzr, xzr, [sp, #0x88]
000000000000bc48	str	xzr, [sp, #0x80]
000000000000bc4c	add	x8, x26, #0x18
000000000000bc50	str	x8, [sp, #0x70]
000000000000bc54	add	x20, x20, #0x1
000000000000bc58	cmp	x20, x22
000000000000bc5c	b.eq	0xbe60
000000000000bc60	ldr	x8, [x28, x20, lsl #3]
000000000000bc64	cmp	x8, #0x2
000000000000bc68	b.lo	0xbc54
000000000000bc6c	and	x8, x8, #0xfffffffffffffffe
000000000000bc70	sub	x3, x8, #0x1
000000000000bc74	ldp	x9, x8, [sp, #0x68]
000000000000bc78	sub	x8, x8, x9
000000000000bc7c	asr	x8, x8, #3
000000000000bc80	mul	x2, x8, x23
000000000000bc84	str	x27, [sp]
000000000000bc88	add	x0, sp, #0x98
000000000000bc8c	mov	w4, #0x0
000000000000bc90	adr	x5, #0x4ac94 ; literal pool for: "%s"
000000000000bc94	nop
000000000000bc98	bl	__ZL18snprintf_with_addrPcmmPKvbPKcz
000000000000bc9c	add	x0, sp, #0x98
000000000000bca0	bl	0x51d34 ; symbol stub for: _strlen
000000000000bca4	cmn	x0, #0x10
000000000000bca8	b.hs	0xc0d4
000000000000bcac	mov	x24, x0
000000000000bcb0	cmp	x0, #0x17
000000000000bcb4	b.hs	0xbcd8
000000000000bcb8	add	x25, sp, #0x80
000000000000bcbc	strb	w24, [sp, #0x97]
000000000000bcc0	cbnz	x24, 0xbcfc
000000000000bcc4	strb	wzr, [x25, x24]
000000000000bcc8	ldp	x26, x8, [sp, #0x70]
000000000000bccc	cmp	x26, x8
000000000000bcd0	b.lo	0xbc34
000000000000bcd4	b	0xbd1c
000000000000bcd8	add	x8, x24, #0x10
000000000000bcdc	and	x26, x8, #0xfffffffffffffff0
000000000000bce0	mov	x0, x26
000000000000bce4	mov	w1, #0x1
000000000000bce8	bl	0x519e0 ; symbol stub for: _calloc
000000000000bcec	mov	x25, x0
000000000000bcf0	orr	x8, x26, #0x8000000000000000
000000000000bcf4	stp	x24, x8, [sp, #0x88]
000000000000bcf8	str	x0, [sp, #0x80]
000000000000bcfc	add	x1, sp, #0x98
000000000000bd00	mov	x0, x25
000000000000bd04	mov	x2, x24
000000000000bd08	bl	0x51aac ; symbol stub for: _memcpy
000000000000bd0c	strb	wzr, [x25, x24]
000000000000bd10	ldp	x26, x8, [sp, #0x70]
000000000000bd14	cmp	x26, x8
000000000000bd18	b.lo	0xbc34
000000000000bd1c	mov	x10, #-0x5555555555555556
000000000000bd20	movk	x10, #0xaaab
000000000000bd24	mov	x23, x27
000000000000bd28	ldr	x25, [sp, #0x68]
000000000000bd2c	sub	x9, x26, x25
000000000000bd30	asr	x9, x9, #3
000000000000bd34	mov	x11, #-0x5555555555555556
000000000000bd38	movk	x11, #0xaaa, lsl #48
000000000000bd3c	mul	x27, x9, x10
000000000000bd40	add	x9, x27, #0x1
000000000000bd44	cmp	x9, x11
000000000000bd48	b.hi	0xc0e0
000000000000bd4c	sub	x8, x8, x25
000000000000bd50	asr	x8, x8, #3
000000000000bd54	mul	x8, x8, x10
000000000000bd58	lsl	x10, x8, #1
000000000000bd5c	cmp	x10, x9
000000000000bd60	csel	x9, x9, x10, lo
000000000000bd64	mov	x10, #0x5555555555555555
000000000000bd68	movk	x10, #0x555, lsl #48
000000000000bd6c	cmp	x8, x10
000000000000bd70	csel	x24, x9, x11, lo
000000000000bd74	cbz	x24, 0xbd88
000000000000bd78	mov	x0, x24
000000000000bd7c	mov	w1, #0x18
000000000000bd80	bl	0x519e0 ; symbol stub for: _calloc
000000000000bd84	b	0xbd8c
000000000000bd88	mov	x0, #0x0
000000000000bd8c	mov	w8, #0x18
000000000000bd90	madd	x8, x27, x8, x0
000000000000bd94	mov	w11, #0x18
000000000000bd98	ldr	q0, [sp, #0x80]
000000000000bd9c	str	q0, [x8]
000000000000bda0	ldr	x9, [sp, #0x90]
000000000000bda4	str	x9, [x8, #0x10]
000000000000bda8	stp	xzr, xzr, [sp, #0x88]
000000000000bdac	str	xzr, [sp, #0x80]
000000000000bdb0	mov	x9, x8
000000000000bdb4	cmp	x26, x25
000000000000bdb8	b.eq	0xbdf4
000000000000bdbc	mov	x27, x23
000000000000bdc0	ldur	q0, [x26, #-0x18]
000000000000bdc4	ldur	x10, [x26, #-0x8]
000000000000bdc8	stur	x10, [x9, #-0x8]
000000000000bdcc	stur	q0, [x9, #-0x18]
000000000000bdd0	stp	xzr, xzr, [x26, #-0x10]
000000000000bdd4	stur	xzr, [x26, #-0x18]
000000000000bdd8	sub	x10, x26, #0x18
000000000000bddc	sub	x9, x9, #0x18
000000000000bde0	mov	x26, x10
000000000000bde4	cmp	x10, x25
000000000000bde8	b.ne	0xbdc0
000000000000bdec	ldp	x25, x26, [sp, #0x68]
000000000000bdf0	b	0xbdfc
000000000000bdf4	mov	x25, x26
000000000000bdf8	mov	x27, x23
000000000000bdfc	mov	x23, #-0x5555555555555556
000000000000be00	movk	x23, #0xaaab
000000000000be04	madd	x10, x24, x11, x0
000000000000be08	add	x8, x8, #0x18
000000000000be0c	stp	x9, x8, [sp, #0x68]
000000000000be10	str	x10, [sp, #0x78]
000000000000be14	cmp	x26, x25
000000000000be18	b.ne	0xbe48
000000000000be1c	cbz	x25, 0xbe28
000000000000be20	mov	x0, x25
000000000000be24	bl	0x51a64 ; symbol stub for: _free
000000000000be28	ldrsb	w8, [sp, #0x97]
000000000000be2c	tbz	w8, #0x1f, 0xbc54
000000000000be30	ldr	x0, [sp, #0x80]
000000000000be34	bl	0x51a64 ; symbol stub for: _free
000000000000be38	b	0xbc54
000000000000be3c	mov	x26, x24
000000000000be40	cmp	x24, x25
000000000000be44	b.eq	0xbe1c
000000000000be48	sub	x24, x26, #0x18
000000000000be4c	ldursb	w8, [x26, #-0x1]
000000000000be50	tbz	w8, #0x1f, 0xbe3c
000000000000be54	ldur	x0, [x26, #-0x18]
000000000000be58	bl	0x51a64 ; symbol stub for: _free
000000000000be5c	b	0xbe3c
000000000000be60	ldr	x8, [sp, #0x50]
000000000000be64	adr	x23, #0x7abdf
000000000000be68	nop
000000000000be6c	ldr	x20, [sp, #0x8]
000000000000be70	cbz	x8, 0xbea0
000000000000be74	ldr	w9, [sp, #0x58]
000000000000be78	add	x0, x8, #0x138
000000000000be7c	ldaxr	w8, [x0]
000000000000be80	stlxr	w10, w9, [x0]
000000000000be84	cbnz	w10, 0xbe7c
000000000000be88	cbnz	w9, 0xbea0
000000000000be8c	cmp	w8, #0x1
000000000000be90	b.ne	0xbea0
000000000000be94	ldarb	w8, [x23]
000000000000be98	tbz	w8, #0x0, 0xbea0
000000000000be9c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000bea0	cbz	x20, 0xbecc
000000000000bea4	ldaxr	w8, [x21]
000000000000bea8	stlxr	w9, w19, [x21]
000000000000beac	cbnz	w9, 0xbea4
000000000000beb0	cbnz	w19, 0xbecc
000000000000beb4	cmp	w8, #0x1
000000000000beb8	b.ne	0xbecc
000000000000bebc	ldarb	w8, [x23]
000000000000bec0	tbz	w8, #0x0, 0xbecc
000000000000bec4	mov	x0, x21
000000000000bec8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000becc	str	xzr, [sp, #0xb0]
000000000000bed0	adrp	x0, 97 ; 0x6c000
000000000000bed4	add	x0, x0, #0xbb0
000000000000bed8	ldr	x8, [sp, #0x18]
000000000000bedc	blr	x8
000000000000bee0	ldr	x8, [x0]
000000000000bee4	ldr	x9, [x8, #0x110]
000000000000bee8	add	x10, sp, #0x98
000000000000beec	str	x10, [x8, #0x110]
000000000000bef0	mov	x10, #0x400000000
000000000000bef4	stp	x9, x10, [sp, #0xa0]
000000000000bef8	ldp	x10, x9, [sp, #0x68]
000000000000befc	sub	x9, x9, x10
000000000000bf00	asr	x9, x9, #3
000000000000bf04	mov	x10, #-0x5555555555555556
000000000000bf08	movk	x10, #0xaaab
000000000000bf0c	mul	x19, x9, x10
000000000000bf10	tbnz	w19, #0x1f, 0xc0ec
000000000000bf14	ldr	x8, [x8, #0x118]
000000000000bf18	ubfiz	x9, x19, #3, #32
000000000000bf1c	add	x9, x9, #0x1f
000000000000bf20	and	x1, x9, #0xffffffff8
000000000000bf24	add	x0, x8, #0x70
000000000000bf28	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bf2c	mov	x21, x0
000000000000bf30	str	xzr, [x21, #0x10]!
000000000000bf34	str	xzr, [x0, #0x18]
000000000000bf38	str	xzr, [x0, #0x8]
000000000000bf3c	adr	x8, #0x4c6a4
000000000000bf40	nop
000000000000bf44	str	x8, [x21]
000000000000bf48	str	w19, [x0, #0x18]
000000000000bf4c	str	x21, [sp, #0xb0]
000000000000bf50	ldp	x19, x9, [sp, #0x68]
000000000000bf54	cmp	x9, x19
000000000000bf58	b.ne	0xbf84
000000000000bf5c	adrp	x0, 97 ; 0x6c000
000000000000bf60	add	x0, x0, #0xbb0
000000000000bf64	ldr	x8, [sp, #0x18]
000000000000bf68	blr	x8
000000000000bf6c	ldr	x8, [x0]
000000000000bf70	str	x21, [sp, #0x38]
000000000000bf74	ldr	x10, [sp, #0xa0]
000000000000bf78	str	x10, [x8, #0x110]
000000000000bf7c	cbnz	x19, 0xc04c
000000000000bf80	b	0xc08c
000000000000bf84	str	x21, [sp, #0x8]
000000000000bf88	add	x20, sp, #0x48
000000000000bf8c	add	x22, x20, #0x18
000000000000bf90	add	x23, x0, #0x20
000000000000bf94	adrp	x0, 97 ; 0x6c000
000000000000bf98	add	x0, x0, #0xbb0
000000000000bf9c	ldr	x8, [sp, #0x18]
000000000000bfa0	blr	x8
000000000000bfa4	mov	x24, #0x0
000000000000bfa8	mov	x25, #0x0
000000000000bfac	mov	x26, #0x0
000000000000bfb0	ldr	x8, [x0]
000000000000bfb4	ldr	x10, [x8, #0x110]
000000000000bfb8	mov	x28, #0x400000000
000000000000bfbc	mov	x27, #-0x5555555555555556
000000000000bfc0	movk	x27, #0xaaab
000000000000bfc4	mov	x21, #0x100000000
000000000000bfc8	stp	x28, xzr, [sp, #0x58]
000000000000bfcc	str	x20, [x8, #0x110]
000000000000bfd0	str	x10, [sp, #0x50]
000000000000bfd4	add	x0, x19, x24
000000000000bfd8	ldrsb	w8, [x0, #0x17]
000000000000bfdc	tbz	w8, #0x1f, 0xbfe4
000000000000bfe0	ldr	x0, [x19, x24]
000000000000bfe4	mov	x1, x22
000000000000bfe8	bl	_CreateStringFromCString
000000000000bfec	asr	x8, x25, #29
000000000000bff0	ldr	x9, [sp, #0x60]
000000000000bff4	str	x9, [x23, x8]
000000000000bff8	adrp	x0, 97 ; 0x6c000
000000000000bffc	add	x0, x0, #0xbb0
000000000000c000	ldr	x8, [sp, #0x18]
000000000000c004	blr	x8
000000000000c008	ldr	x8, [x0]
000000000000c00c	ldr	x10, [sp, #0x50]
000000000000c010	str	x10, [x8, #0x110]
000000000000c014	add	x26, x26, #0x1
000000000000c018	ldp	x19, x9, [sp, #0x68]
000000000000c01c	sub	x11, x9, x19
000000000000c020	asr	x11, x11, #3
000000000000c024	mul	x11, x11, x27
000000000000c028	add	x25, x25, x21
000000000000c02c	add	x24, x24, #0x18
000000000000c030	cmp	x26, x11
000000000000c034	b.lo	0xbfc8
000000000000c038	ldr	x21, [sp, #0x8]
000000000000c03c	str	x21, [sp, #0x38]
000000000000c040	ldr	x10, [sp, #0xa0]
000000000000c044	str	x10, [x8, #0x110]
000000000000c048	cbz	x19, 0xc08c
000000000000c04c	cmp	x19, x9
000000000000c050	b.ne	0xc068
000000000000c054	mov	x0, x19
000000000000c058	b	0xc084
000000000000c05c	mov	x9, x20
000000000000c060	cmp	x20, x19
000000000000c064	b.eq	0xc080
000000000000c068	sub	x20, x9, #0x18
000000000000c06c	ldursb	w8, [x9, #-0x1]
000000000000c070	tbz	w8, #0x1f, 0xc05c
000000000000c074	ldur	x0, [x9, #-0x18]
000000000000c078	bl	0x51a64 ; symbol stub for: _free
000000000000c07c	b	0xc05c
000000000000c080	ldr	x0, [sp, #0x68]
000000000000c084	str	x19, [sp, #0x70]
000000000000c088	bl	0x51a64 ; symbol stub for: _free
000000000000c08c	ldp	x10, x8, [sp, #0x10]
000000000000c090	str	x21, [x10]
000000000000c094	adrp	x0, 96 ; 0x6c000
000000000000c098	add	x0, x0, #0xbb0
000000000000c09c	blr	x8
000000000000c0a0	ldr	x8, [x0]
000000000000c0a4	ldr	x9, [sp, #0x28]
000000000000c0a8	str	x9, [x8, #0x110]
000000000000c0ac	str	x21, [x10]
000000000000c0b0	mov	x0, x21
000000000000c0b4	add	sp, sp, #0x4a0
000000000000c0b8	ldp	x29, x30, [sp, #0x50]
000000000000c0bc	ldp	x20, x19, [sp, #0x40]
000000000000c0c0	ldp	x22, x21, [sp, #0x30]
000000000000c0c4	ldp	x24, x23, [sp, #0x20]
000000000000c0c8	ldp	x26, x25, [sp, #0x10]
000000000000c0cc	ldp	x28, x27, [sp], #0x60
000000000000c0d0	ret
000000000000c0d4	add	x0, sp, #0x80
000000000000c0d8	bl	0x517b8 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
000000000000c0dc	b	0xc0f0
000000000000c0e0	add	x0, sp, #0x68
000000000000c0e4	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000c0e8	b	0xc0f0
000000000000c0ec	bl	_ThrowIllegalArgumentException
000000000000c0f0	brk	#0x1
000000000000c0f4	mov	x19, x0
000000000000c0f8	adrp	x0, 96 ; 0x6c000
000000000000c0fc	add	x0, x0, #0xbb0
000000000000c100	ldr	x8, [sp, #0x18]
000000000000c104	blr	x8
000000000000c108	ldr	x8, [x0]
000000000000c10c	b	0xc168
000000000000c110	mov	x19, x0
000000000000c114	ldrsb	w8, [sp, #0x97]
000000000000c118	tbz	w8, #0x1f, 0xc130
000000000000c11c	ldr	x0, [sp, #0x80]
000000000000c120	bl	0x51a64 ; symbol stub for: _free
000000000000c124	b	0xc130
000000000000c128	b	0xc12c
000000000000c12c	mov	x19, x0
000000000000c130	add	x0, sp, #0x68
000000000000c134	bl	__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEENS6_IS8_EEED1Ev
000000000000c138	add	x0, sp, #0x48
000000000000c13c	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
000000000000c140	mov	x0, x19
000000000000c144	bl	___clang_call_terminate
000000000000c148	mov	x19, x0
000000000000c14c	adrp	x0, 96 ; 0x6c000
000000000000c150	add	x0, x0, #0xbb0
000000000000c154	ldr	x8, [sp, #0x18]
000000000000c158	blr	x8
000000000000c15c	ldr	x8, [x0]
000000000000c160	ldr	x9, [sp, #0x50]
000000000000c164	str	x9, [x8, #0x110]
000000000000c168	ldr	x9, [sp, #0xa0]
000000000000c16c	str	x9, [x8, #0x110]
000000000000c170	ldr	x0, [sp, #0x68]
000000000000c174	cbz	x0, 0xc188
000000000000c178	add	x8, sp, #0x68
000000000000c17c	add	x1, x8, #0x8
000000000000c180	add	x2, sp, #0x68
000000000000c184	bl	_Kotlin_getStackTraceStrings.cold.1
000000000000c188	mov	x0, x19
000000000000c18c	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.Unit#toString(){}kotlin.String:
000000000000c190	stp	x20, x19, [sp, #-0x20]!
000000000000c194	stp	x29, x30, [sp, #0x10]
000000000000c198	add	x29, sp, #0x10
000000000000c19c	mov	x19, x1
000000000000c1a0	adr	x8, #0x7a8a3
000000000000c1a4	nop
000000000000c1a8	ldarb	w8, [x8]
000000000000c1ac	tbz	w8, #0x0, 0xc1b4
000000000000c1b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c1b4	adr	x0, #0x5934c
000000000000c1b8	nop
000000000000c1bc	str	x0, [x19]
000000000000c1c0	ldp	x29, x30, [sp, #0x10]
000000000000c1c4	ldp	x20, x19, [sp], #0x20
000000000000c1c8	ret
_checkRangeIndexes:
000000000000c1cc	sub	sp, sp, #0x120
000000000000c1d0	stp	x28, x27, [sp, #0xd0]
000000000000c1d4	stp	x24, x23, [sp, #0xe0]
000000000000c1d8	stp	x22, x21, [sp, #0xf0]
000000000000c1dc	stp	x20, x19, [sp, #0x100]
000000000000c1e0	stp	x29, x30, [sp, #0x110]
000000000000c1e4	add	x29, sp, #0x110
000000000000c1e8	mov	x21, x2
000000000000c1ec	mov	x20, x1
000000000000c1f0	mov	x22, x0
000000000000c1f4	str	xzr, [sp, #0xc0]
000000000000c1f8	movi.16b	v0, #0x0
000000000000c1fc	stp	q0, q0, [sp, #0xa0]
000000000000c200	stp	q0, q0, [sp, #0x80]
000000000000c204	stp	q0, q0, [sp, #0x60]
000000000000c208	stp	q0, q0, [sp, #0x40]
000000000000c20c	str	q0, [sp, #0x30]
000000000000c210	add	x24, sp, #0x30
000000000000c214	stp	xzr, xzr, [sp, #0x20]
000000000000c218	adr	x8, #0x50178
000000000000c21c	nop
000000000000c220	orr	x8, x8, #0x3
000000000000c224	stp	xzr, x8, [sp, #0x10]
000000000000c228	stp	x8, xzr, [sp]
000000000000c22c	adrp	x19, 96 ; 0x6c000
000000000000c230	add	x19, x19, #0xbb0
000000000000c234	ldr	x23, [x19]
000000000000c238	mov	x0, x19
000000000000c23c	blr	x23
000000000000c240	ldr	x8, [x0]
000000000000c244	ldr	x9, [x8, #0x110]
000000000000c248	str	x24, [x8, #0x110]
000000000000c24c	mov	x8, #0x1300000000
000000000000c250	stp	x9, x8, [sp, #0x38]
000000000000c254	adr	x8, #0x7a7ef
000000000000c258	nop
000000000000c25c	ldarb	w8, [x8]
000000000000c260	tbz	w8, #0x0, 0xc268
000000000000c264	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c268	tbnz	w22, #0x1f, 0xc2ac
000000000000c26c	cmp	w20, w21
000000000000c270	b.gt	0xc2ac
000000000000c274	cmp	w22, w20
000000000000c278	b.gt	0xc388
000000000000c27c	mov	x0, x19
000000000000c280	blr	x23
000000000000c284	ldr	x8, [x0]
000000000000c288	ldr	x9, [sp, #0x38]
000000000000c28c	str	x9, [x8, #0x110]
000000000000c290	ldp	x29, x30, [sp, #0x110]
000000000000c294	ldp	x20, x19, [sp, #0x100]
000000000000c298	ldp	x22, x21, [sp, #0xf0]
000000000000c29c	ldp	x24, x23, [sp, #0xe0]
000000000000c2a0	ldp	x28, x27, [sp, #0xd0]
000000000000c2a4	add	sp, sp, #0x120
000000000000c2a8	ret
000000000000c2ac	add	x8, sp, #0x18
000000000000c2b0	str	x8, [sp, #0x48]
000000000000c2b4	add	x0, sp, #0x18
000000000000c2b8	mov	w1, #0xa
000000000000c2bc	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000c2c0	add	x2, x24, #0x20
000000000000c2c4	adr	x1, #0x5926c
000000000000c2c8	nop
000000000000c2cc	add	x0, sp, #0x18
000000000000c2d0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c2d4	add	x2, x24, #0x28
000000000000c2d8	add	x0, sp, #0x18
000000000000c2dc	mov	x1, x22
000000000000c2e0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000c2e4	add	x2, x24, #0x30
000000000000c2e8	adr	x1, #0x59278
000000000000c2ec	nop
000000000000c2f0	add	x0, sp, #0x18
000000000000c2f4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c2f8	add	x2, x24, #0x38
000000000000c2fc	add	x0, sp, #0x18
000000000000c300	mov	x1, x20
000000000000c304	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000c308	add	x2, x24, #0x40
000000000000c30c	adr	x1, #0x59284
000000000000c310	nop
000000000000c314	add	x0, sp, #0x18
000000000000c318	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c31c	add	x2, x24, #0x48
000000000000c320	add	x0, sp, #0x18
000000000000c324	mov	x1, x21
000000000000c328	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000c32c	add	x1, x24, #0x50
000000000000c330	add	x0, sp, #0x18
000000000000c334	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000c338	mov	x20, x0
000000000000c33c	mov	x0, x19
000000000000c340	blr	x23
000000000000c344	ldr	x8, [x0]
000000000000c348	ldr	x8, [x8, #0x118]
000000000000c34c	add	x0, x8, #0x70
000000000000c350	mov	w1, #0x38
000000000000c354	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c358	mov	x21, x0
000000000000c35c	adr	x8, #0x4c884
000000000000c360	nop
000000000000c364	str	x8, [x21, #0x10]!
000000000000c368	stur	xzr, [x21, #-0x8]
000000000000c36c	str	x21, [sp, #0x88]
000000000000c370	mov	x0, x21
000000000000c374	mov	x1, x20
000000000000c378	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000000c37c	mov	x0, x21
000000000000c380	bl	_ThrowException
000000000000c384	b	0xc43c
000000000000c388	mov	x8, sp
000000000000c38c	str	x8, [sp, #0x90]
000000000000c390	mov	x0, sp
000000000000c394	mov	w1, #0xa
000000000000c398	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000c39c	add	x2, x24, #0x68
000000000000c3a0	adr	x1, #0x59190
000000000000c3a4	nop
000000000000c3a8	mov	x0, sp
000000000000c3ac	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c3b0	add	x2, x24, #0x70
000000000000c3b4	mov	x0, sp
000000000000c3b8	mov	x1, x22
000000000000c3bc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000c3c0	add	x2, x24, #0x78
000000000000c3c4	adr	x1, #0x591ec
000000000000c3c8	nop
000000000000c3cc	mov	x0, sp
000000000000c3d0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c3d4	add	x2, x24, #0x80
000000000000c3d8	mov	x0, sp
000000000000c3dc	mov	x1, x20
000000000000c3e0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000c3e4	add	x1, x24, #0x88
000000000000c3e8	mov	x0, sp
000000000000c3ec	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000c3f0	mov	x20, x0
000000000000c3f4	mov	x0, x19
000000000000c3f8	blr	x23
000000000000c3fc	ldr	x8, [x0]
000000000000c400	ldr	x8, [x8, #0x118]
000000000000c404	add	x0, x8, #0x70
000000000000c408	mov	w1, #0x38
000000000000c40c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c410	mov	x21, x0
000000000000c414	adr	x8, #0x4c86c
000000000000c418	nop
000000000000c41c	str	x8, [x21, #0x10]!
000000000000c420	stur	xzr, [x21, #-0x8]
000000000000c424	str	x21, [sp, #0xc0]
000000000000c428	mov	x0, x21
000000000000c42c	mov	x1, x20
000000000000c430	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000000c434	mov	x0, x21
000000000000c438	bl	_ThrowException
000000000000c43c	brk	#0x1
000000000000c440	mov	x1, x0
000000000000c444	mov	x0, x19
000000000000c448	blr	x23
000000000000c44c	ldr	x8, [x0]
000000000000c450	ldr	x9, [sp, #0x38]
000000000000c454	str	x9, [x8, #0x110]
000000000000c458	mov	x0, x1
000000000000c45c	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.collections#resetAt__at__kotlin.Array<0:0>(kotlin.Int){0ยง<kotlin.Any?>}:
000000000000c460	stp	x20, x19, [sp, #-0x20]!
000000000000c464	stp	x29, x30, [sp, #0x10]
000000000000c468	add	x29, sp, #0x10
000000000000c46c	mov	x20, x1
000000000000c470	mov	x19, x0
000000000000c474	adr	x8, #0x7a5cf
000000000000c478	nop
000000000000c47c	ldarb	w8, [x8]
000000000000c480	tbz	w8, #0x0, 0xc488
000000000000c484	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c488	ldr	x8, [x19]
000000000000c48c	and	x8, x8, #0xfffffffffffffffc
000000000000c490	ldr	x8, [x8]
000000000000c494	ldr	w8, [x8, #0x5c]
000000000000c498	cmp	w8, #0x49
000000000000c49c	b.ne	0xc4c4
000000000000c4a0	ldr	w8, [x19, #0x8]
000000000000c4a4	cmp	w8, w20
000000000000c4a8	b.ls	0xc4d4
000000000000c4ac	ldr	xzr, [x19]
000000000000c4b0	add	x8, x19, w20, sxtw #3
000000000000c4b4	str	xzr, [x8, #0x10]
000000000000c4b8	ldp	x29, x30, [sp, #0x10]
000000000000c4bc	ldp	x20, x19, [sp], #0x20
000000000000c4c0	ret
000000000000c4c4	adr	x1, #0x4c11c
000000000000c4c8	nop
000000000000c4cc	mov	x0, x19
000000000000c4d0	bl	_ThrowClassCastException
000000000000c4d4	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}:
000000000000c4d8	stp	x22, x21, [sp, #-0x30]!
000000000000c4dc	stp	x20, x19, [sp, #0x10]
000000000000c4e0	stp	x29, x30, [sp, #0x20]
000000000000c4e4	add	x29, sp, #0x20
000000000000c4e8	mov	x20, x2
000000000000c4ec	mov	x21, x1
000000000000c4f0	mov	x19, x0
000000000000c4f4	adr	x8, #0x7a54f
000000000000c4f8	nop
000000000000c4fc	ldarb	w8, [x8]
000000000000c500	tbz	w8, #0x0, 0xc508
000000000000c504	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c508	ldr	x8, [x19]
000000000000c50c	and	x8, x8, #0xfffffffffffffffc
000000000000c510	ldr	x8, [x8]
000000000000c514	ldr	w8, [x8, #0x5c]
000000000000c518	cmp	w8, #0x49
000000000000c51c	b.ne	0xc5a8
000000000000c520	ldr	w2, [x19, #0x8]
000000000000c524	mov	x0, x21
000000000000c528	mov	x1, x20
000000000000c52c	bl	_checkRangeIndexes
000000000000c530	ldr	xzr, [x19]
000000000000c534	cmp	w21, w20
000000000000c538	b.ge	0xc598
000000000000c53c	sxtw	x11, w21
000000000000c540	mvn	w8, w21
000000000000c544	adds	w8, w8, w20
000000000000c548	b.eq	0xc57c
000000000000c54c	add	x9, x8, #0x1
000000000000c550	and	x10, x9, #0x1fffffffe
000000000000c554	add	x8, x10, x11
000000000000c558	add	x11, x19, x11, lsl #3
000000000000c55c	add	x11, x11, #0x10
000000000000c560	mov	x12, x10
000000000000c564	stp	xzr, xzr, [x11], #0x10
000000000000c568	subs	x12, x12, #0x2
000000000000c56c	b.ne	0xc564
000000000000c570	cmp	x9, x10
000000000000c574	b.ne	0xc580
000000000000c578	b	0xc598
000000000000c57c	mov	x8, x11
000000000000c580	sub	w9, w20, w8
000000000000c584	add	x8, x19, x8, lsl #3
000000000000c588	add	x8, x8, #0x10
000000000000c58c	str	xzr, [x8], #0x8
000000000000c590	subs	w9, w9, #0x1
000000000000c594	b.ne	0xc58c
000000000000c598	ldp	x29, x30, [sp, #0x20]
000000000000c59c	ldp	x20, x19, [sp, #0x10]
000000000000c5a0	ldp	x22, x21, [sp], #0x30
000000000000c5a4	ret
000000000000c5a8	adr	x1, #0x4c038
000000000000c5ac	nop
000000000000c5b0	mov	x0, x19
000000000000c5b4	bl	_ThrowClassCastException
_kfun:kotlin.io#println(kotlin.Any?){}:
000000000000c5b8	sub	sp, sp, #0x40
000000000000c5bc	stp	x20, x19, [sp, #0x20]
000000000000c5c0	stp	x29, x30, [sp, #0x30]
000000000000c5c4	add	x29, sp, #0x30
000000000000c5c8	mov	x19, x0
000000000000c5cc	movi.16b	v0, #0x0
000000000000c5d0	stp	q0, q0, [sp]
000000000000c5d4	adrp	x0, 96 ; 0x6c000
000000000000c5d8	add	x0, x0, #0xbb0
000000000000c5dc	ldr	x8, [x0]
000000000000c5e0	blr	x8
000000000000c5e4	ldr	x20, [x0]
000000000000c5e8	ldr	x8, [x20, #0x110]
000000000000c5ec	mov	x9, sp
000000000000c5f0	str	x9, [x20, #0x110]
000000000000c5f4	mov	x9, #0x400000000
000000000000c5f8	stp	x8, x9, [sp, #0x8]
000000000000c5fc	adr	x8, #0x7a447
000000000000c600	nop
000000000000c604	ldarb	w8, [x8]
000000000000c608	tbz	w8, #0x0, 0xc610
000000000000c60c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c610	cbz	x19, 0xc638
000000000000c614	mov	x8, sp
000000000000c618	add	x1, x8, #0x18
000000000000c61c	ldr	x8, [x19]
000000000000c620	and	x8, x8, #0xfffffffffffffffc
000000000000c624	ldr	x8, [x8]
000000000000c628	ldr	x8, [x8, #0x80]
000000000000c62c	mov	x0, x19
000000000000c630	blr	x8
000000000000c634	b	0xc640
000000000000c638	adr	x0, #0x58bb8
000000000000c63c	nop
000000000000c640	bl	_Kotlin_io_Console_println
000000000000c644	ldr	x8, [sp, #0x8]
000000000000c648	str	x8, [x20, #0x110]
000000000000c64c	ldp	x29, x30, [sp, #0x30]
000000000000c650	ldp	x20, x19, [sp, #0x20]
000000000000c654	add	sp, sp, #0x40
000000000000c658	ret
_kfun:kotlin.math#roundToInt__at__kotlin.Double(){}kotlin.Int:
000000000000c65c	sub	sp, sp, #0x50
000000000000c660	stp	d9, d8, [sp, #0x20]
000000000000c664	stp	x20, x19, [sp, #0x30]
000000000000c668	stp	x29, x30, [sp, #0x40]
000000000000c66c	add	x29, sp, #0x40
000000000000c670	fmov	d8, d0
000000000000c674	movi.16b	v0, #0x0
000000000000c678	stp	q0, q0, [sp]
000000000000c67c	adrp	x0, 96 ; 0x6c000
000000000000c680	add	x0, x0, #0xbb0
000000000000c684	ldr	x8, [x0]
000000000000c688	blr	x8
000000000000c68c	ldr	x19, [x0]
000000000000c690	ldr	x8, [x19, #0x110]
000000000000c694	mov	x9, sp
000000000000c698	str	x9, [x19, #0x110]
000000000000c69c	mov	x9, #0x400000000
000000000000c6a0	stp	x8, x9, [sp, #0x8]
000000000000c6a4	adr	x8, #0x7a39f
000000000000c6a8	nop
000000000000c6ac	ldarb	w8, [x8]
000000000000c6b0	tbz	w8, #0x0, 0xc6b8
000000000000c6b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c6b8	fcmp	d8, d8
000000000000c6bc	b.vs	0xc74c
000000000000c6c0	mov	w8, #0x7fffffff
000000000000c6c4	mov	x9, #0xffffffc00000
000000000000c6c8	movk	x9, #0x41df, lsl #48
000000000000c6cc	fmov	d0, x9
000000000000c6d0	mov	w9, #-0x80000000
000000000000c6d4	mov	x10, #-0x3e20000000000000
000000000000c6d8	fmov	d1, x10
000000000000c6dc	fmov	d2, #0.50000000
000000000000c6e0	fadd	d2, d8, d2
000000000000c6e4	frintm	d2, d2
000000000000c6e8	mov	w10, #0x7fffffff
000000000000c6ec	mov	x11, #0xffffffc00000
000000000000c6f0	movk	x11, #0x41df, lsl #48
000000000000c6f4	fmov	d3, x11
000000000000c6f8	mov	w11, #-0x80000000
000000000000c6fc	mov	x12, #-0x3e20000000000000
000000000000c700	fmov	d4, x12
000000000000c704	fcmp	d2, d4
000000000000c708	fcvtzs	w12, d2
000000000000c70c	csel	w11, w11, w12, ls
000000000000c710	fcmp	d2, d3
000000000000c714	csel	w10, w10, w11, ge
000000000000c718	fcmp	d2, d2
000000000000c71c	csel	w10, wzr, w10, vs
000000000000c720	fcmp	d8, d1
000000000000c724	csel	w9, w9, w10, mi
000000000000c728	fcmp	d8, d0
000000000000c72c	csel	w0, w8, w9, gt
000000000000c730	ldr	x8, [sp, #0x8]
000000000000c734	str	x8, [x19, #0x110]
000000000000c738	ldp	x29, x30, [sp, #0x40]
000000000000c73c	ldp	x20, x19, [sp, #0x30]
000000000000c740	ldp	d9, d8, [sp, #0x20]
000000000000c744	add	sp, sp, #0x50
000000000000c748	ret
000000000000c74c	ldr	x8, [x19, #0x118]
000000000000c750	add	x0, x8, #0x70
000000000000c754	mov	w1, #0x38
000000000000c758	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c75c	mov	x19, x0
000000000000c760	adr	x8, #0x4c520
000000000000c764	nop
000000000000c768	str	x8, [x19, #0x10]!
000000000000c76c	stur	xzr, [x19, #-0x8]
000000000000c770	str	x19, [sp, #0x18]
000000000000c774	adr	x1, #0x58e6c
000000000000c778	nop
000000000000c77c	mov	x0, x19
000000000000c780	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000000c784	mov	x0, x19
000000000000c788	bl	_ThrowException
_kfun:kotlin.native.MemoryModel.$OBJECT#<init>(){}:
000000000000c78c	sub	sp, sp, #0x170
000000000000c790	stp	x24, x23, [sp, #0x130]
000000000000c794	stp	x22, x21, [sp, #0x140]
000000000000c798	stp	x20, x19, [sp, #0x150]
000000000000c79c	stp	x29, x30, [sp, #0x160]
000000000000c7a0	add	x29, sp, #0x160
000000000000c7a4	mov	x19, x0
000000000000c7a8	str	xzr, [sp, #0x120]
000000000000c7ac	movi.16b	v0, #0x0
000000000000c7b0	stp	q0, q0, [sp, #0x100]
000000000000c7b4	stp	q0, q0, [sp, #0xe0]
000000000000c7b8	stp	q0, q0, [sp, #0xc0]
000000000000c7bc	stp	q0, q0, [sp, #0xa0]
000000000000c7c0	stp	q0, q0, [sp, #0x80]
000000000000c7c4	stp	q0, q0, [sp, #0x60]
000000000000c7c8	stp	q0, q0, [sp, #0x40]
000000000000c7cc	stp	q0, q0, [sp, #0x20]
000000000000c7d0	stp	q0, q0, [sp]
000000000000c7d4	mov	x8, sp
000000000000c7d8	add	x20, x8, #0x120
000000000000c7dc	adrp	x0, 96 ; 0x6c000
000000000000c7e0	add	x0, x0, #0xbb0
000000000000c7e4	ldr	x9, [x0]
000000000000c7e8	blr	x9
000000000000c7ec	ldr	x21, [x0]
000000000000c7f0	ldr	x9, [x21, #0x110]
000000000000c7f4	str	x8, [x21, #0x110]
000000000000c7f8	mov	x8, #0x2500000000
000000000000c7fc	stp	x9, x8, [sp, #0x8]
000000000000c800	adr	x8, #0x7a243
000000000000c804	nop
000000000000c808	ldarb	w8, [x8]
000000000000c80c	tbz	w8, #0x0, 0xc814
000000000000c810	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c814	ldr	x8, [x21, #0x118]
000000000000c818	add	x0, x8, #0x70
000000000000c81c	mov	w1, #0x20
000000000000c820	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c824	adr	x22, #0x4d20c
000000000000c828	nop
000000000000c82c	str	x22, [x0, #0x10]!
000000000000c830	stur	xzr, [x0, #-0x8]
000000000000c834	stp	x0, x0, [sp, #0x18]
000000000000c838	ldr	x8, [x21, #0x118]
000000000000c83c	add	x0, x8, #0x70
000000000000c840	mov	w1, #0x20
000000000000c844	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c848	str	x22, [x0, #0x10]!
000000000000c84c	stur	xzr, [x0, #-0x8]
000000000000c850	stp	x0, x0, [sp, #0x28]
000000000000c854	ldr	x8, [x21, #0x118]
000000000000c858	add	x0, x8, #0x70
000000000000c85c	mov	w1, #0x20
000000000000c860	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c864	str	x22, [x0, #0x10]!
000000000000c868	stur	xzr, [x0, #-0x8]
000000000000c86c	stp	x0, x0, [sp, #0x38]
000000000000c870	ldr	x8, [x21, #0x118]
000000000000c874	add	x0, x8, #0x70
000000000000c878	mov	w1, #0x30
000000000000c87c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c880	adr	x22, #0x4bd60
000000000000c884	nop
000000000000c888	stp	x22, xzr, [x0, #0x10]!
000000000000c88c	stur	xzr, [x0, #-0x8]
000000000000c890	mov	w23, #0x3
000000000000c894	str	w23, [x0, #0x8]
000000000000c898	stp	x0, x0, [sp, #0x48]
000000000000c89c	ldr	x8, [sp, #0x20]
000000000000c8a0	stp	x0, x8, [sp, #0x58]
000000000000c8a4	ldr	xzr, [x0]
000000000000c8a8	str	x8, [x0, #0x10]
000000000000c8ac	ldr	x8, [sp, #0x50]
000000000000c8b0	ldr	x9, [sp, #0x30]
000000000000c8b4	stp	x8, x9, [sp, #0x68]
000000000000c8b8	ldr	xzr, [x8]
000000000000c8bc	str	x9, [x8, #0x18]
000000000000c8c0	ldr	x8, [sp, #0x50]
000000000000c8c4	ldr	x9, [sp, #0x40]
000000000000c8c8	stp	x8, x9, [sp, #0x78]
000000000000c8cc	ldr	xzr, [x8]
000000000000c8d0	str	x9, [x8, #0x20]
000000000000c8d4	ldr	x8, [sp, #0x50]
000000000000c8d8	str	x8, [sp, #0x88]
000000000000c8dc	str	x8, [x19, #0x8]
000000000000c8e0	ldr	x9, [x8, #0x20]
000000000000c8e4	str	x9, [sp, #0x90]
000000000000c8e8	adr	x10, #0x58d38
000000000000c8ec	nop
000000000000c8f0	str	x10, [x9, #0x8]
000000000000c8f4	str	wzr, [x9, #0x10]
000000000000c8f8	ldr	x9, [x8, #0x18]
000000000000c8fc	str	x9, [sp, #0x98]
000000000000c900	adr	x10, #0x58d40
000000000000c904	nop
000000000000c908	str	x10, [x9, #0x8]
000000000000c90c	mov	w10, #0x1
000000000000c910	str	w10, [x9, #0x10]
000000000000c914	ldr	x8, [x8, #0x10]
000000000000c918	str	x8, [sp, #0xa0]
000000000000c91c	adr	x9, #0x58d44
000000000000c920	nop
000000000000c924	str	x9, [x8, #0x8]
000000000000c928	mov	w9, #0x2
000000000000c92c	str	w9, [x8, #0x10]
000000000000c930	ldr	x8, [x19, #0x8]
000000000000c934	ldr	x9, [x8, #0x20]
000000000000c938	stp	x9, x9, [sp, #0xa8]
000000000000c93c	ldr	x9, [x8, #0x18]
000000000000c940	stp	x9, x9, [sp, #0xb8]
000000000000c944	ldr	x8, [x8, #0x10]
000000000000c948	stp	x8, x8, [sp, #0xc8]
000000000000c94c	ldr	x8, [x21, #0x118]
000000000000c950	add	x0, x8, #0x70
000000000000c954	mov	w1, #0x30
000000000000c958	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c95c	stp	x22, xzr, [x0, #0x10]!
000000000000c960	stur	xzr, [x0, #-0x8]
000000000000c964	str	w23, [x0, #0x8]
000000000000c968	stp	x0, x0, [sp, #0xd8]
000000000000c96c	ldr	x8, [sp, #0xb0]
000000000000c970	stp	x0, x8, [sp, #0xe8]
000000000000c974	ldr	xzr, [x0]
000000000000c978	str	x8, [x0, #0x10]
000000000000c97c	ldr	x8, [sp, #0xe0]
000000000000c980	ldr	x9, [sp, #0xc0]
000000000000c984	stp	x8, x9, [sp, #0xf8]
000000000000c988	ldr	xzr, [x8]
000000000000c98c	str	x9, [x8, #0x18]
000000000000c990	ldr	x8, [sp, #0xe0]
000000000000c994	ldr	x9, [sp, #0xd0]
000000000000c998	stp	x8, x9, [sp, #0x108]
000000000000c99c	ldr	xzr, [x8]
000000000000c9a0	str	x9, [x8, #0x20]
000000000000c9a4	ldr	x0, [sp, #0xe0]
000000000000c9a8	str	x0, [sp, #0x118]
000000000000c9ac	mov	x1, x20
000000000000c9b0	bl	"_kfun:kotlin.enums#enumEntries(kotlin.Array<0:0>){0ยง<kotlin.Enum<0:0>>}kotlin.enums.EnumEntries<0:0>"
000000000000c9b4	str	x0, [x19, #0x10]
000000000000c9b8	ldr	x8, [sp, #0x8]
000000000000c9bc	str	x8, [x21, #0x110]
000000000000c9c0	ldp	x29, x30, [sp, #0x160]
000000000000c9c4	ldp	x20, x19, [sp, #0x150]
000000000000c9c8	ldp	x22, x21, [sp, #0x140]
000000000000c9cc	ldp	x24, x23, [sp, #0x130]
000000000000c9d0	add	sp, sp, #0x170
000000000000c9d4	ret
_kfun:kotlin.native.concurrent.FreezableAtomicReference#toString(){}kotlin.String:
000000000000c9d8	sub	sp, sp, #0xc0
000000000000c9dc	stp	x26, x25, [sp, #0x70]
000000000000c9e0	stp	x24, x23, [sp, #0x80]
000000000000c9e4	stp	x22, x21, [sp, #0x90]
000000000000c9e8	stp	x20, x19, [sp, #0xa0]
000000000000c9ec	stp	x29, x30, [sp, #0xb0]
000000000000c9f0	add	x29, sp, #0xb0
000000000000c9f4	mov	x19, x1
000000000000c9f8	mov	x20, x0
000000000000c9fc	movi.16b	v0, #0x0
000000000000ca00	stp	q0, q0, [sp, #0x20]
000000000000ca04	stp	q0, q0, [sp, #0x50]
000000000000ca08	str	q0, [sp, #0x40]
000000000000ca0c	add	x8, sp, #0x20
000000000000ca10	add	x25, x8, #0x20
000000000000ca14	add	x23, x8, #0x30
000000000000ca18	add	x22, x8, #0x40
000000000000ca1c	add	x24, x8, #0x28
000000000000ca20	add	x21, x8, #0x48
000000000000ca24	stp	xzr, xzr, [sp, #0x10]
000000000000ca28	adr	x9, #0x4f968
000000000000ca2c	nop
000000000000ca30	orr	x9, x9, #0x3
000000000000ca34	str	x9, [sp, #0x8]
000000000000ca38	adrp	x0, 96 ; 0x6c000
000000000000ca3c	add	x0, x0, #0xbb0
000000000000ca40	ldr	x9, [x0]
000000000000ca44	blr	x9
000000000000ca48	ldr	x26, [x0]
000000000000ca4c	ldr	x9, [x26, #0x110]
000000000000ca50	str	x8, [x26, #0x110]
000000000000ca54	mov	x8, #0xa00000000
000000000000ca58	stp	x9, x8, [sp, #0x28]
000000000000ca5c	adr	x8, #0x79fe7
000000000000ca60	nop
000000000000ca64	ldarb	w8, [x8]
000000000000ca68	tbz	w8, #0x0, 0xca70
000000000000ca6c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ca70	add	x8, sp, #0x8
000000000000ca74	str	x8, [sp, #0x38]
000000000000ca78	add	x0, sp, #0x8
000000000000ca7c	mov	w1, #0xa
000000000000ca80	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000ca84	mov	x0, x20
000000000000ca88	mov	x1, x25
000000000000ca8c	bl	"_kfun:kotlin.native.concurrent.debugString#internal"
000000000000ca90	mov	x1, x0
000000000000ca94	add	x0, sp, #0x8
000000000000ca98	mov	x2, x24
000000000000ca9c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000caa0	adr	x1, #0x58bf0
000000000000caa4	nop
000000000000caa8	add	x0, sp, #0x8
000000000000caac	mov	x2, x23
000000000000cab0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000cab4	add	x8, x20, #0x8
000000000000cab8	ldar	x0, [x8]
000000000000cabc	str	x0, [sp, #0x58]
000000000000cac0	mov	x1, x22
000000000000cac4	bl	"_kfun:kotlin.native.concurrent.debugString#internal"
000000000000cac8	mov	x1, x0
000000000000cacc	add	x0, sp, #0x8
000000000000cad0	mov	x2, x21
000000000000cad4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000cad8	add	x0, sp, #0x8
000000000000cadc	mov	x1, x19
000000000000cae0	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000cae4	str	x0, [x19]
000000000000cae8	ldr	x8, [sp, #0x28]
000000000000caec	str	x8, [x26, #0x110]
000000000000caf0	ldp	x29, x30, [sp, #0xb0]
000000000000caf4	ldp	x20, x19, [sp, #0xa0]
000000000000caf8	ldp	x22, x21, [sp, #0x90]
000000000000cafc	ldp	x24, x23, [sp, #0x80]
000000000000cb00	ldp	x26, x25, [sp, #0x70]
000000000000cb04	add	sp, sp, #0xc0
000000000000cb08	ret
_kfun:kotlin.native.concurrent.debugString#internal:
000000000000cb0c	sub	sp, sp, #0x150
000000000000cb10	stp	x26, x25, [sp, #0x100]
000000000000cb14	stp	x24, x23, [sp, #0x110]
000000000000cb18	stp	x22, x21, [sp, #0x120]
000000000000cb1c	stp	x20, x19, [sp, #0x130]
000000000000cb20	stp	x29, x30, [sp, #0x140]
000000000000cb24	add	x29, sp, #0x140
000000000000cb28	mov	x19, x1
000000000000cb2c	mov	x20, x0
000000000000cb30	movi.16b	v0, #0x0
000000000000cb34	stp	q0, q0, [sp, #0x30]
000000000000cb38	stp	q0, q0, [sp, #0x60]
000000000000cb3c	str	q0, [sp, #0x50]
000000000000cb40	stp	xzr, xzr, [sp, #0x20]
000000000000cb44	adr	x8, #0x4f84c
000000000000cb48	nop
000000000000cb4c	orr	x8, x8, #0x3
000000000000cb50	stp	xzr, x8, [sp, #0x10]
000000000000cb54	adr	x8, #0x4d4ec
000000000000cb58	nop
000000000000cb5c	orr	x8, x8, #0x3
000000000000cb60	str	x8, [sp, #0x8]
000000000000cb64	adrp	x0, 96 ; 0x6c000
000000000000cb68	add	x0, x0, #0xbb0
000000000000cb6c	ldr	x8, [x0]
000000000000cb70	blr	x8
000000000000cb74	ldr	x25, [x0]
000000000000cb78	ldr	x8, [x25, #0x110]
000000000000cb7c	add	x9, sp, #0x30
000000000000cb80	str	x9, [x25, #0x110]
000000000000cb84	mov	x9, #0xa00000000
000000000000cb88	stp	x8, x9, [sp, #0x38]
000000000000cb8c	adr	x8, #0x79eb7
000000000000cb90	nop
000000000000cb94	ldarb	w8, [x8]
000000000000cb98	tbz	w8, #0x0, 0xcba0
000000000000cb9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000cba0	cbz	x20, 0xcc88
000000000000cba4	add	x8, sp, #0x30
000000000000cba8	add	x21, x8, #0x48
000000000000cbac	add	x22, x8, #0x38
000000000000cbb0	add	x23, x8, #0x30
000000000000cbb4	add	x24, x8, #0x28
000000000000cbb8	add	x8, sp, #0x18
000000000000cbbc	str	x8, [sp, #0x48]
000000000000cbc0	add	x0, sp, #0x18
000000000000cbc4	mov	w1, #0xa
000000000000cbc8	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000cbcc	ldr	x8, [x20]
000000000000cbd0	and	x8, x8, #0xfffffffffffffffc
000000000000cbd4	ldr	x8, [x8]
000000000000cbd8	add	x9, sp, #0x8
000000000000cbdc	str	x9, [sp, #0x50]
000000000000cbe0	str	x8, [sp, #0x10]
000000000000cbe4	add	x0, sp, #0x8
000000000000cbe8	mov	x1, x24
000000000000cbec	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-qualifiedName>(){}kotlin.String?"
000000000000cbf0	mov	x1, x0
000000000000cbf4	add	x0, sp, #0x18
000000000000cbf8	mov	x2, x23
000000000000cbfc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000cc00	adr	x1, #0x588e0
000000000000cc04	nop
000000000000cc08	add	x0, sp, #0x18
000000000000cc0c	mov	x2, x22
000000000000cc10	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000cc14	movi.16b	v0, #0x0
000000000000cc18	stp	q0, q0, [sp, #0x80]
000000000000cc1c	add	x8, sp, #0x80
000000000000cc20	add	x22, x8, #0x18
000000000000cc24	ldr	x9, [x25, #0x110]
000000000000cc28	str	x8, [x25, #0x110]
000000000000cc2c	mov	x8, #0x400000000
000000000000cc30	stp	x9, x8, [sp, #0x88]
000000000000cc34	ldr	x8, [x20]
000000000000cc38	and	x8, x8, #0xfffffffffffffffc
000000000000cc3c	ldr	x8, [x8]
000000000000cc40	ldr	x8, [x8, #0x78]
000000000000cc44	mov	x0, x20
000000000000cc48	blr	x8
000000000000cc4c	mov	w0, w0
000000000000cc50	mov	w1, #0x10
000000000000cc54	mov	x2, x22
000000000000cc58	bl	_Kotlin_Long_toStringRadix
000000000000cc5c	mov	x1, x0
000000000000cc60	str	x0, [sp, #0x70]
000000000000cc64	ldr	x8, [sp, #0x88]
000000000000cc68	str	x8, [x25, #0x110]
000000000000cc6c	add	x0, sp, #0x18
000000000000cc70	mov	x2, x21
000000000000cc74	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000cc78	add	x0, sp, #0x18
000000000000cc7c	mov	x1, x19
000000000000cc80	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000cc84	b	0xcc90
000000000000cc88	adr	x0, #0x58568
000000000000cc8c	nop
000000000000cc90	str	x0, [x19]
000000000000cc94	ldr	x8, [sp, #0x38]
000000000000cc98	str	x8, [x25, #0x110]
000000000000cc9c	ldp	x29, x30, [sp, #0x140]
000000000000cca0	ldp	x20, x19, [sp, #0x130]
000000000000cca4	ldp	x22, x21, [sp, #0x120]
000000000000cca8	ldp	x24, x23, [sp, #0x110]
000000000000ccac	ldp	x26, x25, [sp, #0x100]
000000000000ccb0	add	sp, sp, #0x150
000000000000ccb4	ret
_kfun:kotlin.native.concurrent.AtomicInt#toString(){}kotlin.String:
000000000000ccb8	sub	sp, sp, #0x40
000000000000ccbc	stp	x20, x19, [sp, #0x20]
000000000000ccc0	stp	x29, x30, [sp, #0x30]
000000000000ccc4	add	x29, sp, #0x30
000000000000ccc8	mov	x19, x1
000000000000cccc	mov	x20, x0
000000000000ccd0	adr	x8, #0x79d73
000000000000ccd4	nop
000000000000ccd8	ldarb	w8, [x8]
000000000000ccdc	tbz	w8, #0x0, 0xcce4
000000000000cce0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000cce4	add	x8, x20, #0x8
000000000000cce8	ldar	w8, [x8]
000000000000ccec	str	x8, [sp]
000000000000ccf0	adr	x2, #0x49fa3 ; literal pool for: "%d"
000000000000ccf4	nop
000000000000ccf8	add	x0, sp, #0x10
000000000000ccfc	mov	w1, #0x10
000000000000cd00	bl	__ZN5konan8snprintfEPcmPKcz
000000000000cd04	add	x0, sp, #0x10
000000000000cd08	mov	x1, x19
000000000000cd0c	bl	_CreateStringFromCString
000000000000cd10	str	x0, [x19]
000000000000cd14	ldp	x29, x30, [sp, #0x30]
000000000000cd18	ldp	x20, x19, [sp, #0x20]
000000000000cd1c	add	sp, sp, #0x40
000000000000cd20	ret
_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#<get-value>(){}1:0:
000000000000cd24	sub	sp, sp, #0x150
000000000000cd28	stp	x28, x27, [sp, #0xf0]
000000000000cd2c	stp	x26, x25, [sp, #0x100]
000000000000cd30	stp	x24, x23, [sp, #0x110]
000000000000cd34	stp	x22, x21, [sp, #0x120]
000000000000cd38	stp	x20, x19, [sp, #0x130]
000000000000cd3c	stp	x29, x30, [sp, #0x140]
000000000000cd40	add	x29, sp, #0x140
000000000000cd44	mov	x27, x1
000000000000cd48	mov	x20, x0
000000000000cd4c	movi.16b	v0, #0x0
000000000000cd50	stp	q0, q0, [sp, #0x10]
000000000000cd54	str	xzr, [sp, #0x90]
000000000000cd58	stp	q0, q0, [sp, #0x70]
000000000000cd5c	stp	q0, q0, [sp, #0x50]
000000000000cd60	stp	q0, q0, [sp, #0x30]
000000000000cd64	add	x19, sp, #0x10
000000000000cd68	adrp	x0, 96 ; 0x6c000
000000000000cd6c	add	x0, x0, #0xbb0
000000000000cd70	ldr	x8, [x0]
000000000000cd74	blr	x8
000000000000cd78	ldr	x26, [x0]
000000000000cd7c	ldr	x8, [x26, #0x110]
000000000000cd80	str	x19, [x26, #0x110]
000000000000cd84	mov	x9, #0x1100000000
000000000000cd88	stp	x8, x9, [sp, #0x18]
000000000000cd8c	adr	x25, #0x79cb7
000000000000cd90	nop
000000000000cd94	ldarb	w8, [x25]
000000000000cd98	tbz	w8, #0x0, 0xcda0
000000000000cd9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000cda0	ldr	x8, [x20, #0x10]
000000000000cda4	str	x8, [sp, #0x28]
000000000000cda8	add	x8, x8, #0x8
000000000000cdac	ldar	x21, [x8]
000000000000cdb0	str	x21, [sp, #0x30]
000000000000cdb4	adr	x28, #0x79cec
000000000000cdb8	nop
000000000000cdbc	ldar	x22, [x28]
000000000000cdc0	cmp	x22, #0x2
000000000000cdc4	b.hs	0xceb8
000000000000cdc8	ldp	x8, x9, [x26, #0x120]
000000000000cdcc	cmp	x8, x9
000000000000cdd0	b.eq	0xcdf0
000000000000cdd4	mov	x10, x9
000000000000cdd8	ldr	x11, [x10, #-0x10]!
000000000000cddc	cmp	x11, x28
000000000000cde0	b.eq	0xceb0
000000000000cde4	mov	x9, x10
000000000000cde8	cmp	x10, x8
000000000000cdec	b.ne	0xcdd8
000000000000cdf0	add	x23, x26, #0x120
000000000000cdf4	add	x0, x26, #0x138
000000000000cdf8	mov	w9, #0x1
000000000000cdfc	ldaxr	w8, [x0]
000000000000ce00	stlxr	w10, w9, [x0]
000000000000ce04	cbnz	w10, 0xcdfc
000000000000ce08	b	0xce18
000000000000ce0c	mov	w24, #0x1
000000000000ce10	stlxr	w9, x24, [x28]
000000000000ce14	cbz	w9, 0xce28
000000000000ce18	ldaxr	x22, [x28]
000000000000ce1c	cbz	x22, 0xce0c
000000000000ce20	mov	w24, #0x0
000000000000ce24	clrex
000000000000ce28	cmp	x22, #0x1
000000000000ce2c	b.eq	0xce18
000000000000ce30	cbz	x26, 0xce58
000000000000ce34	ldaxr	w9, [x0]
000000000000ce38	stlxr	w10, w8, [x0]
000000000000ce3c	cbnz	w10, 0xce34
000000000000ce40	cbnz	w8, 0xce58
000000000000ce44	cmp	w9, #0x1
000000000000ce48	b.ne	0xce58
000000000000ce4c	ldarb	w8, [x25]
000000000000ce50	tbz	w8, #0x0, 0xce58
000000000000ce54	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000ce58	tbz	w24, #0x0, 0xcea0
000000000000ce5c	ldr	x8, [x26, #0x118]
000000000000ce60	add	x0, x8, #0x70
000000000000ce64	mov	w1, #0x10
000000000000ce68	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ce6c	mov	x22, x0
000000000000ce70	adr	x8, #0x4ce90
000000000000ce74	nop
000000000000ce78	str	x8, [x22, #0x10]!
000000000000ce7c	stur	xzr, [x22, #-0x8]
000000000000ce80	str	x22, [sp, #0x38]
000000000000ce84	ldp	x9, x8, [x26, #0x128]
000000000000ce88	cmp	x9, x8
000000000000ce8c	b.hs	0xcfc8
000000000000ce90	stp	x28, x22, [x9]
000000000000ce94	add	x8, x9, #0x10
000000000000ce98	str	x8, [x26, #0x128]
000000000000ce9c	b	0xd05c
000000000000cea0	str	x22, [sp, #0x38]
000000000000cea4	cmp	x22, x21
000000000000cea8	b.ne	0xd2b8
000000000000ceac	b	0xcec0
000000000000ceb0	ldur	x22, [x9, #-0x8]
000000000000ceb4	str	x22, [sp, #0x38]
000000000000ceb8	cmp	x22, x21
000000000000cebc	b.ne	0xd2b8
000000000000cec0	ldr	x22, [x20, #0x18]
000000000000cec4	mov	x0, x22
000000000000cec8	bl	"_kfun:kotlin.native.concurrent.Lock#lock(){}"
000000000000cecc	ldr	x8, [x20, #0x10]
000000000000ced0	str	x8, [sp, #0x40]
000000000000ced4	add	x8, x8, #0x8
000000000000ced8	ldar	x21, [x8]
000000000000cedc	str	x21, [sp, #0x48]
000000000000cee0	ldar	x23, [x28]
000000000000cee4	cmp	x23, #0x2
000000000000cee8	b.hs	0xd0c8
000000000000ceec	ldp	x8, x9, [x26, #0x120]
000000000000cef0	cmp	x8, x9
000000000000cef4	b.eq	0xcf14
000000000000cef8	mov	x10, x9
000000000000cefc	ldr	x11, [x10, #-0x10]!
000000000000cf00	cmp	x11, x28
000000000000cf04	b.eq	0xd0c0
000000000000cf08	mov	x9, x10
000000000000cf0c	cmp	x10, x8
000000000000cf10	b.ne	0xcefc
000000000000cf14	add	x8, x26, #0x120
000000000000cf18	str	x8, [sp, #0x8]
000000000000cf1c	add	x0, x26, #0x138
000000000000cf20	mov	w9, #0x1
000000000000cf24	ldaxr	w8, [x0]
000000000000cf28	stlxr	w10, w9, [x0]
000000000000cf2c	cbnz	w10, 0xcf24
000000000000cf30	b	0xcf40
000000000000cf34	mov	w24, #0x1
000000000000cf38	stlxr	w9, x24, [x28]
000000000000cf3c	cbz	w9, 0xcf50
000000000000cf40	ldaxr	x23, [x28]
000000000000cf44	cbz	x23, 0xcf34
000000000000cf48	mov	w24, #0x0
000000000000cf4c	clrex
000000000000cf50	cmp	x23, #0x1
000000000000cf54	b.eq	0xcf40
000000000000cf58	cbz	x26, 0xcf80
000000000000cf5c	ldaxr	w9, [x0]
000000000000cf60	stlxr	w10, w8, [x0]
000000000000cf64	cbnz	w10, 0xcf5c
000000000000cf68	cbnz	w8, 0xcf80
000000000000cf6c	cmp	w9, #0x1
000000000000cf70	b.ne	0xcf80
000000000000cf74	ldarb	w8, [x25]
000000000000cf78	tbz	w8, #0x0, 0xcf80
000000000000cf7c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000cf80	tbz	w24, #0x0, 0xd0b0
000000000000cf84	ldr	x8, [x26, #0x118]
000000000000cf88	add	x0, x8, #0x70
000000000000cf8c	mov	w1, #0x10
000000000000cf90	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000cf94	mov	x23, x0
000000000000cf98	adr	x8, #0x4cd68
000000000000cf9c	nop
000000000000cfa0	str	x8, [x23, #0x10]!
000000000000cfa4	stur	xzr, [x23, #-0x8]
000000000000cfa8	str	x23, [sp, #0x58]
000000000000cfac	ldp	x9, x8, [x26, #0x128]
000000000000cfb0	cmp	x9, x8
000000000000cfb4	b.hs	0xd154
000000000000cfb8	stp	x28, x23, [x9]
000000000000cfbc	add	x8, x9, #0x10
000000000000cfc0	str	x8, [x26, #0x128]
000000000000cfc4	b	0xd1e8
000000000000cfc8	str	x27, [sp, #0x8]
000000000000cfcc	ldr	x10, [x23]
000000000000cfd0	sub	x9, x9, x10
000000000000cfd4	asr	x19, x9, #4
000000000000cfd8	add	x9, x19, #0x1
000000000000cfdc	lsr	x11, x9, #60
000000000000cfe0	cbnz	x11, 0xd2f0
000000000000cfe4	sub	x8, x8, x10
000000000000cfe8	asr	x10, x8, #3
000000000000cfec	cmp	x10, x9
000000000000cff0	csel	x9, x9, x10, lo
000000000000cff4	mov	x10, #0x7ffffffffffffff
000000000000cff8	cmp	x10, x8, asr #4
000000000000cffc	mov	x8, #0xfffffffffffffff
000000000000d000	csel	x24, x9, x8, hi
000000000000d004	mov	x0, x24
000000000000d008	mov	w1, #0x10
000000000000d00c	bl	0x519e0 ; symbol stub for: _calloc
000000000000d010	add	x8, x0, x19, lsl #4
000000000000d014	add	x27, x0, x24, lsl #4
000000000000d018	stp	x28, x22, [x8]
000000000000d01c	add	x19, x8, #0x10
000000000000d020	ldp	x1, x9, [x26, #0x120]
000000000000d024	sub	x2, x9, x1
000000000000d028	sub	x24, x8, x2
000000000000d02c	cmp	x2, #0x1
000000000000d030	b.lt	0xd040
000000000000d034	mov	x0, x24
000000000000d038	bl	0x51aac ; symbol stub for: _memcpy
000000000000d03c	ldr	x1, [x23]
000000000000d040	stp	x24, x19, [x26, #0x120]
000000000000d044	str	x27, [x26, #0x130]
000000000000d048	ldr	x27, [sp, #0x8]
000000000000d04c	add	x19, sp, #0x10
000000000000d050	cbz	x1, 0xd05c
000000000000d054	mov	x0, x1
000000000000d058	bl	0x51a64 ; symbol stub for: _free
000000000000d05c	mov	w0, #0x1
000000000000d060	mov	w1, #0x28
000000000000d064	bl	0x519e0 ; symbol stub for: _calloc
000000000000d068	mov	x8, x26
000000000000d06c	ldr	x9, [x8, #0x18]!
000000000000d070	sub	x10, x8, #0x8
000000000000d074	stp	x28, x10, [x0, #0x10]
000000000000d078	stp	x9, x8, [x0]
000000000000d07c	str	x0, [x9, #0x8]
000000000000d080	str	x0, [x8]
000000000000d084	ldr	x9, [x8, #0x10]
000000000000d088	add	x9, x9, #0x1
000000000000d08c	str	x9, [x8, #0x10]
000000000000d090	str	x0, [x0, #0x20]
000000000000d094	stlr	x22, [x28]
000000000000d098	ldr	x9, [x8, #0x110]
000000000000d09c	sub	x9, x9, #0x10
000000000000d0a0	str	x9, [x8, #0x110]
000000000000d0a4	cmp	x22, x21
000000000000d0a8	b.ne	0xd2b8
000000000000d0ac	b	0xcec0
000000000000d0b0	str	x23, [sp, #0x58]
000000000000d0b4	cmp	x23, x21
000000000000d0b8	b.ne	0xd2b0
000000000000d0bc	b	0xd0d0
000000000000d0c0	ldur	x23, [x9, #-0x8]
000000000000d0c4	str	x23, [sp, #0x58]
000000000000d0c8	cmp	x23, x21
000000000000d0cc	b.ne	0xd2b0
000000000000d0d0	ldr	x8, [x20, #0x8]
000000000000d0d4	str	x8, [sp, #0x60]
000000000000d0d8	add	x8, x8, #0x8
000000000000d0dc	ldar	x0, [x8]
000000000000d0e0	str	x0, [sp, #0x68]
000000000000d0e4	cbz	x0, 0xd2e8
000000000000d0e8	add	x1, x19, #0x60
000000000000d0ec	ldr	x8, [x0]
000000000000d0f0	and	x8, x8, #0xfffffffffffffffc
000000000000d0f4	ldr	x8, [x8]
000000000000d0f8	ldr	w9, [x8, #0x3c]
000000000000d0fc	ldr	x8, [x8, #0x40]
000000000000d100	tbnz	w9, #0x1f, 0xd110
000000000000d104	mov	w10, #0x59
000000000000d108	and	x9, x9, x10
000000000000d10c	b	0xd27c
000000000000d110	neg	w10, w9
000000000000d114	mvn	w9, w9
000000000000d118	cmp	w10, #0x9
000000000000d11c	b.ge	0xd23c
000000000000d120	cmp	w10, #0x2
000000000000d124	b.lt	0xd270
000000000000d128	mov	x10, #0x0
000000000000d12c	mov	x11, x8
000000000000d130	ldr	w12, [x11]
000000000000d134	cmp	w12, #0x58
000000000000d138	b.gt	0xd278
000000000000d13c	add	x10, x10, #0x1
000000000000d140	add	x11, x11, #0x10
000000000000d144	cmp	x9, x10
000000000000d148	b.ne	0xd130
000000000000d14c	mov	x10, x9
000000000000d150	b	0xd278
000000000000d154	ldr	x10, [sp, #0x8]
000000000000d158	ldr	x10, [x10]
000000000000d15c	sub	x9, x9, x10
000000000000d160	asr	x19, x9, #4
000000000000d164	add	x9, x19, #0x1
000000000000d168	lsr	x11, x9, #60
000000000000d16c	cbnz	x11, 0xd2f8
000000000000d170	sub	x8, x8, x10
000000000000d174	asr	x10, x8, #3
000000000000d178	cmp	x10, x9
000000000000d17c	csel	x9, x9, x10, lo
000000000000d180	mov	x10, #0x7ffffffffffffff
000000000000d184	cmp	x10, x8, asr #4
000000000000d188	mov	x8, #0xfffffffffffffff
000000000000d18c	csel	x25, x9, x8, hi
000000000000d190	mov	x0, x25
000000000000d194	mov	w1, #0x10
000000000000d198	bl	0x519e0 ; symbol stub for: _calloc
000000000000d19c	add	x8, x0, x19, lsl #4
000000000000d1a0	add	x24, x0, x25, lsl #4
000000000000d1a4	stp	x28, x23, [x8]
000000000000d1a8	add	x19, x8, #0x10
000000000000d1ac	ldp	x1, x9, [x26, #0x120]
000000000000d1b0	sub	x2, x9, x1
000000000000d1b4	sub	x25, x8, x2
000000000000d1b8	cmp	x2, #0x1
000000000000d1bc	b.lt	0xd1d0
000000000000d1c0	mov	x0, x25
000000000000d1c4	bl	0x51aac ; symbol stub for: _memcpy
000000000000d1c8	ldr	x8, [sp, #0x8]
000000000000d1cc	ldr	x1, [x8]
000000000000d1d0	stp	x25, x19, [x26, #0x120]
000000000000d1d4	str	x24, [x26, #0x130]
000000000000d1d8	add	x19, sp, #0x10
000000000000d1dc	cbz	x1, 0xd1e8
000000000000d1e0	mov	x0, x1
000000000000d1e4	bl	0x51a64 ; symbol stub for: _free
000000000000d1e8	mov	w0, #0x1
000000000000d1ec	mov	w1, #0x28
000000000000d1f0	bl	0x519e0 ; symbol stub for: _calloc
000000000000d1f4	mov	x8, x26
000000000000d1f8	ldr	x9, [x8, #0x18]!
000000000000d1fc	sub	x10, x8, #0x8
000000000000d200	stp	x28, x10, [x0, #0x10]
000000000000d204	stp	x9, x8, [x0]
000000000000d208	str	x0, [x9, #0x8]
000000000000d20c	str	x0, [x8]
000000000000d210	ldr	x9, [x8, #0x10]
000000000000d214	add	x9, x9, #0x1
000000000000d218	str	x9, [x8, #0x10]
000000000000d21c	str	x0, [x0, #0x20]
000000000000d220	stlr	x23, [x28]
000000000000d224	ldr	x9, [x8, #0x110]
000000000000d228	sub	x9, x9, #0x10
000000000000d22c	str	x9, [x8, #0x110]
000000000000d230	cmp	x23, x21
000000000000d234	b.ne	0xd2b0
000000000000d238	b	0xd0d0
000000000000d23c	mov	w10, #0x0
000000000000d240	add	w11, w9, w10
000000000000d244	cmp	w11, #0x0
000000000000d248	cinc	w11, w11, lt
000000000000d24c	asr	w11, w11, #1
000000000000d250	sbfiz	x12, x11, #4, #32
000000000000d254	ldr	w12, [x8, x12]
000000000000d258	cmp	w12, #0x59
000000000000d25c	csinc	w10, w10, w11, ge
000000000000d260	csel	w9, w9, w11, lt
000000000000d264	cmp	w10, w9
000000000000d268	b.lt	0xd240
000000000000d26c	b	0xd278
000000000000d270	mov	w10, #0x0
000000000000d274	b	0xd278
000000000000d278	sxtw	x9, w10
000000000000d27c	add	x8, x8, x9, lsl #4
000000000000d280	ldr	x8, [x8, #0x8]
000000000000d284	ldr	x8, [x8]
000000000000d288	blr	x8
000000000000d28c	mov	x21, x0
000000000000d290	ldr	x8, [x20, #0x10]
000000000000d294	str	x8, [sp, #0x88]
000000000000d298	add	x8, x8, #0x8
000000000000d29c	stlr	x0, [x8]
000000000000d2a0	ldr	x8, [x20, #0x8]
000000000000d2a4	str	x8, [sp, #0x90]
000000000000d2a8	add	x8, x8, #0x8
000000000000d2ac	stlr	xzr, [x8]
000000000000d2b0	mov	x0, x22
000000000000d2b4	bl	"_kfun:kotlin.native.concurrent.Lock#unlock(){}"
000000000000d2b8	str	x21, [x27]
000000000000d2bc	ldr	x8, [sp, #0x18]
000000000000d2c0	str	x8, [x26, #0x110]
000000000000d2c4	mov	x0, x21
000000000000d2c8	ldp	x29, x30, [sp, #0x140]
000000000000d2cc	ldp	x20, x19, [sp, #0x130]
000000000000d2d0	ldp	x22, x21, [sp, #0x120]
000000000000d2d4	ldp	x24, x23, [sp, #0x110]
000000000000d2d8	ldp	x26, x25, [sp, #0x100]
000000000000d2dc	ldp	x28, x27, [sp, #0xf0]
000000000000d2e0	add	sp, sp, #0x150
000000000000d2e4	ret
000000000000d2e8	bl	_ThrowNullPointerException
000000000000d2ec	b	0xd300
000000000000d2f0	mov	x0, x23
000000000000d2f4	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000d2f8	ldr	x0, [sp, #0x8]
000000000000d2fc	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000d300	brk	#0x1
000000000000d304	add	x8, sp, #0x10
000000000000d308	str	x8, [x26, #0x110]
000000000000d30c	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000000d310	ldr	x8, [x0, #0x8]
000000000000d314	ldr	x19, [x8]
000000000000d318	str	x19, [sp, #0x50]
000000000000d31c	bl	0x51944 ; symbol stub for: ___cxa_end_catch
000000000000d320	mov	x0, x22
000000000000d324	bl	"_kfun:kotlin.native.concurrent.Lock#unlock(){}"
000000000000d328	mov	x0, x19
000000000000d32c	bl	_ThrowException
_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#isInitialized(){}kotlin.Boolean:
000000000000d330	sub	sp, sp, #0xa0
000000000000d334	stp	x26, x25, [sp, #0x50]
000000000000d338	stp	x24, x23, [sp, #0x60]
000000000000d33c	stp	x22, x21, [sp, #0x70]
000000000000d340	stp	x20, x19, [sp, #0x80]
000000000000d344	stp	x29, x30, [sp, #0x90]
000000000000d348	add	x29, sp, #0x90
000000000000d34c	mov	x19, x0
000000000000d350	movi.16b	v0, #0x0
000000000000d354	stp	q0, q0, [sp]
000000000000d358	str	q0, [sp, #0x20]
000000000000d35c	adrp	x0, 95 ; 0x6c000
000000000000d360	add	x0, x0, #0xbb0
000000000000d364	ldr	x8, [x0]
000000000000d368	blr	x8
000000000000d36c	ldr	x22, [x0]
000000000000d370	ldr	x8, [x22, #0x110]
000000000000d374	mov	x9, sp
000000000000d378	str	x9, [x22, #0x110]
000000000000d37c	mov	x9, #0x600000000
000000000000d380	stp	x8, x9, [sp, #0x8]
000000000000d384	adr	x21, #0x796bf
000000000000d388	nop
000000000000d38c	ldarb	w8, [x21]
000000000000d390	tbz	w8, #0x0, 0xd398
000000000000d394	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000d398	ldr	x8, [x19, #0x10]
000000000000d39c	str	x8, [sp, #0x18]
000000000000d3a0	add	x8, x8, #0x8
000000000000d3a4	ldar	x23, [x8]
000000000000d3a8	str	x23, [sp, #0x20]
000000000000d3ac	adr	x24, #0x796f4
000000000000d3b0	nop
000000000000d3b4	ldar	x19, [x24]
000000000000d3b8	cmp	x19, #0x1
000000000000d3bc	b.hi	0xd57c
000000000000d3c0	ldp	x8, x9, [x22, #0x120]
000000000000d3c4	cmp	x8, x9
000000000000d3c8	b.eq	0xd3e8
000000000000d3cc	mov	x10, x9
000000000000d3d0	ldr	x11, [x10, #-0x10]!
000000000000d3d4	cmp	x11, x24
000000000000d3d8	b.eq	0xd4a0
000000000000d3dc	mov	x9, x10
000000000000d3e0	cmp	x10, x8
000000000000d3e4	b.ne	0xd3d0
000000000000d3e8	add	x20, x22, #0x120
000000000000d3ec	add	x0, x22, #0x138
000000000000d3f0	mov	w9, #0x1
000000000000d3f4	ldaxr	w8, [x0]
000000000000d3f8	stlxr	w10, w9, [x0]
000000000000d3fc	cbnz	w10, 0xd3f4
000000000000d400	b	0xd410
000000000000d404	mov	w25, #0x1
000000000000d408	stlxr	w9, x25, [x24]
000000000000d40c	cbz	w9, 0xd420
000000000000d410	ldaxr	x19, [x24]
000000000000d414	cbz	x19, 0xd404
000000000000d418	mov	w25, #0x0
000000000000d41c	clrex
000000000000d420	cmp	x19, #0x1
000000000000d424	b.eq	0xd410
000000000000d428	cbz	x22, 0xd450
000000000000d42c	ldaxr	w9, [x0]
000000000000d430	stlxr	w10, w8, [x0]
000000000000d434	cbnz	w10, 0xd42c
000000000000d438	cbnz	w8, 0xd450
000000000000d43c	cmp	w9, #0x1
000000000000d440	b.ne	0xd450
000000000000d444	ldarb	w8, [x21]
000000000000d448	tbz	w8, #0x0, 0xd450
000000000000d44c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000d450	tbz	w25, #0x0, 0xd498
000000000000d454	ldr	x8, [x22, #0x118]
000000000000d458	add	x0, x8, #0x70
000000000000d45c	mov	w1, #0x10
000000000000d460	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000d464	mov	x19, x0
000000000000d468	adr	x8, #0x4c898
000000000000d46c	nop
000000000000d470	str	x8, [x19, #0x10]!
000000000000d474	stur	xzr, [x19, #-0x8]
000000000000d478	str	x19, [sp, #0x28]
000000000000d47c	ldp	x9, x8, [x22, #0x128]
000000000000d480	cmp	x9, x8
000000000000d484	b.hs	0xd4ac
000000000000d488	stp	x24, x19, [x9]
000000000000d48c	add	x8, x9, #0x10
000000000000d490	str	x8, [x22, #0x128]
000000000000d494	b	0xd534
000000000000d498	str	x19, [sp, #0x28]
000000000000d49c	b	0xd57c
000000000000d4a0	ldur	x19, [x9, #-0x8]
000000000000d4a4	str	x19, [sp, #0x28]
000000000000d4a8	b	0xd57c
000000000000d4ac	ldr	x10, [x20]
000000000000d4b0	sub	x9, x9, x10
000000000000d4b4	asr	x25, x9, #4
000000000000d4b8	add	x9, x25, #0x1
000000000000d4bc	lsr	x11, x9, #60
000000000000d4c0	cbnz	x11, 0xd5a8
000000000000d4c4	sub	x8, x8, x10
000000000000d4c8	asr	x10, x8, #3
000000000000d4cc	cmp	x10, x9
000000000000d4d0	csel	x9, x9, x10, lo
000000000000d4d4	mov	x10, #0x7ffffffffffffff
000000000000d4d8	cmp	x10, x8, asr #4
000000000000d4dc	mov	x8, #0xfffffffffffffff
000000000000d4e0	csel	x21, x9, x8, hi
000000000000d4e4	mov	x0, x21
000000000000d4e8	mov	w1, #0x10
000000000000d4ec	bl	0x519e0 ; symbol stub for: _calloc
000000000000d4f0	add	x8, x0, x25, lsl #4
000000000000d4f4	add	x25, x0, x21, lsl #4
000000000000d4f8	stp	x24, x19, [x8]
000000000000d4fc	add	x26, x8, #0x10
000000000000d500	ldp	x1, x9, [x22, #0x120]
000000000000d504	sub	x2, x9, x1
000000000000d508	sub	x21, x8, x2
000000000000d50c	cmp	x2, #0x1
000000000000d510	b.lt	0xd520
000000000000d514	mov	x0, x21
000000000000d518	bl	0x51aac ; symbol stub for: _memcpy
000000000000d51c	ldr	x1, [x20]
000000000000d520	stp	x21, x26, [x22, #0x120]
000000000000d524	str	x25, [x22, #0x130]
000000000000d528	cbz	x1, 0xd534
000000000000d52c	mov	x0, x1
000000000000d530	bl	0x51a64 ; symbol stub for: _free
000000000000d534	mov	w0, #0x1
000000000000d538	mov	w1, #0x28
000000000000d53c	bl	0x519e0 ; symbol stub for: _calloc
000000000000d540	mov	x8, x22
000000000000d544	ldr	x9, [x8, #0x18]!
000000000000d548	sub	x10, x8, #0x8
000000000000d54c	stp	x24, x10, [x0, #0x10]
000000000000d550	stp	x9, x8, [x0]
000000000000d554	str	x0, [x9, #0x8]
000000000000d558	str	x0, [x8]
000000000000d55c	ldr	x9, [x8, #0x10]
000000000000d560	add	x9, x9, #0x1
000000000000d564	str	x9, [x8, #0x10]
000000000000d568	str	x0, [x0, #0x20]
000000000000d56c	stlr	x19, [x24]
000000000000d570	ldr	x9, [x8, #0x110]
000000000000d574	sub	x9, x9, #0x10
000000000000d578	str	x9, [x8, #0x110]
000000000000d57c	cmp	x19, x23
000000000000d580	cset	w0, ne
000000000000d584	ldr	x8, [sp, #0x8]
000000000000d588	str	x8, [x22, #0x110]
000000000000d58c	ldp	x29, x30, [sp, #0x90]
000000000000d590	ldp	x20, x19, [sp, #0x80]
000000000000d594	ldp	x22, x21, [sp, #0x70]
000000000000d598	ldp	x24, x23, [sp, #0x60]
000000000000d59c	ldp	x26, x25, [sp, #0x50]
000000000000d5a0	add	sp, sp, #0xa0
000000000000d5a4	ret
000000000000d5a8	mov	x0, x20
000000000000d5ac	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#toString(){}kotlin.String:
000000000000d5b0	sub	sp, sp, #0x50
000000000000d5b4	stp	x22, x21, [sp, #0x20]
000000000000d5b8	stp	x20, x19, [sp, #0x30]
000000000000d5bc	stp	x29, x30, [sp, #0x40]
000000000000d5c0	add	x29, sp, #0x40
000000000000d5c4	mov	x19, x1
000000000000d5c8	mov	x20, x0
000000000000d5cc	movi.16b	v0, #0x0
000000000000d5d0	stp	q0, q0, [sp]
000000000000d5d4	adrp	x0, 95 ; 0x6c000
000000000000d5d8	add	x0, x0, #0xbb0
000000000000d5dc	ldr	x8, [x0]
000000000000d5e0	blr	x8
000000000000d5e4	ldr	x21, [x0]
000000000000d5e8	ldr	x8, [x21, #0x110]
000000000000d5ec	mov	x9, sp
000000000000d5f0	str	x9, [x21, #0x110]
000000000000d5f4	mov	x9, #0x400000000
000000000000d5f8	stp	x8, x9, [sp, #0x8]
000000000000d5fc	adr	x8, #0x79447
000000000000d600	nop
000000000000d604	ldarb	w8, [x8]
000000000000d608	tbnz	w8, #0x0, 0xd648
000000000000d60c	mov	x0, x20
000000000000d610	bl	"_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#isInitialized(){}kotlin.Boolean"
000000000000d614	cbz	w0, 0xd658
000000000000d618	mov	x8, sp
000000000000d61c	add	x1, x8, #0x18
000000000000d620	mov	x0, x20
000000000000d624	bl	"_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#<get-value>(){}1:0"
000000000000d628	cbz	x0, 0xd664
000000000000d62c	ldr	x8, [x0]
000000000000d630	and	x8, x8, #0xfffffffffffffffc
000000000000d634	ldr	x8, [x8]
000000000000d638	ldr	x8, [x8, #0x80]
000000000000d63c	mov	x1, x19
000000000000d640	blr	x8
000000000000d644	b	0xd66c
000000000000d648	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000d64c	mov	x0, x20
000000000000d650	bl	"_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#isInitialized(){}kotlin.Boolean"
000000000000d654	cbnz	w0, 0xd618
000000000000d658	adr	x0, #0x58058
000000000000d65c	nop
000000000000d660	b	0xd66c
000000000000d664	adr	x0, #0x57b8c
000000000000d668	nop
000000000000d66c	str	x0, [x19]
000000000000d670	ldr	x8, [sp, #0x8]
000000000000d674	str	x8, [x21, #0x110]
000000000000d678	ldp	x29, x30, [sp, #0x40]
000000000000d67c	ldp	x20, x19, [sp, #0x30]
000000000000d680	ldp	x22, x21, [sp, #0x20]
000000000000d684	add	sp, sp, #0x50
000000000000d688	ret
_kfun:kotlin.native.concurrent.Lock#lock(){}:
000000000000d68c	sub	sp, sp, #0x90
000000000000d690	stp	x24, x23, [sp, #0x50]
000000000000d694	stp	x22, x21, [sp, #0x60]
000000000000d698	stp	x20, x19, [sp, #0x70]
000000000000d69c	stp	x29, x30, [sp, #0x80]
000000000000d6a0	add	x29, sp, #0x80
000000000000d6a4	mov	x19, x0
000000000000d6a8	movi.16b	v0, #0x0
000000000000d6ac	stp	q0, q0, [sp]
000000000000d6b0	adrp	x0, 95 ; 0x6c000
000000000000d6b4	add	x0, x0, #0xbb0
000000000000d6b8	ldr	x8, [x0]
000000000000d6bc	blr	x8
000000000000d6c0	ldr	x22, [x0]
000000000000d6c4	ldr	x8, [x22, #0x110]
000000000000d6c8	mov	x9, sp
000000000000d6cc	str	x9, [x22, #0x110]
000000000000d6d0	mov	x9, #0x400000000
000000000000d6d4	stp	x8, x9, [sp, #0x8]
000000000000d6d8	adr	x23, #0x7936b
000000000000d6dc	nop
000000000000d6e0	ldarb	w8, [x23]
000000000000d6e4	tbz	w8, #0x0, 0xd6ec
000000000000d6e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000d6ec	bl	_LookupTLS
000000000000d6f0	ldar	x20, [x0]
000000000000d6f4	cmp	x20, #0x2
000000000000d6f8	b.hs	0xd784
000000000000d6fc	cbz	x20, 0xd708
000000000000d700	str	x20, [sp, #0x18]
000000000000d704	b	0xd784
000000000000d708	mov	x21, x0
000000000000d70c	ldr	x8, [x22, #0x118]
000000000000d710	add	x0, x8, #0x70
000000000000d714	mov	w1, #0x18
000000000000d718	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000d71c	mov	x20, x0
000000000000d720	adr	x8, #0x4c700
000000000000d724	nop
000000000000d728	str	x8, [x20, #0x10]!
000000000000d72c	stur	xzr, [x20, #-0x8]
000000000000d730	str	x20, [sp, #0x18]
000000000000d734	str	x20, [x21]
000000000000d738	movi.16b	v0, #0x0
000000000000d73c	stp	q0, q0, [sp, #0x20]
000000000000d740	str	xzr, [sp, #0x40]
000000000000d744	add	x8, sp, #0x20
000000000000d748	ldp	x9, x10, [x22, #0x110]
000000000000d74c	str	x8, [x22, #0x110]
000000000000d750	mov	x8, #0x500000000
000000000000d754	stp	x9, x8, [sp, #0x28]
000000000000d758	add	x0, x10, #0x70
000000000000d75c	mov	w1, #0x10
000000000000d760	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000d764	adr	x8, #0x4adec
000000000000d768	nop
000000000000d76c	str	x8, [x0, #0x10]!
000000000000d770	stur	xzr, [x0, #-0x8]
000000000000d774	stp	x0, x0, [sp, #0x38]
000000000000d778	str	x0, [x20, #0x8]
000000000000d77c	ldr	x8, [sp, #0x28]
000000000000d780	str	x8, [x22, #0x110]
000000000000d784	ldr	x0, [x20, #0x8]
000000000000d788	ldr	x8, [x0]
000000000000d78c	and	x8, x8, #0xfffffffffffffffc
000000000000d790	ldr	x8, [x8]
000000000000d794	ldr	x8, [x8, #0x78]
000000000000d798	blr	x8
000000000000d79c	mov	x20, x0
000000000000d7a0	ldarb	w8, [x23]
000000000000d7a4	tbz	w8, #0x0, 0xd7ac
000000000000d7a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000d7ac	ldr	x8, [x19, #0x8]
000000000000d7b0	add	x9, x8, #0x8
000000000000d7b4	ldaxr	w8, [x9]
000000000000d7b8	cbnz	w8, 0xd7d4
000000000000d7bc	stlxr	w10, w20, [x9]
000000000000d7c0	cbnz	w10, 0xd7b4
000000000000d7c4	mov	w9, #0x1
000000000000d7c8	cmp	w8, w20
000000000000d7cc	b.ne	0xd7e4
000000000000d7d0	b	0xd7ec
000000000000d7d4	mov	w9, #0x0
000000000000d7d8	clrex
000000000000d7dc	cmp	w8, w20
000000000000d7e0	b.eq	0xd7ec
000000000000d7e4	tbz	w9, #0x0, 0xd7a0
000000000000d7e8	b	0xd804
000000000000d7ec	ldr	x8, [x19, #0x10]
000000000000d7f0	add	x8, x8, #0x8
000000000000d7f4	ldaxr	w9, [x8]
000000000000d7f8	add	w9, w9, #0x1
000000000000d7fc	stlxr	w10, w9, [x8]
000000000000d800	cbnz	w10, 0xd7f4
000000000000d804	ldr	x8, [sp, #0x8]
000000000000d808	str	x8, [x22, #0x110]
000000000000d80c	ldp	x29, x30, [sp, #0x80]
000000000000d810	ldp	x20, x19, [sp, #0x70]
000000000000d814	ldp	x22, x21, [sp, #0x60]
000000000000d818	ldp	x24, x23, [sp, #0x50]
000000000000d81c	add	sp, sp, #0x90
000000000000d820	ret
_kfun:kotlin.native.concurrent.Lock#unlock(){}:
000000000000d824	sub	sp, sp, #0x80
000000000000d828	stp	x22, x21, [sp, #0x50]
000000000000d82c	stp	x20, x19, [sp, #0x60]
000000000000d830	stp	x29, x30, [sp, #0x70]
000000000000d834	add	x29, sp, #0x70
000000000000d838	mov	x19, x0
000000000000d83c	movi.16b	v0, #0x0
000000000000d840	stp	q0, q0, [sp]
000000000000d844	adrp	x0, 95 ; 0x6c000
000000000000d848	add	x0, x0, #0xbb0
000000000000d84c	ldr	x8, [x0]
000000000000d850	blr	x8
000000000000d854	ldr	x22, [x0]
000000000000d858	ldr	x8, [x22, #0x110]
000000000000d85c	mov	x9, sp
000000000000d860	str	x9, [x22, #0x110]
000000000000d864	mov	x9, #0x400000000
000000000000d868	stp	x8, x9, [sp, #0x8]
000000000000d86c	adr	x8, #0x791d7
000000000000d870	nop
000000000000d874	ldarb	w8, [x8]
000000000000d878	tbz	w8, #0x0, 0xd880
000000000000d87c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000d880	ldr	x8, [x19, #0x10]
000000000000d884	add	x8, x8, #0x8
000000000000d888	ldar	w8, [x8]
000000000000d88c	cmp	w8, #0x1
000000000000d890	b.lt	0xd8b0
000000000000d894	ldr	x8, [x19, #0x10]
000000000000d898	add	x8, x8, #0x8
000000000000d89c	ldaxr	w9, [x8]
000000000000d8a0	sub	w9, w9, #0x1
000000000000d8a4	stlxr	w10, w9, [x8]
000000000000d8a8	cbnz	w10, 0xd89c
000000000000d8ac	b	0xd984
000000000000d8b0	bl	_LookupTLS
000000000000d8b4	ldar	x20, [x0]
000000000000d8b8	cmp	x20, #0x2
000000000000d8bc	b.hs	0xd948
000000000000d8c0	cbz	x20, 0xd8cc
000000000000d8c4	str	x20, [sp, #0x18]
000000000000d8c8	b	0xd948
000000000000d8cc	mov	x21, x0
000000000000d8d0	ldr	x8, [x22, #0x118]
000000000000d8d4	add	x0, x8, #0x70
000000000000d8d8	mov	w1, #0x18
000000000000d8dc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000d8e0	mov	x20, x0
000000000000d8e4	adr	x8, #0x4c53c
000000000000d8e8	nop
000000000000d8ec	str	x8, [x20, #0x10]!
000000000000d8f0	stur	xzr, [x20, #-0x8]
000000000000d8f4	str	x20, [sp, #0x18]
000000000000d8f8	str	x20, [x21]
000000000000d8fc	movi.16b	v0, #0x0
000000000000d900	stp	q0, q0, [sp, #0x20]
000000000000d904	str	xzr, [sp, #0x40]
000000000000d908	add	x8, sp, #0x20
000000000000d90c	ldp	x9, x10, [x22, #0x110]
000000000000d910	str	x8, [x22, #0x110]
000000000000d914	mov	x8, #0x500000000
000000000000d918	stp	x9, x8, [sp, #0x28]
000000000000d91c	add	x0, x10, #0x70
000000000000d920	mov	w1, #0x10
000000000000d924	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000d928	adr	x8, #0x4ac28
000000000000d92c	nop
000000000000d930	str	x8, [x0, #0x10]!
000000000000d934	stur	xzr, [x0, #-0x8]
000000000000d938	stp	x0, x0, [sp, #0x38]
000000000000d93c	str	x0, [x20, #0x8]
000000000000d940	ldr	x8, [sp, #0x28]
000000000000d944	str	x8, [x22, #0x110]
000000000000d948	ldr	x0, [x20, #0x8]
000000000000d94c	ldr	x8, [x0]
000000000000d950	and	x8, x8, #0xfffffffffffffffc
000000000000d954	ldr	x8, [x8]
000000000000d958	ldr	x8, [x8, #0x78]
000000000000d95c	blr	x8
000000000000d960	ldr	x8, [x19, #0x8]
000000000000d964	add	x8, x8, #0x8
000000000000d968	ldaxr	w9, [x8]
000000000000d96c	cmp	w9, w0
000000000000d970	b.ne	0xd980
000000000000d974	stlxr	w9, wzr, [x8]
000000000000d978	cbnz	w9, 0xd968
000000000000d97c	b	0xd984
000000000000d980	clrex
000000000000d984	ldr	x8, [sp, #0x8]
000000000000d988	str	x8, [x22, #0x110]
000000000000d98c	ldp	x29, x30, [sp, #0x70]
000000000000d990	ldp	x20, x19, [sp, #0x60]
000000000000d994	ldp	x22, x21, [sp, #0x50]
000000000000d998	add	sp, sp, #0x80
000000000000d99c	ret
_Kotlin_boxByte:
000000000000d9a0	sub	sp, sp, #0x70
000000000000d9a4	stp	x22, x21, [sp, #0x40]
000000000000d9a8	stp	x20, x19, [sp, #0x50]
000000000000d9ac	stp	x29, x30, [sp, #0x60]
000000000000d9b0	add	x29, sp, #0x60
000000000000d9b4	mov	x19, x1
000000000000d9b8	mov	x20, x0
000000000000d9bc	str	xzr, [sp, #0x8]
000000000000d9c0	adrp	x21, 95 ; 0x6c000
000000000000d9c4	add	x21, x21, #0xbb0
000000000000d9c8	ldr	x22, [x21]
000000000000d9cc	mov	x0, x21
000000000000d9d0	blr	x22
000000000000d9d4	ldr	x8, [x0]
000000000000d9d8	ldr	x9, [x8, #0x110]
000000000000d9dc	add	x10, sp, #0x8
000000000000d9e0	str	x10, [x8, #0x110]
000000000000d9e4	mov	x8, #0x300000000
000000000000d9e8	stp	x9, x8, [sp, #0x10]
000000000000d9ec	adr	x8, #0x79057
000000000000d9f0	nop
000000000000d9f4	ldarb	w8, [x8]
000000000000d9f8	tbz	w8, #0x0, 0xda00
000000000000d9fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000da00	mov	x0, x21
000000000000da04	blr	x22
000000000000da08	ldr	x8, [x0]
000000000000da0c	ldr	x9, [x8, #0x110]
000000000000da10	add	x10, sp, #0x20
000000000000da14	str	x10, [x8, #0x110]
000000000000da18	adr	x8, #0x53788
000000000000da1c	nop
000000000000da20	add	x8, x8, w20, sxtw #4
000000000000da24	add	x8, x8, #0x800
000000000000da28	str	x8, [x19]
000000000000da2c	ldr	x10, [x0]
000000000000da30	str	x9, [x10, #0x110]
000000000000da34	str	x8, [x19]
000000000000da38	ldr	x9, [x0]
000000000000da3c	ldr	x10, [sp, #0x10]
000000000000da40	str	x10, [x9, #0x110]
000000000000da44	mov	x0, x8
000000000000da48	ldp	x29, x30, [sp, #0x60]
000000000000da4c	ldp	x20, x19, [sp, #0x50]
000000000000da50	ldp	x22, x21, [sp, #0x40]
000000000000da54	add	sp, sp, #0x70
000000000000da58	ret
_Kotlin_boxShort:
000000000000da5c	sub	sp, sp, #0x70
000000000000da60	stp	x22, x21, [sp, #0x40]
000000000000da64	stp	x20, x19, [sp, #0x50]
000000000000da68	stp	x29, x30, [sp, #0x60]
000000000000da6c	add	x29, sp, #0x60
000000000000da70	mov	x19, x1
000000000000da74	mov	x21, x0
000000000000da78	str	xzr, [sp, #0x8]
000000000000da7c	adrp	x20, 95 ; 0x6c000
000000000000da80	add	x20, x20, #0xbb0
000000000000da84	ldr	x22, [x20]
000000000000da88	mov	x0, x20
000000000000da8c	blr	x22
000000000000da90	ldr	x8, [x0]
000000000000da94	ldr	x9, [x8, #0x110]
000000000000da98	add	x10, sp, #0x8
000000000000da9c	str	x10, [x8, #0x110]
000000000000daa0	mov	x8, #0x300000000
000000000000daa4	stp	x9, x8, [sp, #0x10]
000000000000daa8	adr	x8, #0x78f9b
000000000000daac	nop
000000000000dab0	ldarb	w8, [x8]
000000000000dab4	tbz	w8, #0x0, 0xdabc
000000000000dab8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000dabc	movi.16b	v0, #0x0
000000000000dac0	stp	q0, q0, [sp, #0x20]
000000000000dac4	mov	x0, x20
000000000000dac8	blr	x22
000000000000dacc	ldr	x8, [x0]
000000000000dad0	ldr	x9, [x8, #0x110]
000000000000dad4	add	x10, sp, #0x20
000000000000dad8	str	x10, [x8, #0x110]
000000000000dadc	mov	x8, #0x400000000
000000000000dae0	stp	x9, x8, [sp, #0x28]
000000000000dae4	cmp	w21, w21, sxtb
000000000000dae8	b.ne	0xdb04
000000000000daec	adr	x8, #0x546b4
000000000000daf0	nop
000000000000daf4	add	x8, x8, w21, sxtw #4
000000000000daf8	add	x8, x8, #0x800
000000000000dafc	str	x8, [x19]
000000000000db00	b	0xdb3c
000000000000db04	mov	x0, x20
000000000000db08	blr	x22
000000000000db0c	ldr	x8, [x0]
000000000000db10	ldr	x8, [x8, #0x118]
000000000000db14	add	x0, x8, #0x70
000000000000db18	mov	w1, #0x18
000000000000db1c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000db20	adr	x9, #0x4ba40
000000000000db24	nop
000000000000db28	mov	x8, x0
000000000000db2c	str	x9, [x8, #0x10]!
000000000000db30	stur	xzr, [x8, #-0x8]
000000000000db34	str	x8, [sp, #0x38]
000000000000db38	strh	w21, [x8, #0x8]
000000000000db3c	str	x8, [x19]
000000000000db40	mov	x0, x20
000000000000db44	blr	x22
000000000000db48	ldr	x9, [x0]
000000000000db4c	ldr	x10, [sp, #0x28]
000000000000db50	str	x10, [x9, #0x110]
000000000000db54	str	x8, [x19]
000000000000db58	ldr	x9, [x0]
000000000000db5c	ldr	x10, [sp, #0x10]
000000000000db60	str	x10, [x9, #0x110]
000000000000db64	mov	x0, x8
000000000000db68	ldp	x29, x30, [sp, #0x60]
000000000000db6c	ldp	x20, x19, [sp, #0x50]
000000000000db70	ldp	x22, x21, [sp, #0x40]
000000000000db74	add	sp, sp, #0x70
000000000000db78	ret
_Kotlin_boxLong:
000000000000db7c	sub	sp, sp, #0x70
000000000000db80	stp	x22, x21, [sp, #0x40]
000000000000db84	stp	x20, x19, [sp, #0x50]
000000000000db88	stp	x29, x30, [sp, #0x60]
000000000000db8c	add	x29, sp, #0x60
000000000000db90	mov	x19, x1
000000000000db94	mov	x21, x0
000000000000db98	str	xzr, [sp, #0x8]
000000000000db9c	adrp	x20, 95 ; 0x6c000
000000000000dba0	add	x20, x20, #0xbb0
000000000000dba4	ldr	x22, [x20]
000000000000dba8	mov	x0, x20
000000000000dbac	blr	x22
000000000000dbb0	ldr	x8, [x0]
000000000000dbb4	ldr	x9, [x8, #0x110]
000000000000dbb8	add	x10, sp, #0x8
000000000000dbbc	str	x10, [x8, #0x110]
000000000000dbc0	mov	x8, #0x300000000
000000000000dbc4	stp	x9, x8, [sp, #0x10]
000000000000dbc8	adr	x8, #0x78e7b
000000000000dbcc	nop
000000000000dbd0	ldarb	w8, [x8]
000000000000dbd4	tbz	w8, #0x0, 0xdbdc
000000000000dbd8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000dbdc	movi.16b	v0, #0x0
000000000000dbe0	stp	q0, q0, [sp, #0x20]
000000000000dbe4	mov	x0, x20
000000000000dbe8	blr	x22
000000000000dbec	ldr	x8, [x0]
000000000000dbf0	ldr	x9, [x8, #0x110]
000000000000dbf4	add	x10, sp, #0x20
000000000000dbf8	str	x10, [x8, #0x110]
000000000000dbfc	mov	x8, #0x400000000
000000000000dc00	stp	x9, x8, [sp, #0x28]
000000000000dc04	cmp	x21, w21, sxtb
000000000000dc08	b.ne	0xdc24
000000000000dc0c	add	x8, x21, #0x80
000000000000dc10	adr	x9, #0x56590
000000000000dc14	nop
000000000000dc18	add	x8, x9, x8, lsl #4
000000000000dc1c	str	x8, [x19]
000000000000dc20	b	0xdc5c
000000000000dc24	mov	x0, x20
000000000000dc28	blr	x22
000000000000dc2c	ldr	x8, [x0]
000000000000dc30	ldr	x8, [x8, #0x118]
000000000000dc34	add	x0, x8, #0x70
000000000000dc38	mov	w1, #0x18
000000000000dc3c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000dc40	adr	x9, #0x4b7a0
000000000000dc44	nop
000000000000dc48	mov	x8, x0
000000000000dc4c	str	x9, [x8, #0x10]!
000000000000dc50	stur	xzr, [x8, #-0x8]
000000000000dc54	str	x8, [sp, #0x38]
000000000000dc58	str	x21, [x8, #0x8]
000000000000dc5c	str	x8, [x19]
000000000000dc60	mov	x0, x20
000000000000dc64	blr	x22
000000000000dc68	ldr	x9, [x0]
000000000000dc6c	ldr	x10, [sp, #0x28]
000000000000dc70	str	x10, [x9, #0x110]
000000000000dc74	str	x8, [x19]
000000000000dc78	ldr	x9, [x0]
000000000000dc7c	ldr	x10, [sp, #0x10]
000000000000dc80	str	x10, [x9, #0x110]
000000000000dc84	mov	x0, x8
000000000000dc88	ldp	x29, x30, [sp, #0x60]
000000000000dc8c	ldp	x20, x19, [sp, #0x50]
000000000000dc90	ldp	x22, x21, [sp, #0x40]
000000000000dc94	add	sp, sp, #0x70
000000000000dc98	ret
_Kotlin_boxUByte:
000000000000dc9c	sub	sp, sp, #0x70
000000000000dca0	stp	x22, x21, [sp, #0x40]
000000000000dca4	stp	x20, x19, [sp, #0x50]
000000000000dca8	stp	x29, x30, [sp, #0x60]
000000000000dcac	add	x29, sp, #0x60
000000000000dcb0	mov	x19, x1
000000000000dcb4	mov	x20, x0
000000000000dcb8	str	xzr, [sp, #0x8]
000000000000dcbc	adrp	x21, 95 ; 0x6c000
000000000000dcc0	add	x21, x21, #0xbb0
000000000000dcc4	ldr	x22, [x21]
000000000000dcc8	mov	x0, x21
000000000000dccc	blr	x22
000000000000dcd0	ldr	x8, [x0]
000000000000dcd4	ldr	x9, [x8, #0x110]
000000000000dcd8	add	x10, sp, #0x8
000000000000dcdc	str	x10, [x8, #0x110]
000000000000dce0	mov	x8, #0x300000000
000000000000dce4	stp	x9, x8, [sp, #0x10]
000000000000dce8	adr	x8, #0x78d5b
000000000000dcec	nop
000000000000dcf0	ldarb	w8, [x8]
000000000000dcf4	tbz	w8, #0x0, 0xdcfc
000000000000dcf8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000dcfc	movi.16b	v0, #0x0
000000000000dd00	stp	q0, q0, [sp, #0x20]
000000000000dd04	mov	x0, x21
000000000000dd08	blr	x22
000000000000dd0c	mov	x21, x0
000000000000dd10	ldr	x8, [x0]
000000000000dd14	add	x9, sp, #0x20
000000000000dd18	ldp	x10, x11, [x8, #0x110]
000000000000dd1c	str	x9, [x8, #0x110]
000000000000dd20	mov	x8, #0x400000000
000000000000dd24	stp	x10, x8, [sp, #0x28]
000000000000dd28	add	x0, x11, #0x70
000000000000dd2c	mov	w1, #0x18
000000000000dd30	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000dd34	adr	x8, #0x4ef7c
000000000000dd38	nop
000000000000dd3c	str	x8, [x0, #0x10]!
000000000000dd40	stur	xzr, [x0, #-0x8]
000000000000dd44	str	x0, [sp, #0x38]
000000000000dd48	strb	w20, [x0, #0x8]
000000000000dd4c	str	x0, [x19]
000000000000dd50	ldr	x8, [x21]
000000000000dd54	ldr	x9, [sp, #0x28]
000000000000dd58	str	x9, [x8, #0x110]
000000000000dd5c	str	x0, [x19]
000000000000dd60	ldr	x8, [x21]
000000000000dd64	ldr	x9, [sp, #0x10]
000000000000dd68	str	x9, [x8, #0x110]
000000000000dd6c	ldp	x29, x30, [sp, #0x60]
000000000000dd70	ldp	x20, x19, [sp, #0x50]
000000000000dd74	ldp	x22, x21, [sp, #0x40]
000000000000dd78	add	sp, sp, #0x70
000000000000dd7c	ret
_Kotlin_boxUShort:
000000000000dd80	sub	sp, sp, #0x70
000000000000dd84	stp	x22, x21, [sp, #0x40]
000000000000dd88	stp	x20, x19, [sp, #0x50]
000000000000dd8c	stp	x29, x30, [sp, #0x60]
000000000000dd90	add	x29, sp, #0x60
000000000000dd94	mov	x19, x1
000000000000dd98	mov	x20, x0
000000000000dd9c	str	xzr, [sp, #0x8]
000000000000dda0	adrp	x21, 95 ; 0x6c000
000000000000dda4	add	x21, x21, #0xbb0
000000000000dda8	ldr	x22, [x21]
000000000000ddac	mov	x0, x21
000000000000ddb0	blr	x22
000000000000ddb4	ldr	x8, [x0]
000000000000ddb8	ldr	x9, [x8, #0x110]
000000000000ddbc	add	x10, sp, #0x8
000000000000ddc0	str	x10, [x8, #0x110]
000000000000ddc4	mov	x8, #0x300000000
000000000000ddc8	stp	x9, x8, [sp, #0x10]
000000000000ddcc	adr	x8, #0x78c77
000000000000ddd0	nop
000000000000ddd4	ldarb	w8, [x8]
000000000000ddd8	tbz	w8, #0x0, 0xdde0
000000000000dddc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000dde0	movi.16b	v0, #0x0
000000000000dde4	stp	q0, q0, [sp, #0x20]
000000000000dde8	mov	x0, x21
000000000000ddec	blr	x22
000000000000ddf0	mov	x21, x0
000000000000ddf4	ldr	x8, [x0]
000000000000ddf8	add	x9, sp, #0x20
000000000000ddfc	ldp	x10, x11, [x8, #0x110]
000000000000de00	str	x9, [x8, #0x110]
000000000000de04	mov	x8, #0x400000000
000000000000de08	stp	x10, x8, [sp, #0x28]
000000000000de0c	add	x0, x11, #0x70
000000000000de10	mov	w1, #0x18
000000000000de14	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000de18	adr	x8, #0x4f048
000000000000de1c	nop
000000000000de20	str	x8, [x0, #0x10]!
000000000000de24	stur	xzr, [x0, #-0x8]
000000000000de28	str	x0, [sp, #0x38]
000000000000de2c	strh	w20, [x0, #0x8]
000000000000de30	str	x0, [x19]
000000000000de34	ldr	x8, [x21]
000000000000de38	ldr	x9, [sp, #0x28]
000000000000de3c	str	x9, [x8, #0x110]
000000000000de40	str	x0, [x19]
000000000000de44	ldr	x8, [x21]
000000000000de48	ldr	x9, [sp, #0x10]
000000000000de4c	str	x9, [x8, #0x110]
000000000000de50	ldp	x29, x30, [sp, #0x60]
000000000000de54	ldp	x20, x19, [sp, #0x50]
000000000000de58	ldp	x22, x21, [sp, #0x40]
000000000000de5c	add	sp, sp, #0x70
000000000000de60	ret
_Kotlin_boxUInt:
000000000000de64	sub	sp, sp, #0x70
000000000000de68	stp	x22, x21, [sp, #0x40]
000000000000de6c	stp	x20, x19, [sp, #0x50]
000000000000de70	stp	x29, x30, [sp, #0x60]
000000000000de74	add	x29, sp, #0x60
000000000000de78	mov	x19, x1
000000000000de7c	mov	x20, x0
000000000000de80	str	xzr, [sp, #0x8]
000000000000de84	adrp	x21, 95 ; 0x6c000
000000000000de88	add	x21, x21, #0xbb0
000000000000de8c	ldr	x22, [x21]
000000000000de90	mov	x0, x21
000000000000de94	blr	x22
000000000000de98	ldr	x8, [x0]
000000000000de9c	ldr	x9, [x8, #0x110]
000000000000dea0	add	x10, sp, #0x8
000000000000dea4	str	x10, [x8, #0x110]
000000000000dea8	mov	x8, #0x300000000
000000000000deac	stp	x9, x8, [sp, #0x10]
000000000000deb0	adr	x8, #0x78b93
000000000000deb4	nop
000000000000deb8	ldarb	w8, [x8]
000000000000debc	tbz	w8, #0x0, 0xdec4
000000000000dec0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000dec4	movi.16b	v0, #0x0
000000000000dec8	stp	q0, q0, [sp, #0x20]
000000000000decc	mov	x0, x21
000000000000ded0	blr	x22
000000000000ded4	mov	x21, x0
000000000000ded8	ldr	x8, [x0]
000000000000dedc	add	x9, sp, #0x20
000000000000dee0	ldp	x10, x11, [x8, #0x110]
000000000000dee4	str	x9, [x8, #0x110]
000000000000dee8	mov	x8, #0x400000000
000000000000deec	stp	x10, x8, [sp, #0x28]
000000000000def0	add	x0, x11, #0x70
000000000000def4	mov	w1, #0x18
000000000000def8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000defc	adr	x8, #0x4ee44
000000000000df00	nop
000000000000df04	str	x8, [x0, #0x10]!
000000000000df08	stur	xzr, [x0, #-0x8]
000000000000df0c	str	x0, [sp, #0x38]
000000000000df10	str	w20, [x0, #0x8]
000000000000df14	str	x0, [x19]
000000000000df18	ldr	x8, [x21]
000000000000df1c	ldr	x9, [sp, #0x28]
000000000000df20	str	x9, [x8, #0x110]
000000000000df24	str	x0, [x19]
000000000000df28	ldr	x8, [x21]
000000000000df2c	ldr	x9, [sp, #0x10]
000000000000df30	str	x9, [x8, #0x110]
000000000000df34	ldp	x29, x30, [sp, #0x60]
000000000000df38	ldp	x20, x19, [sp, #0x50]
000000000000df3c	ldp	x22, x21, [sp, #0x40]
000000000000df40	add	sp, sp, #0x70
000000000000df44	ret
_Kotlin_boxULong:
000000000000df48	sub	sp, sp, #0x70
000000000000df4c	stp	x22, x21, [sp, #0x40]
000000000000df50	stp	x20, x19, [sp, #0x50]
000000000000df54	stp	x29, x30, [sp, #0x60]
000000000000df58	add	x29, sp, #0x60
000000000000df5c	mov	x19, x1
000000000000df60	mov	x20, x0
000000000000df64	str	xzr, [sp, #0x8]
000000000000df68	adrp	x21, 95 ; 0x6c000
000000000000df6c	add	x21, x21, #0xbb0
000000000000df70	ldr	x22, [x21]
000000000000df74	mov	x0, x21
000000000000df78	blr	x22
000000000000df7c	ldr	x8, [x0]
000000000000df80	ldr	x9, [x8, #0x110]
000000000000df84	add	x10, sp, #0x8
000000000000df88	str	x10, [x8, #0x110]
000000000000df8c	mov	x8, #0x300000000
000000000000df90	stp	x9, x8, [sp, #0x10]
000000000000df94	adr	x8, #0x78aaf
000000000000df98	nop
000000000000df9c	ldarb	w8, [x8]
000000000000dfa0	tbz	w8, #0x0, 0xdfa8
000000000000dfa4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000dfa8	movi.16b	v0, #0x0
000000000000dfac	stp	q0, q0, [sp, #0x20]
000000000000dfb0	mov	x0, x21
000000000000dfb4	blr	x22
000000000000dfb8	mov	x21, x0
000000000000dfbc	ldr	x8, [x0]
000000000000dfc0	add	x9, sp, #0x20
000000000000dfc4	ldp	x10, x11, [x8, #0x110]
000000000000dfc8	str	x9, [x8, #0x110]
000000000000dfcc	mov	x8, #0x400000000
000000000000dfd0	stp	x10, x8, [sp, #0x28]
000000000000dfd4	add	x0, x11, #0x70
000000000000dfd8	mov	w1, #0x18
000000000000dfdc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000dfe0	adr	x8, #0x4edf0
000000000000dfe4	nop
000000000000dfe8	str	x8, [x0, #0x10]!
000000000000dfec	stur	xzr, [x0, #-0x8]
000000000000dff0	str	x0, [sp, #0x38]
000000000000dff4	str	x20, [x0, #0x8]
000000000000dff8	str	x0, [x19]
000000000000dffc	ldr	x8, [x21]
000000000000e000	ldr	x9, [sp, #0x28]
000000000000e004	str	x9, [x8, #0x110]
000000000000e008	str	x0, [x19]
000000000000e00c	ldr	x8, [x21]
000000000000e010	ldr	x9, [sp, #0x10]
000000000000e014	str	x9, [x8, #0x110]
000000000000e018	ldp	x29, x30, [sp, #0x60]
000000000000e01c	ldp	x20, x19, [sp, #0x50]
000000000000e020	ldp	x22, x21, [sp, #0x40]
000000000000e024	add	sp, sp, #0x70
000000000000e028	ret
_Kotlin_boxFloat:
000000000000e02c	sub	sp, sp, #0x80
000000000000e030	stp	d9, d8, [sp, #0x40]
000000000000e034	stp	x22, x21, [sp, #0x50]
000000000000e038	stp	x20, x19, [sp, #0x60]
000000000000e03c	stp	x29, x30, [sp, #0x70]
000000000000e040	add	x29, sp, #0x70
000000000000e044	mov	x19, x0
000000000000e048	fmov	s8, s0
000000000000e04c	str	xzr, [sp, #0x8]
000000000000e050	adrp	x20, 94 ; 0x6c000
000000000000e054	add	x20, x20, #0xbb0
000000000000e058	ldr	x21, [x20]
000000000000e05c	mov	x0, x20
000000000000e060	blr	x21
000000000000e064	ldr	x8, [x0]
000000000000e068	ldr	x9, [x8, #0x110]
000000000000e06c	add	x10, sp, #0x8
000000000000e070	str	x10, [x8, #0x110]
000000000000e074	mov	x8, #0x300000000
000000000000e078	stp	x9, x8, [sp, #0x10]
000000000000e07c	adr	x8, #0x789c7
000000000000e080	nop
000000000000e084	ldarb	w8, [x8]
000000000000e088	tbz	w8, #0x0, 0xe090
000000000000e08c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e090	movi.16b	v0, #0x0
000000000000e094	stp	q0, q0, [sp, #0x20]
000000000000e098	mov	x0, x20
000000000000e09c	blr	x21
000000000000e0a0	mov	x20, x0
000000000000e0a4	ldr	x8, [x0]
000000000000e0a8	add	x9, sp, #0x20
000000000000e0ac	ldp	x10, x11, [x8, #0x110]
000000000000e0b0	str	x9, [x8, #0x110]
000000000000e0b4	mov	x8, #0x400000000
000000000000e0b8	stp	x10, x8, [sp, #0x28]
000000000000e0bc	add	x0, x11, #0x70
000000000000e0c0	mov	w1, #0x18
000000000000e0c4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000e0c8	adr	x8, #0x4b558
000000000000e0cc	nop
000000000000e0d0	str	x8, [x0, #0x10]!
000000000000e0d4	stur	xzr, [x0, #-0x8]
000000000000e0d8	str	x0, [sp, #0x38]
000000000000e0dc	str	s8, [x0, #0x8]
000000000000e0e0	str	x0, [x19]
000000000000e0e4	ldr	x8, [x20]
000000000000e0e8	ldr	x9, [sp, #0x28]
000000000000e0ec	str	x9, [x8, #0x110]
000000000000e0f0	str	x0, [x19]
000000000000e0f4	ldr	x8, [x20]
000000000000e0f8	ldr	x9, [sp, #0x10]
000000000000e0fc	str	x9, [x8, #0x110]
000000000000e100	ldp	x29, x30, [sp, #0x70]
000000000000e104	ldp	x20, x19, [sp, #0x60]
000000000000e108	ldp	x22, x21, [sp, #0x50]
000000000000e10c	ldp	d9, d8, [sp, #0x40]
000000000000e110	add	sp, sp, #0x80
000000000000e114	ret
_Kotlin_boxDouble:
000000000000e118	sub	sp, sp, #0x80
000000000000e11c	stp	d9, d8, [sp, #0x40]
000000000000e120	stp	x22, x21, [sp, #0x50]
000000000000e124	stp	x20, x19, [sp, #0x60]
000000000000e128	stp	x29, x30, [sp, #0x70]
000000000000e12c	add	x29, sp, #0x70
000000000000e130	mov	x19, x0
000000000000e134	fmov	d8, d0
000000000000e138	str	xzr, [sp, #0x8]
000000000000e13c	adrp	x20, 94 ; 0x6c000
000000000000e140	add	x20, x20, #0xbb0
000000000000e144	ldr	x21, [x20]
000000000000e148	mov	x0, x20
000000000000e14c	blr	x21
000000000000e150	ldr	x8, [x0]
000000000000e154	ldr	x9, [x8, #0x110]
000000000000e158	add	x10, sp, #0x8
000000000000e15c	str	x10, [x8, #0x110]
000000000000e160	mov	x8, #0x300000000
000000000000e164	stp	x9, x8, [sp, #0x10]
000000000000e168	adr	x8, #0x788db
000000000000e16c	nop
000000000000e170	ldarb	w8, [x8]
000000000000e174	tbz	w8, #0x0, 0xe17c
000000000000e178	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e17c	movi.16b	v0, #0x0
000000000000e180	stp	q0, q0, [sp, #0x20]
000000000000e184	mov	x0, x20
000000000000e188	blr	x21
000000000000e18c	mov	x20, x0
000000000000e190	ldr	x8, [x0]
000000000000e194	add	x9, sp, #0x20
000000000000e198	ldp	x10, x11, [x8, #0x110]
000000000000e19c	str	x9, [x8, #0x110]
000000000000e1a0	mov	x8, #0x400000000
000000000000e1a4	stp	x10, x8, [sp, #0x28]
000000000000e1a8	add	x0, x11, #0x70
000000000000e1ac	mov	w1, #0x18
000000000000e1b0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000e1b4	adr	x8, #0x4b16c
000000000000e1b8	nop
000000000000e1bc	str	x8, [x0, #0x10]!
000000000000e1c0	stur	xzr, [x0, #-0x8]
000000000000e1c4	str	x0, [sp, #0x38]
000000000000e1c8	str	d8, [x0, #0x8]
000000000000e1cc	str	x0, [x19]
000000000000e1d0	ldr	x8, [x20]
000000000000e1d4	ldr	x9, [sp, #0x28]
000000000000e1d8	str	x9, [x8, #0x110]
000000000000e1dc	str	x0, [x19]
000000000000e1e0	ldr	x8, [x20]
000000000000e1e4	ldr	x9, [sp, #0x10]
000000000000e1e8	str	x9, [x8, #0x110]
000000000000e1ec	ldp	x29, x30, [sp, #0x70]
000000000000e1f0	ldp	x20, x19, [sp, #0x60]
000000000000e1f4	ldp	x22, x21, [sp, #0x50]
000000000000e1f8	ldp	d9, d8, [sp, #0x40]
000000000000e1fc	add	sp, sp, #0x80
000000000000e200	ret
_kfun:kotlin.native.internal.KClassImpl#<get-simpleName>(){}kotlin.String?:
000000000000e204	sub	sp, sp, #0x60
000000000000e208	stp	x22, x21, [sp, #0x30]
000000000000e20c	stp	x20, x19, [sp, #0x40]
000000000000e210	stp	x29, x30, [sp, #0x50]
000000000000e214	add	x29, sp, #0x50
000000000000e218	mov	x19, x1
000000000000e21c	mov	x20, x0
000000000000e220	movi.16b	v0, #0x0
000000000000e224	stp	q0, q0, [sp]
000000000000e228	str	xzr, [sp, #0x20]
000000000000e22c	mov	x22, sp
000000000000e230	adrp	x0, 94 ; 0x6c000
000000000000e234	add	x0, x0, #0xbb0
000000000000e238	ldr	x8, [x0]
000000000000e23c	blr	x8
000000000000e240	ldr	x21, [x0]
000000000000e244	ldr	x8, [x21, #0x110]
000000000000e248	str	x22, [x21, #0x110]
000000000000e24c	mov	x9, #0x500000000
000000000000e250	stp	x8, x9, [sp, #0x8]
000000000000e254	adr	x8, #0x787ef
000000000000e258	nop
000000000000e25c	ldarb	w8, [x8]
000000000000e260	tbz	w8, #0x0, 0xe268
000000000000e264	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e268	ldr	x8, [x20, #0x8]
000000000000e26c	ldrb	w9, [x8, #0x59]
000000000000e270	tbnz	w9, #0x1, 0xe27c
000000000000e274	mov	x0, #0x0
000000000000e278	b	0xe2a0
000000000000e27c	ldr	x0, [x8, #0x50]
000000000000e280	str	x0, [sp, #0x18]
000000000000e284	cbz	x0, 0xe2a0
000000000000e288	add	x2, x22, #0x20
000000000000e28c	mov	w1, #0x2e
000000000000e290	bl	"_kfun:kotlin.text#substringAfterLast$default__at__kotlin.String(kotlin.Char;kotlin.String?;kotlin.Int){}kotlin.String"
000000000000e294	mov	w1, #0x24
000000000000e298	mov	x2, x19
000000000000e29c	bl	"_kfun:kotlin.text#substringAfterLast$default__at__kotlin.String(kotlin.Char;kotlin.String?;kotlin.Int){}kotlin.String"
000000000000e2a0	str	x0, [x19]
000000000000e2a4	ldr	x8, [sp, #0x8]
000000000000e2a8	str	x8, [x21, #0x110]
000000000000e2ac	ldp	x29, x30, [sp, #0x50]
000000000000e2b0	ldp	x20, x19, [sp, #0x40]
000000000000e2b4	ldp	x22, x21, [sp, #0x30]
000000000000e2b8	add	sp, sp, #0x60
000000000000e2bc	ret
_kfun:kotlin.native.internal.KClassImpl#<get-qualifiedName>(){}kotlin.String?:
000000000000e2c0	sub	sp, sp, #0xc0
000000000000e2c4	stp	x26, x25, [sp, #0x70]
000000000000e2c8	stp	x24, x23, [sp, #0x80]
000000000000e2cc	stp	x22, x21, [sp, #0x90]
000000000000e2d0	stp	x20, x19, [sp, #0xa0]
000000000000e2d4	stp	x29, x30, [sp, #0xb0]
000000000000e2d8	add	x29, sp, #0xb0
000000000000e2dc	mov	x19, x1
000000000000e2e0	mov	x20, x0
000000000000e2e4	movi.16b	v0, #0x0
000000000000e2e8	stp	q0, q0, [sp, #0x20]
000000000000e2ec	str	xzr, [sp, #0x60]
000000000000e2f0	stp	q0, q0, [sp, #0x40]
000000000000e2f4	add	x24, sp, #0x20
000000000000e2f8	stp	xzr, xzr, [sp, #0x10]
000000000000e2fc	adr	x8, #0x4e094
000000000000e300	nop
000000000000e304	orr	x8, x8, #0x3
000000000000e308	str	x8, [sp, #0x8]
000000000000e30c	adrp	x0, 94 ; 0x6c000
000000000000e310	add	x0, x0, #0xbb0
000000000000e314	ldr	x8, [x0]
000000000000e318	blr	x8
000000000000e31c	ldr	x25, [x0]
000000000000e320	ldr	x8, [x25, #0x110]
000000000000e324	str	x24, [x25, #0x110]
000000000000e328	mov	x9, #0x900000000
000000000000e32c	stp	x8, x9, [sp, #0x28]
000000000000e330	adr	x8, #0x78713
000000000000e334	nop
000000000000e338	ldarb	w8, [x8]
000000000000e33c	tbz	w8, #0x0, 0xe344
000000000000e340	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e344	ldr	x8, [x20, #0x8]
000000000000e348	ldr	w9, [x8, #0x58]
000000000000e34c	tbnz	w9, #0x8, 0xe380
000000000000e350	mov	x20, #0x0
000000000000e354	str	x20, [x19]
000000000000e358	ldr	x8, [sp, #0x28]
000000000000e35c	str	x8, [x25, #0x110]
000000000000e360	mov	x0, x20
000000000000e364	ldp	x29, x30, [sp, #0xb0]
000000000000e368	ldp	x20, x19, [sp, #0xa0]
000000000000e36c	ldp	x22, x21, [sp, #0x90]
000000000000e370	ldp	x24, x23, [sp, #0x80]
000000000000e374	ldp	x26, x25, [sp, #0x70]
000000000000e378	add	sp, sp, #0xc0
000000000000e37c	ret
000000000000e380	mov	x20, #0x0
000000000000e384	ldr	x21, [x8, #0x48]
000000000000e388	str	x21, [sp, #0x38]
000000000000e38c	cbz	x21, 0xe354
000000000000e390	tbz	w9, #0x9, 0xe354
000000000000e394	ldr	x20, [x8, #0x50]
000000000000e398	str	x20, [sp, #0x40]
000000000000e39c	cbz	x20, 0xe354
000000000000e3a0	ldr	w8, [x21, #0x8]
000000000000e3a4	cbz	w8, 0xe354
000000000000e3a8	add	x22, x24, #0x30
000000000000e3ac	add	x23, x24, #0x40
000000000000e3b0	add	x24, x24, #0x38
000000000000e3b4	add	x8, sp, #0x8
000000000000e3b8	str	x8, [sp, #0x48]
000000000000e3bc	add	x0, sp, #0x8
000000000000e3c0	mov	w1, #0xa
000000000000e3c4	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000e3c8	add	x0, sp, #0x8
000000000000e3cc	mov	x1, x21
000000000000e3d0	mov	x2, x22
000000000000e3d4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000e3d8	adr	x1, #0x57328
000000000000e3dc	nop
000000000000e3e0	add	x0, sp, #0x8
000000000000e3e4	mov	x2, x24
000000000000e3e8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000e3ec	add	x0, sp, #0x8
000000000000e3f0	mov	x1, x20
000000000000e3f4	mov	x2, x23
000000000000e3f8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000e3fc	add	x0, sp, #0x8
000000000000e400	mov	x1, x19
000000000000e404	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000e408	mov	x20, x0
000000000000e40c	b	0xe354
_kfun:kotlin.native.internal.KClassImpl#isInstance(kotlin.Any?){}kotlin.Boolean:
000000000000e410	stp	x20, x19, [sp, #-0x20]!
000000000000e414	stp	x29, x30, [sp, #0x10]
000000000000e418	add	x29, sp, #0x10
000000000000e41c	mov	x19, x1
000000000000e420	mov	x20, x0
000000000000e424	adr	x8, #0x7861f
000000000000e428	nop
000000000000e42c	ldarb	w8, [x8]
000000000000e430	tbz	w8, #0x0, 0xe438
000000000000e434	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e438	cbz	x19, 0xe4ac
000000000000e43c	ldr	x8, [x20, #0x8]
000000000000e440	ldr	x9, [x19]
000000000000e444	and	x9, x9, #0xfffffffffffffffc
000000000000e448	ldr	x9, [x9]
000000000000e44c	ldrb	w10, [x8, #0x58]
000000000000e450	tbnz	w10, #0x2, 0xe484
000000000000e454	cmp	x9, #0x0
000000000000e458	cset	w0, ne
000000000000e45c	ccmp	x8, x9, #0x4, ne
000000000000e460	b.eq	0xe478
000000000000e464	ldr	x9, [x9, #0x18]
000000000000e468	cmp	x9, #0x0
000000000000e46c	cset	w0, ne
000000000000e470	ccmp	x9, x8, #0x4, ne
000000000000e474	b.ne	0xe464
000000000000e478	ldp	x29, x30, [sp, #0x10]
000000000000e47c	ldp	x20, x19, [sp], #0x20
000000000000e480	ret
000000000000e484	ldrsw	x10, [x9, #0x38]
000000000000e488	cmp	w10, #0x1
000000000000e48c	b.lt	0xe4ac
000000000000e490	ldr	x9, [x9, #0x30]
000000000000e494	ldr	x11, [x9]
000000000000e498	cmp	x11, x8
000000000000e49c	b.eq	0xe4bc
000000000000e4a0	add	x9, x9, #0x8
000000000000e4a4	subs	x10, x10, #0x1
000000000000e4a8	b.ne	0xe494
000000000000e4ac	mov	w0, #0x0
000000000000e4b0	ldp	x29, x30, [sp, #0x10]
000000000000e4b4	ldp	x20, x19, [sp], #0x20
000000000000e4b8	ret
000000000000e4bc	mov	w0, #0x1
000000000000e4c0	ldp	x29, x30, [sp, #0x10]
000000000000e4c4	ldp	x20, x19, [sp], #0x20
000000000000e4c8	ret
_kfun:kotlin.native.internal.KClassImpl#equals(kotlin.Any?){}kotlin.Boolean:
000000000000e4cc	stp	x20, x19, [sp, #-0x20]!
000000000000e4d0	stp	x29, x30, [sp, #0x10]
000000000000e4d4	add	x29, sp, #0x10
000000000000e4d8	mov	x19, x1
000000000000e4dc	mov	x20, x0
000000000000e4e0	adr	x8, #0x78563
000000000000e4e4	nop
000000000000e4e8	ldarb	w8, [x8]
000000000000e4ec	tbz	w8, #0x0, 0xe4f4
000000000000e4f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e4f4	cbz	x19, 0xe52c
000000000000e4f8	ldr	x8, [x19]
000000000000e4fc	and	x8, x8, #0xfffffffffffffffc
000000000000e500	ldr	x8, [x8]
000000000000e504	ldr	w8, [x8, #0x5c]
000000000000e508	cmp	w8, #0xd2
000000000000e50c	b.ne	0xe52c
000000000000e510	ldr	x8, [x20, #0x8]
000000000000e514	ldr	x9, [x19, #0x8]
000000000000e518	cmp	x8, x9
000000000000e51c	cset	w0, eq
000000000000e520	ldp	x29, x30, [sp, #0x10]
000000000000e524	ldp	x20, x19, [sp], #0x20
000000000000e528	ret
000000000000e52c	mov	w0, #0x0
000000000000e530	ldp	x29, x30, [sp, #0x10]
000000000000e534	ldp	x20, x19, [sp], #0x20
000000000000e538	ret
_kfun:kotlin.native.internal.KClassImpl#hashCode(){}kotlin.Int:
000000000000e53c	stp	x20, x19, [sp, #-0x20]!
000000000000e540	stp	x29, x30, [sp, #0x10]
000000000000e544	add	x29, sp, #0x10
000000000000e548	mov	x19, x0
000000000000e54c	adr	x8, #0x784f7
000000000000e550	nop
000000000000e554	ldarb	w8, [x8]
000000000000e558	tbz	w8, #0x0, 0xe560
000000000000e55c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e560	ldp	w8, w9, [x19, #0x8]
000000000000e564	eor	w0, w9, w8
000000000000e568	ldp	x29, x30, [sp, #0x10]
000000000000e56c	ldp	x20, x19, [sp], #0x20
000000000000e570	ret
_kfun:kotlin.native.internal.KClassImpl#toString(){}kotlin.String:
000000000000e574	sub	sp, sp, #0x50
000000000000e578	stp	x22, x21, [sp, #0x20]
000000000000e57c	stp	x20, x19, [sp, #0x30]
000000000000e580	stp	x29, x30, [sp, #0x40]
000000000000e584	add	x29, sp, #0x40
000000000000e588	mov	x19, x1
000000000000e58c	mov	x20, x0
000000000000e590	movi.16b	v0, #0x0
000000000000e594	stp	q0, q0, [sp]
000000000000e598	mov	x8, sp
000000000000e59c	add	x21, x8, #0x18
000000000000e5a0	adrp	x0, 94 ; 0x6c000
000000000000e5a4	add	x0, x0, #0xbb0
000000000000e5a8	ldr	x9, [x0]
000000000000e5ac	blr	x9
000000000000e5b0	ldr	x22, [x0]
000000000000e5b4	ldr	x9, [x22, #0x110]
000000000000e5b8	str	x8, [x22, #0x110]
000000000000e5bc	mov	x8, #0x400000000
000000000000e5c0	stp	x9, x8, [sp, #0x8]
000000000000e5c4	adr	x8, #0x7847f
000000000000e5c8	nop
000000000000e5cc	ldarb	w8, [x8]
000000000000e5d0	tbz	w8, #0x0, 0xe5d8
000000000000e5d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e5d8	mov	x0, x20
000000000000e5dc	mov	x1, x21
000000000000e5e0	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-fullName>(){}kotlin.String?"
000000000000e5e4	adr	x8, #0x5715c
000000000000e5e8	nop
000000000000e5ec	cmp	x0, #0x0
000000000000e5f0	csel	x1, x8, x0, eq
000000000000e5f4	adr	x0, #0x5712c
000000000000e5f8	nop
000000000000e5fc	mov	x2, x19
000000000000e600	bl	_Kotlin_String_plusImpl
000000000000e604	str	x0, [x19]
000000000000e608	ldr	x8, [sp, #0x8]
000000000000e60c	str	x8, [x22, #0x110]
000000000000e610	ldp	x29, x30, [sp, #0x40]
000000000000e614	ldp	x20, x19, [sp, #0x30]
000000000000e618	ldp	x22, x21, [sp, #0x20]
000000000000e61c	add	sp, sp, #0x50
000000000000e620	ret
_kfun:kotlin.native.internal.KClassImpl#<get-fullName>(){}kotlin.String?:
000000000000e624	sub	sp, sp, #0xc0
000000000000e628	stp	x26, x25, [sp, #0x70]
000000000000e62c	stp	x24, x23, [sp, #0x80]
000000000000e630	stp	x22, x21, [sp, #0x90]
000000000000e634	stp	x20, x19, [sp, #0xa0]
000000000000e638	stp	x29, x30, [sp, #0xb0]
000000000000e63c	add	x29, sp, #0xb0
000000000000e640	mov	x19, x1
000000000000e644	mov	x20, x0
000000000000e648	movi.16b	v0, #0x0
000000000000e64c	stp	q0, q0, [sp, #0x20]
000000000000e650	stp	q0, q0, [sp, #0x50]
000000000000e654	str	q0, [sp, #0x40]
000000000000e658	add	x24, sp, #0x20
000000000000e65c	stp	xzr, xzr, [sp, #0x10]
000000000000e660	adr	x8, #0x4dd30
000000000000e664	nop
000000000000e668	orr	x8, x8, #0x3
000000000000e66c	str	x8, [sp, #0x8]
000000000000e670	adrp	x0, 94 ; 0x6c000
000000000000e674	add	x0, x0, #0xbb0
000000000000e678	ldr	x8, [x0]
000000000000e67c	blr	x8
000000000000e680	ldr	x25, [x0]
000000000000e684	ldr	x8, [x25, #0x110]
000000000000e688	str	x24, [x25, #0x110]
000000000000e68c	mov	x9, #0xa00000000
000000000000e690	stp	x8, x9, [sp, #0x28]
000000000000e694	adr	x8, #0x783af
000000000000e698	nop
000000000000e69c	ldarb	w8, [x8]
000000000000e6a0	tbz	w8, #0x0, 0xe6a8
000000000000e6a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e6a8	ldr	x8, [x20, #0x8]
000000000000e6ac	ldr	x20, [x8, #0x50]
000000000000e6b0	str	x20, [sp, #0x38]
000000000000e6b4	cbz	x20, 0xe748
000000000000e6b8	ldr	x21, [x8, #0x48]
000000000000e6bc	str	x21, [sp, #0x40]
000000000000e6c0	cbz	x21, 0xe748
000000000000e6c4	add	x1, x24, #0x28
000000000000e6c8	ldr	w8, [x21, #0x8]
000000000000e6cc	cmp	w8, #0x0
000000000000e6d0	cset	w0, eq
000000000000e6d4	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
000000000000e6d8	cbz	x0, 0xe748
000000000000e6dc	ldrb	w8, [x0, #0x8]
000000000000e6e0	tbnz	w8, #0x0, 0xe748
000000000000e6e4	add	x22, x24, #0x40
000000000000e6e8	add	x23, x24, #0x38
000000000000e6ec	add	x24, x24, #0x48
000000000000e6f0	add	x8, sp, #0x8
000000000000e6f4	str	x8, [sp, #0x50]
000000000000e6f8	add	x0, sp, #0x8
000000000000e6fc	mov	w1, #0xa
000000000000e700	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000e704	add	x0, sp, #0x8
000000000000e708	mov	x1, x21
000000000000e70c	mov	x2, x23
000000000000e710	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000e714	adr	x1, #0x56fec
000000000000e718	nop
000000000000e71c	add	x0, sp, #0x8
000000000000e720	mov	x2, x22
000000000000e724	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000e728	add	x0, sp, #0x8
000000000000e72c	mov	x1, x20
000000000000e730	mov	x2, x24
000000000000e734	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000e738	add	x0, sp, #0x8
000000000000e73c	mov	x1, x19
000000000000e740	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000e744	mov	x20, x0
000000000000e748	str	x20, [x19]
000000000000e74c	ldr	x8, [sp, #0x28]
000000000000e750	str	x8, [x25, #0x110]
000000000000e754	mov	x0, x20
000000000000e758	ldp	x29, x30, [sp, #0xb0]
000000000000e75c	ldp	x20, x19, [sp, #0xa0]
000000000000e760	ldp	x22, x21, [sp, #0x90]
000000000000e764	ldp	x24, x23, [sp, #0x80]
000000000000e768	ldp	x26, x25, [sp, #0x70]
000000000000e76c	add	sp, sp, #0xc0
000000000000e770	ret
_kfun:kotlin.native.internal.NumberConverter.freeFormatExponential#internal:
000000000000e774	sub	sp, sp, #0xe0
000000000000e778	stp	x26, x25, [sp, #0x90]
000000000000e77c	stp	x24, x23, [sp, #0xa0]
000000000000e780	stp	x22, x21, [sp, #0xb0]
000000000000e784	stp	x20, x19, [sp, #0xc0]
000000000000e788	stp	x29, x30, [sp, #0xd0]
000000000000e78c	add	x29, sp, #0xd0
000000000000e790	mov	x19, x1
000000000000e794	mov	x20, x0
000000000000e798	movi.16b	v0, #0x0
000000000000e79c	stp	q0, q0, [sp, #0x50]
000000000000e7a0	str	q0, [sp, #0x70]
000000000000e7a4	adr	x8, #0x49ecc
000000000000e7a8	nop
000000000000e7ac	orr	x8, x8, #0x3
000000000000e7b0	str	x8, [sp, #0x8]
000000000000e7b4	mov	w8, #0x19
000000000000e7b8	str	w8, [sp, #0x10]
000000000000e7bc	stur	q0, [sp, #0x18]
000000000000e7c0	stur	q0, [sp, #0x28]
000000000000e7c4	stur	q0, [sp, #0x38]
000000000000e7c8	strh	wzr, [sp, #0x48]
000000000000e7cc	adrp	x0, 94 ; 0x6c000
000000000000e7d0	add	x0, x0, #0xbb0
000000000000e7d4	ldr	x8, [x0]
000000000000e7d8	blr	x8
000000000000e7dc	ldr	x23, [x0]
000000000000e7e0	ldr	x8, [x23, #0x110]
000000000000e7e4	add	x9, sp, #0x50
000000000000e7e8	str	x9, [x23, #0x110]
000000000000e7ec	mov	x9, #0x600000000
000000000000e7f0	stp	x8, x9, [sp, #0x58]
000000000000e7f4	adr	x22, #0x7824f
000000000000e7f8	nop
000000000000e7fc	ldarb	w8, [x22]
000000000000e800	tbz	w8, #0x0, 0xe808
000000000000e804	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e808	add	x8, sp, #0x8
000000000000e80c	str	x8, [sp, #0x68]
000000000000e810	ldr	x8, [x20, #0x8]
000000000000e814	ldrsw	x9, [x20, #0x14]
000000000000e818	add	w10, w9, #0x1
000000000000e81c	str	w10, [x20, #0x14]
000000000000e820	ldr	w10, [x8, #0x8]
000000000000e824	cmp	w10, w9
000000000000e828	b.ls	0xe9cc
000000000000e82c	ldr	w10, [sp, #0x10]
000000000000e830	cbz	w10, 0xe9cc
000000000000e834	add	x8, x8, x9, lsl #2
000000000000e838	ldr	w8, [x8, #0x10]
000000000000e83c	add	w8, w8, #0x30
000000000000e840	ldr	x9, [sp, #0x8]
000000000000e844	strh	w8, [sp, #0x18]
000000000000e848	cmp	w10, #0x1
000000000000e84c	b.eq	0xe9cc
000000000000e850	add	x26, sp, #0x8
000000000000e854	add	x21, x26, #0x10
000000000000e858	ldr	x8, [sp, #0x8]
000000000000e85c	mov	w8, #0x2e
000000000000e860	strh	w8, [sp, #0x1a]
000000000000e864	ldr	w24, [x20, #0x18]
000000000000e868	mov	w25, #0x2
000000000000e86c	ldarb	w8, [x22]
000000000000e870	tbz	w8, #0x0, 0xe878
000000000000e874	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e878	ldp	w9, w8, [x20, #0x10]
000000000000e87c	sxtw	x8, w8
000000000000e880	cmp	w8, w9
000000000000e884	b.ge	0xe8d4
000000000000e888	ldr	x9, [x20, #0x8]
000000000000e88c	add	w10, w8, #0x1
000000000000e890	str	w10, [x20, #0x14]
000000000000e894	ldr	w10, [x9, #0x8]
000000000000e898	cmp	w10, w8
000000000000e89c	b.ls	0xe9cc
000000000000e8a0	ldr	w10, [sp, #0x10]
000000000000e8a4	cmp	w10, w25
000000000000e8a8	b.ls	0xe9cc
000000000000e8ac	add	x8, x9, x8, lsl #2
000000000000e8b0	ldr	w8, [x8, #0x10]
000000000000e8b4	add	w8, w8, #0x30
000000000000e8b8	ldr	x9, [sp, #0x8]
000000000000e8bc	add	x9, x26, w25, sxtw #1
000000000000e8c0	strh	w8, [x9, #0x10]
000000000000e8c4	add	w25, w25, #0x1
000000000000e8c8	ldarb	w8, [x22]
000000000000e8cc	tbnz	w8, #0x0, 0xe874
000000000000e8d0	b	0xe878
000000000000e8d4	ldr	w8, [sp, #0x10]
000000000000e8d8	cmp	w25, #0x2
000000000000e8dc	b.ne	0xe900
000000000000e8e0	cmp	w8, w25
000000000000e8e4	b.ls	0xe9cc
000000000000e8e8	ldr	x9, [sp, #0x8]
000000000000e8ec	add	x9, sp, #0x8
000000000000e8f0	add	x9, x9, w25, sxtw #1
000000000000e8f4	mov	w10, #0x30
000000000000e8f8	strh	w10, [x9, #0x10]
000000000000e8fc	add	w25, w25, #0x1
000000000000e900	cmp	w8, w25
000000000000e904	b.ls	0xe9cc
000000000000e908	ldr	x8, [sp, #0x8]
000000000000e90c	add	x8, sp, #0x8
000000000000e910	add	x8, x8, w25, sxtw #1
000000000000e914	mov	w9, #0x45
000000000000e918	strh	w9, [x8, #0x10]
000000000000e91c	adds	w25, w25, #0x1
000000000000e920	b.mi	0xe9d0
000000000000e924	add	x8, sp, #0x50
000000000000e928	add	x20, x8, #0x28
000000000000e92c	ldr	x8, [x23, #0x118]
000000000000e930	lsl	x9, x25, #1
000000000000e934	add	x9, x9, #0x1f
000000000000e938	and	x1, x9, #0x3fffffff8
000000000000e93c	add	x0, x8, #0x70
000000000000e940	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000e944	mov	x22, x0
000000000000e948	adr	x8, #0x4ad98
000000000000e94c	nop
000000000000e950	stp	x8, xzr, [x22, #0x10]!
000000000000e954	stur	xzr, [x22, #-0x8]
000000000000e958	str	w25, [x22, #0x8]
000000000000e95c	add	x0, x22, #0x10
000000000000e960	sbfiz	x2, x25, #1, #32
000000000000e964	mov	x1, x21
000000000000e968	bl	0x51aac ; symbol stub for: _memcpy
000000000000e96c	str	x22, [sp, #0x70]
000000000000e970	str	x24, [sp]
000000000000e974	adr	x2, #0x4831f ; literal pool for: "%d"
000000000000e978	nop
000000000000e97c	sub	x0, x29, #0x50
000000000000e980	mov	w1, #0x10
000000000000e984	bl	__ZN5konan8snprintfEPcmPKcz
000000000000e988	sub	x0, x29, #0x50
000000000000e98c	mov	x1, x20
000000000000e990	bl	_CreateStringFromCString
000000000000e994	mov	x1, x0
000000000000e998	mov	x0, x22
000000000000e99c	mov	x2, x19
000000000000e9a0	bl	_Kotlin_String_plusImpl
000000000000e9a4	str	x0, [x19]
000000000000e9a8	ldr	x8, [sp, #0x58]
000000000000e9ac	str	x8, [x23, #0x110]
000000000000e9b0	ldp	x29, x30, [sp, #0xd0]
000000000000e9b4	ldp	x20, x19, [sp, #0xc0]
000000000000e9b8	ldp	x22, x21, [sp, #0xb0]
000000000000e9bc	ldp	x24, x23, [sp, #0xa0]
000000000000e9c0	ldp	x26, x25, [sp, #0x90]
000000000000e9c4	add	sp, sp, #0xe0
000000000000e9c8	ret
000000000000e9cc	bl	_ThrowArrayIndexOutOfBoundsException
000000000000e9d0	bl	_ThrowIllegalArgumentException
_kfun:kotlin.native.internal.NumberConverter.freeFormat#internal:
000000000000e9d4	sub	sp, sp, #0xf0
000000000000e9d8	stp	x28, x27, [sp, #0x90]
000000000000e9dc	stp	x26, x25, [sp, #0xa0]
000000000000e9e0	stp	x24, x23, [sp, #0xb0]
000000000000e9e4	stp	x22, x21, [sp, #0xc0]
000000000000e9e8	stp	x20, x19, [sp, #0xd0]
000000000000e9ec	stp	x29, x30, [sp, #0xe0]
000000000000e9f0	add	x29, sp, #0xe0
000000000000e9f4	mov	x19, x1
000000000000e9f8	mov	x20, x0
000000000000e9fc	movi.16b	v0, #0x0
000000000000ea00	stp	q0, q0, [sp, #0x50]
000000000000ea04	adr	x8, #0x49c6c
000000000000ea08	nop
000000000000ea0c	orr	x8, x8, #0x3
000000000000ea10	str	x8, [sp, #0x8]
000000000000ea14	mov	w8, #0x19
000000000000ea18	str	w8, [sp, #0x10]
000000000000ea1c	stur	q0, [sp, #0x18]
000000000000ea20	stur	q0, [sp, #0x28]
000000000000ea24	stur	q0, [sp, #0x38]
000000000000ea28	strh	wzr, [sp, #0x48]
000000000000ea2c	adrp	x0, 94 ; 0x6c000
000000000000ea30	add	x0, x0, #0xbb0
000000000000ea34	ldr	x8, [x0]
000000000000ea38	blr	x8
000000000000ea3c	ldr	x21, [x0]
000000000000ea40	ldr	x8, [x21, #0x110]
000000000000ea44	add	x9, sp, #0x50
000000000000ea48	str	x9, [x21, #0x110]
000000000000ea4c	mov	x9, #0x400000000
000000000000ea50	stp	x8, x9, [sp, #0x58]
000000000000ea54	adr	x22, #0x77fef
000000000000ea58	nop
000000000000ea5c	ldarb	w8, [x22]
000000000000ea60	tbz	w8, #0x0, 0xea68
000000000000ea64	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ea68	add	x8, sp, #0x8
000000000000ea6c	str	x8, [sp, #0x68]
000000000000ea70	ldr	w23, [x20, #0x18]
000000000000ea74	tbnz	w23, #0x1f, 0xea80
000000000000ea78	mov	w26, #0x0
000000000000ea7c	b	0xeb00
000000000000ea80	ldr	w8, [sp, #0x10]
000000000000ea84	cbz	w8, 0xecc4
000000000000ea88	ldr	x9, [sp, #0x8]
000000000000ea8c	mov	w9, #0x30
000000000000ea90	strh	w9, [sp, #0x18]
000000000000ea94	cmp	w8, #0x1
000000000000ea98	b.eq	0xecc4
000000000000ea9c	ldr	x8, [sp, #0x8]
000000000000eaa0	mov	w8, #0x2e
000000000000eaa4	strh	w8, [sp, #0x1a]
000000000000eaa8	cmn	w23, #0x1
000000000000eaac	b.mi	0xeab8
000000000000eab0	mov	w26, #0x2
000000000000eab4	b	0xeb00
000000000000eab8	neg	w25, w23
000000000000eabc	mov	w24, #0x1
000000000000eac0	add	x26, sp, #0x8
000000000000eac4	mov	w27, #0x30
000000000000eac8	ldarb	w8, [x22]
000000000000eacc	tbz	w8, #0x0, 0xead4
000000000000ead0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ead4	add	w8, w24, #0x1
000000000000ead8	ldr	w9, [sp, #0x10]
000000000000eadc	cmp	w9, w8
000000000000eae0	b.ls	0xecc4
000000000000eae4	ldr	x9, [sp, #0x8]
000000000000eae8	add	x8, x26, w8, sxtw #1
000000000000eaec	strh	w27, [x8, #0x10]
000000000000eaf0	add	w24, w24, #0x1
000000000000eaf4	cmp	w25, w24
000000000000eaf8	b.ne	0xeac8
000000000000eafc	add	w26, w24, #0x1
000000000000eb00	ldr	x8, [x20, #0x8]
000000000000eb04	ldrsw	x9, [x20, #0x14]
000000000000eb08	add	w10, w9, #0x1
000000000000eb0c	str	w10, [x20, #0x14]
000000000000eb10	ldr	w10, [x8, #0x8]
000000000000eb14	cmp	w10, w9
000000000000eb18	b.ls	0xecc4
000000000000eb1c	add	x8, x8, x9, lsl #2
000000000000eb20	ldr	w28, [x8, #0x10]
000000000000eb24	add	x24, sp, #0x8
000000000000eb28	mov	w25, #0x2e
000000000000eb2c	b	0xeb40
000000000000eb30	mov	w28, #-0x1
000000000000eb34	mov	x26, x27
000000000000eb38	cmn	w23, #0x2
000000000000eb3c	b.le	0xec20
000000000000eb40	ldarb	w8, [x22]
000000000000eb44	tbz	w8, #0x0, 0xeb4c
000000000000eb48	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000eb4c	cmn	w28, #0x1
000000000000eb50	b.eq	0xeb7c
000000000000eb54	ldr	w8, [sp, #0x10]
000000000000eb58	cmp	w8, w26
000000000000eb5c	b.ls	0xecc4
000000000000eb60	add	w9, w28, #0x30
000000000000eb64	ldr	x10, [sp, #0x8]
000000000000eb68	add	x10, x24, w26, sxtw #1
000000000000eb6c	strh	w9, [x10, #0x10]
000000000000eb70	add	w27, w26, #0x1
000000000000eb74	cbnz	w23, 0xebc0
000000000000eb78	b	0xeba8
000000000000eb7c	cmn	w23, #0x1
000000000000eb80	b.lt	0xec04
000000000000eb84	ldr	w8, [sp, #0x10]
000000000000eb88	cmp	w8, w26
000000000000eb8c	b.ls	0xecc4
000000000000eb90	ldr	x9, [sp, #0x8]
000000000000eb94	mov	w9, #0x30
000000000000eb98	add	x10, x24, w26, sxtw #1
000000000000eb9c	strh	w9, [x10, #0x10]
000000000000eba0	add	w27, w26, #0x1
000000000000eba4	cbnz	w23, 0xebc0
000000000000eba8	cmp	w8, w27
000000000000ebac	b.ls	0xecc4
000000000000ebb0	ldr	x8, [sp, #0x8]
000000000000ebb4	add	x8, x24, w27, sxtw #1
000000000000ebb8	strh	w25, [x8, #0x10]
000000000000ebbc	add	w27, w26, #0x2
000000000000ebc0	sub	w23, w23, #0x1
000000000000ebc4	ldp	w9, w8, [x20, #0x10]
000000000000ebc8	sxtw	x8, w8
000000000000ebcc	cmp	w8, w9
000000000000ebd0	b.ge	0xeb30
000000000000ebd4	ldr	x9, [x20, #0x8]
000000000000ebd8	add	w10, w8, #0x1
000000000000ebdc	str	w10, [x20, #0x14]
000000000000ebe0	ldr	w10, [x9, #0x8]
000000000000ebe4	cmp	w10, w8
000000000000ebe8	b.ls	0xecc4
000000000000ebec	add	x8, x9, x8, lsl #2
000000000000ebf0	ldr	w28, [x8, #0x10]
000000000000ebf4	mov	x26, x27
000000000000ebf8	cmn	w28, #0x1
000000000000ebfc	b.ne	0xeb40
000000000000ec00	b	0xeb30
000000000000ec04	mov	x27, x26
000000000000ec08	sub	w23, w23, #0x1
000000000000ec0c	ldp	w9, w8, [x20, #0x10]
000000000000ec10	sxtw	x8, w8
000000000000ec14	cmp	w8, w9
000000000000ec18	b.ge	0xeb30
000000000000ec1c	b	0xebd4
000000000000ec20	cbz	w27, 0xec78
000000000000ec24	tbnz	w27, #0x1f, 0xecc8
000000000000ec28	ldr	x8, [x21, #0x118]
000000000000ec2c	mov	w9, w27
000000000000ec30	lsl	x9, x9, #1
000000000000ec34	add	x9, x9, #0x1f
000000000000ec38	and	x1, x9, #0x3fffffff8
000000000000ec3c	add	x0, x8, #0x70
000000000000ec40	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ec44	mov	x20, x0
000000000000ec48	adr	x8, #0x4aa98
000000000000ec4c	nop
000000000000ec50	stp	x8, xzr, [x20, #0x10]!
000000000000ec54	stur	xzr, [x20, #-0x8]
000000000000ec58	str	w27, [x20, #0x8]
000000000000ec5c	add	x0, x20, #0x10
000000000000ec60	add	x8, sp, #0x8
000000000000ec64	add	x1, x8, #0x10
000000000000ec68	sbfiz	x2, x27, #1, #32
000000000000ec6c	bl	0x51aac ; symbol stub for: _memcpy
000000000000ec70	str	x20, [x19]
000000000000ec74	b	0xec94
000000000000ec78	ldr	x8, [x21, #0x110]
000000000000ec7c	sub	x9, x29, #0x68
000000000000ec80	str	x9, [x21, #0x110]
000000000000ec84	adr	x20, #0x56554
000000000000ec88	nop
000000000000ec8c	str	x20, [x19]
000000000000ec90	str	x8, [x21, #0x110]
000000000000ec94	str	x20, [x19]
000000000000ec98	ldr	x8, [sp, #0x58]
000000000000ec9c	str	x8, [x21, #0x110]
000000000000eca0	mov	x0, x20
000000000000eca4	ldp	x29, x30, [sp, #0xe0]
000000000000eca8	ldp	x20, x19, [sp, #0xd0]
000000000000ecac	ldp	x22, x21, [sp, #0xc0]
000000000000ecb0	ldp	x24, x23, [sp, #0xb0]
000000000000ecb4	ldp	x26, x25, [sp, #0xa0]
000000000000ecb8	ldp	x28, x27, [sp, #0x90]
000000000000ecbc	add	sp, sp, #0xf0
000000000000ecc0	ret
000000000000ecc4	bl	_ThrowArrayIndexOutOfBoundsException
000000000000ecc8	bl	_ThrowIllegalArgumentException
_kfun:kotlin.native.internal.NumberConverter.bigIntDigitGeneratorInstImpl#internal:
000000000000eccc	stp	x28, x27, [sp, #-0x60]!
000000000000ecd0	stp	x26, x25, [sp, #0x10]
000000000000ecd4	stp	x24, x23, [sp, #0x20]
000000000000ecd8	stp	x22, x21, [sp, #0x30]
000000000000ecdc	stp	x20, x19, [sp, #0x40]
000000000000ece0	stp	x29, x30, [sp, #0x50]
000000000000ece4	add	x29, sp, #0x50
000000000000ece8	sub	sp, sp, #0x400
000000000000ecec	mov	x22, x4
000000000000ecf0	mov	x23, x3
000000000000ecf4	mov	x20, x2
000000000000ecf8	mov	x21, x1
000000000000ecfc	mov	x24, x0
000000000000ed00	movi.16b	v0, #0x0
000000000000ed04	stp	q0, q0, [sp, #0x70]
000000000000ed08	adr	x8, #0x499f8
000000000000ed0c	nop
000000000000ed10	orr	x8, x8, #0x3
000000000000ed14	str	x8, [sp, #0x50]
000000000000ed18	mov	w8, #0x3
000000000000ed1c	str	w8, [sp, #0x58]
000000000000ed20	str	xzr, [sp, #0x60]
000000000000ed24	str	wzr, [sp, #0x68]
000000000000ed28	adrp	x0, 94 ; 0x6c000
000000000000ed2c	add	x0, x0, #0xbb0
000000000000ed30	ldr	x8, [x0]
000000000000ed34	blr	x8
000000000000ed38	ldr	x10, [x0]
000000000000ed3c	ldr	x8, [x10, #0x110]
000000000000ed40	add	x9, sp, #0x70
000000000000ed44	str	x10, [sp]
000000000000ed48	str	x9, [x10, #0x110]
000000000000ed4c	mov	x9, #0x400000000
000000000000ed50	stp	x8, x9, [sp, #0x78]
000000000000ed54	adr	x8, #0x77cef
000000000000ed58	nop
000000000000ed5c	ldarb	w8, [x8]
000000000000ed60	tbz	w8, #0x0, 0xed6c
000000000000ed64	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ed68	movi.16b	v0, #0x0
000000000000ed6c	add	x8, sp, #0x50
000000000000ed70	str	x8, [sp, #0x88]
000000000000ed74	ldr	x26, [x24, #0x8]
000000000000ed78	stp	q0, q0, [x29, #-0x100]
000000000000ed7c	stp	q0, q0, [x29, #-0xe0]
000000000000ed80	stp	q0, q0, [x29, #-0xc0]
000000000000ed84	stp	q0, q0, [x29, #-0xa0]
000000000000ed88	stp	q0, q0, [x29, #-0x80]
000000000000ed8c	stur	xzr, [x29, #-0x60]
000000000000ed90	stp	q0, q0, [sp, #0x2a0]
000000000000ed94	stp	q0, q0, [sp, #0x2c0]
000000000000ed98	stp	q0, q0, [sp, #0x2e0]
000000000000ed9c	stp	q0, q0, [sp, #0x300]
000000000000eda0	stp	q0, q0, [sp, #0x320]
000000000000eda4	str	q0, [sp, #0x340]
000000000000eda8	str	xzr, [sp, #0x290]
000000000000edac	stp	q0, q0, [sp, #0x270]
000000000000edb0	stp	q0, q0, [sp, #0x250]
000000000000edb4	stp	q0, q0, [sp, #0x230]
000000000000edb8	stp	q0, q0, [sp, #0x210]
000000000000edbc	stp	q0, q0, [sp, #0x1f0]
000000000000edc0	str	xzr, [sp, #0x1e0]
000000000000edc4	stp	q0, q0, [sp, #0x1c0]
000000000000edc8	stp	q0, q0, [sp, #0x1a0]
000000000000edcc	stp	q0, q0, [sp, #0x180]
000000000000edd0	stp	q0, q0, [sp, #0x160]
000000000000edd4	stp	q0, q0, [sp, #0x140]
000000000000edd8	stp	q0, q0, [sp, #0x120]
000000000000eddc	stp	q0, q0, [sp, #0x100]
000000000000ede0	stp	q0, q0, [sp, #0xe0]
000000000000ede4	stp	q0, q0, [sp, #0xc0]
000000000000ede8	stp	q0, q0, [sp, #0xa0]
000000000000edec	str	q0, [sp, #0x90]
000000000000edf0	str	x24, [sp, #0x10]
000000000000edf4	tbnz	w20, #0x1f, 0xee5c
000000000000edf8	stur	x21, [x29, #-0x100]
000000000000edfc	mov	w8, #0x1
000000000000ee00	str	x8, [sp, #0x140]
000000000000ee04	str	x8, [sp, #0x1f0]
000000000000ee08	add	x0, sp, #0x140
000000000000ee0c	mov	w1, #0x15
000000000000ee10	mov	x2, x20
000000000000ee14	bl	_simpleShiftLeftHighPrecision
000000000000ee18	sub	w19, w22, #0x1
000000000000ee1c	mov	w8, #0x2
000000000000ee20	lsl	w8, w8, w19
000000000000ee24	sxtw	x8, w8
000000000000ee28	cmp	x8, x21
000000000000ee2c	b.ne	0xeea4
000000000000ee30	add	w2, w20, #0x2
000000000000ee34	sub	x0, x29, #0x100
000000000000ee38	mov	w1, #0x15
000000000000ee3c	bl	_simpleShiftLeftHighPrecision
000000000000ee40	mov	w8, #0x4
000000000000ee44	str	x8, [sp, #0x2a0]
000000000000ee48	add	w2, w20, #0x1
000000000000ee4c	add	x0, sp, #0x1f0
000000000000ee50	mov	w1, #0x15
000000000000ee54	bl	_simpleShiftLeftHighPrecision
000000000000ee58	b	0xeef8
000000000000ee5c	sub	w19, w22, #0x1
000000000000ee60	tbnz	w23, #0x0, 0xeed0
000000000000ee64	mov	w22, #0x2
000000000000ee68	lsl	w8, w22, w19
000000000000ee6c	sxtw	x8, w8
000000000000ee70	cmp	x8, x21
000000000000ee74	b.ne	0xeed0
000000000000ee78	lsl	x8, x21, #2
000000000000ee7c	stur	x8, [x29, #-0x100]
000000000000ee80	mov	w21, #0x1
000000000000ee84	str	x21, [sp, #0x2a0]
000000000000ee88	sub	w2, w22, w20
000000000000ee8c	add	x0, sp, #0x2a0
000000000000ee90	mov	w1, #0x16
000000000000ee94	bl	_simpleShiftLeftHighPrecision
000000000000ee98	str	x22, [sp, #0x1f0]
000000000000ee9c	str	x21, [sp, #0x140]
000000000000eea0	b	0xeef8
000000000000eea4	add	w2, w20, #0x1
000000000000eea8	sub	x0, x29, #0x100
000000000000eeac	mov	w1, #0x15
000000000000eeb0	bl	_simpleShiftLeftHighPrecision
000000000000eeb4	mov	w8, #0x2
000000000000eeb8	str	x8, [sp, #0x2a0]
000000000000eebc	add	x0, sp, #0x1f0
000000000000eec0	mov	w1, #0x15
000000000000eec4	mov	x2, x20
000000000000eec8	bl	_simpleShiftLeftHighPrecision
000000000000eecc	b	0xeef8
000000000000eed0	lsl	x8, x21, #1
000000000000eed4	stur	x8, [x29, #-0x100]
000000000000eed8	mov	w21, #0x1
000000000000eedc	str	x21, [sp, #0x2a0]
000000000000eee0	sub	w2, w21, w20
000000000000eee4	add	x0, sp, #0x2a0
000000000000eee8	mov	w1, #0x16
000000000000eeec	bl	_simpleShiftLeftHighPrecision
000000000000eef0	str	x21, [sp, #0x140]
000000000000eef4	str	x21, [sp, #0x1f0]
000000000000eef8	add	w8, w19, w20
000000000000eefc	scvtf	d0, w8
000000000000ef00	nop
000000000000ef04	ldr	d1, 0x52410
000000000000ef08	fmul	d0, d0, d1
000000000000ef0c	nop
000000000000ef10	ldr	d1, 0x52418
000000000000ef14	fadd	d0, d0, d1
000000000000ef18	fcvtps	w24, d0
000000000000ef1c	subs	w27, w24, #0x1
000000000000ef20	b.lt	0xef34
000000000000ef24	add	x0, sp, #0x2a0
000000000000ef28	mov	w1, #0x16
000000000000ef2c	mov	x2, x24
000000000000ef30	b	0xef64
000000000000ef34	neg	w20, w24
000000000000ef38	sub	x0, x29, #0x100
000000000000ef3c	mov	w1, #0x15
000000000000ef40	mov	x2, x20
000000000000ef44	bl	_timesTenToTheEHighPrecision
000000000000ef48	add	x0, sp, #0x1f0
000000000000ef4c	mov	w1, #0x15
000000000000ef50	mov	x2, x20
000000000000ef54	bl	_timesTenToTheEHighPrecision
000000000000ef58	add	x0, sp, #0x140
000000000000ef5c	mov	w1, #0x15
000000000000ef60	mov	x2, x20
000000000000ef64	bl	_timesTenToTheEHighPrecision
000000000000ef68	ldp	q0, q1, [x29, #-0x80]
000000000000ef6c	stp	q0, q1, [sp, #0x110]
000000000000ef70	ldur	x8, [x29, #-0x60]
000000000000ef74	stp	x8, xzr, [sp, #0x130]
000000000000ef78	ldp	q0, q1, [x29, #-0xc0]
000000000000ef7c	stp	q0, q1, [sp, #0xd0]
000000000000ef80	ldp	q1, q0, [x29, #-0xa0]
000000000000ef84	stp	q1, q0, [sp, #0xf0]
000000000000ef88	ldp	q0, q1, [x29, #-0x100]
000000000000ef8c	stp	q0, q1, [sp, #0x90]
000000000000ef90	ldp	q1, q0, [x29, #-0xe0]
000000000000ef94	mov	w8, #0x14
000000000000ef98	sub	x9, x29, #0x100
000000000000ef9c	stp	q1, q0, [sp, #0xb0]
000000000000efa0	add	x10, x8, #0x1
000000000000efa4	cmp	x10, #0x2
000000000000efa8	b.lo	0xefc0
000000000000efac	ldr	x10, [x9, x8, lsl #3]
000000000000efb0	sub	x8, x8, #0x1
000000000000efb4	cbz	x10, 0xefa0
000000000000efb8	add	w21, w8, #0x2
000000000000efbc	b	0xefc4
000000000000efc0	mov	w21, #0x1
000000000000efc4	mov	w8, #0x14
000000000000efc8	add	x9, sp, #0x1f0
000000000000efcc	add	x10, x8, #0x1
000000000000efd0	cmp	x10, #0x2
000000000000efd4	b.lo	0xefec
000000000000efd8	ldr	x10, [x9, x8, lsl #3]
000000000000efdc	sub	x8, x8, #0x1
000000000000efe0	cbz	x10, 0xefcc
000000000000efe4	add	w22, w8, #0x2
000000000000efe8	b	0xeff0
000000000000efec	mov	w22, #0x1
000000000000eff0	mov	w8, #0x14
000000000000eff4	add	x9, sp, #0x140
000000000000eff8	add	x10, x8, #0x1
000000000000effc	cmp	x10, #0x2
000000000000f000	b.lo	0xf018
000000000000f004	ldr	x10, [x9, x8, lsl #3]
000000000000f008	sub	x8, x8, #0x1
000000000000f00c	cbz	x10, 0xeff8
000000000000f010	add	w23, w8, #0x2
000000000000f014	b	0xf01c
000000000000f018	mov	w23, #0x1
000000000000f01c	mov	w8, #0x15
000000000000f020	add	x9, sp, #0x2a0
000000000000f024	add	x10, x8, #0x1
000000000000f028	cmp	x10, #0x2
000000000000f02c	b.lo	0xf044
000000000000f030	ldr	x10, [x9, x8, lsl #3]
000000000000f034	sub	x8, x8, #0x1
000000000000f038	cbz	x10, 0xf024
000000000000f03c	add	w20, w8, #0x2
000000000000f040	b	0xf048
000000000000f044	mov	w20, #0x1
000000000000f048	cmp	w21, w22
000000000000f04c	csel	w8, w21, w22, gt
000000000000f050	add	w25, w8, #0x1
000000000000f054	add	x19, sp, #0x90
000000000000f058	add	x0, sp, #0x90
000000000000f05c	add	x2, sp, #0x1f0
000000000000f060	mov	x1, x25
000000000000f064	mov	x3, x22
000000000000f068	bl	_addHighPrecision
000000000000f06c	add	x0, sp, #0x90
000000000000f070	add	x2, sp, #0x2a0
000000000000f074	mov	x1, x25
000000000000f078	str	x20, [sp, #0x28]
000000000000f07c	mov	x3, x20
000000000000f080	bl	_compareHighPrecision
000000000000f084	tbnz	w0, #0x1f, 0xf090
000000000000f088	str	w24, [sp, #0xc]
000000000000f08c	b	0xf1c0
000000000000f090	mov	x9, #0x0
000000000000f094	cmp	w21, #0x1
000000000000f098	mov	w8, #0x1
000000000000f09c	csinc	w8, w8, w21, lt
000000000000f0a0	sub	x10, x29, #0x100
000000000000f0a4	mov	w11, #0xa
000000000000f0a8	ldp	w12, w13, [x10]
000000000000f0ac	madd	x12, x12, x11, x9
000000000000f0b0	mul	x9, x13, x11
000000000000f0b4	add	x13, x9, x12, lsr #32
000000000000f0b8	lsr	x9, x13, #32
000000000000f0bc	stp	w12, w13, [x10], #0x8
000000000000f0c0	subs	x8, x8, #0x1
000000000000f0c4	b.ne	0xf0a8
000000000000f0c8	mov	x9, #0x0
000000000000f0cc	cmp	w22, #0x1
000000000000f0d0	mov	w8, #0x1
000000000000f0d4	csinc	w8, w8, w22, lt
000000000000f0d8	add	x10, sp, #0x1f0
000000000000f0dc	mov	w11, #0xa
000000000000f0e0	ldp	w12, w13, [x10]
000000000000f0e4	madd	x12, x12, x11, x9
000000000000f0e8	mul	x9, x13, x11
000000000000f0ec	add	x13, x9, x12, lsr #32
000000000000f0f0	lsr	x9, x13, #32
000000000000f0f4	stp	w12, w13, [x10], #0x8
000000000000f0f8	subs	x8, x8, #0x1
000000000000f0fc	b.ne	0xf0e0
000000000000f100	mov	x9, #0x0
000000000000f104	cmp	w23, #0x1
000000000000f108	mov	w8, #0x1
000000000000f10c	csinc	w8, w8, w23, lt
000000000000f110	add	x10, sp, #0x140
000000000000f114	mov	w11, #0xa
000000000000f118	ldp	w12, w13, [x10]
000000000000f11c	madd	x12, x12, x11, x9
000000000000f120	mul	x9, x13, x11
000000000000f124	add	x13, x9, x12, lsr #32
000000000000f128	lsr	x9, x13, #32
000000000000f12c	stp	w12, w13, [x10], #0x8
000000000000f130	subs	x8, x8, #0x1
000000000000f134	b.ne	0xf118
000000000000f138	mov	w8, w21
000000000000f13c	sub	x9, x29, #0x100
000000000000f140	add	x10, x8, #0x1
000000000000f144	cmp	x10, #0x2
000000000000f148	b.lt	0xf160
000000000000f14c	ldr	x10, [x9, x8, lsl #3]
000000000000f150	sub	x8, x8, #0x1
000000000000f154	cbz	x10, 0xf140
000000000000f158	add	w21, w8, #0x2
000000000000f15c	b	0xf164
000000000000f160	mov	w21, #0x1
000000000000f164	mov	w8, w22
000000000000f168	add	x9, sp, #0x1f0
000000000000f16c	add	x10, x8, #0x1
000000000000f170	cmp	x10, #0x2
000000000000f174	b.lt	0xf18c
000000000000f178	ldr	x10, [x9, x8, lsl #3]
000000000000f17c	sub	x8, x8, #0x1
000000000000f180	cbz	x10, 0xf16c
000000000000f184	add	w22, w8, #0x2
000000000000f188	b	0xf190
000000000000f18c	mov	w22, #0x1
000000000000f190	mov	w8, w23
000000000000f194	add	x9, sp, #0x140
000000000000f198	str	w27, [sp, #0xc]
000000000000f19c	add	x10, x8, #0x1
000000000000f1a0	cmp	x10, #0x2
000000000000f1a4	b.lt	0xf1bc
000000000000f1a8	ldr	x10, [x9, x8, lsl #3]
000000000000f1ac	sub	x8, x8, #0x1
000000000000f1b0	cbz	x10, 0xf19c
000000000000f1b4	add	w23, w8, #0x2
000000000000f1b8	b	0xf1c0
000000000000f1bc	mov	w23, #0x1
000000000000f1c0	ldr	x27, [sp, #0x28]
000000000000f1c4	add	w24, w27, #0x1
000000000000f1c8	sxtw	x8, w27
000000000000f1cc	str	x8, [sp, #0x48]
000000000000f1d0	sbfiz	x8, x27, #3, #32
000000000000f1d4	stp	xzr, x8, [sp, #0x38]
000000000000f1d8	add	x8, x26, #0x10
000000000000f1dc	stp	x8, x26, [sp, #0x18]
000000000000f1e0	sub	x25, x19, #0x8
000000000000f1e4	add	x20, sp, #0x140
000000000000f1e8	mov	w28, #0xa
000000000000f1ec	ldp	x2, x8, [sp, #0x40]
000000000000f1f0	str	xzr, [x19, x8, lsl #3]
000000000000f1f4	add	x0, sp, #0x90
000000000000f1f8	add	x1, sp, #0x2a0
000000000000f1fc	bl	0x51aac ; symbol stub for: _memcpy
000000000000f200	cmp	w27, #0x1
000000000000f204	b.lt	0xf234
000000000000f208	mov	x8, x24
000000000000f20c	lsl	x9, x8, #3
000000000000f210	sub	w10, w8, #0x2
000000000000f214	sub	x11, x8, #0x1
000000000000f218	ldr	x12, [x25, x9]
000000000000f21c	ldr	x10, [x19, w10, uxtw #3]
000000000000f220	extr	x10, x12, x10, #0x3d
000000000000f224	str	x10, [x25, x9]
000000000000f228	cmp	x8, #0x2
000000000000f22c	mov	x8, x11
000000000000f230	b.gt	0xf20c
000000000000f234	ldr	x8, [sp, #0x90]
000000000000f238	lsl	x8, x8, #3
000000000000f23c	str	x8, [sp, #0x90]
000000000000f240	sub	x0, x29, #0x100
000000000000f244	add	x2, sp, #0x90
000000000000f248	mov	x1, x21
000000000000f24c	mov	x3, x24
000000000000f250	bl	_compareHighPrecision
000000000000f254	tbnz	w0, #0x1f, 0xf274
000000000000f258	sub	x0, x29, #0x100
000000000000f25c	add	x2, sp, #0x90
000000000000f260	mov	x1, x21
000000000000f264	mov	x3, x24
000000000000f268	bl	_subtractHighPrecision
000000000000f26c	mov	w26, #0x8
000000000000f270	b	0xf278
000000000000f274	mov	w26, #0x0
000000000000f278	ldp	x2, x8, [sp, #0x40]
000000000000f27c	str	xzr, [x19, x8, lsl #3]
000000000000f280	add	x0, sp, #0x90
000000000000f284	add	x1, sp, #0x2a0
000000000000f288	bl	0x51aac ; symbol stub for: _memcpy
000000000000f28c	cmp	w27, #0x1
000000000000f290	b.lt	0xf2c0
000000000000f294	mov	x8, x24
000000000000f298	lsl	x9, x8, #3
000000000000f29c	sub	w10, w8, #0x2
000000000000f2a0	sub	x11, x8, #0x1
000000000000f2a4	ldr	x12, [x25, x9]
000000000000f2a8	ldr	x10, [x19, w10, uxtw #3]
000000000000f2ac	extr	x10, x12, x10, #0x3e
000000000000f2b0	str	x10, [x25, x9]
000000000000f2b4	cmp	x8, #0x2
000000000000f2b8	mov	x8, x11
000000000000f2bc	b.gt	0xf298
000000000000f2c0	ldr	x8, [sp, #0x90]
000000000000f2c4	lsl	x8, x8, #2
000000000000f2c8	str	x8, [sp, #0x90]
000000000000f2cc	sub	x0, x29, #0x100
000000000000f2d0	add	x2, sp, #0x90
000000000000f2d4	mov	x1, x21
000000000000f2d8	mov	x3, x24
000000000000f2dc	bl	_compareHighPrecision
000000000000f2e0	tbnz	w0, #0x1f, 0xf2fc
000000000000f2e4	sub	x0, x29, #0x100
000000000000f2e8	add	x2, sp, #0x90
000000000000f2ec	mov	x1, x21
000000000000f2f0	mov	x3, x24
000000000000f2f4	bl	_subtractHighPrecision
000000000000f2f8	orr	w26, w26, #0x4
000000000000f2fc	ldp	x2, x8, [sp, #0x40]
000000000000f300	str	xzr, [x19, x8, lsl #3]
000000000000f304	add	x0, sp, #0x90
000000000000f308	add	x1, sp, #0x2a0
000000000000f30c	bl	0x51aac ; symbol stub for: _memcpy
000000000000f310	cmp	w27, #0x1
000000000000f314	b.lt	0xf344
000000000000f318	mov	x8, x24
000000000000f31c	lsl	x9, x8, #3
000000000000f320	sub	w10, w8, #0x2
000000000000f324	sub	x11, x8, #0x1
000000000000f328	ldr	x12, [x25, x9]
000000000000f32c	ldr	x10, [x19, w10, uxtw #3]
000000000000f330	extr	x10, x12, x10, #0x3f
000000000000f334	str	x10, [x25, x9]
000000000000f338	cmp	x8, #0x2
000000000000f33c	mov	x8, x11
000000000000f340	b.gt	0xf31c
000000000000f344	ldr	x8, [sp, #0x90]
000000000000f348	lsl	x8, x8, #1
000000000000f34c	str	x8, [sp, #0x90]
000000000000f350	sub	x0, x29, #0x100
000000000000f354	add	x2, sp, #0x90
000000000000f358	mov	x1, x21
000000000000f35c	mov	x3, x24
000000000000f360	bl	_compareHighPrecision
000000000000f364	tbnz	w0, #0x1f, 0xf380
000000000000f368	sub	x0, x29, #0x100
000000000000f36c	add	x2, sp, #0x90
000000000000f370	mov	x1, x21
000000000000f374	mov	x3, x24
000000000000f378	bl	_subtractHighPrecision
000000000000f37c	add	w26, w26, #0x2
000000000000f380	ldp	x2, x8, [sp, #0x40]
000000000000f384	str	xzr, [x19, x8, lsl #3]
000000000000f388	add	x0, sp, #0x90
000000000000f38c	add	x1, sp, #0x2a0
000000000000f390	bl	0x51aac ; symbol stub for: _memcpy
000000000000f394	sub	x0, x29, #0x100
000000000000f398	add	x2, sp, #0x90
000000000000f39c	mov	x1, x21
000000000000f3a0	mov	x3, x24
000000000000f3a4	bl	_compareHighPrecision
000000000000f3a8	tbnz	w0, #0x1f, 0xf3c4
000000000000f3ac	sub	x0, x29, #0x100
000000000000f3b0	add	x2, sp, #0x90
000000000000f3b4	mov	x1, x21
000000000000f3b8	mov	x3, x24
000000000000f3bc	bl	_subtractHighPrecision
000000000000f3c0	add	w26, w26, #0x1
000000000000f3c4	str	w26, [sp, #0x34]
000000000000f3c8	sub	x0, x29, #0x100
000000000000f3cc	add	x2, sp, #0x140
000000000000f3d0	mov	x1, x21
000000000000f3d4	mov	x3, x23
000000000000f3d8	bl	_compareHighPrecision
000000000000f3dc	mov	x26, x0
000000000000f3e0	sbfiz	x27, x21, #3, #32
000000000000f3e4	add	x0, x19, x27
000000000000f3e8	mov	w8, #0x16
000000000000f3ec	sub	w8, w8, w21
000000000000f3f0	sbfiz	x1, x8, #3, #32
000000000000f3f4	bl	0x519d4 ; symbol stub for: _bzero
000000000000f3f8	add	x0, sp, #0x90
000000000000f3fc	sub	x1, x29, #0x100
000000000000f400	mov	x2, x27
000000000000f404	bl	0x51aac ; symbol stub for: _memcpy
000000000000f408	cmp	w21, w22
000000000000f40c	csel	w8, w21, w22, gt
000000000000f410	add	w27, w8, #0x1
000000000000f414	add	x0, sp, #0x90
000000000000f418	add	x2, sp, #0x1f0
000000000000f41c	mov	x1, x27
000000000000f420	mov	x3, x22
000000000000f424	bl	_addHighPrecision
000000000000f428	add	x0, sp, #0x90
000000000000f42c	add	x2, sp, #0x2a0
000000000000f430	mov	x1, x27
000000000000f434	ldr	x27, [sp, #0x28]
000000000000f438	mov	x3, x27
000000000000f43c	bl	_compareHighPrecision
000000000000f440	add	w1, w21, #0x1
000000000000f444	cmp	w26, #0x1
000000000000f448	b.lt	0xf5b8
000000000000f44c	tbz	w0, #0x1f, 0xf5b8
000000000000f450	mov	x9, #0x0
000000000000f454	cmp	w1, #0x1
000000000000f458	csinc	w8, w1, wzr, gt
000000000000f45c	sub	x10, x29, #0x100
000000000000f460	ldp	w11, w12, [x10]
000000000000f464	madd	x11, x11, x28, x9
000000000000f468	mul	x9, x12, x28
000000000000f46c	add	x12, x9, x11, lsr #32
000000000000f470	lsr	x9, x12, #32
000000000000f474	stp	w11, w12, [x10], #0x8
000000000000f478	subs	x8, x8, #0x1
000000000000f47c	b.ne	0xf460
000000000000f480	mov	x10, #0x0
000000000000f484	add	w8, w22, #0x1
000000000000f488	cmp	w8, #0x1
000000000000f48c	mov	w14, #0x1
000000000000f490	csinc	w9, w14, w22, le
000000000000f494	add	x11, sp, #0x1f0
000000000000f498	ldr	x15, [sp, #0x20]
000000000000f49c	ldr	w16, [sp, #0x34]
000000000000f4a0	ldp	w12, w13, [x11]
000000000000f4a4	madd	x12, x12, x28, x10
000000000000f4a8	mul	x10, x13, x28
000000000000f4ac	add	x13, x10, x12, lsr #32
000000000000f4b0	lsr	x10, x13, #32
000000000000f4b4	stp	w12, w13, [x11], #0x8
000000000000f4b8	subs	x9, x9, #0x1
000000000000f4bc	b.ne	0xf4a0
000000000000f4c0	mov	x11, #0x0
000000000000f4c4	add	w9, w23, #0x1
000000000000f4c8	cmp	w9, #0x1
000000000000f4cc	csinc	w10, w14, w23, le
000000000000f4d0	add	x12, sp, #0x140
000000000000f4d4	ldp	w13, w14, [x12]
000000000000f4d8	madd	x13, x13, x28, x11
000000000000f4dc	mul	x11, x14, x28
000000000000f4e0	add	x14, x11, x13, lsr #32
000000000000f4e4	lsr	x11, x14, #32
000000000000f4e8	stp	w13, w14, [x12], #0x8
000000000000f4ec	subs	x10, x10, #0x1
000000000000f4f0	b.ne	0xf4d4
000000000000f4f4	cmp	w1, #0x1
000000000000f4f8	csinc	w10, w1, wzr, lt
000000000000f4fc	mov	w14, #-0x1
000000000000f500	add	x11, x14, w1, uxtw
000000000000f504	add	w21, w21, #0x2
000000000000f508	sub	x13, x29, #0x100
000000000000f50c	sub	w21, w21, #0x1
000000000000f510	cmp	w21, #0x2
000000000000f514	b.lt	0xf528
000000000000f518	ldr	x12, [x13, w11, uxtw #3]
000000000000f51c	sub	x11, x11, #0x1
000000000000f520	cbz	x12, 0xf50c
000000000000f524	b	0xf52c
000000000000f528	mov	x21, x10
000000000000f52c	cmp	w8, #0x1
000000000000f530	csinc	w10, w8, wzr, lt
000000000000f534	add	x8, x14, w8, uxtw
000000000000f538	add	w22, w22, #0x2
000000000000f53c	add	x12, sp, #0x1f0
000000000000f540	sub	w22, w22, #0x1
000000000000f544	cmp	w22, #0x2
000000000000f548	b.lt	0xf55c
000000000000f54c	ldr	x11, [x12, w8, uxtw #3]
000000000000f550	sub	x8, x8, #0x1
000000000000f554	cbz	x11, 0xf540
000000000000f558	b	0xf560
000000000000f55c	mov	x22, x10
000000000000f560	cmp	w9, #0x1
000000000000f564	csinc	w8, w9, wzr, lt
000000000000f568	add	x9, x14, w9, uxtw
000000000000f56c	add	w23, w23, #0x2
000000000000f570	sub	w23, w23, #0x1
000000000000f574	cmp	w23, #0x2
000000000000f578	b.lt	0xf58c
000000000000f57c	ldr	x10, [x20, w9, uxtw #3]
000000000000f580	sub	x9, x9, #0x1
000000000000f584	cbz	x10, 0xf570
000000000000f588	b	0xf590
000000000000f58c	mov	x23, x8
000000000000f590	ldr	w8, [x15, #0x8]
000000000000f594	ldr	x9, [sp, #0x38]
000000000000f598	cmp	x9, x8
000000000000f59c	b.hs	0xf6e4
000000000000f5a0	ldr	xzr, [x15]
000000000000f5a4	ldr	x8, [sp, #0x18]
000000000000f5a8	str	w16, [x8, x9, lsl #2]
000000000000f5ac	add	x8, x9, #0x1
000000000000f5b0	str	x8, [sp, #0x38]
000000000000f5b4	b	0xf1ec
000000000000f5b8	cmp	w1, #0x1
000000000000f5bc	b.le	0xf5f8
000000000000f5c0	mov	w8, #-0x2
000000000000f5c4	add	x8, x8, w1, sxtw
000000000000f5c8	sub	x9, x29, #0x100
000000000000f5cc	add	x10, x9, w1, sxtw #3
000000000000f5d0	sub	x10, x10, #0x8
000000000000f5d4	add	x11, x1, #0x1
000000000000f5d8	ldr	x12, [x10]
000000000000f5dc	ldr	x13, [x9, w8, uxtw #3]
000000000000f5e0	extr	x12, x12, x13, #0x3f
000000000000f5e4	str	x12, [x10], #-0x8
000000000000f5e8	sub	x8, x8, #0x1
000000000000f5ec	sub	x11, x11, #0x1
000000000000f5f0	cmp	x11, #0x2
000000000000f5f4	b.gt	0xf5d8
000000000000f5f8	ldur	x8, [x29, #-0x100]
000000000000f5fc	lsl	x8, x8, #1
000000000000f600	stur	x8, [x29, #-0x100]
000000000000f604	ldr	x19, [sp, #0x10]
000000000000f608	ldr	w20, [sp, #0xc]
000000000000f60c	tbz	w0, #0x1f, 0xf628
000000000000f610	cmp	w26, #0x1
000000000000f614	b.ge	0xf628
000000000000f618	ldr	x9, [sp, #0x20]
000000000000f61c	ldr	x10, [sp, #0x38]
000000000000f620	ldr	w11, [sp, #0x34]
000000000000f624	b	0xf664
000000000000f628	cmp	w26, #0x1
000000000000f62c	b.lt	0xf640
000000000000f630	tbnz	w0, #0x1f, 0xf640
000000000000f634	ldr	w11, [sp, #0x34]
000000000000f638	add	w11, w11, #0x1
000000000000f63c	b	0xf65c
000000000000f640	sub	x0, x29, #0x100
000000000000f644	add	x2, sp, #0x2a0
000000000000f648	mov	x3, x27
000000000000f64c	bl	_compareHighPrecision
000000000000f650	mvn	w8, w0
000000000000f654	ldr	w11, [sp, #0x34]
000000000000f658	add	w11, w11, w8, lsr #31
000000000000f65c	ldr	x9, [sp, #0x20]
000000000000f660	ldr	x10, [sp, #0x38]
000000000000f664	ldr	w8, [x9, #0x8]
000000000000f668	cmp	w8, w10
000000000000f66c	b.ls	0xf6e4
000000000000f670	ldr	xzr, [x9]
000000000000f674	ldr	x8, [sp, #0x18]
000000000000f678	str	w11, [x8, w10, uxtw #2]
000000000000f67c	ldr	w9, [sp, #0x58]
000000000000f680	cbz	w9, 0xf6e4
000000000000f684	add	w8, w10, #0x1
000000000000f688	ldr	x10, [sp, #0x50]
000000000000f68c	str	w8, [sp, #0x60]
000000000000f690	cmp	w9, #0x1
000000000000f694	b.eq	0xf6e4
000000000000f698	ldr	x10, [sp, #0x50]
000000000000f69c	str	wzr, [sp, #0x64]
000000000000f6a0	cmp	w9, #0x2
000000000000f6a4	b.ls	0xf6e4
000000000000f6a8	ldr	x9, [sp, #0x50]
000000000000f6ac	str	w20, [sp, #0x68]
000000000000f6b0	stp	w8, wzr, [x19, #0x10]
000000000000f6b4	str	w20, [x19, #0x18]
000000000000f6b8	ldr	x8, [sp, #0x78]
000000000000f6bc	ldr	x9, [sp]
000000000000f6c0	str	x8, [x9, #0x110]
000000000000f6c4	add	sp, sp, #0x400
000000000000f6c8	ldp	x29, x30, [sp, #0x50]
000000000000f6cc	ldp	x20, x19, [sp, #0x40]
000000000000f6d0	ldp	x22, x21, [sp, #0x30]
000000000000f6d4	ldp	x24, x23, [sp, #0x20]
000000000000f6d8	ldp	x26, x25, [sp, #0x10]
000000000000f6dc	ldp	x28, x27, [sp], #0x60
000000000000f6e0	ret
000000000000f6e4	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.native.internal.NumberConverter.longDigitGenerator#internal:
000000000000f6e8	sub	sp, sp, #0x130
000000000000f6ec	stp	x28, x27, [sp, #0xd0]
000000000000f6f0	stp	x26, x25, [sp, #0xe0]
000000000000f6f4	stp	x24, x23, [sp, #0xf0]
000000000000f6f8	stp	x22, x21, [sp, #0x100]
000000000000f6fc	stp	x20, x19, [sp, #0x110]
000000000000f700	stp	x29, x30, [sp, #0x120]
000000000000f704	add	x29, sp, #0x120
000000000000f708	mov	x23, x4
000000000000f70c	mov	x24, x3
000000000000f710	mov	x21, x2
000000000000f714	mov	x25, x1
000000000000f718	mov	x19, x0
000000000000f71c	movi.16b	v0, #0x0
000000000000f720	stp	q0, q0, [sp, #0x60]
000000000000f724	str	xzr, [sp, #0xc0]
000000000000f728	stp	q0, q0, [sp, #0xa0]
000000000000f72c	stp	q0, q0, [sp, #0x80]
000000000000f730	adr	x8, #0x49060
000000000000f734	nop
000000000000f738	orr	x8, x8, #0x3
000000000000f73c	str	x8, [sp, #0x30]
000000000000f740	mov	w8, #0x4
000000000000f744	str	w8, [sp, #0x38]
000000000000f748	stp	q0, q0, [sp, #0x40]
000000000000f74c	adrp	x0, 93 ; 0x6c000
000000000000f750	add	x0, x0, #0xbb0
000000000000f754	ldr	x8, [x0]
000000000000f758	blr	x8
000000000000f75c	ldr	x26, [x0]
000000000000f760	ldr	x8, [x26, #0x110]
000000000000f764	add	x9, sp, #0x60
000000000000f768	str	x9, [x26, #0x110]
000000000000f76c	mov	x9, #0xd00000000
000000000000f770	stp	x8, x9, [sp, #0x68]
000000000000f774	adr	x27, #0x772cf
000000000000f778	nop
000000000000f77c	ldarb	w8, [x27]
000000000000f780	tbz	w8, #0x0, 0xf790
000000000000f784	mov	x20, x5
000000000000f788	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f78c	mov	x5, x20
000000000000f790	eor	w8, w23, #0x1
000000000000f794	orr	w8, w8, w24
000000000000f798	cmp	w8, #0x0
000000000000f79c	mov	w8, #0x1
000000000000f7a0	cinc	w9, w8, eq
000000000000f7a4	cinc	x10, x8, eq
000000000000f7a8	sub	w9, w9, w21
000000000000f7ac	lsl	x9, x8, x9
000000000000f7b0	lsl	x11, x8, x21
000000000000f7b4	cmp	w23, #0x0
000000000000f7b8	mov	w12, #0x2
000000000000f7bc	mov	w13, #0x4
000000000000f7c0	csel	x12, x13, x12, ne
000000000000f7c4	cinc	w13, w8, ne
000000000000f7c8	add	w13, w13, w21
000000000000f7cc	and	w13, w13, #0x3f
000000000000f7d0	tst	w21, #0x80000000
000000000000f7d4	csel	x24, x8, x11, ne
000000000000f7d8	csel	x28, x9, x12, ne
000000000000f7dc	csel	x20, x10, x13, ne
000000000000f7e0	adr	x22, #0x772d0
000000000000f7e4	nop
000000000000f7e8	ldar	x23, [x22]
000000000000f7ec	cmp	x23, #0x2
000000000000f7f0	b.hs	0xf9ec
000000000000f7f4	ldp	x8, x9, [x26, #0x120]
000000000000f7f8	cmp	x8, x9
000000000000f7fc	b.eq	0xf81c
000000000000f800	mov	x10, x9
000000000000f804	ldr	x11, [x10, #-0x10]!
000000000000f808	cmp	x11, x22
000000000000f80c	b.eq	0xf8e8
000000000000f810	mov	x9, x10
000000000000f814	cmp	x10, x8
000000000000f818	b.ne	0xf804
000000000000f81c	add	x8, x26, #0x120
000000000000f820	stp	x8, x25, [sp, #0x20]
000000000000f824	add	x0, x26, #0x138
000000000000f828	mov	w9, #0x1
000000000000f82c	ldaxr	w8, [x0]
000000000000f830	stlxr	w10, w9, [x0]
000000000000f834	cbnz	w10, 0xf82c
000000000000f838	b	0xf848
000000000000f83c	mov	w25, #0x1
000000000000f840	stlxr	w9, x25, [x22]
000000000000f844	cbz	w9, 0xf858
000000000000f848	ldaxr	x23, [x22]
000000000000f84c	cbz	x23, 0xf83c
000000000000f850	mov	w25, #0x0
000000000000f854	clrex
000000000000f858	cmp	x23, #0x1
000000000000f85c	b.eq	0xf848
000000000000f860	cbz	x26, 0xf890
000000000000f864	ldaxr	w9, [x0]
000000000000f868	stlxr	w10, w8, [x0]
000000000000f86c	cbnz	w10, 0xf864
000000000000f870	cbnz	w8, 0xf890
000000000000f874	cmp	w9, #0x1
000000000000f878	b.ne	0xf890
000000000000f87c	ldarb	w8, [x27]
000000000000f880	tbz	w8, #0x0, 0xf890
000000000000f884	str	w5, [sp, #0x18]
000000000000f888	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000f88c	ldr	w5, [sp, #0x18]
000000000000f890	tbz	w25, #0x0, 0xf8dc
000000000000f894	str	w5, [sp, #0x18]
000000000000f898	ldr	x8, [x26, #0x118]
000000000000f89c	add	x0, x8, #0x70
000000000000f8a0	mov	w1, #0x20
000000000000f8a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000f8a8	mov	x23, x0
000000000000f8ac	adr	x8, #0x4a9b4
000000000000f8b0	nop
000000000000f8b4	str	x8, [x23, #0x10]!
000000000000f8b8	stur	xzr, [x23, #-0x8]
000000000000f8bc	str	x23, [sp, #0x78]
000000000000f8c0	ldp	x9, x8, [x26, #0x128]
000000000000f8c4	cmp	x9, x8
000000000000f8c8	b.hs	0xf8f4
000000000000f8cc	stp	x22, x23, [x9]
000000000000f8d0	add	x8, x9, #0x10
000000000000f8d4	str	x8, [x26, #0x128]
000000000000f8d8	b	0xf994
000000000000f8dc	str	x23, [sp, #0x78]
000000000000f8e0	ldr	x25, [sp, #0x28]
000000000000f8e4	b	0xf9ec
000000000000f8e8	ldur	x23, [x9, #-0x8]
000000000000f8ec	str	x23, [sp, #0x78]
000000000000f8f0	b	0xf9ec
000000000000f8f4	ldr	x10, [sp, #0x20]
000000000000f8f8	ldr	x10, [x10]
000000000000f8fc	sub	x9, x9, x10
000000000000f900	asr	x9, x9, #4
000000000000f904	str	x9, [sp, #0x10]
000000000000f908	add	x9, x9, #0x1
000000000000f90c	lsr	x11, x9, #60
000000000000f910	cbnz	x11, 0x100f0
000000000000f914	sub	x8, x8, x10
000000000000f918	asr	x10, x8, #3
000000000000f91c	cmp	x10, x9
000000000000f920	csel	x9, x9, x10, lo
000000000000f924	mov	x10, #0x7ffffffffffffff
000000000000f928	cmp	x10, x8, asr #4
000000000000f92c	mov	x8, #0xfffffffffffffff
000000000000f930	csel	x25, x9, x8, hi
000000000000f934	mov	x0, x25
000000000000f938	mov	w1, #0x10
000000000000f93c	bl	0x519e0 ; symbol stub for: _calloc
000000000000f940	ldr	x8, [sp, #0x10]
000000000000f944	add	x8, x0, x8, lsl #4
000000000000f948	add	x10, x0, x25, lsl #4
000000000000f94c	stp	x22, x23, [x8]
000000000000f950	add	x11, x8, #0x10
000000000000f954	ldp	x1, x9, [x26, #0x120]
000000000000f958	sub	x2, x9, x1
000000000000f95c	sub	x25, x8, x2
000000000000f960	cmp	x2, #0x1
000000000000f964	b.lt	0xf980
000000000000f968	mov	x0, x25
000000000000f96c	stp	x11, x10, [sp, #0x8]
000000000000f970	bl	0x51aac ; symbol stub for: _memcpy
000000000000f974	ldp	x11, x10, [sp, #0x8]
000000000000f978	ldr	x8, [sp, #0x20]
000000000000f97c	ldr	x1, [x8]
000000000000f980	stp	x25, x11, [x26, #0x120]
000000000000f984	str	x10, [x26, #0x130]
000000000000f988	cbz	x1, 0xf994
000000000000f98c	mov	x0, x1
000000000000f990	bl	0x51a64 ; symbol stub for: _free
000000000000f994	mov	x0, x23
000000000000f998	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
000000000000f99c	ldr	x25, [sp, #0x28]
000000000000f9a0	mov	w0, #0x1
000000000000f9a4	mov	w1, #0x28
000000000000f9a8	bl	0x519e0 ; symbol stub for: _calloc
000000000000f9ac	mov	x8, x26
000000000000f9b0	ldr	x9, [x8, #0x18]!
000000000000f9b4	sub	x10, x8, #0x8
000000000000f9b8	stp	x22, x10, [x0, #0x10]
000000000000f9bc	stp	x9, x8, [x0]
000000000000f9c0	str	x0, [x9, #0x8]
000000000000f9c4	str	x0, [x8]
000000000000f9c8	ldr	x9, [x8, #0x10]
000000000000f9cc	add	x9, x9, #0x1
000000000000f9d0	str	x9, [x8, #0x10]
000000000000f9d4	str	x0, [x0, #0x20]
000000000000f9d8	stlr	x23, [x22]
000000000000f9dc	ldr	x9, [x8, #0x110]
000000000000f9e0	sub	x9, x9, #0x10
000000000000f9e4	str	x9, [x8, #0x110]
000000000000f9e8	ldr	w5, [sp, #0x18]
000000000000f9ec	lsl	x25, x25, x20
000000000000f9f0	add	w8, w21, w5
000000000000f9f4	sub	w8, w8, #0x1
000000000000f9f8	ldr	d0, [x23, #0x8]
000000000000f9fc	scvtf	d1, w8
000000000000fa00	fmul	d0, d0, d1
000000000000fa04	nop
000000000000fa08	ldr	d1, 0x52418
000000000000fa0c	fadd	d0, d0, d1
000000000000fa10	frintp	d0, d0
000000000000fa14	fcmp	d0, d0
000000000000fa18	b.vs	0xfea8
000000000000fa1c	mov	x8, #0xffffffc00000
000000000000fa20	movk	x8, #0x41df, lsl #48
000000000000fa24	fmov	d1, x8
000000000000fa28	fcmp	d0, d1
000000000000fa2c	b.ge	0xfa5c
000000000000fa30	mov	x8, #-0x3e20000000000000
000000000000fa34	fmov	d1, x8
000000000000fa38	fcmp	d0, d1
000000000000fa3c	b.ls	0xfb48
000000000000fa40	fcvtzs	w21, d0
000000000000fa44	cmp	w21, #0x1
000000000000fa48	b.lt	0xfc48
000000000000fa4c	ldar	x20, [x22]
000000000000fa50	cmp	x20, #0x2
000000000000fa54	b.lo	0xfa6c
000000000000fa58	b	0xfd40
000000000000fa5c	mov	w21, #0x7fffffff
000000000000fa60	ldar	x20, [x22]
000000000000fa64	cmp	x20, #0x2
000000000000fa68	b.hs	0xfd40
000000000000fa6c	ldp	x8, x9, [x26, #0x120]
000000000000fa70	cmp	x8, x9
000000000000fa74	b.eq	0xfa94
000000000000fa78	mov	x10, x9
000000000000fa7c	ldr	x11, [x10, #-0x10]!
000000000000fa80	cmp	x11, x22
000000000000fa84	b.eq	0xfc3c
000000000000fa88	mov	x9, x10
000000000000fa8c	cmp	x10, x8
000000000000fa90	b.ne	0xfa7c
000000000000fa94	add	x8, x26, #0x120
000000000000fa98	str	x8, [sp, #0x28]
000000000000fa9c	add	x0, x26, #0x138
000000000000faa0	mov	w9, #0x1
000000000000faa4	ldaxr	w8, [x0]
000000000000faa8	stlxr	w10, w9, [x0]
000000000000faac	cbnz	w10, 0xfaa4
000000000000fab0	b	0xfac0
000000000000fab4	mov	w23, #0x1
000000000000fab8	stlxr	w9, x23, [x22]
000000000000fabc	cbz	w9, 0xfad0
000000000000fac0	ldaxr	x20, [x22]
000000000000fac4	cbz	x20, 0xfab4
000000000000fac8	mov	w23, #0x0
000000000000facc	clrex
000000000000fad0	cmp	x20, #0x1
000000000000fad4	b.eq	0xfac0
000000000000fad8	cbz	x26, 0xfb00
000000000000fadc	ldaxr	w9, [x0]
000000000000fae0	stlxr	w10, w8, [x0]
000000000000fae4	cbnz	w10, 0xfadc
000000000000fae8	cbnz	w8, 0xfb00
000000000000faec	cmp	w9, #0x1
000000000000faf0	b.ne	0xfb00
000000000000faf4	ldarb	w8, [x27]
000000000000faf8	tbz	w8, #0x0, 0xfb00
000000000000fafc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000fb00	tbz	w23, #0x0, 0xfc34
000000000000fb04	ldr	x8, [x26, #0x118]
000000000000fb08	add	x0, x8, #0x70
000000000000fb0c	mov	w1, #0x20
000000000000fb10	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000fb14	mov	x20, x0
000000000000fb18	adr	x8, #0x4a748
000000000000fb1c	nop
000000000000fb20	str	x8, [x20, #0x10]!
000000000000fb24	stur	xzr, [x20, #-0x8]
000000000000fb28	str	x20, [sp, #0x80]
000000000000fb2c	ldp	x9, x8, [x26, #0x128]
000000000000fb30	cmp	x9, x8
000000000000fb34	b.hs	0xfc50
000000000000fb38	stp	x22, x20, [x9]
000000000000fb3c	add	x8, x9, #0x10
000000000000fb40	str	x8, [x26, #0x128]
000000000000fb44	b	0xfcf0
000000000000fb48	mov	w21, #-0x80000000
000000000000fb4c	ldar	x20, [x22]
000000000000fb50	cmp	x20, #0x2
000000000000fb54	b.hs	0xfe70
000000000000fb58	ldp	x8, x9, [x26, #0x120]
000000000000fb5c	cmp	x8, x9
000000000000fb60	b.eq	0xfb80
000000000000fb64	mov	x10, x9
000000000000fb68	ldr	x11, [x10, #-0x10]!
000000000000fb6c	cmp	x11, x22
000000000000fb70	b.eq	0xfd74
000000000000fb74	mov	x9, x10
000000000000fb78	cmp	x10, x8
000000000000fb7c	b.ne	0xfb68
000000000000fb80	add	x8, x26, #0x120
000000000000fb84	str	x8, [sp, #0x28]
000000000000fb88	add	x0, x26, #0x138
000000000000fb8c	mov	w9, #0x1
000000000000fb90	ldaxr	w8, [x0]
000000000000fb94	stlxr	w10, w9, [x0]
000000000000fb98	cbnz	w10, 0xfb90
000000000000fb9c	b	0xfbac
000000000000fba0	mov	w23, #0x1
000000000000fba4	stlxr	w9, x23, [x22]
000000000000fba8	cbz	w9, 0xfbbc
000000000000fbac	ldaxr	x20, [x22]
000000000000fbb0	cbz	x20, 0xfba0
000000000000fbb4	mov	w23, #0x0
000000000000fbb8	clrex
000000000000fbbc	cmp	x20, #0x1
000000000000fbc0	b.eq	0xfbac
000000000000fbc4	cbz	x26, 0xfbec
000000000000fbc8	ldaxr	w9, [x0]
000000000000fbcc	stlxr	w10, w8, [x0]
000000000000fbd0	cbnz	w10, 0xfbc8
000000000000fbd4	cbnz	w8, 0xfbec
000000000000fbd8	cmp	w9, #0x1
000000000000fbdc	b.ne	0xfbec
000000000000fbe0	ldarb	w8, [x27]
000000000000fbe4	tbz	w8, #0x0, 0xfbec
000000000000fbe8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000fbec	tbz	w23, #0x0, 0xfd6c
000000000000fbf0	ldr	x8, [x26, #0x118]
000000000000fbf4	add	x0, x8, #0x70
000000000000fbf8	mov	w1, #0x20
000000000000fbfc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000fc00	mov	x20, x0
000000000000fc04	adr	x8, #0x4a65c
000000000000fc08	nop
000000000000fc0c	str	x8, [x20, #0x10]!
000000000000fc10	stur	xzr, [x20, #-0x8]
000000000000fc14	str	x20, [sp, #0x88]
000000000000fc18	ldp	x9, x8, [x26, #0x128]
000000000000fc1c	cmp	x9, x8
000000000000fc20	b.hs	0xfd80
000000000000fc24	stp	x22, x20, [x9]
000000000000fc28	add	x8, x9, #0x10
000000000000fc2c	str	x8, [x26, #0x128]
000000000000fc30	b	0xfe20
000000000000fc34	str	x20, [sp, #0x80]
000000000000fc38	b	0xfd40
000000000000fc3c	ldur	x20, [x9, #-0x8]
000000000000fc40	str	x20, [sp, #0x80]
000000000000fc44	b	0xfd40
000000000000fc48	tbz	w21, #0x1f, 0xfe94
000000000000fc4c	b	0xfb4c
000000000000fc50	ldr	x10, [sp, #0x28]
000000000000fc54	ldr	x10, [x10]
000000000000fc58	sub	x9, x9, x10
000000000000fc5c	asr	x9, x9, #4
000000000000fc60	str	x9, [sp, #0x20]
000000000000fc64	add	x9, x9, #0x1
000000000000fc68	lsr	x11, x9, #60
000000000000fc6c	cbnz	x11, 0x100f8
000000000000fc70	sub	x8, x8, x10
000000000000fc74	asr	x10, x8, #3
000000000000fc78	cmp	x10, x9
000000000000fc7c	csel	x9, x9, x10, lo
000000000000fc80	mov	x10, #0x7ffffffffffffff
000000000000fc84	cmp	x10, x8, asr #4
000000000000fc88	mov	x8, #0xfffffffffffffff
000000000000fc8c	csel	x23, x9, x8, hi
000000000000fc90	mov	x0, x23
000000000000fc94	mov	w1, #0x10
000000000000fc98	bl	0x519e0 ; symbol stub for: _calloc
000000000000fc9c	ldr	x8, [sp, #0x20]
000000000000fca0	add	x8, x0, x8, lsl #4
000000000000fca4	add	x10, x0, x23, lsl #4
000000000000fca8	stp	x22, x20, [x8]
000000000000fcac	add	x11, x8, #0x10
000000000000fcb0	ldp	x1, x9, [x26, #0x120]
000000000000fcb4	sub	x2, x9, x1
000000000000fcb8	sub	x23, x8, x2
000000000000fcbc	cmp	x2, #0x1
000000000000fcc0	b.lt	0xfcdc
000000000000fcc4	mov	x0, x23
000000000000fcc8	stp	x11, x10, [sp, #0x18]
000000000000fccc	bl	0x51aac ; symbol stub for: _memcpy
000000000000fcd0	ldp	x11, x10, [sp, #0x18]
000000000000fcd4	ldr	x8, [sp, #0x28]
000000000000fcd8	ldr	x1, [x8]
000000000000fcdc	stp	x23, x11, [x26, #0x120]
000000000000fce0	str	x10, [x26, #0x130]
000000000000fce4	cbz	x1, 0xfcf0
000000000000fce8	mov	x0, x1
000000000000fcec	bl	0x51a64 ; symbol stub for: _free
000000000000fcf0	mov	x0, x20
000000000000fcf4	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
000000000000fcf8	mov	w0, #0x1
000000000000fcfc	mov	w1, #0x28
000000000000fd00	bl	0x519e0 ; symbol stub for: _calloc
000000000000fd04	mov	x8, x26
000000000000fd08	ldr	x9, [x8, #0x18]!
000000000000fd0c	sub	x10, x8, #0x8
000000000000fd10	stp	x22, x10, [x0, #0x10]
000000000000fd14	stp	x9, x8, [x0]
000000000000fd18	str	x0, [x9, #0x8]
000000000000fd1c	str	x0, [x8]
000000000000fd20	ldr	x9, [x8, #0x10]
000000000000fd24	add	x9, x9, #0x1
000000000000fd28	str	x9, [x8, #0x10]
000000000000fd2c	str	x0, [x0, #0x20]
000000000000fd30	stlr	x20, [x22]
000000000000fd34	ldr	x9, [x8, #0x110]
000000000000fd38	sub	x9, x9, #0x10
000000000000fd3c	str	x9, [x8, #0x110]
000000000000fd40	ldr	x8, [x20, #0x10]
000000000000fd44	ldr	w9, [x8, #0x8]
000000000000fd48	cmp	w9, w21
000000000000fd4c	b.ls	0x100ec
000000000000fd50	add	x8, x8, w21, sxtw #3
000000000000fd54	ldr	x8, [x8, #0x10]
000000000000fd58	mul	x28, x28, x8
000000000000fd5c	add	x8, x25, x24
000000000000fd60	cmp	x8, x28
000000000000fd64	b.gt	0xfea0
000000000000fd68	b	0xfeb8
000000000000fd6c	str	x20, [sp, #0x88]
000000000000fd70	b	0xfe70
000000000000fd74	ldur	x20, [x9, #-0x8]
000000000000fd78	str	x20, [sp, #0x88]
000000000000fd7c	b	0xfe70
000000000000fd80	ldr	x10, [sp, #0x28]
000000000000fd84	ldr	x10, [x10]
000000000000fd88	sub	x9, x9, x10
000000000000fd8c	asr	x9, x9, #4
000000000000fd90	str	x9, [sp, #0x20]
000000000000fd94	add	x9, x9, #0x1
000000000000fd98	lsr	x11, x9, #60
000000000000fd9c	cbnz	x11, 0x100f8
000000000000fda0	sub	x8, x8, x10
000000000000fda4	asr	x10, x8, #3
000000000000fda8	cmp	x10, x9
000000000000fdac	csel	x9, x9, x10, lo
000000000000fdb0	mov	x10, #0x7ffffffffffffff
000000000000fdb4	cmp	x10, x8, asr #4
000000000000fdb8	mov	x8, #0xfffffffffffffff
000000000000fdbc	csel	x23, x9, x8, hi
000000000000fdc0	mov	x0, x23
000000000000fdc4	mov	w1, #0x10
000000000000fdc8	bl	0x519e0 ; symbol stub for: _calloc
000000000000fdcc	ldr	x8, [sp, #0x20]
000000000000fdd0	add	x8, x0, x8, lsl #4
000000000000fdd4	add	x10, x0, x23, lsl #4
000000000000fdd8	stp	x22, x20, [x8]
000000000000fddc	add	x11, x8, #0x10
000000000000fde0	ldp	x1, x9, [x26, #0x120]
000000000000fde4	sub	x2, x9, x1
000000000000fde8	sub	x23, x8, x2
000000000000fdec	cmp	x2, #0x1
000000000000fdf0	b.lt	0xfe0c
000000000000fdf4	mov	x0, x23
000000000000fdf8	stp	x11, x10, [sp, #0x18]
000000000000fdfc	bl	0x51aac ; symbol stub for: _memcpy
000000000000fe00	ldp	x11, x10, [sp, #0x18]
000000000000fe04	ldr	x8, [sp, #0x28]
000000000000fe08	ldr	x1, [x8]
000000000000fe0c	stp	x23, x11, [x26, #0x120]
000000000000fe10	str	x10, [x26, #0x130]
000000000000fe14	cbz	x1, 0xfe20
000000000000fe18	mov	x0, x1
000000000000fe1c	bl	0x51a64 ; symbol stub for: _free
000000000000fe20	mov	x0, x20
000000000000fe24	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
000000000000fe28	mov	w0, #0x1
000000000000fe2c	mov	w1, #0x28
000000000000fe30	bl	0x519e0 ; symbol stub for: _calloc
000000000000fe34	mov	x8, x26
000000000000fe38	ldr	x9, [x8, #0x18]!
000000000000fe3c	sub	x10, x8, #0x8
000000000000fe40	stp	x22, x10, [x0, #0x10]
000000000000fe44	stp	x9, x8, [x0]
000000000000fe48	str	x0, [x9, #0x8]
000000000000fe4c	str	x0, [x8]
000000000000fe50	ldr	x9, [x8, #0x10]
000000000000fe54	add	x9, x9, #0x1
000000000000fe58	str	x9, [x8, #0x10]
000000000000fe5c	str	x0, [x0, #0x20]
000000000000fe60	stlr	x20, [x22]
000000000000fe64	ldr	x9, [x8, #0x110]
000000000000fe68	sub	x9, x9, #0x10
000000000000fe6c	str	x9, [x8, #0x110]
000000000000fe70	ldr	x8, [x20, #0x10]
000000000000fe74	neg	w9, w21
000000000000fe78	ldr	w10, [x8, #0x8]
000000000000fe7c	cmp	w10, w9
000000000000fe80	b.ls	0x100ec
000000000000fe84	add	x8, x8, w9, sxtw #3
000000000000fe88	ldr	x8, [x8, #0x10]
000000000000fe8c	mul	x25, x25, x8
000000000000fe90	mul	x24, x24, x8
000000000000fe94	add	x8, x25, x24
000000000000fe98	cmp	x8, x28
000000000000fe9c	b.le	0xfeb8
000000000000fea0	str	w21, [x19, #0x18]
000000000000fea4	b	0xfed0
000000000000fea8	mov	w21, #0x0
000000000000feac	add	x8, x25, x24
000000000000feb0	cmp	x8, x28
000000000000feb4	b.gt	0xfea0
000000000000feb8	sub	w8, w21, #0x1
000000000000febc	str	w8, [x19, #0x18]
000000000000fec0	add	x8, x25, x25, lsl #2
000000000000fec4	lsl	x25, x8, #1
000000000000fec8	add	x8, x24, x24, lsl #2
000000000000fecc	lsl	x24, x8, #1
000000000000fed0	str	xzr, [x19, #0x10]
000000000000fed4	lsl	x8, x28, #1
000000000000fed8	lsl	x9, x28, #2
000000000000fedc	lsl	x10, x28, #3
000000000000fee0	add	x11, sp, #0x30
000000000000fee4	stp	x11, x11, [sp, #0x90]
000000000000fee8	stp	x11, x11, [sp, #0xa0]
000000000000feec	ldr	x12, [sp, #0x30]
000000000000fef0	stp	x28, x8, [sp, #0x40]
000000000000fef4	ldr	x12, [sp, #0x30]
000000000000fef8	stp	x11, x11, [sp, #0xb0]
000000000000fefc	ldr	x8, [sp, #0x30]
000000000000ff00	stp	x9, x10, [sp, #0x50]
000000000000ff04	ldr	x8, [sp, #0x30]
000000000000ff08	str	x11, [sp, #0xc0]
000000000000ff0c	ldarb	w8, [x27]
000000000000ff10	tbnz	w8, #0x0, 0xff2c
000000000000ff14	ldarb	w8, [x27]
000000000000ff18	tbnz	w8, #0x0, 0xff38
000000000000ff1c	ldr	w8, [sp, #0x38]
000000000000ff20	cmp	w8, #0x3
000000000000ff24	b.hi	0xff48
000000000000ff28	b	0x100ec
000000000000ff2c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ff30	ldarb	w8, [x27]
000000000000ff34	tbz	w8, #0x0, 0xff1c
000000000000ff38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ff3c	ldr	w8, [sp, #0x38]
000000000000ff40	cmp	w8, #0x3
000000000000ff44	b.ls	0x100ec
000000000000ff48	ldr	x8, [sp, #0x58]
000000000000ff4c	sub	x21, x25, x8
000000000000ff50	cmp	x21, #0x0
000000000000ff54	csel	x20, x21, x25, ge
000000000000ff58	ldarb	w8, [x27]
000000000000ff5c	tbz	w8, #0x0, 0xff64
000000000000ff60	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ff64	ldr	w8, [sp, #0x38]
000000000000ff68	cmp	w8, #0x3
000000000000ff6c	b.lo	0x100ec
000000000000ff70	lsr	x8, x21, #60
000000000000ff74	mvn	w8, w8
000000000000ff78	and	w8, w8, #0x8
000000000000ff7c	ldr	x9, [sp, #0x50]
000000000000ff80	sub	x9, x20, x9
000000000000ff84	orr	w10, w8, #0x4
000000000000ff88	cmp	x9, #0x0
000000000000ff8c	csel	w21, w10, w8, ge
000000000000ff90	csel	x20, x9, x20, ge
000000000000ff94	ldarb	w8, [x27]
000000000000ff98	tbz	w8, #0x0, 0xffa0
000000000000ff9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ffa0	ldr	w8, [sp, #0x38]
000000000000ffa4	cmp	w8, #0x2
000000000000ffa8	b.lo	0x100ec
000000000000ffac	ldr	x8, [sp, #0x48]
000000000000ffb0	sub	x8, x20, x8
000000000000ffb4	orr	w9, w21, #0x2
000000000000ffb8	cmp	x8, #0x0
000000000000ffbc	csel	w21, w9, w21, ge
000000000000ffc0	csel	x20, x8, x20, ge
000000000000ffc4	ldarb	w8, [x27]
000000000000ffc8	tbz	w8, #0x0, 0xffd0
000000000000ffcc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ffd0	ldr	w8, [sp, #0x38]
000000000000ffd4	cbz	w8, 0x100ec
000000000000ffd8	ldr	x8, [sp, #0x40]
000000000000ffdc	sub	x9, x20, x8
000000000000ffe0	lsr	x8, x9, #63
000000000000ffe4	orr	w8, w21, w8
000000000000ffe8	eor	w8, w8, #0x1
000000000000ffec	cmp	x9, #0x0
000000000000fff0	csel	x11, x9, x20, ge
000000000000fff4	add	x12, x11, x24
000000000000fff8	cmp	x11, x24
000000000000fffc	b.lt	0x10050
0000000000010000	ldr	x9, [x19, #0x8]
0000000000010004	ldr	w10, [x19, #0x10]
0000000000010008	add	w13, w10, #0x1
000000000001000c	str	w13, [x19, #0x10]
0000000000010010	ldr	w13, [x9, #0x8]
0000000000010014	cmp	x12, x28
0000000000010018	b.gt	0x10080
000000000001001c	cmp	w13, w10
0000000000010020	b.ls	0x100ec
0000000000010024	sxtw	x10, w10
0000000000010028	add	x12, x24, x24, lsl #2
000000000001002c	lsl	x24, x12, #1
0000000000010030	add	x11, x11, x11, lsl #2
0000000000010034	ldr	xzr, [x9]
0000000000010038	add	x9, x9, x10, lsl #2
000000000001003c	str	w8, [x9, #0x10]
0000000000010040	lsl	x25, x11, #1
0000000000010044	ldarb	w8, [x27]
0000000000010048	tbnz	w8, #0x0, 0xff2c
000000000001004c	b	0xff14
0000000000010050	cmp	x12, x28
0000000000010054	b.le	0x1008c
0000000000010058	ldr	x9, [x19, #0x8]
000000000001005c	ldr	w10, [x19, #0x10]
0000000000010060	add	w12, w10, #0x1
0000000000010064	str	w12, [x19, #0x10]
0000000000010068	ldr	w12, [x9, #0x8]
000000000001006c	cmp	x28, x11, lsl #1
0000000000010070	b.le	0x100ac
0000000000010074	cmp	w12, w10
0000000000010078	b.hi	0x100b8
000000000001007c	b	0x100ec
0000000000010080	cmp	w13, w10
0000000000010084	b.hi	0x100b4
0000000000010088	b	0x100ec
000000000001008c	ldr	x9, [x19, #0x8]
0000000000010090	ldr	w10, [x19, #0x10]
0000000000010094	add	w11, w10, #0x1
0000000000010098	str	w11, [x19, #0x10]
000000000001009c	ldr	w11, [x9, #0x8]
00000000000100a0	cmp	w11, w10
00000000000100a4	b.hi	0x100b8
00000000000100a8	b	0x100ec
00000000000100ac	cmp	w12, w10
00000000000100b0	b.ls	0x100ec
00000000000100b4	add	w8, w8, #0x1
00000000000100b8	ldr	xzr, [x9]
00000000000100bc	add	x9, x9, w10, sxtw #2
00000000000100c0	str	w8, [x9, #0x10]
00000000000100c4	ldr	x8, [sp, #0x68]
00000000000100c8	str	x8, [x26, #0x110]
00000000000100cc	ldp	x29, x30, [sp, #0x120]
00000000000100d0	ldp	x20, x19, [sp, #0x110]
00000000000100d4	ldp	x22, x21, [sp, #0x100]
00000000000100d8	ldp	x24, x23, [sp, #0xf0]
00000000000100dc	ldp	x26, x25, [sp, #0xe0]
00000000000100e0	ldp	x28, x27, [sp, #0xd0]
00000000000100e4	add	sp, sp, #0x130
00000000000100e8	ret
00000000000100ec	bl	_ThrowArrayIndexOutOfBoundsException
00000000000100f0	ldr	x0, [sp, #0x20]
00000000000100f4	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000100f8	ldr	x0, [sp, #0x28]
00000000000100fc	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000010100	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000010104	str	xzr, [sp, #0x88]
0000000000010108	stlr	xzr, [x22]
000000000001010c	ldr	x8, [x26, #0x128]
0000000000010110	sub	x8, x8, #0x10
0000000000010114	str	x8, [x26, #0x128]
0000000000010118	bl	0x51968 ; symbol stub for: ___cxa_rethrow
000000000001011c	b	0x10164
0000000000010120	b	0x10168
0000000000010124	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000010128	str	xzr, [sp, #0x80]
000000000001012c	stlr	xzr, [x22]
0000000000010130	ldr	x8, [x26, #0x128]
0000000000010134	sub	x8, x8, #0x10
0000000000010138	str	x8, [x26, #0x128]
000000000001013c	bl	0x51968 ; symbol stub for: ___cxa_rethrow
0000000000010140	b	0x10164
0000000000010144	b	0x10168
0000000000010148	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000001014c	str	xzr, [sp, #0x78]
0000000000010150	stlr	xzr, [x22]
0000000000010154	ldr	x8, [x26, #0x128]
0000000000010158	sub	x8, x8, #0x10
000000000001015c	str	x8, [x26, #0x128]
0000000000010160	bl	0x51968 ; symbol stub for: ___cxa_rethrow
0000000000010164	brk	#0x1
0000000000010168	mov	x19, x0
000000000001016c	bl	0x51944 ; symbol stub for: ___cxa_end_catch
0000000000010170	mov	x0, x19
0000000000010174	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}:
0000000000010178	sub	sp, sp, #0x60
000000000001017c	stp	x24, x23, [sp, #0x20]
0000000000010180	stp	x22, x21, [sp, #0x30]
0000000000010184	stp	x20, x19, [sp, #0x40]
0000000000010188	stp	x29, x30, [sp, #0x50]
000000000001018c	add	x29, sp, #0x50
0000000000010190	mov	x19, x0
0000000000010194	movi.16b	v0, #0x0
0000000000010198	stp	q0, q0, [sp]
000000000001019c	adrp	x0, 92 ; 0x6c000
00000000000101a0	add	x0, x0, #0xbb0
00000000000101a4	ldr	x8, [x0]
00000000000101a8	blr	x8
00000000000101ac	ldr	x20, [x0]
00000000000101b0	ldr	x8, [x20, #0x110]
00000000000101b4	mov	x9, sp
00000000000101b8	str	x9, [x20, #0x110]
00000000000101bc	mov	x9, #0x400000000
00000000000101c0	stp	x8, x9, [sp, #0x8]
00000000000101c4	adr	x21, #0x7687f
00000000000101c8	nop
00000000000101cc	ldarb	w8, [x21]
00000000000101d0	tbz	w8, #0x0, 0x101d8
00000000000101d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000101d8	mov	x8, #0x79fe
00000000000101dc	movk	x8, #0x509f, lsl #16
00000000000101e0	movk	x8, #0x4413, lsl #32
00000000000101e4	movk	x8, #0x3fd3, lsl #48
00000000000101e8	str	x8, [x19, #0x8]
00000000000101ec	ldr	x8, [x20, #0x118]
00000000000101f0	add	x0, x8, #0x70
00000000000101f4	mov	w1, #0xb8
00000000000101f8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000101fc	str	xzr, [x0, #0x18]
0000000000010200	str	xzr, [x0, #0x8]
0000000000010204	adr	x8, #0x4858c
0000000000010208	nop
000000000001020c	mov	x9, x0
0000000000010210	str	x8, [x9, #0x10]!
0000000000010214	mov	w8, #0x14
0000000000010218	str	w8, [x0, #0x18]
000000000001021c	str	x9, [sp, #0x18]
0000000000010220	str	x9, [x19, #0x10]
0000000000010224	cbz	w8, 0x102ac
0000000000010228	ldr	xzr, [x0, #0x10]
000000000001022c	mov	w8, #0x1
0000000000010230	str	x8, [x0, #0x20]
0000000000010234	ldr	x8, [x19, #0x10]
0000000000010238	ldr	w8, [x8, #0x8]
000000000001023c	cmp	w8, #0x2
0000000000010240	b.lt	0x1028c
0000000000010244	mov	x22, #0x0
0000000000010248	sub	x23, x8, #0x1
000000000001024c	ldarb	w8, [x21]
0000000000010250	tbz	w8, #0x0, 0x10258
0000000000010254	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010258	ldr	x8, [x19, #0x10]
000000000001025c	ldr	w9, [x8, #0x8]
0000000000010260	cmp	x22, x9
0000000000010264	b.hs	0x102ac
0000000000010268	add	x9, x8, x22, lsl #3
000000000001026c	ldr	x10, [x9, #0x10]
0000000000010270	add	x10, x10, x10, lsl #2
0000000000010274	lsl	x10, x10, #1
0000000000010278	ldr	xzr, [x8]
000000000001027c	str	x10, [x9, #0x18]
0000000000010280	add	x22, x22, #0x1
0000000000010284	cmp	x23, x22
0000000000010288	b.ne	0x1024c
000000000001028c	ldr	x8, [sp, #0x8]
0000000000010290	str	x8, [x20, #0x110]
0000000000010294	ldp	x29, x30, [sp, #0x50]
0000000000010298	ldp	x20, x19, [sp, #0x40]
000000000001029c	ldp	x22, x21, [sp, #0x30]
00000000000102a0	ldp	x24, x23, [sp, #0x20]
00000000000102a4	add	sp, sp, #0x60
00000000000102a8	ret
00000000000102ac	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.native.internal.NumberConverter.Companion.<get-converter>#internal:
00000000000102b0	sub	sp, sp, #0x50
00000000000102b4	stp	x22, x21, [sp, #0x20]
00000000000102b8	stp	x20, x19, [sp, #0x30]
00000000000102bc	stp	x29, x30, [sp, #0x40]
00000000000102c0	add	x29, sp, #0x40
00000000000102c4	mov	x19, x0
00000000000102c8	adr	x8, #0x7677b
00000000000102cc	nop
00000000000102d0	ldarb	w8, [x8]
00000000000102d4	tbz	w8, #0x0, 0x102dc
00000000000102d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000102dc	adrp	x0, 92 ; 0x6c000
00000000000102e0	add	x0, x0, #0xbb0
00000000000102e4	ldr	x8, [x0]
00000000000102e8	blr	x8
00000000000102ec	mov	x20, x0
00000000000102f0	ldr	x8, [x0]
00000000000102f4	ldr	x8, [x8, #0x118]
00000000000102f8	add	x0, x8, #0x70
00000000000102fc	mov	w1, #0x28
0000000000010300	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000010304	mov	x21, x0
0000000000010308	adr	x8, #0x49ec8
000000000001030c	nop
0000000000010310	str	x8, [x21, #0x10]!
0000000000010314	stur	xzr, [x21, #-0x8]
0000000000010318	str	x21, [x19]
000000000001031c	ldr	x8, [x20]
0000000000010320	mov	x9, sp
0000000000010324	ldp	x10, x11, [x8, #0x110]
0000000000010328	str	x9, [x8, #0x110]
000000000001032c	movi.16b	v0, #0x0
0000000000010330	stp	q0, q0, [sp]
0000000000010334	mov	x8, #0x400000000
0000000000010338	stp	x10, x8, [sp, #0x8]
000000000001033c	add	x0, x11, #0x70
0000000000010340	mov	w1, #0x118
0000000000010344	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000010348	str	xzr, [x0, #0x10]!
000000000001034c	adr	x8, #0x483b4
0000000000010350	nop
0000000000010354	stp	xzr, x8, [x0, #-0x8]
0000000000010358	str	xzr, [x0, #0x8]
000000000001035c	mov	w8, #0x40
0000000000010360	str	w8, [x0, #0x8]
0000000000010364	str	x0, [sp, #0x18]
0000000000010368	str	x0, [x21, #0x8]
000000000001036c	ldr	x8, [x20]
0000000000010370	ldr	x9, [sp, #0x8]
0000000000010374	str	x9, [x8, #0x110]
0000000000010378	str	x21, [x19]
000000000001037c	mov	x0, x21
0000000000010380	ldp	x29, x30, [sp, #0x40]
0000000000010384	ldp	x20, x19, [sp, #0x30]
0000000000010388	ldp	x22, x21, [sp, #0x20]
000000000001038c	add	sp, sp, #0x50
0000000000010390	ret
_Kotlin_Collection_getSize:
0000000000010394	sub	sp, sp, #0x50
0000000000010398	stp	x22, x21, [sp, #0x20]
000000000001039c	stp	x20, x19, [sp, #0x30]
00000000000103a0	stp	x29, x30, [sp, #0x40]
00000000000103a4	add	x29, sp, #0x40
00000000000103a8	mov	x20, x0
00000000000103ac	str	xzr, [sp, #0x8]
00000000000103b0	adrp	x19, 92 ; 0x6c000
00000000000103b4	add	x19, x19, #0xbb0
00000000000103b8	ldr	x21, [x19]
00000000000103bc	mov	x0, x19
00000000000103c0	blr	x21
00000000000103c4	ldr	x8, [x0]
00000000000103c8	ldr	x9, [x8, #0x110]
00000000000103cc	add	x10, sp, #0x8
00000000000103d0	str	x10, [x8, #0x110]
00000000000103d4	mov	x8, #0x300000000
00000000000103d8	stp	x9, x8, [sp, #0x10]
00000000000103dc	adr	x8, #0x76667
00000000000103e0	nop
00000000000103e4	ldarb	w8, [x8]
00000000000103e8	tbz	w8, #0x0, 0x103f0
00000000000103ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000103f0	ldr	x8, [x20]
00000000000103f4	and	x8, x8, #0xfffffffffffffffc
00000000000103f8	ldr	x8, [x8]
00000000000103fc	ldr	w9, [x8, #0x3c]
0000000000010400	ldr	x8, [x8, #0x40]
0000000000010404	tbnz	w9, #0x1f, 0x10414
0000000000010408	mov	w10, #0x12
000000000001040c	and	x9, x9, x10
0000000000010410	b	0x10498
0000000000010414	neg	w10, w9
0000000000010418	mvn	w9, w9
000000000001041c	cmp	w10, #0x9
0000000000010420	b.ge	0x10458
0000000000010424	cmp	w10, #0x2
0000000000010428	b.lt	0x1048c
000000000001042c	mov	x10, #0x0
0000000000010430	mov	x11, x8
0000000000010434	ldr	w12, [x11]
0000000000010438	cmp	w12, #0x11
000000000001043c	b.gt	0x10494
0000000000010440	add	x10, x10, #0x1
0000000000010444	add	x11, x11, #0x10
0000000000010448	cmp	x9, x10
000000000001044c	b.ne	0x10434
0000000000010450	mov	x10, x9
0000000000010454	b	0x10494
0000000000010458	mov	w10, #0x0
000000000001045c	add	w11, w9, w10
0000000000010460	cmp	w11, #0x0
0000000000010464	cinc	w11, w11, lt
0000000000010468	asr	w11, w11, #1
000000000001046c	sbfiz	x12, x11, #4, #32
0000000000010470	ldr	w12, [x8, x12]
0000000000010474	cmp	w12, #0x12
0000000000010478	csinc	w10, w10, w11, ge
000000000001047c	csel	w9, w9, w11, lt
0000000000010480	cmp	w10, w9
0000000000010484	b.lt	0x1045c
0000000000010488	b	0x10494
000000000001048c	mov	w10, #0x0
0000000000010490	b	0x10494
0000000000010494	sxtw	x9, w10
0000000000010498	add	x8, x8, x9, lsl #4
000000000001049c	ldr	x8, [x8, #0x8]
00000000000104a0	ldr	x8, [x8]
00000000000104a4	mov	x0, x20
00000000000104a8	blr	x8
00000000000104ac	mov	x1, x0
00000000000104b0	mov	x0, x19
00000000000104b4	blr	x21
00000000000104b8	ldr	x8, [x0]
00000000000104bc	ldr	x9, [sp, #0x10]
00000000000104c0	str	x9, [x8, #0x110]
00000000000104c4	mov	x0, x1
00000000000104c8	ldp	x29, x30, [sp, #0x40]
00000000000104cc	ldp	x20, x19, [sp, #0x30]
00000000000104d0	ldp	x22, x21, [sp, #0x20]
00000000000104d4	add	sp, sp, #0x50
00000000000104d8	ret
00000000000104dc	mov	x1, x0
00000000000104e0	mov	x0, x19
00000000000104e4	blr	x21
00000000000104e8	ldr	x8, [x0]
00000000000104ec	ldr	x9, [sp, #0x10]
00000000000104f0	str	x9, [x8, #0x110]
00000000000104f4	mov	x0, x1
00000000000104f8	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_List_get:
00000000000104fc	sub	sp, sp, #0x60
0000000000010500	stp	x24, x23, [sp, #0x20]
0000000000010504	stp	x22, x21, [sp, #0x30]
0000000000010508	stp	x20, x19, [sp, #0x40]
000000000001050c	stp	x29, x30, [sp, #0x50]
0000000000010510	add	x29, sp, #0x50
0000000000010514	mov	x19, x2
0000000000010518	mov	x21, x1
000000000001051c	mov	x22, x0
0000000000010520	str	xzr, [sp, #0x8]
0000000000010524	adrp	x20, 92 ; 0x6c000
0000000000010528	add	x20, x20, #0xbb0
000000000001052c	ldr	x23, [x20]
0000000000010530	mov	x0, x20
0000000000010534	blr	x23
0000000000010538	ldr	x8, [x0]
000000000001053c	ldr	x9, [x8, #0x110]
0000000000010540	add	x10, sp, #0x8
0000000000010544	str	x10, [x8, #0x110]
0000000000010548	mov	x8, #0x300000000
000000000001054c	stp	x9, x8, [sp, #0x10]
0000000000010550	adr	x8, #0x764f3
0000000000010554	nop
0000000000010558	ldarb	w8, [x8]
000000000001055c	tbz	w8, #0x0, 0x10564
0000000000010560	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010564	ldr	x8, [x22]
0000000000010568	and	x8, x8, #0xfffffffffffffffc
000000000001056c	ldr	x8, [x8]
0000000000010570	ldr	w9, [x8, #0x3c]
0000000000010574	ldr	x8, [x8, #0x40]
0000000000010578	tbnz	w9, #0x1f, 0x10588
000000000001057c	mov	w10, #0x2b
0000000000010580	and	x9, x9, x10
0000000000010584	b	0x1060c
0000000000010588	neg	w10, w9
000000000001058c	mvn	w9, w9
0000000000010590	cmp	w10, #0x9
0000000000010594	b.ge	0x105cc
0000000000010598	cmp	w10, #0x2
000000000001059c	b.lt	0x10600
00000000000105a0	mov	x10, #0x0
00000000000105a4	mov	x11, x8
00000000000105a8	ldr	w12, [x11]
00000000000105ac	cmp	w12, #0x2a
00000000000105b0	b.gt	0x10608
00000000000105b4	add	x10, x10, #0x1
00000000000105b8	add	x11, x11, #0x10
00000000000105bc	cmp	x9, x10
00000000000105c0	b.ne	0x105a8
00000000000105c4	mov	x10, x9
00000000000105c8	b	0x10608
00000000000105cc	mov	w10, #0x0
00000000000105d0	add	w11, w9, w10
00000000000105d4	cmp	w11, #0x0
00000000000105d8	cinc	w11, w11, lt
00000000000105dc	asr	w11, w11, #1
00000000000105e0	sbfiz	x12, x11, #4, #32
00000000000105e4	ldr	w12, [x8, x12]
00000000000105e8	cmp	w12, #0x2b
00000000000105ec	csinc	w10, w10, w11, ge
00000000000105f0	csel	w9, w9, w11, lt
00000000000105f4	cmp	w10, w9
00000000000105f8	b.lt	0x105d0
00000000000105fc	b	0x10608
0000000000010600	mov	w10, #0x0
0000000000010604	b	0x10608
0000000000010608	sxtw	x9, w10
000000000001060c	add	x8, x8, x9, lsl #4
0000000000010610	ldr	x8, [x8, #0x8]
0000000000010614	ldr	x8, [x8, #0x18]
0000000000010618	mov	x0, x22
000000000001061c	mov	x1, x21
0000000000010620	mov	x2, x19
0000000000010624	blr	x8
0000000000010628	mov	x8, x0
000000000001062c	str	x0, [x19]
0000000000010630	mov	x0, x20
0000000000010634	blr	x23
0000000000010638	ldr	x9, [x0]
000000000001063c	ldr	x10, [sp, #0x10]
0000000000010640	str	x10, [x9, #0x110]
0000000000010644	mov	x0, x8
0000000000010648	ldp	x29, x30, [sp, #0x50]
000000000001064c	ldp	x20, x19, [sp, #0x40]
0000000000010650	ldp	x22, x21, [sp, #0x30]
0000000000010654	ldp	x24, x23, [sp, #0x20]
0000000000010658	add	sp, sp, #0x60
000000000001065c	ret
0000000000010660	mov	x1, x0
0000000000010664	mov	x0, x20
0000000000010668	blr	x23
000000000001066c	ldr	x8, [x0]
0000000000010670	ldr	x9, [sp, #0x10]
0000000000010674	str	x9, [x8, #0x110]
0000000000010678	mov	x0, x1
000000000001067c	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_MutableCollection_addObject:
0000000000010680	sub	sp, sp, #0x50
0000000000010684	stp	x22, x21, [sp, #0x20]
0000000000010688	stp	x20, x19, [sp, #0x30]
000000000001068c	stp	x29, x30, [sp, #0x40]
0000000000010690	add	x29, sp, #0x40
0000000000010694	mov	x20, x1
0000000000010698	mov	x21, x0
000000000001069c	str	xzr, [sp, #0x8]
00000000000106a0	adrp	x19, 92 ; 0x6c000
00000000000106a4	add	x19, x19, #0xbb0
00000000000106a8	ldr	x22, [x19]
00000000000106ac	mov	x0, x19
00000000000106b0	blr	x22
00000000000106b4	ldr	x8, [x0]
00000000000106b8	ldr	x9, [x8, #0x110]
00000000000106bc	add	x10, sp, #0x8
00000000000106c0	str	x10, [x8, #0x110]
00000000000106c4	mov	x8, #0x300000000
00000000000106c8	stp	x9, x8, [sp, #0x10]
00000000000106cc	adr	x8, #0x76377
00000000000106d0	nop
00000000000106d4	ldarb	w8, [x8]
00000000000106d8	tbz	w8, #0x0, 0x106e0
00000000000106dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000106e0	ldr	x8, [x21]
00000000000106e4	and	x8, x8, #0xfffffffffffffffc
00000000000106e8	ldr	x8, [x8]
00000000000106ec	ldr	w9, [x8, #0x3c]
00000000000106f0	ldr	x8, [x8, #0x40]
00000000000106f4	tbnz	w9, #0x1f, 0x10704
00000000000106f8	mov	w10, #0x15
00000000000106fc	and	x9, x9, x10
0000000000010700	b	0x10788
0000000000010704	neg	w10, w9
0000000000010708	mvn	w9, w9
000000000001070c	cmp	w10, #0x9
0000000000010710	b.ge	0x10748
0000000000010714	cmp	w10, #0x2
0000000000010718	b.lt	0x1077c
000000000001071c	mov	x10, #0x0
0000000000010720	mov	x11, x8
0000000000010724	ldr	w12, [x11]
0000000000010728	cmp	w12, #0x14
000000000001072c	b.gt	0x10784
0000000000010730	add	x10, x10, #0x1
0000000000010734	add	x11, x11, #0x10
0000000000010738	cmp	x9, x10
000000000001073c	b.ne	0x10724
0000000000010740	mov	x10, x9
0000000000010744	b	0x10784
0000000000010748	mov	w10, #0x0
000000000001074c	add	w11, w9, w10
0000000000010750	cmp	w11, #0x0
0000000000010754	cinc	w11, w11, lt
0000000000010758	asr	w11, w11, #1
000000000001075c	sbfiz	x12, x11, #4, #32
0000000000010760	ldr	w12, [x8, x12]
0000000000010764	cmp	w12, #0x15
0000000000010768	csinc	w10, w10, w11, ge
000000000001076c	csel	w9, w9, w11, lt
0000000000010770	cmp	w10, w9
0000000000010774	b.lt	0x1074c
0000000000010778	b	0x10784
000000000001077c	mov	w10, #0x0
0000000000010780	b	0x10784
0000000000010784	sxtw	x9, w10
0000000000010788	add	x8, x8, x9, lsl #4
000000000001078c	ldr	x8, [x8, #0x8]
0000000000010790	ldr	x8, [x8]
0000000000010794	mov	x0, x21
0000000000010798	mov	x1, x20
000000000001079c	blr	x8
00000000000107a0	mov	x0, x19
00000000000107a4	blr	x22
00000000000107a8	ldr	x8, [x0]
00000000000107ac	ldr	x9, [sp, #0x10]
00000000000107b0	str	x9, [x8, #0x110]
00000000000107b4	ldp	x29, x30, [sp, #0x40]
00000000000107b8	ldp	x20, x19, [sp, #0x30]
00000000000107bc	ldp	x22, x21, [sp, #0x20]
00000000000107c0	add	sp, sp, #0x50
00000000000107c4	ret
00000000000107c8	mov	x1, x0
00000000000107cc	mov	x0, x19
00000000000107d0	blr	x22
00000000000107d4	ldr	x8, [x0]
00000000000107d8	ldr	x9, [sp, #0x10]
00000000000107dc	str	x9, [x8, #0x110]
00000000000107e0	mov	x0, x1
00000000000107e4	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_Set_contains:
00000000000107e8	sub	sp, sp, #0x50
00000000000107ec	stp	x22, x21, [sp, #0x20]
00000000000107f0	stp	x20, x19, [sp, #0x30]
00000000000107f4	stp	x29, x30, [sp, #0x40]
00000000000107f8	add	x29, sp, #0x40
00000000000107fc	mov	x20, x1
0000000000010800	mov	x21, x0
0000000000010804	str	xzr, [sp, #0x8]
0000000000010808	adrp	x19, 92 ; 0x6c000
000000000001080c	add	x19, x19, #0xbb0
0000000000010810	ldr	x22, [x19]
0000000000010814	mov	x0, x19
0000000000010818	blr	x22
000000000001081c	ldr	x8, [x0]
0000000000010820	ldr	x9, [x8, #0x110]
0000000000010824	add	x10, sp, #0x8
0000000000010828	str	x10, [x8, #0x110]
000000000001082c	mov	x8, #0x300000000
0000000000010830	stp	x9, x8, [sp, #0x10]
0000000000010834	adr	x8, #0x7620f
0000000000010838	nop
000000000001083c	ldarb	w8, [x8]
0000000000010840	tbz	w8, #0x0, 0x10848
0000000000010844	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010848	ldr	x8, [x21]
000000000001084c	and	x8, x8, #0xfffffffffffffffc
0000000000010850	ldr	x8, [x8]
0000000000010854	ldr	w9, [x8, #0x3c]
0000000000010858	ldr	x8, [x8, #0x40]
000000000001085c	tbnz	w9, #0x1f, 0x10868
0000000000010860	and	x9, x9, #0x1e
0000000000010864	b	0x108ec
0000000000010868	neg	w10, w9
000000000001086c	mvn	w9, w9
0000000000010870	cmp	w10, #0x9
0000000000010874	b.ge	0x108ac
0000000000010878	cmp	w10, #0x2
000000000001087c	b.lt	0x108e0
0000000000010880	mov	x10, #0x0
0000000000010884	mov	x11, x8
0000000000010888	ldr	w12, [x11]
000000000001088c	cmp	w12, #0x1d
0000000000010890	b.gt	0x108e8
0000000000010894	add	x10, x10, #0x1
0000000000010898	add	x11, x11, #0x10
000000000001089c	cmp	x9, x10
00000000000108a0	b.ne	0x10888
00000000000108a4	mov	x10, x9
00000000000108a8	b	0x108e8
00000000000108ac	mov	w10, #0x0
00000000000108b0	add	w11, w9, w10
00000000000108b4	cmp	w11, #0x0
00000000000108b8	cinc	w11, w11, lt
00000000000108bc	asr	w11, w11, #1
00000000000108c0	sbfiz	x12, x11, #4, #32
00000000000108c4	ldr	w12, [x8, x12]
00000000000108c8	cmp	w12, #0x1e
00000000000108cc	csinc	w10, w10, w11, ge
00000000000108d0	csel	w9, w9, w11, lt
00000000000108d4	cmp	w10, w9
00000000000108d8	b.lt	0x108b0
00000000000108dc	b	0x108e8
00000000000108e0	mov	w10, #0x0
00000000000108e4	b	0x108e8
00000000000108e8	sxtw	x9, w10
00000000000108ec	add	x8, x8, x9, lsl #4
00000000000108f0	ldr	x8, [x8, #0x8]
00000000000108f4	ldr	x8, [x8, #0x8]
00000000000108f8	mov	x0, x21
00000000000108fc	mov	x1, x20
0000000000010900	blr	x8
0000000000010904	mov	x1, x0
0000000000010908	mov	x0, x19
000000000001090c	blr	x22
0000000000010910	ldr	x8, [x0]
0000000000010914	ldr	x9, [sp, #0x10]
0000000000010918	str	x9, [x8, #0x110]
000000000001091c	mov	x0, x1
0000000000010920	ldp	x29, x30, [sp, #0x40]
0000000000010924	ldp	x20, x19, [sp, #0x30]
0000000000010928	ldp	x22, x21, [sp, #0x20]
000000000001092c	add	sp, sp, #0x50
0000000000010930	ret
0000000000010934	mov	x1, x0
0000000000010938	mov	x0, x19
000000000001093c	blr	x22
0000000000010940	ldr	x8, [x0]
0000000000010944	ldr	x9, [sp, #0x10]
0000000000010948	str	x9, [x8, #0x110]
000000000001094c	mov	x0, x1
0000000000010950	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_Set_iterator:
0000000000010954	sub	sp, sp, #0x50
0000000000010958	stp	x22, x21, [sp, #0x20]
000000000001095c	stp	x20, x19, [sp, #0x30]
0000000000010960	stp	x29, x30, [sp, #0x40]
0000000000010964	add	x29, sp, #0x40
0000000000010968	mov	x20, x1
000000000001096c	mov	x21, x0
0000000000010970	str	xzr, [sp, #0x8]
0000000000010974	adrp	x19, 92 ; 0x6c000
0000000000010978	add	x19, x19, #0xbb0
000000000001097c	ldr	x22, [x19]
0000000000010980	mov	x0, x19
0000000000010984	blr	x22
0000000000010988	ldr	x8, [x0]
000000000001098c	ldr	x9, [x8, #0x110]
0000000000010990	add	x10, sp, #0x8
0000000000010994	str	x10, [x8, #0x110]
0000000000010998	mov	x8, #0x300000000
000000000001099c	stp	x9, x8, [sp, #0x10]
00000000000109a0	adr	x8, #0x760a3
00000000000109a4	nop
00000000000109a8	ldarb	w8, [x8]
00000000000109ac	tbz	w8, #0x0, 0x109b4
00000000000109b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000109b4	ldr	x8, [x21]
00000000000109b8	and	x8, x8, #0xfffffffffffffffc
00000000000109bc	ldr	x8, [x8]
00000000000109c0	ldr	w9, [x8, #0x3c]
00000000000109c4	ldr	x8, [x8, #0x40]
00000000000109c8	tbnz	w9, #0x1f, 0x109d4
00000000000109cc	and	x9, x9, #0x1e
00000000000109d0	b	0x10a58
00000000000109d4	neg	w10, w9
00000000000109d8	mvn	w9, w9
00000000000109dc	cmp	w10, #0x9
00000000000109e0	b.ge	0x10a18
00000000000109e4	cmp	w10, #0x2
00000000000109e8	b.lt	0x10a4c
00000000000109ec	mov	x10, #0x0
00000000000109f0	mov	x11, x8
00000000000109f4	ldr	w12, [x11]
00000000000109f8	cmp	w12, #0x1d
00000000000109fc	b.gt	0x10a54
0000000000010a00	add	x10, x10, #0x1
0000000000010a04	add	x11, x11, #0x10
0000000000010a08	cmp	x9, x10
0000000000010a0c	b.ne	0x109f4
0000000000010a10	mov	x10, x9
0000000000010a14	b	0x10a54
0000000000010a18	mov	w10, #0x0
0000000000010a1c	add	w11, w9, w10
0000000000010a20	cmp	w11, #0x0
0000000000010a24	cinc	w11, w11, lt
0000000000010a28	asr	w11, w11, #1
0000000000010a2c	sbfiz	x12, x11, #4, #32
0000000000010a30	ldr	w12, [x8, x12]
0000000000010a34	cmp	w12, #0x1e
0000000000010a38	csinc	w10, w10, w11, ge
0000000000010a3c	csel	w9, w9, w11, lt
0000000000010a40	cmp	w10, w9
0000000000010a44	b.lt	0x10a1c
0000000000010a48	b	0x10a54
0000000000010a4c	mov	w10, #0x0
0000000000010a50	b	0x10a54
0000000000010a54	sxtw	x9, w10
0000000000010a58	add	x8, x8, x9, lsl #4
0000000000010a5c	ldr	x8, [x8, #0x8]
0000000000010a60	ldr	x8, [x8, #0x20]
0000000000010a64	mov	x0, x21
0000000000010a68	mov	x1, x20
0000000000010a6c	blr	x8
0000000000010a70	mov	x8, x0
0000000000010a74	str	x0, [x20]
0000000000010a78	mov	x0, x19
0000000000010a7c	blr	x22
0000000000010a80	ldr	x9, [x0]
0000000000010a84	ldr	x10, [sp, #0x10]
0000000000010a88	str	x10, [x9, #0x110]
0000000000010a8c	mov	x0, x8
0000000000010a90	ldp	x29, x30, [sp, #0x40]
0000000000010a94	ldp	x20, x19, [sp, #0x30]
0000000000010a98	ldp	x22, x21, [sp, #0x20]
0000000000010a9c	add	sp, sp, #0x50
0000000000010aa0	ret
0000000000010aa4	mov	x1, x0
0000000000010aa8	mov	x0, x19
0000000000010aac	blr	x22
0000000000010ab0	ldr	x8, [x0]
0000000000010ab4	ldr	x9, [sp, #0x10]
0000000000010ab8	str	x9, [x8, #0x110]
0000000000010abc	mov	x0, x1
0000000000010ac0	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_MutableSet_createWithCapacity:
0000000000010ac4	sub	sp, sp, #0x90
0000000000010ac8	stp	x26, x25, [sp, #0x40]
0000000000010acc	stp	x24, x23, [sp, #0x50]
0000000000010ad0	stp	x22, x21, [sp, #0x60]
0000000000010ad4	stp	x20, x19, [sp, #0x70]
0000000000010ad8	stp	x29, x30, [sp, #0x80]
0000000000010adc	add	x29, sp, #0x80
0000000000010ae0	mov	x19, x1
0000000000010ae4	mov	x21, x0
0000000000010ae8	str	xzr, [sp, #0x8]
0000000000010aec	adrp	x20, 92 ; 0x6c000
0000000000010af0	add	x20, x20, #0xbb0
0000000000010af4	ldr	x25, [x20]
0000000000010af8	mov	x0, x20
0000000000010afc	blr	x25
0000000000010b00	ldr	x8, [x0]
0000000000010b04	ldr	x9, [x8, #0x110]
0000000000010b08	add	x10, sp, #0x8
0000000000010b0c	str	x10, [x8, #0x110]
0000000000010b10	mov	x8, #0x300000000
0000000000010b14	stp	x9, x8, [sp, #0x10]
0000000000010b18	adr	x8, #0x75f2b
0000000000010b1c	nop
0000000000010b20	ldarb	w8, [x8]
0000000000010b24	tbz	w8, #0x0, 0x10b2c
0000000000010b28	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010b2c	mov	x0, x20
0000000000010b30	blr	x25
0000000000010b34	mov	x24, x0
0000000000010b38	ldr	x8, [x0]
0000000000010b3c	ldr	x8, [x8, #0x118]
0000000000010b40	add	x0, x8, #0x70
0000000000010b44	mov	w1, #0x18
0000000000010b48	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000010b4c	mov	x23, x0
0000000000010b50	adr	x8, #0x4b130
0000000000010b54	nop
0000000000010b58	mov	x22, x0
0000000000010b5c	str	x8, [x22, #0x10]!
0000000000010b60	str	xzr, [x0, #0x8]
0000000000010b64	str	x22, [x19]
0000000000010b68	ldr	x8, [x24]
0000000000010b6c	add	x9, sp, #0x20
0000000000010b70	ldp	x10, x11, [x8, #0x110]
0000000000010b74	str	x9, [x8, #0x110]
0000000000010b78	movi.16b	v0, #0x0
0000000000010b7c	stp	q0, q0, [sp, #0x20]
0000000000010b80	mov	x8, #0x400000000
0000000000010b84	stp	x10, x8, [sp, #0x28]
0000000000010b88	add	x0, x11, #0x70
0000000000010b8c	mov	w1, #0x60
0000000000010b90	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000010b94	mov	x24, x0
0000000000010b98	adr	x8, #0x4aa38
0000000000010b9c	nop
0000000000010ba0	str	x8, [x24, #0x10]!
0000000000010ba4	stur	xzr, [x24, #-0x8]
0000000000010ba8	str	x24, [sp, #0x38]
0000000000010bac	mov	x0, x24
0000000000010bb0	mov	x1, x21
0000000000010bb4	bl	"_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}"
0000000000010bb8	str	x24, [x23, #0x18]
0000000000010bbc	mov	x0, x20
0000000000010bc0	blr	x25
0000000000010bc4	ldr	x8, [x0]
0000000000010bc8	ldr	x9, [sp, #0x28]
0000000000010bcc	str	x9, [x8, #0x110]
0000000000010bd0	str	x22, [x19]
0000000000010bd4	ldr	x8, [x0]
0000000000010bd8	ldr	x9, [sp, #0x10]
0000000000010bdc	str	x9, [x8, #0x110]
0000000000010be0	mov	x0, x22
0000000000010be4	ldp	x29, x30, [sp, #0x80]
0000000000010be8	ldp	x20, x19, [sp, #0x70]
0000000000010bec	ldp	x22, x21, [sp, #0x60]
0000000000010bf0	ldp	x24, x23, [sp, #0x50]
0000000000010bf4	ldp	x26, x25, [sp, #0x40]
0000000000010bf8	add	sp, sp, #0x90
0000000000010bfc	ret
0000000000010c00	mov	x1, x0
0000000000010c04	mov	x0, x20
0000000000010c08	blr	x25
0000000000010c0c	ldr	x8, [x0]
0000000000010c10	ldr	x9, [sp, #0x10]
0000000000010c14	str	x9, [x8, #0x110]
0000000000010c18	mov	x0, x1
0000000000010c1c	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_Map_getSize:
0000000000010c20	sub	sp, sp, #0x50
0000000000010c24	stp	x22, x21, [sp, #0x20]
0000000000010c28	stp	x20, x19, [sp, #0x30]
0000000000010c2c	stp	x29, x30, [sp, #0x40]
0000000000010c30	add	x29, sp, #0x40
0000000000010c34	mov	x20, x0
0000000000010c38	str	xzr, [sp, #0x8]
0000000000010c3c	adrp	x19, 92 ; 0x6c000
0000000000010c40	add	x19, x19, #0xbb0
0000000000010c44	ldr	x21, [x19]
0000000000010c48	mov	x0, x19
0000000000010c4c	blr	x21
0000000000010c50	ldr	x8, [x0]
0000000000010c54	ldr	x9, [x8, #0x110]
0000000000010c58	add	x10, sp, #0x8
0000000000010c5c	str	x10, [x8, #0x110]
0000000000010c60	mov	x8, #0x300000000
0000000000010c64	stp	x9, x8, [sp, #0x10]
0000000000010c68	adr	x8, #0x75ddb
0000000000010c6c	nop
0000000000010c70	ldarb	w8, [x8]
0000000000010c74	tbz	w8, #0x0, 0x10c7c
0000000000010c78	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010c7c	ldr	x8, [x20]
0000000000010c80	and	x8, x8, #0xfffffffffffffffc
0000000000010c84	ldr	x8, [x8]
0000000000010c88	ldr	w9, [x8, #0x3c]
0000000000010c8c	ldr	x8, [x8, #0x40]
0000000000010c90	tbnz	w9, #0x1f, 0x10ca0
0000000000010c94	mov	w10, #0x41
0000000000010c98	and	x9, x9, x10
0000000000010c9c	b	0x10d24
0000000000010ca0	neg	w10, w9
0000000000010ca4	mvn	w9, w9
0000000000010ca8	cmp	w10, #0x9
0000000000010cac	b.ge	0x10ce4
0000000000010cb0	cmp	w10, #0x2
0000000000010cb4	b.lt	0x10d18
0000000000010cb8	mov	x10, #0x0
0000000000010cbc	mov	x11, x8
0000000000010cc0	ldr	w12, [x11]
0000000000010cc4	cmp	w12, #0x40
0000000000010cc8	b.gt	0x10d20
0000000000010ccc	add	x10, x10, #0x1
0000000000010cd0	add	x11, x11, #0x10
0000000000010cd4	cmp	x9, x10
0000000000010cd8	b.ne	0x10cc0
0000000000010cdc	mov	x10, x9
0000000000010ce0	b	0x10d20
0000000000010ce4	mov	w10, #0x0
0000000000010ce8	add	w11, w9, w10
0000000000010cec	cmp	w11, #0x0
0000000000010cf0	cinc	w11, w11, lt
0000000000010cf4	asr	w11, w11, #1
0000000000010cf8	sbfiz	x12, x11, #4, #32
0000000000010cfc	ldr	w12, [x8, x12]
0000000000010d00	cmp	w12, #0x41
0000000000010d04	csinc	w10, w10, w11, ge
0000000000010d08	csel	w9, w9, w11, lt
0000000000010d0c	cmp	w10, w9
0000000000010d10	b.lt	0x10ce8
0000000000010d14	b	0x10d20
0000000000010d18	mov	w10, #0x0
0000000000010d1c	b	0x10d20
0000000000010d20	sxtw	x9, w10
0000000000010d24	add	x8, x8, x9, lsl #4
0000000000010d28	ldr	x8, [x8, #0x8]
0000000000010d2c	ldr	x8, [x8, #0x10]
0000000000010d30	mov	x0, x20
0000000000010d34	blr	x8
0000000000010d38	mov	x1, x0
0000000000010d3c	mov	x0, x19
0000000000010d40	blr	x21
0000000000010d44	ldr	x8, [x0]
0000000000010d48	ldr	x9, [sp, #0x10]
0000000000010d4c	str	x9, [x8, #0x110]
0000000000010d50	mov	x0, x1
0000000000010d54	ldp	x29, x30, [sp, #0x40]
0000000000010d58	ldp	x20, x19, [sp, #0x30]
0000000000010d5c	ldp	x22, x21, [sp, #0x20]
0000000000010d60	add	sp, sp, #0x50
0000000000010d64	ret
0000000000010d68	mov	x1, x0
0000000000010d6c	mov	x0, x19
0000000000010d70	blr	x21
0000000000010d74	ldr	x8, [x0]
0000000000010d78	ldr	x9, [sp, #0x10]
0000000000010d7c	str	x9, [x8, #0x110]
0000000000010d80	mov	x0, x1
0000000000010d84	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_Map_keyIterator:
0000000000010d88	sub	sp, sp, #0x60
0000000000010d8c	stp	x24, x23, [sp, #0x20]
0000000000010d90	stp	x22, x21, [sp, #0x30]
0000000000010d94	stp	x20, x19, [sp, #0x40]
0000000000010d98	stp	x29, x30, [sp, #0x50]
0000000000010d9c	add	x29, sp, #0x50
0000000000010da0	mov	x19, x1
0000000000010da4	mov	x21, x0
0000000000010da8	movi.16b	v0, #0x0
0000000000010dac	stp	q0, q0, [sp]
0000000000010db0	mov	x8, sp
0000000000010db4	add	x22, x8, #0x18
0000000000010db8	adrp	x20, 92 ; 0x6c000
0000000000010dbc	add	x20, x20, #0xbb0
0000000000010dc0	ldr	x23, [x20]
0000000000010dc4	mov	x0, x20
0000000000010dc8	blr	x23
0000000000010dcc	ldr	x9, [x0]
0000000000010dd0	ldr	x10, [x9, #0x110]
0000000000010dd4	str	x8, [x9, #0x110]
0000000000010dd8	mov	x8, #0x400000000
0000000000010ddc	stp	x10, x8, [sp, #0x8]
0000000000010de0	adr	x8, #0x75c63
0000000000010de4	nop
0000000000010de8	ldarb	w8, [x8]
0000000000010dec	tbz	w8, #0x0, 0x10df4
0000000000010df0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000010df4	ldr	x8, [x21]
0000000000010df8	and	x8, x8, #0xfffffffffffffffc
0000000000010dfc	ldr	x8, [x8]
0000000000010e00	ldr	w9, [x8, #0x3c]
0000000000010e04	ldr	x8, [x8, #0x40]
0000000000010e08	tbnz	w9, #0x1f, 0x10e18
0000000000010e0c	mov	w10, #0x41
0000000000010e10	and	x9, x9, x10
0000000000010e14	b	0x10e9c
0000000000010e18	neg	w10, w9
0000000000010e1c	mvn	w9, w9
0000000000010e20	cmp	w10, #0x9
0000000000010e24	b.ge	0x10e5c
0000000000010e28	cmp	w10, #0x2
0000000000010e2c	b.lt	0x10e90
0000000000010e30	mov	x10, #0x0
0000000000010e34	mov	x11, x8
0000000000010e38	ldr	w12, [x11]
0000000000010e3c	cmp	w12, #0x40
0000000000010e40	b.gt	0x10e98
0000000000010e44	add	x10, x10, #0x1
0000000000010e48	add	x11, x11, #0x10
0000000000010e4c	cmp	x9, x10
0000000000010e50	b.ne	0x10e38
0000000000010e54	mov	x10, x9
0000000000010e58	b	0x10e98
0000000000010e5c	mov	w10, #0x0
0000000000010e60	add	w11, w9, w10
0000000000010e64	cmp	w11, #0x0
0000000000010e68	cinc	w11, w11, lt
0000000000010e6c	asr	w11, w11, #1
0000000000010e70	sbfiz	x12, x11, #4, #32
0000000000010e74	ldr	w12, [x8, x12]
0000000000010e78	cmp	w12, #0x41
0000000000010e7c	csinc	w10, w10, w11, ge
0000000000010e80	csel	w9, w9, w11, lt
0000000000010e84	cmp	w10, w9
0000000000010e88	b.lt	0x10e60
0000000000010e8c	b	0x10e98
0000000000010e90	mov	w10, #0x0
0000000000010e94	b	0x10e98
0000000000010e98	sxtw	x9, w10
0000000000010e9c	add	x8, x8, x9, lsl #4
0000000000010ea0	ldr	x8, [x8, #0x8]
0000000000010ea4	ldr	x8, [x8, #0x8]
0000000000010ea8	mov	x0, x21
0000000000010eac	mov	x1, x22
0000000000010eb0	blr	x8
0000000000010eb4	ldr	x8, [x0]
0000000000010eb8	and	x8, x8, #0xfffffffffffffffc
0000000000010ebc	ldr	x8, [x8]
0000000000010ec0	ldr	w9, [x8, #0x3c]
0000000000010ec4	ldr	x8, [x8, #0x40]
0000000000010ec8	tbnz	w9, #0x1f, 0x10ed4
0000000000010ecc	and	x9, x9, #0x1e
0000000000010ed0	b	0x10f58
0000000000010ed4	neg	w10, w9
0000000000010ed8	mvn	w9, w9
0000000000010edc	cmp	w10, #0x9
0000000000010ee0	b.ge	0x10f18
0000000000010ee4	cmp	w10, #0x2
0000000000010ee8	b.lt	0x10f4c
0000000000010eec	mov	x10, #0x0
0000000000010ef0	mov	x11, x8
0000000000010ef4	ldr	w12, [x11]
0000000000010ef8	cmp	w12, #0x1d
0000000000010efc	b.gt	0x10f54
0000000000010f00	add	x10, x10, #0x1
0000000000010f04	add	x11, x11, #0x10
0000000000010f08	cmp	x9, x10
0000000000010f0c	b.ne	0x10ef4
0000000000010f10	mov	x10, x9
0000000000010f14	b	0x10f54
0000000000010f18	mov	w10, #0x0
0000000000010f1c	add	w11, w9, w10
0000000000010f20	cmp	w11, #0x0
0000000000010f24	cinc	w11, w11, lt
0000000000010f28	asr	w11, w11, #1
0000000000010f2c	sbfiz	x12, x11, #4, #32
0000000000010f30	ldr	w12, [x8, x12]
0000000000010f34	cmp	w12, #0x1e
0000000000010f38	csinc	w10, w10, w11, ge
0000000000010f3c	csel	w9, w9, w11, lt
0000000000010f40	cmp	w10, w9
0000000000010f44	b.lt	0x10f1c
0000000000010f48	b	0x10f54
0000000000010f4c	mov	w10, #0x0
0000000000010f50	b	0x10f54
0000000000010f54	sxtw	x9, w10
0000000000010f58	add	x8, x8, x9, lsl #4
0000000000010f5c	ldr	x8, [x8, #0x8]
0000000000010f60	ldr	x8, [x8, #0x20]
0000000000010f64	mov	x1, x19
0000000000010f68	blr	x8
0000000000010f6c	mov	x8, x0
0000000000010f70	str	x0, [x19]
0000000000010f74	mov	x0, x20
0000000000010f78	blr	x23
0000000000010f7c	ldr	x9, [x0]
0000000000010f80	ldr	x10, [sp, #0x8]
0000000000010f84	str	x10, [x9, #0x110]
0000000000010f88	mov	x0, x8
0000000000010f8c	ldp	x29, x30, [sp, #0x50]
0000000000010f90	ldp	x20, x19, [sp, #0x40]
0000000000010f94	ldp	x22, x21, [sp, #0x30]
0000000000010f98	ldp	x24, x23, [sp, #0x20]
0000000000010f9c	add	sp, sp, #0x60
0000000000010fa0	ret
0000000000010fa4	mov	x1, x0
0000000000010fa8	mov	x0, x20
0000000000010fac	blr	x23
0000000000010fb0	ldr	x8, [x0]
0000000000010fb4	ldr	x9, [sp, #0x8]
0000000000010fb8	str	x9, [x8, #0x110]
0000000000010fbc	mov	x0, x1
0000000000010fc0	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_MutableMap_createWithCapacity:
0000000000010fc4	sub	sp, sp, #0x60
0000000000010fc8	stp	x24, x23, [sp, #0x20]
0000000000010fcc	stp	x22, x21, [sp, #0x30]
0000000000010fd0	stp	x20, x19, [sp, #0x40]
0000000000010fd4	stp	x29, x30, [sp, #0x50]
0000000000010fd8	add	x29, sp, #0x50
0000000000010fdc	mov	x20, x1
0000000000010fe0	mov	x21, x0
0000000000010fe4	str	xzr, [sp, #0x8]
0000000000010fe8	adrp	x19, 92 ; 0x6c000
0000000000010fec	add	x19, x19, #0xbb0
0000000000010ff0	ldr	x23, [x19]
0000000000010ff4	mov	x0, x19
0000000000010ff8	blr	x23
0000000000010ffc	ldr	x8, [x0]
0000000000011000	ldr	x9, [x8, #0x110]
0000000000011004	add	x10, sp, #0x8
0000000000011008	str	x10, [x8, #0x110]
000000000001100c	mov	x8, #0x300000000
0000000000011010	stp	x9, x8, [sp, #0x10]
0000000000011014	adr	x8, #0x75a2f
0000000000011018	nop
000000000001101c	ldarb	w8, [x8]
0000000000011020	tbz	w8, #0x0, 0x11028
0000000000011024	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011028	mov	x0, x19
000000000001102c	blr	x23
0000000000011030	ldr	x8, [x0]
0000000000011034	ldr	x8, [x8, #0x118]
0000000000011038	add	x0, x8, #0x70
000000000001103c	mov	w1, #0x60
0000000000011040	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011044	mov	x22, x0
0000000000011048	adr	x8, #0x4a588
000000000001104c	nop
0000000000011050	str	x8, [x22, #0x10]!
0000000000011054	stur	xzr, [x22, #-0x8]
0000000000011058	str	x22, [x20]
000000000001105c	mov	x0, x22
0000000000011060	mov	x1, x21
0000000000011064	bl	"_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}"
0000000000011068	str	x22, [x20]
000000000001106c	mov	x0, x19
0000000000011070	blr	x23
0000000000011074	ldr	x8, [x0]
0000000000011078	ldr	x9, [sp, #0x10]
000000000001107c	str	x9, [x8, #0x110]
0000000000011080	mov	x0, x22
0000000000011084	ldp	x29, x30, [sp, #0x50]
0000000000011088	ldp	x20, x19, [sp, #0x40]
000000000001108c	ldp	x22, x21, [sp, #0x30]
0000000000011090	ldp	x24, x23, [sp, #0x20]
0000000000011094	add	sp, sp, #0x60
0000000000011098	ret
000000000001109c	mov	x1, x0
00000000000110a0	mov	x0, x19
00000000000110a4	blr	x23
00000000000110a8	ldr	x8, [x0]
00000000000110ac	ldr	x9, [sp, #0x10]
00000000000110b0	str	x9, [x8, #0x110]
00000000000110b4	mov	x0, x1
00000000000110b8	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_ObjCExport_ThrowCollectionTooLarge:
00000000000110bc	sub	sp, sp, #0x50
00000000000110c0	stp	x22, x21, [sp, #0x20]
00000000000110c4	stp	x20, x19, [sp, #0x30]
00000000000110c8	stp	x29, x30, [sp, #0x40]
00000000000110cc	add	x29, sp, #0x40
00000000000110d0	movi.16b	v0, #0x0
00000000000110d4	stp	q0, q0, [sp]
00000000000110d8	adrp	x19, 91 ; 0x6c000
00000000000110dc	add	x19, x19, #0xbb0
00000000000110e0	ldr	x21, [x19]
00000000000110e4	mov	x0, x19
00000000000110e8	blr	x21
00000000000110ec	ldr	x8, [x0]
00000000000110f0	ldr	x9, [x8, #0x110]
00000000000110f4	mov	x10, sp
00000000000110f8	str	x10, [x8, #0x110]
00000000000110fc	mov	x8, #0x400000000
0000000000011100	stp	x9, x8, [sp, #0x8]
0000000000011104	adr	x8, #0x7593f
0000000000011108	nop
000000000001110c	ldarb	w8, [x8]
0000000000011110	tbz	w8, #0x0, 0x11118
0000000000011114	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011118	mov	x0, x19
000000000001111c	blr	x21
0000000000011120	ldr	x8, [x0]
0000000000011124	ldr	x8, [x8, #0x118]
0000000000011128	add	x0, x8, #0x70
000000000001112c	mov	w1, #0x38
0000000000011130	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011134	mov	x20, x0
0000000000011138	adr	x8, #0x47d28
000000000001113c	nop
0000000000011140	str	x8, [x20, #0x10]!
0000000000011144	stur	xzr, [x20, #-0x8]
0000000000011148	str	x20, [sp, #0x18]
000000000001114c	adr	x1, #0x54744
0000000000011150	nop
0000000000011154	mov	x0, x20
0000000000011158	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001115c	mov	x0, x20
0000000000011160	bl	_ThrowException
0000000000011164	brk	#0x1
0000000000011168	mov	x1, x0
000000000001116c	mov	x0, x19
0000000000011170	blr	x21
0000000000011174	ldr	x8, [x0]
0000000000011178	ldr	x9, [sp, #0x8]
000000000001117c	str	x9, [x8, #0x110]
0000000000011180	mov	x0, x1
0000000000011184	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSEnumeratorAsKIterator_create:
0000000000011188	sub	sp, sp, #0xc0
000000000001118c	stp	x28, x27, [sp, #0x60]
0000000000011190	stp	x26, x25, [sp, #0x70]
0000000000011194	stp	x24, x23, [sp, #0x80]
0000000000011198	stp	x22, x21, [sp, #0x90]
000000000001119c	stp	x20, x19, [sp, #0xa0]
00000000000111a0	stp	x29, x30, [sp, #0xb0]
00000000000111a4	add	x29, sp, #0xb0
00000000000111a8	mov	x20, x0
00000000000111ac	str	xzr, [sp, #0x18]
00000000000111b0	adrp	x19, 91 ; 0x6c000
00000000000111b4	add	x19, x19, #0xbb0
00000000000111b8	ldr	x26, [x19]
00000000000111bc	mov	x0, x19
00000000000111c0	blr	x26
00000000000111c4	ldr	x8, [x0]
00000000000111c8	ldr	x9, [x8, #0x110]
00000000000111cc	add	x10, sp, #0x18
00000000000111d0	str	x10, [x8, #0x110]
00000000000111d4	mov	x8, #0x300000000
00000000000111d8	stp	x9, x8, [sp, #0x20]
00000000000111dc	adr	x25, #0x75867
00000000000111e0	nop
00000000000111e4	ldarb	w8, [x25]
00000000000111e8	tbz	w8, #0x0, 0x111f0
00000000000111ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000111f0	mov	x0, x19
00000000000111f4	blr	x26
00000000000111f8	mov	x23, x0
00000000000111fc	ldr	x8, [x0]
0000000000011200	ldr	x8, [x8, #0x118]
0000000000011204	add	x0, x8, #0x70
0000000000011208	mov	w1, #0x20
000000000001120c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011210	mov	x22, x0
0000000000011214	adr	x8, #0x4914c
0000000000011218	nop
000000000001121c	mov	x21, x0
0000000000011220	str	x8, [x21, #0x10]!
0000000000011224	str	xzr, [x0, #0x8]
0000000000011228	str	x21, [x20]
000000000001122c	ldr	x8, [x23]
0000000000011230	ldr	x9, [x8, #0x110]
0000000000011234	add	x10, sp, #0x30
0000000000011238	str	x10, [x8, #0x110]
000000000001123c	movi.16b	v0, #0x0
0000000000011240	stp	q0, q0, [sp, #0x30]
0000000000011244	str	xzr, [sp, #0x50]
0000000000011248	mov	x8, #0x500000000
000000000001124c	stp	x9, x8, [sp, #0x38]
0000000000011250	adr	x27, #0x75870
0000000000011254	nop
0000000000011258	ldar	x23, [x27]
000000000001125c	cmp	x23, #0x2
0000000000011260	b.hs	0x11440
0000000000011264	mov	x0, x19
0000000000011268	blr	x26
000000000001126c	ldr	x28, [x0]
0000000000011270	ldp	x8, x9, [x28, #0x120]
0000000000011274	cmp	x8, x9
0000000000011278	b.eq	0x11298
000000000001127c	mov	x10, x9
0000000000011280	ldr	x11, [x10, #-0x10]!
0000000000011284	cmp	x11, x27
0000000000011288	b.eq	0x11354
000000000001128c	mov	x9, x10
0000000000011290	cmp	x10, x8
0000000000011294	b.ne	0x11280
0000000000011298	add	x8, x28, #0x120
000000000001129c	str	x8, [sp, #0x10]
00000000000112a0	add	x0, x28, #0x138
00000000000112a4	mov	w9, #0x1
00000000000112a8	ldaxr	w8, [x0]
00000000000112ac	stlxr	w10, w9, [x0]
00000000000112b0	cbnz	w10, 0x112a8
00000000000112b4	b	0x112c4
00000000000112b8	mov	w24, #0x1
00000000000112bc	stlxr	w9, x24, [x27]
00000000000112c0	cbz	w9, 0x112d4
00000000000112c4	ldaxr	x23, [x27]
00000000000112c8	cbz	x23, 0x112b8
00000000000112cc	mov	w24, #0x0
00000000000112d0	clrex
00000000000112d4	cmp	x23, #0x1
00000000000112d8	b.eq	0x112c4
00000000000112dc	cbz	x28, 0x11304
00000000000112e0	ldaxr	w9, [x0]
00000000000112e4	stlxr	w10, w8, [x0]
00000000000112e8	cbnz	w10, 0x112e0
00000000000112ec	cbnz	w8, 0x11304
00000000000112f0	cmp	w9, #0x1
00000000000112f4	b.ne	0x11304
00000000000112f8	ldarb	w8, [x25]
00000000000112fc	tbz	w8, #0x0, 0x11304
0000000000011300	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000011304	tbz	w24, #0x0, 0x1134c
0000000000011308	ldr	x8, [x28, #0x118]
000000000001130c	add	x0, x8, #0x70
0000000000011310	mov	w1, #0x20
0000000000011314	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011318	mov	x23, x0
000000000001131c	adr	x8, #0x4b304
0000000000011320	nop
0000000000011324	str	x8, [x23, #0x10]!
0000000000011328	stur	xzr, [x23, #-0x8]
000000000001132c	str	x23, [sp, #0x48]
0000000000011330	ldp	x9, x8, [x28, #0x128]
0000000000011334	cmp	x9, x8
0000000000011338	b.hs	0x11360
000000000001133c	stp	x27, x23, [x9]
0000000000011340	add	x8, x9, #0x10
0000000000011344	str	x8, [x28, #0x128]
0000000000011348	b	0x113f4
000000000001134c	str	x23, [sp, #0x48]
0000000000011350	b	0x11440
0000000000011354	ldur	x23, [x9, #-0x8]
0000000000011358	str	x23, [sp, #0x48]
000000000001135c	b	0x11440
0000000000011360	ldr	x10, [sp, #0x10]
0000000000011364	ldr	x10, [x10]
0000000000011368	sub	x9, x9, x10
000000000001136c	asr	x24, x9, #4
0000000000011370	add	x9, x24, #0x1
0000000000011374	lsr	x11, x9, #60
0000000000011378	cbnz	x11, 0x114ac
000000000001137c	sub	x8, x8, x10
0000000000011380	asr	x10, x8, #3
0000000000011384	cmp	x10, x9
0000000000011388	csel	x9, x9, x10, lo
000000000001138c	mov	x10, #0x7ffffffffffffff
0000000000011390	cmp	x10, x8, asr #4
0000000000011394	mov	x8, #0xfffffffffffffff
0000000000011398	csel	x25, x9, x8, hi
000000000001139c	mov	x0, x25
00000000000113a0	mov	w1, #0x10
00000000000113a4	bl	0x519e0 ; symbol stub for: _calloc
00000000000113a8	add	x8, x0, x24, lsl #4
00000000000113ac	add	x10, x0, x25, lsl #4
00000000000113b0	stp	x27, x23, [x8]
00000000000113b4	add	x24, x8, #0x10
00000000000113b8	ldp	x1, x9, [x28, #0x120]
00000000000113bc	sub	x2, x9, x1
00000000000113c0	sub	x25, x8, x2
00000000000113c4	cmp	x2, #0x1
00000000000113c8	b.lt	0x113e0
00000000000113cc	mov	x0, x25
00000000000113d0	str	x10, [sp, #0x8]
00000000000113d4	bl	0x51aac ; symbol stub for: _memcpy
00000000000113d8	ldp	x10, x8, [sp, #0x8]
00000000000113dc	ldr	x1, [x8]
00000000000113e0	stp	x25, x24, [x28, #0x120]
00000000000113e4	str	x10, [x28, #0x130]
00000000000113e8	cbz	x1, 0x113f4
00000000000113ec	mov	x0, x1
00000000000113f0	bl	0x51a64 ; symbol stub for: _free
00000000000113f4	mov	x0, x23
00000000000113f8	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
00000000000113fc	mov	w0, #0x1
0000000000011400	mov	w1, #0x28
0000000000011404	bl	0x519e0 ; symbol stub for: _calloc
0000000000011408	ldr	x8, [x28, #0x18]!
000000000001140c	sub	x9, x28, #0x8
0000000000011410	stp	x27, x9, [x0, #0x10]
0000000000011414	stp	x8, x28, [x0]
0000000000011418	str	x0, [x8, #0x8]
000000000001141c	str	x0, [x28]
0000000000011420	ldr	x8, [x28, #0x10]
0000000000011424	add	x8, x8, #0x1
0000000000011428	str	x8, [x28, #0x10]
000000000001142c	str	x0, [x0, #0x20]
0000000000011430	stlr	x23, [x27]
0000000000011434	ldr	x8, [x28, #0x110]
0000000000011438	sub	x8, x8, #0x10
000000000001143c	str	x8, [x28, #0x110]
0000000000011440	ldr	x8, [x23, #0x8]
0000000000011444	ldr	w9, [x8, #0x8]
0000000000011448	cmp	w9, #0x2
000000000001144c	b.ls	0x114a4
0000000000011450	ldr	x8, [x8, #0x20]
0000000000011454	str	x8, [sp, #0x50]
0000000000011458	str	x8, [x22, #0x18]
000000000001145c	mov	x0, x19
0000000000011460	blr	x26
0000000000011464	ldr	x8, [x0]
0000000000011468	ldr	x9, [sp, #0x38]
000000000001146c	str	x9, [x8, #0x110]
0000000000011470	str	x21, [x20]
0000000000011474	ldr	x8, [x0]
0000000000011478	ldr	x9, [sp, #0x20]
000000000001147c	str	x9, [x8, #0x110]
0000000000011480	mov	x0, x21
0000000000011484	ldp	x29, x30, [sp, #0xb0]
0000000000011488	ldp	x20, x19, [sp, #0xa0]
000000000001148c	ldp	x22, x21, [sp, #0x90]
0000000000011490	ldp	x24, x23, [sp, #0x80]
0000000000011494	ldp	x26, x25, [sp, #0x70]
0000000000011498	ldp	x28, x27, [sp, #0x60]
000000000001149c	add	sp, sp, #0xc0
00000000000114a0	ret
00000000000114a4	bl	_ThrowArrayIndexOutOfBoundsException
00000000000114a8	b	0x114d4
00000000000114ac	ldr	x0, [sp, #0x10]
00000000000114b0	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000114b4	b	0x114d4
00000000000114b8	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
00000000000114bc	str	xzr, [sp, #0x48]
00000000000114c0	stlr	xzr, [x27]
00000000000114c4	ldr	x8, [x28, #0x128]
00000000000114c8	sub	x8, x8, #0x10
00000000000114cc	str	x8, [x28, #0x128]
00000000000114d0	bl	0x51968 ; symbol stub for: ___cxa_rethrow
00000000000114d4	brk	#0x1
00000000000114d8	mov	x20, x0
00000000000114dc	bl	0x51944 ; symbol stub for: ___cxa_end_catch
00000000000114e0	b	0x114e8
00000000000114e4	mov	x20, x0
00000000000114e8	mov	x0, x19
00000000000114ec	blr	x26
00000000000114f0	ldr	x8, [x0]
00000000000114f4	ldr	x9, [sp, #0x20]
00000000000114f8	str	x9, [x8, #0x110]
00000000000114fc	mov	x0, x20
0000000000011500	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.native.internal.NSArrayAsKList#<get-size>(){}kotlin.Int:
0000000000011504	stp	x20, x19, [sp, #-0x20]!
0000000000011508	stp	x29, x30, [sp, #0x10]
000000000001150c	add	x29, sp, #0x10
0000000000011510	mov	x19, x0
0000000000011514	adr	x8, #0x7552f
0000000000011518	nop
000000000001151c	ldarb	w8, [x8]
0000000000011520	tbz	w8, #0x0, 0x11528
0000000000011524	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011528	ldar	x8, [x19]
000000000001152c	and	x8, x8, #0xfffffffffffffffc
0000000000011530	ldr	x9, [x8]
0000000000011534	cmp	x8, #0x0
0000000000011538	ccmp	x9, x8, #0x4, ne
000000000001153c	b.ne	0x11548
0000000000011540	mov	x0, #0x0
0000000000011544	b	0x11550
0000000000011548	add	x8, x8, #0x10
000000000001154c	ldar	x0, [x8]
0000000000011550	nop
0000000000011554	ldr	x1, #0x59094 ; Objc selector ref: count
0000000000011558	bl	0x51b78 ; Objc message: -[x0 count]
000000000001155c	lsr	x8, x0, #31
0000000000011560	cbnz	x8, 0x11570
0000000000011564	ldp	x29, x30, [sp, #0x10]
0000000000011568	ldp	x20, x19, [sp], #0x20
000000000001156c	ret
0000000000011570	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSMutableArrayAsKMutableList#<get-size>(){}kotlin.Int:
0000000000011574	stp	x20, x19, [sp, #-0x20]!
0000000000011578	stp	x29, x30, [sp, #0x10]
000000000001157c	add	x29, sp, #0x10
0000000000011580	mov	x19, x0
0000000000011584	adr	x8, #0x754bf
0000000000011588	nop
000000000001158c	ldarb	w8, [x8]
0000000000011590	tbz	w8, #0x0, 0x11598
0000000000011594	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011598	ldar	x8, [x19]
000000000001159c	and	x8, x8, #0xfffffffffffffffc
00000000000115a0	ldr	x9, [x8]
00000000000115a4	cmp	x8, #0x0
00000000000115a8	ccmp	x9, x8, #0x4, ne
00000000000115ac	b.ne	0x115b8
00000000000115b0	mov	x0, #0x0
00000000000115b4	b	0x115c0
00000000000115b8	add	x8, x8, #0x10
00000000000115bc	ldar	x0, [x8]
00000000000115c0	nop
00000000000115c4	ldr	x1, #0x59024 ; Objc selector ref: count
00000000000115c8	bl	0x51b78 ; Objc message: -[x0 count]
00000000000115cc	lsr	x8, x0, #31
00000000000115d0	cbnz	x8, 0x115e0
00000000000115d4	ldp	x29, x30, [sp, #0x10]
00000000000115d8	ldp	x20, x19, [sp], #0x20
00000000000115dc	ret
00000000000115e0	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSSetAsKSet#<get-size>(){}kotlin.Int:
00000000000115e4	stp	x20, x19, [sp, #-0x20]!
00000000000115e8	stp	x29, x30, [sp, #0x10]
00000000000115ec	add	x29, sp, #0x10
00000000000115f0	mov	x19, x0
00000000000115f4	adr	x8, #0x7544f
00000000000115f8	nop
00000000000115fc	ldarb	w8, [x8]
0000000000011600	tbz	w8, #0x0, 0x11608
0000000000011604	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011608	ldar	x8, [x19]
000000000001160c	and	x8, x8, #0xfffffffffffffffc
0000000000011610	ldr	x9, [x8]
0000000000011614	cmp	x8, #0x0
0000000000011618	ccmp	x9, x8, #0x4, ne
000000000001161c	b.ne	0x11628
0000000000011620	mov	x0, #0x0
0000000000011624	b	0x11630
0000000000011628	add	x8, x8, #0x10
000000000001162c	ldar	x0, [x8]
0000000000011630	nop
0000000000011634	ldr	x1, #0x58fb4 ; Objc selector ref: count
0000000000011638	bl	0x51b78 ; Objc message: -[x0 count]
000000000001163c	lsr	x8, x0, #31
0000000000011640	cbnz	x8, 0x11650
0000000000011644	ldp	x29, x30, [sp, #0x10]
0000000000011648	ldp	x20, x19, [sp], #0x20
000000000001164c	ret
0000000000011650	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#equals(kotlin.Any?){}kotlin.Boolean:
0000000000011654	sub	sp, sp, #0xa0
0000000000011658	stp	x28, x27, [sp, #0x40]
000000000001165c	stp	x26, x25, [sp, #0x50]
0000000000011660	stp	x24, x23, [sp, #0x60]
0000000000011664	stp	x22, x21, [sp, #0x70]
0000000000011668	stp	x20, x19, [sp, #0x80]
000000000001166c	stp	x29, x30, [sp, #0x90]
0000000000011670	add	x29, sp, #0x90
0000000000011674	mov	x20, x1
0000000000011678	mov	x19, x0
000000000001167c	movi.16b	v0, #0x0
0000000000011680	stp	q0, q0, [sp]
0000000000011684	stp	q0, q0, [sp, #0x20]
0000000000011688	mov	x22, sp
000000000001168c	adrp	x0, 91 ; 0x6c000
0000000000011690	add	x0, x0, #0xbb0
0000000000011694	ldr	x8, [x0]
0000000000011698	blr	x8
000000000001169c	ldr	x26, [x0]
00000000000116a0	ldr	x8, [x26, #0x110]
00000000000116a4	str	x22, [x26, #0x110]
00000000000116a8	mov	x9, #0x800000000
00000000000116ac	stp	x8, x9, [sp, #0x8]
00000000000116b0	adr	x8, #0x75393
00000000000116b4	nop
00000000000116b8	ldarb	w8, [x8]
00000000000116bc	tbz	w8, #0x0, 0x116c4
00000000000116c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000116c4	cmp	x19, x20
00000000000116c8	b.eq	0x11b24
00000000000116cc	cbz	x20, 0x11f48
00000000000116d0	ldr	x8, [x20]
00000000000116d4	and	x8, x8, #0xfffffffffffffffc
00000000000116d8	ldr	x8, [x8]
00000000000116dc	ldr	w9, [x8, #0x3c]
00000000000116e0	ldr	x8, [x8, #0x40]
00000000000116e4	tbnz	w9, #0x1f, 0x11704
00000000000116e8	mov	w10, #0x41
00000000000116ec	and	x9, x9, x10
00000000000116f0	lsl	x9, x9, #4
00000000000116f4	ldr	w8, [x8, x9]
00000000000116f8	cmp	w8, #0x41
00000000000116fc	b.eq	0x117d4
0000000000011700	b	0x11f48
0000000000011704	neg	w10, w9
0000000000011708	mvn	w9, w9
000000000001170c	cmp	w10, #0x9
0000000000011710	b.ge	0x1175c
0000000000011714	cmp	w10, #0x2
0000000000011718	b.lt	0x117a4
000000000001171c	mov	x10, #0x0
0000000000011720	mov	x11, x8
0000000000011724	ldr	w12, [x11]
0000000000011728	cmp	w12, #0x40
000000000001172c	b.gt	0x117c0
0000000000011730	add	x10, x10, #0x1
0000000000011734	add	x11, x11, #0x10
0000000000011738	cmp	x9, x10
000000000001173c	b.ne	0x11724
0000000000011740	mov	x10, x9
0000000000011744	sxtw	x9, w10
0000000000011748	lsl	x9, x9, #4
000000000001174c	ldr	w8, [x8, x9]
0000000000011750	cmp	w8, #0x41
0000000000011754	b.ne	0x11f48
0000000000011758	b	0x117d4
000000000001175c	mov	w10, #0x0
0000000000011760	add	w11, w9, w10
0000000000011764	cmp	w11, #0x0
0000000000011768	cinc	w11, w11, lt
000000000001176c	asr	w11, w11, #1
0000000000011770	sbfiz	x12, x11, #4, #32
0000000000011774	ldr	w12, [x8, x12]
0000000000011778	cmp	w12, #0x41
000000000001177c	csinc	w10, w10, w11, ge
0000000000011780	csel	w9, w9, w11, lt
0000000000011784	cmp	w10, w9
0000000000011788	b.lt	0x11760
000000000001178c	sxtw	x9, w10
0000000000011790	lsl	x9, x9, #4
0000000000011794	ldr	w8, [x8, x9]
0000000000011798	cmp	w8, #0x41
000000000001179c	b.ne	0x11f48
00000000000117a0	b	0x117d4
00000000000117a4	mov	w10, #0x0
00000000000117a8	sxtw	x9, w10
00000000000117ac	lsl	x9, x9, #4
00000000000117b0	ldr	w8, [x8, x9]
00000000000117b4	cmp	w8, #0x41
00000000000117b8	b.ne	0x11f48
00000000000117bc	b	0x117d4
00000000000117c0	sxtw	x9, w10
00000000000117c4	lsl	x9, x9, #4
00000000000117c8	ldr	w8, [x8, x9]
00000000000117cc	cmp	w8, #0x41
00000000000117d0	b.ne	0x11f48
00000000000117d4	mov	x0, #0x0
00000000000117d8	ldar	x8, [x19]
00000000000117dc	ands	x8, x8, #0xfffffffffffffffc
00000000000117e0	b.eq	0x117f8
00000000000117e4	ldr	x9, [x8]
00000000000117e8	cmp	x9, x8
00000000000117ec	b.eq	0x117f8
00000000000117f0	add	x8, x8, #0x10
00000000000117f4	ldar	x0, [x8]
00000000000117f8	nop
00000000000117fc	ldr	x1, #0x58dec ; Objc selector ref: count
0000000000011800	bl	0x51b78 ; Objc message: -[x0 count]
0000000000011804	lsr	x8, x0, #31
0000000000011808	cbnz	x8, 0x11f74
000000000001180c	mov	x21, x0
0000000000011810	ldr	x8, [x20]
0000000000011814	and	x8, x8, #0xfffffffffffffffc
0000000000011818	ldr	x8, [x8]
000000000001181c	ldr	w9, [x8, #0x3c]
0000000000011820	ldr	x8, [x8, #0x40]
0000000000011824	tbnz	w9, #0x1f, 0x11834
0000000000011828	mov	w10, #0x41
000000000001182c	and	x9, x9, x10
0000000000011830	b	0x118b8
0000000000011834	neg	w10, w9
0000000000011838	mvn	w9, w9
000000000001183c	cmp	w10, #0x9
0000000000011840	b.ge	0x11878
0000000000011844	cmp	w10, #0x2
0000000000011848	b.lt	0x118ac
000000000001184c	mov	x10, #0x0
0000000000011850	mov	x11, x8
0000000000011854	ldr	w12, [x11]
0000000000011858	cmp	w12, #0x40
000000000001185c	b.gt	0x118b4
0000000000011860	add	x10, x10, #0x1
0000000000011864	add	x11, x11, #0x10
0000000000011868	cmp	x9, x10
000000000001186c	b.ne	0x11854
0000000000011870	mov	x10, x9
0000000000011874	b	0x118b4
0000000000011878	mov	w10, #0x0
000000000001187c	add	w11, w9, w10
0000000000011880	cmp	w11, #0x0
0000000000011884	cinc	w11, w11, lt
0000000000011888	asr	w11, w11, #1
000000000001188c	sbfiz	x12, x11, #4, #32
0000000000011890	ldr	w12, [x8, x12]
0000000000011894	cmp	w12, #0x41
0000000000011898	csinc	w10, w10, w11, ge
000000000001189c	csel	w9, w9, w11, lt
00000000000118a0	cmp	w10, w9
00000000000118a4	b.lt	0x1187c
00000000000118a8	b	0x118b4
00000000000118ac	mov	w10, #0x0
00000000000118b0	b	0x118b4
00000000000118b4	sxtw	x9, w10
00000000000118b8	add	x8, x8, x9, lsl #4
00000000000118bc	ldr	x8, [x8, #0x8]
00000000000118c0	ldr	x8, [x8, #0x10]
00000000000118c4	mov	x0, x20
00000000000118c8	blr	x8
00000000000118cc	cmp	w0, w21
00000000000118d0	b.ne	0x11f48
00000000000118d4	add	x1, x22, #0x18
00000000000118d8	ldr	x8, [x20]
00000000000118dc	and	x8, x8, #0xfffffffffffffffc
00000000000118e0	ldr	x8, [x8]
00000000000118e4	ldr	w9, [x8, #0x3c]
00000000000118e8	ldr	x8, [x8, #0x40]
00000000000118ec	tbnz	w9, #0x1f, 0x118fc
00000000000118f0	mov	w10, #0x41
00000000000118f4	and	x9, x9, x10
00000000000118f8	b	0x11980
00000000000118fc	neg	w10, w9
0000000000011900	mvn	w9, w9
0000000000011904	cmp	w10, #0x9
0000000000011908	b.ge	0x11940
000000000001190c	cmp	w10, #0x2
0000000000011910	b.lt	0x11974
0000000000011914	mov	x10, #0x0
0000000000011918	mov	x11, x8
000000000001191c	ldr	w12, [x11]
0000000000011920	cmp	w12, #0x40
0000000000011924	b.gt	0x1197c
0000000000011928	add	x10, x10, #0x1
000000000001192c	add	x11, x11, #0x10
0000000000011930	cmp	x9, x10
0000000000011934	b.ne	0x1191c
0000000000011938	mov	x10, x9
000000000001193c	b	0x1197c
0000000000011940	mov	w10, #0x0
0000000000011944	add	w11, w9, w10
0000000000011948	cmp	w11, #0x0
000000000001194c	cinc	w11, w11, lt
0000000000011950	asr	w11, w11, #1
0000000000011954	sbfiz	x12, x11, #4, #32
0000000000011958	ldr	w12, [x8, x12]
000000000001195c	cmp	w12, #0x41
0000000000011960	csinc	w10, w10, w11, ge
0000000000011964	csel	w9, w9, w11, lt
0000000000011968	cmp	w10, w9
000000000001196c	b.lt	0x11944
0000000000011970	b	0x1197c
0000000000011974	mov	w10, #0x0
0000000000011978	b	0x1197c
000000000001197c	sxtw	x9, w10
0000000000011980	add	x8, x8, x9, lsl #4
0000000000011984	ldr	x8, [x8, #0x8]
0000000000011988	ldr	x8, [x8]
000000000001198c	mov	x0, x20
0000000000011990	blr	x8
0000000000011994	mov	x23, x0
0000000000011998	cbz	x0, 0x11b2c
000000000001199c	ldr	x8, [x23]
00000000000119a0	and	x8, x8, #0xfffffffffffffffc
00000000000119a4	ldr	x8, [x8]
00000000000119a8	ldr	w9, [x8, #0x3c]
00000000000119ac	ldr	x8, [x8, #0x40]
00000000000119b0	tbnz	w9, #0x1f, 0x119d0
00000000000119b4	mov	w10, #0x12
00000000000119b8	and	x9, x9, x10
00000000000119bc	lsl	x9, x9, #4
00000000000119c0	ldr	w8, [x8, x9]
00000000000119c4	cmp	w8, #0x12
00000000000119c8	b.ne	0x11b2c
00000000000119cc	b	0x11a64
00000000000119d0	neg	w10, w9
00000000000119d4	mvn	w9, w9
00000000000119d8	cmp	w10, #0x9
00000000000119dc	b.ge	0x11a14
00000000000119e0	cmp	w10, #0x2
00000000000119e4	b.lt	0x11a48
00000000000119e8	mov	x10, #0x0
00000000000119ec	mov	x11, x8
00000000000119f0	ldr	w12, [x11]
00000000000119f4	cmp	w12, #0x11
00000000000119f8	b.gt	0x11a50
00000000000119fc	add	x10, x10, #0x1
0000000000011a00	add	x11, x11, #0x10
0000000000011a04	cmp	x9, x10
0000000000011a08	b.ne	0x119f0
0000000000011a0c	mov	x10, x9
0000000000011a10	b	0x11a50
0000000000011a14	mov	w10, #0x0
0000000000011a18	add	w11, w9, w10
0000000000011a1c	cmp	w11, #0x0
0000000000011a20	cinc	w11, w11, lt
0000000000011a24	asr	w11, w11, #1
0000000000011a28	sbfiz	x12, x11, #4, #32
0000000000011a2c	ldr	w12, [x8, x12]
0000000000011a30	cmp	w12, #0x12
0000000000011a34	csinc	w10, w10, w11, ge
0000000000011a38	csel	w9, w9, w11, lt
0000000000011a3c	cmp	w10, w9
0000000000011a40	b.lt	0x11a18
0000000000011a44	b	0x11a50
0000000000011a48	mov	w10, #0x0
0000000000011a4c	b	0x11a50
0000000000011a50	sxtw	x9, w10
0000000000011a54	lsl	x9, x9, #4
0000000000011a58	ldr	w8, [x8, x9]
0000000000011a5c	cmp	w8, #0x12
0000000000011a60	b.ne	0x11b2c
0000000000011a64	ldr	x8, [x23]
0000000000011a68	and	x8, x8, #0xfffffffffffffffc
0000000000011a6c	ldr	x8, [x8]
0000000000011a70	ldr	w9, [x8, #0x3c]
0000000000011a74	ldr	x8, [x8, #0x40]
0000000000011a78	tbnz	w9, #0x1f, 0x11a88
0000000000011a7c	mov	w10, #0x12
0000000000011a80	and	x9, x9, x10
0000000000011a84	b	0x11b0c
0000000000011a88	neg	w10, w9
0000000000011a8c	mvn	w9, w9
0000000000011a90	cmp	w10, #0x9
0000000000011a94	b.ge	0x11acc
0000000000011a98	cmp	w10, #0x2
0000000000011a9c	b.lt	0x11b00
0000000000011aa0	mov	x10, #0x0
0000000000011aa4	mov	x11, x8
0000000000011aa8	ldr	w12, [x11]
0000000000011aac	cmp	w12, #0x11
0000000000011ab0	b.gt	0x11b08
0000000000011ab4	add	x10, x10, #0x1
0000000000011ab8	add	x11, x11, #0x10
0000000000011abc	cmp	x9, x10
0000000000011ac0	b.ne	0x11aa8
0000000000011ac4	mov	x10, x9
0000000000011ac8	b	0x11b08
0000000000011acc	mov	w10, #0x0
0000000000011ad0	add	w11, w9, w10
0000000000011ad4	cmp	w11, #0x0
0000000000011ad8	cinc	w11, w11, lt
0000000000011adc	asr	w11, w11, #1
0000000000011ae0	sbfiz	x12, x11, #4, #32
0000000000011ae4	ldr	w12, [x8, x12]
0000000000011ae8	cmp	w12, #0x12
0000000000011aec	csinc	w10, w10, w11, ge
0000000000011af0	csel	w9, w9, w11, lt
0000000000011af4	cmp	w10, w9
0000000000011af8	b.lt	0x11ad0
0000000000011afc	b	0x11b08
0000000000011b00	mov	w10, #0x0
0000000000011b04	b	0x11b08
0000000000011b08	sxtw	x9, w10
0000000000011b0c	add	x8, x8, x9, lsl #4
0000000000011b10	ldr	x8, [x8, #0x8]
0000000000011b14	ldr	x8, [x8, #0x18]
0000000000011b18	mov	x0, x23
0000000000011b1c	blr	x8
0000000000011b20	tbz	w0, #0x0, 0x11b2c
0000000000011b24	mov	w0, #0x1
0000000000011b28	b	0x11f4c
0000000000011b2c	add	x1, x22, #0x20
0000000000011b30	add	x20, x22, #0x30
0000000000011b34	add	x21, x22, #0x28
0000000000011b38	add	x22, x22, #0x38
0000000000011b3c	ldr	x8, [x23]
0000000000011b40	and	x8, x8, #0xfffffffffffffffc
0000000000011b44	ldr	x8, [x8]
0000000000011b48	ldr	w9, [x8, #0x3c]
0000000000011b4c	ldr	x8, [x8, #0x40]
0000000000011b50	tbnz	w9, #0x1f, 0x11b60
0000000000011b54	mov	w10, #0x31
0000000000011b58	and	x9, x9, x10
0000000000011b5c	b	0x11be4
0000000000011b60	neg	w10, w9
0000000000011b64	mvn	w9, w9
0000000000011b68	cmp	w10, #0x9
0000000000011b6c	b.ge	0x11ba4
0000000000011b70	cmp	w10, #0x2
0000000000011b74	b.lt	0x11bd8
0000000000011b78	mov	x10, #0x0
0000000000011b7c	mov	x11, x8
0000000000011b80	ldr	w12, [x11]
0000000000011b84	cmp	w12, #0x30
0000000000011b88	b.gt	0x11be0
0000000000011b8c	add	x10, x10, #0x1
0000000000011b90	add	x11, x11, #0x10
0000000000011b94	cmp	x9, x10
0000000000011b98	b.ne	0x11b80
0000000000011b9c	mov	x10, x9
0000000000011ba0	b	0x11be0
0000000000011ba4	mov	w10, #0x0
0000000000011ba8	add	w11, w9, w10
0000000000011bac	cmp	w11, #0x0
0000000000011bb0	cinc	w11, w11, lt
0000000000011bb4	asr	w11, w11, #1
0000000000011bb8	sbfiz	x12, x11, #4, #32
0000000000011bbc	ldr	w12, [x8, x12]
0000000000011bc0	cmp	w12, #0x31
0000000000011bc4	csinc	w10, w10, w11, ge
0000000000011bc8	csel	w9, w9, w11, lt
0000000000011bcc	cmp	w10, w9
0000000000011bd0	b.lt	0x11ba8
0000000000011bd4	b	0x11be0
0000000000011bd8	mov	w10, #0x0
0000000000011bdc	b	0x11be0
0000000000011be0	sxtw	x9, w10
0000000000011be4	add	x8, x8, x9, lsl #4
0000000000011be8	ldr	x8, [x8, #0x8]
0000000000011bec	ldr	x8, [x8]
0000000000011bf0	mov	x0, x23
0000000000011bf4	blr	x8
0000000000011bf8	mov	x23, x0
0000000000011bfc	mov	w28, #0xa0
0000000000011c00	mov	w27, #0xa8
0000000000011c04	b	0x11c38
0000000000011c08	and	x9, x9, x27
0000000000011c0c	add	x8, x8, x9, lsl #4
0000000000011c10	ldr	x8, [x8, #0x8]
0000000000011c14	ldr	x8, [x8, #0x8]
0000000000011c18	mov	x0, x24
0000000000011c1c	mov	x1, x22
0000000000011c20	blr	x8
0000000000011c24	mov	x2, x0
0000000000011c28	mov	x0, x19
0000000000011c2c	mov	x1, x25
0000000000011c30	bl	_Kotlin_NSDictionaryAsKMap_containsEntry
0000000000011c34	tbz	w0, #0x0, 0x11f48
0000000000011c38	ldr	x8, [x23]
0000000000011c3c	and	x8, x8, #0xfffffffffffffffc
0000000000011c40	ldr	x8, [x8]
0000000000011c44	ldr	w9, [x8, #0x3c]
0000000000011c48	ldr	x8, [x8, #0x40]
0000000000011c4c	tbnz	w9, #0x1f, 0x11c70
0000000000011c50	and	x9, x9, x28
0000000000011c54	add	x8, x8, x9, lsl #4
0000000000011c58	ldr	x8, [x8, #0x8]
0000000000011c5c	ldr	x8, [x8]
0000000000011c60	mov	x0, x23
0000000000011c64	blr	x8
0000000000011c68	tbnz	w0, #0x0, 0x11d0c
0000000000011c6c	b	0x11b24
0000000000011c70	neg	w10, w9
0000000000011c74	mvn	w9, w9
0000000000011c78	cmp	w10, #0x9
0000000000011c7c	b.ge	0x11cb4
0000000000011c80	cmp	w10, #0x2
0000000000011c84	b.lt	0x11ce8
0000000000011c88	mov	x10, #0x0
0000000000011c8c	mov	x11, x8
0000000000011c90	ldr	w12, [x11]
0000000000011c94	cmp	w12, #0x9f
0000000000011c98	b.gt	0x11cf0
0000000000011c9c	add	x10, x10, #0x1
0000000000011ca0	add	x11, x11, #0x10
0000000000011ca4	cmp	x9, x10
0000000000011ca8	b.ne	0x11c90
0000000000011cac	mov	x10, x9
0000000000011cb0	b	0x11cf0
0000000000011cb4	mov	w10, #0x0
0000000000011cb8	add	w11, w9, w10
0000000000011cbc	cmp	w11, #0x0
0000000000011cc0	cinc	w11, w11, lt
0000000000011cc4	asr	w11, w11, #1
0000000000011cc8	sbfiz	x12, x11, #4, #32
0000000000011ccc	ldr	w12, [x8, x12]
0000000000011cd0	cmp	w12, #0xa0
0000000000011cd4	csinc	w10, w10, w11, ge
0000000000011cd8	csel	w9, w9, w11, lt
0000000000011cdc	cmp	w10, w9
0000000000011ce0	b.lt	0x11cb8
0000000000011ce4	b	0x11cf0
0000000000011ce8	mov	w10, #0x0
0000000000011cec	b	0x11cf0
0000000000011cf0	sxtw	x9, w10
0000000000011cf4	add	x8, x8, x9, lsl #4
0000000000011cf8	ldr	x8, [x8, #0x8]
0000000000011cfc	ldr	x8, [x8]
0000000000011d00	mov	x0, x23
0000000000011d04	blr	x8
0000000000011d08	tbz	w0, #0x0, 0x11b24
0000000000011d0c	adr	x8, #0x74d37
0000000000011d10	nop
0000000000011d14	ldarb	w8, [x8]
0000000000011d18	tbz	w8, #0x0, 0x11d20
0000000000011d1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011d20	ldr	x8, [x23]
0000000000011d24	and	x8, x8, #0xfffffffffffffffc
0000000000011d28	ldr	x8, [x8]
0000000000011d2c	ldr	w9, [x8, #0x3c]
0000000000011d30	ldr	x8, [x8, #0x40]
0000000000011d34	tbnz	w9, #0x1f, 0x11d40
0000000000011d38	and	x9, x9, x28
0000000000011d3c	b	0x11dc4
0000000000011d40	neg	w10, w9
0000000000011d44	mvn	w9, w9
0000000000011d48	cmp	w10, #0x9
0000000000011d4c	b.ge	0x11d84
0000000000011d50	cmp	w10, #0x2
0000000000011d54	b.lt	0x11db8
0000000000011d58	mov	x10, #0x0
0000000000011d5c	mov	x11, x8
0000000000011d60	ldr	w12, [x11]
0000000000011d64	cmp	w12, #0x9f
0000000000011d68	b.gt	0x11dc0
0000000000011d6c	add	x10, x10, #0x1
0000000000011d70	add	x11, x11, #0x10
0000000000011d74	cmp	x9, x10
0000000000011d78	b.ne	0x11d60
0000000000011d7c	mov	x10, x9
0000000000011d80	b	0x11dc0
0000000000011d84	mov	w10, #0x0
0000000000011d88	add	w11, w9, w10
0000000000011d8c	cmp	w11, #0x0
0000000000011d90	cinc	w11, w11, lt
0000000000011d94	asr	w11, w11, #1
0000000000011d98	sbfiz	x12, x11, #4, #32
0000000000011d9c	ldr	w12, [x8, x12]
0000000000011da0	cmp	w12, #0xa0
0000000000011da4	csinc	w10, w10, w11, ge
0000000000011da8	csel	w9, w9, w11, lt
0000000000011dac	cmp	w10, w9
0000000000011db0	b.lt	0x11d88
0000000000011db4	b	0x11dc0
0000000000011db8	mov	w10, #0x0
0000000000011dbc	b	0x11dc0
0000000000011dc0	sxtw	x9, w10
0000000000011dc4	add	x8, x8, x9, lsl #4
0000000000011dc8	ldr	x8, [x8, #0x8]
0000000000011dcc	ldr	x8, [x8, #0x8]
0000000000011dd0	mov	x0, x23
0000000000011dd4	mov	x1, x21
0000000000011dd8	blr	x8
0000000000011ddc	mov	x24, x0
0000000000011de0	ldr	x8, [x0]
0000000000011de4	and	x8, x8, #0xfffffffffffffffc
0000000000011de8	ldr	x8, [x8]
0000000000011dec	ldr	w9, [x8, #0x3c]
0000000000011df0	ldr	x8, [x8, #0x40]
0000000000011df4	tbnz	w9, #0x1f, 0x11e00
0000000000011df8	and	x9, x9, x27
0000000000011dfc	b	0x11e84
0000000000011e00	neg	w10, w9
0000000000011e04	mvn	w9, w9
0000000000011e08	cmp	w10, #0x9
0000000000011e0c	b.ge	0x11e44
0000000000011e10	cmp	w10, #0x2
0000000000011e14	b.lt	0x11e78
0000000000011e18	mov	x10, #0x0
0000000000011e1c	mov	x11, x8
0000000000011e20	ldr	w12, [x11]
0000000000011e24	cmp	w12, #0xa7
0000000000011e28	b.gt	0x11e80
0000000000011e2c	add	x10, x10, #0x1
0000000000011e30	add	x11, x11, #0x10
0000000000011e34	cmp	x9, x10
0000000000011e38	b.ne	0x11e20
0000000000011e3c	mov	x10, x9
0000000000011e40	b	0x11e80
0000000000011e44	mov	w10, #0x0
0000000000011e48	add	w11, w9, w10
0000000000011e4c	cmp	w11, #0x0
0000000000011e50	cinc	w11, w11, lt
0000000000011e54	asr	w11, w11, #1
0000000000011e58	sbfiz	x12, x11, #4, #32
0000000000011e5c	ldr	w12, [x8, x12]
0000000000011e60	cmp	w12, #0xa8
0000000000011e64	csinc	w10, w10, w11, ge
0000000000011e68	csel	w9, w9, w11, lt
0000000000011e6c	cmp	w10, w9
0000000000011e70	b.lt	0x11e48
0000000000011e74	b	0x11e80
0000000000011e78	mov	w10, #0x0
0000000000011e7c	b	0x11e80
0000000000011e80	sxtw	x9, w10
0000000000011e84	add	x8, x8, x9, lsl #4
0000000000011e88	ldr	x8, [x8, #0x8]
0000000000011e8c	ldr	x8, [x8]
0000000000011e90	mov	x0, x24
0000000000011e94	mov	x1, x20
0000000000011e98	blr	x8
0000000000011e9c	mov	x25, x0
0000000000011ea0	ldr	x8, [x24]
0000000000011ea4	and	x8, x8, #0xfffffffffffffffc
0000000000011ea8	ldr	x8, [x8]
0000000000011eac	ldr	w9, [x8, #0x3c]
0000000000011eb0	ldr	x8, [x8, #0x40]
0000000000011eb4	tbz	w9, #0x1f, 0x11c08
0000000000011eb8	neg	w10, w9
0000000000011ebc	mvn	w9, w9
0000000000011ec0	cmp	w10, #0x9
0000000000011ec4	b.ge	0x11f00
0000000000011ec8	cmp	w10, #0x2
0000000000011ecc	b.lt	0x11f34
0000000000011ed0	mov	x10, #0x0
0000000000011ed4	mov	x11, x8
0000000000011ed8	ldr	w12, [x11]
0000000000011edc	cmp	w12, #0xa7
0000000000011ee0	b.gt	0x11f40
0000000000011ee4	add	x10, x10, #0x1
0000000000011ee8	add	x11, x11, #0x10
0000000000011eec	cmp	x9, x10
0000000000011ef0	b.ne	0x11ed8
0000000000011ef4	mov	x10, x9
0000000000011ef8	sxtw	x9, w10
0000000000011efc	b	0x11c0c
0000000000011f00	mov	w10, #0x0
0000000000011f04	add	w11, w9, w10
0000000000011f08	cmp	w11, #0x0
0000000000011f0c	cinc	w11, w11, lt
0000000000011f10	asr	w11, w11, #1
0000000000011f14	sbfiz	x12, x11, #4, #32
0000000000011f18	ldr	w12, [x8, x12]
0000000000011f1c	cmp	w12, #0xa8
0000000000011f20	csinc	w10, w10, w11, ge
0000000000011f24	csel	w9, w9, w11, lt
0000000000011f28	cmp	w10, w9
0000000000011f2c	b.lt	0x11f04
0000000000011f30	b	0x11f40
0000000000011f34	mov	w10, #0x0
0000000000011f38	sxtw	x9, w10
0000000000011f3c	b	0x11c0c
0000000000011f40	sxtw	x9, w10
0000000000011f44	b	0x11c0c
0000000000011f48	mov	w0, #0x0
0000000000011f4c	ldr	x8, [sp, #0x8]
0000000000011f50	str	x8, [x26, #0x110]
0000000000011f54	ldp	x29, x30, [sp, #0x90]
0000000000011f58	ldp	x20, x19, [sp, #0x80]
0000000000011f5c	ldp	x22, x21, [sp, #0x70]
0000000000011f60	ldp	x24, x23, [sp, #0x60]
0000000000011f64	ldp	x26, x25, [sp, #0x50]
0000000000011f68	ldp	x28, x27, [sp, #0x40]
0000000000011f6c	add	sp, sp, #0xa0
0000000000011f70	ret
0000000000011f74	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#hashCode(){}kotlin.Int:
0000000000011f78	sub	sp, sp, #0x90
0000000000011f7c	stp	x28, x27, [sp, #0x30]
0000000000011f80	stp	x26, x25, [sp, #0x40]
0000000000011f84	stp	x24, x23, [sp, #0x50]
0000000000011f88	stp	x22, x21, [sp, #0x60]
0000000000011f8c	stp	x20, x19, [sp, #0x70]
0000000000011f90	stp	x29, x30, [sp, #0x80]
0000000000011f94	add	x29, sp, #0x80
0000000000011f98	mov	x19, x0
0000000000011f9c	movi.16b	v0, #0x0
0000000000011fa0	stp	q0, q0, [sp]
0000000000011fa4	str	q0, [sp, #0x20]
0000000000011fa8	mov	x8, sp
0000000000011fac	add	x20, x8, #0x20
0000000000011fb0	add	x22, x8, #0x18
0000000000011fb4	add	x21, x8, #0x28
0000000000011fb8	adrp	x0, 91 ; 0x6c000
0000000000011fbc	add	x0, x0, #0xbb0
0000000000011fc0	ldr	x9, [x0]
0000000000011fc4	blr	x9
0000000000011fc8	ldr	x26, [x0]
0000000000011fcc	ldr	x9, [x26, #0x110]
0000000000011fd0	str	x8, [x26, #0x110]
0000000000011fd4	mov	x8, #0x600000000
0000000000011fd8	stp	x9, x8, [sp, #0x8]
0000000000011fdc	adr	x27, #0x74a67
0000000000011fe0	nop
0000000000011fe4	ldarb	w8, [x27]
0000000000011fe8	tbz	w8, #0x0, 0x11ff0
0000000000011fec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011ff0	mov	x0, x19
0000000000011ff4	mov	x1, x22
0000000000011ff8	bl	_Kotlin_NSDictionaryAsKMap_keyIterator
0000000000011ffc	mov	x23, x0
0000000000012000	mov	w22, #0x0
0000000000012004	mov	w28, #0xa0
0000000000012008	b	0x12040
000000000001200c	mov	w24, #0x0
0000000000012010	mov	x0, x19
0000000000012014	mov	x1, x25
0000000000012018	mov	x2, x21
000000000001201c	bl	_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification
0000000000012020	cbz	x0, 0x12038
0000000000012024	ldr	x8, [x0]
0000000000012028	and	x8, x8, #0xfffffffffffffffc
000000000001202c	ldr	x8, [x8]
0000000000012030	ldr	x8, [x8, #0x78]
0000000000012034	blr	x8
0000000000012038	eor	w8, w24, w0
000000000001203c	add	w22, w22, w8
0000000000012040	ldr	x8, [x23]
0000000000012044	and	x8, x8, #0xfffffffffffffffc
0000000000012048	ldr	x8, [x8]
000000000001204c	ldr	w9, [x8, #0x3c]
0000000000012050	ldr	x8, [x8, #0x40]
0000000000012054	tbnz	w9, #0x1f, 0x12078
0000000000012058	and	x9, x9, x28
000000000001205c	add	x8, x8, x9, lsl #4
0000000000012060	ldr	x8, [x8, #0x8]
0000000000012064	ldr	x8, [x8]
0000000000012068	mov	x0, x23
000000000001206c	blr	x8
0000000000012070	tbnz	w0, #0x0, 0x12114
0000000000012074	b	0x12218
0000000000012078	neg	w10, w9
000000000001207c	mvn	w9, w9
0000000000012080	cmp	w10, #0x9
0000000000012084	b.ge	0x120bc
0000000000012088	cmp	w10, #0x2
000000000001208c	b.lt	0x120f0
0000000000012090	mov	x10, #0x0
0000000000012094	mov	x11, x8
0000000000012098	ldr	w12, [x11]
000000000001209c	cmp	w12, #0x9f
00000000000120a0	b.gt	0x120f8
00000000000120a4	add	x10, x10, #0x1
00000000000120a8	add	x11, x11, #0x10
00000000000120ac	cmp	x9, x10
00000000000120b0	b.ne	0x12098
00000000000120b4	mov	x10, x9
00000000000120b8	b	0x120f8
00000000000120bc	mov	w10, #0x0
00000000000120c0	add	w11, w9, w10
00000000000120c4	cmp	w11, #0x0
00000000000120c8	cinc	w11, w11, lt
00000000000120cc	asr	w11, w11, #1
00000000000120d0	sbfiz	x12, x11, #4, #32
00000000000120d4	ldr	w12, [x8, x12]
00000000000120d8	cmp	w12, #0xa0
00000000000120dc	csinc	w10, w10, w11, ge
00000000000120e0	csel	w9, w9, w11, lt
00000000000120e4	cmp	w10, w9
00000000000120e8	b.lt	0x120c0
00000000000120ec	b	0x120f8
00000000000120f0	mov	w10, #0x0
00000000000120f4	b	0x120f8
00000000000120f8	sxtw	x9, w10
00000000000120fc	add	x8, x8, x9, lsl #4
0000000000012100	ldr	x8, [x8, #0x8]
0000000000012104	ldr	x8, [x8]
0000000000012108	mov	x0, x23
000000000001210c	blr	x8
0000000000012110	tbz	w0, #0x0, 0x12218
0000000000012114	ldarb	w8, [x27]
0000000000012118	tbz	w8, #0x0, 0x12120
000000000001211c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012120	ldr	x8, [x23]
0000000000012124	and	x8, x8, #0xfffffffffffffffc
0000000000012128	ldr	x8, [x8]
000000000001212c	ldr	w9, [x8, #0x3c]
0000000000012130	ldr	x8, [x8, #0x40]
0000000000012134	tbnz	w9, #0x1f, 0x12140
0000000000012138	and	x9, x9, x28
000000000001213c	b	0x121c4
0000000000012140	neg	w10, w9
0000000000012144	mvn	w9, w9
0000000000012148	cmp	w10, #0x9
000000000001214c	b.ge	0x12184
0000000000012150	cmp	w10, #0x2
0000000000012154	b.lt	0x121b8
0000000000012158	mov	x10, #0x0
000000000001215c	mov	x11, x8
0000000000012160	ldr	w12, [x11]
0000000000012164	cmp	w12, #0x9f
0000000000012168	b.gt	0x121c0
000000000001216c	add	x10, x10, #0x1
0000000000012170	add	x11, x11, #0x10
0000000000012174	cmp	x9, x10
0000000000012178	b.ne	0x12160
000000000001217c	mov	x10, x9
0000000000012180	b	0x121c0
0000000000012184	mov	w10, #0x0
0000000000012188	add	w11, w9, w10
000000000001218c	cmp	w11, #0x0
0000000000012190	cinc	w11, w11, lt
0000000000012194	asr	w11, w11, #1
0000000000012198	sbfiz	x12, x11, #4, #32
000000000001219c	ldr	w12, [x8, x12]
00000000000121a0	cmp	w12, #0xa0
00000000000121a4	csinc	w10, w10, w11, ge
00000000000121a8	csel	w9, w9, w11, lt
00000000000121ac	cmp	w10, w9
00000000000121b0	b.lt	0x12188
00000000000121b4	b	0x121c0
00000000000121b8	mov	w10, #0x0
00000000000121bc	b	0x121c0
00000000000121c0	sxtw	x9, w10
00000000000121c4	add	x8, x8, x9, lsl #4
00000000000121c8	ldr	x8, [x8, #0x8]
00000000000121cc	ldr	x8, [x8, #0x8]
00000000000121d0	mov	x0, x23
00000000000121d4	mov	x1, x20
00000000000121d8	blr	x8
00000000000121dc	mov	x25, x0
00000000000121e0	cbz	x0, 0x1200c
00000000000121e4	ldr	x8, [x25]
00000000000121e8	and	x8, x8, #0xfffffffffffffffc
00000000000121ec	ldr	x8, [x8]
00000000000121f0	ldr	x8, [x8, #0x78]
00000000000121f4	mov	x0, x25
00000000000121f8	blr	x8
00000000000121fc	mov	x24, x0
0000000000012200	mov	x0, x19
0000000000012204	mov	x1, x25
0000000000012208	mov	x2, x21
000000000001220c	bl	_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification
0000000000012210	cbnz	x0, 0x12024
0000000000012214	b	0x12038
0000000000012218	ldr	x8, [sp, #0x8]
000000000001221c	str	x8, [x26, #0x110]
0000000000012220	mov	x0, x22
0000000000012224	ldp	x29, x30, [sp, #0x80]
0000000000012228	ldp	x20, x19, [sp, #0x70]
000000000001222c	ldp	x22, x21, [sp, #0x60]
0000000000012230	ldp	x24, x23, [sp, #0x50]
0000000000012234	ldp	x26, x25, [sp, #0x40]
0000000000012238	ldp	x28, x27, [sp, #0x30]
000000000001223c	add	sp, sp, #0x90
0000000000012240	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#toString(){}kotlin.String:
0000000000012244	sub	sp, sp, #0x60
0000000000012248	stp	x22, x21, [sp, #0x30]
000000000001224c	stp	x20, x19, [sp, #0x40]
0000000000012250	stp	x29, x30, [sp, #0x50]
0000000000012254	add	x29, sp, #0x50
0000000000012258	mov	x19, x1
000000000001225c	mov	x20, x0
0000000000012260	movi.16b	v0, #0x0
0000000000012264	stp	q0, q0, [sp]
0000000000012268	str	xzr, [sp, #0x20]
000000000001226c	adrp	x0, 90 ; 0x6c000
0000000000012270	add	x0, x0, #0xbb0
0000000000012274	ldr	x8, [x0]
0000000000012278	blr	x8
000000000001227c	ldr	x22, [x0]
0000000000012280	ldr	x8, [x22, #0x110]
0000000000012284	mov	x9, sp
0000000000012288	str	x9, [x22, #0x110]
000000000001228c	mov	x9, #0x500000000
0000000000012290	stp	x8, x9, [sp, #0x8]
0000000000012294	adr	x8, #0x747af
0000000000012298	nop
000000000001229c	ldarb	w8, [x8]
00000000000122a0	tbz	w8, #0x0, 0x122a8
00000000000122a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000122a8	ldr	x8, [x22, #0x118]
00000000000122ac	add	x0, x8, #0x70
00000000000122b0	mov	w1, #0x18
00000000000122b4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000122b8	mov	x21, x0
00000000000122bc	adr	x8, #0x486e4
00000000000122c0	nop
00000000000122c4	str	x8, [x21, #0x10]!
00000000000122c8	stur	xzr, [x21, #-0x8]
00000000000122cc	str	x21, [sp, #0x18]
00000000000122d0	str	x20, [x21, #0x8]
00000000000122d4	str	x21, [sp, #0x18]
00000000000122d8	ldr	x8, [x22, #0x118]
00000000000122dc	add	x0, x8, #0x70
00000000000122e0	mov	w1, #0x18
00000000000122e4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000122e8	adr	x8, #0x48898
00000000000122ec	nop
00000000000122f0	mov	x3, x0
00000000000122f4	str	x8, [x3, #0x10]!
00000000000122f8	stur	xzr, [x3, #-0x8]
00000000000122fc	str	x3, [sp, #0x20]
0000000000012300	str	x20, [x3, #0x8]
0000000000012304	adr	x1, #0x5366c
0000000000012308	nop
000000000001230c	adr	x2, #0x53684
0000000000012310	nop
0000000000012314	mov	x0, x21
0000000000012318	mov	x4, x19
000000000001231c	bl	"_kfun:kotlin.collections#joinToString$default__at__kotlin.collections.Iterable<0:0>(kotlin.CharSequence?;kotlin.CharSequence?;kotlin.CharSequence?;kotlin.Int;kotlin.CharSequence?;kotlin.Function1<0:0,kotlin.CharSequence>?;kotlin.Int){0ยง<kotlin.Any?>}kotlin.String"
0000000000012320	str	x0, [x19]
0000000000012324	ldr	x8, [sp, #0x8]
0000000000012328	str	x8, [x22, #0x110]
000000000001232c	ldp	x29, x30, [sp, #0x50]
0000000000012330	ldp	x20, x19, [sp, #0x40]
0000000000012334	ldp	x22, x21, [sp, #0x30]
0000000000012338	add	sp, sp, #0x60
000000000001233c	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-size>(){}kotlin.Int:
0000000000012340	stp	x20, x19, [sp, #-0x20]!
0000000000012344	stp	x29, x30, [sp, #0x10]
0000000000012348	add	x29, sp, #0x10
000000000001234c	mov	x19, x0
0000000000012350	adr	x8, #0x746f3
0000000000012354	nop
0000000000012358	ldarb	w8, [x8]
000000000001235c	tbz	w8, #0x0, 0x12364
0000000000012360	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012364	ldar	x8, [x19]
0000000000012368	and	x8, x8, #0xfffffffffffffffc
000000000001236c	ldr	x9, [x8]
0000000000012370	cmp	x8, #0x0
0000000000012374	ccmp	x9, x8, #0x4, ne
0000000000012378	b.ne	0x12384
000000000001237c	mov	x0, #0x0
0000000000012380	b	0x1238c
0000000000012384	add	x8, x8, #0x10
0000000000012388	ldar	x0, [x8]
000000000001238c	nop
0000000000012390	ldr	x1, #0x58258 ; Objc selector ref: count
0000000000012394	bl	0x51b78 ; Objc message: -[x0 count]
0000000000012398	lsr	x8, x0, #31
000000000001239c	cbnz	x8, 0x123ac
00000000000123a0	ldp	x29, x30, [sp, #0x10]
00000000000123a4	ldp	x20, x19, [sp], #0x20
00000000000123a8	ret
00000000000123ac	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#isEmpty(){}kotlin.Boolean:
00000000000123b0	stp	x20, x19, [sp, #-0x20]!
00000000000123b4	stp	x29, x30, [sp, #0x10]
00000000000123b8	add	x29, sp, #0x10
00000000000123bc	mov	x19, x0
00000000000123c0	adr	x8, #0x74683
00000000000123c4	nop
00000000000123c8	ldarb	w8, [x8]
00000000000123cc	tbz	w8, #0x0, 0x123d4
00000000000123d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000123d4	ldar	x8, [x19]
00000000000123d8	and	x8, x8, #0xfffffffffffffffc
00000000000123dc	ldr	x9, [x8]
00000000000123e0	cmp	x8, #0x0
00000000000123e4	ccmp	x9, x8, #0x4, ne
00000000000123e8	b.ne	0x123f4
00000000000123ec	mov	x0, #0x0
00000000000123f0	b	0x123fc
00000000000123f4	add	x8, x8, #0x10
00000000000123f8	ldar	x0, [x8]
00000000000123fc	nop
0000000000012400	ldr	x1, #0x581e8 ; Objc selector ref: count
0000000000012404	bl	0x51b78 ; Objc message: -[x0 count]
0000000000012408	lsr	x8, x0, #31
000000000001240c	cbnz	x8, 0x12424
0000000000012410	cmp	w0, #0x0
0000000000012414	cset	w0, eq
0000000000012418	ldp	x29, x30, [sp, #0x10]
000000000001241c	ldp	x20, x19, [sp], #0x20
0000000000012420	ret
0000000000012424	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-keys>(){}kotlin.collections.Set<kotlin.Any?>:
0000000000012428	stp	x20, x19, [sp, #-0x20]!
000000000001242c	stp	x29, x30, [sp, #0x10]
0000000000012430	add	x29, sp, #0x10
0000000000012434	mov	x19, x1
0000000000012438	mov	x20, x0
000000000001243c	adr	x8, #0x74607
0000000000012440	nop
0000000000012444	ldarb	w8, [x8]
0000000000012448	tbz	w8, #0x0, 0x12450
000000000001244c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012450	adrp	x0, 90 ; 0x6c000
0000000000012454	add	x0, x0, #0xbb0
0000000000012458	ldr	x8, [x0]
000000000001245c	blr	x8
0000000000012460	ldr	x8, [x0]
0000000000012464	ldr	x8, [x8, #0x118]
0000000000012468	add	x0, x8, #0x70
000000000001246c	mov	w1, #0x18
0000000000012470	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000012474	adr	x8, #0x483ac
0000000000012478	nop
000000000001247c	str	x8, [x0, #0x10]!
0000000000012480	stur	xzr, [x0, #-0x8]
0000000000012484	str	x0, [x19]
0000000000012488	str	x20, [x0, #0x8]
000000000001248c	str	x0, [x19]
0000000000012490	ldp	x29, x30, [sp, #0x10]
0000000000012494	ldp	x20, x19, [sp], #0x20
0000000000012498	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-values>(){}kotlin.collections.Collection<kotlin.Any?>:
000000000001249c	stp	x20, x19, [sp, #-0x20]!
00000000000124a0	stp	x29, x30, [sp, #0x10]
00000000000124a4	add	x29, sp, #0x10
00000000000124a8	mov	x19, x1
00000000000124ac	mov	x20, x0
00000000000124b0	adr	x8, #0x74593
00000000000124b4	nop
00000000000124b8	ldarb	w8, [x8]
00000000000124bc	tbz	w8, #0x0, 0x124c4
00000000000124c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000124c4	adrp	x0, 90 ; 0x6c000
00000000000124c8	add	x0, x0, #0xbb0
00000000000124cc	ldr	x8, [x0]
00000000000124d0	blr	x8
00000000000124d4	ldr	x8, [x0]
00000000000124d8	ldr	x8, [x8, #0x118]
00000000000124dc	add	x0, x8, #0x70
00000000000124e0	mov	w1, #0x18
00000000000124e4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000124e8	adr	x8, #0x483f8
00000000000124ec	nop
00000000000124f0	str	x8, [x0, #0x10]!
00000000000124f4	stur	xzr, [x0, #-0x8]
00000000000124f8	str	x0, [x19]
00000000000124fc	str	x20, [x0, #0x8]
0000000000012500	str	x0, [x19]
0000000000012504	ldp	x29, x30, [sp, #0x10]
0000000000012508	ldp	x20, x19, [sp], #0x20
000000000001250c	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-entries>(){}kotlin.collections.Set<kotlin.collections.Map.Entry<kotlin.Any?,kotlin.Any?>>:
0000000000012510	stp	x20, x19, [sp, #-0x20]!
0000000000012514	stp	x29, x30, [sp, #0x10]
0000000000012518	add	x29, sp, #0x10
000000000001251c	mov	x19, x1
0000000000012520	mov	x20, x0
0000000000012524	adr	x8, #0x7451f
0000000000012528	nop
000000000001252c	ldarb	w8, [x8]
0000000000012530	tbz	w8, #0x0, 0x12538
0000000000012534	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012538	adrp	x0, 90 ; 0x6c000
000000000001253c	add	x0, x0, #0xbb0
0000000000012540	ldr	x8, [x0]
0000000000012544	blr	x8
0000000000012548	ldr	x8, [x0]
000000000001254c	ldr	x8, [x8, #0x118]
0000000000012550	add	x0, x8, #0x70
0000000000012554	mov	w1, #0x18
0000000000012558	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001255c	adr	x8, #0x48444
0000000000012560	nop
0000000000012564	str	x8, [x0, #0x10]!
0000000000012568	stur	xzr, [x0, #-0x8]
000000000001256c	str	x0, [x19]
0000000000012570	str	x20, [x0, #0x8]
0000000000012574	str	x0, [x19]
0000000000012578	ldp	x29, x30, [sp, #0x10]
000000000001257c	ldp	x20, x19, [sp], #0x20
0000000000012580	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Keys.<get-size>#internal:
0000000000012584	stp	x20, x19, [sp, #-0x20]!
0000000000012588	stp	x29, x30, [sp, #0x10]
000000000001258c	add	x29, sp, #0x10
0000000000012590	mov	x19, x0
0000000000012594	adr	x8, #0x744af
0000000000012598	nop
000000000001259c	ldarb	w8, [x8]
00000000000125a0	tbz	w8, #0x0, 0x125a8
00000000000125a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000125a8	ldr	x8, [x19, #0x8]
00000000000125ac	ldar	x8, [x8]
00000000000125b0	and	x8, x8, #0xfffffffffffffffc
00000000000125b4	ldr	x9, [x8]
00000000000125b8	cmp	x8, #0x0
00000000000125bc	ccmp	x9, x8, #0x4, ne
00000000000125c0	b.ne	0x125cc
00000000000125c4	mov	x0, #0x0
00000000000125c8	b	0x125d4
00000000000125cc	add	x8, x8, #0x10
00000000000125d0	ldar	x0, [x8]
00000000000125d4	nop
00000000000125d8	ldr	x1, #0x58010 ; Objc selector ref: count
00000000000125dc	bl	0x51b78 ; Objc message: -[x0 count]
00000000000125e0	lsr	x8, x0, #31
00000000000125e4	cbnz	x8, 0x125f4
00000000000125e8	ldp	x29, x30, [sp, #0x10]
00000000000125ec	ldp	x20, x19, [sp], #0x20
00000000000125f0	ret
00000000000125f4	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Keys.iterator#internal:
00000000000125f8	stp	x20, x19, [sp, #-0x20]!
00000000000125fc	stp	x29, x30, [sp, #0x10]
0000000000012600	add	x29, sp, #0x10
0000000000012604	mov	x19, x1
0000000000012608	mov	x20, x0
000000000001260c	adr	x8, #0x74437
0000000000012610	nop
0000000000012614	ldarb	w8, [x8]
0000000000012618	tbz	w8, #0x0, 0x12620
000000000001261c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012620	ldr	x0, [x20, #0x8]
0000000000012624	mov	x1, x19
0000000000012628	bl	_Kotlin_NSDictionaryAsKMap_keyIterator
000000000001262c	str	x0, [x19]
0000000000012630	ldp	x29, x30, [sp, #0x10]
0000000000012634	ldp	x20, x19, [sp], #0x20
0000000000012638	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Keys.contains#internal:
000000000001263c	stp	x20, x19, [sp, #-0x20]!
0000000000012640	stp	x29, x30, [sp, #0x10]
0000000000012644	add	x29, sp, #0x10
0000000000012648	mov	x19, x1
000000000001264c	mov	x20, x0
0000000000012650	adr	x8, #0x743f3
0000000000012654	nop
0000000000012658	ldarb	w8, [x8]
000000000001265c	tbz	w8, #0x0, 0x12664
0000000000012660	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012664	ldr	x0, [x20, #0x8]
0000000000012668	mov	x1, x19
000000000001266c	ldp	x29, x30, [sp, #0x10]
0000000000012670	ldp	x20, x19, [sp], #0x20
0000000000012674	b	_Kotlin_NSDictionaryAsKMap_containsKey
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Values.<get-size>#internal:
0000000000012678	stp	x20, x19, [sp, #-0x20]!
000000000001267c	stp	x29, x30, [sp, #0x10]
0000000000012680	add	x29, sp, #0x10
0000000000012684	mov	x19, x0
0000000000012688	adr	x8, #0x743bb
000000000001268c	nop
0000000000012690	ldarb	w8, [x8]
0000000000012694	tbz	w8, #0x0, 0x1269c
0000000000012698	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001269c	ldr	x8, [x19, #0x8]
00000000000126a0	ldar	x8, [x8]
00000000000126a4	and	x8, x8, #0xfffffffffffffffc
00000000000126a8	ldr	x9, [x8]
00000000000126ac	cmp	x8, #0x0
00000000000126b0	ccmp	x9, x8, #0x4, ne
00000000000126b4	b.ne	0x126c0
00000000000126b8	mov	x0, #0x0
00000000000126bc	b	0x126c8
00000000000126c0	add	x8, x8, #0x10
00000000000126c4	ldar	x0, [x8]
00000000000126c8	nop
00000000000126cc	ldr	x1, #0x57f1c ; Objc selector ref: count
00000000000126d0	bl	0x51b78 ; Objc message: -[x0 count]
00000000000126d4	lsr	x8, x0, #31
00000000000126d8	cbnz	x8, 0x126e8
00000000000126dc	ldp	x29, x30, [sp, #0x10]
00000000000126e0	ldp	x20, x19, [sp], #0x20
00000000000126e4	ret
00000000000126e8	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Values.iterator#internal:
00000000000126ec	stp	x20, x19, [sp, #-0x20]!
00000000000126f0	stp	x29, x30, [sp, #0x10]
00000000000126f4	add	x29, sp, #0x10
00000000000126f8	mov	x19, x1
00000000000126fc	mov	x20, x0
0000000000012700	adr	x8, #0x74343
0000000000012704	nop
0000000000012708	ldarb	w8, [x8]
000000000001270c	tbz	w8, #0x0, 0x12714
0000000000012710	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012714	ldr	x0, [x20, #0x8]
0000000000012718	mov	x1, x19
000000000001271c	bl	_Kotlin_NSDictionaryAsKMap_valueIterator
0000000000012720	str	x0, [x19]
0000000000012724	ldp	x29, x30, [sp, #0x10]
0000000000012728	ldp	x20, x19, [sp], #0x20
000000000001272c	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Values.contains#internal:
0000000000012730	stp	x20, x19, [sp, #-0x20]!
0000000000012734	stp	x29, x30, [sp, #0x10]
0000000000012738	add	x29, sp, #0x10
000000000001273c	mov	x19, x1
0000000000012740	mov	x20, x0
0000000000012744	adr	x8, #0x742ff
0000000000012748	nop
000000000001274c	ldarb	w8, [x8]
0000000000012750	tbz	w8, #0x0, 0x12758
0000000000012754	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012758	ldr	x0, [x20, #0x8]
000000000001275c	mov	x1, x19
0000000000012760	ldp	x29, x30, [sp, #0x10]
0000000000012764	ldp	x20, x19, [sp], #0x20
0000000000012768	b	_Kotlin_NSDictionaryAsKMap_containsValue
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entries.<get-size>#internal:
000000000001276c	stp	x20, x19, [sp, #-0x20]!
0000000000012770	stp	x29, x30, [sp, #0x10]
0000000000012774	add	x29, sp, #0x10
0000000000012778	mov	x19, x0
000000000001277c	adr	x8, #0x742c7
0000000000012780	nop
0000000000012784	ldarb	w8, [x8]
0000000000012788	tbz	w8, #0x0, 0x12790
000000000001278c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012790	ldr	x8, [x19, #0x8]
0000000000012794	ldar	x8, [x8]
0000000000012798	and	x8, x8, #0xfffffffffffffffc
000000000001279c	ldr	x9, [x8]
00000000000127a0	cmp	x8, #0x0
00000000000127a4	ccmp	x9, x8, #0x4, ne
00000000000127a8	b.ne	0x127b4
00000000000127ac	mov	x0, #0x0
00000000000127b0	b	0x127bc
00000000000127b4	add	x8, x8, #0x10
00000000000127b8	ldar	x0, [x8]
00000000000127bc	nop
00000000000127c0	ldr	x1, #0x57e28 ; Objc selector ref: count
00000000000127c4	bl	0x51b78 ; Objc message: -[x0 count]
00000000000127c8	lsr	x8, x0, #31
00000000000127cc	cbnz	x8, 0x127dc
00000000000127d0	ldp	x29, x30, [sp, #0x10]
00000000000127d4	ldp	x20, x19, [sp], #0x20
00000000000127d8	ret
00000000000127dc	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entries.iterator#internal:
00000000000127e0	sub	sp, sp, #0x50
00000000000127e4	stp	x22, x21, [sp, #0x20]
00000000000127e8	stp	x20, x19, [sp, #0x30]
00000000000127ec	stp	x29, x30, [sp, #0x40]
00000000000127f0	add	x29, sp, #0x40
00000000000127f4	mov	x19, x1
00000000000127f8	mov	x20, x0
00000000000127fc	adr	x8, #0x74247
0000000000012800	nop
0000000000012804	ldarb	w8, [x8]
0000000000012808	tbz	w8, #0x0, 0x12810
000000000001280c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012810	ldr	x20, [x20, #0x8]
0000000000012814	adrp	x0, 90 ; 0x6c000
0000000000012818	add	x0, x0, #0xbb0
000000000001281c	ldr	x8, [x0]
0000000000012820	blr	x8
0000000000012824	mov	x21, x0
0000000000012828	ldr	x8, [x0]
000000000001282c	ldr	x8, [x8, #0x118]
0000000000012830	add	x0, x8, #0x70
0000000000012834	mov	w1, #0x20
0000000000012838	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001283c	mov	x22, x0
0000000000012840	adr	x8, #0x482b0
0000000000012844	nop
0000000000012848	str	x8, [x22, #0x10]!
000000000001284c	stur	xzr, [x22, #-0x8]
0000000000012850	str	x22, [x19]
0000000000012854	movi.16b	v0, #0x0
0000000000012858	stp	q0, q0, [sp]
000000000001285c	mov	x8, sp
0000000000012860	add	x1, x8, #0x18
0000000000012864	ldr	x9, [x21]
0000000000012868	ldr	x10, [x9, #0x110]
000000000001286c	str	x8, [x9, #0x110]
0000000000012870	mov	x8, #0x400000000
0000000000012874	stp	x10, x8, [sp, #0x8]
0000000000012878	str	x20, [x22, #0x10]
000000000001287c	mov	x0, x20
0000000000012880	bl	_Kotlin_NSDictionaryAsKMap_keyIterator
0000000000012884	str	x0, [x22, #0x8]
0000000000012888	ldr	x8, [x21]
000000000001288c	ldr	x9, [sp, #0x8]
0000000000012890	str	x9, [x8, #0x110]
0000000000012894	str	x22, [x19]
0000000000012898	mov	x0, x22
000000000001289c	ldp	x29, x30, [sp, #0x40]
00000000000128a0	ldp	x20, x19, [sp, #0x30]
00000000000128a4	ldp	x22, x21, [sp, #0x20]
00000000000128a8	add	sp, sp, #0x50
00000000000128ac	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entries.contains#internal:
00000000000128b0	sub	sp, sp, #0x70
00000000000128b4	stp	x24, x23, [sp, #0x30]
00000000000128b8	stp	x22, x21, [sp, #0x40]
00000000000128bc	stp	x20, x19, [sp, #0x50]
00000000000128c0	stp	x29, x30, [sp, #0x60]
00000000000128c4	add	x29, sp, #0x60
00000000000128c8	mov	x19, x1
00000000000128cc	mov	x20, x0
00000000000128d0	movi.16b	v0, #0x0
00000000000128d4	stp	q0, q0, [sp]
00000000000128d8	str	xzr, [sp, #0x20]
00000000000128dc	mov	x22, sp
00000000000128e0	adrp	x0, 90 ; 0x6c000
00000000000128e4	add	x0, x0, #0xbb0
00000000000128e8	ldr	x8, [x0]
00000000000128ec	blr	x8
00000000000128f0	ldr	x23, [x0]
00000000000128f4	ldr	x8, [x23, #0x110]
00000000000128f8	str	x22, [x23, #0x110]
00000000000128fc	mov	x9, #0x500000000
0000000000012900	stp	x8, x9, [sp, #0x8]
0000000000012904	adr	x8, #0x7413f
0000000000012908	nop
000000000001290c	ldarb	w8, [x8]
0000000000012910	tbz	w8, #0x0, 0x12918
0000000000012914	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012918	cbz	x19, 0x12a5c
000000000001291c	ldr	x8, [x19]
0000000000012920	and	x8, x8, #0xfffffffffffffffc
0000000000012924	ldr	x8, [x8]
0000000000012928	ldr	w9, [x8, #0x3c]
000000000001292c	ldr	x8, [x8, #0x40]
0000000000012930	tbnz	w9, #0x1f, 0x1297c
0000000000012934	mov	w10, #0xa8
0000000000012938	and	x9, x9, x10
000000000001293c	lsl	x9, x9, #4
0000000000012940	ldr	w8, [x8, x9]
0000000000012944	cmp	w8, #0xa8
0000000000012948	b.ne	0x12a5c
000000000001294c	add	x21, x22, #0x20
0000000000012950	add	x1, x22, #0x18
0000000000012954	ldr	x20, [x20, #0x8]
0000000000012958	ldr	x8, [x19]
000000000001295c	and	x8, x8, #0xfffffffffffffffc
0000000000012960	ldr	x8, [x8]
0000000000012964	ldr	w9, [x8, #0x3c]
0000000000012968	ldr	x8, [x8, #0x40]
000000000001296c	tbnz	w9, #0x1f, 0x129d4
0000000000012970	mov	w10, #0xa8
0000000000012974	and	x9, x9, x10
0000000000012978	b	0x12ad8
000000000001297c	neg	w10, w9
0000000000012980	mvn	w9, w9
0000000000012984	cmp	w10, #0x9
0000000000012988	b.ge	0x12a18
000000000001298c	cmp	w10, #0x2
0000000000012990	b.lt	0x12a64
0000000000012994	mov	x10, #0x0
0000000000012998	mov	x11, x8
000000000001299c	ldr	w12, [x11]
00000000000129a0	cmp	w12, #0xa7
00000000000129a4	b.gt	0x12ab4
00000000000129a8	add	x10, x10, #0x1
00000000000129ac	add	x11, x11, #0x10
00000000000129b0	cmp	x9, x10
00000000000129b4	b.ne	0x1299c
00000000000129b8	mov	x10, x9
00000000000129bc	sxtw	x9, w10
00000000000129c0	lsl	x9, x9, #4
00000000000129c4	ldr	w8, [x8, x9]
00000000000129c8	cmp	w8, #0xa8
00000000000129cc	b.eq	0x1294c
00000000000129d0	b	0x12a5c
00000000000129d4	neg	w10, w9
00000000000129d8	mvn	w9, w9
00000000000129dc	cmp	w10, #0x9
00000000000129e0	b.ge	0x12a80
00000000000129e4	cmp	w10, #0x2
00000000000129e8	b.lt	0x12acc
00000000000129ec	mov	x10, #0x0
00000000000129f0	mov	x11, x8
00000000000129f4	ldr	w12, [x11]
00000000000129f8	cmp	w12, #0xa7
00000000000129fc	b.gt	0x12ad4
0000000000012a00	add	x10, x10, #0x1
0000000000012a04	add	x11, x11, #0x10
0000000000012a08	cmp	x9, x10
0000000000012a0c	b.ne	0x129f4
0000000000012a10	mov	x10, x9
0000000000012a14	b	0x12ad4
0000000000012a18	mov	w10, #0x0
0000000000012a1c	add	w11, w9, w10
0000000000012a20	cmp	w11, #0x0
0000000000012a24	cinc	w11, w11, lt
0000000000012a28	asr	w11, w11, #1
0000000000012a2c	sbfiz	x12, x11, #4, #32
0000000000012a30	ldr	w12, [x8, x12]
0000000000012a34	cmp	w12, #0xa8
0000000000012a38	csinc	w10, w10, w11, ge
0000000000012a3c	csel	w9, w9, w11, lt
0000000000012a40	cmp	w10, w9
0000000000012a44	b.lt	0x12a1c
0000000000012a48	sxtw	x9, w10
0000000000012a4c	lsl	x9, x9, #4
0000000000012a50	ldr	w8, [x8, x9]
0000000000012a54	cmp	w8, #0xa8
0000000000012a58	b.eq	0x1294c
0000000000012a5c	mov	w0, #0x0
0000000000012a60	b	0x12bc0
0000000000012a64	mov	w10, #0x0
0000000000012a68	sxtw	x9, w10
0000000000012a6c	lsl	x9, x9, #4
0000000000012a70	ldr	w8, [x8, x9]
0000000000012a74	cmp	w8, #0xa8
0000000000012a78	b.eq	0x1294c
0000000000012a7c	b	0x12a5c
0000000000012a80	mov	w10, #0x0
0000000000012a84	add	w11, w9, w10
0000000000012a88	cmp	w11, #0x0
0000000000012a8c	cinc	w11, w11, lt
0000000000012a90	asr	w11, w11, #1
0000000000012a94	sbfiz	x12, x11, #4, #32
0000000000012a98	ldr	w12, [x8, x12]
0000000000012a9c	cmp	w12, #0xa8
0000000000012aa0	csinc	w10, w10, w11, ge
0000000000012aa4	csel	w9, w9, w11, lt
0000000000012aa8	cmp	w10, w9
0000000000012aac	b.lt	0x12a84
0000000000012ab0	b	0x12ad4
0000000000012ab4	sxtw	x9, w10
0000000000012ab8	lsl	x9, x9, #4
0000000000012abc	ldr	w8, [x8, x9]
0000000000012ac0	cmp	w8, #0xa8
0000000000012ac4	b.eq	0x1294c
0000000000012ac8	b	0x12a5c
0000000000012acc	mov	w10, #0x0
0000000000012ad0	b	0x12ad4
0000000000012ad4	sxtw	x9, w10
0000000000012ad8	add	x8, x8, x9, lsl #4
0000000000012adc	ldr	x8, [x8, #0x8]
0000000000012ae0	ldr	x8, [x8]
0000000000012ae4	mov	x0, x19
0000000000012ae8	blr	x8
0000000000012aec	mov	x22, x0
0000000000012af0	ldr	x8, [x19]
0000000000012af4	and	x8, x8, #0xfffffffffffffffc
0000000000012af8	ldr	x8, [x8]
0000000000012afc	ldr	w9, [x8, #0x3c]
0000000000012b00	ldr	x8, [x8, #0x40]
0000000000012b04	tbnz	w9, #0x1f, 0x12b14
0000000000012b08	mov	w10, #0xa8
0000000000012b0c	and	x9, x9, x10
0000000000012b10	b	0x12b98
0000000000012b14	neg	w10, w9
0000000000012b18	mvn	w9, w9
0000000000012b1c	cmp	w10, #0x9
0000000000012b20	b.ge	0x12b58
0000000000012b24	cmp	w10, #0x2
0000000000012b28	b.lt	0x12b8c
0000000000012b2c	mov	x10, #0x0
0000000000012b30	mov	x11, x8
0000000000012b34	ldr	w12, [x11]
0000000000012b38	cmp	w12, #0xa7
0000000000012b3c	b.gt	0x12b94
0000000000012b40	add	x10, x10, #0x1
0000000000012b44	add	x11, x11, #0x10
0000000000012b48	cmp	x9, x10
0000000000012b4c	b.ne	0x12b34
0000000000012b50	mov	x10, x9
0000000000012b54	b	0x12b94
0000000000012b58	mov	w10, #0x0
0000000000012b5c	add	w11, w9, w10
0000000000012b60	cmp	w11, #0x0
0000000000012b64	cinc	w11, w11, lt
0000000000012b68	asr	w11, w11, #1
0000000000012b6c	sbfiz	x12, x11, #4, #32
0000000000012b70	ldr	w12, [x8, x12]
0000000000012b74	cmp	w12, #0xa8
0000000000012b78	csinc	w10, w10, w11, ge
0000000000012b7c	csel	w9, w9, w11, lt
0000000000012b80	cmp	w10, w9
0000000000012b84	b.lt	0x12b5c
0000000000012b88	b	0x12b94
0000000000012b8c	mov	w10, #0x0
0000000000012b90	b	0x12b94
0000000000012b94	sxtw	x9, w10
0000000000012b98	add	x8, x8, x9, lsl #4
0000000000012b9c	ldr	x8, [x8, #0x8]
0000000000012ba0	ldr	x8, [x8, #0x8]
0000000000012ba4	mov	x0, x19
0000000000012ba8	mov	x1, x21
0000000000012bac	blr	x8
0000000000012bb0	mov	x2, x0
0000000000012bb4	mov	x0, x20
0000000000012bb8	mov	x1, x22
0000000000012bbc	bl	_Kotlin_NSDictionaryAsKMap_containsEntry
0000000000012bc0	ldr	x8, [sp, #0x8]
0000000000012bc4	str	x8, [x23, #0x110]
0000000000012bc8	ldp	x29, x30, [sp, #0x60]
0000000000012bcc	ldp	x20, x19, [sp, #0x50]
0000000000012bd0	ldp	x22, x21, [sp, #0x40]
0000000000012bd4	ldp	x24, x23, [sp, #0x30]
0000000000012bd8	add	sp, sp, #0x70
0000000000012bdc	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.<get-key>#internal:
0000000000012be0	stp	x20, x19, [sp, #-0x20]!
0000000000012be4	stp	x29, x30, [sp, #0x10]
0000000000012be8	add	x29, sp, #0x10
0000000000012bec	mov	x19, x1
0000000000012bf0	mov	x20, x0
0000000000012bf4	adr	x8, #0x73e4f
0000000000012bf8	nop
0000000000012bfc	ldarb	w8, [x8]
0000000000012c00	tbz	w8, #0x0, 0x12c08
0000000000012c04	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012c08	ldr	x0, [x20, #0x8]
0000000000012c0c	str	x0, [x19]
0000000000012c10	ldp	x29, x30, [sp, #0x10]
0000000000012c14	ldp	x20, x19, [sp], #0x20
0000000000012c18	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.<get-value>#internal:
0000000000012c1c	stp	x20, x19, [sp, #-0x20]!
0000000000012c20	stp	x29, x30, [sp, #0x10]
0000000000012c24	add	x29, sp, #0x10
0000000000012c28	mov	x19, x1
0000000000012c2c	mov	x20, x0
0000000000012c30	adr	x8, #0x73e13
0000000000012c34	nop
0000000000012c38	ldarb	w8, [x8]
0000000000012c3c	tbz	w8, #0x0, 0x12c44
0000000000012c40	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012c44	ldr	x0, [x20, #0x10]
0000000000012c48	str	x0, [x19]
0000000000012c4c	ldp	x29, x30, [sp, #0x10]
0000000000012c50	ldp	x20, x19, [sp], #0x20
0000000000012c54	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.equals#internal:
0000000000012c58	sub	sp, sp, #0x60
0000000000012c5c	stp	x22, x21, [sp, #0x30]
0000000000012c60	stp	x20, x19, [sp, #0x40]
0000000000012c64	stp	x29, x30, [sp, #0x50]
0000000000012c68	add	x29, sp, #0x50
0000000000012c6c	mov	x20, x1
0000000000012c70	mov	x19, x0
0000000000012c74	movi.16b	v0, #0x0
0000000000012c78	stp	q0, q0, [sp]
0000000000012c7c	str	xzr, [sp, #0x20]
0000000000012c80	mov	x22, sp
0000000000012c84	adrp	x0, 90 ; 0x6c000
0000000000012c88	add	x0, x0, #0xbb0
0000000000012c8c	ldr	x8, [x0]
0000000000012c90	blr	x8
0000000000012c94	ldr	x21, [x0]
0000000000012c98	ldr	x8, [x21, #0x110]
0000000000012c9c	str	x22, [x21, #0x110]
0000000000012ca0	mov	x9, #0x500000000
0000000000012ca4	stp	x8, x9, [sp, #0x8]
0000000000012ca8	adr	x8, #0x73d9b
0000000000012cac	nop
0000000000012cb0	ldarb	w8, [x8]
0000000000012cb4	tbz	w8, #0x0, 0x12cbc
0000000000012cb8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012cbc	cbz	x20, 0x12eac
0000000000012cc0	ldr	x8, [x20]
0000000000012cc4	and	x8, x8, #0xfffffffffffffffc
0000000000012cc8	ldr	x8, [x8]
0000000000012ccc	ldr	w9, [x8, #0x3c]
0000000000012cd0	ldr	x8, [x8, #0x40]
0000000000012cd4	tbnz	w9, #0x1f, 0x12cf4
0000000000012cd8	mov	w10, #0xa8
0000000000012cdc	and	x9, x9, x10
0000000000012ce0	lsl	x9, x9, #4
0000000000012ce4	ldr	w8, [x8, x9]
0000000000012ce8	cmp	w8, #0xa8
0000000000012cec	b.eq	0x12dc4
0000000000012cf0	b	0x12eac
0000000000012cf4	neg	w10, w9
0000000000012cf8	mvn	w9, w9
0000000000012cfc	cmp	w10, #0x9
0000000000012d00	b.ge	0x12d4c
0000000000012d04	cmp	w10, #0x2
0000000000012d08	b.lt	0x12d94
0000000000012d0c	mov	x10, #0x0
0000000000012d10	mov	x11, x8
0000000000012d14	ldr	w12, [x11]
0000000000012d18	cmp	w12, #0xa7
0000000000012d1c	b.gt	0x12db0
0000000000012d20	add	x10, x10, #0x1
0000000000012d24	add	x11, x11, #0x10
0000000000012d28	cmp	x9, x10
0000000000012d2c	b.ne	0x12d14
0000000000012d30	mov	x10, x9
0000000000012d34	sxtw	x9, w10
0000000000012d38	lsl	x9, x9, #4
0000000000012d3c	ldr	w8, [x8, x9]
0000000000012d40	cmp	w8, #0xa8
0000000000012d44	b.eq	0x12dc4
0000000000012d48	b	0x12eac
0000000000012d4c	mov	w10, #0x0
0000000000012d50	add	w11, w9, w10
0000000000012d54	cmp	w11, #0x0
0000000000012d58	cinc	w11, w11, lt
0000000000012d5c	asr	w11, w11, #1
0000000000012d60	sbfiz	x12, x11, #4, #32
0000000000012d64	ldr	w12, [x8, x12]
0000000000012d68	cmp	w12, #0xa8
0000000000012d6c	csinc	w10, w10, w11, ge
0000000000012d70	csel	w9, w9, w11, lt
0000000000012d74	cmp	w10, w9
0000000000012d78	b.lt	0x12d50
0000000000012d7c	sxtw	x9, w10
0000000000012d80	lsl	x9, x9, #4
0000000000012d84	ldr	w8, [x8, x9]
0000000000012d88	cmp	w8, #0xa8
0000000000012d8c	b.ne	0x12eac
0000000000012d90	b	0x12dc4
0000000000012d94	mov	w10, #0x0
0000000000012d98	sxtw	x9, w10
0000000000012d9c	lsl	x9, x9, #4
0000000000012da0	ldr	w8, [x8, x9]
0000000000012da4	cmp	w8, #0xa8
0000000000012da8	b.eq	0x12dc4
0000000000012dac	b	0x12eac
0000000000012db0	sxtw	x9, w10
0000000000012db4	lsl	x9, x9, #4
0000000000012db8	ldr	w8, [x8, x9]
0000000000012dbc	cmp	w8, #0xa8
0000000000012dc0	b.ne	0x12eac
0000000000012dc4	add	x1, x22, #0x18
0000000000012dc8	ldr	x8, [x20]
0000000000012dcc	and	x8, x8, #0xfffffffffffffffc
0000000000012dd0	ldr	x8, [x8]
0000000000012dd4	ldr	w9, [x8, #0x3c]
0000000000012dd8	ldr	x8, [x8, #0x40]
0000000000012ddc	tbnz	w9, #0x1f, 0x12dec
0000000000012de0	mov	w10, #0xa8
0000000000012de4	and	x9, x9, x10
0000000000012de8	b	0x12e70
0000000000012dec	neg	w10, w9
0000000000012df0	mvn	w9, w9
0000000000012df4	cmp	w10, #0x9
0000000000012df8	b.ge	0x12e30
0000000000012dfc	cmp	w10, #0x2
0000000000012e00	b.lt	0x12e64
0000000000012e04	mov	x10, #0x0
0000000000012e08	mov	x11, x8
0000000000012e0c	ldr	w12, [x11]
0000000000012e10	cmp	w12, #0xa7
0000000000012e14	b.gt	0x12e6c
0000000000012e18	add	x10, x10, #0x1
0000000000012e1c	add	x11, x11, #0x10
0000000000012e20	cmp	x9, x10
0000000000012e24	b.ne	0x12e0c
0000000000012e28	mov	x10, x9
0000000000012e2c	b	0x12e6c
0000000000012e30	mov	w10, #0x0
0000000000012e34	add	w11, w9, w10
0000000000012e38	cmp	w11, #0x0
0000000000012e3c	cinc	w11, w11, lt
0000000000012e40	asr	w11, w11, #1
0000000000012e44	sbfiz	x12, x11, #4, #32
0000000000012e48	ldr	w12, [x8, x12]
0000000000012e4c	cmp	w12, #0xa8
0000000000012e50	csinc	w10, w10, w11, ge
0000000000012e54	csel	w9, w9, w11, lt
0000000000012e58	cmp	w10, w9
0000000000012e5c	b.lt	0x12e34
0000000000012e60	b	0x12e6c
0000000000012e64	mov	w10, #0x0
0000000000012e68	b	0x12e6c
0000000000012e6c	sxtw	x9, w10
0000000000012e70	add	x8, x8, x9, lsl #4
0000000000012e74	ldr	x8, [x8, #0x8]
0000000000012e78	ldr	x8, [x8]
0000000000012e7c	mov	x0, x20
0000000000012e80	blr	x8
0000000000012e84	ldr	x1, [x19, #0x8]
0000000000012e88	cbz	x0, 0x12ea8
0000000000012e8c	ldr	x8, [x0]
0000000000012e90	and	x8, x8, #0xfffffffffffffffc
0000000000012e94	ldr	x8, [x8]
0000000000012e98	ldr	x8, [x8, #0x70]
0000000000012e9c	blr	x8
0000000000012ea0	cbz	w0, 0x12eb0
0000000000012ea4	b	0x12ecc
0000000000012ea8	cbz	x1, 0x12ecc
0000000000012eac	mov	w0, #0x0
0000000000012eb0	ldr	x8, [sp, #0x8]
0000000000012eb4	str	x8, [x21, #0x110]
0000000000012eb8	ldp	x29, x30, [sp, #0x50]
0000000000012ebc	ldp	x20, x19, [sp, #0x40]
0000000000012ec0	ldp	x22, x21, [sp, #0x30]
0000000000012ec4	add	sp, sp, #0x60
0000000000012ec8	ret
0000000000012ecc	add	x1, x22, #0x20
0000000000012ed0	ldr	x8, [x20]
0000000000012ed4	and	x8, x8, #0xfffffffffffffffc
0000000000012ed8	ldr	x8, [x8]
0000000000012edc	ldr	w9, [x8, #0x3c]
0000000000012ee0	ldr	x8, [x8, #0x40]
0000000000012ee4	tbnz	w9, #0x1f, 0x12ef4
0000000000012ee8	mov	w10, #0xa8
0000000000012eec	and	x9, x9, x10
0000000000012ef0	b	0x12f78
0000000000012ef4	neg	w10, w9
0000000000012ef8	mvn	w9, w9
0000000000012efc	cmp	w10, #0x9
0000000000012f00	b.ge	0x12f38
0000000000012f04	cmp	w10, #0x2
0000000000012f08	b.lt	0x12f6c
0000000000012f0c	mov	x10, #0x0
0000000000012f10	mov	x11, x8
0000000000012f14	ldr	w12, [x11]
0000000000012f18	cmp	w12, #0xa7
0000000000012f1c	b.gt	0x12f74
0000000000012f20	add	x10, x10, #0x1
0000000000012f24	add	x11, x11, #0x10
0000000000012f28	cmp	x9, x10
0000000000012f2c	b.ne	0x12f14
0000000000012f30	mov	x10, x9
0000000000012f34	b	0x12f74
0000000000012f38	mov	w10, #0x0
0000000000012f3c	add	w11, w9, w10
0000000000012f40	cmp	w11, #0x0
0000000000012f44	cinc	w11, w11, lt
0000000000012f48	asr	w11, w11, #1
0000000000012f4c	sbfiz	x12, x11, #4, #32
0000000000012f50	ldr	w12, [x8, x12]
0000000000012f54	cmp	w12, #0xa8
0000000000012f58	csinc	w10, w10, w11, ge
0000000000012f5c	csel	w9, w9, w11, lt
0000000000012f60	cmp	w10, w9
0000000000012f64	b.lt	0x12f3c
0000000000012f68	b	0x12f74
0000000000012f6c	mov	w10, #0x0
0000000000012f70	b	0x12f74
0000000000012f74	sxtw	x9, w10
0000000000012f78	add	x8, x8, x9, lsl #4
0000000000012f7c	ldr	x8, [x8, #0x8]
0000000000012f80	ldr	x8, [x8, #0x8]
0000000000012f84	mov	x0, x20
0000000000012f88	blr	x8
0000000000012f8c	ldr	x1, [x19, #0x10]
0000000000012f90	cbz	x0, 0x12fac
0000000000012f94	ldr	x8, [x0]
0000000000012f98	and	x8, x8, #0xfffffffffffffffc
0000000000012f9c	ldr	x8, [x8]
0000000000012fa0	ldr	x8, [x8, #0x70]
0000000000012fa4	blr	x8
0000000000012fa8	b	0x12eb0
0000000000012fac	cmp	x1, #0x0
0000000000012fb0	cset	w0, eq
0000000000012fb4	b	0x12eb0
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.hashCode#internal:
0000000000012fb8	stp	x20, x19, [sp, #-0x20]!
0000000000012fbc	stp	x29, x30, [sp, #0x10]
0000000000012fc0	add	x29, sp, #0x10
0000000000012fc4	mov	x19, x0
0000000000012fc8	adr	x8, #0x73a7b
0000000000012fcc	nop
0000000000012fd0	ldarb	w8, [x8]
0000000000012fd4	tbz	w8, #0x0, 0x12fdc
0000000000012fd8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012fdc	ldr	x0, [x19, #0x8]
0000000000012fe0	cbz	x0, 0x13028
0000000000012fe4	ldr	x8, [x0]
0000000000012fe8	and	x8, x8, #0xfffffffffffffffc
0000000000012fec	ldr	x8, [x8]
0000000000012ff0	ldr	x8, [x8, #0x78]
0000000000012ff4	blr	x8
0000000000012ff8	mov	x20, x0
0000000000012ffc	ldr	x0, [x19, #0x10]
0000000000013000	cbz	x0, 0x13018
0000000000013004	ldr	x8, [x0]
0000000000013008	and	x8, x8, #0xfffffffffffffffc
000000000001300c	ldr	x8, [x8]
0000000000013010	ldr	x8, [x8, #0x78]
0000000000013014	blr	x8
0000000000013018	eor	w0, w20, w0
000000000001301c	ldp	x29, x30, [sp, #0x10]
0000000000013020	ldp	x20, x19, [sp], #0x20
0000000000013024	ret
0000000000013028	mov	w20, #0x0
000000000001302c	ldr	x0, [x19, #0x10]
0000000000013030	cbnz	x0, 0x13004
0000000000013034	b	0x13018
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.toString#internal:
0000000000013038	sub	sp, sp, #0xb0
000000000001303c	stp	x24, x23, [sp, #0x70]
0000000000013040	stp	x22, x21, [sp, #0x80]
0000000000013044	stp	x20, x19, [sp, #0x90]
0000000000013048	stp	x29, x30, [sp, #0xa0]
000000000001304c	add	x29, sp, #0xa0
0000000000013050	mov	x19, x1
0000000000013054	mov	x20, x0
0000000000013058	movi.16b	v0, #0x0
000000000001305c	stp	q0, q0, [sp, #0x20]
0000000000013060	str	xzr, [sp, #0x60]
0000000000013064	stp	q0, q0, [sp, #0x40]
0000000000013068	add	x24, sp, #0x20
000000000001306c	add	x21, x24, #0x30
0000000000013070	add	x22, x24, #0x28
0000000000013074	stp	xzr, xzr, [sp, #0x10]
0000000000013078	adr	x8, #0x49318
000000000001307c	nop
0000000000013080	orr	x8, x8, #0x3
0000000000013084	str	x8, [sp, #0x8]
0000000000013088	adrp	x0, 89 ; 0x6c000
000000000001308c	add	x0, x0, #0xbb0
0000000000013090	ldr	x8, [x0]
0000000000013094	blr	x8
0000000000013098	ldr	x23, [x0]
000000000001309c	ldr	x8, [x23, #0x110]
00000000000130a0	str	x24, [x23, #0x110]
00000000000130a4	mov	x9, #0x900000000
00000000000130a8	stp	x8, x9, [sp, #0x28]
00000000000130ac	adr	x8, #0x73997
00000000000130b0	nop
00000000000130b4	ldarb	w8, [x8]
00000000000130b8	tbz	w8, #0x0, 0x130c0
00000000000130bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000130c0	add	x8, sp, #0x8
00000000000130c4	str	x8, [sp, #0x38]
00000000000130c8	add	x0, sp, #0x8
00000000000130cc	mov	w1, #0xa
00000000000130d0	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000130d4	ldr	x0, [x20, #0x8]
00000000000130d8	cbz	x0, 0x13100
00000000000130dc	add	x8, sp, #0x20
00000000000130e0	add	x1, x8, #0x20
00000000000130e4	ldr	x8, [x0]
00000000000130e8	and	x8, x8, #0xfffffffffffffffc
00000000000130ec	ldr	x8, [x8]
00000000000130f0	ldr	x8, [x8, #0x80]
00000000000130f4	blr	x8
00000000000130f8	mov	x1, x0
00000000000130fc	b	0x13104
0000000000013100	mov	x1, #0x0
0000000000013104	add	x0, sp, #0x8
0000000000013108	mov	x2, x22
000000000001310c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000013110	adr	x1, #0x528d0
0000000000013114	nop
0000000000013118	add	x0, sp, #0x8
000000000001311c	mov	x2, x21
0000000000013120	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000013124	ldr	x0, [x20, #0x10]
0000000000013128	cbz	x0, 0x1314c
000000000001312c	add	x1, x24, #0x38
0000000000013130	ldr	x8, [x0]
0000000000013134	and	x8, x8, #0xfffffffffffffffc
0000000000013138	ldr	x8, [x8]
000000000001313c	ldr	x8, [x8, #0x80]
0000000000013140	blr	x8
0000000000013144	mov	x1, x0
0000000000013148	b	0x13150
000000000001314c	mov	x1, #0x0
0000000000013150	add	x8, sp, #0x20
0000000000013154	add	x2, x8, #0x40
0000000000013158	add	x0, sp, #0x8
000000000001315c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000013160	add	x0, sp, #0x8
0000000000013164	mov	x1, x19
0000000000013168	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000001316c	str	x0, [x19]
0000000000013170	ldr	x8, [sp, #0x28]
0000000000013174	str	x8, [x23, #0x110]
0000000000013178	ldp	x29, x30, [sp, #0xa0]
000000000001317c	ldp	x20, x19, [sp, #0x90]
0000000000013180	ldp	x22, x21, [sp, #0x80]
0000000000013184	ldp	x24, x23, [sp, #0x70]
0000000000013188	add	sp, sp, #0xb0
000000000001318c	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.EntryIterator.hasNext#internal:
0000000000013190	stp	x20, x19, [sp, #-0x20]!
0000000000013194	stp	x29, x30, [sp, #0x10]
0000000000013198	add	x29, sp, #0x10
000000000001319c	mov	x19, x0
00000000000131a0	adr	x8, #0x738a3
00000000000131a4	nop
00000000000131a8	ldarb	w8, [x8]
00000000000131ac	tbz	w8, #0x0, 0x131b4
00000000000131b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000131b4	ldr	x0, [x19, #0x8]
00000000000131b8	ldr	x8, [x0]
00000000000131bc	and	x8, x8, #0xfffffffffffffffc
00000000000131c0	ldr	x8, [x8]
00000000000131c4	ldr	w9, [x8, #0x3c]
00000000000131c8	ldr	x8, [x8, #0x40]
00000000000131cc	tbnz	w9, #0x1f, 0x131f0
00000000000131d0	mov	w10, #0xa0
00000000000131d4	and	x9, x9, x10
00000000000131d8	add	x8, x8, x9, lsl #4
00000000000131dc	ldr	x8, [x8, #0x8]
00000000000131e0	ldr	x1, [x8]
00000000000131e4	ldp	x29, x30, [sp, #0x10]
00000000000131e8	ldp	x20, x19, [sp], #0x20
00000000000131ec	br	x1
00000000000131f0	neg	w10, w9
00000000000131f4	mvn	w9, w9
00000000000131f8	cmp	w10, #0x9
00000000000131fc	b.ge	0x13234
0000000000013200	cmp	w10, #0x2
0000000000013204	b.lt	0x13268
0000000000013208	mov	x10, #0x0
000000000001320c	mov	x11, x8
0000000000013210	ldr	w12, [x11]
0000000000013214	cmp	w12, #0x9f
0000000000013218	b.gt	0x13270
000000000001321c	add	x10, x10, #0x1
0000000000013220	add	x11, x11, #0x10
0000000000013224	cmp	x9, x10
0000000000013228	b.ne	0x13210
000000000001322c	mov	x10, x9
0000000000013230	b	0x13270
0000000000013234	mov	w10, #0x0
0000000000013238	add	w11, w9, w10
000000000001323c	cmp	w11, #0x0
0000000000013240	cinc	w11, w11, lt
0000000000013244	asr	w11, w11, #1
0000000000013248	sbfiz	x12, x11, #4, #32
000000000001324c	ldr	w12, [x8, x12]
0000000000013250	cmp	w12, #0xa0
0000000000013254	csinc	w10, w10, w11, ge
0000000000013258	csel	w9, w9, w11, lt
000000000001325c	cmp	w10, w9
0000000000013260	b.lt	0x13238
0000000000013264	b	0x13270
0000000000013268	mov	w10, #0x0
000000000001326c	b	0x13270
0000000000013270	sxtw	x9, w10
0000000000013274	add	x8, x8, x9, lsl #4
0000000000013278	ldr	x8, [x8, #0x8]
000000000001327c	ldr	x1, [x8]
0000000000013280	ldp	x29, x30, [sp, #0x10]
0000000000013284	ldp	x20, x19, [sp], #0x20
0000000000013288	br	x1
_kfun:kotlin.native.internal.NSDictionaryAsKMap.EntryIterator.next#internal:
000000000001328c	sub	sp, sp, #0x70
0000000000013290	stp	x24, x23, [sp, #0x30]
0000000000013294	stp	x22, x21, [sp, #0x40]
0000000000013298	stp	x20, x19, [sp, #0x50]
000000000001329c	stp	x29, x30, [sp, #0x60]
00000000000132a0	add	x29, sp, #0x60
00000000000132a4	mov	x19, x1
00000000000132a8	mov	x20, x0
00000000000132ac	movi.16b	v0, #0x0
00000000000132b0	stp	q0, q0, [sp]
00000000000132b4	str	xzr, [sp, #0x20]
00000000000132b8	adrp	x0, 89 ; 0x6c000
00000000000132bc	add	x0, x0, #0xbb0
00000000000132c0	ldr	x8, [x0]
00000000000132c4	blr	x8
00000000000132c8	ldr	x23, [x0]
00000000000132cc	ldr	x8, [x23, #0x110]
00000000000132d0	mov	x9, sp
00000000000132d4	str	x9, [x23, #0x110]
00000000000132d8	mov	x9, #0x500000000
00000000000132dc	stp	x8, x9, [sp, #0x8]
00000000000132e0	adr	x8, #0x73763
00000000000132e4	nop
00000000000132e8	ldarb	w8, [x8]
00000000000132ec	tbz	w8, #0x0, 0x132f4
00000000000132f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000132f4	ldr	x0, [x20, #0x8]
00000000000132f8	ldr	x8, [x0]
00000000000132fc	and	x8, x8, #0xfffffffffffffffc
0000000000013300	ldr	x8, [x8]
0000000000013304	ldr	w9, [x8, #0x3c]
0000000000013308	ldr	x8, [x8, #0x40]
000000000001330c	tbnz	w9, #0x1f, 0x1331c
0000000000013310	mov	w10, #0xa0
0000000000013314	and	x9, x9, x10
0000000000013318	b	0x133a0
000000000001331c	neg	w10, w9
0000000000013320	mvn	w9, w9
0000000000013324	cmp	w10, #0x9
0000000000013328	b.ge	0x13360
000000000001332c	cmp	w10, #0x2
0000000000013330	b.lt	0x13394
0000000000013334	mov	x10, #0x0
0000000000013338	mov	x11, x8
000000000001333c	ldr	w12, [x11]
0000000000013340	cmp	w12, #0x9f
0000000000013344	b.gt	0x1339c
0000000000013348	add	x10, x10, #0x1
000000000001334c	add	x11, x11, #0x10
0000000000013350	cmp	x9, x10
0000000000013354	b.ne	0x1333c
0000000000013358	mov	x10, x9
000000000001335c	b	0x1339c
0000000000013360	mov	w10, #0x0
0000000000013364	add	w11, w9, w10
0000000000013368	cmp	w11, #0x0
000000000001336c	cinc	w11, w11, lt
0000000000013370	asr	w11, w11, #1
0000000000013374	sbfiz	x12, x11, #4, #32
0000000000013378	ldr	w12, [x8, x12]
000000000001337c	cmp	w12, #0xa0
0000000000013380	csinc	w10, w10, w11, ge
0000000000013384	csel	w9, w9, w11, lt
0000000000013388	cmp	w10, w9
000000000001338c	b.lt	0x13364
0000000000013390	b	0x1339c
0000000000013394	mov	w10, #0x0
0000000000013398	b	0x1339c
000000000001339c	sxtw	x9, w10
00000000000133a0	mov	x10, sp
00000000000133a4	add	x21, x10, #0x20
00000000000133a8	add	x1, x10, #0x18
00000000000133ac	add	x8, x8, x9, lsl #4
00000000000133b0	ldr	x8, [x8, #0x8]
00000000000133b4	ldr	x8, [x8, #0x8]
00000000000133b8	blr	x8
00000000000133bc	mov	x22, x0
00000000000133c0	ldr	x0, [x20, #0x10]
00000000000133c4	mov	x1, x22
00000000000133c8	mov	x2, x21
00000000000133cc	bl	_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification
00000000000133d0	mov	x20, x0
00000000000133d4	ldr	x8, [x23, #0x118]
00000000000133d8	add	x0, x8, #0x70
00000000000133dc	mov	w1, #0x20
00000000000133e0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000133e4	adr	x8, #0x4767c
00000000000133e8	nop
00000000000133ec	str	x8, [x0, #0x10]!
00000000000133f0	stur	xzr, [x0, #-0x8]
00000000000133f4	str	x0, [x19]
00000000000133f8	stp	x22, x20, [x0, #0x8]
00000000000133fc	str	x0, [x19]
0000000000013400	ldr	x8, [sp, #0x8]
0000000000013404	str	x8, [x23, #0x110]
0000000000013408	ldp	x29, x30, [sp, #0x60]
000000000001340c	ldp	x20, x19, [sp, #0x50]
0000000000013410	ldp	x22, x21, [sp, #0x40]
0000000000013414	ldp	x24, x23, [sp, #0x30]
0000000000013418	add	sp, sp, #0x70
000000000001341c	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.toString$lambda$0#internal:
0000000000013420	sub	sp, sp, #0xe0
0000000000013424	stp	x28, x27, [sp, #0x80]
0000000000013428	stp	x26, x25, [sp, #0x90]
000000000001342c	stp	x24, x23, [sp, #0xa0]
0000000000013430	stp	x22, x21, [sp, #0xb0]
0000000000013434	stp	x20, x19, [sp, #0xc0]
0000000000013438	stp	x29, x30, [sp, #0xd0]
000000000001343c	add	x29, sp, #0xd0
0000000000013440	mov	x19, x2
0000000000013444	mov	x21, x1
0000000000013448	mov	x20, x0
000000000001344c	movi.16b	v0, #0x0
0000000000013450	stp	q0, q0, [sp, #0x20]
0000000000013454	str	xzr, [sp, #0x70]
0000000000013458	stp	q0, q0, [sp, #0x50]
000000000001345c	str	q0, [sp, #0x40]
0000000000013460	add	x27, sp, #0x20
0000000000013464	add	x25, x27, #0x20
0000000000013468	stp	xzr, xzr, [sp, #0x10]
000000000001346c	adr	x8, #0x48f24
0000000000013470	nop
0000000000013474	orr	x8, x8, #0x3
0000000000013478	str	x8, [sp, #0x8]
000000000001347c	adrp	x0, 89 ; 0x6c000
0000000000013480	add	x0, x0, #0xbb0
0000000000013484	ldr	x8, [x0]
0000000000013488	blr	x8
000000000001348c	ldr	x26, [x0]
0000000000013490	ldr	x8, [x26, #0x110]
0000000000013494	str	x27, [x26, #0x110]
0000000000013498	mov	x9, #0xb00000000
000000000001349c	stp	x8, x9, [sp, #0x28]
00000000000134a0	adr	x8, #0x735a3
00000000000134a4	nop
00000000000134a8	ldarb	w8, [x8]
00000000000134ac	tbz	w8, #0x0, 0x134b4
00000000000134b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000134b4	add	x24, x27, #0x30
00000000000134b8	add	x22, x27, #0x38
00000000000134bc	add	x8, sp, #0x8
00000000000134c0	str	x8, [sp, #0x38]
00000000000134c4	add	x0, sp, #0x8
00000000000134c8	mov	w1, #0xa
00000000000134cc	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000134d0	ldr	x8, [x21]
00000000000134d4	and	x8, x8, #0xfffffffffffffffc
00000000000134d8	ldr	x8, [x8]
00000000000134dc	ldr	w9, [x8, #0x3c]
00000000000134e0	ldr	x8, [x8, #0x40]
00000000000134e4	tbnz	w9, #0x1f, 0x134f4
00000000000134e8	mov	w10, #0xa8
00000000000134ec	and	x9, x9, x10
00000000000134f0	b	0x13578
00000000000134f4	neg	w10, w9
00000000000134f8	mvn	w9, w9
00000000000134fc	cmp	w10, #0x9
0000000000013500	b.ge	0x13538
0000000000013504	cmp	w10, #0x2
0000000000013508	b.lt	0x1356c
000000000001350c	mov	x10, #0x0
0000000000013510	mov	x11, x8
0000000000013514	ldr	w12, [x11]
0000000000013518	cmp	w12, #0xa7
000000000001351c	b.gt	0x13574
0000000000013520	add	x10, x10, #0x1
0000000000013524	add	x11, x11, #0x10
0000000000013528	cmp	x9, x10
000000000001352c	b.ne	0x13514
0000000000013530	mov	x10, x9
0000000000013534	b	0x13574
0000000000013538	mov	w10, #0x0
000000000001353c	add	w11, w9, w10
0000000000013540	cmp	w11, #0x0
0000000000013544	cinc	w11, w11, lt
0000000000013548	asr	w11, w11, #1
000000000001354c	sbfiz	x12, x11, #4, #32
0000000000013550	ldr	w12, [x8, x12]
0000000000013554	cmp	w12, #0xa8
0000000000013558	csinc	w10, w10, w11, ge
000000000001355c	csel	w9, w9, w11, lt
0000000000013560	cmp	w10, w9
0000000000013564	b.lt	0x1353c
0000000000013568	b	0x13574
000000000001356c	mov	w10, #0x0
0000000000013570	b	0x13574
0000000000013574	sxtw	x9, w10
0000000000013578	add	x23, x27, #0x40
000000000001357c	add	x8, x8, x9, lsl #4
0000000000013580	ldr	x8, [x8, #0x8]
0000000000013584	ldr	x8, [x8]
0000000000013588	mov	x0, x21
000000000001358c	mov	x1, x25
0000000000013590	blr	x8
0000000000013594	cmp	x0, x20
0000000000013598	b.eq	0x135c0
000000000001359c	cbz	x0, 0x135cc
00000000000135a0	add	x1, x27, #0x28
00000000000135a4	ldr	x8, [x0]
00000000000135a8	and	x8, x8, #0xfffffffffffffffc
00000000000135ac	ldr	x8, [x8]
00000000000135b0	ldr	x8, [x8, #0x80]
00000000000135b4	blr	x8
00000000000135b8	mov	x1, x0
00000000000135bc	b	0x135d4
00000000000135c0	adr	x1, #0x523f0
00000000000135c4	nop
00000000000135c8	b	0x135d4
00000000000135cc	adr	x1, #0x51c24
00000000000135d0	nop
00000000000135d4	str	x1, [sp, #0x48]
00000000000135d8	add	x0, sp, #0x8
00000000000135dc	mov	x2, x24
00000000000135e0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000135e4	adr	x1, #0x523fc
00000000000135e8	nop
00000000000135ec	add	x0, sp, #0x8
00000000000135f0	mov	x2, x22
00000000000135f4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000135f8	ldr	x8, [x21]
00000000000135fc	and	x8, x8, #0xfffffffffffffffc
0000000000013600	ldr	x8, [x8]
0000000000013604	ldr	w9, [x8, #0x3c]
0000000000013608	ldr	x8, [x8, #0x40]
000000000001360c	tbnz	w9, #0x1f, 0x1361c
0000000000013610	mov	w10, #0xa8
0000000000013614	and	x9, x9, x10
0000000000013618	b	0x136a0
000000000001361c	neg	w10, w9
0000000000013620	mvn	w9, w9
0000000000013624	cmp	w10, #0x9
0000000000013628	b.ge	0x13660
000000000001362c	cmp	w10, #0x2
0000000000013630	b.lt	0x13694
0000000000013634	mov	x10, #0x0
0000000000013638	mov	x11, x8
000000000001363c	ldr	w12, [x11]
0000000000013640	cmp	w12, #0xa7
0000000000013644	b.gt	0x1369c
0000000000013648	add	x10, x10, #0x1
000000000001364c	add	x11, x11, #0x10
0000000000013650	cmp	x9, x10
0000000000013654	b.ne	0x1363c
0000000000013658	mov	x10, x9
000000000001365c	b	0x1369c
0000000000013660	mov	w10, #0x0
0000000000013664	add	w11, w9, w10
0000000000013668	cmp	w11, #0x0
000000000001366c	cinc	w11, w11, lt
0000000000013670	asr	w11, w11, #1
0000000000013674	sbfiz	x12, x11, #4, #32
0000000000013678	ldr	w12, [x8, x12]
000000000001367c	cmp	w12, #0xa8
0000000000013680	csinc	w10, w10, w11, ge
0000000000013684	csel	w9, w9, w11, lt
0000000000013688	cmp	w10, w9
000000000001368c	b.lt	0x13664
0000000000013690	b	0x1369c
0000000000013694	mov	w10, #0x0
0000000000013698	b	0x1369c
000000000001369c	sxtw	x9, w10
00000000000136a0	add	x8, x8, x9, lsl #4
00000000000136a4	ldr	x8, [x8, #0x8]
00000000000136a8	ldr	x8, [x8, #0x8]
00000000000136ac	mov	x0, x21
00000000000136b0	mov	x1, x23
00000000000136b4	blr	x8
00000000000136b8	cmp	x0, x20
00000000000136bc	b.eq	0x136e4
00000000000136c0	cbz	x0, 0x136f0
00000000000136c4	add	x1, x27, #0x48
00000000000136c8	ldr	x8, [x0]
00000000000136cc	and	x8, x8, #0xfffffffffffffffc
00000000000136d0	ldr	x8, [x8]
00000000000136d4	ldr	x8, [x8, #0x80]
00000000000136d8	blr	x8
00000000000136dc	mov	x1, x0
00000000000136e0	b	0x136f8
00000000000136e4	adr	x1, #0x522cc
00000000000136e8	nop
00000000000136ec	b	0x136f8
00000000000136f0	adr	x1, #0x51b00
00000000000136f4	nop
00000000000136f8	add	x8, sp, #0x20
00000000000136fc	add	x2, x8, #0x50
0000000000013700	str	x1, [sp, #0x68]
0000000000013704	add	x0, sp, #0x8
0000000000013708	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001370c	add	x0, sp, #0x8
0000000000013710	mov	x1, x19
0000000000013714	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000013718	str	x0, [x19]
000000000001371c	ldr	x8, [sp, #0x28]
0000000000013720	str	x8, [x26, #0x110]
0000000000013724	ldp	x29, x30, [sp, #0xd0]
0000000000013728	ldp	x20, x19, [sp, #0xc0]
000000000001372c	ldp	x22, x21, [sp, #0xb0]
0000000000013730	ldp	x24, x23, [sp, #0xa0]
0000000000013734	ldp	x26, x25, [sp, #0x90]
0000000000013738	ldp	x28, x27, [sp, #0x80]
000000000001373c	add	sp, sp, #0xe0
0000000000013740	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.$toString$lambda$0$FUNCTION_REFERENCE$4.invoke#internal:
0000000000013744	stp	x22, x21, [sp, #-0x30]!
0000000000013748	stp	x20, x19, [sp, #0x10]
000000000001374c	stp	x29, x30, [sp, #0x20]
0000000000013750	add	x29, sp, #0x20
0000000000013754	mov	x19, x2
0000000000013758	mov	x20, x1
000000000001375c	mov	x21, x0
0000000000013760	adr	x8, #0x732e3
0000000000013764	nop
0000000000013768	ldarb	w8, [x8]
000000000001376c	tbz	w8, #0x0, 0x13774
0000000000013770	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013774	ldr	x0, [x21, #0x8]
0000000000013778	mov	x1, x20
000000000001377c	mov	x2, x19
0000000000013780	bl	"_kfun:kotlin.native.internal.NSDictionaryAsKMap.toString$lambda$0#internal"
0000000000013784	str	x0, [x19]
0000000000013788	ldp	x29, x30, [sp, #0x20]
000000000001378c	ldp	x20, x19, [sp, #0x10]
0000000000013790	ldp	x22, x21, [sp], #0x30
0000000000013794	ret
_ThrowNullPointerException:
0000000000013798	sub	sp, sp, #0x50
000000000001379c	stp	x22, x21, [sp, #0x20]
00000000000137a0	stp	x20, x19, [sp, #0x30]
00000000000137a4	stp	x29, x30, [sp, #0x40]
00000000000137a8	add	x29, sp, #0x40
00000000000137ac	movi.16b	v0, #0x0
00000000000137b0	stp	q0, q0, [sp]
00000000000137b4	adrp	x19, 89 ; 0x6c000
00000000000137b8	add	x19, x19, #0xbb0
00000000000137bc	ldr	x21, [x19]
00000000000137c0	mov	x0, x19
00000000000137c4	blr	x21
00000000000137c8	ldr	x8, [x0]
00000000000137cc	ldr	x9, [x8, #0x110]
00000000000137d0	mov	x10, sp
00000000000137d4	str	x10, [x8, #0x110]
00000000000137d8	mov	x8, #0x400000000
00000000000137dc	stp	x9, x8, [sp, #0x8]
00000000000137e0	adr	x8, #0x73263
00000000000137e4	nop
00000000000137e8	ldarb	w8, [x8]
00000000000137ec	tbz	w8, #0x0, 0x137f4
00000000000137f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000137f4	mov	x0, x19
00000000000137f8	blr	x21
00000000000137fc	ldr	x8, [x0]
0000000000013800	ldr	x8, [x8, #0x118]
0000000000013804	add	x0, x8, #0x70
0000000000013808	mov	w1, #0x38
000000000001380c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013810	mov	x20, x0
0000000000013814	adr	x8, #0x456ec
0000000000013818	nop
000000000001381c	str	x8, [x20, #0x10]!
0000000000013820	stur	xzr, [x20, #-0x8]
0000000000013824	str	x20, [sp, #0x18]
0000000000013828	mov	x0, x20
000000000001382c	mov	x1, #0x0
0000000000013830	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000013834	mov	x0, x20
0000000000013838	bl	_ThrowException
000000000001383c	brk	#0x1
0000000000013840	mov	x1, x0
0000000000013844	mov	x0, x19
0000000000013848	blr	x21
000000000001384c	ldr	x8, [x0]
0000000000013850	ldr	x9, [sp, #0x8]
0000000000013854	str	x9, [x8, #0x110]
0000000000013858	mov	x0, x1
000000000001385c	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_ThrowArrayIndexOutOfBoundsException:
0000000000013860	sub	sp, sp, #0x50
0000000000013864	stp	x22, x21, [sp, #0x20]
0000000000013868	stp	x20, x19, [sp, #0x30]
000000000001386c	stp	x29, x30, [sp, #0x40]
0000000000013870	add	x29, sp, #0x40
0000000000013874	movi.16b	v0, #0x0
0000000000013878	stp	q0, q0, [sp]
000000000001387c	adrp	x19, 89 ; 0x6c000
0000000000013880	add	x19, x19, #0xbb0
0000000000013884	ldr	x21, [x19]
0000000000013888	mov	x0, x19
000000000001388c	blr	x21
0000000000013890	ldr	x8, [x0]
0000000000013894	ldr	x9, [x8, #0x110]
0000000000013898	mov	x10, sp
000000000001389c	str	x10, [x8, #0x110]
00000000000138a0	mov	x8, #0x400000000
00000000000138a4	stp	x9, x8, [sp, #0x8]
00000000000138a8	adr	x8, #0x7319b
00000000000138ac	nop
00000000000138b0	ldarb	w8, [x8]
00000000000138b4	tbz	w8, #0x0, 0x138bc
00000000000138b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000138bc	mov	x0, x19
00000000000138c0	blr	x21
00000000000138c4	ldr	x8, [x0]
00000000000138c8	ldr	x8, [x8, #0x118]
00000000000138cc	add	x0, x8, #0x70
00000000000138d0	mov	w1, #0x38
00000000000138d4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000138d8	mov	x20, x0
00000000000138dc	adr	x8, #0x456c4
00000000000138e0	nop
00000000000138e4	str	x8, [x20, #0x10]!
00000000000138e8	stur	xzr, [x20, #-0x8]
00000000000138ec	str	x20, [sp, #0x18]
00000000000138f0	mov	x0, x20
00000000000138f4	mov	x1, #0x0
00000000000138f8	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
00000000000138fc	mov	x0, x20
0000000000013900	bl	_ThrowException
0000000000013904	brk	#0x1
0000000000013908	mov	x1, x0
000000000001390c	mov	x0, x19
0000000000013910	blr	x21
0000000000013914	ldr	x8, [x0]
0000000000013918	ldr	x9, [sp, #0x8]
000000000001391c	str	x9, [x8, #0x110]
0000000000013920	mov	x0, x1
0000000000013924	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_ThrowClassCastException:
0000000000013928	sub	sp, sp, #0xf0
000000000001392c	stp	x24, x23, [sp, #0xb0]
0000000000013930	stp	x22, x21, [sp, #0xc0]
0000000000013934	stp	x20, x19, [sp, #0xd0]
0000000000013938	stp	x29, x30, [sp, #0xe0]
000000000001393c	add	x29, sp, #0xe0
0000000000013940	mov	x21, x1
0000000000013944	mov	x20, x0
0000000000013948	movi.16b	v0, #0x0
000000000001394c	stp	q0, q0, [sp, #0x40]
0000000000013950	str	xzr, [sp, #0xa0]
0000000000013954	stp	q0, q0, [sp, #0x80]
0000000000013958	stp	q0, q0, [sp, #0x60]
000000000001395c	add	x23, sp, #0x40
0000000000013960	adr	x8, #0x466e0
0000000000013964	nop
0000000000013968	orr	x8, x8, #0x3
000000000001396c	stp	x8, xzr, [sp, #0x30]
0000000000013970	stp	xzr, xzr, [sp, #0x20]
0000000000013974	adr	x9, #0x48a1c
0000000000013978	nop
000000000001397c	orr	x9, x9, #0x3
0000000000013980	stp	xzr, x9, [sp, #0x10]
0000000000013984	str	x8, [sp, #0x8]
0000000000013988	adrp	x19, 89 ; 0x6c000
000000000001398c	add	x19, x19, #0xbb0
0000000000013990	ldr	x22, [x19]
0000000000013994	mov	x0, x19
0000000000013998	blr	x22
000000000001399c	ldr	x8, [x0]
00000000000139a0	ldr	x9, [x8, #0x110]
00000000000139a4	str	x23, [x8, #0x110]
00000000000139a8	mov	x8, #0xd00000000
00000000000139ac	stp	x9, x8, [sp, #0x48]
00000000000139b0	adr	x8, #0x73093
00000000000139b4	nop
00000000000139b8	ldarb	w8, [x8]
00000000000139bc	tbz	w8, #0x0, 0x139c4
00000000000139c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000139c4	add	x8, sp, #0x30
00000000000139c8	str	x21, [sp, #0x38]
00000000000139cc	add	x9, sp, #0x18
00000000000139d0	stp	x8, x9, [sp, #0x58]
00000000000139d4	add	x0, sp, #0x18
00000000000139d8	mov	w1, #0xa
00000000000139dc	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000139e0	add	x8, sp, #0x40
00000000000139e4	add	x1, x8, #0x30
00000000000139e8	ldr	x8, [x20]
00000000000139ec	and	x8, x8, #0xfffffffffffffffc
00000000000139f0	ldr	x8, [x8]
00000000000139f4	add	x9, sp, #0x8
00000000000139f8	str	x9, [sp, #0x68]
00000000000139fc	str	x8, [sp, #0x10]
0000000000013a00	add	x0, sp, #0x8
0000000000013a04	bl	"_kfun:kotlin.native.internal.KClassImpl#toString(){}kotlin.String"
0000000000013a08	mov	x1, x0
0000000000013a0c	add	x2, x23, #0x38
0000000000013a10	add	x0, sp, #0x18
0000000000013a14	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000013a18	add	x2, x23, #0x40
0000000000013a1c	adr	x1, #0x51fe4
0000000000013a20	nop
0000000000013a24	add	x0, sp, #0x18
0000000000013a28	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000013a2c	add	x1, x23, #0x48
0000000000013a30	add	x0, sp, #0x30
0000000000013a34	bl	"_kfun:kotlin.native.internal.KClassImpl#toString(){}kotlin.String"
0000000000013a38	mov	x1, x0
0000000000013a3c	add	x2, x23, #0x50
0000000000013a40	add	x0, sp, #0x18
0000000000013a44	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000013a48	add	x1, x23, #0x58
0000000000013a4c	add	x0, sp, #0x18
0000000000013a50	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000013a54	mov	x20, x0
0000000000013a58	mov	x0, x19
0000000000013a5c	blr	x22
0000000000013a60	ldr	x8, [x0]
0000000000013a64	ldr	x8, [x8, #0x118]
0000000000013a68	add	x0, x8, #0x70
0000000000013a6c	mov	w1, #0x38
0000000000013a70	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013a74	mov	x21, x0
0000000000013a78	adr	x8, #0x455c8
0000000000013a7c	nop
0000000000013a80	str	x8, [x21, #0x10]!
0000000000013a84	stur	xzr, [x21, #-0x8]
0000000000013a88	str	x21, [sp, #0xa0]
0000000000013a8c	mov	x0, x21
0000000000013a90	mov	x1, x20
0000000000013a94	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000013a98	mov	x0, x21
0000000000013a9c	bl	_ThrowException
0000000000013aa0	brk	#0x1
0000000000013aa4	mov	x1, x0
0000000000013aa8	mov	x0, x19
0000000000013aac	blr	x22
0000000000013ab0	ldr	x8, [x0]
0000000000013ab4	ldr	x9, [sp, #0x48]
0000000000013ab8	str	x9, [x8, #0x110]
0000000000013abc	mov	x0, x1
0000000000013ac0	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_ThrowIllegalArgumentException:
0000000000013ac4	sub	sp, sp, #0x50
0000000000013ac8	stp	x22, x21, [sp, #0x20]
0000000000013acc	stp	x20, x19, [sp, #0x30]
0000000000013ad0	stp	x29, x30, [sp, #0x40]
0000000000013ad4	add	x29, sp, #0x40
0000000000013ad8	movi.16b	v0, #0x0
0000000000013adc	stp	q0, q0, [sp]
0000000000013ae0	adrp	x19, 89 ; 0x6c000
0000000000013ae4	add	x19, x19, #0xbb0
0000000000013ae8	ldr	x21, [x19]
0000000000013aec	mov	x0, x19
0000000000013af0	blr	x21
0000000000013af4	ldr	x8, [x0]
0000000000013af8	ldr	x9, [x8, #0x110]
0000000000013afc	mov	x10, sp
0000000000013b00	str	x10, [x8, #0x110]
0000000000013b04	mov	x8, #0x400000000
0000000000013b08	stp	x9, x8, [sp, #0x8]
0000000000013b0c	adr	x8, #0x72f37
0000000000013b10	nop
0000000000013b14	ldarb	w8, [x8]
0000000000013b18	tbz	w8, #0x0, 0x13b20
0000000000013b1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013b20	mov	x0, x19
0000000000013b24	blr	x21
0000000000013b28	ldr	x8, [x0]
0000000000013b2c	ldr	x8, [x8, #0x118]
0000000000013b30	add	x0, x8, #0x70
0000000000013b34	mov	w1, #0x38
0000000000013b38	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013b3c	mov	x20, x0
0000000000013b40	adr	x8, #0x45140
0000000000013b44	nop
0000000000013b48	str	x8, [x20, #0x10]!
0000000000013b4c	stur	xzr, [x20, #-0x8]
0000000000013b50	str	x20, [sp, #0x18]
0000000000013b54	mov	x0, x20
0000000000013b58	mov	x1, #0x0
0000000000013b5c	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000013b60	mov	x0, x20
0000000000013b64	bl	_ThrowException
0000000000013b68	brk	#0x1
0000000000013b6c	mov	x1, x0
0000000000013b70	mov	x0, x19
0000000000013b74	blr	x21
0000000000013b78	ldr	x8, [x0]
0000000000013b7c	ldr	x9, [sp, #0x8]
0000000000013b80	str	x9, [x8, #0x110]
0000000000013b84	mov	x0, x1
0000000000013b88	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_ReportUnhandledException:
0000000000013b8c	sub	sp, sp, #0x50
0000000000013b90	stp	x22, x21, [sp, #0x20]
0000000000013b94	stp	x20, x19, [sp, #0x30]
0000000000013b98	stp	x29, x30, [sp, #0x40]
0000000000013b9c	add	x29, sp, #0x40
0000000000013ba0	mov	x20, x0
0000000000013ba4	str	xzr, [sp, #0x8]
0000000000013ba8	adrp	x19, 89 ; 0x6c000
0000000000013bac	add	x19, x19, #0xbb0
0000000000013bb0	ldr	x21, [x19]
0000000000013bb4	mov	x0, x19
0000000000013bb8	blr	x21
0000000000013bbc	ldr	x8, [x0]
0000000000013bc0	ldr	x9, [x8, #0x110]
0000000000013bc4	add	x10, sp, #0x8
0000000000013bc8	str	x10, [x8, #0x110]
0000000000013bcc	mov	x8, #0x300000000
0000000000013bd0	stp	x9, x8, [sp, #0x10]
0000000000013bd4	adr	x8, #0x72e6f
0000000000013bd8	nop
0000000000013bdc	ldarb	w8, [x8]
0000000000013be0	tbz	w8, #0x0, 0x13be8
0000000000013be4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013be8	adr	x0, #0x51e58
0000000000013bec	nop
0000000000013bf0	bl	_Kotlin_io_Console_print
0000000000013bf4	mov	x0, x20
0000000000013bf8	bl	"_kfun:kotlin.Throwable#printStackTrace(){}"
0000000000013bfc	mov	x0, x19
0000000000013c00	blr	x21
0000000000013c04	ldr	x8, [x0]
0000000000013c08	ldr	x9, [sp, #0x10]
0000000000013c0c	str	x9, [x8, #0x110]
0000000000013c10	ldp	x29, x30, [sp, #0x40]
0000000000013c14	ldp	x20, x19, [sp, #0x30]
0000000000013c18	ldp	x22, x21, [sp, #0x20]
0000000000013c1c	add	sp, sp, #0x50
0000000000013c20	ret
0000000000013c24	mov	x1, x0
0000000000013c28	mov	x0, x19
0000000000013c2c	blr	x21
0000000000013c30	ldr	x8, [x0]
0000000000013c34	ldr	x9, [sp, #0x10]
0000000000013c38	str	x9, [x8, #0x110]
0000000000013c3c	mov	x0, x1
0000000000013c40	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.text#checkBoundsIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}:
0000000000013c44	sub	sp, sp, #0x140
0000000000013c48	stp	x28, x27, [sp, #0xe0]
0000000000013c4c	stp	x26, x25, [sp, #0xf0]
0000000000013c50	stp	x24, x23, [sp, #0x100]
0000000000013c54	stp	x22, x21, [sp, #0x110]
0000000000013c58	stp	x20, x19, [sp, #0x120]
0000000000013c5c	stp	x29, x30, [sp, #0x130]
0000000000013c60	add	x29, sp, #0x130
0000000000013c64	mov	x21, x2
0000000000013c68	mov	x19, x1
0000000000013c6c	mov	x20, x0
0000000000013c70	str	xzr, [sp, #0xd0]
0000000000013c74	movi.16b	v0, #0x0
0000000000013c78	stp	q0, q0, [sp, #0xb0]
0000000000013c7c	stp	q0, q0, [sp, #0x90]
0000000000013c80	stp	q0, q0, [sp, #0x70]
0000000000013c84	stp	q0, q0, [sp, #0x50]
0000000000013c88	str	q0, [sp, #0x40]
0000000000013c8c	stp	xzr, xzr, [sp, #0x30]
0000000000013c90	adr	x8, #0x48700
0000000000013c94	nop
0000000000013c98	orr	x8, x8, #0x3
0000000000013c9c	stp	xzr, x8, [sp, #0x20]
0000000000013ca0	stp	x8, xzr, [sp, #0x10]
0000000000013ca4	adrp	x0, 89 ; 0x6c000
0000000000013ca8	add	x0, x0, #0xbb0
0000000000013cac	ldr	x8, [x0]
0000000000013cb0	blr	x8
0000000000013cb4	ldr	x22, [x0]
0000000000013cb8	ldr	x8, [x22, #0x110]
0000000000013cbc	add	x9, sp, #0x40
0000000000013cc0	str	x9, [x22, #0x110]
0000000000013cc4	mov	x9, #0x1300000000
0000000000013cc8	stp	x8, x9, [sp, #0x48]
0000000000013ccc	adr	x8, #0x72d77
0000000000013cd0	nop
0000000000013cd4	ldarb	w8, [x8]
0000000000013cd8	tbz	w8, #0x0, 0x13ce0
0000000000013cdc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013ce0	tbnz	w20, #0x1f, 0x13d1c
0000000000013ce4	cmp	w19, w21
0000000000013ce8	b.gt	0x13d1c
0000000000013cec	cmp	w20, w19
0000000000013cf0	b.gt	0x13dfc
0000000000013cf4	ldr	x8, [sp, #0x48]
0000000000013cf8	str	x8, [x22, #0x110]
0000000000013cfc	ldp	x29, x30, [sp, #0x130]
0000000000013d00	ldp	x20, x19, [sp, #0x120]
0000000000013d04	ldp	x22, x21, [sp, #0x110]
0000000000013d08	ldp	x24, x23, [sp, #0x100]
0000000000013d0c	ldp	x26, x25, [sp, #0xf0]
0000000000013d10	ldp	x28, x27, [sp, #0xe0]
0000000000013d14	add	sp, sp, #0x140
0000000000013d18	ret
0000000000013d1c	add	x8, sp, #0x40
0000000000013d20	add	x9, x8, #0x50
0000000000013d24	str	x9, [sp, #0x8]
0000000000013d28	add	x23, x8, #0x48
0000000000013d2c	add	x24, x8, #0x40
0000000000013d30	add	x25, x8, #0x38
0000000000013d34	add	x26, x8, #0x30
0000000000013d38	add	x27, x8, #0x28
0000000000013d3c	add	x9, sp, #0x28
0000000000013d40	str	x9, [sp, #0x58]
0000000000013d44	add	x28, x8, #0x20
0000000000013d48	add	x0, sp, #0x28
0000000000013d4c	mov	w1, #0xa
0000000000013d50	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000013d54	adr	x1, #0x51d3c
0000000000013d58	nop
0000000000013d5c	add	x0, sp, #0x28
0000000000013d60	mov	x2, x28
0000000000013d64	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000013d68	add	x0, sp, #0x28
0000000000013d6c	mov	x1, x20
0000000000013d70	mov	x2, x27
0000000000013d74	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000013d78	adr	x1, #0x51d48
0000000000013d7c	nop
0000000000013d80	add	x0, sp, #0x28
0000000000013d84	mov	x2, x26
0000000000013d88	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000013d8c	add	x0, sp, #0x28
0000000000013d90	mov	x1, x19
0000000000013d94	mov	x2, x25
0000000000013d98	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000013d9c	adr	x1, #0x517f4
0000000000013da0	nop
0000000000013da4	add	x0, sp, #0x28
0000000000013da8	mov	x2, x24
0000000000013dac	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000013db0	add	x0, sp, #0x28
0000000000013db4	mov	x1, x21
0000000000013db8	mov	x2, x23
0000000000013dbc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000013dc0	add	x0, sp, #0x28
0000000000013dc4	ldr	x1, [sp, #0x8]
0000000000013dc8	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000013dcc	mov	x19, x0
0000000000013dd0	ldr	x8, [x22, #0x118]
0000000000013dd4	add	x0, x8, #0x70
0000000000013dd8	mov	w1, #0x38
0000000000013ddc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013de0	mov	x20, x0
0000000000013de4	adr	x8, #0x44dfc
0000000000013de8	nop
0000000000013dec	str	x8, [x20, #0x10]!
0000000000013df0	stur	xzr, [x20, #-0x8]
0000000000013df4	str	x20, [sp, #0x98]
0000000000013df8	b	0x13ea8
0000000000013dfc	add	x8, sp, #0x40
0000000000013e00	add	x21, x8, #0x88
0000000000013e04	add	x26, x8, #0x80
0000000000013e08	add	x23, x8, #0x78
0000000000013e0c	add	x24, x8, #0x70
0000000000013e10	add	x25, x8, #0x68
0000000000013e14	add	x8, sp, #0x10
0000000000013e18	str	x8, [sp, #0xa0]
0000000000013e1c	add	x0, sp, #0x10
0000000000013e20	mov	w1, #0xa
0000000000013e24	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000013e28	adr	x1, #0x51c68
0000000000013e2c	nop
0000000000013e30	add	x0, sp, #0x10
0000000000013e34	mov	x2, x25
0000000000013e38	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000013e3c	add	x0, sp, #0x10
0000000000013e40	mov	x1, x20
0000000000013e44	mov	x2, x24
0000000000013e48	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000013e4c	adr	x1, #0x51ca4
0000000000013e50	nop
0000000000013e54	add	x0, sp, #0x10
0000000000013e58	mov	x2, x23
0000000000013e5c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000013e60	add	x0, sp, #0x10
0000000000013e64	mov	x1, x19
0000000000013e68	mov	x2, x26
0000000000013e6c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000013e70	add	x0, sp, #0x10
0000000000013e74	mov	x1, x21
0000000000013e78	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000013e7c	mov	x19, x0
0000000000013e80	ldr	x8, [x22, #0x118]
0000000000013e84	add	x0, x8, #0x70
0000000000013e88	mov	w1, #0x38
0000000000013e8c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013e90	mov	x20, x0
0000000000013e94	adr	x8, #0x44dec
0000000000013e98	nop
0000000000013e9c	str	x8, [x20, #0x10]!
0000000000013ea0	stur	xzr, [x20, #-0x8]
0000000000013ea4	str	x20, [sp, #0xd0]
0000000000013ea8	mov	x0, x20
0000000000013eac	mov	x1, x19
0000000000013eb0	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000013eb4	mov	x0, x20
0000000000013eb8	bl	_ThrowException
_kfun:kotlin.collections#getOrNull__at__kotlin.Array<out|0:0>(kotlin.Int){0ยง<kotlin.Any?>}0:0?:
0000000000013ebc	stp	x22, x21, [sp, #-0x30]!
0000000000013ec0	stp	x20, x19, [sp, #0x10]
0000000000013ec4	stp	x29, x30, [sp, #0x20]
0000000000013ec8	add	x29, sp, #0x20
0000000000013ecc	mov	x19, x2
0000000000013ed0	mov	x20, x1
0000000000013ed4	mov	x21, x0
0000000000013ed8	adr	x8, #0x72b6b
0000000000013edc	nop
0000000000013ee0	ldarb	w8, [x8]
0000000000013ee4	tbz	w8, #0x0, 0x13eec
0000000000013ee8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013eec	tbnz	w20, #0x1f, 0x13f00
0000000000013ef0	ldr	w8, [x21, #0x8]
0000000000013ef4	sub	w9, w8, #0x1
0000000000013ef8	cmp	w9, w20
0000000000013efc	b.ge	0x13f18
0000000000013f00	mov	x0, #0x0
0000000000013f04	str	x0, [x19]
0000000000013f08	ldp	x29, x30, [sp, #0x20]
0000000000013f0c	ldp	x20, x19, [sp, #0x10]
0000000000013f10	ldp	x22, x21, [sp], #0x30
0000000000013f14	ret
0000000000013f18	cmp	w8, w20
0000000000013f1c	b.ls	0x13f40
0000000000013f20	add	x8, x21, w20, sxtw #3
0000000000013f24	ldr	x0, [x8, #0x10]
0000000000013f28	str	x0, [x19]
0000000000013f2c	str	x0, [x19]
0000000000013f30	ldp	x29, x30, [sp, #0x20]
0000000000013f34	ldp	x20, x19, [sp, #0x10]
0000000000013f38	ldp	x22, x21, [sp], #0x30
0000000000013f3c	ret
0000000000013f40	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections#joinToString$default__at__kotlin.collections.Iterable<0:0>(kotlin.CharSequence?;kotlin.CharSequence?;kotlin.CharSequence?;kotlin.Int;kotlin.CharSequence?;kotlin.Function1<0:0,kotlin.CharSequence>?;kotlin.Int){0ยง<kotlin.Any?>}kotlin.String:
0000000000013f44	sub	sp, sp, #0x170
0000000000013f48	stp	x28, x27, [sp, #0x110]
0000000000013f4c	stp	x26, x25, [sp, #0x120]
0000000000013f50	stp	x24, x23, [sp, #0x130]
0000000000013f54	stp	x22, x21, [sp, #0x140]
0000000000013f58	stp	x20, x19, [sp, #0x150]
0000000000013f5c	stp	x29, x30, [sp, #0x160]
0000000000013f60	add	x29, sp, #0x160
0000000000013f64	stp	x2, x4, [sp, #0x8]
0000000000013f68	mov	x23, x3
0000000000013f6c	mov	x26, x1
0000000000013f70	mov	x19, x0
0000000000013f74	adr	x8, #0x72acf
0000000000013f78	nop
0000000000013f7c	ldarb	w8, [x8]
0000000000013f80	tbz	w8, #0x0, 0x13f88
0000000000013f84	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013f88	movi.16b	v0, #0x0
0000000000013f8c	stp	q0, q0, [sp, #0x40]
0000000000013f90	str	xzr, [sp, #0x60]
0000000000013f94	adrp	x21, 89 ; 0x6c000
0000000000013f98	add	x21, x21, #0xbb0
0000000000013f9c	ldr	x20, [x21]
0000000000013fa0	mov	x0, x21
0000000000013fa4	blr	x20
0000000000013fa8	mov	x24, x0
0000000000013fac	ldr	x8, [x0]
0000000000013fb0	add	x9, sp, #0x40
0000000000013fb4	ldp	x10, x11, [x8, #0x110]
0000000000013fb8	str	x9, [x8, #0x110]
0000000000013fbc	mov	x8, #0x500000000
0000000000013fc0	stp	x10, x8, [sp, #0x48]
0000000000013fc4	add	x0, x11, #0x70
0000000000013fc8	mov	w1, #0x20
0000000000013fcc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013fd0	mov	x22, x0
0000000000013fd4	adr	x8, #0x483bc
0000000000013fd8	nop
0000000000013fdc	str	x8, [x22, #0x10]!
0000000000013fe0	stur	xzr, [x22, #-0x8]
0000000000013fe4	str	x22, [sp, #0x58]
0000000000013fe8	mov	x0, x22
0000000000013fec	mov	w1, #0xa
0000000000013ff0	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000013ff4	movi.16b	v0, #0x0
0000000000013ff8	stp	q0, q0, [sp, #0x70]
0000000000013ffc	str	xzr, [sp, #0xb0]
0000000000014000	stp	q0, q0, [sp, #0x90]
0000000000014004	add	x8, sp, #0x70
0000000000014008	add	x27, x8, #0x20
000000000001400c	add	x2, x8, #0x18
0000000000014010	ldr	x9, [x24]
0000000000014014	ldr	x10, [x9, #0x110]
0000000000014018	str	x8, [x9, #0x110]
000000000001401c	mov	x9, #0x900000000
0000000000014020	stp	x10, x9, [sp, #0x78]
0000000000014024	ldr	x9, [x22]
0000000000014028	and	x9, x9, #0xfffffffffffffffc
000000000001402c	ldr	x9, [x9]
0000000000014030	ldr	w10, [x9, #0x3c]
0000000000014034	ldr	x9, [x9, #0x40]
0000000000014038	tbnz	w10, #0x1f, 0x14048
000000000001403c	mov	w11, #0xc8
0000000000014040	and	x10, x10, x11
0000000000014044	b	0x140cc
0000000000014048	neg	w11, w10
000000000001404c	mvn	w10, w10
0000000000014050	cmp	w11, #0x9
0000000000014054	b.ge	0x1408c
0000000000014058	cmp	w11, #0x2
000000000001405c	b.lt	0x140c0
0000000000014060	mov	x11, #0x0
0000000000014064	mov	x12, x9
0000000000014068	ldr	w13, [x12]
000000000001406c	cmp	w13, #0xc7
0000000000014070	b.gt	0x140c8
0000000000014074	add	x11, x11, #0x1
0000000000014078	add	x12, x12, #0x10
000000000001407c	cmp	x10, x11
0000000000014080	b.ne	0x14068
0000000000014084	mov	x11, x10
0000000000014088	b	0x140c8
000000000001408c	mov	w11, #0x0
0000000000014090	add	w12, w10, w11
0000000000014094	cmp	w12, #0x0
0000000000014098	cinc	w12, w12, lt
000000000001409c	asr	w12, w12, #1
00000000000140a0	sbfiz	x13, x12, #4, #32
00000000000140a4	ldr	w13, [x9, x13]
00000000000140a8	cmp	w13, #0xc8
00000000000140ac	csinc	w11, w11, w12, ge
00000000000140b0	csel	w10, w10, w12, lt
00000000000140b4	cmp	w11, w10
00000000000140b8	b.lt	0x14090
00000000000140bc	b	0x140c8
00000000000140c0	mov	w11, #0x0
00000000000140c4	b	0x140c8
00000000000140c8	sxtw	x10, w11
00000000000140cc	add	x11, x8, #0x30
00000000000140d0	str	x11, [sp, #0x38]
00000000000140d4	add	x25, x8, #0x28
00000000000140d8	add	x8, x9, x10, lsl #4
00000000000140dc	ldr	x8, [x8, #0x8]
00000000000140e0	ldr	x8, [x8, #0x8]
00000000000140e4	mov	x0, x22
00000000000140e8	mov	x1, x26
00000000000140ec	blr	x8
00000000000140f0	ldr	x8, [x19]
00000000000140f4	and	x8, x8, #0xfffffffffffffffc
00000000000140f8	ldr	x8, [x8]
00000000000140fc	ldr	w9, [x8, #0x3c]
0000000000014100	ldr	x8, [x8, #0x40]
0000000000014104	tbnz	w9, #0x1f, 0x14114
0000000000014108	mov	w10, #0x31
000000000001410c	and	x9, x9, x10
0000000000014110	b	0x14198
0000000000014114	neg	w10, w9
0000000000014118	mvn	w9, w9
000000000001411c	cmp	w10, #0x9
0000000000014120	b.ge	0x14158
0000000000014124	cmp	w10, #0x2
0000000000014128	b.lt	0x1418c
000000000001412c	mov	x10, #0x0
0000000000014130	mov	x11, x8
0000000000014134	ldr	w12, [x11]
0000000000014138	cmp	w12, #0x30
000000000001413c	b.gt	0x14194
0000000000014140	add	x10, x10, #0x1
0000000000014144	add	x11, x11, #0x10
0000000000014148	cmp	x9, x10
000000000001414c	b.ne	0x14134
0000000000014150	mov	x10, x9
0000000000014154	b	0x14194
0000000000014158	mov	w10, #0x0
000000000001415c	add	w11, w9, w10
0000000000014160	cmp	w11, #0x0
0000000000014164	cinc	w11, w11, lt
0000000000014168	asr	w11, w11, #1
000000000001416c	sbfiz	x12, x11, #4, #32
0000000000014170	ldr	w12, [x8, x12]
0000000000014174	cmp	w12, #0x31
0000000000014178	csinc	w10, w10, w11, ge
000000000001417c	csel	w9, w9, w11, lt
0000000000014180	cmp	w10, w9
0000000000014184	b.lt	0x1415c
0000000000014188	b	0x14194
000000000001418c	mov	w10, #0x0
0000000000014190	b	0x14194
0000000000014194	sxtw	x9, w10
0000000000014198	add	x8, x8, x9, lsl #4
000000000001419c	ldr	x8, [x8, #0x8]
00000000000141a0	ldr	x8, [x8]
00000000000141a4	mov	x0, x19
00000000000141a8	mov	x1, x27
00000000000141ac	blr	x8
00000000000141b0	mov	x26, x0
00000000000141b4	mov	w24, #0x0
00000000000141b8	sub	x8, x29, #0xa0
00000000000141bc	add	x27, x8, #0x18
00000000000141c0	add	x28, x8, #0x20
00000000000141c4	add	x10, x8, #0x28
00000000000141c8	add	x9, x8, #0x30
00000000000141cc	stp	x9, x10, [sp, #0x28]
00000000000141d0	add	x9, x8, #0x38
00000000000141d4	add	x8, x8, #0x40
00000000000141d8	stp	x8, x9, [sp, #0x18]
00000000000141dc	b	0x14214
00000000000141e0	mov	w10, #0xc8
00000000000141e4	and	x9, x9, x10
00000000000141e8	add	x8, x8, x9, lsl #4
00000000000141ec	ldr	x8, [x8, #0x8]
00000000000141f0	ldr	x8, [x8, #0x8]
00000000000141f4	mov	x0, x22
00000000000141f8	mov	x2, x28
00000000000141fc	blr	x8
0000000000014200	mov	x0, x21
0000000000014204	blr	x20
0000000000014208	ldr	x8, [x0]
000000000001420c	ldur	x9, [x29, #-0x98]
0000000000014210	str	x9, [x8, #0x110]
0000000000014214	ldr	x8, [x26]
0000000000014218	and	x8, x8, #0xfffffffffffffffc
000000000001421c	ldr	x8, [x8]
0000000000014220	ldr	w9, [x8, #0x3c]
0000000000014224	ldr	x8, [x8, #0x40]
0000000000014228	tbnz	w9, #0x1f, 0x14250
000000000001422c	mov	w10, #0xa0
0000000000014230	and	x9, x9, x10
0000000000014234	add	x8, x8, x9, lsl #4
0000000000014238	ldr	x8, [x8, #0x8]
000000000001423c	ldr	x8, [x8]
0000000000014240	mov	x0, x26
0000000000014244	blr	x8
0000000000014248	tbnz	w0, #0x0, 0x142ec
000000000001424c	b	0x149bc
0000000000014250	neg	w10, w9
0000000000014254	mvn	w9, w9
0000000000014258	cmp	w10, #0x9
000000000001425c	b.ge	0x14294
0000000000014260	cmp	w10, #0x2
0000000000014264	b.lt	0x142c8
0000000000014268	mov	x10, #0x0
000000000001426c	mov	x11, x8
0000000000014270	ldr	w12, [x11]
0000000000014274	cmp	w12, #0x9f
0000000000014278	b.gt	0x142d0
000000000001427c	add	x10, x10, #0x1
0000000000014280	add	x11, x11, #0x10
0000000000014284	cmp	x9, x10
0000000000014288	b.ne	0x14270
000000000001428c	mov	x10, x9
0000000000014290	b	0x142d0
0000000000014294	mov	w10, #0x0
0000000000014298	add	w11, w9, w10
000000000001429c	cmp	w11, #0x0
00000000000142a0	cinc	w11, w11, lt
00000000000142a4	asr	w11, w11, #1
00000000000142a8	sbfiz	x12, x11, #4, #32
00000000000142ac	ldr	w12, [x8, x12]
00000000000142b0	cmp	w12, #0xa0
00000000000142b4	csinc	w10, w10, w11, ge
00000000000142b8	csel	w9, w9, w11, lt
00000000000142bc	cmp	w10, w9
00000000000142c0	b.lt	0x14298
00000000000142c4	b	0x142d0
00000000000142c8	mov	w10, #0x0
00000000000142cc	b	0x142d0
00000000000142d0	sxtw	x9, w10
00000000000142d4	add	x8, x8, x9, lsl #4
00000000000142d8	ldr	x8, [x8, #0x8]
00000000000142dc	ldr	x8, [x8]
00000000000142e0	mov	x0, x26
00000000000142e4	blr	x8
00000000000142e8	tbz	w0, #0x0, 0x149bc
00000000000142ec	adr	x8, #0x72757
00000000000142f0	nop
00000000000142f4	ldarb	w8, [x8]
00000000000142f8	tbz	w8, #0x0, 0x14300
00000000000142fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014300	ldr	x8, [x26]
0000000000014304	and	x8, x8, #0xfffffffffffffffc
0000000000014308	ldr	x8, [x8]
000000000001430c	ldr	w9, [x8, #0x3c]
0000000000014310	ldr	x8, [x8, #0x40]
0000000000014314	tbnz	w9, #0x1f, 0x14324
0000000000014318	mov	w10, #0xa0
000000000001431c	and	x9, x9, x10
0000000000014320	b	0x143a8
0000000000014324	neg	w10, w9
0000000000014328	mvn	w9, w9
000000000001432c	cmp	w10, #0x9
0000000000014330	b.ge	0x14368
0000000000014334	cmp	w10, #0x2
0000000000014338	b.lt	0x1439c
000000000001433c	mov	x10, #0x0
0000000000014340	mov	x11, x8
0000000000014344	ldr	w12, [x11]
0000000000014348	cmp	w12, #0x9f
000000000001434c	b.gt	0x143a4
0000000000014350	add	x10, x10, #0x1
0000000000014354	add	x11, x11, #0x10
0000000000014358	cmp	x9, x10
000000000001435c	b.ne	0x14344
0000000000014360	mov	x10, x9
0000000000014364	b	0x143a4
0000000000014368	mov	w10, #0x0
000000000001436c	add	w11, w9, w10
0000000000014370	cmp	w11, #0x0
0000000000014374	cinc	w11, w11, lt
0000000000014378	asr	w11, w11, #1
000000000001437c	sbfiz	x12, x11, #4, #32
0000000000014380	ldr	w12, [x8, x12]
0000000000014384	cmp	w12, #0xa0
0000000000014388	csinc	w10, w10, w11, ge
000000000001438c	csel	w9, w9, w11, lt
0000000000014390	cmp	w10, w9
0000000000014394	b.lt	0x1436c
0000000000014398	b	0x143a4
000000000001439c	mov	w10, #0x0
00000000000143a0	b	0x143a4
00000000000143a4	sxtw	x9, w10
00000000000143a8	add	x8, x8, x9, lsl #4
00000000000143ac	ldr	x8, [x8, #0x8]
00000000000143b0	ldr	x8, [x8, #0x8]
00000000000143b4	mov	x0, x26
00000000000143b8	mov	x1, x25
00000000000143bc	blr	x8
00000000000143c0	mov	x19, x0
00000000000143c4	add	w24, w24, #0x1
00000000000143c8	cmp	w24, #0x2
00000000000143cc	b.lt	0x14498
00000000000143d0	ldr	x8, [x22]
00000000000143d4	and	x8, x8, #0xfffffffffffffffc
00000000000143d8	ldr	x8, [x8]
00000000000143dc	ldr	w9, [x8, #0x3c]
00000000000143e0	ldr	x8, [x8, #0x40]
00000000000143e4	tbnz	w9, #0x1f, 0x143f4
00000000000143e8	mov	w10, #0xc8
00000000000143ec	and	x9, x9, x10
00000000000143f0	b	0x14478
00000000000143f4	neg	w10, w9
00000000000143f8	mvn	w9, w9
00000000000143fc	cmp	w10, #0x9
0000000000014400	b.ge	0x14438
0000000000014404	cmp	w10, #0x2
0000000000014408	b.lt	0x1446c
000000000001440c	mov	x10, #0x0
0000000000014410	mov	x11, x8
0000000000014414	ldr	w12, [x11]
0000000000014418	cmp	w12, #0xc7
000000000001441c	b.gt	0x14474
0000000000014420	add	x10, x10, #0x1
0000000000014424	add	x11, x11, #0x10
0000000000014428	cmp	x9, x10
000000000001442c	b.ne	0x14414
0000000000014430	mov	x10, x9
0000000000014434	b	0x14474
0000000000014438	mov	w10, #0x0
000000000001443c	add	w11, w9, w10
0000000000014440	cmp	w11, #0x0
0000000000014444	cinc	w11, w11, lt
0000000000014448	asr	w11, w11, #1
000000000001444c	sbfiz	x12, x11, #4, #32
0000000000014450	ldr	w12, [x8, x12]
0000000000014454	cmp	w12, #0xc8
0000000000014458	csinc	w10, w10, w11, ge
000000000001445c	csel	w9, w9, w11, lt
0000000000014460	cmp	w10, w9
0000000000014464	b.lt	0x1443c
0000000000014468	b	0x14474
000000000001446c	mov	w10, #0x0
0000000000014470	b	0x14474
0000000000014474	sxtw	x9, w10
0000000000014478	add	x8, x8, x9, lsl #4
000000000001447c	ldr	x8, [x8, #0x8]
0000000000014480	ldr	x8, [x8, #0x8]
0000000000014484	mov	x0, x22
0000000000014488	adr	x1, #0x50d88
000000000001448c	nop
0000000000014490	ldr	x2, [sp, #0x38]
0000000000014494	blr	x8
0000000000014498	movi.16b	v0, #0x0
000000000001449c	stp	q0, q0, [x29, #-0xa0]
00000000000144a0	stur	xzr, [x29, #-0x60]
00000000000144a4	stp	q0, q0, [x29, #-0x80]
00000000000144a8	mov	x0, x21
00000000000144ac	blr	x20
00000000000144b0	ldr	x8, [x0]
00000000000144b4	ldr	x9, [x8, #0x110]
00000000000144b8	sub	x10, x29, #0xa0
00000000000144bc	str	x10, [x8, #0x110]
00000000000144c0	mov	x8, #0x900000000
00000000000144c4	stp	x9, x8, [x29, #-0x98]
00000000000144c8	cbz	x23, 0x144f0
00000000000144cc	ldr	x8, [x23]
00000000000144d0	and	x8, x8, #0xfffffffffffffffc
00000000000144d4	ldr	x8, [x8]
00000000000144d8	ldr	w9, [x8, #0x3c]
00000000000144dc	ldr	x8, [x8, #0x40]
00000000000144e0	tbnz	w9, #0x1f, 0x14548
00000000000144e4	mov	w10, #0x2c
00000000000144e8	and	x9, x9, x10
00000000000144ec	b	0x14764
00000000000144f0	cbz	x19, 0x14524
00000000000144f4	ldr	x8, [x19]
00000000000144f8	and	x8, x8, #0xfffffffffffffffc
00000000000144fc	ldr	x8, [x8]
0000000000014500	ldr	w9, [x8, #0x3c]
0000000000014504	ldr	x8, [x8, #0x40]
0000000000014508	tbnz	w9, #0x1f, 0x14604
000000000001450c	mov	w10, #0x19
0000000000014510	and	x9, x9, x10
0000000000014514	lsl	x9, x9, #4
0000000000014518	ldr	w8, [x8, x9]
000000000001451c	cmp	w8, #0x19
0000000000014520	b.ne	0x146dc
0000000000014524	ldr	x8, [x22]
0000000000014528	and	x8, x8, #0xfffffffffffffffc
000000000001452c	ldr	x8, [x8]
0000000000014530	ldr	w9, [x8, #0x3c]
0000000000014534	ldr	x8, [x8, #0x40]
0000000000014538	tbnz	w9, #0x1f, 0x145c0
000000000001453c	mov	w10, #0xc8
0000000000014540	and	x9, x9, x10
0000000000014544	b	0x148d4
0000000000014548	neg	w10, w9
000000000001454c	mvn	w9, w9
0000000000014550	cmp	w10, #0x9
0000000000014554	b.ge	0x1458c
0000000000014558	cmp	w10, #0x2
000000000001455c	b.lt	0x1465c
0000000000014560	mov	x10, #0x0
0000000000014564	mov	x11, x8
0000000000014568	ldr	w12, [x11]
000000000001456c	cmp	w12, #0x2b
0000000000014570	b.gt	0x14760
0000000000014574	add	x10, x10, #0x1
0000000000014578	add	x11, x11, #0x10
000000000001457c	cmp	x9, x10
0000000000014580	b.ne	0x14568
0000000000014584	mov	x10, x9
0000000000014588	b	0x14760
000000000001458c	mov	w10, #0x0
0000000000014590	add	w11, w9, w10
0000000000014594	cmp	w11, #0x0
0000000000014598	cinc	w11, w11, lt
000000000001459c	asr	w11, w11, #1
00000000000145a0	sbfiz	x12, x11, #4, #32
00000000000145a4	ldr	w12, [x8, x12]
00000000000145a8	cmp	w12, #0x2c
00000000000145ac	csinc	w10, w10, w11, ge
00000000000145b0	csel	w9, w9, w11, lt
00000000000145b4	cmp	w10, w9
00000000000145b8	b.lt	0x14590
00000000000145bc	b	0x14760
00000000000145c0	neg	w10, w9
00000000000145c4	mvn	w9, w9
00000000000145c8	cmp	w10, #0x9
00000000000145cc	b.ge	0x14664
00000000000145d0	cmp	w10, #0x2
00000000000145d4	b.lt	0x14824
00000000000145d8	mov	x10, #0x0
00000000000145dc	mov	x11, x8
00000000000145e0	ldr	w12, [x11]
00000000000145e4	cmp	w12, #0xc7
00000000000145e8	b.gt	0x148d0
00000000000145ec	add	x10, x10, #0x1
00000000000145f0	add	x11, x11, #0x10
00000000000145f4	cmp	x9, x10
00000000000145f8	b.ne	0x145e0
00000000000145fc	mov	x10, x9
0000000000014600	b	0x148d0
0000000000014604	neg	w10, w9
0000000000014608	mvn	w9, w9
000000000001460c	cmp	w10, #0x9
0000000000014610	b.ge	0x14698
0000000000014614	cmp	w10, #0x2
0000000000014618	b.lt	0x1482c
000000000001461c	mov	x10, #0x0
0000000000014620	mov	x11, x8
0000000000014624	ldr	w12, [x11]
0000000000014628	cmp	w12, #0x18
000000000001462c	b.gt	0x148f0
0000000000014630	add	x10, x10, #0x1
0000000000014634	add	x11, x11, #0x10
0000000000014638	cmp	x9, x10
000000000001463c	b.ne	0x14624
0000000000014640	mov	x10, x9
0000000000014644	sxtw	x9, w10
0000000000014648	lsl	x9, x9, #4
000000000001464c	ldr	w8, [x8, x9]
0000000000014650	cmp	w8, #0x19
0000000000014654	b.ne	0x146dc
0000000000014658	b	0x14524
000000000001465c	mov	w10, #0x0
0000000000014660	b	0x14760
0000000000014664	mov	w10, #0x0
0000000000014668	add	w11, w9, w10
000000000001466c	cmp	w11, #0x0
0000000000014670	cinc	w11, w11, lt
0000000000014674	asr	w11, w11, #1
0000000000014678	sbfiz	x12, x11, #4, #32
000000000001467c	ldr	w12, [x8, x12]
0000000000014680	cmp	w12, #0xc8
0000000000014684	csinc	w10, w10, w11, ge
0000000000014688	csel	w9, w9, w11, lt
000000000001468c	cmp	w10, w9
0000000000014690	b.lt	0x14668
0000000000014694	b	0x148d0
0000000000014698	mov	w10, #0x0
000000000001469c	add	w11, w9, w10
00000000000146a0	cmp	w11, #0x0
00000000000146a4	cinc	w11, w11, lt
00000000000146a8	asr	w11, w11, #1
00000000000146ac	sbfiz	x12, x11, #4, #32
00000000000146b0	ldr	w12, [x8, x12]
00000000000146b4	cmp	w12, #0x19
00000000000146b8	csinc	w10, w10, w11, ge
00000000000146bc	csel	w9, w9, w11, lt
00000000000146c0	cmp	w10, w9
00000000000146c4	b.lt	0x1469c
00000000000146c8	sxtw	x9, w10
00000000000146cc	lsl	x9, x9, #4
00000000000146d0	ldr	w8, [x8, x9]
00000000000146d4	cmp	w8, #0x19
00000000000146d8	b.eq	0x14524
00000000000146dc	ldr	x8, [x19]
00000000000146e0	and	x8, x8, #0xfffffffffffffffc
00000000000146e4	ldr	x8, [x8]
00000000000146e8	ldr	w8, [x8, #0x5c]
00000000000146ec	cmp	w8, #0x55
00000000000146f0	b.ne	0x1471c
00000000000146f4	ldrh	w1, [x19, #0x8]
00000000000146f8	ldr	x8, [x22]
00000000000146fc	and	x8, x8, #0xfffffffffffffffc
0000000000014700	ldr	x8, [x8]
0000000000014704	ldr	w9, [x8, #0x3c]
0000000000014708	ldr	x8, [x8, #0x40]
000000000001470c	tbnz	w9, #0x1f, 0x14848
0000000000014710	mov	w10, #0xc8
0000000000014714	and	x9, x9, x10
0000000000014718	b	0x14984
000000000001471c	ldr	x8, [x19]
0000000000014720	and	x8, x8, #0xfffffffffffffffc
0000000000014724	ldr	x8, [x8]
0000000000014728	ldr	x8, [x8, #0x80]
000000000001472c	mov	x0, x19
0000000000014730	ldr	x1, [sp, #0x20]
0000000000014734	blr	x8
0000000000014738	mov	x1, x0
000000000001473c	ldr	x8, [x22]
0000000000014740	and	x8, x8, #0xfffffffffffffffc
0000000000014744	ldr	x8, [x8]
0000000000014748	ldr	w9, [x8, #0x3c]
000000000001474c	ldr	x8, [x8, #0x40]
0000000000014750	tbnz	w9, #0x1f, 0x1488c
0000000000014754	mov	w10, #0xc8
0000000000014758	and	x9, x9, x10
000000000001475c	b	0x149a4
0000000000014760	sxtw	x9, w10
0000000000014764	add	x8, x8, x9, lsl #4
0000000000014768	ldr	x8, [x8, #0x8]
000000000001476c	ldr	x8, [x8]
0000000000014770	mov	x0, x23
0000000000014774	mov	x1, x19
0000000000014778	mov	x2, x27
000000000001477c	blr	x8
0000000000014780	mov	x1, x0
0000000000014784	ldr	x8, [x22]
0000000000014788	and	x8, x8, #0xfffffffffffffffc
000000000001478c	ldr	x8, [x8]
0000000000014790	ldr	w9, [x8, #0x3c]
0000000000014794	ldr	x8, [x8, #0x40]
0000000000014798	tbz	w9, #0x1f, 0x141e0
000000000001479c	neg	w10, w9
00000000000147a0	mvn	w9, w9
00000000000147a4	cmp	w10, #0x9
00000000000147a8	b.ge	0x147e0
00000000000147ac	cmp	w10, #0x2
00000000000147b0	b.lt	0x14814
00000000000147b4	mov	x10, #0x0
00000000000147b8	mov	x11, x8
00000000000147bc	ldr	w12, [x11]
00000000000147c0	cmp	w12, #0xc7
00000000000147c4	b.gt	0x1481c
00000000000147c8	add	x10, x10, #0x1
00000000000147cc	add	x11, x11, #0x10
00000000000147d0	cmp	x9, x10
00000000000147d4	b.ne	0x147bc
00000000000147d8	mov	x10, x9
00000000000147dc	b	0x1481c
00000000000147e0	mov	w10, #0x0
00000000000147e4	add	w11, w9, w10
00000000000147e8	cmp	w11, #0x0
00000000000147ec	cinc	w11, w11, lt
00000000000147f0	asr	w11, w11, #1
00000000000147f4	sbfiz	x12, x11, #4, #32
00000000000147f8	ldr	w12, [x8, x12]
00000000000147fc	cmp	w12, #0xc8
0000000000014800	csinc	w10, w10, w11, ge
0000000000014804	csel	w9, w9, w11, lt
0000000000014808	cmp	w10, w9
000000000001480c	b.lt	0x147e4
0000000000014810	b	0x1481c
0000000000014814	mov	w10, #0x0
0000000000014818	b	0x1481c
000000000001481c	sxtw	x9, w10
0000000000014820	b	0x141e8
0000000000014824	mov	w10, #0x0
0000000000014828	b	0x148d0
000000000001482c	mov	w10, #0x0
0000000000014830	sxtw	x9, w10
0000000000014834	lsl	x9, x9, #4
0000000000014838	ldr	w8, [x8, x9]
000000000001483c	cmp	w8, #0x19
0000000000014840	b.eq	0x14524
0000000000014844	b	0x146dc
0000000000014848	neg	w10, w9
000000000001484c	mvn	w9, w9
0000000000014850	cmp	w10, #0x9
0000000000014854	b.ge	0x14908
0000000000014858	cmp	w10, #0x2
000000000001485c	b.lt	0x14970
0000000000014860	mov	x10, #0x0
0000000000014864	mov	x11, x8
0000000000014868	ldr	w12, [x11]
000000000001486c	cmp	w12, #0xc7
0000000000014870	b.gt	0x14980
0000000000014874	add	x10, x10, #0x1
0000000000014878	add	x11, x11, #0x10
000000000001487c	cmp	x9, x10
0000000000014880	b.ne	0x14868
0000000000014884	mov	x10, x9
0000000000014888	b	0x14980
000000000001488c	neg	w10, w9
0000000000014890	mvn	w9, w9
0000000000014894	cmp	w10, #0x9
0000000000014898	b.ge	0x1493c
000000000001489c	cmp	w10, #0x2
00000000000148a0	b.lt	0x14978
00000000000148a4	mov	x10, #0x0
00000000000148a8	mov	x11, x8
00000000000148ac	ldr	w12, [x11]
00000000000148b0	cmp	w12, #0xc7
00000000000148b4	b.gt	0x149a0
00000000000148b8	add	x10, x10, #0x1
00000000000148bc	add	x11, x11, #0x10
00000000000148c0	cmp	x9, x10
00000000000148c4	b.ne	0x148ac
00000000000148c8	mov	x10, x9
00000000000148cc	b	0x149a0
00000000000148d0	sxtw	x9, w10
00000000000148d4	add	x8, x8, x9, lsl #4
00000000000148d8	ldr	x8, [x8, #0x8]
00000000000148dc	ldr	x8, [x8, #0x8]
00000000000148e0	mov	x0, x22
00000000000148e4	mov	x1, x19
00000000000148e8	ldr	x2, [sp, #0x30]
00000000000148ec	b	0x141fc
00000000000148f0	sxtw	x9, w10
00000000000148f4	lsl	x9, x9, #4
00000000000148f8	ldr	w8, [x8, x9]
00000000000148fc	cmp	w8, #0x19
0000000000014900	b.ne	0x146dc
0000000000014904	b	0x14524
0000000000014908	mov	w10, #0x0
000000000001490c	add	w11, w9, w10
0000000000014910	cmp	w11, #0x0
0000000000014914	cinc	w11, w11, lt
0000000000014918	asr	w11, w11, #1
000000000001491c	sbfiz	x12, x11, #4, #32
0000000000014920	ldr	w12, [x8, x12]
0000000000014924	cmp	w12, #0xc8
0000000000014928	csinc	w10, w10, w11, ge
000000000001492c	csel	w9, w9, w11, lt
0000000000014930	cmp	w10, w9
0000000000014934	b.lt	0x1490c
0000000000014938	b	0x14980
000000000001493c	mov	w10, #0x0
0000000000014940	add	w11, w9, w10
0000000000014944	cmp	w11, #0x0
0000000000014948	cinc	w11, w11, lt
000000000001494c	asr	w11, w11, #1
0000000000014950	sbfiz	x12, x11, #4, #32
0000000000014954	ldr	w12, [x8, x12]
0000000000014958	cmp	w12, #0xc8
000000000001495c	csinc	w10, w10, w11, ge
0000000000014960	csel	w9, w9, w11, lt
0000000000014964	cmp	w10, w9
0000000000014968	b.lt	0x14940
000000000001496c	b	0x149a0
0000000000014970	mov	w10, #0x0
0000000000014974	b	0x14980
0000000000014978	mov	w10, #0x0
000000000001497c	b	0x149a0
0000000000014980	sxtw	x9, w10
0000000000014984	add	x8, x8, x9, lsl #4
0000000000014988	ldr	x8, [x8, #0x8]
000000000001498c	ldr	x8, [x8]
0000000000014990	mov	x0, x22
0000000000014994	ldr	x2, [sp, #0x28]
0000000000014998	blr	x8
000000000001499c	b	0x14200
00000000000149a0	sxtw	x9, w10
00000000000149a4	add	x8, x8, x9, lsl #4
00000000000149a8	ldr	x8, [x8, #0x8]
00000000000149ac	ldr	x8, [x8, #0x8]
00000000000149b0	mov	x0, x22
00000000000149b4	ldr	x2, [sp, #0x18]
00000000000149b8	b	0x141fc
00000000000149bc	ldr	x8, [x22]
00000000000149c0	and	x8, x8, #0xfffffffffffffffc
00000000000149c4	ldr	x8, [x8]
00000000000149c8	ldr	w9, [x8, #0x3c]
00000000000149cc	ldr	x8, [x8, #0x40]
00000000000149d0	tbnz	w9, #0x1f, 0x149e0
00000000000149d4	mov	w10, #0xc8
00000000000149d8	and	x9, x9, x10
00000000000149dc	b	0x14a64
00000000000149e0	neg	w10, w9
00000000000149e4	mvn	w9, w9
00000000000149e8	cmp	w10, #0x9
00000000000149ec	b.ge	0x14a24
00000000000149f0	cmp	w10, #0x2
00000000000149f4	b.lt	0x14a58
00000000000149f8	mov	x10, #0x0
00000000000149fc	mov	x11, x8
0000000000014a00	ldr	w12, [x11]
0000000000014a04	cmp	w12, #0xc7
0000000000014a08	b.gt	0x14a60
0000000000014a0c	add	x10, x10, #0x1
0000000000014a10	add	x11, x11, #0x10
0000000000014a14	cmp	x9, x10
0000000000014a18	b.ne	0x14a00
0000000000014a1c	mov	x10, x9
0000000000014a20	b	0x14a60
0000000000014a24	mov	w10, #0x0
0000000000014a28	add	w11, w9, w10
0000000000014a2c	cmp	w11, #0x0
0000000000014a30	cinc	w11, w11, lt
0000000000014a34	asr	w11, w11, #1
0000000000014a38	sbfiz	x12, x11, #4, #32
0000000000014a3c	ldr	w12, [x8, x12]
0000000000014a40	cmp	w12, #0xc8
0000000000014a44	csinc	w10, w10, w11, ge
0000000000014a48	csel	w9, w9, w11, lt
0000000000014a4c	cmp	w10, w9
0000000000014a50	b.lt	0x14a28
0000000000014a54	b	0x14a60
0000000000014a58	mov	w10, #0x0
0000000000014a5c	b	0x14a60
0000000000014a60	sxtw	x9, w10
0000000000014a64	add	x10, sp, #0x70
0000000000014a68	add	x2, x10, #0x40
0000000000014a6c	add	x8, x8, x9, lsl #4
0000000000014a70	ldr	x8, [x8, #0x8]
0000000000014a74	ldr	x8, [x8, #0x8]
0000000000014a78	mov	x0, x22
0000000000014a7c	ldr	x1, [sp, #0x8]
0000000000014a80	blr	x8
0000000000014a84	str	x22, [sp, #0x60]
0000000000014a88	mov	x0, x21
0000000000014a8c	blr	x20
0000000000014a90	mov	x19, x0
0000000000014a94	ldr	x8, [x0]
0000000000014a98	ldr	x9, [sp, #0x78]
0000000000014a9c	str	x9, [x8, #0x110]
0000000000014aa0	mov	x0, x22
0000000000014aa4	ldr	x20, [sp, #0x10]
0000000000014aa8	mov	x1, x20
0000000000014aac	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000014ab0	str	x0, [x20]
0000000000014ab4	ldr	x8, [x19]
0000000000014ab8	ldr	x9, [sp, #0x48]
0000000000014abc	str	x9, [x8, #0x110]
0000000000014ac0	str	x0, [x20]
0000000000014ac4	ldp	x29, x30, [sp, #0x160]
0000000000014ac8	ldp	x20, x19, [sp, #0x150]
0000000000014acc	ldp	x22, x21, [sp, #0x140]
0000000000014ad0	ldp	x24, x23, [sp, #0x130]
0000000000014ad4	ldp	x26, x25, [sp, #0x120]
0000000000014ad8	ldp	x28, x27, [sp, #0x110]
0000000000014adc	add	sp, sp, #0x170
0000000000014ae0	ret
_kfun:kotlin.collections.AbstractMutableCollection#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000014ae4	sub	sp, sp, #0x80
0000000000014ae8	stp	x26, x25, [sp, #0x30]
0000000000014aec	stp	x24, x23, [sp, #0x40]
0000000000014af0	stp	x22, x21, [sp, #0x50]
0000000000014af4	stp	x20, x19, [sp, #0x60]
0000000000014af8	stp	x29, x30, [sp, #0x70]
0000000000014afc	add	x29, sp, #0x70
0000000000014b00	mov	x21, x1
0000000000014b04	mov	x19, x0
0000000000014b08	movi.16b	v0, #0x0
0000000000014b0c	stp	q0, q0, [sp]
0000000000014b10	str	xzr, [sp, #0x20]
0000000000014b14	mov	x20, sp
0000000000014b18	add	x22, x20, #0x18
0000000000014b1c	adrp	x0, 88 ; 0x6c000
0000000000014b20	add	x0, x0, #0xbb0
0000000000014b24	ldr	x8, [x0]
0000000000014b28	blr	x8
0000000000014b2c	ldr	x23, [x0]
0000000000014b30	ldr	x8, [x23, #0x110]
0000000000014b34	str	x20, [x23, #0x110]
0000000000014b38	mov	x9, #0x500000000
0000000000014b3c	stp	x8, x9, [sp, #0x8]
0000000000014b40	adr	x24, #0x71f03
0000000000014b44	nop
0000000000014b48	ldarb	w8, [x24]
0000000000014b4c	tbz	w8, #0x0, 0x14b54
0000000000014b50	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014b54	add	x20, x20, #0x20
0000000000014b58	ldr	x8, [x21]
0000000000014b5c	and	x8, x8, #0xfffffffffffffffc
0000000000014b60	ldr	x8, [x8]
0000000000014b64	ldr	w9, [x8, #0x3c]
0000000000014b68	ldr	x8, [x8, #0x40]
0000000000014b6c	tbnz	w9, #0x1f, 0x14b7c
0000000000014b70	mov	w10, #0x12
0000000000014b74	and	x9, x9, x10
0000000000014b78	b	0x14c00
0000000000014b7c	neg	w10, w9
0000000000014b80	mvn	w9, w9
0000000000014b84	cmp	w10, #0x9
0000000000014b88	b.ge	0x14bc0
0000000000014b8c	cmp	w10, #0x2
0000000000014b90	b.lt	0x14bf4
0000000000014b94	mov	x10, #0x0
0000000000014b98	mov	x11, x8
0000000000014b9c	ldr	w12, [x11]
0000000000014ba0	cmp	w12, #0x11
0000000000014ba4	b.gt	0x14bfc
0000000000014ba8	add	x10, x10, #0x1
0000000000014bac	add	x11, x11, #0x10
0000000000014bb0	cmp	x9, x10
0000000000014bb4	b.ne	0x14b9c
0000000000014bb8	mov	x10, x9
0000000000014bbc	b	0x14bfc
0000000000014bc0	mov	w10, #0x0
0000000000014bc4	add	w11, w9, w10
0000000000014bc8	cmp	w11, #0x0
0000000000014bcc	cinc	w11, w11, lt
0000000000014bd0	asr	w11, w11, #1
0000000000014bd4	sbfiz	x12, x11, #4, #32
0000000000014bd8	ldr	w12, [x8, x12]
0000000000014bdc	cmp	w12, #0x12
0000000000014be0	csinc	w10, w10, w11, ge
0000000000014be4	csel	w9, w9, w11, lt
0000000000014be8	cmp	w10, w9
0000000000014bec	b.lt	0x14bc4
0000000000014bf0	b	0x14bfc
0000000000014bf4	mov	w10, #0x0
0000000000014bf8	b	0x14bfc
0000000000014bfc	sxtw	x9, w10
0000000000014c00	add	x8, x8, x9, lsl #4
0000000000014c04	ldr	x8, [x8, #0x8]
0000000000014c08	ldr	x8, [x8, #0x20]
0000000000014c0c	mov	x0, x21
0000000000014c10	mov	x1, x22
0000000000014c14	blr	x8
0000000000014c18	mov	x21, x0
0000000000014c1c	mov	w22, #0x0
0000000000014c20	mov	w25, #0xa0
0000000000014c24	b	0x14c7c
0000000000014c28	ldr	x8, [x21]
0000000000014c2c	and	x8, x8, #0xfffffffffffffffc
0000000000014c30	ldr	x8, [x8]
0000000000014c34	ldr	w9, [x8, #0x3c]
0000000000014c38	ldr	x8, [x8, #0x40]
0000000000014c3c	tbnz	w9, #0x1f, 0x14cf8
0000000000014c40	and	x9, x9, x25
0000000000014c44	add	x8, x8, x9, lsl #4
0000000000014c48	ldr	x8, [x8, #0x8]
0000000000014c4c	ldr	x8, [x8, #0x8]
0000000000014c50	mov	x0, x21
0000000000014c54	mov	x1, x20
0000000000014c58	blr	x8
0000000000014c5c	mov	x1, x0
0000000000014c60	ldr	x8, [x19]
0000000000014c64	and	x8, x8, #0xfffffffffffffffc
0000000000014c68	ldr	x8, [x8]
0000000000014c6c	ldr	x8, [x8, #0xc0]
0000000000014c70	mov	x0, x19
0000000000014c74	blr	x8
0000000000014c78	orr	w22, w0, w22
0000000000014c7c	ldr	x8, [x21]
0000000000014c80	and	x8, x8, #0xfffffffffffffffc
0000000000014c84	ldr	x8, [x8]
0000000000014c88	ldr	w9, [x8, #0x3c]
0000000000014c8c	ldr	x8, [x8, #0x40]
0000000000014c90	tbnz	w9, #0x1f, 0x14cb4
0000000000014c94	and	x9, x9, x25
0000000000014c98	add	x8, x8, x9, lsl #4
0000000000014c9c	ldr	x8, [x8, #0x8]
0000000000014ca0	ldr	x8, [x8]
0000000000014ca4	mov	x0, x21
0000000000014ca8	blr	x8
0000000000014cac	tbnz	w0, #0x0, 0x14dd0
0000000000014cb0	b	0x14de8
0000000000014cb4	neg	w10, w9
0000000000014cb8	mvn	w9, w9
0000000000014cbc	cmp	w10, #0x9
0000000000014cc0	b.ge	0x14d3c
0000000000014cc4	cmp	w10, #0x2
0000000000014cc8	b.lt	0x14da4
0000000000014ccc	mov	x10, #0x0
0000000000014cd0	mov	x11, x8
0000000000014cd4	ldr	w12, [x11]
0000000000014cd8	cmp	w12, #0x9f
0000000000014cdc	b.gt	0x14db4
0000000000014ce0	add	x10, x10, #0x1
0000000000014ce4	add	x11, x11, #0x10
0000000000014ce8	cmp	x9, x10
0000000000014cec	b.ne	0x14cd4
0000000000014cf0	mov	x10, x9
0000000000014cf4	b	0x14db4
0000000000014cf8	neg	w10, w9
0000000000014cfc	mvn	w9, w9
0000000000014d00	cmp	w10, #0x9
0000000000014d04	b.ge	0x14d70
0000000000014d08	cmp	w10, #0x2
0000000000014d0c	b.lt	0x14dac
0000000000014d10	mov	x10, #0x0
0000000000014d14	mov	x11, x8
0000000000014d18	ldr	w12, [x11]
0000000000014d1c	cmp	w12, #0x9f
0000000000014d20	b.gt	0x14de0
0000000000014d24	add	x10, x10, #0x1
0000000000014d28	add	x11, x11, #0x10
0000000000014d2c	cmp	x9, x10
0000000000014d30	b.ne	0x14d18
0000000000014d34	mov	x10, x9
0000000000014d38	b	0x14de0
0000000000014d3c	mov	w10, #0x0
0000000000014d40	add	w11, w9, w10
0000000000014d44	cmp	w11, #0x0
0000000000014d48	cinc	w11, w11, lt
0000000000014d4c	asr	w11, w11, #1
0000000000014d50	sbfiz	x12, x11, #4, #32
0000000000014d54	ldr	w12, [x8, x12]
0000000000014d58	cmp	w12, #0xa0
0000000000014d5c	csinc	w10, w10, w11, ge
0000000000014d60	csel	w9, w9, w11, lt
0000000000014d64	cmp	w10, w9
0000000000014d68	b.lt	0x14d40
0000000000014d6c	b	0x14db4
0000000000014d70	mov	w10, #0x0
0000000000014d74	add	w11, w9, w10
0000000000014d78	cmp	w11, #0x0
0000000000014d7c	cinc	w11, w11, lt
0000000000014d80	asr	w11, w11, #1
0000000000014d84	sbfiz	x12, x11, #4, #32
0000000000014d88	ldr	w12, [x8, x12]
0000000000014d8c	cmp	w12, #0xa0
0000000000014d90	csinc	w10, w10, w11, ge
0000000000014d94	csel	w9, w9, w11, lt
0000000000014d98	cmp	w10, w9
0000000000014d9c	b.lt	0x14d74
0000000000014da0	b	0x14de0
0000000000014da4	mov	w10, #0x0
0000000000014da8	b	0x14db4
0000000000014dac	mov	w10, #0x0
0000000000014db0	b	0x14de0
0000000000014db4	sxtw	x9, w10
0000000000014db8	add	x8, x8, x9, lsl #4
0000000000014dbc	ldr	x8, [x8, #0x8]
0000000000014dc0	ldr	x8, [x8]
0000000000014dc4	mov	x0, x21
0000000000014dc8	blr	x8
0000000000014dcc	tbz	w0, #0x0, 0x14de8
0000000000014dd0	ldarb	w8, [x24]
0000000000014dd4	tbz	w8, #0x0, 0x14c28
0000000000014dd8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014ddc	b	0x14c28
0000000000014de0	sxtw	x9, w10
0000000000014de4	b	0x14c44
0000000000014de8	ldr	x8, [sp, #0x8]
0000000000014dec	str	x8, [x23, #0x110]
0000000000014df0	and	w0, w22, #0x1
0000000000014df4	ldp	x29, x30, [sp, #0x70]
0000000000014df8	ldp	x20, x19, [sp, #0x60]
0000000000014dfc	ldp	x22, x21, [sp, #0x50]
0000000000014e00	ldp	x24, x23, [sp, #0x40]
0000000000014e04	ldp	x26, x25, [sp, #0x30]
0000000000014e08	add	sp, sp, #0x80
0000000000014e0c	ret
_kfun:kotlin.collections.AbstractMutableCollection#remove(1:0){}kotlin.Boolean:
0000000000014e10	sub	sp, sp, #0x70
0000000000014e14	stp	x24, x23, [sp, #0x30]
0000000000014e18	stp	x22, x21, [sp, #0x40]
0000000000014e1c	stp	x20, x19, [sp, #0x50]
0000000000014e20	stp	x29, x30, [sp, #0x60]
0000000000014e24	add	x29, sp, #0x60
0000000000014e28	mov	x20, x1
0000000000014e2c	mov	x19, x0
0000000000014e30	movi.16b	v0, #0x0
0000000000014e34	stp	q0, q0, [sp]
0000000000014e38	str	xzr, [sp, #0x20]
0000000000014e3c	mov	x8, sp
0000000000014e40	add	x21, x8, #0x20
0000000000014e44	add	x22, x8, #0x18
0000000000014e48	adrp	x0, 88 ; 0x6c000
0000000000014e4c	add	x0, x0, #0xbb0
0000000000014e50	ldr	x9, [x0]
0000000000014e54	blr	x9
0000000000014e58	ldr	x23, [x0]
0000000000014e5c	ldr	x9, [x23, #0x110]
0000000000014e60	str	x8, [x23, #0x110]
0000000000014e64	mov	x8, #0x500000000
0000000000014e68	stp	x9, x8, [sp, #0x8]
0000000000014e6c	adr	x24, #0x71bd7
0000000000014e70	nop
0000000000014e74	ldarb	w8, [x24]
0000000000014e78	tbz	w8, #0x0, 0x14e80
0000000000014e7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014e80	ldr	x8, [x19]
0000000000014e84	and	x8, x8, #0xfffffffffffffffc
0000000000014e88	ldr	x8, [x8]
0000000000014e8c	ldr	x8, [x8, #0xa8]
0000000000014e90	mov	x0, x19
0000000000014e94	mov	x1, x22
0000000000014e98	blr	x8
0000000000014e9c	mov	x19, x0
0000000000014ea0	mov	w22, #0xa0
0000000000014ea4	b	0x14eac
0000000000014ea8	cbz	x20, 0x15068
0000000000014eac	ldr	x8, [x19]
0000000000014eb0	and	x8, x8, #0xfffffffffffffffc
0000000000014eb4	ldr	x8, [x8]
0000000000014eb8	ldr	w9, [x8, #0x3c]
0000000000014ebc	ldr	x8, [x8, #0x40]
0000000000014ec0	tbnz	w9, #0x1f, 0x14ee4
0000000000014ec4	and	x9, x9, x22
0000000000014ec8	add	x8, x8, x9, lsl #4
0000000000014ecc	ldr	x8, [x8, #0x8]
0000000000014ed0	ldr	x8, [x8]
0000000000014ed4	mov	x0, x19
0000000000014ed8	blr	x8
0000000000014edc	tbnz	w0, #0x0, 0x14f80
0000000000014ee0	b	0x1508c
0000000000014ee4	neg	w10, w9
0000000000014ee8	mvn	w9, w9
0000000000014eec	cmp	w10, #0x9
0000000000014ef0	b.ge	0x14f28
0000000000014ef4	cmp	w10, #0x2
0000000000014ef8	b.lt	0x14f5c
0000000000014efc	mov	x10, #0x0
0000000000014f00	mov	x11, x8
0000000000014f04	ldr	w12, [x11]
0000000000014f08	cmp	w12, #0x9f
0000000000014f0c	b.gt	0x14f64
0000000000014f10	add	x10, x10, #0x1
0000000000014f14	add	x11, x11, #0x10
0000000000014f18	cmp	x9, x10
0000000000014f1c	b.ne	0x14f04
0000000000014f20	mov	x10, x9
0000000000014f24	b	0x14f64
0000000000014f28	mov	w10, #0x0
0000000000014f2c	add	w11, w9, w10
0000000000014f30	cmp	w11, #0x0
0000000000014f34	cinc	w11, w11, lt
0000000000014f38	asr	w11, w11, #1
0000000000014f3c	sbfiz	x12, x11, #4, #32
0000000000014f40	ldr	w12, [x8, x12]
0000000000014f44	cmp	w12, #0xa0
0000000000014f48	csinc	w10, w10, w11, ge
0000000000014f4c	csel	w9, w9, w11, lt
0000000000014f50	cmp	w10, w9
0000000000014f54	b.lt	0x14f2c
0000000000014f58	b	0x14f64
0000000000014f5c	mov	w10, #0x0
0000000000014f60	b	0x14f64
0000000000014f64	sxtw	x9, w10
0000000000014f68	add	x8, x8, x9, lsl #4
0000000000014f6c	ldr	x8, [x8, #0x8]
0000000000014f70	ldr	x8, [x8]
0000000000014f74	mov	x0, x19
0000000000014f78	blr	x8
0000000000014f7c	tbz	w0, #0x0, 0x1508c
0000000000014f80	ldarb	w8, [x24]
0000000000014f84	tbz	w8, #0x0, 0x14f8c
0000000000014f88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014f8c	ldr	x8, [x19]
0000000000014f90	and	x8, x8, #0xfffffffffffffffc
0000000000014f94	ldr	x8, [x8]
0000000000014f98	ldr	w9, [x8, #0x3c]
0000000000014f9c	ldr	x8, [x8, #0x40]
0000000000014fa0	tbnz	w9, #0x1f, 0x14fac
0000000000014fa4	and	x9, x9, x22
0000000000014fa8	b	0x15030
0000000000014fac	neg	w10, w9
0000000000014fb0	mvn	w9, w9
0000000000014fb4	cmp	w10, #0x9
0000000000014fb8	b.ge	0x14ff0
0000000000014fbc	cmp	w10, #0x2
0000000000014fc0	b.lt	0x15024
0000000000014fc4	mov	x10, #0x0
0000000000014fc8	mov	x11, x8
0000000000014fcc	ldr	w12, [x11]
0000000000014fd0	cmp	w12, #0x9f
0000000000014fd4	b.gt	0x1502c
0000000000014fd8	add	x10, x10, #0x1
0000000000014fdc	add	x11, x11, #0x10
0000000000014fe0	cmp	x9, x10
0000000000014fe4	b.ne	0x14fcc
0000000000014fe8	mov	x10, x9
0000000000014fec	b	0x1502c
0000000000014ff0	mov	w10, #0x0
0000000000014ff4	add	w11, w9, w10
0000000000014ff8	cmp	w11, #0x0
0000000000014ffc	cinc	w11, w11, lt
0000000000015000	asr	w11, w11, #1
0000000000015004	sbfiz	x12, x11, #4, #32
0000000000015008	ldr	w12, [x8, x12]
000000000001500c	cmp	w12, #0xa0
0000000000015010	csinc	w10, w10, w11, ge
0000000000015014	csel	w9, w9, w11, lt
0000000000015018	cmp	w10, w9
000000000001501c	b.lt	0x14ff4
0000000000015020	b	0x1502c
0000000000015024	mov	w10, #0x0
0000000000015028	b	0x1502c
000000000001502c	sxtw	x9, w10
0000000000015030	add	x8, x8, x9, lsl #4
0000000000015034	ldr	x8, [x8, #0x8]
0000000000015038	ldr	x8, [x8, #0x8]
000000000001503c	mov	x0, x19
0000000000015040	mov	x1, x21
0000000000015044	blr	x8
0000000000015048	cbz	x0, 0x14ea8
000000000001504c	ldr	x8, [x0]
0000000000015050	and	x8, x8, #0xfffffffffffffffc
0000000000015054	ldr	x8, [x8]
0000000000015058	ldr	x8, [x8, #0x70]
000000000001505c	mov	x1, x20
0000000000015060	blr	x8
0000000000015064	tbz	w0, #0x0, 0x14eac
0000000000015068	ldr	x8, [x19]
000000000001506c	and	x8, x8, #0xfffffffffffffffc
0000000000015070	ldr	x8, [x8]
0000000000015074	ldr	w9, [x8, #0x3c]
0000000000015078	ldr	x8, [x8, #0x40]
000000000001507c	tbnz	w9, #0x1f, 0x15094
0000000000015080	mov	w10, #0x39
0000000000015084	and	x9, x9, x10
0000000000015088	b	0x15118
000000000001508c	mov	w0, #0x0
0000000000015090	b	0x15130
0000000000015094	neg	w10, w9
0000000000015098	mvn	w9, w9
000000000001509c	cmp	w10, #0x9
00000000000150a0	b.ge	0x150d8
00000000000150a4	cmp	w10, #0x2
00000000000150a8	b.lt	0x1510c
00000000000150ac	mov	x10, #0x0
00000000000150b0	mov	x11, x8
00000000000150b4	ldr	w12, [x11]
00000000000150b8	cmp	w12, #0x38
00000000000150bc	b.gt	0x15114
00000000000150c0	add	x10, x10, #0x1
00000000000150c4	add	x11, x11, #0x10
00000000000150c8	cmp	x9, x10
00000000000150cc	b.ne	0x150b4
00000000000150d0	mov	x10, x9
00000000000150d4	b	0x15114
00000000000150d8	mov	w10, #0x0
00000000000150dc	add	w11, w9, w10
00000000000150e0	cmp	w11, #0x0
00000000000150e4	cinc	w11, w11, lt
00000000000150e8	asr	w11, w11, #1
00000000000150ec	sbfiz	x12, x11, #4, #32
00000000000150f0	ldr	w12, [x8, x12]
00000000000150f4	cmp	w12, #0x39
00000000000150f8	csinc	w10, w10, w11, ge
00000000000150fc	csel	w9, w9, w11, lt
0000000000015100	cmp	w10, w9
0000000000015104	b.lt	0x150dc
0000000000015108	b	0x15114
000000000001510c	mov	w10, #0x0
0000000000015110	b	0x15114
0000000000015114	sxtw	x9, w10
0000000000015118	add	x8, x8, x9, lsl #4
000000000001511c	ldr	x8, [x8, #0x8]
0000000000015120	ldr	x8, [x8]
0000000000015124	mov	x0, x19
0000000000015128	blr	x8
000000000001512c	mov	w0, #0x1
0000000000015130	ldr	x8, [sp, #0x8]
0000000000015134	str	x8, [x23, #0x110]
0000000000015138	ldp	x29, x30, [sp, #0x60]
000000000001513c	ldp	x20, x19, [sp, #0x50]
0000000000015140	ldp	x22, x21, [sp, #0x40]
0000000000015144	ldp	x24, x23, [sp, #0x30]
0000000000015148	add	sp, sp, #0x70
000000000001514c	ret
_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000015150	sub	sp, sp, #0x50
0000000000015154	stp	x22, x21, [sp, #0x20]
0000000000015158	stp	x20, x19, [sp, #0x30]
000000000001515c	stp	x29, x30, [sp, #0x40]
0000000000015160	add	x29, sp, #0x40
0000000000015164	mov	x20, x1
0000000000015168	mov	x19, x0
000000000001516c	movi.16b	v0, #0x0
0000000000015170	stp	q0, q0, [sp]
0000000000015174	adrp	x0, 87 ; 0x6c000
0000000000015178	add	x0, x0, #0xbb0
000000000001517c	ldr	x8, [x0]
0000000000015180	blr	x8
0000000000015184	ldr	x21, [x0]
0000000000015188	ldr	x8, [x21, #0x110]
000000000001518c	mov	x9, sp
0000000000015190	str	x9, [x21, #0x110]
0000000000015194	mov	x9, #0x400000000
0000000000015198	stp	x8, x9, [sp, #0x8]
000000000001519c	adr	x8, #0x718a7
00000000000151a0	nop
00000000000151a4	ldarb	w8, [x8]
00000000000151a8	tbz	w8, #0x0, 0x151b0
00000000000151ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000151b0	ldr	x8, [x19]
00000000000151b4	and	x8, x8, #0xfffffffffffffffc
00000000000151b8	ldr	x8, [x8]
00000000000151bc	ldr	w9, [x8, #0x3c]
00000000000151c0	ldr	x8, [x8, #0x40]
00000000000151c4	tbnz	w9, #0x1f, 0x15234
00000000000151c8	mov	w10, #0x24
00000000000151cc	and	x9, x9, x10
00000000000151d0	lsl	x9, x9, #4
00000000000151d4	ldr	w8, [x8, x9]
00000000000151d8	cmp	w8, #0x24
00000000000151dc	b.ne	0x152d8
00000000000151e0	ldr	x8, [x21, #0x118]
00000000000151e4	add	x0, x8, #0x70
00000000000151e8	mov	w1, #0x18
00000000000151ec	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000151f0	adr	x8, #0x45c70
00000000000151f4	nop
00000000000151f8	mov	x1, x0
00000000000151fc	str	x8, [x1, #0x10]!
0000000000015200	stur	xzr, [x1, #-0x8]
0000000000015204	str	x1, [sp, #0x18]
0000000000015208	str	x20, [x1, #0x8]
000000000001520c	mov	x0, x19
0000000000015210	mov	w2, #0x1
0000000000015214	bl	"_kfun:kotlin.collections.filterInPlace#internal.14"
0000000000015218	ldr	x8, [sp, #0x8]
000000000001521c	str	x8, [x21, #0x110]
0000000000015220	ldp	x29, x30, [sp, #0x40]
0000000000015224	ldp	x20, x19, [sp, #0x30]
0000000000015228	ldp	x22, x21, [sp, #0x20]
000000000001522c	add	sp, sp, #0x50
0000000000015230	ret
0000000000015234	neg	w10, w9
0000000000015238	mvn	w9, w9
000000000001523c	cmp	w10, #0x9
0000000000015240	b.ge	0x1528c
0000000000015244	cmp	w10, #0x2
0000000000015248	b.lt	0x152c0
000000000001524c	mov	x10, #0x0
0000000000015250	mov	x11, x8
0000000000015254	ldr	w12, [x11]
0000000000015258	cmp	w12, #0x23
000000000001525c	b.gt	0x152e8
0000000000015260	add	x10, x10, #0x1
0000000000015264	add	x11, x11, #0x10
0000000000015268	cmp	x9, x10
000000000001526c	b.ne	0x15254
0000000000015270	mov	x10, x9
0000000000015274	sxtw	x9, w10
0000000000015278	lsl	x9, x9, #4
000000000001527c	ldr	w8, [x8, x9]
0000000000015280	cmp	w8, #0x24
0000000000015284	b.eq	0x151e0
0000000000015288	b	0x152d8
000000000001528c	mov	w10, #0x0
0000000000015290	add	w11, w9, w10
0000000000015294	cmp	w11, #0x0
0000000000015298	cinc	w11, w11, lt
000000000001529c	asr	w11, w11, #1
00000000000152a0	sbfiz	x12, x11, #4, #32
00000000000152a4	ldr	w12, [x8, x12]
00000000000152a8	cmp	w12, #0x24
00000000000152ac	csinc	w10, w10, w11, ge
00000000000152b0	csel	w9, w9, w11, lt
00000000000152b4	cmp	w10, w9
00000000000152b8	b.lt	0x15290
00000000000152bc	b	0x152c4
00000000000152c0	mov	w10, #0x0
00000000000152c4	sxtw	x9, w10
00000000000152c8	lsl	x9, x9, #4
00000000000152cc	ldr	w8, [x8, x9]
00000000000152d0	cmp	w8, #0x24
00000000000152d4	b.eq	0x151e0
00000000000152d8	adr	x1, #0x46288
00000000000152dc	nop
00000000000152e0	mov	x0, x19
00000000000152e4	bl	_ThrowClassCastException
00000000000152e8	sxtw	x9, w10
00000000000152ec	lsl	x9, x9, #4
00000000000152f0	ldr	w8, [x8, x9]
00000000000152f4	cmp	w8, #0x24
00000000000152f8	b.eq	0x151e0
00000000000152fc	b	0x152d8
_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000015300	sub	sp, sp, #0x50
0000000000015304	stp	x22, x21, [sp, #0x20]
0000000000015308	stp	x20, x19, [sp, #0x30]
000000000001530c	stp	x29, x30, [sp, #0x40]
0000000000015310	add	x29, sp, #0x40
0000000000015314	mov	x20, x1
0000000000015318	mov	x19, x0
000000000001531c	movi.16b	v0, #0x0
0000000000015320	stp	q0, q0, [sp]
0000000000015324	adrp	x0, 87 ; 0x6c000
0000000000015328	add	x0, x0, #0xbb0
000000000001532c	ldr	x8, [x0]
0000000000015330	blr	x8
0000000000015334	ldr	x21, [x0]
0000000000015338	ldr	x8, [x21, #0x110]
000000000001533c	mov	x9, sp
0000000000015340	str	x9, [x21, #0x110]
0000000000015344	mov	x9, #0x400000000
0000000000015348	stp	x8, x9, [sp, #0x8]
000000000001534c	adr	x8, #0x716f7
0000000000015350	nop
0000000000015354	ldarb	w8, [x8]
0000000000015358	tbz	w8, #0x0, 0x15360
000000000001535c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015360	ldr	x8, [x19]
0000000000015364	and	x8, x8, #0xfffffffffffffffc
0000000000015368	ldr	x8, [x8]
000000000001536c	ldr	w9, [x8, #0x3c]
0000000000015370	ldr	x8, [x8, #0x40]
0000000000015374	tbnz	w9, #0x1f, 0x153e4
0000000000015378	mov	w10, #0x24
000000000001537c	and	x9, x9, x10
0000000000015380	lsl	x9, x9, #4
0000000000015384	ldr	w8, [x8, x9]
0000000000015388	cmp	w8, #0x24
000000000001538c	b.ne	0x15488
0000000000015390	ldr	x8, [x21, #0x118]
0000000000015394	add	x0, x8, #0x70
0000000000015398	mov	w1, #0x18
000000000001539c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000153a0	adr	x8, #0x45b50
00000000000153a4	nop
00000000000153a8	mov	x1, x0
00000000000153ac	str	x8, [x1, #0x10]!
00000000000153b0	stur	xzr, [x1, #-0x8]
00000000000153b4	str	x1, [sp, #0x18]
00000000000153b8	str	x20, [x1, #0x8]
00000000000153bc	mov	x0, x19
00000000000153c0	mov	w2, #0x0
00000000000153c4	bl	"_kfun:kotlin.collections.filterInPlace#internal.14"
00000000000153c8	ldr	x8, [sp, #0x8]
00000000000153cc	str	x8, [x21, #0x110]
00000000000153d0	ldp	x29, x30, [sp, #0x40]
00000000000153d4	ldp	x20, x19, [sp, #0x30]
00000000000153d8	ldp	x22, x21, [sp, #0x20]
00000000000153dc	add	sp, sp, #0x50
00000000000153e0	ret
00000000000153e4	neg	w10, w9
00000000000153e8	mvn	w9, w9
00000000000153ec	cmp	w10, #0x9
00000000000153f0	b.ge	0x1543c
00000000000153f4	cmp	w10, #0x2
00000000000153f8	b.lt	0x15470
00000000000153fc	mov	x10, #0x0
0000000000015400	mov	x11, x8
0000000000015404	ldr	w12, [x11]
0000000000015408	cmp	w12, #0x23
000000000001540c	b.gt	0x15498
0000000000015410	add	x10, x10, #0x1
0000000000015414	add	x11, x11, #0x10
0000000000015418	cmp	x9, x10
000000000001541c	b.ne	0x15404
0000000000015420	mov	x10, x9
0000000000015424	sxtw	x9, w10
0000000000015428	lsl	x9, x9, #4
000000000001542c	ldr	w8, [x8, x9]
0000000000015430	cmp	w8, #0x24
0000000000015434	b.eq	0x15390
0000000000015438	b	0x15488
000000000001543c	mov	w10, #0x0
0000000000015440	add	w11, w9, w10
0000000000015444	cmp	w11, #0x0
0000000000015448	cinc	w11, w11, lt
000000000001544c	asr	w11, w11, #1
0000000000015450	sbfiz	x12, x11, #4, #32
0000000000015454	ldr	w12, [x8, x12]
0000000000015458	cmp	w12, #0x24
000000000001545c	csinc	w10, w10, w11, ge
0000000000015460	csel	w9, w9, w11, lt
0000000000015464	cmp	w10, w9
0000000000015468	b.lt	0x15440
000000000001546c	b	0x15474
0000000000015470	mov	w10, #0x0
0000000000015474	sxtw	x9, w10
0000000000015478	lsl	x9, x9, #4
000000000001547c	ldr	w8, [x8, x9]
0000000000015480	cmp	w8, #0x24
0000000000015484	b.eq	0x15390
0000000000015488	adr	x1, #0x460d8
000000000001548c	nop
0000000000015490	mov	x0, x19
0000000000015494	bl	_ThrowClassCastException
0000000000015498	sxtw	x9, w10
000000000001549c	lsl	x9, x9, #4
00000000000154a0	ldr	w8, [x8, x9]
00000000000154a4	cmp	w8, #0x24
00000000000154a8	b.eq	0x15390
00000000000154ac	b	0x15488
_kfun:kotlin.collections.AbstractMutableCollection.$removeAll$lambda$0$FUNCTION_REFERENCE$13.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
00000000000154b0	stp	x22, x21, [sp, #-0x30]!
00000000000154b4	stp	x20, x19, [sp, #0x10]
00000000000154b8	stp	x29, x30, [sp, #0x20]
00000000000154bc	add	x29, sp, #0x20
00000000000154c0	mov	x19, x2
00000000000154c4	mov	x20, x1
00000000000154c8	mov	x21, x0
00000000000154cc	adr	x8, #0x71577
00000000000154d0	nop
00000000000154d4	ldarb	w8, [x8]
00000000000154d8	tbz	w8, #0x0, 0x154e0
00000000000154dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000154e0	ldr	x0, [x21, #0x8]
00000000000154e4	ldr	x8, [x0]
00000000000154e8	and	x8, x8, #0xfffffffffffffffc
00000000000154ec	ldr	x8, [x8]
00000000000154f0	ldr	w9, [x8, #0x3c]
00000000000154f4	ldr	x8, [x8, #0x40]
00000000000154f8	tbnz	w9, #0x1f, 0x15508
00000000000154fc	mov	w10, #0x12
0000000000015500	and	x9, x9, x10
0000000000015504	b	0x1558c
0000000000015508	neg	w10, w9
000000000001550c	mvn	w9, w9
0000000000015510	cmp	w10, #0x9
0000000000015514	b.ge	0x1554c
0000000000015518	cmp	w10, #0x2
000000000001551c	b.lt	0x15580
0000000000015520	mov	x10, #0x0
0000000000015524	mov	x11, x8
0000000000015528	ldr	w12, [x11]
000000000001552c	cmp	w12, #0x11
0000000000015530	b.gt	0x15588
0000000000015534	add	x10, x10, #0x1
0000000000015538	add	x11, x11, #0x10
000000000001553c	cmp	x9, x10
0000000000015540	b.ne	0x15528
0000000000015544	mov	x10, x9
0000000000015548	b	0x15588
000000000001554c	mov	w10, #0x0
0000000000015550	add	w11, w9, w10
0000000000015554	cmp	w11, #0x0
0000000000015558	cinc	w11, w11, lt
000000000001555c	asr	w11, w11, #1
0000000000015560	sbfiz	x12, x11, #4, #32
0000000000015564	ldr	w12, [x8, x12]
0000000000015568	cmp	w12, #0x12
000000000001556c	csinc	w10, w10, w11, ge
0000000000015570	csel	w9, w9, w11, lt
0000000000015574	cmp	w10, w9
0000000000015578	b.lt	0x15550
000000000001557c	b	0x15588
0000000000015580	mov	w10, #0x0
0000000000015584	b	0x15588
0000000000015588	sxtw	x9, w10
000000000001558c	add	x8, x8, x9, lsl #4
0000000000015590	ldr	x8, [x8, #0x8]
0000000000015594	ldr	x8, [x8, #0x8]
0000000000015598	mov	x1, x20
000000000001559c	blr	x8
00000000000155a0	mov	x1, x19
00000000000155a4	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
00000000000155a8	str	x0, [x19]
00000000000155ac	ldp	x29, x30, [sp, #0x20]
00000000000155b0	ldp	x20, x19, [sp, #0x10]
00000000000155b4	ldp	x22, x21, [sp], #0x30
00000000000155b8	ret
_kfun:kotlin.collections.AbstractMutableCollection.$retainAll$lambda$1$FUNCTION_REFERENCE$14.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
00000000000155bc	stp	x22, x21, [sp, #-0x30]!
00000000000155c0	stp	x20, x19, [sp, #0x10]
00000000000155c4	stp	x29, x30, [sp, #0x20]
00000000000155c8	add	x29, sp, #0x20
00000000000155cc	mov	x19, x2
00000000000155d0	mov	x20, x1
00000000000155d4	mov	x21, x0
00000000000155d8	adr	x8, #0x7146b
00000000000155dc	nop
00000000000155e0	ldarb	w8, [x8]
00000000000155e4	tbz	w8, #0x0, 0x155ec
00000000000155e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000155ec	ldr	x0, [x21, #0x8]
00000000000155f0	ldr	x8, [x0]
00000000000155f4	and	x8, x8, #0xfffffffffffffffc
00000000000155f8	ldr	x8, [x8]
00000000000155fc	ldr	w9, [x8, #0x3c]
0000000000015600	ldr	x8, [x8, #0x40]
0000000000015604	tbnz	w9, #0x1f, 0x15614
0000000000015608	mov	w10, #0x12
000000000001560c	and	x9, x9, x10
0000000000015610	b	0x15698
0000000000015614	neg	w10, w9
0000000000015618	mvn	w9, w9
000000000001561c	cmp	w10, #0x9
0000000000015620	b.ge	0x15658
0000000000015624	cmp	w10, #0x2
0000000000015628	b.lt	0x1568c
000000000001562c	mov	x10, #0x0
0000000000015630	mov	x11, x8
0000000000015634	ldr	w12, [x11]
0000000000015638	cmp	w12, #0x11
000000000001563c	b.gt	0x15694
0000000000015640	add	x10, x10, #0x1
0000000000015644	add	x11, x11, #0x10
0000000000015648	cmp	x9, x10
000000000001564c	b.ne	0x15634
0000000000015650	mov	x10, x9
0000000000015654	b	0x15694
0000000000015658	mov	w10, #0x0
000000000001565c	add	w11, w9, w10
0000000000015660	cmp	w11, #0x0
0000000000015664	cinc	w11, w11, lt
0000000000015668	asr	w11, w11, #1
000000000001566c	sbfiz	x12, x11, #4, #32
0000000000015670	ldr	w12, [x8, x12]
0000000000015674	cmp	w12, #0x12
0000000000015678	csinc	w10, w10, w11, ge
000000000001567c	csel	w9, w9, w11, lt
0000000000015680	cmp	w10, w9
0000000000015684	b.lt	0x1565c
0000000000015688	b	0x15694
000000000001568c	mov	w10, #0x0
0000000000015690	b	0x15694
0000000000015694	sxtw	x9, w10
0000000000015698	add	x8, x8, x9, lsl #4
000000000001569c	ldr	x8, [x8, #0x8]
00000000000156a0	ldr	x8, [x8, #0x8]
00000000000156a4	mov	x1, x20
00000000000156a8	blr	x8
00000000000156ac	mov	x1, x19
00000000000156b0	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
00000000000156b4	str	x0, [x19]
00000000000156b8	ldp	x29, x30, [sp, #0x20]
00000000000156bc	ldp	x20, x19, [sp, #0x10]
00000000000156c0	ldp	x22, x21, [sp], #0x30
00000000000156c4	ret
_kfun:kotlin.collections.AbstractMutableList#add(1:0){}kotlin.Boolean:
00000000000156c8	stp	x20, x19, [sp, #-0x20]!
00000000000156cc	stp	x29, x30, [sp, #0x10]
00000000000156d0	add	x29, sp, #0x10
00000000000156d4	mov	x19, x1
00000000000156d8	mov	x20, x0
00000000000156dc	adr	x8, #0x71367
00000000000156e0	nop
00000000000156e4	ldarb	w8, [x8]
00000000000156e8	tbz	w8, #0x0, 0x156f0
00000000000156ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000156f0	ldr	x8, [x20]
00000000000156f4	and	x8, x8, #0xfffffffffffffffc
00000000000156f8	ldr	x8, [x8]
00000000000156fc	ldr	x8, [x8, #0x88]
0000000000015700	mov	x0, x20
0000000000015704	blr	x8
0000000000015708	mov	x1, x0
000000000001570c	ldr	x8, [x20]
0000000000015710	and	x8, x8, #0xfffffffffffffffc
0000000000015714	ldr	x8, [x8]
0000000000015718	ldr	x8, [x8, #0xf0]
000000000001571c	mov	x0, x20
0000000000015720	mov	x2, x19
0000000000015724	blr	x8
0000000000015728	mov	w0, #0x1
000000000001572c	ldp	x29, x30, [sp, #0x10]
0000000000015730	ldp	x20, x19, [sp], #0x20
0000000000015734	ret
_kfun:kotlin.collections.AbstractMutableList#addAll(kotlin.Int;kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000015738	sub	sp, sp, #0x80
000000000001573c	stp	x26, x25, [sp, #0x30]
0000000000015740	stp	x24, x23, [sp, #0x40]
0000000000015744	stp	x22, x21, [sp, #0x50]
0000000000015748	stp	x20, x19, [sp, #0x60]
000000000001574c	stp	x29, x30, [sp, #0x70]
0000000000015750	add	x29, sp, #0x70
0000000000015754	mov	x22, x2
0000000000015758	mov	x19, x1
000000000001575c	mov	x20, x0
0000000000015760	movi.16b	v0, #0x0
0000000000015764	stp	q0, q0, [sp]
0000000000015768	str	xzr, [sp, #0x20]
000000000001576c	mov	x21, sp
0000000000015770	add	x23, x21, #0x18
0000000000015774	adrp	x0, 87 ; 0x6c000
0000000000015778	add	x0, x0, #0xbb0
000000000001577c	ldr	x8, [x0]
0000000000015780	blr	x8
0000000000015784	ldr	x24, [x0]
0000000000015788	ldr	x8, [x24, #0x110]
000000000001578c	str	x21, [x24, #0x110]
0000000000015790	mov	x9, #0x500000000
0000000000015794	stp	x8, x9, [sp, #0x8]
0000000000015798	adr	x25, #0x712ab
000000000001579c	nop
00000000000157a0	ldarb	w8, [x25]
00000000000157a4	tbz	w8, #0x0, 0x157ac
00000000000157a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000157ac	add	x21, x21, #0x20
00000000000157b0	ldr	x8, [x20]
00000000000157b4	and	x8, x8, #0xfffffffffffffffc
00000000000157b8	ldr	x8, [x8]
00000000000157bc	ldr	x8, [x8, #0x88]
00000000000157c0	mov	x0, x20
00000000000157c4	blr	x8
00000000000157c8	mov	x1, x0
00000000000157cc	mov	x0, x19
00000000000157d0	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
00000000000157d4	ldr	x8, [x22]
00000000000157d8	and	x8, x8, #0xfffffffffffffffc
00000000000157dc	ldr	x8, [x8]
00000000000157e0	ldr	w9, [x8, #0x3c]
00000000000157e4	ldr	x8, [x8, #0x40]
00000000000157e8	tbnz	w9, #0x1f, 0x157f8
00000000000157ec	mov	w10, #0x12
00000000000157f0	and	x9, x9, x10
00000000000157f4	b	0x1587c
00000000000157f8	neg	w10, w9
00000000000157fc	mvn	w9, w9
0000000000015800	cmp	w10, #0x9
0000000000015804	b.ge	0x1583c
0000000000015808	cmp	w10, #0x2
000000000001580c	b.lt	0x15870
0000000000015810	mov	x10, #0x0
0000000000015814	mov	x11, x8
0000000000015818	ldr	w12, [x11]
000000000001581c	cmp	w12, #0x11
0000000000015820	b.gt	0x15878
0000000000015824	add	x10, x10, #0x1
0000000000015828	add	x11, x11, #0x10
000000000001582c	cmp	x9, x10
0000000000015830	b.ne	0x15818
0000000000015834	mov	x10, x9
0000000000015838	b	0x15878
000000000001583c	mov	w10, #0x0
0000000000015840	add	w11, w9, w10
0000000000015844	cmp	w11, #0x0
0000000000015848	cinc	w11, w11, lt
000000000001584c	asr	w11, w11, #1
0000000000015850	sbfiz	x12, x11, #4, #32
0000000000015854	ldr	w12, [x8, x12]
0000000000015858	cmp	w12, #0x12
000000000001585c	csinc	w10, w10, w11, ge
0000000000015860	csel	w9, w9, w11, lt
0000000000015864	cmp	w10, w9
0000000000015868	b.lt	0x15840
000000000001586c	b	0x15878
0000000000015870	mov	w10, #0x0
0000000000015874	b	0x15878
0000000000015878	sxtw	x9, w10
000000000001587c	add	x8, x8, x9, lsl #4
0000000000015880	ldr	x8, [x8, #0x8]
0000000000015884	ldr	x8, [x8, #0x20]
0000000000015888	mov	x0, x22
000000000001588c	mov	x1, x23
0000000000015890	blr	x8
0000000000015894	mov	x22, x0
0000000000015898	mov	w26, #0x0
000000000001589c	mov	w23, #0xa0
00000000000158a0	b	0x15900
00000000000158a4	ldr	x8, [x22]
00000000000158a8	and	x8, x8, #0xfffffffffffffffc
00000000000158ac	ldr	x8, [x8]
00000000000158b0	ldr	w9, [x8, #0x3c]
00000000000158b4	ldr	x8, [x8, #0x40]
00000000000158b8	tbnz	w9, #0x1f, 0x1597c
00000000000158bc	and	x9, x9, x23
00000000000158c0	add	x8, x8, x9, lsl #4
00000000000158c4	ldr	x8, [x8, #0x8]
00000000000158c8	ldr	x8, [x8, #0x8]
00000000000158cc	mov	x0, x22
00000000000158d0	mov	x1, x21
00000000000158d4	blr	x8
00000000000158d8	mov	x2, x0
00000000000158dc	ldr	x8, [x20]
00000000000158e0	and	x8, x8, #0xfffffffffffffffc
00000000000158e4	ldr	x8, [x8]
00000000000158e8	ldr	x8, [x8, #0xf0]
00000000000158ec	mov	x0, x20
00000000000158f0	mov	x1, x19
00000000000158f4	blr	x8
00000000000158f8	add	w19, w19, #0x1
00000000000158fc	mov	w26, #0x1
0000000000015900	ldr	x8, [x22]
0000000000015904	and	x8, x8, #0xfffffffffffffffc
0000000000015908	ldr	x8, [x8]
000000000001590c	ldr	w9, [x8, #0x3c]
0000000000015910	ldr	x8, [x8, #0x40]
0000000000015914	tbnz	w9, #0x1f, 0x15938
0000000000015918	and	x9, x9, x23
000000000001591c	add	x8, x8, x9, lsl #4
0000000000015920	ldr	x8, [x8, #0x8]
0000000000015924	ldr	x8, [x8]
0000000000015928	mov	x0, x22
000000000001592c	blr	x8
0000000000015930	tbnz	w0, #0x0, 0x15a54
0000000000015934	b	0x15a6c
0000000000015938	neg	w10, w9
000000000001593c	mvn	w9, w9
0000000000015940	cmp	w10, #0x9
0000000000015944	b.ge	0x159c0
0000000000015948	cmp	w10, #0x2
000000000001594c	b.lt	0x15a28
0000000000015950	mov	x10, #0x0
0000000000015954	mov	x11, x8
0000000000015958	ldr	w12, [x11]
000000000001595c	cmp	w12, #0x9f
0000000000015960	b.gt	0x15a38
0000000000015964	add	x10, x10, #0x1
0000000000015968	add	x11, x11, #0x10
000000000001596c	cmp	x9, x10
0000000000015970	b.ne	0x15958
0000000000015974	mov	x10, x9
0000000000015978	b	0x15a38
000000000001597c	neg	w10, w9
0000000000015980	mvn	w9, w9
0000000000015984	cmp	w10, #0x9
0000000000015988	b.ge	0x159f4
000000000001598c	cmp	w10, #0x2
0000000000015990	b.lt	0x15a30
0000000000015994	mov	x10, #0x0
0000000000015998	mov	x11, x8
000000000001599c	ldr	w12, [x11]
00000000000159a0	cmp	w12, #0x9f
00000000000159a4	b.gt	0x15a64
00000000000159a8	add	x10, x10, #0x1
00000000000159ac	add	x11, x11, #0x10
00000000000159b0	cmp	x9, x10
00000000000159b4	b.ne	0x1599c
00000000000159b8	mov	x10, x9
00000000000159bc	b	0x15a64
00000000000159c0	mov	w10, #0x0
00000000000159c4	add	w11, w9, w10
00000000000159c8	cmp	w11, #0x0
00000000000159cc	cinc	w11, w11, lt
00000000000159d0	asr	w11, w11, #1
00000000000159d4	sbfiz	x12, x11, #4, #32
00000000000159d8	ldr	w12, [x8, x12]
00000000000159dc	cmp	w12, #0xa0
00000000000159e0	csinc	w10, w10, w11, ge
00000000000159e4	csel	w9, w9, w11, lt
00000000000159e8	cmp	w10, w9
00000000000159ec	b.lt	0x159c4
00000000000159f0	b	0x15a38
00000000000159f4	mov	w10, #0x0
00000000000159f8	add	w11, w9, w10
00000000000159fc	cmp	w11, #0x0
0000000000015a00	cinc	w11, w11, lt
0000000000015a04	asr	w11, w11, #1
0000000000015a08	sbfiz	x12, x11, #4, #32
0000000000015a0c	ldr	w12, [x8, x12]
0000000000015a10	cmp	w12, #0xa0
0000000000015a14	csinc	w10, w10, w11, ge
0000000000015a18	csel	w9, w9, w11, lt
0000000000015a1c	cmp	w10, w9
0000000000015a20	b.lt	0x159f8
0000000000015a24	b	0x15a64
0000000000015a28	mov	w10, #0x0
0000000000015a2c	b	0x15a38
0000000000015a30	mov	w10, #0x0
0000000000015a34	b	0x15a64
0000000000015a38	sxtw	x9, w10
0000000000015a3c	add	x8, x8, x9, lsl #4
0000000000015a40	ldr	x8, [x8, #0x8]
0000000000015a44	ldr	x8, [x8]
0000000000015a48	mov	x0, x22
0000000000015a4c	blr	x8
0000000000015a50	tbz	w0, #0x0, 0x15a6c
0000000000015a54	ldarb	w8, [x25]
0000000000015a58	tbz	w8, #0x0, 0x158a4
0000000000015a5c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015a60	b	0x158a4
0000000000015a64	sxtw	x9, w10
0000000000015a68	b	0x158c0
0000000000015a6c	ldr	x8, [sp, #0x8]
0000000000015a70	str	x8, [x24, #0x110]
0000000000015a74	and	w0, w26, #0x1
0000000000015a78	ldp	x29, x30, [sp, #0x70]
0000000000015a7c	ldp	x20, x19, [sp, #0x60]
0000000000015a80	ldp	x22, x21, [sp, #0x50]
0000000000015a84	ldp	x24, x23, [sp, #0x40]
0000000000015a88	ldp	x26, x25, [sp, #0x30]
0000000000015a8c	add	sp, sp, #0x80
0000000000015a90	ret
_kfun:kotlin.collections.AbstractMutableList#clear(){}:
0000000000015a94	stp	x20, x19, [sp, #-0x20]!
0000000000015a98	stp	x29, x30, [sp, #0x10]
0000000000015a9c	add	x29, sp, #0x10
0000000000015aa0	mov	x19, x0
0000000000015aa4	adr	x8, #0x70f9f
0000000000015aa8	nop
0000000000015aac	ldarb	w8, [x8]
0000000000015ab0	tbz	w8, #0x0, 0x15ab8
0000000000015ab4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015ab8	ldr	x8, [x19]
0000000000015abc	and	x8, x8, #0xfffffffffffffffc
0000000000015ac0	ldr	x8, [x8]
0000000000015ac4	ldr	x8, [x8, #0x88]
0000000000015ac8	mov	x0, x19
0000000000015acc	blr	x8
0000000000015ad0	mov	x2, x0
0000000000015ad4	ldr	x8, [x19]
0000000000015ad8	and	x8, x8, #0xfffffffffffffffc
0000000000015adc	ldr	x8, [x8]
0000000000015ae0	ldr	x3, [x8, #0x130]
0000000000015ae4	mov	x0, x19
0000000000015ae8	mov	w1, #0x0
0000000000015aec	ldp	x29, x30, [sp, #0x10]
0000000000015af0	ldp	x20, x19, [sp], #0x20
0000000000015af4	br	x3
_kfun:kotlin.collections.AbstractMutableList#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000015af8	sub	sp, sp, #0x50
0000000000015afc	stp	x22, x21, [sp, #0x20]
0000000000015b00	stp	x20, x19, [sp, #0x30]
0000000000015b04	stp	x29, x30, [sp, #0x40]
0000000000015b08	add	x29, sp, #0x40
0000000000015b0c	mov	x20, x1
0000000000015b10	mov	x19, x0
0000000000015b14	movi.16b	v0, #0x0
0000000000015b18	stp	q0, q0, [sp]
0000000000015b1c	adrp	x0, 87 ; 0x6c000
0000000000015b20	add	x0, x0, #0xbb0
0000000000015b24	ldr	x8, [x0]
0000000000015b28	blr	x8
0000000000015b2c	ldr	x21, [x0]
0000000000015b30	ldr	x8, [x21, #0x110]
0000000000015b34	mov	x9, sp
0000000000015b38	str	x9, [x21, #0x110]
0000000000015b3c	mov	x9, #0x400000000
0000000000015b40	stp	x8, x9, [sp, #0x8]
0000000000015b44	adr	x8, #0x70eff
0000000000015b48	nop
0000000000015b4c	ldarb	w8, [x8]
0000000000015b50	tbz	w8, #0x0, 0x15b58
0000000000015b54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015b58	ldr	x8, [x21, #0x118]
0000000000015b5c	add	x0, x8, #0x70
0000000000015b60	mov	w1, #0x18
0000000000015b64	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015b68	adr	x8, #0x45718
0000000000015b6c	nop
0000000000015b70	mov	x1, x0
0000000000015b74	str	x8, [x1, #0x10]!
0000000000015b78	stur	xzr, [x1, #-0x8]
0000000000015b7c	str	x1, [sp, #0x18]
0000000000015b80	str	x20, [x1, #0x8]
0000000000015b84	mov	x0, x19
0000000000015b88	bl	"_kfun:kotlin.collections#removeAll__at__kotlin.collections.MutableList<0:0>(kotlin.Function1<0:0,kotlin.Boolean>){0ยง<kotlin.Any?>}kotlin.Boolean"
0000000000015b8c	ldr	x8, [sp, #0x8]
0000000000015b90	str	x8, [x21, #0x110]
0000000000015b94	ldp	x29, x30, [sp, #0x40]
0000000000015b98	ldp	x20, x19, [sp, #0x30]
0000000000015b9c	ldp	x22, x21, [sp, #0x20]
0000000000015ba0	add	sp, sp, #0x50
0000000000015ba4	ret
_kfun:kotlin.collections.AbstractMutableList#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000015ba8	sub	sp, sp, #0x50
0000000000015bac	stp	x22, x21, [sp, #0x20]
0000000000015bb0	stp	x20, x19, [sp, #0x30]
0000000000015bb4	stp	x29, x30, [sp, #0x40]
0000000000015bb8	add	x29, sp, #0x40
0000000000015bbc	mov	x20, x1
0000000000015bc0	mov	x19, x0
0000000000015bc4	movi.16b	v0, #0x0
0000000000015bc8	stp	q0, q0, [sp]
0000000000015bcc	adrp	x0, 87 ; 0x6c000
0000000000015bd0	add	x0, x0, #0xbb0
0000000000015bd4	ldr	x8, [x0]
0000000000015bd8	blr	x8
0000000000015bdc	ldr	x21, [x0]
0000000000015be0	ldr	x8, [x21, #0x110]
0000000000015be4	mov	x9, sp
0000000000015be8	str	x9, [x21, #0x110]
0000000000015bec	mov	x9, #0x400000000
0000000000015bf0	stp	x8, x9, [sp, #0x8]
0000000000015bf4	adr	x8, #0x70e4f
0000000000015bf8	nop
0000000000015bfc	ldarb	w8, [x8]
0000000000015c00	tbz	w8, #0x0, 0x15c08
0000000000015c04	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015c08	ldr	x8, [x21, #0x118]
0000000000015c0c	add	x0, x8, #0x70
0000000000015c10	mov	w1, #0x18
0000000000015c14	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015c18	adr	x8, #0x456f8
0000000000015c1c	nop
0000000000015c20	mov	x1, x0
0000000000015c24	str	x8, [x1, #0x10]!
0000000000015c28	stur	xzr, [x1, #-0x8]
0000000000015c2c	str	x1, [sp, #0x18]
0000000000015c30	str	x20, [x1, #0x8]
0000000000015c34	mov	x0, x19
0000000000015c38	bl	"_kfun:kotlin.collections#removeAll__at__kotlin.collections.MutableList<0:0>(kotlin.Function1<0:0,kotlin.Boolean>){0ยง<kotlin.Any?>}kotlin.Boolean"
0000000000015c3c	ldr	x8, [sp, #0x8]
0000000000015c40	str	x8, [x21, #0x110]
0000000000015c44	ldp	x29, x30, [sp, #0x40]
0000000000015c48	ldp	x20, x19, [sp, #0x30]
0000000000015c4c	ldp	x22, x21, [sp, #0x20]
0000000000015c50	add	sp, sp, #0x50
0000000000015c54	ret
_kfun:kotlin.collections.AbstractMutableList#iterator(){}kotlin.collections.MutableIterator<1:0>:
0000000000015c58	stp	x20, x19, [sp, #-0x20]!
0000000000015c5c	stp	x29, x30, [sp, #0x10]
0000000000015c60	add	x29, sp, #0x10
0000000000015c64	mov	x19, x1
0000000000015c68	mov	x20, x0
0000000000015c6c	adr	x8, #0x70dd7
0000000000015c70	nop
0000000000015c74	ldarb	w8, [x8]
0000000000015c78	tbz	w8, #0x0, 0x15c80
0000000000015c7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015c80	adrp	x0, 87 ; 0x6c000
0000000000015c84	add	x0, x0, #0xbb0
0000000000015c88	ldr	x8, [x0]
0000000000015c8c	blr	x8
0000000000015c90	ldr	x8, [x0]
0000000000015c94	ldr	x8, [x8, #0x118]
0000000000015c98	add	x0, x8, #0x70
0000000000015c9c	mov	w1, #0x20
0000000000015ca0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015ca4	adr	x8, #0x4534c
0000000000015ca8	nop
0000000000015cac	str	x8, [x0, #0x10]!
0000000000015cb0	stur	xzr, [x0, #-0x8]
0000000000015cb4	str	x0, [x19]
0000000000015cb8	str	x20, [x0, #0x8]
0000000000015cbc	mov	w8, #-0x1
0000000000015cc0	str	w8, [x0, #0x14]
0000000000015cc4	str	x0, [x19]
0000000000015cc8	ldp	x29, x30, [sp, #0x10]
0000000000015ccc	ldp	x20, x19, [sp], #0x20
0000000000015cd0	ret
_kfun:kotlin.collections.AbstractMutableList#contains(1:0){}kotlin.Boolean:
0000000000015cd4	stp	x20, x19, [sp, #-0x20]!
0000000000015cd8	stp	x29, x30, [sp, #0x10]
0000000000015cdc	add	x29, sp, #0x10
0000000000015ce0	mov	x19, x1
0000000000015ce4	mov	x20, x0
0000000000015ce8	adr	x8, #0x70d5b
0000000000015cec	nop
0000000000015cf0	ldarb	w8, [x8]
0000000000015cf4	tbz	w8, #0x0, 0x15cfc
0000000000015cf8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015cfc	ldr	x8, [x20]
0000000000015d00	and	x8, x8, #0xfffffffffffffffc
0000000000015d04	ldr	x8, [x8]
0000000000015d08	ldr	x8, [x8, #0x108]
0000000000015d0c	mov	x0, x20
0000000000015d10	mov	x1, x19
0000000000015d14	blr	x8
0000000000015d18	mvn	w8, w0
0000000000015d1c	lsr	w0, w8, #31
0000000000015d20	ldp	x29, x30, [sp, #0x10]
0000000000015d24	ldp	x20, x19, [sp], #0x20
0000000000015d28	ret
_kfun:kotlin.collections.AbstractMutableList#indexOf(1:0){}kotlin.Int:
0000000000015d2c	sub	sp, sp, #0x70
0000000000015d30	stp	x26, x25, [sp, #0x20]
0000000000015d34	stp	x24, x23, [sp, #0x30]
0000000000015d38	stp	x22, x21, [sp, #0x40]
0000000000015d3c	stp	x20, x19, [sp, #0x50]
0000000000015d40	stp	x29, x30, [sp, #0x60]
0000000000015d44	add	x29, sp, #0x60
0000000000015d48	mov	x19, x1
0000000000015d4c	mov	x20, x0
0000000000015d50	movi.16b	v0, #0x0
0000000000015d54	stp	q0, q0, [sp]
0000000000015d58	mov	x22, sp
0000000000015d5c	adrp	x0, 87 ; 0x6c000
0000000000015d60	add	x0, x0, #0xbb0
0000000000015d64	ldr	x8, [x0]
0000000000015d68	blr	x8
0000000000015d6c	ldr	x23, [x0]
0000000000015d70	ldr	x8, [x23, #0x110]
0000000000015d74	str	x22, [x23, #0x110]
0000000000015d78	mov	x9, #0x400000000
0000000000015d7c	stp	x8, x9, [sp, #0x8]
0000000000015d80	adr	x24, #0x70cc3
0000000000015d84	nop
0000000000015d88	ldarb	w8, [x24]
0000000000015d8c	tbz	w8, #0x0, 0x15d94
0000000000015d90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015d94	mov	x0, x20
0000000000015d98	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0ยง<kotlin.Any?>}kotlin.Int"
0000000000015d9c	tbnz	w0, #0x1f, 0x15e10
0000000000015da0	mov	w21, #0x0
0000000000015da4	add	x22, x22, #0x18
0000000000015da8	add	w25, w0, #0x1
0000000000015dac	b	0x15dc0
0000000000015db0	cbz	x19, 0x15e14
0000000000015db4	add	w21, w21, #0x1
0000000000015db8	cmp	w25, w21
0000000000015dbc	b.eq	0x15e10
0000000000015dc0	ldarb	w8, [x24]
0000000000015dc4	tbz	w8, #0x0, 0x15dcc
0000000000015dc8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015dcc	ldr	x8, [x20]
0000000000015dd0	and	x8, x8, #0xfffffffffffffffc
0000000000015dd4	ldr	x8, [x8]
0000000000015dd8	ldr	x8, [x8, #0x100]
0000000000015ddc	mov	x0, x20
0000000000015de0	mov	x1, x21
0000000000015de4	mov	x2, x22
0000000000015de8	blr	x8
0000000000015dec	cbz	x0, 0x15db0
0000000000015df0	ldr	x8, [x0]
0000000000015df4	and	x8, x8, #0xfffffffffffffffc
0000000000015df8	ldr	x8, [x8]
0000000000015dfc	ldr	x8, [x8, #0x70]
0000000000015e00	mov	x1, x19
0000000000015e04	blr	x8
0000000000015e08	tbz	w0, #0x0, 0x15db4
0000000000015e0c	b	0x15e14
0000000000015e10	mov	w21, #-0x1
0000000000015e14	ldr	x8, [sp, #0x8]
0000000000015e18	str	x8, [x23, #0x110]
0000000000015e1c	mov	x0, x21
0000000000015e20	ldp	x29, x30, [sp, #0x60]
0000000000015e24	ldp	x20, x19, [sp, #0x50]
0000000000015e28	ldp	x22, x21, [sp, #0x40]
0000000000015e2c	ldp	x24, x23, [sp, #0x30]
0000000000015e30	ldp	x26, x25, [sp, #0x20]
0000000000015e34	add	sp, sp, #0x70
0000000000015e38	ret
_kfun:kotlin.collections.AbstractMutableList#lastIndexOf(1:0){}kotlin.Int:
0000000000015e3c	sub	sp, sp, #0x60
0000000000015e40	stp	x24, x23, [sp, #0x20]
0000000000015e44	stp	x22, x21, [sp, #0x30]
0000000000015e48	stp	x20, x19, [sp, #0x40]
0000000000015e4c	stp	x29, x30, [sp, #0x50]
0000000000015e50	add	x29, sp, #0x50
0000000000015e54	mov	x19, x1
0000000000015e58	mov	x20, x0
0000000000015e5c	movi.16b	v0, #0x0
0000000000015e60	stp	q0, q0, [sp]
0000000000015e64	mov	x22, sp
0000000000015e68	adrp	x0, 87 ; 0x6c000
0000000000015e6c	add	x0, x0, #0xbb0
0000000000015e70	ldr	x8, [x0]
0000000000015e74	blr	x8
0000000000015e78	ldr	x23, [x0]
0000000000015e7c	ldr	x8, [x23, #0x110]
0000000000015e80	str	x22, [x23, #0x110]
0000000000015e84	mov	x9, #0x400000000
0000000000015e88	stp	x8, x9, [sp, #0x8]
0000000000015e8c	adr	x24, #0x70bb7
0000000000015e90	nop
0000000000015e94	ldarb	w8, [x24]
0000000000015e98	tbz	w8, #0x0, 0x15ea0
0000000000015e9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015ea0	mov	x0, x20
0000000000015ea4	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0ยง<kotlin.Any?>}kotlin.Int"
0000000000015ea8	tbnz	w0, #0x1f, 0x15f1c
0000000000015eac	mov	x21, x0
0000000000015eb0	add	x22, x22, #0x18
0000000000015eb4	b	0x15ecc
0000000000015eb8	cbz	x19, 0x15f20
0000000000015ebc	sub	w21, w21, #0x1
0000000000015ec0	add	w8, w21, #0x1
0000000000015ec4	cmp	w8, #0x0
0000000000015ec8	b.le	0x15f1c
0000000000015ecc	ldarb	w8, [x24]
0000000000015ed0	tbz	w8, #0x0, 0x15ed8
0000000000015ed4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015ed8	ldr	x8, [x20]
0000000000015edc	and	x8, x8, #0xfffffffffffffffc
0000000000015ee0	ldr	x8, [x8]
0000000000015ee4	ldr	x8, [x8, #0x100]
0000000000015ee8	mov	x0, x20
0000000000015eec	mov	x1, x21
0000000000015ef0	mov	x2, x22
0000000000015ef4	blr	x8
0000000000015ef8	cbz	x0, 0x15eb8
0000000000015efc	ldr	x8, [x0]
0000000000015f00	and	x8, x8, #0xfffffffffffffffc
0000000000015f04	ldr	x8, [x8]
0000000000015f08	ldr	x8, [x8, #0x70]
0000000000015f0c	mov	x1, x19
0000000000015f10	blr	x8
0000000000015f14	tbz	w0, #0x0, 0x15ebc
0000000000015f18	b	0x15f20
0000000000015f1c	mov	w21, #-0x1
0000000000015f20	ldr	x8, [sp, #0x8]
0000000000015f24	str	x8, [x23, #0x110]
0000000000015f28	mov	x0, x21
0000000000015f2c	ldp	x29, x30, [sp, #0x50]
0000000000015f30	ldp	x20, x19, [sp, #0x40]
0000000000015f34	ldp	x22, x21, [sp, #0x30]
0000000000015f38	ldp	x24, x23, [sp, #0x20]
0000000000015f3c	add	sp, sp, #0x60
0000000000015f40	ret
_kfun:kotlin.collections.AbstractMutableList#listIterator(){}kotlin.collections.MutableListIterator<1:0>:
0000000000015f44	stp	x20, x19, [sp, #-0x20]!
0000000000015f48	stp	x29, x30, [sp, #0x10]
0000000000015f4c	add	x29, sp, #0x10
0000000000015f50	mov	x19, x1
0000000000015f54	mov	x20, x0
0000000000015f58	adr	x8, #0x70aeb
0000000000015f5c	nop
0000000000015f60	ldarb	w8, [x8]
0000000000015f64	tbz	w8, #0x0, 0x15f6c
0000000000015f68	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015f6c	ldr	x8, [x20]
0000000000015f70	and	x8, x8, #0xfffffffffffffffc
0000000000015f74	ldr	x8, [x8]
0000000000015f78	ldr	x8, [x8, #0x120]
0000000000015f7c	mov	x0, x20
0000000000015f80	mov	w1, #0x0
0000000000015f84	mov	x2, x19
0000000000015f88	blr	x8
0000000000015f8c	str	x0, [x19]
0000000000015f90	ldp	x29, x30, [sp, #0x10]
0000000000015f94	ldp	x20, x19, [sp], #0x20
0000000000015f98	ret
_kfun:kotlin.collections.AbstractMutableList#listIterator(kotlin.Int){}kotlin.collections.MutableListIterator<1:0>:
0000000000015f9c	stp	x22, x21, [sp, #-0x30]!
0000000000015fa0	stp	x20, x19, [sp, #0x10]
0000000000015fa4	stp	x29, x30, [sp, #0x20]
0000000000015fa8	add	x29, sp, #0x20
0000000000015fac	mov	x19, x2
0000000000015fb0	mov	x20, x1
0000000000015fb4	mov	x21, x0
0000000000015fb8	adr	x8, #0x70a8b
0000000000015fbc	nop
0000000000015fc0	ldarb	w8, [x8]
0000000000015fc4	tbz	w8, #0x0, 0x15fcc
0000000000015fc8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015fcc	adrp	x0, 87 ; 0x6c000
0000000000015fd0	add	x0, x0, #0xbb0
0000000000015fd4	ldr	x8, [x0]
0000000000015fd8	blr	x8
0000000000015fdc	ldr	x8, [x0]
0000000000015fe0	ldr	x8, [x8, #0x118]
0000000000015fe4	add	x0, x8, #0x70
0000000000015fe8	mov	w1, #0x28
0000000000015fec	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015ff0	mov	x22, x0
0000000000015ff4	adr	x8, #0x4509c
0000000000015ff8	nop
0000000000015ffc	str	x8, [x22, #0x10]!
0000000000016000	stur	xzr, [x22, #-0x8]
0000000000016004	str	x22, [x19]
0000000000016008	str	x21, [x22, #0x18]
000000000001600c	str	x21, [x22, #0x8]
0000000000016010	mov	w8, #-0x1
0000000000016014	str	w8, [x22, #0x14]
0000000000016018	ldr	x8, [x21]
000000000001601c	and	x8, x8, #0xfffffffffffffffc
0000000000016020	ldr	x8, [x8]
0000000000016024	ldr	x8, [x8, #0x88]
0000000000016028	mov	x0, x21
000000000001602c	blr	x8
0000000000016030	mov	x1, x0
0000000000016034	mov	x0, x20
0000000000016038	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
000000000001603c	str	w20, [x22, #0x10]
0000000000016040	str	x22, [x19]
0000000000016044	mov	x0, x22
0000000000016048	ldp	x29, x30, [sp, #0x20]
000000000001604c	ldp	x20, x19, [sp, #0x10]
0000000000016050	ldp	x22, x21, [sp], #0x30
0000000000016054	ret
_kfun:kotlin.collections.AbstractMutableList#subList(kotlin.Int;kotlin.Int){}kotlin.collections.MutableList<1:0>:
0000000000016058	stp	x24, x23, [sp, #-0x40]!
000000000001605c	stp	x22, x21, [sp, #0x10]
0000000000016060	stp	x20, x19, [sp, #0x20]
0000000000016064	stp	x29, x30, [sp, #0x30]
0000000000016068	add	x29, sp, #0x30
000000000001606c	mov	x19, x3
0000000000016070	mov	x20, x2
0000000000016074	mov	x21, x1
0000000000016078	mov	x22, x0
000000000001607c	adr	x8, #0x709c7
0000000000016080	nop
0000000000016084	ldarb	w8, [x8]
0000000000016088	tbz	w8, #0x0, 0x16090
000000000001608c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016090	adrp	x0, 86 ; 0x6c000
0000000000016094	add	x0, x0, #0xbb0
0000000000016098	ldr	x8, [x0]
000000000001609c	blr	x8
00000000000160a0	ldr	x8, [x0]
00000000000160a4	ldr	x8, [x8, #0x118]
00000000000160a8	add	x0, x8, #0x70
00000000000160ac	mov	w1, #0x28
00000000000160b0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000160b4	mov	x23, x0
00000000000160b8	adr	x8, #0x45078
00000000000160bc	nop
00000000000160c0	str	x8, [x23, #0x10]!
00000000000160c4	stur	xzr, [x23, #-0x8]
00000000000160c8	str	x23, [x19]
00000000000160cc	str	x22, [x23, #0x10]
00000000000160d0	str	w21, [x23, #0x18]
00000000000160d4	ldr	x8, [x22]
00000000000160d8	and	x8, x8, #0xfffffffffffffffc
00000000000160dc	ldr	x8, [x8]
00000000000160e0	ldr	x8, [x8, #0x88]
00000000000160e4	mov	x0, x22
00000000000160e8	blr	x8
00000000000160ec	mov	x2, x0
00000000000160f0	mov	x0, x21
00000000000160f4	mov	x1, x20
00000000000160f8	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkRangeIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
00000000000160fc	ldr	w8, [x23, #0x18]
0000000000016100	sub	w8, w20, w8
0000000000016104	str	w8, [x23, #0x1c]
0000000000016108	str	x23, [x19]
000000000001610c	mov	x0, x23
0000000000016110	ldp	x29, x30, [sp, #0x30]
0000000000016114	ldp	x20, x19, [sp, #0x20]
0000000000016118	ldp	x22, x21, [sp, #0x10]
000000000001611c	ldp	x24, x23, [sp], #0x40
0000000000016120	ret
_kfun:kotlin.collections.AbstractMutableList#removeRange(kotlin.Int;kotlin.Int){}:
0000000000016124	sub	sp, sp, #0x80
0000000000016128	stp	x26, x25, [sp, #0x30]
000000000001612c	stp	x24, x23, [sp, #0x40]
0000000000016130	stp	x22, x21, [sp, #0x50]
0000000000016134	stp	x20, x19, [sp, #0x60]
0000000000016138	stp	x29, x30, [sp, #0x70]
000000000001613c	add	x29, sp, #0x70
0000000000016140	mov	x20, x2
0000000000016144	mov	x21, x1
0000000000016148	mov	x19, x0
000000000001614c	movi.16b	v0, #0x0
0000000000016150	stp	q0, q0, [sp]
0000000000016154	str	xzr, [sp, #0x20]
0000000000016158	mov	x25, sp
000000000001615c	add	x22, x25, #0x18
0000000000016160	adrp	x0, 86 ; 0x6c000
0000000000016164	add	x0, x0, #0xbb0
0000000000016168	ldr	x8, [x0]
000000000001616c	blr	x8
0000000000016170	ldr	x23, [x0]
0000000000016174	ldr	x8, [x23, #0x110]
0000000000016178	str	x25, [x23, #0x110]
000000000001617c	mov	x9, #0x500000000
0000000000016180	stp	x8, x9, [sp, #0x8]
0000000000016184	adr	x24, #0x708bf
0000000000016188	nop
000000000001618c	ldarb	w8, [x24]
0000000000016190	tbz	w8, #0x0, 0x16198
0000000000016194	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016198	ldr	x8, [x19]
000000000001619c	and	x8, x8, #0xfffffffffffffffc
00000000000161a0	ldr	x8, [x8]
00000000000161a4	ldr	x8, [x8, #0x120]
00000000000161a8	mov	x0, x19
00000000000161ac	mov	x1, x21
00000000000161b0	mov	x2, x22
00000000000161b4	blr	x8
00000000000161b8	sub	w21, w20, w21
00000000000161bc	cmp	w21, #0x1
00000000000161c0	b.lt	0x1636c
00000000000161c4	mov	x19, x0
00000000000161c8	mov	w22, #0x0
00000000000161cc	add	x20, x25, #0x20
00000000000161d0	mov	w25, #0x23
00000000000161d4	b	0x161fc
00000000000161d8	and	x9, x9, x25
00000000000161dc	add	w22, w22, #0x1
00000000000161e0	add	x8, x8, x9, lsl #4
00000000000161e4	ldr	x8, [x8, #0x8]
00000000000161e8	ldr	x8, [x8, #0x18]
00000000000161ec	mov	x0, x19
00000000000161f0	blr	x8
00000000000161f4	cmp	w22, w21
00000000000161f8	b.eq	0x1636c
00000000000161fc	ldarb	w8, [x24]
0000000000016200	tbz	w8, #0x0, 0x16208
0000000000016204	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016208	ldr	x8, [x19]
000000000001620c	and	x8, x8, #0xfffffffffffffffc
0000000000016210	ldr	x8, [x8]
0000000000016214	ldr	w9, [x8, #0x3c]
0000000000016218	ldr	x8, [x8, #0x40]
000000000001621c	tbnz	w9, #0x1f, 0x16228
0000000000016220	and	x9, x9, x25
0000000000016224	b	0x162ac
0000000000016228	neg	w10, w9
000000000001622c	mvn	w9, w9
0000000000016230	cmp	w10, #0x9
0000000000016234	b.ge	0x1626c
0000000000016238	cmp	w10, #0x2
000000000001623c	b.lt	0x162a0
0000000000016240	mov	x10, #0x0
0000000000016244	mov	x11, x8
0000000000016248	ldr	w12, [x11]
000000000001624c	cmp	w12, #0x22
0000000000016250	b.gt	0x162a8
0000000000016254	add	x10, x10, #0x1
0000000000016258	add	x11, x11, #0x10
000000000001625c	cmp	x9, x10
0000000000016260	b.ne	0x16248
0000000000016264	mov	x10, x9
0000000000016268	b	0x162a8
000000000001626c	mov	w10, #0x0
0000000000016270	add	w11, w9, w10
0000000000016274	cmp	w11, #0x0
0000000000016278	cinc	w11, w11, lt
000000000001627c	asr	w11, w11, #1
0000000000016280	sbfiz	x12, x11, #4, #32
0000000000016284	ldr	w12, [x8, x12]
0000000000016288	cmp	w12, #0x23
000000000001628c	csinc	w10, w10, w11, ge
0000000000016290	csel	w9, w9, w11, lt
0000000000016294	cmp	w10, w9
0000000000016298	b.lt	0x16270
000000000001629c	b	0x162a8
00000000000162a0	mov	w10, #0x0
00000000000162a4	b	0x162a8
00000000000162a8	sxtw	x9, w10
00000000000162ac	add	x8, x8, x9, lsl #4
00000000000162b0	ldr	x8, [x8, #0x8]
00000000000162b4	ldr	x8, [x8, #0x10]
00000000000162b8	mov	x0, x19
00000000000162bc	mov	x1, x20
00000000000162c0	blr	x8
00000000000162c4	ldr	x8, [x19]
00000000000162c8	and	x8, x8, #0xfffffffffffffffc
00000000000162cc	ldr	x8, [x8]
00000000000162d0	ldr	w9, [x8, #0x3c]
00000000000162d4	ldr	x8, [x8, #0x40]
00000000000162d8	tbz	w9, #0x1f, 0x161d8
00000000000162dc	neg	w10, w9
00000000000162e0	mvn	w9, w9
00000000000162e4	cmp	w10, #0x9
00000000000162e8	b.ge	0x16324
00000000000162ec	cmp	w10, #0x2
00000000000162f0	b.lt	0x16358
00000000000162f4	mov	x10, #0x0
00000000000162f8	mov	x11, x8
00000000000162fc	ldr	w12, [x11]
0000000000016300	cmp	w12, #0x22
0000000000016304	b.gt	0x16364
0000000000016308	add	x10, x10, #0x1
000000000001630c	add	x11, x11, #0x10
0000000000016310	cmp	x9, x10
0000000000016314	b.ne	0x162fc
0000000000016318	mov	x10, x9
000000000001631c	sxtw	x9, w10
0000000000016320	b	0x161dc
0000000000016324	mov	w10, #0x0
0000000000016328	add	w11, w9, w10
000000000001632c	cmp	w11, #0x0
0000000000016330	cinc	w11, w11, lt
0000000000016334	asr	w11, w11, #1
0000000000016338	sbfiz	x12, x11, #4, #32
000000000001633c	ldr	w12, [x8, x12]
0000000000016340	cmp	w12, #0x23
0000000000016344	csinc	w10, w10, w11, ge
0000000000016348	csel	w9, w9, w11, lt
000000000001634c	cmp	w10, w9
0000000000016350	b.lt	0x16328
0000000000016354	b	0x16364
0000000000016358	mov	w10, #0x0
000000000001635c	sxtw	x9, w10
0000000000016360	b	0x161dc
0000000000016364	sxtw	x9, w10
0000000000016368	b	0x161dc
000000000001636c	ldr	x8, [sp, #0x8]
0000000000016370	str	x8, [x23, #0x110]
0000000000016374	ldp	x29, x30, [sp, #0x70]
0000000000016378	ldp	x20, x19, [sp, #0x60]
000000000001637c	ldp	x22, x21, [sp, #0x50]
0000000000016380	ldp	x24, x23, [sp, #0x40]
0000000000016384	ldp	x26, x25, [sp, #0x30]
0000000000016388	add	sp, sp, #0x80
000000000001638c	ret
_kfun:kotlin.collections.AbstractMutableList#equals(kotlin.Any?){}kotlin.Boolean:
0000000000016390	stp	x20, x19, [sp, #-0x20]!
0000000000016394	stp	x29, x30, [sp, #0x10]
0000000000016398	add	x29, sp, #0x10
000000000001639c	mov	x19, x1
00000000000163a0	mov	x20, x0
00000000000163a4	adr	x8, #0x7069f
00000000000163a8	nop
00000000000163ac	ldarb	w8, [x8]
00000000000163b0	tbz	w8, #0x0, 0x163b8
00000000000163b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000163b8	cmp	x19, x20
00000000000163bc	b.eq	0x163f8
00000000000163c0	cbz	x19, 0x164ac
00000000000163c4	ldr	x8, [x19]
00000000000163c8	and	x8, x8, #0xfffffffffffffffc
00000000000163cc	ldr	x8, [x8]
00000000000163d0	ldr	w9, [x8, #0x3c]
00000000000163d4	ldr	x8, [x8, #0x40]
00000000000163d8	tbnz	w9, #0x1f, 0x16408
00000000000163dc	mov	w10, #0x2b
00000000000163e0	and	x9, x9, x10
00000000000163e4	lsl	x9, x9, #4
00000000000163e8	ldr	w8, [x8, x9]
00000000000163ec	cmp	w8, #0x2b
00000000000163f0	b.ne	0x164ac
00000000000163f4	b	0x164d0
00000000000163f8	mov	w0, #0x1
00000000000163fc	ldp	x29, x30, [sp, #0x10]
0000000000016400	ldp	x20, x19, [sp], #0x20
0000000000016404	ret
0000000000016408	neg	w10, w9
000000000001640c	mvn	w9, w9
0000000000016410	cmp	w10, #0x9
0000000000016414	b.ge	0x16460
0000000000016418	cmp	w10, #0x2
000000000001641c	b.lt	0x16494
0000000000016420	mov	x10, #0x0
0000000000016424	mov	x11, x8
0000000000016428	ldr	w12, [x11]
000000000001642c	cmp	w12, #0x2a
0000000000016430	b.gt	0x164bc
0000000000016434	add	x10, x10, #0x1
0000000000016438	add	x11, x11, #0x10
000000000001643c	cmp	x9, x10
0000000000016440	b.ne	0x16428
0000000000016444	mov	x10, x9
0000000000016448	sxtw	x9, w10
000000000001644c	lsl	x9, x9, #4
0000000000016450	ldr	w8, [x8, x9]
0000000000016454	cmp	w8, #0x2b
0000000000016458	b.ne	0x164ac
000000000001645c	b	0x164d0
0000000000016460	mov	w10, #0x0
0000000000016464	add	w11, w9, w10
0000000000016468	cmp	w11, #0x0
000000000001646c	cinc	w11, w11, lt
0000000000016470	asr	w11, w11, #1
0000000000016474	sbfiz	x12, x11, #4, #32
0000000000016478	ldr	w12, [x8, x12]
000000000001647c	cmp	w12, #0x2b
0000000000016480	csinc	w10, w10, w11, ge
0000000000016484	csel	w9, w9, w11, lt
0000000000016488	cmp	w10, w9
000000000001648c	b.lt	0x16464
0000000000016490	b	0x164bc
0000000000016494	mov	w10, #0x0
0000000000016498	sxtw	x9, w10
000000000001649c	lsl	x9, x9, #4
00000000000164a0	ldr	w8, [x8, x9]
00000000000164a4	cmp	w8, #0x2b
00000000000164a8	b.eq	0x164d0
00000000000164ac	mov	w0, #0x0
00000000000164b0	ldp	x29, x30, [sp, #0x10]
00000000000164b4	ldp	x20, x19, [sp], #0x20
00000000000164b8	ret
00000000000164bc	sxtw	x9, w10
00000000000164c0	lsl	x9, x9, #4
00000000000164c4	ldr	w8, [x8, x9]
00000000000164c8	cmp	w8, #0x2b
00000000000164cc	b.ne	0x164ac
00000000000164d0	mov	x0, x20
00000000000164d4	mov	x1, x19
00000000000164d8	ldp	x29, x30, [sp, #0x10]
00000000000164dc	ldp	x20, x19, [sp], #0x20
00000000000164e0	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedEquals(kotlin.collections.Collection<*>;kotlin.collections.Collection<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractMutableList#hashCode(){}kotlin.Int:
00000000000164e4	stp	x20, x19, [sp, #-0x20]!
00000000000164e8	stp	x29, x30, [sp, #0x10]
00000000000164ec	add	x29, sp, #0x10
00000000000164f0	mov	x19, x0
00000000000164f4	adr	x8, #0x7054f
00000000000164f8	nop
00000000000164fc	ldarb	w8, [x8]
0000000000016500	tbz	w8, #0x0, 0x16508
0000000000016504	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016508	mov	x0, x19
000000000001650c	ldp	x29, x30, [sp, #0x10]
0000000000016510	ldp	x20, x19, [sp], #0x20
0000000000016514	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections.AbstractMutableList.IteratorImpl.hasNext#internal:
0000000000016518	stp	x20, x19, [sp, #-0x20]!
000000000001651c	stp	x29, x30, [sp, #0x10]
0000000000016520	add	x29, sp, #0x10
0000000000016524	mov	x19, x0
0000000000016528	adr	x8, #0x7051b
000000000001652c	nop
0000000000016530	ldarb	w8, [x8]
0000000000016534	tbz	w8, #0x0, 0x1653c
0000000000016538	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001653c	ldr	w20, [x19, #0x10]
0000000000016540	ldr	x0, [x19, #0x8]
0000000000016544	ldr	x8, [x0]
0000000000016548	and	x8, x8, #0xfffffffffffffffc
000000000001654c	ldr	x8, [x8]
0000000000016550	ldr	x8, [x8, #0x88]
0000000000016554	blr	x8
0000000000016558	cmp	w20, w0
000000000001655c	cset	w0, lt
0000000000016560	ldp	x29, x30, [sp, #0x10]
0000000000016564	ldp	x20, x19, [sp], #0x20
0000000000016568	ret
_kfun:kotlin.collections.AbstractMutableList.IteratorImpl.next#internal:
000000000001656c	sub	sp, sp, #0x50
0000000000016570	stp	x22, x21, [sp, #0x20]
0000000000016574	stp	x20, x19, [sp, #0x30]
0000000000016578	stp	x29, x30, [sp, #0x40]
000000000001657c	add	x29, sp, #0x40
0000000000016580	mov	x19, x1
0000000000016584	mov	x20, x0
0000000000016588	movi.16b	v0, #0x0
000000000001658c	stp	q0, q0, [sp]
0000000000016590	adrp	x0, 86 ; 0x6c000
0000000000016594	add	x0, x0, #0xbb0
0000000000016598	ldr	x8, [x0]
000000000001659c	blr	x8
00000000000165a0	ldr	x21, [x0]
00000000000165a4	ldr	x8, [x21, #0x110]
00000000000165a8	mov	x9, sp
00000000000165ac	str	x9, [x21, #0x110]
00000000000165b0	mov	x9, #0x400000000
00000000000165b4	stp	x8, x9, [sp, #0x8]
00000000000165b8	adr	x8, #0x7048b
00000000000165bc	nop
00000000000165c0	ldarb	w8, [x8]
00000000000165c4	tbz	w8, #0x0, 0x165cc
00000000000165c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000165cc	ldr	x8, [x20]
00000000000165d0	and	x8, x8, #0xfffffffffffffffc
00000000000165d4	ldr	x8, [x8]
00000000000165d8	ldr	x8, [x8, #0x88]
00000000000165dc	mov	x0, x20
00000000000165e0	blr	x8
00000000000165e4	tbz	w0, #0x0, 0x16630
00000000000165e8	ldr	w1, [x20, #0x10]
00000000000165ec	add	w8, w1, #0x1
00000000000165f0	stp	w8, w1, [x20, #0x10]
00000000000165f4	ldr	x0, [x20, #0x8]
00000000000165f8	ldr	x8, [x0]
00000000000165fc	and	x8, x8, #0xfffffffffffffffc
0000000000016600	ldr	x8, [x8]
0000000000016604	ldr	x8, [x8, #0x100]
0000000000016608	mov	x2, x19
000000000001660c	blr	x8
0000000000016610	str	x0, [x19]
0000000000016614	ldr	x8, [sp, #0x8]
0000000000016618	str	x8, [x21, #0x110]
000000000001661c	ldp	x29, x30, [sp, #0x40]
0000000000016620	ldp	x20, x19, [sp, #0x30]
0000000000016624	ldp	x22, x21, [sp, #0x20]
0000000000016628	add	sp, sp, #0x50
000000000001662c	ret
0000000000016630	ldr	x8, [x21, #0x118]
0000000000016634	add	x0, x8, #0x70
0000000000016638	mov	w1, #0x38
000000000001663c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000016640	mov	x19, x0
0000000000016644	adr	x8, #0x4245c
0000000000016648	nop
000000000001664c	str	x8, [x19, #0x10]!
0000000000016650	stur	xzr, [x19, #-0x8]
0000000000016654	str	x19, [sp, #0x18]
0000000000016658	mov	x0, x19
000000000001665c	mov	x1, #0x0
0000000000016660	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000016664	mov	x0, x19
0000000000016668	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.IteratorImpl.remove#internal:
000000000001666c	sub	sp, sp, #0x50
0000000000016670	stp	x20, x19, [sp, #0x30]
0000000000016674	stp	x29, x30, [sp, #0x40]
0000000000016678	add	x29, sp, #0x40
000000000001667c	mov	x19, x0
0000000000016680	movi.16b	v0, #0x0
0000000000016684	stp	q0, q0, [sp]
0000000000016688	str	xzr, [sp, #0x20]
000000000001668c	adrp	x0, 86 ; 0x6c000
0000000000016690	add	x0, x0, #0xbb0
0000000000016694	ldr	x8, [x0]
0000000000016698	blr	x8
000000000001669c	ldr	x20, [x0]
00000000000166a0	ldr	x8, [x20, #0x110]
00000000000166a4	mov	x9, sp
00000000000166a8	str	x9, [x20, #0x110]
00000000000166ac	mov	x9, #0x500000000
00000000000166b0	stp	x8, x9, [sp, #0x8]
00000000000166b4	adr	x8, #0x7038f
00000000000166b8	nop
00000000000166bc	ldarb	w8, [x8]
00000000000166c0	tbz	w8, #0x0, 0x166c8
00000000000166c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000166c8	ldr	w1, [x19, #0x14]
00000000000166cc	cmn	w1, #0x1
00000000000166d0	b.eq	0x16718
00000000000166d4	mov	x8, sp
00000000000166d8	add	x2, x8, #0x20
00000000000166dc	ldr	x0, [x19, #0x8]
00000000000166e0	ldr	x8, [x0]
00000000000166e4	and	x8, x8, #0xfffffffffffffffc
00000000000166e8	ldr	x8, [x8]
00000000000166ec	ldr	x8, [x8, #0x128]
00000000000166f0	blr	x8
00000000000166f4	ldr	w8, [x19, #0x14]
00000000000166f8	mov	w9, #-0x1
00000000000166fc	stp	w8, w9, [x19, #0x10]
0000000000016700	ldr	x8, [sp, #0x8]
0000000000016704	str	x8, [x20, #0x110]
0000000000016708	ldp	x29, x30, [sp, #0x40]
000000000001670c	ldp	x20, x19, [sp, #0x30]
0000000000016710	add	sp, sp, #0x50
0000000000016714	ret
0000000000016718	ldr	x8, [x20, #0x118]
000000000001671c	add	x0, x8, #0x70
0000000000016720	mov	w1, #0x38
0000000000016724	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000016728	mov	x19, x0
000000000001672c	adr	x8, #0x425f4
0000000000016730	nop
0000000000016734	str	x8, [x19, #0x10]!
0000000000016738	stur	xzr, [x19, #-0x8]
000000000001673c	str	x19, [sp, #0x18]
0000000000016740	adr	x1, #0x4f460
0000000000016744	nop
0000000000016748	mov	x0, x19
000000000001674c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000016750	mov	x0, x19
0000000000016754	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.hasPrevious#internal:
0000000000016758	stp	x20, x19, [sp, #-0x20]!
000000000001675c	stp	x29, x30, [sp, #0x10]
0000000000016760	add	x29, sp, #0x10
0000000000016764	mov	x19, x0
0000000000016768	adr	x8, #0x702db
000000000001676c	nop
0000000000016770	ldarb	w8, [x8]
0000000000016774	tbz	w8, #0x0, 0x1677c
0000000000016778	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001677c	ldr	w8, [x19, #0x10]
0000000000016780	cmp	w8, #0x0
0000000000016784	cset	w0, gt
0000000000016788	ldp	x29, x30, [sp, #0x10]
000000000001678c	ldp	x20, x19, [sp], #0x20
0000000000016790	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.nextIndex#internal:
0000000000016794	stp	x20, x19, [sp, #-0x20]!
0000000000016798	stp	x29, x30, [sp, #0x10]
000000000001679c	add	x29, sp, #0x10
00000000000167a0	mov	x19, x0
00000000000167a4	adr	x8, #0x7029f
00000000000167a8	nop
00000000000167ac	ldarb	w8, [x8]
00000000000167b0	tbz	w8, #0x0, 0x167b8
00000000000167b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000167b8	ldr	w0, [x19, #0x10]
00000000000167bc	ldp	x29, x30, [sp, #0x10]
00000000000167c0	ldp	x20, x19, [sp], #0x20
00000000000167c4	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.previous#internal:
00000000000167c8	sub	sp, sp, #0x50
00000000000167cc	stp	x22, x21, [sp, #0x20]
00000000000167d0	stp	x20, x19, [sp, #0x30]
00000000000167d4	stp	x29, x30, [sp, #0x40]
00000000000167d8	add	x29, sp, #0x40
00000000000167dc	mov	x19, x1
00000000000167e0	mov	x20, x0
00000000000167e4	movi.16b	v0, #0x0
00000000000167e8	stp	q0, q0, [sp]
00000000000167ec	adrp	x0, 86 ; 0x6c000
00000000000167f0	add	x0, x0, #0xbb0
00000000000167f4	ldr	x8, [x0]
00000000000167f8	blr	x8
00000000000167fc	ldr	x21, [x0]
0000000000016800	ldr	x8, [x21, #0x110]
0000000000016804	mov	x9, sp
0000000000016808	str	x9, [x21, #0x110]
000000000001680c	mov	x9, #0x400000000
0000000000016810	stp	x8, x9, [sp, #0x8]
0000000000016814	adr	x8, #0x7022f
0000000000016818	nop
000000000001681c	ldarb	w8, [x8]
0000000000016820	tbz	w8, #0x0, 0x16828
0000000000016824	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016828	ldr	w8, [x20, #0x10]
000000000001682c	cmp	w8, #0x0
0000000000016830	b.le	0x16878
0000000000016834	sub	w1, w8, #0x1
0000000000016838	stp	w1, w1, [x20, #0x10]
000000000001683c	ldr	x0, [x20, #0x18]
0000000000016840	ldr	x8, [x0]
0000000000016844	and	x8, x8, #0xfffffffffffffffc
0000000000016848	ldr	x8, [x8]
000000000001684c	ldr	x8, [x8, #0x100]
0000000000016850	mov	x2, x19
0000000000016854	blr	x8
0000000000016858	str	x0, [x19]
000000000001685c	ldr	x8, [sp, #0x8]
0000000000016860	str	x8, [x21, #0x110]
0000000000016864	ldp	x29, x30, [sp, #0x40]
0000000000016868	ldp	x20, x19, [sp, #0x30]
000000000001686c	ldp	x22, x21, [sp, #0x20]
0000000000016870	add	sp, sp, #0x50
0000000000016874	ret
0000000000016878	ldr	x8, [x21, #0x118]
000000000001687c	add	x0, x8, #0x70
0000000000016880	mov	w1, #0x38
0000000000016884	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000016888	mov	x19, x0
000000000001688c	adr	x8, #0x42214
0000000000016890	nop
0000000000016894	str	x8, [x19, #0x10]!
0000000000016898	stur	xzr, [x19, #-0x8]
000000000001689c	str	x19, [sp, #0x18]
00000000000168a0	mov	x0, x19
00000000000168a4	mov	x1, #0x0
00000000000168a8	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
00000000000168ac	mov	x0, x19
00000000000168b0	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.previousIndex#internal:
00000000000168b4	stp	x20, x19, [sp, #-0x20]!
00000000000168b8	stp	x29, x30, [sp, #0x10]
00000000000168bc	add	x29, sp, #0x10
00000000000168c0	mov	x19, x0
00000000000168c4	adr	x8, #0x7017f
00000000000168c8	nop
00000000000168cc	ldarb	w8, [x8]
00000000000168d0	tbz	w8, #0x0, 0x168d8
00000000000168d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000168d8	ldr	w8, [x19, #0x10]
00000000000168dc	sub	w0, w8, #0x1
00000000000168e0	ldp	x29, x30, [sp, #0x10]
00000000000168e4	ldp	x20, x19, [sp], #0x20
00000000000168e8	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.add#internal:
00000000000168ec	stp	x20, x19, [sp, #-0x20]!
00000000000168f0	stp	x29, x30, [sp, #0x10]
00000000000168f4	add	x29, sp, #0x10
00000000000168f8	mov	x20, x1
00000000000168fc	mov	x19, x0
0000000000016900	adr	x8, #0x70143
0000000000016904	nop
0000000000016908	ldarb	w8, [x8]
000000000001690c	tbz	w8, #0x0, 0x16914
0000000000016910	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016914	ldr	x0, [x19, #0x18]
0000000000016918	ldr	w1, [x19, #0x10]
000000000001691c	ldr	x8, [x0]
0000000000016920	and	x8, x8, #0xfffffffffffffffc
0000000000016924	ldr	x8, [x8]
0000000000016928	ldr	x8, [x8, #0xf0]
000000000001692c	mov	x2, x20
0000000000016930	blr	x8
0000000000016934	ldr	w8, [x19, #0x10]
0000000000016938	add	w8, w8, #0x1
000000000001693c	mov	w9, #-0x1
0000000000016940	stp	w8, w9, [x19, #0x10]
0000000000016944	ldp	x29, x30, [sp, #0x10]
0000000000016948	ldp	x20, x19, [sp], #0x20
000000000001694c	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.set#internal:
0000000000016950	sub	sp, sp, #0x60
0000000000016954	stp	x22, x21, [sp, #0x30]
0000000000016958	stp	x20, x19, [sp, #0x40]
000000000001695c	stp	x29, x30, [sp, #0x50]
0000000000016960	add	x29, sp, #0x50
0000000000016964	mov	x19, x1
0000000000016968	mov	x20, x0
000000000001696c	movi.16b	v0, #0x0
0000000000016970	stp	q0, q0, [sp]
0000000000016974	str	xzr, [sp, #0x20]
0000000000016978	adrp	x0, 86 ; 0x6c000
000000000001697c	add	x0, x0, #0xbb0
0000000000016980	ldr	x8, [x0]
0000000000016984	blr	x8
0000000000016988	ldr	x21, [x0]
000000000001698c	ldr	x8, [x21, #0x110]
0000000000016990	mov	x9, sp
0000000000016994	str	x9, [x21, #0x110]
0000000000016998	mov	x9, #0x500000000
000000000001699c	stp	x8, x9, [sp, #0x8]
00000000000169a0	adr	x8, #0x700a3
00000000000169a4	nop
00000000000169a8	ldarb	w8, [x8]
00000000000169ac	tbz	w8, #0x0, 0x169b4
00000000000169b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000169b4	ldr	w1, [x20, #0x14]
00000000000169b8	cmn	w1, #0x1
00000000000169bc	b.eq	0x16a00
00000000000169c0	mov	x8, sp
00000000000169c4	add	x3, x8, #0x20
00000000000169c8	ldr	x0, [x20, #0x18]
00000000000169cc	ldr	x8, [x0]
00000000000169d0	and	x8, x8, #0xfffffffffffffffc
00000000000169d4	ldr	x8, [x8]
00000000000169d8	ldr	x8, [x8, #0x138]
00000000000169dc	mov	x2, x19
00000000000169e0	blr	x8
00000000000169e4	ldr	x8, [sp, #0x8]
00000000000169e8	str	x8, [x21, #0x110]
00000000000169ec	ldp	x29, x30, [sp, #0x50]
00000000000169f0	ldp	x20, x19, [sp, #0x40]
00000000000169f4	ldp	x22, x21, [sp, #0x30]
00000000000169f8	add	sp, sp, #0x60
00000000000169fc	ret
0000000000016a00	ldr	x8, [x21, #0x118]
0000000000016a04	add	x0, x8, #0x70
0000000000016a08	mov	w1, #0x38
0000000000016a0c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000016a10	mov	x19, x0
0000000000016a14	adr	x8, #0x4230c
0000000000016a18	nop
0000000000016a1c	str	x8, [x19, #0x10]!
0000000000016a20	stur	xzr, [x19, #-0x8]
0000000000016a24	str	x19, [sp, #0x18]
0000000000016a28	adr	x1, #0x4f218
0000000000016a2c	nop
0000000000016a30	mov	x0, x19
0000000000016a34	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000016a38	mov	x0, x19
0000000000016a3c	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.SubList.add#internal:
0000000000016a40	stp	x22, x21, [sp, #-0x30]!
0000000000016a44	stp	x20, x19, [sp, #0x10]
0000000000016a48	stp	x29, x30, [sp, #0x20]
0000000000016a4c	add	x29, sp, #0x20
0000000000016a50	mov	x20, x2
0000000000016a54	mov	x21, x1
0000000000016a58	mov	x19, x0
0000000000016a5c	adr	x8, #0x6ffe7
0000000000016a60	nop
0000000000016a64	ldarb	w8, [x8]
0000000000016a68	tbz	w8, #0x0, 0x16a70
0000000000016a6c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016a70	ldr	w1, [x19, #0x1c]
0000000000016a74	mov	x0, x21
0000000000016a78	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
0000000000016a7c	ldr	x0, [x19, #0x10]
0000000000016a80	ldr	w8, [x19, #0x18]
0000000000016a84	add	w1, w8, w21
0000000000016a88	ldr	x8, [x0]
0000000000016a8c	and	x8, x8, #0xfffffffffffffffc
0000000000016a90	ldr	x8, [x8]
0000000000016a94	ldr	x8, [x8, #0xf0]
0000000000016a98	mov	x2, x20
0000000000016a9c	blr	x8
0000000000016aa0	ldr	w8, [x19, #0x1c]
0000000000016aa4	add	w8, w8, #0x1
0000000000016aa8	str	w8, [x19, #0x1c]
0000000000016aac	ldp	x29, x30, [sp, #0x20]
0000000000016ab0	ldp	x20, x19, [sp, #0x10]
0000000000016ab4	ldp	x22, x21, [sp], #0x30
0000000000016ab8	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.get#internal:
0000000000016abc	stp	x22, x21, [sp, #-0x30]!
0000000000016ac0	stp	x20, x19, [sp, #0x10]
0000000000016ac4	stp	x29, x30, [sp, #0x20]
0000000000016ac8	add	x29, sp, #0x20
0000000000016acc	mov	x19, x2
0000000000016ad0	mov	x20, x1
0000000000016ad4	mov	x21, x0
0000000000016ad8	adr	x8, #0x6ff6b
0000000000016adc	nop
0000000000016ae0	ldarb	w8, [x8]
0000000000016ae4	tbz	w8, #0x0, 0x16aec
0000000000016ae8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016aec	ldr	w1, [x21, #0x1c]
0000000000016af0	mov	x0, x20
0000000000016af4	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
0000000000016af8	ldr	x0, [x21, #0x10]
0000000000016afc	ldr	w8, [x21, #0x18]
0000000000016b00	add	w1, w8, w20
0000000000016b04	ldr	x8, [x0]
0000000000016b08	and	x8, x8, #0xfffffffffffffffc
0000000000016b0c	ldr	x8, [x8]
0000000000016b10	ldr	x8, [x8, #0x100]
0000000000016b14	mov	x2, x19
0000000000016b18	blr	x8
0000000000016b1c	str	x0, [x19]
0000000000016b20	ldp	x29, x30, [sp, #0x20]
0000000000016b24	ldp	x20, x19, [sp, #0x10]
0000000000016b28	ldp	x22, x21, [sp], #0x30
0000000000016b2c	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.removeAt#internal:
0000000000016b30	sub	sp, sp, #0x60
0000000000016b34	stp	x24, x23, [sp, #0x20]
0000000000016b38	stp	x22, x21, [sp, #0x30]
0000000000016b3c	stp	x20, x19, [sp, #0x40]
0000000000016b40	stp	x29, x30, [sp, #0x50]
0000000000016b44	add	x29, sp, #0x50
0000000000016b48	mov	x19, x2
0000000000016b4c	mov	x22, x1
0000000000016b50	mov	x20, x0
0000000000016b54	movi.16b	v0, #0x0
0000000000016b58	stp	q0, q0, [sp]
0000000000016b5c	mov	x8, sp
0000000000016b60	add	x21, x8, #0x18
0000000000016b64	adrp	x0, 86 ; 0x6c000
0000000000016b68	add	x0, x0, #0xbb0
0000000000016b6c	ldr	x9, [x0]
0000000000016b70	blr	x9
0000000000016b74	ldr	x23, [x0]
0000000000016b78	ldr	x9, [x23, #0x110]
0000000000016b7c	str	x8, [x23, #0x110]
0000000000016b80	mov	x8, #0x400000000
0000000000016b84	stp	x9, x8, [sp, #0x8]
0000000000016b88	adr	x8, #0x6febb
0000000000016b8c	nop
0000000000016b90	ldarb	w8, [x8]
0000000000016b94	tbz	w8, #0x0, 0x16b9c
0000000000016b98	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016b9c	ldr	w1, [x20, #0x1c]
0000000000016ba0	mov	x0, x22
0000000000016ba4	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
0000000000016ba8	ldr	x0, [x20, #0x10]
0000000000016bac	ldr	w8, [x20, #0x18]
0000000000016bb0	add	w1, w8, w22
0000000000016bb4	ldr	x8, [x0]
0000000000016bb8	and	x8, x8, #0xfffffffffffffffc
0000000000016bbc	ldr	x8, [x8]
0000000000016bc0	ldr	x8, [x8, #0x128]
0000000000016bc4	mov	x2, x21
0000000000016bc8	blr	x8
0000000000016bcc	ldr	w8, [x20, #0x1c]
0000000000016bd0	sub	w8, w8, #0x1
0000000000016bd4	str	w8, [x20, #0x1c]
0000000000016bd8	str	x0, [x19]
0000000000016bdc	ldr	x8, [sp, #0x8]
0000000000016be0	str	x8, [x23, #0x110]
0000000000016be4	ldp	x29, x30, [sp, #0x50]
0000000000016be8	ldp	x20, x19, [sp, #0x40]
0000000000016bec	ldp	x22, x21, [sp, #0x30]
0000000000016bf0	ldp	x24, x23, [sp, #0x20]
0000000000016bf4	add	sp, sp, #0x60
0000000000016bf8	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.set#internal:
0000000000016bfc	stp	x22, x21, [sp, #-0x30]!
0000000000016c00	stp	x20, x19, [sp, #0x10]
0000000000016c04	stp	x29, x30, [sp, #0x20]
0000000000016c08	add	x29, sp, #0x20
0000000000016c0c	mov	x19, x3
0000000000016c10	mov	x20, x2
0000000000016c14	mov	x21, x1
0000000000016c18	mov	x22, x0
0000000000016c1c	adr	x8, #0x6fe27
0000000000016c20	nop
0000000000016c24	ldarb	w8, [x8]
0000000000016c28	tbz	w8, #0x0, 0x16c30
0000000000016c2c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016c30	ldr	w1, [x22, #0x1c]
0000000000016c34	mov	x0, x21
0000000000016c38	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
0000000000016c3c	ldr	x0, [x22, #0x10]
0000000000016c40	ldr	w8, [x22, #0x18]
0000000000016c44	add	w1, w8, w21
0000000000016c48	ldr	x8, [x0]
0000000000016c4c	and	x8, x8, #0xfffffffffffffffc
0000000000016c50	ldr	x8, [x8]
0000000000016c54	ldr	x8, [x8, #0x138]
0000000000016c58	mov	x2, x20
0000000000016c5c	mov	x3, x19
0000000000016c60	blr	x8
0000000000016c64	str	x0, [x19]
0000000000016c68	ldp	x29, x30, [sp, #0x20]
0000000000016c6c	ldp	x20, x19, [sp, #0x10]
0000000000016c70	ldp	x22, x21, [sp], #0x30
0000000000016c74	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.<get-size>#internal:
0000000000016c78	stp	x20, x19, [sp, #-0x20]!
0000000000016c7c	stp	x29, x30, [sp, #0x10]
0000000000016c80	add	x29, sp, #0x10
0000000000016c84	mov	x19, x0
0000000000016c88	adr	x8, #0x6fdbb
0000000000016c8c	nop
0000000000016c90	ldarb	w8, [x8]
0000000000016c94	tbz	w8, #0x0, 0x16c9c
0000000000016c98	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016c9c	ldr	w0, [x19, #0x1c]
0000000000016ca0	ldp	x29, x30, [sp, #0x10]
0000000000016ca4	ldp	x20, x19, [sp], #0x20
0000000000016ca8	ret
_kfun:kotlin.collections.AbstractMutableList.$removeAll$lambda$0$FUNCTION_REFERENCE$15.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
0000000000016cac	stp	x22, x21, [sp, #-0x30]!
0000000000016cb0	stp	x20, x19, [sp, #0x10]
0000000000016cb4	stp	x29, x30, [sp, #0x20]
0000000000016cb8	add	x29, sp, #0x20
0000000000016cbc	mov	x19, x2
0000000000016cc0	mov	x20, x1
0000000000016cc4	mov	x21, x0
0000000000016cc8	adr	x8, #0x6fd7b
0000000000016ccc	nop
0000000000016cd0	ldarb	w8, [x8]
0000000000016cd4	tbz	w8, #0x0, 0x16cdc
0000000000016cd8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016cdc	ldr	x0, [x21, #0x8]
0000000000016ce0	ldr	x8, [x0]
0000000000016ce4	and	x8, x8, #0xfffffffffffffffc
0000000000016ce8	ldr	x8, [x8]
0000000000016cec	ldr	w9, [x8, #0x3c]
0000000000016cf0	ldr	x8, [x8, #0x40]
0000000000016cf4	tbnz	w9, #0x1f, 0x16d04
0000000000016cf8	mov	w10, #0x12
0000000000016cfc	and	x9, x9, x10
0000000000016d00	b	0x16d88
0000000000016d04	neg	w10, w9
0000000000016d08	mvn	w9, w9
0000000000016d0c	cmp	w10, #0x9
0000000000016d10	b.ge	0x16d48
0000000000016d14	cmp	w10, #0x2
0000000000016d18	b.lt	0x16d7c
0000000000016d1c	mov	x10, #0x0
0000000000016d20	mov	x11, x8
0000000000016d24	ldr	w12, [x11]
0000000000016d28	cmp	w12, #0x11
0000000000016d2c	b.gt	0x16d84
0000000000016d30	add	x10, x10, #0x1
0000000000016d34	add	x11, x11, #0x10
0000000000016d38	cmp	x9, x10
0000000000016d3c	b.ne	0x16d24
0000000000016d40	mov	x10, x9
0000000000016d44	b	0x16d84
0000000000016d48	mov	w10, #0x0
0000000000016d4c	add	w11, w9, w10
0000000000016d50	cmp	w11, #0x0
0000000000016d54	cinc	w11, w11, lt
0000000000016d58	asr	w11, w11, #1
0000000000016d5c	sbfiz	x12, x11, #4, #32
0000000000016d60	ldr	w12, [x8, x12]
0000000000016d64	cmp	w12, #0x12
0000000000016d68	csinc	w10, w10, w11, ge
0000000000016d6c	csel	w9, w9, w11, lt
0000000000016d70	cmp	w10, w9
0000000000016d74	b.lt	0x16d4c
0000000000016d78	b	0x16d84
0000000000016d7c	mov	w10, #0x0
0000000000016d80	b	0x16d84
0000000000016d84	sxtw	x9, w10
0000000000016d88	add	x8, x8, x9, lsl #4
0000000000016d8c	ldr	x8, [x8, #0x8]
0000000000016d90	ldr	x8, [x8, #0x8]
0000000000016d94	mov	x1, x20
0000000000016d98	blr	x8
0000000000016d9c	mov	x1, x19
0000000000016da0	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
0000000000016da4	str	x0, [x19]
0000000000016da8	ldp	x29, x30, [sp, #0x20]
0000000000016dac	ldp	x20, x19, [sp, #0x10]
0000000000016db0	ldp	x22, x21, [sp], #0x30
0000000000016db4	ret
_kfun:kotlin.collections.AbstractMutableList.$retainAll$lambda$1$FUNCTION_REFERENCE$16.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
0000000000016db8	stp	x22, x21, [sp, #-0x30]!
0000000000016dbc	stp	x20, x19, [sp, #0x10]
0000000000016dc0	stp	x29, x30, [sp, #0x20]
0000000000016dc4	add	x29, sp, #0x20
0000000000016dc8	mov	x19, x2
0000000000016dcc	mov	x20, x1
0000000000016dd0	mov	x21, x0
0000000000016dd4	adr	x8, #0x6fc6f
0000000000016dd8	nop
0000000000016ddc	ldarb	w8, [x8]
0000000000016de0	tbz	w8, #0x0, 0x16de8
0000000000016de4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016de8	ldr	x0, [x21, #0x8]
0000000000016dec	ldr	x8, [x0]
0000000000016df0	and	x8, x8, #0xfffffffffffffffc
0000000000016df4	ldr	x8, [x8]
0000000000016df8	ldr	w9, [x8, #0x3c]
0000000000016dfc	ldr	x8, [x8, #0x40]
0000000000016e00	tbnz	w9, #0x1f, 0x16e10
0000000000016e04	mov	w10, #0x12
0000000000016e08	and	x9, x9, x10
0000000000016e0c	b	0x16e94
0000000000016e10	neg	w10, w9
0000000000016e14	mvn	w9, w9
0000000000016e18	cmp	w10, #0x9
0000000000016e1c	b.ge	0x16e54
0000000000016e20	cmp	w10, #0x2
0000000000016e24	b.lt	0x16e88
0000000000016e28	mov	x10, #0x0
0000000000016e2c	mov	x11, x8
0000000000016e30	ldr	w12, [x11]
0000000000016e34	cmp	w12, #0x11
0000000000016e38	b.gt	0x16e90
0000000000016e3c	add	x10, x10, #0x1
0000000000016e40	add	x11, x11, #0x10
0000000000016e44	cmp	x9, x10
0000000000016e48	b.ne	0x16e30
0000000000016e4c	mov	x10, x9
0000000000016e50	b	0x16e90
0000000000016e54	mov	w10, #0x0
0000000000016e58	add	w11, w9, w10
0000000000016e5c	cmp	w11, #0x0
0000000000016e60	cinc	w11, w11, lt
0000000000016e64	asr	w11, w11, #1
0000000000016e68	sbfiz	x12, x11, #4, #32
0000000000016e6c	ldr	w12, [x8, x12]
0000000000016e70	cmp	w12, #0x12
0000000000016e74	csinc	w10, w10, w11, ge
0000000000016e78	csel	w9, w9, w11, lt
0000000000016e7c	cmp	w10, w9
0000000000016e80	b.lt	0x16e58
0000000000016e84	b	0x16e90
0000000000016e88	mov	w10, #0x0
0000000000016e8c	b	0x16e90
0000000000016e90	sxtw	x9, w10
0000000000016e94	add	x8, x8, x9, lsl #4
0000000000016e98	ldr	x8, [x8, #0x8]
0000000000016e9c	ldr	x8, [x8, #0x8]
0000000000016ea0	mov	x1, x20
0000000000016ea4	blr	x8
0000000000016ea8	eor	w0, w0, #0x1
0000000000016eac	mov	x1, x19
0000000000016eb0	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
0000000000016eb4	str	x0, [x19]
0000000000016eb8	ldp	x29, x30, [sp, #0x20]
0000000000016ebc	ldp	x20, x19, [sp, #0x10]
0000000000016ec0	ldp	x22, x21, [sp], #0x30
0000000000016ec4	ret
_kfun:kotlin.collections.AbstractMutableSet#equals(kotlin.Any?){}kotlin.Boolean:
0000000000016ec8	stp	x20, x19, [sp, #-0x20]!
0000000000016ecc	stp	x29, x30, [sp, #0x10]
0000000000016ed0	add	x29, sp, #0x10
0000000000016ed4	mov	x19, x1
0000000000016ed8	mov	x20, x0
0000000000016edc	adr	x8, #0x6fb67
0000000000016ee0	nop
0000000000016ee4	ldarb	w8, [x8]
0000000000016ee8	tbz	w8, #0x0, 0x16ef0
0000000000016eec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016ef0	cmp	x19, x20
0000000000016ef4	b.eq	0x16f2c
0000000000016ef8	cbz	x19, 0x16fe0
0000000000016efc	ldr	x8, [x19]
0000000000016f00	and	x8, x8, #0xfffffffffffffffc
0000000000016f04	ldr	x8, [x8]
0000000000016f08	ldr	w9, [x8, #0x3c]
0000000000016f0c	ldr	x8, [x8, #0x40]
0000000000016f10	tbnz	w9, #0x1f, 0x16f3c
0000000000016f14	and	x9, x9, #0x1e
0000000000016f18	lsl	x9, x9, #4
0000000000016f1c	ldr	w8, [x8, x9]
0000000000016f20	cmp	w8, #0x1e
0000000000016f24	b.ne	0x16fe0
0000000000016f28	b	0x17004
0000000000016f2c	mov	w0, #0x1
0000000000016f30	ldp	x29, x30, [sp, #0x10]
0000000000016f34	ldp	x20, x19, [sp], #0x20
0000000000016f38	ret
0000000000016f3c	neg	w10, w9
0000000000016f40	mvn	w9, w9
0000000000016f44	cmp	w10, #0x9
0000000000016f48	b.ge	0x16f94
0000000000016f4c	cmp	w10, #0x2
0000000000016f50	b.lt	0x16fc8
0000000000016f54	mov	x10, #0x0
0000000000016f58	mov	x11, x8
0000000000016f5c	ldr	w12, [x11]
0000000000016f60	cmp	w12, #0x1d
0000000000016f64	b.gt	0x16ff0
0000000000016f68	add	x10, x10, #0x1
0000000000016f6c	add	x11, x11, #0x10
0000000000016f70	cmp	x9, x10
0000000000016f74	b.ne	0x16f5c
0000000000016f78	mov	x10, x9
0000000000016f7c	sxtw	x9, w10
0000000000016f80	lsl	x9, x9, #4
0000000000016f84	ldr	w8, [x8, x9]
0000000000016f88	cmp	w8, #0x1e
0000000000016f8c	b.ne	0x16fe0
0000000000016f90	b	0x17004
0000000000016f94	mov	w10, #0x0
0000000000016f98	add	w11, w9, w10
0000000000016f9c	cmp	w11, #0x0
0000000000016fa0	cinc	w11, w11, lt
0000000000016fa4	asr	w11, w11, #1
0000000000016fa8	sbfiz	x12, x11, #4, #32
0000000000016fac	ldr	w12, [x8, x12]
0000000000016fb0	cmp	w12, #0x1e
0000000000016fb4	csinc	w10, w10, w11, ge
0000000000016fb8	csel	w9, w9, w11, lt
0000000000016fbc	cmp	w10, w9
0000000000016fc0	b.lt	0x16f98
0000000000016fc4	b	0x16ff0
0000000000016fc8	mov	w10, #0x0
0000000000016fcc	sxtw	x9, w10
0000000000016fd0	lsl	x9, x9, #4
0000000000016fd4	ldr	w8, [x8, x9]
0000000000016fd8	cmp	w8, #0x1e
0000000000016fdc	b.eq	0x17004
0000000000016fe0	mov	w0, #0x0
0000000000016fe4	ldp	x29, x30, [sp, #0x10]
0000000000016fe8	ldp	x20, x19, [sp], #0x20
0000000000016fec	ret
0000000000016ff0	sxtw	x9, w10
0000000000016ff4	lsl	x9, x9, #4
0000000000016ff8	ldr	w8, [x8, x9]
0000000000016ffc	cmp	w8, #0x1e
0000000000017000	b.ne	0x16fe0
0000000000017004	mov	x0, x20
0000000000017008	mov	x1, x19
000000000001700c	ldp	x29, x30, [sp, #0x10]
0000000000017010	ldp	x20, x19, [sp], #0x20
0000000000017014	b	"_kfun:kotlin.collections.AbstractSet.Companion#setEquals(kotlin.collections.Set<*>;kotlin.collections.Set<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractMutableSet#hashCode(){}kotlin.Int:
0000000000017018	stp	x20, x19, [sp, #-0x20]!
000000000001701c	stp	x29, x30, [sp, #0x10]
0000000000017020	add	x29, sp, #0x10
0000000000017024	mov	x19, x0
0000000000017028	adr	x8, #0x6fa1b
000000000001702c	nop
0000000000017030	ldarb	w8, [x8]
0000000000017034	tbz	w8, #0x0, 0x1703c
0000000000017038	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001703c	mov	x0, x19
0000000000017040	ldp	x29, x30, [sp, #0x10]
0000000000017044	ldp	x20, x19, [sp], #0x20
0000000000017048	b	"_kfun:kotlin.collections.AbstractSet.Companion#unorderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections#copyToArrayImpl(kotlin.collections.Collection<*>){}kotlin.Array<kotlin.Any?>:
000000000001704c	sub	sp, sp, #0xa0
0000000000017050	stp	x28, x27, [sp, #0x40]
0000000000017054	stp	x26, x25, [sp, #0x50]
0000000000017058	stp	x24, x23, [sp, #0x60]
000000000001705c	stp	x22, x21, [sp, #0x70]
0000000000017060	stp	x20, x19, [sp, #0x80]
0000000000017064	stp	x29, x30, [sp, #0x90]
0000000000017068	add	x29, sp, #0x90
000000000001706c	mov	x19, x1
0000000000017070	mov	x23, x0
0000000000017074	movi.16b	v0, #0x0
0000000000017078	stp	q0, q0, [sp]
000000000001707c	str	xzr, [sp, #0x30]
0000000000017080	str	q0, [sp, #0x20]
0000000000017084	mov	x21, sp
0000000000017088	adrp	x0, 85 ; 0x6c000
000000000001708c	add	x0, x0, #0xbb0
0000000000017090	ldr	x8, [x0]
0000000000017094	blr	x8
0000000000017098	ldr	x26, [x0]
000000000001709c	ldr	x8, [x26, #0x110]
00000000000170a0	str	x21, [x26, #0x110]
00000000000170a4	mov	x9, #0x700000000
00000000000170a8	stp	x8, x9, [sp, #0x8]
00000000000170ac	adr	x27, #0x6f997
00000000000170b0	nop
00000000000170b4	ldarb	w8, [x27]
00000000000170b8	tbz	w8, #0x0, 0x170c0
00000000000170bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000170c0	ldr	x8, [x23]
00000000000170c4	and	x8, x8, #0xfffffffffffffffc
00000000000170c8	ldr	x8, [x8]
00000000000170cc	ldr	w9, [x8, #0x3c]
00000000000170d0	ldr	x8, [x8, #0x40]
00000000000170d4	tbnz	w9, #0x1f, 0x17168
00000000000170d8	mov	w10, #0x12
00000000000170dc	and	x9, x9, x10
00000000000170e0	add	x8, x8, x9, lsl #4
00000000000170e4	ldr	x8, [x8, #0x8]
00000000000170e8	ldr	x8, [x8]
00000000000170ec	mov	x0, x23
00000000000170f0	blr	x8
00000000000170f4	tbnz	w0, #0x1f, 0x17284
00000000000170f8	mov	x25, x0
00000000000170fc	add	x20, x21, #0x30
0000000000017100	add	x24, x21, #0x28
0000000000017104	ldr	x8, [x26, #0x118]
0000000000017108	mov	w9, w0
000000000001710c	lsl	x9, x9, #3
0000000000017110	add	x9, x9, #0x1f
0000000000017114	and	x1, x9, #0xffffffff8
0000000000017118	add	x0, x8, #0x70
000000000001711c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017120	mov	x22, x0
0000000000017124	adr	x8, #0x414bc
0000000000017128	nop
000000000001712c	mov	x21, x0
0000000000017130	str	x8, [x21, #0x10]!
0000000000017134	str	xzr, [x0, #0x18]
0000000000017138	str	xzr, [x0, #0x8]
000000000001713c	str	w25, [x0, #0x18]
0000000000017140	str	x21, [sp, #0x20]
0000000000017144	ldr	x8, [x23]
0000000000017148	and	x8, x8, #0xfffffffffffffffc
000000000001714c	ldr	x8, [x8]
0000000000017150	ldr	w9, [x8, #0x3c]
0000000000017154	ldr	x8, [x8, #0x40]
0000000000017158	tbnz	w9, #0x1f, 0x171ac
000000000001715c	mov	w10, #0x12
0000000000017160	and	x9, x9, x10
0000000000017164	b	0x172c8
0000000000017168	neg	w10, w9
000000000001716c	mvn	w9, w9
0000000000017170	cmp	w10, #0x9
0000000000017174	b.ge	0x171f0
0000000000017178	cmp	w10, #0x2
000000000001717c	b.lt	0x17258
0000000000017180	mov	x10, #0x0
0000000000017184	mov	x11, x8
0000000000017188	ldr	w12, [x11]
000000000001718c	cmp	w12, #0x11
0000000000017190	b.gt	0x17268
0000000000017194	add	x10, x10, #0x1
0000000000017198	add	x11, x11, #0x10
000000000001719c	cmp	x9, x10
00000000000171a0	b.ne	0x17188
00000000000171a4	mov	x10, x9
00000000000171a8	b	0x17268
00000000000171ac	neg	w10, w9
00000000000171b0	mvn	w9, w9
00000000000171b4	cmp	w10, #0x9
00000000000171b8	b.ge	0x17224
00000000000171bc	cmp	w10, #0x2
00000000000171c0	b.lt	0x17260
00000000000171c4	mov	x10, #0x0
00000000000171c8	mov	x11, x8
00000000000171cc	ldr	w12, [x11]
00000000000171d0	cmp	w12, #0x11
00000000000171d4	b.gt	0x172c4
00000000000171d8	add	x10, x10, #0x1
00000000000171dc	add	x11, x11, #0x10
00000000000171e0	cmp	x9, x10
00000000000171e4	b.ne	0x171cc
00000000000171e8	mov	x10, x9
00000000000171ec	b	0x172c4
00000000000171f0	mov	w10, #0x0
00000000000171f4	add	w11, w9, w10
00000000000171f8	cmp	w11, #0x0
00000000000171fc	cinc	w11, w11, lt
0000000000017200	asr	w11, w11, #1
0000000000017204	sbfiz	x12, x11, #4, #32
0000000000017208	ldr	w12, [x8, x12]
000000000001720c	cmp	w12, #0x12
0000000000017210	csinc	w10, w10, w11, ge
0000000000017214	csel	w9, w9, w11, lt
0000000000017218	cmp	w10, w9
000000000001721c	b.lt	0x171f4
0000000000017220	b	0x17268
0000000000017224	mov	w10, #0x0
0000000000017228	add	w11, w9, w10
000000000001722c	cmp	w11, #0x0
0000000000017230	cinc	w11, w11, lt
0000000000017234	asr	w11, w11, #1
0000000000017238	sbfiz	x12, x11, #4, #32
000000000001723c	ldr	w12, [x8, x12]
0000000000017240	cmp	w12, #0x12
0000000000017244	csinc	w10, w10, w11, ge
0000000000017248	csel	w9, w9, w11, lt
000000000001724c	cmp	w10, w9
0000000000017250	b.lt	0x17228
0000000000017254	b	0x172c4
0000000000017258	mov	w10, #0x0
000000000001725c	b	0x17268
0000000000017260	mov	w10, #0x0
0000000000017264	b	0x172c4
0000000000017268	sxtw	x9, w10
000000000001726c	add	x8, x8, x9, lsl #4
0000000000017270	ldr	x8, [x8, #0x8]
0000000000017274	ldr	x8, [x8]
0000000000017278	mov	x0, x23
000000000001727c	blr	x8
0000000000017280	tbz	w0, #0x1f, 0x170f8
0000000000017284	ldr	x8, [x26, #0x118]
0000000000017288	add	x0, x8, #0x70
000000000001728c	mov	w1, #0x38
0000000000017290	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017294	mov	x19, x0
0000000000017298	adr	x8, #0x419e8
000000000001729c	nop
00000000000172a0	str	x8, [x19, #0x10]!
00000000000172a4	stur	xzr, [x19, #-0x8]
00000000000172a8	str	x19, [sp, #0x18]
00000000000172ac	adr	x1, #0x4dfe4
00000000000172b0	nop
00000000000172b4	mov	x0, x19
00000000000172b8	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
00000000000172bc	mov	x0, x19
00000000000172c0	bl	_ThrowException
00000000000172c4	sxtw	x9, w10
00000000000172c8	add	x8, x8, x9, lsl #4
00000000000172cc	ldr	x8, [x8, #0x8]
00000000000172d0	ldr	x8, [x8, #0x20]
00000000000172d4	mov	x0, x23
00000000000172d8	mov	x1, x24
00000000000172dc	blr	x8
00000000000172e0	mov	x23, x0
00000000000172e4	mov	w24, #0x0
00000000000172e8	add	x25, x22, #0x20
00000000000172ec	mov	w28, #0xa0
00000000000172f0	ldr	x8, [x23]
00000000000172f4	and	x8, x8, #0xfffffffffffffffc
00000000000172f8	ldr	x8, [x8]
00000000000172fc	ldr	w9, [x8, #0x3c]
0000000000017300	ldr	x8, [x8, #0x40]
0000000000017304	tbz	w9, #0x1f, 0x174a4
0000000000017308	b	0x17404
000000000001730c	ldarb	w8, [x27]
0000000000017310	tbz	w8, #0x0, 0x17318
0000000000017314	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017318	ldr	x8, [x23]
000000000001731c	and	x8, x8, #0xfffffffffffffffc
0000000000017320	ldr	x8, [x8]
0000000000017324	ldr	w9, [x8, #0x3c]
0000000000017328	ldr	x8, [x8, #0x40]
000000000001732c	tbnz	w9, #0x1f, 0x17338
0000000000017330	and	x9, x9, x28
0000000000017334	b	0x173bc
0000000000017338	neg	w10, w9
000000000001733c	mvn	w9, w9
0000000000017340	cmp	w10, #0x9
0000000000017344	b.ge	0x1737c
0000000000017348	cmp	w10, #0x2
000000000001734c	b.lt	0x173b0
0000000000017350	mov	x10, #0x0
0000000000017354	mov	x11, x8
0000000000017358	ldr	w12, [x11]
000000000001735c	cmp	w12, #0x9f
0000000000017360	b.gt	0x173b8
0000000000017364	add	x10, x10, #0x1
0000000000017368	add	x11, x11, #0x10
000000000001736c	cmp	x9, x10
0000000000017370	b.ne	0x17358
0000000000017374	mov	x10, x9
0000000000017378	b	0x173b8
000000000001737c	mov	w10, #0x0
0000000000017380	add	w11, w9, w10
0000000000017384	cmp	w11, #0x0
0000000000017388	cinc	w11, w11, lt
000000000001738c	asr	w11, w11, #1
0000000000017390	sbfiz	x12, x11, #4, #32
0000000000017394	ldr	w12, [x8, x12]
0000000000017398	cmp	w12, #0xa0
000000000001739c	csinc	w10, w10, w11, ge
00000000000173a0	csel	w9, w9, w11, lt
00000000000173a4	cmp	w10, w9
00000000000173a8	b.lt	0x17380
00000000000173ac	b	0x173b8
00000000000173b0	mov	w10, #0x0
00000000000173b4	b	0x173b8
00000000000173b8	sxtw	x9, w10
00000000000173bc	add	x8, x8, x9, lsl #4
00000000000173c0	ldr	x8, [x8, #0x8]
00000000000173c4	ldr	x8, [x8, #0x8]
00000000000173c8	mov	x0, x23
00000000000173cc	mov	x1, x20
00000000000173d0	blr	x8
00000000000173d4	ldr	w8, [x22, #0x18]
00000000000173d8	cmp	w8, w24
00000000000173dc	b.ls	0x174f0
00000000000173e0	ldr	xzr, [x21]
00000000000173e4	str	x0, [x25, w24, sxtw #3]
00000000000173e8	add	w24, w24, #0x1
00000000000173ec	ldr	x8, [x23]
00000000000173f0	and	x8, x8, #0xfffffffffffffffc
00000000000173f4	ldr	x8, [x8]
00000000000173f8	ldr	w9, [x8, #0x3c]
00000000000173fc	ldr	x8, [x8, #0x40]
0000000000017400	tbz	w9, #0x1f, 0x174a4
0000000000017404	neg	w10, w9
0000000000017408	mvn	w9, w9
000000000001740c	cmp	w10, #0x9
0000000000017410	b.ge	0x17448
0000000000017414	cmp	w10, #0x2
0000000000017418	b.lt	0x1747c
000000000001741c	mov	x10, #0x0
0000000000017420	mov	x11, x8
0000000000017424	ldr	w12, [x11]
0000000000017428	cmp	w12, #0x9f
000000000001742c	b.gt	0x17484
0000000000017430	add	x10, x10, #0x1
0000000000017434	add	x11, x11, #0x10
0000000000017438	cmp	x9, x10
000000000001743c	b.ne	0x17424
0000000000017440	mov	x10, x9
0000000000017444	b	0x17484
0000000000017448	mov	w10, #0x0
000000000001744c	add	w11, w9, w10
0000000000017450	cmp	w11, #0x0
0000000000017454	cinc	w11, w11, lt
0000000000017458	asr	w11, w11, #1
000000000001745c	sbfiz	x12, x11, #4, #32
0000000000017460	ldr	w12, [x8, x12]
0000000000017464	cmp	w12, #0xa0
0000000000017468	csinc	w10, w10, w11, ge
000000000001746c	csel	w9, w9, w11, lt
0000000000017470	cmp	w10, w9
0000000000017474	b.lt	0x1744c
0000000000017478	b	0x17484
000000000001747c	mov	w10, #0x0
0000000000017480	b	0x17484
0000000000017484	sxtw	x9, w10
0000000000017488	add	x8, x8, x9, lsl #4
000000000001748c	ldr	x8, [x8, #0x8]
0000000000017490	ldr	x8, [x8]
0000000000017494	mov	x0, x23
0000000000017498	blr	x8
000000000001749c	tbnz	w0, #0x0, 0x1730c
00000000000174a0	b	0x174c0
00000000000174a4	and	x9, x9, x28
00000000000174a8	add	x8, x8, x9, lsl #4
00000000000174ac	ldr	x8, [x8, #0x8]
00000000000174b0	ldr	x8, [x8]
00000000000174b4	mov	x0, x23
00000000000174b8	blr	x8
00000000000174bc	tbnz	w0, #0x0, 0x1730c
00000000000174c0	str	x21, [x19]
00000000000174c4	ldr	x8, [sp, #0x8]
00000000000174c8	str	x8, [x26, #0x110]
00000000000174cc	mov	x0, x21
00000000000174d0	ldp	x29, x30, [sp, #0x90]
00000000000174d4	ldp	x20, x19, [sp, #0x80]
00000000000174d8	ldp	x22, x21, [sp, #0x70]
00000000000174dc	ldp	x24, x23, [sp, #0x60]
00000000000174e0	ldp	x26, x25, [sp, #0x50]
00000000000174e4	ldp	x28, x27, [sp, #0x40]
00000000000174e8	add	sp, sp, #0xa0
00000000000174ec	ret
00000000000174f0	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections#copyOfNulls__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0?>:
00000000000174f4	sub	sp, sp, #0xc0
00000000000174f8	stp	x24, x23, [sp, #0x80]
00000000000174fc	stp	x22, x21, [sp, #0x90]
0000000000017500	stp	x20, x19, [sp, #0xa0]
0000000000017504	stp	x29, x30, [sp, #0xb0]
0000000000017508	add	x29, sp, #0xb0
000000000001750c	mov	x20, x2
0000000000017510	mov	x19, x1
0000000000017514	mov	x21, x0
0000000000017518	movi.16b	v0, #0x0
000000000001751c	stp	q0, q0, [sp, #0x20]
0000000000017520	stp	q0, q0, [sp, #0x60]
0000000000017524	stp	q0, q0, [sp, #0x40]
0000000000017528	stp	xzr, xzr, [sp, #0x10]
000000000001752c	adr	x8, #0x44e64
0000000000017530	nop
0000000000017534	orr	x8, x8, #0x3
0000000000017538	str	x8, [sp, #0x8]
000000000001753c	adrp	x0, 85 ; 0x6c000
0000000000017540	add	x0, x0, #0xbb0
0000000000017544	ldr	x8, [x0]
0000000000017548	blr	x8
000000000001754c	ldr	x23, [x0]
0000000000017550	ldr	x8, [x23, #0x110]
0000000000017554	add	x9, sp, #0x20
0000000000017558	str	x9, [x23, #0x110]
000000000001755c	mov	x9, #0xc00000000
0000000000017560	stp	x8, x9, [sp, #0x28]
0000000000017564	adr	x8, #0x6f4df
0000000000017568	nop
000000000001756c	ldarb	w8, [x8]
0000000000017570	tbz	w8, #0x0, 0x17578
0000000000017574	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017578	tbnz	w19, #0x1f, 0x175fc
000000000001757c	ldr	x8, [x23, #0x118]
0000000000017580	mov	w9, w19
0000000000017584	lsl	x9, x9, #3
0000000000017588	add	x9, x9, #0x1f
000000000001758c	and	x1, x9, #0xffffffff8
0000000000017590	add	x0, x8, #0x70
0000000000017594	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017598	mov	x22, x0
000000000001759c	stp	xzr, xzr, [x22, #0x10]!
00000000000175a0	adr	x8, #0x41040
00000000000175a4	nop
00000000000175a8	stp	xzr, x8, [x22, #-0x8]
00000000000175ac	str	w19, [x22, #0x8]
00000000000175b0	str	x22, [sp, #0x70]
00000000000175b4	ldr	w8, [x21, #0x8]
00000000000175b8	cmp	w8, w19
00000000000175bc	csel	w2, w8, w19, lt
00000000000175c0	add	x8, sp, #0x20
00000000000175c4	add	x3, x8, #0x58
00000000000175c8	mov	x0, x21
00000000000175cc	mov	x1, x22
00000000000175d0	bl	"_kfun:kotlin.collections#copyInto__at__kotlin.Array<out|0:0>(kotlin.Array<0:0>;kotlin.Int;kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0>"
00000000000175d4	str	x22, [x20]
00000000000175d8	ldr	x8, [sp, #0x28]
00000000000175dc	str	x8, [x23, #0x110]
00000000000175e0	mov	x0, x22
00000000000175e4	ldp	x29, x30, [sp, #0xb0]
00000000000175e8	ldp	x20, x19, [sp, #0xa0]
00000000000175ec	ldp	x22, x21, [sp, #0x90]
00000000000175f0	ldp	x24, x23, [sp, #0x80]
00000000000175f4	add	sp, sp, #0xc0
00000000000175f8	ret
00000000000175fc	add	x8, sp, #0x20
0000000000017600	add	x20, x8, #0x38
0000000000017604	add	x21, x8, #0x30
0000000000017608	add	x22, x8, #0x28
000000000001760c	mov	x24, x23
0000000000017610	add	x23, x8, #0x20
0000000000017614	add	x8, sp, #0x8
0000000000017618	str	x8, [sp, #0x38]
000000000001761c	add	x0, sp, #0x8
0000000000017620	mov	w1, #0xa
0000000000017624	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000017628	add	x0, sp, #0x8
000000000001762c	mov	w1, #0x0
0000000000017630	mov	x2, x23
0000000000017634	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000017638	adr	x1, #0x4dc38
000000000001763c	nop
0000000000017640	add	x0, sp, #0x8
0000000000017644	mov	x2, x22
0000000000017648	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001764c	add	x0, sp, #0x8
0000000000017650	mov	x1, x19
0000000000017654	mov	x2, x21
0000000000017658	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001765c	add	x0, sp, #0x8
0000000000017660	mov	x1, x20
0000000000017664	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000017668	mov	x19, x0
000000000001766c	ldr	x8, [x24, #0x118]
0000000000017670	add	x0, x8, #0x70
0000000000017674	mov	w1, #0x38
0000000000017678	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001767c	mov	x20, x0
0000000000017680	adr	x8, #0x41600
0000000000017684	nop
0000000000017688	str	x8, [x20, #0x10]!
000000000001768c	stur	xzr, [x20, #-0x8]
0000000000017690	str	x20, [sp, #0x60]
0000000000017694	mov	x0, x20
0000000000017698	mov	x1, x19
000000000001769c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
00000000000176a0	mov	x0, x20
00000000000176a4	bl	_ThrowException
_kfun:kotlin.collections.HashMap#<get-size>(){}kotlin.Int:
00000000000176a8	stp	x20, x19, [sp, #-0x20]!
00000000000176ac	stp	x29, x30, [sp, #0x10]
00000000000176b0	add	x29, sp, #0x10
00000000000176b4	mov	x19, x0
00000000000176b8	adr	x8, #0x6f38b
00000000000176bc	nop
00000000000176c0	ldarb	w8, [x8]
00000000000176c4	tbz	w8, #0x0, 0x176cc
00000000000176c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000176cc	ldr	w0, [x19, #0x4c]
00000000000176d0	ldp	x29, x30, [sp, #0x10]
00000000000176d4	ldp	x20, x19, [sp], #0x20
00000000000176d8	ret
_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}:
00000000000176dc	sub	sp, sp, #0xa0
00000000000176e0	stp	x24, x23, [sp, #0x60]
00000000000176e4	stp	x22, x21, [sp, #0x70]
00000000000176e8	stp	x20, x19, [sp, #0x80]
00000000000176ec	stp	x29, x30, [sp, #0x90]
00000000000176f0	add	x29, sp, #0x90
00000000000176f4	mov	x20, x1
00000000000176f8	mov	x19, x0
00000000000176fc	movi.16b	v0, #0x0
0000000000017700	stp	q0, q0, [sp]
0000000000017704	str	xzr, [sp, #0x30]
0000000000017708	str	q0, [sp, #0x20]
000000000001770c	adrp	x0, 85 ; 0x6c000
0000000000017710	add	x0, x0, #0xbb0
0000000000017714	ldr	x8, [x0]
0000000000017718	blr	x8
000000000001771c	ldr	x23, [x0]
0000000000017720	ldr	x8, [x23, #0x110]
0000000000017724	mov	x9, sp
0000000000017728	str	x9, [x23, #0x110]
000000000001772c	mov	x9, #0x700000000
0000000000017730	stp	x8, x9, [sp, #0x8]
0000000000017734	adr	x8, #0x6f30f
0000000000017738	nop
000000000001773c	ldarb	w8, [x8]
0000000000017740	tbz	w8, #0x0, 0x17748
0000000000017744	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017748	tbnz	w20, #0x1f, 0x17858
000000000001774c	ldr	x8, [x23, #0x118]
0000000000017750	mov	w22, w20
0000000000017754	lsl	x9, x22, #3
0000000000017758	add	x9, x9, #0x1f
000000000001775c	and	x1, x9, #0xffffffff8
0000000000017760	add	x0, x8, #0x70
0000000000017764	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017768	mov	x21, x0
000000000001776c	adr	x8, #0x40e74
0000000000017770	nop
0000000000017774	stp	x8, xzr, [x21, #0x10]!
0000000000017778	stur	xzr, [x21, #-0x8]
000000000001777c	str	w20, [x21, #0x8]
0000000000017780	str	x21, [sp, #0x20]
0000000000017784	ldr	x8, [x23, #0x118]
0000000000017788	lsl	x9, x22, #2
000000000001778c	add	x9, x9, #0x1f
0000000000017790	and	x1, x9, #0x7fffffff8
0000000000017794	add	x0, x8, #0x70
0000000000017798	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001779c	mov	x22, x0
00000000000177a0	adr	x24, #0x40f60
00000000000177a4	nop
00000000000177a8	stp	x24, xzr, [x22, #0x10]!
00000000000177ac	stur	xzr, [x22, #-0x8]
00000000000177b0	str	w20, [x22, #0x8]
00000000000177b4	str	x22, [sp, #0x28]
00000000000177b8	mov	x0, x20
00000000000177bc	bl	"_kfun:kotlin.collections.HashMap.Companion.computeHashSize#internal"
00000000000177c0	tbnz	w0, #0x1f, 0x17898
00000000000177c4	mov	x20, x0
00000000000177c8	ldr	x8, [x23, #0x118]
00000000000177cc	mov	w9, w0
00000000000177d0	lsl	x9, x9, #2
00000000000177d4	add	x9, x9, #0x1f
00000000000177d8	and	x1, x9, #0x7fffffff8
00000000000177dc	add	x0, x8, #0x70
00000000000177e0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000177e4	stp	x24, xzr, [x0, #0x10]!
00000000000177e8	stur	xzr, [x0, #-0x8]
00000000000177ec	str	w20, [x0, #0x8]
00000000000177f0	str	x0, [sp, #0x30]
00000000000177f4	stp	x21, xzr, [x19, #0x8]
00000000000177f8	stp	x22, x0, [x19, #0x18]
00000000000177fc	mov	w8, #0x2
0000000000017800	str	x8, [x19, #0x40]
0000000000017804	movi.16b	v0, #0x0
0000000000017808	stp	q0, q0, [sp, #0x40]
000000000001780c	ldr	x8, [x23, #0x110]
0000000000017810	add	x9, sp, #0x40
0000000000017814	str	x9, [x23, #0x110]
0000000000017818	ldr	x9, [x19, #0x20]
000000000001781c	ldr	w9, [x9, #0x8]
0000000000017820	str	x8, [x23, #0x110]
0000000000017824	clz	w8, w9
0000000000017828	cmp	w9, #0x0
000000000001782c	mov	w9, #0x21
0000000000017830	csinc	w8, w9, w8, eq
0000000000017834	str	w8, [x19, #0x48]
0000000000017838	ldr	x8, [sp, #0x8]
000000000001783c	str	x8, [x23, #0x110]
0000000000017840	ldp	x29, x30, [sp, #0x90]
0000000000017844	ldp	x20, x19, [sp, #0x80]
0000000000017848	ldp	x22, x21, [sp, #0x70]
000000000001784c	ldp	x24, x23, [sp, #0x60]
0000000000017850	add	sp, sp, #0xa0
0000000000017854	ret
0000000000017858	ldr	x8, [x23, #0x118]
000000000001785c	add	x0, x8, #0x70
0000000000017860	mov	w1, #0x38
0000000000017864	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017868	mov	x19, x0
000000000001786c	adr	x8, #0x41414
0000000000017870	nop
0000000000017874	str	x8, [x19, #0x10]!
0000000000017878	stur	xzr, [x19, #-0x8]
000000000001787c	str	x19, [sp, #0x18]
0000000000017880	adr	x1, #0x4da10
0000000000017884	nop
0000000000017888	mov	x0, x19
000000000001788c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000017890	mov	x0, x19
0000000000017894	bl	_ThrowException
0000000000017898	bl	_ThrowIllegalArgumentException
_kfun:kotlin.collections.HashMap#isEmpty(){}kotlin.Boolean:
000000000001789c	stp	x20, x19, [sp, #-0x20]!
00000000000178a0	stp	x29, x30, [sp, #0x10]
00000000000178a4	add	x29, sp, #0x10
00000000000178a8	mov	x19, x0
00000000000178ac	adr	x8, #0x6f197
00000000000178b0	nop
00000000000178b4	ldarb	w8, [x8]
00000000000178b8	tbz	w8, #0x0, 0x178c0
00000000000178bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000178c0	ldr	w8, [x19, #0x4c]
00000000000178c4	cmp	w8, #0x0
00000000000178c8	cset	w0, eq
00000000000178cc	ldp	x29, x30, [sp, #0x10]
00000000000178d0	ldp	x20, x19, [sp], #0x20
00000000000178d4	ret
_kfun:kotlin.collections.HashMap#containsKey(1:0){}kotlin.Boolean:
00000000000178d8	stp	x20, x19, [sp, #-0x20]!
00000000000178dc	stp	x29, x30, [sp, #0x10]
00000000000178e0	add	x29, sp, #0x10
00000000000178e4	mov	x19, x1
00000000000178e8	mov	x20, x0
00000000000178ec	adr	x8, #0x6f157
00000000000178f0	nop
00000000000178f4	ldarb	w8, [x8]
00000000000178f8	tbz	w8, #0x0, 0x17900
00000000000178fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017900	mov	x0, x20
0000000000017904	mov	x1, x19
0000000000017908	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001790c	mvn	w8, w0
0000000000017910	lsr	w0, w8, #31
0000000000017914	ldp	x29, x30, [sp, #0x10]
0000000000017918	ldp	x20, x19, [sp], #0x20
000000000001791c	ret
_kfun:kotlin.collections.HashMap#containsValue(1:1){}kotlin.Boolean:
0000000000017920	stp	x20, x19, [sp, #-0x20]!
0000000000017924	stp	x29, x30, [sp, #0x10]
0000000000017928	add	x29, sp, #0x10
000000000001792c	mov	x19, x1
0000000000017930	mov	x20, x0
0000000000017934	adr	x8, #0x6f10f
0000000000017938	nop
000000000001793c	ldarb	w8, [x8]
0000000000017940	tbz	w8, #0x0, 0x17948
0000000000017944	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017948	mov	x0, x20
000000000001794c	mov	x1, x19
0000000000017950	bl	"_kfun:kotlin.collections.HashMap.findValue#internal"
0000000000017954	mvn	w8, w0
0000000000017958	lsr	w0, w8, #31
000000000001795c	ldp	x29, x30, [sp, #0x10]
0000000000017960	ldp	x20, x19, [sp], #0x20
0000000000017964	ret
_kfun:kotlin.collections.HashMap#get(1:0){}1:1?:
0000000000017968	sub	sp, sp, #0x50
000000000001796c	stp	x22, x21, [sp, #0x20]
0000000000017970	stp	x20, x19, [sp, #0x30]
0000000000017974	stp	x29, x30, [sp, #0x40]
0000000000017978	add	x29, sp, #0x40
000000000001797c	mov	x19, x2
0000000000017980	mov	x21, x1
0000000000017984	mov	x20, x0
0000000000017988	movi.16b	v0, #0x0
000000000001798c	stp	q0, q0, [sp]
0000000000017990	adrp	x0, 85 ; 0x6c000
0000000000017994	add	x0, x0, #0xbb0
0000000000017998	ldr	x8, [x0]
000000000001799c	blr	x8
00000000000179a0	ldr	x22, [x0]
00000000000179a4	ldr	x8, [x22, #0x110]
00000000000179a8	mov	x9, sp
00000000000179ac	str	x9, [x22, #0x110]
00000000000179b0	mov	x9, #0x400000000
00000000000179b4	stp	x8, x9, [sp, #0x8]
00000000000179b8	adr	x8, #0x6f08b
00000000000179bc	nop
00000000000179c0	ldarb	w8, [x8]
00000000000179c4	tbz	w8, #0x0, 0x179cc
00000000000179c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000179cc	mov	x0, x20
00000000000179d0	mov	x1, x21
00000000000179d4	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
00000000000179d8	tbnz	w0, #0x1f, 0x17a04
00000000000179dc	ldr	x8, [x20, #0x10]
00000000000179e0	str	x8, [sp, #0x18]
00000000000179e4	cbz	x8, 0x17a28
00000000000179e8	ldr	w9, [x8, #0x8]
00000000000179ec	cmp	w9, w0
00000000000179f0	b.ls	0x17a2c
00000000000179f4	add	x8, x8, w0, sxtw #3
00000000000179f8	ldr	x0, [x8, #0x10]
00000000000179fc	str	x0, [x19]
0000000000017a00	b	0x17a08
0000000000017a04	mov	x0, #0x0
0000000000017a08	str	x0, [x19]
0000000000017a0c	ldr	x8, [sp, #0x8]
0000000000017a10	str	x8, [x22, #0x110]
0000000000017a14	ldp	x29, x30, [sp, #0x40]
0000000000017a18	ldp	x20, x19, [sp, #0x30]
0000000000017a1c	ldp	x22, x21, [sp, #0x20]
0000000000017a20	add	sp, sp, #0x50
0000000000017a24	ret
0000000000017a28	bl	_ThrowNullPointerException
0000000000017a2c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#put(1:0;1:1){}1:1?:
0000000000017a30	sub	sp, sp, #0x70
0000000000017a34	stp	x24, x23, [sp, #0x30]
0000000000017a38	stp	x22, x21, [sp, #0x40]
0000000000017a3c	stp	x20, x19, [sp, #0x50]
0000000000017a40	stp	x29, x30, [sp, #0x60]
0000000000017a44	add	x29, sp, #0x60
0000000000017a48	mov	x19, x3
0000000000017a4c	mov	x20, x2
0000000000017a50	mov	x22, x1
0000000000017a54	mov	x21, x0
0000000000017a58	movi.16b	v0, #0x0
0000000000017a5c	stp	q0, q0, [sp]
0000000000017a60	str	xzr, [sp, #0x20]
0000000000017a64	mov	x8, sp
0000000000017a68	add	x23, x8, #0x18
0000000000017a6c	adrp	x0, 85 ; 0x6c000
0000000000017a70	add	x0, x0, #0xbb0
0000000000017a74	ldr	x9, [x0]
0000000000017a78	blr	x9
0000000000017a7c	ldr	x24, [x0]
0000000000017a80	ldr	x9, [x24, #0x110]
0000000000017a84	str	x8, [x24, #0x110]
0000000000017a88	mov	x8, #0x500000000
0000000000017a8c	stp	x9, x8, [sp, #0x8]
0000000000017a90	adr	x8, #0x6efb3
0000000000017a94	nop
0000000000017a98	ldarb	w8, [x8]
0000000000017a9c	tbz	w8, #0x0, 0x17aa4
0000000000017aa0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017aa4	mov	x0, x21
0000000000017aa8	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000017aac	mov	x0, x21
0000000000017ab0	mov	x1, x22
0000000000017ab4	bl	"_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int"
0000000000017ab8	mov	x22, x0
0000000000017abc	mov	x0, x21
0000000000017ac0	mov	x1, x23
0000000000017ac4	bl	"_kfun:kotlin.collections.HashMap.allocateValuesArray#internal"
0000000000017ac8	mov	x8, x0
0000000000017acc	tbnz	w22, #0x1f, 0x17af0
0000000000017ad0	ldr	w9, [x8, #0x8]
0000000000017ad4	cmp	w9, w22
0000000000017ad8	b.ls	0x17b38
0000000000017adc	mov	x0, #0x0
0000000000017ae0	ldr	xzr, [x8]
0000000000017ae4	add	x8, x8, w22, sxtw #3
0000000000017ae8	add	x9, x8, #0x10
0000000000017aec	b	0x17b10
0000000000017af0	mvn	w9, w22
0000000000017af4	ldr	w10, [x8, #0x8]
0000000000017af8	cmp	w10, w9
0000000000017afc	b.ls	0x17b38
0000000000017b00	add	x9, x8, w9, sxtw #3
0000000000017b04	ldr	x0, [x9, #0x10]!
0000000000017b08	str	x0, [sp, #0x20]
0000000000017b0c	ldr	xzr, [x8]
0000000000017b10	str	x20, [x9]
0000000000017b14	str	x0, [x19]
0000000000017b18	ldr	x8, [sp, #0x8]
0000000000017b1c	str	x8, [x24, #0x110]
0000000000017b20	ldp	x29, x30, [sp, #0x60]
0000000000017b24	ldp	x20, x19, [sp, #0x50]
0000000000017b28	ldp	x22, x21, [sp, #0x40]
0000000000017b2c	ldp	x24, x23, [sp, #0x30]
0000000000017b30	add	sp, sp, #0x70
0000000000017b34	ret
0000000000017b38	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#putAll(kotlin.collections.Map<out|1:0,1:1>){}:
0000000000017b3c	sub	sp, sp, #0x120
0000000000017b40	stp	x28, x27, [sp, #0xc0]
0000000000017b44	stp	x26, x25, [sp, #0xd0]
0000000000017b48	stp	x24, x23, [sp, #0xe0]
0000000000017b4c	stp	x22, x21, [sp, #0xf0]
0000000000017b50	stp	x20, x19, [sp, #0x100]
0000000000017b54	stp	x29, x30, [sp, #0x110]
0000000000017b58	add	x29, sp, #0x110
0000000000017b5c	mov	x20, x1
0000000000017b60	mov	x19, x0
0000000000017b64	movi.16b	v0, #0x0
0000000000017b68	stp	q0, q0, [sp, #0x20]
0000000000017b6c	add	x8, sp, #0x20
0000000000017b70	add	x21, x8, #0x18
0000000000017b74	adrp	x0, 85 ; 0x6c000
0000000000017b78	add	x0, x0, #0xbb0
0000000000017b7c	ldr	x9, [x0]
0000000000017b80	blr	x9
0000000000017b84	ldr	x25, [x0]
0000000000017b88	ldr	x9, [x25, #0x110]
0000000000017b8c	str	x8, [x25, #0x110]
0000000000017b90	mov	x8, #0x400000000
0000000000017b94	stp	x9, x8, [sp, #0x28]
0000000000017b98	adr	x8, #0x6eeab
0000000000017b9c	nop
0000000000017ba0	ldarb	w8, [x8]
0000000000017ba4	tbz	w8, #0x0, 0x17bac
0000000000017ba8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017bac	mov	x0, x19
0000000000017bb0	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000017bb4	ldr	x8, [x20]
0000000000017bb8	and	x8, x8, #0xfffffffffffffffc
0000000000017bbc	ldr	x8, [x8]
0000000000017bc0	ldr	w9, [x8, #0x3c]
0000000000017bc4	ldr	x8, [x8, #0x40]
0000000000017bc8	tbnz	w9, #0x1f, 0x17bd8
0000000000017bcc	mov	w10, #0x41
0000000000017bd0	and	x9, x9, x10
0000000000017bd4	b	0x17c5c
0000000000017bd8	neg	w10, w9
0000000000017bdc	mvn	w9, w9
0000000000017be0	cmp	w10, #0x9
0000000000017be4	b.ge	0x17c1c
0000000000017be8	cmp	w10, #0x2
0000000000017bec	b.lt	0x17c50
0000000000017bf0	mov	x10, #0x0
0000000000017bf4	mov	x11, x8
0000000000017bf8	ldr	w12, [x11]
0000000000017bfc	cmp	w12, #0x40
0000000000017c00	b.gt	0x17c58
0000000000017c04	add	x10, x10, #0x1
0000000000017c08	add	x11, x11, #0x10
0000000000017c0c	cmp	x9, x10
0000000000017c10	b.ne	0x17bf8
0000000000017c14	mov	x10, x9
0000000000017c18	b	0x17c58
0000000000017c1c	mov	w10, #0x0
0000000000017c20	add	w11, w9, w10
0000000000017c24	cmp	w11, #0x0
0000000000017c28	cinc	w11, w11, lt
0000000000017c2c	asr	w11, w11, #1
0000000000017c30	sbfiz	x12, x11, #4, #32
0000000000017c34	ldr	w12, [x8, x12]
0000000000017c38	cmp	w12, #0x41
0000000000017c3c	csinc	w10, w10, w11, ge
0000000000017c40	csel	w9, w9, w11, lt
0000000000017c44	cmp	w10, w9
0000000000017c48	b.lt	0x17c20
0000000000017c4c	b	0x17c58
0000000000017c50	mov	w10, #0x0
0000000000017c54	b	0x17c58
0000000000017c58	sxtw	x9, w10
0000000000017c5c	add	x8, x8, x9, lsl #4
0000000000017c60	ldr	x8, [x8, #0x8]
0000000000017c64	ldr	x8, [x8]
0000000000017c68	mov	x0, x20
0000000000017c6c	mov	x1, x21
0000000000017c70	blr	x8
0000000000017c74	mov	x21, x0
0000000000017c78	movi.16b	v0, #0x0
0000000000017c7c	stp	q0, q0, [sp, #0x40]
0000000000017c80	str	xzr, [sp, #0x60]
0000000000017c84	add	x20, sp, #0x40
0000000000017c88	ldr	x8, [x25, #0x110]
0000000000017c8c	str	x20, [x25, #0x110]
0000000000017c90	mov	x9, #0x500000000
0000000000017c94	stp	x8, x9, [sp, #0x48]
0000000000017c98	ldr	x8, [x0]
0000000000017c9c	and	x8, x8, #0xfffffffffffffffc
0000000000017ca0	ldr	x8, [x8]
0000000000017ca4	ldr	w9, [x8, #0x3c]
0000000000017ca8	ldr	x8, [x8, #0x40]
0000000000017cac	tbnz	w9, #0x1f, 0x17cd4
0000000000017cb0	mov	w10, #0x12
0000000000017cb4	and	x9, x9, x10
0000000000017cb8	add	x8, x8, x9, lsl #4
0000000000017cbc	ldr	x8, [x8, #0x8]
0000000000017cc0	ldr	x8, [x8, #0x18]
0000000000017cc4	mov	x0, x21
0000000000017cc8	blr	x8
0000000000017ccc	tbz	w0, #0x0, 0x17d98
0000000000017cd0	b	0x17d70
0000000000017cd4	neg	w10, w9
0000000000017cd8	mvn	w9, w9
0000000000017cdc	cmp	w10, #0x9
0000000000017ce0	b.ge	0x17d18
0000000000017ce4	cmp	w10, #0x2
0000000000017ce8	b.lt	0x17d4c
0000000000017cec	mov	x10, #0x0
0000000000017cf0	mov	x11, x8
0000000000017cf4	ldr	w12, [x11]
0000000000017cf8	cmp	w12, #0x11
0000000000017cfc	b.gt	0x17d54
0000000000017d00	add	x10, x10, #0x1
0000000000017d04	add	x11, x11, #0x10
0000000000017d08	cmp	x9, x10
0000000000017d0c	b.ne	0x17cf4
0000000000017d10	mov	x10, x9
0000000000017d14	b	0x17d54
0000000000017d18	mov	w10, #0x0
0000000000017d1c	add	w11, w9, w10
0000000000017d20	cmp	w11, #0x0
0000000000017d24	cinc	w11, w11, lt
0000000000017d28	asr	w11, w11, #1
0000000000017d2c	sbfiz	x12, x11, #4, #32
0000000000017d30	ldr	w12, [x8, x12]
0000000000017d34	cmp	w12, #0x12
0000000000017d38	csinc	w10, w10, w11, ge
0000000000017d3c	csel	w9, w9, w11, lt
0000000000017d40	cmp	w10, w9
0000000000017d44	b.lt	0x17d1c
0000000000017d48	b	0x17d54
0000000000017d4c	mov	w10, #0x0
0000000000017d50	b	0x17d54
0000000000017d54	sxtw	x9, w10
0000000000017d58	add	x8, x8, x9, lsl #4
0000000000017d5c	ldr	x8, [x8, #0x8]
0000000000017d60	ldr	x8, [x8, #0x18]
0000000000017d64	mov	x0, x21
0000000000017d68	blr	x8
0000000000017d6c	tbz	w0, #0x0, 0x17d98
0000000000017d70	ldr	x8, [sp, #0x28]
0000000000017d74	str	x8, [x25, #0x110]
0000000000017d78	ldp	x29, x30, [sp, #0x110]
0000000000017d7c	ldp	x20, x19, [sp, #0x100]
0000000000017d80	ldp	x22, x21, [sp, #0xf0]
0000000000017d84	ldp	x24, x23, [sp, #0xe0]
0000000000017d88	ldp	x26, x25, [sp, #0xd0]
0000000000017d8c	ldp	x28, x27, [sp, #0xc0]
0000000000017d90	add	sp, sp, #0x120
0000000000017d94	ret
0000000000017d98	add	x22, x20, #0x18
0000000000017d9c	ldr	x8, [x21]
0000000000017da0	and	x8, x8, #0xfffffffffffffffc
0000000000017da4	ldr	x8, [x8]
0000000000017da8	ldr	w9, [x8, #0x3c]
0000000000017dac	ldr	x8, [x8, #0x40]
0000000000017db0	tbnz	w9, #0x1f, 0x17dc0
0000000000017db4	mov	w10, #0x12
0000000000017db8	and	x9, x9, x10
0000000000017dbc	b	0x17e44
0000000000017dc0	neg	w10, w9
0000000000017dc4	mvn	w9, w9
0000000000017dc8	cmp	w10, #0x9
0000000000017dcc	b.ge	0x17e04
0000000000017dd0	cmp	w10, #0x2
0000000000017dd4	b.lt	0x17e38
0000000000017dd8	mov	x10, #0x0
0000000000017ddc	mov	x11, x8
0000000000017de0	ldr	w12, [x11]
0000000000017de4	cmp	w12, #0x11
0000000000017de8	b.gt	0x17e40
0000000000017dec	add	x10, x10, #0x1
0000000000017df0	add	x11, x11, #0x10
0000000000017df4	cmp	x9, x10
0000000000017df8	b.ne	0x17de0
0000000000017dfc	mov	x10, x9
0000000000017e00	b	0x17e40
0000000000017e04	mov	w10, #0x0
0000000000017e08	add	w11, w9, w10
0000000000017e0c	cmp	w11, #0x0
0000000000017e10	cinc	w11, w11, lt
0000000000017e14	asr	w11, w11, #1
0000000000017e18	sbfiz	x12, x11, #4, #32
0000000000017e1c	ldr	w12, [x8, x12]
0000000000017e20	cmp	w12, #0x12
0000000000017e24	csinc	w10, w10, w11, ge
0000000000017e28	csel	w9, w9, w11, lt
0000000000017e2c	cmp	w10, w9
0000000000017e30	b.lt	0x17e08
0000000000017e34	b	0x17e40
0000000000017e38	mov	w10, #0x0
0000000000017e3c	b	0x17e40
0000000000017e40	sxtw	x9, w10
0000000000017e44	add	x10, x20, #0x20
0000000000017e48	str	x10, [sp, #0x18]
0000000000017e4c	add	x8, x8, x9, lsl #4
0000000000017e50	ldr	x8, [x8, #0x8]
0000000000017e54	ldr	x8, [x8]
0000000000017e58	mov	x0, x21
0000000000017e5c	blr	x8
0000000000017e60	mov	x1, x0
0000000000017e64	mov	x0, x19
0000000000017e68	bl	"_kfun:kotlin.collections.HashMap.ensureExtraCapacity#internal"
0000000000017e6c	ldr	x8, [x21]
0000000000017e70	and	x8, x8, #0xfffffffffffffffc
0000000000017e74	ldr	x8, [x8]
0000000000017e78	ldr	w9, [x8, #0x3c]
0000000000017e7c	ldr	x8, [x8, #0x40]
0000000000017e80	tbnz	w9, #0x1f, 0x17e90
0000000000017e84	mov	w10, #0x12
0000000000017e88	and	x9, x9, x10
0000000000017e8c	b	0x17f14
0000000000017e90	neg	w10, w9
0000000000017e94	mvn	w9, w9
0000000000017e98	cmp	w10, #0x9
0000000000017e9c	b.ge	0x17ed4
0000000000017ea0	cmp	w10, #0x2
0000000000017ea4	b.lt	0x17f08
0000000000017ea8	mov	x10, #0x0
0000000000017eac	mov	x11, x8
0000000000017eb0	ldr	w12, [x11]
0000000000017eb4	cmp	w12, #0x11
0000000000017eb8	b.gt	0x17f10
0000000000017ebc	add	x10, x10, #0x1
0000000000017ec0	add	x11, x11, #0x10
0000000000017ec4	cmp	x9, x10
0000000000017ec8	b.ne	0x17eb0
0000000000017ecc	mov	x10, x9
0000000000017ed0	b	0x17f10
0000000000017ed4	mov	w10, #0x0
0000000000017ed8	add	w11, w9, w10
0000000000017edc	cmp	w11, #0x0
0000000000017ee0	cinc	w11, w11, lt
0000000000017ee4	asr	w11, w11, #1
0000000000017ee8	sbfiz	x12, x11, #4, #32
0000000000017eec	ldr	w12, [x8, x12]
0000000000017ef0	cmp	w12, #0x12
0000000000017ef4	csinc	w10, w10, w11, ge
0000000000017ef8	csel	w9, w9, w11, lt
0000000000017efc	cmp	w10, w9
0000000000017f00	b.lt	0x17ed8
0000000000017f04	b	0x17f10
0000000000017f08	mov	w10, #0x0
0000000000017f0c	b	0x17f10
0000000000017f10	sxtw	x9, w10
0000000000017f14	add	x8, x8, x9, lsl #4
0000000000017f18	ldr	x8, [x8, #0x8]
0000000000017f1c	ldr	x8, [x8, #0x20]
0000000000017f20	mov	x0, x21
0000000000017f24	mov	x1, x22
0000000000017f28	blr	x8
0000000000017f2c	mov	x21, x0
0000000000017f30	add	x8, sp, #0x70
0000000000017f34	add	x22, x8, #0x18
0000000000017f38	add	x23, x8, #0x20
0000000000017f3c	add	x10, x8, #0x28
0000000000017f40	add	x9, x8, #0x38
0000000000017f44	stp	x9, x10, [sp, #0x8]
0000000000017f48	add	x8, x8, #0x40
0000000000017f4c	str	x8, [sp]
0000000000017f50	b	0x17f94
0000000000017f54	mov	w10, #0xa8
0000000000017f58	and	x9, x9, x10
0000000000017f5c	add	x8, x8, x9, lsl #4
0000000000017f60	ldr	x8, [x8, #0x8]
0000000000017f64	ldr	x8, [x8, #0x8]
0000000000017f68	mov	x0, x27
0000000000017f6c	ldr	x1, [sp]
0000000000017f70	blr	x8
0000000000017f74	ldr	w8, [x28, #0x8]
0000000000017f78	cmp	w8, w24
0000000000017f7c	b.ls	0x184d4
0000000000017f80	sxtw	x8, w24
0000000000017f84	ldr	xzr, [x28]
0000000000017f88	str	x0, [x20, x8, lsl #3]
0000000000017f8c	ldr	x8, [sp, #0x78]
0000000000017f90	str	x8, [x25, #0x110]
0000000000017f94	ldr	x8, [x21]
0000000000017f98	and	x8, x8, #0xfffffffffffffffc
0000000000017f9c	ldr	x8, [x8]
0000000000017fa0	ldr	w9, [x8, #0x3c]
0000000000017fa4	ldr	x8, [x8, #0x40]
0000000000017fa8	tbnz	w9, #0x1f, 0x17fd0
0000000000017fac	mov	w10, #0xa0
0000000000017fb0	and	x9, x9, x10
0000000000017fb4	add	x8, x8, x9, lsl #4
0000000000017fb8	ldr	x8, [x8, #0x8]
0000000000017fbc	ldr	x8, [x8]
0000000000017fc0	mov	x0, x21
0000000000017fc4	blr	x8
0000000000017fc8	tbnz	w0, #0x0, 0x1806c
0000000000017fcc	b	0x17d70
0000000000017fd0	neg	w10, w9
0000000000017fd4	mvn	w9, w9
0000000000017fd8	cmp	w10, #0x9
0000000000017fdc	b.ge	0x18014
0000000000017fe0	cmp	w10, #0x2
0000000000017fe4	b.lt	0x18048
0000000000017fe8	mov	x10, #0x0
0000000000017fec	mov	x11, x8
0000000000017ff0	ldr	w12, [x11]
0000000000017ff4	cmp	w12, #0x9f
0000000000017ff8	b.gt	0x18050
0000000000017ffc	add	x10, x10, #0x1
0000000000018000	add	x11, x11, #0x10
0000000000018004	cmp	x9, x10
0000000000018008	b.ne	0x17ff0
000000000001800c	mov	x10, x9
0000000000018010	b	0x18050
0000000000018014	mov	w10, #0x0
0000000000018018	add	w11, w9, w10
000000000001801c	cmp	w11, #0x0
0000000000018020	cinc	w11, w11, lt
0000000000018024	asr	w11, w11, #1
0000000000018028	sbfiz	x12, x11, #4, #32
000000000001802c	ldr	w12, [x8, x12]
0000000000018030	cmp	w12, #0xa0
0000000000018034	csinc	w10, w10, w11, ge
0000000000018038	csel	w9, w9, w11, lt
000000000001803c	cmp	w10, w9
0000000000018040	b.lt	0x18018
0000000000018044	b	0x18050
0000000000018048	mov	w10, #0x0
000000000001804c	b	0x18050
0000000000018050	sxtw	x9, w10
0000000000018054	add	x8, x8, x9, lsl #4
0000000000018058	ldr	x8, [x8, #0x8]
000000000001805c	ldr	x8, [x8]
0000000000018060	mov	x0, x21
0000000000018064	blr	x8
0000000000018068	tbz	w0, #0x0, 0x17d70
000000000001806c	adr	x8, #0x6e9d7
0000000000018070	nop
0000000000018074	ldarb	w8, [x8]
0000000000018078	tbz	w8, #0x0, 0x18080
000000000001807c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018080	ldr	x8, [x21]
0000000000018084	and	x8, x8, #0xfffffffffffffffc
0000000000018088	ldr	x8, [x8]
000000000001808c	ldr	w9, [x8, #0x3c]
0000000000018090	ldr	x8, [x8, #0x40]
0000000000018094	tbnz	w9, #0x1f, 0x180a4
0000000000018098	mov	w10, #0xa0
000000000001809c	and	x9, x9, x10
00000000000180a0	b	0x18128
00000000000180a4	neg	w10, w9
00000000000180a8	mvn	w9, w9
00000000000180ac	cmp	w10, #0x9
00000000000180b0	b.ge	0x180e8
00000000000180b4	cmp	w10, #0x2
00000000000180b8	b.lt	0x1811c
00000000000180bc	mov	x10, #0x0
00000000000180c0	mov	x11, x8
00000000000180c4	ldr	w12, [x11]
00000000000180c8	cmp	w12, #0x9f
00000000000180cc	b.gt	0x18124
00000000000180d0	add	x10, x10, #0x1
00000000000180d4	add	x11, x11, #0x10
00000000000180d8	cmp	x9, x10
00000000000180dc	b.ne	0x180c4
00000000000180e0	mov	x10, x9
00000000000180e4	b	0x18124
00000000000180e8	mov	w10, #0x0
00000000000180ec	add	w11, w9, w10
00000000000180f0	cmp	w11, #0x0
00000000000180f4	cinc	w11, w11, lt
00000000000180f8	asr	w11, w11, #1
00000000000180fc	sbfiz	x12, x11, #4, #32
0000000000018100	ldr	w12, [x8, x12]
0000000000018104	cmp	w12, #0xa0
0000000000018108	csinc	w10, w10, w11, ge
000000000001810c	csel	w9, w9, w11, lt
0000000000018110	cmp	w10, w9
0000000000018114	b.lt	0x180ec
0000000000018118	b	0x18124
000000000001811c	mov	w10, #0x0
0000000000018120	b	0x18124
0000000000018124	sxtw	x9, w10
0000000000018128	add	x8, x8, x9, lsl #4
000000000001812c	ldr	x8, [x8, #0x8]
0000000000018130	ldr	x8, [x8, #0x8]
0000000000018134	mov	x0, x21
0000000000018138	ldr	x1, [sp, #0x18]
000000000001813c	blr	x8
0000000000018140	mov	x27, x0
0000000000018144	movi.16b	v0, #0x0
0000000000018148	stp	q0, q0, [sp, #0x70]
000000000001814c	str	xzr, [sp, #0xb0]
0000000000018150	stp	q0, q0, [sp, #0x90]
0000000000018154	ldr	x10, [x25, #0x110]
0000000000018158	add	x9, sp, #0x70
000000000001815c	str	x9, [x25, #0x110]
0000000000018160	mov	x8, #0x900000000
0000000000018164	stp	x10, x8, [sp, #0x78]
0000000000018168	ldr	x8, [x0]
000000000001816c	and	x8, x8, #0xfffffffffffffffc
0000000000018170	ldr	x8, [x8]
0000000000018174	ldr	w9, [x8, #0x3c]
0000000000018178	ldr	x8, [x8, #0x40]
000000000001817c	tbnz	w9, #0x1f, 0x1818c
0000000000018180	mov	w10, #0xa8
0000000000018184	and	x9, x9, x10
0000000000018188	b	0x18210
000000000001818c	neg	w10, w9
0000000000018190	mvn	w9, w9
0000000000018194	cmp	w10, #0x9
0000000000018198	b.ge	0x181d0
000000000001819c	cmp	w10, #0x2
00000000000181a0	b.lt	0x18204
00000000000181a4	mov	x10, #0x0
00000000000181a8	mov	x11, x8
00000000000181ac	ldr	w12, [x11]
00000000000181b0	cmp	w12, #0xa7
00000000000181b4	b.gt	0x1820c
00000000000181b8	add	x10, x10, #0x1
00000000000181bc	add	x11, x11, #0x10
00000000000181c0	cmp	x9, x10
00000000000181c4	b.ne	0x181ac
00000000000181c8	mov	x10, x9
00000000000181cc	b	0x1820c
00000000000181d0	mov	w10, #0x0
00000000000181d4	add	w11, w9, w10
00000000000181d8	cmp	w11, #0x0
00000000000181dc	cinc	w11, w11, lt
00000000000181e0	asr	w11, w11, #1
00000000000181e4	sbfiz	x12, x11, #4, #32
00000000000181e8	ldr	w12, [x8, x12]
00000000000181ec	cmp	w12, #0xa8
00000000000181f0	csinc	w10, w10, w11, ge
00000000000181f4	csel	w9, w9, w11, lt
00000000000181f8	cmp	w10, w9
00000000000181fc	b.lt	0x181d4
0000000000018200	b	0x1820c
0000000000018204	mov	w10, #0x0
0000000000018208	b	0x1820c
000000000001820c	sxtw	x9, w10
0000000000018210	add	x8, x8, x9, lsl #4
0000000000018214	ldr	x8, [x8, #0x8]
0000000000018218	ldr	x8, [x8]
000000000001821c	mov	x0, x27
0000000000018220	mov	x1, x22
0000000000018224	blr	x8
0000000000018228	mov	x1, x0
000000000001822c	mov	x0, x19
0000000000018230	bl	"_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int"
0000000000018234	mov	x26, x0
0000000000018238	mov	x0, x19
000000000001823c	mov	x1, x23
0000000000018240	bl	"_kfun:kotlin.collections.HashMap.allocateValuesArray#internal"
0000000000018244	mov	x28, x0
0000000000018248	tbnz	w26, #0x1f, 0x18270
000000000001824c	ldr	x8, [x27]
0000000000018250	and	x8, x8, #0xfffffffffffffffc
0000000000018254	ldr	x8, [x8]
0000000000018258	ldr	w9, [x8, #0x3c]
000000000001825c	ldr	x8, [x8, #0x40]
0000000000018260	tbnz	w9, #0x1f, 0x182b0
0000000000018264	mov	w10, #0xa8
0000000000018268	and	x9, x9, x10
000000000001826c	b	0x183b4
0000000000018270	mvn	w24, w26
0000000000018274	ldr	w8, [x28, #0x8]
0000000000018278	cmp	w8, w24
000000000001827c	b.ls	0x184d4
0000000000018280	add	x20, x28, #0x10
0000000000018284	ldr	x26, [x20, w24, sxtw #3]
0000000000018288	str	x26, [sp, #0xa0]
000000000001828c	ldr	x8, [x27]
0000000000018290	and	x8, x8, #0xfffffffffffffffc
0000000000018294	ldr	x8, [x8]
0000000000018298	ldr	w9, [x8, #0x3c]
000000000001829c	ldr	x8, [x8, #0x40]
00000000000182a0	tbnz	w9, #0x1f, 0x182f4
00000000000182a4	mov	w10, #0xa8
00000000000182a8	and	x9, x9, x10
00000000000182ac	b	0x183ec
00000000000182b0	neg	w10, w9
00000000000182b4	mvn	w9, w9
00000000000182b8	cmp	w10, #0x9
00000000000182bc	b.ge	0x18338
00000000000182c0	cmp	w10, #0x2
00000000000182c4	b.lt	0x183a0
00000000000182c8	mov	x10, #0x0
00000000000182cc	mov	x11, x8
00000000000182d0	ldr	w12, [x11]
00000000000182d4	cmp	w12, #0xa7
00000000000182d8	b.gt	0x183b0
00000000000182dc	add	x10, x10, #0x1
00000000000182e0	add	x11, x11, #0x10
00000000000182e4	cmp	x9, x10
00000000000182e8	b.ne	0x182d0
00000000000182ec	mov	x10, x9
00000000000182f0	b	0x183b0
00000000000182f4	neg	w10, w9
00000000000182f8	mvn	w9, w9
00000000000182fc	cmp	w10, #0x9
0000000000018300	b.ge	0x1836c
0000000000018304	cmp	w10, #0x2
0000000000018308	b.lt	0x183a8
000000000001830c	mov	x10, #0x0
0000000000018310	mov	x11, x8
0000000000018314	ldr	w12, [x11]
0000000000018318	cmp	w12, #0xa7
000000000001831c	b.gt	0x183e8
0000000000018320	add	x10, x10, #0x1
0000000000018324	add	x11, x11, #0x10
0000000000018328	cmp	x9, x10
000000000001832c	b.ne	0x18314
0000000000018330	mov	x10, x9
0000000000018334	b	0x183e8
0000000000018338	mov	w10, #0x0
000000000001833c	add	w11, w9, w10
0000000000018340	cmp	w11, #0x0
0000000000018344	cinc	w11, w11, lt
0000000000018348	asr	w11, w11, #1
000000000001834c	sbfiz	x12, x11, #4, #32
0000000000018350	ldr	w12, [x8, x12]
0000000000018354	cmp	w12, #0xa8
0000000000018358	csinc	w10, w10, w11, ge
000000000001835c	csel	w9, w9, w11, lt
0000000000018360	cmp	w10, w9
0000000000018364	b.lt	0x1833c
0000000000018368	b	0x183b0
000000000001836c	mov	w10, #0x0
0000000000018370	add	w11, w9, w10
0000000000018374	cmp	w11, #0x0
0000000000018378	cinc	w11, w11, lt
000000000001837c	asr	w11, w11, #1
0000000000018380	sbfiz	x12, x11, #4, #32
0000000000018384	ldr	w12, [x8, x12]
0000000000018388	cmp	w12, #0xa8
000000000001838c	csinc	w10, w10, w11, ge
0000000000018390	csel	w9, w9, w11, lt
0000000000018394	cmp	w10, w9
0000000000018398	b.lt	0x18370
000000000001839c	b	0x183e8
00000000000183a0	mov	w10, #0x0
00000000000183a4	b	0x183b0
00000000000183a8	mov	w10, #0x0
00000000000183ac	b	0x183e8
00000000000183b0	sxtw	x9, w10
00000000000183b4	add	x8, x8, x9, lsl #4
00000000000183b8	ldr	x8, [x8, #0x8]
00000000000183bc	ldr	x8, [x8, #0x8]
00000000000183c0	mov	x0, x27
00000000000183c4	ldr	x1, [sp, #0x10]
00000000000183c8	blr	x8
00000000000183cc	ldr	w8, [x28, #0x8]
00000000000183d0	cmp	w8, w26
00000000000183d4	b.ls	0x184d4
00000000000183d8	ldr	xzr, [x28]
00000000000183dc	add	x8, x28, w26, sxtw #3
00000000000183e0	str	x0, [x8, #0x10]
00000000000183e4	b	0x17f8c
00000000000183e8	sxtw	x9, w10
00000000000183ec	add	x8, x8, x9, lsl #4
00000000000183f0	ldr	x8, [x8, #0x8]
00000000000183f4	ldr	x8, [x8, #0x8]
00000000000183f8	mov	x0, x27
00000000000183fc	ldr	x1, [sp, #0x8]
0000000000018400	blr	x8
0000000000018404	cbz	x0, 0x18428
0000000000018408	ldr	x8, [x0]
000000000001840c	and	x8, x8, #0xfffffffffffffffc
0000000000018410	ldr	x8, [x8]
0000000000018414	ldr	x8, [x8, #0x70]
0000000000018418	mov	x1, x26
000000000001841c	blr	x8
0000000000018420	tbnz	w0, #0x0, 0x17f8c
0000000000018424	b	0x1842c
0000000000018428	cbz	x26, 0x17f8c
000000000001842c	ldr	x8, [x27]
0000000000018430	and	x8, x8, #0xfffffffffffffffc
0000000000018434	ldr	x8, [x8]
0000000000018438	ldr	w9, [x8, #0x3c]
000000000001843c	ldr	x8, [x8, #0x40]
0000000000018440	tbz	w9, #0x1f, 0x17f54
0000000000018444	neg	w10, w9
0000000000018448	mvn	w9, w9
000000000001844c	cmp	w10, #0x9
0000000000018450	b.ge	0x1848c
0000000000018454	cmp	w10, #0x2
0000000000018458	b.lt	0x184c0
000000000001845c	mov	x10, #0x0
0000000000018460	mov	x11, x8
0000000000018464	ldr	w12, [x11]
0000000000018468	cmp	w12, #0xa7
000000000001846c	b.gt	0x184cc
0000000000018470	add	x10, x10, #0x1
0000000000018474	add	x11, x11, #0x10
0000000000018478	cmp	x9, x10
000000000001847c	b.ne	0x18464
0000000000018480	mov	x10, x9
0000000000018484	sxtw	x9, w10
0000000000018488	b	0x17f5c
000000000001848c	mov	w10, #0x0
0000000000018490	add	w11, w9, w10
0000000000018494	cmp	w11, #0x0
0000000000018498	cinc	w11, w11, lt
000000000001849c	asr	w11, w11, #1
00000000000184a0	sbfiz	x12, x11, #4, #32
00000000000184a4	ldr	w12, [x8, x12]
00000000000184a8	cmp	w12, #0xa8
00000000000184ac	csinc	w10, w10, w11, ge
00000000000184b0	csel	w9, w9, w11, lt
00000000000184b4	cmp	w10, w9
00000000000184b8	b.lt	0x18490
00000000000184bc	b	0x184cc
00000000000184c0	mov	w10, #0x0
00000000000184c4	sxtw	x9, w10
00000000000184c8	b	0x17f5c
00000000000184cc	sxtw	x9, w10
00000000000184d0	b	0x17f5c
00000000000184d4	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#remove(1:0){}1:1?:
00000000000184d8	sub	sp, sp, #0x60
00000000000184dc	stp	x22, x21, [sp, #0x30]
00000000000184e0	stp	x20, x19, [sp, #0x40]
00000000000184e4	stp	x29, x30, [sp, #0x50]
00000000000184e8	add	x29, sp, #0x50
00000000000184ec	mov	x19, x2
00000000000184f0	mov	x21, x1
00000000000184f4	mov	x20, x0
00000000000184f8	movi.16b	v0, #0x0
00000000000184fc	stp	q0, q0, [sp]
0000000000018500	str	xzr, [sp, #0x20]
0000000000018504	adrp	x0, 84 ; 0x6c000
0000000000018508	add	x0, x0, #0xbb0
000000000001850c	ldr	x8, [x0]
0000000000018510	blr	x8
0000000000018514	ldr	x22, [x0]
0000000000018518	ldr	x8, [x22, #0x110]
000000000001851c	mov	x9, sp
0000000000018520	str	x9, [x22, #0x110]
0000000000018524	mov	x9, #0x500000000
0000000000018528	stp	x8, x9, [sp, #0x8]
000000000001852c	adr	x8, #0x6e517
0000000000018530	nop
0000000000018534	ldarb	w8, [x8]
0000000000018538	tbz	w8, #0x0, 0x18540
000000000001853c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018540	mov	x0, x20
0000000000018544	mov	x1, x21
0000000000018548	bl	"_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int"
000000000001854c	tbnz	w0, #0x1f, 0x18580
0000000000018550	mov	x1, x0
0000000000018554	ldr	x0, [x20, #0x10]
0000000000018558	str	x0, [sp, #0x18]
000000000001855c	cbz	x0, 0x185a8
0000000000018560	ldr	w8, [x0, #0x8]
0000000000018564	cmp	w8, w1
0000000000018568	b.ls	0x185ac
000000000001856c	add	x8, x0, w1, sxtw #3
0000000000018570	ldr	x20, [x8, #0x10]
0000000000018574	str	x20, [sp, #0x20]
0000000000018578	bl	"_kfun:kotlin.collections#resetAt__at__kotlin.Array<0:0>(kotlin.Int){0ยง<kotlin.Any?>}"
000000000001857c	b	0x18584
0000000000018580	mov	x20, #0x0
0000000000018584	str	x20, [x19]
0000000000018588	ldr	x8, [sp, #0x8]
000000000001858c	str	x8, [x22, #0x110]
0000000000018590	mov	x0, x20
0000000000018594	ldp	x29, x30, [sp, #0x50]
0000000000018598	ldp	x20, x19, [sp, #0x40]
000000000001859c	ldp	x22, x21, [sp, #0x30]
00000000000185a0	add	sp, sp, #0x60
00000000000185a4	ret
00000000000185a8	bl	_ThrowNullPointerException
00000000000185ac	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#clear(){}:
00000000000185b0	sub	sp, sp, #0x80
00000000000185b4	stp	x24, x23, [sp, #0x40]
00000000000185b8	stp	x22, x21, [sp, #0x50]
00000000000185bc	stp	x20, x19, [sp, #0x60]
00000000000185c0	stp	x29, x30, [sp, #0x70]
00000000000185c4	add	x29, sp, #0x70
00000000000185c8	mov	x19, x0
00000000000185cc	movi.16b	v0, #0x0
00000000000185d0	stp	q0, q0, [sp]
00000000000185d4	stp	q0, q0, [sp, #0x20]
00000000000185d8	adrp	x0, 84 ; 0x6c000
00000000000185dc	add	x0, x0, #0xbb0
00000000000185e0	ldr	x8, [x0]
00000000000185e4	blr	x8
00000000000185e8	ldr	x21, [x0]
00000000000185ec	ldr	x8, [x21, #0x110]
00000000000185f0	mov	x9, sp
00000000000185f4	str	x9, [x21, #0x110]
00000000000185f8	mov	x9, #0x800000000
00000000000185fc	stp	x8, x9, [sp, #0x8]
0000000000018600	adr	x22, #0x6e443
0000000000018604	nop
0000000000018608	ldarb	w8, [x22]
000000000001860c	tbz	w8, #0x0, 0x18614
0000000000018610	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018614	mov	x0, x19
0000000000018618	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001861c	ldr	w20, [x19, #0x44]
0000000000018620	cmp	w20, #0x1
0000000000018624	b.mi	0x186b4
0000000000018628	mov	x23, #0x0
000000000001862c	mov	w24, #-0x1
0000000000018630	b	0x1864c
0000000000018634	ldr	xzr, [x8]
0000000000018638	add	x8, x8, x23, lsl #2
000000000001863c	str	w24, [x8, #0x10]
0000000000018640	add	x23, x23, #0x1
0000000000018644	cmp	w20, w23
0000000000018648	b.eq	0x186b0
000000000001864c	ldarb	w8, [x22]
0000000000018650	tbz	w8, #0x0, 0x18658
0000000000018654	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018658	ldr	x8, [x19, #0x18]
000000000001865c	str	x8, [sp, #0x18]
0000000000018660	ldr	w9, [x8, #0x8]
0000000000018664	cmp	w9, w23
0000000000018668	b.ls	0x186ac
000000000001866c	add	x8, x8, x23, lsl #2
0000000000018670	ldrsw	x8, [x8, #0x10]
0000000000018674	tbnz	w8, #0x1f, 0x18640
0000000000018678	ldr	x9, [x19, #0x20]
000000000001867c	str	x9, [sp, #0x20]
0000000000018680	ldr	w10, [x9, #0x8]
0000000000018684	cmp	w10, w8
0000000000018688	b.ls	0x186ac
000000000001868c	ldr	xzr, [x9]
0000000000018690	add	x8, x9, x8, lsl #2
0000000000018694	str	wzr, [x8, #0x10]
0000000000018698	ldr	x8, [x19, #0x18]
000000000001869c	str	x8, [sp, #0x28]
00000000000186a0	ldr	w9, [x8, #0x8]
00000000000186a4	cmp	w9, w23
00000000000186a8	b.hi	0x18634
00000000000186ac	bl	_ThrowArrayIndexOutOfBoundsException
00000000000186b0	ldr	w20, [x19, #0x44]
00000000000186b4	ldr	x0, [x19, #0x8]
00000000000186b8	str	x0, [sp, #0x30]
00000000000186bc	mov	w1, #0x0
00000000000186c0	mov	x2, x20
00000000000186c4	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}"
00000000000186c8	ldr	x0, [x19, #0x10]
00000000000186cc	str	x0, [sp, #0x38]
00000000000186d0	cbz	x0, 0x186e0
00000000000186d4	ldr	w2, [x19, #0x44]
00000000000186d8	mov	w1, #0x0
00000000000186dc	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}"
00000000000186e0	str	wzr, [x19, #0x4c]
00000000000186e4	str	wzr, [x19, #0x44]
00000000000186e8	ldr	x8, [sp, #0x8]
00000000000186ec	str	x8, [x21, #0x110]
00000000000186f0	ldp	x29, x30, [sp, #0x70]
00000000000186f4	ldp	x20, x19, [sp, #0x60]
00000000000186f8	ldp	x22, x21, [sp, #0x50]
00000000000186fc	ldp	x24, x23, [sp, #0x40]
0000000000018700	add	sp, sp, #0x80
0000000000018704	ret
_kfun:kotlin.collections.HashMap#<get-keys>(){}kotlin.collections.MutableSet<1:0>:
0000000000018708	sub	sp, sp, #0x60
000000000001870c	stp	x22, x21, [sp, #0x30]
0000000000018710	stp	x20, x19, [sp, #0x40]
0000000000018714	stp	x29, x30, [sp, #0x50]
0000000000018718	add	x29, sp, #0x50
000000000001871c	mov	x19, x1
0000000000018720	mov	x20, x0
0000000000018724	movi.16b	v0, #0x0
0000000000018728	stp	q0, q0, [sp]
000000000001872c	str	xzr, [sp, #0x20]
0000000000018730	adrp	x0, 84 ; 0x6c000
0000000000018734	add	x0, x0, #0xbb0
0000000000018738	ldr	x8, [x0]
000000000001873c	blr	x8
0000000000018740	ldr	x21, [x0]
0000000000018744	ldr	x8, [x21, #0x110]
0000000000018748	mov	x9, sp
000000000001874c	str	x9, [x21, #0x110]
0000000000018750	mov	x9, #0x500000000
0000000000018754	stp	x8, x9, [sp, #0x8]
0000000000018758	adr	x8, #0x6e2eb
000000000001875c	nop
0000000000018760	ldarb	w8, [x8]
0000000000018764	tbz	w8, #0x0, 0x1876c
0000000000018768	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001876c	ldr	x0, [x20, #0x28]
0000000000018770	str	x0, [sp, #0x18]
0000000000018774	cbnz	x0, 0x187a4
0000000000018778	ldr	x8, [x21, #0x118]
000000000001877c	add	x0, x8, #0x70
0000000000018780	mov	w1, #0x18
0000000000018784	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000018788	adr	x8, #0x431a8
000000000001878c	nop
0000000000018790	str	x8, [x0, #0x10]!
0000000000018794	stur	xzr, [x0, #-0x8]
0000000000018798	str	x0, [sp, #0x20]
000000000001879c	str	x20, [x0, #0x8]
00000000000187a0	str	x0, [x20, #0x28]
00000000000187a4	str	x0, [x19]
00000000000187a8	ldr	x8, [sp, #0x8]
00000000000187ac	str	x8, [x21, #0x110]
00000000000187b0	ldp	x29, x30, [sp, #0x50]
00000000000187b4	ldp	x20, x19, [sp, #0x40]
00000000000187b8	ldp	x22, x21, [sp, #0x30]
00000000000187bc	add	sp, sp, #0x60
00000000000187c0	ret
_kfun:kotlin.collections.HashMap#<get-values>(){}kotlin.collections.MutableCollection<1:1>:
00000000000187c4	sub	sp, sp, #0x60
00000000000187c8	stp	x22, x21, [sp, #0x30]
00000000000187cc	stp	x20, x19, [sp, #0x40]
00000000000187d0	stp	x29, x30, [sp, #0x50]
00000000000187d4	add	x29, sp, #0x50
00000000000187d8	mov	x19, x1
00000000000187dc	mov	x20, x0
00000000000187e0	movi.16b	v0, #0x0
00000000000187e4	stp	q0, q0, [sp]
00000000000187e8	str	xzr, [sp, #0x20]
00000000000187ec	adrp	x0, 84 ; 0x6c000
00000000000187f0	add	x0, x0, #0xbb0
00000000000187f4	ldr	x8, [x0]
00000000000187f8	blr	x8
00000000000187fc	ldr	x21, [x0]
0000000000018800	ldr	x8, [x21, #0x110]
0000000000018804	mov	x9, sp
0000000000018808	str	x9, [x21, #0x110]
000000000001880c	mov	x9, #0x500000000
0000000000018810	stp	x8, x9, [sp, #0x8]
0000000000018814	adr	x8, #0x6e22f
0000000000018818	nop
000000000001881c	ldarb	w8, [x8]
0000000000018820	tbz	w8, #0x0, 0x18828
0000000000018824	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018828	ldr	x0, [x20, #0x30]
000000000001882c	str	x0, [sp, #0x18]
0000000000018830	cbnz	x0, 0x18860
0000000000018834	ldr	x8, [x21, #0x118]
0000000000018838	add	x0, x8, #0x70
000000000001883c	mov	w1, #0x18
0000000000018840	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000018844	adr	x8, #0x431dc
0000000000018848	nop
000000000001884c	str	x8, [x0, #0x10]!
0000000000018850	stur	xzr, [x0, #-0x8]
0000000000018854	str	x0, [sp, #0x20]
0000000000018858	str	x20, [x0, #0x8]
000000000001885c	str	x0, [x20, #0x30]
0000000000018860	str	x0, [x19]
0000000000018864	ldr	x8, [sp, #0x8]
0000000000018868	str	x8, [x21, #0x110]
000000000001886c	ldp	x29, x30, [sp, #0x50]
0000000000018870	ldp	x20, x19, [sp, #0x40]
0000000000018874	ldp	x22, x21, [sp, #0x30]
0000000000018878	add	sp, sp, #0x60
000000000001887c	ret
_kfun:kotlin.collections.HashMap#<get-entries>(){}kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<1:0,1:1>>:
0000000000018880	sub	sp, sp, #0x60
0000000000018884	stp	x22, x21, [sp, #0x30]
0000000000018888	stp	x20, x19, [sp, #0x40]
000000000001888c	stp	x29, x30, [sp, #0x50]
0000000000018890	add	x29, sp, #0x50
0000000000018894	mov	x19, x1
0000000000018898	mov	x20, x0
000000000001889c	movi.16b	v0, #0x0
00000000000188a0	stp	q0, q0, [sp]
00000000000188a4	str	xzr, [sp, #0x20]
00000000000188a8	adrp	x0, 84 ; 0x6c000
00000000000188ac	add	x0, x0, #0xbb0
00000000000188b0	ldr	x8, [x0]
00000000000188b4	blr	x8
00000000000188b8	ldr	x21, [x0]
00000000000188bc	ldr	x8, [x21, #0x110]
00000000000188c0	mov	x9, sp
00000000000188c4	str	x9, [x21, #0x110]
00000000000188c8	mov	x9, #0x500000000
00000000000188cc	stp	x8, x9, [sp, #0x8]
00000000000188d0	adr	x8, #0x6e173
00000000000188d4	nop
00000000000188d8	ldarb	w8, [x8]
00000000000188dc	tbz	w8, #0x0, 0x188e4
00000000000188e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000188e4	ldr	x0, [x20, #0x38]
00000000000188e8	str	x0, [sp, #0x18]
00000000000188ec	cbnz	x0, 0x1891c
00000000000188f0	ldr	x8, [x21, #0x118]
00000000000188f4	add	x0, x8, #0x70
00000000000188f8	mov	w1, #0x18
00000000000188fc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000018900	adr	x8, #0x43210
0000000000018904	nop
0000000000018908	str	x8, [x0, #0x10]!
000000000001890c	stur	xzr, [x0, #-0x8]
0000000000018910	str	x0, [sp, #0x20]
0000000000018914	str	x20, [x0, #0x8]
0000000000018918	str	x0, [x20, #0x38]
000000000001891c	str	x0, [x19]
0000000000018920	ldr	x8, [sp, #0x8]
0000000000018924	str	x8, [x21, #0x110]
0000000000018928	ldp	x29, x30, [sp, #0x50]
000000000001892c	ldp	x20, x19, [sp, #0x40]
0000000000018930	ldp	x22, x21, [sp, #0x30]
0000000000018934	add	sp, sp, #0x60
0000000000018938	ret
_kfun:kotlin.collections.HashMap#equals(kotlin.Any?){}kotlin.Boolean:
000000000001893c	sub	sp, sp, #0x60
0000000000018940	stp	x24, x23, [sp, #0x20]
0000000000018944	stp	x22, x21, [sp, #0x30]
0000000000018948	stp	x20, x19, [sp, #0x40]
000000000001894c	stp	x29, x30, [sp, #0x50]
0000000000018950	add	x29, sp, #0x50
0000000000018954	mov	x20, x1
0000000000018958	mov	x19, x0
000000000001895c	adr	x8, #0x6e0e7
0000000000018960	nop
0000000000018964	ldarb	w8, [x8]
0000000000018968	tbz	w8, #0x0, 0x18970
000000000001896c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018970	cmp	x20, x19
0000000000018974	b.eq	0x18a08
0000000000018978	cbz	x20, 0x18af0
000000000001897c	ldr	x8, [x20]
0000000000018980	and	x8, x8, #0xfffffffffffffffc
0000000000018984	ldr	x8, [x8]
0000000000018988	ldr	w9, [x8, #0x3c]
000000000001898c	ldr	x8, [x8, #0x40]
0000000000018990	tbnz	w9, #0x1f, 0x18a10
0000000000018994	mov	w10, #0x41
0000000000018998	and	x9, x9, x10
000000000001899c	lsl	x9, x9, #4
00000000000189a0	ldr	w8, [x8, x9]
00000000000189a4	cmp	w8, #0x41
00000000000189a8	b.ne	0x18af0
00000000000189ac	movi.16b	v0, #0x0
00000000000189b0	stp	q0, q0, [sp]
00000000000189b4	mov	x23, sp
00000000000189b8	adrp	x21, 84 ; 0x6c000
00000000000189bc	add	x21, x21, #0xbb0
00000000000189c0	ldr	x22, [x21]
00000000000189c4	mov	x0, x21
00000000000189c8	blr	x22
00000000000189cc	ldr	x8, [x0]
00000000000189d0	ldr	x9, [x8, #0x110]
00000000000189d4	str	x23, [x8, #0x110]
00000000000189d8	mov	x8, #0x400000000
00000000000189dc	stp	x9, x8, [sp, #0x8]
00000000000189e0	ldr	w24, [x19, #0x4c]
00000000000189e4	ldr	x8, [x20]
00000000000189e8	and	x8, x8, #0xfffffffffffffffc
00000000000189ec	ldr	x8, [x8]
00000000000189f0	ldr	w9, [x8, #0x3c]
00000000000189f4	ldr	x8, [x8, #0x40]
00000000000189f8	tbnz	w9, #0x1f, 0x18a68
00000000000189fc	mov	w10, #0x41
0000000000018a00	and	x9, x9, x10
0000000000018a04	b	0x18b6c
0000000000018a08	mov	w8, #0x1
0000000000018a0c	b	0x18c74
0000000000018a10	neg	w10, w9
0000000000018a14	mvn	w9, w9
0000000000018a18	cmp	w10, #0x9
0000000000018a1c	b.ge	0x18aac
0000000000018a20	cmp	w10, #0x2
0000000000018a24	b.lt	0x18af8
0000000000018a28	mov	x10, #0x0
0000000000018a2c	mov	x11, x8
0000000000018a30	ldr	w12, [x11]
0000000000018a34	cmp	w12, #0x40
0000000000018a38	b.gt	0x18b48
0000000000018a3c	add	x10, x10, #0x1
0000000000018a40	add	x11, x11, #0x10
0000000000018a44	cmp	x9, x10
0000000000018a48	b.ne	0x18a30
0000000000018a4c	mov	x10, x9
0000000000018a50	sxtw	x9, w10
0000000000018a54	lsl	x9, x9, #4
0000000000018a58	ldr	w8, [x8, x9]
0000000000018a5c	cmp	w8, #0x41
0000000000018a60	b.ne	0x18af0
0000000000018a64	b	0x189ac
0000000000018a68	neg	w10, w9
0000000000018a6c	mvn	w9, w9
0000000000018a70	cmp	w10, #0x9
0000000000018a74	b.ge	0x18b14
0000000000018a78	cmp	w10, #0x2
0000000000018a7c	b.lt	0x18b60
0000000000018a80	mov	x10, #0x0
0000000000018a84	mov	x11, x8
0000000000018a88	ldr	w12, [x11]
0000000000018a8c	cmp	w12, #0x40
0000000000018a90	b.gt	0x18b68
0000000000018a94	add	x10, x10, #0x1
0000000000018a98	add	x11, x11, #0x10
0000000000018a9c	cmp	x9, x10
0000000000018aa0	b.ne	0x18a88
0000000000018aa4	mov	x10, x9
0000000000018aa8	b	0x18b68
0000000000018aac	mov	w10, #0x0
0000000000018ab0	add	w11, w9, w10
0000000000018ab4	cmp	w11, #0x0
0000000000018ab8	cinc	w11, w11, lt
0000000000018abc	asr	w11, w11, #1
0000000000018ac0	sbfiz	x12, x11, #4, #32
0000000000018ac4	ldr	w12, [x8, x12]
0000000000018ac8	cmp	w12, #0x41
0000000000018acc	csinc	w10, w10, w11, ge
0000000000018ad0	csel	w9, w9, w11, lt
0000000000018ad4	cmp	w10, w9
0000000000018ad8	b.lt	0x18ab0
0000000000018adc	sxtw	x9, w10
0000000000018ae0	lsl	x9, x9, #4
0000000000018ae4	ldr	w8, [x8, x9]
0000000000018ae8	cmp	w8, #0x41
0000000000018aec	b.eq	0x189ac
0000000000018af0	mov	w8, #0x0
0000000000018af4	b	0x18c74
0000000000018af8	mov	w10, #0x0
0000000000018afc	sxtw	x9, w10
0000000000018b00	lsl	x9, x9, #4
0000000000018b04	ldr	w8, [x8, x9]
0000000000018b08	cmp	w8, #0x41
0000000000018b0c	b.eq	0x189ac
0000000000018b10	b	0x18af0
0000000000018b14	mov	w10, #0x0
0000000000018b18	add	w11, w9, w10
0000000000018b1c	cmp	w11, #0x0
0000000000018b20	cinc	w11, w11, lt
0000000000018b24	asr	w11, w11, #1
0000000000018b28	sbfiz	x12, x11, #4, #32
0000000000018b2c	ldr	w12, [x8, x12]
0000000000018b30	cmp	w12, #0x41
0000000000018b34	csinc	w10, w10, w11, ge
0000000000018b38	csel	w9, w9, w11, lt
0000000000018b3c	cmp	w10, w9
0000000000018b40	b.lt	0x18b18
0000000000018b44	b	0x18b68
0000000000018b48	sxtw	x9, w10
0000000000018b4c	lsl	x9, x9, #4
0000000000018b50	ldr	w8, [x8, x9]
0000000000018b54	cmp	w8, #0x41
0000000000018b58	b.ne	0x18af0
0000000000018b5c	b	0x189ac
0000000000018b60	mov	w10, #0x0
0000000000018b64	b	0x18b68
0000000000018b68	sxtw	x9, w10
0000000000018b6c	add	x8, x8, x9, lsl #4
0000000000018b70	ldr	x8, [x8, #0x8]
0000000000018b74	ldr	x8, [x8, #0x10]
0000000000018b78	mov	x0, x20
0000000000018b7c	blr	x8
0000000000018b80	cmp	w24, w0
0000000000018b84	b.ne	0x18bb0
0000000000018b88	add	x1, x23, #0x18
0000000000018b8c	ldr	x8, [x20]
0000000000018b90	and	x8, x8, #0xfffffffffffffffc
0000000000018b94	ldr	x8, [x8]
0000000000018b98	ldr	w9, [x8, #0x3c]
0000000000018b9c	ldr	x8, [x8, #0x40]
0000000000018ba0	tbnz	w9, #0x1f, 0x18bb8
0000000000018ba4	mov	w10, #0x41
0000000000018ba8	and	x9, x9, x10
0000000000018bac	b	0x18c3c
0000000000018bb0	mov	w8, #0x0
0000000000018bb4	b	0x18c60
0000000000018bb8	neg	w10, w9
0000000000018bbc	mvn	w9, w9
0000000000018bc0	cmp	w10, #0x9
0000000000018bc4	b.ge	0x18bfc
0000000000018bc8	cmp	w10, #0x2
0000000000018bcc	b.lt	0x18c30
0000000000018bd0	mov	x10, #0x0
0000000000018bd4	mov	x11, x8
0000000000018bd8	ldr	w12, [x11]
0000000000018bdc	cmp	w12, #0x40
0000000000018be0	b.gt	0x18c38
0000000000018be4	add	x10, x10, #0x1
0000000000018be8	add	x11, x11, #0x10
0000000000018bec	cmp	x9, x10
0000000000018bf0	b.ne	0x18bd8
0000000000018bf4	mov	x10, x9
0000000000018bf8	b	0x18c38
0000000000018bfc	mov	w10, #0x0
0000000000018c00	add	w11, w9, w10
0000000000018c04	cmp	w11, #0x0
0000000000018c08	cinc	w11, w11, lt
0000000000018c0c	asr	w11, w11, #1
0000000000018c10	sbfiz	x12, x11, #4, #32
0000000000018c14	ldr	w12, [x8, x12]
0000000000018c18	cmp	w12, #0x41
0000000000018c1c	csinc	w10, w10, w11, ge
0000000000018c20	csel	w9, w9, w11, lt
0000000000018c24	cmp	w10, w9
0000000000018c28	b.lt	0x18c00
0000000000018c2c	b	0x18c38
0000000000018c30	mov	w10, #0x0
0000000000018c34	b	0x18c38
0000000000018c38	sxtw	x9, w10
0000000000018c3c	add	x8, x8, x9, lsl #4
0000000000018c40	ldr	x8, [x8, #0x8]
0000000000018c44	ldr	x8, [x8]
0000000000018c48	mov	x0, x20
0000000000018c4c	blr	x8
0000000000018c50	mov	x1, x0
0000000000018c54	mov	x0, x19
0000000000018c58	bl	"_kfun:kotlin.collections.HashMap#containsAllEntries(kotlin.collections.Collection<*>){}kotlin.Boolean"
0000000000018c5c	mov	x8, x0
0000000000018c60	mov	x0, x21
0000000000018c64	blr	x22
0000000000018c68	ldr	x9, [x0]
0000000000018c6c	ldr	x10, [sp, #0x8]
0000000000018c70	str	x10, [x9, #0x110]
0000000000018c74	mov	x0, x8
0000000000018c78	ldp	x29, x30, [sp, #0x50]
0000000000018c7c	ldp	x20, x19, [sp, #0x40]
0000000000018c80	ldp	x22, x21, [sp, #0x30]
0000000000018c84	ldp	x24, x23, [sp, #0x20]
0000000000018c88	add	sp, sp, #0x60
0000000000018c8c	ret
_kfun:kotlin.collections.HashMap#hashCode(){}kotlin.Int:
0000000000018c90	sub	sp, sp, #0xb0
0000000000018c94	stp	x26, x25, [sp, #0x60]
0000000000018c98	stp	x24, x23, [sp, #0x70]
0000000000018c9c	stp	x22, x21, [sp, #0x80]
0000000000018ca0	stp	x20, x19, [sp, #0x90]
0000000000018ca4	stp	x29, x30, [sp, #0xa0]
0000000000018ca8	add	x29, sp, #0xa0
0000000000018cac	mov	x19, x0
0000000000018cb0	movi.16b	v0, #0x0
0000000000018cb4	stp	q0, q0, [sp]
0000000000018cb8	mov	x8, sp
0000000000018cbc	add	x20, x8, #0x18
0000000000018cc0	adrp	x0, 84 ; 0x6c000
0000000000018cc4	add	x0, x0, #0xbb0
0000000000018cc8	ldr	x9, [x0]
0000000000018ccc	blr	x9
0000000000018cd0	ldr	x23, [x0]
0000000000018cd4	ldr	x9, [x23, #0x110]
0000000000018cd8	str	x8, [x23, #0x110]
0000000000018cdc	mov	x8, #0x400000000
0000000000018ce0	stp	x9, x8, [sp, #0x8]
0000000000018ce4	adr	x24, #0x6dd5f
0000000000018ce8	nop
0000000000018cec	ldarb	w8, [x24]
0000000000018cf0	tbz	w8, #0x0, 0x18cf8
0000000000018cf4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018cf8	mov	x0, x19
0000000000018cfc	mov	x1, x20
0000000000018d00	bl	"_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>"
0000000000018d04	mov	x20, x0
0000000000018d08	mov	w19, #0x0
0000000000018d0c	add	x25, sp, #0x20
0000000000018d10	mov	x26, #0x800000000
0000000000018d14	b	0x18d48
0000000000018d18	ldr	x8, [x0]
0000000000018d1c	and	x8, x8, #0xfffffffffffffffc
0000000000018d20	ldr	x8, [x8]
0000000000018d24	ldr	x8, [x8, #0x78]
0000000000018d28	blr	x8
0000000000018d2c	mov	x22, x0
0000000000018d30	mov	x0, x20
0000000000018d34	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
0000000000018d38	ldr	x8, [sp, #0x28]
0000000000018d3c	str	x8, [x23, #0x110]
0000000000018d40	eor	w8, w21, w22
0000000000018d44	add	w19, w19, w8
0000000000018d48	ldr	w8, [x20, #0x10]
0000000000018d4c	ldr	x9, [x20, #0x8]
0000000000018d50	ldr	w9, [x9, #0x44]
0000000000018d54	cmp	w8, w9
0000000000018d58	b.ge	0x18e2c
0000000000018d5c	ldarb	w8, [x24]
0000000000018d60	tbz	w8, #0x0, 0x18d68
0000000000018d64	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018d68	movi.16b	v0, #0x0
0000000000018d6c	stp	q0, q0, [sp, #0x20]
0000000000018d70	stp	q0, q0, [sp, #0x40]
0000000000018d74	ldr	x8, [x23, #0x110]
0000000000018d78	str	x25, [x23, #0x110]
0000000000018d7c	stp	x8, x26, [sp, #0x28]
0000000000018d80	ldr	w8, [x20, #0x10]
0000000000018d84	ldr	x9, [x20, #0x8]
0000000000018d88	ldr	w10, [x9, #0x44]
0000000000018d8c	cmp	w8, w10
0000000000018d90	b.ge	0x18e58
0000000000018d94	add	w10, w8, #0x1
0000000000018d98	stp	w10, w8, [x20, #0x10]
0000000000018d9c	ldr	x8, [x9, #0x8]
0000000000018da0	str	x8, [sp, #0x40]
0000000000018da4	ldrsw	x9, [x20, #0x14]
0000000000018da8	ldr	w10, [x8, #0x8]
0000000000018dac	cmp	w10, w9
0000000000018db0	b.ls	0x18e54
0000000000018db4	add	x8, x8, x9, lsl #3
0000000000018db8	ldr	x0, [x8, #0x10]
0000000000018dbc	str	x0, [sp, #0x48]
0000000000018dc0	cbz	x0, 0x18df0
0000000000018dc4	ldr	x8, [x0]
0000000000018dc8	and	x8, x8, #0xfffffffffffffffc
0000000000018dcc	ldr	x8, [x8]
0000000000018dd0	ldr	x8, [x8, #0x78]
0000000000018dd4	blr	x8
0000000000018dd8	mov	x21, x0
0000000000018ddc	ldr	x8, [x20, #0x8]
0000000000018de0	ldr	x8, [x8, #0x10]
0000000000018de4	str	x8, [sp, #0x50]
0000000000018de8	cbnz	x8, 0x18e04
0000000000018dec	b	0x18e94
0000000000018df0	mov	w21, #0x0
0000000000018df4	ldr	x8, [x20, #0x8]
0000000000018df8	ldr	x8, [x8, #0x10]
0000000000018dfc	str	x8, [sp, #0x50]
0000000000018e00	cbz	x8, 0x18e94
0000000000018e04	ldrsw	x9, [x20, #0x14]
0000000000018e08	ldr	w10, [x8, #0x8]
0000000000018e0c	cmp	w10, w9
0000000000018e10	b.ls	0x18e54
0000000000018e14	add	x8, x8, x9, lsl #3
0000000000018e18	ldr	x0, [x8, #0x10]
0000000000018e1c	str	x0, [sp, #0x58]
0000000000018e20	cbnz	x0, 0x18d18
0000000000018e24	mov	w22, #0x0
0000000000018e28	b	0x18d30
0000000000018e2c	ldr	x8, [sp, #0x8]
0000000000018e30	str	x8, [x23, #0x110]
0000000000018e34	mov	x0, x19
0000000000018e38	ldp	x29, x30, [sp, #0xa0]
0000000000018e3c	ldp	x20, x19, [sp, #0x90]
0000000000018e40	ldp	x22, x21, [sp, #0x80]
0000000000018e44	ldp	x24, x23, [sp, #0x70]
0000000000018e48	ldp	x26, x25, [sp, #0x60]
0000000000018e4c	add	sp, sp, #0xb0
0000000000018e50	ret
0000000000018e54	bl	_ThrowArrayIndexOutOfBoundsException
0000000000018e58	ldr	x8, [x23, #0x118]
0000000000018e5c	add	x0, x8, #0x70
0000000000018e60	mov	w1, #0x38
0000000000018e64	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000018e68	mov	x19, x0
0000000000018e6c	adr	x8, #0x3fc34
0000000000018e70	nop
0000000000018e74	str	x8, [x19, #0x10]!
0000000000018e78	stur	xzr, [x19, #-0x8]
0000000000018e7c	str	x19, [sp, #0x38]
0000000000018e80	mov	x0, x19
0000000000018e84	mov	x1, #0x0
0000000000018e88	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000018e8c	mov	x0, x19
0000000000018e90	bl	_ThrowException
0000000000018e94	bl	_ThrowNullPointerException
_kfun:kotlin.collections.HashMap#toString(){}kotlin.String:
0000000000018e98	sub	sp, sp, #0x170
0000000000018e9c	stp	x28, x27, [sp, #0x110]
0000000000018ea0	stp	x26, x25, [sp, #0x120]
0000000000018ea4	stp	x24, x23, [sp, #0x130]
0000000000018ea8	stp	x22, x21, [sp, #0x140]
0000000000018eac	stp	x20, x19, [sp, #0x150]
0000000000018eb0	stp	x29, x30, [sp, #0x160]
0000000000018eb4	add	x29, sp, #0x160
0000000000018eb8	str	x1, [sp]
0000000000018ebc	mov	x23, x0
0000000000018ec0	add	x19, sp, #0x80
0000000000018ec4	movi.16b	v0, #0x0
0000000000018ec8	stp	q0, q0, [sp, #0x40]
0000000000018ecc	stp	q0, q0, [sp, #0x60]
0000000000018ed0	add	x8, sp, #0x40
0000000000018ed4	add	x24, x8, #0x20
0000000000018ed8	add	x20, x8, #0x30
0000000000018edc	add	x21, x8, #0x28
0000000000018ee0	stp	xzr, xzr, [sp, #0x30]
0000000000018ee4	adr	x9, #0x434ac
0000000000018ee8	nop
0000000000018eec	orr	x9, x9, #0x3
0000000000018ef0	str	x9, [sp, #0x28]
0000000000018ef4	adrp	x0, 84 ; 0x6c000
0000000000018ef8	add	x0, x0, #0xbb0
0000000000018efc	ldr	x9, [x0]
0000000000018f00	blr	x9
0000000000018f04	ldr	x22, [x0]
0000000000018f08	ldr	x9, [x22, #0x110]
0000000000018f0c	str	x8, [x22, #0x110]
0000000000018f10	mov	x8, #0x800000000
0000000000018f14	stp	x9, x8, [sp, #0x48]
0000000000018f18	adr	x8, #0x6db2b
0000000000018f1c	nop
0000000000018f20	ldarb	w8, [x8]
0000000000018f24	tbz	w8, #0x0, 0x18f2c
0000000000018f28	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018f2c	ldr	w8, [x23, #0x4c]
0000000000018f30	add	w8, w8, w8, lsl #1
0000000000018f34	add	w1, w8, #0x2
0000000000018f38	add	x8, sp, #0x28
0000000000018f3c	str	x8, [sp, #0x58]
0000000000018f40	add	x0, sp, #0x28
0000000000018f44	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000018f48	adr	x1, #0x4ca28
0000000000018f4c	nop
0000000000018f50	add	x0, sp, #0x28
0000000000018f54	mov	x2, x24
0000000000018f58	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000018f5c	mov	x0, x23
0000000000018f60	mov	x1, x21
0000000000018f64	bl	"_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>"
0000000000018f68	mov	x21, x0
0000000000018f6c	mov	w27, #0x0
0000000000018f70	add	x9, x19, #0x30
0000000000018f74	add	x8, x19, #0x38
0000000000018f78	stp	x8, x9, [sp, #0x18]
0000000000018f7c	add	x24, x19, #0x40
0000000000018f80	add	x25, x19, #0x48
0000000000018f84	add	x9, x19, #0x60
0000000000018f88	add	x8, x19, #0x68
0000000000018f8c	stp	x8, x9, [sp, #0x8]
0000000000018f90	add	x28, x19, #0x70
0000000000018f94	mov	x26, #0xf00000000
0000000000018f98	b	0x18fc0
0000000000018f9c	mov	x1, #0x0
0000000000018fa0	add	x0, sp, #0x28
0000000000018fa4	mov	x2, x28
0000000000018fa8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000018fac	mov	x0, x21
0000000000018fb0	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
0000000000018fb4	ldr	x8, [sp, #0x88]
0000000000018fb8	str	x8, [x22, #0x110]
0000000000018fbc	add	w27, w27, #0x1
0000000000018fc0	ldr	w8, [x21, #0x10]
0000000000018fc4	ldr	x9, [x21, #0x8]
0000000000018fc8	ldr	w9, [x9, #0x44]
0000000000018fcc	cmp	w8, w9
0000000000018fd0	b.ge	0x1916c
0000000000018fd4	adr	x8, #0x6da6f
0000000000018fd8	nop
0000000000018fdc	ldarb	w8, [x8]
0000000000018fe0	tbz	w8, #0x0, 0x18fe8
0000000000018fe4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018fe8	cmp	w27, #0x1
0000000000018fec	b.lt	0x19004
0000000000018ff0	add	x0, sp, #0x28
0000000000018ff4	adr	x1, #0x4c21c
0000000000018ff8	nop
0000000000018ffc	mov	x2, x20
0000000000019000	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000019004	movi.16b	v0, #0x0
0000000000019008	stp	q0, q0, [sp, #0x80]
000000000001900c	str	xzr, [sp, #0xf0]
0000000000019010	stp	q0, q0, [x19, #0x50]
0000000000019014	stp	q0, q0, [x19, #0x30]
0000000000019018	str	q0, [sp, #0xa0]
000000000001901c	ldr	x8, [x22, #0x110]
0000000000019020	str	x19, [x22, #0x110]
0000000000019024	stp	x8, x26, [sp, #0x88]
0000000000019028	ldr	w8, [x21, #0x10]
000000000001902c	ldr	x9, [x21, #0x8]
0000000000019030	ldr	w10, [x9, #0x44]
0000000000019034	cmp	w8, w10
0000000000019038	b.ge	0x191c4
000000000001903c	add	w10, w8, #0x1
0000000000019040	stp	w10, w8, [x21, #0x10]
0000000000019044	ldr	x8, [x9, #0x8]
0000000000019048	str	x8, [sp, #0xa0]
000000000001904c	ldrsw	x9, [x21, #0x14]
0000000000019050	ldr	w10, [x8, #0x8]
0000000000019054	cmp	w10, w9
0000000000019058	b.ls	0x191c0
000000000001905c	add	x8, x8, x9, lsl #3
0000000000019060	ldr	x23, [x8, #0x10]
0000000000019064	str	x23, [sp, #0xa8]
0000000000019068	cbz	x23, 0x190a0
000000000001906c	ldr	x1, [x21, #0x8]
0000000000019070	ldr	x8, [x23]
0000000000019074	and	x8, x8, #0xfffffffffffffffc
0000000000019078	ldr	x8, [x8]
000000000001907c	ldr	x8, [x8, #0x70]
0000000000019080	mov	x0, x23
0000000000019084	blr	x8
0000000000019088	cbz	w0, 0x190a8
000000000001908c	add	x0, sp, #0x28
0000000000019090	adr	x1, #0x4c920
0000000000019094	nop
0000000000019098	ldr	x2, [sp, #0x20]
000000000001909c	b	0x190d0
00000000000190a0	mov	x1, #0x0
00000000000190a4	b	0x190c8
00000000000190a8	ldr	x8, [x23]
00000000000190ac	and	x8, x8, #0xfffffffffffffffc
00000000000190b0	ldr	x8, [x8]
00000000000190b4	ldr	x8, [x8, #0x80]
00000000000190b8	mov	x0, x23
00000000000190bc	ldr	x1, [sp, #0x18]
00000000000190c0	blr	x8
00000000000190c4	mov	x1, x0
00000000000190c8	add	x0, sp, #0x28
00000000000190cc	mov	x2, x24
00000000000190d0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000190d4	add	x0, sp, #0x28
00000000000190d8	mov	w1, #0x3d
00000000000190dc	mov	x2, x25
00000000000190e0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Char){}kotlin.text.StringBuilder"
00000000000190e4	ldr	x8, [x21, #0x8]
00000000000190e8	ldr	x8, [x8, #0x10]
00000000000190ec	str	x8, [sp, #0xd0]
00000000000190f0	cbz	x8, 0x19200
00000000000190f4	ldrsw	x9, [x21, #0x14]
00000000000190f8	ldr	w10, [x8, #0x8]
00000000000190fc	cmp	w10, w9
0000000000019100	b.ls	0x191c0
0000000000019104	add	x8, x8, x9, lsl #3
0000000000019108	ldr	x23, [x8, #0x10]
000000000001910c	str	x23, [sp, #0xd8]
0000000000019110	cbz	x23, 0x18f9c
0000000000019114	ldr	x1, [x21, #0x8]
0000000000019118	ldr	x8, [x23]
000000000001911c	and	x8, x8, #0xfffffffffffffffc
0000000000019120	ldr	x8, [x8]
0000000000019124	ldr	x8, [x8, #0x70]
0000000000019128	mov	x0, x23
000000000001912c	blr	x8
0000000000019130	cbz	w0, 0x19148
0000000000019134	add	x0, sp, #0x28
0000000000019138	adr	x1, #0x4c878
000000000001913c	nop
0000000000019140	ldr	x2, [sp, #0x10]
0000000000019144	b	0x18fa8
0000000000019148	ldr	x8, [x23]
000000000001914c	and	x8, x8, #0xfffffffffffffffc
0000000000019150	ldr	x8, [x8]
0000000000019154	ldr	x8, [x8, #0x80]
0000000000019158	mov	x0, x23
000000000001915c	ldr	x1, [sp, #0x8]
0000000000019160	blr	x8
0000000000019164	mov	x1, x0
0000000000019168	b	0x18fa0
000000000001916c	add	x8, sp, #0x40
0000000000019170	add	x2, x8, #0x38
0000000000019174	adr	x1, #0x4c81c
0000000000019178	nop
000000000001917c	add	x0, sp, #0x28
0000000000019180	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000019184	add	x0, sp, #0x28
0000000000019188	ldr	x19, [sp]
000000000001918c	mov	x1, x19
0000000000019190	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000019194	str	x0, [x19]
0000000000019198	ldr	x8, [sp, #0x48]
000000000001919c	str	x8, [x22, #0x110]
00000000000191a0	ldp	x29, x30, [sp, #0x160]
00000000000191a4	ldp	x20, x19, [sp, #0x150]
00000000000191a8	ldp	x22, x21, [sp, #0x140]
00000000000191ac	ldp	x24, x23, [sp, #0x130]
00000000000191b0	ldp	x26, x25, [sp, #0x120]
00000000000191b4	ldp	x28, x27, [sp, #0x110]
00000000000191b8	add	sp, sp, #0x170
00000000000191bc	ret
00000000000191c0	bl	_ThrowArrayIndexOutOfBoundsException
00000000000191c4	ldr	x8, [x22, #0x118]
00000000000191c8	add	x0, x8, #0x70
00000000000191cc	mov	w1, #0x38
00000000000191d0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000191d4	mov	x19, x0
00000000000191d8	adr	x8, #0x3f8c8
00000000000191dc	nop
00000000000191e0	str	x8, [x19, #0x10]!
00000000000191e4	stur	xzr, [x19, #-0x8]
00000000000191e8	str	x19, [sp, #0x98]
00000000000191ec	mov	x0, x19
00000000000191f0	mov	x1, #0x0
00000000000191f4	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
00000000000191f8	mov	x0, x19
00000000000191fc	bl	_ThrowException
0000000000019200	bl	_ThrowNullPointerException
_kfun:kotlin.collections.HashMap#checkIsMutable(){}:
0000000000019204	sub	sp, sp, #0x40
0000000000019208	stp	x20, x19, [sp, #0x20]
000000000001920c	stp	x29, x30, [sp, #0x30]
0000000000019210	add	x29, sp, #0x30
0000000000019214	mov	x19, x0
0000000000019218	movi.16b	v0, #0x0
000000000001921c	stp	q0, q0, [sp]
0000000000019220	adrp	x0, 83 ; 0x6c000
0000000000019224	add	x0, x0, #0xbb0
0000000000019228	ldr	x8, [x0]
000000000001922c	blr	x8
0000000000019230	ldr	x20, [x0]
0000000000019234	ldr	x8, [x20, #0x110]
0000000000019238	mov	x9, sp
000000000001923c	str	x9, [x20, #0x110]
0000000000019240	mov	x9, #0x400000000
0000000000019244	stp	x8, x9, [sp, #0x8]
0000000000019248	adr	x8, #0x6d7fb
000000000001924c	nop
0000000000019250	ldarb	w8, [x8]
0000000000019254	tbz	w8, #0x0, 0x1925c
0000000000019258	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001925c	ldrb	w8, [x19, #0x50]
0000000000019260	cmp	w8, #0x1
0000000000019264	b.eq	0x19280
0000000000019268	ldr	x8, [sp, #0x8]
000000000001926c	str	x8, [x20, #0x110]
0000000000019270	ldp	x29, x30, [sp, #0x30]
0000000000019274	ldp	x20, x19, [sp, #0x20]
0000000000019278	add	sp, sp, #0x40
000000000001927c	ret
0000000000019280	ldr	x8, [x20, #0x118]
0000000000019284	add	x0, x8, #0x70
0000000000019288	mov	w1, #0x38
000000000001928c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000019290	mov	x19, x0
0000000000019294	adr	x8, #0x3fb2c
0000000000019298	nop
000000000001929c	str	x8, [x19, #0x10]!
00000000000192a0	stur	xzr, [x19, #-0x8]
00000000000192a4	str	x19, [sp, #0x18]
00000000000192a8	mov	x0, x19
00000000000192ac	mov	x1, #0x0
00000000000192b0	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
00000000000192b4	mov	x0, x19
00000000000192b8	bl	_ThrowException
_kfun:kotlin.collections.HashMap.ensureExtraCapacity#internal:
00000000000192bc	sub	sp, sp, #0xb0
00000000000192c0	stp	x24, x23, [sp, #0x70]
00000000000192c4	stp	x22, x21, [sp, #0x80]
00000000000192c8	stp	x20, x19, [sp, #0x90]
00000000000192cc	stp	x29, x30, [sp, #0xa0]
00000000000192d0	add	x29, sp, #0xa0
00000000000192d4	mov	x20, x1
00000000000192d8	mov	x19, x0
00000000000192dc	adr	x8, #0x6d767
00000000000192e0	nop
00000000000192e4	ldarb	w8, [x8]
00000000000192e8	tbz	w8, #0x0, 0x192f0
00000000000192ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000192f0	ldr	w8, [x19, #0x44]
00000000000192f4	add	w8, w8, w20
00000000000192f8	movi.16b	v0, #0x0
00000000000192fc	stp	q0, q0, [sp]
0000000000019300	stp	q0, q0, [sp, #0x30]
0000000000019304	str	q0, [sp, #0x20]
0000000000019308	mov	x24, sp
000000000001930c	adrp	x20, 83 ; 0x6c000
0000000000019310	add	x20, x20, #0xbb0
0000000000019314	ldr	x23, [x20]
0000000000019318	mov	x0, x20
000000000001931c	blr	x23
0000000000019320	ldr	x9, [x0]
0000000000019324	ldr	x10, [x9, #0x110]
0000000000019328	str	x24, [x9, #0x110]
000000000001932c	mov	x9, #0xa00000000
0000000000019330	stp	x10, x9, [sp, #0x8]
0000000000019334	tbnz	w8, #0x1f, 0x194d8
0000000000019338	stp	q0, q0, [sp, #0x50]
000000000001933c	mov	x0, x20
0000000000019340	blr	x23
0000000000019344	ldr	x10, [x0]
0000000000019348	ldr	x9, [x10, #0x110]
000000000001934c	add	x11, sp, #0x50
0000000000019350	str	x11, [x10, #0x110]
0000000000019354	ldr	x12, [x19, #0x8]
0000000000019358	ldr	w12, [x12, #0x8]
000000000001935c	str	x9, [x10, #0x110]
0000000000019360	cmp	w12, w8
0000000000019364	b.ge	0x19444
0000000000019368	add	x2, x24, #0x28
000000000001936c	add	x21, x24, #0x48
0000000000019370	movi.16b	v0, #0x0
0000000000019374	stp	q0, q0, [sp, #0x50]
0000000000019378	str	x11, [x10, #0x110]
000000000001937c	ldr	x10, [x19, #0x8]
0000000000019380	ldr	w10, [x10, #0x8]
0000000000019384	mov	x0, x20
0000000000019388	blr	x23
000000000001938c	ldr	x11, [x0]
0000000000019390	str	x9, [x11, #0x110]
0000000000019394	add	w9, w10, w10, lsl #1
0000000000019398	cmp	w9, #0x0
000000000001939c	cinc	w9, w9, lt
00000000000193a0	asr	w9, w9, #1
00000000000193a4	cmp	w9, w8
00000000000193a8	csel	w22, w8, w9, lt
00000000000193ac	ldr	x0, [x19, #0x8]
00000000000193b0	str	x0, [sp, #0x20]
00000000000193b4	mov	x1, x22
00000000000193b8	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0>"
00000000000193bc	mov	x8, x0
00000000000193c0	str	x0, [x19, #0x8]
00000000000193c4	ldr	x0, [x19, #0x10]
00000000000193c8	stp	x8, x0, [sp, #0x28]
00000000000193cc	cbz	x0, 0x193e0
00000000000193d0	add	x2, x24, #0x38
00000000000193d4	mov	x1, x22
00000000000193d8	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0>"
00000000000193dc	str	x0, [sp, #0x38]
00000000000193e0	str	x0, [x19, #0x10]
00000000000193e4	ldr	x0, [x19, #0x18]
00000000000193e8	str	x0, [sp, #0x40]
00000000000193ec	mov	x1, x22
00000000000193f0	mov	x2, x21
00000000000193f4	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.IntArray(kotlin.Int;kotlin.Int){}kotlin.IntArray"
00000000000193f8	str	x0, [sp, #0x48]
00000000000193fc	str	x0, [x19, #0x18]
0000000000019400	mov	x0, x22
0000000000019404	bl	"_kfun:kotlin.collections.HashMap.Companion.computeHashSize#internal"
0000000000019408	mov	x1, x0
000000000001940c	movi.16b	v0, #0x0
0000000000019410	stp	q0, q0, [sp, #0x50]
0000000000019414	mov	x0, x20
0000000000019418	blr	x23
000000000001941c	ldr	x8, [x0]
0000000000019420	ldr	x9, [x8, #0x110]
0000000000019424	add	x10, sp, #0x50
0000000000019428	str	x10, [x8, #0x110]
000000000001942c	ldr	x10, [x19, #0x20]
0000000000019430	ldr	w10, [x10, #0x8]
0000000000019434	str	x9, [x8, #0x110]
0000000000019438	cmp	w1, w10
000000000001943c	b.gt	0x194a4
0000000000019440	b	0x194ac
0000000000019444	ldr	w12, [x19, #0x44]
0000000000019448	ldr	w13, [x19, #0x4c]
000000000001944c	movi.16b	v0, #0x0
0000000000019450	stp	q0, q0, [sp, #0x50]
0000000000019454	str	x11, [x10, #0x110]
0000000000019458	ldr	x10, [x19, #0x8]
000000000001945c	ldr	w11, [x10, #0x8]
0000000000019460	mov	x0, x20
0000000000019464	blr	x23
0000000000019468	ldr	x10, [x0]
000000000001946c	str	x9, [x10, #0x110]
0000000000019470	add	w8, w12, w8
0000000000019474	sub	w8, w8, w13
0000000000019478	cmp	w8, w11
000000000001947c	b.le	0x194ac
0000000000019480	stp	q0, q0, [sp, #0x50]
0000000000019484	add	x8, sp, #0x50
0000000000019488	str	x8, [x10, #0x110]
000000000001948c	ldr	x8, [x19, #0x20]
0000000000019490	ldr	w1, [x8, #0x8]
0000000000019494	mov	x0, x20
0000000000019498	blr	x23
000000000001949c	ldr	x8, [x0]
00000000000194a0	str	x9, [x8, #0x110]
00000000000194a4	mov	x0, x19
00000000000194a8	bl	"_kfun:kotlin.collections.HashMap.rehash#internal"
00000000000194ac	mov	x0, x20
00000000000194b0	blr	x23
00000000000194b4	ldr	x8, [x0]
00000000000194b8	ldr	x9, [sp, #0x8]
00000000000194bc	str	x9, [x8, #0x110]
00000000000194c0	ldp	x29, x30, [sp, #0xa0]
00000000000194c4	ldp	x20, x19, [sp, #0x90]
00000000000194c8	ldp	x22, x21, [sp, #0x80]
00000000000194cc	ldp	x24, x23, [sp, #0x70]
00000000000194d0	add	sp, sp, #0xb0
00000000000194d4	ret
00000000000194d8	mov	x0, x20
00000000000194dc	blr	x23
00000000000194e0	ldr	x8, [x0]
00000000000194e4	ldr	x8, [x8, #0x118]
00000000000194e8	add	x0, x8, #0x70
00000000000194ec	mov	w1, #0x38
00000000000194f0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000194f4	mov	x19, x0
00000000000194f8	adr	x8, #0x3fbe8
00000000000194fc	nop
0000000000019500	str	x8, [x19, #0x10]!
0000000000019504	stur	xzr, [x19, #-0x8]
0000000000019508	str	x19, [sp, #0x18]
000000000001950c	mov	x0, x19
0000000000019510	mov	x1, #0x0
0000000000019514	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000019518	mov	x0, x19
000000000001951c	bl	_ThrowException
_kfun:kotlin.collections.HashMap.allocateValuesArray#internal:
0000000000019520	sub	sp, sp, #0x80
0000000000019524	stp	x22, x21, [sp, #0x50]
0000000000019528	stp	x20, x19, [sp, #0x60]
000000000001952c	stp	x29, x30, [sp, #0x70]
0000000000019530	add	x29, sp, #0x70
0000000000019534	mov	x19, x1
0000000000019538	mov	x20, x0
000000000001953c	movi.16b	v0, #0x0
0000000000019540	stp	q0, q0, [sp]
0000000000019544	str	q0, [sp, #0x20]
0000000000019548	adrp	x0, 83 ; 0x6c000
000000000001954c	add	x0, x0, #0xbb0
0000000000019550	ldr	x8, [x0]
0000000000019554	blr	x8
0000000000019558	ldr	x21, [x0]
000000000001955c	ldr	x8, [x21, #0x110]
0000000000019560	mov	x9, sp
0000000000019564	str	x9, [x21, #0x110]
0000000000019568	mov	x9, #0x600000000
000000000001956c	stp	x8, x9, [sp, #0x8]
0000000000019570	adr	x8, #0x6d4d3
0000000000019574	nop
0000000000019578	ldarb	w8, [x8]
000000000001957c	tbz	w8, #0x0, 0x19584
0000000000019580	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019584	ldr	x0, [x20, #0x10]
0000000000019588	str	x0, [sp, #0x18]
000000000001958c	cbnz	x0, 0x195e8
0000000000019590	movi.16b	v0, #0x0
0000000000019594	stp	q0, q0, [sp, #0x30]
0000000000019598	ldr	x8, [x21, #0x110]
000000000001959c	add	x9, sp, #0x30
00000000000195a0	str	x9, [x21, #0x110]
00000000000195a4	ldr	x9, [x20, #0x8]
00000000000195a8	ldr	w22, [x9, #0x8]
00000000000195ac	str	x8, [x21, #0x110]
00000000000195b0	tbnz	w22, #0x1f, 0x19608
00000000000195b4	ldr	x8, [x21, #0x118]
00000000000195b8	lsl	x9, x22, #3
00000000000195bc	add	x9, x9, #0x1f
00000000000195c0	and	x1, x9, #0xffffffff8
00000000000195c4	add	x0, x8, #0x70
00000000000195c8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000195cc	adr	x8, #0x3f014
00000000000195d0	nop
00000000000195d4	stp	x8, xzr, [x0, #0x10]!
00000000000195d8	stur	xzr, [x0, #-0x8]
00000000000195dc	str	w22, [x0, #0x8]
00000000000195e0	str	x0, [sp, #0x28]
00000000000195e4	str	x0, [x20, #0x10]
00000000000195e8	str	x0, [x19]
00000000000195ec	ldr	x8, [sp, #0x8]
00000000000195f0	str	x8, [x21, #0x110]
00000000000195f4	ldp	x29, x30, [sp, #0x70]
00000000000195f8	ldp	x20, x19, [sp, #0x60]
00000000000195fc	ldp	x22, x21, [sp, #0x50]
0000000000019600	add	sp, sp, #0x80
0000000000019604	ret
0000000000019608	ldr	x8, [x21, #0x118]
000000000001960c	add	x0, x8, #0x70
0000000000019610	mov	w1, #0x38
0000000000019614	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000019618	mov	x19, x0
000000000001961c	adr	x8, #0x3f664
0000000000019620	nop
0000000000019624	str	x8, [x19, #0x10]!
0000000000019628	stur	xzr, [x19, #-0x8]
000000000001962c	str	x19, [sp, #0x20]
0000000000019630	adr	x1, #0x4bc60
0000000000019634	nop
0000000000019638	mov	x0, x19
000000000001963c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000019640	mov	x0, x19
0000000000019644	bl	_ThrowException
_kfun:kotlin.collections.HashMap.rehash#internal:
0000000000019648	sub	sp, sp, #0x110
000000000001964c	stp	x28, x27, [sp, #0xb0]
0000000000019650	stp	x26, x25, [sp, #0xc0]
0000000000019654	stp	x24, x23, [sp, #0xd0]
0000000000019658	stp	x22, x21, [sp, #0xe0]
000000000001965c	stp	x20, x19, [sp, #0xf0]
0000000000019660	stp	x29, x30, [sp, #0x100]
0000000000019664	add	x29, sp, #0x100
0000000000019668	mov	x20, x1
000000000001966c	mov	x19, x0
0000000000019670	movi.16b	v0, #0x0
0000000000019674	stp	q0, q0, [sp]
0000000000019678	str	q0, [sp, #0x20]
000000000001967c	adrp	x0, 83 ; 0x6c000
0000000000019680	add	x0, x0, #0xbb0
0000000000019684	ldr	x8, [x0]
0000000000019688	blr	x8
000000000001968c	ldr	x23, [x0]
0000000000019690	ldr	x8, [x23, #0x110]
0000000000019694	mov	x9, sp
0000000000019698	str	x9, [x23, #0x110]
000000000001969c	mov	x9, #0x600000000
00000000000196a0	stp	x8, x9, [sp, #0x8]
00000000000196a4	adr	x24, #0x6d39f
00000000000196a8	nop
00000000000196ac	ldarb	w8, [x24]
00000000000196b0	tbz	w8, #0x0, 0x196b8
00000000000196b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000196b8	ldr	w8, [x19, #0x44]
00000000000196bc	ldr	w9, [x19, #0x4c]
00000000000196c0	cmp	w8, w9
00000000000196c4	b.le	0x197ac
00000000000196c8	mov	x25, #0x0
00000000000196cc	mov	w21, #0x0
00000000000196d0	movi.16b	v0, #0x0
00000000000196d4	stp	q0, q0, [sp, #0x30]
00000000000196d8	stp	q0, q0, [sp, #0x60]
00000000000196dc	str	q0, [sp, #0x50]
00000000000196e0	ldr	x8, [x23, #0x110]
00000000000196e4	add	x9, sp, #0x30
00000000000196e8	str	x9, [x23, #0x110]
00000000000196ec	mov	x9, #0xa00000000
00000000000196f0	stp	x8, x9, [sp, #0x38]
00000000000196f4	ldr	x22, [x19, #0x10]
00000000000196f8	str	x22, [sp, #0x48]
00000000000196fc	add	x26, x22, #0x10
0000000000019700	b	0x1970c
0000000000019704	add	w21, w21, #0x1
0000000000019708	add	x25, x25, #0x1
000000000001970c	ldrsw	x2, [x19, #0x44]
0000000000019710	cmp	x25, x2
0000000000019714	b.ge	0x197b4
0000000000019718	ldarb	w8, [x24]
000000000001971c	tbz	w8, #0x0, 0x19724
0000000000019720	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019724	ldr	x8, [x19, #0x18]
0000000000019728	str	x8, [sp, #0x50]
000000000001972c	ldr	w9, [x8, #0x8]
0000000000019730	cmp	x25, x9
0000000000019734	b.hs	0x19a54
0000000000019738	add	x8, x8, x25, lsl #2
000000000001973c	ldr	w8, [x8, #0x10]
0000000000019740	tbnz	w8, #0x1f, 0x19708
0000000000019744	ldr	x8, [x19, #0x8]
0000000000019748	stp	x8, x8, [sp, #0x58]
000000000001974c	ldr	w9, [x8, #0x8]
0000000000019750	cmp	x25, x9
0000000000019754	b.hs	0x19a54
0000000000019758	add	x10, x8, x25, lsl #3
000000000001975c	ldr	x10, [x10, #0x10]
0000000000019760	str	x10, [sp, #0x68]
0000000000019764	cmp	w9, w21
0000000000019768	b.ls	0x19a54
000000000001976c	add	x9, x8, #0x10
0000000000019770	ldr	xzr, [x8]
0000000000019774	str	x10, [x9, w21, sxtw #3]
0000000000019778	cbz	x22, 0x19704
000000000001977c	ldr	w8, [x22, #0x8]
0000000000019780	cmp	x25, x8
0000000000019784	b.hs	0x19a54
0000000000019788	add	x9, x22, x25, lsl #3
000000000001978c	ldr	x9, [x9, #0x10]
0000000000019790	str	x9, [sp, #0x70]
0000000000019794	cmp	w8, w21
0000000000019798	b.ls	0x19a54
000000000001979c	sxtw	x8, w21
00000000000197a0	ldr	xzr, [x22]
00000000000197a4	str	x9, [x26, x8, lsl #3]
00000000000197a8	b	0x19704
00000000000197ac	ldr	x8, [x23, #0x110]
00000000000197b0	b	0x197e4
00000000000197b4	ldr	x0, [x19, #0x8]
00000000000197b8	str	x0, [sp, #0x78]
00000000000197bc	mov	x1, x21
00000000000197c0	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}"
00000000000197c4	cbz	x22, 0x197d8
00000000000197c8	ldr	w2, [x19, #0x44]
00000000000197cc	mov	x0, x22
00000000000197d0	mov	x1, x21
00000000000197d4	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}"
00000000000197d8	str	w21, [x19, #0x44]
00000000000197dc	ldr	x8, [sp, #0x38]
00000000000197e0	str	x8, [x23, #0x110]
00000000000197e4	movi.16b	v0, #0x0
00000000000197e8	stp	q0, q0, [sp, #0x80]
00000000000197ec	add	x9, sp, #0x80
00000000000197f0	str	x9, [x23, #0x110]
00000000000197f4	ldr	x10, [x19, #0x20]
00000000000197f8	ldr	w10, [x10, #0x8]
00000000000197fc	str	x8, [x23, #0x110]
0000000000019800	cmp	w10, w20
0000000000019804	b.ne	0x19854
0000000000019808	ldr	x21, [x19, #0x20]
000000000001980c	str	x21, [sp, #0x20]
0000000000019810	stp	q0, q0, [sp, #0x80]
0000000000019814	str	x9, [x23, #0x110]
0000000000019818	ldr	x9, [x19, #0x20]
000000000001981c	ldr	w20, [x9, #0x8]
0000000000019820	str	x8, [x23, #0x110]
0000000000019824	ldr	w2, [x21, #0x8]
0000000000019828	mov	w0, #0x0
000000000001982c	mov	x1, x20
0000000000019830	bl	_checkRangeIndexes
0000000000019834	ldr	xzr, [x21]
0000000000019838	subs	w9, w20, #0x1
000000000001983c	b.lt	0x198e4
0000000000019840	add	x8, x21, #0x10
0000000000019844	cmp	w9, #0x7
0000000000019848	b.hs	0x198a8
000000000001984c	mov	w9, #0x0
0000000000019850	b	0x198d4
0000000000019854	tbnz	w20, #0x1f, 0x19aa0
0000000000019858	ldr	x8, [x23, #0x118]
000000000001985c	mov	w9, w20
0000000000019860	lsl	x9, x9, #2
0000000000019864	add	x9, x9, #0x1f
0000000000019868	and	x1, x9, #0x7fffffff8
000000000001986c	add	x0, x8, #0x70
0000000000019870	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000019874	adr	x8, #0x3ee8c
0000000000019878	nop
000000000001987c	stp	x8, xzr, [x0, #0x10]!
0000000000019880	stur	xzr, [x0, #-0x8]
0000000000019884	str	w20, [x0, #0x8]
0000000000019888	str	x0, [sp, #0x18]
000000000001988c	str	x0, [x19, #0x20]
0000000000019890	clz	w8, w20
0000000000019894	cmp	w20, #0x0
0000000000019898	mov	w9, #0x21
000000000001989c	csinc	w8, w9, w8, eq
00000000000198a0	str	w8, [x19, #0x48]
00000000000198a4	b	0x198e4
00000000000198a8	add	x10, x9, #0x1
00000000000198ac	and	x9, x10, #0x1fffffff8
00000000000198b0	movi.16b	v0, #0x0
00000000000198b4	mov	x11, x8
00000000000198b8	mov	x12, x9
00000000000198bc	stp	q0, q0, [x11], #0x20
00000000000198c0	subs	x12, x12, #0x8
00000000000198c4	b.ne	0x198bc
00000000000198c8	cmp	x10, x9
00000000000198cc	b.eq	0x198e4
00000000000198d0	add	x8, x8, x9, lsl #2
00000000000198d4	sub	w9, w20, w9
00000000000198d8	str	wzr, [x8], #0x4
00000000000198dc	subs	w9, w9, #0x1
00000000000198e0	b.ne	0x198d8
00000000000198e4	mov	x21, #0x0
00000000000198e8	add	x20, sp, #0x30
00000000000198ec	mov	x22, #0x800000000
00000000000198f0	add	x25, sp, #0x80
00000000000198f4	ldrsw	x8, [x19, #0x44]
00000000000198f8	cmp	x21, x8
00000000000198fc	b.ge	0x19a2c
0000000000019900	ldarb	w8, [x24]
0000000000019904	tbz	w8, #0x0, 0x1990c
0000000000019908	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001990c	movi.16b	v0, #0x0
0000000000019910	stp	q0, q0, [sp, #0x30]
0000000000019914	stp	q0, q0, [sp, #0x50]
0000000000019918	ldr	x8, [x23, #0x110]
000000000001991c	str	x20, [x23, #0x110]
0000000000019920	stp	x8, x22, [sp, #0x38]
0000000000019924	ldr	x8, [x19, #0x8]
0000000000019928	str	x8, [sp, #0x48]
000000000001992c	ldr	w9, [x8, #0x8]
0000000000019930	cmp	x21, x9
0000000000019934	b.hs	0x19a54
0000000000019938	add	x8, x8, x21, lsl #3
000000000001993c	ldr	x0, [x8, #0x10]
0000000000019940	str	x0, [sp, #0x50]
0000000000019944	cbz	x0, 0x19974
0000000000019948	ldr	x8, [x0]
000000000001994c	and	x8, x8, #0xfffffffffffffffc
0000000000019950	ldr	x8, [x8]
0000000000019954	ldr	x8, [x8, #0x78]
0000000000019958	blr	x8
000000000001995c	mov	w8, #0x79b9
0000000000019960	movk	w8, #0x9e37, lsl #16
0000000000019964	mul	w8, w0, w8
0000000000019968	ldr	w9, [x19, #0x48]
000000000001996c	lsr	w28, w8, w9
0000000000019970	b	0x19978
0000000000019974	mov	w28, #0x0
0000000000019978	add	x27, x21, #0x1
000000000001997c	ldr	w8, [x19, #0x40]
0000000000019980	sub	w26, w8, #0x1
0000000000019984	b	0x19990
0000000000019988	sub	w28, w28, #0x1
000000000001998c	sub	w26, w26, #0x1
0000000000019990	ldarb	w8, [x24]
0000000000019994	tbz	w8, #0x0, 0x1999c
0000000000019998	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001999c	ldr	x8, [x19, #0x20]
00000000000199a0	str	x8, [sp, #0x58]
00000000000199a4	ldr	w9, [x8, #0x8]
00000000000199a8	cmp	w9, w28
00000000000199ac	b.ls	0x19a54
00000000000199b0	add	x9, x8, #0x10
00000000000199b4	ldr	w10, [x9, w28, sxtw #2]
00000000000199b8	cbz	w10, 0x199e4
00000000000199bc	tbnz	w26, #0x1f, 0x19a58
00000000000199c0	cbnz	w28, 0x19988
00000000000199c4	movi.16b	v0, #0x0
00000000000199c8	stp	q0, q0, [sp, #0x80]
00000000000199cc	ldr	x8, [x23, #0x110]
00000000000199d0	str	x25, [x23, #0x110]
00000000000199d4	ldr	x9, [x19, #0x20]
00000000000199d8	ldr	w28, [x9, #0x8]
00000000000199dc	str	x8, [x23, #0x110]
00000000000199e0	b	0x19988
00000000000199e4	sxtw	x10, w28
00000000000199e8	str	x8, [sp, #0x60]
00000000000199ec	ldr	xzr, [x8]
00000000000199f0	str	w27, [x9, x10, lsl #2]
00000000000199f4	ldr	x8, [x19, #0x18]
00000000000199f8	str	x8, [sp, #0x68]
00000000000199fc	ldr	w9, [x8, #0x8]
0000000000019a00	cmp	x21, x9
0000000000019a04	b.hs	0x19a54
0000000000019a08	ldr	xzr, [x8]
0000000000019a0c	add	x8, x8, x21, lsl #2
0000000000019a10	str	w28, [x8, #0x10]
0000000000019a14	ldr	x8, [sp, #0x38]
0000000000019a18	str	x8, [x23, #0x110]
0000000000019a1c	mov	x21, x27
0000000000019a20	ldrsw	x8, [x19, #0x44]
0000000000019a24	cmp	x21, x8
0000000000019a28	b.lt	0x19900
0000000000019a2c	ldr	x8, [sp, #0x8]
0000000000019a30	str	x8, [x23, #0x110]
0000000000019a34	ldp	x29, x30, [sp, #0x100]
0000000000019a38	ldp	x20, x19, [sp, #0xf0]
0000000000019a3c	ldp	x22, x21, [sp, #0xe0]
0000000000019a40	ldp	x24, x23, [sp, #0xd0]
0000000000019a44	ldp	x26, x25, [sp, #0xc0]
0000000000019a48	ldp	x28, x27, [sp, #0xb0]
0000000000019a4c	add	sp, sp, #0x110
0000000000019a50	ret
0000000000019a54	bl	_ThrowArrayIndexOutOfBoundsException
0000000000019a58	ldr	x8, [sp, #0x38]
0000000000019a5c	str	x8, [x23, #0x110]
0000000000019a60	ldr	x8, [x23, #0x118]
0000000000019a64	add	x0, x8, #0x70
0000000000019a68	mov	w1, #0x38
0000000000019a6c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000019a70	mov	x19, x0
0000000000019a74	adr	x8, #0x3f2ac
0000000000019a78	nop
0000000000019a7c	str	x8, [x19, #0x10]!
0000000000019a80	stur	xzr, [x19, #-0x8]
0000000000019a84	str	x19, [sp, #0x28]
0000000000019a88	adr	x1, #0x4c288
0000000000019a8c	nop
0000000000019a90	mov	x0, x19
0000000000019a94	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000019a98	mov	x0, x19
0000000000019a9c	bl	_ThrowException
0000000000019aa0	bl	_ThrowIllegalArgumentException
_kfun:kotlin.collections.HashMap.findKey#internal:
0000000000019aa4	sub	sp, sp, #0xa0
0000000000019aa8	stp	x26, x25, [sp, #0x50]
0000000000019aac	stp	x24, x23, [sp, #0x60]
0000000000019ab0	stp	x22, x21, [sp, #0x70]
0000000000019ab4	stp	x20, x19, [sp, #0x80]
0000000000019ab8	stp	x29, x30, [sp, #0x90]
0000000000019abc	add	x29, sp, #0x90
0000000000019ac0	mov	x19, x1
0000000000019ac4	mov	x20, x0
0000000000019ac8	movi.16b	v0, #0x0
0000000000019acc	stp	q0, q0, [sp]
0000000000019ad0	str	q0, [sp, #0x20]
0000000000019ad4	adrp	x0, 83 ; 0x6c000
0000000000019ad8	add	x0, x0, #0xbb0
0000000000019adc	ldr	x8, [x0]
0000000000019ae0	blr	x8
0000000000019ae4	ldr	x22, [x0]
0000000000019ae8	ldr	x8, [x22, #0x110]
0000000000019aec	mov	x9, sp
0000000000019af0	str	x9, [x22, #0x110]
0000000000019af4	mov	x9, #0x600000000
0000000000019af8	stp	x8, x9, [sp, #0x8]
0000000000019afc	adr	x23, #0x6cf47
0000000000019b00	nop
0000000000019b04	ldarb	w8, [x23]
0000000000019b08	tbz	w8, #0x0, 0x19b10
0000000000019b0c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019b10	cbz	x19, 0x19b44
0000000000019b14	ldr	x8, [x19]
0000000000019b18	and	x8, x8, #0xfffffffffffffffc
0000000000019b1c	ldr	x8, [x8]
0000000000019b20	ldr	x8, [x8, #0x78]
0000000000019b24	mov	x0, x19
0000000000019b28	blr	x8
0000000000019b2c	mov	w8, #0x79b9
0000000000019b30	movk	w8, #0x9e37, lsl #16
0000000000019b34	mul	w8, w0, w8
0000000000019b38	ldr	w9, [x20, #0x48]
0000000000019b3c	lsr	w24, w8, w9
0000000000019b40	b	0x19b48
0000000000019b44	mov	w24, #0x0
0000000000019b48	ldr	w8, [x20, #0x40]
0000000000019b4c	sub	w25, w8, #0x1
0000000000019b50	add	x26, sp, #0x30
0000000000019b54	b	0x19b60
0000000000019b58	sub	w24, w24, #0x1
0000000000019b5c	sub	w25, w25, #0x1
0000000000019b60	ldarb	w8, [x23]
0000000000019b64	tbz	w8, #0x0, 0x19b6c
0000000000019b68	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019b6c	ldr	x8, [x20, #0x20]
0000000000019b70	str	x8, [sp, #0x18]
0000000000019b74	ldr	w9, [x8, #0x8]
0000000000019b78	cmp	w9, w24
0000000000019b7c	b.ls	0x19c30
0000000000019b80	add	x8, x8, w24, sxtw #2
0000000000019b84	ldr	w8, [x8, #0x10]
0000000000019b88	cbz	w8, 0x19c04
0000000000019b8c	subs	w21, w8, #0x1
0000000000019b90	b.lt	0x19bdc
0000000000019b94	ldr	x8, [x20, #0x8]
0000000000019b98	str	x8, [sp, #0x20]
0000000000019b9c	ldr	w9, [x8, #0x8]
0000000000019ba0	cmp	w9, w21
0000000000019ba4	b.ls	0x19c30
0000000000019ba8	add	x8, x8, w21, sxtw #3
0000000000019bac	ldr	x0, [x8, #0x10]
0000000000019bb0	str	x0, [sp, #0x28]
0000000000019bb4	cbz	x0, 0x19bd8
0000000000019bb8	ldr	x8, [x0]
0000000000019bbc	and	x8, x8, #0xfffffffffffffffc
0000000000019bc0	ldr	x8, [x8]
0000000000019bc4	ldr	x8, [x8, #0x70]
0000000000019bc8	mov	x1, x19
0000000000019bcc	blr	x8
0000000000019bd0	tbz	w0, #0x0, 0x19bdc
0000000000019bd4	b	0x19c08
0000000000019bd8	cbz	x19, 0x19c08
0000000000019bdc	tbnz	w25, #0x1f, 0x19c04
0000000000019be0	cbnz	w24, 0x19b58
0000000000019be4	movi.16b	v0, #0x0
0000000000019be8	stp	q0, q0, [sp, #0x30]
0000000000019bec	ldr	x8, [x22, #0x110]
0000000000019bf0	str	x26, [x22, #0x110]
0000000000019bf4	ldr	x9, [x20, #0x20]
0000000000019bf8	ldr	w24, [x9, #0x8]
0000000000019bfc	str	x8, [x22, #0x110]
0000000000019c00	b	0x19b58
0000000000019c04	mov	w21, #-0x1
0000000000019c08	ldr	x8, [sp, #0x8]
0000000000019c0c	str	x8, [x22, #0x110]
0000000000019c10	mov	x0, x21
0000000000019c14	ldp	x29, x30, [sp, #0x90]
0000000000019c18	ldp	x20, x19, [sp, #0x80]
0000000000019c1c	ldp	x22, x21, [sp, #0x70]
0000000000019c20	ldp	x24, x23, [sp, #0x60]
0000000000019c24	ldp	x26, x25, [sp, #0x50]
0000000000019c28	add	sp, sp, #0xa0
0000000000019c2c	ret
0000000000019c30	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.findValue#internal:
0000000000019c34	sub	sp, sp, #0x70
0000000000019c38	stp	x24, x23, [sp, #0x30]
0000000000019c3c	stp	x22, x21, [sp, #0x40]
0000000000019c40	stp	x20, x19, [sp, #0x50]
0000000000019c44	stp	x29, x30, [sp, #0x60]
0000000000019c48	add	x29, sp, #0x60
0000000000019c4c	mov	x19, x1
0000000000019c50	mov	x20, x0
0000000000019c54	movi.16b	v0, #0x0
0000000000019c58	stp	q0, q0, [sp]
0000000000019c5c	str	q0, [sp, #0x20]
0000000000019c60	adrp	x0, 83 ; 0x6c000
0000000000019c64	add	x0, x0, #0xbb0
0000000000019c68	ldr	x8, [x0]
0000000000019c6c	blr	x8
0000000000019c70	ldr	x22, [x0]
0000000000019c74	ldr	x8, [x22, #0x110]
0000000000019c78	mov	x9, sp
0000000000019c7c	str	x9, [x22, #0x110]
0000000000019c80	mov	x9, #0x600000000
0000000000019c84	stp	x8, x9, [sp, #0x8]
0000000000019c88	adr	x23, #0x6cdbb
0000000000019c8c	nop
0000000000019c90	ldarb	w8, [x23]
0000000000019c94	tbz	w8, #0x0, 0x19c9c
0000000000019c98	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019c9c	ldr	w21, [x20, #0x44]
0000000000019ca0	sub	w8, w21, #0x1
0000000000019ca4	sxtw	x24, w8
0000000000019ca8	b	0x19cb4
0000000000019cac	cbz	x19, 0x19d58
0000000000019cb0	sub	x24, x24, #0x1
0000000000019cb4	tbnz	w24, #0x1f, 0x19d30
0000000000019cb8	ldarb	w8, [x23]
0000000000019cbc	tbz	w8, #0x0, 0x19cc4
0000000000019cc0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019cc4	ldr	x8, [x20, #0x18]
0000000000019cc8	str	x8, [sp, #0x18]
0000000000019ccc	ldr	w9, [x8, #0x8]
0000000000019cd0	cmp	w9, w24
0000000000019cd4	b.ls	0x19d60
0000000000019cd8	sub	w21, w21, #0x1
0000000000019cdc	add	x8, x8, x24, lsl #2
0000000000019ce0	ldr	w8, [x8, #0x10]
0000000000019ce4	tbnz	w8, #0x1f, 0x19cb0
0000000000019ce8	ldr	x8, [x20, #0x10]
0000000000019cec	str	x8, [sp, #0x20]
0000000000019cf0	cbz	x8, 0x19d64
0000000000019cf4	ldr	w9, [x8, #0x8]
0000000000019cf8	cmp	w9, w24
0000000000019cfc	b.ls	0x19d60
0000000000019d00	add	x8, x8, x24, lsl #3
0000000000019d04	ldr	x0, [x8, #0x10]
0000000000019d08	str	x0, [sp, #0x28]
0000000000019d0c	cbz	x0, 0x19cac
0000000000019d10	ldr	x8, [x0]
0000000000019d14	and	x8, x8, #0xfffffffffffffffc
0000000000019d18	ldr	x8, [x8]
0000000000019d1c	ldr	x8, [x8, #0x70]
0000000000019d20	mov	x1, x19
0000000000019d24	blr	x8
0000000000019d28	tbz	w0, #0x0, 0x19cb0
0000000000019d2c	b	0x19d34
0000000000019d30	mov	w21, #-0x1
0000000000019d34	ldr	x8, [sp, #0x8]
0000000000019d38	str	x8, [x22, #0x110]
0000000000019d3c	mov	x0, x21
0000000000019d40	ldp	x29, x30, [sp, #0x60]
0000000000019d44	ldp	x20, x19, [sp, #0x50]
0000000000019d48	ldp	x22, x21, [sp, #0x40]
0000000000019d4c	ldp	x24, x23, [sp, #0x30]
0000000000019d50	add	sp, sp, #0x70
0000000000019d54	ret
0000000000019d58	mov	x21, x24
0000000000019d5c	b	0x19d34
0000000000019d60	bl	_ThrowArrayIndexOutOfBoundsException
0000000000019d64	bl	_ThrowNullPointerException
_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int:
0000000000019d68	sub	sp, sp, #0xd0
0000000000019d6c	stp	x28, x27, [sp, #0x70]
0000000000019d70	stp	x26, x25, [sp, #0x80]
0000000000019d74	stp	x24, x23, [sp, #0x90]
0000000000019d78	stp	x22, x21, [sp, #0xa0]
0000000000019d7c	stp	x20, x19, [sp, #0xb0]
0000000000019d80	stp	x29, x30, [sp, #0xc0]
0000000000019d84	add	x29, sp, #0xc0
0000000000019d88	mov	x20, x1
0000000000019d8c	mov	x19, x0
0000000000019d90	movi.16b	v0, #0x0
0000000000019d94	stp	q0, q0, [sp]
0000000000019d98	str	xzr, [sp, #0x40]
0000000000019d9c	stp	q0, q0, [sp, #0x20]
0000000000019da0	adrp	x0, 83 ; 0x6c000
0000000000019da4	add	x0, x0, #0xbb0
0000000000019da8	ldr	x8, [x0]
0000000000019dac	blr	x8
0000000000019db0	ldr	x21, [x0]
0000000000019db4	ldr	x8, [x21, #0x110]
0000000000019db8	mov	x9, sp
0000000000019dbc	str	x9, [x21, #0x110]
0000000000019dc0	mov	x9, #0x900000000
0000000000019dc4	stp	x8, x9, [sp, #0x8]
0000000000019dc8	adr	x22, #0x6cc7b
0000000000019dcc	nop
0000000000019dd0	ldarb	w8, [x22]
0000000000019dd4	tbz	w8, #0x0, 0x19ddc
0000000000019dd8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019ddc	mov	x0, x19
0000000000019de0	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000019de4	add	x23, sp, #0x50
0000000000019de8	mov	w24, #0x79b9
0000000000019dec	movk	w24, #0x9e37, lsl #16
0000000000019df0	ldarb	w8, [x22]
0000000000019df4	tbz	w8, #0x0, 0x19dfc
0000000000019df8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019dfc	cbz	x20, 0x19e28
0000000000019e00	ldr	x8, [x20]
0000000000019e04	and	x8, x8, #0xfffffffffffffffc
0000000000019e08	ldr	x8, [x8]
0000000000019e0c	ldr	x8, [x8, #0x78]
0000000000019e10	mov	x0, x20
0000000000019e14	blr	x8
0000000000019e18	mul	w8, w0, w24
0000000000019e1c	ldr	w9, [x19, #0x48]
0000000000019e20	lsr	w26, w8, w9
0000000000019e24	b	0x19e2c
0000000000019e28	mov	w26, #0x0
0000000000019e2c	mov	w25, #0x0
0000000000019e30	ldr	w8, [x19, #0x40]
0000000000019e34	movi.16b	v0, #0x0
0000000000019e38	stp	q0, q0, [sp, #0x50]
0000000000019e3c	ldr	x9, [x21, #0x110]
0000000000019e40	str	x23, [x21, #0x110]
0000000000019e44	ldr	x10, [x19, #0x20]
0000000000019e48	ldr	w10, [x10, #0x8]
0000000000019e4c	str	x9, [x21, #0x110]
0000000000019e50	lsl	w8, w8, #1
0000000000019e54	cmp	w10, #0x0
0000000000019e58	cinc	w9, w10, lt
0000000000019e5c	asr	w9, w9, #1
0000000000019e60	cmp	w8, w9
0000000000019e64	csel	w8, w9, w8, gt
0000000000019e68	bic	w27, w8, w8, asr #31
0000000000019e6c	b	0x19e78
0000000000019e70	sub	w26, w26, #0x1
0000000000019e74	add	w25, w25, #0x1
0000000000019e78	ldarb	w8, [x22]
0000000000019e7c	tbz	w8, #0x0, 0x19e84
0000000000019e80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019e84	ldr	x8, [x19, #0x20]
0000000000019e88	str	x8, [sp, #0x18]
0000000000019e8c	ldr	w9, [x8, #0x8]
0000000000019e90	cmp	w9, w26
0000000000019e94	b.ls	0x1a044
0000000000019e98	add	x8, x8, w26, sxtw #2
0000000000019e9c	ldr	w28, [x8, #0x10]
0000000000019ea0	cmp	w28, #0x0
0000000000019ea4	b.le	0x19f20
0000000000019ea8	ldr	x8, [x19, #0x8]
0000000000019eac	str	x8, [sp, #0x38]
0000000000019eb0	sub	w9, w28, #0x1
0000000000019eb4	ldr	w10, [x8, #0x8]
0000000000019eb8	cmp	w10, w9
0000000000019ebc	b.ls	0x1a044
0000000000019ec0	add	x8, x8, w9, sxtw #3
0000000000019ec4	ldr	x0, [x8, #0x10]
0000000000019ec8	str	x0, [sp, #0x40]
0000000000019ecc	cbz	x0, 0x19ef0
0000000000019ed0	ldr	x8, [x0]
0000000000019ed4	and	x8, x8, #0xfffffffffffffffc
0000000000019ed8	ldr	x8, [x8]
0000000000019edc	ldr	x8, [x8, #0x70]
0000000000019ee0	mov	x1, x20
0000000000019ee4	blr	x8
0000000000019ee8	cbz	w0, 0x19ef4
0000000000019eec	b	0x19f84
0000000000019ef0	cbz	x20, 0x19f84
0000000000019ef4	cmp	w27, w25
0000000000019ef8	b.eq	0x19f58
0000000000019efc	cbnz	w26, 0x19e70
0000000000019f00	movi.16b	v0, #0x0
0000000000019f04	stp	q0, q0, [sp, #0x50]
0000000000019f08	ldr	x8, [x21, #0x110]
0000000000019f0c	str	x23, [x21, #0x110]
0000000000019f10	ldr	x9, [x19, #0x20]
0000000000019f14	ldr	w26, [x9, #0x8]
0000000000019f18	str	x8, [x21, #0x110]
0000000000019f1c	b	0x19e70
0000000000019f20	ldr	w8, [x19, #0x44]
0000000000019f24	movi.16b	v0, #0x0
0000000000019f28	stp	q0, q0, [sp, #0x50]
0000000000019f2c	ldr	x9, [x21, #0x110]
0000000000019f30	str	x23, [x21, #0x110]
0000000000019f34	ldr	x10, [x19, #0x8]
0000000000019f38	ldr	w10, [x10, #0x8]
0000000000019f3c	str	x9, [x21, #0x110]
0000000000019f40	cmp	w8, w10
0000000000019f44	b.lt	0x19fb0
0000000000019f48	mov	x0, x19
0000000000019f4c	mov	w1, #0x1
0000000000019f50	bl	"_kfun:kotlin.collections.HashMap.ensureExtraCapacity#internal"
0000000000019f54	b	0x19df0
0000000000019f58	movi.16b	v0, #0x0
0000000000019f5c	stp	q0, q0, [sp, #0x50]
0000000000019f60	ldr	x8, [x21, #0x110]
0000000000019f64	str	x23, [x21, #0x110]
0000000000019f68	ldr	x9, [x19, #0x20]
0000000000019f6c	ldr	w9, [x9, #0x8]
0000000000019f70	str	x8, [x21, #0x110]
0000000000019f74	lsl	w1, w9, #1
0000000000019f78	mov	x0, x19
0000000000019f7c	bl	"_kfun:kotlin.collections.HashMap.rehash#internal"
0000000000019f80	b	0x19df0
0000000000019f84	neg	w0, w28
0000000000019f88	ldr	x8, [sp, #0x8]
0000000000019f8c	str	x8, [x21, #0x110]
0000000000019f90	ldp	x29, x30, [sp, #0xc0]
0000000000019f94	ldp	x20, x19, [sp, #0xb0]
0000000000019f98	ldp	x22, x21, [sp, #0xa0]
0000000000019f9c	ldp	x24, x23, [sp, #0x90]
0000000000019fa0	ldp	x26, x25, [sp, #0x80]
0000000000019fa4	ldp	x28, x27, [sp, #0x70]
0000000000019fa8	add	sp, sp, #0xd0
0000000000019fac	ret
0000000000019fb0	ldr	w0, [x19, #0x44]
0000000000019fb4	add	w8, w0, #0x1
0000000000019fb8	str	w8, [x19, #0x44]
0000000000019fbc	ldr	x10, [x19, #0x8]
0000000000019fc0	str	x10, [sp, #0x20]
0000000000019fc4	ldr	w9, [x10, #0x8]
0000000000019fc8	cmp	w9, w0
0000000000019fcc	b.ls	0x1a044
0000000000019fd0	sxtw	x9, w0
0000000000019fd4	ldr	xzr, [x10]
0000000000019fd8	add	x10, x10, x9, lsl #3
0000000000019fdc	str	x20, [x10, #0x10]
0000000000019fe0	ldr	x10, [x19, #0x18]
0000000000019fe4	str	x10, [sp, #0x28]
0000000000019fe8	ldr	w11, [x10, #0x8]
0000000000019fec	cmp	w11, w0
0000000000019ff0	b.ls	0x1a044
0000000000019ff4	ldr	xzr, [x10]
0000000000019ff8	add	x9, x10, x9, lsl #2
0000000000019ffc	str	w26, [x9, #0x10]
000000000001a000	ldr	x9, [x19, #0x20]
000000000001a004	str	x9, [sp, #0x30]
000000000001a008	ldr	w10, [x9, #0x8]
000000000001a00c	cmp	w10, w26
000000000001a010	b.ls	0x1a044
000000000001a014	sxtw	x10, w26
000000000001a018	ldr	xzr, [x9]
000000000001a01c	add	x9, x9, x10, lsl #2
000000000001a020	str	w8, [x9, #0x10]
000000000001a024	ldr	w8, [x19, #0x4c]
000000000001a028	add	w8, w8, #0x1
000000000001a02c	str	w8, [x19, #0x4c]
000000000001a030	ldr	w8, [x19, #0x40]
000000000001a034	cmp	w25, w8
000000000001a038	b.le	0x19f88
000000000001a03c	str	w25, [x19, #0x40]
000000000001a040	b	0x19f88
000000000001a044	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int:
000000000001a048	stp	x20, x19, [sp, #-0x20]!
000000000001a04c	stp	x29, x30, [sp, #0x10]
000000000001a050	add	x29, sp, #0x10
000000000001a054	mov	x20, x1
000000000001a058	mov	x19, x0
000000000001a05c	adr	x8, #0x6c9e7
000000000001a060	nop
000000000001a064	ldarb	w8, [x8]
000000000001a068	tbz	w8, #0x0, 0x1a070
000000000001a06c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a070	mov	x0, x19
000000000001a074	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001a078	mov	x0, x19
000000000001a07c	mov	x1, x20
000000000001a080	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001a084	tbnz	w0, #0x1f, 0x1a0a8
000000000001a088	mov	x20, x0
000000000001a08c	mov	x0, x19
000000000001a090	mov	x1, x20
000000000001a094	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
000000000001a098	mov	x0, x20
000000000001a09c	ldp	x29, x30, [sp, #0x10]
000000000001a0a0	ldp	x20, x19, [sp], #0x20
000000000001a0a4	ret
000000000001a0a8	mov	w20, #-0x1
000000000001a0ac	mov	x0, x20
000000000001a0b0	ldp	x29, x30, [sp, #0x10]
000000000001a0b4	ldp	x20, x19, [sp], #0x20
000000000001a0b8	ret
_kfun:kotlin.collections.HashMap.removeKeyAt#internal:
000000000001a0bc	sub	sp, sp, #0x130
000000000001a0c0	stp	x28, x27, [sp, #0xd0]
000000000001a0c4	stp	x26, x25, [sp, #0xe0]
000000000001a0c8	stp	x24, x23, [sp, #0xf0]
000000000001a0cc	stp	x22, x21, [sp, #0x100]
000000000001a0d0	stp	x20, x19, [sp, #0x110]
000000000001a0d4	stp	x29, x30, [sp, #0x120]
000000000001a0d8	add	x29, sp, #0x120
000000000001a0dc	mov	x20, x1
000000000001a0e0	mov	x19, x0
000000000001a0e4	movi.16b	v0, #0x0
000000000001a0e8	stp	q0, q0, [sp, #0x10]
000000000001a0ec	str	q0, [sp, #0x30]
000000000001a0f0	adrp	x0, 82 ; 0x6c000
000000000001a0f4	add	x0, x0, #0xbb0
000000000001a0f8	ldr	x8, [x0]
000000000001a0fc	blr	x8
000000000001a100	ldr	x21, [x0]
000000000001a104	ldr	x8, [x21, #0x110]
000000000001a108	add	x9, sp, #0x10
000000000001a10c	str	x9, [x21, #0x110]
000000000001a110	mov	x9, #0x600000000
000000000001a114	stp	x8, x9, [sp, #0x18]
000000000001a118	adr	x24, #0x6c92b
000000000001a11c	nop
000000000001a120	ldarb	w8, [x24]
000000000001a124	tbz	w8, #0x0, 0x1a12c
000000000001a128	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a12c	ldr	x0, [x19, #0x8]
000000000001a130	str	x0, [sp, #0x28]
000000000001a134	mov	x1, x20
000000000001a138	bl	"_kfun:kotlin.collections#resetAt__at__kotlin.Array<0:0>(kotlin.Int){0ยง<kotlin.Any?>}"
000000000001a13c	ldr	x8, [x19, #0x18]
000000000001a140	str	x8, [sp, #0x30]
000000000001a144	ldr	w9, [x8, #0x8]
000000000001a148	cmp	w9, w20
000000000001a14c	b.ls	0x1a404
000000000001a150	mov	w25, #0x0
000000000001a154	add	x8, x8, w20, sxtw #2
000000000001a158	sxtw	x9, w20
000000000001a15c	stp	x9, x20, [sp]
000000000001a160	ldr	w28, [x8, #0x10]
000000000001a164	movi.16b	v0, #0x0
000000000001a168	stp	q0, q0, [sp, #0x40]
000000000001a16c	stp	q0, q0, [sp, #0x80]
000000000001a170	stp	q0, q0, [sp, #0x60]
000000000001a174	ldr	x8, [x21, #0x110]
000000000001a178	add	x9, sp, #0x40
000000000001a17c	str	x9, [x21, #0x110]
000000000001a180	mov	x9, #0xc00000000
000000000001a184	stp	x8, x9, [sp, #0x48]
000000000001a188	ldr	w8, [x19, #0x40]
000000000001a18c	lsl	w8, w8, #1
000000000001a190	stp	q0, q0, [x29, #-0x80]
000000000001a194	ldr	x9, [x21, #0x110]
000000000001a198	sub	x26, x29, #0x80
000000000001a19c	str	x26, [x21, #0x110]
000000000001a1a0	ldr	x10, [x19, #0x20]
000000000001a1a4	ldr	w10, [x10, #0x8]
000000000001a1a8	cmp	w10, #0x0
000000000001a1ac	cinc	w10, w10, lt
000000000001a1b0	asr	w10, w10, #1
000000000001a1b4	cmp	w8, w10
000000000001a1b8	str	x9, [x21, #0x110]
000000000001a1bc	csel	w27, w10, w8, gt
000000000001a1c0	mov	x23, x28
000000000001a1c4	b	0x1a1f0
000000000001a1c8	str	x9, [sp, #0x70]
000000000001a1cc	cmp	w10, w28
000000000001a1d0	b.ls	0x1a404
000000000001a1d4	mov	w25, #0x0
000000000001a1d8	ldr	xzr, [x9]
000000000001a1dc	mov	w9, #-0x1
000000000001a1e0	str	w9, [x8, w28, sxtw #2]
000000000001a1e4	mov	x28, x23
000000000001a1e8	subs	w27, w27, #0x1
000000000001a1ec	b.mi	0x1a37c
000000000001a1f0	ldarb	w8, [x24]
000000000001a1f4	tbnz	w8, #0x0, 0x1a214
000000000001a1f8	cbz	w23, 0x1a21c
000000000001a1fc	add	w25, w25, #0x1
000000000001a200	ldr	w8, [x19, #0x40]
000000000001a204	ldr	x9, [x19, #0x20]
000000000001a208	cmp	w25, w8
000000000001a20c	b.le	0x1a24c
000000000001a210	b	0x1a344
000000000001a214	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a218	cbnz	w23, 0x1a1fc
000000000001a21c	movi.16b	v0, #0x0
000000000001a220	stp	q0, q0, [x29, #-0x80]
000000000001a224	ldr	x8, [x21, #0x110]
000000000001a228	str	x26, [x21, #0x110]
000000000001a22c	ldr	x9, [x19, #0x20]
000000000001a230	ldr	w23, [x9, #0x8]
000000000001a234	str	x8, [x21, #0x110]
000000000001a238	add	w25, w25, #0x1
000000000001a23c	ldr	w8, [x19, #0x40]
000000000001a240	ldr	x9, [x19, #0x20]
000000000001a244	cmp	w25, w8
000000000001a248	b.gt	0x1a344
000000000001a24c	sub	w23, w23, #0x1
000000000001a250	str	x9, [sp, #0x60]
000000000001a254	ldr	w10, [x9, #0x8]
000000000001a258	cmp	w10, w23
000000000001a25c	b.ls	0x1a404
000000000001a260	add	x8, x9, #0x10
000000000001a264	ldr	w22, [x8, w23, sxtw #2]
000000000001a268	cbz	w22, 0x1a364
000000000001a26c	tbnz	w22, #0x1f, 0x1a1c8
000000000001a270	ldr	x8, [x19, #0x8]
000000000001a274	str	x8, [sp, #0x78]
000000000001a278	sub	w20, w22, #0x1
000000000001a27c	ldr	w9, [x8, #0x8]
000000000001a280	cmp	w9, w20
000000000001a284	b.ls	0x1a404
000000000001a288	add	x8, x8, w20, sxtw #3
000000000001a28c	ldr	x0, [x8, #0x10]
000000000001a290	str	x0, [sp, #0x80]
000000000001a294	cbz	x0, 0x1a2c4
000000000001a298	ldr	x8, [x0]
000000000001a29c	and	x8, x8, #0xfffffffffffffffc
000000000001a2a0	ldr	x8, [x8]
000000000001a2a4	ldr	x8, [x8, #0x78]
000000000001a2a8	blr	x8
000000000001a2ac	mov	w8, #0x79b9
000000000001a2b0	movk	w8, #0x9e37, lsl #16
000000000001a2b4	mul	w8, w0, w8
000000000001a2b8	ldr	w9, [x19, #0x48]
000000000001a2bc	lsr	w8, w8, w9
000000000001a2c0	b	0x1a2c8
000000000001a2c4	mov	w8, #0x0
000000000001a2c8	movi.16b	v0, #0x0
000000000001a2cc	stp	q0, q0, [x29, #-0x80]
000000000001a2d0	ldr	x9, [x21, #0x110]
000000000001a2d4	str	x26, [x21, #0x110]
000000000001a2d8	ldr	x10, [x19, #0x20]
000000000001a2dc	ldr	w10, [x10, #0x8]
000000000001a2e0	str	x9, [x21, #0x110]
000000000001a2e4	sub	w8, w8, w23
000000000001a2e8	sub	w9, w10, #0x1
000000000001a2ec	and	w8, w8, w9
000000000001a2f0	cmp	w8, w25
000000000001a2f4	b.lt	0x1a1e8
000000000001a2f8	ldr	x8, [x19, #0x20]
000000000001a2fc	str	x8, [sp, #0x88]
000000000001a300	ldr	w9, [x8, #0x8]
000000000001a304	cmp	w9, w28
000000000001a308	b.ls	0x1a404
000000000001a30c	ldr	xzr, [x8]
000000000001a310	add	x8, x8, w28, sxtw #2
000000000001a314	str	w22, [x8, #0x10]
000000000001a318	ldr	x8, [x19, #0x18]
000000000001a31c	str	x8, [sp, #0x90]
000000000001a320	ldr	w9, [x8, #0x8]
000000000001a324	cmp	w9, w20
000000000001a328	b.ls	0x1a404
000000000001a32c	mov	w25, #0x0
000000000001a330	sxtw	x9, w20
000000000001a334	ldr	xzr, [x8]
000000000001a338	add	x8, x8, x9, lsl #2
000000000001a33c	str	w28, [x8, #0x10]
000000000001a340	b	0x1a1e4
000000000001a344	str	x9, [sp, #0x58]
000000000001a348	ldr	w8, [x9, #0x8]
000000000001a34c	cmp	w8, w28
000000000001a350	b.ls	0x1a404
000000000001a354	mov	w10, #0x0
000000000001a358	ldr	xzr, [x9]
000000000001a35c	add	x8, x9, #0x10
000000000001a360	b	0x1a398
000000000001a364	str	x9, [sp, #0x68]
000000000001a368	cmp	w10, w28
000000000001a36c	b.ls	0x1a404
000000000001a370	mov	w10, #0x0
000000000001a374	ldr	xzr, [x9]
000000000001a378	b	0x1a398
000000000001a37c	ldr	x8, [x19, #0x20]
000000000001a380	str	x8, [sp, #0x98]
000000000001a384	ldr	w9, [x8, #0x8]
000000000001a388	cmp	w9, w28
000000000001a38c	b.ls	0x1a404
000000000001a390	ldr	xzr, [x8], #0x10
000000000001a394	mov	w10, #-0x1
000000000001a398	ldr	x11, [sp, #0x8]
000000000001a39c	str	w10, [x8, w28, sxtw #2]
000000000001a3a0	ldr	x8, [sp, #0x48]
000000000001a3a4	str	x8, [x21, #0x110]
000000000001a3a8	ldr	x8, [x19, #0x18]
000000000001a3ac	str	x8, [sp, #0x38]
000000000001a3b0	ldr	w9, [x8, #0x8]
000000000001a3b4	cmp	w9, w11
000000000001a3b8	b.ls	0x1a404
000000000001a3bc	ldr	xzr, [x8]
000000000001a3c0	ldr	x9, [sp]
000000000001a3c4	add	x8, x8, x9, lsl #2
000000000001a3c8	mov	w9, #-0x1
000000000001a3cc	str	w9, [x8, #0x10]
000000000001a3d0	ldr	w8, [x19, #0x4c]
000000000001a3d4	sub	w8, w8, #0x1
000000000001a3d8	str	w8, [x19, #0x4c]
000000000001a3dc	ldr	x8, [sp, #0x18]
000000000001a3e0	str	x8, [x21, #0x110]
000000000001a3e4	ldp	x29, x30, [sp, #0x120]
000000000001a3e8	ldp	x20, x19, [sp, #0x110]
000000000001a3ec	ldp	x22, x21, [sp, #0x100]
000000000001a3f0	ldp	x24, x23, [sp, #0xf0]
000000000001a3f4	ldp	x26, x25, [sp, #0xe0]
000000000001a3f8	ldp	x28, x27, [sp, #0xd0]
000000000001a3fc	add	sp, sp, #0x130
000000000001a400	ret
000000000001a404	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#containsEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.Boolean:
000000000001a408	sub	sp, sp, #0x80
000000000001a40c	stp	x24, x23, [sp, #0x40]
000000000001a410	stp	x22, x21, [sp, #0x50]
000000000001a414	stp	x20, x19, [sp, #0x60]
000000000001a418	stp	x29, x30, [sp, #0x70]
000000000001a41c	add	x29, sp, #0x70
000000000001a420	mov	x19, x1
000000000001a424	mov	x20, x0
000000000001a428	movi.16b	v0, #0x0
000000000001a42c	stp	q0, q0, [sp]
000000000001a430	str	xzr, [sp, #0x30]
000000000001a434	str	q0, [sp, #0x20]
000000000001a438	mov	x23, sp
000000000001a43c	add	x21, x23, #0x18
000000000001a440	adrp	x0, 82 ; 0x6c000
000000000001a444	add	x0, x0, #0xbb0
000000000001a448	ldr	x8, [x0]
000000000001a44c	blr	x8
000000000001a450	ldr	x22, [x0]
000000000001a454	ldr	x8, [x22, #0x110]
000000000001a458	str	x23, [x22, #0x110]
000000000001a45c	mov	x9, #0x700000000
000000000001a460	stp	x8, x9, [sp, #0x8]
000000000001a464	adr	x8, #0x6c5df
000000000001a468	nop
000000000001a46c	ldarb	w8, [x8]
000000000001a470	tbz	w8, #0x0, 0x1a478
000000000001a474	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a478	ldr	x8, [x19]
000000000001a47c	and	x8, x8, #0xfffffffffffffffc
000000000001a480	ldr	x8, [x8]
000000000001a484	ldr	w9, [x8, #0x3c]
000000000001a488	ldr	x8, [x8, #0x40]
000000000001a48c	tbnz	w9, #0x1f, 0x1a49c
000000000001a490	mov	w10, #0xa8
000000000001a494	and	x9, x9, x10
000000000001a498	b	0x1a520
000000000001a49c	neg	w10, w9
000000000001a4a0	mvn	w9, w9
000000000001a4a4	cmp	w10, #0x9
000000000001a4a8	b.ge	0x1a4e0
000000000001a4ac	cmp	w10, #0x2
000000000001a4b0	b.lt	0x1a514
000000000001a4b4	mov	x10, #0x0
000000000001a4b8	mov	x11, x8
000000000001a4bc	ldr	w12, [x11]
000000000001a4c0	cmp	w12, #0xa7
000000000001a4c4	b.gt	0x1a51c
000000000001a4c8	add	x10, x10, #0x1
000000000001a4cc	add	x11, x11, #0x10
000000000001a4d0	cmp	x9, x10
000000000001a4d4	b.ne	0x1a4bc
000000000001a4d8	mov	x10, x9
000000000001a4dc	b	0x1a51c
000000000001a4e0	mov	w10, #0x0
000000000001a4e4	add	w11, w9, w10
000000000001a4e8	cmp	w11, #0x0
000000000001a4ec	cinc	w11, w11, lt
000000000001a4f0	asr	w11, w11, #1
000000000001a4f4	sbfiz	x12, x11, #4, #32
000000000001a4f8	ldr	w12, [x8, x12]
000000000001a4fc	cmp	w12, #0xa8
000000000001a500	csinc	w10, w10, w11, ge
000000000001a504	csel	w9, w9, w11, lt
000000000001a508	cmp	w10, w9
000000000001a50c	b.lt	0x1a4e4
000000000001a510	b	0x1a51c
000000000001a514	mov	w10, #0x0
000000000001a518	b	0x1a51c
000000000001a51c	sxtw	x9, w10
000000000001a520	add	x8, x8, x9, lsl #4
000000000001a524	ldr	x8, [x8, #0x8]
000000000001a528	ldr	x8, [x8]
000000000001a52c	mov	x0, x19
000000000001a530	mov	x1, x21
000000000001a534	blr	x8
000000000001a538	mov	x1, x0
000000000001a53c	mov	x0, x20
000000000001a540	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001a544	tbnz	w0, #0x1f, 0x1a594
000000000001a548	ldr	x8, [x20, #0x10]
000000000001a54c	str	x8, [sp, #0x20]
000000000001a550	cbz	x8, 0x1a680
000000000001a554	ldr	w9, [x8, #0x8]
000000000001a558	cmp	w9, w0
000000000001a55c	b.ls	0x1a684
000000000001a560	add	x1, x23, #0x30
000000000001a564	add	x8, x8, w0, sxtw #3
000000000001a568	ldr	x20, [x8, #0x10]
000000000001a56c	str	x20, [sp, #0x28]
000000000001a570	ldr	x8, [x19]
000000000001a574	and	x8, x8, #0xfffffffffffffffc
000000000001a578	ldr	x8, [x8]
000000000001a57c	ldr	w9, [x8, #0x3c]
000000000001a580	ldr	x8, [x8, #0x40]
000000000001a584	tbnz	w9, #0x1f, 0x1a59c
000000000001a588	mov	w10, #0xa8
000000000001a58c	and	x9, x9, x10
000000000001a590	b	0x1a620
000000000001a594	mov	w0, #0x0
000000000001a598	b	0x1a660
000000000001a59c	neg	w10, w9
000000000001a5a0	mvn	w9, w9
000000000001a5a4	cmp	w10, #0x9
000000000001a5a8	b.ge	0x1a5e0
000000000001a5ac	cmp	w10, #0x2
000000000001a5b0	b.lt	0x1a614
000000000001a5b4	mov	x10, #0x0
000000000001a5b8	mov	x11, x8
000000000001a5bc	ldr	w12, [x11]
000000000001a5c0	cmp	w12, #0xa7
000000000001a5c4	b.gt	0x1a61c
000000000001a5c8	add	x10, x10, #0x1
000000000001a5cc	add	x11, x11, #0x10
000000000001a5d0	cmp	x9, x10
000000000001a5d4	b.ne	0x1a5bc
000000000001a5d8	mov	x10, x9
000000000001a5dc	b	0x1a61c
000000000001a5e0	mov	w10, #0x0
000000000001a5e4	add	w11, w9, w10
000000000001a5e8	cmp	w11, #0x0
000000000001a5ec	cinc	w11, w11, lt
000000000001a5f0	asr	w11, w11, #1
000000000001a5f4	sbfiz	x12, x11, #4, #32
000000000001a5f8	ldr	w12, [x8, x12]
000000000001a5fc	cmp	w12, #0xa8
000000000001a600	csinc	w10, w10, w11, ge
000000000001a604	csel	w9, w9, w11, lt
000000000001a608	cmp	w10, w9
000000000001a60c	b.lt	0x1a5e4
000000000001a610	b	0x1a61c
000000000001a614	mov	w10, #0x0
000000000001a618	b	0x1a61c
000000000001a61c	sxtw	x9, w10
000000000001a620	add	x8, x8, x9, lsl #4
000000000001a624	ldr	x8, [x8, #0x8]
000000000001a628	ldr	x8, [x8, #0x8]
000000000001a62c	mov	x0, x19
000000000001a630	blr	x8
000000000001a634	mov	x1, x0
000000000001a638	cbz	x20, 0x1a658
000000000001a63c	ldr	x8, [x20]
000000000001a640	and	x8, x8, #0xfffffffffffffffc
000000000001a644	ldr	x8, [x8]
000000000001a648	ldr	x8, [x8, #0x70]
000000000001a64c	mov	x0, x20
000000000001a650	blr	x8
000000000001a654	b	0x1a660
000000000001a658	cmp	x1, #0x0
000000000001a65c	cset	w0, eq
000000000001a660	ldr	x8, [sp, #0x8]
000000000001a664	str	x8, [x22, #0x110]
000000000001a668	ldp	x29, x30, [sp, #0x70]
000000000001a66c	ldp	x20, x19, [sp, #0x60]
000000000001a670	ldp	x22, x21, [sp, #0x50]
000000000001a674	ldp	x24, x23, [sp, #0x40]
000000000001a678	add	sp, sp, #0x80
000000000001a67c	ret
000000000001a680	bl	_ThrowNullPointerException
000000000001a684	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#getKey(1:0){}1:0?:
000000000001a688	sub	sp, sp, #0x60
000000000001a68c	stp	x22, x21, [sp, #0x30]
000000000001a690	stp	x20, x19, [sp, #0x40]
000000000001a694	stp	x29, x30, [sp, #0x50]
000000000001a698	add	x29, sp, #0x50
000000000001a69c	mov	x19, x2
000000000001a6a0	mov	x21, x1
000000000001a6a4	mov	x20, x0
000000000001a6a8	movi.16b	v0, #0x0
000000000001a6ac	stp	q0, q0, [sp]
000000000001a6b0	str	xzr, [sp, #0x20]
000000000001a6b4	adrp	x0, 82 ; 0x6c000
000000000001a6b8	add	x0, x0, #0xbb0
000000000001a6bc	ldr	x8, [x0]
000000000001a6c0	blr	x8
000000000001a6c4	ldr	x22, [x0]
000000000001a6c8	ldr	x8, [x22, #0x110]
000000000001a6cc	mov	x9, sp
000000000001a6d0	str	x9, [x22, #0x110]
000000000001a6d4	mov	x9, #0x500000000
000000000001a6d8	stp	x8, x9, [sp, #0x8]
000000000001a6dc	adr	x8, #0x6c367
000000000001a6e0	nop
000000000001a6e4	ldarb	w8, [x8]
000000000001a6e8	tbz	w8, #0x0, 0x1a6f0
000000000001a6ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a6f0	mov	x0, x20
000000000001a6f4	mov	x1, x21
000000000001a6f8	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001a6fc	tbnz	w0, #0x1f, 0x1a728
000000000001a700	ldr	x8, [x20, #0x8]
000000000001a704	str	x8, [sp, #0x18]
000000000001a708	ldr	w9, [x8, #0x8]
000000000001a70c	cmp	w9, w0
000000000001a710	b.ls	0x1a74c
000000000001a714	add	x8, x8, w0, sxtw #3
000000000001a718	ldr	x0, [x8, #0x10]
000000000001a71c	str	x0, [sp, #0x20]
000000000001a720	cbnz	x0, 0x1a72c
000000000001a724	bl	_ThrowNullPointerException
000000000001a728	mov	x0, #0x0
000000000001a72c	str	x0, [x19]
000000000001a730	ldr	x8, [sp, #0x8]
000000000001a734	str	x8, [x22, #0x110]
000000000001a738	ldp	x29, x30, [sp, #0x50]
000000000001a73c	ldp	x20, x19, [sp, #0x40]
000000000001a740	ldp	x22, x21, [sp, #0x30]
000000000001a744	add	sp, sp, #0x60
000000000001a748	ret
000000000001a74c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#containsAllEntries(kotlin.collections.Collection<*>){}kotlin.Boolean:
000000000001a750	sub	sp, sp, #0x80
000000000001a754	stp	x26, x25, [sp, #0x30]
000000000001a758	stp	x24, x23, [sp, #0x40]
000000000001a75c	stp	x22, x21, [sp, #0x50]
000000000001a760	stp	x20, x19, [sp, #0x60]
000000000001a764	stp	x29, x30, [sp, #0x70]
000000000001a768	add	x29, sp, #0x70
000000000001a76c	mov	x21, x1
000000000001a770	mov	x19, x0
000000000001a774	movi.16b	v0, #0x0
000000000001a778	stp	q0, q0, [sp]
000000000001a77c	str	q0, [sp, #0x20]
000000000001a780	mov	x20, sp
000000000001a784	add	x22, x20, #0x18
000000000001a788	adrp	x0, 82 ; 0x6c000
000000000001a78c	add	x0, x0, #0xbb0
000000000001a790	ldr	x8, [x0]
000000000001a794	blr	x8
000000000001a798	ldr	x23, [x0]
000000000001a79c	ldr	x8, [x23, #0x110]
000000000001a7a0	str	x20, [x23, #0x110]
000000000001a7a4	mov	x9, #0x600000000
000000000001a7a8	stp	x8, x9, [sp, #0x8]
000000000001a7ac	adr	x24, #0x6c297
000000000001a7b0	nop
000000000001a7b4	ldarb	w8, [x24]
000000000001a7b8	tbz	w8, #0x0, 0x1a7c0
000000000001a7bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a7c0	add	x20, x20, #0x20
000000000001a7c4	ldr	x8, [x21]
000000000001a7c8	and	x8, x8, #0xfffffffffffffffc
000000000001a7cc	ldr	x8, [x8]
000000000001a7d0	ldr	w9, [x8, #0x3c]
000000000001a7d4	ldr	x8, [x8, #0x40]
000000000001a7d8	tbnz	w9, #0x1f, 0x1a7e8
000000000001a7dc	mov	w10, #0x12
000000000001a7e0	and	x9, x9, x10
000000000001a7e4	b	0x1a86c
000000000001a7e8	neg	w10, w9
000000000001a7ec	mvn	w9, w9
000000000001a7f0	cmp	w10, #0x9
000000000001a7f4	b.ge	0x1a82c
000000000001a7f8	cmp	w10, #0x2
000000000001a7fc	b.lt	0x1a860
000000000001a800	mov	x10, #0x0
000000000001a804	mov	x11, x8
000000000001a808	ldr	w12, [x11]
000000000001a80c	cmp	w12, #0x11
000000000001a810	b.gt	0x1a868
000000000001a814	add	x10, x10, #0x1
000000000001a818	add	x11, x11, #0x10
000000000001a81c	cmp	x9, x10
000000000001a820	b.ne	0x1a808
000000000001a824	mov	x10, x9
000000000001a828	b	0x1a868
000000000001a82c	mov	w10, #0x0
000000000001a830	add	w11, w9, w10
000000000001a834	cmp	w11, #0x0
000000000001a838	cinc	w11, w11, lt
000000000001a83c	asr	w11, w11, #1
000000000001a840	sbfiz	x12, x11, #4, #32
000000000001a844	ldr	w12, [x8, x12]
000000000001a848	cmp	w12, #0x12
000000000001a84c	csinc	w10, w10, w11, ge
000000000001a850	csel	w9, w9, w11, lt
000000000001a854	cmp	w10, w9
000000000001a858	b.lt	0x1a830
000000000001a85c	b	0x1a868
000000000001a860	mov	w10, #0x0
000000000001a864	b	0x1a868
000000000001a868	sxtw	x9, w10
000000000001a86c	add	x8, x8, x9, lsl #4
000000000001a870	ldr	x8, [x8, #0x8]
000000000001a874	ldr	x8, [x8, #0x20]
000000000001a878	mov	x0, x21
000000000001a87c	mov	x1, x22
000000000001a880	blr	x8
000000000001a884	mov	x21, x0
000000000001a888	mov	w22, #0xa0
000000000001a88c	mov	w25, #0xa8
000000000001a890	ldr	x8, [x21]
000000000001a894	and	x8, x8, #0xfffffffffffffffc
000000000001a898	ldr	x8, [x8]
000000000001a89c	ldr	w9, [x8, #0x3c]
000000000001a8a0	ldr	x8, [x8, #0x40]
000000000001a8a4	tbnz	w9, #0x1f, 0x1a8c8
000000000001a8a8	and	x9, x9, x22
000000000001a8ac	add	x8, x8, x9, lsl #4
000000000001a8b0	ldr	x8, [x8, #0x8]
000000000001a8b4	ldr	x8, [x8]
000000000001a8b8	mov	x0, x21
000000000001a8bc	blr	x8
000000000001a8c0	tbnz	w0, #0x0, 0x1a964
000000000001a8c4	b	0x1ab44
000000000001a8c8	neg	w10, w9
000000000001a8cc	mvn	w9, w9
000000000001a8d0	cmp	w10, #0x9
000000000001a8d4	b.ge	0x1a90c
000000000001a8d8	cmp	w10, #0x2
000000000001a8dc	b.lt	0x1a940
000000000001a8e0	mov	x10, #0x0
000000000001a8e4	mov	x11, x8
000000000001a8e8	ldr	w12, [x11]
000000000001a8ec	cmp	w12, #0x9f
000000000001a8f0	b.gt	0x1a948
000000000001a8f4	add	x10, x10, #0x1
000000000001a8f8	add	x11, x11, #0x10
000000000001a8fc	cmp	x9, x10
000000000001a900	b.ne	0x1a8e8
000000000001a904	mov	x10, x9
000000000001a908	b	0x1a948
000000000001a90c	mov	w10, #0x0
000000000001a910	add	w11, w9, w10
000000000001a914	cmp	w11, #0x0
000000000001a918	cinc	w11, w11, lt
000000000001a91c	asr	w11, w11, #1
000000000001a920	sbfiz	x12, x11, #4, #32
000000000001a924	ldr	w12, [x8, x12]
000000000001a928	cmp	w12, #0xa0
000000000001a92c	csinc	w10, w10, w11, ge
000000000001a930	csel	w9, w9, w11, lt
000000000001a934	cmp	w10, w9
000000000001a938	b.lt	0x1a910
000000000001a93c	b	0x1a948
000000000001a940	mov	w10, #0x0
000000000001a944	b	0x1a948
000000000001a948	sxtw	x9, w10
000000000001a94c	add	x8, x8, x9, lsl #4
000000000001a950	ldr	x8, [x8, #0x8]
000000000001a954	ldr	x8, [x8]
000000000001a958	mov	x0, x21
000000000001a95c	blr	x8
000000000001a960	tbz	w0, #0x0, 0x1ab44
000000000001a964	ldarb	w8, [x24]
000000000001a968	tbz	w8, #0x0, 0x1a970
000000000001a96c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a970	ldr	x8, [x21]
000000000001a974	and	x8, x8, #0xfffffffffffffffc
000000000001a978	ldr	x8, [x8]
000000000001a97c	ldr	w9, [x8, #0x3c]
000000000001a980	ldr	x8, [x8, #0x40]
000000000001a984	tbnz	w9, #0x1f, 0x1a990
000000000001a988	and	x9, x9, x22
000000000001a98c	b	0x1aa14
000000000001a990	neg	w10, w9
000000000001a994	mvn	w9, w9
000000000001a998	cmp	w10, #0x9
000000000001a99c	b.ge	0x1a9d4
000000000001a9a0	cmp	w10, #0x2
000000000001a9a4	b.lt	0x1aa08
000000000001a9a8	mov	x10, #0x0
000000000001a9ac	mov	x11, x8
000000000001a9b0	ldr	w12, [x11]
000000000001a9b4	cmp	w12, #0x9f
000000000001a9b8	b.gt	0x1aa10
000000000001a9bc	add	x10, x10, #0x1
000000000001a9c0	add	x11, x11, #0x10
000000000001a9c4	cmp	x9, x10
000000000001a9c8	b.ne	0x1a9b0
000000000001a9cc	mov	x10, x9
000000000001a9d0	b	0x1aa10
000000000001a9d4	mov	w10, #0x0
000000000001a9d8	add	w11, w9, w10
000000000001a9dc	cmp	w11, #0x0
000000000001a9e0	cinc	w11, w11, lt
000000000001a9e4	asr	w11, w11, #1
000000000001a9e8	sbfiz	x12, x11, #4, #32
000000000001a9ec	ldr	w12, [x8, x12]
000000000001a9f0	cmp	w12, #0xa0
000000000001a9f4	csinc	w10, w10, w11, ge
000000000001a9f8	csel	w9, w9, w11, lt
000000000001a9fc	cmp	w10, w9
000000000001aa00	b.lt	0x1a9d8
000000000001aa04	b	0x1aa10
000000000001aa08	mov	w10, #0x0
000000000001aa0c	b	0x1aa10
000000000001aa10	sxtw	x9, w10
000000000001aa14	add	x8, x8, x9, lsl #4
000000000001aa18	ldr	x8, [x8, #0x8]
000000000001aa1c	ldr	x8, [x8, #0x8]
000000000001aa20	mov	x0, x21
000000000001aa24	mov	x1, x20
000000000001aa28	blr	x8
000000000001aa2c	cbz	x0, 0x1ab8c
000000000001aa30	mov	x8, x0
000000000001aa34	ldr	x9, [x0]
000000000001aa38	and	x9, x9, #0xfffffffffffffffc
000000000001aa3c	ldr	x9, [x9]
000000000001aa40	ldr	w10, [x9, #0x3c]
000000000001aa44	ldr	x9, [x9, #0x40]
000000000001aa48	tbnz	w10, #0x1f, 0x1aa64
000000000001aa4c	and	x10, x10, x25
000000000001aa50	lsl	x10, x10, #4
000000000001aa54	ldr	w9, [x9, x10]
000000000001aa58	cmp	w9, #0xa8
000000000001aa5c	b.eq	0x1ab08
000000000001aa60	b	0x1ab30
000000000001aa64	neg	w11, w10
000000000001aa68	mvn	w10, w10
000000000001aa6c	cmp	w11, #0x9
000000000001aa70	b.ge	0x1aabc
000000000001aa74	cmp	w11, #0x2
000000000001aa78	b.lt	0x1aaf0
000000000001aa7c	mov	x11, #0x0
000000000001aa80	mov	x12, x9
000000000001aa84	ldr	w13, [x12]
000000000001aa88	cmp	w13, #0xa7
000000000001aa8c	b.gt	0x1ab1c
000000000001aa90	add	x11, x11, #0x1
000000000001aa94	add	x12, x12, #0x10
000000000001aa98	cmp	x10, x11
000000000001aa9c	b.ne	0x1aa84
000000000001aaa0	mov	x11, x10
000000000001aaa4	sxtw	x10, w11
000000000001aaa8	lsl	x10, x10, #4
000000000001aaac	ldr	w9, [x9, x10]
000000000001aab0	cmp	w9, #0xa8
000000000001aab4	b.eq	0x1ab08
000000000001aab8	b	0x1ab30
000000000001aabc	mov	w11, #0x0
000000000001aac0	add	w12, w10, w11
000000000001aac4	cmp	w12, #0x0
000000000001aac8	cinc	w12, w12, lt
000000000001aacc	asr	w12, w12, #1
000000000001aad0	sbfiz	x13, x12, #4, #32
000000000001aad4	ldr	w13, [x9, x13]
000000000001aad8	cmp	w13, #0xa8
000000000001aadc	csinc	w11, w11, w12, ge
000000000001aae0	csel	w10, w10, w12, lt
000000000001aae4	cmp	w11, w10
000000000001aae8	b.lt	0x1aac0
000000000001aaec	b	0x1aaf4
000000000001aaf0	mov	w11, #0x0
000000000001aaf4	sxtw	x10, w11
000000000001aaf8	lsl	x10, x10, #4
000000000001aafc	ldr	w9, [x9, x10]
000000000001ab00	cmp	w9, #0xa8
000000000001ab04	b.ne	0x1ab30
000000000001ab08	mov	x0, x19
000000000001ab0c	mov	x1, x8
000000000001ab10	bl	"_kfun:kotlin.collections.HashMap#containsEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.Boolean"
000000000001ab14	tbnz	w0, #0x0, 0x1a890
000000000001ab18	b	0x1ab88
000000000001ab1c	sxtw	x10, w11
000000000001ab20	lsl	x10, x10, #4
000000000001ab24	ldr	w9, [x9, x10]
000000000001ab28	cmp	w9, #0xa8
000000000001ab2c	b.eq	0x1ab08
000000000001ab30	adr	x1, #0x41550
000000000001ab34	nop
000000000001ab38	mov	x0, x8
000000000001ab3c	bl	_ThrowClassCastException
000000000001ab40	brk	#0x1
000000000001ab44	mov	w0, #0x1
000000000001ab48	b	0x1ab8c
000000000001ab4c	b	0x1ab50
000000000001ab50	mov	x8, sp
000000000001ab54	str	x8, [x23, #0x110]
000000000001ab58	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000001ab5c	ldr	x8, [x0, #0x8]
000000000001ab60	ldr	x19, [x8]
000000000001ab64	str	x19, [sp, #0x28]
000000000001ab68	bl	0x51944 ; symbol stub for: ___cxa_end_catch
000000000001ab6c	ldr	x8, [x19]
000000000001ab70	and	x8, x8, #0xfffffffffffffffc
000000000001ab74	ldr	x8, [x8]
000000000001ab78	ldr	w8, [x8, #0x5c]
000000000001ab7c	and	w8, w8, #0xfffffffe
000000000001ab80	cmp	w8, #0x84
000000000001ab84	b.ne	0x1abb0
000000000001ab88	mov	w0, #0x0
000000000001ab8c	ldr	x8, [sp, #0x8]
000000000001ab90	str	x8, [x23, #0x110]
000000000001ab94	ldp	x29, x30, [sp, #0x70]
000000000001ab98	ldp	x20, x19, [sp, #0x60]
000000000001ab9c	ldp	x22, x21, [sp, #0x50]
000000000001aba0	ldp	x24, x23, [sp, #0x40]
000000000001aba4	ldp	x26, x25, [sp, #0x30]
000000000001aba8	add	sp, sp, #0x80
000000000001abac	ret
000000000001abb0	mov	x0, x19
000000000001abb4	bl	_ThrowException
_kfun:kotlin.collections.HashMap#keysIterator(){}kotlin.collections.HashMap.KeysItr<1:0,1:1>:
000000000001abb8	stp	x22, x21, [sp, #-0x30]!
000000000001abbc	stp	x20, x19, [sp, #0x10]
000000000001abc0	stp	x29, x30, [sp, #0x20]
000000000001abc4	add	x29, sp, #0x20
000000000001abc8	mov	x19, x1
000000000001abcc	mov	x20, x0
000000000001abd0	adr	x8, #0x6be73
000000000001abd4	nop
000000000001abd8	ldarb	w8, [x8]
000000000001abdc	tbz	w8, #0x0, 0x1abe4
000000000001abe0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001abe4	adrp	x0, 82 ; 0x6c000
000000000001abe8	add	x0, x0, #0xbb0
000000000001abec	ldr	x8, [x0]
000000000001abf0	blr	x8
000000000001abf4	ldr	x8, [x0]
000000000001abf8	ldr	x8, [x8, #0x118]
000000000001abfc	add	x0, x8, #0x70
000000000001ac00	mov	w1, #0x20
000000000001ac04	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ac08	mov	x21, x0
000000000001ac0c	adr	x8, #0x40ae4
000000000001ac10	nop
000000000001ac14	str	x8, [x21, #0x10]!
000000000001ac18	stur	xzr, [x21, #-0x8]
000000000001ac1c	str	x21, [x19]
000000000001ac20	str	x20, [x21, #0x8]
000000000001ac24	mov	w8, #-0x1
000000000001ac28	str	w8, [x21, #0x14]
000000000001ac2c	mov	x0, x21
000000000001ac30	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001ac34	str	x21, [x19]
000000000001ac38	mov	x0, x21
000000000001ac3c	ldp	x29, x30, [sp, #0x20]
000000000001ac40	ldp	x20, x19, [sp, #0x10]
000000000001ac44	ldp	x22, x21, [sp], #0x30
000000000001ac48	ret
_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>:
000000000001ac4c	stp	x22, x21, [sp, #-0x30]!
000000000001ac50	stp	x20, x19, [sp, #0x10]
000000000001ac54	stp	x29, x30, [sp, #0x20]
000000000001ac58	add	x29, sp, #0x20
000000000001ac5c	mov	x19, x1
000000000001ac60	mov	x20, x0
000000000001ac64	adr	x8, #0x6bddf
000000000001ac68	nop
000000000001ac6c	ldarb	w8, [x8]
000000000001ac70	tbz	w8, #0x0, 0x1ac78
000000000001ac74	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ac78	adrp	x0, 82 ; 0x6c000
000000000001ac7c	add	x0, x0, #0xbb0
000000000001ac80	ldr	x8, [x0]
000000000001ac84	blr	x8
000000000001ac88	ldr	x8, [x0]
000000000001ac8c	ldr	x8, [x8, #0x118]
000000000001ac90	add	x0, x8, #0x70
000000000001ac94	mov	w1, #0x20
000000000001ac98	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ac9c	mov	x21, x0
000000000001aca0	adr	x8, #0x40b70
000000000001aca4	nop
000000000001aca8	str	x8, [x21, #0x10]!
000000000001acac	stur	xzr, [x21, #-0x8]
000000000001acb0	str	x21, [x19]
000000000001acb4	str	x20, [x21, #0x8]
000000000001acb8	mov	w8, #-0x1
000000000001acbc	str	w8, [x21, #0x14]
000000000001acc0	mov	x0, x21
000000000001acc4	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001acc8	str	x21, [x19]
000000000001accc	mov	x0, x21
000000000001acd0	ldp	x29, x30, [sp, #0x20]
000000000001acd4	ldp	x20, x19, [sp, #0x10]
000000000001acd8	ldp	x22, x21, [sp], #0x30
000000000001acdc	ret
_kfun:kotlin.collections.HashMap.Companion.computeHashSize#internal:
000000000001ace0	stp	x20, x19, [sp, #-0x20]!
000000000001ace4	stp	x29, x30, [sp, #0x10]
000000000001ace8	add	x29, sp, #0x10
000000000001acec	mov	x19, x0
000000000001acf0	adr	x8, #0x6bd53
000000000001acf4	nop
000000000001acf8	ldarb	w8, [x8]
000000000001acfc	tbz	w8, #0x0, 0x1ad04
000000000001ad00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ad04	cmp	w19, #0x1
000000000001ad08	b.lt	0x1ad24
000000000001ad0c	adds	w8, w19, w19, lsl #1
000000000001ad10	b.ne	0x1ad28
000000000001ad14	mov	w0, #0x0
000000000001ad18	ldp	x29, x30, [sp, #0x10]
000000000001ad1c	ldp	x20, x19, [sp], #0x20
000000000001ad20	ret
000000000001ad24	mov	w8, #0x3
000000000001ad28	clz	w8, w8
000000000001ad2c	eor	w8, w8, #0x1f
000000000001ad30	mov	w9, #0x1
000000000001ad34	lsl	w0, w9, w8
000000000001ad38	ldp	x29, x30, [sp, #0x10]
000000000001ad3c	ldp	x20, x19, [sp], #0x20
000000000001ad40	ret
_kfun:kotlin.collections.HashMap.Itr#initNext(){}:
000000000001ad44	sub	sp, sp, #0x50
000000000001ad48	stp	x22, x21, [sp, #0x20]
000000000001ad4c	stp	x20, x19, [sp, #0x30]
000000000001ad50	stp	x29, x30, [sp, #0x40]
000000000001ad54	add	x29, sp, #0x40
000000000001ad58	mov	x19, x0
000000000001ad5c	movi.16b	v0, #0x0
000000000001ad60	stp	q0, q0, [sp]
000000000001ad64	adrp	x0, 82 ; 0x6c000
000000000001ad68	add	x0, x0, #0xbb0
000000000001ad6c	ldr	x8, [x0]
000000000001ad70	blr	x8
000000000001ad74	ldr	x20, [x0]
000000000001ad78	ldr	x8, [x20, #0x110]
000000000001ad7c	mov	x9, sp
000000000001ad80	str	x9, [x20, #0x110]
000000000001ad84	mov	x9, #0x400000000
000000000001ad88	stp	x8, x9, [sp, #0x8]
000000000001ad8c	adr	x21, #0x6bcb7
000000000001ad90	nop
000000000001ad94	ldarb	w8, [x21]
000000000001ad98	tbz	w8, #0x0, 0x1ada0
000000000001ad9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ada0	ldr	w8, [x19, #0x10]
000000000001ada4	b	0x1adb4
000000000001ada8	ldr	w8, [x19, #0x10]
000000000001adac	add	w8, w8, #0x1
000000000001adb0	str	w8, [x19, #0x10]
000000000001adb4	ldr	x9, [x19, #0x8]
000000000001adb8	ldr	w10, [x9, #0x44]
000000000001adbc	cmp	w8, w10
000000000001adc0	b.ge	0x1adf4
000000000001adc4	ldr	x9, [x9, #0x18]
000000000001adc8	str	x9, [sp, #0x18]
000000000001adcc	ldr	w10, [x9, #0x8]
000000000001add0	cmp	w10, w8
000000000001add4	b.ls	0x1ae10
000000000001add8	add	x8, x9, w8, sxtw #2
000000000001addc	ldr	w8, [x8, #0x10]
000000000001ade0	tbz	w8, #0x1f, 0x1adf4
000000000001ade4	ldarb	w8, [x21]
000000000001ade8	tbz	w8, #0x0, 0x1ada8
000000000001adec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001adf0	b	0x1ada8
000000000001adf4	ldr	x8, [sp, #0x8]
000000000001adf8	str	x8, [x20, #0x110]
000000000001adfc	ldp	x29, x30, [sp, #0x40]
000000000001ae00	ldp	x20, x19, [sp, #0x30]
000000000001ae04	ldp	x22, x21, [sp, #0x20]
000000000001ae08	add	sp, sp, #0x50
000000000001ae0c	ret
000000000001ae10	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.Itr#hasNext(){}kotlin.Boolean:
000000000001ae14	stp	x20, x19, [sp, #-0x20]!
000000000001ae18	stp	x29, x30, [sp, #0x10]
000000000001ae1c	add	x29, sp, #0x10
000000000001ae20	mov	x19, x0
000000000001ae24	adr	x8, #0x6bc1f
000000000001ae28	nop
000000000001ae2c	ldarb	w8, [x8]
000000000001ae30	tbz	w8, #0x0, 0x1ae38
000000000001ae34	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ae38	ldr	w8, [x19, #0x10]
000000000001ae3c	ldr	x9, [x19, #0x8]
000000000001ae40	ldr	w9, [x9, #0x44]
000000000001ae44	cmp	w8, w9
000000000001ae48	cset	w0, lt
000000000001ae4c	ldp	x29, x30, [sp, #0x10]
000000000001ae50	ldp	x20, x19, [sp], #0x20
000000000001ae54	ret
_kfun:kotlin.collections.HashMap.Itr#remove(){}:
000000000001ae58	stp	x20, x19, [sp, #-0x20]!
000000000001ae5c	stp	x29, x30, [sp, #0x10]
000000000001ae60	add	x29, sp, #0x10
000000000001ae64	mov	x19, x0
000000000001ae68	adr	x8, #0x6bbdb
000000000001ae6c	nop
000000000001ae70	ldarb	w8, [x8]
000000000001ae74	tbz	w8, #0x0, 0x1ae7c
000000000001ae78	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ae7c	ldr	x0, [x19, #0x8]
000000000001ae80	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001ae84	ldr	x0, [x19, #0x8]
000000000001ae88	ldr	w1, [x19, #0x14]
000000000001ae8c	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
000000000001ae90	mov	w8, #-0x1
000000000001ae94	str	w8, [x19, #0x14]
000000000001ae98	ldp	x29, x30, [sp, #0x10]
000000000001ae9c	ldp	x20, x19, [sp], #0x20
000000000001aea0	ret
_kfun:kotlin.collections.HashMap.KeysItr#next(){}1:0:
000000000001aea4	sub	sp, sp, #0x60
000000000001aea8	stp	x22, x21, [sp, #0x30]
000000000001aeac	stp	x20, x19, [sp, #0x40]
000000000001aeb0	stp	x29, x30, [sp, #0x50]
000000000001aeb4	add	x29, sp, #0x50
000000000001aeb8	mov	x19, x1
000000000001aebc	mov	x20, x0
000000000001aec0	movi.16b	v0, #0x0
000000000001aec4	stp	q0, q0, [sp]
000000000001aec8	str	q0, [sp, #0x20]
000000000001aecc	adrp	x0, 82 ; 0x6c000
000000000001aed0	add	x0, x0, #0xbb0
000000000001aed4	ldr	x8, [x0]
000000000001aed8	blr	x8
000000000001aedc	ldr	x22, [x0]
000000000001aee0	ldr	x8, [x22, #0x110]
000000000001aee4	mov	x9, sp
000000000001aee8	str	x9, [x22, #0x110]
000000000001aeec	mov	x9, #0x600000000
000000000001aef0	stp	x8, x9, [sp, #0x8]
000000000001aef4	adr	x8, #0x6bb4f
000000000001aef8	nop
000000000001aefc	ldarb	w8, [x8]
000000000001af00	tbz	w8, #0x0, 0x1af08
000000000001af04	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001af08	ldr	w8, [x20, #0x10]
000000000001af0c	ldr	x9, [x20, #0x8]
000000000001af10	ldr	w10, [x9, #0x44]
000000000001af14	cmp	w8, w10
000000000001af18	b.ge	0x1af74
000000000001af1c	add	w10, w8, #0x1
000000000001af20	stp	w10, w8, [x20, #0x10]
000000000001af24	ldr	x9, [x9, #0x8]
000000000001af28	str	x9, [sp, #0x20]
000000000001af2c	ldr	w10, [x9, #0x8]
000000000001af30	cmp	w10, w8
000000000001af34	b.ls	0x1afb0
000000000001af38	sxtw	x8, w8
000000000001af3c	add	x8, x9, x8, lsl #3
000000000001af40	ldr	x21, [x8, #0x10]
000000000001af44	str	x21, [sp, #0x28]
000000000001af48	mov	x0, x20
000000000001af4c	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001af50	str	x21, [x19]
000000000001af54	ldr	x8, [sp, #0x8]
000000000001af58	str	x8, [x22, #0x110]
000000000001af5c	mov	x0, x21
000000000001af60	ldp	x29, x30, [sp, #0x50]
000000000001af64	ldp	x20, x19, [sp, #0x40]
000000000001af68	ldp	x22, x21, [sp, #0x30]
000000000001af6c	add	sp, sp, #0x60
000000000001af70	ret
000000000001af74	ldr	x8, [x22, #0x118]
000000000001af78	add	x0, x8, #0x70
000000000001af7c	mov	w1, #0x38
000000000001af80	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001af84	mov	x19, x0
000000000001af88	adr	x8, #0x3db18
000000000001af8c	nop
000000000001af90	str	x8, [x19, #0x10]!
000000000001af94	stur	xzr, [x19, #-0x8]
000000000001af98	str	x19, [sp, #0x18]
000000000001af9c	mov	x0, x19
000000000001afa0	mov	x1, #0x0
000000000001afa4	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001afa8	mov	x0, x19
000000000001afac	bl	_ThrowException
000000000001afb0	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.ValuesItr#next(){}1:1:
000000000001afb4	sub	sp, sp, #0x60
000000000001afb8	stp	x22, x21, [sp, #0x30]
000000000001afbc	stp	x20, x19, [sp, #0x40]
000000000001afc0	stp	x29, x30, [sp, #0x50]
000000000001afc4	add	x29, sp, #0x50
000000000001afc8	mov	x19, x1
000000000001afcc	mov	x20, x0
000000000001afd0	movi.16b	v0, #0x0
000000000001afd4	stp	q0, q0, [sp]
000000000001afd8	str	q0, [sp, #0x20]
000000000001afdc	adrp	x0, 82 ; 0x6c000
000000000001afe0	add	x0, x0, #0xbb0
000000000001afe4	ldr	x8, [x0]
000000000001afe8	blr	x8
000000000001afec	ldr	x22, [x0]
000000000001aff0	ldr	x8, [x22, #0x110]
000000000001aff4	mov	x9, sp
000000000001aff8	str	x9, [x22, #0x110]
000000000001affc	mov	x9, #0x600000000
000000000001b000	stp	x8, x9, [sp, #0x8]
000000000001b004	adr	x8, #0x6ba3f
000000000001b008	nop
000000000001b00c	ldarb	w8, [x8]
000000000001b010	tbz	w8, #0x0, 0x1b018
000000000001b014	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b018	ldr	w8, [x20, #0x10]
000000000001b01c	ldr	x9, [x20, #0x8]
000000000001b020	ldr	w10, [x9, #0x44]
000000000001b024	cmp	w8, w10
000000000001b028	b.ge	0x1b088
000000000001b02c	add	w10, w8, #0x1
000000000001b030	stp	w10, w8, [x20, #0x10]
000000000001b034	ldr	x9, [x9, #0x10]
000000000001b038	str	x9, [sp, #0x20]
000000000001b03c	cbz	x9, 0x1b0c4
000000000001b040	ldr	w10, [x9, #0x8]
000000000001b044	cmp	w10, w8
000000000001b048	b.ls	0x1b0c8
000000000001b04c	sxtw	x8, w8
000000000001b050	add	x8, x9, x8, lsl #3
000000000001b054	ldr	x21, [x8, #0x10]
000000000001b058	str	x21, [sp, #0x28]
000000000001b05c	mov	x0, x20
000000000001b060	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001b064	str	x21, [x19]
000000000001b068	ldr	x8, [sp, #0x8]
000000000001b06c	str	x8, [x22, #0x110]
000000000001b070	mov	x0, x21
000000000001b074	ldp	x29, x30, [sp, #0x50]
000000000001b078	ldp	x20, x19, [sp, #0x40]
000000000001b07c	ldp	x22, x21, [sp, #0x30]
000000000001b080	add	sp, sp, #0x60
000000000001b084	ret
000000000001b088	ldr	x8, [x22, #0x118]
000000000001b08c	add	x0, x8, #0x70
000000000001b090	mov	w1, #0x38
000000000001b094	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001b098	mov	x19, x0
000000000001b09c	adr	x8, #0x3da04
000000000001b0a0	nop
000000000001b0a4	str	x8, [x19, #0x10]!
000000000001b0a8	stur	xzr, [x19, #-0x8]
000000000001b0ac	str	x19, [sp, #0x18]
000000000001b0b0	mov	x0, x19
000000000001b0b4	mov	x1, #0x0
000000000001b0b8	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001b0bc	mov	x0, x19
000000000001b0c0	bl	_ThrowException
000000000001b0c4	bl	_ThrowNullPointerException
000000000001b0c8	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntriesItr#next(){}kotlin.collections.HashMap.EntryRef<1:0,1:1>:
000000000001b0cc	sub	sp, sp, #0x70
000000000001b0d0	stp	x24, x23, [sp, #0x30]
000000000001b0d4	stp	x22, x21, [sp, #0x40]
000000000001b0d8	stp	x20, x19, [sp, #0x50]
000000000001b0dc	stp	x29, x30, [sp, #0x60]
000000000001b0e0	add	x29, sp, #0x60
000000000001b0e4	mov	x19, x1
000000000001b0e8	mov	x20, x0
000000000001b0ec	movi.16b	v0, #0x0
000000000001b0f0	stp	q0, q0, [sp]
000000000001b0f4	str	xzr, [sp, #0x20]
000000000001b0f8	adrp	x0, 81 ; 0x6c000
000000000001b0fc	add	x0, x0, #0xbb0
000000000001b100	ldr	x8, [x0]
000000000001b104	blr	x8
000000000001b108	ldr	x22, [x0]
000000000001b10c	ldr	x8, [x22, #0x110]
000000000001b110	mov	x9, sp
000000000001b114	str	x9, [x22, #0x110]
000000000001b118	mov	x9, #0x500000000
000000000001b11c	stp	x8, x9, [sp, #0x8]
000000000001b120	adr	x8, #0x6b923
000000000001b124	nop
000000000001b128	ldarb	w8, [x8]
000000000001b12c	tbz	w8, #0x0, 0x1b134
000000000001b130	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b134	ldr	w23, [x20, #0x10]
000000000001b138	ldr	x24, [x20, #0x8]
000000000001b13c	ldr	w8, [x24, #0x44]
000000000001b140	cmp	w23, w8
000000000001b144	b.ge	0x1b1b0
000000000001b148	add	w8, w23, #0x1
000000000001b14c	stp	w8, w23, [x20, #0x10]
000000000001b150	ldr	x8, [x22, #0x118]
000000000001b154	add	x0, x8, #0x70
000000000001b158	mov	w1, #0x20
000000000001b15c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001b160	mov	x21, x0
000000000001b164	adr	x8, #0x4073c
000000000001b168	nop
000000000001b16c	str	x8, [x21, #0x10]!
000000000001b170	stur	xzr, [x21, #-0x8]
000000000001b174	str	x21, [sp, #0x20]
000000000001b178	str	x24, [x21, #0x8]
000000000001b17c	str	w23, [x21, #0x10]
000000000001b180	mov	x0, x20
000000000001b184	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001b188	str	x21, [x19]
000000000001b18c	ldr	x8, [sp, #0x8]
000000000001b190	str	x8, [x22, #0x110]
000000000001b194	mov	x0, x21
000000000001b198	ldp	x29, x30, [sp, #0x60]
000000000001b19c	ldp	x20, x19, [sp, #0x50]
000000000001b1a0	ldp	x22, x21, [sp, #0x40]
000000000001b1a4	ldp	x24, x23, [sp, #0x30]
000000000001b1a8	add	sp, sp, #0x70
000000000001b1ac	ret
000000000001b1b0	ldr	x8, [x22, #0x118]
000000000001b1b4	add	x0, x8, #0x70
000000000001b1b8	mov	w1, #0x38
000000000001b1bc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001b1c0	mov	x19, x0
000000000001b1c4	adr	x8, #0x3d8dc
000000000001b1c8	nop
000000000001b1cc	str	x8, [x19, #0x10]!
000000000001b1d0	stur	xzr, [x19, #-0x8]
000000000001b1d4	str	x19, [sp, #0x18]
000000000001b1d8	mov	x0, x19
000000000001b1dc	mov	x1, #0x0
000000000001b1e0	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001b1e4	mov	x0, x19
000000000001b1e8	bl	_ThrowException
_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0:
000000000001b1ec	sub	sp, sp, #0x50
000000000001b1f0	stp	x22, x21, [sp, #0x20]
000000000001b1f4	stp	x20, x19, [sp, #0x30]
000000000001b1f8	stp	x29, x30, [sp, #0x40]
000000000001b1fc	add	x29, sp, #0x40
000000000001b200	mov	x19, x1
000000000001b204	mov	x20, x0
000000000001b208	movi.16b	v0, #0x0
000000000001b20c	stp	q0, q0, [sp]
000000000001b210	adrp	x0, 81 ; 0x6c000
000000000001b214	add	x0, x0, #0xbb0
000000000001b218	ldr	x8, [x0]
000000000001b21c	blr	x8
000000000001b220	ldr	x21, [x0]
000000000001b224	ldr	x8, [x21, #0x110]
000000000001b228	mov	x9, sp
000000000001b22c	str	x9, [x21, #0x110]
000000000001b230	mov	x9, #0x400000000
000000000001b234	stp	x8, x9, [sp, #0x8]
000000000001b238	adr	x8, #0x6b80b
000000000001b23c	nop
000000000001b240	ldarb	w8, [x8]
000000000001b244	tbz	w8, #0x0, 0x1b24c
000000000001b248	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b24c	ldr	x8, [x20, #0x8]
000000000001b250	ldr	x8, [x8, #0x8]
000000000001b254	str	x8, [sp, #0x18]
000000000001b258	ldrsw	x9, [x20, #0x10]
000000000001b25c	ldr	w10, [x8, #0x8]
000000000001b260	cmp	w10, w9
000000000001b264	b.ls	0x1b290
000000000001b268	add	x8, x8, x9, lsl #3
000000000001b26c	ldr	x0, [x8, #0x10]
000000000001b270	str	x0, [x19]
000000000001b274	ldr	x8, [sp, #0x8]
000000000001b278	str	x8, [x21, #0x110]
000000000001b27c	ldp	x29, x30, [sp, #0x40]
000000000001b280	ldp	x20, x19, [sp, #0x30]
000000000001b284	ldp	x22, x21, [sp, #0x20]
000000000001b288	add	sp, sp, #0x50
000000000001b28c	ret
000000000001b290	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1:
000000000001b294	sub	sp, sp, #0x50
000000000001b298	stp	x22, x21, [sp, #0x20]
000000000001b29c	stp	x20, x19, [sp, #0x30]
000000000001b2a0	stp	x29, x30, [sp, #0x40]
000000000001b2a4	add	x29, sp, #0x40
000000000001b2a8	mov	x19, x1
000000000001b2ac	mov	x20, x0
000000000001b2b0	movi.16b	v0, #0x0
000000000001b2b4	stp	q0, q0, [sp]
000000000001b2b8	adrp	x0, 81 ; 0x6c000
000000000001b2bc	add	x0, x0, #0xbb0
000000000001b2c0	ldr	x8, [x0]
000000000001b2c4	blr	x8
000000000001b2c8	ldr	x21, [x0]
000000000001b2cc	ldr	x8, [x21, #0x110]
000000000001b2d0	mov	x9, sp
000000000001b2d4	str	x9, [x21, #0x110]
000000000001b2d8	mov	x9, #0x400000000
000000000001b2dc	stp	x8, x9, [sp, #0x8]
000000000001b2e0	adr	x8, #0x6b763
000000000001b2e4	nop
000000000001b2e8	ldarb	w8, [x8]
000000000001b2ec	tbz	w8, #0x0, 0x1b2f4
000000000001b2f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b2f4	ldr	x8, [x20, #0x8]
000000000001b2f8	ldr	x8, [x8, #0x10]
000000000001b2fc	str	x8, [sp, #0x18]
000000000001b300	cbz	x8, 0x1b33c
000000000001b304	ldrsw	x9, [x20, #0x10]
000000000001b308	ldr	w10, [x8, #0x8]
000000000001b30c	cmp	w10, w9
000000000001b310	b.ls	0x1b340
000000000001b314	add	x8, x8, x9, lsl #3
000000000001b318	ldr	x0, [x8, #0x10]
000000000001b31c	str	x0, [x19]
000000000001b320	ldr	x8, [sp, #0x8]
000000000001b324	str	x8, [x21, #0x110]
000000000001b328	ldp	x29, x30, [sp, #0x40]
000000000001b32c	ldp	x20, x19, [sp, #0x30]
000000000001b330	ldp	x22, x21, [sp, #0x20]
000000000001b334	add	sp, sp, #0x50
000000000001b338	ret
000000000001b33c	bl	_ThrowNullPointerException
000000000001b340	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntryRef#setValue(1:1){}1:1:
000000000001b344	sub	sp, sp, #0x70
000000000001b348	stp	x24, x23, [sp, #0x30]
000000000001b34c	stp	x22, x21, [sp, #0x40]
000000000001b350	stp	x20, x19, [sp, #0x50]
000000000001b354	stp	x29, x30, [sp, #0x60]
000000000001b358	add	x29, sp, #0x60
000000000001b35c	mov	x19, x2
000000000001b360	mov	x20, x1
000000000001b364	mov	x21, x0
000000000001b368	movi.16b	v0, #0x0
000000000001b36c	stp	q0, q0, [sp]
000000000001b370	str	xzr, [sp, #0x20]
000000000001b374	mov	x8, sp
000000000001b378	add	x22, x8, #0x18
000000000001b37c	adrp	x0, 81 ; 0x6c000
000000000001b380	add	x0, x0, #0xbb0
000000000001b384	ldr	x9, [x0]
000000000001b388	blr	x9
000000000001b38c	ldr	x23, [x0]
000000000001b390	ldr	x9, [x23, #0x110]
000000000001b394	str	x8, [x23, #0x110]
000000000001b398	mov	x8, #0x500000000
000000000001b39c	stp	x9, x8, [sp, #0x8]
000000000001b3a0	adr	x8, #0x6b6a3
000000000001b3a4	nop
000000000001b3a8	ldarb	w8, [x8]
000000000001b3ac	tbz	w8, #0x0, 0x1b3b4
000000000001b3b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b3b4	ldr	x0, [x21, #0x8]
000000000001b3b8	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001b3bc	ldr	x0, [x21, #0x8]
000000000001b3c0	mov	x1, x22
000000000001b3c4	bl	"_kfun:kotlin.collections.HashMap.allocateValuesArray#internal"
000000000001b3c8	ldrsw	x8, [x21, #0x10]
000000000001b3cc	ldr	w9, [x0, #0x8]
000000000001b3d0	cmp	w9, w8
000000000001b3d4	b.ls	0x1b414
000000000001b3d8	add	x9, x0, x8, lsl #3
000000000001b3dc	ldr	x8, [x9, #0x10]
000000000001b3e0	str	x8, [sp, #0x20]
000000000001b3e4	ldr	xzr, [x0]
000000000001b3e8	str	x20, [x9, #0x10]
000000000001b3ec	str	x8, [x19]
000000000001b3f0	ldr	x9, [sp, #0x8]
000000000001b3f4	str	x9, [x23, #0x110]
000000000001b3f8	mov	x0, x8
000000000001b3fc	ldp	x29, x30, [sp, #0x60]
000000000001b400	ldp	x20, x19, [sp, #0x50]
000000000001b404	ldp	x22, x21, [sp, #0x40]
000000000001b408	ldp	x24, x23, [sp, #0x30]
000000000001b40c	add	sp, sp, #0x70
000000000001b410	ret
000000000001b414	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntryRef#equals(kotlin.Any?){}kotlin.Boolean:
000000000001b418	sub	sp, sp, #0x80
000000000001b41c	stp	x24, x23, [sp, #0x40]
000000000001b420	stp	x22, x21, [sp, #0x50]
000000000001b424	stp	x20, x19, [sp, #0x60]
000000000001b428	stp	x29, x30, [sp, #0x70]
000000000001b42c	add	x29, sp, #0x70
000000000001b430	mov	x20, x1
000000000001b434	mov	x19, x0
000000000001b438	movi.16b	v0, #0x0
000000000001b43c	stp	q0, q0, [sp]
000000000001b440	str	xzr, [sp, #0x30]
000000000001b444	str	q0, [sp, #0x20]
000000000001b448	mov	x24, sp
000000000001b44c	adrp	x0, 81 ; 0x6c000
000000000001b450	add	x0, x0, #0xbb0
000000000001b454	ldr	x8, [x0]
000000000001b458	blr	x8
000000000001b45c	ldr	x23, [x0]
000000000001b460	ldr	x8, [x23, #0x110]
000000000001b464	str	x24, [x23, #0x110]
000000000001b468	mov	x9, #0x700000000
000000000001b46c	stp	x8, x9, [sp, #0x8]
000000000001b470	adr	x8, #0x6b5d3
000000000001b474	nop
000000000001b478	ldarb	w8, [x8]
000000000001b47c	tbz	w8, #0x0, 0x1b484
000000000001b480	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b484	cbz	x20, 0x1b68c
000000000001b488	ldr	x8, [x20]
000000000001b48c	and	x8, x8, #0xfffffffffffffffc
000000000001b490	ldr	x8, [x8]
000000000001b494	ldr	w9, [x8, #0x3c]
000000000001b498	ldr	x8, [x8, #0x40]
000000000001b49c	tbnz	w9, #0x1f, 0x1b4bc
000000000001b4a0	mov	w10, #0xa8
000000000001b4a4	and	x9, x9, x10
000000000001b4a8	lsl	x9, x9, #4
000000000001b4ac	ldr	w8, [x8, x9]
000000000001b4b0	cmp	w8, #0xa8
000000000001b4b4	b.eq	0x1b58c
000000000001b4b8	b	0x1b68c
000000000001b4bc	neg	w10, w9
000000000001b4c0	mvn	w9, w9
000000000001b4c4	cmp	w10, #0x9
000000000001b4c8	b.ge	0x1b514
000000000001b4cc	cmp	w10, #0x2
000000000001b4d0	b.lt	0x1b55c
000000000001b4d4	mov	x10, #0x0
000000000001b4d8	mov	x11, x8
000000000001b4dc	ldr	w12, [x11]
000000000001b4e0	cmp	w12, #0xa7
000000000001b4e4	b.gt	0x1b578
000000000001b4e8	add	x10, x10, #0x1
000000000001b4ec	add	x11, x11, #0x10
000000000001b4f0	cmp	x9, x10
000000000001b4f4	b.ne	0x1b4dc
000000000001b4f8	mov	x10, x9
000000000001b4fc	sxtw	x9, w10
000000000001b500	lsl	x9, x9, #4
000000000001b504	ldr	w8, [x8, x9]
000000000001b508	cmp	w8, #0xa8
000000000001b50c	b.eq	0x1b58c
000000000001b510	b	0x1b68c
000000000001b514	mov	w10, #0x0
000000000001b518	add	w11, w9, w10
000000000001b51c	cmp	w11, #0x0
000000000001b520	cinc	w11, w11, lt
000000000001b524	asr	w11, w11, #1
000000000001b528	sbfiz	x12, x11, #4, #32
000000000001b52c	ldr	w12, [x8, x12]
000000000001b530	cmp	w12, #0xa8
000000000001b534	csinc	w10, w10, w11, ge
000000000001b538	csel	w9, w9, w11, lt
000000000001b53c	cmp	w10, w9
000000000001b540	b.lt	0x1b518
000000000001b544	sxtw	x9, w10
000000000001b548	lsl	x9, x9, #4
000000000001b54c	ldr	w8, [x8, x9]
000000000001b550	cmp	w8, #0xa8
000000000001b554	b.ne	0x1b68c
000000000001b558	b	0x1b58c
000000000001b55c	mov	w10, #0x0
000000000001b560	sxtw	x9, w10
000000000001b564	lsl	x9, x9, #4
000000000001b568	ldr	w8, [x8, x9]
000000000001b56c	cmp	w8, #0xa8
000000000001b570	b.eq	0x1b58c
000000000001b574	b	0x1b68c
000000000001b578	sxtw	x9, w10
000000000001b57c	lsl	x9, x9, #4
000000000001b580	ldr	w8, [x8, x9]
000000000001b584	cmp	w8, #0xa8
000000000001b588	b.ne	0x1b68c
000000000001b58c	add	x21, x24, #0x20
000000000001b590	add	x1, x24, #0x18
000000000001b594	ldr	x8, [x20]
000000000001b598	and	x8, x8, #0xfffffffffffffffc
000000000001b59c	ldr	x8, [x8]
000000000001b5a0	ldr	w9, [x8, #0x3c]
000000000001b5a4	ldr	x8, [x8, #0x40]
000000000001b5a8	tbnz	w9, #0x1f, 0x1b5b8
000000000001b5ac	mov	w10, #0xa8
000000000001b5b0	and	x9, x9, x10
000000000001b5b4	b	0x1b63c
000000000001b5b8	neg	w10, w9
000000000001b5bc	mvn	w9, w9
000000000001b5c0	cmp	w10, #0x9
000000000001b5c4	b.ge	0x1b5fc
000000000001b5c8	cmp	w10, #0x2
000000000001b5cc	b.lt	0x1b630
000000000001b5d0	mov	x10, #0x0
000000000001b5d4	mov	x11, x8
000000000001b5d8	ldr	w12, [x11]
000000000001b5dc	cmp	w12, #0xa7
000000000001b5e0	b.gt	0x1b638
000000000001b5e4	add	x10, x10, #0x1
000000000001b5e8	add	x11, x11, #0x10
000000000001b5ec	cmp	x9, x10
000000000001b5f0	b.ne	0x1b5d8
000000000001b5f4	mov	x10, x9
000000000001b5f8	b	0x1b638
000000000001b5fc	mov	w10, #0x0
000000000001b600	add	w11, w9, w10
000000000001b604	cmp	w11, #0x0
000000000001b608	cinc	w11, w11, lt
000000000001b60c	asr	w11, w11, #1
000000000001b610	sbfiz	x12, x11, #4, #32
000000000001b614	ldr	w12, [x8, x12]
000000000001b618	cmp	w12, #0xa8
000000000001b61c	csinc	w10, w10, w11, ge
000000000001b620	csel	w9, w9, w11, lt
000000000001b624	cmp	w10, w9
000000000001b628	b.lt	0x1b600
000000000001b62c	b	0x1b638
000000000001b630	mov	w10, #0x0
000000000001b634	b	0x1b638
000000000001b638	sxtw	x9, w10
000000000001b63c	add	x8, x8, x9, lsl #4
000000000001b640	ldr	x8, [x8, #0x8]
000000000001b644	ldr	x8, [x8]
000000000001b648	mov	x0, x20
000000000001b64c	blr	x8
000000000001b650	mov	x22, x0
000000000001b654	mov	x0, x19
000000000001b658	mov	x1, x21
000000000001b65c	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0"
000000000001b660	mov	x1, x0
000000000001b664	cbz	x22, 0x1b688
000000000001b668	ldr	x8, [x22]
000000000001b66c	and	x8, x8, #0xfffffffffffffffc
000000000001b670	ldr	x8, [x8]
000000000001b674	ldr	x8, [x8, #0x70]
000000000001b678	mov	x0, x22
000000000001b67c	blr	x8
000000000001b680	cbz	w0, 0x1b690
000000000001b684	b	0x1b6b0
000000000001b688	cbz	x1, 0x1b6b0
000000000001b68c	mov	w0, #0x0
000000000001b690	ldr	x8, [sp, #0x8]
000000000001b694	str	x8, [x23, #0x110]
000000000001b698	ldp	x29, x30, [sp, #0x70]
000000000001b69c	ldp	x20, x19, [sp, #0x60]
000000000001b6a0	ldp	x22, x21, [sp, #0x50]
000000000001b6a4	ldp	x24, x23, [sp, #0x40]
000000000001b6a8	add	sp, sp, #0x80
000000000001b6ac	ret
000000000001b6b0	add	x21, x24, #0x30
000000000001b6b4	add	x1, x24, #0x28
000000000001b6b8	ldr	x8, [x20]
000000000001b6bc	and	x8, x8, #0xfffffffffffffffc
000000000001b6c0	ldr	x8, [x8]
000000000001b6c4	ldr	w9, [x8, #0x3c]
000000000001b6c8	ldr	x8, [x8, #0x40]
000000000001b6cc	tbnz	w9, #0x1f, 0x1b6dc
000000000001b6d0	mov	w10, #0xa8
000000000001b6d4	and	x9, x9, x10
000000000001b6d8	b	0x1b760
000000000001b6dc	neg	w10, w9
000000000001b6e0	mvn	w9, w9
000000000001b6e4	cmp	w10, #0x9
000000000001b6e8	b.ge	0x1b720
000000000001b6ec	cmp	w10, #0x2
000000000001b6f0	b.lt	0x1b754
000000000001b6f4	mov	x10, #0x0
000000000001b6f8	mov	x11, x8
000000000001b6fc	ldr	w12, [x11]
000000000001b700	cmp	w12, #0xa7
000000000001b704	b.gt	0x1b75c
000000000001b708	add	x10, x10, #0x1
000000000001b70c	add	x11, x11, #0x10
000000000001b710	cmp	x9, x10
000000000001b714	b.ne	0x1b6fc
000000000001b718	mov	x10, x9
000000000001b71c	b	0x1b75c
000000000001b720	mov	w10, #0x0
000000000001b724	add	w11, w9, w10
000000000001b728	cmp	w11, #0x0
000000000001b72c	cinc	w11, w11, lt
000000000001b730	asr	w11, w11, #1
000000000001b734	sbfiz	x12, x11, #4, #32
000000000001b738	ldr	w12, [x8, x12]
000000000001b73c	cmp	w12, #0xa8
000000000001b740	csinc	w10, w10, w11, ge
000000000001b744	csel	w9, w9, w11, lt
000000000001b748	cmp	w10, w9
000000000001b74c	b.lt	0x1b724
000000000001b750	b	0x1b75c
000000000001b754	mov	w10, #0x0
000000000001b758	b	0x1b75c
000000000001b75c	sxtw	x9, w10
000000000001b760	add	x8, x8, x9, lsl #4
000000000001b764	ldr	x8, [x8, #0x8]
000000000001b768	ldr	x8, [x8, #0x8]
000000000001b76c	mov	x0, x20
000000000001b770	blr	x8
000000000001b774	mov	x20, x0
000000000001b778	mov	x0, x19
000000000001b77c	mov	x1, x21
000000000001b780	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
000000000001b784	mov	x1, x0
000000000001b788	cbz	x20, 0x1b7a8
000000000001b78c	ldr	x8, [x20]
000000000001b790	and	x8, x8, #0xfffffffffffffffc
000000000001b794	ldr	x8, [x8]
000000000001b798	ldr	x8, [x8, #0x70]
000000000001b79c	mov	x0, x20
000000000001b7a0	blr	x8
000000000001b7a4	b	0x1b690
000000000001b7a8	cmp	x1, #0x0
000000000001b7ac	cset	w0, eq
000000000001b7b0	b	0x1b690
_kfun:kotlin.collections.HashMap.EntryRef#hashCode(){}kotlin.Int:
000000000001b7b4	sub	sp, sp, #0x60
000000000001b7b8	stp	x22, x21, [sp, #0x30]
000000000001b7bc	stp	x20, x19, [sp, #0x40]
000000000001b7c0	stp	x29, x30, [sp, #0x50]
000000000001b7c4	add	x29, sp, #0x50
000000000001b7c8	mov	x19, x0
000000000001b7cc	movi.16b	v0, #0x0
000000000001b7d0	stp	q0, q0, [sp]
000000000001b7d4	str	xzr, [sp, #0x20]
000000000001b7d8	mov	x8, sp
000000000001b7dc	add	x20, x8, #0x20
000000000001b7e0	add	x21, x8, #0x18
000000000001b7e4	adrp	x0, 81 ; 0x6c000
000000000001b7e8	add	x0, x0, #0xbb0
000000000001b7ec	ldr	x9, [x0]
000000000001b7f0	blr	x9
000000000001b7f4	ldr	x22, [x0]
000000000001b7f8	ldr	x9, [x22, #0x110]
000000000001b7fc	str	x8, [x22, #0x110]
000000000001b800	mov	x8, #0x500000000
000000000001b804	stp	x9, x8, [sp, #0x8]
000000000001b808	adr	x8, #0x6b23b
000000000001b80c	nop
000000000001b810	ldarb	w8, [x8]
000000000001b814	tbz	w8, #0x0, 0x1b81c
000000000001b818	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b81c	mov	x0, x19
000000000001b820	mov	x1, x21
000000000001b824	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0"
000000000001b828	cbz	x0, 0x1b888
000000000001b82c	ldr	x8, [x0]
000000000001b830	and	x8, x8, #0xfffffffffffffffc
000000000001b834	ldr	x8, [x8]
000000000001b838	ldr	x8, [x8, #0x78]
000000000001b83c	blr	x8
000000000001b840	mov	x21, x0
000000000001b844	mov	x0, x19
000000000001b848	mov	x1, x20
000000000001b84c	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
000000000001b850	cbz	x0, 0x1b868
000000000001b854	ldr	x8, [x0]
000000000001b858	and	x8, x8, #0xfffffffffffffffc
000000000001b85c	ldr	x8, [x8]
000000000001b860	ldr	x8, [x8, #0x78]
000000000001b864	blr	x8
000000000001b868	eor	w0, w21, w0
000000000001b86c	ldr	x8, [sp, #0x8]
000000000001b870	str	x8, [x22, #0x110]
000000000001b874	ldp	x29, x30, [sp, #0x50]
000000000001b878	ldp	x20, x19, [sp, #0x40]
000000000001b87c	ldp	x22, x21, [sp, #0x30]
000000000001b880	add	sp, sp, #0x60
000000000001b884	ret
000000000001b888	mov	w21, #0x0
000000000001b88c	mov	x0, x19
000000000001b890	mov	x1, x20
000000000001b894	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
000000000001b898	cbnz	x0, 0x1b854
000000000001b89c	b	0x1b868
_kfun:kotlin.collections.HashMap.EntryRef#toString(){}kotlin.String:
000000000001b8a0	sub	sp, sp, #0xd0
000000000001b8a4	stp	x26, x25, [sp, #0x80]
000000000001b8a8	stp	x24, x23, [sp, #0x90]
000000000001b8ac	stp	x22, x21, [sp, #0xa0]
000000000001b8b0	stp	x20, x19, [sp, #0xb0]
000000000001b8b4	stp	x29, x30, [sp, #0xc0]
000000000001b8b8	add	x29, sp, #0xc0
000000000001b8bc	mov	x19, x1
000000000001b8c0	mov	x20, x0
000000000001b8c4	movi.16b	v0, #0x0
000000000001b8c8	stp	q0, q0, [sp, #0x20]
000000000001b8cc	str	xzr, [sp, #0x70]
000000000001b8d0	stp	q0, q0, [sp, #0x50]
000000000001b8d4	str	q0, [sp, #0x40]
000000000001b8d8	add	x26, sp, #0x20
000000000001b8dc	add	x24, x26, #0x20
000000000001b8e0	add	x23, x26, #0x30
000000000001b8e4	add	x21, x26, #0x40
000000000001b8e8	add	x22, x26, #0x38
000000000001b8ec	stp	xzr, xzr, [sp, #0x10]
000000000001b8f0	adr	x8, #0x40aa0
000000000001b8f4	nop
000000000001b8f8	orr	x8, x8, #0x3
000000000001b8fc	str	x8, [sp, #0x8]
000000000001b900	adrp	x0, 81 ; 0x6c000
000000000001b904	add	x0, x0, #0xbb0
000000000001b908	ldr	x8, [x0]
000000000001b90c	blr	x8
000000000001b910	ldr	x25, [x0]
000000000001b914	ldr	x8, [x25, #0x110]
000000000001b918	str	x26, [x25, #0x110]
000000000001b91c	mov	x9, #0xb00000000
000000000001b920	stp	x8, x9, [sp, #0x28]
000000000001b924	adr	x8, #0x6b11f
000000000001b928	nop
000000000001b92c	ldarb	w8, [x8]
000000000001b930	tbz	w8, #0x0, 0x1b938
000000000001b934	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b938	add	x8, sp, #0x8
000000000001b93c	str	x8, [sp, #0x38]
000000000001b940	add	x0, sp, #0x8
000000000001b944	mov	w1, #0xa
000000000001b948	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000001b94c	mov	x0, x20
000000000001b950	mov	x1, x24
000000000001b954	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0"
000000000001b958	cbz	x0, 0x1b980
000000000001b95c	add	x8, sp, #0x20
000000000001b960	add	x1, x8, #0x28
000000000001b964	ldr	x8, [x0]
000000000001b968	and	x8, x8, #0xfffffffffffffffc
000000000001b96c	ldr	x8, [x8]
000000000001b970	ldr	x8, [x8, #0x80]
000000000001b974	blr	x8
000000000001b978	mov	x1, x0
000000000001b97c	b	0x1b984
000000000001b980	mov	x1, #0x0
000000000001b984	add	x0, sp, #0x8
000000000001b988	mov	x2, x23
000000000001b98c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001b990	adr	x1, #0x4a050
000000000001b994	nop
000000000001b998	add	x0, sp, #0x8
000000000001b99c	mov	x2, x22
000000000001b9a0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001b9a4	mov	x0, x20
000000000001b9a8	mov	x1, x21
000000000001b9ac	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
000000000001b9b0	cbz	x0, 0x1b9d4
000000000001b9b4	add	x1, x26, #0x48
000000000001b9b8	ldr	x8, [x0]
000000000001b9bc	and	x8, x8, #0xfffffffffffffffc
000000000001b9c0	ldr	x8, [x8]
000000000001b9c4	ldr	x8, [x8, #0x80]
000000000001b9c8	blr	x8
000000000001b9cc	mov	x1, x0
000000000001b9d0	b	0x1b9d8
000000000001b9d4	mov	x1, #0x0
000000000001b9d8	add	x8, sp, #0x20
000000000001b9dc	add	x2, x8, #0x50
000000000001b9e0	add	x0, sp, #0x8
000000000001b9e4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001b9e8	add	x0, sp, #0x8
000000000001b9ec	mov	x1, x19
000000000001b9f0	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000001b9f4	str	x0, [x19]
000000000001b9f8	ldr	x8, [sp, #0x28]
000000000001b9fc	str	x8, [x25, #0x110]
000000000001ba00	ldp	x29, x30, [sp, #0xc0]
000000000001ba04	ldp	x20, x19, [sp, #0xb0]
000000000001ba08	ldp	x22, x21, [sp, #0xa0]
000000000001ba0c	ldp	x24, x23, [sp, #0x90]
000000000001ba10	ldp	x26, x25, [sp, #0x80]
000000000001ba14	add	sp, sp, #0xd0
000000000001ba18	ret
_kfun:kotlin.collections.HashMapKeys#<get-size>(){}kotlin.Int:
000000000001ba1c	stp	x20, x19, [sp, #-0x20]!
000000000001ba20	stp	x29, x30, [sp, #0x10]
000000000001ba24	add	x29, sp, #0x10
000000000001ba28	mov	x19, x0
000000000001ba2c	adr	x8, #0x6b017
000000000001ba30	nop
000000000001ba34	ldarb	w8, [x8]
000000000001ba38	tbz	w8, #0x0, 0x1ba40
000000000001ba3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ba40	ldr	x8, [x19, #0x8]
000000000001ba44	ldr	w0, [x8, #0x4c]
000000000001ba48	ldp	x29, x30, [sp, #0x10]
000000000001ba4c	ldp	x20, x19, [sp], #0x20
000000000001ba50	ret
_kfun:kotlin.collections.HashMapKeys#isEmpty(){}kotlin.Boolean:
000000000001ba54	stp	x20, x19, [sp, #-0x20]!
000000000001ba58	stp	x29, x30, [sp, #0x10]
000000000001ba5c	add	x29, sp, #0x10
000000000001ba60	mov	x19, x0
000000000001ba64	adr	x8, #0x6afdf
000000000001ba68	nop
000000000001ba6c	ldarb	w8, [x8]
000000000001ba70	tbz	w8, #0x0, 0x1ba78
000000000001ba74	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ba78	ldr	x8, [x19, #0x8]
000000000001ba7c	ldr	w8, [x8, #0x4c]
000000000001ba80	cmp	w8, #0x0
000000000001ba84	cset	w0, eq
000000000001ba88	ldp	x29, x30, [sp, #0x10]
000000000001ba8c	ldp	x20, x19, [sp], #0x20
000000000001ba90	ret
_kfun:kotlin.collections.HashMapKeys#contains(1:0){}kotlin.Boolean:
000000000001ba94	stp	x20, x19, [sp, #-0x20]!
000000000001ba98	stp	x29, x30, [sp, #0x10]
000000000001ba9c	add	x29, sp, #0x10
000000000001baa0	mov	x19, x1
000000000001baa4	mov	x20, x0
000000000001baa8	adr	x8, #0x6af9b
000000000001baac	nop
000000000001bab0	ldarb	w8, [x8]
000000000001bab4	tbz	w8, #0x0, 0x1babc
000000000001bab8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001babc	ldr	x0, [x20, #0x8]
000000000001bac0	mov	x1, x19
000000000001bac4	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001bac8	mvn	w8, w0
000000000001bacc	lsr	w0, w8, #31
000000000001bad0	ldp	x29, x30, [sp, #0x10]
000000000001bad4	ldp	x20, x19, [sp], #0x20
000000000001bad8	ret
_kfun:kotlin.collections.HashMapKeys#getElement(1:0){}1:0?:
000000000001badc	stp	x22, x21, [sp, #-0x30]!
000000000001bae0	stp	x20, x19, [sp, #0x10]
000000000001bae4	stp	x29, x30, [sp, #0x20]
000000000001bae8	add	x29, sp, #0x20
000000000001baec	mov	x19, x2
000000000001baf0	mov	x20, x1
000000000001baf4	mov	x21, x0
000000000001baf8	adr	x8, #0x6af4b
000000000001bafc	nop
000000000001bb00	ldarb	w8, [x8]
000000000001bb04	tbz	w8, #0x0, 0x1bb0c
000000000001bb08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bb0c	ldr	x0, [x21, #0x8]
000000000001bb10	mov	x1, x20
000000000001bb14	mov	x2, x19
000000000001bb18	bl	"_kfun:kotlin.collections.HashMap#getKey(1:0){}1:0?"
000000000001bb1c	str	x0, [x19]
000000000001bb20	ldp	x29, x30, [sp, #0x20]
000000000001bb24	ldp	x20, x19, [sp, #0x10]
000000000001bb28	ldp	x22, x21, [sp], #0x30
000000000001bb2c	ret
_kfun:kotlin.collections.HashMapKeys#clear(){}:
000000000001bb30	stp	x20, x19, [sp, #-0x20]!
000000000001bb34	stp	x29, x30, [sp, #0x10]
000000000001bb38	add	x29, sp, #0x10
000000000001bb3c	mov	x19, x0
000000000001bb40	adr	x8, #0x6af03
000000000001bb44	nop
000000000001bb48	ldarb	w8, [x8]
000000000001bb4c	tbz	w8, #0x0, 0x1bb54
000000000001bb50	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bb54	ldr	x0, [x19, #0x8]
000000000001bb58	ldp	x29, x30, [sp, #0x10]
000000000001bb5c	ldp	x20, x19, [sp], #0x20
000000000001bb60	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashMapKeys#add(1:0){}kotlin.Boolean:
000000000001bb64	sub	sp, sp, #0x40
000000000001bb68	stp	x20, x19, [sp, #0x20]
000000000001bb6c	stp	x29, x30, [sp, #0x30]
000000000001bb70	add	x29, sp, #0x30
000000000001bb74	movi.16b	v0, #0x0
000000000001bb78	stp	q0, q0, [sp]
000000000001bb7c	adrp	x0, 81 ; 0x6c000
000000000001bb80	add	x0, x0, #0xbb0
000000000001bb84	ldr	x8, [x0]
000000000001bb88	blr	x8
000000000001bb8c	ldr	x19, [x0]
000000000001bb90	ldr	x8, [x19, #0x110]
000000000001bb94	mov	x9, sp
000000000001bb98	str	x9, [x19, #0x110]
000000000001bb9c	mov	x9, #0x400000000
000000000001bba0	stp	x8, x9, [sp, #0x8]
000000000001bba4	adr	x8, #0x6ae9f
000000000001bba8	nop
000000000001bbac	ldarb	w8, [x8]
000000000001bbb0	tbz	w8, #0x0, 0x1bbb8
000000000001bbb4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bbb8	ldr	x8, [x19, #0x118]
000000000001bbbc	add	x0, x8, #0x70
000000000001bbc0	mov	w1, #0x38
000000000001bbc4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001bbc8	mov	x19, x0
000000000001bbcc	adr	x8, #0x3d1f4
000000000001bbd0	nop
000000000001bbd4	str	x8, [x19, #0x10]!
000000000001bbd8	stur	xzr, [x19, #-0x8]
000000000001bbdc	str	x19, [sp, #0x18]
000000000001bbe0	mov	x0, x19
000000000001bbe4	mov	x1, #0x0
000000000001bbe8	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001bbec	mov	x0, x19
000000000001bbf0	bl	_ThrowException
_kfun:kotlin.collections.HashMapKeys#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001bbf4	sub	sp, sp, #0x40
000000000001bbf8	stp	x20, x19, [sp, #0x20]
000000000001bbfc	stp	x29, x30, [sp, #0x30]
000000000001bc00	add	x29, sp, #0x30
000000000001bc04	movi.16b	v0, #0x0
000000000001bc08	stp	q0, q0, [sp]
000000000001bc0c	adrp	x0, 81 ; 0x6c000
000000000001bc10	add	x0, x0, #0xbb0
000000000001bc14	ldr	x8, [x0]
000000000001bc18	blr	x8
000000000001bc1c	ldr	x19, [x0]
000000000001bc20	ldr	x8, [x19, #0x110]
000000000001bc24	mov	x9, sp
000000000001bc28	str	x9, [x19, #0x110]
000000000001bc2c	mov	x9, #0x400000000
000000000001bc30	stp	x8, x9, [sp, #0x8]
000000000001bc34	adr	x8, #0x6ae0f
000000000001bc38	nop
000000000001bc3c	ldarb	w8, [x8]
000000000001bc40	tbz	w8, #0x0, 0x1bc48
000000000001bc44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bc48	ldr	x8, [x19, #0x118]
000000000001bc4c	add	x0, x8, #0x70
000000000001bc50	mov	w1, #0x38
000000000001bc54	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001bc58	mov	x19, x0
000000000001bc5c	adr	x8, #0x3d164
000000000001bc60	nop
000000000001bc64	str	x8, [x19, #0x10]!
000000000001bc68	stur	xzr, [x19, #-0x8]
000000000001bc6c	str	x19, [sp, #0x18]
000000000001bc70	mov	x0, x19
000000000001bc74	mov	x1, #0x0
000000000001bc78	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001bc7c	mov	x0, x19
000000000001bc80	bl	_ThrowException
_kfun:kotlin.collections.HashMapKeys#remove(1:0){}kotlin.Boolean:
000000000001bc84	stp	x20, x19, [sp, #-0x20]!
000000000001bc88	stp	x29, x30, [sp, #0x10]
000000000001bc8c	add	x29, sp, #0x10
000000000001bc90	mov	x19, x1
000000000001bc94	mov	x20, x0
000000000001bc98	adr	x8, #0x6adab
000000000001bc9c	nop
000000000001bca0	ldarb	w8, [x8]
000000000001bca4	tbz	w8, #0x0, 0x1bcac
000000000001bca8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bcac	ldr	x0, [x20, #0x8]
000000000001bcb0	mov	x1, x19
000000000001bcb4	bl	"_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int"
000000000001bcb8	mvn	w8, w0
000000000001bcbc	lsr	w0, w8, #31
000000000001bcc0	ldp	x29, x30, [sp, #0x10]
000000000001bcc4	ldp	x20, x19, [sp], #0x20
000000000001bcc8	ret
_kfun:kotlin.collections.HashMapKeys#iterator(){}kotlin.collections.MutableIterator<1:0>:
000000000001bccc	stp	x20, x19, [sp, #-0x20]!
000000000001bcd0	stp	x29, x30, [sp, #0x10]
000000000001bcd4	add	x29, sp, #0x10
000000000001bcd8	mov	x19, x1
000000000001bcdc	mov	x20, x0
000000000001bce0	adr	x8, #0x6ad63
000000000001bce4	nop
000000000001bce8	ldarb	w8, [x8]
000000000001bcec	tbz	w8, #0x0, 0x1bcf4
000000000001bcf0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bcf4	ldr	x0, [x20, #0x8]
000000000001bcf8	mov	x1, x19
000000000001bcfc	bl	"_kfun:kotlin.collections.HashMap#keysIterator(){}kotlin.collections.HashMap.KeysItr<1:0,1:1>"
000000000001bd00	str	x0, [x19]
000000000001bd04	ldp	x29, x30, [sp, #0x10]
000000000001bd08	ldp	x20, x19, [sp], #0x20
000000000001bd0c	ret
_kfun:kotlin.collections.HashMapKeys#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001bd10	stp	x20, x19, [sp, #-0x20]!
000000000001bd14	stp	x29, x30, [sp, #0x10]
000000000001bd18	add	x29, sp, #0x10
000000000001bd1c	mov	x19, x1
000000000001bd20	mov	x20, x0
000000000001bd24	adr	x8, #0x6ad1f
000000000001bd28	nop
000000000001bd2c	ldarb	w8, [x8]
000000000001bd30	tbz	w8, #0x0, 0x1bd38
000000000001bd34	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bd38	ldr	x0, [x20, #0x8]
000000000001bd3c	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001bd40	mov	x0, x20
000000000001bd44	mov	x1, x19
000000000001bd48	ldp	x29, x30, [sp, #0x10]
000000000001bd4c	ldp	x20, x19, [sp], #0x20
000000000001bd50	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapKeys#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001bd54	stp	x20, x19, [sp, #-0x20]!
000000000001bd58	stp	x29, x30, [sp, #0x10]
000000000001bd5c	add	x29, sp, #0x10
000000000001bd60	mov	x19, x1
000000000001bd64	mov	x20, x0
000000000001bd68	adr	x8, #0x6acdb
000000000001bd6c	nop
000000000001bd70	ldarb	w8, [x8]
000000000001bd74	tbz	w8, #0x0, 0x1bd7c
000000000001bd78	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bd7c	ldr	x0, [x20, #0x8]
000000000001bd80	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001bd84	mov	x0, x20
000000000001bd88	mov	x1, x19
000000000001bd8c	ldp	x29, x30, [sp, #0x10]
000000000001bd90	ldp	x20, x19, [sp], #0x20
000000000001bd94	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapValues#<get-size>(){}kotlin.Int:
000000000001bd98	stp	x20, x19, [sp, #-0x20]!
000000000001bd9c	stp	x29, x30, [sp, #0x10]
000000000001bda0	add	x29, sp, #0x10
000000000001bda4	mov	x19, x0
000000000001bda8	adr	x8, #0x6ac9b
000000000001bdac	nop
000000000001bdb0	ldarb	w8, [x8]
000000000001bdb4	tbz	w8, #0x0, 0x1bdbc
000000000001bdb8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bdbc	ldr	x8, [x19, #0x8]
000000000001bdc0	ldr	w0, [x8, #0x4c]
000000000001bdc4	ldp	x29, x30, [sp, #0x10]
000000000001bdc8	ldp	x20, x19, [sp], #0x20
000000000001bdcc	ret
_kfun:kotlin.collections.HashMapValues#isEmpty(){}kotlin.Boolean:
000000000001bdd0	stp	x20, x19, [sp, #-0x20]!
000000000001bdd4	stp	x29, x30, [sp, #0x10]
000000000001bdd8	add	x29, sp, #0x10
000000000001bddc	mov	x19, x0
000000000001bde0	adr	x8, #0x6ac63
000000000001bde4	nop
000000000001bde8	ldarb	w8, [x8]
000000000001bdec	tbz	w8, #0x0, 0x1bdf4
000000000001bdf0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bdf4	ldr	x8, [x19, #0x8]
000000000001bdf8	ldr	w8, [x8, #0x4c]
000000000001bdfc	cmp	w8, #0x0
000000000001be00	cset	w0, eq
000000000001be04	ldp	x29, x30, [sp, #0x10]
000000000001be08	ldp	x20, x19, [sp], #0x20
000000000001be0c	ret
_kfun:kotlin.collections.HashMapValues#contains(1:0){}kotlin.Boolean:
000000000001be10	stp	x20, x19, [sp, #-0x20]!
000000000001be14	stp	x29, x30, [sp, #0x10]
000000000001be18	add	x29, sp, #0x10
000000000001be1c	mov	x19, x1
000000000001be20	mov	x20, x0
000000000001be24	adr	x8, #0x6ac1f
000000000001be28	nop
000000000001be2c	ldarb	w8, [x8]
000000000001be30	tbz	w8, #0x0, 0x1be38
000000000001be34	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001be38	ldr	x0, [x20, #0x8]
000000000001be3c	mov	x1, x19
000000000001be40	bl	"_kfun:kotlin.collections.HashMap.findValue#internal"
000000000001be44	mvn	w8, w0
000000000001be48	lsr	w0, w8, #31
000000000001be4c	ldp	x29, x30, [sp, #0x10]
000000000001be50	ldp	x20, x19, [sp], #0x20
000000000001be54	ret
_kfun:kotlin.collections.HashMapValues#add(1:0){}kotlin.Boolean:
000000000001be58	sub	sp, sp, #0x40
000000000001be5c	stp	x20, x19, [sp, #0x20]
000000000001be60	stp	x29, x30, [sp, #0x30]
000000000001be64	add	x29, sp, #0x30
000000000001be68	movi.16b	v0, #0x0
000000000001be6c	stp	q0, q0, [sp]
000000000001be70	adrp	x0, 81 ; 0x6c000
000000000001be74	add	x0, x0, #0xbb0
000000000001be78	ldr	x8, [x0]
000000000001be7c	blr	x8
000000000001be80	ldr	x19, [x0]
000000000001be84	ldr	x8, [x19, #0x110]
000000000001be88	mov	x9, sp
000000000001be8c	str	x9, [x19, #0x110]
000000000001be90	mov	x9, #0x400000000
000000000001be94	stp	x8, x9, [sp, #0x8]
000000000001be98	adr	x8, #0x6abab
000000000001be9c	nop
000000000001bea0	ldarb	w8, [x8]
000000000001bea4	tbz	w8, #0x0, 0x1beac
000000000001bea8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001beac	ldr	x8, [x19, #0x118]
000000000001beb0	add	x0, x8, #0x70
000000000001beb4	mov	w1, #0x38
000000000001beb8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001bebc	mov	x19, x0
000000000001bec0	adr	x8, #0x3cf00
000000000001bec4	nop
000000000001bec8	str	x8, [x19, #0x10]!
000000000001becc	stur	xzr, [x19, #-0x8]
000000000001bed0	str	x19, [sp, #0x18]
000000000001bed4	mov	x0, x19
000000000001bed8	mov	x1, #0x0
000000000001bedc	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001bee0	mov	x0, x19
000000000001bee4	bl	_ThrowException
_kfun:kotlin.collections.HashMapValues#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001bee8	sub	sp, sp, #0x40
000000000001beec	stp	x20, x19, [sp, #0x20]
000000000001bef0	stp	x29, x30, [sp, #0x30]
000000000001bef4	add	x29, sp, #0x30
000000000001bef8	movi.16b	v0, #0x0
000000000001befc	stp	q0, q0, [sp]
000000000001bf00	adrp	x0, 81 ; 0x6c000
000000000001bf04	add	x0, x0, #0xbb0
000000000001bf08	ldr	x8, [x0]
000000000001bf0c	blr	x8
000000000001bf10	ldr	x19, [x0]
000000000001bf14	ldr	x8, [x19, #0x110]
000000000001bf18	mov	x9, sp
000000000001bf1c	str	x9, [x19, #0x110]
000000000001bf20	mov	x9, #0x400000000
000000000001bf24	stp	x8, x9, [sp, #0x8]
000000000001bf28	adr	x8, #0x6ab1b
000000000001bf2c	nop
000000000001bf30	ldarb	w8, [x8]
000000000001bf34	tbz	w8, #0x0, 0x1bf3c
000000000001bf38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bf3c	ldr	x8, [x19, #0x118]
000000000001bf40	add	x0, x8, #0x70
000000000001bf44	mov	w1, #0x38
000000000001bf48	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001bf4c	mov	x19, x0
000000000001bf50	adr	x8, #0x3ce70
000000000001bf54	nop
000000000001bf58	str	x8, [x19, #0x10]!
000000000001bf5c	stur	xzr, [x19, #-0x8]
000000000001bf60	str	x19, [sp, #0x18]
000000000001bf64	mov	x0, x19
000000000001bf68	mov	x1, #0x0
000000000001bf6c	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001bf70	mov	x0, x19
000000000001bf74	bl	_ThrowException
_kfun:kotlin.collections.HashMapValues#clear(){}:
000000000001bf78	stp	x20, x19, [sp, #-0x20]!
000000000001bf7c	stp	x29, x30, [sp, #0x10]
000000000001bf80	add	x29, sp, #0x10
000000000001bf84	mov	x19, x0
000000000001bf88	adr	x8, #0x6aabb
000000000001bf8c	nop
000000000001bf90	ldarb	w8, [x8]
000000000001bf94	tbz	w8, #0x0, 0x1bf9c
000000000001bf98	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bf9c	ldr	x0, [x19, #0x8]
000000000001bfa0	ldp	x29, x30, [sp, #0x10]
000000000001bfa4	ldp	x20, x19, [sp], #0x20
000000000001bfa8	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashMapValues#iterator(){}kotlin.collections.MutableIterator<1:0>:
000000000001bfac	stp	x22, x21, [sp, #-0x30]!
000000000001bfb0	stp	x20, x19, [sp, #0x10]
000000000001bfb4	stp	x29, x30, [sp, #0x20]
000000000001bfb8	add	x29, sp, #0x20
000000000001bfbc	mov	x19, x1
000000000001bfc0	mov	x20, x0
000000000001bfc4	adr	x8, #0x6aa7f
000000000001bfc8	nop
000000000001bfcc	ldarb	w8, [x8]
000000000001bfd0	tbz	w8, #0x0, 0x1bfd8
000000000001bfd4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bfd8	ldr	x21, [x20, #0x8]
000000000001bfdc	adrp	x0, 81 ; 0x6c000
000000000001bfe0	add	x0, x0, #0xbb0
000000000001bfe4	ldr	x8, [x0]
000000000001bfe8	blr	x8
000000000001bfec	ldr	x8, [x0]
000000000001bff0	ldr	x8, [x8, #0x118]
000000000001bff4	add	x0, x8, #0x70
000000000001bff8	mov	w1, #0x20
000000000001bffc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001c000	mov	x20, x0
000000000001c004	adr	x8, #0x3f77c
000000000001c008	nop
000000000001c00c	str	x8, [x20, #0x10]!
000000000001c010	stur	xzr, [x20, #-0x8]
000000000001c014	str	x20, [x19]
000000000001c018	str	x21, [x20, #0x8]
000000000001c01c	mov	w8, #-0x1
000000000001c020	str	w8, [x20, #0x14]
000000000001c024	mov	x0, x20
000000000001c028	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001c02c	str	x20, [x19]
000000000001c030	mov	x0, x20
000000000001c034	ldp	x29, x30, [sp, #0x20]
000000000001c038	ldp	x20, x19, [sp, #0x10]
000000000001c03c	ldp	x22, x21, [sp], #0x30
000000000001c040	ret
_kfun:kotlin.collections.HashMapValues#remove(1:0){}kotlin.Boolean:
000000000001c044	stp	x20, x19, [sp, #-0x20]!
000000000001c048	stp	x29, x30, [sp, #0x10]
000000000001c04c	add	x29, sp, #0x10
000000000001c050	mov	x19, x1
000000000001c054	mov	x20, x0
000000000001c058	adr	x8, #0x6a9eb
000000000001c05c	nop
000000000001c060	ldarb	w8, [x8]
000000000001c064	tbz	w8, #0x0, 0x1c06c
000000000001c068	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c06c	ldr	x20, [x20, #0x8]
000000000001c070	mov	x0, x20
000000000001c074	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001c078	mov	x0, x20
000000000001c07c	mov	x1, x19
000000000001c080	bl	"_kfun:kotlin.collections.HashMap.findValue#internal"
000000000001c084	tbnz	w0, #0x1f, 0x1c0a4
000000000001c088	mov	x1, x0
000000000001c08c	mov	x0, x20
000000000001c090	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
000000000001c094	mov	w0, #0x1
000000000001c098	ldp	x29, x30, [sp, #0x10]
000000000001c09c	ldp	x20, x19, [sp], #0x20
000000000001c0a0	ret
000000000001c0a4	mov	w0, #0x0
000000000001c0a8	ldp	x29, x30, [sp, #0x10]
000000000001c0ac	ldp	x20, x19, [sp], #0x20
000000000001c0b0	ret
_kfun:kotlin.collections.HashMapValues#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001c0b4	stp	x20, x19, [sp, #-0x20]!
000000000001c0b8	stp	x29, x30, [sp, #0x10]
000000000001c0bc	add	x29, sp, #0x10
000000000001c0c0	mov	x19, x1
000000000001c0c4	mov	x20, x0
000000000001c0c8	adr	x8, #0x6a97b
000000000001c0cc	nop
000000000001c0d0	ldarb	w8, [x8]
000000000001c0d4	tbz	w8, #0x0, 0x1c0dc
000000000001c0d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c0dc	ldr	x0, [x20, #0x8]
000000000001c0e0	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001c0e4	mov	x0, x20
000000000001c0e8	mov	x1, x19
000000000001c0ec	ldp	x29, x30, [sp, #0x10]
000000000001c0f0	ldp	x20, x19, [sp], #0x20
000000000001c0f4	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapValues#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001c0f8	stp	x20, x19, [sp, #-0x20]!
000000000001c0fc	stp	x29, x30, [sp, #0x10]
000000000001c100	add	x29, sp, #0x10
000000000001c104	mov	x19, x1
000000000001c108	mov	x20, x0
000000000001c10c	adr	x8, #0x6a937
000000000001c110	nop
000000000001c114	ldarb	w8, [x8]
000000000001c118	tbz	w8, #0x0, 0x1c120
000000000001c11c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c120	ldr	x0, [x20, #0x8]
000000000001c124	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001c128	mov	x0, x20
000000000001c12c	mov	x1, x19
000000000001c130	ldp	x29, x30, [sp, #0x10]
000000000001c134	ldp	x20, x19, [sp], #0x20
000000000001c138	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySet#getEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.collections.MutableMap.MutableEntry<1:0,1:1>?:
000000000001c13c	sub	sp, sp, #0x90
000000000001c140	stp	x26, x25, [sp, #0x40]
000000000001c144	stp	x24, x23, [sp, #0x50]
000000000001c148	stp	x22, x21, [sp, #0x60]
000000000001c14c	stp	x20, x19, [sp, #0x70]
000000000001c150	stp	x29, x30, [sp, #0x80]
000000000001c154	add	x29, sp, #0x80
000000000001c158	mov	x19, x2
000000000001c15c	mov	x22, x1
000000000001c160	mov	x20, x0
000000000001c164	adr	x8, #0x6a8df
000000000001c168	nop
000000000001c16c	ldarb	w8, [x8]
000000000001c170	tbz	w8, #0x0, 0x1c178
000000000001c174	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c178	ldr	x21, [x20, #0x8]
000000000001c17c	movi.16b	v0, #0x0
000000000001c180	stp	q0, q0, [sp]
000000000001c184	str	xzr, [sp, #0x30]
000000000001c188	str	q0, [sp, #0x20]
000000000001c18c	mov	x24, sp
000000000001c190	add	x1, x24, #0x18
000000000001c194	adrp	x20, 80 ; 0x6c000
000000000001c198	add	x20, x20, #0xbb0
000000000001c19c	ldr	x25, [x20]
000000000001c1a0	mov	x0, x20
000000000001c1a4	blr	x25
000000000001c1a8	ldr	x8, [x0]
000000000001c1ac	ldr	x9, [x8, #0x110]
000000000001c1b0	str	x24, [x8, #0x110]
000000000001c1b4	mov	x8, #0x700000000
000000000001c1b8	stp	x9, x8, [sp, #0x8]
000000000001c1bc	ldr	x8, [x22]
000000000001c1c0	and	x8, x8, #0xfffffffffffffffc
000000000001c1c4	ldr	x8, [x8]
000000000001c1c8	ldr	w9, [x8, #0x3c]
000000000001c1cc	ldr	x8, [x8, #0x40]
000000000001c1d0	tbnz	w9, #0x1f, 0x1c1e0
000000000001c1d4	mov	w10, #0xa8
000000000001c1d8	and	x9, x9, x10
000000000001c1dc	b	0x1c264
000000000001c1e0	neg	w10, w9
000000000001c1e4	mvn	w9, w9
000000000001c1e8	cmp	w10, #0x9
000000000001c1ec	b.ge	0x1c224
000000000001c1f0	cmp	w10, #0x2
000000000001c1f4	b.lt	0x1c258
000000000001c1f8	mov	x10, #0x0
000000000001c1fc	mov	x11, x8
000000000001c200	ldr	w12, [x11]
000000000001c204	cmp	w12, #0xa7
000000000001c208	b.gt	0x1c260
000000000001c20c	add	x10, x10, #0x1
000000000001c210	add	x11, x11, #0x10
000000000001c214	cmp	x9, x10
000000000001c218	b.ne	0x1c200
000000000001c21c	mov	x10, x9
000000000001c220	b	0x1c260
000000000001c224	mov	w10, #0x0
000000000001c228	add	w11, w9, w10
000000000001c22c	cmp	w11, #0x0
000000000001c230	cinc	w11, w11, lt
000000000001c234	asr	w11, w11, #1
000000000001c238	sbfiz	x12, x11, #4, #32
000000000001c23c	ldr	w12, [x8, x12]
000000000001c240	cmp	w12, #0xa8
000000000001c244	csinc	w10, w10, w11, ge
000000000001c248	csel	w9, w9, w11, lt
000000000001c24c	cmp	w10, w9
000000000001c250	b.lt	0x1c228
000000000001c254	b	0x1c260
000000000001c258	mov	w10, #0x0
000000000001c25c	b	0x1c260
000000000001c260	sxtw	x9, w10
000000000001c264	add	x8, x8, x9, lsl #4
000000000001c268	ldr	x8, [x8, #0x8]
000000000001c26c	ldr	x8, [x8]
000000000001c270	mov	x0, x22
000000000001c274	blr	x8
000000000001c278	mov	x1, x0
000000000001c27c	mov	x0, x21
000000000001c280	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001c284	tbnz	w0, #0x1f, 0x1c3d8
000000000001c288	ldr	x8, [x21, #0x10]
000000000001c28c	str	x8, [sp, #0x20]
000000000001c290	cbz	x8, 0x1c418
000000000001c294	mov	x23, x0
000000000001c298	ldr	w9, [x8, #0x8]
000000000001c29c	cmp	w9, w0
000000000001c2a0	b.ls	0x1c41c
000000000001c2a4	add	x1, x24, #0x30
000000000001c2a8	add	x8, x8, w23, sxtw #3
000000000001c2ac	ldr	x24, [x8, #0x10]
000000000001c2b0	str	x24, [sp, #0x28]
000000000001c2b4	ldr	x8, [x22]
000000000001c2b8	and	x8, x8, #0xfffffffffffffffc
000000000001c2bc	ldr	x8, [x8]
000000000001c2c0	ldr	w9, [x8, #0x3c]
000000000001c2c4	ldr	x8, [x8, #0x40]
000000000001c2c8	tbnz	w9, #0x1f, 0x1c2d8
000000000001c2cc	mov	w10, #0xa8
000000000001c2d0	and	x9, x9, x10
000000000001c2d4	b	0x1c35c
000000000001c2d8	neg	w10, w9
000000000001c2dc	mvn	w9, w9
000000000001c2e0	cmp	w10, #0x9
000000000001c2e4	b.ge	0x1c31c
000000000001c2e8	cmp	w10, #0x2
000000000001c2ec	b.lt	0x1c350
000000000001c2f0	mov	x10, #0x0
000000000001c2f4	mov	x11, x8
000000000001c2f8	ldr	w12, [x11]
000000000001c2fc	cmp	w12, #0xa7
000000000001c300	b.gt	0x1c358
000000000001c304	add	x10, x10, #0x1
000000000001c308	add	x11, x11, #0x10
000000000001c30c	cmp	x9, x10
000000000001c310	b.ne	0x1c2f8
000000000001c314	mov	x10, x9
000000000001c318	b	0x1c358
000000000001c31c	mov	w10, #0x0
000000000001c320	add	w11, w9, w10
000000000001c324	cmp	w11, #0x0
000000000001c328	cinc	w11, w11, lt
000000000001c32c	asr	w11, w11, #1
000000000001c330	sbfiz	x12, x11, #4, #32
000000000001c334	ldr	w12, [x8, x12]
000000000001c338	cmp	w12, #0xa8
000000000001c33c	csinc	w10, w10, w11, ge
000000000001c340	csel	w9, w9, w11, lt
000000000001c344	cmp	w10, w9
000000000001c348	b.lt	0x1c320
000000000001c34c	b	0x1c358
000000000001c350	mov	w10, #0x0
000000000001c354	b	0x1c358
000000000001c358	sxtw	x9, w10
000000000001c35c	add	x8, x8, x9, lsl #4
000000000001c360	ldr	x8, [x8, #0x8]
000000000001c364	ldr	x8, [x8, #0x8]
000000000001c368	mov	x0, x22
000000000001c36c	blr	x8
000000000001c370	mov	x1, x0
000000000001c374	cbz	x24, 0x1c3d4
000000000001c378	ldr	x8, [x24]
000000000001c37c	and	x8, x8, #0xfffffffffffffffc
000000000001c380	ldr	x8, [x8]
000000000001c384	ldr	x8, [x8, #0x70]
000000000001c388	mov	x0, x24
000000000001c38c	blr	x8
000000000001c390	cbz	w0, 0x1c3d8
000000000001c394	mov	x0, x20
000000000001c398	blr	x25
000000000001c39c	ldr	x8, [x0]
000000000001c3a0	ldr	x8, [x8, #0x118]
000000000001c3a4	add	x0, x8, #0x70
000000000001c3a8	mov	w1, #0x20
000000000001c3ac	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001c3b0	mov	x8, x0
000000000001c3b4	adr	x9, #0x3f4ec
000000000001c3b8	nop
000000000001c3bc	str	x9, [x8, #0x10]!
000000000001c3c0	stur	xzr, [x8, #-0x8]
000000000001c3c4	str	x8, [x19]
000000000001c3c8	str	x21, [x8, #0x8]
000000000001c3cc	str	w23, [x8, #0x10]
000000000001c3d0	b	0x1c3dc
000000000001c3d4	cbz	x1, 0x1c394
000000000001c3d8	mov	x8, #0x0
000000000001c3dc	str	x8, [x19]
000000000001c3e0	mov	x0, x20
000000000001c3e4	blr	x25
000000000001c3e8	ldr	x9, [x0]
000000000001c3ec	ldr	x10, [sp, #0x8]
000000000001c3f0	str	x10, [x9, #0x110]
000000000001c3f4	str	x8, [x19]
000000000001c3f8	mov	x0, x8
000000000001c3fc	ldp	x29, x30, [sp, #0x80]
000000000001c400	ldp	x20, x19, [sp, #0x70]
000000000001c404	ldp	x22, x21, [sp, #0x60]
000000000001c408	ldp	x24, x23, [sp, #0x50]
000000000001c40c	ldp	x26, x25, [sp, #0x40]
000000000001c410	add	sp, sp, #0x90
000000000001c414	ret
000000000001c418	bl	_ThrowNullPointerException
000000000001c41c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMapEntrySet#iterator(){}kotlin.collections.MutableIterator<kotlin.collections.MutableMap.MutableEntry<1:0,1:1>>:
000000000001c420	stp	x20, x19, [sp, #-0x20]!
000000000001c424	stp	x29, x30, [sp, #0x10]
000000000001c428	add	x29, sp, #0x10
000000000001c42c	mov	x19, x1
000000000001c430	mov	x20, x0
000000000001c434	adr	x8, #0x6a60f
000000000001c438	nop
000000000001c43c	ldarb	w8, [x8]
000000000001c440	tbz	w8, #0x0, 0x1c448
000000000001c444	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c448	ldr	x0, [x20, #0x8]
000000000001c44c	mov	x1, x19
000000000001c450	bl	"_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>"
000000000001c454	str	x0, [x19]
000000000001c458	ldp	x29, x30, [sp, #0x10]
000000000001c45c	ldp	x20, x19, [sp], #0x20
000000000001c460	ret
_kfun:kotlin.collections.HashMapEntrySetBase#<get-size>(){}kotlin.Int:
000000000001c464	stp	x20, x19, [sp, #-0x20]!
000000000001c468	stp	x29, x30, [sp, #0x10]
000000000001c46c	add	x29, sp, #0x10
000000000001c470	mov	x19, x0
000000000001c474	adr	x8, #0x6a5cf
000000000001c478	nop
000000000001c47c	ldarb	w8, [x8]
000000000001c480	tbz	w8, #0x0, 0x1c488
000000000001c484	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c488	ldr	x8, [x19, #0x8]
000000000001c48c	ldr	w0, [x8, #0x4c]
000000000001c490	ldp	x29, x30, [sp, #0x10]
000000000001c494	ldp	x20, x19, [sp], #0x20
000000000001c498	ret
_kfun:kotlin.collections.HashMapEntrySetBase#isEmpty(){}kotlin.Boolean:
000000000001c49c	stp	x20, x19, [sp, #-0x20]!
000000000001c4a0	stp	x29, x30, [sp, #0x10]
000000000001c4a4	add	x29, sp, #0x10
000000000001c4a8	mov	x19, x0
000000000001c4ac	adr	x8, #0x6a597
000000000001c4b0	nop
000000000001c4b4	ldarb	w8, [x8]
000000000001c4b8	tbz	w8, #0x0, 0x1c4c0
000000000001c4bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c4c0	ldr	x8, [x19, #0x8]
000000000001c4c4	ldr	w8, [x8, #0x4c]
000000000001c4c8	cmp	w8, #0x0
000000000001c4cc	cset	w0, eq
000000000001c4d0	ldp	x29, x30, [sp, #0x10]
000000000001c4d4	ldp	x20, x19, [sp], #0x20
000000000001c4d8	ret
_kfun:kotlin.collections.HashMapEntrySetBase#contains(1:2){}kotlin.Boolean:
000000000001c4dc	stp	x20, x19, [sp, #-0x20]!
000000000001c4e0	stp	x29, x30, [sp, #0x10]
000000000001c4e4	add	x29, sp, #0x10
000000000001c4e8	mov	x19, x1
000000000001c4ec	mov	x20, x0
000000000001c4f0	adr	x8, #0x6a553
000000000001c4f4	nop
000000000001c4f8	ldarb	w8, [x8]
000000000001c4fc	tbz	w8, #0x0, 0x1c504
000000000001c500	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c504	cbz	x19, 0x1c5e0
000000000001c508	ldr	x8, [x19]
000000000001c50c	and	x8, x8, #0xfffffffffffffffc
000000000001c510	ldr	x8, [x8]
000000000001c514	ldr	w9, [x8, #0x3c]
000000000001c518	ldr	x8, [x8, #0x40]
000000000001c51c	tbnz	w9, #0x1f, 0x1c53c
000000000001c520	mov	w10, #0xa8
000000000001c524	and	x9, x9, x10
000000000001c528	lsl	x9, x9, #4
000000000001c52c	ldr	w8, [x8, x9]
000000000001c530	cmp	w8, #0xa8
000000000001c534	b.ne	0x1c5e0
000000000001c538	b	0x1c604
000000000001c53c	neg	w10, w9
000000000001c540	mvn	w9, w9
000000000001c544	cmp	w10, #0x9
000000000001c548	b.ge	0x1c594
000000000001c54c	cmp	w10, #0x2
000000000001c550	b.lt	0x1c5c8
000000000001c554	mov	x10, #0x0
000000000001c558	mov	x11, x8
000000000001c55c	ldr	w12, [x11]
000000000001c560	cmp	w12, #0xa7
000000000001c564	b.gt	0x1c5f0
000000000001c568	add	x10, x10, #0x1
000000000001c56c	add	x11, x11, #0x10
000000000001c570	cmp	x9, x10
000000000001c574	b.ne	0x1c55c
000000000001c578	mov	x10, x9
000000000001c57c	sxtw	x9, w10
000000000001c580	lsl	x9, x9, #4
000000000001c584	ldr	w8, [x8, x9]
000000000001c588	cmp	w8, #0xa8
000000000001c58c	b.ne	0x1c5e0
000000000001c590	b	0x1c604
000000000001c594	mov	w10, #0x0
000000000001c598	add	w11, w9, w10
000000000001c59c	cmp	w11, #0x0
000000000001c5a0	cinc	w11, w11, lt
000000000001c5a4	asr	w11, w11, #1
000000000001c5a8	sbfiz	x12, x11, #4, #32
000000000001c5ac	ldr	w12, [x8, x12]
000000000001c5b0	cmp	w12, #0xa8
000000000001c5b4	csinc	w10, w10, w11, ge
000000000001c5b8	csel	w9, w9, w11, lt
000000000001c5bc	cmp	w10, w9
000000000001c5c0	b.lt	0x1c598
000000000001c5c4	b	0x1c5f0
000000000001c5c8	mov	w10, #0x0
000000000001c5cc	sxtw	x9, w10
000000000001c5d0	lsl	x9, x9, #4
000000000001c5d4	ldr	w8, [x8, x9]
000000000001c5d8	cmp	w8, #0xa8
000000000001c5dc	b.eq	0x1c604
000000000001c5e0	mov	w0, #0x0
000000000001c5e4	ldp	x29, x30, [sp, #0x10]
000000000001c5e8	ldp	x20, x19, [sp], #0x20
000000000001c5ec	ret
000000000001c5f0	sxtw	x9, w10
000000000001c5f4	lsl	x9, x9, #4
000000000001c5f8	ldr	w8, [x8, x9]
000000000001c5fc	cmp	w8, #0xa8
000000000001c600	b.ne	0x1c5e0
000000000001c604	ldr	x0, [x20, #0x8]
000000000001c608	mov	x1, x19
000000000001c60c	ldp	x29, x30, [sp, #0x10]
000000000001c610	ldp	x20, x19, [sp], #0x20
000000000001c614	b	"_kfun:kotlin.collections.HashMap#containsEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySetBase#getElement(1:2){}1:2?:
000000000001c618	stp	x22, x21, [sp, #-0x30]!
000000000001c61c	stp	x20, x19, [sp, #0x10]
000000000001c620	stp	x29, x30, [sp, #0x20]
000000000001c624	add	x29, sp, #0x20
000000000001c628	mov	x19, x2
000000000001c62c	mov	x20, x1
000000000001c630	mov	x21, x0
000000000001c634	adr	x8, #0x6a40f
000000000001c638	nop
000000000001c63c	ldarb	w8, [x8]
000000000001c640	tbz	w8, #0x0, 0x1c648
000000000001c644	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c648	ldr	x8, [x21]
000000000001c64c	and	x8, x8, #0xfffffffffffffffc
000000000001c650	ldr	x8, [x8]
000000000001c654	ldr	x8, [x8, #0xf8]
000000000001c658	mov	x0, x21
000000000001c65c	mov	x1, x20
000000000001c660	mov	x2, x19
000000000001c664	blr	x8
000000000001c668	str	x0, [x19]
000000000001c66c	ldp	x29, x30, [sp, #0x20]
000000000001c670	ldp	x20, x19, [sp, #0x10]
000000000001c674	ldp	x22, x21, [sp], #0x30
000000000001c678	ret
_kfun:kotlin.collections.HashMapEntrySetBase#clear(){}:
000000000001c67c	stp	x20, x19, [sp, #-0x20]!
000000000001c680	stp	x29, x30, [sp, #0x10]
000000000001c684	add	x29, sp, #0x10
000000000001c688	mov	x19, x0
000000000001c68c	adr	x8, #0x6a3b7
000000000001c690	nop
000000000001c694	ldarb	w8, [x8]
000000000001c698	tbz	w8, #0x0, 0x1c6a0
000000000001c69c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c6a0	ldr	x0, [x19, #0x8]
000000000001c6a4	ldp	x29, x30, [sp, #0x10]
000000000001c6a8	ldp	x20, x19, [sp], #0x20
000000000001c6ac	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashMapEntrySetBase#add(1:2){}kotlin.Boolean:
000000000001c6b0	sub	sp, sp, #0x40
000000000001c6b4	stp	x20, x19, [sp, #0x20]
000000000001c6b8	stp	x29, x30, [sp, #0x30]
000000000001c6bc	add	x29, sp, #0x30
000000000001c6c0	movi.16b	v0, #0x0
000000000001c6c4	stp	q0, q0, [sp]
000000000001c6c8	adrp	x0, 80 ; 0x6c000
000000000001c6cc	add	x0, x0, #0xbb0
000000000001c6d0	ldr	x8, [x0]
000000000001c6d4	blr	x8
000000000001c6d8	ldr	x19, [x0]
000000000001c6dc	ldr	x8, [x19, #0x110]
000000000001c6e0	mov	x9, sp
000000000001c6e4	str	x9, [x19, #0x110]
000000000001c6e8	mov	x9, #0x400000000
000000000001c6ec	stp	x8, x9, [sp, #0x8]
000000000001c6f0	adr	x8, #0x6a353
000000000001c6f4	nop
000000000001c6f8	ldarb	w8, [x8]
000000000001c6fc	tbz	w8, #0x0, 0x1c704
000000000001c700	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c704	ldr	x8, [x19, #0x118]
000000000001c708	add	x0, x8, #0x70
000000000001c70c	mov	w1, #0x38
000000000001c710	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001c714	mov	x19, x0
000000000001c718	adr	x8, #0x3c6a8
000000000001c71c	nop
000000000001c720	str	x8, [x19, #0x10]!
000000000001c724	stur	xzr, [x19, #-0x8]
000000000001c728	str	x19, [sp, #0x18]
000000000001c72c	mov	x0, x19
000000000001c730	mov	x1, #0x0
000000000001c734	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001c738	mov	x0, x19
000000000001c73c	bl	_ThrowException
_kfun:kotlin.collections.HashMapEntrySetBase#addAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001c740	sub	sp, sp, #0x40
000000000001c744	stp	x20, x19, [sp, #0x20]
000000000001c748	stp	x29, x30, [sp, #0x30]
000000000001c74c	add	x29, sp, #0x30
000000000001c750	movi.16b	v0, #0x0
000000000001c754	stp	q0, q0, [sp]
000000000001c758	adrp	x0, 80 ; 0x6c000
000000000001c75c	add	x0, x0, #0xbb0
000000000001c760	ldr	x8, [x0]
000000000001c764	blr	x8
000000000001c768	ldr	x19, [x0]
000000000001c76c	ldr	x8, [x19, #0x110]
000000000001c770	mov	x9, sp
000000000001c774	str	x9, [x19, #0x110]
000000000001c778	mov	x9, #0x400000000
000000000001c77c	stp	x8, x9, [sp, #0x8]
000000000001c780	adr	x8, #0x6a2c3
000000000001c784	nop
000000000001c788	ldarb	w8, [x8]
000000000001c78c	tbz	w8, #0x0, 0x1c794
000000000001c790	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c794	ldr	x8, [x19, #0x118]
000000000001c798	add	x0, x8, #0x70
000000000001c79c	mov	w1, #0x38
000000000001c7a0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001c7a4	mov	x19, x0
000000000001c7a8	adr	x8, #0x3c618
000000000001c7ac	nop
000000000001c7b0	str	x8, [x19, #0x10]!
000000000001c7b4	stur	xzr, [x19, #-0x8]
000000000001c7b8	str	x19, [sp, #0x18]
000000000001c7bc	mov	x0, x19
000000000001c7c0	mov	x1, #0x0
000000000001c7c4	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001c7c8	mov	x0, x19
000000000001c7cc	bl	_ThrowException
_kfun:kotlin.collections.HashMapEntrySetBase#remove(1:2){}kotlin.Boolean:
000000000001c7d0	sub	sp, sp, #0x80
000000000001c7d4	stp	x24, x23, [sp, #0x40]
000000000001c7d8	stp	x22, x21, [sp, #0x50]
000000000001c7dc	stp	x20, x19, [sp, #0x60]
000000000001c7e0	stp	x29, x30, [sp, #0x70]
000000000001c7e4	add	x29, sp, #0x70
000000000001c7e8	mov	x19, x1
000000000001c7ec	mov	x20, x0
000000000001c7f0	adr	x8, #0x6a253
000000000001c7f4	nop
000000000001c7f8	ldarb	w8, [x8]
000000000001c7fc	tbz	w8, #0x0, 0x1c804
000000000001c800	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c804	cbz	x19, 0x1c988
000000000001c808	ldr	x8, [x19]
000000000001c80c	and	x8, x8, #0xfffffffffffffffc
000000000001c810	ldr	x8, [x8]
000000000001c814	ldr	w9, [x8, #0x3c]
000000000001c818	ldr	x8, [x8, #0x40]
000000000001c81c	tbnz	w9, #0x1f, 0x1c8a8
000000000001c820	mov	w10, #0xa8
000000000001c824	and	x9, x9, x10
000000000001c828	lsl	x9, x9, #4
000000000001c82c	ldr	w8, [x8, x9]
000000000001c830	cmp	w8, #0xa8
000000000001c834	b.ne	0x1c988
000000000001c838	ldr	x21, [x20, #0x8]
000000000001c83c	movi.16b	v0, #0x0
000000000001c840	stp	q0, q0, [sp]
000000000001c844	str	xzr, [sp, #0x30]
000000000001c848	str	q0, [sp, #0x20]
000000000001c84c	mov	x23, sp
000000000001c850	add	x22, x23, #0x18
000000000001c854	adrp	x20, 80 ; 0x6c000
000000000001c858	add	x20, x20, #0xbb0
000000000001c85c	ldr	x24, [x20]
000000000001c860	mov	x0, x20
000000000001c864	blr	x24
000000000001c868	ldr	x8, [x0]
000000000001c86c	ldr	x9, [x8, #0x110]
000000000001c870	str	x23, [x8, #0x110]
000000000001c874	mov	x8, #0x700000000
000000000001c878	stp	x9, x8, [sp, #0x8]
000000000001c87c	mov	x0, x21
000000000001c880	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001c884	ldr	x8, [x19]
000000000001c888	and	x8, x8, #0xfffffffffffffffc
000000000001c88c	ldr	x8, [x8]
000000000001c890	ldr	w9, [x8, #0x3c]
000000000001c894	ldr	x8, [x8, #0x40]
000000000001c898	tbnz	w9, #0x1f, 0x1c900
000000000001c89c	mov	w10, #0xa8
000000000001c8a0	and	x9, x9, x10
000000000001c8a4	b	0x1ca04
000000000001c8a8	neg	w10, w9
000000000001c8ac	mvn	w9, w9
000000000001c8b0	cmp	w10, #0x9
000000000001c8b4	b.ge	0x1c944
000000000001c8b8	cmp	w10, #0x2
000000000001c8bc	b.lt	0x1c990
000000000001c8c0	mov	x10, #0x0
000000000001c8c4	mov	x11, x8
000000000001c8c8	ldr	w12, [x11]
000000000001c8cc	cmp	w12, #0xa7
000000000001c8d0	b.gt	0x1c9e0
000000000001c8d4	add	x10, x10, #0x1
000000000001c8d8	add	x11, x11, #0x10
000000000001c8dc	cmp	x9, x10
000000000001c8e0	b.ne	0x1c8c8
000000000001c8e4	mov	x10, x9
000000000001c8e8	sxtw	x9, w10
000000000001c8ec	lsl	x9, x9, #4
000000000001c8f0	ldr	w8, [x8, x9]
000000000001c8f4	cmp	w8, #0xa8
000000000001c8f8	b.ne	0x1c988
000000000001c8fc	b	0x1c838
000000000001c900	neg	w10, w9
000000000001c904	mvn	w9, w9
000000000001c908	cmp	w10, #0x9
000000000001c90c	b.ge	0x1c9ac
000000000001c910	cmp	w10, #0x2
000000000001c914	b.lt	0x1c9f8
000000000001c918	mov	x10, #0x0
000000000001c91c	mov	x11, x8
000000000001c920	ldr	w12, [x11]
000000000001c924	cmp	w12, #0xa7
000000000001c928	b.gt	0x1ca00
000000000001c92c	add	x10, x10, #0x1
000000000001c930	add	x11, x11, #0x10
000000000001c934	cmp	x9, x10
000000000001c938	b.ne	0x1c920
000000000001c93c	mov	x10, x9
000000000001c940	b	0x1ca00
000000000001c944	mov	w10, #0x0
000000000001c948	add	w11, w9, w10
000000000001c94c	cmp	w11, #0x0
000000000001c950	cinc	w11, w11, lt
000000000001c954	asr	w11, w11, #1
000000000001c958	sbfiz	x12, x11, #4, #32
000000000001c95c	ldr	w12, [x8, x12]
000000000001c960	cmp	w12, #0xa8
000000000001c964	csinc	w10, w10, w11, ge
000000000001c968	csel	w9, w9, w11, lt
000000000001c96c	cmp	w10, w9
000000000001c970	b.lt	0x1c948
000000000001c974	sxtw	x9, w10
000000000001c978	lsl	x9, x9, #4
000000000001c97c	ldr	w8, [x8, x9]
000000000001c980	cmp	w8, #0xa8
000000000001c984	b.eq	0x1c838
000000000001c988	mov	w8, #0x0
000000000001c98c	b	0x1cb68
000000000001c990	mov	w10, #0x0
000000000001c994	sxtw	x9, w10
000000000001c998	lsl	x9, x9, #4
000000000001c99c	ldr	w8, [x8, x9]
000000000001c9a0	cmp	w8, #0xa8
000000000001c9a4	b.eq	0x1c838
000000000001c9a8	b	0x1c988
000000000001c9ac	mov	w10, #0x0
000000000001c9b0	add	w11, w9, w10
000000000001c9b4	cmp	w11, #0x0
000000000001c9b8	cinc	w11, w11, lt
000000000001c9bc	asr	w11, w11, #1
000000000001c9c0	sbfiz	x12, x11, #4, #32
000000000001c9c4	ldr	w12, [x8, x12]
000000000001c9c8	cmp	w12, #0xa8
000000000001c9cc	csinc	w10, w10, w11, ge
000000000001c9d0	csel	w9, w9, w11, lt
000000000001c9d4	cmp	w10, w9
000000000001c9d8	b.lt	0x1c9b0
000000000001c9dc	b	0x1ca00
000000000001c9e0	sxtw	x9, w10
000000000001c9e4	lsl	x9, x9, #4
000000000001c9e8	ldr	w8, [x8, x9]
000000000001c9ec	cmp	w8, #0xa8
000000000001c9f0	b.ne	0x1c988
000000000001c9f4	b	0x1c838
000000000001c9f8	mov	w10, #0x0
000000000001c9fc	b	0x1ca00
000000000001ca00	sxtw	x9, w10
000000000001ca04	add	x8, x8, x9, lsl #4
000000000001ca08	ldr	x8, [x8, #0x8]
000000000001ca0c	ldr	x8, [x8]
000000000001ca10	mov	x0, x19
000000000001ca14	mov	x1, x22
000000000001ca18	blr	x8
000000000001ca1c	mov	x1, x0
000000000001ca20	mov	x0, x21
000000000001ca24	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001ca28	tbnz	w0, #0x1f, 0x1cb50
000000000001ca2c	ldr	x8, [x21, #0x10]
000000000001ca30	str	x8, [sp, #0x20]
000000000001ca34	cbz	x8, 0x1cb84
000000000001ca38	mov	x22, x0
000000000001ca3c	ldr	w9, [x8, #0x8]
000000000001ca40	cmp	w9, w0
000000000001ca44	b.ls	0x1cb88
000000000001ca48	add	x1, x23, #0x30
000000000001ca4c	add	x8, x8, w22, sxtw #3
000000000001ca50	ldr	x23, [x8, #0x10]
000000000001ca54	str	x23, [sp, #0x28]
000000000001ca58	ldr	x8, [x19]
000000000001ca5c	and	x8, x8, #0xfffffffffffffffc
000000000001ca60	ldr	x8, [x8]
000000000001ca64	ldr	w9, [x8, #0x3c]
000000000001ca68	ldr	x8, [x8, #0x40]
000000000001ca6c	tbnz	w9, #0x1f, 0x1ca7c
000000000001ca70	mov	w10, #0xa8
000000000001ca74	and	x9, x9, x10
000000000001ca78	b	0x1cb00
000000000001ca7c	neg	w10, w9
000000000001ca80	mvn	w9, w9
000000000001ca84	cmp	w10, #0x9
000000000001ca88	b.ge	0x1cac0
000000000001ca8c	cmp	w10, #0x2
000000000001ca90	b.lt	0x1caf4
000000000001ca94	mov	x10, #0x0
000000000001ca98	mov	x11, x8
000000000001ca9c	ldr	w12, [x11]
000000000001caa0	cmp	w12, #0xa7
000000000001caa4	b.gt	0x1cafc
000000000001caa8	add	x10, x10, #0x1
000000000001caac	add	x11, x11, #0x10
000000000001cab0	cmp	x9, x10
000000000001cab4	b.ne	0x1ca9c
000000000001cab8	mov	x10, x9
000000000001cabc	b	0x1cafc
000000000001cac0	mov	w10, #0x0
000000000001cac4	add	w11, w9, w10
000000000001cac8	cmp	w11, #0x0
000000000001cacc	cinc	w11, w11, lt
000000000001cad0	asr	w11, w11, #1
000000000001cad4	sbfiz	x12, x11, #4, #32
000000000001cad8	ldr	w12, [x8, x12]
000000000001cadc	cmp	w12, #0xa8
000000000001cae0	csinc	w10, w10, w11, ge
000000000001cae4	csel	w9, w9, w11, lt
000000000001cae8	cmp	w10, w9
000000000001caec	b.lt	0x1cac4
000000000001caf0	b	0x1cafc
000000000001caf4	mov	w10, #0x0
000000000001caf8	b	0x1cafc
000000000001cafc	sxtw	x9, w10
000000000001cb00	add	x8, x8, x9, lsl #4
000000000001cb04	ldr	x8, [x8, #0x8]
000000000001cb08	ldr	x8, [x8, #0x8]
000000000001cb0c	mov	x0, x19
000000000001cb10	blr	x8
000000000001cb14	mov	x1, x0
000000000001cb18	cbz	x23, 0x1cb4c
000000000001cb1c	ldr	x8, [x23]
000000000001cb20	and	x8, x8, #0xfffffffffffffffc
000000000001cb24	ldr	x8, [x8]
000000000001cb28	ldr	x8, [x8, #0x70]
000000000001cb2c	mov	x0, x23
000000000001cb30	blr	x8
000000000001cb34	tbz	w0, #0x0, 0x1cb50
000000000001cb38	mov	x0, x21
000000000001cb3c	mov	x1, x22
000000000001cb40	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
000000000001cb44	mov	w8, #0x1
000000000001cb48	b	0x1cb54
000000000001cb4c	cbz	x1, 0x1cb38
000000000001cb50	mov	w8, #0x0
000000000001cb54	mov	x0, x20
000000000001cb58	blr	x24
000000000001cb5c	ldr	x9, [x0]
000000000001cb60	ldr	x10, [sp, #0x8]
000000000001cb64	str	x10, [x9, #0x110]
000000000001cb68	mov	x0, x8
000000000001cb6c	ldp	x29, x30, [sp, #0x70]
000000000001cb70	ldp	x20, x19, [sp, #0x60]
000000000001cb74	ldp	x22, x21, [sp, #0x50]
000000000001cb78	ldp	x24, x23, [sp, #0x40]
000000000001cb7c	add	sp, sp, #0x80
000000000001cb80	ret
000000000001cb84	bl	_ThrowNullPointerException
000000000001cb88	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMapEntrySetBase#containsAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001cb8c	stp	x20, x19, [sp, #-0x20]!
000000000001cb90	stp	x29, x30, [sp, #0x10]
000000000001cb94	add	x29, sp, #0x10
000000000001cb98	mov	x19, x1
000000000001cb9c	mov	x20, x0
000000000001cba0	adr	x8, #0x69ea3
000000000001cba4	nop
000000000001cba8	ldarb	w8, [x8]
000000000001cbac	tbz	w8, #0x0, 0x1cbb4
000000000001cbb0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cbb4	ldr	x0, [x20, #0x8]
000000000001cbb8	mov	x1, x19
000000000001cbbc	ldp	x29, x30, [sp, #0x10]
000000000001cbc0	ldp	x20, x19, [sp], #0x20
000000000001cbc4	b	"_kfun:kotlin.collections.HashMap#containsAllEntries(kotlin.collections.Collection<*>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySetBase#removeAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001cbc8	stp	x20, x19, [sp, #-0x20]!
000000000001cbcc	stp	x29, x30, [sp, #0x10]
000000000001cbd0	add	x29, sp, #0x10
000000000001cbd4	mov	x19, x1
000000000001cbd8	mov	x20, x0
000000000001cbdc	adr	x8, #0x69e67
000000000001cbe0	nop
000000000001cbe4	ldarb	w8, [x8]
000000000001cbe8	tbz	w8, #0x0, 0x1cbf0
000000000001cbec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cbf0	ldr	x0, [x20, #0x8]
000000000001cbf4	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001cbf8	mov	x0, x20
000000000001cbfc	mov	x1, x19
000000000001cc00	ldp	x29, x30, [sp, #0x10]
000000000001cc04	ldp	x20, x19, [sp], #0x20
000000000001cc08	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySetBase#retainAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001cc0c	stp	x20, x19, [sp, #-0x20]!
000000000001cc10	stp	x29, x30, [sp, #0x10]
000000000001cc14	add	x29, sp, #0x10
000000000001cc18	mov	x19, x1
000000000001cc1c	mov	x20, x0
000000000001cc20	adr	x8, #0x69e23
000000000001cc24	nop
000000000001cc28	ldarb	w8, [x8]
000000000001cc2c	tbz	w8, #0x0, 0x1cc34
000000000001cc30	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cc34	ldr	x0, [x20, #0x8]
000000000001cc38	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001cc3c	mov	x0, x20
000000000001cc40	mov	x1, x19
000000000001cc44	ldp	x29, x30, [sp, #0x10]
000000000001cc48	ldp	x20, x19, [sp], #0x20
000000000001cc4c	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashSet#<get-size>(){}kotlin.Int:
000000000001cc50	stp	x20, x19, [sp, #-0x20]!
000000000001cc54	stp	x29, x30, [sp, #0x10]
000000000001cc58	add	x29, sp, #0x10
000000000001cc5c	mov	x19, x0
000000000001cc60	adr	x8, #0x69de3
000000000001cc64	nop
000000000001cc68	ldarb	w8, [x8]
000000000001cc6c	tbz	w8, #0x0, 0x1cc74
000000000001cc70	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cc74	ldr	x8, [x19, #0x8]
000000000001cc78	ldr	w0, [x8, #0x4c]
000000000001cc7c	ldp	x29, x30, [sp, #0x10]
000000000001cc80	ldp	x20, x19, [sp], #0x20
000000000001cc84	ret
_kfun:kotlin.collections.HashSet#isEmpty(){}kotlin.Boolean:
000000000001cc88	stp	x20, x19, [sp, #-0x20]!
000000000001cc8c	stp	x29, x30, [sp, #0x10]
000000000001cc90	add	x29, sp, #0x10
000000000001cc94	mov	x19, x0
000000000001cc98	adr	x8, #0x69dab
000000000001cc9c	nop
000000000001cca0	ldarb	w8, [x8]
000000000001cca4	tbz	w8, #0x0, 0x1ccac
000000000001cca8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ccac	ldr	x8, [x19, #0x8]
000000000001ccb0	ldr	w8, [x8, #0x4c]
000000000001ccb4	cmp	w8, #0x0
000000000001ccb8	cset	w0, eq
000000000001ccbc	ldp	x29, x30, [sp, #0x10]
000000000001ccc0	ldp	x20, x19, [sp], #0x20
000000000001ccc4	ret
_kfun:kotlin.collections.HashSet#contains(1:0){}kotlin.Boolean:
000000000001ccc8	stp	x20, x19, [sp, #-0x20]!
000000000001cccc	stp	x29, x30, [sp, #0x10]
000000000001ccd0	add	x29, sp, #0x10
000000000001ccd4	mov	x19, x1
000000000001ccd8	mov	x20, x0
000000000001ccdc	adr	x8, #0x69d67
000000000001cce0	nop
000000000001cce4	ldarb	w8, [x8]
000000000001cce8	tbz	w8, #0x0, 0x1ccf0
000000000001ccec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ccf0	ldr	x0, [x20, #0x8]
000000000001ccf4	mov	x1, x19
000000000001ccf8	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001ccfc	mvn	w8, w0
000000000001cd00	lsr	w0, w8, #31
000000000001cd04	ldp	x29, x30, [sp, #0x10]
000000000001cd08	ldp	x20, x19, [sp], #0x20
000000000001cd0c	ret
_kfun:kotlin.collections.HashSet#getElement(1:0){}1:0?:
000000000001cd10	stp	x22, x21, [sp, #-0x30]!
000000000001cd14	stp	x20, x19, [sp, #0x10]
000000000001cd18	stp	x29, x30, [sp, #0x20]
000000000001cd1c	add	x29, sp, #0x20
000000000001cd20	mov	x19, x2
000000000001cd24	mov	x20, x1
000000000001cd28	mov	x21, x0
000000000001cd2c	adr	x8, #0x69d17
000000000001cd30	nop
000000000001cd34	ldarb	w8, [x8]
000000000001cd38	tbz	w8, #0x0, 0x1cd40
000000000001cd3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cd40	ldr	x0, [x21, #0x8]
000000000001cd44	mov	x1, x20
000000000001cd48	mov	x2, x19
000000000001cd4c	bl	"_kfun:kotlin.collections.HashMap#getKey(1:0){}1:0?"
000000000001cd50	str	x0, [x19]
000000000001cd54	ldp	x29, x30, [sp, #0x20]
000000000001cd58	ldp	x20, x19, [sp, #0x10]
000000000001cd5c	ldp	x22, x21, [sp], #0x30
000000000001cd60	ret
_kfun:kotlin.collections.HashSet#clear(){}:
000000000001cd64	stp	x20, x19, [sp, #-0x20]!
000000000001cd68	stp	x29, x30, [sp, #0x10]
000000000001cd6c	add	x29, sp, #0x10
000000000001cd70	mov	x19, x0
000000000001cd74	adr	x8, #0x69ccf
000000000001cd78	nop
000000000001cd7c	ldarb	w8, [x8]
000000000001cd80	tbz	w8, #0x0, 0x1cd88
000000000001cd84	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cd88	ldr	x0, [x19, #0x8]
000000000001cd8c	ldp	x29, x30, [sp, #0x10]
000000000001cd90	ldp	x20, x19, [sp], #0x20
000000000001cd94	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashSet#add(1:0){}kotlin.Boolean:
000000000001cd98	stp	x20, x19, [sp, #-0x20]!
000000000001cd9c	stp	x29, x30, [sp, #0x10]
000000000001cda0	add	x29, sp, #0x10
000000000001cda4	mov	x19, x1
000000000001cda8	mov	x20, x0
000000000001cdac	adr	x8, #0x69c97
000000000001cdb0	nop
000000000001cdb4	ldarb	w8, [x8]
000000000001cdb8	tbz	w8, #0x0, 0x1cdc0
000000000001cdbc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cdc0	ldr	x0, [x20, #0x8]
000000000001cdc4	mov	x1, x19
000000000001cdc8	bl	"_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int"
000000000001cdcc	mvn	w8, w0
000000000001cdd0	lsr	w0, w8, #31
000000000001cdd4	ldp	x29, x30, [sp, #0x10]
000000000001cdd8	ldp	x20, x19, [sp], #0x20
000000000001cddc	ret
_kfun:kotlin.collections.HashSet#remove(1:0){}kotlin.Boolean:
000000000001cde0	stp	x20, x19, [sp, #-0x20]!
000000000001cde4	stp	x29, x30, [sp, #0x10]
000000000001cde8	add	x29, sp, #0x10
000000000001cdec	mov	x19, x1
000000000001cdf0	mov	x20, x0
000000000001cdf4	adr	x8, #0x69c4f
000000000001cdf8	nop
000000000001cdfc	ldarb	w8, [x8]
000000000001ce00	tbz	w8, #0x0, 0x1ce08
000000000001ce04	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ce08	ldr	x0, [x20, #0x8]
000000000001ce0c	mov	x1, x19
000000000001ce10	bl	"_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int"
000000000001ce14	mvn	w8, w0
000000000001ce18	lsr	w0, w8, #31
000000000001ce1c	ldp	x29, x30, [sp, #0x10]
000000000001ce20	ldp	x20, x19, [sp], #0x20
000000000001ce24	ret
_kfun:kotlin.collections.HashSet#iterator(){}kotlin.collections.MutableIterator<1:0>:
000000000001ce28	stp	x20, x19, [sp, #-0x20]!
000000000001ce2c	stp	x29, x30, [sp, #0x10]
000000000001ce30	add	x29, sp, #0x10
000000000001ce34	mov	x19, x1
000000000001ce38	mov	x20, x0
000000000001ce3c	adr	x8, #0x69c07
000000000001ce40	nop
000000000001ce44	ldarb	w8, [x8]
000000000001ce48	tbz	w8, #0x0, 0x1ce50
000000000001ce4c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ce50	ldr	x0, [x20, #0x8]
000000000001ce54	mov	x1, x19
000000000001ce58	bl	"_kfun:kotlin.collections.HashMap#keysIterator(){}kotlin.collections.HashMap.KeysItr<1:0,1:1>"
000000000001ce5c	str	x0, [x19]
000000000001ce60	ldp	x29, x30, [sp, #0x10]
000000000001ce64	ldp	x20, x19, [sp], #0x20
000000000001ce68	ret
_kfun:kotlin.collections.HashSet#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001ce6c	stp	x20, x19, [sp, #-0x20]!
000000000001ce70	stp	x29, x30, [sp, #0x10]
000000000001ce74	add	x29, sp, #0x10
000000000001ce78	mov	x19, x1
000000000001ce7c	mov	x20, x0
000000000001ce80	adr	x8, #0x69bc3
000000000001ce84	nop
000000000001ce88	ldarb	w8, [x8]
000000000001ce8c	tbz	w8, #0x0, 0x1ce94
000000000001ce90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ce94	ldr	x0, [x20, #0x8]
000000000001ce98	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001ce9c	mov	x0, x20
000000000001cea0	mov	x1, x19
000000000001cea4	ldp	x29, x30, [sp, #0x10]
000000000001cea8	ldp	x20, x19, [sp], #0x20
000000000001ceac	b	"_kfun:kotlin.collections.AbstractMutableCollection#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashSet#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001ceb0	stp	x20, x19, [sp, #-0x20]!
000000000001ceb4	stp	x29, x30, [sp, #0x10]
000000000001ceb8	add	x29, sp, #0x10
000000000001cebc	mov	x19, x1
000000000001cec0	mov	x20, x0
000000000001cec4	adr	x8, #0x69b7f
000000000001cec8	nop
000000000001cecc	ldarb	w8, [x8]
000000000001ced0	tbz	w8, #0x0, 0x1ced8
000000000001ced4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ced8	ldr	x0, [x20, #0x8]
000000000001cedc	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001cee0	mov	x0, x20
000000000001cee4	mov	x1, x19
000000000001cee8	ldp	x29, x30, [sp, #0x10]
000000000001ceec	ldp	x20, x19, [sp], #0x20
000000000001cef0	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashSet#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001cef4	stp	x20, x19, [sp, #-0x20]!
000000000001cef8	stp	x29, x30, [sp, #0x10]
000000000001cefc	add	x29, sp, #0x10
000000000001cf00	mov	x19, x1
000000000001cf04	mov	x20, x0
000000000001cf08	adr	x8, #0x69b3b
000000000001cf0c	nop
000000000001cf10	ldarb	w8, [x8]
000000000001cf14	tbz	w8, #0x0, 0x1cf1c
000000000001cf18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cf1c	ldr	x0, [x20, #0x8]
000000000001cf20	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001cf24	mov	x0, x20
000000000001cf28	mov	x1, x19
000000000001cf2c	ldp	x29, x30, [sp, #0x10]
000000000001cf30	ldp	x20, x19, [sp], #0x20
000000000001cf34	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}:
000000000001cf38	sub	sp, sp, #0x50
000000000001cf3c	stp	x22, x21, [sp, #0x20]
000000000001cf40	stp	x20, x19, [sp, #0x30]
000000000001cf44	stp	x29, x30, [sp, #0x40]
000000000001cf48	add	x29, sp, #0x40
000000000001cf4c	mov	x20, x1
000000000001cf50	mov	x19, x0
000000000001cf54	movi.16b	v0, #0x0
000000000001cf58	stp	q0, q0, [sp]
000000000001cf5c	adrp	x0, 80 ; 0x6c000
000000000001cf60	add	x0, x0, #0xbb0
000000000001cf64	ldr	x8, [x0]
000000000001cf68	blr	x8
000000000001cf6c	ldr	x21, [x0]
000000000001cf70	ldr	x8, [x21, #0x110]
000000000001cf74	mov	x9, sp
000000000001cf78	str	x9, [x21, #0x110]
000000000001cf7c	mov	x9, #0x400000000
000000000001cf80	stp	x8, x9, [sp, #0x8]
000000000001cf84	adr	x8, #0x69abf
000000000001cf88	nop
000000000001cf8c	ldarb	w8, [x8]
000000000001cf90	tbz	w8, #0x0, 0x1cf98
000000000001cf94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cf98	tbnz	w20, #0x1f, 0x1cff0
000000000001cf9c	ldr	x8, [x21, #0x118]
000000000001cfa0	mov	w9, w20
000000000001cfa4	lsl	x9, x9, #1
000000000001cfa8	add	x9, x9, #0x1f
000000000001cfac	and	x1, x9, #0x3fffffff8
000000000001cfb0	add	x0, x8, #0x70
000000000001cfb4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001cfb8	stp	xzr, xzr, [x0, #0x10]!
000000000001cfbc	adr	x8, #0x3b6b4
000000000001cfc0	nop
000000000001cfc4	stp	xzr, x8, [x0, #-0x8]
000000000001cfc8	str	w20, [x0, #0x8]
000000000001cfcc	str	x0, [sp, #0x18]
000000000001cfd0	str	x0, [x19, #0x8]
000000000001cfd4	ldr	x8, [sp, #0x8]
000000000001cfd8	str	x8, [x21, #0x110]
000000000001cfdc	ldp	x29, x30, [sp, #0x40]
000000000001cfe0	ldp	x20, x19, [sp, #0x30]
000000000001cfe4	ldp	x22, x21, [sp, #0x20]
000000000001cfe8	add	sp, sp, #0x50
000000000001cfec	ret
000000000001cff0	bl	_ThrowIllegalArgumentException
_kfun:kotlin.text.StringBuilder#<get-length>(){}kotlin.Int:
000000000001cff4	stp	x20, x19, [sp, #-0x20]!
000000000001cff8	stp	x29, x30, [sp, #0x10]
000000000001cffc	add	x29, sp, #0x10
000000000001d000	mov	x19, x0
000000000001d004	adr	x8, #0x69a3f
000000000001d008	nop
000000000001d00c	ldarb	w8, [x8]
000000000001d010	tbz	w8, #0x0, 0x1d018
000000000001d014	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d018	ldr	w0, [x19, #0x10]
000000000001d01c	ldp	x29, x30, [sp, #0x10]
000000000001d020	ldp	x20, x19, [sp], #0x20
000000000001d024	ret
_kfun:kotlin.text.StringBuilder#get(kotlin.Int){}kotlin.Char:
000000000001d028	sub	sp, sp, #0x70
000000000001d02c	stp	x22, x21, [sp, #0x40]
000000000001d030	stp	x20, x19, [sp, #0x50]
000000000001d034	stp	x29, x30, [sp, #0x60]
000000000001d038	add	x29, sp, #0x60
000000000001d03c	mov	x19, x1
000000000001d040	mov	x20, x0
000000000001d044	movi.16b	v0, #0x0
000000000001d048	stp	q0, q0, [sp]
000000000001d04c	adrp	x0, 79 ; 0x6c000
000000000001d050	add	x0, x0, #0xbb0
000000000001d054	ldr	x8, [x0]
000000000001d058	blr	x8
000000000001d05c	ldr	x21, [x0]
000000000001d060	ldr	x8, [x21, #0x110]
000000000001d064	mov	x9, sp
000000000001d068	str	x9, [x21, #0x110]
000000000001d06c	mov	x22, #0x400000000
000000000001d070	stp	x8, x22, [sp, #0x8]
000000000001d074	adr	x8, #0x699cf
000000000001d078	nop
000000000001d07c	ldarb	w8, [x8]
000000000001d080	tbz	w8, #0x0, 0x1d08c
000000000001d084	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d088	movi.16b	v0, #0x0
000000000001d08c	stp	q0, q0, [sp, #0x20]
000000000001d090	ldr	x8, [x21, #0x110]
000000000001d094	add	x9, sp, #0x20
000000000001d098	str	x9, [x21, #0x110]
000000000001d09c	stp	x8, x22, [sp, #0x28]
000000000001d0a0	tbnz	w19, #0x1f, 0x1d0f0
000000000001d0a4	ldr	w8, [x20, #0x10]
000000000001d0a8	cmp	w8, w19
000000000001d0ac	b.le	0x1d0f0
000000000001d0b0	ldr	x8, [sp, #0x28]
000000000001d0b4	str	x8, [x21, #0x110]
000000000001d0b8	ldr	x8, [x20, #0x8]
000000000001d0bc	str	x8, [sp, #0x18]
000000000001d0c0	ldr	w9, [x8, #0x8]
000000000001d0c4	cmp	w9, w19
000000000001d0c8	b.ls	0x1d12c
000000000001d0cc	add	x8, x8, w19, sxtw #1
000000000001d0d0	ldrh	w0, [x8, #0x10]
000000000001d0d4	ldr	x8, [sp, #0x8]
000000000001d0d8	str	x8, [x21, #0x110]
000000000001d0dc	ldp	x29, x30, [sp, #0x60]
000000000001d0e0	ldp	x20, x19, [sp, #0x50]
000000000001d0e4	ldp	x22, x21, [sp, #0x40]
000000000001d0e8	add	sp, sp, #0x70
000000000001d0ec	ret
000000000001d0f0	ldr	x8, [x21, #0x118]
000000000001d0f4	add	x0, x8, #0x70
000000000001d0f8	mov	w1, #0x38
000000000001d0fc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d100	mov	x19, x0
000000000001d104	adr	x8, #0x3badc
000000000001d108	nop
000000000001d10c	str	x8, [x19, #0x10]!
000000000001d110	stur	xzr, [x19, #-0x8]
000000000001d114	str	x19, [sp, #0x38]
000000000001d118	mov	x0, x19
000000000001d11c	mov	x1, #0x0
000000000001d120	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001d124	mov	x0, x19
000000000001d128	bl	_ThrowException
000000000001d12c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.text.StringBuilder#subSequence(kotlin.Int;kotlin.Int){}kotlin.CharSequence:
000000000001d130	sub	sp, sp, #0x90
000000000001d134	stp	x26, x25, [sp, #0x40]
000000000001d138	stp	x24, x23, [sp, #0x50]
000000000001d13c	stp	x22, x21, [sp, #0x60]
000000000001d140	stp	x20, x19, [sp, #0x70]
000000000001d144	stp	x29, x30, [sp, #0x80]
000000000001d148	add	x29, sp, #0x80
000000000001d14c	mov	x19, x3
000000000001d150	mov	x22, x2
000000000001d154	mov	x21, x1
000000000001d158	mov	x23, x0
000000000001d15c	adr	x8, #0x698e7
000000000001d160	nop
000000000001d164	ldarb	w8, [x8]
000000000001d168	tbz	w8, #0x0, 0x1d170
000000000001d16c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d170	movi.16b	v0, #0x0
000000000001d174	stp	q0, q0, [sp]
000000000001d178	adrp	x20, 79 ; 0x6c000
000000000001d17c	add	x20, x20, #0xbb0
000000000001d180	ldr	x24, [x20]
000000000001d184	mov	x0, x20
000000000001d188	blr	x24
000000000001d18c	ldr	x8, [x0]
000000000001d190	ldr	x9, [x8, #0x110]
000000000001d194	mov	x10, sp
000000000001d198	str	x10, [x8, #0x110]
000000000001d19c	mov	x8, #0x400000000
000000000001d1a0	stp	x9, x8, [sp, #0x8]
000000000001d1a4	ldr	w2, [x23, #0x10]
000000000001d1a8	mov	x0, x21
000000000001d1ac	mov	x1, x22
000000000001d1b0	bl	"_kfun:kotlin.text#checkBoundsIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
000000000001d1b4	ldr	x23, [x23, #0x8]
000000000001d1b8	str	x23, [sp, #0x18]
000000000001d1bc	subs	w25, w22, w21
000000000001d1c0	b.eq	0x1d224
000000000001d1c4	tbnz	w25, #0x1f, 0x1d28c
000000000001d1c8	mov	x0, x20
000000000001d1cc	blr	x24
000000000001d1d0	ldr	x8, [x0]
000000000001d1d4	ldr	x8, [x8, #0x118]
000000000001d1d8	lsl	x9, x25, #1
000000000001d1dc	add	x9, x9, #0x1f
000000000001d1e0	and	x1, x9, #0x3fffffff8
000000000001d1e4	add	x0, x8, #0x70
000000000001d1e8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d1ec	mov	x22, x0
000000000001d1f0	adr	x8, #0x3c4f0
000000000001d1f4	nop
000000000001d1f8	stp	x8, xzr, [x22, #0x10]!
000000000001d1fc	stur	xzr, [x22, #-0x8]
000000000001d200	str	w25, [x22, #0x8]
000000000001d204	str	x22, [x19]
000000000001d208	add	x0, x22, #0x10
000000000001d20c	add	x8, x23, w21, sxtw #1
000000000001d210	add	x1, x8, #0x10
000000000001d214	sbfiz	x2, x25, #1, #32
000000000001d218	bl	0x51aac ; symbol stub for: _memcpy
000000000001d21c	str	x22, [x19]
000000000001d220	b	0x1d250
000000000001d224	mov	x0, x20
000000000001d228	blr	x24
000000000001d22c	ldr	x8, [x0]
000000000001d230	ldr	x9, [x8, #0x110]
000000000001d234	add	x10, sp, #0x28
000000000001d238	str	x10, [x8, #0x110]
000000000001d23c	adr	x22, #0x47f9c
000000000001d240	nop
000000000001d244	str	x22, [x19]
000000000001d248	ldr	x8, [x0]
000000000001d24c	str	x9, [x8, #0x110]
000000000001d250	str	x22, [x19]
000000000001d254	mov	x0, x20
000000000001d258	blr	x24
000000000001d25c	ldr	x8, [x0]
000000000001d260	ldr	x9, [sp, #0x8]
000000000001d264	str	x9, [x8, #0x110]
000000000001d268	str	x22, [x19]
000000000001d26c	mov	x0, x22
000000000001d270	ldp	x29, x30, [sp, #0x80]
000000000001d274	ldp	x20, x19, [sp, #0x70]
000000000001d278	ldp	x22, x21, [sp, #0x60]
000000000001d27c	ldp	x24, x23, [sp, #0x50]
000000000001d280	ldp	x26, x25, [sp, #0x40]
000000000001d284	add	sp, sp, #0x90
000000000001d288	ret
000000000001d28c	bl	_ThrowIllegalArgumentException
_kfun:kotlin.text.StringBuilder#append(kotlin.Char){}kotlin.text.StringBuilder:
000000000001d290	sub	sp, sp, #0x70
000000000001d294	stp	x26, x25, [sp, #0x20]
000000000001d298	stp	x24, x23, [sp, #0x30]
000000000001d29c	stp	x22, x21, [sp, #0x40]
000000000001d2a0	stp	x20, x19, [sp, #0x50]
000000000001d2a4	stp	x29, x30, [sp, #0x60]
000000000001d2a8	add	x29, sp, #0x60
000000000001d2ac	mov	x20, x2
000000000001d2b0	mov	x21, x1
000000000001d2b4	mov	x19, x0
000000000001d2b8	movi.16b	v0, #0x0
000000000001d2bc	stp	q0, q0, [sp]
000000000001d2c0	adrp	x0, 79 ; 0x6c000
000000000001d2c4	add	x0, x0, #0xbb0
000000000001d2c8	ldr	x8, [x0]
000000000001d2cc	blr	x8
000000000001d2d0	ldr	x23, [x0]
000000000001d2d4	ldr	x8, [x23, #0x110]
000000000001d2d8	mov	x9, sp
000000000001d2dc	str	x9, [x23, #0x110]
000000000001d2e0	mov	x9, #0x400000000
000000000001d2e4	stp	x8, x9, [sp, #0x8]
000000000001d2e8	adr	x8, #0x6975b
000000000001d2ec	nop
000000000001d2f0	ldarb	w8, [x8]
000000000001d2f4	tbz	w8, #0x0, 0x1d2fc
000000000001d2f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d2fc	ldr	w8, [x19, #0x10]
000000000001d300	add	w1, w8, #0x1
000000000001d304	mov	x0, x19
000000000001d308	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001d30c	ldr	x24, [x19, #0x8]
000000000001d310	str	x24, [sp, #0x18]
000000000001d314	ldrsw	x25, [x19, #0x10]
000000000001d318	add	w22, w25, #0x1
000000000001d31c	mov	x0, x19
000000000001d320	mov	x1, x22
000000000001d324	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001d328	str	w22, [x19, #0x10]
000000000001d32c	ldr	w8, [x24, #0x8]
000000000001d330	cmp	w8, w25
000000000001d334	b.ls	0x1d370
000000000001d338	ldr	xzr, [x24]
000000000001d33c	add	x8, x24, x25, lsl #1
000000000001d340	strh	w21, [x8, #0x10]
000000000001d344	str	x19, [x20]
000000000001d348	ldr	x8, [sp, #0x8]
000000000001d34c	str	x8, [x23, #0x110]
000000000001d350	mov	x0, x19
000000000001d354	ldp	x29, x30, [sp, #0x60]
000000000001d358	ldp	x20, x19, [sp, #0x50]
000000000001d35c	ldp	x22, x21, [sp, #0x40]
000000000001d360	ldp	x24, x23, [sp, #0x30]
000000000001d364	ldp	x26, x25, [sp, #0x20]
000000000001d368	add	sp, sp, #0x70
000000000001d36c	ret
000000000001d370	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.text.StringBuilder#append(kotlin.CharSequence?){}kotlin.text.StringBuilder:
000000000001d374	stp	x22, x21, [sp, #-0x30]!
000000000001d378	stp	x20, x19, [sp, #0x10]
000000000001d37c	stp	x29, x30, [sp, #0x20]
000000000001d380	add	x29, sp, #0x20
000000000001d384	mov	x19, x2
000000000001d388	mov	x21, x1
000000000001d38c	mov	x20, x0
000000000001d390	adr	x8, #0x696b3
000000000001d394	nop
000000000001d398	ldarb	w8, [x8]
000000000001d39c	tbz	w8, #0x0, 0x1d3a4
000000000001d3a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d3a4	adr	x8, #0x47e4c
000000000001d3a8	nop
000000000001d3ac	cmp	x21, #0x0
000000000001d3b0	csel	x21, x8, x21, eq
000000000001d3b4	ldr	x8, [x21]
000000000001d3b8	and	x8, x8, #0xfffffffffffffffc
000000000001d3bc	ldr	x8, [x8]
000000000001d3c0	ldr	w9, [x8, #0x3c]
000000000001d3c4	ldr	x8, [x8, #0x40]
000000000001d3c8	tbnz	w9, #0x1f, 0x1d3d8
000000000001d3cc	mov	w10, #0x19
000000000001d3d0	and	x9, x9, x10
000000000001d3d4	b	0x1d45c
000000000001d3d8	neg	w10, w9
000000000001d3dc	mvn	w9, w9
000000000001d3e0	cmp	w10, #0x9
000000000001d3e4	b.ge	0x1d41c
000000000001d3e8	cmp	w10, #0x2
000000000001d3ec	b.lt	0x1d450
000000000001d3f0	mov	x10, #0x0
000000000001d3f4	mov	x11, x8
000000000001d3f8	ldr	w12, [x11]
000000000001d3fc	cmp	w12, #0x18
000000000001d400	b.gt	0x1d458
000000000001d404	add	x10, x10, #0x1
000000000001d408	add	x11, x11, #0x10
000000000001d40c	cmp	x9, x10
000000000001d410	b.ne	0x1d3f8
000000000001d414	mov	x10, x9
000000000001d418	b	0x1d458
000000000001d41c	mov	w10, #0x0
000000000001d420	add	w11, w9, w10
000000000001d424	cmp	w11, #0x0
000000000001d428	cinc	w11, w11, lt
000000000001d42c	asr	w11, w11, #1
000000000001d430	sbfiz	x12, x11, #4, #32
000000000001d434	ldr	w12, [x8, x12]
000000000001d438	cmp	w12, #0x19
000000000001d43c	csinc	w10, w10, w11, ge
000000000001d440	csel	w9, w9, w11, lt
000000000001d444	cmp	w10, w9
000000000001d448	b.lt	0x1d420
000000000001d44c	b	0x1d458
000000000001d450	mov	w10, #0x0
000000000001d454	b	0x1d458
000000000001d458	sxtw	x9, w10
000000000001d45c	add	x8, x8, x9, lsl #4
000000000001d460	ldr	x8, [x8, #0x8]
000000000001d464	ldr	x8, [x8]
000000000001d468	mov	x0, x21
000000000001d46c	blr	x8
000000000001d470	mov	x3, x0
000000000001d474	mov	x0, x20
000000000001d478	mov	x1, x21
000000000001d47c	mov	w2, #0x0
000000000001d480	mov	x4, x19
000000000001d484	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.CharSequence?;kotlin.Int;kotlin.Int){}kotlin.text.StringBuilder"
000000000001d488	str	x20, [x19]
000000000001d48c	ldp	x29, x30, [sp, #0x20]
000000000001d490	ldp	x20, x19, [sp, #0x10]
000000000001d494	ldp	x22, x21, [sp], #0x30
000000000001d498	ret
_kfun:kotlin.text.StringBuilder#append(kotlin.CharSequence?;kotlin.Int;kotlin.Int){}kotlin.text.StringBuilder:
000000000001d49c	sub	sp, sp, #0xa0
000000000001d4a0	stp	x28, x27, [sp, #0x40]
000000000001d4a4	stp	x26, x25, [sp, #0x50]
000000000001d4a8	stp	x24, x23, [sp, #0x60]
000000000001d4ac	stp	x22, x21, [sp, #0x70]
000000000001d4b0	stp	x20, x19, [sp, #0x80]
000000000001d4b4	stp	x29, x30, [sp, #0x90]
000000000001d4b8	add	x29, sp, #0x90
000000000001d4bc	mov	x19, x4
000000000001d4c0	mov	x24, x3
000000000001d4c4	mov	x21, x2
000000000001d4c8	mov	x22, x1
000000000001d4cc	mov	x20, x0
000000000001d4d0	adr	x26, #0x69573
000000000001d4d4	nop
000000000001d4d8	ldarb	w8, [x26]
000000000001d4dc	tbz	w8, #0x0, 0x1d4e4
000000000001d4e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d4e4	adr	x8, #0x47d0c
000000000001d4e8	nop
000000000001d4ec	cmp	x22, #0x0
000000000001d4f0	csel	x23, x8, x22, eq
000000000001d4f4	movi.16b	v0, #0x0
000000000001d4f8	stp	q0, q0, [sp, #0x10]
000000000001d4fc	str	xzr, [sp, #0x30]
000000000001d500	adrp	x0, 79 ; 0x6c000
000000000001d504	add	x0, x0, #0xbb0
000000000001d508	ldr	x25, [x0]
000000000001d50c	blr	x25
000000000001d510	ldr	x8, [x0]
000000000001d514	ldr	x9, [x8, #0x110]
000000000001d518	add	x10, sp, #0x10
000000000001d51c	str	x10, [x8, #0x110]
000000000001d520	mov	x8, #0x500000000
000000000001d524	stp	x9, x8, [sp, #0x18]
000000000001d528	ldr	x8, [x23]
000000000001d52c	and	x8, x8, #0xfffffffffffffffc
000000000001d530	ldr	x8, [x8]
000000000001d534	ldr	w9, [x8, #0x3c]
000000000001d538	ldr	x8, [x8, #0x40]
000000000001d53c	str	x19, [sp, #0x8]
000000000001d540	tbnz	w9, #0x1f, 0x1d550
000000000001d544	mov	w10, #0x19
000000000001d548	and	x9, x9, x10
000000000001d54c	b	0x1d5d4
000000000001d550	neg	w10, w9
000000000001d554	mvn	w9, w9
000000000001d558	cmp	w10, #0x9
000000000001d55c	b.ge	0x1d594
000000000001d560	cmp	w10, #0x2
000000000001d564	b.lt	0x1d5c8
000000000001d568	mov	x10, #0x0
000000000001d56c	mov	x11, x8
000000000001d570	ldr	w12, [x11]
000000000001d574	cmp	w12, #0x18
000000000001d578	b.gt	0x1d5d0
000000000001d57c	add	x10, x10, #0x1
000000000001d580	add	x11, x11, #0x10
000000000001d584	cmp	x9, x10
000000000001d588	b.ne	0x1d570
000000000001d58c	mov	x10, x9
000000000001d590	b	0x1d5d0
000000000001d594	mov	w10, #0x0
000000000001d598	add	w11, w9, w10
000000000001d59c	cmp	w11, #0x0
000000000001d5a0	cinc	w11, w11, lt
000000000001d5a4	asr	w11, w11, #1
000000000001d5a8	sbfiz	x12, x11, #4, #32
000000000001d5ac	ldr	w12, [x8, x12]
000000000001d5b0	cmp	w12, #0x19
000000000001d5b4	csinc	w10, w10, w11, ge
000000000001d5b8	csel	w9, w9, w11, lt
000000000001d5bc	cmp	w10, w9
000000000001d5c0	b.lt	0x1d598
000000000001d5c4	b	0x1d5d0
000000000001d5c8	mov	w10, #0x0
000000000001d5cc	b	0x1d5d0
000000000001d5d0	sxtw	x9, w10
000000000001d5d4	add	x8, x8, x9, lsl #4
000000000001d5d8	ldr	x8, [x8, #0x8]
000000000001d5dc	ldr	x8, [x8]
000000000001d5e0	mov	x0, x23
000000000001d5e4	blr	x8
000000000001d5e8	mov	x2, x0
000000000001d5ec	mov	x0, x21
000000000001d5f0	mov	x1, x24
000000000001d5f4	bl	"_kfun:kotlin.text#checkBoundsIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
000000000001d5f8	sub	w19, w24, w21
000000000001d5fc	ldr	w8, [x20, #0x10]
000000000001d600	add	w1, w8, w19
000000000001d604	mov	x0, x20
000000000001d608	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001d60c	ldr	x8, [x23]
000000000001d610	and	x8, x8, #0xfffffffffffffffc
000000000001d614	ldr	x8, [x8]
000000000001d618	ldr	w8, [x8, #0x5c]
000000000001d61c	cmp	w8, #0x75
000000000001d620	b.ne	0x1d660
000000000001d624	ldrsw	x22, [x20, #0x10]
000000000001d628	ldr	x8, [x20, #0x8]
000000000001d62c	str	x8, [sp, #0x28]
000000000001d630	add	x8, x8, x22, lsl #1
000000000001d634	add	x0, x8, #0x10
000000000001d638	add	x8, x23, w21, sxtw #1
000000000001d63c	add	x1, x8, #0x10
000000000001d640	sbfiz	x2, x19, #1, #32
000000000001d644	bl	0x51aac ; symbol stub for: _memcpy
000000000001d648	add	w21, w22, w19
000000000001d64c	mov	x0, x20
000000000001d650	mov	x1, x21
000000000001d654	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001d658	str	w21, [x20, #0x10]
000000000001d65c	b	0x1d780
000000000001d660	cmp	w24, w21
000000000001d664	csel	w27, w24, w21, gt
000000000001d668	mov	w28, #0x19
000000000001d66c	cmp	w21, w27
000000000001d670	b.eq	0x1d780
000000000001d674	ldarb	w8, [x26]
000000000001d678	tbz	w8, #0x0, 0x1d680
000000000001d67c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d680	ldr	x22, [x20, #0x8]
000000000001d684	str	x22, [sp, #0x30]
000000000001d688	ldrsw	x19, [x20, #0x10]
000000000001d68c	add	w24, w19, #0x1
000000000001d690	mov	x0, x20
000000000001d694	mov	x1, x24
000000000001d698	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001d69c	str	w24, [x20, #0x10]
000000000001d6a0	ldr	x8, [x23]
000000000001d6a4	and	x8, x8, #0xfffffffffffffffc
000000000001d6a8	ldr	x8, [x8]
000000000001d6ac	ldr	w9, [x8, #0x3c]
000000000001d6b0	ldr	x8, [x8, #0x40]
000000000001d6b4	tbnz	w9, #0x1f, 0x1d6c0
000000000001d6b8	and	x9, x9, x28
000000000001d6bc	b	0x1d744
000000000001d6c0	neg	w10, w9
000000000001d6c4	mvn	w9, w9
000000000001d6c8	cmp	w10, #0x9
000000000001d6cc	b.ge	0x1d704
000000000001d6d0	cmp	w10, #0x2
000000000001d6d4	b.lt	0x1d738
000000000001d6d8	mov	x10, #0x0
000000000001d6dc	mov	x11, x8
000000000001d6e0	ldr	w12, [x11]
000000000001d6e4	cmp	w12, #0x18
000000000001d6e8	b.gt	0x1d740
000000000001d6ec	add	x10, x10, #0x1
000000000001d6f0	add	x11, x11, #0x10
000000000001d6f4	cmp	x9, x10
000000000001d6f8	b.ne	0x1d6e0
000000000001d6fc	mov	x10, x9
000000000001d700	b	0x1d740
000000000001d704	mov	w10, #0x0
000000000001d708	add	w11, w9, w10
000000000001d70c	cmp	w11, #0x0
000000000001d710	cinc	w11, w11, lt
000000000001d714	asr	w11, w11, #1
000000000001d718	sbfiz	x12, x11, #4, #32
000000000001d71c	ldr	w12, [x8, x12]
000000000001d720	cmp	w12, #0x19
000000000001d724	csinc	w10, w10, w11, ge
000000000001d728	csel	w9, w9, w11, lt
000000000001d72c	cmp	w10, w9
000000000001d730	b.lt	0x1d708
000000000001d734	b	0x1d740
000000000001d738	mov	w10, #0x0
000000000001d73c	b	0x1d740
000000000001d740	sxtw	x9, w10
000000000001d744	add	x8, x8, x9, lsl #4
000000000001d748	ldr	x8, [x8, #0x8]
000000000001d74c	ldr	x8, [x8, #0x8]
000000000001d750	mov	x0, x23
000000000001d754	mov	x1, x21
000000000001d758	blr	x8
000000000001d75c	ldr	w8, [x22, #0x8]
000000000001d760	cmp	w8, w19
000000000001d764	b.ls	0x1d7c8
000000000001d768	add	w21, w21, #0x1
000000000001d76c	ldr	xzr, [x22]
000000000001d770	add	x8, x22, x19, lsl #1
000000000001d774	strh	w0, [x8, #0x10]
000000000001d778	cmp	w21, w27
000000000001d77c	b.ne	0x1d674
000000000001d780	ldr	x10, [sp, #0x8]
000000000001d784	str	x20, [x10]
000000000001d788	adrp	x0, 79 ; 0x6c000
000000000001d78c	add	x0, x0, #0xbb0
000000000001d790	blr	x25
000000000001d794	ldr	x8, [x0]
000000000001d798	ldr	x9, [sp, #0x18]
000000000001d79c	str	x9, [x8, #0x110]
000000000001d7a0	str	x20, [x10]
000000000001d7a4	mov	x0, x20
000000000001d7a8	ldp	x29, x30, [sp, #0x90]
000000000001d7ac	ldp	x20, x19, [sp, #0x80]
000000000001d7b0	ldp	x22, x21, [sp, #0x70]
000000000001d7b4	ldp	x24, x23, [sp, #0x60]
000000000001d7b8	ldp	x26, x25, [sp, #0x50]
000000000001d7bc	ldp	x28, x27, [sp, #0x40]
000000000001d7c0	add	sp, sp, #0xa0
000000000001d7c4	ret
000000000001d7c8	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder:
000000000001d7cc	sub	sp, sp, #0x90
000000000001d7d0	stp	x26, x25, [sp, #0x40]
000000000001d7d4	stp	x24, x23, [sp, #0x50]
000000000001d7d8	stp	x22, x21, [sp, #0x60]
000000000001d7dc	stp	x20, x19, [sp, #0x70]
000000000001d7e0	stp	x29, x30, [sp, #0x80]
000000000001d7e4	add	x29, sp, #0x80
000000000001d7e8	mov	x20, x2
000000000001d7ec	mov	x21, x1
000000000001d7f0	mov	x19, x0
000000000001d7f4	movi.16b	v0, #0x0
000000000001d7f8	stp	q0, q0, [sp, #0x10]
000000000001d7fc	adrp	x0, 79 ; 0x6c000
000000000001d800	add	x0, x0, #0xbb0
000000000001d804	ldr	x8, [x0]
000000000001d808	blr	x8
000000000001d80c	ldr	x22, [x0]
000000000001d810	ldr	x8, [x22, #0x110]
000000000001d814	add	x9, sp, #0x10
000000000001d818	str	x9, [x22, #0x110]
000000000001d81c	mov	x9, #0x400000000
000000000001d820	stp	x8, x9, [sp, #0x18]
000000000001d824	adr	x8, #0x6921f
000000000001d828	nop
000000000001d82c	ldarb	w8, [x8]
000000000001d830	tbz	w8, #0x0, 0x1d838
000000000001d834	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d838	ldr	w8, [x19, #0x10]
000000000001d83c	add	w1, w8, #0xb
000000000001d840	mov	x0, x19
000000000001d844	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001d848	ldrsw	x23, [x19, #0x10]
000000000001d84c	ldr	x25, [x19, #0x8]
000000000001d850	str	x25, [sp, #0x28]
000000000001d854	add	x24, sp, #0x34
000000000001d858	str	x21, [sp]
000000000001d85c	adr	x2, #0x39437 ; literal pool for: "%d"
000000000001d860	nop
000000000001d864	add	x0, sp, #0x34
000000000001d868	mov	w1, #0xc
000000000001d86c	bl	__ZN5konan8snprintfEPcmPKcz
000000000001d870	ldrb	w8, [sp, #0x34]
000000000001d874	cbz	w8, 0x1d894
000000000001d878	add	x24, sp, #0x34
000000000001d87c	add	x9, x25, x23, lsl #1
000000000001d880	add	x9, x9, #0x10
000000000001d884	sxtb	w8, w8
000000000001d888	strh	w8, [x9], #0x2
000000000001d88c	ldrb	w8, [x24, #0x1]!
000000000001d890	cbnz	w8, 0x1d884
000000000001d894	add	x8, sp, #0x34
000000000001d898	sub	w8, w24, w8
000000000001d89c	add	w21, w23, w8
000000000001d8a0	mov	x0, x19
000000000001d8a4	mov	x1, x21
000000000001d8a8	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001d8ac	str	w21, [x19, #0x10]
000000000001d8b0	str	x19, [x20]
000000000001d8b4	ldr	x8, [sp, #0x18]
000000000001d8b8	str	x8, [x22, #0x110]
000000000001d8bc	mov	x0, x19
000000000001d8c0	ldp	x29, x30, [sp, #0x80]
000000000001d8c4	ldp	x20, x19, [sp, #0x70]
000000000001d8c8	ldp	x22, x21, [sp, #0x60]
000000000001d8cc	ldp	x24, x23, [sp, #0x50]
000000000001d8d0	ldp	x26, x25, [sp, #0x40]
000000000001d8d4	add	sp, sp, #0x90
000000000001d8d8	ret
_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder:
000000000001d8dc	sub	sp, sp, #0x60
000000000001d8e0	stp	x24, x23, [sp, #0x20]
000000000001d8e4	stp	x22, x21, [sp, #0x30]
000000000001d8e8	stp	x20, x19, [sp, #0x40]
000000000001d8ec	stp	x29, x30, [sp, #0x50]
000000000001d8f0	add	x29, sp, #0x50
000000000001d8f4	mov	x20, x2
000000000001d8f8	mov	x21, x1
000000000001d8fc	mov	x19, x0
000000000001d900	movi.16b	v0, #0x0
000000000001d904	stp	q0, q0, [sp]
000000000001d908	adrp	x0, 79 ; 0x6c000
000000000001d90c	add	x0, x0, #0xbb0
000000000001d910	ldr	x8, [x0]
000000000001d914	blr	x8
000000000001d918	ldr	x22, [x0]
000000000001d91c	ldr	x8, [x22, #0x110]
000000000001d920	mov	x9, sp
000000000001d924	str	x9, [x22, #0x110]
000000000001d928	mov	x9, #0x400000000
000000000001d92c	stp	x8, x9, [sp, #0x8]
000000000001d930	adr	x8, #0x69113
000000000001d934	nop
000000000001d938	ldarb	w8, [x8]
000000000001d93c	tbz	w8, #0x0, 0x1d944
000000000001d940	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d944	adr	x8, #0x478ac
000000000001d948	nop
000000000001d94c	cmp	x21, #0x0
000000000001d950	csel	x21, x8, x21, eq
000000000001d954	ldr	w8, [x21, #0x8]
000000000001d958	ldr	w9, [x19, #0x10]
000000000001d95c	add	w1, w9, w8
000000000001d960	mov	x0, x19
000000000001d964	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001d968	ldrsw	x23, [x19, #0x10]
000000000001d96c	ldr	x8, [x19, #0x8]
000000000001d970	str	x8, [sp, #0x18]
000000000001d974	ldrsw	x24, [x21, #0x8]
000000000001d978	add	x8, x8, x23, lsl #1
000000000001d97c	add	x0, x8, #0x10
000000000001d980	add	x1, x21, #0x10
000000000001d984	lsl	x2, x24, #1
000000000001d988	bl	0x51aac ; symbol stub for: _memcpy
000000000001d98c	add	w21, w23, w24
000000000001d990	mov	x0, x19
000000000001d994	mov	x1, x21
000000000001d998	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001d99c	str	w21, [x19, #0x10]
000000000001d9a0	str	x19, [x20]
000000000001d9a4	ldr	x8, [sp, #0x8]
000000000001d9a8	str	x8, [x22, #0x110]
000000000001d9ac	mov	x0, x19
000000000001d9b0	ldp	x29, x30, [sp, #0x50]
000000000001d9b4	ldp	x20, x19, [sp, #0x40]
000000000001d9b8	ldp	x22, x21, [sp, #0x30]
000000000001d9bc	ldp	x24, x23, [sp, #0x20]
000000000001d9c0	add	sp, sp, #0x60
000000000001d9c4	ret
_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}:
000000000001d9c8	sub	sp, sp, #0x70
000000000001d9cc	stp	x22, x21, [sp, #0x40]
000000000001d9d0	stp	x20, x19, [sp, #0x50]
000000000001d9d4	stp	x29, x30, [sp, #0x60]
000000000001d9d8	add	x29, sp, #0x60
000000000001d9dc	mov	x20, x1
000000000001d9e0	mov	x19, x0
000000000001d9e4	movi.16b	v0, #0x0
000000000001d9e8	stp	q0, q0, [sp]
000000000001d9ec	str	xzr, [sp, #0x30]
000000000001d9f0	str	q0, [sp, #0x20]
000000000001d9f4	mov	x22, sp
000000000001d9f8	adrp	x0, 79 ; 0x6c000
000000000001d9fc	add	x0, x0, #0xbb0
000000000001da00	ldr	x8, [x0]
000000000001da04	blr	x8
000000000001da08	ldr	x21, [x0]
000000000001da0c	ldr	x8, [x21, #0x110]
000000000001da10	str	x22, [x21, #0x110]
000000000001da14	mov	x9, #0x700000000
000000000001da18	stp	x8, x9, [sp, #0x8]
000000000001da1c	adr	x8, #0x69027
000000000001da20	nop
000000000001da24	ldarb	w8, [x8]
000000000001da28	tbz	w8, #0x0, 0x1da30
000000000001da2c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001da30	ldr	x8, [x19, #0x8]
000000000001da34	str	x8, [sp, #0x18]
000000000001da38	ldr	w8, [x8, #0x8]
000000000001da3c	cmp	w8, w20
000000000001da40	b.ge	0x1da70
000000000001da44	add	x2, x22, #0x30
000000000001da48	ldr	x0, [x19, #0x8]
000000000001da4c	ldr	w8, [x0, #0x8]
000000000001da50	lsl	w8, w8, #1
000000000001da54	add	w8, w8, #0x2
000000000001da58	cmp	w8, w20
000000000001da5c	csel	w1, w20, w8, lt
000000000001da60	stp	x0, x0, [sp, #0x20]
000000000001da64	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.CharArray(kotlin.Int;kotlin.Int){}kotlin.CharArray"
000000000001da68	str	x0, [sp, #0x30]
000000000001da6c	str	x0, [x19, #0x8]
000000000001da70	ldr	x8, [sp, #0x8]
000000000001da74	str	x8, [x21, #0x110]
000000000001da78	ldp	x29, x30, [sp, #0x60]
000000000001da7c	ldp	x20, x19, [sp, #0x50]
000000000001da80	ldp	x22, x21, [sp, #0x40]
000000000001da84	add	sp, sp, #0x70
000000000001da88	ret
_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String:
000000000001da8c	sub	sp, sp, #0x80
000000000001da90	stp	x24, x23, [sp, #0x40]
000000000001da94	stp	x22, x21, [sp, #0x50]
000000000001da98	stp	x20, x19, [sp, #0x60]
000000000001da9c	stp	x29, x30, [sp, #0x70]
000000000001daa0	add	x29, sp, #0x70
000000000001daa4	mov	x19, x1
000000000001daa8	mov	x20, x0
000000000001daac	movi.16b	v0, #0x0
000000000001dab0	stp	q0, q0, [sp]
000000000001dab4	adrp	x0, 79 ; 0x6c000
000000000001dab8	add	x0, x0, #0xbb0
000000000001dabc	ldr	x8, [x0]
000000000001dac0	blr	x8
000000000001dac4	ldr	x21, [x0]
000000000001dac8	ldr	x8, [x21, #0x110]
000000000001dacc	mov	x9, sp
000000000001dad0	str	x9, [x21, #0x110]
000000000001dad4	mov	x9, #0x400000000
000000000001dad8	stp	x8, x9, [sp, #0x8]
000000000001dadc	adr	x8, #0x68f67
000000000001dae0	nop
000000000001dae4	ldarb	w8, [x8]
000000000001dae8	tbz	w8, #0x0, 0x1daf0
000000000001daec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001daf0	ldr	x22, [x20, #0x8]
000000000001daf4	str	x22, [sp, #0x18]
000000000001daf8	ldr	w23, [x20, #0x10]
000000000001dafc	cbz	w23, 0x1db58
000000000001db00	tbnz	w23, #0x1f, 0x1db9c
000000000001db04	mov	x8, x23
000000000001db08	sxtw	x24, w8
000000000001db0c	ldr	x8, [x21, #0x118]
000000000001db10	lsl	x9, x23, #1
000000000001db14	add	x9, x9, #0x1f
000000000001db18	and	x1, x9, #0x3fffffff8
000000000001db1c	add	x0, x8, #0x70
000000000001db20	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001db24	mov	x20, x0
000000000001db28	adr	x8, #0x3bbb8
000000000001db2c	nop
000000000001db30	stp	x8, xzr, [x20, #0x10]!
000000000001db34	stur	xzr, [x20, #-0x8]
000000000001db38	str	w23, [x20, #0x8]
000000000001db3c	str	x20, [x19]
000000000001db40	add	x0, x20, #0x10
000000000001db44	add	x1, x22, #0x10
000000000001db48	lsl	x2, x24, #1
000000000001db4c	bl	0x51aac ; symbol stub for: _memcpy
000000000001db50	str	x20, [x19]
000000000001db54	b	0x1db74
000000000001db58	ldr	x8, [x21, #0x110]
000000000001db5c	add	x9, sp, #0x28
000000000001db60	str	x9, [x21, #0x110]
000000000001db64	adr	x20, #0x47674
000000000001db68	nop
000000000001db6c	str	x20, [x19]
000000000001db70	str	x8, [x21, #0x110]
000000000001db74	str	x20, [x19]
000000000001db78	ldr	x8, [sp, #0x8]
000000000001db7c	str	x8, [x21, #0x110]
000000000001db80	mov	x0, x20
000000000001db84	ldp	x29, x30, [sp, #0x70]
000000000001db88	ldp	x20, x19, [sp, #0x60]
000000000001db8c	ldp	x22, x21, [sp, #0x50]
000000000001db90	ldp	x24, x23, [sp, #0x40]
000000000001db94	add	sp, sp, #0x80
000000000001db98	ret
000000000001db9c	bl	_ThrowIllegalArgumentException
_kfun:kotlin.collections.AbstractCollection#contains(1:0){}kotlin.Boolean:
000000000001dba0	sub	sp, sp, #0x70
000000000001dba4	stp	x24, x23, [sp, #0x30]
000000000001dba8	stp	x22, x21, [sp, #0x40]
000000000001dbac	stp	x20, x19, [sp, #0x50]
000000000001dbb0	stp	x29, x30, [sp, #0x60]
000000000001dbb4	add	x29, sp, #0x60
000000000001dbb8	mov	x19, x1
000000000001dbbc	mov	x21, x0
000000000001dbc0	movi.16b	v0, #0x0
000000000001dbc4	stp	q0, q0, [sp]
000000000001dbc8	str	xzr, [sp, #0x20]
000000000001dbcc	mov	x24, sp
000000000001dbd0	adrp	x0, 79 ; 0x6c000
000000000001dbd4	add	x0, x0, #0xbb0
000000000001dbd8	ldr	x8, [x0]
000000000001dbdc	blr	x8
000000000001dbe0	ldr	x22, [x0]
000000000001dbe4	ldr	x8, [x22, #0x110]
000000000001dbe8	str	x24, [x22, #0x110]
000000000001dbec	mov	x9, #0x500000000
000000000001dbf0	stp	x8, x9, [sp, #0x8]
000000000001dbf4	adr	x23, #0x68e4f
000000000001dbf8	nop
000000000001dbfc	ldarb	w8, [x23]
000000000001dc00	tbz	w8, #0x0, 0x1dc08
000000000001dc04	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001dc08	cbz	x21, 0x1ddf0
000000000001dc0c	ldr	x8, [x21]
000000000001dc10	and	x8, x8, #0xfffffffffffffffc
000000000001dc14	ldr	x8, [x8]
000000000001dc18	ldr	w9, [x8, #0x3c]
000000000001dc1c	ldr	x8, [x8, #0x40]
000000000001dc20	tbnz	w9, #0x1f, 0x1dc40
000000000001dc24	mov	w10, #0x12
000000000001dc28	and	x9, x9, x10
000000000001dc2c	lsl	x9, x9, #4
000000000001dc30	ldr	w8, [x8, x9]
000000000001dc34	cmp	w8, #0x12
000000000001dc38	b.eq	0x1dd10
000000000001dc3c	b	0x1ddf0
000000000001dc40	neg	w10, w9
000000000001dc44	mvn	w9, w9
000000000001dc48	cmp	w10, #0x9
000000000001dc4c	b.ge	0x1dc98
000000000001dc50	cmp	w10, #0x2
000000000001dc54	b.lt	0x1dce0
000000000001dc58	mov	x10, #0x0
000000000001dc5c	mov	x11, x8
000000000001dc60	ldr	w12, [x11]
000000000001dc64	cmp	w12, #0x11
000000000001dc68	b.gt	0x1dcfc
000000000001dc6c	add	x10, x10, #0x1
000000000001dc70	add	x11, x11, #0x10
000000000001dc74	cmp	x9, x10
000000000001dc78	b.ne	0x1dc60
000000000001dc7c	mov	x10, x9
000000000001dc80	sxtw	x9, w10
000000000001dc84	lsl	x9, x9, #4
000000000001dc88	ldr	w8, [x8, x9]
000000000001dc8c	cmp	w8, #0x12
000000000001dc90	b.eq	0x1dd10
000000000001dc94	b	0x1ddf0
000000000001dc98	mov	w10, #0x0
000000000001dc9c	add	w11, w9, w10
000000000001dca0	cmp	w11, #0x0
000000000001dca4	cinc	w11, w11, lt
000000000001dca8	asr	w11, w11, #1
000000000001dcac	sbfiz	x12, x11, #4, #32
000000000001dcb0	ldr	w12, [x8, x12]
000000000001dcb4	cmp	w12, #0x12
000000000001dcb8	csinc	w10, w10, w11, ge
000000000001dcbc	csel	w9, w9, w11, lt
000000000001dcc0	cmp	w10, w9
000000000001dcc4	b.lt	0x1dc9c
000000000001dcc8	sxtw	x9, w10
000000000001dccc	lsl	x9, x9, #4
000000000001dcd0	ldr	w8, [x8, x9]
000000000001dcd4	cmp	w8, #0x12
000000000001dcd8	b.eq	0x1dd10
000000000001dcdc	b	0x1ddf0
000000000001dce0	mov	w10, #0x0
000000000001dce4	sxtw	x9, w10
000000000001dce8	lsl	x9, x9, #4
000000000001dcec	ldr	w8, [x8, x9]
000000000001dcf0	cmp	w8, #0x12
000000000001dcf4	b.eq	0x1dd10
000000000001dcf8	b	0x1ddf0
000000000001dcfc	sxtw	x9, w10
000000000001dd00	lsl	x9, x9, #4
000000000001dd04	ldr	w8, [x8, x9]
000000000001dd08	cmp	w8, #0x12
000000000001dd0c	b.ne	0x1ddf0
000000000001dd10	ldr	x8, [x21]
000000000001dd14	and	x8, x8, #0xfffffffffffffffc
000000000001dd18	ldr	x8, [x8]
000000000001dd1c	ldr	w9, [x8, #0x3c]
000000000001dd20	ldr	x8, [x8, #0x40]
000000000001dd24	tbnz	w9, #0x1f, 0x1dd4c
000000000001dd28	mov	w10, #0x12
000000000001dd2c	and	x9, x9, x10
000000000001dd30	add	x8, x8, x9, lsl #4
000000000001dd34	ldr	x8, [x8, #0x8]
000000000001dd38	ldr	x8, [x8, #0x18]
000000000001dd3c	mov	x0, x21
000000000001dd40	blr	x8
000000000001dd44	tbnz	w0, #0x0, 0x1dde8
000000000001dd48	b	0x1ddf0
000000000001dd4c	neg	w10, w9
000000000001dd50	mvn	w9, w9
000000000001dd54	cmp	w10, #0x9
000000000001dd58	b.ge	0x1dd90
000000000001dd5c	cmp	w10, #0x2
000000000001dd60	b.lt	0x1ddc4
000000000001dd64	mov	x10, #0x0
000000000001dd68	mov	x11, x8
000000000001dd6c	ldr	w12, [x11]
000000000001dd70	cmp	w12, #0x11
000000000001dd74	b.gt	0x1ddcc
000000000001dd78	add	x10, x10, #0x1
000000000001dd7c	add	x11, x11, #0x10
000000000001dd80	cmp	x9, x10
000000000001dd84	b.ne	0x1dd6c
000000000001dd88	mov	x10, x9
000000000001dd8c	b	0x1ddcc
000000000001dd90	mov	w10, #0x0
000000000001dd94	add	w11, w9, w10
000000000001dd98	cmp	w11, #0x0
000000000001dd9c	cinc	w11, w11, lt
000000000001dda0	asr	w11, w11, #1
000000000001dda4	sbfiz	x12, x11, #4, #32
000000000001dda8	ldr	w12, [x8, x12]
000000000001ddac	cmp	w12, #0x12
000000000001ddb0	csinc	w10, w10, w11, ge
000000000001ddb4	csel	w9, w9, w11, lt
000000000001ddb8	cmp	w10, w9
000000000001ddbc	b.lt	0x1dd94
000000000001ddc0	b	0x1ddcc
000000000001ddc4	mov	w10, #0x0
000000000001ddc8	b	0x1ddcc
000000000001ddcc	sxtw	x9, w10
000000000001ddd0	add	x8, x8, x9, lsl #4
000000000001ddd4	ldr	x8, [x8, #0x8]
000000000001ddd8	ldr	x8, [x8, #0x18]
000000000001dddc	mov	x0, x21
000000000001dde0	blr	x8
000000000001dde4	tbz	w0, #0x0, 0x1ddf0
000000000001dde8	mov	w0, #0x0
000000000001ddec	b	0x1e084
000000000001ddf0	add	x20, x24, #0x20
000000000001ddf4	add	x1, x24, #0x18
000000000001ddf8	ldr	x8, [x21]
000000000001ddfc	and	x8, x8, #0xfffffffffffffffc
000000000001de00	ldr	x8, [x8]
000000000001de04	ldr	w9, [x8, #0x3c]
000000000001de08	ldr	x8, [x8, #0x40]
000000000001de0c	tbnz	w9, #0x1f, 0x1de1c
000000000001de10	mov	w10, #0x31
000000000001de14	and	x9, x9, x10
000000000001de18	b	0x1dea0
000000000001de1c	neg	w10, w9
000000000001de20	mvn	w9, w9
000000000001de24	cmp	w10, #0x9
000000000001de28	b.ge	0x1de60
000000000001de2c	cmp	w10, #0x2
000000000001de30	b.lt	0x1de94
000000000001de34	mov	x10, #0x0
000000000001de38	mov	x11, x8
000000000001de3c	ldr	w12, [x11]
000000000001de40	cmp	w12, #0x30
000000000001de44	b.gt	0x1de9c
000000000001de48	add	x10, x10, #0x1
000000000001de4c	add	x11, x11, #0x10
000000000001de50	cmp	x9, x10
000000000001de54	b.ne	0x1de3c
000000000001de58	mov	x10, x9
000000000001de5c	b	0x1de9c
000000000001de60	mov	w10, #0x0
000000000001de64	add	w11, w9, w10
000000000001de68	cmp	w11, #0x0
000000000001de6c	cinc	w11, w11, lt
000000000001de70	asr	w11, w11, #1
000000000001de74	sbfiz	x12, x11, #4, #32
000000000001de78	ldr	w12, [x8, x12]
000000000001de7c	cmp	w12, #0x31
000000000001de80	csinc	w10, w10, w11, ge
000000000001de84	csel	w9, w9, w11, lt
000000000001de88	cmp	w10, w9
000000000001de8c	b.lt	0x1de64
000000000001de90	b	0x1de9c
000000000001de94	mov	w10, #0x0
000000000001de98	b	0x1de9c
000000000001de9c	sxtw	x9, w10
000000000001dea0	add	x8, x8, x9, lsl #4
000000000001dea4	ldr	x8, [x8, #0x8]
000000000001dea8	ldr	x8, [x8]
000000000001deac	mov	x0, x21
000000000001deb0	blr	x8
000000000001deb4	mov	x21, x0
000000000001deb8	mov	w24, #0xa0
000000000001debc	b	0x1dec4
000000000001dec0	cbz	x19, 0x1e080
000000000001dec4	ldr	x8, [x21]
000000000001dec8	and	x8, x8, #0xfffffffffffffffc
000000000001decc	ldr	x8, [x8]
000000000001ded0	ldr	w9, [x8, #0x3c]
000000000001ded4	ldr	x8, [x8, #0x40]
000000000001ded8	tbnz	w9, #0x1f, 0x1defc
000000000001dedc	and	x9, x9, x24
000000000001dee0	add	x8, x8, x9, lsl #4
000000000001dee4	ldr	x8, [x8, #0x8]
000000000001dee8	ldr	x8, [x8]
000000000001deec	mov	x0, x21
000000000001def0	blr	x8
000000000001def4	tbnz	w0, #0x0, 0x1df98
000000000001def8	b	0x1dde8
000000000001defc	neg	w10, w9
000000000001df00	mvn	w9, w9
000000000001df04	cmp	w10, #0x9
000000000001df08	b.ge	0x1df40
000000000001df0c	cmp	w10, #0x2
000000000001df10	b.lt	0x1df74
000000000001df14	mov	x10, #0x0
000000000001df18	mov	x11, x8
000000000001df1c	ldr	w12, [x11]
000000000001df20	cmp	w12, #0x9f
000000000001df24	b.gt	0x1df7c
000000000001df28	add	x10, x10, #0x1
000000000001df2c	add	x11, x11, #0x10
000000000001df30	cmp	x9, x10
000000000001df34	b.ne	0x1df1c
000000000001df38	mov	x10, x9
000000000001df3c	b	0x1df7c
000000000001df40	mov	w10, #0x0
000000000001df44	add	w11, w9, w10
000000000001df48	cmp	w11, #0x0
000000000001df4c	cinc	w11, w11, lt
000000000001df50	asr	w11, w11, #1
000000000001df54	sbfiz	x12, x11, #4, #32
000000000001df58	ldr	w12, [x8, x12]
000000000001df5c	cmp	w12, #0xa0
000000000001df60	csinc	w10, w10, w11, ge
000000000001df64	csel	w9, w9, w11, lt
000000000001df68	cmp	w10, w9
000000000001df6c	b.lt	0x1df44
000000000001df70	b	0x1df7c
000000000001df74	mov	w10, #0x0
000000000001df78	b	0x1df7c
000000000001df7c	sxtw	x9, w10
000000000001df80	add	x8, x8, x9, lsl #4
000000000001df84	ldr	x8, [x8, #0x8]
000000000001df88	ldr	x8, [x8]
000000000001df8c	mov	x0, x21
000000000001df90	blr	x8
000000000001df94	tbz	w0, #0x0, 0x1dde8
000000000001df98	ldarb	w8, [x23]
000000000001df9c	tbz	w8, #0x0, 0x1dfa4
000000000001dfa0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001dfa4	ldr	x8, [x21]
000000000001dfa8	and	x8, x8, #0xfffffffffffffffc
000000000001dfac	ldr	x8, [x8]
000000000001dfb0	ldr	w9, [x8, #0x3c]
000000000001dfb4	ldr	x8, [x8, #0x40]
000000000001dfb8	tbnz	w9, #0x1f, 0x1dfc4
000000000001dfbc	and	x9, x9, x24
000000000001dfc0	b	0x1e048
000000000001dfc4	neg	w10, w9
000000000001dfc8	mvn	w9, w9
000000000001dfcc	cmp	w10, #0x9
000000000001dfd0	b.ge	0x1e008
000000000001dfd4	cmp	w10, #0x2
000000000001dfd8	b.lt	0x1e03c
000000000001dfdc	mov	x10, #0x0
000000000001dfe0	mov	x11, x8
000000000001dfe4	ldr	w12, [x11]
000000000001dfe8	cmp	w12, #0x9f
000000000001dfec	b.gt	0x1e044
000000000001dff0	add	x10, x10, #0x1
000000000001dff4	add	x11, x11, #0x10
000000000001dff8	cmp	x9, x10
000000000001dffc	b.ne	0x1dfe4
000000000001e000	mov	x10, x9
000000000001e004	b	0x1e044
000000000001e008	mov	w10, #0x0
000000000001e00c	add	w11, w9, w10
000000000001e010	cmp	w11, #0x0
000000000001e014	cinc	w11, w11, lt
000000000001e018	asr	w11, w11, #1
000000000001e01c	sbfiz	x12, x11, #4, #32
000000000001e020	ldr	w12, [x8, x12]
000000000001e024	cmp	w12, #0xa0
000000000001e028	csinc	w10, w10, w11, ge
000000000001e02c	csel	w9, w9, w11, lt
000000000001e030	cmp	w10, w9
000000000001e034	b.lt	0x1e00c
000000000001e038	b	0x1e044
000000000001e03c	mov	w10, #0x0
000000000001e040	b	0x1e044
000000000001e044	sxtw	x9, w10
000000000001e048	add	x8, x8, x9, lsl #4
000000000001e04c	ldr	x8, [x8, #0x8]
000000000001e050	ldr	x8, [x8, #0x8]
000000000001e054	mov	x0, x21
000000000001e058	mov	x1, x20
000000000001e05c	blr	x8
000000000001e060	cbz	x0, 0x1dec0
000000000001e064	ldr	x8, [x0]
000000000001e068	and	x8, x8, #0xfffffffffffffffc
000000000001e06c	ldr	x8, [x8]
000000000001e070	ldr	x8, [x8, #0x70]
000000000001e074	mov	x1, x19
000000000001e078	blr	x8
000000000001e07c	tbz	w0, #0x0, 0x1dec4
000000000001e080	mov	w0, #0x1
000000000001e084	ldr	x8, [sp, #0x8]
000000000001e088	str	x8, [x22, #0x110]
000000000001e08c	ldp	x29, x30, [sp, #0x60]
000000000001e090	ldp	x20, x19, [sp, #0x50]
000000000001e094	ldp	x22, x21, [sp, #0x40]
000000000001e098	ldp	x24, x23, [sp, #0x30]
000000000001e09c	add	sp, sp, #0x70
000000000001e0a0	ret
_kfun:kotlin.collections.AbstractCollection#containsAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001e0a4	sub	sp, sp, #0x70
000000000001e0a8	stp	x24, x23, [sp, #0x30]
000000000001e0ac	stp	x22, x21, [sp, #0x40]
000000000001e0b0	stp	x20, x19, [sp, #0x50]
000000000001e0b4	stp	x29, x30, [sp, #0x60]
000000000001e0b8	add	x29, sp, #0x60
000000000001e0bc	mov	x20, x1
000000000001e0c0	mov	x19, x0
000000000001e0c4	movi.16b	v0, #0x0
000000000001e0c8	stp	q0, q0, [sp]
000000000001e0cc	str	xzr, [sp, #0x20]
000000000001e0d0	mov	x24, sp
000000000001e0d4	adrp	x0, 78 ; 0x6c000
000000000001e0d8	add	x0, x0, #0xbb0
000000000001e0dc	ldr	x8, [x0]
000000000001e0e0	blr	x8
000000000001e0e4	ldr	x22, [x0]
000000000001e0e8	ldr	x8, [x22, #0x110]
000000000001e0ec	str	x24, [x22, #0x110]
000000000001e0f0	mov	x9, #0x500000000
000000000001e0f4	stp	x8, x9, [sp, #0x8]
000000000001e0f8	adr	x23, #0x6894b
000000000001e0fc	nop
000000000001e100	ldarb	w8, [x23]
000000000001e104	tbz	w8, #0x0, 0x1e10c
000000000001e108	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e10c	cbz	x20, 0x1e2f4
000000000001e110	ldr	x8, [x20]
000000000001e114	and	x8, x8, #0xfffffffffffffffc
000000000001e118	ldr	x8, [x8]
000000000001e11c	ldr	w9, [x8, #0x3c]
000000000001e120	ldr	x8, [x8, #0x40]
000000000001e124	tbnz	w9, #0x1f, 0x1e144
000000000001e128	mov	w10, #0x12
000000000001e12c	and	x9, x9, x10
000000000001e130	lsl	x9, x9, #4
000000000001e134	ldr	w8, [x8, x9]
000000000001e138	cmp	w8, #0x12
000000000001e13c	b.eq	0x1e214
000000000001e140	b	0x1e2f4
000000000001e144	neg	w10, w9
000000000001e148	mvn	w9, w9
000000000001e14c	cmp	w10, #0x9
000000000001e150	b.ge	0x1e19c
000000000001e154	cmp	w10, #0x2
000000000001e158	b.lt	0x1e1e4
000000000001e15c	mov	x10, #0x0
000000000001e160	mov	x11, x8
000000000001e164	ldr	w12, [x11]
000000000001e168	cmp	w12, #0x11
000000000001e16c	b.gt	0x1e200
000000000001e170	add	x10, x10, #0x1
000000000001e174	add	x11, x11, #0x10
000000000001e178	cmp	x9, x10
000000000001e17c	b.ne	0x1e164
000000000001e180	mov	x10, x9
000000000001e184	sxtw	x9, w10
000000000001e188	lsl	x9, x9, #4
000000000001e18c	ldr	w8, [x8, x9]
000000000001e190	cmp	w8, #0x12
000000000001e194	b.eq	0x1e214
000000000001e198	b	0x1e2f4
000000000001e19c	mov	w10, #0x0
000000000001e1a0	add	w11, w9, w10
000000000001e1a4	cmp	w11, #0x0
000000000001e1a8	cinc	w11, w11, lt
000000000001e1ac	asr	w11, w11, #1
000000000001e1b0	sbfiz	x12, x11, #4, #32
000000000001e1b4	ldr	w12, [x8, x12]
000000000001e1b8	cmp	w12, #0x12
000000000001e1bc	csinc	w10, w10, w11, ge
000000000001e1c0	csel	w9, w9, w11, lt
000000000001e1c4	cmp	w10, w9
000000000001e1c8	b.lt	0x1e1a0
000000000001e1cc	sxtw	x9, w10
000000000001e1d0	lsl	x9, x9, #4
000000000001e1d4	ldr	w8, [x8, x9]
000000000001e1d8	cmp	w8, #0x12
000000000001e1dc	b.eq	0x1e214
000000000001e1e0	b	0x1e2f4
000000000001e1e4	mov	w10, #0x0
000000000001e1e8	sxtw	x9, w10
000000000001e1ec	lsl	x9, x9, #4
000000000001e1f0	ldr	w8, [x8, x9]
000000000001e1f4	cmp	w8, #0x12
000000000001e1f8	b.eq	0x1e214
000000000001e1fc	b	0x1e2f4
000000000001e200	sxtw	x9, w10
000000000001e204	lsl	x9, x9, #4
000000000001e208	ldr	w8, [x8, x9]
000000000001e20c	cmp	w8, #0x12
000000000001e210	b.ne	0x1e2f4
000000000001e214	ldr	x8, [x20]
000000000001e218	and	x8, x8, #0xfffffffffffffffc
000000000001e21c	ldr	x8, [x8]
000000000001e220	ldr	w9, [x8, #0x3c]
000000000001e224	ldr	x8, [x8, #0x40]
000000000001e228	tbnz	w9, #0x1f, 0x1e250
000000000001e22c	mov	w10, #0x12
000000000001e230	and	x9, x9, x10
000000000001e234	add	x8, x8, x9, lsl #4
000000000001e238	ldr	x8, [x8, #0x8]
000000000001e23c	ldr	x8, [x8, #0x18]
000000000001e240	mov	x0, x20
000000000001e244	blr	x8
000000000001e248	tbnz	w0, #0x0, 0x1e2ec
000000000001e24c	b	0x1e2f4
000000000001e250	neg	w10, w9
000000000001e254	mvn	w9, w9
000000000001e258	cmp	w10, #0x9
000000000001e25c	b.ge	0x1e294
000000000001e260	cmp	w10, #0x2
000000000001e264	b.lt	0x1e2c8
000000000001e268	mov	x10, #0x0
000000000001e26c	mov	x11, x8
000000000001e270	ldr	w12, [x11]
000000000001e274	cmp	w12, #0x11
000000000001e278	b.gt	0x1e2d0
000000000001e27c	add	x10, x10, #0x1
000000000001e280	add	x11, x11, #0x10
000000000001e284	cmp	x9, x10
000000000001e288	b.ne	0x1e270
000000000001e28c	mov	x10, x9
000000000001e290	b	0x1e2d0
000000000001e294	mov	w10, #0x0
000000000001e298	add	w11, w9, w10
000000000001e29c	cmp	w11, #0x0
000000000001e2a0	cinc	w11, w11, lt
000000000001e2a4	asr	w11, w11, #1
000000000001e2a8	sbfiz	x12, x11, #4, #32
000000000001e2ac	ldr	w12, [x8, x12]
000000000001e2b0	cmp	w12, #0x12
000000000001e2b4	csinc	w10, w10, w11, ge
000000000001e2b8	csel	w9, w9, w11, lt
000000000001e2bc	cmp	w10, w9
000000000001e2c0	b.lt	0x1e298
000000000001e2c4	b	0x1e2d0
000000000001e2c8	mov	w10, #0x0
000000000001e2cc	b	0x1e2d0
000000000001e2d0	sxtw	x9, w10
000000000001e2d4	add	x8, x8, x9, lsl #4
000000000001e2d8	ldr	x8, [x8, #0x8]
000000000001e2dc	ldr	x8, [x8, #0x18]
000000000001e2e0	mov	x0, x20
000000000001e2e4	blr	x8
000000000001e2e8	tbz	w0, #0x0, 0x1e2f4
000000000001e2ec	mov	w0, #0x1
000000000001e2f0	b	0x1e590
000000000001e2f4	add	x21, x24, #0x20
000000000001e2f8	add	x1, x24, #0x18
000000000001e2fc	ldr	x8, [x20]
000000000001e300	and	x8, x8, #0xfffffffffffffffc
000000000001e304	ldr	x8, [x8]
000000000001e308	ldr	w9, [x8, #0x3c]
000000000001e30c	ldr	x8, [x8, #0x40]
000000000001e310	tbnz	w9, #0x1f, 0x1e320
000000000001e314	mov	w10, #0x31
000000000001e318	and	x9, x9, x10
000000000001e31c	b	0x1e3a4
000000000001e320	neg	w10, w9
000000000001e324	mvn	w9, w9
000000000001e328	cmp	w10, #0x9
000000000001e32c	b.ge	0x1e364
000000000001e330	cmp	w10, #0x2
000000000001e334	b.lt	0x1e398
000000000001e338	mov	x10, #0x0
000000000001e33c	mov	x11, x8
000000000001e340	ldr	w12, [x11]
000000000001e344	cmp	w12, #0x30
000000000001e348	b.gt	0x1e3a0
000000000001e34c	add	x10, x10, #0x1
000000000001e350	add	x11, x11, #0x10
000000000001e354	cmp	x9, x10
000000000001e358	b.ne	0x1e340
000000000001e35c	mov	x10, x9
000000000001e360	b	0x1e3a0
000000000001e364	mov	w10, #0x0
000000000001e368	add	w11, w9, w10
000000000001e36c	cmp	w11, #0x0
000000000001e370	cinc	w11, w11, lt
000000000001e374	asr	w11, w11, #1
000000000001e378	sbfiz	x12, x11, #4, #32
000000000001e37c	ldr	w12, [x8, x12]
000000000001e380	cmp	w12, #0x31
000000000001e384	csinc	w10, w10, w11, ge
000000000001e388	csel	w9, w9, w11, lt
000000000001e38c	cmp	w10, w9
000000000001e390	b.lt	0x1e368
000000000001e394	b	0x1e3a0
000000000001e398	mov	w10, #0x0
000000000001e39c	b	0x1e3a0
000000000001e3a0	sxtw	x9, w10
000000000001e3a4	add	x8, x8, x9, lsl #4
000000000001e3a8	ldr	x8, [x8, #0x8]
000000000001e3ac	ldr	x8, [x8]
000000000001e3b0	mov	x0, x20
000000000001e3b4	blr	x8
000000000001e3b8	mov	x20, x0
000000000001e3bc	mov	w24, #0xa0
000000000001e3c0	b	0x1e418
000000000001e3c4	ldr	x8, [x20]
000000000001e3c8	and	x8, x8, #0xfffffffffffffffc
000000000001e3cc	ldr	x8, [x8]
000000000001e3d0	ldr	w9, [x8, #0x3c]
000000000001e3d4	ldr	x8, [x8, #0x40]
000000000001e3d8	tbnz	w9, #0x1f, 0x1e494
000000000001e3dc	and	x9, x9, x24
000000000001e3e0	add	x8, x8, x9, lsl #4
000000000001e3e4	ldr	x8, [x8, #0x8]
000000000001e3e8	ldr	x8, [x8, #0x8]
000000000001e3ec	mov	x0, x20
000000000001e3f0	mov	x1, x21
000000000001e3f4	blr	x8
000000000001e3f8	mov	x1, x0
000000000001e3fc	ldr	x8, [x19]
000000000001e400	and	x8, x8, #0xfffffffffffffffc
000000000001e404	ldr	x8, [x8]
000000000001e408	ldr	x8, [x8, #0x90]
000000000001e40c	mov	x0, x19
000000000001e410	blr	x8
000000000001e414	tbz	w0, #0x0, 0x1e58c
000000000001e418	ldr	x8, [x20]
000000000001e41c	and	x8, x8, #0xfffffffffffffffc
000000000001e420	ldr	x8, [x8]
000000000001e424	ldr	w9, [x8, #0x3c]
000000000001e428	ldr	x8, [x8, #0x40]
000000000001e42c	tbnz	w9, #0x1f, 0x1e450
000000000001e430	and	x9, x9, x24
000000000001e434	add	x8, x8, x9, lsl #4
000000000001e438	ldr	x8, [x8, #0x8]
000000000001e43c	ldr	x8, [x8]
000000000001e440	mov	x0, x20
000000000001e444	blr	x8
000000000001e448	tbnz	w0, #0x0, 0x1e574
000000000001e44c	b	0x1e2ec
000000000001e450	neg	w10, w9
000000000001e454	mvn	w9, w9
000000000001e458	cmp	w10, #0x9
000000000001e45c	b.ge	0x1e4dc
000000000001e460	cmp	w10, #0x2
000000000001e464	b.lt	0x1e544
000000000001e468	mov	x10, #0x0
000000000001e46c	mov	x11, x8
000000000001e470	ldr	w12, [x11]
000000000001e474	cmp	w12, #0x9f
000000000001e478	b.gt	0x1e558
000000000001e47c	add	x10, x10, #0x1
000000000001e480	add	x11, x11, #0x10
000000000001e484	cmp	x9, x10
000000000001e488	b.ne	0x1e470
000000000001e48c	mov	x10, x9
000000000001e490	b	0x1e558
000000000001e494	neg	w10, w9
000000000001e498	mvn	w9, w9
000000000001e49c	cmp	w10, #0x9
000000000001e4a0	b.ge	0x1e510
000000000001e4a4	cmp	w10, #0x2
000000000001e4a8	b.lt	0x1e54c
000000000001e4ac	mov	x10, #0x0
000000000001e4b0	mov	x11, x8
000000000001e4b4	ldr	w12, [x11]
000000000001e4b8	cmp	w12, #0x9f
000000000001e4bc	b.gt	0x1e584
000000000001e4c0	add	x10, x10, #0x1
000000000001e4c4	add	x11, x11, #0x10
000000000001e4c8	cmp	x9, x10
000000000001e4cc	b.ne	0x1e4b4
000000000001e4d0	mov	x10, x9
000000000001e4d4	sxtw	x9, w10
000000000001e4d8	b	0x1e3e0
000000000001e4dc	mov	w10, #0x0
000000000001e4e0	add	w11, w9, w10
000000000001e4e4	cmp	w11, #0x0
000000000001e4e8	cinc	w11, w11, lt
000000000001e4ec	asr	w11, w11, #1
000000000001e4f0	sbfiz	x12, x11, #4, #32
000000000001e4f4	ldr	w12, [x8, x12]
000000000001e4f8	cmp	w12, #0xa0
000000000001e4fc	csinc	w10, w10, w11, ge
000000000001e500	csel	w9, w9, w11, lt
000000000001e504	cmp	w10, w9
000000000001e508	b.lt	0x1e4e0
000000000001e50c	b	0x1e558
000000000001e510	mov	w10, #0x0
000000000001e514	add	w11, w9, w10
000000000001e518	cmp	w11, #0x0
000000000001e51c	cinc	w11, w11, lt
000000000001e520	asr	w11, w11, #1
000000000001e524	sbfiz	x12, x11, #4, #32
000000000001e528	ldr	w12, [x8, x12]
000000000001e52c	cmp	w12, #0xa0
000000000001e530	csinc	w10, w10, w11, ge
000000000001e534	csel	w9, w9, w11, lt
000000000001e538	cmp	w10, w9
000000000001e53c	b.lt	0x1e514
000000000001e540	b	0x1e584
000000000001e544	mov	w10, #0x0
000000000001e548	b	0x1e558
000000000001e54c	mov	w10, #0x0
000000000001e550	sxtw	x9, w10
000000000001e554	b	0x1e3e0
000000000001e558	sxtw	x9, w10
000000000001e55c	add	x8, x8, x9, lsl #4
000000000001e560	ldr	x8, [x8, #0x8]
000000000001e564	ldr	x8, [x8]
000000000001e568	mov	x0, x20
000000000001e56c	blr	x8
000000000001e570	tbz	w0, #0x0, 0x1e2ec
000000000001e574	ldarb	w8, [x23]
000000000001e578	tbz	w8, #0x0, 0x1e3c4
000000000001e57c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e580	b	0x1e3c4
000000000001e584	sxtw	x9, w10
000000000001e588	b	0x1e3e0
000000000001e58c	mov	w0, #0x0
000000000001e590	ldr	x8, [sp, #0x8]
000000000001e594	str	x8, [x22, #0x110]
000000000001e598	ldp	x29, x30, [sp, #0x60]
000000000001e59c	ldp	x20, x19, [sp, #0x50]
000000000001e5a0	ldp	x22, x21, [sp, #0x40]
000000000001e5a4	ldp	x24, x23, [sp, #0x30]
000000000001e5a8	add	sp, sp, #0x70
000000000001e5ac	ret
_kfun:kotlin.collections.AbstractCollection#isEmpty(){}kotlin.Boolean:
000000000001e5b0	stp	x20, x19, [sp, #-0x20]!
000000000001e5b4	stp	x29, x30, [sp, #0x10]
000000000001e5b8	add	x29, sp, #0x10
000000000001e5bc	mov	x19, x0
000000000001e5c0	adr	x8, #0x68483
000000000001e5c4	nop
000000000001e5c8	ldarb	w8, [x8]
000000000001e5cc	tbz	w8, #0x0, 0x1e5d4
000000000001e5d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e5d4	ldr	x8, [x19]
000000000001e5d8	and	x8, x8, #0xfffffffffffffffc
000000000001e5dc	ldr	x8, [x8]
000000000001e5e0	ldr	x8, [x8, #0x88]
000000000001e5e4	mov	x0, x19
000000000001e5e8	blr	x8
000000000001e5ec	cmp	w0, #0x0
000000000001e5f0	cset	w0, eq
000000000001e5f4	ldp	x29, x30, [sp, #0x10]
000000000001e5f8	ldp	x20, x19, [sp], #0x20
000000000001e5fc	ret
_kfun:kotlin.collections.AbstractCollection#toString(){}kotlin.String:
000000000001e600	sub	sp, sp, #0x50
000000000001e604	stp	x22, x21, [sp, #0x20]
000000000001e608	stp	x20, x19, [sp, #0x30]
000000000001e60c	stp	x29, x30, [sp, #0x40]
000000000001e610	add	x29, sp, #0x40
000000000001e614	mov	x19, x1
000000000001e618	mov	x20, x0
000000000001e61c	movi.16b	v0, #0x0
000000000001e620	stp	q0, q0, [sp]
000000000001e624	adrp	x0, 78 ; 0x6c000
000000000001e628	add	x0, x0, #0xbb0
000000000001e62c	ldr	x8, [x0]
000000000001e630	blr	x8
000000000001e634	ldr	x21, [x0]
000000000001e638	ldr	x8, [x21, #0x110]
000000000001e63c	mov	x9, sp
000000000001e640	str	x9, [x21, #0x110]
000000000001e644	mov	x9, #0x400000000
000000000001e648	stp	x8, x9, [sp, #0x8]
000000000001e64c	adr	x8, #0x683f7
000000000001e650	nop
000000000001e654	ldarb	w8, [x8]
000000000001e658	tbz	w8, #0x0, 0x1e660
000000000001e65c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e660	ldr	x8, [x21, #0x118]
000000000001e664	add	x0, x8, #0x70
000000000001e668	mov	w1, #0x18
000000000001e66c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001e670	adr	x8, #0x3de20
000000000001e674	nop
000000000001e678	mov	x3, x0
000000000001e67c	str	x8, [x3, #0x10]!
000000000001e680	stur	xzr, [x3, #-0x8]
000000000001e684	str	x3, [sp, #0x18]
000000000001e688	str	x20, [x3, #0x8]
000000000001e68c	adr	x1, #0x46ba4
000000000001e690	nop
000000000001e694	adr	x2, #0x46bbc
000000000001e698	nop
000000000001e69c	mov	x0, x20
000000000001e6a0	mov	x4, x19
000000000001e6a4	bl	"_kfun:kotlin.collections#joinToString$default__at__kotlin.collections.Iterable<0:0>(kotlin.CharSequence?;kotlin.CharSequence?;kotlin.CharSequence?;kotlin.Int;kotlin.CharSequence?;kotlin.Function1<0:0,kotlin.CharSequence>?;kotlin.Int){0ยง<kotlin.Any?>}kotlin.String"
000000000001e6a8	str	x0, [x19]
000000000001e6ac	ldr	x8, [sp, #0x8]
000000000001e6b0	str	x8, [x21, #0x110]
000000000001e6b4	ldp	x29, x30, [sp, #0x40]
000000000001e6b8	ldp	x20, x19, [sp, #0x30]
000000000001e6bc	ldp	x22, x21, [sp, #0x20]
000000000001e6c0	add	sp, sp, #0x50
000000000001e6c4	ret
_kfun:kotlin.collections.AbstractCollection#toArray(){}kotlin.Array<kotlin.Any?>:
000000000001e6c8	stp	x20, x19, [sp, #-0x20]!
000000000001e6cc	stp	x29, x30, [sp, #0x10]
000000000001e6d0	add	x29, sp, #0x10
000000000001e6d4	mov	x19, x1
000000000001e6d8	mov	x20, x0
000000000001e6dc	adr	x8, #0x68367
000000000001e6e0	nop
000000000001e6e4	ldarb	w8, [x8]
000000000001e6e8	tbz	w8, #0x0, 0x1e6f0
000000000001e6ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e6f0	mov	x0, x20
000000000001e6f4	mov	x1, x19
000000000001e6f8	bl	"_kfun:kotlin.collections#copyToArrayImpl(kotlin.collections.Collection<*>){}kotlin.Array<kotlin.Any?>"
000000000001e6fc	str	x0, [x19]
000000000001e700	ldp	x29, x30, [sp, #0x10]
000000000001e704	ldp	x20, x19, [sp], #0x20
000000000001e708	ret
_kfun:kotlin.collections.AbstractCollection#toArray(kotlin.Array<0:0>){0ยง<kotlin.Any?>}kotlin.Array<0:0>:
000000000001e70c	sub	sp, sp, #0x90
000000000001e710	stp	x28, x27, [sp, #0x30]
000000000001e714	stp	x26, x25, [sp, #0x40]
000000000001e718	stp	x24, x23, [sp, #0x50]
000000000001e71c	stp	x22, x21, [sp, #0x60]
000000000001e720	stp	x20, x19, [sp, #0x70]
000000000001e724	stp	x29, x30, [sp, #0x80]
000000000001e728	add	x29, sp, #0x80
000000000001e72c	mov	x19, x2
000000000001e730	mov	x20, x1
000000000001e734	mov	x23, x0
000000000001e738	adr	x26, #0x6830b
000000000001e73c	nop
000000000001e740	ldarb	w8, [x26]
000000000001e744	tbz	w8, #0x0, 0x1e74c
000000000001e748	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e74c	movi.16b	v0, #0x0
000000000001e750	stp	q0, q0, [sp]
000000000001e754	str	xzr, [sp, #0x20]
000000000001e758	mov	x24, sp
000000000001e75c	adrp	x21, 78 ; 0x6c000
000000000001e760	add	x21, x21, #0xbb0
000000000001e764	ldr	x25, [x21]
000000000001e768	mov	x0, x21
000000000001e76c	blr	x25
000000000001e770	ldr	x8, [x0]
000000000001e774	ldr	x9, [x8, #0x110]
000000000001e778	str	x24, [x8, #0x110]
000000000001e77c	mov	x8, #0x500000000
000000000001e780	stp	x9, x8, [sp, #0x8]
000000000001e784	ldr	w22, [x20, #0x8]
000000000001e788	ldr	x8, [x23]
000000000001e78c	and	x8, x8, #0xfffffffffffffffc
000000000001e790	ldr	x8, [x8]
000000000001e794	ldr	w9, [x8, #0x3c]
000000000001e798	ldr	x8, [x8, #0x40]
000000000001e79c	tbnz	w9, #0x1f, 0x1e7ac
000000000001e7a0	mov	w10, #0x12
000000000001e7a4	and	x9, x9, x10
000000000001e7a8	b	0x1e830
000000000001e7ac	neg	w10, w9
000000000001e7b0	mvn	w9, w9
000000000001e7b4	cmp	w10, #0x9
000000000001e7b8	b.ge	0x1e7f0
000000000001e7bc	cmp	w10, #0x2
000000000001e7c0	b.lt	0x1e824
000000000001e7c4	mov	x10, #0x0
000000000001e7c8	mov	x11, x8
000000000001e7cc	ldr	w12, [x11]
000000000001e7d0	cmp	w12, #0x11
000000000001e7d4	b.gt	0x1e82c
000000000001e7d8	add	x10, x10, #0x1
000000000001e7dc	add	x11, x11, #0x10
000000000001e7e0	cmp	x9, x10
000000000001e7e4	b.ne	0x1e7cc
000000000001e7e8	mov	x10, x9
000000000001e7ec	b	0x1e82c
000000000001e7f0	mov	w10, #0x0
000000000001e7f4	add	w11, w9, w10
000000000001e7f8	cmp	w11, #0x0
000000000001e7fc	cinc	w11, w11, lt
000000000001e800	asr	w11, w11, #1
000000000001e804	sbfiz	x12, x11, #4, #32
000000000001e808	ldr	w12, [x8, x12]
000000000001e80c	cmp	w12, #0x12
000000000001e810	csinc	w10, w10, w11, ge
000000000001e814	csel	w9, w9, w11, lt
000000000001e818	cmp	w10, w9
000000000001e81c	b.lt	0x1e7f4
000000000001e820	b	0x1e82c
000000000001e824	mov	w10, #0x0
000000000001e828	b	0x1e82c
000000000001e82c	sxtw	x9, w10
000000000001e830	add	x8, x8, x9, lsl #4
000000000001e834	ldr	x8, [x8, #0x8]
000000000001e838	ldr	x8, [x8]
000000000001e83c	mov	x0, x23
000000000001e840	blr	x8
000000000001e844	cmp	w22, w0
000000000001e848	b.ge	0x1e878
000000000001e84c	mov	x0, x23
000000000001e850	mov	x1, x19
000000000001e854	bl	"_kfun:kotlin.collections#copyToArrayImpl(kotlin.collections.Collection<*>){}kotlin.Array<kotlin.Any?>"
000000000001e858	mov	x20, x0
000000000001e85c	ldr	x8, [x0]
000000000001e860	and	x8, x8, #0xfffffffffffffffc
000000000001e864	ldr	x8, [x8]
000000000001e868	ldr	w8, [x8, #0x5c]
000000000001e86c	cmp	w8, #0x49
000000000001e870	b.eq	0x1eb58
000000000001e874	b	0x1eb9c
000000000001e878	add	x22, x24, #0x20
000000000001e87c	add	x1, x24, #0x18
000000000001e880	ldr	x8, [x23]
000000000001e884	and	x8, x8, #0xfffffffffffffffc
000000000001e888	ldr	x8, [x8]
000000000001e88c	ldr	w9, [x8, #0x3c]
000000000001e890	ldr	x8, [x8, #0x40]
000000000001e894	tbnz	w9, #0x1f, 0x1e8a4
000000000001e898	mov	w10, #0x12
000000000001e89c	and	x9, x9, x10
000000000001e8a0	b	0x1e928
000000000001e8a4	neg	w10, w9
000000000001e8a8	mvn	w9, w9
000000000001e8ac	cmp	w10, #0x9
000000000001e8b0	b.ge	0x1e8e8
000000000001e8b4	cmp	w10, #0x2
000000000001e8b8	b.lt	0x1e91c
000000000001e8bc	mov	x10, #0x0
000000000001e8c0	mov	x11, x8
000000000001e8c4	ldr	w12, [x11]
000000000001e8c8	cmp	w12, #0x11
000000000001e8cc	b.gt	0x1e924
000000000001e8d0	add	x10, x10, #0x1
000000000001e8d4	add	x11, x11, #0x10
000000000001e8d8	cmp	x9, x10
000000000001e8dc	b.ne	0x1e8c4
000000000001e8e0	mov	x10, x9
000000000001e8e4	b	0x1e924
000000000001e8e8	mov	w10, #0x0
000000000001e8ec	add	w11, w9, w10
000000000001e8f0	cmp	w11, #0x0
000000000001e8f4	cinc	w11, w11, lt
000000000001e8f8	asr	w11, w11, #1
000000000001e8fc	sbfiz	x12, x11, #4, #32
000000000001e900	ldr	w12, [x8, x12]
000000000001e904	cmp	w12, #0x12
000000000001e908	csinc	w10, w10, w11, ge
000000000001e90c	csel	w9, w9, w11, lt
000000000001e910	cmp	w10, w9
000000000001e914	b.lt	0x1e8ec
000000000001e918	b	0x1e924
000000000001e91c	mov	w10, #0x0
000000000001e920	b	0x1e924
000000000001e924	sxtw	x9, w10
000000000001e928	add	x8, x8, x9, lsl #4
000000000001e92c	ldr	x8, [x8, #0x8]
000000000001e930	ldr	x8, [x8, #0x20]
000000000001e934	mov	x0, x23
000000000001e938	blr	x8
000000000001e93c	mov	x24, x0
000000000001e940	mov	w23, #0x0
000000000001e944	add	x27, x20, #0x10
000000000001e948	mov	w28, #0xa0
000000000001e94c	ldr	x8, [x24]
000000000001e950	and	x8, x8, #0xfffffffffffffffc
000000000001e954	ldr	x8, [x8]
000000000001e958	ldr	w9, [x8, #0x3c]
000000000001e95c	ldr	x8, [x8, #0x40]
000000000001e960	tbz	w9, #0x1f, 0x1eb00
000000000001e964	b	0x1ea60
000000000001e968	ldarb	w8, [x26]
000000000001e96c	tbz	w8, #0x0, 0x1e974
000000000001e970	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e974	ldr	x8, [x24]
000000000001e978	and	x8, x8, #0xfffffffffffffffc
000000000001e97c	ldr	x8, [x8]
000000000001e980	ldr	w9, [x8, #0x3c]
000000000001e984	ldr	x8, [x8, #0x40]
000000000001e988	tbnz	w9, #0x1f, 0x1e994
000000000001e98c	and	x9, x9, x28
000000000001e990	b	0x1ea18
000000000001e994	neg	w10, w9
000000000001e998	mvn	w9, w9
000000000001e99c	cmp	w10, #0x9
000000000001e9a0	b.ge	0x1e9d8
000000000001e9a4	cmp	w10, #0x2
000000000001e9a8	b.lt	0x1ea0c
000000000001e9ac	mov	x10, #0x0
000000000001e9b0	mov	x11, x8
000000000001e9b4	ldr	w12, [x11]
000000000001e9b8	cmp	w12, #0x9f
000000000001e9bc	b.gt	0x1ea14
000000000001e9c0	add	x10, x10, #0x1
000000000001e9c4	add	x11, x11, #0x10
000000000001e9c8	cmp	x9, x10
000000000001e9cc	b.ne	0x1e9b4
000000000001e9d0	mov	x10, x9
000000000001e9d4	b	0x1ea14
000000000001e9d8	mov	w10, #0x0
000000000001e9dc	add	w11, w9, w10
000000000001e9e0	cmp	w11, #0x0
000000000001e9e4	cinc	w11, w11, lt
000000000001e9e8	asr	w11, w11, #1
000000000001e9ec	sbfiz	x12, x11, #4, #32
000000000001e9f0	ldr	w12, [x8, x12]
000000000001e9f4	cmp	w12, #0xa0
000000000001e9f8	csinc	w10, w10, w11, ge
000000000001e9fc	csel	w9, w9, w11, lt
000000000001ea00	cmp	w10, w9
000000000001ea04	b.lt	0x1e9dc
000000000001ea08	b	0x1ea14
000000000001ea0c	mov	w10, #0x0
000000000001ea10	b	0x1ea14
000000000001ea14	sxtw	x9, w10
000000000001ea18	add	x8, x8, x9, lsl #4
000000000001ea1c	ldr	x8, [x8, #0x8]
000000000001ea20	ldr	x8, [x8, #0x8]
000000000001ea24	mov	x0, x24
000000000001ea28	mov	x1, x22
000000000001ea2c	blr	x8
000000000001ea30	ldr	w8, [x20, #0x8]
000000000001ea34	cmp	w8, w23
000000000001ea38	b.ls	0x1eb98
000000000001ea3c	ldr	xzr, [x20]
000000000001ea40	str	x0, [x27, w23, sxtw #3]
000000000001ea44	add	w23, w23, #0x1
000000000001ea48	ldr	x8, [x24]
000000000001ea4c	and	x8, x8, #0xfffffffffffffffc
000000000001ea50	ldr	x8, [x8]
000000000001ea54	ldr	w9, [x8, #0x3c]
000000000001ea58	ldr	x8, [x8, #0x40]
000000000001ea5c	tbz	w9, #0x1f, 0x1eb00
000000000001ea60	neg	w10, w9
000000000001ea64	mvn	w9, w9
000000000001ea68	cmp	w10, #0x9
000000000001ea6c	b.ge	0x1eaa4
000000000001ea70	cmp	w10, #0x2
000000000001ea74	b.lt	0x1ead8
000000000001ea78	mov	x10, #0x0
000000000001ea7c	mov	x11, x8
000000000001ea80	ldr	w12, [x11]
000000000001ea84	cmp	w12, #0x9f
000000000001ea88	b.gt	0x1eae0
000000000001ea8c	add	x10, x10, #0x1
000000000001ea90	add	x11, x11, #0x10
000000000001ea94	cmp	x9, x10
000000000001ea98	b.ne	0x1ea80
000000000001ea9c	mov	x10, x9
000000000001eaa0	b	0x1eae0
000000000001eaa4	mov	w10, #0x0
000000000001eaa8	add	w11, w9, w10
000000000001eaac	cmp	w11, #0x0
000000000001eab0	cinc	w11, w11, lt
000000000001eab4	asr	w11, w11, #1
000000000001eab8	sbfiz	x12, x11, #4, #32
000000000001eabc	ldr	w12, [x8, x12]
000000000001eac0	cmp	w12, #0xa0
000000000001eac4	csinc	w10, w10, w11, ge
000000000001eac8	csel	w9, w9, w11, lt
000000000001eacc	cmp	w10, w9
000000000001ead0	b.lt	0x1eaa8
000000000001ead4	b	0x1eae0
000000000001ead8	mov	w10, #0x0
000000000001eadc	b	0x1eae0
000000000001eae0	sxtw	x9, w10
000000000001eae4	add	x8, x8, x9, lsl #4
000000000001eae8	ldr	x8, [x8, #0x8]
000000000001eaec	ldr	x8, [x8]
000000000001eaf0	mov	x0, x24
000000000001eaf4	blr	x8
000000000001eaf8	tbnz	w0, #0x0, 0x1e968
000000000001eafc	b	0x1eb1c
000000000001eb00	and	x9, x9, x28
000000000001eb04	add	x8, x8, x9, lsl #4
000000000001eb08	ldr	x8, [x8, #0x8]
000000000001eb0c	ldr	x8, [x8]
000000000001eb10	mov	x0, x24
000000000001eb14	blr	x8
000000000001eb18	tbnz	w0, #0x0, 0x1e968
000000000001eb1c	ldr	w8, [x20, #0x8]
000000000001eb20	cmp	w23, w8
000000000001eb24	b.ge	0x1eb58
000000000001eb28	mov	x0, x20
000000000001eb2c	mov	x1, x23
000000000001eb30	mov	x2, x19
000000000001eb34	bl	"_kfun:kotlin.collections#copyOfNulls__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0ยง<kotlin.Any?>}kotlin.Array<0:0?>"
000000000001eb38	mov	x20, x0
000000000001eb3c	str	x0, [x19]
000000000001eb40	ldr	x8, [x0]
000000000001eb44	and	x8, x8, #0xfffffffffffffffc
000000000001eb48	ldr	x8, [x8]
000000000001eb4c	ldr	w8, [x8, #0x5c]
000000000001eb50	cmp	w8, #0x49
000000000001eb54	b.ne	0x1eb9c
000000000001eb58	str	x20, [x19]
000000000001eb5c	mov	x0, x21
000000000001eb60	blr	x25
000000000001eb64	ldr	x8, [x0]
000000000001eb68	ldr	x9, [sp, #0x8]
000000000001eb6c	str	x9, [x8, #0x110]
000000000001eb70	str	x20, [x19]
000000000001eb74	mov	x0, x20
000000000001eb78	ldp	x29, x30, [sp, #0x80]
000000000001eb7c	ldp	x20, x19, [sp, #0x70]
000000000001eb80	ldp	x22, x21, [sp, #0x60]
000000000001eb84	ldp	x24, x23, [sp, #0x50]
000000000001eb88	ldp	x26, x25, [sp, #0x40]
000000000001eb8c	ldp	x28, x27, [sp, #0x30]
000000000001eb90	add	sp, sp, #0x90
000000000001eb94	ret
000000000001eb98	bl	_ThrowArrayIndexOutOfBoundsException
000000000001eb9c	adr	x1, #0x39a44
000000000001eba0	nop
000000000001eba4	mov	x0, x20
000000000001eba8	bl	_ThrowClassCastException
_kfun:kotlin.collections.AbstractCollection.$toString$lambda$0$FUNCTION_REFERENCE$17.invoke#internal:
000000000001ebac	stp	x22, x21, [sp, #-0x30]!
000000000001ebb0	stp	x20, x19, [sp, #0x10]
000000000001ebb4	stp	x29, x30, [sp, #0x20]
000000000001ebb8	add	x29, sp, #0x20
000000000001ebbc	mov	x19, x2
000000000001ebc0	mov	x20, x1
000000000001ebc4	mov	x21, x0
000000000001ebc8	adr	x8, #0x67e7b
000000000001ebcc	nop
000000000001ebd0	ldarb	w8, [x8]
000000000001ebd4	tbz	w8, #0x0, 0x1ebdc
000000000001ebd8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ebdc	ldr	x8, [x21, #0x8]
000000000001ebe0	cmp	x8, x20
000000000001ebe4	b.eq	0x1ec1c
000000000001ebe8	cbz	x20, 0x1ec38
000000000001ebec	ldr	x8, [x20]
000000000001ebf0	and	x8, x8, #0xfffffffffffffffc
000000000001ebf4	ldr	x8, [x8]
000000000001ebf8	ldr	x8, [x8, #0x80]
000000000001ebfc	mov	x0, x20
000000000001ec00	mov	x1, x19
000000000001ec04	blr	x8
000000000001ec08	str	x0, [x19]
000000000001ec0c	ldp	x29, x30, [sp, #0x20]
000000000001ec10	ldp	x20, x19, [sp, #0x10]
000000000001ec14	ldp	x22, x21, [sp], #0x30
000000000001ec18	ret
000000000001ec1c	adr	x0, #0x471d4
000000000001ec20	nop
000000000001ec24	str	x0, [x19]
000000000001ec28	ldp	x29, x30, [sp, #0x20]
000000000001ec2c	ldp	x20, x19, [sp, #0x10]
000000000001ec30	ldp	x22, x21, [sp], #0x30
000000000001ec34	ret
000000000001ec38	adr	x0, #0x465b8
000000000001ec3c	nop
000000000001ec40	str	x0, [x19]
000000000001ec44	ldp	x29, x30, [sp, #0x20]
000000000001ec48	ldp	x20, x19, [sp, #0x10]
000000000001ec4c	ldp	x22, x21, [sp], #0x30
000000000001ec50	ret
_kfun:kotlin.collections.AbstractIterator#hasNext(){}kotlin.Boolean:
000000000001ec54	sub	sp, sp, #0xe0
000000000001ec58	stp	x28, x27, [sp, #0x80]
000000000001ec5c	stp	x26, x25, [sp, #0x90]
000000000001ec60	stp	x24, x23, [sp, #0xa0]
000000000001ec64	stp	x22, x21, [sp, #0xb0]
000000000001ec68	stp	x20, x19, [sp, #0xc0]
000000000001ec6c	stp	x29, x30, [sp, #0xd0]
000000000001ec70	add	x29, sp, #0xd0
000000000001ec74	mov	x19, x0
000000000001ec78	movi.16b	v0, #0x0
000000000001ec7c	stp	q0, q0, [sp]
000000000001ec80	stp	q0, q0, [sp, #0x20]
000000000001ec84	adrp	x0, 78 ; 0x6c000
000000000001ec88	add	x0, x0, #0xbb0
000000000001ec8c	ldr	x8, [x0]
000000000001ec90	blr	x8
000000000001ec94	ldr	x24, [x0]
000000000001ec98	ldr	x8, [x24, #0x110]
000000000001ec9c	mov	x9, sp
000000000001eca0	str	x9, [x24, #0x110]
000000000001eca4	mov	x9, #0x800000000
000000000001eca8	stp	x8, x9, [sp, #0x8]
000000000001ecac	adr	x26, #0x67d97
000000000001ecb0	nop
000000000001ecb4	ldarb	w8, [x26]
000000000001ecb8	tbz	w8, #0x0, 0x1ecc0
000000000001ecbc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ecc0	ldr	x20, [x19, #0x8]
000000000001ecc4	str	x20, [sp, #0x18]
000000000001ecc8	adr	x25, #0x67df8
000000000001eccc	nop
000000000001ecd0	ldar	x21, [x25]
000000000001ecd4	cmp	x21, #0x2
000000000001ecd8	b.hs	0x1eea0
000000000001ecdc	ldp	x8, x9, [x24, #0x120]
000000000001ece0	cmp	x8, x9
000000000001ece4	b.eq	0x1ed04
000000000001ece8	mov	x10, x9
000000000001ecec	ldr	x11, [x10, #-0x10]!
000000000001ecf0	cmp	x11, x25
000000000001ecf4	b.eq	0x1edbc
000000000001ecf8	mov	x9, x10
000000000001ecfc	cmp	x10, x8
000000000001ed00	b.ne	0x1ecec
000000000001ed04	add	x22, x24, #0x120
000000000001ed08	add	x0, x24, #0x138
000000000001ed0c	mov	w9, #0x1
000000000001ed10	ldaxr	w8, [x0]
000000000001ed14	stlxr	w10, w9, [x0]
000000000001ed18	cbnz	w10, 0x1ed10
000000000001ed1c	b	0x1ed2c
000000000001ed20	mov	w23, #0x1
000000000001ed24	stlxr	w9, x23, [x25]
000000000001ed28	cbz	w9, 0x1ed3c
000000000001ed2c	ldaxr	x21, [x25]
000000000001ed30	cbz	x21, 0x1ed20
000000000001ed34	mov	w23, #0x0
000000000001ed38	clrex
000000000001ed3c	cmp	x21, #0x1
000000000001ed40	b.eq	0x1ed2c
000000000001ed44	cbz	x24, 0x1ed6c
000000000001ed48	ldaxr	w9, [x0]
000000000001ed4c	stlxr	w10, w8, [x0]
000000000001ed50	cbnz	w10, 0x1ed48
000000000001ed54	cbnz	w8, 0x1ed6c
000000000001ed58	cmp	w9, #0x1
000000000001ed5c	b.ne	0x1ed6c
000000000001ed60	ldarb	w8, [x26]
000000000001ed64	tbz	w8, #0x0, 0x1ed6c
000000000001ed68	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000001ed6c	tbz	w23, #0x0, 0x1edb4
000000000001ed70	ldr	x8, [x24, #0x118]
000000000001ed74	add	x0, x8, #0x70
000000000001ed78	mov	w1, #0x20
000000000001ed7c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ed80	mov	x21, x0
000000000001ed84	adr	x8, #0x3d89c
000000000001ed88	nop
000000000001ed8c	str	x8, [x21, #0x10]!
000000000001ed90	stur	xzr, [x21, #-0x8]
000000000001ed94	str	x21, [sp, #0x20]
000000000001ed98	ldp	x9, x8, [x24, #0x128]
000000000001ed9c	cmp	x9, x8
000000000001eda0	b.hs	0x1edc8
000000000001eda4	stp	x25, x21, [x9]
000000000001eda8	add	x8, x9, #0x10
000000000001edac	str	x8, [x24, #0x128]
000000000001edb0	b	0x1ee50
000000000001edb4	str	x21, [sp, #0x20]
000000000001edb8	b	0x1eea0
000000000001edbc	ldur	x21, [x9, #-0x8]
000000000001edc0	str	x21, [sp, #0x20]
000000000001edc4	b	0x1eea0
000000000001edc8	ldr	x10, [x22]
000000000001edcc	sub	x9, x9, x10
000000000001edd0	asr	x27, x9, #4
000000000001edd4	add	x9, x27, #0x1
000000000001edd8	lsr	x11, x9, #60
000000000001eddc	cbnz	x11, 0x1f39c
000000000001ede0	sub	x8, x8, x10
000000000001ede4	asr	x10, x8, #3
000000000001ede8	cmp	x10, x9
000000000001edec	csel	x9, x9, x10, lo
000000000001edf0	mov	x10, #0x7ffffffffffffff
000000000001edf4	cmp	x10, x8, asr #4
000000000001edf8	mov	x8, #0xfffffffffffffff
000000000001edfc	csel	x23, x9, x8, hi
000000000001ee00	mov	x0, x23
000000000001ee04	mov	w1, #0x10
000000000001ee08	bl	0x519e0 ; symbol stub for: _calloc
000000000001ee0c	add	x8, x0, x27, lsl #4
000000000001ee10	add	x27, x0, x23, lsl #4
000000000001ee14	stp	x25, x21, [x8]
000000000001ee18	add	x28, x8, #0x10
000000000001ee1c	ldp	x1, x9, [x24, #0x120]
000000000001ee20	sub	x2, x9, x1
000000000001ee24	sub	x23, x8, x2
000000000001ee28	cmp	x2, #0x1
000000000001ee2c	b.lt	0x1ee3c
000000000001ee30	mov	x0, x23
000000000001ee34	bl	0x51aac ; symbol stub for: _memcpy
000000000001ee38	ldr	x1, [x22]
000000000001ee3c	stp	x23, x28, [x24, #0x120]
000000000001ee40	str	x27, [x24, #0x130]
000000000001ee44	cbz	x1, 0x1ee50
000000000001ee48	mov	x0, x1
000000000001ee4c	bl	0x51a64 ; symbol stub for: _free
000000000001ee50	mov	x0, x21
000000000001ee54	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000001ee58	mov	w0, #0x1
000000000001ee5c	mov	w1, #0x28
000000000001ee60	bl	0x519e0 ; symbol stub for: _calloc
000000000001ee64	mov	x8, x24
000000000001ee68	ldr	x9, [x8, #0x18]!
000000000001ee6c	sub	x10, x8, #0x8
000000000001ee70	stp	x25, x10, [x0, #0x10]
000000000001ee74	stp	x9, x8, [x0]
000000000001ee78	str	x0, [x9, #0x8]
000000000001ee7c	str	x0, [x8]
000000000001ee80	ldr	x9, [x8, #0x10]
000000000001ee84	add	x9, x9, #0x1
000000000001ee88	str	x9, [x8, #0x10]
000000000001ee8c	str	x0, [x0, #0x20]
000000000001ee90	stlr	x21, [x25]
000000000001ee94	ldr	x9, [x8, #0x110]
000000000001ee98	sub	x9, x9, #0x10
000000000001ee9c	str	x9, [x8, #0x110]
000000000001eea0	ldr	x8, [x21, #0x8]
000000000001eea4	ldr	w9, [x8, #0x8]
000000000001eea8	cmp	w9, #0x1
000000000001eeac	b.ls	0x1f358
000000000001eeb0	ldr	x1, [x8, #0x18]
000000000001eeb4	str	x1, [sp, #0x28]
000000000001eeb8	ldr	x8, [x20]
000000000001eebc	and	x8, x8, #0xfffffffffffffffc
000000000001eec0	ldr	x8, [x8]
000000000001eec4	ldr	x8, [x8, #0x70]
000000000001eec8	mov	x0, x20
000000000001eecc	blr	x8
000000000001eed0	cbnz	w0, 0x1f35c
000000000001eed4	ldr	x8, [x19, #0x8]
000000000001eed8	str	x8, [sp, #0x38]
000000000001eedc	ldr	w8, [x8, #0x10]
000000000001eee0	cbz	w8, 0x1eef4
000000000001eee4	cmp	w8, #0x2
000000000001eee8	b.ne	0x1eefc
000000000001eeec	mov	w0, #0x0
000000000001eef0	b	0x1f330
000000000001eef4	mov	w0, #0x1
000000000001eef8	b	0x1f330
000000000001eefc	movi.16b	v0, #0x0
000000000001ef00	stp	q0, q0, [sp, #0x40]
000000000001ef04	stp	q0, q0, [sp, #0x60]
000000000001ef08	ldr	x8, [x24, #0x110]
000000000001ef0c	add	x9, sp, #0x40
000000000001ef10	str	x9, [x24, #0x110]
000000000001ef14	mov	x9, #0x800000000
000000000001ef18	stp	x8, x9, [sp, #0x48]
000000000001ef1c	ldar	x20, [x25]
000000000001ef20	cmp	x20, #0x2
000000000001ef24	b.hs	0x1f0ec
000000000001ef28	ldp	x8, x9, [x24, #0x120]
000000000001ef2c	cmp	x8, x9
000000000001ef30	b.eq	0x1ef50
000000000001ef34	mov	x10, x9
000000000001ef38	ldr	x11, [x10, #-0x10]!
000000000001ef3c	cmp	x11, x25
000000000001ef40	b.eq	0x1f008
000000000001ef44	mov	x9, x10
000000000001ef48	cmp	x10, x8
000000000001ef4c	b.ne	0x1ef38
000000000001ef50	add	x21, x24, #0x120
000000000001ef54	add	x0, x24, #0x138
000000000001ef58	mov	w9, #0x1
000000000001ef5c	ldaxr	w8, [x0]
000000000001ef60	stlxr	w10, w9, [x0]
000000000001ef64	cbnz	w10, 0x1ef5c
000000000001ef68	b	0x1ef78
000000000001ef6c	mov	w22, #0x1
000000000001ef70	stlxr	w9, x22, [x25]
000000000001ef74	cbz	w9, 0x1ef88
000000000001ef78	ldaxr	x20, [x25]
000000000001ef7c	cbz	x20, 0x1ef6c
000000000001ef80	mov	w22, #0x0
000000000001ef84	clrex
000000000001ef88	cmp	x20, #0x1
000000000001ef8c	b.eq	0x1ef78
000000000001ef90	cbz	x24, 0x1efb8
000000000001ef94	ldaxr	w9, [x0]
000000000001ef98	stlxr	w10, w8, [x0]
000000000001ef9c	cbnz	w10, 0x1ef94
000000000001efa0	cbnz	w8, 0x1efb8
000000000001efa4	cmp	w9, #0x1
000000000001efa8	b.ne	0x1efb8
000000000001efac	ldarb	w8, [x26]
000000000001efb0	tbz	w8, #0x0, 0x1efb8
000000000001efb4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000001efb8	tbz	w22, #0x0, 0x1f000
000000000001efbc	ldr	x8, [x24, #0x118]
000000000001efc0	add	x0, x8, #0x70
000000000001efc4	mov	w1, #0x20
000000000001efc8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001efcc	mov	x20, x0
000000000001efd0	adr	x8, #0x3d650
000000000001efd4	nop
000000000001efd8	str	x8, [x20, #0x10]!
000000000001efdc	stur	xzr, [x20, #-0x8]
000000000001efe0	str	x20, [sp, #0x58]
000000000001efe4	ldp	x9, x8, [x24, #0x128]
000000000001efe8	cmp	x9, x8
000000000001efec	b.hs	0x1f014
000000000001eff0	stp	x25, x20, [x9]
000000000001eff4	add	x8, x9, #0x10
000000000001eff8	str	x8, [x24, #0x128]
000000000001effc	b	0x1f09c
000000000001f000	str	x20, [sp, #0x58]
000000000001f004	b	0x1f0ec
000000000001f008	ldur	x20, [x9, #-0x8]
000000000001f00c	str	x20, [sp, #0x58]
000000000001f010	b	0x1f0ec
000000000001f014	ldr	x10, [x21]
000000000001f018	sub	x9, x9, x10
000000000001f01c	asr	x23, x9, #4
000000000001f020	add	x9, x23, #0x1
000000000001f024	lsr	x11, x9, #60
000000000001f028	cbnz	x11, 0x1f3a4
000000000001f02c	sub	x8, x8, x10
000000000001f030	asr	x10, x8, #3
000000000001f034	cmp	x10, x9
000000000001f038	csel	x9, x9, x10, lo
000000000001f03c	mov	x10, #0x7ffffffffffffff
000000000001f040	cmp	x10, x8, asr #4
000000000001f044	mov	x8, #0xfffffffffffffff
000000000001f048	csel	x22, x9, x8, hi
000000000001f04c	mov	x0, x22
000000000001f050	mov	w1, #0x10
000000000001f054	bl	0x519e0 ; symbol stub for: _calloc
000000000001f058	add	x8, x0, x23, lsl #4
000000000001f05c	add	x23, x0, x22, lsl #4
000000000001f060	stp	x25, x20, [x8]
000000000001f064	add	x27, x8, #0x10
000000000001f068	ldp	x1, x9, [x24, #0x120]
000000000001f06c	sub	x2, x9, x1
000000000001f070	sub	x22, x8, x2
000000000001f074	cmp	x2, #0x1
000000000001f078	b.lt	0x1f088
000000000001f07c	mov	x0, x22
000000000001f080	bl	0x51aac ; symbol stub for: _memcpy
000000000001f084	ldr	x1, [x21]
000000000001f088	stp	x22, x27, [x24, #0x120]
000000000001f08c	str	x23, [x24, #0x130]
000000000001f090	cbz	x1, 0x1f09c
000000000001f094	mov	x0, x1
000000000001f098	bl	0x51a64 ; symbol stub for: _free
000000000001f09c	mov	x0, x20
000000000001f0a0	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000001f0a4	mov	w0, #0x1
000000000001f0a8	mov	w1, #0x28
000000000001f0ac	bl	0x519e0 ; symbol stub for: _calloc
000000000001f0b0	mov	x8, x24
000000000001f0b4	ldr	x9, [x8, #0x18]!
000000000001f0b8	sub	x10, x8, #0x8
000000000001f0bc	stp	x25, x10, [x0, #0x10]
000000000001f0c0	stp	x9, x8, [x0]
000000000001f0c4	str	x0, [x9, #0x8]
000000000001f0c8	str	x0, [x8]
000000000001f0cc	ldr	x9, [x8, #0x10]
000000000001f0d0	add	x9, x9, #0x1
000000000001f0d4	str	x9, [x8, #0x10]
000000000001f0d8	str	x0, [x0, #0x20]
000000000001f0dc	stlr	x20, [x25]
000000000001f0e0	ldr	x9, [x8, #0x110]
000000000001f0e4	sub	x9, x9, #0x10
000000000001f0e8	str	x9, [x8, #0x110]
000000000001f0ec	ldr	x8, [x20, #0x8]
000000000001f0f0	ldr	w9, [x8, #0x8]
000000000001f0f4	cmp	w9, #0x1
000000000001f0f8	b.ls	0x1f358
000000000001f0fc	ldr	x8, [x8, #0x18]
000000000001f100	str	x8, [sp, #0x60]
000000000001f104	str	x8, [x19, #0x8]
000000000001f108	ldr	x8, [x19]
000000000001f10c	and	x8, x8, #0xfffffffffffffffc
000000000001f110	ldr	x8, [x8]
000000000001f114	ldr	x8, [x8, #0x88]
000000000001f118	mov	x0, x19
000000000001f11c	blr	x8
000000000001f120	ldr	x19, [x19, #0x8]
000000000001f124	str	x19, [sp, #0x68]
000000000001f128	ldar	x20, [x25]
000000000001f12c	cmp	x20, #0x2
000000000001f130	b.hs	0x1f2f8
000000000001f134	ldp	x8, x9, [x24, #0x120]
000000000001f138	cmp	x8, x9
000000000001f13c	b.eq	0x1f15c
000000000001f140	mov	x10, x9
000000000001f144	ldr	x11, [x10, #-0x10]!
000000000001f148	cmp	x11, x25
000000000001f14c	b.eq	0x1f214
000000000001f150	mov	x9, x10
000000000001f154	cmp	x10, x8
000000000001f158	b.ne	0x1f144
000000000001f15c	add	x21, x24, #0x120
000000000001f160	add	x0, x24, #0x138
000000000001f164	mov	w9, #0x1
000000000001f168	ldaxr	w8, [x0]
000000000001f16c	stlxr	w10, w9, [x0]
000000000001f170	cbnz	w10, 0x1f168
000000000001f174	b	0x1f184
000000000001f178	mov	w22, #0x1
000000000001f17c	stlxr	w9, x22, [x25]
000000000001f180	cbz	w9, 0x1f194
000000000001f184	ldaxr	x20, [x25]
000000000001f188	cbz	x20, 0x1f178
000000000001f18c	mov	w22, #0x0
000000000001f190	clrex
000000000001f194	cmp	x20, #0x1
000000000001f198	b.eq	0x1f184
000000000001f19c	cbz	x24, 0x1f1c4
000000000001f1a0	ldaxr	w9, [x0]
000000000001f1a4	stlxr	w10, w8, [x0]
000000000001f1a8	cbnz	w10, 0x1f1a0
000000000001f1ac	cbnz	w8, 0x1f1c4
000000000001f1b0	cmp	w9, #0x1
000000000001f1b4	b.ne	0x1f1c4
000000000001f1b8	ldarb	w8, [x26]
000000000001f1bc	tbz	w8, #0x0, 0x1f1c4
000000000001f1c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000001f1c4	tbz	w22, #0x0, 0x1f20c
000000000001f1c8	ldr	x8, [x24, #0x118]
000000000001f1cc	add	x0, x8, #0x70
000000000001f1d0	mov	w1, #0x20
000000000001f1d4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001f1d8	mov	x20, x0
000000000001f1dc	adr	x8, #0x3d444
000000000001f1e0	nop
000000000001f1e4	str	x8, [x20, #0x10]!
000000000001f1e8	stur	xzr, [x20, #-0x8]
000000000001f1ec	str	x20, [sp, #0x70]
000000000001f1f0	ldp	x9, x8, [x24, #0x128]
000000000001f1f4	cmp	x9, x8
000000000001f1f8	b.hs	0x1f220
000000000001f1fc	stp	x25, x20, [x9]
000000000001f200	add	x8, x9, #0x10
000000000001f204	str	x8, [x24, #0x128]
000000000001f208	b	0x1f2a8
000000000001f20c	str	x20, [sp, #0x70]
000000000001f210	b	0x1f2f8
000000000001f214	ldur	x20, [x9, #-0x8]
000000000001f218	str	x20, [sp, #0x70]
000000000001f21c	b	0x1f2f8
000000000001f220	ldr	x10, [x21]
000000000001f224	sub	x9, x9, x10
000000000001f228	asr	x23, x9, #4
000000000001f22c	add	x9, x23, #0x1
000000000001f230	lsr	x11, x9, #60
000000000001f234	cbnz	x11, 0x1f3a4
000000000001f238	sub	x8, x8, x10
000000000001f23c	asr	x10, x8, #3
000000000001f240	cmp	x10, x9
000000000001f244	csel	x9, x9, x10, lo
000000000001f248	mov	x10, #0x7ffffffffffffff
000000000001f24c	cmp	x10, x8, asr #4
000000000001f250	mov	x8, #0xfffffffffffffff
000000000001f254	csel	x22, x9, x8, hi
000000000001f258	mov	x0, x22
000000000001f25c	mov	w1, #0x10
000000000001f260	bl	0x519e0 ; symbol stub for: _calloc
000000000001f264	add	x8, x0, x23, lsl #4
000000000001f268	add	x23, x0, x22, lsl #4
000000000001f26c	stp	x25, x20, [x8]
000000000001f270	add	x26, x8, #0x10
000000000001f274	ldp	x1, x9, [x24, #0x120]
000000000001f278	sub	x2, x9, x1
000000000001f27c	sub	x22, x8, x2
000000000001f280	cmp	x2, #0x1
000000000001f284	b.lt	0x1f294
000000000001f288	mov	x0, x22
000000000001f28c	bl	0x51aac ; symbol stub for: _memcpy
000000000001f290	ldr	x1, [x21]
000000000001f294	stp	x22, x26, [x24, #0x120]
000000000001f298	str	x23, [x24, #0x130]
000000000001f29c	cbz	x1, 0x1f2a8
000000000001f2a0	mov	x0, x1
000000000001f2a4	bl	0x51a64 ; symbol stub for: _free
000000000001f2a8	mov	x0, x20
000000000001f2ac	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000001f2b0	mov	w0, #0x1
000000000001f2b4	mov	w1, #0x28
000000000001f2b8	bl	0x519e0 ; symbol stub for: _calloc
000000000001f2bc	mov	x8, x24
000000000001f2c0	ldr	x9, [x8, #0x18]!
000000000001f2c4	sub	x10, x8, #0x8
000000000001f2c8	stp	x25, x10, [x0, #0x10]
000000000001f2cc	stp	x9, x8, [x0]
000000000001f2d0	str	x0, [x9, #0x8]
000000000001f2d4	str	x0, [x8]
000000000001f2d8	ldr	x9, [x8, #0x10]
000000000001f2dc	add	x9, x9, #0x1
000000000001f2e0	str	x9, [x8, #0x10]
000000000001f2e4	str	x0, [x0, #0x20]
000000000001f2e8	stlr	x20, [x25]
000000000001f2ec	ldr	x9, [x8, #0x110]
000000000001f2f0	sub	x9, x9, #0x10
000000000001f2f4	str	x9, [x8, #0x110]
000000000001f2f8	ldr	x8, [x20, #0x8]
000000000001f2fc	ldr	w9, [x8, #0x8]
000000000001f300	cmp	w9, #0x3
000000000001f304	b.ls	0x1f358
000000000001f308	ldr	x1, [x8, #0x28]
000000000001f30c	str	x1, [sp, #0x78]
000000000001f310	ldr	x8, [x19]
000000000001f314	and	x8, x8, #0xfffffffffffffffc
000000000001f318	ldr	x8, [x8]
000000000001f31c	ldr	x8, [x8, #0x70]
000000000001f320	mov	x0, x19
000000000001f324	blr	x8
000000000001f328	ldr	x8, [sp, #0x48]
000000000001f32c	str	x8, [x24, #0x110]
000000000001f330	ldr	x8, [sp, #0x8]
000000000001f334	str	x8, [x24, #0x110]
000000000001f338	ldp	x29, x30, [sp, #0xd0]
000000000001f33c	ldp	x20, x19, [sp, #0xc0]
000000000001f340	ldp	x22, x21, [sp, #0xb0]
000000000001f344	ldp	x24, x23, [sp, #0xa0]
000000000001f348	ldp	x26, x25, [sp, #0x90]
000000000001f34c	ldp	x28, x27, [sp, #0x80]
000000000001f350	add	sp, sp, #0xe0
000000000001f354	ret
000000000001f358	bl	_ThrowArrayIndexOutOfBoundsException
000000000001f35c	ldr	x8, [x24, #0x118]
000000000001f360	add	x0, x8, #0x70
000000000001f364	mov	w1, #0x38
000000000001f368	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001f36c	mov	x19, x0
000000000001f370	adr	x8, #0x39910
000000000001f374	nop
000000000001f378	str	x8, [x19, #0x10]!
000000000001f37c	stur	xzr, [x19, #-0x8]
000000000001f380	str	x19, [sp, #0x30]
000000000001f384	adr	x1, #0x45e1c
000000000001f388	nop
000000000001f38c	mov	x0, x19
000000000001f390	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000001f394	mov	x0, x19
000000000001f398	bl	_ThrowException
000000000001f39c	mov	x0, x22
000000000001f3a0	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000001f3a4	mov	x0, x21
000000000001f3a8	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000001f3ac	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000001f3b0	str	xzr, [sp, #0x70]
000000000001f3b4	stlr	xzr, [x25]
000000000001f3b8	ldr	x8, [x24, #0x128]
000000000001f3bc	sub	x8, x8, #0x10
000000000001f3c0	str	x8, [x24, #0x128]
000000000001f3c4	bl	0x51968 ; symbol stub for: ___cxa_rethrow
000000000001f3c8	b	0x1f410
000000000001f3cc	b	0x1f414
000000000001f3d0	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000001f3d4	str	xzr, [sp, #0x58]
000000000001f3d8	stlr	xzr, [x25]
000000000001f3dc	ldr	x8, [x24, #0x128]
000000000001f3e0	sub	x8, x8, #0x10
000000000001f3e4	str	x8, [x24, #0x128]
000000000001f3e8	bl	0x51968 ; symbol stub for: ___cxa_rethrow
000000000001f3ec	b	0x1f410
000000000001f3f0	b	0x1f414
000000000001f3f4	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000001f3f8	str	xzr, [sp, #0x20]
000000000001f3fc	stlr	xzr, [x25]
000000000001f400	ldr	x8, [x24, #0x128]
000000000001f404	sub	x8, x8, #0x10
000000000001f408	str	x8, [x24, #0x128]
000000000001f40c	bl	0x51968 ; symbol stub for: ___cxa_rethrow
000000000001f410	brk	#0x1
000000000001f414	mov	x19, x0
000000000001f418	bl	0x51944 ; symbol stub for: ___cxa_end_catch
000000000001f41c	mov	x0, x19
000000000001f420	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.collections.AbstractIterator#next(){}1:0:
000000000001f424	sub	sp, sp, #0x90
000000000001f428	stp	x28, x27, [sp, #0x30]
000000000001f42c	stp	x26, x25, [sp, #0x40]
000000000001f430	stp	x24, x23, [sp, #0x50]
000000000001f434	stp	x22, x21, [sp, #0x60]
000000000001f438	stp	x20, x19, [sp, #0x70]
000000000001f43c	stp	x29, x30, [sp, #0x80]
000000000001f440	add	x29, sp, #0x80
000000000001f444	mov	x19, x1
000000000001f448	mov	x20, x0
000000000001f44c	movi.16b	v0, #0x0
000000000001f450	stp	q0, q0, [sp]
000000000001f454	str	q0, [sp, #0x20]
000000000001f458	adrp	x0, 77 ; 0x6c000
000000000001f45c	add	x0, x0, #0xbb0
000000000001f460	ldr	x8, [x0]
000000000001f464	blr	x8
000000000001f468	ldr	x24, [x0]
000000000001f46c	ldr	x8, [x24, #0x110]
000000000001f470	mov	x9, sp
000000000001f474	str	x9, [x24, #0x110]
000000000001f478	mov	x9, #0x600000000
000000000001f47c	stp	x8, x9, [sp, #0x8]
000000000001f480	adr	x23, #0x675c3
000000000001f484	nop
000000000001f488	ldarb	w8, [x23]
000000000001f48c	tbz	w8, #0x0, 0x1f494
000000000001f490	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f494	ldr	x8, [x20]
000000000001f498	and	x8, x8, #0xfffffffffffffffc
000000000001f49c	ldr	x8, [x8]
000000000001f4a0	ldr	x8, [x8, #0x90]
000000000001f4a4	mov	x0, x20
000000000001f4a8	blr	x8
000000000001f4ac	tbz	w0, #0x0, 0x1f6d4
000000000001f4b0	adr	x25, #0x67610
000000000001f4b4	nop
000000000001f4b8	ldar	x21, [x25]
000000000001f4bc	cmp	x21, #0x2
000000000001f4c0	b.hs	0x1f688
000000000001f4c4	ldp	x8, x9, [x24, #0x120]
000000000001f4c8	cmp	x8, x9
000000000001f4cc	b.eq	0x1f4ec
000000000001f4d0	mov	x10, x9
000000000001f4d4	ldr	x11, [x10, #-0x10]!
000000000001f4d8	cmp	x11, x25
000000000001f4dc	b.eq	0x1f5a4
000000000001f4e0	mov	x9, x10
000000000001f4e4	cmp	x10, x8
000000000001f4e8	b.ne	0x1f4d4
000000000001f4ec	add	x22, x24, #0x120
000000000001f4f0	add	x0, x24, #0x138
000000000001f4f4	mov	w9, #0x1
000000000001f4f8	ldaxr	w8, [x0]
000000000001f4fc	stlxr	w10, w9, [x0]
000000000001f500	cbnz	w10, 0x1f4f8
000000000001f504	b	0x1f514
000000000001f508	mov	w26, #0x1
000000000001f50c	stlxr	w9, x26, [x25]
000000000001f510	cbz	w9, 0x1f524
000000000001f514	ldaxr	x21, [x25]
000000000001f518	cbz	x21, 0x1f508
000000000001f51c	mov	w26, #0x0
000000000001f520	clrex
000000000001f524	cmp	x21, #0x1
000000000001f528	b.eq	0x1f514
000000000001f52c	cbz	x24, 0x1f554
000000000001f530	ldaxr	w9, [x0]
000000000001f534	stlxr	w10, w8, [x0]
000000000001f538	cbnz	w10, 0x1f530
000000000001f53c	cbnz	w8, 0x1f554
000000000001f540	cmp	w9, #0x1
000000000001f544	b.ne	0x1f554
000000000001f548	ldarb	w8, [x23]
000000000001f54c	tbz	w8, #0x0, 0x1f554
000000000001f550	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000001f554	tbz	w26, #0x0, 0x1f59c
000000000001f558	ldr	x8, [x24, #0x118]
000000000001f55c	add	x0, x8, #0x70
000000000001f560	mov	w1, #0x20
000000000001f564	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001f568	mov	x21, x0
000000000001f56c	adr	x8, #0x3d0b4
000000000001f570	nop
000000000001f574	str	x8, [x21, #0x10]!
000000000001f578	stur	xzr, [x21, #-0x8]
000000000001f57c	str	x21, [sp, #0x20]
000000000001f580	ldp	x9, x8, [x24, #0x128]
000000000001f584	cmp	x9, x8
000000000001f588	b.hs	0x1f5b0
000000000001f58c	stp	x25, x21, [x9]
000000000001f590	add	x8, x9, #0x10
000000000001f594	str	x8, [x24, #0x128]
000000000001f598	b	0x1f638
000000000001f59c	str	x21, [sp, #0x20]
000000000001f5a0	b	0x1f688
000000000001f5a4	ldur	x21, [x9, #-0x8]
000000000001f5a8	str	x21, [sp, #0x20]
000000000001f5ac	b	0x1f688
000000000001f5b0	ldr	x10, [x22]
000000000001f5b4	sub	x9, x9, x10
000000000001f5b8	asr	x26, x9, #4
000000000001f5bc	add	x9, x26, #0x1
000000000001f5c0	lsr	x11, x9, #60
000000000001f5c4	cbnz	x11, 0x1f714
000000000001f5c8	sub	x8, x8, x10
000000000001f5cc	asr	x10, x8, #3
000000000001f5d0	cmp	x10, x9
000000000001f5d4	csel	x9, x9, x10, lo
000000000001f5d8	mov	x10, #0x7ffffffffffffff
000000000001f5dc	cmp	x10, x8, asr #4
000000000001f5e0	mov	x8, #0xfffffffffffffff
000000000001f5e4	csel	x23, x9, x8, hi
000000000001f5e8	mov	x0, x23
000000000001f5ec	mov	w1, #0x10
000000000001f5f0	bl	0x519e0 ; symbol stub for: _calloc
000000000001f5f4	add	x8, x0, x26, lsl #4
000000000001f5f8	add	x26, x0, x23, lsl #4
000000000001f5fc	stp	x25, x21, [x8]
000000000001f600	add	x27, x8, #0x10
000000000001f604	ldp	x1, x9, [x24, #0x120]
000000000001f608	sub	x2, x9, x1
000000000001f60c	sub	x23, x8, x2
000000000001f610	cmp	x2, #0x1
000000000001f614	b.lt	0x1f624
000000000001f618	mov	x0, x23
000000000001f61c	bl	0x51aac ; symbol stub for: _memcpy
000000000001f620	ldr	x1, [x22]
000000000001f624	stp	x23, x27, [x24, #0x120]
000000000001f628	str	x26, [x24, #0x130]
000000000001f62c	cbz	x1, 0x1f638
000000000001f630	mov	x0, x1
000000000001f634	bl	0x51a64 ; symbol stub for: _free
000000000001f638	mov	x0, x21
000000000001f63c	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000001f640	mov	w0, #0x1
000000000001f644	mov	w1, #0x28
000000000001f648	bl	0x519e0 ; symbol stub for: _calloc
000000000001f64c	mov	x8, x24
000000000001f650	ldr	x9, [x8, #0x18]!
000000000001f654	sub	x10, x8, #0x8
000000000001f658	stp	x25, x10, [x0, #0x10]
000000000001f65c	stp	x9, x8, [x0]
000000000001f660	str	x0, [x9, #0x8]
000000000001f664	str	x0, [x8]
000000000001f668	ldr	x9, [x8, #0x10]
000000000001f66c	add	x9, x9, #0x1
000000000001f670	str	x9, [x8, #0x10]
000000000001f674	str	x0, [x0, #0x20]
000000000001f678	stlr	x21, [x25]
000000000001f67c	ldr	x9, [x8, #0x110]
000000000001f680	sub	x9, x9, #0x10
000000000001f684	str	x9, [x8, #0x110]
000000000001f688	ldr	x8, [x21, #0x8]
000000000001f68c	ldr	w9, [x8, #0x8]
000000000001f690	cmp	w9, #0x2
000000000001f694	b.ls	0x1f710
000000000001f698	ldr	x8, [x8, #0x20]
000000000001f69c	str	x8, [sp, #0x28]
000000000001f6a0	str	x8, [x20, #0x8]
000000000001f6a4	ldr	x0, [x20, #0x10]
000000000001f6a8	str	x0, [x19]
000000000001f6ac	ldr	x8, [sp, #0x8]
000000000001f6b0	str	x8, [x24, #0x110]
000000000001f6b4	ldp	x29, x30, [sp, #0x80]
000000000001f6b8	ldp	x20, x19, [sp, #0x70]
000000000001f6bc	ldp	x22, x21, [sp, #0x60]
000000000001f6c0	ldp	x24, x23, [sp, #0x50]
000000000001f6c4	ldp	x26, x25, [sp, #0x40]
000000000001f6c8	ldp	x28, x27, [sp, #0x30]
000000000001f6cc	add	sp, sp, #0x90
000000000001f6d0	ret
000000000001f6d4	ldr	x8, [x24, #0x118]
000000000001f6d8	add	x0, x8, #0x70
000000000001f6dc	mov	w1, #0x38
000000000001f6e0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001f6e4	mov	x19, x0
000000000001f6e8	adr	x8, #0x393b8
000000000001f6ec	nop
000000000001f6f0	str	x8, [x19, #0x10]!
000000000001f6f4	stur	xzr, [x19, #-0x8]
000000000001f6f8	str	x19, [sp, #0x18]
000000000001f6fc	mov	x0, x19
000000000001f700	mov	x1, #0x0
000000000001f704	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001f708	mov	x0, x19
000000000001f70c	bl	_ThrowException
000000000001f710	bl	_ThrowArrayIndexOutOfBoundsException
000000000001f714	mov	x0, x22
000000000001f718	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000001f71c	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000001f720	str	xzr, [sp, #0x20]
000000000001f724	stlr	xzr, [x25]
000000000001f728	ldr	x8, [x24, #0x128]
000000000001f72c	sub	x8, x8, #0x10
000000000001f730	str	x8, [x24, #0x128]
000000000001f734	bl	0x51968 ; symbol stub for: ___cxa_rethrow
000000000001f738	brk	#0x1
000000000001f73c	mov	x19, x0
000000000001f740	bl	0x51944 ; symbol stub for: ___cxa_end_catch
000000000001f744	mov	x0, x19
000000000001f748	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_kfun:kotlin.collections.State.$OBJECT.<init>#internal:
000000000001f74c	sub	sp, sp, #0x1b0
000000000001f750	stp	x24, x23, [sp, #0x170]
000000000001f754	stp	x22, x21, [sp, #0x180]
000000000001f758	stp	x20, x19, [sp, #0x190]
000000000001f75c	stp	x29, x30, [sp, #0x1a0]
000000000001f760	add	x29, sp, #0x1a0
000000000001f764	mov	x19, x0
000000000001f768	movi.16b	v0, #0x0
000000000001f76c	stp	q0, q0, [sp, #0x150]
000000000001f770	stp	q0, q0, [sp, #0x130]
000000000001f774	stp	q0, q0, [sp, #0x110]
000000000001f778	stp	q0, q0, [sp, #0xf0]
000000000001f77c	stp	q0, q0, [sp, #0xd0]
000000000001f780	stp	q0, q0, [sp, #0xb0]
000000000001f784	stp	q0, q0, [sp, #0x90]
000000000001f788	stp	q0, q0, [sp, #0x70]
000000000001f78c	stp	q0, q0, [sp, #0x50]
000000000001f790	stp	q0, q0, [sp, #0x30]
000000000001f794	stp	q0, q0, [sp, #0x10]
000000000001f798	str	q0, [sp]
000000000001f79c	mov	x8, sp
000000000001f7a0	add	x20, x8, #0x168
000000000001f7a4	adrp	x0, 77 ; 0x6c000
000000000001f7a8	add	x0, x0, #0xbb0
000000000001f7ac	ldr	x9, [x0]
000000000001f7b0	blr	x9
000000000001f7b4	ldr	x21, [x0]
000000000001f7b8	ldr	x9, [x21, #0x110]
000000000001f7bc	str	x8, [x21, #0x110]
000000000001f7c0	mov	x8, #0x2e00000000
000000000001f7c4	stp	x9, x8, [sp, #0x8]
000000000001f7c8	adr	x8, #0x6727b
000000000001f7cc	nop
000000000001f7d0	ldarb	w8, [x8]
000000000001f7d4	tbz	w8, #0x0, 0x1f7dc
000000000001f7d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f7dc	ldr	x8, [x21, #0x118]
000000000001f7e0	add	x0, x8, #0x70
000000000001f7e4	mov	w1, #0x20
000000000001f7e8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001f7ec	adr	x22, #0x3cda4
000000000001f7f0	nop
000000000001f7f4	str	x22, [x0, #0x10]!
000000000001f7f8	stur	xzr, [x0, #-0x8]
000000000001f7fc	stp	x0, x0, [sp, #0x18]
000000000001f800	ldr	x8, [x21, #0x118]
000000000001f804	add	x0, x8, #0x70
000000000001f808	mov	w1, #0x20
000000000001f80c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001f810	str	x22, [x0, #0x10]!
000000000001f814	stur	xzr, [x0, #-0x8]
000000000001f818	stp	x0, x0, [sp, #0x28]
000000000001f81c	ldr	x8, [x21, #0x118]
000000000001f820	add	x0, x8, #0x70
000000000001f824	mov	w1, #0x20
000000000001f828	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001f82c	str	x22, [x0, #0x10]!
000000000001f830	stur	xzr, [x0, #-0x8]
000000000001f834	stp	x0, x0, [sp, #0x38]
000000000001f838	ldr	x8, [x21, #0x118]
000000000001f83c	add	x0, x8, #0x70
000000000001f840	mov	w1, #0x20
000000000001f844	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001f848	str	x22, [x0, #0x10]!
000000000001f84c	stur	xzr, [x0, #-0x8]
000000000001f850	stp	x0, x0, [sp, #0x48]
000000000001f854	ldr	x8, [x21, #0x118]
000000000001f858	add	x0, x8, #0x70
000000000001f85c	mov	w1, #0x38
000000000001f860	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001f864	adr	x22, #0x38d7c
000000000001f868	nop
000000000001f86c	stp	x22, xzr, [x0, #0x10]!
000000000001f870	stur	xzr, [x0, #-0x8]
000000000001f874	mov	w23, #0x4
000000000001f878	str	w23, [x0, #0x8]
000000000001f87c	stp	x0, x0, [sp, #0x58]
000000000001f880	ldr	x8, [sp, #0x20]
000000000001f884	stp	x0, x8, [sp, #0x68]
000000000001f888	ldr	xzr, [x0]
000000000001f88c	str	x8, [x0, #0x10]
000000000001f890	ldr	x8, [sp, #0x60]
000000000001f894	ldr	x9, [sp, #0x30]
000000000001f898	stp	x8, x9, [sp, #0x78]
000000000001f89c	ldr	xzr, [x8]
000000000001f8a0	str	x9, [x8, #0x18]
000000000001f8a4	ldr	x8, [sp, #0x60]
000000000001f8a8	ldr	x9, [sp, #0x40]
000000000001f8ac	stp	x8, x9, [sp, #0x88]
000000000001f8b0	ldr	xzr, [x8]
000000000001f8b4	str	x9, [x8, #0x20]
000000000001f8b8	ldr	x8, [sp, #0x60]
000000000001f8bc	ldr	x9, [sp, #0x50]
000000000001f8c0	stp	x8, x9, [sp, #0x98]
000000000001f8c4	ldr	xzr, [x8]
000000000001f8c8	str	x9, [x8, #0x28]
000000000001f8cc	ldr	x8, [sp, #0x60]
000000000001f8d0	str	x8, [sp, #0xa8]
000000000001f8d4	str	x8, [x19, #0x8]
000000000001f8d8	ldr	x9, [x8, #0x28]
000000000001f8dc	str	x9, [sp, #0xb0]
000000000001f8e0	adr	x10, #0x46550
000000000001f8e4	nop
000000000001f8e8	str	x10, [x9, #0x8]
000000000001f8ec	str	wzr, [x9, #0x10]
000000000001f8f0	ldr	x9, [x8, #0x20]
000000000001f8f4	str	x9, [sp, #0xb8]
000000000001f8f8	adr	x10, #0x46558
000000000001f8fc	nop
000000000001f900	str	x10, [x9, #0x8]
000000000001f904	mov	w10, #0x1
000000000001f908	str	w10, [x9, #0x10]
000000000001f90c	ldr	x9, [x8, #0x10]
000000000001f910	str	x9, [sp, #0xc0]
000000000001f914	adr	x10, #0x4655c
000000000001f918	nop
000000000001f91c	str	x10, [x9, #0x8]
000000000001f920	mov	w10, #0x2
000000000001f924	str	w10, [x9, #0x10]
000000000001f928	ldr	x8, [x8, #0x18]
000000000001f92c	str	x8, [sp, #0xc8]
000000000001f930	adr	x9, #0x46560
000000000001f934	nop
000000000001f938	str	x9, [x8, #0x8]
000000000001f93c	mov	w9, #0x3
000000000001f940	str	w9, [x8, #0x10]
000000000001f944	ldr	x8, [x19, #0x8]
000000000001f948	ldr	x9, [x8, #0x28]
000000000001f94c	stp	x9, x9, [sp, #0xd0]
000000000001f950	ldr	x9, [x8, #0x20]
000000000001f954	stp	x9, x9, [sp, #0xe0]
000000000001f958	ldr	x9, [x8, #0x10]
000000000001f95c	stp	x9, x9, [sp, #0xf0]
000000000001f960	ldr	x8, [x8, #0x18]
000000000001f964	stp	x8, x8, [sp, #0x100]
000000000001f968	ldr	x8, [x21, #0x118]
000000000001f96c	add	x0, x8, #0x70
000000000001f970	mov	w1, #0x38
000000000001f974	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001f978	stp	x22, xzr, [x0, #0x10]!
000000000001f97c	stur	xzr, [x0, #-0x8]
000000000001f980	str	w23, [x0, #0x8]
000000000001f984	stp	x0, x0, [sp, #0x110]
000000000001f988	ldr	x8, [sp, #0xd8]
000000000001f98c	stp	x0, x8, [sp, #0x120]
000000000001f990	ldr	xzr, [x0]
000000000001f994	str	x8, [x0, #0x10]
000000000001f998	ldr	x8, [sp, #0x118]
000000000001f99c	ldr	x9, [sp, #0xe8]
000000000001f9a0	stp	x8, x9, [sp, #0x130]
000000000001f9a4	ldr	xzr, [x8]
000000000001f9a8	str	x9, [x8, #0x18]
000000000001f9ac	ldr	x8, [sp, #0x118]
000000000001f9b0	ldr	x9, [sp, #0xf8]
000000000001f9b4	stp	x8, x9, [sp, #0x140]
000000000001f9b8	ldr	xzr, [x8]
000000000001f9bc	str	x9, [x8, #0x20]
000000000001f9c0	ldr	x8, [sp, #0x118]
000000000001f9c4	ldr	x9, [sp, #0x108]
000000000001f9c8	stp	x8, x9, [sp, #0x150]
000000000001f9cc	ldr	xzr, [x8]
000000000001f9d0	str	x9, [x8, #0x28]
000000000001f9d4	ldr	x0, [sp, #0x118]
000000000001f9d8	str	x0, [sp, #0x160]
000000000001f9dc	mov	x1, x20
000000000001f9e0	bl	"_kfun:kotlin.enums#enumEntries(kotlin.Array<0:0>){0ยง<kotlin.Enum<0:0>>}kotlin.enums.EnumEntries<0:0>"
000000000001f9e4	str	x0, [x19, #0x10]
000000000001f9e8	ldr	x8, [sp, #0x8]
000000000001f9ec	str	x8, [x21, #0x110]
000000000001f9f0	ldp	x29, x30, [sp, #0x1a0]
000000000001f9f4	ldp	x20, x19, [sp, #0x190]
000000000001f9f8	ldp	x22, x21, [sp, #0x180]
000000000001f9fc	ldp	x24, x23, [sp, #0x170]
000000000001fa00	add	sp, sp, #0x1b0
000000000001fa04	ret
_kfun:kotlin.collections.AbstractList#iterator(){}kotlin.collections.Iterator<1:0>:
000000000001fa08	stp	x20, x19, [sp, #-0x20]!
000000000001fa0c	stp	x29, x30, [sp, #0x10]
000000000001fa10	add	x29, sp, #0x10
000000000001fa14	mov	x19, x1
000000000001fa18	mov	x20, x0
000000000001fa1c	adr	x8, #0x67027
000000000001fa20	nop
000000000001fa24	ldarb	w8, [x8]
000000000001fa28	tbz	w8, #0x0, 0x1fa30
000000000001fa2c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001fa30	adrp	x0, 77 ; 0x6c000
000000000001fa34	add	x0, x0, #0xbb0
000000000001fa38	ldr	x8, [x0]
000000000001fa3c	blr	x8
000000000001fa40	ldr	x8, [x0]
000000000001fa44	ldr	x8, [x8, #0x118]
000000000001fa48	add	x0, x8, #0x70
000000000001fa4c	mov	w1, #0x20
000000000001fa50	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001fa54	adr	x8, #0x3cdbc
000000000001fa58	nop
000000000001fa5c	str	x8, [x0, #0x10]!
000000000001fa60	stur	xzr, [x0, #-0x8]
000000000001fa64	str	x0, [x19]
000000000001fa68	str	x20, [x0, #0x8]
000000000001fa6c	str	x0, [x19]
000000000001fa70	ldp	x29, x30, [sp, #0x10]
000000000001fa74	ldp	x20, x19, [sp], #0x20
000000000001fa78	ret
_kfun:kotlin.collections.AbstractList#indexOf(1:0){}kotlin.Int:
000000000001fa7c	sub	sp, sp, #0x80
000000000001fa80	stp	x26, x25, [sp, #0x30]
000000000001fa84	stp	x24, x23, [sp, #0x40]
000000000001fa88	stp	x22, x21, [sp, #0x50]
000000000001fa8c	stp	x20, x19, [sp, #0x60]
000000000001fa90	stp	x29, x30, [sp, #0x70]
000000000001fa94	add	x29, sp, #0x70
000000000001fa98	mov	x19, x1
000000000001fa9c	mov	x21, x0
000000000001faa0	movi.16b	v0, #0x0
000000000001faa4	stp	q0, q0, [sp]
000000000001faa8	str	xzr, [sp, #0x20]
000000000001faac	mov	x20, sp
000000000001fab0	add	x22, x20, #0x18
000000000001fab4	adrp	x0, 77 ; 0x6c000
000000000001fab8	add	x0, x0, #0xbb0
000000000001fabc	ldr	x8, [x0]
000000000001fac0	blr	x8
000000000001fac4	ldr	x23, [x0]
000000000001fac8	ldr	x8, [x23, #0x110]
000000000001facc	str	x20, [x23, #0x110]
000000000001fad0	mov	x9, #0x500000000
000000000001fad4	stp	x8, x9, [sp, #0x8]
000000000001fad8	adr	x24, #0x66f6b
000000000001fadc	nop
000000000001fae0	ldarb	w8, [x24]
000000000001fae4	tbz	w8, #0x0, 0x1faec
000000000001fae8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001faec	add	x20, x20, #0x20
000000000001faf0	ldr	x8, [x21]
000000000001faf4	and	x8, x8, #0xfffffffffffffffc
000000000001faf8	ldr	x8, [x8]
000000000001fafc	ldr	w9, [x8, #0x3c]
000000000001fb00	ldr	x8, [x8, #0x40]
000000000001fb04	tbnz	w9, #0x1f, 0x1fb14
000000000001fb08	mov	w10, #0x2b
000000000001fb0c	and	x9, x9, x10
000000000001fb10	b	0x1fb98
000000000001fb14	neg	w10, w9
000000000001fb18	mvn	w9, w9
000000000001fb1c	cmp	w10, #0x9
000000000001fb20	b.ge	0x1fb58
000000000001fb24	cmp	w10, #0x2
000000000001fb28	b.lt	0x1fb8c
000000000001fb2c	mov	x10, #0x0
000000000001fb30	mov	x11, x8
000000000001fb34	ldr	w12, [x11]
000000000001fb38	cmp	w12, #0x2a
000000000001fb3c	b.gt	0x1fb94
000000000001fb40	add	x10, x10, #0x1
000000000001fb44	add	x11, x11, #0x10
000000000001fb48	cmp	x9, x10
000000000001fb4c	b.ne	0x1fb34
000000000001fb50	mov	x10, x9
000000000001fb54	b	0x1fb94
000000000001fb58	mov	w10, #0x0
000000000001fb5c	add	w11, w9, w10
000000000001fb60	cmp	w11, #0x0
000000000001fb64	cinc	w11, w11, lt
000000000001fb68	asr	w11, w11, #1
000000000001fb6c	sbfiz	x12, x11, #4, #32
000000000001fb70	ldr	w12, [x8, x12]
000000000001fb74	cmp	w12, #0x2b
000000000001fb78	csinc	w10, w10, w11, ge
000000000001fb7c	csel	w9, w9, w11, lt
000000000001fb80	cmp	w10, w9
000000000001fb84	b.lt	0x1fb5c
000000000001fb88	b	0x1fb94
000000000001fb8c	mov	w10, #0x0
000000000001fb90	b	0x1fb94
000000000001fb94	sxtw	x9, w10
000000000001fb98	add	x8, x8, x9, lsl #4
000000000001fb9c	ldr	x8, [x8, #0x8]
000000000001fba0	ldr	x8, [x8, #0x30]
000000000001fba4	mov	x0, x21
000000000001fba8	mov	x1, x22
000000000001fbac	blr	x8
000000000001fbb0	mov	x22, x0
000000000001fbb4	mov	w21, #0x0
000000000001fbb8	mov	w25, #0xa0
000000000001fbbc	b	0x1fbc8
000000000001fbc0	cbz	x19, 0x1fd8c
000000000001fbc4	add	w21, w21, #0x1
000000000001fbc8	ldr	x8, [x22]
000000000001fbcc	and	x8, x8, #0xfffffffffffffffc
000000000001fbd0	ldr	x8, [x8]
000000000001fbd4	ldr	w9, [x8, #0x3c]
000000000001fbd8	ldr	x8, [x8, #0x40]
000000000001fbdc	tbnz	w9, #0x1f, 0x1fc00
000000000001fbe0	and	x9, x9, x25
000000000001fbe4	add	x8, x8, x9, lsl #4
000000000001fbe8	ldr	x8, [x8, #0x8]
000000000001fbec	ldr	x8, [x8]
000000000001fbf0	mov	x0, x22
000000000001fbf4	blr	x8
000000000001fbf8	tbnz	w0, #0x0, 0x1fc9c
000000000001fbfc	b	0x1fd88
000000000001fc00	neg	w10, w9
000000000001fc04	mvn	w9, w9
000000000001fc08	cmp	w10, #0x9
000000000001fc0c	b.ge	0x1fc44
000000000001fc10	cmp	w10, #0x2
000000000001fc14	b.lt	0x1fc78
000000000001fc18	mov	x10, #0x0
000000000001fc1c	mov	x11, x8
000000000001fc20	ldr	w12, [x11]
000000000001fc24	cmp	w12, #0x9f
000000000001fc28	b.gt	0x1fc80
000000000001fc2c	add	x10, x10, #0x1
000000000001fc30	add	x11, x11, #0x10
000000000001fc34	cmp	x9, x10
000000000001fc38	b.ne	0x1fc20
000000000001fc3c	mov	x10, x9
000000000001fc40	b	0x1fc80
000000000001fc44	mov	w10, #0x0
000000000001fc48	add	w11, w9, w10
000000000001fc4c	cmp	w11, #0x0
000000000001fc50	cinc	w11, w11, lt
000000000001fc54	asr	w11, w11, #1
000000000001fc58	sbfiz	x12, x11, #4, #32
000000000001fc5c	ldr	w12, [x8, x12]
000000000001fc60	cmp	w12, #0xa0
000000000001fc64	csinc	w10, w10, w11, ge
000000000001fc68	csel	w9, w9, w11, lt
000000000001fc6c	cmp	w10, w9
000000000001fc70	b.lt	0x1fc48
000000000001fc74	b	0x1fc80
000000000001fc78	mov	w10, #0x0
000000000001fc7c	b	0x1fc80
000000000001fc80	sxtw	x9, w10
000000000001fc84	add	x8, x8, x9, lsl #4
000000000001fc88	ldr	x8, [x8, #0x8]
000000000001fc8c	ldr	x8, [x8]
000000000001fc90	mov	x0, x22
000000000001fc94	blr	x8
000000000001fc98	tbz	w0, #0x0, 0x1fd88
000000000001fc9c	ldarb	w8, [x24]
000000000001fca0	tbz	w8, #0x0, 0x1fca8
000000000001fca4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001fca8	ldr	x8, [x22]
000000000001fcac	and	x8, x8, #0xfffffffffffffffc
000000000001fcb0	ldr	x8, [x8]
000000000001fcb4	ldr	w9, [x8, #0x3c]
000000000001fcb8	ldr	x8, [x8, #0x40]
000000000001fcbc	tbnz	w9, #0x1f, 0x1fcc8
000000000001fcc0	and	x9, x9, x25
000000000001fcc4	b	0x1fd4c
000000000001fcc8	neg	w10, w9
000000000001fccc	mvn	w9, w9
000000000001fcd0	cmp	w10, #0x9
000000000001fcd4	b.ge	0x1fd0c
000000000001fcd8	cmp	w10, #0x2
000000000001fcdc	b.lt	0x1fd40
000000000001fce0	mov	x10, #0x0
000000000001fce4	mov	x11, x8
000000000001fce8	ldr	w12, [x11]
000000000001fcec	cmp	w12, #0x9f
000000000001fcf0	b.gt	0x1fd48
000000000001fcf4	add	x10, x10, #0x1
000000000001fcf8	add	x11, x11, #0x10
000000000001fcfc	cmp	x9, x10
000000000001fd00	b.ne	0x1fce8
000000000001fd04	mov	x10, x9
000000000001fd08	b	0x1fd48
000000000001fd0c	mov	w10, #0x0
000000000001fd10	add	w11, w9, w10
000000000001fd14	cmp	w11, #0x0
000000000001fd18	cinc	w11, w11, lt
000000000001fd1c	asr	w11, w11, #1
000000000001fd20	sbfiz	x12, x11, #4, #32
000000000001fd24	ldr	w12, [x8, x12]
000000000001fd28	cmp	w12, #0xa0
000000000001fd2c	csinc	w10, w10, w11, ge
000000000001fd30	csel	w9, w9, w11, lt
000000000001fd34	cmp	w10, w9
000000000001fd38	b.lt	0x1fd10
000000000001fd3c	b	0x1fd48
000000000001fd40	mov	w10, #0x0
000000000001fd44	b	0x1fd48
000000000001fd48	sxtw	x9, w10
000000000001fd4c	add	x8, x8, x9, lsl #4
000000000001fd50	ldr	x8, [x8, #0x8]
000000000001fd54	ldr	x8, [x8, #0x8]
000000000001fd58	mov	x0, x22
000000000001fd5c	mov	x1, x20
000000000001fd60	blr	x8
000000000001fd64	cbz	x0, 0x1fbc0
000000000001fd68	ldr	x8, [x0]
000000000001fd6c	and	x8, x8, #0xfffffffffffffffc
000000000001fd70	ldr	x8, [x8]
000000000001fd74	ldr	x8, [x8, #0x70]
000000000001fd78	mov	x1, x19
000000000001fd7c	blr	x8
000000000001fd80	tbz	w0, #0x0, 0x1fbc4
000000000001fd84	b	0x1fd8c
000000000001fd88	mov	w21, #-0x1
000000000001fd8c	ldr	x8, [sp, #0x8]
000000000001fd90	str	x8, [x23, #0x110]
000000000001fd94	mov	x0, x21
000000000001fd98	ldp	x29, x30, [sp, #0x70]
000000000001fd9c	ldp	x20, x19, [sp, #0x60]
000000000001fda0	ldp	x22, x21, [sp, #0x50]
000000000001fda4	ldp	x24, x23, [sp, #0x40]
000000000001fda8	ldp	x26, x25, [sp, #0x30]
000000000001fdac	add	sp, sp, #0x80
000000000001fdb0	ret
_kfun:kotlin.collections.AbstractList#lastIndexOf(1:0){}kotlin.Int:
000000000001fdb4	sub	sp, sp, #0x70
000000000001fdb8	stp	x24, x23, [sp, #0x30]
000000000001fdbc	stp	x22, x21, [sp, #0x40]
000000000001fdc0	stp	x20, x19, [sp, #0x50]
000000000001fdc4	stp	x29, x30, [sp, #0x60]
000000000001fdc8	add	x29, sp, #0x60
000000000001fdcc	mov	x19, x1
000000000001fdd0	mov	x21, x0
000000000001fdd4	movi.16b	v0, #0x0
000000000001fdd8	stp	q0, q0, [sp]
000000000001fddc	str	xzr, [sp, #0x20]
000000000001fde0	mov	x20, sp
000000000001fde4	adrp	x0, 77 ; 0x6c000
000000000001fde8	add	x0, x0, #0xbb0
000000000001fdec	ldr	x8, [x0]
000000000001fdf0	blr	x8
000000000001fdf4	ldr	x23, [x0]
000000000001fdf8	ldr	x8, [x23, #0x110]
000000000001fdfc	str	x20, [x23, #0x110]
000000000001fe00	mov	x9, #0x500000000
000000000001fe04	stp	x8, x9, [sp, #0x8]
000000000001fe08	adr	x24, #0x66c3b
000000000001fe0c	nop
000000000001fe10	ldarb	w8, [x24]
000000000001fe14	tbz	w8, #0x0, 0x1fe1c
000000000001fe18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001fe1c	add	x22, x20, #0x18
000000000001fe20	ldr	x8, [x21]
000000000001fe24	and	x8, x8, #0xfffffffffffffffc
000000000001fe28	ldr	x8, [x8]
000000000001fe2c	ldr	w9, [x8, #0x3c]
000000000001fe30	ldr	x8, [x8, #0x40]
000000000001fe34	tbnz	w9, #0x1f, 0x1fe44
000000000001fe38	mov	w10, #0x2b
000000000001fe3c	and	x9, x9, x10
000000000001fe40	b	0x1fec8
000000000001fe44	neg	w10, w9
000000000001fe48	mvn	w9, w9
000000000001fe4c	cmp	w10, #0x9
000000000001fe50	b.ge	0x1fe88
000000000001fe54	cmp	w10, #0x2
000000000001fe58	b.lt	0x1febc
000000000001fe5c	mov	x10, #0x0
000000000001fe60	mov	x11, x8
000000000001fe64	ldr	w12, [x11]
000000000001fe68	cmp	w12, #0x2a
000000000001fe6c	b.gt	0x1fec4
000000000001fe70	add	x10, x10, #0x1
000000000001fe74	add	x11, x11, #0x10
000000000001fe78	cmp	x9, x10
000000000001fe7c	b.ne	0x1fe64
000000000001fe80	mov	x10, x9
000000000001fe84	b	0x1fec4
000000000001fe88	mov	w10, #0x0
000000000001fe8c	add	w11, w9, w10
000000000001fe90	cmp	w11, #0x0
000000000001fe94	cinc	w11, w11, lt
000000000001fe98	asr	w11, w11, #1
000000000001fe9c	sbfiz	x12, x11, #4, #32
000000000001fea0	ldr	w12, [x8, x12]
000000000001fea4	cmp	w12, #0x2b
000000000001fea8	csinc	w10, w10, w11, ge
000000000001feac	csel	w9, w9, w11, lt
000000000001feb0	cmp	w10, w9
000000000001feb4	b.lt	0x1fe8c
000000000001feb8	b	0x1fec4
000000000001febc	mov	w10, #0x0
000000000001fec0	b	0x1fec4
000000000001fec4	sxtw	x9, w10
000000000001fec8	add	x20, x20, #0x20
000000000001fecc	add	x8, x8, x9, lsl #4
000000000001fed0	ldr	x8, [x8, #0x8]
000000000001fed4	ldr	x8, [x8]
000000000001fed8	mov	x0, x21
000000000001fedc	blr	x8
000000000001fee0	mov	x1, x0
000000000001fee4	ldr	x8, [x21]
000000000001fee8	and	x8, x8, #0xfffffffffffffffc
000000000001feec	ldr	x8, [x8]
000000000001fef0	ldr	w9, [x8, #0x3c]
000000000001fef4	ldr	x8, [x8, #0x40]
000000000001fef8	tbnz	w9, #0x1f, 0x1ff08
000000000001fefc	mov	w10, #0x2b
000000000001ff00	and	x9, x9, x10
000000000001ff04	b	0x1ff8c
000000000001ff08	neg	w10, w9
000000000001ff0c	mvn	w9, w9
000000000001ff10	cmp	w10, #0x9
000000000001ff14	b.ge	0x1ff4c
000000000001ff18	cmp	w10, #0x2
000000000001ff1c	b.lt	0x1ff80
000000000001ff20	mov	x10, #0x0
000000000001ff24	mov	x11, x8
000000000001ff28	ldr	w12, [x11]
000000000001ff2c	cmp	w12, #0x2a
000000000001ff30	b.gt	0x1ff88
000000000001ff34	add	x10, x10, #0x1
000000000001ff38	add	x11, x11, #0x10
000000000001ff3c	cmp	x9, x10
000000000001ff40	b.ne	0x1ff28
000000000001ff44	mov	x10, x9
000000000001ff48	b	0x1ff88
000000000001ff4c	mov	w10, #0x0
000000000001ff50	add	w11, w9, w10
000000000001ff54	cmp	w11, #0x0
000000000001ff58	cinc	w11, w11, lt
000000000001ff5c	asr	w11, w11, #1
000000000001ff60	sbfiz	x12, x11, #4, #32
000000000001ff64	ldr	w12, [x8, x12]
000000000001ff68	cmp	w12, #0x2b
000000000001ff6c	csinc	w10, w10, w11, ge
000000000001ff70	csel	w9, w9, w11, lt
000000000001ff74	cmp	w10, w9
000000000001ff78	b.lt	0x1ff50
000000000001ff7c	b	0x1ff88
000000000001ff80	mov	w10, #0x0
000000000001ff84	b	0x1ff88
000000000001ff88	sxtw	x9, w10
000000000001ff8c	add	x8, x8, x9, lsl #4
000000000001ff90	ldr	x8, [x8, #0x8]
000000000001ff94	ldr	x8, [x8, #0x48]
000000000001ff98	mov	x0, x21
000000000001ff9c	mov	x2, x22
000000000001ffa0	blr	x8
000000000001ffa4	mov	x21, x0
000000000001ffa8	mov	w22, #0x1a
000000000001ffac	b	0x1ffb4
000000000001ffb0	cbz	x19, 0x20170
000000000001ffb4	ldr	x8, [x21]
000000000001ffb8	and	x8, x8, #0xfffffffffffffffc
000000000001ffbc	ldr	x8, [x8]
000000000001ffc0	ldr	w9, [x8, #0x3c]
000000000001ffc4	ldr	x8, [x8, #0x40]
000000000001ffc8	tbnz	w9, #0x1f, 0x1ffec
000000000001ffcc	and	x9, x9, x22
000000000001ffd0	add	x8, x8, x9, lsl #4
000000000001ffd4	ldr	x8, [x8, #0x8]
000000000001ffd8	ldr	x8, [x8, #0x8]
000000000001ffdc	mov	x0, x21
000000000001ffe0	blr	x8
000000000001ffe4	tbnz	w0, #0x0, 0x20088
000000000001ffe8	b	0x20194
000000000001ffec	neg	w10, w9
000000000001fff0	mvn	w9, w9
000000000001fff4	cmp	w10, #0x9
000000000001fff8	b.ge	0x20030
000000000001fffc	cmp	w10, #0x2
0000000000020000	b.lt	0x20064
0000000000020004	mov	x10, #0x0
0000000000020008	mov	x11, x8
000000000002000c	ldr	w12, [x11]
0000000000020010	cmp	w12, #0x19
0000000000020014	b.gt	0x2006c
0000000000020018	add	x10, x10, #0x1
000000000002001c	add	x11, x11, #0x10
0000000000020020	cmp	x9, x10
0000000000020024	b.ne	0x2000c
0000000000020028	mov	x10, x9
000000000002002c	b	0x2006c
0000000000020030	mov	w10, #0x0
0000000000020034	add	w11, w9, w10
0000000000020038	cmp	w11, #0x0
000000000002003c	cinc	w11, w11, lt
0000000000020040	asr	w11, w11, #1
0000000000020044	sbfiz	x12, x11, #4, #32
0000000000020048	ldr	w12, [x8, x12]
000000000002004c	cmp	w12, #0x1a
0000000000020050	csinc	w10, w10, w11, ge
0000000000020054	csel	w9, w9, w11, lt
0000000000020058	cmp	w10, w9
000000000002005c	b.lt	0x20034
0000000000020060	b	0x2006c
0000000000020064	mov	w10, #0x0
0000000000020068	b	0x2006c
000000000002006c	sxtw	x9, w10
0000000000020070	add	x8, x8, x9, lsl #4
0000000000020074	ldr	x8, [x8, #0x8]
0000000000020078	ldr	x8, [x8, #0x8]
000000000002007c	mov	x0, x21
0000000000020080	blr	x8
0000000000020084	tbz	w0, #0x0, 0x20194
0000000000020088	ldarb	w8, [x24]
000000000002008c	tbz	w8, #0x0, 0x20094
0000000000020090	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020094	ldr	x8, [x21]
0000000000020098	and	x8, x8, #0xfffffffffffffffc
000000000002009c	ldr	x8, [x8]
00000000000200a0	ldr	w9, [x8, #0x3c]
00000000000200a4	ldr	x8, [x8, #0x40]
00000000000200a8	tbnz	w9, #0x1f, 0x200b4
00000000000200ac	and	x9, x9, x22
00000000000200b0	b	0x20138
00000000000200b4	neg	w10, w9
00000000000200b8	mvn	w9, w9
00000000000200bc	cmp	w10, #0x9
00000000000200c0	b.ge	0x200f8
00000000000200c4	cmp	w10, #0x2
00000000000200c8	b.lt	0x2012c
00000000000200cc	mov	x10, #0x0
00000000000200d0	mov	x11, x8
00000000000200d4	ldr	w12, [x11]
00000000000200d8	cmp	w12, #0x19
00000000000200dc	b.gt	0x20134
00000000000200e0	add	x10, x10, #0x1
00000000000200e4	add	x11, x11, #0x10
00000000000200e8	cmp	x9, x10
00000000000200ec	b.ne	0x200d4
00000000000200f0	mov	x10, x9
00000000000200f4	b	0x20134
00000000000200f8	mov	w10, #0x0
00000000000200fc	add	w11, w9, w10
0000000000020100	cmp	w11, #0x0
0000000000020104	cinc	w11, w11, lt
0000000000020108	asr	w11, w11, #1
000000000002010c	sbfiz	x12, x11, #4, #32
0000000000020110	ldr	w12, [x8, x12]
0000000000020114	cmp	w12, #0x1a
0000000000020118	csinc	w10, w10, w11, ge
000000000002011c	csel	w9, w9, w11, lt
0000000000020120	cmp	w10, w9
0000000000020124	b.lt	0x200fc
0000000000020128	b	0x20134
000000000002012c	mov	w10, #0x0
0000000000020130	b	0x20134
0000000000020134	sxtw	x9, w10
0000000000020138	add	x8, x8, x9, lsl #4
000000000002013c	ldr	x8, [x8, #0x8]
0000000000020140	ldr	x8, [x8, #0x20]
0000000000020144	mov	x0, x21
0000000000020148	mov	x1, x20
000000000002014c	blr	x8
0000000000020150	cbz	x0, 0x1ffb0
0000000000020154	ldr	x8, [x0]
0000000000020158	and	x8, x8, #0xfffffffffffffffc
000000000002015c	ldr	x8, [x8]
0000000000020160	ldr	x8, [x8, #0x70]
0000000000020164	mov	x1, x19
0000000000020168	blr	x8
000000000002016c	tbz	w0, #0x0, 0x1ffb4
0000000000020170	ldr	x8, [x21]
0000000000020174	and	x8, x8, #0xfffffffffffffffc
0000000000020178	ldr	x8, [x8]
000000000002017c	ldr	w9, [x8, #0x3c]
0000000000020180	ldr	x8, [x8, #0x40]
0000000000020184	tbnz	w9, #0x1f, 0x2019c
0000000000020188	mov	w10, #0x1a
000000000002018c	and	x9, x9, x10
0000000000020190	b	0x20220
0000000000020194	mov	w0, #-0x1
0000000000020198	b	0x20234
000000000002019c	neg	w10, w9
00000000000201a0	mvn	w9, w9
00000000000201a4	cmp	w10, #0x9
00000000000201a8	b.ge	0x201e0
00000000000201ac	cmp	w10, #0x2
00000000000201b0	b.lt	0x20214
00000000000201b4	mov	x10, #0x0
00000000000201b8	mov	x11, x8
00000000000201bc	ldr	w12, [x11]
00000000000201c0	cmp	w12, #0x19
00000000000201c4	b.gt	0x2021c
00000000000201c8	add	x10, x10, #0x1
00000000000201cc	add	x11, x11, #0x10
00000000000201d0	cmp	x9, x10
00000000000201d4	b.ne	0x201bc
00000000000201d8	mov	x10, x9
00000000000201dc	b	0x2021c
00000000000201e0	mov	w10, #0x0
00000000000201e4	add	w11, w9, w10
00000000000201e8	cmp	w11, #0x0
00000000000201ec	cinc	w11, w11, lt
00000000000201f0	asr	w11, w11, #1
00000000000201f4	sbfiz	x12, x11, #4, #32
00000000000201f8	ldr	w12, [x8, x12]
00000000000201fc	cmp	w12, #0x1a
0000000000020200	csinc	w10, w10, w11, ge
0000000000020204	csel	w9, w9, w11, lt
0000000000020208	cmp	w10, w9
000000000002020c	b.lt	0x201e4
0000000000020210	b	0x2021c
0000000000020214	mov	w10, #0x0
0000000000020218	b	0x2021c
000000000002021c	sxtw	x9, w10
0000000000020220	add	x8, x8, x9, lsl #4
0000000000020224	ldr	x8, [x8, #0x8]
0000000000020228	ldr	x8, [x8, #0x18]
000000000002022c	mov	x0, x21
0000000000020230	blr	x8
0000000000020234	ldr	x8, [sp, #0x8]
0000000000020238	str	x8, [x23, #0x110]
000000000002023c	ldp	x29, x30, [sp, #0x60]
0000000000020240	ldp	x20, x19, [sp, #0x50]
0000000000020244	ldp	x22, x21, [sp, #0x40]
0000000000020248	ldp	x24, x23, [sp, #0x30]
000000000002024c	add	sp, sp, #0x70
0000000000020250	ret
_kfun:kotlin.collections.AbstractList#listIterator(){}kotlin.collections.ListIterator<1:0>:
0000000000020254	stp	x22, x21, [sp, #-0x30]!
0000000000020258	stp	x20, x19, [sp, #0x10]
000000000002025c	stp	x29, x30, [sp, #0x20]
0000000000020260	add	x29, sp, #0x20
0000000000020264	mov	x19, x1
0000000000020268	mov	x20, x0
000000000002026c	adr	x8, #0x667d7
0000000000020270	nop
0000000000020274	ldarb	w8, [x8]
0000000000020278	tbz	w8, #0x0, 0x20280
000000000002027c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020280	adrp	x0, 76 ; 0x6c000
0000000000020284	add	x0, x0, #0xbb0
0000000000020288	ldr	x8, [x0]
000000000002028c	blr	x8
0000000000020290	ldr	x8, [x0]
0000000000020294	ldr	x8, [x8, #0x118]
0000000000020298	add	x0, x8, #0x70
000000000002029c	mov	w1, #0x28
00000000000202a0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000202a4	mov	x21, x0
00000000000202a8	adr	x8, #0x3c608
00000000000202ac	nop
00000000000202b0	str	x8, [x21, #0x10]!
00000000000202b4	stur	xzr, [x21, #-0x8]
00000000000202b8	str	x21, [x19]
00000000000202bc	str	x20, [x21, #0x18]
00000000000202c0	str	x20, [x21, #0x8]
00000000000202c4	ldr	x8, [x20]
00000000000202c8	and	x8, x8, #0xfffffffffffffffc
00000000000202cc	ldr	x8, [x8]
00000000000202d0	ldr	x8, [x8, #0x88]
00000000000202d4	mov	x0, x20
00000000000202d8	blr	x8
00000000000202dc	mov	x1, x0
00000000000202e0	mov	w0, #0x0
00000000000202e4	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
00000000000202e8	str	wzr, [x21, #0x10]
00000000000202ec	str	x21, [x19]
00000000000202f0	mov	x0, x21
00000000000202f4	ldp	x29, x30, [sp, #0x20]
00000000000202f8	ldp	x20, x19, [sp, #0x10]
00000000000202fc	ldp	x22, x21, [sp], #0x30
0000000000020300	ret
_kfun:kotlin.collections.AbstractList#listIterator(kotlin.Int){}kotlin.collections.ListIterator<1:0>:
0000000000020304	stp	x22, x21, [sp, #-0x30]!
0000000000020308	stp	x20, x19, [sp, #0x10]
000000000002030c	stp	x29, x30, [sp, #0x20]
0000000000020310	add	x29, sp, #0x20
0000000000020314	mov	x19, x2
0000000000020318	mov	x20, x1
000000000002031c	mov	x21, x0
0000000000020320	adr	x8, #0x66723
0000000000020324	nop
0000000000020328	ldarb	w8, [x8]
000000000002032c	tbz	w8, #0x0, 0x20334
0000000000020330	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020334	adrp	x0, 76 ; 0x6c000
0000000000020338	add	x0, x0, #0xbb0
000000000002033c	ldr	x8, [x0]
0000000000020340	blr	x8
0000000000020344	ldr	x8, [x0]
0000000000020348	ldr	x8, [x8, #0x118]
000000000002034c	add	x0, x8, #0x70
0000000000020350	mov	w1, #0x28
0000000000020354	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000020358	mov	x22, x0
000000000002035c	adr	x8, #0x3c554
0000000000020360	nop
0000000000020364	str	x8, [x22, #0x10]!
0000000000020368	stur	xzr, [x22, #-0x8]
000000000002036c	str	x22, [x19]
0000000000020370	str	x21, [x22, #0x18]
0000000000020374	str	x21, [x22, #0x8]
0000000000020378	ldr	x8, [x21]
000000000002037c	and	x8, x8, #0xfffffffffffffffc
0000000000020380	ldr	x8, [x8]
0000000000020384	ldr	x8, [x8, #0x88]
0000000000020388	mov	x0, x21
000000000002038c	blr	x8
0000000000020390	mov	x1, x0
0000000000020394	mov	x0, x20
0000000000020398	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
000000000002039c	str	w20, [x22, #0x10]
00000000000203a0	str	x22, [x19]
00000000000203a4	mov	x0, x22
00000000000203a8	ldp	x29, x30, [sp, #0x20]
00000000000203ac	ldp	x20, x19, [sp, #0x10]
00000000000203b0	ldp	x22, x21, [sp], #0x30
00000000000203b4	ret
_kfun:kotlin.collections.AbstractList#subList(kotlin.Int;kotlin.Int){}kotlin.collections.List<1:0>:
00000000000203b8	stp	x24, x23, [sp, #-0x40]!
00000000000203bc	stp	x22, x21, [sp, #0x10]
00000000000203c0	stp	x20, x19, [sp, #0x20]
00000000000203c4	stp	x29, x30, [sp, #0x30]
00000000000203c8	add	x29, sp, #0x30
00000000000203cc	mov	x19, x3
00000000000203d0	mov	x20, x2
00000000000203d4	mov	x21, x1
00000000000203d8	mov	x22, x0
00000000000203dc	adr	x8, #0x66667
00000000000203e0	nop
00000000000203e4	ldarb	w8, [x8]
00000000000203e8	tbz	w8, #0x0, 0x203f0
00000000000203ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000203f0	adrp	x0, 76 ; 0x6c000
00000000000203f4	add	x0, x0, #0xbb0
00000000000203f8	ldr	x8, [x0]
00000000000203fc	blr	x8
0000000000020400	ldr	x8, [x0]
0000000000020404	ldr	x8, [x8, #0x118]
0000000000020408	add	x0, x8, #0x70
000000000002040c	mov	w1, #0x20
0000000000020410	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000020414	mov	x23, x0
0000000000020418	adr	x8, #0x3c308
000000000002041c	nop
0000000000020420	str	x8, [x23, #0x10]!
0000000000020424	stur	xzr, [x23, #-0x8]
0000000000020428	str	x23, [x19]
000000000002042c	str	x22, [x23, #0x8]
0000000000020430	str	w21, [x23, #0x10]
0000000000020434	ldr	x8, [x22]
0000000000020438	and	x8, x8, #0xfffffffffffffffc
000000000002043c	ldr	x8, [x8]
0000000000020440	ldr	x8, [x8, #0x88]
0000000000020444	mov	x0, x22
0000000000020448	blr	x8
000000000002044c	mov	x2, x0
0000000000020450	mov	x0, x21
0000000000020454	mov	x1, x20
0000000000020458	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkRangeIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
000000000002045c	ldr	w8, [x23, #0x10]
0000000000020460	sub	w8, w20, w8
0000000000020464	str	w8, [x23, #0x14]
0000000000020468	str	x23, [x19]
000000000002046c	mov	x0, x23
0000000000020470	ldp	x29, x30, [sp, #0x30]
0000000000020474	ldp	x20, x19, [sp, #0x20]
0000000000020478	ldp	x22, x21, [sp, #0x10]
000000000002047c	ldp	x24, x23, [sp], #0x40
0000000000020480	ret
_kfun:kotlin.collections.AbstractList.SubList.get#internal:
0000000000020484	stp	x22, x21, [sp, #-0x30]!
0000000000020488	stp	x20, x19, [sp, #0x10]
000000000002048c	stp	x29, x30, [sp, #0x20]
0000000000020490	add	x29, sp, #0x20
0000000000020494	mov	x19, x2
0000000000020498	mov	x20, x1
000000000002049c	mov	x21, x0
00000000000204a0	adr	x8, #0x665a3
00000000000204a4	nop
00000000000204a8	ldarb	w8, [x8]
00000000000204ac	tbz	w8, #0x0, 0x204b4
00000000000204b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000204b4	ldr	w1, [x21, #0x14]
00000000000204b8	mov	x0, x20
00000000000204bc	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
00000000000204c0	ldr	x0, [x21, #0x8]
00000000000204c4	ldr	w8, [x21, #0x10]
00000000000204c8	add	w1, w8, w20
00000000000204cc	ldr	x8, [x0]
00000000000204d0	and	x8, x8, #0xfffffffffffffffc
00000000000204d4	ldr	x8, [x8]
00000000000204d8	ldr	x8, [x8, #0xc0]
00000000000204dc	mov	x2, x19
00000000000204e0	blr	x8
00000000000204e4	str	x0, [x19]
00000000000204e8	ldp	x29, x30, [sp, #0x20]
00000000000204ec	ldp	x20, x19, [sp, #0x10]
00000000000204f0	ldp	x22, x21, [sp], #0x30
00000000000204f4	ret
_kfun:kotlin.collections.AbstractList.SubList.<get-size>#internal:
00000000000204f8	stp	x20, x19, [sp, #-0x20]!
00000000000204fc	stp	x29, x30, [sp, #0x10]
0000000000020500	add	x29, sp, #0x10
0000000000020504	mov	x19, x0
0000000000020508	adr	x8, #0x6653b
000000000002050c	nop
0000000000020510	ldarb	w8, [x8]
0000000000020514	tbz	w8, #0x0, 0x2051c
0000000000020518	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002051c	ldr	w0, [x19, #0x14]
0000000000020520	ldp	x29, x30, [sp, #0x10]
0000000000020524	ldp	x20, x19, [sp], #0x20
0000000000020528	ret
_kfun:kotlin.collections.AbstractList#equals(kotlin.Any?){}kotlin.Boolean:
000000000002052c	stp	x20, x19, [sp, #-0x20]!
0000000000020530	stp	x29, x30, [sp, #0x10]
0000000000020534	add	x29, sp, #0x10
0000000000020538	mov	x19, x1
000000000002053c	mov	x20, x0
0000000000020540	adr	x8, #0x66503
0000000000020544	nop
0000000000020548	ldarb	w8, [x8]
000000000002054c	tbz	w8, #0x0, 0x20554
0000000000020550	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020554	cmp	x19, x20
0000000000020558	b.eq	0x20594
000000000002055c	cbz	x19, 0x20648
0000000000020560	ldr	x8, [x19]
0000000000020564	and	x8, x8, #0xfffffffffffffffc
0000000000020568	ldr	x8, [x8]
000000000002056c	ldr	w9, [x8, #0x3c]
0000000000020570	ldr	x8, [x8, #0x40]
0000000000020574	tbnz	w9, #0x1f, 0x205a4
0000000000020578	mov	w10, #0x2b
000000000002057c	and	x9, x9, x10
0000000000020580	lsl	x9, x9, #4
0000000000020584	ldr	w8, [x8, x9]
0000000000020588	cmp	w8, #0x2b
000000000002058c	b.ne	0x20648
0000000000020590	b	0x2066c
0000000000020594	mov	w0, #0x1
0000000000020598	ldp	x29, x30, [sp, #0x10]
000000000002059c	ldp	x20, x19, [sp], #0x20
00000000000205a0	ret
00000000000205a4	neg	w10, w9
00000000000205a8	mvn	w9, w9
00000000000205ac	cmp	w10, #0x9
00000000000205b0	b.ge	0x205fc
00000000000205b4	cmp	w10, #0x2
00000000000205b8	b.lt	0x20630
00000000000205bc	mov	x10, #0x0
00000000000205c0	mov	x11, x8
00000000000205c4	ldr	w12, [x11]
00000000000205c8	cmp	w12, #0x2a
00000000000205cc	b.gt	0x20658
00000000000205d0	add	x10, x10, #0x1
00000000000205d4	add	x11, x11, #0x10
00000000000205d8	cmp	x9, x10
00000000000205dc	b.ne	0x205c4
00000000000205e0	mov	x10, x9
00000000000205e4	sxtw	x9, w10
00000000000205e8	lsl	x9, x9, #4
00000000000205ec	ldr	w8, [x8, x9]
00000000000205f0	cmp	w8, #0x2b
00000000000205f4	b.ne	0x20648
00000000000205f8	b	0x2066c
00000000000205fc	mov	w10, #0x0
0000000000020600	add	w11, w9, w10
0000000000020604	cmp	w11, #0x0
0000000000020608	cinc	w11, w11, lt
000000000002060c	asr	w11, w11, #1
0000000000020610	sbfiz	x12, x11, #4, #32
0000000000020614	ldr	w12, [x8, x12]
0000000000020618	cmp	w12, #0x2b
000000000002061c	csinc	w10, w10, w11, ge
0000000000020620	csel	w9, w9, w11, lt
0000000000020624	cmp	w10, w9
0000000000020628	b.lt	0x20600
000000000002062c	b	0x20658
0000000000020630	mov	w10, #0x0
0000000000020634	sxtw	x9, w10
0000000000020638	lsl	x9, x9, #4
000000000002063c	ldr	w8, [x8, x9]
0000000000020640	cmp	w8, #0x2b
0000000000020644	b.eq	0x2066c
0000000000020648	mov	w0, #0x0
000000000002064c	ldp	x29, x30, [sp, #0x10]
0000000000020650	ldp	x20, x19, [sp], #0x20
0000000000020654	ret
0000000000020658	sxtw	x9, w10
000000000002065c	lsl	x9, x9, #4
0000000000020660	ldr	w8, [x8, x9]
0000000000020664	cmp	w8, #0x2b
0000000000020668	b.ne	0x20648
000000000002066c	mov	x0, x20
0000000000020670	mov	x1, x19
0000000000020674	ldp	x29, x30, [sp, #0x10]
0000000000020678	ldp	x20, x19, [sp], #0x20
000000000002067c	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedEquals(kotlin.collections.Collection<*>;kotlin.collections.Collection<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractList#hashCode(){}kotlin.Int:
0000000000020680	stp	x20, x19, [sp, #-0x20]!
0000000000020684	stp	x29, x30, [sp, #0x10]
0000000000020688	add	x29, sp, #0x10
000000000002068c	mov	x19, x0
0000000000020690	adr	x8, #0x663b3
0000000000020694	nop
0000000000020698	ldarb	w8, [x8]
000000000002069c	tbz	w8, #0x0, 0x206a4
00000000000206a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000206a4	mov	x0, x19
00000000000206a8	ldp	x29, x30, [sp, #0x10]
00000000000206ac	ldp	x20, x19, [sp], #0x20
00000000000206b0	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections.AbstractList.IteratorImpl.hasNext#internal:
00000000000206b4	stp	x20, x19, [sp, #-0x20]!
00000000000206b8	stp	x29, x30, [sp, #0x10]
00000000000206bc	add	x29, sp, #0x10
00000000000206c0	mov	x19, x0
00000000000206c4	adr	x8, #0x6637f
00000000000206c8	nop
00000000000206cc	ldarb	w8, [x8]
00000000000206d0	tbz	w8, #0x0, 0x206d8
00000000000206d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000206d8	ldr	w20, [x19, #0x10]
00000000000206dc	ldr	x0, [x19, #0x8]
00000000000206e0	ldr	x8, [x0]
00000000000206e4	and	x8, x8, #0xfffffffffffffffc
00000000000206e8	ldr	x8, [x8]
00000000000206ec	ldr	x8, [x8, #0x88]
00000000000206f0	blr	x8
00000000000206f4	cmp	w20, w0
00000000000206f8	cset	w0, lt
00000000000206fc	ldp	x29, x30, [sp, #0x10]
0000000000020700	ldp	x20, x19, [sp], #0x20
0000000000020704	ret
_kfun:kotlin.collections.AbstractList.IteratorImpl.next#internal:
0000000000020708	sub	sp, sp, #0x50
000000000002070c	stp	x22, x21, [sp, #0x20]
0000000000020710	stp	x20, x19, [sp, #0x30]
0000000000020714	stp	x29, x30, [sp, #0x40]
0000000000020718	add	x29, sp, #0x40
000000000002071c	mov	x19, x1
0000000000020720	mov	x20, x0
0000000000020724	movi.16b	v0, #0x0
0000000000020728	stp	q0, q0, [sp]
000000000002072c	adrp	x0, 76 ; 0x6c000
0000000000020730	add	x0, x0, #0xbb0
0000000000020734	ldr	x8, [x0]
0000000000020738	blr	x8
000000000002073c	ldr	x21, [x0]
0000000000020740	ldr	x8, [x21, #0x110]
0000000000020744	mov	x9, sp
0000000000020748	str	x9, [x21, #0x110]
000000000002074c	mov	x9, #0x400000000
0000000000020750	stp	x8, x9, [sp, #0x8]
0000000000020754	adr	x8, #0x662ef
0000000000020758	nop
000000000002075c	ldarb	w8, [x8]
0000000000020760	tbz	w8, #0x0, 0x20768
0000000000020764	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020768	ldr	x8, [x20]
000000000002076c	and	x8, x8, #0xfffffffffffffffc
0000000000020770	ldr	x8, [x8]
0000000000020774	ldr	x8, [x8, #0x88]
0000000000020778	mov	x0, x20
000000000002077c	blr	x8
0000000000020780	tbz	w0, #0x0, 0x207cc
0000000000020784	ldr	x0, [x20, #0x8]
0000000000020788	ldr	w1, [x20, #0x10]
000000000002078c	add	w8, w1, #0x1
0000000000020790	str	w8, [x20, #0x10]
0000000000020794	ldr	x8, [x0]
0000000000020798	and	x8, x8, #0xfffffffffffffffc
000000000002079c	ldr	x8, [x8]
00000000000207a0	ldr	x8, [x8, #0xc0]
00000000000207a4	mov	x2, x19
00000000000207a8	blr	x8
00000000000207ac	str	x0, [x19]
00000000000207b0	ldr	x8, [sp, #0x8]
00000000000207b4	str	x8, [x21, #0x110]
00000000000207b8	ldp	x29, x30, [sp, #0x40]
00000000000207bc	ldp	x20, x19, [sp, #0x30]
00000000000207c0	ldp	x22, x21, [sp, #0x20]
00000000000207c4	add	sp, sp, #0x50
00000000000207c8	ret
00000000000207cc	ldr	x8, [x21, #0x118]
00000000000207d0	add	x0, x8, #0x70
00000000000207d4	mov	w1, #0x38
00000000000207d8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000207dc	mov	x19, x0
00000000000207e0	adr	x8, #0x382c0
00000000000207e4	nop
00000000000207e8	str	x8, [x19, #0x10]!
00000000000207ec	stur	xzr, [x19, #-0x8]
00000000000207f0	str	x19, [sp, #0x18]
00000000000207f4	mov	x0, x19
00000000000207f8	mov	x1, #0x0
00000000000207fc	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000020800	mov	x0, x19
0000000000020804	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.hasPrevious#internal:
0000000000020808	stp	x20, x19, [sp, #-0x20]!
000000000002080c	stp	x29, x30, [sp, #0x10]
0000000000020810	add	x29, sp, #0x10
0000000000020814	mov	x19, x0
0000000000020818	adr	x8, #0x6622b
000000000002081c	nop
0000000000020820	ldarb	w8, [x8]
0000000000020824	tbz	w8, #0x0, 0x2082c
0000000000020828	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002082c	ldr	w8, [x19, #0x10]
0000000000020830	cmp	w8, #0x0
0000000000020834	cset	w0, gt
0000000000020838	ldp	x29, x30, [sp, #0x10]
000000000002083c	ldp	x20, x19, [sp], #0x20
0000000000020840	ret
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.nextIndex#internal:
0000000000020844	stp	x20, x19, [sp, #-0x20]!
0000000000020848	stp	x29, x30, [sp, #0x10]
000000000002084c	add	x29, sp, #0x10
0000000000020850	mov	x19, x0
0000000000020854	adr	x8, #0x661ef
0000000000020858	nop
000000000002085c	ldarb	w8, [x8]
0000000000020860	tbz	w8, #0x0, 0x20868
0000000000020864	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020868	ldr	w0, [x19, #0x10]
000000000002086c	ldp	x29, x30, [sp, #0x10]
0000000000020870	ldp	x20, x19, [sp], #0x20
0000000000020874	ret
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.previous#internal:
0000000000020878	sub	sp, sp, #0x50
000000000002087c	stp	x22, x21, [sp, #0x20]
0000000000020880	stp	x20, x19, [sp, #0x30]
0000000000020884	stp	x29, x30, [sp, #0x40]
0000000000020888	add	x29, sp, #0x40
000000000002088c	mov	x19, x1
0000000000020890	mov	x20, x0
0000000000020894	movi.16b	v0, #0x0
0000000000020898	stp	q0, q0, [sp]
000000000002089c	adrp	x0, 76 ; 0x6c000
00000000000208a0	add	x0, x0, #0xbb0
00000000000208a4	ldr	x8, [x0]
00000000000208a8	blr	x8
00000000000208ac	ldr	x21, [x0]
00000000000208b0	ldr	x8, [x21, #0x110]
00000000000208b4	mov	x9, sp
00000000000208b8	str	x9, [x21, #0x110]
00000000000208bc	mov	x9, #0x400000000
00000000000208c0	stp	x8, x9, [sp, #0x8]
00000000000208c4	adr	x8, #0x6617f
00000000000208c8	nop
00000000000208cc	ldarb	w8, [x8]
00000000000208d0	tbz	w8, #0x0, 0x208d8
00000000000208d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000208d8	ldr	x8, [x20]
00000000000208dc	and	x8, x8, #0xfffffffffffffffc
00000000000208e0	ldr	x8, [x8]
00000000000208e4	ldr	x8, [x8, #0x98]
00000000000208e8	mov	x0, x20
00000000000208ec	blr	x8
00000000000208f0	tbz	w0, #0x0, 0x2093c
00000000000208f4	ldr	x0, [x20, #0x18]
00000000000208f8	ldr	w8, [x20, #0x10]
00000000000208fc	sub	w1, w8, #0x1
0000000000020900	str	w1, [x20, #0x10]
0000000000020904	ldr	x8, [x0]
0000000000020908	and	x8, x8, #0xfffffffffffffffc
000000000002090c	ldr	x8, [x8]
0000000000020910	ldr	x8, [x8, #0xc0]
0000000000020914	mov	x2, x19
0000000000020918	blr	x8
000000000002091c	str	x0, [x19]
0000000000020920	ldr	x8, [sp, #0x8]
0000000000020924	str	x8, [x21, #0x110]
0000000000020928	ldp	x29, x30, [sp, #0x40]
000000000002092c	ldp	x20, x19, [sp, #0x30]
0000000000020930	ldp	x22, x21, [sp, #0x20]
0000000000020934	add	sp, sp, #0x50
0000000000020938	ret
000000000002093c	ldr	x8, [x21, #0x118]
0000000000020940	add	x0, x8, #0x70
0000000000020944	mov	w1, #0x38
0000000000020948	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002094c	mov	x19, x0
0000000000020950	adr	x8, #0x38150
0000000000020954	nop
0000000000020958	str	x8, [x19, #0x10]!
000000000002095c	stur	xzr, [x19, #-0x8]
0000000000020960	str	x19, [sp, #0x18]
0000000000020964	mov	x0, x19
0000000000020968	mov	x1, #0x0
000000000002096c	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000020970	mov	x0, x19
0000000000020974	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.previousIndex#internal:
0000000000020978	stp	x20, x19, [sp, #-0x20]!
000000000002097c	stp	x29, x30, [sp, #0x10]
0000000000020980	add	x29, sp, #0x10
0000000000020984	mov	x19, x0
0000000000020988	adr	x8, #0x660bb
000000000002098c	nop
0000000000020990	ldarb	w8, [x8]
0000000000020994	tbz	w8, #0x0, 0x2099c
0000000000020998	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002099c	ldr	w8, [x19, #0x10]
00000000000209a0	sub	w0, w8, #0x1
00000000000209a4	ldp	x29, x30, [sp, #0x10]
00000000000209a8	ldp	x20, x19, [sp], #0x20
00000000000209ac	ret
_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}:
00000000000209b0	sub	sp, sp, #0xc0
00000000000209b4	stp	x26, x25, [sp, #0x70]
00000000000209b8	stp	x24, x23, [sp, #0x80]
00000000000209bc	stp	x22, x21, [sp, #0x90]
00000000000209c0	stp	x20, x19, [sp, #0xa0]
00000000000209c4	stp	x29, x30, [sp, #0xb0]
00000000000209c8	add	x29, sp, #0xb0
00000000000209cc	mov	x19, x1
00000000000209d0	mov	x20, x0
00000000000209d4	movi.16b	v0, #0x0
00000000000209d8	stp	q0, q0, [sp, #0x20]
00000000000209dc	stp	q0, q0, [sp, #0x50]
00000000000209e0	str	q0, [sp, #0x40]
00000000000209e4	stp	xzr, xzr, [sp, #0x10]
00000000000209e8	adr	x8, #0x3b9a8
00000000000209ec	nop
00000000000209f0	orr	x8, x8, #0x3
00000000000209f4	str	x8, [sp, #0x8]
00000000000209f8	adrp	x0, 76 ; 0x6c000
00000000000209fc	add	x0, x0, #0xbb0
0000000000020a00	ldr	x8, [x0]
0000000000020a04	blr	x8
0000000000020a08	ldr	x21, [x0]
0000000000020a0c	ldr	x8, [x21, #0x110]
0000000000020a10	add	x9, sp, #0x20
0000000000020a14	str	x9, [x21, #0x110]
0000000000020a18	mov	x9, #0xa00000000
0000000000020a1c	stp	x8, x9, [sp, #0x28]
0000000000020a20	adr	x8, #0x66023
0000000000020a24	nop
0000000000020a28	ldarb	w8, [x8]
0000000000020a2c	tbz	w8, #0x0, 0x20a34
0000000000020a30	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020a34	tbnz	w20, #0x1f, 0x20a64
0000000000020a38	cmp	w20, w19
0000000000020a3c	b.ge	0x20a64
0000000000020a40	ldr	x8, [sp, #0x28]
0000000000020a44	str	x8, [x21, #0x110]
0000000000020a48	ldp	x29, x30, [sp, #0xb0]
0000000000020a4c	ldp	x20, x19, [sp, #0xa0]
0000000000020a50	ldp	x22, x21, [sp, #0x90]
0000000000020a54	ldp	x24, x23, [sp, #0x80]
0000000000020a58	ldp	x26, x25, [sp, #0x70]
0000000000020a5c	add	sp, sp, #0xc0
0000000000020a60	ret
0000000000020a64	add	x8, sp, #0x20
0000000000020a68	mov	x26, x21
0000000000020a6c	add	x21, x8, #0x40
0000000000020a70	add	x22, x8, #0x38
0000000000020a74	add	x23, x8, #0x30
0000000000020a78	add	x24, x8, #0x28
0000000000020a7c	add	x25, x8, #0x20
0000000000020a80	add	x8, sp, #0x8
0000000000020a84	str	x8, [sp, #0x38]
0000000000020a88	add	x0, sp, #0x8
0000000000020a8c	mov	w1, #0xa
0000000000020a90	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000020a94	adr	x1, #0x4525c
0000000000020a98	nop
0000000000020a9c	add	x0, sp, #0x8
0000000000020aa0	mov	x2, x25
0000000000020aa4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000020aa8	add	x0, sp, #0x8
0000000000020aac	mov	x1, x20
0000000000020ab0	mov	x2, x24
0000000000020ab4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000020ab8	adr	x1, #0x44ad8
0000000000020abc	nop
0000000000020ac0	add	x0, sp, #0x8
0000000000020ac4	mov	x2, x23
0000000000020ac8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000020acc	add	x0, sp, #0x8
0000000000020ad0	mov	x1, x19
0000000000020ad4	mov	x2, x22
0000000000020ad8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000020adc	add	x0, sp, #0x8
0000000000020ae0	mov	x1, x21
0000000000020ae4	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000020ae8	mov	x19, x0
0000000000020aec	ldr	x8, [x26, #0x118]
0000000000020af0	add	x0, x8, #0x70
0000000000020af4	mov	w1, #0x38
0000000000020af8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000020afc	mov	x20, x0
0000000000020b00	adr	x8, #0x380e0
0000000000020b04	nop
0000000000020b08	str	x8, [x20, #0x10]!
0000000000020b0c	stur	xzr, [x20, #-0x8]
0000000000020b10	str	x20, [sp, #0x68]
0000000000020b14	mov	x0, x20
0000000000020b18	mov	x1, x19
0000000000020b1c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000020b20	mov	x0, x20
0000000000020b24	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}:
0000000000020b28	sub	sp, sp, #0xc0
0000000000020b2c	stp	x26, x25, [sp, #0x70]
0000000000020b30	stp	x24, x23, [sp, #0x80]
0000000000020b34	stp	x22, x21, [sp, #0x90]
0000000000020b38	stp	x20, x19, [sp, #0xa0]
0000000000020b3c	stp	x29, x30, [sp, #0xb0]
0000000000020b40	add	x29, sp, #0xb0
0000000000020b44	mov	x19, x1
0000000000020b48	mov	x20, x0
0000000000020b4c	movi.16b	v0, #0x0
0000000000020b50	stp	q0, q0, [sp, #0x20]
0000000000020b54	stp	q0, q0, [sp, #0x50]
0000000000020b58	str	q0, [sp, #0x40]
0000000000020b5c	stp	xzr, xzr, [sp, #0x10]
0000000000020b60	adr	x8, #0x3b830
0000000000020b64	nop
0000000000020b68	orr	x8, x8, #0x3
0000000000020b6c	str	x8, [sp, #0x8]
0000000000020b70	adrp	x0, 76 ; 0x6c000
0000000000020b74	add	x0, x0, #0xbb0
0000000000020b78	ldr	x8, [x0]
0000000000020b7c	blr	x8
0000000000020b80	ldr	x21, [x0]
0000000000020b84	ldr	x8, [x21, #0x110]
0000000000020b88	add	x9, sp, #0x20
0000000000020b8c	str	x9, [x21, #0x110]
0000000000020b90	mov	x9, #0xa00000000
0000000000020b94	stp	x8, x9, [sp, #0x28]
0000000000020b98	adr	x8, #0x65eab
0000000000020b9c	nop
0000000000020ba0	ldarb	w8, [x8]
0000000000020ba4	tbz	w8, #0x0, 0x20bac
0000000000020ba8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020bac	tbnz	w20, #0x1f, 0x20bdc
0000000000020bb0	cmp	w20, w19
0000000000020bb4	b.gt	0x20bdc
0000000000020bb8	ldr	x8, [sp, #0x28]
0000000000020bbc	str	x8, [x21, #0x110]
0000000000020bc0	ldp	x29, x30, [sp, #0xb0]
0000000000020bc4	ldp	x20, x19, [sp, #0xa0]
0000000000020bc8	ldp	x22, x21, [sp, #0x90]
0000000000020bcc	ldp	x24, x23, [sp, #0x80]
0000000000020bd0	ldp	x26, x25, [sp, #0x70]
0000000000020bd4	add	sp, sp, #0xc0
0000000000020bd8	ret
0000000000020bdc	add	x8, sp, #0x20
0000000000020be0	mov	x26, x21
0000000000020be4	add	x21, x8, #0x40
0000000000020be8	add	x22, x8, #0x38
0000000000020bec	add	x23, x8, #0x30
0000000000020bf0	add	x24, x8, #0x28
0000000000020bf4	add	x25, x8, #0x20
0000000000020bf8	add	x8, sp, #0x8
0000000000020bfc	str	x8, [sp, #0x38]
0000000000020c00	add	x0, sp, #0x8
0000000000020c04	mov	w1, #0xa
0000000000020c08	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000020c0c	adr	x1, #0x450e4
0000000000020c10	nop
0000000000020c14	add	x0, sp, #0x8
0000000000020c18	mov	x2, x25
0000000000020c1c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000020c20	add	x0, sp, #0x8
0000000000020c24	mov	x1, x20
0000000000020c28	mov	x2, x24
0000000000020c2c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000020c30	adr	x1, #0x44960
0000000000020c34	nop
0000000000020c38	add	x0, sp, #0x8
0000000000020c3c	mov	x2, x23
0000000000020c40	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000020c44	add	x0, sp, #0x8
0000000000020c48	mov	x1, x19
0000000000020c4c	mov	x2, x22
0000000000020c50	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000020c54	add	x0, sp, #0x8
0000000000020c58	mov	x1, x21
0000000000020c5c	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000020c60	mov	x19, x0
0000000000020c64	ldr	x8, [x26, #0x118]
0000000000020c68	add	x0, x8, #0x70
0000000000020c6c	mov	w1, #0x38
0000000000020c70	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000020c74	mov	x20, x0
0000000000020c78	adr	x8, #0x37f68
0000000000020c7c	nop
0000000000020c80	str	x8, [x20, #0x10]!
0000000000020c84	stur	xzr, [x20, #-0x8]
0000000000020c88	str	x20, [sp, #0x68]
0000000000020c8c	mov	x0, x20
0000000000020c90	mov	x1, x19
0000000000020c94	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000020c98	mov	x0, x20
0000000000020c9c	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.Companion#checkRangeIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}:
0000000000020ca0	sub	sp, sp, #0x140
0000000000020ca4	stp	x28, x27, [sp, #0xe0]
0000000000020ca8	stp	x26, x25, [sp, #0xf0]
0000000000020cac	stp	x24, x23, [sp, #0x100]
0000000000020cb0	stp	x22, x21, [sp, #0x110]
0000000000020cb4	stp	x20, x19, [sp, #0x120]
0000000000020cb8	stp	x29, x30, [sp, #0x130]
0000000000020cbc	add	x29, sp, #0x130
0000000000020cc0	mov	x21, x2
0000000000020cc4	mov	x19, x1
0000000000020cc8	mov	x20, x0
0000000000020ccc	str	xzr, [sp, #0xd0]
0000000000020cd0	movi.16b	v0, #0x0
0000000000020cd4	stp	q0, q0, [sp, #0xb0]
0000000000020cd8	stp	q0, q0, [sp, #0x90]
0000000000020cdc	stp	q0, q0, [sp, #0x70]
0000000000020ce0	stp	q0, q0, [sp, #0x50]
0000000000020ce4	str	q0, [sp, #0x40]
0000000000020ce8	stp	xzr, xzr, [sp, #0x30]
0000000000020cec	adr	x8, #0x3b6a4
0000000000020cf0	nop
0000000000020cf4	orr	x8, x8, #0x3
0000000000020cf8	stp	xzr, x8, [sp, #0x20]
0000000000020cfc	stp	x8, xzr, [sp, #0x10]
0000000000020d00	adrp	x0, 76 ; 0x6c000
0000000000020d04	add	x0, x0, #0xbb0
0000000000020d08	ldr	x8, [x0]
0000000000020d0c	blr	x8
0000000000020d10	ldr	x22, [x0]
0000000000020d14	ldr	x8, [x22, #0x110]
0000000000020d18	add	x9, sp, #0x40
0000000000020d1c	str	x9, [x22, #0x110]
0000000000020d20	mov	x9, #0x1300000000
0000000000020d24	stp	x8, x9, [sp, #0x48]
0000000000020d28	adr	x8, #0x65d1b
0000000000020d2c	nop
0000000000020d30	ldarb	w8, [x8]
0000000000020d34	tbz	w8, #0x0, 0x20d3c
0000000000020d38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020d3c	tbnz	w20, #0x1f, 0x20d78
0000000000020d40	cmp	w19, w21
0000000000020d44	b.gt	0x20d78
0000000000020d48	cmp	w20, w19
0000000000020d4c	b.gt	0x20e58
0000000000020d50	ldr	x8, [sp, #0x48]
0000000000020d54	str	x8, [x22, #0x110]
0000000000020d58	ldp	x29, x30, [sp, #0x130]
0000000000020d5c	ldp	x20, x19, [sp, #0x120]
0000000000020d60	ldp	x22, x21, [sp, #0x110]
0000000000020d64	ldp	x24, x23, [sp, #0x100]
0000000000020d68	ldp	x26, x25, [sp, #0xf0]
0000000000020d6c	ldp	x28, x27, [sp, #0xe0]
0000000000020d70	add	sp, sp, #0x140
0000000000020d74	ret
0000000000020d78	add	x8, sp, #0x40
0000000000020d7c	add	x9, x8, #0x50
0000000000020d80	str	x9, [sp, #0x8]
0000000000020d84	add	x23, x8, #0x48
0000000000020d88	add	x24, x8, #0x40
0000000000020d8c	add	x25, x8, #0x38
0000000000020d90	add	x26, x8, #0x30
0000000000020d94	add	x27, x8, #0x28
0000000000020d98	add	x9, sp, #0x28
0000000000020d9c	str	x9, [sp, #0x58]
0000000000020da0	add	x28, x8, #0x20
0000000000020da4	add	x0, sp, #0x28
0000000000020da8	mov	w1, #0xa
0000000000020dac	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000020db0	adr	x1, #0x44780
0000000000020db4	nop
0000000000020db8	add	x0, sp, #0x28
0000000000020dbc	mov	x2, x28
0000000000020dc0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000020dc4	add	x0, sp, #0x28
0000000000020dc8	mov	x1, x20
0000000000020dcc	mov	x2, x27
0000000000020dd0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000020dd4	adr	x1, #0x4478c
0000000000020dd8	nop
0000000000020ddc	add	x0, sp, #0x28
0000000000020de0	mov	x2, x26
0000000000020de4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000020de8	add	x0, sp, #0x28
0000000000020dec	mov	x1, x19
0000000000020df0	mov	x2, x25
0000000000020df4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000020df8	adr	x1, #0x44798
0000000000020dfc	nop
0000000000020e00	add	x0, sp, #0x28
0000000000020e04	mov	x2, x24
0000000000020e08	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000020e0c	add	x0, sp, #0x28
0000000000020e10	mov	x1, x21
0000000000020e14	mov	x2, x23
0000000000020e18	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000020e1c	add	x0, sp, #0x28
0000000000020e20	ldr	x1, [sp, #0x8]
0000000000020e24	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000020e28	mov	x19, x0
0000000000020e2c	ldr	x8, [x22, #0x118]
0000000000020e30	add	x0, x8, #0x70
0000000000020e34	mov	w1, #0x38
0000000000020e38	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000020e3c	mov	x20, x0
0000000000020e40	adr	x8, #0x37da0
0000000000020e44	nop
0000000000020e48	str	x8, [x20, #0x10]!
0000000000020e4c	stur	xzr, [x20, #-0x8]
0000000000020e50	str	x20, [sp, #0x98]
0000000000020e54	b	0x20f04
0000000000020e58	add	x8, sp, #0x40
0000000000020e5c	add	x21, x8, #0x88
0000000000020e60	add	x26, x8, #0x80
0000000000020e64	add	x23, x8, #0x78
0000000000020e68	add	x24, x8, #0x70
0000000000020e6c	add	x25, x8, #0x68
0000000000020e70	add	x8, sp, #0x10
0000000000020e74	str	x8, [sp, #0xa0]
0000000000020e78	add	x0, sp, #0x10
0000000000020e7c	mov	w1, #0xa
0000000000020e80	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000020e84	adr	x1, #0x446ac
0000000000020e88	nop
0000000000020e8c	add	x0, sp, #0x10
0000000000020e90	mov	x2, x25
0000000000020e94	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000020e98	add	x0, sp, #0x10
0000000000020e9c	mov	x1, x20
0000000000020ea0	mov	x2, x24
0000000000020ea4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000020ea8	adr	x1, #0x44708
0000000000020eac	nop
0000000000020eb0	add	x0, sp, #0x10
0000000000020eb4	mov	x2, x23
0000000000020eb8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000020ebc	add	x0, sp, #0x10
0000000000020ec0	mov	x1, x19
0000000000020ec4	mov	x2, x26
0000000000020ec8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000020ecc	add	x0, sp, #0x10
0000000000020ed0	mov	x1, x21
0000000000020ed4	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000020ed8	mov	x19, x0
0000000000020edc	ldr	x8, [x22, #0x118]
0000000000020ee0	add	x0, x8, #0x70
0000000000020ee4	mov	w1, #0x38
0000000000020ee8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000020eec	mov	x20, x0
0000000000020ef0	adr	x8, #0x37d90
0000000000020ef4	nop
0000000000020ef8	str	x8, [x20, #0x10]!
0000000000020efc	stur	xzr, [x20, #-0x8]
0000000000020f00	str	x20, [sp, #0xd0]
0000000000020f04	mov	x0, x20
0000000000020f08	mov	x1, x19
0000000000020f0c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000020f10	mov	x0, x20
0000000000020f14	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.Companion#orderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int:
0000000000020f18	sub	sp, sp, #0x70
0000000000020f1c	stp	x24, x23, [sp, #0x30]
0000000000020f20	stp	x22, x21, [sp, #0x40]
0000000000020f24	stp	x20, x19, [sp, #0x50]
0000000000020f28	stp	x29, x30, [sp, #0x60]
0000000000020f2c	add	x29, sp, #0x60
0000000000020f30	mov	x20, x0
0000000000020f34	movi.16b	v0, #0x0
0000000000020f38	stp	q0, q0, [sp]
0000000000020f3c	str	xzr, [sp, #0x20]
0000000000020f40	mov	x19, sp
0000000000020f44	add	x21, x19, #0x18
0000000000020f48	adrp	x0, 76 ; 0x6c000
0000000000020f4c	add	x0, x0, #0xbb0
0000000000020f50	ldr	x8, [x0]
0000000000020f54	blr	x8
0000000000020f58	ldr	x22, [x0]
0000000000020f5c	ldr	x8, [x22, #0x110]
0000000000020f60	str	x19, [x22, #0x110]
0000000000020f64	mov	x9, #0x500000000
0000000000020f68	stp	x8, x9, [sp, #0x8]
0000000000020f6c	adr	x23, #0x65ad7
0000000000020f70	nop
0000000000020f74	ldarb	w8, [x23]
0000000000020f78	tbz	w8, #0x0, 0x20f80
0000000000020f7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020f80	add	x19, x19, #0x20
0000000000020f84	ldr	x8, [x20]
0000000000020f88	and	x8, x8, #0xfffffffffffffffc
0000000000020f8c	ldr	x8, [x8]
0000000000020f90	ldr	w9, [x8, #0x3c]
0000000000020f94	ldr	x8, [x8, #0x40]
0000000000020f98	tbnz	w9, #0x1f, 0x20fa8
0000000000020f9c	mov	w10, #0x12
0000000000020fa0	and	x9, x9, x10
0000000000020fa4	b	0x2102c
0000000000020fa8	neg	w10, w9
0000000000020fac	mvn	w9, w9
0000000000020fb0	cmp	w10, #0x9
0000000000020fb4	b.ge	0x20fec
0000000000020fb8	cmp	w10, #0x2
0000000000020fbc	b.lt	0x21020
0000000000020fc0	mov	x10, #0x0
0000000000020fc4	mov	x11, x8
0000000000020fc8	ldr	w12, [x11]
0000000000020fcc	cmp	w12, #0x11
0000000000020fd0	b.gt	0x21028
0000000000020fd4	add	x10, x10, #0x1
0000000000020fd8	add	x11, x11, #0x10
0000000000020fdc	cmp	x9, x10
0000000000020fe0	b.ne	0x20fc8
0000000000020fe4	mov	x10, x9
0000000000020fe8	b	0x21028
0000000000020fec	mov	w10, #0x0
0000000000020ff0	add	w11, w9, w10
0000000000020ff4	cmp	w11, #0x0
0000000000020ff8	cinc	w11, w11, lt
0000000000020ffc	asr	w11, w11, #1
0000000000021000	sbfiz	x12, x11, #4, #32
0000000000021004	ldr	w12, [x8, x12]
0000000000021008	cmp	w12, #0x12
000000000002100c	csinc	w10, w10, w11, ge
0000000000021010	csel	w9, w9, w11, lt
0000000000021014	cmp	w10, w9
0000000000021018	b.lt	0x20ff0
000000000002101c	b	0x21028
0000000000021020	mov	w10, #0x0
0000000000021024	b	0x21028
0000000000021028	sxtw	x9, w10
000000000002102c	add	x8, x8, x9, lsl #4
0000000000021030	ldr	x8, [x8, #0x8]
0000000000021034	ldr	x8, [x8, #0x20]
0000000000021038	mov	x0, x20
000000000002103c	mov	x1, x21
0000000000021040	blr	x8
0000000000021044	mov	x20, x0
0000000000021048	mov	w21, #0x1
000000000002104c	mov	w24, #0xa0
0000000000021050	b	0x21058
0000000000021054	add	w21, w21, w0
0000000000021058	ldr	x8, [x20]
000000000002105c	and	x8, x8, #0xfffffffffffffffc
0000000000021060	ldr	x8, [x8]
0000000000021064	ldr	w9, [x8, #0x3c]
0000000000021068	ldr	x8, [x8, #0x40]
000000000002106c	tbnz	w9, #0x1f, 0x21090
0000000000021070	and	x9, x9, x24
0000000000021074	add	x8, x8, x9, lsl #4
0000000000021078	ldr	x8, [x8, #0x8]
000000000002107c	ldr	x8, [x8]
0000000000021080	mov	x0, x20
0000000000021084	blr	x8
0000000000021088	tbnz	w0, #0x0, 0x2112c
000000000002108c	b	0x21218
0000000000021090	neg	w10, w9
0000000000021094	mvn	w9, w9
0000000000021098	cmp	w10, #0x9
000000000002109c	b.ge	0x210d4
00000000000210a0	cmp	w10, #0x2
00000000000210a4	b.lt	0x21108
00000000000210a8	mov	x10, #0x0
00000000000210ac	mov	x11, x8
00000000000210b0	ldr	w12, [x11]
00000000000210b4	cmp	w12, #0x9f
00000000000210b8	b.gt	0x21110
00000000000210bc	add	x10, x10, #0x1
00000000000210c0	add	x11, x11, #0x10
00000000000210c4	cmp	x9, x10
00000000000210c8	b.ne	0x210b0
00000000000210cc	mov	x10, x9
00000000000210d0	b	0x21110
00000000000210d4	mov	w10, #0x0
00000000000210d8	add	w11, w9, w10
00000000000210dc	cmp	w11, #0x0
00000000000210e0	cinc	w11, w11, lt
00000000000210e4	asr	w11, w11, #1
00000000000210e8	sbfiz	x12, x11, #4, #32
00000000000210ec	ldr	w12, [x8, x12]
00000000000210f0	cmp	w12, #0xa0
00000000000210f4	csinc	w10, w10, w11, ge
00000000000210f8	csel	w9, w9, w11, lt
00000000000210fc	cmp	w10, w9
0000000000021100	b.lt	0x210d8
0000000000021104	b	0x21110
0000000000021108	mov	w10, #0x0
000000000002110c	b	0x21110
0000000000021110	sxtw	x9, w10
0000000000021114	add	x8, x8, x9, lsl #4
0000000000021118	ldr	x8, [x8, #0x8]
000000000002111c	ldr	x8, [x8]
0000000000021120	mov	x0, x20
0000000000021124	blr	x8
0000000000021128	tbz	w0, #0x0, 0x21218
000000000002112c	ldarb	w8, [x23]
0000000000021130	tbz	w8, #0x0, 0x21138
0000000000021134	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021138	ldr	x8, [x20]
000000000002113c	and	x8, x8, #0xfffffffffffffffc
0000000000021140	ldr	x8, [x8]
0000000000021144	ldr	w9, [x8, #0x3c]
0000000000021148	ldr	x8, [x8, #0x40]
000000000002114c	tbnz	w9, #0x1f, 0x21158
0000000000021150	and	x9, x9, x24
0000000000021154	b	0x211dc
0000000000021158	neg	w10, w9
000000000002115c	mvn	w9, w9
0000000000021160	cmp	w10, #0x9
0000000000021164	b.ge	0x2119c
0000000000021168	cmp	w10, #0x2
000000000002116c	b.lt	0x211d0
0000000000021170	mov	x10, #0x0
0000000000021174	mov	x11, x8
0000000000021178	ldr	w12, [x11]
000000000002117c	cmp	w12, #0x9f
0000000000021180	b.gt	0x211d8
0000000000021184	add	x10, x10, #0x1
0000000000021188	add	x11, x11, #0x10
000000000002118c	cmp	x9, x10
0000000000021190	b.ne	0x21178
0000000000021194	mov	x10, x9
0000000000021198	b	0x211d8
000000000002119c	mov	w10, #0x0
00000000000211a0	add	w11, w9, w10
00000000000211a4	cmp	w11, #0x0
00000000000211a8	cinc	w11, w11, lt
00000000000211ac	asr	w11, w11, #1
00000000000211b0	sbfiz	x12, x11, #4, #32
00000000000211b4	ldr	w12, [x8, x12]
00000000000211b8	cmp	w12, #0xa0
00000000000211bc	csinc	w10, w10, w11, ge
00000000000211c0	csel	w9, w9, w11, lt
00000000000211c4	cmp	w10, w9
00000000000211c8	b.lt	0x211a0
00000000000211cc	b	0x211d8
00000000000211d0	mov	w10, #0x0
00000000000211d4	b	0x211d8
00000000000211d8	sxtw	x9, w10
00000000000211dc	add	x8, x8, x9, lsl #4
00000000000211e0	ldr	x8, [x8, #0x8]
00000000000211e4	ldr	x8, [x8, #0x8]
00000000000211e8	mov	x0, x20
00000000000211ec	mov	x1, x19
00000000000211f0	blr	x8
00000000000211f4	lsl	w8, w21, #5
00000000000211f8	sub	w21, w8, w21
00000000000211fc	cbz	x0, 0x21054
0000000000021200	ldr	x8, [x0]
0000000000021204	and	x8, x8, #0xfffffffffffffffc
0000000000021208	ldr	x8, [x8]
000000000002120c	ldr	x8, [x8, #0x78]
0000000000021210	blr	x8
0000000000021214	b	0x21054
0000000000021218	ldr	x8, [sp, #0x8]
000000000002121c	str	x8, [x22, #0x110]
0000000000021220	mov	x0, x21
0000000000021224	ldp	x29, x30, [sp, #0x60]
0000000000021228	ldp	x20, x19, [sp, #0x50]
000000000002122c	ldp	x22, x21, [sp, #0x40]
0000000000021230	ldp	x24, x23, [sp, #0x30]
0000000000021234	add	sp, sp, #0x70
0000000000021238	ret
_kfun:kotlin.collections.AbstractList.Companion#orderedEquals(kotlin.collections.Collection<*>;kotlin.collections.Collection<*>){}kotlin.Boolean:
000000000002123c	sub	sp, sp, #0x90
0000000000021240	stp	x26, x25, [sp, #0x40]
0000000000021244	stp	x24, x23, [sp, #0x50]
0000000000021248	stp	x22, x21, [sp, #0x60]
000000000002124c	stp	x20, x19, [sp, #0x70]
0000000000021250	stp	x29, x30, [sp, #0x80]
0000000000021254	add	x29, sp, #0x80
0000000000021258	mov	x22, x1
000000000002125c	mov	x21, x0
0000000000021260	movi.16b	v0, #0x0
0000000000021264	stp	q0, q0, [sp]
0000000000021268	str	xzr, [sp, #0x30]
000000000002126c	str	q0, [sp, #0x20]
0000000000021270	mov	x20, sp
0000000000021274	adrp	x0, 75 ; 0x6c000
0000000000021278	add	x0, x0, #0xbb0
000000000002127c	ldr	x8, [x0]
0000000000021280	blr	x8
0000000000021284	ldr	x24, [x0]
0000000000021288	ldr	x8, [x24, #0x110]
000000000002128c	str	x20, [x24, #0x110]
0000000000021290	mov	x9, #0x700000000
0000000000021294	stp	x8, x9, [sp, #0x8]
0000000000021298	adr	x25, #0x657ab
000000000002129c	nop
00000000000212a0	ldarb	w8, [x25]
00000000000212a4	tbz	w8, #0x0, 0x212ac
00000000000212a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000212ac	ldr	x8, [x21]
00000000000212b0	and	x8, x8, #0xfffffffffffffffc
00000000000212b4	ldr	x8, [x8]
00000000000212b8	ldr	w9, [x8, #0x3c]
00000000000212bc	ldr	x8, [x8, #0x40]
00000000000212c0	tbnz	w9, #0x1f, 0x212d0
00000000000212c4	mov	w10, #0x12
00000000000212c8	and	x9, x9, x10
00000000000212cc	b	0x21354
00000000000212d0	neg	w10, w9
00000000000212d4	mvn	w9, w9
00000000000212d8	cmp	w10, #0x9
00000000000212dc	b.ge	0x21314
00000000000212e0	cmp	w10, #0x2
00000000000212e4	b.lt	0x21348
00000000000212e8	mov	x10, #0x0
00000000000212ec	mov	x11, x8
00000000000212f0	ldr	w12, [x11]
00000000000212f4	cmp	w12, #0x11
00000000000212f8	b.gt	0x21350
00000000000212fc	add	x10, x10, #0x1
0000000000021300	add	x11, x11, #0x10
0000000000021304	cmp	x9, x10
0000000000021308	b.ne	0x212f0
000000000002130c	mov	x10, x9
0000000000021310	b	0x21350
0000000000021314	mov	w10, #0x0
0000000000021318	add	w11, w9, w10
000000000002131c	cmp	w11, #0x0
0000000000021320	cinc	w11, w11, lt
0000000000021324	asr	w11, w11, #1
0000000000021328	sbfiz	x12, x11, #4, #32
000000000002132c	ldr	w12, [x8, x12]
0000000000021330	cmp	w12, #0x12
0000000000021334	csinc	w10, w10, w11, ge
0000000000021338	csel	w9, w9, w11, lt
000000000002133c	cmp	w10, w9
0000000000021340	b.lt	0x21318
0000000000021344	b	0x21350
0000000000021348	mov	w10, #0x0
000000000002134c	b	0x21350
0000000000021350	sxtw	x9, w10
0000000000021354	add	x8, x8, x9, lsl #4
0000000000021358	ldr	x8, [x8, #0x8]
000000000002135c	ldr	x8, [x8]
0000000000021360	mov	x0, x21
0000000000021364	blr	x8
0000000000021368	mov	x19, x0
000000000002136c	ldr	x8, [x22]
0000000000021370	and	x8, x8, #0xfffffffffffffffc
0000000000021374	ldr	x8, [x8]
0000000000021378	ldr	w9, [x8, #0x3c]
000000000002137c	ldr	x8, [x8, #0x40]
0000000000021380	tbnz	w9, #0x1f, 0x21390
0000000000021384	mov	w10, #0x12
0000000000021388	and	x9, x9, x10
000000000002138c	b	0x21414
0000000000021390	neg	w10, w9
0000000000021394	mvn	w9, w9
0000000000021398	cmp	w10, #0x9
000000000002139c	b.ge	0x213d4
00000000000213a0	cmp	w10, #0x2
00000000000213a4	b.lt	0x21408
00000000000213a8	mov	x10, #0x0
00000000000213ac	mov	x11, x8
00000000000213b0	ldr	w12, [x11]
00000000000213b4	cmp	w12, #0x11
00000000000213b8	b.gt	0x21410
00000000000213bc	add	x10, x10, #0x1
00000000000213c0	add	x11, x11, #0x10
00000000000213c4	cmp	x9, x10
00000000000213c8	b.ne	0x213b0
00000000000213cc	mov	x10, x9
00000000000213d0	b	0x21410
00000000000213d4	mov	w10, #0x0
00000000000213d8	add	w11, w9, w10
00000000000213dc	cmp	w11, #0x0
00000000000213e0	cinc	w11, w11, lt
00000000000213e4	asr	w11, w11, #1
00000000000213e8	sbfiz	x12, x11, #4, #32
00000000000213ec	ldr	w12, [x8, x12]
00000000000213f0	cmp	w12, #0x12
00000000000213f4	csinc	w10, w10, w11, ge
00000000000213f8	csel	w9, w9, w11, lt
00000000000213fc	cmp	w10, w9
0000000000021400	b.lt	0x213d8
0000000000021404	b	0x21410
0000000000021408	mov	w10, #0x0
000000000002140c	b	0x21410
0000000000021410	sxtw	x9, w10
0000000000021414	add	x8, x8, x9, lsl #4
0000000000021418	ldr	x8, [x8, #0x8]
000000000002141c	ldr	x8, [x8]
0000000000021420	mov	x0, x22
0000000000021424	blr	x8
0000000000021428	cmp	w19, w0
000000000002142c	b.ne	0x21850
0000000000021430	add	x23, x20, #0x20
0000000000021434	add	x1, x20, #0x18
0000000000021438	ldr	x8, [x22]
000000000002143c	and	x8, x8, #0xfffffffffffffffc
0000000000021440	ldr	x8, [x8]
0000000000021444	ldr	w9, [x8, #0x3c]
0000000000021448	ldr	x8, [x8, #0x40]
000000000002144c	tbnz	w9, #0x1f, 0x2145c
0000000000021450	mov	w10, #0x12
0000000000021454	and	x9, x9, x10
0000000000021458	b	0x214e0
000000000002145c	neg	w10, w9
0000000000021460	mvn	w9, w9
0000000000021464	cmp	w10, #0x9
0000000000021468	b.ge	0x214a0
000000000002146c	cmp	w10, #0x2
0000000000021470	b.lt	0x214d4
0000000000021474	mov	x10, #0x0
0000000000021478	mov	x11, x8
000000000002147c	ldr	w12, [x11]
0000000000021480	cmp	w12, #0x11
0000000000021484	b.gt	0x214dc
0000000000021488	add	x10, x10, #0x1
000000000002148c	add	x11, x11, #0x10
0000000000021490	cmp	x9, x10
0000000000021494	b.ne	0x2147c
0000000000021498	mov	x10, x9
000000000002149c	b	0x214dc
00000000000214a0	mov	w10, #0x0
00000000000214a4	add	w11, w9, w10
00000000000214a8	cmp	w11, #0x0
00000000000214ac	cinc	w11, w11, lt
00000000000214b0	asr	w11, w11, #1
00000000000214b4	sbfiz	x12, x11, #4, #32
00000000000214b8	ldr	w12, [x8, x12]
00000000000214bc	cmp	w12, #0x12
00000000000214c0	csinc	w10, w10, w11, ge
00000000000214c4	csel	w9, w9, w11, lt
00000000000214c8	cmp	w10, w9
00000000000214cc	b.lt	0x214a4
00000000000214d0	b	0x214dc
00000000000214d4	mov	w10, #0x0
00000000000214d8	b	0x214dc
00000000000214dc	sxtw	x9, w10
00000000000214e0	add	x19, x20, #0x30
00000000000214e4	add	x20, x20, #0x28
00000000000214e8	add	x8, x8, x9, lsl #4
00000000000214ec	ldr	x8, [x8, #0x8]
00000000000214f0	ldr	x8, [x8, #0x20]
00000000000214f4	mov	x0, x22
00000000000214f8	blr	x8
00000000000214fc	mov	x22, x0
0000000000021500	ldr	x8, [x21]
0000000000021504	and	x8, x8, #0xfffffffffffffffc
0000000000021508	ldr	x8, [x8]
000000000002150c	ldr	w9, [x8, #0x3c]
0000000000021510	ldr	x8, [x8, #0x40]
0000000000021514	tbnz	w9, #0x1f, 0x21524
0000000000021518	mov	w10, #0x12
000000000002151c	and	x9, x9, x10
0000000000021520	b	0x215a8
0000000000021524	neg	w10, w9
0000000000021528	mvn	w9, w9
000000000002152c	cmp	w10, #0x9
0000000000021530	b.ge	0x21568
0000000000021534	cmp	w10, #0x2
0000000000021538	b.lt	0x2159c
000000000002153c	mov	x10, #0x0
0000000000021540	mov	x11, x8
0000000000021544	ldr	w12, [x11]
0000000000021548	cmp	w12, #0x11
000000000002154c	b.gt	0x215a4
0000000000021550	add	x10, x10, #0x1
0000000000021554	add	x11, x11, #0x10
0000000000021558	cmp	x9, x10
000000000002155c	b.ne	0x21544
0000000000021560	mov	x10, x9
0000000000021564	b	0x215a4
0000000000021568	mov	w10, #0x0
000000000002156c	add	w11, w9, w10
0000000000021570	cmp	w11, #0x0
0000000000021574	cinc	w11, w11, lt
0000000000021578	asr	w11, w11, #1
000000000002157c	sbfiz	x12, x11, #4, #32
0000000000021580	ldr	w12, [x8, x12]
0000000000021584	cmp	w12, #0x12
0000000000021588	csinc	w10, w10, w11, ge
000000000002158c	csel	w9, w9, w11, lt
0000000000021590	cmp	w10, w9
0000000000021594	b.lt	0x2156c
0000000000021598	b	0x215a4
000000000002159c	mov	w10, #0x0
00000000000215a0	b	0x215a4
00000000000215a4	sxtw	x9, w10
00000000000215a8	add	x8, x8, x9, lsl #4
00000000000215ac	ldr	x8, [x8, #0x8]
00000000000215b0	ldr	x8, [x8, #0x20]
00000000000215b4	mov	x0, x21
00000000000215b8	mov	x1, x23
00000000000215bc	blr	x8
00000000000215c0	mov	x21, x0
00000000000215c4	mov	w26, #0xa0
00000000000215c8	b	0x215d0
00000000000215cc	cbnz	x1, 0x21850
00000000000215d0	ldr	x8, [x21]
00000000000215d4	and	x8, x8, #0xfffffffffffffffc
00000000000215d8	ldr	x8, [x8]
00000000000215dc	ldr	w9, [x8, #0x3c]
00000000000215e0	ldr	x8, [x8, #0x40]
00000000000215e4	tbnz	w9, #0x1f, 0x21608
00000000000215e8	and	x9, x9, x26
00000000000215ec	add	x8, x8, x9, lsl #4
00000000000215f0	ldr	x8, [x8, #0x8]
00000000000215f4	ldr	x8, [x8]
00000000000215f8	mov	x0, x21
00000000000215fc	blr	x8
0000000000021600	tbnz	w0, #0x0, 0x216a4
0000000000021604	b	0x21858
0000000000021608	neg	w10, w9
000000000002160c	mvn	w9, w9
0000000000021610	cmp	w10, #0x9
0000000000021614	b.ge	0x2164c
0000000000021618	cmp	w10, #0x2
000000000002161c	b.lt	0x21680
0000000000021620	mov	x10, #0x0
0000000000021624	mov	x11, x8
0000000000021628	ldr	w12, [x11]
000000000002162c	cmp	w12, #0x9f
0000000000021630	b.gt	0x21688
0000000000021634	add	x10, x10, #0x1
0000000000021638	add	x11, x11, #0x10
000000000002163c	cmp	x9, x10
0000000000021640	b.ne	0x21628
0000000000021644	mov	x10, x9
0000000000021648	b	0x21688
000000000002164c	mov	w10, #0x0
0000000000021650	add	w11, w9, w10
0000000000021654	cmp	w11, #0x0
0000000000021658	cinc	w11, w11, lt
000000000002165c	asr	w11, w11, #1
0000000000021660	sbfiz	x12, x11, #4, #32
0000000000021664	ldr	w12, [x8, x12]
0000000000021668	cmp	w12, #0xa0
000000000002166c	csinc	w10, w10, w11, ge
0000000000021670	csel	w9, w9, w11, lt
0000000000021674	cmp	w10, w9
0000000000021678	b.lt	0x21650
000000000002167c	b	0x21688
0000000000021680	mov	w10, #0x0
0000000000021684	b	0x21688
0000000000021688	sxtw	x9, w10
000000000002168c	add	x8, x8, x9, lsl #4
0000000000021690	ldr	x8, [x8, #0x8]
0000000000021694	ldr	x8, [x8]
0000000000021698	mov	x0, x21
000000000002169c	blr	x8
00000000000216a0	tbz	w0, #0x0, 0x21858
00000000000216a4	ldarb	w8, [x25]
00000000000216a8	tbz	w8, #0x0, 0x216b0
00000000000216ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000216b0	ldr	x8, [x21]
00000000000216b4	and	x8, x8, #0xfffffffffffffffc
00000000000216b8	ldr	x8, [x8]
00000000000216bc	ldr	w9, [x8, #0x3c]
00000000000216c0	ldr	x8, [x8, #0x40]
00000000000216c4	tbnz	w9, #0x1f, 0x216d0
00000000000216c8	and	x9, x9, x26
00000000000216cc	b	0x21754
00000000000216d0	neg	w10, w9
00000000000216d4	mvn	w9, w9
00000000000216d8	cmp	w10, #0x9
00000000000216dc	b.ge	0x21714
00000000000216e0	cmp	w10, #0x2
00000000000216e4	b.lt	0x21748
00000000000216e8	mov	x10, #0x0
00000000000216ec	mov	x11, x8
00000000000216f0	ldr	w12, [x11]
00000000000216f4	cmp	w12, #0x9f
00000000000216f8	b.gt	0x21750
00000000000216fc	add	x10, x10, #0x1
0000000000021700	add	x11, x11, #0x10
0000000000021704	cmp	x9, x10
0000000000021708	b.ne	0x216f0
000000000002170c	mov	x10, x9
0000000000021710	b	0x21750
0000000000021714	mov	w10, #0x0
0000000000021718	add	w11, w9, w10
000000000002171c	cmp	w11, #0x0
0000000000021720	cinc	w11, w11, lt
0000000000021724	asr	w11, w11, #1
0000000000021728	sbfiz	x12, x11, #4, #32
000000000002172c	ldr	w12, [x8, x12]
0000000000021730	cmp	w12, #0xa0
0000000000021734	csinc	w10, w10, w11, ge
0000000000021738	csel	w9, w9, w11, lt
000000000002173c	cmp	w10, w9
0000000000021740	b.lt	0x21718
0000000000021744	b	0x21750
0000000000021748	mov	w10, #0x0
000000000002174c	b	0x21750
0000000000021750	sxtw	x9, w10
0000000000021754	add	x8, x8, x9, lsl #4
0000000000021758	ldr	x8, [x8, #0x8]
000000000002175c	ldr	x8, [x8, #0x8]
0000000000021760	mov	x0, x21
0000000000021764	mov	x1, x20
0000000000021768	blr	x8
000000000002176c	mov	x23, x0
0000000000021770	ldr	x8, [x22]
0000000000021774	and	x8, x8, #0xfffffffffffffffc
0000000000021778	ldr	x8, [x8]
000000000002177c	ldr	w9, [x8, #0x3c]
0000000000021780	ldr	x8, [x8, #0x40]
0000000000021784	tbnz	w9, #0x1f, 0x21790
0000000000021788	and	x9, x9, x26
000000000002178c	b	0x21814
0000000000021790	neg	w10, w9
0000000000021794	mvn	w9, w9
0000000000021798	cmp	w10, #0x9
000000000002179c	b.ge	0x217d4
00000000000217a0	cmp	w10, #0x2
00000000000217a4	b.lt	0x21808
00000000000217a8	mov	x10, #0x0
00000000000217ac	mov	x11, x8
00000000000217b0	ldr	w12, [x11]
00000000000217b4	cmp	w12, #0x9f
00000000000217b8	b.gt	0x21810
00000000000217bc	add	x10, x10, #0x1
00000000000217c0	add	x11, x11, #0x10
00000000000217c4	cmp	x9, x10
00000000000217c8	b.ne	0x217b0
00000000000217cc	mov	x10, x9
00000000000217d0	b	0x21810
00000000000217d4	mov	w10, #0x0
00000000000217d8	add	w11, w9, w10
00000000000217dc	cmp	w11, #0x0
00000000000217e0	cinc	w11, w11, lt
00000000000217e4	asr	w11, w11, #1
00000000000217e8	sbfiz	x12, x11, #4, #32
00000000000217ec	ldr	w12, [x8, x12]
00000000000217f0	cmp	w12, #0xa0
00000000000217f4	csinc	w10, w10, w11, ge
00000000000217f8	csel	w9, w9, w11, lt
00000000000217fc	cmp	w10, w9
0000000000021800	b.lt	0x217d8
0000000000021804	b	0x21810
0000000000021808	mov	w10, #0x0
000000000002180c	b	0x21810
0000000000021810	sxtw	x9, w10
0000000000021814	add	x8, x8, x9, lsl #4
0000000000021818	ldr	x8, [x8, #0x8]
000000000002181c	ldr	x8, [x8, #0x8]
0000000000021820	mov	x0, x22
0000000000021824	mov	x1, x19
0000000000021828	blr	x8
000000000002182c	mov	x1, x0
0000000000021830	cbz	x23, 0x215cc
0000000000021834	ldr	x8, [x23]
0000000000021838	and	x8, x8, #0xfffffffffffffffc
000000000002183c	ldr	x8, [x8]
0000000000021840	ldr	x8, [x8, #0x70]
0000000000021844	mov	x0, x23
0000000000021848	blr	x8
000000000002184c	tbnz	w0, #0x0, 0x215d0
0000000000021850	mov	w0, #0x0
0000000000021854	b	0x2185c
0000000000021858	mov	w0, #0x1
000000000002185c	ldr	x8, [sp, #0x8]
0000000000021860	str	x8, [x24, #0x110]
0000000000021864	ldp	x29, x30, [sp, #0x80]
0000000000021868	ldp	x20, x19, [sp, #0x70]
000000000002186c	ldp	x22, x21, [sp, #0x60]
0000000000021870	ldp	x24, x23, [sp, #0x50]
0000000000021874	ldp	x26, x25, [sp, #0x40]
0000000000021878	add	sp, sp, #0x90
000000000002187c	ret
_kfun:kotlin.collections.AbstractSet#equals(kotlin.Any?){}kotlin.Boolean:
0000000000021880	stp	x20, x19, [sp, #-0x20]!
0000000000021884	stp	x29, x30, [sp, #0x10]
0000000000021888	add	x29, sp, #0x10
000000000002188c	mov	x19, x1
0000000000021890	mov	x20, x0
0000000000021894	adr	x8, #0x651af
0000000000021898	nop
000000000002189c	ldarb	w8, [x8]
00000000000218a0	tbz	w8, #0x0, 0x218a8
00000000000218a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000218a8	cmp	x19, x20
00000000000218ac	b.eq	0x218e4
00000000000218b0	cbz	x19, 0x21998
00000000000218b4	ldr	x8, [x19]
00000000000218b8	and	x8, x8, #0xfffffffffffffffc
00000000000218bc	ldr	x8, [x8]
00000000000218c0	ldr	w9, [x8, #0x3c]
00000000000218c4	ldr	x8, [x8, #0x40]
00000000000218c8	tbnz	w9, #0x1f, 0x218f4
00000000000218cc	and	x9, x9, #0x1e
00000000000218d0	lsl	x9, x9, #4
00000000000218d4	ldr	w8, [x8, x9]
00000000000218d8	cmp	w8, #0x1e
00000000000218dc	b.ne	0x21998
00000000000218e0	b	0x219bc
00000000000218e4	mov	w0, #0x1
00000000000218e8	ldp	x29, x30, [sp, #0x10]
00000000000218ec	ldp	x20, x19, [sp], #0x20
00000000000218f0	ret
00000000000218f4	neg	w10, w9
00000000000218f8	mvn	w9, w9
00000000000218fc	cmp	w10, #0x9
0000000000021900	b.ge	0x2194c
0000000000021904	cmp	w10, #0x2
0000000000021908	b.lt	0x21980
000000000002190c	mov	x10, #0x0
0000000000021910	mov	x11, x8
0000000000021914	ldr	w12, [x11]
0000000000021918	cmp	w12, #0x1d
000000000002191c	b.gt	0x219a8
0000000000021920	add	x10, x10, #0x1
0000000000021924	add	x11, x11, #0x10
0000000000021928	cmp	x9, x10
000000000002192c	b.ne	0x21914
0000000000021930	mov	x10, x9
0000000000021934	sxtw	x9, w10
0000000000021938	lsl	x9, x9, #4
000000000002193c	ldr	w8, [x8, x9]
0000000000021940	cmp	w8, #0x1e
0000000000021944	b.ne	0x21998
0000000000021948	b	0x219bc
000000000002194c	mov	w10, #0x0
0000000000021950	add	w11, w9, w10
0000000000021954	cmp	w11, #0x0
0000000000021958	cinc	w11, w11, lt
000000000002195c	asr	w11, w11, #1
0000000000021960	sbfiz	x12, x11, #4, #32
0000000000021964	ldr	w12, [x8, x12]
0000000000021968	cmp	w12, #0x1e
000000000002196c	csinc	w10, w10, w11, ge
0000000000021970	csel	w9, w9, w11, lt
0000000000021974	cmp	w10, w9
0000000000021978	b.lt	0x21950
000000000002197c	b	0x219a8
0000000000021980	mov	w10, #0x0
0000000000021984	sxtw	x9, w10
0000000000021988	lsl	x9, x9, #4
000000000002198c	ldr	w8, [x8, x9]
0000000000021990	cmp	w8, #0x1e
0000000000021994	b.eq	0x219bc
0000000000021998	mov	w0, #0x0
000000000002199c	ldp	x29, x30, [sp, #0x10]
00000000000219a0	ldp	x20, x19, [sp], #0x20
00000000000219a4	ret
00000000000219a8	sxtw	x9, w10
00000000000219ac	lsl	x9, x9, #4
00000000000219b0	ldr	w8, [x8, x9]
00000000000219b4	cmp	w8, #0x1e
00000000000219b8	b.ne	0x21998
00000000000219bc	mov	x0, x20
00000000000219c0	mov	x1, x19
00000000000219c4	ldp	x29, x30, [sp, #0x10]
00000000000219c8	ldp	x20, x19, [sp], #0x20
00000000000219cc	b	"_kfun:kotlin.collections.AbstractSet.Companion#setEquals(kotlin.collections.Set<*>;kotlin.collections.Set<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractSet#hashCode(){}kotlin.Int:
00000000000219d0	stp	x20, x19, [sp, #-0x20]!
00000000000219d4	stp	x29, x30, [sp, #0x10]
00000000000219d8	add	x29, sp, #0x10
00000000000219dc	mov	x19, x0
00000000000219e0	adr	x8, #0x65063
00000000000219e4	nop
00000000000219e8	ldarb	w8, [x8]
00000000000219ec	tbz	w8, #0x0, 0x219f4
00000000000219f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000219f4	mov	x0, x19
00000000000219f8	ldp	x29, x30, [sp, #0x10]
00000000000219fc	ldp	x20, x19, [sp], #0x20
0000000000021a00	b	"_kfun:kotlin.collections.AbstractSet.Companion#unorderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections.AbstractSet.Companion#unorderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int:
0000000000021a04	sub	sp, sp, #0x70
0000000000021a08	stp	x24, x23, [sp, #0x30]
0000000000021a0c	stp	x22, x21, [sp, #0x40]
0000000000021a10	stp	x20, x19, [sp, #0x50]
0000000000021a14	stp	x29, x30, [sp, #0x60]
0000000000021a18	add	x29, sp, #0x60
0000000000021a1c	mov	x20, x0
0000000000021a20	movi.16b	v0, #0x0
0000000000021a24	stp	q0, q0, [sp]
0000000000021a28	str	xzr, [sp, #0x20]
0000000000021a2c	mov	x19, sp
0000000000021a30	add	x21, x19, #0x18
0000000000021a34	adrp	x0, 75 ; 0x6c000
0000000000021a38	add	x0, x0, #0xbb0
0000000000021a3c	ldr	x8, [x0]
0000000000021a40	blr	x8
0000000000021a44	ldr	x22, [x0]
0000000000021a48	ldr	x8, [x22, #0x110]
0000000000021a4c	str	x19, [x22, #0x110]
0000000000021a50	mov	x9, #0x500000000
0000000000021a54	stp	x8, x9, [sp, #0x8]
0000000000021a58	adr	x23, #0x64feb
0000000000021a5c	nop
0000000000021a60	ldarb	w8, [x23]
0000000000021a64	tbz	w8, #0x0, 0x21a6c
0000000000021a68	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021a6c	add	x19, x19, #0x20
0000000000021a70	ldr	x8, [x20]
0000000000021a74	and	x8, x8, #0xfffffffffffffffc
0000000000021a78	ldr	x8, [x8]
0000000000021a7c	ldr	w9, [x8, #0x3c]
0000000000021a80	ldr	x8, [x8, #0x40]
0000000000021a84	tbnz	w9, #0x1f, 0x21a94
0000000000021a88	mov	w10, #0x12
0000000000021a8c	and	x9, x9, x10
0000000000021a90	b	0x21b18
0000000000021a94	neg	w10, w9
0000000000021a98	mvn	w9, w9
0000000000021a9c	cmp	w10, #0x9
0000000000021aa0	b.ge	0x21ad8
0000000000021aa4	cmp	w10, #0x2
0000000000021aa8	b.lt	0x21b0c
0000000000021aac	mov	x10, #0x0
0000000000021ab0	mov	x11, x8
0000000000021ab4	ldr	w12, [x11]
0000000000021ab8	cmp	w12, #0x11
0000000000021abc	b.gt	0x21b14
0000000000021ac0	add	x10, x10, #0x1
0000000000021ac4	add	x11, x11, #0x10
0000000000021ac8	cmp	x9, x10
0000000000021acc	b.ne	0x21ab4
0000000000021ad0	mov	x10, x9
0000000000021ad4	b	0x21b14
0000000000021ad8	mov	w10, #0x0
0000000000021adc	add	w11, w9, w10
0000000000021ae0	cmp	w11, #0x0
0000000000021ae4	cinc	w11, w11, lt
0000000000021ae8	asr	w11, w11, #1
0000000000021aec	sbfiz	x12, x11, #4, #32
0000000000021af0	ldr	w12, [x8, x12]
0000000000021af4	cmp	w12, #0x12
0000000000021af8	csinc	w10, w10, w11, ge
0000000000021afc	csel	w9, w9, w11, lt
0000000000021b00	cmp	w10, w9
0000000000021b04	b.lt	0x21adc
0000000000021b08	b	0x21b14
0000000000021b0c	mov	w10, #0x0
0000000000021b10	b	0x21b14
0000000000021b14	sxtw	x9, w10
0000000000021b18	add	x8, x8, x9, lsl #4
0000000000021b1c	ldr	x8, [x8, #0x8]
0000000000021b20	ldr	x8, [x8, #0x20]
0000000000021b24	mov	x0, x20
0000000000021b28	mov	x1, x21
0000000000021b2c	blr	x8
0000000000021b30	mov	x21, x0
0000000000021b34	mov	w20, #0x0
0000000000021b38	mov	w24, #0xa0
0000000000021b3c	b	0x21b44
0000000000021b40	add	w20, w20, w0
0000000000021b44	ldr	x8, [x21]
0000000000021b48	and	x8, x8, #0xfffffffffffffffc
0000000000021b4c	ldr	x8, [x8]
0000000000021b50	ldr	w9, [x8, #0x3c]
0000000000021b54	ldr	x8, [x8, #0x40]
0000000000021b58	tbnz	w9, #0x1f, 0x21b7c
0000000000021b5c	and	x9, x9, x24
0000000000021b60	add	x8, x8, x9, lsl #4
0000000000021b64	ldr	x8, [x8, #0x8]
0000000000021b68	ldr	x8, [x8]
0000000000021b6c	mov	x0, x21
0000000000021b70	blr	x8
0000000000021b74	tbnz	w0, #0x0, 0x21c18
0000000000021b78	b	0x21cfc
0000000000021b7c	neg	w10, w9
0000000000021b80	mvn	w9, w9
0000000000021b84	cmp	w10, #0x9
0000000000021b88	b.ge	0x21bc0
0000000000021b8c	cmp	w10, #0x2
0000000000021b90	b.lt	0x21bf4
0000000000021b94	mov	x10, #0x0
0000000000021b98	mov	x11, x8
0000000000021b9c	ldr	w12, [x11]
0000000000021ba0	cmp	w12, #0x9f
0000000000021ba4	b.gt	0x21bfc
0000000000021ba8	add	x10, x10, #0x1
0000000000021bac	add	x11, x11, #0x10
0000000000021bb0	cmp	x9, x10
0000000000021bb4	b.ne	0x21b9c
0000000000021bb8	mov	x10, x9
0000000000021bbc	b	0x21bfc
0000000000021bc0	mov	w10, #0x0
0000000000021bc4	add	w11, w9, w10
0000000000021bc8	cmp	w11, #0x0
0000000000021bcc	cinc	w11, w11, lt
0000000000021bd0	asr	w11, w11, #1
0000000000021bd4	sbfiz	x12, x11, #4, #32
0000000000021bd8	ldr	w12, [x8, x12]
0000000000021bdc	cmp	w12, #0xa0
0000000000021be0	csinc	w10, w10, w11, ge
0000000000021be4	csel	w9, w9, w11, lt
0000000000021be8	cmp	w10, w9
0000000000021bec	b.lt	0x21bc4
0000000000021bf0	b	0x21bfc
0000000000021bf4	mov	w10, #0x0
0000000000021bf8	b	0x21bfc
0000000000021bfc	sxtw	x9, w10
0000000000021c00	add	x8, x8, x9, lsl #4
0000000000021c04	ldr	x8, [x8, #0x8]
0000000000021c08	ldr	x8, [x8]
0000000000021c0c	mov	x0, x21
0000000000021c10	blr	x8
0000000000021c14	tbz	w0, #0x0, 0x21cfc
0000000000021c18	ldarb	w8, [x23]
0000000000021c1c	tbz	w8, #0x0, 0x21c24
0000000000021c20	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021c24	ldr	x8, [x21]
0000000000021c28	and	x8, x8, #0xfffffffffffffffc
0000000000021c2c	ldr	x8, [x8]
0000000000021c30	ldr	w9, [x8, #0x3c]
0000000000021c34	ldr	x8, [x8, #0x40]
0000000000021c38	tbnz	w9, #0x1f, 0x21c44
0000000000021c3c	and	x9, x9, x24
0000000000021c40	b	0x21cc8
0000000000021c44	neg	w10, w9
0000000000021c48	mvn	w9, w9
0000000000021c4c	cmp	w10, #0x9
0000000000021c50	b.ge	0x21c88
0000000000021c54	cmp	w10, #0x2
0000000000021c58	b.lt	0x21cbc
0000000000021c5c	mov	x10, #0x0
0000000000021c60	mov	x11, x8
0000000000021c64	ldr	w12, [x11]
0000000000021c68	cmp	w12, #0x9f
0000000000021c6c	b.gt	0x21cc4
0000000000021c70	add	x10, x10, #0x1
0000000000021c74	add	x11, x11, #0x10
0000000000021c78	cmp	x9, x10
0000000000021c7c	b.ne	0x21c64
0000000000021c80	mov	x10, x9
0000000000021c84	b	0x21cc4
0000000000021c88	mov	w10, #0x0
0000000000021c8c	add	w11, w9, w10
0000000000021c90	cmp	w11, #0x0
0000000000021c94	cinc	w11, w11, lt
0000000000021c98	asr	w11, w11, #1
0000000000021c9c	sbfiz	x12, x11, #4, #32
0000000000021ca0	ldr	w12, [x8, x12]
0000000000021ca4	cmp	w12, #0xa0
0000000000021ca8	csinc	w10, w10, w11, ge
0000000000021cac	csel	w9, w9, w11, lt
0000000000021cb0	cmp	w10, w9
0000000000021cb4	b.lt	0x21c8c
0000000000021cb8	b	0x21cc4
0000000000021cbc	mov	w10, #0x0
0000000000021cc0	b	0x21cc4
0000000000021cc4	sxtw	x9, w10
0000000000021cc8	add	x8, x8, x9, lsl #4
0000000000021ccc	ldr	x8, [x8, #0x8]
0000000000021cd0	ldr	x8, [x8, #0x8]
0000000000021cd4	mov	x0, x21
0000000000021cd8	mov	x1, x19
0000000000021cdc	blr	x8
0000000000021ce0	cbz	x0, 0x21b40
0000000000021ce4	ldr	x8, [x0]
0000000000021ce8	and	x8, x8, #0xfffffffffffffffc
0000000000021cec	ldr	x8, [x8]
0000000000021cf0	ldr	x8, [x8, #0x78]
0000000000021cf4	blr	x8
0000000000021cf8	b	0x21b40
0000000000021cfc	ldr	x8, [sp, #0x8]
0000000000021d00	str	x8, [x22, #0x110]
0000000000021d04	mov	x0, x20
0000000000021d08	ldp	x29, x30, [sp, #0x60]
0000000000021d0c	ldp	x20, x19, [sp, #0x50]
0000000000021d10	ldp	x22, x21, [sp, #0x40]
0000000000021d14	ldp	x24, x23, [sp, #0x30]
0000000000021d18	add	sp, sp, #0x70
0000000000021d1c	ret
_kfun:kotlin.collections.AbstractSet.Companion#setEquals(kotlin.collections.Set<*>;kotlin.collections.Set<*>){}kotlin.Boolean:
0000000000021d20	stp	x22, x21, [sp, #-0x30]!
0000000000021d24	stp	x20, x19, [sp, #0x10]
0000000000021d28	stp	x29, x30, [sp, #0x20]
0000000000021d2c	add	x29, sp, #0x20
0000000000021d30	mov	x19, x1
0000000000021d34	mov	x20, x0
0000000000021d38	adr	x8, #0x64d0b
0000000000021d3c	nop
0000000000021d40	ldarb	w8, [x8]
0000000000021d44	tbz	w8, #0x0, 0x21d4c
0000000000021d48	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021d4c	ldr	x8, [x20]
0000000000021d50	and	x8, x8, #0xfffffffffffffffc
0000000000021d54	ldr	x8, [x8]
0000000000021d58	ldr	w9, [x8, #0x3c]
0000000000021d5c	ldr	x8, [x8, #0x40]
0000000000021d60	tbnz	w9, #0x1f, 0x21d6c
0000000000021d64	and	x9, x9, #0x1e
0000000000021d68	b	0x21df0
0000000000021d6c	neg	w10, w9
0000000000021d70	mvn	w9, w9
0000000000021d74	cmp	w10, #0x9
0000000000021d78	b.ge	0x21db0
0000000000021d7c	cmp	w10, #0x2
0000000000021d80	b.lt	0x21de4
0000000000021d84	mov	x10, #0x0
0000000000021d88	mov	x11, x8
0000000000021d8c	ldr	w12, [x11]
0000000000021d90	cmp	w12, #0x1d
0000000000021d94	b.gt	0x21dec
0000000000021d98	add	x10, x10, #0x1
0000000000021d9c	add	x11, x11, #0x10
0000000000021da0	cmp	x9, x10
0000000000021da4	b.ne	0x21d8c
0000000000021da8	mov	x10, x9
0000000000021dac	b	0x21dec
0000000000021db0	mov	w10, #0x0
0000000000021db4	add	w11, w9, w10
0000000000021db8	cmp	w11, #0x0
0000000000021dbc	cinc	w11, w11, lt
0000000000021dc0	asr	w11, w11, #1
0000000000021dc4	sbfiz	x12, x11, #4, #32
0000000000021dc8	ldr	w12, [x8, x12]
0000000000021dcc	cmp	w12, #0x1e
0000000000021dd0	csinc	w10, w10, w11, ge
0000000000021dd4	csel	w9, w9, w11, lt
0000000000021dd8	cmp	w10, w9
0000000000021ddc	b.lt	0x21db4
0000000000021de0	b	0x21dec
0000000000021de4	mov	w10, #0x0
0000000000021de8	b	0x21dec
0000000000021dec	sxtw	x9, w10
0000000000021df0	add	x8, x8, x9, lsl #4
0000000000021df4	ldr	x8, [x8, #0x8]
0000000000021df8	ldr	x8, [x8]
0000000000021dfc	mov	x0, x20
0000000000021e00	blr	x8
0000000000021e04	mov	x21, x0
0000000000021e08	ldr	x8, [x19]
0000000000021e0c	and	x8, x8, #0xfffffffffffffffc
0000000000021e10	ldr	x8, [x8]
0000000000021e14	ldr	w9, [x8, #0x3c]
0000000000021e18	ldr	x8, [x8, #0x40]
0000000000021e1c	tbnz	w9, #0x1f, 0x21e28
0000000000021e20	and	x9, x9, #0x1e
0000000000021e24	b	0x21eac
0000000000021e28	neg	w10, w9
0000000000021e2c	mvn	w9, w9
0000000000021e30	cmp	w10, #0x9
0000000000021e34	b.ge	0x21e6c
0000000000021e38	cmp	w10, #0x2
0000000000021e3c	b.lt	0x21ea0
0000000000021e40	mov	x10, #0x0
0000000000021e44	mov	x11, x8
0000000000021e48	ldr	w12, [x11]
0000000000021e4c	cmp	w12, #0x1d
0000000000021e50	b.gt	0x21ea8
0000000000021e54	add	x10, x10, #0x1
0000000000021e58	add	x11, x11, #0x10
0000000000021e5c	cmp	x9, x10
0000000000021e60	b.ne	0x21e48
0000000000021e64	mov	x10, x9
0000000000021e68	b	0x21ea8
0000000000021e6c	mov	w10, #0x0
0000000000021e70	add	w11, w9, w10
0000000000021e74	cmp	w11, #0x0
0000000000021e78	cinc	w11, w11, lt
0000000000021e7c	asr	w11, w11, #1
0000000000021e80	sbfiz	x12, x11, #4, #32
0000000000021e84	ldr	w12, [x8, x12]
0000000000021e88	cmp	w12, #0x1e
0000000000021e8c	csinc	w10, w10, w11, ge
0000000000021e90	csel	w9, w9, w11, lt
0000000000021e94	cmp	w10, w9
0000000000021e98	b.lt	0x21e70
0000000000021e9c	b	0x21ea8
0000000000021ea0	mov	w10, #0x0
0000000000021ea4	b	0x21ea8
0000000000021ea8	sxtw	x9, w10
0000000000021eac	add	x8, x8, x9, lsl #4
0000000000021eb0	ldr	x8, [x8, #0x8]
0000000000021eb4	ldr	x8, [x8]
0000000000021eb8	mov	x0, x19
0000000000021ebc	blr	x8
0000000000021ec0	cmp	w21, w0
0000000000021ec4	b.ne	0x21eec
0000000000021ec8	ldr	x8, [x20]
0000000000021ecc	and	x8, x8, #0xfffffffffffffffc
0000000000021ed0	ldr	x8, [x8]
0000000000021ed4	ldr	w9, [x8, #0x3c]
0000000000021ed8	ldr	x8, [x8, #0x40]
0000000000021edc	tbnz	w9, #0x1f, 0x21f00
0000000000021ee0	mov	w10, #0x12
0000000000021ee4	and	x9, x9, x10
0000000000021ee8	b	0x21f84
0000000000021eec	mov	w0, #0x0
0000000000021ef0	ldp	x29, x30, [sp, #0x20]
0000000000021ef4	ldp	x20, x19, [sp, #0x10]
0000000000021ef8	ldp	x22, x21, [sp], #0x30
0000000000021efc	ret
0000000000021f00	neg	w10, w9
0000000000021f04	mvn	w9, w9
0000000000021f08	cmp	w10, #0x9
0000000000021f0c	b.ge	0x21f44
0000000000021f10	cmp	w10, #0x2
0000000000021f14	b.lt	0x21f78
0000000000021f18	mov	x10, #0x0
0000000000021f1c	mov	x11, x8
0000000000021f20	ldr	w12, [x11]
0000000000021f24	cmp	w12, #0x11
0000000000021f28	b.gt	0x21f80
0000000000021f2c	add	x10, x10, #0x1
0000000000021f30	add	x11, x11, #0x10
0000000000021f34	cmp	x9, x10
0000000000021f38	b.ne	0x21f20
0000000000021f3c	mov	x10, x9
0000000000021f40	b	0x21f80
0000000000021f44	mov	w10, #0x0
0000000000021f48	add	w11, w9, w10
0000000000021f4c	cmp	w11, #0x0
0000000000021f50	cinc	w11, w11, lt
0000000000021f54	asr	w11, w11, #1
0000000000021f58	sbfiz	x12, x11, #4, #32
0000000000021f5c	ldr	w12, [x8, x12]
0000000000021f60	cmp	w12, #0x12
0000000000021f64	csinc	w10, w10, w11, ge
0000000000021f68	csel	w9, w9, w11, lt
0000000000021f6c	cmp	w10, w9
0000000000021f70	b.lt	0x21f48
0000000000021f74	b	0x21f80
0000000000021f78	mov	w10, #0x0
0000000000021f7c	b	0x21f80
0000000000021f80	sxtw	x9, w10
0000000000021f84	add	x8, x8, x9, lsl #4
0000000000021f88	ldr	x8, [x8, #0x8]
0000000000021f8c	ldr	x2, [x8, #0x10]
0000000000021f90	mov	x0, x20
0000000000021f94	mov	x1, x19
0000000000021f98	ldp	x29, x30, [sp, #0x20]
0000000000021f9c	ldp	x20, x19, [sp, #0x10]
0000000000021fa0	ldp	x22, x21, [sp], #0x30
0000000000021fa4	br	x2
_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0ยง<kotlin.Any?>}kotlin.Int:
0000000000021fa8	stp	x20, x19, [sp, #-0x20]!
0000000000021fac	stp	x29, x30, [sp, #0x10]
0000000000021fb0	add	x29, sp, #0x10
0000000000021fb4	mov	x19, x0
0000000000021fb8	adr	x8, #0x64a8b
0000000000021fbc	nop
0000000000021fc0	ldarb	w8, [x8]
0000000000021fc4	tbz	w8, #0x0, 0x21fcc
0000000000021fc8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021fcc	ldr	x8, [x19]
0000000000021fd0	and	x8, x8, #0xfffffffffffffffc
0000000000021fd4	ldr	x8, [x8]
0000000000021fd8	ldr	w9, [x8, #0x3c]
0000000000021fdc	ldr	x8, [x8, #0x40]
0000000000021fe0	tbnz	w9, #0x1f, 0x21ff0
0000000000021fe4	mov	w10, #0x2b
0000000000021fe8	and	x9, x9, x10
0000000000021fec	b	0x22074
0000000000021ff0	neg	w10, w9
0000000000021ff4	mvn	w9, w9
0000000000021ff8	cmp	w10, #0x9
0000000000021ffc	b.ge	0x22034
0000000000022000	cmp	w10, #0x2
0000000000022004	b.lt	0x22068
0000000000022008	mov	x10, #0x0
000000000002200c	mov	x11, x8
0000000000022010	ldr	w12, [x11]
0000000000022014	cmp	w12, #0x2a
0000000000022018	b.gt	0x22070
000000000002201c	add	x10, x10, #0x1
0000000000022020	add	x11, x11, #0x10
0000000000022024	cmp	x9, x10
0000000000022028	b.ne	0x22010
000000000002202c	mov	x10, x9
0000000000022030	b	0x22070
0000000000022034	mov	w10, #0x0
0000000000022038	add	w11, w9, w10
000000000002203c	cmp	w11, #0x0
0000000000022040	cinc	w11, w11, lt
0000000000022044	asr	w11, w11, #1
0000000000022048	sbfiz	x12, x11, #4, #32
000000000002204c	ldr	w12, [x8, x12]
0000000000022050	cmp	w12, #0x2b
0000000000022054	csinc	w10, w10, w11, ge
0000000000022058	csel	w9, w9, w11, lt
000000000002205c	cmp	w10, w9
0000000000022060	b.lt	0x22038
0000000000022064	b	0x22070
0000000000022068	mov	w10, #0x0
000000000002206c	b	0x22070
0000000000022070	sxtw	x9, w10
0000000000022074	add	x8, x8, x9, lsl #4
0000000000022078	ldr	x8, [x8, #0x8]
000000000002207c	ldr	x8, [x8]
0000000000022080	mov	x0, x19
0000000000022084	blr	x8
0000000000022088	sub	w0, w0, #0x1
000000000002208c	ldp	x29, x30, [sp, #0x10]
0000000000022090	ldp	x20, x19, [sp], #0x20
0000000000022094	ret
_kfun:kotlin.collections#removeAll__at__kotlin.collections.MutableList<0:0>(kotlin.Function1<0:0,kotlin.Boolean>){0ยง<kotlin.Any?>}kotlin.Boolean:
0000000000022098	sub	sp, sp, #0xb0
000000000002209c	stp	x28, x27, [sp, #0x50]
00000000000220a0	stp	x26, x25, [sp, #0x60]
00000000000220a4	stp	x24, x23, [sp, #0x70]
00000000000220a8	stp	x22, x21, [sp, #0x80]
00000000000220ac	stp	x20, x19, [sp, #0x90]
00000000000220b0	stp	x29, x30, [sp, #0xa0]
00000000000220b4	add	x29, sp, #0xa0
00000000000220b8	mov	x21, x1
00000000000220bc	mov	x20, x0
00000000000220c0	adr	x19, #0x64983
00000000000220c4	nop
00000000000220c8	ldarb	w8, [x19]
00000000000220cc	tbz	w8, #0x0, 0x220d4
00000000000220d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000220d4	movi.16b	v0, #0x0
00000000000220d8	stp	q0, q0, [sp, #0x10]
00000000000220dc	str	xzr, [sp, #0x40]
00000000000220e0	str	q0, [sp, #0x30]
00000000000220e4	add	x27, sp, #0x10
00000000000220e8	adrp	x22, 74 ; 0x6c000
00000000000220ec	add	x22, x22, #0xbb0
00000000000220f0	ldr	x26, [x22]
00000000000220f4	mov	x0, x22
00000000000220f8	blr	x26
00000000000220fc	ldr	x8, [x0]
0000000000022100	ldr	x9, [x8, #0x110]
0000000000022104	str	x27, [x8, #0x110]
0000000000022108	mov	x8, #0x700000000
000000000002210c	stp	x9, x8, [sp, #0x18]
0000000000022110	cbz	x20, 0x224c4
0000000000022114	ldr	x8, [x20]
0000000000022118	and	x8, x8, #0xfffffffffffffffc
000000000002211c	ldr	x8, [x8]
0000000000022120	ldr	w9, [x8, #0x3c]
0000000000022124	ldr	x8, [x8, #0x40]
0000000000022128	tbnz	w9, #0x1f, 0x223f8
000000000002212c	mov	w10, #0xb8
0000000000022130	and	x9, x9, x10
0000000000022134	lsl	x9, x9, #4
0000000000022138	ldr	w8, [x8, x9]
000000000002213c	cmp	w8, #0xb8
0000000000022140	b.ne	0x224c4
0000000000022144	str	x26, [sp]
0000000000022148	mov	x0, x20
000000000002214c	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0ยง<kotlin.Any?>}kotlin.Int"
0000000000022150	tbnz	w0, #0x1f, 0x22450
0000000000022154	mov	x23, x0
0000000000022158	mov	w25, #0x0
000000000002215c	mov	w22, #0x0
0000000000022160	add	x24, x27, #0x20
0000000000022164	add	x26, x27, #0x18
0000000000022168	add	x8, x27, #0x28
000000000002216c	str	x8, [sp, #0x8]
0000000000022170	mov	w27, #0x2c
0000000000022174	b	0x221b4
0000000000022178	mov	w10, #0x16
000000000002217c	and	x9, x9, x10
0000000000022180	add	x8, x8, x9, lsl #4
0000000000022184	ldr	x8, [x8, #0x8]
0000000000022188	ldr	x8, [x8, #0x58]
000000000002218c	mov	x0, x20
0000000000022190	mov	x1, x22
0000000000022194	mov	x2, x28
0000000000022198	ldr	x3, [sp, #0x8]
000000000002219c	blr	x8
00000000000221a0	add	w22, w22, #0x1
00000000000221a4	add	w8, w25, #0x1
00000000000221a8	cmp	w25, w23
00000000000221ac	mov	x25, x8
00000000000221b0	b.eq	0x22454
00000000000221b4	ldarb	w8, [x19]
00000000000221b8	tbz	w8, #0x0, 0x221c0
00000000000221bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000221c0	ldr	x8, [x20]
00000000000221c4	and	x8, x8, #0xfffffffffffffffc
00000000000221c8	ldr	x8, [x8]
00000000000221cc	ldr	w9, [x8, #0x3c]
00000000000221d0	ldr	x8, [x8, #0x40]
00000000000221d4	tbnz	w9, #0x1f, 0x221e4
00000000000221d8	mov	w10, #0x2b
00000000000221dc	and	x9, x9, x10
00000000000221e0	b	0x22268
00000000000221e4	neg	w10, w9
00000000000221e8	mvn	w9, w9
00000000000221ec	cmp	w10, #0x9
00000000000221f0	b.ge	0x22228
00000000000221f4	cmp	w10, #0x2
00000000000221f8	b.lt	0x2225c
00000000000221fc	mov	x10, #0x0
0000000000022200	mov	x11, x8
0000000000022204	ldr	w12, [x11]
0000000000022208	cmp	w12, #0x2a
000000000002220c	b.gt	0x22264
0000000000022210	add	x10, x10, #0x1
0000000000022214	add	x11, x11, #0x10
0000000000022218	cmp	x9, x10
000000000002221c	b.ne	0x22204
0000000000022220	mov	x10, x9
0000000000022224	b	0x22264
0000000000022228	mov	w10, #0x0
000000000002222c	add	w11, w9, w10
0000000000022230	cmp	w11, #0x0
0000000000022234	cinc	w11, w11, lt
0000000000022238	asr	w11, w11, #1
000000000002223c	sbfiz	x12, x11, #4, #32
0000000000022240	ldr	w12, [x8, x12]
0000000000022244	cmp	w12, #0x2b
0000000000022248	csinc	w10, w10, w11, ge
000000000002224c	csel	w9, w9, w11, lt
0000000000022250	cmp	w10, w9
0000000000022254	b.lt	0x2222c
0000000000022258	b	0x22264
000000000002225c	mov	w10, #0x0
0000000000022260	b	0x22264
0000000000022264	sxtw	x9, w10
0000000000022268	add	x8, x8, x9, lsl #4
000000000002226c	ldr	x8, [x8, #0x8]
0000000000022270	ldr	x8, [x8, #0x18]
0000000000022274	mov	x0, x20
0000000000022278	mov	x1, x25
000000000002227c	mov	x2, x26
0000000000022280	blr	x8
0000000000022284	mov	x28, x0
0000000000022288	ldr	x8, [x21]
000000000002228c	and	x8, x8, #0xfffffffffffffffc
0000000000022290	ldr	x8, [x8]
0000000000022294	ldr	w9, [x8, #0x3c]
0000000000022298	ldr	x8, [x8, #0x40]
000000000002229c	tbnz	w9, #0x1f, 0x222a8
00000000000222a0	and	x9, x9, x27
00000000000222a4	b	0x2232c
00000000000222a8	neg	w10, w9
00000000000222ac	mvn	w9, w9
00000000000222b0	cmp	w10, #0x9
00000000000222b4	b.ge	0x222ec
00000000000222b8	cmp	w10, #0x2
00000000000222bc	b.lt	0x22320
00000000000222c0	mov	x10, #0x0
00000000000222c4	mov	x11, x8
00000000000222c8	ldr	w12, [x11]
00000000000222cc	cmp	w12, #0x2b
00000000000222d0	b.gt	0x22328
00000000000222d4	add	x10, x10, #0x1
00000000000222d8	add	x11, x11, #0x10
00000000000222dc	cmp	x9, x10
00000000000222e0	b.ne	0x222c8
00000000000222e4	mov	x10, x9
00000000000222e8	b	0x22328
00000000000222ec	mov	w10, #0x0
00000000000222f0	add	w11, w9, w10
00000000000222f4	cmp	w11, #0x0
00000000000222f8	cinc	w11, w11, lt
00000000000222fc	asr	w11, w11, #1
0000000000022300	sbfiz	x12, x11, #4, #32
0000000000022304	ldr	w12, [x8, x12]
0000000000022308	cmp	w12, #0x2c
000000000002230c	csinc	w10, w10, w11, ge
0000000000022310	csel	w9, w9, w11, lt
0000000000022314	cmp	w10, w9
0000000000022318	b.lt	0x222f0
000000000002231c	b	0x22328
0000000000022320	mov	w10, #0x0
0000000000022324	b	0x22328
0000000000022328	sxtw	x9, w10
000000000002232c	add	x8, x8, x9, lsl #4
0000000000022330	ldr	x8, [x8, #0x8]
0000000000022334	ldr	x8, [x8]
0000000000022338	mov	x0, x21
000000000002233c	mov	x1, x28
0000000000022340	mov	x2, x24
0000000000022344	blr	x8
0000000000022348	ldrb	w8, [x0, #0x8]
000000000002234c	tbnz	w8, #0x0, 0x221a4
0000000000022350	cmp	w22, w25
0000000000022354	b.eq	0x221a0
0000000000022358	ldr	x8, [x20]
000000000002235c	and	x8, x8, #0xfffffffffffffffc
0000000000022360	ldr	x8, [x8]
0000000000022364	ldr	w9, [x8, #0x3c]
0000000000022368	ldr	x8, [x8, #0x40]
000000000002236c	tbz	w9, #0x1f, 0x22178
0000000000022370	neg	w10, w9
0000000000022374	mvn	w9, w9
0000000000022378	cmp	w10, #0x9
000000000002237c	b.ge	0x223b4
0000000000022380	cmp	w10, #0x2
0000000000022384	b.lt	0x223e8
0000000000022388	mov	x10, #0x0
000000000002238c	mov	x11, x8
0000000000022390	ldr	w12, [x11]
0000000000022394	cmp	w12, #0x15
0000000000022398	b.gt	0x223f0
000000000002239c	add	x10, x10, #0x1
00000000000223a0	add	x11, x11, #0x10
00000000000223a4	cmp	x9, x10
00000000000223a8	b.ne	0x22390
00000000000223ac	mov	x10, x9
00000000000223b0	b	0x223f0
00000000000223b4	mov	w10, #0x0
00000000000223b8	add	w11, w9, w10
00000000000223bc	cmp	w11, #0x0
00000000000223c0	cinc	w11, w11, lt
00000000000223c4	asr	w11, w11, #1
00000000000223c8	sbfiz	x12, x11, #4, #32
00000000000223cc	ldr	w12, [x8, x12]
00000000000223d0	cmp	w12, #0x16
00000000000223d4	csinc	w10, w10, w11, ge
00000000000223d8	csel	w9, w9, w11, lt
00000000000223dc	cmp	w10, w9
00000000000223e0	b.lt	0x223b8
00000000000223e4	b	0x223f0
00000000000223e8	mov	w10, #0x0
00000000000223ec	b	0x223f0
00000000000223f0	sxtw	x9, w10
00000000000223f4	b	0x22180
00000000000223f8	neg	w10, w9
00000000000223fc	mvn	w9, w9
0000000000022400	cmp	w10, #0x9
0000000000022404	b.ge	0x22480
0000000000022408	cmp	w10, #0x2
000000000002240c	b.lt	0x22640
0000000000022410	mov	x10, #0x0
0000000000022414	mov	x11, x8
0000000000022418	ldr	w12, [x11]
000000000002241c	cmp	w12, #0xb7
0000000000022420	b.gt	0x226a8
0000000000022424	add	x10, x10, #0x1
0000000000022428	add	x11, x11, #0x10
000000000002242c	cmp	x9, x10
0000000000022430	b.ne	0x22418
0000000000022434	mov	x10, x9
0000000000022438	sxtw	x9, w10
000000000002243c	lsl	x9, x9, #4
0000000000022440	ldr	w8, [x8, x9]
0000000000022444	cmp	w8, #0xb8
0000000000022448	b.ne	0x224c4
000000000002244c	b	0x22144
0000000000022450	mov	w22, #0x0
0000000000022454	ldr	x8, [x20]
0000000000022458	and	x8, x8, #0xfffffffffffffffc
000000000002245c	ldr	x8, [x8]
0000000000022460	ldr	w9, [x8, #0x3c]
0000000000022464	ldr	x8, [x8, #0x40]
0000000000022468	tbnz	w9, #0x1f, 0x225cc
000000000002246c	mov	w10, #0x2b
0000000000022470	and	x9, x9, x10
0000000000022474	ldr	x26, [sp]
0000000000022478	add	x23, sp, #0x10
000000000002247c	b	0x226cc
0000000000022480	mov	w10, #0x0
0000000000022484	add	w11, w9, w10
0000000000022488	cmp	w11, #0x0
000000000002248c	cinc	w11, w11, lt
0000000000022490	asr	w11, w11, #1
0000000000022494	sbfiz	x12, x11, #4, #32
0000000000022498	ldr	w12, [x8, x12]
000000000002249c	cmp	w12, #0xb8
00000000000224a0	csinc	w10, w10, w11, ge
00000000000224a4	csel	w9, w9, w11, lt
00000000000224a8	cmp	w10, w9
00000000000224ac	b.lt	0x22484
00000000000224b0	sxtw	x9, w10
00000000000224b4	lsl	x9, x9, #4
00000000000224b8	ldr	w8, [x8, x9]
00000000000224bc	cmp	w8, #0xb8
00000000000224c0	b.eq	0x22144
00000000000224c4	ldr	x8, [x20]
00000000000224c8	and	x8, x8, #0xfffffffffffffffc
00000000000224cc	ldr	x8, [x8]
00000000000224d0	ldr	w9, [x8, #0x3c]
00000000000224d4	ldr	x8, [x8, #0x40]
00000000000224d8	tbnz	w9, #0x1f, 0x22540
00000000000224dc	mov	w10, #0x24
00000000000224e0	and	x9, x9, x10
00000000000224e4	lsl	x9, x9, #4
00000000000224e8	ldr	w8, [x8, x9]
00000000000224ec	cmp	w8, #0x24
00000000000224f0	b.ne	0x22630
00000000000224f4	mov	x0, x20
00000000000224f8	mov	x1, x21
00000000000224fc	mov	w2, #0x1
0000000000022500	bl	"_kfun:kotlin.collections.filterInPlace#internal.14"
0000000000022504	mov	x8, x0
0000000000022508	mov	x0, x22
000000000002250c	blr	x26
0000000000022510	ldr	x9, [x0]
0000000000022514	ldr	x10, [sp, #0x18]
0000000000022518	str	x10, [x9, #0x110]
000000000002251c	mov	x0, x8
0000000000022520	ldp	x29, x30, [sp, #0xa0]
0000000000022524	ldp	x20, x19, [sp, #0x90]
0000000000022528	ldp	x22, x21, [sp, #0x80]
000000000002252c	ldp	x24, x23, [sp, #0x70]
0000000000022530	ldp	x26, x25, [sp, #0x60]
0000000000022534	ldp	x28, x27, [sp, #0x50]
0000000000022538	add	sp, sp, #0xb0
000000000002253c	ret
0000000000022540	neg	w10, w9
0000000000022544	mvn	w9, w9
0000000000022548	cmp	w10, #0x9
000000000002254c	b.ge	0x22598
0000000000022550	cmp	w10, #0x2
0000000000022554	b.lt	0x22618
0000000000022558	mov	x10, #0x0
000000000002255c	mov	x11, x8
0000000000022560	ldr	w12, [x11]
0000000000022564	cmp	w12, #0x23
0000000000022568	b.gt	0x22690
000000000002256c	add	x10, x10, #0x1
0000000000022570	add	x11, x11, #0x10
0000000000022574	cmp	x9, x10
0000000000022578	b.ne	0x22560
000000000002257c	mov	x10, x9
0000000000022580	sxtw	x9, w10
0000000000022584	lsl	x9, x9, #4
0000000000022588	ldr	w8, [x8, x9]
000000000002258c	cmp	w8, #0x24
0000000000022590	b.eq	0x224f4
0000000000022594	b	0x22630
0000000000022598	mov	w10, #0x0
000000000002259c	add	w11, w9, w10
00000000000225a0	cmp	w11, #0x0
00000000000225a4	cinc	w11, w11, lt
00000000000225a8	asr	w11, w11, #1
00000000000225ac	sbfiz	x12, x11, #4, #32
00000000000225b0	ldr	w12, [x8, x12]
00000000000225b4	cmp	w12, #0x24
00000000000225b8	csinc	w10, w10, w11, ge
00000000000225bc	csel	w9, w9, w11, lt
00000000000225c0	cmp	w10, w9
00000000000225c4	b.lt	0x2259c
00000000000225c8	b	0x2261c
00000000000225cc	neg	w10, w9
00000000000225d0	mvn	w9, w9
00000000000225d4	cmp	w10, #0x9
00000000000225d8	ldr	x26, [sp]
00000000000225dc	add	x23, sp, #0x10
00000000000225e0	b.ge	0x2265c
00000000000225e4	cmp	w10, #0x2
00000000000225e8	b.lt	0x226c0
00000000000225ec	mov	x10, #0x0
00000000000225f0	mov	x11, x8
00000000000225f4	ldr	w12, [x11]
00000000000225f8	cmp	w12, #0x2a
00000000000225fc	b.gt	0x226c8
0000000000022600	add	x10, x10, #0x1
0000000000022604	add	x11, x11, #0x10
0000000000022608	cmp	x9, x10
000000000002260c	b.ne	0x225f4
0000000000022610	mov	x10, x9
0000000000022614	b	0x226c8
0000000000022618	mov	w10, #0x0
000000000002261c	sxtw	x9, w10
0000000000022620	lsl	x9, x9, #4
0000000000022624	ldr	w8, [x8, x9]
0000000000022628	cmp	w8, #0x24
000000000002262c	b.eq	0x224f4
0000000000022630	adr	x1, #0x38f30
0000000000022634	nop
0000000000022638	mov	x0, x20
000000000002263c	bl	_ThrowClassCastException
0000000000022640	mov	w10, #0x0
0000000000022644	sxtw	x9, w10
0000000000022648	lsl	x9, x9, #4
000000000002264c	ldr	w8, [x8, x9]
0000000000022650	cmp	w8, #0xb8
0000000000022654	b.eq	0x22144
0000000000022658	b	0x224c4
000000000002265c	mov	w10, #0x0
0000000000022660	add	w11, w9, w10
0000000000022664	cmp	w11, #0x0
0000000000022668	cinc	w11, w11, lt
000000000002266c	asr	w11, w11, #1
0000000000022670	sbfiz	x12, x11, #4, #32
0000000000022674	ldr	w12, [x8, x12]
0000000000022678	cmp	w12, #0x2b
000000000002267c	csinc	w10, w10, w11, ge
0000000000022680	csel	w9, w9, w11, lt
0000000000022684	cmp	w10, w9
0000000000022688	b.lt	0x22660
000000000002268c	b	0x226c8
0000000000022690	sxtw	x9, w10
0000000000022694	lsl	x9, x9, #4
0000000000022698	ldr	w8, [x8, x9]
000000000002269c	cmp	w8, #0x24
00000000000226a0	b.eq	0x224f4
00000000000226a4	b	0x22630
00000000000226a8	sxtw	x9, w10
00000000000226ac	lsl	x9, x9, #4
00000000000226b0	ldr	w8, [x8, x9]
00000000000226b4	cmp	w8, #0xb8
00000000000226b8	b.ne	0x224c4
00000000000226bc	b	0x22144
00000000000226c0	mov	w10, #0x0
00000000000226c4	b	0x226c8
00000000000226c8	sxtw	x9, w10
00000000000226cc	add	x8, x8, x9, lsl #4
00000000000226d0	ldr	x8, [x8, #0x8]
00000000000226d4	ldr	x8, [x8]
00000000000226d8	mov	x0, x20
00000000000226dc	blr	x8
00000000000226e0	cmp	w22, w0
00000000000226e4	b.ge	0x22708
00000000000226e8	mov	x0, x20
00000000000226ec	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0ยง<kotlin.Any?>}kotlin.Int"
00000000000226f0	cmp	w22, w0
00000000000226f4	b.le	0x22718
00000000000226f8	mov	w8, #0x1
00000000000226fc	adrp	x22, 74 ; 0x6c000
0000000000022700	add	x22, x22, #0xbb0
0000000000022704	b	0x22508
0000000000022708	mov	w8, #0x0
000000000002270c	adrp	x22, 74 ; 0x6c000
0000000000022710	add	x22, x22, #0xbb0
0000000000022714	b	0x22508
0000000000022718	mov	x21, x0
000000000002271c	add	x23, x23, #0x30
0000000000022720	mov	w24, #0x16
0000000000022724	b	0x22770
0000000000022728	sub	w25, w21, #0x1
000000000002272c	ldr	x8, [x20]
0000000000022730	and	x8, x8, #0xfffffffffffffffc
0000000000022734	ldr	x8, [x8]
0000000000022738	ldr	w9, [x8, #0x3c]
000000000002273c	ldr	x8, [x8, #0x40]
0000000000022740	tbnz	w9, #0x1f, 0x22780
0000000000022744	and	x9, x9, x24
0000000000022748	add	x8, x8, x9, lsl #4
000000000002274c	ldr	x8, [x8, #0x8]
0000000000022750	ldr	x8, [x8, #0x48]
0000000000022754	mov	x0, x20
0000000000022758	mov	x1, x21
000000000002275c	mov	x2, x23
0000000000022760	blr	x8
0000000000022764	cmp	w21, w22
0000000000022768	mov	x21, x25
000000000002276c	b.eq	0x226f8
0000000000022770	ldarb	w8, [x19]
0000000000022774	tbz	w8, #0x0, 0x22728
0000000000022778	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002277c	b	0x22728
0000000000022780	neg	w10, w9
0000000000022784	mvn	w9, w9
0000000000022788	cmp	w10, #0x9
000000000002278c	b.ge	0x227c8
0000000000022790	cmp	w10, #0x2
0000000000022794	b.lt	0x227fc
0000000000022798	mov	x10, #0x0
000000000002279c	mov	x11, x8
00000000000227a0	ldr	w12, [x11]
00000000000227a4	cmp	w12, #0x15
00000000000227a8	b.gt	0x22808
00000000000227ac	add	x10, x10, #0x1
00000000000227b0	add	x11, x11, #0x10
00000000000227b4	cmp	x9, x10
00000000000227b8	b.ne	0x227a0
00000000000227bc	mov	x10, x9
00000000000227c0	sxtw	x9, w10
00000000000227c4	b	0x22748
00000000000227c8	mov	w10, #0x0
00000000000227cc	add	w11, w9, w10
00000000000227d0	cmp	w11, #0x0
00000000000227d4	cinc	w11, w11, lt
00000000000227d8	asr	w11, w11, #1
00000000000227dc	sbfiz	x12, x11, #4, #32
00000000000227e0	ldr	w12, [x8, x12]
00000000000227e4	cmp	w12, #0x16
00000000000227e8	csinc	w10, w10, w11, ge
00000000000227ec	csel	w9, w9, w11, lt
00000000000227f0	cmp	w10, w9
00000000000227f4	b.lt	0x227cc
00000000000227f8	b	0x22808
00000000000227fc	mov	w10, #0x0
0000000000022800	sxtw	x9, w10
0000000000022804	b	0x22748
0000000000022808	sxtw	x9, w10
000000000002280c	b	0x22748
_kfun:kotlin.collections.filterInPlace#internal.14:
0000000000022810	sub	sp, sp, #0x90
0000000000022814	stp	x28, x27, [sp, #0x30]
0000000000022818	stp	x26, x25, [sp, #0x40]
000000000002281c	stp	x24, x23, [sp, #0x50]
0000000000022820	stp	x22, x21, [sp, #0x60]
0000000000022824	stp	x20, x19, [sp, #0x70]
0000000000022828	stp	x29, x30, [sp, #0x80]
000000000002282c	add	x29, sp, #0x80
0000000000022830	mov	x19, x2
0000000000022834	mov	x20, x1
0000000000022838	mov	x23, x0
000000000002283c	movi.16b	v0, #0x0
0000000000022840	stp	q0, q0, [sp]
0000000000022844	str	q0, [sp, #0x20]
0000000000022848	mov	x22, sp
000000000002284c	add	x24, x22, #0x18
0000000000022850	adrp	x0, 74 ; 0x6c000
0000000000022854	add	x0, x0, #0xbb0
0000000000022858	ldr	x8, [x0]
000000000002285c	blr	x8
0000000000022860	ldr	x25, [x0]
0000000000022864	ldr	x8, [x25, #0x110]
0000000000022868	str	x22, [x25, #0x110]
000000000002286c	mov	x9, #0x600000000
0000000000022870	stp	x8, x9, [sp, #0x8]
0000000000022874	adr	x26, #0x641cf
0000000000022878	nop
000000000002287c	ldarb	w8, [x26]
0000000000022880	tbz	w8, #0x0, 0x22888
0000000000022884	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022888	add	x21, x22, #0x20
000000000002288c	add	x22, x22, #0x28
0000000000022890	ldr	x8, [x23]
0000000000022894	and	x8, x8, #0xfffffffffffffffc
0000000000022898	ldr	x8, [x8]
000000000002289c	ldr	w9, [x8, #0x3c]
00000000000228a0	ldr	x8, [x8, #0x40]
00000000000228a4	tbnz	w9, #0x1f, 0x228b4
00000000000228a8	mov	w10, #0x24
00000000000228ac	and	x9, x9, x10
00000000000228b0	b	0x22938
00000000000228b4	neg	w10, w9
00000000000228b8	mvn	w9, w9
00000000000228bc	cmp	w10, #0x9
00000000000228c0	b.ge	0x228f8
00000000000228c4	cmp	w10, #0x2
00000000000228c8	b.lt	0x2292c
00000000000228cc	mov	x10, #0x0
00000000000228d0	mov	x11, x8
00000000000228d4	ldr	w12, [x11]
00000000000228d8	cmp	w12, #0x23
00000000000228dc	b.gt	0x22934
00000000000228e0	add	x10, x10, #0x1
00000000000228e4	add	x11, x11, #0x10
00000000000228e8	cmp	x9, x10
00000000000228ec	b.ne	0x228d4
00000000000228f0	mov	x10, x9
00000000000228f4	b	0x22934
00000000000228f8	mov	w10, #0x0
00000000000228fc	add	w11, w9, w10
0000000000022900	cmp	w11, #0x0
0000000000022904	cinc	w11, w11, lt
0000000000022908	asr	w11, w11, #1
000000000002290c	sbfiz	x12, x11, #4, #32
0000000000022910	ldr	w12, [x8, x12]
0000000000022914	cmp	w12, #0x24
0000000000022918	csinc	w10, w10, w11, ge
000000000002291c	csel	w9, w9, w11, lt
0000000000022920	cmp	w10, w9
0000000000022924	b.lt	0x228fc
0000000000022928	b	0x22934
000000000002292c	mov	w10, #0x0
0000000000022930	b	0x22934
0000000000022934	sxtw	x9, w10
0000000000022938	add	x8, x8, x9, lsl #4
000000000002293c	ldr	x8, [x8, #0x8]
0000000000022940	ldr	x8, [x8]
0000000000022944	mov	x0, x23
0000000000022948	mov	x1, x24
000000000002294c	blr	x8
0000000000022950	mov	x23, x0
0000000000022954	mov	w28, #0x0
0000000000022958	mov	w24, #0xa0
000000000002295c	mov	w27, #0x2c
0000000000022960	ldr	x8, [x23]
0000000000022964	and	x8, x8, #0xfffffffffffffffc
0000000000022968	ldr	x8, [x8]
000000000002296c	ldr	w9, [x8, #0x3c]
0000000000022970	ldr	x8, [x8, #0x40]
0000000000022974	tbz	w9, #0x1f, 0x229bc
0000000000022978	b	0x22ab4
000000000002297c	and	x9, x9, x27
0000000000022980	add	x8, x8, x9, lsl #4
0000000000022984	ldr	x8, [x8, #0x8]
0000000000022988	ldr	x8, [x8]
000000000002298c	mov	x0, x20
0000000000022990	mov	x2, x22
0000000000022994	blr	x8
0000000000022998	ldrb	w8, [x0, #0x8]
000000000002299c	cmp	w8, w19
00000000000229a0	b.eq	0x229dc
00000000000229a4	ldr	x8, [x23]
00000000000229a8	and	x8, x8, #0xfffffffffffffffc
00000000000229ac	ldr	x8, [x8]
00000000000229b0	ldr	w9, [x8, #0x3c]
00000000000229b4	ldr	x8, [x8, #0x40]
00000000000229b8	tbnz	w9, #0x1f, 0x22ab4
00000000000229bc	and	x9, x9, x24
00000000000229c0	add	x8, x8, x9, lsl #4
00000000000229c4	ldr	x8, [x8, #0x8]
00000000000229c8	ldr	x8, [x8]
00000000000229cc	mov	x0, x23
00000000000229d0	blr	x8
00000000000229d4	tbnz	w0, #0x0, 0x22b50
00000000000229d8	b	0x22cbc
00000000000229dc	ldr	x8, [x23]
00000000000229e0	and	x8, x8, #0xfffffffffffffffc
00000000000229e4	ldr	x8, [x8]
00000000000229e8	ldr	w9, [x8, #0x3c]
00000000000229ec	ldr	x8, [x8, #0x40]
00000000000229f0	tbnz	w9, #0x1f, 0x22a00
00000000000229f4	mov	w10, #0x39
00000000000229f8	and	x9, x9, x10
00000000000229fc	b	0x22a84
0000000000022a00	neg	w10, w9
0000000000022a04	mvn	w9, w9
0000000000022a08	cmp	w10, #0x9
0000000000022a0c	b.ge	0x22a44
0000000000022a10	cmp	w10, #0x2
0000000000022a14	b.lt	0x22a78
0000000000022a18	mov	x10, #0x0
0000000000022a1c	mov	x11, x8
0000000000022a20	ldr	w12, [x11]
0000000000022a24	cmp	w12, #0x38
0000000000022a28	b.gt	0x22a80
0000000000022a2c	add	x10, x10, #0x1
0000000000022a30	add	x11, x11, #0x10
0000000000022a34	cmp	x9, x10
0000000000022a38	b.ne	0x22a20
0000000000022a3c	mov	x10, x9
0000000000022a40	b	0x22a80
0000000000022a44	mov	w10, #0x0
0000000000022a48	add	w11, w9, w10
0000000000022a4c	cmp	w11, #0x0
0000000000022a50	cinc	w11, w11, lt
0000000000022a54	asr	w11, w11, #1
0000000000022a58	sbfiz	x12, x11, #4, #32
0000000000022a5c	ldr	w12, [x8, x12]
0000000000022a60	cmp	w12, #0x39
0000000000022a64	csinc	w10, w10, w11, ge
0000000000022a68	csel	w9, w9, w11, lt
0000000000022a6c	cmp	w10, w9
0000000000022a70	b.lt	0x22a48
0000000000022a74	b	0x22a80
0000000000022a78	mov	w10, #0x0
0000000000022a7c	b	0x22a80
0000000000022a80	sxtw	x9, w10
0000000000022a84	add	x8, x8, x9, lsl #4
0000000000022a88	ldr	x8, [x8, #0x8]
0000000000022a8c	ldr	x8, [x8]
0000000000022a90	mov	x0, x23
0000000000022a94	blr	x8
0000000000022a98	mov	w28, #0x1
0000000000022a9c	ldr	x8, [x23]
0000000000022aa0	and	x8, x8, #0xfffffffffffffffc
0000000000022aa4	ldr	x8, [x8]
0000000000022aa8	ldr	w9, [x8, #0x3c]
0000000000022aac	ldr	x8, [x8, #0x40]
0000000000022ab0	tbz	w9, #0x1f, 0x229bc
0000000000022ab4	neg	w10, w9
0000000000022ab8	mvn	w9, w9
0000000000022abc	cmp	w10, #0x9
0000000000022ac0	b.ge	0x22af8
0000000000022ac4	cmp	w10, #0x2
0000000000022ac8	b.lt	0x22b2c
0000000000022acc	mov	x10, #0x0
0000000000022ad0	mov	x11, x8
0000000000022ad4	ldr	w12, [x11]
0000000000022ad8	cmp	w12, #0x9f
0000000000022adc	b.gt	0x22b34
0000000000022ae0	add	x10, x10, #0x1
0000000000022ae4	add	x11, x11, #0x10
0000000000022ae8	cmp	x9, x10
0000000000022aec	b.ne	0x22ad4
0000000000022af0	mov	x10, x9
0000000000022af4	b	0x22b34
0000000000022af8	mov	w10, #0x0
0000000000022afc	add	w11, w9, w10
0000000000022b00	cmp	w11, #0x0
0000000000022b04	cinc	w11, w11, lt
0000000000022b08	asr	w11, w11, #1
0000000000022b0c	sbfiz	x12, x11, #4, #32
0000000000022b10	ldr	w12, [x8, x12]
0000000000022b14	cmp	w12, #0xa0
0000000000022b18	csinc	w10, w10, w11, ge
0000000000022b1c	csel	w9, w9, w11, lt
0000000000022b20	cmp	w10, w9
0000000000022b24	b.lt	0x22afc
0000000000022b28	b	0x22b34
0000000000022b2c	mov	w10, #0x0
0000000000022b30	b	0x22b34
0000000000022b34	sxtw	x9, w10
0000000000022b38	add	x8, x8, x9, lsl #4
0000000000022b3c	ldr	x8, [x8, #0x8]
0000000000022b40	ldr	x8, [x8]
0000000000022b44	mov	x0, x23
0000000000022b48	blr	x8
0000000000022b4c	tbz	w0, #0x0, 0x22cbc
0000000000022b50	ldarb	w8, [x26]
0000000000022b54	tbz	w8, #0x0, 0x22b5c
0000000000022b58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022b5c	ldr	x8, [x23]
0000000000022b60	and	x8, x8, #0xfffffffffffffffc
0000000000022b64	ldr	x8, [x8]
0000000000022b68	ldr	w9, [x8, #0x3c]
0000000000022b6c	ldr	x8, [x8, #0x40]
0000000000022b70	tbnz	w9, #0x1f, 0x22b7c
0000000000022b74	and	x9, x9, x24
0000000000022b78	b	0x22c00
0000000000022b7c	neg	w10, w9
0000000000022b80	mvn	w9, w9
0000000000022b84	cmp	w10, #0x9
0000000000022b88	b.ge	0x22bc0
0000000000022b8c	cmp	w10, #0x2
0000000000022b90	b.lt	0x22bf4
0000000000022b94	mov	x10, #0x0
0000000000022b98	mov	x11, x8
0000000000022b9c	ldr	w12, [x11]
0000000000022ba0	cmp	w12, #0x9f
0000000000022ba4	b.gt	0x22bfc
0000000000022ba8	add	x10, x10, #0x1
0000000000022bac	add	x11, x11, #0x10
0000000000022bb0	cmp	x9, x10
0000000000022bb4	b.ne	0x22b9c
0000000000022bb8	mov	x10, x9
0000000000022bbc	b	0x22bfc
0000000000022bc0	mov	w10, #0x0
0000000000022bc4	add	w11, w9, w10
0000000000022bc8	cmp	w11, #0x0
0000000000022bcc	cinc	w11, w11, lt
0000000000022bd0	asr	w11, w11, #1
0000000000022bd4	sbfiz	x12, x11, #4, #32
0000000000022bd8	ldr	w12, [x8, x12]
0000000000022bdc	cmp	w12, #0xa0
0000000000022be0	csinc	w10, w10, w11, ge
0000000000022be4	csel	w9, w9, w11, lt
0000000000022be8	cmp	w10, w9
0000000000022bec	b.lt	0x22bc4
0000000000022bf0	b	0x22bfc
0000000000022bf4	mov	w10, #0x0
0000000000022bf8	b	0x22bfc
0000000000022bfc	sxtw	x9, w10
0000000000022c00	add	x8, x8, x9, lsl #4
0000000000022c04	ldr	x8, [x8, #0x8]
0000000000022c08	ldr	x8, [x8, #0x8]
0000000000022c0c	mov	x0, x23
0000000000022c10	mov	x1, x21
0000000000022c14	blr	x8
0000000000022c18	mov	x1, x0
0000000000022c1c	ldr	x8, [x20]
0000000000022c20	and	x8, x8, #0xfffffffffffffffc
0000000000022c24	ldr	x8, [x8]
0000000000022c28	ldr	w9, [x8, #0x3c]
0000000000022c2c	ldr	x8, [x8, #0x40]
0000000000022c30	tbz	w9, #0x1f, 0x2297c
0000000000022c34	neg	w10, w9
0000000000022c38	mvn	w9, w9
0000000000022c3c	cmp	w10, #0x9
0000000000022c40	b.ge	0x22c78
0000000000022c44	cmp	w10, #0x2
0000000000022c48	b.lt	0x22cac
0000000000022c4c	mov	x10, #0x0
0000000000022c50	mov	x11, x8
0000000000022c54	ldr	w12, [x11]
0000000000022c58	cmp	w12, #0x2b
0000000000022c5c	b.gt	0x22cb4
0000000000022c60	add	x10, x10, #0x1
0000000000022c64	add	x11, x11, #0x10
0000000000022c68	cmp	x9, x10
0000000000022c6c	b.ne	0x22c54
0000000000022c70	mov	x10, x9
0000000000022c74	b	0x22cb4
0000000000022c78	mov	w10, #0x0
0000000000022c7c	add	w11, w9, w10
0000000000022c80	cmp	w11, #0x0
0000000000022c84	cinc	w11, w11, lt
0000000000022c88	asr	w11, w11, #1
0000000000022c8c	sbfiz	x12, x11, #4, #32
0000000000022c90	ldr	w12, [x8, x12]
0000000000022c94	cmp	w12, #0x2c
0000000000022c98	csinc	w10, w10, w11, ge
0000000000022c9c	csel	w9, w9, w11, lt
0000000000022ca0	cmp	w10, w9
0000000000022ca4	b.lt	0x22c7c
0000000000022ca8	b	0x22cb4
0000000000022cac	mov	w10, #0x0
0000000000022cb0	b	0x22cb4
0000000000022cb4	sxtw	x9, w10
0000000000022cb8	b	0x22980
0000000000022cbc	ldr	x8, [sp, #0x8]
0000000000022cc0	str	x8, [x25, #0x110]
0000000000022cc4	and	w0, w28, #0x1
0000000000022cc8	ldp	x29, x30, [sp, #0x80]
0000000000022ccc	ldp	x20, x19, [sp, #0x70]
0000000000022cd0	ldp	x22, x21, [sp, #0x60]
0000000000022cd4	ldp	x24, x23, [sp, #0x50]
0000000000022cd8	ldp	x26, x25, [sp, #0x40]
0000000000022cdc	ldp	x28, x27, [sp, #0x30]
0000000000022ce0	add	sp, sp, #0x90
0000000000022ce4	ret
_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal:
0000000000022ce8	sub	sp, sp, #0x70
0000000000022cec	stp	x22, x21, [sp, #0x40]
0000000000022cf0	stp	x20, x19, [sp, #0x50]
0000000000022cf4	stp	x29, x30, [sp, #0x60]
0000000000022cf8	add	x29, sp, #0x60
0000000000022cfc	mov	x19, x1
0000000000022d00	mov	x20, x0
0000000000022d04	movi.16b	v0, #0x0
0000000000022d08	stp	q0, q0, [sp]
0000000000022d0c	stp	q0, q0, [sp, #0x20]
0000000000022d10	mov	x22, sp
0000000000022d14	adrp	x0, 74 ; 0x6c000
0000000000022d18	add	x0, x0, #0xbb0
0000000000022d1c	ldr	x8, [x0]
0000000000022d20	blr	x8
0000000000022d24	ldr	x21, [x0]
0000000000022d28	ldr	x8, [x21, #0x110]
0000000000022d2c	str	x22, [x21, #0x110]
0000000000022d30	mov	x9, #0x800000000
0000000000022d34	stp	x8, x9, [sp, #0x8]
0000000000022d38	adr	x8, #0x63d0b
0000000000022d3c	nop
0000000000022d40	ldarb	w8, [x8]
0000000000022d44	tbz	w8, #0x0, 0x22d4c
0000000000022d48	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022d4c	ldr	x0, [x20, #0x10]
0000000000022d50	stp	x0, x0, [sp, #0x18]
0000000000022d54	str	x0, [sp, #0x28]
0000000000022d58	cbnz	x0, 0x22e28
0000000000022d5c	add	x1, x22, #0x30
0000000000022d60	ldr	x0, [x20, #0x8]
0000000000022d64	ldr	x8, [x0]
0000000000022d68	and	x8, x8, #0xfffffffffffffffc
0000000000022d6c	ldr	x8, [x8]
0000000000022d70	ldr	w9, [x8, #0x3c]
0000000000022d74	ldr	x8, [x8, #0x40]
0000000000022d78	tbnz	w9, #0x1f, 0x22d88
0000000000022d7c	mov	w10, #0x59
0000000000022d80	and	x9, x9, x10
0000000000022d84	b	0x22e0c
0000000000022d88	neg	w10, w9
0000000000022d8c	mvn	w9, w9
0000000000022d90	cmp	w10, #0x9
0000000000022d94	b.ge	0x22dcc
0000000000022d98	cmp	w10, #0x2
0000000000022d9c	b.lt	0x22e00
0000000000022da0	mov	x10, #0x0
0000000000022da4	mov	x11, x8
0000000000022da8	ldr	w12, [x11]
0000000000022dac	cmp	w12, #0x58
0000000000022db0	b.gt	0x22e08
0000000000022db4	add	x10, x10, #0x1
0000000000022db8	add	x11, x11, #0x10
0000000000022dbc	cmp	x9, x10
0000000000022dc0	b.ne	0x22da8
0000000000022dc4	mov	x10, x9
0000000000022dc8	b	0x22e08
0000000000022dcc	mov	w10, #0x0
0000000000022dd0	add	w11, w9, w10
0000000000022dd4	cmp	w11, #0x0
0000000000022dd8	cinc	w11, w11, lt
0000000000022ddc	asr	w11, w11, #1
0000000000022de0	sbfiz	x12, x11, #4, #32
0000000000022de4	ldr	w12, [x8, x12]
0000000000022de8	cmp	w12, #0x59
0000000000022dec	csinc	w10, w10, w11, ge
0000000000022df0	csel	w9, w9, w11, lt
0000000000022df4	cmp	w10, w9
0000000000022df8	b.lt	0x22dd0
0000000000022dfc	b	0x22e08
0000000000022e00	mov	w10, #0x0
0000000000022e04	b	0x22e08
0000000000022e08	sxtw	x9, w10
0000000000022e0c	add	x8, x8, x9, lsl #4
0000000000022e10	ldr	x8, [x8, #0x8]
0000000000022e14	ldr	x8, [x8]
0000000000022e18	blr	x8
0000000000022e1c	str	x0, [sp, #0x20]
0000000000022e20	str	x0, [sp, #0x38]
0000000000022e24	str	x0, [x20, #0x10]
0000000000022e28	str	x0, [x19]
0000000000022e2c	ldr	x8, [sp, #0x8]
0000000000022e30	str	x8, [x21, #0x110]
0000000000022e34	ldp	x29, x30, [sp, #0x60]
0000000000022e38	ldp	x20, x19, [sp, #0x50]
0000000000022e3c	ldp	x22, x21, [sp, #0x40]
0000000000022e40	add	sp, sp, #0x70
0000000000022e44	ret
_kfun:kotlin.enums.EnumEntriesList.<get-size>#internal:
0000000000022e48	sub	sp, sp, #0x50
0000000000022e4c	stp	x22, x21, [sp, #0x20]
0000000000022e50	stp	x20, x19, [sp, #0x30]
0000000000022e54	stp	x29, x30, [sp, #0x40]
0000000000022e58	add	x29, sp, #0x40
0000000000022e5c	mov	x19, x0
0000000000022e60	movi.16b	v0, #0x0
0000000000022e64	stp	q0, q0, [sp]
0000000000022e68	mov	x8, sp
0000000000022e6c	add	x20, x8, #0x18
0000000000022e70	adrp	x0, 74 ; 0x6c000
0000000000022e74	add	x0, x0, #0xbb0
0000000000022e78	ldr	x9, [x0]
0000000000022e7c	blr	x9
0000000000022e80	ldr	x21, [x0]
0000000000022e84	ldr	x9, [x21, #0x110]
0000000000022e88	str	x8, [x21, #0x110]
0000000000022e8c	mov	x8, #0x400000000
0000000000022e90	stp	x9, x8, [sp, #0x8]
0000000000022e94	adr	x8, #0x63baf
0000000000022e98	nop
0000000000022e9c	ldarb	w8, [x8]
0000000000022ea0	tbz	w8, #0x0, 0x22ea8
0000000000022ea4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022ea8	mov	x0, x19
0000000000022eac	mov	x1, x20
0000000000022eb0	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000022eb4	ldr	w0, [x0, #0x8]
0000000000022eb8	ldr	x8, [sp, #0x8]
0000000000022ebc	str	x8, [x21, #0x110]
0000000000022ec0	ldp	x29, x30, [sp, #0x40]
0000000000022ec4	ldp	x20, x19, [sp, #0x30]
0000000000022ec8	ldp	x22, x21, [sp, #0x20]
0000000000022ecc	add	sp, sp, #0x50
0000000000022ed0	ret
_kfun:kotlin.enums.EnumEntriesList.get#internal:
0000000000022ed4	sub	sp, sp, #0x60
0000000000022ed8	stp	x24, x23, [sp, #0x20]
0000000000022edc	stp	x22, x21, [sp, #0x30]
0000000000022ee0	stp	x20, x19, [sp, #0x40]
0000000000022ee4	stp	x29, x30, [sp, #0x50]
0000000000022ee8	add	x29, sp, #0x50
0000000000022eec	mov	x19, x2
0000000000022ef0	mov	x20, x1
0000000000022ef4	mov	x21, x0
0000000000022ef8	movi.16b	v0, #0x0
0000000000022efc	stp	q0, q0, [sp]
0000000000022f00	mov	x8, sp
0000000000022f04	add	x22, x8, #0x18
0000000000022f08	adrp	x0, 74 ; 0x6c000
0000000000022f0c	add	x0, x0, #0xbb0
0000000000022f10	ldr	x9, [x0]
0000000000022f14	blr	x9
0000000000022f18	ldr	x23, [x0]
0000000000022f1c	ldr	x9, [x23, #0x110]
0000000000022f20	str	x8, [x23, #0x110]
0000000000022f24	mov	x8, #0x400000000
0000000000022f28	stp	x9, x8, [sp, #0x8]
0000000000022f2c	adr	x8, #0x63b17
0000000000022f30	nop
0000000000022f34	ldarb	w8, [x8]
0000000000022f38	tbz	w8, #0x0, 0x22f40
0000000000022f3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022f40	mov	x0, x21
0000000000022f44	mov	x1, x22
0000000000022f48	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000022f4c	mov	x21, x0
0000000000022f50	ldr	w1, [x0, #0x8]
0000000000022f54	mov	x0, x20
0000000000022f58	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
0000000000022f5c	ldr	w8, [x21, #0x8]
0000000000022f60	cmp	w8, w20
0000000000022f64	b.ls	0x22f94
0000000000022f68	add	x8, x21, w20, sxtw #3
0000000000022f6c	ldr	x0, [x8, #0x10]
0000000000022f70	str	x0, [x19]
0000000000022f74	ldr	x8, [sp, #0x8]
0000000000022f78	str	x8, [x23, #0x110]
0000000000022f7c	ldp	x29, x30, [sp, #0x50]
0000000000022f80	ldp	x20, x19, [sp, #0x40]
0000000000022f84	ldp	x22, x21, [sp, #0x30]
0000000000022f88	ldp	x24, x23, [sp, #0x20]
0000000000022f8c	add	sp, sp, #0x60
0000000000022f90	ret
0000000000022f94	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.enums.EnumEntriesList.contains#internal:
0000000000022f98	sub	sp, sp, #0x70
0000000000022f9c	stp	x24, x23, [sp, #0x30]
0000000000022fa0	stp	x22, x21, [sp, #0x40]
0000000000022fa4	stp	x20, x19, [sp, #0x50]
0000000000022fa8	stp	x29, x30, [sp, #0x60]
0000000000022fac	add	x29, sp, #0x60
0000000000022fb0	mov	x19, x1
0000000000022fb4	mov	x20, x0
0000000000022fb8	movi.16b	v0, #0x0
0000000000022fbc	stp	q0, q0, [sp]
0000000000022fc0	str	xzr, [sp, #0x20]
0000000000022fc4	mov	x23, sp
0000000000022fc8	adrp	x0, 74 ; 0x6c000
0000000000022fcc	add	x0, x0, #0xbb0
0000000000022fd0	ldr	x8, [x0]
0000000000022fd4	blr	x8
0000000000022fd8	ldr	x22, [x0]
0000000000022fdc	ldr	x8, [x22, #0x110]
0000000000022fe0	str	x23, [x22, #0x110]
0000000000022fe4	mov	x9, #0x500000000
0000000000022fe8	stp	x8, x9, [sp, #0x8]
0000000000022fec	adr	x8, #0x63a57
0000000000022ff0	nop
0000000000022ff4	ldarb	w8, [x8]
0000000000022ff8	tbz	w8, #0x0, 0x23000
0000000000022ffc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023000	cbz	x19, 0x23020
0000000000023004	ldr	x8, [x19]
0000000000023008	and	x8, x8, #0xfffffffffffffffc
000000000002300c	ldr	x8, [x8]
0000000000023010	ldr	w8, [x8, #0x5c]
0000000000023014	sub	w8, w8, #0x57
0000000000023018	cmp	w8, #0xe
000000000002301c	b.ls	0x23028
0000000000023020	mov	w0, #0x0
0000000000023024	b	0x2304c
0000000000023028	add	x21, x23, #0x20
000000000002302c	add	x1, x23, #0x18
0000000000023030	mov	x0, x20
0000000000023034	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000023038	ldr	w1, [x19, #0x10]
000000000002303c	mov	x2, x21
0000000000023040	bl	"_kfun:kotlin.collections#getOrNull__at__kotlin.Array<out|0:0>(kotlin.Int){0ยง<kotlin.Any?>}0:0?"
0000000000023044	cmp	x0, x19
0000000000023048	cset	w0, eq
000000000002304c	ldr	x8, [sp, #0x8]
0000000000023050	str	x8, [x22, #0x110]
0000000000023054	ldp	x29, x30, [sp, #0x60]
0000000000023058	ldp	x20, x19, [sp, #0x50]
000000000002305c	ldp	x22, x21, [sp, #0x40]
0000000000023060	ldp	x24, x23, [sp, #0x30]
0000000000023064	add	sp, sp, #0x70
0000000000023068	ret
_kfun:kotlin.enums.EnumEntriesList.indexOf#internal:
000000000002306c	sub	sp, sp, #0x70
0000000000023070	stp	x24, x23, [sp, #0x30]
0000000000023074	stp	x22, x21, [sp, #0x40]
0000000000023078	stp	x20, x19, [sp, #0x50]
000000000002307c	stp	x29, x30, [sp, #0x60]
0000000000023080	add	x29, sp, #0x60
0000000000023084	mov	x19, x1
0000000000023088	mov	x20, x0
000000000002308c	movi.16b	v0, #0x0
0000000000023090	stp	q0, q0, [sp]
0000000000023094	str	xzr, [sp, #0x20]
0000000000023098	mov	x22, sp
000000000002309c	adrp	x0, 73 ; 0x6c000
00000000000230a0	add	x0, x0, #0xbb0
00000000000230a4	ldr	x8, [x0]
00000000000230a8	blr	x8
00000000000230ac	ldr	x23, [x0]
00000000000230b0	ldr	x8, [x23, #0x110]
00000000000230b4	str	x22, [x23, #0x110]
00000000000230b8	mov	x9, #0x500000000
00000000000230bc	stp	x8, x9, [sp, #0x8]
00000000000230c0	adr	x8, #0x63983
00000000000230c4	nop
00000000000230c8	ldarb	w8, [x8]
00000000000230cc	tbz	w8, #0x0, 0x230d4
00000000000230d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000230d4	cbz	x19, 0x230f4
00000000000230d8	ldr	x8, [x19]
00000000000230dc	and	x8, x8, #0xfffffffffffffffc
00000000000230e0	ldr	x8, [x8]
00000000000230e4	ldr	w8, [x8, #0x5c]
00000000000230e8	sub	w8, w8, #0x57
00000000000230ec	cmp	w8, #0xe
00000000000230f0	b.ls	0x230fc
00000000000230f4	mov	w0, #-0x1
00000000000230f8	b	0x23124
00000000000230fc	add	x21, x22, #0x20
0000000000023100	add	x1, x22, #0x18
0000000000023104	ldr	w22, [x19, #0x10]
0000000000023108	mov	x0, x20
000000000002310c	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000023110	mov	x1, x22
0000000000023114	mov	x2, x21
0000000000023118	bl	"_kfun:kotlin.collections#getOrNull__at__kotlin.Array<out|0:0>(kotlin.Int){0ยง<kotlin.Any?>}0:0?"
000000000002311c	cmp	x0, x19
0000000000023120	csinv	w0, w22, wzr, eq
0000000000023124	ldr	x8, [sp, #0x8]
0000000000023128	str	x8, [x23, #0x110]
000000000002312c	ldp	x29, x30, [sp, #0x60]
0000000000023130	ldp	x20, x19, [sp, #0x50]
0000000000023134	ldp	x22, x21, [sp, #0x40]
0000000000023138	ldp	x24, x23, [sp, #0x30]
000000000002313c	add	sp, sp, #0x70
0000000000023140	ret
_kfun:kotlin.enums.EnumEntriesList.lastIndexOf#internal:
0000000000023144	stp	x20, x19, [sp, #-0x20]!
0000000000023148	stp	x29, x30, [sp, #0x10]
000000000002314c	add	x29, sp, #0x10
0000000000023150	mov	x19, x1
0000000000023154	mov	x20, x0
0000000000023158	adr	x8, #0x638eb
000000000002315c	nop
0000000000023160	ldarb	w8, [x8]
0000000000023164	tbz	w8, #0x0, 0x2316c
0000000000023168	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002316c	cbz	x19, 0x2318c
0000000000023170	ldr	x8, [x19]
0000000000023174	and	x8, x8, #0xfffffffffffffffc
0000000000023178	ldr	x8, [x8]
000000000002317c	ldr	w8, [x8, #0x5c]
0000000000023180	sub	w8, w8, #0x57
0000000000023184	cmp	w8, #0xe
0000000000023188	b.ls	0x2319c
000000000002318c	mov	w0, #-0x1
0000000000023190	ldp	x29, x30, [sp, #0x10]
0000000000023194	ldp	x20, x19, [sp], #0x20
0000000000023198	ret
000000000002319c	mov	x0, x20
00000000000231a0	mov	x1, x19
00000000000231a4	ldp	x29, x30, [sp, #0x10]
00000000000231a8	ldp	x20, x19, [sp], #0x20
00000000000231ac	b	"_kfun:kotlin.enums.EnumEntriesList.indexOf#internal"
_kfun:kotlin.enums#enumEntries(kotlin.Array<0:0>){0ยง<kotlin.Enum<0:0>>}kotlin.enums.EnumEntries<0:0>:
00000000000231b0	sub	sp, sp, #0x80
00000000000231b4	stp	x22, x21, [sp, #0x50]
00000000000231b8	stp	x20, x19, [sp, #0x60]
00000000000231bc	stp	x29, x30, [sp, #0x70]
00000000000231c0	add	x29, sp, #0x70
00000000000231c4	mov	x19, x1
00000000000231c8	mov	x20, x0
00000000000231cc	movi.16b	v0, #0x0
00000000000231d0	stp	q0, q0, [sp]
00000000000231d4	str	xzr, [sp, #0x20]
00000000000231d8	adrp	x0, 73 ; 0x6c000
00000000000231dc	add	x0, x0, #0xbb0
00000000000231e0	ldr	x8, [x0]
00000000000231e4	blr	x8
00000000000231e8	ldr	x22, [x0]
00000000000231ec	ldr	x8, [x22, #0x110]
00000000000231f0	mov	x9, sp
00000000000231f4	str	x9, [x22, #0x110]
00000000000231f8	mov	x9, #0x500000000
00000000000231fc	stp	x8, x9, [sp, #0x8]
0000000000023200	adr	x8, #0x63843
0000000000023204	nop
0000000000023208	ldarb	w8, [x8]
000000000002320c	tbz	w8, #0x0, 0x23214
0000000000023210	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023214	ldr	x8, [x22, #0x118]
0000000000023218	add	x0, x8, #0x70
000000000002321c	mov	w1, #0x18
0000000000023220	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000023224	mov	x21, x0
0000000000023228	adr	x8, #0x39918
000000000002322c	nop
0000000000023230	str	x8, [x21, #0x10]!
0000000000023234	stur	xzr, [x21, #-0x8]
0000000000023238	str	x21, [sp, #0x18]
000000000002323c	str	x20, [x21, #0x8]
0000000000023240	ldr	x8, [x22, #0x118]
0000000000023244	add	x0, x8, #0x70
0000000000023248	mov	w1, #0x20
000000000002324c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000023250	mov	x20, x0
0000000000023254	adr	x8, #0x397fc
0000000000023258	nop
000000000002325c	str	x8, [x20, #0x10]!
0000000000023260	stur	xzr, [x20, #-0x8]
0000000000023264	str	x20, [sp, #0x20]
0000000000023268	str	x21, [x20, #0x8]
000000000002326c	movi.16b	v0, #0x0
0000000000023270	stp	q0, q0, [sp, #0x30]
0000000000023274	add	x8, sp, #0x30
0000000000023278	add	x1, x8, #0x18
000000000002327c	ldr	x9, [x22, #0x110]
0000000000023280	str	x8, [x22, #0x110]
0000000000023284	mov	x8, #0x400000000
0000000000023288	stp	x9, x8, [sp, #0x38]
000000000002328c	mov	x0, x20
0000000000023290	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000023294	ldr	x8, [sp, #0x38]
0000000000023298	str	x8, [x22, #0x110]
000000000002329c	str	x20, [x19]
00000000000232a0	ldr	x8, [sp, #0x8]
00000000000232a4	str	x8, [x22, #0x110]
00000000000232a8	mov	x0, x20
00000000000232ac	ldp	x29, x30, [sp, #0x70]
00000000000232b0	ldp	x20, x19, [sp, #0x60]
00000000000232b4	ldp	x22, x21, [sp, #0x50]
00000000000232b8	add	sp, sp, #0x80
00000000000232bc	ret
_kfun:kotlin.enums.$enumEntries$lambda$0$FUNCTION_REFERENCE$21.invoke#internal:
00000000000232c0	stp	x20, x19, [sp, #-0x20]!
00000000000232c4	stp	x29, x30, [sp, #0x10]
00000000000232c8	add	x29, sp, #0x10
00000000000232cc	mov	x19, x1
00000000000232d0	mov	x20, x0
00000000000232d4	adr	x8, #0x6376f
00000000000232d8	nop
00000000000232dc	ldarb	w8, [x8]
00000000000232e0	tbz	w8, #0x0, 0x232e8
00000000000232e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000232e8	ldr	x0, [x20, #0x8]
00000000000232ec	str	x0, [x19]
00000000000232f0	ldp	x29, x30, [sp, #0x10]
00000000000232f4	ldp	x20, x19, [sp], #0x20
00000000000232f8	ret
_kfun:kotlin.text#substringAfterLast$default__at__kotlin.String(kotlin.Char;kotlin.String?;kotlin.Int){}kotlin.String:
00000000000232fc	stp	x22, x21, [sp, #-0x30]!
0000000000023300	stp	x20, x19, [sp, #0x10]
0000000000023304	stp	x29, x30, [sp, #0x20]
0000000000023308	add	x29, sp, #0x20
000000000002330c	mov	x19, x2
0000000000023310	mov	x21, x1
0000000000023314	mov	x20, x0
0000000000023318	adr	x8, #0x6372b
000000000002331c	nop
0000000000023320	ldarb	w8, [x8]
0000000000023324	tbz	w8, #0x0, 0x2332c
0000000000023328	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002332c	mov	x0, x20
0000000000023330	bl	"_kfun:kotlin.text#<get-lastIndex>__at__kotlin.CharSequence(){}kotlin.Int"
0000000000023334	mov	x2, x0
0000000000023338	mov	x0, x20
000000000002333c	mov	x1, x21
0000000000023340	bl	"_kfun:kotlin.text#lastIndexOf__at__kotlin.CharSequence(kotlin.Char;kotlin.Int;kotlin.Boolean){}kotlin.Int"
0000000000023344	cmn	w0, #0x1
0000000000023348	b.eq	0x2337c
000000000002334c	ldr	w2, [x20, #0x8]
0000000000023350	add	w1, w0, #0x1
0000000000023354	mov	x0, x20
0000000000023358	mov	x3, x19
000000000002335c	bl	_Kotlin_String_subSequence
0000000000023360	mov	x20, x0
0000000000023364	ldr	x8, [x0]
0000000000023368	and	x8, x8, #0xfffffffffffffffc
000000000002336c	ldr	x8, [x8]
0000000000023370	ldr	w8, [x8, #0x5c]
0000000000023374	cmp	w8, #0x75
0000000000023378	b.ne	0x23394
000000000002337c	str	x20, [x19]
0000000000023380	mov	x0, x20
0000000000023384	ldp	x29, x30, [sp, #0x20]
0000000000023388	ldp	x20, x19, [sp, #0x10]
000000000002338c	ldp	x22, x21, [sp], #0x30
0000000000023390	ret
0000000000023394	adr	x1, #0x3634c
0000000000023398	nop
000000000002339c	mov	x0, x20
00000000000233a0	bl	_ThrowClassCastException
_kfun:kotlin.text#<get-lastIndex>__at__kotlin.CharSequence(){}kotlin.Int:
00000000000233a4	stp	x20, x19, [sp, #-0x20]!
00000000000233a8	stp	x29, x30, [sp, #0x10]
00000000000233ac	add	x29, sp, #0x10
00000000000233b0	mov	x19, x0
00000000000233b4	adr	x8, #0x6368f
00000000000233b8	nop
00000000000233bc	ldarb	w8, [x8]
00000000000233c0	tbz	w8, #0x0, 0x233c8
00000000000233c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000233c8	ldr	x8, [x19]
00000000000233cc	and	x8, x8, #0xfffffffffffffffc
00000000000233d0	ldr	x8, [x8]
00000000000233d4	ldr	w9, [x8, #0x3c]
00000000000233d8	ldr	x8, [x8, #0x40]
00000000000233dc	tbnz	w9, #0x1f, 0x233ec
00000000000233e0	mov	w10, #0x19
00000000000233e4	and	x9, x9, x10
00000000000233e8	b	0x23470
00000000000233ec	neg	w10, w9
00000000000233f0	mvn	w9, w9
00000000000233f4	cmp	w10, #0x9
00000000000233f8	b.ge	0x23430
00000000000233fc	cmp	w10, #0x2
0000000000023400	b.lt	0x23464
0000000000023404	mov	x10, #0x0
0000000000023408	mov	x11, x8
000000000002340c	ldr	w12, [x11]
0000000000023410	cmp	w12, #0x18
0000000000023414	b.gt	0x2346c
0000000000023418	add	x10, x10, #0x1
000000000002341c	add	x11, x11, #0x10
0000000000023420	cmp	x9, x10
0000000000023424	b.ne	0x2340c
0000000000023428	mov	x10, x9
000000000002342c	b	0x2346c
0000000000023430	mov	w10, #0x0
0000000000023434	add	w11, w9, w10
0000000000023438	cmp	w11, #0x0
000000000002343c	cinc	w11, w11, lt
0000000000023440	asr	w11, w11, #1
0000000000023444	sbfiz	x12, x11, #4, #32
0000000000023448	ldr	w12, [x8, x12]
000000000002344c	cmp	w12, #0x19
0000000000023450	csinc	w10, w10, w11, ge
0000000000023454	csel	w9, w9, w11, lt
0000000000023458	cmp	w10, w9
000000000002345c	b.lt	0x23434
0000000000023460	b	0x2346c
0000000000023464	mov	w10, #0x0
0000000000023468	b	0x2346c
000000000002346c	sxtw	x9, w10
0000000000023470	add	x8, x8, x9, lsl #4
0000000000023474	ldr	x8, [x8, #0x8]
0000000000023478	ldr	x8, [x8]
000000000002347c	mov	x0, x19
0000000000023480	blr	x8
0000000000023484	sub	w0, w0, #0x1
0000000000023488	ldp	x29, x30, [sp, #0x10]
000000000002348c	ldp	x20, x19, [sp], #0x20
0000000000023490	ret
_kfun:kotlin.text#lastIndexOf__at__kotlin.CharSequence(kotlin.Char;kotlin.Int;kotlin.Boolean){}kotlin.Int:
0000000000023494	sub	sp, sp, #0xf0
0000000000023498	stp	x28, x27, [sp, #0x90]
000000000002349c	stp	x26, x25, [sp, #0xa0]
00000000000234a0	stp	x24, x23, [sp, #0xb0]
00000000000234a4	stp	x22, x21, [sp, #0xc0]
00000000000234a8	stp	x20, x19, [sp, #0xd0]
00000000000234ac	stp	x29, x30, [sp, #0xe0]
00000000000234b0	add	x29, sp, #0xe0
00000000000234b4	mov	x20, x2
00000000000234b8	mov	x21, x1
00000000000234bc	mov	x19, x0
00000000000234c0	movi.16b	v0, #0x0
00000000000234c4	stp	q0, q0, [sp, #0x20]
00000000000234c8	str	xzr, [sp, #0x50]
00000000000234cc	str	q0, [sp, #0x40]
00000000000234d0	adr	x8, #0x351a0
00000000000234d4	nop
00000000000234d8	orr	x8, x8, #0x3
00000000000234dc	str	x8, [sp, #0x8]
00000000000234e0	mov	w8, #0x1
00000000000234e4	str	w8, [sp, #0x10]
00000000000234e8	strh	wzr, [sp, #0x18]
00000000000234ec	adrp	x0, 73 ; 0x6c000
00000000000234f0	add	x0, x0, #0xbb0
00000000000234f4	ldr	x8, [x0]
00000000000234f8	blr	x8
00000000000234fc	ldr	x22, [x0]
0000000000023500	ldr	x8, [x22, #0x110]
0000000000023504	add	x9, sp, #0x20
0000000000023508	str	x9, [x22, #0x110]
000000000002350c	mov	x9, #0x700000000
0000000000023510	stp	x8, x9, [sp, #0x28]
0000000000023514	adr	x23, #0x6352f
0000000000023518	nop
000000000002351c	ldarb	w8, [x23]
0000000000023520	tbz	w8, #0x0, 0x23528
0000000000023524	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023528	cbz	x19, 0x23584
000000000002352c	ldr	x8, [x19]
0000000000023530	and	x8, x8, #0xfffffffffffffffc
0000000000023534	ldr	x8, [x8]
0000000000023538	ldr	w8, [x8, #0x5c]
000000000002353c	cmp	w8, #0x75
0000000000023540	b.ne	0x23584
0000000000023544	tbnz	w20, #0x1f, 0x23774
0000000000023548	ldr	w8, [x19, #0x8]
000000000002354c	cbz	w8, 0x23774
0000000000023550	sub	w9, w8, #0x1
0000000000023554	cmp	w8, w20
0000000000023558	csel	w0, w20, w9, hi
000000000002355c	tbnz	w0, #0x1f, 0x23774
0000000000023560	add	x8, x19, #0x10
0000000000023564	ldrh	w9, [x8, x0, lsl #1]
0000000000023568	cmp	w9, w21
000000000002356c	b.eq	0x23780
0000000000023570	sub	x0, x0, #0x1
0000000000023574	add	w9, w0, #0x1
0000000000023578	cmp	w9, #0x0
000000000002357c	b.gt	0x23564
0000000000023580	b	0x23774
0000000000023584	add	x8, sp, #0x8
0000000000023588	stp	x8, x8, [sp, #0x38]
000000000002358c	stp	x8, x8, [sp, #0x48]
0000000000023590	ldr	x9, [sp, #0x8]
0000000000023594	strh	w21, [sp, #0x18]
0000000000023598	ldr	w8, [sp, #0x10]
000000000002359c	cmp	w8, #0x1
00000000000235a0	b.ne	0x2363c
00000000000235a4	cbz	x19, 0x2363c
00000000000235a8	ldr	x8, [x19]
00000000000235ac	and	x8, x8, #0xfffffffffffffffc
00000000000235b0	ldr	x8, [x8]
00000000000235b4	ldr	w8, [x8, #0x5c]
00000000000235b8	cmp	w8, #0x75
00000000000235bc	b.ne	0x2363c
00000000000235c0	movi.16b	v0, #0x0
00000000000235c4	stp	q0, q0, [sp, #0x60]
00000000000235c8	str	xzr, [sp, #0x80]
00000000000235cc	ldr	x8, [x22, #0x110]
00000000000235d0	add	x9, sp, #0x60
00000000000235d4	str	x9, [x22, #0x110]
00000000000235d8	mov	x9, #0x500000000
00000000000235dc	stp	x8, x9, [sp, #0x68]
00000000000235e0	ldr	w8, [sp, #0x10]
00000000000235e4	cmp	w8, #0x1
00000000000235e8	b.ne	0x237b0
00000000000235ec	ldrh	w8, [sp, #0x18]
00000000000235f0	ldr	x9, [sp, #0x68]
00000000000235f4	str	x9, [x22, #0x110]
00000000000235f8	tbnz	w20, #0x1f, 0x23774
00000000000235fc	ldr	w9, [x19, #0x8]
0000000000023600	cbz	w9, 0x23774
0000000000023604	sub	w10, w9, #0x1
0000000000023608	cmp	w9, w20
000000000002360c	csel	w9, w20, w10, hi
0000000000023610	tbnz	w9, #0x1f, 0x23774
0000000000023614	add	x10, x19, #0x10
0000000000023618	ldrh	w11, [x10, x9, lsl #1]
000000000002361c	cmp	w11, w8
0000000000023620	b.eq	0x237a8
0000000000023624	sub	x9, x9, #0x1
0000000000023628	add	w11, w9, #0x1
000000000002362c	mov	w0, #-0x1
0000000000023630	cmp	w11, #0x0
0000000000023634	b.gt	0x23618
0000000000023638	b	0x23780
000000000002363c	mov	x0, x19
0000000000023640	bl	"_kfun:kotlin.text#<get-lastIndex>__at__kotlin.CharSequence(){}kotlin.Int"
0000000000023644	cmp	w0, w20
0000000000023648	csel	w20, w0, w20, lt
000000000002364c	tbnz	w20, #0x1f, 0x23774
0000000000023650	add	x8, sp, #0x8
0000000000023654	add	x24, x8, #0x10
0000000000023658	mov	w25, #0x19
000000000002365c	ldarb	w8, [x23]
0000000000023660	tbz	w8, #0x0, 0x23668
0000000000023664	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023668	sub	w26, w20, #0x1
000000000002366c	ldr	x8, [x19]
0000000000023670	and	x8, x8, #0xfffffffffffffffc
0000000000023674	ldr	x8, [x8]
0000000000023678	ldr	w9, [x8, #0x3c]
000000000002367c	ldr	x8, [x8, #0x40]
0000000000023680	tbnz	w9, #0x1f, 0x2368c
0000000000023684	and	x9, x9, x25
0000000000023688	b	0x23710
000000000002368c	neg	w10, w9
0000000000023690	mvn	w9, w9
0000000000023694	cmp	w10, #0x9
0000000000023698	b.ge	0x236d0
000000000002369c	cmp	w10, #0x2
00000000000236a0	b.lt	0x23704
00000000000236a4	mov	x10, #0x0
00000000000236a8	mov	x11, x8
00000000000236ac	ldr	w12, [x11]
00000000000236b0	cmp	w12, #0x18
00000000000236b4	b.gt	0x2370c
00000000000236b8	add	x10, x10, #0x1
00000000000236bc	add	x11, x11, #0x10
00000000000236c0	cmp	x9, x10
00000000000236c4	b.ne	0x236ac
00000000000236c8	mov	x10, x9
00000000000236cc	b	0x2370c
00000000000236d0	mov	w10, #0x0
00000000000236d4	add	w11, w9, w10
00000000000236d8	cmp	w11, #0x0
00000000000236dc	cinc	w11, w11, lt
00000000000236e0	asr	w11, w11, #1
00000000000236e4	sbfiz	x12, x11, #4, #32
00000000000236e8	ldr	w12, [x8, x12]
00000000000236ec	cmp	w12, #0x19
00000000000236f0	csinc	w10, w10, w11, ge
00000000000236f4	csel	w9, w9, w11, lt
00000000000236f8	cmp	w10, w9
00000000000236fc	b.lt	0x236d4
0000000000023700	b	0x2370c
0000000000023704	mov	w10, #0x0
0000000000023708	b	0x2370c
000000000002370c	sxtw	x9, w10
0000000000023710	add	x8, x8, x9, lsl #4
0000000000023714	ldr	x8, [x8, #0x8]
0000000000023718	ldr	x8, [x8, #0x8]
000000000002371c	mov	x0, x19
0000000000023720	mov	x1, x20
0000000000023724	blr	x8
0000000000023728	mov	x21, x0
000000000002372c	ldr	w8, [sp, #0x10]
0000000000023730	bic	w27, w8, w8, asr #31
0000000000023734	mov	x28, x24
0000000000023738	cbz	w27, 0x23760
000000000002373c	ldarb	w8, [x23]
0000000000023740	tbz	w8, #0x0, 0x23748
0000000000023744	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023748	ldrh	w8, [x28]
000000000002374c	cmp	w8, w21
0000000000023750	b.eq	0x2377c
0000000000023754	sub	w27, w27, #0x1
0000000000023758	add	x28, x28, #0x2
000000000002375c	cbnz	w27, 0x2373c
0000000000023760	mov	w0, #-0x1
0000000000023764	cmp	w20, #0x0
0000000000023768	mov	x20, x26
000000000002376c	b.gt	0x2365c
0000000000023770	b	0x23780
0000000000023774	mov	w0, #-0x1
0000000000023778	b	0x23780
000000000002377c	mov	x0, x20
0000000000023780	ldr	x8, [sp, #0x28]
0000000000023784	str	x8, [x22, #0x110]
0000000000023788	ldp	x29, x30, [sp, #0xe0]
000000000002378c	ldp	x20, x19, [sp, #0xd0]
0000000000023790	ldp	x22, x21, [sp, #0xc0]
0000000000023794	ldp	x24, x23, [sp, #0xb0]
0000000000023798	ldp	x26, x25, [sp, #0xa0]
000000000002379c	ldp	x28, x27, [sp, #0x90]
00000000000237a0	add	sp, sp, #0xf0
00000000000237a4	ret
00000000000237a8	mov	x0, x9
00000000000237ac	b	0x23780
00000000000237b0	cbnz	w8, 0x237e8
00000000000237b4	ldr	x8, [x22, #0x118]
00000000000237b8	add	x0, x8, #0x70
00000000000237bc	mov	w1, #0x38
00000000000237c0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000237c4	mov	x19, x0
00000000000237c8	adr	x8, #0x352d8
00000000000237cc	nop
00000000000237d0	str	x8, [x19, #0x10]!
00000000000237d4	stur	xzr, [x19, #-0x8]
00000000000237d8	str	x19, [sp, #0x78]
00000000000237dc	adr	x1, #0x42344
00000000000237e0	nop
00000000000237e4	b	0x23818
00000000000237e8	ldr	x8, [x22, #0x118]
00000000000237ec	add	x0, x8, #0x70
00000000000237f0	mov	w1, #0x38
00000000000237f4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000237f8	mov	x19, x0
00000000000237fc	adr	x8, #0x35484
0000000000023800	nop
0000000000023804	str	x8, [x19, #0x10]!
0000000000023808	stur	xzr, [x19, #-0x8]
000000000002380c	str	x19, [sp, #0x80]
0000000000023810	adr	x1, #0x42340
0000000000023814	nop
0000000000023818	mov	x0, x19
000000000002381c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000023820	mov	x0, x19
0000000000023824	bl	_ThrowException
_kfun:kotlin.UByte#$<bridge-NBNB>compareTo(kotlin.UByte){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000023828	stp	x20, x19, [sp, #-0x20]!
000000000002382c	stp	x29, x30, [sp, #0x10]
0000000000023830	add	x29, sp, #0x10
0000000000023834	mov	x19, x1
0000000000023838	mov	x20, x0
000000000002383c	adr	x8, #0x63207
0000000000023840	nop
0000000000023844	ldarb	w8, [x8]
0000000000023848	tbz	w8, #0x0, 0x23850
000000000002384c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023850	ldrb	w8, [x20, #0x8]
0000000000023854	ldrb	w9, [x19, #0x8]
0000000000023858	cmp	w8, w9
000000000002385c	mov	w8, #-0x1
0000000000023860	cneg	w8, w8, hs
0000000000023864	csel	w0, wzr, w8, eq
0000000000023868	ldp	x29, x30, [sp, #0x10]
000000000002386c	ldp	x20, x19, [sp], #0x20
0000000000023870	ret
_kfun:kotlin.UByte#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000023874	sub	sp, sp, #0x40
0000000000023878	stp	x20, x19, [sp, #0x20]
000000000002387c	stp	x29, x30, [sp, #0x30]
0000000000023880	add	x29, sp, #0x30
0000000000023884	mov	x19, x1
0000000000023888	mov	x20, x0
000000000002388c	adr	x8, #0x631b7
0000000000023890	nop
0000000000023894	ldarb	w8, [x8]
0000000000023898	tbz	w8, #0x0, 0x238a0
000000000002389c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000238a0	ldrb	w8, [x20, #0x8]
00000000000238a4	str	x8, [sp]
00000000000238a8	adr	x2, #0x333eb ; literal pool for: "%d"
00000000000238ac	nop
00000000000238b0	add	x0, sp, #0x10
00000000000238b4	mov	w1, #0x10
00000000000238b8	bl	__ZN5konan8snprintfEPcmPKcz
00000000000238bc	add	x0, sp, #0x10
00000000000238c0	mov	x1, x19
00000000000238c4	bl	_CreateStringFromCString
00000000000238c8	str	x0, [x19]
00000000000238cc	ldp	x29, x30, [sp, #0x30]
00000000000238d0	ldp	x20, x19, [sp, #0x20]
00000000000238d4	add	sp, sp, #0x40
00000000000238d8	ret
_kfun:kotlin.UByte#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
00000000000238dc	stp	x20, x19, [sp, #-0x20]!
00000000000238e0	stp	x29, x30, [sp, #0x10]
00000000000238e4	add	x29, sp, #0x10
00000000000238e8	mov	x19, x0
00000000000238ec	adr	x8, #0x63157
00000000000238f0	nop
00000000000238f4	ldarb	w8, [x8]
00000000000238f8	tbz	w8, #0x0, 0x23900
00000000000238fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023900	ldrsb	w0, [x19, #0x8]
0000000000023904	ldp	x29, x30, [sp, #0x10]
0000000000023908	ldp	x20, x19, [sp], #0x20
000000000002390c	ret
_kfun:kotlin.UByte#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000023910	stp	x20, x19, [sp, #-0x20]!
0000000000023914	stp	x29, x30, [sp, #0x10]
0000000000023918	add	x29, sp, #0x10
000000000002391c	mov	x19, x1
0000000000023920	mov	x20, x0
0000000000023924	adr	x8, #0x6311f
0000000000023928	nop
000000000002392c	ldarb	w8, [x8]
0000000000023930	tbz	w8, #0x0, 0x23938
0000000000023934	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023938	cbz	x19, 0x23988
000000000002393c	ldrb	w8, [x20, #0x8]
0000000000023940	ldr	x9, [x19]
0000000000023944	and	x9, x9, #0xfffffffffffffffc
0000000000023948	ldr	x9, [x9]
000000000002394c	ldr	w9, [x9, #0x5c]
0000000000023950	cmp	w9, #0x17f
0000000000023954	b.ne	0x23988
0000000000023958	ldr	x9, [x19]
000000000002395c	and	x9, x9, #0xfffffffffffffffc
0000000000023960	ldr	x9, [x9]
0000000000023964	ldr	w9, [x9, #0x5c]
0000000000023968	cmp	w9, #0x17f
000000000002396c	b.ne	0x23998
0000000000023970	ldrb	w9, [x19, #0x8]
0000000000023974	cmp	w9, w8
0000000000023978	cset	w0, eq
000000000002397c	ldp	x29, x30, [sp, #0x10]
0000000000023980	ldp	x20, x19, [sp], #0x20
0000000000023984	ret
0000000000023988	mov	w0, #0x0
000000000002398c	ldp	x29, x30, [sp, #0x10]
0000000000023990	ldp	x20, x19, [sp], #0x20
0000000000023994	ret
0000000000023998	adr	x1, #0x39318
000000000002399c	nop
00000000000239a0	mov	x0, x19
00000000000239a4	bl	_ThrowClassCastException
_kfun:kotlin.UInt#$<bridge-NBNB>compareTo(kotlin.UInt){}kotlin.Int(kotlin.Any?){}kotlin.Int:
00000000000239a8	stp	x20, x19, [sp, #-0x20]!
00000000000239ac	stp	x29, x30, [sp, #0x10]
00000000000239b0	add	x29, sp, #0x10
00000000000239b4	mov	x19, x1
00000000000239b8	mov	x20, x0
00000000000239bc	adr	x8, #0x63087
00000000000239c0	nop
00000000000239c4	ldarb	w8, [x8]
00000000000239c8	tbz	w8, #0x0, 0x239d0
00000000000239cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000239d0	ldr	w8, [x20, #0x8]
00000000000239d4	ldr	w9, [x19, #0x8]
00000000000239d8	cmp	w8, w9
00000000000239dc	mov	w8, #-0x1
00000000000239e0	cneg	w8, w8, hs
00000000000239e4	csel	w0, wzr, w8, eq
00000000000239e8	ldp	x29, x30, [sp, #0x10]
00000000000239ec	ldp	x20, x19, [sp], #0x20
00000000000239f0	ret
_kfun:kotlin.UInt#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
00000000000239f4	sub	sp, sp, #0x50
00000000000239f8	stp	x20, x19, [sp, #0x30]
00000000000239fc	stp	x29, x30, [sp, #0x40]
0000000000023a00	add	x29, sp, #0x40
0000000000023a04	mov	x19, x1
0000000000023a08	mov	x20, x0
0000000000023a0c	adr	x8, #0x63037
0000000000023a10	nop
0000000000023a14	ldarb	w8, [x8]
0000000000023a18	tbz	w8, #0x0, 0x23a20
0000000000023a1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023a20	ldr	w8, [x20, #0x8]
0000000000023a24	str	x8, [sp]
0000000000023a28	adr	x2, #0x33266 ; literal pool for: "%lld"
0000000000023a2c	nop
0000000000023a30	add	x0, sp, #0x10
0000000000023a34	mov	w1, #0x20
0000000000023a38	bl	__ZN5konan8snprintfEPcmPKcz
0000000000023a3c	add	x0, sp, #0x10
0000000000023a40	mov	x1, x19
0000000000023a44	bl	_CreateStringFromCString
0000000000023a48	str	x0, [x19]
0000000000023a4c	ldp	x29, x30, [sp, #0x40]
0000000000023a50	ldp	x20, x19, [sp, #0x30]
0000000000023a54	add	sp, sp, #0x50
0000000000023a58	ret
_kfun:kotlin.UInt#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000023a5c	stp	x20, x19, [sp, #-0x20]!
0000000000023a60	stp	x29, x30, [sp, #0x10]
0000000000023a64	add	x29, sp, #0x10
0000000000023a68	mov	x19, x0
0000000000023a6c	adr	x8, #0x62fd7
0000000000023a70	nop
0000000000023a74	ldarb	w8, [x8]
0000000000023a78	tbz	w8, #0x0, 0x23a80
0000000000023a7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023a80	ldr	w0, [x19, #0x8]
0000000000023a84	ldp	x29, x30, [sp, #0x10]
0000000000023a88	ldp	x20, x19, [sp], #0x20
0000000000023a8c	ret
_kfun:kotlin.UInt#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000023a90	stp	x20, x19, [sp, #-0x20]!
0000000000023a94	stp	x29, x30, [sp, #0x10]
0000000000023a98	add	x29, sp, #0x10
0000000000023a9c	mov	x19, x1
0000000000023aa0	mov	x20, x0
0000000000023aa4	adr	x8, #0x62f9f
0000000000023aa8	nop
0000000000023aac	ldarb	w8, [x8]
0000000000023ab0	tbz	w8, #0x0, 0x23ab8
0000000000023ab4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023ab8	cbz	x19, 0x23b08
0000000000023abc	ldr	w8, [x20, #0x8]
0000000000023ac0	ldr	x9, [x19]
0000000000023ac4	and	x9, x9, #0xfffffffffffffffc
0000000000023ac8	ldr	x9, [x9]
0000000000023acc	ldr	w9, [x9, #0x5c]
0000000000023ad0	cmp	w9, #0x183
0000000000023ad4	b.ne	0x23b08
0000000000023ad8	ldr	x9, [x19]
0000000000023adc	and	x9, x9, #0xfffffffffffffffc
0000000000023ae0	ldr	x9, [x9]
0000000000023ae4	ldr	w9, [x9, #0x5c]
0000000000023ae8	cmp	w9, #0x183
0000000000023aec	b.ne	0x23b18
0000000000023af0	ldr	w9, [x19, #0x8]
0000000000023af4	cmp	w9, w8
0000000000023af8	cset	w0, eq
0000000000023afc	ldp	x29, x30, [sp, #0x10]
0000000000023b00	ldp	x20, x19, [sp], #0x20
0000000000023b04	ret
0000000000023b08	mov	w0, #0x0
0000000000023b0c	ldp	x29, x30, [sp, #0x10]
0000000000023b10	ldp	x20, x19, [sp], #0x20
0000000000023b14	ret
0000000000023b18	adr	x1, #0x39228
0000000000023b1c	nop
0000000000023b20	mov	x0, x19
0000000000023b24	bl	_ThrowClassCastException
_kfun:kotlin.ULong#$<bridge-NBNB>compareTo(kotlin.ULong){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000023b28	stp	x20, x19, [sp, #-0x20]!
0000000000023b2c	stp	x29, x30, [sp, #0x10]
0000000000023b30	add	x29, sp, #0x10
0000000000023b34	mov	x19, x1
0000000000023b38	mov	x20, x0
0000000000023b3c	adr	x8, #0x62f07
0000000000023b40	nop
0000000000023b44	ldarb	w8, [x8]
0000000000023b48	tbz	w8, #0x0, 0x23b50
0000000000023b4c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023b50	ldr	x8, [x20, #0x8]
0000000000023b54	ldr	x9, [x19, #0x8]
0000000000023b58	cmp	x8, x9
0000000000023b5c	mov	w8, #-0x1
0000000000023b60	cneg	w8, w8, hs
0000000000023b64	csel	w0, wzr, w8, eq
0000000000023b68	ldp	x29, x30, [sp, #0x10]
0000000000023b6c	ldp	x20, x19, [sp], #0x20
0000000000023b70	ret
_kfun:kotlin.ULong#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000023b74	sub	sp, sp, #0xd0
0000000000023b78	stp	x24, x23, [sp, #0x90]
0000000000023b7c	stp	x22, x21, [sp, #0xa0]
0000000000023b80	stp	x20, x19, [sp, #0xb0]
0000000000023b84	stp	x29, x30, [sp, #0xc0]
0000000000023b88	add	x29, sp, #0xc0
0000000000023b8c	mov	x19, x1
0000000000023b90	mov	x20, x0
0000000000023b94	adr	x8, #0x62eaf
0000000000023b98	nop
0000000000023b9c	ldarb	w8, [x8]
0000000000023ba0	tbz	w8, #0x0, 0x23ba8
0000000000023ba4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023ba8	ldr	x8, [x20, #0x8]
0000000000023bac	movi.16b	v0, #0x0
0000000000023bb0	stp	q0, q0, [sp]
0000000000023bb4	str	xzr, [sp, #0x20]
0000000000023bb8	adrp	x20, 73 ; 0x6c000
0000000000023bbc	add	x20, x20, #0xbb0
0000000000023bc0	ldr	x24, [x20]
0000000000023bc4	mov	x0, x20
0000000000023bc8	blr	x24
0000000000023bcc	ldr	x10, [x0]
0000000000023bd0	ldr	x11, [x10, #0x110]
0000000000023bd4	mov	x9, sp
0000000000023bd8	str	x9, [x10, #0x110]
0000000000023bdc	mov	x10, #0x500000000
0000000000023be0	stp	x11, x10, [sp, #0x8]
0000000000023be4	tbnz	x8, #0x3f, 0x23bfc
0000000000023be8	mov	x0, x8
0000000000023bec	mov	w1, #0xa
0000000000023bf0	mov	x2, x19
0000000000023bf4	bl	_Kotlin_Long_toStringRadix
0000000000023bf8	b	0x23c5c
0000000000023bfc	add	x21, x9, #0x20
0000000000023c00	add	x2, x9, #0x18
0000000000023c04	mov	x9, #-0x3333333333333334
0000000000023c08	movk	x9, #0xcccd
0000000000023c0c	umulh	x9, x8, x9
0000000000023c10	lsr	x9, x9, #4
0000000000023c14	mov	x10, #-0x14
0000000000023c18	madd	x8, x9, x10, x8
0000000000023c1c	sub	x10, x8, #0xa
0000000000023c20	cmp	x8, #0x9
0000000000023c24	cset	w0, gt
0000000000023c28	csel	x22, x10, x8, gt
0000000000023c2c	bfi	x0, x9, #1, #60
0000000000023c30	mov	w1, #0xa
0000000000023c34	bl	_Kotlin_Long_toStringRadix
0000000000023c38	mov	x23, x0
0000000000023c3c	mov	x0, x22
0000000000023c40	mov	w1, #0xa
0000000000023c44	mov	x2, x21
0000000000023c48	bl	_Kotlin_Long_toStringRadix
0000000000023c4c	mov	x1, x0
0000000000023c50	mov	x0, x23
0000000000023c54	mov	x2, x19
0000000000023c58	bl	_Kotlin_String_plusImpl
0000000000023c5c	mov	x8, x0
0000000000023c60	str	x0, [x19]
0000000000023c64	mov	x0, x20
0000000000023c68	blr	x24
0000000000023c6c	ldr	x9, [x0]
0000000000023c70	ldr	x10, [sp, #0x8]
0000000000023c74	str	x10, [x9, #0x110]
0000000000023c78	str	x8, [x19]
0000000000023c7c	mov	x0, x8
0000000000023c80	ldp	x29, x30, [sp, #0xc0]
0000000000023c84	ldp	x20, x19, [sp, #0xb0]
0000000000023c88	ldp	x22, x21, [sp, #0xa0]
0000000000023c8c	ldp	x24, x23, [sp, #0x90]
0000000000023c90	add	sp, sp, #0xd0
0000000000023c94	ret
_kfun:kotlin.ULong#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000023c98	stp	x20, x19, [sp, #-0x20]!
0000000000023c9c	stp	x29, x30, [sp, #0x10]
0000000000023ca0	add	x29, sp, #0x10
0000000000023ca4	mov	x19, x0
0000000000023ca8	adr	x8, #0x62d9b
0000000000023cac	nop
0000000000023cb0	ldarb	w8, [x8]
0000000000023cb4	tbz	w8, #0x0, 0x23cbc
0000000000023cb8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023cbc	ldp	w8, w9, [x19, #0x8]
0000000000023cc0	eor	w0, w9, w8
0000000000023cc4	ldp	x29, x30, [sp, #0x10]
0000000000023cc8	ldp	x20, x19, [sp], #0x20
0000000000023ccc	ret
_kfun:kotlin.ULong#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000023cd0	stp	x20, x19, [sp, #-0x20]!
0000000000023cd4	stp	x29, x30, [sp, #0x10]
0000000000023cd8	add	x29, sp, #0x10
0000000000023cdc	mov	x19, x1
0000000000023ce0	mov	x20, x0
0000000000023ce4	adr	x8, #0x62d5f
0000000000023ce8	nop
0000000000023cec	ldarb	w8, [x8]
0000000000023cf0	tbz	w8, #0x0, 0x23cf8
0000000000023cf4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023cf8	cbz	x19, 0x23d48
0000000000023cfc	ldr	x8, [x20, #0x8]
0000000000023d00	ldr	x9, [x19]
0000000000023d04	and	x9, x9, #0xfffffffffffffffc
0000000000023d08	ldr	x9, [x9]
0000000000023d0c	ldr	w9, [x9, #0x5c]
0000000000023d10	cmp	w9, #0x18c
0000000000023d14	b.ne	0x23d48
0000000000023d18	ldr	x9, [x19]
0000000000023d1c	and	x9, x9, #0xfffffffffffffffc
0000000000023d20	ldr	x9, [x9]
0000000000023d24	ldr	w9, [x9, #0x5c]
0000000000023d28	cmp	w9, #0x18c
0000000000023d2c	b.ne	0x23d58
0000000000023d30	ldr	x9, [x19, #0x8]
0000000000023d34	cmp	x9, x8
0000000000023d38	cset	w0, eq
0000000000023d3c	ldp	x29, x30, [sp, #0x10]
0000000000023d40	ldp	x20, x19, [sp], #0x20
0000000000023d44	ret
0000000000023d48	mov	w0, #0x0
0000000000023d4c	ldp	x29, x30, [sp, #0x10]
0000000000023d50	ldp	x20, x19, [sp], #0x20
0000000000023d54	ret
0000000000023d58	adr	x1, #0x39078
0000000000023d5c	nop
0000000000023d60	mov	x0, x19
0000000000023d64	bl	_ThrowClassCastException
_kfun:kotlin.UShort#$<bridge-NBNB>compareTo(kotlin.UShort){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000023d68	stp	x20, x19, [sp, #-0x20]!
0000000000023d6c	stp	x29, x30, [sp, #0x10]
0000000000023d70	add	x29, sp, #0x10
0000000000023d74	mov	x19, x1
0000000000023d78	mov	x20, x0
0000000000023d7c	adr	x8, #0x62cc7
0000000000023d80	nop
0000000000023d84	ldarb	w8, [x8]
0000000000023d88	tbz	w8, #0x0, 0x23d90
0000000000023d8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023d90	ldrh	w8, [x20, #0x8]
0000000000023d94	ldrh	w9, [x19, #0x8]
0000000000023d98	cmp	w8, w9
0000000000023d9c	mov	w8, #-0x1
0000000000023da0	cneg	w8, w8, hs
0000000000023da4	csel	w0, wzr, w8, eq
0000000000023da8	ldp	x29, x30, [sp, #0x10]
0000000000023dac	ldp	x20, x19, [sp], #0x20
0000000000023db0	ret
_kfun:kotlin.UShort#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000023db4	sub	sp, sp, #0x40
0000000000023db8	stp	x20, x19, [sp, #0x20]
0000000000023dbc	stp	x29, x30, [sp, #0x30]
0000000000023dc0	add	x29, sp, #0x30
0000000000023dc4	mov	x19, x1
0000000000023dc8	mov	x20, x0
0000000000023dcc	adr	x8, #0x62c77
0000000000023dd0	nop
0000000000023dd4	ldarb	w8, [x8]
0000000000023dd8	tbz	w8, #0x0, 0x23de0
0000000000023ddc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023de0	ldrh	w8, [x20, #0x8]
0000000000023de4	str	x8, [sp]
0000000000023de8	adr	x2, #0x32eab ; literal pool for: "%d"
0000000000023dec	nop
0000000000023df0	add	x0, sp, #0x10
0000000000023df4	mov	w1, #0x10
0000000000023df8	bl	__ZN5konan8snprintfEPcmPKcz
0000000000023dfc	add	x0, sp, #0x10
0000000000023e00	mov	x1, x19
0000000000023e04	bl	_CreateStringFromCString
0000000000023e08	str	x0, [x19]
0000000000023e0c	ldp	x29, x30, [sp, #0x30]
0000000000023e10	ldp	x20, x19, [sp, #0x20]
0000000000023e14	add	sp, sp, #0x40
0000000000023e18	ret
_kfun:kotlin.UShort#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000023e1c	stp	x20, x19, [sp, #-0x20]!
0000000000023e20	stp	x29, x30, [sp, #0x10]
0000000000023e24	add	x29, sp, #0x10
0000000000023e28	mov	x19, x0
0000000000023e2c	adr	x8, #0x62c17
0000000000023e30	nop
0000000000023e34	ldarb	w8, [x8]
0000000000023e38	tbz	w8, #0x0, 0x23e40
0000000000023e3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023e40	ldrsh	w0, [x19, #0x8]
0000000000023e44	ldp	x29, x30, [sp, #0x10]
0000000000023e48	ldp	x20, x19, [sp], #0x20
0000000000023e4c	ret
_kfun:kotlin.UShort#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000023e50	stp	x20, x19, [sp, #-0x20]!
0000000000023e54	stp	x29, x30, [sp, #0x10]
0000000000023e58	add	x29, sp, #0x10
0000000000023e5c	mov	x19, x1
0000000000023e60	mov	x20, x0
0000000000023e64	adr	x8, #0x62bdf
0000000000023e68	nop
0000000000023e6c	ldarb	w8, [x8]
0000000000023e70	tbz	w8, #0x0, 0x23e78
0000000000023e74	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023e78	cbz	x19, 0x23ec8
0000000000023e7c	ldrh	w8, [x20, #0x8]
0000000000023e80	ldr	x9, [x19]
0000000000023e84	and	x9, x9, #0xfffffffffffffffc
0000000000023e88	ldr	x9, [x9]
0000000000023e8c	ldr	w9, [x9, #0x5c]
0000000000023e90	cmp	w9, #0x195
0000000000023e94	b.ne	0x23ec8
0000000000023e98	ldr	x9, [x19]
0000000000023e9c	and	x9, x9, #0xfffffffffffffffc
0000000000023ea0	ldr	x9, [x9]
0000000000023ea4	ldr	w9, [x9, #0x5c]
0000000000023ea8	cmp	w9, #0x195
0000000000023eac	b.ne	0x23ed8
0000000000023eb0	ldrh	w9, [x19, #0x8]
0000000000023eb4	cmp	w9, w8
0000000000023eb8	cset	w0, eq
0000000000023ebc	ldp	x29, x30, [sp, #0x10]
0000000000023ec0	ldp	x20, x19, [sp], #0x20
0000000000023ec4	ret
0000000000023ec8	mov	w0, #0x0
0000000000023ecc	ldp	x29, x30, [sp, #0x10]
0000000000023ed0	ldp	x20, x19, [sp], #0x20
0000000000023ed4	ret
0000000000023ed8	adr	x1, #0x38f88
0000000000023edc	nop
0000000000023ee0	mov	x0, x19
0000000000023ee4	bl	_ThrowClassCastException
_kfun:com.example.nbodykmm.NBodyKmm#advance(kotlin.Double){}:
0000000000023ee8	sub	sp, sp, #0xf0
0000000000023eec	stp	d9, d8, [sp, #0x80]
0000000000023ef0	stp	x28, x27, [sp, #0x90]
0000000000023ef4	stp	x26, x25, [sp, #0xa0]
0000000000023ef8	stp	x24, x23, [sp, #0xb0]
0000000000023efc	stp	x22, x21, [sp, #0xc0]
0000000000023f00	stp	x20, x19, [sp, #0xd0]
0000000000023f04	stp	x29, x30, [sp, #0xe0]
0000000000023f08	add	x29, sp, #0xe0
0000000000023f0c	fmov	d8, d0
0000000000023f10	mov	x19, x0
0000000000023f14	movi.16b	v0, #0x0
0000000000023f18	stp	q0, q0, [sp, #0x10]
0000000000023f1c	stp	q0, q0, [sp, #0x60]
0000000000023f20	stp	q0, q0, [sp, #0x40]
0000000000023f24	str	q0, [sp, #0x30]
0000000000023f28	adrp	x0, 73 ; 0x6c000
0000000000023f2c	add	x0, x0, #0xbb0
0000000000023f30	ldr	x8, [x0]
0000000000023f34	blr	x8
0000000000023f38	ldr	x10, [x0]
0000000000023f3c	ldr	x8, [x10, #0x110]
0000000000023f40	add	x9, sp, #0x10
0000000000023f44	str	x10, [sp, #0x8]
0000000000023f48	str	x9, [x10, #0x110]
0000000000023f4c	mov	x9, #0xe00000000
0000000000023f50	stp	x8, x9, [sp, #0x18]
0000000000023f54	adr	x21, #0x62aef
0000000000023f58	nop
0000000000023f5c	ldarb	w8, [x21]
0000000000023f60	tbz	w8, #0x0, 0x23f68
0000000000023f64	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023f68	ldr	x8, [x19, #0x8]
0000000000023f6c	ldr	w8, [x8, #0x8]
0000000000023f70	subs	w22, w8, #0x1
0000000000023f74	b.mi	0x241a8
0000000000023f78	mov	w20, #0x0
0000000000023f7c	mov	w23, #-0x1
0000000000023f80	mov	w24, #0x1
0000000000023f84	b	0x23f9c
0000000000023f88	add	x24, x24, #0x1
0000000000023f8c	sub	w23, w23, #0x1
0000000000023f90	mov	x20, x25
0000000000023f94	cmp	w25, w22
0000000000023f98	b.gt	0x241a8
0000000000023f9c	ldarb	w8, [x21]
0000000000023fa0	tbz	w8, #0x0, 0x23fa8
0000000000023fa4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023fa8	add	w25, w20, #0x1
0000000000023fac	ldr	x8, [x19, #0x8]
0000000000023fb0	add	x9, x8, w20, sxtw #3
0000000000023fb4	ldr	x26, [x9, #0x10]
0000000000023fb8	str	x26, [sp, #0x28]
0000000000023fbc	ldr	w8, [x8, #0x8]
0000000000023fc0	cmp	w25, w8
0000000000023fc4	b.ge	0x23f88
0000000000023fc8	mov	x27, #0x0
0000000000023fcc	sxtw	x9, w24
0000000000023fd0	lsl	x9, x9, #3
0000000000023fd4	add	x28, x9, #0x10
0000000000023fd8	add	w20, w8, w23
0000000000023fdc	ldarb	w8, [x21]
0000000000023fe0	tbz	w8, #0x0, 0x23fe8
0000000000023fe4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023fe8	ldr	x8, [x19, #0x8]
0000000000023fec	ldr	w9, [x8, #0x8]
0000000000023ff0	add	w10, w24, w27
0000000000023ff4	cmp	w9, w10
0000000000023ff8	b.ls	0x24238
0000000000023ffc	ldr	d0, [x26, #0x8]
0000000000024000	add	x8, x8, x28
0000000000024004	lsl	x9, x27, #3
0000000000024008	ldr	x10, [x8, x9]
000000000002400c	str	x10, [sp, #0x30]
0000000000024010	ldr	d1, [x10, #0x8]
0000000000024014	fsub	d3, d0, d1
0000000000024018	ldr	d0, [x26, #0x10]
000000000002401c	ldr	x10, [x8, x9]
0000000000024020	str	x10, [sp, #0x38]
0000000000024024	ldr	d1, [x10, #0x10]
0000000000024028	fsub	d2, d0, d1
000000000002402c	ldr	d0, [x26, #0x18]
0000000000024030	ldr	x10, [x8, x9]
0000000000024034	str	x10, [sp, #0x40]
0000000000024038	ldr	d1, [x10, #0x18]
000000000002403c	fsub	d0, d0, d1
0000000000024040	fmul	d1, d3, d3
0000000000024044	fmul	d4, d2, d2
0000000000024048	fadd	d1, d1, d4
000000000002404c	fmul	d4, d0, d0
0000000000024050	fadd	d1, d1, d4
0000000000024054	fsqrt	d4, d1
0000000000024058	fmul	d1, d1, d4
000000000002405c	fdiv	d1, d8, d1
0000000000024060	ldr	d4, [x26, #0x20]
0000000000024064	ldr	x8, [x8, x9]
0000000000024068	str	x8, [sp, #0x48]
000000000002406c	ldr	d5, [x8, #0x38]
0000000000024070	fmul	d5, d3, d5
0000000000024074	fmul	d5, d5, d1
0000000000024078	fsub	d4, d4, d5
000000000002407c	str	d4, [x26, #0x20]
0000000000024080	ldr	x8, [x19, #0x8]
0000000000024084	ldr	w9, [x8, #0x8]
0000000000024088	add	w10, w24, w27
000000000002408c	cmp	w9, w10
0000000000024090	b.ls	0x24238
0000000000024094	ldr	d4, [x26, #0x28]
0000000000024098	add	x8, x8, x28
000000000002409c	ldr	x8, [x8, x27, lsl #3]
00000000000240a0	str	x8, [sp, #0x50]
00000000000240a4	ldr	d5, [x8, #0x38]
00000000000240a8	fmul	d5, d2, d5
00000000000240ac	fmul	d5, d5, d1
00000000000240b0	fsub	d4, d4, d5
00000000000240b4	str	d4, [x26, #0x28]
00000000000240b8	ldr	x8, [x19, #0x8]
00000000000240bc	ldr	w9, [x8, #0x8]
00000000000240c0	add	w10, w24, w27
00000000000240c4	cmp	w9, w10
00000000000240c8	b.ls	0x24238
00000000000240cc	ldr	d4, [x26, #0x30]
00000000000240d0	add	x8, x8, x28
00000000000240d4	ldr	x8, [x8, x27, lsl #3]
00000000000240d8	str	x8, [sp, #0x58]
00000000000240dc	ldr	d5, [x8, #0x38]
00000000000240e0	fmul	d5, d0, d5
00000000000240e4	fmul	d5, d5, d1
00000000000240e8	fsub	d4, d4, d5
00000000000240ec	str	d4, [x26, #0x30]
00000000000240f0	ldr	x8, [x19, #0x8]
00000000000240f4	ldr	w9, [x8, #0x8]
00000000000240f8	add	w10, w24, w27
00000000000240fc	cmp	w9, w10
0000000000024100	b.ls	0x24238
0000000000024104	add	x8, x8, x28
0000000000024108	ldr	x8, [x8, x27, lsl #3]
000000000002410c	str	x8, [sp, #0x60]
0000000000024110	ldr	d4, [x8, #0x20]
0000000000024114	ldr	d5, [x26, #0x38]
0000000000024118	fmul	d3, d3, d5
000000000002411c	fmul	d3, d3, d1
0000000000024120	fadd	d3, d4, d3
0000000000024124	str	d3, [x8, #0x20]
0000000000024128	ldr	x8, [x19, #0x8]
000000000002412c	ldr	w9, [x8, #0x8]
0000000000024130	add	w10, w24, w27
0000000000024134	cmp	w9, w10
0000000000024138	b.ls	0x24238
000000000002413c	add	x8, x8, x28
0000000000024140	ldr	x8, [x8, x27, lsl #3]
0000000000024144	str	x8, [sp, #0x68]
0000000000024148	ldr	d3, [x8, #0x28]
000000000002414c	ldr	d4, [x26, #0x38]
0000000000024150	fmul	d2, d2, d4
0000000000024154	fmul	d2, d2, d1
0000000000024158	fadd	d2, d3, d2
000000000002415c	str	d2, [x8, #0x28]
0000000000024160	ldr	x8, [x19, #0x8]
0000000000024164	ldr	w9, [x8, #0x8]
0000000000024168	add	w10, w24, w27
000000000002416c	cmp	w9, w10
0000000000024170	b.ls	0x24238
0000000000024174	add	x8, x8, x28
0000000000024178	ldr	x8, [x8, x27, lsl #3]
000000000002417c	str	x8, [sp, #0x70]
0000000000024180	ldr	d2, [x8, #0x30]
0000000000024184	ldr	d3, [x26, #0x38]
0000000000024188	fmul	d0, d0, d3
000000000002418c	fmul	d0, d0, d1
0000000000024190	fadd	d0, d2, d0
0000000000024194	str	d0, [x8, #0x30]
0000000000024198	add	x27, x27, #0x1
000000000002419c	cmp	w20, w27
00000000000241a0	b.ne	0x23fdc
00000000000241a4	b	0x23f88
00000000000241a8	ldr	x8, [x19, #0x8]
00000000000241ac	ldr	w9, [x8, #0x8]
00000000000241b0	add	x19, x8, #0x10
00000000000241b4	bic	w20, w9, w9, asr #31
00000000000241b8	b	0x241f4
00000000000241bc	ldr	x8, [x19], #0x8
00000000000241c0	str	x8, [sp, #0x78]
00000000000241c4	ldp	d1, d0, [x8, #0x18]
00000000000241c8	fmul	d0, d0, d8
00000000000241cc	ldp	d2, d3, [x8, #0x8]
00000000000241d0	fadd	d0, d2, d0
00000000000241d4	ldp	d2, d4, [x8, #0x28]
00000000000241d8	fmul	d2, d2, d8
00000000000241dc	fadd	d2, d3, d2
00000000000241e0	stp	d0, d2, [x8, #0x8]
00000000000241e4	fmul	d0, d4, d8
00000000000241e8	fadd	d0, d1, d0
00000000000241ec	str	d0, [x8, #0x18]
00000000000241f0	sub	x20, x20, #0x1
00000000000241f4	cbz	x20, 0x24208
00000000000241f8	ldarb	w8, [x21]
00000000000241fc	tbz	w8, #0x0, 0x241bc
0000000000024200	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024204	b	0x241bc
0000000000024208	ldr	x8, [sp, #0x18]
000000000002420c	ldr	x9, [sp, #0x8]
0000000000024210	str	x8, [x9, #0x110]
0000000000024214	ldp	x29, x30, [sp, #0xe0]
0000000000024218	ldp	x20, x19, [sp, #0xd0]
000000000002421c	ldp	x22, x21, [sp, #0xc0]
0000000000024220	ldp	x24, x23, [sp, #0xb0]
0000000000024224	ldp	x26, x25, [sp, #0xa0]
0000000000024228	ldp	x28, x27, [sp, #0x90]
000000000002422c	ldp	d9, d8, [sp, #0x80]
0000000000024230	add	sp, sp, #0xf0
0000000000024234	ret
0000000000024238	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:com.example.nbodykmm.NBodyKmm#energy(){}kotlin.Double:
000000000002423c	sub	sp, sp, #0xa0
0000000000024240	stp	d9, d8, [sp, #0x30]
0000000000024244	stp	x28, x27, [sp, #0x40]
0000000000024248	stp	x26, x25, [sp, #0x50]
000000000002424c	stp	x24, x23, [sp, #0x60]
0000000000024250	stp	x22, x21, [sp, #0x70]
0000000000024254	stp	x20, x19, [sp, #0x80]
0000000000024258	stp	x29, x30, [sp, #0x90]
000000000002425c	add	x29, sp, #0x90
0000000000024260	mov	x19, x0
0000000000024264	movi.16b	v0, #0x0
0000000000024268	stp	q0, q0, [sp]
000000000002426c	str	xzr, [sp, #0x20]
0000000000024270	adrp	x0, 72 ; 0x6c000
0000000000024274	add	x0, x0, #0xbb0
0000000000024278	ldr	x8, [x0]
000000000002427c	blr	x8
0000000000024280	ldr	x20, [x0]
0000000000024284	ldr	x8, [x20, #0x110]
0000000000024288	mov	x9, sp
000000000002428c	str	x9, [x20, #0x110]
0000000000024290	mov	x9, #0x500000000
0000000000024294	stp	x8, x9, [sp, #0x8]
0000000000024298	adr	x21, #0x627ab
000000000002429c	nop
00000000000242a0	ldarb	w8, [x21]
00000000000242a4	tbz	w8, #0x0, 0x242ac
00000000000242a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000242ac	ldr	x8, [x19, #0x8]
00000000000242b0	ldr	w8, [x8, #0x8]
00000000000242b4	subs	w22, w8, #0x1
00000000000242b8	b.mi	0x243c0
00000000000242bc	mov	w25, #0x0
00000000000242c0	fmov	d8, xzr
00000000000242c4	mov	w23, #0x1
00000000000242c8	fmov	d9, #0.50000000
00000000000242cc	b	0x242e0
00000000000242d0	add	w23, w23, #0x1
00000000000242d4	mov	x25, x24
00000000000242d8	cmp	w24, w22
00000000000242dc	b.gt	0x243c4
00000000000242e0	ldarb	w8, [x21]
00000000000242e4	tbz	w8, #0x0, 0x242ec
00000000000242e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000242ec	add	w24, w25, #0x1
00000000000242f0	ldr	x8, [x19, #0x8]
00000000000242f4	add	x9, x8, w25, sxtw #3
00000000000242f8	ldr	x25, [x9, #0x10]
00000000000242fc	str	x25, [sp, #0x18]
0000000000024300	ldp	d0, d1, [x25, #0x20]
0000000000024304	fmul	d0, d0, d0
0000000000024308	fmul	d1, d1, d1
000000000002430c	fadd	d0, d0, d1
0000000000024310	ldp	d2, d1, [x25, #0x30]
0000000000024314	fmul	d1, d1, d9
0000000000024318	fmul	d2, d2, d2
000000000002431c	fadd	d0, d0, d2
0000000000024320	fmul	d0, d1, d0
0000000000024324	fadd	d8, d8, d0
0000000000024328	ldr	w26, [x8, #0x8]
000000000002432c	cmp	w24, w26
0000000000024330	b.ge	0x242d0
0000000000024334	sbfiz	x8, x23, #3, #32
0000000000024338	add	x27, x8, #0x10
000000000002433c	mov	x28, x23
0000000000024340	ldarb	w8, [x21]
0000000000024344	tbz	w8, #0x0, 0x2434c
0000000000024348	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002434c	ldr	x8, [x19, #0x8]
0000000000024350	ldr	w9, [x8, #0x8]
0000000000024354	cmp	w9, w28
0000000000024358	b.ls	0x243f4
000000000002435c	ldr	x8, [x8, x27]
0000000000024360	str	x8, [sp, #0x20]
0000000000024364	ldp	d0, d1, [x25, #0x8]
0000000000024368	ldp	d2, d3, [x8, #0x8]
000000000002436c	fsub	d0, d0, d2
0000000000024370	fsub	d1, d1, d3
0000000000024374	ldr	d2, [x25, #0x18]
0000000000024378	ldr	d3, [x8, #0x18]
000000000002437c	fsub	d2, d2, d3
0000000000024380	fmul	d0, d0, d0
0000000000024384	fmul	d1, d1, d1
0000000000024388	fadd	d0, d0, d1
000000000002438c	fmul	d1, d2, d2
0000000000024390	fadd	d0, d0, d1
0000000000024394	fsqrt	d0, d0
0000000000024398	ldr	d1, [x25, #0x38]
000000000002439c	ldr	d2, [x8, #0x38]
00000000000243a0	fmul	d1, d1, d2
00000000000243a4	fdiv	d0, d1, d0
00000000000243a8	fsub	d8, d8, d0
00000000000243ac	add	w28, w28, #0x1
00000000000243b0	add	x27, x27, #0x8
00000000000243b4	cmp	w26, w28
00000000000243b8	b.ne	0x24340
00000000000243bc	b	0x242d0
00000000000243c0	fmov	d8, xzr
00000000000243c4	ldr	x8, [sp, #0x8]
00000000000243c8	str	x8, [x20, #0x110]
00000000000243cc	fmov	d0, d8
00000000000243d0	ldp	x29, x30, [sp, #0x90]
00000000000243d4	ldp	x20, x19, [sp, #0x80]
00000000000243d8	ldp	x22, x21, [sp, #0x70]
00000000000243dc	ldp	x24, x23, [sp, #0x60]
00000000000243e0	ldp	x26, x25, [sp, #0x50]
00000000000243e4	ldp	x28, x27, [sp, #0x40]
00000000000243e8	ldp	d9, d8, [sp, #0x30]
00000000000243ec	add	sp, sp, #0xa0
00000000000243f0	ret
00000000000243f4	bl	_ThrowArrayIndexOutOfBoundsException
00000000000243f8	stp	x20, x19, [sp, #-0x20]!
00000000000243fc	stp	x29, x30, [sp, #0x10]
0000000000024400	add	x29, sp, #0x10
0000000000024404	mov	x19, x1
0000000000024408	mov	x20, x0
000000000002440c	adr	x8, #0x62637
0000000000024410	nop
0000000000024414	ldarb	w8, [x8]
0000000000024418	tbz	w8, #0x0, 0x24420
000000000002441c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024420	sub	w8, w20, #0x1
0000000000024424	cmp	w8, #0x3
0000000000024428	b.hs	0x24438
000000000002442c	ldp	x29, x30, [sp, #0x10]
0000000000024430	ldp	x20, x19, [sp], #0x20
0000000000024434	ret
0000000000024438	adr	x1, #0x626a8
000000000002443c	nop
0000000000024440	mov	x0, x19
0000000000024444	mov	w2, #0x3
0000000000024448	ldp	x29, x30, [sp, #0x10]
000000000002444c	ldp	x20, x19, [sp], #0x20
0000000000024450	b	_AddTLSRecord
0000000000024454	stp	x20, x19, [sp, #-0x20]!
0000000000024458	stp	x29, x30, [sp, #0x10]
000000000002445c	add	x29, sp, #0x10
0000000000024460	mov	x19, x1
0000000000024464	mov	x20, x0
0000000000024468	adr	x8, #0x625db
000000000002446c	nop
0000000000024470	ldarb	w8, [x8]
0000000000024474	tbz	w8, #0x0, 0x2447c
0000000000024478	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002447c	sub	w8, w20, #0x1
0000000000024480	cmp	w8, #0x3
0000000000024484	b.hs	0x24494
0000000000024488	ldp	x29, x30, [sp, #0x10]
000000000002448c	ldp	x20, x19, [sp], #0x20
0000000000024490	ret
0000000000024494	adr	x1, #0x6264c
0000000000024498	nop
000000000002449c	mov	x0, x19
00000000000244a0	mov	w2, #0x3
00000000000244a4	ldp	x29, x30, [sp, #0x10]
00000000000244a8	ldp	x20, x19, [sp], #0x20
00000000000244ac	b	_AddTLSRecord
00000000000244b0	stp	x20, x19, [sp, #-0x20]!
00000000000244b4	stp	x29, x30, [sp, #0x10]
00000000000244b8	add	x29, sp, #0x10
00000000000244bc	mov	x19, x1
00000000000244c0	mov	x20, x0
00000000000244c4	adr	x8, #0x6257f
00000000000244c8	nop
00000000000244cc	ldarb	w8, [x8]
00000000000244d0	tbz	w8, #0x0, 0x244d8
00000000000244d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000244d8	sub	w8, w20, #0x1
00000000000244dc	cmp	w8, #0x3
00000000000244e0	b.hs	0x244f0
00000000000244e4	ldp	x29, x30, [sp, #0x10]
00000000000244e8	ldp	x20, x19, [sp], #0x20
00000000000244ec	ret
00000000000244f0	adr	x1, #0x625f0
00000000000244f4	nop
00000000000244f8	mov	x0, x19
00000000000244fc	mov	w2, #0x3
0000000000024500	ldp	x29, x30, [sp, #0x10]
0000000000024504	ldp	x20, x19, [sp], #0x20
0000000000024508	b	_AddTLSRecord
000000000002450c	stp	x20, x19, [sp, #-0x20]!
0000000000024510	stp	x29, x30, [sp, #0x10]
0000000000024514	add	x29, sp, #0x10
0000000000024518	mov	x19, x1
000000000002451c	mov	x20, x0
0000000000024520	adr	x8, #0x62523
0000000000024524	nop
0000000000024528	ldarb	w8, [x8]
000000000002452c	tbz	w8, #0x0, 0x24534
0000000000024530	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024534	sub	w8, w20, #0x1
0000000000024538	cmp	w8, #0x2
000000000002453c	b.lo	0x24570
0000000000024540	cbnz	w20, 0x24560
0000000000024544	adr	x1, #0x6259c
0000000000024548	nop
000000000002454c	mov	x0, x19
0000000000024550	mov	w2, #0x3
0000000000024554	ldp	x29, x30, [sp, #0x10]
0000000000024558	ldp	x20, x19, [sp], #0x20
000000000002455c	b	_AddTLSRecord
0000000000024560	adr	x8, #0x624f0
0000000000024564	nop
0000000000024568	str	xzr, [x8, #0x20]
000000000002456c	str	wzr, [x8]
0000000000024570	ldp	x29, x30, [sp, #0x10]
0000000000024574	ldp	x20, x19, [sp], #0x20
0000000000024578	ret
000000000002457c	stp	x20, x19, [sp, #-0x20]!
0000000000024580	stp	x29, x30, [sp, #0x10]
0000000000024584	add	x29, sp, #0x10
0000000000024588	mov	x19, x1
000000000002458c	mov	x20, x0
0000000000024590	adr	x8, #0x624b3
0000000000024594	nop
0000000000024598	ldarb	w8, [x8]
000000000002459c	tbz	w8, #0x0, 0x245a4
00000000000245a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000245a4	sub	w8, w20, #0x1
00000000000245a8	cmp	w8, #0x3
00000000000245ac	b.hs	0x245bc
00000000000245b0	ldp	x29, x30, [sp, #0x10]
00000000000245b4	ldp	x20, x19, [sp], #0x20
00000000000245b8	ret
00000000000245bc	adr	x1, #0x62524
00000000000245c0	nop
00000000000245c4	mov	x0, x19
00000000000245c8	mov	w2, #0x3
00000000000245cc	ldp	x29, x30, [sp, #0x10]
00000000000245d0	ldp	x20, x19, [sp], #0x20
00000000000245d4	b	_AddTLSRecord
00000000000245d8	stp	x20, x19, [sp, #-0x20]!
00000000000245dc	stp	x29, x30, [sp, #0x10]
00000000000245e0	add	x29, sp, #0x10
00000000000245e4	mov	x19, x1
00000000000245e8	mov	x20, x0
00000000000245ec	adr	x8, #0x62457
00000000000245f0	nop
00000000000245f4	ldarb	w8, [x8]
00000000000245f8	tbz	w8, #0x0, 0x24600
00000000000245fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024600	sub	w8, w20, #0x1
0000000000024604	cmp	w8, #0x2
0000000000024608	b.lo	0x24640
000000000002460c	cbnz	w20, 0x2462c
0000000000024610	adr	x1, #0x624d0
0000000000024614	nop
0000000000024618	mov	x0, x19
000000000002461c	mov	w2, #0x3
0000000000024620	ldp	x29, x30, [sp, #0x10]
0000000000024624	ldp	x20, x19, [sp], #0x20
0000000000024628	b	_AddTLSRecord
000000000002462c	adr	x8, #0x62428
0000000000024630	nop
0000000000024634	stur	xzr, [x8, #0x2c]
0000000000024638	stur	xzr, [x8, #0x24]
000000000002463c	str	wzr, [x8]
0000000000024640	ldp	x29, x30, [sp, #0x10]
0000000000024644	ldp	x20, x19, [sp], #0x20
0000000000024648	ret
000000000002464c	stp	x20, x19, [sp, #-0x20]!
0000000000024650	stp	x29, x30, [sp, #0x10]
0000000000024654	add	x29, sp, #0x10
0000000000024658	mov	x19, x1
000000000002465c	mov	x20, x0
0000000000024660	adr	x8, #0x623e3
0000000000024664	nop
0000000000024668	ldarb	w8, [x8]
000000000002466c	tbz	w8, #0x0, 0x24674
0000000000024670	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024674	sub	w8, w20, #0x1
0000000000024678	cmp	w8, #0x3
000000000002467c	b.hs	0x2468c
0000000000024680	ldp	x29, x30, [sp, #0x10]
0000000000024684	ldp	x20, x19, [sp], #0x20
0000000000024688	ret
000000000002468c	adr	x1, #0x62454
0000000000024690	nop
0000000000024694	mov	x0, x19
0000000000024698	mov	w2, #0x3
000000000002469c	ldp	x29, x30, [sp, #0x10]
00000000000246a0	ldp	x20, x19, [sp], #0x20
00000000000246a4	b	_AddTLSRecord
00000000000246a8	stp	x20, x19, [sp, #-0x20]!
00000000000246ac	stp	x29, x30, [sp, #0x10]
00000000000246b0	add	x29, sp, #0x10
00000000000246b4	mov	x19, x1
00000000000246b8	mov	x20, x0
00000000000246bc	adr	x8, #0x62387
00000000000246c0	nop
00000000000246c4	ldarb	w8, [x8]
00000000000246c8	tbz	w8, #0x0, 0x246d0
00000000000246cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000246d0	sub	w8, w20, #0x1
00000000000246d4	cmp	w8, #0x3
00000000000246d8	b.hs	0x246e8
00000000000246dc	ldp	x29, x30, [sp, #0x10]
00000000000246e0	ldp	x20, x19, [sp], #0x20
00000000000246e4	ret
00000000000246e8	adr	x1, #0x623f8
00000000000246ec	nop
00000000000246f0	mov	x0, x19
00000000000246f4	mov	w2, #0x3
00000000000246f8	ldp	x29, x30, [sp, #0x10]
00000000000246fc	ldp	x20, x19, [sp], #0x20
0000000000024700	b	_AddTLSRecord
0000000000024704	stp	x20, x19, [sp, #-0x20]!
0000000000024708	stp	x29, x30, [sp, #0x10]
000000000002470c	add	x29, sp, #0x10
0000000000024710	mov	x19, x1
0000000000024714	mov	x20, x0
0000000000024718	adr	x8, #0x6232b
000000000002471c	nop
0000000000024720	ldarb	w8, [x8]
0000000000024724	tbz	w8, #0x0, 0x2472c
0000000000024728	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002472c	sub	w8, w20, #0x1
0000000000024730	cmp	w8, #0x3
0000000000024734	b.hs	0x24744
0000000000024738	ldp	x29, x30, [sp, #0x10]
000000000002473c	ldp	x20, x19, [sp], #0x20
0000000000024740	ret
0000000000024744	adr	x1, #0x6239c
0000000000024748	nop
000000000002474c	mov	x0, x19
0000000000024750	mov	w2, #0x3
0000000000024754	ldp	x29, x30, [sp, #0x10]
0000000000024758	ldp	x20, x19, [sp], #0x20
000000000002475c	b	_AddTLSRecord
0000000000024760	stp	x20, x19, [sp, #-0x20]!
0000000000024764	stp	x29, x30, [sp, #0x10]
0000000000024768	add	x29, sp, #0x10
000000000002476c	mov	x19, x1
0000000000024770	mov	x20, x0
0000000000024774	adr	x8, #0x622cf
0000000000024778	nop
000000000002477c	ldarb	w8, [x8]
0000000000024780	tbz	w8, #0x0, 0x24788
0000000000024784	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024788	sub	w8, w20, #0x1
000000000002478c	cmp	w8, #0x2
0000000000024790	b.lo	0x247c4
0000000000024794	cbnz	w20, 0x247b4
0000000000024798	adr	x1, #0x62348
000000000002479c	nop
00000000000247a0	mov	x0, x19
00000000000247a4	mov	w2, #0x3
00000000000247a8	ldp	x29, x30, [sp, #0x10]
00000000000247ac	ldp	x20, x19, [sp], #0x20
00000000000247b0	b	_AddTLSRecord
00000000000247b4	adr	x8, #0x622a4
00000000000247b8	nop
00000000000247bc	stp	xzr, xzr, [x8, #0x30]
00000000000247c0	str	wzr, [x8]
00000000000247c4	ldp	x29, x30, [sp, #0x10]
00000000000247c8	ldp	x20, x19, [sp], #0x20
00000000000247cc	ret
00000000000247d0	stp	x20, x19, [sp, #-0x20]!
00000000000247d4	stp	x29, x30, [sp, #0x10]
00000000000247d8	add	x29, sp, #0x10
00000000000247dc	mov	x19, x1
00000000000247e0	mov	x20, x0
00000000000247e4	adr	x8, #0x6225f
00000000000247e8	nop
00000000000247ec	ldarb	w8, [x8]
00000000000247f0	tbz	w8, #0x0, 0x247f8
00000000000247f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000247f8	sub	w8, w20, #0x1
00000000000247fc	cmp	w8, #0x3
0000000000024800	b.hs	0x24810
0000000000024804	ldp	x29, x30, [sp, #0x10]
0000000000024808	ldp	x20, x19, [sp], #0x20
000000000002480c	ret
0000000000024810	adr	x1, #0x622d0
0000000000024814	nop
0000000000024818	mov	x0, x19
000000000002481c	mov	w2, #0x3
0000000000024820	ldp	x29, x30, [sp, #0x10]
0000000000024824	ldp	x20, x19, [sp], #0x20
0000000000024828	b	_AddTLSRecord
000000000002482c	stp	x20, x19, [sp, #-0x20]!
0000000000024830	stp	x29, x30, [sp, #0x10]
0000000000024834	add	x29, sp, #0x10
0000000000024838	mov	x19, x1
000000000002483c	mov	x20, x0
0000000000024840	adr	x8, #0x62203
0000000000024844	nop
0000000000024848	ldarb	w8, [x8]
000000000002484c	tbz	w8, #0x0, 0x24854
0000000000024850	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024854	sub	w8, w20, #0x1
0000000000024858	cmp	w8, #0x2
000000000002485c	b.lo	0x24888
0000000000024860	cbnz	w20, 0x24880
0000000000024864	adr	x1, #0x6227c
0000000000024868	nop
000000000002486c	mov	x0, x19
0000000000024870	mov	w2, #0x3
0000000000024874	ldp	x29, x30, [sp, #0x10]
0000000000024878	ldp	x20, x19, [sp], #0x20
000000000002487c	b	_AddTLSRecord
0000000000024880	adrp	x8, 98 ; 0x86000
0000000000024884	str	xzr, [x8, #0xab0]
0000000000024888	ldp	x29, x30, [sp, #0x10]
000000000002488c	ldp	x20, x19, [sp], #0x20
0000000000024890	ret
0000000000024894	stp	x20, x19, [sp, #-0x20]!
0000000000024898	stp	x29, x30, [sp, #0x10]
000000000002489c	add	x29, sp, #0x10
00000000000248a0	mov	x19, x1
00000000000248a4	mov	x20, x0
00000000000248a8	adr	x8, #0x6219b
00000000000248ac	nop
00000000000248b0	ldarb	w8, [x8]
00000000000248b4	tbz	w8, #0x0, 0x248bc
00000000000248b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000248bc	sub	w8, w20, #0x1
00000000000248c0	cmp	w8, #0x3
00000000000248c4	b.hs	0x248d4
00000000000248c8	ldp	x29, x30, [sp, #0x10]
00000000000248cc	ldp	x20, x19, [sp], #0x20
00000000000248d0	ret
00000000000248d4	adr	x1, #0x6220c
00000000000248d8	nop
00000000000248dc	mov	x0, x19
00000000000248e0	mov	w2, #0x3
00000000000248e4	ldp	x29, x30, [sp, #0x10]
00000000000248e8	ldp	x20, x19, [sp], #0x20
00000000000248ec	b	_AddTLSRecord
00000000000248f0	stp	x20, x19, [sp, #-0x20]!
00000000000248f4	stp	x29, x30, [sp, #0x10]
00000000000248f8	add	x29, sp, #0x10
00000000000248fc	mov	x19, x1
0000000000024900	mov	x20, x0
0000000000024904	adr	x8, #0x6213f
0000000000024908	nop
000000000002490c	ldarb	w8, [x8]
0000000000024910	tbz	w8, #0x0, 0x24918
0000000000024914	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024918	sub	w8, w20, #0x1
000000000002491c	cmp	w8, #0x3
0000000000024920	b.hs	0x24930
0000000000024924	ldp	x29, x30, [sp, #0x10]
0000000000024928	ldp	x20, x19, [sp], #0x20
000000000002492c	ret
0000000000024930	adr	x1, #0x621b0
0000000000024934	nop
0000000000024938	mov	x0, x19
000000000002493c	mov	w2, #0x3
0000000000024940	ldp	x29, x30, [sp, #0x10]
0000000000024944	ldp	x20, x19, [sp], #0x20
0000000000024948	b	_AddTLSRecord
000000000002494c	stp	x20, x19, [sp, #-0x20]!
0000000000024950	stp	x29, x30, [sp, #0x10]
0000000000024954	add	x29, sp, #0x10
0000000000024958	mov	x19, x1
000000000002495c	mov	x20, x0
0000000000024960	adr	x8, #0x620e3
0000000000024964	nop
0000000000024968	ldarb	w8, [x8]
000000000002496c	tbz	w8, #0x0, 0x24974
0000000000024970	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024974	sub	w8, w20, #0x1
0000000000024978	cmp	w8, #0x2
000000000002497c	b.lo	0x249a8
0000000000024980	cbnz	w20, 0x249a0
0000000000024984	adr	x1, #0x6215c
0000000000024988	nop
000000000002498c	mov	x0, x19
0000000000024990	mov	w2, #0x3
0000000000024994	ldp	x29, x30, [sp, #0x10]
0000000000024998	ldp	x20, x19, [sp], #0x20
000000000002499c	b	_AddTLSRecord
00000000000249a0	adrp	x8, 98 ; 0x86000
00000000000249a4	str	xzr, [x8, #0xa98]
00000000000249a8	ldp	x29, x30, [sp, #0x10]
00000000000249ac	ldp	x20, x19, [sp], #0x20
00000000000249b0	ret
00000000000249b4	stp	x20, x19, [sp, #-0x20]!
00000000000249b8	stp	x29, x30, [sp, #0x10]
00000000000249bc	add	x29, sp, #0x10
00000000000249c0	mov	x19, x1
00000000000249c4	mov	x20, x0
00000000000249c8	adr	x8, #0x6207b
00000000000249cc	nop
00000000000249d0	ldarb	w8, [x8]
00000000000249d4	tbz	w8, #0x0, 0x249dc
00000000000249d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000249dc	sub	w8, w20, #0x1
00000000000249e0	cmp	w8, #0x3
00000000000249e4	b.hs	0x249f4
00000000000249e8	ldp	x29, x30, [sp, #0x10]
00000000000249ec	ldp	x20, x19, [sp], #0x20
00000000000249f0	ret
00000000000249f4	adr	x1, #0x620ec
00000000000249f8	nop
00000000000249fc	mov	x0, x19
0000000000024a00	mov	w2, #0x3
0000000000024a04	ldp	x29, x30, [sp, #0x10]
0000000000024a08	ldp	x20, x19, [sp], #0x20
0000000000024a0c	b	_AddTLSRecord
0000000000024a10	stp	x20, x19, [sp, #-0x20]!
0000000000024a14	stp	x29, x30, [sp, #0x10]
0000000000024a18	add	x29, sp, #0x10
0000000000024a1c	mov	x19, x1
0000000000024a20	mov	x20, x0
0000000000024a24	adr	x8, #0x6201f
0000000000024a28	nop
0000000000024a2c	ldarb	w8, [x8]
0000000000024a30	tbz	w8, #0x0, 0x24a38
0000000000024a34	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024a38	sub	w8, w20, #0x1
0000000000024a3c	cmp	w8, #0x2
0000000000024a40	b.lo	0x24a70
0000000000024a44	cbnz	w20, 0x24a64
0000000000024a48	adr	x1, #0x62098
0000000000024a4c	nop
0000000000024a50	mov	x0, x19
0000000000024a54	mov	w2, #0x3
0000000000024a58	ldp	x29, x30, [sp, #0x10]
0000000000024a5c	ldp	x20, x19, [sp], #0x20
0000000000024a60	b	_AddTLSRecord
0000000000024a64	adr	x8, #0x6203c
0000000000024a68	nop
0000000000024a6c	stp	xzr, xzr, [x8]
0000000000024a70	ldp	x29, x30, [sp, #0x10]
0000000000024a74	ldp	x20, x19, [sp], #0x20
0000000000024a78	ret
0000000000024a7c	stp	x20, x19, [sp, #-0x20]!
0000000000024a80	stp	x29, x30, [sp, #0x10]
0000000000024a84	add	x29, sp, #0x10
0000000000024a88	mov	x19, x1
0000000000024a8c	mov	x20, x0
0000000000024a90	adr	x8, #0x61fb3
0000000000024a94	nop
0000000000024a98	ldarb	w8, [x8]
0000000000024a9c	tbz	w8, #0x0, 0x24aa4
0000000000024aa0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024aa4	sub	w8, w20, #0x1
0000000000024aa8	cmp	w8, #0x3
0000000000024aac	b.hs	0x24abc
0000000000024ab0	ldp	x29, x30, [sp, #0x10]
0000000000024ab4	ldp	x20, x19, [sp], #0x20
0000000000024ab8	ret
0000000000024abc	adr	x1, #0x62024
0000000000024ac0	nop
0000000000024ac4	mov	x0, x19
0000000000024ac8	mov	w2, #0x3
0000000000024acc	ldp	x29, x30, [sp, #0x10]
0000000000024ad0	ldp	x20, x19, [sp], #0x20
0000000000024ad4	b	_AddTLSRecord
0000000000024ad8	stp	x20, x19, [sp, #-0x20]!
0000000000024adc	stp	x29, x30, [sp, #0x10]
0000000000024ae0	add	x29, sp, #0x10
0000000000024ae4	mov	x19, x1
0000000000024ae8	mov	x20, x0
0000000000024aec	adr	x8, #0x61f57
0000000000024af0	nop
0000000000024af4	ldarb	w8, [x8]
0000000000024af8	tbz	w8, #0x0, 0x24b00
0000000000024afc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024b00	sub	w8, w20, #0x1
0000000000024b04	cmp	w8, #0x3
0000000000024b08	b.hs	0x24b18
0000000000024b0c	ldp	x29, x30, [sp, #0x10]
0000000000024b10	ldp	x20, x19, [sp], #0x20
0000000000024b14	ret
0000000000024b18	adr	x1, #0x61fc8
0000000000024b1c	nop
0000000000024b20	mov	x0, x19
0000000000024b24	mov	w2, #0x3
0000000000024b28	ldp	x29, x30, [sp, #0x10]
0000000000024b2c	ldp	x20, x19, [sp], #0x20
0000000000024b30	b	_AddTLSRecord
0000000000024b34	stp	x20, x19, [sp, #-0x20]!
0000000000024b38	stp	x29, x30, [sp, #0x10]
0000000000024b3c	add	x29, sp, #0x10
0000000000024b40	mov	x19, x1
0000000000024b44	mov	x20, x0
0000000000024b48	adr	x8, #0x61efb
0000000000024b4c	nop
0000000000024b50	ldarb	w8, [x8]
0000000000024b54	tbz	w8, #0x0, 0x24b5c
0000000000024b58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024b5c	sub	w8, w20, #0x1
0000000000024b60	cmp	w8, #0x2
0000000000024b64	b.lo	0x24b90
0000000000024b68	cbnz	w20, 0x24b88
0000000000024b6c	adr	x1, #0x61f74
0000000000024b70	nop
0000000000024b74	mov	x0, x19
0000000000024b78	mov	w2, #0x3
0000000000024b7c	ldp	x29, x30, [sp, #0x10]
0000000000024b80	ldp	x20, x19, [sp], #0x20
0000000000024b84	b	_AddTLSRecord
0000000000024b88	adrp	x8, 98 ; 0x86000
0000000000024b8c	str	xzr, [x8, #0xa98]
0000000000024b90	ldp	x29, x30, [sp, #0x10]
0000000000024b94	ldp	x20, x19, [sp], #0x20
0000000000024b98	ret
0000000000024b9c	stp	x20, x19, [sp, #-0x20]!
0000000000024ba0	stp	x29, x30, [sp, #0x10]
0000000000024ba4	add	x29, sp, #0x10
0000000000024ba8	mov	x19, x1
0000000000024bac	mov	x20, x0
0000000000024bb0	adr	x8, #0x61e93
0000000000024bb4	nop
0000000000024bb8	ldarb	w8, [x8]
0000000000024bbc	tbz	w8, #0x0, 0x24bc4
0000000000024bc0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024bc4	sub	w8, w20, #0x1
0000000000024bc8	cmp	w8, #0x3
0000000000024bcc	b.hs	0x24bdc
0000000000024bd0	ldp	x29, x30, [sp, #0x10]
0000000000024bd4	ldp	x20, x19, [sp], #0x20
0000000000024bd8	ret
0000000000024bdc	adr	x1, #0x61f04
0000000000024be0	nop
0000000000024be4	mov	x0, x19
0000000000024be8	mov	w2, #0x3
0000000000024bec	ldp	x29, x30, [sp, #0x10]
0000000000024bf0	ldp	x20, x19, [sp], #0x20
0000000000024bf4	b	_AddTLSRecord
0000000000024bf8	stp	x20, x19, [sp, #-0x20]!
0000000000024bfc	stp	x29, x30, [sp, #0x10]
0000000000024c00	add	x29, sp, #0x10
0000000000024c04	mov	x19, x1
0000000000024c08	mov	x20, x0
0000000000024c0c	adr	x8, #0x61e37
0000000000024c10	nop
0000000000024c14	ldarb	w8, [x8]
0000000000024c18	tbz	w8, #0x0, 0x24c20
0000000000024c1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024c20	sub	w8, w20, #0x1
0000000000024c24	cmp	w8, #0x2
0000000000024c28	b.lo	0x24c58
0000000000024c2c	cbnz	w20, 0x24c4c
0000000000024c30	adr	x1, #0x61eb0
0000000000024c34	nop
0000000000024c38	mov	x0, x19
0000000000024c3c	mov	w2, #0x3
0000000000024c40	ldp	x29, x30, [sp, #0x10]
0000000000024c44	ldp	x20, x19, [sp], #0x20
0000000000024c48	b	_AddTLSRecord
0000000000024c4c	adr	x8, #0x61e7c
0000000000024c50	nop
0000000000024c54	stp	xzr, xzr, [x8]
0000000000024c58	ldp	x29, x30, [sp, #0x10]
0000000000024c5c	ldp	x20, x19, [sp], #0x20
0000000000024c60	ret
0000000000024c64	stp	x20, x19, [sp, #-0x20]!
0000000000024c68	stp	x29, x30, [sp, #0x10]
0000000000024c6c	add	x29, sp, #0x10
0000000000024c70	mov	x19, x1
0000000000024c74	mov	x20, x0
0000000000024c78	adr	x8, #0x61dcb
0000000000024c7c	nop
0000000000024c80	ldarb	w8, [x8]
0000000000024c84	tbz	w8, #0x0, 0x24c8c
0000000000024c88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024c8c	sub	w8, w20, #0x1
0000000000024c90	cmp	w8, #0x2
0000000000024c94	b.lo	0x24cc0
0000000000024c98	cbnz	w20, 0x24cb8
0000000000024c9c	adr	x1, #0x61e44
0000000000024ca0	nop
0000000000024ca4	mov	x0, x19
0000000000024ca8	mov	w2, #0x3
0000000000024cac	ldp	x29, x30, [sp, #0x10]
0000000000024cb0	ldp	x20, x19, [sp], #0x20
0000000000024cb4	b	_AddTLSRecord
0000000000024cb8	adrp	x8, 98 ; 0x86000
0000000000024cbc	str	xzr, [x8, #0xab0]
0000000000024cc0	ldp	x29, x30, [sp, #0x10]
0000000000024cc4	ldp	x20, x19, [sp], #0x20
0000000000024cc8	ret
0000000000024ccc	stp	x20, x19, [sp, #-0x20]!
0000000000024cd0	stp	x29, x30, [sp, #0x10]
0000000000024cd4	add	x29, sp, #0x10
0000000000024cd8	mov	x19, x1
0000000000024cdc	mov	x20, x0
0000000000024ce0	adr	x8, #0x61d63
0000000000024ce4	nop
0000000000024ce8	ldarb	w8, [x8]
0000000000024cec	tbz	w8, #0x0, 0x24cf4
0000000000024cf0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024cf4	sub	w8, w20, #0x1
0000000000024cf8	cmp	w8, #0x2
0000000000024cfc	b.lo	0x24d30
0000000000024d00	cbnz	w20, 0x24d20
0000000000024d04	adr	x1, #0x61ddc
0000000000024d08	nop
0000000000024d0c	mov	x0, x19
0000000000024d10	mov	w2, #0x3
0000000000024d14	ldp	x29, x30, [sp, #0x10]
0000000000024d18	ldp	x20, x19, [sp], #0x20
0000000000024d1c	b	_AddTLSRecord
0000000000024d20	adr	x8, #0x61d78
0000000000024d24	nop
0000000000024d28	str	xzr, [x8, #0x20]
0000000000024d2c	str	xzr, [x8]
0000000000024d30	ldp	x29, x30, [sp, #0x10]
0000000000024d34	ldp	x20, x19, [sp], #0x20
0000000000024d38	ret
0000000000024d3c	stp	x20, x19, [sp, #-0x20]!
0000000000024d40	stp	x29, x30, [sp, #0x10]
0000000000024d44	add	x29, sp, #0x10
0000000000024d48	mov	x19, x1
0000000000024d4c	mov	x20, x0
0000000000024d50	adr	x8, #0x61cf3
0000000000024d54	nop
0000000000024d58	ldarb	w8, [x8]
0000000000024d5c	tbz	w8, #0x0, 0x24d64
0000000000024d60	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024d64	sub	w8, w20, #0x1
0000000000024d68	cmp	w8, #0x3
0000000000024d6c	b.hs	0x24d7c
0000000000024d70	ldp	x29, x30, [sp, #0x10]
0000000000024d74	ldp	x20, x19, [sp], #0x20
0000000000024d78	ret
0000000000024d7c	adr	x1, #0x61d64
0000000000024d80	nop
0000000000024d84	mov	x0, x19
0000000000024d88	mov	w2, #0x3
0000000000024d8c	ldp	x29, x30, [sp, #0x10]
0000000000024d90	ldp	x20, x19, [sp], #0x20
0000000000024d94	b	_AddTLSRecord
0000000000024d98	stp	x20, x19, [sp, #-0x20]!
0000000000024d9c	stp	x29, x30, [sp, #0x10]
0000000000024da0	add	x29, sp, #0x10
0000000000024da4	mov	x19, x1
0000000000024da8	mov	x20, x0
0000000000024dac	adr	x8, #0x61c97
0000000000024db0	nop
0000000000024db4	ldarb	w8, [x8]
0000000000024db8	tbz	w8, #0x0, 0x24dc0
0000000000024dbc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024dc0	sub	w8, w20, #0x1
0000000000024dc4	cmp	w8, #0x3
0000000000024dc8	b.hs	0x24dd8
0000000000024dcc	ldp	x29, x30, [sp, #0x10]
0000000000024dd0	ldp	x20, x19, [sp], #0x20
0000000000024dd4	ret
0000000000024dd8	adr	x1, #0x61d08
0000000000024ddc	nop
0000000000024de0	mov	x0, x19
0000000000024de4	mov	w2, #0x3
0000000000024de8	ldp	x29, x30, [sp, #0x10]
0000000000024dec	ldp	x20, x19, [sp], #0x20
0000000000024df0	b	_AddTLSRecord
0000000000024df4	stp	x20, x19, [sp, #-0x20]!
0000000000024df8	stp	x29, x30, [sp, #0x10]
0000000000024dfc	add	x29, sp, #0x10
0000000000024e00	mov	x19, x1
0000000000024e04	mov	x20, x0
0000000000024e08	adr	x8, #0x61c3b
0000000000024e0c	nop
0000000000024e10	ldarb	w8, [x8]
0000000000024e14	tbz	w8, #0x0, 0x24e1c
0000000000024e18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024e1c	sub	w8, w20, #0x1
0000000000024e20	cmp	w8, #0x3
0000000000024e24	b.hs	0x24e34
0000000000024e28	ldp	x29, x30, [sp, #0x10]
0000000000024e2c	ldp	x20, x19, [sp], #0x20
0000000000024e30	ret
0000000000024e34	adr	x1, #0x61cac
0000000000024e38	nop
0000000000024e3c	mov	x0, x19
0000000000024e40	mov	w2, #0x3
0000000000024e44	ldp	x29, x30, [sp, #0x10]
0000000000024e48	ldp	x20, x19, [sp], #0x20
0000000000024e4c	b	_AddTLSRecord
0000000000024e50	stp	x20, x19, [sp, #-0x20]!
0000000000024e54	stp	x29, x30, [sp, #0x10]
0000000000024e58	add	x29, sp, #0x10
0000000000024e5c	mov	x19, x1
0000000000024e60	mov	x20, x0
0000000000024e64	adr	x8, #0x61bdf
0000000000024e68	nop
0000000000024e6c	ldarb	w8, [x8]
0000000000024e70	tbz	w8, #0x0, 0x24e78
0000000000024e74	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024e78	sub	w8, w20, #0x1
0000000000024e7c	cmp	w8, #0x3
0000000000024e80	b.hs	0x24e90
0000000000024e84	ldp	x29, x30, [sp, #0x10]
0000000000024e88	ldp	x20, x19, [sp], #0x20
0000000000024e8c	ret
0000000000024e90	adr	x1, #0x61c50
0000000000024e94	nop
0000000000024e98	mov	x0, x19
0000000000024e9c	mov	w2, #0x3
0000000000024ea0	ldp	x29, x30, [sp, #0x10]
0000000000024ea4	ldp	x20, x19, [sp], #0x20
0000000000024ea8	b	_AddTLSRecord
0000000000024eac	stp	x20, x19, [sp, #-0x20]!
0000000000024eb0	stp	x29, x30, [sp, #0x10]
0000000000024eb4	add	x29, sp, #0x10
0000000000024eb8	mov	x19, x1
0000000000024ebc	mov	x20, x0
0000000000024ec0	adr	x8, #0x61b83
0000000000024ec4	nop
0000000000024ec8	ldarb	w8, [x8]
0000000000024ecc	tbz	w8, #0x0, 0x24ed4
0000000000024ed0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024ed4	sub	w8, w20, #0x1
0000000000024ed8	cmp	w8, #0x3
0000000000024edc	b.hs	0x24eec
0000000000024ee0	ldp	x29, x30, [sp, #0x10]
0000000000024ee4	ldp	x20, x19, [sp], #0x20
0000000000024ee8	ret
0000000000024eec	adr	x1, #0x61bf4
0000000000024ef0	nop
0000000000024ef4	mov	x0, x19
0000000000024ef8	mov	w2, #0x3
0000000000024efc	ldp	x29, x30, [sp, #0x10]
0000000000024f00	ldp	x20, x19, [sp], #0x20
0000000000024f04	b	_AddTLSRecord
0000000000024f08	stp	x20, x19, [sp, #-0x20]!
0000000000024f0c	stp	x29, x30, [sp, #0x10]
0000000000024f10	add	x29, sp, #0x10
0000000000024f14	mov	x19, x1
0000000000024f18	mov	x20, x0
0000000000024f1c	adr	x8, #0x61b27
0000000000024f20	nop
0000000000024f24	ldarb	w8, [x8]
0000000000024f28	tbz	w8, #0x0, 0x24f30
0000000000024f2c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024f30	sub	w8, w20, #0x1
0000000000024f34	cmp	w8, #0x3
0000000000024f38	b.hs	0x24f48
0000000000024f3c	ldp	x29, x30, [sp, #0x10]
0000000000024f40	ldp	x20, x19, [sp], #0x20
0000000000024f44	ret
0000000000024f48	adr	x1, #0x61b98
0000000000024f4c	nop
0000000000024f50	mov	x0, x19
0000000000024f54	mov	w2, #0x3
0000000000024f58	ldp	x29, x30, [sp, #0x10]
0000000000024f5c	ldp	x20, x19, [sp], #0x20
0000000000024f60	b	_AddTLSRecord
0000000000024f64	stp	x20, x19, [sp, #-0x20]!
0000000000024f68	stp	x29, x30, [sp, #0x10]
0000000000024f6c	add	x29, sp, #0x10
0000000000024f70	mov	x19, x1
0000000000024f74	mov	x20, x0
0000000000024f78	adr	x8, #0x61acb
0000000000024f7c	nop
0000000000024f80	ldarb	w8, [x8]
0000000000024f84	tbz	w8, #0x0, 0x24f8c
0000000000024f88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024f8c	sub	w8, w20, #0x1
0000000000024f90	cmp	w8, #0x3
0000000000024f94	b.hs	0x24fa4
0000000000024f98	ldp	x29, x30, [sp, #0x10]
0000000000024f9c	ldp	x20, x19, [sp], #0x20
0000000000024fa0	ret
0000000000024fa4	adr	x1, #0x61b3c
0000000000024fa8	nop
0000000000024fac	mov	x0, x19
0000000000024fb0	mov	w2, #0x3
0000000000024fb4	ldp	x29, x30, [sp, #0x10]
0000000000024fb8	ldp	x20, x19, [sp], #0x20
0000000000024fbc	b	_AddTLSRecord
0000000000024fc0	stp	x20, x19, [sp, #-0x20]!
0000000000024fc4	stp	x29, x30, [sp, #0x10]
0000000000024fc8	add	x29, sp, #0x10
0000000000024fcc	mov	x19, x1
0000000000024fd0	mov	x20, x0
0000000000024fd4	adr	x8, #0x61a6f
0000000000024fd8	nop
0000000000024fdc	ldarb	w8, [x8]
0000000000024fe0	tbz	w8, #0x0, 0x24fe8
0000000000024fe4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024fe8	sub	w8, w20, #0x1
0000000000024fec	cmp	w8, #0x3
0000000000024ff0	b.hs	0x25000
0000000000024ff4	ldp	x29, x30, [sp, #0x10]
0000000000024ff8	ldp	x20, x19, [sp], #0x20
0000000000024ffc	ret
0000000000025000	adr	x1, #0x61ae0
0000000000025004	nop
0000000000025008	mov	x0, x19
000000000002500c	mov	w2, #0x3
0000000000025010	ldp	x29, x30, [sp, #0x10]
0000000000025014	ldp	x20, x19, [sp], #0x20
0000000000025018	b	_AddTLSRecord
000000000002501c	stp	x20, x19, [sp, #-0x20]!
0000000000025020	stp	x29, x30, [sp, #0x10]
0000000000025024	add	x29, sp, #0x10
0000000000025028	mov	x19, x1
000000000002502c	mov	x20, x0
0000000000025030	adr	x8, #0x61a13
0000000000025034	nop
0000000000025038	ldarb	w8, [x8]
000000000002503c	tbz	w8, #0x0, 0x25044
0000000000025040	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025044	sub	w8, w20, #0x1
0000000000025048	cmp	w8, #0x3
000000000002504c	b.hs	0x2505c
0000000000025050	ldp	x29, x30, [sp, #0x10]
0000000000025054	ldp	x20, x19, [sp], #0x20
0000000000025058	ret
000000000002505c	adr	x1, #0x61a84
0000000000025060	nop
0000000000025064	mov	x0, x19
0000000000025068	mov	w2, #0x3
000000000002506c	ldp	x29, x30, [sp, #0x10]
0000000000025070	ldp	x20, x19, [sp], #0x20
0000000000025074	b	_AddTLSRecord
0000000000025078	stp	x20, x19, [sp, #-0x20]!
000000000002507c	stp	x29, x30, [sp, #0x10]
0000000000025080	add	x29, sp, #0x10
0000000000025084	mov	x19, x1
0000000000025088	mov	x20, x0
000000000002508c	adr	x8, #0x619b7
0000000000025090	nop
0000000000025094	ldarb	w8, [x8]
0000000000025098	tbz	w8, #0x0, 0x250a0
000000000002509c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000250a0	sub	w8, w20, #0x1
00000000000250a4	cmp	w8, #0x2
00000000000250a8	b.lo	0x250d4
00000000000250ac	cbnz	w20, 0x250cc
00000000000250b0	adr	x1, #0x61a30
00000000000250b4	nop
00000000000250b8	mov	x0, x19
00000000000250bc	mov	w2, #0x3
00000000000250c0	ldp	x29, x30, [sp, #0x10]
00000000000250c4	ldp	x20, x19, [sp], #0x20
00000000000250c8	b	_AddTLSRecord
00000000000250cc	adrp	x8, 97 ; 0x86000
00000000000250d0	str	xzr, [x8, #0xac0]
00000000000250d4	ldp	x29, x30, [sp, #0x10]
00000000000250d8	ldp	x20, x19, [sp], #0x20
00000000000250dc	ret
00000000000250e0	stp	x20, x19, [sp, #-0x20]!
00000000000250e4	stp	x29, x30, [sp, #0x10]
00000000000250e8	add	x29, sp, #0x10
00000000000250ec	mov	x19, x1
00000000000250f0	mov	x20, x0
00000000000250f4	adr	x8, #0x6194f
00000000000250f8	nop
00000000000250fc	ldarb	w8, [x8]
0000000000025100	tbz	w8, #0x0, 0x25108
0000000000025104	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025108	sub	w8, w20, #0x1
000000000002510c	cmp	w8, #0x3
0000000000025110	b.hs	0x25120
0000000000025114	ldp	x29, x30, [sp, #0x10]
0000000000025118	ldp	x20, x19, [sp], #0x20
000000000002511c	ret
0000000000025120	adr	x1, #0x619c0
0000000000025124	nop
0000000000025128	mov	x0, x19
000000000002512c	mov	w2, #0x3
0000000000025130	ldp	x29, x30, [sp, #0x10]
0000000000025134	ldp	x20, x19, [sp], #0x20
0000000000025138	b	_AddTLSRecord
000000000002513c	stp	x20, x19, [sp, #-0x20]!
0000000000025140	stp	x29, x30, [sp, #0x10]
0000000000025144	add	x29, sp, #0x10
0000000000025148	mov	x19, x1
000000000002514c	mov	x20, x0
0000000000025150	adr	x8, #0x618f3
0000000000025154	nop
0000000000025158	ldarb	w8, [x8]
000000000002515c	tbz	w8, #0x0, 0x25164
0000000000025160	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025164	sub	w8, w20, #0x1
0000000000025168	cmp	w8, #0x3
000000000002516c	b.hs	0x2517c
0000000000025170	ldp	x29, x30, [sp, #0x10]
0000000000025174	ldp	x20, x19, [sp], #0x20
0000000000025178	ret
000000000002517c	adr	x1, #0x61964
0000000000025180	nop
0000000000025184	mov	x0, x19
0000000000025188	mov	w2, #0x3
000000000002518c	ldp	x29, x30, [sp, #0x10]
0000000000025190	ldp	x20, x19, [sp], #0x20
0000000000025194	b	_AddTLSRecord
0000000000025198	stp	x20, x19, [sp, #-0x20]!
000000000002519c	stp	x29, x30, [sp, #0x10]
00000000000251a0	add	x29, sp, #0x10
00000000000251a4	mov	x19, x1
00000000000251a8	mov	x20, x0
00000000000251ac	adr	x8, #0x61897
00000000000251b0	nop
00000000000251b4	ldarb	w8, [x8]
00000000000251b8	tbz	w8, #0x0, 0x251c0
00000000000251bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000251c0	sub	w8, w20, #0x1
00000000000251c4	cmp	w8, #0x3
00000000000251c8	b.hs	0x251d8
00000000000251cc	ldp	x29, x30, [sp, #0x10]
00000000000251d0	ldp	x20, x19, [sp], #0x20
00000000000251d4	ret
00000000000251d8	adr	x1, #0x61908
00000000000251dc	nop
00000000000251e0	mov	x0, x19
00000000000251e4	mov	w2, #0x3
00000000000251e8	ldp	x29, x30, [sp, #0x10]
00000000000251ec	ldp	x20, x19, [sp], #0x20
00000000000251f0	b	_AddTLSRecord
00000000000251f4	stp	x20, x19, [sp, #-0x20]!
00000000000251f8	stp	x29, x30, [sp, #0x10]
00000000000251fc	add	x29, sp, #0x10
0000000000025200	mov	x19, x1
0000000000025204	mov	x20, x0
0000000000025208	adr	x8, #0x6183b
000000000002520c	nop
0000000000025210	ldarb	w8, [x8]
0000000000025214	tbz	w8, #0x0, 0x2521c
0000000000025218	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002521c	sub	w8, w20, #0x1
0000000000025220	cmp	w8, #0x2
0000000000025224	b.lo	0x25250
0000000000025228	cbnz	w20, 0x25248
000000000002522c	adr	x1, #0x618b4
0000000000025230	nop
0000000000025234	mov	x0, x19
0000000000025238	mov	w2, #0x3
000000000002523c	ldp	x29, x30, [sp, #0x10]
0000000000025240	ldp	x20, x19, [sp], #0x20
0000000000025244	b	_AddTLSRecord
0000000000025248	adrp	x8, 97 ; 0x86000
000000000002524c	str	xzr, [x8, #0xad0]
0000000000025250	ldp	x29, x30, [sp, #0x10]
0000000000025254	ldp	x20, x19, [sp], #0x20
0000000000025258	ret
000000000002525c	stp	x20, x19, [sp, #-0x20]!
0000000000025260	stp	x29, x30, [sp, #0x10]
0000000000025264	add	x29, sp, #0x10
0000000000025268	mov	x19, x1
000000000002526c	mov	x20, x0
0000000000025270	adr	x8, #0x617d3
0000000000025274	nop
0000000000025278	ldarb	w8, [x8]
000000000002527c	tbz	w8, #0x0, 0x25284
0000000000025280	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025284	sub	w8, w20, #0x1
0000000000025288	cmp	w8, #0x2
000000000002528c	b.lo	0x252b8
0000000000025290	cbnz	w20, 0x252b0
0000000000025294	adr	x1, #0x6184c
0000000000025298	nop
000000000002529c	mov	x0, x19
00000000000252a0	mov	w2, #0x3
00000000000252a4	ldp	x29, x30, [sp, #0x10]
00000000000252a8	ldp	x20, x19, [sp], #0x20
00000000000252ac	b	_AddTLSRecord
00000000000252b0	adrp	x8, 97 ; 0x86000
00000000000252b4	str	xzr, [x8, #0xad0]
00000000000252b8	ldp	x29, x30, [sp, #0x10]
00000000000252bc	ldp	x20, x19, [sp], #0x20
00000000000252c0	ret
00000000000252c4	stp	x20, x19, [sp, #-0x20]!
00000000000252c8	stp	x29, x30, [sp, #0x10]
00000000000252cc	add	x29, sp, #0x10
00000000000252d0	mov	x19, x1
00000000000252d4	mov	x20, x0
00000000000252d8	adr	x8, #0x6176b
00000000000252dc	nop
00000000000252e0	ldarb	w8, [x8]
00000000000252e4	tbz	w8, #0x0, 0x252ec
00000000000252e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000252ec	sub	w8, w20, #0x1
00000000000252f0	cmp	w8, #0x3
00000000000252f4	b.hs	0x25304
00000000000252f8	ldp	x29, x30, [sp, #0x10]
00000000000252fc	ldp	x20, x19, [sp], #0x20
0000000000025300	ret
0000000000025304	adr	x1, #0x617dc
0000000000025308	nop
000000000002530c	mov	x0, x19
0000000000025310	mov	w2, #0x3
0000000000025314	ldp	x29, x30, [sp, #0x10]
0000000000025318	ldp	x20, x19, [sp], #0x20
000000000002531c	b	_AddTLSRecord
0000000000025320	stp	x20, x19, [sp, #-0x20]!
0000000000025324	stp	x29, x30, [sp, #0x10]
0000000000025328	add	x29, sp, #0x10
000000000002532c	mov	x19, x1
0000000000025330	mov	x20, x0
0000000000025334	adr	x8, #0x6170f
0000000000025338	nop
000000000002533c	ldarb	w8, [x8]
0000000000025340	tbz	w8, #0x0, 0x25348
0000000000025344	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025348	sub	w8, w20, #0x1
000000000002534c	cmp	w8, #0x2
0000000000025350	b.lo	0x2537c
0000000000025354	cbnz	w20, 0x25374
0000000000025358	adr	x1, #0x61788
000000000002535c	nop
0000000000025360	mov	x0, x19
0000000000025364	mov	w2, #0x3
0000000000025368	ldp	x29, x30, [sp, #0x10]
000000000002536c	ldp	x20, x19, [sp], #0x20
0000000000025370	b	_AddTLSRecord
0000000000025374	adrp	x8, 97 ; 0x86000
0000000000025378	str	xzr, [x8, #0xad8]
000000000002537c	ldp	x29, x30, [sp, #0x10]
0000000000025380	ldp	x20, x19, [sp], #0x20
0000000000025384	ret
_blockDisposeHelper:
0000000000025388	sub	sp, sp, #0x50
000000000002538c	stp	x22, x21, [sp, #0x20]
0000000000025390	stp	x20, x19, [sp, #0x30]
0000000000025394	stp	x29, x30, [sp, #0x40]
0000000000025398	add	x29, sp, #0x40
000000000002539c	mov	x20, x0
00000000000253a0	stp	xzr, xzr, [sp, #0x8]
00000000000253a4	str	xzr, [sp, #0x18]
00000000000253a8	bl	_Kotlin_initRuntimeIfNeeded
00000000000253ac	adrp	x19, 71 ; 0x6c000
00000000000253b0	add	x19, x19, #0xbb0
00000000000253b4	ldr	x21, [x19]
00000000000253b8	mov	x0, x19
00000000000253bc	blr	x21
00000000000253c0	ldr	x8, [x0]
00000000000253c4	add	x0, x8, #0x138
00000000000253c8	ldaxr	w8, [x0]
00000000000253cc	stlxr	w9, wzr, [x0]
00000000000253d0	cbnz	w9, 0x253c8
00000000000253d4	adr	x22, #0x6166f
00000000000253d8	nop
00000000000253dc	cmp	w8, #0x1
00000000000253e0	b.ne	0x253f0
00000000000253e4	ldarb	w8, [x22]
00000000000253e8	tbz	w8, #0x0, 0x253f0
00000000000253ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000253f0	mov	x0, x19
00000000000253f4	blr	x21
00000000000253f8	ldr	x8, [x0]
00000000000253fc	ldr	x9, [x8, #0x110]
0000000000025400	add	x10, sp, #0x8
0000000000025404	str	x10, [x8, #0x110]
0000000000025408	mov	x8, #0x300000000
000000000002540c	stp	x9, x8, [sp, #0x10]
0000000000025410	ldarb	w8, [x22]
0000000000025414	tbz	w8, #0x0, 0x2541c
0000000000025418	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002541c	ldr	x8, [x20, #0x20]
0000000000025420	cbz	x8, 0x2543c
0000000000025424	ldr	x1, [x20, #0x28]
0000000000025428	mov	x0, x19
000000000002542c	blr	x21
0000000000025430	ldr	x8, [x0]
0000000000025434	add	x0, x8, #0x8
0000000000025438	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000002543c	mov	x0, x19
0000000000025440	blr	x21
0000000000025444	ldr	x8, [x0]
0000000000025448	ldr	x9, [sp, #0x10]
000000000002544c	str	x9, [x8, #0x110]
0000000000025450	add	x8, x8, #0x138
0000000000025454	mov	w9, #0x1
0000000000025458	ldaxr	wzr, [x8]
000000000002545c	stlxr	w10, w9, [x8]
0000000000025460	cbnz	w10, 0x25458
0000000000025464	ldp	x29, x30, [sp, #0x40]
0000000000025468	ldp	x20, x19, [sp, #0x30]
000000000002546c	ldp	x22, x21, [sp, #0x20]
0000000000025470	add	sp, sp, #0x50
0000000000025474	ret
_blockCopyHelper:
0000000000025478	stp	x22, x21, [sp, #-0x30]!
000000000002547c	stp	x20, x19, [sp, #0x10]
0000000000025480	stp	x29, x30, [sp, #0x20]
0000000000025484	add	x29, sp, #0x20
0000000000025488	mov	x20, x1
000000000002548c	mov	x19, x0
0000000000025490	adr	x8, #0x615b3
0000000000025494	nop
0000000000025498	ldarb	w8, [x8]
000000000002549c	tbz	w8, #0x0, 0x254a4
00000000000254a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000254a4	bl	_Kotlin_initRuntimeIfNeeded
00000000000254a8	ldr	x20, [x20, #0x20]
00000000000254ac	adrp	x0, 71 ; 0x6c000
00000000000254b0	add	x0, x0, #0xbb0
00000000000254b4	ldr	x8, [x0]
00000000000254b8	blr	x8
00000000000254bc	ldr	x21, [x0]
00000000000254c0	mov	w0, #0x1
00000000000254c4	mov	w1, #0x28
00000000000254c8	bl	0x519e0 ; symbol stub for: _calloc
00000000000254cc	ldr	x8, [x21, #0xa8]!
00000000000254d0	sub	x9, x21, #0x8
00000000000254d4	stp	x8, x21, [x0]
00000000000254d8	str	x0, [x8, #0x8]
00000000000254dc	str	x0, [x21]
00000000000254e0	ldr	x8, [x21, #0x10]
00000000000254e4	add	x8, x8, #0x1
00000000000254e8	str	x8, [x21, #0x10]
00000000000254ec	stp	x9, x0, [x0, #0x18]
00000000000254f0	str	x20, [x0, #0x10]!
00000000000254f4	stp	x20, x0, [x19, #0x20]
00000000000254f8	ldp	x29, x30, [sp, #0x20]
00000000000254fc	ldp	x20, x19, [sp, #0x10]
0000000000025500	ldp	x22, x21, [sp], #0x30
0000000000025504	ret
_convertFunction1:
0000000000025508	sub	sp, sp, #0x80
000000000002550c	stp	x22, x21, [sp, #0x50]
0000000000025510	stp	x20, x19, [sp, #0x60]
0000000000025514	stp	x29, x30, [sp, #0x70]
0000000000025518	add	x29, sp, #0x70
000000000002551c	mov	x20, x0
0000000000025520	str	xzr, [sp, #0x8]
0000000000025524	adrp	x19, 71 ; 0x6c000
0000000000025528	add	x19, x19, #0xbb0
000000000002552c	ldr	x21, [x19]
0000000000025530	mov	x0, x19
0000000000025534	blr	x21
0000000000025538	ldr	x8, [x0]
000000000002553c	ldr	x9, [x8, #0x110]
0000000000025540	add	x10, sp, #0x8
0000000000025544	str	x10, [x8, #0x110]
0000000000025548	mov	x8, #0x300000000
000000000002554c	stp	x9, x8, [sp, #0x10]
0000000000025550	adr	x8, #0x614f3
0000000000025554	nop
0000000000025558	ldarb	w8, [x8]
000000000002555c	tbz	w8, #0x0, 0x25564
0000000000025560	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025564	cbz	x20, 0x255a0
0000000000025568	nop
000000000002556c	ldr	x8, #0x32aac ; literal pool symbol address: __NSConcreteStackBlock
0000000000025570	mov	w9, #-0x3e000000
0000000000025574	stp	x8, x9, [sp, #0x20]
0000000000025578	adr	x8, #0x80
000000000002557c	nop
0000000000025580	adr	x9, #0x45f40
0000000000025584	nop
0000000000025588	stp	x8, x9, [sp, #0x30]
000000000002558c	stp	x20, xzr, [sp, #0x40]
0000000000025590	add	x0, sp, #0x20
0000000000025594	bl	0x51bc0 ; symbol stub for: _objc_retainBlock
0000000000025598	mov	x1, x0
000000000002559c	b	0x255a4
00000000000255a0	mov	x1, #0x0
00000000000255a4	mov	x0, x19
00000000000255a8	blr	x21
00000000000255ac	ldr	x8, [x0]
00000000000255b0	ldr	x9, [sp, #0x10]
00000000000255b4	str	x9, [x8, #0x110]
00000000000255b8	mov	x0, x1
00000000000255bc	ldp	x29, x30, [sp, #0x70]
00000000000255c0	ldp	x20, x19, [sp, #0x60]
00000000000255c4	ldp	x22, x21, [sp, #0x50]
00000000000255c8	add	sp, sp, #0x80
00000000000255cc	ret
00000000000255d0	mov	x1, x0
00000000000255d4	mov	x0, x19
00000000000255d8	blr	x21
00000000000255dc	ldr	x8, [x0]
00000000000255e0	add	x9, sp, #0x8
00000000000255e4	str	x9, [x8, #0x110]
00000000000255e8	mov	x0, x1
00000000000255ec	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
00000000000255f0	bl	0x51908 ; symbol stub for: __ZSt9terminatev
00000000000255f4	b	0x255f4
_invokeBlock1:
00000000000255f8	sub	sp, sp, #0x80
00000000000255fc	stp	x26, x25, [sp, #0x30]
0000000000025600	stp	x24, x23, [sp, #0x40]
0000000000025604	stp	x22, x21, [sp, #0x50]
0000000000025608	stp	x20, x19, [sp, #0x60]
000000000002560c	stp	x29, x30, [sp, #0x70]
0000000000025610	add	x29, sp, #0x70
0000000000025614	mov	x22, x1
0000000000025618	mov	x21, x0
000000000002561c	str	xzr, [sp, #0x20]
0000000000025620	movi.16b	v0, #0x0
0000000000025624	stp	q0, q0, [sp]
0000000000025628	mov	x8, sp
000000000002562c	add	x20, x8, #0x20
0000000000025630	add	x23, x8, #0x18
0000000000025634	bl	_Kotlin_initRuntimeIfNeeded
0000000000025638	adrp	x19, 71 ; 0x6c000
000000000002563c	add	x19, x19, #0xbb0
0000000000025640	ldr	x24, [x19]
0000000000025644	mov	x0, x19
0000000000025648	blr	x24
000000000002564c	ldr	x8, [x0]
0000000000025650	add	x0, x8, #0x138
0000000000025654	ldaxr	w8, [x0]
0000000000025658	stlxr	w9, wzr, [x0]
000000000002565c	cbnz	w9, 0x25654
0000000000025660	adr	x25, #0x613e3
0000000000025664	nop
0000000000025668	cmp	w8, #0x1
000000000002566c	b.ne	0x2567c
0000000000025670	ldarb	w8, [x25]
0000000000025674	tbz	w8, #0x0, 0x2567c
0000000000025678	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002567c	mov	x0, x19
0000000000025680	blr	x24
0000000000025684	ldr	x8, [x0]
0000000000025688	ldr	x9, [x8, #0x110]
000000000002568c	mov	x10, sp
0000000000025690	str	x10, [x8, #0x110]
0000000000025694	mov	x8, #0x500000000
0000000000025698	stp	x9, x8, [sp, #0x8]
000000000002569c	ldarb	w8, [x25]
00000000000256a0	tbz	w8, #0x0, 0x256a8
00000000000256a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000256a8	bl	_Kotlin_initRuntimeIfNeeded
00000000000256ac	ldr	x21, [x21, #0x20]
00000000000256b0	cbz	x22, 0x256f0
00000000000256b4	nop
00000000000256b8	ldr	x1, #0x615e0
00000000000256bc	mov	x0, x22
00000000000256c0	mov	x2, x23
00000000000256c4	bl	0x51b78 ; Objc message: -[x0 count]
00000000000256c8	mov	x1, x0
00000000000256cc	ldr	x8, [x21]
00000000000256d0	and	x8, x8, #0xfffffffffffffffc
00000000000256d4	ldr	x8, [x8]
00000000000256d8	ldr	w9, [x8, #0x3c]
00000000000256dc	ldr	x8, [x8, #0x40]
00000000000256e0	tbnz	w9, #0x1f, 0x25710
00000000000256e4	mov	w10, #0x2c
00000000000256e8	and	x9, x9, x10
00000000000256ec	b	0x25794
00000000000256f0	mov	x1, #0x0
00000000000256f4	str	xzr, [sp, #0x18]
00000000000256f8	ldr	x8, [x21]
00000000000256fc	and	x8, x8, #0xfffffffffffffffc
0000000000025700	ldr	x8, [x8]
0000000000025704	ldr	w9, [x8, #0x3c]
0000000000025708	ldr	x8, [x8, #0x40]
000000000002570c	tbz	w9, #0x1f, 0x256e4
0000000000025710	neg	w10, w9
0000000000025714	mvn	w9, w9
0000000000025718	cmp	w10, #0x9
000000000002571c	b.ge	0x25754
0000000000025720	cmp	w10, #0x2
0000000000025724	b.lt	0x25788
0000000000025728	mov	x10, #0x0
000000000002572c	mov	x11, x8
0000000000025730	ldr	w12, [x11]
0000000000025734	cmp	w12, #0x2b
0000000000025738	b.gt	0x25790
000000000002573c	add	x10, x10, #0x1
0000000000025740	add	x11, x11, #0x10
0000000000025744	cmp	x9, x10
0000000000025748	b.ne	0x25730
000000000002574c	mov	x10, x9
0000000000025750	b	0x25790
0000000000025754	mov	w10, #0x0
0000000000025758	add	w11, w9, w10
000000000002575c	cmp	w11, #0x0
0000000000025760	cinc	w11, w11, lt
0000000000025764	asr	w11, w11, #1
0000000000025768	sbfiz	x12, x11, #4, #32
000000000002576c	ldr	w12, [x8, x12]
0000000000025770	cmp	w12, #0x2c
0000000000025774	csinc	w10, w10, w11, ge
0000000000025778	csel	w9, w9, w11, lt
000000000002577c	cmp	w10, w9
0000000000025780	b.lt	0x25758
0000000000025784	b	0x25790
0000000000025788	mov	w10, #0x0
000000000002578c	b	0x25790
0000000000025790	sxtw	x9, w10
0000000000025794	add	x8, x8, x9, lsl #4
0000000000025798	ldr	x8, [x8, #0x8]
000000000002579c	ldr	x8, [x8]
00000000000257a0	mov	x0, x21
00000000000257a4	mov	x2, x20
00000000000257a8	blr	x8
00000000000257ac	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000257b0	mov	x1, x0
00000000000257b4	mov	x0, x19
00000000000257b8	blr	x24
00000000000257bc	ldr	x8, [x0]
00000000000257c0	ldr	x9, [sp, #0x8]
00000000000257c4	str	x9, [x8, #0x110]
00000000000257c8	add	x8, x8, #0x138
00000000000257cc	mov	w9, #0x1
00000000000257d0	ldaxr	wzr, [x8]
00000000000257d4	stlxr	w10, w9, [x8]
00000000000257d8	cbnz	w10, 0x257d0
00000000000257dc	mov	x0, x1
00000000000257e0	ldp	x29, x30, [sp, #0x70]
00000000000257e4	ldp	x20, x19, [sp, #0x60]
00000000000257e8	ldp	x22, x21, [sp, #0x50]
00000000000257ec	ldp	x24, x23, [sp, #0x40]
00000000000257f0	ldp	x26, x25, [sp, #0x30]
00000000000257f4	add	sp, sp, #0x80
00000000000257f8	b	0x51b24 ; symbol stub for: _objc_autoreleaseReturnValue
00000000000257fc	mov	x1, x0
0000000000025800	mov	x0, x19
0000000000025804	blr	x24
0000000000025808	ldr	x8, [x0]
000000000002580c	mov	x9, sp
0000000000025810	str	x9, [x8, #0x110]
0000000000025814	mov	x0, x1
0000000000025818	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000002581c	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000025820	b	0x25820
_convertFunction0:
0000000000025824	sub	sp, sp, #0x80
0000000000025828	stp	x22, x21, [sp, #0x50]
000000000002582c	stp	x20, x19, [sp, #0x60]
0000000000025830	stp	x29, x30, [sp, #0x70]
0000000000025834	add	x29, sp, #0x70
0000000000025838	mov	x20, x0
000000000002583c	str	xzr, [sp, #0x8]
0000000000025840	adrp	x19, 71 ; 0x6c000
0000000000025844	add	x19, x19, #0xbb0
0000000000025848	ldr	x21, [x19]
000000000002584c	mov	x0, x19
0000000000025850	blr	x21
0000000000025854	ldr	x8, [x0]
0000000000025858	ldr	x9, [x8, #0x110]
000000000002585c	add	x10, sp, #0x8
0000000000025860	str	x10, [x8, #0x110]
0000000000025864	mov	x8, #0x300000000
0000000000025868	stp	x9, x8, [sp, #0x10]
000000000002586c	adr	x8, #0x611d7
0000000000025870	nop
0000000000025874	ldarb	w8, [x8]
0000000000025878	tbz	w8, #0x0, 0x25880
000000000002587c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025880	cbz	x20, 0x258bc
0000000000025884	nop
0000000000025888	ldr	x8, #0x32790 ; literal pool symbol address: __NSConcreteStackBlock
000000000002588c	mov	w9, #-0x3e000000
0000000000025890	stp	x8, x9, [sp, #0x20]
0000000000025894	adr	x8, #0x80
0000000000025898	nop
000000000002589c	adr	x9, #0x45c54
00000000000258a0	nop
00000000000258a4	stp	x8, x9, [sp, #0x30]
00000000000258a8	stp	x20, xzr, [sp, #0x40]
00000000000258ac	add	x0, sp, #0x20
00000000000258b0	bl	0x51bc0 ; symbol stub for: _objc_retainBlock
00000000000258b4	mov	x1, x0
00000000000258b8	b	0x258c0
00000000000258bc	mov	x1, #0x0
00000000000258c0	mov	x0, x19
00000000000258c4	blr	x21
00000000000258c8	ldr	x8, [x0]
00000000000258cc	ldr	x9, [sp, #0x10]
00000000000258d0	str	x9, [x8, #0x110]
00000000000258d4	mov	x0, x1
00000000000258d8	ldp	x29, x30, [sp, #0x70]
00000000000258dc	ldp	x20, x19, [sp, #0x60]
00000000000258e0	ldp	x22, x21, [sp, #0x50]
00000000000258e4	add	sp, sp, #0x80
00000000000258e8	ret
00000000000258ec	mov	x1, x0
00000000000258f0	mov	x0, x19
00000000000258f4	blr	x21
00000000000258f8	ldr	x8, [x0]
00000000000258fc	add	x9, sp, #0x8
0000000000025900	str	x9, [x8, #0x110]
0000000000025904	mov	x0, x1
0000000000025908	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000002590c	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000025910	b	0x25910
_invokeBlock0:
0000000000025914	sub	sp, sp, #0x60
0000000000025918	stp	x24, x23, [sp, #0x20]
000000000002591c	stp	x22, x21, [sp, #0x30]
0000000000025920	stp	x20, x19, [sp, #0x40]
0000000000025924	stp	x29, x30, [sp, #0x50]
0000000000025928	add	x29, sp, #0x50
000000000002592c	mov	x21, x0
0000000000025930	movi.16b	v0, #0x0
0000000000025934	stp	q0, q0, [sp]
0000000000025938	mov	x8, sp
000000000002593c	add	x20, x8, #0x18
0000000000025940	bl	_Kotlin_initRuntimeIfNeeded
0000000000025944	adrp	x19, 71 ; 0x6c000
0000000000025948	add	x19, x19, #0xbb0
000000000002594c	ldr	x22, [x19]
0000000000025950	mov	x0, x19
0000000000025954	blr	x22
0000000000025958	ldr	x8, [x0]
000000000002595c	add	x0, x8, #0x138
0000000000025960	ldaxr	w8, [x0]
0000000000025964	stlxr	w9, wzr, [x0]
0000000000025968	cbnz	w9, 0x25960
000000000002596c	adr	x23, #0x610d7
0000000000025970	nop
0000000000025974	cmp	w8, #0x1
0000000000025978	b.ne	0x25988
000000000002597c	ldarb	w8, [x23]
0000000000025980	tbz	w8, #0x0, 0x25988
0000000000025984	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025988	mov	x0, x19
000000000002598c	blr	x22
0000000000025990	ldr	x8, [x0]
0000000000025994	ldr	x9, [x8, #0x110]
0000000000025998	mov	x10, sp
000000000002599c	str	x10, [x8, #0x110]
00000000000259a0	mov	x8, #0x400000000
00000000000259a4	stp	x9, x8, [sp, #0x8]
00000000000259a8	ldarb	w8, [x23]
00000000000259ac	tbz	w8, #0x0, 0x259b4
00000000000259b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000259b4	bl	_Kotlin_initRuntimeIfNeeded
00000000000259b8	ldr	x0, [x21, #0x20]
00000000000259bc	ldr	x8, [x0]
00000000000259c0	and	x8, x8, #0xfffffffffffffffc
00000000000259c4	ldr	x8, [x8]
00000000000259c8	ldr	w9, [x8, #0x3c]
00000000000259cc	ldr	x8, [x8, #0x40]
00000000000259d0	tbnz	w9, #0x1f, 0x259e0
00000000000259d4	mov	w10, #0x59
00000000000259d8	and	x9, x9, x10
00000000000259dc	b	0x25a64
00000000000259e0	neg	w10, w9
00000000000259e4	mvn	w9, w9
00000000000259e8	cmp	w10, #0x9
00000000000259ec	b.ge	0x25a24
00000000000259f0	cmp	w10, #0x2
00000000000259f4	b.lt	0x25a58
00000000000259f8	mov	x10, #0x0
00000000000259fc	mov	x11, x8
0000000000025a00	ldr	w12, [x11]
0000000000025a04	cmp	w12, #0x58
0000000000025a08	b.gt	0x25a60
0000000000025a0c	add	x10, x10, #0x1
0000000000025a10	add	x11, x11, #0x10
0000000000025a14	cmp	x9, x10
0000000000025a18	b.ne	0x25a00
0000000000025a1c	mov	x10, x9
0000000000025a20	b	0x25a60
0000000000025a24	mov	w10, #0x0
0000000000025a28	add	w11, w9, w10
0000000000025a2c	cmp	w11, #0x0
0000000000025a30	cinc	w11, w11, lt
0000000000025a34	asr	w11, w11, #1
0000000000025a38	sbfiz	x12, x11, #4, #32
0000000000025a3c	ldr	w12, [x8, x12]
0000000000025a40	cmp	w12, #0x59
0000000000025a44	csinc	w10, w10, w11, ge
0000000000025a48	csel	w9, w9, w11, lt
0000000000025a4c	cmp	w10, w9
0000000000025a50	b.lt	0x25a28
0000000000025a54	b	0x25a60
0000000000025a58	mov	w10, #0x0
0000000000025a5c	b	0x25a60
0000000000025a60	sxtw	x9, w10
0000000000025a64	add	x8, x8, x9, lsl #4
0000000000025a68	ldr	x8, [x8, #0x8]
0000000000025a6c	ldr	x8, [x8]
0000000000025a70	mov	x1, x20
0000000000025a74	blr	x8
0000000000025a78	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000025a7c	mov	x1, x0
0000000000025a80	mov	x0, x19
0000000000025a84	blr	x22
0000000000025a88	ldr	x8, [x0]
0000000000025a8c	ldr	x9, [sp, #0x8]
0000000000025a90	str	x9, [x8, #0x110]
0000000000025a94	add	x8, x8, #0x138
0000000000025a98	mov	w9, #0x1
0000000000025a9c	ldaxr	wzr, [x8]
0000000000025aa0	stlxr	w10, w9, [x8]
0000000000025aa4	cbnz	w10, 0x25a9c
0000000000025aa8	mov	x0, x1
0000000000025aac	ldp	x29, x30, [sp, #0x50]
0000000000025ab0	ldp	x20, x19, [sp, #0x40]
0000000000025ab4	ldp	x22, x21, [sp, #0x30]
0000000000025ab8	ldp	x24, x23, [sp, #0x20]
0000000000025abc	add	sp, sp, #0x60
0000000000025ac0	b	0x51b24 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000025ac4	mov	x1, x0
0000000000025ac8	mov	x0, x19
0000000000025acc	blr	x22
0000000000025ad0	ldr	x8, [x0]
0000000000025ad4	mov	x9, sp
0000000000025ad8	str	x9, [x8, #0x110]
0000000000025adc	mov	x0, x1
0000000000025ae0	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000025ae4	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000025ae8	b	0x25ae8
_convertFunction2:
0000000000025aec	sub	sp, sp, #0x80
0000000000025af0	stp	x22, x21, [sp, #0x50]
0000000000025af4	stp	x20, x19, [sp, #0x60]
0000000000025af8	stp	x29, x30, [sp, #0x70]
0000000000025afc	add	x29, sp, #0x70
0000000000025b00	mov	x20, x0
0000000000025b04	str	xzr, [sp, #0x8]
0000000000025b08	adrp	x19, 71 ; 0x6c000
0000000000025b0c	add	x19, x19, #0xbb0
0000000000025b10	ldr	x21, [x19]
0000000000025b14	mov	x0, x19
0000000000025b18	blr	x21
0000000000025b1c	ldr	x8, [x0]
0000000000025b20	ldr	x9, [x8, #0x110]
0000000000025b24	add	x10, sp, #0x8
0000000000025b28	str	x10, [x8, #0x110]
0000000000025b2c	mov	x8, #0x300000000
0000000000025b30	stp	x9, x8, [sp, #0x10]
0000000000025b34	adr	x8, #0x60f0f
0000000000025b38	nop
0000000000025b3c	ldarb	w8, [x8]
0000000000025b40	tbz	w8, #0x0, 0x25b48
0000000000025b44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025b48	cbz	x20, 0x25b84
0000000000025b4c	nop
0000000000025b50	ldr	x8, #0x324c8 ; literal pool symbol address: __NSConcreteStackBlock
0000000000025b54	mov	w9, #-0x3e000000
0000000000025b58	stp	x8, x9, [sp, #0x20]
0000000000025b5c	adr	x8, #0x80
0000000000025b60	nop
0000000000025b64	adr	x9, #0x459bc
0000000000025b68	nop
0000000000025b6c	stp	x8, x9, [sp, #0x30]
0000000000025b70	stp	x20, xzr, [sp, #0x40]
0000000000025b74	add	x0, sp, #0x20
0000000000025b78	bl	0x51bc0 ; symbol stub for: _objc_retainBlock
0000000000025b7c	mov	x1, x0
0000000000025b80	b	0x25b88
0000000000025b84	mov	x1, #0x0
0000000000025b88	mov	x0, x19
0000000000025b8c	blr	x21
0000000000025b90	ldr	x8, [x0]
0000000000025b94	ldr	x9, [sp, #0x10]
0000000000025b98	str	x9, [x8, #0x110]
0000000000025b9c	mov	x0, x1
0000000000025ba0	ldp	x29, x30, [sp, #0x70]
0000000000025ba4	ldp	x20, x19, [sp, #0x60]
0000000000025ba8	ldp	x22, x21, [sp, #0x50]
0000000000025bac	add	sp, sp, #0x80
0000000000025bb0	ret
0000000000025bb4	mov	x1, x0
0000000000025bb8	mov	x0, x19
0000000000025bbc	blr	x21
0000000000025bc0	ldr	x8, [x0]
0000000000025bc4	add	x9, sp, #0x8
0000000000025bc8	str	x9, [x8, #0x110]
0000000000025bcc	mov	x0, x1
0000000000025bd0	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000025bd4	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000025bd8	b	0x25bd8
_invokeBlock2:
0000000000025bdc	sub	sp, sp, #0x90
0000000000025be0	stp	x28, x27, [sp, #0x30]
0000000000025be4	stp	x26, x25, [sp, #0x40]
0000000000025be8	stp	x24, x23, [sp, #0x50]
0000000000025bec	stp	x22, x21, [sp, #0x60]
0000000000025bf0	stp	x20, x19, [sp, #0x70]
0000000000025bf4	stp	x29, x30, [sp, #0x80]
0000000000025bf8	add	x29, sp, #0x80
0000000000025bfc	mov	x23, x2
0000000000025c00	mov	x22, x1
0000000000025c04	mov	x21, x0
0000000000025c08	movi.16b	v0, #0x0
0000000000025c0c	stp	q0, q0, [sp, #0x10]
0000000000025c10	str	q0, [sp]
0000000000025c14	mov	x8, sp
0000000000025c18	add	x24, x8, #0x20
0000000000025c1c	add	x25, x8, #0x18
0000000000025c20	add	x20, x8, #0x28
0000000000025c24	bl	_Kotlin_initRuntimeIfNeeded
0000000000025c28	adrp	x19, 71 ; 0x6c000
0000000000025c2c	add	x19, x19, #0xbb0
0000000000025c30	ldr	x26, [x19]
0000000000025c34	mov	x0, x19
0000000000025c38	blr	x26
0000000000025c3c	ldr	x8, [x0]
0000000000025c40	add	x0, x8, #0x138
0000000000025c44	ldaxr	w8, [x0]
0000000000025c48	stlxr	w9, wzr, [x0]
0000000000025c4c	cbnz	w9, 0x25c44
0000000000025c50	adr	x27, #0x60df3
0000000000025c54	nop
0000000000025c58	cmp	w8, #0x1
0000000000025c5c	b.ne	0x25c6c
0000000000025c60	ldarb	w8, [x27]
0000000000025c64	tbz	w8, #0x0, 0x25c6c
0000000000025c68	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025c6c	mov	x0, x19
0000000000025c70	blr	x26
0000000000025c74	ldr	x8, [x0]
0000000000025c78	ldr	x9, [x8, #0x110]
0000000000025c7c	mov	x10, sp
0000000000025c80	str	x10, [x8, #0x110]
0000000000025c84	mov	x8, #0x600000000
0000000000025c88	stp	x9, x8, [sp, #0x8]
0000000000025c8c	ldarb	w8, [x27]
0000000000025c90	tbz	w8, #0x0, 0x25c98
0000000000025c94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025c98	bl	_Kotlin_initRuntimeIfNeeded
0000000000025c9c	ldr	x21, [x21, #0x20]
0000000000025ca0	adrp	x27, 97 ; 0x86000
0000000000025ca4	cbz	x22, 0x25cf8
0000000000025ca8	ldr	x1, [x27, #0xc98]
0000000000025cac	mov	x0, x22
0000000000025cb0	mov	x2, x25
0000000000025cb4	bl	0x51b78 ; Objc message: -[x0 count]
0000000000025cb8	mov	x22, x0
0000000000025cbc	cbz	x23, 0x25d00
0000000000025cc0	ldr	x1, [x27, #0xc98]
0000000000025cc4	mov	x0, x23
0000000000025cc8	mov	x2, x24
0000000000025ccc	bl	0x51b78 ; Objc message: -[x0 count]
0000000000025cd0	mov	x2, x0
0000000000025cd4	ldr	x8, [x21]
0000000000025cd8	and	x8, x8, #0xfffffffffffffffc
0000000000025cdc	ldr	x8, [x8]
0000000000025ce0	ldr	w9, [x8, #0x3c]
0000000000025ce4	ldr	x8, [x8, #0x40]
0000000000025ce8	tbnz	w9, #0x1f, 0x25d20
0000000000025cec	mov	w10, #0x61
0000000000025cf0	and	x9, x9, x10
0000000000025cf4	b	0x25da4
0000000000025cf8	str	xzr, [sp, #0x18]
0000000000025cfc	cbnz	x23, 0x25cc0
0000000000025d00	mov	x2, #0x0
0000000000025d04	str	xzr, [sp, #0x20]
0000000000025d08	ldr	x8, [x21]
0000000000025d0c	and	x8, x8, #0xfffffffffffffffc
0000000000025d10	ldr	x8, [x8]
0000000000025d14	ldr	w9, [x8, #0x3c]
0000000000025d18	ldr	x8, [x8, #0x40]
0000000000025d1c	tbz	w9, #0x1f, 0x25cec
0000000000025d20	neg	w10, w9
0000000000025d24	mvn	w9, w9
0000000000025d28	cmp	w10, #0x9
0000000000025d2c	b.ge	0x25d64
0000000000025d30	cmp	w10, #0x2
0000000000025d34	b.lt	0x25d98
0000000000025d38	mov	x10, #0x0
0000000000025d3c	mov	x11, x8
0000000000025d40	ldr	w12, [x11]
0000000000025d44	cmp	w12, #0x60
0000000000025d48	b.gt	0x25da0
0000000000025d4c	add	x10, x10, #0x1
0000000000025d50	add	x11, x11, #0x10
0000000000025d54	cmp	x9, x10
0000000000025d58	b.ne	0x25d40
0000000000025d5c	mov	x10, x9
0000000000025d60	b	0x25da0
0000000000025d64	mov	w10, #0x0
0000000000025d68	add	w11, w9, w10
0000000000025d6c	cmp	w11, #0x0
0000000000025d70	cinc	w11, w11, lt
0000000000025d74	asr	w11, w11, #1
0000000000025d78	sbfiz	x12, x11, #4, #32
0000000000025d7c	ldr	w12, [x8, x12]
0000000000025d80	cmp	w12, #0x61
0000000000025d84	csinc	w10, w10, w11, ge
0000000000025d88	csel	w9, w9, w11, lt
0000000000025d8c	cmp	w10, w9
0000000000025d90	b.lt	0x25d68
0000000000025d94	b	0x25da0
0000000000025d98	mov	w10, #0x0
0000000000025d9c	b	0x25da0
0000000000025da0	sxtw	x9, w10
0000000000025da4	add	x8, x8, x9, lsl #4
0000000000025da8	ldr	x8, [x8, #0x8]
0000000000025dac	ldr	x8, [x8]
0000000000025db0	mov	x0, x21
0000000000025db4	mov	x1, x22
0000000000025db8	mov	x3, x20
0000000000025dbc	blr	x8
0000000000025dc0	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000025dc4	mov	x1, x0
0000000000025dc8	mov	x0, x19
0000000000025dcc	blr	x26
0000000000025dd0	ldr	x8, [x0]
0000000000025dd4	ldr	x9, [sp, #0x8]
0000000000025dd8	str	x9, [x8, #0x110]
0000000000025ddc	add	x8, x8, #0x138
0000000000025de0	mov	w9, #0x1
0000000000025de4	ldaxr	wzr, [x8]
0000000000025de8	stlxr	w10, w9, [x8]
0000000000025dec	cbnz	w10, 0x25de4
0000000000025df0	mov	x0, x1
0000000000025df4	ldp	x29, x30, [sp, #0x80]
0000000000025df8	ldp	x20, x19, [sp, #0x70]
0000000000025dfc	ldp	x22, x21, [sp, #0x60]
0000000000025e00	ldp	x24, x23, [sp, #0x50]
0000000000025e04	ldp	x26, x25, [sp, #0x40]
0000000000025e08	ldp	x28, x27, [sp, #0x30]
0000000000025e0c	add	sp, sp, #0x90
0000000000025e10	b	0x51b24 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000025e14	mov	x1, x0
0000000000025e18	mov	x0, x19
0000000000025e1c	blr	x26
0000000000025e20	ldr	x8, [x0]
0000000000025e24	mov	x9, sp
0000000000025e28	str	x9, [x8, #0x110]
0000000000025e2c	mov	x0, x1
0000000000025e30	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000025e34	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000025e38	b	0x25e38
_convertFunction3:
0000000000025e3c	sub	sp, sp, #0x80
0000000000025e40	stp	x22, x21, [sp, #0x50]
0000000000025e44	stp	x20, x19, [sp, #0x60]
0000000000025e48	stp	x29, x30, [sp, #0x70]
0000000000025e4c	add	x29, sp, #0x70
0000000000025e50	mov	x20, x0
0000000000025e54	str	xzr, [sp, #0x8]
0000000000025e58	adrp	x19, 71 ; 0x6c000
0000000000025e5c	add	x19, x19, #0xbb0
0000000000025e60	ldr	x21, [x19]
0000000000025e64	mov	x0, x19
0000000000025e68	blr	x21
0000000000025e6c	ldr	x8, [x0]
0000000000025e70	ldr	x9, [x8, #0x110]
0000000000025e74	add	x10, sp, #0x8
0000000000025e78	str	x10, [x8, #0x110]
0000000000025e7c	mov	x8, #0x300000000
0000000000025e80	stp	x9, x8, [sp, #0x10]
0000000000025e84	adr	x8, #0x60bbf
0000000000025e88	nop
0000000000025e8c	ldarb	w8, [x8]
0000000000025e90	tbz	w8, #0x0, 0x25e98
0000000000025e94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025e98	cbz	x20, 0x25ed4
0000000000025e9c	nop
0000000000025ea0	ldr	x8, #0x32178 ; literal pool symbol address: __NSConcreteStackBlock
0000000000025ea4	mov	w9, #-0x3e000000
0000000000025ea8	stp	x8, x9, [sp, #0x20]
0000000000025eac	adr	x8, #0x80
0000000000025eb0	nop
0000000000025eb4	adr	x9, #0x4569c
0000000000025eb8	nop
0000000000025ebc	stp	x8, x9, [sp, #0x30]
0000000000025ec0	stp	x20, xzr, [sp, #0x40]
0000000000025ec4	add	x0, sp, #0x20
0000000000025ec8	bl	0x51bc0 ; symbol stub for: _objc_retainBlock
0000000000025ecc	mov	x1, x0
0000000000025ed0	b	0x25ed8
0000000000025ed4	mov	x1, #0x0
0000000000025ed8	mov	x0, x19
0000000000025edc	blr	x21
0000000000025ee0	ldr	x8, [x0]
0000000000025ee4	ldr	x9, [sp, #0x10]
0000000000025ee8	str	x9, [x8, #0x110]
0000000000025eec	mov	x0, x1
0000000000025ef0	ldp	x29, x30, [sp, #0x70]
0000000000025ef4	ldp	x20, x19, [sp, #0x60]
0000000000025ef8	ldp	x22, x21, [sp, #0x50]
0000000000025efc	add	sp, sp, #0x80
0000000000025f00	ret
0000000000025f04	mov	x1, x0
0000000000025f08	mov	x0, x19
0000000000025f0c	blr	x21
0000000000025f10	ldr	x8, [x0]
0000000000025f14	add	x9, sp, #0x8
0000000000025f18	str	x9, [x8, #0x110]
0000000000025f1c	mov	x0, x1
0000000000025f20	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000025f24	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000025f28	b	0x25f28
_invokeBlock3:
0000000000025f2c	sub	sp, sp, #0xb0
0000000000025f30	stp	x28, x27, [sp, #0x50]
0000000000025f34	stp	x26, x25, [sp, #0x60]
0000000000025f38	stp	x24, x23, [sp, #0x70]
0000000000025f3c	stp	x22, x21, [sp, #0x80]
0000000000025f40	stp	x20, x19, [sp, #0x90]
0000000000025f44	stp	x29, x30, [sp, #0xa0]
0000000000025f48	add	x29, sp, #0xa0
0000000000025f4c	mov	x24, x3
0000000000025f50	mov	x23, x2
0000000000025f54	mov	x22, x1
0000000000025f58	mov	x21, x0
0000000000025f5c	str	xzr, [sp, #0x40]
0000000000025f60	movi.16b	v0, #0x0
0000000000025f64	stp	q0, q0, [sp, #0x20]
0000000000025f68	add	x8, sp, #0x10
0000000000025f6c	str	q0, [sp, #0x10]
0000000000025f70	add	x26, x8, #0x20
0000000000025f74	add	x9, x8, #0x30
0000000000025f78	str	x9, [sp, #0x8]
0000000000025f7c	add	x27, x8, #0x18
0000000000025f80	add	x25, x8, #0x28
0000000000025f84	bl	_Kotlin_initRuntimeIfNeeded
0000000000025f88	adrp	x19, 71 ; 0x6c000
0000000000025f8c	add	x19, x19, #0xbb0
0000000000025f90	ldr	x28, [x19]
0000000000025f94	mov	x0, x19
0000000000025f98	blr	x28
0000000000025f9c	ldr	x8, [x0]
0000000000025fa0	add	x0, x8, #0x138
0000000000025fa4	ldaxr	w8, [x0]
0000000000025fa8	stlxr	w9, wzr, [x0]
0000000000025fac	cbnz	w9, 0x25fa4
0000000000025fb0	adr	x20, #0x60a93
0000000000025fb4	nop
0000000000025fb8	cmp	w8, #0x1
0000000000025fbc	b.ne	0x25fcc
0000000000025fc0	ldarb	w8, [x20]
0000000000025fc4	tbz	w8, #0x0, 0x25fcc
0000000000025fc8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025fcc	mov	x0, x19
0000000000025fd0	blr	x28
0000000000025fd4	ldr	x8, [x0]
0000000000025fd8	ldr	x9, [x8, #0x110]
0000000000025fdc	add	x10, sp, #0x10
0000000000025fe0	str	x10, [x8, #0x110]
0000000000025fe4	mov	x8, #0x700000000
0000000000025fe8	stp	x9, x8, [sp, #0x18]
0000000000025fec	ldarb	w8, [x20]
0000000000025ff0	tbz	w8, #0x0, 0x25ff8
0000000000025ff4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025ff8	bl	_Kotlin_initRuntimeIfNeeded
0000000000025ffc	ldr	x21, [x21, #0x20]
0000000000026000	adrp	x20, 96 ; 0x86000
0000000000026004	cbz	x22, 0x26070
0000000000026008	ldr	x1, [x20, #0xc98]
000000000002600c	mov	x0, x22
0000000000026010	mov	x2, x27
0000000000026014	bl	0x51b78 ; Objc message: -[x0 count]
0000000000026018	mov	x22, x0
000000000002601c	cbz	x23, 0x26078
0000000000026020	ldr	x1, [x20, #0xc98]
0000000000026024	mov	x0, x23
0000000000026028	mov	x2, x26
000000000002602c	bl	0x51b78 ; Objc message: -[x0 count]
0000000000026030	mov	x23, x0
0000000000026034	cbz	x24, 0x26080
0000000000026038	ldr	x1, [x20, #0xc98]
000000000002603c	mov	x0, x24
0000000000026040	mov	x2, x25
0000000000026044	bl	0x51b78 ; Objc message: -[x0 count]
0000000000026048	mov	x3, x0
000000000002604c	ldr	x8, [x21]
0000000000026050	and	x8, x8, #0xfffffffffffffffc
0000000000026054	ldr	x8, [x8]
0000000000026058	ldr	w9, [x8, #0x3c]
000000000002605c	ldr	x8, [x8, #0x40]
0000000000026060	tbnz	w9, #0x1f, 0x260a0
0000000000026064	mov	w10, #0x158
0000000000026068	and	x9, x9, x10
000000000002606c	b	0x26124
0000000000026070	str	xzr, [sp, #0x28]
0000000000026074	cbnz	x23, 0x26020
0000000000026078	str	xzr, [sp, #0x30]
000000000002607c	cbnz	x24, 0x26038
0000000000026080	mov	x3, #0x0
0000000000026084	str	xzr, [sp, #0x38]
0000000000026088	ldr	x8, [x21]
000000000002608c	and	x8, x8, #0xfffffffffffffffc
0000000000026090	ldr	x8, [x8]
0000000000026094	ldr	w9, [x8, #0x3c]
0000000000026098	ldr	x8, [x8, #0x40]
000000000002609c	tbz	w9, #0x1f, 0x26064
00000000000260a0	neg	w10, w9
00000000000260a4	mvn	w9, w9
00000000000260a8	cmp	w10, #0x9
00000000000260ac	b.ge	0x260e4
00000000000260b0	cmp	w10, #0x2
00000000000260b4	b.lt	0x26118
00000000000260b8	mov	x10, #0x0
00000000000260bc	mov	x11, x8
00000000000260c0	ldr	w12, [x11]
00000000000260c4	cmp	w12, #0x157
00000000000260c8	b.gt	0x26120
00000000000260cc	add	x10, x10, #0x1
00000000000260d0	add	x11, x11, #0x10
00000000000260d4	cmp	x9, x10
00000000000260d8	b.ne	0x260c0
00000000000260dc	mov	x10, x9
00000000000260e0	b	0x26120
00000000000260e4	mov	w10, #0x0
00000000000260e8	add	w11, w9, w10
00000000000260ec	cmp	w11, #0x0
00000000000260f0	cinc	w11, w11, lt
00000000000260f4	asr	w11, w11, #1
00000000000260f8	sbfiz	x12, x11, #4, #32
00000000000260fc	ldr	w12, [x8, x12]
0000000000026100	cmp	w12, #0x158
0000000000026104	csinc	w10, w10, w11, ge
0000000000026108	csel	w9, w9, w11, lt
000000000002610c	cmp	w10, w9
0000000000026110	b.lt	0x260e8
0000000000026114	b	0x26120
0000000000026118	mov	w10, #0x0
000000000002611c	b	0x26120
0000000000026120	sxtw	x9, w10
0000000000026124	add	x8, x8, x9, lsl #4
0000000000026128	ldr	x8, [x8, #0x8]
000000000002612c	ldr	x8, [x8]
0000000000026130	mov	x0, x21
0000000000026134	mov	x1, x22
0000000000026138	mov	x2, x23
000000000002613c	ldr	x4, [sp, #0x8]
0000000000026140	blr	x8
0000000000026144	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000026148	mov	x1, x0
000000000002614c	mov	x0, x19
0000000000026150	blr	x28
0000000000026154	ldr	x8, [x0]
0000000000026158	ldr	x9, [sp, #0x18]
000000000002615c	str	x9, [x8, #0x110]
0000000000026160	add	x8, x8, #0x138
0000000000026164	mov	w9, #0x1
0000000000026168	ldaxr	wzr, [x8]
000000000002616c	stlxr	w10, w9, [x8]
0000000000026170	cbnz	w10, 0x26168
0000000000026174	mov	x0, x1
0000000000026178	ldp	x29, x30, [sp, #0xa0]
000000000002617c	ldp	x20, x19, [sp, #0x90]
0000000000026180	ldp	x22, x21, [sp, #0x80]
0000000000026184	ldp	x24, x23, [sp, #0x70]
0000000000026188	ldp	x26, x25, [sp, #0x60]
000000000002618c	ldp	x28, x27, [sp, #0x50]
0000000000026190	add	sp, sp, #0xb0
0000000000026194	b	0x51b24 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000026198	mov	x1, x0
000000000002619c	mov	x0, x19
00000000000261a0	blr	x28
00000000000261a4	ldr	x8, [x0]
00000000000261a8	add	x9, sp, #0x10
00000000000261ac	str	x9, [x8, #0x110]
00000000000261b0	mov	x0, x1
00000000000261b4	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
00000000000261b8	bl	0x51908 ; symbol stub for: __ZSt9terminatev
00000000000261bc	b	0x261bc
_invokeFunction0:
00000000000261c0	sub	sp, sp, #0x60
00000000000261c4	stp	x24, x23, [sp, #0x20]
00000000000261c8	stp	x22, x21, [sp, #0x30]
00000000000261cc	stp	x20, x19, [sp, #0x40]
00000000000261d0	stp	x29, x30, [sp, #0x50]
00000000000261d4	add	x29, sp, #0x50
00000000000261d8	mov	x19, x1
00000000000261dc	mov	x22, x0
00000000000261e0	movi.16b	v0, #0x0
00000000000261e4	stp	q0, q0, [sp]
00000000000261e8	mov	x21, sp
00000000000261ec	adrp	x20, 70 ; 0x6c000
00000000000261f0	add	x20, x20, #0xbb0
00000000000261f4	ldr	x23, [x20]
00000000000261f8	mov	x0, x20
00000000000261fc	blr	x23
0000000000026200	ldr	x8, [x0]
0000000000026204	ldr	x9, [x8, #0x110]
0000000000026208	str	x21, [x8, #0x110]
000000000002620c	mov	x8, #0x400000000
0000000000026210	stp	x9, x8, [sp, #0x8]
0000000000026214	adr	x24, #0x6082f
0000000000026218	nop
000000000002621c	ldarb	w8, [x24]
0000000000026220	tbz	w8, #0x0, 0x26228
0000000000026224	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026228	mov	x8, #0x0
000000000002622c	add	x21, x21, #0x18
0000000000026230	ldar	x9, [x22]
0000000000026234	ands	x9, x9, #0xfffffffffffffffc
0000000000026238	b.eq	0x26250
000000000002623c	ldr	x10, [x9]
0000000000026240	cmp	x10, x9
0000000000026244	b.eq	0x26250
0000000000026248	add	x8, x9, #0x10
000000000002624c	ldar	x8, [x8]
0000000000026250	ldr	x1, [x8, #0x10]
0000000000026254	mov	x0, x20
0000000000026258	blr	x23
000000000002625c	ldr	x9, [x0]
0000000000026260	add	x9, x9, #0x138
0000000000026264	mov	w10, #0x1
0000000000026268	ldaxr	wzr, [x9]
000000000002626c	stlxr	w11, w10, [x9]
0000000000026270	cbnz	w11, 0x26268
0000000000026274	mov	x0, x8
0000000000026278	bl	0x2638c
000000000002627c	mov	x22, x0
0000000000026280	mov	x0, x20
0000000000026284	blr	x23
0000000000026288	ldr	x8, [x0]
000000000002628c	add	x0, x8, #0x138
0000000000026290	ldaxr	w8, [x0]
0000000000026294	stlxr	w9, wzr, [x0]
0000000000026298	cbnz	w9, 0x26290
000000000002629c	cmp	w8, #0x1
00000000000262a0	b.ne	0x262b0
00000000000262a4	ldarb	w8, [x24]
00000000000262a8	tbz	w8, #0x0, 0x262b0
00000000000262ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000262b0	cbz	x22, 0x262d0
00000000000262b4	nop
00000000000262b8	ldr	x1, #0x609e0
00000000000262bc	mov	x0, x22
00000000000262c0	mov	x2, x21
00000000000262c4	bl	0x51b78 ; Objc message: -[x0 count]
00000000000262c8	mov	x21, x0
00000000000262cc	b	0x262d8
00000000000262d0	mov	x21, #0x0
00000000000262d4	str	xzr, [sp, #0x18]
00000000000262d8	mov	x0, x20
00000000000262dc	blr	x23
00000000000262e0	ldr	x8, [x0]
00000000000262e4	add	x8, x8, #0x138
00000000000262e8	mov	w9, #0x1
00000000000262ec	ldaxr	wzr, [x8]
00000000000262f0	stlxr	w10, w9, [x8]
00000000000262f4	cbnz	w10, 0x262ec
00000000000262f8	mov	x0, x22
00000000000262fc	bl	0x51b9c ; symbol stub for: _objc_release
0000000000026300	mov	x0, x20
0000000000026304	blr	x23
0000000000026308	ldr	x8, [x0]
000000000002630c	add	x0, x8, #0x138
0000000000026310	ldaxr	w8, [x0]
0000000000026314	stlxr	w9, wzr, [x0]
0000000000026318	cbnz	w9, 0x26310
000000000002631c	cmp	w8, #0x1
0000000000026320	b.ne	0x26330
0000000000026324	ldarb	w8, [x24]
0000000000026328	tbz	w8, #0x0, 0x26330
000000000002632c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026330	str	x21, [x19]
0000000000026334	mov	x0, x20
0000000000026338	blr	x23
000000000002633c	ldr	x8, [x0]
0000000000026340	ldr	x9, [sp, #0x8]
0000000000026344	str	x9, [x8, #0x110]
0000000000026348	mov	x0, x21
000000000002634c	ldp	x29, x30, [sp, #0x50]
0000000000026350	ldp	x20, x19, [sp, #0x40]
0000000000026354	ldp	x22, x21, [sp, #0x30]
0000000000026358	ldp	x24, x23, [sp, #0x20]
000000000002635c	add	sp, sp, #0x60
0000000000026360	ret
0000000000026364	mov	x1, x0
0000000000026368	mov	x0, x20
000000000002636c	blr	x23
0000000000026370	ldr	x8, [x0]
0000000000026374	mov	x9, sp
0000000000026378	str	x9, [x8, #0x110]
000000000002637c	mov	x0, x1
0000000000026380	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000026384	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000026388	b	0x26388
000000000002638c	stp	x29, x30, [sp, #-0x10]!
0000000000026390	mov	x29, sp
0000000000026394	blr	x1
0000000000026398	mov	x29, x29
000000000002639c	ldp	x29, x30, [sp], #0x10
00000000000263a0	b	0x51bb4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock0:
00000000000263a4	sub	sp, sp, #0x50
00000000000263a8	stp	x22, x21, [sp, #0x20]
00000000000263ac	stp	x20, x19, [sp, #0x30]
00000000000263b0	stp	x29, x30, [sp, #0x40]
00000000000263b4	add	x29, sp, #0x40
00000000000263b8	mov	x19, x1
00000000000263bc	mov	x21, x0
00000000000263c0	movi.16b	v0, #0x0
00000000000263c4	stp	q0, q0, [sp]
00000000000263c8	adrp	x20, 70 ; 0x6c000
00000000000263cc	add	x20, x20, #0xbb0
00000000000263d0	ldr	x22, [x20]
00000000000263d4	mov	x0, x20
00000000000263d8	blr	x22
00000000000263dc	ldr	x8, [x0]
00000000000263e0	ldr	x9, [x8, #0x110]
00000000000263e4	mov	x10, sp
00000000000263e8	str	x10, [x8, #0x110]
00000000000263ec	mov	x8, #0x400000000
00000000000263f0	stp	x9, x8, [sp, #0x8]
00000000000263f4	adr	x8, #0x6064f
00000000000263f8	nop
00000000000263fc	ldarb	w8, [x8]
0000000000026400	tbz	w8, #0x0, 0x26408
0000000000026404	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026408	cbz	x21, 0x26434
000000000002640c	mov	x0, x21
0000000000026410	bl	0x51bc0 ; symbol stub for: _objc_retainBlock
0000000000026414	mov	x1, x0
0000000000026418	mov	x8, sp
000000000002641c	add	x2, x8, #0x18
0000000000026420	adr	x0, #0x3faa0
0000000000026424	nop
0000000000026428	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
000000000002642c	mov	x8, x0
0000000000026430	b	0x26438
0000000000026434	mov	x8, #0x0
0000000000026438	str	x8, [x19]
000000000002643c	mov	x0, x20
0000000000026440	blr	x22
0000000000026444	ldr	x9, [x0]
0000000000026448	ldr	x10, [sp, #0x8]
000000000002644c	str	x10, [x9, #0x110]
0000000000026450	mov	x0, x8
0000000000026454	ldp	x29, x30, [sp, #0x40]
0000000000026458	ldp	x20, x19, [sp, #0x30]
000000000002645c	ldp	x22, x21, [sp, #0x20]
0000000000026460	add	sp, sp, #0x50
0000000000026464	ret
0000000000026468	mov	x1, x0
000000000002646c	mov	x0, x20
0000000000026470	blr	x22
0000000000026474	ldr	x8, [x0]
0000000000026478	mov	x9, sp
000000000002647c	str	x9, [x8, #0x110]
0000000000026480	mov	x0, x1
0000000000026484	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000026488	bl	0x51908 ; symbol stub for: __ZSt9terminatev
000000000002648c	b	0x2648c
_invokeFunction1:
0000000000026490	sub	sp, sp, #0x80
0000000000026494	stp	x28, x27, [sp, #0x20]
0000000000026498	stp	x26, x25, [sp, #0x30]
000000000002649c	stp	x24, x23, [sp, #0x40]
00000000000264a0	stp	x22, x21, [sp, #0x50]
00000000000264a4	stp	x20, x19, [sp, #0x60]
00000000000264a8	stp	x29, x30, [sp, #0x70]
00000000000264ac	add	x29, sp, #0x70
00000000000264b0	mov	x19, x2
00000000000264b4	mov	x22, x1
00000000000264b8	mov	x23, x0
00000000000264bc	movi.16b	v0, #0x0
00000000000264c0	stp	q0, q0, [sp]
00000000000264c4	mov	x27, sp
00000000000264c8	adrp	x20, 70 ; 0x6c000
00000000000264cc	add	x20, x20, #0xbb0
00000000000264d0	ldr	x25, [x20]
00000000000264d4	mov	x0, x20
00000000000264d8	blr	x25
00000000000264dc	ldr	x8, [x0]
00000000000264e0	ldr	x9, [x8, #0x110]
00000000000264e4	str	x27, [x8, #0x110]
00000000000264e8	mov	x8, #0x400000000
00000000000264ec	stp	x9, x8, [sp, #0x8]
00000000000264f0	adr	x26, #0x60553
00000000000264f4	nop
00000000000264f8	ldarb	w8, [x26]
00000000000264fc	tbz	w8, #0x0, 0x26504
0000000000026500	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026504	mov	x21, #0x0
0000000000026508	ldar	x8, [x23]
000000000002650c	ands	x8, x8, #0xfffffffffffffffc
0000000000026510	b.eq	0x26528
0000000000026514	ldr	x9, [x8]
0000000000026518	cmp	x9, x8
000000000002651c	b.eq	0x26528
0000000000026520	add	x8, x8, #0x10
0000000000026524	ldar	x21, [x8]
0000000000026528	ldr	x24, [x21, #0x10]
000000000002652c	mov	x0, x22
0000000000026530	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000026534	mov	x23, x0
0000000000026538	add	x22, x27, #0x18
000000000002653c	mov	x0, x20
0000000000026540	blr	x25
0000000000026544	ldr	x8, [x0]
0000000000026548	add	x8, x8, #0x138
000000000002654c	mov	w9, #0x1
0000000000026550	ldaxr	wzr, [x8]
0000000000026554	stlxr	w10, w9, [x8]
0000000000026558	cbnz	w10, 0x26550
000000000002655c	mov	x0, x21
0000000000026560	mov	x1, x23
0000000000026564	mov	x2, x24
0000000000026568	bl	0x2668c
000000000002656c	mov	x21, x0
0000000000026570	mov	x0, x23
0000000000026574	bl	0x51b9c ; symbol stub for: _objc_release
0000000000026578	mov	x0, x20
000000000002657c	blr	x25
0000000000026580	ldr	x8, [x0]
0000000000026584	add	x0, x8, #0x138
0000000000026588	ldaxr	w8, [x0]
000000000002658c	stlxr	w9, wzr, [x0]
0000000000026590	cbnz	w9, 0x26588
0000000000026594	cmp	w8, #0x1
0000000000026598	b.ne	0x265a8
000000000002659c	ldarb	w8, [x26]
00000000000265a0	tbz	w8, #0x0, 0x265a8
00000000000265a4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000265a8	cbz	x21, 0x265c8
00000000000265ac	nop
00000000000265b0	ldr	x1, #0x606e8
00000000000265b4	mov	x0, x21
00000000000265b8	mov	x2, x22
00000000000265bc	bl	0x51b78 ; Objc message: -[x0 count]
00000000000265c0	mov	x22, x0
00000000000265c4	b	0x265d0
00000000000265c8	mov	x22, #0x0
00000000000265cc	str	xzr, [sp, #0x18]
00000000000265d0	mov	x0, x20
00000000000265d4	blr	x25
00000000000265d8	ldr	x8, [x0]
00000000000265dc	add	x8, x8, #0x138
00000000000265e0	mov	w9, #0x1
00000000000265e4	ldaxr	wzr, [x8]
00000000000265e8	stlxr	w10, w9, [x8]
00000000000265ec	cbnz	w10, 0x265e4
00000000000265f0	mov	x0, x21
00000000000265f4	bl	0x51b9c ; symbol stub for: _objc_release
00000000000265f8	mov	x0, x20
00000000000265fc	blr	x25
0000000000026600	ldr	x8, [x0]
0000000000026604	add	x0, x8, #0x138
0000000000026608	ldaxr	w8, [x0]
000000000002660c	stlxr	w9, wzr, [x0]
0000000000026610	cbnz	w9, 0x26608
0000000000026614	cmp	w8, #0x1
0000000000026618	b.ne	0x26628
000000000002661c	ldarb	w8, [x26]
0000000000026620	tbz	w8, #0x0, 0x26628
0000000000026624	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026628	str	x22, [x19]
000000000002662c	mov	x0, x20
0000000000026630	blr	x25
0000000000026634	ldr	x8, [x0]
0000000000026638	ldr	x9, [sp, #0x8]
000000000002663c	str	x9, [x8, #0x110]
0000000000026640	mov	x0, x22
0000000000026644	ldp	x29, x30, [sp, #0x70]
0000000000026648	ldp	x20, x19, [sp, #0x60]
000000000002664c	ldp	x22, x21, [sp, #0x50]
0000000000026650	ldp	x24, x23, [sp, #0x40]
0000000000026654	ldp	x26, x25, [sp, #0x30]
0000000000026658	ldp	x28, x27, [sp, #0x20]
000000000002665c	add	sp, sp, #0x80
0000000000026660	ret
0000000000026664	mov	x1, x0
0000000000026668	mov	x0, x20
000000000002666c	blr	x25
0000000000026670	ldr	x8, [x0]
0000000000026674	mov	x9, sp
0000000000026678	str	x9, [x8, #0x110]
000000000002667c	mov	x0, x1
0000000000026680	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000026684	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000026688	b	0x26688
000000000002668c	stp	x29, x30, [sp, #-0x10]!
0000000000026690	mov	x29, sp
0000000000026694	blr	x2
0000000000026698	mov	x29, x29
000000000002669c	ldp	x29, x30, [sp], #0x10
00000000000266a0	b	0x51bb4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock1:
00000000000266a4	sub	sp, sp, #0x50
00000000000266a8	stp	x22, x21, [sp, #0x20]
00000000000266ac	stp	x20, x19, [sp, #0x30]
00000000000266b0	stp	x29, x30, [sp, #0x40]
00000000000266b4	add	x29, sp, #0x40
00000000000266b8	mov	x19, x1
00000000000266bc	mov	x21, x0
00000000000266c0	movi.16b	v0, #0x0
00000000000266c4	stp	q0, q0, [sp]
00000000000266c8	adrp	x20, 70 ; 0x6c000
00000000000266cc	add	x20, x20, #0xbb0
00000000000266d0	ldr	x22, [x20]
00000000000266d4	mov	x0, x20
00000000000266d8	blr	x22
00000000000266dc	ldr	x8, [x0]
00000000000266e0	ldr	x9, [x8, #0x110]
00000000000266e4	mov	x10, sp
00000000000266e8	str	x10, [x8, #0x110]
00000000000266ec	mov	x8, #0x400000000
00000000000266f0	stp	x9, x8, [sp, #0x8]
00000000000266f4	adr	x8, #0x6034f
00000000000266f8	nop
00000000000266fc	ldarb	w8, [x8]
0000000000026700	tbz	w8, #0x0, 0x26708
0000000000026704	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026708	cbz	x21, 0x26734
000000000002670c	mov	x0, x21
0000000000026710	bl	0x51bc0 ; symbol stub for: _objc_retainBlock
0000000000026714	mov	x1, x0
0000000000026718	mov	x8, sp
000000000002671c	add	x2, x8, #0x18
0000000000026720	adr	x0, #0x3f860
0000000000026724	nop
0000000000026728	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
000000000002672c	mov	x8, x0
0000000000026730	b	0x26738
0000000000026734	mov	x8, #0x0
0000000000026738	str	x8, [x19]
000000000002673c	mov	x0, x20
0000000000026740	blr	x22
0000000000026744	ldr	x9, [x0]
0000000000026748	ldr	x10, [sp, #0x8]
000000000002674c	str	x10, [x9, #0x110]
0000000000026750	mov	x0, x8
0000000000026754	ldp	x29, x30, [sp, #0x40]
0000000000026758	ldp	x20, x19, [sp, #0x30]
000000000002675c	ldp	x22, x21, [sp, #0x20]
0000000000026760	add	sp, sp, #0x50
0000000000026764	ret
0000000000026768	mov	x1, x0
000000000002676c	mov	x0, x20
0000000000026770	blr	x22
0000000000026774	ldr	x8, [x0]
0000000000026778	mov	x9, sp
000000000002677c	str	x9, [x8, #0x110]
0000000000026780	mov	x0, x1
0000000000026784	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000026788	bl	0x51908 ; symbol stub for: __ZSt9terminatev
000000000002678c	b	0x2678c
_invokeFunction2:
0000000000026790	sub	sp, sp, #0x80
0000000000026794	stp	x28, x27, [sp, #0x20]
0000000000026798	stp	x26, x25, [sp, #0x30]
000000000002679c	stp	x24, x23, [sp, #0x40]
00000000000267a0	stp	x22, x21, [sp, #0x50]
00000000000267a4	stp	x20, x19, [sp, #0x60]
00000000000267a8	stp	x29, x30, [sp, #0x70]
00000000000267ac	add	x29, sp, #0x70
00000000000267b0	mov	x19, x3
00000000000267b4	mov	x22, x2
00000000000267b8	mov	x23, x1
00000000000267bc	mov	x24, x0
00000000000267c0	movi.16b	v0, #0x0
00000000000267c4	stp	q0, q0, [sp]
00000000000267c8	mov	x28, sp
00000000000267cc	adrp	x20, 70 ; 0x6c000
00000000000267d0	add	x20, x20, #0xbb0
00000000000267d4	ldr	x26, [x20]
00000000000267d8	mov	x0, x20
00000000000267dc	blr	x26
00000000000267e0	ldr	x8, [x0]
00000000000267e4	ldr	x9, [x8, #0x110]
00000000000267e8	str	x28, [x8, #0x110]
00000000000267ec	mov	x8, #0x400000000
00000000000267f0	stp	x9, x8, [sp, #0x8]
00000000000267f4	adr	x27, #0x6024f
00000000000267f8	nop
00000000000267fc	ldarb	w8, [x27]
0000000000026800	tbz	w8, #0x0, 0x26808
0000000000026804	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026808	mov	x21, #0x0
000000000002680c	ldar	x8, [x24]
0000000000026810	ands	x8, x8, #0xfffffffffffffffc
0000000000026814	b.eq	0x2682c
0000000000026818	ldr	x9, [x8]
000000000002681c	cmp	x9, x8
0000000000026820	b.eq	0x2682c
0000000000026824	add	x8, x8, #0x10
0000000000026828	ldar	x21, [x8]
000000000002682c	ldr	x24, [x21, #0x10]
0000000000026830	mov	x0, x23
0000000000026834	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000026838	mov	x23, x0
000000000002683c	mov	x0, x22
0000000000026840	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000026844	mov	x25, x0
0000000000026848	add	x22, x28, #0x18
000000000002684c	mov	x0, x20
0000000000026850	blr	x26
0000000000026854	ldr	x8, [x0]
0000000000026858	add	x8, x8, #0x138
000000000002685c	mov	w9, #0x1
0000000000026860	ldaxr	wzr, [x8]
0000000000026864	stlxr	w10, w9, [x8]
0000000000026868	cbnz	w10, 0x26860
000000000002686c	mov	x0, x21
0000000000026870	mov	x1, x23
0000000000026874	mov	x2, x25
0000000000026878	mov	x3, x24
000000000002687c	bl	0x269a8
0000000000026880	mov	x21, x0
0000000000026884	mov	x0, x23
0000000000026888	bl	0x51b9c ; symbol stub for: _objc_release
000000000002688c	mov	x0, x25
0000000000026890	bl	0x51b9c ; symbol stub for: _objc_release
0000000000026894	mov	x0, x20
0000000000026898	blr	x26
000000000002689c	ldr	x8, [x0]
00000000000268a0	add	x0, x8, #0x138
00000000000268a4	ldaxr	w8, [x0]
00000000000268a8	stlxr	w9, wzr, [x0]
00000000000268ac	cbnz	w9, 0x268a4
00000000000268b0	cmp	w8, #0x1
00000000000268b4	b.ne	0x268c4
00000000000268b8	ldarb	w8, [x27]
00000000000268bc	tbz	w8, #0x0, 0x268c4
00000000000268c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000268c4	cbz	x21, 0x268e4
00000000000268c8	nop
00000000000268cc	ldr	x1, #0x603cc
00000000000268d0	mov	x0, x21
00000000000268d4	mov	x2, x22
00000000000268d8	bl	0x51b78 ; Objc message: -[x0 count]
00000000000268dc	mov	x22, x0
00000000000268e0	b	0x268ec
00000000000268e4	mov	x22, #0x0
00000000000268e8	str	xzr, [sp, #0x18]
00000000000268ec	mov	x0, x20
00000000000268f0	blr	x26
00000000000268f4	ldr	x8, [x0]
00000000000268f8	add	x8, x8, #0x138
00000000000268fc	mov	w9, #0x1
0000000000026900	ldaxr	wzr, [x8]
0000000000026904	stlxr	w10, w9, [x8]
0000000000026908	cbnz	w10, 0x26900
000000000002690c	mov	x0, x21
0000000000026910	bl	0x51b9c ; symbol stub for: _objc_release
0000000000026914	mov	x0, x20
0000000000026918	blr	x26
000000000002691c	ldr	x8, [x0]
0000000000026920	add	x0, x8, #0x138
0000000000026924	ldaxr	w8, [x0]
0000000000026928	stlxr	w9, wzr, [x0]
000000000002692c	cbnz	w9, 0x26924
0000000000026930	cmp	w8, #0x1
0000000000026934	b.ne	0x26944
0000000000026938	ldarb	w8, [x27]
000000000002693c	tbz	w8, #0x0, 0x26944
0000000000026940	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026944	str	x22, [x19]
0000000000026948	mov	x0, x20
000000000002694c	blr	x26
0000000000026950	ldr	x8, [x0]
0000000000026954	ldr	x9, [sp, #0x8]
0000000000026958	str	x9, [x8, #0x110]
000000000002695c	mov	x0, x22
0000000000026960	ldp	x29, x30, [sp, #0x70]
0000000000026964	ldp	x20, x19, [sp, #0x60]
0000000000026968	ldp	x22, x21, [sp, #0x50]
000000000002696c	ldp	x24, x23, [sp, #0x40]
0000000000026970	ldp	x26, x25, [sp, #0x30]
0000000000026974	ldp	x28, x27, [sp, #0x20]
0000000000026978	add	sp, sp, #0x80
000000000002697c	ret
0000000000026980	mov	x1, x0
0000000000026984	mov	x0, x20
0000000000026988	blr	x26
000000000002698c	ldr	x8, [x0]
0000000000026990	mov	x9, sp
0000000000026994	str	x9, [x8, #0x110]
0000000000026998	mov	x0, x1
000000000002699c	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
00000000000269a0	bl	0x51908 ; symbol stub for: __ZSt9terminatev
00000000000269a4	b	0x269a4
00000000000269a8	stp	x29, x30, [sp, #-0x10]!
00000000000269ac	mov	x29, sp
00000000000269b0	blr	x3
00000000000269b4	mov	x29, x29
00000000000269b8	ldp	x29, x30, [sp], #0x10
00000000000269bc	b	0x51bb4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock2:
00000000000269c0	sub	sp, sp, #0x50
00000000000269c4	stp	x22, x21, [sp, #0x20]
00000000000269c8	stp	x20, x19, [sp, #0x30]
00000000000269cc	stp	x29, x30, [sp, #0x40]
00000000000269d0	add	x29, sp, #0x40
00000000000269d4	mov	x19, x1
00000000000269d8	mov	x21, x0
00000000000269dc	movi.16b	v0, #0x0
00000000000269e0	stp	q0, q0, [sp]
00000000000269e4	adrp	x20, 70 ; 0x6c000
00000000000269e8	add	x20, x20, #0xbb0
00000000000269ec	ldr	x22, [x20]
00000000000269f0	mov	x0, x20
00000000000269f4	blr	x22
00000000000269f8	ldr	x8, [x0]
00000000000269fc	ldr	x9, [x8, #0x110]
0000000000026a00	mov	x10, sp
0000000000026a04	str	x10, [x8, #0x110]
0000000000026a08	mov	x8, #0x400000000
0000000000026a0c	stp	x9, x8, [sp, #0x8]
0000000000026a10	adr	x8, #0x60033
0000000000026a14	nop
0000000000026a18	ldarb	w8, [x8]
0000000000026a1c	tbz	w8, #0x0, 0x26a24
0000000000026a20	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026a24	cbz	x21, 0x26a50
0000000000026a28	mov	x0, x21
0000000000026a2c	bl	0x51bc0 ; symbol stub for: _objc_retainBlock
0000000000026a30	mov	x1, x0
0000000000026a34	mov	x8, sp
0000000000026a38	add	x2, x8, #0x18
0000000000026a3c	adr	x0, #0x3f664
0000000000026a40	nop
0000000000026a44	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
0000000000026a48	mov	x8, x0
0000000000026a4c	b	0x26a54
0000000000026a50	mov	x8, #0x0
0000000000026a54	str	x8, [x19]
0000000000026a58	mov	x0, x20
0000000000026a5c	blr	x22
0000000000026a60	ldr	x9, [x0]
0000000000026a64	ldr	x10, [sp, #0x8]
0000000000026a68	str	x10, [x9, #0x110]
0000000000026a6c	mov	x0, x8
0000000000026a70	ldp	x29, x30, [sp, #0x40]
0000000000026a74	ldp	x20, x19, [sp, #0x30]
0000000000026a78	ldp	x22, x21, [sp, #0x20]
0000000000026a7c	add	sp, sp, #0x50
0000000000026a80	ret
0000000000026a84	mov	x1, x0
0000000000026a88	mov	x0, x20
0000000000026a8c	blr	x22
0000000000026a90	ldr	x8, [x0]
0000000000026a94	mov	x9, sp
0000000000026a98	str	x9, [x8, #0x110]
0000000000026a9c	mov	x0, x1
0000000000026aa0	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000026aa4	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000026aa8	b	0x26aa8
_invokeFunction3:
0000000000026aac	sub	sp, sp, #0x80
0000000000026ab0	stp	x28, x27, [sp, #0x20]
0000000000026ab4	stp	x26, x25, [sp, #0x30]
0000000000026ab8	stp	x24, x23, [sp, #0x40]
0000000000026abc	stp	x22, x21, [sp, #0x50]
0000000000026ac0	stp	x20, x19, [sp, #0x60]
0000000000026ac4	stp	x29, x30, [sp, #0x70]
0000000000026ac8	add	x29, sp, #0x70
0000000000026acc	mov	x19, x4
0000000000026ad0	mov	x22, x3
0000000000026ad4	mov	x23, x2
0000000000026ad8	mov	x24, x1
0000000000026adc	mov	x25, x0
0000000000026ae0	movi.16b	v0, #0x0
0000000000026ae4	stp	q0, q0, [sp]
0000000000026ae8	mov	x28, sp
0000000000026aec	adrp	x20, 70 ; 0x6c000
0000000000026af0	add	x20, x20, #0xbb0
0000000000026af4	ldr	x27, [x20]
0000000000026af8	mov	x0, x20
0000000000026afc	blr	x27
0000000000026b00	ldr	x8, [x0]
0000000000026b04	ldr	x9, [x8, #0x110]
0000000000026b08	str	x28, [x8, #0x110]
0000000000026b0c	mov	x8, #0x400000000
0000000000026b10	stp	x9, x8, [sp, #0x8]
0000000000026b14	adr	x8, #0x5ff2f
0000000000026b18	nop
0000000000026b1c	ldarb	w8, [x8]
0000000000026b20	tbz	w8, #0x0, 0x26b28
0000000000026b24	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026b28	mov	x21, #0x0
0000000000026b2c	ldar	x8, [x25]
0000000000026b30	ands	x8, x8, #0xfffffffffffffffc
0000000000026b34	b.eq	0x26b4c
0000000000026b38	ldr	x9, [x8]
0000000000026b3c	cmp	x9, x8
0000000000026b40	b.eq	0x26b4c
0000000000026b44	add	x8, x8, #0x10
0000000000026b48	ldar	x21, [x8]
0000000000026b4c	ldr	x25, [x21, #0x10]
0000000000026b50	mov	x0, x24
0000000000026b54	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000026b58	mov	x24, x0
0000000000026b5c	mov	x0, x23
0000000000026b60	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000026b64	mov	x23, x0
0000000000026b68	mov	x0, x22
0000000000026b6c	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000026b70	mov	x26, x0
0000000000026b74	add	x22, x28, #0x18
0000000000026b78	mov	x0, x20
0000000000026b7c	blr	x27
0000000000026b80	ldr	x8, [x0]
0000000000026b84	add	x8, x8, #0x138
0000000000026b88	mov	w9, #0x1
0000000000026b8c	ldaxr	wzr, [x8]
0000000000026b90	stlxr	w10, w9, [x8]
0000000000026b94	cbnz	w10, 0x26b8c
0000000000026b98	mov	x0, x21
0000000000026b9c	mov	x1, x24
0000000000026ba0	mov	x2, x23
0000000000026ba4	mov	x3, x26
0000000000026ba8	mov	x4, x25
0000000000026bac	bl	0x26cf0
0000000000026bb0	mov	x21, x0
0000000000026bb4	mov	x0, x24
0000000000026bb8	bl	0x51b9c ; symbol stub for: _objc_release
0000000000026bbc	mov	x0, x23
0000000000026bc0	bl	0x51b9c ; symbol stub for: _objc_release
0000000000026bc4	mov	x0, x26
0000000000026bc8	bl	0x51b9c ; symbol stub for: _objc_release
0000000000026bcc	mov	x0, x20
0000000000026bd0	blr	x27
0000000000026bd4	ldr	x8, [x0]
0000000000026bd8	add	x0, x8, #0x138
0000000000026bdc	ldaxr	w8, [x0]
0000000000026be0	stlxr	w9, wzr, [x0]
0000000000026be4	cbnz	w9, 0x26bdc
0000000000026be8	cmp	w8, #0x1
0000000000026bec	b.ne	0x26c04
0000000000026bf0	adr	x8, #0x5fe53
0000000000026bf4	nop
0000000000026bf8	ldarb	w8, [x8]
0000000000026bfc	tbz	w8, #0x0, 0x26c04
0000000000026c00	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026c04	cbz	x21, 0x26c24
0000000000026c08	nop
0000000000026c0c	ldr	x1, #0x6008c
0000000000026c10	mov	x0, x21
0000000000026c14	mov	x2, x22
0000000000026c18	bl	0x51b78 ; Objc message: -[x0 count]
0000000000026c1c	mov	x22, x0
0000000000026c20	b	0x26c2c
0000000000026c24	mov	x22, #0x0
0000000000026c28	str	xzr, [sp, #0x18]
0000000000026c2c	mov	x0, x20
0000000000026c30	blr	x27
0000000000026c34	ldr	x8, [x0]
0000000000026c38	add	x8, x8, #0x138
0000000000026c3c	mov	w9, #0x1
0000000000026c40	ldaxr	wzr, [x8]
0000000000026c44	stlxr	w10, w9, [x8]
0000000000026c48	cbnz	w10, 0x26c40
0000000000026c4c	mov	x0, x21
0000000000026c50	bl	0x51b9c ; symbol stub for: _objc_release
0000000000026c54	mov	x0, x20
0000000000026c58	blr	x27
0000000000026c5c	ldr	x8, [x0]
0000000000026c60	add	x0, x8, #0x138
0000000000026c64	ldaxr	w8, [x0]
0000000000026c68	stlxr	w9, wzr, [x0]
0000000000026c6c	cbnz	w9, 0x26c64
0000000000026c70	cmp	w8, #0x1
0000000000026c74	b.ne	0x26c8c
0000000000026c78	adr	x8, #0x5fdcb
0000000000026c7c	nop
0000000000026c80	ldarb	w8, [x8]
0000000000026c84	tbz	w8, #0x0, 0x26c8c
0000000000026c88	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026c8c	str	x22, [x19]
0000000000026c90	mov	x0, x20
0000000000026c94	blr	x27
0000000000026c98	ldr	x8, [x0]
0000000000026c9c	ldr	x9, [sp, #0x8]
0000000000026ca0	str	x9, [x8, #0x110]
0000000000026ca4	mov	x0, x22
0000000000026ca8	ldp	x29, x30, [sp, #0x70]
0000000000026cac	ldp	x20, x19, [sp, #0x60]
0000000000026cb0	ldp	x22, x21, [sp, #0x50]
0000000000026cb4	ldp	x24, x23, [sp, #0x40]
0000000000026cb8	ldp	x26, x25, [sp, #0x30]
0000000000026cbc	ldp	x28, x27, [sp, #0x20]
0000000000026cc0	add	sp, sp, #0x80
0000000000026cc4	ret
0000000000026cc8	mov	x1, x0
0000000000026ccc	mov	x0, x20
0000000000026cd0	blr	x27
0000000000026cd4	ldr	x8, [x0]
0000000000026cd8	mov	x9, sp
0000000000026cdc	str	x9, [x8, #0x110]
0000000000026ce0	mov	x0, x1
0000000000026ce4	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000026ce8	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000026cec	b	0x26cec
0000000000026cf0	stp	x29, x30, [sp, #-0x10]!
0000000000026cf4	mov	x29, sp
0000000000026cf8	blr	x4
0000000000026cfc	mov	x29, x29
0000000000026d00	ldp	x29, x30, [sp], #0x10
0000000000026d04	b	0x51bb4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock3:
0000000000026d08	sub	sp, sp, #0x50
0000000000026d0c	stp	x22, x21, [sp, #0x20]
0000000000026d10	stp	x20, x19, [sp, #0x30]
0000000000026d14	stp	x29, x30, [sp, #0x40]
0000000000026d18	add	x29, sp, #0x40
0000000000026d1c	mov	x19, x1
0000000000026d20	mov	x21, x0
0000000000026d24	movi.16b	v0, #0x0
0000000000026d28	stp	q0, q0, [sp]
0000000000026d2c	adrp	x20, 70 ; 0x6c000
0000000000026d30	add	x20, x20, #0xbb0
0000000000026d34	ldr	x22, [x20]
0000000000026d38	mov	x0, x20
0000000000026d3c	blr	x22
0000000000026d40	ldr	x8, [x0]
0000000000026d44	ldr	x9, [x8, #0x110]
0000000000026d48	mov	x10, sp
0000000000026d4c	str	x10, [x8, #0x110]
0000000000026d50	mov	x8, #0x400000000
0000000000026d54	stp	x9, x8, [sp, #0x8]
0000000000026d58	adr	x8, #0x5fceb
0000000000026d5c	nop
0000000000026d60	ldarb	w8, [x8]
0000000000026d64	tbz	w8, #0x0, 0x26d6c
0000000000026d68	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026d6c	cbz	x21, 0x26d98
0000000000026d70	mov	x0, x21
0000000000026d74	bl	0x51bc0 ; symbol stub for: _objc_retainBlock
0000000000026d78	mov	x1, x0
0000000000026d7c	mov	x8, sp
0000000000026d80	add	x2, x8, #0x18
0000000000026d84	adr	x0, #0x3f3dc
0000000000026d88	nop
0000000000026d8c	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
0000000000026d90	mov	x8, x0
0000000000026d94	b	0x26d9c
0000000000026d98	mov	x8, #0x0
0000000000026d9c	str	x8, [x19]
0000000000026da0	mov	x0, x20
0000000000026da4	blr	x22
0000000000026da8	ldr	x9, [x0]
0000000000026dac	ldr	x10, [sp, #0x8]
0000000000026db0	str	x10, [x9, #0x110]
0000000000026db4	mov	x0, x8
0000000000026db8	ldp	x29, x30, [sp, #0x40]
0000000000026dbc	ldp	x20, x19, [sp, #0x30]
0000000000026dc0	ldp	x22, x21, [sp, #0x20]
0000000000026dc4	add	sp, sp, #0x50
0000000000026dc8	ret
0000000000026dcc	mov	x1, x0
0000000000026dd0	mov	x0, x20
0000000000026dd4	blr	x22
0000000000026dd8	ldr	x8, [x0]
0000000000026ddc	mov	x9, sp
0000000000026de0	str	x9, [x8, #0x110]
0000000000026de4	mov	x0, x1
0000000000026de8	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000026dec	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000026df0	b	0x26df0
_kotlin2objc_Kotlin_Any_equals:
0000000000026df4	sub	sp, sp, #0x70
0000000000026df8	stp	x26, x25, [sp, #0x20]
0000000000026dfc	stp	x24, x23, [sp, #0x30]
0000000000026e00	stp	x22, x21, [sp, #0x40]
0000000000026e04	stp	x20, x19, [sp, #0x50]
0000000000026e08	stp	x29, x30, [sp, #0x60]
0000000000026e0c	add	x29, sp, #0x60
0000000000026e10	mov	x20, x1
0000000000026e14	mov	x21, x0
0000000000026e18	str	xzr, [sp, #0x8]
0000000000026e1c	adrp	x19, 70 ; 0x6c000
0000000000026e20	add	x19, x19, #0xbb0
0000000000026e24	ldr	x24, [x19]
0000000000026e28	mov	x0, x19
0000000000026e2c	blr	x24
0000000000026e30	ldr	x8, [x0]
0000000000026e34	ldr	x9, [x8, #0x110]
0000000000026e38	add	x10, sp, #0x8
0000000000026e3c	str	x10, [x8, #0x110]
0000000000026e40	mov	x8, #0x300000000
0000000000026e44	stp	x9, x8, [sp, #0x10]
0000000000026e48	adr	x25, #0x5fbfb
0000000000026e4c	nop
0000000000026e50	ldarb	w8, [x25]
0000000000026e54	tbz	w8, #0x0, 0x26e5c
0000000000026e58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026e5c	mov	x0, x21
0000000000026e60	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000026e64	mov	x21, x0
0000000000026e68	nop
0000000000026e6c	ldr	x23, #0x4389c ; Objc selector ref: isEqual:
0000000000026e70	mov	x0, x20
0000000000026e74	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000026e78	mov	x22, x0
0000000000026e7c	mov	x0, x19
0000000000026e80	blr	x24
0000000000026e84	ldr	x8, [x0]
0000000000026e88	add	x8, x8, #0x138
0000000000026e8c	mov	w9, #0x1
0000000000026e90	ldaxr	wzr, [x8]
0000000000026e94	stlxr	w10, w9, [x8]
0000000000026e98	cbnz	w10, 0x26e90
0000000000026e9c	mov	x0, x21
0000000000026ea0	mov	x1, x23
0000000000026ea4	mov	x2, x22
0000000000026ea8	bl	0x51b78 ; Objc message: -[x0 isEqual:]
0000000000026eac	mov	x20, x0
0000000000026eb0	mov	x0, x22
0000000000026eb4	bl	0x51b9c ; symbol stub for: _objc_release
0000000000026eb8	mov	x0, x19
0000000000026ebc	blr	x24
0000000000026ec0	ldr	x8, [x0]
0000000000026ec4	add	x0, x8, #0x138
0000000000026ec8	ldaxr	w8, [x0]
0000000000026ecc	stlxr	w9, wzr, [x0]
0000000000026ed0	cbnz	w9, 0x26ec8
0000000000026ed4	cmp	w8, #0x1
0000000000026ed8	b.ne	0x26ee8
0000000000026edc	ldarb	w8, [x25]
0000000000026ee0	tbz	w8, #0x0, 0x26ee8
0000000000026ee4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026ee8	cmp	w20, #0x0
0000000000026eec	cset	w8, ne
0000000000026ef0	mov	x0, x19
0000000000026ef4	blr	x24
0000000000026ef8	ldr	x9, [x0]
0000000000026efc	ldr	x10, [sp, #0x10]
0000000000026f00	str	x10, [x9, #0x110]
0000000000026f04	mov	x0, x8
0000000000026f08	ldp	x29, x30, [sp, #0x60]
0000000000026f0c	ldp	x20, x19, [sp, #0x50]
0000000000026f10	ldp	x22, x21, [sp, #0x40]
0000000000026f14	ldp	x24, x23, [sp, #0x30]
0000000000026f18	ldp	x26, x25, [sp, #0x20]
0000000000026f1c	add	sp, sp, #0x70
0000000000026f20	ret
0000000000026f24	mov	x1, x0
0000000000026f28	mov	x0, x19
0000000000026f2c	blr	x24
0000000000026f30	ldr	x8, [x0]
0000000000026f34	add	x9, sp, #0x8
0000000000026f38	str	x9, [x8, #0x110]
0000000000026f3c	mov	x0, x1
0000000000026f40	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000026f44	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000026f48	b	0x26f48
_kotlin2objc_kfun:kotlin.Any#hashCode(){}kotlin.Int:
0000000000026f4c	sub	sp, sp, #0x50
0000000000026f50	stp	x22, x21, [sp, #0x20]
0000000000026f54	stp	x20, x19, [sp, #0x30]
0000000000026f58	stp	x29, x30, [sp, #0x40]
0000000000026f5c	add	x29, sp, #0x40
0000000000026f60	mov	x20, x0
0000000000026f64	str	xzr, [sp, #0x8]
0000000000026f68	adrp	x19, 70 ; 0x6c000
0000000000026f6c	add	x19, x19, #0xbb0
0000000000026f70	ldr	x21, [x19]
0000000000026f74	mov	x0, x19
0000000000026f78	blr	x21
0000000000026f7c	ldr	x8, [x0]
0000000000026f80	ldr	x9, [x8, #0x110]
0000000000026f84	add	x10, sp, #0x8
0000000000026f88	str	x10, [x8, #0x110]
0000000000026f8c	mov	x8, #0x300000000
0000000000026f90	stp	x9, x8, [sp, #0x10]
0000000000026f94	adr	x22, #0x5faaf
0000000000026f98	nop
0000000000026f9c	ldarb	w8, [x22]
0000000000026fa0	tbz	w8, #0x0, 0x26fa8
0000000000026fa4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026fa8	mov	x0, x20
0000000000026fac	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000026fb0	mov	x2, x0
0000000000026fb4	nop
0000000000026fb8	ldr	x1, #0x436a0 ; Objc selector ref: hash
0000000000026fbc	mov	x0, x19
0000000000026fc0	blr	x21
0000000000026fc4	ldr	x8, [x0]
0000000000026fc8	add	x8, x8, #0x138
0000000000026fcc	mov	w9, #0x1
0000000000026fd0	ldaxr	wzr, [x8]
0000000000026fd4	stlxr	w10, w9, [x8]
0000000000026fd8	cbnz	w10, 0x26fd0
0000000000026fdc	mov	x0, x2
0000000000026fe0	bl	0x51b78 ; Objc message: -[x0 hash]
0000000000026fe4	mov	x20, x0
0000000000026fe8	mov	x0, x19
0000000000026fec	blr	x21
0000000000026ff0	ldr	x8, [x0]
0000000000026ff4	add	x0, x8, #0x138
0000000000026ff8	ldaxr	w8, [x0]
0000000000026ffc	stlxr	w9, wzr, [x0]
0000000000027000	cbnz	w9, 0x26ff8
0000000000027004	cmp	w8, #0x1
0000000000027008	b.ne	0x27018
000000000002700c	ldarb	w8, [x22]
0000000000027010	tbz	w8, #0x0, 0x27018
0000000000027014	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000027018	lsr	x8, x20, #32
000000000002701c	eor	w8, w20, w8
0000000000027020	mov	x0, x19
0000000000027024	blr	x21
0000000000027028	ldr	x9, [x0]
000000000002702c	ldr	x10, [sp, #0x10]
0000000000027030	str	x10, [x9, #0x110]
0000000000027034	mov	x0, x8
0000000000027038	ldp	x29, x30, [sp, #0x40]
000000000002703c	ldp	x20, x19, [sp, #0x30]
0000000000027040	ldp	x22, x21, [sp, #0x20]
0000000000027044	add	sp, sp, #0x50
0000000000027048	ret
000000000002704c	mov	x1, x0
0000000000027050	mov	x0, x19
0000000000027054	blr	x21
0000000000027058	ldr	x8, [x0]
000000000002705c	add	x9, sp, #0x8
0000000000027060	str	x9, [x8, #0x110]
0000000000027064	mov	x0, x1
0000000000027068	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000002706c	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000027070	b	0x27070
_kotlin2objc_kfun:kotlin.Any#toString(){}kotlin.String:
0000000000027074	sub	sp, sp, #0x60
0000000000027078	stp	x24, x23, [sp, #0x20]
000000000002707c	stp	x22, x21, [sp, #0x30]
0000000000027080	stp	x20, x19, [sp, #0x40]
0000000000027084	stp	x29, x30, [sp, #0x50]
0000000000027088	add	x29, sp, #0x50
000000000002708c	mov	x19, x1
0000000000027090	mov	x21, x0
0000000000027094	movi.16b	v0, #0x0
0000000000027098	stp	q0, q0, [sp]
000000000002709c	mov	x22, sp
00000000000270a0	adrp	x20, 69 ; 0x6c000
00000000000270a4	add	x20, x20, #0xbb0
00000000000270a8	ldr	x23, [x20]
00000000000270ac	mov	x0, x20
00000000000270b0	blr	x23
00000000000270b4	ldr	x8, [x0]
00000000000270b8	ldr	x9, [x8, #0x110]
00000000000270bc	str	x22, [x8, #0x110]
00000000000270c0	mov	x8, #0x400000000
00000000000270c4	stp	x9, x8, [sp, #0x8]
00000000000270c8	adr	x24, #0x5f97b
00000000000270cc	nop
00000000000270d0	ldarb	w8, [x24]
00000000000270d4	tbz	w8, #0x0, 0x270dc
00000000000270d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000270dc	mov	x0, x21
00000000000270e0	bl	_Kotlin_ObjCExport_refToLocalObjC
00000000000270e4	mov	x2, x0
00000000000270e8	add	x22, x22, #0x18
00000000000270ec	nop
00000000000270f0	ldr	x1, #0x43540 ; Objc selector ref: description
00000000000270f4	mov	x0, x20
00000000000270f8	blr	x23
00000000000270fc	ldr	x8, [x0]
0000000000027100	add	x8, x8, #0x138
0000000000027104	mov	w9, #0x1
0000000000027108	ldaxr	wzr, [x8]
000000000002710c	stlxr	w10, w9, [x8]
0000000000027110	cbnz	w10, 0x27108
0000000000027114	mov	x0, x2
0000000000027118	bl	0x2722c
000000000002711c	mov	x21, x0
0000000000027120	mov	x0, x20
0000000000027124	blr	x23
0000000000027128	ldr	x8, [x0]
000000000002712c	add	x0, x8, #0x138
0000000000027130	ldaxr	w8, [x0]
0000000000027134	stlxr	w9, wzr, [x0]
0000000000027138	cbnz	w9, 0x27130
000000000002713c	cmp	w8, #0x1
0000000000027140	b.ne	0x27150
0000000000027144	ldarb	w8, [x24]
0000000000027148	tbz	w8, #0x0, 0x27150
000000000002714c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000027150	cbz	x21, 0x27170
0000000000027154	nop
0000000000027158	ldr	x1, #0x5fb40
000000000002715c	mov	x0, x21
0000000000027160	mov	x2, x22
0000000000027164	bl	0x51b78 ; Objc message: -[x0 description]
0000000000027168	mov	x22, x0
000000000002716c	b	0x27178
0000000000027170	mov	x22, #0x0
0000000000027174	str	xzr, [sp, #0x18]
0000000000027178	mov	x0, x20
000000000002717c	blr	x23
0000000000027180	ldr	x8, [x0]
0000000000027184	add	x8, x8, #0x138
0000000000027188	mov	w9, #0x1
000000000002718c	ldaxr	wzr, [x8]
0000000000027190	stlxr	w10, w9, [x8]
0000000000027194	cbnz	w10, 0x2718c
0000000000027198	mov	x0, x21
000000000002719c	bl	0x51b9c ; symbol stub for: _objc_release
00000000000271a0	mov	x0, x20
00000000000271a4	blr	x23
00000000000271a8	ldr	x8, [x0]
00000000000271ac	add	x0, x8, #0x138
00000000000271b0	ldaxr	w8, [x0]
00000000000271b4	stlxr	w9, wzr, [x0]
00000000000271b8	cbnz	w9, 0x271b0
00000000000271bc	cmp	w8, #0x1
00000000000271c0	b.ne	0x271d0
00000000000271c4	ldarb	w8, [x24]
00000000000271c8	tbz	w8, #0x0, 0x271d0
00000000000271cc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000271d0	str	x22, [x19]
00000000000271d4	mov	x0, x20
00000000000271d8	blr	x23
00000000000271dc	ldr	x8, [x0]
00000000000271e0	ldr	x9, [sp, #0x8]
00000000000271e4	str	x9, [x8, #0x110]
00000000000271e8	mov	x0, x22
00000000000271ec	ldp	x29, x30, [sp, #0x50]
00000000000271f0	ldp	x20, x19, [sp, #0x40]
00000000000271f4	ldp	x22, x21, [sp, #0x30]
00000000000271f8	ldp	x24, x23, [sp, #0x20]
00000000000271fc	add	sp, sp, #0x60
0000000000027200	ret
0000000000027204	mov	x1, x0
0000000000027208	mov	x0, x20
000000000002720c	blr	x23
0000000000027210	ldr	x8, [x0]
0000000000027214	mov	x9, sp
0000000000027218	str	x9, [x8, #0x110]
000000000002721c	mov	x0, x1
0000000000027220	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000027224	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000027228	b	0x27228
000000000002722c	stp	x29, x30, [sp, #-0x10]!
0000000000027230	mov	x29, sp
0000000000027234	bl	0x51b78 ; Objc message: -[x0 description]
0000000000027238	mov	x29, x29
000000000002723c	ldp	x29, x30, [sp], #0x10
0000000000027240	b	0x51bb4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_objc2kotlin_kfun:com.example.nbodykmm.NBodyKmm#<init>(){}:
0000000000027244	stp	d11, d10, [sp, #-0x80]!
0000000000027248	stp	d9, d8, [sp, #0x10]
000000000002724c	stp	x28, x27, [sp, #0x20]
0000000000027250	stp	x26, x25, [sp, #0x30]
0000000000027254	stp	x24, x23, [sp, #0x40]
0000000000027258	stp	x22, x21, [sp, #0x50]
000000000002725c	stp	x20, x19, [sp, #0x60]
0000000000027260	stp	x29, x30, [sp, #0x70]
0000000000027264	add	x29, sp, #0x70
0000000000027268	sub	sp, sp, #0x1d0
000000000002726c	mov	x20, x0
0000000000027270	str	xzr, [sp, #0x40]
0000000000027274	movi.16b	v0, #0x0
0000000000027278	stp	q0, q0, [sp, #0x20]
000000000002727c	add	x8, sp, #0x20
0000000000027280	add	x21, x8, #0x18
0000000000027284	bl	_Kotlin_initRuntimeIfNeeded
0000000000027288	adrp	x19, 69 ; 0x6c000
000000000002728c	add	x19, x19, #0xbb0
0000000000027290	ldr	x25, [x19]
0000000000027294	mov	x0, x19
0000000000027298	blr	x25
000000000002729c	ldr	x8, [x0]
00000000000272a0	add	x0, x8, #0x138
00000000000272a4	ldaxr	w8, [x0]
00000000000272a8	stlxr	w9, wzr, [x0]
00000000000272ac	cbnz	w9, 0x272a4
00000000000272b0	adr	x26, #0x5f793
00000000000272b4	nop
00000000000272b8	cmp	w8, #0x1
00000000000272bc	b.ne	0x272cc
00000000000272c0	ldarb	w8, [x26]
00000000000272c4	tbz	w8, #0x0, 0x272cc
00000000000272c8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000272cc	mov	x0, x19
00000000000272d0	blr	x25
00000000000272d4	ldr	x8, [x0]
00000000000272d8	ldr	x9, [x8, #0x110]
00000000000272dc	add	x10, sp, #0x20
00000000000272e0	str	x10, [x8, #0x110]
00000000000272e4	mov	x8, #0x500000000
00000000000272e8	stp	x9, x8, [sp, #0x28]
00000000000272ec	ldarb	w8, [x26]
00000000000272f0	tbz	w8, #0x0, 0x272f8
00000000000272f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000272f8	cbz	x20, 0x27318
00000000000272fc	nop
0000000000027300	ldr	x1, #0x5f998
0000000000027304	mov	x0, x20
0000000000027308	mov	x2, x21
000000000002730c	bl	0x51b78 ; Objc message: -[x0 description]
0000000000027310	mov	x21, x0
0000000000027314	b	0x27320
0000000000027318	mov	x21, #0x0
000000000002731c	str	xzr, [sp, #0x38]
0000000000027320	str	x20, [sp, #0x18]
0000000000027324	str	xzr, [sp, #0x180]
0000000000027328	movi.16b	v0, #0x0
000000000002732c	stp	q0, q0, [sp, #0x160]
0000000000027330	stp	q0, q0, [sp, #0x140]
0000000000027334	stp	q0, q0, [sp, #0x120]
0000000000027338	stp	q0, q0, [sp, #0x100]
000000000002733c	stp	q0, q0, [sp, #0xe0]
0000000000027340	stp	q0, q0, [sp, #0xc0]
0000000000027344	stp	q0, q0, [sp, #0xa0]
0000000000027348	stp	q0, q0, [sp, #0x80]
000000000002734c	stp	q0, q0, [sp, #0x60]
0000000000027350	str	q0, [sp, #0x50]
0000000000027354	mov	x0, x19
0000000000027358	blr	x25
000000000002735c	ldr	x8, [x0]
0000000000027360	ldr	x9, [x8, #0x110]
0000000000027364	add	x10, sp, #0x50
0000000000027368	str	x10, [x8, #0x110]
000000000002736c	mov	x8, #0x2700000000
0000000000027370	stp	x9, x8, [sp, #0x58]
0000000000027374	ldarb	w8, [x26]
0000000000027378	tbz	w8, #0x0, 0x27380
000000000002737c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027380	adr	x27, #0x5f758
0000000000027384	nop
0000000000027388	ldar	x20, [x27]
000000000002738c	cmp	x20, #0x2
0000000000027390	b.hs	0x275ac
0000000000027394	mov	x0, x19
0000000000027398	blr	x25
000000000002739c	ldr	x28, [x0]
00000000000273a0	ldp	x8, x9, [x28, #0x120]
00000000000273a4	cmp	x8, x9
00000000000273a8	b.eq	0x273c8
00000000000273ac	mov	x10, x9
00000000000273b0	ldr	x11, [x10, #-0x10]!
00000000000273b4	cmp	x11, x27
00000000000273b8	b.eq	0x27484
00000000000273bc	mov	x9, x10
00000000000273c0	cmp	x10, x8
00000000000273c4	b.ne	0x273b0
00000000000273c8	add	x22, x28, #0x120
00000000000273cc	add	x0, x28, #0x138
00000000000273d0	mov	w9, #0x1
00000000000273d4	ldaxr	w8, [x0]
00000000000273d8	stlxr	w10, w9, [x0]
00000000000273dc	cbnz	w10, 0x273d4
00000000000273e0	b	0x273f0
00000000000273e4	mov	w23, #0x1
00000000000273e8	stlxr	w9, x23, [x27]
00000000000273ec	cbz	w9, 0x27400
00000000000273f0	ldaxr	x20, [x27]
00000000000273f4	cbz	x20, 0x273e4
00000000000273f8	mov	w23, #0x0
00000000000273fc	clrex
0000000000027400	cmp	x20, #0x1
0000000000027404	b.eq	0x273f0
0000000000027408	cbz	x28, 0x27430
000000000002740c	ldaxr	w9, [x0]
0000000000027410	stlxr	w10, w8, [x0]
0000000000027414	cbnz	w10, 0x2740c
0000000000027418	cbnz	w8, 0x27430
000000000002741c	cmp	w9, #0x1
0000000000027420	b.ne	0x27430
0000000000027424	ldarb	w8, [x26]
0000000000027428	tbz	w8, #0x0, 0x27430
000000000002742c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000027430	tbz	w23, #0x0, 0x2747c
0000000000027434	ldr	x8, [x28, #0x118]
0000000000027438	add	x0, x8, #0x70
000000000002743c	mov	w1, #0x28
0000000000027440	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027444	mov	x23, x0
0000000000027448	adr	x8, #0x35cf8
000000000002744c	nop
0000000000027450	mov	x20, x0
0000000000027454	str	x8, [x20, #0x10]!
0000000000027458	str	xzr, [x0, #0x8]
000000000002745c	str	x20, [sp, #0x68]
0000000000027460	ldp	x9, x8, [x28, #0x128]
0000000000027464	cmp	x9, x8
0000000000027468	b.hs	0x27490
000000000002746c	stp	x27, x20, [x9]
0000000000027470	add	x8, x9, #0x10
0000000000027474	str	x8, [x28, #0x128]
0000000000027478	b	0x27524
000000000002747c	str	x20, [sp, #0x68]
0000000000027480	b	0x275ac
0000000000027484	ldur	x20, [x9, #-0x8]
0000000000027488	str	x20, [sp, #0x68]
000000000002748c	b	0x275ac
0000000000027490	str	x22, [sp, #0x10]
0000000000027494	ldr	x10, [x22]
0000000000027498	sub	x9, x9, x10
000000000002749c	asr	x22, x9, #4
00000000000274a0	add	x9, x22, #0x1
00000000000274a4	lsr	x11, x9, #60
00000000000274a8	cbnz	x11, 0x28b88
00000000000274ac	sub	x8, x8, x10
00000000000274b0	asr	x10, x8, #3
00000000000274b4	cmp	x10, x9
00000000000274b8	csel	x9, x9, x10, lo
00000000000274bc	mov	x10, #0x7ffffffffffffff
00000000000274c0	cmp	x10, x8, asr #4
00000000000274c4	mov	x8, #0xfffffffffffffff
00000000000274c8	csel	x24, x9, x8, hi
00000000000274cc	mov	x0, x24
00000000000274d0	mov	w1, #0x10
00000000000274d4	bl	0x519e0 ; symbol stub for: _calloc
00000000000274d8	add	x8, x0, x22, lsl #4
00000000000274dc	add	x10, x0, x24, lsl #4
00000000000274e0	stp	x27, x20, [x8]
00000000000274e4	add	x22, x8, #0x10
00000000000274e8	ldp	x1, x9, [x28, #0x120]
00000000000274ec	sub	x2, x9, x1
00000000000274f0	sub	x24, x8, x2
00000000000274f4	cmp	x2, #0x1
00000000000274f8	b.lt	0x27510
00000000000274fc	mov	x0, x24
0000000000027500	str	x10, [sp, #0x8]
0000000000027504	bl	0x51aac ; symbol stub for: _memcpy
0000000000027508	ldp	x10, x8, [sp, #0x8]
000000000002750c	ldr	x1, [x8]
0000000000027510	stp	x24, x22, [x28, #0x120]
0000000000027514	str	x10, [x28, #0x130]
0000000000027518	cbz	x1, 0x27524
000000000002751c	mov	x0, x1
0000000000027520	bl	0x51a64 ; symbol stub for: _free
0000000000027524	ldarb	w8, [x26]
0000000000027528	tbz	w8, #0x0, 0x27530
000000000002752c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027530	mov	x8, #0x2d18
0000000000027534	movk	x8, #0x5444, lsl #16
0000000000027538	movk	x8, #0x21fb, lsl #32
000000000002753c	movk	x8, #0x4009, lsl #48
0000000000027540	mov	x9, #0x45de
0000000000027544	movk	x9, #0xc9be, lsl #16
0000000000027548	movk	x9, #0xbd3c, lsl #32
000000000002754c	movk	x9, #0x4043, lsl #48
0000000000027550	stp	x8, x9, [x23, #0x18]
0000000000027554	mov	x8, #0x70a4
0000000000027558	movk	x8, #0xa3d, lsl #16
000000000002755c	movk	x8, #0xd3d7, lsl #32
0000000000027560	movk	x8, #0x4076, lsl #48
0000000000027564	str	x8, [x23, #0x28]
0000000000027568	mov	w0, #0x1
000000000002756c	mov	w1, #0x28
0000000000027570	bl	0x519e0 ; symbol stub for: _calloc
0000000000027574	ldr	x8, [x28, #0x18]!
0000000000027578	sub	x9, x28, #0x8
000000000002757c	stp	x27, x9, [x0, #0x10]
0000000000027580	stp	x8, x28, [x0]
0000000000027584	str	x0, [x8, #0x8]
0000000000027588	str	x0, [x28]
000000000002758c	ldr	x8, [x28, #0x10]
0000000000027590	add	x8, x8, #0x1
0000000000027594	str	x8, [x28, #0x10]
0000000000027598	str	x0, [x0, #0x20]
000000000002759c	stlr	x20, [x27]
00000000000275a0	ldr	x8, [x28, #0x110]
00000000000275a4	sub	x8, x8, #0x10
00000000000275a8	str	x8, [x28, #0x110]
00000000000275ac	movi.16b	v0, #0x0
00000000000275b0	stp	q0, q0, [x29, #-0xb0]
00000000000275b4	mov	x0, x19
00000000000275b8	blr	x25
00000000000275bc	ldr	x8, [x0]
00000000000275c0	ldr	x9, [x8, #0x110]
00000000000275c4	sub	x10, x29, #0xb0
00000000000275c8	str	x10, [x8, #0x110]
00000000000275cc	mov	x8, #0x400000000
00000000000275d0	stp	x9, x8, [x29, #-0xa8]
00000000000275d4	ldarb	w8, [x26]
00000000000275d8	tbz	w8, #0x0, 0x275e0
00000000000275dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000275e0	mov	x0, x19
00000000000275e4	blr	x25
00000000000275e8	mov	x22, x0
00000000000275ec	ldr	x8, [x0]
00000000000275f0	ldr	x8, [x8, #0x118]
00000000000275f4	add	x0, x8, #0x70
00000000000275f8	mov	w1, #0x48
00000000000275fc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027600	adr	x24, #0x35ab0
0000000000027604	nop
0000000000027608	str	x24, [x0, #0x10]!
000000000002760c	stur	xzr, [x0, #-0x8]
0000000000027610	stur	x0, [x29, #-0x98]
0000000000027614	ldr	x8, [x20, #0x10]
0000000000027618	str	x8, [x0, #0x38]
000000000002761c	ldr	x8, [x22]
0000000000027620	ldur	x9, [x29, #-0xa8]
0000000000027624	str	x9, [x8, #0x110]
0000000000027628	stp	x0, x0, [sp, #0x70]
000000000002762c	ldar	x23, [x27]
0000000000027630	cmp	x23, #0x2
0000000000027634	b.hs	0x27858
0000000000027638	mov	x0, x19
000000000002763c	blr	x25
0000000000027640	ldr	x28, [x0]
0000000000027644	ldp	x8, x9, [x28, #0x120]
0000000000027648	cmp	x8, x9
000000000002764c	b.eq	0x2766c
0000000000027650	mov	x10, x9
0000000000027654	ldr	x11, [x10, #-0x10]!
0000000000027658	cmp	x11, x27
000000000002765c	b.eq	0x27728
0000000000027660	mov	x9, x10
0000000000027664	cmp	x10, x8
0000000000027668	b.ne	0x27654
000000000002766c	add	x22, x28, #0x120
0000000000027670	add	x0, x28, #0x138
0000000000027674	mov	w9, #0x1
0000000000027678	ldaxr	w8, [x0]
000000000002767c	stlxr	w10, w9, [x0]
0000000000027680	cbnz	w10, 0x27678
0000000000027684	b	0x27694
0000000000027688	mov	w20, #0x1
000000000002768c	stlxr	w9, x20, [x27]
0000000000027690	cbz	w9, 0x276a4
0000000000027694	ldaxr	x23, [x27]
0000000000027698	cbz	x23, 0x27688
000000000002769c	mov	w20, #0x0
00000000000276a0	clrex
00000000000276a4	cmp	x23, #0x1
00000000000276a8	b.eq	0x27694
00000000000276ac	cbz	x28, 0x276d4
00000000000276b0	ldaxr	w9, [x0]
00000000000276b4	stlxr	w10, w8, [x0]
00000000000276b8	cbnz	w10, 0x276b0
00000000000276bc	cbnz	w8, 0x276d4
00000000000276c0	cmp	w9, #0x1
00000000000276c4	b.ne	0x276d4
00000000000276c8	ldarb	w8, [x26]
00000000000276cc	tbz	w8, #0x0, 0x276d4
00000000000276d0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000276d4	tbz	w20, #0x0, 0x27720
00000000000276d8	ldr	x8, [x28, #0x118]
00000000000276dc	add	x0, x8, #0x70
00000000000276e0	mov	w1, #0x28
00000000000276e4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000276e8	mov	x20, x0
00000000000276ec	adr	x8, #0x35a54
00000000000276f0	nop
00000000000276f4	mov	x23, x0
00000000000276f8	str	x8, [x23, #0x10]!
00000000000276fc	str	xzr, [x0, #0x8]
0000000000027700	str	x23, [sp, #0x80]
0000000000027704	ldp	x9, x8, [x28, #0x128]
0000000000027708	cmp	x9, x8
000000000002770c	b.hs	0x27734
0000000000027710	stp	x27, x23, [x9]
0000000000027714	add	x8, x9, #0x10
0000000000027718	str	x8, [x28, #0x128]
000000000002771c	b	0x277d0
0000000000027720	str	x23, [sp, #0x80]
0000000000027724	b	0x27858
0000000000027728	ldur	x23, [x9, #-0x8]
000000000002772c	str	x23, [sp, #0x80]
0000000000027730	b	0x27858
0000000000027734	str	x22, [sp, #0x10]
0000000000027738	ldr	x10, [x22]
000000000002773c	sub	x9, x9, x10
0000000000027740	asr	x22, x9, #4
0000000000027744	add	x9, x22, #0x1
0000000000027748	lsr	x11, x9, #60
000000000002774c	cbnz	x11, 0x28b94
0000000000027750	sub	x8, x8, x10
0000000000027754	asr	x10, x8, #3
0000000000027758	cmp	x10, x9
000000000002775c	csel	x9, x9, x10, lo
0000000000027760	mov	x10, #0x7ffffffffffffff
0000000000027764	cmp	x10, x8, asr #4
0000000000027768	mov	x8, #0xfffffffffffffff
000000000002776c	csel	x24, x9, x8, hi
0000000000027770	mov	x0, x24
0000000000027774	mov	w1, #0x10
0000000000027778	bl	0x519e0 ; symbol stub for: _calloc
000000000002777c	add	x8, x0, x22, lsl #4
0000000000027780	add	x10, x0, x24, lsl #4
0000000000027784	stp	x27, x23, [x8]
0000000000027788	add	x22, x8, #0x10
000000000002778c	ldp	x1, x9, [x28, #0x120]
0000000000027790	sub	x2, x9, x1
0000000000027794	sub	x24, x8, x2
0000000000027798	cmp	x2, #0x1
000000000002779c	b.lt	0x277b4
00000000000277a0	mov	x0, x24
00000000000277a4	str	x10, [sp, #0x8]
00000000000277a8	bl	0x51aac ; symbol stub for: _memcpy
00000000000277ac	ldp	x10, x8, [sp, #0x8]
00000000000277b0	ldr	x1, [x8]
00000000000277b4	stp	x24, x22, [x28, #0x120]
00000000000277b8	str	x10, [x28, #0x130]
00000000000277bc	adr	x24, #0x358f4
00000000000277c0	nop
00000000000277c4	cbz	x1, 0x277d0
00000000000277c8	mov	x0, x1
00000000000277cc	bl	0x51a64 ; symbol stub for: _free
00000000000277d0	ldarb	w8, [x26]
00000000000277d4	tbz	w8, #0x0, 0x277dc
00000000000277d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000277dc	mov	x8, #0x2d18
00000000000277e0	movk	x8, #0x5444, lsl #16
00000000000277e4	movk	x8, #0x21fb, lsl #32
00000000000277e8	movk	x8, #0x4009, lsl #48
00000000000277ec	mov	x9, #0x45de
00000000000277f0	movk	x9, #0xc9be, lsl #16
00000000000277f4	movk	x9, #0xbd3c, lsl #32
00000000000277f8	movk	x9, #0x4043, lsl #48
00000000000277fc	stp	x8, x9, [x20, #0x18]
0000000000027800	mov	x8, #0x70a4
0000000000027804	movk	x8, #0xa3d, lsl #16
0000000000027808	movk	x8, #0xd3d7, lsl #32
000000000002780c	movk	x8, #0x4076, lsl #48
0000000000027810	str	x8, [x20, #0x28]
0000000000027814	mov	w0, #0x1
0000000000027818	mov	w1, #0x28
000000000002781c	bl	0x519e0 ; symbol stub for: _calloc
0000000000027820	ldr	x8, [x28, #0x18]!
0000000000027824	sub	x9, x28, #0x8
0000000000027828	stp	x27, x9, [x0, #0x10]
000000000002782c	stp	x8, x28, [x0]
0000000000027830	str	x0, [x8, #0x8]
0000000000027834	str	x0, [x28]
0000000000027838	ldr	x8, [x28, #0x10]
000000000002783c	add	x8, x8, #0x1
0000000000027840	str	x8, [x28, #0x10]
0000000000027844	str	x0, [x0, #0x20]
0000000000027848	stlr	x23, [x27]
000000000002784c	ldr	x8, [x28, #0x110]
0000000000027850	sub	x8, x8, #0x10
0000000000027854	str	x8, [x28, #0x110]
0000000000027858	movi.16b	v0, #0x0
000000000002785c	stp	q0, q0, [x29, #-0xb0]
0000000000027860	mov	x0, x19
0000000000027864	blr	x25
0000000000027868	ldr	x8, [x0]
000000000002786c	ldr	x9, [x8, #0x110]
0000000000027870	sub	x10, x29, #0xb0
0000000000027874	str	x10, [x8, #0x110]
0000000000027878	mov	x8, #0x400000000
000000000002787c	stp	x9, x8, [x29, #-0xa8]
0000000000027880	ldarb	w8, [x26]
0000000000027884	tbz	w8, #0x0, 0x2788c
0000000000027888	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002788c	mov	x0, x19
0000000000027890	blr	x25
0000000000027894	mov	x22, x0
0000000000027898	ldr	x8, [x0]
000000000002789c	ldr	x8, [x8, #0x118]
00000000000278a0	add	x0, x8, #0x70
00000000000278a4	mov	w1, #0x48
00000000000278a8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000278ac	str	x24, [x0, #0x10]!
00000000000278b0	stur	xzr, [x0, #-0x8]
00000000000278b4	stur	x0, [x29, #-0x98]
00000000000278b8	mov	x8, #0xd92c
00000000000278bc	movk	x8, #0x343c, lsl #16
00000000000278c0	movk	x8, #0x5da0, lsl #32
00000000000278c4	movk	x8, #0x4013, lsl #48
00000000000278c8	mov	x9, #0xdb7c
00000000000278cc	movk	x9, #0xc01f, lsl #16
00000000000278d0	movk	x9, #0x90ab, lsl #32
00000000000278d4	movk	x9, #0xbff2, lsl #48
00000000000278d8	stp	x8, x9, [x0, #0x8]
00000000000278dc	mov	x8, #0xebf0
00000000000278e0	movk	x8, #0x6c25, lsl #16
00000000000278e4	movk	x8, #0x86f9, lsl #32
00000000000278e8	movk	x8, #0xbfba, lsl #48
00000000000278ec	str	x8, [x0, #0x18]
00000000000278f0	ldr	d0, [x23, #0x18]
00000000000278f4	nop
00000000000278f8	ldr	d1, 0x52420
00000000000278fc	fmul	d0, d0, d1
0000000000027900	str	d0, [x0, #0x20]
0000000000027904	ldr	d0, [x23, #0x18]
0000000000027908	nop
000000000002790c	ldr	d1, 0x52428
0000000000027910	fmul	d0, d0, d1
0000000000027914	str	d0, [x0, #0x28]
0000000000027918	ldr	d0, [x23, #0x18]
000000000002791c	nop
0000000000027920	ldr	d1, 0x52430
0000000000027924	fmul	d0, d0, d1
0000000000027928	str	d0, [x0, #0x30]
000000000002792c	ldr	d0, [x23, #0x10]
0000000000027930	nop
0000000000027934	ldr	d1, 0x52438
0000000000027938	fmul	d0, d0, d1
000000000002793c	str	d0, [x0, #0x38]
0000000000027940	ldr	x8, [x22]
0000000000027944	ldur	x9, [x29, #-0xa8]
0000000000027948	str	x9, [x8, #0x110]
000000000002794c	stp	x0, x0, [sp, #0x88]
0000000000027950	ldar	x20, [x27]
0000000000027954	cmp	x20, #0x2
0000000000027958	b.hs	0x27b7c
000000000002795c	mov	x0, x19
0000000000027960	blr	x25
0000000000027964	ldr	x28, [x0]
0000000000027968	ldp	x8, x9, [x28, #0x120]
000000000002796c	cmp	x8, x9
0000000000027970	b.eq	0x27990
0000000000027974	mov	x10, x9
0000000000027978	ldr	x11, [x10, #-0x10]!
000000000002797c	cmp	x11, x27
0000000000027980	b.eq	0x27a4c
0000000000027984	mov	x9, x10
0000000000027988	cmp	x10, x8
000000000002798c	b.ne	0x27978
0000000000027990	add	x22, x28, #0x120
0000000000027994	add	x0, x28, #0x138
0000000000027998	mov	w9, #0x1
000000000002799c	ldaxr	w8, [x0]
00000000000279a0	stlxr	w10, w9, [x0]
00000000000279a4	cbnz	w10, 0x2799c
00000000000279a8	b	0x279b8
00000000000279ac	mov	w23, #0x1
00000000000279b0	stlxr	w9, x23, [x27]
00000000000279b4	cbz	w9, 0x279c8
00000000000279b8	ldaxr	x20, [x27]
00000000000279bc	cbz	x20, 0x279ac
00000000000279c0	mov	w23, #0x0
00000000000279c4	clrex
00000000000279c8	cmp	x20, #0x1
00000000000279cc	b.eq	0x279b8
00000000000279d0	cbz	x28, 0x279f8
00000000000279d4	ldaxr	w9, [x0]
00000000000279d8	stlxr	w10, w8, [x0]
00000000000279dc	cbnz	w10, 0x279d4
00000000000279e0	cbnz	w8, 0x279f8
00000000000279e4	cmp	w9, #0x1
00000000000279e8	b.ne	0x279f8
00000000000279ec	ldarb	w8, [x26]
00000000000279f0	tbz	w8, #0x0, 0x279f8
00000000000279f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000279f8	tbz	w23, #0x0, 0x27a44
00000000000279fc	ldr	x8, [x28, #0x118]
0000000000027a00	add	x0, x8, #0x70
0000000000027a04	mov	w1, #0x28
0000000000027a08	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027a0c	mov	x23, x0
0000000000027a10	adr	x8, #0x35730
0000000000027a14	nop
0000000000027a18	mov	x20, x0
0000000000027a1c	str	x8, [x20, #0x10]!
0000000000027a20	str	xzr, [x0, #0x8]
0000000000027a24	str	x20, [sp, #0x98]
0000000000027a28	ldp	x9, x8, [x28, #0x128]
0000000000027a2c	cmp	x9, x8
0000000000027a30	b.hs	0x27a58
0000000000027a34	stp	x27, x20, [x9]
0000000000027a38	add	x8, x9, #0x10
0000000000027a3c	str	x8, [x28, #0x128]
0000000000027a40	b	0x27af4
0000000000027a44	str	x20, [sp, #0x98]
0000000000027a48	b	0x27b7c
0000000000027a4c	ldur	x20, [x9, #-0x8]
0000000000027a50	str	x20, [sp, #0x98]
0000000000027a54	b	0x27b7c
0000000000027a58	str	x22, [sp, #0x10]
0000000000027a5c	ldr	x10, [x22]
0000000000027a60	sub	x9, x9, x10
0000000000027a64	asr	x22, x9, #4
0000000000027a68	add	x9, x22, #0x1
0000000000027a6c	lsr	x11, x9, #60
0000000000027a70	cbnz	x11, 0x28ba0
0000000000027a74	sub	x8, x8, x10
0000000000027a78	asr	x10, x8, #3
0000000000027a7c	cmp	x10, x9
0000000000027a80	csel	x9, x9, x10, lo
0000000000027a84	mov	x10, #0x7ffffffffffffff
0000000000027a88	cmp	x10, x8, asr #4
0000000000027a8c	mov	x8, #0xfffffffffffffff
0000000000027a90	csel	x24, x9, x8, hi
0000000000027a94	mov	x0, x24
0000000000027a98	mov	w1, #0x10
0000000000027a9c	bl	0x519e0 ; symbol stub for: _calloc
0000000000027aa0	add	x8, x0, x22, lsl #4
0000000000027aa4	add	x10, x0, x24, lsl #4
0000000000027aa8	stp	x27, x20, [x8]
0000000000027aac	add	x22, x8, #0x10
0000000000027ab0	ldp	x1, x9, [x28, #0x120]
0000000000027ab4	sub	x2, x9, x1
0000000000027ab8	sub	x24, x8, x2
0000000000027abc	cmp	x2, #0x1
0000000000027ac0	b.lt	0x27ad8
0000000000027ac4	mov	x0, x24
0000000000027ac8	str	x10, [sp, #0x8]
0000000000027acc	bl	0x51aac ; symbol stub for: _memcpy
0000000000027ad0	ldp	x10, x8, [sp, #0x8]
0000000000027ad4	ldr	x1, [x8]
0000000000027ad8	stp	x24, x22, [x28, #0x120]
0000000000027adc	str	x10, [x28, #0x130]
0000000000027ae0	adr	x24, #0x355d0
0000000000027ae4	nop
0000000000027ae8	cbz	x1, 0x27af4
0000000000027aec	mov	x0, x1
0000000000027af0	bl	0x51a64 ; symbol stub for: _free
0000000000027af4	ldarb	w8, [x26]
0000000000027af8	tbz	w8, #0x0, 0x27b00
0000000000027afc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027b00	mov	x8, #0x2d18
0000000000027b04	movk	x8, #0x5444, lsl #16
0000000000027b08	movk	x8, #0x21fb, lsl #32
0000000000027b0c	movk	x8, #0x4009, lsl #48
0000000000027b10	mov	x9, #0x45de
0000000000027b14	movk	x9, #0xc9be, lsl #16
0000000000027b18	movk	x9, #0xbd3c, lsl #32
0000000000027b1c	movk	x9, #0x4043, lsl #48
0000000000027b20	stp	x8, x9, [x23, #0x18]
0000000000027b24	mov	x8, #0x70a4
0000000000027b28	movk	x8, #0xa3d, lsl #16
0000000000027b2c	movk	x8, #0xd3d7, lsl #32
0000000000027b30	movk	x8, #0x4076, lsl #48
0000000000027b34	str	x8, [x23, #0x28]
0000000000027b38	mov	w0, #0x1
0000000000027b3c	mov	w1, #0x28
0000000000027b40	bl	0x519e0 ; symbol stub for: _calloc
0000000000027b44	ldr	x8, [x28, #0x18]!
0000000000027b48	sub	x9, x28, #0x8
0000000000027b4c	stp	x27, x9, [x0, #0x10]
0000000000027b50	stp	x8, x28, [x0]
0000000000027b54	str	x0, [x8, #0x8]
0000000000027b58	str	x0, [x28]
0000000000027b5c	ldr	x8, [x28, #0x10]
0000000000027b60	add	x8, x8, #0x1
0000000000027b64	str	x8, [x28, #0x10]
0000000000027b68	str	x0, [x0, #0x20]
0000000000027b6c	stlr	x20, [x27]
0000000000027b70	ldr	x8, [x28, #0x110]
0000000000027b74	sub	x8, x8, #0x10
0000000000027b78	str	x8, [x28, #0x110]
0000000000027b7c	movi.16b	v0, #0x0
0000000000027b80	stp	q0, q0, [x29, #-0xb0]
0000000000027b84	mov	x0, x19
0000000000027b88	blr	x25
0000000000027b8c	ldr	x8, [x0]
0000000000027b90	ldr	x9, [x8, #0x110]
0000000000027b94	sub	x10, x29, #0xb0
0000000000027b98	str	x10, [x8, #0x110]
0000000000027b9c	mov	x8, #0x400000000
0000000000027ba0	stp	x9, x8, [x29, #-0xa8]
0000000000027ba4	ldarb	w8, [x26]
0000000000027ba8	tbz	w8, #0x0, 0x27bb0
0000000000027bac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027bb0	mov	x0, x19
0000000000027bb4	blr	x25
0000000000027bb8	mov	x22, x0
0000000000027bbc	ldr	x8, [x0]
0000000000027bc0	ldr	x8, [x8, #0x118]
0000000000027bc4	add	x0, x8, #0x70
0000000000027bc8	mov	w1, #0x48
0000000000027bcc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027bd0	str	x24, [x0, #0x10]!
0000000000027bd4	stur	xzr, [x0, #-0x8]
0000000000027bd8	stur	x0, [x29, #-0x98]
0000000000027bdc	mov	x8, #0xca67
0000000000027be0	movk	x8, #0xc332, lsl #16
0000000000027be4	movk	x8, #0xafcd, lsl #32
0000000000027be8	movk	x8, #0x4020, lsl #48
0000000000027bec	mov	x9, #0x1b0
0000000000027bf0	movk	x9, #0x31de, lsl #16
0000000000027bf4	movk	x9, #0x7fcb, lsl #32
0000000000027bf8	movk	x9, #0x4010, lsl #48
0000000000027bfc	stp	x8, x9, [x0, #0x8]
0000000000027c00	mov	x8, #0x467c
0000000000027c04	movk	x8, #0xe1eb, lsl #16
0000000000027c08	movk	x8, #0xd353, lsl #32
0000000000027c0c	movk	x8, #0xbfd9, lsl #48
0000000000027c10	str	x8, [x0, #0x18]
0000000000027c14	ldr	d0, [x20, #0x18]
0000000000027c18	nop
0000000000027c1c	ldr	d1, 0x52440
0000000000027c20	fmul	d0, d0, d1
0000000000027c24	str	d0, [x0, #0x20]
0000000000027c28	ldr	d0, [x20, #0x18]
0000000000027c2c	nop
0000000000027c30	ldr	d1, 0x52448
0000000000027c34	fmul	d0, d0, d1
0000000000027c38	str	d0, [x0, #0x28]
0000000000027c3c	ldr	d0, [x20, #0x18]
0000000000027c40	nop
0000000000027c44	ldr	d1, 0x52450
0000000000027c48	fmul	d0, d0, d1
0000000000027c4c	str	d0, [x0, #0x30]
0000000000027c50	ldr	d0, [x20, #0x10]
0000000000027c54	nop
0000000000027c58	ldr	d1, 0x52458
0000000000027c5c	fmul	d0, d0, d1
0000000000027c60	str	d0, [x0, #0x38]
0000000000027c64	ldr	x8, [x22]
0000000000027c68	ldur	x9, [x29, #-0xa8]
0000000000027c6c	str	x9, [x8, #0x110]
0000000000027c70	stp	x0, x0, [sp, #0xa0]
0000000000027c74	ldar	x20, [x27]
0000000000027c78	cmp	x20, #0x2
0000000000027c7c	b.hs	0x27ea0
0000000000027c80	mov	x0, x19
0000000000027c84	blr	x25
0000000000027c88	ldr	x28, [x0]
0000000000027c8c	ldp	x8, x9, [x28, #0x120]
0000000000027c90	cmp	x8, x9
0000000000027c94	b.eq	0x27cb4
0000000000027c98	mov	x10, x9
0000000000027c9c	ldr	x11, [x10, #-0x10]!
0000000000027ca0	cmp	x11, x27
0000000000027ca4	b.eq	0x27d70
0000000000027ca8	mov	x9, x10
0000000000027cac	cmp	x10, x8
0000000000027cb0	b.ne	0x27c9c
0000000000027cb4	add	x22, x28, #0x120
0000000000027cb8	add	x0, x28, #0x138
0000000000027cbc	mov	w9, #0x1
0000000000027cc0	ldaxr	w8, [x0]
0000000000027cc4	stlxr	w10, w9, [x0]
0000000000027cc8	cbnz	w10, 0x27cc0
0000000000027ccc	b	0x27cdc
0000000000027cd0	mov	w23, #0x1
0000000000027cd4	stlxr	w9, x23, [x27]
0000000000027cd8	cbz	w9, 0x27cec
0000000000027cdc	ldaxr	x20, [x27]
0000000000027ce0	cbz	x20, 0x27cd0
0000000000027ce4	mov	w23, #0x0
0000000000027ce8	clrex
0000000000027cec	cmp	x20, #0x1
0000000000027cf0	b.eq	0x27cdc
0000000000027cf4	cbz	x28, 0x27d1c
0000000000027cf8	ldaxr	w9, [x0]
0000000000027cfc	stlxr	w10, w8, [x0]
0000000000027d00	cbnz	w10, 0x27cf8
0000000000027d04	cbnz	w8, 0x27d1c
0000000000027d08	cmp	w9, #0x1
0000000000027d0c	b.ne	0x27d1c
0000000000027d10	ldarb	w8, [x26]
0000000000027d14	tbz	w8, #0x0, 0x27d1c
0000000000027d18	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000027d1c	tbz	w23, #0x0, 0x27d68
0000000000027d20	ldr	x8, [x28, #0x118]
0000000000027d24	add	x0, x8, #0x70
0000000000027d28	mov	w1, #0x28
0000000000027d2c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027d30	mov	x23, x0
0000000000027d34	adr	x8, #0x3540c
0000000000027d38	nop
0000000000027d3c	mov	x20, x0
0000000000027d40	str	x8, [x20, #0x10]!
0000000000027d44	str	xzr, [x0, #0x8]
0000000000027d48	str	x20, [sp, #0xb0]
0000000000027d4c	ldp	x9, x8, [x28, #0x128]
0000000000027d50	cmp	x9, x8
0000000000027d54	b.hs	0x27d7c
0000000000027d58	stp	x27, x20, [x9]
0000000000027d5c	add	x8, x9, #0x10
0000000000027d60	str	x8, [x28, #0x128]
0000000000027d64	b	0x27e18
0000000000027d68	str	x20, [sp, #0xb0]
0000000000027d6c	b	0x27ea0
0000000000027d70	ldur	x20, [x9, #-0x8]
0000000000027d74	str	x20, [sp, #0xb0]
0000000000027d78	b	0x27ea0
0000000000027d7c	str	x22, [sp, #0x10]
0000000000027d80	ldr	x10, [x22]
0000000000027d84	sub	x9, x9, x10
0000000000027d88	asr	x22, x9, #4
0000000000027d8c	add	x9, x22, #0x1
0000000000027d90	lsr	x11, x9, #60
0000000000027d94	cbnz	x11, 0x28bac
0000000000027d98	sub	x8, x8, x10
0000000000027d9c	asr	x10, x8, #3
0000000000027da0	cmp	x10, x9
0000000000027da4	csel	x9, x9, x10, lo
0000000000027da8	mov	x10, #0x7ffffffffffffff
0000000000027dac	cmp	x10, x8, asr #4
0000000000027db0	mov	x8, #0xfffffffffffffff
0000000000027db4	csel	x24, x9, x8, hi
0000000000027db8	mov	x0, x24
0000000000027dbc	mov	w1, #0x10
0000000000027dc0	bl	0x519e0 ; symbol stub for: _calloc
0000000000027dc4	add	x8, x0, x22, lsl #4
0000000000027dc8	add	x10, x0, x24, lsl #4
0000000000027dcc	stp	x27, x20, [x8]
0000000000027dd0	add	x22, x8, #0x10
0000000000027dd4	ldp	x1, x9, [x28, #0x120]
0000000000027dd8	sub	x2, x9, x1
0000000000027ddc	sub	x24, x8, x2
0000000000027de0	cmp	x2, #0x1
0000000000027de4	b.lt	0x27dfc
0000000000027de8	mov	x0, x24
0000000000027dec	str	x10, [sp, #0x8]
0000000000027df0	bl	0x51aac ; symbol stub for: _memcpy
0000000000027df4	ldp	x10, x8, [sp, #0x8]
0000000000027df8	ldr	x1, [x8]
0000000000027dfc	stp	x24, x22, [x28, #0x120]
0000000000027e00	str	x10, [x28, #0x130]
0000000000027e04	adr	x24, #0x352ac
0000000000027e08	nop
0000000000027e0c	cbz	x1, 0x27e18
0000000000027e10	mov	x0, x1
0000000000027e14	bl	0x51a64 ; symbol stub for: _free
0000000000027e18	ldarb	w8, [x26]
0000000000027e1c	tbz	w8, #0x0, 0x27e24
0000000000027e20	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027e24	mov	x8, #0x2d18
0000000000027e28	movk	x8, #0x5444, lsl #16
0000000000027e2c	movk	x8, #0x21fb, lsl #32
0000000000027e30	movk	x8, #0x4009, lsl #48
0000000000027e34	mov	x9, #0x45de
0000000000027e38	movk	x9, #0xc9be, lsl #16
0000000000027e3c	movk	x9, #0xbd3c, lsl #32
0000000000027e40	movk	x9, #0x4043, lsl #48
0000000000027e44	stp	x8, x9, [x23, #0x18]
0000000000027e48	mov	x8, #0x70a4
0000000000027e4c	movk	x8, #0xa3d, lsl #16
0000000000027e50	movk	x8, #0xd3d7, lsl #32
0000000000027e54	movk	x8, #0x4076, lsl #48
0000000000027e58	str	x8, [x23, #0x28]
0000000000027e5c	mov	w0, #0x1
0000000000027e60	mov	w1, #0x28
0000000000027e64	bl	0x519e0 ; symbol stub for: _calloc
0000000000027e68	ldr	x8, [x28, #0x18]!
0000000000027e6c	sub	x9, x28, #0x8
0000000000027e70	stp	x27, x9, [x0, #0x10]
0000000000027e74	stp	x8, x28, [x0]
0000000000027e78	str	x0, [x8, #0x8]
0000000000027e7c	str	x0, [x28]
0000000000027e80	ldr	x8, [x28, #0x10]
0000000000027e84	add	x8, x8, #0x1
0000000000027e88	str	x8, [x28, #0x10]
0000000000027e8c	str	x0, [x0, #0x20]
0000000000027e90	stlr	x20, [x27]
0000000000027e94	ldr	x8, [x28, #0x110]
0000000000027e98	sub	x8, x8, #0x10
0000000000027e9c	str	x8, [x28, #0x110]
0000000000027ea0	movi.16b	v0, #0x0
0000000000027ea4	stp	q0, q0, [x29, #-0xb0]
0000000000027ea8	mov	x0, x19
0000000000027eac	blr	x25
0000000000027eb0	ldr	x8, [x0]
0000000000027eb4	ldr	x9, [x8, #0x110]
0000000000027eb8	sub	x10, x29, #0xb0
0000000000027ebc	str	x10, [x8, #0x110]
0000000000027ec0	mov	x8, #0x400000000
0000000000027ec4	stp	x9, x8, [x29, #-0xa8]
0000000000027ec8	ldarb	w8, [x26]
0000000000027ecc	tbz	w8, #0x0, 0x27ed4
0000000000027ed0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027ed4	mov	x0, x19
0000000000027ed8	blr	x25
0000000000027edc	mov	x22, x0
0000000000027ee0	ldr	x8, [x0]
0000000000027ee4	ldr	x8, [x8, #0x118]
0000000000027ee8	add	x0, x8, #0x70
0000000000027eec	mov	w1, #0x48
0000000000027ef0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000027ef4	str	x24, [x0, #0x10]!
0000000000027ef8	stur	xzr, [x0, #-0x8]
0000000000027efc	stur	x0, [x29, #-0x98]
0000000000027f00	mov	x8, #0xd9cf
0000000000027f04	movk	x8, #0xcea7, lsl #16
0000000000027f08	movk	x8, #0xc9ea, lsl #32
0000000000027f0c	movk	x8, #0x4029, lsl #48
0000000000027f10	mov	x9, #0x667e
0000000000027f14	movk	x9, #0xd626, lsl #16
0000000000027f18	movk	x9, #0x38e8, lsl #32
0000000000027f1c	movk	x9, #0xc02e, lsl #48
0000000000027f20	stp	x8, x9, [x0, #0x8]
0000000000027f24	mov	x8, #0x7da0
0000000000027f28	movk	x8, #0xbe25, lsl #16
0000000000027f2c	movk	x8, #0x9557, lsl #32
0000000000027f30	movk	x8, #0xbfcc, lsl #48
0000000000027f34	str	x8, [x0, #0x18]
0000000000027f38	ldr	d0, [x20, #0x18]
0000000000027f3c	nop
0000000000027f40	ldr	d1, 0x52460
0000000000027f44	fmul	d0, d0, d1
0000000000027f48	str	d0, [x0, #0x20]
0000000000027f4c	ldr	d0, [x20, #0x18]
0000000000027f50	nop
0000000000027f54	ldr	d1, 0x52468
0000000000027f58	fmul	d0, d0, d1
0000000000027f5c	str	d0, [x0, #0x28]
0000000000027f60	ldr	d0, [x20, #0x18]
0000000000027f64	nop
0000000000027f68	ldr	d1, 0x52470
0000000000027f6c	fmul	d0, d0, d1
0000000000027f70	str	d0, [x0, #0x30]
0000000000027f74	ldr	d0, [x20, #0x10]
0000000000027f78	nop
0000000000027f7c	ldr	d1, 0x52478
0000000000027f80	fmul	d0, d0, d1
0000000000027f84	str	d0, [x0, #0x38]
0000000000027f88	ldr	x8, [x22]
0000000000027f8c	ldur	x9, [x29, #-0xa8]
0000000000027f90	str	x9, [x8, #0x110]
0000000000027f94	stp	x0, x0, [sp, #0xb8]
0000000000027f98	ldar	x20, [x27]
0000000000027f9c	cmp	x20, #0x2
0000000000027fa0	b.hs	0x281c4
0000000000027fa4	mov	x0, x19
0000000000027fa8	blr	x25
0000000000027fac	ldr	x28, [x0]
0000000000027fb0	ldp	x8, x9, [x28, #0x120]
0000000000027fb4	cmp	x8, x9
0000000000027fb8	b.eq	0x27fd8
0000000000027fbc	mov	x10, x9
0000000000027fc0	ldr	x11, [x10, #-0x10]!
0000000000027fc4	cmp	x11, x27
0000000000027fc8	b.eq	0x28094
0000000000027fcc	mov	x9, x10
0000000000027fd0	cmp	x10, x8
0000000000027fd4	b.ne	0x27fc0
0000000000027fd8	add	x22, x28, #0x120
0000000000027fdc	add	x0, x28, #0x138
0000000000027fe0	mov	w9, #0x1
0000000000027fe4	ldaxr	w8, [x0]
0000000000027fe8	stlxr	w10, w9, [x0]
0000000000027fec	cbnz	w10, 0x27fe4
0000000000027ff0	b	0x28000
0000000000027ff4	mov	w23, #0x1
0000000000027ff8	stlxr	w9, x23, [x27]
0000000000027ffc	cbz	w9, 0x28010
0000000000028000	ldaxr	x20, [x27]
0000000000028004	cbz	x20, 0x27ff4
0000000000028008	mov	w23, #0x0
000000000002800c	clrex
0000000000028010	cmp	x20, #0x1
0000000000028014	b.eq	0x28000
0000000000028018	cbz	x28, 0x28040
000000000002801c	ldaxr	w9, [x0]
0000000000028020	stlxr	w10, w8, [x0]
0000000000028024	cbnz	w10, 0x2801c
0000000000028028	cbnz	w8, 0x28040
000000000002802c	cmp	w9, #0x1
0000000000028030	b.ne	0x28040
0000000000028034	ldarb	w8, [x26]
0000000000028038	tbz	w8, #0x0, 0x28040
000000000002803c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028040	tbz	w23, #0x0, 0x2808c
0000000000028044	ldr	x8, [x28, #0x118]
0000000000028048	add	x0, x8, #0x70
000000000002804c	mov	w1, #0x28
0000000000028050	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000028054	mov	x23, x0
0000000000028058	adr	x8, #0x350e8
000000000002805c	nop
0000000000028060	mov	x20, x0
0000000000028064	str	x8, [x20, #0x10]!
0000000000028068	str	xzr, [x0, #0x8]
000000000002806c	str	x20, [sp, #0xc8]
0000000000028070	ldp	x9, x8, [x28, #0x128]
0000000000028074	cmp	x9, x8
0000000000028078	b.hs	0x280a0
000000000002807c	stp	x27, x20, [x9]
0000000000028080	add	x8, x9, #0x10
0000000000028084	str	x8, [x28, #0x128]
0000000000028088	b	0x2813c
000000000002808c	str	x20, [sp, #0xc8]
0000000000028090	b	0x281c4
0000000000028094	ldur	x20, [x9, #-0x8]
0000000000028098	str	x20, [sp, #0xc8]
000000000002809c	b	0x281c4
00000000000280a0	str	x22, [sp, #0x10]
00000000000280a4	ldr	x10, [x22]
00000000000280a8	sub	x9, x9, x10
00000000000280ac	asr	x22, x9, #4
00000000000280b0	add	x9, x22, #0x1
00000000000280b4	lsr	x11, x9, #60
00000000000280b8	cbnz	x11, 0x28bb8
00000000000280bc	sub	x8, x8, x10
00000000000280c0	asr	x10, x8, #3
00000000000280c4	cmp	x10, x9
00000000000280c8	csel	x9, x9, x10, lo
00000000000280cc	mov	x10, #0x7ffffffffffffff
00000000000280d0	cmp	x10, x8, asr #4
00000000000280d4	mov	x8, #0xfffffffffffffff
00000000000280d8	csel	x24, x9, x8, hi
00000000000280dc	mov	x0, x24
00000000000280e0	mov	w1, #0x10
00000000000280e4	bl	0x519e0 ; symbol stub for: _calloc
00000000000280e8	add	x8, x0, x22, lsl #4
00000000000280ec	add	x10, x0, x24, lsl #4
00000000000280f0	stp	x27, x20, [x8]
00000000000280f4	add	x22, x8, #0x10
00000000000280f8	ldp	x1, x9, [x28, #0x120]
00000000000280fc	sub	x2, x9, x1
0000000000028100	sub	x24, x8, x2
0000000000028104	cmp	x2, #0x1
0000000000028108	b.lt	0x28120
000000000002810c	mov	x0, x24
0000000000028110	str	x10, [sp, #0x8]
0000000000028114	bl	0x51aac ; symbol stub for: _memcpy
0000000000028118	ldp	x10, x8, [sp, #0x8]
000000000002811c	ldr	x1, [x8]
0000000000028120	stp	x24, x22, [x28, #0x120]
0000000000028124	str	x10, [x28, #0x130]
0000000000028128	adr	x24, #0x34f88
000000000002812c	nop
0000000000028130	cbz	x1, 0x2813c
0000000000028134	mov	x0, x1
0000000000028138	bl	0x51a64 ; symbol stub for: _free
000000000002813c	ldarb	w8, [x26]
0000000000028140	tbz	w8, #0x0, 0x28148
0000000000028144	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028148	mov	x8, #0x2d18
000000000002814c	movk	x8, #0x5444, lsl #16
0000000000028150	movk	x8, #0x21fb, lsl #32
0000000000028154	movk	x8, #0x4009, lsl #48
0000000000028158	mov	x9, #0x45de
000000000002815c	movk	x9, #0xc9be, lsl #16
0000000000028160	movk	x9, #0xbd3c, lsl #32
0000000000028164	movk	x9, #0x4043, lsl #48
0000000000028168	stp	x8, x9, [x23, #0x18]
000000000002816c	mov	x8, #0x70a4
0000000000028170	movk	x8, #0xa3d, lsl #16
0000000000028174	movk	x8, #0xd3d7, lsl #32
0000000000028178	movk	x8, #0x4076, lsl #48
000000000002817c	str	x8, [x23, #0x28]
0000000000028180	mov	w0, #0x1
0000000000028184	mov	w1, #0x28
0000000000028188	bl	0x519e0 ; symbol stub for: _calloc
000000000002818c	ldr	x8, [x28, #0x18]!
0000000000028190	sub	x9, x28, #0x8
0000000000028194	stp	x27, x9, [x0, #0x10]
0000000000028198	stp	x8, x28, [x0]
000000000002819c	str	x0, [x8, #0x8]
00000000000281a0	str	x0, [x28]
00000000000281a4	ldr	x8, [x28, #0x10]
00000000000281a8	add	x8, x8, #0x1
00000000000281ac	str	x8, [x28, #0x10]
00000000000281b0	str	x0, [x0, #0x20]
00000000000281b4	stlr	x20, [x27]
00000000000281b8	ldr	x8, [x28, #0x110]
00000000000281bc	sub	x8, x8, #0x10
00000000000281c0	str	x8, [x28, #0x110]
00000000000281c4	movi.16b	v0, #0x0
00000000000281c8	stp	q0, q0, [x29, #-0xb0]
00000000000281cc	mov	x0, x19
00000000000281d0	blr	x25
00000000000281d4	ldr	x8, [x0]
00000000000281d8	ldr	x9, [x8, #0x110]
00000000000281dc	sub	x10, x29, #0xb0
00000000000281e0	str	x10, [x8, #0x110]
00000000000281e4	mov	x8, #0x400000000
00000000000281e8	stp	x9, x8, [x29, #-0xa8]
00000000000281ec	ldarb	w8, [x26]
00000000000281f0	tbz	w8, #0x0, 0x281f8
00000000000281f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000281f8	mov	x0, x19
00000000000281fc	blr	x25
0000000000028200	mov	x22, x0
0000000000028204	ldr	x8, [x0]
0000000000028208	ldr	x8, [x8, #0x118]
000000000002820c	add	x0, x8, #0x70
0000000000028210	mov	w1, #0x48
0000000000028214	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000028218	str	x24, [x0, #0x10]!
000000000002821c	stur	xzr, [x0, #-0x8]
0000000000028220	stur	x0, [x29, #-0x98]
0000000000028224	mov	x8, #0x572a
0000000000028228	movk	x8, #0xa905, lsl #16
000000000002822c	movk	x8, #0xc267, lsl #32
0000000000028230	movk	x8, #0x402e, lsl #48
0000000000028234	mov	x9, #0xa220
0000000000028238	movk	x9, #0x33c8, lsl #16
000000000002823c	movk	x9, #0xeb58, lsl #32
0000000000028240	movk	x9, #0xc039, lsl #48
0000000000028244	stp	x8, x9, [x0, #0x8]
0000000000028248	mov	x8, #0xe540
000000000002824c	movk	x8, #0x93ab, lsl #16
0000000000028250	movk	x8, #0xf1f3, lsl #32
0000000000028254	movk	x8, #0x3fc6, lsl #48
0000000000028258	str	x8, [x0, #0x18]
000000000002825c	ldr	d0, [x20, #0x18]
0000000000028260	nop
0000000000028264	ldr	d1, 0x52480
0000000000028268	fmul	d0, d0, d1
000000000002826c	str	d0, [x0, #0x20]
0000000000028270	ldr	d0, [x20, #0x18]
0000000000028274	nop
0000000000028278	ldr	d1, 0x52488
000000000002827c	fmul	d0, d0, d1
0000000000028280	str	d0, [x0, #0x28]
0000000000028284	ldr	d0, [x20, #0x18]
0000000000028288	nop
000000000002828c	ldr	d1, 0x52490
0000000000028290	fmul	d0, d0, d1
0000000000028294	str	d0, [x0, #0x30]
0000000000028298	ldr	d0, [x20, #0x10]
000000000002829c	nop
00000000000282a0	ldr	d1, 0x52498
00000000000282a4	fmul	d0, d0, d1
00000000000282a8	str	d0, [x0, #0x38]
00000000000282ac	ldr	x8, [x22]
00000000000282b0	ldur	x9, [x29, #-0xa8]
00000000000282b4	str	x9, [x8, #0x110]
00000000000282b8	stp	x0, x0, [sp, #0xd0]
00000000000282bc	ldr	x8, [x8, #0x118]
00000000000282c0	add	x0, x8, #0x70
00000000000282c4	mov	w1, #0x40
00000000000282c8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000282cc	adr	x8, #0x30314
00000000000282d0	nop
00000000000282d4	stp	x8, xzr, [x0, #0x10]!
00000000000282d8	stur	xzr, [x0, #-0x8]
00000000000282dc	mov	w8, #0x5
00000000000282e0	str	w8, [x0, #0x8]
00000000000282e4	stp	x0, x0, [sp, #0xe0]
00000000000282e8	ldr	x8, [sp, #0x78]
00000000000282ec	stp	x0, x8, [sp, #0xf0]
00000000000282f0	ldr	xzr, [x0]
00000000000282f4	str	x8, [x0, #0x10]
00000000000282f8	ldr	x8, [sp, #0xe8]
00000000000282fc	ldr	x9, [sp, #0x90]
0000000000028300	stp	x8, x9, [sp, #0x100]
0000000000028304	ldr	xzr, [x8]
0000000000028308	str	x9, [x8, #0x18]
000000000002830c	ldr	x8, [sp, #0xe8]
0000000000028310	ldr	x9, [sp, #0xa8]
0000000000028314	stp	x8, x9, [sp, #0x110]
0000000000028318	ldr	xzr, [x8]
000000000002831c	str	x9, [x8, #0x20]
0000000000028320	ldr	x8, [sp, #0xe8]
0000000000028324	ldr	x9, [sp, #0xc0]
0000000000028328	stp	x8, x9, [sp, #0x120]
000000000002832c	ldr	xzr, [x8]
0000000000028330	str	x9, [x8, #0x28]
0000000000028334	ldr	x8, [sp, #0xe8]
0000000000028338	ldr	x9, [sp, #0xd8]
000000000002833c	stp	x8, x9, [sp, #0x130]
0000000000028340	ldr	xzr, [x8]
0000000000028344	str	x9, [x8, #0x30]
0000000000028348	ldr	x8, [sp, #0xe8]
000000000002834c	str	x8, [sp, #0x140]
0000000000028350	str	x8, [x21, #0x8]
0000000000028354	ldr	w8, [x8, #0x8]
0000000000028358	subs	w20, w8, #0x1
000000000002835c	b.mi	0x28428
0000000000028360	mov	w22, #0x0
0000000000028364	fmov	d8, xzr
0000000000028368	fmov	d9, xzr
000000000002836c	fmov	d10, xzr
0000000000028370	b	0x28418
0000000000028374	sbfiz	x8, x22, #3, #32
0000000000028378	add	w9, w22, #0x1
000000000002837c	ldr	x10, [x21, #0x8]
0000000000028380	add	x10, x10, x8
0000000000028384	ldr	x10, [x10, #0x10]
0000000000028388	str	x10, [sp, #0x148]
000000000002838c	ldr	d0, [x10, #0x20]
0000000000028390	ldr	x10, [x21, #0x8]
0000000000028394	add	x10, x10, x8
0000000000028398	ldr	x10, [x10, #0x10]
000000000002839c	str	x10, [sp, #0x150]
00000000000283a0	ldr	d1, [x10, #0x38]
00000000000283a4	fmul	d0, d0, d1
00000000000283a8	fadd	d10, d10, d0
00000000000283ac	ldr	x10, [x21, #0x8]
00000000000283b0	add	x10, x10, x8
00000000000283b4	ldr	x10, [x10, #0x10]
00000000000283b8	str	x10, [sp, #0x158]
00000000000283bc	ldr	d0, [x10, #0x28]
00000000000283c0	ldr	x10, [x21, #0x8]
00000000000283c4	add	x10, x10, x8
00000000000283c8	ldr	x10, [x10, #0x10]
00000000000283cc	str	x10, [sp, #0x160]
00000000000283d0	ldr	d1, [x10, #0x38]
00000000000283d4	fmul	d0, d0, d1
00000000000283d8	fadd	d9, d9, d0
00000000000283dc	ldr	x10, [x21, #0x8]
00000000000283e0	add	x10, x10, x8
00000000000283e4	ldr	x10, [x10, #0x10]
00000000000283e8	str	x10, [sp, #0x168]
00000000000283ec	ldr	d0, [x10, #0x30]
00000000000283f0	ldr	x10, [x21, #0x8]
00000000000283f4	add	x8, x10, x8
00000000000283f8	ldr	x8, [x8, #0x10]
00000000000283fc	str	x8, [sp, #0x170]
0000000000028400	ldr	d1, [x8, #0x38]
0000000000028404	fmul	d0, d0, d1
0000000000028408	fadd	d8, d8, d0
000000000002840c	mov	x22, x9
0000000000028410	cmp	w9, w20
0000000000028414	b.gt	0x28434
0000000000028418	ldarb	w8, [x26]
000000000002841c	tbz	w8, #0x0, 0x28374
0000000000028420	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028424	b	0x28374
0000000000028428	fmov	d8, xzr
000000000002842c	fmov	d9, xzr
0000000000028430	fmov	d10, xzr
0000000000028434	ldr	x8, [x21, #0x8]
0000000000028438	ldr	w9, [x8, #0x8]
000000000002843c	cbz	w9, 0x28b80
0000000000028440	ldr	x24, [x8, #0x10]
0000000000028444	str	x24, [sp, #0x178]
0000000000028448	movi.16b	v0, #0x0
000000000002844c	stp	q0, q0, [x29, #-0xb0]
0000000000028450	stur	q0, [x29, #-0x90]
0000000000028454	mov	x0, x19
0000000000028458	blr	x25
000000000002845c	ldr	x8, [x0]
0000000000028460	ldr	x9, [x8, #0x110]
0000000000028464	sub	x10, x29, #0xb0
0000000000028468	str	x10, [x8, #0x110]
000000000002846c	mov	x8, #0x600000000
0000000000028470	stp	x9, x8, [x29, #-0xa8]
0000000000028474	ldarb	w8, [x26]
0000000000028478	tbz	w8, #0x0, 0x28480
000000000002847c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028480	ldar	x28, [x27]
0000000000028484	cmp	x28, #0x2
0000000000028488	b.hs	0x286a4
000000000002848c	mov	x0, x19
0000000000028490	blr	x25
0000000000028494	ldr	x20, [x0]
0000000000028498	ldp	x8, x9, [x20, #0x120]
000000000002849c	cmp	x8, x9
00000000000284a0	b.eq	0x284c0
00000000000284a4	mov	x10, x9
00000000000284a8	ldr	x11, [x10, #-0x10]!
00000000000284ac	cmp	x11, x27
00000000000284b0	b.eq	0x2857c
00000000000284b4	mov	x9, x10
00000000000284b8	cmp	x10, x8
00000000000284bc	b.ne	0x284a8
00000000000284c0	add	x21, x20, #0x120
00000000000284c4	add	x0, x20, #0x138
00000000000284c8	mov	w9, #0x1
00000000000284cc	ldaxr	w8, [x0]
00000000000284d0	stlxr	w10, w9, [x0]
00000000000284d4	cbnz	w10, 0x284cc
00000000000284d8	b	0x284e8
00000000000284dc	mov	w22, #0x1
00000000000284e0	stlxr	w9, x22, [x27]
00000000000284e4	cbz	w9, 0x284f8
00000000000284e8	ldaxr	x28, [x27]
00000000000284ec	cbz	x28, 0x284dc
00000000000284f0	mov	w22, #0x0
00000000000284f4	clrex
00000000000284f8	cmp	x28, #0x1
00000000000284fc	b.eq	0x284e8
0000000000028500	cbz	x20, 0x28528
0000000000028504	ldaxr	w9, [x0]
0000000000028508	stlxr	w10, w8, [x0]
000000000002850c	cbnz	w10, 0x28504
0000000000028510	cbnz	w8, 0x28528
0000000000028514	cmp	w9, #0x1
0000000000028518	b.ne	0x28528
000000000002851c	ldarb	w8, [x26]
0000000000028520	tbz	w8, #0x0, 0x28528
0000000000028524	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028528	tbz	w22, #0x0, 0x28574
000000000002852c	ldr	x8, [x20, #0x118]
0000000000028530	add	x0, x8, #0x70
0000000000028534	mov	w1, #0x28
0000000000028538	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002853c	mov	x22, x0
0000000000028540	adr	x8, #0x34c00
0000000000028544	nop
0000000000028548	mov	x28, x0
000000000002854c	str	x8, [x28, #0x10]!
0000000000028550	str	xzr, [x0, #0x8]
0000000000028554	stur	x28, [x29, #-0x98]
0000000000028558	ldp	x9, x8, [x20, #0x128]
000000000002855c	cmp	x9, x8
0000000000028560	b.hs	0x28588
0000000000028564	stp	x27, x28, [x9]
0000000000028568	add	x8, x9, #0x10
000000000002856c	str	x8, [x20, #0x128]
0000000000028570	b	0x2861c
0000000000028574	stur	x28, [x29, #-0x98]
0000000000028578	b	0x286a4
000000000002857c	ldur	x28, [x9, #-0x8]
0000000000028580	stur	x28, [x29, #-0x98]
0000000000028584	b	0x286a4
0000000000028588	str	x21, [sp, #0x10]
000000000002858c	ldr	x10, [x21]
0000000000028590	sub	x9, x9, x10
0000000000028594	asr	x21, x9, #4
0000000000028598	add	x9, x21, #0x1
000000000002859c	lsr	x11, x9, #60
00000000000285a0	cbnz	x11, 0x28bc4
00000000000285a4	sub	x8, x8, x10
00000000000285a8	asr	x10, x8, #3
00000000000285ac	cmp	x10, x9
00000000000285b0	csel	x9, x9, x10, lo
00000000000285b4	mov	x10, #0x7ffffffffffffff
00000000000285b8	cmp	x10, x8, asr #4
00000000000285bc	mov	x8, #0xfffffffffffffff
00000000000285c0	csel	x23, x9, x8, hi
00000000000285c4	mov	x0, x23
00000000000285c8	mov	w1, #0x10
00000000000285cc	bl	0x519e0 ; symbol stub for: _calloc
00000000000285d0	add	x8, x0, x21, lsl #4
00000000000285d4	add	x10, x0, x23, lsl #4
00000000000285d8	stp	x27, x28, [x8]
00000000000285dc	add	x21, x8, #0x10
00000000000285e0	ldp	x1, x9, [x20, #0x120]
00000000000285e4	sub	x2, x9, x1
00000000000285e8	sub	x23, x8, x2
00000000000285ec	cmp	x2, #0x1
00000000000285f0	b.lt	0x28608
00000000000285f4	mov	x0, x23
00000000000285f8	str	x10, [sp, #0x8]
00000000000285fc	bl	0x51aac ; symbol stub for: _memcpy
0000000000028600	ldp	x10, x8, [sp, #0x8]
0000000000028604	ldr	x1, [x8]
0000000000028608	stp	x23, x21, [x20, #0x120]
000000000002860c	str	x10, [x20, #0x130]
0000000000028610	cbz	x1, 0x2861c
0000000000028614	mov	x0, x1
0000000000028618	bl	0x51a64 ; symbol stub for: _free
000000000002861c	ldarb	w8, [x26]
0000000000028620	tbz	w8, #0x0, 0x28628
0000000000028624	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028628	mov	x8, #0x2d18
000000000002862c	movk	x8, #0x5444, lsl #16
0000000000028630	movk	x8, #0x21fb, lsl #32
0000000000028634	movk	x8, #0x4009, lsl #48
0000000000028638	mov	x9, #0x45de
000000000002863c	movk	x9, #0xc9be, lsl #16
0000000000028640	movk	x9, #0xbd3c, lsl #32
0000000000028644	movk	x9, #0x4043, lsl #48
0000000000028648	stp	x8, x9, [x22, #0x18]
000000000002864c	mov	x8, #0x70a4
0000000000028650	movk	x8, #0xa3d, lsl #16
0000000000028654	movk	x8, #0xd3d7, lsl #32
0000000000028658	movk	x8, #0x4076, lsl #48
000000000002865c	str	x8, [x22, #0x28]
0000000000028660	mov	w0, #0x1
0000000000028664	mov	w1, #0x28
0000000000028668	bl	0x519e0 ; symbol stub for: _calloc
000000000002866c	ldr	x8, [x20, #0x18]!
0000000000028670	sub	x9, x20, #0x8
0000000000028674	stp	x27, x9, [x0, #0x10]
0000000000028678	stp	x8, x20, [x0]
000000000002867c	str	x0, [x8, #0x8]
0000000000028680	str	x0, [x20]
0000000000028684	ldr	x8, [x20, #0x10]
0000000000028688	add	x8, x8, #0x1
000000000002868c	str	x8, [x20, #0x10]
0000000000028690	str	x0, [x0, #0x20]
0000000000028694	stlr	x28, [x27]
0000000000028698	ldr	x8, [x20, #0x110]
000000000002869c	sub	x8, x8, #0x10
00000000000286a0	str	x8, [x20, #0x110]
00000000000286a4	fneg	d0, d10
00000000000286a8	ldr	d1, [x28, #0x10]
00000000000286ac	fdiv	d0, d0, d1
00000000000286b0	str	d0, [x24, #0x20]
00000000000286b4	ldar	x28, [x27]
00000000000286b8	cmp	x28, #0x2
00000000000286bc	b.hs	0x288d8
00000000000286c0	mov	x0, x19
00000000000286c4	blr	x25
00000000000286c8	ldr	x20, [x0]
00000000000286cc	ldp	x8, x9, [x20, #0x120]
00000000000286d0	cmp	x8, x9
00000000000286d4	b.eq	0x286f4
00000000000286d8	mov	x10, x9
00000000000286dc	ldr	x11, [x10, #-0x10]!
00000000000286e0	cmp	x11, x27
00000000000286e4	b.eq	0x287b0
00000000000286e8	mov	x9, x10
00000000000286ec	cmp	x10, x8
00000000000286f0	b.ne	0x286dc
00000000000286f4	add	x21, x20, #0x120
00000000000286f8	add	x0, x20, #0x138
00000000000286fc	mov	w9, #0x1
0000000000028700	ldaxr	w8, [x0]
0000000000028704	stlxr	w10, w9, [x0]
0000000000028708	cbnz	w10, 0x28700
000000000002870c	b	0x2871c
0000000000028710	mov	w22, #0x1
0000000000028714	stlxr	w9, x22, [x27]
0000000000028718	cbz	w9, 0x2872c
000000000002871c	ldaxr	x28, [x27]
0000000000028720	cbz	x28, 0x28710
0000000000028724	mov	w22, #0x0
0000000000028728	clrex
000000000002872c	cmp	x28, #0x1
0000000000028730	b.eq	0x2871c
0000000000028734	cbz	x20, 0x2875c
0000000000028738	ldaxr	w9, [x0]
000000000002873c	stlxr	w10, w8, [x0]
0000000000028740	cbnz	w10, 0x28738
0000000000028744	cbnz	w8, 0x2875c
0000000000028748	cmp	w9, #0x1
000000000002874c	b.ne	0x2875c
0000000000028750	ldarb	w8, [x26]
0000000000028754	tbz	w8, #0x0, 0x2875c
0000000000028758	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002875c	tbz	w22, #0x0, 0x287a8
0000000000028760	ldr	x8, [x20, #0x118]
0000000000028764	add	x0, x8, #0x70
0000000000028768	mov	w1, #0x28
000000000002876c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000028770	mov	x22, x0
0000000000028774	adr	x8, #0x349cc
0000000000028778	nop
000000000002877c	mov	x28, x0
0000000000028780	str	x8, [x28, #0x10]!
0000000000028784	str	xzr, [x0, #0x8]
0000000000028788	stur	x28, [x29, #-0x90]
000000000002878c	ldp	x9, x8, [x20, #0x128]
0000000000028790	cmp	x9, x8
0000000000028794	b.hs	0x287bc
0000000000028798	stp	x27, x28, [x9]
000000000002879c	add	x8, x9, #0x10
00000000000287a0	str	x8, [x20, #0x128]
00000000000287a4	b	0x28850
00000000000287a8	stur	x28, [x29, #-0x90]
00000000000287ac	b	0x288d8
00000000000287b0	ldur	x28, [x9, #-0x8]
00000000000287b4	stur	x28, [x29, #-0x90]
00000000000287b8	b	0x288d8
00000000000287bc	str	x21, [sp, #0x10]
00000000000287c0	ldr	x10, [x21]
00000000000287c4	sub	x9, x9, x10
00000000000287c8	asr	x21, x9, #4
00000000000287cc	add	x9, x21, #0x1
00000000000287d0	lsr	x11, x9, #60
00000000000287d4	cbnz	x11, 0x28bd0
00000000000287d8	sub	x8, x8, x10
00000000000287dc	asr	x10, x8, #3
00000000000287e0	cmp	x10, x9
00000000000287e4	csel	x9, x9, x10, lo
00000000000287e8	mov	x10, #0x7ffffffffffffff
00000000000287ec	cmp	x10, x8, asr #4
00000000000287f0	mov	x8, #0xfffffffffffffff
00000000000287f4	csel	x23, x9, x8, hi
00000000000287f8	mov	x0, x23
00000000000287fc	mov	w1, #0x10
0000000000028800	bl	0x519e0 ; symbol stub for: _calloc
0000000000028804	add	x8, x0, x21, lsl #4
0000000000028808	add	x10, x0, x23, lsl #4
000000000002880c	stp	x27, x28, [x8]
0000000000028810	add	x21, x8, #0x10
0000000000028814	ldp	x1, x9, [x20, #0x120]
0000000000028818	sub	x2, x9, x1
000000000002881c	sub	x23, x8, x2
0000000000028820	cmp	x2, #0x1
0000000000028824	b.lt	0x2883c
0000000000028828	mov	x0, x23
000000000002882c	str	x10, [sp, #0x8]
0000000000028830	bl	0x51aac ; symbol stub for: _memcpy
0000000000028834	ldp	x10, x8, [sp, #0x8]
0000000000028838	ldr	x1, [x8]
000000000002883c	stp	x23, x21, [x20, #0x120]
0000000000028840	str	x10, [x20, #0x130]
0000000000028844	cbz	x1, 0x28850
0000000000028848	mov	x0, x1
000000000002884c	bl	0x51a64 ; symbol stub for: _free
0000000000028850	ldarb	w8, [x26]
0000000000028854	tbz	w8, #0x0, 0x2885c
0000000000028858	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002885c	mov	x8, #0x2d18
0000000000028860	movk	x8, #0x5444, lsl #16
0000000000028864	movk	x8, #0x21fb, lsl #32
0000000000028868	movk	x8, #0x4009, lsl #48
000000000002886c	mov	x9, #0x45de
0000000000028870	movk	x9, #0xc9be, lsl #16
0000000000028874	movk	x9, #0xbd3c, lsl #32
0000000000028878	movk	x9, #0x4043, lsl #48
000000000002887c	stp	x8, x9, [x22, #0x18]
0000000000028880	mov	x8, #0x70a4
0000000000028884	movk	x8, #0xa3d, lsl #16
0000000000028888	movk	x8, #0xd3d7, lsl #32
000000000002888c	movk	x8, #0x4076, lsl #48
0000000000028890	str	x8, [x22, #0x28]
0000000000028894	mov	w0, #0x1
0000000000028898	mov	w1, #0x28
000000000002889c	bl	0x519e0 ; symbol stub for: _calloc
00000000000288a0	ldr	x8, [x20, #0x18]!
00000000000288a4	sub	x9, x20, #0x8
00000000000288a8	stp	x27, x9, [x0, #0x10]
00000000000288ac	stp	x8, x20, [x0]
00000000000288b0	str	x0, [x8, #0x8]
00000000000288b4	str	x0, [x20]
00000000000288b8	ldr	x8, [x20, #0x10]
00000000000288bc	add	x8, x8, #0x1
00000000000288c0	str	x8, [x20, #0x10]
00000000000288c4	str	x0, [x0, #0x20]
00000000000288c8	stlr	x28, [x27]
00000000000288cc	ldr	x8, [x20, #0x110]
00000000000288d0	sub	x8, x8, #0x10
00000000000288d4	str	x8, [x20, #0x110]
00000000000288d8	fneg	d0, d9
00000000000288dc	ldr	d1, [x28, #0x10]
00000000000288e0	fdiv	d0, d0, d1
00000000000288e4	str	d0, [x24, #0x28]
00000000000288e8	ldar	x28, [x27]
00000000000288ec	cmp	x28, #0x1
00000000000288f0	b.hi	0x28b10
00000000000288f4	mov	x0, x19
00000000000288f8	blr	x25
00000000000288fc	ldr	x20, [x0]
0000000000028900	ldp	x8, x9, [x20, #0x120]
0000000000028904	cmp	x8, x9
0000000000028908	b.eq	0x28928
000000000002890c	mov	x10, x9
0000000000028910	ldr	x11, [x10, #-0x10]!
0000000000028914	cmp	x11, x27
0000000000028918	b.eq	0x289dc
000000000002891c	mov	x9, x10
0000000000028920	cmp	x10, x8
0000000000028924	b.ne	0x28910
0000000000028928	add	x21, x20, #0x120
000000000002892c	add	x0, x20, #0x138
0000000000028930	mov	w9, #0x1
0000000000028934	ldaxr	w8, [x0]
0000000000028938	stlxr	w10, w9, [x0]
000000000002893c	cbnz	w10, 0x28934
0000000000028940	b	0x28950
0000000000028944	mov	w22, #0x1
0000000000028948	stlxr	w9, x22, [x27]
000000000002894c	cbz	w9, 0x28960
0000000000028950	ldaxr	x28, [x27]
0000000000028954	cbz	x28, 0x28944
0000000000028958	mov	w22, #0x0
000000000002895c	clrex
0000000000028960	cmp	x28, #0x1
0000000000028964	b.eq	0x28950
0000000000028968	cbz	x20, 0x28990
000000000002896c	ldaxr	w9, [x0]
0000000000028970	stlxr	w10, w8, [x0]
0000000000028974	cbnz	w10, 0x2896c
0000000000028978	cbnz	w8, 0x28990
000000000002897c	cmp	w9, #0x1
0000000000028980	b.ne	0x28990
0000000000028984	ldarb	w8, [x26]
0000000000028988	tbz	w8, #0x0, 0x28990
000000000002898c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028990	tbz	w22, #0x0, 0x289e0
0000000000028994	ldr	x8, [x20, #0x118]
0000000000028998	add	x0, x8, #0x70
000000000002899c	mov	w1, #0x28
00000000000289a0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000289a4	mov	x22, x0
00000000000289a8	adr	x8, #0x34798
00000000000289ac	nop
00000000000289b0	mov	x28, x0
00000000000289b4	str	x8, [x28, #0x10]!
00000000000289b8	str	xzr, [x0, #0x8]
00000000000289bc	stur	x28, [x29, #-0x88]
00000000000289c0	ldp	x9, x8, [x20, #0x128]
00000000000289c4	cmp	x9, x8
00000000000289c8	b.hs	0x289e8
00000000000289cc	stp	x27, x28, [x9]
00000000000289d0	add	x8, x9, #0x10
00000000000289d4	str	x8, [x20, #0x128]
00000000000289d8	b	0x28a88
00000000000289dc	ldur	x28, [x9, #-0x8]
00000000000289e0	stur	x28, [x29, #-0x88]
00000000000289e4	b	0x28b10
00000000000289e8	str	x21, [sp, #0x10]
00000000000289ec	ldr	x10, [x21]
00000000000289f0	sub	x9, x9, x10
00000000000289f4	asr	x21, x9, #4
00000000000289f8	add	x9, x21, #0x1
00000000000289fc	lsr	x11, x9, #60
0000000000028a00	cbnz	x11, 0x28bdc
0000000000028a04	sub	x8, x8, x10
0000000000028a08	asr	x10, x8, #3
0000000000028a0c	cmp	x10, x9
0000000000028a10	csel	x9, x9, x10, lo
0000000000028a14	mov	x10, #0x7ffffffffffffff
0000000000028a18	cmp	x10, x8, asr #4
0000000000028a1c	mov	x8, #0xfffffffffffffff
0000000000028a20	csel	x23, x9, x8, hi
0000000000028a24	mov	x0, x23
0000000000028a28	mov	w1, #0x10
0000000000028a2c	bl	0x519e0 ; symbol stub for: _calloc
0000000000028a30	add	x8, x0, x21, lsl #4
0000000000028a34	add	x21, x0, x23, lsl #4
0000000000028a38	stp	x27, x28, [x8]
0000000000028a3c	add	x11, x8, #0x10
0000000000028a40	ldp	x1, x9, [x20, #0x120]
0000000000028a44	sub	x2, x9, x1
0000000000028a48	sub	x23, x8, x2
0000000000028a4c	cmp	x2, #0x1
0000000000028a50	b.lt	0x28a74
0000000000028a54	mov	x0, x23
0000000000028a58	mov	x19, x11
0000000000028a5c	bl	0x51aac ; symbol stub for: _memcpy
0000000000028a60	mov	x11, x19
0000000000028a64	adrp	x19, 68 ; 0x6c000
0000000000028a68	add	x19, x19, #0xbb0
0000000000028a6c	ldr	x8, [sp, #0x10]
0000000000028a70	ldr	x1, [x8]
0000000000028a74	stp	x23, x11, [x20, #0x120]
0000000000028a78	str	x21, [x20, #0x130]
0000000000028a7c	cbz	x1, 0x28a88
0000000000028a80	mov	x0, x1
0000000000028a84	bl	0x51a64 ; symbol stub for: _free
0000000000028a88	ldarb	w8, [x26]
0000000000028a8c	tbz	w8, #0x0, 0x28a94
0000000000028a90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028a94	mov	x8, #0x2d18
0000000000028a98	movk	x8, #0x5444, lsl #16
0000000000028a9c	movk	x8, #0x21fb, lsl #32
0000000000028aa0	movk	x8, #0x4009, lsl #48
0000000000028aa4	mov	x9, #0x45de
0000000000028aa8	movk	x9, #0xc9be, lsl #16
0000000000028aac	movk	x9, #0xbd3c, lsl #32
0000000000028ab0	movk	x9, #0x4043, lsl #48
0000000000028ab4	stp	x8, x9, [x22, #0x18]
0000000000028ab8	mov	x8, #0x70a4
0000000000028abc	movk	x8, #0xa3d, lsl #16
0000000000028ac0	movk	x8, #0xd3d7, lsl #32
0000000000028ac4	movk	x8, #0x4076, lsl #48
0000000000028ac8	str	x8, [x22, #0x28]
0000000000028acc	mov	w0, #0x1
0000000000028ad0	mov	w1, #0x28
0000000000028ad4	bl	0x519e0 ; symbol stub for: _calloc
0000000000028ad8	ldr	x8, [x20, #0x18]!
0000000000028adc	sub	x9, x20, #0x8
0000000000028ae0	stp	x27, x9, [x0, #0x10]
0000000000028ae4	stp	x8, x20, [x0]
0000000000028ae8	str	x0, [x8, #0x8]
0000000000028aec	str	x0, [x20]
0000000000028af0	ldr	x8, [x20, #0x10]
0000000000028af4	add	x8, x8, #0x1
0000000000028af8	str	x8, [x20, #0x10]
0000000000028afc	str	x0, [x0, #0x20]
0000000000028b00	stlr	x28, [x27]
0000000000028b04	ldr	x8, [x20, #0x110]
0000000000028b08	sub	x8, x8, #0x10
0000000000028b0c	str	x8, [x20, #0x110]
0000000000028b10	fneg	d0, d8
0000000000028b14	ldr	d1, [x28, #0x10]
0000000000028b18	fdiv	d0, d0, d1
0000000000028b1c	str	d0, [x24, #0x30]
0000000000028b20	str	x24, [sp, #0x180]
0000000000028b24	mov	x0, x19
0000000000028b28	blr	x25
0000000000028b2c	ldr	x8, [x0]
0000000000028b30	ldr	x9, [sp, #0x58]
0000000000028b34	str	x9, [x8, #0x110]
0000000000028b38	ldr	x9, [sp, #0x28]
0000000000028b3c	str	x9, [x8, #0x110]
0000000000028b40	add	x8, x8, #0x138
0000000000028b44	mov	w9, #0x1
0000000000028b48	ldaxr	wzr, [x8]
0000000000028b4c	stlxr	w10, w9, [x8]
0000000000028b50	cbnz	w10, 0x28b48
0000000000028b54	ldr	x0, [sp, #0x18]
0000000000028b58	add	sp, sp, #0x1d0
0000000000028b5c	ldp	x29, x30, [sp, #0x70]
0000000000028b60	ldp	x20, x19, [sp, #0x60]
0000000000028b64	ldp	x22, x21, [sp, #0x50]
0000000000028b68	ldp	x24, x23, [sp, #0x40]
0000000000028b6c	ldp	x26, x25, [sp, #0x30]
0000000000028b70	ldp	x28, x27, [sp, #0x20]
0000000000028b74	ldp	d9, d8, [sp, #0x10]
0000000000028b78	ldp	d11, d10, [sp], #0x80
0000000000028b7c	ret
0000000000028b80	bl	_ThrowArrayIndexOutOfBoundsException
0000000000028b84	b	0x28c20
0000000000028b88	ldr	x0, [sp, #0x10]
0000000000028b8c	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000028b90	b	0x28c20
0000000000028b94	ldr	x0, [sp, #0x10]
0000000000028b98	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000028b9c	b	0x28c20
0000000000028ba0	ldr	x0, [sp, #0x10]
0000000000028ba4	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000028ba8	b	0x28c20
0000000000028bac	ldr	x0, [sp, #0x10]
0000000000028bb0	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000028bb4	b	0x28c20
0000000000028bb8	ldr	x0, [sp, #0x10]
0000000000028bbc	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000028bc0	b	0x28c20
0000000000028bc4	ldr	x0, [sp, #0x10]
0000000000028bc8	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000028bcc	b	0x28c20
0000000000028bd0	ldr	x0, [sp, #0x10]
0000000000028bd4	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000028bd8	b	0x28c20
0000000000028bdc	ldr	x0, [sp, #0x10]
0000000000028be0	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000028be4	b	0x28c20
0000000000028be8	mov	x1, x0
0000000000028bec	mov	x0, x19
0000000000028bf0	blr	x25
0000000000028bf4	ldr	x8, [x0]
0000000000028bf8	add	x9, sp, #0x20
0000000000028bfc	str	x9, [x8, #0x110]
0000000000028c00	mov	x0, x1
0000000000028c04	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000028c08	ldr	x8, [x0, #0x8]
0000000000028c0c	ldr	x20, [x8]
0000000000028c10	str	x20, [sp, #0x40]
0000000000028c14	bl	0x51944 ; symbol stub for: ___cxa_end_catch
0000000000028c18	mov	x0, x20
0000000000028c1c	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
0000000000028c20	brk	#0x1
0000000000028c24	mov	x1, x0
0000000000028c28	mov	x0, x19
0000000000028c2c	blr	x25
0000000000028c30	ldr	x8, [x0]
0000000000028c34	add	x9, sp, #0x20
0000000000028c38	str	x9, [x8, #0x110]
0000000000028c3c	mov	x0, x1
0000000000028c40	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000028c44	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000028c48	b	0x28c48
_objc2kotlin_kfun:com.example.nbodykmm.NBodyKmm#advance(kotlin.Double){}:
0000000000028c4c	sub	sp, sp, #0x80
0000000000028c50	stp	d9, d8, [sp, #0x30]
0000000000028c54	stp	x24, x23, [sp, #0x40]
0000000000028c58	stp	x22, x21, [sp, #0x50]
0000000000028c5c	stp	x20, x19, [sp, #0x60]
0000000000028c60	stp	x29, x30, [sp, #0x70]
0000000000028c64	add	x29, sp, #0x70
0000000000028c68	fmov	d8, d0
0000000000028c6c	mov	x20, x0
0000000000028c70	str	xzr, [sp, #0x20]
0000000000028c74	movi.16b	v0, #0x0
0000000000028c78	stp	q0, q0, [sp]
0000000000028c7c	mov	x8, sp
0000000000028c80	add	x21, x8, #0x18
0000000000028c84	bl	_Kotlin_initRuntimeIfNeeded
0000000000028c88	adrp	x19, 68 ; 0x6c000
0000000000028c8c	add	x19, x19, #0xbb0
0000000000028c90	ldr	x22, [x19]
0000000000028c94	mov	x0, x19
0000000000028c98	blr	x22
0000000000028c9c	ldr	x8, [x0]
0000000000028ca0	add	x0, x8, #0x138
0000000000028ca4	ldaxr	w8, [x0]
0000000000028ca8	stlxr	w9, wzr, [x0]
0000000000028cac	cbnz	w9, 0x28ca4
0000000000028cb0	adr	x23, #0x5dd93
0000000000028cb4	nop
0000000000028cb8	cmp	w8, #0x1
0000000000028cbc	b.ne	0x28ccc
0000000000028cc0	ldarb	w8, [x23]
0000000000028cc4	tbz	w8, #0x0, 0x28ccc
0000000000028cc8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028ccc	mov	x0, x19
0000000000028cd0	blr	x22
0000000000028cd4	ldr	x8, [x0]
0000000000028cd8	ldr	x9, [x8, #0x110]
0000000000028cdc	mov	x10, sp
0000000000028ce0	str	x10, [x8, #0x110]
0000000000028ce4	mov	x8, #0x500000000
0000000000028ce8	stp	x9, x8, [sp, #0x8]
0000000000028cec	ldarb	w8, [x23]
0000000000028cf0	tbz	w8, #0x0, 0x28cf8
0000000000028cf4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028cf8	cbz	x20, 0x28d14
0000000000028cfc	nop
0000000000028d00	ldr	x1, #0x5df98
0000000000028d04	mov	x0, x20
0000000000028d08	mov	x2, x21
0000000000028d0c	bl	0x51b78 ; Objc message: -[x0 description]
0000000000028d10	b	0x28d1c
0000000000028d14	mov	x0, #0x0
0000000000028d18	str	xzr, [sp, #0x18]
0000000000028d1c	fmov	d0, d8
0000000000028d20	bl	"_kfun:com.example.nbodykmm.NBodyKmm#advance(kotlin.Double){}"
0000000000028d24	mov	x0, x19
0000000000028d28	blr	x22
0000000000028d2c	ldr	x8, [x0]
0000000000028d30	ldr	x9, [sp, #0x8]
0000000000028d34	str	x9, [x8, #0x110]
0000000000028d38	add	x8, x8, #0x138
0000000000028d3c	mov	w9, #0x1
0000000000028d40	ldaxr	wzr, [x8]
0000000000028d44	stlxr	w10, w9, [x8]
0000000000028d48	cbnz	w10, 0x28d40
0000000000028d4c	ldp	x29, x30, [sp, #0x70]
0000000000028d50	ldp	x20, x19, [sp, #0x60]
0000000000028d54	ldp	x22, x21, [sp, #0x50]
0000000000028d58	ldp	x24, x23, [sp, #0x40]
0000000000028d5c	ldp	d9, d8, [sp, #0x30]
0000000000028d60	add	sp, sp, #0x80
0000000000028d64	ret
0000000000028d68	mov	x1, x0
0000000000028d6c	mov	x0, x19
0000000000028d70	blr	x22
0000000000028d74	ldr	x8, [x0]
0000000000028d78	mov	x9, sp
0000000000028d7c	str	x9, [x8, #0x110]
0000000000028d80	mov	x0, x1
0000000000028d84	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000028d88	ldr	x8, [x0, #0x8]
0000000000028d8c	ldr	x20, [x8]
0000000000028d90	str	x20, [sp, #0x20]
0000000000028d94	bl	0x51944 ; symbol stub for: ___cxa_end_catch
0000000000028d98	mov	x0, x20
0000000000028d9c	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
0000000000028da0	brk	#0x1
0000000000028da4	mov	x1, x0
0000000000028da8	mov	x0, x19
0000000000028dac	blr	x22
0000000000028db0	ldr	x8, [x0]
0000000000028db4	mov	x9, sp
0000000000028db8	str	x9, [x8, #0x110]
0000000000028dbc	mov	x0, x1
0000000000028dc0	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000028dc4	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000028dc8	b	0x28dc8
_objc2kotlin_kfun:com.example.nbodykmm.NBodyKmm#energy(){}kotlin.Double:
0000000000028dcc	sub	sp, sp, #0x70
0000000000028dd0	stp	x24, x23, [sp, #0x30]
0000000000028dd4	stp	x22, x21, [sp, #0x40]
0000000000028dd8	stp	x20, x19, [sp, #0x50]
0000000000028ddc	stp	x29, x30, [sp, #0x60]
0000000000028de0	add	x29, sp, #0x60
0000000000028de4	mov	x20, x0
0000000000028de8	str	xzr, [sp, #0x20]
0000000000028dec	movi.16b	v0, #0x0
0000000000028df0	stp	q0, q0, [sp]
0000000000028df4	mov	x8, sp
0000000000028df8	add	x21, x8, #0x18
0000000000028dfc	bl	_Kotlin_initRuntimeIfNeeded
0000000000028e00	adrp	x19, 68 ; 0x6c000
0000000000028e04	add	x19, x19, #0xbb0
0000000000028e08	ldr	x22, [x19]
0000000000028e0c	mov	x0, x19
0000000000028e10	blr	x22
0000000000028e14	ldr	x8, [x0]
0000000000028e18	add	x0, x8, #0x138
0000000000028e1c	ldaxr	w8, [x0]
0000000000028e20	stlxr	w9, wzr, [x0]
0000000000028e24	cbnz	w9, 0x28e1c
0000000000028e28	adr	x23, #0x5dc1b
0000000000028e2c	nop
0000000000028e30	cmp	w8, #0x1
0000000000028e34	b.ne	0x28e44
0000000000028e38	ldarb	w8, [x23]
0000000000028e3c	tbz	w8, #0x0, 0x28e44
0000000000028e40	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028e44	mov	x0, x19
0000000000028e48	blr	x22
0000000000028e4c	ldr	x8, [x0]
0000000000028e50	ldr	x9, [x8, #0x110]
0000000000028e54	mov	x10, sp
0000000000028e58	str	x10, [x8, #0x110]
0000000000028e5c	mov	x8, #0x500000000
0000000000028e60	stp	x9, x8, [sp, #0x8]
0000000000028e64	ldarb	w8, [x23]
0000000000028e68	tbz	w8, #0x0, 0x28e70
0000000000028e6c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028e70	cbz	x20, 0x28e8c
0000000000028e74	nop
0000000000028e78	ldr	x1, #0x5de20
0000000000028e7c	mov	x0, x20
0000000000028e80	mov	x2, x21
0000000000028e84	bl	0x51b78 ; Objc message: -[x0 description]
0000000000028e88	b	0x28e94
0000000000028e8c	mov	x0, #0x0
0000000000028e90	str	xzr, [sp, #0x18]
0000000000028e94	bl	"_kfun:com.example.nbodykmm.NBodyKmm#energy(){}kotlin.Double"
0000000000028e98	mov	x0, x19
0000000000028e9c	blr	x22
0000000000028ea0	ldr	x8, [x0]
0000000000028ea4	ldr	x9, [sp, #0x8]
0000000000028ea8	str	x9, [x8, #0x110]
0000000000028eac	add	x8, x8, #0x138
0000000000028eb0	mov	w9, #0x1
0000000000028eb4	ldaxr	wzr, [x8]
0000000000028eb8	stlxr	w10, w9, [x8]
0000000000028ebc	cbnz	w10, 0x28eb4
0000000000028ec0	ldp	x29, x30, [sp, #0x60]
0000000000028ec4	ldp	x20, x19, [sp, #0x50]
0000000000028ec8	ldp	x22, x21, [sp, #0x40]
0000000000028ecc	ldp	x24, x23, [sp, #0x30]
0000000000028ed0	add	sp, sp, #0x70
0000000000028ed4	ret
0000000000028ed8	mov	x1, x0
0000000000028edc	mov	x0, x19
0000000000028ee0	blr	x22
0000000000028ee4	ldr	x8, [x0]
0000000000028ee8	mov	x9, sp
0000000000028eec	str	x9, [x8, #0x110]
0000000000028ef0	mov	x0, x1
0000000000028ef4	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000028ef8	ldr	x8, [x0, #0x8]
0000000000028efc	ldr	x20, [x8]
0000000000028f00	str	x20, [sp, #0x20]
0000000000028f04	bl	0x51944 ; symbol stub for: ___cxa_end_catch
0000000000028f08	mov	x0, x20
0000000000028f0c	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
0000000000028f10	brk	#0x1
0000000000028f14	mov	x1, x0
0000000000028f18	mov	x0, x19
0000000000028f1c	blr	x22
0000000000028f20	ldr	x8, [x0]
0000000000028f24	mov	x9, sp
0000000000028f28	str	x9, [x8, #0x110]
0000000000028f2c	mov	x0, x1
0000000000028f30	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000028f34	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000028f38	b	0x28f38
_objc2kotlin_kfun:com.example.nbodykmm.NBodyKmm#runBenchmark(kotlin.Int){}:
0000000000028f3c	sub	sp, sp, #0xe0
0000000000028f40	stp	d9, d8, [sp, #0x80]
0000000000028f44	stp	x26, x25, [sp, #0x90]
0000000000028f48	stp	x24, x23, [sp, #0xa0]
0000000000028f4c	stp	x22, x21, [sp, #0xb0]
0000000000028f50	stp	x20, x19, [sp, #0xc0]
0000000000028f54	stp	x29, x30, [sp, #0xd0]
0000000000028f58	add	x29, sp, #0xd0
0000000000028f5c	mov	x20, x2
0000000000028f60	mov	x21, x0
0000000000028f64	str	xzr, [sp, #0x20]
0000000000028f68	movi.16b	v0, #0x0
0000000000028f6c	stp	q0, q0, [sp]
0000000000028f70	mov	x8, sp
0000000000028f74	add	x22, x8, #0x18
0000000000028f78	bl	_Kotlin_initRuntimeIfNeeded
0000000000028f7c	adrp	x19, 68 ; 0x6c000
0000000000028f80	add	x19, x19, #0xbb0
0000000000028f84	ldr	x23, [x19]
0000000000028f88	mov	x0, x19
0000000000028f8c	blr	x23
0000000000028f90	ldr	x8, [x0]
0000000000028f94	add	x0, x8, #0x138
0000000000028f98	ldaxr	w8, [x0]
0000000000028f9c	stlxr	w9, wzr, [x0]
0000000000028fa0	cbnz	w9, 0x28f98
0000000000028fa4	adr	x24, #0x5da9f
0000000000028fa8	nop
0000000000028fac	cmp	w8, #0x1
0000000000028fb0	b.ne	0x28fc0
0000000000028fb4	ldarb	w8, [x24]
0000000000028fb8	tbz	w8, #0x0, 0x28fc0
0000000000028fbc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028fc0	mov	x0, x19
0000000000028fc4	blr	x23
0000000000028fc8	ldr	x8, [x0]
0000000000028fcc	ldr	x9, [x8, #0x110]
0000000000028fd0	mov	x10, sp
0000000000028fd4	str	x10, [x8, #0x110]
0000000000028fd8	mov	x8, #0x500000000
0000000000028fdc	stp	x9, x8, [sp, #0x8]
0000000000028fe0	ldarb	w8, [x24]
0000000000028fe4	tbz	w8, #0x0, 0x28fec
0000000000028fe8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028fec	cbz	x21, 0x2900c
0000000000028ff0	nop
0000000000028ff4	ldr	x1, #0x5dca4
0000000000028ff8	mov	x0, x21
0000000000028ffc	mov	x2, x22
0000000000029000	bl	0x51b78 ; Objc message: -[x0 description]
0000000000029004	mov	x21, x0
0000000000029008	b	0x29010
000000000002900c	str	xzr, [sp, #0x18]
0000000000029010	movi.16b	v0, #0x0
0000000000029014	stp	q0, q0, [sp, #0x30]
0000000000029018	str	xzr, [sp, #0x50]
000000000002901c	mov	x0, x19
0000000000029020	blr	x23
0000000000029024	ldr	x8, [x0]
0000000000029028	ldr	x9, [x8, #0x110]
000000000002902c	add	x10, sp, #0x30
0000000000029030	str	x10, [x8, #0x110]
0000000000029034	mov	x8, #0x500000000
0000000000029038	stp	x9, x8, [sp, #0x38]
000000000002903c	ldarb	w8, [x24]
0000000000029040	tbz	w8, #0x0, 0x29048
0000000000029044	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029048	mov	x0, x21
000000000002904c	bl	"_kfun:com.example.nbodykmm.NBodyKmm#energy(){}kotlin.Double"
0000000000029050	mov	x8, #0xcd6500000000
0000000000029054	movk	x8, #0x41cd, lsl #48
0000000000029058	fmov	d1, x8
000000000002905c	fmul	d0, d0, d1
0000000000029060	bl	"_kfun:kotlin.math#roundToInt__at__kotlin.Double(){}kotlin.Int"
0000000000029064	scvtf	d0, w0
0000000000029068	mov	x8, #0xcd6500000000
000000000002906c	movk	x8, #0x41cd, lsl #48
0000000000029070	fmov	d1, x8
0000000000029074	fdiv	d8, d0, d1
0000000000029078	movi.16b	v0, #0x0
000000000002907c	stp	q0, q0, [sp, #0x60]
0000000000029080	mov	x0, x19
0000000000029084	blr	x23
0000000000029088	ldr	x8, [x0]
000000000002908c	ldr	x9, [x8, #0x110]
0000000000029090	add	x10, sp, #0x60
0000000000029094	str	x10, [x8, #0x110]
0000000000029098	mov	x8, #0x400000000
000000000002909c	stp	x9, x8, [sp, #0x68]
00000000000290a0	ldarb	w8, [x24]
00000000000290a4	tbz	w8, #0x0, 0x290ac
00000000000290a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000290ac	mov	x0, x19
00000000000290b0	blr	x23
00000000000290b4	mov	x22, x0
00000000000290b8	ldr	x8, [x0]
00000000000290bc	ldr	x8, [x8, #0x118]
00000000000290c0	add	x0, x8, #0x70
00000000000290c4	mov	w1, #0x18
00000000000290c8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000290cc	adr	x25, #0x30254
00000000000290d0	nop
00000000000290d4	str	x25, [x0, #0x10]!
00000000000290d8	stur	xzr, [x0, #-0x8]
00000000000290dc	str	x0, [sp, #0x78]
00000000000290e0	str	d8, [x0, #0x8]
00000000000290e4	str	x0, [sp, #0x48]
00000000000290e8	ldr	x8, [x22]
00000000000290ec	ldr	x9, [sp, #0x68]
00000000000290f0	str	x9, [x8, #0x110]
00000000000290f4	bl	"_kfun:kotlin.io#println(kotlin.Any?){}"
00000000000290f8	cmp	w20, #0x1
00000000000290fc	b.lt	0x29128
0000000000029100	nop
0000000000029104	ldr	d8, 0x524a0
0000000000029108	ldarb	w8, [x24]
000000000002910c	tbz	w8, #0x0, 0x29114
0000000000029110	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029114	mov	x0, x21
0000000000029118	fmov	d0, d8
000000000002911c	bl	"_kfun:com.example.nbodykmm.NBodyKmm#advance(kotlin.Double){}"
0000000000029120	subs	w20, w20, #0x1
0000000000029124	b.ne	0x29108
0000000000029128	mov	x0, x21
000000000002912c	bl	"_kfun:com.example.nbodykmm.NBodyKmm#energy(){}kotlin.Double"
0000000000029130	mov	x8, #0xcd6500000000
0000000000029134	movk	x8, #0x41cd, lsl #48
0000000000029138	fmov	d1, x8
000000000002913c	fmul	d0, d0, d1
0000000000029140	bl	"_kfun:kotlin.math#roundToInt__at__kotlin.Double(){}kotlin.Int"
0000000000029144	scvtf	d0, w0
0000000000029148	mov	x8, #0xcd6500000000
000000000002914c	movk	x8, #0x41cd, lsl #48
0000000000029150	fmov	d1, x8
0000000000029154	fdiv	d8, d0, d1
0000000000029158	movi.16b	v0, #0x0
000000000002915c	stp	q0, q0, [sp, #0x60]
0000000000029160	mov	x0, x19
0000000000029164	blr	x23
0000000000029168	ldr	x8, [x0]
000000000002916c	ldr	x9, [x8, #0x110]
0000000000029170	add	x10, sp, #0x60
0000000000029174	str	x10, [x8, #0x110]
0000000000029178	mov	x8, #0x400000000
000000000002917c	stp	x9, x8, [sp, #0x68]
0000000000029180	ldarb	w8, [x24]
0000000000029184	tbz	w8, #0x0, 0x2918c
0000000000029188	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002918c	mov	x0, x19
0000000000029190	blr	x23
0000000000029194	mov	x20, x0
0000000000029198	ldr	x8, [x0]
000000000002919c	ldr	x8, [x8, #0x118]
00000000000291a0	add	x0, x8, #0x70
00000000000291a4	mov	w1, #0x18
00000000000291a8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000291ac	str	x25, [x0, #0x10]!
00000000000291b0	stur	xzr, [x0, #-0x8]
00000000000291b4	str	x0, [sp, #0x78]
00000000000291b8	str	d8, [x0, #0x8]
00000000000291bc	str	x0, [sp, #0x50]
00000000000291c0	ldr	x8, [x20]
00000000000291c4	ldr	x9, [sp, #0x68]
00000000000291c8	str	x9, [x8, #0x110]
00000000000291cc	bl	"_kfun:kotlin.io#println(kotlin.Any?){}"
00000000000291d0	mov	x0, x19
00000000000291d4	blr	x23
00000000000291d8	ldr	x8, [x0]
00000000000291dc	ldr	x9, [sp, #0x8]
00000000000291e0	str	x9, [x8, #0x110]
00000000000291e4	add	x8, x8, #0x138
00000000000291e8	mov	w9, #0x1
00000000000291ec	ldaxr	wzr, [x8]
00000000000291f0	stlxr	w10, w9, [x8]
00000000000291f4	cbnz	w10, 0x291ec
00000000000291f8	ldp	x29, x30, [sp, #0xd0]
00000000000291fc	ldp	x20, x19, [sp, #0xc0]
0000000000029200	ldp	x22, x21, [sp, #0xb0]
0000000000029204	ldp	x24, x23, [sp, #0xa0]
0000000000029208	ldp	x26, x25, [sp, #0x90]
000000000002920c	ldp	d9, d8, [sp, #0x80]
0000000000029210	add	sp, sp, #0xe0
0000000000029214	ret
0000000000029218	b	0x2921c
000000000002921c	mov	x1, x0
0000000000029220	mov	x0, x19
0000000000029224	blr	x23
0000000000029228	ldr	x8, [x0]
000000000002922c	mov	x9, sp
0000000000029230	str	x9, [x8, #0x110]
0000000000029234	mov	x0, x1
0000000000029238	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000002923c	ldr	x8, [x0, #0x8]
0000000000029240	ldr	x20, [x8]
0000000000029244	str	x20, [sp, #0x20]
0000000000029248	bl	0x51944 ; symbol stub for: ___cxa_end_catch
000000000002924c	mov	x0, x20
0000000000029250	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
0000000000029254	brk	#0x1
0000000000029258	mov	x1, x0
000000000002925c	mov	x0, x19
0000000000029260	blr	x23
0000000000029264	ldr	x8, [x0]
0000000000029268	mov	x9, sp
000000000002926c	str	x9, [x8, #0x110]
0000000000029270	mov	x0, x1
0000000000029274	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000029278	bl	0x51908 ; symbol stub for: __ZSt9terminatev
000000000002927c	b	0x2927c
_objc2kotlin_Kotlin_Any_equals:
0000000000029280	sub	sp, sp, #0x80
0000000000029284	stp	x26, x25, [sp, #0x30]
0000000000029288	stp	x24, x23, [sp, #0x40]
000000000002928c	stp	x22, x21, [sp, #0x50]
0000000000029290	stp	x20, x19, [sp, #0x60]
0000000000029294	stp	x29, x30, [sp, #0x70]
0000000000029298	add	x29, sp, #0x70
000000000002929c	mov	x20, x2
00000000000292a0	mov	x22, x0
00000000000292a4	movi.16b	v0, #0x0
00000000000292a8	stp	q0, q0, [sp, #0x10]
00000000000292ac	str	q0, [sp]
00000000000292b0	mov	x8, sp
00000000000292b4	add	x21, x8, #0x20
00000000000292b8	add	x23, x8, #0x18
00000000000292bc	bl	_Kotlin_initRuntimeIfNeeded
00000000000292c0	adrp	x19, 67 ; 0x6c000
00000000000292c4	add	x19, x19, #0xbb0
00000000000292c8	ldr	x24, [x19]
00000000000292cc	mov	x0, x19
00000000000292d0	blr	x24
00000000000292d4	ldr	x8, [x0]
00000000000292d8	add	x0, x8, #0x138
00000000000292dc	ldaxr	w8, [x0]
00000000000292e0	stlxr	w9, wzr, [x0]
00000000000292e4	cbnz	w9, 0x292dc
00000000000292e8	adr	x25, #0x5d75b
00000000000292ec	nop
00000000000292f0	cmp	w8, #0x1
00000000000292f4	b.ne	0x29304
00000000000292f8	ldarb	w8, [x25]
00000000000292fc	tbz	w8, #0x0, 0x29304
0000000000029300	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029304	mov	x0, x19
0000000000029308	blr	x24
000000000002930c	ldr	x8, [x0]
0000000000029310	ldr	x9, [x8, #0x110]
0000000000029314	mov	x10, sp
0000000000029318	str	x10, [x8, #0x110]
000000000002931c	mov	x8, #0x600000000
0000000000029320	stp	x9, x8, [sp, #0x8]
0000000000029324	ldarb	w8, [x25]
0000000000029328	tbz	w8, #0x0, 0x29330
000000000002932c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029330	adrp	x25, 93 ; 0x86000
0000000000029334	cbz	x22, 0x29364
0000000000029338	ldr	x1, [x25, #0xc98]
000000000002933c	mov	x0, x22
0000000000029340	mov	x2, x23
0000000000029344	bl	0x51b78 ; Objc message: -[x0 description]
0000000000029348	mov	x22, x0
000000000002934c	cbz	x20, 0x2936c
0000000000029350	ldr	x1, [x25, #0xc98]
0000000000029354	mov	x0, x20
0000000000029358	mov	x2, x21
000000000002935c	bl	0x51b78 ; Objc message: -[x0 description]
0000000000029360	b	0x29374
0000000000029364	str	xzr, [sp, #0x18]
0000000000029368	cbnz	x20, 0x29350
000000000002936c	mov	x0, #0x0
0000000000029370	str	xzr, [sp, #0x20]
0000000000029374	cmp	x22, x0
0000000000029378	cset	w8, eq
000000000002937c	mov	x0, x19
0000000000029380	blr	x24
0000000000029384	ldr	x9, [x0]
0000000000029388	ldr	x10, [sp, #0x8]
000000000002938c	str	x10, [x9, #0x110]
0000000000029390	add	x9, x9, #0x138
0000000000029394	mov	w10, #0x1
0000000000029398	ldaxr	wzr, [x9]
000000000002939c	stlxr	w11, w10, [x9]
00000000000293a0	cbnz	w11, 0x29398
00000000000293a4	mov	x0, x8
00000000000293a8	ldp	x29, x30, [sp, #0x70]
00000000000293ac	ldp	x20, x19, [sp, #0x60]
00000000000293b0	ldp	x22, x21, [sp, #0x50]
00000000000293b4	ldp	x24, x23, [sp, #0x40]
00000000000293b8	ldp	x26, x25, [sp, #0x30]
00000000000293bc	add	sp, sp, #0x80
00000000000293c0	ret
00000000000293c4	mov	x1, x0
00000000000293c8	mov	x0, x19
00000000000293cc	blr	x24
00000000000293d0	ldr	x8, [x0]
00000000000293d4	mov	x9, sp
00000000000293d8	str	x9, [x8, #0x110]
00000000000293dc	mov	x0, x1
00000000000293e0	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
00000000000293e4	bl	0x51908 ; symbol stub for: __ZSt9terminatev
00000000000293e8	b	0x293e8
_objc2kotlin_kfun:kotlin.Any#hashCode(){}kotlin.Int:
00000000000293ec	sub	sp, sp, #0x70
00000000000293f0	stp	x24, x23, [sp, #0x30]
00000000000293f4	stp	x22, x21, [sp, #0x40]
00000000000293f8	stp	x20, x19, [sp, #0x50]
00000000000293fc	stp	x29, x30, [sp, #0x60]
0000000000029400	add	x29, sp, #0x60
0000000000029404	mov	x20, x0
0000000000029408	str	xzr, [sp, #0x20]
000000000002940c	movi.16b	v0, #0x0
0000000000029410	stp	q0, q0, [sp]
0000000000029414	mov	x8, sp
0000000000029418	add	x21, x8, #0x18
000000000002941c	bl	_Kotlin_initRuntimeIfNeeded
0000000000029420	adrp	x19, 67 ; 0x6c000
0000000000029424	add	x19, x19, #0xbb0
0000000000029428	ldr	x22, [x19]
000000000002942c	mov	x0, x19
0000000000029430	blr	x22
0000000000029434	ldr	x8, [x0]
0000000000029438	add	x0, x8, #0x138
000000000002943c	ldaxr	w8, [x0]
0000000000029440	stlxr	w9, wzr, [x0]
0000000000029444	cbnz	w9, 0x2943c
0000000000029448	adr	x23, #0x5d5fb
000000000002944c	nop
0000000000029450	cmp	w8, #0x1
0000000000029454	b.ne	0x29464
0000000000029458	ldarb	w8, [x23]
000000000002945c	tbz	w8, #0x0, 0x29464
0000000000029460	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029464	mov	x0, x19
0000000000029468	blr	x22
000000000002946c	ldr	x8, [x0]
0000000000029470	ldr	x9, [x8, #0x110]
0000000000029474	mov	x10, sp
0000000000029478	str	x10, [x8, #0x110]
000000000002947c	mov	x8, #0x500000000
0000000000029480	stp	x9, x8, [sp, #0x8]
0000000000029484	ldarb	w8, [x23]
0000000000029488	tbz	w8, #0x0, 0x29490
000000000002948c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029490	cbz	x20, 0x294fc
0000000000029494	nop
0000000000029498	ldr	x1, #0x5d800
000000000002949c	mov	x0, x20
00000000000294a0	mov	x2, x21
00000000000294a4	bl	0x51b78 ; Objc message: -[x0 description]
00000000000294a8	and	x20, x0, #0xffffffff
00000000000294ac	ldarb	w8, [x23]
00000000000294b0	tbz	w8, #0x0, 0x294b8
00000000000294b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000294b8	mov	x0, x19
00000000000294bc	blr	x22
00000000000294c0	ldr	x8, [x0]
00000000000294c4	ldr	x9, [sp, #0x8]
00000000000294c8	str	x9, [x8, #0x110]
00000000000294cc	add	x8, x8, #0x138
00000000000294d0	mov	w9, #0x1
00000000000294d4	ldaxr	wzr, [x8]
00000000000294d8	stlxr	w10, w9, [x8]
00000000000294dc	cbnz	w10, 0x294d4
00000000000294e0	mov	x0, x20
00000000000294e4	ldp	x29, x30, [sp, #0x60]
00000000000294e8	ldp	x20, x19, [sp, #0x50]
00000000000294ec	ldp	x22, x21, [sp, #0x40]
00000000000294f0	ldp	x24, x23, [sp, #0x30]
00000000000294f4	add	sp, sp, #0x70
00000000000294f8	ret
00000000000294fc	str	xzr, [sp, #0x18]
0000000000029500	ldarb	w8, [x23]
0000000000029504	tbnz	w8, #0x0, 0x294b4
0000000000029508	b	0x294b8
000000000002950c	mov	x1, x0
0000000000029510	mov	x0, x19
0000000000029514	blr	x22
0000000000029518	ldr	x8, [x0]
000000000002951c	mov	x9, sp
0000000000029520	str	x9, [x8, #0x110]
0000000000029524	mov	x0, x1
0000000000029528	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000002952c	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000029530	b	0x29530
_objc2kotlin_kfun:kotlin.Any#toString(){}kotlin.String:
0000000000029534	sub	sp, sp, #0x70
0000000000029538	stp	x24, x23, [sp, #0x30]
000000000002953c	stp	x22, x21, [sp, #0x40]
0000000000029540	stp	x20, x19, [sp, #0x50]
0000000000029544	stp	x29, x30, [sp, #0x60]
0000000000029548	add	x29, sp, #0x60
000000000002954c	mov	x21, x0
0000000000029550	movi.16b	v0, #0x0
0000000000029554	stp	q0, q0, [sp, #0x10]
0000000000029558	str	q0, [sp]
000000000002955c	mov	x8, sp
0000000000029560	add	x22, x8, #0x18
0000000000029564	add	x20, x8, #0x28
0000000000029568	bl	_Kotlin_initRuntimeIfNeeded
000000000002956c	adrp	x19, 67 ; 0x6c000
0000000000029570	add	x19, x19, #0xbb0
0000000000029574	ldr	x23, [x19]
0000000000029578	mov	x0, x19
000000000002957c	blr	x23
0000000000029580	ldr	x8, [x0]
0000000000029584	add	x0, x8, #0x138
0000000000029588	ldaxr	w8, [x0]
000000000002958c	stlxr	w9, wzr, [x0]
0000000000029590	cbnz	w9, 0x29588
0000000000029594	adr	x24, #0x5d4af
0000000000029598	nop
000000000002959c	cmp	w8, #0x1
00000000000295a0	b.ne	0x295b0
00000000000295a4	ldarb	w8, [x24]
00000000000295a8	tbz	w8, #0x0, 0x295b0
00000000000295ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000295b0	mov	x0, x19
00000000000295b4	blr	x23
00000000000295b8	ldr	x8, [x0]
00000000000295bc	ldr	x9, [x8, #0x110]
00000000000295c0	mov	x10, sp
00000000000295c4	str	x10, [x8, #0x110]
00000000000295c8	mov	x8, #0x600000000
00000000000295cc	stp	x9, x8, [sp, #0x8]
00000000000295d0	ldarb	w8, [x24]
00000000000295d4	tbz	w8, #0x0, 0x295dc
00000000000295d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000295dc	cbz	x21, 0x295f8
00000000000295e0	nop
00000000000295e4	ldr	x1, #0x5d6b4
00000000000295e8	mov	x0, x21
00000000000295ec	mov	x2, x22
00000000000295f0	bl	0x51b78 ; Objc message: -[x0 description]
00000000000295f4	b	0x29600
00000000000295f8	mov	x0, #0x0
00000000000295fc	str	xzr, [sp, #0x18]
0000000000029600	mov	x1, x20
0000000000029604	bl	"_kfun:kotlin.Any#toString(){}kotlin.String"
0000000000029608	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002960c	mov	x1, x0
0000000000029610	mov	x0, x19
0000000000029614	blr	x23
0000000000029618	ldr	x8, [x0]
000000000002961c	ldr	x9, [sp, #0x8]
0000000000029620	str	x9, [x8, #0x110]
0000000000029624	add	x8, x8, #0x138
0000000000029628	mov	w9, #0x1
000000000002962c	ldaxr	wzr, [x8]
0000000000029630	stlxr	w10, w9, [x8]
0000000000029634	cbnz	w10, 0x2962c
0000000000029638	mov	x0, x1
000000000002963c	ldp	x29, x30, [sp, #0x60]
0000000000029640	ldp	x20, x19, [sp, #0x50]
0000000000029644	ldp	x22, x21, [sp, #0x40]
0000000000029648	ldp	x24, x23, [sp, #0x30]
000000000002964c	add	sp, sp, #0x70
0000000000029650	b	0x51b24 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000029654	mov	x1, x0
0000000000029658	mov	x0, x19
000000000002965c	blr	x23
0000000000029660	ldr	x8, [x0]
0000000000029664	mov	x9, sp
0000000000029668	str	x9, [x8, #0x110]
000000000002966c	mov	x0, x1
0000000000029670	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000029674	ldr	x8, [x0, #0x8]
0000000000029678	ldr	x20, [x8]
000000000002967c	str	x20, [sp, #0x20]
0000000000029680	bl	0x51944 ; symbol stub for: ___cxa_end_catch
0000000000029684	mov	x0, x20
0000000000029688	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002968c	brk	#0x1
0000000000029690	mov	x1, x0
0000000000029694	mov	x0, x19
0000000000029698	blr	x23
000000000002969c	ldr	x8, [x0]
00000000000296a0	mov	x9, sp
00000000000296a4	str	x9, [x8, #0x110]
00000000000296a8	mov	x0, x1
00000000000296ac	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
00000000000296b0	bl	0x51908 ; symbol stub for: __ZSt9terminatev
00000000000296b4	b	0x296b4
_objc2kotlin_virtual_Kotlin_Any_equals:
00000000000296b8	sub	sp, sp, #0x80
00000000000296bc	stp	x26, x25, [sp, #0x30]
00000000000296c0	stp	x24, x23, [sp, #0x40]
00000000000296c4	stp	x22, x21, [sp, #0x50]
00000000000296c8	stp	x20, x19, [sp, #0x60]
00000000000296cc	stp	x29, x30, [sp, #0x70]
00000000000296d0	add	x29, sp, #0x70
00000000000296d4	mov	x20, x2
00000000000296d8	mov	x22, x0
00000000000296dc	movi.16b	v0, #0x0
00000000000296e0	stp	q0, q0, [sp, #0x10]
00000000000296e4	str	q0, [sp]
00000000000296e8	mov	x8, sp
00000000000296ec	add	x21, x8, #0x20
00000000000296f0	add	x23, x8, #0x18
00000000000296f4	bl	_Kotlin_initRuntimeIfNeeded
00000000000296f8	adrp	x19, 67 ; 0x6c000
00000000000296fc	add	x19, x19, #0xbb0
0000000000029700	ldr	x24, [x19]
0000000000029704	mov	x0, x19
0000000000029708	blr	x24
000000000002970c	ldr	x8, [x0]
0000000000029710	add	x0, x8, #0x138
0000000000029714	ldaxr	w8, [x0]
0000000000029718	stlxr	w9, wzr, [x0]
000000000002971c	cbnz	w9, 0x29714
0000000000029720	adr	x25, #0x5d323
0000000000029724	nop
0000000000029728	cmp	w8, #0x1
000000000002972c	b.ne	0x2973c
0000000000029730	ldarb	w8, [x25]
0000000000029734	tbz	w8, #0x0, 0x2973c
0000000000029738	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002973c	mov	x0, x19
0000000000029740	blr	x24
0000000000029744	ldr	x8, [x0]
0000000000029748	ldr	x9, [x8, #0x110]
000000000002974c	mov	x10, sp
0000000000029750	str	x10, [x8, #0x110]
0000000000029754	mov	x8, #0x600000000
0000000000029758	stp	x9, x8, [sp, #0x8]
000000000002975c	ldarb	w8, [x25]
0000000000029760	tbz	w8, #0x0, 0x29768
0000000000029764	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029768	adrp	x25, 93 ; 0x86000
000000000002976c	cbz	x22, 0x297a0
0000000000029770	ldr	x1, [x25, #0xc98]
0000000000029774	mov	x0, x22
0000000000029778	mov	x2, x23
000000000002977c	bl	0x51b78 ; Objc message: -[x0 description]
0000000000029780	mov	x22, x0
0000000000029784	cbz	x20, 0x297a8
0000000000029788	ldr	x1, [x25, #0xc98]
000000000002978c	mov	x0, x20
0000000000029790	mov	x2, x21
0000000000029794	bl	0x51b78 ; Objc message: -[x0 description]
0000000000029798	mov	x1, x0
000000000002979c	b	0x297b0
00000000000297a0	str	xzr, [sp, #0x18]
00000000000297a4	cbnz	x20, 0x29788
00000000000297a8	mov	x1, #0x0
00000000000297ac	str	xzr, [sp, #0x20]
00000000000297b0	ldr	x8, [x22]
00000000000297b4	and	x8, x8, #0xfffffffffffffffc
00000000000297b8	ldr	x8, [x8]
00000000000297bc	ldr	x8, [x8, #0x70]
00000000000297c0	mov	x0, x22
00000000000297c4	blr	x8
00000000000297c8	mov	x1, x0
00000000000297cc	mov	x0, x19
00000000000297d0	blr	x24
00000000000297d4	ldr	x8, [x0]
00000000000297d8	ldr	x9, [sp, #0x8]
00000000000297dc	str	x9, [x8, #0x110]
00000000000297e0	add	x8, x8, #0x138
00000000000297e4	mov	w9, #0x1
00000000000297e8	ldaxr	wzr, [x8]
00000000000297ec	stlxr	w10, w9, [x8]
00000000000297f0	cbnz	w10, 0x297e8
00000000000297f4	mov	x0, x1
00000000000297f8	ldp	x29, x30, [sp, #0x70]
00000000000297fc	ldp	x20, x19, [sp, #0x60]
0000000000029800	ldp	x22, x21, [sp, #0x50]
0000000000029804	ldp	x24, x23, [sp, #0x40]
0000000000029808	ldp	x26, x25, [sp, #0x30]
000000000002980c	add	sp, sp, #0x80
0000000000029810	ret
0000000000029814	mov	x1, x0
0000000000029818	mov	x0, x19
000000000002981c	blr	x24
0000000000029820	ldr	x8, [x0]
0000000000029824	mov	x9, sp
0000000000029828	str	x9, [x8, #0x110]
000000000002982c	mov	x0, x1
0000000000029830	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000029834	ldr	x8, [x0, #0x8]
0000000000029838	ldr	x20, [x8]
000000000002983c	str	x20, [sp, #0x28]
0000000000029840	bl	0x51944 ; symbol stub for: ___cxa_end_catch
0000000000029844	mov	x0, x20
0000000000029848	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002984c	brk	#0x1
0000000000029850	mov	x1, x0
0000000000029854	mov	x0, x19
0000000000029858	blr	x24
000000000002985c	ldr	x8, [x0]
0000000000029860	mov	x9, sp
0000000000029864	str	x9, [x8, #0x110]
0000000000029868	mov	x0, x1
000000000002986c	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000029870	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000029874	b	0x29874
_objc2kotlin_virtual_kfun:kotlin.Any#hashCode(){}kotlin.Int:
0000000000029878	sub	sp, sp, #0x70
000000000002987c	stp	x24, x23, [sp, #0x30]
0000000000029880	stp	x22, x21, [sp, #0x40]
0000000000029884	stp	x20, x19, [sp, #0x50]
0000000000029888	stp	x29, x30, [sp, #0x60]
000000000002988c	add	x29, sp, #0x60
0000000000029890	mov	x20, x0
0000000000029894	str	xzr, [sp, #0x20]
0000000000029898	movi.16b	v0, #0x0
000000000002989c	stp	q0, q0, [sp]
00000000000298a0	mov	x8, sp
00000000000298a4	add	x21, x8, #0x18
00000000000298a8	bl	_Kotlin_initRuntimeIfNeeded
00000000000298ac	adrp	x19, 67 ; 0x6c000
00000000000298b0	add	x19, x19, #0xbb0
00000000000298b4	ldr	x22, [x19]
00000000000298b8	mov	x0, x19
00000000000298bc	blr	x22
00000000000298c0	ldr	x8, [x0]
00000000000298c4	add	x0, x8, #0x138
00000000000298c8	ldaxr	w8, [x0]
00000000000298cc	stlxr	w9, wzr, [x0]
00000000000298d0	cbnz	w9, 0x298c8
00000000000298d4	adr	x23, #0x5d16f
00000000000298d8	nop
00000000000298dc	cmp	w8, #0x1
00000000000298e0	b.ne	0x298f0
00000000000298e4	ldarb	w8, [x23]
00000000000298e8	tbz	w8, #0x0, 0x298f0
00000000000298ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000298f0	mov	x0, x19
00000000000298f4	blr	x22
00000000000298f8	ldr	x8, [x0]
00000000000298fc	ldr	x9, [x8, #0x110]
0000000000029900	mov	x10, sp
0000000000029904	str	x10, [x8, #0x110]
0000000000029908	mov	x8, #0x500000000
000000000002990c	stp	x9, x8, [sp, #0x8]
0000000000029910	ldarb	w8, [x23]
0000000000029914	tbz	w8, #0x0, 0x2991c
0000000000029918	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002991c	nop
0000000000029920	ldr	x1, #0x5d378
0000000000029924	mov	x0, x20
0000000000029928	mov	x2, x21
000000000002992c	bl	0x51b78 ; Objc message: -[x0 description]
0000000000029930	ldr	x8, [x0]
0000000000029934	and	x8, x8, #0xfffffffffffffffc
0000000000029938	ldr	x8, [x8]
000000000002993c	ldr	x8, [x8, #0x78]
0000000000029940	blr	x8
0000000000029944	mov	w8, w0
0000000000029948	mov	x0, x19
000000000002994c	blr	x22
0000000000029950	ldr	x9, [x0]
0000000000029954	ldr	x10, [sp, #0x8]
0000000000029958	str	x10, [x9, #0x110]
000000000002995c	add	x9, x9, #0x138
0000000000029960	mov	w10, #0x1
0000000000029964	ldaxr	wzr, [x9]
0000000000029968	stlxr	w11, w10, [x9]
000000000002996c	cbnz	w11, 0x29964
0000000000029970	mov	x0, x8
0000000000029974	ldp	x29, x30, [sp, #0x60]
0000000000029978	ldp	x20, x19, [sp, #0x50]
000000000002997c	ldp	x22, x21, [sp, #0x40]
0000000000029980	ldp	x24, x23, [sp, #0x30]
0000000000029984	add	sp, sp, #0x70
0000000000029988	ret
000000000002998c	mov	x1, x0
0000000000029990	mov	x0, x19
0000000000029994	blr	x22
0000000000029998	ldr	x8, [x0]
000000000002999c	mov	x9, sp
00000000000299a0	str	x9, [x8, #0x110]
00000000000299a4	mov	x0, x1
00000000000299a8	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
00000000000299ac	ldr	x8, [x0, #0x8]
00000000000299b0	ldr	x20, [x8]
00000000000299b4	str	x20, [sp, #0x20]
00000000000299b8	bl	0x51944 ; symbol stub for: ___cxa_end_catch
00000000000299bc	mov	x0, x20
00000000000299c0	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
00000000000299c4	brk	#0x1
00000000000299c8	mov	x1, x0
00000000000299cc	mov	x0, x19
00000000000299d0	blr	x22
00000000000299d4	ldr	x8, [x0]
00000000000299d8	mov	x9, sp
00000000000299dc	str	x9, [x8, #0x110]
00000000000299e0	mov	x0, x1
00000000000299e4	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
00000000000299e8	bl	0x51908 ; symbol stub for: __ZSt9terminatev
00000000000299ec	b	0x299ec
_objc2kotlin_virtual_kfun:kotlin.Any#toString(){}kotlin.String:
00000000000299f0	sub	sp, sp, #0x70
00000000000299f4	stp	x24, x23, [sp, #0x30]
00000000000299f8	stp	x22, x21, [sp, #0x40]
00000000000299fc	stp	x20, x19, [sp, #0x50]
0000000000029a00	stp	x29, x30, [sp, #0x60]
0000000000029a04	add	x29, sp, #0x60
0000000000029a08	mov	x21, x0
0000000000029a0c	movi.16b	v0, #0x0
0000000000029a10	stp	q0, q0, [sp, #0x10]
0000000000029a14	str	q0, [sp]
0000000000029a18	mov	x8, sp
0000000000029a1c	add	x22, x8, #0x18
0000000000029a20	add	x20, x8, #0x28
0000000000029a24	bl	_Kotlin_initRuntimeIfNeeded
0000000000029a28	adrp	x19, 67 ; 0x6c000
0000000000029a2c	add	x19, x19, #0xbb0
0000000000029a30	ldr	x23, [x19]
0000000000029a34	mov	x0, x19
0000000000029a38	blr	x23
0000000000029a3c	ldr	x8, [x0]
0000000000029a40	add	x0, x8, #0x138
0000000000029a44	ldaxr	w8, [x0]
0000000000029a48	stlxr	w9, wzr, [x0]
0000000000029a4c	cbnz	w9, 0x29a44
0000000000029a50	adr	x24, #0x5cff3
0000000000029a54	nop
0000000000029a58	cmp	w8, #0x1
0000000000029a5c	b.ne	0x29a6c
0000000000029a60	ldarb	w8, [x24]
0000000000029a64	tbz	w8, #0x0, 0x29a6c
0000000000029a68	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029a6c	mov	x0, x19
0000000000029a70	blr	x23
0000000000029a74	ldr	x8, [x0]
0000000000029a78	ldr	x9, [x8, #0x110]
0000000000029a7c	mov	x10, sp
0000000000029a80	str	x10, [x8, #0x110]
0000000000029a84	mov	x8, #0x600000000
0000000000029a88	stp	x9, x8, [sp, #0x8]
0000000000029a8c	ldarb	w8, [x24]
0000000000029a90	tbz	w8, #0x0, 0x29a98
0000000000029a94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029a98	nop
0000000000029a9c	ldr	x1, #0x5d1fc
0000000000029aa0	mov	x0, x21
0000000000029aa4	mov	x2, x22
0000000000029aa8	bl	0x51b78 ; Objc message: -[x0 description]
0000000000029aac	ldr	x8, [x0]
0000000000029ab0	and	x8, x8, #0xfffffffffffffffc
0000000000029ab4	ldr	x8, [x8]
0000000000029ab8	ldr	x8, [x8, #0x80]
0000000000029abc	mov	x1, x20
0000000000029ac0	blr	x8
0000000000029ac4	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000029ac8	mov	x1, x0
0000000000029acc	mov	x0, x19
0000000000029ad0	blr	x23
0000000000029ad4	ldr	x8, [x0]
0000000000029ad8	ldr	x9, [sp, #0x8]
0000000000029adc	str	x9, [x8, #0x110]
0000000000029ae0	add	x8, x8, #0x138
0000000000029ae4	mov	w9, #0x1
0000000000029ae8	ldaxr	wzr, [x8]
0000000000029aec	stlxr	w10, w9, [x8]
0000000000029af0	cbnz	w10, 0x29ae8
0000000000029af4	mov	x0, x1
0000000000029af8	ldp	x29, x30, [sp, #0x60]
0000000000029afc	ldp	x20, x19, [sp, #0x50]
0000000000029b00	ldp	x22, x21, [sp, #0x40]
0000000000029b04	ldp	x24, x23, [sp, #0x30]
0000000000029b08	add	sp, sp, #0x70
0000000000029b0c	b	0x51b24 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000029b10	mov	x1, x0
0000000000029b14	mov	x0, x19
0000000000029b18	blr	x23
0000000000029b1c	ldr	x8, [x0]
0000000000029b20	mov	x9, sp
0000000000029b24	str	x9, [x8, #0x110]
0000000000029b28	mov	x0, x1
0000000000029b2c	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000029b30	ldr	x8, [x0, #0x8]
0000000000029b34	ldr	x20, [x8]
0000000000029b38	str	x20, [sp, #0x20]
0000000000029b3c	bl	0x51944 ; symbol stub for: ___cxa_end_catch
0000000000029b40	mov	x0, x20
0000000000029b44	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
0000000000029b48	brk	#0x1
0000000000029b4c	mov	x1, x0
0000000000029b50	mov	x0, x19
0000000000029b54	blr	x23
0000000000029b58	ldr	x8, [x0]
0000000000029b5c	mov	x9, sp
0000000000029b60	str	x9, [x8, #0x110]
0000000000029b64	mov	x0, x1
0000000000029b68	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000029b6c	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000029b70	b	0x29b70
0000000000029b74	sub	sp, sp, #0x50
0000000000029b78	stp	x22, x21, [sp, #0x20]
0000000000029b7c	stp	x20, x19, [sp, #0x30]
0000000000029b80	stp	x29, x30, [sp, #0x40]
0000000000029b84	add	x29, sp, #0x40
0000000000029b88	mov	x20, x0
0000000000029b8c	str	xzr, [sp, #0x8]
0000000000029b90	adrp	x19, 67 ; 0x6c000
0000000000029b94	add	x19, x19, #0xbb0
0000000000029b98	ldr	x21, [x19]
0000000000029b9c	mov	x0, x19
0000000000029ba0	blr	x21
0000000000029ba4	ldr	x8, [x0]
0000000000029ba8	ldr	x9, [x8, #0x110]
0000000000029bac	add	x10, sp, #0x8
0000000000029bb0	str	x10, [x8, #0x110]
0000000000029bb4	mov	x8, #0x300000000
0000000000029bb8	stp	x9, x8, [sp, #0x10]
0000000000029bbc	adr	x8, #0x5ce87
0000000000029bc0	nop
0000000000029bc4	ldarb	w8, [x8]
0000000000029bc8	tbz	w8, #0x0, 0x29bd0
0000000000029bcc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029bd0	ldrb	w20, [x20, #0x8]
0000000000029bd4	nop
0000000000029bd8	ldr	x0, #0x40c60 ; Objc class ref: NBKBoolean
0000000000029bdc	bl	0x51b00 ; symbol stub for: _objc_alloc
0000000000029be0	nop
0000000000029be4	ldr	x1, #0x40a84 ; Objc selector ref: initWithBool:
0000000000029be8	mov	x2, x20
0000000000029bec	bl	0x51b78 ; Objc message: +[NBKBoolean initWithBool:]
0000000000029bf0	mov	x1, x0
0000000000029bf4	mov	x0, x19
0000000000029bf8	blr	x21
0000000000029bfc	ldr	x8, [x0]
0000000000029c00	ldr	x9, [sp, #0x10]
0000000000029c04	str	x9, [x8, #0x110]
0000000000029c08	mov	x0, x1
0000000000029c0c	ldp	x29, x30, [sp, #0x40]
0000000000029c10	ldp	x20, x19, [sp, #0x30]
0000000000029c14	ldp	x22, x21, [sp, #0x20]
0000000000029c18	add	sp, sp, #0x50
0000000000029c1c	ret
0000000000029c20	mov	x1, x0
0000000000029c24	mov	x0, x19
0000000000029c28	blr	x21
0000000000029c2c	ldr	x8, [x0]
0000000000029c30	add	x9, sp, #0x8
0000000000029c34	str	x9, [x8, #0x110]
0000000000029c38	mov	x0, x1
0000000000029c3c	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000029c40	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000029c44	b	0x29c44
0000000000029c48	sub	sp, sp, #0x50
0000000000029c4c	stp	x22, x21, [sp, #0x20]
0000000000029c50	stp	x20, x19, [sp, #0x30]
0000000000029c54	stp	x29, x30, [sp, #0x40]
0000000000029c58	add	x29, sp, #0x40
0000000000029c5c	mov	x20, x0
0000000000029c60	str	xzr, [sp, #0x8]
0000000000029c64	adrp	x19, 67 ; 0x6c000
0000000000029c68	add	x19, x19, #0xbb0
0000000000029c6c	ldr	x21, [x19]
0000000000029c70	mov	x0, x19
0000000000029c74	blr	x21
0000000000029c78	ldr	x8, [x0]
0000000000029c7c	ldr	x9, [x8, #0x110]
0000000000029c80	add	x10, sp, #0x8
0000000000029c84	str	x10, [x8, #0x110]
0000000000029c88	mov	x8, #0x300000000
0000000000029c8c	stp	x9, x8, [sp, #0x10]
0000000000029c90	adr	x8, #0x5cdb3
0000000000029c94	nop
0000000000029c98	ldarb	w8, [x8]
0000000000029c9c	tbz	w8, #0x0, 0x29ca4
0000000000029ca0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029ca4	ldrb	w20, [x20, #0x8]
0000000000029ca8	nop
0000000000029cac	ldr	x0, #0x40b94 ; Objc class ref: NBKByte
0000000000029cb0	bl	0x51b00 ; symbol stub for: _objc_alloc
0000000000029cb4	nop
0000000000029cb8	ldr	x1, #0x409d8 ; Objc selector ref: initWithChar:
0000000000029cbc	sxtb	w2, w20
0000000000029cc0	bl	0x51b78 ; Objc message: +[NBKByte initWithChar:]
0000000000029cc4	mov	x1, x0
0000000000029cc8	mov	x0, x19
0000000000029ccc	blr	x21
0000000000029cd0	ldr	x8, [x0]
0000000000029cd4	ldr	x9, [sp, #0x10]
0000000000029cd8	str	x9, [x8, #0x110]
0000000000029cdc	mov	x0, x1
0000000000029ce0	ldp	x29, x30, [sp, #0x40]
0000000000029ce4	ldp	x20, x19, [sp, #0x30]
0000000000029ce8	ldp	x22, x21, [sp, #0x20]
0000000000029cec	add	sp, sp, #0x50
0000000000029cf0	ret
0000000000029cf4	mov	x1, x0
0000000000029cf8	mov	x0, x19
0000000000029cfc	blr	x21
0000000000029d00	ldr	x8, [x0]
0000000000029d04	add	x9, sp, #0x8
0000000000029d08	str	x9, [x8, #0x110]
0000000000029d0c	mov	x0, x1
0000000000029d10	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000029d14	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000029d18	b	0x29d18
0000000000029d1c	sub	sp, sp, #0x50
0000000000029d20	stp	x22, x21, [sp, #0x20]
0000000000029d24	stp	x20, x19, [sp, #0x30]
0000000000029d28	stp	x29, x30, [sp, #0x40]
0000000000029d2c	add	x29, sp, #0x40
0000000000029d30	mov	x20, x0
0000000000029d34	str	xzr, [sp, #0x8]
0000000000029d38	adrp	x19, 67 ; 0x6c000
0000000000029d3c	add	x19, x19, #0xbb0
0000000000029d40	ldr	x21, [x19]
0000000000029d44	mov	x0, x19
0000000000029d48	blr	x21
0000000000029d4c	ldr	x8, [x0]
0000000000029d50	ldr	x9, [x8, #0x110]
0000000000029d54	add	x10, sp, #0x8
0000000000029d58	str	x10, [x8, #0x110]
0000000000029d5c	mov	x8, #0x300000000
0000000000029d60	stp	x9, x8, [sp, #0x10]
0000000000029d64	adr	x8, #0x5ccdf
0000000000029d68	nop
0000000000029d6c	ldarb	w8, [x8]
0000000000029d70	tbz	w8, #0x0, 0x29d78
0000000000029d74	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029d78	ldrh	w20, [x20, #0x8]
0000000000029d7c	nop
0000000000029d80	ldr	x0, #0x40ac8 ; Objc class ref: NBKShort
0000000000029d84	bl	0x51b00 ; symbol stub for: _objc_alloc
0000000000029d88	nop
0000000000029d8c	ldr	x1, #0x40944 ; Objc selector ref: initWithShort:
0000000000029d90	sxth	w2, w20
0000000000029d94	bl	0x51b78 ; Objc message: +[NBKShort initWithShort:]
0000000000029d98	mov	x1, x0
0000000000029d9c	mov	x0, x19
0000000000029da0	blr	x21
0000000000029da4	ldr	x8, [x0]
0000000000029da8	ldr	x9, [sp, #0x10]
0000000000029dac	str	x9, [x8, #0x110]
0000000000029db0	mov	x0, x1
0000000000029db4	ldp	x29, x30, [sp, #0x40]
0000000000029db8	ldp	x20, x19, [sp, #0x30]
0000000000029dbc	ldp	x22, x21, [sp, #0x20]
0000000000029dc0	add	sp, sp, #0x50
0000000000029dc4	ret
0000000000029dc8	mov	x1, x0
0000000000029dcc	mov	x0, x19
0000000000029dd0	blr	x21
0000000000029dd4	ldr	x8, [x0]
0000000000029dd8	add	x9, sp, #0x8
0000000000029ddc	str	x9, [x8, #0x110]
0000000000029de0	mov	x0, x1
0000000000029de4	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000029de8	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000029dec	b	0x29dec
0000000000029df0	sub	sp, sp, #0x50
0000000000029df4	stp	x22, x21, [sp, #0x20]
0000000000029df8	stp	x20, x19, [sp, #0x30]
0000000000029dfc	stp	x29, x30, [sp, #0x40]
0000000000029e00	add	x29, sp, #0x40
0000000000029e04	mov	x20, x0
0000000000029e08	str	xzr, [sp, #0x8]
0000000000029e0c	adrp	x19, 67 ; 0x6c000
0000000000029e10	add	x19, x19, #0xbb0
0000000000029e14	ldr	x21, [x19]
0000000000029e18	mov	x0, x19
0000000000029e1c	blr	x21
0000000000029e20	ldr	x8, [x0]
0000000000029e24	ldr	x9, [x8, #0x110]
0000000000029e28	add	x10, sp, #0x8
0000000000029e2c	str	x10, [x8, #0x110]
0000000000029e30	mov	x8, #0x300000000
0000000000029e34	stp	x9, x8, [sp, #0x10]
0000000000029e38	adr	x8, #0x5cc0b
0000000000029e3c	nop
0000000000029e40	ldarb	w8, [x8]
0000000000029e44	tbz	w8, #0x0, 0x29e4c
0000000000029e48	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029e4c	ldr	w20, [x20, #0x8]
0000000000029e50	nop
0000000000029e54	ldr	x0, #0x409fc ; Objc class ref: NBKInt
0000000000029e58	bl	0x51b00 ; symbol stub for: _objc_alloc
0000000000029e5c	nop
0000000000029e60	ldr	x1, #0x40848 ; Objc selector ref: initWithInt:
0000000000029e64	mov	x2, x20
0000000000029e68	bl	0x51b78 ; Objc message: +[NBKInt initWithInt:]
0000000000029e6c	mov	x1, x0
0000000000029e70	mov	x0, x19
0000000000029e74	blr	x21
0000000000029e78	ldr	x8, [x0]
0000000000029e7c	ldr	x9, [sp, #0x10]
0000000000029e80	str	x9, [x8, #0x110]
0000000000029e84	mov	x0, x1
0000000000029e88	ldp	x29, x30, [sp, #0x40]
0000000000029e8c	ldp	x20, x19, [sp, #0x30]
0000000000029e90	ldp	x22, x21, [sp, #0x20]
0000000000029e94	add	sp, sp, #0x50
0000000000029e98	ret
0000000000029e9c	mov	x1, x0
0000000000029ea0	mov	x0, x19
0000000000029ea4	blr	x21
0000000000029ea8	ldr	x8, [x0]
0000000000029eac	add	x9, sp, #0x8
0000000000029eb0	str	x9, [x8, #0x110]
0000000000029eb4	mov	x0, x1
0000000000029eb8	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000029ebc	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000029ec0	b	0x29ec0
0000000000029ec4	sub	sp, sp, #0x50
0000000000029ec8	stp	x22, x21, [sp, #0x20]
0000000000029ecc	stp	x20, x19, [sp, #0x30]
0000000000029ed0	stp	x29, x30, [sp, #0x40]
0000000000029ed4	add	x29, sp, #0x40
0000000000029ed8	mov	x20, x0
0000000000029edc	str	xzr, [sp, #0x8]
0000000000029ee0	adrp	x19, 67 ; 0x6c000
0000000000029ee4	add	x19, x19, #0xbb0
0000000000029ee8	ldr	x21, [x19]
0000000000029eec	mov	x0, x19
0000000000029ef0	blr	x21
0000000000029ef4	ldr	x8, [x0]
0000000000029ef8	ldr	x9, [x8, #0x110]
0000000000029efc	add	x10, sp, #0x8
0000000000029f00	str	x10, [x8, #0x110]
0000000000029f04	mov	x8, #0x300000000
0000000000029f08	stp	x9, x8, [sp, #0x10]
0000000000029f0c	adr	x8, #0x5cb37
0000000000029f10	nop
0000000000029f14	ldarb	w8, [x8]
0000000000029f18	tbz	w8, #0x0, 0x29f20
0000000000029f1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029f20	ldr	x20, [x20, #0x8]
0000000000029f24	nop
0000000000029f28	ldr	x0, #0x40930 ; Objc class ref: NBKLong
0000000000029f2c	bl	0x51b00 ; symbol stub for: _objc_alloc
0000000000029f30	nop
0000000000029f34	ldr	x1, #0x4078c ; Objc selector ref: initWithLongLong:
0000000000029f38	mov	x2, x20
0000000000029f3c	bl	0x51b78 ; Objc message: +[NBKLong initWithLongLong:]
0000000000029f40	mov	x1, x0
0000000000029f44	mov	x0, x19
0000000000029f48	blr	x21
0000000000029f4c	ldr	x8, [x0]
0000000000029f50	ldr	x9, [sp, #0x10]
0000000000029f54	str	x9, [x8, #0x110]
0000000000029f58	mov	x0, x1
0000000000029f5c	ldp	x29, x30, [sp, #0x40]
0000000000029f60	ldp	x20, x19, [sp, #0x30]
0000000000029f64	ldp	x22, x21, [sp, #0x20]
0000000000029f68	add	sp, sp, #0x50
0000000000029f6c	ret
0000000000029f70	mov	x1, x0
0000000000029f74	mov	x0, x19
0000000000029f78	blr	x21
0000000000029f7c	ldr	x8, [x0]
0000000000029f80	add	x9, sp, #0x8
0000000000029f84	str	x9, [x8, #0x110]
0000000000029f88	mov	x0, x1
0000000000029f8c	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000029f90	bl	0x51908 ; symbol stub for: __ZSt9terminatev
0000000000029f94	b	0x29f94
0000000000029f98	sub	sp, sp, #0x50
0000000000029f9c	stp	x22, x21, [sp, #0x20]
0000000000029fa0	stp	x20, x19, [sp, #0x30]
0000000000029fa4	stp	x29, x30, [sp, #0x40]
0000000000029fa8	add	x29, sp, #0x40
0000000000029fac	mov	x20, x0
0000000000029fb0	str	xzr, [sp, #0x8]
0000000000029fb4	adrp	x19, 67 ; 0x6c000
0000000000029fb8	add	x19, x19, #0xbb0
0000000000029fbc	ldr	x21, [x19]
0000000000029fc0	mov	x0, x19
0000000000029fc4	blr	x21
0000000000029fc8	ldr	x8, [x0]
0000000000029fcc	ldr	x9, [x8, #0x110]
0000000000029fd0	add	x10, sp, #0x8
0000000000029fd4	str	x10, [x8, #0x110]
0000000000029fd8	mov	x8, #0x300000000
0000000000029fdc	stp	x9, x8, [sp, #0x10]
0000000000029fe0	adr	x8, #0x5ca63
0000000000029fe4	nop
0000000000029fe8	ldarb	w8, [x8]
0000000000029fec	tbz	w8, #0x0, 0x29ff4
0000000000029ff0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029ff4	ldrb	w20, [x20, #0x8]
0000000000029ff8	nop
0000000000029ffc	ldr	x0, #0x40864 ; Objc class ref: NBKUByte
000000000002a000	bl	0x51b00 ; symbol stub for: _objc_alloc
000000000002a004	nop
000000000002a008	ldr	x1, #0x406d0 ; Objc selector ref: initWithUnsignedChar:
000000000002a00c	mov	x2, x20
000000000002a010	bl	0x51b78 ; Objc message: +[NBKUByte initWithUnsignedChar:]
000000000002a014	mov	x1, x0
000000000002a018	mov	x0, x19
000000000002a01c	blr	x21
000000000002a020	ldr	x8, [x0]
000000000002a024	ldr	x9, [sp, #0x10]
000000000002a028	str	x9, [x8, #0x110]
000000000002a02c	mov	x0, x1
000000000002a030	ldp	x29, x30, [sp, #0x40]
000000000002a034	ldp	x20, x19, [sp, #0x30]
000000000002a038	ldp	x22, x21, [sp, #0x20]
000000000002a03c	add	sp, sp, #0x50
000000000002a040	ret
000000000002a044	mov	x1, x0
000000000002a048	mov	x0, x19
000000000002a04c	blr	x21
000000000002a050	ldr	x8, [x0]
000000000002a054	add	x9, sp, #0x8
000000000002a058	str	x9, [x8, #0x110]
000000000002a05c	mov	x0, x1
000000000002a060	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000002a064	bl	0x51908 ; symbol stub for: __ZSt9terminatev
000000000002a068	b	0x2a068
000000000002a06c	sub	sp, sp, #0x50
000000000002a070	stp	x22, x21, [sp, #0x20]
000000000002a074	stp	x20, x19, [sp, #0x30]
000000000002a078	stp	x29, x30, [sp, #0x40]
000000000002a07c	add	x29, sp, #0x40
000000000002a080	mov	x20, x0
000000000002a084	str	xzr, [sp, #0x8]
000000000002a088	adrp	x19, 66 ; 0x6c000
000000000002a08c	add	x19, x19, #0xbb0
000000000002a090	ldr	x21, [x19]
000000000002a094	mov	x0, x19
000000000002a098	blr	x21
000000000002a09c	ldr	x8, [x0]
000000000002a0a0	ldr	x9, [x8, #0x110]
000000000002a0a4	add	x10, sp, #0x8
000000000002a0a8	str	x10, [x8, #0x110]
000000000002a0ac	mov	x8, #0x300000000
000000000002a0b0	stp	x9, x8, [sp, #0x10]
000000000002a0b4	adr	x8, #0x5c98f
000000000002a0b8	nop
000000000002a0bc	ldarb	w8, [x8]
000000000002a0c0	tbz	w8, #0x0, 0x2a0c8
000000000002a0c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a0c8	ldrh	w20, [x20, #0x8]
000000000002a0cc	nop
000000000002a0d0	ldr	x0, #0x40798 ; Objc class ref: NBKUShort
000000000002a0d4	bl	0x51b00 ; symbol stub for: _objc_alloc
000000000002a0d8	nop
000000000002a0dc	ldr	x1, #0x40614 ; Objc selector ref: initWithUnsignedShort:
000000000002a0e0	mov	x2, x20
000000000002a0e4	bl	0x51b78 ; Objc message: +[NBKUShort initWithUnsignedShort:]
000000000002a0e8	mov	x1, x0
000000000002a0ec	mov	x0, x19
000000000002a0f0	blr	x21
000000000002a0f4	ldr	x8, [x0]
000000000002a0f8	ldr	x9, [sp, #0x10]
000000000002a0fc	str	x9, [x8, #0x110]
000000000002a100	mov	x0, x1
000000000002a104	ldp	x29, x30, [sp, #0x40]
000000000002a108	ldp	x20, x19, [sp, #0x30]
000000000002a10c	ldp	x22, x21, [sp, #0x20]
000000000002a110	add	sp, sp, #0x50
000000000002a114	ret
000000000002a118	mov	x1, x0
000000000002a11c	mov	x0, x19
000000000002a120	blr	x21
000000000002a124	ldr	x8, [x0]
000000000002a128	add	x9, sp, #0x8
000000000002a12c	str	x9, [x8, #0x110]
000000000002a130	mov	x0, x1
000000000002a134	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000002a138	bl	0x51908 ; symbol stub for: __ZSt9terminatev
000000000002a13c	b	0x2a13c
000000000002a140	sub	sp, sp, #0x50
000000000002a144	stp	x22, x21, [sp, #0x20]
000000000002a148	stp	x20, x19, [sp, #0x30]
000000000002a14c	stp	x29, x30, [sp, #0x40]
000000000002a150	add	x29, sp, #0x40
000000000002a154	mov	x20, x0
000000000002a158	str	xzr, [sp, #0x8]
000000000002a15c	adrp	x19, 66 ; 0x6c000
000000000002a160	add	x19, x19, #0xbb0
000000000002a164	ldr	x21, [x19]
000000000002a168	mov	x0, x19
000000000002a16c	blr	x21
000000000002a170	ldr	x8, [x0]
000000000002a174	ldr	x9, [x8, #0x110]
000000000002a178	add	x10, sp, #0x8
000000000002a17c	str	x10, [x8, #0x110]
000000000002a180	mov	x8, #0x300000000
000000000002a184	stp	x9, x8, [sp, #0x10]
000000000002a188	adr	x8, #0x5c8bb
000000000002a18c	nop
000000000002a190	ldarb	w8, [x8]
000000000002a194	tbz	w8, #0x0, 0x2a19c
000000000002a198	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a19c	ldr	w20, [x20, #0x8]
000000000002a1a0	nop
000000000002a1a4	ldr	x0, #0x406cc ; Objc class ref: NBKUInt
000000000002a1a8	bl	0x51b00 ; symbol stub for: _objc_alloc
000000000002a1ac	nop
000000000002a1b0	ldr	x1, #0x40530 ; Objc selector ref: initWithUnsignedInt:
000000000002a1b4	mov	x2, x20
000000000002a1b8	bl	0x51b78 ; Objc message: +[NBKUInt initWithUnsignedInt:]
000000000002a1bc	mov	x1, x0
000000000002a1c0	mov	x0, x19
000000000002a1c4	blr	x21
000000000002a1c8	ldr	x8, [x0]
000000000002a1cc	ldr	x9, [sp, #0x10]
000000000002a1d0	str	x9, [x8, #0x110]
000000000002a1d4	mov	x0, x1
000000000002a1d8	ldp	x29, x30, [sp, #0x40]
000000000002a1dc	ldp	x20, x19, [sp, #0x30]
000000000002a1e0	ldp	x22, x21, [sp, #0x20]
000000000002a1e4	add	sp, sp, #0x50
000000000002a1e8	ret
000000000002a1ec	mov	x1, x0
000000000002a1f0	mov	x0, x19
000000000002a1f4	blr	x21
000000000002a1f8	ldr	x8, [x0]
000000000002a1fc	add	x9, sp, #0x8
000000000002a200	str	x9, [x8, #0x110]
000000000002a204	mov	x0, x1
000000000002a208	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000002a20c	bl	0x51908 ; symbol stub for: __ZSt9terminatev
000000000002a210	b	0x2a210
000000000002a214	sub	sp, sp, #0x50
000000000002a218	stp	x22, x21, [sp, #0x20]
000000000002a21c	stp	x20, x19, [sp, #0x30]
000000000002a220	stp	x29, x30, [sp, #0x40]
000000000002a224	add	x29, sp, #0x40
000000000002a228	mov	x20, x0
000000000002a22c	str	xzr, [sp, #0x8]
000000000002a230	adrp	x19, 66 ; 0x6c000
000000000002a234	add	x19, x19, #0xbb0
000000000002a238	ldr	x21, [x19]
000000000002a23c	mov	x0, x19
000000000002a240	blr	x21
000000000002a244	ldr	x8, [x0]
000000000002a248	ldr	x9, [x8, #0x110]
000000000002a24c	add	x10, sp, #0x8
000000000002a250	str	x10, [x8, #0x110]
000000000002a254	mov	x8, #0x300000000
000000000002a258	stp	x9, x8, [sp, #0x10]
000000000002a25c	adr	x8, #0x5c7e7
000000000002a260	nop
000000000002a264	ldarb	w8, [x8]
000000000002a268	tbz	w8, #0x0, 0x2a270
000000000002a26c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a270	ldr	x20, [x20, #0x8]
000000000002a274	nop
000000000002a278	ldr	x0, #0x40600 ; Objc class ref: NBKULong
000000000002a27c	bl	0x51b00 ; symbol stub for: _objc_alloc
000000000002a280	nop
000000000002a284	ldr	x1, #0x40464 ; Objc selector ref: initWithUnsignedLongLong:
000000000002a288	mov	x2, x20
000000000002a28c	bl	0x51b78 ; Objc message: +[NBKULong initWithUnsignedLongLong:]
000000000002a290	mov	x1, x0
000000000002a294	mov	x0, x19
000000000002a298	blr	x21
000000000002a29c	ldr	x8, [x0]
000000000002a2a0	ldr	x9, [sp, #0x10]
000000000002a2a4	str	x9, [x8, #0x110]
000000000002a2a8	mov	x0, x1
000000000002a2ac	ldp	x29, x30, [sp, #0x40]
000000000002a2b0	ldp	x20, x19, [sp, #0x30]
000000000002a2b4	ldp	x22, x21, [sp, #0x20]
000000000002a2b8	add	sp, sp, #0x50
000000000002a2bc	ret
000000000002a2c0	mov	x1, x0
000000000002a2c4	mov	x0, x19
000000000002a2c8	blr	x21
000000000002a2cc	ldr	x8, [x0]
000000000002a2d0	add	x9, sp, #0x8
000000000002a2d4	str	x9, [x8, #0x110]
000000000002a2d8	mov	x0, x1
000000000002a2dc	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000002a2e0	bl	0x51908 ; symbol stub for: __ZSt9terminatev
000000000002a2e4	b	0x2a2e4
000000000002a2e8	sub	sp, sp, #0x60
000000000002a2ec	stp	d9, d8, [sp, #0x20]
000000000002a2f0	stp	x22, x21, [sp, #0x30]
000000000002a2f4	stp	x20, x19, [sp, #0x40]
000000000002a2f8	stp	x29, x30, [sp, #0x50]
000000000002a2fc	add	x29, sp, #0x50
000000000002a300	mov	x20, x0
000000000002a304	str	xzr, [sp, #0x8]
000000000002a308	adrp	x19, 66 ; 0x6c000
000000000002a30c	add	x19, x19, #0xbb0
000000000002a310	ldr	x21, [x19]
000000000002a314	mov	x0, x19
000000000002a318	blr	x21
000000000002a31c	ldr	x8, [x0]
000000000002a320	ldr	x9, [x8, #0x110]
000000000002a324	add	x10, sp, #0x8
000000000002a328	str	x10, [x8, #0x110]
000000000002a32c	mov	x8, #0x300000000
000000000002a330	stp	x9, x8, [sp, #0x10]
000000000002a334	adr	x8, #0x5c70f
000000000002a338	nop
000000000002a33c	ldarb	w8, [x8]
000000000002a340	tbz	w8, #0x0, 0x2a348
000000000002a344	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a348	ldr	s8, [x20, #0x8]
000000000002a34c	nop
000000000002a350	ldr	x0, #0x40530 ; Objc class ref: NBKFloat
000000000002a354	bl	0x51b00 ; symbol stub for: _objc_alloc
000000000002a358	nop
000000000002a35c	ldr	x1, #0x40344 ; Objc selector ref: initWithFloat:
000000000002a360	fmov	s0, s8
000000000002a364	bl	0x51b78 ; Objc message: +[NBKFloat initWithFloat:]
000000000002a368	mov	x1, x0
000000000002a36c	mov	x0, x19
000000000002a370	blr	x21
000000000002a374	ldr	x8, [x0]
000000000002a378	ldr	x9, [sp, #0x10]
000000000002a37c	str	x9, [x8, #0x110]
000000000002a380	mov	x0, x1
000000000002a384	ldp	x29, x30, [sp, #0x50]
000000000002a388	ldp	x20, x19, [sp, #0x40]
000000000002a38c	ldp	x22, x21, [sp, #0x30]
000000000002a390	ldp	d9, d8, [sp, #0x20]
000000000002a394	add	sp, sp, #0x60
000000000002a398	ret
000000000002a39c	mov	x1, x0
000000000002a3a0	mov	x0, x19
000000000002a3a4	blr	x21
000000000002a3a8	ldr	x8, [x0]
000000000002a3ac	add	x9, sp, #0x8
000000000002a3b0	str	x9, [x8, #0x110]
000000000002a3b4	mov	x0, x1
000000000002a3b8	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000002a3bc	bl	0x51908 ; symbol stub for: __ZSt9terminatev
000000000002a3c0	b	0x2a3c0
000000000002a3c4	sub	sp, sp, #0x60
000000000002a3c8	stp	d9, d8, [sp, #0x20]
000000000002a3cc	stp	x22, x21, [sp, #0x30]
000000000002a3d0	stp	x20, x19, [sp, #0x40]
000000000002a3d4	stp	x29, x30, [sp, #0x50]
000000000002a3d8	add	x29, sp, #0x50
000000000002a3dc	mov	x20, x0
000000000002a3e0	str	xzr, [sp, #0x8]
000000000002a3e4	adrp	x19, 66 ; 0x6c000
000000000002a3e8	add	x19, x19, #0xbb0
000000000002a3ec	ldr	x21, [x19]
000000000002a3f0	mov	x0, x19
000000000002a3f4	blr	x21
000000000002a3f8	ldr	x8, [x0]
000000000002a3fc	ldr	x9, [x8, #0x110]
000000000002a400	add	x10, sp, #0x8
000000000002a404	str	x10, [x8, #0x110]
000000000002a408	mov	x8, #0x300000000
000000000002a40c	stp	x9, x8, [sp, #0x10]
000000000002a410	adr	x8, #0x5c633
000000000002a414	nop
000000000002a418	ldarb	w8, [x8]
000000000002a41c	tbz	w8, #0x0, 0x2a424
000000000002a420	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a424	ldr	d8, [x20, #0x8]
000000000002a428	nop
000000000002a42c	ldr	x0, #0x4045c ; Objc class ref: NBKDouble
000000000002a430	bl	0x51b00 ; symbol stub for: _objc_alloc
000000000002a434	nop
000000000002a438	ldr	x1, #0x40260 ; Objc selector ref: initWithDouble:
000000000002a43c	fmov	d0, d8
000000000002a440	bl	0x51b78 ; Objc message: +[NBKDouble initWithDouble:]
000000000002a444	mov	x1, x0
000000000002a448	mov	x0, x19
000000000002a44c	blr	x21
000000000002a450	ldr	x8, [x0]
000000000002a454	ldr	x9, [sp, #0x10]
000000000002a458	str	x9, [x8, #0x110]
000000000002a45c	mov	x0, x1
000000000002a460	ldp	x29, x30, [sp, #0x50]
000000000002a464	ldp	x20, x19, [sp, #0x40]
000000000002a468	ldp	x22, x21, [sp, #0x30]
000000000002a46c	ldp	d9, d8, [sp, #0x20]
000000000002a470	add	sp, sp, #0x60
000000000002a474	ret
000000000002a478	mov	x1, x0
000000000002a47c	mov	x0, x19
000000000002a480	blr	x21
000000000002a484	ldr	x8, [x0]
000000000002a488	add	x9, sp, #0x8
000000000002a48c	str	x9, [x8, #0x110]
000000000002a490	mov	x0, x1
000000000002a494	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000002a498	bl	0x51908 ; symbol stub for: __ZSt9terminatev
000000000002a49c	b	0x2a49c
___unnamed_111:
000000000002a4a0	brk	#0x1
000000000002a4a4	adrp	x8, 92 ; 0x86000
000000000002a4a8	ldrb	w8, [x8, #0xa40]
000000000002a4ac	tbz	w8, #0x0, 0x2a4cc
000000000002a4b0	adrp	x8, 92 ; 0x86000
000000000002a4b4	ldrb	w8, [x8, #0xa41]
000000000002a4b8	tbz	w8, #0x0, 0x2a8b8
000000000002a4bc	adrp	x8, 92 ; 0x86000
000000000002a4c0	ldrb	w9, [x8, #0xa42]
000000000002a4c4	tbz	w9, #0x0, 0x2a900
000000000002a4c8	ret
000000000002a4cc	adr	x8, #0x5c574
000000000002a4d0	nop
000000000002a4d4	mov	w9, #0x1
000000000002a4d8	strb	w9, [x8]
000000000002a4dc	add	x9, x8, #0x270
000000000002a4e0	ldr	x10, [x8, #0x270]
000000000002a4e4	ldr	x11, [x8, #0x2c8]
000000000002a4e8	add	x11, x11, #0x8
000000000002a4ec	cmp	x10, #0x0
000000000002a4f0	csel	x11, x9, x11, eq
000000000002a4f4	adr	x10, #0x4216c
000000000002a4f8	nop
000000000002a4fc	str	x10, [x11]
000000000002a500	ldr	x11, [x8, #0x270]
000000000002a504	add	x12, x10, #0x8
000000000002a508	cmp	x11, #0x0
000000000002a50c	csel	x11, x9, x12, eq
000000000002a510	add	x12, x10, #0x10
000000000002a514	str	x12, [x11]
000000000002a518	ldr	x11, [x8, #0x270]
000000000002a51c	add	x12, x10, #0x18
000000000002a520	cmp	x11, #0x0
000000000002a524	csel	x11, x9, x12, eq
000000000002a528	add	x12, x10, #0x20
000000000002a52c	str	x12, [x11]
000000000002a530	ldr	x11, [x8, #0x270]
000000000002a534	add	x12, x10, #0x28
000000000002a538	cmp	x11, #0x0
000000000002a53c	csel	x11, x9, x12, eq
000000000002a540	add	x12, x10, #0x30
000000000002a544	str	x12, [x11]
000000000002a548	ldr	x11, [x8, #0x270]
000000000002a54c	add	x12, x10, #0x38
000000000002a550	cmp	x11, #0x0
000000000002a554	csel	x11, x9, x12, eq
000000000002a558	add	x12, x10, #0x40
000000000002a55c	str	x12, [x11]
000000000002a560	ldr	x11, [x8, #0x270]
000000000002a564	add	x12, x10, #0x48
000000000002a568	cmp	x11, #0x0
000000000002a56c	csel	x11, x9, x12, eq
000000000002a570	add	x12, x10, #0x50
000000000002a574	str	x12, [x11]
000000000002a578	ldr	x11, [x8, #0x270]
000000000002a57c	add	x12, x10, #0x58
000000000002a580	cmp	x11, #0x0
000000000002a584	csel	x11, x9, x12, eq
000000000002a588	add	x12, x10, #0x60
000000000002a58c	str	x12, [x11]
000000000002a590	ldr	x11, [x8, #0x270]
000000000002a594	add	x12, x10, #0x68
000000000002a598	cmp	x11, #0x0
000000000002a59c	csel	x11, x9, x12, eq
000000000002a5a0	add	x12, x10, #0x70
000000000002a5a4	str	x12, [x11]
000000000002a5a8	ldr	x11, [x8, #0x270]
000000000002a5ac	add	x12, x10, #0x78
000000000002a5b0	cmp	x11, #0x0
000000000002a5b4	csel	x11, x9, x12, eq
000000000002a5b8	add	x12, x10, #0x80
000000000002a5bc	str	x12, [x11]
000000000002a5c0	ldr	x11, [x8, #0x270]
000000000002a5c4	add	x12, x10, #0x88
000000000002a5c8	cmp	x11, #0x0
000000000002a5cc	csel	x11, x9, x12, eq
000000000002a5d0	add	x12, x10, #0x90
000000000002a5d4	str	x12, [x11]
000000000002a5d8	ldr	x11, [x8, #0x270]
000000000002a5dc	add	x12, x10, #0x98
000000000002a5e0	cmp	x11, #0x0
000000000002a5e4	csel	x11, x9, x12, eq
000000000002a5e8	add	x12, x10, #0xa0
000000000002a5ec	str	x12, [x11]
000000000002a5f0	ldr	x11, [x8, #0x270]
000000000002a5f4	add	x12, x10, #0xa8
000000000002a5f8	cmp	x11, #0x0
000000000002a5fc	csel	x11, x9, x12, eq
000000000002a600	add	x12, x10, #0xb0
000000000002a604	str	x12, [x11]
000000000002a608	ldr	x11, [x8, #0x270]
000000000002a60c	add	x12, x10, #0xb8
000000000002a610	cmp	x11, #0x0
000000000002a614	csel	x11, x9, x12, eq
000000000002a618	add	x12, x10, #0xc0
000000000002a61c	str	x12, [x11]
000000000002a620	ldr	x11, [x8, #0x270]
000000000002a624	add	x12, x10, #0xc8
000000000002a628	cmp	x11, #0x0
000000000002a62c	csel	x11, x9, x12, eq
000000000002a630	add	x12, x10, #0xd0
000000000002a634	str	x12, [x11]
000000000002a638	ldr	x11, [x8, #0x270]
000000000002a63c	add	x12, x10, #0xd8
000000000002a640	cmp	x11, #0x0
000000000002a644	csel	x11, x9, x12, eq
000000000002a648	add	x12, x10, #0xe0
000000000002a64c	str	x12, [x11]
000000000002a650	ldr	x11, [x8, #0x270]
000000000002a654	add	x12, x10, #0xe8
000000000002a658	cmp	x11, #0x0
000000000002a65c	csel	x11, x9, x12, eq
000000000002a660	add	x12, x10, #0xf0
000000000002a664	str	x12, [x11]
000000000002a668	ldr	x11, [x8, #0x270]
000000000002a66c	add	x12, x10, #0xf8
000000000002a670	cmp	x11, #0x0
000000000002a674	csel	x11, x9, x12, eq
000000000002a678	add	x12, x10, #0x100
000000000002a67c	str	x12, [x11]
000000000002a680	ldr	x11, [x8, #0x270]
000000000002a684	add	x12, x10, #0x108
000000000002a688	cmp	x11, #0x0
000000000002a68c	csel	x11, x9, x12, eq
000000000002a690	add	x12, x10, #0x110
000000000002a694	str	x12, [x11]
000000000002a698	ldr	x11, [x8, #0x270]
000000000002a69c	add	x12, x10, #0x118
000000000002a6a0	cmp	x11, #0x0
000000000002a6a4	csel	x11, x9, x12, eq
000000000002a6a8	add	x12, x10, #0x120
000000000002a6ac	str	x12, [x11]
000000000002a6b0	ldr	x11, [x8, #0x270]
000000000002a6b4	add	x12, x10, #0x128
000000000002a6b8	cmp	x11, #0x0
000000000002a6bc	csel	x11, x9, x12, eq
000000000002a6c0	add	x12, x10, #0x130
000000000002a6c4	str	x12, [x11]
000000000002a6c8	ldr	x11, [x8, #0x270]
000000000002a6cc	add	x12, x10, #0x138
000000000002a6d0	cmp	x11, #0x0
000000000002a6d4	csel	x11, x9, x12, eq
000000000002a6d8	add	x12, x10, #0x140
000000000002a6dc	str	x12, [x11]
000000000002a6e0	ldr	x11, [x8, #0x270]
000000000002a6e4	add	x12, x10, #0x148
000000000002a6e8	cmp	x11, #0x0
000000000002a6ec	csel	x11, x9, x12, eq
000000000002a6f0	add	x12, x10, #0x150
000000000002a6f4	str	x12, [x11]
000000000002a6f8	ldr	x11, [x8, #0x270]
000000000002a6fc	add	x12, x10, #0x158
000000000002a700	cmp	x11, #0x0
000000000002a704	csel	x11, x9, x12, eq
000000000002a708	add	x12, x10, #0x160
000000000002a70c	str	x12, [x11]
000000000002a710	ldr	x11, [x8, #0x270]
000000000002a714	add	x12, x10, #0x168
000000000002a718	cmp	x11, #0x0
000000000002a71c	csel	x11, x9, x12, eq
000000000002a720	add	x12, x10, #0x170
000000000002a724	str	x12, [x11]
000000000002a728	ldr	x11, [x8, #0x270]
000000000002a72c	add	x12, x10, #0x178
000000000002a730	cmp	x11, #0x0
000000000002a734	csel	x11, x9, x12, eq
000000000002a738	add	x12, x10, #0x180
000000000002a73c	str	x12, [x11]
000000000002a740	ldr	x11, [x8, #0x270]
000000000002a744	add	x12, x10, #0x188
000000000002a748	cmp	x11, #0x0
000000000002a74c	csel	x11, x9, x12, eq
000000000002a750	add	x12, x10, #0x190
000000000002a754	str	x12, [x11]
000000000002a758	ldr	x11, [x8, #0x270]
000000000002a75c	add	x12, x10, #0x198
000000000002a760	cmp	x11, #0x0
000000000002a764	csel	x11, x9, x12, eq
000000000002a768	add	x12, x10, #0x1a0
000000000002a76c	str	x12, [x11]
000000000002a770	ldr	x11, [x8, #0x270]
000000000002a774	add	x12, x10, #0x1a8
000000000002a778	cmp	x11, #0x0
000000000002a77c	csel	x11, x9, x12, eq
000000000002a780	add	x12, x10, #0x1b0
000000000002a784	str	x12, [x11]
000000000002a788	ldr	x11, [x8, #0x270]
000000000002a78c	add	x12, x10, #0x1b8
000000000002a790	cmp	x11, #0x0
000000000002a794	csel	x11, x9, x12, eq
000000000002a798	add	x12, x10, #0x1c0
000000000002a79c	str	x12, [x11]
000000000002a7a0	ldr	x11, [x8, #0x270]
000000000002a7a4	add	x12, x10, #0x1c8
000000000002a7a8	cmp	x11, #0x0
000000000002a7ac	csel	x11, x9, x12, eq
000000000002a7b0	add	x12, x10, #0x1d0
000000000002a7b4	str	x12, [x11]
000000000002a7b8	ldr	x11, [x8, #0x270]
000000000002a7bc	add	x12, x10, #0x1d8
000000000002a7c0	cmp	x11, #0x0
000000000002a7c4	csel	x11, x9, x12, eq
000000000002a7c8	add	x12, x10, #0x1e0
000000000002a7cc	str	x12, [x11]
000000000002a7d0	ldr	x11, [x8, #0x270]
000000000002a7d4	add	x12, x10, #0x1e8
000000000002a7d8	cmp	x11, #0x0
000000000002a7dc	csel	x11, x9, x12, eq
000000000002a7e0	add	x12, x10, #0x1f0
000000000002a7e4	str	x12, [x11]
000000000002a7e8	ldr	x11, [x8, #0x270]
000000000002a7ec	add	x12, x10, #0x1f8
000000000002a7f0	cmp	x11, #0x0
000000000002a7f4	csel	x11, x9, x12, eq
000000000002a7f8	add	x12, x10, #0x200
000000000002a7fc	str	x12, [x11]
000000000002a800	ldr	x11, [x8, #0x270]
000000000002a804	add	x12, x10, #0x208
000000000002a808	cmp	x11, #0x0
000000000002a80c	csel	x11, x9, x12, eq
000000000002a810	add	x12, x10, #0x210
000000000002a814	str	x12, [x11]
000000000002a818	ldr	x11, [x8, #0x270]
000000000002a81c	add	x12, x10, #0x218
000000000002a820	cmp	x11, #0x0
000000000002a824	csel	x11, x9, x12, eq
000000000002a828	add	x12, x10, #0x220
000000000002a82c	str	x12, [x11]
000000000002a830	ldr	x11, [x8, #0x270]
000000000002a834	add	x12, x10, #0x228
000000000002a838	cmp	x11, #0x0
000000000002a83c	csel	x11, x9, x12, eq
000000000002a840	add	x12, x10, #0x230
000000000002a844	str	x12, [x11]
000000000002a848	ldr	x11, [x8, #0x270]
000000000002a84c	add	x12, x10, #0x238
000000000002a850	cmp	x11, #0x0
000000000002a854	csel	x11, x9, x12, eq
000000000002a858	add	x12, x10, #0x240
000000000002a85c	str	x12, [x11]
000000000002a860	ldr	x11, [x8, #0x270]
000000000002a864	add	x12, x10, #0x248
000000000002a868	cmp	x11, #0x0
000000000002a86c	csel	x11, x9, x12, eq
000000000002a870	add	x12, x10, #0x250
000000000002a874	str	x12, [x11]
000000000002a878	ldr	x11, [x8, #0x270]
000000000002a87c	add	x12, x10, #0x258
000000000002a880	cmp	x11, #0x0
000000000002a884	csel	x11, x9, x12, eq
000000000002a888	add	x12, x10, #0x260
000000000002a88c	str	x12, [x11]
000000000002a890	ldr	x11, [x8, #0x270]
000000000002a894	add	x12, x10, #0x268
000000000002a898	cmp	x11, #0x0
000000000002a89c	csel	x9, x9, x12, eq
000000000002a8a0	add	x10, x10, #0x270
000000000002a8a4	str	x10, [x9]
000000000002a8a8	str	x10, [x8, #0x2c8]
000000000002a8ac	adrp	x8, 92 ; 0x86000
000000000002a8b0	ldrb	w8, [x8, #0xa41]
000000000002a8b4	tbnz	w8, #0x0, 0x2a4bc
000000000002a8b8	adr	x8, #0x5c189
000000000002a8bc	nop
000000000002a8c0	mov	w9, #0x1
000000000002a8c4	strb	w9, [x8]
000000000002a8c8	add	x9, x8, #0x26f
000000000002a8cc	ldr	x10, [x9]
000000000002a8d0	add	x8, x8, #0x2c7
000000000002a8d4	ldr	x11, [x8]
000000000002a8d8	add	x11, x11, #0x8
000000000002a8dc	cmp	x10, #0x0
000000000002a8e0	csel	x9, x9, x11, eq
000000000002a8e4	adr	x10, #0x41ffc
000000000002a8e8	nop
000000000002a8ec	str	x10, [x9]
000000000002a8f0	str	x10, [x8]
000000000002a8f4	adrp	x8, 92 ; 0x86000
000000000002a8f8	ldrb	w9, [x8, #0xa42]
000000000002a8fc	tbnz	w9, #0x0, 0x2a4c8
000000000002a900	mov	w9, #0x1
000000000002a904	strb	w9, [x8, #0xa42]
000000000002a908	ret
___clang_call_terminate:
000000000002a90c	stp	x29, x30, [sp, #-0x10]!
000000000002a910	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000002a914	bl	0x51908 ; symbol stub for: __ZSt9terminatev
__ZNSt3__125__throw_bad_function_callEv:
000000000002a918	stp	x29, x30, [sp, #-0x10]!
000000000002a91c	mov	x29, sp
000000000002a920	mov	w0, #0x8
000000000002a924	bl	0x5192c ; symbol stub for: ___cxa_allocate_exception
000000000002a928	adr	x8, #0x3bb48
000000000002a92c	nop
000000000002a930	str	x8, [x0]
000000000002a934	adr	x1, #0x3bb54
000000000002a938	nop
000000000002a93c	adr	x2, #0xc
000000000002a940	nop
000000000002a944	bl	0x51974 ; symbol stub for: ___cxa_throw
__ZNSt3__117bad_function_callD1Ev:
000000000002a948	b	0x518d8 ; symbol stub for: __ZNSt9exceptionD2Ev
__ZNSt3__117bad_function_callD0Ev:
000000000002a94c	stp	x29, x30, [sp, #-0x10]!
000000000002a950	mov	x29, sp
000000000002a954	bl	0x518d8 ; symbol stub for: __ZNSt9exceptionD2Ev
000000000002a958	ldp	x29, x30, [sp], #0x10
000000000002a95c	b	0x51914 ; symbol stub for: __ZdlPv
__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_:
000000000002a960	stp	x26, x25, [sp, #-0x50]!
000000000002a964	stp	x24, x23, [sp, #0x10]
000000000002a968	stp	x22, x21, [sp, #0x20]
000000000002a96c	stp	x20, x19, [sp, #0x30]
000000000002a970	stp	x29, x30, [sp, #0x40]
000000000002a974	add	x29, sp, #0x40
000000000002a978	mov	x20, x2
000000000002a97c	mov	x21, x1
000000000002a980	mov	x19, x0
000000000002a984	ldrb	w8, [x0, #0x18]
000000000002a988	cbz	w8, 0x2a9b0
000000000002a98c	ldrsb	w8, [x19, #0x17]
000000000002a990	tbnz	w8, #0x1f, 0x2a9d0
000000000002a994	subs	x8, x20, #0x16
000000000002a998	b.ls	0x2aa6c
000000000002a99c	cmn	x8, #0x28
000000000002a9a0	b.hi	0x2ab10
000000000002a9a4	mov	w25, #0x16
000000000002a9a8	mov	x22, x19
000000000002a9ac	b	0x2aa0c
000000000002a9b0	cmn	x20, #0x10
000000000002a9b4	b.hs	0x2ab10
000000000002a9b8	cmp	x20, #0x17
000000000002a9bc	b.hs	0x2aa98
000000000002a9c0	strb	w20, [x19, #0x17]
000000000002a9c4	mov	x22, x19
000000000002a9c8	cbnz	x20, 0x2aabc
000000000002a9cc	b	0x2aacc
000000000002a9d0	ldr	x8, [x19, #0x10]
000000000002a9d4	and	x8, x8, #0x7fffffffffffffff
000000000002a9d8	sub	x25, x8, #0x1
000000000002a9dc	cmp	x25, x20
000000000002a9e0	b.hs	0x2aadc
000000000002a9e4	sub	x9, x20, x25
000000000002a9e8	mov	x10, #-0x11
000000000002a9ec	sub	x8, x10, x8
000000000002a9f0	cmp	x8, x9
000000000002a9f4	b.lo	0x2ab10
000000000002a9f8	ldr	x22, [x19]
000000000002a9fc	mov	x8, #-0x1a
000000000002aa00	movk	x8, #0x7fff, lsl #48
000000000002aa04	cmp	x25, x8
000000000002aa08	b.hi	0x2ab08
000000000002aa0c	lsl	x8, x25, #1
000000000002aa10	cmp	x8, x20
000000000002aa14	csel	x8, x8, x20, hi
000000000002aa18	add	x9, x8, #0x10
000000000002aa1c	and	x9, x9, #0xfffffffffffffff0
000000000002aa20	cmp	x8, #0x17
000000000002aa24	mov	w8, #0x17
000000000002aa28	csel	x23, x8, x9, lo
000000000002aa2c	mov	x0, x23
000000000002aa30	mov	w1, #0x1
000000000002aa34	bl	0x519e0 ; symbol stub for: _calloc
000000000002aa38	mov	x24, x0
000000000002aa3c	mov	x1, x21
000000000002aa40	mov	x2, x20
000000000002aa44	bl	0x51aac ; symbol stub for: _memcpy
000000000002aa48	cmp	x25, #0x16
000000000002aa4c	b.eq	0x2aa58
000000000002aa50	mov	x0, x22
000000000002aa54	bl	0x51a64 ; symbol stub for: _free
000000000002aa58	orr	x8, x23, #0x8000000000000000
000000000002aa5c	stp	x20, x8, [x19, #0x8]
000000000002aa60	str	x24, [x19]
000000000002aa64	strb	wzr, [x24, x20]
000000000002aa68	b	0x2aaec
000000000002aa6c	mov	x22, x19
000000000002aa70	cbz	x20, 0x2aa84
000000000002aa74	mov	x0, x22
000000000002aa78	mov	x1, x21
000000000002aa7c	mov	x2, x20
000000000002aa80	bl	0x51ab8 ; symbol stub for: _memmove
000000000002aa84	strb	wzr, [x22, x20]
000000000002aa88	ldrsb	w8, [x19, #0x17]
000000000002aa8c	tbnz	w8, #0x1f, 0x2aae8
000000000002aa90	strb	w20, [x19, #0x17]
000000000002aa94	b	0x2aaec
000000000002aa98	add	x8, x20, #0x10
000000000002aa9c	and	x23, x8, #0xfffffffffffffff0
000000000002aaa0	mov	x0, x23
000000000002aaa4	mov	w1, #0x1
000000000002aaa8	bl	0x519e0 ; symbol stub for: _calloc
000000000002aaac	mov	x22, x0
000000000002aab0	orr	x8, x23, #0x8000000000000000
000000000002aab4	stp	x20, x8, [x19, #0x8]
000000000002aab8	str	x0, [x19]
000000000002aabc	mov	x0, x22
000000000002aac0	mov	x1, x21
000000000002aac4	mov	x2, x20
000000000002aac8	bl	0x51aac ; symbol stub for: _memcpy
000000000002aacc	strb	wzr, [x22, x20]
000000000002aad0	mov	w8, #0x1
000000000002aad4	strb	w8, [x19, #0x18]
000000000002aad8	b	0x2aaec
000000000002aadc	ldr	x22, [x19]
000000000002aae0	cbnz	x20, 0x2aa74
000000000002aae4	b	0x2aa84
000000000002aae8	str	x20, [x19, #0x8]
000000000002aaec	mov	x0, x19
000000000002aaf0	ldp	x29, x30, [sp, #0x40]
000000000002aaf4	ldp	x20, x19, [sp, #0x30]
000000000002aaf8	ldp	x22, x21, [sp, #0x20]
000000000002aafc	ldp	x24, x23, [sp, #0x10]
000000000002ab00	ldp	x26, x25, [sp], #0x50
000000000002ab04	ret
000000000002ab08	mov	x23, #-0x11
000000000002ab0c	b	0x2aa2c
000000000002ab10	mov	x0, x19
000000000002ab14	bl	0x517b8 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ZN6kotlin13RepeatedTimerINS_12steady_clockEE3RunIZNS_2gc8internal24GCSchedulerDataWithTimerIS1_EC1ERNS4_17GCSchedulerConfigENSt3__18functionIFvvEEEEUlvE_EEvOT_:
000000000002ab18	sub	sp, sp, #0x70
000000000002ab1c	stp	x28, x27, [sp, #0x10]
000000000002ab20	stp	x26, x25, [sp, #0x20]
000000000002ab24	stp	x24, x23, [sp, #0x30]
000000000002ab28	stp	x22, x21, [sp, #0x40]
000000000002ab2c	stp	x20, x19, [sp, #0x50]
000000000002ab30	stp	x29, x30, [sp, #0x60]
000000000002ab34	add	x29, sp, #0x60
000000000002ab38	mov	x20, x1
000000000002ab3c	mov	x19, x0
000000000002ab40	str	x0, [sp]
000000000002ab44	mov	w8, #0x1
000000000002ab48	strb	w8, [sp, #0x8]
000000000002ab4c	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002ab50	ldrb	w8, [x19, #0x70]
000000000002ab54	cbz	w8, 0x2ad58
000000000002ab58	mov	x22, #0x914f0000
000000000002ab5c	movk	x22, #0x4e94, lsl #32
000000000002ab60	add	x21, x19, #0x40
000000000002ab64	mov	x23, #0x53f7
000000000002ab68	movk	x23, #0xa5e3, lsl #16
000000000002ab6c	movk	x23, #0xc49b, lsl #32
000000000002ab70	movk	x23, #0x20, lsl #48
000000000002ab74	mov	w24, #0x3e8
000000000002ab78	mov	x25, #0xac09
000000000002ab7c	movk	x25, #0x5a1c, lsl #16
000000000002ab80	movk	x25, #0x3b64, lsl #32
000000000002ab84	movk	x25, #0xffdf, lsl #48
000000000002ab88	b	0x2abb8
000000000002ab8c	mov	w8, #0x1
000000000002ab90	strb	w8, [sp, #0x8]
000000000002ab94	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002ab98	ldr	x8, [x19, #0x78]
000000000002ab9c	adds	x8, x0, x8
000000000002aba0	asr	x9, x8, #63
000000000002aba4	eor	x9, x9, #0x8000000000000000
000000000002aba8	csel	x8, x9, x8, vs
000000000002abac	str	x8, [x19, #0x80]
000000000002abb0	ldrb	w8, [x19, #0x70]
000000000002abb4	cbz	w8, 0x2ad4c
000000000002abb8	strb	wzr, [x19, #0x88]
000000000002abbc	ldr	x27, [x19, #0x80]
000000000002abc0	b	0x2abcc
000000000002abc4	ldrb	w8, [x19, #0x88]
000000000002abc8	cbnz	w8, 0x2abb0
000000000002abcc	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002abd0	cmp	x0, x27
000000000002abd4	b.ge	0x2acb0
000000000002abd8	subs	x8, x27, x0
000000000002abdc	asr	x9, x8, #63
000000000002abe0	eor	x9, x9, #0x8000000000000000
000000000002abe4	csel	x8, x9, x8, vs
000000000002abe8	cmp	x8, x22
000000000002abec	csel	x26, x8, x22, lt
000000000002abf0	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002abf4	add	x28, x0, x26
000000000002abf8	b	0x2ac20
000000000002abfc	mov	x8, #-0x8000000000000000
000000000002ac00	add	x2, x8, x26
000000000002ac04	mov	x1, sp
000000000002ac08	mov	x0, x21
000000000002ac0c	bl	0x5183c ; symbol stub for: __ZNSt3__118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE
000000000002ac10	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002ac14	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002ac18	cmp	x0, x28
000000000002ac1c	b.ge	0x2abc4
000000000002ac20	ldrb	w8, [x19, #0x88]
000000000002ac24	cbnz	w8, 0x2abb0
000000000002ac28	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002ac2c	cmp	x0, x28
000000000002ac30	b.ge	0x2abc4
000000000002ac34	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002ac38	sub	x26, x28, x0
000000000002ac3c	cmp	x26, #0x1
000000000002ac40	b.lt	0x2ac14
000000000002ac44	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002ac48	bl	0x518a8 ; symbol stub for: __ZNSt3__16chrono12system_clock3nowEv
000000000002ac4c	cbz	x0, 0x2ac78
000000000002ac50	cmp	x0, #0x1
000000000002ac54	b.lt	0x2ac90
000000000002ac58	cmp	x0, x23
000000000002ac5c	b.le	0x2ac98
000000000002ac60	mov	x8, #0x7fffffffffffffff
000000000002ac64	mov	x2, #0x7fffffffffffffff
000000000002ac68	sub	x9, x2, x26
000000000002ac6c	cmp	x8, x9
000000000002ac70	b.le	0x2ac00
000000000002ac74	b	0x2ac04
000000000002ac78	mov	x8, #0x0
000000000002ac7c	mov	x2, #0x7fffffffffffffff
000000000002ac80	sub	x9, x2, x26
000000000002ac84	cmp	x8, x9
000000000002ac88	b.le	0x2ac00
000000000002ac8c	b	0x2ac04
000000000002ac90	cmp	x0, x25
000000000002ac94	b.lt	0x2abfc
000000000002ac98	mul	x8, x0, x24
000000000002ac9c	mov	x2, #0x7fffffffffffffff
000000000002aca0	sub	x9, x2, x26
000000000002aca4	cmp	x8, x9
000000000002aca8	b.le	0x2ac00
000000000002acac	b	0x2ac04
000000000002acb0	ldrb	w8, [sp, #0x8]
000000000002acb4	cbz	w8, 0x2ada8
000000000002acb8	ldr	x0, [sp]
000000000002acbc	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002acc0	strb	wzr, [sp, #0x8]
000000000002acc4	ldr	x26, [x20]
000000000002acc8	ldr	x8, [x26, #0x10]
000000000002accc	ldar	w8, [x8]
000000000002acd0	cmp	w8, #0x1
000000000002acd4	b.eq	0x2ad34
000000000002acd8	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002acdc	add	x8, x26, #0x38
000000000002ace0	ldar	x8, [x8]
000000000002ace4	ldr	x9, [x26, #0x30]
000000000002ace8	add	x9, x9, #0x18
000000000002acec	ldar	x9, [x9]
000000000002acf0	mul	x10, x9, x24
000000000002acf4	smulh	x11, x9, x24
000000000002acf8	cmp	x11, x10, asr #63
000000000002acfc	asr	x9, x9, #63
000000000002ad00	eor	x9, x9, #0x7fffffffffffffff
000000000002ad04	csel	x9, x9, x10, ne
000000000002ad08	adds	x8, x8, x9
000000000002ad0c	asr	x9, x8, #63
000000000002ad10	eor	x9, x9, #0x8000000000000000
000000000002ad14	csel	x8, x9, x8, vs
000000000002ad18	cmp	x0, x8
000000000002ad1c	b.lt	0x2ad34
000000000002ad20	ldr	x0, [x26, #0x58]
000000000002ad24	cbz	x0, 0x2adbc
000000000002ad28	ldr	x8, [x0]
000000000002ad2c	ldr	x8, [x8, #0x30]
000000000002ad30	blr	x8
000000000002ad34	ldr	x0, [sp]
000000000002ad38	cbz	x0, 0x2ad94
000000000002ad3c	ldrb	w8, [sp, #0x8]
000000000002ad40	cbnz	w8, 0x2ad80
000000000002ad44	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002ad48	b	0x2ab8c
000000000002ad4c	ldrb	w8, [sp, #0x8]
000000000002ad50	cbz	w8, 0x2ad60
000000000002ad54	ldr	x19, [sp]
000000000002ad58	mov	x0, x19
000000000002ad5c	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002ad60	ldp	x29, x30, [sp, #0x60]
000000000002ad64	ldp	x20, x19, [sp, #0x50]
000000000002ad68	ldp	x22, x21, [sp, #0x40]
000000000002ad6c	ldp	x24, x23, [sp, #0x30]
000000000002ad70	ldp	x26, x25, [sp, #0x20]
000000000002ad74	ldp	x28, x27, [sp, #0x10]
000000000002ad78	add	sp, sp, #0x70
000000000002ad7c	ret
000000000002ad80	adr	x1, #0x2a302 ; literal pool for: "unique_lock::lock: already locked"
000000000002ad84	nop
000000000002ad88	mov	w0, #0xb
000000000002ad8c	bl	0x5186c ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000002ad90	b	0x2adc0
000000000002ad94	adr	x1, #0x2a2c5 ; literal pool for: "unique_lock::lock: references null mutex"
000000000002ad98	nop
000000000002ad9c	mov	w0, #0x1
000000000002ada0	bl	0x5186c ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000002ada4	b	0x2adc0
000000000002ada8	adr	x1, #0x2b363 ; literal pool for: "unique_lock::unlock: not locked"
000000000002adac	nop
000000000002adb0	mov	w0, #0x1
000000000002adb4	bl	0x5186c ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000002adb8	b	0x2adc0
000000000002adbc	bl	__ZNSt3__125__throw_bad_function_callEv
000000000002adc0	brk	#0x1
000000000002adc4	bl	___clang_call_terminate
000000000002adc8	b	0x2adcc
000000000002adcc	mov	x19, x0
000000000002add0	ldrb	w8, [sp, #0x8]
000000000002add4	cbz	w8, 0x2ade0
000000000002add8	ldr	x0, [sp]
000000000002addc	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002ade0	mov	x0, x19
000000000002ade4	bl	___clang_call_terminate
__ZN6kotlin12ScopedThread3RunIMNS_13RepeatedTimerINS_12steady_clockEEEDoFvOZNS_2gc8internal24GCSchedulerDataWithTimerIS3_EC1ERNS5_17GCSchedulerConfigENSt3__18functionIFvvEEEEUlvE_EJPS4_SF_EEENSB_13invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOSL_DpOSM_:
000000000002ade8	stp	x22, x21, [sp, #-0x30]!
000000000002adec	stp	x20, x19, [sp, #0x10]
000000000002adf0	stp	x29, x30, [sp, #0x20]
000000000002adf4	add	x29, sp, #0x20
000000000002adf8	mov	x19, x3
000000000002adfc	mov	x21, x2
000000000002ae00	mov	x20, x1
000000000002ae04	ldrb	w8, [x0, #0x18]
000000000002ae08	cbz	w8, 0x2ae1c
000000000002ae0c	ldrsb	w8, [x0, #0x17]
000000000002ae10	tbz	w8, #0x1f, 0x2ae18
000000000002ae14	ldr	x0, [x0]
000000000002ae18	bl	0x51cbc ; symbol stub for: _pthread_setname_np
000000000002ae1c	ldr	x8, [x21]
000000000002ae20	ldp	x2, x9, [x20]
000000000002ae24	add	x0, x8, x9, asr #1
000000000002ae28	tbz	w9, #0x0, 0x2ae34
000000000002ae2c	ldr	x8, [x0]
000000000002ae30	ldr	x2, [x8, w2, uxtw]
000000000002ae34	mov	x1, x19
000000000002ae38	ldp	x29, x30, [sp, #0x20]
000000000002ae3c	ldp	x20, x19, [sp, #0x10]
000000000002ae40	ldp	x22, x21, [sp], #0x30
000000000002ae44	br	x2
000000000002ae48	bl	___clang_call_terminate
__ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvN6kotlin12ScopedThread10attributesEOMNS7_13RepeatedTimerINS7_12steady_clockEEEDoFvOZNS7_2gc8internal24GCSchedulerDataWithTimerISB_EC1ERNSD_17GCSchedulerConfigENS_8functionIFvvEEEEUlvE_EOPSC_SN_ES9_SP_SR_SM_EEEEEPvSW_:
000000000002ae4c	sub	sp, sp, #0x40
000000000002ae50	stp	x20, x19, [sp, #0x20]
000000000002ae54	stp	x29, x30, [sp, #0x30]
000000000002ae58	add	x29, sp, #0x30
000000000002ae5c	mov	x19, x0
000000000002ae60	bl	0x51860 ; symbol stub for: __ZNSt3__119__thread_local_dataEv
000000000002ae64	ldr	x1, [x19]
000000000002ae68	str	xzr, [x19]
000000000002ae6c	ldr	x0, [x0]
000000000002ae70	bl	0x51cc8 ; symbol stub for: _pthread_setspecific
000000000002ae74	add	x1, x19, #0x30
000000000002ae78	add	x2, x19, #0x40
000000000002ae7c	add	x3, x19, #0x48
000000000002ae80	ldr	x8, [x19, #0x8]
000000000002ae84	strb	wzr, [sp]
000000000002ae88	strb	wzr, [sp, #0x18]
000000000002ae8c	ldrb	w9, [x19, #0x28]
000000000002ae90	cbz	w9, 0x2aeb4
000000000002ae94	ldr	q0, [x19, #0x10]
000000000002ae98	str	q0, [sp]
000000000002ae9c	ldr	x9, [x19, #0x20]
000000000002aea0	str	x9, [sp, #0x10]
000000000002aea4	stp	xzr, xzr, [x19, #0x18]
000000000002aea8	str	xzr, [x19, #0x10]
000000000002aeac	mov	w9, #0x1
000000000002aeb0	strb	w9, [sp, #0x18]
000000000002aeb4	mov	x0, sp
000000000002aeb8	blr	x8
000000000002aebc	ldrb	w8, [sp, #0x18]
000000000002aec0	cbz	w8, 0x2aed4
000000000002aec4	ldrsb	w8, [sp, #0x17]
000000000002aec8	tbz	w8, #0x1f, 0x2aed4
000000000002aecc	ldr	x0, [sp]
000000000002aed0	bl	0x51a64 ; symbol stub for: _free
000000000002aed4	ldrb	w8, [x19, #0x28]
000000000002aed8	cbz	w8, 0x2aeec
000000000002aedc	ldrsb	w8, [x19, #0x27]
000000000002aee0	tbz	w8, #0x1f, 0x2aeec
000000000002aee4	ldr	x0, [x19, #0x10]
000000000002aee8	bl	0x51a64 ; symbol stub for: _free
000000000002aeec	ldr	x0, [x19]
000000000002aef0	str	xzr, [x19]
000000000002aef4	cbz	x0, 0x2af00
000000000002aef8	bl	0x51800 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002aefc	bl	0x51914 ; symbol stub for: __ZdlPv
000000000002af00	mov	x0, x19
000000000002af04	bl	0x51914 ; symbol stub for: __ZdlPv
000000000002af08	mov	x0, #0x0
000000000002af0c	ldp	x29, x30, [sp, #0x30]
000000000002af10	ldp	x20, x19, [sp, #0x20]
000000000002af14	add	sp, sp, #0x40
000000000002af18	ret
000000000002af1c	mov	x20, x0
000000000002af20	ldrb	w8, [sp, #0x18]
000000000002af24	cbz	w8, 0x2af4c
000000000002af28	ldrsb	w8, [sp, #0x17]
000000000002af2c	tbz	w8, #0x1f, 0x2af4c
000000000002af30	ldr	x0, [sp]
000000000002af34	bl	0x51a64 ; symbol stub for: _free
000000000002af38	b	0x2af4c
000000000002af3c	mov	x20, x0
000000000002af40	b	0x2af4c
000000000002af44	mov	x20, x0
000000000002af48	cbz	x19, 0x2af80
000000000002af4c	ldrb	w8, [x19, #0x28]
000000000002af50	cbz	w8, 0x2af64
000000000002af54	ldrsb	w8, [x19, #0x27]
000000000002af58	tbz	w8, #0x1f, 0x2af64
000000000002af5c	ldr	x0, [x19, #0x10]
000000000002af60	bl	0x51a64 ; symbol stub for: _free
000000000002af64	ldr	x0, [x19]
000000000002af68	str	xzr, [x19]
000000000002af6c	cbz	x0, 0x2af78
000000000002af70	bl	0x51800 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002af74	bl	0x51914 ; symbol stub for: __ZdlPv
000000000002af78	mov	x0, x19
000000000002af7c	bl	0x51914 ; symbol stub for: __ZdlPv
000000000002af80	mov	x0, x20
000000000002af84	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEED1Ev:
000000000002af88	stp	x20, x19, [sp, #-0x20]!
000000000002af8c	stp	x29, x30, [sp, #0x10]
000000000002af90	add	x29, sp, #0x10
000000000002af94	mov	x19, x0
000000000002af98	adr	x8, #0x3b528
000000000002af9c	nop
000000000002afa0	str	x8, [x0], #0x60
000000000002afa4	bl	__ZN6kotlin13RepeatedTimerINS_12steady_clockEED2Ev
000000000002afa8	add	x8, x19, #0x40
000000000002afac	ldr	x0, [x19, #0x58]
000000000002afb0	cmp	x8, x0
000000000002afb4	b.eq	0x2afc8
000000000002afb8	cbz	x0, 0x2afd4
000000000002afbc	ldr	x8, [x0]
000000000002afc0	ldr	x8, [x8, #0x28]
000000000002afc4	b	0x2afd0
000000000002afc8	ldr	x8, [x0]
000000000002afcc	ldr	x8, [x8, #0x20]
000000000002afd0	blr	x8
000000000002afd4	mov	x0, x19
000000000002afd8	ldp	x29, x30, [sp, #0x10]
000000000002afdc	ldp	x20, x19, [sp], #0x20
000000000002afe0	ret
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEED0Ev:
000000000002afe4	stp	x20, x19, [sp, #-0x20]!
000000000002afe8	stp	x29, x30, [sp, #0x10]
000000000002afec	add	x29, sp, #0x10
000000000002aff0	mov	x19, x0
000000000002aff4	adr	x8, #0x3b4cc
000000000002aff8	nop
000000000002affc	str	x8, [x0], #0x60
000000000002b000	bl	__ZN6kotlin13RepeatedTimerINS_12steady_clockEED2Ev
000000000002b004	add	x8, x19, #0x40
000000000002b008	ldr	x0, [x19, #0x58]
000000000002b00c	cmp	x8, x0
000000000002b010	b.eq	0x2b024
000000000002b014	cbz	x0, 0x2b030
000000000002b018	ldr	x8, [x0]
000000000002b01c	ldr	x8, [x8, #0x28]
000000000002b020	b	0x2b02c
000000000002b024	ldr	x8, [x0]
000000000002b028	ldr	x8, [x8, #0x20]
000000000002b02c	blr	x8
000000000002b030	mov	x0, x19
000000000002b034	ldp	x29, x30, [sp, #0x10]
000000000002b038	ldp	x20, x19, [sp], #0x20
000000000002b03c	b	0x51914 ; symbol stub for: __ZdlPv
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEE20UpdateFromThreadDataERNS0_21GCSchedulerThreadDataE:
000000000002b040	stp	x29, x30, [sp, #-0x10]!
000000000002b044	mov	x29, sp
000000000002b048	ldr	x8, [x1, #0x28]
000000000002b04c	add	x9, x0, #0x20
000000000002b050	ldaxr	x10, [x9]
000000000002b054	add	x10, x10, x8
000000000002b058	stlxr	w11, x10, [x9]
000000000002b05c	cbnz	w11, 0x2b050
000000000002b060	add	x8, x0, #0x20
000000000002b064	ldar	x8, [x8]
000000000002b068	add	x9, x0, #0x28
000000000002b06c	ldar	x9, [x9]
000000000002b070	add	x8, x9, x8
000000000002b074	ldr	x9, [x0, #0x18]
000000000002b078	add	x9, x9, #0x20
000000000002b07c	ldar	x9, [x9]
000000000002b080	cmp	x8, x9
000000000002b084	b.lo	0x2b09c
000000000002b088	ldr	x0, [x0, #0x58]
000000000002b08c	cbz	x0, 0x2b0a4
000000000002b090	ldr	x8, [x0]
000000000002b094	ldr	x8, [x8, #0x30]
000000000002b098	blr	x8
000000000002b09c	ldp	x29, x30, [sp], #0x10
000000000002b0a0	ret
000000000002b0a4	bl	__ZNSt3__125__throw_bad_function_callEv
000000000002b0a8	brk	#0x1
000000000002b0ac	bl	___clang_call_terminate
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEE15OnPerformFullGCEv:
000000000002b0b0	stp	x22, x21, [sp, #-0x30]!
000000000002b0b4	stp	x20, x19, [sp, #0x10]
000000000002b0b8	stp	x29, x30, [sp, #0x20]
000000000002b0bc	add	x29, sp, #0x20
000000000002b0c0	mov	x19, x0
000000000002b0c4	add	x8, x0, #0x20
000000000002b0c8	stlr	xzr, [x8]
000000000002b0cc	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002b0d0	add	x8, x19, #0x38
000000000002b0d4	stlr	x0, [x8]
000000000002b0d8	ldr	x8, [x19, #0x8]
000000000002b0dc	add	x8, x8, #0x18
000000000002b0e0	ldar	x21, [x8]
000000000002b0e4	add	x20, x19, #0x60
000000000002b0e8	mov	x0, x20
000000000002b0ec	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002b0f0	mov	w8, #0x3e8
000000000002b0f4	mul	x9, x21, x8
000000000002b0f8	smulh	x8, x21, x8
000000000002b0fc	cmp	x8, x9, asr #63
000000000002b100	asr	x8, x21, #63
000000000002b104	eor	x8, x8, #0x7fffffffffffffff
000000000002b108	csel	x8, x8, x9, ne
000000000002b10c	str	x8, [x19, #0xd8]
000000000002b110	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002b114	ldr	x8, [x19, #0xd8]
000000000002b118	adds	x8, x0, x8
000000000002b11c	asr	x9, x8, #63
000000000002b120	eor	x9, x9, #0x8000000000000000
000000000002b124	csel	x8, x9, x8, vs
000000000002b128	str	x8, [x19, #0xe0]
000000000002b12c	mov	w8, #0x1
000000000002b130	strb	w8, [x19, #0xe8]
000000000002b134	mov	x0, x20
000000000002b138	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002b13c	add	x0, x19, #0xa0
000000000002b140	ldp	x29, x30, [sp, #0x20]
000000000002b144	ldp	x20, x19, [sp, #0x10]
000000000002b148	ldp	x22, x21, [sp], #0x30
000000000002b14c	b	0x51830 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002b150	bl	___clang_call_terminate
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEE19UpdateAliveSetBytesEm:
000000000002b154	add	x8, x0, #0x28
000000000002b158	stlr	x1, [x8]
000000000002b15c	ldr	x8, [x0, #0x18]
000000000002b160	add	x8, x8, #0x10
000000000002b164	ldarb	w8, [x8]
000000000002b168	tbz	w8, #0x0, 0x2b1dc
000000000002b16c	ucvtf	d0, x1
000000000002b170	ldr	x8, [x0, #0x18]
000000000002b174	add	x8, x8, #0x28
000000000002b178	ldar	x8, [x8]
000000000002b17c	fmov	d1, x8
000000000002b180	fdiv	d0, d0, d1
000000000002b184	fabs	d1, d0
000000000002b188	fcmp	d0, d0
000000000002b18c	mov	x8, #0x7ff0000000000000
000000000002b190	fmov	d2, x8
000000000002b194	fccmp	d1, d2, #0x4, vc
000000000002b198	b.eq	0x2b1dc
000000000002b19c	ldr	x8, [x0, #0x18]
000000000002b1a0	add	x8, x8, #0x30
000000000002b1a4	ldar	x8, [x8]
000000000002b1a8	scvtf	d1, x8
000000000002b1ac	ldr	x8, [x0, #0x18]
000000000002b1b0	add	x8, x8, #0x38
000000000002b1b4	ldar	x8, [x8]
000000000002b1b8	scvtf	d2, x8
000000000002b1bc	fcmp	d0, d1
000000000002b1c0	fcsel	d0, d1, d0, mi
000000000002b1c4	fcmp	d0, d2
000000000002b1c8	fcsel	d0, d2, d0, gt
000000000002b1cc	fcvtzs	x8, d0
000000000002b1d0	ldr	x9, [x0, #0x18]
000000000002b1d4	add	x9, x9, #0x20
000000000002b1d8	stlr	x8, [x9]
000000000002b1dc	ret
__ZN6kotlin13RepeatedTimerINS_12steady_clockEED2Ev:
000000000002b1e0	stp	x22, x21, [sp, #-0x30]!
000000000002b1e4	stp	x20, x19, [sp, #0x10]
000000000002b1e8	stp	x29, x30, [sp, #0x20]
000000000002b1ec	add	x29, sp, #0x20
000000000002b1f0	mov	x19, x0
000000000002b1f4	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002b1f8	strb	wzr, [x19, #0x70]
000000000002b1fc	mov	w8, #0x1
000000000002b200	strb	w8, [x19, #0x88]
000000000002b204	mov	x0, x19
000000000002b208	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002b20c	add	x20, x19, #0x40
000000000002b210	mov	x0, x20
000000000002b214	bl	0x51830 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002b218	add	x21, x19, #0x90
000000000002b21c	mov	x0, x21
000000000002b220	bl	0x518b4 ; symbol stub for: __ZNSt3__16thread4joinEv
000000000002b224	ldr	x8, [x21]
000000000002b228	cbz	x8, 0x2b234
000000000002b22c	mov	x0, x21
000000000002b230	bl	0x518b4 ; symbol stub for: __ZNSt3__16thread4joinEv
000000000002b234	mov	x0, x21
000000000002b238	bl	0x518c0 ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002b23c	mov	x0, x20
000000000002b240	bl	0x51854 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000002b244	mov	x0, x19
000000000002b248	ldp	x29, x30, [sp, #0x20]
000000000002b24c	ldp	x20, x19, [sp, #0x10]
000000000002b250	ldp	x22, x21, [sp], #0x30
000000000002b254	b	0x51890 ; symbol stub for: __ZNSt3__15mutexD1Ev
000000000002b258	mov	x19, x0
000000000002b25c	mov	x0, x21
000000000002b260	bl	0x518c0 ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002b264	mov	x0, x19
000000000002b268	bl	___clang_call_terminate
000000000002b26c	b	0x2b270
000000000002b270	mov	x20, x0
000000000002b274	add	x0, x19, #0x90
000000000002b278	bl	__ZN6kotlin12ScopedThreadD1Ev
000000000002b27c	add	x0, x19, #0x40
000000000002b280	bl	0x51854 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000002b284	mov	x0, x19
000000000002b288	bl	0x51890 ; symbol stub for: __ZNSt3__15mutexD1Ev
000000000002b28c	mov	x0, x20
000000000002b290	bl	___clang_call_terminate
__ZN6kotlin12ScopedThreadD1Ev:
000000000002b294	stp	x20, x19, [sp, #-0x20]!
000000000002b298	stp	x29, x30, [sp, #0x10]
000000000002b29c	add	x29, sp, #0x10
000000000002b2a0	mov	x19, x0
000000000002b2a4	ldr	x8, [x0]
000000000002b2a8	cbz	x8, 0x2b2b4
000000000002b2ac	mov	x0, x19
000000000002b2b0	bl	0x518b4 ; symbol stub for: __ZNSt3__16thread4joinEv
000000000002b2b4	mov	x0, x19
000000000002b2b8	ldp	x29, x30, [sp, #0x10]
000000000002b2bc	ldp	x20, x19, [sp], #0x20
000000000002b2c0	b	0x518c0 ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002b2c4	mov	x20, x0
000000000002b2c8	mov	x0, x19
000000000002b2cc	bl	0x518c0 ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002b2d0	mov	x0, x20
000000000002b2d4	bl	___clang_call_terminate
__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv:
000000000002b2d8	sub	sp, sp, #0x40
000000000002b2dc	stp	x22, x21, [sp, #0x10]
000000000002b2e0	stp	x20, x19, [sp, #0x20]
000000000002b2e4	stp	x29, x30, [sp, #0x30]
000000000002b2e8	add	x29, sp, #0x30
000000000002b2ec	adr	x20, #0x5b757
000000000002b2f0	nop
000000000002b2f4	ldarb	w8, [x20]
000000000002b2f8	tbz	w8, #0x0, 0x2b380
000000000002b2fc	mov	x19, x0
000000000002b300	ldr	x8, [x0, #0x8]
000000000002b304	ldr	x8, [x8, #0x110]
000000000002b308	add	x0, x8, #0x48
000000000002b30c	bl	__ZN6kotlin2gc22ConcurrentMarkAndSweep10ThreadData14OnSuspendForGCEv
000000000002b310	adr	x0, #0x41640
000000000002b314	nop
000000000002b318	str	x0, [sp]
000000000002b31c	mov	w8, #0x1
000000000002b320	strb	w8, [sp, #0x8]
000000000002b324	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002b328	bl	__ZN5konan15currentThreadIdEv
000000000002b32c	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002b330	add	x21, x19, #0x10
000000000002b334	ldarb	w8, [x21]
000000000002b338	and	w22, w8, #0x1
000000000002b33c	mov	w8, #0x1
000000000002b340	stlrb	w8, [x21]
000000000002b344	ldarb	w8, [x20]
000000000002b348	tbz	w8, #0x0, 0x2b368
000000000002b34c	adr	x19, #0x415a4
000000000002b350	nop
000000000002b354	mov	x1, sp
000000000002b358	mov	x0, x19
000000000002b35c	bl	0x51848 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
000000000002b360	ldarb	w8, [x20]
000000000002b364	tbnz	w8, #0x0, 0x2b354
000000000002b368	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002b36c	stlrb	w22, [x21]
000000000002b370	ldrb	w8, [sp, #0x8]
000000000002b374	cbz	w8, 0x2b380
000000000002b378	ldr	x0, [sp]
000000000002b37c	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002b380	ldp	x29, x30, [sp, #0x30]
000000000002b384	ldp	x20, x19, [sp, #0x20]
000000000002b388	ldp	x22, x21, [sp, #0x10]
000000000002b38c	add	sp, sp, #0x40
000000000002b390	ret
000000000002b394	mov	x19, x0
000000000002b398	adr	x0, #0x415b8
000000000002b39c	nop
000000000002b3a0	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002b3a4	mov	x0, x19
000000000002b3a8	bl	___clang_call_terminate
000000000002b3ac	bl	___clang_call_terminate
__ZN6kotlin2mm24RequestThreadsSuspensionEv:
000000000002b3b0	stp	x20, x19, [sp, #-0x20]!
000000000002b3b4	stp	x29, x30, [sp, #0x10]
000000000002b3b8	add	x29, sp, #0x10
000000000002b3bc	adr	x0, #0x41594
000000000002b3c0	nop
000000000002b3c4	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002b3c8	adr	x8, #0x5b67b
000000000002b3cc	nop
000000000002b3d0	ldaxrb	w9, [x8]
000000000002b3d4	cbnz	w9, 0x2b3e8
000000000002b3d8	mov	w19, #0x1
000000000002b3dc	stlxrb	w9, w19, [x8]
000000000002b3e0	cbnz	w9, 0x2b3d0
000000000002b3e4	b	0x2b3f0
000000000002b3e8	mov	w19, #0x0
000000000002b3ec	clrex
000000000002b3f0	adr	x0, #0x41560
000000000002b3f4	nop
000000000002b3f8	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002b3fc	mov	x0, x19
000000000002b400	ldp	x29, x30, [sp, #0x10]
000000000002b404	ldp	x20, x19, [sp], #0x20
000000000002b408	ret
000000000002b40c	bl	___clang_call_terminate
__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_:
000000000002b410	stp	x22, x21, [sp, #-0x30]!
000000000002b414	stp	x20, x19, [sp, #0x10]
000000000002b418	stp	x29, x30, [sp, #0x20]
000000000002b41c	add	x29, sp, #0x20
000000000002b420	mov	x19, x0
000000000002b424	ldr	x20, [x0, #0x150]
000000000002b428	str	xzr, [x0, #0x150]
000000000002b42c	cbz	x20, 0x2b440
000000000002b430	mov	x0, x20
000000000002b434	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000002b438	mov	x0, x20
000000000002b43c	bl	0x51a64 ; symbol stub for: _free
000000000002b440	ldr	x0, [x19, #0x120]
000000000002b444	cbz	x0, 0x2b450
000000000002b448	str	x0, [x19, #0x128]
000000000002b44c	bl	0x51a64 ; symbol stub for: _free
000000000002b450	add	x0, x19, #0x118
000000000002b454	bl	__ZN6kotlin2gc2GC10ThreadDataD1Ev
000000000002b458	add	x0, x19, #0xd8
000000000002b45c	bl	__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv
000000000002b460	ldr	x8, [x19, #0x108]
000000000002b464	cbz	x8, 0x2b4a4
000000000002b468	add	x20, x19, #0xf8
000000000002b46c	ldp	x8, x0, [x19, #0xf8]
000000000002b470	ldr	x9, [x8, #0x8]
000000000002b474	ldr	x10, [x0]
000000000002b478	str	x9, [x10, #0x8]
000000000002b47c	ldr	x8, [x8, #0x8]
000000000002b480	str	x10, [x8]
000000000002b484	str	xzr, [x19, #0x108]
000000000002b488	cmp	x0, x20
000000000002b48c	b.eq	0x2b4a4
000000000002b490	ldr	x21, [x0, #0x8]
000000000002b494	bl	_mi_free
000000000002b498	mov	x0, x21
000000000002b49c	cmp	x21, x20
000000000002b4a0	b.ne	0x2b490
000000000002b4a4	ldr	x8, [x19, #0xf0]
000000000002b4a8	cbz	x8, 0x2b4e8
000000000002b4ac	add	x20, x19, #0xe0
000000000002b4b0	ldp	x8, x0, [x19, #0xe0]
000000000002b4b4	ldr	x9, [x8, #0x8]
000000000002b4b8	ldr	x10, [x0]
000000000002b4bc	str	x9, [x10, #0x8]
000000000002b4c0	ldr	x8, [x8, #0x8]
000000000002b4c4	str	x10, [x8]
000000000002b4c8	str	xzr, [x19, #0xf0]
000000000002b4cc	cmp	x0, x20
000000000002b4d0	b.eq	0x2b4e8
000000000002b4d4	ldr	x21, [x0, #0x8]
000000000002b4d8	bl	_mi_free
000000000002b4dc	mov	x0, x21
000000000002b4e0	cmp	x21, x20
000000000002b4e4	b.ne	0x2b4d4
000000000002b4e8	add	x0, x19, #0xa0
000000000002b4ec	bl	__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv
000000000002b4f0	ldr	x8, [x19, #0xd0]
000000000002b4f4	cbz	x8, 0x2b534
000000000002b4f8	add	x20, x19, #0xc0
000000000002b4fc	ldp	x8, x0, [x19, #0xc0]
000000000002b500	ldr	x9, [x8, #0x8]
000000000002b504	ldr	x10, [x0]
000000000002b508	str	x9, [x10, #0x8]
000000000002b50c	ldr	x8, [x8, #0x8]
000000000002b510	str	x10, [x8]
000000000002b514	str	xzr, [x19, #0xd0]
000000000002b518	cmp	x0, x20
000000000002b51c	b.eq	0x2b534
000000000002b520	ldr	x21, [x0, #0x8]
000000000002b524	bl	0x51a64 ; symbol stub for: _free
000000000002b528	mov	x0, x21
000000000002b52c	cmp	x21, x20
000000000002b530	b.ne	0x2b520
000000000002b534	ldr	x8, [x19, #0xb8]
000000000002b538	cbz	x8, 0x2b578
000000000002b53c	add	x20, x19, #0xa8
000000000002b540	ldp	x8, x0, [x19, #0xa8]
000000000002b544	ldr	x9, [x8, #0x8]
000000000002b548	ldr	x10, [x0]
000000000002b54c	str	x9, [x10, #0x8]
000000000002b550	ldr	x8, [x8, #0x8]
000000000002b554	str	x10, [x8]
000000000002b558	str	xzr, [x19, #0xb8]
000000000002b55c	cmp	x0, x20
000000000002b560	b.eq	0x2b578
000000000002b564	ldr	x21, [x0, #0x8]
000000000002b568	bl	0x51a64 ; symbol stub for: _free
000000000002b56c	mov	x0, x21
000000000002b570	cmp	x21, x20
000000000002b574	b.ne	0x2b564
000000000002b578	ldr	x0, [x19, #0x70]
000000000002b57c	cbz	x0, 0x2b590
000000000002b580	ldr	x20, [x0]
000000000002b584	bl	0x51a64 ; symbol stub for: _free
000000000002b588	mov	x0, x20
000000000002b58c	cbnz	x20, 0x2b580
000000000002b590	ldr	x0, [x19, #0x60]
000000000002b594	str	xzr, [x19, #0x60]
000000000002b598	cbz	x0, 0x2b5a0
000000000002b59c	bl	0x51a64 ; symbol stub for: _free
000000000002b5a0	ldr	x0, [x19, #0x48]
000000000002b5a4	cbz	x0, 0x2b5b0
000000000002b5a8	str	x0, [x19, #0x50]
000000000002b5ac	bl	0x51a64 ; symbol stub for: _free
000000000002b5b0	add	x0, x19, #0x10
000000000002b5b4	bl	__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv
000000000002b5b8	ldr	x8, [x19, #0x40]
000000000002b5bc	cbz	x8, 0x2b5fc
000000000002b5c0	add	x20, x19, #0x30
000000000002b5c4	ldp	x8, x0, [x19, #0x30]
000000000002b5c8	ldr	x9, [x8, #0x8]
000000000002b5cc	ldr	x10, [x0]
000000000002b5d0	str	x9, [x10, #0x8]
000000000002b5d4	ldr	x8, [x8, #0x8]
000000000002b5d8	str	x10, [x8]
000000000002b5dc	str	xzr, [x19, #0x40]
000000000002b5e0	cmp	x0, x20
000000000002b5e4	b.eq	0x2b5fc
000000000002b5e8	ldr	x21, [x0, #0x8]
000000000002b5ec	bl	0x51a64 ; symbol stub for: _free
000000000002b5f0	mov	x0, x21
000000000002b5f4	cmp	x21, x20
000000000002b5f8	b.ne	0x2b5e8
000000000002b5fc	ldr	x8, [x19, #0x28]
000000000002b600	cbz	x8, 0x2b640
000000000002b604	add	x20, x19, #0x18
000000000002b608	ldp	x8, x0, [x19, #0x18]
000000000002b60c	ldr	x9, [x8, #0x8]
000000000002b610	ldr	x10, [x0]
000000000002b614	str	x9, [x10, #0x8]
000000000002b618	ldr	x8, [x8, #0x8]
000000000002b61c	str	x10, [x8]
000000000002b620	str	xzr, [x19, #0x28]
000000000002b624	cmp	x0, x20
000000000002b628	b.eq	0x2b640
000000000002b62c	ldr	x19, [x0, #0x8]
000000000002b630	bl	0x51a64 ; symbol stub for: _free
000000000002b634	mov	x0, x19
000000000002b638	cmp	x19, x20
000000000002b63c	b.ne	0x2b62c
000000000002b640	ldp	x29, x30, [sp, #0x20]
000000000002b644	ldp	x20, x19, [sp, #0x10]
000000000002b648	ldp	x22, x21, [sp], #0x30
000000000002b64c	ret
__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv:
000000000002b650	stp	x22, x21, [sp, #-0x30]!
000000000002b654	stp	x20, x19, [sp, #0x10]
000000000002b658	stp	x29, x30, [sp, #0x20]
000000000002b65c	add	x29, sp, #0x20
000000000002b660	mov	x19, x0
000000000002b664	add	x8, x0, #0x8
000000000002b668	ldr	x9, [x0, #0x10]
000000000002b66c	cmp	x8, x9
000000000002b670	b.eq	0x2b688
000000000002b674	add	x10, x9, #0x18
000000000002b678	stlr	xzr, [x10]
000000000002b67c	ldr	x9, [x9, #0x8]
000000000002b680	cmp	x8, x9
000000000002b684	b.ne	0x2b674
000000000002b688	ldr	x8, [x19]
000000000002b68c	add	x20, x8, #0x30
000000000002b690	mov	w21, #0x1
000000000002b694	ldaxrb	w8, [x20]
000000000002b698	stxrb	w9, w21, [x20]
000000000002b69c	cbnz	w9, 0x2b694
000000000002b6a0	tbz	w8, #0x0, 0x2b6ac
000000000002b6a4	bl	0x51ce0 ; symbol stub for: _sched_yield
000000000002b6a8	b	0x2b694
000000000002b6ac	ldr	x8, [x19]
000000000002b6b0	ldr	x9, [x19, #0x18]
000000000002b6b4	cbz	x9, 0x2b6f4
000000000002b6b8	ldp	x11, x10, [x19, #0x8]
000000000002b6bc	ldr	x12, [x11, #0x8]
000000000002b6c0	ldr	x13, [x10]
000000000002b6c4	str	x12, [x13, #0x8]
000000000002b6c8	ldr	x12, [x11, #0x8]
000000000002b6cc	str	x13, [x12]
000000000002b6d0	ldr	x12, [x8]
000000000002b6d4	str	x10, [x12, #0x8]
000000000002b6d8	str	x12, [x10]
000000000002b6dc	str	x11, [x8]
000000000002b6e0	str	x8, [x11, #0x8]
000000000002b6e4	ldr	x10, [x8, #0x10]
000000000002b6e8	add	x9, x10, x9
000000000002b6ec	str	x9, [x8, #0x10]
000000000002b6f0	str	xzr, [x19, #0x18]
000000000002b6f4	ldr	x9, [x19, #0x30]
000000000002b6f8	cbz	x9, 0x2b73c
000000000002b6fc	add	x10, x8, #0x18
000000000002b700	ldp	x12, x11, [x19, #0x20]
000000000002b704	ldr	x13, [x12, #0x8]
000000000002b708	ldr	x14, [x11]
000000000002b70c	str	x13, [x14, #0x8]
000000000002b710	ldr	x13, [x12, #0x8]
000000000002b714	str	x14, [x13]
000000000002b718	ldr	x13, [x8, #0x18]
000000000002b71c	str	x11, [x13, #0x8]
000000000002b720	str	x13, [x11]
000000000002b724	str	x12, [x8, #0x18]
000000000002b728	str	x10, [x12, #0x8]
000000000002b72c	ldr	x10, [x8, #0x28]
000000000002b730	add	x9, x10, x9
000000000002b734	str	x9, [x8, #0x28]
000000000002b738	str	xzr, [x19, #0x30]
000000000002b73c	stlrb	wzr, [x20]
000000000002b740	ldp	x29, x30, [sp, #0x20]
000000000002b744	ldp	x20, x19, [sp, #0x10]
000000000002b748	ldp	x22, x21, [sp], #0x30
000000000002b74c	ret
000000000002b750	bl	___clang_call_terminate
__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv:
000000000002b754	stp	x22, x21, [sp, #-0x30]!
000000000002b758	stp	x20, x19, [sp, #0x10]
000000000002b75c	stp	x29, x30, [sp, #0x20]
000000000002b760	add	x29, sp, #0x20
000000000002b764	mov	x19, x0
000000000002b768	add	x8, x0, #0x8
000000000002b76c	ldr	x9, [x0, #0x10]
000000000002b770	cmp	x8, x9
000000000002b774	b.eq	0x2b78c
000000000002b778	add	x10, x9, #0x18
000000000002b77c	stlr	xzr, [x10]
000000000002b780	ldr	x9, [x9, #0x8]
000000000002b784	cmp	x8, x9
000000000002b788	b.ne	0x2b778
000000000002b78c	ldr	x8, [x19]
000000000002b790	add	x20, x8, #0x30
000000000002b794	mov	w21, #0x1
000000000002b798	ldaxrb	w8, [x20]
000000000002b79c	stxrb	w9, w21, [x20]
000000000002b7a0	cbnz	w9, 0x2b798
000000000002b7a4	tbz	w8, #0x0, 0x2b7b0
000000000002b7a8	bl	0x51ce0 ; symbol stub for: _sched_yield
000000000002b7ac	b	0x2b798
000000000002b7b0	ldr	x8, [x19]
000000000002b7b4	ldr	x9, [x19, #0x18]
000000000002b7b8	cbz	x9, 0x2b7f8
000000000002b7bc	ldp	x11, x10, [x19, #0x8]
000000000002b7c0	ldr	x12, [x11, #0x8]
000000000002b7c4	ldr	x13, [x10]
000000000002b7c8	str	x12, [x13, #0x8]
000000000002b7cc	ldr	x12, [x11, #0x8]
000000000002b7d0	str	x13, [x12]
000000000002b7d4	ldr	x12, [x8]
000000000002b7d8	str	x10, [x12, #0x8]
000000000002b7dc	str	x12, [x10]
000000000002b7e0	str	x11, [x8]
000000000002b7e4	str	x8, [x11, #0x8]
000000000002b7e8	ldr	x10, [x8, #0x10]
000000000002b7ec	add	x9, x10, x9
000000000002b7f0	str	x9, [x8, #0x10]
000000000002b7f4	str	xzr, [x19, #0x18]
000000000002b7f8	ldr	x9, [x19, #0x30]
000000000002b7fc	cbz	x9, 0x2b840
000000000002b800	add	x10, x8, #0x18
000000000002b804	ldp	x12, x11, [x19, #0x20]
000000000002b808	ldr	x13, [x12, #0x8]
000000000002b80c	ldr	x14, [x11]
000000000002b810	str	x13, [x14, #0x8]
000000000002b814	ldr	x13, [x12, #0x8]
000000000002b818	str	x14, [x13]
000000000002b81c	ldr	x13, [x8, #0x18]
000000000002b820	str	x11, [x13, #0x8]
000000000002b824	str	x13, [x11]
000000000002b828	str	x12, [x8, #0x18]
000000000002b82c	str	x10, [x12, #0x8]
000000000002b830	ldr	x10, [x8, #0x28]
000000000002b834	add	x9, x10, x9
000000000002b838	str	x9, [x8, #0x28]
000000000002b83c	str	xzr, [x19, #0x30]
000000000002b840	stlrb	wzr, [x20]
000000000002b844	ldp	x29, x30, [sp, #0x20]
000000000002b848	ldp	x20, x19, [sp, #0x10]
000000000002b84c	ldp	x22, x21, [sp], #0x30
000000000002b850	ret
000000000002b854	bl	___clang_call_terminate
__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv:
000000000002b858	stp	x22, x21, [sp, #-0x30]!
000000000002b85c	stp	x20, x19, [sp, #0x10]
000000000002b860	stp	x29, x30, [sp, #0x20]
000000000002b864	add	x29, sp, #0x20
000000000002b868	mov	x19, x0
000000000002b86c	add	x8, x0, #0x8
000000000002b870	ldr	x9, [x0, #0x10]
000000000002b874	cmp	x8, x9
000000000002b878	b.eq	0x2b890
000000000002b87c	add	x10, x9, #0x38
000000000002b880	stlr	xzr, [x10]
000000000002b884	ldr	x9, [x9, #0x8]
000000000002b888	cmp	x8, x9
000000000002b88c	b.ne	0x2b87c
000000000002b890	ldr	x8, [x19]
000000000002b894	add	x20, x8, #0x30
000000000002b898	mov	w21, #0x1
000000000002b89c	ldaxrb	w8, [x20]
000000000002b8a0	stxrb	w9, w21, [x20]
000000000002b8a4	cbnz	w9, 0x2b89c
000000000002b8a8	tbz	w8, #0x0, 0x2b8b4
000000000002b8ac	bl	0x51ce0 ; symbol stub for: _sched_yield
000000000002b8b0	b	0x2b89c
000000000002b8b4	ldr	x8, [x19]
000000000002b8b8	ldr	x9, [x19, #0x18]
000000000002b8bc	cbz	x9, 0x2b8fc
000000000002b8c0	ldp	x11, x10, [x19, #0x8]
000000000002b8c4	ldr	x12, [x11, #0x8]
000000000002b8c8	ldr	x13, [x10]
000000000002b8cc	str	x12, [x13, #0x8]
000000000002b8d0	ldr	x12, [x11, #0x8]
000000000002b8d4	str	x13, [x12]
000000000002b8d8	ldr	x12, [x8]
000000000002b8dc	str	x10, [x12, #0x8]
000000000002b8e0	str	x12, [x10]
000000000002b8e4	str	x11, [x8]
000000000002b8e8	str	x8, [x11, #0x8]
000000000002b8ec	ldr	x10, [x8, #0x10]
000000000002b8f0	add	x9, x10, x9
000000000002b8f4	str	x9, [x8, #0x10]
000000000002b8f8	str	xzr, [x19, #0x18]
000000000002b8fc	ldr	x9, [x19, #0x30]
000000000002b900	cbz	x9, 0x2b944
000000000002b904	add	x10, x8, #0x18
000000000002b908	ldp	x12, x11, [x19, #0x20]
000000000002b90c	ldr	x13, [x12, #0x8]
000000000002b910	ldr	x14, [x11]
000000000002b914	str	x13, [x14, #0x8]
000000000002b918	ldr	x13, [x12, #0x8]
000000000002b91c	str	x14, [x13]
000000000002b920	ldr	x13, [x8, #0x18]
000000000002b924	str	x11, [x13, #0x8]
000000000002b928	str	x13, [x11]
000000000002b92c	str	x12, [x8, #0x18]
000000000002b930	str	x10, [x12, #0x8]
000000000002b934	ldr	x10, [x8, #0x28]
000000000002b938	add	x9, x10, x9
000000000002b93c	str	x9, [x8, #0x28]
000000000002b940	str	xzr, [x19, #0x30]
000000000002b944	stlrb	wzr, [x20]
000000000002b948	ldp	x29, x30, [sp, #0x20]
000000000002b94c	ldp	x20, x19, [sp, #0x10]
000000000002b950	ldp	x22, x21, [sp], #0x30
000000000002b954	ret
000000000002b958	bl	___clang_call_terminate
__ZNSt3__110unique_ptrIN6kotlin14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS1_11std_support9allocatorIS4_EEE4NodeENS6_17allocator_deleterISA_NS7_ISA_EEEEED1Ev:
000000000002b95c	stp	x20, x19, [sp, #-0x20]!
000000000002b960	stp	x29, x30, [sp, #0x10]
000000000002b964	add	x29, sp, #0x10
000000000002b968	adrp	x8, 91 ; 0x86000
000000000002b96c	ldr	x19, [x8, #0xd30]
000000000002b970	str	xzr, [x8, #0xd30]
000000000002b974	cbz	x19, 0x2b990
000000000002b978	mov	x0, x19
000000000002b97c	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000002b980	mov	x0, x19
000000000002b984	ldp	x29, x30, [sp, #0x10]
000000000002b988	ldp	x20, x19, [sp], #0x20
000000000002b98c	b	0x51a64 ; symbol stub for: _free
000000000002b990	ldp	x29, x30, [sp, #0x10]
000000000002b994	ldp	x20, x19, [sp], #0x20
000000000002b998	ret
__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_:
000000000002b99c	sub	sp, sp, #0x70
000000000002b9a0	stp	x28, x27, [sp, #0x10]
000000000002b9a4	stp	x26, x25, [sp, #0x20]
000000000002b9a8	stp	x24, x23, [sp, #0x30]
000000000002b9ac	stp	x22, x21, [sp, #0x40]
000000000002b9b0	stp	x20, x19, [sp, #0x50]
000000000002b9b4	stp	x29, x30, [sp, #0x60]
000000000002b9b8	add	x29, sp, #0x60
000000000002b9bc	mov	x20, x1
000000000002b9c0	mov	x19, x0
000000000002b9c4	sub	x21, x20, #0x10
000000000002b9c8	sub	x26, x20, #0x20
000000000002b9cc	mov	x22, x19
000000000002b9d0	mov	x19, x22
000000000002b9d4	sub	x9, x20, x22
000000000002b9d8	asr	x8, x9, #4
000000000002b9dc	cmp	x8, #0x5
000000000002b9e0	b.ls	0x2bdcc
000000000002b9e4	cmp	x9, #0x1ef
000000000002b9e8	b.le	0x2bea0
000000000002b9ec	cmp	x8, #0x0
000000000002b9f0	cinc	x10, x8, lt
000000000002b9f4	asr	x27, x10, #1
000000000002b9f8	add	x22, x19, x27, lsl #4
000000000002b9fc	mov	w10, #0x3e71
000000000002ba00	cmp	x9, x10
000000000002ba04	b.lt	0x2ba38
000000000002ba08	add	x9, x8, #0x3
000000000002ba0c	cmp	x8, #0x0
000000000002ba10	csel	x8, x9, x8, lt
000000000002ba14	lsl	x8, x8, #2
000000000002ba18	and	x8, x8, #0xfffffffffffffff0
000000000002ba1c	add	x1, x19, x8
000000000002ba20	add	x3, x22, x8
000000000002ba24	mov	x0, x19
000000000002ba28	mov	x2, x22
000000000002ba2c	mov	x4, x21
000000000002ba30	bl	__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_
000000000002ba34	b	0x2ba48
000000000002ba38	mov	x0, x19
000000000002ba3c	mov	x1, x22
000000000002ba40	mov	x2, x21
000000000002ba44	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002ba48	mov	x23, x0
000000000002ba4c	ldr	x24, [x19, #0x8]
000000000002ba50	add	x8, x19, x27, lsl #4
000000000002ba54	ldr	x28, [x8, #0x8]
000000000002ba58	cmp	x28, x24
000000000002ba5c	csel	x2, x28, x24, lo
000000000002ba60	cbz	x2, 0x2bacc
000000000002ba64	ldr	x1, [x22]
000000000002ba68	ldr	x0, [x19]
000000000002ba6c	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002ba70	cbz	w0, 0x2bacc
000000000002ba74	tbnz	w0, #0x1f, 0x2bad4
000000000002ba78	mov	x8, x26
000000000002ba7c	b	0x2ba8c
000000000002ba80	mov	w0, #0x0
000000000002ba84	sub	x8, x27, #0x10
000000000002ba88	tbnz	w0, #0x1f, 0x2bae8
000000000002ba8c	cmp	x8, x19
000000000002ba90	b.eq	0x2bc70
000000000002ba94	mov	x27, x8
000000000002ba98	ldr	x25, [x8, #0x8]
000000000002ba9c	cmp	x28, x25
000000000002baa0	csel	x2, x28, x25, lo
000000000002baa4	cbz	x2, 0x2bab8
000000000002baa8	ldr	x1, [x22]
000000000002baac	ldr	x0, [x27]
000000000002bab0	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002bab4	cbnz	w0, 0x2ba84
000000000002bab8	cmp	x25, x28
000000000002babc	b.eq	0x2ba80
000000000002bac0	b.lo	0x2bae8
000000000002bac4	mov	w0, #0x1
000000000002bac8	b	0x2ba84
000000000002bacc	cmp	x24, x28
000000000002bad0	b.hs	0x2ba78
000000000002bad4	mov	x27, x21
000000000002bad8	add	x24, x19, #0x10
000000000002badc	cmp	x24, x27
000000000002bae0	b.lo	0x2bb3c
000000000002bae4	b	0x2bbc8
000000000002bae8	ldr	q0, [x19]
000000000002baec	str	q0, [sp]
000000000002baf0	ldr	q0, [x27]
000000000002baf4	str	q0, [x19]
000000000002baf8	ldr	q0, [sp]
000000000002bafc	str	q0, [x27]
000000000002bb00	add	w23, w23, #0x1
000000000002bb04	add	x24, x19, #0x10
000000000002bb08	cmp	x24, x27
000000000002bb0c	b.hs	0x2bbc8
000000000002bb10	b	0x2bb3c
000000000002bb14	ldr	q0, [x24]
000000000002bb18	str	q0, [sp]
000000000002bb1c	ldr	q0, [x27]
000000000002bb20	str	q0, [x24]
000000000002bb24	ldr	q0, [sp]
000000000002bb28	str	q0, [x27]
000000000002bb2c	add	w23, w23, #0x1
000000000002bb30	cmp	x24, x22
000000000002bb34	csel	x22, x27, x22, eq
000000000002bb38	add	x24, x24, #0x10
000000000002bb3c	ldr	x28, [x22, #0x8]
000000000002bb40	b	0x2bb50
000000000002bb44	cmp	x25, x28
000000000002bb48	b.hs	0x2bb74
000000000002bb4c	add	x24, x24, #0x10
000000000002bb50	ldr	x25, [x24, #0x8]
000000000002bb54	cmp	x28, x25
000000000002bb58	csel	x2, x28, x25, lo
000000000002bb5c	cbz	x2, 0x2bb44
000000000002bb60	ldr	x1, [x22]
000000000002bb64	ldr	x0, [x24]
000000000002bb68	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002bb6c	cbz	w0, 0x2bb44
000000000002bb70	tbnz	w0, #0x1f, 0x2bb4c
000000000002bb74	sub	x8, x27, #0x10
000000000002bb78	b	0x2bb88
000000000002bb7c	mov	w0, #0x0
000000000002bb80	sub	x8, x27, #0x10
000000000002bb84	tbnz	w0, #0x1f, 0x2bbc0
000000000002bb88	mov	x27, x8
000000000002bb8c	ldr	x25, [x8, #0x8]
000000000002bb90	cmp	x28, x25
000000000002bb94	csel	x2, x28, x25, lo
000000000002bb98	cbz	x2, 0x2bbac
000000000002bb9c	ldr	x1, [x22]
000000000002bba0	ldr	x0, [x27]
000000000002bba4	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002bba8	cbnz	w0, 0x2bb80
000000000002bbac	cmp	x25, x28
000000000002bbb0	b.eq	0x2bb7c
000000000002bbb4	b.lo	0x2bbc0
000000000002bbb8	mov	w0, #0x1
000000000002bbbc	b	0x2bb80
000000000002bbc0	cmp	x24, x27
000000000002bbc4	b.ls	0x2bb14
000000000002bbc8	cmp	x24, x22
000000000002bbcc	b.eq	0x2bc20
000000000002bbd0	ldr	x25, [x22, #0x8]
000000000002bbd4	ldr	x27, [x24, #0x8]
000000000002bbd8	cmp	x27, x25
000000000002bbdc	csel	x2, x27, x25, lo
000000000002bbe0	cbz	x2, 0x2bbfc
000000000002bbe4	ldr	x1, [x24]
000000000002bbe8	ldr	x0, [x22]
000000000002bbec	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002bbf0	cbz	w0, 0x2bbfc
000000000002bbf4	tbnz	w0, #0x1f, 0x2bc04
000000000002bbf8	b	0x2bc20
000000000002bbfc	cmp	x25, x27
000000000002bc00	b.hs	0x2bc20
000000000002bc04	ldr	q0, [x24]
000000000002bc08	str	q0, [sp]
000000000002bc0c	ldr	q0, [x22]
000000000002bc10	str	q0, [x24]
000000000002bc14	ldr	q0, [sp]
000000000002bc18	str	q0, [x22]
000000000002bc1c	add	w23, w23, #0x1
000000000002bc20	cbnz	w23, 0x2bc4c
000000000002bc24	mov	x0, x19
000000000002bc28	mov	x1, x24
000000000002bc2c	bl	__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEbT0_S9_T_
000000000002bc30	mov	x23, x0
000000000002bc34	add	x22, x24, #0x10
000000000002bc38	mov	x0, x22
000000000002bc3c	mov	x1, x20
000000000002bc40	bl	__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEbT0_S9_T_
000000000002bc44	cbnz	w0, 0x2bdc0
000000000002bc48	tbnz	w23, #0x0, 0x2b9d0
000000000002bc4c	sub	x8, x24, x19
000000000002bc50	sub	x9, x20, x24
000000000002bc54	cmp	x8, x9
000000000002bc58	b.ge	0x2bdac
000000000002bc5c	mov	x0, x19
000000000002bc60	mov	x1, x24
000000000002bc64	bl	__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_
000000000002bc68	add	x22, x24, #0x10
000000000002bc6c	b	0x2b9d0
000000000002bc70	add	x22, x19, #0x10
000000000002bc74	ldur	x23, [x20, #-0x8]
000000000002bc78	cmp	x23, x24
000000000002bc7c	csel	x2, x23, x24, lo
000000000002bc80	cbz	x2, 0x2bc9c
000000000002bc84	ldr	x1, [x21]
000000000002bc88	ldr	x0, [x19]
000000000002bc8c	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002bc90	cbz	w0, 0x2bc9c
000000000002bc94	tbz	w0, #0x1f, 0x2bcbc
000000000002bc98	b	0x2bca4
000000000002bc9c	cmp	x24, x23
000000000002bca0	b.hs	0x2bcbc
000000000002bca4	cmp	x22, x21
000000000002bca8	b.ne	0x2bd08
000000000002bcac	b	0x2bfb0
000000000002bcb0	cmp	x24, x23
000000000002bcb4	b.lo	0x2bce8
000000000002bcb8	add	x22, x22, #0x10
000000000002bcbc	cmp	x22, x21
000000000002bcc0	b.eq	0x2bfb0
000000000002bcc4	ldr	x23, [x22, #0x8]
000000000002bcc8	cmp	x23, x24
000000000002bccc	csel	x2, x23, x24, lo
000000000002bcd0	cbz	x2, 0x2bcb0
000000000002bcd4	ldr	x1, [x22]
000000000002bcd8	ldr	x0, [x19]
000000000002bcdc	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002bce0	cbz	w0, 0x2bcb0
000000000002bce4	tbz	w0, #0x1f, 0x2bcb8
000000000002bce8	ldr	q0, [x22]
000000000002bcec	str	q0, [sp]
000000000002bcf0	ldr	q0, [x21]
000000000002bcf4	str	q0, [x22], #0x10
000000000002bcf8	ldr	q0, [sp]
000000000002bcfc	str	q0, [x21]
000000000002bd00	cmp	x22, x21
000000000002bd04	b.eq	0x2bfb0
000000000002bd08	mov	x23, x21
000000000002bd0c	ldr	x24, [x19, #0x8]
000000000002bd10	b	0x2bd20
000000000002bd14	cmp	x24, x25
000000000002bd18	b.lo	0x2bd44
000000000002bd1c	add	x22, x22, #0x10
000000000002bd20	ldr	x25, [x22, #0x8]
000000000002bd24	cmp	x25, x24
000000000002bd28	csel	x2, x25, x24, lo
000000000002bd2c	cbz	x2, 0x2bd14
000000000002bd30	ldr	x1, [x22]
000000000002bd34	ldr	x0, [x19]
000000000002bd38	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002bd3c	cbz	w0, 0x2bd14
000000000002bd40	tbz	w0, #0x1f, 0x2bd1c
000000000002bd44	sub	x8, x23, #0x10
000000000002bd48	b	0x2bd54
000000000002bd4c	sub	x8, x23, #0x10
000000000002bd50	tbz	w0, #0x1f, 0x2bd88
000000000002bd54	mov	x23, x8
000000000002bd58	ldr	x25, [x8, #0x8]
000000000002bd5c	cmp	x25, x24
000000000002bd60	csel	x2, x25, x24, lo
000000000002bd64	cbz	x2, 0x2bd78
000000000002bd68	ldr	x1, [x23]
000000000002bd6c	ldr	x0, [x19]
000000000002bd70	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002bd74	cbnz	w0, 0x2bd4c
000000000002bd78	cmp	x24, x25
000000000002bd7c	b.hs	0x2bd88
000000000002bd80	mov	w0, #-0x1
000000000002bd84	b	0x2bd4c
000000000002bd88	cmp	x22, x23
000000000002bd8c	b.hs	0x2b9d0
000000000002bd90	ldr	q0, [x22]
000000000002bd94	str	q0, [sp]
000000000002bd98	ldr	q0, [x23]
000000000002bd9c	str	q0, [x22], #0x10
000000000002bda0	ldr	q0, [sp]
000000000002bda4	str	q0, [x23]
000000000002bda8	b	0x2bd0c
000000000002bdac	add	x0, x24, #0x10
000000000002bdb0	mov	x1, x20
000000000002bdb4	bl	__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_
000000000002bdb8	mov	x20, x24
000000000002bdbc	b	0x2b9c4
000000000002bdc0	mov	x20, x24
000000000002bdc4	tbz	w23, #0x0, 0x2b9c4
000000000002bdc8	b	0x2bfb0
000000000002bdcc	adr	x9, #0x267f4
000000000002bdd0	nop
000000000002bdd4	adr	x10, #0x10
000000000002bdd8	ldrb	w11, [x9, x8]
000000000002bddc	add	x10, x10, x11, lsl #2
000000000002bde0	br	x10
000000000002bde4	ldur	x20, [x20, #-0x8]
000000000002bde8	ldr	x22, [x19, #0x8]
000000000002bdec	cmp	x22, x20
000000000002bdf0	csel	x2, x22, x20, lo
000000000002bdf4	cbz	x2, 0x2bf90
000000000002bdf8	ldr	x1, [x19]
000000000002bdfc	ldr	x0, [x21]
000000000002be00	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002be04	cbz	w0, 0x2bf90
000000000002be08	tbnz	w0, #0x1f, 0x2bf98
000000000002be0c	b	0x2bfb0
000000000002be10	add	x1, x19, #0x10
000000000002be14	mov	x0, x19
000000000002be18	mov	x2, x21
000000000002be1c	ldp	x29, x30, [sp, #0x60]
000000000002be20	ldp	x20, x19, [sp, #0x50]
000000000002be24	ldp	x22, x21, [sp, #0x40]
000000000002be28	ldp	x24, x23, [sp, #0x30]
000000000002be2c	ldp	x26, x25, [sp, #0x20]
000000000002be30	ldp	x28, x27, [sp, #0x10]
000000000002be34	add	sp, sp, #0x70
000000000002be38	b	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002be3c	add	x1, x19, #0x10
000000000002be40	add	x2, x19, #0x20
000000000002be44	mov	x0, x19
000000000002be48	mov	x3, x21
000000000002be4c	ldp	x29, x30, [sp, #0x60]
000000000002be50	ldp	x20, x19, [sp, #0x50]
000000000002be54	ldp	x22, x21, [sp, #0x40]
000000000002be58	ldp	x24, x23, [sp, #0x30]
000000000002be5c	ldp	x26, x25, [sp, #0x20]
000000000002be60	ldp	x28, x27, [sp, #0x10]
000000000002be64	add	sp, sp, #0x70
000000000002be68	b	__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_
000000000002be6c	add	x1, x19, #0x10
000000000002be70	add	x2, x19, #0x20
000000000002be74	add	x3, x19, #0x30
000000000002be78	mov	x0, x19
000000000002be7c	mov	x4, x21
000000000002be80	ldp	x29, x30, [sp, #0x60]
000000000002be84	ldp	x20, x19, [sp, #0x50]
000000000002be88	ldp	x22, x21, [sp, #0x40]
000000000002be8c	ldp	x24, x23, [sp, #0x30]
000000000002be90	ldp	x26, x25, [sp, #0x20]
000000000002be94	ldp	x28, x27, [sp, #0x10]
000000000002be98	add	sp, sp, #0x70
000000000002be9c	b	__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_
000000000002bea0	add	x21, x19, #0x20
000000000002bea4	add	x1, x19, #0x10
000000000002bea8	mov	x0, x19
000000000002beac	mov	x2, x21
000000000002beb0	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002beb4	add	x8, x19, #0x30
000000000002beb8	cmp	x8, x20
000000000002bebc	b.eq	0x2bfb0
000000000002bec0	mov	x23, #0x0
000000000002bec4	b	0x2bee0
000000000002bec8	mov	x25, x19
000000000002becc	stp	x22, x24, [x25]
000000000002bed0	add	x8, x21, #0x10
000000000002bed4	add	x23, x23, #0x10
000000000002bed8	cmp	x8, x20
000000000002bedc	b.eq	0x2bfb0
000000000002bee0	mov	x26, x21
000000000002bee4	mov	x21, x8
000000000002bee8	ldr	x24, [x8, #0x8]
000000000002beec	ldr	x25, [x26, #0x8]
000000000002bef0	cmp	x25, x24
000000000002bef4	csel	x2, x25, x24, lo
000000000002bef8	cbz	x2, 0x2bf18
000000000002befc	ldr	x1, [x26]
000000000002bf00	ldr	x22, [x21]
000000000002bf04	mov	x0, x22
000000000002bf08	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002bf0c	cbz	w0, 0x2bf18
000000000002bf10	tbz	w0, #0x1f, 0x2bed0
000000000002bf14	b	0x2bf24
000000000002bf18	cmp	x24, x25
000000000002bf1c	b.hs	0x2bed0
000000000002bf20	ldr	x22, [x21]
000000000002bf24	mov	x27, x23
000000000002bf28	b	0x2bf44
000000000002bf2c	cmp	x24, x26
000000000002bf30	b.hs	0x2bf84
000000000002bf34	mov	w0, #-0x1
000000000002bf38	sub	x26, x25, #0x10
000000000002bf3c	sub	x27, x27, #0x10
000000000002bf40	tbz	w0, #0x1f, 0x2becc
000000000002bf44	add	x8, x19, x27
000000000002bf48	ldr	q0, [x8, #0x20]
000000000002bf4c	str	q0, [x8, #0x30]
000000000002bf50	cmn	x27, #0x20
000000000002bf54	b.eq	0x2bec8
000000000002bf58	mov	x25, x26
000000000002bf5c	ldr	x26, [x8, #0x18]
000000000002bf60	cmp	x26, x24
000000000002bf64	csel	x2, x26, x24, lo
000000000002bf68	cbz	x2, 0x2bf2c
000000000002bf6c	add	x8, x19, x27
000000000002bf70	ldr	x1, [x8, #0x10]
000000000002bf74	mov	x0, x22
000000000002bf78	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002bf7c	cbnz	w0, 0x2bf38
000000000002bf80	b	0x2bf2c
000000000002bf84	add	x8, x19, x27
000000000002bf88	add	x25, x8, #0x20
000000000002bf8c	b	0x2becc
000000000002bf90	cmp	x20, x22
000000000002bf94	b.hs	0x2bfb0
000000000002bf98	ldr	q0, [x19]
000000000002bf9c	str	q0, [sp]
000000000002bfa0	ldr	q0, [x21]
000000000002bfa4	str	q0, [x19]
000000000002bfa8	ldr	q0, [sp]
000000000002bfac	str	q0, [x21]
000000000002bfb0	ldp	x29, x30, [sp, #0x60]
000000000002bfb4	ldp	x20, x19, [sp, #0x50]
000000000002bfb8	ldp	x22, x21, [sp, #0x40]
000000000002bfbc	ldp	x24, x23, [sp, #0x30]
000000000002bfc0	ldp	x26, x25, [sp, #0x20]
000000000002bfc4	ldp	x28, x27, [sp, #0x10]
000000000002bfc8	add	sp, sp, #0x70
000000000002bfcc	ret
__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_:
000000000002bfd0	sub	sp, sp, #0x90
000000000002bfd4	stp	x24, x23, [sp, #0x50]
000000000002bfd8	stp	x22, x21, [sp, #0x60]
000000000002bfdc	stp	x20, x19, [sp, #0x70]
000000000002bfe0	stp	x29, x30, [sp, #0x80]
000000000002bfe4	add	x29, sp, #0x80
000000000002bfe8	mov	x20, x2
000000000002bfec	mov	x19, x1
000000000002bff0	mov	x21, x0
000000000002bff4	ldr	x23, [x1, #0x8]
000000000002bff8	ldr	x24, [x0, #0x8]
000000000002bffc	cmp	x24, x23
000000000002c000	csel	x2, x24, x23, lo
000000000002c004	cbz	x2, 0x2c030
000000000002c008	ldr	x1, [x21]
000000000002c00c	ldr	x0, [x19]
000000000002c010	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002c014	mov	x22, x0
000000000002c018	cbz	w0, 0x2c030
000000000002c01c	ldr	x24, [x20, #0x8]
000000000002c020	cmp	x23, x24
000000000002c024	csel	x2, x23, x24, lo
000000000002c028	cbnz	x2, 0x2c050
000000000002c02c	b	0x2c084
000000000002c030	cmp	x23, x24
000000000002c034	mov	w8, #-0x1
000000000002c038	cneg	w8, w8, hs
000000000002c03c	csel	w22, wzr, w8, eq
000000000002c040	ldr	x24, [x20, #0x8]
000000000002c044	cmp	x23, x24
000000000002c048	csel	x2, x23, x24, lo
000000000002c04c	cbz	x2, 0x2c084
000000000002c050	ldr	x1, [x19]
000000000002c054	ldr	x0, [x20]
000000000002c058	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002c05c	cbz	w0, 0x2c084
000000000002c060	tbnz	w22, #0x1f, 0x2c098
000000000002c064	tbnz	w0, #0x1f, 0x2c0d8
000000000002c068	mov	w0, #0x0
000000000002c06c	ldp	x29, x30, [sp, #0x80]
000000000002c070	ldp	x20, x19, [sp, #0x70]
000000000002c074	ldp	x22, x21, [sp, #0x60]
000000000002c078	ldp	x24, x23, [sp, #0x50]
000000000002c07c	add	sp, sp, #0x90
000000000002c080	ret
000000000002c084	cmp	x24, x23
000000000002c088	mov	w8, #-0x1
000000000002c08c	cneg	w8, w8, hs
000000000002c090	csel	w0, wzr, w8, eq
000000000002c094	tbz	w22, #0x1f, 0x2c064
000000000002c098	tbnz	w0, #0x1f, 0x2c114
000000000002c09c	ldr	q0, [x21]
000000000002c0a0	ldr	q1, [x19]
000000000002c0a4	str	q1, [x21]
000000000002c0a8	str	q0, [x19]
000000000002c0ac	ldr	x21, [x20, #0x8]
000000000002c0b0	ldr	x22, [x19, #0x8]
000000000002c0b4	cmp	x22, x21
000000000002c0b8	csel	x2, x22, x21, lo
000000000002c0bc	cbz	x2, 0x2c128
000000000002c0c0	ldr	x1, [x19]
000000000002c0c4	ldr	x0, [x20]
000000000002c0c8	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002c0cc	cbz	w0, 0x2c128
000000000002c0d0	tbz	w0, #0x1f, 0x2c178
000000000002c0d4	b	0x2c130
000000000002c0d8	ldr	q0, [x19]
000000000002c0dc	ldr	q1, [x20]
000000000002c0e0	str	q1, [x19]
000000000002c0e4	str	q0, [x20]
000000000002c0e8	ldr	x20, [x19, #0x8]
000000000002c0ec	ldr	x22, [x21, #0x8]
000000000002c0f0	cmp	x22, x20
000000000002c0f4	csel	x2, x22, x20, lo
000000000002c0f8	cbz	x2, 0x2c144
000000000002c0fc	ldr	x1, [x21]
000000000002c100	ldr	x0, [x19]
000000000002c104	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002c108	cbz	w0, 0x2c144
000000000002c10c	tbz	w0, #0x1f, 0x2c178
000000000002c110	b	0x2c14c
000000000002c114	ldr	q0, [x21]
000000000002c118	ldr	q1, [x20]
000000000002c11c	str	q1, [x21]
000000000002c120	str	q0, [x20]
000000000002c124	b	0x2c178
000000000002c128	cmp	x21, x22
000000000002c12c	b.hs	0x2c178
000000000002c130	ldr	q0, [x19]
000000000002c134	ldr	q1, [x20]
000000000002c138	str	q1, [x19]
000000000002c13c	str	q0, [x20]
000000000002c140	b	0x2c15c
000000000002c144	cmp	x20, x22
000000000002c148	b.hs	0x2c178
000000000002c14c	ldr	q0, [x21]
000000000002c150	ldr	q1, [x19]
000000000002c154	str	q1, [x21]
000000000002c158	str	q0, [x19]
000000000002c15c	mov	w0, #0x2
000000000002c160	ldp	x29, x30, [sp, #0x80]
000000000002c164	ldp	x20, x19, [sp, #0x70]
000000000002c168	ldp	x22, x21, [sp, #0x60]
000000000002c16c	ldp	x24, x23, [sp, #0x50]
000000000002c170	add	sp, sp, #0x90
000000000002c174	ret
000000000002c178	mov	w0, #0x1
000000000002c17c	ldp	x29, x30, [sp, #0x80]
000000000002c180	ldp	x20, x19, [sp, #0x70]
000000000002c184	ldp	x22, x21, [sp, #0x60]
000000000002c188	ldp	x24, x23, [sp, #0x50]
000000000002c18c	add	sp, sp, #0x90
000000000002c190	ret
__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_:
000000000002c194	sub	sp, sp, #0x80
000000000002c198	stp	x26, x25, [sp, #0x30]
000000000002c19c	stp	x24, x23, [sp, #0x40]
000000000002c1a0	stp	x22, x21, [sp, #0x50]
000000000002c1a4	stp	x20, x19, [sp, #0x60]
000000000002c1a8	stp	x29, x30, [sp, #0x70]
000000000002c1ac	add	x29, sp, #0x70
000000000002c1b0	mov	x24, x3
000000000002c1b4	mov	x23, x2
000000000002c1b8	mov	x19, x1
000000000002c1bc	mov	x20, x0
000000000002c1c0	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002c1c4	mov	x21, x0
000000000002c1c8	mov	x22, x0
000000000002c1cc	ldr	x25, [x24, #0x8]
000000000002c1d0	ldr	x26, [x23, #0x8]
000000000002c1d4	cmp	x26, x25
000000000002c1d8	csel	x2, x26, x25, lo
000000000002c1dc	cbz	x2, 0x2c1f8
000000000002c1e0	ldr	x1, [x23]
000000000002c1e4	ldr	x0, [x24]
000000000002c1e8	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002c1ec	cbz	w0, 0x2c1f8
000000000002c1f0	tbnz	w0, #0x1f, 0x2c200
000000000002c1f4	b	0x2c2a4
000000000002c1f8	cmp	x25, x26
000000000002c1fc	b.hs	0x2c2a4
000000000002c200	ldr	q0, [x23]
000000000002c204	ldr	q1, [x24]
000000000002c208	str	q1, [x23]
000000000002c20c	str	q0, [x24]
000000000002c210	add	w22, w21, #0x1
000000000002c214	ldr	x24, [x23, #0x8]
000000000002c218	ldr	x25, [x19, #0x8]
000000000002c21c	cmp	x25, x24
000000000002c220	csel	x2, x25, x24, lo
000000000002c224	cbz	x2, 0x2c240
000000000002c228	ldr	x1, [x19]
000000000002c22c	ldr	x0, [x23]
000000000002c230	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002c234	cbz	w0, 0x2c240
000000000002c238	tbnz	w0, #0x1f, 0x2c248
000000000002c23c	b	0x2c2a4
000000000002c240	cmp	x24, x25
000000000002c244	b.hs	0x2c2a4
000000000002c248	ldr	q0, [x19]
000000000002c24c	ldr	q1, [x23]
000000000002c250	str	q1, [x19]
000000000002c254	str	q0, [x23]
000000000002c258	add	w22, w21, #0x2
000000000002c25c	ldr	x23, [x19, #0x8]
000000000002c260	ldr	x24, [x20, #0x8]
000000000002c264	cmp	x24, x23
000000000002c268	csel	x2, x24, x23, lo
000000000002c26c	cbz	x2, 0x2c288
000000000002c270	ldr	x1, [x20]
000000000002c274	ldr	x0, [x19]
000000000002c278	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002c27c	cbz	w0, 0x2c288
000000000002c280	tbnz	w0, #0x1f, 0x2c290
000000000002c284	b	0x2c2a4
000000000002c288	cmp	x23, x24
000000000002c28c	b.hs	0x2c2a4
000000000002c290	ldr	q0, [x20]
000000000002c294	ldr	q1, [x19]
000000000002c298	str	q1, [x20]
000000000002c29c	str	q0, [x19]
000000000002c2a0	add	w22, w21, #0x3
000000000002c2a4	mov	x0, x22
000000000002c2a8	ldp	x29, x30, [sp, #0x70]
000000000002c2ac	ldp	x20, x19, [sp, #0x60]
000000000002c2b0	ldp	x22, x21, [sp, #0x50]
000000000002c2b4	ldp	x24, x23, [sp, #0x40]
000000000002c2b8	ldp	x26, x25, [sp, #0x30]
000000000002c2bc	add	sp, sp, #0x80
000000000002c2c0	ret
__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_:
000000000002c2c4	sub	sp, sp, #0xa0
000000000002c2c8	stp	x28, x27, [sp, #0x40]
000000000002c2cc	stp	x26, x25, [sp, #0x50]
000000000002c2d0	stp	x24, x23, [sp, #0x60]
000000000002c2d4	stp	x22, x21, [sp, #0x70]
000000000002c2d8	stp	x20, x19, [sp, #0x80]
000000000002c2dc	stp	x29, x30, [sp, #0x90]
000000000002c2e0	add	x29, sp, #0x90
000000000002c2e4	mov	x25, x4
000000000002c2e8	mov	x24, x3
000000000002c2ec	mov	x23, x2
000000000002c2f0	mov	x19, x1
000000000002c2f4	mov	x20, x0
000000000002c2f8	bl	__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_
000000000002c2fc	mov	x21, x0
000000000002c300	mov	x22, x0
000000000002c304	ldr	x26, [x25, #0x8]
000000000002c308	ldr	x27, [x24, #0x8]
000000000002c30c	cmp	x27, x26
000000000002c310	csel	x2, x27, x26, lo
000000000002c314	cbz	x2, 0x2c330
000000000002c318	ldr	x1, [x24]
000000000002c31c	ldr	x0, [x25]
000000000002c320	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002c324	cbz	w0, 0x2c330
000000000002c328	tbnz	w0, #0x1f, 0x2c338
000000000002c32c	b	0x2c424
000000000002c330	cmp	x26, x27
000000000002c334	b.hs	0x2c424
000000000002c338	ldr	q0, [x24]
000000000002c33c	ldr	q1, [x25]
000000000002c340	str	q1, [x24]
000000000002c344	str	q0, [x25]
000000000002c348	add	w22, w21, #0x1
000000000002c34c	ldr	x25, [x24, #0x8]
000000000002c350	ldr	x26, [x23, #0x8]
000000000002c354	cmp	x26, x25
000000000002c358	csel	x2, x26, x25, lo
000000000002c35c	cbz	x2, 0x2c378
000000000002c360	ldr	x1, [x23]
000000000002c364	ldr	x0, [x24]
000000000002c368	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002c36c	cbz	w0, 0x2c378
000000000002c370	tbnz	w0, #0x1f, 0x2c380
000000000002c374	b	0x2c424
000000000002c378	cmp	x25, x26
000000000002c37c	b.hs	0x2c424
000000000002c380	ldr	q0, [x23]
000000000002c384	ldr	q1, [x24]
000000000002c388	str	q1, [x23]
000000000002c38c	str	q0, [x24]
000000000002c390	add	w22, w21, #0x2
000000000002c394	ldr	x24, [x23, #0x8]
000000000002c398	ldr	x25, [x19, #0x8]
000000000002c39c	cmp	x25, x24
000000000002c3a0	csel	x2, x25, x24, lo
000000000002c3a4	cbz	x2, 0x2c3c0
000000000002c3a8	ldr	x1, [x19]
000000000002c3ac	ldr	x0, [x23]
000000000002c3b0	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002c3b4	cbz	w0, 0x2c3c0
000000000002c3b8	tbnz	w0, #0x1f, 0x2c3c8
000000000002c3bc	b	0x2c424
000000000002c3c0	cmp	x24, x25
000000000002c3c4	b.hs	0x2c424
000000000002c3c8	ldr	q0, [x19]
000000000002c3cc	ldr	q1, [x23]
000000000002c3d0	str	q1, [x19]
000000000002c3d4	str	q0, [x23]
000000000002c3d8	add	w22, w21, #0x3
000000000002c3dc	ldr	x23, [x19, #0x8]
000000000002c3e0	ldr	x24, [x20, #0x8]
000000000002c3e4	cmp	x24, x23
000000000002c3e8	csel	x2, x24, x23, lo
000000000002c3ec	cbz	x2, 0x2c408
000000000002c3f0	ldr	x1, [x20]
000000000002c3f4	ldr	x0, [x19]
000000000002c3f8	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002c3fc	cbz	w0, 0x2c408
000000000002c400	tbnz	w0, #0x1f, 0x2c410
000000000002c404	b	0x2c424
000000000002c408	cmp	x23, x24
000000000002c40c	b.hs	0x2c424
000000000002c410	ldr	q0, [x20]
000000000002c414	ldr	q1, [x19]
000000000002c418	str	q1, [x20]
000000000002c41c	str	q0, [x19]
000000000002c420	add	w22, w21, #0x4
000000000002c424	mov	x0, x22
000000000002c428	ldp	x29, x30, [sp, #0x90]
000000000002c42c	ldp	x20, x19, [sp, #0x80]
000000000002c430	ldp	x22, x21, [sp, #0x70]
000000000002c434	ldp	x24, x23, [sp, #0x60]
000000000002c438	ldp	x26, x25, [sp, #0x50]
000000000002c43c	ldp	x28, x27, [sp, #0x40]
000000000002c440	add	sp, sp, #0xa0
000000000002c444	ret
__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEbT0_S9_T_:
000000000002c448	sub	sp, sp, #0x70
000000000002c44c	stp	x28, x27, [sp, #0x10]
000000000002c450	stp	x26, x25, [sp, #0x20]
000000000002c454	stp	x24, x23, [sp, #0x30]
000000000002c458	stp	x22, x21, [sp, #0x40]
000000000002c45c	stp	x20, x19, [sp, #0x50]
000000000002c460	stp	x29, x30, [sp, #0x60]
000000000002c464	add	x29, sp, #0x60
000000000002c468	mov	x20, x1
000000000002c46c	mov	x19, x0
000000000002c470	sub	x8, x1, x0
000000000002c474	asr	x8, x8, #4
000000000002c478	cmp	x8, #0x5
000000000002c47c	b.hi	0x2c4cc
000000000002c480	mov	w0, #0x1
000000000002c484	adr	x9, #0x26142
000000000002c488	nop
000000000002c48c	adr	x10, #0x10
000000000002c490	ldrb	w11, [x9, x8]
000000000002c494	add	x10, x10, x11, lsl #2
000000000002c498	br	x10
000000000002c49c	sub	x21, x20, #0x10
000000000002c4a0	ldur	x20, [x20, #-0x8]
000000000002c4a4	ldr	x22, [x19, #0x8]
000000000002c4a8	cmp	x22, x20
000000000002c4ac	csel	x2, x22, x20, lo
000000000002c4b0	cbz	x2, 0x2c620
000000000002c4b4	ldr	x1, [x19]
000000000002c4b8	ldr	x0, [x21]
000000000002c4bc	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002c4c0	cbz	w0, 0x2c620
000000000002c4c4	tbnz	w0, #0x1f, 0x2c628
000000000002c4c8	b	0x2c638
000000000002c4cc	add	x21, x19, #0x20
000000000002c4d0	add	x1, x19, #0x10
000000000002c4d4	mov	x0, x19
000000000002c4d8	mov	x2, x21
000000000002c4dc	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002c4e0	add	x8, x19, #0x30
000000000002c4e4	cmp	x8, x20
000000000002c4e8	b.eq	0x2c638
000000000002c4ec	mov	x23, #0x0
000000000002c4f0	mov	w24, #0x0
000000000002c4f4	b	0x2c51c
000000000002c4f8	mov	x26, x19
000000000002c4fc	stp	x22, x25, [x26]
000000000002c500	add	w24, w24, #0x1
000000000002c504	cmp	w24, #0x8
000000000002c508	b.eq	0x2c65c
000000000002c50c	add	x8, x21, #0x10
000000000002c510	add	x23, x23, #0x10
000000000002c514	cmp	x8, x20
000000000002c518	b.eq	0x2c638
000000000002c51c	mov	x27, x21
000000000002c520	mov	x21, x8
000000000002c524	ldr	x25, [x8, #0x8]
000000000002c528	ldr	x26, [x27, #0x8]
000000000002c52c	cmp	x26, x25
000000000002c530	csel	x2, x26, x25, lo
000000000002c534	cbz	x2, 0x2c554
000000000002c538	ldr	x1, [x27]
000000000002c53c	ldr	x22, [x21]
000000000002c540	mov	x0, x22
000000000002c544	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002c548	cbz	w0, 0x2c554
000000000002c54c	tbz	w0, #0x1f, 0x2c50c
000000000002c550	b	0x2c560
000000000002c554	cmp	x25, x26
000000000002c558	b.hs	0x2c50c
000000000002c55c	ldr	x22, [x21]
000000000002c560	mov	x28, x23
000000000002c564	b	0x2c580
000000000002c568	cmp	x25, x27
000000000002c56c	b.hs	0x2c5c0
000000000002c570	mov	w0, #-0x1
000000000002c574	sub	x27, x26, #0x10
000000000002c578	sub	x28, x28, #0x10
000000000002c57c	tbz	w0, #0x1f, 0x2c4fc
000000000002c580	add	x8, x19, x28
000000000002c584	ldr	q0, [x8, #0x20]
000000000002c588	str	q0, [x8, #0x30]
000000000002c58c	cmn	x28, #0x20
000000000002c590	b.eq	0x2c4f8
000000000002c594	mov	x26, x27
000000000002c598	ldr	x27, [x8, #0x18]
000000000002c59c	cmp	x27, x25
000000000002c5a0	csel	x2, x27, x25, lo
000000000002c5a4	cbz	x2, 0x2c568
000000000002c5a8	add	x8, x19, x28
000000000002c5ac	ldr	x1, [x8, #0x10]
000000000002c5b0	mov	x0, x22
000000000002c5b4	bl	0x51aa0 ; symbol stub for: _memcmp
000000000002c5b8	cbnz	w0, 0x2c574
000000000002c5bc	b	0x2c568
000000000002c5c0	add	x8, x19, x28
000000000002c5c4	add	x26, x8, #0x20
000000000002c5c8	b	0x2c4fc
000000000002c5cc	add	x1, x19, #0x10
000000000002c5d0	sub	x2, x20, #0x10
000000000002c5d4	mov	x0, x19
000000000002c5d8	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002c5dc	mov	w0, #0x1
000000000002c5e0	b	0x2c63c
000000000002c5e4	add	x1, x19, #0x10
000000000002c5e8	add	x2, x19, #0x20
000000000002c5ec	sub	x3, x20, #0x10
000000000002c5f0	mov	x0, x19
000000000002c5f4	bl	__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_
000000000002c5f8	mov	w0, #0x1
000000000002c5fc	b	0x2c63c
000000000002c600	add	x1, x19, #0x10
000000000002c604	add	x2, x19, #0x20
000000000002c608	add	x3, x19, #0x30
000000000002c60c	sub	x4, x20, #0x10
000000000002c610	mov	x0, x19
000000000002c614	bl	__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_
000000000002c618	mov	w0, #0x1
000000000002c61c	b	0x2c63c
000000000002c620	cmp	x20, x22
000000000002c624	b.hs	0x2c638
000000000002c628	ldr	q0, [x19]
000000000002c62c	ldr	q1, [x21]
000000000002c630	str	q1, [x19]
000000000002c634	str	q0, [x21]
000000000002c638	mov	w0, #0x1
000000000002c63c	ldp	x29, x30, [sp, #0x60]
000000000002c640	ldp	x20, x19, [sp, #0x50]
000000000002c644	ldp	x22, x21, [sp, #0x40]
000000000002c648	ldp	x24, x23, [sp, #0x30]
000000000002c64c	ldp	x26, x25, [sp, #0x20]
000000000002c650	ldp	x28, x27, [sp, #0x10]
000000000002c654	add	sp, sp, #0x70
000000000002c658	ret
000000000002c65c	add	x8, x21, #0x10
000000000002c660	cmp	x8, x20
000000000002c664	cset	w0, eq
000000000002c668	b	0x2c63c
__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader:
000000000002c66c	stp	x22, x21, [sp, #-0x30]!
000000000002c670	stp	x20, x19, [sp, #0x10]
000000000002c674	stp	x29, x30, [sp, #0x20]
000000000002c678	add	x29, sp, #0x20
000000000002c67c	ldar	x21, [x0]
000000000002c680	and	x1, x21, #0xfffffffffffffffc
000000000002c684	ldr	x8, [x1]
000000000002c688	cmp	x1, #0x0
000000000002c68c	ccmp	x8, x1, #0x4, ne
000000000002c690	b.ne	0x2c738
000000000002c694	tst	x21, #0x3
000000000002c698	b.ne	0x2c74c
000000000002c69c	mov	x19, x0
000000000002c6a0	adrp	x0, 64 ; 0x6c000
000000000002c6a4	add	x0, x0, #0xbb0
000000000002c6a8	ldr	x8, [x0]
000000000002c6ac	blr	x8
000000000002c6b0	ldr	x20, [x0]
000000000002c6b4	add	x22, x20, #0xd8
000000000002c6b8	mov	w0, #0x48
000000000002c6bc	bl	__ZN6kotlin20allocateInObjectPoolEm
000000000002c6c0	mov	x1, x0
000000000002c6c4	str	xzr, [x1, #0x18]!
000000000002c6c8	str	xzr, [x0]
000000000002c6cc	str	wzr, [x0, #0x20]
000000000002c6d0	stp	xzr, x19, [x0, #0x28]
000000000002c6d4	stlr	x21, [x1]
000000000002c6d8	stp	x22, xzr, [x0, #0x38]
000000000002c6dc	mov	x8, x20
000000000002c6e0	ldr	x9, [x8, #0xe0]!
000000000002c6e4	stp	x9, x8, [x0]
000000000002c6e8	str	x0, [x9, #0x8]
000000000002c6ec	str	x0, [x8]
000000000002c6f0	ldr	x8, [x20, #0xf0]
000000000002c6f4	add	x8, x8, #0x1
000000000002c6f8	str	x8, [x20, #0xf0]
000000000002c6fc	str	x0, [x0, #0x40]
000000000002c700	ldaxr	x22, [x19]
000000000002c704	cmp	x22, x21
000000000002c708	b.ne	0x2c720
000000000002c70c	stlxr	w8, x1, [x19]
000000000002c710	cbnz	w8, 0x2c700
000000000002c714	mov	w8, #0x1
000000000002c718	tbz	w8, #0x0, 0x2c72c
000000000002c71c	b	0x2c738
000000000002c720	mov	w8, #0x0
000000000002c724	clrex
000000000002c728	tbnz	w8, #0x0, 0x2c738
000000000002c72c	add	x0, x20, #0x8
000000000002c730	bl	__ZN6kotlin2mm22ExtraObjectDataFactory22DestroyExtraObjectDataEPNS0_10ThreadDataERNS0_15ExtraObjectDataE
000000000002c734	mov	x1, x22
000000000002c738	mov	x0, x1
000000000002c73c	ldp	x29, x30, [sp, #0x20]
000000000002c740	ldp	x20, x19, [sp, #0x10]
000000000002c744	ldp	x22, x21, [sp], #0x30
000000000002c748	ret
000000000002c74c	adr	x2, #0x2991f ; literal pool for: "Object must not be tagged"
000000000002c750	nop
000000000002c754	mov	w0, #0x0
000000000002c758	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
000000000002c75c	brk	#0x1
000000000002c760	bl	___clang_call_terminate
__ZN6kotlin2mm22ExtraObjectDataFactory22DestroyExtraObjectDataEPNS0_10ThreadDataERNS0_15ExtraObjectDataE:
000000000002c764	stp	x20, x19, [sp, #-0x20]!
000000000002c768	stp	x29, x30, [sp, #0x10]
000000000002c76c	add	x29, sp, #0x10
000000000002c770	mov	x19, x0
000000000002c774	add	x8, x0, #0xd0
000000000002c778	sub	x20, x1, #0x8
000000000002c77c	add	x9, x1, #0x20
000000000002c780	ldar	x9, [x9]
000000000002c784	cmp	x8, x9
000000000002c788	b.eq	0x2c7c0
000000000002c78c	mov	w0, #0x18
000000000002c790	bl	__ZN6kotlin20allocateInObjectPoolEm
000000000002c794	ldr	x8, [x19, #0xf0]!
000000000002c798	stp	x19, x20, [x0, #0x8]
000000000002c79c	str	x8, [x0]
000000000002c7a0	str	x0, [x8, #0x8]
000000000002c7a4	str	x0, [x19]
000000000002c7a8	ldr	x8, [x19, #0x10]
000000000002c7ac	add	x8, x8, #0x1
000000000002c7b0	str	x8, [x19, #0x10]
000000000002c7b4	ldp	x29, x30, [sp, #0x10]
000000000002c7b8	ldp	x20, x19, [sp], #0x20
000000000002c7bc	ret
000000000002c7c0	ldr	x0, [x20, #0x30]
000000000002c7c4	ldp	x9, x8, [x0]
000000000002c7c8	str	x8, [x9, #0x8]
000000000002c7cc	ldr	x8, [x0, #0x8]
000000000002c7d0	str	x9, [x8]
000000000002c7d4	ldr	x8, [x19, #0xe8]
000000000002c7d8	sub	x8, x8, #0x1
000000000002c7dc	str	x8, [x19, #0xe8]
000000000002c7e0	ldp	x29, x30, [sp, #0x10]
000000000002c7e4	ldp	x20, x19, [sp], #0x20
000000000002c7e8	b	_mi_free
__ZN6kotlin2mm15ExtraObjectData9UninstallEv:
000000000002c7ec	stp	x22, x21, [sp, #-0x30]!
000000000002c7f0	stp	x20, x19, [sp, #0x10]
000000000002c7f4	stp	x29, x30, [sp, #0x20]
000000000002c7f8	add	x29, sp, #0x20
000000000002c7fc	mov	x19, x0
000000000002c800	add	x8, x0, #0x18
000000000002c804	ldar	x8, [x8]
000000000002c808	tbz	w8, #0x0, 0x2c814
000000000002c80c	and	x8, x8, #0xfffffffffffffffe
000000000002c810	ldr	x8, [x8, #0x8]
000000000002c814	mov	x9, x19
000000000002c818	ldr	x10, [x9], #0x10
000000000002c81c	stlr	x10, [x8]
000000000002c820	ldar	x8, [x9]
000000000002c824	cbz	x8, 0x2c898
000000000002c828	adrp	x0, 64 ; 0x6c000
000000000002c82c	add	x0, x0, #0xbb0
000000000002c830	ldr	x9, [x0]
000000000002c834	blr	x9
000000000002c838	ldr	x22, [x0]
000000000002c83c	add	x20, x22, #0x138
000000000002c840	mov	w9, #0x1
000000000002c844	ldaxr	w21, [x20]
000000000002c848	stlxr	w10, w9, [x20]
000000000002c84c	cbnz	w10, 0x2c844
000000000002c850	nop
000000000002c854	ldr	x1, #0x5a44c
000000000002c858	mov	x0, x8
000000000002c85c	mov	w2, #0x0
000000000002c860	bl	0x51b78 ; Objc message: -[x0 initWithDouble:]
000000000002c864	cbz	x22, 0x2c898
000000000002c868	ldaxr	w8, [x20]
000000000002c86c	stlxr	w9, w21, [x20]
000000000002c870	cbnz	w9, 0x2c868
000000000002c874	cbnz	w21, 0x2c898
000000000002c878	cmp	w8, #0x1
000000000002c87c	b.ne	0x2c898
000000000002c880	adr	x8, #0x5a1c3
000000000002c884	nop
000000000002c888	ldarb	w8, [x8]
000000000002c88c	tbz	w8, #0x0, 0x2c898
000000000002c890	mov	x0, x20
000000000002c894	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c898	add	x8, x19, #0x10
000000000002c89c	stlr	xzr, [x8]
000000000002c8a0	ldp	x29, x30, [sp, #0x20]
000000000002c8a4	ldp	x20, x19, [sp, #0x10]
000000000002c8a8	ldp	x22, x21, [sp], #0x30
000000000002c8ac	ret
000000000002c8b0	mov	x19, x0
000000000002c8b4	cbz	x22, 0x2c8e8
000000000002c8b8	ldaxr	w8, [x20]
000000000002c8bc	stlxr	w9, w21, [x20]
000000000002c8c0	cbnz	w9, 0x2c8b8
000000000002c8c4	cbnz	w21, 0x2c8e8
000000000002c8c8	cmp	w8, #0x1
000000000002c8cc	b.ne	0x2c8e8
000000000002c8d0	adr	x8, #0x5a173
000000000002c8d4	nop
000000000002c8d8	ldarb	w8, [x8]
000000000002c8dc	tbz	w8, #0x0, 0x2c8e8
000000000002c8e0	mov	x0, x20
000000000002c8e4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c8e8	mov	x0, x19
000000000002c8ec	bl	___clang_call_terminate
_AddTLSRecord:
000000000002c8f0	stp	x28, x27, [sp, #-0x60]!
000000000002c8f4	stp	x26, x25, [sp, #0x10]
000000000002c8f8	stp	x24, x23, [sp, #0x20]
000000000002c8fc	stp	x22, x21, [sp, #0x30]
000000000002c900	stp	x20, x19, [sp, #0x40]
000000000002c904	stp	x29, x30, [sp, #0x50]
000000000002c908	add	x29, sp, #0x50
000000000002c90c	mov	x19, x2
000000000002c910	mov	x22, x1
000000000002c914	mov	x20, x0
000000000002c918	add	x21, x0, #0x60
000000000002c91c	lsr	x8, x1, #32
000000000002c920	lsl	w9, w22, #3
000000000002c924	add	x9, x9, #0x8
000000000002c928	eor	x9, x9, x8
000000000002c92c	mov	x10, #0x2d69
000000000002c930	movk	x10, #0xeb38, lsl #16
000000000002c934	movk	x10, #0xea08, lsl #32
000000000002c938	movk	x10, #0x9ddf, lsl #48
000000000002c93c	mul	x9, x9, x10
000000000002c940	eor	x8, x9, x8
000000000002c944	eor	x8, x8, x9, lsr #47
000000000002c948	mul	x8, x8, x10
000000000002c94c	eor	x8, x8, x8, lsr #47
000000000002c950	mul	x25, x8, x10
000000000002c954	ldr	x24, [x0, #0x68]
000000000002c958	cbz	x24, 0x2c980
000000000002c95c	fmov	d0, x24
000000000002c960	cnt.8b	v0, v0
000000000002c964	uaddlv.8b	h0, v0
000000000002c968	fmov	w8, s0
000000000002c96c	cmp	x8, #0x1
000000000002c970	b.hi	0x2c98c
000000000002c974	sub	x9, x24, #0x1
000000000002c978	and	x9, x25, x9
000000000002c97c	b	0x2c9a0
000000000002c980	mov	x26, x20
000000000002c984	ldr	w27, [x26, #0x8c]!
000000000002c988	b	0x2cac8
000000000002c98c	mov	x9, x25
000000000002c990	cmp	x25, x24
000000000002c994	b.lo	0x2c9a0
000000000002c998	udiv	x9, x25, x24
000000000002c99c	msub	x9, x9, x24, x25
000000000002c9a0	ldr	x10, [x21]
000000000002c9a4	ldr	x10, [x10, x9, lsl #3]
000000000002c9a8	cbz	x10, 0x2ca34
000000000002c9ac	ldr	x10, [x10]
000000000002c9b0	cbz	x10, 0x2ca34
000000000002c9b4	sub	x11, x24, #0x1
000000000002c9b8	b	0x2c9d0
000000000002c9bc	ldr	x12, [x10, #0x10]
000000000002c9c0	cmp	x12, x22
000000000002c9c4	b.eq	0x2ccac
000000000002c9c8	ldr	x10, [x10]
000000000002c9cc	cbz	x10, 0x2ca04
000000000002c9d0	ldr	x12, [x10, #0x8]
000000000002c9d4	cmp	x12, x25
000000000002c9d8	b.eq	0x2c9bc
000000000002c9dc	cmp	x8, #0x1
000000000002c9e0	b.hi	0x2c9ec
000000000002c9e4	and	x12, x12, x11
000000000002c9e8	b	0x2c9fc
000000000002c9ec	cmp	x12, x24
000000000002c9f0	b.lo	0x2c9fc
000000000002c9f4	udiv	x13, x12, x24
000000000002c9f8	msub	x12, x13, x24, x12
000000000002c9fc	cmp	x12, x9
000000000002ca00	b.eq	0x2c9c8
000000000002ca04	mov	x26, x20
000000000002ca08	ldr	w27, [x26, #0x8c]!
000000000002ca0c	cbz	x24, 0x2c988
000000000002ca10	fmov	d0, x24
000000000002ca14	cnt.8b	v0, v0
000000000002ca18	uaddlv.8b	h0, v0
000000000002ca1c	fmov	w8, s0
000000000002ca20	cmp	x8, #0x1
000000000002ca24	b.hi	0x2ca54
000000000002ca28	sub	x9, x24, #0x1
000000000002ca2c	and	x28, x25, x9
000000000002ca30	b	0x2ca6c
000000000002ca34	mov	x26, x20
000000000002ca38	ldr	w27, [x26, #0x8c]!
000000000002ca3c	fmov	d0, x24
000000000002ca40	cnt.8b	v0, v0
000000000002ca44	uaddlv.8b	h0, v0
000000000002ca48	fmov	w8, s0
000000000002ca4c	cmp	x8, #0x1
000000000002ca50	b.ls	0x2ca28
000000000002ca54	mov	x28, x25
000000000002ca58	cmp	x25, x24
000000000002ca5c	b.lo	0x2ca6c
000000000002ca60	udiv	x9, x25, x24
000000000002ca64	mul	x9, x9, x24
000000000002ca68	sub	x28, x25, x9
000000000002ca6c	ldr	x9, [x21]
000000000002ca70	ldr	x9, [x9, x28, lsl #3]
000000000002ca74	cbz	x9, 0x2cac8
000000000002ca78	sub	x10, x24, #0x1
000000000002ca7c	b	0x2ca98
000000000002ca80	and	x11, x11, x10
000000000002ca84	cmp	x11, x28
000000000002ca88	b.ne	0x2cac8
000000000002ca8c	ldr	x11, [x9, #0x10]
000000000002ca90	cmp	x11, x22
000000000002ca94	b.eq	0x2cca4
000000000002ca98	ldr	x9, [x9]
000000000002ca9c	cbz	x9, 0x2cac8
000000000002caa0	ldr	x11, [x9, #0x8]
000000000002caa4	cmp	x11, x25
000000000002caa8	b.eq	0x2ca8c
000000000002caac	cmp	x8, #0x1
000000000002cab0	b.ls	0x2ca80
000000000002cab4	cmp	x11, x24
000000000002cab8	b.lo	0x2ca84
000000000002cabc	udiv	x12, x11, x24
000000000002cac0	msub	x11, x12, x24, x11
000000000002cac4	b	0x2ca84
000000000002cac8	mov	w0, #0x1
000000000002cacc	mov	w1, #0x20
000000000002cad0	bl	0x519e0 ; symbol stub for: _calloc
000000000002cad4	mov	x23, x0
000000000002cad8	mov	w8, w27
000000000002cadc	bfi	x8, x19, #32, #32
000000000002cae0	stp	x22, x8, [x0, #0x10]
000000000002cae4	str	x25, [x0, #0x8]
000000000002cae8	ldr	x8, [x20, #0x78]
000000000002caec	add	x8, x8, #0x1
000000000002caf0	ucvtf	s0, x8
000000000002caf4	ldr	s1, [x20, #0x80]
000000000002caf8	cbz	x24, 0x2cb0c
000000000002cafc	ucvtf	s2, x24
000000000002cb00	fmul	s2, s1, s2
000000000002cb04	fcmp	s2, s0
000000000002cb08	b.pl	0x2cc14
000000000002cb0c	cmp	x24, #0x3
000000000002cb10	cset	w8, lo
000000000002cb14	sub	x9, x24, #0x1
000000000002cb18	tst	x24, x9
000000000002cb1c	cset	w9, ne
000000000002cb20	orr	w8, w8, w9
000000000002cb24	bfi	x8, x24, #1, #63
000000000002cb28	fdiv	s0, s0, s1
000000000002cb2c	fcvtpu	x9, s0
000000000002cb30	cmp	x8, x9
000000000002cb34	csel	x22, x9, x8, lo
000000000002cb38	subs	x8, x22, #0x1
000000000002cb3c	b.ne	0x2cb48
000000000002cb40	mov	w22, #0x2
000000000002cb44	b	0x2cb60
000000000002cb48	tst	x22, x8
000000000002cb4c	b.eq	0x2cb60
000000000002cb50	mov	x0, x22
000000000002cb54	bl	0x517e8 ; symbol stub for: __ZNSt3__112__next_primeEm
000000000002cb58	mov	x22, x0
000000000002cb5c	ldr	x24, [x20, #0x68]
000000000002cb60	cmp	x22, x24
000000000002cb64	b.ls	0x2cb78
000000000002cb68	mov	x0, x21
000000000002cb6c	mov	x1, x22
000000000002cb70	bl	__ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN6kotlin2mm18ThreadLocalStorage5EntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_NS_8equal_toIS2_EELb1EEENS3_11std_support9allocatorIS7_EEE8__rehashEm
000000000002cb74	b	0x2cbe4
000000000002cb78	b.hs	0x2cbe4
000000000002cb7c	ldr	x8, [x20, #0x78]
000000000002cb80	ucvtf	s0, x8
000000000002cb84	ldr	s1, [x20, #0x80]
000000000002cb88	fdiv	s0, s0, s1
000000000002cb8c	fcvtpu	x0, s0
000000000002cb90	cmp	x24, #0x3
000000000002cb94	b.lo	0x2cbd0
000000000002cb98	fmov	d0, x24
000000000002cb9c	cnt.8b	v0, v0
000000000002cba0	uaddlv.8b	h0, v0
000000000002cba4	fmov	w8, s0
000000000002cba8	cmp	x8, #0x1
000000000002cbac	b.hi	0x2cbd0
000000000002cbb0	sub	x8, x0, #0x1
000000000002cbb4	clz	x8, x8
000000000002cbb8	neg	x8, x8
000000000002cbbc	mov	w9, #0x1
000000000002cbc0	lsl	x8, x9, x8
000000000002cbc4	cmp	x0, #0x2
000000000002cbc8	csel	x0, x0, x8, lo
000000000002cbcc	b	0x2cbd4
000000000002cbd0	bl	0x517e8 ; symbol stub for: __ZNSt3__112__next_primeEm
000000000002cbd4	cmp	x22, x0
000000000002cbd8	csel	x22, x0, x22, lo
000000000002cbdc	cmp	x22, x24
000000000002cbe0	b.lo	0x2cb68
000000000002cbe4	ldr	x24, [x20, #0x68]
000000000002cbe8	sub	x8, x24, #0x1
000000000002cbec	tst	x24, x8
000000000002cbf0	b.ne	0x2cc08
000000000002cbf4	and	x28, x8, x25
000000000002cbf8	ldr	x9, [x21]
000000000002cbfc	ldr	x8, [x9, x28, lsl #3]
000000000002cc00	cbnz	x8, 0x2cc20
000000000002cc04	b	0x2cc44
000000000002cc08	cmp	x25, x24
000000000002cc0c	b.hs	0x2cc2c
000000000002cc10	mov	x28, x25
000000000002cc14	ldr	x9, [x21]
000000000002cc18	ldr	x8, [x9, x28, lsl #3]
000000000002cc1c	cbz	x8, 0x2cc44
000000000002cc20	ldr	x9, [x8]
000000000002cc24	str	x9, [x23]
000000000002cc28	b	0x2cc90
000000000002cc2c	udiv	x8, x25, x24
000000000002cc30	mul	x8, x8, x24
000000000002cc34	sub	x28, x25, x8
000000000002cc38	ldr	x9, [x21]
000000000002cc3c	ldr	x8, [x9, x28, lsl #3]
000000000002cc40	cbnz	x8, 0x2cc20
000000000002cc44	mov	x8, x20
000000000002cc48	ldr	x10, [x8, #0x70]!
000000000002cc4c	str	x10, [x23]
000000000002cc50	str	x23, [x8]
000000000002cc54	str	x8, [x9, x28, lsl #3]
000000000002cc58	ldr	x8, [x23]
000000000002cc5c	cbz	x8, 0x2cc94
000000000002cc60	ldr	x8, [x8, #0x8]
000000000002cc64	sub	x9, x24, #0x1
000000000002cc68	tst	x24, x9
000000000002cc6c	b.ne	0x2cc78
000000000002cc70	and	x8, x8, x9
000000000002cc74	b	0x2cc88
000000000002cc78	cmp	x8, x24
000000000002cc7c	b.lo	0x2cc88
000000000002cc80	udiv	x9, x8, x24
000000000002cc84	msub	x8, x9, x24, x8
000000000002cc88	ldr	x9, [x21]
000000000002cc8c	add	x8, x9, x8, lsl #3
000000000002cc90	str	x23, [x8]
000000000002cc94	ldr	x8, [x20, #0x78]
000000000002cc98	add	x8, x8, #0x1
000000000002cc9c	str	x8, [x20, #0x78]
000000000002cca0	ldr	w27, [x20, #0x8c]
000000000002cca4	add	w8, w27, w19
000000000002cca8	str	w8, [x26]
000000000002ccac	ldp	x29, x30, [sp, #0x50]
000000000002ccb0	ldp	x20, x19, [sp, #0x40]
000000000002ccb4	ldp	x22, x21, [sp, #0x30]
000000000002ccb8	ldp	x24, x23, [sp, #0x20]
000000000002ccbc	ldp	x26, x25, [sp, #0x10]
000000000002ccc0	ldp	x28, x27, [sp], #0x60
000000000002ccc4	ret
000000000002ccc8	mov	x19, x0
000000000002cccc	cbz	x23, 0x2ccd8
000000000002ccd0	mov	x0, x23
000000000002ccd4	bl	0x51a64 ; symbol stub for: _free
000000000002ccd8	mov	x0, x19
000000000002ccdc	bl	___clang_call_terminate
__ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN6kotlin2mm18ThreadLocalStorage5EntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_NS_8equal_toIS2_EELb1EEENS3_11std_support9allocatorIS7_EEE8__rehashEm:
000000000002cce0	stp	x20, x19, [sp, #-0x20]!
000000000002cce4	stp	x29, x30, [sp, #0x10]
000000000002cce8	add	x29, sp, #0x10
000000000002ccec	mov	x19, x0
000000000002ccf0	cbz	x1, 0x2cd68
000000000002ccf4	mov	x20, x1
000000000002ccf8	mov	x0, x1
000000000002ccfc	mov	w1, #0x8
000000000002cd00	bl	0x519e0 ; symbol stub for: _calloc
000000000002cd04	mov	x8, x0
000000000002cd08	ldr	x0, [x19]
000000000002cd0c	str	x8, [x19]
000000000002cd10	cbz	x0, 0x2cd18
000000000002cd14	bl	0x51a64 ; symbol stub for: _free
000000000002cd18	mov	x8, #0x0
000000000002cd1c	str	x20, [x19, #0x8]
000000000002cd20	ldr	x9, [x19]
000000000002cd24	str	xzr, [x9, x8, lsl #3]
000000000002cd28	add	x8, x8, #0x1
000000000002cd2c	cmp	x8, x20
000000000002cd30	b.lo	0x2cd20
000000000002cd34	mov	x11, x19
000000000002cd38	ldr	x8, [x11, #0x10]!
000000000002cd3c	cbz	x8, 0x2ce44
000000000002cd40	ldr	x9, [x8, #0x8]
000000000002cd44	fmov	d0, x20
000000000002cd48	cnt.8b	v0, v0
000000000002cd4c	uaddlv.8b	h0, v0
000000000002cd50	fmov	w10, s0
000000000002cd54	cmp	x10, #0x1
000000000002cd58	b.hi	0x2cd80
000000000002cd5c	sub	x12, x20, #0x1
000000000002cd60	and	x9, x9, x12
000000000002cd64	b	0x2cd90
000000000002cd68	ldr	x0, [x19]
000000000002cd6c	str	xzr, [x19]
000000000002cd70	cbz	x0, 0x2cd78
000000000002cd74	bl	0x51a64 ; symbol stub for: _free
000000000002cd78	str	xzr, [x19, #0x8]
000000000002cd7c	b	0x2ce44
000000000002cd80	cmp	x9, x20
000000000002cd84	b.lo	0x2cd90
000000000002cd88	udiv	x12, x9, x20
000000000002cd8c	msub	x9, x12, x20, x9
000000000002cd90	ldr	x12, [x19]
000000000002cd94	str	x11, [x12, x9, lsl #3]
000000000002cd98	ldr	x12, [x8]
000000000002cd9c	cbz	x12, 0x2ce44
000000000002cda0	sub	x11, x20, #0x1
000000000002cda4	b	0x2cdb4
000000000002cda8	mov	x8, x12
000000000002cdac	ldr	x12, [x8]
000000000002cdb0	cbz	x12, 0x2ce44
000000000002cdb4	ldr	x13, [x12, #0x8]
000000000002cdb8	cmp	x10, #0x1
000000000002cdbc	b.hi	0x2cdc8
000000000002cdc0	and	x13, x13, x11
000000000002cdc4	b	0x2cdd8
000000000002cdc8	cmp	x13, x20
000000000002cdcc	b.lo	0x2cdd8
000000000002cdd0	udiv	x14, x13, x20
000000000002cdd4	msub	x13, x14, x20, x13
000000000002cdd8	cmp	x13, x9
000000000002cddc	b.eq	0x2cda8
000000000002cde0	ldr	x14, [x19]
000000000002cde4	ldr	x16, [x14, x13, lsl #3]
000000000002cde8	mov	x15, x12
000000000002cdec	cbz	x16, 0x2ce34
000000000002cdf0	mov	x14, x15
000000000002cdf4	ldr	x15, [x15]
000000000002cdf8	cbz	x15, 0x2ce0c
000000000002cdfc	ldr	x16, [x12, #0x10]
000000000002ce00	ldr	x17, [x15, #0x10]
000000000002ce04	cmp	x16, x17
000000000002ce08	b.eq	0x2cdf0
000000000002ce0c	str	x15, [x8]
000000000002ce10	ldr	x15, [x19]
000000000002ce14	lsl	x13, x13, #3
000000000002ce18	ldr	x15, [x15, x13]
000000000002ce1c	ldr	x15, [x15]
000000000002ce20	str	x15, [x14]
000000000002ce24	ldr	x14, [x19]
000000000002ce28	ldr	x13, [x14, x13]
000000000002ce2c	str	x12, [x13]
000000000002ce30	b	0x2cdac
000000000002ce34	str	x8, [x14, x13, lsl #3]
000000000002ce38	mov	x8, x12
000000000002ce3c	mov	x9, x13
000000000002ce40	b	0x2cdac
000000000002ce44	ldp	x29, x30, [sp, #0x10]
000000000002ce48	ldp	x20, x19, [sp], #0x20
000000000002ce4c	ret
_LookupTLS:
000000000002ce50	stp	x29, x30, [sp, #-0x10]!
000000000002ce54	mov	x29, sp
000000000002ce58	adrp	x0, 64 ; 0x6c000
000000000002ce5c	add	x0, x0, #0xbb0
000000000002ce60	ldr	x8, [x0]
000000000002ce64	blr	x8
000000000002ce68	ldr	x8, [x0]
000000000002ce6c	ldr	x10, [x8, #0x90]
000000000002ce70	adr	x9, #0x59c70
000000000002ce74	nop
000000000002ce78	cmp	x10, x9
000000000002ce7c	b.eq	0x2cee4
000000000002ce80	ldr	x10, [x8, #0x68]
000000000002ce84	cbz	x10, 0x2d008
000000000002ce88	fmov	d0, x10
000000000002ce8c	cnt.8b	v0, v0
000000000002ce90	uaddlv.8b	h0, v0
000000000002ce94	fmov	w11, s0
000000000002ce98	cmp	x11, #0x1
000000000002ce9c	b.hi	0x2cf00
000000000002cea0	sub	x12, x10, #0x1
000000000002cea4	lsr	x13, x9, #32
000000000002cea8	lsl	w14, w9, #3
000000000002ceac	add	x14, x14, #0x8
000000000002ceb0	eor	x14, x14, x13
000000000002ceb4	mov	x15, #0x2d69
000000000002ceb8	movk	x15, #0xeb38, lsl #16
000000000002cebc	movk	x15, #0xea08, lsl #32
000000000002cec0	movk	x15, #0x9ddf, lsl #48
000000000002cec4	mul	x14, x14, x15
000000000002cec8	eor	x13, x14, x13
000000000002cecc	eor	x13, x13, x14, lsr #47
000000000002ced0	mul	x13, x13, x15
000000000002ced4	eor	x13, x13, x13, lsr #47
000000000002ced8	mul	x13, x13, x15
000000000002cedc	and	x13, x12, x13
000000000002cee0	b	0x2cf6c
000000000002cee4	add	x12, x8, #0x98
000000000002cee8	ldr	x9, [x12]
000000000002ceec	lsl	x9, x9, #32
000000000002cef0	ldr	x8, [x8, #0x48]
000000000002cef4	add	x0, x8, x9, asr #29
000000000002cef8	ldp	x29, x30, [sp], #0x10
000000000002cefc	ret
000000000002cf00	lsr	x12, x9, #32
000000000002cf04	lsl	w13, w9, #3
000000000002cf08	add	x13, x13, #0x8
000000000002cf0c	eor	x13, x13, x12
000000000002cf10	mov	x14, #0x2d69
000000000002cf14	movk	x14, #0xeb38, lsl #16
000000000002cf18	movk	x14, #0xea08, lsl #32
000000000002cf1c	movk	x14, #0x9ddf, lsl #48
000000000002cf20	mul	x13, x13, x14
000000000002cf24	eor	x15, x13, x12
000000000002cf28	eor	x13, x15, x13, lsr #47
000000000002cf2c	mul	x13, x13, x14
000000000002cf30	eor	x13, x13, x13, lsr #47
000000000002cf34	mul	x13, x13, x14
000000000002cf38	cmp	x10, x13
000000000002cf3c	b.hi	0x2cf6c
000000000002cf40	lsl	w13, w9, #3
000000000002cf44	add	x13, x13, #0x8
000000000002cf48	eor	x13, x13, x12
000000000002cf4c	mul	x13, x13, x14
000000000002cf50	eor	x12, x13, x12
000000000002cf54	eor	x12, x12, x13, lsr #47
000000000002cf58	mul	x12, x12, x14
000000000002cf5c	eor	x12, x12, x12, lsr #47
000000000002cf60	mul	x12, x12, x14
000000000002cf64	udiv	x13, x12, x10
000000000002cf68	msub	x13, x13, x10, x12
000000000002cf6c	ldr	x12, [x8, #0x60]
000000000002cf70	ldr	x12, [x12, x13, lsl #3]
000000000002cf74	cbz	x12, 0x2d00c
000000000002cf78	ldr	x12, [x12]
000000000002cf7c	cbz	x12, 0x2d00c
000000000002cf80	sub	x14, x10, #0x1
000000000002cf84	lsr	x15, x9, #32
000000000002cf88	mov	x16, #0x2d69
000000000002cf8c	movk	x16, #0xeb38, lsl #16
000000000002cf90	movk	x16, #0xea08, lsl #32
000000000002cf94	movk	x16, #0x9ddf, lsl #48
000000000002cf98	b	0x2cfb0
000000000002cf9c	ldr	x17, [x12, #0x10]
000000000002cfa0	cmp	x17, x9
000000000002cfa4	b.eq	0x2d00c
000000000002cfa8	ldr	x12, [x12]
000000000002cfac	cbz	x12, 0x2d00c
000000000002cfb0	ldr	x17, [x12, #0x8]
000000000002cfb4	lsl	w0, w9, #3
000000000002cfb8	add	x0, x0, #0x8
000000000002cfbc	eor	x0, x0, x15
000000000002cfc0	mul	x0, x0, x16
000000000002cfc4	eor	x1, x0, x15
000000000002cfc8	eor	x0, x1, x0, lsr #47
000000000002cfcc	mul	x0, x0, x16
000000000002cfd0	eor	x0, x0, x0, lsr #47
000000000002cfd4	mul	x0, x0, x16
000000000002cfd8	cmp	x17, x0
000000000002cfdc	b.eq	0x2cf9c
000000000002cfe0	cmp	x11, #0x1
000000000002cfe4	b.hi	0x2cff0
000000000002cfe8	and	x17, x17, x14
000000000002cfec	b	0x2d000
000000000002cff0	cmp	x17, x10
000000000002cff4	b.lo	0x2d000
000000000002cff8	udiv	x0, x17, x10
000000000002cffc	msub	x17, x0, x10, x17
000000000002d000	cmp	x17, x13
000000000002d004	b.eq	0x2cfa8
000000000002d008	mov	x12, #0x0
000000000002d00c	ldr	x9, [x12, #0x10]
000000000002d010	str	x9, [x8, #0x90]
000000000002d014	ldr	x9, [x12, #0x18]!
000000000002d018	str	x9, [x8, #0x98]
000000000002d01c	ldr	x9, [x12]
000000000002d020	lsl	x9, x9, #32
000000000002d024	ldr	x8, [x8, #0x48]
000000000002d028	add	x0, x8, x9, asr #29
000000000002d02c	ldp	x29, x30, [sp], #0x10
000000000002d030	ret
__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE:
000000000002d034	stp	x20, x19, [sp, #-0x20]!
000000000002d038	stp	x29, x30, [sp, #0x10]
000000000002d03c	add	x29, sp, #0x10
000000000002d040	mov	x20, x1
000000000002d044	mov	x19, x0
000000000002d048	add	x8, x0, #0x98
000000000002d04c	add	x9, x1, #0x8
000000000002d050	ldar	x9, [x9]
000000000002d054	cmp	x8, x9
000000000002d058	b.eq	0x2d094
000000000002d05c	mov	w0, #0x1
000000000002d060	mov	w1, #0x18
000000000002d064	bl	0x519e0 ; symbol stub for: _calloc
000000000002d068	ldr	x8, [x19, #0xb8]!
000000000002d06c	stp	x19, x20, [x0, #0x8]
000000000002d070	str	x8, [x0]
000000000002d074	str	x0, [x8, #0x8]
000000000002d078	str	x0, [x19]
000000000002d07c	ldr	x8, [x19, #0x10]
000000000002d080	add	x8, x8, #0x1
000000000002d084	str	x8, [x19, #0x10]
000000000002d088	ldp	x29, x30, [sp, #0x10]
000000000002d08c	ldp	x20, x19, [sp], #0x20
000000000002d090	ret
000000000002d094	ldr	x0, [x20, #0x10]
000000000002d098	ldp	x9, x8, [x0]
000000000002d09c	str	x8, [x9, #0x8]
000000000002d0a0	ldr	x8, [x0, #0x8]
000000000002d0a4	str	x9, [x8]
000000000002d0a8	ldr	x8, [x19, #0xb0]
000000000002d0ac	sub	x8, x8, #0x1
000000000002d0b0	str	x8, [x19, #0xb0]
000000000002d0b4	ldp	x29, x30, [sp, #0x10]
000000000002d0b8	ldp	x20, x19, [sp], #0x20
000000000002d0bc	b	0x51a64 ; symbol stub for: _free
__ZN18ExceptionObjHolder5ThrowEP9ObjHeader:
000000000002d0c0	stp	x20, x19, [sp, #-0x20]!
000000000002d0c4	stp	x29, x30, [sp, #0x10]
000000000002d0c8	add	x29, sp, #0x10
000000000002d0cc	mov	x19, x0
000000000002d0d0	mov	w0, #0x10
000000000002d0d4	bl	0x5192c ; symbol stub for: ___cxa_allocate_exception
000000000002d0d8	mov	x1, x19
000000000002d0dc	bl	__ZN12_GLOBAL__N_122ExceptionObjHolderImplC1EP9ObjHeader
000000000002d0e0	adr	x1, #0x39ba0
000000000002d0e4	nop
000000000002d0e8	adr	x2, #0x90
000000000002d0ec	nop
000000000002d0f0	bl	0x51974 ; symbol stub for: ___cxa_throw
__ZN12_GLOBAL__N_122ExceptionObjHolderImplC1EP9ObjHeader:
000000000002d0f4	stp	x22, x21, [sp, #-0x30]!
000000000002d0f8	stp	x20, x19, [sp, #0x10]
000000000002d0fc	stp	x29, x30, [sp, #0x20]
000000000002d100	add	x29, sp, #0x20
000000000002d104	mov	x19, x1
000000000002d108	mov	x20, x0
000000000002d10c	adr	x8, #0x39b9c
000000000002d110	nop
000000000002d114	str	x8, [x0]
000000000002d118	adrp	x0, 63 ; 0x6c000
000000000002d11c	add	x0, x0, #0xbb0
000000000002d120	ldr	x8, [x0]
000000000002d124	blr	x8
000000000002d128	ldr	x21, [x0]
000000000002d12c	mov	w0, #0x1
000000000002d130	mov	w1, #0x28
000000000002d134	bl	0x519e0 ; symbol stub for: _calloc
000000000002d138	ldr	x8, [x21, #0xa8]!
000000000002d13c	sub	x9, x21, #0x8
000000000002d140	stp	x8, x21, [x0]
000000000002d144	str	x0, [x8, #0x8]
000000000002d148	str	x0, [x21]
000000000002d14c	ldr	x8, [x21, #0x10]
000000000002d150	add	x8, x8, #0x1
000000000002d154	str	x8, [x21, #0x10]
000000000002d158	stp	x9, x0, [x0, #0x18]
000000000002d15c	str	x19, [x0, #0x10]!
000000000002d160	str	x0, [x20, #0x8]
000000000002d164	mov	x0, x20
000000000002d168	ldp	x29, x30, [sp, #0x20]
000000000002d16c	ldp	x20, x19, [sp, #0x10]
000000000002d170	ldp	x22, x21, [sp], #0x30
000000000002d174	ret
__ZN12_GLOBAL__N_122ExceptionObjHolderImplD1Ev:
000000000002d178	stp	x22, x21, [sp, #-0x30]!
000000000002d17c	stp	x20, x19, [sp, #0x10]
000000000002d180	stp	x29, x30, [sp, #0x20]
000000000002d184	add	x29, sp, #0x20
000000000002d188	mov	x19, x0
000000000002d18c	adr	x8, #0x39b1c
000000000002d190	nop
000000000002d194	str	x8, [x0]
000000000002d198	adrp	x0, 63 ; 0x6c000
000000000002d19c	add	x0, x0, #0xbb0
000000000002d1a0	ldr	x8, [x0]
000000000002d1a4	blr	x8
000000000002d1a8	ldr	x20, [x0]
000000000002d1ac	add	x8, x20, #0xa0
000000000002d1b0	ldr	x21, [x19, #0x8]
000000000002d1b4	add	x9, x21, #0x8
000000000002d1b8	ldar	x9, [x9]
000000000002d1bc	cmp	x8, x9
000000000002d1c0	b.eq	0x2d204
000000000002d1c4	mov	w0, #0x1
000000000002d1c8	mov	w1, #0x18
000000000002d1cc	bl	0x519e0 ; symbol stub for: _calloc
000000000002d1d0	str	x21, [x0, #0x10]
000000000002d1d4	ldr	x8, [x20, #0xc0]!
000000000002d1d8	stp	x8, x20, [x0]
000000000002d1dc	str	x0, [x8, #0x8]
000000000002d1e0	str	x0, [x20]
000000000002d1e4	ldr	x8, [x20, #0x10]
000000000002d1e8	add	x8, x8, #0x1
000000000002d1ec	str	x8, [x20, #0x10]
000000000002d1f0	mov	x0, x19
000000000002d1f4	ldp	x29, x30, [sp, #0x20]
000000000002d1f8	ldp	x20, x19, [sp, #0x10]
000000000002d1fc	ldp	x22, x21, [sp], #0x30
000000000002d200	ret
000000000002d204	ldr	x0, [x21, #0x10]
000000000002d208	ldp	x9, x8, [x0]
000000000002d20c	str	x8, [x9, #0x8]
000000000002d210	ldr	x8, [x0, #0x8]
000000000002d214	str	x9, [x8]
000000000002d218	ldr	x8, [x20, #0xb8]
000000000002d21c	sub	x8, x8, #0x1
000000000002d220	str	x8, [x20, #0xb8]
000000000002d224	bl	0x51a64 ; symbol stub for: _free
000000000002d228	mov	x0, x19
000000000002d22c	ldp	x29, x30, [sp, #0x20]
000000000002d230	ldp	x20, x19, [sp, #0x10]
000000000002d234	ldp	x22, x21, [sp], #0x30
000000000002d238	ret
__ZN12_GLOBAL__N_122ExceptionObjHolderImplD0Ev:
000000000002d23c	stp	x29, x30, [sp, #-0x10]!
000000000002d240	mov	x29, sp
000000000002d244	bl	__ZN12_GLOBAL__N_122ExceptionObjHolderImplD1Ev
000000000002d248	ldp	x29, x30, [sp], #0x10
000000000002d24c	b	0x51914 ; symbol stub for: __ZdlPv
__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv:
000000000002d250	stp	x29, x30, [sp, #-0x10]!
000000000002d254	mov	x29, sp
000000000002d258	adrp	x0, 63 ; 0x6c000
000000000002d25c	add	x0, x0, #0xbb0
000000000002d260	ldr	x8, [x0]
000000000002d264	blr	x8
000000000002d268	ldr	x8, [x0]
000000000002d26c	add	x0, x8, #0x138
000000000002d270	ldp	x29, x30, [sp], #0x10
000000000002d274	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
__ZN6kotlin2gc22ConcurrentMarkAndSweep10ThreadData14OnSuspendForGCEv:
000000000002d278	sub	sp, sp, #0x80
000000000002d27c	stp	x22, x21, [sp, #0x50]
000000000002d280	stp	x20, x19, [sp, #0x60]
000000000002d284	stp	x29, x30, [sp, #0x70]
000000000002d288	add	x29, sp, #0x70
000000000002d28c	mov	x19, x0
000000000002d290	adr	x0, #0x3f700
000000000002d294	nop
000000000002d298	stur	x0, [x29, #-0x30]
000000000002d29c	mov	w8, #0x1
000000000002d2a0	sturb	w8, [x29, #-0x28]
000000000002d2a4	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002d2a8	adr	x22, #0x5979c
000000000002d2ac	nop
000000000002d2b0	ldarb	w8, [x22]
000000000002d2b4	tbz	w8, #0x0, 0x2d3a0
000000000002d2b8	add	x8, x19, #0x18
000000000002d2bc	ldarb	w9, [x8]
000000000002d2c0	and	w21, w9, #0x1
000000000002d2c4	mov	w9, #0x1
000000000002d2c8	stlrb	w9, [x8]
000000000002d2cc	ldr	x20, [x19, #0x8]
000000000002d2d0	add	x0, x20, #0x8
000000000002d2d4	bl	__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv
000000000002d2d8	add	x0, x20, #0x98
000000000002d2dc	bl	__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv
000000000002d2e0	add	x0, x20, #0xd0
000000000002d2e4	bl	__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv
000000000002d2e8	ldr	x8, [x20, #0x110]
000000000002d2ec	add	x0, x8, #0x70
000000000002d2f0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv
000000000002d2f4	ldarb	w8, [x22]
000000000002d2f8	tbz	w8, #0x0, 0x2d318
000000000002d2fc	adr	x20, #0x3f624
000000000002d300	nop
000000000002d304	sub	x1, x29, #0x30
000000000002d308	mov	x0, x20
000000000002d30c	bl	0x51848 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
000000000002d310	ldarb	w8, [x22]
000000000002d314	tbnz	w8, #0x0, 0x2d304
000000000002d318	ldurb	w8, [x29, #-0x28]
000000000002d31c	cbz	w8, 0x2d3c4
000000000002d320	ldur	x0, [x29, #-0x30]
000000000002d324	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002d328	sturb	wzr, [x29, #-0x28]
000000000002d32c	stp	xzr, xzr, [sp, #0x30]
000000000002d330	ldr	x8, [sp, #0x30]
000000000002d334	and	x8, x8, #0x1
000000000002d338	str	x8, [sp, #0x30]
000000000002d33c	ldr	x1, [x19, #0x8]
000000000002d340	add	x0, sp, #0x30
000000000002d344	bl	__ZN6kotlin2gc23collectRootSetForThreadIN12_GLOBAL__N_110MarkTraitsEEEvRNT_9MarkQueueERNS_2mm10ThreadDataE
000000000002d348	add	x0, sp, #0x10
000000000002d34c	add	x1, sp, #0x30
000000000002d350	bl	__ZN6kotlin2gc4MarkIN12_GLOBAL__N_110MarkTraitsEEENS0_9MarkStatsERNT_9MarkQueueE
000000000002d354	ldr	x20, [x19]
000000000002d358	ldr	q0, [sp, #0x10]
000000000002d35c	str	q0, [sp]
000000000002d360	ldr	x22, [sp, #0x20]
000000000002d364	adr	x0, #0x3f62c
000000000002d368	nop
000000000002d36c	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002d370	ldr	q0, [x20, #0x180]
000000000002d374	ldr	q1, [sp]
000000000002d378	add.2d	v0, v0, v1
000000000002d37c	str	q0, [x20, #0x180]
000000000002d380	ldr	x8, [x20, #0x190]
000000000002d384	add	x8, x8, x22
000000000002d388	str	x8, [x20, #0x190]
000000000002d38c	adr	x0, #0x3f604
000000000002d390	nop
000000000002d394	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002d398	add	x8, x19, #0x18
000000000002d39c	stlrb	w21, [x8]
000000000002d3a0	ldurb	w8, [x29, #-0x28]
000000000002d3a4	cbz	w8, 0x2d3b0
000000000002d3a8	ldur	x0, [x29, #-0x30]
000000000002d3ac	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002d3b0	ldp	x29, x30, [sp, #0x70]
000000000002d3b4	ldp	x20, x19, [sp, #0x60]
000000000002d3b8	ldp	x22, x21, [sp, #0x50]
000000000002d3bc	add	sp, sp, #0x80
000000000002d3c0	ret
000000000002d3c4	adr	x1, #0x28d47 ; literal pool for: "unique_lock::unlock: not locked"
000000000002d3c8	nop
000000000002d3cc	mov	w0, #0x1
000000000002d3d0	bl	0x5186c ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000002d3d4	brk	#0x1
000000000002d3d8	bl	___clang_call_terminate
000000000002d3dc	mov	x20, x0
000000000002d3e0	add	x8, x19, #0x18
000000000002d3e4	stlrb	w21, [x8]
000000000002d3e8	ldurb	w8, [x29, #-0x28]
000000000002d3ec	cbz	w8, 0x2d3f8
000000000002d3f0	ldur	x0, [x29, #-0x30]
000000000002d3f4	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002d3f8	mov	x0, x20
000000000002d3fc	bl	___clang_call_terminate
000000000002d400	bl	___clang_call_terminate
__ZN6kotlin2gc22ConcurrentMarkAndSweep29CollectRootSetAndStartMarkingEv:
000000000002d404	sub	sp, sp, #0x70
000000000002d408	stp	x26, x25, [sp, #0x20]
000000000002d40c	stp	x24, x23, [sp, #0x30]
000000000002d410	stp	x22, x21, [sp, #0x40]
000000000002d414	stp	x20, x19, [sp, #0x50]
000000000002d418	stp	x29, x30, [sp, #0x60]
000000000002d41c	add	x29, sp, #0x60
000000000002d420	mov	x19, x0
000000000002d424	adr	x0, #0x3f56c
000000000002d428	nop
000000000002d42c	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002d430	adr	x8, #0x59614
000000000002d434	nop
000000000002d438	stlrb	wzr, [x8]
000000000002d43c	ldr	x9, [x19, #0x170]
000000000002d440	and	x9, x9, #0x1
000000000002d444	str	x9, [x19, #0x170]
000000000002d448	str	xzr, [x19, #0x178]
000000000002d44c	add	x0, x8, #0x2fc
000000000002d450	bl	0x5180c ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
000000000002d454	nop
000000000002d458	ldr	x22, #0x598d8
000000000002d45c	cbz	x22, 0x2d4b8
000000000002d460	add	x20, x19, #0x170
000000000002d464	b	0x2d470
000000000002d468	ldr	x22, [x22, #0x150]
000000000002d46c	cbz	x22, 0x2d4b8
000000000002d470	ldr	x8, [x22, #0x118]
000000000002d474	add	x8, x8, #0x60
000000000002d478	ldarb	w8, [x8]
000000000002d47c	tbnz	w8, #0x0, 0x2d468
000000000002d480	add	x21, x22, #0x8
000000000002d484	add	x0, x22, #0x10
000000000002d488	bl	__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv
000000000002d48c	add	x0, x22, #0xa0
000000000002d490	bl	__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv
000000000002d494	add	x0, x22, #0xd8
000000000002d498	bl	__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv
000000000002d49c	ldr	x8, [x22, #0x118]
000000000002d4a0	add	x0, x8, #0x70
000000000002d4a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv
000000000002d4a8	mov	x0, x20
000000000002d4ac	mov	x1, x21
000000000002d4b0	bl	__ZN6kotlin2gc23collectRootSetForThreadIN12_GLOBAL__N_110MarkTraitsEEEvRNT_9MarkQueueERNS_2mm10ThreadDataE
000000000002d4b4	b	0x2d468
000000000002d4b8	adr	x0, #0x59888
000000000002d4bc	nop
000000000002d4c0	bl	0x51818 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000002d4c4	adr	x21, #0x59934
000000000002d4c8	nop
000000000002d4cc	mov	w20, #0x1
000000000002d4d0	ldaxrb	w8, [x21]
000000000002d4d4	stxrb	w9, w20, [x21]
000000000002d4d8	cbnz	w9, 0x2d4d0
000000000002d4dc	tbz	w8, #0x0, 0x2d4e8
000000000002d4e0	bl	0x51ce0 ; symbol stub for: _sched_yield
000000000002d4e4	b	0x2d4d0
000000000002d4e8	add	x22, sp, #0x8
000000000002d4ec	stp	x22, x22, [sp, #0x8]
000000000002d4f0	str	xzr, [sp, #0x18]
000000000002d4f4	adr	x20, #0x598ec
000000000002d4f8	nop
000000000002d4fc	ldr	x8, [x20, #0x8]
000000000002d500	adrp	x23, 89 ; 0x86000
000000000002d504	cmp	x8, x20
000000000002d508	b.eq	0x2d5a4
000000000002d50c	adrp	x24, 89 ; 0x86000
000000000002d510	b	0x2d544
000000000002d514	ldr	x0, [x9, #0x10]
000000000002d518	ldp	x9, x8, [x0]
000000000002d51c	str	x8, [x9, #0x8]
000000000002d520	ldr	x8, [x0, #0x8]
000000000002d524	str	x9, [x8]
000000000002d528	ldr	x8, [x24, #0xdd8]
000000000002d52c	sub	x8, x8, #0x1
000000000002d530	str	x8, [x24, #0xdd8]
000000000002d534	bl	0x51a64 ; symbol stub for: _free
000000000002d538	mov	x8, x25
000000000002d53c	cmp	x25, x20
000000000002d540	b.eq	0x2d5a4
000000000002d544	ldp	x25, x9, [x8, #0x8]
000000000002d548	add	x10, x9, #0x8
000000000002d54c	ldar	x10, [x10]
000000000002d550	cbz	x10, 0x2d514
000000000002d554	cmp	x22, x8
000000000002d558	b.eq	0x2d538
000000000002d55c	ldr	x9, [x8, #0x8]
000000000002d560	cmp	x9, x22
000000000002d564	b.eq	0x2d538
000000000002d568	ldr	x10, [x8]
000000000002d56c	str	x9, [x10, #0x8]
000000000002d570	ldr	x9, [x8, #0x8]
000000000002d574	str	x10, [x9]
000000000002d578	ldr	x9, [sp, #0x8]
000000000002d57c	str	x8, [x9, #0x8]
000000000002d580	stp	x9, x22, [x8]
000000000002d584	ldr	x9, [x23, #0xdf0]
000000000002d588	sub	x9, x9, #0x1
000000000002d58c	str	x9, [x23, #0xdf0]
000000000002d590	ldr	x9, [sp, #0x18]
000000000002d594	add	x9, x9, #0x1
000000000002d598	str	x8, [sp, #0x8]
000000000002d59c	str	x9, [sp, #0x18]
000000000002d5a0	b	0x2d538
000000000002d5a4	ldr	x8, [x23, #0xdf0]
000000000002d5a8	cbz	x8, 0x2d5e4
000000000002d5ac	ldp	x8, x0, [x20]
000000000002d5b0	ldr	x9, [x8, #0x8]
000000000002d5b4	ldr	x10, [x0]
000000000002d5b8	str	x9, [x10, #0x8]
000000000002d5bc	ldr	x8, [x8, #0x8]
000000000002d5c0	str	x10, [x8]
000000000002d5c4	str	xzr, [x20, #0x10]
000000000002d5c8	cmp	x0, x20
000000000002d5cc	b.eq	0x2d5e4
000000000002d5d0	ldr	x22, [x0, #0x8]
000000000002d5d4	bl	0x51a64 ; symbol stub for: _free
000000000002d5d8	mov	x0, x22
000000000002d5dc	cmp	x22, x20
000000000002d5e0	b.ne	0x2d5d0
000000000002d5e4	ldr	x8, [sp, #0x18]
000000000002d5e8	cbz	x8, 0x2d628
000000000002d5ec	ldp	x10, x9, [sp, #0x8]
000000000002d5f0	ldr	x11, [x10, #0x8]
000000000002d5f4	ldr	x12, [x9]
000000000002d5f8	str	x11, [x12, #0x8]
000000000002d5fc	ldr	x11, [x10, #0x8]
000000000002d600	str	x12, [x11]
000000000002d604	ldr	x11, [x20]
000000000002d608	str	x9, [x11, #0x8]
000000000002d60c	str	x11, [x9]
000000000002d610	str	x10, [x20]
000000000002d614	str	x20, [x10, #0x8]
000000000002d618	ldr	x9, [x20, #0x10]
000000000002d61c	add	x8, x9, x8
000000000002d620	str	x8, [x20, #0x10]
000000000002d624	str	xzr, [sp, #0x18]
000000000002d628	stlrb	wzr, [x21]
000000000002d62c	adr	x20, #0x59794
000000000002d630	nop
000000000002d634	mov	w22, #0x1
000000000002d638	ldaxrb	w8, [x20]
000000000002d63c	stxrb	w9, w22, [x20]
000000000002d640	cbnz	w9, 0x2d638
000000000002d644	tbz	w8, #0x0, 0x2d650
000000000002d648	bl	0x51ce0 ; symbol stub for: _sched_yield
000000000002d64c	b	0x2d638
000000000002d650	mov	w22, #0x1
000000000002d654	ldaxrb	w8, [x21]
000000000002d658	stxrb	w9, w22, [x21]
000000000002d65c	cbnz	w9, 0x2d654
000000000002d660	tbz	w8, #0x0, 0x2d66c
000000000002d664	bl	0x51ce0 ; symbol stub for: _sched_yield
000000000002d668	b	0x2d654
000000000002d66c	mov	w11, #0x0
000000000002d670	adr	x8, #0x59728
000000000002d674	nop
000000000002d678	ldr	x14, [x8]
000000000002d67c	ldr	x12, [x8, #0x38]
000000000002d680	adr	x8, #0x59748
000000000002d684	nop
000000000002d688	adr	x9, #0x59708
000000000002d68c	nop
000000000002d690	mov	x13, x14
000000000002d694	mov	x10, x11
000000000002d698	cmp	w10, #0x2
000000000002d69c	b.eq	0x2d978
000000000002d6a0	cmp	w10, #0x1
000000000002d6a4	b.eq	0x2d6b0
000000000002d6a8	cbnz	w10, 0x2d698
000000000002d6ac	b	0x2d6c0
000000000002d6b0	mov	w10, #0x2
000000000002d6b4	cmp	x13, x8
000000000002d6b8	b.eq	0x2d698
000000000002d6bc	b	0x2d6d4
000000000002d6c0	mov	w11, #0x1
000000000002d6c4	mov	x14, x12
000000000002d6c8	cmp	x13, x9
000000000002d6cc	b.eq	0x2d690
000000000002d6d0	b	0x2d6d8
000000000002d6d4	mov	x10, x11
000000000002d6d8	adrp	x11, 89 ; 0x86000
000000000002d6dc	adr	x12, #0x2af04
000000000002d6e0	nop
000000000002d6e4	cbz	w10, 0x2d6f8
000000000002d6e8	cmp	w10, #0x1
000000000002d6ec	b.ne	0x2d9b8
000000000002d6f0	add	x14, x13, #0x10
000000000002d6f4	b	0x2d6fc
000000000002d6f8	ldr	x14, [x13, #0x10]
000000000002d6fc	ldr	x14, [x14]
000000000002d700	cmp	x14, #0x2
000000000002d704	b.hs	0x2d75c
000000000002d708	cbz	w10, 0x2d790
000000000002d70c	cmp	w10, #0x1
000000000002d710	b.ne	0x2d978
000000000002d714	ldr	x14, [x13, #0x8]
000000000002d718	ldr	x15, [x11, #0xdd0]
000000000002d71c	mov	w10, #0x1
000000000002d720	cmp	w10, #0x2
000000000002d724	b.eq	0x2d978
000000000002d728	cmp	w10, #0x1
000000000002d72c	b.eq	0x2d738
000000000002d730	cbnz	w10, 0x2d720
000000000002d734	b	0x2d748
000000000002d738	mov	w10, #0x2
000000000002d73c	cmp	x14, x8
000000000002d740	b.eq	0x2d720
000000000002d744	b	0x2d96c
000000000002d748	mov	x13, x14
000000000002d74c	cmp	x14, x9
000000000002d750	mov	x14, x15
000000000002d754	b.eq	0x2d71c
000000000002d758	b	0x2d6e4
000000000002d75c	ldr	x15, [x14]
000000000002d760	tst	x15, #0x3
000000000002d764	b.eq	0x2d86c
000000000002d768	ldr	x15, [x14]
000000000002d76c	and	x15, x15, #0xfffffffffffffffc
000000000002d770	ldr	x15, [x15]
000000000002d774	cmp	x15, x12
000000000002d778	b.eq	0x2d8c0
000000000002d77c	ldr	w16, [x15, #0x28]
000000000002d780	cmp	w16, #0x1
000000000002d784	b.lt	0x2d708
000000000002d788	mov	x16, #0x0
000000000002d78c	b	0x2d7f4
000000000002d790	mov	w15, #0x0
000000000002d794	ldr	x14, [x13, #0x8]
000000000002d798	ldr	x16, [x11, #0xdd0]
000000000002d79c	mov	x10, x15
000000000002d7a0	cmp	w10, #0x2
000000000002d7a4	b.eq	0x2d978
000000000002d7a8	cmp	w10, #0x1
000000000002d7ac	b.eq	0x2d7b8
000000000002d7b0	cbnz	w10, 0x2d7a0
000000000002d7b4	b	0x2d7c8
000000000002d7b8	mov	w10, #0x2
000000000002d7bc	cmp	x14, x8
000000000002d7c0	b.eq	0x2d7a0
000000000002d7c4	b	0x2d960
000000000002d7c8	mov	w15, #0x1
000000000002d7cc	mov	x13, x14
000000000002d7d0	cmp	x14, x9
000000000002d7d4	mov	x14, x16
000000000002d7d8	b.eq	0x2d79c
000000000002d7dc	b	0x2d6e4
000000000002d7e0	clrex
000000000002d7e4	add	x16, x16, #0x1
000000000002d7e8	ldrsw	x17, [x15, #0x28]
000000000002d7ec	cmp	x16, x17
000000000002d7f0	b.ge	0x2d708
000000000002d7f4	ldr	x17, [x15, #0x20]
000000000002d7f8	ldrsw	x17, [x17, x16, lsl #2]
000000000002d7fc	ldr	x17, [x17, x14]
000000000002d800	cbz	x17, 0x2d7e4
000000000002d804	ldr	x0, [x17]
000000000002d808	and	x0, x0, #0x3
000000000002d80c	cmp	x17, #0x2
000000000002d810	ccmp	x0, #0x0, #0x0, hs
000000000002d814	b.ne	0x2d7e4
000000000002d818	ldur	x0, [x17, #-0x8]
000000000002d81c	tbnz	w0, #0x0, 0x2d7e4
000000000002d820	sub	x17, x17, #0x8
000000000002d824	orr	x1, x0, #0x1
000000000002d828	ldxr	x2, [x17]
000000000002d82c	cmp	x2, x0
000000000002d830	b.ne	0x2d7e0
000000000002d834	stxr	w2, x1, [x17]
000000000002d838	cbnz	w2, 0x2d828
000000000002d83c	ldr	x0, [x19, #0x170]
000000000002d840	ldr	x1, [x19, #0x170]
000000000002d844	and	x1, x1, #0x1
000000000002d848	orr	x1, x1, x17
000000000002d84c	str	x1, [x19, #0x170]
000000000002d850	ldr	x1, [x17]
000000000002d854	bfxil	x0, x1, #0, #1
000000000002d858	str	x0, [x17]
000000000002d85c	ldr	x17, [x19, #0x178]
000000000002d860	add	x17, x17, #0x1
000000000002d864	str	x17, [x19, #0x178]
000000000002d868	b	0x2d7e4
000000000002d86c	ldur	x15, [x14, #-0x8]
000000000002d870	tbnz	w15, #0x0, 0x2d708
000000000002d874	sub	x14, x14, #0x8
000000000002d878	orr	x16, x15, #0x1
000000000002d87c	ldxr	x17, [x14]
000000000002d880	cmp	x17, x15
000000000002d884	b.ne	0x2d958
000000000002d888	stxr	w17, x16, [x14]
000000000002d88c	cbnz	w17, 0x2d87c
000000000002d890	ldr	x15, [x19, #0x170]
000000000002d894	ldr	x16, [x19, #0x170]
000000000002d898	and	x16, x16, #0x1
000000000002d89c	orr	x16, x16, x14
000000000002d8a0	str	x16, [x19, #0x170]
000000000002d8a4	ldr	x16, [x14]
000000000002d8a8	bfxil	x15, x16, #0, #1
000000000002d8ac	str	x15, [x14]
000000000002d8b0	ldr	x14, [x19, #0x178]
000000000002d8b4	add	x14, x14, #0x1
000000000002d8b8	str	x14, [x19, #0x178]
000000000002d8bc	b	0x2d708
000000000002d8c0	ldr	w15, [x14, #0x8]
000000000002d8c4	cbz	w15, 0x2d708
000000000002d8c8	mov	w15, #0x0
000000000002d8cc	add	x16, x14, #0x10
000000000002d8d0	b	0x2d8e8
000000000002d8d4	clrex
000000000002d8d8	add	w15, w15, #0x1
000000000002d8dc	ldr	w17, [x14, #0x8]
000000000002d8e0	cmp	w15, w17
000000000002d8e4	b.hs	0x2d708
000000000002d8e8	ldr	x17, [x16, w15, sxtw #3]
000000000002d8ec	cbz	x17, 0x2d8d8
000000000002d8f0	ldr	x0, [x17]
000000000002d8f4	and	x0, x0, #0x3
000000000002d8f8	cmp	x17, #0x2
000000000002d8fc	ccmp	x0, #0x0, #0x0, hs
000000000002d900	b.ne	0x2d8d8
000000000002d904	ldur	x0, [x17, #-0x8]
000000000002d908	tbnz	w0, #0x0, 0x2d8d8
000000000002d90c	sub	x17, x17, #0x8
000000000002d910	orr	x1, x0, #0x1
000000000002d914	ldxr	x2, [x17]
000000000002d918	cmp	x2, x0
000000000002d91c	b.ne	0x2d8d4
000000000002d920	stxr	w2, x1, [x17]
000000000002d924	cbnz	w2, 0x2d914
000000000002d928	ldr	x0, [x19, #0x170]
000000000002d92c	ldr	x1, [x19, #0x170]
000000000002d930	and	x1, x1, #0x1
000000000002d934	orr	x1, x1, x17
000000000002d938	str	x1, [x19, #0x170]
000000000002d93c	ldr	x1, [x17]
000000000002d940	bfxil	x0, x1, #0, #1
000000000002d944	str	x0, [x17]
000000000002d948	ldr	x17, [x19, #0x178]
000000000002d94c	add	x17, x17, #0x1
000000000002d950	str	x17, [x19, #0x178]
000000000002d954	b	0x2d8d8
000000000002d958	clrex
000000000002d95c	b	0x2d708
000000000002d960	mov	x10, x15
000000000002d964	mov	x13, x14
000000000002d968	b	0x2d6e4
000000000002d96c	mov	w10, #0x1
000000000002d970	mov	x13, x14
000000000002d974	b	0x2d6e4
000000000002d978	add	x8, x20, #0x38
000000000002d97c	stlrb	wzr, [x8]
000000000002d980	stlrb	wzr, [x20]
000000000002d984	adr	x19, #0x3ef9c
000000000002d988	nop
000000000002d98c	mov	x0, x19
000000000002d990	bl	0x51830 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002d994	add	x0, x19, #0x70
000000000002d998	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002d99c	ldp	x29, x30, [sp, #0x60]
000000000002d9a0	ldp	x20, x19, [sp, #0x50]
000000000002d9a4	ldp	x22, x21, [sp, #0x40]
000000000002d9a8	ldp	x24, x23, [sp, #0x30]
000000000002d9ac	ldp	x26, x25, [sp, #0x20]
000000000002d9b0	add	sp, sp, #0x70
000000000002d9b4	ret
000000000002d9b8	adr	x2, #0x286cd ; literal pool for: "Cannot dereference"
000000000002d9bc	nop
000000000002d9c0	mov	w0, #0x0
000000000002d9c4	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
000000000002d9c8	brk	#0x1
000000000002d9cc	bl	___clang_call_terminate
000000000002d9d0	bl	___clang_call_terminate
000000000002d9d4	bl	___clang_call_terminate
000000000002d9d8	bl	___clang_call_terminate
000000000002d9dc	bl	___clang_call_terminate
000000000002d9e0	bl	___clang_call_terminate
__ZN6kotlin2gc23collectRootSetForThreadIN12_GLOBAL__N_110MarkTraitsEEEvRNT_9MarkQueueERNS_2mm10ThreadDataE:
000000000002d9e4	sub	sp, sp, #0x20
000000000002d9e8	stp	x29, x30, [sp, #0x10]
000000000002d9ec	add	x29, sp, #0x10
000000000002d9f0	ldr	x8, [x1, #0x110]
000000000002d9f4	str	xzr, [x8, #0x28]
000000000002d9f8	str	xzr, [x8, #0x38]
000000000002d9fc	ldr	x9, [x8]
000000000002da00	add	x9, x9, #0x8
000000000002da04	ldar	x9, [x9]
000000000002da08	str	x9, [x8, #0x30]
000000000002da0c	ldr	x9, [x8]
000000000002da10	ldar	w9, [x9]
000000000002da14	sxtw	x9, w9
000000000002da18	str	x9, [x8, #0x40]
000000000002da1c	ldr	x9, [x1, #0x108]
000000000002da20	cbz	x9, 0x2da80
000000000002da24	ldpsw	x8, x10, [x9, #0x10]
000000000002da28	lsl	x11, x8, #3
000000000002da2c	add	x8, x9, x11
000000000002da30	add	x8, x8, #0x18
000000000002da34	add	x10, x8, x10, lsl #3
000000000002da38	sub	x10, x10, x11
000000000002da3c	sub	x10, x10, #0x18
000000000002da40	stp	x8, x10, [sp]
000000000002da44	cbz	x9, 0x2da88
000000000002da48	cmp	x8, x10
000000000002da4c	b.lo	0x2da88
000000000002da50	ldr	x9, [x9, #0x8]
000000000002da54	cbz	x9, 0x2da80
000000000002da58	ldpsw	x8, x10, [x9, #0x10]
000000000002da5c	lsl	x11, x8, #3
000000000002da60	add	x12, x9, x11
000000000002da64	add	x8, x12, #0x18
000000000002da68	add	x10, x12, x10, lsl #3
000000000002da6c	sub	x10, x10, x11
000000000002da70	stp	x8, x10, [sp]
000000000002da74	cmp	x8, x10
000000000002da78	b.hs	0x2da50
000000000002da7c	b	0x2da88
000000000002da80	mov	x8, #0x0
000000000002da84	stp	xzr, xzr, [sp]
000000000002da88	mov	w14, #0x0
000000000002da8c	ldp	x13, x12, [x1, #0x40]
000000000002da90	mov	x10, x9
000000000002da94	mov	x11, x14
000000000002da98	cmp	w11, #0x2
000000000002da9c	b.eq	0x2ddb0
000000000002daa0	cmp	w11, #0x1
000000000002daa4	b.eq	0x2dab0
000000000002daa8	cbnz	w11, 0x2da98
000000000002daac	b	0x2dac0
000000000002dab0	mov	w14, #0x2
000000000002dab4	cmp	x12, x10
000000000002dab8	b.eq	0x2da94
000000000002dabc	b	0x2dad0
000000000002dac0	cbnz	x10, 0x2dad0
000000000002dac4	mov	w14, #0x1
000000000002dac8	mov	x9, x13
000000000002dacc	cbz	x8, 0x2da90
000000000002dad0	adr	x9, #0x2ab10
000000000002dad4	nop
000000000002dad8	mov	x12, x8
000000000002dadc	cbz	w11, 0x2daec
000000000002dae0	cmp	w11, #0x1
000000000002dae4	b.ne	0x2ddbc
000000000002dae8	mov	x12, x10
000000000002daec	ldr	x12, [x12]
000000000002daf0	cmp	x12, #0x2
000000000002daf4	b.hs	0x2db48
000000000002daf8	cmp	w11, #0x1
000000000002dafc	b.ne	0x2dcf4
000000000002db00	add	x12, x10, #0x8
000000000002db04	ldp	x14, x13, [x1, #0x40]
000000000002db08	mov	w11, #0x1
000000000002db0c	cmp	w11, #0x2
000000000002db10	b.eq	0x2ddb0
000000000002db14	cmp	w11, #0x1
000000000002db18	b.eq	0x2db24
000000000002db1c	cbnz	w11, 0x2db0c
000000000002db20	b	0x2db34
000000000002db24	mov	w11, #0x2
000000000002db28	cmp	x12, x13
000000000002db2c	b.eq	0x2db0c
000000000002db30	b	0x2dd4c
000000000002db34	mov	x10, x12
000000000002db38	cbnz	x12, 0x2dad8
000000000002db3c	mov	x12, x14
000000000002db40	cbz	x8, 0x2db08
000000000002db44	b	0x2dad8
000000000002db48	ldr	x13, [x12]
000000000002db4c	tst	x13, #0x3
000000000002db50	b.eq	0x2dc08
000000000002db54	ldr	x13, [x12]
000000000002db58	and	x13, x13, #0xfffffffffffffffc
000000000002db5c	ldr	x13, [x13]
000000000002db60	cmp	x13, x9
000000000002db64	b.eq	0x2dc5c
000000000002db68	ldr	w14, [x13, #0x28]
000000000002db6c	cmp	w14, #0x1
000000000002db70	b.lt	0x2daf8
000000000002db74	mov	x14, #0x0
000000000002db78	b	0x2db90
000000000002db7c	clrex
000000000002db80	add	x14, x14, #0x1
000000000002db84	ldrsw	x15, [x13, #0x28]
000000000002db88	cmp	x14, x15
000000000002db8c	b.ge	0x2daf8
000000000002db90	ldr	x15, [x13, #0x20]
000000000002db94	ldrsw	x15, [x15, x14, lsl #2]
000000000002db98	ldr	x15, [x15, x12]
000000000002db9c	cbz	x15, 0x2db80
000000000002dba0	ldr	x16, [x15]
000000000002dba4	and	x16, x16, #0x3
000000000002dba8	cmp	x15, #0x2
000000000002dbac	ccmp	x16, #0x0, #0x0, hs
000000000002dbb0	b.ne	0x2db80
000000000002dbb4	ldur	x16, [x15, #-0x8]
000000000002dbb8	tbnz	w16, #0x0, 0x2db80
000000000002dbbc	sub	x15, x15, #0x8
000000000002dbc0	orr	x17, x16, #0x1
000000000002dbc4	ldxr	x2, [x15]
000000000002dbc8	cmp	x2, x16
000000000002dbcc	b.ne	0x2db7c
000000000002dbd0	stxr	w2, x17, [x15]
000000000002dbd4	cbnz	w2, 0x2dbc4
000000000002dbd8	ldr	x16, [x0]
000000000002dbdc	ldr	x17, [x0]
000000000002dbe0	and	x17, x17, #0x1
000000000002dbe4	orr	x17, x17, x15
000000000002dbe8	str	x17, [x0]
000000000002dbec	ldr	x17, [x15]
000000000002dbf0	bfxil	x16, x17, #0, #1
000000000002dbf4	str	x16, [x15]
000000000002dbf8	ldr	x15, [x0, #0x8]
000000000002dbfc	add	x15, x15, #0x1
000000000002dc00	str	x15, [x0, #0x8]
000000000002dc04	b	0x2db80
000000000002dc08	ldur	x13, [x12, #-0x8]
000000000002dc0c	tbnz	w13, #0x0, 0x2daf8
000000000002dc10	sub	x12, x12, #0x8
000000000002dc14	orr	x14, x13, #0x1
000000000002dc18	ldxr	x15, [x12]
000000000002dc1c	cmp	x15, x13
000000000002dc20	b.ne	0x2dd44
000000000002dc24	stxr	w15, x14, [x12]
000000000002dc28	cbnz	w15, 0x2dc18
000000000002dc2c	ldr	x13, [x0]
000000000002dc30	ldr	x14, [x0]
000000000002dc34	and	x14, x14, #0x1
000000000002dc38	orr	x14, x14, x12
000000000002dc3c	str	x14, [x0]
000000000002dc40	ldr	x14, [x12]
000000000002dc44	bfxil	x13, x14, #0, #1
000000000002dc48	str	x13, [x12]
000000000002dc4c	ldr	x12, [x0, #0x8]
000000000002dc50	add	x12, x12, #0x1
000000000002dc54	str	x12, [x0, #0x8]
000000000002dc58	b	0x2daf8
000000000002dc5c	ldr	w13, [x12, #0x8]
000000000002dc60	cbz	w13, 0x2daf8
000000000002dc64	mov	w13, #0x0
000000000002dc68	add	x14, x12, #0x10
000000000002dc6c	b	0x2dc84
000000000002dc70	clrex
000000000002dc74	add	w13, w13, #0x1
000000000002dc78	ldr	w15, [x12, #0x8]
000000000002dc7c	cmp	w13, w15
000000000002dc80	b.hs	0x2daf8
000000000002dc84	ldr	x15, [x14, w13, sxtw #3]
000000000002dc88	cbz	x15, 0x2dc74
000000000002dc8c	ldr	x16, [x15]
000000000002dc90	and	x16, x16, #0x3
000000000002dc94	cmp	x15, #0x2
000000000002dc98	ccmp	x16, #0x0, #0x0, hs
000000000002dc9c	b.ne	0x2dc74
000000000002dca0	ldur	x16, [x15, #-0x8]
000000000002dca4	tbnz	w16, #0x0, 0x2dc74
000000000002dca8	sub	x15, x15, #0x8
000000000002dcac	orr	x17, x16, #0x1
000000000002dcb0	ldxr	x2, [x15]
000000000002dcb4	cmp	x2, x16
000000000002dcb8	b.ne	0x2dc70
000000000002dcbc	stxr	w2, x17, [x15]
000000000002dcc0	cbnz	w2, 0x2dcb0
000000000002dcc4	ldr	x16, [x0]
000000000002dcc8	ldr	x17, [x0]
000000000002dccc	and	x17, x17, #0x1
000000000002dcd0	orr	x17, x17, x15
000000000002dcd4	str	x17, [x0]
000000000002dcd8	ldr	x17, [x15]
000000000002dcdc	bfxil	x16, x17, #0, #1
000000000002dce0	str	x16, [x15]
000000000002dce4	ldr	x15, [x0, #0x8]
000000000002dce8	add	x15, x15, #0x1
000000000002dcec	str	x15, [x0, #0x8]
000000000002dcf0	b	0x2dc74
000000000002dcf4	cmp	w11, #0x2
000000000002dcf8	b.eq	0x2ddb0
000000000002dcfc	add	x8, x8, #0x8
000000000002dd00	str	x8, [sp]
000000000002dd04	cbz	x10, 0x2dd60
000000000002dd08	ldr	x11, [sp, #0x8]
000000000002dd0c	cmp	x8, x11
000000000002dd10	b.lo	0x2dd60
000000000002dd14	ldr	x10, [x10, #0x8]
000000000002dd18	cbz	x10, 0x2dd58
000000000002dd1c	ldpsw	x8, x11, [x10, #0x10]
000000000002dd20	lsl	x12, x8, #3
000000000002dd24	add	x13, x10, x12
000000000002dd28	add	x8, x13, #0x18
000000000002dd2c	add	x11, x13, x11, lsl #3
000000000002dd30	sub	x11, x11, x12
000000000002dd34	stp	x8, x11, [sp]
000000000002dd38	cmp	x8, x11
000000000002dd3c	b.hs	0x2dd14
000000000002dd40	b	0x2dd60
000000000002dd44	clrex
000000000002dd48	b	0x2daf8
000000000002dd4c	mov	w11, #0x1
000000000002dd50	mov	x10, x12
000000000002dd54	b	0x2dad8
000000000002dd58	mov	x8, #0x0
000000000002dd5c	stp	xzr, xzr, [sp]
000000000002dd60	mov	w14, #0x0
000000000002dd64	ldp	x13, x12, [x1, #0x40]
000000000002dd68	mov	x15, x10
000000000002dd6c	mov	x10, x15
000000000002dd70	mov	x11, x14
000000000002dd74	cmp	w11, #0x2
000000000002dd78	b.eq	0x2ddb0
000000000002dd7c	cmp	w11, #0x1
000000000002dd80	b.eq	0x2dd8c
000000000002dd84	cbnz	w11, 0x2dd74
000000000002dd88	b	0x2dd9c
000000000002dd8c	mov	w14, #0x2
000000000002dd90	cmp	x12, x10
000000000002dd94	b.eq	0x2dd70
000000000002dd98	b	0x2dad8
000000000002dd9c	cbnz	x10, 0x2dad8
000000000002dda0	mov	w14, #0x1
000000000002dda4	mov	x15, x13
000000000002dda8	cbz	x8, 0x2dd6c
000000000002ddac	b	0x2dad8
000000000002ddb0	ldp	x29, x30, [sp, #0x10]
000000000002ddb4	add	sp, sp, #0x20
000000000002ddb8	ret
000000000002ddbc	adr	x2, #0x282c9 ; literal pool for: "Cannot dereference"
000000000002ddc0	nop
000000000002ddc4	mov	w0, #0x0
000000000002ddc8	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
000000000002ddcc	brk	#0x1
000000000002ddd0	bl	___clang_call_terminate
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv:
000000000002ddd4	stp	x22, x21, [sp, #-0x30]!
000000000002ddd8	stp	x20, x19, [sp, #0x10]
000000000002dddc	stp	x29, x30, [sp, #0x20]
000000000002dde0	add	x29, sp, #0x20
000000000002dde4	ldr	x8, [x0, #0x18]
000000000002dde8	cbz	x8, 0x2de60
000000000002ddec	mov	x19, x0
000000000002ddf0	ldr	x8, [x0]
000000000002ddf4	add	x20, x8, #0x18
000000000002ddf8	mov	w21, #0x1
000000000002ddfc	ldaxrb	w8, [x20]
000000000002de00	stxrb	w9, w21, [x20]
000000000002de04	cbnz	w9, 0x2ddfc
000000000002de08	tbz	w8, #0x0, 0x2de14
000000000002de0c	bl	0x51ce0 ; symbol stub for: _sched_yield
000000000002de10	b	0x2ddfc
000000000002de14	ldr	x8, [x19]
000000000002de18	ldr	x9, [x8]
000000000002de1c	cbz	x9, 0x2de24
000000000002de20	ldr	x8, [x8, #0x8]
000000000002de24	ldr	x9, [x19, #0x18]
000000000002de28	str	xzr, [x19, #0x18]
000000000002de2c	ldr	x0, [x8]
000000000002de30	str	x9, [x8]
000000000002de34	cbz	x0, 0x2de40
000000000002de38	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002de3c	bl	_mi_free
000000000002de40	ldr	x8, [x19]
000000000002de44	ldp	x9, x10, [x19, #0x20]
000000000002de48	str	x9, [x8, #0x8]
000000000002de4c	stp	xzr, xzr, [x19, #0x20]
000000000002de50	ldr	x9, [x8, #0x10]
000000000002de54	add	x9, x9, x10
000000000002de58	str	x9, [x8, #0x10]
000000000002de5c	stlrb	wzr, [x20]
000000000002de60	ldp	x29, x30, [sp, #0x20]
000000000002de64	ldp	x20, x19, [sp, #0x10]
000000000002de68	ldp	x22, x21, [sp], #0x30
000000000002de6c	ret
000000000002de70	bl	___clang_call_terminate
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev:
000000000002de74	stp	x20, x19, [sp, #-0x20]!
000000000002de78	stp	x29, x30, [sp, #0x10]
000000000002de7c	add	x29, sp, #0x10
000000000002de80	mov	x19, x0
000000000002de84	ldr	x0, [x0]
000000000002de88	str	xzr, [x19]
000000000002de8c	cbz	x0, 0x2de98
000000000002de90	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002de94	bl	_mi_free
000000000002de98	mov	x0, x19
000000000002de9c	ldp	x29, x30, [sp, #0x10]
000000000002dea0	ldp	x20, x19, [sp], #0x20
000000000002dea4	ret
__ZN6kotlin2gc4MarkIN12_GLOBAL__N_110MarkTraitsEEENS0_9MarkStatsERNT_9MarkQueueE:
000000000002dea8	stp	x20, x19, [sp, #-0x20]!
000000000002deac	stp	x29, x30, [sp, #0x10]
000000000002deb0	add	x29, sp, #0x10
000000000002deb4	mov	x19, x1
000000000002deb8	mov	x20, x0
000000000002debc	stp	xzr, xzr, [x0]
000000000002dec0	ldr	x8, [x1, #0x8]
000000000002dec4	str	x8, [x0, #0x10]
000000000002dec8	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002decc	ldr	x8, [x19, #0x8]
000000000002ded0	cbz	x8, 0x2e14c
000000000002ded4	adr	x8, #0x2a70c
000000000002ded8	nop
000000000002dedc	ldr	x9, [x19]
000000000002dee0	ldr	x10, [x19]
000000000002dee4	ands	x10, x10, #0xfffffffffffffffe
000000000002dee8	b.eq	0x2df14
000000000002deec	ldr	x11, [x10]
000000000002def0	ldr	x12, [x19]
000000000002def4	bfxil	x11, x12, #0, #1
000000000002def8	str	x11, [x19]
000000000002defc	ldr	x11, [x10]
000000000002df00	and	x11, x11, #0x1
000000000002df04	str	x11, [x10]
000000000002df08	ldr	x10, [x19, #0x8]
000000000002df0c	sub	x10, x10, #0x1
000000000002df10	str	x10, [x19, #0x8]
000000000002df14	sub	x9, x9, #0x8
000000000002df18	and	x10, x9, #0xfffffffffffffffe
000000000002df1c	ldr	x9, [x20]
000000000002df20	add	x9, x9, #0x1
000000000002df24	str	x9, [x20]
000000000002df28	ldr	x9, [x10, #0x10]
000000000002df2c	and	x9, x9, #0xfffffffffffffffc
000000000002df30	ldr	x9, [x9]
000000000002df34	ldrsw	x9, [x9, #0x14]
000000000002df38	tbnz	w9, #0x1f, 0x2df48
000000000002df3c	and	x9, x9, #0xffffffff
000000000002df40	add	x11, x9, #0xf
000000000002df44	b	0x2df54
000000000002df48	ldr	w11, [x10, #0x18]
000000000002df4c	mneg	x9, x9, x11
000000000002df50	add	x11, x9, #0x1f
000000000002df54	add	x9, x10, #0x10
000000000002df58	and	x11, x11, #0xfffffffffffffff8
000000000002df5c	add	x11, x11, #0xf
000000000002df60	and	x11, x11, #0xfffffffffffffff8
000000000002df64	ldr	x12, [x20, #0x8]
000000000002df68	add	x11, x12, x11
000000000002df6c	str	x11, [x20, #0x8]
000000000002df70	ldr	x11, [x9]
000000000002df74	and	x11, x11, #0xfffffffffffffffc
000000000002df78	ldr	x11, [x11]
000000000002df7c	cmp	x11, x8
000000000002df80	b.eq	0x2e020
000000000002df84	ldr	w10, [x11, #0x28]
000000000002df88	cmp	w10, #0x1
000000000002df8c	b.lt	0x2e0b4
000000000002df90	mov	x10, #0x0
000000000002df94	b	0x2dfac
000000000002df98	clrex
000000000002df9c	add	x10, x10, #0x1
000000000002dfa0	ldrsw	x12, [x11, #0x28]
000000000002dfa4	cmp	x10, x12
000000000002dfa8	b.ge	0x2e0b4
000000000002dfac	ldr	x12, [x11, #0x20]
000000000002dfb0	ldrsw	x12, [x12, x10, lsl #2]
000000000002dfb4	ldr	x12, [x12, x9]
000000000002dfb8	cmp	x12, #0x2
000000000002dfbc	b.lo	0x2df9c
000000000002dfc0	ldr	x13, [x12]
000000000002dfc4	tst	x13, #0x3
000000000002dfc8	b.ne	0x2df9c
000000000002dfcc	ldur	x13, [x12, #-0x8]
000000000002dfd0	tbnz	w13, #0x0, 0x2df9c
000000000002dfd4	sub	x12, x12, #0x8
000000000002dfd8	orr	x14, x13, #0x1
000000000002dfdc	ldxr	x15, [x12]
000000000002dfe0	cmp	x15, x13
000000000002dfe4	b.ne	0x2df98
000000000002dfe8	stxr	w15, x14, [x12]
000000000002dfec	cbnz	w15, 0x2dfdc
000000000002dff0	ldr	x13, [x19]
000000000002dff4	ldr	x14, [x19]
000000000002dff8	and	x14, x14, #0x1
000000000002dffc	orr	x14, x14, x12
000000000002e000	str	x14, [x19]
000000000002e004	ldr	x14, [x12]
000000000002e008	bfxil	x13, x14, #0, #1
000000000002e00c	str	x13, [x12]
000000000002e010	ldr	x12, [x19, #0x8]
000000000002e014	add	x12, x12, #0x1
000000000002e018	str	x12, [x19, #0x8]
000000000002e01c	b	0x2df9c
000000000002e020	ldr	w11, [x10, #0x18]
000000000002e024	cbz	w11, 0x2e0b4
000000000002e028	mov	w11, #0x0
000000000002e02c	add	x12, x10, #0x20
000000000002e030	b	0x2e048
000000000002e034	clrex
000000000002e038	add	w11, w11, #0x1
000000000002e03c	ldr	w13, [x10, #0x18]
000000000002e040	cmp	w11, w13
000000000002e044	b.hs	0x2e0b4
000000000002e048	ldr	x13, [x12, w11, sxtw #3]
000000000002e04c	cmp	x13, #0x2
000000000002e050	b.lo	0x2e038
000000000002e054	ldr	x14, [x13]
000000000002e058	tst	x14, #0x3
000000000002e05c	b.ne	0x2e038
000000000002e060	ldur	x14, [x13, #-0x8]
000000000002e064	tbnz	w14, #0x0, 0x2e038
000000000002e068	sub	x13, x13, #0x8
000000000002e06c	orr	x15, x14, #0x1
000000000002e070	ldxr	x16, [x13]
000000000002e074	cmp	x16, x14
000000000002e078	b.ne	0x2e034
000000000002e07c	stxr	w16, x15, [x13]
000000000002e080	cbnz	w16, 0x2e070
000000000002e084	ldr	x14, [x19]
000000000002e088	ldr	x15, [x19]
000000000002e08c	and	x15, x15, #0x1
000000000002e090	orr	x15, x15, x13
000000000002e094	str	x15, [x19]
000000000002e098	ldr	x15, [x13]
000000000002e09c	bfxil	x14, x15, #0, #1
000000000002e0a0	str	x14, [x13]
000000000002e0a4	ldr	x13, [x19, #0x8]
000000000002e0a8	add	x13, x13, #0x1
000000000002e0ac	str	x13, [x19, #0x8]
000000000002e0b0	b	0x2e038
000000000002e0b4	ldar	x9, [x9]
000000000002e0b8	and	x9, x9, #0xfffffffffffffffc
000000000002e0bc	ldr	x10, [x9]
000000000002e0c0	cmp	x9, #0x0
000000000002e0c4	ccmp	x10, x9, #0x4, ne
000000000002e0c8	b.eq	0x2e144
000000000002e0cc	add	x9, x9, #0x18
000000000002e0d0	ldar	x9, [x9]
000000000002e0d4	sbfx	x10, x9, #0, #1
000000000002e0d8	and	x9, x9, x10
000000000002e0dc	and	x9, x9, #0xfffffffffffffffe
000000000002e0e0	cmp	x9, #0x2
000000000002e0e4	b.lo	0x2e144
000000000002e0e8	ldur	x10, [x9, #-0x8]
000000000002e0ec	tbnz	w10, #0x0, 0x2e144
000000000002e0f0	sub	x9, x9, #0x8
000000000002e0f4	orr	x11, x10, #0x1
000000000002e0f8	ldxr	x12, [x9]
000000000002e0fc	cmp	x12, x10
000000000002e100	b.ne	0x2e140
000000000002e104	stxr	w12, x11, [x9]
000000000002e108	cbnz	w12, 0x2e0f8
000000000002e10c	ldr	x10, [x19]
000000000002e110	ldr	x11, [x19]
000000000002e114	and	x11, x11, #0x1
000000000002e118	orr	x11, x11, x9
000000000002e11c	str	x11, [x19]
000000000002e120	ldr	x11, [x9]
000000000002e124	bfxil	x10, x11, #0, #1
000000000002e128	str	x10, [x9]
000000000002e12c	ldr	x9, [x19, #0x8]
000000000002e130	add	x9, x9, #0x1
000000000002e134	str	x9, [x19, #0x8]
000000000002e138	cbnz	x9, 0x2dedc
000000000002e13c	b	0x2e14c
000000000002e140	clrex
000000000002e144	ldr	x9, [x19, #0x8]
000000000002e148	cbnz	x9, 0x2dedc
000000000002e14c	ldp	x29, x30, [sp, #0x10]
000000000002e150	ldp	x20, x19, [sp], #0x20
000000000002e154	b	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEED1Ev:
000000000002e158	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEED0Ev:
000000000002e15c	b	0x51914 ; symbol stub for: __ZdlPv
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE7__cloneEv:
000000000002e160	stp	x20, x19, [sp, #-0x20]!
000000000002e164	stp	x29, x30, [sp, #0x10]
000000000002e168	add	x29, sp, #0x10
000000000002e16c	mov	x19, x0
000000000002e170	mov	w0, #0x10
000000000002e174	bl	0x51920 ; symbol stub for: __Znwm
000000000002e178	ldr	x8, [x19, #0x8]
000000000002e17c	adr	x9, #0x38b4c
000000000002e180	nop
000000000002e184	stp	x9, x8, [x0]
000000000002e188	ldp	x29, x30, [sp, #0x10]
000000000002e18c	ldp	x20, x19, [sp], #0x20
000000000002e190	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE7__cloneEPNS0_6__baseISC_EE:
000000000002e194	ldr	x8, [x0, #0x8]
000000000002e198	adr	x9, #0x38b30
000000000002e19c	nop
000000000002e1a0	stp	x9, x8, [x1]
000000000002e1a4	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE7destroyEv:
000000000002e1a8	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE18destroy_deallocateEv:
000000000002e1ac	b	0x51914 ; symbol stub for: __ZdlPv
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEEclESB_:
000000000002e1b0	ldr	x8, [x0, #0x8]
000000000002e1b4	ldr	x0, [x8, #0x40]
000000000002e1b8	ldr	x8, [x0]
000000000002e1bc	ldr	x2, [x8, #0x10]
000000000002e1c0	br	x2
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE6targetERKSt9type_info:
000000000002e1c4	stp	x20, x19, [sp, #-0x20]!
000000000002e1c8	stp	x29, x30, [sp, #0x10]
000000000002e1cc	add	x29, sp, #0x10
000000000002e1d0	mov	x19, x0
000000000002e1d4	ldr	x9, [x1, #0x8]
000000000002e1d8	adr	x8, #0x24b1e
000000000002e1dc	nop
000000000002e1e0	mov	x10, #-0x8000000000000000
000000000002e1e4	add	x10, x8, x10
000000000002e1e8	cmp	x9, x10
000000000002e1ec	b.ne	0x2e200
000000000002e1f0	add	x0, x19, #0x8
000000000002e1f4	ldp	x29, x30, [sp, #0x10]
000000000002e1f8	ldp	x20, x19, [sp], #0x20
000000000002e1fc	ret
000000000002e200	tst	x9, x10
000000000002e204	b.lt	0x2e218
000000000002e208	mov	x0, #0x0
000000000002e20c	ldp	x29, x30, [sp, #0x10]
000000000002e210	ldp	x20, x19, [sp], #0x20
000000000002e214	ret
000000000002e218	and	x0, x9, #0x7fffffffffffffff
000000000002e21c	mov	x9, #-0x8000000000000000
000000000002e220	add	x8, x8, x9
000000000002e224	and	x1, x8, #0x7fffffffffffffff
000000000002e228	bl	0x51d1c ; symbol stub for: _strcmp
000000000002e22c	cbz	w0, 0x2e1f0
000000000002e230	mov	x0, #0x0
000000000002e234	ldp	x29, x30, [sp, #0x10]
000000000002e238	ldp	x20, x19, [sp], #0x20
000000000002e23c	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE11target_typeEv:
000000000002e240	adr	x0, #0x38ae8
000000000002e244	nop
000000000002e248	ret
__ZN6kotlin2gc2GC10ThreadDataC1ERS1_RNS_2mm10ThreadDataE:
000000000002e24c	sub	sp, sp, #0x50
000000000002e250	stp	x22, x21, [sp, #0x20]
000000000002e254	stp	x20, x19, [sp, #0x30]
000000000002e258	stp	x29, x30, [sp, #0x40]
000000000002e25c	add	x29, sp, #0x40
000000000002e260	mov	x20, x2
000000000002e264	mov	x22, x1
000000000002e268	mov	x19, x0
000000000002e26c	mov	w0, #0x1
000000000002e270	mov	w1, #0xa0
000000000002e274	bl	0x519e0 ; symbol stub for: _calloc
000000000002e278	mov	x21, x0
000000000002e27c	ldr	x8, [x22]
000000000002e280	add	x9, x8, #0x30
000000000002e284	adr	x10, #0x38a44
000000000002e288	nop
000000000002e28c	stp	x10, x9, [sp]
000000000002e290	mov	x11, sp
000000000002e294	str	x11, [sp, #0x18]
000000000002e298	str	x9, [x0]
000000000002e29c	mov	x12, x0
000000000002e2a0	str	x10, [x12, #0x8]!
000000000002e2a4	str	x12, [x0, #0x20]
000000000002e2a8	str	x9, [x0, #0x10]
000000000002e2ac	add	x8, x8, #0x38
000000000002e2b0	movi.16b	v0, #0x0
000000000002e2b4	stur	q0, [x0, #0x28]
000000000002e2b8	stur	q0, [x0, #0x38]
000000000002e2bc	ldar	x8, [x8]
000000000002e2c0	str	x8, [x0, #0x30]
000000000002e2c4	mov	x8, x9
000000000002e2c8	ldar	w8, [x8]
000000000002e2cc	sxtw	x8, w8
000000000002e2d0	str	x8, [x0, #0x40]
000000000002e2d4	mov	x0, x11
000000000002e2d8	cmp	x11, x0
000000000002e2dc	b.eq	0x2e2f0
000000000002e2e0	cbz	x0, 0x2e2fc
000000000002e2e4	ldr	x8, [x0]
000000000002e2e8	ldr	x8, [x8, #0x28]
000000000002e2ec	b	0x2e2f8
000000000002e2f0	ldr	x8, [x0]
000000000002e2f4	ldr	x8, [x8, #0x20]
000000000002e2f8	blr	x8
000000000002e2fc	ldr	x8, [x22]
000000000002e300	add	x9, x8, #0x98
000000000002e304	mov	x10, x21
000000000002e308	str	x9, [x10, #0x48]!
000000000002e30c	stp	x20, x21, [x21, #0x50]
000000000002e310	add	x8, x8, #0x10
000000000002e314	str	x8, [x21, #0x70]
000000000002e318	stp	x10, xzr, [x21, #0x80]
000000000002e31c	stp	xzr, xzr, [x21, #0x90]
000000000002e320	str	x21, [x19]
000000000002e324	mov	x0, x19
000000000002e328	ldp	x29, x30, [sp, #0x40]
000000000002e32c	ldp	x20, x19, [sp, #0x30]
000000000002e330	ldp	x22, x21, [sp, #0x20]
000000000002e334	add	sp, sp, #0x50
000000000002e338	ret
__ZN6kotlin2gc2GC10ThreadDataD1Ev:
000000000002e33c	stp	x20, x19, [sp, #-0x20]!
000000000002e340	stp	x29, x30, [sp, #0x10]
000000000002e344	add	x29, sp, #0x10
000000000002e348	mov	x19, x0
000000000002e34c	ldr	x20, [x0]
000000000002e350	str	xzr, [x0]
000000000002e354	cbz	x20, 0x2e3a8
000000000002e358	add	x0, x20, #0x70
000000000002e35c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv
000000000002e360	ldr	x0, [x20, #0x88]
000000000002e364	str	xzr, [x20, #0x88]
000000000002e368	cbz	x0, 0x2e374
000000000002e36c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002e370	bl	_mi_free
000000000002e374	add	x8, x20, #0x8
000000000002e378	ldr	x0, [x20, #0x20]
000000000002e37c	cmp	x8, x0
000000000002e380	b.eq	0x2e394
000000000002e384	cbz	x0, 0x2e3a0
000000000002e388	ldr	x8, [x0]
000000000002e38c	ldr	x8, [x8, #0x28]
000000000002e390	b	0x2e39c
000000000002e394	ldr	x8, [x0]
000000000002e398	ldr	x8, [x8, #0x20]
000000000002e39c	blr	x8
000000000002e3a0	mov	x0, x20
000000000002e3a4	bl	0x51a64 ; symbol stub for: _free
000000000002e3a8	mov	x0, x19
000000000002e3ac	ldp	x29, x30, [sp, #0x10]
000000000002e3b0	ldp	x20, x19, [sp], #0x20
000000000002e3b4	ret
__ZN13GCStateHolder8scheduleEv:
000000000002e3b8	stp	x20, x19, [sp, #-0x20]!
000000000002e3bc	stp	x29, x30, [sp, #0x10]
000000000002e3c0	add	x29, sp, #0x10
000000000002e3c4	mov	x19, x0
000000000002e3c8	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002e3cc	ldr	x20, [x19, #0xc0]
000000000002e3d0	ldr	x8, [x19, #0x40]
000000000002e3d4	cmp	x20, x8
000000000002e3d8	b.gt	0x2e3f0
000000000002e3dc	add	x8, x8, #0x1
000000000002e3e0	str	x8, [x19, #0xc0]
000000000002e3e4	add	x0, x19, #0xd0
000000000002e3e8	bl	0x51830 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002e3ec	ldr	x20, [x19, #0xc0]
000000000002e3f0	mov	x0, x19
000000000002e3f4	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002e3f8	mov	x0, x20
000000000002e3fc	ldp	x29, x30, [sp, #0x10]
000000000002e400	ldp	x20, x19, [sp], #0x20
000000000002e404	ret
__ZN6kotlin16ThreadStateGuardD1Ev:
000000000002e408	stp	x20, x19, [sp, #-0x20]!
000000000002e40c	stp	x29, x30, [sp, #0x10]
000000000002e410	add	x29, sp, #0x10
000000000002e414	mov	x19, x0
000000000002e418	ldr	x9, [x0]
000000000002e41c	cbz	x9, 0x2e454
000000000002e420	ldr	w8, [x19, #0x8]
000000000002e424	add	x0, x9, #0x138
000000000002e428	ldaxr	w9, [x0]
000000000002e42c	stlxr	w10, w8, [x0]
000000000002e430	cbnz	w10, 0x2e428
000000000002e434	cbnz	w8, 0x2e454
000000000002e438	cmp	w9, #0x1
000000000002e43c	b.ne	0x2e454
000000000002e440	adr	x8, #0x58603
000000000002e444	nop
000000000002e448	ldarb	w8, [x8]
000000000002e44c	tbz	w8, #0x0, 0x2e454
000000000002e450	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002e454	mov	x0, x19
000000000002e458	ldp	x29, x30, [sp, #0x10]
000000000002e45c	ldp	x20, x19, [sp], #0x20
000000000002e460	ret
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy:
000000000002e464	sub	sp, sp, #0x70
000000000002e468	stp	x24, x23, [sp, #0x30]
000000000002e46c	stp	x22, x21, [sp, #0x40]
000000000002e470	stp	x20, x19, [sp, #0x50]
000000000002e474	stp	x29, x30, [sp, #0x60]
000000000002e478	add	x29, sp, #0x60
000000000002e47c	mov	x19, x0
000000000002e480	add	x8, x1, #0xf
000000000002e484	and	x20, x8, #0xfffffffffffffff8
000000000002e488	ldr	x8, [x0, #0x10]
000000000002e48c	ldr	x21, [x8, #0x10]
000000000002e490	ldp	x8, x9, [x21, #0x28]
000000000002e494	add	x8, x8, x20
000000000002e498	str	x8, [x21, #0x28]
000000000002e49c	cmp	x8, x9
000000000002e4a0	b.lo	0x2e4e4
000000000002e4a4	ldr	x0, [x21, #0x20]
000000000002e4a8	cbz	x0, 0x2e648
000000000002e4ac	ldr	x8, [x0]
000000000002e4b0	ldr	x8, [x8, #0x30]
000000000002e4b4	mov	x1, x21
000000000002e4b8	blr	x8
000000000002e4bc	str	xzr, [x21, #0x28]
000000000002e4c0	str	xzr, [x21, #0x38]
000000000002e4c4	ldr	x8, [x21]
000000000002e4c8	add	x8, x8, #0x8
000000000002e4cc	ldar	x8, [x8]
000000000002e4d0	str	x8, [x21, #0x30]
000000000002e4d4	ldr	x8, [x21]
000000000002e4d8	ldar	w8, [x8]
000000000002e4dc	sxtw	x8, w8
000000000002e4e0	str	x8, [x21, #0x40]
000000000002e4e4	adr	x23, #0x5855f
000000000002e4e8	nop
000000000002e4ec	ldarb	w8, [x23]
000000000002e4f0	tbz	w8, #0x0, 0x2e4f8
000000000002e4f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002e4f8	mov	x0, x20
000000000002e4fc	bl	__ZN6kotlin20allocateInObjectPoolEm
000000000002e500	mov	x21, x0
000000000002e504	cbnz	x0, 0x2e5f4
000000000002e508	ldr	x22, [x19, #0x10]
000000000002e50c	adrp	x0, 62 ; 0x6c000
000000000002e510	add	x0, x0, #0xbb0
000000000002e514	ldr	x8, [x0]
000000000002e518	blr	x8
000000000002e51c	ldr	x8, [x0]
000000000002e520	str	x8, [sp, #0x10]
000000000002e524	strb	wzr, [sp, #0x1c]
000000000002e528	add	x8, x8, #0x138
000000000002e52c	mov	w9, #0x1
000000000002e530	ldaxr	w10, [x8]
000000000002e534	stlxr	w11, w9, [x8]
000000000002e538	cbnz	w11, 0x2e530
000000000002e53c	str	w10, [sp, #0x18]
000000000002e540	ldr	x8, [x22]
000000000002e544	add	x0, x8, #0x18
000000000002e548	bl	__ZN13GCStateHolder8scheduleEv
000000000002e54c	mov	x21, x0
000000000002e550	ldr	x24, [x22]
000000000002e554	ldr	x22, [x24, #0xa0]
000000000002e558	str	x22, [sp, #0x20]
000000000002e55c	mov	w8, #0x1
000000000002e560	strb	w8, [sp, #0x28]
000000000002e564	mov	x0, x22
000000000002e568	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002e56c	ldr	x8, [x24, #0x98]
000000000002e570	cmp	x8, x21
000000000002e574	b.ge	0x2e5a8
000000000002e578	add	x22, x24, #0xa8
000000000002e57c	ldrb	w8, [x24, #0x158]
000000000002e580	cbnz	w8, 0x2e59c
000000000002e584	add	x1, sp, #0x20
000000000002e588	mov	x0, x22
000000000002e58c	bl	0x51848 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
000000000002e590	ldr	x8, [x24, #0x98]
000000000002e594	cmp	x8, x21
000000000002e598	b.lt	0x2e57c
000000000002e59c	ldrb	w8, [sp, #0x28]
000000000002e5a0	cbz	w8, 0x2e5b0
000000000002e5a4	ldr	x22, [sp, #0x20]
000000000002e5a8	mov	x0, x22
000000000002e5ac	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002e5b0	ldr	x9, [sp, #0x10]
000000000002e5b4	cbz	x9, 0x2e5e4
000000000002e5b8	ldr	w8, [sp, #0x18]
000000000002e5bc	add	x0, x9, #0x138
000000000002e5c0	ldaxr	w9, [x0]
000000000002e5c4	stlxr	w10, w8, [x0]
000000000002e5c8	cbnz	w10, 0x2e5c0
000000000002e5cc	cbnz	w8, 0x2e5e4
000000000002e5d0	cmp	w9, #0x1
000000000002e5d4	b.ne	0x2e5e4
000000000002e5d8	ldarb	w8, [x23]
000000000002e5dc	tbz	w8, #0x0, 0x2e5e4
000000000002e5e0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002e5e4	mov	x0, x20
000000000002e5e8	bl	__ZN6kotlin20allocateInObjectPoolEm
000000000002e5ec	mov	x21, x0
000000000002e5f0	cbz	x0, 0x2e650
000000000002e5f4	str	xzr, [x21]
000000000002e5f8	ldr	x8, [x19, #0x18]
000000000002e5fc	cbz	x8, 0x2e61c
000000000002e600	ldr	x8, [x19, #0x20]
000000000002e604	ldr	x0, [x8]
000000000002e608	str	x21, [x8]
000000000002e60c	cbz	x0, 0x2e620
000000000002e610	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002e614	bl	_mi_free
000000000002e618	b	0x2e620
000000000002e61c	str	x21, [x19, #0x18]
000000000002e620	ldr	x8, [x19, #0x28]
000000000002e624	add	x8, x8, #0x1
000000000002e628	stp	x21, x8, [x19, #0x20]
000000000002e62c	mov	x0, x21
000000000002e630	ldp	x29, x30, [sp, #0x60]
000000000002e634	ldp	x20, x19, [sp, #0x50]
000000000002e638	ldp	x22, x21, [sp, #0x40]
000000000002e63c	ldp	x24, x23, [sp, #0x30]
000000000002e640	add	sp, sp, #0x70
000000000002e644	ret
000000000002e648	bl	__ZNSt3__125__throw_bad_function_callEv
000000000002e64c	b	0x2e664
000000000002e650	str	x20, [sp]
000000000002e654	adr	x0, #0x27a44 ; literal pool for: "Out of memory trying to allocate %llu bytes. Aborting.\n"
000000000002e658	nop
000000000002e65c	bl	__ZN5konan13consoleErrorfEPKcz
000000000002e660	bl	__ZN5konan5abortEv
000000000002e664	brk	#0x1
000000000002e668	bl	___clang_call_terminate
000000000002e66c	mov	x19, x0
000000000002e670	add	x0, sp, #0x10
000000000002e674	bl	__ZN6kotlin16ThreadStateGuardD1Ev
000000000002e678	mov	x0, x19
000000000002e67c	bl	___clang_call_terminate
000000000002e680	bl	___clang_call_terminate
__ZN6kotlin12ScopedThread3RunIZNS_2gc22ConcurrentMarkAndSweepC1ERNS_2mm13ObjectFactoryIS3_EERNS2_11GCSchedulerEE3$_3JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOSD_DpOSE_:
000000000002e684	sub	sp, sp, #0x170
000000000002e688	stp	x28, x27, [sp, #0x110]
000000000002e68c	stp	x26, x25, [sp, #0x120]
000000000002e690	stp	x24, x23, [sp, #0x130]
000000000002e694	stp	x22, x21, [sp, #0x140]
000000000002e698	stp	x20, x19, [sp, #0x150]
000000000002e69c	stp	x29, x30, [sp, #0x160]
000000000002e6a0	add	x29, sp, #0x160
000000000002e6a4	mov	x19, x1
000000000002e6a8	ldrb	w8, [x0, #0x18]
000000000002e6ac	cbz	w8, 0x2e6c0
000000000002e6b0	ldrsb	w8, [x0, #0x17]
000000000002e6b4	tbz	w8, #0x1f, 0x2e6bc
000000000002e6b8	ldr	x0, [x0]
000000000002e6bc	bl	0x51cbc ; symbol stub for: _pthread_setname_np
000000000002e6c0	ldr	x25, [x19]
000000000002e6c4	add	x26, x25, #0xe8
000000000002e6c8	add	x9, x25, #0x180
000000000002e6cc	add	x8, x25, #0x68
000000000002e6d0	stp	x8, x9, [sp, #0x40]
000000000002e6d4	add	x9, x25, #0x170
000000000002e6d8	add	x8, x25, #0xa8
000000000002e6dc	stp	x8, x9, [sp, #0x30]
000000000002e6e0	mov	w24, #0x1
000000000002e6e4	adrp	x23, 62 ; 0x6c000
000000000002e6e8	add	x23, x23, #0xbb0
000000000002e6ec	ldr	x27, [x23]
000000000002e6f0	adr	x28, #0x58650
000000000002e6f4	nop
000000000002e6f8	adr	x20, #0x58738
000000000002e6fc	nop
000000000002e700	str	x25, [sp, #0x50]
000000000002e704	stp	x27, x26, [sp, #0x20]
000000000002e708	b	0x2e71c
000000000002e70c	stlrb	wzr, [x23]
000000000002e710	ldp	x27, x26, [sp, #0x20]
000000000002e714	adrp	x23, 62 ; 0x6c000
000000000002e718	add	x23, x23, #0xbb0
000000000002e71c	ldr	x0, [x25, #0xe0]
000000000002e720	stur	x0, [x29, #-0x80]
000000000002e724	sturb	w24, [x29, #-0x78]
000000000002e728	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002e72c	ldr	x21, [x25, #0xd8]
000000000002e730	ldr	x8, [x25, #0x98]
000000000002e734	cmp	x21, x8
000000000002e738	b.gt	0x2e768
000000000002e73c	ldrb	w8, [x25, #0x158]
000000000002e740	cbnz	w8, 0x2e760
000000000002e744	sub	x1, x29, #0x80
000000000002e748	mov	x0, x26
000000000002e74c	bl	0x51848 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
000000000002e750	ldr	x21, [x25, #0xd8]
000000000002e754	ldr	x8, [x25, #0x98]
000000000002e758	cmp	x21, x8
000000000002e75c	b.le	0x2e73c
000000000002e760	ldurb	w8, [x29, #-0x78]
000000000002e764	cbz	w8, 0x2e774
000000000002e768	ldur	x0, [x29, #-0x80]
000000000002e76c	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002e770	ldr	x21, [x25, #0xd8]
000000000002e774	ldrb	w8, [x25, #0x158]
000000000002e778	cmp	w8, #0x1
000000000002e77c	b.eq	0x2f054
000000000002e780	ldr	w8, [x25, #0x198]
000000000002e784	cmp	w8, #0x0
000000000002e788	cset	w8, eq
000000000002e78c	adr	x9, #0x582b8
000000000002e790	nop
000000000002e794	stlrb	w8, [x9]
000000000002e798	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e79c	bl	__ZN6kotlin2mm24RequestThreadsSuspensionEv
000000000002e7a0	mov	x0, x23
000000000002e7a4	blr	x27
000000000002e7a8	ldr	x8, [x0]
000000000002e7ac	add	x9, x8, #0x8
000000000002e7b0	cmp	x8, #0x0
000000000002e7b4	csel	x19, xzr, x9, eq
000000000002e7b8	mov	x0, x28
000000000002e7bc	bl	0x5180c ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
000000000002e7c0	nop
000000000002e7c4	ldr	x8, #0x5856c
000000000002e7c8	cbnz	x8, 0x2e7d8
000000000002e7cc	b	0x2e820
000000000002e7d0	ldr	x8, [x8, #0x150]
000000000002e7d4	cbz	x8, 0x2e820
000000000002e7d8	add	x9, x8, #0x8
000000000002e7dc	cmp	x9, x19
000000000002e7e0	b.eq	0x2e7d0
000000000002e7e4	add	x9, x8, #0x148
000000000002e7e8	ldarb	w9, [x9]
000000000002e7ec	tbnz	w9, #0x0, 0x2e7d0
000000000002e7f0	add	x9, x8, #0x138
000000000002e7f4	ldar	w9, [x9]
000000000002e7f8	cmp	w9, #0x1
000000000002e7fc	b.eq	0x2e7d0
000000000002e800	ldr	x9, [x8, #0x118]
000000000002e804	add	x9, x9, #0x60
000000000002e808	ldarb	w9, [x9]
000000000002e80c	tbnz	w9, #0x0, 0x2e7d0
000000000002e810	mov	x0, x28
000000000002e814	bl	0x51818 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000002e818	bl	0x51ce0 ; symbol stub for: _sched_yield
000000000002e81c	b	0x2e7a0
000000000002e820	str	x21, [sp, #0x78]
000000000002e824	mov	x0, x28
000000000002e828	bl	0x51818 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000002e82c	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e830	ldr	x8, [sp, #0x48]
000000000002e834	stp	xzr, xzr, [x8, #0x8]
000000000002e838	str	xzr, [x8]
000000000002e83c	ldr	x22, [x25, #0x8]
000000000002e840	ldr	x0, [x22, #0x40]
000000000002e844	ldr	x8, [x0]
000000000002e848	ldr	x8, [x8, #0x18]
000000000002e84c	blr	x8
000000000002e850	ldr	x21, [x25, #0x60]
000000000002e854	mov	x0, x21
000000000002e858	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002e85c	ldr	x8, [sp, #0x78]
000000000002e860	str	x8, [x25, #0x58]
000000000002e864	ldr	x0, [sp, #0x40]
000000000002e868	bl	0x51830 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002e86c	mov	x0, x21
000000000002e870	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002e874	mov	x0, x25
000000000002e878	bl	__ZN6kotlin2gc22ConcurrentMarkAndSweep29CollectRootSetAndStartMarkingEv
000000000002e87c	add	x0, sp, #0x80
000000000002e880	ldr	x1, [sp, #0x38]
000000000002e884	bl	__ZN6kotlin2gc4MarkIN12_GLOBAL__N_110MarkTraitsEEENS0_9MarkStatsERNT_9MarkQueueE
000000000002e888	ldr	q0, [sp, #0x80]
000000000002e88c	str	q0, [sp, #0x60]
000000000002e890	ldr	x19, [sp, #0x90]
000000000002e894	adr	x21, #0x3e0fc
000000000002e898	nop
000000000002e89c	mov	x0, x21
000000000002e8a0	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002e8a4	ldr	q0, [x25, #0x180]
000000000002e8a8	ldr	q1, [sp, #0x60]
000000000002e8ac	add.2d	v0, v0, v1
000000000002e8b0	str	q0, [x25, #0x180]
000000000002e8b4	ldr	x8, [x25, #0x190]
000000000002e8b8	add	x8, x8, x19
000000000002e8bc	str	x8, [x25, #0x190]
000000000002e8c0	mov	x0, x21
000000000002e8c4	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002e8c8	mov	x0, x23
000000000002e8cc	blr	x27
000000000002e8d0	ldr	x8, [x0]
000000000002e8d4	add	x9, x8, #0x8
000000000002e8d8	cmp	x8, #0x0
000000000002e8dc	csel	x19, xzr, x9, eq
000000000002e8e0	mov	x0, x28
000000000002e8e4	bl	0x5180c ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
000000000002e8e8	nop
000000000002e8ec	ldr	x8, #0x58444
000000000002e8f0	cbnz	x8, 0x2e900
000000000002e8f4	b	0x2e938
000000000002e8f8	ldr	x8, [x8, #0x150]
000000000002e8fc	cbz	x8, 0x2e938
000000000002e900	add	x9, x8, #0x8
000000000002e904	cmp	x9, x19
000000000002e908	b.eq	0x2e8f8
000000000002e90c	add	x9, x8, #0x148
000000000002e910	ldarb	w9, [x9]
000000000002e914	tbnz	w9, #0x0, 0x2e8f8
000000000002e918	add	x9, x8, #0x138
000000000002e91c	ldar	w9, [x9]
000000000002e920	cmp	w9, #0x1
000000000002e924	b.eq	0x2e8f8
000000000002e928	mov	x0, x28
000000000002e92c	bl	0x51818 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000002e930	bl	0x51ce0 ; symbol stub for: _sched_yield
000000000002e934	b	0x2e8c8
000000000002e938	mov	x0, x28
000000000002e93c	bl	0x51818 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000002e940	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e944	ldr	x0, [x22, #0x40]
000000000002e948	ldr	x1, [x25, #0x188]
000000000002e94c	ldr	x8, [x0]
000000000002e950	ldr	x8, [x8, #0x20]
000000000002e954	blr	x8
000000000002e958	sub	x21, x29, #0x80
000000000002e95c	adr	x22, #0x584bc
000000000002e960	nop
000000000002e964	adrp	x23, 88 ; 0x86000
000000000002e968	adrp	x28, 88 ; 0x86000
000000000002e96c	ldaxrb	w8, [x20]
000000000002e970	stxrb	w9, w24, [x20]
000000000002e974	cbnz	w9, 0x2e96c
000000000002e978	tbz	w8, #0x0, 0x2e984
000000000002e97c	bl	0x51ce0 ; symbol stub for: _sched_yield
000000000002e980	b	0x2e96c
000000000002e984	stp	x21, x21, [x29, #-0x80]
000000000002e988	stur	xzr, [x29, #-0x70]
000000000002e98c	ldr	x8, [x22, #0x8]
000000000002e990	cmp	x8, x22
000000000002e994	b.ne	0x2ea70
000000000002e998	ldr	x8, [x23, #0xe28]
000000000002e99c	cbz	x8, 0x2e9d8
000000000002e9a0	ldp	x8, x0, [x22]
000000000002e9a4	ldr	x9, [x8, #0x8]
000000000002e9a8	ldr	x10, [x0]
000000000002e9ac	str	x9, [x10, #0x8]
000000000002e9b0	ldr	x8, [x8, #0x8]
000000000002e9b4	str	x10, [x8]
000000000002e9b8	str	xzr, [x22, #0x10]
000000000002e9bc	cmp	x0, x22
000000000002e9c0	b.eq	0x2e9d8
000000000002e9c4	ldr	x19, [x0, #0x8]
000000000002e9c8	bl	_mi_free
000000000002e9cc	mov	x0, x19
000000000002e9d0	cmp	x19, x22
000000000002e9d4	b.ne	0x2e9c4
000000000002e9d8	ldur	x8, [x29, #-0x70]
000000000002e9dc	adr	x23, #0x58424
000000000002e9e0	nop
000000000002e9e4	cbz	x8, 0x2ea24
000000000002e9e8	ldp	x10, x9, [x29, #-0x80]
000000000002e9ec	ldr	x11, [x10, #0x8]
000000000002e9f0	ldr	x12, [x9]
000000000002e9f4	str	x11, [x12, #0x8]
000000000002e9f8	ldr	x11, [x10, #0x8]
000000000002e9fc	str	x12, [x11]
000000000002ea00	ldr	x11, [x22]
000000000002ea04	str	x9, [x11, #0x8]
000000000002ea08	str	x11, [x9]
000000000002ea0c	str	x10, [x22]
000000000002ea10	str	x22, [x10, #0x8]
000000000002ea14	ldr	x9, [x22, #0x10]
000000000002ea18	add	x8, x9, x8
000000000002ea1c	str	x8, [x22, #0x10]
000000000002ea20	stur	xzr, [x29, #-0x70]
000000000002ea24	stlrb	wzr, [x20]
000000000002ea28	ldaxrb	w8, [x20]
000000000002ea2c	stxrb	w9, w24, [x20]
000000000002ea30	cbnz	w9, 0x2ea28
000000000002ea34	tbz	w8, #0x0, 0x2ead0
000000000002ea38	bl	0x51ce0 ; symbol stub for: _sched_yield
000000000002ea3c	b	0x2ea28
000000000002ea40	ldr	x0, [x9, #0x30]
000000000002ea44	ldp	x9, x8, [x0]
000000000002ea48	str	x8, [x9, #0x8]
000000000002ea4c	ldr	x8, [x0, #0x8]
000000000002ea50	str	x9, [x8]
000000000002ea54	ldr	x8, [x28, #0xe10]
000000000002ea58	sub	x8, x8, #0x1
000000000002ea5c	str	x8, [x28, #0xe10]
000000000002ea60	bl	_mi_free
000000000002ea64	mov	x8, x19
000000000002ea68	cmp	x19, x22
000000000002ea6c	b.eq	0x2e998
000000000002ea70	ldp	x19, x9, [x8, #0x8]
000000000002ea74	add	x10, x9, #0x28
000000000002ea78	ldar	x10, [x10]
000000000002ea7c	cbz	x10, 0x2ea40
000000000002ea80	cmp	x21, x8
000000000002ea84	b.eq	0x2ea64
000000000002ea88	ldr	x9, [x8, #0x8]
000000000002ea8c	cmp	x9, x21
000000000002ea90	b.eq	0x2ea64
000000000002ea94	ldr	x10, [x8]
000000000002ea98	str	x9, [x10, #0x8]
000000000002ea9c	ldr	x9, [x8, #0x8]
000000000002eaa0	str	x10, [x9]
000000000002eaa4	ldur	x9, [x29, #-0x80]
000000000002eaa8	str	x8, [x9, #0x8]
000000000002eaac	stp	x9, x21, [x8]
000000000002eab0	ldr	x9, [x23, #0xe28]
000000000002eab4	sub	x9, x9, #0x1
000000000002eab8	str	x9, [x23, #0xe28]
000000000002eabc	ldur	x9, [x29, #-0x70]
000000000002eac0	add	x9, x9, #0x1
000000000002eac4	stur	x8, [x29, #-0x80]
000000000002eac8	stur	x9, [x29, #-0x70]
000000000002eacc	b	0x2ea64
000000000002ead0	ldr	x21, [x23, #0x8]
000000000002ead4	cmp	x21, x23
000000000002ead8	b.ne	0x2eaf8
000000000002eadc	b	0x2ec10
000000000002eae0	ldr	x9, [x8]
000000000002eae4	tst	x9, #0x3
000000000002eae8	b.eq	0x2eb1c
000000000002eaec	ldr	x21, [x21, #0x8]
000000000002eaf0	cmp	x21, x23
000000000002eaf4	b.eq	0x2ec10
000000000002eaf8	add	x22, x21, #0x20
000000000002eafc	ldar	w8, [x22]
000000000002eb00	tbnz	w8, #0x2, 0x2eaec
000000000002eb04	add	x8, x21, #0x30
000000000002eb08	ldar	x8, [x8]
000000000002eb0c	tbz	w8, #0x0, 0x2eae0
000000000002eb10	and	x8, x8, #0xfffffffffffffffe
000000000002eb14	ldr	x8, [x8, #0x8]
000000000002eb18	b	0x2eae0
000000000002eb1c	ldur	x8, [x8, #-0x8]
000000000002eb20	tbnz	w8, #0x0, 0x2eaec
000000000002eb24	add	x8, x21, #0x30
000000000002eb28	ldar	x9, [x8]
000000000002eb2c	tbz	w9, #0x0, 0x2eba0
000000000002eb30	ldar	x8, [x8]
000000000002eb34	tbz	w8, #0x0, 0x2eb40
000000000002eb38	and	x8, x8, #0xfffffffffffffffe
000000000002eb3c	ldr	x8, [x8, #0x8]
000000000002eb40	add	x9, x21, #0x30
000000000002eb44	ldar	x9, [x9]
000000000002eb48	sbfx	x10, x9, #0, #1
000000000002eb4c	and	x9, x9, x10
000000000002eb50	and	x10, x9, #0xfffffffffffffffe
000000000002eb54	add	x9, x10, #0x10
000000000002eb58	b	0x2eb64
000000000002eb5c	stlxr	w12, w24, [x9]
000000000002eb60	cbz	w12, 0x2eb70
000000000002eb64	ldaxr	w11, [x9]
000000000002eb68	cbz	w11, 0x2eb5c
000000000002eb6c	clrex
000000000002eb70	cmp	w11, #0x1
000000000002eb74	b.eq	0x2eb64
000000000002eb78	str	xzr, [x10, #0x8]
000000000002eb7c	ldaxr	w10, [x9]
000000000002eb80	cmp	w10, #0x1
000000000002eb84	b.ne	0x2eb94
000000000002eb88	stlxr	w10, wzr, [x9]
000000000002eb8c	cbnz	w10, 0x2eb7c
000000000002eb90	b	0x2eb98
000000000002eb94	clrex
000000000002eb98	add	x9, x21, #0x30
000000000002eb9c	stlr	x8, [x9]
000000000002eba0	add	x8, x21, #0x28
000000000002eba4	ldar	x9, [x8]
000000000002eba8	cbz	x9, 0x2ebd8
000000000002ebac	ldar	x0, [x8]
000000000002ebb0	cbz	x0, 0x2ebc4
000000000002ebb4	nop
000000000002ebb8	ldr	x1, #0x580e8
000000000002ebbc	mov	w2, #0x2
000000000002ebc0	bl	0x51b78 ; Objc message: -[x0 initWithDouble:]
000000000002ebc4	ldaxr	w8, [x22]
000000000002ebc8	orr	w8, w8, #0x4
000000000002ebcc	stlxr	w9, w8, [x22]
000000000002ebd0	cbnz	w9, 0x2ebc4
000000000002ebd4	b	0x2eaec
000000000002ebd8	add	x0, x21, #0x18
000000000002ebdc	bl	__ZN6kotlin2mm15ExtraObjectData9UninstallEv
000000000002ebe0	ldp	x8, x19, [x21]
000000000002ebe4	str	x19, [x8, #0x8]
000000000002ebe8	ldr	x9, [x21, #0x8]
000000000002ebec	str	x8, [x9]
000000000002ebf0	ldr	x8, [x28, #0xe10]
000000000002ebf4	sub	x8, x8, #0x1
000000000002ebf8	str	x8, [x28, #0xe10]
000000000002ebfc	mov	x0, x21
000000000002ec00	bl	_mi_free
000000000002ec04	mov	x21, x19
000000000002ec08	cmp	x21, x23
000000000002ec0c	b.ne	0x2eaf8
000000000002ec10	stlrb	wzr, [x20]
000000000002ec14	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002ec18	ldr	x8, [x25]
000000000002ec1c	add	x21, x8, #0x8
000000000002ec20	add	x23, x8, #0x20
000000000002ec24	ldaxrb	w8, [x23]
000000000002ec28	stxrb	w9, w24, [x23]
000000000002ec2c	cbnz	w9, 0x2ec24
000000000002ec30	tbz	w8, #0x0, 0x2ec3c
000000000002ec34	bl	0x51ce0 ; symbol stub for: _sched_yield
000000000002ec38	b	0x2ec24
000000000002ec3c	adr	x0, #0x3dd14
000000000002ec40	nop
000000000002ec44	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002ec48	adr	x8, #0x57dfb
000000000002ec4c	nop
000000000002ec50	stlrb	wzr, [x8]
000000000002ec54	adr	x19, #0x3dc9c
000000000002ec58	nop
000000000002ec5c	add	x0, x19, #0x60
000000000002ec60	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002ec64	mov	x0, x19
000000000002ec68	bl	0x51830 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002ec6c	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002ec70	str	x0, [sp, #0x60]
000000000002ec74	ldr	x28, [x21]
000000000002ec78	cbz	x28, 0x2ed84
000000000002ec7c	mov	x22, #0x0
000000000002ec80	mov	x27, #0x0
000000000002ec84	mov	x25, #0x0
000000000002ec88	mov	x26, #0x0
000000000002ec8c	b	0x2ecb0
000000000002ec90	ldr	x8, [x28, #0x8]
000000000002ec94	and	x8, x8, #0xfffffffffffffffe
000000000002ec98	str	x8, [x28, #0x8]
000000000002ec9c	ldr	x8, [x28]
000000000002eca0	mov	x22, x28
000000000002eca4	mov	x28, x8
000000000002eca8	mov	x19, x25
000000000002ecac	cbz	x8, 0x2ed90
000000000002ecb0	ldr	x8, [x28, #0x8]
000000000002ecb4	tbnz	w8, #0x0, 0x2ec90
000000000002ecb8	add	x8, x28, #0x10
000000000002ecbc	ldar	x8, [x8]
000000000002ecc0	and	x8, x8, #0xfffffffffffffffc
000000000002ecc4	ldr	x9, [x8]
000000000002ecc8	cmp	x8, #0x0
000000000002eccc	ccmp	x9, x8, #0x4, ne
000000000002ecd0	b.ne	0x2ed18
000000000002ecd4	ldr	x8, [x28, #0x10]
000000000002ecd8	and	x8, x8, #0xfffffffffffffffc
000000000002ecdc	ldr	x8, [x8]
000000000002ece0	ldrb	w8, [x8, #0x58]
000000000002ece4	tbnz	w8, #0x6, 0x2ed18
000000000002ece8	sub	x0, x29, #0x80
000000000002ecec	mov	x1, x21
000000000002ecf0	mov	x2, x22
000000000002ecf4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE13ExtractUnsafeEPNS9_4NodeE
000000000002ecf8	ldp	x0, x28, [x29, #-0x80]
000000000002ecfc	stur	xzr, [x29, #-0x80]
000000000002ed00	cbz	x0, 0x2ed0c
000000000002ed04	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002ed08	bl	_mi_free
000000000002ed0c	mov	x19, x25
000000000002ed10	cbnz	x28, 0x2ecb0
000000000002ed14	b	0x2ed90
000000000002ed18	sub	x0, x29, #0x80
000000000002ed1c	mov	x1, x21
000000000002ed20	mov	x2, x22
000000000002ed24	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE13ExtractUnsafeEPNS9_4NodeE
000000000002ed28	ldp	x19, x28, [x29, #-0x80]
000000000002ed2c	stur	xzr, [x29, #-0x80]
000000000002ed30	cbz	x27, 0x2ed6c
000000000002ed34	ldr	x0, [x25]
000000000002ed38	str	x19, [x25]
000000000002ed3c	cbz	x0, 0x2ed48
000000000002ed40	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002ed44	bl	_mi_free
000000000002ed48	ldur	x0, [x29, #-0x80]
000000000002ed4c	add	x26, x26, #0x1
000000000002ed50	stur	xzr, [x29, #-0x80]
000000000002ed54	cbz	x0, 0x2ed60
000000000002ed58	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002ed5c	bl	_mi_free
000000000002ed60	mov	x25, x19
000000000002ed64	cbnz	x28, 0x2ecb0
000000000002ed68	b	0x2ed90
000000000002ed6c	add	x26, x26, #0x1
000000000002ed70	stur	xzr, [x29, #-0x80]
000000000002ed74	mov	x27, x19
000000000002ed78	mov	x25, x19
000000000002ed7c	cbnz	x28, 0x2ecb0
000000000002ed80	b	0x2ed90
000000000002ed84	mov	x27, #0x0
000000000002ed88	mov	x19, #0x0
000000000002ed8c	mov	x26, #0x0
000000000002ed90	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002ed94	ldr	x25, [sp, #0x50]
000000000002ed98	ldr	x21, [x25, #0xa0]
000000000002ed9c	mov	x0, x21
000000000002eda0	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002eda4	ldr	x8, [sp, #0x78]
000000000002eda8	str	x8, [x25, #0x98]
000000000002edac	ldr	x0, [sp, #0x30]
000000000002edb0	bl	0x51830 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002edb4	mov	x0, x21
000000000002edb8	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002edbc	ldr	x21, [x25, #0x168]
000000000002edc0	add	x0, x21, #0x58
000000000002edc4	str	x0, [sp, #0xa0]
000000000002edc8	strb	w24, [sp, #0xa8]
000000000002edcc	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002edd0	adr	x28, #0x57f70
000000000002edd4	nop
000000000002edd8	cbnz	x26, 0x2ede4
000000000002eddc	ldr	x8, [x21]
000000000002ede0	cbz	x8, 0x2ee7c
000000000002ede4	add	x28, x21, #0x28
000000000002ede8	ldrb	w8, [x21, #0xc1]
000000000002edec	cbnz	w8, 0x2ee04
000000000002edf0	add	x1, sp, #0xa0
000000000002edf4	mov	x0, x28
000000000002edf8	bl	0x51848 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
000000000002edfc	ldrb	w8, [x21, #0xc1]
000000000002ee00	cbz	w8, 0x2edf0
000000000002ee04	add	x0, x21, #0x140
000000000002ee08	str	x0, [sp, #0x58]
000000000002ee0c	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002ee10	ldr	x8, [x21]
000000000002ee14	cbnz	x8, 0x2efec
000000000002ee18	movi.16b	v0, #0x0
000000000002ee1c	stp	q0, q0, [sp, #0xb0]
000000000002ee20	add	x0, sp, #0xb0
000000000002ee24	adr	x1, #0x272b6 ; literal pool for: "GC finalizer processor"
000000000002ee28	nop
000000000002ee2c	mov	w2, #0x16
000000000002ee30	bl	__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_
000000000002ee34	mov	w0, #0x8
000000000002ee38	bl	0x51920 ; symbol stub for: __Znwm
000000000002ee3c	mov	x25, x0
000000000002ee40	bl	0x517f4 ; symbol stub for: __ZNSt3__115__thread_structC1Ev
000000000002ee44	mov	w0, #0x38
000000000002ee48	bl	0x51920 ; symbol stub for: __Znwm
000000000002ee4c	mov	x22, x0
000000000002ee50	sturb	wzr, [x29, #-0x80]
000000000002ee54	sturb	wzr, [x29, #-0x68]
000000000002ee58	ldrb	w8, [sp, #0xc8]
000000000002ee5c	cbz	w8, 0x2eef4
000000000002ee60	ldrsb	w8, [sp, #0xc7]
000000000002ee64	tbnz	w8, #0x1f, 0x2eefc
000000000002ee68	ldr	q0, [sp, #0xb0]
000000000002ee6c	stur	q0, [x29, #-0x80]
000000000002ee70	ldr	x8, [sp, #0xc0]
000000000002ee74	stur	x8, [x29, #-0x70]
000000000002ee78	b	0x2ef54
000000000002ee7c	ldr	x8, [sp, #0x78]
000000000002ee80	stur	x8, [x29, #-0x80]
000000000002ee84	ldr	x0, [x21, #0xb0]
000000000002ee88	cbz	x0, 0x2f088
000000000002ee8c	ldr	x8, [x0]
000000000002ee90	ldr	x8, [x8, #0x30]
000000000002ee94	sub	x1, x29, #0x80
000000000002ee98	blr	x8
000000000002ee9c	ldrb	w8, [sp, #0xa8]
000000000002eea0	cbz	w8, 0x2eeac
000000000002eea4	ldr	x0, [sp, #0xa0]
000000000002eea8	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002eeac	mov	x8, #0xf7cf
000000000002eeb0	movk	x8, #0xe353, lsl #16
000000000002eeb4	movk	x8, #0x9ba5, lsl #32
000000000002eeb8	movk	x8, #0x20c4, lsl #48
000000000002eebc	ldr	x9, [sp, #0x60]
000000000002eec0	smulh	x8, x9, x8
000000000002eec4	asr	x9, x8, #7
000000000002eec8	add	x8, x9, x8, lsr #63
000000000002eecc	str	x8, [x25, #0x10]
000000000002eed0	cbz	x27, 0x2e70c
000000000002eed4	ldr	x19, [x27]
000000000002eed8	str	xzr, [x27]
000000000002eedc	mov	x0, x27
000000000002eee0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002eee4	bl	_mi_free
000000000002eee8	mov	x27, x19
000000000002eeec	cbnz	x19, 0x2eed4
000000000002eef0	b	0x2e70c
000000000002eef4	mov	w8, #0x1
000000000002eef8	b	0x2ef5c
000000000002eefc	str	x25, [sp, #0x18]
000000000002ef00	ldp	x1, x25, [sp, #0xb0]
000000000002ef04	cmp	x25, #0x16
000000000002ef08	b.hi	0x2ef18
000000000002ef0c	sub	x0, x29, #0x80
000000000002ef10	sturb	w25, [x29, #-0x69]
000000000002ef14	b	0x2ef48
000000000002ef18	str	x1, [sp, #0x10]
000000000002ef1c	cmn	x25, #0x10
000000000002ef20	b.hs	0x2f090
000000000002ef24	add	x8, x25, #0x10
000000000002ef28	and	x0, x8, #0xfffffffffffffff0
000000000002ef2c	str	x0, [sp, #0x8]
000000000002ef30	mov	w1, #0x1
000000000002ef34	bl	0x519e0 ; symbol stub for: _calloc
000000000002ef38	ldp	x8, x1, [sp, #0x8]
000000000002ef3c	orr	x8, x8, #0x8000000000000000
000000000002ef40	stp	x25, x8, [x29, #-0x78]
000000000002ef44	stur	x0, [x29, #-0x80]
000000000002ef48	add	x2, x25, #0x1
000000000002ef4c	bl	0x51aac ; symbol stub for: _memcpy
000000000002ef50	ldr	x25, [sp, #0x18]
000000000002ef54	mov	w8, #0x0
000000000002ef58	sturb	w24, [x29, #-0x68]
000000000002ef5c	adr	x9, #0x4a8
000000000002ef60	nop
000000000002ef64	stp	x25, x9, [x22]
000000000002ef68	mov	x25, x22
000000000002ef6c	strb	wzr, [x25, #0x10]!
000000000002ef70	strb	wzr, [x22, #0x28]
000000000002ef74	tbnz	w8, #0x0, 0x2ef94
000000000002ef78	ldur	q0, [x29, #-0x80]
000000000002ef7c	str	q0, [x25]
000000000002ef80	ldur	x8, [x29, #-0x70]
000000000002ef84	str	x8, [x25, #0x10]
000000000002ef88	stp	xzr, xzr, [x29, #-0x78]
000000000002ef8c	stur	xzr, [x29, #-0x80]
000000000002ef90	strb	w24, [x22, #0x28]
000000000002ef94	str	x21, [x22, #0x30]
000000000002ef98	sub	x0, x29, #0x88
000000000002ef9c	mov	x1, #0x0
000000000002efa0	adr	x2, #0x7a8
000000000002efa4	nop
000000000002efa8	mov	x3, x22
000000000002efac	bl	0x51c38 ; symbol stub for: _pthread_create
000000000002efb0	cbnz	w0, 0x2f078
000000000002efb4	ldr	x8, [x21]
000000000002efb8	cbnz	x8, 0x2f074
000000000002efbc	ldur	x8, [x29, #-0x88]
000000000002efc0	str	x8, [x21]
000000000002efc4	stur	xzr, [x29, #-0x88]
000000000002efc8	sub	x0, x29, #0x88
000000000002efcc	bl	0x518c0 ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002efd0	ldrb	w8, [sp, #0xc8]
000000000002efd4	ldr	x25, [sp, #0x50]
000000000002efd8	cbz	w8, 0x2efec
000000000002efdc	ldrsb	w8, [sp, #0xc7]
000000000002efe0	tbz	w8, #0x1f, 0x2efec
000000000002efe4	ldr	x0, [sp, #0xb0]
000000000002efe8	bl	0x51a64 ; symbol stub for: _free
000000000002efec	ldr	x0, [sp, #0x58]
000000000002eff0	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002eff4	cbz	x27, 0x2f030
000000000002eff8	ldr	x8, [x21, #0x10]
000000000002effc	cbz	x8, 0x2f01c
000000000002f000	ldr	x8, [x21, #0x18]
000000000002f004	ldr	x0, [x8]
000000000002f008	str	x27, [x8]
000000000002f00c	cbz	x0, 0x2f020
000000000002f010	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002f014	bl	_mi_free
000000000002f018	b	0x2f020
000000000002f01c	str	x27, [x21, #0x10]
000000000002f020	mov	x27, #0x0
000000000002f024	ldr	x8, [x21, #0x20]
000000000002f028	add	x8, x8, x26
000000000002f02c	stp	x19, x8, [x21, #0x18]
000000000002f030	ldr	x8, [sp, #0x78]
000000000002f034	str	x8, [x21, #0xb8]
000000000002f038	mov	x0, x28
000000000002f03c	bl	0x51830 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002f040	adr	x28, #0x57d00
000000000002f044	nop
000000000002f048	ldrb	w8, [sp, #0xa8]
000000000002f04c	cbnz	w8, 0x2eea4
000000000002f050	b	0x2eeac
000000000002f054	ldp	x29, x30, [sp, #0x160]
000000000002f058	ldp	x20, x19, [sp, #0x150]
000000000002f05c	ldp	x22, x21, [sp, #0x140]
000000000002f060	ldp	x24, x23, [sp, #0x130]
000000000002f064	ldp	x26, x25, [sp, #0x120]
000000000002f068	ldp	x28, x27, [sp, #0x110]
000000000002f06c	add	sp, sp, #0x170
000000000002f070	ret
000000000002f074	bl	0x51908 ; symbol stub for: __ZSt9terminatev
000000000002f078	adr	x1, #0x27079 ; literal pool for: "thread constructor failed"
000000000002f07c	nop
000000000002f080	bl	0x5186c ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000002f084	b	0x2f098
000000000002f088	bl	__ZNSt3__125__throw_bad_function_callEv
000000000002f08c	b	0x2f098
000000000002f090	sub	x0, x29, #0x80
000000000002f094	bl	0x517b8 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
000000000002f098	brk	#0x1
000000000002f09c	bl	___clang_call_terminate
000000000002f0a0	mov	x19, x0
000000000002f0a4	ldurb	w8, [x29, #-0x68]
000000000002f0a8	cbz	w8, 0x2f0c8
000000000002f0ac	sub	x0, x29, #0x80
000000000002f0b0	bl	__ZN6kotlin2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEv.cold.1
000000000002f0b4	b	0x2f0c8
000000000002f0b8	b	0x2f0bc
000000000002f0bc	mov	x19, x0
000000000002f0c0	ldrb	w8, [sp, #0xa8]
000000000002f0c4	cbnz	w8, 0x2f0d0
000000000002f0c8	mov	x0, x19
000000000002f0cc	bl	___clang_call_terminate
000000000002f0d0	ldr	x0, [sp, #0xa0]
000000000002f0d4	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002f0d8	mov	x0, x19
000000000002f0dc	bl	___clang_call_terminate
000000000002f0e0	bl	___clang_call_terminate
000000000002f0e4	bl	___clang_call_terminate
000000000002f0e8	bl	___clang_call_terminate
000000000002f0ec	b	0x2f0f0
000000000002f0f0	mov	x19, x0
000000000002f0f4	ldrb	w8, [x22, #0x28]
000000000002f0f8	cbz	w8, 0x2f10c
000000000002f0fc	ldrsb	w8, [x22, #0x27]
000000000002f100	tbz	w8, #0x1f, 0x2f10c
000000000002f104	ldr	x0, [x25]
000000000002f108	bl	0x51a64 ; symbol stub for: _free
000000000002f10c	ldr	x0, [x22]
000000000002f110	str	xzr, [x22]
000000000002f114	cbz	x0, 0x2f140
000000000002f118	bl	0x51800 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002f11c	bl	0x51914 ; symbol stub for: __ZdlPv
000000000002f120	b	0x2f140
000000000002f124	mov	x19, x0
000000000002f128	mov	x22, x25
000000000002f12c	mov	x0, x25
000000000002f130	bl	0x51800 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002f134	b	0x2f140
000000000002f138	mov	x22, x25
000000000002f13c	mov	x19, x0
000000000002f140	mov	x0, x22
000000000002f144	bl	0x51914 ; symbol stub for: __ZdlPv
000000000002f148	b	0x2f150
000000000002f14c	mov	x19, x0
000000000002f150	ldrb	w8, [sp, #0xc8]
000000000002f154	cbz	w8, 0x2f168
000000000002f158	ldrsb	w8, [sp, #0xc7]
000000000002f15c	tbz	w8, #0x1f, 0x2f168
000000000002f160	ldr	x0, [sp, #0xb0]
000000000002f164	bl	0x51a64 ; symbol stub for: _free
000000000002f168	ldr	x0, [sp, #0x58]
000000000002f16c	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002f170	mov	x0, x19
000000000002f174	bl	___clang_call_terminate
000000000002f178	bl	___clang_call_terminate
000000000002f17c	bl	___clang_call_terminate
000000000002f180	bl	___clang_call_terminate
000000000002f184	mov	x19, x0
000000000002f188	cbz	x27, 0x2f1a8
000000000002f18c	ldr	x20, [x27]
000000000002f190	str	xzr, [x27]
000000000002f194	mov	x0, x27
000000000002f198	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002f19c	bl	_mi_free
000000000002f1a0	mov	x27, x20
000000000002f1a4	cbnz	x20, 0x2f18c
000000000002f1a8	stlrb	wzr, [x23]
000000000002f1ac	mov	x0, x19
000000000002f1b0	bl	___clang_call_terminate
000000000002f1b4	bl	___clang_call_terminate
000000000002f1b8	bl	___clang_call_terminate
000000000002f1bc	bl	___clang_call_terminate
000000000002f1c0	bl	___clang_call_terminate
000000000002f1c4	bl	___clang_call_terminate
000000000002f1c8	bl	___clang_call_terminate
000000000002f1cc	bl	___clang_call_terminate
000000000002f1d0	bl	___clang_call_terminate
__ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvN6kotlin12ScopedThread10attributesEOZNS7_2gc22ConcurrentMarkAndSweepC1ERNS7_2mm13ObjectFactoryISB_EERNSA_11GCSchedulerEE3$_3ES9_SI_EEEEEPvSN_:
000000000002f1d4	sub	sp, sp, #0x40
000000000002f1d8	stp	x20, x19, [sp, #0x20]
000000000002f1dc	stp	x29, x30, [sp, #0x30]
000000000002f1e0	add	x29, sp, #0x30
000000000002f1e4	mov	x19, x0
000000000002f1e8	bl	0x51860 ; symbol stub for: __ZNSt3__119__thread_local_dataEv
000000000002f1ec	ldr	x1, [x19]
000000000002f1f0	str	xzr, [x19]
000000000002f1f4	ldr	x0, [x0]
000000000002f1f8	bl	0x51cc8 ; symbol stub for: _pthread_setspecific
000000000002f1fc	add	x1, x19, #0x30
000000000002f200	ldr	x8, [x19, #0x8]
000000000002f204	strb	wzr, [sp]
000000000002f208	strb	wzr, [sp, #0x18]
000000000002f20c	ldrb	w9, [x19, #0x28]
000000000002f210	cbz	w9, 0x2f234
000000000002f214	ldr	q0, [x19, #0x10]
000000000002f218	str	q0, [sp]
000000000002f21c	ldr	x9, [x19, #0x20]
000000000002f220	str	x9, [sp, #0x10]
000000000002f224	stp	xzr, xzr, [x19, #0x18]
000000000002f228	str	xzr, [x19, #0x10]
000000000002f22c	mov	w9, #0x1
000000000002f230	strb	w9, [sp, #0x18]
000000000002f234	mov	x0, sp
000000000002f238	blr	x8
000000000002f23c	ldrb	w8, [sp, #0x18]
000000000002f240	cbz	w8, 0x2f254
000000000002f244	ldrsb	w8, [sp, #0x17]
000000000002f248	tbz	w8, #0x1f, 0x2f254
000000000002f24c	ldr	x0, [sp]
000000000002f250	bl	0x51a64 ; symbol stub for: _free
000000000002f254	ldrb	w8, [x19, #0x28]
000000000002f258	cbz	w8, 0x2f26c
000000000002f25c	ldrsb	w8, [x19, #0x27]
000000000002f260	tbz	w8, #0x1f, 0x2f26c
000000000002f264	ldr	x0, [x19, #0x10]
000000000002f268	bl	0x51a64 ; symbol stub for: _free
000000000002f26c	ldr	x0, [x19]
000000000002f270	str	xzr, [x19]
000000000002f274	cbz	x0, 0x2f280
000000000002f278	bl	0x51800 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002f27c	bl	0x51914 ; symbol stub for: __ZdlPv
000000000002f280	mov	x0, x19
000000000002f284	bl	0x51914 ; symbol stub for: __ZdlPv
000000000002f288	mov	x0, #0x0
000000000002f28c	ldp	x29, x30, [sp, #0x30]
000000000002f290	ldp	x20, x19, [sp, #0x20]
000000000002f294	add	sp, sp, #0x40
000000000002f298	ret
000000000002f29c	mov	x20, x0
000000000002f2a0	ldrb	w8, [sp, #0x18]
000000000002f2a4	cbz	w8, 0x2f2cc
000000000002f2a8	ldrsb	w8, [sp, #0x17]
000000000002f2ac	tbz	w8, #0x1f, 0x2f2cc
000000000002f2b0	ldr	x0, [sp]
000000000002f2b4	bl	0x51a64 ; symbol stub for: _free
000000000002f2b8	b	0x2f2cc
000000000002f2bc	mov	x20, x0
000000000002f2c0	b	0x2f2cc
000000000002f2c4	mov	x20, x0
000000000002f2c8	cbz	x19, 0x2f300
000000000002f2cc	ldrb	w8, [x19, #0x28]
000000000002f2d0	cbz	w8, 0x2f2e4
000000000002f2d4	ldrsb	w8, [x19, #0x27]
000000000002f2d8	tbz	w8, #0x1f, 0x2f2e4
000000000002f2dc	ldr	x0, [x19, #0x10]
000000000002f2e0	bl	0x51a64 ; symbol stub for: _free
000000000002f2e4	ldr	x0, [x19]
000000000002f2e8	str	xzr, [x19]
000000000002f2ec	cbz	x0, 0x2f2f8
000000000002f2f0	bl	0x51800 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002f2f4	bl	0x51914 ; symbol stub for: __ZdlPv
000000000002f2f8	mov	x0, x19
000000000002f2fc	bl	0x51914 ; symbol stub for: __ZdlPv
000000000002f300	mov	x0, x20
000000000002f304	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZN13GCStateHolderD1Ev:
000000000002f308	stp	x20, x19, [sp, #-0x20]!
000000000002f30c	stp	x29, x30, [sp, #0x10]
000000000002f310	add	x29, sp, #0x10
000000000002f314	mov	x19, x0
000000000002f318	add	x0, x0, #0x110
000000000002f31c	bl	0x51854 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000002f320	add	x0, x19, #0xd0
000000000002f324	bl	0x51854 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000002f328	add	x0, x19, #0x90
000000000002f32c	bl	0x51854 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000002f330	add	x0, x19, #0x50
000000000002f334	bl	0x51854 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000002f338	mov	x0, x19
000000000002f33c	ldp	x29, x30, [sp, #0x10]
000000000002f340	ldp	x20, x19, [sp], #0x20
000000000002f344	b	0x51890 ; symbol stub for: __ZNSt3__15mutexD1Ev
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE13ExtractUnsafeEPNS9_4NodeE:
000000000002f348	stp	x22, x21, [sp, #-0x30]!
000000000002f34c	stp	x20, x19, [sp, #0x10]
000000000002f350	stp	x29, x30, [sp, #0x20]
000000000002f354	add	x29, sp, #0x20
000000000002f358	mov	x20, x1
000000000002f35c	mov	x19, x0
000000000002f360	cbz	x2, 0x2f39c
000000000002f364	mov	x21, x2
000000000002f368	ldr	x22, [x2]
000000000002f36c	str	xzr, [x2]
000000000002f370	ldr	x8, [x22]
000000000002f374	str	xzr, [x22]
000000000002f378	ldr	x0, [x2]
000000000002f37c	str	x8, [x2]
000000000002f380	cbz	x0, 0x2f390
000000000002f384	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002f388	bl	_mi_free
000000000002f38c	ldr	x8, [x21]
000000000002f390	mov	x0, x21
000000000002f394	cbnz	x8, 0x2f3e0
000000000002f398	b	0x2f3d8
000000000002f39c	ldr	x22, [x20]
000000000002f3a0	str	xzr, [x20]
000000000002f3a4	ldr	x8, [x22]
000000000002f3a8	str	xzr, [x22]
000000000002f3ac	ldr	x0, [x20]
000000000002f3b0	str	x8, [x20]
000000000002f3b4	cbz	x0, 0x2f3c4
000000000002f3b8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002f3bc	bl	_mi_free
000000000002f3c0	ldr	x8, [x20]
000000000002f3c4	cbz	x8, 0x2f3d0
000000000002f3c8	mov	x21, x20
000000000002f3cc	b	0x2f3e0
000000000002f3d0	mov	x21, #0x0
000000000002f3d4	mov	x0, x20
000000000002f3d8	str	x21, [x20, #0x8]
000000000002f3dc	mov	x21, x0
000000000002f3e0	ldr	x8, [x20, #0x10]
000000000002f3e4	sub	x8, x8, #0x1
000000000002f3e8	str	x8, [x20, #0x10]
000000000002f3ec	ldr	x8, [x21]
000000000002f3f0	stp	x22, x8, [x19]
000000000002f3f4	ldp	x29, x30, [sp, #0x20]
000000000002f3f8	ldp	x20, x19, [sp, #0x10]
000000000002f3fc	ldp	x22, x21, [sp], #0x30
000000000002f400	ret
__ZN6kotlin12ScopedThread3RunIZNS_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOS7_DpOS8_:
000000000002f404	sub	sp, sp, #0xc0
000000000002f408	stp	x28, x27, [sp, #0x60]
000000000002f40c	stp	x26, x25, [sp, #0x70]
000000000002f410	stp	x24, x23, [sp, #0x80]
000000000002f414	stp	x22, x21, [sp, #0x90]
000000000002f418	stp	x20, x19, [sp, #0xa0]
000000000002f41c	stp	x29, x30, [sp, #0xb0]
000000000002f420	add	x29, sp, #0xb0
000000000002f424	mov	x19, x1
000000000002f428	ldrb	w8, [x0, #0x18]
000000000002f42c	cbz	w8, 0x2f440
000000000002f430	ldrsb	w8, [x0, #0x17]
000000000002f434	tbz	w8, #0x1f, 0x2f43c
000000000002f438	ldr	x0, [x0]
000000000002f43c	bl	0x51cbc ; symbol stub for: _pthread_setname_np
000000000002f440	ldr	x28, [x19]
000000000002f444	bl	_Kotlin_initRuntimeIfNeeded
000000000002f448	add	x19, x28, #0xc8
000000000002f44c	mov	x0, x19
000000000002f450	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002f454	mov	w23, #0x1
000000000002f458	strb	w23, [x28, #0x138]
000000000002f45c	str	x19, [sp, #0x18]
000000000002f460	mov	x0, x19
000000000002f464	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002f468	add	x0, x28, #0x108
000000000002f46c	str	x0, [sp, #0x10]
000000000002f470	bl	0x51830 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002f474	mov	x21, #0x0
000000000002f478	add	x25, x28, #0x58
000000000002f47c	add	x8, sp, #0x48
000000000002f480	add	x9, x8, #0x8
000000000002f484	add	x24, x28, #0x28
000000000002f488	add	x8, sp, #0x28
000000000002f48c	add	x8, x8, #0x8
000000000002f490	stp	x8, x9, [sp]
000000000002f494	add	x8, x28, #0x18
000000000002f498	str	x8, [sp, #0x20]
000000000002f49c	adrp	x8, 61 ; 0x6c000
000000000002f4a0	add	x8, x8, #0xbb0
000000000002f4a4	ldr	x19, [x8]
000000000002f4a8	str	x25, [sp, #0x48]
000000000002f4ac	strb	w23, [sp, #0x50]
000000000002f4b0	mov	x0, x25
000000000002f4b4	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002f4b8	ldr	x20, [x28, #0x20]
000000000002f4bc	cbnz	x20, 0x2f4e8
000000000002f4c0	ldr	x8, [x28, #0xb8]
000000000002f4c4	cmp	x8, x21
000000000002f4c8	b.ne	0x2f6ac
000000000002f4cc	ldrb	w8, [x28, #0xc0]
000000000002f4d0	cbnz	w8, 0x2f6b4
000000000002f4d4	add	x1, sp, #0x48
000000000002f4d8	mov	x0, x24
000000000002f4dc	bl	0x51848 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
000000000002f4e0	ldr	x20, [x28, #0x20]
000000000002f4e4	cbz	x20, 0x2f4c0
000000000002f4e8	ldp	x8, x9, [x28, #0x10]
000000000002f4ec	str	xzr, [x28, #0x10]
000000000002f4f0	ldr	x21, [x28, #0xb8]
000000000002f4f4	ldrb	w10, [sp, #0x50]
000000000002f4f8	stp	x9, x20, [sp, #0x38]
000000000002f4fc	str	x8, [sp, #0x30]
000000000002f500	ldr	x8, [sp, #0x20]
000000000002f504	stp	xzr, xzr, [x8]
000000000002f508	cbz	w10, 0x2f710
000000000002f50c	ldr	x0, [sp, #0x48]
000000000002f510	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002f514	strb	wzr, [sp, #0x50]
000000000002f518	cbz	x20, 0x2f59c
000000000002f51c	adrp	x0, 61 ; 0x6c000
000000000002f520	add	x0, x0, #0xbb0
000000000002f524	blr	x19
000000000002f528	ldr	x22, [x0]
000000000002f52c	add	x26, x22, #0x138
000000000002f530	ldaxr	w20, [x26]
000000000002f534	stlxr	w8, wzr, [x26]
000000000002f538	cbnz	w8, 0x2f530
000000000002f53c	cmp	w20, #0x1
000000000002f540	b.ne	0x2f55c
000000000002f544	adr	x8, #0x574ff
000000000002f548	nop
000000000002f54c	ldarb	w8, [x8]
000000000002f550	tbz	w8, #0x0, 0x2f55c
000000000002f554	mov	x0, x26
000000000002f558	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002f55c	ldr	x23, [sp, #0x30]
000000000002f560	cbnz	x23, 0x2f604
000000000002f564	mov	w23, #0x1
000000000002f568	cbz	x22, 0x2f59c
000000000002f56c	ldaxr	w8, [x26]
000000000002f570	stlxr	w9, w20, [x26]
000000000002f574	cbnz	w9, 0x2f56c
000000000002f578	cbnz	w20, 0x2f59c
000000000002f57c	cmp	w8, #0x1
000000000002f580	b.ne	0x2f59c
000000000002f584	adr	x8, #0x574bf
000000000002f588	nop
000000000002f58c	ldarb	w8, [x8]
000000000002f590	tbz	w8, #0x0, 0x2f59c
000000000002f594	mov	x0, x26
000000000002f598	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002f59c	str	x21, [sp, #0x58]
000000000002f5a0	ldr	x0, [x28, #0xb0]
000000000002f5a4	cbz	x0, 0x2f708
000000000002f5a8	ldr	x8, [x0]
000000000002f5ac	ldr	x8, [x8, #0x30]
000000000002f5b0	add	x1, sp, #0x58
000000000002f5b4	blr	x8
000000000002f5b8	ldr	x0, [sp, #0x30]
000000000002f5bc	str	xzr, [sp, #0x30]
000000000002f5c0	cbz	x0, 0x2f694
000000000002f5c4	ldr	x20, [x0]
000000000002f5c8	str	xzr, [x0]
000000000002f5cc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002f5d0	bl	_mi_free
000000000002f5d4	mov	x0, x20
000000000002f5d8	cbnz	x20, 0x2f5c4
000000000002f5dc	ldr	x0, [sp, #0x30]
000000000002f5e0	str	xzr, [sp, #0x30]
000000000002f5e4	cbz	x0, 0x2f5f0
000000000002f5e8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000002f5ec	bl	_mi_free
000000000002f5f0	ldrb	w8, [sp, #0x50]
000000000002f5f4	cbnz	w8, 0x2f6a0
000000000002f5f8	b	0x2f4a8
000000000002f5fc	ldr	x23, [x23]
000000000002f600	cbz	x23, 0x2f564
000000000002f604	add	x27, x23, #0x10
000000000002f608	ldr	x8, [x23, #0x10]
000000000002f60c	and	x8, x8, #0xfffffffffffffffc
000000000002f610	ldr	x1, [x8]
000000000002f614	ldrb	w8, [x1, #0x58]
000000000002f618	tbnz	w8, #0x6, 0x2f638
000000000002f61c	ldar	x8, [x27]
000000000002f620	and	x8, x8, #0xfffffffffffffffc
000000000002f624	ldr	x9, [x8]
000000000002f628	cmp	x8, #0x0
000000000002f62c	ccmp	x9, x8, #0x4, ne
000000000002f630	b.eq	0x2f5fc
000000000002f634	b	0x2f658
000000000002f638	mov	x0, x27
000000000002f63c	bl	__ZN12_GLOBAL__N_121RunFinalizerHooksImplEP9ObjHeaderPK8TypeInfo
000000000002f640	ldar	x8, [x27]
000000000002f644	and	x8, x8, #0xfffffffffffffffc
000000000002f648	ldr	x9, [x8]
000000000002f64c	cmp	x8, #0x0
000000000002f650	ccmp	x9, x8, #0x4, ne
000000000002f654	b.eq	0x2f5fc
000000000002f658	ldar	x8, [x27]
000000000002f65c	and	x8, x8, #0xfffffffffffffffc
000000000002f660	ldr	x9, [x8]
000000000002f664	cmp	x9, x8
000000000002f668	csel	x27, xzr, x8, eq
000000000002f66c	mov	x0, x27
000000000002f670	bl	__ZN6kotlin2mm15ExtraObjectData9UninstallEv
000000000002f674	adrp	x0, 61 ; 0x6c000
000000000002f678	add	x0, x0, #0xbb0
000000000002f67c	blr	x19
000000000002f680	ldr	x8, [x0]
000000000002f684	add	x0, x8, #0x8
000000000002f688	mov	x1, x27
000000000002f68c	bl	__ZN6kotlin2mm22ExtraObjectDataFactory22DestroyExtraObjectDataEPNS0_10ThreadDataERNS0_15ExtraObjectDataE
000000000002f690	b	0x2f5fc
000000000002f694	str	xzr, [sp, #0x30]
000000000002f698	ldrb	w8, [sp, #0x50]
000000000002f69c	cbz	w8, 0x2f4a8
000000000002f6a0	ldr	x0, [sp, #0x48]
000000000002f6a4	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002f6a8	b	0x2f4a8
000000000002f6ac	mov	x20, #0x0
000000000002f6b0	b	0x2f4e8
000000000002f6b4	strb	wzr, [x28, #0xc1]
000000000002f6b8	ldrb	w8, [sp, #0x50]
000000000002f6bc	cbz	w8, 0x2f6c8
000000000002f6c0	ldr	x0, [sp, #0x48]
000000000002f6c4	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002f6c8	ldr	x19, [sp, #0x18]
000000000002f6cc	mov	x0, x19
000000000002f6d0	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002f6d4	strb	wzr, [x28, #0x138]
000000000002f6d8	mov	x0, x19
000000000002f6dc	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002f6e0	ldr	x0, [sp, #0x10]
000000000002f6e4	bl	0x51830 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002f6e8	ldp	x29, x30, [sp, #0xb0]
000000000002f6ec	ldp	x20, x19, [sp, #0xa0]
000000000002f6f0	ldp	x22, x21, [sp, #0x90]
000000000002f6f4	ldp	x24, x23, [sp, #0x80]
000000000002f6f8	ldp	x26, x25, [sp, #0x70]
000000000002f6fc	ldp	x28, x27, [sp, #0x60]
000000000002f700	add	sp, sp, #0xc0
000000000002f704	ret
000000000002f708	bl	__ZNSt3__125__throw_bad_function_callEv
000000000002f70c	b	0x2f720
000000000002f710	adr	x1, #0x269fb ; literal pool for: "unique_lock::unlock: not locked"
000000000002f714	nop
000000000002f718	mov	w0, #0x1
000000000002f71c	bl	0x5186c ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000002f720	brk	#0x1
000000000002f724	bl	___clang_call_terminate
000000000002f728	b	0x2f72c
000000000002f72c	mov	x19, x0
000000000002f730	ldr	x3, [sp, #0x30]
000000000002f734	add	x0, sp, #0x48
000000000002f738	ldp	x2, x1, [sp]
000000000002f73c	bl	__ZN6kotlin12ScopedThread3RunIZNS_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOS7_DpOS8_.cold.1
000000000002f740	mov	x0, x19
000000000002f744	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvN6kotlin12ScopedThread10attributesEOZNS7_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0ES9_SC_EEEEEPvSH_:
000000000002f748	sub	sp, sp, #0x40
000000000002f74c	stp	x20, x19, [sp, #0x20]
000000000002f750	stp	x29, x30, [sp, #0x30]
000000000002f754	add	x29, sp, #0x30
000000000002f758	mov	x19, x0
000000000002f75c	bl	0x51860 ; symbol stub for: __ZNSt3__119__thread_local_dataEv
000000000002f760	ldr	x1, [x19]
000000000002f764	str	xzr, [x19]
000000000002f768	ldr	x0, [x0]
000000000002f76c	bl	0x51cc8 ; symbol stub for: _pthread_setspecific
000000000002f770	add	x1, x19, #0x30
000000000002f774	ldr	x8, [x19, #0x8]
000000000002f778	strb	wzr, [sp]
000000000002f77c	strb	wzr, [sp, #0x18]
000000000002f780	ldrb	w9, [x19, #0x28]
000000000002f784	cbz	w9, 0x2f7a8
000000000002f788	ldr	q0, [x19, #0x10]
000000000002f78c	str	q0, [sp]
000000000002f790	ldr	x9, [x19, #0x20]
000000000002f794	str	x9, [sp, #0x10]
000000000002f798	stp	xzr, xzr, [x19, #0x18]
000000000002f79c	str	xzr, [x19, #0x10]
000000000002f7a0	mov	w9, #0x1
000000000002f7a4	strb	w9, [sp, #0x18]
000000000002f7a8	mov	x0, sp
000000000002f7ac	blr	x8
000000000002f7b0	ldrb	w8, [sp, #0x18]
000000000002f7b4	cbz	w8, 0x2f7c8
000000000002f7b8	ldrsb	w8, [sp, #0x17]
000000000002f7bc	tbz	w8, #0x1f, 0x2f7c8
000000000002f7c0	ldr	x0, [sp]
000000000002f7c4	bl	0x51a64 ; symbol stub for: _free
000000000002f7c8	ldrb	w8, [x19, #0x28]
000000000002f7cc	cbz	w8, 0x2f7e0
000000000002f7d0	ldrsb	w8, [x19, #0x27]
000000000002f7d4	tbz	w8, #0x1f, 0x2f7e0
000000000002f7d8	ldr	x0, [x19, #0x10]
000000000002f7dc	bl	0x51a64 ; symbol stub for: _free
000000000002f7e0	ldr	x0, [x19]
000000000002f7e4	str	xzr, [x19]
000000000002f7e8	cbz	x0, 0x2f7f4
000000000002f7ec	bl	0x51800 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002f7f0	bl	0x51914 ; symbol stub for: __ZdlPv
000000000002f7f4	mov	x0, x19
000000000002f7f8	bl	0x51914 ; symbol stub for: __ZdlPv
000000000002f7fc	mov	x0, #0x0
000000000002f800	ldp	x29, x30, [sp, #0x30]
000000000002f804	ldp	x20, x19, [sp, #0x20]
000000000002f808	add	sp, sp, #0x40
000000000002f80c	ret
000000000002f810	mov	x20, x0
000000000002f814	ldrb	w8, [sp, #0x18]
000000000002f818	cbz	w8, 0x2f840
000000000002f81c	ldrsb	w8, [sp, #0x17]
000000000002f820	tbz	w8, #0x1f, 0x2f840
000000000002f824	ldr	x0, [sp]
000000000002f828	bl	0x51a64 ; symbol stub for: _free
000000000002f82c	b	0x2f840
000000000002f830	mov	x20, x0
000000000002f834	b	0x2f840
000000000002f838	mov	x20, x0
000000000002f83c	cbz	x19, 0x2f874
000000000002f840	ldrb	w8, [x19, #0x28]
000000000002f844	cbz	w8, 0x2f858
000000000002f848	ldrsb	w8, [x19, #0x27]
000000000002f84c	tbz	w8, #0x1f, 0x2f858
000000000002f850	ldr	x0, [x19, #0x10]
000000000002f854	bl	0x51a64 ; symbol stub for: _free
000000000002f858	ldr	x0, [x19]
000000000002f85c	str	xzr, [x19]
000000000002f860	cbz	x0, 0x2f86c
000000000002f864	bl	0x51800 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002f868	bl	0x51914 ; symbol stub for: __ZdlPv
000000000002f86c	mov	x0, x19
000000000002f870	bl	0x51914 ; symbol stub for: __ZdlPv
000000000002f874	mov	x0, x20
000000000002f878	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEED1Ev:
000000000002f87c	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEED0Ev:
000000000002f880	b	0x51914 ; symbol stub for: __ZdlPv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE7__cloneEv:
000000000002f884	stp	x20, x19, [sp, #-0x20]!
000000000002f888	stp	x29, x30, [sp, #0x10]
000000000002f88c	add	x29, sp, #0x10
000000000002f890	mov	x19, x0
000000000002f894	mov	w0, #0x10
000000000002f898	bl	0x51920 ; symbol stub for: __Znwm
000000000002f89c	ldr	x8, [x19, #0x8]
000000000002f8a0	adr	x9, #0x37510
000000000002f8a4	nop
000000000002f8a8	stp	x9, x8, [x0]
000000000002f8ac	ldp	x29, x30, [sp, #0x10]
000000000002f8b0	ldp	x20, x19, [sp], #0x20
000000000002f8b4	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE7__cloneEPNS0_6__baseISE_EE:
000000000002f8b8	ldr	x8, [x0, #0x8]
000000000002f8bc	adr	x9, #0x374f4
000000000002f8c0	nop
000000000002f8c4	stp	x9, x8, [x1]
000000000002f8c8	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE7destroyEv:
000000000002f8cc	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE18destroy_deallocateEv:
000000000002f8d0	b	0x51914 ; symbol stub for: __ZdlPv
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEEclEv:
000000000002f8d4	ldr	x0, [x0, #0x8]
000000000002f8d8	b	__ZZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerEENK3$_2clEv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE6targetERKSt9type_info:
000000000002f8dc	stp	x20, x19, [sp, #-0x20]!
000000000002f8e0	stp	x29, x30, [sp, #0x10]
000000000002f8e4	add	x29, sp, #0x10
000000000002f8e8	mov	x19, x0
000000000002f8ec	ldr	x9, [x1, #0x8]
000000000002f8f0	adr	x8, #0x23501
000000000002f8f4	nop
000000000002f8f8	cmp	x9, x8
000000000002f8fc	b.ne	0x2f910
000000000002f900	add	x0, x19, #0x8
000000000002f904	ldp	x29, x30, [sp, #0x10]
000000000002f908	ldp	x20, x19, [sp], #0x20
000000000002f90c	ret
000000000002f910	tst	x9, x8
000000000002f914	b.lt	0x2f928
000000000002f918	mov	x0, #0x0
000000000002f91c	ldp	x29, x30, [sp, #0x10]
000000000002f920	ldp	x20, x19, [sp], #0x20
000000000002f924	ret
000000000002f928	and	x0, x9, #0x7fffffffffffffff
000000000002f92c	and	x1, x8, #0x7fffffffffffffff
000000000002f930	bl	0x51d1c ; symbol stub for: _strcmp
000000000002f934	cbz	w0, 0x2f900
000000000002f938	mov	x0, #0x0
000000000002f93c	ldp	x29, x30, [sp, #0x10]
000000000002f940	ldp	x20, x19, [sp], #0x20
000000000002f944	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE11target_typeEv:
000000000002f948	adr	x0, #0x374c8
000000000002f94c	nop
000000000002f950	ret
__ZZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerEENK3$_2clEv:
000000000002f954	stp	x20, x19, [sp, #-0x20]!
000000000002f958	stp	x29, x30, [sp, #0x10]
000000000002f95c	add	x29, sp, #0x10
000000000002f960	mov	x8, x0
000000000002f964	adrp	x0, 61 ; 0x6c000
000000000002f968	add	x0, x0, #0xbb0
000000000002f96c	ldr	x9, [x0]
000000000002f970	blr	x9
000000000002f974	ldr	x19, [x0]
000000000002f978	cbz	x19, 0x2f994
000000000002f97c	add	x9, x19, #0x138
000000000002f980	mov	w10, #0x1
000000000002f984	ldaxr	w20, [x9]
000000000002f988	stlxr	w11, w10, [x9]
000000000002f98c	cbnz	w11, 0x2f984
000000000002f990	b	0x2f998
000000000002f994	mov	w20, #0x1
000000000002f998	add	x0, x8, #0x18
000000000002f99c	bl	__ZN13GCStateHolder8scheduleEv
000000000002f9a0	cbz	x19, 0x2f9d0
000000000002f9a4	add	x0, x19, #0x138
000000000002f9a8	ldaxr	w8, [x0]
000000000002f9ac	stlxr	w9, w20, [x0]
000000000002f9b0	cbnz	w9, 0x2f9a8
000000000002f9b4	cbnz	w20, 0x2f9d0
000000000002f9b8	cmp	w8, #0x1
000000000002f9bc	b.ne	0x2f9d0
000000000002f9c0	adr	x8, #0x57083
000000000002f9c4	nop
000000000002f9c8	ldarb	w8, [x8]
000000000002f9cc	tbnz	w8, #0x0, 0x2f9dc
000000000002f9d0	ldp	x29, x30, [sp, #0x10]
000000000002f9d4	ldp	x20, x19, [sp], #0x20
000000000002f9d8	ret
000000000002f9dc	ldp	x29, x30, [sp, #0x10]
000000000002f9e0	ldp	x20, x19, [sp], #0x20
000000000002f9e4	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002f9e8	mov	x9, x19
000000000002f9ec	mov	x19, x0
000000000002f9f0	cbz	x9, 0x2fa28
000000000002f9f4	mov	x8, x9
000000000002f9f8	add	x0, x9, #0x138
000000000002f9fc	ldaxr	w8, [x0]
000000000002fa00	stlxr	w9, w20, [x0]
000000000002fa04	cbnz	w9, 0x2f9fc
000000000002fa08	cbnz	w20, 0x2fa28
000000000002fa0c	cmp	w8, #0x1
000000000002fa10	b.ne	0x2fa28
000000000002fa14	adr	x8, #0x5702f
000000000002fa18	nop
000000000002fa1c	ldarb	w8, [x8]
000000000002fa20	tbz	w8, #0x0, 0x2fa28
000000000002fa24	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002fa28	mov	x0, x19
000000000002fa2c	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEED1Ev:
000000000002fa30	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEED0Ev:
000000000002fa34	b	0x51914 ; symbol stub for: __ZdlPv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE7__cloneEv:
000000000002fa38	stp	x20, x19, [sp, #-0x20]!
000000000002fa3c	stp	x29, x30, [sp, #0x10]
000000000002fa40	add	x29, sp, #0x10
000000000002fa44	mov	x19, x0
000000000002fa48	mov	w0, #0x10
000000000002fa4c	bl	0x51920 ; symbol stub for: __Znwm
000000000002fa50	ldr	x8, [x19, #0x8]
000000000002fa54	adr	x9, #0x37304
000000000002fa58	nop
000000000002fa5c	stp	x9, x8, [x0]
000000000002fa60	ldp	x29, x30, [sp, #0x10]
000000000002fa64	ldp	x20, x19, [sp], #0x20
000000000002fa68	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE7__cloneEPNS0_6__baseISE_EE:
000000000002fa6c	ldr	x8, [x0, #0x8]
000000000002fa70	adr	x9, #0x372e8
000000000002fa74	nop
000000000002fa78	stp	x9, x8, [x1]
000000000002fa7c	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE7destroyEv:
000000000002fa80	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE18destroy_deallocateEv:
000000000002fa84	b	0x51914 ; symbol stub for: __ZdlPv
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEEclEOx:
000000000002fa88	stp	x22, x21, [sp, #-0x30]!
000000000002fa8c	stp	x20, x19, [sp, #0x10]
000000000002fa90	stp	x29, x30, [sp, #0x20]
000000000002fa94	add	x29, sp, #0x20
000000000002fa98	ldr	x20, [x1]
000000000002fa9c	ldr	x21, [x0, #0x8]
000000000002faa0	ldr	x19, [x21, #0x120]
000000000002faa4	mov	x0, x19
000000000002faa8	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002faac	str	x20, [x21, #0x118]
000000000002fab0	add	x0, x21, #0x128
000000000002fab4	bl	0x51830 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002fab8	mov	x0, x19
000000000002fabc	ldp	x29, x30, [sp, #0x20]
000000000002fac0	ldp	x20, x19, [sp, #0x10]
000000000002fac4	ldp	x22, x21, [sp], #0x30
000000000002fac8	b	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE6targetERKSt9type_info:
000000000002facc	stp	x20, x19, [sp, #-0x20]!
000000000002fad0	stp	x29, x30, [sp, #0x10]
000000000002fad4	add	x29, sp, #0x10
000000000002fad8	mov	x19, x0
000000000002fadc	ldr	x9, [x1, #0x8]
000000000002fae0	adr	x8, #0x233fe
000000000002fae4	nop
000000000002fae8	cmp	x9, x8
000000000002faec	b.ne	0x2fb00
000000000002faf0	add	x0, x19, #0x8
000000000002faf4	ldp	x29, x30, [sp, #0x10]
000000000002faf8	ldp	x20, x19, [sp], #0x20
000000000002fafc	ret
000000000002fb00	tst	x9, x8
000000000002fb04	b.lt	0x2fb18
000000000002fb08	mov	x0, #0x0
000000000002fb0c	ldp	x29, x30, [sp, #0x10]
000000000002fb10	ldp	x20, x19, [sp], #0x20
000000000002fb14	ret
000000000002fb18	and	x0, x9, #0x7fffffffffffffff
000000000002fb1c	and	x1, x8, #0x7fffffffffffffff
000000000002fb20	bl	0x51d1c ; symbol stub for: _strcmp
000000000002fb24	cbz	w0, 0x2faf0
000000000002fb28	mov	x0, #0x0
000000000002fb2c	ldp	x29, x30, [sp, #0x10]
000000000002fb30	ldp	x20, x19, [sp], #0x20
000000000002fb34	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE11target_typeEv:
000000000002fb38	adr	x0, #0x37300
000000000002fb3c	nop
000000000002fb40	ret
__ZNSt3__117__call_once_proxyINS_5tupleIJOZN6kotlin14initObjectPoolEvE3$_0EEEEEvPv:
000000000002fb44	adr	x8, #0x3cf04
000000000002fb48	nop
000000000002fb4c	mov	w9, #0x1
000000000002fb50	str	x9, [x8]
000000000002fb54	mov	w9, #0x2
000000000002fb58	str	w9, [x8, #0x8]
000000000002fb5c	ret
__ZN6kotlin20allocateInObjectPoolEm:
000000000002fb60	stp	x20, x19, [sp, #-0x20]!
000000000002fb64	stp	x29, x30, [sp, #0x10]
000000000002fb68	add	x29, sp, #0x10
000000000002fb6c	mov	x1, x0
000000000002fb70	adrp	x0, 61 ; 0x6c000
000000000002fb74	add	x0, x0, #0xbc8
000000000002fb78	ldr	x8, [x0]
000000000002fb7c	blr	x8
000000000002fb80	tbnz	x1, #0x3f, 0x2fc10
000000000002fb84	ldr	x0, [x0]
000000000002fb88	cmp	x1, #0x400
000000000002fb8c	b.hi	0x2fc24
000000000002fb90	add	x8, x1, #0x7
000000000002fb94	and	x8, x8, #0xfffffffffffffff8
000000000002fb98	add	x8, x0, x8
000000000002fb9c	ldr	x8, [x8, #0x8]
000000000002fba0	ldr	x19, [x8, #0x8]
000000000002fba4	and	x9, x19, #0x7
000000000002fba8	cmp	x19, #0x0
000000000002fbac	ccmp	x9, #0x0, #0x0, ne
000000000002fbb0	b.ne	0x2fc24
000000000002fbb4	ldr	w9, [x8, #0x10]
000000000002fbb8	add	w9, w9, #0x1
000000000002fbbc	str	w9, [x8, #0x10]
000000000002fbc0	ldr	x9, [x19]
000000000002fbc4	str	x9, [x8, #0x8]
000000000002fbc8	cmp	x1, #0x9
000000000002fbcc	b.lo	0x2fbec
000000000002fbd0	ldrb	w8, [x8, #0x7]
000000000002fbd4	tbz	w8, #0x0, 0x2fbec
000000000002fbd8	str	xzr, [x19]
000000000002fbdc	mov	x0, x19
000000000002fbe0	ldp	x29, x30, [sp, #0x10]
000000000002fbe4	ldp	x20, x19, [sp], #0x20
000000000002fbe8	ret
000000000002fbec	mov	x0, x19
000000000002fbf0	bl	__mi_usable_size
000000000002fbf4	mov	x1, x0
000000000002fbf8	mov	x0, x19
000000000002fbfc	bl	0x519d4 ; symbol stub for: _bzero
000000000002fc00	mov	x0, x19
000000000002fc04	ldp	x29, x30, [sp, #0x10]
000000000002fc08	ldp	x20, x19, [sp], #0x20
000000000002fc0c	ret
000000000002fc10	mov	x19, #0x0
000000000002fc14	mov	x0, x19
000000000002fc18	ldp	x29, x30, [sp, #0x10]
000000000002fc1c	ldp	x20, x19, [sp], #0x20
000000000002fc20	ret
000000000002fc24	sub	x8, x1, #0x8
000000000002fc28	mov	w9, #0x1fff8
000000000002fc2c	cmp	x8, x9
000000000002fc30	b.hi	0x2fc48
000000000002fc34	and	x8, x1, #0x7
000000000002fc38	cbnz	x8, 0x2fc48
000000000002fc3c	ldp	x29, x30, [sp, #0x10]
000000000002fc40	ldp	x20, x19, [sp], #0x20
000000000002fc44	b	__mi_heap_malloc_zero
000000000002fc48	add	x1, x1, #0x7
000000000002fc4c	bl	__mi_heap_malloc_zero
000000000002fc50	mov	x19, x0
000000000002fc54	cbz	x0, 0x2fbdc
000000000002fc58	and	x8, x19, #0xfffffffffffffff8
000000000002fc5c	add	x8, x8, #0x8
000000000002fc60	tst	x19, #0x7
000000000002fc64	csel	x8, x19, x8, eq
000000000002fc68	cmp	x8, x19
000000000002fc6c	b.eq	0x2fbdc
000000000002fc70	and	x9, x19, #0xffffffffffc00000
000000000002fc74	and	x10, x19, #0x3fffff
000000000002fc78	ldr	x11, [x9, #0x60]
000000000002fc7c	lsr	x10, x10, x11
000000000002fc80	add	x9, x9, x10, lsl #6
000000000002fc84	ldrb	w10, [x9, #0x7e]
000000000002fc88	orr	w10, w10, #0x2
000000000002fc8c	strb	w10, [x9, #0x7e]
000000000002fc90	mov	x19, x8
000000000002fc94	mov	x0, x19
000000000002fc98	ldp	x29, x30, [sp, #0x10]
000000000002fc9c	ldp	x20, x19, [sp], #0x20
000000000002fca0	ret
__mi_process_init:
000000000002fca4	sub	sp, sp, #0x30
000000000002fca8	stp	x20, x19, [sp, #0x10]
000000000002fcac	stp	x29, x30, [sp, #0x20]
000000000002fcb0	add	x29, sp, #0x20
000000000002fcb4	nop
000000000002fcb8	ldr	x8, #0x3c4f0
000000000002fcbc	cbnz	x8, 0x2fd70
000000000002fcc0	bl	0x51cb0 ; symbol stub for: _pthread_self
000000000002fcc4	bl	0x51c68 ; symbol stub for: _pthread_mach_thread_np
000000000002fcc8	mov	w8, w0
000000000002fccc	adrp	x9, 61 ; 0x6c000
000000000002fcd0	str	x8, [x9, #0x1a0]
000000000002fcd4	bl	0x51a88 ; symbol stub for: _mach_absolute_time
000000000002fcd8	adr	x8, #0x440
000000000002fcdc	nop
000000000002fce0	adr	x9, #0x358
000000000002fce4	nop
000000000002fce8	eor	x8, x9, x8
000000000002fcec	eor	x8, x0, x8
000000000002fcf0	eor	w9, w8, w8, lsr #17
000000000002fcf4	and	x9, x9, #0xf
000000000002fcf8	add	x9, x9, #0x1
000000000002fcfc	mov	w10, #0x11
000000000002fd00	mov	x11, #0xe5b9
000000000002fd04	movk	x11, #0x1ce4, lsl #16
000000000002fd08	movk	x11, #0x476d, lsl #32
000000000002fd0c	movk	x11, #0xbf58, lsl #48
000000000002fd10	mov	x12, #0x11eb
000000000002fd14	movk	x12, #0x1331, lsl #16
000000000002fd18	movk	x12, #0x49bb, lsl #32
000000000002fd1c	movk	x12, #0x94d0, lsl #48
000000000002fd20	cmp	x8, #0x0
000000000002fd24	csel	x8, x10, x8, eq
000000000002fd28	eor	x8, x8, x8, lsr #30
000000000002fd2c	mul	x8, x8, x11
000000000002fd30	eor	x8, x8, x8, lsr #27
000000000002fd34	mul	x8, x8, x12
000000000002fd38	eor	x8, x8, x8, lsr #31
000000000002fd3c	subs	x9, x9, #0x1
000000000002fd40	b.ne	0x2fd20
000000000002fd44	adr	x19, #0x3b93c
000000000002fd48	nop
000000000002fd4c	str	x8, [x19, #0xb28]
000000000002fd50	add	x0, x19, #0xb40
000000000002fd54	bl	__mi_random_init
000000000002fd58	mov	x0, x19
000000000002fd5c	bl	__mi_heap_random_next
000000000002fd60	str	x0, [x19, #0xb30]
000000000002fd64	mov	x0, x19
000000000002fd68	bl	__mi_heap_random_next
000000000002fd6c	str	x0, [x19, #0xb38]
000000000002fd70	adrp	x8, 87 ; 0x86000
000000000002fd74	mov	w9, #0x1
000000000002fd78	strb	w9, [x8, #0xa46]
000000000002fd7c	adr	x0, #0x530
000000000002fd80	nop
000000000002fd84	bl	0x519bc ; symbol stub for: _atexit
000000000002fd88	adr	x9, #0x56d98
000000000002fd8c	nop
000000000002fd90	ldaxr	x8, [x9]
000000000002fd94	add	x10, x8, #0x1
000000000002fd98	stlxr	w11, x10, [x9]
000000000002fd9c	cbnz	w11, 0x2fd90
000000000002fda0	cmp	x8, #0x8, lsl #12
000000000002fda4	mov	w9, #0x8000
000000000002fda8	adr	x19, #0x3ec20
000000000002fdac	nop
000000000002fdb0	csel	x20, x8, x9, lo
000000000002fdb4	strb	wzr, [x19, x20]
000000000002fdb8	nop
000000000002fdbc	ldr	x8, #0x28274 ; literal pool symbol address: ___stderrp
000000000002fdc0	ldr	x1, [x8]
000000000002fdc4	mov	x0, x19
000000000002fdc8	bl	0x51a58 ; symbol stub for: _fputs
000000000002fdcc	mov	w8, #0xa
000000000002fdd0	strb	w8, [x19, x20]
000000000002fdd4	adrp	x8, 87 ; 0x86000
000000000002fdd8	adr	x9, #0x9124
000000000002fddc	nop
000000000002fde0	str	x9, [x8, #0xb18]
000000000002fde4	mov	w0, #0x0
000000000002fde8	bl	_mi_option_get
000000000002fdec	adr	x20, #0x3c85c
000000000002fdf0	nop
000000000002fdf4	ldr	x8, [x20, #0x398]
000000000002fdf8	ldr	x9, [x20, #0x388]
000000000002fdfc	stp	x8, x9, [sp]
000000000002fe00	adr	x19, #0x26844 ; literal pool for: "option '%s': %ld\n"
000000000002fe04	nop
000000000002fe08	mov	x0, x19
000000000002fe0c	bl	__mi_verbose_message
000000000002fe10	mov	w0, #0x1
000000000002fe14	bl	_mi_option_get
000000000002fe18	ldr	x8, [x20, #0x3b0]
000000000002fe1c	ldr	x9, [x20, #0x3a0]
000000000002fe20	stp	x8, x9, [sp]
000000000002fe24	mov	x0, x19
000000000002fe28	bl	__mi_verbose_message
000000000002fe2c	mov	w0, #0x2
000000000002fe30	bl	_mi_option_get
000000000002fe34	mov	w0, #0x3
000000000002fe38	bl	_mi_option_get
000000000002fe3c	ldr	x8, [x20, #0x3e0]
000000000002fe40	ldr	x9, [x20, #0x3d0]
000000000002fe44	stp	x8, x9, [sp]
000000000002fe48	mov	x0, x19
000000000002fe4c	bl	__mi_verbose_message
000000000002fe50	mov	w0, #0x4
000000000002fe54	bl	_mi_option_get
000000000002fe58	ldr	x8, [x20, #0x3f8]
000000000002fe5c	ldr	x9, [x20, #0x3e8]
000000000002fe60	stp	x8, x9, [sp]
000000000002fe64	mov	x0, x19
000000000002fe68	bl	__mi_verbose_message
000000000002fe6c	mov	w0, #0x5
000000000002fe70	bl	_mi_option_get
000000000002fe74	ldr	x8, [x20, #0x410]
000000000002fe78	ldr	x9, [x20, #0x400]
000000000002fe7c	stp	x8, x9, [sp]
000000000002fe80	mov	x0, x19
000000000002fe84	bl	__mi_verbose_message
000000000002fe88	mov	w0, #0x6
000000000002fe8c	bl	_mi_option_get
000000000002fe90	ldr	x8, [x20, #0x428]
000000000002fe94	ldr	x9, [x20, #0x418]
000000000002fe98	stp	x8, x9, [sp]
000000000002fe9c	mov	x0, x19
000000000002fea0	bl	__mi_verbose_message
000000000002fea4	mov	w0, #0x7
000000000002fea8	bl	_mi_option_get
000000000002feac	ldr	x8, [x20, #0x440]
000000000002feb0	ldr	x9, [x20, #0x430]
000000000002feb4	stp	x8, x9, [sp]
000000000002feb8	mov	x0, x19
000000000002febc	bl	__mi_verbose_message
000000000002fec0	mov	w0, #0x8
000000000002fec4	bl	_mi_option_get
000000000002fec8	ldr	x8, [x20, #0x458]
000000000002fecc	ldr	x9, [x20, #0x448]
000000000002fed0	stp	x8, x9, [sp]
000000000002fed4	mov	x0, x19
000000000002fed8	bl	__mi_verbose_message
000000000002fedc	mov	w0, #0x9
000000000002fee0	bl	_mi_option_get
000000000002fee4	ldr	x8, [x20, #0x470]
000000000002fee8	ldr	x9, [x20, #0x460]
000000000002feec	stp	x8, x9, [sp]
000000000002fef0	mov	x0, x19
000000000002fef4	bl	__mi_verbose_message
000000000002fef8	mov	w0, #0xa
000000000002fefc	bl	_mi_option_get
000000000002ff00	ldr	x8, [x20, #0x488]
000000000002ff04	ldr	x9, [x20, #0x478]
000000000002ff08	stp	x8, x9, [sp]
000000000002ff0c	mov	x0, x19
000000000002ff10	bl	__mi_verbose_message
000000000002ff14	mov	w0, #0xb
000000000002ff18	bl	_mi_option_get
000000000002ff1c	ldr	x8, [x20, #0x4a0]
000000000002ff20	ldr	x9, [x20, #0x490]
000000000002ff24	stp	x8, x9, [sp]
000000000002ff28	mov	x0, x19
000000000002ff2c	bl	__mi_verbose_message
000000000002ff30	mov	w0, #0xc
000000000002ff34	bl	_mi_option_get
000000000002ff38	ldr	x8, [x20, #0x4b8]
000000000002ff3c	ldr	x9, [x20, #0x4a8]
000000000002ff40	stp	x8, x9, [sp]
000000000002ff44	mov	x0, x19
000000000002ff48	bl	__mi_verbose_message
000000000002ff4c	mov	w0, #0xd
000000000002ff50	bl	_mi_option_get
000000000002ff54	ldr	x8, [x20, #0x4d0]
000000000002ff58	ldr	x9, [x20, #0x4c0]
000000000002ff5c	stp	x8, x9, [sp]
000000000002ff60	mov	x0, x19
000000000002ff64	bl	__mi_verbose_message
000000000002ff68	mov	w0, #0xe
000000000002ff6c	bl	_mi_option_get
000000000002ff70	ldr	x8, [x20, #0x4e8]
000000000002ff74	ldr	x9, [x20, #0x4d8]
000000000002ff78	stp	x8, x9, [sp]
000000000002ff7c	mov	x0, x19
000000000002ff80	bl	__mi_verbose_message
000000000002ff84	mov	w0, #0xf
000000000002ff88	bl	_mi_option_get
000000000002ff8c	ldr	x8, [x20, #0x500]
000000000002ff90	ldr	x9, [x20, #0x4f0]
000000000002ff94	stp	x8, x9, [sp]
000000000002ff98	mov	x0, x19
000000000002ff9c	bl	__mi_verbose_message
000000000002ffa0	mov	w0, #0x10
000000000002ffa4	bl	_mi_option_get
000000000002ffa8	ldr	x8, [x20, #0x518]
000000000002ffac	ldr	x9, [x20, #0x508]
000000000002ffb0	stp	x8, x9, [sp]
000000000002ffb4	mov	x0, x19
000000000002ffb8	bl	__mi_verbose_message
000000000002ffbc	mov	w0, #0x11
000000000002ffc0	bl	_mi_option_get
000000000002ffc4	ldr	x8, [x20, #0x530]
000000000002ffc8	ldr	x9, [x20, #0x520]
000000000002ffcc	stp	x8, x9, [sp]
000000000002ffd0	mov	x0, x19
000000000002ffd4	bl	__mi_verbose_message
000000000002ffd8	mov	w0, #0x12
000000000002ffdc	bl	_mi_option_get
000000000002ffe0	ldr	x8, [x20, #0x548]
000000000002ffe4	ldr	x9, [x20, #0x538]
000000000002ffe8	stp	x8, x9, [sp]
000000000002ffec	mov	x0, x19
000000000002fff0	bl	__mi_verbose_message
000000000002fff4	mov	w0, #0x13
000000000002fff8	bl	_mi_option_get
000000000002fffc	ldr	x8, [x20, #0x560]
0000000000030000	ldr	x9, [x20, #0x550]
0000000000030004	stp	x8, x9, [sp]
0000000000030008	mov	x0, x19
000000000003000c	bl	__mi_verbose_message
0000000000030010	mov	w0, #0x12
0000000000030014	bl	_mi_option_get
0000000000030018	str	x0, [x20, #0x8]
000000000003001c	mov	w0, #0x13
0000000000030020	bl	_mi_option_get
0000000000030024	str	x0, [x20]
0000000000030028	ldp	x29, x30, [sp, #0x20]
000000000003002c	ldp	x20, x19, [sp, #0x10]
0000000000030030	add	sp, sp, #0x30
0000000000030034	b	_mi_process_init
_mi_heap_main_init:
0000000000030038	stp	x20, x19, [sp, #-0x20]!
000000000003003c	stp	x29, x30, [sp, #0x10]
0000000000030040	add	x29, sp, #0x10
0000000000030044	nop
0000000000030048	ldr	x8, #0x3c160
000000000003004c	cbz	x8, 0x3005c
0000000000030050	ldp	x29, x30, [sp, #0x10]
0000000000030054	ldp	x20, x19, [sp], #0x20
0000000000030058	ret
000000000003005c	bl	0x51cb0 ; symbol stub for: _pthread_self
0000000000030060	bl	0x51c68 ; symbol stub for: _pthread_mach_thread_np
0000000000030064	mov	w8, w0
0000000000030068	adrp	x9, 60 ; 0x6c000
000000000003006c	str	x8, [x9, #0x1a0]
0000000000030070	bl	0x51a88 ; symbol stub for: _mach_absolute_time
0000000000030074	adr	x8, #0xa4
0000000000030078	nop
000000000003007c	adr	x9, #-0x44
0000000000030080	nop
0000000000030084	eor	x8, x9, x8
0000000000030088	eor	x8, x0, x8
000000000003008c	eor	w9, w8, w8, lsr #17
0000000000030090	and	x9, x9, #0xf
0000000000030094	add	x9, x9, #0x1
0000000000030098	mov	w10, #0x11
000000000003009c	mov	x11, #0xe5b9
00000000000300a0	movk	x11, #0x1ce4, lsl #16
00000000000300a4	movk	x11, #0x476d, lsl #32
00000000000300a8	movk	x11, #0xbf58, lsl #48
00000000000300ac	mov	x12, #0x11eb
00000000000300b0	movk	x12, #0x1331, lsl #16
00000000000300b4	movk	x12, #0x49bb, lsl #32
00000000000300b8	movk	x12, #0x94d0, lsl #48
00000000000300bc	cmp	x8, #0x0
00000000000300c0	csel	x8, x10, x8, eq
00000000000300c4	eor	x8, x8, x8, lsr #30
00000000000300c8	mul	x8, x8, x11
00000000000300cc	eor	x8, x8, x8, lsr #27
00000000000300d0	mul	x8, x8, x12
00000000000300d4	eor	x8, x8, x8, lsr #31
00000000000300d8	subs	x9, x9, #0x1
00000000000300dc	b.ne	0x300bc
00000000000300e0	adr	x19, #0x3b5a0
00000000000300e4	nop
00000000000300e8	str	x8, [x19, #0xb28]
00000000000300ec	add	x0, x19, #0xb40
00000000000300f0	bl	__mi_random_init
00000000000300f4	mov	x0, x19
00000000000300f8	bl	__mi_heap_random_next
00000000000300fc	str	x0, [x19, #0xb30]
0000000000030100	mov	x0, x19
0000000000030104	bl	__mi_heap_random_next
0000000000030108	str	x0, [x19, #0xb38]
000000000003010c	ldp	x29, x30, [sp, #0x10]
0000000000030110	ldp	x20, x19, [sp], #0x20
0000000000030114	ret
__os_random_weak:
0000000000030118	stp	x20, x19, [sp, #-0x20]!
000000000003011c	stp	x29, x30, [sp, #0x10]
0000000000030120	add	x29, sp, #0x10
0000000000030124	adr	x8, #-0xc
0000000000030128	nop
000000000003012c	eor	x19, x0, x8
0000000000030130	bl	0x51a88 ; symbol stub for: _mach_absolute_time
0000000000030134	eor	x0, x19, x0
0000000000030138	eor	w8, w0, w0, lsr #17
000000000003013c	and	x8, x8, #0xf
0000000000030140	add	x8, x8, #0x1
0000000000030144	mov	w9, #0x11
0000000000030148	mov	x10, #0xe5b9
000000000003014c	movk	x10, #0x1ce4, lsl #16
0000000000030150	movk	x10, #0x476d, lsl #32
0000000000030154	movk	x10, #0xbf58, lsl #48
0000000000030158	mov	x11, #0x11eb
000000000003015c	movk	x11, #0x1331, lsl #16
0000000000030160	movk	x11, #0x49bb, lsl #32
0000000000030164	movk	x11, #0x94d0, lsl #48
0000000000030168	cmp	x0, #0x0
000000000003016c	csel	x12, x9, x0, eq
0000000000030170	eor	x12, x12, x12, lsr #30
0000000000030174	mul	x12, x12, x10
0000000000030178	eor	x12, x12, x12, lsr #27
000000000003017c	mul	x12, x12, x11
0000000000030180	eor	x0, x12, x12, lsr #31
0000000000030184	subs	x8, x8, #0x1
0000000000030188	b.ne	0x30168
000000000003018c	ldp	x29, x30, [sp, #0x10]
0000000000030190	ldp	x20, x19, [sp], #0x20
0000000000030194	ret
__mi_random_init:
0000000000030198	sub	sp, sp, #0x40
000000000003019c	stp	x20, x19, [sp, #0x20]
00000000000301a0	stp	x29, x30, [sp, #0x30]
00000000000301a4	add	x29, sp, #0x30
00000000000301a8	mov	x19, x0
00000000000301ac	mov	x0, sp
00000000000301b0	mov	w1, #0x20
00000000000301b4	bl	0x519b0 ; symbol stub for: _arc4random_buf
00000000000301b8	movi.16b	v0, #0x0
00000000000301bc	stp	q0, q0, [x19, #0x20]
00000000000301c0	str	wzr, [x19, #0x80]
00000000000301c4	stp	q0, q0, [x19, #0x60]
00000000000301c8	stp	q0, q0, [x19, #0x40]
00000000000301cc	nop
00000000000301d0	ldr	q0, 0x524f0
00000000000301d4	ldr	q1, [sp]
00000000000301d8	stp	q0, q1, [x19]
00000000000301dc	ldr	w8, [sp, #0x10]
00000000000301e0	str	w8, [x19, #0x20]
00000000000301e4	ldur	x8, [sp, #0x14]
00000000000301e8	stur	x8, [x19, #0x24]
00000000000301ec	ldr	w8, [sp, #0x1c]
00000000000301f0	str	w8, [x19, #0x2c]
00000000000301f4	str	xzr, [x19, #0x30]
00000000000301f8	lsr	x8, x19, #32
00000000000301fc	stp	w19, w8, [x19, #0x38]
0000000000030200	ldp	x29, x30, [sp, #0x30]
0000000000030204	ldp	x20, x19, [sp, #0x20]
0000000000030208	add	sp, sp, #0x40
000000000003020c	ret
__mi_heap_random_next:
0000000000030210	stp	x22, x21, [sp, #-0x30]!
0000000000030214	stp	x20, x19, [sp, #0x10]
0000000000030218	stp	x29, x30, [sp, #0x20]
000000000003021c	add	x29, sp, #0x20
0000000000030220	mov	x19, x0
0000000000030224	add	x20, x0, #0xb40
0000000000030228	ldr	w8, [x0, #0xbc0]
000000000003022c	cmp	w8, #0x0
0000000000030230	b.gt	0x30244
0000000000030234	mov	x0, x20
0000000000030238	bl	_chacha_block
000000000003023c	mov	w8, #0x10
0000000000030240	str	w8, [x19, #0xbc0]
0000000000030244	mov	w22, #0x10
0000000000030248	sub	x8, x22, w8, sxtw
000000000003024c	add	x8, x19, x8, lsl #2
0000000000030250	ldr	w21, [x8, #0xb80]
0000000000030254	str	wzr, [x8, #0xb80]
0000000000030258	ldr	w8, [x19, #0xbc0]
000000000003025c	subs	w8, w8, #0x1
0000000000030260	str	w8, [x19, #0xbc0]
0000000000030264	b.gt	0x30278
0000000000030268	mov	x0, x20
000000000003026c	bl	_chacha_block
0000000000030270	str	w22, [x19, #0xbc0]
0000000000030274	mov	w8, #0x10
0000000000030278	mov	w9, #0x10
000000000003027c	sub	x8, x9, w8, sxtw
0000000000030280	add	x8, x19, x8, lsl #2
0000000000030284	ldr	w0, [x8, #0xb80]
0000000000030288	str	wzr, [x8, #0xb80]
000000000003028c	ldr	w8, [x19, #0xbc0]
0000000000030290	sub	w8, w8, #0x1
0000000000030294	str	w8, [x19, #0xbc0]
0000000000030298	bfi	x0, x21, #32, #32
000000000003029c	ldp	x29, x30, [sp, #0x20]
00000000000302a0	ldp	x20, x19, [sp, #0x10]
00000000000302a4	ldp	x22, x21, [sp], #0x30
00000000000302a8	ret
_mi_process_done:
00000000000302ac	stp	x28, x27, [sp, #-0x60]!
00000000000302b0	stp	x26, x25, [sp, #0x10]
00000000000302b4	stp	x24, x23, [sp, #0x20]
00000000000302b8	stp	x22, x21, [sp, #0x30]
00000000000302bc	stp	x20, x19, [sp, #0x40]
00000000000302c0	stp	x29, x30, [sp, #0x50]
00000000000302c4	add	x29, sp, #0x50
00000000000302c8	sub	sp, sp, #0x230
00000000000302cc	adrp	x8, 86 ; 0x86000
00000000000302d0	ldrb	w8, [x8, #0xa45]
00000000000302d4	cmp	w8, #0x1
00000000000302d8	b.ne	0x308c8
00000000000302dc	adrp	x8, 86 ; 0x86000
00000000000302e0	ldrb	w9, [x8, #0xa49]
00000000000302e4	tbnz	w9, #0x0, 0x308c8
00000000000302e8	mov	w9, #0x1
00000000000302ec	strb	w9, [x8, #0xa49]
00000000000302f0	adrp	x19, 60 ; 0x6c000
00000000000302f4	add	x19, x19, #0xbc8
00000000000302f8	ldr	x20, [x19]
00000000000302fc	mov	x0, x19
0000000000030300	blr	x20
0000000000030304	ldr	x0, [x0]
0000000000030308	mov	w1, #0x1
000000000003030c	bl	_mi_heap_collect_ex
0000000000030310	mov	w0, #0x1
0000000000030314	bl	_mi_option_get
0000000000030318	cbnz	x0, 0x30328
000000000003031c	mov	w0, #0x2
0000000000030320	bl	_mi_option_get
0000000000030324	cbz	x0, 0x308a8
0000000000030328	bl	_mi_thread_init
000000000003032c	mov	x0, x19
0000000000030330	blr	x20
0000000000030334	ldr	x8, [x0]
0000000000030338	ldr	x8, [x8]
000000000003033c	add	x0, x8, #0xb0
0000000000030340	bl	_mi_stats_merge_from
0000000000030344	stp	xzr, xzr, [sp, #0x40]
0000000000030348	nop
000000000003034c	ldr	q0, 0x52500
0000000000030350	stur	q0, [sp, #0x58]
0000000000030354	add	x8, sp, #0x6c
0000000000030358	str	x8, [sp, #0x50]
000000000003035c	adr	x10, #0x26367 ; literal pool for: "count  "
0000000000030360	nop
0000000000030364	adr	x8, #0x26358 ; literal pool for: "unit  "
0000000000030368	nop
000000000003036c	adr	x11, #0x26346 ; literal pool for: "current  "
0000000000030370	nop
0000000000030374	stp	x8, x10, [sp, #0x28]
0000000000030378	adr	x8, #0x26332 ; literal pool for: "freed  "
000000000003037c	nop
0000000000030380	adr	x10, #0x26322 ; literal pool for: "total  "
0000000000030384	nop
0000000000030388	stp	x8, x11, [sp, #0x18]
000000000003038c	adr	x8, #0x2630f ; literal pool for: "peak  "
0000000000030390	nop
0000000000030394	adr	x9, #0x262fc ; literal pool for: "heap stats"
0000000000030398	nop
000000000003039c	stp	x8, x10, [sp, #0x8]
00000000000303a0	str	x9, [sp]
00000000000303a4	add	x1, sp, #0x40
00000000000303a8	adr	x2, #0x262c3 ; literal pool for: "%10s: %10s %10s %10s %10s %10s %10s\n"
00000000000303ac	nop
00000000000303b0	bl	__mi_fprintf
00000000000303b4	adr	x19, #0x56c8c
00000000000303b8	nop
00000000000303bc	add	x0, x19, #0x40
00000000000303c0	adr	x1, #0x2630b ; literal pool for: "reserved"
00000000000303c4	nop
00000000000303c8	add	x3, sp, #0x40
00000000000303cc	mov	w2, #0x1
00000000000303d0	bl	_mi_stat_print
00000000000303d4	add	x0, x19, #0x60
00000000000303d8	adr	x1, #0x262fc ; literal pool for: "committed"
00000000000303dc	nop
00000000000303e0	add	x3, sp, #0x40
00000000000303e4	mov	w2, #0x1
00000000000303e8	bl	_mi_stat_print
00000000000303ec	add	x0, x19, #0x80
00000000000303f0	adr	x1, #0x262ee ; literal pool for: "reset"
00000000000303f4	nop
00000000000303f8	add	x3, sp, #0x40
00000000000303fc	mov	w2, #0x1
0000000000030400	bl	_mi_stat_print
0000000000030404	add	x0, x19, #0xa0
0000000000030408	adr	x1, #0x262dc ; literal pool for: "touched"
000000000003040c	nop
0000000000030410	add	x3, sp, #0x40
0000000000030414	mov	w2, #0x1
0000000000030418	bl	_mi_stat_print
000000000003041c	adr	x1, #0x262d0 ; literal pool for: "segments"
0000000000030420	nop
0000000000030424	add	x3, sp, #0x40
0000000000030428	mov	x0, x19
000000000003042c	mov	x2, #-0x1
0000000000030430	bl	_mi_stat_print
0000000000030434	add	x0, x19, #0xc0
0000000000030438	adr	x20, #0x262bd ; literal pool for: "-abandoned"
000000000003043c	nop
0000000000030440	add	x3, sp, #0x40
0000000000030444	mov	x1, x20
0000000000030448	mov	x2, #-0x1
000000000003044c	bl	_mi_stat_print
0000000000030450	add	x0, x19, #0x1a0
0000000000030454	adr	x1, #0x262ac ; literal pool for: "-cached"
0000000000030458	nop
000000000003045c	add	x3, sp, #0x40
0000000000030460	mov	x2, #-0x1
0000000000030464	bl	_mi_stat_print
0000000000030468	add	x0, x19, #0x20
000000000003046c	adr	x1, #0x2629c ; literal pool for: "pages"
0000000000030470	nop
0000000000030474	add	x3, sp, #0x40
0000000000030478	mov	x2, #-0x1
000000000003047c	bl	_mi_stat_print
0000000000030480	add	x0, x19, #0xe0
0000000000030484	add	x3, sp, #0x40
0000000000030488	mov	x1, x20
000000000003048c	mov	x2, #-0x1
0000000000030490	bl	_mi_stat_print
0000000000030494	add	x0, x19, #0x1c0
0000000000030498	adr	x1, #0x26276 ; literal pool for: "-extended"
000000000003049c	nop
00000000000304a0	add	x2, sp, #0x40
00000000000304a4	bl	_mi_stat_counter_print
00000000000304a8	add	x0, x19, #0x1f0
00000000000304ac	adr	x1, #0x2626c ; literal pool for: "-noretire"
00000000000304b0	nop
00000000000304b4	add	x2, sp, #0x40
00000000000304b8	bl	_mi_stat_counter_print
00000000000304bc	add	x0, x19, #0x1d0
00000000000304c0	adr	x1, #0x26262 ; literal pool for: "mmaps"
00000000000304c4	nop
00000000000304c8	add	x2, sp, #0x40
00000000000304cc	bl	_mi_stat_counter_print
00000000000304d0	add	x0, x19, #0x1e0
00000000000304d4	adr	x1, #0x26254 ; literal pool for: "commits"
00000000000304d8	nop
00000000000304dc	add	x2, sp, #0x40
00000000000304e0	bl	_mi_stat_counter_print
00000000000304e4	add	x0, x19, #0x100
00000000000304e8	adr	x1, #0x26248 ; literal pool for: "threads"
00000000000304ec	nop
00000000000304f0	add	x3, sp, #0x40
00000000000304f4	mov	x2, #-0x1
00000000000304f8	bl	_mi_stat_print
00000000000304fc	ldr	x8, [x19, #0x208]
0000000000030500	cbz	x8, 0x30518
0000000000030504	nop
0000000000030508	ldr	x9, #0x56d38
000000000003050c	add	x9, x9, x9, lsl #2
0000000000030510	lsl	x9, x9, #1
0000000000030514	sdiv	x8, x9, x8
0000000000030518	mov	x9, #0x6666666666666666
000000000003051c	movk	x9, #0x6667
0000000000030520	smulh	x9, x8, x9
0000000000030524	asr	x10, x9, #2
0000000000030528	add	x9, x10, x9, lsr #63
000000000003052c	mov	x10, #-0xa
0000000000030530	madd	x8, x9, x10, x8
0000000000030534	adr	x10, #0x26218 ; literal pool for: "searches"
0000000000030538	nop
000000000003053c	stp	x10, x9, [sp]
0000000000030540	str	x8, [sp, #0x10]
0000000000030544	adr	x2, #0x261f4 ; literal pool for: "%10s: %5ld.%ld avg\n"
0000000000030548	nop
000000000003054c	add	x1, sp, #0x40
0000000000030550	bl	__mi_fprintf
0000000000030554	nop
0000000000030558	ldr	x19, #0x565d8
000000000003055c	cbz	x19, 0x308e8
0000000000030560	adr	x8, #0x26200 ; literal pool for: "numa nodes"
0000000000030564	nop
0000000000030568	stp	x8, x19, [sp]
000000000003056c	adr	x2, #0x261e9 ; literal pool for: "%10s: %7i\n"
0000000000030570	nop
0000000000030574	add	x1, sp, #0x40
0000000000030578	bl	__mi_fprintf
000000000003057c	adr	x20, #0x565cc
0000000000030580	nop
0000000000030584	ldr	x19, [x20, #0x8]
0000000000030588	sub	x0, x29, #0xe0
000000000003058c	mov	x1, #0x0
0000000000030590	bl	0x51a7c ; symbol stub for: _gettimeofday
0000000000030594	ldur	x8, [x29, #-0xe0]
0000000000030598	mov	w21, #0x3e8
000000000003059c	mul	x8, x8, x21
00000000000305a0	ldursw	x9, [x29, #-0xd8]
00000000000305a4	mov	w22, #0x4dd3
00000000000305a8	movk	w22, #0x1062, lsl #16
00000000000305ac	mul	x9, x9, x22
00000000000305b0	lsr	x10, x9, #32
00000000000305b4	lsr	x9, x9, #63
00000000000305b8	add	w9, w9, w10, asr #6
00000000000305bc	ldr	x10, [x20]
00000000000305c0	add	x8, x8, w9, sxtw
00000000000305c4	add	x9, x19, x10
00000000000305c8	sub	x23, x8, x9
00000000000305cc	sub	x1, x29, #0xe0
00000000000305d0	mov	w0, #0x0
00000000000305d4	bl	0x51a70 ; symbol stub for: _getrusage
00000000000305d8	ldur	x8, [x29, #-0xe0]
00000000000305dc	ldursw	x9, [x29, #-0xd8]
00000000000305e0	mul	x8, x8, x21
00000000000305e4	mul	x9, x9, x22
00000000000305e8	lsr	x10, x9, #32
00000000000305ec	lsr	x9, x9, #63
00000000000305f0	add	w9, w9, w10, asr #6
00000000000305f4	add	x24, x8, w9, sxtw
00000000000305f8	ldur	x8, [x29, #-0xd0]
00000000000305fc	ldursw	x9, [x29, #-0xc8]
0000000000030600	mul	x8, x8, x21
0000000000030604	mul	x9, x9, x22
0000000000030608	lsr	x10, x9, #32
000000000003060c	lsr	x9, x9, #63
0000000000030610	add	w9, w9, w10, asr #6
0000000000030614	add	x21, x8, w9, sxtw
0000000000030618	ldur	x22, [x29, #-0x98]
000000000003061c	ldr	x19, [x20, #0x568]
0000000000030620	ldr	xzr, [x20, #0x570]
0000000000030624	ldur	x20, [x29, #-0xc0]
0000000000030628	mov	w8, #0xc
000000000003062c	str	w8, [sp, #0x16c]
0000000000030630	nop
0000000000030634	ldr	x8, #0x27a0c ; literal pool symbol address: _mach_task_self_
0000000000030638	ldr	w0, [x8]
000000000003063c	add	x2, sp, #0x170
0000000000030640	add	x3, sp, #0x16c
0000000000030644	mov	w1, #0x14
0000000000030648	bl	0x51d88 ; symbol stub for: _task_info
000000000003064c	mov	x25, #0xf7cf
0000000000030650	movk	x25, #0xe353, lsl #16
0000000000030654	movk	x25, #0x9ba5, lsl #32
0000000000030658	movk	x25, #0x20c4, lsl #48
000000000003065c	smulh	x8, x23, x25
0000000000030660	asr	x9, x8, #7
0000000000030664	add	x8, x9, x8, lsr #63
0000000000030668	mov	x26, #-0x3e8
000000000003066c	madd	x9, x8, x26, x23
0000000000030670	stp	x8, x9, [sp, #0x8]
0000000000030674	adr	x9, #0x2610b ; literal pool for: "elapsed"
0000000000030678	nop
000000000003067c	str	x9, [sp]
0000000000030680	adr	x2, #0x260eb ; literal pool for: "%10s: %7ld.%03ld s\n"
0000000000030684	nop
0000000000030688	add	x1, sp, #0x40
000000000003068c	bl	__mi_fprintf
0000000000030690	smulh	x8, x24, x25
0000000000030694	asr	x9, x8, #7
0000000000030698	add	x8, x9, x8, lsr #63
000000000003069c	madd	x9, x8, x26, x24
00000000000306a0	smulh	x10, x21, x25
00000000000306a4	asr	x11, x10, #7
00000000000306a8	add	x10, x11, x10, lsr #63
00000000000306ac	madd	x11, x10, x26, x21
00000000000306b0	stp	x11, x22, [sp, #0x20]
00000000000306b4	stp	x9, x10, [sp, #0x10]
00000000000306b8	adr	x9, #0x26110 ; literal pool for: "process"
00000000000306bc	nop
00000000000306c0	stp	x9, x8, [sp]
00000000000306c4	adr	x2, #0x260c3 ; literal pool for: "%10s: user: %ld.%03ld s, system: %ld.%03ld s, faults: %lu, rss: "
00000000000306c8	nop
00000000000306cc	add	x1, sp, #0x40
00000000000306d0	bl	__mi_fprintf
00000000000306d4	cmp	x20, #0x0
00000000000306d8	cneg	x8, x20, mi
00000000000306dc	cmp	x8, #0x3ff
00000000000306e0	b.gt	0x306fc
00000000000306e4	adr	x8, #0x260f3 ; literal pool for: "b"
00000000000306e8	nop
00000000000306ec	stp	x20, x8, [sp]
00000000000306f0	adr	x2, #0x260e0 ; literal pool for: "%d %s "
00000000000306f4	nop
00000000000306f8	b	0x30788
00000000000306fc	adr	x9, #0x260df ; literal pool for: "m"
0000000000030700	nop
0000000000030704	adr	x10, #0x260d5 ; literal pool for: "k"
0000000000030708	nop
000000000003070c	cmp	x8, #0x100, lsl #12
0000000000030710	csel	x9, x10, x9, lt
0000000000030714	mov	w10, #0x100000
0000000000030718	mov	w11, #0x400
000000000003071c	csel	x10, x11, x10, lt
0000000000030720	lsl	x11, x10, #10
0000000000030724	adr	x12, #0x260b9 ; literal pool for: "g"
0000000000030728	nop
000000000003072c	cmp	x8, x11
0000000000030730	csel	x8, x9, x12, lt
0000000000030734	csel	x9, x10, x11, lt
0000000000030738	mov	w10, #0xcccd
000000000003073c	movk	w10, #0xcccc, lsl #16
0000000000030740	mul	x9, x9, x10
0000000000030744	lsr	x9, x9, #35
0000000000030748	sdiv	x9, x20, x9
000000000003074c	mov	x10, #0x6666666666666666
0000000000030750	movk	x10, #0x6667
0000000000030754	smulh	x10, x9, x10
0000000000030758	asr	x11, x10, #2
000000000003075c	add	x10, x11, x10, lsr #63
0000000000030760	mov	x11, #-0xa
0000000000030764	madd	x9, x10, x11, x9
0000000000030768	cmp	x9, #0x0
000000000003076c	cneg	x9, x9, mi
0000000000030770	adr	x11, #0x26067 ; literal pool for: "b"
0000000000030774	nop
0000000000030778	stp	x8, x11, [sp, #0x10]
000000000003077c	stp	x10, x9, [sp]
0000000000030780	adr	x2, #0x2605f ; literal pool for: "%ld.%ld %s%s"
0000000000030784	nop
0000000000030788	sub	x0, x29, #0xe0
000000000003078c	mov	w1, #0x20
0000000000030790	bl	0x51d10 ; symbol stub for: _snprintf
0000000000030794	sub	x8, x29, #0xe0
0000000000030798	str	x8, [sp]
000000000003079c	adr	x2, #0x26188 ; literal pool for: "%s"
00000000000307a0	nop
00000000000307a4	add	x1, sp, #0x40
00000000000307a8	bl	__mi_fprintf
00000000000307ac	cbz	x19, 0x30898
00000000000307b0	adr	x2, #0x2603c ; literal pool for: ", commit: "
00000000000307b4	nop
00000000000307b8	add	x1, sp, #0x40
00000000000307bc	bl	__mi_fprintf
00000000000307c0	cmp	x19, #0x0
00000000000307c4	cneg	x8, x19, mi
00000000000307c8	cmp	x8, #0x3ff
00000000000307cc	b.gt	0x307e8
00000000000307d0	adr	x8, #0x26007 ; literal pool for: "b"
00000000000307d4	nop
00000000000307d8	stp	x19, x8, [sp]
00000000000307dc	adr	x2, #0x25ff4 ; literal pool for: "%d %s "
00000000000307e0	nop
00000000000307e4	b	0x30874
00000000000307e8	adr	x9, #0x25ff3 ; literal pool for: "m"
00000000000307ec	nop
00000000000307f0	adr	x10, #0x25fe9 ; literal pool for: "k"
00000000000307f4	nop
00000000000307f8	cmp	x8, #0x100, lsl #12
00000000000307fc	csel	x9, x10, x9, lt
0000000000030800	mov	w10, #0x100000
0000000000030804	mov	w11, #0x400
0000000000030808	csel	x10, x11, x10, lt
000000000003080c	lsl	x11, x10, #10
0000000000030810	adr	x12, #0x25fcd ; literal pool for: "g"
0000000000030814	nop
0000000000030818	cmp	x8, x11
000000000003081c	csel	x8, x9, x12, lt
0000000000030820	csel	x9, x10, x11, lt
0000000000030824	mov	w10, #0xcccd
0000000000030828	movk	w10, #0xcccc, lsl #16
000000000003082c	mul	x9, x9, x10
0000000000030830	lsr	x9, x9, #35
0000000000030834	sdiv	x9, x19, x9
0000000000030838	mov	x10, #0x6666666666666666
000000000003083c	movk	x10, #0x6667
0000000000030840	smulh	x10, x9, x10
0000000000030844	asr	x11, x10, #2
0000000000030848	add	x10, x11, x10, lsr #63
000000000003084c	mov	x11, #-0xa
0000000000030850	madd	x9, x10, x11, x9
0000000000030854	cmp	x9, #0x0
0000000000030858	cneg	x9, x9, mi
000000000003085c	adr	x11, #0x25f7b ; literal pool for: "b"
0000000000030860	nop
0000000000030864	stp	x8, x11, [sp, #0x10]
0000000000030868	stp	x10, x9, [sp]
000000000003086c	adr	x2, #0x25f73 ; literal pool for: "%ld.%ld %s%s"
0000000000030870	nop
0000000000030874	sub	x0, x29, #0xe0
0000000000030878	mov	w1, #0x20
000000000003087c	bl	0x51d10 ; symbol stub for: _snprintf
0000000000030880	sub	x8, x29, #0xe0
0000000000030884	str	x8, [sp]
0000000000030888	adr	x2, #0x2609c ; literal pool for: "%s"
000000000003088c	nop
0000000000030890	add	x1, sp, #0x40
0000000000030894	bl	__mi_fprintf
0000000000030898	adr	x2, #0x263f2 ; literal pool for: "\n"
000000000003089c	nop
00000000000308a0	add	x1, sp, #0x40
00000000000308a4	bl	__mi_fprintf
00000000000308a8	nop
00000000000308ac	ldr	x8, #0x3b8f4
00000000000308b0	str	x8, [sp]
00000000000308b4	adr	x0, #0x25da2 ; literal pool for: "process done: 0x%zx\n"
00000000000308b8	nop
00000000000308bc	bl	__mi_verbose_message
00000000000308c0	adrp	x8, 86 ; 0x86000
00000000000308c4	strb	wzr, [x8, #0xa46]
00000000000308c8	add	sp, sp, #0x230
00000000000308cc	ldp	x29, x30, [sp, #0x50]
00000000000308d0	ldp	x20, x19, [sp, #0x40]
00000000000308d4	ldp	x22, x21, [sp, #0x30]
00000000000308d8	ldp	x24, x23, [sp, #0x20]
00000000000308dc	ldp	x26, x25, [sp, #0x10]
00000000000308e0	ldp	x28, x27, [sp], #0x60
00000000000308e4	ret
00000000000308e8	adr	x20, #0x56248
00000000000308ec	nop
00000000000308f0	ldar	x19, [x20]
00000000000308f4	cbnz	x19, 0x30560
00000000000308f8	mov	w0, #0xf
00000000000308fc	bl	_mi_option_get
0000000000030900	cmp	x0, #0x1
0000000000030904	csinc	x19, x0, xzr, gt
0000000000030908	stlr	x19, [x20]
000000000003090c	str	x19, [sp]
0000000000030910	adr	x0, #0x259f3 ; literal pool for: "using %zd numa regions\n"
0000000000030914	nop
0000000000030918	bl	__mi_verbose_message
000000000003091c	b	0x30560
_mi_process_init:
0000000000030920	sub	sp, sp, #0xf0
0000000000030924	stp	x28, x27, [sp, #0x90]
0000000000030928	stp	x26, x25, [sp, #0xa0]
000000000003092c	stp	x24, x23, [sp, #0xb0]
0000000000030930	stp	x22, x21, [sp, #0xc0]
0000000000030934	stp	x20, x19, [sp, #0xd0]
0000000000030938	stp	x29, x30, [sp, #0xe0]
000000000003093c	add	x29, sp, #0xe0
0000000000030940	adrp	x8, 86 ; 0x86000
0000000000030944	ldrb	w8, [x8, #0xa45]
0000000000030948	tbnz	w8, #0x0, 0x316ec
000000000003094c	adr	x9, #0x560f9
0000000000030950	nop
0000000000030954	mov	w8, #0x1
0000000000030958	strb	w8, [x9]
000000000003095c	ldrb	w9, [x9, #0x2]
0000000000030960	tbnz	w9, #0x0, 0x309b8
0000000000030964	adrp	x9, 86 ; 0x86000
0000000000030968	strb	w8, [x9, #0xa47]
000000000003096c	adr	x20, #0x3bccc
0000000000030970	nop
0000000000030974	adr	x1, #0xdd8
0000000000030978	nop
000000000003097c	mov	x0, x20
0000000000030980	bl	0x51c5c ; symbol stub for: _pthread_key_create
0000000000030984	adrp	x0, 60 ; 0x6c000
0000000000030988	add	x0, x0, #0xbc8
000000000003098c	ldr	x8, [x0]
0000000000030990	blr	x8
0000000000030994	adr	x8, #0x3acec
0000000000030998	nop
000000000003099c	str	x8, [x0]
00000000000309a0	ldr	x0, [x20]
00000000000309a4	cmn	x0, #0x1
00000000000309a8	b.eq	0x309b8
00000000000309ac	adr	x1, #0x3acd4
00000000000309b0	nop
00000000000309b4	bl	0x51cc8 ; symbol stub for: _pthread_setspecific
00000000000309b8	bl	0x51cb0 ; symbol stub for: _pthread_self
00000000000309bc	bl	0x51c68 ; symbol stub for: _pthread_mach_thread_np
00000000000309c0	mov	w8, w0
00000000000309c4	str	x8, [sp]
00000000000309c8	adr	x0, #0x25763 ; literal pool for: "process init: 0x%zx\n"
00000000000309cc	nop
00000000000309d0	bl	__mi_verbose_message
00000000000309d4	mov	w0, #0x1d
00000000000309d8	bl	0x51d7c ; symbol stub for: _sysconf
00000000000309dc	cmp	x0, #0x1
00000000000309e0	b.lt	0x309ec
00000000000309e4	adrp	x8, 60 ; 0x6c000
00000000000309e8	str	x0, [x8, #0x640]
00000000000309ec	adrp	x8, 86 ; 0x86000
00000000000309f0	mov	w9, #0x1
00000000000309f4	strb	w9, [x8, #0xa48]
00000000000309f8	nop
00000000000309fc	ldr	x8, #0x3b7ac
0000000000030a00	cbnz	x8, 0x30ab4
0000000000030a04	bl	0x51cb0 ; symbol stub for: _pthread_self
0000000000030a08	bl	0x51c68 ; symbol stub for: _pthread_mach_thread_np
0000000000030a0c	mov	w8, w0
0000000000030a10	adrp	x9, 60 ; 0x6c000
0000000000030a14	str	x8, [x9, #0x1a0]
0000000000030a18	bl	0x51a88 ; symbol stub for: _mach_absolute_time
0000000000030a1c	adr	x8, #-0x904
0000000000030a20	nop
0000000000030a24	adr	x9, #-0x9ec
0000000000030a28	nop
0000000000030a2c	eor	x8, x9, x8
0000000000030a30	eor	x8, x0, x8
0000000000030a34	eor	w9, w8, w8, lsr #17
0000000000030a38	and	x9, x9, #0xf
0000000000030a3c	add	x9, x9, #0x1
0000000000030a40	mov	w10, #0x11
0000000000030a44	mov	x11, #0xe5b9
0000000000030a48	movk	x11, #0x1ce4, lsl #16
0000000000030a4c	movk	x11, #0x476d, lsl #32
0000000000030a50	movk	x11, #0xbf58, lsl #48
0000000000030a54	mov	x12, #0x11eb
0000000000030a58	movk	x12, #0x1331, lsl #16
0000000000030a5c	movk	x12, #0x49bb, lsl #32
0000000000030a60	movk	x12, #0x94d0, lsl #48
0000000000030a64	cmp	x8, #0x0
0000000000030a68	csel	x8, x10, x8, eq
0000000000030a6c	eor	x8, x8, x8, lsr #30
0000000000030a70	mul	x8, x8, x11
0000000000030a74	eor	x8, x8, x8, lsr #27
0000000000030a78	mul	x8, x8, x12
0000000000030a7c	eor	x8, x8, x8, lsr #31
0000000000030a80	subs	x9, x9, #0x1
0000000000030a84	b.ne	0x30a64
0000000000030a88	adr	x20, #0x3abf8
0000000000030a8c	nop
0000000000030a90	str	x8, [x20, #0xb28]
0000000000030a94	add	x0, x20, #0xb40
0000000000030a98	bl	__mi_random_init
0000000000030a9c	mov	x0, x20
0000000000030aa0	bl	__mi_heap_random_next
0000000000030aa4	str	x0, [x20, #0xb30]
0000000000030aa8	mov	x0, x20
0000000000030aac	bl	__mi_heap_random_next
0000000000030ab0	str	x0, [x20, #0xb38]
0000000000030ab4	str	xzr, [sp]
0000000000030ab8	adr	x0, #0x25688 ; literal pool for: "secure level: %d\n"
0000000000030abc	nop
0000000000030ac0	bl	__mi_verbose_message
0000000000030ac4	bl	_mi_thread_init
0000000000030ac8	bl	_mi_thread_init
0000000000030acc	adrp	x0, 60 ; 0x6c000
0000000000030ad0	add	x0, x0, #0xbc8
0000000000030ad4	ldr	x8, [x0]
0000000000030ad8	str	x8, [sp, #0x70]
0000000000030adc	blr	x8
0000000000030ae0	ldr	x8, [x0]
0000000000030ae4	ldr	x8, [x8]
0000000000030ae8	add	x0, x8, #0xb0
0000000000030aec	adr	x8, #0x56554
0000000000030af0	nop
0000000000030af4	cmp	x0, x8
0000000000030af8	b.eq	0x30b04
0000000000030afc	mov	w1, #0x240
0000000000030b00	bl	0x519d4 ; symbol stub for: _bzero
0000000000030b04	adr	x19, #0x5604c
0000000000030b08	nop
0000000000030b0c	add	x0, x19, #0x4f0
0000000000030b10	mov	w1, #0x240
0000000000030b14	bl	0x519d4 ; symbol stub for: _bzero
0000000000030b18	ldr	x8, [x19]
0000000000030b1c	cbnz	x8, 0x30bdc
0000000000030b20	adrp	x19, 86 ; 0x86000
0000000000030b24	ldr	x8, [x19, #0xb48]
0000000000030b28	cbnz	x8, 0x30b9c
0000000000030b2c	sub	x0, x29, #0x60
0000000000030b30	mov	x1, #0x0
0000000000030b34	bl	0x51a7c ; symbol stub for: _gettimeofday
0000000000030b38	ldur	x20, [x29, #-0x60]
0000000000030b3c	ldursw	x8, [x29, #-0x58]
0000000000030b40	mov	x9, #-0x4dd3
0000000000030b44	movk	x9, #0xef9d, lsl #16
0000000000030b48	mul	x8, x8, x9
0000000000030b4c	lsr	x9, x8, #63
0000000000030b50	asr	x8, x8, #38
0000000000030b54	add	w21, w8, w9
0000000000030b58	sub	x0, x29, #0x60
0000000000030b5c	mov	x1, #0x0
0000000000030b60	bl	0x51a7c ; symbol stub for: _gettimeofday
0000000000030b64	ldur	x8, [x29, #-0x60]
0000000000030b68	ldursw	x9, [x29, #-0x58]
0000000000030b6c	mov	w10, #0x4dd3
0000000000030b70	movk	w10, #0x1062, lsl #16
0000000000030b74	mul	x9, x9, x10
0000000000030b78	lsr	x10, x9, #63
0000000000030b7c	asr	x9, x9, #38
0000000000030b80	add	w9, w9, w10
0000000000030b84	sub	x8, x8, x20
0000000000030b88	mov	w10, #0x3e8
0000000000030b8c	mul	x8, x8, x10
0000000000030b90	add	w9, w9, w21
0000000000030b94	add	x8, x8, w9, sxtw
0000000000030b98	str	x8, [x19, #0xb48]
0000000000030b9c	sub	x0, x29, #0x60
0000000000030ba0	mov	x1, #0x0
0000000000030ba4	bl	0x51a7c ; symbol stub for: _gettimeofday
0000000000030ba8	ldur	x8, [x29, #-0x60]
0000000000030bac	mov	w9, #0x3e8
0000000000030bb0	mul	x8, x8, x9
0000000000030bb4	ldursw	x9, [x29, #-0x58]
0000000000030bb8	mov	w10, #0x4dd3
0000000000030bbc	movk	w10, #0x1062, lsl #16
0000000000030bc0	mul	x9, x9, x10
0000000000030bc4	lsr	x10, x9, #63
0000000000030bc8	asr	x9, x9, #38
0000000000030bcc	add	w9, w9, w10
0000000000030bd0	add	x8, x8, w9, sxtw
0000000000030bd4	adrp	x9, 86 ; 0x86000
0000000000030bd8	str	x8, [x9, #0xb50]
0000000000030bdc	mov	w0, #0x7
0000000000030be0	bl	_mi_option_get
0000000000030be4	cbz	x0, 0x314f8
0000000000030be8	mov	w0, #0x7
0000000000030bec	bl	_mi_option_get
0000000000030bf0	cbz	x0, 0x314f8
0000000000030bf4	mov	x25, x0
0000000000030bf8	mov	w8, #0x1f4
0000000000030bfc	mul	x19, x0, x8
0000000000030c00	nop
0000000000030c04	ldr	x20, #0x55f2c
0000000000030c08	cbz	x20, 0x3170c
0000000000030c0c	mov	x26, #0x0
0000000000030c10	cmp	x20, #0x0
0000000000030c14	csinc	x9, x20, xzr, ne
0000000000030c18	adr	x28, #0x55f28
0000000000030c1c	nop
0000000000030c20	adr	x21, #0x56498
0000000000030c24	nop
0000000000030c28	adr	x20, #0x56478
0000000000030c2c	nop
0000000000030c30	adr	x22, #0x56468
0000000000030c34	nop
0000000000030c38	adr	x23, #0x56448
0000000000030c3c	nop
0000000000030c40	udiv	x10, x25, x9
0000000000030c44	udiv	x8, x19, x9
0000000000030c48	str	x9, [sp, #0x20]
0000000000030c4c	msub	x9, x10, x9, x25
0000000000030c50	stp	x9, x10, [sp, #0x28]
0000000000030c54	add	x8, x8, #0x32
0000000000030c58	cmp	x19, #0x0
0000000000030c5c	csel	x8, xzr, x8, eq
0000000000030c60	lsl	x9, x8, #1
0000000000030c64	str	x8, [sp, #0x68]
0000000000030c68	add	x8, x8, #0x1
0000000000030c6c	stp	x8, x9, [sp, #0x50]
0000000000030c70	mov	w19, #0x40000000
0000000000030c74	b	0x30ca8
0000000000030c78	adr	x9, #0x55dc8
0000000000030c7c	nop
0000000000030c80	add	x8, x9, x8, lsl #3
0000000000030c84	add	x8, x8, #0x400
0000000000030c88	stlr	x0, [x8]
0000000000030c8c	ldur	x8, [x29, #-0x68]
0000000000030c90	subs	x8, x25, x8
0000000000030c94	csel	x25, xzr, x8, lo
0000000000030c98	add	x26, x26, #0x1
0000000000030c9c	ldr	x8, [sp, #0x20]
0000000000030ca0	ccmp	x26, x8, #0x2, hi
0000000000030ca4	b.hs	0x314f8
0000000000030ca8	ldr	x8, [sp, #0x28]
0000000000030cac	cmp	x26, x8
0000000000030cb0	ldr	x8, [sp, #0x30]
0000000000030cb4	cinc	x8, x8, lo
0000000000030cb8	stur	x8, [x29, #-0x68]
0000000000030cbc	cbz	x8, 0x30c8c
0000000000030cc0	stp	x26, x25, [sp, #0x38]
0000000000030cc4	tbnz	w26, #0x1f, 0x30ce4
0000000000030cc8	nop
0000000000030ccc	ldr	x24, #0x55e64
0000000000030cd0	cbz	x24, 0x3135c
0000000000030cd4	and	x8, x26, #0xffffffff
0000000000030cd8	udiv	x9, x8, x24
0000000000030cdc	msub	w8, w9, w24, w8
0000000000030ce0	b	0x30ce8
0000000000030ce4	mov	w8, #-0x1
0000000000030ce8	str	x8, [sp, #0x48]
0000000000030cec	ldur	x8, [x29, #-0x68]
0000000000030cf0	lsl	x24, x8, #30
0000000000030cf4	nop
0000000000030cf8	ldr	x26, #0x55e48
0000000000030cfc	b	0x30d10
0000000000030d00	mov	w9, #0x0
0000000000030d04	clrex
0000000000030d08	mov	x26, x8
0000000000030d0c	cbnz	w9, 0x30d60
0000000000030d10	mov	x25, x26
0000000000030d14	cbnz	x26, 0x30d3c
0000000000030d18	adrp	x0, 60 ; 0x6c000
0000000000030d1c	add	x0, x0, #0xbc8
0000000000030d20	ldr	x8, [sp, #0x70]
0000000000030d24	blr	x8
0000000000030d28	ldr	x0, [x0]
0000000000030d2c	bl	__mi_heap_random_next
0000000000030d30	lsr	x8, x0, #17
0000000000030d34	mov	x25, #0x200000000000
0000000000030d38	bfi	x25, x8, #30, #12
0000000000030d3c	add	x9, x25, x24
0000000000030d40	ldaxr	x8, [x28]
0000000000030d44	cmp	x8, x26
0000000000030d48	b.ne	0x30d00
0000000000030d4c	stlxr	w10, x9, [x28]
0000000000030d50	cbnz	w10, 0x30d40
0000000000030d54	mov	w9, #0x1
0000000000030d58	mov	x26, x8
0000000000030d5c	cbz	w9, 0x30d10
0000000000030d60	nop
0000000000030d64	ldr	x8, #0x55de4
0000000000030d68	cbz	x8, 0x30f80
0000000000030d6c	sub	x0, x29, #0x60
0000000000030d70	mov	x1, #0x0
0000000000030d74	bl	0x51a7c ; symbol stub for: _gettimeofday
0000000000030d78	ldr	x8, [sp, #0x68]
0000000000030d7c	cmp	x8, #0x0
0000000000030d80	b.le	0x3100c
0000000000030d84	mov	x24, #0x0
0000000000030d88	ldur	x8, [x29, #-0x60]
0000000000030d8c	mov	w9, #0x3e8
0000000000030d90	mul	x8, x8, x9
0000000000030d94	ldursw	x9, [x29, #-0x58]
0000000000030d98	mov	w10, #0x4dd3
0000000000030d9c	movk	w10, #0x1062, lsl #16
0000000000030da0	mul	x9, x9, x10
0000000000030da4	lsr	x10, x9, #63
0000000000030da8	asr	x9, x9, #38
0000000000030dac	add	w9, w9, w10
0000000000030db0	add	x8, x8, w9, sxtw
0000000000030db4	str	x8, [sp, #0x60]
0000000000030db8	add	x27, x25, x24, lsl #30
0000000000030dbc	mov	w0, #0x11
0000000000030dc0	bl	_mi_option_get
0000000000030dc4	sub	w8, w0, #0x64
0000000000030dc8	adr	x9, #0x55d60
0000000000030dcc	nop
0000000000030dd0	ldar	xzr, [x9]
0000000000030dd4	mov	w9, #0x20000
0000000000030dd8	bfi	w9, w0, #24, #8
0000000000030ddc	cmp	w8, #0x9b
0000000000030de0	mov	w8, #0x64020000
0000000000030de4	csel	w4, w8, w9, hi
0000000000030de8	mov	x0, x27
0000000000030dec	mov	w1, #0x40000000
0000000000030df0	mov	w2, #0x3
0000000000030df4	mov	w3, #0x1002
0000000000030df8	mov	x5, #0x0
0000000000030dfc	bl	0x51adc ; symbol stub for: _mmap
0000000000030e00	cmn	x0, #0x1
0000000000030e04	csel	x26, xzr, x0, eq
0000000000030e08	cmp	x26, x27
0000000000030e0c	b.ne	0x31160
0000000000030e10	adr	x13, #0x56280
0000000000030e14	nop
0000000000030e18	ldxr	x8, [x21]
0000000000030e1c	add	x9, x8, x19
0000000000030e20	stxr	w10, x9, [x21]
0000000000030e24	cbnz	w10, 0x30e18
0000000000030e28	add	x8, x8, x19
0000000000030e2c	nop
0000000000030e30	ldr	x10, #0x56280
0000000000030e34	adr	x12, #0x5627c
0000000000030e38	nop
0000000000030e3c	b	0x30e50
0000000000030e40	clrex
0000000000030e44	mov	w11, #0x0
0000000000030e48	mov	x10, x9
0000000000030e4c	cbnz	w11, 0x30e78
0000000000030e50	cmp	x10, x8
0000000000030e54	b.ge	0x30e78
0000000000030e58	ldxr	x9, [x12]
0000000000030e5c	cmp	x9, x10
0000000000030e60	b.ne	0x30e40
0000000000030e64	stlxr	w10, x8, [x12]
0000000000030e68	cbnz	w10, 0x30e44
0000000000030e6c	mov	w11, #0x1
0000000000030e70	mov	x10, x9
0000000000030e74	cbz	w11, 0x30e50
0000000000030e78	ldxr	x8, [x20]
0000000000030e7c	add	x8, x8, x19
0000000000030e80	stxr	w9, x8, [x20]
0000000000030e84	cbnz	w9, 0x30e78
0000000000030e88	ldxr	x8, [x22]
0000000000030e8c	add	x9, x8, x19
0000000000030e90	stxr	w10, x9, [x22]
0000000000030e94	cbnz	w10, 0x30e88
0000000000030e98	add	x8, x8, x19
0000000000030e9c	nop
0000000000030ea0	ldr	x10, #0x561f0
0000000000030ea4	b	0x30eb8
0000000000030ea8	clrex
0000000000030eac	mov	w11, #0x0
0000000000030eb0	mov	x10, x9
0000000000030eb4	cbnz	w11, 0x30ee0
0000000000030eb8	cmp	x10, x8
0000000000030ebc	b.ge	0x30ee0
0000000000030ec0	ldxr	x9, [x13]
0000000000030ec4	cmp	x9, x10
0000000000030ec8	b.ne	0x30ea8
0000000000030ecc	stlxr	w10, x8, [x13]
0000000000030ed0	cbnz	w10, 0x30eac
0000000000030ed4	mov	w11, #0x1
0000000000030ed8	mov	x10, x9
0000000000030edc	cbz	w11, 0x30eb8
0000000000030ee0	ldxr	x8, [x23]
0000000000030ee4	add	x8, x8, x19
0000000000030ee8	stxr	w9, x8, [x23]
0000000000030eec	cbnz	w9, 0x30ee0
0000000000030ef0	sub	x0, x29, #0x60
0000000000030ef4	mov	x1, #0x0
0000000000030ef8	bl	0x51a7c ; symbol stub for: _gettimeofday
0000000000030efc	ldur	x8, [x29, #-0x60]
0000000000030f00	mov	w9, #0x3e8
0000000000030f04	mul	x8, x8, x9
0000000000030f08	ldursw	x9, [x29, #-0x58]
0000000000030f0c	mov	w10, #0x4dd3
0000000000030f10	movk	w10, #0x1062, lsl #16
0000000000030f14	mul	x9, x9, x10
0000000000030f18	lsr	x10, x9, #63
0000000000030f1c	asr	x9, x9, #38
0000000000030f20	add	w9, w9, w10
0000000000030f24	nop
0000000000030f28	ldr	x10, #0x55c20
0000000000030f2c	add	x8, x8, w9, sxtw
0000000000030f30	ldr	x9, [sp, #0x60]
0000000000030f34	add	x9, x10, x9
0000000000030f38	sub	x8, x8, x9
0000000000030f3c	cbz	x24, 0x30f60
0000000000030f40	add	x9, x24, #0x1
0000000000030f44	udiv	x9, x8, x9
0000000000030f48	ldur	x10, [x29, #-0x68]
0000000000030f4c	mul	x9, x9, x10
0000000000030f50	ldr	x10, [sp, #0x58]
0000000000030f54	cmp	x9, x10
0000000000030f58	ldr	x9, [sp, #0x50]
0000000000030f5c	csel	x8, x9, x8, gt
0000000000030f60	ldr	x9, [sp, #0x68]
0000000000030f64	cmp	x8, x9
0000000000030f68	b.gt	0x31298
0000000000030f6c	add	x24, x24, #0x1
0000000000030f70	ldur	x8, [x29, #-0x68]
0000000000030f74	cmp	x24, x8
0000000000030f78	b.ne	0x30db8
0000000000030f7c	b	0x31158
0000000000030f80	sub	x0, x29, #0x60
0000000000030f84	mov	x1, #0x0
0000000000030f88	bl	0x51a7c ; symbol stub for: _gettimeofday
0000000000030f8c	ldur	x24, [x29, #-0x60]
0000000000030f90	ldursw	x8, [x29, #-0x58]
0000000000030f94	mov	x9, #-0x4dd3
0000000000030f98	movk	x9, #0xef9d, lsl #16
0000000000030f9c	mul	x8, x8, x9
0000000000030fa0	lsr	x9, x8, #63
0000000000030fa4	asr	x8, x8, #38
0000000000030fa8	add	w26, w8, w9
0000000000030fac	sub	x0, x29, #0x60
0000000000030fb0	mov	x1, #0x0
0000000000030fb4	bl	0x51a7c ; symbol stub for: _gettimeofday
0000000000030fb8	ldur	x8, [x29, #-0x60]
0000000000030fbc	ldursw	x9, [x29, #-0x58]
0000000000030fc0	mov	w10, #0x4dd3
0000000000030fc4	movk	w10, #0x1062, lsl #16
0000000000030fc8	mul	x9, x9, x10
0000000000030fcc	lsr	x10, x9, #63
0000000000030fd0	asr	x9, x9, #38
0000000000030fd4	add	w9, w9, w10
0000000000030fd8	sub	x8, x8, x24
0000000000030fdc	mov	w10, #0x3e8
0000000000030fe0	mul	x8, x8, x10
0000000000030fe4	add	w9, w9, w26
0000000000030fe8	add	x8, x8, w9, sxtw
0000000000030fec	adrp	x9, 86 ; 0x86000
0000000000030ff0	str	x8, [x9, #0xb48]
0000000000030ff4	sub	x0, x29, #0x60
0000000000030ff8	mov	x1, #0x0
0000000000030ffc	bl	0x51a7c ; symbol stub for: _gettimeofday
0000000000031000	ldr	x8, [sp, #0x68]
0000000000031004	cmp	x8, #0x0
0000000000031008	b.gt	0x30d84
000000000003100c	mov	x24, #0x0
0000000000031010	add	x27, x25, x24, lsl #30
0000000000031014	mov	w0, #0x11
0000000000031018	bl	_mi_option_get
000000000003101c	sub	w8, w0, #0x64
0000000000031020	adr	x9, #0x55b08
0000000000031024	nop
0000000000031028	ldar	xzr, [x9]
000000000003102c	mov	w9, #0x20000
0000000000031030	bfi	w9, w0, #24, #8
0000000000031034	cmp	w8, #0x9b
0000000000031038	mov	w8, #0x64020000
000000000003103c	csel	w4, w8, w9, hi
0000000000031040	mov	x0, x27
0000000000031044	mov	w1, #0x40000000
0000000000031048	mov	w2, #0x3
000000000003104c	mov	w3, #0x1002
0000000000031050	mov	x5, #0x0
0000000000031054	bl	0x51adc ; symbol stub for: _mmap
0000000000031058	cmn	x0, #0x1
000000000003105c	csel	x26, xzr, x0, eq
0000000000031060	cmp	x26, x27
0000000000031064	b.ne	0x31160
0000000000031068	ldxr	x8, [x21]
000000000003106c	add	x9, x8, x19
0000000000031070	stxr	w10, x9, [x21]
0000000000031074	cbnz	w10, 0x31068
0000000000031078	add	x8, x8, x19
000000000003107c	nop
0000000000031080	ldr	x10, #0x56030
0000000000031084	adr	x12, #0x5602c
0000000000031088	nop
000000000003108c	adr	x13, #0x56004
0000000000031090	nop
0000000000031094	b	0x310a8
0000000000031098	clrex
000000000003109c	mov	w11, #0x0
00000000000310a0	mov	x10, x9
00000000000310a4	cbnz	w11, 0x310d0
00000000000310a8	cmp	x10, x8
00000000000310ac	b.ge	0x310d0
00000000000310b0	ldxr	x9, [x12]
00000000000310b4	cmp	x9, x10
00000000000310b8	b.ne	0x31098
00000000000310bc	stlxr	w10, x8, [x12]
00000000000310c0	cbnz	w10, 0x3109c
00000000000310c4	mov	w11, #0x1
00000000000310c8	mov	x10, x9
00000000000310cc	cbz	w11, 0x310a8
00000000000310d0	ldxr	x8, [x20]
00000000000310d4	add	x8, x8, x19
00000000000310d8	stxr	w9, x8, [x20]
00000000000310dc	cbnz	w9, 0x310d0
00000000000310e0	ldxr	x8, [x22]
00000000000310e4	add	x9, x8, x19
00000000000310e8	stxr	w10, x9, [x22]
00000000000310ec	cbnz	w10, 0x310e0
00000000000310f0	add	x8, x8, x19
00000000000310f4	nop
00000000000310f8	ldr	x10, #0x55f98
00000000000310fc	b	0x31110
0000000000031100	clrex
0000000000031104	mov	w11, #0x0
0000000000031108	mov	x10, x9
000000000003110c	cbnz	w11, 0x31138
0000000000031110	cmp	x10, x8
0000000000031114	b.ge	0x31138
0000000000031118	ldxr	x9, [x13]
000000000003111c	cmp	x9, x10
0000000000031120	b.ne	0x31100
0000000000031124	stlxr	w10, x8, [x13]
0000000000031128	cbnz	w10, 0x31104
000000000003112c	mov	w11, #0x1
0000000000031130	mov	x10, x9
0000000000031134	cbz	w11, 0x31110
0000000000031138	ldxr	x8, [x23]
000000000003113c	add	x8, x8, x19
0000000000031140	stxr	w9, x8, [x23]
0000000000031144	cbnz	w9, 0x31138
0000000000031148	add	x24, x24, #0x1
000000000003114c	ldur	x8, [x29, #-0x68]
0000000000031150	cmp	x24, x8
0000000000031154	b.ne	0x31010
0000000000031158	ldur	x24, [x29, #-0x68]
000000000003115c	b	0x312a4
0000000000031160	cbz	x26, 0x312a4
0000000000031164	stp	x24, x27, [sp]
0000000000031168	adr	x0, #0x25148 ; literal pool for: "could not allocate contiguous huge page %zu at %p\n"
000000000003116c	nop
0000000000031170	bl	__mi_warning_message
0000000000031174	mov	x0, x26
0000000000031178	mov	w1, #0x40000000
000000000003117c	bl	0x51af4 ; symbol stub for: _munmap
0000000000031180	mov	x10, #-0x40000000
0000000000031184	ldxr	x8, [x21]
0000000000031188	add	x8, x8, x10
000000000003118c	stxr	w9, x8, [x21]
0000000000031190	cbnz	w9, 0x31184
0000000000031194	nop
0000000000031198	ldr	x10, #0x55f18
000000000003119c	adr	x12, #0x55f14
00000000000311a0	nop
00000000000311a4	adr	x13, #0x55eec
00000000000311a8	nop
00000000000311ac	b	0x311c0
00000000000311b0	clrex
00000000000311b4	mov	w11, #0x0
00000000000311b8	mov	x10, x9
00000000000311bc	cbnz	w11, 0x311e8
00000000000311c0	cmp	x10, x8
00000000000311c4	b.ge	0x311e8
00000000000311c8	ldxr	x9, [x12]
00000000000311cc	cmp	x9, x10
00000000000311d0	b.ne	0x311b0
00000000000311d4	stlxr	w10, x8, [x12]
00000000000311d8	cbnz	w10, 0x311b4
00000000000311dc	mov	w11, #0x1
00000000000311e0	mov	x10, x9
00000000000311e4	cbz	w11, 0x311c0
00000000000311e8	adr	x10, #0x55ec0
00000000000311ec	nop
00000000000311f0	ldxr	x8, [x10]
00000000000311f4	add	x8, x8, x19
00000000000311f8	stxr	w9, x8, [x10]
00000000000311fc	cbnz	w9, 0x311f0
0000000000031200	mov	x10, #-0x40000000
0000000000031204	ldxr	x8, [x22]
0000000000031208	add	x8, x8, x10
000000000003120c	stxr	w9, x8, [x22]
0000000000031210	cbnz	w9, 0x31204
0000000000031214	nop
0000000000031218	ldr	x10, #0x55e78
000000000003121c	b	0x31230
0000000000031220	clrex
0000000000031224	mov	w11, #0x0
0000000000031228	mov	x10, x9
000000000003122c	cbnz	w11, 0x31258
0000000000031230	cmp	x10, x8
0000000000031234	b.ge	0x31258
0000000000031238	ldxr	x9, [x13]
000000000003123c	cmp	x9, x10
0000000000031240	b.ne	0x31220
0000000000031244	stlxr	w10, x8, [x13]
0000000000031248	cbnz	w10, 0x31224
000000000003124c	mov	w11, #0x1
0000000000031250	mov	x10, x9
0000000000031254	cbz	w11, 0x31230
0000000000031258	adr	x10, #0x55e30
000000000003125c	nop
0000000000031260	ldxr	x8, [x10]
0000000000031264	add	x8, x8, x19
0000000000031268	stxr	w9, x8, [x10]
000000000003126c	cbnz	w9, 0x31260
0000000000031270	cmn	w0, #0x1
0000000000031274	b.ne	0x312a4
0000000000031278	bl	0x51980 ; symbol stub for: ___error
000000000003127c	ldr	w0, [x0]
0000000000031280	bl	0x51d28 ; symbol stub for: _strerror
0000000000031284	stp	x26, x19, [sp, #0x8]
0000000000031288	str	x0, [sp]
000000000003128c	adr	x0, #0x24f15 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
0000000000031290	nop
0000000000031294	b	0x312a0
0000000000031298	adr	x0, #0x2504b ; literal pool for: "huge page allocation timed out\n"
000000000003129c	nop
00000000000312a0	bl	__mi_warning_message
00000000000312a4	cmp	x24, #0x0
00000000000312a8	csel	x8, xzr, x25, eq
00000000000312ac	ldr	x26, [sp, #0x48]
00000000000312b0	str	x8, [sp, #0x60]
00000000000312b4	cbz	x8, 0x3139c
00000000000312b8	cbz	x24, 0x3139c
00000000000312bc	ldur	x8, [x29, #-0x68]
00000000000312c0	stp	x24, x8, [sp, #0x8]
00000000000312c4	str	x26, [sp]
00000000000312c8	adr	x0, #0x24fa4 ; literal pool for: "numa node %i: reserved %zu gb huge pages (of the %zu gb requested)\n"
00000000000312cc	nop
00000000000312d0	bl	__mi_verbose_message
00000000000312d4	lsl	x27, x24, #6
00000000000312d8	and	x25, x27, #0xffffffffc0
00000000000312dc	lsr	x8, x25, #2
00000000000312e0	add	x0, x8, #0x40
00000000000312e4	bl	__mi_os_alloc
00000000000312e8	cbz	x0, 0x313b4
00000000000312ec	ubfx	x8, x27, #6, #34
00000000000312f0	stp	x25, x8, [x0, #0x8]
00000000000312f4	ldr	x9, [sp, #0x60]
00000000000312f8	stlr	x9, [x0]
00000000000312fc	str	w26, [x0, #0x18]
0000000000031300	mov	w9, #0x1
0000000000031304	strb	w9, [x0, #0x1e]
0000000000031308	mov	w9, #0x101
000000000003130c	strh	w9, [x0, #0x1c]
0000000000031310	add	x9, x0, #0x20
0000000000031314	stlr	xzr, [x9]
0000000000031318	add	x8, x0, x8, lsl #3
000000000003131c	add	x8, x8, #0x38
0000000000031320	stp	x8, xzr, [x0, #0x28]
0000000000031324	adr	x11, #0x557dc
0000000000031328	nop
000000000003132c	ldaxr	x8, [x11]
0000000000031330	add	x9, x8, #0x1
0000000000031334	stlxr	w10, x9, [x11]
0000000000031338	cbnz	w10, 0x3132c
000000000003133c	cmp	x8, #0x40
0000000000031340	ldp	x26, x25, [sp, #0x38]
0000000000031344	b.lo	0x30c78
0000000000031348	ldaxr	x8, [x11]
000000000003134c	sub	x8, x8, #0x1
0000000000031350	stlxr	w9, x8, [x11]
0000000000031354	cbnz	w9, 0x31348
0000000000031358	b	0x30c8c
000000000003135c	adr	x8, #0x557d4
0000000000031360	nop
0000000000031364	ldar	x24, [x8]
0000000000031368	cbnz	x24, 0x30cd4
000000000003136c	mov	w0, #0xf
0000000000031370	bl	_mi_option_get
0000000000031374	cmp	x0, #0x1
0000000000031378	csinc	x24, x0, xzr, gt
000000000003137c	adr	x8, #0x557b4
0000000000031380	nop
0000000000031384	stlr	x24, [x8]
0000000000031388	str	x24, [sp]
000000000003138c	adr	x0, #0x24f77 ; literal pool for: "using %zd numa regions\n"
0000000000031390	nop
0000000000031394	bl	__mi_verbose_message
0000000000031398	b	0x30cd4
000000000003139c	ldur	x8, [x29, #-0x68]
00000000000313a0	str	x8, [sp]
00000000000313a4	adr	x0, #0x24ea3 ; literal pool for: "failed to reserve %zu gb huge pages\n"
00000000000313a8	nop
00000000000313ac	bl	__mi_warning_message
00000000000313b0	b	0x314f8
00000000000313b4	lsl	x19, x24, #30
00000000000313b8	adr	x25, #0x55cf8
00000000000313bc	nop
00000000000313c0	adr	x27, #0x55cd0
00000000000313c4	nop
00000000000313c8	ldr	x26, [sp, #0x60]
00000000000313cc	cbz	x19, 0x314f8
00000000000313d0	mov	w23, #0x40000000
00000000000313d4	mov	x24, #-0x40000000
00000000000313d8	adr	x20, #0x24dc9 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
00000000000313dc	nop
00000000000313e0	b	0x313ec
00000000000313e4	adds	x19, x19, x24
00000000000313e8	b.eq	0x314f8
00000000000313ec	mov	x0, x26
00000000000313f0	mov	w1, #0x40000000
00000000000313f4	bl	0x51af4 ; symbol stub for: _munmap
00000000000313f8	ldxr	x8, [x21]
00000000000313fc	add	x8, x8, x24
0000000000031400	stxr	w9, x8, [x21]
0000000000031404	cbnz	w9, 0x313f8
0000000000031408	nop
000000000003140c	ldr	x10, #0x55ca4
0000000000031410	b	0x31424
0000000000031414	clrex
0000000000031418	mov	w11, #0x0
000000000003141c	mov	x10, x9
0000000000031420	cbnz	w11, 0x3144c
0000000000031424	cmp	x10, x8
0000000000031428	b.ge	0x3144c
000000000003142c	ldxr	x9, [x25]
0000000000031430	cmp	x9, x10
0000000000031434	b.ne	0x31414
0000000000031438	stlxr	w10, x8, [x25]
000000000003143c	cbnz	w10, 0x31418
0000000000031440	mov	w11, #0x1
0000000000031444	mov	x10, x9
0000000000031448	cbz	w11, 0x31424
000000000003144c	adr	x10, #0x55c5c
0000000000031450	nop
0000000000031454	ldxr	x8, [x10]
0000000000031458	add	x8, x8, x23
000000000003145c	stxr	w9, x8, [x10]
0000000000031460	cbnz	w9, 0x31454
0000000000031464	ldxr	x8, [x22]
0000000000031468	add	x8, x8, x24
000000000003146c	stxr	w9, x8, [x22]
0000000000031470	cbnz	w9, 0x31464
0000000000031474	nop
0000000000031478	ldr	x10, #0x55c18
000000000003147c	b	0x31490
0000000000031480	clrex
0000000000031484	mov	w11, #0x0
0000000000031488	mov	x10, x9
000000000003148c	cbnz	w11, 0x314b8
0000000000031490	cmp	x10, x8
0000000000031494	b.ge	0x314b8
0000000000031498	ldxr	x9, [x27]
000000000003149c	cmp	x9, x10
00000000000314a0	b.ne	0x31480
00000000000314a4	stlxr	w10, x8, [x27]
00000000000314a8	cbnz	w10, 0x31484
00000000000314ac	mov	w11, #0x1
00000000000314b0	mov	x10, x9
00000000000314b4	cbz	w11, 0x31490
00000000000314b8	adr	x10, #0x55bd0
00000000000314bc	nop
00000000000314c0	ldxr	x8, [x10]
00000000000314c4	add	x8, x8, x23
00000000000314c8	stxr	w9, x8, [x10]
00000000000314cc	cbnz	w9, 0x314c0
00000000000314d0	cmn	w0, #0x1
00000000000314d4	b.ne	0x313e4
00000000000314d8	bl	0x51980 ; symbol stub for: ___error
00000000000314dc	ldr	w0, [x0]
00000000000314e0	bl	0x51d28 ; symbol stub for: _strerror
00000000000314e4	stp	x26, x23, [sp, #0x8]
00000000000314e8	str	x0, [sp]
00000000000314ec	mov	x0, x20
00000000000314f0	bl	__mi_warning_message
00000000000314f4	b	0x313e4
00000000000314f8	mov	w0, #0x8
00000000000314fc	bl	_mi_option_get
0000000000031500	cbz	x0, 0x316ec
0000000000031504	mov	w0, #0x8
0000000000031508	bl	_mi_option_get
000000000003150c	cmp	x0, #0x1
0000000000031510	b.lt	0x316ec
0000000000031514	lsl	x19, x0, #10
0000000000031518	ubfx	x8, x0, #9, #45
000000000003151c	cbnz	x8, 0x3152c
0000000000031520	nop
0000000000031524	ldr	x8, #0x3b11c
0000000000031528	b	0x31558
000000000003152c	mov	w8, #0x10000
0000000000031530	mov	w9, #0x40000
0000000000031534	lsr	x10, x19, #25
0000000000031538	cmp	x10, #0x0
000000000003153c	mov	w10, #0x400000
0000000000031540	mov	w11, #0x100000
0000000000031544	csel	x10, x11, x10, eq
0000000000031548	cmp	x19, #0x800, lsl #12
000000000003154c	csel	x9, x9, x10, lo
0000000000031550	cmp	x19, #0x200, lsl #12
0000000000031554	csel	x8, x8, x9, lo
0000000000031558	mvn	x9, x8
000000000003155c	cmp	x19, x9
0000000000031560	b.hs	0x3158c
0000000000031564	add	x9, x19, x8
0000000000031568	sub	x9, x9, #0x1
000000000003156c	sub	x10, x8, #0x1
0000000000031570	tst	x8, x10
0000000000031574	b.ne	0x31584
0000000000031578	neg	x8, x8
000000000003157c	and	x19, x9, x8
0000000000031580	b	0x3158c
0000000000031584	udiv	x9, x9, x8
0000000000031588	mul	x19, x9, x8
000000000003158c	mov	w8, #0x1
0000000000031590	sturb	w8, [x29, #-0x60]
0000000000031594	sub	x2, x29, #0x60
0000000000031598	mov	x0, x19
000000000003159c	mov	w1, #0x1
00000000000315a0	bl	__mi_os_alloc_aligned
00000000000315a4	cbz	x0, 0x316ec
00000000000315a8	mov	x20, x0
00000000000315ac	ldurb	w25, [x29, #-0x60]
00000000000315b0	mov	w8, #0xffffff
00000000000315b4	add	x22, x19, x8
00000000000315b8	lsr	x21, x22, #24
00000000000315bc	add	x23, x21, #0x3f
00000000000315c0	lsr	x24, x23, #6
00000000000315c4	lsl	x8, x24, #4
00000000000315c8	add	x0, x8, #0x40
00000000000315cc	bl	__mi_os_alloc
00000000000315d0	cbz	x0, 0x3167c
00000000000315d4	stp	x21, x24, [x0, #0x8]
00000000000315d8	stlr	x20, [x0]
00000000000315dc	mov	w8, #-0x1
00000000000315e0	str	w8, [x0, #0x18]
00000000000315e4	strb	w25, [x0, #0x1e]
00000000000315e8	mov	w8, #0x101
00000000000315ec	strh	w8, [x0, #0x1c]
00000000000315f0	add	x9, x0, #0x20
00000000000315f4	add	x8, x0, #0x38
00000000000315f8	stlr	xzr, [x9]
00000000000315fc	add	x10, x8, x24, lsl #3
0000000000031600	and	x9, x23, #0x1ffffffffc0
0000000000031604	sub	x9, x9, x21
0000000000031608	stp	x10, xzr, [x0, #0x28]
000000000003160c	cmp	x9, #0x1
0000000000031610	b.lt	0x31648
0000000000031614	lsr	x10, x22, #27
0000000000031618	and	x10, x10, #0x1ffffffff8
000000000003161c	mov	x11, #-0x1
0000000000031620	lsl	x11, x11, x9
0000000000031624	mvn	x11, x11
0000000000031628	lsl	x11, x11, x21
000000000003162c	cmp	x9, #0x3f
0000000000031630	csinv	x9, x11, xzr, ls
0000000000031634	add	x8, x8, x10
0000000000031638	ldaxr	x10, [x8]
000000000003163c	orr	x10, x10, x9
0000000000031640	stlxr	w11, x10, [x8]
0000000000031644	cbnz	w11, 0x31638
0000000000031648	adr	x8, #0x554b8
000000000003164c	nop
0000000000031650	ldaxr	x9, [x8]
0000000000031654	add	x10, x9, #0x1
0000000000031658	stlxr	w11, x10, [x8]
000000000003165c	cbnz	w11, 0x31650
0000000000031660	cmp	x9, #0x40
0000000000031664	b.lo	0x316a4
0000000000031668	ldaxr	x9, [x8]
000000000003166c	sub	x9, x9, #0x1
0000000000031670	stlxr	w10, x9, [x8]
0000000000031674	cbnz	w10, 0x31668
0000000000031678	b	0x316b8
000000000003167c	mov	x0, x20
0000000000031680	mov	x1, x19
0000000000031684	mov	w2, #0x1
0000000000031688	bl	__mi_os_free_ex
000000000003168c	add	x8, x19, #0x3ff
0000000000031690	lsr	x8, x8, #10
0000000000031694	str	x8, [sp]
0000000000031698	adr	x0, #0x24aba ; literal pool for: "failed to reserve %zu k memory\n"
000000000003169c	nop
00000000000316a0	b	0x316e8
00000000000316a4	adr	x8, #0x5539c
00000000000316a8	nop
00000000000316ac	add	x8, x8, x9, lsl #3
00000000000316b0	add	x8, x8, #0x400
00000000000316b4	stlr	x0, [x8]
00000000000316b8	add	x8, x19, #0x3ff
00000000000316bc	lsr	x8, x8, #10
00000000000316c0	ldurb	w9, [x29, #-0x60]
00000000000316c4	adr	x10, #0x24aae ; literal pool for: " (in large os pages)"
00000000000316c8	nop
00000000000316cc	adr	x11, #0x2530e ; literal pool for: ""
00000000000316d0	nop
00000000000316d4	cmp	w9, #0x0
00000000000316d8	csel	x9, x11, x10, eq
00000000000316dc	stp	x8, x9, [sp]
00000000000316e0	adr	x0, #0x24aa7 ; literal pool for: "reserved %zu kb memory%s\n"
00000000000316e4	nop
00000000000316e8	bl	__mi_verbose_message
00000000000316ec	ldp	x29, x30, [sp, #0xe0]
00000000000316f0	ldp	x20, x19, [sp, #0xd0]
00000000000316f4	ldp	x22, x21, [sp, #0xc0]
00000000000316f8	ldp	x24, x23, [sp, #0xb0]
00000000000316fc	ldp	x26, x25, [sp, #0xa0]
0000000000031700	ldp	x28, x27, [sp, #0x90]
0000000000031704	add	sp, sp, #0xf0
0000000000031708	ret
000000000003170c	adr	x8, #0x55424
0000000000031710	nop
0000000000031714	ldar	x20, [x8]
0000000000031718	cbnz	x20, 0x30c0c
000000000003171c	mov	w0, #0xf
0000000000031720	bl	_mi_option_get
0000000000031724	cmp	x0, #0x1
0000000000031728	csinc	x20, x0, xzr, gt
000000000003172c	adr	x8, #0x55404
0000000000031730	nop
0000000000031734	stlr	x20, [x8]
0000000000031738	str	x20, [sp]
000000000003173c	adr	x0, #0x24bc7 ; literal pool for: "using %zd numa regions\n"
0000000000031740	nop
0000000000031744	bl	__mi_verbose_message
0000000000031748	b	0x30c0c
_mi_pthread_done:
000000000003174c	stp	x28, x27, [sp, #-0x60]!
0000000000031750	stp	x26, x25, [sp, #0x10]
0000000000031754	stp	x24, x23, [sp, #0x20]
0000000000031758	stp	x22, x21, [sp, #0x30]
000000000003175c	stp	x20, x19, [sp, #0x40]
0000000000031760	stp	x29, x30, [sp, #0x50]
0000000000031764	add	x29, sp, #0x50
0000000000031768	cbz	x0, 0x3189c
000000000003176c	mov	x19, x0
0000000000031770	adr	x9, #0x559e8
0000000000031774	nop
0000000000031778	ldxr	x8, [x9]
000000000003177c	sub	x8, x8, #0x1
0000000000031780	stxr	w10, x8, [x9]
0000000000031784	cbnz	w10, 0x31778
0000000000031788	nop
000000000003178c	ldr	x11, #0x559c4
0000000000031790	adr	x9, #0x559c0
0000000000031794	nop
0000000000031798	b	0x317ac
000000000003179c	clrex
00000000000317a0	mov	w12, #0x0
00000000000317a4	mov	x11, x10
00000000000317a8	cbnz	w12, 0x317d4
00000000000317ac	cmp	x11, x8
00000000000317b0	b.ge	0x317d4
00000000000317b4	ldxr	x10, [x9]
00000000000317b8	cmp	x10, x11
00000000000317bc	b.ne	0x3179c
00000000000317c0	stlxr	w11, x8, [x9]
00000000000317c4	cbnz	w11, 0x317a0
00000000000317c8	mov	w12, #0x1
00000000000317cc	mov	x11, x10
00000000000317d0	cbz	w12, 0x317ac
00000000000317d4	adr	x8, #0x55974
00000000000317d8	nop
00000000000317dc	ldxr	x9, [x8]
00000000000317e0	add	x9, x9, #0x1
00000000000317e4	stxr	w10, x9, [x8]
00000000000317e8	cbnz	w10, 0x317dc
00000000000317ec	ldr	x20, [x19, #0xb20]
00000000000317f0	bl	0x51cb0 ; symbol stub for: _pthread_self
00000000000317f4	bl	0x51c68 ; symbol stub for: _pthread_mach_thread_np
00000000000317f8	adr	x23, #0x35688
00000000000317fc	nop
0000000000031800	cmp	x19, x23
0000000000031804	b.eq	0x3189c
0000000000031808	mov	w8, w0
000000000003180c	cmp	x20, x8
0000000000031810	b.ne	0x3189c
0000000000031814	nop
0000000000031818	ldr	x20, #0x3a988
000000000003181c	cbz	x20, 0x31830
0000000000031820	bl	0x51cb0 ; symbol stub for: _pthread_self
0000000000031824	bl	0x51c68 ; symbol stub for: _pthread_mach_thread_np
0000000000031828	cmp	x20, w0, uxtw
000000000003182c	b.ne	0x3183c
0000000000031830	adr	x1, #0x39e50
0000000000031834	nop
0000000000031838	b	0x31844
000000000003183c	adr	x1, #0x35644
0000000000031840	nop
0000000000031844	adrp	x20, 59 ; 0x6c000
0000000000031848	add	x20, x20, #0xbc8
000000000003184c	ldr	x24, [x20]
0000000000031850	mov	x0, x20
0000000000031854	blr	x24
0000000000031858	str	x1, [x0]
000000000003185c	nop
0000000000031860	ldr	x0, #0x3add8
0000000000031864	cmn	x0, #0x1
0000000000031868	b.eq	0x31870
000000000003186c	bl	0x51cc8 ; symbol stub for: _pthread_setspecific
0000000000031870	ldr	x8, [x19]
0000000000031874	ldr	x19, [x8, #0x10]
0000000000031878	cmp	x19, x23
000000000003187c	b.eq	0x3189c
0000000000031880	ldr	x8, [x19]
0000000000031884	ldr	x26, [x8, #0x18]
0000000000031888	cbz	x26, 0x31d00
000000000003188c	mov	w27, #0x18
0000000000031890	mov	w21, #0x7
0000000000031894	movk	w21, #0x20, lsl #16
0000000000031898	b	0x318c4
000000000003189c	ldp	x29, x30, [sp, #0x50]
00000000000318a0	ldp	x20, x19, [sp, #0x40]
00000000000318a4	ldp	x22, x21, [sp, #0x30]
00000000000318a8	ldp	x24, x23, [sp, #0x20]
00000000000318ac	ldp	x26, x25, [sp, #0x10]
00000000000318b0	ldp	x28, x27, [sp], #0x60
00000000000318b4	ret
00000000000318b8	mov	x0, x22
00000000000318bc	bl	_mi_free
00000000000318c0	cbz	x26, 0x31d00
00000000000318c4	mov	x22, x26
00000000000318c8	ldr	x26, [x26, #0xbe0]
00000000000318cc	cmp	x22, x19
00000000000318d0	b.eq	0x318c0
00000000000318d4	cbz	x22, 0x318c0
00000000000318d8	cmp	x22, x23
00000000000318dc	b.eq	0x318c0
00000000000318e0	ldr	x8, [x22]
00000000000318e4	ldr	x25, [x8, #0x10]
00000000000318e8	cmp	x25, x22
00000000000318ec	b.eq	0x31c68
00000000000318f0	ldr	x8, [x22, #0xbc8]
00000000000318f4	cbz	x8, 0x31c54
00000000000318f8	add	x20, x22, #0xb18
00000000000318fc	ldr	x8, [x22, #0xb18]
0000000000031900	b	0x31910
0000000000031904	clrex
0000000000031908	mov	w9, #0x0
000000000003190c	cbnz	w9, 0x31934
0000000000031910	cbz	x8, 0x31944
0000000000031914	mov	x0, x8
0000000000031918	ldaxr	x8, [x20]
000000000003191c	cmp	x8, x0
0000000000031920	b.ne	0x31904
0000000000031924	stlxr	w9, xzr, [x20]
0000000000031928	cbnz	w9, 0x31908
000000000003192c	mov	w9, #0x1
0000000000031930	cbz	w9, 0x31910
0000000000031934	ldr	x28, [x0]
0000000000031938	bl	__mi_free_delayed_block
000000000003193c	mov	x0, x28
0000000000031940	cbnz	x28, 0x31934
0000000000031944	mov	x8, #0x0
0000000000031948	add	x9, x25, #0x410
000000000003194c	add	x10, x25, #0x3f8
0000000000031950	add	x11, x25, #0x8
0000000000031954	add	x12, x25, #0x18
0000000000031958	b	0x31988
000000000003195c	mov	x13, #0x0
0000000000031960	ldr	x14, [x25, #0xbc8]
0000000000031964	add	x14, x14, x13
0000000000031968	str	x14, [x25, #0xbc8]
000000000003196c	ldr	x14, [x22, #0xbc8]
0000000000031970	sub	x13, x14, x13
0000000000031974	str	x13, [x22, #0xbc8]
0000000000031978	add	x8, x8, #0x1
000000000003197c	add	x10, x10, #0x18
0000000000031980	cmp	x8, #0x4b
0000000000031984	b.eq	0x31bd8
0000000000031988	add	x13, x8, x8, lsl #1
000000000003198c	lsl	x14, x13, #3
0000000000031990	add	x16, x22, x14
0000000000031994	ldr	x15, [x16, #0x410]
0000000000031998	cbz	x15, 0x3195c
000000000003199c	mov	x13, #0x0
00000000000319a0	add	x14, x25, x14
00000000000319a4	add	x14, x14, #0x410
00000000000319a8	add	x16, x16, #0x410
00000000000319ac	b	0x319bc
00000000000319b0	add	x13, x13, #0x1
00000000000319b4	ldr	x15, [x15, #0x30]
00000000000319b8	cbz	x15, 0x31a10
00000000000319bc	add	x17, x15, #0x28
00000000000319c0	stlr	x25, [x17]
00000000000319c4	add	x17, x15, #0x20
00000000000319c8	ldar	x0, [x17]
00000000000319cc	and	w1, w0, #0x3
00000000000319d0	cmp	w1, #0x0
00000000000319d4	ccmp	w1, #0x3, #0x4, ne
00000000000319d8	b.eq	0x319b0
00000000000319dc	cmp	w1, #0x1
00000000000319e0	b.eq	0x31a08
00000000000319e4	ldxr	x1, [x17]
00000000000319e8	cmp	x1, x0
00000000000319ec	b.ne	0x31a00
00000000000319f0	and	x0, x0, #0xfffffffffffffffc
00000000000319f4	stlxr	w1, x0, [x17]
00000000000319f8	cbnz	w1, 0x319c8
00000000000319fc	b	0x319b0
0000000000031a00	clrex
0000000000031a04	b	0x319c8
0000000000031a08	wfe
0000000000031a0c	b	0x319c8
0000000000031a10	madd	x15, x8, x27, x25
0000000000031a14	add	x17, x15, #0x418
0000000000031a18	ldr	x0, [x15, #0x418]
0000000000031a1c	ldr	x15, [x16]
0000000000031a20	cbz	x0, 0x31a3c
0000000000031a24	str	x15, [x0, #0x30]
0000000000031a28	str	x0, [x15, #0x38]
0000000000031a2c	madd	x14, x8, x27, x22
0000000000031a30	ldr	x14, [x14, #0x418]
0000000000031a34	str	x14, [x17]
0000000000031a38	b	0x31960
0000000000031a3c	str	x15, [x14]
0000000000031a40	add	x14, x8, x8, lsl #1
0000000000031a44	lsl	x14, x14, #3
0000000000031a48	add	x16, x22, x14
0000000000031a4c	ldr	x16, [x16, #0x418]
0000000000031a50	str	x16, [x17]
0000000000031a54	add	x14, x25, x14
0000000000031a58	ldr	x16, [x14, #0x420]
0000000000031a5c	cmp	x16, #0x400
0000000000031a60	b.hi	0x31960
0000000000031a64	cmp	x15, #0x0
0000000000031a68	adr	x14, #0x21598
0000000000031a6c	nop
0000000000031a70	csel	x14, x14, x15, eq
0000000000031a74	add	x15, x16, #0x7
0000000000031a78	lsr	x15, x15, #3
0000000000031a7c	add	x17, x25, x15, lsl #3
0000000000031a80	ldr	x17, [x17, #0x8]
0000000000031a84	cmp	x17, x14
0000000000031a88	b.eq	0x31960
0000000000031a8c	cmp	x16, #0x9
0000000000031a90	b.hs	0x31a9c
0000000000031a94	mov	x16, #0x0
0000000000031a98	b	0x31b80
0000000000031a9c	sub	x17, x15, #0x1
0000000000031aa0	clz	x0, x17
0000000000031aa4	mov	w1, #0x3f
0000000000031aa8	sub	w0, w1, w0
0000000000031aac	and	w0, w0, #0xff
0000000000031ab0	sub	w1, w0, #0x2
0000000000031ab4	lsr	x17, x17, x1
0000000000031ab8	and	w17, w17, #0x3
0000000000031abc	bfi	w17, w0, #2, #8
0000000000031ac0	sub	w17, w17, #0x3
0000000000031ac4	add	w0, w15, #0x1
0000000000031ac8	and	w0, w0, #0xfffffffe
0000000000031acc	cmp	x16, #0x40
0000000000031ad0	csel	w16, w17, w0, hi
0000000000031ad4	mov	x17, x10
0000000000031ad8	ldr	x0, [x17, #0x10]
0000000000031adc	add	x1, x0, #0x7
0000000000031ae0	lsr	x0, x1, #3
0000000000031ae4	cmp	x1, #0x10
0000000000031ae8	b.hs	0x31afc
0000000000031aec	mov	w1, #0x1
0000000000031af0	cmp	x17, x9
0000000000031af4	b.hi	0x31b60
0000000000031af8	b	0x31b70
0000000000031afc	cmp	x1, #0x47
0000000000031b00	b.hi	0x31b18
0000000000031b04	add	w1, w0, #0x1
0000000000031b08	and	w1, w1, #0xfffffffe
0000000000031b0c	cmp	x17, x9
0000000000031b10	b.hi	0x31b60
0000000000031b14	b	0x31b70
0000000000031b18	cmp	x1, x21
0000000000031b1c	b.ls	0x31b30
0000000000031b20	mov	w1, #0x49
0000000000031b24	cmp	x17, x9
0000000000031b28	b.hi	0x31b60
0000000000031b2c	b	0x31b70
0000000000031b30	sub	x1, x0, #0x1
0000000000031b34	clz	x2, x1
0000000000031b38	mov	w3, #0x3f
0000000000031b3c	sub	w2, w3, w2
0000000000031b40	and	w2, w2, #0xff
0000000000031b44	sub	w3, w2, #0x2
0000000000031b48	lsr	x1, x1, x3
0000000000031b4c	and	w1, w1, #0x3
0000000000031b50	bfi	w1, w2, #2, #8
0000000000031b54	sub	w1, w1, #0x3
0000000000031b58	cmp	x17, x9
0000000000031b5c	b.ls	0x31b70
0000000000031b60	sub	x17, x17, #0x18
0000000000031b64	and	w2, w16, #0xff
0000000000031b68	cmp	w2, w1, uxtb
0000000000031b6c	b.eq	0x31ad8
0000000000031b70	cmp	x0, x15
0000000000031b74	csinc	x16, x15, x0, hs
0000000000031b78	cmp	x16, x15
0000000000031b7c	b.hi	0x31960
0000000000031b80	sub	x17, x15, x16
0000000000031b84	add	x17, x17, #0x1
0000000000031b88	cmp	x17, #0x4
0000000000031b8c	b.lo	0x31bbc
0000000000031b90	and	x0, x17, #0xfffffffffffffffc
0000000000031b94	dup.2d	v0, x14
0000000000031b98	add	x1, x12, x16, lsl #3
0000000000031b9c	mov	x2, x0
0000000000031ba0	stp	q0, q0, [x1, #-0x10]
0000000000031ba4	add	x1, x1, #0x20
0000000000031ba8	subs	x2, x2, #0x4
0000000000031bac	b.ne	0x31ba0
0000000000031bb0	cmp	x17, x0
0000000000031bb4	b.eq	0x31960
0000000000031bb8	add	x16, x16, x0
0000000000031bbc	sub	x15, x15, x16
0000000000031bc0	add	x15, x15, #0x1
0000000000031bc4	add	x16, x11, x16, lsl #3
0000000000031bc8	str	x14, [x16], #0x8
0000000000031bcc	subs	x15, x15, #0x1
0000000000031bd0	b.ne	0x31bc8
0000000000031bd4	b	0x31960
0000000000031bd8	ldr	x8, [x20]
0000000000031bdc	b	0x31bec
0000000000031be0	clrex
0000000000031be4	mov	w9, #0x0
0000000000031be8	cbnz	w9, 0x31c10
0000000000031bec	cbz	x8, 0x31c20
0000000000031bf0	mov	x0, x8
0000000000031bf4	ldaxr	x8, [x20]
0000000000031bf8	cmp	x8, x0
0000000000031bfc	b.ne	0x31be0
0000000000031c00	stlxr	w9, xzr, [x20]
0000000000031c04	cbnz	w9, 0x31be4
0000000000031c08	mov	w9, #0x1
0000000000031c0c	cbz	w9, 0x31bec
0000000000031c10	ldr	x20, [x0]
0000000000031c14	bl	__mi_free_delayed_block
0000000000031c18	mov	x0, x20
0000000000031c1c	cbnz	x20, 0x31c10
0000000000031c20	add	x0, x22, #0x8
0000000000031c24	mov	w1, #0x408
0000000000031c28	bl	0x519d4 ; symbol stub for: _bzero
0000000000031c2c	add	x0, x22, #0x410
0000000000031c30	adr	x1, #0x35660
0000000000031c34	nop
0000000000031c38	mov	w2, #0x708
0000000000031c3c	bl	0x51aac ; symbol stub for: _memcpy
0000000000031c40	add	x8, x22, #0xb18
0000000000031c44	stlr	xzr, [x8]
0000000000031c48	str	xzr, [x22, #0xbc8]
0000000000031c4c	adrp	x20, 59 ; 0x6c000
0000000000031c50	add	x20, x20, #0xbc8
0000000000031c54	ldr	x8, [x22]
0000000000031c58	ldr	x1, [x8, #0x10]
0000000000031c5c	cmp	x1, x22
0000000000031c60	b.ne	0x31c84
0000000000031c64	b	0x318c0
0000000000031c68	mov	x0, x22
0000000000031c6c	mov	w1, #0x2
0000000000031c70	bl	_mi_heap_collect_ex
0000000000031c74	ldr	x8, [x22]
0000000000031c78	ldr	x1, [x8, #0x10]
0000000000031c7c	cmp	x1, x22
0000000000031c80	b.eq	0x318c0
0000000000031c84	mov	x0, x20
0000000000031c88	blr	x24
0000000000031c8c	ldr	x9, [x0]
0000000000031c90	cmp	x9, x22
0000000000031c94	b.ne	0x31cbc
0000000000031c98	mov	x0, x20
0000000000031c9c	blr	x24
0000000000031ca0	str	x1, [x0]
0000000000031ca4	nop
0000000000031ca8	ldr	x0, #0x3a990
0000000000031cac	cmn	x0, #0x1
0000000000031cb0	b.eq	0x31cb8
0000000000031cb4	bl	0x51cc8 ; symbol stub for: _pthread_setspecific
0000000000031cb8	ldr	x8, [x22]
0000000000031cbc	mov	x9, #0x0
0000000000031cc0	add	x8, x8, #0x18
0000000000031cc4	mov	x11, x8
0000000000031cc8	mov	x10, x9
0000000000031ccc	ldr	x9, [x11]
0000000000031cd0	add	x11, x9, #0xbe0
0000000000031cd4	cmp	x9, x22
0000000000031cd8	ccmp	x9, #0x0, #0x4, ne
0000000000031cdc	b.ne	0x31cc8
0000000000031ce0	cmp	x9, x22
0000000000031ce4	b.ne	0x318b8
0000000000031ce8	ldr	x9, [x22, #0xbe0]
0000000000031cec	add	x11, x10, #0xbe0
0000000000031cf0	cmp	x10, #0x0
0000000000031cf4	csel	x8, x8, x11, eq
0000000000031cf8	str	x9, [x8]
0000000000031cfc	b	0x318b8
0000000000031d00	adr	x8, #0x39980
0000000000031d04	nop
0000000000031d08	cmp	x19, x8
0000000000031d0c	b.eq	0x31d50
0000000000031d10	mov	x0, x19
0000000000031d14	mov	w1, #0x2
0000000000031d18	bl	_mi_heap_collect_ex
0000000000031d1c	ldr	x8, [x19]
0000000000031d20	add	x0, x8, #0xb0
0000000000031d24	bl	_mi_stats_merge_from
0000000000031d28	mov	x0, x19
0000000000031d2c	mov	w1, #0xee0
0000000000031d30	mov	w2, #0x1
0000000000031d34	ldp	x29, x30, [sp, #0x50]
0000000000031d38	ldp	x20, x19, [sp, #0x40]
0000000000031d3c	ldp	x22, x21, [sp, #0x30]
0000000000031d40	ldp	x24, x23, [sp, #0x20]
0000000000031d44	ldp	x26, x25, [sp, #0x10]
0000000000031d48	ldp	x28, x27, [sp], #0x60
0000000000031d4c	b	__mi_os_free_ex
0000000000031d50	ldr	x8, [x19]
0000000000031d54	add	x0, x8, #0xb0
0000000000031d58	ldp	x29, x30, [sp, #0x50]
0000000000031d5c	ldp	x20, x19, [sp, #0x40]
0000000000031d60	ldp	x22, x21, [sp, #0x30]
0000000000031d64	ldp	x24, x23, [sp, #0x20]
0000000000031d68	ldp	x26, x25, [sp, #0x10]
0000000000031d6c	ldp	x28, x27, [sp], #0x60
0000000000031d70	b	_mi_stats_merge_from
__mi_verbose_message:
0000000000031d74	stp	x28, x27, [sp, #-0x40]!
0000000000031d78	stp	x22, x21, [sp, #0x10]
0000000000031d7c	stp	x20, x19, [sp, #0x20]
0000000000031d80	stp	x29, x30, [sp, #0x30]
0000000000031d84	add	x29, sp, #0x30
0000000000031d88	sub	sp, sp, #0x210
0000000000031d8c	mov	x20, x0
0000000000031d90	mov	w0, #0x2
0000000000031d94	bl	_mi_option_get
0000000000031d98	cbz	x0, 0x31e74
0000000000031d9c	add	x8, x29, #0x10
0000000000031da0	str	x8, [sp, #0x8]
0000000000031da4	cbz	x20, 0x31e74
0000000000031da8	adrp	x21, 85 ; 0x86000
0000000000031dac	ldrb	w8, [x21, #0xa46]
0000000000031db0	adrp	x19, 59 ; 0x6c000
0000000000031db4	add	x19, x19, #0xbe0
0000000000031db8	cmp	w8, #0x1
0000000000031dbc	b.ne	0x31de4
0000000000031dc0	ldr	x8, [x19]
0000000000031dc4	mov	x0, x19
0000000000031dc8	blr	x8
0000000000031dcc	ldrb	w9, [x0]
0000000000031dd0	tbnz	w9, #0x0, 0x31e74
0000000000031dd4	mov	x0, x19
0000000000031dd8	blr	x8
0000000000031ddc	mov	w8, #0x1
0000000000031de0	strb	w8, [x0]
0000000000031de4	add	x0, sp, #0x10
0000000000031de8	add	x3, x29, #0x10
0000000000031dec	mov	w1, #0x1ff
0000000000031df0	mov	x2, x20
0000000000031df4	bl	0x51d94 ; symbol stub for: _vsnprintf
0000000000031df8	ldrb	w8, [x21, #0xa46]
0000000000031dfc	cmp	w8, #0x1
0000000000031e00	b.ne	0x31e18
0000000000031e04	ldr	x8, [x19]
0000000000031e08	mov	x0, x19
0000000000031e0c	blr	x8
0000000000031e10	mov	w8, #0x1
0000000000031e14	strb	w8, [x0]
0000000000031e18	adr	x21, #0x54c2e
0000000000031e1c	nop
0000000000031e20	add	x8, x21, #0xca
0000000000031e24	ldar	x20, [x8]
0000000000031e28	ldur	x8, [x21, #0xd2]
0000000000031e2c	adr	x9, #0x1748
0000000000031e30	nop
0000000000031e34	cmp	x8, #0x0
0000000000031e38	csel	x22, x9, x8, eq
0000000000031e3c	adr	x0, #0x246ab ; literal pool for: "mimalloc: "
0000000000031e40	nop
0000000000031e44	mov	x1, x20
0000000000031e48	blr	x22
0000000000031e4c	add	x0, sp, #0x10
0000000000031e50	mov	x1, x20
0000000000031e54	blr	x22
0000000000031e58	ldrb	w8, [x21]
0000000000031e5c	cmp	w8, #0x1
0000000000031e60	b.ne	0x31e74
0000000000031e64	ldr	x8, [x19]
0000000000031e68	mov	x0, x19
0000000000031e6c	blr	x8
0000000000031e70	strb	wzr, [x0]
0000000000031e74	add	sp, sp, #0x210
0000000000031e78	ldp	x29, x30, [sp, #0x30]
0000000000031e7c	ldp	x20, x19, [sp, #0x20]
0000000000031e80	ldp	x22, x21, [sp, #0x10]
0000000000031e84	ldp	x28, x27, [sp], #0x40
0000000000031e88	ret
_mi_thread_init:
0000000000031e8c	sub	sp, sp, #0x40
0000000000031e90	stp	x22, x21, [sp, #0x10]
0000000000031e94	stp	x20, x19, [sp, #0x20]
0000000000031e98	stp	x29, x30, [sp, #0x30]
0000000000031e9c	add	x29, sp, #0x30
0000000000031ea0	bl	_mi_process_init
0000000000031ea4	adrp	x19, 59 ; 0x6c000
0000000000031ea8	add	x19, x19, #0xbc8
0000000000031eac	ldr	x21, [x19]
0000000000031eb0	mov	x0, x19
0000000000031eb4	blr	x21
0000000000031eb8	ldr	x8, [x0]
0000000000031ebc	adr	x9, #0x34fc4
0000000000031ec0	nop
0000000000031ec4	cmp	x8, x9
0000000000031ec8	b.ne	0x32104
0000000000031ecc	adrp	x22, 59 ; 0x6c000
0000000000031ed0	ldr	x20, [x22, #0x1a0]
0000000000031ed4	cbz	x20, 0x31ee8
0000000000031ed8	bl	0x51cb0 ; symbol stub for: _pthread_self
0000000000031edc	bl	0x51c68 ; symbol stub for: _pthread_mach_thread_np
0000000000031ee0	cmp	x20, w0, uxtw
0000000000031ee4	b.ne	0x31fc8
0000000000031ee8	nop
0000000000031eec	ldr	x8, #0x3a2bc
0000000000031ef0	adr	x20, #0x39790
0000000000031ef4	nop
0000000000031ef8	cbnz	x8, 0x31fa0
0000000000031efc	bl	0x51cb0 ; symbol stub for: _pthread_self
0000000000031f00	bl	0x51c68 ; symbol stub for: _pthread_mach_thread_np
0000000000031f04	mov	w8, w0
0000000000031f08	str	x8, [x22, #0x1a0]
0000000000031f0c	bl	0x51a88 ; symbol stub for: _mach_absolute_time
0000000000031f10	adr	x8, #-0x1df8
0000000000031f14	nop
0000000000031f18	adr	x9, #-0x1ee0
0000000000031f1c	nop
0000000000031f20	eor	x8, x9, x8
0000000000031f24	eor	x8, x0, x8
0000000000031f28	eor	w9, w8, w8, lsr #17
0000000000031f2c	and	x9, x9, #0xf
0000000000031f30	add	x9, x9, #0x1
0000000000031f34	mov	w10, #0x11
0000000000031f38	mov	x11, #0xe5b9
0000000000031f3c	movk	x11, #0x1ce4, lsl #16
0000000000031f40	movk	x11, #0x476d, lsl #32
0000000000031f44	movk	x11, #0xbf58, lsl #48
0000000000031f48	mov	x12, #0x11eb
0000000000031f4c	movk	x12, #0x1331, lsl #16
0000000000031f50	movk	x12, #0x49bb, lsl #32
0000000000031f54	movk	x12, #0x94d0, lsl #48
0000000000031f58	cmp	x8, #0x0
0000000000031f5c	csel	x8, x10, x8, eq
0000000000031f60	eor	x8, x8, x8, lsr #30
0000000000031f64	mul	x8, x8, x11
0000000000031f68	eor	x8, x8, x8, lsr #27
0000000000031f6c	mul	x8, x8, x12
0000000000031f70	eor	x8, x8, x8, lsr #31
0000000000031f74	subs	x9, x9, #0x1
0000000000031f78	b.ne	0x31f58
0000000000031f7c	str	x8, [x20, #0xb28]
0000000000031f80	add	x0, x20, #0xb40
0000000000031f84	bl	__mi_random_init
0000000000031f88	mov	x0, x20
0000000000031f8c	bl	__mi_heap_random_next
0000000000031f90	str	x0, [x20, #0xb30]
0000000000031f94	mov	x0, x20
0000000000031f98	bl	__mi_heap_random_next
0000000000031f9c	str	x0, [x20, #0xb38]
0000000000031fa0	mov	x0, x19
0000000000031fa4	blr	x21
0000000000031fa8	str	x20, [x0]
0000000000031fac	nop
0000000000031fb0	ldr	x0, #0x3a688
0000000000031fb4	cmn	x0, #0x1
0000000000031fb8	b.eq	0x32088
0000000000031fbc	adr	x1, #0x396c4
0000000000031fc0	nop
0000000000031fc4	b	0x32084
0000000000031fc8	mov	w0, #0xee0
0000000000031fcc	bl	__mi_os_alloc
0000000000031fd0	mov	x20, x0
0000000000031fd4	cbnz	x0, 0x31fe8
0000000000031fd8	mov	w0, #0xee0
0000000000031fdc	bl	__mi_os_alloc
0000000000031fe0	mov	x20, x0
0000000000031fe4	cbz	x0, 0x32118
0000000000031fe8	add	x22, x20, #0xbf0
0000000000031fec	adr	x1, #0x34e94
0000000000031ff0	nop
0000000000031ff4	mov	x0, x20
0000000000031ff8	mov	w2, #0xbf0
0000000000031ffc	bl	0x51aac ; symbol stub for: _memcpy
0000000000032000	bl	0x51cb0 ; symbol stub for: _pthread_self
0000000000032004	bl	0x51c68 ; symbol stub for: _pthread_mach_thread_np
0000000000032008	mov	w8, w0
000000000003200c	str	x8, [x20, #0xb20]
0000000000032010	add	x0, x20, #0xb40
0000000000032014	bl	__mi_random_init
0000000000032018	mov	x0, x20
000000000003201c	bl	__mi_heap_random_next
0000000000032020	orr	x8, x0, #0x1
0000000000032024	str	x8, [x20, #0xb28]
0000000000032028	mov	x0, x20
000000000003202c	bl	__mi_heap_random_next
0000000000032030	str	x0, [x20, #0xb30]
0000000000032034	mov	x0, x20
0000000000032038	bl	__mi_heap_random_next
000000000003203c	str	x0, [x20, #0xb38]
0000000000032040	str	x22, [x20]
0000000000032044	str	x20, [x20, #0xc00]
0000000000032048	str	x20, [x20, #0xc08]
000000000003204c	dup.2d	v0, x20
0000000000032050	nop
0000000000032054	ldr	q1, 0x52510
0000000000032058	add.2d	v0, v0, v1
000000000003205c	str	q0, [x20, #0xc80]
0000000000032060	str	d0, [x20, #0xc98]
0000000000032064	mov	x0, x19
0000000000032068	blr	x21
000000000003206c	str	x20, [x0]
0000000000032070	nop
0000000000032074	ldr	x0, #0x3a5c4
0000000000032078	cmn	x0, #0x1
000000000003207c	b.eq	0x32088
0000000000032080	mov	x1, x20
0000000000032084	bl	0x51cc8 ; symbol stub for: _pthread_setspecific
0000000000032088	adr	x10, #0x550d0
000000000003208c	nop
0000000000032090	ldxr	x8, [x10]
0000000000032094	add	x9, x8, #0x1
0000000000032098	stxr	w11, x9, [x10]
000000000003209c	cbnz	w11, 0x32090
00000000000320a0	nop
00000000000320a4	ldr	x12, #0x550ac
00000000000320a8	adr	x10, #0x550a8
00000000000320ac	nop
00000000000320b0	b	0x320c4
00000000000320b4	clrex
00000000000320b8	mov	w13, #0x0
00000000000320bc	mov	x12, x11
00000000000320c0	cbnz	w13, 0x320ec
00000000000320c4	cmp	x12, x8
00000000000320c8	b.gt	0x320ec
00000000000320cc	ldxr	x11, [x10]
00000000000320d0	cmp	x11, x12
00000000000320d4	b.ne	0x320b4
00000000000320d8	stlxr	w12, x9, [x10]
00000000000320dc	cbnz	w12, 0x320b8
00000000000320e0	mov	w13, #0x1
00000000000320e4	mov	x12, x11
00000000000320e8	cbz	w13, 0x320c4
00000000000320ec	adr	x8, #0x55054
00000000000320f0	nop
00000000000320f4	ldxr	x9, [x8]
00000000000320f8	add	x9, x9, #0x1
00000000000320fc	stxr	w10, x9, [x8]
0000000000032100	cbnz	w10, 0x320f4
0000000000032104	ldp	x29, x30, [sp, #0x30]
0000000000032108	ldp	x20, x19, [sp, #0x20]
000000000003210c	ldp	x22, x21, [sp, #0x10]
0000000000032110	add	sp, sp, #0x40
0000000000032114	ret
0000000000032118	mov	w8, #0xee0
000000000003211c	str	x8, [sp]
0000000000032120	adr	x1, #0x2437a ; literal pool for: "unable to allocate thread local heap metadata (%zu bytes)\n"
0000000000032124	nop
0000000000032128	mov	w0, #0xc
000000000003212c	bl	__mi_error_message
0000000000032130	b	0x32088
_mi_option_get:
0000000000032134	sub	sp, sp, #0x130
0000000000032138	stp	x28, x27, [sp, #0xd0]
000000000003213c	stp	x26, x25, [sp, #0xe0]
0000000000032140	stp	x24, x23, [sp, #0xf0]
0000000000032144	stp	x22, x21, [sp, #0x100]
0000000000032148	stp	x20, x19, [sp, #0x110]
000000000003214c	stp	x29, x30, [sp, #0x120]
0000000000032150	add	x29, sp, #0x120
0000000000032154	adr	x25, #0x3a4e4
0000000000032158	nop
000000000003215c	mov	w8, #0x18
0000000000032160	umaddl	x8, w0, w8, x25
0000000000032164	add	x22, x8, #0x398
0000000000032168	ldr	w9, [x8, #0x3a0]
000000000003216c	cbz	w9, 0x32194
0000000000032170	ldr	x0, [x22]
0000000000032174	ldp	x29, x30, [sp, #0x120]
0000000000032178	ldp	x20, x19, [sp, #0x110]
000000000003217c	ldp	x22, x21, [sp, #0x100]
0000000000032180	ldp	x24, x23, [sp, #0xf0]
0000000000032184	ldp	x26, x25, [sp, #0xe0]
0000000000032188	ldp	x28, x27, [sp, #0xd0]
000000000003218c	add	sp, sp, #0x130
0000000000032190	ret
0000000000032194	mov	w19, w0
0000000000032198	add	x8, x8, #0x3a0
000000000003219c	str	x8, [sp, #0x20]
00000000000321a0	strb	wzr, [sp, #0x87]
00000000000321a4	adr	x1, #0x24177 ; literal pool for: "mimalloc_"
00000000000321a8	nop
00000000000321ac	add	x0, sp, #0x87
00000000000321b0	mov	w2, #0x40
00000000000321b4	bl	0x51d4c ; symbol stub for: _strncpy
00000000000321b8	strb	wzr, [sp, #0xc7]
00000000000321bc	mov	w8, #0x18
00000000000321c0	str	x19, [sp, #0x18]
00000000000321c4	madd	x19, x19, x8, x25
00000000000321c8	ldr	x1, [x19, #0x3a8]
00000000000321cc	add	x0, sp, #0x87
00000000000321d0	mov	w2, #0x40
00000000000321d4	mov	w3, #0x41
00000000000321d8	bl	0x5198c ; symbol stub for: ___strncat_chk
00000000000321dc	strb	wzr, [sp, #0xc7]
00000000000321e0	add	x0, sp, #0x87
00000000000321e4	bl	0x51d34 ; symbol stub for: _strlen
00000000000321e8	cbz	x0, 0x322b8
00000000000321ec	mov	x24, x0
00000000000321f0	bl	0x51794 ; symbol stub for: __NSGetEnviron
00000000000321f4	ldr	x8, [x0]
00000000000321f8	str	x8, [sp, #0x30]
00000000000321fc	cbz	x8, 0x322b8
0000000000032200	mov	x28, #0x0
0000000000032204	add	x8, x19, #0x3a8
0000000000032208	str	x8, [sp, #0x10]
000000000003220c	add	x8, sp, #0x87
0000000000032210	add	x8, x8, #0x1
0000000000032214	str	x8, [sp, #0x28]
0000000000032218	b	0x32238
000000000003221c	add	x8, x26, x24
0000000000032220	ldrb	w9, [x8]
0000000000032224	cmp	w9, #0x3d
0000000000032228	b.eq	0x322d4
000000000003222c	add	x28, x28, #0x1
0000000000032230	cmp	x28, #0x100
0000000000032234	b.eq	0x322b8
0000000000032238	ldr	x8, [sp, #0x30]
000000000003223c	ldr	x26, [x8, x28, lsl #3]
0000000000032240	cbz	x26, 0x322b8
0000000000032244	ldrb	w8, [sp, #0x87]
0000000000032248	cbz	w8, 0x3229c
000000000003224c	ldr	x27, [sp, #0x28]
0000000000032250	mov	x19, x24
0000000000032254	mov	x23, x26
0000000000032258	cbz	x19, 0x32294
000000000003225c	ldrb	w9, [x23]
0000000000032260	cbz	w9, 0x32294
0000000000032264	sxtb	w20, w9
0000000000032268	sxtb	w0, w8
000000000003226c	bl	0x51998 ; symbol stub for: ___toupper
0000000000032270	mov	x21, x0
0000000000032274	mov	x0, x20
0000000000032278	bl	0x51998 ; symbol stub for: ___toupper
000000000003227c	cmp	w21, w0
0000000000032280	b.ne	0x322a4
0000000000032284	add	x23, x23, #0x1
0000000000032288	sub	x19, x19, #0x1
000000000003228c	ldrb	w8, [x27], #0x1
0000000000032290	cbnz	w8, 0x32258
0000000000032294	cbnz	x19, 0x322a8
0000000000032298	b	0x3221c
000000000003229c	mov	x23, x26
00000000000322a0	b	0x322a8
00000000000322a4	ldurb	w8, [x27, #-0x1]
00000000000322a8	ldrb	w9, [x23]
00000000000322ac	cmp	w9, w8, uxtb
00000000000322b0	b.eq	0x3221c
00000000000322b4	b	0x3222c
00000000000322b8	adrp	x8, 84 ; 0x86000
00000000000322bc	ldrb	w8, [x8, #0xa46]
00000000000322c0	cmp	w8, #0x1
00000000000322c4	b.ne	0x32170
00000000000322c8	ldr	x9, [sp, #0x20]
00000000000322cc	str	w8, [x9]
00000000000322d0	b	0x32170
00000000000322d4	add	x1, x8, #0x1
00000000000322d8	strb	wzr, [sp, #0x46]
00000000000322dc	mov	w19, #0x40
00000000000322e0	add	x0, sp, #0x46
00000000000322e4	mov	w2, #0x40
00000000000322e8	bl	0x51d4c ; symbol stub for: _strncpy
00000000000322ec	strb	wzr, [sp, #0x86]
00000000000322f0	add	x0, sp, #0x46
00000000000322f4	bl	0x51d34 ; symbol stub for: _strlen
00000000000322f8	cmp	x0, #0x40
00000000000322fc	csel	x19, x0, x19, lo
0000000000032300	cbz	x19, 0x32324
0000000000032304	add	x20, sp, #0x87
0000000000032308	add	x21, sp, #0x46
000000000003230c	mov	x23, x19
0000000000032310	ldrsb	w0, [x21], #0x1
0000000000032314	bl	0x51998 ; symbol stub for: ___toupper
0000000000032318	strb	w0, [x20], #0x1
000000000003231c	subs	x23, x23, #0x1
0000000000032320	b.ne	0x32310
0000000000032324	add	x8, sp, #0x87
0000000000032328	strb	wzr, [x8, x19]
000000000003232c	ldrb	w8, [sp, #0x87]
0000000000032330	cbz	w8, 0x32348
0000000000032334	adr	x0, #0x23ff1 ; literal pool for: "1;TRUE;YES;ON"
0000000000032338	nop
000000000003233c	add	x1, sp, #0x87
0000000000032340	bl	0x51d64 ; symbol stub for: _strstr
0000000000032344	cbz	x0, 0x32358
0000000000032348	mov	w8, #0x1
000000000003234c	str	x8, [x22]
0000000000032350	mov	w8, #0x2
0000000000032354	b	0x322c8
0000000000032358	adr	x0, #0x23fdb ; literal pool for: "0;FALSE;NO;OFF"
000000000003235c	nop
0000000000032360	add	x19, sp, #0x87
0000000000032364	add	x1, sp, #0x87
0000000000032368	bl	0x51d64 ; symbol stub for: _strstr
000000000003236c	cbz	x0, 0x3237c
0000000000032370	str	xzr, [x22]
0000000000032374	mov	w8, #0x2
0000000000032378	b	0x322c8
000000000003237c	str	x19, [sp, #0x38]
0000000000032380	add	x0, sp, #0x87
0000000000032384	add	x1, sp, #0x38
0000000000032388	mov	w2, #0xa
000000000003238c	bl	0x51d70 ; symbol stub for: _strtol
0000000000032390	mov	w8, #0x18
0000000000032394	ldr	x9, [sp, #0x18]
0000000000032398	madd	x8, x9, x8, x25
000000000003239c	ldr	w9, [x8, #0x3a4]
00000000000323a0	ldr	x8, [sp, #0x38]
00000000000323a4	cmp	w9, #0x8
00000000000323a8	b.ne	0x323fc
00000000000323ac	ldrb	w9, [x8]
00000000000323b0	cmp	w9, #0x47
00000000000323b4	b.eq	0x323d4
00000000000323b8	cmp	w9, #0x4d
00000000000323bc	b.eq	0x323dc
00000000000323c0	cmp	w9, #0x4b
00000000000323c4	b.eq	0x323e0
00000000000323c8	add	x10, x0, #0x3ff
00000000000323cc	lsr	x0, x10, #10
00000000000323d0	b	0x323ec
00000000000323d4	lsl	x0, x0, #20
00000000000323d8	b	0x323e0
00000000000323dc	lsl	x0, x0, #10
00000000000323e0	add	x8, x8, #0x1
00000000000323e4	str	x8, [sp, #0x38]
00000000000323e8	ldrb	w9, [x8]
00000000000323ec	cmp	w9, #0x42
00000000000323f0	b.ne	0x323fc
00000000000323f4	add	x8, x8, #0x1
00000000000323f8	str	x8, [sp, #0x38]
00000000000323fc	ldrb	w8, [x8]
0000000000032400	cbz	w8, 0x32428
0000000000032404	ldr	x8, [sp, #0x10]
0000000000032408	ldr	x8, [x8]
000000000003240c	add	x9, sp, #0x87
0000000000032410	stp	x8, x9, [sp]
0000000000032414	adr	x0, #0x23f2e ; literal pool for: "environment option mimalloc_%s has an invalid value: %s\n"
0000000000032418	nop
000000000003241c	bl	__mi_warning_message
0000000000032420	mov	w8, #0x1
0000000000032424	b	0x322c8
0000000000032428	str	x0, [x22]
000000000003242c	mov	w8, #0x2
0000000000032430	b	0x322c8
__mi_os_alloc_aligned:
0000000000032434	sub	sp, sp, #0x90
0000000000032438	stp	x28, x27, [sp, #0x30]
000000000003243c	stp	x26, x25, [sp, #0x40]
0000000000032440	stp	x24, x23, [sp, #0x50]
0000000000032444	stp	x22, x21, [sp, #0x60]
0000000000032448	stp	x20, x19, [sp, #0x70]
000000000003244c	stp	x29, x30, [sp, #0x80]
0000000000032450	add	x29, sp, #0x80
0000000000032454	cbz	x0, 0x32554
0000000000032458	mov	x23, x2
000000000003245c	mov	x19, x1
0000000000032460	lsr	x8, x0, #19
0000000000032464	adrp	x28, 58 ; 0x6c000
0000000000032468	cbnz	x8, 0x32474
000000000003246c	ldr	x8, [x28, #0x640]
0000000000032470	b	0x324a8
0000000000032474	cmp	x0, #0x200, lsl #12
0000000000032478	b.hs	0x32484
000000000003247c	mov	w8, #0x10000
0000000000032480	b	0x324a8
0000000000032484	cmp	x0, #0x800, lsl #12
0000000000032488	b.hs	0x32494
000000000003248c	mov	w8, #0x40000
0000000000032490	b	0x324a8
0000000000032494	lsr	x8, x0, #25
0000000000032498	cmp	x8, #0x0
000000000003249c	mov	w8, #0x400000
00000000000324a0	mov	w9, #0x100000
00000000000324a4	csel	x8, x9, x8, eq
00000000000324a8	mvn	x9, x8
00000000000324ac	cmp	x9, x0
00000000000324b0	b.ls	0x324dc
00000000000324b4	add	x9, x0, x8
00000000000324b8	sub	x9, x9, #0x1
00000000000324bc	sub	x10, x8, #0x1
00000000000324c0	tst	x8, x10
00000000000324c4	b.ne	0x324d4
00000000000324c8	neg	x8, x8
00000000000324cc	and	x0, x9, x8
00000000000324d0	b	0x324dc
00000000000324d4	udiv	x9, x9, x8
00000000000324d8	mul	x0, x9, x8
00000000000324dc	ldr	x8, [x28, #0x640]
00000000000324e0	fmov	d0, x8
00000000000324e4	cnt.8b	v0, v0
00000000000324e8	uaddlv.8b	h0, v0
00000000000324ec	fmov	w9, s0
00000000000324f0	mov	w10, #0x3fffff
00000000000324f4	add	x10, x8, x10
00000000000324f8	udiv	x11, x10, x8
00000000000324fc	mul	x11, x11, x8
0000000000032500	neg	x12, x8
0000000000032504	and	x10, x10, x12
0000000000032508	cmp	x9, #0x1
000000000003250c	csel	x21, x11, x10, hi
0000000000032510	strb	wzr, [sp, #0x2f]
0000000000032514	cbz	x23, 0x32528
0000000000032518	ldrb	w10, [x23]
000000000003251c	strb	w10, [sp, #0x2f]
0000000000032520	strb	wzr, [x23]
0000000000032524	b	0x32530
0000000000032528	mov	w10, #0x0
000000000003252c	add	x23, sp, #0x2f
0000000000032530	cmp	w10, #0x0
0000000000032534	cset	w10, ne
0000000000032538	fmov	d0, x21
000000000003253c	cnt.8b	v0, v0
0000000000032540	uaddlv.8b	h0, v0
0000000000032544	fmov	w11, s0
0000000000032548	cmp	x8, x21
000000000003254c	ccmp	x11, #0x1, #0x2, ls
0000000000032550	b.ls	0x3257c
0000000000032554	mov	x20, #0x0
0000000000032558	mov	x0, x20
000000000003255c	ldp	x29, x30, [sp, #0x80]
0000000000032560	ldp	x20, x19, [sp, #0x70]
0000000000032564	ldp	x22, x21, [sp, #0x60]
0000000000032568	ldp	x24, x23, [sp, #0x50]
000000000003256c	ldp	x26, x25, [sp, #0x40]
0000000000032570	ldp	x28, x27, [sp, #0x30]
0000000000032574	add	sp, sp, #0x90
0000000000032578	ret
000000000003257c	sub	x11, x8, #0x1
0000000000032580	add	x11, x11, x0
0000000000032584	cmp	x9, #0x1
0000000000032588	b.hi	0x3259c
000000000003258c	neg	x8, x8
0000000000032590	and	x22, x11, x8
0000000000032594	cbnz	x22, 0x325a8
0000000000032598	b	0x32554
000000000003259c	udiv	x9, x11, x8
00000000000325a0	mul	x22, x9, x8
00000000000325a4	cbz	x22, 0x32554
00000000000325a8	and	w26, w10, w19
00000000000325ac	cmp	w19, #0x0
00000000000325b0	mov	w8, #0x3
00000000000325b4	csel	w24, w8, wzr, ne
00000000000325b8	mov	w0, #0x11
00000000000325bc	bl	_mi_option_get
00000000000325c0	sub	w8, w0, #0x64
00000000000325c4	lsl	w9, w0, #24
00000000000325c8	cmp	w8, #0x9b
00000000000325cc	mov	w8, #0x64000000
00000000000325d0	csel	w25, w8, w9, hi
00000000000325d4	adrp	x8, 84 ; 0x86000
00000000000325d8	ldrb	w8, [x8, #0xa48]
00000000000325dc	cmp	w8, #0x1
00000000000325e0	b.ne	0x32668
00000000000325e4	mov	w0, #0x6
00000000000325e8	bl	_mi_option_get
00000000000325ec	cbz	x0, 0x32668
00000000000325f0	orr	w8, w21, w22
00000000000325f4	tst	x8, #0x1fffff
00000000000325f8	b.ne	0x32668
00000000000325fc	eor	w8, w26, #0x1
0000000000032600	tbnz	w8, #0x0, 0x32668
0000000000032604	adr	x27, #0x54524
0000000000032608	nop
000000000003260c	ldar	x8, [x27]
0000000000032610	cbz	x8, 0x32630
0000000000032614	sub	x9, x8, #0x1
0000000000032618	ldaxr	x10, [x27]
000000000003261c	cmp	x10, x8
0000000000032620	b.ne	0x32664
0000000000032624	stlxr	w10, x9, [x27]
0000000000032628	cbnz	w10, 0x32618
000000000003262c	b	0x32668
0000000000032630	orr	w4, w25, #0x20000
0000000000032634	mov	w8, #0x1
0000000000032638	strb	w8, [x23]
000000000003263c	mov	x0, x22
0000000000032640	mov	x1, x21
0000000000032644	mov	x2, x24
0000000000032648	mov	w3, #0x1002
000000000003264c	bl	_mi_unix_mmapx
0000000000032650	mov	x20, x0
0000000000032654	cbnz	x0, 0x3268c
0000000000032658	mov	w8, #0xa
000000000003265c	stlr	x8, [x27]
0000000000032660	b	0x32668
0000000000032664	clrex
0000000000032668	strb	wzr, [x23]
000000000003266c	mov	x0, x22
0000000000032670	mov	x1, x21
0000000000032674	mov	x2, x24
0000000000032678	mov	w3, #0x1042
000000000003267c	mov	x4, x25
0000000000032680	bl	_mi_unix_mmapx
0000000000032684	mov	x20, x0
0000000000032688	cbz	x0, 0x32714
000000000003268c	adr	x27, #0x54a0c
0000000000032690	nop
0000000000032694	ldxr	x8, [x27]
0000000000032698	add	x8, x8, x22
000000000003269c	stxr	w9, x8, [x27]
00000000000326a0	cbnz	w9, 0x32694
00000000000326a4	adrp	x25, 85 ; 0x87000
00000000000326a8	ldr	x10, [x25, #0x90]
00000000000326ac	adr	x26, #0x549e4
00000000000326b0	nop
00000000000326b4	b	0x326c8
00000000000326b8	clrex
00000000000326bc	mov	w11, #0x0
00000000000326c0	mov	x10, x9
00000000000326c4	cbnz	w11, 0x326f0
00000000000326c8	cmp	x10, x8
00000000000326cc	b.ge	0x326f0
00000000000326d0	ldxr	x9, [x26]
00000000000326d4	cmp	x9, x10
00000000000326d8	b.ne	0x326b8
00000000000326dc	stlxr	w10, x8, [x26]
00000000000326e0	cbnz	w10, 0x326bc
00000000000326e4	mov	w11, #0x1
00000000000326e8	mov	x10, x9
00000000000326ec	cbz	w11, 0x326c8
00000000000326f0	cmp	x22, #0x1
00000000000326f4	b.lt	0x32738
00000000000326f8	adr	x8, #0x54988
00000000000326fc	nop
0000000000032700	ldxr	x9, [x8]
0000000000032704	add	x9, x9, x22
0000000000032708	stxr	w10, x9, [x8]
000000000003270c	cbnz	w10, 0x32700
0000000000032710	b	0x32754
0000000000032714	bl	0x51980 ; symbol stub for: ___error
0000000000032718	ldr	w8, [x0]
000000000003271c	stp	xzr, xzr, [sp, #0x10]
0000000000032720	str	x26, [sp, #0x20]
0000000000032724	stp	x22, x8, [sp]
0000000000032728	adr	x0, #0x23ab7 ; literal pool for: "unable to allocate OS memory (%zu bytes, error code: %i, address: %p, large only: %d, allow large: %d)\n"
000000000003272c	nop
0000000000032730	bl	__mi_warning_message
0000000000032734	b	0x32558
0000000000032738	neg	x8, x22
000000000003273c	adr	x9, #0x5494c
0000000000032740	nop
0000000000032744	ldxr	x10, [x9]
0000000000032748	add	x10, x10, x8
000000000003274c	stxr	w11, x10, [x9]
0000000000032750	cbnz	w11, 0x32744
0000000000032754	cbz	w19, 0x327fc
0000000000032758	adr	x9, #0x54960
000000000003275c	nop
0000000000032760	ldxr	x8, [x9]
0000000000032764	add	x8, x8, x22
0000000000032768	stxr	w10, x8, [x9]
000000000003276c	cbnz	w10, 0x32760
0000000000032770	nop
0000000000032774	ldr	x11, #0x5493c
0000000000032778	adr	x9, #0x54938
000000000003277c	nop
0000000000032780	b	0x32794
0000000000032784	clrex
0000000000032788	mov	w12, #0x0
000000000003278c	mov	x11, x10
0000000000032790	cbnz	w12, 0x327bc
0000000000032794	cmp	x11, x8
0000000000032798	b.ge	0x327bc
000000000003279c	ldxr	x10, [x9]
00000000000327a0	cmp	x10, x11
00000000000327a4	b.ne	0x32784
00000000000327a8	stlxr	w11, x8, [x9]
00000000000327ac	cbnz	w11, 0x32788
00000000000327b0	mov	w12, #0x1
00000000000327b4	mov	x11, x10
00000000000327b8	cbz	w12, 0x32794
00000000000327bc	cmp	x22, #0x1
00000000000327c0	b.lt	0x327e0
00000000000327c4	adr	x8, #0x548dc
00000000000327c8	nop
00000000000327cc	ldxr	x9, [x8]
00000000000327d0	add	x9, x9, x22
00000000000327d4	stxr	w10, x9, [x8]
00000000000327d8	cbnz	w10, 0x327cc
00000000000327dc	b	0x327fc
00000000000327e0	neg	x8, x22
00000000000327e4	adr	x9, #0x548c4
00000000000327e8	nop
00000000000327ec	ldxr	x10, [x9]
00000000000327f0	add	x10, x10, x8
00000000000327f4	stxr	w11, x10, [x9]
00000000000327f8	cbnz	w11, 0x327ec
00000000000327fc	udiv	x8, x20, x21
0000000000032800	msub	x8, x8, x21, x20
0000000000032804	cbz	x8, 0x32558
0000000000032808	mov	x0, x20
000000000003280c	mov	x1, x22
0000000000032810	bl	0x51af4 ; symbol stub for: _munmap
0000000000032814	neg	x8, x22
0000000000032818	cbz	w19, 0x328bc
000000000003281c	adr	x9, #0x5489c
0000000000032820	nop
0000000000032824	ldxr	x10, [x9]
0000000000032828	add	x11, x10, x8
000000000003282c	stxr	w12, x11, [x9]
0000000000032830	cbnz	w12, 0x32824
0000000000032834	sub	x9, x10, x22
0000000000032838	nop
000000000003283c	ldr	x12, #0x54874
0000000000032840	adr	x10, #0x54870
0000000000032844	nop
0000000000032848	b	0x3285c
000000000003284c	clrex
0000000000032850	mov	w13, #0x0
0000000000032854	mov	x12, x11
0000000000032858	cbnz	w13, 0x32884
000000000003285c	cmp	x12, x9
0000000000032860	b.ge	0x32884
0000000000032864	ldxr	x11, [x10]
0000000000032868	cmp	x11, x12
000000000003286c	b.ne	0x3284c
0000000000032870	stlxr	w12, x9, [x10]
0000000000032874	cbnz	w12, 0x32850
0000000000032878	mov	w13, #0x1
000000000003287c	mov	x12, x11
0000000000032880	cbz	w13, 0x3285c
0000000000032884	tbnz	x22, #0x3f, 0x328a4
0000000000032888	adr	x9, #0x54820
000000000003288c	nop
0000000000032890	ldxr	x10, [x9]
0000000000032894	add	x10, x10, x22
0000000000032898	stxr	w11, x10, [x9]
000000000003289c	cbnz	w11, 0x32890
00000000000328a0	b	0x328bc
00000000000328a4	adr	x9, #0x547fc
00000000000328a8	nop
00000000000328ac	ldxr	x10, [x9]
00000000000328b0	add	x10, x10, x8
00000000000328b4	stxr	w11, x10, [x9]
00000000000328b8	cbnz	w11, 0x328ac
00000000000328bc	ldxr	x9, [x27]
00000000000328c0	add	x10, x9, x8
00000000000328c4	stxr	w11, x10, [x27]
00000000000328c8	cbnz	w11, 0x328bc
00000000000328cc	sub	x9, x9, x22
00000000000328d0	ldr	x11, [x25, #0x90]
00000000000328d4	b	0x328e8
00000000000328d8	clrex
00000000000328dc	mov	w12, #0x0
00000000000328e0	mov	x11, x10
00000000000328e4	cbnz	w12, 0x32910
00000000000328e8	cmp	x11, x9
00000000000328ec	b.ge	0x32910
00000000000328f0	ldxr	x10, [x26]
00000000000328f4	cmp	x10, x11
00000000000328f8	b.ne	0x328d8
00000000000328fc	stlxr	w11, x9, [x26]
0000000000032900	cbnz	w11, 0x328dc
0000000000032904	mov	w12, #0x1
0000000000032908	mov	x11, x10
000000000003290c	cbz	w12, 0x328e8
0000000000032910	tbnz	x22, #0x3f, 0x32930
0000000000032914	adr	x8, #0x54774
0000000000032918	nop
000000000003291c	ldxr	x9, [x8]
0000000000032920	add	x9, x9, x22
0000000000032924	stxr	w10, x9, [x8]
0000000000032928	cbnz	w10, 0x3291c
000000000003292c	b	0x32948
0000000000032930	adr	x9, #0x54750
0000000000032934	nop
0000000000032938	ldxr	x10, [x9]
000000000003293c	add	x10, x10, x8
0000000000032940	stxr	w11, x10, [x9]
0000000000032944	cbnz	w11, 0x32938
0000000000032948	cmn	w0, #0x1
000000000003294c	b.ne	0x32970
0000000000032950	bl	0x51980 ; symbol stub for: ___error
0000000000032954	ldr	w0, [x0]
0000000000032958	bl	0x51d28 ; symbol stub for: _strerror
000000000003295c	stp	x20, x22, [sp, #0x8]
0000000000032960	str	x0, [sp]
0000000000032964	adr	x0, #0x2383d ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
0000000000032968	nop
000000000003296c	bl	__mi_warning_message
0000000000032970	mvn	x8, x21
0000000000032974	cmp	x22, x8
0000000000032978	b.hs	0x32554
000000000003297c	adds	x25, x22, x21
0000000000032980	b.eq	0x32554
0000000000032984	mov	w0, #0x11
0000000000032988	bl	_mi_option_get
000000000003298c	sub	w8, w0, #0x64
0000000000032990	lsl	w9, w0, #24
0000000000032994	cmp	w8, #0x9b
0000000000032998	mov	w8, #0x64000000
000000000003299c	csel	w20, w8, w9, hi
00000000000329a0	adrp	x8, 84 ; 0x86000
00000000000329a4	ldrb	w8, [x8, #0xa48]
00000000000329a8	cmp	w8, #0x1
00000000000329ac	b.ne	0x329b8
00000000000329b0	mov	w0, #0x6
00000000000329b4	bl	_mi_option_get
00000000000329b8	strb	wzr, [x23]
00000000000329bc	mov	x0, x25
00000000000329c0	mov	x1, x21
00000000000329c4	mov	x2, x24
00000000000329c8	mov	w3, #0x1042
00000000000329cc	mov	x4, x20
00000000000329d0	bl	_mi_unix_mmapx
00000000000329d4	cbz	x0, 0x32a54
00000000000329d8	mov	x23, x0
00000000000329dc	ldxr	x8, [x27]
00000000000329e0	add	x8, x8, x25
00000000000329e4	stxr	w9, x8, [x27]
00000000000329e8	cbnz	w9, 0x329dc
00000000000329ec	nop
00000000000329f0	ldr	x10, #0x546a0
00000000000329f4	b	0x32a08
00000000000329f8	clrex
00000000000329fc	mov	w11, #0x0
0000000000032a00	mov	x10, x9
0000000000032a04	cbnz	w11, 0x32a30
0000000000032a08	cmp	x10, x8
0000000000032a0c	b.ge	0x32a30
0000000000032a10	ldxr	x9, [x26]
0000000000032a14	cmp	x9, x10
0000000000032a18	b.ne	0x329f8
0000000000032a1c	stlxr	w10, x8, [x26]
0000000000032a20	cbnz	w10, 0x329fc
0000000000032a24	mov	w11, #0x1
0000000000032a28	mov	x10, x9
0000000000032a2c	cbz	w11, 0x32a08
0000000000032a30	cmp	x25, #0x1
0000000000032a34	b.lt	0x32a7c
0000000000032a38	adr	x8, #0x54648
0000000000032a3c	nop
0000000000032a40	ldxr	x9, [x8]
0000000000032a44	add	x9, x9, x25
0000000000032a48	stxr	w10, x9, [x8]
0000000000032a4c	cbnz	w10, 0x32a40
0000000000032a50	b	0x32a98
0000000000032a54	bl	0x51980 ; symbol stub for: ___error
0000000000032a58	ldr	w8, [x0]
0000000000032a5c	stp	xzr, xzr, [sp, #0x10]
0000000000032a60	str	xzr, [sp, #0x20]
0000000000032a64	stp	x25, x8, [sp]
0000000000032a68	adr	x0, #0x23777 ; literal pool for: "unable to allocate OS memory (%zu bytes, error code: %i, address: %p, large only: %d, allow large: %d)\n"
0000000000032a6c	nop
0000000000032a70	bl	__mi_warning_message
0000000000032a74	mov	x20, #0x0
0000000000032a78	b	0x32558
0000000000032a7c	neg	x8, x25
0000000000032a80	adr	x9, #0x54608
0000000000032a84	nop
0000000000032a88	ldxr	x10, [x9]
0000000000032a8c	add	x10, x10, x8
0000000000032a90	stxr	w11, x10, [x9]
0000000000032a94	cbnz	w11, 0x32a88
0000000000032a98	cbz	w19, 0x32b40
0000000000032a9c	adr	x9, #0x5461c
0000000000032aa0	nop
0000000000032aa4	ldxr	x8, [x9]
0000000000032aa8	add	x8, x8, x25
0000000000032aac	stxr	w10, x8, [x9]
0000000000032ab0	cbnz	w10, 0x32aa4
0000000000032ab4	nop
0000000000032ab8	ldr	x11, #0x545f8
0000000000032abc	adr	x9, #0x545f4
0000000000032ac0	nop
0000000000032ac4	b	0x32ad8
0000000000032ac8	clrex
0000000000032acc	mov	w12, #0x0
0000000000032ad0	mov	x11, x10
0000000000032ad4	cbnz	w12, 0x32b00
0000000000032ad8	cmp	x11, x8
0000000000032adc	b.ge	0x32b00
0000000000032ae0	ldxr	x10, [x9]
0000000000032ae4	cmp	x10, x11
0000000000032ae8	b.ne	0x32ac8
0000000000032aec	stlxr	w11, x8, [x9]
0000000000032af0	cbnz	w11, 0x32acc
0000000000032af4	mov	w12, #0x1
0000000000032af8	mov	x11, x10
0000000000032afc	cbz	w12, 0x32ad8
0000000000032b00	cmp	x25, #0x1
0000000000032b04	b.lt	0x32b24
0000000000032b08	adr	x8, #0x54598
0000000000032b0c	nop
0000000000032b10	ldxr	x9, [x8]
0000000000032b14	add	x9, x9, x25
0000000000032b18	stxr	w10, x9, [x8]
0000000000032b1c	cbnz	w10, 0x32b10
0000000000032b20	b	0x32b40
0000000000032b24	neg	x8, x25
0000000000032b28	adr	x9, #0x54580
0000000000032b2c	nop
0000000000032b30	ldxr	x10, [x9]
0000000000032b34	add	x10, x10, x8
0000000000032b38	stxr	w11, x10, [x9]
0000000000032b3c	cbnz	w11, 0x32b30
0000000000032b40	add	x8, x21, x23
0000000000032b44	sub	x8, x8, #0x1
0000000000032b48	neg	x9, x21
0000000000032b4c	and	x20, x8, x9
0000000000032b50	ldr	x8, [x28, #0x640]
0000000000032b54	add	x9, x22, x8
0000000000032b58	sub	x9, x9, #0x1
0000000000032b5c	sub	x10, x8, #0x1
0000000000032b60	udiv	x11, x9, x8
0000000000032b64	mul	x11, x11, x8
0000000000032b68	neg	x12, x8
0000000000032b6c	and	x9, x9, x12
0000000000032b70	tst	x8, x10
0000000000032b74	csel	x24, x11, x9, ne
0000000000032b78	sub	x22, x20, x23
0000000000032b7c	sub	x8, x25, x22
0000000000032b80	sub	x21, x8, x24
0000000000032b84	adrp	x25, 85 ; 0x87000
0000000000032b88	cbz	x22, 0x32cf4
0000000000032b8c	mov	x0, x23
0000000000032b90	mov	x1, x22
0000000000032b94	bl	0x51af4 ; symbol stub for: _munmap
0000000000032b98	neg	x8, x22
0000000000032b9c	cbz	w19, 0x32c40
0000000000032ba0	adr	x9, #0x54518
0000000000032ba4	nop
0000000000032ba8	ldxr	x10, [x9]
0000000000032bac	add	x11, x10, x8
0000000000032bb0	stxr	w12, x11, [x9]
0000000000032bb4	cbnz	w12, 0x32ba8
0000000000032bb8	sub	x9, x10, x22
0000000000032bbc	nop
0000000000032bc0	ldr	x12, #0x544f0
0000000000032bc4	adr	x10, #0x544ec
0000000000032bc8	nop
0000000000032bcc	b	0x32be0
0000000000032bd0	clrex
0000000000032bd4	mov	w13, #0x0
0000000000032bd8	mov	x12, x11
0000000000032bdc	cbnz	w13, 0x32c08
0000000000032be0	cmp	x12, x9
0000000000032be4	b.ge	0x32c08
0000000000032be8	ldxr	x11, [x10]
0000000000032bec	cmp	x11, x12
0000000000032bf0	b.ne	0x32bd0
0000000000032bf4	stlxr	w12, x9, [x10]
0000000000032bf8	cbnz	w12, 0x32bd4
0000000000032bfc	mov	w13, #0x1
0000000000032c00	mov	x12, x11
0000000000032c04	cbz	w13, 0x32be0
0000000000032c08	tbnz	x22, #0x3f, 0x32c28
0000000000032c0c	adr	x9, #0x5449c
0000000000032c10	nop
0000000000032c14	ldxr	x10, [x9]
0000000000032c18	add	x10, x10, x22
0000000000032c1c	stxr	w11, x10, [x9]
0000000000032c20	cbnz	w11, 0x32c14
0000000000032c24	b	0x32c40
0000000000032c28	adr	x9, #0x54478
0000000000032c2c	nop
0000000000032c30	ldxr	x10, [x9]
0000000000032c34	add	x10, x10, x8
0000000000032c38	stxr	w11, x10, [x9]
0000000000032c3c	cbnz	w11, 0x32c30
0000000000032c40	ldxr	x9, [x27]
0000000000032c44	add	x10, x9, x8
0000000000032c48	stxr	w11, x10, [x27]
0000000000032c4c	cbnz	w11, 0x32c40
0000000000032c50	sub	x9, x9, x22
0000000000032c54	ldr	x11, [x25, #0x90]
0000000000032c58	b	0x32c6c
0000000000032c5c	clrex
0000000000032c60	mov	w12, #0x0
0000000000032c64	mov	x11, x10
0000000000032c68	cbnz	w12, 0x32c94
0000000000032c6c	cmp	x11, x9
0000000000032c70	b.ge	0x32c94
0000000000032c74	ldxr	x10, [x26]
0000000000032c78	cmp	x10, x11
0000000000032c7c	b.ne	0x32c5c
0000000000032c80	stlxr	w11, x9, [x26]
0000000000032c84	cbnz	w11, 0x32c60
0000000000032c88	mov	w12, #0x1
0000000000032c8c	mov	x11, x10
0000000000032c90	cbz	w12, 0x32c6c
0000000000032c94	tbnz	x22, #0x3f, 0x32cb4
0000000000032c98	adr	x8, #0x543f0
0000000000032c9c	nop
0000000000032ca0	ldxr	x9, [x8]
0000000000032ca4	add	x9, x9, x22
0000000000032ca8	stxr	w10, x9, [x8]
0000000000032cac	cbnz	w10, 0x32ca0
0000000000032cb0	b	0x32ccc
0000000000032cb4	adr	x9, #0x543cc
0000000000032cb8	nop
0000000000032cbc	ldxr	x10, [x9]
0000000000032cc0	add	x10, x10, x8
0000000000032cc4	stxr	w11, x10, [x9]
0000000000032cc8	cbnz	w11, 0x32cbc
0000000000032ccc	cmn	w0, #0x1
0000000000032cd0	b.ne	0x32cf4
0000000000032cd4	bl	0x51980 ; symbol stub for: ___error
0000000000032cd8	ldr	w0, [x0]
0000000000032cdc	bl	0x51d28 ; symbol stub for: _strerror
0000000000032ce0	stp	x23, x22, [sp, #0x8]
0000000000032ce4	str	x0, [sp]
0000000000032ce8	adr	x0, #0x234b9 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
0000000000032cec	nop
0000000000032cf0	bl	__mi_warning_message
0000000000032cf4	cbz	x21, 0x32558
0000000000032cf8	cbz	x20, 0x32558
0000000000032cfc	add	x22, x20, x24
0000000000032d00	mov	x0, x22
0000000000032d04	mov	x1, x21
0000000000032d08	bl	0x51af4 ; symbol stub for: _munmap
0000000000032d0c	neg	x8, x21
0000000000032d10	cbz	w19, 0x32db4
0000000000032d14	adr	x9, #0x543a4
0000000000032d18	nop
0000000000032d1c	ldxr	x10, [x9]
0000000000032d20	add	x11, x10, x8
0000000000032d24	stxr	w12, x11, [x9]
0000000000032d28	cbnz	w12, 0x32d1c
0000000000032d2c	sub	x9, x10, x21
0000000000032d30	nop
0000000000032d34	ldr	x12, #0x5437c
0000000000032d38	adr	x10, #0x54378
0000000000032d3c	nop
0000000000032d40	b	0x32d54
0000000000032d44	clrex
0000000000032d48	mov	w13, #0x0
0000000000032d4c	mov	x12, x11
0000000000032d50	cbnz	w13, 0x32d7c
0000000000032d54	cmp	x12, x9
0000000000032d58	b.ge	0x32d7c
0000000000032d5c	ldxr	x11, [x10]
0000000000032d60	cmp	x11, x12
0000000000032d64	b.ne	0x32d44
0000000000032d68	stlxr	w12, x9, [x10]
0000000000032d6c	cbnz	w12, 0x32d48
0000000000032d70	mov	w13, #0x1
0000000000032d74	mov	x12, x11
0000000000032d78	cbz	w13, 0x32d54
0000000000032d7c	tbnz	x21, #0x3f, 0x32d9c
0000000000032d80	adr	x9, #0x54328
0000000000032d84	nop
0000000000032d88	ldxr	x10, [x9]
0000000000032d8c	add	x10, x10, x21
0000000000032d90	stxr	w11, x10, [x9]
0000000000032d94	cbnz	w11, 0x32d88
0000000000032d98	b	0x32db4
0000000000032d9c	adr	x9, #0x54304
0000000000032da0	nop
0000000000032da4	ldxr	x10, [x9]
0000000000032da8	add	x10, x10, x8
0000000000032dac	stxr	w11, x10, [x9]
0000000000032db0	cbnz	w11, 0x32da4
0000000000032db4	ldxr	x9, [x27]
0000000000032db8	add	x10, x9, x8
0000000000032dbc	stxr	w11, x10, [x27]
0000000000032dc0	cbnz	w11, 0x32db4
0000000000032dc4	sub	x9, x9, x21
0000000000032dc8	ldr	x11, [x25, #0x90]
0000000000032dcc	b	0x32de0
0000000000032dd0	clrex
0000000000032dd4	mov	w12, #0x0
0000000000032dd8	mov	x11, x10
0000000000032ddc	cbnz	w12, 0x32e08
0000000000032de0	cmp	x11, x9
0000000000032de4	b.ge	0x32e08
0000000000032de8	ldxr	x10, [x26]
0000000000032dec	cmp	x10, x11
0000000000032df0	b.ne	0x32dd0
0000000000032df4	stlxr	w11, x9, [x26]
0000000000032df8	cbnz	w11, 0x32dd4
0000000000032dfc	mov	w12, #0x1
0000000000032e00	mov	x11, x10
0000000000032e04	cbz	w12, 0x32de0
0000000000032e08	tbnz	x21, #0x3f, 0x32e28
0000000000032e0c	adr	x8, #0x5427c
0000000000032e10	nop
0000000000032e14	ldxr	x9, [x8]
0000000000032e18	add	x9, x9, x21
0000000000032e1c	stxr	w10, x9, [x8]
0000000000032e20	cbnz	w10, 0x32e14
0000000000032e24	b	0x32e40
0000000000032e28	adr	x9, #0x54258
0000000000032e2c	nop
0000000000032e30	ldxr	x10, [x9]
0000000000032e34	add	x10, x10, x8
0000000000032e38	stxr	w11, x10, [x9]
0000000000032e3c	cbnz	w11, 0x32e30
0000000000032e40	cmn	w0, #0x1
0000000000032e44	b.ne	0x32558
0000000000032e48	bl	0x51980 ; symbol stub for: ___error
0000000000032e4c	ldr	w0, [x0]
0000000000032e50	bl	0x51d28 ; symbol stub for: _strerror
0000000000032e54	stp	x22, x21, [sp, #0x8]
0000000000032e58	str	x0, [sp]
0000000000032e5c	adr	x0, #0x23345 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
0000000000032e60	nop
0000000000032e64	b	0x32730
__mi_os_alloc:
0000000000032e68	sub	sp, sp, #0x50
0000000000032e6c	stp	x20, x19, [sp, #0x30]
0000000000032e70	stp	x29, x30, [sp, #0x40]
0000000000032e74	add	x29, sp, #0x40
0000000000032e78	mov	x19, x0
0000000000032e7c	lsr	x8, x0, #19
0000000000032e80	cbnz	x8, 0x32e90
0000000000032e84	nop
0000000000032e88	ldr	x8, #0x397b8
0000000000032e8c	b	0x32ec0
0000000000032e90	cmp	x19, #0x200, lsl #12
0000000000032e94	b.hs	0x32ea0
0000000000032e98	mov	w8, #0x10000
0000000000032e9c	b	0x32ec0
0000000000032ea0	mov	w8, #0x40000
0000000000032ea4	lsr	x9, x19, #25
0000000000032ea8	cmp	x9, #0x0
0000000000032eac	mov	w9, #0x400000
0000000000032eb0	mov	w10, #0x100000
0000000000032eb4	csel	x9, x10, x9, eq
0000000000032eb8	cmp	x19, #0x800, lsl #12
0000000000032ebc	csel	x8, x8, x9, lo
0000000000032ec0	mvn	x9, x8
0000000000032ec4	cmp	x9, x19
0000000000032ec8	b.ls	0x32eec
0000000000032ecc	add	x9, x19, x8
0000000000032ed0	sub	x9, x9, #0x1
0000000000032ed4	sub	x10, x8, #0x1
0000000000032ed8	tst	x8, x10
0000000000032edc	b.ne	0x32fd4
0000000000032ee0	neg	x8, x8
0000000000032ee4	and	x19, x9, x8
0000000000032ee8	cbz	x19, 0x32fe0
0000000000032eec	mov	w0, #0x11
0000000000032ef0	bl	_mi_option_get
0000000000032ef4	sub	w8, w0, #0x64
0000000000032ef8	lsl	w9, w0, #24
0000000000032efc	cmp	w8, #0x9b
0000000000032f00	mov	w8, #0x64000000
0000000000032f04	csel	w20, w8, w9, hi
0000000000032f08	adrp	x8, 84 ; 0x86000
0000000000032f0c	ldrb	w8, [x8, #0xa48]
0000000000032f10	cmp	w8, #0x1
0000000000032f14	b.ne	0x32f20
0000000000032f18	mov	w0, #0x6
0000000000032f1c	bl	_mi_option_get
0000000000032f20	mov	x0, #0x0
0000000000032f24	mov	x1, x19
0000000000032f28	mov	w2, #0x3
0000000000032f2c	mov	w3, #0x1042
0000000000032f30	mov	x4, x20
0000000000032f34	mov	x5, #0x0
0000000000032f38	bl	0x51adc ; symbol stub for: _mmap
0000000000032f3c	cmn	x0, #0x1
0000000000032f40	csel	x0, xzr, x0, eq
0000000000032f44	cbz	x0, 0x32ff4
0000000000032f48	cbz	x19, 0x32fe4
0000000000032f4c	adr	x9, #0x5414c
0000000000032f50	nop
0000000000032f54	ldxr	x8, [x9]
0000000000032f58	add	x8, x8, x19
0000000000032f5c	stxr	w10, x8, [x9]
0000000000032f60	cbnz	w10, 0x32f54
0000000000032f64	nop
0000000000032f68	ldr	x11, #0x54128
0000000000032f6c	adr	x9, #0x54124
0000000000032f70	nop
0000000000032f74	b	0x32f88
0000000000032f78	clrex
0000000000032f7c	mov	w12, #0x0
0000000000032f80	mov	x11, x10
0000000000032f84	cbnz	w12, 0x32fb0
0000000000032f88	cmp	x11, x8
0000000000032f8c	b.ge	0x32fb0
0000000000032f90	ldxr	x10, [x9]
0000000000032f94	cmp	x10, x11
0000000000032f98	b.ne	0x32f78
0000000000032f9c	stlxr	w11, x8, [x9]
0000000000032fa0	cbnz	w11, 0x32f7c
0000000000032fa4	mov	w12, #0x1
0000000000032fa8	mov	x11, x10
0000000000032fac	cbz	w12, 0x32f88
0000000000032fb0	cmp	x19, #0x1
0000000000032fb4	b.lt	0x33028
0000000000032fb8	adr	x8, #0x540c8
0000000000032fbc	nop
0000000000032fc0	ldxr	x9, [x8]
0000000000032fc4	add	x9, x9, x19
0000000000032fc8	stxr	w10, x9, [x8]
0000000000032fcc	cbnz	w10, 0x32fc0
0000000000032fd0	b	0x33044
0000000000032fd4	udiv	x9, x9, x8
0000000000032fd8	mul	x19, x9, x8
0000000000032fdc	cbnz	x19, 0x32eec
0000000000032fe0	mov	x0, #0x0
0000000000032fe4	ldp	x29, x30, [sp, #0x40]
0000000000032fe8	ldp	x20, x19, [sp, #0x30]
0000000000032fec	add	sp, sp, #0x50
0000000000032ff0	ret
0000000000032ff4	bl	0x51980 ; symbol stub for: ___error
0000000000032ff8	ldr	w8, [x0]
0000000000032ffc	stp	xzr, xzr, [sp, #0x10]
0000000000033000	str	xzr, [sp, #0x20]
0000000000033004	stp	x19, x8, [sp]
0000000000033008	adr	x0, #0x231d7 ; literal pool for: "unable to allocate OS memory (%zu bytes, error code: %i, address: %p, large only: %d, allow large: %d)\n"
000000000003300c	nop
0000000000033010	bl	__mi_warning_message
0000000000033014	mov	x0, #0x0
0000000000033018	ldp	x29, x30, [sp, #0x40]
000000000003301c	ldp	x20, x19, [sp, #0x30]
0000000000033020	add	sp, sp, #0x50
0000000000033024	ret
0000000000033028	neg	x8, x19
000000000003302c	adr	x9, #0x5405c
0000000000033030	nop
0000000000033034	ldxr	x10, [x9]
0000000000033038	add	x10, x10, x8
000000000003303c	stxr	w11, x10, [x9]
0000000000033040	cbnz	w11, 0x33034
0000000000033044	adr	x9, #0x54074
0000000000033048	nop
000000000003304c	ldxr	x8, [x9]
0000000000033050	add	x8, x8, x19
0000000000033054	stxr	w10, x8, [x9]
0000000000033058	cbnz	w10, 0x3304c
000000000003305c	nop
0000000000033060	ldr	x11, #0x54050
0000000000033064	adr	x9, #0x5404c
0000000000033068	nop
000000000003306c	b	0x33080
0000000000033070	clrex
0000000000033074	mov	w12, #0x0
0000000000033078	mov	x11, x10
000000000003307c	cbnz	w12, 0x330a8
0000000000033080	cmp	x11, x8
0000000000033084	b.ge	0x330a8
0000000000033088	ldxr	x10, [x9]
000000000003308c	cmp	x10, x11
0000000000033090	b.ne	0x33070
0000000000033094	stlxr	w11, x8, [x9]
0000000000033098	cbnz	w11, 0x33074
000000000003309c	mov	w12, #0x1
00000000000330a0	mov	x11, x10
00000000000330a4	cbz	w12, 0x33080
00000000000330a8	cmp	x19, #0x1
00000000000330ac	b.lt	0x330cc
00000000000330b0	adr	x8, #0x53ff0
00000000000330b4	nop
00000000000330b8	ldxr	x9, [x8]
00000000000330bc	add	x9, x9, x19
00000000000330c0	stxr	w10, x9, [x8]
00000000000330c4	cbnz	w10, 0x330b8
00000000000330c8	b	0x32fe4
00000000000330cc	neg	x8, x19
00000000000330d0	adr	x9, #0x53fd8
00000000000330d4	nop
00000000000330d8	ldxr	x10, [x9]
00000000000330dc	add	x10, x10, x8
00000000000330e0	stxr	w11, x10, [x9]
00000000000330e4	cbnz	w11, 0x330d8
00000000000330e8	b	0x32fe4
__mi_os_free_ex:
00000000000330ec	sub	sp, sp, #0x50
00000000000330f0	stp	x22, x21, [sp, #0x20]
00000000000330f4	stp	x20, x19, [sp, #0x30]
00000000000330f8	stp	x29, x30, [sp, #0x40]
00000000000330fc	add	x29, sp, #0x40
0000000000033100	cbz	x0, 0x33184
0000000000033104	mov	x20, x1
0000000000033108	cbz	x1, 0x33184
000000000003310c	mov	x21, x2
0000000000033110	mov	x19, x0
0000000000033114	lsr	x8, x20, #19
0000000000033118	cbnz	x8, 0x33128
000000000003311c	nop
0000000000033120	ldr	x8, #0x39520
0000000000033124	b	0x33158
0000000000033128	cmp	x20, #0x200, lsl #12
000000000003312c	b.hs	0x33138
0000000000033130	mov	w8, #0x10000
0000000000033134	b	0x33158
0000000000033138	mov	w8, #0x40000
000000000003313c	lsr	x9, x20, #25
0000000000033140	cmp	x9, #0x0
0000000000033144	mov	w9, #0x400000
0000000000033148	mov	w10, #0x100000
000000000003314c	csel	x9, x10, x9, eq
0000000000033150	cmp	x20, #0x800, lsl #12
0000000000033154	csel	x8, x8, x9, lo
0000000000033158	mvn	x9, x8
000000000003315c	cmp	x9, x20
0000000000033160	b.ls	0x331a4
0000000000033164	add	x9, x20, x8
0000000000033168	sub	x9, x9, #0x1
000000000003316c	sub	x10, x8, #0x1
0000000000033170	tst	x8, x10
0000000000033174	b.ne	0x33198
0000000000033178	neg	x8, x8
000000000003317c	and	x20, x9, x8
0000000000033180	cbnz	x20, 0x331a4
0000000000033184	ldp	x29, x30, [sp, #0x40]
0000000000033188	ldp	x20, x19, [sp, #0x30]
000000000003318c	ldp	x22, x21, [sp, #0x20]
0000000000033190	add	sp, sp, #0x50
0000000000033194	ret
0000000000033198	udiv	x9, x9, x8
000000000003319c	mul	x20, x9, x8
00000000000331a0	cbz	x20, 0x33184
00000000000331a4	mov	x0, x19
00000000000331a8	mov	x1, x20
00000000000331ac	bl	0x51af4 ; symbol stub for: _munmap
00000000000331b0	neg	x8, x20
00000000000331b4	cbz	w21, 0x3325c
00000000000331b8	adr	x9, #0x53f00
00000000000331bc	nop
00000000000331c0	ldxr	x10, [x9]
00000000000331c4	add	x11, x10, x8
00000000000331c8	stxr	w12, x11, [x9]
00000000000331cc	cbnz	w12, 0x331c0
00000000000331d0	sub	x9, x10, x20
00000000000331d4	nop
00000000000331d8	ldr	x12, #0x53ed8
00000000000331dc	adr	x10, #0x53ed4
00000000000331e0	nop
00000000000331e4	b	0x331f8
00000000000331e8	clrex
00000000000331ec	mov	w13, #0x0
00000000000331f0	mov	x12, x11
00000000000331f4	cbnz	w13, 0x33220
00000000000331f8	cmp	x12, x9
00000000000331fc	b.ge	0x33220
0000000000033200	ldxr	x11, [x10]
0000000000033204	cmp	x11, x12
0000000000033208	b.ne	0x331e8
000000000003320c	stlxr	w12, x9, [x10]
0000000000033210	cbnz	w12, 0x331ec
0000000000033214	mov	w13, #0x1
0000000000033218	mov	x12, x11
000000000003321c	cbz	w13, 0x331f8
0000000000033220	tbnz	x20, #0x3f, 0x33244
0000000000033224	adr	x9, #0x53e84
0000000000033228	nop
000000000003322c	ldxr	x10, [x9]
0000000000033230	add	x10, x10, x20
0000000000033234	stxr	w11, x10, [x9]
0000000000033238	cbnz	w11, 0x3322c
000000000003323c	cbnz	x20, 0x3325c
0000000000033240	b	0x332fc
0000000000033244	adr	x9, #0x53e5c
0000000000033248	nop
000000000003324c	ldxr	x10, [x9]
0000000000033250	add	x10, x10, x8
0000000000033254	stxr	w11, x10, [x9]
0000000000033258	cbnz	w11, 0x3324c
000000000003325c	adr	x9, #0x53e3c
0000000000033260	nop
0000000000033264	ldxr	x10, [x9]
0000000000033268	add	x11, x10, x8
000000000003326c	stxr	w12, x11, [x9]
0000000000033270	cbnz	w12, 0x33264
0000000000033274	sub	x9, x10, x20
0000000000033278	nop
000000000003327c	ldr	x12, #0x53e14
0000000000033280	adr	x10, #0x53e10
0000000000033284	nop
0000000000033288	b	0x3329c
000000000003328c	clrex
0000000000033290	mov	w13, #0x0
0000000000033294	mov	x12, x11
0000000000033298	cbnz	w13, 0x332c4
000000000003329c	cmp	x12, x9
00000000000332a0	b.ge	0x332c4
00000000000332a4	ldxr	x11, [x10]
00000000000332a8	cmp	x11, x12
00000000000332ac	b.ne	0x3328c
00000000000332b0	stlxr	w12, x9, [x10]
00000000000332b4	cbnz	w12, 0x33290
00000000000332b8	mov	w13, #0x1
00000000000332bc	mov	x12, x11
00000000000332c0	cbz	w13, 0x3329c
00000000000332c4	tbnz	x20, #0x3f, 0x332e4
00000000000332c8	adr	x8, #0x53dc0
00000000000332cc	nop
00000000000332d0	ldxr	x9, [x8]
00000000000332d4	add	x9, x9, x20
00000000000332d8	stxr	w10, x9, [x8]
00000000000332dc	cbnz	w10, 0x332d0
00000000000332e0	b	0x332fc
00000000000332e4	adr	x9, #0x53d9c
00000000000332e8	nop
00000000000332ec	ldxr	x10, [x9]
00000000000332f0	add	x10, x10, x8
00000000000332f4	stxr	w11, x10, [x9]
00000000000332f8	cbnz	w11, 0x332ec
00000000000332fc	cmn	w0, #0x1
0000000000033300	b.ne	0x33184
0000000000033304	bl	0x51980 ; symbol stub for: ___error
0000000000033308	ldr	w0, [x0]
000000000003330c	bl	0x51d28 ; symbol stub for: _strerror
0000000000033310	stp	x19, x20, [sp, #0x8]
0000000000033314	str	x0, [sp]
0000000000033318	adr	x0, #0x22e89 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
000000000003331c	nop
0000000000033320	bl	__mi_warning_message
0000000000033324	ldp	x29, x30, [sp, #0x40]
0000000000033328	ldp	x20, x19, [sp, #0x30]
000000000003332c	ldp	x22, x21, [sp, #0x20]
0000000000033330	add	sp, sp, #0x50
0000000000033334	ret
__mi_stat_decrease:
0000000000033338	cbz	x1, 0x333d4
000000000003333c	adr	x8, #0x53d04
0000000000033340	nop
0000000000033344	cmp	x0, x8
0000000000033348	b.lo	0x333ec
000000000003334c	adr	x8, #0x53f34
0000000000033350	nop
0000000000033354	cmp	x0, x8
0000000000033358	b.hs	0x333ec
000000000003335c	neg	x8, x1
0000000000033360	add	x9, x0, #0x18
0000000000033364	ldxr	x10, [x9]
0000000000033368	add	x11, x10, x8
000000000003336c	stxr	w12, x11, [x9]
0000000000033370	cbnz	w12, 0x33364
0000000000033374	add	x9, x0, #0x10
0000000000033378	sub	x10, x10, x1
000000000003337c	ldr	x12, [x0, #0x10]
0000000000033380	b	0x33394
0000000000033384	clrex
0000000000033388	mov	w13, #0x0
000000000003338c	mov	x12, x11
0000000000033390	cbnz	w13, 0x333bc
0000000000033394	cmp	x12, x10
0000000000033398	b.ge	0x333bc
000000000003339c	ldxr	x11, [x9]
00000000000333a0	cmp	x11, x12
00000000000333a4	b.ne	0x33384
00000000000333a8	stlxr	w12, x10, [x9]
00000000000333ac	cbnz	w12, 0x33388
00000000000333b0	mov	w13, #0x1
00000000000333b4	mov	x12, x11
00000000000333b8	cbz	w13, 0x33394
00000000000333bc	tbnz	x1, #0x3f, 0x333d8
00000000000333c0	add	x8, x0, #0x8
00000000000333c4	ldxr	x9, [x8]
00000000000333c8	add	x9, x9, x1
00000000000333cc	stxr	w10, x9, [x8]
00000000000333d0	cbnz	w10, 0x333c4
00000000000333d4	ret
00000000000333d8	ldxr	x9, [x0]
00000000000333dc	add	x9, x9, x8
00000000000333e0	stxr	w10, x9, [x0]
00000000000333e4	cbnz	w10, 0x333d8
00000000000333e8	b	0x333d4
00000000000333ec	ldp	x9, x8, [x0, #0x10]
00000000000333f0	sub	x8, x8, x1
00000000000333f4	str	x8, [x0, #0x18]
00000000000333f8	cmp	x8, x9
00000000000333fc	b.le	0x33404
0000000000033400	str	x8, [x0, #0x10]
0000000000033404	tbnz	x1, #0x3f, 0x33418
0000000000033408	ldr	x8, [x0, #0x8]
000000000003340c	add	x8, x8, x1
0000000000033410	str	x8, [x0, #0x8]
0000000000033414	ret
0000000000033418	ldr	x8, [x0]
000000000003341c	sub	x8, x8, x1
0000000000033420	str	x8, [x0]
0000000000033424	ret
__mi_warning_message:
0000000000033428	stp	x28, x27, [sp, #-0x40]!
000000000003342c	stp	x22, x21, [sp, #0x10]
0000000000033430	stp	x20, x19, [sp, #0x20]
0000000000033434	stp	x29, x30, [sp, #0x30]
0000000000033438	add	x29, sp, #0x30
000000000003343c	sub	sp, sp, #0x210
0000000000033440	mov	x19, x0
0000000000033444	mov	w0, #0x0
0000000000033448	bl	_mi_option_get
000000000003344c	cbnz	x0, 0x3345c
0000000000033450	mov	w0, #0x2
0000000000033454	bl	_mi_option_get
0000000000033458	cbz	x0, 0x3355c
000000000003345c	adr	x9, #0x536ac
0000000000033460	nop
0000000000033464	ldaxr	x8, [x9]
0000000000033468	add	x10, x8, #0x1
000000000003346c	stlxr	w11, x10, [x9]
0000000000033470	cbnz	w11, 0x33464
0000000000033474	nop
0000000000033478	ldr	x9, #0x391d0
000000000003347c	cmp	x8, x9
0000000000033480	b.hi	0x3355c
0000000000033484	add	x8, x29, #0x10
0000000000033488	str	x8, [sp, #0x8]
000000000003348c	cbz	x19, 0x3355c
0000000000033490	adrp	x21, 83 ; 0x86000
0000000000033494	ldrb	w8, [x21, #0xa46]
0000000000033498	adrp	x20, 57 ; 0x6c000
000000000003349c	add	x20, x20, #0xbe0
00000000000334a0	cmp	w8, #0x1
00000000000334a4	b.ne	0x334cc
00000000000334a8	ldr	x8, [x20]
00000000000334ac	mov	x0, x20
00000000000334b0	blr	x8
00000000000334b4	ldrb	w9, [x0]
00000000000334b8	tbnz	w9, #0x0, 0x3355c
00000000000334bc	mov	x0, x20
00000000000334c0	blr	x8
00000000000334c4	mov	w8, #0x1
00000000000334c8	strb	w8, [x0]
00000000000334cc	add	x0, sp, #0x10
00000000000334d0	add	x3, x29, #0x10
00000000000334d4	mov	w1, #0x1ff
00000000000334d8	mov	x2, x19
00000000000334dc	bl	0x51d94 ; symbol stub for: _vsnprintf
00000000000334e0	ldrb	w8, [x21, #0xa46]
00000000000334e4	cmp	w8, #0x1
00000000000334e8	b.ne	0x33500
00000000000334ec	ldr	x8, [x20]
00000000000334f0	mov	x0, x20
00000000000334f4	blr	x8
00000000000334f8	mov	w8, #0x1
00000000000334fc	strb	w8, [x0]
0000000000033500	adr	x21, #0x53546
0000000000033504	nop
0000000000033508	add	x8, x21, #0xca
000000000003350c	ldar	x19, [x8]
0000000000033510	ldur	x8, [x21, #0xd2]
0000000000033514	adr	x9, #0x60
0000000000033518	nop
000000000003351c	cmp	x8, #0x0
0000000000033520	csel	x22, x9, x8, eq
0000000000033524	adr	x0, #0x22ca7 ; literal pool for: "mimalloc: warning: "
0000000000033528	nop
000000000003352c	mov	x1, x19
0000000000033530	blr	x22
0000000000033534	add	x0, sp, #0x10
0000000000033538	mov	x1, x19
000000000003353c	blr	x22
0000000000033540	ldrb	w8, [x21]
0000000000033544	cmp	w8, #0x1
0000000000033548	b.ne	0x3355c
000000000003354c	ldr	x8, [x20]
0000000000033550	mov	x0, x20
0000000000033554	blr	x8
0000000000033558	strb	wzr, [x0]
000000000003355c	add	sp, sp, #0x210
0000000000033560	ldp	x29, x30, [sp, #0x30]
0000000000033564	ldp	x20, x19, [sp, #0x20]
0000000000033568	ldp	x22, x21, [sp, #0x10]
000000000003356c	ldp	x28, x27, [sp], #0x40
0000000000033570	ret
_mi_out_buf:
0000000000033574	stp	x20, x19, [sp, #-0x20]!
0000000000033578	stp	x29, x30, [sp, #0x10]
000000000003357c	add	x29, sp, #0x10
0000000000033580	cbz	x0, 0x335c0
0000000000033584	nop
0000000000033588	ldr	x8, #0x53598
000000000003358c	lsr	x8, x8, #15
0000000000033590	cbnz	x8, 0x335c0
0000000000033594	mov	x19, x0
0000000000033598	bl	0x51d34 ; symbol stub for: _strlen
000000000003359c	cbz	x0, 0x335c0
00000000000335a0	adr	x9, #0x53580
00000000000335a4	nop
00000000000335a8	ldaxr	x8, [x9]
00000000000335ac	add	x10, x8, x0
00000000000335b0	stlxr	w11, x10, [x9]
00000000000335b4	cbnz	w11, 0x335a8
00000000000335b8	lsr	x9, x8, #15
00000000000335bc	cbz	x9, 0x335cc
00000000000335c0	ldp	x29, x30, [sp, #0x10]
00000000000335c4	ldp	x20, x19, [sp], #0x20
00000000000335c8	ret
00000000000335cc	add	x9, x8, x0
00000000000335d0	mov	w10, #0x7fff
00000000000335d4	sub	x10, x10, x8
00000000000335d8	lsr	x9, x9, #15
00000000000335dc	cmp	x9, #0x0
00000000000335e0	csel	x2, x10, x0, ne
00000000000335e4	adr	x9, #0x3b3e4
00000000000335e8	nop
00000000000335ec	add	x0, x9, x8
00000000000335f0	mov	x1, x19
00000000000335f4	ldp	x29, x30, [sp, #0x10]
00000000000335f8	ldp	x20, x19, [sp], #0x20
00000000000335fc	b	0x51aac ; symbol stub for: _memcpy
__mi_stat_increase:
0000000000033600	cbz	x1, 0x33694
0000000000033604	adr	x8, #0x53a3c
0000000000033608	nop
000000000003360c	cmp	x0, x8
0000000000033610	b.lo	0x33698
0000000000033614	adr	x8, #0x53c6c
0000000000033618	nop
000000000003361c	cmp	x0, x8
0000000000033620	b.hs	0x33698
0000000000033624	add	x9, x0, #0x18
0000000000033628	ldxr	x8, [x9]
000000000003362c	add	x8, x8, x1
0000000000033630	stxr	w10, x8, [x9]
0000000000033634	cbnz	w10, 0x33628
0000000000033638	add	x9, x0, #0x10
000000000003363c	ldr	x11, [x0, #0x10]
0000000000033640	b	0x33654
0000000000033644	clrex
0000000000033648	mov	w12, #0x0
000000000003364c	mov	x11, x10
0000000000033650	cbnz	w12, 0x3367c
0000000000033654	cmp	x11, x8
0000000000033658	b.ge	0x3367c
000000000003365c	ldxr	x10, [x9]
0000000000033660	cmp	x10, x11
0000000000033664	b.ne	0x33644
0000000000033668	stlxr	w11, x8, [x9]
000000000003366c	cbnz	w11, 0x33648
0000000000033670	mov	w12, #0x1
0000000000033674	mov	x11, x10
0000000000033678	cbz	w12, 0x33654
000000000003367c	cmp	x1, #0x1
0000000000033680	b.lt	0x336c8
0000000000033684	ldxr	x8, [x0]
0000000000033688	add	x8, x8, x1
000000000003368c	stxr	w9, x8, [x0]
0000000000033690	cbnz	w9, 0x33684
0000000000033694	ret
0000000000033698	ldp	x9, x8, [x0, #0x10]
000000000003369c	add	x8, x8, x1
00000000000336a0	str	x8, [x0, #0x18]
00000000000336a4	cmp	x8, x9
00000000000336a8	b.le	0x336b0
00000000000336ac	str	x8, [x0, #0x10]
00000000000336b0	cmp	x1, #0x1
00000000000336b4	b.lt	0x336e4
00000000000336b8	ldr	x8, [x0]
00000000000336bc	add	x8, x8, x1
00000000000336c0	str	x8, [x0]
00000000000336c4	ret
00000000000336c8	add	x8, x0, #0x8
00000000000336cc	neg	x9, x1
00000000000336d0	ldxr	x10, [x8]
00000000000336d4	add	x10, x10, x9
00000000000336d8	stxr	w11, x10, [x8]
00000000000336dc	cbnz	w11, 0x336d0
00000000000336e0	b	0x33694
00000000000336e4	ldr	x8, [x0, #0x8]
00000000000336e8	sub	x8, x8, x1
00000000000336ec	str	x8, [x0, #0x8]
00000000000336f0	ret
_mi_unix_mmapx:
00000000000336f4	stp	x26, x25, [sp, #-0x50]!
00000000000336f8	stp	x24, x23, [sp, #0x10]
00000000000336fc	stp	x22, x21, [sp, #0x20]
0000000000033700	stp	x20, x19, [sp, #0x30]
0000000000033704	stp	x29, x30, [sp, #0x40]
0000000000033708	add	x29, sp, #0x40
000000000003370c	mov	x19, x4
0000000000033710	mov	x20, x3
0000000000033714	mov	x21, x2
0000000000033718	mov	x22, x0
000000000003371c	sub	x8, x1, #0x1
0000000000033720	and	x9, x0, #0x3fffff
0000000000033724	mov	w10, #0x40000000
0000000000033728	cmp	x0, x10
000000000003372c	ccmp	x9, #0x0, #0x0, ls
0000000000033730	lsr	x8, x8, #22
0000000000033734	ccmp	x8, #0x0, #0x0, eq
0000000000033738	b.ne	0x337f8
000000000003373c	mov	x23, x1
0000000000033740	adr	x25, #0x432c0
0000000000033744	nop
0000000000033748	ldaxr	x24, [x25]
000000000003374c	add	x8, x24, x22
0000000000033750	stlxr	w9, x8, [x25]
0000000000033754	cbnz	w9, 0x33748
0000000000033758	sub	x8, x24, #0x1
000000000003375c	lsr	x8, x8, #41
0000000000033760	cmp	x8, #0xf
0000000000033764	b.lo	0x337c0
0000000000033768	adrp	x0, 57 ; 0x6c000
000000000003376c	add	x0, x0, #0xbc8
0000000000033770	ldr	x8, [x0]
0000000000033774	blr	x8
0000000000033778	ldr	x0, [x0]
000000000003377c	bl	__mi_heap_random_next
0000000000033780	lsl	x8, x0, #5
0000000000033784	and	x8, x8, #0x3ffffc00000
0000000000033788	mov	x9, #0x20000000000
000000000003378c	add	x8, x8, x9
0000000000033790	add	x9, x24, x22
0000000000033794	ldaxr	x10, [x25]
0000000000033798	cmp	x10, x9
000000000003379c	b.ne	0x337ac
00000000000337a0	stlxr	w10, x8, [x25]
00000000000337a4	cbnz	w10, 0x33794
00000000000337a8	b	0x337b0
00000000000337ac	clrex
00000000000337b0	ldaxr	x24, [x25]
00000000000337b4	add	x8, x24, x22
00000000000337b8	stlxr	w9, x8, [x25]
00000000000337bc	cbnz	w9, 0x337b0
00000000000337c0	cbz	x24, 0x337f8
00000000000337c4	udiv	x8, x24, x23
00000000000337c8	msub	x8, x8, x23, x24
00000000000337cc	cbnz	x8, 0x337f8
00000000000337d0	mov	x0, x24
00000000000337d4	mov	x1, x22
00000000000337d8	mov	x2, x21
00000000000337dc	mov	x3, x20
00000000000337e0	mov	x4, x19
00000000000337e4	mov	x5, #0x0
00000000000337e8	bl	0x51adc ; symbol stub for: _mmap
00000000000337ec	add	x8, x0, #0x1
00000000000337f0	cmp	x8, #0x1
00000000000337f4	b.hi	0x3381c
00000000000337f8	mov	x0, #0x0
00000000000337fc	mov	x1, x22
0000000000033800	mov	x2, x21
0000000000033804	mov	x3, x20
0000000000033808	mov	x4, x19
000000000003380c	mov	x5, #0x0
0000000000033810	bl	0x51adc ; symbol stub for: _mmap
0000000000033814	cmn	x0, #0x1
0000000000033818	csel	x0, xzr, x0, eq
000000000003381c	ldp	x29, x30, [sp, #0x40]
0000000000033820	ldp	x20, x19, [sp, #0x30]
0000000000033824	ldp	x22, x21, [sp, #0x20]
0000000000033828	ldp	x24, x23, [sp, #0x10]
000000000003382c	ldp	x26, x25, [sp], #0x50
0000000000033830	ret
__mi_error_message:
0000000000033834	stp	x24, x23, [sp, #-0x40]!
0000000000033838	stp	x22, x21, [sp, #0x10]
000000000003383c	stp	x20, x19, [sp, #0x20]
0000000000033840	stp	x29, x30, [sp, #0x30]
0000000000033844	add	x29, sp, #0x30
0000000000033848	sub	sp, sp, #0x210
000000000003384c	mov	x20, x1
0000000000033850	mov	x19, x0
0000000000033854	add	x8, x29, #0x10
0000000000033858	str	x8, [sp, #0x8]
000000000003385c	mov	w0, #0x0
0000000000033860	bl	_mi_option_get
0000000000033864	cbnz	x0, 0x33874
0000000000033868	mov	w0, #0x2
000000000003386c	bl	_mi_option_get
0000000000033870	cbz	x0, 0x3396c
0000000000033874	adr	x9, #0x532e4
0000000000033878	nop
000000000003387c	ldaxr	x8, [x9]
0000000000033880	add	x10, x8, #0x1
0000000000033884	stlxr	w11, x10, [x9]
0000000000033888	cbnz	w11, 0x3387c
000000000003388c	nop
0000000000033890	ldr	x9, #0x38dc0
0000000000033894	cmp	x8, x9
0000000000033898	b.hi	0x3396c
000000000003389c	cbz	x20, 0x3396c
00000000000338a0	adrp	x22, 83 ; 0x86000
00000000000338a4	ldrb	w8, [x22, #0xa46]
00000000000338a8	adrp	x21, 57 ; 0x6c000
00000000000338ac	add	x21, x21, #0xbe0
00000000000338b0	cmp	w8, #0x1
00000000000338b4	b.ne	0x338dc
00000000000338b8	ldr	x8, [x21]
00000000000338bc	mov	x0, x21
00000000000338c0	blr	x8
00000000000338c4	ldrb	w9, [x0]
00000000000338c8	tbnz	w9, #0x0, 0x3396c
00000000000338cc	mov	x0, x21
00000000000338d0	blr	x8
00000000000338d4	mov	w8, #0x1
00000000000338d8	strb	w8, [x0]
00000000000338dc	add	x0, sp, #0x10
00000000000338e0	add	x3, x29, #0x10
00000000000338e4	mov	w1, #0x1ff
00000000000338e8	mov	x2, x20
00000000000338ec	bl	0x51d94 ; symbol stub for: _vsnprintf
00000000000338f0	ldrb	w8, [x22, #0xa46]
00000000000338f4	cmp	w8, #0x1
00000000000338f8	b.ne	0x33910
00000000000338fc	ldr	x8, [x21]
0000000000033900	mov	x0, x21
0000000000033904	blr	x8
0000000000033908	mov	w8, #0x1
000000000003390c	strb	w8, [x0]
0000000000033910	adr	x22, #0x53136
0000000000033914	nop
0000000000033918	add	x8, x22, #0xca
000000000003391c	ldar	x20, [x8]
0000000000033920	ldur	x8, [x22, #0xd2]
0000000000033924	adr	x9, #-0x3b0
0000000000033928	nop
000000000003392c	cmp	x8, #0x0
0000000000033930	csel	x23, x9, x8, eq
0000000000033934	adr	x0, #0x22ba1 ; literal pool for: "mimalloc: error: "
0000000000033938	nop
000000000003393c	mov	x1, x20
0000000000033940	blr	x23
0000000000033944	add	x0, sp, #0x10
0000000000033948	mov	x1, x20
000000000003394c	blr	x23
0000000000033950	ldrb	w8, [x22]
0000000000033954	cmp	w8, #0x1
0000000000033958	b.ne	0x3396c
000000000003395c	ldr	x8, [x21]
0000000000033960	mov	x0, x21
0000000000033964	blr	x8
0000000000033968	strb	wzr, [x0]
000000000003396c	nop
0000000000033970	ldr	x8, #0x531f0
0000000000033974	cbz	x8, 0x33990
0000000000033978	adr	x8, #0x531e8
000000000003397c	nop
0000000000033980	ldr	x9, [x8], #0x8
0000000000033984	ldar	x1, [x8]
0000000000033988	mov	x0, x19
000000000003398c	blr	x9
0000000000033990	add	sp, sp, #0x210
0000000000033994	ldp	x29, x30, [sp, #0x30]
0000000000033998	ldp	x20, x19, [sp, #0x20]
000000000003399c	ldp	x22, x21, [sp, #0x10]
00000000000339a0	ldp	x24, x23, [sp], #0x40
00000000000339a4	ret
_mi_stats_merge_from:
00000000000339a8	adr	x8, #0x53698
00000000000339ac	nop
00000000000339b0	cmp	x0, x8
00000000000339b4	b.eq	0x3424c
00000000000339b8	stp	x29, x30, [sp, #-0x10]!
00000000000339bc	mov	x29, sp
00000000000339c0	ldr	x9, [x0]
00000000000339c4	cbnz	x9, 0x339d0
00000000000339c8	ldr	x10, [x0, #0x8]
00000000000339cc	cbz	x10, 0x33a34
00000000000339d0	ldxr	x10, [x8]
00000000000339d4	add	x10, x10, x9
00000000000339d8	stxr	w11, x10, [x8]
00000000000339dc	cbnz	w11, 0x339d0
00000000000339e0	ldr	x8, [x0, #0x18]
00000000000339e4	adr	x9, #0x53674
00000000000339e8	nop
00000000000339ec	ldxr	x10, [x9]
00000000000339f0	add	x10, x10, x8
00000000000339f4	stxr	w11, x10, [x9]
00000000000339f8	cbnz	w11, 0x339ec
00000000000339fc	ldr	x8, [x0, #0x8]
0000000000033a00	adr	x9, #0x53648
0000000000033a04	nop
0000000000033a08	ldxr	x10, [x9]
0000000000033a0c	add	x10, x10, x8
0000000000033a10	stxr	w11, x10, [x9]
0000000000033a14	cbnz	w11, 0x33a08
0000000000033a18	ldr	x8, [x0, #0x10]
0000000000033a1c	adr	x9, #0x53634
0000000000033a20	nop
0000000000033a24	ldxr	x10, [x9]
0000000000033a28	add	x10, x10, x8
0000000000033a2c	stxr	w11, x10, [x9]
0000000000033a30	cbnz	w11, 0x33a24
0000000000033a34	ldr	x8, [x0, #0x20]
0000000000033a38	cbnz	x8, 0x33a44
0000000000033a3c	ldr	x9, [x0, #0x28]
0000000000033a40	cbz	x9, 0x33ab0
0000000000033a44	adr	x9, #0x5361c
0000000000033a48	nop
0000000000033a4c	ldxr	x10, [x9]
0000000000033a50	add	x10, x10, x8
0000000000033a54	stxr	w11, x10, [x9]
0000000000033a58	cbnz	w11, 0x33a4c
0000000000033a5c	ldr	x8, [x0, #0x38]
0000000000033a60	adr	x9, #0x53618
0000000000033a64	nop
0000000000033a68	ldxr	x10, [x9]
0000000000033a6c	add	x10, x10, x8
0000000000033a70	stxr	w11, x10, [x9]
0000000000033a74	cbnz	w11, 0x33a68
0000000000033a78	ldr	x8, [x0, #0x28]
0000000000033a7c	adr	x9, #0x535ec
0000000000033a80	nop
0000000000033a84	ldxr	x10, [x9]
0000000000033a88	add	x10, x10, x8
0000000000033a8c	stxr	w11, x10, [x9]
0000000000033a90	cbnz	w11, 0x33a84
0000000000033a94	ldr	x8, [x0, #0x30]
0000000000033a98	adr	x9, #0x535d8
0000000000033a9c	nop
0000000000033aa0	ldxr	x10, [x9]
0000000000033aa4	add	x10, x10, x8
0000000000033aa8	stxr	w11, x10, [x9]
0000000000033aac	cbnz	w11, 0x33aa0
0000000000033ab0	ldr	x8, [x0, #0x40]
0000000000033ab4	cbnz	x8, 0x33ac0
0000000000033ab8	ldr	x9, [x0, #0x48]
0000000000033abc	cbz	x9, 0x33b2c
0000000000033ac0	adr	x9, #0x535c0
0000000000033ac4	nop
0000000000033ac8	ldxr	x10, [x9]
0000000000033acc	add	x10, x10, x8
0000000000033ad0	stxr	w11, x10, [x9]
0000000000033ad4	cbnz	w11, 0x33ac8
0000000000033ad8	ldr	x8, [x0, #0x58]
0000000000033adc	adr	x9, #0x535bc
0000000000033ae0	nop
0000000000033ae4	ldxr	x10, [x9]
0000000000033ae8	add	x10, x10, x8
0000000000033aec	stxr	w11, x10, [x9]
0000000000033af0	cbnz	w11, 0x33ae4
0000000000033af4	ldr	x8, [x0, #0x48]
0000000000033af8	adr	x9, #0x53590
0000000000033afc	nop
0000000000033b00	ldxr	x10, [x9]
0000000000033b04	add	x10, x10, x8
0000000000033b08	stxr	w11, x10, [x9]
0000000000033b0c	cbnz	w11, 0x33b00
0000000000033b10	ldr	x8, [x0, #0x50]
0000000000033b14	adr	x9, #0x5357c
0000000000033b18	nop
0000000000033b1c	ldxr	x10, [x9]
0000000000033b20	add	x10, x10, x8
0000000000033b24	stxr	w11, x10, [x9]
0000000000033b28	cbnz	w11, 0x33b1c
0000000000033b2c	ldr	x8, [x0, #0x60]
0000000000033b30	cbnz	x8, 0x33b3c
0000000000033b34	ldr	x9, [x0, #0x68]
0000000000033b38	cbz	x9, 0x33ba8
0000000000033b3c	adr	x9, #0x53564
0000000000033b40	nop
0000000000033b44	ldxr	x10, [x9]
0000000000033b48	add	x10, x10, x8
0000000000033b4c	stxr	w11, x10, [x9]
0000000000033b50	cbnz	w11, 0x33b44
0000000000033b54	ldr	x8, [x0, #0x78]
0000000000033b58	adr	x9, #0x53560
0000000000033b5c	nop
0000000000033b60	ldxr	x10, [x9]
0000000000033b64	add	x10, x10, x8
0000000000033b68	stxr	w11, x10, [x9]
0000000000033b6c	cbnz	w11, 0x33b60
0000000000033b70	ldr	x8, [x0, #0x68]
0000000000033b74	adr	x9, #0x53534
0000000000033b78	nop
0000000000033b7c	ldxr	x10, [x9]
0000000000033b80	add	x10, x10, x8
0000000000033b84	stxr	w11, x10, [x9]
0000000000033b88	cbnz	w11, 0x33b7c
0000000000033b8c	ldr	x8, [x0, #0x70]
0000000000033b90	adr	x9, #0x53520
0000000000033b94	nop
0000000000033b98	ldxr	x10, [x9]
0000000000033b9c	add	x10, x10, x8
0000000000033ba0	stxr	w11, x10, [x9]
0000000000033ba4	cbnz	w11, 0x33b98
0000000000033ba8	ldr	x8, [x0, #0x80]
0000000000033bac	cbnz	x8, 0x33bb8
0000000000033bb0	ldr	x9, [x0, #0x88]
0000000000033bb4	cbz	x9, 0x33c24
0000000000033bb8	adr	x9, #0x53508
0000000000033bbc	nop
0000000000033bc0	ldxr	x10, [x9]
0000000000033bc4	add	x10, x10, x8
0000000000033bc8	stxr	w11, x10, [x9]
0000000000033bcc	cbnz	w11, 0x33bc0
0000000000033bd0	ldr	x8, [x0, #0x98]
0000000000033bd4	adr	x9, #0x53504
0000000000033bd8	nop
0000000000033bdc	ldxr	x10, [x9]
0000000000033be0	add	x10, x10, x8
0000000000033be4	stxr	w11, x10, [x9]
0000000000033be8	cbnz	w11, 0x33bdc
0000000000033bec	ldr	x8, [x0, #0x88]
0000000000033bf0	adr	x9, #0x534d8
0000000000033bf4	nop
0000000000033bf8	ldxr	x10, [x9]
0000000000033bfc	add	x10, x10, x8
0000000000033c00	stxr	w11, x10, [x9]
0000000000033c04	cbnz	w11, 0x33bf8
0000000000033c08	ldr	x8, [x0, #0x90]
0000000000033c0c	adr	x9, #0x534c4
0000000000033c10	nop
0000000000033c14	ldxr	x10, [x9]
0000000000033c18	add	x10, x10, x8
0000000000033c1c	stxr	w11, x10, [x9]
0000000000033c20	cbnz	w11, 0x33c14
0000000000033c24	ldr	x8, [x0, #0xa0]
0000000000033c28	cbnz	x8, 0x33c34
0000000000033c2c	ldr	x9, [x0, #0xa8]
0000000000033c30	cbz	x9, 0x33ca0
0000000000033c34	adr	x9, #0x534ac
0000000000033c38	nop
0000000000033c3c	ldxr	x10, [x9]
0000000000033c40	add	x10, x10, x8
0000000000033c44	stxr	w11, x10, [x9]
0000000000033c48	cbnz	w11, 0x33c3c
0000000000033c4c	ldr	x8, [x0, #0xb8]
0000000000033c50	adr	x9, #0x534a8
0000000000033c54	nop
0000000000033c58	ldxr	x10, [x9]
0000000000033c5c	add	x10, x10, x8
0000000000033c60	stxr	w11, x10, [x9]
0000000000033c64	cbnz	w11, 0x33c58
0000000000033c68	ldr	x8, [x0, #0xa8]
0000000000033c6c	adr	x9, #0x5347c
0000000000033c70	nop
0000000000033c74	ldxr	x10, [x9]
0000000000033c78	add	x10, x10, x8
0000000000033c7c	stxr	w11, x10, [x9]
0000000000033c80	cbnz	w11, 0x33c74
0000000000033c84	ldr	x8, [x0, #0xb0]
0000000000033c88	adr	x9, #0x53468
0000000000033c8c	nop
0000000000033c90	ldxr	x10, [x9]
0000000000033c94	add	x10, x10, x8
0000000000033c98	stxr	w11, x10, [x9]
0000000000033c9c	cbnz	w11, 0x33c90
0000000000033ca0	ldr	x8, [x0, #0xe0]
0000000000033ca4	cbnz	x8, 0x33cb0
0000000000033ca8	ldr	x9, [x0, #0xe8]
0000000000033cac	cbz	x9, 0x33d1c
0000000000033cb0	adr	x9, #0x53470
0000000000033cb4	nop
0000000000033cb8	ldxr	x10, [x9]
0000000000033cbc	add	x10, x10, x8
0000000000033cc0	stxr	w11, x10, [x9]
0000000000033cc4	cbnz	w11, 0x33cb8
0000000000033cc8	ldr	x8, [x0, #0xf8]
0000000000033ccc	adr	x9, #0x5346c
0000000000033cd0	nop
0000000000033cd4	ldxr	x10, [x9]
0000000000033cd8	add	x10, x10, x8
0000000000033cdc	stxr	w11, x10, [x9]
0000000000033ce0	cbnz	w11, 0x33cd4
0000000000033ce4	ldr	x8, [x0, #0xe8]
0000000000033ce8	adr	x9, #0x53440
0000000000033cec	nop
0000000000033cf0	ldxr	x10, [x9]
0000000000033cf4	add	x10, x10, x8
0000000000033cf8	stxr	w11, x10, [x9]
0000000000033cfc	cbnz	w11, 0x33cf0
0000000000033d00	ldr	x8, [x0, #0xf0]
0000000000033d04	adr	x9, #0x5342c
0000000000033d08	nop
0000000000033d0c	ldxr	x10, [x9]
0000000000033d10	add	x10, x10, x8
0000000000033d14	stxr	w11, x10, [x9]
0000000000033d18	cbnz	w11, 0x33d0c
0000000000033d1c	ldr	x8, [x0, #0xc0]
0000000000033d20	cbnz	x8, 0x33d2c
0000000000033d24	ldr	x9, [x0, #0xc8]
0000000000033d28	cbz	x9, 0x33d98
0000000000033d2c	adr	x9, #0x533d4
0000000000033d30	nop
0000000000033d34	ldxr	x10, [x9]
0000000000033d38	add	x10, x10, x8
0000000000033d3c	stxr	w11, x10, [x9]
0000000000033d40	cbnz	w11, 0x33d34
0000000000033d44	ldr	x8, [x0, #0xd8]
0000000000033d48	adr	x9, #0x533d0
0000000000033d4c	nop
0000000000033d50	ldxr	x10, [x9]
0000000000033d54	add	x10, x10, x8
0000000000033d58	stxr	w11, x10, [x9]
0000000000033d5c	cbnz	w11, 0x33d50
0000000000033d60	ldr	x8, [x0, #0xc8]
0000000000033d64	adr	x9, #0x533a4
0000000000033d68	nop
0000000000033d6c	ldxr	x10, [x9]
0000000000033d70	add	x10, x10, x8
0000000000033d74	stxr	w11, x10, [x9]
0000000000033d78	cbnz	w11, 0x33d6c
0000000000033d7c	ldr	x8, [x0, #0xd0]
0000000000033d80	adr	x9, #0x53390
0000000000033d84	nop
0000000000033d88	ldxr	x10, [x9]
0000000000033d8c	add	x10, x10, x8
0000000000033d90	stxr	w11, x10, [x9]
0000000000033d94	cbnz	w11, 0x33d88
0000000000033d98	ldr	x8, [x0, #0x100]
0000000000033d9c	cbnz	x8, 0x33da8
0000000000033da0	ldr	x9, [x0, #0x108]
0000000000033da4	cbz	x9, 0x33e14
0000000000033da8	adr	x9, #0x53398
0000000000033dac	nop
0000000000033db0	ldxr	x10, [x9]
0000000000033db4	add	x10, x10, x8
0000000000033db8	stxr	w11, x10, [x9]
0000000000033dbc	cbnz	w11, 0x33db0
0000000000033dc0	ldr	x8, [x0, #0x118]
0000000000033dc4	adr	x9, #0x53394
0000000000033dc8	nop
0000000000033dcc	ldxr	x10, [x9]
0000000000033dd0	add	x10, x10, x8
0000000000033dd4	stxr	w11, x10, [x9]
0000000000033dd8	cbnz	w11, 0x33dcc
0000000000033ddc	ldr	x8, [x0, #0x108]
0000000000033de0	adr	x9, #0x53368
0000000000033de4	nop
0000000000033de8	ldxr	x10, [x9]
0000000000033dec	add	x10, x10, x8
0000000000033df0	stxr	w11, x10, [x9]
0000000000033df4	cbnz	w11, 0x33de8
0000000000033df8	ldr	x8, [x0, #0x110]
0000000000033dfc	adr	x9, #0x53354
0000000000033e00	nop
0000000000033e04	ldxr	x10, [x9]
0000000000033e08	add	x10, x10, x8
0000000000033e0c	stxr	w11, x10, [x9]
0000000000033e10	cbnz	w11, 0x33e04
0000000000033e14	ldr	x8, [x0, #0x180]
0000000000033e18	cbnz	x8, 0x33e24
0000000000033e1c	ldr	x9, [x0, #0x188]
0000000000033e20	cbz	x9, 0x33e90
0000000000033e24	adr	x9, #0x5339c
0000000000033e28	nop
0000000000033e2c	ldxr	x10, [x9]
0000000000033e30	add	x10, x10, x8
0000000000033e34	stxr	w11, x10, [x9]
0000000000033e38	cbnz	w11, 0x33e2c
0000000000033e3c	ldr	x8, [x0, #0x198]
0000000000033e40	adr	x9, #0x53398
0000000000033e44	nop
0000000000033e48	ldxr	x10, [x9]
0000000000033e4c	add	x10, x10, x8
0000000000033e50	stxr	w11, x10, [x9]
0000000000033e54	cbnz	w11, 0x33e48
0000000000033e58	ldr	x8, [x0, #0x188]
0000000000033e5c	adr	x9, #0x5336c
0000000000033e60	nop
0000000000033e64	ldxr	x10, [x9]
0000000000033e68	add	x10, x10, x8
0000000000033e6c	stxr	w11, x10, [x9]
0000000000033e70	cbnz	w11, 0x33e64
0000000000033e74	ldr	x8, [x0, #0x190]
0000000000033e78	adr	x9, #0x53358
0000000000033e7c	nop
0000000000033e80	ldxr	x10, [x9]
0000000000033e84	add	x10, x10, x8
0000000000033e88	stxr	w11, x10, [x9]
0000000000033e8c	cbnz	w11, 0x33e80
0000000000033e90	ldr	x8, [x0, #0x1a0]
0000000000033e94	cbnz	x8, 0x33ea0
0000000000033e98	ldr	x9, [x0, #0x1a8]
0000000000033e9c	cbz	x9, 0x33f0c
0000000000033ea0	adr	x9, #0x53340
0000000000033ea4	nop
0000000000033ea8	ldxr	x10, [x9]
0000000000033eac	add	x10, x10, x8
0000000000033eb0	stxr	w11, x10, [x9]
0000000000033eb4	cbnz	w11, 0x33ea8
0000000000033eb8	ldr	x8, [x0, #0x1b8]
0000000000033ebc	adr	x9, #0x5333c
0000000000033ec0	nop
0000000000033ec4	ldxr	x10, [x9]
0000000000033ec8	add	x10, x10, x8
0000000000033ecc	stxr	w11, x10, [x9]
0000000000033ed0	cbnz	w11, 0x33ec4
0000000000033ed4	ldr	x8, [x0, #0x1a8]
0000000000033ed8	adr	x9, #0x53310
0000000000033edc	nop
0000000000033ee0	ldxr	x10, [x9]
0000000000033ee4	add	x10, x10, x8
0000000000033ee8	stxr	w11, x10, [x9]
0000000000033eec	cbnz	w11, 0x33ee0
0000000000033ef0	ldr	x8, [x0, #0x1b0]
0000000000033ef4	adr	x9, #0x532fc
0000000000033ef8	nop
0000000000033efc	ldxr	x10, [x9]
0000000000033f00	add	x10, x10, x8
0000000000033f04	stxr	w11, x10, [x9]
0000000000033f08	cbnz	w11, 0x33efc
0000000000033f0c	ldr	x8, [x0, #0x120]
0000000000033f10	cbnz	x8, 0x33f1c
0000000000033f14	ldr	x9, [x0, #0x128]
0000000000033f18	cbz	x9, 0x33f88
0000000000033f1c	adr	x9, #0x53244
0000000000033f20	nop
0000000000033f24	ldxr	x10, [x9]
0000000000033f28	add	x10, x10, x8
0000000000033f2c	stxr	w11, x10, [x9]
0000000000033f30	cbnz	w11, 0x33f24
0000000000033f34	ldr	x8, [x0, #0x138]
0000000000033f38	adr	x9, #0x53240
0000000000033f3c	nop
0000000000033f40	ldxr	x10, [x9]
0000000000033f44	add	x10, x10, x8
0000000000033f48	stxr	w11, x10, [x9]
0000000000033f4c	cbnz	w11, 0x33f40
0000000000033f50	ldr	x8, [x0, #0x128]
0000000000033f54	adr	x9, #0x53214
0000000000033f58	nop
0000000000033f5c	ldxr	x10, [x9]
0000000000033f60	add	x10, x10, x8
0000000000033f64	stxr	w11, x10, [x9]
0000000000033f68	cbnz	w11, 0x33f5c
0000000000033f6c	ldr	x8, [x0, #0x130]
0000000000033f70	adr	x9, #0x53200
0000000000033f74	nop
0000000000033f78	ldxr	x10, [x9]
0000000000033f7c	add	x10, x10, x8
0000000000033f80	stxr	w11, x10, [x9]
0000000000033f84	cbnz	w11, 0x33f78
0000000000033f88	ldr	x8, [x0, #0x140]
0000000000033f8c	cbnz	x8, 0x33f98
0000000000033f90	ldr	x9, [x0, #0x148]
0000000000033f94	cbz	x9, 0x34004
0000000000033f98	adr	x9, #0x531e8
0000000000033f9c	nop
0000000000033fa0	ldxr	x10, [x9]
0000000000033fa4	add	x10, x10, x8
0000000000033fa8	stxr	w11, x10, [x9]
0000000000033fac	cbnz	w11, 0x33fa0
0000000000033fb0	ldr	x8, [x0, #0x158]
0000000000033fb4	adr	x9, #0x531e4
0000000000033fb8	nop
0000000000033fbc	ldxr	x10, [x9]
0000000000033fc0	add	x10, x10, x8
0000000000033fc4	stxr	w11, x10, [x9]
0000000000033fc8	cbnz	w11, 0x33fbc
0000000000033fcc	ldr	x8, [x0, #0x148]
0000000000033fd0	adr	x9, #0x531b8
0000000000033fd4	nop
0000000000033fd8	ldxr	x10, [x9]
0000000000033fdc	add	x10, x10, x8
0000000000033fe0	stxr	w11, x10, [x9]
0000000000033fe4	cbnz	w11, 0x33fd8
0000000000033fe8	ldr	x8, [x0, #0x150]
0000000000033fec	adr	x9, #0x531a4
0000000000033ff0	nop
0000000000033ff4	ldxr	x10, [x9]
0000000000033ff8	add	x10, x10, x8
0000000000033ffc	stxr	w11, x10, [x9]
0000000000034000	cbnz	w11, 0x33ff4
0000000000034004	ldr	x8, [x0, #0x160]
0000000000034008	cbnz	x8, 0x34014
000000000003400c	ldr	x9, [x0, #0x168]
0000000000034010	cbz	x9, 0x34080
0000000000034014	adr	x9, #0x5318c
0000000000034018	nop
000000000003401c	ldxr	x10, [x9]
0000000000034020	add	x10, x10, x8
0000000000034024	stxr	w11, x10, [x9]
0000000000034028	cbnz	w11, 0x3401c
000000000003402c	ldr	x8, [x0, #0x178]
0000000000034030	adr	x9, #0x53188
0000000000034034	nop
0000000000034038	ldxr	x10, [x9]
000000000003403c	add	x10, x10, x8
0000000000034040	stxr	w11, x10, [x9]
0000000000034044	cbnz	w11, 0x34038
0000000000034048	ldr	x8, [x0, #0x168]
000000000003404c	adr	x9, #0x5315c
0000000000034050	nop
0000000000034054	ldxr	x10, [x9]
0000000000034058	add	x10, x10, x8
000000000003405c	stxr	w11, x10, [x9]
0000000000034060	cbnz	w11, 0x34054
0000000000034064	ldr	x8, [x0, #0x170]
0000000000034068	adr	x9, #0x53148
000000000003406c	nop
0000000000034070	ldxr	x10, [x9]
0000000000034074	add	x10, x10, x8
0000000000034078	stxr	w11, x10, [x9]
000000000003407c	cbnz	w11, 0x34070
0000000000034080	ldr	x8, [x0, #0x1c0]
0000000000034084	adr	x9, #0x5317c
0000000000034088	nop
000000000003408c	ldxr	x10, [x9]
0000000000034090	add	x10, x10, x8
0000000000034094	stxr	w11, x10, [x9]
0000000000034098	cbnz	w11, 0x3408c
000000000003409c	ldr	x8, [x0, #0x1c8]
00000000000340a0	adr	x9, #0x53168
00000000000340a4	nop
00000000000340a8	ldxr	x10, [x9]
00000000000340ac	add	x10, x10, x8
00000000000340b0	stxr	w11, x10, [x9]
00000000000340b4	cbnz	w11, 0x340a8
00000000000340b8	ldr	x8, [x0, #0x1d0]
00000000000340bc	adr	x9, #0x53154
00000000000340c0	nop
00000000000340c4	ldxr	x10, [x9]
00000000000340c8	add	x10, x10, x8
00000000000340cc	stxr	w11, x10, [x9]
00000000000340d0	cbnz	w11, 0x340c4
00000000000340d4	ldr	x8, [x0, #0x1d8]
00000000000340d8	adr	x9, #0x53140
00000000000340dc	nop
00000000000340e0	ldxr	x10, [x9]
00000000000340e4	add	x10, x10, x8
00000000000340e8	stxr	w11, x10, [x9]
00000000000340ec	cbnz	w11, 0x340e0
00000000000340f0	ldr	x8, [x0, #0x1e0]
00000000000340f4	adr	x9, #0x5312c
00000000000340f8	nop
00000000000340fc	ldxr	x10, [x9]
0000000000034100	add	x10, x10, x8
0000000000034104	stxr	w11, x10, [x9]
0000000000034108	cbnz	w11, 0x340fc
000000000003410c	ldr	x8, [x0, #0x1e8]
0000000000034110	adr	x9, #0x53118
0000000000034114	nop
0000000000034118	ldxr	x10, [x9]
000000000003411c	add	x10, x10, x8
0000000000034120	stxr	w11, x10, [x9]
0000000000034124	cbnz	w11, 0x34118
0000000000034128	ldr	x8, [x0, #0x1f0]
000000000003412c	adr	x9, #0x53104
0000000000034130	nop
0000000000034134	ldxr	x10, [x9]
0000000000034138	add	x10, x10, x8
000000000003413c	stxr	w11, x10, [x9]
0000000000034140	cbnz	w11, 0x34134
0000000000034144	ldr	x8, [x0, #0x1f8]
0000000000034148	adr	x9, #0x530f0
000000000003414c	nop
0000000000034150	ldxr	x10, [x9]
0000000000034154	add	x10, x10, x8
0000000000034158	stxr	w11, x10, [x9]
000000000003415c	cbnz	w11, 0x34150
0000000000034160	ldr	x8, [x0, #0x200]
0000000000034164	adr	x9, #0x530dc
0000000000034168	nop
000000000003416c	ldxr	x10, [x9]
0000000000034170	add	x10, x10, x8
0000000000034174	stxr	w11, x10, [x9]
0000000000034178	cbnz	w11, 0x3416c
000000000003417c	ldr	x8, [x0, #0x208]
0000000000034180	adr	x9, #0x530c8
0000000000034184	nop
0000000000034188	ldxr	x10, [x9]
000000000003418c	add	x10, x10, x8
0000000000034190	stxr	w11, x10, [x9]
0000000000034194	cbnz	w11, 0x34188
0000000000034198	ldr	x8, [x0, #0x210]
000000000003419c	adr	x9, #0x530b4
00000000000341a0	nop
00000000000341a4	ldxr	x10, [x9]
00000000000341a8	add	x10, x10, x8
00000000000341ac	stxr	w11, x10, [x9]
00000000000341b0	cbnz	w11, 0x341a4
00000000000341b4	ldr	x8, [x0, #0x218]
00000000000341b8	adr	x9, #0x530a0
00000000000341bc	nop
00000000000341c0	ldxr	x10, [x9]
00000000000341c4	add	x10, x10, x8
00000000000341c8	stxr	w11, x10, [x9]
00000000000341cc	cbnz	w11, 0x341c0
00000000000341d0	ldr	x8, [x0, #0x220]
00000000000341d4	adr	x9, #0x5308c
00000000000341d8	nop
00000000000341dc	ldxr	x10, [x9]
00000000000341e0	add	x10, x10, x8
00000000000341e4	stxr	w11, x10, [x9]
00000000000341e8	cbnz	w11, 0x341dc
00000000000341ec	ldr	x8, [x0, #0x228]
00000000000341f0	adr	x9, #0x53078
00000000000341f4	nop
00000000000341f8	ldxr	x10, [x9]
00000000000341fc	add	x10, x10, x8
0000000000034200	stxr	w11, x10, [x9]
0000000000034204	cbnz	w11, 0x341f8
0000000000034208	ldr	x8, [x0, #0x230]
000000000003420c	adr	x9, #0x53064
0000000000034210	nop
0000000000034214	ldxr	x10, [x9]
0000000000034218	add	x10, x10, x8
000000000003421c	stxr	w11, x10, [x9]
0000000000034220	cbnz	w11, 0x34214
0000000000034224	ldr	x8, [x0, #0x238]
0000000000034228	adr	x9, #0x53050
000000000003422c	nop
0000000000034230	ldxr	x10, [x9]
0000000000034234	add	x10, x10, x8
0000000000034238	stxr	w11, x10, [x9]
000000000003423c	cbnz	w11, 0x34230
0000000000034240	mov	w1, #0x240
0000000000034244	bl	0x519d4 ; symbol stub for: _bzero
0000000000034248	ldp	x29, x30, [sp], #0x10
000000000003424c	ret
_mi_heap_collect_ex:
0000000000034250	sub	sp, sp, #0x70
0000000000034254	stp	x28, x27, [sp, #0x10]
0000000000034258	stp	x26, x25, [sp, #0x20]
000000000003425c	stp	x24, x23, [sp, #0x30]
0000000000034260	stp	x22, x21, [sp, #0x40]
0000000000034264	stp	x20, x19, [sp, #0x50]
0000000000034268	stp	x29, x30, [sp, #0x60]
000000000003426c	add	x29, sp, #0x60
0000000000034270	cbz	x0, 0x34e90
0000000000034274	mov	x28, x0
0000000000034278	adr	x8, #0x32c08
000000000003427c	nop
0000000000034280	cmp	x0, x8
0000000000034284	b.eq	0x34e90
0000000000034288	mov	x20, x1
000000000003428c	ldr	x8, [x28]
0000000000034290	ldr	x9, [x8]
0000000000034294	add	x1, x9, #0x1
0000000000034298	str	x1, [x8]
000000000003429c	nop
00000000000342a0	ldr	x9, #0x529e8
00000000000342a4	cbz	x9, 0x342b0
00000000000342a8	ldrb	w9, [x8, #0x8]
00000000000342ac	cbz	w9, 0x342fc
00000000000342b0	adrp	x9, 56 ; 0x6c000
00000000000342b4	cmp	w20, #0x2
00000000000342b8	b.eq	0x34330
00000000000342bc	cmp	w20, #0x1
00000000000342c0	b.ne	0x342f4
00000000000342c4	ldr	x19, [x9, #0x1a0]
00000000000342c8	cbz	x19, 0x342e0
00000000000342cc	bl	0x51cb0 ; symbol stub for: _pthread_self
00000000000342d0	bl	0x51c68 ; symbol stub for: _pthread_mach_thread_np
00000000000342d4	cmp	x19, w0, uxtw
00000000000342d8	b.ne	0x342f4
00000000000342dc	ldr	x8, [x28]
00000000000342e0	ldr	x9, [x8, #0x10]
00000000000342e4	cmp	x9, x28
00000000000342e8	b.ne	0x342f4
00000000000342ec	ldrb	w9, [x28, #0xbe8]
00000000000342f0	cbz	w9, 0x34f70
00000000000342f4	mov	w21, #0x0
00000000000342f8	b	0x343b4
00000000000342fc	mov	w9, #0x1
0000000000034300	strb	w9, [x8, #0x8]
0000000000034304	adr	x8, #0x52984
0000000000034308	nop
000000000003430c	ldr	x9, [x8], #0x8
0000000000034310	ldr	x2, [x8]
0000000000034314	mov	w0, #0x1
0000000000034318	blr	x9
000000000003431c	ldr	x8, [x28]
0000000000034320	strb	wzr, [x8, #0x8]
0000000000034324	adrp	x9, 56 ; 0x6c000
0000000000034328	cmp	w20, #0x2
000000000003432c	b.ne	0x342bc
0000000000034330	ldr	x8, [x28, #0xbc8]
0000000000034334	cbz	x8, 0x343b0
0000000000034338	mov	x8, #0x0
000000000003433c	mov	w9, #0x18
0000000000034340	b	0x34350
0000000000034344	add	x8, x8, #0x1
0000000000034348	cmp	x8, #0x4b
000000000003434c	b.eq	0x343b0
0000000000034350	madd	x10, x8, x9, x28
0000000000034354	ldr	x10, [x10, #0x410]
0000000000034358	cbnz	x10, 0x34364
000000000003435c	b	0x34344
0000000000034360	cbz	x10, 0x34344
0000000000034364	add	x11, x10, #0x20
0000000000034368	ldr	x10, [x10, #0x30]
000000000003436c	ldar	x12, [x11]
0000000000034370	and	w13, w12, #0x3
0000000000034374	cmp	w13, #0x3
0000000000034378	b.eq	0x34360
000000000003437c	cmp	w13, #0x1
0000000000034380	b.eq	0x343a8
0000000000034384	ldxr	x13, [x11]
0000000000034388	cmp	x13, x12
000000000003438c	b.ne	0x343a0
0000000000034390	orr	x12, x12, #0x3
0000000000034394	stlxr	w13, x12, [x11]
0000000000034398	cbnz	w13, 0x3436c
000000000003439c	b	0x34360
00000000000343a0	clrex
00000000000343a4	b	0x3436c
00000000000343a8	wfe
00000000000343ac	b	0x3436c
00000000000343b0	mov	w21, #0x1
00000000000343b4	add	x8, x28, #0xb18
00000000000343b8	ldr	x9, [x28, #0xb18]
00000000000343bc	b	0x343cc
00000000000343c0	clrex
00000000000343c4	mov	w10, #0x0
00000000000343c8	cbnz	w10, 0x343f0
00000000000343cc	cbz	x9, 0x34400
00000000000343d0	mov	x0, x9
00000000000343d4	ldaxr	x9, [x8]
00000000000343d8	cmp	x9, x0
00000000000343dc	b.ne	0x343c0
00000000000343e0	stlxr	w10, xzr, [x8]
00000000000343e4	cbnz	w10, 0x343c4
00000000000343e8	mov	w10, #0x1
00000000000343ec	cbz	w10, 0x343cc
00000000000343f0	ldr	x19, [x0]
00000000000343f4	bl	__mi_free_delayed_block
00000000000343f8	mov	x0, x19
00000000000343fc	cbnz	x19, 0x343f0
0000000000034400	ldr	x19, [x28, #0xbd0]
0000000000034404	ldr	x8, [x28, #0xbd8]
0000000000034408	cmp	x19, x8
000000000003440c	b.ls	0x347a8
0000000000034410	mov	w8, #0x4a
0000000000034414	str	x8, [x28, #0xbd0]
0000000000034418	str	xzr, [x28, #0xbd8]
000000000003441c	ldr	x8, [x28, #0xbc8]
0000000000034420	cbz	x8, 0x34868
0000000000034424	tbz	w21, #0x0, 0x34808
0000000000034428	mov	x23, #0x0
000000000003442c	add	x24, x28, #0x3f8
0000000000034430	adr	x22, #0x52c10
0000000000034434	nop
0000000000034438	adr	x25, #0x52e48
000000000003443c	nop
0000000000034440	str	x28, [sp, #0x8]
0000000000034444	b	0x3445c
0000000000034448	add	x23, x23, #0x1
000000000003444c	add	x24, x24, #0x18
0000000000034450	cmp	x23, #0x4b
0000000000034454	ldr	x28, [sp, #0x8]
0000000000034458	b.eq	0x34868
000000000003445c	mov	w8, #0x18
0000000000034460	madd	x8, x23, x8, x28
0000000000034464	ldr	x26, [x8, #0x410]
0000000000034468	cbz	x26, 0x34448
000000000003446c	add	x20, x8, #0x410
0000000000034470	ldr	x8, [sp, #0x8]
0000000000034474	mov	w9, #0x18
0000000000034478	madd	x8, x23, x9, x8
000000000003447c	add	x19, x8, #0x418
0000000000034480	add	x27, x8, #0x420
0000000000034484	b	0x3449c
0000000000034488	mov	x0, x21
000000000003448c	mov	x1, x20
0000000000034490	mov	w2, #0x1
0000000000034494	bl	__mi_page_free
0000000000034498	cbz	x26, 0x34448
000000000003449c	mov	x21, x26
00000000000344a0	mov	x28, x26
00000000000344a4	ldr	x26, [x28, #0x30]!
00000000000344a8	mov	x0, x21
00000000000344ac	mov	w1, #0x1
00000000000344b0	bl	__mi_page_free_collect
00000000000344b4	ldr	w8, [x21, #0x10]
00000000000344b8	cbz	w8, 0x34488
00000000000344bc	ldr	x8, [x21, #0x28]
00000000000344c0	ldr	x8, [x8]
00000000000344c4	ldr	x9, [x21, #0x28]
00000000000344c8	ldr	x11, [x21, #0x38]
00000000000344cc	cbz	x11, 0x344d8
00000000000344d0	ldr	x10, [x28]
00000000000344d4	str	x10, [x11, #0x30]
00000000000344d8	ldr	x10, [x28]
00000000000344dc	cbz	x10, 0x344e4
00000000000344e0	str	x11, [x10, #0x38]
00000000000344e4	ldr	x11, [x19]
00000000000344e8	cmp	x11, x21
00000000000344ec	b.eq	0x34500
00000000000344f0	ldr	x11, [x20]
00000000000344f4	cmp	x11, x21
00000000000344f8	b.ne	0x346a8
00000000000344fc	b	0x34514
0000000000034500	ldr	x11, [x21, #0x38]
0000000000034504	str	x11, [x19]
0000000000034508	ldr	x11, [x20]
000000000003450c	cmp	x11, x21
0000000000034510	b.ne	0x346a8
0000000000034514	str	x10, [x20]
0000000000034518	ldr	x12, [x27]
000000000003451c	cmp	x12, #0x400
0000000000034520	b.hi	0x346a8
0000000000034524	cmp	x10, #0x0
0000000000034528	adr	x11, #0x1ead8
000000000003452c	nop
0000000000034530	csel	x10, x11, x10, eq
0000000000034534	add	x11, x12, #0x7
0000000000034538	lsr	x11, x11, #3
000000000003453c	add	x13, x9, x11, lsl #3
0000000000034540	ldr	x13, [x13, #0x8]
0000000000034544	cmp	x13, x10
0000000000034548	b.eq	0x346a8
000000000003454c	cmp	x12, #0x9
0000000000034550	b.hs	0x3455c
0000000000034554	mov	x12, #0x0
0000000000034558	b	0x3464c
000000000003455c	sub	x13, x11, #0x1
0000000000034560	clz	x14, x13
0000000000034564	mov	w15, #0x3f
0000000000034568	sub	w14, w15, w14
000000000003456c	and	w14, w14, #0xff
0000000000034570	sub	w15, w14, #0x2
0000000000034574	lsr	x13, x13, x15
0000000000034578	and	w13, w13, #0x3
000000000003457c	bfi	w13, w14, #2, #8
0000000000034580	sub	w13, w13, #0x3
0000000000034584	add	w14, w11, #0x1
0000000000034588	and	w14, w14, #0xfffffffe
000000000003458c	cmp	x12, #0x40
0000000000034590	csel	w12, w13, w14, hi
0000000000034594	add	x13, x9, #0x410
0000000000034598	mov	x14, x24
000000000003459c	b	0x345bc
00000000000345a0	mov	w16, #0x1
00000000000345a4	cmp	x14, x13
00000000000345a8	b.ls	0x3463c
00000000000345ac	sub	x14, x14, #0x18
00000000000345b0	and	w17, w12, #0xff
00000000000345b4	cmp	w17, w16, uxtb
00000000000345b8	b.ne	0x3463c
00000000000345bc	ldr	x15, [x14, #0x10]
00000000000345c0	add	x16, x15, #0x7
00000000000345c4	lsr	x15, x16, #3
00000000000345c8	cmp	x16, #0x10
00000000000345cc	b.lo	0x345a0
00000000000345d0	cmp	x16, #0x47
00000000000345d4	b.hi	0x345ec
00000000000345d8	add	w16, w15, #0x1
00000000000345dc	and	w16, w16, #0xfffffffe
00000000000345e0	cmp	x14, x13
00000000000345e4	b.hi	0x345ac
00000000000345e8	b	0x3463c
00000000000345ec	mov	w17, #0x7
00000000000345f0	movk	w17, #0x20, lsl #16
00000000000345f4	cmp	x16, x17
00000000000345f8	b.ls	0x3460c
00000000000345fc	mov	w16, #0x49
0000000000034600	cmp	x14, x13
0000000000034604	b.hi	0x345ac
0000000000034608	b	0x3463c
000000000003460c	sub	x16, x15, #0x1
0000000000034610	clz	x17, x16
0000000000034614	mov	w0, #0x3f
0000000000034618	sub	w17, w0, w17
000000000003461c	and	w17, w17, #0xff
0000000000034620	sub	w0, w17, #0x2
0000000000034624	lsr	x16, x16, x0
0000000000034628	and	w16, w16, #0x3
000000000003462c	bfi	w16, w17, #2, #8
0000000000034630	sub	w16, w16, #0x3
0000000000034634	cmp	x14, x13
0000000000034638	b.hi	0x345ac
000000000003463c	cmp	x15, x11
0000000000034640	csinc	x12, x11, x15, hs
0000000000034644	cmp	x12, x11
0000000000034648	b.hi	0x346a8
000000000003464c	sub	x13, x11, x12
0000000000034650	add	x13, x13, #0x1
0000000000034654	cmp	x13, #0x4
0000000000034658	b.lo	0x3468c
000000000003465c	and	x14, x13, #0xfffffffffffffffc
0000000000034660	dup.2d	v0, x10
0000000000034664	add	x15, x9, x12, lsl #3
0000000000034668	add	x15, x15, #0x18
000000000003466c	mov	x16, x14
0000000000034670	stp	q0, q0, [x15, #-0x10]
0000000000034674	add	x15, x15, #0x20
0000000000034678	subs	x16, x16, #0x4
000000000003467c	b.ne	0x34670
0000000000034680	cmp	x13, x14
0000000000034684	b.eq	0x346a8
0000000000034688	add	x12, x12, x14
000000000003468c	sub	x11, x11, x12
0000000000034690	add	x11, x11, #0x1
0000000000034694	add	x12, x9, x12, lsl #3
0000000000034698	add	x12, x12, #0x8
000000000003469c	str	x10, [x12], #0x8
00000000000346a0	subs	x11, x11, #0x1
00000000000346a4	b.ne	0x3469c
00000000000346a8	ldr	x10, [x9, #0xbc8]
00000000000346ac	sub	x10, x10, #0x1
00000000000346b0	str	x10, [x9, #0xbc8]
00000000000346b4	stp	xzr, xzr, [x28]
00000000000346b8	ldrb	w9, [x21, #0x6]
00000000000346bc	and	w9, w9, #0xfe
00000000000346c0	strb	w9, [x21, #0x6]
00000000000346c4	add	x9, x21, #0x28
00000000000346c8	stlr	xzr, [x9]
00000000000346cc	and	x0, x21, #0xffffffffffc00000
00000000000346d0	ldr	x9, [x0, #0x28]
00000000000346d4	add	x10, x9, #0x1
00000000000346d8	str	x10, [x0, #0x28]
00000000000346dc	ldr	x13, [x8, #0x90]
00000000000346e0	add	x9, x13, #0xe0
00000000000346e4	cmp	x9, x22
00000000000346e8	ccmp	x9, x25, #0x2, hs
00000000000346ec	b.lo	0x34724
00000000000346f0	ldp	x14, x12, [x13, #0xf0]
00000000000346f4	add	x11, x12, #0x1
00000000000346f8	str	x11, [x13, #0xf8]
00000000000346fc	cmp	x12, x14
0000000000034700	b.lt	0x34708
0000000000034704	str	x11, [x13, #0xf0]
0000000000034708	ldr	x11, [x9]
000000000003470c	add	x11, x11, #0x1
0000000000034710	str	x11, [x9]
0000000000034714	ldr	x9, [x0, #0x38]
0000000000034718	cmp	x9, x10
000000000003471c	b.ne	0x34498
0000000000034720	b	0x3479c
0000000000034724	add	x12, x13, #0xf8
0000000000034728	ldxr	x10, [x12]
000000000003472c	add	x11, x10, #0x1
0000000000034730	stxr	w14, x11, [x12]
0000000000034734	cbnz	w14, 0x34728
0000000000034738	add	x12, x13, #0xf0
000000000003473c	ldr	x14, [x13, #0xf0]
0000000000034740	b	0x34754
0000000000034744	clrex
0000000000034748	mov	w15, #0x0
000000000003474c	mov	x14, x13
0000000000034750	cbnz	w15, 0x3477c
0000000000034754	cmp	x14, x10
0000000000034758	b.gt	0x3477c
000000000003475c	ldxr	x13, [x12]
0000000000034760	cmp	x13, x14
0000000000034764	b.ne	0x34744
0000000000034768	stlxr	w14, x11, [x12]
000000000003476c	cbnz	w14, 0x34748
0000000000034770	mov	w15, #0x1
0000000000034774	mov	x14, x13
0000000000034778	cbz	w15, 0x34754
000000000003477c	ldxr	x10, [x9]
0000000000034780	add	x10, x10, #0x1
0000000000034784	stxr	w11, x10, [x9]
0000000000034788	cbnz	w11, 0x3477c
000000000003478c	ldr	x10, [x0, #0x28]
0000000000034790	ldr	x9, [x0, #0x38]
0000000000034794	cmp	x9, x10
0000000000034798	b.ne	0x34498
000000000003479c	add	x1, x8, #0x20
00000000000347a0	bl	_mi_segment_abandon
00000000000347a4	b	0x34498
00000000000347a8	mov	w8, #0x18
00000000000347ac	madd	x8, x19, x8, x28
00000000000347b0	add	x20, x8, #0x410
00000000000347b4	b	0x347e0
00000000000347b8	strb	w10, [x8, #0x7]
00000000000347bc	ldr	x0, [x20]
00000000000347c0	mov	x1, x20
00000000000347c4	mov	w2, #0x1
00000000000347c8	bl	__mi_page_free
00000000000347cc	add	x19, x19, #0x1
00000000000347d0	ldr	x8, [x28, #0xbd8]
00000000000347d4	add	x20, x20, #0x18
00000000000347d8	cmp	x19, x8
00000000000347dc	b.hi	0x34410
00000000000347e0	ldr	x8, [x20]
00000000000347e4	cbz	x8, 0x347cc
00000000000347e8	ldrb	w9, [x8, #0x7]
00000000000347ec	subs	w10, w9, #0x2
00000000000347f0	b.lo	0x347cc
00000000000347f4	ldr	w11, [x8, #0x10]
00000000000347f8	cbz	w11, 0x347b8
00000000000347fc	and	w9, w9, #0x1
0000000000034800	strb	w9, [x8, #0x7]
0000000000034804	b	0x347cc
0000000000034808	mov	x19, #0x0
000000000003480c	mov	w22, #0x18
0000000000034810	b	0x34820
0000000000034814	add	x19, x19, #0x1
0000000000034818	cmp	x19, #0x4b
000000000003481c	b.eq	0x34868
0000000000034820	madd	x8, x19, x22, x28
0000000000034824	ldr	x21, [x8, #0x410]
0000000000034828	cbz	x21, 0x34814
000000000003482c	add	x20, x8, #0x410
0000000000034830	b	0x3483c
0000000000034834	mov	x21, x23
0000000000034838	cbz	x23, 0x34814
000000000003483c	ldr	x23, [x21, #0x30]
0000000000034840	mov	x0, x21
0000000000034844	mov	w1, #0x1
0000000000034848	bl	__mi_page_free_collect
000000000003484c	ldr	w8, [x21, #0x10]
0000000000034850	cbnz	w8, 0x34834
0000000000034854	mov	x0, x21
0000000000034858	mov	x1, x20
000000000003485c	mov	w2, #0x1
0000000000034860	bl	__mi_page_free
0000000000034864	b	0x34834
0000000000034868	ldr	x23, [x28]
000000000003486c	ldr	x20, [x23, #0x88]
0000000000034870	cbz	x20, 0x34e64
0000000000034874	adr	x24, #0x527cc
0000000000034878	nop
000000000003487c	mov	w25, #0x1039
0000000000034880	movi.16b	v16, #0x4
0000000000034884	movi.16b	v17, #0x2
0000000000034888	adr	x26, #0x529f8
000000000003488c	nop
0000000000034890	b	0x348c0
0000000000034894	mov	w4, #0x0
0000000000034898	mov	w19, #0x1
000000000003489c	ldr	x2, [x20]
00000000000348a0	and	w3, w19, #0x1
00000000000348a4	mov	x0, x20
00000000000348a8	mov	x1, x21
00000000000348ac	bl	__mi_mem_free
00000000000348b0	ldr	x20, [x23, #0x88]
00000000000348b4	movi.16b	v16, #0x4
00000000000348b8	movi.16b	v17, #0x2
00000000000348bc	cbz	x20, 0x34e64
00000000000348c0	ldr	x8, [x23, #0x78]
00000000000348c4	sub	x8, x8, #0x1
00000000000348c8	str	x8, [x23, #0x78]
00000000000348cc	ldr	x8, [x20, #0x18]
00000000000348d0	str	x8, [x23, #0x88]
00000000000348d4	str	xzr, [x20, #0x18]
00000000000348d8	ldr	x8, [x23, #0x90]
00000000000348dc	add	x9, x8, #0x1a0
00000000000348e0	cmp	x9, x24
00000000000348e4	ccmp	x9, x26, #0x2, hs
00000000000348e8	b.lo	0x34914
00000000000348ec	ldp	x10, x9, [x8, #0x1b0]
00000000000348f0	sub	x9, x9, #0x1
00000000000348f4	str	x9, [x8, #0x1b8]
00000000000348f8	cmp	x9, x10
00000000000348fc	b.le	0x34904
0000000000034900	str	x9, [x8, #0x1b0]
0000000000034904	ldr	x9, [x8, #0x1a8]
0000000000034908	add	x9, x9, #0x1
000000000003490c	str	x9, [x8, #0x1a8]
0000000000034910	b	0x34980
0000000000034914	add	x10, x8, #0x1b8
0000000000034918	ldxr	x9, [x10]
000000000003491c	sub	x9, x9, #0x1
0000000000034920	stxr	w11, x9, [x10]
0000000000034924	cbnz	w11, 0x34918
0000000000034928	add	x10, x8, #0x1b0
000000000003492c	ldr	x12, [x8, #0x1b0]
0000000000034930	b	0x34944
0000000000034934	clrex
0000000000034938	mov	w13, #0x0
000000000003493c	mov	x12, x11
0000000000034940	cbnz	w13, 0x3496c
0000000000034944	cmp	x12, x9
0000000000034948	b.ge	0x3496c
000000000003494c	ldxr	x11, [x10]
0000000000034950	cmp	x11, x12
0000000000034954	b.ne	0x34934
0000000000034958	stlxr	w12, x9, [x10]
000000000003495c	cbnz	w12, 0x34938
0000000000034960	mov	w13, #0x1
0000000000034964	mov	x12, x11
0000000000034968	cbz	w13, 0x34944
000000000003496c	add	x8, x8, #0x1a8
0000000000034970	ldxr	x9, [x8]
0000000000034974	add	x9, x9, #0x1
0000000000034978	stxr	w10, x9, [x8]
000000000003497c	cbnz	w10, 0x34970
0000000000034980	ldr	x21, [x20, #0x48]
0000000000034984	add	x8, x20, #0x68
0000000000034988	stlr	xzr, [x8]
000000000003498c	ldr	x8, [x23, #0x90]
0000000000034990	cmp	x8, x24
0000000000034994	cset	w9, hs
0000000000034998	add	x10, x24, #0x240
000000000003499c	cmp	x8, x10
00000000000349a0	cset	w10, lo
00000000000349a4	and	w9, w9, w10
00000000000349a8	add	x11, x8, #0x18
00000000000349ac	cmp	x21, #0x0
00000000000349b0	b.le	0x34a3c
00000000000349b4	cbz	w9, 0x34ae0
00000000000349b8	ldxr	x9, [x11]
00000000000349bc	sub	x9, x9, #0x1
00000000000349c0	stxr	w10, x9, [x11]
00000000000349c4	cbnz	w10, 0x349b8
00000000000349c8	add	x10, x8, #0x10
00000000000349cc	ldr	x12, [x8, #0x10]
00000000000349d0	b	0x349e4
00000000000349d4	clrex
00000000000349d8	mov	w13, #0x0
00000000000349dc	mov	x12, x11
00000000000349e0	cbnz	w13, 0x34a0c
00000000000349e4	cmp	x12, x9
00000000000349e8	b.ge	0x34a0c
00000000000349ec	ldxr	x11, [x10]
00000000000349f0	cmp	x11, x12
00000000000349f4	b.ne	0x349d4
00000000000349f8	stlxr	w12, x9, [x10]
00000000000349fc	cbnz	w12, 0x349d8
0000000000034a00	mov	w13, #0x1
0000000000034a04	mov	x12, x11
0000000000034a08	cbz	w13, 0x349e4
0000000000034a0c	add	x8, x8, #0x8
0000000000034a10	ldxr	x9, [x8]
0000000000034a14	add	x9, x9, #0x1
0000000000034a18	stxr	w10, x9, [x8]
0000000000034a1c	cbnz	w10, 0x34a10
0000000000034a20	mov	x9, #-0x1
0000000000034a24	ldp	x8, x10, [x23, #0x58]
0000000000034a28	add	x8, x8, x9
0000000000034a2c	str	x8, [x23, #0x58]
0000000000034a30	cmp	x8, x10
0000000000034a34	b.hi	0x34b40
0000000000034a38	b	0x34abc
0000000000034a3c	cbz	w9, 0x34b04
0000000000034a40	ldxr	x9, [x11]
0000000000034a44	add	x10, x9, #0x1
0000000000034a48	stxr	w12, x10, [x11]
0000000000034a4c	cbnz	w12, 0x34a40
0000000000034a50	add	x11, x8, #0x10
0000000000034a54	ldr	x13, [x8, #0x10]
0000000000034a58	b	0x34a6c
0000000000034a5c	clrex
0000000000034a60	mov	w14, #0x0
0000000000034a64	mov	x13, x12
0000000000034a68	cbnz	w14, 0x34a94
0000000000034a6c	cmp	x13, x9
0000000000034a70	b.gt	0x34a94
0000000000034a74	ldxr	x12, [x11]
0000000000034a78	cmp	x12, x13
0000000000034a7c	b.ne	0x34a5c
0000000000034a80	stlxr	w13, x10, [x11]
0000000000034a84	cbnz	w13, 0x34a60
0000000000034a88	mov	w14, #0x1
0000000000034a8c	mov	x13, x12
0000000000034a90	cbz	w14, 0x34a6c
0000000000034a94	ldxr	x9, [x8]
0000000000034a98	add	x9, x9, #0x1
0000000000034a9c	stxr	w10, x9, [x8]
0000000000034aa0	cbnz	w10, 0x34a94
0000000000034aa4	mov	w9, #0x1
0000000000034aa8	ldp	x8, x10, [x23, #0x58]
0000000000034aac	add	x8, x8, x9
0000000000034ab0	str	x8, [x23, #0x58]
0000000000034ab4	cmp	x8, x10
0000000000034ab8	b.hi	0x34b40
0000000000034abc	ldp	x8, x9, [x23, #0x68]
0000000000034ac0	sub	x8, x8, x21
0000000000034ac4	str	x8, [x23, #0x68]
0000000000034ac8	cmp	x8, x9
0000000000034acc	b.ls	0x34b58
0000000000034ad0	str	x8, [x23, #0x70]
0000000000034ad4	ldr	x8, [x20, #0x40]
0000000000034ad8	cbnz	x8, 0x34b60
0000000000034adc	b	0x34894
0000000000034ae0	ldp	x10, x9, [x8, #0x10]
0000000000034ae4	sub	x9, x9, #0x1
0000000000034ae8	str	x9, [x8, #0x18]
0000000000034aec	cmp	x9, x10
0000000000034af0	b.le	0x34af8
0000000000034af4	str	x9, [x8, #0x10]
0000000000034af8	add	x8, x8, #0x8
0000000000034afc	mov	x9, #-0x1
0000000000034b00	b	0x34b20
0000000000034b04	ldp	x11, x10, [x8, #0x10]
0000000000034b08	add	x9, x10, #0x1
0000000000034b0c	str	x9, [x8, #0x18]
0000000000034b10	cmp	x10, x11
0000000000034b14	b.lt	0x34b1c
0000000000034b18	str	x9, [x8, #0x10]
0000000000034b1c	mov	w9, #0x1
0000000000034b20	ldr	x10, [x8]
0000000000034b24	add	x10, x10, #0x1
0000000000034b28	str	x10, [x8]
0000000000034b2c	ldp	x8, x10, [x23, #0x58]
0000000000034b30	add	x8, x8, x9
0000000000034b34	str	x8, [x23, #0x58]
0000000000034b38	cmp	x8, x10
0000000000034b3c	b.ls	0x34abc
0000000000034b40	str	x8, [x23, #0x60]
0000000000034b44	ldp	x8, x9, [x23, #0x68]
0000000000034b48	sub	x8, x8, x21
0000000000034b4c	str	x8, [x23, #0x68]
0000000000034b50	cmp	x8, x9
0000000000034b54	b.hi	0x34ad0
0000000000034b58	ldr	x8, [x20, #0x40]
0000000000034b5c	cbz	x8, 0x34894
0000000000034b60	cmp	x8, #0x1f
0000000000034b64	b.hi	0x34b78
0000000000034b68	mov	w10, #0x0
0000000000034b6c	mov	x9, #0x0
0000000000034b70	mov	w19, #0x1
0000000000034b74	b	0x34e14
0000000000034b78	and	x9, x8, #0xffffffffffffffe0
0000000000034b7c	add	x10, x20, x25
0000000000034b80	movi.16b	v2, #0x1
0000000000034b84	movi.16b	v0, #0x0
0000000000034b88	mov	x11, x9
0000000000034b8c	movi.16b	v1, #0x0
0000000000034b90	movi.16b	v3, #0x1
0000000000034b94	sub	x12, x10, #0x7c0
0000000000034b98	prfm	pldl1keep, [x12]
0000000000034b9c	sub	x12, x10, #0x780
0000000000034ba0	prfm	pldl1keep, [x12]
0000000000034ba4	sub	x12, x10, #0xfc0
0000000000034ba8	ldr	b4, [x12]
0000000000034bac	sub	x12, x10, #0x740
0000000000034bb0	prfm	pldl1keep, [x12]
0000000000034bb4	sub	x12, x10, #0xf80
0000000000034bb8	ld1.b	{ v4 }[1], [x12]
0000000000034bbc	sub	x12, x10, #0x700
0000000000034bc0	prfm	pldl1keep, [x12]
0000000000034bc4	sub	x12, x10, #0xf40
0000000000034bc8	ld1.b	{ v4 }[2], [x12]
0000000000034bcc	sub	x12, x10, #0x6c0
0000000000034bd0	prfm	pldl1keep, [x12]
0000000000034bd4	sub	x12, x10, #0xf00
0000000000034bd8	ld1.b	{ v4 }[3], [x12]
0000000000034bdc	sub	x12, x10, #0x680
0000000000034be0	prfm	pldl1keep, [x12]
0000000000034be4	sub	x12, x10, #0xec0
0000000000034be8	ld1.b	{ v4 }[4], [x12]
0000000000034bec	sub	x12, x10, #0x640
0000000000034bf0	prfm	pldl1keep, [x12]
0000000000034bf4	sub	x12, x10, #0xe80
0000000000034bf8	ld1.b	{ v4 }[5], [x12]
0000000000034bfc	sub	x12, x10, #0x600
0000000000034c00	prfm	pldl1keep, [x12]
0000000000034c04	sub	x12, x10, #0xe40
0000000000034c08	ld1.b	{ v4 }[6], [x12]
0000000000034c0c	sub	x12, x10, #0x5c0
0000000000034c10	prfm	pldl1keep, [x12]
0000000000034c14	sub	x12, x10, #0xe00
0000000000034c18	ld1.b	{ v4 }[7], [x12]
0000000000034c1c	sub	x12, x10, #0x580
0000000000034c20	prfm	pldl1keep, [x12]
0000000000034c24	sub	x12, x10, #0xdc0
0000000000034c28	ld1.b	{ v4 }[8], [x12]
0000000000034c2c	sub	x12, x10, #0x540
0000000000034c30	prfm	pldl1keep, [x12]
0000000000034c34	sub	x12, x10, #0xd80
0000000000034c38	ld1.b	{ v4 }[9], [x12]
0000000000034c3c	sub	x12, x10, #0x500
0000000000034c40	prfm	pldl1keep, [x12]
0000000000034c44	sub	x12, x10, #0xd40
0000000000034c48	ld1.b	{ v4 }[10], [x12]
0000000000034c4c	sub	x12, x10, #0x4c0
0000000000034c50	prfm	pldl1keep, [x12]
0000000000034c54	sub	x12, x10, #0xd00
0000000000034c58	ld1.b	{ v4 }[11], [x12]
0000000000034c5c	sub	x12, x10, #0x480
0000000000034c60	prfm	pldl1keep, [x12]
0000000000034c64	sub	x12, x10, #0xcc0
0000000000034c68	ld1.b	{ v4 }[12], [x12]
0000000000034c6c	sub	x12, x10, #0x440
0000000000034c70	prfm	pldl1keep, [x12]
0000000000034c74	sub	x12, x10, #0xc80
0000000000034c78	ld1.b	{ v4 }[13], [x12]
0000000000034c7c	sub	x12, x10, #0x400
0000000000034c80	prfm	pldl1keep, [x12]
0000000000034c84	sub	x12, x10, #0xc40
0000000000034c88	ld1.b	{ v4 }[14], [x12]
0000000000034c8c	sub	x12, x10, #0xc00
0000000000034c90	ld1.b	{ v4 }[15], [x12]
0000000000034c94	sub	x12, x10, #0x3c0
0000000000034c98	prfm	pldl1keep, [x12]
0000000000034c9c	sub	x12, x10, #0x380
0000000000034ca0	prfm	pldl1keep, [x12]
0000000000034ca4	sub	x12, x10, #0xbc0
0000000000034ca8	ldr	b5, [x12]
0000000000034cac	sub	x12, x10, #0x340
0000000000034cb0	prfm	pldl1keep, [x12]
0000000000034cb4	sub	x12, x10, #0xb80
0000000000034cb8	ld1.b	{ v5 }[1], [x12]
0000000000034cbc	sub	x12, x10, #0x300
0000000000034cc0	prfm	pldl1keep, [x12]
0000000000034cc4	sub	x12, x10, #0xb40
0000000000034cc8	ld1.b	{ v5 }[2], [x12]
0000000000034ccc	sub	x12, x10, #0x2c0
0000000000034cd0	prfm	pldl1keep, [x12]
0000000000034cd4	sub	x12, x10, #0xb00
0000000000034cd8	ld1.b	{ v5 }[3], [x12]
0000000000034cdc	sub	x12, x10, #0x280
0000000000034ce0	prfm	pldl1keep, [x12]
0000000000034ce4	sub	x12, x10, #0xac0
0000000000034ce8	ld1.b	{ v5 }[4], [x12]
0000000000034cec	sub	x12, x10, #0x240
0000000000034cf0	prfm	pldl1keep, [x12]
0000000000034cf4	sub	x12, x10, #0xa80
0000000000034cf8	ld1.b	{ v5 }[5], [x12]
0000000000034cfc	sub	x12, x10, #0x200
0000000000034d00	prfm	pldl1keep, [x12]
0000000000034d04	sub	x12, x10, #0xa40
0000000000034d08	ld1.b	{ v5 }[6], [x12]
0000000000034d0c	sub	x12, x10, #0x1c0
0000000000034d10	prfm	pldl1keep, [x12]
0000000000034d14	sub	x12, x10, #0xa00
0000000000034d18	ld1.b	{ v5 }[7], [x12]
0000000000034d1c	sub	x12, x10, #0x180
0000000000034d20	prfm	pldl1keep, [x12]
0000000000034d24	sub	x12, x10, #0x9c0
0000000000034d28	ld1.b	{ v5 }[8], [x12]
0000000000034d2c	sub	x12, x10, #0x140
0000000000034d30	prfm	pldl1keep, [x12]
0000000000034d34	sub	x12, x10, #0x980
0000000000034d38	ld1.b	{ v5 }[9], [x12]
0000000000034d3c	sub	x12, x10, #0x940
0000000000034d40	prfum	pldl1keep, [x10, #-0x100]
0000000000034d44	ld1.b	{ v5 }[10], [x12]
0000000000034d48	sub	x12, x10, #0x900
0000000000034d4c	prfum	pldl1keep, [x10, #-0xc0]
0000000000034d50	ld1.b	{ v5 }[11], [x12]
0000000000034d54	sub	x12, x10, #0x8c0
0000000000034d58	prfum	pldl1keep, [x10, #-0x80]
0000000000034d5c	ld1.b	{ v5 }[12], [x12]
0000000000034d60	sub	x12, x10, #0x880
0000000000034d64	prfum	pldl1keep, [x10, #-0x40]
0000000000034d68	ld1.b	{ v5 }[13], [x12]
0000000000034d6c	sub	x12, x10, #0x840
0000000000034d70	prfm	pldl1keep, [x10]
0000000000034d74	ld1.b	{ v5 }[14], [x12]
0000000000034d78	sub	x12, x10, #0x800
0000000000034d7c	ld1.b	{ v5 }[15], [x12]
0000000000034d80	and.16b	v6, v4, v16
0000000000034d84	and.16b	v7, v5, v16
0000000000034d88	cmeq.16b	v6, v6, #0
0000000000034d8c	cmeq.16b	v7, v7, #0
0000000000034d90	bic.16b	v2, v2, v6
0000000000034d94	and.16b	v4, v4, v17
0000000000034d98	and.16b	v5, v5, v17
0000000000034d9c	bic.16b	v3, v3, v7
0000000000034da0	cmeq.16b	v4, v4, #0
0000000000034da4	cmeq.16b	v5, v5, #0
0000000000034da8	orn.16b	v0, v0, v4
0000000000034dac	orn.16b	v1, v1, v5
0000000000034db0	add	x10, x10, #0x800
0000000000034db4	subs	x11, x11, #0x20
0000000000034db8	b.ne	0x34b94
0000000000034dbc	and.16b	v2, v3, v2
0000000000034dc0	dup.2d	v3, v2[1]
0000000000034dc4	and.16b	v2, v2, v3
0000000000034dc8	dup.4s	v3, v2[1]
0000000000034dcc	and.16b	v2, v2, v3
0000000000034dd0	dup.8h	v3, v2[1]
0000000000034dd4	and.16b	v2, v2, v3
0000000000034dd8	dup.16b	v3, v2[1]
0000000000034ddc	and.16b	v2, v2, v3
0000000000034de0	umov.b	w19, v2[0]
0000000000034de4	orr.16b	v0, v1, v0
0000000000034de8	dup.2d	v1, v0[1]
0000000000034dec	orr.16b	v0, v0, v1
0000000000034df0	dup.4s	v1, v0[1]
0000000000034df4	orr.16b	v0, v0, v1
0000000000034df8	dup.8h	v1, v0[1]
0000000000034dfc	orr.16b	v0, v0, v1
0000000000034e00	dup.16b	v1, v0[1]
0000000000034e04	orr.16b	v0, v0, v1
0000000000034e08	umov.b	w10, v0[0]
0000000000034e0c	cmp	x8, x9
0000000000034e10	b.eq	0x34e3c
0000000000034e14	sub	x8, x8, x9
0000000000034e18	add	x9, x20, x9, lsl #6
0000000000034e1c	add	x9, x9, #0x79
0000000000034e20	ldrb	w11, [x9], #0x40
0000000000034e24	and	w12, w11, #0x4
0000000000034e28	and	w19, w19, w12, lsr #2
0000000000034e2c	and	w11, w11, #0x2
0000000000034e30	orr	w10, w10, w11, lsr #1
0000000000034e34	subs	x8, x8, #0x1
0000000000034e38	b.ne	0x34e20
0000000000034e3c	tbz	w10, #0x0, 0x34e5c
0000000000034e40	mov	w0, #0x5
0000000000034e44	bl	_mi_option_get
0000000000034e48	cmp	x0, #0x0
0000000000034e4c	cset	w8, eq
0000000000034e50	and	w19, w19, w8
0000000000034e54	mov	w4, #0x1
0000000000034e58	b	0x3489c
0000000000034e5c	mov	w4, #0x0
0000000000034e60	b	0x3489c
0000000000034e64	nop
0000000000034e68	ldr	x19, #0x37338
0000000000034e6c	cbz	x19, 0x34e80
0000000000034e70	bl	0x51cb0 ; symbol stub for: _pthread_self
0000000000034e74	bl	0x51c68 ; symbol stub for: _pthread_mach_thread_np
0000000000034e78	cmp	x19, w0, uxtw
0000000000034e7c	b.ne	0x34e90
0000000000034e80	ldr	x8, [x28]
0000000000034e84	ldr	x8, [x8, #0x10]
0000000000034e88	cmp	x8, x28
0000000000034e8c	b.eq	0x34eb0
0000000000034e90	ldp	x29, x30, [sp, #0x60]
0000000000034e94	ldp	x20, x19, [sp, #0x50]
0000000000034e98	ldp	x22, x21, [sp, #0x40]
0000000000034e9c	ldp	x24, x23, [sp, #0x30]
0000000000034ea0	ldp	x26, x25, [sp, #0x20]
0000000000034ea4	ldp	x28, x27, [sp, #0x10]
0000000000034ea8	add	sp, sp, #0x70
0000000000034eac	ret
0000000000034eb0	nop
0000000000034eb4	ldr	x19, #0x51cbc
0000000000034eb8	cbz	x19, 0x34e90
0000000000034ebc	mov	x20, #0x0
0000000000034ec0	adr	x21, #0x41b48
0000000000034ec4	nop
0000000000034ec8	mov	x22, #-0x1
0000000000034ecc	adr	x23, #0x51cb4
0000000000034ed0	nop
0000000000034ed4	b	0x34ee4
0000000000034ed8	add	x20, x20, #0x1
0000000000034edc	cmp	x20, x19
0000000000034ee0	b.eq	0x34e90
0000000000034ee4	add	x8, x21, x20, lsl #6
0000000000034ee8	ldr	x9, [x8]
0000000000034eec	cbz	x9, 0x34ed8
0000000000034ef0	add	x9, x8, #0x10
0000000000034ef4	ldr	x10, [x8, #0x10]
0000000000034ef8	b	0x34f08
0000000000034efc	clrex
0000000000034f00	mov	w11, #0x0
0000000000034f04	cbnz	w11, 0x34f24
0000000000034f08	cbnz	x10, 0x34ed8
0000000000034f0c	ldxr	x10, [x9]
0000000000034f10	cbnz	x10, 0x34efc
0000000000034f14	stlxr	w11, x22, [x9]
0000000000034f18	cbnz	w11, 0x34f00
0000000000034f1c	mov	w11, #0x1
0000000000034f20	cbz	w11, 0x34f08
0000000000034f24	add	x9, x21, x20, lsl #6
0000000000034f28	add	x10, x9, #0x8
0000000000034f2c	ldar	x0, [x10]
0000000000034f30	ldr	x2, [x9, #0x30]
0000000000034f34	ldr	x9, [x9, #0x20]
0000000000034f38	movi.16b	v0, #0x0
0000000000034f3c	stp	q0, q0, [x8, #0x20]
0000000000034f40	stp	q0, q0, [x8]
0000000000034f44	stlr	xzr, [x8]
0000000000034f48	cbnz	x0, 0x34f54
0000000000034f4c	b	0x34ed8
0000000000034f50	wfe
0000000000034f54	ldar	x8, [x23]
0000000000034f58	cbnz	x8, 0x34f50
0000000000034f5c	cmn	x9, #0x1
0000000000034f60	cset	w3, eq
0000000000034f64	mov	w1, #0x10000000
0000000000034f68	bl	__mi_arena_free
0000000000034f6c	b	0x34ed8
0000000000034f70	add	x20, x8, #0x20
0000000000034f74	adrp	x21, 82 ; 0x86000
0000000000034f78	adrp	x22, 82 ; 0x86000
0000000000034f7c	adr	x23, #0x51cc4
0000000000034f80	nop
0000000000034f84	adrp	x24, 82 ; 0x86000
0000000000034f88	adr	x25, #0x51c38
0000000000034f8c	nop
0000000000034f90	adr	x26, #0x51c70
0000000000034f94	nop
0000000000034f98	adr	x27, #0x51ce8
0000000000034f9c	nop
0000000000034fa0	adr	x19, #0x51be0
0000000000034fa4	nop
0000000000034fa8	ldr	x8, [x21, #0xbc0]
0000000000034fac	lsr	x8, x8, #22
0000000000034fb0	cbnz	x8, 0x35088
0000000000034fb4	ldr	x8, [x22, #0xc40]
0000000000034fb8	cbz	x8, 0x342f4
0000000000034fbc	ldaxr	x8, [x23]
0000000000034fc0	stlxr	w9, xzr, [x23]
0000000000034fc4	cbnz	w9, 0x34fbc
0000000000034fc8	cbz	x8, 0x342f4
0000000000034fcc	ldr	x10, [x21, #0xbc0]
0000000000034fd0	lsr	x9, x10, #22
0000000000034fd4	cbnz	x9, 0x35004
0000000000034fd8	ldr	x9, [x24, #0xc80]
0000000000034fdc	add	w11, w10, #0x1
0000000000034fe0	and	x11, x11, #0x3fffff
0000000000034fe4	orr	x11, x11, x8
0000000000034fe8	ldaxr	x12, [x25]
0000000000034fec	cmp	x12, x10
0000000000034ff0	b.ne	0x35000
0000000000034ff4	stlxr	w12, x11, [x25]
0000000000034ff8	cbnz	w12, 0x34fe8
0000000000034ffc	b	0x35068
0000000000035000	clrex
0000000000035004	mov	x9, x8
0000000000035008	mov	x10, x9
000000000003500c	ldr	x9, [x9, #0x10]
0000000000035010	cbnz	x9, 0x35008
0000000000035014	ldr	x12, [x21, #0xbc0]
0000000000035018	b	0x3502c
000000000003501c	clrex
0000000000035020	mov	w13, #0x0
0000000000035024	mov	x12, x11
0000000000035028	cbnz	w13, 0x35068
000000000003502c	ldr	x9, [x25, #0xc0]
0000000000035030	and	x11, x12, #0xffffffffffc00000
0000000000035034	add	x13, x10, #0x10
0000000000035038	stlr	x11, [x13]
000000000003503c	ldxr	x11, [x25]
0000000000035040	cmp	x11, x12
0000000000035044	b.ne	0x3501c
0000000000035048	add	w12, w12, #0x1
000000000003504c	and	x12, x12, #0x3fffff
0000000000035050	orr	x12, x12, x8
0000000000035054	stlxr	w13, x12, [x25]
0000000000035058	cbnz	w13, 0x35020
000000000003505c	mov	w13, #0x1
0000000000035060	mov	x12, x11
0000000000035064	cbz	w13, 0x3502c
0000000000035068	ldxr	x8, [x26]
000000000003506c	add	x8, x8, x9
0000000000035070	stxr	w10, x8, [x26]
0000000000035074	cbnz	w10, 0x35068
0000000000035078	ldxr	x8, [x27]
000000000003507c	sub	x8, x8, x9
0000000000035080	stxr	w10, x8, [x27]
0000000000035084	cbnz	w10, 0x35078
0000000000035088	ldxr	x8, [x19]
000000000003508c	add	x8, x8, #0x1
0000000000035090	stxr	w9, x8, [x19]
0000000000035094	cbnz	w9, 0x35088
0000000000035098	ldar	x9, [x25]
000000000003509c	b	0x350b0
00000000000350a0	clrex
00000000000350a4	mov	w10, #0x0
00000000000350a8	mov	x9, x8
00000000000350ac	cbnz	w10, 0x350e8
00000000000350b0	ands	x0, x9, #0xffffffffffc00000
00000000000350b4	b.eq	0x35134
00000000000350b8	ldr	x10, [x0, #0x10]
00000000000350bc	ldaxr	x8, [x25]
00000000000350c0	cmp	x8, x9
00000000000350c4	b.ne	0x350a0
00000000000350c8	add	w9, w9, #0x1
00000000000350cc	and	x9, x9, #0x3fffff
00000000000350d0	orr	x9, x10, x9
00000000000350d4	stlxr	w10, x9, [x25]
00000000000350d8	cbnz	w10, 0x350a4
00000000000350dc	mov	w10, #0x1
00000000000350e0	mov	x9, x8
00000000000350e4	cbz	w10, 0x350b0
00000000000350e8	ldxr	x8, [x19]
00000000000350ec	sub	x8, x8, #0x1
00000000000350f0	stxr	w9, x8, [x19]
00000000000350f4	cbnz	w9, 0x350e8
00000000000350f8	add	x8, x0, #0x10
00000000000350fc	stlr	xzr, [x8]
0000000000035100	ldxr	x8, [x26]
0000000000035104	sub	x8, x8, #0x1
0000000000035108	stxr	w9, x8, [x26]
000000000003510c	cbnz	w9, 0x35100
0000000000035110	mov	x1, x28
0000000000035114	mov	x2, #0x0
0000000000035118	mov	x3, #0x0
000000000003511c	mov	x4, x20
0000000000035120	bl	_mi_segment_reclaim
0000000000035124	ldr	x8, [x21, #0xbc0]
0000000000035128	lsr	x8, x8, #22
000000000003512c	cbz	x8, 0x34fb4
0000000000035130	b	0x35088
0000000000035134	mov	w21, #0x0
0000000000035138	ldxr	x8, [x19]
000000000003513c	sub	x8, x8, #0x1
0000000000035140	stxr	w9, x8, [x19]
0000000000035144	cbnz	w9, 0x35138
0000000000035148	b	0x343b4
__mi_page_free_collect:
000000000003514c	stp	x20, x19, [sp, #-0x20]!
0000000000035150	stp	x29, x30, [sp, #0x10]
0000000000035154	add	x29, sp, #0x10
0000000000035158	mov	x20, x1
000000000003515c	mov	x19, x0
0000000000035160	tbnz	w1, #0x0, 0x35170
0000000000035164	ldr	x8, [x19, #0x20]
0000000000035168	cmp	x8, #0x4
000000000003516c	b.lo	0x351f0
0000000000035170	add	x8, x19, #0x20
0000000000035174	ldr	x9, [x19, #0x20]
0000000000035178	b	0x35188
000000000003517c	clrex
0000000000035180	mov	w11, #0x0
0000000000035184	cbnz	w11, 0x351ac
0000000000035188	mov	x10, x9
000000000003518c	ldaxr	x9, [x8]
0000000000035190	cmp	x9, x10
0000000000035194	b.ne	0x3517c
0000000000035198	and	x11, x10, #0x3
000000000003519c	stlxr	w12, x11, [x8]
00000000000351a0	cbnz	w12, 0x35180
00000000000351a4	mov	w11, #0x1
00000000000351a8	cbz	w11, 0x35188
00000000000351ac	ands	x8, x10, #0xfffffffffffffffc
00000000000351b0	b.eq	0x351f0
00000000000351b4	mov	w9, #0x0
00000000000351b8	ldrh	w10, [x19, #0x2]
00000000000351bc	mov	x12, x8
00000000000351c0	mov	x11, x12
00000000000351c4	add	w9, w9, #0x1
00000000000351c8	ldr	x12, [x12]
00000000000351cc	cmp	w9, w10
00000000000351d0	ccmp	x12, #0x0, #0x4, ls
00000000000351d4	b.ne	0x351c0
00000000000351d8	cmp	w9, w10
00000000000351dc	b.ls	0x35220
00000000000351e0	adr	x1, #0x21448 ; literal pool for: "corrupted thread-free list\n"
00000000000351e4	nop
00000000000351e8	mov	w0, #0xe
00000000000351ec	bl	__mi_error_message
00000000000351f0	ldr	x8, [x19, #0x18]
00000000000351f4	cbz	x8, 0x35214
00000000000351f8	ldr	x9, [x19, #0x8]
00000000000351fc	cbnz	x9, 0x35244
0000000000035200	str	x8, [x19, #0x8]
0000000000035204	str	xzr, [x19, #0x18]
0000000000035208	ldrb	w8, [x19, #0x7]
000000000003520c	and	w8, w8, #0xfe
0000000000035210	strb	w8, [x19, #0x7]
0000000000035214	ldp	x29, x30, [sp, #0x10]
0000000000035218	ldp	x20, x19, [sp], #0x20
000000000003521c	ret
0000000000035220	ldr	x10, [x19, #0x18]
0000000000035224	str	x10, [x11]
0000000000035228	str	x8, [x19, #0x18]
000000000003522c	ldr	w8, [x19, #0x10]
0000000000035230	sub	w8, w8, w9
0000000000035234	str	w8, [x19, #0x10]
0000000000035238	ldr	x8, [x19, #0x18]
000000000003523c	cbnz	x8, 0x351f8
0000000000035240	b	0x35214
0000000000035244	cbz	w20, 0x35214
0000000000035248	mov	x11, x8
000000000003524c	mov	x10, x11
0000000000035250	ldr	x11, [x11]
0000000000035254	cbnz	x11, 0x3524c
0000000000035258	str	x9, [x10]
000000000003525c	b	0x35200
__mi_page_free:
0000000000035260	mov	x8, x2
0000000000035264	ldrb	w9, [x0, #0x6]
0000000000035268	and	w9, w9, #0xfffffffd
000000000003526c	strb	w9, [x0, #0x6]
0000000000035270	ldr	x9, [x0, #0x28]
0000000000035274	ldr	x10, [x9]
0000000000035278	ldr	x9, [x0, #0x28]
000000000003527c	ldr	x13, [x0, #0x38]
0000000000035280	cbz	x13, 0x3528c
0000000000035284	ldr	x11, [x0, #0x30]
0000000000035288	str	x11, [x13, #0x30]
000000000003528c	mov	x11, x0
0000000000035290	ldr	x12, [x11, #0x30]!
0000000000035294	cbz	x12, 0x3529c
0000000000035298	str	x13, [x12, #0x38]
000000000003529c	ldr	x13, [x1, #0x8]
00000000000352a0	cmp	x13, x0
00000000000352a4	b.eq	0x352b8
00000000000352a8	ldr	x13, [x1]
00000000000352ac	cmp	x13, x0
00000000000352b0	b.ne	0x35444
00000000000352b4	b	0x352cc
00000000000352b8	ldr	x13, [x0, #0x38]
00000000000352bc	str	x13, [x1, #0x8]
00000000000352c0	ldr	x13, [x1]
00000000000352c4	cmp	x13, x0
00000000000352c8	b.ne	0x35444
00000000000352cc	str	x12, [x1]
00000000000352d0	ldr	x15, [x1, #0x10]
00000000000352d4	cmp	x15, #0x400
00000000000352d8	b.hi	0x35444
00000000000352dc	adr	x13, #0x1dd24
00000000000352e0	nop
00000000000352e4	cmp	x12, #0x0
00000000000352e8	csel	x12, x13, x12, eq
00000000000352ec	add	x13, x15, #0x7
00000000000352f0	lsr	x13, x13, #3
00000000000352f4	add	x14, x9, x13, lsl #3
00000000000352f8	ldr	x14, [x14, #0x8]
00000000000352fc	cmp	x14, x12
0000000000035300	b.eq	0x35444
0000000000035304	cmp	x15, #0x9
0000000000035308	b.hs	0x35314
000000000003530c	mov	x14, #0x0
0000000000035310	b	0x353e8
0000000000035314	sub	x16, x13, #0x1
0000000000035318	clz	x17, x16
000000000003531c	mov	w14, #0x3f
0000000000035320	sub	w17, w14, w17
0000000000035324	and	w17, w17, #0xff
0000000000035328	sub	w2, w17, #0x2
000000000003532c	lsr	x16, x16, x2
0000000000035330	and	w16, w16, #0x3
0000000000035334	bfi	w16, w17, #2, #8
0000000000035338	sub	w16, w16, #0x3
000000000003533c	add	w17, w13, #0x1
0000000000035340	and	w17, w17, #0xfffffffe
0000000000035344	cmp	x15, #0x40
0000000000035348	csel	w17, w16, w17, hi
000000000003534c	add	x15, x9, #0x410
0000000000035350	sub	x16, x1, #0x18
0000000000035354	and	w17, w17, #0xff
0000000000035358	mov	w1, #0x7
000000000003535c	movk	w1, #0x20, lsl #16
0000000000035360	ldr	x2, [x16, #0x10]
0000000000035364	add	x3, x2, #0x7
0000000000035368	lsr	x2, x3, #3
000000000003536c	cmp	x3, #0x10
0000000000035370	b.hs	0x3537c
0000000000035374	mov	w3, #0x1
0000000000035378	b	0x353c4
000000000003537c	cmp	x3, #0x47
0000000000035380	b.hi	0x35390
0000000000035384	add	w3, w2, #0x1
0000000000035388	and	w3, w3, #0xfffffffe
000000000003538c	b	0x353c4
0000000000035390	cmp	x3, x1
0000000000035394	b.ls	0x353a0
0000000000035398	mov	w3, #0x49
000000000003539c	b	0x353c4
00000000000353a0	sub	x3, x2, #0x1
00000000000353a4	clz	x4, x3
00000000000353a8	sub	w4, w14, w4
00000000000353ac	and	w4, w4, #0xff
00000000000353b0	sub	w5, w4, #0x2
00000000000353b4	lsr	x3, x3, x5
00000000000353b8	and	w3, w3, #0x3
00000000000353bc	bfi	w3, w4, #2, #8
00000000000353c0	sub	w3, w3, #0x3
00000000000353c4	cmp	x16, x15
00000000000353c8	b.ls	0x353d8
00000000000353cc	sub	x16, x16, #0x18
00000000000353d0	cmp	w17, w3, uxtb
00000000000353d4	b.eq	0x35360
00000000000353d8	cmp	x2, x13
00000000000353dc	csinc	x14, x13, x2, hs
00000000000353e0	cmp	x14, x13
00000000000353e4	b.hi	0x35444
00000000000353e8	sub	x15, x13, x14
00000000000353ec	add	x15, x15, #0x1
00000000000353f0	cmp	x15, #0x4
00000000000353f4	b.lo	0x35428
00000000000353f8	and	x16, x15, #0xfffffffffffffffc
00000000000353fc	dup.2d	v0, x12
0000000000035400	add	x17, x9, x14, lsl #3
0000000000035404	add	x17, x17, #0x18
0000000000035408	mov	x1, x16
000000000003540c	stp	q0, q0, [x17, #-0x10]
0000000000035410	add	x17, x17, #0x20
0000000000035414	subs	x1, x1, #0x4
0000000000035418	b.ne	0x3540c
000000000003541c	cmp	x15, x16
0000000000035420	b.eq	0x35444
0000000000035424	add	x14, x14, x16
0000000000035428	sub	x13, x13, x14
000000000003542c	add	x13, x13, #0x1
0000000000035430	add	x14, x9, x14, lsl #3
0000000000035434	add	x14, x14, #0x8
0000000000035438	str	x12, [x14], #0x8
000000000003543c	subs	x13, x13, #0x1
0000000000035440	b.ne	0x35438
0000000000035444	add	x2, x10, #0x20
0000000000035448	ldr	x10, [x9, #0xbc8]
000000000003544c	sub	x10, x10, #0x1
0000000000035450	str	x10, [x9, #0xbc8]
0000000000035454	stp	xzr, xzr, [x11]
0000000000035458	ldrb	w9, [x0, #0x6]
000000000003545c	and	w9, w9, #0xfe
0000000000035460	strb	w9, [x0, #0x6]
0000000000035464	add	x9, x0, #0x28
0000000000035468	stlr	xzr, [x9]
000000000003546c	mov	x1, x8
0000000000035470	b	__mi_segment_page_free
__mi_arena_free:
0000000000035474	sub	sp, sp, #0x60
0000000000035478	stp	x24, x23, [sp, #0x20]
000000000003547c	stp	x22, x21, [sp, #0x30]
0000000000035480	stp	x20, x19, [sp, #0x40]
0000000000035484	stp	x29, x30, [sp, #0x50]
0000000000035488	add	x29, sp, #0x50
000000000003548c	cbz	x0, 0x35578
0000000000035490	mov	x20, x1
0000000000035494	cbz	x1, 0x35578
0000000000035498	mov	x19, x0
000000000003549c	cbz	x2, 0x35528
00000000000354a0	adr	x8, #0x515a0
00000000000354a4	nop
00000000000354a8	add	x8, x8, w2, uxtb #3
00000000000354ac	ldr	x23, [x8, #0x3f8]
00000000000354b0	cbz	x23, 0x3554c
00000000000354b4	ldr	x8, [x23, #0x10]
00000000000354b8	cmp	x8, x2, lsr #14
00000000000354bc	b.ls	0x35560
00000000000354c0	lsr	x21, x2, #8
00000000000354c4	mov	w8, #0xffffff
00000000000354c8	add	x8, x20, x8
00000000000354cc	lsr	x22, x8, #24
00000000000354d0	ldrb	w9, [x23, #0x1d]
00000000000354d4	cbnz	w9, 0x35500
00000000000354d8	and	x1, x8, #0xffffffffff000000
00000000000354dc	add	x4, sp, #0x1f
00000000000354e0	mov	x0, x19
00000000000354e4	mov	w2, #0x0
00000000000354e8	mov	w3, #0x1
00000000000354ec	bl	_mi_os_commitx
00000000000354f0	ldr	x0, [x23, #0x30]
00000000000354f4	mov	x1, x22
00000000000354f8	mov	x2, x21
00000000000354fc	bl	__mi_bitmap_unclaim_across
0000000000035500	add	x0, x23, #0x38
0000000000035504	mov	x1, x22
0000000000035508	mov	x2, x21
000000000003550c	bl	__mi_bitmap_unclaim_across
0000000000035510	tbnz	w0, #0x0, 0x35578
0000000000035514	stp	x19, x20, [sp]
0000000000035518	adr	x1, #0x21068 ; literal pool for: "trying to free an already freed block: %p, size %zu\n"
000000000003551c	nop
0000000000035520	mov	w0, #0x23
0000000000035524	b	0x35574
0000000000035528	mov	x0, x19
000000000003552c	mov	x1, x20
0000000000035530	mov	x2, x3
0000000000035534	ldp	x29, x30, [sp, #0x50]
0000000000035538	ldp	x20, x19, [sp, #0x40]
000000000003553c	ldp	x22, x21, [sp, #0x30]
0000000000035540	ldp	x24, x23, [sp, #0x20]
0000000000035544	add	sp, sp, #0x60
0000000000035548	b	__mi_os_free_ex
000000000003554c	stp	x20, x2, [sp, #0x8]
0000000000035550	str	x19, [sp]
0000000000035554	adr	x1, #0x20f9e ; literal pool for: "trying to free from non-existent arena: %p, size %zu, memid: 0x%zx\n"
0000000000035558	nop
000000000003555c	b	0x35570
0000000000035560	stp	x20, x2, [sp, #0x8]
0000000000035564	str	x19, [sp]
0000000000035568	adr	x1, #0x20fce ; literal pool for: "trying to free from non-existent arena block: %p, size %zu, memid: 0x%zx\n"
000000000003556c	nop
0000000000035570	mov	w0, #0x16
0000000000035574	bl	__mi_error_message
0000000000035578	ldp	x29, x30, [sp, #0x50]
000000000003557c	ldp	x20, x19, [sp, #0x40]
0000000000035580	ldp	x22, x21, [sp, #0x30]
0000000000035584	ldp	x24, x23, [sp, #0x20]
0000000000035588	add	sp, sp, #0x60
000000000003558c	ret
__mi_bitmap_unclaim_across:
0000000000035590	lsr	x12, x2, #6
0000000000035594	ands	x8, x2, #0x3f
0000000000035598	add	x9, x8, x1
000000000003559c	mov	w10, #0x40
00000000000355a0	sub	x10, x10, x8
00000000000355a4	neg	x11, x8
00000000000355a8	mov	x13, #-0x1
00000000000355ac	lsl	x11, x13, x11
00000000000355b0	mvn	x11, x11
00000000000355b4	lsl	x11, x11, x8
00000000000355b8	csinv	x11, x11, xzr, ne
00000000000355bc	sub	x10, x1, x10
00000000000355c0	lsr	x14, x10, #6
00000000000355c4	ands	x10, x10, #0x3f
00000000000355c8	lsl	x10, x13, x10
00000000000355cc	csel	x13, x13, x13, eq
00000000000355d0	csinv	x15, xzr, x10, eq
00000000000355d4	mov	x10, #-0x1
00000000000355d8	lsl	x16, x10, x1
00000000000355dc	mvn	x16, x16
00000000000355e0	lsl	x8, x16, x8
00000000000355e4	cmp	x1, #0x0
00000000000355e8	csel	x16, xzr, xzr, eq
00000000000355ec	csel	x8, xzr, x8, eq
00000000000355f0	cmp	x1, #0x3f
00000000000355f4	csel	x16, xzr, x16, hi
00000000000355f8	csel	x8, x10, x8, hi
00000000000355fc	cmp	x9, #0x40
0000000000035600	csel	x9, x13, x16, hi
0000000000035604	csel	x10, x11, x8, hi
0000000000035608	csel	x8, x15, x16, hi
000000000003560c	csel	x11, x14, x16, hi
0000000000035610	add	x12, x0, x12, lsl #3
0000000000035614	mvn	x13, x10
0000000000035618	ldaxr	x14, [x12]
000000000003561c	and	x15, x14, x13
0000000000035620	stlxr	w16, x15, [x12]
0000000000035624	cbnz	w16, 0x35618
0000000000035628	bics	xzr, x10, x14
000000000003562c	cset	w0, eq
0000000000035630	add	x10, x12, #0x8
0000000000035634	cbz	x11, 0x35664
0000000000035638	mvn	x12, x9
000000000003563c	sub	x11, x11, #0x1
0000000000035640	ldaxr	x13, [x10]
0000000000035644	and	x14, x13, x12
0000000000035648	stlxr	w15, x14, [x10]
000000000003564c	cbnz	w15, 0x35640
0000000000035650	bics	xzr, x9, x13
0000000000035654	cset	w13, eq
0000000000035658	and	w0, w0, w13
000000000003565c	add	x10, x10, #0x8
0000000000035660	cbnz	x11, 0x3563c
0000000000035664	cbz	x8, 0x35688
0000000000035668	mvn	x9, x8
000000000003566c	ldaxr	x11, [x10]
0000000000035670	and	x12, x11, x9
0000000000035674	stlxr	w13, x12, [x10]
0000000000035678	cbnz	w13, 0x3566c
000000000003567c	bics	xzr, x8, x11
0000000000035680	cset	w8, eq
0000000000035684	and	w0, w0, w8
0000000000035688	ret
_mi_os_commitx:
000000000003568c	sub	sp, sp, #0x50
0000000000035690	stp	x22, x21, [sp, #0x20]
0000000000035694	stp	x20, x19, [sp, #0x30]
0000000000035698	stp	x29, x30, [sp, #0x40]
000000000003569c	add	x29, sp, #0x40
00000000000356a0	cbz	x4, 0x356a8
00000000000356a4	strb	wzr, [x4]
00000000000356a8	mov	w8, #0x1
00000000000356ac	cbz	x0, 0x35700
00000000000356b0	cbz	x1, 0x35700
00000000000356b4	nop
00000000000356b8	ldr	x8, #0x36f88
00000000000356bc	fmov	d0, x8
00000000000356c0	cnt.8b	v0, v0
00000000000356c4	uaddlv.8b	h0, v0
00000000000356c8	fmov	w9, s0
00000000000356cc	cbz	w3, 0x35718
00000000000356d0	add	x10, x8, x0
00000000000356d4	sub	x10, x10, #0x1
00000000000356d8	cmp	x9, #0x2
00000000000356dc	b.hs	0x3585c
00000000000356e0	neg	x8, x8
00000000000356e4	and	x19, x10, x8
00000000000356e8	add	x9, x0, x1
00000000000356ec	and	x8, x8, x9
00000000000356f0	sub	x20, x8, x19
00000000000356f4	cmp	x20, #0x1
00000000000356f8	b.ge	0x35744
00000000000356fc	mov	w8, #0x1
0000000000035700	mov	x0, x8
0000000000035704	ldp	x29, x30, [sp, #0x40]
0000000000035708	ldp	x20, x19, [sp, #0x30]
000000000003570c	ldp	x22, x21, [sp, #0x20]
0000000000035710	add	sp, sp, #0x50
0000000000035714	ret
0000000000035718	cmp	x9, #0x2
000000000003571c	b.hs	0x35880
0000000000035720	neg	x9, x8
0000000000035724	and	x19, x9, x0
0000000000035728	add	x10, x0, x1
000000000003572c	add	x8, x8, x10
0000000000035730	sub	x8, x8, #0x1
0000000000035734	and	x8, x8, x9
0000000000035738	sub	x20, x8, x19
000000000003573c	cmp	x20, #0x1
0000000000035740	b.lt	0x356fc
0000000000035744	cbz	w2, 0x357d0
0000000000035748	adr	x9, #0x51970
000000000003574c	nop
0000000000035750	ldxr	x8, [x9]
0000000000035754	add	x8, x8, x1
0000000000035758	stxr	w10, x8, [x9]
000000000003575c	cbnz	w10, 0x35750
0000000000035760	nop
0000000000035764	ldr	x11, #0x5194c
0000000000035768	adr	x9, #0x51948
000000000003576c	nop
0000000000035770	b	0x35784
0000000000035774	clrex
0000000000035778	mov	w12, #0x0
000000000003577c	mov	x11, x10
0000000000035780	cbnz	w12, 0x357ac
0000000000035784	cmp	x11, x8
0000000000035788	b.ge	0x357ac
000000000003578c	ldxr	x10, [x9]
0000000000035790	cmp	x10, x11
0000000000035794	b.ne	0x35774
0000000000035798	stlxr	w11, x8, [x9]
000000000003579c	cbnz	w11, 0x35778
00000000000357a0	mov	w12, #0x1
00000000000357a4	mov	x11, x10
00000000000357a8	cbz	w12, 0x35784
00000000000357ac	cmp	x1, #0x1
00000000000357b0	b.lt	0x358ac
00000000000357b4	adr	x8, #0x518ec
00000000000357b8	nop
00000000000357bc	ldxr	x9, [x8]
00000000000357c0	add	x9, x9, x1
00000000000357c4	stxr	w10, x9, [x8]
00000000000357c8	cbnz	w10, 0x357bc
00000000000357cc	b	0x358c8
00000000000357d0	neg	x8, x1
00000000000357d4	adr	x9, #0x518e4
00000000000357d8	nop
00000000000357dc	ldxr	x10, [x9]
00000000000357e0	add	x11, x10, x8
00000000000357e4	stxr	w12, x11, [x9]
00000000000357e8	cbnz	w12, 0x357dc
00000000000357ec	sub	x9, x10, x1
00000000000357f0	nop
00000000000357f4	ldr	x12, #0x518bc
00000000000357f8	adr	x10, #0x518b8
00000000000357fc	nop
0000000000035800	b	0x35814
0000000000035804	clrex
0000000000035808	mov	w13, #0x0
000000000003580c	mov	x12, x11
0000000000035810	cbnz	w13, 0x3583c
0000000000035814	cmp	x12, x9
0000000000035818	b.ge	0x3583c
000000000003581c	ldxr	x11, [x10]
0000000000035820	cmp	x11, x12
0000000000035824	b.ne	0x35804
0000000000035828	stlxr	w12, x9, [x10]
000000000003582c	cbnz	w12, 0x35808
0000000000035830	mov	w13, #0x1
0000000000035834	mov	x12, x11
0000000000035838	cbz	w13, 0x35814
000000000003583c	tbnz	x1, #0x3f, 0x359b8
0000000000035840	adr	x8, #0x51868
0000000000035844	nop
0000000000035848	ldxr	x9, [x8]
000000000003584c	add	x9, x9, x1
0000000000035850	stxr	w10, x9, [x8]
0000000000035854	cbnz	w10, 0x35848
0000000000035858	b	0x359d0
000000000003585c	udiv	x9, x10, x8
0000000000035860	mul	x19, x9, x8
0000000000035864	add	x9, x0, x1
0000000000035868	udiv	x9, x9, x8
000000000003586c	mul	x8, x9, x8
0000000000035870	sub	x20, x8, x19
0000000000035874	cmp	x20, #0x1
0000000000035878	b.ge	0x35744
000000000003587c	b	0x356fc
0000000000035880	udiv	x9, x0, x8
0000000000035884	mul	x19, x9, x8
0000000000035888	add	x9, x0, x1
000000000003588c	add	x9, x8, x9
0000000000035890	sub	x9, x9, #0x1
0000000000035894	udiv	x9, x9, x8
0000000000035898	mul	x8, x9, x8
000000000003589c	sub	x20, x8, x19
00000000000358a0	cmp	x20, #0x1
00000000000358a4	b.ge	0x35744
00000000000358a8	b	0x356fc
00000000000358ac	neg	x8, x1
00000000000358b0	adr	x9, #0x517f8
00000000000358b4	nop
00000000000358b8	ldxr	x10, [x9]
00000000000358bc	add	x10, x10, x8
00000000000358c0	stxr	w11, x10, [x9]
00000000000358c4	cbnz	w11, 0x358b8
00000000000358c8	adr	x8, #0x51778
00000000000358cc	nop
00000000000358d0	add	x9, x8, #0x1e0
00000000000358d4	cmp	x9, x8
00000000000358d8	b.lo	0x35988
00000000000358dc	adr	x8, #0x5194c
00000000000358e0	nop
00000000000358e4	ldxr	x9, [x8]
00000000000358e8	add	x9, x9, #0x1
00000000000358ec	stxr	w10, x9, [x8]
00000000000358f0	cbnz	w10, 0x358e4
00000000000358f4	adr	x8, #0x5192c
00000000000358f8	nop
00000000000358fc	ldxr	x9, [x8]
0000000000035900	add	x9, x9, #0x1
0000000000035904	stxr	w10, x9, [x8]
0000000000035908	cbnz	w10, 0x358fc
000000000003590c	mov	x0, x19
0000000000035910	mov	x1, x20
0000000000035914	mov	w2, #0x3
0000000000035918	bl	0x51ae8 ; symbol stub for: _mprotect
000000000003591c	cbz	w0, 0x35924
0000000000035920	bl	0x51980 ; symbol stub for: ___error
0000000000035924	mov	x0, x19
0000000000035928	mov	x1, x20
000000000003592c	mov	w2, #0x8
0000000000035930	bl	0x51a94 ; symbol stub for: _madvise
0000000000035934	cbz	w0, 0x35a38
0000000000035938	mov	x21, x0
000000000003593c	bl	0x51980 ; symbol stub for: ___error
0000000000035940	ldr	w8, [x0]
0000000000035944	adr	x22, #0x20c7a ; literal pool for: "commit"
0000000000035948	nop
000000000003594c	cmp	w8, #0x23
0000000000035950	b.ne	0x35a08
0000000000035954	bl	0x51980 ; symbol stub for: ___error
0000000000035958	str	wzr, [x0]
000000000003595c	mov	x0, x19
0000000000035960	mov	x1, x20
0000000000035964	mov	w2, #0x8
0000000000035968	bl	0x51a94 ; symbol stub for: _madvise
000000000003596c	cbz	w0, 0x35a38
0000000000035970	mov	x21, x0
0000000000035974	bl	0x51980 ; symbol stub for: ___error
0000000000035978	ldr	w8, [x0]
000000000003597c	cmp	w8, #0x23
0000000000035980	b.eq	0x35954
0000000000035984	b	0x35a08
0000000000035988	adr	x8, #0x51898
000000000003598c	nop
0000000000035990	ldp	x10, x9, [x8]
0000000000035994	add	x9, x9, #0x1
0000000000035998	add	x10, x10, #0x1
000000000003599c	stp	x10, x9, [x8]
00000000000359a0	mov	x0, x19
00000000000359a4	mov	x1, x20
00000000000359a8	mov	w2, #0x3
00000000000359ac	bl	0x51ae8 ; symbol stub for: _mprotect
00000000000359b0	cbnz	w0, 0x35920
00000000000359b4	b	0x35924
00000000000359b8	adr	x9, #0x516e8
00000000000359bc	nop
00000000000359c0	ldxr	x10, [x9]
00000000000359c4	add	x10, x10, x8
00000000000359c8	stxr	w11, x10, [x9]
00000000000359cc	cbnz	w11, 0x359c0
00000000000359d0	mov	x0, x19
00000000000359d4	mov	x1, x20
00000000000359d8	mov	w2, #0x0
00000000000359dc	mov	w3, #0x1052
00000000000359e0	mov	w4, #-0x1
00000000000359e4	mov	x5, #0x0
00000000000359e8	bl	0x51adc ; symbol stub for: _mmap
00000000000359ec	cmp	x0, x19
00000000000359f0	b.eq	0x35a38
00000000000359f4	bl	0x51980 ; symbol stub for: ___error
00000000000359f8	ldr	w21, [x0]
00000000000359fc	cbz	w21, 0x35a38
0000000000035a00	adr	x22, #0x20bb5 ; literal pool for: "decommit"
0000000000035a04	nop
0000000000035a08	stp	x20, x21, [sp, #0x10]
0000000000035a0c	stp	x22, x19, [sp]
0000000000035a10	adr	x0, #0x20bb5 ; literal pool for: "%s error: start: %p, csize: 0x%x, err: %i\n"
0000000000035a14	nop
0000000000035a18	bl	__mi_warning_message
0000000000035a1c	mov	w8, #0x0
0000000000035a20	mov	x0, x8
0000000000035a24	ldp	x29, x30, [sp, #0x40]
0000000000035a28	ldp	x20, x19, [sp, #0x30]
0000000000035a2c	ldp	x22, x21, [sp, #0x20]
0000000000035a30	add	sp, sp, #0x50
0000000000035a34	ret
0000000000035a38	mov	w8, #0x1
0000000000035a3c	mov	x0, x8
0000000000035a40	ldp	x29, x30, [sp, #0x40]
0000000000035a44	ldp	x20, x19, [sp, #0x30]
0000000000035a48	ldp	x22, x21, [sp, #0x20]
0000000000035a4c	add	sp, sp, #0x50
0000000000035a50	ret
__mi_mem_free:
0000000000035a54	stp	x26, x25, [sp, #-0x50]!
0000000000035a58	stp	x24, x23, [sp, #0x10]
0000000000035a5c	stp	x22, x21, [sp, #0x20]
0000000000035a60	stp	x20, x19, [sp, #0x30]
0000000000035a64	stp	x29, x30, [sp, #0x40]
0000000000035a68	add	x29, sp, #0x40
0000000000035a6c	cbz	x0, 0x35ba0
0000000000035a70	cbz	x1, 0x35ba0
0000000000035a74	mov	x19, x0
0000000000035a78	nop
0000000000035a7c	ldr	x8, #0x36bc4
0000000000035a80	add	x9, x1, x8
0000000000035a84	sub	x9, x9, #0x1
0000000000035a88	sub	x10, x8, #0x1
0000000000035a8c	udiv	x11, x9, x8
0000000000035a90	mul	x11, x11, x8
0000000000035a94	neg	x12, x8
0000000000035a98	and	x9, x9, x12
0000000000035a9c	tst	x8, x10
0000000000035aa0	csel	x20, x11, x9, ne
0000000000035aa4	tbnz	w2, #0x0, 0x35bb8
0000000000035aa8	mov	w8, #0x4000000
0000000000035aac	cmp	x20, x8
0000000000035ab0	b.hi	0x35ba0
0000000000035ab4	lsr	x23, x2, #7
0000000000035ab8	ubfx	x21, x2, #1, #6
0000000000035abc	mov	w8, #0x3fffff
0000000000035ac0	add	x25, x20, x8
0000000000035ac4	lsr	x22, x25, #22
0000000000035ac8	adr	x24, #0x40f40
0000000000035acc	nop
0000000000035ad0	add	x9, x24, x23, lsl #6
0000000000035ad4	ldar	x8, [x9]
0000000000035ad8	add	x9, x9, #0x8
0000000000035adc	ldar	x9, [x9]
0000000000035ae0	add	x9, x9, x21, lsl #22
0000000000035ae4	add	x10, x22, x21
0000000000035ae8	cmp	x10, #0x40
0000000000035aec	ccmp	x9, x19, #0x0, ls
0000000000035af0	b.ne	0x35ba0
0000000000035af4	and	x9, x20, #0x3fffff
0000000000035af8	cmp	x9, #0x0
0000000000035afc	ccmp	w3, #0x0, #0x4, eq
0000000000035b00	b.eq	0x35b34
0000000000035b04	add	x9, x24, x23, lsl #6
0000000000035b08	add	x9, x9, #0x20
0000000000035b0c	mov	x10, #-0x1
0000000000035b10	lsl	x10, x10, x22
0000000000035b14	mvn	x10, x10
0000000000035b18	lsl	x10, x10, x21
0000000000035b1c	cmp	x22, #0x0
0000000000035b20	csel	x10, xzr, x10, eq
0000000000035b24	ldaxr	x11, [x9]
0000000000035b28	orr	x11, x11, x10
0000000000035b2c	stlxr	w12, x11, [x9]
0000000000035b30	cbnz	w12, 0x35b24
0000000000035b34	cbz	w4, 0x35b68
0000000000035b38	add	x9, x24, x23, lsl #6
0000000000035b3c	add	x9, x9, #0x28
0000000000035b40	mov	x10, #-0x1
0000000000035b44	lsl	x10, x10, x22
0000000000035b48	mvn	x10, x10
0000000000035b4c	lsl	x10, x10, x21
0000000000035b50	cmp	x22, #0x0
0000000000035b54	csel	x10, xzr, x10, eq
0000000000035b58	ldaxr	x11, [x9]
0000000000035b5c	orr	x11, x11, x10
0000000000035b60	stlxr	w12, x11, [x9]
0000000000035b64	cbnz	w12, 0x35b58
0000000000035b68	tst	x8, #0x300
0000000000035b6c	b.eq	0x35bdc
0000000000035b70	add	x8, x24, x23, lsl #6
0000000000035b74	add	x8, x8, #0x10
0000000000035b78	mov	x9, #-0x1
0000000000035b7c	lsl	x10, x9, x22
0000000000035b80	mvn	x10, x10
0000000000035b84	lsl	x10, x10, x21
0000000000035b88	cmp	x22, #0x0
0000000000035b8c	csinv	x9, x9, x10, eq
0000000000035b90	ldaxr	x10, [x8]
0000000000035b94	and	x10, x10, x9
0000000000035b98	stlxr	w11, x10, [x8]
0000000000035b9c	cbnz	w11, 0x35b90
0000000000035ba0	ldp	x29, x30, [sp, #0x40]
0000000000035ba4	ldp	x20, x19, [sp, #0x30]
0000000000035ba8	ldp	x22, x21, [sp, #0x20]
0000000000035bac	ldp	x24, x23, [sp, #0x10]
0000000000035bb0	ldp	x26, x25, [sp], #0x50
0000000000035bb4	ret
0000000000035bb8	lsr	x2, x2, #1
0000000000035bbc	mov	x0, x19
0000000000035bc0	mov	x1, x20
0000000000035bc4	ldp	x29, x30, [sp, #0x40]
0000000000035bc8	ldp	x20, x19, [sp, #0x30]
0000000000035bcc	ldp	x22, x21, [sp, #0x20]
0000000000035bd0	ldp	x24, x23, [sp, #0x10]
0000000000035bd4	ldp	x26, x25, [sp], #0x50
0000000000035bd8	b	__mi_arena_free
0000000000035bdc	mov	w0, #0xc
0000000000035be0	bl	_mi_option_get
0000000000035be4	cbz	x0, 0x35b70
0000000000035be8	mov	w0, #0x3
0000000000035bec	bl	_mi_option_get
0000000000035bf0	cbnz	x0, 0x35c00
0000000000035bf4	mov	w0, #0x5
0000000000035bf8	bl	_mi_option_get
0000000000035bfc	cbz	x0, 0x35b70
0000000000035c00	add	x8, x24, x23, lsl #6
0000000000035c04	add	x8, x8, #0x28
0000000000035c08	mov	x9, #-0x1
0000000000035c0c	lsl	x9, x9, x22
0000000000035c10	mvn	x9, x9
0000000000035c14	lsl	x9, x9, x21
0000000000035c18	cmp	x22, #0x0
0000000000035c1c	csel	x9, xzr, x9, eq
0000000000035c20	ldaxr	x10, [x8]
0000000000035c24	orr	x11, x10, x9
0000000000035c28	stlxr	w12, x11, [x8]
0000000000035c2c	cbnz	w12, 0x35c20
0000000000035c30	bics	xzr, x9, x10
0000000000035c34	b.eq	0x35b70
0000000000035c38	adr	x8, #0x50f48
0000000000035c3c	nop
0000000000035c40	ldar	x9, [x8]
0000000000035c44	cbz	x9, 0x35c54
0000000000035c48	wfe
0000000000035c4c	ldar	x9, [x8]
0000000000035c50	cbnz	x9, 0x35c48
0000000000035c54	and	x1, x25, #0xffffffffffc00000
0000000000035c58	mov	x0, x19
0000000000035c5c	bl	__mi_os_reset
0000000000035c60	add	x8, x24, x23, lsl #6
0000000000035c64	add	x8, x8, #0x10
0000000000035c68	mov	w9, #0xfc00000
0000000000035c6c	cmp	x20, x9
0000000000035c70	b.ls	0x35b78
0000000000035c74	mov	x9, #0x0
0000000000035c78	b	0x35b90
__mi_os_reset:
0000000000035c7c	sub	sp, sp, #0x50
0000000000035c80	stp	x22, x21, [sp, #0x20]
0000000000035c84	stp	x20, x19, [sp, #0x30]
0000000000035c88	stp	x29, x30, [sp, #0x40]
0000000000035c8c	add	x29, sp, #0x40
0000000000035c90	mov	x20, x1
0000000000035c94	mov	x21, x0
0000000000035c98	mov	w0, #0x5
0000000000035c9c	bl	_mi_option_get
0000000000035ca0	cbz	x0, 0x35cd0
0000000000035ca4	add	x4, sp, #0x1f
0000000000035ca8	mov	x0, x21
0000000000035cac	mov	x1, x20
0000000000035cb0	mov	w2, #0x0
0000000000035cb4	mov	w3, #0x1
0000000000035cb8	bl	_mi_os_commitx
0000000000035cbc	ldp	x29, x30, [sp, #0x40]
0000000000035cc0	ldp	x20, x19, [sp, #0x30]
0000000000035cc4	ldp	x22, x21, [sp, #0x20]
0000000000035cc8	add	sp, sp, #0x50
0000000000035ccc	ret
0000000000035cd0	cbz	x21, 0x35cbc
0000000000035cd4	cbz	x20, 0x35cbc
0000000000035cd8	nop
0000000000035cdc	ldr	x8, #0x36964
0000000000035ce0	add	x9, x21, x8
0000000000035ce4	sub	x9, x9, #0x1
0000000000035ce8	sub	x10, x8, #0x1
0000000000035cec	tst	x8, x10
0000000000035cf0	b.ne	0x35d14
0000000000035cf4	neg	x8, x8
0000000000035cf8	and	x19, x9, x8
0000000000035cfc	add	x9, x21, x20
0000000000035d00	and	x8, x8, x9
0000000000035d04	sub	x20, x8, x19
0000000000035d08	cmp	x20, #0x1
0000000000035d0c	b.ge	0x35d34
0000000000035d10	b	0x35cbc
0000000000035d14	udiv	x9, x9, x8
0000000000035d18	mul	x19, x9, x8
0000000000035d1c	add	x9, x21, x20
0000000000035d20	udiv	x9, x9, x8
0000000000035d24	mul	x8, x9, x8
0000000000035d28	sub	x20, x8, x19
0000000000035d2c	cmp	x20, #0x1
0000000000035d30	b.lt	0x35cbc
0000000000035d34	adr	x9, #0x513a4
0000000000035d38	nop
0000000000035d3c	ldxr	x8, [x9]
0000000000035d40	add	x8, x8, x20
0000000000035d44	stxr	w10, x8, [x9]
0000000000035d48	cbnz	w10, 0x35d3c
0000000000035d4c	nop
0000000000035d50	ldr	x11, #0x51380
0000000000035d54	adr	x9, #0x5137c
0000000000035d58	nop
0000000000035d5c	b	0x35d70
0000000000035d60	clrex
0000000000035d64	mov	w12, #0x0
0000000000035d68	mov	x11, x10
0000000000035d6c	cbnz	w12, 0x35d98
0000000000035d70	cmp	x11, x8
0000000000035d74	b.ge	0x35d98
0000000000035d78	ldxr	x10, [x9]
0000000000035d7c	cmp	x10, x11
0000000000035d80	b.ne	0x35d60
0000000000035d84	stlxr	w11, x8, [x9]
0000000000035d88	cbnz	w11, 0x35d64
0000000000035d8c	mov	w12, #0x1
0000000000035d90	mov	x11, x10
0000000000035d94	cbz	w12, 0x35d70
0000000000035d98	cmp	x20, #0x1
0000000000035d9c	b.lt	0x35dbc
0000000000035da0	adr	x8, #0x51320
0000000000035da4	nop
0000000000035da8	ldxr	x9, [x8]
0000000000035dac	add	x9, x9, x20
0000000000035db0	stxr	w10, x9, [x8]
0000000000035db4	cbnz	w10, 0x35da8
0000000000035db8	b	0x35dd8
0000000000035dbc	neg	x8, x20
0000000000035dc0	adr	x9, #0x51308
0000000000035dc4	nop
0000000000035dc8	ldxr	x10, [x9]
0000000000035dcc	add	x10, x10, x8
0000000000035dd0	stxr	w11, x10, [x9]
0000000000035dd4	cbnz	w11, 0x35dc8
0000000000035dd8	nop
0000000000035ddc	ldr	x21, #0x3687c
0000000000035de0	mov	x0, x19
0000000000035de4	mov	x1, x20
0000000000035de8	mov	x2, x21
0000000000035dec	bl	0x51a94 ; symbol stub for: _madvise
0000000000035df0	cbz	w0, 0x35cbc
0000000000035df4	bl	0x51980 ; symbol stub for: ___error
0000000000035df8	ldr	w22, [x0]
0000000000035dfc	bl	0x51980 ; symbol stub for: ___error
0000000000035e00	cmp	w22, #0x23
0000000000035e04	b.ne	0x35e24
0000000000035e08	str	wzr, [x0]
0000000000035e0c	mov	x0, x19
0000000000035e10	mov	x1, x20
0000000000035e14	mov	x2, x21
0000000000035e18	bl	0x51a94 ; symbol stub for: _madvise
0000000000035e1c	cbnz	w0, 0x35df4
0000000000035e20	b	0x35cbc
0000000000035e24	cmp	w21, #0x7
0000000000035e28	b.ne	0x35e5c
0000000000035e2c	ldr	w8, [x0]
0000000000035e30	cmp	w8, #0x16
0000000000035e34	b.ne	0x35e5c
0000000000035e38	adr	x8, #0x36820
0000000000035e3c	nop
0000000000035e40	mov	w9, #0x4
0000000000035e44	stlr	x9, [x8]
0000000000035e48	mov	x0, x19
0000000000035e4c	mov	x1, x20
0000000000035e50	mov	w2, #0x4
0000000000035e54	bl	0x51a94 ; symbol stub for: _madvise
0000000000035e58	cbz	w0, 0x35cbc
0000000000035e5c	bl	0x51980 ; symbol stub for: ___error
0000000000035e60	ldr	w8, [x0]
0000000000035e64	stp	x20, x8, [sp, #0x8]
0000000000035e68	str	x19, [sp]
0000000000035e6c	adr	x0, #0x20784 ; literal pool for: "madvise reset error: start: %p, csize: 0x%x, errno: %i\n"
0000000000035e70	nop
0000000000035e74	bl	__mi_warning_message
0000000000035e78	ldp	x29, x30, [sp, #0x40]
0000000000035e7c	ldp	x20, x19, [sp, #0x30]
0000000000035e80	ldp	x22, x21, [sp, #0x20]
0000000000035e84	add	sp, sp, #0x50
0000000000035e88	ret
__mi_segment_page_free:
0000000000035e8c	sub	sp, sp, #0x60
0000000000035e90	stp	x26, x25, [sp, #0x10]
0000000000035e94	stp	x24, x23, [sp, #0x20]
0000000000035e98	stp	x22, x21, [sp, #0x30]
0000000000035e9c	stp	x20, x19, [sp, #0x40]
0000000000035ea0	stp	x29, x30, [sp, #0x50]
0000000000035ea4	add	x29, sp, #0x50
0000000000035ea8	mov	x20, x2
0000000000035eac	mov	x21, x1
0000000000035eb0	mov	x22, x0
0000000000035eb4	and	x19, x0, #0xffffffffffc00000
0000000000035eb8	mov	w0, #0xa
0000000000035ebc	bl	_mi_option_get
0000000000035ec0	cbz	x0, 0x35fa8
0000000000035ec4	mov	x0, sp
0000000000035ec8	mov	x1, #0x0
0000000000035ecc	bl	0x51a7c ; symbol stub for: _gettimeofday
0000000000035ed0	ldr	x23, [x20, #0x28]
0000000000035ed4	cbz	x23, 0x35fa4
0000000000035ed8	ldr	x8, [sp]
0000000000035edc	ldr	w9, [sp, #0x8]
0000000000035ee0	mov	w10, #0x4dd3
0000000000035ee4	movk	w10, #0x1062, lsl #16
0000000000035ee8	smull	x9, w9, w10
0000000000035eec	lsr	x10, x9, #63
0000000000035ef0	asr	x9, x9, #38
0000000000035ef4	add	w9, w9, w10
0000000000035ef8	mov	w10, #0x3e8
0000000000035efc	madd	w24, w8, w10, w9
0000000000035f00	mov	w25, #0x1
0000000000035f04	b	0x35f14
0000000000035f08	str	wzr, [x26, #0x10]
0000000000035f0c	stp	xzr, xzr, [x26, #0x30]
0000000000035f10	cbz	x23, 0x35fa4
0000000000035f14	mov	x26, x23
0000000000035f18	ldr	w8, [x23, #0x10]
0000000000035f1c	cmp	w8, w24
0000000000035f20	b.gt	0x36054
0000000000035f24	ldr	x23, [x26, #0x38]
0000000000035f28	mov	w0, #0xa
0000000000035f2c	bl	_mi_option_get
0000000000035f30	cbz	x0, 0x35f08
0000000000035f34	and	x9, x26, #0xffffffffffc00000
0000000000035f38	ldrb	w8, [x9, #0x8]
0000000000035f3c	cbnz	w8, 0x35f08
0000000000035f40	ldrb	w8, [x26, #0x1]
0000000000035f44	and	w10, w8, #0x7
0000000000035f48	cmp	w10, #0x4
0000000000035f4c	b.ne	0x35f08
0000000000035f50	ldr	w10, [x9, #0x70]
0000000000035f54	cmp	w10, #0x3
0000000000035f58	b.ne	0x35f70
0000000000035f5c	ldr	x1, [x9, #0x48]
0000000000035f60	ldrb	w10, [x26]
0000000000035f64	madd	x0, x1, x10, x9
0000000000035f68	cbnz	x10, 0x35f90
0000000000035f6c	b	0x35f84
0000000000035f70	ldr	x10, [x9, #0x60]
0000000000035f74	lsl	x1, x25, x10
0000000000035f78	ldrb	w10, [x26]
0000000000035f7c	madd	x0, x1, x10, x9
0000000000035f80	cbnz	x10, 0x35f90
0000000000035f84	ldr	x9, [x9, #0x50]
0000000000035f88	add	x0, x0, x9
0000000000035f8c	sub	x1, x1, x9
0000000000035f90	orr	w8, w8, #0x2
0000000000035f94	strb	w8, [x26, #0x1]
0000000000035f98	cbz	x1, 0x35f08
0000000000035f9c	bl	__mi_os_reset
0000000000035fa0	b	0x35f08
0000000000035fa4	stp	xzr, xzr, [x20, #0x20]
0000000000035fa8	mov	x0, x19
0000000000035fac	mov	x1, x22
0000000000035fb0	mov	x2, x20
0000000000035fb4	bl	_mi_segment_page_clear
0000000000035fb8	ldr	x8, [x19, #0x38]
0000000000035fbc	cbz	x8, 0x36074
0000000000035fc0	ldr	x9, [x19, #0x28]
0000000000035fc4	cmp	x8, x9
0000000000035fc8	b.ne	0x35ff0
0000000000035fcc	mov	x0, x19
0000000000035fd0	mov	x1, x20
0000000000035fd4	ldp	x29, x30, [sp, #0x50]
0000000000035fd8	ldp	x20, x19, [sp, #0x40]
0000000000035fdc	ldp	x22, x21, [sp, #0x30]
0000000000035fe0	ldp	x24, x23, [sp, #0x20]
0000000000035fe4	ldp	x26, x25, [sp, #0x10]
0000000000035fe8	add	sp, sp, #0x60
0000000000035fec	b	_mi_segment_abandon
0000000000035ff0	add	x8, x8, #0x1
0000000000035ff4	ldr	x9, [x19, #0x40]
0000000000035ff8	cmp	x8, x9
0000000000035ffc	b.ne	0x36038
0000000000036000	ldr	w8, [x19, #0x70]
0000000000036004	add	x9, x20, #0x10
0000000000036008	cmp	w8, #0x0
000000000003600c	csel	x10, xzr, x20, ne
0000000000036010	cmp	w8, #0x1
0000000000036014	csel	x8, x9, x10, eq
0000000000036018	str	xzr, [x19, #0x18]
000000000003601c	ldr	x9, [x8, #0x8]
0000000000036020	str	x9, [x19, #0x20]
0000000000036024	add	x10, x9, #0x18
0000000000036028	cmp	x9, #0x0
000000000003602c	csel	x9, x8, x10, eq
0000000000036030	str	x19, [x9]
0000000000036034	str	x19, [x8, #0x8]
0000000000036038	ldp	x29, x30, [sp, #0x50]
000000000003603c	ldp	x20, x19, [sp, #0x40]
0000000000036040	ldp	x22, x21, [sp, #0x30]
0000000000036044	ldp	x24, x23, [sp, #0x20]
0000000000036048	ldp	x26, x25, [sp, #0x10]
000000000003604c	add	sp, sp, #0x60
0000000000036050	ret
0000000000036054	str	x26, [x20, #0x28]
0000000000036058	str	xzr, [x26, #0x30]
000000000003605c	mov	x0, x19
0000000000036060	mov	x1, x22
0000000000036064	mov	x2, x20
0000000000036068	bl	_mi_segment_page_clear
000000000003606c	ldr	x8, [x19, #0x38]
0000000000036070	cbnz	x8, 0x35fc0
0000000000036074	mov	x0, x19
0000000000036078	mov	x1, x21
000000000003607c	mov	x2, x20
0000000000036080	ldp	x29, x30, [sp, #0x50]
0000000000036084	ldp	x20, x19, [sp, #0x40]
0000000000036088	ldp	x22, x21, [sp, #0x30]
000000000003608c	ldp	x24, x23, [sp, #0x20]
0000000000036090	ldp	x26, x25, [sp, #0x10]
0000000000036094	add	sp, sp, #0x60
0000000000036098	b	_mi_segment_free
_mi_segment_page_clear:
000000000003609c	sub	sp, sp, #0x40
00000000000360a0	stp	x22, x21, [sp, #0x10]
00000000000360a4	stp	x20, x19, [sp, #0x20]
00000000000360a8	stp	x29, x30, [sp, #0x30]
00000000000360ac	add	x29, sp, #0x30
00000000000360b0	mov	x21, x2
00000000000360b4	mov	x19, x1
00000000000360b8	mov	x20, x0
00000000000360bc	ldrh	w8, [x1, #0x2]
00000000000360c0	ldr	w9, [x1, #0x14]
00000000000360c4	ubfx	x10, x9, #26, #6
00000000000360c8	cbnz	w10, 0x36318
00000000000360cc	mov	x10, x9
00000000000360d0	mul	x1, x10, x8
00000000000360d4	ldr	x8, [x21, #0x70]
00000000000360d8	add	x0, x8, #0xa0
00000000000360dc	bl	__mi_stat_decrease
00000000000360e0	ldr	x8, [x21, #0x70]
00000000000360e4	add	x9, x8, #0x20
00000000000360e8	adr	x10, #0x50f58
00000000000360ec	nop
00000000000360f0	cmp	x9, x10
00000000000360f4	adr	x10, #0x5118c
00000000000360f8	nop
00000000000360fc	ccmp	x9, x10, #0x2, hs
0000000000036100	b.lo	0x3612c
0000000000036104	ldp	x10, x9, [x8, #0x30]
0000000000036108	sub	x9, x9, #0x1
000000000003610c	str	x9, [x8, #0x38]
0000000000036110	cmp	x9, x10
0000000000036114	b.le	0x3611c
0000000000036118	str	x9, [x8, #0x30]
000000000003611c	ldr	x9, [x8, #0x28]
0000000000036120	add	x9, x9, #0x1
0000000000036124	str	x9, [x8, #0x28]
0000000000036128	b	0x36198
000000000003612c	add	x10, x8, #0x38
0000000000036130	ldxr	x9, [x10]
0000000000036134	sub	x9, x9, #0x1
0000000000036138	stxr	w11, x9, [x10]
000000000003613c	cbnz	w11, 0x36130
0000000000036140	add	x10, x8, #0x30
0000000000036144	ldr	x12, [x8, #0x30]
0000000000036148	b	0x3615c
000000000003614c	clrex
0000000000036150	mov	w13, #0x0
0000000000036154	mov	x12, x11
0000000000036158	cbnz	w13, 0x36184
000000000003615c	cmp	x12, x9
0000000000036160	b.ge	0x36184
0000000000036164	ldxr	x11, [x10]
0000000000036168	cmp	x11, x12
000000000003616c	b.ne	0x3614c
0000000000036170	stlxr	w12, x9, [x10]
0000000000036174	cbnz	w12, 0x36150
0000000000036178	mov	w13, #0x1
000000000003617c	mov	x12, x11
0000000000036180	cbz	w13, 0x3615c
0000000000036184	add	x8, x8, #0x28
0000000000036188	ldxr	x9, [x8]
000000000003618c	add	x9, x9, #0x1
0000000000036190	stxr	w10, x9, [x8]
0000000000036194	cbnz	w10, 0x36188
0000000000036198	ldrb	w8, [x19, #0x1]
000000000003619c	mov	w9, #0xf6
00000000000361a0	and	w8, w8, w9
00000000000361a4	strb	w8, [x19, #0x1]
00000000000361a8	ldr	w8, [x19, #0x14]
00000000000361ac	movi.16b	v0, #0x0
00000000000361b0	stur	q0, [x19, #0x16]
00000000000361b4	stur	q0, [x19, #0x6]
00000000000361b8	stur	q0, [x19, #0x26]
00000000000361bc	str	q0, [x19, #0x30]
00000000000361c0	str	w8, [x19, #0x14]
00000000000361c4	ldr	x8, [x20, #0x38]
00000000000361c8	sub	x8, x8, #0x1
00000000000361cc	str	x8, [x20, #0x38]
00000000000361d0	mov	w0, #0xa
00000000000361d4	bl	_mi_option_get
00000000000361d8	cbz	x0, 0x361e4
00000000000361dc	ldrb	w8, [x20, #0x8]
00000000000361e0	cbz	w8, 0x361fc
00000000000361e4	stur	wzr, [x19, #0x2]
00000000000361e8	ldp	x29, x30, [sp, #0x30]
00000000000361ec	ldp	x20, x19, [sp, #0x20]
00000000000361f0	ldp	x22, x21, [sp, #0x10]
00000000000361f4	add	sp, sp, #0x40
00000000000361f8	ret
00000000000361fc	ldrb	w8, [x19, #0x1]
0000000000036200	and	w8, w8, #0x7
0000000000036204	cmp	w8, #0x4
0000000000036208	b.ne	0x361e4
000000000003620c	mov	w0, #0xe
0000000000036210	bl	_mi_option_get
0000000000036214	cbz	x0, 0x36294
0000000000036218	mov	x0, sp
000000000003621c	mov	x1, #0x0
0000000000036220	bl	0x51a7c ; symbol stub for: _gettimeofday
0000000000036224	mov	w8, #0x3e8
0000000000036228	ldr	w9, [sp]
000000000003622c	ldrsw	x10, [sp, #0x8]
0000000000036230	mov	w11, #0x4dd3
0000000000036234	movk	w11, #0x1062, lsl #16
0000000000036238	mul	x10, x10, x11
000000000003623c	lsr	x11, x10, #32
0000000000036240	lsr	x10, x10, #63
0000000000036244	add	w10, w10, w11, asr #6
0000000000036248	madd	w20, w9, w8, w10
000000000003624c	mov	w0, #0xe
0000000000036250	bl	_mi_option_get
0000000000036254	add	w8, w0, w20
0000000000036258	str	w8, [x19, #0x10]
000000000003625c	ldr	x8, [x21, #0x20]
0000000000036260	stp	x8, xzr, [x19, #0x30]
0000000000036264	add	x9, x8, #0x38
0000000000036268	add	x10, x21, #0x28
000000000003626c	cmp	x8, #0x0
0000000000036270	csel	x8, x10, x9, eq
0000000000036274	str	x19, [x8]
0000000000036278	str	x19, [x21, #0x20]
000000000003627c	stur	wzr, [x19, #0x2]
0000000000036280	ldp	x29, x30, [sp, #0x30]
0000000000036284	ldp	x20, x19, [sp, #0x20]
0000000000036288	ldp	x22, x21, [sp, #0x10]
000000000003628c	add	sp, sp, #0x40
0000000000036290	ret
0000000000036294	mov	w0, #0xa
0000000000036298	bl	_mi_option_get
000000000003629c	cbz	x0, 0x361e4
00000000000362a0	ldrb	w8, [x20, #0x8]
00000000000362a4	cbnz	w8, 0x361e4
00000000000362a8	ldrb	w8, [x19, #0x1]
00000000000362ac	and	w9, w8, #0x7
00000000000362b0	cmp	w9, #0x4
00000000000362b4	b.ne	0x361e4
00000000000362b8	ldr	w9, [x20, #0x70]
00000000000362bc	cmp	w9, #0x3
00000000000362c0	b.ne	0x362cc
00000000000362c4	ldr	x1, [x20, #0x48]
00000000000362c8	b	0x362d8
00000000000362cc	ldr	x9, [x20, #0x60]
00000000000362d0	mov	w10, #0x1
00000000000362d4	lsl	x1, x10, x9
00000000000362d8	ldrb	w9, [x19]
00000000000362dc	madd	x0, x1, x9, x20
00000000000362e0	cbnz	x9, 0x362f0
00000000000362e4	ldr	x9, [x20, #0x50]
00000000000362e8	add	x0, x0, x9
00000000000362ec	sub	x1, x1, x9
00000000000362f0	orr	w8, w8, #0x2
00000000000362f4	strb	w8, [x19, #0x1]
00000000000362f8	cbz	x1, 0x361e4
00000000000362fc	bl	__mi_os_reset
0000000000036300	stur	wzr, [x19, #0x2]
0000000000036304	ldp	x29, x30, [sp, #0x30]
0000000000036308	ldp	x20, x19, [sp, #0x20]
000000000003630c	ldp	x22, x21, [sp, #0x10]
0000000000036310	add	sp, sp, #0x40
0000000000036314	ret
0000000000036318	and	x11, x19, #0xffffffffffc00000
000000000003631c	ldr	w12, [x11, #0x70]
0000000000036320	cmp	w12, #0x3
0000000000036324	b.ne	0x36330
0000000000036328	ldr	x10, [x11, #0x48]
000000000003632c	b	0x3633c
0000000000036330	ldr	x10, [x11, #0x60]
0000000000036334	mov	w13, #0x1
0000000000036338	lsl	x10, x13, x10
000000000003633c	ldrb	w13, [x19]
0000000000036340	cbnz	w13, 0x360d0
0000000000036344	ldr	x13, [x11, #0x50]
0000000000036348	sub	x10, x10, x13
000000000003634c	cmp	w12, #0x1
0000000000036350	b.hi	0x360d0
0000000000036354	add	x11, x11, x13
0000000000036358	udiv	x12, x11, x9
000000000003635c	neg	x11, x11
0000000000036360	madd	x11, x12, x9, x11
0000000000036364	add	x11, x9, x11
0000000000036368	cmp	x11, x9
000000000003636c	csel	x9, x11, xzr, lo
0000000000036370	sub	x10, x10, x9
0000000000036374	b	0x360d0
_mi_segment_free:
0000000000036378	stp	x28, x27, [sp, #-0x60]!
000000000003637c	stp	x26, x25, [sp, #0x10]
0000000000036380	stp	x24, x23, [sp, #0x20]
0000000000036384	stp	x22, x21, [sp, #0x30]
0000000000036388	stp	x20, x19, [sp, #0x40]
000000000003638c	stp	x29, x30, [sp, #0x50]
0000000000036390	add	x29, sp, #0x50
0000000000036394	mov	x20, x2
0000000000036398	mov	x19, x0
000000000003639c	adr	x24, #0x50ca4
00000000000363a0	nop
00000000000363a4	cbz	w1, 0x363d0
00000000000363a8	mov	w0, #0xb
00000000000363ac	bl	_mi_option_get
00000000000363b0	ldrb	w8, [x19, #0x8]
00000000000363b4	cbz	w8, 0x363f0
00000000000363b8	ldr	w8, [x19, #0x70]
00000000000363bc	cbz	w8, 0x365d0
00000000000363c0	cmp	w8, #0x1
00000000000363c4	b.ne	0x36638
00000000000363c8	add	x8, x20, #0x10
00000000000363cc	b	0x365d8
00000000000363d0	ldrb	w8, [x19, #0x8]
00000000000363d4	cbz	w8, 0x36524
00000000000363d8	ldr	w8, [x19, #0x70]
00000000000363dc	cbz	w8, 0x365ec
00000000000363e0	cmp	w8, #0x1
00000000000363e4	b.ne	0x3667c
00000000000363e8	add	x8, x20, #0x10
00000000000363ec	b	0x365f4
00000000000363f0	ldr	x8, [x19, #0x40]
00000000000363f4	cbz	x8, 0x363b8
00000000000363f8	cbz	x0, 0x37260
00000000000363fc	mov	x21, #0x0
0000000000036400	add	x22, x19, #0x78
0000000000036404	mov	w23, #0x1
0000000000036408	b	0x36420
000000000003640c	ldr	x8, [x19, #0x40]
0000000000036410	add	x21, x21, #0x1
0000000000036414	add	x22, x22, #0x40
0000000000036418	cmp	x21, x8
000000000003641c	b.hs	0x363b8
0000000000036420	ldrb	w9, [x22, #0x1]
0000000000036424	and	w9, w9, #0x7
0000000000036428	cmp	w9, #0x4
000000000003642c	b.ne	0x36410
0000000000036430	ldp	x8, x9, [x22, #0x30]
0000000000036434	cbz	x8, 0x36440
0000000000036438	cbnz	x9, 0x36444
000000000003643c	b	0x36450
0000000000036440	cbz	x9, 0x364d4
0000000000036444	str	x8, [x9, #0x30]
0000000000036448	ldr	x8, [x22, #0x30]
000000000003644c	cbz	x8, 0x36454
0000000000036450	str	x9, [x8, #0x38]
0000000000036454	ldr	x9, [x20, #0x28]
0000000000036458	cmp	x22, x9
000000000003645c	b.eq	0x364b8
0000000000036460	ldr	x9, [x20, #0x20]
0000000000036464	cmp	x22, x9
0000000000036468	b.eq	0x364cc
000000000003646c	str	wzr, [x22, #0x10]
0000000000036470	stp	xzr, xzr, [x22, #0x30]
0000000000036474	mov	w0, #0xa
0000000000036478	bl	_mi_option_get
000000000003647c	cbz	x0, 0x3640c
0000000000036480	ldrb	w8, [x19, #0x8]
0000000000036484	cbnz	w8, 0x3640c
0000000000036488	ldrb	w8, [x22, #0x1]
000000000003648c	and	w9, w8, #0x7
0000000000036490	cmp	w9, #0x4
0000000000036494	b.ne	0x3640c
0000000000036498	ldr	w9, [x19, #0x70]
000000000003649c	cmp	w9, #0x3
00000000000364a0	b.ne	0x364f0
00000000000364a4	ldr	x1, [x19, #0x48]
00000000000364a8	ldrb	w9, [x22]
00000000000364ac	madd	x0, x1, x9, x19
00000000000364b0	cbnz	x9, 0x36510
00000000000364b4	b	0x36504
00000000000364b8	ldr	x9, [x22, #0x38]
00000000000364bc	str	x9, [x20, #0x28]
00000000000364c0	ldr	x9, [x20, #0x20]
00000000000364c4	cmp	x22, x9
00000000000364c8	b.ne	0x3646c
00000000000364cc	str	x8, [x20, #0x20]
00000000000364d0	b	0x3646c
00000000000364d4	ldr	x9, [x20, #0x20]
00000000000364d8	cmp	x22, x9
00000000000364dc	b.eq	0x36454
00000000000364e0	ldr	x9, [x20, #0x28]
00000000000364e4	cmp	x22, x9
00000000000364e8	b.ne	0x36474
00000000000364ec	b	0x36454
00000000000364f0	ldr	x9, [x19, #0x60]
00000000000364f4	lsl	x1, x23, x9
00000000000364f8	ldrb	w9, [x22]
00000000000364fc	madd	x0, x1, x9, x19
0000000000036500	cbnz	x9, 0x36510
0000000000036504	ldr	x9, [x19, #0x50]
0000000000036508	add	x0, x0, x9
000000000003650c	sub	x1, x1, x9
0000000000036510	orr	w8, w8, #0x2
0000000000036514	strb	w8, [x22, #0x1]
0000000000036518	cbz	x1, 0x3640c
000000000003651c	bl	__mi_os_reset
0000000000036520	b	0x3640c
0000000000036524	ldr	x8, [x19, #0x40]
0000000000036528	cbz	x8, 0x363d8
000000000003652c	add	x9, x19, #0x78
0000000000036530	b	0x36548
0000000000036534	str	wzr, [x9, #0x10]
0000000000036538	stp	xzr, xzr, [x9, #0x30]
000000000003653c	add	x9, x9, #0x40
0000000000036540	subs	x8, x8, #0x1
0000000000036544	b.eq	0x363d8
0000000000036548	ldrb	w10, [x9, #0x1]
000000000003654c	and	w10, w10, #0x7
0000000000036550	cmp	w10, #0x4
0000000000036554	b.ne	0x3653c
0000000000036558	ldp	x10, x11, [x9, #0x30]
000000000003655c	cbz	x10, 0x36568
0000000000036560	cbnz	x11, 0x3656c
0000000000036564	b	0x36578
0000000000036568	cbz	x11, 0x365b4
000000000003656c	str	x10, [x11, #0x30]
0000000000036570	ldr	x10, [x9, #0x30]
0000000000036574	cbz	x10, 0x3657c
0000000000036578	str	x11, [x10, #0x38]
000000000003657c	ldr	x11, [x20, #0x28]
0000000000036580	cmp	x9, x11
0000000000036584	b.eq	0x36598
0000000000036588	ldr	x11, [x20, #0x20]
000000000003658c	cmp	x9, x11
0000000000036590	b.ne	0x36534
0000000000036594	b	0x365ac
0000000000036598	ldr	x11, [x9, #0x38]
000000000003659c	str	x11, [x20, #0x28]
00000000000365a0	ldr	x11, [x20, #0x20]
00000000000365a4	cmp	x9, x11
00000000000365a8	b.ne	0x36534
00000000000365ac	str	x10, [x20, #0x20]
00000000000365b0	b	0x36534
00000000000365b4	ldr	x11, [x20, #0x20]
00000000000365b8	cmp	x9, x11
00000000000365bc	b.eq	0x3657c
00000000000365c0	ldr	x11, [x20, #0x28]
00000000000365c4	cmp	x9, x11
00000000000365c8	b.ne	0x3653c
00000000000365cc	b	0x3657c
00000000000365d0	mov	x8, x20
00000000000365d4	cbz	x20, 0x36638
00000000000365d8	mov	x9, x19
00000000000365dc	ldp	x10, x11, [x9, #0x18]!
00000000000365e0	cbz	x10, 0x36608
00000000000365e4	cbnz	x11, 0x3660c
00000000000365e8	b	0x36618
00000000000365ec	mov	x8, x20
00000000000365f0	cbz	x20, 0x3667c
00000000000365f4	mov	x9, x19
00000000000365f8	ldp	x10, x11, [x9, #0x18]!
00000000000365fc	cbz	x10, 0x3664c
0000000000036600	cbnz	x11, 0x36650
0000000000036604	b	0x3665c
0000000000036608	cbz	x11, 0x37304
000000000003660c	str	x10, [x11, #0x18]
0000000000036610	ldr	x10, [x9]
0000000000036614	cbz	x10, 0x3661c
0000000000036618	str	x11, [x10, #0x20]
000000000003661c	ldr	x11, [x8]
0000000000036620	cmp	x11, x19
0000000000036624	b.eq	0x3718c
0000000000036628	ldr	x10, [x8, #0x8]
000000000003662c	cmp	x10, x19
0000000000036630	b.eq	0x3719c
0000000000036634	stp	xzr, xzr, [x9]
0000000000036638	ldr	x8, [x20, #0x70]
000000000003663c	add	x0, x8, #0xa0
0000000000036640	ldr	x1, [x19, #0x50]
0000000000036644	bl	__mi_stat_decrease
0000000000036648	b	0x36c90
000000000003664c	cbz	x11, 0x37314
0000000000036650	str	x10, [x11, #0x18]
0000000000036654	ldr	x10, [x9]
0000000000036658	cbz	x10, 0x36660
000000000003665c	str	x11, [x10, #0x20]
0000000000036660	ldr	x11, [x8]
0000000000036664	cmp	x11, x19
0000000000036668	b.eq	0x371a8
000000000003666c	ldr	x10, [x8, #0x8]
0000000000036670	cmp	x10, x19
0000000000036674	b.eq	0x371b8
0000000000036678	stp	xzr, xzr, [x9]
000000000003667c	ldr	x8, [x20, #0x70]
0000000000036680	add	x0, x8, #0xa0
0000000000036684	ldr	x1, [x19, #0x50]
0000000000036688	bl	__mi_stat_decrease
000000000003668c	ldr	x8, [x19, #0x48]
0000000000036690	cmp	x8, #0x400, lsl #12
0000000000036694	b.ne	0x36c90
0000000000036698	mov	w0, #0x9
000000000003669c	bl	_mi_option_get
00000000000366a0	mov	x21, x0
00000000000366a4	ldr	x8, [x20, #0x58]
00000000000366a8	cmp	x8, x0
00000000000366ac	b.hs	0x366bc
00000000000366b0	ldr	x9, [x20, #0x40]
00000000000366b4	cmp	x8, x9, lsr #3
00000000000366b8	b.ls	0x371c4
00000000000366bc	cmp	x8, x21
00000000000366c0	b.ls	0x36c90
00000000000366c4	adr	x25, #0x50bbc
00000000000366c8	nop
00000000000366cc	mov	w26, #0x1039
00000000000366d0	movi.16b	v16, #0x4
00000000000366d4	movi.16b	v17, #0x2
00000000000366d8	b	0x3670c
00000000000366dc	mov	w4, #0x0
00000000000366e0	mov	w27, #0x1
00000000000366e4	ldr	x2, [x22]
00000000000366e8	and	w3, w27, #0x1
00000000000366ec	mov	x0, x22
00000000000366f0	mov	x1, x23
00000000000366f4	bl	__mi_mem_free
00000000000366f8	ldr	x8, [x20, #0x58]
00000000000366fc	movi.16b	v16, #0x4
0000000000036700	movi.16b	v17, #0x2
0000000000036704	cmp	x8, x21
0000000000036708	b.ls	0x36c90
000000000003670c	ldr	x22, [x20, #0x68]
0000000000036710	cbz	x22, 0x36704
0000000000036714	sub	x8, x8, #0x1
0000000000036718	str	x8, [x20, #0x58]
000000000003671c	ldr	x8, [x22, #0x18]
0000000000036720	str	x8, [x20, #0x68]
0000000000036724	str	xzr, [x22, #0x18]
0000000000036728	ldr	x8, [x20, #0x70]
000000000003672c	add	x9, x8, #0x1a0
0000000000036730	cmp	x9, x24
0000000000036734	ccmp	x9, x25, #0x2, hs
0000000000036738	b.lo	0x36764
000000000003673c	ldp	x10, x9, [x8, #0x1b0]
0000000000036740	sub	x9, x9, #0x1
0000000000036744	str	x9, [x8, #0x1b8]
0000000000036748	cmp	x9, x10
000000000003674c	b.le	0x36754
0000000000036750	str	x9, [x8, #0x1b0]
0000000000036754	ldr	x9, [x8, #0x1a8]
0000000000036758	add	x9, x9, #0x1
000000000003675c	str	x9, [x8, #0x1a8]
0000000000036760	b	0x367d0
0000000000036764	add	x10, x8, #0x1b8
0000000000036768	ldxr	x9, [x10]
000000000003676c	sub	x9, x9, #0x1
0000000000036770	stxr	w11, x9, [x10]
0000000000036774	cbnz	w11, 0x36768
0000000000036778	add	x10, x8, #0x1b0
000000000003677c	ldr	x12, [x8, #0x1b0]
0000000000036780	b	0x36794
0000000000036784	clrex
0000000000036788	mov	w13, #0x0
000000000003678c	mov	x12, x11
0000000000036790	cbnz	w13, 0x367bc
0000000000036794	cmp	x12, x9
0000000000036798	b.ge	0x367bc
000000000003679c	ldxr	x11, [x10]
00000000000367a0	cmp	x11, x12
00000000000367a4	b.ne	0x36784
00000000000367a8	stlxr	w12, x9, [x10]
00000000000367ac	cbnz	w12, 0x36788
00000000000367b0	mov	w13, #0x1
00000000000367b4	mov	x12, x11
00000000000367b8	cbz	w13, 0x36794
00000000000367bc	add	x8, x8, #0x1a8
00000000000367c0	ldxr	x9, [x8]
00000000000367c4	add	x9, x9, #0x1
00000000000367c8	stxr	w10, x9, [x8]
00000000000367cc	cbnz	w10, 0x367c0
00000000000367d0	ldr	x23, [x22, #0x48]
00000000000367d4	add	x8, x22, #0x68
00000000000367d8	stlr	xzr, [x8]
00000000000367dc	ldr	x8, [x20, #0x70]
00000000000367e0	cmp	x8, x24
00000000000367e4	cset	w9, hs
00000000000367e8	add	x10, x24, #0x240
00000000000367ec	cmp	x8, x10
00000000000367f0	cset	w10, lo
00000000000367f4	and	w9, w9, w10
00000000000367f8	add	x11, x8, #0x18
00000000000367fc	cmp	x23, #0x0
0000000000036800	b.le	0x36878
0000000000036804	cbz	w9, 0x368e8
0000000000036808	ldxr	x9, [x11]
000000000003680c	sub	x9, x9, #0x1
0000000000036810	stxr	w10, x9, [x11]
0000000000036814	cbnz	w10, 0x36808
0000000000036818	add	x10, x8, #0x10
000000000003681c	ldr	x12, [x8, #0x10]
0000000000036820	b	0x36834
0000000000036824	clrex
0000000000036828	mov	w13, #0x0
000000000003682c	mov	x12, x11
0000000000036830	cbnz	w13, 0x3685c
0000000000036834	cmp	x12, x9
0000000000036838	b.ge	0x3685c
000000000003683c	ldxr	x11, [x10]
0000000000036840	cmp	x11, x12
0000000000036844	b.ne	0x36824
0000000000036848	stlxr	w12, x9, [x10]
000000000003684c	cbnz	w12, 0x36828
0000000000036850	mov	w13, #0x1
0000000000036854	mov	x12, x11
0000000000036858	cbz	w13, 0x36834
000000000003685c	add	x8, x8, #0x8
0000000000036860	ldxr	x9, [x8]
0000000000036864	add	x9, x9, #0x1
0000000000036868	stxr	w10, x9, [x8]
000000000003686c	cbnz	w10, 0x36860
0000000000036870	mov	x9, #-0x1
0000000000036874	b	0x36934
0000000000036878	cbz	w9, 0x3690c
000000000003687c	ldxr	x9, [x11]
0000000000036880	add	x10, x9, #0x1
0000000000036884	stxr	w12, x10, [x11]
0000000000036888	cbnz	w12, 0x3687c
000000000003688c	add	x11, x8, #0x10
0000000000036890	ldr	x13, [x8, #0x10]
0000000000036894	b	0x368a8
0000000000036898	clrex
000000000003689c	mov	w14, #0x0
00000000000368a0	mov	x13, x12
00000000000368a4	cbnz	w14, 0x368d0
00000000000368a8	cmp	x13, x9
00000000000368ac	b.gt	0x368d0
00000000000368b0	ldxr	x12, [x11]
00000000000368b4	cmp	x12, x13
00000000000368b8	b.ne	0x36898
00000000000368bc	stlxr	w13, x10, [x11]
00000000000368c0	cbnz	w13, 0x3689c
00000000000368c4	mov	w14, #0x1
00000000000368c8	mov	x13, x12
00000000000368cc	cbz	w14, 0x368a8
00000000000368d0	ldxr	x9, [x8]
00000000000368d4	add	x9, x9, #0x1
00000000000368d8	stxr	w10, x9, [x8]
00000000000368dc	cbnz	w10, 0x368d0
00000000000368e0	mov	w9, #0x1
00000000000368e4	b	0x36934
00000000000368e8	ldp	x10, x9, [x8, #0x10]
00000000000368ec	sub	x9, x9, #0x1
00000000000368f0	str	x9, [x8, #0x18]
00000000000368f4	cmp	x9, x10
00000000000368f8	b.le	0x36900
00000000000368fc	str	x9, [x8, #0x10]
0000000000036900	add	x8, x8, #0x8
0000000000036904	mov	x9, #-0x1
0000000000036908	b	0x36928
000000000003690c	ldp	x11, x10, [x8, #0x10]
0000000000036910	add	x9, x10, #0x1
0000000000036914	str	x9, [x8, #0x18]
0000000000036918	cmp	x10, x11
000000000003691c	b.lt	0x36924
0000000000036920	str	x9, [x8, #0x10]
0000000000036924	mov	w9, #0x1
0000000000036928	ldr	x10, [x8]
000000000003692c	add	x10, x10, #0x1
0000000000036930	str	x10, [x8]
0000000000036934	ldp	x8, x10, [x20, #0x38]
0000000000036938	add	x8, x8, x9
000000000003693c	str	x8, [x20, #0x38]
0000000000036940	cmp	x8, x10
0000000000036944	b.hi	0x36968
0000000000036948	ldp	x8, x9, [x20, #0x48]
000000000003694c	sub	x8, x8, x23
0000000000036950	str	x8, [x20, #0x48]
0000000000036954	cmp	x8, x9
0000000000036958	b.hi	0x36980
000000000003695c	ldr	x8, [x22, #0x40]
0000000000036960	cbnz	x8, 0x3698c
0000000000036964	b	0x366dc
0000000000036968	str	x8, [x20, #0x40]
000000000003696c	ldp	x8, x9, [x20, #0x48]
0000000000036970	sub	x8, x8, x23
0000000000036974	str	x8, [x20, #0x48]
0000000000036978	cmp	x8, x9
000000000003697c	b.ls	0x3695c
0000000000036980	str	x8, [x20, #0x50]
0000000000036984	ldr	x8, [x22, #0x40]
0000000000036988	cbz	x8, 0x366dc
000000000003698c	cmp	x8, #0x1f
0000000000036990	b.hi	0x369a4
0000000000036994	mov	w10, #0x0
0000000000036998	mov	x9, #0x0
000000000003699c	mov	w27, #0x1
00000000000369a0	b	0x36c40
00000000000369a4	and	x9, x8, #0xffffffffffffffe0
00000000000369a8	add	x10, x22, x26
00000000000369ac	movi.16b	v2, #0x1
00000000000369b0	movi.16b	v0, #0x0
00000000000369b4	mov	x11, x9
00000000000369b8	movi.16b	v1, #0x0
00000000000369bc	movi.16b	v3, #0x1
00000000000369c0	sub	x12, x10, #0x7c0
00000000000369c4	prfm	pldl1keep, [x12]
00000000000369c8	sub	x12, x10, #0x780
00000000000369cc	prfm	pldl1keep, [x12]
00000000000369d0	sub	x12, x10, #0xfc0
00000000000369d4	ldr	b4, [x12]
00000000000369d8	sub	x12, x10, #0x740
00000000000369dc	prfm	pldl1keep, [x12]
00000000000369e0	sub	x12, x10, #0xf80
00000000000369e4	ld1.b	{ v4 }[1], [x12]
00000000000369e8	sub	x12, x10, #0x700
00000000000369ec	prfm	pldl1keep, [x12]
00000000000369f0	sub	x12, x10, #0xf40
00000000000369f4	ld1.b	{ v4 }[2], [x12]
00000000000369f8	sub	x12, x10, #0x6c0
00000000000369fc	prfm	pldl1keep, [x12]
0000000000036a00	sub	x12, x10, #0xf00
0000000000036a04	ld1.b	{ v4 }[3], [x12]
0000000000036a08	sub	x12, x10, #0x680
0000000000036a0c	prfm	pldl1keep, [x12]
0000000000036a10	sub	x12, x10, #0xec0
0000000000036a14	ld1.b	{ v4 }[4], [x12]
0000000000036a18	sub	x12, x10, #0x640
0000000000036a1c	prfm	pldl1keep, [x12]
0000000000036a20	sub	x12, x10, #0xe80
0000000000036a24	ld1.b	{ v4 }[5], [x12]
0000000000036a28	sub	x12, x10, #0x600
0000000000036a2c	prfm	pldl1keep, [x12]
0000000000036a30	sub	x12, x10, #0xe40
0000000000036a34	ld1.b	{ v4 }[6], [x12]
0000000000036a38	sub	x12, x10, #0x5c0
0000000000036a3c	prfm	pldl1keep, [x12]
0000000000036a40	sub	x12, x10, #0xe00
0000000000036a44	ld1.b	{ v4 }[7], [x12]
0000000000036a48	sub	x12, x10, #0x580
0000000000036a4c	prfm	pldl1keep, [x12]
0000000000036a50	sub	x12, x10, #0xdc0
0000000000036a54	ld1.b	{ v4 }[8], [x12]
0000000000036a58	sub	x12, x10, #0x540
0000000000036a5c	prfm	pldl1keep, [x12]
0000000000036a60	sub	x12, x10, #0xd80
0000000000036a64	ld1.b	{ v4 }[9], [x12]
0000000000036a68	sub	x12, x10, #0x500
0000000000036a6c	prfm	pldl1keep, [x12]
0000000000036a70	sub	x12, x10, #0xd40
0000000000036a74	ld1.b	{ v4 }[10], [x12]
0000000000036a78	sub	x12, x10, #0x4c0
0000000000036a7c	prfm	pldl1keep, [x12]
0000000000036a80	sub	x12, x10, #0xd00
0000000000036a84	ld1.b	{ v4 }[11], [x12]
0000000000036a88	sub	x12, x10, #0x480
0000000000036a8c	prfm	pldl1keep, [x12]
0000000000036a90	sub	x12, x10, #0xcc0
0000000000036a94	ld1.b	{ v4 }[12], [x12]
0000000000036a98	sub	x12, x10, #0x440
0000000000036a9c	prfm	pldl1keep, [x12]
0000000000036aa0	sub	x12, x10, #0xc80
0000000000036aa4	ld1.b	{ v4 }[13], [x12]
0000000000036aa8	sub	x12, x10, #0x400
0000000000036aac	prfm	pldl1keep, [x12]
0000000000036ab0	sub	x12, x10, #0xc40
0000000000036ab4	ld1.b	{ v4 }[14], [x12]
0000000000036ab8	sub	x12, x10, #0xc00
0000000000036abc	ld1.b	{ v4 }[15], [x12]
0000000000036ac0	sub	x12, x10, #0x3c0
0000000000036ac4	prfm	pldl1keep, [x12]
0000000000036ac8	sub	x12, x10, #0x380
0000000000036acc	prfm	pldl1keep, [x12]
0000000000036ad0	sub	x12, x10, #0xbc0
0000000000036ad4	ldr	b5, [x12]
0000000000036ad8	sub	x12, x10, #0x340
0000000000036adc	prfm	pldl1keep, [x12]
0000000000036ae0	sub	x12, x10, #0xb80
0000000000036ae4	ld1.b	{ v5 }[1], [x12]
0000000000036ae8	sub	x12, x10, #0x300
0000000000036aec	prfm	pldl1keep, [x12]
0000000000036af0	sub	x12, x10, #0xb40
0000000000036af4	ld1.b	{ v5 }[2], [x12]
0000000000036af8	sub	x12, x10, #0x2c0
0000000000036afc	prfm	pldl1keep, [x12]
0000000000036b00	sub	x12, x10, #0xb00
0000000000036b04	ld1.b	{ v5 }[3], [x12]
0000000000036b08	sub	x12, x10, #0x280
0000000000036b0c	prfm	pldl1keep, [x12]
0000000000036b10	sub	x12, x10, #0xac0
0000000000036b14	ld1.b	{ v5 }[4], [x12]
0000000000036b18	sub	x12, x10, #0x240
0000000000036b1c	prfm	pldl1keep, [x12]
0000000000036b20	sub	x12, x10, #0xa80
0000000000036b24	ld1.b	{ v5 }[5], [x12]
0000000000036b28	sub	x12, x10, #0x200
0000000000036b2c	prfm	pldl1keep, [x12]
0000000000036b30	sub	x12, x10, #0xa40
0000000000036b34	ld1.b	{ v5 }[6], [x12]
0000000000036b38	sub	x12, x10, #0x1c0
0000000000036b3c	prfm	pldl1keep, [x12]
0000000000036b40	sub	x12, x10, #0xa00
0000000000036b44	ld1.b	{ v5 }[7], [x12]
0000000000036b48	sub	x12, x10, #0x180
0000000000036b4c	prfm	pldl1keep, [x12]
0000000000036b50	sub	x12, x10, #0x9c0
0000000000036b54	ld1.b	{ v5 }[8], [x12]
0000000000036b58	sub	x12, x10, #0x140
0000000000036b5c	prfm	pldl1keep, [x12]
0000000000036b60	sub	x12, x10, #0x980
0000000000036b64	ld1.b	{ v5 }[9], [x12]
0000000000036b68	sub	x12, x10, #0x940
0000000000036b6c	prfum	pldl1keep, [x10, #-0x100]
0000000000036b70	ld1.b	{ v5 }[10], [x12]
0000000000036b74	sub	x12, x10, #0x900
0000000000036b78	prfum	pldl1keep, [x10, #-0xc0]
0000000000036b7c	ld1.b	{ v5 }[11], [x12]
0000000000036b80	sub	x12, x10, #0x8c0
0000000000036b84	prfum	pldl1keep, [x10, #-0x80]
0000000000036b88	ld1.b	{ v5 }[12], [x12]
0000000000036b8c	sub	x12, x10, #0x880
0000000000036b90	prfum	pldl1keep, [x10, #-0x40]
0000000000036b94	ld1.b	{ v5 }[13], [x12]
0000000000036b98	sub	x12, x10, #0x840
0000000000036b9c	prfm	pldl1keep, [x10]
0000000000036ba0	ld1.b	{ v5 }[14], [x12]
0000000000036ba4	sub	x12, x10, #0x800
0000000000036ba8	ld1.b	{ v5 }[15], [x12]
0000000000036bac	and.16b	v6, v4, v16
0000000000036bb0	and.16b	v7, v5, v16
0000000000036bb4	cmeq.16b	v6, v6, #0
0000000000036bb8	cmeq.16b	v7, v7, #0
0000000000036bbc	bic.16b	v2, v2, v6
0000000000036bc0	and.16b	v4, v4, v17
0000000000036bc4	and.16b	v5, v5, v17
0000000000036bc8	bic.16b	v3, v3, v7
0000000000036bcc	cmeq.16b	v4, v4, #0
0000000000036bd0	cmeq.16b	v5, v5, #0
0000000000036bd4	orn.16b	v0, v0, v4
0000000000036bd8	orn.16b	v1, v1, v5
0000000000036bdc	add	x10, x10, #0x800
0000000000036be0	subs	x11, x11, #0x20
0000000000036be4	b.ne	0x369c0
0000000000036be8	and.16b	v2, v3, v2
0000000000036bec	dup.2d	v3, v2[1]
0000000000036bf0	and.16b	v2, v2, v3
0000000000036bf4	dup.4s	v3, v2[1]
0000000000036bf8	and.16b	v2, v2, v3
0000000000036bfc	dup.8h	v3, v2[1]
0000000000036c00	and.16b	v2, v2, v3
0000000000036c04	dup.16b	v3, v2[1]
0000000000036c08	and.16b	v2, v2, v3
0000000000036c0c	umov.b	w27, v2[0]
0000000000036c10	orr.16b	v0, v1, v0
0000000000036c14	dup.2d	v1, v0[1]
0000000000036c18	orr.16b	v0, v0, v1
0000000000036c1c	dup.4s	v1, v0[1]
0000000000036c20	orr.16b	v0, v0, v1
0000000000036c24	dup.8h	v1, v0[1]
0000000000036c28	orr.16b	v0, v0, v1
0000000000036c2c	dup.16b	v1, v0[1]
0000000000036c30	orr.16b	v0, v0, v1
0000000000036c34	umov.b	w10, v0[0]
0000000000036c38	cmp	x8, x9
0000000000036c3c	b.eq	0x36c68
0000000000036c40	sub	x8, x8, x9
0000000000036c44	add	x9, x22, x9, lsl #6
0000000000036c48	add	x9, x9, #0x79
0000000000036c4c	ldrb	w11, [x9], #0x40
0000000000036c50	and	w12, w11, #0x4
0000000000036c54	and	w27, w27, w12, lsr #2
0000000000036c58	and	w11, w11, #0x2
0000000000036c5c	orr	w10, w10, w11, lsr #1
0000000000036c60	subs	x8, x8, #0x1
0000000000036c64	b.ne	0x36c4c
0000000000036c68	tbz	w10, #0x0, 0x36c88
0000000000036c6c	mov	w0, #0x5
0000000000036c70	bl	_mi_option_get
0000000000036c74	cmp	x0, #0x0
0000000000036c78	cset	w8, eq
0000000000036c7c	and	w27, w27, w8
0000000000036c80	mov	w4, #0x1
0000000000036c84	b	0x366e4
0000000000036c88	mov	w4, #0x0
0000000000036c8c	b	0x366e4
0000000000036c90	ldr	x21, [x19, #0x48]
0000000000036c94	add	x8, x19, #0x68
0000000000036c98	stlr	xzr, [x8]
0000000000036c9c	ldr	x8, [x20, #0x70]
0000000000036ca0	cmp	x8, x24
0000000000036ca4	cset	w9, hs
0000000000036ca8	add	x10, x24, #0x240
0000000000036cac	cmp	x8, x10
0000000000036cb0	cset	w10, lo
0000000000036cb4	and	w9, w9, w10
0000000000036cb8	add	x11, x8, #0x18
0000000000036cbc	cmp	x21, #0x0
0000000000036cc0	b.le	0x36d38
0000000000036cc4	cbz	w9, 0x36da8
0000000000036cc8	ldxr	x9, [x11]
0000000000036ccc	sub	x9, x9, #0x1
0000000000036cd0	stxr	w10, x9, [x11]
0000000000036cd4	cbnz	w10, 0x36cc8
0000000000036cd8	add	x10, x8, #0x10
0000000000036cdc	ldr	x12, [x8, #0x10]
0000000000036ce0	b	0x36cf4
0000000000036ce4	clrex
0000000000036ce8	mov	w13, #0x0
0000000000036cec	mov	x12, x11
0000000000036cf0	cbnz	w13, 0x36d1c
0000000000036cf4	cmp	x12, x9
0000000000036cf8	b.ge	0x36d1c
0000000000036cfc	ldxr	x11, [x10]
0000000000036d00	cmp	x11, x12
0000000000036d04	b.ne	0x36ce4
0000000000036d08	stlxr	w12, x9, [x10]
0000000000036d0c	cbnz	w12, 0x36ce8
0000000000036d10	mov	w13, #0x1
0000000000036d14	mov	x12, x11
0000000000036d18	cbz	w13, 0x36cf4
0000000000036d1c	add	x8, x8, #0x8
0000000000036d20	ldxr	x9, [x8]
0000000000036d24	add	x9, x9, #0x1
0000000000036d28	stxr	w10, x9, [x8]
0000000000036d2c	cbnz	w10, 0x36d20
0000000000036d30	mov	x9, #-0x1
0000000000036d34	b	0x36df4
0000000000036d38	cbz	w9, 0x36dcc
0000000000036d3c	ldxr	x9, [x11]
0000000000036d40	add	x10, x9, #0x1
0000000000036d44	stxr	w12, x10, [x11]
0000000000036d48	cbnz	w12, 0x36d3c
0000000000036d4c	add	x11, x8, #0x10
0000000000036d50	ldr	x13, [x8, #0x10]
0000000000036d54	b	0x36d68
0000000000036d58	clrex
0000000000036d5c	mov	w14, #0x0
0000000000036d60	mov	x13, x12
0000000000036d64	cbnz	w14, 0x36d90
0000000000036d68	cmp	x13, x9
0000000000036d6c	b.gt	0x36d90
0000000000036d70	ldxr	x12, [x11]
0000000000036d74	cmp	x12, x13
0000000000036d78	b.ne	0x36d58
0000000000036d7c	stlxr	w13, x10, [x11]
0000000000036d80	cbnz	w13, 0x36d5c
0000000000036d84	mov	w14, #0x1
0000000000036d88	mov	x13, x12
0000000000036d8c	cbz	w14, 0x36d68
0000000000036d90	mov	w9, #0x1
0000000000036d94	ldxr	x10, [x8]
0000000000036d98	add	x10, x10, #0x1
0000000000036d9c	stxr	w11, x10, [x8]
0000000000036da0	cbnz	w11, 0x36d94
0000000000036da4	b	0x36df4
0000000000036da8	ldp	x10, x9, [x8, #0x10]
0000000000036dac	sub	x9, x9, #0x1
0000000000036db0	str	x9, [x8, #0x18]
0000000000036db4	cmp	x9, x10
0000000000036db8	b.le	0x36dc0
0000000000036dbc	str	x9, [x8, #0x10]
0000000000036dc0	add	x8, x8, #0x8
0000000000036dc4	mov	x9, #-0x1
0000000000036dc8	b	0x36de8
0000000000036dcc	ldp	x11, x10, [x8, #0x10]
0000000000036dd0	add	x9, x10, #0x1
0000000000036dd4	str	x9, [x8, #0x18]
0000000000036dd8	cmp	x10, x11
0000000000036ddc	b.lt	0x36de4
0000000000036de0	str	x9, [x8, #0x10]
0000000000036de4	mov	w9, #0x1
0000000000036de8	ldr	x10, [x8]
0000000000036dec	add	x10, x10, #0x1
0000000000036df0	str	x10, [x8]
0000000000036df4	ldp	x8, x10, [x20, #0x38]
0000000000036df8	add	x8, x8, x9
0000000000036dfc	str	x8, [x20, #0x38]
0000000000036e00	cmp	x8, x10
0000000000036e04	b.hi	0x36e3c
0000000000036e08	ldp	x8, x9, [x20, #0x48]
0000000000036e0c	sub	x8, x8, x21
0000000000036e10	str	x8, [x20, #0x48]
0000000000036e14	cmp	x8, x9
0000000000036e18	b.hi	0x36e54
0000000000036e1c	ldr	x8, [x19, #0x40]
0000000000036e20	cbz	x8, 0x36e60
0000000000036e24	cmp	x8, #0x1f
0000000000036e28	b.hi	0x36e6c
0000000000036e2c	mov	w10, #0x0
0000000000036e30	mov	x9, #0x0
0000000000036e34	mov	w20, #0x1
0000000000036e38	b	0x37114
0000000000036e3c	str	x8, [x20, #0x40]
0000000000036e40	ldp	x8, x9, [x20, #0x48]
0000000000036e44	sub	x8, x8, x21
0000000000036e48	str	x8, [x20, #0x48]
0000000000036e4c	cmp	x8, x9
0000000000036e50	b.ls	0x36e1c
0000000000036e54	str	x8, [x20, #0x50]
0000000000036e58	ldr	x8, [x19, #0x40]
0000000000036e5c	cbnz	x8, 0x36e24
0000000000036e60	mov	w4, #0x0
0000000000036e64	mov	w20, #0x1
0000000000036e68	b	0x37160
0000000000036e6c	and	x9, x8, #0xffffffffffffffe0
0000000000036e70	mov	w10, #0x1039
0000000000036e74	add	x10, x19, x10
0000000000036e78	movi.16b	v2, #0x1
0000000000036e7c	movi.16b	v0, #0x0
0000000000036e80	movi.16b	v3, #0x4
0000000000036e84	movi.16b	v4, #0x2
0000000000036e88	mov	x11, x9
0000000000036e8c	movi.16b	v1, #0x0
0000000000036e90	movi.16b	v5, #0x1
0000000000036e94	sub	x12, x10, #0x7c0
0000000000036e98	prfm	pldl1keep, [x12]
0000000000036e9c	sub	x12, x10, #0x780
0000000000036ea0	prfm	pldl1keep, [x12]
0000000000036ea4	sub	x12, x10, #0xfc0
0000000000036ea8	ldr	b6, [x12]
0000000000036eac	sub	x12, x10, #0x740
0000000000036eb0	prfm	pldl1keep, [x12]
0000000000036eb4	sub	x12, x10, #0xf80
0000000000036eb8	ld1.b	{ v6 }[1], [x12]
0000000000036ebc	sub	x12, x10, #0x700
0000000000036ec0	prfm	pldl1keep, [x12]
0000000000036ec4	sub	x12, x10, #0xf40
0000000000036ec8	ld1.b	{ v6 }[2], [x12]
0000000000036ecc	sub	x12, x10, #0x6c0
0000000000036ed0	prfm	pldl1keep, [x12]
0000000000036ed4	sub	x12, x10, #0xf00
0000000000036ed8	ld1.b	{ v6 }[3], [x12]
0000000000036edc	sub	x12, x10, #0x680
0000000000036ee0	prfm	pldl1keep, [x12]
0000000000036ee4	sub	x12, x10, #0xec0
0000000000036ee8	ld1.b	{ v6 }[4], [x12]
0000000000036eec	sub	x12, x10, #0x640
0000000000036ef0	prfm	pldl1keep, [x12]
0000000000036ef4	sub	x12, x10, #0xe80
0000000000036ef8	ld1.b	{ v6 }[5], [x12]
0000000000036efc	sub	x12, x10, #0x600
0000000000036f00	prfm	pldl1keep, [x12]
0000000000036f04	sub	x12, x10, #0xe40
0000000000036f08	ld1.b	{ v6 }[6], [x12]
0000000000036f0c	sub	x12, x10, #0x5c0
0000000000036f10	prfm	pldl1keep, [x12]
0000000000036f14	sub	x12, x10, #0xe00
0000000000036f18	ld1.b	{ v6 }[7], [x12]
0000000000036f1c	sub	x12, x10, #0x580
0000000000036f20	prfm	pldl1keep, [x12]
0000000000036f24	sub	x12, x10, #0xdc0
0000000000036f28	ld1.b	{ v6 }[8], [x12]
0000000000036f2c	sub	x12, x10, #0x540
0000000000036f30	prfm	pldl1keep, [x12]
0000000000036f34	sub	x12, x10, #0xd80
0000000000036f38	ld1.b	{ v6 }[9], [x12]
0000000000036f3c	sub	x12, x10, #0x500
0000000000036f40	prfm	pldl1keep, [x12]
0000000000036f44	sub	x12, x10, #0xd40
0000000000036f48	ld1.b	{ v6 }[10], [x12]
0000000000036f4c	sub	x12, x10, #0x4c0
0000000000036f50	prfm	pldl1keep, [x12]
0000000000036f54	sub	x12, x10, #0xd00
0000000000036f58	ld1.b	{ v6 }[11], [x12]
0000000000036f5c	sub	x12, x10, #0x480
0000000000036f60	prfm	pldl1keep, [x12]
0000000000036f64	sub	x12, x10, #0xcc0
0000000000036f68	ld1.b	{ v6 }[12], [x12]
0000000000036f6c	sub	x12, x10, #0x440
0000000000036f70	prfm	pldl1keep, [x12]
0000000000036f74	sub	x12, x10, #0xc80
0000000000036f78	ld1.b	{ v6 }[13], [x12]
0000000000036f7c	sub	x12, x10, #0x400
0000000000036f80	prfm	pldl1keep, [x12]
0000000000036f84	sub	x12, x10, #0xc40
0000000000036f88	ld1.b	{ v6 }[14], [x12]
0000000000036f8c	sub	x12, x10, #0xc00
0000000000036f90	ld1.b	{ v6 }[15], [x12]
0000000000036f94	sub	x12, x10, #0x3c0
0000000000036f98	prfm	pldl1keep, [x12]
0000000000036f9c	sub	x12, x10, #0x380
0000000000036fa0	prfm	pldl1keep, [x12]
0000000000036fa4	sub	x12, x10, #0xbc0
0000000000036fa8	ldr	b7, [x12]
0000000000036fac	sub	x12, x10, #0x340
0000000000036fb0	prfm	pldl1keep, [x12]
0000000000036fb4	sub	x12, x10, #0xb80
0000000000036fb8	ld1.b	{ v7 }[1], [x12]
0000000000036fbc	sub	x12, x10, #0x300
0000000000036fc0	prfm	pldl1keep, [x12]
0000000000036fc4	sub	x12, x10, #0xb40
0000000000036fc8	ld1.b	{ v7 }[2], [x12]
0000000000036fcc	sub	x12, x10, #0x2c0
0000000000036fd0	prfm	pldl1keep, [x12]
0000000000036fd4	sub	x12, x10, #0xb00
0000000000036fd8	ld1.b	{ v7 }[3], [x12]
0000000000036fdc	sub	x12, x10, #0x280
0000000000036fe0	prfm	pldl1keep, [x12]
0000000000036fe4	sub	x12, x10, #0xac0
0000000000036fe8	ld1.b	{ v7 }[4], [x12]
0000000000036fec	sub	x12, x10, #0x240
0000000000036ff0	prfm	pldl1keep, [x12]
0000000000036ff4	sub	x12, x10, #0xa80
0000000000036ff8	ld1.b	{ v7 }[5], [x12]
0000000000036ffc	sub	x12, x10, #0x200
0000000000037000	prfm	pldl1keep, [x12]
0000000000037004	sub	x12, x10, #0xa40
0000000000037008	ld1.b	{ v7 }[6], [x12]
000000000003700c	sub	x12, x10, #0x1c0
0000000000037010	prfm	pldl1keep, [x12]
0000000000037014	sub	x12, x10, #0xa00
0000000000037018	ld1.b	{ v7 }[7], [x12]
000000000003701c	sub	x12, x10, #0x180
0000000000037020	prfm	pldl1keep, [x12]
0000000000037024	sub	x12, x10, #0x9c0
0000000000037028	ld1.b	{ v7 }[8], [x12]
000000000003702c	sub	x12, x10, #0x140
0000000000037030	prfm	pldl1keep, [x12]
0000000000037034	sub	x12, x10, #0x980
0000000000037038	ld1.b	{ v7 }[9], [x12]
000000000003703c	sub	x12, x10, #0x940
0000000000037040	prfum	pldl1keep, [x10, #-0x100]
0000000000037044	ld1.b	{ v7 }[10], [x12]
0000000000037048	sub	x12, x10, #0x900
000000000003704c	prfum	pldl1keep, [x10, #-0xc0]
0000000000037050	ld1.b	{ v7 }[11], [x12]
0000000000037054	sub	x12, x10, #0x8c0
0000000000037058	prfum	pldl1keep, [x10, #-0x80]
000000000003705c	ld1.b	{ v7 }[12], [x12]
0000000000037060	sub	x12, x10, #0x880
0000000000037064	prfum	pldl1keep, [x10, #-0x40]
0000000000037068	ld1.b	{ v7 }[13], [x12]
000000000003706c	sub	x12, x10, #0x840
0000000000037070	prfm	pldl1keep, [x10]
0000000000037074	ld1.b	{ v7 }[14], [x12]
0000000000037078	sub	x12, x10, #0x800
000000000003707c	ld1.b	{ v7 }[15], [x12]
0000000000037080	and.16b	v16, v6, v3
0000000000037084	and.16b	v17, v7, v3
0000000000037088	cmeq.16b	v16, v16, #0
000000000003708c	cmeq.16b	v17, v17, #0
0000000000037090	bic.16b	v2, v2, v16
0000000000037094	and.16b	v6, v6, v4
0000000000037098	and.16b	v7, v7, v4
000000000003709c	bic.16b	v5, v5, v17
00000000000370a0	cmeq.16b	v6, v6, #0
00000000000370a4	cmeq.16b	v7, v7, #0
00000000000370a8	orn.16b	v0, v0, v6
00000000000370ac	orn.16b	v1, v1, v7
00000000000370b0	add	x10, x10, #0x800
00000000000370b4	subs	x11, x11, #0x20
00000000000370b8	b.ne	0x36e94
00000000000370bc	and.16b	v2, v5, v2
00000000000370c0	dup.2d	v3, v2[1]
00000000000370c4	and.16b	v2, v2, v3
00000000000370c8	dup.4s	v3, v2[1]
00000000000370cc	and.16b	v2, v2, v3
00000000000370d0	dup.8h	v3, v2[1]
00000000000370d4	and.16b	v2, v2, v3
00000000000370d8	dup.16b	v3, v2[1]
00000000000370dc	and.16b	v2, v2, v3
00000000000370e0	umov.b	w20, v2[0]
00000000000370e4	orr.16b	v0, v1, v0
00000000000370e8	dup.2d	v1, v0[1]
00000000000370ec	orr.16b	v0, v0, v1
00000000000370f0	dup.4s	v1, v0[1]
00000000000370f4	orr.16b	v0, v0, v1
00000000000370f8	dup.8h	v1, v0[1]
00000000000370fc	orr.16b	v0, v0, v1
0000000000037100	dup.16b	v1, v0[1]
0000000000037104	orr.16b	v0, v0, v1
0000000000037108	umov.b	w10, v0[0]
000000000003710c	cmp	x8, x9
0000000000037110	b.eq	0x3713c
0000000000037114	sub	x8, x8, x9
0000000000037118	add	x9, x19, x9, lsl #6
000000000003711c	add	x9, x9, #0x79
0000000000037120	ldrb	w11, [x9], #0x40
0000000000037124	and	w12, w11, #0x4
0000000000037128	and	w20, w20, w12, lsr #2
000000000003712c	and	w11, w11, #0x2
0000000000037130	orr	w10, w10, w11, lsr #1
0000000000037134	subs	x8, x8, #0x1
0000000000037138	b.ne	0x37120
000000000003713c	tbz	w10, #0x0, 0x3715c
0000000000037140	mov	w0, #0x5
0000000000037144	bl	_mi_option_get
0000000000037148	cmp	x0, #0x0
000000000003714c	cset	w8, eq
0000000000037150	and	w20, w20, w8
0000000000037154	mov	w4, #0x1
0000000000037158	b	0x37160
000000000003715c	mov	w4, #0x0
0000000000037160	ldr	x2, [x19]
0000000000037164	and	w3, w20, #0x1
0000000000037168	mov	x0, x19
000000000003716c	mov	x1, x21
0000000000037170	ldp	x29, x30, [sp, #0x50]
0000000000037174	ldp	x20, x19, [sp, #0x40]
0000000000037178	ldp	x22, x21, [sp, #0x30]
000000000003717c	ldp	x24, x23, [sp, #0x20]
0000000000037180	ldp	x26, x25, [sp, #0x10]
0000000000037184	ldp	x28, x27, [sp], #0x60
0000000000037188	b	__mi_mem_free
000000000003718c	str	x10, [x8]
0000000000037190	ldr	x10, [x8, #0x8]
0000000000037194	cmp	x10, x19
0000000000037198	b.ne	0x36634
000000000003719c	ldr	x10, [x19, #0x20]
00000000000371a0	str	x10, [x8, #0x8]
00000000000371a4	b	0x36634
00000000000371a8	str	x10, [x8]
00000000000371ac	ldr	x10, [x8, #0x8]
00000000000371b0	cmp	x10, x19
00000000000371b4	b.ne	0x36678
00000000000371b8	ldr	x10, [x19, #0x20]
00000000000371bc	str	x10, [x8, #0x8]
00000000000371c0	b	0x36678
00000000000371c4	ldp	x9, x12, [x20, #0x68]
00000000000371c8	str	x9, [x19, #0x18]
00000000000371cc	str	x19, [x20, #0x68]
00000000000371d0	add	x8, x8, #0x1
00000000000371d4	str	x8, [x20, #0x58]
00000000000371d8	add	x8, x12, #0x1a0
00000000000371dc	cmp	x8, x24
00000000000371e0	b.lo	0x37324
00000000000371e4	adr	x9, #0x5009c
00000000000371e8	nop
00000000000371ec	cmp	x8, x9
00000000000371f0	b.hs	0x37324
00000000000371f4	add	x11, x12, #0x1b8
00000000000371f8	ldxr	x9, [x11]
00000000000371fc	add	x10, x9, #0x1
0000000000037200	stxr	w13, x10, [x11]
0000000000037204	cbnz	w13, 0x371f8
0000000000037208	add	x11, x12, #0x1b0
000000000003720c	ldr	x13, [x12, #0x1b0]
0000000000037210	b	0x37224
0000000000037214	clrex
0000000000037218	mov	w14, #0x0
000000000003721c	mov	x13, x12
0000000000037220	cbnz	w14, 0x3724c
0000000000037224	cmp	x13, x9
0000000000037228	b.gt	0x3724c
000000000003722c	ldxr	x12, [x11]
0000000000037230	cmp	x12, x13
0000000000037234	b.ne	0x37214
0000000000037238	stlxr	w13, x10, [x11]
000000000003723c	cbnz	w13, 0x37218
0000000000037240	mov	w14, #0x1
0000000000037244	mov	x13, x12
0000000000037248	cbz	w14, 0x37224
000000000003724c	ldxr	x9, [x8]
0000000000037250	add	x9, x9, #0x1
0000000000037254	stxr	w10, x9, [x8]
0000000000037258	cbnz	w10, 0x3724c
000000000003725c	b	0x37348
0000000000037260	add	x9, x19, #0x78
0000000000037264	b	0x3727c
0000000000037268	str	wzr, [x9, #0x10]
000000000003726c	stp	xzr, xzr, [x9, #0x30]
0000000000037270	add	x9, x9, #0x40
0000000000037274	subs	x8, x8, #0x1
0000000000037278	b.eq	0x363b8
000000000003727c	ldrb	w10, [x9, #0x1]
0000000000037280	and	w10, w10, #0x7
0000000000037284	cmp	w10, #0x4
0000000000037288	b.ne	0x37270
000000000003728c	ldp	x10, x11, [x9, #0x30]
0000000000037290	cbz	x10, 0x3729c
0000000000037294	cbnz	x11, 0x372a0
0000000000037298	b	0x372ac
000000000003729c	cbz	x11, 0x372e8
00000000000372a0	str	x10, [x11, #0x30]
00000000000372a4	ldr	x10, [x9, #0x30]
00000000000372a8	cbz	x10, 0x372b0
00000000000372ac	str	x11, [x10, #0x38]
00000000000372b0	ldr	x11, [x20, #0x28]
00000000000372b4	cmp	x9, x11
00000000000372b8	b.eq	0x372cc
00000000000372bc	ldr	x11, [x20, #0x20]
00000000000372c0	cmp	x9, x11
00000000000372c4	b.ne	0x37268
00000000000372c8	b	0x372e0
00000000000372cc	ldr	x11, [x9, #0x38]
00000000000372d0	str	x11, [x20, #0x28]
00000000000372d4	ldr	x11, [x20, #0x20]
00000000000372d8	cmp	x9, x11
00000000000372dc	b.ne	0x37268
00000000000372e0	str	x10, [x20, #0x20]
00000000000372e4	b	0x37268
00000000000372e8	ldr	x11, [x20, #0x20]
00000000000372ec	cmp	x9, x11
00000000000372f0	b.eq	0x372b0
00000000000372f4	ldr	x11, [x20, #0x28]
00000000000372f8	cmp	x9, x11
00000000000372fc	b.ne	0x37270
0000000000037300	b	0x372b0
0000000000037304	ldr	x11, [x8]
0000000000037308	cmp	x11, x19
000000000003730c	b.ne	0x36638
0000000000037310	b	0x3661c
0000000000037314	ldr	x11, [x8]
0000000000037318	cmp	x11, x19
000000000003731c	b.ne	0x3667c
0000000000037320	b	0x36660
0000000000037324	ldp	x11, x10, [x12, #0x1b0]
0000000000037328	add	x9, x10, #0x1
000000000003732c	str	x9, [x12, #0x1b8]
0000000000037330	cmp	x10, x11
0000000000037334	b.lt	0x3733c
0000000000037338	str	x9, [x12, #0x1b0]
000000000003733c	ldr	x9, [x8]
0000000000037340	add	x9, x9, #0x1
0000000000037344	str	x9, [x8]
0000000000037348	ldp	x29, x30, [sp, #0x50]
000000000003734c	ldp	x20, x19, [sp, #0x40]
0000000000037350	ldp	x22, x21, [sp, #0x30]
0000000000037354	ldp	x24, x23, [sp, #0x20]
0000000000037358	ldp	x26, x25, [sp, #0x10]
000000000003735c	ldp	x28, x27, [sp], #0x60
0000000000037360	ret
_mi_segment_abandon:
0000000000037364	sub	sp, sp, #0x50
0000000000037368	stp	x24, x23, [sp, #0x10]
000000000003736c	stp	x22, x21, [sp, #0x20]
0000000000037370	stp	x20, x19, [sp, #0x30]
0000000000037374	stp	x29, x30, [sp, #0x40]
0000000000037378	add	x29, sp, #0x40
000000000003737c	mov	x20, x1
0000000000037380	mov	x19, x0
0000000000037384	mov	w0, #0xa
0000000000037388	bl	_mi_option_get
000000000003738c	cbz	x0, 0x37474
0000000000037390	mov	x0, sp
0000000000037394	mov	x1, #0x0
0000000000037398	bl	0x51a7c ; symbol stub for: _gettimeofday
000000000003739c	ldr	x21, [x20, #0x28]
00000000000373a0	cbz	x21, 0x37470
00000000000373a4	ldr	x8, [sp]
00000000000373a8	ldr	w9, [sp, #0x8]
00000000000373ac	mov	w10, #0x4dd3
00000000000373b0	movk	w10, #0x1062, lsl #16
00000000000373b4	smull	x9, w9, w10
00000000000373b8	lsr	x10, x9, #63
00000000000373bc	asr	x9, x9, #38
00000000000373c0	add	w9, w9, w10
00000000000373c4	mov	w10, #0x3e8
00000000000373c8	madd	w22, w8, w10, w9
00000000000373cc	mov	w23, #0x1
00000000000373d0	b	0x373e0
00000000000373d4	str	wzr, [x24, #0x10]
00000000000373d8	stp	xzr, xzr, [x24, #0x30]
00000000000373dc	cbz	x21, 0x37470
00000000000373e0	mov	x24, x21
00000000000373e4	ldr	w8, [x21, #0x10]
00000000000373e8	cmp	w8, w22
00000000000373ec	b.gt	0x376dc
00000000000373f0	ldr	x21, [x24, #0x38]
00000000000373f4	mov	w0, #0xa
00000000000373f8	bl	_mi_option_get
00000000000373fc	cbz	x0, 0x373d4
0000000000037400	and	x9, x24, #0xffffffffffc00000
0000000000037404	ldrb	w8, [x9, #0x8]
0000000000037408	cbnz	w8, 0x373d4
000000000003740c	ldrb	w8, [x24, #0x1]
0000000000037410	and	w10, w8, #0x7
0000000000037414	cmp	w10, #0x4
0000000000037418	b.ne	0x373d4
000000000003741c	ldr	w10, [x9, #0x70]
0000000000037420	cmp	w10, #0x3
0000000000037424	b.ne	0x3743c
0000000000037428	ldr	x1, [x9, #0x48]
000000000003742c	ldrb	w10, [x24]
0000000000037430	madd	x0, x1, x10, x9
0000000000037434	cbnz	x10, 0x3745c
0000000000037438	b	0x37450
000000000003743c	ldr	x10, [x9, #0x60]
0000000000037440	lsl	x1, x23, x10
0000000000037444	ldrb	w10, [x24]
0000000000037448	madd	x0, x1, x10, x9
000000000003744c	cbnz	x10, 0x3745c
0000000000037450	ldr	x9, [x9, #0x50]
0000000000037454	add	x0, x0, x9
0000000000037458	sub	x1, x1, x9
000000000003745c	orr	w8, w8, #0x2
0000000000037460	strb	w8, [x24, #0x1]
0000000000037464	cbz	x1, 0x373d4
0000000000037468	bl	__mi_os_reset
000000000003746c	b	0x373d4
0000000000037470	stp	xzr, xzr, [x20, #0x20]
0000000000037474	mov	w0, #0xb
0000000000037478	bl	_mi_option_get
000000000003747c	ldrb	w8, [x19, #0x8]
0000000000037480	cbz	w8, 0x376f4
0000000000037484	ldr	w8, [x19, #0x70]
0000000000037488	cbz	w8, 0x3749c
000000000003748c	cmp	w8, #0x1
0000000000037490	b.ne	0x374f0
0000000000037494	add	x8, x20, #0x10
0000000000037498	b	0x374a4
000000000003749c	mov	x8, x20
00000000000374a0	cbz	x20, 0x374f0
00000000000374a4	mov	x9, x19
00000000000374a8	ldp	x10, x11, [x9, #0x18]!
00000000000374ac	cbz	x10, 0x374b8
00000000000374b0	cbnz	x11, 0x374bc
00000000000374b4	b	0x374c8
00000000000374b8	cbz	x11, 0x379d4
00000000000374bc	str	x10, [x11, #0x18]
00000000000374c0	ldr	x10, [x9]
00000000000374c4	cbz	x10, 0x374cc
00000000000374c8	str	x11, [x10, #0x20]
00000000000374cc	ldr	x11, [x8]
00000000000374d0	cmp	x11, x19
00000000000374d4	b.eq	0x37828
00000000000374d8	ldr	x10, [x8, #0x8]
00000000000374dc	cmp	x10, x19
00000000000374e0	b.ne	0x374ec
00000000000374e4	ldr	x10, [x19, #0x20]
00000000000374e8	str	x10, [x8, #0x8]
00000000000374ec	stp	xzr, xzr, [x9]
00000000000374f0	ldr	x8, [x20, #0x70]
00000000000374f4	add	x9, x8, #0xc0
00000000000374f8	adr	x10, #0x4fb48
00000000000374fc	nop
0000000000037500	cmp	x9, x10
0000000000037504	b.lo	0x37588
0000000000037508	adr	x11, #0x4fd78
000000000003750c	nop
0000000000037510	cmp	x9, x11
0000000000037514	b.hs	0x37588
0000000000037518	add	x13, x8, #0xd8
000000000003751c	ldxr	x11, [x13]
0000000000037520	add	x12, x11, #0x1
0000000000037524	stxr	w14, x12, [x13]
0000000000037528	cbnz	w14, 0x3751c
000000000003752c	add	x13, x8, #0xd0
0000000000037530	ldr	x14, [x8, #0xd0]
0000000000037534	b	0x37548
0000000000037538	clrex
000000000003753c	mov	w15, #0x0
0000000000037540	mov	x14, x8
0000000000037544	cbnz	w15, 0x37570
0000000000037548	cmp	x14, x11
000000000003754c	b.gt	0x37570
0000000000037550	ldxr	x8, [x13]
0000000000037554	cmp	x8, x14
0000000000037558	b.ne	0x37538
000000000003755c	stlxr	w14, x12, [x13]
0000000000037560	cbnz	w14, 0x3753c
0000000000037564	mov	w15, #0x1
0000000000037568	mov	x14, x8
000000000003756c	cbz	w15, 0x37548
0000000000037570	ldxr	x8, [x9]
0000000000037574	add	x8, x8, #0x1
0000000000037578	stxr	w11, x8, [x9]
000000000003757c	cbnz	w11, 0x37570
0000000000037580	ldr	x8, [x20, #0x70]
0000000000037584	b	0x375ac
0000000000037588	ldp	x13, x12, [x8, #0xd0]
000000000003758c	add	x11, x12, #0x1
0000000000037590	str	x11, [x8, #0xd8]
0000000000037594	cmp	x12, x13
0000000000037598	b.lt	0x375a0
000000000003759c	str	x11, [x8, #0xd0]
00000000000375a0	ldr	x11, [x9]
00000000000375a4	add	x11, x11, #0x1
00000000000375a8	str	x11, [x9]
00000000000375ac	ldr	x9, [x19, #0x48]
00000000000375b0	cmp	x8, x10
00000000000375b4	cset	w11, hs
00000000000375b8	add	x10, x10, #0x240
00000000000375bc	cmp	x8, x10
00000000000375c0	cset	w10, lo
00000000000375c4	and	w10, w11, w10
00000000000375c8	add	x12, x8, #0x18
00000000000375cc	cmp	x9, #0x0
00000000000375d0	b.le	0x37648
00000000000375d4	cbz	w10, 0x376b8
00000000000375d8	ldxr	x10, [x12]
00000000000375dc	sub	x10, x10, #0x1
00000000000375e0	stxr	w11, x10, [x12]
00000000000375e4	cbnz	w11, 0x375d8
00000000000375e8	add	x11, x8, #0x10
00000000000375ec	ldr	x13, [x8, #0x10]
00000000000375f0	b	0x37604
00000000000375f4	clrex
00000000000375f8	mov	w14, #0x0
00000000000375fc	mov	x13, x12
0000000000037600	cbnz	w14, 0x3762c
0000000000037604	cmp	x13, x10
0000000000037608	b.ge	0x3762c
000000000003760c	ldxr	x12, [x11]
0000000000037610	cmp	x12, x13
0000000000037614	b.ne	0x375f4
0000000000037618	stlxr	w13, x10, [x11]
000000000003761c	cbnz	w13, 0x375f8
0000000000037620	mov	w14, #0x1
0000000000037624	mov	x13, x12
0000000000037628	cbz	w14, 0x37604
000000000003762c	add	x8, x8, #0x8
0000000000037630	ldxr	x10, [x8]
0000000000037634	add	x10, x10, #0x1
0000000000037638	stxr	w11, x10, [x8]
000000000003763c	cbnz	w11, 0x37630
0000000000037640	mov	x10, #-0x1
0000000000037644	b	0x37864
0000000000037648	cbz	w10, 0x3783c
000000000003764c	ldxr	x10, [x12]
0000000000037650	add	x11, x10, #0x1
0000000000037654	stxr	w13, x11, [x12]
0000000000037658	cbnz	w13, 0x3764c
000000000003765c	add	x12, x8, #0x10
0000000000037660	ldr	x14, [x8, #0x10]
0000000000037664	b	0x37678
0000000000037668	clrex
000000000003766c	mov	w15, #0x0
0000000000037670	mov	x14, x13
0000000000037674	cbnz	w15, 0x376a0
0000000000037678	cmp	x14, x10
000000000003767c	b.gt	0x376a0
0000000000037680	ldxr	x13, [x12]
0000000000037684	cmp	x13, x14
0000000000037688	b.ne	0x37668
000000000003768c	stlxr	w14, x11, [x12]
0000000000037690	cbnz	w14, 0x3766c
0000000000037694	mov	w15, #0x1
0000000000037698	mov	x14, x13
000000000003769c	cbz	w15, 0x37678
00000000000376a0	mov	w10, #0x1
00000000000376a4	ldxr	x11, [x8]
00000000000376a8	add	x11, x11, #0x1
00000000000376ac	stxr	w12, x11, [x8]
00000000000376b0	cbnz	w12, 0x376a4
00000000000376b4	b	0x37864
00000000000376b8	ldp	x11, x10, [x8, #0x10]
00000000000376bc	sub	x10, x10, #0x1
00000000000376c0	str	x10, [x8, #0x18]
00000000000376c4	cmp	x10, x11
00000000000376c8	b.le	0x376d0
00000000000376cc	str	x10, [x8, #0x10]
00000000000376d0	add	x8, x8, #0x8
00000000000376d4	mov	x10, #-0x1
00000000000376d8	b	0x37858
00000000000376dc	str	x24, [x20, #0x28]
00000000000376e0	str	xzr, [x24, #0x30]
00000000000376e4	mov	w0, #0xb
00000000000376e8	bl	_mi_option_get
00000000000376ec	ldrb	w8, [x19, #0x8]
00000000000376f0	cbnz	w8, 0x37484
00000000000376f4	ldr	x8, [x19, #0x40]
00000000000376f8	cbz	x8, 0x37484
00000000000376fc	cbz	x0, 0x37930
0000000000037700	mov	x21, #0x0
0000000000037704	add	x22, x19, #0x78
0000000000037708	mov	w23, #0x1
000000000003770c	b	0x37724
0000000000037710	ldr	x8, [x19, #0x40]
0000000000037714	add	x21, x21, #0x1
0000000000037718	add	x22, x22, #0x40
000000000003771c	cmp	x21, x8
0000000000037720	b.hs	0x37484
0000000000037724	ldrb	w9, [x22, #0x1]
0000000000037728	and	w9, w9, #0x7
000000000003772c	cmp	w9, #0x4
0000000000037730	b.ne	0x37714
0000000000037734	ldp	x8, x9, [x22, #0x30]
0000000000037738	cbz	x8, 0x37744
000000000003773c	cbnz	x9, 0x37748
0000000000037740	b	0x37754
0000000000037744	cbz	x9, 0x377d8
0000000000037748	str	x8, [x9, #0x30]
000000000003774c	ldr	x8, [x22, #0x30]
0000000000037750	cbz	x8, 0x37758
0000000000037754	str	x9, [x8, #0x38]
0000000000037758	ldr	x9, [x20, #0x28]
000000000003775c	cmp	x22, x9
0000000000037760	b.eq	0x377bc
0000000000037764	ldr	x9, [x20, #0x20]
0000000000037768	cmp	x22, x9
000000000003776c	b.eq	0x377d0
0000000000037770	str	wzr, [x22, #0x10]
0000000000037774	stp	xzr, xzr, [x22, #0x30]
0000000000037778	mov	w0, #0xa
000000000003777c	bl	_mi_option_get
0000000000037780	cbz	x0, 0x37710
0000000000037784	ldrb	w8, [x19, #0x8]
0000000000037788	cbnz	w8, 0x37710
000000000003778c	ldrb	w8, [x22, #0x1]
0000000000037790	and	w9, w8, #0x7
0000000000037794	cmp	w9, #0x4
0000000000037798	b.ne	0x37710
000000000003779c	ldr	w9, [x19, #0x70]
00000000000377a0	cmp	w9, #0x3
00000000000377a4	b.ne	0x377f4
00000000000377a8	ldr	x1, [x19, #0x48]
00000000000377ac	ldrb	w9, [x22]
00000000000377b0	madd	x0, x1, x9, x19
00000000000377b4	cbnz	x9, 0x37814
00000000000377b8	b	0x37808
00000000000377bc	ldr	x9, [x22, #0x38]
00000000000377c0	str	x9, [x20, #0x28]
00000000000377c4	ldr	x9, [x20, #0x20]
00000000000377c8	cmp	x22, x9
00000000000377cc	b.ne	0x37770
00000000000377d0	str	x8, [x20, #0x20]
00000000000377d4	b	0x37770
00000000000377d8	ldr	x9, [x20, #0x20]
00000000000377dc	cmp	x22, x9
00000000000377e0	b.eq	0x37758
00000000000377e4	ldr	x9, [x20, #0x28]
00000000000377e8	cmp	x22, x9
00000000000377ec	b.ne	0x37778
00000000000377f0	b	0x37758
00000000000377f4	ldr	x9, [x19, #0x60]
00000000000377f8	lsl	x1, x23, x9
00000000000377fc	ldrb	w9, [x22]
0000000000037800	madd	x0, x1, x9, x19
0000000000037804	cbnz	x9, 0x37814
0000000000037808	ldr	x9, [x19, #0x50]
000000000003780c	add	x0, x0, x9
0000000000037810	sub	x1, x1, x9
0000000000037814	orr	w8, w8, #0x2
0000000000037818	strb	w8, [x22, #0x1]
000000000003781c	cbz	x1, 0x37710
0000000000037820	bl	__mi_os_reset
0000000000037824	b	0x37710
0000000000037828	str	x10, [x8]
000000000003782c	ldr	x10, [x8, #0x8]
0000000000037830	cmp	x10, x19
0000000000037834	b.ne	0x374ec
0000000000037838	b	0x374e4
000000000003783c	ldp	x12, x11, [x8, #0x10]
0000000000037840	add	x10, x11, #0x1
0000000000037844	str	x10, [x8, #0x18]
0000000000037848	cmp	x11, x12
000000000003784c	b.lt	0x37854
0000000000037850	str	x10, [x8, #0x10]
0000000000037854	mov	w10, #0x1
0000000000037858	ldr	x11, [x8]
000000000003785c	add	x11, x11, #0x1
0000000000037860	str	x11, [x8]
0000000000037864	ldp	x8, x11, [x20, #0x38]
0000000000037868	add	x8, x8, x10
000000000003786c	str	x8, [x20, #0x38]
0000000000037870	cmp	x8, x11
0000000000037874	b.ls	0x3787c
0000000000037878	str	x8, [x20, #0x40]
000000000003787c	ldp	x8, x10, [x20, #0x48]
0000000000037880	sub	x8, x8, x9
0000000000037884	str	x8, [x20, #0x48]
0000000000037888	cmp	x8, x10
000000000003788c	b.ls	0x37894
0000000000037890	str	x8, [x20, #0x50]
0000000000037894	add	x8, x19, #0x68
0000000000037898	stlr	xzr, [x8]
000000000003789c	str	xzr, [x19, #0x30]
00000000000378a0	add	x8, x19, #0x10
00000000000378a4	stlr	xzr, [x8]
00000000000378a8	nop
00000000000378ac	ldr	x11, #0x4f314
00000000000378b0	adr	x9, #0x4f310
00000000000378b4	nop
00000000000378b8	b	0x378cc
00000000000378bc	clrex
00000000000378c0	mov	w12, #0x0
00000000000378c4	mov	x11, x10
00000000000378c8	cbnz	w12, 0x37900
00000000000378cc	and	x10, x11, #0xffffffffffc00000
00000000000378d0	stlr	x10, [x8]
00000000000378d4	ldxr	x10, [x9]
00000000000378d8	cmp	x10, x11
00000000000378dc	b.ne	0x378bc
00000000000378e0	add	w11, w11, #0x1
00000000000378e4	and	x11, x11, #0x3fffff
00000000000378e8	orr	x11, x11, x19
00000000000378ec	stlxr	w12, x11, [x9]
00000000000378f0	cbnz	w12, 0x378c0
00000000000378f4	mov	w12, #0x1
00000000000378f8	mov	x11, x10
00000000000378fc	cbz	w12, 0x378cc
0000000000037900	adr	x8, #0x4f300
0000000000037904	nop
0000000000037908	ldxr	x9, [x8]
000000000003790c	add	x9, x9, #0x1
0000000000037910	stxr	w10, x9, [x8]
0000000000037914	cbnz	w10, 0x37908
0000000000037918	ldp	x29, x30, [sp, #0x40]
000000000003791c	ldp	x20, x19, [sp, #0x30]
0000000000037920	ldp	x22, x21, [sp, #0x20]
0000000000037924	ldp	x24, x23, [sp, #0x10]
0000000000037928	add	sp, sp, #0x50
000000000003792c	ret
0000000000037930	add	x9, x19, #0x78
0000000000037934	b	0x3794c
0000000000037938	str	wzr, [x9, #0x10]
000000000003793c	stp	xzr, xzr, [x9, #0x30]
0000000000037940	add	x9, x9, #0x40
0000000000037944	subs	x8, x8, #0x1
0000000000037948	b.eq	0x37484
000000000003794c	ldrb	w10, [x9, #0x1]
0000000000037950	and	w10, w10, #0x7
0000000000037954	cmp	w10, #0x4
0000000000037958	b.ne	0x37940
000000000003795c	ldp	x10, x11, [x9, #0x30]
0000000000037960	cbz	x10, 0x3796c
0000000000037964	cbnz	x11, 0x37970
0000000000037968	b	0x3797c
000000000003796c	cbz	x11, 0x379b8
0000000000037970	str	x10, [x11, #0x30]
0000000000037974	ldr	x10, [x9, #0x30]
0000000000037978	cbz	x10, 0x37980
000000000003797c	str	x11, [x10, #0x38]
0000000000037980	ldr	x11, [x20, #0x28]
0000000000037984	cmp	x9, x11
0000000000037988	b.eq	0x3799c
000000000003798c	ldr	x11, [x20, #0x20]
0000000000037990	cmp	x9, x11
0000000000037994	b.ne	0x37938
0000000000037998	b	0x379b0
000000000003799c	ldr	x11, [x9, #0x38]
00000000000379a0	str	x11, [x20, #0x28]
00000000000379a4	ldr	x11, [x20, #0x20]
00000000000379a8	cmp	x9, x11
00000000000379ac	b.ne	0x37938
00000000000379b0	str	x10, [x20, #0x20]
00000000000379b4	b	0x37938
00000000000379b8	ldr	x11, [x20, #0x20]
00000000000379bc	cmp	x9, x11
00000000000379c0	b.eq	0x37980
00000000000379c4	ldr	x11, [x20, #0x28]
00000000000379c8	cmp	x9, x11
00000000000379cc	b.ne	0x37940
00000000000379d0	b	0x37980
00000000000379d4	ldr	x11, [x8]
00000000000379d8	cmp	x11, x19
00000000000379dc	b.ne	0x374f0
00000000000379e0	b	0x374cc
__mi_free_delayed_block:
00000000000379e4	stp	x22, x21, [sp, #-0x30]!
00000000000379e8	stp	x20, x19, [sp, #0x10]
00000000000379ec	stp	x29, x30, [sp, #0x20]
00000000000379f0	add	x29, sp, #0x20
00000000000379f4	mov	x20, x0
00000000000379f8	and	x21, x0, #0xffffffffffc00000
00000000000379fc	and	x8, x0, #0x3fffff
0000000000037a00	ldr	x9, [x21, #0x60]
0000000000037a04	lsr	x22, x8, x9
0000000000037a08	add	x8, x21, x22, lsl #6
0000000000037a0c	add	x19, x8, #0x78
0000000000037a10	add	x8, x8, #0x98
0000000000037a14	ldar	x9, [x8]
0000000000037a18	and	w10, w9, #0x3
0000000000037a1c	cmp	w10, #0x0
0000000000037a20	ccmp	w10, #0x3, #0x4, ne
0000000000037a24	b.eq	0x37a5c
0000000000037a28	cmp	w10, #0x1
0000000000037a2c	b.eq	0x37a54
0000000000037a30	ldxr	x10, [x8]
0000000000037a34	cmp	x10, x9
0000000000037a38	b.ne	0x37a4c
0000000000037a3c	and	x9, x9, #0xfffffffffffffffc
0000000000037a40	stlxr	w10, x9, [x8]
0000000000037a44	cbnz	w10, 0x37a14
0000000000037a48	b	0x37a5c
0000000000037a4c	clrex
0000000000037a50	b	0x37a14
0000000000037a54	wfe
0000000000037a58	b	0x37a14
0000000000037a5c	mov	x0, x19
0000000000037a60	mov	w1, #0x0
0000000000037a64	bl	__mi_page_free_collect
0000000000037a68	add	x8, x21, x22, lsl #6
0000000000037a6c	ldr	x9, [x8, #0x90]
0000000000037a70	str	x9, [x20]
0000000000037a74	str	x20, [x8, #0x90]
0000000000037a78	ldr	w9, [x8, #0x88]
0000000000037a7c	subs	w9, w9, #0x1
0000000000037a80	str	w9, [x8, #0x88]
0000000000037a84	b.eq	0x37aa0
0000000000037a88	ldrb	w8, [x8, #0x7e]
0000000000037a8c	tbnz	w8, #0x0, 0x37ab4
0000000000037a90	ldp	x29, x30, [sp, #0x20]
0000000000037a94	ldp	x20, x19, [sp, #0x10]
0000000000037a98	ldp	x22, x21, [sp], #0x30
0000000000037a9c	ret
0000000000037aa0	mov	x0, x19
0000000000037aa4	ldp	x29, x30, [sp, #0x20]
0000000000037aa8	ldp	x20, x19, [sp, #0x10]
0000000000037aac	ldp	x22, x21, [sp], #0x30
0000000000037ab0	b	__mi_page_retire
0000000000037ab4	mov	x0, x19
0000000000037ab8	ldp	x29, x30, [sp, #0x20]
0000000000037abc	ldp	x20, x19, [sp, #0x10]
0000000000037ac0	ldp	x22, x21, [sp], #0x30
0000000000037ac4	b	__mi_page_unfull
__mi_page_retire:
0000000000037ac8	ldrb	w9, [x0, #0x6]
0000000000037acc	and	w8, w9, #0xfffffffd
0000000000037ad0	strb	w8, [x0, #0x6]
0000000000037ad4	ldr	w8, [x0, #0x14]
0000000000037ad8	tbnz	w9, #0x0, 0x37aec
0000000000037adc	cmp	w8, #0x9
0000000000037ae0	b.hs	0x37af4
0000000000037ae4	mov	w10, #0x1
0000000000037ae8	b	0x37b48
0000000000037aec	mov	w10, #0x4a
0000000000037af0	b	0x37b4c
0000000000037af4	add	x10, x8, #0x7
0000000000037af8	lsr	x10, x10, #3
0000000000037afc	cmp	w8, #0x40
0000000000037b00	b.hi	0x37b10
0000000000037b04	add	w10, w10, #0x1
0000000000037b08	and	x10, x10, #0xfe
0000000000037b0c	b	0x37b48
0000000000037b10	cmp	w8, #0x200, lsl #12
0000000000037b14	b.ls	0x37b20
0000000000037b18	mov	w10, #0x49
0000000000037b1c	b	0x37b48
0000000000037b20	sub	x10, x10, #0x1
0000000000037b24	clz	x11, x10
0000000000037b28	mov	w12, #0x3f
0000000000037b2c	sub	w11, w12, w11
0000000000037b30	and	w11, w11, #0xff
0000000000037b34	sub	w12, w11, #0x2
0000000000037b38	lsr	x10, x10, x12
0000000000037b3c	and	w10, w10, #0x3
0000000000037b40	bfi	w10, w11, #2, #8
0000000000037b44	add	w10, w10, #0xfd
0000000000037b48	and	x10, x10, #0xff
0000000000037b4c	ldr	x11, [x0, #0x28]
0000000000037b50	mov	w12, #0x18
0000000000037b54	madd	x12, x10, x12, x11
0000000000037b58	add	x1, x12, #0x410
0000000000037b5c	tbnz	w9, #0x0, 0x37b88
0000000000037b60	cmp	w8, #0x200, lsl #12
0000000000037b64	b.hi	0x37b88
0000000000037b68	mov	w9, #0x18
0000000000037b6c	madd	x9, x10, x9, x11
0000000000037b70	ldr	x9, [x9, #0x418]
0000000000037b74	cmp	x9, x0
0000000000037b78	b.ne	0x37b88
0000000000037b7c	ldr	x9, [x1]
0000000000037b80	cmp	x9, x0
0000000000037b84	b.eq	0x37b90
0000000000037b88	mov	w2, #0x0
0000000000037b8c	b	__mi_page_free
0000000000037b90	cmp	w8, #0x4, lsl #12
0000000000037b94	mov	w8, #0x4
0000000000037b98	mov	w9, #0x10
0000000000037b9c	csel	w8, w9, w8, ls
0000000000037ba0	ldrb	w9, [x0, #0x7]
0000000000037ba4	bfxil	w8, w9, #0, #1
0000000000037ba8	strb	w8, [x0, #0x7]
0000000000037bac	ldr	x8, [x0, #0x28]
0000000000037bb0	sub	x9, x1, x8
0000000000037bb4	sub	x9, x9, #0x410
0000000000037bb8	asr	x9, x9, #3
0000000000037bbc	mov	x10, #-0x5555555555555556
0000000000037bc0	movk	x10, #0xaaab
0000000000037bc4	mul	x9, x9, x10
0000000000037bc8	ldr	x10, [x8, #0xbd0]
0000000000037bcc	cmp	x9, x10
0000000000037bd0	b.lo	0x37be4
0000000000037bd4	ldr	x10, [x8, #0xbd8]
0000000000037bd8	cmp	x9, x10
0000000000037bdc	b.hi	0x37bf4
0000000000037be0	ret
0000000000037be4	str	x9, [x8, #0xbd0]
0000000000037be8	ldr	x10, [x8, #0xbd8]
0000000000037bec	cmp	x9, x10
0000000000037bf0	b.ls	0x37be0
0000000000037bf4	str	x9, [x8, #0xbd8]
0000000000037bf8	ret
__mi_page_unfull:
0000000000037bfc	ldrb	w8, [x0, #0x6]
0000000000037c00	tbz	w8, #0x0, 0x38060
0000000000037c04	ldr	x10, [x0, #0x28]
0000000000037c08	and	w9, w8, #0xfe
0000000000037c0c	strb	w9, [x0, #0x6]
0000000000037c10	ldr	w9, [x0, #0x14]
0000000000037c14	cmp	w9, #0x9
0000000000037c18	b.hs	0x37c38
0000000000037c1c	mov	w11, #0x1
0000000000037c20	orr	w8, w8, #0x1
0000000000037c24	strb	w8, [x0, #0x6]
0000000000037c28	ldr	x9, [x0, #0x28]
0000000000037c2c	ldr	x8, [x0, #0x38]
0000000000037c30	cbnz	x8, 0x37cc8
0000000000037c34	b	0x37cd0
0000000000037c38	add	x11, x9, #0x7
0000000000037c3c	lsr	x11, x11, #3
0000000000037c40	cmp	w9, #0x40
0000000000037c44	b.hi	0x37c68
0000000000037c48	add	w9, w11, #0x1
0000000000037c4c	and	x11, x9, #0xfe
0000000000037c50	orr	w8, w8, #0x1
0000000000037c54	strb	w8, [x0, #0x6]
0000000000037c58	ldr	x9, [x0, #0x28]
0000000000037c5c	ldr	x8, [x0, #0x38]
0000000000037c60	cbnz	x8, 0x37cc8
0000000000037c64	b	0x37cd0
0000000000037c68	cmp	w9, #0x200, lsl #12
0000000000037c6c	b.ls	0x37c8c
0000000000037c70	mov	w11, #0x49
0000000000037c74	orr	w8, w8, #0x1
0000000000037c78	strb	w8, [x0, #0x6]
0000000000037c7c	ldr	x9, [x0, #0x28]
0000000000037c80	ldr	x8, [x0, #0x38]
0000000000037c84	cbnz	x8, 0x37cc8
0000000000037c88	b	0x37cd0
0000000000037c8c	sub	x9, x11, #0x1
0000000000037c90	clz	x11, x9
0000000000037c94	mov	w12, #0x3f
0000000000037c98	sub	w11, w12, w11
0000000000037c9c	and	w11, w11, #0xff
0000000000037ca0	sub	w12, w11, #0x2
0000000000037ca4	lsr	x9, x9, x12
0000000000037ca8	and	w9, w9, #0x3
0000000000037cac	bfi	w9, w11, #2, #8
0000000000037cb0	add	w11, w9, #0xfd
0000000000037cb4	orr	w8, w8, #0x1
0000000000037cb8	strb	w8, [x0, #0x6]
0000000000037cbc	ldr	x9, [x0, #0x28]
0000000000037cc0	ldr	x8, [x0, #0x38]
0000000000037cc4	cbz	x8, 0x37cd0
0000000000037cc8	ldr	x12, [x0, #0x30]
0000000000037ccc	str	x12, [x8, #0x30]
0000000000037cd0	ldr	x12, [x0, #0x30]
0000000000037cd4	cbz	x12, 0x37cdc
0000000000037cd8	str	x8, [x12, #0x38]
0000000000037cdc	ldr	x8, [x10, #0xb08]
0000000000037ce0	cmp	x8, x0
0000000000037ce4	b.eq	0x37d04
0000000000037ce8	and	x11, x11, #0xff
0000000000037cec	mov	w8, #0x7
0000000000037cf0	movk	w8, #0x20, lsl #16
0000000000037cf4	ldr	x13, [x10, #0xb00]
0000000000037cf8	cmp	x13, x0
0000000000037cfc	b.ne	0x37e94
0000000000037d00	b	0x37d24
0000000000037d04	ldr	x8, [x0, #0x38]
0000000000037d08	str	x8, [x10, #0xb08]
0000000000037d0c	and	x11, x11, #0xff
0000000000037d10	mov	w8, #0x7
0000000000037d14	movk	w8, #0x20, lsl #16
0000000000037d18	ldr	x13, [x10, #0xb00]
0000000000037d1c	cmp	x13, x0
0000000000037d20	b.ne	0x37e94
0000000000037d24	str	x12, [x10, #0xb00]
0000000000037d28	ldr	x15, [x10, #0xb10]
0000000000037d2c	cmp	x15, #0x400
0000000000037d30	b.hi	0x37e94
0000000000037d34	adr	x13, #0x1b2cc
0000000000037d38	nop
0000000000037d3c	cmp	x12, #0x0
0000000000037d40	csel	x12, x13, x12, eq
0000000000037d44	add	x13, x15, #0x7
0000000000037d48	lsr	x13, x13, #3
0000000000037d4c	add	x14, x9, x13, lsl #3
0000000000037d50	ldr	x14, [x14, #0x8]
0000000000037d54	cmp	x14, x12
0000000000037d58	b.eq	0x37e94
0000000000037d5c	cmp	x15, #0x9
0000000000037d60	b.hs	0x37d6c
0000000000037d64	mov	x14, #0x0
0000000000037d68	b	0x37e38
0000000000037d6c	sub	x16, x13, #0x1
0000000000037d70	clz	x17, x16
0000000000037d74	mov	w14, #0x3f
0000000000037d78	sub	w17, w14, w17
0000000000037d7c	and	w17, w17, #0xff
0000000000037d80	sub	w1, w17, #0x2
0000000000037d84	lsr	x16, x16, x1
0000000000037d88	and	w16, w16, #0x3
0000000000037d8c	bfi	w16, w17, #2, #8
0000000000037d90	sub	w16, w16, #0x3
0000000000037d94	add	w17, w13, #0x1
0000000000037d98	and	w17, w17, #0xfffffffe
0000000000037d9c	cmp	x15, #0x40
0000000000037da0	csel	w17, w16, w17, hi
0000000000037da4	add	x15, x9, #0x410
0000000000037da8	add	x16, x10, #0xae8
0000000000037dac	and	w17, w17, #0xff
0000000000037db0	ldr	x1, [x16, #0x10]
0000000000037db4	add	x2, x1, #0x7
0000000000037db8	lsr	x1, x2, #3
0000000000037dbc	cmp	x2, #0x10
0000000000037dc0	b.hs	0x37dcc
0000000000037dc4	mov	w2, #0x1
0000000000037dc8	b	0x37e14
0000000000037dcc	cmp	x2, #0x47
0000000000037dd0	b.hi	0x37de0
0000000000037dd4	add	w2, w1, #0x1
0000000000037dd8	and	w2, w2, #0xfffffffe
0000000000037ddc	b	0x37e14
0000000000037de0	cmp	x2, x8
0000000000037de4	b.ls	0x37df0
0000000000037de8	mov	w2, #0x49
0000000000037dec	b	0x37e14
0000000000037df0	sub	x2, x1, #0x1
0000000000037df4	clz	x3, x2
0000000000037df8	sub	w3, w14, w3
0000000000037dfc	and	w3, w3, #0xff
0000000000037e00	sub	w4, w3, #0x2
0000000000037e04	lsr	x2, x2, x4
0000000000037e08	and	w2, w2, #0x3
0000000000037e0c	bfi	w2, w3, #2, #8
0000000000037e10	sub	w2, w2, #0x3
0000000000037e14	cmp	x16, x15
0000000000037e18	b.ls	0x37e28
0000000000037e1c	sub	x16, x16, #0x18
0000000000037e20	cmp	w17, w2, uxtb
0000000000037e24	b.eq	0x37db0
0000000000037e28	cmp	x1, x13
0000000000037e2c	csinc	x14, x13, x1, hs
0000000000037e30	cmp	x14, x13
0000000000037e34	b.hi	0x37e94
0000000000037e38	sub	x15, x13, x14
0000000000037e3c	add	x15, x15, #0x1
0000000000037e40	cmp	x15, #0x4
0000000000037e44	b.lo	0x37e78
0000000000037e48	and	x16, x15, #0xfffffffffffffffc
0000000000037e4c	dup.2d	v0, x12
0000000000037e50	add	x17, x9, x14, lsl #3
0000000000037e54	add	x17, x17, #0x18
0000000000037e58	mov	x1, x16
0000000000037e5c	stp	q0, q0, [x17, #-0x10]
0000000000037e60	add	x17, x17, #0x20
0000000000037e64	subs	x1, x1, #0x4
0000000000037e68	b.ne	0x37e5c
0000000000037e6c	cmp	x15, x16
0000000000037e70	b.eq	0x37e94
0000000000037e74	add	x14, x14, x16
0000000000037e78	sub	x13, x13, x14
0000000000037e7c	add	x13, x13, #0x1
0000000000037e80	add	x14, x9, x14, lsl #3
0000000000037e84	add	x14, x14, #0x8
0000000000037e88	str	x12, [x14], #0x8
0000000000037e8c	subs	x13, x13, #0x1
0000000000037e90	b.ne	0x37e88
0000000000037e94	mov	w12, #0x18
0000000000037e98	madd	x12, x11, x12, x10
0000000000037e9c	ldr	x13, [x12, #0x418]
0000000000037ea0	add	x12, x12, #0x418
0000000000037ea4	stp	xzr, x13, [x0, #0x30]
0000000000037ea8	cbz	x13, 0x37ec4
0000000000037eac	str	x0, [x13, #0x30]
0000000000037eb0	str	x0, [x12]
0000000000037eb4	mov	w9, #0x18
0000000000037eb8	madd	x9, x11, x9, x10
0000000000037ebc	ldr	x12, [x9, #0x420]
0000000000037ec0	b	0x38044
0000000000037ec4	mov	w13, #0x18
0000000000037ec8	madd	x13, x11, x13, x10
0000000000037ecc	add	x13, x13, #0x410
0000000000037ed0	str	x0, [x13]
0000000000037ed4	str	x0, [x12]
0000000000037ed8	mov	w12, #0x18
0000000000037edc	madd	x12, x11, x12, x10
0000000000037ee0	ldr	x12, [x12, #0x420]
0000000000037ee4	cmp	x12, #0x400
0000000000037ee8	b.hi	0x38044
0000000000037eec	add	x13, x12, #0x7
0000000000037ef0	lsr	x13, x13, #3
0000000000037ef4	add	x14, x9, x13, lsl #3
0000000000037ef8	ldr	x14, [x14, #0x8]
0000000000037efc	cmp	x14, x0
0000000000037f00	b.eq	0x38044
0000000000037f04	cmp	x12, #0x9
0000000000037f08	b.hs	0x37f14
0000000000037f0c	mov	x10, #0x0
0000000000037f10	b	0x37fe8
0000000000037f14	sub	x15, x13, #0x1
0000000000037f18	clz	x16, x15
0000000000037f1c	mov	w14, #0x3f
0000000000037f20	sub	w16, w14, w16
0000000000037f24	and	w16, w16, #0xff
0000000000037f28	sub	w17, w16, #0x2
0000000000037f2c	lsr	x15, x15, x17
0000000000037f30	and	w15, w15, #0x3
0000000000037f34	bfi	w15, w16, #2, #8
0000000000037f38	sub	w15, w15, #0x3
0000000000037f3c	add	w16, w13, #0x1
0000000000037f40	and	w16, w16, #0xfffffffe
0000000000037f44	cmp	x12, #0x40
0000000000037f48	csel	w16, w15, w16, hi
0000000000037f4c	add	x15, x9, #0x410
0000000000037f50	mov	w17, #0x18
0000000000037f54	madd	x10, x11, x17, x10
0000000000037f58	add	x10, x10, #0x3f8
0000000000037f5c	and	w11, w16, #0xff
0000000000037f60	ldr	x16, [x10, #0x10]
0000000000037f64	add	x17, x16, #0x7
0000000000037f68	lsr	x16, x17, #3
0000000000037f6c	cmp	x17, #0x10
0000000000037f70	b.hs	0x37f7c
0000000000037f74	mov	w17, #0x1
0000000000037f78	b	0x37fc4
0000000000037f7c	cmp	x17, #0x47
0000000000037f80	b.hi	0x37f90
0000000000037f84	add	w17, w16, #0x1
0000000000037f88	and	w17, w17, #0xfffffffe
0000000000037f8c	b	0x37fc4
0000000000037f90	cmp	x17, x8
0000000000037f94	b.ls	0x37fa0
0000000000037f98	mov	w17, #0x49
0000000000037f9c	b	0x37fc4
0000000000037fa0	sub	x17, x16, #0x1
0000000000037fa4	clz	x1, x17
0000000000037fa8	sub	w1, w14, w1
0000000000037fac	and	w1, w1, #0xff
0000000000037fb0	sub	w2, w1, #0x2
0000000000037fb4	lsr	x17, x17, x2
0000000000037fb8	and	w17, w17, #0x3
0000000000037fbc	bfi	w17, w1, #2, #8
0000000000037fc0	sub	w17, w17, #0x3
0000000000037fc4	cmp	x10, x15
0000000000037fc8	b.ls	0x37fd8
0000000000037fcc	sub	x10, x10, #0x18
0000000000037fd0	cmp	w11, w17, uxtb
0000000000037fd4	b.eq	0x37f60
0000000000037fd8	cmp	x16, x13
0000000000037fdc	csinc	x10, x13, x16, hs
0000000000037fe0	cmp	x10, x13
0000000000037fe4	b.hi	0x38044
0000000000037fe8	sub	x11, x13, x10
0000000000037fec	add	x11, x11, #0x1
0000000000037ff0	cmp	x11, #0x4
0000000000037ff4	b.lo	0x38028
0000000000037ff8	and	x14, x11, #0xfffffffffffffffc
0000000000037ffc	dup.2d	v0, x0
0000000000038000	add	x15, x9, x10, lsl #3
0000000000038004	add	x15, x15, #0x18
0000000000038008	mov	x16, x14
000000000003800c	stp	q0, q0, [x15, #-0x10]
0000000000038010	add	x15, x15, #0x20
0000000000038014	subs	x16, x16, #0x4
0000000000038018	b.ne	0x3800c
000000000003801c	cmp	x11, x14
0000000000038020	b.eq	0x38044
0000000000038024	add	x10, x10, x14
0000000000038028	sub	x11, x13, x10
000000000003802c	add	x11, x11, #0x1
0000000000038030	add	x9, x9, x10, lsl #3
0000000000038034	add	x9, x9, #0x8
0000000000038038	str	x0, [x9], #0x8
000000000003803c	subs	x11, x11, #0x1
0000000000038040	b.ne	0x38038
0000000000038044	add	x8, x8, #0x9
0000000000038048	cmp	x12, x8
000000000003804c	cset	w8, eq
0000000000038050	ldrb	w9, [x0, #0x6]
0000000000038054	and	w9, w9, #0xfe
0000000000038058	orr	w8, w9, w8
000000000003805c	strb	w8, [x0, #0x6]
0000000000038060	ret
_mi_segment_reclaim:
0000000000038064	sub	sp, sp, #0x70
0000000000038068	stp	x28, x27, [sp, #0x10]
000000000003806c	stp	x26, x25, [sp, #0x20]
0000000000038070	stp	x24, x23, [sp, #0x30]
0000000000038074	stp	x22, x21, [sp, #0x40]
0000000000038078	stp	x20, x19, [sp, #0x50]
000000000003807c	stp	x29, x30, [sp, #0x60]
0000000000038080	add	x29, sp, #0x60
0000000000038084	mov	x20, x4
0000000000038088	mov	x23, x3
000000000003808c	mov	x21, x2
0000000000038090	mov	x22, x1
0000000000038094	mov	x19, x0
0000000000038098	cbz	x3, 0x380a0
000000000003809c	strb	wzr, [x23]
00000000000380a0	bl	0x51cb0 ; symbol stub for: _pthread_self
00000000000380a4	bl	0x51c68 ; symbol stub for: _pthread_mach_thread_np
00000000000380a8	mov	w8, w0
00000000000380ac	add	x9, x19, #0x68
00000000000380b0	stlr	x8, [x9]
00000000000380b4	str	xzr, [x19, #0x30]
00000000000380b8	ldr	x8, [x19, #0x48]
00000000000380bc	ldr	x9, [x20, #0x70]
00000000000380c0	adr	x11, #0x4ef80
00000000000380c4	nop
00000000000380c8	cmp	x9, x11
00000000000380cc	cset	w10, hs
00000000000380d0	add	x11, x11, #0x240
00000000000380d4	cmp	x9, x11
00000000000380d8	cset	w11, lo
00000000000380dc	and	w10, w10, w11
00000000000380e0	add	x12, x9, #0x18
00000000000380e4	tbnz	x8, #0x3f, 0x38158
00000000000380e8	cbz	w10, 0x381cc
00000000000380ec	ldxr	x10, [x12]
00000000000380f0	add	x11, x10, #0x1
00000000000380f4	stxr	w13, x11, [x12]
00000000000380f8	cbnz	w13, 0x380ec
00000000000380fc	add	x12, x9, #0x10
0000000000038100	ldr	x14, [x9, #0x10]
0000000000038104	b	0x38118
0000000000038108	clrex
000000000003810c	mov	w15, #0x0
0000000000038110	mov	x14, x13
0000000000038114	cbnz	w15, 0x38140
0000000000038118	cmp	x14, x10
000000000003811c	b.gt	0x38140
0000000000038120	ldxr	x13, [x12]
0000000000038124	cmp	x13, x14
0000000000038128	b.ne	0x38108
000000000003812c	stlxr	w14, x11, [x12]
0000000000038130	cbnz	w14, 0x3810c
0000000000038134	mov	w15, #0x1
0000000000038138	mov	x14, x13
000000000003813c	cbz	w15, 0x38118
0000000000038140	mov	w10, #0x1
0000000000038144	ldxr	x11, [x9]
0000000000038148	add	x11, x11, #0x1
000000000003814c	stxr	w12, x11, [x9]
0000000000038150	cbnz	w12, 0x38144
0000000000038154	b	0x38218
0000000000038158	cbz	w10, 0x381ec
000000000003815c	ldxr	x10, [x12]
0000000000038160	sub	x10, x10, #0x1
0000000000038164	stxr	w11, x10, [x12]
0000000000038168	cbnz	w11, 0x3815c
000000000003816c	add	x11, x9, #0x10
0000000000038170	ldr	x13, [x9, #0x10]
0000000000038174	b	0x38188
0000000000038178	clrex
000000000003817c	mov	w14, #0x0
0000000000038180	mov	x13, x12
0000000000038184	cbnz	w14, 0x381b0
0000000000038188	cmp	x13, x10
000000000003818c	b.ge	0x381b0
0000000000038190	ldxr	x12, [x11]
0000000000038194	cmp	x12, x13
0000000000038198	b.ne	0x38178
000000000003819c	stlxr	w13, x10, [x11]
00000000000381a0	cbnz	w13, 0x3817c
00000000000381a4	mov	w14, #0x1
00000000000381a8	mov	x13, x12
00000000000381ac	cbz	w14, 0x38188
00000000000381b0	add	x9, x9, #0x8
00000000000381b4	ldxr	x10, [x9]
00000000000381b8	add	x10, x10, #0x1
00000000000381bc	stxr	w11, x10, [x9]
00000000000381c0	cbnz	w11, 0x381b4
00000000000381c4	mov	x10, #-0x1
00000000000381c8	b	0x38218
00000000000381cc	ldp	x12, x11, [x9, #0x10]
00000000000381d0	add	x10, x11, #0x1
00000000000381d4	str	x10, [x9, #0x18]
00000000000381d8	cmp	x11, x12
00000000000381dc	b.lt	0x381e4
00000000000381e0	str	x10, [x9, #0x10]
00000000000381e4	mov	w10, #0x1
00000000000381e8	b	0x3820c
00000000000381ec	ldp	x11, x10, [x9, #0x10]
00000000000381f0	sub	x10, x10, #0x1
00000000000381f4	str	x10, [x9, #0x18]
00000000000381f8	cmp	x10, x11
00000000000381fc	b.le	0x38204
0000000000038200	str	x10, [x9, #0x10]
0000000000038204	add	x9, x9, #0x8
0000000000038208	mov	x10, #-0x1
000000000003820c	ldr	x11, [x9]
0000000000038210	add	x11, x11, #0x1
0000000000038214	str	x11, [x9]
0000000000038218	ldp	x9, x11, [x20, #0x38]
000000000003821c	add	x9, x9, x10
0000000000038220	str	x9, [x20, #0x38]
0000000000038224	cmp	x9, x11
0000000000038228	b.ls	0x38230
000000000003822c	str	x9, [x20, #0x40]
0000000000038230	ldp	x9, x10, [x20, #0x48]
0000000000038234	add	x8, x9, x8
0000000000038238	str	x8, [x20, #0x48]
000000000003823c	cmp	x8, x10
0000000000038240	b.ls	0x38248
0000000000038244	str	x8, [x20, #0x50]
0000000000038248	ldr	x8, [x20, #0x70]
000000000003824c	add	x9, x8, #0xc0
0000000000038250	adr	x10, #0x4edf0
0000000000038254	nop
0000000000038258	cmp	x9, x10
000000000003825c	adr	x26, #0x4f024
0000000000038260	nop
0000000000038264	ccmp	x9, x26, #0x2, hs
0000000000038268	b.lo	0x38294
000000000003826c	ldp	x10, x9, [x8, #0xd0]
0000000000038270	sub	x9, x9, #0x1
0000000000038274	str	x9, [x8, #0xd8]
0000000000038278	cmp	x9, x10
000000000003827c	b.le	0x38284
0000000000038280	str	x9, [x8, #0xd0]
0000000000038284	ldr	x9, [x8, #0xc8]
0000000000038288	add	x9, x9, #0x1
000000000003828c	str	x9, [x8, #0xc8]
0000000000038290	b	0x38300
0000000000038294	add	x10, x8, #0xd8
0000000000038298	ldxr	x9, [x10]
000000000003829c	sub	x9, x9, #0x1
00000000000382a0	stxr	w11, x9, [x10]
00000000000382a4	cbnz	w11, 0x38298
00000000000382a8	add	x10, x8, #0xd0
00000000000382ac	ldr	x12, [x8, #0xd0]
00000000000382b0	b	0x382c4
00000000000382b4	clrex
00000000000382b8	mov	w13, #0x0
00000000000382bc	mov	x12, x11
00000000000382c0	cbnz	w13, 0x382ec
00000000000382c4	cmp	x12, x9
00000000000382c8	b.ge	0x382ec
00000000000382cc	ldxr	x11, [x10]
00000000000382d0	cmp	x11, x12
00000000000382d4	b.ne	0x382b4
00000000000382d8	stlxr	w12, x9, [x10]
00000000000382dc	cbnz	w12, 0x382b8
00000000000382e0	mov	w13, #0x1
00000000000382e4	mov	x12, x11
00000000000382e8	cbz	w13, 0x382c4
00000000000382ec	add	x8, x8, #0xc8
00000000000382f0	ldxr	x9, [x8]
00000000000382f4	add	x9, x9, #0x1
00000000000382f8	stxr	w10, x9, [x8]
00000000000382fc	cbnz	w10, 0x382f0
0000000000038300	ldr	x8, [x19, #0x40]
0000000000038304	cbz	x8, 0x3864c
0000000000038308	cbz	x23, 0x384b8
000000000003830c	str	x23, [sp, #0x8]
0000000000038310	mov	x27, #0x0
0000000000038314	b	0x38338
0000000000038318	mov	x0, x19
000000000003831c	mov	x1, x24
0000000000038320	mov	x2, x20
0000000000038324	bl	_mi_segment_page_clear
0000000000038328	add	x27, x27, #0x1
000000000003832c	ldr	x8, [x19, #0x40]
0000000000038330	cmp	x27, x8
0000000000038334	b.hs	0x3864c
0000000000038338	add	x8, x19, x27, lsl #6
000000000003833c	ldrb	w9, [x8, #0x79]
0000000000038340	tbz	w9, #0x0, 0x38328
0000000000038344	ldr	x9, [x19, #0x28]
0000000000038348	sub	x9, x9, #0x1
000000000003834c	str	x9, [x19, #0x28]
0000000000038350	ldr	x9, [x20, #0x70]
0000000000038354	add	x10, x9, #0xe0
0000000000038358	adr	x11, #0x4ece8
000000000003835c	nop
0000000000038360	cmp	x10, x11
0000000000038364	ccmp	x10, x26, #0x2, hs
0000000000038368	b.lo	0x38394
000000000003836c	ldp	x11, x10, [x9, #0xf0]
0000000000038370	sub	x10, x10, #0x1
0000000000038374	str	x10, [x9, #0xf8]
0000000000038378	cmp	x10, x11
000000000003837c	b.le	0x38384
0000000000038380	str	x10, [x9, #0xf0]
0000000000038384	ldr	x10, [x9, #0xe8]
0000000000038388	add	x10, x10, #0x1
000000000003838c	str	x10, [x9, #0xe8]
0000000000038390	b	0x38400
0000000000038394	add	x11, x9, #0xf8
0000000000038398	ldxr	x10, [x11]
000000000003839c	sub	x10, x10, #0x1
00000000000383a0	stxr	w12, x10, [x11]
00000000000383a4	cbnz	w12, 0x38398
00000000000383a8	add	x11, x9, #0xf0
00000000000383ac	ldr	x13, [x9, #0xf0]
00000000000383b0	b	0x383c4
00000000000383b4	clrex
00000000000383b8	mov	w14, #0x0
00000000000383bc	mov	x13, x12
00000000000383c0	cbnz	w14, 0x383ec
00000000000383c4	cmp	x13, x10
00000000000383c8	b.ge	0x383ec
00000000000383cc	ldxr	x12, [x11]
00000000000383d0	cmp	x12, x13
00000000000383d4	b.ne	0x383b4
00000000000383d8	stlxr	w13, x10, [x11]
00000000000383dc	cbnz	w13, 0x383b8
00000000000383e0	mov	w14, #0x1
00000000000383e4	mov	x13, x12
00000000000383e8	cbz	w14, 0x383c4
00000000000383ec	add	x9, x9, #0xe8
00000000000383f0	ldxr	x10, [x9]
00000000000383f4	add	x10, x10, #0x1
00000000000383f8	stxr	w11, x10, [x9]
00000000000383fc	cbnz	w11, 0x383f0
0000000000038400	add	x24, x8, #0x78
0000000000038404	add	x8, x19, x27, lsl #6
0000000000038408	add	x9, x8, #0xa0
000000000003840c	stlr	x22, [x9]
0000000000038410	add	x28, x8, #0x98
0000000000038414	ldar	x8, [x28]
0000000000038418	ands	w9, w8, #0x3
000000000003841c	b.eq	0x38454
0000000000038420	cmp	w9, #0x1
0000000000038424	b.eq	0x3844c
0000000000038428	ldxr	x9, [x28]
000000000003842c	cmp	x9, x8
0000000000038430	b.ne	0x38444
0000000000038434	and	x8, x8, #0xfffffffffffffffc
0000000000038438	stlxr	w9, x8, [x28]
000000000003843c	cbnz	w9, 0x38414
0000000000038440	b	0x38454
0000000000038444	clrex
0000000000038448	b	0x38414
000000000003844c	wfe
0000000000038450	b	0x38414
0000000000038454	mov	x0, x24
0000000000038458	mov	w1, #0x0
000000000003845c	bl	__mi_page_free_collect
0000000000038460	add	x25, x19, x27, lsl #6
0000000000038464	mov	x23, x25
0000000000038468	ldr	w8, [x23, #0x88]!
000000000003846c	cbz	w8, 0x38318
0000000000038470	mov	x0, x22
0000000000038474	mov	x1, x24
0000000000038478	bl	__mi_page_reclaim
000000000003847c	ldr	w8, [x25, #0x8c]
0000000000038480	cmp	x8, x21
0000000000038484	b.ne	0x38328
0000000000038488	ldr	w8, [x23]
000000000003848c	add	x9, x19, x27, lsl #6
0000000000038490	ldrh	w9, [x9, #0x7c]
0000000000038494	cmp	w8, w9
0000000000038498	b.lo	0x384a8
000000000003849c	ldr	x8, [x28]
00000000000384a0	cmp	x8, #0x4
00000000000384a4	b.lo	0x38328
00000000000384a8	ldr	x8, [sp, #0x8]
00000000000384ac	mov	w9, #0x1
00000000000384b0	strb	w9, [x8]
00000000000384b4	b	0x38328
00000000000384b8	mov	x24, #0x0
00000000000384bc	b	0x384e0
00000000000384c0	mov	x0, x19
00000000000384c4	mov	x1, x23
00000000000384c8	mov	x2, x20
00000000000384cc	bl	_mi_segment_page_clear
00000000000384d0	add	x24, x24, #0x1
00000000000384d4	ldr	x8, [x19, #0x40]
00000000000384d8	cmp	x24, x8
00000000000384dc	b.hs	0x3864c
00000000000384e0	add	x8, x19, x24, lsl #6
00000000000384e4	ldrb	w9, [x8, #0x79]
00000000000384e8	tbz	w9, #0x0, 0x384d0
00000000000384ec	ldr	x9, [x19, #0x28]
00000000000384f0	sub	x9, x9, #0x1
00000000000384f4	str	x9, [x19, #0x28]
00000000000384f8	ldr	x9, [x20, #0x70]
00000000000384fc	add	x10, x9, #0xe0
0000000000038500	adr	x11, #0x4eb40
0000000000038504	nop
0000000000038508	cmp	x10, x11
000000000003850c	ccmp	x10, x26, #0x2, hs
0000000000038510	b.lo	0x3853c
0000000000038514	ldp	x11, x10, [x9, #0xf0]
0000000000038518	sub	x10, x10, #0x1
000000000003851c	str	x10, [x9, #0xf8]
0000000000038520	cmp	x10, x11
0000000000038524	b.le	0x3852c
0000000000038528	str	x10, [x9, #0xf0]
000000000003852c	ldr	x10, [x9, #0xe8]
0000000000038530	add	x10, x10, #0x1
0000000000038534	str	x10, [x9, #0xe8]
0000000000038538	b	0x385a8
000000000003853c	add	x11, x9, #0xf8
0000000000038540	ldxr	x10, [x11]
0000000000038544	sub	x10, x10, #0x1
0000000000038548	stxr	w12, x10, [x11]
000000000003854c	cbnz	w12, 0x38540
0000000000038550	add	x11, x9, #0xf0
0000000000038554	ldr	x13, [x9, #0xf0]
0000000000038558	b	0x3856c
000000000003855c	clrex
0000000000038560	mov	w14, #0x0
0000000000038564	mov	x13, x12
0000000000038568	cbnz	w14, 0x38594
000000000003856c	cmp	x13, x10
0000000000038570	b.ge	0x38594
0000000000038574	ldxr	x12, [x11]
0000000000038578	cmp	x12, x13
000000000003857c	b.ne	0x3855c
0000000000038580	stlxr	w13, x10, [x11]
0000000000038584	cbnz	w13, 0x38560
0000000000038588	mov	w14, #0x1
000000000003858c	mov	x13, x12
0000000000038590	cbz	w14, 0x3856c
0000000000038594	add	x9, x9, #0xe8
0000000000038598	ldxr	x10, [x9]
000000000003859c	add	x10, x10, #0x1
00000000000385a0	stxr	w11, x10, [x9]
00000000000385a4	cbnz	w11, 0x38598
00000000000385a8	add	x23, x8, #0x78
00000000000385ac	add	x8, x19, x24, lsl #6
00000000000385b0	add	x9, x8, #0xa0
00000000000385b4	stlr	x22, [x9]
00000000000385b8	add	x27, x8, #0x98
00000000000385bc	ldar	x8, [x27]
00000000000385c0	ands	w9, w8, #0x3
00000000000385c4	b.eq	0x385fc
00000000000385c8	cmp	w9, #0x1
00000000000385cc	b.eq	0x385f4
00000000000385d0	ldxr	x9, [x27]
00000000000385d4	cmp	x9, x8
00000000000385d8	b.ne	0x385ec
00000000000385dc	and	x8, x8, #0xfffffffffffffffc
00000000000385e0	stlxr	w9, x8, [x27]
00000000000385e4	cbnz	w9, 0x385bc
00000000000385e8	b	0x385fc
00000000000385ec	clrex
00000000000385f0	b	0x385bc
00000000000385f4	wfe
00000000000385f8	b	0x385bc
00000000000385fc	mov	x0, x23
0000000000038600	mov	w1, #0x0
0000000000038604	bl	__mi_page_free_collect
0000000000038608	add	x25, x19, x24, lsl #6
000000000003860c	mov	x28, x25
0000000000038610	ldr	w8, [x28, #0x88]!
0000000000038614	cbz	w8, 0x384c0
0000000000038618	mov	x0, x22
000000000003861c	mov	x1, x23
0000000000038620	bl	__mi_page_reclaim
0000000000038624	ldr	w8, [x25, #0x8c]
0000000000038628	cmp	x8, x21
000000000003862c	b.ne	0x384d0
0000000000038630	ldr	w8, [x28]
0000000000038634	add	x9, x19, x24, lsl #6
0000000000038638	ldrh	w9, [x9, #0x7c]
000000000003863c	cmp	w8, w9
0000000000038640	b.lo	0x384d0
0000000000038644	ldr	xzr, [x27]
0000000000038648	b	0x384d0
000000000003864c	ldr	x10, [x19, #0x38]
0000000000038650	cbz	x10, 0x38698
0000000000038654	ldr	w9, [x19, #0x70]
0000000000038658	cmp	x10, x8
000000000003865c	ccmp	w9, #0x1, #0x2, lo
0000000000038660	b.hi	0x386ac
0000000000038664	add	x8, x20, #0x10
0000000000038668	cmp	w9, #0x0
000000000003866c	csel	x10, xzr, x20, ne
0000000000038670	cmp	w9, #0x1
0000000000038674	csel	x8, x8, x10, eq
0000000000038678	ldr	x9, [x8, #0x8]
000000000003867c	stp	xzr, x9, [x19, #0x18]
0000000000038680	add	x10, x9, #0x18
0000000000038684	cmp	x9, #0x0
0000000000038688	csel	x9, x8, x10, eq
000000000003868c	str	x19, [x9]
0000000000038690	str	x19, [x8, #0x8]
0000000000038694	b	0x386ac
0000000000038698	mov	x0, x19
000000000003869c	mov	w1, #0x0
00000000000386a0	mov	x2, x20
00000000000386a4	bl	_mi_segment_free
00000000000386a8	mov	x19, #0x0
00000000000386ac	mov	x0, x19
00000000000386b0	ldp	x29, x30, [sp, #0x60]
00000000000386b4	ldp	x20, x19, [sp, #0x50]
00000000000386b8	ldp	x22, x21, [sp, #0x40]
00000000000386bc	ldp	x24, x23, [sp, #0x30]
00000000000386c0	ldp	x26, x25, [sp, #0x20]
00000000000386c4	ldp	x28, x27, [sp, #0x10]
00000000000386c8	add	sp, sp, #0x70
00000000000386cc	ret
__mi_page_reclaim:
00000000000386d0	ldr	w8, [x1, #0x14]
00000000000386d4	ubfx	x9, x8, #26, #6
00000000000386d8	cbnz	w9, 0x3890c
00000000000386dc	mov	x10, x8
00000000000386e0	mov	w8, #0x7
00000000000386e4	movk	w8, #0x20, lsl #16
00000000000386e8	add	x10, x10, #0x7
00000000000386ec	cmp	x10, #0x10
00000000000386f0	b.hs	0x386fc
00000000000386f4	mov	w9, #0x1
00000000000386f8	b	0x3874c
00000000000386fc	lsr	x9, x10, #3
0000000000038700	cmp	x10, #0x47
0000000000038704	b.hi	0x38714
0000000000038708	add	w9, w9, #0x1
000000000003870c	and	x9, x9, #0xfe
0000000000038710	b	0x3874c
0000000000038714	cmp	x10, x8
0000000000038718	b.ls	0x38724
000000000003871c	mov	w9, #0x49
0000000000038720	b	0x3874c
0000000000038724	sub	x9, x9, #0x1
0000000000038728	clz	x10, x9
000000000003872c	mov	w11, #0x3f
0000000000038730	sub	w10, w11, w10
0000000000038734	and	w10, w10, #0xff
0000000000038738	sub	w11, w10, #0x2
000000000003873c	lsr	x9, x9, x11
0000000000038740	and	w9, w9, #0x3
0000000000038744	bfi	w9, w10, #2, #8
0000000000038748	add	w9, w9, #0xfd
000000000003874c	and	x12, x9, #0xff
0000000000038750	mov	w9, #0x18
0000000000038754	madd	x9, x12, x9, x0
0000000000038758	ldr	x10, [x9, #0x420]
000000000003875c	add	x11, x8, #0x9
0000000000038760	cmp	x10, x11
0000000000038764	cset	w10, eq
0000000000038768	ldrb	w11, [x1, #0x6]
000000000003876c	and	w11, w11, #0xfe
0000000000038770	orr	w10, w11, w10
0000000000038774	strb	w10, [x1, #0x6]
0000000000038778	ldr	x10, [x9, #0x410]
000000000003877c	stp	x10, xzr, [x1, #0x30]
0000000000038780	add	x11, x10, #0x38
0000000000038784	add	x13, x9, #0x418
0000000000038788	cmp	x10, #0x0
000000000003878c	csel	x10, x13, x11, eq
0000000000038790	str	x1, [x10]
0000000000038794	str	x1, [x9, #0x410]
0000000000038798	ldr	x11, [x9, #0x420]
000000000003879c	cmp	x11, #0x400
00000000000387a0	b.hi	0x388fc
00000000000387a4	add	x9, x11, #0x7
00000000000387a8	lsr	x9, x9, #3
00000000000387ac	add	x10, x0, x9, lsl #3
00000000000387b0	ldr	x10, [x10, #0x8]
00000000000387b4	cmp	x10, x1
00000000000387b8	b.eq	0x388fc
00000000000387bc	cmp	x11, #0x9
00000000000387c0	b.hs	0x387cc
00000000000387c4	mov	x8, #0x0
00000000000387c8	b	0x388a0
00000000000387cc	sub	x13, x9, #0x1
00000000000387d0	clz	x14, x13
00000000000387d4	mov	w10, #0x3f
00000000000387d8	sub	w14, w10, w14
00000000000387dc	and	w14, w14, #0xff
00000000000387e0	sub	w15, w14, #0x2
00000000000387e4	lsr	x13, x13, x15
00000000000387e8	and	w13, w13, #0x3
00000000000387ec	bfi	w13, w14, #2, #8
00000000000387f0	sub	w13, w13, #0x3
00000000000387f4	add	w14, w9, #0x1
00000000000387f8	and	w14, w14, #0xfffffffe
00000000000387fc	cmp	x11, #0x40
0000000000038800	csel	w13, w13, w14, hi
0000000000038804	add	x11, x0, #0x410
0000000000038808	mov	w14, #0x18
000000000003880c	madd	x12, x12, x14, x0
0000000000038810	add	x12, x12, #0x3f8
0000000000038814	and	w13, w13, #0xff
0000000000038818	ldr	x14, [x12, #0x10]
000000000003881c	add	x15, x14, #0x7
0000000000038820	lsr	x14, x15, #3
0000000000038824	cmp	x15, #0x10
0000000000038828	b.hs	0x38834
000000000003882c	mov	w15, #0x1
0000000000038830	b	0x3887c
0000000000038834	cmp	x15, #0x47
0000000000038838	b.hi	0x38848
000000000003883c	add	w15, w14, #0x1
0000000000038840	and	w15, w15, #0xfffffffe
0000000000038844	b	0x3887c
0000000000038848	cmp	x15, x8
000000000003884c	b.ls	0x38858
0000000000038850	mov	w15, #0x49
0000000000038854	b	0x3887c
0000000000038858	sub	x15, x14, #0x1
000000000003885c	clz	x16, x15
0000000000038860	sub	w16, w10, w16
0000000000038864	and	w16, w16, #0xff
0000000000038868	sub	w17, w16, #0x2
000000000003886c	lsr	x15, x15, x17
0000000000038870	and	w15, w15, #0x3
0000000000038874	bfi	w15, w16, #2, #8
0000000000038878	sub	w15, w15, #0x3
000000000003887c	cmp	x12, x11
0000000000038880	b.ls	0x38890
0000000000038884	sub	x12, x12, #0x18
0000000000038888	cmp	w13, w15, uxtb
000000000003888c	b.eq	0x38818
0000000000038890	cmp	x14, x9
0000000000038894	csinc	x8, x9, x14, hs
0000000000038898	cmp	x8, x9
000000000003889c	b.hi	0x388fc
00000000000388a0	sub	x10, x9, x8
00000000000388a4	add	x10, x10, #0x1
00000000000388a8	cmp	x10, #0x4
00000000000388ac	b.lo	0x388e0
00000000000388b0	and	x11, x10, #0xfffffffffffffffc
00000000000388b4	dup.2d	v0, x1
00000000000388b8	add	x12, x0, x8, lsl #3
00000000000388bc	add	x12, x12, #0x18
00000000000388c0	mov	x13, x11
00000000000388c4	stp	q0, q0, [x12, #-0x10]
00000000000388c8	add	x12, x12, #0x20
00000000000388cc	subs	x13, x13, #0x4
00000000000388d0	b.ne	0x388c4
00000000000388d4	cmp	x10, x11
00000000000388d8	b.eq	0x388fc
00000000000388dc	add	x8, x8, x11
00000000000388e0	sub	x9, x9, x8
00000000000388e4	add	x9, x9, #0x1
00000000000388e8	add	x8, x0, x8, lsl #3
00000000000388ec	add	x8, x8, #0x8
00000000000388f0	str	x1, [x8], #0x8
00000000000388f4	subs	x9, x9, #0x1
00000000000388f8	b.ne	0x388f0
00000000000388fc	ldr	x8, [x0, #0xbc8]
0000000000038900	add	x8, x8, #0x1
0000000000038904	str	x8, [x0, #0xbc8]
0000000000038908	ret
000000000003890c	and	x9, x1, #0xffffffffffc00000
0000000000038910	ldr	w11, [x9, #0x70]
0000000000038914	cmp	w11, #0x3
0000000000038918	b.ne	0x38924
000000000003891c	ldr	x12, [x9, #0x48]
0000000000038920	b	0x38930
0000000000038924	ldr	x10, [x9, #0x60]
0000000000038928	mov	w12, #0x1
000000000003892c	lsl	x12, x12, x10
0000000000038930	ldrb	w13, [x1]
0000000000038934	cbz	x13, 0x38940
0000000000038938	mov	x10, x12
000000000003893c	b	0x386e0
0000000000038940	ldr	x14, [x9, #0x50]
0000000000038944	sub	x10, x12, x14
0000000000038948	cmp	w11, #0x1
000000000003894c	ccmp	w8, #0x0, #0x4, ls
0000000000038950	b.eq	0x386e0
0000000000038954	madd	x9, x12, x13, x9
0000000000038958	add	x9, x9, x14
000000000003895c	udiv	x11, x9, x8
0000000000038960	neg	x9, x9
0000000000038964	madd	x9, x11, x8, x9
0000000000038968	add	x9, x8, x9
000000000003896c	cmp	x9, x8
0000000000038970	csel	x8, x9, xzr, lo
0000000000038974	sub	x10, x10, x8
0000000000038978	b	0x386e0
_mi_free:
000000000003897c	stp	x20, x19, [sp, #-0x20]!
0000000000038980	stp	x29, x30, [sp, #0x10]
0000000000038984	add	x29, sp, #0x10
0000000000038988	ands	x20, x0, #0xffffffffffc00000
000000000003898c	b.eq	0x389e8
0000000000038990	mov	x19, x0
0000000000038994	bl	0x51cb0 ; symbol stub for: _pthread_self
0000000000038998	bl	0x51c68 ; symbol stub for: _pthread_mach_thread_np
000000000003899c	mov	w8, w0
00000000000389a0	ldr	x9, [x20, #0x60]
00000000000389a4	add	x10, x20, #0x68
00000000000389a8	ldar	x11, [x10]
00000000000389ac	cmp	x11, x8
00000000000389b0	b.ne	0x389f4
00000000000389b4	and	x11, x19, #0x3fffff
00000000000389b8	lsr	x11, x11, x9
00000000000389bc	add	x9, x20, x11, lsl #6
00000000000389c0	ldrb	w12, [x9, #0x7e]
00000000000389c4	cbnz	w12, 0x389f4
00000000000389c8	add	x8, x20, x11, lsl #6
00000000000389cc	ldr	x10, [x8, #0x90]
00000000000389d0	str	x10, [x19]
00000000000389d4	str	x19, [x8, #0x90]
00000000000389d8	ldr	w10, [x8, #0x88]
00000000000389dc	subs	w10, w10, #0x1
00000000000389e0	str	w10, [x8, #0x88]
00000000000389e4	b.eq	0x38a14
00000000000389e8	ldp	x29, x30, [sp, #0x10]
00000000000389ec	ldp	x20, x19, [sp], #0x20
00000000000389f0	ret
00000000000389f4	ldar	x9, [x10]
00000000000389f8	cmp	x9, x8
00000000000389fc	cset	w1, eq
0000000000038a00	mov	x0, x20
0000000000038a04	mov	x2, x19
0000000000038a08	ldp	x29, x30, [sp, #0x10]
0000000000038a0c	ldp	x20, x19, [sp], #0x20
0000000000038a10	b	_mi_free_generic
0000000000038a14	add	x0, x9, #0x78
0000000000038a18	ldp	x29, x30, [sp, #0x10]
0000000000038a1c	ldp	x20, x19, [sp], #0x20
0000000000038a20	b	__mi_page_retire
_mi_free_generic:
0000000000038a24	mov	x8, x0
0000000000038a28	sub	x9, x2, x0
0000000000038a2c	ldr	x12, [x0, #0x60]
0000000000038a30	lsr	x10, x9, x12
0000000000038a34	add	x11, x0, x10, lsl #6
0000000000038a38	mov	x9, x11
0000000000038a3c	ldrb	w13, [x9, #0x7e]!
0000000000038a40	sub	x0, x9, #0x6
0000000000038a44	tbz	w13, #0x1, 0x38ad0
0000000000038a48	ldr	w11, [x11, #0x8c]
0000000000038a4c	ldr	w14, [x8, #0x70]
0000000000038a50	cmp	w14, #0x3
0000000000038a54	b.ne	0x38a6c
0000000000038a58	ldr	x12, [x8, #0x48]
0000000000038a5c	ldrb	w13, [x0]
0000000000038a60	madd	x12, x12, x13, x8
0000000000038a64	cbnz	x13, 0x38ab0
0000000000038a68	b	0x38a80
0000000000038a6c	mov	w13, #0x1
0000000000038a70	lsl	x12, x13, x12
0000000000038a74	ldrb	w13, [x0]
0000000000038a78	madd	x12, x12, x13, x8
0000000000038a7c	cbnz	x13, 0x38ab0
0000000000038a80	ldr	x15, [x8, #0x50]
0000000000038a84	add	x12, x12, x15
0000000000038a88	cmp	w14, #0x1
0000000000038a8c	b.hi	0x38ab0
0000000000038a90	cbz	w11, 0x38ab0
0000000000038a94	udiv	x14, x12, x11
0000000000038a98	neg	x15, x12
0000000000038a9c	madd	x14, x14, x11, x15
0000000000038aa0	add	x14, x11, x14
0000000000038aa4	add	x15, x12, x14
0000000000038aa8	cmp	x14, x11
0000000000038aac	csel	x12, x15, x12, lo
0000000000038ab0	ubfx	x14, x11, #26, #6
0000000000038ab4	cbnz	w14, 0x38b10
0000000000038ab8	mov	x15, x11
0000000000038abc	sub	x11, x2, x12
0000000000038ac0	udiv	x12, x11, x15
0000000000038ac4	neg	x11, x11
0000000000038ac8	madd	x11, x12, x15, x11
0000000000038acc	add	x2, x2, x11
0000000000038ad0	cbz	w1, 0x38b00
0000000000038ad4	add	x8, x8, x10, lsl #6
0000000000038ad8	ldr	x10, [x8, #0x90]
0000000000038adc	str	x10, [x2]
0000000000038ae0	str	x2, [x8, #0x90]
0000000000038ae4	ldr	w10, [x8, #0x88]
0000000000038ae8	subs	w10, w10, #0x1
0000000000038aec	str	w10, [x8, #0x88]
0000000000038af0	b.eq	0x38b08
0000000000038af4	ldrb	w8, [x9]
0000000000038af8	tbnz	w8, #0x0, 0x38b0c
0000000000038afc	ret
0000000000038b00	mov	x1, x2
0000000000038b04	b	__mi_free_block_mt
0000000000038b08	b	__mi_page_retire
0000000000038b0c	b	__mi_page_unfull
0000000000038b10	and	x14, x0, #0xffffffffffc00000
0000000000038b14	ldr	w16, [x14, #0x70]
0000000000038b18	cmp	w16, #0x3
0000000000038b1c	b.ne	0x38b28
0000000000038b20	ldr	x17, [x14, #0x48]
0000000000038b24	b	0x38b34
0000000000038b28	ldr	x15, [x14, #0x60]
0000000000038b2c	mov	w17, #0x1
0000000000038b30	lsl	x17, x17, x15
0000000000038b34	cbz	w13, 0x38b40
0000000000038b38	mov	x15, x17
0000000000038b3c	b	0x38abc
0000000000038b40	ldr	x3, [x14, #0x50]
0000000000038b44	sub	x15, x17, x3
0000000000038b48	cmp	w16, #0x1
0000000000038b4c	ccmp	w11, #0x0, #0x4, ls
0000000000038b50	b.eq	0x38abc
0000000000038b54	madd	x13, x17, x13, x14
0000000000038b58	add	x13, x13, x3
0000000000038b5c	udiv	x14, x13, x11
0000000000038b60	neg	x13, x13
0000000000038b64	madd	x13, x14, x11, x13
0000000000038b68	add	x13, x11, x13
0000000000038b6c	cmp	x13, x11
0000000000038b70	csel	x11, x13, xzr, lo
0000000000038b74	sub	x15, x15, x11
0000000000038b78	b	0x38abc
__mi_free_block_mt:
0000000000038b7c	stp	x22, x21, [sp, #-0x30]!
0000000000038b80	stp	x20, x19, [sp, #0x10]
0000000000038b84	stp	x29, x30, [sp, #0x20]
0000000000038b88	add	x29, sp, #0x20
0000000000038b8c	mov	x20, x1
0000000000038b90	mov	x19, x0
0000000000038b94	and	x21, x0, #0xffffffffffc00000
0000000000038b98	ldr	w8, [x21, #0x70]
0000000000038b9c	cmp	w8, #0x3
0000000000038ba0	b.ne	0x38c9c
0000000000038ba4	bl	_mi_thread_init
0000000000038ba8	adrp	x0, 52 ; 0x6c000
0000000000038bac	add	x0, x0, #0xbc8
0000000000038bb0	ldr	x8, [x0]
0000000000038bb4	blr	x8
0000000000038bb8	ldr	x8, [x0]
0000000000038bbc	add	x9, x21, #0x68
0000000000038bc0	ldr	x10, [x8, #0xb20]
0000000000038bc4	ldaxr	x11, [x9]
0000000000038bc8	cbnz	x11, 0x38d38
0000000000038bcc	stlxr	w11, x10, [x9]
0000000000038bd0	cbnz	w11, 0x38bc4
0000000000038bd4	ldr	x9, [x19, #0x8]
0000000000038bd8	str	x9, [x20]
0000000000038bdc	str	x20, [x19, #0x8]
0000000000038be0	ldr	w9, [x19, #0x10]
0000000000038be4	sub	w9, w9, #0x1
0000000000038be8	str	w9, [x19, #0x10]
0000000000038bec	ldrb	w9, [x19, #0x7]
0000000000038bf0	and	w9, w9, #0xfe
0000000000038bf4	strb	w9, [x19, #0x7]
0000000000038bf8	ldr	x8, [x8]
0000000000038bfc	ldr	x9, [x21, #0x48]
0000000000038c00	ldr	x10, [x8, #0x90]
0000000000038c04	adr	x11, #0x4e43c
0000000000038c08	nop
0000000000038c0c	cmp	x10, x11
0000000000038c10	cset	w12, hs
0000000000038c14	add	x11, x11, #0x240
0000000000038c18	cmp	x10, x11
0000000000038c1c	cset	w11, lo
0000000000038c20	and	w11, w12, w11
0000000000038c24	add	x13, x10, #0x18
0000000000038c28	tbnz	x9, #0x3f, 0x38d4c
0000000000038c2c	cbz	w11, 0x38dc0
0000000000038c30	ldxr	x11, [x13]
0000000000038c34	add	x12, x11, #0x1
0000000000038c38	stxr	w14, x12, [x13]
0000000000038c3c	cbnz	w14, 0x38c30
0000000000038c40	add	x13, x10, #0x10
0000000000038c44	ldr	x15, [x10, #0x10]
0000000000038c48	b	0x38c5c
0000000000038c4c	clrex
0000000000038c50	mov	w16, #0x0
0000000000038c54	mov	x15, x14
0000000000038c58	cbnz	w16, 0x38c84
0000000000038c5c	cmp	x15, x11
0000000000038c60	b.gt	0x38c84
0000000000038c64	ldxr	x14, [x13]
0000000000038c68	cmp	x14, x15
0000000000038c6c	b.ne	0x38c4c
0000000000038c70	stlxr	w15, x12, [x13]
0000000000038c74	cbnz	w15, 0x38c50
0000000000038c78	mov	w16, #0x1
0000000000038c7c	mov	x15, x14
0000000000038c80	cbz	w16, 0x38c5c
0000000000038c84	mov	w11, #0x1
0000000000038c88	ldxr	x12, [x10]
0000000000038c8c	add	x12, x12, #0x1
0000000000038c90	stxr	w13, x12, [x10]
0000000000038c94	cbnz	w13, 0x38c88
0000000000038c98	b	0x38e0c
0000000000038c9c	add	x8, x19, #0x20
0000000000038ca0	ldr	x10, [x19, #0x20]
0000000000038ca4	b	0x38cb8
0000000000038ca8	clrex
0000000000038cac	mov	w11, #0x0
0000000000038cb0	mov	x10, x9
0000000000038cb4	tbnz	w11, #0x0, 0x38d3c
0000000000038cb8	and	x11, x10, #0xfffffffffffffffc
0000000000038cbc	ands	x12, x10, #0x3
0000000000038cc0	b.eq	0x38cf0
0000000000038cc4	str	x11, [x20]
0000000000038cc8	ldxr	x9, [x8]
0000000000038ccc	cmp	x9, x10
0000000000038cd0	b.ne	0x38ca8
0000000000038cd4	orr	x10, x12, x20
0000000000038cd8	stlxr	w11, x10, [x8]
0000000000038cdc	cbnz	w11, 0x38cac
0000000000038ce0	mov	w11, #0x1
0000000000038ce4	mov	x10, x9
0000000000038ce8	tbz	w11, #0x0, 0x38cb8
0000000000038cec	b	0x38d3c
0000000000038cf0	ldxr	x9, [x8]
0000000000038cf4	cmp	x9, x10
0000000000038cf8	b.ne	0x38d10
0000000000038cfc	orr	x10, x11, #0x1
0000000000038d00	stlxr	w11, x10, [x8]
0000000000038d04	cbnz	w11, 0x38d14
0000000000038d08	mov	w11, #0x1
0000000000038d0c	b	0x38d18
0000000000038d10	clrex
0000000000038d14	mov	w11, #0x0
0000000000038d18	mov	x10, x9
0000000000038d1c	tbz	w11, #0x0, 0x38cb8
0000000000038d20	add	x9, x19, #0x28
0000000000038d24	ldar	x10, [x9]
0000000000038d28	cbz	x10, 0x38eb8
0000000000038d2c	add	x9, x10, #0xb18
0000000000038d30	ldr	x11, [x10, #0xb18]
0000000000038d34	b	0x38e94
0000000000038d38	clrex
0000000000038d3c	ldp	x29, x30, [sp, #0x20]
0000000000038d40	ldp	x20, x19, [sp, #0x10]
0000000000038d44	ldp	x22, x21, [sp], #0x30
0000000000038d48	ret
0000000000038d4c	cbz	w11, 0x38de0
0000000000038d50	ldxr	x11, [x13]
0000000000038d54	sub	x11, x11, #0x1
0000000000038d58	stxr	w12, x11, [x13]
0000000000038d5c	cbnz	w12, 0x38d50
0000000000038d60	add	x12, x10, #0x10
0000000000038d64	ldr	x14, [x10, #0x10]
0000000000038d68	b	0x38d7c
0000000000038d6c	clrex
0000000000038d70	mov	w15, #0x0
0000000000038d74	mov	x14, x13
0000000000038d78	cbnz	w15, 0x38da4
0000000000038d7c	cmp	x14, x11
0000000000038d80	b.ge	0x38da4
0000000000038d84	ldxr	x13, [x12]
0000000000038d88	cmp	x13, x14
0000000000038d8c	b.ne	0x38d6c
0000000000038d90	stlxr	w14, x11, [x12]
0000000000038d94	cbnz	w14, 0x38d70
0000000000038d98	mov	w15, #0x1
0000000000038d9c	mov	x14, x13
0000000000038da0	cbz	w15, 0x38d7c
0000000000038da4	add	x10, x10, #0x8
0000000000038da8	ldxr	x11, [x10]
0000000000038dac	add	x11, x11, #0x1
0000000000038db0	stxr	w12, x11, [x10]
0000000000038db4	cbnz	w12, 0x38da8
0000000000038db8	mov	x11, #-0x1
0000000000038dbc	b	0x38e0c
0000000000038dc0	ldp	x13, x12, [x10, #0x10]
0000000000038dc4	add	x11, x12, #0x1
0000000000038dc8	str	x11, [x10, #0x18]
0000000000038dcc	cmp	x12, x13
0000000000038dd0	b.lt	0x38dd8
0000000000038dd4	str	x11, [x10, #0x10]
0000000000038dd8	mov	w11, #0x1
0000000000038ddc	b	0x38e00
0000000000038de0	ldp	x12, x11, [x10, #0x10]
0000000000038de4	sub	x11, x11, #0x1
0000000000038de8	str	x11, [x10, #0x18]
0000000000038dec	cmp	x11, x12
0000000000038df0	b.le	0x38df8
0000000000038df4	str	x11, [x10, #0x10]
0000000000038df8	add	x10, x10, #0x8
0000000000038dfc	mov	x11, #-0x1
0000000000038e00	ldr	x12, [x10]
0000000000038e04	add	x12, x12, #0x1
0000000000038e08	str	x12, [x10]
0000000000038e0c	add	x2, x8, #0x20
0000000000038e10	ldp	x10, x12, [x8, #0x58]
0000000000038e14	add	x10, x10, x11
0000000000038e18	str	x10, [x8, #0x58]
0000000000038e1c	cmp	x10, x12
0000000000038e20	b.hi	0x38e50
0000000000038e24	ldp	x10, x11, [x8, #0x68]
0000000000038e28	add	x9, x10, x9
0000000000038e2c	str	x9, [x8, #0x68]
0000000000038e30	cmp	x9, x11
0000000000038e34	b.hi	0x38e68
0000000000038e38	mov	x0, x19
0000000000038e3c	mov	w1, #0x1
0000000000038e40	ldp	x29, x30, [sp, #0x20]
0000000000038e44	ldp	x20, x19, [sp, #0x10]
0000000000038e48	ldp	x22, x21, [sp], #0x30
0000000000038e4c	b	__mi_segment_page_free
0000000000038e50	str	x10, [x8, #0x60]
0000000000038e54	ldp	x10, x11, [x8, #0x68]
0000000000038e58	add	x9, x10, x9
0000000000038e5c	str	x9, [x8, #0x68]
0000000000038e60	cmp	x9, x11
0000000000038e64	b.ls	0x38e38
0000000000038e68	str	x9, [x8, #0x70]
0000000000038e6c	mov	x0, x19
0000000000038e70	mov	w1, #0x1
0000000000038e74	ldp	x29, x30, [sp, #0x20]
0000000000038e78	ldp	x20, x19, [sp, #0x10]
0000000000038e7c	ldp	x22, x21, [sp], #0x30
0000000000038e80	b	__mi_segment_page_free
0000000000038e84	clrex
0000000000038e88	mov	w12, #0x0
0000000000038e8c	mov	x11, x10
0000000000038e90	cbnz	w12, 0x38eb8
0000000000038e94	str	x11, [x20]
0000000000038e98	ldxr	x10, [x9]
0000000000038e9c	cmp	x10, x11
0000000000038ea0	b.ne	0x38e84
0000000000038ea4	stlxr	w11, x20, [x9]
0000000000038ea8	cbnz	w11, 0x38e88
0000000000038eac	mov	w12, #0x1
0000000000038eb0	mov	x11, x10
0000000000038eb4	cbz	w12, 0x38e94
0000000000038eb8	ldr	x10, [x8]
0000000000038ebc	b	0x38ed0
0000000000038ec0	clrex
0000000000038ec4	mov	w11, #0x0
0000000000038ec8	mov	x10, x9
0000000000038ecc	cbnz	w11, 0x38d3c
0000000000038ed0	ldxr	x9, [x8]
0000000000038ed4	cmp	x9, x10
0000000000038ed8	b.ne	0x38ec0
0000000000038edc	and	x10, x10, #0xfffffffffffffffc
0000000000038ee0	orr	x10, x10, #0x2
0000000000038ee4	stlxr	w11, x10, [x8]
0000000000038ee8	cbnz	w11, 0x38ec4
0000000000038eec	mov	w11, #0x1
0000000000038ef0	mov	x10, x9
0000000000038ef4	cbz	w11, 0x38ed0
0000000000038ef8	b	0x38d3c
_mi_out_buf_stderr:
0000000000038efc	stp	x20, x19, [sp, #-0x20]!
0000000000038f00	stp	x29, x30, [sp, #0x10]
0000000000038f04	add	x29, sp, #0x10
0000000000038f08	mov	x19, x0
0000000000038f0c	nop
0000000000038f10	ldr	x8, #0x1f120 ; literal pool symbol address: ___stderrp
0000000000038f14	ldr	x1, [x8]
0000000000038f18	bl	0x51a58 ; symbol stub for: _fputs
0000000000038f1c	cbz	x19, 0x38f5c
0000000000038f20	nop
0000000000038f24	ldr	x8, #0x4dbfc
0000000000038f28	lsr	x8, x8, #15
0000000000038f2c	cbnz	x8, 0x38f5c
0000000000038f30	mov	x0, x19
0000000000038f34	bl	0x51d34 ; symbol stub for: _strlen
0000000000038f38	cbz	x0, 0x38f5c
0000000000038f3c	adr	x9, #0x4dbe4
0000000000038f40	nop
0000000000038f44	ldaxr	x8, [x9]
0000000000038f48	add	x10, x8, x0
0000000000038f4c	stlxr	w11, x10, [x9]
0000000000038f50	cbnz	w11, 0x38f44
0000000000038f54	lsr	x9, x8, #15
0000000000038f58	cbz	x9, 0x38f68
0000000000038f5c	ldp	x29, x30, [sp, #0x10]
0000000000038f60	ldp	x20, x19, [sp], #0x20
0000000000038f64	ret
0000000000038f68	add	x9, x8, x0
0000000000038f6c	mov	w10, #0x7fff
0000000000038f70	sub	x10, x10, x8
0000000000038f74	lsr	x9, x9, #15
0000000000038f78	cmp	x9, #0x0
0000000000038f7c	csel	x2, x10, x0, ne
0000000000038f80	adr	x9, #0x35a48
0000000000038f84	nop
0000000000038f88	add	x0, x9, x8
0000000000038f8c	mov	x1, x19
0000000000038f90	ldp	x29, x30, [sp, #0x10]
0000000000038f94	ldp	x20, x19, [sp], #0x20
0000000000038f98	b	0x51aac ; symbol stub for: _memcpy
_mi_buffered_out:
0000000000038f9c	stp	x28, x27, [sp, #-0x60]!
0000000000038fa0	stp	x26, x25, [sp, #0x10]
0000000000038fa4	stp	x24, x23, [sp, #0x20]
0000000000038fa8	stp	x22, x21, [sp, #0x30]
0000000000038fac	stp	x20, x19, [sp, #0x40]
0000000000038fb0	stp	x29, x30, [sp, #0x50]
0000000000038fb4	add	x29, sp, #0x50
0000000000038fb8	cbz	x0, 0x39188
0000000000038fbc	mov	x19, x1
0000000000038fc0	cbz	x1, 0x39188
0000000000038fc4	ldrb	w24, [x0]
0000000000038fc8	cbz	w24, 0x39188
0000000000038fcc	add	x21, x0, #0x1
0000000000038fd0	adrp	x22, 78 ; 0x86000
0000000000038fd4	adrp	x20, 52 ; 0x6c000
0000000000038fd8	add	x20, x20, #0xbe0
0000000000038fdc	ldr	x23, [x20]
0000000000038fe0	adr	x25, #0x4da66
0000000000038fe4	nop
0000000000038fe8	adr	x26, #-0x5a74
0000000000038fec	nop
0000000000038ff0	nop
0000000000038ff4	ldr	x27, #0x1f044 ; literal pool symbol address: ___stdoutp
0000000000038ff8	nop
0000000000038ffc	ldr	x28, #0x1f034 ; literal pool symbol address: ___stderrp
0000000000039000	b	0x3901c
0000000000039004	ldr	x1, [x19, #0x8]
0000000000039008	mov	x0, x8
000000000003900c	blr	x9
0000000000039010	str	xzr, [x19, #0x18]
0000000000039014	ldrb	w24, [x21], #0x1
0000000000039018	cbz	w24, 0x39188
000000000003901c	ldp	x8, x9, [x19, #0x18]
0000000000039020	cmp	x8, x9
0000000000039024	b.hs	0x39044
0000000000039028	ldr	x9, [x19, #0x10]
000000000003902c	add	x10, x8, #0x1
0000000000039030	str	x10, [x19, #0x18]
0000000000039034	strb	w24, [x9, x8]
0000000000039038	cmp	w24, #0xa
000000000003903c	b.ne	0x39014
0000000000039040	b	0x390fc
0000000000039044	ldr	x9, [x19, #0x10]
0000000000039048	strb	wzr, [x9, x8]
000000000003904c	ldr	x9, [x19]
0000000000039050	ldr	x8, [x19, #0x10]
0000000000039054	cbz	x9, 0x3906c
0000000000039058	ldr	x10, [x27]
000000000003905c	ldr	x11, [x28]
0000000000039060	cmp	x10, x9
0000000000039064	ccmp	x11, x9, #0x4, ne
0000000000039068	b.ne	0x390d0
000000000003906c	ldrb	w9, [x22, #0xa46]
0000000000039070	cmp	w9, #0x1
0000000000039074	b.ne	0x39098
0000000000039078	mov	x0, x20
000000000003907c	blr	x23
0000000000039080	ldrb	w9, [x0]
0000000000039084	tbnz	w9, #0x0, 0x390dc
0000000000039088	mov	x0, x20
000000000003908c	blr	x23
0000000000039090	mov	w9, #0x1
0000000000039094	strb	w9, [x0]
0000000000039098	add	x9, x25, #0xca
000000000003909c	ldar	x1, [x9]
00000000000390a0	ldur	x9, [x25, #0xd2]
00000000000390a4	cmp	x9, #0x0
00000000000390a8	csel	x9, x26, x9, eq
00000000000390ac	mov	x0, x8
00000000000390b0	blr	x9
00000000000390b4	ldrb	w8, [x25]
00000000000390b8	cmp	w8, #0x1
00000000000390bc	b.ne	0x390dc
00000000000390c0	mov	x0, x20
00000000000390c4	blr	x23
00000000000390c8	strb	wzr, [x0]
00000000000390cc	b	0x390dc
00000000000390d0	ldr	x1, [x19, #0x8]
00000000000390d4	mov	x0, x8
00000000000390d8	blr	x9
00000000000390dc	mov	x8, #0x0
00000000000390e0	str	xzr, [x19, #0x18]
00000000000390e4	ldr	x9, [x19, #0x10]
00000000000390e8	add	x10, x8, #0x1
00000000000390ec	str	x10, [x19, #0x18]
00000000000390f0	strb	w24, [x9, x8]
00000000000390f4	cmp	w24, #0xa
00000000000390f8	b.ne	0x39014
00000000000390fc	ldp	x8, x9, [x19, #0x10]
0000000000039100	strb	wzr, [x8, x9]
0000000000039104	ldr	x9, [x19]
0000000000039108	ldr	x8, [x19, #0x10]
000000000003910c	cbz	x9, 0x39124
0000000000039110	ldr	x10, [x27]
0000000000039114	ldr	x11, [x28]
0000000000039118	cmp	x10, x9
000000000003911c	ccmp	x11, x9, #0x4, ne
0000000000039120	b.ne	0x39004
0000000000039124	ldrb	w9, [x22, #0xa46]
0000000000039128	cmp	w9, #0x1
000000000003912c	b.ne	0x39150
0000000000039130	mov	x0, x20
0000000000039134	blr	x23
0000000000039138	ldrb	w9, [x0]
000000000003913c	tbnz	w9, #0x0, 0x39010
0000000000039140	mov	x0, x20
0000000000039144	blr	x23
0000000000039148	mov	w9, #0x1
000000000003914c	strb	w9, [x0]
0000000000039150	add	x9, x25, #0xca
0000000000039154	ldar	x1, [x9]
0000000000039158	ldur	x9, [x25, #0xd2]
000000000003915c	cmp	x9, #0x0
0000000000039160	csel	x9, x26, x9, eq
0000000000039164	mov	x0, x8
0000000000039168	blr	x9
000000000003916c	ldrb	w8, [x25]
0000000000039170	cmp	w8, #0x1
0000000000039174	b.ne	0x39010
0000000000039178	mov	x0, x20
000000000003917c	blr	x23
0000000000039180	strb	wzr, [x0]
0000000000039184	b	0x39010
0000000000039188	ldp	x29, x30, [sp, #0x50]
000000000003918c	ldp	x20, x19, [sp, #0x40]
0000000000039190	ldp	x22, x21, [sp, #0x30]
0000000000039194	ldp	x24, x23, [sp, #0x20]
0000000000039198	ldp	x26, x25, [sp, #0x10]
000000000003919c	ldp	x28, x27, [sp], #0x60
00000000000391a0	ret
__mi_fprintf:
00000000000391a4	stp	x28, x27, [sp, #-0x30]!
00000000000391a8	stp	x20, x19, [sp, #0x10]
00000000000391ac	stp	x29, x30, [sp, #0x20]
00000000000391b0	add	x29, sp, #0x20
00000000000391b4	sub	sp, sp, #0x210
00000000000391b8	add	x8, x29, #0x10
00000000000391bc	str	x8, [sp, #0x8]
00000000000391c0	cbz	x2, 0x39300
00000000000391c4	mov	x19, x1
00000000000391c8	adrp	x20, 77 ; 0x86000
00000000000391cc	ldrb	w8, [x20, #0xa46]
00000000000391d0	cmp	w8, #0x1
00000000000391d4	b.ne	0x39204
00000000000391d8	adrp	x8, 51 ; 0x6c000
00000000000391dc	add	x8, x8, #0xbe0
00000000000391e0	ldr	x9, [x8]
00000000000391e4	mov	x0, x8
00000000000391e8	blr	x9
00000000000391ec	ldrb	w10, [x0]
00000000000391f0	tbnz	w10, #0x0, 0x39300
00000000000391f4	mov	x0, x8
00000000000391f8	blr	x9
00000000000391fc	mov	w8, #0x1
0000000000039200	strb	w8, [x0]
0000000000039204	add	x0, sp, #0x10
0000000000039208	add	x3, x29, #0x10
000000000003920c	mov	w1, #0x1ff
0000000000039210	bl	0x51d94 ; symbol stub for: _vsnprintf
0000000000039214	ldrb	w8, [x20, #0xa46]
0000000000039218	cmp	w8, #0x1
000000000003921c	b.ne	0x39288
0000000000039220	adrp	x8, 51 ; 0x6c000
0000000000039224	add	x8, x8, #0xbe0
0000000000039228	ldr	x9, [x8]
000000000003922c	mov	x0, x8
0000000000039230	blr	x9
0000000000039234	strb	wzr, [x0]
0000000000039238	nop
000000000003923c	ldr	x10, #0x1edfc ; literal pool symbol address: ___stdoutp
0000000000039240	adr	x11, #-0x2a4
0000000000039244	nop
0000000000039248	ldr	x10, [x10]
000000000003924c	nop
0000000000039250	ldr	x12, #0x1ede0 ; literal pool symbol address: ___stderrp
0000000000039254	ldr	x12, [x12]
0000000000039258	cmp	x10, x11
000000000003925c	ccmp	x12, x11, #0x4, ne
0000000000039260	b.ne	0x39314
0000000000039264	mov	x0, x8
0000000000039268	blr	x9
000000000003926c	ldrb	w10, [x0]
0000000000039270	tbnz	w10, #0x0, 0x39300
0000000000039274	mov	x0, x8
0000000000039278	blr	x9
000000000003927c	mov	w8, #0x1
0000000000039280	strb	w8, [x0]
0000000000039284	b	0x392b4
0000000000039288	nop
000000000003928c	ldr	x8, #0x1edac ; literal pool symbol address: ___stdoutp
0000000000039290	adr	x9, #-0x2f4
0000000000039294	nop
0000000000039298	ldr	x8, [x8]
000000000003929c	nop
00000000000392a0	ldr	x10, #0x1ed90 ; literal pool symbol address: ___stderrp
00000000000392a4	ldr	x10, [x10]
00000000000392a8	cmp	x8, x9
00000000000392ac	ccmp	x10, x9, #0x4, ne
00000000000392b0	b.ne	0x39314
00000000000392b4	adr	x19, #0x4d792
00000000000392b8	nop
00000000000392bc	add	x8, x19, #0xca
00000000000392c0	ldar	x1, [x8]
00000000000392c4	ldur	x8, [x19, #0xd2]
00000000000392c8	adr	x9, #-0x5d54
00000000000392cc	nop
00000000000392d0	cmp	x8, #0x0
00000000000392d4	csel	x8, x9, x8, eq
00000000000392d8	add	x0, sp, #0x10
00000000000392dc	blr	x8
00000000000392e0	ldrb	w8, [x19]
00000000000392e4	cmp	w8, #0x1
00000000000392e8	b.ne	0x39300
00000000000392ec	adrp	x0, 51 ; 0x6c000
00000000000392f0	add	x0, x0, #0xbe0
00000000000392f4	ldr	x8, [x0]
00000000000392f8	blr	x8
00000000000392fc	strb	wzr, [x0]
0000000000039300	add	sp, sp, #0x210
0000000000039304	ldp	x29, x30, [sp, #0x20]
0000000000039308	ldp	x20, x19, [sp, #0x10]
000000000003930c	ldp	x28, x27, [sp], #0x30
0000000000039310	ret
0000000000039314	add	x0, sp, #0x10
0000000000039318	mov	x1, x19
000000000003931c	bl	_mi_buffered_out
0000000000039320	add	sp, sp, #0x210
0000000000039324	ldp	x29, x30, [sp, #0x20]
0000000000039328	ldp	x20, x19, [sp, #0x10]
000000000003932c	ldp	x28, x27, [sp], #0x30
0000000000039330	ret
_mi_stat_print:
0000000000039334	sub	sp, sp, #0x90
0000000000039338	stp	x26, x25, [sp, #0x40]
000000000003933c	stp	x24, x23, [sp, #0x50]
0000000000039340	stp	x22, x21, [sp, #0x60]
0000000000039344	stp	x20, x19, [sp, #0x70]
0000000000039348	stp	x29, x30, [sp, #0x80]
000000000003934c	add	x29, sp, #0x80
0000000000039350	mov	x19, x3
0000000000039354	mov	x21, x2
0000000000039358	mov	x20, x0
000000000003935c	str	x1, [sp]
0000000000039360	adr	x2, #0x1d497 ; literal pool for: "%10s:"
0000000000039364	nop
0000000000039368	mov	x1, x3
000000000003936c	bl	__mi_fprintf
0000000000039370	cmp	x21, #0x1
0000000000039374	b.lt	0x393a4
0000000000039378	ldr	x8, [x20, #0x10]
000000000003937c	cmp	x8, #0x0
0000000000039380	cneg	x9, x8, mi
0000000000039384	cmp	x9, #0x3ff
0000000000039388	b.gt	0x393ec
000000000003938c	adr	x9, #0x1d44b ; literal pool for: "b"
0000000000039390	nop
0000000000039394	stp	x8, x9, [sp]
0000000000039398	adr	x2, #0x1d438 ; literal pool for: "%d %s "
000000000003939c	nop
00000000000393a0	b	0x39478
00000000000393a4	ldr	x8, [x20, #0x10]
00000000000393a8	cmp	x8, #0x0
00000000000393ac	cneg	x9, x8, mi
00000000000393b0	tbnz	x21, #0x3f, 0x397a0
00000000000393b4	adr	x24, #0x1d427 ; literal pool for: "m"
00000000000393b8	nop
00000000000393bc	adr	x25, #0x1d41d ; literal pool for: "k"
00000000000393c0	nop
00000000000393c4	adr	x23, #0x1d419 ; literal pool for: "g"
00000000000393c8	nop
00000000000393cc	adr	x22, #0x1d40b ; literal pool for: "b"
00000000000393d0	nop
00000000000393d4	cmp	x9, #0x3ff
00000000000393d8	b.gt	0x397c0
00000000000393dc	stp	x8, x22, [sp]
00000000000393e0	adr	x2, #0x1d3f0 ; literal pool for: "%d %s "
00000000000393e4	nop
00000000000393e8	b	0x3982c
00000000000393ec	adr	x10, #0x1d3ef ; literal pool for: "m"
00000000000393f0	nop
00000000000393f4	adr	x11, #0x1d3e5 ; literal pool for: "k"
00000000000393f8	nop
00000000000393fc	cmp	x9, #0x100, lsl #12
0000000000039400	csel	x10, x11, x10, lt
0000000000039404	mov	w11, #0x100000
0000000000039408	mov	w12, #0x400
000000000003940c	csel	x11, x12, x11, lt
0000000000039410	lsl	x12, x11, #10
0000000000039414	adr	x13, #0x1d3c9 ; literal pool for: "g"
0000000000039418	nop
000000000003941c	cmp	x9, x12
0000000000039420	csel	x9, x10, x13, lt
0000000000039424	csel	x10, x11, x12, lt
0000000000039428	mov	w11, #0xcccd
000000000003942c	movk	w11, #0xcccc, lsl #16
0000000000039430	mul	x10, x10, x11
0000000000039434	lsr	x10, x10, #35
0000000000039438	sdiv	x8, x8, x10
000000000003943c	mov	x10, #0x6666666666666666
0000000000039440	movk	x10, #0x6667
0000000000039444	smulh	x10, x8, x10
0000000000039448	asr	x11, x10, #2
000000000003944c	add	x10, x11, x10, lsr #63
0000000000039450	mov	x11, #-0xa
0000000000039454	madd	x8, x10, x11, x8
0000000000039458	cmp	x8, #0x0
000000000003945c	cneg	x8, x8, mi
0000000000039460	adr	x11, #0x1d377 ; literal pool for: "b"
0000000000039464	nop
0000000000039468	stp	x9, x11, [sp, #0x10]
000000000003946c	stp	x10, x8, [sp]
0000000000039470	adr	x2, #0x1d36f ; literal pool for: "%ld.%ld %s%s"
0000000000039474	nop
0000000000039478	add	x0, sp, #0x20
000000000003947c	mov	w1, #0x20
0000000000039480	bl	0x51d10 ; symbol stub for: _snprintf
0000000000039484	add	x8, sp, #0x20
0000000000039488	str	x8, [sp]
000000000003948c	adr	x2, #0x1d373 ; literal pool for: "%11s"
0000000000039490	nop
0000000000039494	mov	x1, x19
0000000000039498	bl	__mi_fprintf
000000000003949c	ldr	x8, [x20]
00000000000394a0	cmp	x8, #0x0
00000000000394a4	cneg	x9, x8, mi
00000000000394a8	cmp	x9, #0x3ff
00000000000394ac	b.gt	0x394c8
00000000000394b0	adr	x9, #0x1d327 ; literal pool for: "b"
00000000000394b4	nop
00000000000394b8	stp	x8, x9, [sp]
00000000000394bc	adr	x2, #0x1d314 ; literal pool for: "%d %s "
00000000000394c0	nop
00000000000394c4	b	0x39554
00000000000394c8	adr	x10, #0x1d313 ; literal pool for: "m"
00000000000394cc	nop
00000000000394d0	adr	x11, #0x1d309 ; literal pool for: "k"
00000000000394d4	nop
00000000000394d8	cmp	x9, #0x100, lsl #12
00000000000394dc	csel	x10, x11, x10, lt
00000000000394e0	mov	w11, #0x100000
00000000000394e4	mov	w12, #0x400
00000000000394e8	csel	x11, x12, x11, lt
00000000000394ec	lsl	x12, x11, #10
00000000000394f0	adr	x13, #0x1d2ed ; literal pool for: "g"
00000000000394f4	nop
00000000000394f8	cmp	x9, x12
00000000000394fc	csel	x9, x10, x13, lt
0000000000039500	csel	x10, x11, x12, lt
0000000000039504	mov	w11, #0xcccd
0000000000039508	movk	w11, #0xcccc, lsl #16
000000000003950c	mul	x10, x10, x11
0000000000039510	lsr	x10, x10, #35
0000000000039514	sdiv	x8, x8, x10
0000000000039518	mov	x10, #0x6666666666666666
000000000003951c	movk	x10, #0x6667
0000000000039520	smulh	x10, x8, x10
0000000000039524	asr	x11, x10, #2
0000000000039528	add	x10, x11, x10, lsr #63
000000000003952c	mov	x11, #-0xa
0000000000039530	madd	x8, x10, x11, x8
0000000000039534	cmp	x8, #0x0
0000000000039538	cneg	x8, x8, mi
000000000003953c	adr	x11, #0x1d29b ; literal pool for: "b"
0000000000039540	nop
0000000000039544	stp	x9, x11, [sp, #0x10]
0000000000039548	stp	x10, x8, [sp]
000000000003954c	adr	x2, #0x1d293 ; literal pool for: "%ld.%ld %s%s"
0000000000039550	nop
0000000000039554	add	x0, sp, #0x20
0000000000039558	mov	w1, #0x20
000000000003955c	bl	0x51d10 ; symbol stub for: _snprintf
0000000000039560	add	x8, sp, #0x20
0000000000039564	str	x8, [sp]
0000000000039568	adr	x2, #0x1d297 ; literal pool for: "%11s"
000000000003956c	nop
0000000000039570	mov	x1, x19
0000000000039574	bl	__mi_fprintf
0000000000039578	ldr	x8, [x20, #0x8]
000000000003957c	cmp	x8, #0x0
0000000000039580	cneg	x9, x8, mi
0000000000039584	cmp	x9, #0x3ff
0000000000039588	b.gt	0x395a4
000000000003958c	adr	x9, #0x1d24b ; literal pool for: "b"
0000000000039590	nop
0000000000039594	stp	x8, x9, [sp]
0000000000039598	adr	x2, #0x1d238 ; literal pool for: "%d %s "
000000000003959c	nop
00000000000395a0	b	0x39630
00000000000395a4	adr	x10, #0x1d237 ; literal pool for: "m"
00000000000395a8	nop
00000000000395ac	adr	x11, #0x1d22d ; literal pool for: "k"
00000000000395b0	nop
00000000000395b4	cmp	x9, #0x100, lsl #12
00000000000395b8	csel	x10, x11, x10, lt
00000000000395bc	mov	w11, #0x100000
00000000000395c0	mov	w12, #0x400
00000000000395c4	csel	x11, x12, x11, lt
00000000000395c8	lsl	x12, x11, #10
00000000000395cc	adr	x13, #0x1d211 ; literal pool for: "g"
00000000000395d0	nop
00000000000395d4	cmp	x9, x12
00000000000395d8	csel	x9, x10, x13, lt
00000000000395dc	csel	x10, x11, x12, lt
00000000000395e0	mov	w11, #0xcccd
00000000000395e4	movk	w11, #0xcccc, lsl #16
00000000000395e8	mul	x10, x10, x11
00000000000395ec	lsr	x10, x10, #35
00000000000395f0	sdiv	x8, x8, x10
00000000000395f4	mov	x10, #0x6666666666666666
00000000000395f8	movk	x10, #0x6667
00000000000395fc	smulh	x10, x8, x10
0000000000039600	asr	x11, x10, #2
0000000000039604	add	x10, x11, x10, lsr #63
0000000000039608	mov	x11, #-0xa
000000000003960c	madd	x8, x10, x11, x8
0000000000039610	cmp	x8, #0x0
0000000000039614	cneg	x8, x8, mi
0000000000039618	adr	x11, #0x1d1bf ; literal pool for: "b"
000000000003961c	nop
0000000000039620	stp	x9, x11, [sp, #0x10]
0000000000039624	stp	x10, x8, [sp]
0000000000039628	adr	x2, #0x1d1b7 ; literal pool for: "%ld.%ld %s%s"
000000000003962c	nop
0000000000039630	add	x0, sp, #0x20
0000000000039634	mov	w1, #0x20
0000000000039638	bl	0x51d10 ; symbol stub for: _snprintf
000000000003963c	add	x8, sp, #0x20
0000000000039640	str	x8, [sp]
0000000000039644	adr	x2, #0x1d1bb ; literal pool for: "%11s"
0000000000039648	nop
000000000003964c	mov	x1, x19
0000000000039650	bl	__mi_fprintf
0000000000039654	ldr	x8, [x20, #0x18]
0000000000039658	cmp	x8, #0x0
000000000003965c	cneg	x9, x8, mi
0000000000039660	cmp	x9, #0x3ff
0000000000039664	b.gt	0x39680
0000000000039668	adr	x9, #0x1d16f ; literal pool for: "b"
000000000003966c	nop
0000000000039670	stp	x8, x9, [sp]
0000000000039674	adr	x2, #0x1d15c ; literal pool for: "%d %s "
0000000000039678	nop
000000000003967c	b	0x3970c
0000000000039680	adr	x10, #0x1d15b ; literal pool for: "m"
0000000000039684	nop
0000000000039688	adr	x11, #0x1d151 ; literal pool for: "k"
000000000003968c	nop
0000000000039690	cmp	x9, #0x100, lsl #12
0000000000039694	csel	x10, x11, x10, lt
0000000000039698	mov	w11, #0x100000
000000000003969c	mov	w12, #0x400
00000000000396a0	csel	x11, x12, x11, lt
00000000000396a4	lsl	x12, x11, #10
00000000000396a8	adr	x13, #0x1d135 ; literal pool for: "g"
00000000000396ac	nop
00000000000396b0	cmp	x9, x12
00000000000396b4	csel	x9, x10, x13, lt
00000000000396b8	csel	x10, x11, x12, lt
00000000000396bc	mov	w11, #0xcccd
00000000000396c0	movk	w11, #0xcccc, lsl #16
00000000000396c4	mul	x10, x10, x11
00000000000396c8	lsr	x10, x10, #35
00000000000396cc	sdiv	x8, x8, x10
00000000000396d0	mov	x10, #0x6666666666666666
00000000000396d4	movk	x10, #0x6667
00000000000396d8	smulh	x10, x8, x10
00000000000396dc	asr	x11, x10, #2
00000000000396e0	add	x10, x11, x10, lsr #63
00000000000396e4	mov	x11, #-0xa
00000000000396e8	madd	x8, x10, x11, x8
00000000000396ec	cmp	x8, #0x0
00000000000396f0	cneg	x8, x8, mi
00000000000396f4	adr	x11, #0x1d0e3 ; literal pool for: "b"
00000000000396f8	nop
00000000000396fc	stp	x9, x11, [sp, #0x10]
0000000000039700	stp	x10, x8, [sp]
0000000000039704	adr	x2, #0x1d0db ; literal pool for: "%ld.%ld %s%s"
0000000000039708	nop
000000000003970c	add	x0, sp, #0x20
0000000000039710	mov	w1, #0x20
0000000000039714	bl	0x51d10 ; symbol stub for: _snprintf
0000000000039718	add	x22, sp, #0x20
000000000003971c	str	x22, [sp]
0000000000039720	adr	x21, #0x1d0df ; literal pool for: "%11s"
0000000000039724	nop
0000000000039728	mov	x1, x19
000000000003972c	mov	x2, x21
0000000000039730	bl	__mi_fprintf
0000000000039734	adr	x8, #0x1d0a3 ; literal pool for: "b"
0000000000039738	nop
000000000003973c	mov	w9, #0x1
0000000000039740	stp	x9, x8, [sp]
0000000000039744	adr	x2, #0x1d08c ; literal pool for: "%d %s "
0000000000039748	nop
000000000003974c	add	x0, sp, #0x20
0000000000039750	mov	w1, #0x20
0000000000039754	bl	0x51d10 ; symbol stub for: _snprintf
0000000000039758	str	x22, [sp]
000000000003975c	mov	x1, x19
0000000000039760	mov	x2, x21
0000000000039764	bl	__mi_fprintf
0000000000039768	adr	x8, #0x1d095 ; literal pool for: " "
000000000003976c	nop
0000000000039770	str	x8, [sp]
0000000000039774	mov	x1, x19
0000000000039778	mov	x2, x21
000000000003977c	bl	__mi_fprintf
0000000000039780	ldp	x8, x9, [x20]
0000000000039784	adr	x10, #0x1d092 ; literal pool for: "  ok\n"
0000000000039788	nop
000000000003978c	adr	x11, #0x1d078 ; literal pool for: "  not all freed!\n"
0000000000039790	nop
0000000000039794	cmp	x8, x9
0000000000039798	csel	x2, x11, x10, gt
000000000003979c	b	0x399dc
00000000000397a0	cmp	x9, #0x3ff
00000000000397a4	b.gt	0x39a00
00000000000397a8	adr	x9, #0x1d055 ; literal pool for: " "
00000000000397ac	nop
00000000000397b0	stp	x8, x9, [sp]
00000000000397b4	adr	x2, #0x1d01c ; literal pool for: "%d %s "
00000000000397b8	nop
00000000000397bc	b	0x39a8c
00000000000397c0	cmp	x9, #0x100, lsl #12
00000000000397c4	csel	x10, x25, x24, lt
00000000000397c8	mov	w11, #0x100000
00000000000397cc	mov	w12, #0x400
00000000000397d0	csel	x11, x12, x11, lt
00000000000397d4	lsl	x12, x11, #10
00000000000397d8	cmp	x9, x12
00000000000397dc	csel	x9, x10, x23, lt
00000000000397e0	csel	x10, x11, x12, lt
00000000000397e4	mov	w11, #0xcccd
00000000000397e8	movk	w11, #0xcccc, lsl #16
00000000000397ec	mul	x10, x10, x11
00000000000397f0	lsr	x10, x10, #35
00000000000397f4	sdiv	x8, x8, x10
00000000000397f8	mov	x10, #0x6666666666666666
00000000000397fc	movk	x10, #0x6667
0000000000039800	smulh	x10, x8, x10
0000000000039804	asr	x11, x10, #2
0000000000039808	add	x10, x11, x10, lsr #63
000000000003980c	mov	x11, #-0xa
0000000000039810	madd	x8, x10, x11, x8
0000000000039814	cmp	x8, #0x0
0000000000039818	cneg	x8, x8, mi
000000000003981c	stp	x9, x22, [sp, #0x10]
0000000000039820	stp	x10, x8, [sp]
0000000000039824	adr	x2, #0x1cfbb ; literal pool for: "%ld.%ld %s%s"
0000000000039828	nop
000000000003982c	add	x0, sp, #0x20
0000000000039830	mov	w1, #0x20
0000000000039834	bl	0x51d10 ; symbol stub for: _snprintf
0000000000039838	add	x8, sp, #0x20
000000000003983c	str	x8, [sp]
0000000000039840	adr	x2, #0x1cfbf ; literal pool for: "%11s"
0000000000039844	nop
0000000000039848	mov	x1, x19
000000000003984c	bl	__mi_fprintf
0000000000039850	ldr	x8, [x20]
0000000000039854	cmp	x8, #0x0
0000000000039858	cneg	x9, x8, mi
000000000003985c	cmp	x9, #0x3ff
0000000000039860	b.gt	0x39874
0000000000039864	stp	x8, x22, [sp]
0000000000039868	adr	x2, #0x1cf68 ; literal pool for: "%d %s "
000000000003986c	nop
0000000000039870	b	0x398e0
0000000000039874	cmp	x9, #0x100, lsl #12
0000000000039878	csel	x10, x25, x24, lt
000000000003987c	mov	w11, #0x100000
0000000000039880	mov	w12, #0x400
0000000000039884	csel	x11, x12, x11, lt
0000000000039888	lsl	x12, x11, #10
000000000003988c	cmp	x9, x12
0000000000039890	csel	x9, x10, x23, lt
0000000000039894	csel	x10, x11, x12, lt
0000000000039898	mov	w11, #0xcccd
000000000003989c	movk	w11, #0xcccc, lsl #16
00000000000398a0	mul	x10, x10, x11
00000000000398a4	lsr	x10, x10, #35
00000000000398a8	sdiv	x8, x8, x10
00000000000398ac	mov	x10, #0x6666666666666666
00000000000398b0	movk	x10, #0x6667
00000000000398b4	smulh	x10, x8, x10
00000000000398b8	asr	x11, x10, #2
00000000000398bc	add	x10, x11, x10, lsr #63
00000000000398c0	mov	x11, #-0xa
00000000000398c4	madd	x8, x10, x11, x8
00000000000398c8	cmp	x8, #0x0
00000000000398cc	cneg	x8, x8, mi
00000000000398d0	stp	x9, x22, [sp, #0x10]
00000000000398d4	stp	x10, x8, [sp]
00000000000398d8	adr	x2, #0x1cf07 ; literal pool for: "%ld.%ld %s%s"
00000000000398dc	nop
00000000000398e0	add	x0, sp, #0x20
00000000000398e4	mov	w1, #0x20
00000000000398e8	bl	0x51d10 ; symbol stub for: _snprintf
00000000000398ec	add	x8, sp, #0x20
00000000000398f0	str	x8, [sp]
00000000000398f4	adr	x21, #0x1cf0b ; literal pool for: "%11s"
00000000000398f8	nop
00000000000398fc	mov	x1, x19
0000000000039900	mov	x2, x21
0000000000039904	bl	__mi_fprintf
0000000000039908	adr	x8, #0x1cef5 ; literal pool for: " "
000000000003990c	nop
0000000000039910	str	x8, [sp]
0000000000039914	mov	x1, x19
0000000000039918	mov	x2, x21
000000000003991c	bl	__mi_fprintf
0000000000039920	ldr	x8, [x20, #0x18]
0000000000039924	cmp	x8, #0x0
0000000000039928	cneg	x9, x8, mi
000000000003992c	cmp	x9, #0x3ff
0000000000039930	b.gt	0x39944
0000000000039934	stp	x8, x22, [sp]
0000000000039938	adr	x2, #0x1ce98 ; literal pool for: "%d %s "
000000000003993c	nop
0000000000039940	b	0x399b0
0000000000039944	cmp	x9, #0x100, lsl #12
0000000000039948	csel	x10, x25, x24, lt
000000000003994c	mov	w11, #0x100000
0000000000039950	mov	w12, #0x400
0000000000039954	csel	x11, x12, x11, lt
0000000000039958	lsl	x12, x11, #10
000000000003995c	cmp	x9, x12
0000000000039960	csel	x9, x10, x23, lt
0000000000039964	csel	x10, x11, x12, lt
0000000000039968	mov	w11, #0xcccd
000000000003996c	movk	w11, #0xcccc, lsl #16
0000000000039970	mul	x10, x10, x11
0000000000039974	lsr	x10, x10, #35
0000000000039978	sdiv	x8, x8, x10
000000000003997c	mov	x10, #0x6666666666666666
0000000000039980	movk	x10, #0x6667
0000000000039984	smulh	x10, x8, x10
0000000000039988	asr	x11, x10, #2
000000000003998c	add	x10, x11, x10, lsr #63
0000000000039990	mov	x11, #-0xa
0000000000039994	madd	x8, x10, x11, x8
0000000000039998	cmp	x8, #0x0
000000000003999c	cneg	x8, x8, mi
00000000000399a0	stp	x9, x22, [sp, #0x10]
00000000000399a4	stp	x10, x8, [sp]
00000000000399a8	adr	x2, #0x1ce37 ; literal pool for: "%ld.%ld %s%s"
00000000000399ac	nop
00000000000399b0	add	x0, sp, #0x20
00000000000399b4	mov	w1, #0x20
00000000000399b8	bl	0x51d10 ; symbol stub for: _snprintf
00000000000399bc	add	x8, sp, #0x20
00000000000399c0	str	x8, [sp]
00000000000399c4	adr	x2, #0x1ce3b ; literal pool for: "%11s"
00000000000399c8	nop
00000000000399cc	mov	x1, x19
00000000000399d0	bl	__mi_fprintf
00000000000399d4	adr	x2, #0x1d2b6 ; literal pool for: "\n"
00000000000399d8	nop
00000000000399dc	mov	x1, x19
00000000000399e0	bl	__mi_fprintf
00000000000399e4	ldp	x29, x30, [sp, #0x80]
00000000000399e8	ldp	x20, x19, [sp, #0x70]
00000000000399ec	ldp	x22, x21, [sp, #0x60]
00000000000399f0	ldp	x24, x23, [sp, #0x50]
00000000000399f4	ldp	x26, x25, [sp, #0x40]
00000000000399f8	add	sp, sp, #0x90
00000000000399fc	ret
0000000000039a00	adr	x10, #0x1cddb ; literal pool for: "m"
0000000000039a04	nop
0000000000039a08	adr	x11, #0x1cdd1 ; literal pool for: "k"
0000000000039a0c	nop
0000000000039a10	cmp	x9, #0x100, lsl #12
0000000000039a14	csel	x10, x11, x10, lt
0000000000039a18	mov	w11, #0x100000
0000000000039a1c	mov	w12, #0x400
0000000000039a20	csel	x11, x12, x11, lt
0000000000039a24	lsl	x12, x11, #10
0000000000039a28	adr	x13, #0x1cdb5 ; literal pool for: "g"
0000000000039a2c	nop
0000000000039a30	cmp	x9, x12
0000000000039a34	csel	x9, x10, x13, lt
0000000000039a38	csel	x10, x11, x12, lt
0000000000039a3c	mov	w11, #0xcccd
0000000000039a40	movk	w11, #0xcccc, lsl #16
0000000000039a44	mul	x10, x10, x11
0000000000039a48	lsr	x10, x10, #35
0000000000039a4c	sdiv	x8, x8, x10
0000000000039a50	mov	x10, #0x6666666666666666
0000000000039a54	movk	x10, #0x6667
0000000000039a58	smulh	x10, x8, x10
0000000000039a5c	asr	x11, x10, #2
0000000000039a60	add	x10, x11, x10, lsr #63
0000000000039a64	mov	x11, #-0xa
0000000000039a68	madd	x8, x10, x11, x8
0000000000039a6c	cmp	x8, #0x0
0000000000039a70	cneg	x8, x8, mi
0000000000039a74	adr	x11, #0x1cd89 ; literal pool for: " "
0000000000039a78	nop
0000000000039a7c	stp	x9, x11, [sp, #0x10]
0000000000039a80	stp	x10, x8, [sp]
0000000000039a84	adr	x2, #0x1cd5b ; literal pool for: "%ld.%ld %s%s"
0000000000039a88	nop
0000000000039a8c	add	x0, sp, #0x20
0000000000039a90	mov	w1, #0x20
0000000000039a94	bl	0x51d10 ; symbol stub for: _snprintf
0000000000039a98	add	x8, sp, #0x20
0000000000039a9c	str	x8, [sp]
0000000000039aa0	adr	x2, #0x1cd5f ; literal pool for: "%11s"
0000000000039aa4	nop
0000000000039aa8	mov	x1, x19
0000000000039aac	bl	__mi_fprintf
0000000000039ab0	ldr	x8, [x20]
0000000000039ab4	cmp	x8, #0x0
0000000000039ab8	cneg	x9, x8, mi
0000000000039abc	cmp	x9, #0x3ff
0000000000039ac0	b.gt	0x39adc
0000000000039ac4	adr	x9, #0x1cd39 ; literal pool for: " "
0000000000039ac8	nop
0000000000039acc	stp	x8, x9, [sp]
0000000000039ad0	adr	x2, #0x1cd00 ; literal pool for: "%d %s "
0000000000039ad4	nop
0000000000039ad8	b	0x39b68
0000000000039adc	adr	x10, #0x1ccff ; literal pool for: "m"
0000000000039ae0	nop
0000000000039ae4	adr	x11, #0x1ccf5 ; literal pool for: "k"
0000000000039ae8	nop
0000000000039aec	cmp	x9, #0x100, lsl #12
0000000000039af0	csel	x10, x11, x10, lt
0000000000039af4	mov	w11, #0x100000
0000000000039af8	mov	w12, #0x400
0000000000039afc	csel	x11, x12, x11, lt
0000000000039b00	lsl	x12, x11, #10
0000000000039b04	adr	x13, #0x1ccd9 ; literal pool for: "g"
0000000000039b08	nop
0000000000039b0c	cmp	x9, x12
0000000000039b10	csel	x9, x10, x13, lt
0000000000039b14	csel	x10, x11, x12, lt
0000000000039b18	mov	w11, #0xcccd
0000000000039b1c	movk	w11, #0xcccc, lsl #16
0000000000039b20	mul	x10, x10, x11
0000000000039b24	lsr	x10, x10, #35
0000000000039b28	sdiv	x8, x8, x10
0000000000039b2c	mov	x10, #0x6666666666666666
0000000000039b30	movk	x10, #0x6667
0000000000039b34	smulh	x10, x8, x10
0000000000039b38	asr	x11, x10, #2
0000000000039b3c	add	x10, x11, x10, lsr #63
0000000000039b40	mov	x11, #-0xa
0000000000039b44	madd	x8, x10, x11, x8
0000000000039b48	cmp	x8, #0x0
0000000000039b4c	cneg	x8, x8, mi
0000000000039b50	adr	x11, #0x1ccad ; literal pool for: " "
0000000000039b54	nop
0000000000039b58	stp	x9, x11, [sp, #0x10]
0000000000039b5c	stp	x10, x8, [sp]
0000000000039b60	adr	x2, #0x1cc7f ; literal pool for: "%ld.%ld %s%s"
0000000000039b64	nop
0000000000039b68	add	x0, sp, #0x20
0000000000039b6c	mov	w1, #0x20
0000000000039b70	bl	0x51d10 ; symbol stub for: _snprintf
0000000000039b74	add	x8, sp, #0x20
0000000000039b78	str	x8, [sp]
0000000000039b7c	adr	x2, #0x1cc83 ; literal pool for: "%11s"
0000000000039b80	nop
0000000000039b84	mov	x1, x19
0000000000039b88	bl	__mi_fprintf
0000000000039b8c	ldr	x8, [x20, #0x8]
0000000000039b90	cmp	x8, #0x0
0000000000039b94	cneg	x9, x8, mi
0000000000039b98	cmp	x9, #0x3ff
0000000000039b9c	b.gt	0x39bb8
0000000000039ba0	adr	x9, #0x1cc5d ; literal pool for: " "
0000000000039ba4	nop
0000000000039ba8	stp	x8, x9, [sp]
0000000000039bac	adr	x2, #0x1cc24 ; literal pool for: "%d %s "
0000000000039bb0	nop
0000000000039bb4	b	0x39c44
0000000000039bb8	adr	x10, #0x1cc23 ; literal pool for: "m"
0000000000039bbc	nop
0000000000039bc0	adr	x11, #0x1cc19 ; literal pool for: "k"
0000000000039bc4	nop
0000000000039bc8	cmp	x9, #0x100, lsl #12
0000000000039bcc	csel	x10, x11, x10, lt
0000000000039bd0	mov	w11, #0x100000
0000000000039bd4	mov	w12, #0x400
0000000000039bd8	csel	x11, x12, x11, lt
0000000000039bdc	lsl	x12, x11, #10
0000000000039be0	adr	x13, #0x1cbfd ; literal pool for: "g"
0000000000039be4	nop
0000000000039be8	cmp	x9, x12
0000000000039bec	csel	x9, x10, x13, lt
0000000000039bf0	csel	x10, x11, x12, lt
0000000000039bf4	mov	w11, #0xcccd
0000000000039bf8	movk	w11, #0xcccc, lsl #16
0000000000039bfc	mul	x10, x10, x11
0000000000039c00	lsr	x10, x10, #35
0000000000039c04	sdiv	x8, x8, x10
0000000000039c08	mov	x10, #0x6666666666666666
0000000000039c0c	movk	x10, #0x6667
0000000000039c10	smulh	x10, x8, x10
0000000000039c14	asr	x11, x10, #2
0000000000039c18	add	x10, x11, x10, lsr #63
0000000000039c1c	mov	x11, #-0xa
0000000000039c20	madd	x8, x10, x11, x8
0000000000039c24	cmp	x8, #0x0
0000000000039c28	cneg	x8, x8, mi
0000000000039c2c	adr	x11, #0x1cbd1 ; literal pool for: " "
0000000000039c30	nop
0000000000039c34	stp	x9, x11, [sp, #0x10]
0000000000039c38	stp	x10, x8, [sp]
0000000000039c3c	adr	x2, #0x1cba3 ; literal pool for: "%ld.%ld %s%s"
0000000000039c40	nop
0000000000039c44	add	x0, sp, #0x20
0000000000039c48	mov	w1, #0x20
0000000000039c4c	bl	0x51d10 ; symbol stub for: _snprintf
0000000000039c50	add	x8, sp, #0x20
0000000000039c54	str	x8, [sp]
0000000000039c58	adr	x2, #0x1cba7 ; literal pool for: "%11s"
0000000000039c5c	nop
0000000000039c60	mov	x1, x19
0000000000039c64	bl	__mi_fprintf
0000000000039c68	ldr	x8, [x20, #0x18]
0000000000039c6c	cmp	x8, #0x0
0000000000039c70	cneg	x9, x8, mi
0000000000039c74	cmp	x9, #0x3ff
0000000000039c78	b.gt	0x39c94
0000000000039c7c	adr	x9, #0x1cb81 ; literal pool for: " "
0000000000039c80	nop
0000000000039c84	stp	x8, x9, [sp]
0000000000039c88	adr	x2, #0x1cb48 ; literal pool for: "%d %s "
0000000000039c8c	nop
0000000000039c90	b	0x39d20
0000000000039c94	adr	x10, #0x1cb47 ; literal pool for: "m"
0000000000039c98	nop
0000000000039c9c	adr	x11, #0x1cb3d ; literal pool for: "k"
0000000000039ca0	nop
0000000000039ca4	cmp	x9, #0x100, lsl #12
0000000000039ca8	csel	x10, x11, x10, lt
0000000000039cac	mov	w11, #0x100000
0000000000039cb0	mov	w12, #0x400
0000000000039cb4	csel	x11, x12, x11, lt
0000000000039cb8	lsl	x12, x11, #10
0000000000039cbc	adr	x13, #0x1cb21 ; literal pool for: "g"
0000000000039cc0	nop
0000000000039cc4	cmp	x9, x12
0000000000039cc8	csel	x9, x10, x13, lt
0000000000039ccc	csel	x10, x11, x12, lt
0000000000039cd0	mov	w11, #0xcccd
0000000000039cd4	movk	w11, #0xcccc, lsl #16
0000000000039cd8	mul	x10, x10, x11
0000000000039cdc	lsr	x10, x10, #35
0000000000039ce0	sdiv	x8, x8, x10
0000000000039ce4	mov	x10, #0x6666666666666666
0000000000039ce8	movk	x10, #0x6667
0000000000039cec	smulh	x10, x8, x10
0000000000039cf0	asr	x11, x10, #2
0000000000039cf4	add	x10, x11, x10, lsr #63
0000000000039cf8	mov	x11, #-0xa
0000000000039cfc	madd	x8, x10, x11, x8
0000000000039d00	cmp	x8, #0x0
0000000000039d04	cneg	x8, x8, mi
0000000000039d08	adr	x11, #0x1caf5 ; literal pool for: " "
0000000000039d0c	nop
0000000000039d10	stp	x9, x11, [sp, #0x10]
0000000000039d14	stp	x10, x8, [sp]
0000000000039d18	adr	x2, #0x1cac7 ; literal pool for: "%ld.%ld %s%s"
0000000000039d1c	nop
0000000000039d20	add	x0, sp, #0x20
0000000000039d24	mov	w1, #0x20
0000000000039d28	bl	0x51d10 ; symbol stub for: _snprintf
0000000000039d2c	add	x8, sp, #0x20
0000000000039d30	str	x8, [sp]
0000000000039d34	adr	x2, #0x1cacb ; literal pool for: "%11s"
0000000000039d38	nop
0000000000039d3c	mov	x1, x19
0000000000039d40	bl	__mi_fprintf
0000000000039d44	adr	x8, #0x1cc96 ; literal pool for: ""
0000000000039d48	nop
0000000000039d4c	str	x8, [sp]
0000000000039d50	adr	x2, #0x1cacc ; literal pool for: "%22s"
0000000000039d54	nop
0000000000039d58	mov	x1, x19
0000000000039d5c	b	0x3977c
_mi_stat_counter_print:
0000000000039d60	sub	sp, sp, #0x60
0000000000039d64	stp	x20, x19, [sp, #0x40]
0000000000039d68	stp	x29, x30, [sp, #0x50]
0000000000039d6c	add	x29, sp, #0x50
0000000000039d70	mov	x19, x2
0000000000039d74	mov	x20, x0
0000000000039d78	str	x1, [sp]
0000000000039d7c	adr	x2, #0x1ca7b ; literal pool for: "%10s:"
0000000000039d80	nop
0000000000039d84	mov	x1, x19
0000000000039d88	bl	__mi_fprintf
0000000000039d8c	ldr	x8, [x20]
0000000000039d90	cmp	x8, #0x0
0000000000039d94	cneg	x9, x8, mi
0000000000039d98	cmp	x9, #0x3ff
0000000000039d9c	b.gt	0x39db8
0000000000039da0	adr	x9, #0x1ca5d ; literal pool for: " "
0000000000039da4	nop
0000000000039da8	stp	x8, x9, [sp]
0000000000039dac	adr	x2, #0x1ca24 ; literal pool for: "%d %s "
0000000000039db0	nop
0000000000039db4	b	0x39e44
0000000000039db8	adr	x10, #0x1ca23 ; literal pool for: "m"
0000000000039dbc	nop
0000000000039dc0	adr	x11, #0x1ca19 ; literal pool for: "k"
0000000000039dc4	nop
0000000000039dc8	cmp	x9, #0x100, lsl #12
0000000000039dcc	csel	x10, x11, x10, lt
0000000000039dd0	mov	w11, #0x100000
0000000000039dd4	mov	w12, #0x400
0000000000039dd8	csel	x11, x12, x11, lt
0000000000039ddc	lsl	x12, x11, #10
0000000000039de0	adr	x13, #0x1c9fd ; literal pool for: "g"
0000000000039de4	nop
0000000000039de8	cmp	x9, x12
0000000000039dec	csel	x9, x10, x13, lt
0000000000039df0	csel	x10, x11, x12, lt
0000000000039df4	mov	w11, #0xcccd
0000000000039df8	movk	w11, #0xcccc, lsl #16
0000000000039dfc	mul	x10, x10, x11
0000000000039e00	lsr	x10, x10, #35
0000000000039e04	sdiv	x8, x8, x10
0000000000039e08	mov	x10, #0x6666666666666666
0000000000039e0c	movk	x10, #0x6667
0000000000039e10	smulh	x10, x8, x10
0000000000039e14	asr	x11, x10, #2
0000000000039e18	add	x10, x11, x10, lsr #63
0000000000039e1c	mov	x11, #-0xa
0000000000039e20	madd	x8, x10, x11, x8
0000000000039e24	cmp	x8, #0x0
0000000000039e28	cneg	x8, x8, mi
0000000000039e2c	adr	x11, #0x1c9d1 ; literal pool for: " "
0000000000039e30	nop
0000000000039e34	stp	x9, x11, [sp, #0x10]
0000000000039e38	stp	x10, x8, [sp]
0000000000039e3c	adr	x2, #0x1c9a3 ; literal pool for: "%ld.%ld %s%s"
0000000000039e40	nop
0000000000039e44	add	x0, sp, #0x20
0000000000039e48	mov	w1, #0x20
0000000000039e4c	bl	0x51d10 ; symbol stub for: _snprintf
0000000000039e50	add	x8, sp, #0x20
0000000000039e54	str	x8, [sp]
0000000000039e58	adr	x2, #0x1c9a7 ; literal pool for: "%11s"
0000000000039e5c	nop
0000000000039e60	mov	x1, x19
0000000000039e64	bl	__mi_fprintf
0000000000039e68	adr	x2, #0x1ce22 ; literal pool for: "\n"
0000000000039e6c	nop
0000000000039e70	mov	x1, x19
0000000000039e74	bl	__mi_fprintf
0000000000039e78	ldp	x29, x30, [sp, #0x50]
0000000000039e7c	ldp	x20, x19, [sp, #0x40]
0000000000039e80	add	sp, sp, #0x60
0000000000039e84	ret
_chacha_block:
0000000000039e88	stp	x20, x19, [sp, #-0x10]!
0000000000039e8c	ldp	w15, w16, [x0]
0000000000039e90	ldp	w17, w2, [x0, #0x8]
0000000000039e94	ldp	w7, w12, [x0, #0x10]
0000000000039e98	ldp	w13, w14, [x0, #0x18]
0000000000039e9c	ldp	w5, w6, [x0, #0x20]
0000000000039ea0	ldp	w9, w10, [x0, #0x28]
0000000000039ea4	ldp	w1, w3, [x0, #0x30]
0000000000039ea8	mov	x11, #-0x2
0000000000039eac	ldp	w4, w8, [x0, #0x38]
0000000000039eb0	add	w15, w15, w7
0000000000039eb4	eor	w1, w1, w15
0000000000039eb8	ror	w1, w1, #0x10
0000000000039ebc	add	w5, w1, w5
0000000000039ec0	eor	w7, w5, w7
0000000000039ec4	ror	w7, w7, #0x14
0000000000039ec8	add	w15, w7, w15
0000000000039ecc	eor	w1, w15, w1
0000000000039ed0	ror	w1, w1, #0x18
0000000000039ed4	add	w5, w1, w5
0000000000039ed8	eor	w7, w5, w7
0000000000039edc	ror	w7, w7, #0x19
0000000000039ee0	add	w16, w16, w12
0000000000039ee4	eor	w3, w3, w16
0000000000039ee8	ror	w3, w3, #0x10
0000000000039eec	add	w6, w3, w6
0000000000039ef0	eor	w12, w6, w12
0000000000039ef4	ror	w12, w12, #0x14
0000000000039ef8	add	w16, w12, w16
0000000000039efc	eor	w3, w16, w3
0000000000039f00	ror	w3, w3, #0x18
0000000000039f04	add	w6, w3, w6
0000000000039f08	eor	w12, w6, w12
0000000000039f0c	ror	w12, w12, #0x19
0000000000039f10	add	w17, w17, w13
0000000000039f14	eor	w4, w4, w17
0000000000039f18	ror	w4, w4, #0x10
0000000000039f1c	add	w9, w4, w9
0000000000039f20	eor	w13, w9, w13
0000000000039f24	ror	w13, w13, #0x14
0000000000039f28	add	w17, w13, w17
0000000000039f2c	eor	w4, w17, w4
0000000000039f30	ror	w4, w4, #0x18
0000000000039f34	add	w9, w4, w9
0000000000039f38	eor	w13, w9, w13
0000000000039f3c	ror	w13, w13, #0x19
0000000000039f40	add	w2, w2, w14
0000000000039f44	eor	w8, w8, w2
0000000000039f48	ror	w8, w8, #0x10
0000000000039f4c	add	w10, w8, w10
0000000000039f50	eor	w14, w10, w14
0000000000039f54	ror	w14, w14, #0x14
0000000000039f58	add	w2, w14, w2
0000000000039f5c	eor	w8, w2, w8
0000000000039f60	ror	w8, w8, #0x18
0000000000039f64	add	w10, w8, w10
0000000000039f68	eor	w14, w10, w14
0000000000039f6c	ror	w14, w14, #0x19
0000000000039f70	add	w15, w12, w15
0000000000039f74	eor	w8, w8, w15
0000000000039f78	ror	w8, w8, #0x10
0000000000039f7c	add	w9, w8, w9
0000000000039f80	eor	w12, w9, w12
0000000000039f84	ror	w12, w12, #0x14
0000000000039f88	add	w15, w12, w15
0000000000039f8c	eor	w8, w15, w8
0000000000039f90	ror	w8, w8, #0x18
0000000000039f94	add	w9, w8, w9
0000000000039f98	eor	w12, w9, w12
0000000000039f9c	ror	w12, w12, #0x19
0000000000039fa0	add	w16, w13, w16
0000000000039fa4	eor	w1, w16, w1
0000000000039fa8	ror	w1, w1, #0x10
0000000000039fac	add	w10, w10, w1
0000000000039fb0	eor	w13, w10, w13
0000000000039fb4	ror	w13, w13, #0x14
0000000000039fb8	add	w16, w13, w16
0000000000039fbc	eor	w1, w16, w1
0000000000039fc0	ror	w1, w1, #0x18
0000000000039fc4	add	w10, w1, w10
0000000000039fc8	eor	w13, w10, w13
0000000000039fcc	ror	w13, w13, #0x19
0000000000039fd0	add	w17, w14, w17
0000000000039fd4	eor	w3, w17, w3
0000000000039fd8	ror	w3, w3, #0x10
0000000000039fdc	add	w5, w3, w5
0000000000039fe0	eor	w14, w5, w14
0000000000039fe4	ror	w14, w14, #0x14
0000000000039fe8	add	w17, w14, w17
0000000000039fec	eor	w3, w17, w3
0000000000039ff0	ror	w3, w3, #0x18
0000000000039ff4	add	w5, w3, w5
0000000000039ff8	eor	w14, w5, w14
0000000000039ffc	ror	w14, w14, #0x19
000000000003a000	add	w2, w2, w7
000000000003a004	eor	w4, w2, w4
000000000003a008	ror	w4, w4, #0x10
000000000003a00c	add	w6, w4, w6
000000000003a010	eor	w7, w6, w7
000000000003a014	ror	w7, w7, #0x14
000000000003a018	add	w2, w7, w2
000000000003a01c	eor	w4, w2, w4
000000000003a020	ror	w4, w4, #0x18
000000000003a024	add	w6, w4, w6
000000000003a028	eor	w7, w6, w7
000000000003a02c	ror	w7, w7, #0x19
000000000003a030	add	x11, x11, #0x2
000000000003a034	cmp	x11, #0x12
000000000003a038	b.lo	0x39eb0
000000000003a03c	ldp	w11, w19, [x0]
000000000003a040	add	w11, w11, w15
000000000003a044	add	w15, w19, w16
000000000003a048	stp	w11, w15, [x0, #0x40]
000000000003a04c	ldp	w11, w15, [x0, #0x8]
000000000003a050	add	w11, w11, w17
000000000003a054	add	w15, w15, w2
000000000003a058	stp	w11, w15, [x0, #0x48]
000000000003a05c	ldp	w11, w15, [x0, #0x10]
000000000003a060	add	w11, w11, w7
000000000003a064	add	w12, w15, w12
000000000003a068	stp	w11, w12, [x0, #0x50]
000000000003a06c	ldp	w11, w12, [x0, #0x18]
000000000003a070	add	w11, w11, w13
000000000003a074	add	w12, w12, w14
000000000003a078	stp	w11, w12, [x0, #0x58]
000000000003a07c	ldp	w11, w12, [x0, #0x20]
000000000003a080	add	w11, w11, w5
000000000003a084	add	w12, w12, w6
000000000003a088	stp	w11, w12, [x0, #0x60]
000000000003a08c	ldp	w11, w12, [x0, #0x28]
000000000003a090	add	w9, w11, w9
000000000003a094	add	w10, w12, w10
000000000003a098	stp	w9, w10, [x0, #0x68]
000000000003a09c	ldp	w11, w10, [x0, #0x30]
000000000003a0a0	add	w9, w11, w1
000000000003a0a4	add	w12, w10, w3
000000000003a0a8	stp	w9, w12, [x0, #0x70]
000000000003a0ac	ldp	w9, w12, [x0, #0x38]
000000000003a0b0	add	w13, w9, w4
000000000003a0b4	add	w8, w12, w8
000000000003a0b8	stp	w13, w8, [x0, #0x78]
000000000003a0bc	mov	w8, #0x10
000000000003a0c0	str	w8, [x0, #0x80]
000000000003a0c4	adds	w8, w11, #0x1
000000000003a0c8	str	w8, [x0, #0x30]
000000000003a0cc	b.lo	0x3a0e4
000000000003a0d0	adds	w8, w10, #0x1
000000000003a0d4	str	w8, [x0, #0x34]
000000000003a0d8	b.lo	0x3a0e4
000000000003a0dc	add	w8, w9, #0x1
000000000003a0e0	str	w8, [x0, #0x38]
000000000003a0e4	ldp	x20, x19, [sp], #0x10
000000000003a0e8	ret
__mi_malloc_generic:
000000000003a0ec	sub	sp, sp, #0x70
000000000003a0f0	stp	x28, x27, [sp, #0x10]
000000000003a0f4	stp	x26, x25, [sp, #0x20]
000000000003a0f8	stp	x24, x23, [sp, #0x30]
000000000003a0fc	stp	x22, x21, [sp, #0x40]
000000000003a100	stp	x20, x19, [sp, #0x50]
000000000003a104	stp	x29, x30, [sp, #0x60]
000000000003a108	add	x29, sp, #0x60
000000000003a10c	mov	x19, x1
000000000003a110	mov	x21, x0
000000000003a114	adr	x22, #0x2cd6c
000000000003a118	nop
000000000003a11c	adrp	x20, 50 ; 0x6c000
000000000003a120	add	x20, x20, #0xbc8
000000000003a124	ldr	x23, [x20]
000000000003a128	adrp	x24, 76 ; 0x86000
000000000003a12c	mov	w25, #0x1
000000000003a130	adr	x26, #0x4cb58
000000000003a134	nop
000000000003a138	cmp	x21, x22
000000000003a13c	b.eq	0x3a1e8
000000000003a140	ldr	x8, [x21]
000000000003a144	ldr	x9, [x8]
000000000003a148	add	x1, x9, #0x1
000000000003a14c	str	x1, [x8]
000000000003a150	ldr	x9, [x24, #0xc88]
000000000003a154	cbz	x9, 0x3a180
000000000003a158	ldrb	w9, [x8, #0x8]
000000000003a15c	cbnz	w9, 0x3a180
000000000003a160	strb	w25, [x8, #0x8]
000000000003a164	mov	x8, x26
000000000003a168	ldr	x9, [x8], #0x8
000000000003a16c	ldr	x2, [x8]
000000000003a170	mov	w0, #0x0
000000000003a174	blr	x9
000000000003a178	ldr	x8, [x21]
000000000003a17c	strb	wzr, [x8, #0x8]
000000000003a180	add	x8, x21, #0xb18
000000000003a184	ldr	x9, [x21, #0xb18]
000000000003a188	b	0x3a198
000000000003a18c	clrex
000000000003a190	mov	w10, #0x0
000000000003a194	cbnz	w10, 0x3a1bc
000000000003a198	cbz	x9, 0x3a1cc
000000000003a19c	mov	x0, x9
000000000003a1a0	ldaxr	x9, [x8]
000000000003a1a4	cmp	x9, x0
000000000003a1a8	b.ne	0x3a18c
000000000003a1ac	stlxr	w10, xzr, [x8]
000000000003a1b0	cbnz	w10, 0x3a190
000000000003a1b4	mov	w10, #0x1
000000000003a1b8	cbz	w10, 0x3a198
000000000003a1bc	ldr	x27, [x0]
000000000003a1c0	bl	__mi_free_delayed_block
000000000003a1c4	mov	x0, x27
000000000003a1c8	cbnz	x27, 0x3a1bc
000000000003a1cc	mov	x0, x21
000000000003a1d0	mov	x1, x19
000000000003a1d4	bl	_mi_find_page
000000000003a1d8	cbz	x0, 0x3a204
000000000003a1dc	ldr	x8, [x0, #0x8]
000000000003a1e0	cbnz	x8, 0x3a23c
000000000003a1e4	b	0x3a138
000000000003a1e8	bl	_mi_thread_init
000000000003a1ec	mov	x0, x20
000000000003a1f0	blr	x23
000000000003a1f4	ldr	x21, [x0]
000000000003a1f8	cmp	x21, x22
000000000003a1fc	b.ne	0x3a140
000000000003a200	b	0x3a274
000000000003a204	mov	x0, x21
000000000003a208	mov	w1, #0x1
000000000003a20c	bl	_mi_heap_collect_ex
000000000003a210	mov	x0, x21
000000000003a214	mov	x1, x19
000000000003a218	bl	_mi_find_page
000000000003a21c	cbnz	x0, 0x3a1dc
000000000003a220	str	x19, [sp]
000000000003a224	adr	x1, #0x1c5fd ; literal pool for: "unable to allocate memory (%zu bytes)\n"
000000000003a228	nop
000000000003a22c	mov	w0, #0xc
000000000003a230	bl	__mi_error_message
000000000003a234	mov	x8, #0x0
000000000003a238	b	0x3a250
000000000003a23c	ldr	w9, [x0, #0x10]
000000000003a240	add	w9, w9, #0x1
000000000003a244	str	w9, [x0, #0x10]
000000000003a248	ldr	x9, [x8]
000000000003a24c	str	x9, [x0, #0x8]
000000000003a250	mov	x0, x8
000000000003a254	ldp	x29, x30, [sp, #0x60]
000000000003a258	ldp	x20, x19, [sp, #0x50]
000000000003a25c	ldp	x22, x21, [sp, #0x40]
000000000003a260	ldp	x24, x23, [sp, #0x30]
000000000003a264	ldp	x26, x25, [sp, #0x20]
000000000003a268	ldp	x28, x27, [sp, #0x10]
000000000003a26c	add	sp, sp, #0x70
000000000003a270	ret
000000000003a274	mov	x8, #0x0
000000000003a278	b	0x3a250
_mi_find_page:
000000000003a27c	sub	sp, sp, #0x40
000000000003a280	stp	x22, x21, [sp, #0x10]
000000000003a284	stp	x20, x19, [sp, #0x20]
000000000003a288	stp	x29, x30, [sp, #0x30]
000000000003a28c	add	x29, sp, #0x30
000000000003a290	mov	x20, x0
000000000003a294	cmp	x1, #0x200, lsl #12
000000000003a298	b.hi	0x3a44c
000000000003a29c	cmp	x1, #0x9
000000000003a2a0	b.hs	0x3a2c0
000000000003a2a4	mov	w8, #0x1
000000000003a2a8	and	x8, x8, #0xff
000000000003a2ac	mov	w9, #0x18
000000000003a2b0	madd	x21, x8, x9, x20
000000000003a2b4	ldr	x19, [x21, #0x410]
000000000003a2b8	cbnz	x19, 0x3a32c
000000000003a2bc	b	0x3a42c
000000000003a2c0	add	x8, x1, #0x7
000000000003a2c4	lsr	x8, x8, #3
000000000003a2c8	cmp	x1, #0x40
000000000003a2cc	b.hi	0x3a2f0
000000000003a2d0	add	w8, w8, #0x1
000000000003a2d4	and	x8, x8, #0xfe
000000000003a2d8	and	x8, x8, #0xff
000000000003a2dc	mov	w9, #0x18
000000000003a2e0	madd	x21, x8, x9, x20
000000000003a2e4	ldr	x19, [x21, #0x410]
000000000003a2e8	cbnz	x19, 0x3a32c
000000000003a2ec	b	0x3a42c
000000000003a2f0	sub	x8, x8, #0x1
000000000003a2f4	clz	x9, x8
000000000003a2f8	mov	w10, #0x3f
000000000003a2fc	sub	w9, w10, w9
000000000003a300	and	w9, w9, #0xff
000000000003a304	sub	w10, w9, #0x2
000000000003a308	lsr	x8, x8, x10
000000000003a30c	and	w8, w8, #0x3
000000000003a310	bfi	w8, w9, #2, #8
000000000003a314	add	w8, w8, #0xfd
000000000003a318	and	x8, x8, #0xff
000000000003a31c	mov	w9, #0x18
000000000003a320	madd	x21, x8, x9, x20
000000000003a324	ldr	x19, [x21, #0x410]
000000000003a328	cbz	x19, 0x3a42c
000000000003a32c	ldr	x8, [x19, #0x20]
000000000003a330	cmp	x8, #0x4
000000000003a334	b.lo	0x3a3b8
000000000003a338	add	x8, x19, #0x20
000000000003a33c	ldr	x9, [x8]
000000000003a340	b	0x3a350
000000000003a344	clrex
000000000003a348	mov	w11, #0x0
000000000003a34c	cbnz	w11, 0x3a374
000000000003a350	mov	x10, x9
000000000003a354	ldaxr	x9, [x8]
000000000003a358	cmp	x9, x10
000000000003a35c	b.ne	0x3a344
000000000003a360	and	x11, x10, #0x3
000000000003a364	stlxr	w12, x11, [x8]
000000000003a368	cbnz	w12, 0x3a348
000000000003a36c	mov	w11, #0x1
000000000003a370	cbz	w11, 0x3a350
000000000003a374	ands	x8, x10, #0xfffffffffffffffc
000000000003a378	b.eq	0x3a3b8
000000000003a37c	mov	w9, #0x0
000000000003a380	ldrh	w10, [x19, #0x2]
000000000003a384	mov	x12, x8
000000000003a388	mov	x11, x12
000000000003a38c	add	w9, w9, #0x1
000000000003a390	ldr	x12, [x12]
000000000003a394	cmp	w9, w10
000000000003a398	ccmp	x12, #0x0, #0x4, ls
000000000003a39c	b.ne	0x3a388
000000000003a3a0	cmp	w9, w10
000000000003a3a4	b.ls	0x3a3e0
000000000003a3a8	adr	x1, #0x1c280 ; literal pool for: "corrupted thread-free list\n"
000000000003a3ac	nop
000000000003a3b0	mov	w0, #0xe
000000000003a3b4	bl	__mi_error_message
000000000003a3b8	ldr	x8, [x19, #0x18]
000000000003a3bc	ldr	x9, [x19, #0x8]
000000000003a3c0	cbz	x8, 0x3a404
000000000003a3c4	cbnz	x9, 0x3a408
000000000003a3c8	str	x8, [x19, #0x8]
000000000003a3cc	str	xzr, [x19, #0x18]
000000000003a3d0	ldrb	w8, [x19, #0x7]
000000000003a3d4	and	w8, w8, #0xfe
000000000003a3d8	strb	w8, [x19, #0x7]
000000000003a3dc	b	0x3a408
000000000003a3e0	ldr	x10, [x19, #0x18]
000000000003a3e4	str	x10, [x11]
000000000003a3e8	str	x8, [x19, #0x18]
000000000003a3ec	ldr	w8, [x19, #0x10]
000000000003a3f0	sub	w8, w8, w9
000000000003a3f4	str	w8, [x19, #0x10]
000000000003a3f8	ldr	x8, [x19, #0x18]
000000000003a3fc	ldr	x9, [x19, #0x8]
000000000003a400	cbnz	x8, 0x3a3c4
000000000003a404	cbz	x9, 0x3a42c
000000000003a408	ldrb	w8, [x19, #0x7]
000000000003a40c	and	w8, w8, #0x1
000000000003a410	strb	w8, [x19, #0x7]
000000000003a414	mov	x0, x19
000000000003a418	ldp	x29, x30, [sp, #0x30]
000000000003a41c	ldp	x20, x19, [sp, #0x20]
000000000003a420	ldp	x22, x21, [sp, #0x10]
000000000003a424	add	sp, sp, #0x40
000000000003a428	ret
000000000003a42c	add	x1, x21, #0x410
000000000003a430	mov	x0, x20
000000000003a434	mov	w2, #0x1
000000000003a438	ldp	x29, x30, [sp, #0x30]
000000000003a43c	ldp	x20, x19, [sp, #0x20]
000000000003a440	ldp	x22, x21, [sp, #0x10]
000000000003a444	add	sp, sp, #0x40
000000000003a448	b	_mi_page_queue_find_free_ex
000000000003a44c	tbnz	x1, #0x3f, 0x3a5ac
000000000003a450	lsr	x8, x1, #25
000000000003a454	cmp	x8, #0x0
000000000003a458	mov	w8, #0x400000
000000000003a45c	mov	w9, #0x100000
000000000003a460	csel	x8, x9, x8, eq
000000000003a464	cmp	x1, #0x800, lsl #12
000000000003a468	mov	w9, #0x40000
000000000003a46c	csel	x8, x9, x8, lo
000000000003a470	mvn	x9, x8
000000000003a474	add	x10, x1, x8
000000000003a478	sub	x10, x10, #0x1
000000000003a47c	neg	x8, x8
000000000003a480	and	x8, x10, x8
000000000003a484	cmp	x9, x1
000000000003a488	csel	x2, x8, x1, hi
000000000003a48c	mov	x0, x20
000000000003a490	mov	x1, #0x0
000000000003a494	bl	_mi_page_fresh_alloc
000000000003a498	mov	x19, x0
000000000003a49c	cbz	x0, 0x3a414
000000000003a4a0	ldr	w8, [x19, #0x14]
000000000003a4a4	ubfx	x9, x8, #26, #6
000000000003a4a8	cbnz	w9, 0x3a5dc
000000000003a4ac	mov	x1, x8
000000000003a4b0	add	x8, x19, #0x28
000000000003a4b4	stlr	xzr, [x8]
000000000003a4b8	ldr	x8, [x20]
000000000003a4bc	mov	w9, #0x1
000000000003a4c0	movk	w9, #0x400, lsl #16
000000000003a4c4	cmp	x1, x9
000000000003a4c8	b.lo	0x3a524
000000000003a4cc	add	x0, x8, #0x210
000000000003a4d0	bl	__mi_stat_increase
000000000003a4d4	ldr	x9, [x20]
000000000003a4d8	add	x8, x9, #0x2e0
000000000003a4dc	adr	x10, #0x4cb64
000000000003a4e0	nop
000000000003a4e4	add	x9, x9, #0x2e8
000000000003a4e8	cmp	x8, x10
000000000003a4ec	b.lo	0x3a57c
000000000003a4f0	adr	x10, #0x4cd90
000000000003a4f4	nop
000000000003a4f8	cmp	x8, x10
000000000003a4fc	b.hs	0x3a57c
000000000003a500	ldxr	x10, [x9]
000000000003a504	add	x10, x10, #0x1
000000000003a508	stxr	w11, x10, [x9]
000000000003a50c	cbnz	w11, 0x3a500
000000000003a510	ldxr	x9, [x8]
000000000003a514	add	x9, x9, #0x1
000000000003a518	stxr	w10, x9, [x8]
000000000003a51c	cbnz	w10, 0x3a510
000000000003a520	b	0x3a414
000000000003a524	add	x0, x8, #0x1f0
000000000003a528	bl	__mi_stat_increase
000000000003a52c	ldr	x9, [x20]
000000000003a530	add	x8, x9, #0x2d0
000000000003a534	adr	x10, #0x4cb0c
000000000003a538	nop
000000000003a53c	add	x9, x9, #0x2d8
000000000003a540	cmp	x8, x10
000000000003a544	b.lo	0x3a57c
000000000003a548	adr	x10, #0x4cd38
000000000003a54c	nop
000000000003a550	cmp	x8, x10
000000000003a554	b.hs	0x3a57c
000000000003a558	ldxr	x10, [x9]
000000000003a55c	add	x10, x10, #0x1
000000000003a560	stxr	w11, x10, [x9]
000000000003a564	cbnz	w11, 0x3a558
000000000003a568	ldxr	x9, [x8]
000000000003a56c	add	x9, x9, #0x1
000000000003a570	stxr	w10, x9, [x8]
000000000003a574	cbnz	w10, 0x3a568
000000000003a578	b	0x3a414
000000000003a57c	ldr	x10, [x9]
000000000003a580	add	x10, x10, #0x1
000000000003a584	str	x10, [x9]
000000000003a588	ldr	x9, [x8]
000000000003a58c	add	x9, x9, #0x1
000000000003a590	str	x9, [x8]
000000000003a594	mov	x0, x19
000000000003a598	ldp	x29, x30, [sp, #0x30]
000000000003a59c	ldp	x20, x19, [sp, #0x20]
000000000003a5a0	ldp	x22, x21, [sp, #0x10]
000000000003a5a4	add	sp, sp, #0x40
000000000003a5a8	ret
000000000003a5ac	str	x1, [sp]
000000000003a5b0	adr	x1, #0x1c298 ; literal pool for: "allocation request is too large (%zu bytes)\n"
000000000003a5b4	nop
000000000003a5b8	mov	w0, #0x54
000000000003a5bc	bl	__mi_error_message
000000000003a5c0	mov	x19, #0x0
000000000003a5c4	mov	x0, x19
000000000003a5c8	ldp	x29, x30, [sp, #0x30]
000000000003a5cc	ldp	x20, x19, [sp, #0x20]
000000000003a5d0	ldp	x22, x21, [sp, #0x10]
000000000003a5d4	add	sp, sp, #0x40
000000000003a5d8	ret
000000000003a5dc	and	x9, x19, #0xffffffffffc00000
000000000003a5e0	ldr	w10, [x9, #0x70]
000000000003a5e4	cmp	w10, #0x3
000000000003a5e8	b.ne	0x3a5f4
000000000003a5ec	ldr	x11, [x9, #0x48]
000000000003a5f0	b	0x3a600
000000000003a5f4	ldr	x11, [x9, #0x60]
000000000003a5f8	mov	w12, #0x1
000000000003a5fc	lsl	x11, x12, x11
000000000003a600	ldrb	w12, [x19]
000000000003a604	cbz	x12, 0x3a610
000000000003a608	mov	x1, x11
000000000003a60c	b	0x3a4b0
000000000003a610	ldr	x13, [x9, #0x50]
000000000003a614	sub	x1, x11, x13
000000000003a618	cmp	w10, #0x1
000000000003a61c	ccmp	w8, #0x0, #0x4, ls
000000000003a620	b.eq	0x3a4b0
000000000003a624	madd	x9, x11, x12, x9
000000000003a628	add	x9, x9, x13
000000000003a62c	udiv	x10, x9, x8
000000000003a630	neg	x9, x9
000000000003a634	madd	x9, x10, x8, x9
000000000003a638	add	x9, x8, x9
000000000003a63c	cmp	x9, x8
000000000003a640	csel	x8, x9, xzr, lo
000000000003a644	sub	x1, x1, x8
000000000003a648	b	0x3a4b0
_mi_page_fresh_alloc:
000000000003a64c	sub	sp, sp, #0x70
000000000003a650	stp	x28, x27, [sp, #0x10]
000000000003a654	stp	x26, x25, [sp, #0x20]
000000000003a658	stp	x24, x23, [sp, #0x30]
000000000003a65c	stp	x22, x21, [sp, #0x40]
000000000003a660	stp	x20, x19, [sp, #0x50]
000000000003a664	stp	x29, x30, [sp, #0x60]
000000000003a668	add	x29, sp, #0x60
000000000003a66c	mov	x22, x2
000000000003a670	mov	x20, x1
000000000003a674	mov	x19, x0
000000000003a678	ldr	x23, [x0]
000000000003a67c	add	x21, x23, #0x20
000000000003a680	add	x5, x23, #0xa0
000000000003a684	cmp	x2, #0x4, lsl #12
000000000003a688	b.hi	0x3a6b8
000000000003a68c	ldr	x0, [x21]
000000000003a690	cbnz	x0, 0x3a8ec
000000000003a694	mov	x0, x19
000000000003a698	mov	x1, x22
000000000003a69c	mov	w2, #0x0
000000000003a6a0	mov	w3, #0x10
000000000003a6a4	mov	x4, x21
000000000003a6a8	bl	_mi_segment_reclaim_or_alloc
000000000003a6ac	cbz	x0, 0x3a798
000000000003a6b0	ldr	x0, [x21]
000000000003a6b4	b	0x3a8ec
000000000003a6b8	cmp	x22, #0x20, lsl #12
000000000003a6bc	b.hi	0x3a6ec
000000000003a6c0	ldr	x0, [x23, #0x30]
000000000003a6c4	cbnz	x0, 0x3a8ec
000000000003a6c8	mov	x0, x19
000000000003a6cc	mov	x1, x22
000000000003a6d0	mov	w2, #0x1
000000000003a6d4	mov	w3, #0x13
000000000003a6d8	mov	x4, x21
000000000003a6dc	bl	_mi_segment_reclaim_or_alloc
000000000003a6e0	cbz	x0, 0x3a798
000000000003a6e4	ldr	x0, [x23, #0x30]
000000000003a6e8	b	0x3a8ec
000000000003a6ec	mov	w8, #0x1
000000000003a6f0	movk	w8, #0x2, lsl #16
000000000003a6f4	add	x8, x8, #0x1e0, lsl #12
000000000003a6f8	cmp	x22, x8
000000000003a6fc	b.hs	0x3a720
000000000003a700	mov	x0, x19
000000000003a704	mov	x1, x22
000000000003a708	mov	w2, #0x2
000000000003a70c	mov	w3, #0x16
000000000003a710	mov	x4, x21
000000000003a714	bl	_mi_segment_reclaim_or_alloc
000000000003a718	cbnz	x0, 0x3a8ec
000000000003a71c	b	0x3a798
000000000003a720	mov	x0, #0x0
000000000003a724	mov	x1, x22
000000000003a728	mov	w2, #0x3
000000000003a72c	mov	w3, #0x16
000000000003a730	mov	x4, x21
000000000003a734	bl	_mi_segment_init
000000000003a738	cbz	x0, 0x3a798
000000000003a73c	add	x8, x0, #0x68
000000000003a740	stlr	xzr, [x8]
000000000003a744	ldr	x8, [x0, #0x48]
000000000003a748	ldr	x9, [x23, #0x90]
000000000003a74c	adr	x10, #0x4c8f4
000000000003a750	nop
000000000003a754	cmp	x9, x10
000000000003a758	cset	w11, hs
000000000003a75c	add	x10, x10, #0x240
000000000003a760	cmp	x9, x10
000000000003a764	cset	w10, lo
000000000003a768	and	w10, w11, w10
000000000003a76c	add	x12, x9, #0x18
000000000003a770	cmp	x8, #0x0
000000000003a774	b.le	0x3a800
000000000003a778	cbz	w10, 0x3a870
000000000003a77c	ldxr	x10, [x12]
000000000003a780	sub	x10, x10, #0x1
000000000003a784	stxr	w11, x10, [x12]
000000000003a788	cbnz	w11, 0x3a77c
000000000003a78c	add	x11, x9, #0x10
000000000003a790	ldr	x13, [x9, #0x10]
000000000003a794	b	0x3a7bc
000000000003a798	mov	x21, #0x0
000000000003a79c	mov	w0, #0xa
000000000003a7a0	bl	_mi_option_get
000000000003a7a4	cbnz	x0, 0x3a904
000000000003a7a8	b	0x3a9e8
000000000003a7ac	clrex
000000000003a7b0	mov	w14, #0x0
000000000003a7b4	mov	x13, x12
000000000003a7b8	cbnz	w14, 0x3a7e4
000000000003a7bc	cmp	x13, x10
000000000003a7c0	b.ge	0x3a7e4
000000000003a7c4	ldxr	x12, [x11]
000000000003a7c8	cmp	x12, x13
000000000003a7cc	b.ne	0x3a7ac
000000000003a7d0	stlxr	w13, x10, [x11]
000000000003a7d4	cbnz	w13, 0x3a7b0
000000000003a7d8	mov	w14, #0x1
000000000003a7dc	mov	x13, x12
000000000003a7e0	cbz	w14, 0x3a7bc
000000000003a7e4	add	x9, x9, #0x8
000000000003a7e8	ldxr	x10, [x9]
000000000003a7ec	add	x10, x10, #0x1
000000000003a7f0	stxr	w11, x10, [x9]
000000000003a7f4	cbnz	w11, 0x3a7e8
000000000003a7f8	mov	x10, #-0x1
000000000003a7fc	b	0x3a8bc
000000000003a800	cbz	w10, 0x3a894
000000000003a804	ldxr	x10, [x12]
000000000003a808	add	x11, x10, #0x1
000000000003a80c	stxr	w13, x11, [x12]
000000000003a810	cbnz	w13, 0x3a804
000000000003a814	add	x12, x9, #0x10
000000000003a818	ldr	x14, [x9, #0x10]
000000000003a81c	b	0x3a830
000000000003a820	clrex
000000000003a824	mov	w15, #0x0
000000000003a828	mov	x14, x13
000000000003a82c	cbnz	w15, 0x3a858
000000000003a830	cmp	x14, x10
000000000003a834	b.gt	0x3a858
000000000003a838	ldxr	x13, [x12]
000000000003a83c	cmp	x13, x14
000000000003a840	b.ne	0x3a820
000000000003a844	stlxr	w14, x11, [x12]
000000000003a848	cbnz	w14, 0x3a824
000000000003a84c	mov	w15, #0x1
000000000003a850	mov	x14, x13
000000000003a854	cbz	w15, 0x3a830
000000000003a858	mov	w10, #0x1
000000000003a85c	ldxr	x11, [x9]
000000000003a860	add	x11, x11, #0x1
000000000003a864	stxr	w12, x11, [x9]
000000000003a868	cbnz	w12, 0x3a85c
000000000003a86c	b	0x3a8bc
000000000003a870	ldp	x11, x10, [x9, #0x10]
000000000003a874	sub	x10, x10, #0x1
000000000003a878	str	x10, [x9, #0x18]
000000000003a87c	cmp	x10, x11
000000000003a880	b.le	0x3a888
000000000003a884	str	x10, [x9, #0x10]
000000000003a888	add	x9, x9, #0x8
000000000003a88c	mov	x10, #-0x1
000000000003a890	b	0x3a8b0
000000000003a894	ldp	x12, x11, [x9, #0x10]
000000000003a898	add	x10, x11, #0x1
000000000003a89c	str	x10, [x9, #0x18]
000000000003a8a0	cmp	x11, x12
000000000003a8a4	b.lt	0x3a8ac
000000000003a8a8	str	x10, [x9, #0x10]
000000000003a8ac	mov	w10, #0x1
000000000003a8b0	ldr	x11, [x9]
000000000003a8b4	add	x11, x11, #0x1
000000000003a8b8	str	x11, [x9]
000000000003a8bc	ldp	x9, x11, [x23, #0x58]
000000000003a8c0	add	x9, x9, x10
000000000003a8c4	str	x9, [x23, #0x58]
000000000003a8c8	cmp	x9, x11
000000000003a8cc	b.ls	0x3a8d4
000000000003a8d0	str	x9, [x23, #0x60]
000000000003a8d4	ldp	x9, x10, [x23, #0x68]
000000000003a8d8	sub	x8, x9, x8
000000000003a8dc	str	x8, [x23, #0x68]
000000000003a8e0	cmp	x8, x10
000000000003a8e4	b.ls	0x3a8ec
000000000003a8e8	str	x8, [x23, #0x70]
000000000003a8ec	mov	x1, x21
000000000003a8f0	bl	_mi_segment_find_free
000000000003a8f4	mov	x21, x0
000000000003a8f8	mov	w0, #0xa
000000000003a8fc	bl	_mi_option_get
000000000003a900	cbz	x0, 0x3a9e8
000000000003a904	mov	x0, sp
000000000003a908	mov	x1, #0x0
000000000003a90c	bl	0x51a7c ; symbol stub for: _gettimeofday
000000000003a910	ldr	x24, [x23, #0x48]
000000000003a914	cbz	x24, 0x3a9e4
000000000003a918	ldr	x8, [sp]
000000000003a91c	ldr	w9, [sp, #0x8]
000000000003a920	mov	w10, #0x4dd3
000000000003a924	movk	w10, #0x1062, lsl #16
000000000003a928	smull	x9, w9, w10
000000000003a92c	lsr	x10, x9, #63
000000000003a930	asr	x9, x9, #38
000000000003a934	add	w9, w9, w10
000000000003a938	mov	w10, #0x3e8
000000000003a93c	madd	w25, w8, w10, w9
000000000003a940	mov	w26, #0x1
000000000003a944	b	0x3a954
000000000003a948	str	wzr, [x27, #0x10]
000000000003a94c	stp	xzr, xzr, [x27, #0x30]
000000000003a950	cbz	x24, 0x3a9e4
000000000003a954	mov	x27, x24
000000000003a958	ldr	w8, [x24, #0x10]
000000000003a95c	cmp	w8, w25
000000000003a960	b.gt	0x3aac0
000000000003a964	ldr	x24, [x27, #0x38]
000000000003a968	mov	w0, #0xa
000000000003a96c	bl	_mi_option_get
000000000003a970	cbz	x0, 0x3a948
000000000003a974	and	x9, x27, #0xffffffffffc00000
000000000003a978	ldrb	w8, [x9, #0x8]
000000000003a97c	cbnz	w8, 0x3a948
000000000003a980	ldrb	w8, [x27, #0x1]
000000000003a984	and	w10, w8, #0x7
000000000003a988	cmp	w10, #0x4
000000000003a98c	b.ne	0x3a948
000000000003a990	ldr	w10, [x9, #0x70]
000000000003a994	cmp	w10, #0x3
000000000003a998	b.ne	0x3a9b0
000000000003a99c	ldr	x1, [x9, #0x48]
000000000003a9a0	ldrb	w10, [x27]
000000000003a9a4	madd	x0, x1, x10, x9
000000000003a9a8	cbnz	x10, 0x3a9d0
000000000003a9ac	b	0x3a9c4
000000000003a9b0	ldr	x10, [x9, #0x60]
000000000003a9b4	lsl	x1, x26, x10
000000000003a9b8	ldrb	w10, [x27]
000000000003a9bc	madd	x0, x1, x10, x9
000000000003a9c0	cbnz	x10, 0x3a9d0
000000000003a9c4	ldr	x9, [x9, #0x50]
000000000003a9c8	add	x0, x0, x9
000000000003a9cc	sub	x1, x1, x9
000000000003a9d0	orr	w8, w8, #0x2
000000000003a9d4	strb	w8, [x27, #0x1]
000000000003a9d8	cbz	x1, 0x3a948
000000000003a9dc	bl	__mi_os_reset
000000000003a9e0	b	0x3a948
000000000003a9e4	stp	xzr, xzr, [x23, #0x40]
000000000003a9e8	cbz	x21, 0x3ade8
000000000003a9ec	and	x8, x21, #0xffffffffffc00000
000000000003a9f0	add	x9, x21, #0x28
000000000003a9f4	stlr	x19, [x9]
000000000003a9f8	ldr	w10, [x8, #0x70]
000000000003a9fc	cmp	w10, #0x3
000000000003aa00	b.ne	0x3aa18
000000000003aa04	ldr	x12, [x8, #0x48]
000000000003aa08	ldrb	w9, [x21]
000000000003aa0c	cbz	x9, 0x3aa2c
000000000003aa10	mov	x11, x12
000000000003aa14	b	0x3aa64
000000000003aa18	ldr	x9, [x8, #0x60]
000000000003aa1c	mov	w11, #0x1
000000000003aa20	lsl	x12, x11, x9
000000000003aa24	ldrb	w9, [x21]
000000000003aa28	cbnz	x9, 0x3aa10
000000000003aa2c	ldr	x13, [x8, #0x50]
000000000003aa30	sub	x11, x12, x13
000000000003aa34	cmp	w10, #0x1
000000000003aa38	b.hi	0x3aa64
000000000003aa3c	cbz	x22, 0x3aa64
000000000003aa40	madd	x10, x12, x9, x8
000000000003aa44	add	x10, x10, x13
000000000003aa48	udiv	x12, x10, x22
000000000003aa4c	neg	x10, x10
000000000003aa50	madd	x10, x12, x22, x10
000000000003aa54	add	x10, x22, x10
000000000003aa58	cmp	x10, x22
000000000003aa5c	csel	x10, x10, xzr, lo
000000000003aa60	sub	x11, x11, x10
000000000003aa64	lsr	x10, x22, #26
000000000003aa68	cmp	x10, #0x0
000000000003aa6c	mov	w10, #0x4000000
000000000003aa70	csel	x10, x22, x10, eq
000000000003aa74	str	w10, [x21, #0x14]
000000000003aa78	udiv	x11, x11, x22
000000000003aa7c	strh	w11, [x21, #0x4]
000000000003aa80	ldrb	w12, [x21, #0x1]
000000000003aa84	ldrb	w13, [x21, #0x7]
000000000003aa88	bfxil	w13, w12, #3, #1
000000000003aa8c	strb	w13, [x21, #0x7]
000000000003aa90	ldr	x12, [x21, #0x8]
000000000003aa94	cbnz	x12, 0x3ab78
000000000003aa98	ldrh	w12, [x21, #0x2]
000000000003aa9c	cmp	w12, w11, uxth
000000000003aaa0	b.hs	0x3ab78
000000000003aaa4	ldr	w15, [x8, #0x70]
000000000003aaa8	cmp	w15, #0x3
000000000003aaac	b.ne	0x3aad0
000000000003aab0	ldr	x14, [x8, #0x48]
000000000003aab4	cbz	w9, 0x3aae0
000000000003aab8	mov	x13, x14
000000000003aabc	b	0x3ab18
000000000003aac0	str	x27, [x23, #0x48]
000000000003aac4	str	xzr, [x27, #0x30]
000000000003aac8	cbnz	x21, 0x3a9ec
000000000003aacc	b	0x3ade8
000000000003aad0	ldr	x13, [x8, #0x60]
000000000003aad4	mov	w14, #0x1
000000000003aad8	lsl	x14, x14, x13
000000000003aadc	cbnz	w9, 0x3aab8
000000000003aae0	ldr	x16, [x8, #0x50]
000000000003aae4	sub	x13, x14, x16
000000000003aae8	cmp	w15, #0x1
000000000003aaec	b.hi	0x3ab18
000000000003aaf0	cbz	x10, 0x3ab18
000000000003aaf4	madd	x8, x14, x9, x8
000000000003aaf8	add	x8, x8, x16
000000000003aafc	udiv	x9, x8, x10
000000000003ab00	neg	x8, x8
000000000003ab04	madd	x8, x9, x10, x8
000000000003ab08	add	x8, x10, x8
000000000003ab0c	cmp	x8, x10
000000000003ab10	csel	x8, x8, xzr, lo
000000000003ab14	sub	x13, x13, x8
000000000003ab18	lsr	w8, w10, #26
000000000003ab1c	cmp	w8, #0x0
000000000003ab20	csel	x1, x10, x13, eq
000000000003ab24	and	x8, x11, #0xffff
000000000003ab28	sub	x8, x8, x12
000000000003ab2c	mov	w9, #0x1
000000000003ab30	cmp	x1, #0xfff
000000000003ab34	and	w10, w1, #0xffff
000000000003ab38	mov	w11, #0x1000
000000000003ab3c	udiv	w10, w11, w10
000000000003ab40	csel	x9, x9, x10, hi
000000000003ab44	cmp	x8, x9
000000000003ab48	csel	x22, x9, x8, hi
000000000003ab4c	mov	x0, x21
000000000003ab50	mov	x2, x22
000000000003ab54	bl	_mi_page_free_list_extend
000000000003ab58	ldrh	w8, [x21, #0x2]
000000000003ab5c	add	w8, w8, w22
000000000003ab60	strh	w8, [x21, #0x2]
000000000003ab64	ldrb	w8, [x21, #0x1]
000000000003ab68	tbnz	w8, #0x3, 0x3ab78
000000000003ab6c	ldrb	w8, [x21, #0x7]
000000000003ab70	and	w8, w8, #0xfe
000000000003ab74	strb	w8, [x21, #0x7]
000000000003ab78	ldr	x12, [x19]
000000000003ab7c	add	x8, x12, #0xd0
000000000003ab80	adr	x9, #0x4c4c0
000000000003ab84	nop
000000000003ab88	cmp	x8, x9
000000000003ab8c	b.lo	0x3ac10
000000000003ab90	adr	x9, #0x4c6f0
000000000003ab94	nop
000000000003ab98	cmp	x8, x9
000000000003ab9c	b.hs	0x3ac10
000000000003aba0	add	x11, x12, #0xe8
000000000003aba4	ldxr	x9, [x11]
000000000003aba8	add	x10, x9, #0x1
000000000003abac	stxr	w13, x10, [x11]
000000000003abb0	cbnz	w13, 0x3aba4
000000000003abb4	add	x11, x12, #0xe0
000000000003abb8	ldr	x13, [x12, #0xe0]
000000000003abbc	b	0x3abd0
000000000003abc0	clrex
000000000003abc4	mov	w14, #0x0
000000000003abc8	mov	x13, x12
000000000003abcc	cbnz	w14, 0x3abf8
000000000003abd0	cmp	x13, x9
000000000003abd4	b.gt	0x3abf8
000000000003abd8	ldxr	x12, [x11]
000000000003abdc	cmp	x12, x13
000000000003abe0	b.ne	0x3abc0
000000000003abe4	stlxr	w13, x10, [x11]
000000000003abe8	cbnz	w13, 0x3abc4
000000000003abec	mov	w14, #0x1
000000000003abf0	mov	x13, x12
000000000003abf4	cbz	w14, 0x3abd0
000000000003abf8	ldxr	x9, [x8]
000000000003abfc	add	x9, x9, #0x1
000000000003ac00	stxr	w10, x9, [x8]
000000000003ac04	cbnz	w10, 0x3abf8
000000000003ac08	cbnz	x20, 0x3ac38
000000000003ac0c	b	0x3ade8
000000000003ac10	ldp	x11, x10, [x12, #0xe0]
000000000003ac14	add	x9, x10, #0x1
000000000003ac18	str	x9, [x12, #0xe8]
000000000003ac1c	cmp	x10, x11
000000000003ac20	b.lt	0x3ac28
000000000003ac24	str	x9, [x12, #0xe0]
000000000003ac28	ldr	x9, [x8]
000000000003ac2c	add	x9, x9, #0x1
000000000003ac30	str	x9, [x8]
000000000003ac34	cbz	x20, 0x3ade8
000000000003ac38	mov	w9, #0x7
000000000003ac3c	movk	w9, #0x20, lsl #16
000000000003ac40	ldr	x8, [x20, #0x10]
000000000003ac44	add	x10, x9, #0x9
000000000003ac48	cmp	x8, x10
000000000003ac4c	cset	w8, eq
000000000003ac50	ldrb	w10, [x21, #0x6]
000000000003ac54	and	w10, w10, #0xfe
000000000003ac58	orr	w8, w10, w8
000000000003ac5c	strb	w8, [x21, #0x6]
000000000003ac60	ldr	x8, [x20]
000000000003ac64	stp	x8, xzr, [x21, #0x30]
000000000003ac68	add	x10, x8, #0x38
000000000003ac6c	add	x11, x20, #0x8
000000000003ac70	cmp	x8, #0x0
000000000003ac74	csel	x8, x11, x10, eq
000000000003ac78	str	x21, [x8]
000000000003ac7c	str	x21, [x20]
000000000003ac80	ldr	x11, [x20, #0x10]
000000000003ac84	cmp	x11, #0x400
000000000003ac88	b.hi	0x3addc
000000000003ac8c	add	x8, x11, #0x7
000000000003ac90	lsr	x8, x8, #3
000000000003ac94	add	x10, x19, x8, lsl #3
000000000003ac98	ldr	x10, [x10, #0x8]
000000000003ac9c	cmp	x10, x21
000000000003aca0	b.eq	0x3addc
000000000003aca4	cmp	x11, #0x9
000000000003aca8	b.hs	0x3acb4
000000000003acac	mov	x9, #0x0
000000000003acb0	b	0x3ad80
000000000003acb4	sub	x12, x8, #0x1
000000000003acb8	clz	x13, x12
000000000003acbc	mov	w10, #0x3f
000000000003acc0	sub	w13, w10, w13
000000000003acc4	and	w13, w13, #0xff
000000000003acc8	sub	w14, w13, #0x2
000000000003accc	lsr	x12, x12, x14
000000000003acd0	and	w12, w12, #0x3
000000000003acd4	bfi	w12, w13, #2, #8
000000000003acd8	sub	w12, w12, #0x3
000000000003acdc	add	w13, w8, #0x1
000000000003ace0	and	w13, w13, #0xfffffffe
000000000003ace4	cmp	x11, #0x40
000000000003ace8	csel	w13, w12, w13, hi
000000000003acec	add	x11, x19, #0x410
000000000003acf0	sub	x12, x20, #0x18
000000000003acf4	and	w13, w13, #0xff
000000000003acf8	ldr	x14, [x12, #0x10]
000000000003acfc	add	x15, x14, #0x7
000000000003ad00	lsr	x14, x15, #3
000000000003ad04	cmp	x15, #0x10
000000000003ad08	b.hs	0x3ad14
000000000003ad0c	mov	w15, #0x1
000000000003ad10	b	0x3ad5c
000000000003ad14	cmp	x15, #0x47
000000000003ad18	b.hi	0x3ad28
000000000003ad1c	add	w15, w14, #0x1
000000000003ad20	and	w15, w15, #0xfffffffe
000000000003ad24	b	0x3ad5c
000000000003ad28	cmp	x15, x9
000000000003ad2c	b.ls	0x3ad38
000000000003ad30	mov	w15, #0x49
000000000003ad34	b	0x3ad5c
000000000003ad38	sub	x15, x14, #0x1
000000000003ad3c	clz	x16, x15
000000000003ad40	sub	w16, w10, w16
000000000003ad44	and	w16, w16, #0xff
000000000003ad48	sub	w17, w16, #0x2
000000000003ad4c	lsr	x15, x15, x17
000000000003ad50	and	w15, w15, #0x3
000000000003ad54	bfi	w15, w16, #2, #8
000000000003ad58	sub	w15, w15, #0x3
000000000003ad5c	cmp	x12, x11
000000000003ad60	b.ls	0x3ad70
000000000003ad64	sub	x12, x12, #0x18
000000000003ad68	cmp	w13, w15, uxtb
000000000003ad6c	b.eq	0x3acf8
000000000003ad70	cmp	x14, x8
000000000003ad74	csinc	x9, x8, x14, hs
000000000003ad78	cmp	x9, x8
000000000003ad7c	b.hi	0x3addc
000000000003ad80	sub	x10, x8, x9
000000000003ad84	add	x10, x10, #0x1
000000000003ad88	cmp	x10, #0x4
000000000003ad8c	b.lo	0x3adc0
000000000003ad90	and	x11, x10, #0xfffffffffffffffc
000000000003ad94	dup.2d	v0, x21
000000000003ad98	add	x12, x19, x9, lsl #3
000000000003ad9c	add	x12, x12, #0x18
000000000003ada0	mov	x13, x11
000000000003ada4	stp	q0, q0, [x12, #-0x10]
000000000003ada8	add	x12, x12, #0x20
000000000003adac	subs	x13, x13, #0x4
000000000003adb0	b.ne	0x3ada4
000000000003adb4	cmp	x10, x11
000000000003adb8	b.eq	0x3addc
000000000003adbc	add	x9, x9, x11
000000000003adc0	sub	x8, x8, x9
000000000003adc4	add	x8, x8, #0x1
000000000003adc8	add	x9, x19, x9, lsl #3
000000000003adcc	add	x9, x9, #0x8
000000000003add0	str	x21, [x9], #0x8
000000000003add4	subs	x8, x8, #0x1
000000000003add8	b.ne	0x3add0
000000000003addc	ldr	x8, [x19, #0xbc8]
000000000003ade0	add	x8, x8, #0x1
000000000003ade4	str	x8, [x19, #0xbc8]
000000000003ade8	mov	x0, x21
000000000003adec	ldp	x29, x30, [sp, #0x60]
000000000003adf0	ldp	x20, x19, [sp, #0x50]
000000000003adf4	ldp	x22, x21, [sp, #0x40]
000000000003adf8	ldp	x24, x23, [sp, #0x30]
000000000003adfc	ldp	x26, x25, [sp, #0x20]
000000000003ae00	ldp	x28, x27, [sp, #0x10]
000000000003ae04	add	sp, sp, #0x70
000000000003ae08	ret
_mi_page_queue_find_free_ex:
000000000003ae0c	sub	sp, sp, #0x70
000000000003ae10	stp	x28, x27, [sp, #0x10]
000000000003ae14	stp	x26, x25, [sp, #0x20]
000000000003ae18	stp	x24, x23, [sp, #0x30]
000000000003ae1c	stp	x22, x21, [sp, #0x40]
000000000003ae20	stp	x20, x19, [sp, #0x50]
000000000003ae24	stp	x29, x30, [sp, #0x60]
000000000003ae28	add	x29, sp, #0x60
000000000003ae2c	mov	x19, x1
000000000003ae30	mov	x20, x0
000000000003ae34	mov	w23, #0x7
000000000003ae38	movk	w23, #0x20, lsl #16
000000000003ae3c	eor	w24, w2, #0x1
000000000003ae40	sub	x9, x1, #0x18
000000000003ae44	add	x8, x0, #0x410
000000000003ae48	stp	x9, x8, [sp]
000000000003ae4c	mov	w27, #0x3f
000000000003ae50	adr	x21, #0x1b7d8 ; literal pool for: "corrupted thread-free list\n"
000000000003ae54	nop
000000000003ae58	ldr	x28, [x19]
000000000003ae5c	cbnz	x28, 0x3aeac
000000000003ae60	ldr	x28, [x20, #0xbd0]
000000000003ae64	ldr	x8, [x20, #0xbd8]
000000000003ae68	cmp	x28, x8
000000000003ae6c	b.ls	0x3b3fc
000000000003ae70	mov	x25, #0x0
000000000003ae74	mov	w26, #0x4a
000000000003ae78	str	x26, [x20, #0xbd0]
000000000003ae7c	str	x25, [x20, #0xbd8]
000000000003ae80	ldr	x2, [x19, #0x10]
000000000003ae84	mov	x0, x20
000000000003ae88	mov	x1, x19
000000000003ae8c	bl	_mi_page_fresh_alloc
000000000003ae90	cmp	x0, #0x0
000000000003ae94	cset	w8, ne
000000000003ae98	orr	w8, w8, w24
000000000003ae9c	mov	w24, #0x1
000000000003aea0	tbz	w8, #0x0, 0x3ae58
000000000003aea4	b	0x3b584
000000000003aea8	cbz	x28, 0x3ae60
000000000003aeac	mov	x22, x28
000000000003aeb0	ldr	x28, [x28, #0x30]
000000000003aeb4	add	x25, x22, #0x20
000000000003aeb8	ldr	x8, [x22, #0x20]
000000000003aebc	cmp	x8, #0x4
000000000003aec0	b.lo	0x3af3c
000000000003aec4	ldr	x8, [x25]
000000000003aec8	b	0x3aed8
000000000003aecc	clrex
000000000003aed0	mov	w10, #0x0
000000000003aed4	cbnz	w10, 0x3aefc
000000000003aed8	mov	x9, x8
000000000003aedc	ldaxr	x8, [x25]
000000000003aee0	cmp	x8, x9
000000000003aee4	b.ne	0x3aecc
000000000003aee8	and	x10, x9, #0x3
000000000003aeec	stlxr	w11, x10, [x25]
000000000003aef0	cbnz	w11, 0x3aed0
000000000003aef4	mov	w10, #0x1
000000000003aef8	cbz	w10, 0x3aed8
000000000003aefc	ands	x8, x9, #0xfffffffffffffffc
000000000003af00	b.eq	0x3af3c
000000000003af04	mov	w9, #0x0
000000000003af08	ldrh	w10, [x22, #0x2]
000000000003af0c	mov	x12, x8
000000000003af10	mov	x11, x12
000000000003af14	add	w9, w9, #0x1
000000000003af18	ldr	x12, [x12]
000000000003af1c	cmp	w9, w10
000000000003af20	ccmp	x12, #0x0, #0x4, ls
000000000003af24	b.ne	0x3af10
000000000003af28	cmp	w9, w10
000000000003af2c	b.ls	0x3b01c
000000000003af30	mov	w0, #0xe
000000000003af34	mov	x1, x21
000000000003af38	bl	__mi_error_message
000000000003af3c	ldr	x8, [x22, #0x18]
000000000003af40	cbz	x8, 0x3af60
000000000003af44	ldr	x9, [x22, #0x8]
000000000003af48	cbnz	x9, 0x3af60
000000000003af4c	str	x8, [x22, #0x8]
000000000003af50	str	xzr, [x22, #0x18]
000000000003af54	ldrb	w8, [x22, #0x7]
000000000003af58	and	w8, w8, #0xfe
000000000003af5c	strb	w8, [x22, #0x7]
000000000003af60	ldr	x8, [x22, #0x8]
000000000003af64	cbnz	x8, 0x3b554
000000000003af68	ldrh	w8, [x22, #0x2]
000000000003af6c	ldrh	w9, [x22, #0x4]
000000000003af70	cmp	w8, w9
000000000003af74	b.lo	0x3b480
000000000003af78	ldrb	w8, [x22, #0x6]
000000000003af7c	tbnz	w8, #0x0, 0x3aea8
000000000003af80	ldr	x9, [x22, #0x28]
000000000003af84	ldr	x8, [x22, #0x28]
000000000003af88	ldr	x11, [x22, #0x38]
000000000003af8c	cbz	x11, 0x3af98
000000000003af90	ldr	x10, [x22, #0x30]
000000000003af94	str	x10, [x11, #0x30]
000000000003af98	ldr	x10, [x22, #0x30]
000000000003af9c	cbz	x10, 0x3afa4
000000000003afa0	str	x11, [x10, #0x38]
000000000003afa4	ldr	x11, [x19, #0x8]
000000000003afa8	cmp	x11, x22
000000000003afac	b.eq	0x3afc0
000000000003afb0	ldr	x11, [x19]
000000000003afb4	cmp	x11, x22
000000000003afb8	b.ne	0x3b180
000000000003afbc	b	0x3afd4
000000000003afc0	ldr	x11, [x22, #0x38]
000000000003afc4	str	x11, [x19, #0x8]
000000000003afc8	ldr	x11, [x19]
000000000003afcc	cmp	x11, x22
000000000003afd0	b.ne	0x3b180
000000000003afd4	str	x10, [x19]
000000000003afd8	ldr	x12, [x19, #0x10]
000000000003afdc	cmp	x12, #0x400
000000000003afe0	b.hi	0x3b180
000000000003afe4	cmp	x10, #0x0
000000000003afe8	adr	x11, #0x18018
000000000003afec	nop
000000000003aff0	csel	x10, x11, x10, eq
000000000003aff4	add	x11, x12, #0x7
000000000003aff8	lsr	x11, x11, #3
000000000003affc	add	x13, x8, x11, lsl #3
000000000003b000	ldr	x13, [x13, #0x8]
000000000003b004	cmp	x13, x10
000000000003b008	b.eq	0x3b180
000000000003b00c	cmp	x12, #0x9
000000000003b010	b.hs	0x3b040
000000000003b014	mov	x12, #0x0
000000000003b018	b	0x3b124
000000000003b01c	ldr	x10, [x22, #0x18]
000000000003b020	str	x10, [x11]
000000000003b024	str	x8, [x22, #0x18]
000000000003b028	ldr	w8, [x22, #0x10]
000000000003b02c	sub	w8, w8, w9
000000000003b030	str	w8, [x22, #0x10]
000000000003b034	ldr	x8, [x22, #0x18]
000000000003b038	cbnz	x8, 0x3af44
000000000003b03c	b	0x3af60
000000000003b040	cmp	x12, #0x40
000000000003b044	b.hi	0x3b054
000000000003b048	add	w12, w11, #0x1
000000000003b04c	and	w12, w12, #0xfffffffe
000000000003b050	b	0x3b078
000000000003b054	sub	x12, x11, #0x1
000000000003b058	clz	x13, x12
000000000003b05c	sub	w13, w27, w13
000000000003b060	and	w13, w13, #0xff
000000000003b064	sub	w14, w13, #0x2
000000000003b068	lsr	x12, x12, x14
000000000003b06c	and	w12, w12, #0x3
000000000003b070	bfi	w12, w13, #2, #8
000000000003b074	sub	w12, w12, #0x3
000000000003b078	add	x13, x8, #0x410
000000000003b07c	ldr	x14, [sp]
000000000003b080	ldr	x15, [x14, #0x10]
000000000003b084	add	x16, x15, #0x7
000000000003b088	lsr	x15, x16, #3
000000000003b08c	cmp	x16, #0x10
000000000003b090	b.hs	0x3b0a4
000000000003b094	mov	w16, #0x1
000000000003b098	cmp	x14, x13
000000000003b09c	b.hi	0x3b104
000000000003b0a0	b	0x3b114
000000000003b0a4	cmp	x16, #0x47
000000000003b0a8	b.hi	0x3b0c0
000000000003b0ac	add	w16, w15, #0x1
000000000003b0b0	and	w16, w16, #0xfffffffe
000000000003b0b4	cmp	x14, x13
000000000003b0b8	b.hi	0x3b104
000000000003b0bc	b	0x3b114
000000000003b0c0	cmp	x16, x23
000000000003b0c4	b.ls	0x3b0d8
000000000003b0c8	mov	w16, #0x49
000000000003b0cc	cmp	x14, x13
000000000003b0d0	b.hi	0x3b104
000000000003b0d4	b	0x3b114
000000000003b0d8	sub	x16, x15, #0x1
000000000003b0dc	clz	x17, x16
000000000003b0e0	sub	w17, w27, w17
000000000003b0e4	and	w17, w17, #0xff
000000000003b0e8	sub	w0, w17, #0x2
000000000003b0ec	lsr	x16, x16, x0
000000000003b0f0	and	w16, w16, #0x3
000000000003b0f4	bfi	w16, w17, #2, #8
000000000003b0f8	sub	w16, w16, #0x3
000000000003b0fc	cmp	x14, x13
000000000003b100	b.ls	0x3b114
000000000003b104	sub	x14, x14, #0x18
000000000003b108	and	w17, w12, #0xff
000000000003b10c	cmp	w17, w16, uxtb
000000000003b110	b.eq	0x3b080
000000000003b114	cmp	x15, x11
000000000003b118	csinc	x12, x11, x15, hs
000000000003b11c	cmp	x12, x11
000000000003b120	b.hi	0x3b180
000000000003b124	sub	x13, x11, x12
000000000003b128	add	x13, x13, #0x1
000000000003b12c	cmp	x13, #0x4
000000000003b130	b.lo	0x3b164
000000000003b134	and	x14, x13, #0xfffffffffffffffc
000000000003b138	dup.2d	v0, x10
000000000003b13c	add	x15, x8, x12, lsl #3
000000000003b140	add	x15, x15, #0x18
000000000003b144	mov	x16, x14
000000000003b148	stp	q0, q0, [x15, #-0x10]
000000000003b14c	add	x15, x15, #0x20
000000000003b150	subs	x16, x16, #0x4
000000000003b154	b.ne	0x3b148
000000000003b158	cmp	x13, x14
000000000003b15c	b.eq	0x3b180
000000000003b160	add	x12, x12, x14
000000000003b164	sub	x11, x11, x12
000000000003b168	add	x11, x11, #0x1
000000000003b16c	add	x12, x8, x12, lsl #3
000000000003b170	add	x12, x12, #0x8
000000000003b174	str	x10, [x12], #0x8
000000000003b178	subs	x11, x11, #0x1
000000000003b17c	b.ne	0x3b174
000000000003b180	ldr	x10, [x9, #0xb08]
000000000003b184	stp	xzr, x10, [x22, #0x30]
000000000003b188	cbz	x10, 0x3b19c
000000000003b18c	str	x22, [x10, #0x30]
000000000003b190	str	x22, [x9, #0xb08]
000000000003b194	ldr	x10, [x9, #0xb10]
000000000003b198	b	0x3b314
000000000003b19c	str	x22, [x9, #0xb00]
000000000003b1a0	str	x22, [x9, #0xb08]
000000000003b1a4	ldr	x10, [x9, #0xb10]
000000000003b1a8	cmp	x10, #0x400
000000000003b1ac	b.hi	0x3b314
000000000003b1b0	add	x11, x10, #0x7
000000000003b1b4	lsr	x11, x11, #3
000000000003b1b8	add	x12, x8, x11, lsl #3
000000000003b1bc	ldr	x12, [x12, #0x8]
000000000003b1c0	cmp	x12, x22
000000000003b1c4	b.eq	0x3b314
000000000003b1c8	cmp	x10, #0x9
000000000003b1cc	b.hs	0x3b1d8
000000000003b1d0	mov	x9, #0x0
000000000003b1d4	b	0x3b2b8
000000000003b1d8	sub	x12, x11, #0x1
000000000003b1dc	clz	x13, x12
000000000003b1e0	sub	w13, w27, w13
000000000003b1e4	and	w13, w13, #0xff
000000000003b1e8	sub	w14, w13, #0x2
000000000003b1ec	lsr	x12, x12, x14
000000000003b1f0	and	w12, w12, #0x3
000000000003b1f4	bfi	w12, w13, #2, #8
000000000003b1f8	sub	w12, w12, #0x3
000000000003b1fc	add	w13, w11, #0x1
000000000003b200	and	w13, w13, #0xfffffffe
000000000003b204	cmp	x10, #0x40
000000000003b208	csel	w12, w12, w13, hi
000000000003b20c	add	x13, x8, #0x410
000000000003b210	add	x9, x9, #0xae8
000000000003b214	ldr	x14, [x9, #0x10]
000000000003b218	add	x15, x14, #0x7
000000000003b21c	lsr	x14, x15, #3
000000000003b220	cmp	x15, #0x10
000000000003b224	b.hs	0x3b238
000000000003b228	mov	w15, #0x1
000000000003b22c	cmp	x9, x13
000000000003b230	b.hi	0x3b298
000000000003b234	b	0x3b2a8
000000000003b238	cmp	x15, #0x47
000000000003b23c	b.hi	0x3b254
000000000003b240	add	w15, w14, #0x1
000000000003b244	and	w15, w15, #0xfffffffe
000000000003b248	cmp	x9, x13
000000000003b24c	b.hi	0x3b298
000000000003b250	b	0x3b2a8
000000000003b254	cmp	x15, x23
000000000003b258	b.ls	0x3b26c
000000000003b25c	mov	w15, #0x49
000000000003b260	cmp	x9, x13
000000000003b264	b.hi	0x3b298
000000000003b268	b	0x3b2a8
000000000003b26c	sub	x15, x14, #0x1
000000000003b270	clz	x16, x15
000000000003b274	sub	w16, w27, w16
000000000003b278	and	w16, w16, #0xff
000000000003b27c	sub	w17, w16, #0x2
000000000003b280	lsr	x15, x15, x17
000000000003b284	and	w15, w15, #0x3
000000000003b288	bfi	w15, w16, #2, #8
000000000003b28c	sub	w15, w15, #0x3
000000000003b290	cmp	x9, x13
000000000003b294	b.ls	0x3b2a8
000000000003b298	sub	x9, x9, #0x18
000000000003b29c	and	w16, w12, #0xff
000000000003b2a0	cmp	w16, w15, uxtb
000000000003b2a4	b.eq	0x3b214
000000000003b2a8	cmp	x14, x11
000000000003b2ac	csinc	x9, x11, x14, hs
000000000003b2b0	cmp	x9, x11
000000000003b2b4	b.hi	0x3b314
000000000003b2b8	sub	x12, x11, x9
000000000003b2bc	add	x12, x12, #0x1
000000000003b2c0	cmp	x12, #0x4
000000000003b2c4	b.lo	0x3b2f8
000000000003b2c8	and	x13, x12, #0xfffffffffffffffc
000000000003b2cc	dup.2d	v0, x22
000000000003b2d0	add	x14, x8, x9, lsl #3
000000000003b2d4	add	x14, x14, #0x18
000000000003b2d8	mov	x15, x13
000000000003b2dc	stp	q0, q0, [x14, #-0x10]
000000000003b2e0	add	x14, x14, #0x20
000000000003b2e4	subs	x15, x15, #0x4
000000000003b2e8	b.ne	0x3b2dc
000000000003b2ec	cmp	x12, x13
000000000003b2f0	b.eq	0x3b314
000000000003b2f4	add	x9, x9, x13
000000000003b2f8	sub	x11, x11, x9
000000000003b2fc	add	x11, x11, #0x1
000000000003b300	add	x8, x8, x9, lsl #3
000000000003b304	add	x8, x8, #0x8
000000000003b308	str	x22, [x8], #0x8
000000000003b30c	subs	x11, x11, #0x1
000000000003b310	b.ne	0x3b308
000000000003b314	add	x8, x23, #0x9
000000000003b318	cmp	x10, x8
000000000003b31c	cset	w8, eq
000000000003b320	ldrb	w9, [x22, #0x6]
000000000003b324	and	w9, w9, #0xfe
000000000003b328	orr	w8, w9, w8
000000000003b32c	strb	w8, [x22, #0x6]
000000000003b330	ldr	x8, [x22, #0x20]
000000000003b334	cmp	x8, #0x4
000000000003b338	b.lo	0x3b3b4
000000000003b33c	ldr	x8, [x25]
000000000003b340	b	0x3b350
000000000003b344	clrex
000000000003b348	mov	w10, #0x0
000000000003b34c	cbnz	w10, 0x3b374
000000000003b350	mov	x9, x8
000000000003b354	ldaxr	x8, [x25]
000000000003b358	cmp	x8, x9
000000000003b35c	b.ne	0x3b344
000000000003b360	and	x10, x9, #0x3
000000000003b364	stlxr	w11, x10, [x25]
000000000003b368	cbnz	w11, 0x3b348
000000000003b36c	mov	w10, #0x1
000000000003b370	cbz	w10, 0x3b350
000000000003b374	ands	x8, x9, #0xfffffffffffffffc
000000000003b378	b.eq	0x3b3b4
000000000003b37c	mov	w9, #0x0
000000000003b380	ldrh	w11, [x22, #0x2]
000000000003b384	mov	x12, x8
000000000003b388	mov	x10, x12
000000000003b38c	add	w9, w9, #0x1
000000000003b390	ldr	x12, [x12]
000000000003b394	cmp	w9, w11
000000000003b398	ccmp	x12, #0x0, #0x4, ls
000000000003b39c	b.ne	0x3b388
000000000003b3a0	cmp	w9, w11
000000000003b3a4	b.ls	0x3b3dc
000000000003b3a8	mov	w0, #0xe
000000000003b3ac	mov	x1, x21
000000000003b3b0	bl	__mi_error_message
000000000003b3b4	ldr	x8, [x22, #0x18]
000000000003b3b8	cbz	x8, 0x3aea8
000000000003b3bc	ldr	x9, [x22, #0x8]
000000000003b3c0	cbnz	x9, 0x3aea8
000000000003b3c4	str	x8, [x22, #0x8]
000000000003b3c8	str	xzr, [x22, #0x18]
000000000003b3cc	ldrb	w8, [x22, #0x7]
000000000003b3d0	and	w8, w8, #0xfe
000000000003b3d4	strb	w8, [x22, #0x7]
000000000003b3d8	b	0x3aea8
000000000003b3dc	ldr	x11, [x22, #0x18]
000000000003b3e0	str	x11, [x10]
000000000003b3e4	str	x8, [x22, #0x18]
000000000003b3e8	ldr	w10, [x22, #0x10]
000000000003b3ec	sub	w9, w10, w9
000000000003b3f0	str	w9, [x22, #0x10]
000000000003b3f4	cbnz	x8, 0x3b3bc
000000000003b3f8	b	0x3aea8
000000000003b3fc	mov	x25, #0x0
000000000003b400	ldr	x8, [sp, #0x8]
000000000003b404	mov	w9, #0x18
000000000003b408	madd	x22, x28, x9, x8
000000000003b40c	mov	w26, #0x4a
000000000003b410	b	0x3b430
000000000003b414	and	w9, w9, #0x1
000000000003b418	strb	w9, [x8, #0x7]
000000000003b41c	add	x28, x28, #0x1
000000000003b420	ldr	x8, [x20, #0xbd8]
000000000003b424	add	x22, x22, #0x18
000000000003b428	cmp	x28, x8
000000000003b42c	b.hi	0x3ae78
000000000003b430	ldr	x8, [x22]
000000000003b434	cbz	x8, 0x3b41c
000000000003b438	ldrb	w9, [x8, #0x7]
000000000003b43c	subs	w10, w9, #0x2
000000000003b440	b.lo	0x3b41c
000000000003b444	ldr	w11, [x8, #0x10]
000000000003b448	cbnz	w11, 0x3b414
000000000003b44c	strb	w10, [x8, #0x7]
000000000003b450	cmp	w10, #0x1
000000000003b454	b.hi	0x3b46c
000000000003b458	ldr	x0, [x22]
000000000003b45c	mov	x1, x22
000000000003b460	mov	w2, #0x0
000000000003b464	bl	__mi_page_free
000000000003b468	b	0x3b41c
000000000003b46c	cmp	x28, x26
000000000003b470	csel	x26, x28, x26, lo
000000000003b474	cmp	x28, x25
000000000003b478	csel	x25, x28, x25, hi
000000000003b47c	b	0x3b41c
000000000003b480	and	x11, x22, #0xffffffffffc00000
000000000003b484	ldr	w10, [x22, #0x14]
000000000003b488	ldr	w14, [x11, #0x70]
000000000003b48c	cmp	w14, #0x3
000000000003b490	b.ne	0x3b4a8
000000000003b494	ldr	x13, [x11, #0x48]
000000000003b498	ldrb	w15, [x22]
000000000003b49c	cbz	x15, 0x3b4bc
000000000003b4a0	mov	x12, x13
000000000003b4a4	b	0x3b4f4
000000000003b4a8	ldr	x12, [x11, #0x60]
000000000003b4ac	mov	w13, #0x1
000000000003b4b0	lsl	x13, x13, x12
000000000003b4b4	ldrb	w15, [x22]
000000000003b4b8	cbnz	x15, 0x3b4a0
000000000003b4bc	ldr	x16, [x11, #0x50]
000000000003b4c0	sub	x12, x13, x16
000000000003b4c4	cmp	w14, #0x1
000000000003b4c8	b.hi	0x3b4f4
000000000003b4cc	cbz	w10, 0x3b4f4
000000000003b4d0	madd	x11, x13, x15, x11
000000000003b4d4	add	x11, x11, x16
000000000003b4d8	udiv	x13, x11, x10
000000000003b4dc	neg	x11, x11
000000000003b4e0	madd	x11, x13, x10, x11
000000000003b4e4	add	x11, x10, x11
000000000003b4e8	cmp	x11, x10
000000000003b4ec	csel	x11, x11, xzr, lo
000000000003b4f0	sub	x12, x12, x11
000000000003b4f4	ubfx	x11, x10, #26, #6
000000000003b4f8	cmp	w11, #0x0
000000000003b4fc	csel	x1, x10, x12, eq
000000000003b500	sub	x8, x9, x8
000000000003b504	cmp	x1, #0xfff
000000000003b508	b.ls	0x3b514
000000000003b50c	mov	w9, #0x1
000000000003b510	b	0x3b520
000000000003b514	and	w9, w1, #0xffff
000000000003b518	mov	w10, #0x1000
000000000003b51c	udiv	w9, w10, w9
000000000003b520	cmp	x8, x9
000000000003b524	csel	x19, x9, x8, hi
000000000003b528	mov	x0, x22
000000000003b52c	mov	x2, x19
000000000003b530	bl	_mi_page_free_list_extend
000000000003b534	ldrh	w8, [x22, #0x2]
000000000003b538	add	w8, w8, w19
000000000003b53c	strh	w8, [x22, #0x2]
000000000003b540	ldrb	w8, [x22, #0x1]
000000000003b544	tbnz	w8, #0x3, 0x3b554
000000000003b548	ldrb	w8, [x22, #0x7]
000000000003b54c	and	w8, w8, #0xfe
000000000003b550	strb	w8, [x22, #0x7]
000000000003b554	ldrb	w8, [x22, #0x7]
000000000003b558	and	w8, w8, #0x1
000000000003b55c	strb	w8, [x22, #0x7]
000000000003b560	mov	x0, x22
000000000003b564	ldp	x29, x30, [sp, #0x60]
000000000003b568	ldp	x20, x19, [sp, #0x50]
000000000003b56c	ldp	x22, x21, [sp, #0x40]
000000000003b570	ldp	x24, x23, [sp, #0x30]
000000000003b574	ldp	x26, x25, [sp, #0x20]
000000000003b578	ldp	x28, x27, [sp, #0x10]
000000000003b57c	add	sp, sp, #0x70
000000000003b580	ret
000000000003b584	mov	x22, x0
000000000003b588	b	0x3b560
_mi_page_free_list_extend:
000000000003b58c	and	x10, x0, #0xffffffffffc00000
000000000003b590	ldr	w9, [x10, #0x70]
000000000003b594	cmp	w9, #0x3
000000000003b598	b.ne	0x3b5b0
000000000003b59c	ldr	x8, [x10, #0x48]
000000000003b5a0	ldrb	w11, [x0]
000000000003b5a4	madd	x8, x8, x11, x10
000000000003b5a8	cbnz	x11, 0x3b5fc
000000000003b5ac	b	0x3b5c8
000000000003b5b0	ldr	x8, [x10, #0x60]
000000000003b5b4	mov	w11, #0x1
000000000003b5b8	lsl	x8, x11, x8
000000000003b5bc	ldrb	w11, [x0]
000000000003b5c0	madd	x8, x8, x11, x10
000000000003b5c4	cbnz	x11, 0x3b5fc
000000000003b5c8	ldr	w11, [x0, #0x14]
000000000003b5cc	ldr	x10, [x10, #0x50]
000000000003b5d0	add	x8, x8, x10
000000000003b5d4	cmp	w9, #0x1
000000000003b5d8	ccmp	w11, #0x0, #0x4, ls
000000000003b5dc	b.eq	0x3b5fc
000000000003b5e0	udiv	x9, x8, x11
000000000003b5e4	neg	x10, x8
000000000003b5e8	madd	x9, x9, x11, x10
000000000003b5ec	add	x9, x11, x9
000000000003b5f0	add	x10, x8, x9
000000000003b5f4	cmp	x9, x11
000000000003b5f8	csel	x8, x10, x8, lo
000000000003b5fc	ldrh	w12, [x0, #0x2]
000000000003b600	mul	x11, x12, x1
000000000003b604	add	x9, x8, x11
000000000003b608	add	x10, x2, x12
000000000003b60c	sub	x10, x10, #0x1
000000000003b610	mul	x13, x10, x1
000000000003b614	add	x10, x8, x13
000000000003b618	cmp	x11, x13
000000000003b61c	b.gt	0x3b644
000000000003b620	mov	x11, #0x0
000000000003b624	add	x12, x12, #0x1
000000000003b628	madd	x8, x1, x12, x8
000000000003b62c	add	x12, x8, x11
000000000003b630	str	x12, [x9, x11]
000000000003b634	add	x11, x11, x1
000000000003b638	add	x12, x9, x11
000000000003b63c	cmp	x12, x10
000000000003b640	b.ls	0x3b62c
000000000003b644	ldr	x8, [x0, #0x8]
000000000003b648	str	x8, [x10]
000000000003b64c	str	x9, [x0, #0x8]
000000000003b650	ret
_mi_segment_reclaim_or_alloc:
000000000003b654	sub	sp, sp, #0xb0
000000000003b658	stp	x28, x27, [sp, #0x50]
000000000003b65c	stp	x26, x25, [sp, #0x60]
000000000003b660	stp	x24, x23, [sp, #0x70]
000000000003b664	stp	x22, x21, [sp, #0x80]
000000000003b668	stp	x20, x19, [sp, #0x90]
000000000003b66c	stp	x29, x30, [sp, #0xa0]
000000000003b670	add	x29, sp, #0xa0
000000000003b674	mov	x20, x5
000000000003b678	mov	x22, x4
000000000003b67c	mov	x23, x3
000000000003b680	mov	x24, x2
000000000003b684	ldr	x25, [x4, #0x68]
000000000003b688	cbz	x25, 0x3b6f0
000000000003b68c	ldr	x8, [x22, #0x58]
000000000003b690	sub	x8, x8, #0x1
000000000003b694	str	x8, [x22, #0x58]
000000000003b698	ldr	x8, [x25, #0x18]
000000000003b69c	str	x8, [x22, #0x68]
000000000003b6a0	str	xzr, [x25, #0x18]
000000000003b6a4	ldr	x8, [x22, #0x70]
000000000003b6a8	add	x9, x8, #0x1a0
000000000003b6ac	adr	x10, #0x4b994
000000000003b6b0	nop
000000000003b6b4	cmp	x9, x10
000000000003b6b8	adr	x10, #0x4bbc8
000000000003b6bc	nop
000000000003b6c0	ccmp	x9, x10, #0x2, hs
000000000003b6c4	b.lo	0x3ba60
000000000003b6c8	ldp	x10, x9, [x8, #0x1b0]
000000000003b6cc	sub	x9, x9, #0x1
000000000003b6d0	str	x9, [x8, #0x1b8]
000000000003b6d4	cmp	x9, x10
000000000003b6d8	b.le	0x3b6e0
000000000003b6dc	str	x9, [x8, #0x1b0]
000000000003b6e0	ldr	x9, [x8, #0x1a8]
000000000003b6e4	add	x9, x9, #0x1
000000000003b6e8	str	x9, [x8, #0x1a8]
000000000003b6ec	b	0x3bacc
000000000003b6f0	str	x0, [sp, #0x28]
000000000003b6f4	str	x1, [sp, #0x38]
000000000003b6f8	mov	w8, #0x7
000000000003b6fc	adrp	x13, 75 ; 0x86000
000000000003b700	strb	wzr, [sp, #0x4f]
000000000003b704	adrp	x9, 75 ; 0x86000
000000000003b708	adr	x28, #0x4b538
000000000003b70c	nop
000000000003b710	adr	x26, #0x4b4b0
000000000003b714	nop
000000000003b718	adr	x19, #0x4b4e8
000000000003b71c	nop
000000000003b720	adr	x15, #0x4b560
000000000003b724	nop
000000000003b728	adr	x27, #0x4b458
000000000003b72c	nop
000000000003b730	mov	x14, x8
000000000003b734	ldr	x8, [x13, #0xbc0]
000000000003b738	lsr	x8, x8, #22
000000000003b73c	cbnz	x8, 0x3b818
000000000003b740	ldr	x8, [x9, #0xc40]
000000000003b744	cbz	x8, 0x3ba4c
000000000003b748	ldaxr	x8, [x28]
000000000003b74c	stlxr	w9, xzr, [x28]
000000000003b750	cbnz	w9, 0x3b748
000000000003b754	cbz	x8, 0x3ba4c
000000000003b758	ldr	x10, [x13, #0xbc0]
000000000003b75c	lsr	x9, x10, #22
000000000003b760	cbnz	x9, 0x3b794
000000000003b764	nop
000000000003b768	ldr	x9, #0x4b518
000000000003b76c	add	w11, w10, #0x1
000000000003b770	and	x11, x11, #0x3fffff
000000000003b774	orr	x11, x11, x8
000000000003b778	ldaxr	x12, [x26]
000000000003b77c	cmp	x12, x10
000000000003b780	b.ne	0x3b790
000000000003b784	stlxr	w12, x11, [x26]
000000000003b788	cbnz	w12, 0x3b778
000000000003b78c	b	0x3b7f8
000000000003b790	clrex
000000000003b794	mov	x9, x8
000000000003b798	mov	x10, x9
000000000003b79c	ldr	x9, [x9, #0x10]
000000000003b7a0	cbnz	x9, 0x3b798
000000000003b7a4	ldr	x12, [x13, #0xbc0]
000000000003b7a8	b	0x3b7bc
000000000003b7ac	clrex
000000000003b7b0	mov	w13, #0x0
000000000003b7b4	mov	x12, x11
000000000003b7b8	cbnz	w13, 0x3b7f8
000000000003b7bc	ldr	x9, [x26, #0xc0]
000000000003b7c0	and	x11, x12, #0xffffffffffc00000
000000000003b7c4	add	x13, x10, #0x10
000000000003b7c8	stlr	x11, [x13]
000000000003b7cc	ldxr	x11, [x26]
000000000003b7d0	cmp	x11, x12
000000000003b7d4	b.ne	0x3b7ac
000000000003b7d8	add	w12, w12, #0x1
000000000003b7dc	and	x12, x12, #0x3fffff
000000000003b7e0	orr	x12, x12, x8
000000000003b7e4	stlxr	w13, x12, [x26]
000000000003b7e8	cbnz	w13, 0x3b7b0
000000000003b7ec	mov	w13, #0x1
000000000003b7f0	mov	x12, x11
000000000003b7f4	cbz	w13, 0x3b7bc
000000000003b7f8	ldxr	x8, [x19]
000000000003b7fc	add	x8, x8, x9
000000000003b800	stxr	w10, x8, [x19]
000000000003b804	cbnz	w10, 0x3b7f8
000000000003b808	ldxr	x8, [x15]
000000000003b80c	sub	x8, x8, x9
000000000003b810	stxr	w10, x8, [x15]
000000000003b814	cbnz	w10, 0x3b808
000000000003b818	str	w14, [sp, #0x34]
000000000003b81c	ldxr	x8, [x27]
000000000003b820	add	x8, x8, #0x1
000000000003b824	stxr	w9, x8, [x27]
000000000003b828	cbnz	w9, 0x3b81c
000000000003b82c	ldar	x9, [x26]
000000000003b830	b	0x3b844
000000000003b834	clrex
000000000003b838	mov	w10, #0x0
000000000003b83c	mov	x9, x8
000000000003b840	cbnz	w10, 0x3b87c
000000000003b844	ands	x25, x9, #0xffffffffffc00000
000000000003b848	b.eq	0x3ba3c
000000000003b84c	ldr	x10, [x25, #0x10]
000000000003b850	ldaxr	x8, [x26]
000000000003b854	cmp	x8, x9
000000000003b858	b.ne	0x3b834
000000000003b85c	add	w9, w9, #0x1
000000000003b860	and	x9, x9, #0x3fffff
000000000003b864	orr	x9, x10, x9
000000000003b868	stlxr	w10, x9, [x26]
000000000003b86c	cbnz	w10, 0x3b838
000000000003b870	mov	w10, #0x1
000000000003b874	mov	x9, x8
000000000003b878	cbz	w10, 0x3b844
000000000003b87c	ldxr	x8, [x27]
000000000003b880	sub	x8, x8, #0x1
000000000003b884	stxr	w9, x8, [x27]
000000000003b888	cbnz	w9, 0x3b87c
000000000003b88c	add	x8, x25, #0x10
000000000003b890	stlr	xzr, [x8]
000000000003b894	ldxr	x8, [x19]
000000000003b898	sub	x8, x8, #0x1
000000000003b89c	stxr	w9, x8, [x19]
000000000003b8a0	cbnz	w9, 0x3b894
000000000003b8a4	ldr	x8, [x25, #0x30]
000000000003b8a8	add	x8, x8, #0x1
000000000003b8ac	str	x8, [x25, #0x30]
000000000003b8b0	ldr	x8, [x25, #0x40]
000000000003b8b4	cbz	x8, 0x3b9a4
000000000003b8b8	str	w24, [sp, #0xc]
000000000003b8bc	stp	x23, x22, [sp, #0x10]
000000000003b8c0	str	x20, [sp, #0x20]
000000000003b8c4	mov	x22, #0x0
000000000003b8c8	mov	w9, #0x0
000000000003b8cc	mov	x20, #0x0
000000000003b8d0	str	xzr, [sp, #0x40]
000000000003b8d4	mov	x21, #0x0
000000000003b8d8	b	0x3b900
000000000003b8dc	ldr	x8, [sp, #0x40]
000000000003b8e0	add	x8, x8, #0x1
000000000003b8e4	str	x8, [sp, #0x40]
000000000003b8e8	mov	w9, #0x1
000000000003b8ec	add	x20, x20, #0x1
000000000003b8f0	ldr	x8, [x25, #0x40]
000000000003b8f4	add	x22, x22, #0x40
000000000003b8f8	cmp	x20, x8
000000000003b8fc	b.hs	0x3b970
000000000003b900	add	x24, x25, x22
000000000003b904	ldrb	w8, [x24, #0x79]
000000000003b908	tbz	w8, #0x0, 0x3b8e8
000000000003b90c	mov	x23, x9
000000000003b910	add	x0, x24, #0x78
000000000003b914	add	x21, x21, #0x1
000000000003b918	mov	w1, #0x0
000000000003b91c	bl	__mi_page_free_collect
000000000003b920	ldr	w8, [x24, #0x88]
000000000003b924	cbz	w8, 0x3b8dc
000000000003b928	add	x9, x25, x22
000000000003b92c	ldr	w10, [x9, #0x8c]
000000000003b930	ldr	x11, [sp, #0x38]
000000000003b934	cmp	x10, x11
000000000003b938	b.ne	0x3b958
000000000003b93c	ldrh	w9, [x9, #0x7c]
000000000003b940	cmp	w8, w9
000000000003b944	b.lo	0x3b8e8
000000000003b948	add	x8, x25, x22
000000000003b94c	ldr	x8, [x8, #0x98]
000000000003b950	cmp	x8, #0x4
000000000003b954	b.hs	0x3b8e8
000000000003b958	mov	x9, x23
000000000003b95c	add	x20, x20, #0x1
000000000003b960	ldr	x8, [x25, #0x40]
000000000003b964	add	x22, x22, #0x40
000000000003b968	cmp	x20, x8
000000000003b96c	b.lo	0x3b900
000000000003b970	ldr	x8, [sp, #0x40]
000000000003b974	cmp	x21, x8
000000000003b978	ldp	x22, x20, [sp, #0x18]
000000000003b97c	ldr	x23, [sp, #0x10]
000000000003b980	ldr	w24, [sp, #0xc]
000000000003b984	b.eq	0x3b9a4
000000000003b988	tbz	w9, #0x0, 0x3b998
000000000003b98c	ldr	w8, [x25, #0x70]
000000000003b990	cmp	w8, w24
000000000003b994	b.eq	0x3bb0c
000000000003b998	ldr	x8, [x25, #0x30]
000000000003b99c	cmp	x8, #0x2
000000000003b9a0	b.ls	0x3b9dc
000000000003b9a4	mov	x0, x25
000000000003b9a8	ldr	x1, [sp, #0x28]
000000000003b9ac	mov	x2, #0x0
000000000003b9b0	mov	x3, #0x0
000000000003b9b4	mov	x4, x22
000000000003b9b8	bl	_mi_segment_reclaim
000000000003b9bc	adr	x15, #0x4b2c4
000000000003b9c0	nop
000000000003b9c4	ldr	w10, [sp, #0x34]
000000000003b9c8	sub	w8, w10, #0x1
000000000003b9cc	adrp	x13, 75 ; 0x86000
000000000003b9d0	adrp	x9, 75 ; 0x86000
000000000003b9d4	cbnz	w10, 0x3b730
000000000003b9d8	b	0x3ba4c
000000000003b9dc	nop
000000000003b9e0	ldr	x9, #0x4b260
000000000003b9e4	b	0x3b9f8
000000000003b9e8	clrex
000000000003b9ec	mov	w10, #0x0
000000000003b9f0	mov	x9, x8
000000000003b9f4	cbnz	w10, 0x3ba20
000000000003b9f8	add	x8, x25, #0x10
000000000003b9fc	stlr	x9, [x8]
000000000003ba00	ldxr	x8, [x28]
000000000003ba04	cmp	x8, x9
000000000003ba08	b.ne	0x3b9e8
000000000003ba0c	stlxr	w9, x25, [x28]
000000000003ba10	cbnz	w9, 0x3b9ec
000000000003ba14	mov	w10, #0x1
000000000003ba18	mov	x9, x8
000000000003ba1c	cbz	w10, 0x3b9f8
000000000003ba20	adr	x15, #0x4b260
000000000003ba24	nop
000000000003ba28	ldxr	x8, [x15]
000000000003ba2c	add	x8, x8, #0x1
000000000003ba30	stxr	w9, x8, [x15]
000000000003ba34	cbnz	w9, 0x3ba28
000000000003ba38	b	0x3b9c4
000000000003ba3c	ldxr	x8, [x27]
000000000003ba40	sub	x8, x8, #0x1
000000000003ba44	stxr	w9, x8, [x27]
000000000003ba48	cbnz	w9, 0x3ba3c
000000000003ba4c	mov	x25, #0x0
000000000003ba50	ldrb	w8, [sp, #0x4f]
000000000003ba54	cbz	w8, 0x3bb30
000000000003ba58	mov	x25, #0x0
000000000003ba5c	b	0x3bae8
000000000003ba60	add	x10, x8, #0x1b8
000000000003ba64	ldxr	x9, [x10]
000000000003ba68	sub	x9, x9, #0x1
000000000003ba6c	stxr	w11, x9, [x10]
000000000003ba70	cbnz	w11, 0x3ba64
000000000003ba74	add	x10, x8, #0x1b0
000000000003ba78	ldr	x12, [x8, #0x1b0]
000000000003ba7c	b	0x3ba90
000000000003ba80	clrex
000000000003ba84	mov	w13, #0x0
000000000003ba88	mov	x12, x11
000000000003ba8c	cbnz	w13, 0x3bab8
000000000003ba90	cmp	x12, x9
000000000003ba94	b.ge	0x3bab8
000000000003ba98	ldxr	x11, [x10]
000000000003ba9c	cmp	x11, x12
000000000003baa0	b.ne	0x3ba80
000000000003baa4	stlxr	w12, x9, [x10]
000000000003baa8	cbnz	w12, 0x3ba84
000000000003baac	mov	w13, #0x1
000000000003bab0	mov	x12, x11
000000000003bab4	cbz	w13, 0x3ba90
000000000003bab8	add	x8, x8, #0x1a8
000000000003babc	ldxr	x9, [x8]
000000000003bac0	add	x9, x9, #0x1
000000000003bac4	stxr	w10, x9, [x8]
000000000003bac8	cbnz	w10, 0x3babc
000000000003bacc	mov	x0, x25
000000000003bad0	mov	x1, #0x0
000000000003bad4	mov	x2, x24
000000000003bad8	mov	x3, x23
000000000003badc	mov	x4, x22
000000000003bae0	mov	x5, x20
000000000003bae4	bl	_mi_segment_init
000000000003bae8	mov	x0, x25
000000000003baec	ldp	x29, x30, [sp, #0xa0]
000000000003baf0	ldp	x20, x19, [sp, #0x90]
000000000003baf4	ldp	x22, x21, [sp, #0x80]
000000000003baf8	ldp	x24, x23, [sp, #0x70]
000000000003bafc	ldp	x26, x25, [sp, #0x60]
000000000003bb00	ldp	x28, x27, [sp, #0x50]
000000000003bb04	add	sp, sp, #0xb0
000000000003bb08	ret
000000000003bb0c	add	x3, sp, #0x4f
000000000003bb10	mov	x0, x25
000000000003bb14	ldr	x1, [sp, #0x28]
000000000003bb18	ldr	x2, [sp, #0x38]
000000000003bb1c	mov	x4, x22
000000000003bb20	bl	_mi_segment_reclaim
000000000003bb24	mov	x25, x0
000000000003bb28	ldrb	w8, [sp, #0x4f]
000000000003bb2c	cbnz	w8, 0x3ba58
000000000003bb30	cbnz	x25, 0x3bae8
000000000003bb34	mov	x0, #0x0
000000000003bb38	mov	x1, #0x0
000000000003bb3c	mov	x2, x24
000000000003bb40	mov	x3, x23
000000000003bb44	mov	x4, x22
000000000003bb48	mov	x5, x20
000000000003bb4c	bl	_mi_segment_init
000000000003bb50	mov	x25, x0
000000000003bb54	b	0x3bae8
_mi_segment_find_free:
000000000003bb58	sub	sp, sp, #0x50
000000000003bb5c	stp	x24, x23, [sp, #0x10]
000000000003bb60	stp	x22, x21, [sp, #0x20]
000000000003bb64	stp	x20, x19, [sp, #0x30]
000000000003bb68	stp	x29, x30, [sp, #0x40]
000000000003bb6c	add	x29, sp, #0x40
000000000003bb70	ldr	x8, [x0, #0x40]
000000000003bb74	cbz	x8, 0x3bd64
000000000003bb78	mov	x20, x1
000000000003bb7c	mov	x21, x0
000000000003bb80	mov	x22, #0x0
000000000003bb84	add	x19, x0, #0x78
000000000003bb88	mov	w23, #0x1
000000000003bb8c	b	0x3bbc8
000000000003bb90	ldrb	w8, [x19, #0x1]
000000000003bb94	orr	w8, w8, #0x8
000000000003bb98	strb	w8, [x19, #0x1]
000000000003bb9c	tbnz	w0, #0x0, 0x3bd6c
000000000003bba0	and	w8, w8, #0xfe
000000000003bba4	strb	w8, [x19, #0x1]
000000000003bba8	ldr	x8, [x21, #0x38]
000000000003bbac	sub	x8, x8, #0x1
000000000003bbb0	str	x8, [x21, #0x38]
000000000003bbb4	add	x22, x22, #0x1
000000000003bbb8	ldr	x8, [x21, #0x40]
000000000003bbbc	add	x19, x19, #0x40
000000000003bbc0	cmp	x22, x8
000000000003bbc4	b.hs	0x3bd64
000000000003bbc8	ldrb	w9, [x19, #0x1]
000000000003bbcc	tbnz	w9, #0x0, 0x3bbb4
000000000003bbd0	ldp	x8, x10, [x19, #0x30]
000000000003bbd4	cbz	x8, 0x3bbe0
000000000003bbd8	cbnz	x10, 0x3bbe4
000000000003bbdc	b	0x3bbf0
000000000003bbe0	cbz	x10, 0x3bd48
000000000003bbe4	str	x8, [x10, #0x30]
000000000003bbe8	ldr	x8, [x19, #0x30]
000000000003bbec	cbz	x8, 0x3bbf4
000000000003bbf0	str	x10, [x8, #0x38]
000000000003bbf4	ldr	x9, [x20, #0x28]
000000000003bbf8	cmp	x19, x9
000000000003bbfc	b.eq	0x3bc3c
000000000003bc00	ldr	x9, [x20, #0x20]
000000000003bc04	cmp	x19, x9
000000000003bc08	b.eq	0x3bc50
000000000003bc0c	str	wzr, [x19, #0x10]
000000000003bc10	stp	xzr, xzr, [x19, #0x30]
000000000003bc14	ldrb	w9, [x19, #0x1]
000000000003bc18	tbnz	w9, #0x2, 0x3bcac
000000000003bc1c	ldr	w8, [x21, #0x70]
000000000003bc20	cmp	w8, #0x3
000000000003bc24	b.ne	0x3bc58
000000000003bc28	ldr	x1, [x21, #0x48]
000000000003bc2c	ldrb	w8, [x19]
000000000003bc30	madd	x0, x1, x8, x21
000000000003bc34	cbnz	x8, 0x3bc78
000000000003bc38	b	0x3bc6c
000000000003bc3c	ldr	x9, [x19, #0x38]
000000000003bc40	str	x9, [x20, #0x28]
000000000003bc44	ldr	x9, [x20, #0x20]
000000000003bc48	cmp	x19, x9
000000000003bc4c	b.ne	0x3bc0c
000000000003bc50	str	x8, [x20, #0x20]
000000000003bc54	b	0x3bc0c
000000000003bc58	ldr	x8, [x21, #0x60]
000000000003bc5c	lsl	x1, x23, x8
000000000003bc60	ldrb	w8, [x19]
000000000003bc64	madd	x0, x1, x8, x21
000000000003bc68	cbnz	x8, 0x3bc78
000000000003bc6c	ldr	x8, [x21, #0x50]
000000000003bc70	add	x0, x0, x8
000000000003bc74	sub	x1, x1, x8
000000000003bc78	strb	wzr, [sp, #0xe]
000000000003bc7c	add	x4, sp, #0xe
000000000003bc80	mov	w2, #0x1
000000000003bc84	mov	w3, #0x0
000000000003bc88	bl	_mi_os_commitx
000000000003bc8c	cbz	w0, 0x3bbb4
000000000003bc90	ldrb	w9, [sp, #0xe]
000000000003bc94	ldrb	w8, [x19, #0x1]
000000000003bc98	cbz	w9, 0x3bca4
000000000003bc9c	orr	w8, w8, #0x8
000000000003bca0	strb	w8, [x19, #0x1]
000000000003bca4	orr	w9, w8, #0x4
000000000003bca8	strb	w9, [x19, #0x1]
000000000003bcac	orr	w8, w9, #0x1
000000000003bcb0	strb	w8, [x19, #0x1]
000000000003bcb4	ldr	x8, [x21, #0x38]
000000000003bcb8	add	x8, x8, #0x1
000000000003bcbc	str	x8, [x21, #0x38]
000000000003bcc0	ldrb	w8, [x19, #0x1]
000000000003bcc4	tbz	w8, #0x1, 0x3bd6c
000000000003bcc8	mvn	w9, w8
000000000003bccc	tst	w9, #0x6
000000000003bcd0	b.ne	0x3bd6c
000000000003bcd4	ldrb	w9, [x21, #0x8]
000000000003bcd8	cbnz	w9, 0x3bd6c
000000000003bcdc	and	w8, w8, #0xfffffffd
000000000003bce0	strb	w8, [x19, #0x1]
000000000003bce4	ldr	w8, [x21, #0x70]
000000000003bce8	cmp	w8, #0x3
000000000003bcec	b.ne	0x3bd04
000000000003bcf0	ldr	x1, [x21, #0x48]
000000000003bcf4	ldrb	w8, [x19]
000000000003bcf8	madd	x0, x1, x8, x21
000000000003bcfc	cbnz	x8, 0x3bd24
000000000003bd00	b	0x3bd18
000000000003bd04	ldr	x8, [x21, #0x60]
000000000003bd08	lsl	x1, x23, x8
000000000003bd0c	ldrb	w8, [x19]
000000000003bd10	madd	x0, x1, x8, x21
000000000003bd14	cbnz	x8, 0x3bd24
000000000003bd18	ldr	x8, [x21, #0x50]
000000000003bd1c	add	x0, x0, x8
000000000003bd20	sub	x1, x1, x8
000000000003bd24	strb	wzr, [sp, #0xf]
000000000003bd28	cbz	x1, 0x3bd6c
000000000003bd2c	add	x2, sp, #0xf
000000000003bd30	bl	__mi_os_unreset
000000000003bd34	ldrb	w8, [sp, #0xf]
000000000003bd38	cbnz	w8, 0x3bb90
000000000003bd3c	tbnz	w0, #0x0, 0x3bd6c
000000000003bd40	ldrb	w8, [x19, #0x1]
000000000003bd44	b	0x3bba0
000000000003bd48	ldr	x10, [x20, #0x20]
000000000003bd4c	cmp	x19, x10
000000000003bd50	b.eq	0x3bbf4
000000000003bd54	ldr	x10, [x20, #0x28]
000000000003bd58	cmp	x19, x10
000000000003bd5c	b.ne	0x3bc18
000000000003bd60	b	0x3bbf4
000000000003bd64	mov	x19, #0x0
000000000003bd68	b	0x3bde4
000000000003bd6c	ldp	x8, x9, [x21, #0x38]
000000000003bd70	cmp	x8, x9
000000000003bd74	b.ne	0x3bde4
000000000003bd78	ldr	w8, [x21, #0x70]
000000000003bd7c	cmp	w8, #0x1
000000000003bd80	b.hi	0x3bde4
000000000003bd84	cbz	w8, 0x3bd94
000000000003bd88	cmp	w8, #0x1
000000000003bd8c	b.ne	0x3bde4
000000000003bd90	add	x20, x20, #0x10
000000000003bd94	mov	x8, x21
000000000003bd98	ldp	x9, x10, [x8, #0x18]!
000000000003bd9c	cbz	x9, 0x3bda8
000000000003bda0	cbnz	x10, 0x3bdac
000000000003bda4	b	0x3bdb8
000000000003bda8	cbz	x10, 0x3be00
000000000003bdac	str	x9, [x10, #0x18]
000000000003bdb0	ldr	x9, [x8]
000000000003bdb4	cbz	x9, 0x3bdbc
000000000003bdb8	str	x10, [x9, #0x20]
000000000003bdbc	ldr	x10, [x20]
000000000003bdc0	cmp	x10, x21
000000000003bdc4	b.ne	0x3bdcc
000000000003bdc8	str	x9, [x20]
000000000003bdcc	ldr	x9, [x20, #0x8]
000000000003bdd0	cmp	x9, x21
000000000003bdd4	b.ne	0x3bde0
000000000003bdd8	ldr	x9, [x21, #0x20]
000000000003bddc	str	x9, [x20, #0x8]
000000000003bde0	stp	xzr, xzr, [x8]
000000000003bde4	mov	x0, x19
000000000003bde8	ldp	x29, x30, [sp, #0x40]
000000000003bdec	ldp	x20, x19, [sp, #0x30]
000000000003bdf0	ldp	x22, x21, [sp, #0x20]
000000000003bdf4	ldp	x24, x23, [sp, #0x10]
000000000003bdf8	add	sp, sp, #0x50
000000000003bdfc	ret
000000000003be00	ldr	x10, [x20]
000000000003be04	cmp	x10, x21
000000000003be08	b.ne	0x3bde4
000000000003be0c	b	0x3bdbc
_mi_segment_init:
000000000003be10	sub	sp, sp, #0xc0
000000000003be14	stp	x28, x27, [sp, #0x60]
000000000003be18	stp	x26, x25, [sp, #0x70]
000000000003be1c	stp	x24, x23, [sp, #0x80]
000000000003be20	stp	x22, x21, [sp, #0x90]
000000000003be24	stp	x20, x19, [sp, #0xa0]
000000000003be28	stp	x29, x30, [sp, #0xb0]
000000000003be2c	add	x29, sp, #0xb0
000000000003be30	mov	x26, x5
000000000003be34	mov	x28, x4
000000000003be38	mov	x21, x3
000000000003be3c	mov	x20, x2
000000000003be40	mov	x23, x0
000000000003be44	mov	w8, #0x400000
000000000003be48	lsr	x9, x8, x3
000000000003be4c	cmp	w2, #0x3
000000000003be50	csinc	x27, x9, xzr, ne
000000000003be54	lsl	w9, w27, #6
000000000003be58	add	w9, w9, #0x187
000000000003be5c	and	x22, x9, #0x3fffff00
000000000003be60	add	x9, x1, x22
000000000003be64	mov	w10, #0x3ffff
000000000003be68	add	x9, x9, x10
000000000003be6c	and	x9, x9, #0xfffffffffffc0000
000000000003be70	cmp	x1, #0x0
000000000003be74	csel	x25, x8, x9, eq
000000000003be78	cmp	w2, #0x1
000000000003be7c	b.hi	0x3bf48
000000000003be80	ldr	x19, [x28, #0x38]
000000000003be84	mov	w0, #0xd
000000000003be88	bl	_mi_option_get
000000000003be8c	cmp	x19, x0
000000000003be90	b.hs	0x3bf48
000000000003be94	mov	w8, #0x0
000000000003be98	mov	w24, #0x0
000000000003be9c	strb	w24, [sp, #0x47]
000000000003bea0	strb	wzr, [sp, #0x46]
000000000003bea4	cbnz	x23, 0x3bf68
000000000003bea8	strb	w8, [sp, #0x45]
000000000003beac	strb	wzr, [sp, #0x46]
000000000003beb0	strb	wzr, [sp, #0x44]
000000000003beb4	cbz	x25, 0x3c848
000000000003beb8	nop
000000000003bebc	ldr	x8, #0x30784
000000000003bec0	add	x9, x25, x8
000000000003bec4	sub	x9, x9, #0x1
000000000003bec8	sub	x10, x8, #0x1
000000000003becc	udiv	x11, x9, x8
000000000003bed0	mul	x11, x11, x8
000000000003bed4	neg	x12, x8
000000000003bed8	and	x9, x9, x12
000000000003bedc	tst	x8, x10
000000000003bee0	csel	x23, x11, x9, ne
000000000003bee4	mov	w8, #0x3fffff
000000000003bee8	add	x8, x23, x8
000000000003beec	lsr	x9, x8, #22
000000000003bef0	cmp	x9, #0x10
000000000003bef4	b.hi	0x3c670
000000000003bef8	str	x8, [sp, #0x10]
000000000003befc	str	x21, [sp, #0x28]
000000000003bf00	adrp	x8, 75 ; 0x86000
000000000003bf04	ldr	x19, [x8, #0xb30]
000000000003bf08	str	x9, [sp, #0x38]
000000000003bf0c	cbz	x19, 0x3c998
000000000003bf10	adrp	x21, 75 ; 0x86000
000000000003bf14	cmp	x19, #0x2
000000000003bf18	str	x28, [sp, #0x30]
000000000003bf1c	stp	x23, x25, [sp, #0x18]
000000000003bf20	b.hs	0x3c16c
000000000003bf24	ldrb	w9, [sp, #0x45]
000000000003bf28	ldr	x23, [x21, #0xb70]
000000000003bf2c	cbz	x23, 0x3c210
000000000003bf30	ldr	x8, [x26]
000000000003bf34	adr	x19, #0x3aad4
000000000003bf38	nop
000000000003bf3c	mov	x25, x23
000000000003bf40	cbnz	w9, 0x3c0a4
000000000003bf44	b	0x3c130
000000000003bf48	mov	w0, #0x3
000000000003bf4c	bl	_mi_option_get
000000000003bf50	cmp	x0, #0x0
000000000003bf54	cset	w24, ne
000000000003bf58	mov	w8, #0x1
000000000003bf5c	strb	w24, [sp, #0x47]
000000000003bf60	strb	wzr, [sp, #0x46]
000000000003bf64	cbz	x23, 0x3bea8
000000000003bf68	cmp	w20, #0x1
000000000003bf6c	b.hi	0x3bfac
000000000003bf70	ldr	w8, [x23, #0x70]
000000000003bf74	cmp	w8, w20
000000000003bf78	b.ne	0x3bfac
000000000003bf7c	ldr	x8, [x23, #0x48]
000000000003bf80	cmp	x8, x25
000000000003bf84	b.ne	0x3bfac
000000000003bf88	add	x8, x23, #0x10
000000000003bf8c	stlr	xzr, [x8]
000000000003bf90	movi.16b	v0, #0x0
000000000003bf94	mov	x24, x23
000000000003bf98	str	q0, [x24, #0x18]!
000000000003bf9c	stp	q0, q0, [x24, #0x40]
000000000003bfa0	stp	q0, q0, [x24, #0x20]
000000000003bfa4	str	q0, [x24, #0x10]
000000000003bfa8	b	0x3c900
000000000003bfac	ldr	x8, [x23, #0x40]
000000000003bfb0	cbz	x8, 0x3c0e8
000000000003bfb4	str	w20, [sp, #0x38]
000000000003bfb8	mov	x20, x28
000000000003bfbc	mov	x28, x22
000000000003bfc0	mov	x22, x25
000000000003bfc4	mov	x19, x21
000000000003bfc8	mov	x25, #0x0
000000000003bfcc	add	x26, x23, #0x79
000000000003bfd0	mov	w21, #0x1
000000000003bfd4	b	0x3bff4
000000000003bfd8	ldrb	w8, [x23, #0x8]
000000000003bfdc	cbz	w8, 0x3c01c
000000000003bfe0	add	x25, x25, #0x1
000000000003bfe4	ldr	x8, [x23, #0x40]
000000000003bfe8	add	x26, x26, #0x40
000000000003bfec	cmp	x25, x8
000000000003bff0	b.hs	0x3c0d4
000000000003bff4	ldrb	w8, [x26]
000000000003bff8	tbz	w8, #0x1, 0x3bfe0
000000000003bffc	tbnz	w24, #0x0, 0x3bfd8
000000000003c000	mov	w0, #0x5
000000000003c004	bl	_mi_option_get
000000000003c008	cbz	x0, 0x3bfd8
000000000003c00c	ldrb	w8, [x26]
000000000003c010	and	w8, w8, #0xfffffffd
000000000003c014	strb	w8, [x26]
000000000003c018	b	0x3bfe0
000000000003c01c	ldrb	w8, [x26]
000000000003c020	mvn	w9, w8
000000000003c024	tst	w9, #0x6
000000000003c028	b.ne	0x3bfe0
000000000003c02c	and	w8, w8, #0xfffffffd
000000000003c030	strb	w8, [x26]
000000000003c034	ldr	w8, [x23, #0x70]
000000000003c038	cmp	w8, #0x3
000000000003c03c	b.ne	0x3c054
000000000003c040	ldr	x1, [x23, #0x48]
000000000003c044	ldurb	w8, [x26, #-0x1]
000000000003c048	madd	x0, x1, x8, x23
000000000003c04c	cbnz	x8, 0x3c074
000000000003c050	b	0x3c068
000000000003c054	ldr	x8, [x23, #0x60]
000000000003c058	lsl	x1, x21, x8
000000000003c05c	ldurb	w8, [x26, #-0x1]
000000000003c060	madd	x0, x1, x8, x23
000000000003c064	cbnz	x8, 0x3c074
000000000003c068	ldr	x8, [x23, #0x50]
000000000003c06c	add	x0, x0, x8
000000000003c070	sub	x1, x1, x8
000000000003c074	strb	wzr, [sp, #0x50]
000000000003c078	cbz	x1, 0x3bfe0
000000000003c07c	add	x2, sp, #0x50
000000000003c080	bl	__mi_os_unreset
000000000003c084	ldrb	w8, [sp, #0x50]
000000000003c088	cbz	w8, 0x3bfe0
000000000003c08c	ldrb	w8, [x26]
000000000003c090	orr	w8, w8, #0x8
000000000003c094	b	0x3c014
000000000003c098	add	x8, x21, #0x1
000000000003c09c	subs	x25, x25, #0x1
000000000003c0a0	b.eq	0x3c210
000000000003c0a4	cmp	x8, x23
000000000003c0a8	csel	x21, x8, xzr, lo
000000000003c0ac	add	x24, x19, x21, lsl #6
000000000003c0b0	ldr	x8, [x24]
000000000003c0b4	cbz	x8, 0x3c098
000000000003c0b8	add	x0, x24, #0x10
000000000003c0bc	add	x2, sp, #0x48
000000000003c0c0	ldr	x1, [sp, #0x38]
000000000003c0c4	bl	__mi_bitmap_try_find_claim_field
000000000003c0c8	ldr	x14, [sp, #0x38]
000000000003c0cc	tbz	w0, #0x0, 0x3c098
000000000003c0d0	b	0x3c200
000000000003c0d4	mov	x21, x19
000000000003c0d8	mov	x25, x22
000000000003c0dc	mov	x22, x28
000000000003c0e0	mov	x28, x20
000000000003c0e4	ldr	w20, [sp, #0x38]
000000000003c0e8	cmp	x8, x27
000000000003c0ec	b.hs	0x3c8ac
000000000003c0f0	strb	wzr, [sp, #0x50]
000000000003c0f4	mov	w19, #0x1
000000000003c0f8	add	x4, sp, #0x50
000000000003c0fc	mov	x0, x23
000000000003c100	mov	x1, x22
000000000003c104	mov	w2, #0x1
000000000003c108	mov	w3, #0x0
000000000003c10c	bl	_mi_os_commitx
000000000003c110	ldrb	w8, [sp, #0x50]
000000000003c114	cbz	w8, 0x3c11c
000000000003c118	strb	w19, [sp, #0x46]
000000000003c11c	tbnz	w0, #0x0, 0x3c8ac
000000000003c120	b	0x3c848
000000000003c124	add	x8, x21, #0x1
000000000003c128	subs	x25, x25, #0x1
000000000003c12c	b.eq	0x3c210
000000000003c130	cmp	x8, x23
000000000003c134	csel	x21, x8, xzr, lo
000000000003c138	add	x24, x19, x21, lsl #6
000000000003c13c	ldr	x8, [x24]
000000000003c140	and	x9, x8, #0x100
000000000003c144	cmp	x8, #0x0
000000000003c148	ccmp	x9, #0x0, #0x0, ne
000000000003c14c	b.ne	0x3c124
000000000003c150	add	x0, x24, #0x10
000000000003c154	add	x2, sp, #0x48
000000000003c158	ldr	x1, [sp, #0x38]
000000000003c15c	bl	__mi_bitmap_try_find_claim_field
000000000003c160	ldr	x14, [sp, #0x38]
000000000003c164	tbz	w0, #0x0, 0x3c124
000000000003c168	b	0x3c200
000000000003c16c	ldr	x8, [x8, #0xb30]
000000000003c170	cmp	x8, #0x1
000000000003c174	b.ne	0x3c9d8
000000000003c178	ldrb	w23, [sp, #0x45]
000000000003c17c	ldr	x25, [x21, #0xb70]
000000000003c180	cbz	x25, 0x3c210
000000000003c184	ldr	x8, [x26]
000000000003c188	adr	x19, #0x3a880
000000000003c18c	nop
000000000003c190	mov	x28, x25
000000000003c194	b	0x3c1a4
000000000003c198	add	x8, x21, #0x1
000000000003c19c	subs	x28, x28, #0x1
000000000003c1a0	b.eq	0x3c210
000000000003c1a4	cmp	x8, x25
000000000003c1a8	csel	x21, x8, xzr, lo
000000000003c1ac	add	x24, x19, x21, lsl #6
000000000003c1b0	ldr	x8, [x24]
000000000003c1b4	cbz	x8, 0x3c198
000000000003c1b8	cmp	w23, #0x0
000000000003c1bc	cset	w10, eq
000000000003c1c0	ubfx	x11, x8, #8, #1
000000000003c1c4	cmp	w8, #0x0
000000000003c1c8	cset	w9, lt
000000000003c1cc	cmp	w8, #0x10, lsl #12
000000000003c1d0	cset	w8, lo
000000000003c1d4	and	w10, w10, w11
000000000003c1d8	tbnz	w10, #0x0, 0x3c198
000000000003c1dc	orr	w8, w9, w8
000000000003c1e0	cbz	w8, 0x3c198
000000000003c1e4	add	x8, x19, x21, lsl #6
000000000003c1e8	add	x0, x8, #0x10
000000000003c1ec	add	x2, sp, #0x48
000000000003c1f0	ldr	x1, [sp, #0x38]
000000000003c1f4	bl	__mi_bitmap_try_find_claim_field
000000000003c1f8	ldr	x14, [sp, #0x38]
000000000003c1fc	tbz	w0, #0x0, 0x3c198
000000000003c200	ldr	x25, [sp, #0x20]
000000000003c204	str	x21, [x26]
000000000003c208	ldr	x28, [sp, #0x30]
000000000003c20c	b	0x3c3b8
000000000003c210	ldrb	w19, [sp, #0x47]
000000000003c214	ldrb	w21, [sp, #0x45]
000000000003c218	nop
000000000003c21c	ldr	x8, #0x4a954
000000000003c220	cmp	x8, #0x3fe
000000000003c224	ldr	x28, [sp, #0x30]
000000000003c228	ldr	x25, [sp, #0x20]
000000000003c22c	b.hi	0x3c658
000000000003c230	cbz	w19, 0x3c248
000000000003c234	mov	w0, #0x4
000000000003c238	bl	_mi_option_get
000000000003c23c	cmp	x0, #0x0
000000000003c240	cset	w8, ne
000000000003c244	b	0x3c24c
000000000003c248	mov	w8, #0x0
000000000003c24c	cmp	w21, #0x0
000000000003c250	cset	w9, ne
000000000003c254	cmp	w19, #0x0
000000000003c258	sturb	w8, [x29, #-0x51]
000000000003c25c	cset	w8, ne
000000000003c260	and	w8, w8, w9
000000000003c264	sturb	w8, [x29, #-0x52]
000000000003c268	sturh	wzr, [x29, #-0x54]
000000000003c26c	str	xzr, [sp, #0x50]
000000000003c270	sub	x1, x29, #0x51
000000000003c274	sub	x2, x29, #0x52
000000000003c278	sub	x3, x29, #0x54
000000000003c27c	sub	x4, x29, #0x53
000000000003c280	add	x5, sp, #0x50
000000000003c284	mov	w0, #0x10000000
000000000003c288	bl	__mi_arena_alloc_aligned
000000000003c28c	cbz	x0, 0x3c2ec
000000000003c290	adr	x9, #0x4a8e0
000000000003c294	nop
000000000003c298	ldr	x14, [sp, #0x38]
000000000003c29c	ldaxr	x8, [x9]
000000000003c2a0	add	x10, x8, #0x1
000000000003c2a4	stlxr	w11, x10, [x9]
000000000003c2a8	cbnz	w11, 0x3c29c
000000000003c2ac	cmp	x8, #0x400
000000000003c2b0	ldr	x13, [sp, #0x10]
000000000003c2b4	b.lo	0x3c2fc
000000000003c2b8	ldaxr	x8, [x9]
000000000003c2bc	sub	x8, x8, #0x1
000000000003c2c0	stlxr	w10, x8, [x9]
000000000003c2c4	cbnz	w10, 0x3c2b8
000000000003c2c8	ldr	x2, [sp, #0x50]
000000000003c2cc	ldurb	w3, [x29, #-0x51]
000000000003c2d0	mov	w1, #0x10000000
000000000003c2d4	bl	__mi_arena_free
000000000003c2d8	mov	w8, #0x100
000000000003c2dc	str	x8, [sp]
000000000003c2e0	adr	x0, #0x1a595 ; literal pool for: "maximum regions used: %zu GiB (perhaps recompile with a larger setting for MI_HEAP_REGION_MAX_SIZE)"
000000000003c2e4	nop
000000000003c2e8	bl	__mi_warning_message
000000000003c2ec	mov	w8, #0x0
000000000003c2f0	ldr	x14, [sp, #0x38]
000000000003c2f4	cbnz	w8, 0x3c3b8
000000000003c2f8	b	0x3c658
000000000003c2fc	adr	x9, #0x3a70c
000000000003c300	nop
000000000003c304	add	x24, x9, x8, lsl #6
000000000003c308	ldr	x10, [sp, #0x50]
000000000003c30c	add	x11, x24, #0x30
000000000003c310	stlr	x10, [x11]
000000000003c314	add	x10, x24, #0x10
000000000003c318	stlr	xzr, [x10]
000000000003c31c	add	x11, x24, #0x18
000000000003c320	ldurb	w12, [x29, #-0x53]
000000000003c324	sub	x12, x12, #0x1
000000000003c328	stlr	x12, [x11]
000000000003c32c	add	x11, x24, #0x20
000000000003c330	ldurb	w12, [x29, #-0x51]
000000000003c334	sbfx	w12, w12, #0, #1
000000000003c338	sxtw	x12, w12
000000000003c33c	stlr	x12, [x11]
000000000003c340	add	x11, x24, #0x28
000000000003c344	stlr	xzr, [x11]
000000000003c348	str	xzr, [sp, #0x48]
000000000003c34c	mov	x11, #-0x1
000000000003c350	lsr	x12, x13, #28
000000000003c354	lsl	x13, x11, x14
000000000003c358	cmp	x14, #0x0
000000000003c35c	csinv	x13, xzr, x13, eq
000000000003c360	cmp	x12, #0x0
000000000003c364	csel	x11, x11, x13, ne
000000000003c368	ldaxr	x12, [x10]
000000000003c36c	orr	x12, x12, x11
000000000003c370	stlxr	w13, x12, [x10]
000000000003c374	cbnz	w13, 0x3c368
000000000003c378	add	x8, x9, x8, lsl #6
000000000003c37c	add	x8, x8, #0x8
000000000003c380	stlr	x0, [x8]
000000000003c384	ldurb	w8, [x29, #-0x52]
000000000003c388	ldurb	w9, [x29, #-0x54]
000000000003c38c	orr	w19, w8, w9, lsl #1
000000000003c390	adrp	x9, 74 ; 0x86000
000000000003c394	ldr	x8, [x9, #0xb30]
000000000003c398	cmp	x8, #0x1
000000000003c39c	b.ne	0x3ca1c
000000000003c3a0	and	x9, x19, #0xff
000000000003c3a4	mov	w8, #0x1
000000000003c3a8	mov	w10, #0x1
000000000003c3ac	bfi	x10, x9, #8, #8
000000000003c3b0	stlr	x10, [x24]
000000000003c3b4	cbz	w8, 0x3c658
000000000003c3b8	ldar	x8, [x24]
000000000003c3bc	add	x9, x24, #0x8
000000000003c3c0	ldar	x15, [x9]
000000000003c3c4	add	x10, x24, #0x18
000000000003c3c8	ldr	x9, [sp, #0x48]
000000000003c3cc	lsr	x11, x9, #6
000000000003c3d0	and	x9, x9, #0x3f
000000000003c3d4	mov	x12, #-0x1
000000000003c3d8	ldr	x19, [sp, #0x10]
000000000003c3dc	lsr	x16, x19, #28
000000000003c3e0	lsl	x13, x12, x14
000000000003c3e4	mvn	x13, x13
000000000003c3e8	lsl	x9, x13, x9
000000000003c3ec	cmp	x14, #0x0
000000000003c3f0	csel	x9, xzr, x9, eq
000000000003c3f4	cmp	x16, #0x0
000000000003c3f8	csel	x9, x12, x9, ne
000000000003c3fc	add	x10, x10, x11, lsl #3
000000000003c400	ldaxr	x11, [x10]
000000000003c404	orr	x12, x11, x9
000000000003c408	stlxr	w13, x12, [x10]
000000000003c40c	cbnz	w13, 0x3c400
000000000003c410	tst	x11, x9
000000000003c414	cset	w9, eq
000000000003c418	strb	w9, [sp, #0x46]
000000000003c41c	ubfx	w9, w8, #8, #1
000000000003c420	strb	w9, [sp, #0x45]
000000000003c424	ubfx	w8, w8, #9, #1
000000000003c428	strb	w8, [sp, #0x44]
000000000003c42c	ldr	x21, [sp, #0x48]
000000000003c430	lsl	w8, w21, #22
000000000003c434	and	x8, x8, #0xfc00000
000000000003c438	add	x23, x15, x8
000000000003c43c	ldrb	w9, [sp, #0x47]
000000000003c440	add	x8, x24, #0x20
000000000003c444	cbz	w9, 0x3c4d4
000000000003c448	lsr	x10, x21, #6
000000000003c44c	and	x9, x21, #0x3f
000000000003c450	mov	x11, #-0x1
000000000003c454	lsl	x12, x11, x14
000000000003c458	mvn	x12, x12
000000000003c45c	lsl	x9, x12, x9
000000000003c460	cmp	x14, #0x0
000000000003c464	csel	x9, xzr, x9, eq
000000000003c468	cmp	x16, #0x0
000000000003c46c	csel	x9, x11, x9, ne
000000000003c470	add	x8, x8, x10, lsl #3
000000000003c474	ldaxr	x10, [x8]
000000000003c478	orr	x11, x10, x9
000000000003c47c	stlxr	w12, x11, [x8]
000000000003c480	cbnz	w12, 0x3c474
000000000003c484	bics	xzr, x9, x10
000000000003c488	b.eq	0x3c510
000000000003c48c	mov	x26, x16
000000000003c490	str	x15, [sp, #0x8]
000000000003c494	strb	wzr, [sp, #0x50]
000000000003c498	and	x1, x19, #0xffffffffffc00000
000000000003c49c	add	x4, sp, #0x50
000000000003c4a0	mov	x0, x23
000000000003c4a4	mov	w2, #0x1
000000000003c4a8	mov	w3, #0x0
000000000003c4ac	bl	_mi_os_commitx
000000000003c4b0	tbz	w0, #0x0, 0x3c60c
000000000003c4b4	ldrb	w8, [sp, #0x50]
000000000003c4b8	ldr	x14, [sp, #0x38]
000000000003c4bc	mov	x16, x26
000000000003c4c0	cbz	w8, 0x3c4cc
000000000003c4c4	mov	w8, #0x1
000000000003c4c8	strb	w8, [sp, #0x46]
000000000003c4cc	ldr	x15, [sp, #0x8]
000000000003c4d0	b	0x3c510
000000000003c4d4	and	x9, x21, #0x3f
000000000003c4d8	mov	x10, #-0x1
000000000003c4dc	lsl	x11, x10, x14
000000000003c4e0	mvn	x11, x11
000000000003c4e4	lsl	x9, x11, x9
000000000003c4e8	cmp	x14, #0x0
000000000003c4ec	csel	x9, xzr, x9, eq
000000000003c4f0	cmp	x16, #0x0
000000000003c4f4	csel	x9, x10, x9, ne
000000000003c4f8	lsr	x10, x21, #3
000000000003c4fc	and	x10, x10, #0x1ffffffffffffff8
000000000003c500	ldr	x8, [x8, x10]
000000000003c504	bics	xzr, x9, x8
000000000003c508	cset	w8, eq
000000000003c50c	strb	w8, [sp, #0x47]
000000000003c510	adr	x8, #0x3a4f8
000000000003c514	nop
000000000003c518	sub	x8, x24, x8
000000000003c51c	add	x8, x8, x21
000000000003c520	lsl	x26, x8, #1
000000000003c524	add	x8, x24, #0x28
000000000003c528	ldr	x10, [sp, #0x48]
000000000003c52c	cbz	x16, 0x3c550
000000000003c530	lsr	x9, x10, #3
000000000003c534	and	x9, x9, #0x1ffffffffffffff8
000000000003c538	add	x8, x8, x9
000000000003c53c	ldr	x9, [x8]
000000000003c540	ldr	x21, [sp, #0x28]
000000000003c544	cbz	x9, 0x3c604
000000000003c548	mov	x9, #0x0
000000000003c54c	b	0x3c5a8
000000000003c550	and	x9, x10, #0x3f
000000000003c554	mov	x11, #-0x1
000000000003c558	lsl	x11, x11, x14
000000000003c55c	mvn	x11, x11
000000000003c560	lsl	x11, x11, x9
000000000003c564	cmp	x14, #0x0
000000000003c568	csel	x11, xzr, x11, eq
000000000003c56c	lsr	x10, x10, #3
000000000003c570	and	x10, x10, #0x1ffffffffffffff8
000000000003c574	add	x8, x8, x10
000000000003c578	ldr	x10, [x8]
000000000003c57c	tst	x10, x11
000000000003c580	ldr	x21, [sp, #0x28]
000000000003c584	b.eq	0x3c604
000000000003c588	mov	x10, #-0x1
000000000003c58c	lsl	x11, x10, x14
000000000003c590	mvn	x11, x11
000000000003c594	lsl	x9, x11, x9
000000000003c598	cmp	x14, #0x0
000000000003c59c	csinv	x9, x10, x9, eq
000000000003c5a0	cmp	x16, #0x0
000000000003c5a4	csel	x9, xzr, x9, ne
000000000003c5a8	ldaxr	x10, [x8]
000000000003c5ac	and	x10, x10, x9
000000000003c5b0	stlxr	w11, x10, [x8]
000000000003c5b4	cbnz	w11, 0x3c5a8
000000000003c5b8	ldrb	w8, [sp, #0x47]
000000000003c5bc	cbz	w8, 0x3c5f0
000000000003c5c0	mov	x24, x15
000000000003c5c4	strb	wzr, [sp, #0x50]
000000000003c5c8	and	x1, x19, #0xffffffffffc00000
000000000003c5cc	add	x2, sp, #0x50
000000000003c5d0	mov	x0, x23
000000000003c5d4	bl	__mi_os_unreset
000000000003c5d8	ldrb	w8, [sp, #0x50]
000000000003c5dc	cbz	w8, 0x3c5e8
000000000003c5e0	mov	w8, #0x1
000000000003c5e4	strb	w8, [sp, #0x46]
000000000003c5e8	mov	x15, x24
000000000003c5ec	b	0x3c604
000000000003c5f0	mov	w0, #0x5
000000000003c5f4	mov	x24, x15
000000000003c5f8	bl	_mi_option_get
000000000003c5fc	mov	x15, x24
000000000003c600	cbz	x0, 0x3c5c0
000000000003c604	cbnz	x15, 0x3c69c
000000000003c608	b	0x3c65c
000000000003c60c	add	x9, x24, #0x10
000000000003c610	ldr	x10, [sp, #0x48]
000000000003c614	and	x8, x10, #0x3f
000000000003c618	mov	x11, #-0x1
000000000003c61c	ldr	x13, [sp, #0x38]
000000000003c620	lsl	x12, x11, x13
000000000003c624	mvn	x12, x12
000000000003c628	lsl	x8, x12, x8
000000000003c62c	cmp	x13, #0x0
000000000003c630	csinv	x8, x11, x8, eq
000000000003c634	cmp	x26, #0x0
000000000003c638	csel	x8, xzr, x8, ne
000000000003c63c	lsr	x10, x10, #3
000000000003c640	and	x10, x10, #0x1ffffffffffffff8
000000000003c644	add	x9, x9, x10
000000000003c648	ldaxr	x10, [x9]
000000000003c64c	and	x10, x10, x8
000000000003c650	stlxr	w11, x10, [x9]
000000000003c654	cbnz	w11, 0x3c648
000000000003c658	ldr	x21, [sp, #0x28]
000000000003c65c	ldr	x23, [sp, #0x18]
000000000003c660	str	x23, [sp]
000000000003c664	adr	x0, #0x1a275 ; literal pool for: "unable to allocate from region: size %zu\n"
000000000003c668	nop
000000000003c66c	bl	__mi_warning_message
000000000003c670	add	x1, sp, #0x47
000000000003c674	add	x2, sp, #0x45
000000000003c678	add	x3, sp, #0x44
000000000003c67c	add	x4, sp, #0x46
000000000003c680	add	x5, sp, #0x50
000000000003c684	mov	x0, x23
000000000003c688	bl	__mi_arena_alloc_aligned
000000000003c68c	mov	x23, x0
000000000003c690	ldr	x8, [sp, #0x50]
000000000003c694	mov	w26, #0x1
000000000003c698	bfi	x26, x8, #1, #63
000000000003c69c	cbz	x23, 0x3c848
000000000003c6a0	ldrb	w8, [sp, #0x47]
000000000003c6a4	cbz	w8, 0x3c6b0
000000000003c6a8	mov	w8, #0x1
000000000003c6ac	b	0x3c6e4
000000000003c6b0	strb	wzr, [sp, #0x50]
000000000003c6b4	mov	w19, #0x1
000000000003c6b8	add	x4, sp, #0x50
000000000003c6bc	mov	x0, x23
000000000003c6c0	mov	x1, x22
000000000003c6c4	mov	w2, #0x1
000000000003c6c8	mov	w3, #0x0
000000000003c6cc	bl	_mi_os_commitx
000000000003c6d0	ldrb	w8, [sp, #0x50]
000000000003c6d4	cbz	w8, 0x3c6dc
000000000003c6d8	strb	w19, [sp, #0x46]
000000000003c6dc	tbz	w0, #0x0, 0x3c830
000000000003c6e0	mov	w8, #0x0
000000000003c6e4	str	x26, [x23]
000000000003c6e8	ldrb	w9, [sp, #0x45]
000000000003c6ec	ldrb	w10, [sp, #0x44]
000000000003c6f0	and	w10, w10, #0x1
000000000003c6f4	orr	w9, w10, w9
000000000003c6f8	strb	w9, [x23, #0x8]
000000000003c6fc	strb	w8, [x23, #0x9]
000000000003c700	ldr	x8, [x28, #0x70]
000000000003c704	adr	x9, #0x4a93c
000000000003c708	nop
000000000003c70c	cmp	x8, x9
000000000003c710	cset	w10, hs
000000000003c714	add	x9, x9, #0x240
000000000003c718	cmp	x8, x9
000000000003c71c	cset	w9, lo
000000000003c720	and	w9, w10, w9
000000000003c724	add	x11, x8, #0x18
000000000003c728	tbnz	x25, #0x3f, 0x3c79c
000000000003c72c	cbz	w9, 0x3c810
000000000003c730	ldxr	x9, [x11]
000000000003c734	add	x10, x9, #0x1
000000000003c738	stxr	w12, x10, [x11]
000000000003c73c	cbnz	w12, 0x3c730
000000000003c740	add	x11, x8, #0x10
000000000003c744	ldr	x13, [x8, #0x10]
000000000003c748	b	0x3c75c
000000000003c74c	clrex
000000000003c750	mov	w14, #0x0
000000000003c754	mov	x13, x12
000000000003c758	cbnz	w14, 0x3c784
000000000003c75c	cmp	x13, x9
000000000003c760	b.gt	0x3c784
000000000003c764	ldxr	x12, [x11]
000000000003c768	cmp	x12, x13
000000000003c76c	b.ne	0x3c74c
000000000003c770	stlxr	w13, x10, [x11]
000000000003c774	cbnz	w13, 0x3c750
000000000003c778	mov	w14, #0x1
000000000003c77c	mov	x13, x12
000000000003c780	cbz	w14, 0x3c75c
000000000003c784	mov	w9, #0x1
000000000003c788	ldxr	x10, [x8]
000000000003c78c	add	x10, x10, #0x1
000000000003c790	stxr	w11, x10, [x8]
000000000003c794	cbnz	w11, 0x3c788
000000000003c798	b	0x3c87c
000000000003c79c	cbz	w9, 0x3c850
000000000003c7a0	ldxr	x9, [x11]
000000000003c7a4	sub	x9, x9, #0x1
000000000003c7a8	stxr	w10, x9, [x11]
000000000003c7ac	cbnz	w10, 0x3c7a0
000000000003c7b0	add	x10, x8, #0x10
000000000003c7b4	ldr	x12, [x8, #0x10]
000000000003c7b8	b	0x3c7cc
000000000003c7bc	clrex
000000000003c7c0	mov	w13, #0x0
000000000003c7c4	mov	x12, x11
000000000003c7c8	cbnz	w13, 0x3c7f4
000000000003c7cc	cmp	x12, x9
000000000003c7d0	b.ge	0x3c7f4
000000000003c7d4	ldxr	x11, [x10]
000000000003c7d8	cmp	x11, x12
000000000003c7dc	b.ne	0x3c7bc
000000000003c7e0	stlxr	w12, x9, [x10]
000000000003c7e4	cbnz	w12, 0x3c7c0
000000000003c7e8	mov	w13, #0x1
000000000003c7ec	mov	x12, x11
000000000003c7f0	cbz	w13, 0x3c7cc
000000000003c7f4	add	x8, x8, #0x8
000000000003c7f8	ldxr	x9, [x8]
000000000003c7fc	add	x9, x9, #0x1
000000000003c800	stxr	w10, x9, [x8]
000000000003c804	cbnz	w10, 0x3c7f8
000000000003c808	mov	x9, #-0x1
000000000003c80c	b	0x3c87c
000000000003c810	ldp	x11, x10, [x8, #0x10]
000000000003c814	add	x9, x10, #0x1
000000000003c818	str	x9, [x8, #0x18]
000000000003c81c	cmp	x10, x11
000000000003c820	b.lt	0x3c828
000000000003c824	str	x9, [x8, #0x10]
000000000003c828	mov	w9, #0x1
000000000003c82c	b	0x3c870
000000000003c830	mov	x0, x23
000000000003c834	mov	w1, #0x400000
000000000003c838	mov	x2, x26
000000000003c83c	mov	w3, #0x0
000000000003c840	mov	w4, #0x0
000000000003c844	bl	__mi_mem_free
000000000003c848	mov	x23, #0x0
000000000003c84c	b	0x3c974
000000000003c850	ldp	x10, x9, [x8, #0x10]
000000000003c854	sub	x9, x9, #0x1
000000000003c858	str	x9, [x8, #0x18]
000000000003c85c	cmp	x9, x10
000000000003c860	b.le	0x3c868
000000000003c864	str	x9, [x8, #0x10]
000000000003c868	add	x8, x8, #0x8
000000000003c86c	mov	x9, #-0x1
000000000003c870	ldr	x10, [x8]
000000000003c874	add	x10, x10, #0x1
000000000003c878	str	x10, [x8]
000000000003c87c	ldp	x8, x10, [x28, #0x38]
000000000003c880	add	x8, x8, x9
000000000003c884	str	x8, [x28, #0x38]
000000000003c888	cmp	x8, x10
000000000003c88c	b.ls	0x3c894
000000000003c890	str	x8, [x28, #0x40]
000000000003c894	ldp	x8, x9, [x28, #0x48]
000000000003c898	add	x8, x8, x25
000000000003c89c	str	x8, [x28, #0x48]
000000000003c8a0	cmp	x8, x9
000000000003c8a4	b.ls	0x3c8ac
000000000003c8a8	str	x8, [x28, #0x50]
000000000003c8ac	add	x8, x23, #0x10
000000000003c8b0	stlr	xzr, [x8]
000000000003c8b4	add	x24, x23, #0x18
000000000003c8b8	sub	x1, x22, #0x18
000000000003c8bc	mov	x0, x24
000000000003c8c0	bl	0x519d4 ; symbol stub for: _bzero
000000000003c8c4	mov	x8, #0x0
000000000003c8c8	add	x9, x23, x8, lsl #6
000000000003c8cc	strb	w8, [x9, #0x78]
000000000003c8d0	ldrb	w10, [x9, #0x79]
000000000003c8d4	ldrb	w11, [sp, #0x47]
000000000003c8d8	and	w10, w10, #0xfffffff1
000000000003c8dc	orr	w10, w10, w11, lsl #2
000000000003c8e0	ldrb	w11, [sp, #0x46]
000000000003c8e4	and	w10, w10, #0xfffffff7
000000000003c8e8	orr	w10, w10, w11, lsl #3
000000000003c8ec	strb	w10, [x9, #0x79]
000000000003c8f0	add	w8, w8, #0x1
000000000003c8f4	and	x8, x8, #0xff
000000000003c8f8	cmp	x27, x8
000000000003c8fc	b.hi	0x3c8c8
000000000003c900	str	w20, [x23, #0x70]
000000000003c904	str	x21, [x23, #0x60]
000000000003c908	stp	x27, x25, [x23, #0x40]
000000000003c90c	str	x22, [x23, #0x50]
000000000003c910	bl	0x51cb0 ; symbol stub for: _pthread_self
000000000003c914	bl	0x51c68 ; symbol stub for: _pthread_mach_thread_np
000000000003c918	mov	w8, w0
000000000003c91c	add	x9, x23, #0x68
000000000003c920	stlr	x8, [x9]
000000000003c924	nop
000000000003c928	ldr	x8, #0x2f880
000000000003c92c	eor	x8, x8, x23
000000000003c930	str	x8, [x23, #0x58]
000000000003c934	cmp	w20, #0x1
000000000003c938	b.hi	0x3c974
000000000003c93c	ldr	w8, [x23, #0x70]
000000000003c940	add	x9, x28, #0x10
000000000003c944	cmp	w8, #0x0
000000000003c948	csel	x10, xzr, x28, ne
000000000003c94c	cmp	w8, #0x1
000000000003c950	csel	x8, x9, x10, eq
000000000003c954	str	xzr, [x24]
000000000003c958	ldr	x9, [x8, #0x8]
000000000003c95c	str	x9, [x23, #0x20]
000000000003c960	add	x10, x9, #0x18
000000000003c964	cmp	x9, #0x0
000000000003c968	csel	x9, x8, x10, eq
000000000003c96c	str	x23, [x9]
000000000003c970	str	x23, [x8, #0x8]
000000000003c974	mov	x0, x23
000000000003c978	ldp	x29, x30, [sp, #0xb0]
000000000003c97c	ldp	x20, x19, [sp, #0xa0]
000000000003c980	ldp	x22, x21, [sp, #0x90]
000000000003c984	ldp	x24, x23, [sp, #0x80]
000000000003c988	ldp	x26, x25, [sp, #0x70]
000000000003c98c	ldp	x28, x27, [sp, #0x60]
000000000003c990	add	sp, sp, #0xc0
000000000003c994	ret
000000000003c998	adr	x21, #0x4a198
000000000003c99c	nop
000000000003c9a0	ldar	x19, [x21]
000000000003c9a4	cbnz	x19, 0x3bf10
000000000003c9a8	mov	w0, #0xf
000000000003c9ac	mov	x24, x8
000000000003c9b0	bl	_mi_option_get
000000000003c9b4	cmp	x0, #0x1
000000000003c9b8	csinc	x19, x0, xzr, gt
000000000003c9bc	stlr	x19, [x21]
000000000003c9c0	str	x19, [sp]
000000000003c9c4	adr	x0, #0x1993f ; literal pool for: "using %zd numa regions\n"
000000000003c9c8	nop
000000000003c9cc	bl	__mi_verbose_message
000000000003c9d0	mov	x8, x24
000000000003c9d4	b	0x3bf10
000000000003c9d8	nop
000000000003c9dc	ldr	x8, #0x4a154
000000000003c9e0	cbnz	x8, 0x3c178
000000000003c9e4	adr	x19, #0x4a14c
000000000003c9e8	nop
000000000003c9ec	ldar	x8, [x19]
000000000003c9f0	cbnz	x8, 0x3c178
000000000003c9f4	mov	w0, #0xf
000000000003c9f8	bl	_mi_option_get
000000000003c9fc	cmp	x0, #0x1
000000000003ca00	csinc	x8, x0, xzr, gt
000000000003ca04	stlr	x8, [x19]
000000000003ca08	str	x8, [sp]
000000000003ca0c	adr	x0, #0x198f7 ; literal pool for: "using %zd numa regions\n"
000000000003ca10	nop
000000000003ca14	bl	__mi_verbose_message
000000000003ca18	b	0x3c178
000000000003ca1c	ldr	x8, [x9, #0xb30]
000000000003ca20	cbnz	x8, 0x3c3a0
000000000003ca24	adr	x21, #0x4a10c
000000000003ca28	nop
000000000003ca2c	ldar	x8, [x21]
000000000003ca30	cbnz	x8, 0x3c3a0
000000000003ca34	mov	w0, #0xf
000000000003ca38	bl	_mi_option_get
000000000003ca3c	cmp	x0, #0x1
000000000003ca40	csinc	x8, x0, xzr, gt
000000000003ca44	stlr	x8, [x21]
000000000003ca48	str	x8, [sp]
000000000003ca4c	adr	x0, #0x198b7 ; literal pool for: "using %zd numa regions\n"
000000000003ca50	nop
000000000003ca54	bl	__mi_verbose_message
000000000003ca58	ldr	x14, [sp, #0x38]
000000000003ca5c	b	0x3c3a0
__mi_bitmap_try_find_claim_field:
000000000003ca60	ldr	x11, [x0]
000000000003ca64	cmn	x11, #0x1
000000000003ca68	b.eq	0x3caa0
000000000003ca6c	mov	x8, #-0x1
000000000003ca70	lsl	x9, x8, x1
000000000003ca74	cmp	x1, #0x0
000000000003ca78	csinv	x9, xzr, x9, eq
000000000003ca7c	cmp	x1, #0x3f
000000000003ca80	csel	x10, x8, x9, hi
000000000003ca84	mov	w8, #0x40
000000000003ca88	sub	x8, x8, x1
000000000003ca8c	mvn	x9, x11
000000000003ca90	rbit	x9, x9
000000000003ca94	clz	x9, x9
000000000003ca98	cmp	x9, x8
000000000003ca9c	b.ls	0x3caa8
000000000003caa0	mov	w0, #0x0
000000000003caa4	ret
000000000003caa8	lsl	x10, x10, x9
000000000003caac	cmp	x1, #0x1
000000000003cab0	b.ne	0x3cb2c
000000000003cab4	b	0x3cac8
000000000003cab8	add	x9, x9, #0x1
000000000003cabc	lsl	x10, x10, #1
000000000003cac0	cmp	x9, x8
000000000003cac4	b.hi	0x3caa0
000000000003cac8	tst	x11, x10
000000000003cacc	b.ne	0x3cab8
000000000003cad0	ldaxr	x12, [x0]
000000000003cad4	cmp	x12, x11
000000000003cad8	b.ne	0x3caf8
000000000003cadc	orr	x11, x11, x10
000000000003cae0	stlxr	w13, x11, [x0]
000000000003cae4	cbnz	w13, 0x3cafc
000000000003cae8	mov	w13, #0x1
000000000003caec	mov	x11, x12
000000000003caf0	tbz	w13, #0x0, 0x3cac0
000000000003caf4	b	0x3cb6c
000000000003caf8	clrex
000000000003cafc	mov	w13, #0x0
000000000003cb00	mov	x11, x12
000000000003cb04	tbz	w13, #0x0, 0x3cac0
000000000003cb08	b	0x3cb6c
000000000003cb0c	clz	x12, x12
000000000003cb10	eor	x12, x12, #0x3f
000000000003cb14	sub	x9, x12, x9
000000000003cb18	add	x13, x9, #0x1
000000000003cb1c	add	x9, x12, #0x1
000000000003cb20	lsl	x10, x10, x13
000000000003cb24	cmp	x9, x8
000000000003cb28	b.hi	0x3caa0
000000000003cb2c	ands	x12, x11, x10
000000000003cb30	b.ne	0x3cb0c
000000000003cb34	ldaxr	x12, [x0]
000000000003cb38	cmp	x12, x11
000000000003cb3c	b.ne	0x3cb5c
000000000003cb40	orr	x11, x11, x10
000000000003cb44	stlxr	w13, x11, [x0]
000000000003cb48	cbnz	w13, 0x3cb60
000000000003cb4c	mov	w13, #0x1
000000000003cb50	mov	x11, x12
000000000003cb54	cbz	w13, 0x3cb24
000000000003cb58	b	0x3cb6c
000000000003cb5c	clrex
000000000003cb60	mov	w13, #0x0
000000000003cb64	mov	x11, x12
000000000003cb68	cbz	w13, 0x3cb24
000000000003cb6c	str	x9, [x2]
000000000003cb70	mov	w0, #0x1
000000000003cb74	ret
__mi_arena_alloc_aligned:
000000000003cb78	sub	sp, sp, #0x70
000000000003cb7c	stp	x28, x27, [sp, #0x10]
000000000003cb80	stp	x26, x25, [sp, #0x20]
000000000003cb84	stp	x24, x23, [sp, #0x30]
000000000003cb88	stp	x22, x21, [sp, #0x40]
000000000003cb8c	stp	x20, x19, [sp, #0x50]
000000000003cb90	stp	x29, x30, [sp, #0x60]
000000000003cb94	add	x29, sp, #0x60
000000000003cb98	mov	x21, x5
000000000003cb9c	mov	x24, x4
000000000003cba0	mov	x19, x3
000000000003cba4	mov	x20, x2
000000000003cba8	mov	x23, x1
000000000003cbac	mov	x22, x0
000000000003cbb0	str	xzr, [x5]
000000000003cbb4	strb	wzr, [x4]
000000000003cbb8	strb	wzr, [x3]
000000000003cbbc	cmp	x0, #0x800, lsl #12
000000000003cbc0	b.lo	0x3ccbc
000000000003cbc4	nop
000000000003cbc8	ldr	x8, #0x49f38
000000000003cbcc	cbz	x8, 0x3ccbc
000000000003cbd0	mov	w8, #0xffffff
000000000003cbd4	add	x8, x22, x8
000000000003cbd8	lsr	x25, x8, #24
000000000003cbdc	adrp	x8, 74 ; 0x86000
000000000003cbe0	ldr	x9, [x8, #0xb30]
000000000003cbe4	cmp	x9, #0x1
000000000003cbe8	b.ne	0x3cd28
000000000003cbec	mov	x26, #0x0
000000000003cbf0	adr	x27, #0x49e50
000000000003cbf4	nop
000000000003cbf8	b	0x3cc2c
000000000003cbfc	mov	x1, x26
000000000003cc00	mov	x2, x25
000000000003cc04	mov	x3, x23
000000000003cc08	mov	x4, x20
000000000003cc0c	mov	x5, x19
000000000003cc10	mov	x6, x24
000000000003cc14	mov	x7, x21
000000000003cc18	bl	_mi_arena_alloc_from
000000000003cc1c	cbnz	x0, 0x3cd08
000000000003cc20	add	x26, x26, #0x1
000000000003cc24	cmp	x26, #0x40
000000000003cc28	b.eq	0x3cc58
000000000003cc2c	add	x8, x27, x26, lsl #3
000000000003cc30	ldr	x0, [x8, #0x400]
000000000003cc34	cbz	x0, 0x3cc58
000000000003cc38	ldr	w8, [x0, #0x18]
000000000003cc3c	cmp	w8, #0x0
000000000003cc40	b.gt	0x3cc20
000000000003cc44	ldrb	w8, [x20]
000000000003cc48	cbnz	w8, 0x3cbfc
000000000003cc4c	ldrb	w8, [x0, #0x1e]
000000000003cc50	cbnz	w8, 0x3cc20
000000000003cc54	b	0x3cbfc
000000000003cc58	mov	x26, #0x0
000000000003cc5c	b	0x3cc90
000000000003cc60	mov	x1, x26
000000000003cc64	mov	x2, x25
000000000003cc68	mov	x3, x23
000000000003cc6c	mov	x4, x20
000000000003cc70	mov	x5, x19
000000000003cc74	mov	x6, x24
000000000003cc78	mov	x7, x21
000000000003cc7c	bl	_mi_arena_alloc_from
000000000003cc80	cbnz	x0, 0x3cd08
000000000003cc84	add	x26, x26, #0x1
000000000003cc88	cmp	x26, #0x40
000000000003cc8c	b.eq	0x3ccbc
000000000003cc90	add	x8, x27, x26, lsl #3
000000000003cc94	ldr	x0, [x8, #0x400]
000000000003cc98	cbz	x0, 0x3ccbc
000000000003cc9c	ldr	w8, [x0, #0x18]
000000000003cca0	cmp	w8, #0x1
000000000003cca4	b.lt	0x3cc84
000000000003cca8	ldrb	w8, [x20]
000000000003ccac	cbnz	w8, 0x3cc60
000000000003ccb0	ldrb	w8, [x0, #0x1e]
000000000003ccb4	cbnz	w8, 0x3cc84
000000000003ccb8	b	0x3cc60
000000000003ccbc	mov	w0, #0x10
000000000003ccc0	bl	_mi_option_get
000000000003ccc4	cbz	x0, 0x3cce0
000000000003ccc8	bl	0x51980 ; symbol stub for: ___error
000000000003cccc	mov	x8, x0
000000000003ccd0	mov	x0, #0x0
000000000003ccd4	mov	w9, #0xc
000000000003ccd8	str	w9, [x8]
000000000003ccdc	b	0x3cd08
000000000003cce0	mov	w8, #0x1
000000000003cce4	strb	w8, [x24]
000000000003cce8	str	xzr, [x21]
000000000003ccec	ldrb	w1, [x23]
000000000003ccf0	mov	x0, x22
000000000003ccf4	mov	x2, x20
000000000003ccf8	bl	__mi_os_alloc_aligned
000000000003ccfc	cbz	x0, 0x3cd08
000000000003cd00	ldrb	w8, [x20]
000000000003cd04	strb	w8, [x19]
000000000003cd08	ldp	x29, x30, [sp, #0x60]
000000000003cd0c	ldp	x20, x19, [sp, #0x50]
000000000003cd10	ldp	x22, x21, [sp, #0x40]
000000000003cd14	ldp	x24, x23, [sp, #0x30]
000000000003cd18	ldp	x26, x25, [sp, #0x20]
000000000003cd1c	ldp	x28, x27, [sp, #0x10]
000000000003cd20	add	sp, sp, #0x70
000000000003cd24	ret
000000000003cd28	ldr	x8, [x8, #0xb30]
000000000003cd2c	cbnz	x8, 0x3cbec
000000000003cd30	adr	x26, #0x49e00
000000000003cd34	nop
000000000003cd38	ldar	x8, [x26]
000000000003cd3c	cbnz	x8, 0x3cbec
000000000003cd40	mov	w0, #0xf
000000000003cd44	bl	_mi_option_get
000000000003cd48	cmp	x0, #0x1
000000000003cd4c	csinc	x8, x0, xzr, gt
000000000003cd50	stlr	x8, [x26]
000000000003cd54	str	x8, [sp]
000000000003cd58	adr	x0, #0x195ab ; literal pool for: "using %zd numa regions\n"
000000000003cd5c	nop
000000000003cd60	bl	__mi_verbose_message
000000000003cd64	b	0x3cbec
__mi_os_unreset:
000000000003cd68	stp	x22, x21, [sp, #-0x30]!
000000000003cd6c	stp	x20, x19, [sp, #0x10]
000000000003cd70	stp	x29, x30, [sp, #0x20]
000000000003cd74	add	x29, sp, #0x20
000000000003cd78	mov	x21, x2
000000000003cd7c	mov	x19, x1
000000000003cd80	mov	x20, x0
000000000003cd84	mov	w0, #0x5
000000000003cd88	bl	_mi_option_get
000000000003cd8c	cbz	x0, 0x3cdb4
000000000003cd90	mov	x0, x20
000000000003cd94	mov	x1, x19
000000000003cd98	mov	w2, #0x1
000000000003cd9c	mov	w3, #0x1
000000000003cda0	mov	x4, x21
000000000003cda4	ldp	x29, x30, [sp, #0x20]
000000000003cda8	ldp	x20, x19, [sp, #0x10]
000000000003cdac	ldp	x22, x21, [sp], #0x30
000000000003cdb0	b	_mi_os_commitx
000000000003cdb4	strb	wzr, [x21]
000000000003cdb8	cbz	x20, 0x3cec0
000000000003cdbc	cbz	x19, 0x3cec0
000000000003cdc0	nop
000000000003cdc4	ldr	x9, #0x2f87c
000000000003cdc8	add	x8, x20, x9
000000000003cdcc	sub	x8, x8, #0x1
000000000003cdd0	sub	x10, x9, #0x1
000000000003cdd4	tst	x9, x10
000000000003cdd8	b.ne	0x3cdfc
000000000003cddc	neg	x9, x9
000000000003cde0	and	x8, x8, x9
000000000003cde4	add	x10, x20, x19
000000000003cde8	and	x9, x9, x10
000000000003cdec	sub	x8, x9, x8
000000000003cdf0	cmp	x8, #0x1
000000000003cdf4	b.ge	0x3ce1c
000000000003cdf8	b	0x3cec0
000000000003cdfc	udiv	x8, x8, x9
000000000003ce00	mul	x8, x8, x9
000000000003ce04	add	x10, x20, x19
000000000003ce08	udiv	x10, x10, x9
000000000003ce0c	mul	x9, x10, x9
000000000003ce10	sub	x8, x9, x8
000000000003ce14	cmp	x8, #0x1
000000000003ce18	b.lt	0x3cec0
000000000003ce1c	neg	x9, x8
000000000003ce20	adr	x10, #0x4a2b8
000000000003ce24	nop
000000000003ce28	ldxr	x11, [x10]
000000000003ce2c	add	x12, x11, x9
000000000003ce30	stxr	w13, x12, [x10]
000000000003ce34	cbnz	w13, 0x3ce28
000000000003ce38	sub	x10, x11, x8
000000000003ce3c	nop
000000000003ce40	ldr	x13, #0x4a290
000000000003ce44	adr	x11, #0x4a28c
000000000003ce48	nop
000000000003ce4c	b	0x3ce60
000000000003ce50	clrex
000000000003ce54	mov	w14, #0x0
000000000003ce58	mov	x13, x12
000000000003ce5c	cbnz	w14, 0x3ce88
000000000003ce60	cmp	x13, x10
000000000003ce64	b.ge	0x3ce88
000000000003ce68	ldxr	x12, [x11]
000000000003ce6c	cmp	x12, x13
000000000003ce70	b.ne	0x3ce50
000000000003ce74	stlxr	w13, x10, [x11]
000000000003ce78	cbnz	w13, 0x3ce54
000000000003ce7c	mov	w14, #0x1
000000000003ce80	mov	x13, x12
000000000003ce84	cbz	w14, 0x3ce60
000000000003ce88	tbnz	x8, #0x3f, 0x3cea8
000000000003ce8c	adr	x9, #0x4a23c
000000000003ce90	nop
000000000003ce94	ldxr	x10, [x9]
000000000003ce98	add	x10, x10, x8
000000000003ce9c	stxr	w11, x10, [x9]
000000000003cea0	cbnz	w11, 0x3ce94
000000000003cea4	b	0x3cec0
000000000003cea8	adr	x8, #0x4a218
000000000003ceac	nop
000000000003ceb0	ldxr	x10, [x8]
000000000003ceb4	add	x10, x10, x9
000000000003ceb8	stxr	w11, x10, [x8]
000000000003cebc	cbnz	w11, 0x3ceb0
000000000003cec0	mov	w0, #0x1
000000000003cec4	ldp	x29, x30, [sp, #0x20]
000000000003cec8	ldp	x20, x19, [sp, #0x10]
000000000003cecc	ldp	x22, x21, [sp], #0x30
000000000003ced0	ret
_mi_arena_alloc_from:
000000000003ced4	sub	sp, sp, #0x70
000000000003ced8	stp	x28, x27, [sp, #0x10]
000000000003cedc	stp	x26, x25, [sp, #0x20]
000000000003cee0	stp	x24, x23, [sp, #0x30]
000000000003cee4	stp	x22, x21, [sp, #0x40]
000000000003cee8	stp	x20, x19, [sp, #0x50]
000000000003ceec	stp	x29, x30, [sp, #0x60]
000000000003cef0	add	x29, sp, #0x60
000000000003cef4	mov	x21, x6
000000000003cef8	mov	x23, x5
000000000003cefc	mov	x24, x4
000000000003cf00	mov	x20, x2
000000000003cf04	mov	x22, x0
000000000003cf08	add	x8, x0, #0x20
000000000003cf0c	ldar	x8, [x8]
000000000003cf10	ldr	x9, [x0, #0x10]
000000000003cf14	cmp	x2, #0x1
000000000003cf18	b.ne	0x3d044
000000000003cf1c	cbz	x9, 0x3d41c
000000000003cf20	mov	x11, #0x0
000000000003cf24	mov	w12, #0x1
000000000003cf28	mov	x10, x8
000000000003cf2c	b	0x3cf40
000000000003cf30	add	x11, x11, #0x1
000000000003cf34	add	x10, x10, #0x1
000000000003cf38	cmp	x11, x9
000000000003cf3c	b.eq	0x3d41c
000000000003cf40	cmp	x10, x9
000000000003cf44	csel	x10, x10, xzr, lo
000000000003cf48	add	x13, x22, x10, lsl #3
000000000003cf4c	ldr	x15, [x13, #0x38]
000000000003cf50	cmn	x15, #0x1
000000000003cf54	b.eq	0x3cf30
000000000003cf58	mvn	x14, x15
000000000003cf5c	rbit	x14, x14
000000000003cf60	clz	x2, x14
000000000003cf64	cmp	x2, #0x3f
000000000003cf68	b.hi	0x3cf30
000000000003cf6c	add	x13, x13, #0x38
000000000003cf70	lsl	x14, x12, x2
000000000003cf74	b	0x3cf88
000000000003cf78	add	x2, x2, #0x1
000000000003cf7c	lsl	x14, x14, #1
000000000003cf80	cmp	x2, #0x40
000000000003cf84	b.hs	0x3cf30
000000000003cf88	tst	x14, x15
000000000003cf8c	b.ne	0x3cf78
000000000003cf90	ldaxr	x16, [x13]
000000000003cf94	cmp	x16, x15
000000000003cf98	b.ne	0x3cfb8
000000000003cf9c	orr	x15, x14, x15
000000000003cfa0	stlxr	w17, x15, [x13]
000000000003cfa4	cbz	w17, 0x3cfcc
000000000003cfa8	mov	w17, #0x0
000000000003cfac	mov	x15, x16
000000000003cfb0	tbz	w17, #0x0, 0x3cf80
000000000003cfb4	b	0x3cfd8
000000000003cfb8	clrex
000000000003cfbc	mov	w17, #0x0
000000000003cfc0	mov	x15, x16
000000000003cfc4	tbz	w17, #0x0, 0x3cf80
000000000003cfc8	b	0x3cfd8
000000000003cfcc	mov	w17, #0x1
000000000003cfd0	mov	x15, x16
000000000003cfd4	tbz	w17, #0x0, 0x3cf80
000000000003cfd8	str	x3, [sp]
000000000003cfdc	add	x26, x2, x10, lsl #6
000000000003cfe0	add	x9, x22, #0x20
000000000003cfe4	stlr	x8, [x9]
000000000003cfe8	ldar	x8, [x22]
000000000003cfec	add	x25, x8, x26, lsl #24
000000000003cff0	add	w8, w1, #0x1
000000000003cff4	bfi	x8, x26, #8, #56
000000000003cff8	str	x8, [x7]
000000000003cffc	ldr	x0, [x22, #0x28]
000000000003d000	mov	x1, x20
000000000003d004	mov	x2, x26
000000000003d008	mov	x3, #0x0
000000000003d00c	bl	__mi_bitmap_claim_across
000000000003d010	strb	w0, [x21]
000000000003d014	ldrb	w8, [x22, #0x1e]
000000000003d018	strb	w8, [x24]
000000000003d01c	ldrb	w8, [x22, #0x1e]
000000000003d020	cbz	w8, 0x3d080
000000000003d024	mov	w8, #0x1
000000000003d028	ldr	x14, [sp]
000000000003d02c	strb	w8, [x23]
000000000003d030	ldrb	w8, [x22, #0x1d]
000000000003d034	cbz	w8, 0x3d09c
000000000003d038	mov	w8, #0x1
000000000003d03c	strb	w8, [x14]
000000000003d040	b	0x3d420
000000000003d044	cbz	x9, 0x3d41c
000000000003d048	str	x3, [sp]
000000000003d04c	mov	x11, #0x0
000000000003d050	mov	x12, #-0x1
000000000003d054	lsl	x10, x12, x20
000000000003d058	mov	w13, #0x40
000000000003d05c	sub	x14, x13, x20
000000000003d060	add	x15, x20, #0x3f
000000000003d064	cmp	x20, #0x0
000000000003d068	csinv	x10, xzr, x10, eq
000000000003d06c	cmp	x20, #0x3f
000000000003d070	csinv	x16, x10, xzr, ls
000000000003d074	add	x17, x22, #0x30
000000000003d078	mov	x10, x8
000000000003d07c	b	0x3d118
000000000003d080	ldrb	w8, [x22, #0x1d]
000000000003d084	cmp	w8, #0x0
000000000003d088	cset	w8, ne
000000000003d08c	ldr	x14, [sp]
000000000003d090	strb	w8, [x23]
000000000003d094	ldrb	w8, [x22, #0x1d]
000000000003d098	cbnz	w8, 0x3d038
000000000003d09c	ldrb	w8, [x14]
000000000003d0a0	cbz	w8, 0x3d444
000000000003d0a4	ldr	x0, [x22, #0x30]
000000000003d0a8	add	x3, sp, #0xf
000000000003d0ac	mov	x1, x20
000000000003d0b0	mov	x2, x26
000000000003d0b4	bl	__mi_bitmap_claim_across
000000000003d0b8	ldrb	w8, [sp, #0xf]
000000000003d0bc	cbz	w8, 0x3d420
000000000003d0c0	lsl	x1, x20, #24
000000000003d0c4	mov	w19, #0x1
000000000003d0c8	add	x4, sp, #0xe
000000000003d0cc	mov	x0, x25
000000000003d0d0	mov	w2, #0x1
000000000003d0d4	mov	w3, #0x0
000000000003d0d8	bl	_mi_os_commitx
000000000003d0dc	ldrb	w8, [sp, #0xe]
000000000003d0e0	cbz	w8, 0x3d420
000000000003d0e4	strb	w19, [x21]
000000000003d0e8	b	0x3d420
000000000003d0ec	ldr	x4, [x0]
000000000003d0f0	cmn	x4, #0x1
000000000003d0f4	mvn	x2, x4
000000000003d0f8	rbit	x2, x2
000000000003d0fc	clz	x2, x2
000000000003d100	ccmp	x2, x14, #0x2, ne
000000000003d104	b.ls	0x3d3a0
000000000003d108	add	x11, x11, #0x1
000000000003d10c	add	x10, x10, #0x1
000000000003d110	cmp	x11, x9
000000000003d114	b.eq	0x3d41c
000000000003d118	cmp	x10, x9
000000000003d11c	csel	x10, x10, xzr, lo
000000000003d120	cmp	x20, #0x40
000000000003d124	b.hi	0x3d148
000000000003d128	add	x0, x22, x10, lsl #3
000000000003d12c	ldr	x4, [x0, #0x38]
000000000003d130	cmn	x4, #0x1
000000000003d134	mvn	x2, x4
000000000003d138	rbit	x2, x2
000000000003d13c	clz	x2, x2
000000000003d140	ccmp	x2, x14, #0x2, ne
000000000003d144	b.ls	0x3d320
000000000003d148	add	x0, x22, x10, lsl #3
000000000003d14c	ldr	x6, [x0, #0x38]
000000000003d150	clz	x27, x6
000000000003d154	cbz	x27, 0x3d108
000000000003d158	mov	x3, #0x0
000000000003d15c	add	x0, x0, #0x38
000000000003d160	sub	x4, x9, x10
000000000003d164	add	x5, x17, x10, lsl #3
000000000003d168	cmp	x27, x20
000000000003d16c	b.hs	0x3d0ec
000000000003d170	sub	x2, x15, x27
000000000003d174	cmp	x4, x2, lsr #6
000000000003d178	b.ls	0x3d108
000000000003d17c	mov	x26, x5
000000000003d180	mov	x2, x27
000000000003d184	ldr	x30, [x26, #0x10]
000000000003d188	add	x25, x2, #0x40
000000000003d18c	sub	x28, x20, x2
000000000003d190	cmp	x25, x20
000000000003d194	csel	x28, x28, x13, hi
000000000003d198	lsl	x25, x12, x28
000000000003d19c	cmp	x28, #0x0
000000000003d1a0	csinv	x25, xzr, x25, eq
000000000003d1a4	cmp	x28, #0x3f
000000000003d1a8	csel	x25, x12, x25, hi
000000000003d1ac	tst	x25, x30
000000000003d1b0	b.ne	0x3d108
000000000003d1b4	add	x2, x28, x2
000000000003d1b8	add	x26, x26, #0x8
000000000003d1bc	cmp	x2, x20
000000000003d1c0	b.lo	0x3d184
000000000003d1c4	sub	x2, x13, x27
000000000003d1c8	lsl	x28, x12, x27
000000000003d1cc	mvn	x28, x28
000000000003d1d0	neg	x27, x27
000000000003d1d4	lsl	x27, x28, x27
000000000003d1d8	cmp	x6, #0x0
000000000003d1dc	csinv	x6, x27, xzr, ne
000000000003d1e0	ldr	x27, [x0]
000000000003d1e4	b	0x3d1f8
000000000003d1e8	mov	w30, #0x0
000000000003d1ec	clrex
000000000003d1f0	mov	x27, x28
000000000003d1f4	cbnz	w30, 0x3d224
000000000003d1f8	tst	x27, x6
000000000003d1fc	b.ne	0x3d24c
000000000003d200	orr	x30, x27, x6
000000000003d204	ldaxr	x28, [x0]
000000000003d208	cmp	x28, x27
000000000003d20c	b.ne	0x3d1e8
000000000003d210	stlxr	w19, x30, [x0]
000000000003d214	cbnz	w19, 0x3d204
000000000003d218	mov	w30, #0x1
000000000003d21c	mov	x27, x28
000000000003d220	cbz	w30, 0x3d1f8
000000000003d224	mov	x27, x0
000000000003d228	mov	x19, x27
000000000003d22c	add	x27, x27, #0x8
000000000003d230	cmp	x19, x26
000000000003d234	b.hs	0x3d2d8
000000000003d238	ldaxr	x19, [x27]
000000000003d23c	cbnz	x19, 0x3d258
000000000003d240	stlxr	w19, x12, [x27]
000000000003d244	cbnz	w19, 0x3d238
000000000003d248	b	0x3d228
000000000003d24c	mov	x27, x0
000000000003d250	sub	x2, x0, #0x8
000000000003d254	b	0x3d26c
000000000003d258	clrex
000000000003d25c	sub	x2, x27, #0x8
000000000003d260	b	0x3d26c
000000000003d264	stlr	xzr, [x2]
000000000003d268	sub	x2, x2, #0x8
000000000003d26c	cmp	x2, x0
000000000003d270	b.hi	0x3d264
000000000003d274	cmp	x2, x0
000000000003d278	b.ne	0x3d2bc
000000000003d27c	ldr	x25, [x0]
000000000003d280	mvn	x2, x6
000000000003d284	b	0x3d298
000000000003d288	mov	w26, #0x0
000000000003d28c	clrex
000000000003d290	mov	x25, x6
000000000003d294	cbnz	w26, 0x3d2bc
000000000003d298	and	x26, x25, x2
000000000003d29c	ldaxr	x6, [x0]
000000000003d2a0	cmp	x6, x25
000000000003d2a4	b.ne	0x3d288
000000000003d2a8	stlxr	w19, x26, [x0]
000000000003d2ac	cbnz	w19, 0x3d29c
000000000003d2b0	mov	w26, #0x1
000000000003d2b4	mov	x25, x6
000000000003d2b8	cbz	w26, 0x3d298
000000000003d2bc	cmp	x3, #0x4
000000000003d2c0	b.eq	0x3d108
000000000003d2c4	add	x3, x3, #0x1
000000000003d2c8	ldr	x6, [x0]
000000000003d2cc	clz	x27, x6
000000000003d2d0	cbnz	x27, 0x3d168
000000000003d2d4	b	0x3d108
000000000003d2d8	ldr	x28, [x27]
000000000003d2dc	b	0x3d2f0
000000000003d2e0	mov	w30, #0x0
000000000003d2e4	clrex
000000000003d2e8	mov	x28, x26
000000000003d2ec	tbnz	w30, #0x0, 0x3cfdc
000000000003d2f0	tst	x28, x25
000000000003d2f4	b.ne	0x3d25c
000000000003d2f8	orr	x30, x28, x25
000000000003d2fc	ldaxr	x26, [x27]
000000000003d300	cmp	x26, x28
000000000003d304	b.ne	0x3d2e0
000000000003d308	stlxr	w19, x30, [x27]
000000000003d30c	cbnz	w19, 0x3d2fc
000000000003d310	mov	w30, #0x1
000000000003d314	mov	x28, x26
000000000003d318	tbz	w30, #0x0, 0x3d2f0
000000000003d31c	b	0x3cfdc
000000000003d320	add	x0, x0, #0x38
000000000003d324	lsl	x3, x16, x2
000000000003d328	b	0x3d34c
000000000003d32c	clz	x5, x5
000000000003d330	eor	x5, x5, #0x3f
000000000003d334	sub	x2, x5, x2
000000000003d338	add	x6, x2, #0x1
000000000003d33c	add	x2, x5, #0x1
000000000003d340	lsl	x3, x3, x6
000000000003d344	cmp	x2, x14
000000000003d348	b.hi	0x3d148
000000000003d34c	ands	x5, x3, x4
000000000003d350	b.ne	0x3d32c
000000000003d354	ldaxr	x5, [x0]
000000000003d358	cmp	x5, x4
000000000003d35c	b.ne	0x3d37c
000000000003d360	orr	x4, x3, x4
000000000003d364	stlxr	w6, x4, [x0]
000000000003d368	cbz	w6, 0x3d390
000000000003d36c	mov	w6, #0x0
000000000003d370	mov	x4, x5
000000000003d374	tbz	w6, #0x0, 0x3d344
000000000003d378	b	0x3cfdc
000000000003d37c	clrex
000000000003d380	mov	w6, #0x0
000000000003d384	mov	x4, x5
000000000003d388	tbz	w6, #0x0, 0x3d344
000000000003d38c	b	0x3cfdc
000000000003d390	mov	w6, #0x1
000000000003d394	mov	x4, x5
000000000003d398	tbz	w6, #0x0, 0x3d344
000000000003d39c	b	0x3cfdc
000000000003d3a0	lsl	x3, x16, x2
000000000003d3a4	b	0x3d3c8
000000000003d3a8	clz	x5, x5
000000000003d3ac	eor	x5, x5, #0x3f
000000000003d3b0	sub	x2, x5, x2
000000000003d3b4	add	x6, x2, #0x1
000000000003d3b8	add	x2, x5, #0x1
000000000003d3bc	lsl	x3, x3, x6
000000000003d3c0	cmp	x2, x14
000000000003d3c4	b.hi	0x3d108
000000000003d3c8	ands	x5, x3, x4
000000000003d3cc	b.ne	0x3d3a8
000000000003d3d0	ldaxr	x5, [x0]
000000000003d3d4	cmp	x5, x4
000000000003d3d8	b.ne	0x3d3f8
000000000003d3dc	orr	x4, x3, x4
000000000003d3e0	stlxr	w6, x4, [x0]
000000000003d3e4	cbz	w6, 0x3d40c
000000000003d3e8	mov	w6, #0x0
000000000003d3ec	mov	x4, x5
000000000003d3f0	tbz	w6, #0x0, 0x3d3c0
000000000003d3f4	b	0x3cfdc
000000000003d3f8	clrex
000000000003d3fc	mov	w6, #0x0
000000000003d400	mov	x4, x5
000000000003d404	tbz	w6, #0x0, 0x3d3c0
000000000003d408	b	0x3cfdc
000000000003d40c	mov	w6, #0x1
000000000003d410	mov	x4, x5
000000000003d414	tbz	w6, #0x0, 0x3d3c0
000000000003d418	b	0x3cfdc
000000000003d41c	mov	x25, #0x0
000000000003d420	mov	x0, x25
000000000003d424	ldp	x29, x30, [sp, #0x60]
000000000003d428	ldp	x20, x19, [sp, #0x50]
000000000003d42c	ldp	x22, x21, [sp, #0x40]
000000000003d430	ldp	x24, x23, [sp, #0x30]
000000000003d434	ldp	x26, x25, [sp, #0x20]
000000000003d438	ldp	x28, x27, [sp, #0x10]
000000000003d43c	add	sp, sp, #0x70
000000000003d440	ret
000000000003d444	ldr	x8, [x22, #0x30]
000000000003d448	lsr	x11, x26, #6
000000000003d44c	and	x9, x26, #0x3f
000000000003d450	add	x10, x9, x20
000000000003d454	cmp	x10, #0x40
000000000003d458	b.hi	0x3d48c
000000000003d45c	mov	x10, #-0x1
000000000003d460	lsl	x12, x10, x20
000000000003d464	mvn	x12, x12
000000000003d468	lsl	x9, x12, x9
000000000003d46c	cmp	x20, #0x0
000000000003d470	csel	x9, xzr, x9, eq
000000000003d474	cmp	x20, #0x3f
000000000003d478	csel	x9, x10, x9, hi
000000000003d47c	ldr	x8, [x8, x11, lsl #3]
000000000003d480	bics	xzr, x9, x8
000000000003d484	cset	w8, eq
000000000003d488	b	0x3d03c
000000000003d48c	mov	w10, #0x40
000000000003d490	sub	x10, x10, x9
000000000003d494	neg	x12, x9
000000000003d498	mov	x13, #-0x1
000000000003d49c	lsl	x12, x13, x12
000000000003d4a0	mvn	x12, x12
000000000003d4a4	lsl	x12, x12, x9
000000000003d4a8	cmp	x9, #0x0
000000000003d4ac	csinv	x12, x12, xzr, ne
000000000003d4b0	sub	x9, x20, x10
000000000003d4b4	lsr	x10, x9, #6
000000000003d4b8	lsl	x13, x13, x9
000000000003d4bc	tst	x9, #0x3f
000000000003d4c0	csinv	x9, xzr, x13, eq
000000000003d4c4	add	x11, x8, x11, lsl #3
000000000003d4c8	ldr	x8, [x11], #0x8
000000000003d4cc	bics	xzr, x12, x8
000000000003d4d0	cset	w8, eq
000000000003d4d4	cbz	x10, 0x3d4f0
000000000003d4d8	ldr	x12, [x11], #0x8
000000000003d4dc	cmn	x12, #0x1
000000000003d4e0	cset	w12, eq
000000000003d4e4	and	w8, w8, w12
000000000003d4e8	sub	x10, x10, #0x1
000000000003d4ec	cbnz	x10, 0x3d4d8
000000000003d4f0	cbz	x9, 0x3d03c
000000000003d4f4	ldr	x10, [x11]
000000000003d4f8	bics	xzr, x9, x10
000000000003d4fc	cset	w9, eq
000000000003d500	and	w8, w8, w9
000000000003d504	b	0x3d03c
__mi_bitmap_claim_across:
000000000003d508	lsr	x11, x2, #6
000000000003d50c	ands	x8, x2, #0x3f
000000000003d510	add	x9, x8, x1
000000000003d514	mov	w10, #0x40
000000000003d518	sub	x10, x10, x8
000000000003d51c	neg	x12, x8
000000000003d520	mov	x13, #-0x1
000000000003d524	lsl	x12, x13, x12
000000000003d528	mvn	x12, x12
000000000003d52c	lsl	x12, x12, x8
000000000003d530	csinv	x12, x12, xzr, ne
000000000003d534	sub	x10, x1, x10
000000000003d538	lsr	x14, x10, #6
000000000003d53c	ands	x10, x10, #0x3f
000000000003d540	lsl	x10, x13, x10
000000000003d544	csel	x13, x13, x13, eq
000000000003d548	csinv	x15, xzr, x10, eq
000000000003d54c	mov	x10, #-0x1
000000000003d550	lsl	x16, x10, x1
000000000003d554	mvn	x16, x16
000000000003d558	lsl	x8, x16, x8
000000000003d55c	cmp	x1, #0x0
000000000003d560	csel	x16, xzr, xzr, eq
000000000003d564	csel	x8, xzr, x8, eq
000000000003d568	cmp	x1, #0x3f
000000000003d56c	csel	x16, xzr, x16, hi
000000000003d570	csel	x8, x10, x8, hi
000000000003d574	cmp	x9, #0x40
000000000003d578	csel	x10, x13, x16, hi
000000000003d57c	csel	x8, x12, x8, hi
000000000003d580	csel	x9, x15, x16, hi
000000000003d584	csel	x12, x14, x16, hi
000000000003d588	add	x11, x0, x11, lsl #3
000000000003d58c	ldaxr	x13, [x11]
000000000003d590	orr	x14, x13, x8
000000000003d594	stlxr	w15, x14, [x11]
000000000003d598	cbnz	w15, 0x3d58c
000000000003d59c	ands	x13, x13, x8
000000000003d5a0	cset	w0, eq
000000000003d5a4	cmp	x13, x8
000000000003d5a8	cset	w8, ne
000000000003d5ac	add	x11, x11, #0x8
000000000003d5b0	cbz	x12, 0x3d5e8
000000000003d5b4	sub	x12, x12, #0x1
000000000003d5b8	ldaxr	x13, [x11]
000000000003d5bc	orr	x14, x13, x10
000000000003d5c0	stlxr	w15, x14, [x11]
000000000003d5c4	cbnz	w15, 0x3d5b8
000000000003d5c8	ands	x13, x13, x10
000000000003d5cc	cset	w14, eq
000000000003d5d0	and	w0, w0, w14
000000000003d5d4	cmp	x13, x10
000000000003d5d8	cset	w13, ne
000000000003d5dc	orr	w8, w8, w13
000000000003d5e0	add	x11, x11, #0x8
000000000003d5e4	cbnz	x12, 0x3d5b4
000000000003d5e8	cbz	x9, 0x3d614
000000000003d5ec	ldaxr	x10, [x11]
000000000003d5f0	orr	x12, x10, x9
000000000003d5f4	stlxr	w13, x12, [x11]
000000000003d5f8	cbnz	w13, 0x3d5ec
000000000003d5fc	ands	x10, x10, x9
000000000003d600	cset	w11, eq
000000000003d604	and	w0, w0, w11
000000000003d608	cmp	x10, x9
000000000003d60c	cset	w9, ne
000000000003d610	orr	w8, w8, w9
000000000003d614	cbz	x3, 0x3d620
000000000003d618	and	w8, w8, #0x1
000000000003d61c	strb	w8, [x3]
000000000003d620	ret
__mi_usable_size:
000000000003d624	ands	x12, x0, #0xffffffffffc00000
000000000003d628	b.eq	0x3d65c
000000000003d62c	and	x8, x0, #0x3fffff
000000000003d630	ldr	x10, [x12, #0x60]
000000000003d634	lsr	x8, x8, x10
000000000003d638	add	x8, x12, x8, lsl #6
000000000003d63c	add	x9, x8, #0x78
000000000003d640	ldrb	w11, [x8, #0x7e]
000000000003d644	ldr	w8, [x8, #0x8c]
000000000003d648	tbnz	w11, #0x1, 0x3d664
000000000003d64c	ubfx	x10, x8, #26, #6
000000000003d650	cbnz	w10, 0x3d678
000000000003d654	mov	x0, x8
000000000003d658	ret
000000000003d65c	mov	x0, #0x0
000000000003d660	ret
000000000003d664	ldr	w13, [x12, #0x70]
000000000003d668	cmp	w13, #0x3
000000000003d66c	b.ne	0x3d690
000000000003d670	ldr	x11, [x12, #0x48]
000000000003d674	b	0x3d698
000000000003d678	and	x10, x9, #0xffffffffffc00000
000000000003d67c	ldr	w11, [x10, #0x70]
000000000003d680	cmp	w11, #0x3
000000000003d684	b.ne	0x3d6f0
000000000003d688	ldr	x12, [x10, #0x48]
000000000003d68c	b	0x3d6fc
000000000003d690	mov	w11, #0x1
000000000003d694	lsl	x11, x11, x10
000000000003d698	ldrb	w10, [x9]
000000000003d69c	madd	x11, x11, x10, x12
000000000003d6a0	cbnz	x10, 0x3d6d4
000000000003d6a4	ldr	x12, [x12, #0x50]
000000000003d6a8	add	x11, x11, x12
000000000003d6ac	cmp	w13, #0x1
000000000003d6b0	b.hi	0x3d6d4
000000000003d6b4	cbz	w8, 0x3d6d4
000000000003d6b8	udiv	x12, x11, x8
000000000003d6bc	neg	x13, x11
000000000003d6c0	madd	x12, x12, x8, x13
000000000003d6c4	add	x12, x8, x12
000000000003d6c8	add	x13, x11, x12
000000000003d6cc	cmp	x12, x8
000000000003d6d0	csel	x11, x13, x11, lo
000000000003d6d4	ubfx	x12, x8, #26, #6
000000000003d6d8	cbnz	w12, 0x3d748
000000000003d6dc	sub	x9, x0, x11
000000000003d6e0	udiv	x10, x9, x8
000000000003d6e4	msub	x11, x10, x8, x9
000000000003d6e8	sub	x0, x8, x11
000000000003d6ec	ret
000000000003d6f0	ldr	x12, [x10, #0x60]
000000000003d6f4	mov	w13, #0x1
000000000003d6f8	lsl	x12, x13, x12
000000000003d6fc	ldrb	w9, [x9]
000000000003d700	cbz	x9, 0x3d70c
000000000003d704	mov	x0, x12
000000000003d708	ret
000000000003d70c	ldr	x13, [x10, #0x50]
000000000003d710	sub	x0, x12, x13
000000000003d714	cmp	w11, #0x1
000000000003d718	ccmp	w8, #0x0, #0x4, ls
000000000003d71c	b.eq	0x3d744
000000000003d720	madd	x9, x12, x9, x10
000000000003d724	add	x9, x9, x13
000000000003d728	udiv	x10, x9, x8
000000000003d72c	neg	x9, x9
000000000003d730	madd	x9, x10, x8, x9
000000000003d734	add	x9, x8, x9
000000000003d738	cmp	x9, x8
000000000003d73c	csel	x8, x9, xzr, lo
000000000003d740	sub	x0, x0, x8
000000000003d744	ret
000000000003d748	and	x12, x9, #0xffffffffffc00000
000000000003d74c	ldr	w14, [x12, #0x70]
000000000003d750	cmp	w14, #0x3
000000000003d754	b.ne	0x3d760
000000000003d758	ldr	x15, [x12, #0x48]
000000000003d75c	b	0x3d76c
000000000003d760	ldr	x13, [x12, #0x60]
000000000003d764	mov	w15, #0x1
000000000003d768	lsl	x15, x15, x13
000000000003d76c	cbz	w10, 0x3d778
000000000003d770	mov	x13, x15
000000000003d774	b	0x3d7b0
000000000003d778	ldr	x16, [x12, #0x50]
000000000003d77c	sub	x13, x15, x16
000000000003d780	cmp	w14, #0x1
000000000003d784	ccmp	w8, #0x0, #0x4, ls
000000000003d788	b.eq	0x3d7b0
000000000003d78c	madd	x12, x15, x10, x12
000000000003d790	add	x12, x12, x16
000000000003d794	udiv	x14, x12, x8
000000000003d798	neg	x12, x12
000000000003d79c	madd	x12, x14, x8, x12
000000000003d7a0	add	x12, x8, x12
000000000003d7a4	cmp	x12, x8
000000000003d7a8	csel	x12, x12, xzr, lo
000000000003d7ac	sub	x13, x13, x12
000000000003d7b0	sub	x11, x0, x11
000000000003d7b4	udiv	x12, x11, x13
000000000003d7b8	msub	x11, x12, x13, x11
000000000003d7bc	and	x12, x9, #0xffffffffffc00000
000000000003d7c0	ldr	w9, [x12, #0x70]
000000000003d7c4	cmp	w9, #0x3
000000000003d7c8	b.ne	0x3d7d4
000000000003d7cc	ldr	x13, [x12, #0x48]
000000000003d7d0	b	0x3d7e0
000000000003d7d4	ldr	x13, [x12, #0x60]
000000000003d7d8	mov	w14, #0x1
000000000003d7dc	lsl	x13, x14, x13
000000000003d7e0	cbz	w10, 0x3d7ec
000000000003d7e4	sub	x0, x13, x11
000000000003d7e8	ret
000000000003d7ec	ldr	x14, [x12, #0x50]
000000000003d7f0	sub	x15, x13, x14
000000000003d7f4	madd	x10, x13, x10, x12
000000000003d7f8	add	x10, x10, x14
000000000003d7fc	udiv	x12, x10, x8
000000000003d800	neg	x10, x10
000000000003d804	madd	x10, x12, x8, x10
000000000003d808	add	x10, x8, x10
000000000003d80c	cmp	x10, x8
000000000003d810	csel	x10, x10, xzr, lo
000000000003d814	sub	x10, x15, x10
000000000003d818	cmp	w9, #0x1
000000000003d81c	ccmp	w8, #0x0, #0x4, ls
000000000003d820	csel	x8, x15, x10, eq
000000000003d824	sub	x0, x8, x11
000000000003d828	ret
__mi_heap_malloc_zero:
000000000003d82c	stp	x20, x19, [sp, #-0x20]!
000000000003d830	stp	x29, x30, [sp, #0x10]
000000000003d834	add	x29, sp, #0x10
000000000003d838	mov	x20, x1
000000000003d83c	cmp	x1, #0x400
000000000003d840	b.hi	0x3d8d0
000000000003d844	add	x8, x20, #0x7
000000000003d848	and	x8, x8, #0xfffffffffffffff8
000000000003d84c	add	x8, x0, x8
000000000003d850	ldr	x8, [x8, #0x8]
000000000003d854	ldr	x19, [x8, #0x8]
000000000003d858	cbz	x19, 0x3d8d0
000000000003d85c	ldr	w9, [x8, #0x10]
000000000003d860	add	w9, w9, #0x1
000000000003d864	str	w9, [x8, #0x10]
000000000003d868	ldr	x9, [x19]
000000000003d86c	str	x9, [x8, #0x8]
000000000003d870	cbz	x19, 0x3d89c
000000000003d874	cmp	x20, #0x9
000000000003d878	b.lo	0x3d8ac
000000000003d87c	and	x8, x19, #0xffffffffffc00000
000000000003d880	and	x9, x19, #0x3fffff
000000000003d884	ldr	x10, [x8, #0x60]
000000000003d888	lsr	x9, x9, x10
000000000003d88c	add	x8, x8, x9, lsl #6
000000000003d890	ldrb	w8, [x8, #0x7f]
000000000003d894	tbz	w8, #0x0, 0x3d8ac
000000000003d898	str	xzr, [x19]
000000000003d89c	mov	x0, x19
000000000003d8a0	ldp	x29, x30, [sp, #0x10]
000000000003d8a4	ldp	x20, x19, [sp], #0x20
000000000003d8a8	ret
000000000003d8ac	mov	x0, x19
000000000003d8b0	bl	__mi_usable_size
000000000003d8b4	mov	x1, x0
000000000003d8b8	mov	x0, x19
000000000003d8bc	bl	0x519d4 ; symbol stub for: _bzero
000000000003d8c0	mov	x0, x19
000000000003d8c4	ldp	x29, x30, [sp, #0x10]
000000000003d8c8	ldp	x20, x19, [sp], #0x20
000000000003d8cc	ret
000000000003d8d0	mov	x1, x20
000000000003d8d4	bl	__mi_malloc_generic
000000000003d8d8	mov	x19, x0
000000000003d8dc	cbnz	x19, 0x3d874
000000000003d8e0	b	0x3d89c
-[NSError(NSErrorKotlinException) kotlinException]:
000000000003d8e4	stp	x29, x30, [sp, #-0x10]!
000000000003d8e8	mov	x29, sp
000000000003d8ec	nop
000000000003d8f0	ldr	x1, #0x2cf38 ; Objc selector ref: userInfo
000000000003d8f4	bl	0x51b78 ; Objc message: -[x0 userInfo]
000000000003d8f8	cbz	x0, 0x3d914
000000000003d8fc	nop
000000000003d900	ldr	x1, #0x2ce88 ; Objc selector ref: objectForKeyedSubscript:
000000000003d904	adr	x2, #0x2a1ec ; Objc cfstring ref: @"bad cfstring ref"
000000000003d908	nop
000000000003d90c	ldp	x29, x30, [sp], #0x10
000000000003d910	b	0x51b78 ; Objc message: -[x0 objectForKeyedSubscript:]
000000000003d914	ldp	x29, x30, [sp], #0x10
000000000003d918	ret
_Kotlin_NSArrayAsKList_get:
000000000003d91c	stp	x20, x19, [sp, #-0x20]!
000000000003d920	stp	x29, x30, [sp, #0x10]
000000000003d924	add	x29, sp, #0x10
000000000003d928	mov	x19, x2
000000000003d92c	ldar	x8, [x0]
000000000003d930	and	x8, x8, #0xfffffffffffffffc
000000000003d934	ldr	x9, [x8]
000000000003d938	cmp	x8, #0x0
000000000003d93c	ccmp	x9, x8, #0x4, ne
000000000003d940	b.ne	0x3d94c
000000000003d944	mov	x0, #0x0
000000000003d948	b	0x3d954
000000000003d94c	add	x8, x8, #0x10
000000000003d950	ldar	x0, [x8]
000000000003d954	sxtw	x2, w1
000000000003d958	nop
000000000003d95c	ldr	x1, #0x2ce14 ; Objc selector ref: objectAtIndex:
000000000003d960	bl	0x51b78 ; Objc message: -[x0 objectAtIndex:]
000000000003d964	mov	x20, x0
000000000003d968	nop
000000000003d96c	ldr	x0, #0x2cf4c ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000003d970	nop
000000000003d974	ldr	x1, #0x2cde4 ; Objc selector ref: null
000000000003d978	bl	0x51b78 ; Objc message: +[NSNull null]
000000000003d97c	cmp	x20, x0
000000000003d980	b.eq	0x3d9a4
000000000003d984	cbz	x20, 0x3d9a4
000000000003d988	nop
000000000003d98c	ldr	x1, #0x4930c
000000000003d990	mov	x0, x20
000000000003d994	mov	x2, x19
000000000003d998	ldp	x29, x30, [sp, #0x10]
000000000003d99c	ldp	x20, x19, [sp], #0x20
000000000003d9a0	b	0x51b78 ; Objc message: -[x0 null]
000000000003d9a4	str	xzr, [x19]
000000000003d9a8	mov	x0, #0x0
000000000003d9ac	ldp	x29, x30, [sp, #0x10]
000000000003d9b0	ldp	x20, x19, [sp], #0x20
000000000003d9b4	ret
_Kotlin_NSMutableArrayAsKMutableList_add:
000000000003d9b8	stp	x20, x19, [sp, #-0x20]!
000000000003d9bc	stp	x29, x30, [sp, #0x10]
000000000003d9c0	add	x29, sp, #0x10
000000000003d9c4	mov	x19, x1
000000000003d9c8	ldar	x8, [x0]
000000000003d9cc	and	x8, x8, #0xfffffffffffffffc
000000000003d9d0	ldr	x9, [x8]
000000000003d9d4	cmp	x8, #0x0
000000000003d9d8	ccmp	x9, x8, #0x4, ne
000000000003d9dc	b.ne	0x3d9f4
000000000003d9e0	mov	x20, #0x0
000000000003d9e4	cbz	x2, 0x3da00
000000000003d9e8	mov	x0, x2
000000000003d9ec	bl	_Kotlin_ObjCExport_refToObjC
000000000003d9f0	b	0x3da14
000000000003d9f4	add	x8, x8, #0x10
000000000003d9f8	ldar	x20, [x8]
000000000003d9fc	cbnz	x2, 0x3d9e8
000000000003da00	nop
000000000003da04	ldr	x0, #0x2ceb4 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000003da08	nop
000000000003da0c	ldr	x1, #0x2cd4c ; Objc selector ref: null
000000000003da10	bl	0x51b78 ; Objc message: +[NSNull null]
000000000003da14	mov	x2, x0
000000000003da18	sxtw	x3, w19
000000000003da1c	nop
000000000003da20	ldr	x1, #0x2ccd8 ; Objc selector ref: insertObject:atIndex:
000000000003da24	mov	x0, x20
000000000003da28	ldp	x29, x30, [sp, #0x10]
000000000003da2c	ldp	x20, x19, [sp], #0x20
000000000003da30	b	0x51b78 ; Objc message: -[x0 insertObject:atIndex:]
_Kotlin_NSMutableArrayAsKMutableList_removeAt:
000000000003da34	stp	x22, x21, [sp, #-0x30]!
000000000003da38	stp	x20, x19, [sp, #0x10]
000000000003da3c	stp	x29, x30, [sp, #0x20]
000000000003da40	add	x29, sp, #0x20
000000000003da44	mov	x20, x2
000000000003da48	ldar	x8, [x0]
000000000003da4c	and	x8, x8, #0xfffffffffffffffc
000000000003da50	ldr	x9, [x8]
000000000003da54	cmp	x8, #0x0
000000000003da58	ccmp	x9, x8, #0x4, ne
000000000003da5c	b.ne	0x3da68
000000000003da60	mov	x19, #0x0
000000000003da64	b	0x3da70
000000000003da68	add	x8, x8, #0x10
000000000003da6c	ldar	x19, [x8]
000000000003da70	sxtw	x21, w1
000000000003da74	nop
000000000003da78	ldr	x1, #0x2ccf8 ; Objc selector ref: objectAtIndex:
000000000003da7c	mov	x0, x19
000000000003da80	mov	x2, x21
000000000003da84	bl	0x51b78 ; Objc message: -[x0 objectAtIndex:]
000000000003da88	mov	x22, x0
000000000003da8c	nop
000000000003da90	ldr	x0, #0x2ce28 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000003da94	nop
000000000003da98	ldr	x1, #0x2ccc0 ; Objc selector ref: null
000000000003da9c	bl	0x51b78 ; Objc message: +[NSNull null]
000000000003daa0	cmp	x22, x0
000000000003daa4	b.eq	0x3dac8
000000000003daa8	cbz	x22, 0x3dacc
000000000003daac	nop
000000000003dab0	ldr	x1, #0x491e8
000000000003dab4	mov	x0, x22
000000000003dab8	mov	x2, x20
000000000003dabc	bl	0x51b78 ; Objc message: -[x0 null]
000000000003dac0	mov	x22, x0
000000000003dac4	b	0x3dad0
000000000003dac8	mov	x22, #0x0
000000000003dacc	str	xzr, [x20]
000000000003dad0	nop
000000000003dad4	ldr	x1, #0x2cce4 ; Objc selector ref: removeObjectAtIndex:
000000000003dad8	mov	x0, x19
000000000003dadc	mov	x2, x21
000000000003dae0	bl	0x51b78 ; Objc message: -[x0 removeObjectAtIndex:]
000000000003dae4	mov	x0, x22
000000000003dae8	ldp	x29, x30, [sp, #0x20]
000000000003daec	ldp	x20, x19, [sp, #0x10]
000000000003daf0	ldp	x22, x21, [sp], #0x30
000000000003daf4	ret
_Kotlin_NSMutableArrayAsKMutableList_set:
000000000003daf8	stp	x26, x25, [sp, #-0x50]!
000000000003dafc	stp	x24, x23, [sp, #0x10]
000000000003db00	stp	x22, x21, [sp, #0x20]
000000000003db04	stp	x20, x19, [sp, #0x30]
000000000003db08	stp	x29, x30, [sp, #0x40]
000000000003db0c	add	x29, sp, #0x40
000000000003db10	mov	x22, x3
000000000003db14	mov	x21, x2
000000000003db18	ldar	x8, [x0]
000000000003db1c	and	x8, x8, #0xfffffffffffffffc
000000000003db20	ldr	x9, [x8]
000000000003db24	cmp	x8, #0x0
000000000003db28	ccmp	x9, x8, #0x4, ne
000000000003db2c	b.ne	0x3db38
000000000003db30	mov	x19, #0x0
000000000003db34	b	0x3db40
000000000003db38	add	x8, x8, #0x10
000000000003db3c	ldar	x19, [x8]
000000000003db40	sxtw	x20, w1
000000000003db44	nop
000000000003db48	ldr	x1, #0x2cc28 ; Objc selector ref: objectAtIndex:
000000000003db4c	mov	x0, x19
000000000003db50	mov	x2, x20
000000000003db54	bl	0x51b78 ; Objc message: -[x0 objectAtIndex:]
000000000003db58	mov	x23, x0
000000000003db5c	adrp	x25, 45 ; 0x6a000
000000000003db60	ldr	x0, [x25, #0x8b8] ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000003db64	nop
000000000003db68	ldr	x24, #0x2cbf0 ; Objc selector ref: null
000000000003db6c	mov	x1, x24
000000000003db70	bl	0x51b78 ; Objc message: +[NSNull null]
000000000003db74	cmp	x23, x0
000000000003db78	b.eq	0x3dba0
000000000003db7c	cbz	x23, 0x3dbb8
000000000003db80	nop
000000000003db84	ldr	x1, #0x49114
000000000003db88	mov	x0, x23
000000000003db8c	mov	x2, x22
000000000003db90	bl	0x51b78 ; Objc message: -[x0 null]
000000000003db94	mov	x23, x0
000000000003db98	cbnz	x21, 0x3dbac
000000000003db9c	b	0x3dbc0
000000000003dba0	mov	x23, #0x0
000000000003dba4	str	xzr, [x22]
000000000003dba8	cbz	x21, 0x3dbc0
000000000003dbac	mov	x0, x21
000000000003dbb0	bl	_Kotlin_ObjCExport_refToObjC
000000000003dbb4	b	0x3dbcc
000000000003dbb8	str	xzr, [x22]
000000000003dbbc	cbnz	x21, 0x3dbac
000000000003dbc0	ldr	x0, [x25, #0x8b8]
000000000003dbc4	mov	x1, x24
000000000003dbc8	bl	0x51b78 ; Objc message: -[x0 null]
000000000003dbcc	mov	x3, x0
000000000003dbd0	nop
000000000003dbd4	ldr	x1, #0x2cbf4 ; Objc selector ref: replaceObjectAtIndex:withObject:
000000000003dbd8	mov	x0, x19
000000000003dbdc	mov	x2, x20
000000000003dbe0	bl	0x51b78 ; Objc message: -[x0 replaceObjectAtIndex:withObject:]
000000000003dbe4	mov	x0, x23
000000000003dbe8	ldp	x29, x30, [sp, #0x40]
000000000003dbec	ldp	x20, x19, [sp, #0x30]
000000000003dbf0	ldp	x22, x21, [sp, #0x20]
000000000003dbf4	ldp	x24, x23, [sp, #0x10]
000000000003dbf8	ldp	x26, x25, [sp], #0x50
000000000003dbfc	ret
_Kotlin_NSEnumeratorAsKIterator_computeNext:
000000000003dc00	sub	sp, sp, #0xd0
000000000003dc04	stp	x28, x27, [sp, #0x70]
000000000003dc08	stp	x26, x25, [sp, #0x80]
000000000003dc0c	stp	x24, x23, [sp, #0x90]
000000000003dc10	stp	x22, x21, [sp, #0xa0]
000000000003dc14	stp	x20, x19, [sp, #0xb0]
000000000003dc18	stp	x29, x30, [sp, #0xc0]
000000000003dc1c	add	x29, sp, #0xc0
000000000003dc20	mov	x19, x0
000000000003dc24	ldar	x8, [x0]
000000000003dc28	and	x8, x8, #0xfffffffffffffffc
000000000003dc2c	ldr	x9, [x8]
000000000003dc30	cmp	x8, #0x0
000000000003dc34	ccmp	x9, x8, #0x4, ne
000000000003dc38	b.ne	0x3dcbc
000000000003dc3c	mov	x0, #0x0
000000000003dc40	nop
000000000003dc44	ldr	x1, #0x2cb0c ; Objc selector ref: nextObject
000000000003dc48	bl	0x51b78 ; Objc message: -[x0 nextObject]
000000000003dc4c	cbz	x0, 0x3dcd4
000000000003dc50	mov	x21, x0
000000000003dc54	add	x22, sp, #0x8
000000000003dc58	str	xzr, [sp, #0x20]
000000000003dc5c	adrp	x20, 47 ; 0x6c000
000000000003dc60	add	x20, x20, #0xbb0
000000000003dc64	ldr	x24, [x20]
000000000003dc68	mov	x0, x20
000000000003dc6c	blr	x24
000000000003dc70	ldr	x8, [x0]
000000000003dc74	ldr	x9, [x8, #0x110]
000000000003dc78	str	x22, [x8, #0x110]
000000000003dc7c	mov	x8, #0x400000000
000000000003dc80	stp	x9, x8, [sp, #0x10]
000000000003dc84	nop
000000000003dc88	ldr	x0, #0x2cc30 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000003dc8c	nop
000000000003dc90	ldr	x1, #0x2cac8 ; Objc selector ref: null
000000000003dc94	bl	0x51b78 ; Objc message: +[NSNull null]
000000000003dc98	cmp	x21, x0
000000000003dc9c	b.eq	0x3de3c
000000000003dca0	add	x2, x22, #0x18
000000000003dca4	nop
000000000003dca8	ldr	x1, #0x48ff0
000000000003dcac	mov	x0, x21
000000000003dcb0	bl	0x51b78 ; Objc message: -[x0 null]
000000000003dcb4	mov	x21, x0
000000000003dcb8	b	0x3de44
000000000003dcbc	add	x8, x8, #0x10
000000000003dcc0	ldar	x0, [x8]
000000000003dcc4	nop
000000000003dcc8	ldr	x1, #0x2ca88 ; Objc selector ref: nextObject
000000000003dccc	bl	0x51b78 ; Objc message: -[x0 nextObject]
000000000003dcd0	cbnz	x0, 0x3dc50
000000000003dcd4	str	xzr, [sp, #0x28]
000000000003dcd8	adrp	x20, 47 ; 0x6c000
000000000003dcdc	add	x20, x20, #0xbb0
000000000003dce0	ldr	x24, [x20]
000000000003dce4	mov	x0, x20
000000000003dce8	blr	x24
000000000003dcec	ldr	x8, [x0]
000000000003dcf0	ldr	x9, [x8, #0x110]
000000000003dcf4	add	x10, sp, #0x28
000000000003dcf8	str	x10, [x8, #0x110]
000000000003dcfc	mov	x8, #0x300000000
000000000003dd00	stp	x9, x8, [sp, #0x30]
000000000003dd04	adr	x23, #0x48d3f
000000000003dd08	nop
000000000003dd0c	ldarb	w8, [x23]
000000000003dd10	tbz	w8, #0x0, 0x3dd18
000000000003dd14	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000003dd18	movi.16b	v0, #0x0
000000000003dd1c	stp	q0, q0, [sp, #0x40]
000000000003dd20	str	xzr, [sp, #0x60]
000000000003dd24	mov	x0, x20
000000000003dd28	blr	x24
000000000003dd2c	ldr	x8, [x0]
000000000003dd30	ldr	x9, [x8, #0x110]
000000000003dd34	add	x10, sp, #0x40
000000000003dd38	str	x10, [x8, #0x110]
000000000003dd3c	mov	x8, #0x500000000
000000000003dd40	stp	x9, x8, [sp, #0x48]
000000000003dd44	adr	x25, #0x48d7c
000000000003dd48	nop
000000000003dd4c	ldar	x21, [x25]
000000000003dd50	cmp	x21, #0x2
000000000003dd54	b.hs	0x3e1a0
000000000003dd58	mov	x0, x20
000000000003dd5c	blr	x24
000000000003dd60	ldr	x26, [x0]
000000000003dd64	ldp	x8, x9, [x26, #0x120]
000000000003dd68	cmp	x8, x9
000000000003dd6c	b.eq	0x3dd8c
000000000003dd70	mov	x10, x9
000000000003dd74	ldr	x11, [x10, #-0x10]!
000000000003dd78	cmp	x11, x25
000000000003dd7c	b.eq	0x3dfc0
000000000003dd80	mov	x9, x10
000000000003dd84	cmp	x10, x8
000000000003dd88	b.ne	0x3dd74
000000000003dd8c	add	x22, x26, #0x120
000000000003dd90	add	x0, x26, #0x138
000000000003dd94	mov	w9, #0x1
000000000003dd98	ldaxr	w8, [x0]
000000000003dd9c	stlxr	w10, w9, [x0]
000000000003dda0	cbnz	w10, 0x3dd98
000000000003dda4	b	0x3ddb4
000000000003dda8	mov	w27, #0x1
000000000003ddac	stlxr	w9, x27, [x25]
000000000003ddb0	cbz	w9, 0x3ddc4
000000000003ddb4	ldaxr	x21, [x25]
000000000003ddb8	cbz	x21, 0x3dda8
000000000003ddbc	mov	w27, #0x0
000000000003ddc0	clrex
000000000003ddc4	cmp	x21, #0x1
000000000003ddc8	b.eq	0x3ddb4
000000000003ddcc	cbz	x26, 0x3ddf4
000000000003ddd0	ldaxr	w9, [x0]
000000000003ddd4	stlxr	w10, w8, [x0]
000000000003ddd8	cbnz	w10, 0x3ddd0
000000000003dddc	cbnz	w8, 0x3ddf4
000000000003dde0	cmp	w9, #0x1
000000000003dde4	b.ne	0x3ddf4
000000000003dde8	ldarb	w8, [x23]
000000000003ddec	tbz	w8, #0x0, 0x3ddf4
000000000003ddf0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003ddf4	tbz	w27, #0x0, 0x3dfb8
000000000003ddf8	ldr	x8, [x26, #0x118]
000000000003ddfc	add	x0, x8, #0x70
000000000003de00	mov	w1, #0x20
000000000003de04	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000003de08	mov	x21, x0
000000000003de0c	adr	x8, #0x1e814
000000000003de10	nop
000000000003de14	str	x8, [x21, #0x10]!
000000000003de18	stur	xzr, [x21, #-0x8]
000000000003de1c	str	x21, [sp, #0x58]
000000000003de20	ldp	x9, x8, [x26, #0x128]
000000000003de24	cmp	x9, x8
000000000003de28	b.hs	0x3e0cc
000000000003de2c	stp	x25, x21, [x9]
000000000003de30	add	x8, x9, #0x10
000000000003de34	str	x8, [x26, #0x128]
000000000003de38	b	0x3e154
000000000003de3c	mov	x21, #0x0
000000000003de40	str	xzr, [sp, #0x20]
000000000003de44	str	xzr, [sp, #0x28]
000000000003de48	mov	x0, x20
000000000003de4c	blr	x24
000000000003de50	ldr	x8, [x0]
000000000003de54	ldr	x9, [x8, #0x110]
000000000003de58	add	x10, sp, #0x28
000000000003de5c	str	x10, [x8, #0x110]
000000000003de60	mov	x8, #0x300000000
000000000003de64	stp	x9, x8, [sp, #0x30]
000000000003de68	adr	x23, #0x48bdb
000000000003de6c	nop
000000000003de70	ldarb	w8, [x23]
000000000003de74	tbz	w8, #0x0, 0x3de7c
000000000003de78	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000003de7c	movi.16b	v0, #0x0
000000000003de80	stp	q0, q0, [sp, #0x40]
000000000003de84	str	xzr, [sp, #0x60]
000000000003de88	mov	x0, x20
000000000003de8c	blr	x24
000000000003de90	ldr	x8, [x0]
000000000003de94	ldr	x9, [x8, #0x110]
000000000003de98	add	x10, sp, #0x40
000000000003de9c	str	x10, [x8, #0x110]
000000000003dea0	mov	x8, #0x500000000
000000000003dea4	stp	x9, x8, [sp, #0x48]
000000000003dea8	str	x21, [x19, #0x10]
000000000003deac	adr	x25, #0x48c14
000000000003deb0	nop
000000000003deb4	ldar	x21, [x25]
000000000003deb8	cmp	x21, #0x2
000000000003debc	b.hs	0x3e0a0
000000000003dec0	mov	x0, x20
000000000003dec4	blr	x24
000000000003dec8	ldr	x26, [x0]
000000000003decc	ldp	x8, x9, [x26, #0x120]
000000000003ded0	cmp	x8, x9
000000000003ded4	b.eq	0x3def4
000000000003ded8	mov	x10, x9
000000000003dedc	ldr	x11, [x10, #-0x10]!
000000000003dee0	cmp	x11, x25
000000000003dee4	b.eq	0x3dfac
000000000003dee8	mov	x9, x10
000000000003deec	cmp	x10, x8
000000000003def0	b.ne	0x3dedc
000000000003def4	add	x22, x26, #0x120
000000000003def8	add	x0, x26, #0x138
000000000003defc	mov	w9, #0x1
000000000003df00	ldaxr	w8, [x0]
000000000003df04	stlxr	w10, w9, [x0]
000000000003df08	cbnz	w10, 0x3df00
000000000003df0c	b	0x3df1c
000000000003df10	mov	w27, #0x1
000000000003df14	stlxr	w9, x27, [x25]
000000000003df18	cbz	w9, 0x3df2c
000000000003df1c	ldaxr	x21, [x25]
000000000003df20	cbz	x21, 0x3df10
000000000003df24	mov	w27, #0x0
000000000003df28	clrex
000000000003df2c	cmp	x21, #0x1
000000000003df30	b.eq	0x3df1c
000000000003df34	cbz	x26, 0x3df5c
000000000003df38	ldaxr	w9, [x0]
000000000003df3c	stlxr	w10, w8, [x0]
000000000003df40	cbnz	w10, 0x3df38
000000000003df44	cbnz	w8, 0x3df5c
000000000003df48	cmp	w9, #0x1
000000000003df4c	b.ne	0x3df5c
000000000003df50	ldarb	w8, [x23]
000000000003df54	tbz	w8, #0x0, 0x3df5c
000000000003df58	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003df5c	tbz	w27, #0x0, 0x3dfa4
000000000003df60	ldr	x8, [x26, #0x118]
000000000003df64	add	x0, x8, #0x70
000000000003df68	mov	w1, #0x20
000000000003df6c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000003df70	mov	x21, x0
000000000003df74	adr	x8, #0x1e6ac
000000000003df78	nop
000000000003df7c	str	x8, [x21, #0x10]!
000000000003df80	stur	xzr, [x21, #-0x8]
000000000003df84	str	x21, [sp, #0x58]
000000000003df88	ldp	x9, x8, [x26, #0x128]
000000000003df8c	cmp	x9, x8
000000000003df90	b.hs	0x3dfcc
000000000003df94	stp	x25, x21, [x9]
000000000003df98	add	x8, x9, #0x10
000000000003df9c	str	x8, [x26, #0x128]
000000000003dfa0	b	0x3e054
000000000003dfa4	str	x21, [sp, #0x58]
000000000003dfa8	b	0x3e0a0
000000000003dfac	ldur	x21, [x9, #-0x8]
000000000003dfb0	str	x21, [sp, #0x58]
000000000003dfb4	b	0x3e0a0
000000000003dfb8	str	x21, [sp, #0x58]
000000000003dfbc	b	0x3e1a0
000000000003dfc0	ldur	x21, [x9, #-0x8]
000000000003dfc4	str	x21, [sp, #0x58]
000000000003dfc8	b	0x3e1a0
000000000003dfcc	ldr	x10, [x22]
000000000003dfd0	sub	x9, x9, x10
000000000003dfd4	asr	x27, x9, #4
000000000003dfd8	add	x9, x27, #0x1
000000000003dfdc	lsr	x11, x9, #60
000000000003dfe0	cbnz	x11, 0x3e1f8
000000000003dfe4	sub	x8, x8, x10
000000000003dfe8	asr	x10, x8, #3
000000000003dfec	cmp	x10, x9
000000000003dff0	csel	x9, x9, x10, lo
000000000003dff4	mov	x10, #0x7ffffffffffffff
000000000003dff8	cmp	x10, x8, asr #4
000000000003dffc	mov	x8, #0xfffffffffffffff
000000000003e000	csel	x23, x9, x8, hi
000000000003e004	mov	x0, x23
000000000003e008	mov	w1, #0x10
000000000003e00c	bl	0x519e0 ; symbol stub for: _calloc
000000000003e010	add	x8, x0, x27, lsl #4
000000000003e014	add	x27, x0, x23, lsl #4
000000000003e018	stp	x25, x21, [x8]
000000000003e01c	add	x28, x8, #0x10
000000000003e020	ldp	x1, x9, [x26, #0x120]
000000000003e024	sub	x2, x9, x1
000000000003e028	sub	x23, x8, x2
000000000003e02c	cmp	x2, #0x1
000000000003e030	b.lt	0x3e040
000000000003e034	mov	x0, x23
000000000003e038	bl	0x51aac ; symbol stub for: _memcpy
000000000003e03c	ldr	x1, [x22]
000000000003e040	stp	x23, x28, [x26, #0x120]
000000000003e044	str	x27, [x26, #0x130]
000000000003e048	cbz	x1, 0x3e054
000000000003e04c	mov	x0, x1
000000000003e050	bl	0x51a64 ; symbol stub for: _free
000000000003e054	mov	x0, x21
000000000003e058	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000003e05c	mov	w0, #0x1
000000000003e060	mov	w1, #0x28
000000000003e064	bl	0x519e0 ; symbol stub for: _calloc
000000000003e068	ldr	x8, [x26, #0x18]!
000000000003e06c	sub	x9, x26, #0x8
000000000003e070	stp	x25, x9, [x0, #0x10]
000000000003e074	stp	x8, x26, [x0]
000000000003e078	str	x0, [x8, #0x8]
000000000003e07c	str	x0, [x26]
000000000003e080	ldr	x8, [x26, #0x10]
000000000003e084	add	x8, x8, #0x1
000000000003e088	str	x8, [x26, #0x10]
000000000003e08c	str	x0, [x0, #0x20]
000000000003e090	stlr	x21, [x25]
000000000003e094	ldr	x8, [x26, #0x110]
000000000003e098	sub	x8, x8, #0x10
000000000003e09c	str	x8, [x26, #0x110]
000000000003e0a0	ldr	x8, [x21, #0x8]
000000000003e0a4	ldr	w9, [x8, #0x8]
000000000003e0a8	cmp	w9, #0x3
000000000003e0ac	b.ls	0x3e1e8
000000000003e0b0	ldr	x8, [x8, #0x28]
000000000003e0b4	str	x8, [x19, #0x8]
000000000003e0b8	mov	x0, x20
000000000003e0bc	blr	x24
000000000003e0c0	ldr	x8, [x0]
000000000003e0c4	ldr	x9, [sp, #0x10]
000000000003e0c8	b	0x3e1c4
000000000003e0cc	ldr	x10, [x22]
000000000003e0d0	sub	x9, x9, x10
000000000003e0d4	asr	x27, x9, #4
000000000003e0d8	add	x9, x27, #0x1
000000000003e0dc	lsr	x11, x9, #60
000000000003e0e0	cbnz	x11, 0x3e204
000000000003e0e4	sub	x8, x8, x10
000000000003e0e8	asr	x10, x8, #3
000000000003e0ec	cmp	x10, x9
000000000003e0f0	csel	x9, x9, x10, lo
000000000003e0f4	mov	x10, #0x7ffffffffffffff
000000000003e0f8	cmp	x10, x8, asr #4
000000000003e0fc	mov	x8, #0xfffffffffffffff
000000000003e100	csel	x23, x9, x8, hi
000000000003e104	mov	x0, x23
000000000003e108	mov	w1, #0x10
000000000003e10c	bl	0x519e0 ; symbol stub for: _calloc
000000000003e110	add	x8, x0, x27, lsl #4
000000000003e114	add	x27, x0, x23, lsl #4
000000000003e118	stp	x25, x21, [x8]
000000000003e11c	add	x28, x8, #0x10
000000000003e120	ldp	x1, x9, [x26, #0x120]
000000000003e124	sub	x2, x9, x1
000000000003e128	sub	x23, x8, x2
000000000003e12c	cmp	x2, #0x1
000000000003e130	b.lt	0x3e140
000000000003e134	mov	x0, x23
000000000003e138	bl	0x51aac ; symbol stub for: _memcpy
000000000003e13c	ldr	x1, [x22]
000000000003e140	stp	x23, x28, [x26, #0x120]
000000000003e144	str	x27, [x26, #0x130]
000000000003e148	cbz	x1, 0x3e154
000000000003e14c	mov	x0, x1
000000000003e150	bl	0x51a64 ; symbol stub for: _free
000000000003e154	mov	x0, x21
000000000003e158	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
000000000003e15c	mov	w0, #0x1
000000000003e160	mov	w1, #0x28
000000000003e164	bl	0x519e0 ; symbol stub for: _calloc
000000000003e168	ldr	x8, [x26, #0x18]!
000000000003e16c	sub	x9, x26, #0x8
000000000003e170	stp	x25, x9, [x0, #0x10]
000000000003e174	stp	x8, x26, [x0]
000000000003e178	str	x0, [x8, #0x8]
000000000003e17c	str	x0, [x26]
000000000003e180	ldr	x8, [x26, #0x10]
000000000003e184	add	x8, x8, #0x1
000000000003e188	str	x8, [x26, #0x10]
000000000003e18c	str	x0, [x0, #0x20]
000000000003e190	stlr	x21, [x25]
000000000003e194	ldr	x8, [x26, #0x110]
000000000003e198	sub	x8, x8, #0x10
000000000003e19c	str	x8, [x26, #0x110]
000000000003e1a0	ldr	x8, [x21, #0x8]
000000000003e1a4	ldr	w9, [x8, #0x8]
000000000003e1a8	cbz	w9, 0x3e1f0
000000000003e1ac	ldr	x8, [x8, #0x10]
000000000003e1b0	str	x8, [x19, #0x8]
000000000003e1b4	mov	x0, x20
000000000003e1b8	blr	x24
000000000003e1bc	ldr	x8, [x0]
000000000003e1c0	ldr	x9, [sp, #0x30]
000000000003e1c4	str	x9, [x8, #0x110]
000000000003e1c8	ldp	x29, x30, [sp, #0xc0]
000000000003e1cc	ldp	x20, x19, [sp, #0xb0]
000000000003e1d0	ldp	x22, x21, [sp, #0xa0]
000000000003e1d4	ldp	x24, x23, [sp, #0x90]
000000000003e1d8	ldp	x26, x25, [sp, #0x80]
000000000003e1dc	ldp	x28, x27, [sp, #0x70]
000000000003e1e0	add	sp, sp, #0xd0
000000000003e1e4	ret
000000000003e1e8	bl	_ThrowArrayIndexOutOfBoundsException
000000000003e1ec	b	0x3e258
000000000003e1f0	bl	_ThrowArrayIndexOutOfBoundsException
000000000003e1f4	b	0x3e258
000000000003e1f8	mov	x0, x22
000000000003e1fc	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000003e200	b	0x3e258
000000000003e204	mov	x0, x22
000000000003e208	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000003e20c	b	0x3e258
000000000003e210	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000003e214	str	xzr, [sp, #0x58]
000000000003e218	stlr	xzr, [x25]
000000000003e21c	ldr	x8, [x26, #0x128]
000000000003e220	sub	x8, x8, #0x10
000000000003e224	str	x8, [x26, #0x128]
000000000003e228	bl	0x51968 ; symbol stub for: ___cxa_rethrow
000000000003e22c	b	0x3e258
000000000003e230	mov	x19, x0
000000000003e234	bl	0x51944 ; symbol stub for: ___cxa_end_catch
000000000003e238	b	0x3e26c
000000000003e23c	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000003e240	str	xzr, [sp, #0x58]
000000000003e244	stlr	xzr, [x25]
000000000003e248	ldr	x8, [x26, #0x128]
000000000003e24c	sub	x8, x8, #0x10
000000000003e250	str	x8, [x26, #0x128]
000000000003e254	bl	0x51968 ; symbol stub for: ___cxa_rethrow
000000000003e258	brk	#0x1
000000000003e25c	mov	x19, x0
000000000003e260	bl	0x51944 ; symbol stub for: ___cxa_end_catch
000000000003e264	b	0x3e284
000000000003e268	mov	x19, x0
000000000003e26c	mov	x0, x20
000000000003e270	blr	x24
000000000003e274	ldr	x8, [x0]
000000000003e278	ldr	x9, [sp, #0x30]
000000000003e27c	b	0x3e2b0
000000000003e280	mov	x19, x0
000000000003e284	mov	x0, x20
000000000003e288	blr	x24
000000000003e28c	ldr	x8, [x0]
000000000003e290	ldr	x9, [sp, #0x30]
000000000003e294	str	x9, [x8, #0x110]
000000000003e298	b	0x3e2ac
000000000003e29c	mov	x19, x0
000000000003e2a0	mov	x0, x20
000000000003e2a4	blr	x24
000000000003e2a8	ldr	x8, [x0]
000000000003e2ac	ldr	x9, [sp, #0x10]
000000000003e2b0	str	x9, [x8, #0x110]
000000000003e2b4	mov	x0, x19
000000000003e2b8	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSSetAsKSet_iterator:
000000000003e2bc	stp	x20, x19, [sp, #-0x20]!
000000000003e2c0	stp	x29, x30, [sp, #0x10]
000000000003e2c4	add	x29, sp, #0x10
000000000003e2c8	mov	x19, x1
000000000003e2cc	ldar	x8, [x0]
000000000003e2d0	and	x8, x8, #0xfffffffffffffffc
000000000003e2d4	ldr	x9, [x8]
000000000003e2d8	cmp	x8, #0x0
000000000003e2dc	ccmp	x9, x8, #0x4, ne
000000000003e2e0	b.ne	0x3e2ec
000000000003e2e4	mov	x0, #0x0
000000000003e2e8	b	0x3e2f4
000000000003e2ec	add	x8, x8, #0x10
000000000003e2f0	ldar	x0, [x8]
000000000003e2f4	nop
000000000003e2f8	ldr	x1, #0x2c480 ; Objc selector ref: objectEnumerator
000000000003e2fc	bl	0x51b78 ; Objc message: -[x0 objectEnumerator]
000000000003e300	bl	0x51ba8 ; symbol stub for: _objc_retain
000000000003e304	mov	x20, x0
000000000003e308	bl	_Kotlin_initRuntimeIfNeeded
000000000003e30c	mov	x0, x19
000000000003e310	bl	_Kotlin_NSEnumeratorAsKIterator_create
000000000003e314	mov	x19, x0
000000000003e318	ldar	x8, [x0]
000000000003e31c	and	x8, x8, #0xfffffffffffffffc
000000000003e320	ldr	x9, [x8]
000000000003e324	cmp	x9, x8
000000000003e328	csel	x0, xzr, x8, eq
000000000003e32c	cbz	x0, 0x3e348
000000000003e330	add	x8, x0, #0x10
000000000003e334	stlr	x20, [x8]
000000000003e338	mov	x0, x19
000000000003e33c	ldp	x29, x30, [sp, #0x10]
000000000003e340	ldp	x20, x19, [sp], #0x20
000000000003e344	ret
000000000003e348	mov	x0, x19
000000000003e34c	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000003e350	add	x8, x0, #0x10
000000000003e354	stlr	x20, [x8]
000000000003e358	mov	x0, x19
000000000003e35c	ldp	x29, x30, [sp, #0x10]
000000000003e360	ldp	x20, x19, [sp], #0x20
000000000003e364	ret
_Kotlin_NSDictionaryAsKMap_keyIterator:
000000000003e368	stp	x20, x19, [sp, #-0x20]!
000000000003e36c	stp	x29, x30, [sp, #0x10]
000000000003e370	add	x29, sp, #0x10
000000000003e374	mov	x19, x1
000000000003e378	ldar	x8, [x0]
000000000003e37c	and	x8, x8, #0xfffffffffffffffc
000000000003e380	ldr	x9, [x8]
000000000003e384	cmp	x8, #0x0
000000000003e388	ccmp	x9, x8, #0x4, ne
000000000003e38c	b.ne	0x3e398
000000000003e390	mov	x0, #0x0
000000000003e394	b	0x3e3a0
000000000003e398	add	x8, x8, #0x10
000000000003e39c	ldar	x0, [x8]
000000000003e3a0	nop
000000000003e3a4	ldr	x1, #0x2c374 ; Objc selector ref: keyEnumerator
000000000003e3a8	bl	0x51b78 ; Objc message: -[x0 keyEnumerator]
000000000003e3ac	bl	0x51ba8 ; symbol stub for: _objc_retain
000000000003e3b0	mov	x20, x0
000000000003e3b4	bl	_Kotlin_initRuntimeIfNeeded
000000000003e3b8	mov	x0, x19
000000000003e3bc	bl	_Kotlin_NSEnumeratorAsKIterator_create
000000000003e3c0	mov	x19, x0
000000000003e3c4	ldar	x8, [x0]
000000000003e3c8	and	x8, x8, #0xfffffffffffffffc
000000000003e3cc	ldr	x9, [x8]
000000000003e3d0	cmp	x9, x8
000000000003e3d4	csel	x0, xzr, x8, eq
000000000003e3d8	cbz	x0, 0x3e3f4
000000000003e3dc	add	x8, x0, #0x10
000000000003e3e0	stlr	x20, [x8]
000000000003e3e4	mov	x0, x19
000000000003e3e8	ldp	x29, x30, [sp, #0x10]
000000000003e3ec	ldp	x20, x19, [sp], #0x20
000000000003e3f0	ret
000000000003e3f4	mov	x0, x19
000000000003e3f8	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000003e3fc	add	x8, x0, #0x10
000000000003e400	stlr	x20, [x8]
000000000003e404	mov	x0, x19
000000000003e408	ldp	x29, x30, [sp, #0x10]
000000000003e40c	ldp	x20, x19, [sp], #0x20
000000000003e410	ret
_Kotlin_NSDictionaryAsKMap_valueIterator:
000000000003e414	stp	x20, x19, [sp, #-0x20]!
000000000003e418	stp	x29, x30, [sp, #0x10]
000000000003e41c	add	x29, sp, #0x10
000000000003e420	mov	x19, x1
000000000003e424	ldar	x8, [x0]
000000000003e428	and	x8, x8, #0xfffffffffffffffc
000000000003e42c	ldr	x9, [x8]
000000000003e430	cmp	x8, #0x0
000000000003e434	ccmp	x9, x8, #0x4, ne
000000000003e438	b.ne	0x3e444
000000000003e43c	mov	x0, #0x0
000000000003e440	b	0x3e44c
000000000003e444	add	x8, x8, #0x10
000000000003e448	ldar	x0, [x8]
000000000003e44c	nop
000000000003e450	ldr	x1, #0x2c328 ; Objc selector ref: objectEnumerator
000000000003e454	bl	0x51b78 ; Objc message: -[x0 objectEnumerator]
000000000003e458	bl	0x51ba8 ; symbol stub for: _objc_retain
000000000003e45c	mov	x20, x0
000000000003e460	bl	_Kotlin_initRuntimeIfNeeded
000000000003e464	mov	x0, x19
000000000003e468	bl	_Kotlin_NSEnumeratorAsKIterator_create
000000000003e46c	mov	x19, x0
000000000003e470	ldar	x8, [x0]
000000000003e474	and	x8, x8, #0xfffffffffffffffc
000000000003e478	ldr	x9, [x8]
000000000003e47c	cmp	x9, x8
000000000003e480	csel	x0, xzr, x8, eq
000000000003e484	cbz	x0, 0x3e4a0
000000000003e488	add	x8, x0, #0x10
000000000003e48c	stlr	x20, [x8]
000000000003e490	mov	x0, x19
000000000003e494	ldp	x29, x30, [sp, #0x10]
000000000003e498	ldp	x20, x19, [sp], #0x20
000000000003e49c	ret
000000000003e4a0	mov	x0, x19
000000000003e4a4	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000003e4a8	add	x8, x0, #0x10
000000000003e4ac	stlr	x20, [x8]
000000000003e4b0	mov	x0, x19
000000000003e4b4	ldp	x29, x30, [sp, #0x10]
000000000003e4b8	ldp	x20, x19, [sp], #0x20
000000000003e4bc	ret
__ZN5konan13consolePrintfEPKcz:
000000000003e4c0	stp	x28, x27, [sp, #-0x20]!
000000000003e4c4	stp	x29, x30, [sp, #0x10]
000000000003e4c8	add	x29, sp, #0x10
000000000003e4cc	sub	sp, sp, #0x410
000000000003e4d0	mov	x2, x0
000000000003e4d4	add	x8, x29, #0x10
000000000003e4d8	str	x8, [sp, #0x8]
000000000003e4dc	add	x0, sp, #0x10
000000000003e4e0	add	x3, x29, #0x10
000000000003e4e4	mov	w1, #0x400
000000000003e4e8	bl	0x51d94 ; symbol stub for: _vsnprintf
000000000003e4ec	tbnz	w0, #0x1f, 0x3e508
000000000003e4f0	cmp	w0, #0x3ff
000000000003e4f4	mov	w8, #0x3ff
000000000003e4f8	csel	w2, w0, w8, lo
000000000003e4fc	add	x1, sp, #0x10
000000000003e500	mov	w0, #0x1
000000000003e504	bl	0x51da0 ; symbol stub for: _write
000000000003e508	add	sp, sp, #0x410
000000000003e50c	ldp	x29, x30, [sp, #0x10]
000000000003e510	ldp	x28, x27, [sp], #0x20
000000000003e514	ret
__ZN5konan13consoleErrorfEPKcz:
000000000003e518	stp	x28, x27, [sp, #-0x20]!
000000000003e51c	stp	x29, x30, [sp, #0x10]
000000000003e520	add	x29, sp, #0x10
000000000003e524	sub	sp, sp, #0x410
000000000003e528	mov	x2, x0
000000000003e52c	add	x8, x29, #0x10
000000000003e530	str	x8, [sp, #0x8]
000000000003e534	add	x0, sp, #0x10
000000000003e538	add	x3, x29, #0x10
000000000003e53c	mov	w1, #0x400
000000000003e540	bl	0x51d94 ; symbol stub for: _vsnprintf
000000000003e544	tbnz	w0, #0x1f, 0x3e560
000000000003e548	cmp	w0, #0x3ff
000000000003e54c	mov	w8, #0x3ff
000000000003e550	csel	w2, w0, w8, lo
000000000003e554	add	x1, sp, #0x10
000000000003e558	mov	w0, #0x2
000000000003e55c	bl	0x51da0 ; symbol stub for: _write
000000000003e560	add	sp, sp, #0x410
000000000003e564	ldp	x29, x30, [sp, #0x10]
000000000003e568	ldp	x28, x27, [sp], #0x20
000000000003e56c	ret
__ZN5konan15currentThreadIdEv:
000000000003e570	sub	sp, sp, #0x20
000000000003e574	stp	x29, x30, [sp, #0x10]
000000000003e578	add	x29, sp, #0x10
000000000003e57c	bl	0x51cb0 ; symbol stub for: _pthread_self
000000000003e580	add	x1, sp, #0x8
000000000003e584	bl	0x51cd4 ; symbol stub for: _pthread_threadid_np
000000000003e588	cbnz	w0, 0x3e5a4
000000000003e58c	ldr	w8, [sp, #0xc]
000000000003e590	cbnz	w8, 0x3e5b4
000000000003e594	ldr	w0, [sp, #0x8]
000000000003e598	ldp	x29, x30, [sp, #0x10]
000000000003e59c	add	sp, sp, #0x20
000000000003e5a0	ret
000000000003e5a4	adr	x2, #0x183b0 ; literal pool for: "Error getting thread id"
000000000003e5a8	nop
000000000003e5ac	mov	w0, #0x0
000000000003e5b0	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
000000000003e5b4	adr	x2, #0x183b8 ; literal pool for: "Thread id is not a uint32"
000000000003e5b8	nop
000000000003e5bc	mov	w0, #0x0
000000000003e5c0	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z:
000000000003e5c4	sub	sp, sp, #0x20
000000000003e5c8	stp	x29, x30, [sp, #0x10]
000000000003e5cc	add	x29, sp, #0x10
000000000003e5d0	mov	x0, x2
000000000003e5d4	add	x8, x29, #0x10
000000000003e5d8	str	x8, [sp, #0x8]
000000000003e5dc	add	x1, x29, #0x10
000000000003e5e0	bl	__ZN12_GLOBAL__N_111PrintAssertEbPKcS1_Pc
000000000003e5e4	bl	__ZN5konan5abortEv
__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE6appendEPKcm:
000000000003e5e8	stp	x28, x27, [sp, #-0x60]!
000000000003e5ec	stp	x26, x25, [sp, #0x10]
000000000003e5f0	stp	x24, x23, [sp, #0x20]
000000000003e5f4	stp	x22, x21, [sp, #0x30]
000000000003e5f8	stp	x20, x19, [sp, #0x40]
000000000003e5fc	stp	x29, x30, [sp, #0x50]
000000000003e600	add	x29, sp, #0x50
000000000003e604	mov	x20, x2
000000000003e608	mov	x21, x1
000000000003e60c	mov	x19, x0
000000000003e610	ldrsb	w9, [x0, #0x17]
000000000003e614	and	x8, x9, #0xff
000000000003e618	tbnz	w9, #0x1f, 0x3e698
000000000003e61c	mov	w26, #0x16
000000000003e620	mov	x22, x8
000000000003e624	sub	x9, x26, x22
000000000003e628	cmp	x9, x20
000000000003e62c	b.hs	0x3e6b0
000000000003e630	add	x27, x22, x20
000000000003e634	sub	x9, x27, x26
000000000003e638	mov	x10, #-0x12
000000000003e63c	sub	x10, x10, x26
000000000003e640	cmp	x10, x9
000000000003e644	b.lo	0x3e784
000000000003e648	tbnz	w8, #0x7, 0x3e6c0
000000000003e64c	mov	x23, x19
000000000003e650	mov	x8, #-0x1a
000000000003e654	movk	x8, #0x7fff, lsl #48
000000000003e658	cmp	x26, x8
000000000003e65c	b.hi	0x3e6d4
000000000003e660	lsl	x8, x26, #1
000000000003e664	cmp	x27, x8
000000000003e668	csel	x8, x8, x27, lo
000000000003e66c	add	x9, x8, #0x10
000000000003e670	and	x9, x9, #0xfffffffffffffff0
000000000003e674	cmp	x8, #0x17
000000000003e678	mov	w8, #0x17
000000000003e67c	csel	x24, x8, x9, lo
000000000003e680	mov	x0, x24
000000000003e684	mov	w1, #0x1
000000000003e688	bl	0x519e0 ; symbol stub for: _calloc
000000000003e68c	mov	x25, x0
000000000003e690	cbnz	x22, 0x3e6ec
000000000003e694	b	0x3e6fc
000000000003e698	ldp	x22, x9, [x19, #0x8]
000000000003e69c	and	x9, x9, #0x7fffffffffffffff
000000000003e6a0	sub	x26, x9, #0x1
000000000003e6a4	sub	x9, x26, x22
000000000003e6a8	cmp	x9, x20
000000000003e6ac	b.lo	0x3e630
000000000003e6b0	cbz	x20, 0x3e764
000000000003e6b4	tbnz	w8, #0x7, 0x3e730
000000000003e6b8	mov	x23, x19
000000000003e6bc	b	0x3e734
000000000003e6c0	ldr	x23, [x19]
000000000003e6c4	mov	x8, #-0x1a
000000000003e6c8	movk	x8, #0x7fff, lsl #48
000000000003e6cc	cmp	x26, x8
000000000003e6d0	b.ls	0x3e660
000000000003e6d4	mov	x24, #-0x11
000000000003e6d8	mov	x0, x24
000000000003e6dc	mov	w1, #0x1
000000000003e6e0	bl	0x519e0 ; symbol stub for: _calloc
000000000003e6e4	mov	x25, x0
000000000003e6e8	cbz	x22, 0x3e6fc
000000000003e6ec	mov	x0, x25
000000000003e6f0	mov	x1, x23
000000000003e6f4	mov	x2, x22
000000000003e6f8	bl	0x51aac ; symbol stub for: _memcpy
000000000003e6fc	add	x0, x25, x22
000000000003e700	mov	x1, x21
000000000003e704	mov	x2, x20
000000000003e708	bl	0x51aac ; symbol stub for: _memcpy
000000000003e70c	cmp	x26, #0x16
000000000003e710	b.eq	0x3e71c
000000000003e714	mov	x0, x23
000000000003e718	bl	0x51a64 ; symbol stub for: _free
000000000003e71c	orr	x8, x24, #0x8000000000000000
000000000003e720	stp	x27, x8, [x19, #0x8]
000000000003e724	str	x25, [x19]
000000000003e728	add	x8, x25, x27
000000000003e72c	b	0x3e760
000000000003e730	ldr	x23, [x19]
000000000003e734	add	x0, x23, x22
000000000003e738	mov	x1, x21
000000000003e73c	mov	x2, x20
000000000003e740	bl	0x51aac ; symbol stub for: _memcpy
000000000003e744	add	x8, x22, x20
000000000003e748	ldrsb	w9, [x19, #0x17]
000000000003e74c	tbnz	w9, #0x1f, 0x3e758
000000000003e750	strb	w8, [x19, #0x17]
000000000003e754	b	0x3e75c
000000000003e758	str	x8, [x19, #0x8]
000000000003e75c	add	x8, x23, x8
000000000003e760	strb	wzr, [x8]
000000000003e764	mov	x0, x19
000000000003e768	ldp	x29, x30, [sp, #0x50]
000000000003e76c	ldp	x20, x19, [sp, #0x40]
000000000003e770	ldp	x22, x21, [sp, #0x30]
000000000003e774	ldp	x24, x23, [sp, #0x20]
000000000003e778	ldp	x26, x25, [sp, #0x10]
000000000003e77c	ldp	x28, x27, [sp], #0x60
000000000003e780	ret
000000000003e784	mov	x0, x19
000000000003e788	bl	0x517b8 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ZN12_GLOBAL__N_111PrintAssertEbPKcS1_Pc:
000000000003e78c	stp	x24, x23, [sp, #-0x40]!
000000000003e790	stp	x22, x21, [sp, #0x10]
000000000003e794	stp	x20, x19, [sp, #0x20]
000000000003e798	stp	x29, x30, [sp, #0x30]
000000000003e79c	add	x29, sp, #0x30
000000000003e7a0	sub	sp, sp, #0x400
000000000003e7a4	mov	x20, x1
000000000003e7a8	mov	x21, x0
000000000003e7ac	adr	x2, #0x18167 ; literal pool for: "runtime assert: "
000000000003e7b0	nop
000000000003e7b4	mov	w22, #0x400
000000000003e7b8	mov	x0, sp
000000000003e7bc	mov	w1, #0x400
000000000003e7c0	bl	__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz
000000000003e7c4	mov	x19, x1
000000000003e7c8	cbz	x1, 0x3e804
000000000003e7cc	subs	x23, x19, #0x1
000000000003e7d0	b.ne	0x3e7dc
000000000003e7d4	strb	wzr, [x0]
000000000003e7d8	b	0x3e804
000000000003e7dc	mov	x1, x19
000000000003e7e0	mov	x2, x21
000000000003e7e4	mov	x3, x20
000000000003e7e8	bl	0x51d94 ; symbol stub for: _vsnprintf
000000000003e7ec	mov	w8, w0
000000000003e7f0	cmp	x23, x8
000000000003e7f4	csel	x8, x23, x8, lo
000000000003e7f8	sub	x8, x19, x8
000000000003e7fc	tst	w0, #0x80000000
000000000003e800	csel	x19, x19, x8, ne
000000000003e804	sub	w2, w22, w19
000000000003e808	mov	x1, sp
000000000003e80c	mov	w0, #0x2
000000000003e810	bl	0x51da0 ; symbol stub for: _write
000000000003e814	adr	x0, #0x18476 ; literal pool for: "\n"
000000000003e818	nop
000000000003e81c	bl	__ZN5konan13consoleErrorfEPKcz
000000000003e820	add	sp, sp, #0x400
000000000003e824	ldp	x29, x30, [sp, #0x30]
000000000003e828	ldp	x20, x19, [sp, #0x20]
000000000003e82c	ldp	x22, x21, [sp, #0x10]
000000000003e830	ldp	x24, x23, [sp], #0x40
000000000003e834	ret
000000000003e838	bl	___clang_call_terminate
__ZN5konan5abortEv:
000000000003e83c	stp	x29, x30, [sp, #-0x10]!
000000000003e840	mov	x29, sp
000000000003e844	bl	0x519a4 ; symbol stub for: _abort
__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz:
000000000003e848	sub	sp, sp, #0x40
000000000003e84c	stp	x22, x21, [sp, #0x10]
000000000003e850	stp	x20, x19, [sp, #0x20]
000000000003e854	stp	x29, x30, [sp, #0x30]
000000000003e858	add	x29, sp, #0x30
000000000003e85c	mov	x20, x1
000000000003e860	mov	x19, x0
000000000003e864	add	x8, x29, #0x10
000000000003e868	str	x8, [sp, #0x8]
000000000003e86c	cbz	x1, 0x3e8a8
000000000003e870	subs	x21, x20, #0x1
000000000003e874	b.ne	0x3e880
000000000003e878	strb	wzr, [x19]
000000000003e87c	b	0x3e8a8
000000000003e880	ldr	x3, [sp, #0x8]
000000000003e884	mov	x0, x19
000000000003e888	mov	x1, x20
000000000003e88c	bl	0x51d94 ; symbol stub for: _vsnprintf
000000000003e890	tbnz	w0, #0x1f, 0x3e8a8
000000000003e894	mov	w8, w0
000000000003e898	cmp	x21, x8
000000000003e89c	csel	x8, x21, x8, lo
000000000003e8a0	add	x19, x19, x8
000000000003e8a4	sub	x20, x20, x8
000000000003e8a8	mov	x0, x19
000000000003e8ac	mov	x1, x20
000000000003e8b0	ldp	x29, x30, [sp, #0x30]
000000000003e8b4	ldp	x20, x19, [sp, #0x20]
000000000003e8b8	ldp	x22, x21, [sp, #0x10]
000000000003e8bc	add	sp, sp, #0x40
000000000003e8c0	ret
__ZN6kotlin10StackTraceILm18446744073709551615EE7currentEm:
000000000003e8c4	sub	sp, sp, #0x60
000000000003e8c8	stp	x24, x23, [sp, #0x20]
000000000003e8cc	stp	x22, x21, [sp, #0x30]
000000000003e8d0	stp	x20, x19, [sp, #0x40]
000000000003e8d4	stp	x29, x30, [sp, #0x50]
000000000003e8d8	add	x29, sp, #0x50
000000000003e8dc	mov	x19, x0
000000000003e8e0	add	x0, sp, #0x8
000000000003e8e4	bl	__ZN6kotlin8internal20GetCurrentStackTraceEm
000000000003e8e8	stp	xzr, xzr, [x19]
000000000003e8ec	str	xzr, [x19, #0x10]
000000000003e8f0	ldp	x20, x8, [sp, #0x8]
000000000003e8f4	subs	x21, x8, x20
000000000003e8f8	b.eq	0x3e944
000000000003e8fc	asr	x23, x21, #3
000000000003e900	lsr	x8, x23, #61
000000000003e904	cbnz	x8, 0x3e980
000000000003e908	mov	x0, x23
000000000003e90c	mov	w1, #0x8
000000000003e910	bl	0x519e0 ; symbol stub for: _calloc
000000000003e914	mov	x22, x0
000000000003e918	stp	x0, x0, [x19]
000000000003e91c	add	x8, x0, x23, lsl #3
000000000003e920	str	x8, [x19, #0x10]
000000000003e924	cmp	x21, #0x1
000000000003e928	b.lt	0x3e940
000000000003e92c	mov	x0, x22
000000000003e930	mov	x1, x20
000000000003e934	mov	x2, x21
000000000003e938	bl	0x51aac ; symbol stub for: _memcpy
000000000003e93c	add	x22, x22, x21
000000000003e940	str	x22, [x19, #0x8]
000000000003e944	cbz	x20, 0x3e968
000000000003e948	str	x20, [sp, #0x10]
000000000003e94c	mov	x0, x20
000000000003e950	ldp	x29, x30, [sp, #0x50]
000000000003e954	ldp	x20, x19, [sp, #0x40]
000000000003e958	ldp	x22, x21, [sp, #0x30]
000000000003e95c	ldp	x24, x23, [sp, #0x20]
000000000003e960	add	sp, sp, #0x60
000000000003e964	b	0x51a64 ; symbol stub for: _free
000000000003e968	ldp	x29, x30, [sp, #0x50]
000000000003e96c	ldp	x20, x19, [sp, #0x40]
000000000003e970	ldp	x22, x21, [sp, #0x30]
000000000003e974	ldp	x24, x23, [sp, #0x20]
000000000003e978	add	sp, sp, #0x60
000000000003e97c	ret
000000000003e980	mov	x0, x19
000000000003e984	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000003e988	brk	#0x1
000000000003e98c	mov	x20, x0
000000000003e990	ldr	x0, [x19]
000000000003e994	cbz	x0, 0x3e9a0
000000000003e998	str	x0, [x19, #0x8]
000000000003e99c	bl	0x51a64 ; symbol stub for: _free
000000000003e9a0	mov	x0, x20
000000000003e9a4	bl	___clang_call_terminate
__ZL18snprintf_with_addrPcmmPKvbPKcz:
000000000003e9a8	stp	x28, x27, [sp, #-0x60]!
000000000003e9ac	stp	x26, x25, [sp, #0x10]
000000000003e9b0	stp	x24, x23, [sp, #0x20]
000000000003e9b4	stp	x22, x21, [sp, #0x30]
000000000003e9b8	stp	x20, x19, [sp, #0x40]
000000000003e9bc	stp	x29, x30, [sp, #0x50]
000000000003e9c0	add	x29, sp, #0x50
000000000003e9c4	sub	sp, sp, #0x290
000000000003e9c8	mov	x19, x5
000000000003e9cc	mov	x20, x4
000000000003e9d0	mov	x23, x3
000000000003e9d4	mov	x22, x2
000000000003e9d8	mov	x21, x0
000000000003e9dc	mov	w8, #0x7830
000000000003e9e0	movk	w8, #0x30, lsl #16
000000000003e9e4	str	w8, [sp, #0x5c]
000000000003e9e8	movi.16b	v0, #0x0
000000000003e9ec	stp	q0, q0, [sp, #0x30]
000000000003e9f0	add	x1, sp, #0x30
000000000003e9f4	mov	x0, x3
000000000003e9f8	bl	0x51a4c ; symbol stub for: _dladdr
000000000003e9fc	ldr	x24, [sp, #0x30]
000000000003ea00	cbz	x24, 0x3ea20
000000000003ea04	mov	x0, x24
000000000003ea08	mov	w1, #0x2f
000000000003ea0c	bl	0x51d58 ; symbol stub for: _strrchr
000000000003ea10	cmp	x0, #0x0
000000000003ea14	csinc	x25, x24, x0, eq
000000000003ea18	cbnz	x23, 0x3ea2c
000000000003ea1c	b	0x3eaa8
000000000003ea20	adr	x25, #0x17f07 ; literal pool for: "???"
000000000003ea24	nop
000000000003ea28	cbz	x23, 0x3eaa8
000000000003ea2c	sub	x1, x29, #0x70
000000000003ea30	mov	x0, x23
000000000003ea34	bl	0x51a4c ; symbol stub for: _dladdr
000000000003ea38	cbz	w0, 0x3eaa8
000000000003ea3c	ldur	x24, [x29, #-0x60]
000000000003ea40	cbz	x24, 0x3ea50
000000000003ea44	sub	x8, x29, #0x70
000000000003ea48	add	x8, x8, #0x18
000000000003ea4c	b	0x3ea60
000000000003ea50	ldur	x24, [x29, #-0x70]
000000000003ea54	cbz	x24, 0x3ea80
000000000003ea58	sub	x8, x29, #0x70
000000000003ea5c	add	x8, x8, #0x8
000000000003ea60	ldr	x8, [x8]
000000000003ea64	sub	x26, x23, x8
000000000003ea68	add	x0, sp, #0x5c
000000000003ea6c	mov	x1, x24
000000000003ea70	mov	w2, #0x200
000000000003ea74	bl	0x51d4c ; symbol stub for: _strncpy
000000000003ea78	strb	wzr, [sp, #0x25b]
000000000003ea7c	b	0x3eaac
000000000003ea80	sub	x24, x29, #0x84
000000000003ea84	ldur	x8, [x29, #-0x58]
000000000003ea88	str	x8, [sp]
000000000003ea8c	adr	x2, #0x17ec5 ; literal pool for: "%p"
000000000003ea90	nop
000000000003ea94	sub	x0, x29, #0x84
000000000003ea98	mov	w1, #0x14
000000000003ea9c	bl	__ZN5konan8snprintfEPcmPKcz
000000000003eaa0	cmp	w0, #0x1
000000000003eaa4	b.ge	0x3ea44
000000000003eaa8	mov	x26, x23
000000000003eaac	add	x8, sp, #0x5c
000000000003eab0	stp	x8, x26, [sp, #0x18]
000000000003eab4	stp	x25, x23, [sp, #0x8]
000000000003eab8	str	x22, [sp]
000000000003eabc	adr	x2, #0x17e6f ; literal pool for: "%-4zd%-35s %-18p %s + %td "
000000000003eac0	nop
000000000003eac4	mov	x0, x21
000000000003eac8	mov	w1, #0x3ff
000000000003eacc	bl	__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz
000000000003ead0	cbz	w20, 0x3eae0
000000000003ead4	adr	x2, #0x17e72 ; literal pool for: "[inlined] "
000000000003ead8	nop
000000000003eadc	bl	__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz
000000000003eae0	add	x8, x29, #0x10
000000000003eae4	stur	x8, [x29, #-0x70]
000000000003eae8	cbz	x1, 0x3eb08
000000000003eaec	cmp	x1, #0x1
000000000003eaf0	b.ne	0x3eafc
000000000003eaf4	strb	wzr, [x0]
000000000003eaf8	b	0x3eb08
000000000003eafc	ldur	x3, [x29, #-0x70]
000000000003eb00	mov	x2, x19
000000000003eb04	bl	0x51d94 ; symbol stub for: _vsnprintf
000000000003eb08	add	sp, sp, #0x290
000000000003eb0c	ldp	x29, x30, [sp, #0x50]
000000000003eb10	ldp	x20, x19, [sp, #0x40]
000000000003eb14	ldp	x22, x21, [sp, #0x30]
000000000003eb18	ldp	x24, x23, [sp, #0x20]
000000000003eb1c	ldp	x26, x25, [sp, #0x10]
000000000003eb20	ldp	x28, x27, [sp], #0x60
000000000003eb24	ret
__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEENS6_IS8_EEED1Ev:
000000000003eb28	stp	x22, x21, [sp, #-0x30]!
000000000003eb2c	stp	x20, x19, [sp, #0x10]
000000000003eb30	stp	x29, x30, [sp, #0x20]
000000000003eb34	add	x29, sp, #0x20
000000000003eb38	mov	x19, x0
000000000003eb3c	ldr	x20, [x0]
000000000003eb40	cbz	x20, 0x3eb88
000000000003eb44	ldr	x8, [x19, #0x8]
000000000003eb48	cmp	x8, x20
000000000003eb4c	b.ne	0x3eb64
000000000003eb50	mov	x0, x20
000000000003eb54	b	0x3eb80
000000000003eb58	mov	x8, x21
000000000003eb5c	cmp	x21, x20
000000000003eb60	b.eq	0x3eb7c
000000000003eb64	sub	x21, x8, #0x18
000000000003eb68	ldursb	w9, [x8, #-0x1]
000000000003eb6c	tbz	w9, #0x1f, 0x3eb58
000000000003eb70	ldur	x0, [x8, #-0x18]
000000000003eb74	bl	0x51a64 ; symbol stub for: _free
000000000003eb78	b	0x3eb58
000000000003eb7c	ldr	x0, [x19]
000000000003eb80	str	x20, [x19, #0x8]
000000000003eb84	bl	0x51a64 ; symbol stub for: _free
000000000003eb88	mov	x0, x19
000000000003eb8c	ldp	x29, x30, [sp, #0x20]
000000000003eb90	ldp	x20, x19, [sp, #0x10]
000000000003eb94	ldp	x22, x21, [sp], #0x30
000000000003eb98	ret
__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev:
000000000003eb9c	stp	x20, x19, [sp, #-0x20]!
000000000003eba0	stp	x29, x30, [sp, #0x10]
000000000003eba4	add	x29, sp, #0x10
000000000003eba8	mov	x19, x0
000000000003ebac	ldr	x9, [x0, #0x8]
000000000003ebb0	cbz	x9, 0x3ebe8
000000000003ebb4	ldr	w8, [x19, #0x10]
000000000003ebb8	add	x0, x9, #0x138
000000000003ebbc	ldaxr	w9, [x0]
000000000003ebc0	stlxr	w10, w8, [x0]
000000000003ebc4	cbnz	w10, 0x3ebbc
000000000003ebc8	cbnz	w8, 0x3ebe8
000000000003ebcc	cmp	w9, #0x1
000000000003ebd0	b.ne	0x3ebe8
000000000003ebd4	adr	x8, #0x47e6f
000000000003ebd8	nop
000000000003ebdc	ldarb	w8, [x8]
000000000003ebe0	tbz	w8, #0x0, 0x3ebe8
000000000003ebe4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003ebe8	mov	x0, x19
000000000003ebec	ldp	x29, x30, [sp, #0x10]
000000000003ebf0	ldp	x20, x19, [sp], #0x20
000000000003ebf4	ret
__ZN5konan8snprintfEPcmPKcz:
000000000003ebf8	sub	sp, sp, #0x20
000000000003ebfc	stp	x29, x30, [sp, #0x10]
000000000003ec00	add	x29, sp, #0x10
000000000003ec04	add	x8, x29, #0x10
000000000003ec08	str	x8, [sp, #0x8]
000000000003ec0c	add	x3, x29, #0x10
000000000003ec10	bl	0x51d94 ; symbol stub for: _vsnprintf
000000000003ec14	ldp	x29, x30, [sp, #0x10]
000000000003ec18	add	sp, sp, #0x20
000000000003ec1c	ret
__ZN6kotlin8internal20GetCurrentStackTraceEm:
000000000003ec20	sub	sp, sp, #0x60
000000000003ec24	stp	x22, x21, [sp, #0x30]
000000000003ec28	stp	x20, x19, [sp, #0x40]
000000000003ec2c	stp	x29, x30, [sp, #0x50]
000000000003ec30	add	x29, sp, #0x50
000000000003ec34	mov	x19, x0
000000000003ec38	str	xzr, [sp, #0x20]
000000000003ec3c	mov	w8, #0x1
000000000003ec40	str	w8, [sp, #0x28]
000000000003ec44	strb	wzr, [sp, #0x2c]
000000000003ec48	adrp	x0, 46 ; 0x6c000
000000000003ec4c	add	x0, x0, #0xbb0
000000000003ec50	ldr	x8, [x0]
000000000003ec54	blr	x8
000000000003ec58	ldr	x8, [x0]
000000000003ec5c	cbz	x8, 0x3ec84
000000000003ec60	add	x9, x8, #0x138
000000000003ec64	mov	w11, #0x1
000000000003ec68	ldaxr	w10, [x9]
000000000003ec6c	stlxr	w12, w11, [x9]
000000000003ec70	cbnz	w12, 0x3ec68
000000000003ec74	str	x8, [sp, #0x20]
000000000003ec78	str	w10, [sp, #0x28]
000000000003ec7c	mov	w8, #0x1
000000000003ec80	strb	w8, [sp, #0x2c]
000000000003ec84	stp	xzr, xzr, [sp]
000000000003ec88	str	xzr, [sp, #0x10]
000000000003ec8c	mov	x0, sp
000000000003ec90	mov	w1, #0x82
000000000003ec94	bl	__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEE8__appendEm
000000000003ec98	ldp	x0, x8, [sp]
000000000003ec9c	sub	x8, x8, x0
000000000003eca0	lsr	x1, x8, #3
000000000003eca4	bl	0x519c8 ; symbol stub for: _backtrace
000000000003eca8	cmp	w0, #0x4
000000000003ecac	b.ls	0x3ecf4
000000000003ecb0	sxtw	x9, w0
000000000003ecb4	ldp	x0, x8, [sp]
000000000003ecb8	sub	x10, x8, x0
000000000003ecbc	asr	x10, x10, #3
000000000003ecc0	cmp	x10, x9
000000000003ecc4	b.hs	0x3ed10
000000000003ecc8	sub	x1, x9, x10
000000000003eccc	mov	x0, sp
000000000003ecd0	bl	__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEE8__appendEm
000000000003ecd4	ldp	x21, x8, [sp]
000000000003ecd8	mov	x0, x21
000000000003ecdc	sub	x9, x21, x0
000000000003ece0	add	x9, x9, x21
000000000003ece4	add	x1, x9, #0x20
000000000003ece8	subs	x20, x8, x1
000000000003ecec	b.ne	0x3ed34
000000000003ecf0	b	0x3ed40
000000000003ecf4	stp	xzr, xzr, [x19]
000000000003ecf8	str	xzr, [x19, #0x10]
000000000003ecfc	ldr	x0, [sp]
000000000003ed00	cbz	x0, 0x3ed58
000000000003ed04	str	x0, [sp, #0x8]
000000000003ed08	bl	0x51a64 ; symbol stub for: _free
000000000003ed0c	b	0x3ed58
000000000003ed10	b.ls	0x3ed1c
000000000003ed14	add	x8, x0, x9, lsl #3
000000000003ed18	str	x8, [sp, #0x8]
000000000003ed1c	mov	x21, x0
000000000003ed20	sub	x9, x21, x0
000000000003ed24	add	x9, x9, x21
000000000003ed28	add	x1, x9, #0x20
000000000003ed2c	subs	x20, x8, x1
000000000003ed30	b.eq	0x3ed40
000000000003ed34	mov	x2, x20
000000000003ed38	bl	0x51ab8 ; symbol stub for: _memmove
000000000003ed3c	ldr	x0, [sp]
000000000003ed40	add	x8, x21, x20
000000000003ed44	stp	x0, x8, [x19]
000000000003ed48	ldr	x8, [sp, #0x10]
000000000003ed4c	str	x8, [x19, #0x10]
000000000003ed50	stp	xzr, xzr, [sp]
000000000003ed54	str	xzr, [sp, #0x10]
000000000003ed58	ldr	x9, [sp, #0x20]
000000000003ed5c	cbz	x9, 0x3ed94
000000000003ed60	ldr	w8, [sp, #0x28]
000000000003ed64	add	x0, x9, #0x138
000000000003ed68	ldaxr	w9, [x0]
000000000003ed6c	stlxr	w10, w8, [x0]
000000000003ed70	cbnz	w10, 0x3ed68
000000000003ed74	cbnz	w8, 0x3ed94
000000000003ed78	cmp	w9, #0x1
000000000003ed7c	b.ne	0x3ed94
000000000003ed80	adr	x8, #0x47cc3
000000000003ed84	nop
000000000003ed88	ldarb	w8, [x8]
000000000003ed8c	tbz	w8, #0x0, 0x3ed94
000000000003ed90	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003ed94	ldp	x29, x30, [sp, #0x50]
000000000003ed98	ldp	x20, x19, [sp, #0x40]
000000000003ed9c	ldp	x22, x21, [sp, #0x30]
000000000003eda0	add	sp, sp, #0x60
000000000003eda4	ret
000000000003eda8	b	0x3edac
000000000003edac	mov	x19, x0
000000000003edb0	mov	x0, sp
000000000003edb4	bl	__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEED1Ev
000000000003edb8	add	x0, sp, #0x18
000000000003edbc	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
000000000003edc0	mov	x0, x19
000000000003edc4	bl	___clang_call_terminate
__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEE8__appendEm:
000000000003edc8	stp	x26, x25, [sp, #-0x50]!
000000000003edcc	stp	x24, x23, [sp, #0x10]
000000000003edd0	stp	x22, x21, [sp, #0x20]
000000000003edd4	stp	x20, x19, [sp, #0x30]
000000000003edd8	stp	x29, x30, [sp, #0x40]
000000000003eddc	add	x29, sp, #0x40
000000000003ede0	mov	x22, x1
000000000003ede4	mov	x19, x0
000000000003ede8	ldp	x0, x8, [x0, #0x8]
000000000003edec	sub	x9, x8, x0
000000000003edf0	cmp	x1, x9, asr #3
000000000003edf4	b.ls	0x3ee48
000000000003edf8	ldr	x20, [x19]
000000000003edfc	sub	x21, x0, x20
000000000003ee00	asr	x25, x21, #3
000000000003ee04	add	x9, x25, x22
000000000003ee08	lsr	x10, x9, #61
000000000003ee0c	cbnz	x10, 0x3eedc
000000000003ee10	sub	x8, x8, x20
000000000003ee14	asr	x10, x8, #2
000000000003ee18	cmp	x10, x9
000000000003ee1c	csel	x9, x9, x10, lo
000000000003ee20	mov	x10, #0xfffffffffffffff
000000000003ee24	cmp	x10, x8, asr #3
000000000003ee28	mov	x8, #0x1fffffffffffffff
000000000003ee2c	csel	x24, x9, x8, hi
000000000003ee30	cbz	x24, 0x3ee64
000000000003ee34	mov	x0, x24
000000000003ee38	mov	w1, #0x8
000000000003ee3c	bl	0x519e0 ; symbol stub for: _calloc
000000000003ee40	mov	x23, x0
000000000003ee44	b	0x3ee68
000000000003ee48	cbz	x22, 0x3ee5c
000000000003ee4c	lsl	x1, x22, #3
000000000003ee50	add	x20, x0, x1
000000000003ee54	bl	0x519d4 ; symbol stub for: _bzero
000000000003ee58	mov	x0, x20
000000000003ee5c	str	x0, [x19, #0x8]
000000000003ee60	b	0x3eec4
000000000003ee64	mov	x23, #0x0
000000000003ee68	add	x25, x23, x25, lsl #3
000000000003ee6c	lsl	x22, x22, #3
000000000003ee70	add	x24, x23, x24, lsl #3
000000000003ee74	mov	x0, x25
000000000003ee78	mov	x1, x22
000000000003ee7c	bl	0x519d4 ; symbol stub for: _bzero
000000000003ee80	add	x22, x25, x22
000000000003ee84	cmp	x21, #0x1
000000000003ee88	b.lt	0x3ee9c
000000000003ee8c	mov	x0, x23
000000000003ee90	mov	x1, x20
000000000003ee94	mov	x2, x21
000000000003ee98	bl	0x51aac ; symbol stub for: _memcpy
000000000003ee9c	stp	x23, x22, [x19]
000000000003eea0	str	x24, [x19, #0x10]
000000000003eea4	cbz	x20, 0x3eec4
000000000003eea8	mov	x0, x20
000000000003eeac	ldp	x29, x30, [sp, #0x40]
000000000003eeb0	ldp	x20, x19, [sp, #0x30]
000000000003eeb4	ldp	x22, x21, [sp, #0x20]
000000000003eeb8	ldp	x24, x23, [sp, #0x10]
000000000003eebc	ldp	x26, x25, [sp], #0x50
000000000003eec0	b	0x51a64 ; symbol stub for: _free
000000000003eec4	ldp	x29, x30, [sp, #0x40]
000000000003eec8	ldp	x20, x19, [sp, #0x30]
000000000003eecc	ldp	x22, x21, [sp, #0x20]
000000000003eed0	ldp	x24, x23, [sp, #0x10]
000000000003eed4	ldp	x26, x25, [sp], #0x50
000000000003eed8	ret
000000000003eedc	mov	x0, x19
000000000003eee0	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEED1Ev:
000000000003eee4	stp	x20, x19, [sp, #-0x20]!
000000000003eee8	stp	x29, x30, [sp, #0x10]
000000000003eeec	add	x29, sp, #0x10
000000000003eef0	mov	x19, x0
000000000003eef4	ldr	x0, [x0]
000000000003eef8	cbz	x0, 0x3ef04
000000000003eefc	str	x0, [x19, #0x8]
000000000003ef00	bl	0x51a64 ; symbol stub for: _free
000000000003ef04	mov	x0, x19
000000000003ef08	ldp	x29, x30, [sp, #0x10]
000000000003ef0c	ldp	x20, x19, [sp], #0x20
000000000003ef10	ret
_Kotlin_initRuntimeIfNeeded:
000000000003ef14	sub	sp, sp, #0xc0
000000000003ef18	stp	x28, x27, [sp, #0x60]
000000000003ef1c	stp	x26, x25, [sp, #0x70]
000000000003ef20	stp	x24, x23, [sp, #0x80]
000000000003ef24	stp	x22, x21, [sp, #0x90]
000000000003ef28	stp	x20, x19, [sp, #0xa0]
000000000003ef2c	stp	x29, x30, [sp, #0xb0]
000000000003ef30	add	x29, sp, #0xb0
000000000003ef34	adrp	x22, 46 ; 0x6c000
000000000003ef38	add	x22, x22, #0xbf8
000000000003ef3c	ldr	x23, [x22]
000000000003ef40	mov	x0, x22
000000000003ef44	blr	x23
000000000003ef48	ldr	x8, [x0]
000000000003ef4c	cbnz	x8, 0x3f7e0
000000000003ef50	adr	x8, #0x47d78
000000000003ef54	nop
000000000003ef58	ldarb	w8, [x8]
000000000003ef5c	tbz	w8, #0x0, 0x3f820
000000000003ef60	adr	x8, #0x47b88
000000000003ef64	nop
000000000003ef68	ldar	x8, [x8]
000000000003ef6c	cmn	x8, #0x1
000000000003ef70	b.eq	0x3ef9c
000000000003ef74	add	x8, sp, #0x38
000000000003ef78	str	x8, [sp, #0x48]
000000000003ef7c	add	x8, sp, #0x48
000000000003ef80	str	x8, [sp, #0x40]
000000000003ef84	adr	x0, #0x47b64
000000000003ef88	nop
000000000003ef8c	adr	x2, #-0xf448
000000000003ef90	nop
000000000003ef94	add	x1, sp, #0x40
000000000003ef98	bl	0x517dc ; symbol stub for: __ZNSt3__111__call_onceERVmPvPFvS2_E
000000000003ef9c	bl	_mi_thread_init
000000000003efa0	mov	w0, #0x1
000000000003efa4	mov	w1, #0x18
000000000003efa8	bl	0x519e0 ; symbol stub for: _calloc
000000000003efac	cbz	x0, 0x3f788
000000000003efb0	mov	x25, x0
000000000003efb4	stp	xzr, xzr, [x0]
000000000003efb8	str	xzr, [x0, #0x10]
000000000003efbc	mov	x0, x22
000000000003efc0	blr	x23
000000000003efc4	ldr	x8, [x0]
000000000003efc8	cbnz	x8, 0x3f850
000000000003efcc	mov	x0, x22
000000000003efd0	blr	x23
000000000003efd4	str	x25, [x0]
000000000003efd8	adr	x8, #0x47a88
000000000003efdc	nop
000000000003efe0	ldaxr	w9, [x8]
000000000003efe4	add	w9, w9, #0x1
000000000003efe8	stlxr	w10, w9, [x8]
000000000003efec	cbnz	w10, 0x3efe0
000000000003eff0	adr	x8, #0x47a6c
000000000003eff4	nop
000000000003eff8	ldaxr	w9, [x8]
000000000003effc	cbnz	w9, 0x3f010
000000000003f000	mov	w28, #0x1
000000000003f004	stlxr	w9, w28, [x8]
000000000003f008	cbnz	w9, 0x3eff8
000000000003f00c	b	0x3f018
000000000003f010	mov	w28, #0x0
000000000003f014	clrex
000000000003f018	str	x23, [sp, #0x28]
000000000003f01c	bl	__ZN5konan15currentThreadIdEv
000000000003f020	mov	x21, x0
000000000003f024	mov	w19, #0x1
000000000003f028	mov	w0, #0x1
000000000003f02c	mov	w1, #0x160
000000000003f030	bl	0x519e0 ; symbol stub for: _calloc
000000000003f034	mov	x20, x0
000000000003f038	mov	x23, x0
000000000003f03c	str	w21, [x23, #0x8]!
000000000003f040	adr	x21, #0x47d00
000000000003f044	nop
000000000003f048	add	x8, x21, #0x50
000000000003f04c	add	x9, x0, #0x18
000000000003f050	stp	x8, x9, [x0, #0x10]
000000000003f054	str	x9, [x0, #0x20]
000000000003f058	add	x8, x0, #0x30
000000000003f05c	stp	x8, x8, [x0, #0x30]
000000000003f060	movi.16b	v0, #0x0
000000000003f064	stp	q0, q0, [x0, #0x40]
000000000003f068	stp	q0, q0, [x0, #0x60]
000000000003f06c	mov	w8, #0x3f800000
000000000003f070	str	w8, [x0, #0x80]
000000000003f074	stp	xzr, xzr, [x0, #0x88]
000000000003f078	add	x8, x21, #0x88
000000000003f07c	stp	xzr, x8, [x0, #0x98]
000000000003f080	add	x8, x0, #0xa8
000000000003f084	stp	x8, x8, [x0, #0xa8]
000000000003f088	add	x8, x0, #0xc0
000000000003f08c	stp	x8, x8, [x0, #0xc0]
000000000003f090	add	x8, x21, #0xc0
000000000003f094	add	x9, x0, #0xe0
000000000003f098	stp	x8, x9, [x0, #0xd8]
000000000003f09c	str	x9, [x0, #0xe8]
000000000003f0a0	add	x8, x0, #0xf8
000000000003f0a4	stp	x8, x8, [x0, #0xf8]
000000000003f0a8	add	x0, x0, #0x118
000000000003f0ac	stp	xzr, xzr, [x20, #0x108]
000000000003f0b0	add	x1, x21, #0xf8
000000000003f0b4	mov	x2, x23
000000000003f0b8	bl	__ZN6kotlin2gc2GC10ThreadDataC1ERS1_RNS_2mm10ThreadDataE
000000000003f0bc	stp	xzr, xzr, [x20, #0x120]
000000000003f0c0	str	xzr, [x20, #0x130]
000000000003f0c4	str	w19, [x20, #0x138]
000000000003f0c8	str	x23, [x20, #0x140]
000000000003f0cc	strb	wzr, [x20, #0x148]
000000000003f0d0	stp	xzr, xzr, [x20, #0x150]
000000000003f0d4	mov	x0, x21
000000000003f0d8	bl	0x5180c ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
000000000003f0dc	adr	x8, #0x47c54
000000000003f0e0	nop
000000000003f0e4	ldr	x9, [x8]
000000000003f0e8	add	x10, x9, #0x158
000000000003f0ec	add	x11, x8, #0x8
000000000003f0f0	cmp	x9, #0x0
000000000003f0f4	csel	x10, x11, x10, eq
000000000003f0f8	csel	x9, xzr, x9, eq
000000000003f0fc	str	x20, [x10]
000000000003f100	str	xzr, [x8]
000000000003f104	ldr	x21, [x20, #0x150]
000000000003f108	str	x9, [x20, #0x150]
000000000003f10c	cbz	x21, 0x3f144
000000000003f110	mov	x0, x21
000000000003f114	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000003f118	mov	x0, x21
000000000003f11c	bl	0x51a64 ; symbol stub for: _free
000000000003f120	adrp	x8, 71 ; 0x86000
000000000003f124	ldr	x21, [x8, #0xd30]
000000000003f128	str	x20, [x8, #0xd30]
000000000003f12c	cbz	x21, 0x3f14c
000000000003f130	mov	x0, x21
000000000003f134	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000003f138	mov	x0, x21
000000000003f13c	bl	0x51a64 ; symbol stub for: _free
000000000003f140	b	0x3f14c
000000000003f144	adrp	x8, 71 ; 0x86000
000000000003f148	str	x20, [x8, #0xd30]
000000000003f14c	add	x21, x20, #0x138
000000000003f150	adr	x0, #0x47bf0
000000000003f154	nop
000000000003f158	bl	0x51818 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000003f15c	adrp	x26, 45 ; 0x6c000
000000000003f160	add	x26, x26, #0xbb0
000000000003f164	ldr	x23, [x26]
000000000003f168	mov	x0, x26
000000000003f16c	blr	x23
000000000003f170	str	x20, [x0]
000000000003f174	str	x20, [x25]
000000000003f178	ldaxr	w19, [x21]
000000000003f17c	stlxr	w8, wzr, [x21]
000000000003f180	cbnz	w8, 0x3f178
000000000003f184	cmp	w19, #0x1
000000000003f188	b.ne	0x3f1a4
000000000003f18c	adr	x8, #0x478b7
000000000003f190	nop
000000000003f194	ldarb	w8, [x8]
000000000003f198	tbz	w8, #0x0, 0x3f1a4
000000000003f19c	mov	x0, x21
000000000003f1a0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003f1a4	ldr	x22, [x25]
000000000003f1a8	adrp	x0, 45 ; 0x6c000
000000000003f1ac	add	x0, x0, #0xc10
000000000003f1b0	ldr	x8, [x0]
000000000003f1b4	blr	x8
000000000003f1b8	ldr	x24, [x0]
000000000003f1bc	str	x25, [sp, #0x30]
000000000003f1c0	cbnz	x24, 0x3f598
000000000003f1c4	str	x8, [sp, #0x18]
000000000003f1c8	bl	__ZN12_GLOBAL__N_18theStateEv
000000000003f1cc	str	x22, [sp, #0x10]
000000000003f1d0	str	x0, [sp, #0x20]
000000000003f1d4	str	x0, [sp, #0x48]
000000000003f1d8	mov	w8, #0x1
000000000003f1dc	strb	w8, [sp, #0x50]
000000000003f1e0	str	xzr, [sp, #0x58]
000000000003f1e4	mov	x0, x26
000000000003f1e8	blr	x23
000000000003f1ec	ldr	x27, [x0]
000000000003f1f0	add	x24, x27, #0x138
000000000003f1f4	ldaxr	w25, [x24]
000000000003f1f8	stlxr	w9, w8, [x24]
000000000003f1fc	cbnz	w9, 0x3f1f4
000000000003f200	ldr	x0, [sp, #0x20]
000000000003f204	bl	0x51c8c ; symbol stub for: _pthread_mutex_lock
000000000003f208	cbz	x27, 0x3f23c
000000000003f20c	ldaxr	w8, [x24]
000000000003f210	stlxr	w9, w25, [x24]
000000000003f214	cbnz	w9, 0x3f20c
000000000003f218	cbnz	w25, 0x3f23c
000000000003f21c	cmp	w8, #0x1
000000000003f220	b.ne	0x3f23c
000000000003f224	adr	x8, #0x4781f
000000000003f228	nop
000000000003f22c	ldarb	w8, [x8]
000000000003f230	tbz	w8, #0x0, 0x3f23c
000000000003f234	mov	x0, x24
000000000003f238	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003f23c	mov	w22, #0x1
000000000003f240	mov	w0, #0x1
000000000003f244	mov	w1, #0xe0
000000000003f248	bl	0x519e0 ; symbol stub for: _calloc
000000000003f24c	mov	x24, x0
000000000003f250	cbz	x0, 0x3f574
000000000003f254	ldr	x10, [sp, #0x20]
000000000003f258	ldr	w8, [x10, #0xe8]
000000000003f25c	add	w9, w8, #0x1
000000000003f260	str	w9, [x10, #0xe8]
000000000003f264	stp	w8, w22, [x24]
000000000003f268	movi.16b	v0, #0x0
000000000003f26c	mov	x27, x24
000000000003f270	str	q0, [x27, #0x8]!
000000000003f274	stur	q0, [x24, #0x18]
000000000003f278	stur	q0, [x24, #0x28]
000000000003f27c	str	xzr, [x24, #0x48]
000000000003f280	mov	x8, x24
000000000003f284	str	xzr, [x8, #0x40]!
000000000003f288	str	x8, [x24, #0x38]
000000000003f28c	stp	xzr, xzr, [x24, #0xd0]
000000000003f290	mov	x0, x26
000000000003f294	blr	x23
000000000003f298	ldr	x25, [x0]
000000000003f29c	add	x26, x25, #0x138
000000000003f2a0	ldaxr	w23, [x26]
000000000003f2a4	stlxr	w8, w22, [x26]
000000000003f2a8	cbnz	w8, 0x3f2a0
000000000003f2ac	add	x0, x24, #0x58
000000000003f2b0	mov	x1, #0x0
000000000003f2b4	bl	0x51c80 ; symbol stub for: _pthread_mutex_init
000000000003f2b8	add	x0, x24, #0x98
000000000003f2bc	mov	x1, #0x0
000000000003f2c0	bl	0x51c20 ; symbol stub for: _pthread_cond_init
000000000003f2c4	cbz	x25, 0x3f2f8
000000000003f2c8	ldaxr	w8, [x26]
000000000003f2cc	stlxr	w9, w23, [x26]
000000000003f2d0	cbnz	w9, 0x3f2c8
000000000003f2d4	cbnz	w23, 0x3f2f8
000000000003f2d8	cmp	w8, #0x1
000000000003f2dc	b.ne	0x3f2f8
000000000003f2e0	adr	x8, #0x47763
000000000003f2e4	nop
000000000003f2e8	ldarb	w8, [x8]
000000000003f2ec	tbz	w8, #0x0, 0x3f2f8
000000000003f2f0	mov	x0, x26
000000000003f2f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003f2f8	ldr	w25, [x24]
000000000003f2fc	ldr	x8, [sp, #0x20]
000000000003f300	add	x10, x8, #0x98
000000000003f304	sxtw	x22, w25
000000000003f308	ldr	x26, [x8, #0xa0]
000000000003f30c	str	x10, [sp, #0x8]
000000000003f310	cbz	x26, 0x3f338
000000000003f314	fmov	d0, x26
000000000003f318	cnt.8b	v0, v0
000000000003f31c	uaddlv.8b	h0, v0
000000000003f320	fmov	w8, s0
000000000003f324	cmp	x8, #0x1
000000000003f328	b.hi	0x3f33c
000000000003f32c	sub	x9, x26, #0x1
000000000003f330	and	x23, x9, x22
000000000003f334	b	0x3f350
000000000003f338	b	0x3f3ac
000000000003f33c	mov	x23, x22
000000000003f340	cmp	x26, x22
000000000003f344	b.hi	0x3f350
000000000003f348	udiv	x9, x22, x26
000000000003f34c	msub	x23, x9, x26, x22
000000000003f350	ldr	x9, [x10]
000000000003f354	ldr	x27, [x9, x23, lsl #3]
000000000003f358	cbz	x27, 0x3f3ac
000000000003f35c	sub	x9, x26, #0x1
000000000003f360	b	0x3f37c
000000000003f364	and	x10, x10, x9
000000000003f368	cmp	x10, x23
000000000003f36c	b.ne	0x3f3ac
000000000003f370	ldr	w10, [x27, #0x10]
000000000003f374	cmp	w10, w25
000000000003f378	b.eq	0x3f570
000000000003f37c	ldr	x27, [x27]
000000000003f380	cbz	x27, 0x3f3ac
000000000003f384	ldr	x10, [x27, #0x8]
000000000003f388	cmp	x10, x22
000000000003f38c	b.eq	0x3f370
000000000003f390	cmp	x8, #0x1
000000000003f394	b.ls	0x3f364
000000000003f398	cmp	x10, x26
000000000003f39c	b.lo	0x3f368
000000000003f3a0	udiv	x11, x10, x26
000000000003f3a4	msub	x10, x11, x26, x10
000000000003f3a8	b	0x3f368
000000000003f3ac	mov	w0, #0x1
000000000003f3b0	mov	w1, #0x20
000000000003f3b4	bl	0x519e0 ; symbol stub for: _calloc
000000000003f3b8	mov	x27, x0
000000000003f3bc	str	w25, [x0, #0x10]
000000000003f3c0	str	x22, [x0, #0x8]
000000000003f3c4	ldr	x25, [sp, #0x20]
000000000003f3c8	ldr	x8, [x25, #0xb0]
000000000003f3cc	add	x8, x8, #0x1
000000000003f3d0	ucvtf	s0, x8
000000000003f3d4	ldr	s1, [x25, #0xb8]
000000000003f3d8	cbz	x26, 0x3f3ec
000000000003f3dc	ucvtf	s2, x26
000000000003f3e0	fmul	s2, s1, s2
000000000003f3e4	fcmp	s2, s0
000000000003f3e8	b.pl	0x3f4f4
000000000003f3ec	cmp	x26, #0x3
000000000003f3f0	cset	w8, lo
000000000003f3f4	sub	x9, x26, #0x1
000000000003f3f8	tst	x26, x9
000000000003f3fc	cset	w9, ne
000000000003f400	orr	w8, w8, w9
000000000003f404	bfi	x8, x26, #1, #63
000000000003f408	fdiv	s0, s0, s1
000000000003f40c	fcvtpu	x9, s0
000000000003f410	cmp	x8, x9
000000000003f414	csel	x26, x9, x8, lo
000000000003f418	subs	x8, x26, #0x1
000000000003f41c	b.ne	0x3f428
000000000003f420	mov	w26, #0x2
000000000003f424	b	0x3f43c
000000000003f428	tst	x26, x8
000000000003f42c	b.eq	0x3f43c
000000000003f430	mov	x0, x26
000000000003f434	bl	0x517e8 ; symbol stub for: __ZNSt3__112__next_primeEm
000000000003f438	mov	x26, x0
000000000003f43c	ldr	x23, [x25, #0xa0]
000000000003f440	cmp	x26, x23
000000000003f444	b.ls	0x3f458
000000000003f448	ldr	x0, [sp, #0x8]
000000000003f44c	mov	x1, x26
000000000003f450	bl	__ZNSt3__112__hash_tableINS_17__hash_value_typeIiP6WorkerEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEEN6kotlin11std_support9allocatorIS4_EEE8__rehashEm
000000000003f454	b	0x3f4c4
000000000003f458	b.hs	0x3f4c4
000000000003f45c	ldr	x8, [x25, #0xb0]
000000000003f460	ucvtf	s0, x8
000000000003f464	ldr	s1, [x25, #0xb8]
000000000003f468	fdiv	s0, s0, s1
000000000003f46c	fcvtpu	x0, s0
000000000003f470	cmp	x23, #0x3
000000000003f474	b.lo	0x3f4b0
000000000003f478	fmov	d0, x23
000000000003f47c	cnt.8b	v0, v0
000000000003f480	uaddlv.8b	h0, v0
000000000003f484	fmov	w8, s0
000000000003f488	cmp	x8, #0x1
000000000003f48c	b.hi	0x3f4b0
000000000003f490	sub	x8, x0, #0x1
000000000003f494	clz	x8, x8
000000000003f498	neg	x8, x8
000000000003f49c	mov	w9, #0x1
000000000003f4a0	lsl	x8, x9, x8
000000000003f4a4	cmp	x0, #0x2
000000000003f4a8	csel	x0, x0, x8, lo
000000000003f4ac	b	0x3f4b4
000000000003f4b0	bl	0x517e8 ; symbol stub for: __ZNSt3__112__next_primeEm
000000000003f4b4	cmp	x26, x0
000000000003f4b8	csel	x26, x0, x26, lo
000000000003f4bc	cmp	x26, x23
000000000003f4c0	b.lo	0x3f448
000000000003f4c4	ldr	x26, [x25, #0xa0]
000000000003f4c8	sub	x8, x26, #0x1
000000000003f4cc	tst	x26, x8
000000000003f4d0	b.ne	0x3f4dc
000000000003f4d4	and	x23, x8, x22
000000000003f4d8	b	0x3f4f4
000000000003f4dc	cmp	x26, x22
000000000003f4e0	b.ls	0x3f4ec
000000000003f4e4	mov	x23, x22
000000000003f4e8	b	0x3f4f4
000000000003f4ec	udiv	x8, x22, x26
000000000003f4f0	msub	x23, x8, x26, x22
000000000003f4f4	ldr	x10, [sp, #0x8]
000000000003f4f8	ldr	x8, [x10]
000000000003f4fc	ldr	x8, [x8, x23, lsl #3]
000000000003f500	cbz	x8, 0x3f510
000000000003f504	ldr	x9, [x8]
000000000003f508	str	x9, [x27]
000000000003f50c	b	0x3f560
000000000003f510	mov	x8, x25
000000000003f514	ldr	x9, [x8, #0xa8]!
000000000003f518	str	x9, [x27]
000000000003f51c	str	x27, [x8]
000000000003f520	ldur	x9, [x8, #-0x10]
000000000003f524	str	x8, [x9, x23, lsl #3]
000000000003f528	ldr	x8, [x27]
000000000003f52c	cbz	x8, 0x3f564
000000000003f530	ldr	x8, [x8, #0x8]
000000000003f534	sub	x9, x26, #0x1
000000000003f538	tst	x26, x9
000000000003f53c	b.ne	0x3f548
000000000003f540	and	x8, x8, x9
000000000003f544	b	0x3f558
000000000003f548	cmp	x8, x26
000000000003f54c	b.lo	0x3f558
000000000003f550	udiv	x9, x8, x26
000000000003f554	msub	x8, x9, x26, x8
000000000003f558	ldr	x9, [x10]
000000000003f55c	add	x8, x9, x8, lsl #3
000000000003f560	str	x27, [x8]
000000000003f564	ldr	x8, [x25, #0xb0]
000000000003f568	add	x8, x8, #0x1
000000000003f56c	str	x8, [x25, #0xb0]
000000000003f570	str	x24, [x27, #0x18]
000000000003f574	add	x0, sp, #0x48
000000000003f578	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000003f57c	adrp	x0, 45 ; 0x6c000
000000000003f580	add	x0, x0, #0xc10
000000000003f584	ldr	x8, [sp, #0x18]
000000000003f588	blr	x8
000000000003f58c	str	x24, [x0]
000000000003f590	ldr	x25, [sp, #0x30]
000000000003f594	ldr	x22, [sp, #0x10]
000000000003f598	bl	0x51cb0 ; symbol stub for: _pthread_self
000000000003f59c	stp	x0, x22, [x24, #0xd0]
000000000003f5a0	str	x24, [x25, #0x8]
000000000003f5a4	ldr	x23, [x25]
000000000003f5a8	adrp	x26, 71 ; 0x86000
000000000003f5ac	ldr	x22, [x26, #0xcb0]
000000000003f5b0	cbz	x22, 0x3f5d0
000000000003f5b4	ldr	x8, [x22]
000000000003f5b8	mov	w0, #0x0
000000000003f5bc	mov	x1, x23
000000000003f5c0	blr	x8
000000000003f5c4	ldr	x22, [x22, #0x8]
000000000003f5c8	cbnz	x22, 0x3f5b4
000000000003f5cc	ldr	x23, [x25]
000000000003f5d0	mov	x24, x23
000000000003f5d4	ldr	x8, [x24, #0x48]!
000000000003f5d8	ldrsw	x22, [x24, #0x44]
000000000003f5dc	ldr	x0, [x24, #0x8]
000000000003f5e0	sub	x9, x0, x8
000000000003f5e4	asr	x27, x9, #3
000000000003f5e8	cmp	x27, x22
000000000003f5ec	b.hs	0x3f648
000000000003f5f0	sub	x25, x22, x27
000000000003f5f4	ldr	x9, [x23, #0x58]
000000000003f5f8	sub	x10, x9, x0
000000000003f5fc	cmp	x25, x10, asr #3
000000000003f600	b.ls	0x3f65c
000000000003f604	tbnz	w22, #0x1f, 0x3f864
000000000003f608	sub	x8, x9, x8
000000000003f60c	asr	x9, x8, #2
000000000003f610	cmp	x9, x22
000000000003f614	csel	x9, x22, x9, lo
000000000003f618	mov	x10, #0xfffffffffffffff
000000000003f61c	cmp	x10, x8, asr #3
000000000003f620	mov	x8, #0x1fffffffffffffff
000000000003f624	csel	x8, x9, x8, hi
000000000003f628	cbz	x8, 0x3f67c
000000000003f62c	str	x8, [sp, #0x20]
000000000003f630	mov	x0, x8
000000000003f634	mov	w1, #0x8
000000000003f638	bl	0x519e0 ; symbol stub for: _calloc
000000000003f63c	mov	x26, x0
000000000003f640	ldr	x8, [sp, #0x20]
000000000003f644	b	0x3f680
000000000003f648	ldr	x24, [sp, #0x30]
000000000003f64c	b.ls	0x3f6dc
000000000003f650	add	x8, x8, x22, lsl #3
000000000003f654	str	x8, [x23, #0x50]
000000000003f658	b	0x3f6dc
000000000003f65c	cbz	x25, 0x3f670
000000000003f660	lsl	x1, x25, #3
000000000003f664	add	x22, x0, x1
000000000003f668	bl	0x519d4 ; symbol stub for: _bzero
000000000003f66c	mov	x0, x22
000000000003f670	ldr	x24, [sp, #0x30]
000000000003f674	str	x0, [x23, #0x50]
000000000003f678	b	0x3f6dc
000000000003f67c	mov	x26, #0x0
000000000003f680	add	x27, x26, x27, lsl #3
000000000003f684	lsl	x1, x25, #3
000000000003f688	add	x8, x26, x8, lsl #3
000000000003f68c	str	x8, [sp, #0x20]
000000000003f690	mov	x0, x27
000000000003f694	bl	0x519d4 ; symbol stub for: _bzero
000000000003f698	add	x22, x26, x22, lsl #3
000000000003f69c	ldp	x1, x8, [x23, #0x48]
000000000003f6a0	sub	x2, x8, x1
000000000003f6a4	sub	x25, x27, x2
000000000003f6a8	cmp	x2, #0x1
000000000003f6ac	b.lt	0x3f6bc
000000000003f6b0	mov	x0, x25
000000000003f6b4	bl	0x51aac ; symbol stub for: _memcpy
000000000003f6b8	ldr	x1, [x24]
000000000003f6bc	ldr	x24, [sp, #0x30]
000000000003f6c0	adrp	x26, 71 ; 0x86000
000000000003f6c4	stp	x25, x22, [x23, #0x48]
000000000003f6c8	ldr	x8, [sp, #0x20]
000000000003f6cc	str	x8, [x23, #0x58]
000000000003f6d0	cbz	x1, 0x3f6dc
000000000003f6d4	mov	x0, x1
000000000003f6d8	bl	0x51a64 ; symbol stub for: _free
000000000003f6dc	mov	w8, #0x1
000000000003f6e0	str	w8, [x23, #0x88]
000000000003f6e4	cbz	w28, 0x3f71c
000000000003f6e8	nop
000000000003f6ec	ldr	x8, #0x475d4
000000000003f6f0	cmn	x8, #0x1
000000000003f6f4	b.ne	0x3f800
000000000003f6f8	ldr	x22, [x26, #0xcb0]
000000000003f6fc	cbz	x22, 0x3f740
000000000003f700	ldr	x23, [x24]
000000000003f704	ldr	x8, [x22]
000000000003f708	mov	w0, #0x1
000000000003f70c	mov	x1, x23
000000000003f710	blr	x8
000000000003f714	ldr	x22, [x22, #0x8]
000000000003f718	cbnz	x22, 0x3f704
000000000003f71c	ldr	x22, [x26, #0xcb0]
000000000003f720	cbz	x22, 0x3f740
000000000003f724	ldr	x23, [x24]
000000000003f728	ldr	x8, [x22]
000000000003f72c	mov	w0, #0x2
000000000003f730	mov	x1, x23
000000000003f734	blr	x8
000000000003f738	ldr	x22, [x22, #0x8]
000000000003f73c	cbnz	x22, 0x3f728
000000000003f740	mov	w8, #0x1
000000000003f744	str	w8, [x24, #0x10]
000000000003f748	adrp	x22, 45 ; 0x6c000
000000000003f74c	add	x22, x22, #0xbf8
000000000003f750	ldr	x23, [sp, #0x28]
000000000003f754	cbz	x20, 0x3f788
000000000003f758	ldaxr	w8, [x21]
000000000003f75c	stlxr	w9, w19, [x21]
000000000003f760	cbnz	w9, 0x3f758
000000000003f764	cbnz	w19, 0x3f788
000000000003f768	cmp	w8, #0x1
000000000003f76c	b.ne	0x3f788
000000000003f770	adr	x8, #0x472d3
000000000003f774	nop
000000000003f778	ldarb	w8, [x8]
000000000003f77c	tbz	w8, #0x0, 0x3f788
000000000003f780	mov	x0, x21
000000000003f784	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003f788	mov	x0, x22
000000000003f78c	blr	x23
000000000003f790	ldr	x20, [x0]
000000000003f794	adr	x0, #0x2cdcc
000000000003f798	nop
000000000003f79c	adr	x1, #0xae8
000000000003f7a0	nop
000000000003f7a4	bl	0x51ca4 ; symbol stub for: _pthread_once
000000000003f7a8	mov	w0, #0x1
000000000003f7ac	mov	w1, #0x18
000000000003f7b0	bl	0x519e0 ; symbol stub for: _calloc
000000000003f7b4	mov	x19, x0
000000000003f7b8	adr	x8, #0x1e8
000000000003f7bc	nop
000000000003f7c0	stp	x8, x20, [x0, #0x8]
000000000003f7c4	adrp	x20, 71 ; 0x86000
000000000003f7c8	ldr	x0, [x20, #0xca8]
000000000003f7cc	bl	0x51c50 ; symbol stub for: _pthread_getspecific
000000000003f7d0	str	x0, [x19]
000000000003f7d4	ldr	x0, [x20, #0xca8]
000000000003f7d8	mov	x1, x19
000000000003f7dc	bl	0x51cc8 ; symbol stub for: _pthread_setspecific
000000000003f7e0	ldp	x29, x30, [sp, #0xb0]
000000000003f7e4	ldp	x20, x19, [sp, #0xa0]
000000000003f7e8	ldp	x22, x21, [sp, #0x90]
000000000003f7ec	ldp	x24, x23, [sp, #0x80]
000000000003f7f0	ldp	x26, x25, [sp, #0x70]
000000000003f7f4	ldp	x28, x27, [sp, #0x60]
000000000003f7f8	add	sp, sp, #0xc0
000000000003f7fc	ret
000000000003f800	adr	x0, #0x474c0
000000000003f804	nop
000000000003f808	adr	x1, #0x28268
000000000003f80c	nop
000000000003f810	bl	0x51a40 ; symbol stub for: _dispatch_once
000000000003f814	ldr	x22, [x26, #0xcb0]
000000000003f818	cbnz	x22, 0x3f700
000000000003f81c	b	0x3f740
000000000003f820	adr	x20, #0x474a8
000000000003f824	nop
000000000003f828	mov	x0, x20
000000000003f82c	bl	0x51950 ; symbol stub for: ___cxa_guard_acquire
000000000003f830	cbz	w0, 0x3ef60
000000000003f834	adr	x0, #0x45e8
000000000003f838	nop
000000000003f83c	bl	0x518e4 ; symbol stub for: __ZSt13set_terminatePFvvE
000000000003f840	str	x0, [x20, #0x8]
000000000003f844	mov	x0, x20
000000000003f848	bl	0x5195c ; symbol stub for: ___cxa_guard_release
000000000003f84c	b	0x3ef60
000000000003f850	adr	x2, #0x17136 ; literal pool for: "No active runtimes allowed"
000000000003f854	nop
000000000003f858	mov	w0, #0x0
000000000003f85c	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
000000000003f860	b	0x3f86c
000000000003f864	mov	x0, x24
000000000003f868	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000003f86c	brk	#0x1
000000000003f870	mov	x22, x0
000000000003f874	cbz	x27, 0x3f910
000000000003f878	mov	x0, x27
000000000003f87c	b	0x3f90c
000000000003f880	bl	___clang_call_terminate
000000000003f884	mov	x22, x0
000000000003f888	cbz	x27, 0x3f960
000000000003f88c	ldaxr	w8, [x24]
000000000003f890	stlxr	w9, w25, [x24]
000000000003f894	cbnz	w9, 0x3f88c
000000000003f898	cbnz	w25, 0x3f960
000000000003f89c	cmp	w8, #0x1
000000000003f8a0	b.ne	0x3f960
000000000003f8a4	adr	x8, #0x4719f
000000000003f8a8	nop
000000000003f8ac	ldarb	w8, [x8]
000000000003f8b0	tbz	w8, #0x0, 0x3f960
000000000003f8b4	mov	x0, x24
000000000003f8b8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003f8bc	b	0x3f960
000000000003f8c0	mov	x22, x0
000000000003f8c4	cbz	x25, 0x3f8f8
000000000003f8c8	ldaxr	w8, [x26]
000000000003f8cc	stlxr	w9, w23, [x26]
000000000003f8d0	cbnz	w9, 0x3f8c8
000000000003f8d4	cbnz	w23, 0x3f8f8
000000000003f8d8	cmp	w8, #0x1
000000000003f8dc	b.ne	0x3f8f8
000000000003f8e0	adr	x8, #0x47163
000000000003f8e4	nop
000000000003f8e8	ldarb	w8, [x8]
000000000003f8ec	tbz	w8, #0x0, 0x3f8f8
000000000003f8f0	mov	x0, x26
000000000003f8f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003f8f8	ldr	x0, [x24, #0x40]
000000000003f8fc	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
000000000003f900	mov	x0, x27
000000000003f904	bl	__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev
000000000003f908	mov	x0, x24
000000000003f90c	bl	0x51a64 ; symbol stub for: _free
000000000003f910	add	x0, sp, #0x48
000000000003f914	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000003f918	b	0x3f95c
000000000003f91c	mov	x19, x0
000000000003f920	cbz	x20, 0x3f934
000000000003f924	mov	x0, x20
000000000003f928	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000003f92c	mov	x0, x20
000000000003f930	bl	0x51a64 ; symbol stub for: _free
000000000003f934	mov	x0, x19
000000000003f938	bl	___clang_call_terminate
000000000003f93c	bl	___clang_call_terminate
000000000003f940	bl	___clang_call_terminate
000000000003f944	b	0x3f958
000000000003f948	mov	x22, x0
000000000003f94c	b	0x3f988
000000000003f950	b	0x3f958
000000000003f954	b	0x3f958
000000000003f958	mov	x22, x0
000000000003f95c	cbz	x20, 0x3f988
000000000003f960	ldaxr	w8, [x21]
000000000003f964	stlxr	w9, w19, [x21]
000000000003f968	cbnz	w9, 0x3f960
000000000003f96c	cbnz	w19, 0x3f988
000000000003f970	cmp	w8, #0x1
000000000003f974	b.ne	0x3f988
000000000003f978	adr	x8, #0x470cb
000000000003f97c	nop
000000000003f980	ldarb	w8, [x8]
000000000003f984	tbnz	w8, #0x0, 0x3f990
000000000003f988	mov	x0, x22
000000000003f98c	bl	___clang_call_terminate
000000000003f990	mov	x0, x21
000000000003f994	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003f998	mov	x0, x22
000000000003f99c	bl	___clang_call_terminate
__ZN12_GLOBAL__N_128Kotlin_deinitRuntimeCallbackEPv:
000000000003f9a0	sub	sp, sp, #0x80
000000000003f9a4	stp	x28, x27, [sp, #0x20]
000000000003f9a8	stp	x26, x25, [sp, #0x30]
000000000003f9ac	stp	x24, x23, [sp, #0x40]
000000000003f9b0	stp	x22, x21, [sp, #0x50]
000000000003f9b4	stp	x20, x19, [sp, #0x60]
000000000003f9b8	stp	x29, x30, [sp, #0x70]
000000000003f9bc	add	x29, sp, #0x70
000000000003f9c0	mov	x20, x0
000000000003f9c4	ldr	x8, [x0]
000000000003f9c8	add	x0, x8, #0x138
000000000003f9cc	ldaxr	w8, [x0]
000000000003f9d0	stlxr	w9, wzr, [x0]
000000000003f9d4	cbnz	w9, 0x3f9cc
000000000003f9d8	cmp	w8, #0x1
000000000003f9dc	b.ne	0x3f9f4
000000000003f9e0	adr	x8, #0x47063
000000000003f9e4	nop
000000000003f9e8	ldarb	w8, [x8]
000000000003f9ec	tbz	w8, #0x0, 0x3f9f4
000000000003f9f0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003f9f4	mov	w8, #0x2
000000000003f9f8	str	w8, [x20, #0x10]
000000000003f9fc	adrp	x19, 45 ; 0x6c000
000000000003fa00	add	x19, x19, #0xbf8
000000000003fa04	ldr	x24, [x19]
000000000003fa08	mov	x0, x19
000000000003fa0c	blr	x24
000000000003fa10	str	x20, [x0]
000000000003fa14	adr	x8, #0x4704c
000000000003fa18	nop
000000000003fa1c	ldaxr	w9, [x8]
000000000003fa20	sub	w9, w9, #0x1
000000000003fa24	stlxr	w10, w9, [x8]
000000000003fa28	cbnz	w10, 0x3fa1c
000000000003fa2c	ldr	x8, [x20]
000000000003fa30	ldr	x9, [x8, #0x48]
000000000003fa34	str	x9, [x8, #0x50]
000000000003fa38	mov	w9, #0x2
000000000003fa3c	str	w9, [x8, #0x88]
000000000003fa40	ldr	x21, [x20, #0x8]
000000000003fa44	ldrsw	x25, [x21]
000000000003fa48	adrp	x0, 45 ; 0x6c000
000000000003fa4c	add	x0, x0, #0xc10
000000000003fa50	ldr	x8, [x0]
000000000003fa54	blr	x8
000000000003fa58	str	xzr, [x0]
000000000003fa5c	bl	__ZN12_GLOBAL__N_18theStateEv
000000000003fa60	mov	x22, x0
000000000003fa64	ldr	x27, [x21, #0xd8]
000000000003fa68	str	x0, [sp, #0x8]
000000000003fa6c	mov	w8, #0x1
000000000003fa70	strb	w8, [sp, #0x10]
000000000003fa74	str	x27, [sp, #0x18]
000000000003fa78	add	x23, x27, #0x138
000000000003fa7c	ldaxr	w26, [x23]
000000000003fa80	stlxr	w9, w8, [x23]
000000000003fa84	cbnz	w9, 0x3fa7c
000000000003fa88	mov	x0, x22
000000000003fa8c	bl	0x51c8c ; symbol stub for: _pthread_mutex_lock
000000000003fa90	cbz	x27, 0x3fac4
000000000003fa94	ldaxr	w8, [x23]
000000000003fa98	stlxr	w9, w26, [x23]
000000000003fa9c	cbnz	w9, 0x3fa94
000000000003faa0	cbnz	w26, 0x3fac4
000000000003faa4	cmp	w8, #0x1
000000000003faa8	b.ne	0x3fac4
000000000003faac	adr	x8, #0x46f97
000000000003fab0	nop
000000000003fab4	ldarb	w8, [x8]
000000000003fab8	tbz	w8, #0x0, 0x3fac4
000000000003fabc	mov	x0, x23
000000000003fac0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003fac4	ldr	x9, [x22, #0xa0]
000000000003fac8	cbz	x9, 0x3fb6c
000000000003facc	ldrsw	x8, [x21]
000000000003fad0	fmov	d0, x9
000000000003fad4	cnt.8b	v0, v0
000000000003fad8	uaddlv.8b	h0, v0
000000000003fadc	fmov	w10, s0
000000000003fae0	cmp	x10, #0x1
000000000003fae4	b.hi	0x3faf4
000000000003fae8	sub	x11, x9, #0x1
000000000003faec	and	x13, x11, x8
000000000003faf0	b	0x3fb08
000000000003faf4	mov	x13, x8
000000000003faf8	cmp	x9, x8
000000000003fafc	b.hi	0x3fb08
000000000003fb00	udiv	x11, x8, x9
000000000003fb04	msub	x13, x11, x9, x8
000000000003fb08	ldr	x11, [x22, #0x98]
000000000003fb0c	ldr	x12, [x11, x13, lsl #3]
000000000003fb10	cbz	x12, 0x3fb6c
000000000003fb14	ldr	x0, [x12]
000000000003fb18	cbz	x0, 0x3fb6c
000000000003fb1c	sub	x12, x9, #0x1
000000000003fb20	b	0x3fb38
000000000003fb24	ldr	w14, [x0, #0x10]
000000000003fb28	cmp	w14, w8
000000000003fb2c	b.eq	0x3fc6c
000000000003fb30	ldr	x0, [x0]
000000000003fb34	cbz	x0, 0x3fb6c
000000000003fb38	ldr	x14, [x0, #0x8]
000000000003fb3c	cmp	x14, x8
000000000003fb40	b.eq	0x3fb24
000000000003fb44	cmp	x10, #0x1
000000000003fb48	b.hi	0x3fb54
000000000003fb4c	and	x14, x14, x12
000000000003fb50	b	0x3fb64
000000000003fb54	cmp	x14, x9
000000000003fb58	b.lo	0x3fb64
000000000003fb5c	udiv	x15, x14, x9
000000000003fb60	msub	x14, x15, x9, x14
000000000003fb64	cmp	x14, x13
000000000003fb68	b.eq	0x3fb30
000000000003fb6c	add	x0, sp, #0x8
000000000003fb70	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000003fb74	ldp	x8, x9, [x21, #0x10]
000000000003fb78	cmp	x9, x8
000000000003fb7c	b.eq	0x3fd7c
000000000003fb80	mov	x10, #0xa0a1
000000000003fb84	movk	x10, #0xa0a0, lsl #16
000000000003fb88	movk	x10, #0xa0a0, lsl #32
000000000003fb8c	movk	x10, #0xa0a0, lsl #48
000000000003fb90	ldp	x11, x12, [x21, #0x28]
000000000003fb94	umulh	x9, x11, x10
000000000003fb98	lsr	x9, x9, #6
000000000003fb9c	ldr	x13, [x8, x9, lsl #3]
000000000003fba0	mov	x14, #-0x66
000000000003fba4	madd	x15, x9, x14, x11
000000000003fba8	mov	w16, #0x28
000000000003fbac	madd	x23, x15, x16, x13
000000000003fbb0	add	x11, x12, x11
000000000003fbb4	umulh	x10, x11, x10
000000000003fbb8	lsr	x10, x10, #6
000000000003fbbc	ldr	x12, [x8, x10, lsl #3]
000000000003fbc0	madd	x10, x10, x14, x11
000000000003fbc4	madd	x26, x10, x16, x12
000000000003fbc8	cmp	x26, x23
000000000003fbcc	b.eq	0x3fd7c
000000000003fbd0	add	x27, x8, x9, lsl #3
000000000003fbd4	adr	x28, #0x129f8
000000000003fbd8	nop
000000000003fbdc	b	0x3fbe8
000000000003fbe0	cmp	x26, x23
000000000003fbe4	b.eq	0x3fd7c
000000000003fbe8	ldr	w9, [x23]
000000000003fbec	cmp	w9, #0x3
000000000003fbf0	b.hi	0x3fc50
000000000003fbf4	ldr	x8, [x23, #0x8]
000000000003fbf8	adr	x10, #0x10
000000000003fbfc	ldrh	w11, [x28, x9, lsl #1]
000000000003fc00	add	x10, x10, x11, lsl #2
000000000003fc04	br	x10
000000000003fc08	ldr	x1, [x21, #0xd8]
000000000003fc0c	mov	x0, x8
000000000003fc10	bl	__ZN12_GLOBAL__N_16Future14cancelUnlockedEP11MemoryState
000000000003fc14	b	0x3fc50
000000000003fc18	ldp	x1, x22, [x23, #0x10]
000000000003fc1c	cbz	x1, 0x3fc2c
000000000003fc20	ldr	x8, [x21, #0xd8]
000000000003fc24	add	x0, x8, #0x8
000000000003fc28	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000003fc2c	ldr	x1, [x21, #0xd8]
000000000003fc30	mov	x0, x22
000000000003fc34	bl	__ZN12_GLOBAL__N_16Future14cancelUnlockedEP11MemoryState
000000000003fc38	b	0x3fc50
000000000003fc3c	cbz	x8, 0x3fc50
000000000003fc40	ldr	x9, [x21, #0xd8]
000000000003fc44	add	x0, x9, #0x8
000000000003fc48	mov	x1, x8
000000000003fc4c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000003fc50	add	x23, x23, #0x28
000000000003fc54	ldr	x8, [x27]
000000000003fc58	sub	x8, x23, x8
000000000003fc5c	cmp	x8, #0xff0
000000000003fc60	b.ne	0x3fbe0
000000000003fc64	ldr	x23, [x27, #0x8]!
000000000003fc68	b	0x3fbe0
000000000003fc6c	cmp	x10, #0x1
000000000003fc70	b.hi	0x3fc7c
000000000003fc74	and	x8, x12, x8
000000000003fc78	b	0x3fc8c
000000000003fc7c	cmp	x9, x8
000000000003fc80	b.hi	0x3fc8c
000000000003fc84	udiv	x13, x8, x9
000000000003fc88	msub	x8, x13, x9, x8
000000000003fc8c	ldr	x14, [x11, x8, lsl #3]
000000000003fc90	mov	x13, x14
000000000003fc94	ldr	x14, [x14]
000000000003fc98	cmp	x14, x0
000000000003fc9c	b.ne	0x3fc90
000000000003fca0	add	x14, x22, #0xa8
000000000003fca4	cmp	x13, x14
000000000003fca8	b.eq	0x3fcd8
000000000003fcac	ldr	x14, [x13, #0x8]
000000000003fcb0	cmp	x10, #0x1
000000000003fcb4	b.hi	0x3fcc0
000000000003fcb8	and	x14, x14, x12
000000000003fcbc	b	0x3fcd0
000000000003fcc0	cmp	x14, x9
000000000003fcc4	b.lo	0x3fcd0
000000000003fcc8	udiv	x15, x14, x9
000000000003fccc	msub	x14, x15, x9, x14
000000000003fcd0	cmp	x14, x8
000000000003fcd4	b.eq	0x3fd10
000000000003fcd8	ldr	x14, [x0]
000000000003fcdc	cbz	x14, 0x3fd0c
000000000003fce0	ldr	x14, [x14, #0x8]
000000000003fce4	cmp	x10, #0x1
000000000003fce8	b.hi	0x3fcf4
000000000003fcec	and	x14, x14, x12
000000000003fcf0	b	0x3fd04
000000000003fcf4	cmp	x14, x9
000000000003fcf8	b.lo	0x3fd04
000000000003fcfc	udiv	x15, x14, x9
000000000003fd00	msub	x14, x15, x9, x14
000000000003fd04	cmp	x14, x8
000000000003fd08	b.eq	0x3fd10
000000000003fd0c	str	xzr, [x11, x8, lsl #3]
000000000003fd10	ldr	x11, [x0]
000000000003fd14	cbz	x11, 0x3fd50
000000000003fd18	ldr	x14, [x11, #0x8]
000000000003fd1c	cmp	x10, #0x1
000000000003fd20	b.hi	0x3fd2c
000000000003fd24	and	x14, x14, x12
000000000003fd28	b	0x3fd3c
000000000003fd2c	cmp	x14, x9
000000000003fd30	b.lo	0x3fd3c
000000000003fd34	udiv	x10, x14, x9
000000000003fd38	msub	x14, x10, x9, x14
000000000003fd3c	cmp	x14, x8
000000000003fd40	b.eq	0x3fd50
000000000003fd44	ldr	x8, [x22, #0x98]
000000000003fd48	str	x13, [x8, x14, lsl #3]
000000000003fd4c	ldr	x11, [x0]
000000000003fd50	str	x11, [x13]
000000000003fd54	str	xzr, [x0]
000000000003fd58	ldr	x8, [x22, #0xb0]
000000000003fd5c	sub	x8, x8, #0x1
000000000003fd60	str	x8, [x22, #0xb0]
000000000003fd64	bl	0x51a64 ; symbol stub for: _free
000000000003fd68	add	x0, sp, #0x8
000000000003fd6c	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000003fd70	ldp	x8, x9, [x21, #0x10]
000000000003fd74	cmp	x9, x8
000000000003fd78	b.ne	0x3fb80
000000000003fd7c	ldr	x23, [x21, #0x38]
000000000003fd80	add	x22, x21, #0x40
000000000003fd84	b	0x3fd8c
000000000003fd88	mov	x23, x9
000000000003fd8c	cmp	x23, x22
000000000003fd90	b.eq	0x3fdf0
000000000003fd94	ldr	x1, [x23, #0x28]
000000000003fd98	cbz	x1, 0x3fda8
000000000003fd9c	ldr	x8, [x21, #0xd8]
000000000003fda0	add	x0, x8, #0x8
000000000003fda4	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000003fda8	ldr	x8, [x23, #0x8]
000000000003fdac	cbz	x8, 0x3fdc0
000000000003fdb0	mov	x23, x8
000000000003fdb4	ldr	x8, [x8]
000000000003fdb8	cbnz	x8, 0x3fdb0
000000000003fdbc	b	0x3fd8c
000000000003fdc0	mov	x8, x23
000000000003fdc4	ldr	x9, [x8, #0x10]!
000000000003fdc8	ldr	x10, [x9]
000000000003fdcc	cmp	x10, x23
000000000003fdd0	b.eq	0x3fd88
000000000003fdd4	ldr	x9, [x8]
000000000003fdd8	mov	x8, x9
000000000003fddc	ldr	x23, [x8, #0x10]!
000000000003fde0	ldr	x10, [x23]
000000000003fde4	cmp	x10, x9
000000000003fde8	b.ne	0x3fdd4
000000000003fdec	b	0x3fd8c
000000000003fdf0	ldr	x1, [x21, #0x50]
000000000003fdf4	cbz	x1, 0x3fe04
000000000003fdf8	ldr	x8, [x21, #0xd8]
000000000003fdfc	add	x0, x8, #0x8
000000000003fe00	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000003fe04	ldr	x26, [x21, #0xd8]
000000000003fe08	add	x22, x26, #0x138
000000000003fe0c	mov	w8, #0x1
000000000003fe10	ldaxr	w23, [x22]
000000000003fe14	stlxr	w9, w8, [x22]
000000000003fe18	cbnz	w9, 0x3fe10
000000000003fe1c	add	x0, x21, #0x58
000000000003fe20	bl	0x51c74 ; symbol stub for: _pthread_mutex_destroy
000000000003fe24	add	x0, x21, #0x98
000000000003fe28	bl	0x51c14 ; symbol stub for: _pthread_cond_destroy
000000000003fe2c	cbz	x26, 0x3fe60
000000000003fe30	ldaxr	w8, [x22]
000000000003fe34	stlxr	w9, w23, [x22]
000000000003fe38	cbnz	w9, 0x3fe30
000000000003fe3c	cbnz	w23, 0x3fe60
000000000003fe40	cmp	w8, #0x1
000000000003fe44	b.ne	0x3fe60
000000000003fe48	adr	x8, #0x46bfb
000000000003fe4c	nop
000000000003fe50	ldarb	w8, [x8]
000000000003fe54	tbz	w8, #0x0, 0x3fe60
000000000003fe58	mov	x0, x22
000000000003fe5c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003fe60	add	x22, x21, #0x8
000000000003fe64	ldr	x0, [x21, #0x40]
000000000003fe68	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
000000000003fe6c	mov	x0, x22
000000000003fe70	bl	__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev
000000000003fe74	mov	x0, x21
000000000003fe78	bl	0x51a64 ; symbol stub for: _free
000000000003fe7c	ldr	x8, [x20]
000000000003fe80	add	x8, x8, #0x138
000000000003fe84	mov	w9, #0x1
000000000003fe88	ldaxr	wzr, [x8]
000000000003fe8c	stlxr	w10, w9, [x8]
000000000003fe90	cbnz	w10, 0x3fe88
000000000003fe94	ldr	x21, [x20]
000000000003fe98	nop
000000000003fe9c	ldr	x0, #0x46e0c
000000000003fea0	cbz	x0, 0x3feac
000000000003fea4	bl	0x51c50 ; symbol stub for: _pthread_getspecific
000000000003fea8	cbz	x0, 0x3fec0
000000000003feac	adrp	x0, 45 ; 0x6c000
000000000003feb0	add	x0, x0, #0xbb0
000000000003feb4	ldr	x8, [x0]
000000000003feb8	blr	x8
000000000003febc	str	xzr, [x0]
000000000003fec0	adr	x0, #0x46e80
000000000003fec4	nop
000000000003fec8	bl	0x5180c ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
000000000003fecc	adr	x9, #0x46e64
000000000003fed0	nop
000000000003fed4	ldp	x8, x9, [x9]
000000000003fed8	cmp	x9, x21
000000000003fedc	b.eq	0x3ff3c
000000000003fee0	cmp	x8, x21
000000000003fee4	b.eq	0x3ff50
000000000003fee8	ldr	x23, [x21, #0x158]
000000000003feec	ldr	x22, [x23, #0x150]
000000000003fef0	str	xzr, [x23, #0x150]
000000000003fef4	ldr	x8, [x21, #0x150]
000000000003fef8	str	xzr, [x21, #0x150]
000000000003fefc	ldr	x21, [x23, #0x150]
000000000003ff00	str	x8, [x23, #0x150]
000000000003ff04	cbz	x21, 0x3ff1c
000000000003ff08	mov	x0, x21
000000000003ff0c	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000003ff10	mov	x0, x21
000000000003ff14	bl	0x51a64 ; symbol stub for: _free
000000000003ff18	ldr	x8, [x23, #0x150]
000000000003ff1c	cbz	x8, 0x3ff24
000000000003ff20	str	x23, [x8, #0x158]
000000000003ff24	cbz	x22, 0x3ff80
000000000003ff28	mov	x0, x22
000000000003ff2c	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000003ff30	mov	x0, x22
000000000003ff34	bl	0x51a64 ; symbol stub for: _free
000000000003ff38	b	0x3ff80
000000000003ff3c	ldr	x9, [x21, #0x158]
000000000003ff40	adrp	x10, 71 ; 0x86000
000000000003ff44	str	x9, [x10, #0xd38]
000000000003ff48	cmp	x8, x21
000000000003ff4c	b.ne	0x3fee8
000000000003ff50	ldr	x9, [x21, #0x150]
000000000003ff54	str	xzr, [x21, #0x150]
000000000003ff58	adrp	x22, 71 ; 0x86000
000000000003ff5c	str	x9, [x22, #0xd30]
000000000003ff60	cbz	x8, 0x3ff78
000000000003ff64	mov	x0, x21
000000000003ff68	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000003ff6c	mov	x0, x21
000000000003ff70	bl	0x51a64 ; symbol stub for: _free
000000000003ff74	ldr	x9, [x22, #0xd30]
000000000003ff78	cbz	x9, 0x3ff80
000000000003ff7c	str	xzr, [x9, #0x158]
000000000003ff80	adr	x0, #0x46dc0
000000000003ff84	nop
000000000003ff88	bl	0x51818 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000003ff8c	mov	x0, x20
000000000003ff90	bl	0x51a64 ; symbol stub for: _free
000000000003ff94	bl	__ZN12_GLOBAL__N_18theStateEv
000000000003ff98	mov	x20, x0
000000000003ff9c	str	x0, [sp, #0x8]
000000000003ffa0	strb	wzr, [sp, #0x10]
000000000003ffa4	str	xzr, [sp, #0x18]
000000000003ffa8	bl	0x51c8c ; symbol stub for: _pthread_mutex_lock
000000000003ffac	ldr	x8, [x20, #0xc8]
000000000003ffb0	cbz	x8, 0x40188
000000000003ffb4	fmov	d0, x8
000000000003ffb8	cnt.8b	v0, v0
000000000003ffbc	uaddlv.8b	h0, v0
000000000003ffc0	fmov	w9, s0
000000000003ffc4	cmp	x9, #0x1
000000000003ffc8	b.hi	0x3ffd8
000000000003ffcc	sub	x10, x8, #0x1
000000000003ffd0	and	x10, x10, x25
000000000003ffd4	b	0x3ffec
000000000003ffd8	mov	x10, x25
000000000003ffdc	cmp	x8, x25
000000000003ffe0	b.hi	0x3ffec
000000000003ffe4	udiv	x10, x25, x8
000000000003ffe8	msub	x10, x10, x8, x25
000000000003ffec	ldr	x11, [x20, #0xc0]
000000000003fff0	ldr	x11, [x11, x10, lsl #3]
000000000003fff4	cbz	x11, 0x40188
000000000003fff8	ldr	x21, [x11]
000000000003fffc	cbz	x21, 0x40188
0000000000040000	sub	x11, x8, #0x1
0000000000040004	b	0x4001c
0000000000040008	ldr	w12, [x21, #0x10]
000000000004000c	cmp	w12, w25
0000000000040010	b.eq	0x40054
0000000000040014	ldr	x21, [x21]
0000000000040018	cbz	x21, 0x40188
000000000004001c	ldr	x12, [x21, #0x8]
0000000000040020	cmp	x12, x25
0000000000040024	b.eq	0x40008
0000000000040028	cmp	x9, #0x1
000000000004002c	b.hi	0x40038
0000000000040030	and	x12, x12, x11
0000000000040034	b	0x40048
0000000000040038	cmp	x12, x8
000000000004003c	b.lo	0x40048
0000000000040040	udiv	x13, x12, x8
0000000000040044	msub	x12, x13, x8, x12
0000000000040048	cmp	x12, x10
000000000004004c	b.eq	0x40014
0000000000040050	b	0x40188
0000000000040054	ldr	x0, [x21, #0x18]
0000000000040058	bl	0x51c44 ; symbol stub for: _pthread_detach
000000000004005c	ldr	x9, [x20, #0xc8]
0000000000040060	ldr	x8, [x21, #0x8]
0000000000040064	fmov	d0, x9
0000000000040068	cnt.8b	v0, v0
000000000004006c	uaddlv.8b	h0, v0
0000000000040070	fmov	w11, s0
0000000000040074	cmp	x11, #0x1
0000000000040078	b.hi	0x40088
000000000004007c	sub	x10, x9, #0x1
0000000000040080	and	x8, x10, x8
0000000000040084	b	0x40098
0000000000040088	cmp	x8, x9
000000000004008c	b.lo	0x40098
0000000000040090	udiv	x10, x8, x9
0000000000040094	msub	x8, x10, x9, x8
0000000000040098	ldr	x12, [x20, #0xc0]
000000000004009c	ldr	x13, [x12, x8, lsl #3]
00000000000400a0	mov	x10, x13
00000000000400a4	ldr	x13, [x13]
00000000000400a8	cmp	x13, x21
00000000000400ac	b.ne	0x400a0
00000000000400b0	add	x13, x20, #0xd0
00000000000400b4	cmp	x10, x13
00000000000400b8	b.eq	0x400ec
00000000000400bc	ldr	x13, [x10, #0x8]
00000000000400c0	cmp	x11, #0x1
00000000000400c4	b.hi	0x400d4
00000000000400c8	sub	x14, x9, #0x1
00000000000400cc	and	x13, x13, x14
00000000000400d0	b	0x400e4
00000000000400d4	cmp	x13, x9
00000000000400d8	b.lo	0x400e4
00000000000400dc	udiv	x14, x13, x9
00000000000400e0	msub	x13, x14, x9, x13
00000000000400e4	cmp	x13, x8
00000000000400e8	b.eq	0x40128
00000000000400ec	ldr	x13, [x21]
00000000000400f0	cbz	x13, 0x40124
00000000000400f4	ldr	x13, [x13, #0x8]
00000000000400f8	cmp	x11, #0x1
00000000000400fc	b.hi	0x4010c
0000000000040100	sub	x14, x9, #0x1
0000000000040104	and	x13, x13, x14
0000000000040108	b	0x4011c
000000000004010c	cmp	x13, x9
0000000000040110	b.lo	0x4011c
0000000000040114	udiv	x14, x13, x9
0000000000040118	msub	x13, x14, x9, x13
000000000004011c	cmp	x13, x8
0000000000040120	b.eq	0x40128
0000000000040124	str	xzr, [x12, x8, lsl #3]
0000000000040128	ldr	x12, [x21]
000000000004012c	cbz	x12, 0x4016c
0000000000040130	ldr	x13, [x12, #0x8]
0000000000040134	cmp	x11, #0x1
0000000000040138	b.hi	0x40148
000000000004013c	sub	x9, x9, #0x1
0000000000040140	and	x13, x13, x9
0000000000040144	b	0x40158
0000000000040148	cmp	x13, x9
000000000004014c	b.lo	0x40158
0000000000040150	udiv	x11, x13, x9
0000000000040154	msub	x13, x11, x9, x13
0000000000040158	cmp	x13, x8
000000000004015c	b.eq	0x4016c
0000000000040160	ldr	x8, [x20, #0xc0]
0000000000040164	str	x10, [x8, x13, lsl #3]
0000000000040168	ldr	x12, [x21]
000000000004016c	str	x12, [x10]
0000000000040170	str	xzr, [x21]
0000000000040174	ldr	x8, [x20, #0xd8]
0000000000040178	sub	x8, x8, #0x1
000000000004017c	str	x8, [x20, #0xd8]
0000000000040180	mov	x0, x21
0000000000040184	bl	0x51a64 ; symbol stub for: _free
0000000000040188	add	x0, sp, #0x8
000000000004018c	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000040190	mov	x0, x19
0000000000040194	blr	x24
0000000000040198	str	xzr, [x0]
000000000004019c	ldp	x29, x30, [sp, #0x70]
00000000000401a0	ldp	x20, x19, [sp, #0x60]
00000000000401a4	ldp	x22, x21, [sp, #0x50]
00000000000401a8	ldp	x24, x23, [sp, #0x40]
00000000000401ac	ldp	x26, x25, [sp, #0x30]
00000000000401b0	ldp	x28, x27, [sp, #0x20]
00000000000401b4	add	sp, sp, #0x80
00000000000401b8	ret
00000000000401bc	adr	x2, #0x167e5 ; literal pool for: "Cannot be in queue"
00000000000401c0	nop
00000000000401c4	mov	w0, #0x0
00000000000401c8	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
00000000000401cc	brk	#0x1
00000000000401d0	mov	x19, x0
00000000000401d4	add	x0, sp, #0x8
00000000000401d8	bl	__ZN12_GLOBAL__N_16LockerD1Ev
00000000000401dc	mov	x0, x19
00000000000401e0	bl	0x517a0 ; symbol stub for: __Unwind_Resume
00000000000401e4	bl	___clang_call_terminate
00000000000401e8	mov	x19, x0
00000000000401ec	cbz	x27, 0x40220
00000000000401f0	ldaxr	w8, [x23]
00000000000401f4	stlxr	w9, w26, [x23]
00000000000401f8	cbnz	w9, 0x401f0
00000000000401fc	cbnz	w26, 0x40220
0000000000040200	cmp	w8, #0x1
0000000000040204	b.ne	0x40220
0000000000040208	adr	x8, #0x4683b
000000000004020c	nop
0000000000040210	ldarb	w8, [x8]
0000000000040214	tbz	w8, #0x0, 0x40220
0000000000040218	mov	x0, x23
000000000004021c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040220	mov	x0, x19
0000000000040224	bl	0x517a0 ; symbol stub for: __Unwind_Resume
0000000000040228	mov	x19, x0
000000000004022c	cbz	x26, 0x4026c
0000000000040230	ldaxr	w8, [x22]
0000000000040234	stlxr	w9, w23, [x22]
0000000000040238	cbnz	w9, 0x40230
000000000004023c	cbnz	w23, 0x4026c
0000000000040240	cmp	w8, #0x1
0000000000040244	b.ne	0x4026c
0000000000040248	adr	x8, #0x467fb
000000000004024c	nop
0000000000040250	ldarb	w8, [x8]
0000000000040254	tbz	w8, #0x0, 0x4026c
0000000000040258	mov	x0, x22
000000000004025c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040260	b	0x4026c
0000000000040264	b	0x40268
0000000000040268	mov	x19, x0
000000000004026c	add	x0, x21, #0x38
0000000000040270	bl	__ZNSt3__18multisetIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEED1Ev
0000000000040274	add	x0, x21, #0x8
0000000000040278	bl	__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev
000000000004027c	mov	x0, x19
0000000000040280	bl	___clang_call_terminate
__ZN5konanL16onThreadExitInitEv:
0000000000040284	adr	x0, #0x46a24
0000000000040288	nop
000000000004028c	adr	x1, #0xc
0000000000040290	nop
0000000000040294	b	0x51c5c ; symbol stub for: _pthread_key_create
__ZN5konanL20onThreadExitCallbackEPv:
0000000000040298	stp	x20, x19, [sp, #-0x20]!
000000000004029c	stp	x29, x30, [sp, #0x10]
00000000000402a0	add	x29, sp, #0x10
00000000000402a4	mov	x19, x0
00000000000402a8	nop
00000000000402ac	ldr	x0, #0x469fc
00000000000402b0	mov	x1, #0x0
00000000000402b4	bl	0x51cc8 ; symbol stub for: _pthread_setspecific
00000000000402b8	cbz	x19, 0x402d8
00000000000402bc	ldp	x8, x0, [x19, #0x8]
00000000000402c0	blr	x8
00000000000402c4	ldr	x20, [x19]
00000000000402c8	mov	x0, x19
00000000000402cc	bl	0x51a64 ; symbol stub for: _free
00000000000402d0	mov	x19, x20
00000000000402d4	cbnz	x20, 0x402bc
00000000000402d8	ldp	x29, x30, [sp, #0x10]
00000000000402dc	ldp	x20, x19, [sp], #0x20
00000000000402e0	ret
__ZN12_GLOBAL__N_18theStateEv:
00000000000402e4	sub	sp, sp, #0x70
00000000000402e8	stp	x28, x27, [sp, #0x10]
00000000000402ec	stp	x26, x25, [sp, #0x20]
00000000000402f0	stp	x24, x23, [sp, #0x30]
00000000000402f4	stp	x22, x21, [sp, #0x40]
00000000000402f8	stp	x20, x19, [sp, #0x50]
00000000000402fc	stp	x29, x30, [sp, #0x60]
0000000000040300	add	x29, sp, #0x60
0000000000040304	adrp	x25, 70 ; 0x86000
0000000000040308	ldr	x20, [x25, #0xcb8]
000000000004030c	cbnz	x20, 0x4050c
0000000000040310	mov	w0, #0x1
0000000000040314	mov	w1, #0xf8
0000000000040318	bl	0x519e0 ; symbol stub for: _calloc
000000000004031c	mov	x19, x0
0000000000040320	adrp	x21, 44 ; 0x6c000
0000000000040324	add	x21, x21, #0xbb0
0000000000040328	cbz	x0, 0x403dc
000000000004032c	movi.16b	v0, #0x0
0000000000040330	mov	x22, x19
0000000000040334	stp	q0, q0, [x22, #0x70]!
0000000000040338	mov	w8, #0x3f800000
000000000004033c	str	w8, [x22, #0x20]
0000000000040340	mov	x23, x22
0000000000040344	str	q0, [x23, #0x28]!
0000000000040348	stur	q0, [x22, #0x38]
000000000004034c	str	w8, [x22, #0x48]
0000000000040350	mov	x24, x22
0000000000040354	str	q0, [x24, #0x50]!
0000000000040358	str	q0, [x22, #0x60]
000000000004035c	str	w8, [x22, #0x70]
0000000000040360	ldr	x8, [x21]
0000000000040364	mov	x0, x21
0000000000040368	blr	x8
000000000004036c	ldr	x27, [x0]
0000000000040370	add	x20, x27, #0x138
0000000000040374	mov	w8, #0x1
0000000000040378	ldaxr	w26, [x20]
000000000004037c	stlxr	w9, w8, [x20]
0000000000040380	cbnz	w9, 0x40378
0000000000040384	mov	x0, x19
0000000000040388	mov	x1, #0x0
000000000004038c	bl	0x51c80 ; symbol stub for: _pthread_mutex_init
0000000000040390	add	x0, x19, #0x40
0000000000040394	mov	x1, #0x0
0000000000040398	bl	0x51c20 ; symbol stub for: _pthread_cond_init
000000000004039c	movi.2s	v0, #0x1
00000000000403a0	str	d0, [x19, #0xe8]
00000000000403a4	str	wzr, [x19, #0xf0]
00000000000403a8	cbz	x27, 0x403dc
00000000000403ac	ldaxr	w8, [x20]
00000000000403b0	stlxr	w9, w26, [x20]
00000000000403b4	cbnz	w9, 0x403ac
00000000000403b8	cbnz	w26, 0x403dc
00000000000403bc	cmp	w8, #0x1
00000000000403c0	b.ne	0x403dc
00000000000403c4	adr	x8, #0x4667f
00000000000403c8	nop
00000000000403cc	ldarb	w8, [x8]
00000000000403d0	tbz	w8, #0x0, 0x403dc
00000000000403d4	mov	x0, x20
00000000000403d8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000403dc	adr	x8, #0x468dc
00000000000403e0	nop
00000000000403e4	ldaxr	x20, [x8]
00000000000403e8	cbnz	x20, 0x404fc
00000000000403ec	stlxr	w9, x19, [x8]
00000000000403f0	cbnz	w9, 0x403e4
00000000000403f4	mov	w8, #0x1
00000000000403f8	tbnz	w8, #0x0, 0x40508
00000000000403fc	ldr	x8, [x21]
0000000000040400	mov	x0, x21
0000000000040404	blr	x8
0000000000040408	ldr	x8, [x0]
000000000004040c	str	x8, [sp]
0000000000040410	strb	wzr, [sp, #0xc]
0000000000040414	add	x8, x8, #0x138
0000000000040418	mov	w9, #0x1
000000000004041c	ldaxr	w10, [x8]
0000000000040420	stlxr	w11, w9, [x8]
0000000000040424	cbnz	w11, 0x4041c
0000000000040428	str	w10, [sp, #0x8]
000000000004042c	mov	x0, x19
0000000000040430	bl	0x51c74 ; symbol stub for: _pthread_mutex_destroy
0000000000040434	add	x0, x19, #0x40
0000000000040438	bl	0x51c14 ; symbol stub for: _pthread_cond_destroy
000000000004043c	ldr	x9, [sp]
0000000000040440	cbz	x9, 0x40478
0000000000040444	ldr	w8, [sp, #0x8]
0000000000040448	add	x0, x9, #0x138
000000000004044c	ldaxr	w9, [x0]
0000000000040450	stlxr	w10, w8, [x0]
0000000000040454	cbnz	w10, 0x4044c
0000000000040458	cbnz	w8, 0x40478
000000000004045c	cmp	w9, #0x1
0000000000040460	b.ne	0x40478
0000000000040464	adr	x8, #0x465df
0000000000040468	nop
000000000004046c	ldarb	w8, [x8]
0000000000040470	tbz	w8, #0x0, 0x40478
0000000000040474	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040478	ldr	x0, [x19, #0xd0]
000000000004047c	cbz	x0, 0x40490
0000000000040480	ldr	x21, [x0]
0000000000040484	bl	0x51a64 ; symbol stub for: _free
0000000000040488	mov	x0, x21
000000000004048c	cbnz	x21, 0x40480
0000000000040490	ldr	x0, [x19, #0xc0]
0000000000040494	str	xzr, [x19, #0xc0]
0000000000040498	cbz	x0, 0x404a0
000000000004049c	bl	0x51a64 ; symbol stub for: _free
00000000000404a0	ldr	x0, [x19, #0xa8]
00000000000404a4	cbz	x0, 0x404b8
00000000000404a8	ldr	x21, [x0]
00000000000404ac	bl	0x51a64 ; symbol stub for: _free
00000000000404b0	mov	x0, x21
00000000000404b4	cbnz	x21, 0x404a8
00000000000404b8	ldr	x0, [x19, #0x98]
00000000000404bc	str	xzr, [x19, #0x98]
00000000000404c0	cbz	x0, 0x404c8
00000000000404c4	bl	0x51a64 ; symbol stub for: _free
00000000000404c8	ldr	x0, [x19, #0x80]
00000000000404cc	cbz	x0, 0x404e0
00000000000404d0	ldr	x21, [x0]
00000000000404d4	bl	0x51a64 ; symbol stub for: _free
00000000000404d8	mov	x0, x21
00000000000404dc	cbnz	x21, 0x404d0
00000000000404e0	ldr	x0, [x19, #0x70]
00000000000404e4	str	xzr, [x19, #0x70]
00000000000404e8	cbz	x0, 0x404f0
00000000000404ec	bl	0x51a64 ; symbol stub for: _free
00000000000404f0	mov	x0, x19
00000000000404f4	bl	0x51a64 ; symbol stub for: _free
00000000000404f8	b	0x4050c
00000000000404fc	mov	w8, #0x0
0000000000040500	clrex
0000000000040504	tbz	w8, #0x0, 0x403fc
0000000000040508	ldr	x20, [x25, #0xcb8]
000000000004050c	mov	x0, x20
0000000000040510	ldp	x29, x30, [sp, #0x60]
0000000000040514	ldp	x20, x19, [sp, #0x50]
0000000000040518	ldp	x22, x21, [sp, #0x40]
000000000004051c	ldp	x24, x23, [sp, #0x30]
0000000000040520	ldp	x26, x25, [sp, #0x20]
0000000000040524	ldp	x28, x27, [sp, #0x10]
0000000000040528	add	sp, sp, #0x70
000000000004052c	ret
0000000000040530	mov	x20, x0
0000000000040534	mov	x0, sp
0000000000040538	bl	__ZN6kotlin16ThreadStateGuardD1Ev
000000000004053c	add	x0, x19, #0xc0
0000000000040540	bl	__ZNSt3__113unordered_mapIiP17_opaque_pthread_tNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev
0000000000040544	add	x0, x19, #0x98
0000000000040548	bl	__ZNSt3__113unordered_mapIiP6WorkerNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev
000000000004054c	add	x0, x19, #0x70
0000000000040550	bl	__ZNSt3__113unordered_mapIiPN12_GLOBAL__N_16FutureENS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS3_EEEEED1Ev
0000000000040554	mov	x0, x20
0000000000040558	bl	___clang_call_terminate
000000000004055c	mov	x21, x0
0000000000040560	cbz	x27, 0x40594
0000000000040564	ldaxr	w8, [x20]
0000000000040568	stlxr	w9, w26, [x20]
000000000004056c	cbnz	w9, 0x40564
0000000000040570	cbnz	w26, 0x40594
0000000000040574	cmp	w8, #0x1
0000000000040578	b.ne	0x40594
000000000004057c	adr	x8, #0x464c7
0000000000040580	nop
0000000000040584	ldarb	w8, [x8]
0000000000040588	tbz	w8, #0x0, 0x40594
000000000004058c	mov	x0, x20
0000000000040590	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040594	mov	x0, x19
0000000000040598	mov	x1, x24
000000000004059c	mov	x2, x23
00000000000405a0	mov	x3, x22
00000000000405a4	bl	__ZN12_GLOBAL__N_18theStateEv.cold.1
00000000000405a8	mov	x0, x19
00000000000405ac	bl	0x51a64 ; symbol stub for: _free
00000000000405b0	mov	x0, x21
00000000000405b4	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZN12_GLOBAL__N_16LockerD1Ev:
00000000000405b8	stp	x22, x21, [sp, #-0x30]!
00000000000405bc	stp	x20, x19, [sp, #0x10]
00000000000405c0	stp	x29, x30, [sp, #0x20]
00000000000405c4	add	x29, sp, #0x20
00000000000405c8	mov	x19, x0
00000000000405cc	ldrb	w8, [x0, #0x8]
00000000000405d0	cbz	w8, 0x405f4
00000000000405d4	ldr	x20, [x19, #0x10]
00000000000405d8	cbz	x20, 0x40600
00000000000405dc	add	x8, x20, #0x138
00000000000405e0	mov	w9, #0x1
00000000000405e4	ldaxr	w21, [x8]
00000000000405e8	stlxr	w10, w9, [x8]
00000000000405ec	cbnz	w10, 0x405e4
00000000000405f0	b	0x40628
00000000000405f4	mov	x20, #0x0
00000000000405f8	mov	w21, #0x1
00000000000405fc	b	0x40628
0000000000040600	adrp	x0, 44 ; 0x6c000
0000000000040604	add	x0, x0, #0xbb0
0000000000040608	ldr	x8, [x0]
000000000004060c	blr	x8
0000000000040610	ldr	x20, [x0]
0000000000040614	add	x8, x20, #0x138
0000000000040618	mov	w9, #0x1
000000000004061c	ldaxr	w21, [x8]
0000000000040620	stlxr	w10, w9, [x8]
0000000000040624	cbnz	w10, 0x4061c
0000000000040628	ldr	x0, [x19]
000000000004062c	bl	0x51c98 ; symbol stub for: _pthread_mutex_unlock
0000000000040630	cbz	x20, 0x40664
0000000000040634	add	x0, x20, #0x138
0000000000040638	ldaxr	w8, [x0]
000000000004063c	stlxr	w9, w21, [x0]
0000000000040640	cbnz	w9, 0x40638
0000000000040644	cbnz	w21, 0x40664
0000000000040648	cmp	w8, #0x1
000000000004064c	b.ne	0x40664
0000000000040650	adr	x8, #0x463f3
0000000000040654	nop
0000000000040658	ldarb	w8, [x8]
000000000004065c	tbz	w8, #0x0, 0x40664
0000000000040660	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040664	mov	x0, x19
0000000000040668	ldp	x29, x30, [sp, #0x20]
000000000004066c	ldp	x20, x19, [sp, #0x10]
0000000000040670	ldp	x22, x21, [sp], #0x30
0000000000040674	ret
0000000000040678	mov	x19, x0
000000000004067c	cbz	x20, 0x406b0
0000000000040680	add	x0, x20, #0x138
0000000000040684	ldaxr	w8, [x0]
0000000000040688	stlxr	w9, w21, [x0]
000000000004068c	cbnz	w9, 0x40684
0000000000040690	cbnz	w21, 0x406b0
0000000000040694	cmp	w8, #0x1
0000000000040698	b.ne	0x406b0
000000000004069c	adr	x8, #0x463a7
00000000000406a0	nop
00000000000406a4	ldarb	w8, [x8]
00000000000406a8	tbz	w8, #0x0, 0x406b0
00000000000406ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000406b0	mov	x0, x19
00000000000406b4	bl	___clang_call_terminate
__ZNSt3__113unordered_mapIiP17_opaque_pthread_tNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev:
00000000000406b8	stp	x20, x19, [sp, #-0x20]!
00000000000406bc	stp	x29, x30, [sp, #0x10]
00000000000406c0	add	x29, sp, #0x10
00000000000406c4	mov	x19, x0
00000000000406c8	ldr	x0, [x0, #0x10]
00000000000406cc	cbz	x0, 0x406e0
00000000000406d0	ldr	x20, [x0]
00000000000406d4	bl	0x51a64 ; symbol stub for: _free
00000000000406d8	mov	x0, x20
00000000000406dc	cbnz	x20, 0x406d0
00000000000406e0	ldr	x0, [x19]
00000000000406e4	str	xzr, [x19]
00000000000406e8	cbz	x0, 0x406f0
00000000000406ec	bl	0x51a64 ; symbol stub for: _free
00000000000406f0	mov	x0, x19
00000000000406f4	ldp	x29, x30, [sp, #0x10]
00000000000406f8	ldp	x20, x19, [sp], #0x20
00000000000406fc	ret
__ZNSt3__113unordered_mapIiP6WorkerNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev:
0000000000040700	stp	x20, x19, [sp, #-0x20]!
0000000000040704	stp	x29, x30, [sp, #0x10]
0000000000040708	add	x29, sp, #0x10
000000000004070c	mov	x19, x0
0000000000040710	ldr	x0, [x0, #0x10]
0000000000040714	cbz	x0, 0x40728
0000000000040718	ldr	x20, [x0]
000000000004071c	bl	0x51a64 ; symbol stub for: _free
0000000000040720	mov	x0, x20
0000000000040724	cbnz	x20, 0x40718
0000000000040728	ldr	x0, [x19]
000000000004072c	str	xzr, [x19]
0000000000040730	cbz	x0, 0x40738
0000000000040734	bl	0x51a64 ; symbol stub for: _free
0000000000040738	mov	x0, x19
000000000004073c	ldp	x29, x30, [sp, #0x10]
0000000000040740	ldp	x20, x19, [sp], #0x20
0000000000040744	ret
__ZNSt3__113unordered_mapIiPN12_GLOBAL__N_16FutureENS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS3_EEEEED1Ev:
0000000000040748	stp	x20, x19, [sp, #-0x20]!
000000000004074c	stp	x29, x30, [sp, #0x10]
0000000000040750	add	x29, sp, #0x10
0000000000040754	mov	x19, x0
0000000000040758	ldr	x0, [x0, #0x10]
000000000004075c	cbz	x0, 0x40770
0000000000040760	ldr	x20, [x0]
0000000000040764	bl	0x51a64 ; symbol stub for: _free
0000000000040768	mov	x0, x20
000000000004076c	cbnz	x20, 0x40760
0000000000040770	ldr	x0, [x19]
0000000000040774	str	xzr, [x19]
0000000000040778	cbz	x0, 0x40780
000000000004077c	bl	0x51a64 ; symbol stub for: _free
0000000000040780	mov	x0, x19
0000000000040784	ldp	x29, x30, [sp, #0x10]
0000000000040788	ldp	x20, x19, [sp], #0x20
000000000004078c	ret
__ZN12_GLOBAL__N_16Future14cancelUnlockedEP11MemoryState:
0000000000040790	sub	sp, sp, #0x60
0000000000040794	stp	x24, x23, [sp, #0x20]
0000000000040798	stp	x22, x21, [sp, #0x30]
000000000004079c	stp	x20, x19, [sp, #0x40]
00000000000407a0	stp	x29, x30, [sp, #0x50]
00000000000407a4	add	x29, sp, #0x50
00000000000407a8	mov	x20, x1
00000000000407ac	mov	x21, x0
00000000000407b0	add	x19, x1, #0x138
00000000000407b4	mov	w8, #0x1
00000000000407b8	ldaxr	w22, [x19]
00000000000407bc	stlxr	w9, w8, [x19]
00000000000407c0	cbnz	w9, 0x407b8
00000000000407c4	add	x0, x21, #0x10
00000000000407c8	str	x0, [sp, #0x8]
00000000000407cc	mov	w8, #0x1
00000000000407d0	strb	w8, [sp, #0x10]
00000000000407d4	str	x20, [sp, #0x18]
00000000000407d8	ldaxr	w23, [x19]
00000000000407dc	stlxr	w9, w8, [x19]
00000000000407e0	cbnz	w9, 0x407d8
00000000000407e4	bl	0x51c8c ; symbol stub for: _pthread_mutex_lock
00000000000407e8	cbz	x20, 0x4081c
00000000000407ec	ldaxr	w8, [x19]
00000000000407f0	stlxr	w9, w23, [x19]
00000000000407f4	cbnz	w9, 0x407ec
00000000000407f8	cbnz	w23, 0x4081c
00000000000407fc	cmp	w8, #0x1
0000000000040800	b.ne	0x4081c
0000000000040804	adr	x8, #0x4623f
0000000000040808	nop
000000000004080c	ldarb	w8, [x8]
0000000000040810	tbz	w8, #0x0, 0x4081c
0000000000040814	mov	x0, x19
0000000000040818	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004081c	mov	w8, #0x3
0000000000040820	str	w8, [x21]
0000000000040824	str	xzr, [x21, #0x8]
0000000000040828	add	x0, x21, #0x50
000000000004082c	bl	0x51c08 ; symbol stub for: _pthread_cond_broadcast
0000000000040830	add	x0, sp, #0x8
0000000000040834	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000040838	bl	__ZN12_GLOBAL__N_18theStateEv
000000000004083c	mov	x21, x0
0000000000040840	str	x0, [sp, #0x8]
0000000000040844	mov	w8, #0x1
0000000000040848	strb	w8, [sp, #0x10]
000000000004084c	str	x20, [sp, #0x18]
0000000000040850	ldaxr	w23, [x19]
0000000000040854	stlxr	w9, w8, [x19]
0000000000040858	cbnz	w9, 0x40850
000000000004085c	mov	x0, x21
0000000000040860	bl	0x51c8c ; symbol stub for: _pthread_mutex_lock
0000000000040864	cbz	x20, 0x40898
0000000000040868	ldaxr	w8, [x19]
000000000004086c	stlxr	w9, w23, [x19]
0000000000040870	cbnz	w9, 0x40868
0000000000040874	cbnz	w23, 0x40898
0000000000040878	cmp	w8, #0x1
000000000004087c	b.ne	0x40898
0000000000040880	adr	x8, #0x461c3
0000000000040884	nop
0000000000040888	ldarb	w8, [x8]
000000000004088c	tbz	w8, #0x0, 0x40898
0000000000040890	mov	x0, x19
0000000000040894	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040898	ldr	w8, [x21, #0xf0]
000000000004089c	add	w8, w8, #0x1
00000000000408a0	str	w8, [x21, #0xf0]
00000000000408a4	add	x0, sp, #0x8
00000000000408a8	bl	__ZN12_GLOBAL__N_16LockerD1Ev
00000000000408ac	add	x0, x21, #0x40
00000000000408b0	bl	0x51c08 ; symbol stub for: _pthread_cond_broadcast
00000000000408b4	cbz	x20, 0x408e8
00000000000408b8	ldaxr	w8, [x19]
00000000000408bc	stlxr	w9, w22, [x19]
00000000000408c0	cbnz	w9, 0x408b8
00000000000408c4	cbnz	w22, 0x408e8
00000000000408c8	cmp	w8, #0x1
00000000000408cc	b.ne	0x408e8
00000000000408d0	adr	x8, #0x46173
00000000000408d4	nop
00000000000408d8	ldarb	w8, [x8]
00000000000408dc	tbz	w8, #0x0, 0x408e8
00000000000408e0	mov	x0, x19
00000000000408e4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000408e8	ldp	x29, x30, [sp, #0x50]
00000000000408ec	ldp	x20, x19, [sp, #0x40]
00000000000408f0	ldp	x22, x21, [sp, #0x30]
00000000000408f4	ldp	x24, x23, [sp, #0x20]
00000000000408f8	add	sp, sp, #0x60
00000000000408fc	ret
0000000000040900	mov	x21, x0
0000000000040904	cbz	x20, 0x40968
0000000000040908	ldaxr	w8, [x19]
000000000004090c	stlxr	w9, w23, [x19]
0000000000040910	cbnz	w9, 0x40908
0000000000040914	b	0x4093c
0000000000040918	mov	x21, x0
000000000004091c	add	x0, sp, #0x8
0000000000040920	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000040924	b	0x40968
0000000000040928	mov	x21, x0
000000000004092c	cbz	x20, 0x40968
0000000000040930	ldaxr	w8, [x19]
0000000000040934	stlxr	w9, w23, [x19]
0000000000040938	cbnz	w9, 0x40930
000000000004093c	cbnz	w23, 0x40968
0000000000040940	cmp	w8, #0x1
0000000000040944	b.ne	0x40968
0000000000040948	adr	x8, #0x460fb
000000000004094c	nop
0000000000040950	ldarb	w8, [x8]
0000000000040954	tbz	w8, #0x0, 0x40968
0000000000040958	mov	x0, x19
000000000004095c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040960	b	0x40968
0000000000040964	mov	x21, x0
0000000000040968	cbnz	x20, 0x40974
000000000004096c	mov	x0, x21
0000000000040970	bl	0x517a0 ; symbol stub for: __Unwind_Resume
0000000000040974	ldaxr	w8, [x19]
0000000000040978	stlxr	w9, w22, [x19]
000000000004097c	cbnz	w9, 0x40974
0000000000040980	cbnz	w22, 0x4096c
0000000000040984	cmp	w8, #0x1
0000000000040988	b.ne	0x4096c
000000000004098c	adr	x8, #0x460b7
0000000000040990	nop
0000000000040994	ldarb	w8, [x8]
0000000000040998	tbz	w8, #0x0, 0x4096c
000000000004099c	mov	x0, x19
00000000000409a0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000409a4	mov	x0, x21
00000000000409a8	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE:
00000000000409ac	cbz	x0, 0x409e0
00000000000409b0	stp	x20, x19, [sp, #-0x20]!
00000000000409b4	stp	x29, x30, [sp, #0x10]
00000000000409b8	add	x29, sp, #0x10
00000000000409bc	mov	x19, x0
00000000000409c0	ldr	x0, [x0]
00000000000409c4	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
00000000000409c8	ldr	x0, [x19, #0x8]
00000000000409cc	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
00000000000409d0	mov	x0, x19
00000000000409d4	ldp	x29, x30, [sp, #0x10]
00000000000409d8	ldp	x20, x19, [sp], #0x20
00000000000409dc	b	0x51a64 ; symbol stub for: _free
00000000000409e0	ret
__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev:
00000000000409e4	stp	x22, x21, [sp, #-0x30]!
00000000000409e8	stp	x20, x19, [sp, #0x10]
00000000000409ec	stp	x29, x30, [sp, #0x20]
00000000000409f0	add	x29, sp, #0x20
00000000000409f4	mov	x19, x0
00000000000409f8	ldp	x20, x21, [x0, #0x8]
00000000000409fc	subs	x8, x21, x20
0000000000040a00	b.eq	0x40a88
0000000000040a04	ldr	x11, [x19, #0x20]
0000000000040a08	mov	x13, #0xa0a1
0000000000040a0c	movk	x13, #0xa0a0, lsl #16
0000000000040a10	movk	x13, #0xa0a0, lsl #32
0000000000040a14	movk	x13, #0xa0a0, lsl #48
0000000000040a18	umulh	x9, x11, x13
0000000000040a1c	lsr	x12, x9, #6
0000000000040a20	ldr	x9, [x20, x12, lsl #3]
0000000000040a24	mov	x14, #-0x66
0000000000040a28	madd	x10, x12, x14, x11
0000000000040a2c	mov	w15, #0x28
0000000000040a30	madd	x10, x10, x15, x9
0000000000040a34	mov	x9, x19
0000000000040a38	ldr	x16, [x9, #0x28]!
0000000000040a3c	add	x11, x16, x11
0000000000040a40	umulh	x13, x11, x13
0000000000040a44	lsr	x13, x13, #6
0000000000040a48	ldr	x16, [x20, x13, lsl #3]
0000000000040a4c	madd	x11, x13, x14, x11
0000000000040a50	madd	x11, x11, x15, x16
0000000000040a54	cmp	x11, x10
0000000000040a58	b.eq	0x40a8c
0000000000040a5c	add	x12, x20, x12, lsl #3
0000000000040a60	b	0x40a6c
0000000000040a64	cmp	x11, x10
0000000000040a68	b.eq	0x40a8c
0000000000040a6c	add	x10, x10, #0x28
0000000000040a70	ldr	x13, [x12]
0000000000040a74	sub	x13, x10, x13
0000000000040a78	cmp	x13, #0xff0
0000000000040a7c	b.ne	0x40a64
0000000000040a80	ldr	x10, [x12, #0x8]!
0000000000040a84	b	0x40a64
0000000000040a88	add	x9, x19, #0x28
0000000000040a8c	str	xzr, [x9]
0000000000040a90	asr	x8, x8, #3
0000000000040a94	cmp	x8, #0x3
0000000000040a98	b.lo	0x40ac0
0000000000040a9c	ldr	x0, [x20]
0000000000040aa0	bl	0x51a64 ; symbol stub for: _free
0000000000040aa4	ldp	x8, x21, [x19, #0x8]
0000000000040aa8	add	x20, x8, #0x8
0000000000040aac	str	x20, [x19, #0x8]
0000000000040ab0	sub	x8, x21, x20
0000000000040ab4	asr	x8, x8, #3
0000000000040ab8	cmp	x8, #0x2
0000000000040abc	b.hi	0x40a9c
0000000000040ac0	cmp	x8, #0x1
0000000000040ac4	b.eq	0x40ad8
0000000000040ac8	cmp	x8, #0x2
0000000000040acc	b.ne	0x40ae0
0000000000040ad0	mov	w8, #0x66
0000000000040ad4	b	0x40adc
0000000000040ad8	mov	w8, #0x33
0000000000040adc	str	x8, [x19, #0x20]
0000000000040ae0	cmp	x20, x21
0000000000040ae4	b.eq	0x40b18
0000000000040ae8	ldr	x0, [x20], #0x8
0000000000040aec	bl	0x51a64 ; symbol stub for: _free
0000000000040af0	cmp	x20, x21
0000000000040af4	b.ne	0x40ae8
0000000000040af8	ldp	x9, x8, [x19, #0x8]
0000000000040afc	subs	x9, x8, x9
0000000000040b00	b.eq	0x40b18
0000000000040b04	sub	x9, x9, #0x8
0000000000040b08	mov	x10, #-0x1
0000000000040b0c	eor	x9, x10, x9, lsr #3
0000000000040b10	add	x8, x8, x9, lsl #3
0000000000040b14	str	x8, [x19, #0x10]
0000000000040b18	ldr	x0, [x19]
0000000000040b1c	cbz	x0, 0x40b24
0000000000040b20	bl	0x51a64 ; symbol stub for: _free
0000000000040b24	mov	x0, x19
0000000000040b28	ldp	x29, x30, [sp, #0x20]
0000000000040b2c	ldp	x20, x19, [sp, #0x10]
0000000000040b30	ldp	x22, x21, [sp], #0x30
0000000000040b34	ret
__ZNSt3__18multisetIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEED1Ev:
0000000000040b38	stp	x20, x19, [sp, #-0x20]!
0000000000040b3c	stp	x29, x30, [sp, #0x10]
0000000000040b40	add	x29, sp, #0x10
0000000000040b44	mov	x19, x0
0000000000040b48	ldr	x0, [x0, #0x8]
0000000000040b4c	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
0000000000040b50	mov	x0, x19
0000000000040b54	ldp	x29, x30, [sp, #0x10]
0000000000040b58	ldp	x20, x19, [sp], #0x20
0000000000040b5c	ret
___Kotlin_ObjCExport_initialize_block_invoke:
0000000000040b60	stp	x26, x25, [sp, #-0x50]!
0000000000040b64	stp	x24, x23, [sp, #0x10]
0000000000040b68	stp	x22, x21, [sp, #0x20]
0000000000040b6c	stp	x20, x19, [sp, #0x30]
0000000000040b70	stp	x29, x30, [sp, #0x40]
0000000000040b74	add	x29, sp, #0x40
0000000000040b78	adrp	x8, 70 ; 0x86000
0000000000040b7c	ldr	x19, [x8, #0xc98]
0000000000040b80	cbz	x19, 0x40d38
0000000000040b84	adrp	x20, 70 ; 0x86000
0000000000040b88	ldr	x9, [x20, #0xca0]
0000000000040b8c	cbz	x9, 0x40d38
0000000000040b90	adrp	x0, 44 ; 0x6c000
0000000000040b94	add	x0, x0, #0xbb0
0000000000040b98	ldr	x9, [x0]
0000000000040b9c	blr	x9
0000000000040ba0	ldr	x25, [x0]
0000000000040ba4	cbz	x25, 0x40bc4
0000000000040ba8	add	x9, x25, #0x138
0000000000040bac	mov	w10, #0x1
0000000000040bb0	ldaxr	w24, [x9]
0000000000040bb4	stlxr	w11, w10, [x9]
0000000000040bb8	cbnz	w11, 0x40bb0
0000000000040bbc	ldr	x19, [x8, #0xc98]
0000000000040bc0	b	0x40bc8
0000000000040bc4	mov	w24, #0x1
0000000000040bc8	adrp	x23, 42 ; 0x6a000
0000000000040bcc	ldr	x0, [x23, #0x8a8] ; Objc class ref: _OBJC_CLASS_$_NSObject
0000000000040bd0	nop
0000000000040bd4	ldr	x22, #0x299f4 ; Objc selector ref: class
0000000000040bd8	mov	x1, x22
0000000000040bdc	bl	0x51b78 ; Objc message: +[NSObject class]
0000000000040be0	mov	x1, x19
0000000000040be4	bl	0x51a1c ; symbol stub for: _class_getClassMethod
0000000000040be8	bl	0x51ad0 ; symbol stub for: _method_getTypeEncoding
0000000000040bec	mov	x21, x0
0000000000040bf0	ldr	x20, [x20, #0xca0]
0000000000040bf4	ldr	x0, [x23, #0x8a8]
0000000000040bf8	mov	x1, x22
0000000000040bfc	bl	0x51b78 ; Objc message: -[x0 class]
0000000000040c00	mov	x1, x20
0000000000040c04	bl	0x51a1c ; symbol stub for: _class_getClassMethod
0000000000040c08	bl	0x51ad0 ; symbol stub for: _method_getTypeEncoding
0000000000040c0c	mov	x22, x0
0000000000040c10	adr	x0, #0x15dcb ; literal pool for: "NSBlock"
0000000000040c14	nop
0000000000040c18	bl	0x51b54 ; symbol stub for: _objc_getClass
0000000000040c1c	adr	x2, #0x188
0000000000040c20	nop
0000000000040c24	mov	x1, x19
0000000000040c28	mov	x3, x21
0000000000040c2c	bl	0x519ec ; symbol stub for: _class_addMethod
0000000000040c30	adr	x0, #0x15db3 ; literal pool for: "__NSCFBoolean"
0000000000040c34	nop
0000000000040c38	bl	0x51b54 ; symbol stub for: _objc_getClass
0000000000040c3c	adr	x2, #0x494
0000000000040c40	nop
0000000000040c44	mov	x1, x19
0000000000040c48	mov	x3, x21
0000000000040c4c	bl	0x519ec ; symbol stub for: _class_addMethod
0000000000040c50	adr	x0, #0x15da1 ; literal pool for: "SwiftObject"
0000000000040c54	nop
0000000000040c58	bl	0x51b54 ; symbol stub for: _objc_getClass
0000000000040c5c	mov	x23, x0
0000000000040c60	cbz	x0, 0x40c94
0000000000040c64	adr	x2, #0x518
0000000000040c68	nop
0000000000040c6c	mov	x0, x23
0000000000040c70	mov	x1, x19
0000000000040c74	mov	x3, x21
0000000000040c78	bl	0x519ec ; symbol stub for: _class_addMethod
0000000000040c7c	adr	x2, #0x5a8
0000000000040c80	nop
0000000000040c84	mov	x0, x23
0000000000040c88	mov	x1, x20
0000000000040c8c	mov	x3, x22
0000000000040c90	bl	0x519ec ; symbol stub for: _class_addMethod
0000000000040c94	adr	x0, #0x15d69 ; literal pool for: "_TtCs12_SwiftObject"
0000000000040c98	nop
0000000000040c9c	bl	0x51b54 ; symbol stub for: _objc_getClass
0000000000040ca0	mov	x23, x0
0000000000040ca4	cbz	x0, 0x40cd8
0000000000040ca8	adr	x2, #0x4d4
0000000000040cac	nop
0000000000040cb0	mov	x0, x23
0000000000040cb4	mov	x1, x19
0000000000040cb8	mov	x3, x21
0000000000040cbc	bl	0x519ec ; symbol stub for: _class_addMethod
0000000000040cc0	adr	x2, #0x564
0000000000040cc4	nop
0000000000040cc8	mov	x0, x23
0000000000040ccc	mov	x1, x20
0000000000040cd0	mov	x3, x22
0000000000040cd4	bl	0x519ec ; symbol stub for: _class_addMethod
0000000000040cd8	cbz	x25, 0x40d08
0000000000040cdc	add	x0, x25, #0x138
0000000000040ce0	ldaxr	w8, [x0]
0000000000040ce4	stlxr	w9, w24, [x0]
0000000000040ce8	cbnz	w9, 0x40ce0
0000000000040cec	cbnz	w24, 0x40d08
0000000000040cf0	cmp	w8, #0x1
0000000000040cf4	b.ne	0x40d08
0000000000040cf8	adr	x8, #0x45d4b
0000000000040cfc	nop
0000000000040d00	ldarb	w8, [x8]
0000000000040d04	tbnz	w8, #0x0, 0x40d20
0000000000040d08	ldp	x29, x30, [sp, #0x40]
0000000000040d0c	ldp	x20, x19, [sp, #0x30]
0000000000040d10	ldp	x22, x21, [sp, #0x20]
0000000000040d14	ldp	x24, x23, [sp, #0x10]
0000000000040d18	ldp	x26, x25, [sp], #0x50
0000000000040d1c	ret
0000000000040d20	ldp	x29, x30, [sp, #0x40]
0000000000040d24	ldp	x20, x19, [sp, #0x30]
0000000000040d28	ldp	x22, x21, [sp, #0x20]
0000000000040d2c	ldp	x24, x23, [sp, #0x10]
0000000000040d30	ldp	x26, x25, [sp], #0x50
0000000000040d34	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040d38	adr	x2, #0x15c82 ; literal pool for: "unexpected initialization order"
0000000000040d3c	nop
0000000000040d40	mov	w0, #0x0
0000000000040d44	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
0000000000040d48	b	0x40d64
0000000000040d4c	b	0x40d64
0000000000040d50	b	0x40d64
0000000000040d54	b	0x40d64
0000000000040d58	b	0x40d64
0000000000040d5c	b	0x40d64
0000000000040d60	b	0x40d64
0000000000040d64	mov	x19, x0
0000000000040d68	cbz	x25, 0x40d9c
0000000000040d6c	add	x0, x25, #0x138
0000000000040d70	ldaxr	w8, [x0]
0000000000040d74	stlxr	w9, w24, [x0]
0000000000040d78	cbnz	w9, 0x40d70
0000000000040d7c	cbnz	w24, 0x40d9c
0000000000040d80	cmp	w8, #0x1
0000000000040d84	b.ne	0x40d9c
0000000000040d88	adr	x8, #0x45cbb
0000000000040d8c	nop
0000000000040d90	ldarb	w8, [x8]
0000000000040d94	tbz	w8, #0x0, 0x40d9c
0000000000040d98	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040d9c	mov	x0, x19
0000000000040da0	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZL16blockToKotlinImpP11objc_objectP13objc_selectorPP9ObjHeader:
0000000000040da4	sub	sp, sp, #0x90
0000000000040da8	stp	x28, x27, [sp, #0x30]
0000000000040dac	stp	x26, x25, [sp, #0x40]
0000000000040db0	stp	x24, x23, [sp, #0x50]
0000000000040db4	stp	x22, x21, [sp, #0x60]
0000000000040db8	stp	x20, x19, [sp, #0x70]
0000000000040dbc	stp	x29, x30, [sp, #0x80]
0000000000040dc0	add	x29, sp, #0x80
0000000000040dc4	stp	x0, x2, [sp, #0x18]
0000000000040dc8	ldr	w8, [x0, #0x8]
0000000000040dcc	ldr	x9, [x0, #0x18]
0000000000040dd0	tst	w8, #0x2000000
0000000000040dd4	mov	w8, #0x20
0000000000040dd8	mov	w10, #0x10
0000000000040ddc	csel	x8, x10, x8, eq
0000000000040de0	ldr	x2, [x9, x8]
0000000000040de4	nop
0000000000040de8	ldr	x0, #0x29ac8 ; Objc class ref: _OBJC_CLASS_$_NSMethodSignature
0000000000040dec	nop
0000000000040df0	ldr	x1, #0x299f8 ; Objc selector ref: signatureWithObjCTypes:
0000000000040df4	bl	0x51b78 ; Objc message: +[NSMethodSignature signatureWithObjCTypes:]
0000000000040df8	mov	x23, x0
0000000000040dfc	nop
0000000000040e00	ldr	x1, #0x29960 ; Objc selector ref: numberOfArguments
0000000000040e04	bl	0x51b78 ; Objc message: -[x0 numberOfArguments]
0000000000040e08	sub	w8, w0, #0x1
0000000000040e0c	str	w8, [sp, #0x14]
0000000000040e10	cmp	w8, #0x1
0000000000040e14	b.lt	0x40ef8
0000000000040e18	nop
0000000000040e1c	ldr	x24, #0x29834 ; Objc selector ref: getArgumentTypeAtIndex:
0000000000040e20	nop
0000000000040e24	ldr	x8, #0x171e4 ; literal pool symbol address: _NSGenericException
0000000000040e28	ldr	x8, [x8]
0000000000040e2c	str	x8, [sp, #0x28]
0000000000040e30	nop
0000000000040e34	ldr	x26, #0x29964 ; Objc selector ref: raise:format:
0000000000040e38	and	x19, x0, #0xffffffff
0000000000040e3c	mov	w21, #0x1
0000000000040e40	adrp	x8, 44 ; 0x6c000
0000000000040e44	add	x8, x8, #0xbb0
0000000000040e48	ldr	x20, [x8]
0000000000040e4c	mov	w28, #0x1
0000000000040e50	b	0x40e60
0000000000040e54	add	x28, x28, #0x1
0000000000040e58	cmp	x28, x19
0000000000040e5c	b.eq	0x40ef8
0000000000040e60	mov	x0, x23
0000000000040e64	mov	x1, x24
0000000000040e68	mov	x2, x28
0000000000040e6c	bl	0x51b78 ; Objc message: -[x0 raise:format:]
0000000000040e70	ldrb	w9, [x0]
0000000000040e74	cmp	w9, #0x40
0000000000040e78	b.eq	0x40e54
0000000000040e7c	mov	x8, x0
0000000000040e80	adrp	x0, 44 ; 0x6c000
0000000000040e84	add	x0, x0, #0xbb0
0000000000040e88	blr	x20
0000000000040e8c	ldr	x25, [x0]
0000000000040e90	add	x22, x25, #0x138
0000000000040e94	ldaxr	w27, [x22]
0000000000040e98	stlxr	w9, w21, [x22]
0000000000040e9c	cbnz	w9, 0x40e94
0000000000040ea0	nop
0000000000040ea4	ldr	x0, #0x299f4 ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000040ea8	str	x8, [sp]
0000000000040eac	mov	x1, x26
0000000000040eb0	ldr	x2, [sp, #0x28]
0000000000040eb4	adr	x3, #0x26cdc ; Objc cfstring ref: @"bad cfstring ref"
0000000000040eb8	nop
0000000000040ebc	bl	0x51b78 ; Objc message: +[NSException raise:format:]
0000000000040ec0	cbz	x25, 0x40e54
0000000000040ec4	ldaxr	w8, [x22]
0000000000040ec8	stlxr	w9, w27, [x22]
0000000000040ecc	cbnz	w9, 0x40ec4
0000000000040ed0	cbnz	w27, 0x40e54
0000000000040ed4	cmp	w8, #0x1
0000000000040ed8	b.ne	0x40e54
0000000000040edc	adr	x8, #0x45b67
0000000000040ee0	nop
0000000000040ee4	ldarb	w8, [x8]
0000000000040ee8	tbz	w8, #0x0, 0x40e54
0000000000040eec	mov	x0, x22
0000000000040ef0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040ef4	b	0x40e54
0000000000040ef8	nop
0000000000040efc	ldr	x1, #0x2983c ; Objc selector ref: methodReturnType
0000000000040f00	mov	x0, x23
0000000000040f04	bl	0x51b78 ; Objc message: -[x0 methodReturnType]
0000000000040f08	ldrb	w9, [x0]
0000000000040f0c	cmp	w9, #0x40
0000000000040f10	b.eq	0x40fa0
0000000000040f14	mov	x8, x0
0000000000040f18	adrp	x0, 44 ; 0x6c000
0000000000040f1c	add	x0, x0, #0xbb0
0000000000040f20	ldr	x9, [x0]
0000000000040f24	blr	x9
0000000000040f28	ldr	x21, [x0]
0000000000040f2c	add	x22, x21, #0x138
0000000000040f30	mov	w9, #0x1
0000000000040f34	ldaxr	w20, [x22]
0000000000040f38	stlxr	w10, w9, [x22]
0000000000040f3c	cbnz	w10, 0x40f34
0000000000040f40	nop
0000000000040f44	ldr	x0, #0x29954 ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000040f48	nop
0000000000040f4c	ldr	x9, #0x170bc ; literal pool symbol address: _NSGenericException
0000000000040f50	ldr	x2, [x9]
0000000000040f54	nop
0000000000040f58	ldr	x1, #0x29840 ; Objc selector ref: raise:format:
0000000000040f5c	str	x8, [sp]
0000000000040f60	adr	x3, #0x26c50 ; Objc cfstring ref: @"bad cfstring ref"
0000000000040f64	nop
0000000000040f68	bl	0x51b78 ; Objc message: +[NSException raise:format:]
0000000000040f6c	cbz	x21, 0x40fa0
0000000000040f70	ldaxr	w8, [x22]
0000000000040f74	stlxr	w9, w20, [x22]
0000000000040f78	cbnz	w9, 0x40f70
0000000000040f7c	cbnz	w20, 0x40fa0
0000000000040f80	cmp	w8, #0x1
0000000000040f84	b.ne	0x40fa0
0000000000040f88	adr	x8, #0x45abb
0000000000040f8c	nop
0000000000040f90	ldarb	w8, [x8]
0000000000040f94	tbz	w8, #0x0, 0x40fa0
0000000000040f98	mov	x0, x22
0000000000040f9c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000040fa0	ldr	w9, [sp, #0x14]
0000000000040fa4	cmp	w9, #0x3
0000000000040fa8	b.gt	0x40fdc
0000000000040fac	adr	x8, #0x25264
0000000000040fb0	nop
0000000000040fb4	ldr	x2, [x8, w9, sxtw #3]
0000000000040fb8	ldp	x0, x1, [sp, #0x18]
0000000000040fbc	ldp	x29, x30, [sp, #0x80]
0000000000040fc0	ldp	x20, x19, [sp, #0x70]
0000000000040fc4	ldp	x22, x21, [sp, #0x60]
0000000000040fc8	ldp	x24, x23, [sp, #0x50]
0000000000040fcc	ldp	x26, x25, [sp, #0x40]
0000000000040fd0	ldp	x28, x27, [sp, #0x30]
0000000000040fd4	add	sp, sp, #0x90
0000000000040fd8	br	x2
0000000000040fdc	ldr	x0, [sp, #0x18]
0000000000040fe0	bl	0x51bc0 ; symbol stub for: _objc_retainBlock
0000000000040fe4	mov	x20, x0
0000000000040fe8	adrp	x0, 44 ; 0x6c000
0000000000040fec	add	x0, x0, #0xbb0
0000000000040ff0	ldr	x8, [x0]
0000000000040ff4	blr	x8
0000000000040ff8	ldr	x8, [x0]
0000000000040ffc	ldr	x8, [x8, #0x118]
0000000000041000	add	x0, x8, #0x70
0000000000041004	mov	w1, #0x10
0000000000041008	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004100c	mov	x21, x0
0000000000041010	adr	x8, #0x193f0
0000000000041014	nop
0000000000041018	str	x8, [x21, #0x10]!
000000000004101c	stur	xzr, [x21, #-0x8]
0000000000041020	ldr	x8, [sp, #0x20]
0000000000041024	str	x21, [x8]
0000000000041028	ldar	x8, [x21]
000000000004102c	and	x8, x8, #0xfffffffffffffffc
0000000000041030	ldr	x9, [x8]
0000000000041034	cmp	x9, x8
0000000000041038	csel	x0, xzr, x8, eq
000000000004103c	cbnz	x0, 0x41048
0000000000041040	mov	x0, x21
0000000000041044	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000041048	add	x8, x0, #0x10
000000000004104c	stlr	x20, [x8]
0000000000041050	mov	x0, x21
0000000000041054	ldp	x29, x30, [sp, #0x80]
0000000000041058	ldp	x20, x19, [sp, #0x70]
000000000004105c	ldp	x22, x21, [sp, #0x60]
0000000000041060	ldp	x24, x23, [sp, #0x50]
0000000000041064	ldp	x26, x25, [sp, #0x40]
0000000000041068	ldp	x28, x27, [sp, #0x30]
000000000004106c	add	sp, sp, #0x90
0000000000041070	ret
0000000000041074	mov	x19, x0
0000000000041078	cbz	x21, 0x410c8
000000000004107c	ldaxr	w8, [x22]
0000000000041080	stlxr	w9, w20, [x22]
0000000000041084	cbnz	w9, 0x4107c
0000000000041088	cbz	w20, 0x410a8
000000000004108c	b	0x410c8
0000000000041090	mov	x19, x0
0000000000041094	cbz	x25, 0x410c8
0000000000041098	ldaxr	w8, [x22]
000000000004109c	stlxr	w9, w27, [x22]
00000000000410a0	cbnz	w9, 0x41098
00000000000410a4	cbnz	w27, 0x410c8
00000000000410a8	cmp	w8, #0x1
00000000000410ac	b.ne	0x410c8
00000000000410b0	adr	x8, #0x45993
00000000000410b4	nop
00000000000410b8	ldarb	w8, [x8]
00000000000410bc	tbz	w8, #0x0, 0x410c8
00000000000410c0	mov	x0, x22
00000000000410c4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000410c8	mov	x0, x19
00000000000410cc	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZL23boxedBooleanToKotlinImpP8NSNumberP13objc_selectorPP9ObjHeader:
00000000000410d0	sub	sp, sp, #0x50
00000000000410d4	stp	x22, x21, [sp, #0x20]
00000000000410d8	stp	x20, x19, [sp, #0x30]
00000000000410dc	stp	x29, x30, [sp, #0x40]
00000000000410e0	add	x29, sp, #0x40
00000000000410e4	mov	x19, x2
00000000000410e8	nop
00000000000410ec	ldr	x1, #0x294cc ; Objc selector ref: boolValue
00000000000410f0	bl	0x51b78 ; Objc message: -[x0 boolValue]
00000000000410f4	mov	x21, x0
00000000000410f8	str	xzr, [sp, #0x8]
00000000000410fc	adrp	x20, 43 ; 0x6c000
0000000000041100	add	x20, x20, #0xbb0
0000000000041104	ldr	x22, [x20]
0000000000041108	mov	x0, x20
000000000004110c	blr	x22
0000000000041110	ldr	x8, [x0]
0000000000041114	ldr	x9, [x8, #0x110]
0000000000041118	add	x10, sp, #0x8
000000000004111c	str	x10, [x8, #0x110]
0000000000041120	mov	x8, #0x300000000
0000000000041124	stp	x9, x8, [sp, #0x10]
0000000000041128	adr	x8, #0x4591b
000000000004112c	nop
0000000000041130	ldarb	w8, [x8]
0000000000041134	tbz	w8, #0x0, 0x4113c
0000000000041138	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004113c	mov	x0, x21
0000000000041140	mov	x1, x19
0000000000041144	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
0000000000041148	mov	x8, x0
000000000004114c	str	x0, [x19]
0000000000041150	mov	x0, x20
0000000000041154	blr	x22
0000000000041158	ldr	x9, [x0]
000000000004115c	ldr	x10, [sp, #0x10]
0000000000041160	str	x10, [x9, #0x110]
0000000000041164	mov	x0, x8
0000000000041168	ldp	x29, x30, [sp, #0x40]
000000000004116c	ldp	x20, x19, [sp, #0x30]
0000000000041170	ldp	x22, x21, [sp, #0x20]
0000000000041174	add	sp, sp, #0x50
0000000000041178	ret
__ZL23SwiftObject_toKotlinImpP11objc_objectP13objc_selectorPP9ObjHeader:
000000000004117c	stp	x22, x21, [sp, #-0x30]!
0000000000041180	stp	x20, x19, [sp, #0x10]
0000000000041184	stp	x29, x30, [sp, #0x20]
0000000000041188	add	x29, sp, #0x20
000000000004118c	mov	x21, x2
0000000000041190	mov	x19, x0
0000000000041194	bl	0x51be4 ; symbol stub for: _object_getClass
0000000000041198	bl	__ZL19getOrCreateTypeInfoP10objc_class
000000000004119c	mov	x22, x0
00000000000411a0	mov	x0, x19
00000000000411a4	bl	0x51ba8 ; symbol stub for: _objc_retain
00000000000411a8	mov	x19, x0
00000000000411ac	adrp	x0, 43 ; 0x6c000
00000000000411b0	add	x0, x0, #0xbb0
00000000000411b4	ldr	x8, [x0]
00000000000411b8	blr	x8
00000000000411bc	ldr	x8, [x0]
00000000000411c0	ldr	x8, [x8, #0x118]
00000000000411c4	ldrsw	x9, [x22, #0x14]
00000000000411c8	add	x9, x9, #0xf
00000000000411cc	and	x1, x9, #0xfffffffffffffff8
00000000000411d0	add	x0, x8, #0x70
00000000000411d4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000411d8	mov	x20, x0
00000000000411dc	str	x22, [x20, #0x10]!
00000000000411e0	stur	xzr, [x20, #-0x8]
00000000000411e4	str	x20, [x21]
00000000000411e8	ldar	x8, [x20]
00000000000411ec	and	x8, x8, #0xfffffffffffffffc
00000000000411f0	ldr	x9, [x8]
00000000000411f4	cmp	x9, x8
00000000000411f8	csel	x0, xzr, x8, eq
00000000000411fc	cbnz	x0, 0x41208
0000000000041200	mov	x0, x20
0000000000041204	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000041208	add	x8, x0, #0x10
000000000004120c	stlr	x19, [x8]
0000000000041210	mov	x0, x20
0000000000041214	ldp	x29, x30, [sp, #0x20]
0000000000041218	ldp	x20, x19, [sp, #0x10]
000000000004121c	ldp	x22, x21, [sp], #0x30
0000000000041220	ret
__ZL40SwiftObject_releaseAsAssociatedObjectImpP11objc_objectP13objc_selector11ReleaseMode:
0000000000041224	cmp	w2, #0x1
0000000000041228	b.hi	0x41230
000000000004122c	b	0x51b9c ; symbol stub for: _objc_release
0000000000041230	ret
__ZL19getOrCreateTypeInfoP10objc_class:
0000000000041234	sub	sp, sp, #0x1c0
0000000000041238	stp	x28, x27, [sp, #0x160]
000000000004123c	stp	x26, x25, [sp, #0x170]
0000000000041240	stp	x24, x23, [sp, #0x180]
0000000000041244	stp	x22, x21, [sp, #0x190]
0000000000041248	stp	x20, x19, [sp, #0x1a0]
000000000004124c	stp	x29, x30, [sp, #0x1b0]
0000000000041250	add	x29, sp, #0x1b0
0000000000041254	mov	x19, x0
0000000000041258	adr	x23, #0x457f2
000000000004125c	nop
0000000000041260	mov	x1, x23
0000000000041264	bl	0x51b48 ; symbol stub for: _objc_getAssociatedObject
0000000000041268	nop
000000000004126c	ldr	x20, #0x29524 ; Objc selector ref: pointerValue
0000000000041270	mov	x1, x20
0000000000041274	bl	0x51b78 ; Objc message: -[x0 pointerValue]
0000000000041278	mov	x22, x0
000000000004127c	cbnz	x0, 0x412d0
0000000000041280	mov	x0, x19
0000000000041284	bl	0x51a34 ; symbol stub for: _class_getSuperclass
0000000000041288	cbz	x0, 0x41298
000000000004128c	bl	__ZL19getOrCreateTypeInfoP10objc_class
0000000000041290	mov	x26, x0
0000000000041294	b	0x412a0
0000000000041298	adr	x26, #0x17228
000000000004129c	nop
00000000000412a0	add	x0, x23, #0x1
00000000000412a4	bl	__ZN6kotlin8SpinLockILNS_24MutexThreadStateHandlingE1EE4lockEv
00000000000412a8	mov	x0, x19
00000000000412ac	mov	x1, x23
00000000000412b0	bl	0x51b48 ; symbol stub for: _objc_getAssociatedObject
00000000000412b4	mov	x1, x20
00000000000412b8	bl	0x51b78 ; Objc message: -[x0 pointerValue]
00000000000412bc	mov	x22, x0
00000000000412c0	cbz	x0, 0x412f4
00000000000412c4	adr	x8, #0x45787
00000000000412c8	nop
00000000000412cc	stlrb	wzr, [x8]
00000000000412d0	mov	x0, x22
00000000000412d4	ldp	x29, x30, [sp, #0x1b0]
00000000000412d8	ldp	x20, x19, [sp, #0x1a0]
00000000000412dc	ldp	x22, x21, [sp, #0x190]
00000000000412e0	ldp	x24, x23, [sp, #0x180]
00000000000412e4	ldp	x26, x25, [sp, #0x170]
00000000000412e8	ldp	x28, x27, [sp, #0x160]
00000000000412ec	add	sp, sp, #0x1c0
00000000000412f0	ret
00000000000412f4	adrp	x0, 43 ; 0x6c000
00000000000412f8	add	x0, x0, #0xbb0
00000000000412fc	ldr	x20, [x0]
0000000000041300	blr	x20
0000000000041304	ldr	x8, [x0]
0000000000041308	cbz	x8, 0x4132c
000000000004130c	str	x8, [sp, #0x28]
0000000000041310	add	x8, x8, #0x138
0000000000041314	mov	w9, #0x1
0000000000041318	ldaxr	w11, [x8]
000000000004131c	stlxr	w10, w9, [x8]
0000000000041320	cbnz	w10, 0x41318
0000000000041324	str	x11, [sp, #0x18]
0000000000041328	b	0x41338
000000000004132c	str	xzr, [sp, #0x28]
0000000000041330	mov	w8, #0x1
0000000000041334	str	x8, [sp, #0x18]
0000000000041338	movi.16b	v0, #0x0
000000000004133c	stp	q0, q0, [sp, #0xb0]
0000000000041340	mov	w8, #0x3f800000
0000000000041344	str	w8, [sp, #0xd0]
0000000000041348	sub	x1, x29, #0xd0
000000000004134c	mov	x0, x19
0000000000041350	bl	0x51a04 ; symbol stub for: _class_copyMethodList
0000000000041354	mov	x22, x0
0000000000041358	str	x20, [sp, #0x20]
000000000004135c	str	x19, [sp, #0x48]
0000000000041360	mov	x21, #0x2d69
0000000000041364	movk	x21, #0xeb38, lsl #16
0000000000041368	movk	x21, #0xea08, lsl #32
000000000004136c	movk	x21, #0x9ddf, lsl #48
0000000000041370	ldur	w8, [x29, #-0xd0]
0000000000041374	cbz	w8, 0x41650
0000000000041378	mov	x19, #0x0
000000000004137c	add	x8, sp, #0xb0
0000000000041380	add	x20, x8, #0x10
0000000000041384	mov	w27, #0x1
0000000000041388	b	0x413d4
000000000004138c	and	x28, x8, x21
0000000000041390	ldr	x9, [sp, #0xb0]
0000000000041394	ldr	x8, [x9, x28, lsl #3]
0000000000041398	cbz	x8, 0x414e8
000000000004139c	ldr	x9, [x8]
00000000000413a0	str	x9, [x23]
00000000000413a4	str	x23, [x8]
00000000000413a8	ldr	x8, [sp, #0xc8]
00000000000413ac	add	x8, x8, #0x1
00000000000413b0	str	x8, [sp, #0xc8]
00000000000413b4	add	x19, x19, #0x1
00000000000413b8	ldur	w8, [x29, #-0xd0]
00000000000413bc	cmp	x19, x8
00000000000413c0	mov	x21, #0x2d69
00000000000413c4	movk	x21, #0xeb38, lsl #16
00000000000413c8	movk	x21, #0xea08, lsl #32
00000000000413cc	movk	x21, #0x9ddf, lsl #48
00000000000413d0	b.hs	0x41654
00000000000413d4	ldr	x0, [x22, x19, lsl #3]
00000000000413d8	bl	0x51ac4 ; symbol stub for: _method_getName
00000000000413dc	mov	x24, x0
00000000000413e0	lsr	x8, x0, #32
00000000000413e4	lsl	w9, w24, #3
00000000000413e8	add	x9, x9, #0x8
00000000000413ec	eor	x9, x9, x8
00000000000413f0	mul	x9, x9, x21
00000000000413f4	eor	x8, x9, x8
00000000000413f8	eor	x8, x8, x9, lsr #47
00000000000413fc	mul	x8, x8, x21
0000000000041400	eor	x8, x8, x8, lsr #47
0000000000041404	mul	x21, x8, x21
0000000000041408	ldr	x25, [sp, #0xb8]
000000000004140c	cbz	x25, 0x414a4
0000000000041410	fmov	d0, x25
0000000000041414	cnt.8b	v0, v0
0000000000041418	uaddlv.8b	h0, v0
000000000004141c	fmov	w8, s0
0000000000041420	cmp	x8, #0x1
0000000000041424	b.hi	0x41434
0000000000041428	sub	x9, x25, #0x1
000000000004142c	and	x28, x21, x9
0000000000041430	b	0x41448
0000000000041434	mov	x28, x21
0000000000041438	cmp	x21, x25
000000000004143c	b.lo	0x41448
0000000000041440	udiv	x9, x21, x25
0000000000041444	msub	x28, x9, x25, x21
0000000000041448	ldr	x9, [sp, #0xb0]
000000000004144c	ldr	x9, [x9, x28, lsl #3]
0000000000041450	cbz	x9, 0x414a4
0000000000041454	sub	x10, x25, #0x1
0000000000041458	b	0x41474
000000000004145c	and	x11, x11, x10
0000000000041460	cmp	x11, x28
0000000000041464	b.ne	0x414a4
0000000000041468	ldr	x11, [x9, #0x10]
000000000004146c	cmp	x11, x24
0000000000041470	b.eq	0x413b4
0000000000041474	ldr	x9, [x9]
0000000000041478	cbz	x9, 0x414a4
000000000004147c	ldr	x11, [x9, #0x8]
0000000000041480	cmp	x11, x21
0000000000041484	b.eq	0x41468
0000000000041488	cmp	x8, #0x1
000000000004148c	b.ls	0x4145c
0000000000041490	cmp	x11, x25
0000000000041494	b.lo	0x41460
0000000000041498	udiv	x12, x11, x25
000000000004149c	msub	x11, x12, x25, x11
00000000000414a0	b	0x41460
00000000000414a4	mov	w0, #0x1
00000000000414a8	mov	w1, #0x18
00000000000414ac	bl	0x519e0 ; symbol stub for: _calloc
00000000000414b0	mov	x23, x0
00000000000414b4	stp	x21, x24, [x0, #0x8]
00000000000414b8	ldr	x8, [sp, #0xc8]
00000000000414bc	add	x8, x8, #0x1
00000000000414c0	ucvtf	s0, x8
00000000000414c4	ldr	s1, [sp, #0xd0]
00000000000414c8	cbz	x25, 0x41518
00000000000414cc	ucvtf	s2, x25
00000000000414d0	fmul	s2, s1, s2
00000000000414d4	fcmp	s2, s0
00000000000414d8	b.mi	0x41518
00000000000414dc	ldr	x9, [sp, #0xb0]
00000000000414e0	ldr	x8, [x9, x28, lsl #3]
00000000000414e4	cbnz	x8, 0x4139c
00000000000414e8	ldr	x8, [sp, #0xc0]
00000000000414ec	str	x8, [x23]
00000000000414f0	str	x23, [sp, #0xc0]
00000000000414f4	str	x20, [x9, x28, lsl #3]
00000000000414f8	ldr	x8, [x23]
00000000000414fc	cbz	x8, 0x413a8
0000000000041500	ldr	x8, [x8, #0x8]
0000000000041504	sub	x9, x25, #0x1
0000000000041508	tst	x25, x9
000000000004150c	b.ne	0x415d8
0000000000041510	and	x8, x8, x9
0000000000041514	b	0x415e8
0000000000041518	cmp	x25, #0x3
000000000004151c	cset	w8, lo
0000000000041520	sub	x9, x25, #0x1
0000000000041524	tst	x25, x9
0000000000041528	cset	w9, ne
000000000004152c	orr	w8, w8, w9
0000000000041530	bfi	x8, x25, #1, #63
0000000000041534	fdiv	s0, s0, s1
0000000000041538	fcvtpu	x9, s0
000000000004153c	cmp	x8, x9
0000000000041540	csel	x24, x9, x8, lo
0000000000041544	subs	x8, x24, #0x1
0000000000041548	b.ne	0x41554
000000000004154c	mov	w24, #0x2
0000000000041550	b	0x4156c
0000000000041554	tst	x24, x8
0000000000041558	b.eq	0x4156c
000000000004155c	mov	x0, x24
0000000000041560	bl	0x517e8 ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000041564	mov	x24, x0
0000000000041568	ldr	x25, [sp, #0xb8]
000000000004156c	cmp	x24, x25
0000000000041570	b.ls	0x41584
0000000000041574	add	x0, sp, #0xb0
0000000000041578	mov	x1, x24
000000000004157c	bl	__ZNSt3__112__hash_tableIP13objc_selectorNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm
0000000000041580	b	0x41608
0000000000041584	b.hs	0x41608
0000000000041588	ldr	x8, [sp, #0xc8]
000000000004158c	ucvtf	s0, x8
0000000000041590	ldr	s1, [sp, #0xd0]
0000000000041594	fdiv	s0, s0, s1
0000000000041598	fcvtpu	x0, s0
000000000004159c	cmp	x25, #0x3
00000000000415a0	b.lo	0x415f4
00000000000415a4	fmov	d0, x25
00000000000415a8	cnt.8b	v0, v0
00000000000415ac	uaddlv.8b	h0, v0
00000000000415b0	fmov	w8, s0
00000000000415b4	cmp	x8, #0x1
00000000000415b8	b.hi	0x415f4
00000000000415bc	sub	x8, x0, #0x1
00000000000415c0	clz	x8, x8
00000000000415c4	neg	x8, x8
00000000000415c8	lsl	x8, x27, x8
00000000000415cc	cmp	x0, #0x2
00000000000415d0	csel	x0, x0, x8, lo
00000000000415d4	b	0x415f8
00000000000415d8	cmp	x8, x25
00000000000415dc	b.lo	0x415e8
00000000000415e0	udiv	x9, x8, x25
00000000000415e4	msub	x8, x9, x25, x8
00000000000415e8	ldr	x9, [sp, #0xb0]
00000000000415ec	add	x8, x9, x8, lsl #3
00000000000415f0	b	0x413a4
00000000000415f4	bl	0x517e8 ; symbol stub for: __ZNSt3__112__next_primeEm
00000000000415f8	cmp	x24, x0
00000000000415fc	csel	x24, x0, x24, lo
0000000000041600	cmp	x24, x25
0000000000041604	b.lo	0x41574
0000000000041608	ldr	x25, [sp, #0xb8]
000000000004160c	sub	x8, x25, #0x1
0000000000041610	tst	x25, x8
0000000000041614	b.eq	0x4138c
0000000000041618	cmp	x21, x25
000000000004161c	b.hs	0x41634
0000000000041620	mov	x28, x21
0000000000041624	ldr	x9, [sp, #0xb0]
0000000000041628	ldr	x8, [x9, x28, lsl #3]
000000000004162c	cbnz	x8, 0x4139c
0000000000041630	b	0x414e8
0000000000041634	udiv	x8, x21, x25
0000000000041638	mul	x8, x8, x25
000000000004163c	sub	x28, x21, x8
0000000000041640	ldr	x9, [sp, #0xb0]
0000000000041644	ldr	x8, [x9, x28, lsl #3]
0000000000041648	cbnz	x8, 0x4139c
000000000004164c	b	0x414e8
0000000000041650	cbz	x22, 0x4165c
0000000000041654	mov	x0, x22
0000000000041658	bl	0x51a64 ; symbol stub for: _free
000000000004165c	ldr	x8, [x26, #0x60]
0000000000041660	ldr	x9, [x8, #0x10]
0000000000041664	cbz	x26, 0x41710
0000000000041668	mov	x10, x9
000000000004166c	cbnz	x9, 0x41688
0000000000041670	mov	x8, x26
0000000000041674	ldr	x8, [x8, #0x18]
0000000000041678	cbz	x8, 0x41710
000000000004167c	ldr	x10, [x8, #0x60]
0000000000041680	ldr	x10, [x10, #0x10]
0000000000041684	cbz	x10, 0x41674
0000000000041688	ldr	w8, [x10, #0x10]
000000000004168c	cbz	x9, 0x41718
0000000000041690	ldr	x22, [x9, #0x8]
0000000000041694	ldr	x25, [x9, #0x18]
0000000000041698	ldr	w9, [x9, #0x20]
000000000004169c	str	w9, [sp, #0x34]
00000000000416a0	cbz	x22, 0x41720
00000000000416a4	stp	xzr, xzr, [sp, #0x98]
00000000000416a8	str	xzr, [sp, #0xa8]
00000000000416ac	cbz	w8, 0x41730
00000000000416b0	tbnz	w8, #0x1f, 0x42b08
00000000000416b4	sxtw	x23, w8
00000000000416b8	sbfiz	x24, x8, #3, #32
00000000000416bc	mov	x0, x23
00000000000416c0	mov	w1, #0x8
00000000000416c4	bl	0x519e0 ; symbol stub for: _calloc
00000000000416c8	stp	x0, x0, [sp, #0x98]
00000000000416cc	add	x19, x0, x23, lsl #3
00000000000416d0	str	x19, [sp, #0xa8]
00000000000416d4	mov	x1, x22
00000000000416d8	mov	x2, x24
00000000000416dc	bl	0x51aac ; symbol stub for: _memcpy
00000000000416e0	str	x19, [sp, #0xa0]
00000000000416e4	cbnz	x25, 0x41734
00000000000416e8	ldr	x25, [x26, #0x40]
00000000000416ec	ldr	w8, [x26, #0x3c]
00000000000416f0	str	w8, [sp, #0x34]
00000000000416f4	str	x26, [sp, #0x38]
00000000000416f8	add	x8, sp, #0x80
00000000000416fc	stp	xzr, xzr, [sp, #0x88]
0000000000041700	add	x26, x8, #0x8
0000000000041704	str	x26, [sp, #0x80]
0000000000041708	cbnz	x25, 0x4174c
000000000004170c	b	0x418e8
0000000000041710	mov	w8, #-0x1
0000000000041714	cbnz	x9, 0x41690
0000000000041718	mov	x25, #0x0
000000000004171c	str	wzr, [sp, #0x34]
0000000000041720	add	x22, x26, #0x70
0000000000041724	stp	xzr, xzr, [sp, #0x98]
0000000000041728	str	xzr, [sp, #0xa8]
000000000004172c	cbnz	w8, 0x416b0
0000000000041730	cbz	x25, 0x416e8
0000000000041734	str	x26, [sp, #0x38]
0000000000041738	add	x8, sp, #0x80
000000000004173c	stp	xzr, xzr, [sp, #0x88]
0000000000041740	add	x26, x8, #0x8
0000000000041744	str	x26, [sp, #0x80]
0000000000041748	cbz	x25, 0x418e8
000000000004174c	ldr	w9, [sp, #0x34]
0000000000041750	neg	w8, w9
0000000000041754	cmp	w9, #0x0
0000000000041758	csinc	w19, w8, w9, lt
000000000004175c	cmp	w19, #0x1
0000000000041760	b.lt	0x418e8
0000000000041764	mov	x20, #0x0
0000000000041768	b	0x41778
000000000004176c	add	x20, x20, #0x1
0000000000041770	cmp	x20, x19
0000000000041774	b.eq	0x418e8
0000000000041778	lsl	x8, x20, #4
000000000004177c	ldr	w21, [x25, x8]
0000000000041780	cbz	w21, 0x4176c
0000000000041784	add	x8, x25, x20, lsl #4
0000000000041788	ldrsw	x23, [x8, #0x4]
000000000004178c	stp	xzr, xzr, [x29, #-0xd0]
0000000000041790	stur	xzr, [x29, #-0xc0]
0000000000041794	cbz	w23, 0x41808
0000000000041798	tbnz	w23, #0x1f, 0x42afc
000000000004179c	mov	x0, x23
00000000000417a0	mov	w1, #0x8
00000000000417a4	bl	0x519e0 ; symbol stub for: _calloc
00000000000417a8	mov	x22, x0
00000000000417ac	lsl	x1, x23, #3
00000000000417b0	add	x24, x0, x1
00000000000417b4	stur	x0, [x29, #-0xd0]
00000000000417b8	stur	x24, [x29, #-0xc0]
00000000000417bc	bl	0x519d4 ; symbol stub for: _bzero
00000000000417c0	mov	x8, #0x0
00000000000417c4	stur	x24, [x29, #-0xc8]
00000000000417c8	add	x9, x25, x20, lsl #4
00000000000417cc	and	x10, x23, #0xffffffff
00000000000417d0	lsl	x10, x10, #3
00000000000417d4	sub	x10, x10, #0x8
00000000000417d8	ldr	x11, [x9, #0x8]!
00000000000417dc	ldr	x11, [x11, x8]
00000000000417e0	str	x11, [x22, x8]
00000000000417e4	cmp	x10, x8
00000000000417e8	b.eq	0x41808
00000000000417ec	ldur	x22, [x29, #-0xd0]
00000000000417f0	add	x8, x8, #0x8
00000000000417f4	ldr	x11, [x9]
00000000000417f8	ldr	x11, [x11, x8]
00000000000417fc	str	x11, [x22, x8]
0000000000041800	cmp	x10, x8
0000000000041804	b.ne	0x417ec
0000000000041808	ldr	x23, [sp, #0x88]
000000000004180c	cbz	x23, 0x41850
0000000000041810	mov	x22, x26
0000000000041814	ldr	w8, [x23, #0x20]
0000000000041818	cmp	w21, w8
000000000004181c	b.ge	0x41834
0000000000041820	ldr	x8, [x23]
0000000000041824	cbz	x8, 0x418ac
0000000000041828	mov	x22, x23
000000000004182c	mov	x23, x8
0000000000041830	b	0x41814
0000000000041834	cmp	w8, w21
0000000000041838	b.ge	0x41858
000000000004183c	mov	x22, x23
0000000000041840	ldr	x8, [x22, #0x8]!
0000000000041844	cbz	x8, 0x41858
0000000000041848	mov	x23, x8
000000000004184c	b	0x41814
0000000000041850	mov	x23, x26
0000000000041854	mov	x22, x26
0000000000041858	ldr	x8, [x22]
000000000004185c	cbnz	x8, 0x418d4
0000000000041860	mov	w0, #0x1
0000000000041864	mov	w1, #0x40
0000000000041868	bl	0x519e0 ; symbol stub for: _calloc
000000000004186c	str	w21, [x0, #0x20]
0000000000041870	ldur	q0, [x29, #-0xd0]
0000000000041874	stur	q0, [x0, #0x28]
0000000000041878	ldur	x8, [x29, #-0xc0]
000000000004187c	str	x8, [x0, #0x38]
0000000000041880	stp	xzr, xzr, [x29, #-0xd0]
0000000000041884	stur	xzr, [x29, #-0xc0]
0000000000041888	stp	xzr, xzr, [x0]
000000000004188c	str	x23, [x0, #0x10]
0000000000041890	str	x0, [x22]
0000000000041894	ldr	x8, [sp, #0x80]
0000000000041898	ldr	x8, [x8]
000000000004189c	cbz	x8, 0x418bc
00000000000418a0	str	x8, [sp, #0x80]
00000000000418a4	ldr	x1, [x22]
00000000000418a8	b	0x418c0
00000000000418ac	mov	x22, x23
00000000000418b0	ldr	x8, [x22]
00000000000418b4	cbnz	x8, 0x418d4
00000000000418b8	b	0x41860
00000000000418bc	mov	x1, x0
00000000000418c0	ldr	x0, [sp, #0x88]
00000000000418c4	bl	__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_
00000000000418c8	ldr	x8, [sp, #0x90]
00000000000418cc	add	x8, x8, #0x1
00000000000418d0	str	x8, [sp, #0x90]
00000000000418d4	ldur	x0, [x29, #-0xd0]
00000000000418d8	cbz	x0, 0x4176c
00000000000418dc	stur	x0, [x29, #-0xc8]
00000000000418e0	bl	0x51a64 ; symbol stub for: _free
00000000000418e4	b	0x4176c
00000000000418e8	sub	x8, x29, #0xd0
00000000000418ec	movi.16b	v0, #0x0
00000000000418f0	str	q0, [x8, #0x10]
00000000000418f4	stur	q0, [x29, #-0xd0]
00000000000418f8	mov	w8, #0x3f800000
00000000000418fc	stur	w8, [x29, #-0xb0]
0000000000041900	stp	xzr, xzr, [x29, #-0x90]
0000000000041904	stur	xzr, [x29, #-0x80]
0000000000041908	sub	x1, x29, #0xa8
000000000004190c	ldr	x0, [sp, #0x48]
0000000000041910	bl	0x51a10 ; symbol stub for: _class_copyProtocolList
0000000000041914	mov	x22, x0
0000000000041918	str	x25, [sp, #0x58]
000000000004191c	cbz	x0, 0x41c64
0000000000041920	ldur	w8, [x29, #-0xa8]
0000000000041924	add	x3, x22, x8, lsl #3
0000000000041928	sub	x0, x29, #0x90
000000000004192c	mov	x1, #0x0
0000000000041930	mov	x2, x22
0000000000041934	bl	__ZNSt3__16vectorIP8ProtocolN6kotlin11std_support9allocatorIS2_EEE6insertIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueENS_11__wrap_iterIS9_EEE4typeENSF_IPKS2_EESB_SB_
0000000000041938	mov	x0, x22
000000000004193c	bl	0x51a64 ; symbol stub for: _free
0000000000041940	ldp	x8, x0, [x29, #-0x90]
0000000000041944	cmp	x8, x0
0000000000041948	b.eq	0x41c54
000000000004194c	sub	x9, x29, #0xd0
0000000000041950	add	x25, x9, #0x10
0000000000041954	mov	w27, #0x1
0000000000041958	b	0x41970
000000000004195c	mov	x0, x22
0000000000041960	bl	0x51a64 ; symbol stub for: _free
0000000000041964	ldp	x8, x0, [x29, #-0x90]
0000000000041968	cmp	x8, x0
000000000004196c	b.eq	0x41c58
0000000000041970	ldr	x22, [x0, #-0x8]!
0000000000041974	stur	x0, [x29, #-0x88]
0000000000041978	lsr	x9, x22, #32
000000000004197c	lsl	w10, w22, #3
0000000000041980	add	x10, x10, #0x8
0000000000041984	eor	x10, x10, x9
0000000000041988	mov	x11, #0x2d69
000000000004198c	movk	x11, #0xeb38, lsl #16
0000000000041990	movk	x11, #0xea08, lsl #32
0000000000041994	movk	x11, #0x9ddf, lsl #48
0000000000041998	mul	x10, x10, x11
000000000004199c	eor	x9, x10, x9
00000000000419a0	eor	x9, x9, x10, lsr #47
00000000000419a4	mul	x9, x9, x11
00000000000419a8	eor	x9, x9, x9, lsr #47
00000000000419ac	mul	x20, x9, x11
00000000000419b0	ldur	x19, [x29, #-0xc8]
00000000000419b4	cbz	x19, 0x41a4c
00000000000419b8	fmov	d0, x19
00000000000419bc	cnt.8b	v0, v0
00000000000419c0	uaddlv.8b	h0, v0
00000000000419c4	fmov	w9, s0
00000000000419c8	cmp	x9, #0x1
00000000000419cc	b.hi	0x419dc
00000000000419d0	sub	x10, x19, #0x1
00000000000419d4	and	x21, x20, x10
00000000000419d8	b	0x419f0
00000000000419dc	mov	x21, x20
00000000000419e0	cmp	x20, x19
00000000000419e4	b.lo	0x419f0
00000000000419e8	udiv	x10, x20, x19
00000000000419ec	msub	x21, x10, x19, x20
00000000000419f0	ldur	x10, [x29, #-0xd0]
00000000000419f4	ldr	x10, [x10, x21, lsl #3]
00000000000419f8	cbz	x10, 0x41a4c
00000000000419fc	sub	x11, x19, #0x1
0000000000041a00	b	0x41a1c
0000000000041a04	and	x12, x12, x11
0000000000041a08	cmp	x12, x21
0000000000041a0c	b.ne	0x41a4c
0000000000041a10	ldr	x12, [x10, #0x10]
0000000000041a14	cmp	x12, x22
0000000000041a18	b.eq	0x41968
0000000000041a1c	ldr	x10, [x10]
0000000000041a20	cbz	x10, 0x41a4c
0000000000041a24	ldr	x12, [x10, #0x8]
0000000000041a28	cmp	x12, x20
0000000000041a2c	b.eq	0x41a10
0000000000041a30	cmp	x9, #0x1
0000000000041a34	b.ls	0x41a04
0000000000041a38	cmp	x12, x19
0000000000041a3c	b.lo	0x41a08
0000000000041a40	udiv	x13, x12, x19
0000000000041a44	msub	x12, x13, x19, x12
0000000000041a48	b	0x41a08
0000000000041a4c	mov	w0, #0x1
0000000000041a50	mov	w1, #0x18
0000000000041a54	bl	0x519e0 ; symbol stub for: _calloc
0000000000041a58	mov	x23, x0
0000000000041a5c	stp	x20, x22, [x0, #0x8]
0000000000041a60	ldur	x8, [x29, #-0xb8]
0000000000041a64	add	x8, x8, #0x1
0000000000041a68	ucvtf	s0, x8
0000000000041a6c	ldur	s1, [x29, #-0xb0]
0000000000041a70	cbz	x19, 0x41a9c
0000000000041a74	ucvtf	s2, x19
0000000000041a78	fmul	s2, s1, s2
0000000000041a7c	fcmp	s2, s0
0000000000041a80	b.mi	0x41a9c
0000000000041a84	ldur	x9, [x29, #-0xd0]
0000000000041a88	ldr	x8, [x9, x21, lsl #3]
0000000000041a8c	cbz	x8, 0x41b90
0000000000041a90	ldr	x9, [x8]
0000000000041a94	str	x9, [x23]
0000000000041a98	b	0x41c0c
0000000000041a9c	cmp	x19, #0x3
0000000000041aa0	cset	w8, lo
0000000000041aa4	sub	x9, x19, #0x1
0000000000041aa8	tst	x19, x9
0000000000041aac	cset	w9, ne
0000000000041ab0	orr	w8, w8, w9
0000000000041ab4	bfi	x8, x19, #1, #63
0000000000041ab8	fdiv	s0, s0, s1
0000000000041abc	fcvtpu	x9, s0
0000000000041ac0	cmp	x8, x9
0000000000041ac4	csel	x24, x9, x8, lo
0000000000041ac8	subs	x8, x24, #0x1
0000000000041acc	b.ne	0x41ad8
0000000000041ad0	mov	w24, #0x2
0000000000041ad4	b	0x41af0
0000000000041ad8	tst	x24, x8
0000000000041adc	b.eq	0x41af0
0000000000041ae0	mov	x0, x24
0000000000041ae4	bl	0x517e8 ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000041ae8	mov	x24, x0
0000000000041aec	ldur	x19, [x29, #-0xc8]
0000000000041af0	cmp	x24, x19
0000000000041af4	b.ls	0x41b08
0000000000041af8	sub	x0, x29, #0xd0
0000000000041afc	mov	x1, x24
0000000000041b00	bl	__ZNSt3__112__hash_tableIP8ProtocolNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm
0000000000041b04	b	0x41b70
0000000000041b08	b.hs	0x41b70
0000000000041b0c	ldur	x8, [x29, #-0xb8]
0000000000041b10	ucvtf	s0, x8
0000000000041b14	ldur	s1, [x29, #-0xb0]
0000000000041b18	fdiv	s0, s0, s1
0000000000041b1c	fcvtpu	x0, s0
0000000000041b20	cmp	x19, #0x3
0000000000041b24	b.lo	0x41b5c
0000000000041b28	fmov	d0, x19
0000000000041b2c	cnt.8b	v0, v0
0000000000041b30	uaddlv.8b	h0, v0
0000000000041b34	fmov	w8, s0
0000000000041b38	cmp	x8, #0x1
0000000000041b3c	b.hi	0x41b5c
0000000000041b40	sub	x8, x0, #0x1
0000000000041b44	clz	x8, x8
0000000000041b48	neg	x8, x8
0000000000041b4c	lsl	x8, x27, x8
0000000000041b50	cmp	x0, #0x2
0000000000041b54	csel	x0, x0, x8, lo
0000000000041b58	b	0x41b60
0000000000041b5c	bl	0x517e8 ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000041b60	cmp	x24, x0
0000000000041b64	csel	x24, x0, x24, lo
0000000000041b68	cmp	x24, x19
0000000000041b6c	b.lo	0x41af8
0000000000041b70	ldur	x19, [x29, #-0xc8]
0000000000041b74	sub	x8, x19, #0x1
0000000000041b78	tst	x19, x8
0000000000041b7c	b.ne	0x41bc0
0000000000041b80	and	x21, x8, x20
0000000000041b84	ldur	x9, [x29, #-0xd0]
0000000000041b88	ldr	x8, [x9, x21, lsl #3]
0000000000041b8c	cbnz	x8, 0x41a90
0000000000041b90	ldur	x8, [x29, #-0xc0]
0000000000041b94	str	x8, [x23]
0000000000041b98	stur	x23, [x29, #-0xc0]
0000000000041b9c	str	x25, [x9, x21, lsl #3]
0000000000041ba0	ldr	x8, [x23]
0000000000041ba4	cbz	x8, 0x41c10
0000000000041ba8	ldr	x8, [x8, #0x8]
0000000000041bac	sub	x9, x19, #0x1
0000000000041bb0	tst	x19, x9
0000000000041bb4	b.ne	0x41bf4
0000000000041bb8	and	x8, x8, x9
0000000000041bbc	b	0x41c04
0000000000041bc0	cmp	x20, x19
0000000000041bc4	b.hs	0x41bdc
0000000000041bc8	mov	x21, x20
0000000000041bcc	ldur	x9, [x29, #-0xd0]
0000000000041bd0	ldr	x8, [x9, x21, lsl #3]
0000000000041bd4	cbnz	x8, 0x41a90
0000000000041bd8	b	0x41b90
0000000000041bdc	udiv	x8, x20, x19
0000000000041be0	msub	x21, x8, x19, x20
0000000000041be4	ldur	x9, [x29, #-0xd0]
0000000000041be8	ldr	x8, [x9, x21, lsl #3]
0000000000041bec	cbnz	x8, 0x41a90
0000000000041bf0	b	0x41b90
0000000000041bf4	cmp	x8, x19
0000000000041bf8	b.lo	0x41c04
0000000000041bfc	udiv	x9, x8, x19
0000000000041c00	msub	x8, x9, x19, x8
0000000000041c04	ldur	x9, [x29, #-0xd0]
0000000000041c08	add	x8, x9, x8, lsl #3
0000000000041c0c	str	x23, [x8]
0000000000041c10	ldur	x8, [x29, #-0xb8]
0000000000041c14	add	x8, x8, #0x1
0000000000041c18	stur	x8, [x29, #-0xb8]
0000000000041c1c	mov	x0, x22
0000000000041c20	bl	0x51bfc ; symbol stub for: _protocol_getName
0000000000041c24	sub	x1, x29, #0xa8
0000000000041c28	mov	x0, x22
0000000000041c2c	bl	0x51bf0 ; symbol stub for: _protocol_copyProtocolList
0000000000041c30	mov	x22, x0
0000000000041c34	cbz	x0, 0x41964
0000000000041c38	ldur	x1, [x29, #-0x88]
0000000000041c3c	ldur	w8, [x29, #-0xa8]
0000000000041c40	add	x3, x22, x8, lsl #3
0000000000041c44	sub	x0, x29, #0x90
0000000000041c48	mov	x2, x22
0000000000041c4c	bl	__ZNSt3__16vectorIP8ProtocolN6kotlin11std_support9allocatorIS2_EEE6insertIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueENS_11__wrap_iterIS9_EEE4typeENSF_IPKS2_EESB_SB_
0000000000041c50	b	0x4195c
0000000000041c54	mov	x0, x8
0000000000041c58	cbz	x0, 0x41c64
0000000000041c5c	stur	x0, [x29, #-0x88]
0000000000041c60	bl	0x51a64 ; symbol stub for: _free
0000000000041c64	ldur	x0, [x29, #-0xc0]
0000000000041c68	cbz	x0, 0x41c7c
0000000000041c6c	ldr	x19, [x0]
0000000000041c70	bl	0x51a64 ; symbol stub for: _free
0000000000041c74	mov	x0, x19
0000000000041c78	cbnz	x19, 0x41c6c
0000000000041c7c	ldur	x0, [x29, #-0xd0]
0000000000041c80	stur	xzr, [x29, #-0xd0]
0000000000041c84	cbz	x0, 0x41c8c
0000000000041c88	bl	0x51a64 ; symbol stub for: _free
0000000000041c8c	ldr	x8, [sp, #0x38]
0000000000041c90	ldr	x22, [x8, #0x30]
0000000000041c94	ldrsw	x23, [x8, #0x38]
0000000000041c98	stp	xzr, xzr, [sp, #0x70]
0000000000041c9c	str	xzr, [sp, #0x68]
0000000000041ca0	cbz	w23, 0x41cd8
0000000000041ca4	tbnz	w23, #0x1f, 0x42b14
0000000000041ca8	lsl	x24, x23, #3
0000000000041cac	mov	x0, x23
0000000000041cb0	mov	w1, #0x8
0000000000041cb4	bl	0x519e0 ; symbol stub for: _calloc
0000000000041cb8	stp	x0, x0, [sp, #0x68]
0000000000041cbc	add	x25, x0, x23, lsl #3
0000000000041cc0	str	x25, [sp, #0x78]
0000000000041cc4	mov	x1, x22
0000000000041cc8	mov	x2, x24
0000000000041ccc	bl	0x51aac ; symbol stub for: _memcpy
0000000000041cd0	str	x25, [sp, #0x70]
0000000000041cd4	b	0x41cdc
0000000000041cd8	mov	x25, #0x0
0000000000041cdc	mov	x19, #0xfffffffffffffff
0000000000041ce0	mov	x20, #0x1fffffffffffffff
0000000000041ce4	mov	x8, x25
0000000000041ce8	mov	x21, x25
0000000000041cec	ldr	x28, [sp, #0x38]
0000000000041cf0	cmp	x21, x8
0000000000041cf4	b.eq	0x41d10
0000000000041cf8	str	x28, [x21], #0x8
0000000000041cfc	str	x21, [sp, #0x70]
0000000000041d00	mov	x25, x21
0000000000041d04	ldr	x28, [x28, #0x18]
0000000000041d08	cbnz	x28, 0x41dcc
0000000000041d0c	b	0x41ddc
0000000000041d10	ldr	x22, [sp, #0x68]
0000000000041d14	sub	x8, x8, x22
0000000000041d18	asr	x21, x8, #3
0000000000041d1c	add	x9, x21, #0x1
0000000000041d20	lsr	x10, x9, #61
0000000000041d24	cbnz	x10, 0x42af0
0000000000041d28	asr	x8, x8, #2
0000000000041d2c	cmp	x8, x9
0000000000041d30	csel	x8, x9, x8, lo
0000000000041d34	cmp	x21, x19
0000000000041d38	csel	x23, x8, x20, lo
0000000000041d3c	cbz	x23, 0x41da0
0000000000041d40	mov	x0, x23
0000000000041d44	mov	w1, #0x8
0000000000041d48	bl	0x519e0 ; symbol stub for: _calloc
0000000000041d4c	mov	x24, x0
0000000000041d50	add	x21, x24, x21, lsl #3
0000000000041d54	sub	x2, x25, x22
0000000000041d58	sub	x25, x21, x2
0000000000041d5c	str	x28, [x21], #0x8
0000000000041d60	cmp	x2, #0x1
0000000000041d64	b.lt	0x41d74
0000000000041d68	mov	x0, x25
0000000000041d6c	mov	x1, x22
0000000000041d70	bl	0x51aac ; symbol stub for: _memcpy
0000000000041d74	add	x8, x24, x23, lsl #3
0000000000041d78	stp	x25, x21, [sp, #0x68]
0000000000041d7c	str	x8, [sp, #0x78]
0000000000041d80	cbz	x22, 0x41dc0
0000000000041d84	mov	x0, x22
0000000000041d88	bl	0x51a64 ; symbol stub for: _free
0000000000041d8c	ldr	x25, [sp, #0x70]
0000000000041d90	mov	x21, x25
0000000000041d94	ldr	x28, [x28, #0x18]
0000000000041d98	cbnz	x28, 0x41dcc
0000000000041d9c	b	0x41ddc
0000000000041da0	mov	x24, #0x0
0000000000041da4	add	x21, x24, x21, lsl #3
0000000000041da8	sub	x2, x25, x22
0000000000041dac	sub	x25, x21, x2
0000000000041db0	str	x28, [x21], #0x8
0000000000041db4	cmp	x2, #0x1
0000000000041db8	b.ge	0x41d68
0000000000041dbc	b	0x41d74
0000000000041dc0	mov	x25, x21
0000000000041dc4	ldr	x28, [x28, #0x18]
0000000000041dc8	cbz	x28, 0x41ddc
0000000000041dcc	ldr	x8, [sp, #0x78]
0000000000041dd0	cmp	x21, x8
0000000000041dd4	b.ne	0x41cf8
0000000000041dd8	b	0x41d10
0000000000041ddc	ldr	x23, [sp, #0x68]
0000000000041de0	cmp	x23, x21
0000000000041de4	str	x26, [sp, #0x60]
0000000000041de8	b.eq	0x42060
0000000000041dec	nop
0000000000041df0	ldr	x8, #0x16218 ; literal pool symbol address: _NSGenericException
0000000000041df4	mov	w25, #0x1
0000000000041df8	ldr	x8, [x8]
0000000000041dfc	str	x8, [sp, #0x40]
0000000000041e00	mov	x19, #0x2d69
0000000000041e04	movk	x19, #0xeb38, lsl #16
0000000000041e08	movk	x19, #0xea08, lsl #32
0000000000041e0c	movk	x19, #0x9ddf, lsl #48
0000000000041e10	b	0x41e20
0000000000041e14	add	x23, x23, #0x8
0000000000041e18	cmp	x23, x21
0000000000041e1c	b.eq	0x42064
0000000000041e20	ldr	x8, [x23]
0000000000041e24	ldr	x8, [x8, #0x60]
0000000000041e28	ldr	x20, [x8, #0x10]
0000000000041e2c	cbz	x20, 0x41e14
0000000000041e30	ldr	w8, [x20, #0x68]
0000000000041e34	cmp	w8, #0x1
0000000000041e38	b.lt	0x41e14
0000000000041e3c	mov	x22, #0x0
0000000000041e40	nop
0000000000041e44	ldr	x8, #0x28954 ; Objc selector ref: raise:format:
0000000000041e48	str	x8, [sp, #0x50]
0000000000041e4c	b	0x41e78
0000000000041e50	mov	x9, x26
0000000000041e54	mov	w25, #0x0
0000000000041e58	sxtw	x8, w8
0000000000041e5c	ldr	x10, [x27]
0000000000041e60	ldr	x9, [x9, #0x28]
0000000000041e64	str	x10, [x9, x8, lsl #3]
0000000000041e68	add	x22, x22, #0x1
0000000000041e6c	ldrsw	x8, [x20, #0x68]
0000000000041e70	cmp	x22, x8
0000000000041e74	b.ge	0x41e14
0000000000041e78	ldr	x28, [x20, #0x60]
0000000000041e7c	add	x24, x28, x22, lsl #5
0000000000041e80	ldr	x0, [x24]
0000000000041e84	bl	0x51cf8 ; symbol stub for: _sel_registerName
0000000000041e88	ldr	x8, [sp, #0xb8]
0000000000041e8c	cbz	x8, 0x41e68
0000000000041e90	lsr	x9, x0, #32
0000000000041e94	lsl	w10, w0, #3
0000000000041e98	add	x10, x10, #0x8
0000000000041e9c	eor	x10, x10, x9
0000000000041ea0	mul	x10, x10, x19
0000000000041ea4	eor	x9, x10, x9
0000000000041ea8	eor	x9, x9, x10, lsr #47
0000000000041eac	mul	x9, x9, x19
0000000000041eb0	eor	x9, x9, x9, lsr #47
0000000000041eb4	mul	x9, x9, x19
0000000000041eb8	fmov	d0, x8
0000000000041ebc	cnt.8b	v0, v0
0000000000041ec0	uaddlv.8b	h0, v0
0000000000041ec4	fmov	w10, s0
0000000000041ec8	cmp	x10, #0x1
0000000000041ecc	b.hi	0x41edc
0000000000041ed0	sub	x11, x8, #0x1
0000000000041ed4	and	x11, x11, x9
0000000000041ed8	b	0x41ef0
0000000000041edc	mov	x11, x9
0000000000041ee0	cmp	x9, x8
0000000000041ee4	b.lo	0x41ef0
0000000000041ee8	udiv	x11, x9, x8
0000000000041eec	msub	x11, x11, x8, x9
0000000000041ef0	ldr	x12, [sp, #0xb0]
0000000000041ef4	ldr	x12, [x12, x11, lsl #3]
0000000000041ef8	cbz	x12, 0x41e68
0000000000041efc	ldr	x12, [x12]
0000000000041f00	cbz	x12, 0x41e68
0000000000041f04	sub	x13, x8, #0x1
0000000000041f08	b	0x41f20
0000000000041f0c	ldr	x14, [x12, #0x10]
0000000000041f10	cmp	x14, x0
0000000000041f14	b.eq	0x41f58
0000000000041f18	ldr	x12, [x12]
0000000000041f1c	cbz	x12, 0x41e68
0000000000041f20	ldr	x14, [x12, #0x8]
0000000000041f24	cmp	x14, x9
0000000000041f28	b.eq	0x41f0c
0000000000041f2c	cmp	x10, #0x1
0000000000041f30	b.hi	0x41f3c
0000000000041f34	and	x14, x14, x13
0000000000041f38	b	0x41f4c
0000000000041f3c	cmp	x14, x8
0000000000041f40	b.lo	0x41f4c
0000000000041f44	udiv	x15, x14, x8
0000000000041f48	msub	x14, x15, x8, x14
0000000000041f4c	cmp	x14, x11
0000000000041f50	b.eq	0x41f18
0000000000041f54	b	0x41e68
0000000000041f58	add	x19, x28, x22, lsl #5
0000000000041f5c	mov	x27, x19
0000000000041f60	ldr	x8, [x27, #0x18]!
0000000000041f64	cbnz	x8, 0x41fc8
0000000000041f68	ldr	w8, [x19, #0x14]
0000000000041f6c	cmn	w8, #0x2
0000000000041f70	adr	x9, #0x25ba0 ; Objc cfstring ref: @"bad cfstring ref"
0000000000041f74	nop
0000000000041f78	adr	x10, #0x25bb8 ; Objc cfstring ref: @"bad cfstring ref"
0000000000041f7c	nop
0000000000041f80	csel	x9, x10, x9, eq
0000000000041f84	cmn	w8, #0x1
0000000000041f88	adr	x8, #0x25bc8 ; Objc cfstring ref: @"bad cfstring ref"
0000000000041f8c	nop
0000000000041f90	csel	x26, x8, x9, eq
0000000000041f94	nop
0000000000041f98	ldr	x25, #0x28900 ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000041f9c	ldr	x0, [sp, #0x48]
0000000000041fa0	bl	0x51a28 ; symbol stub for: _class_getName
0000000000041fa4	ldr	x8, [x24]
0000000000041fa8	stp	x8, x26, [sp, #0x8]
0000000000041fac	str	x0, [sp]
0000000000041fb0	mov	x0, x25
0000000000041fb4	ldr	x1, [sp, #0x50]
0000000000041fb8	ldr	x2, [sp, #0x40]
0000000000041fbc	adr	x3, #0x25bb4 ; Objc cfstring ref: @"bad cfstring ref"
0000000000041fc0	nop
0000000000041fc4	bl	0x51b78 ; Objc message: +[NSException raise:format:]
0000000000041fc8	ldrsw	x8, [x19, #0x14]
0000000000041fcc	cmn	w8, #0x1
0000000000041fd0	b.eq	0x41fe0
0000000000041fd4	ldr	x9, [x27]
0000000000041fd8	ldr	x10, [sp, #0x98]
0000000000041fdc	str	x9, [x10, x8, lsl #3]
0000000000041fe0	mov	w25, #0x0
0000000000041fe4	ldp	x8, x26, [sp, #0x58]
0000000000041fe8	mov	x19, #0x2d69
0000000000041fec	movk	x19, #0xeb38, lsl #16
0000000000041ff0	movk	x19, #0xea08, lsl #32
0000000000041ff4	movk	x19, #0x9ddf, lsl #48
0000000000041ff8	cbz	x8, 0x41e68
0000000000041ffc	add	x8, x28, x22, lsl #5
0000000000042000	ldr	w8, [x8, #0x10]
0000000000042004	cmn	w8, #0x1
0000000000042008	b.eq	0x41e68
000000000004200c	ldr	x14, [sp, #0x88]
0000000000042010	cbz	x14, 0x41e50
0000000000042014	add	x9, x28, x22, lsl #5
0000000000042018	ldr	w10, [x9, #0x8]
000000000004201c	mov	x9, x26
0000000000042020	mov	x11, x14
0000000000042024	mov	x12, x9
0000000000042028	ldr	w13, [x14, #0x20]
000000000004202c	cmp	w13, w10
0000000000042030	cset	w14, lt
0000000000042034	csel	x9, x9, x11, lt
0000000000042038	ldr	x14, [x11, w14, uxtw #3]
000000000004203c	cbnz	x14, 0x42020
0000000000042040	cmp	x9, x26
0000000000042044	b.eq	0x41e50
0000000000042048	cmp	w13, w10
000000000004204c	csel	x11, x12, x11, lt
0000000000042050	ldr	w11, [x11, #0x20]
0000000000042054	cmp	w11, w10
0000000000042058	b.gt	0x41e50
000000000004205c	b	0x41e54
0000000000042060	mov	w25, #0x1
0000000000042064	ldr	x0, [sp, #0x48]
0000000000042068	bl	0x51a28 ; symbol stub for: _class_getName
000000000004206c	mov	x23, x0
0000000000042070	mov	x20, x25
0000000000042074	ldp	x9, x8, [sp, #0x98]
0000000000042078	sub	x8, x8, x9
000000000004207c	add	x1, x8, #0x70
0000000000042080	mov	w0, #0x1
0000000000042084	bl	0x519e0 ; symbol stub for: _calloc
0000000000042088	mov	x22, x0
000000000004208c	str	x0, [x0]
0000000000042090	mov	w8, #0x8
0000000000042094	str	w8, [x0, #0x58]
0000000000042098	ldr	x9, [sp, #0x38]
000000000004209c	str	x9, [x0, #0x18]
00000000000420a0	ldr	w8, [x9, #0x14]
00000000000420a4	str	w8, [x0, #0x14]
00000000000420a8	ldr	x8, [x9, #0x20]
00000000000420ac	str	x8, [x0, #0x20]
00000000000420b0	ldr	w8, [x9, #0x28]
00000000000420b4	str	w8, [x0, #0x28]
00000000000420b8	ldrb	w8, [x9, #0x58]
00000000000420bc	tbz	w8, #0x0, 0x420c8
00000000000420c0	mov	w8, #0x9
00000000000420c4	str	w8, [x22, #0x58]
00000000000420c8	ldr	x9, [sp, #0x38]
00000000000420cc	ldr	w8, [x9, #0x5c]
00000000000420d0	str	w8, [x22, #0x5c]
00000000000420d4	ldr	x24, [x9, #0x30]
00000000000420d8	ldrsw	x25, [x9, #0x38]
00000000000420dc	stp	xzr, xzr, [x29, #-0xa0]
00000000000420e0	stur	xzr, [x29, #-0xa8]
00000000000420e4	cbz	w25, 0x42124
00000000000420e8	tbnz	w25, #0x1f, 0x42b20
00000000000420ec	lsl	x26, x25, #3
00000000000420f0	mov	x0, x25
00000000000420f4	mov	w1, #0x8
00000000000420f8	bl	0x519e0 ; symbol stub for: _calloc
00000000000420fc	mov	x21, x0
0000000000042100	add	x19, x0, x25, lsl #3
0000000000042104	stur	x0, [x29, #-0xa8]
0000000000042108	stur	x19, [x29, #-0x98]
000000000004210c	mov	x1, x24
0000000000042110	mov	x2, x26
0000000000042114	bl	0x51aac ; symbol stub for: _memcpy
0000000000042118	stur	x19, [x29, #-0xa0]
000000000004211c	ldr	x26, [sp, #0x60]
0000000000042120	b	0x4212c
0000000000042124	mov	x19, #0x0
0000000000042128	mov	x21, #0x0
000000000004212c	movi.16b	v0, #0x0
0000000000042130	sub	x8, x29, #0xd0
0000000000042134	str	q0, [x8, #0x10]
0000000000042138	stur	q0, [x29, #-0xd0]
000000000004213c	mov	w8, #0x3f800000
0000000000042140	stur	w8, [x29, #-0xb0]
0000000000042144	cmp	x21, x19
0000000000042148	ldr	x24, [sp, #0x58]
000000000004214c	mov	x25, x20
0000000000042150	b.eq	0x42170
0000000000042154	ldr	x1, [x21]
0000000000042158	sub	x0, x29, #0xd0
000000000004215c	mov	x2, x21
0000000000042160	bl	__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_
0000000000042164	add	x21, x21, #0x8
0000000000042168	cmp	x21, x19
000000000004216c	b.ne	0x42154
0000000000042170	ldp	x19, x20, [x29, #-0xa8]
0000000000042174	subs	x8, x20, x19
0000000000042178	asr	x21, x8, #3
000000000004217c	mov	x0, x21
0000000000042180	mov	w1, #0x8
0000000000042184	bl	0x519e0 ; symbol stub for: _calloc
0000000000042188	cmp	x20, x19
000000000004218c	b.ne	0x42198
0000000000042190	mov	x21, #0x0
0000000000042194	b	0x421b4
0000000000042198	mov	x8, #0x0
000000000004219c	lsl	x9, x8, #3
00000000000421a0	ldr	x10, [x19, x9]
00000000000421a4	str	x10, [x0, x9]
00000000000421a8	add	x8, x8, #0x1
00000000000421ac	cmp	x8, x21
00000000000421b0	b.lo	0x4219c
00000000000421b4	str	x0, [x22, #0x30]
00000000000421b8	str	w21, [x22, #0x38]
00000000000421bc	cbz	x24, 0x421d0
00000000000421c0	cbz	w25, 0x42554
00000000000421c4	ldr	w8, [sp, #0x34]
00000000000421c8	str	w8, [x22, #0x3c]
00000000000421cc	str	x24, [x22, #0x40]
00000000000421d0	str	xzr, [x22, #0x48]
00000000000421d4	mov	x0, x23
00000000000421d8	bl	0x51d34 ; symbol stub for: _strlen
00000000000421dc	mov	x24, x0
00000000000421e0	add	x21, x23, x0
00000000000421e4	stur	x23, [x29, #-0x90]
00000000000421e8	cmp	x0, #0x1
00000000000421ec	b.lt	0x42298
00000000000421f0	mov	w20, #0x0
00000000000421f4	mov	w19, #0x1
00000000000421f8	mov	w25, #0x34
00000000000421fc	mov	w26, #0xa
0000000000042200	b	0x42220
0000000000042204	ldur	x8, [x29, #-0x90]
0000000000042208	add	x8, x8, #0x1
000000000004220c	stur	x8, [x29, #-0x90]
0000000000042210	mov	w9, #0x1
0000000000042214	add	w20, w9, w20
0000000000042218	cmp	x8, x21
000000000004221c	b.hs	0x4229c
0000000000042220	stur	wzr, [x29, #-0x64]
0000000000042224	sub	x0, x29, #0x90
0000000000042228	sub	x2, x29, #0x64
000000000004222c	mov	x1, x21
0000000000042230	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
0000000000042234	lsl	w8, w19, w0
0000000000042238	tst	w8, w25
000000000004223c	b.ne	0x42204
0000000000042240	tst	w8, w26
0000000000042244	b.eq	0x42278
0000000000042248	ldur	x8, [x29, #-0x90]
000000000004224c	add	x9, x8, #0x1
0000000000042250	mov	x8, x9
0000000000042254	stur	x9, [x29, #-0x90]
0000000000042258	cmp	x9, x21
000000000004225c	b.hs	0x42210
0000000000042260	mov	x9, x8
0000000000042264	ldrb	w10, [x9], #0x1
0000000000042268	and	w10, w10, #0xc0
000000000004226c	cmp	w10, #0x80
0000000000042270	b.eq	0x42250
0000000000042274	b	0x42210
0000000000042278	ldurh	w9, [x29, #-0x62]
000000000004227c	ldur	x8, [x29, #-0x90]
0000000000042280	cmp	w9, #0x0
0000000000042284	cinc	w9, w19, ne
0000000000042288	add	w20, w9, w20
000000000004228c	cmp	x8, x21
0000000000042290	b.lo	0x42220
0000000000042294	b	0x4229c
0000000000042298	mov	w20, #0x0
000000000004229c	mov	w8, w20
00000000000422a0	lsl	x8, x8, #1
00000000000422a4	add	x0, x8, #0x10
00000000000422a8	mov	w19, #0x1
00000000000422ac	mov	w1, #0x1
00000000000422b0	bl	0x519e0 ; symbol stub for: _calloc
00000000000422b4	mov	x25, x0
00000000000422b8	adr	x8, #0x17428
00000000000422bc	nop
00000000000422c0	orr	x8, x8, #0x1
00000000000422c4	str	x8, [x0]
00000000000422c8	str	w20, [x0, #0x8]
00000000000422cc	stur	x23, [x29, #-0x90]
00000000000422d0	cbz	x24, 0x42390
00000000000422d4	add	x20, x25, #0x10
00000000000422d8	mov	w23, #0x34
00000000000422dc	mov	w24, #0xa
00000000000422e0	mov	w26, #-0x2840
00000000000422e4	b	0x4230c
00000000000422e8	add	w9, w26, w8, lsr #10
00000000000422ec	strh	w9, [x20]
00000000000422f0	mov	w9, #0xdc00
00000000000422f4	bfxil	w9, w8, #0, #10
00000000000422f8	strh	w9, [x20, #0x2]
00000000000422fc	add	x20, x20, #0x4
0000000000042300	ldur	x8, [x29, #-0x90]
0000000000042304	cmp	x8, x21
0000000000042308	b.eq	0x42390
000000000004230c	stur	wzr, [x29, #-0x64]
0000000000042310	sub	x0, x29, #0x90
0000000000042314	sub	x2, x29, #0x64
0000000000042318	mov	x1, x21
000000000004231c	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
0000000000042320	lsl	w8, w19, w0
0000000000042324	tst	w8, w23
0000000000042328	b.eq	0x4233c
000000000004232c	ldur	x8, [x29, #-0x90]
0000000000042330	add	x8, x8, #0x1
0000000000042334	stur	x8, [x29, #-0x90]
0000000000042338	b	0x42368
000000000004233c	tst	w8, w24
0000000000042340	b.eq	0x42380
0000000000042344	ldur	x8, [x29, #-0x90]
0000000000042348	add	x8, x8, #0x1
000000000004234c	stur	x8, [x29, #-0x90]
0000000000042350	cmp	x8, x21
0000000000042354	b.hs	0x42368
0000000000042358	ldrb	w9, [x8], #0x1
000000000004235c	and	w9, w9, #0xc0
0000000000042360	cmp	w9, #0x80
0000000000042364	b.eq	0x4234c
0000000000042368	mov	w8, #0xfffd
000000000004236c	strh	w8, [x20], #0x2
0000000000042370	ldur	x8, [x29, #-0x90]
0000000000042374	cmp	x8, x21
0000000000042378	b.ne	0x4230c
000000000004237c	b	0x42390
0000000000042380	ldur	w8, [x29, #-0x64]
0000000000042384	cmp	w8, #0x10, lsl #12
0000000000042388	b.lo	0x4236c
000000000004238c	b	0x422e8
0000000000042390	str	x25, [x22, #0x50]
0000000000042394	mov	w0, #0x1
0000000000042398	mov	w1, #0x18
000000000004239c	bl	0x519e0 ; symbol stub for: _calloc
00000000000423a0	str	x0, [x22, #0x60]
00000000000423a4	ldp	x8, x9, [sp, #0x98]
00000000000423a8	subs	x11, x9, x8
00000000000423ac	b.eq	0x423d4
00000000000423b0	mov	x9, #0x0
00000000000423b4	add	x10, x22, #0x70
00000000000423b8	asr	x11, x11, #3
00000000000423bc	lsl	x12, x9, #3
00000000000423c0	ldr	x13, [x8, x12]
00000000000423c4	str	x13, [x10, x12]
00000000000423c8	add	x9, x9, #0x1
00000000000423cc	cmp	x9, x11
00000000000423d0	b.lo	0x423bc
00000000000423d4	ldur	x0, [x29, #-0xc0]
00000000000423d8	ldr	x20, [sp, #0x48]
00000000000423dc	cbz	x0, 0x423f0
00000000000423e0	ldr	x19, [x0]
00000000000423e4	bl	0x51a64 ; symbol stub for: _free
00000000000423e8	mov	x0, x19
00000000000423ec	cbnz	x19, 0x423e0
00000000000423f0	ldur	x0, [x29, #-0xd0]
00000000000423f4	stur	xzr, [x29, #-0xd0]
00000000000423f8	cbz	x0, 0x42400
00000000000423fc	bl	0x51a64 ; symbol stub for: _free
0000000000042400	ldur	x0, [x29, #-0xa8]
0000000000042404	cbz	x0, 0x42410
0000000000042408	stur	x0, [x29, #-0xa0]
000000000004240c	bl	0x51a64 ; symbol stub for: _free
0000000000042410	ldr	x8, [x22, #0x60]
0000000000042414	str	x20, [x8, #0x8]
0000000000042418	ldr	x0, [sp, #0x68]
000000000004241c	cbz	x0, 0x42428
0000000000042420	str	x0, [sp, #0x70]
0000000000042424	bl	0x51a64 ; symbol stub for: _free
0000000000042428	ldr	x0, [sp, #0x88]
000000000004242c	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
0000000000042430	ldr	x0, [sp, #0x98]
0000000000042434	adrp	x20, 42 ; 0x6c000
0000000000042438	add	x20, x20, #0xbb0
000000000004243c	cbz	x0, 0x42448
0000000000042440	str	x0, [sp, #0xa0]
0000000000042444	bl	0x51a64 ; symbol stub for: _free
0000000000042448	ldr	x0, [sp, #0xc0]
000000000004244c	cbz	x0, 0x42460
0000000000042450	ldr	x19, [x0]
0000000000042454	bl	0x51a64 ; symbol stub for: _free
0000000000042458	mov	x0, x19
000000000004245c	cbnz	x19, 0x42450
0000000000042460	ldr	x0, [sp, #0xb0]
0000000000042464	str	xzr, [sp, #0xb0]
0000000000042468	cbz	x0, 0x42470
000000000004246c	bl	0x51a64 ; symbol stub for: _free
0000000000042470	ldr	x8, [sp, #0x28]
0000000000042474	cbz	x8, 0x424ac
0000000000042478	add	x0, x8, #0x138
000000000004247c	ldr	x10, [sp, #0x18]
0000000000042480	ldaxr	w8, [x0]
0000000000042484	stlxr	w9, w10, [x0]
0000000000042488	cbnz	w9, 0x42480
000000000004248c	cbnz	w10, 0x424ac
0000000000042490	cmp	w8, #0x1
0000000000042494	b.ne	0x424ac
0000000000042498	adr	x8, #0x445ab
000000000004249c	nop
00000000000424a0	ldarb	w8, [x8]
00000000000424a4	tbz	w8, #0x0, 0x424ac
00000000000424a8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000424ac	stur	x22, [x29, #-0xd0]
00000000000424b0	mov	x0, x20
00000000000424b4	ldr	x8, [sp, #0x20]
00000000000424b8	blr	x8
00000000000424bc	ldr	x21, [x0]
00000000000424c0	cbz	x21, 0x424dc
00000000000424c4	add	x8, x21, #0x138
00000000000424c8	mov	w9, #0x1
00000000000424cc	ldaxr	w20, [x8]
00000000000424d0	stlxr	w10, w9, [x8]
00000000000424d4	cbnz	w10, 0x424cc
00000000000424d8	b	0x424e0
00000000000424dc	mov	w20, #0x1
00000000000424e0	nop
00000000000424e4	ldr	x0, #0x283bc ; Objc class ref: _OBJC_CLASS_$_NSValue
00000000000424e8	bl	0x51b00 ; symbol stub for: _objc_alloc
00000000000424ec	nop
00000000000424f0	ldr	x1, #0x28188 ; Objc selector ref: initWithBytes:objCType:
00000000000424f4	adr	x3, #0x1451d ; literal pool for: "^v"
00000000000424f8	nop
00000000000424fc	sub	x2, x29, #0xd0
0000000000042500	bl	0x51b78 ; Objc message: +[NSValue initWithBytes:objCType:]
0000000000042504	mov	x2, x0
0000000000042508	adr	x1, #0x44542
000000000004250c	nop
0000000000042510	ldr	x0, [sp, #0x48]
0000000000042514	mov	x3, #0x0
0000000000042518	bl	0x51bcc ; symbol stub for: _objc_setAssociatedObject
000000000004251c	cbz	x21, 0x412c4
0000000000042520	add	x0, x21, #0x138
0000000000042524	ldaxr	w8, [x0]
0000000000042528	stlxr	w9, w20, [x0]
000000000004252c	cbnz	w9, 0x42524
0000000000042530	cbnz	w20, 0x412c4
0000000000042534	cmp	w8, #0x1
0000000000042538	b.ne	0x412c4
000000000004253c	adr	x8, #0x44507
0000000000042540	nop
0000000000042544	ldarb	w8, [x8]
0000000000042548	tbz	w8, #0x0, 0x412c4
000000000004254c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042550	b	0x412c4
0000000000042554	ldr	x24, [sp, #0x80]
0000000000042558	movi.16b	v0, #0x0
000000000004255c	sub	x8, x29, #0xd0
0000000000042560	stp	q0, q0, [x8, #0x40]
0000000000042564	mov	w25, #0x1
0000000000042568	cmp	x24, x26
000000000004256c	b.eq	0x42878
0000000000042570	mov	x8, x24
0000000000042574	b	0x42584
0000000000042578	mov	x8, x10
000000000004257c	cmp	x8, x26
0000000000042580	b.eq	0x42874
0000000000042584	ldurb	w9, [x29, #-0x90]
0000000000042588	cbnz	w9, 0x425d8
000000000004258c	sturb	w25, [x29, #-0x90]
0000000000042590	ldr	x9, [x8, #0x8]
0000000000042594	cbz	x9, 0x425a8
0000000000042598	mov	x8, x9
000000000004259c	ldr	x9, [x9]
00000000000425a0	cbnz	x9, 0x42598
00000000000425a4	b	0x4257c
00000000000425a8	mov	x9, x8
00000000000425ac	ldr	x10, [x9, #0x10]!
00000000000425b0	ldr	x11, [x10]
00000000000425b4	cmp	x11, x8
00000000000425b8	b.eq	0x42578
00000000000425bc	ldr	x10, [x9]
00000000000425c0	mov	x9, x10
00000000000425c4	ldr	x8, [x9, #0x10]!
00000000000425c8	ldr	x11, [x8]
00000000000425cc	cmp	x11, x10
00000000000425d0	b.ne	0x425bc
00000000000425d4	b	0x4257c
00000000000425d8	movi.16b	v0, #0x0
00000000000425dc	sub	x8, x29, #0xd0
00000000000425e0	stp	q0, q0, [x8, #0x40]
00000000000425e4	mov	w25, #0x1
00000000000425e8	cmp	x24, x26
00000000000425ec	b.eq	0x42878
00000000000425f0	sub	x8, x29, #0x90
00000000000425f4	mov	x9, x24
00000000000425f8	b	0x42608
00000000000425fc	mov	x9, x11
0000000000042600	cmp	x9, x26
0000000000042604	b.eq	0x42708
0000000000042608	ldr	w10, [x9, #0x20]
000000000004260c	sub	x11, x29, #0x90
0000000000042610	bfxil	x11, x10, #0, #1
0000000000042614	ldrb	w11, [x11]
0000000000042618	cbnz	w11, 0x42670
000000000004261c	and	x10, x10, #0x1
0000000000042620	orr	x10, x8, x10
0000000000042624	strb	w25, [x10]
0000000000042628	ldr	x10, [x9, #0x8]
000000000004262c	cbz	x10, 0x42640
0000000000042630	mov	x9, x10
0000000000042634	ldr	x10, [x10]
0000000000042638	cbnz	x10, 0x42630
000000000004263c	b	0x42600
0000000000042640	mov	x10, x9
0000000000042644	ldr	x11, [x10, #0x10]!
0000000000042648	ldr	x12, [x11]
000000000004264c	cmp	x12, x9
0000000000042650	b.eq	0x425fc
0000000000042654	ldr	x11, [x10]
0000000000042658	mov	x10, x11
000000000004265c	ldr	x9, [x10, #0x10]!
0000000000042660	ldr	x12, [x9]
0000000000042664	cmp	x12, x11
0000000000042668	b.ne	0x42654
000000000004266c	b	0x42600
0000000000042670	movi.16b	v0, #0x0
0000000000042674	sub	x8, x29, #0xd0
0000000000042678	stp	q0, q0, [x8, #0x40]
000000000004267c	mov	w25, #0x1
0000000000042680	cmp	x24, x26
0000000000042684	b.eq	0x42878
0000000000042688	sub	x8, x29, #0x90
000000000004268c	mov	x9, x24
0000000000042690	b	0x426a0
0000000000042694	mov	x9, x11
0000000000042698	cmp	x9, x26
000000000004269c	b.eq	0x427ac
00000000000426a0	ldr	w10, [x9, #0x20]
00000000000426a4	sub	x11, x29, #0x90
00000000000426a8	bfxil	x11, x10, #0, #2
00000000000426ac	ldrb	w11, [x11]
00000000000426b0	cbnz	w11, 0x42710
00000000000426b4	and	x10, x10, #0x3
00000000000426b8	orr	x10, x8, x10
00000000000426bc	strb	w25, [x10]
00000000000426c0	ldr	x10, [x9, #0x8]
00000000000426c4	cbz	x10, 0x426d8
00000000000426c8	mov	x9, x10
00000000000426cc	ldr	x10, [x10]
00000000000426d0	cbnz	x10, 0x426c8
00000000000426d4	b	0x42698
00000000000426d8	mov	x10, x9
00000000000426dc	ldr	x11, [x10, #0x10]!
00000000000426e0	ldr	x12, [x11]
00000000000426e4	cmp	x12, x9
00000000000426e8	b.eq	0x42694
00000000000426ec	ldr	x11, [x10]
00000000000426f0	mov	x10, x11
00000000000426f4	ldr	x9, [x10, #0x10]!
00000000000426f8	ldr	x12, [x9]
00000000000426fc	cmp	x12, x11
0000000000042700	b.ne	0x426ec
0000000000042704	b	0x42698
0000000000042708	mov	w25, #0x2
000000000004270c	b	0x42878
0000000000042710	movi.16b	v0, #0x0
0000000000042714	sub	x8, x29, #0xd0
0000000000042718	stp	q0, q0, [x8, #0x40]
000000000004271c	mov	w8, #0x1
0000000000042720	cmp	x24, x26
0000000000042724	b.eq	0x42874
0000000000042728	sub	x9, x29, #0x90
000000000004272c	mov	x10, x24
0000000000042730	b	0x42744
0000000000042734	mov	x10, x12
0000000000042738	mov	w25, #0x8
000000000004273c	cmp	x10, x26
0000000000042740	b.eq	0x42878
0000000000042744	ldr	w11, [x10, #0x20]
0000000000042748	sub	x12, x29, #0x90
000000000004274c	bfxil	x12, x11, #0, #3
0000000000042750	ldrb	w12, [x12]
0000000000042754	cbnz	w12, 0x427b4
0000000000042758	and	x11, x11, #0x7
000000000004275c	orr	x11, x9, x11
0000000000042760	strb	w8, [x11]
0000000000042764	ldr	x11, [x10, #0x8]
0000000000042768	cbz	x11, 0x4277c
000000000004276c	mov	x10, x11
0000000000042770	ldr	x11, [x11]
0000000000042774	cbnz	x11, 0x4276c
0000000000042778	b	0x42738
000000000004277c	mov	x11, x10
0000000000042780	ldr	x12, [x11, #0x10]!
0000000000042784	ldr	x13, [x12]
0000000000042788	cmp	x13, x10
000000000004278c	b.eq	0x42734
0000000000042790	ldr	x12, [x11]
0000000000042794	mov	x11, x12
0000000000042798	ldr	x10, [x11, #0x10]!
000000000004279c	ldr	x13, [x10]
00000000000427a0	cmp	x13, x12
00000000000427a4	b.ne	0x42790
00000000000427a8	b	0x42738
00000000000427ac	mov	w25, #0x4
00000000000427b0	b	0x42878
00000000000427b4	movi.16b	v0, #0x0
00000000000427b8	sub	x8, x29, #0xd0
00000000000427bc	stp	q0, q0, [x8, #0x40]
00000000000427c0	mov	w8, #0x1
00000000000427c4	cmp	x24, x26
00000000000427c8	b.eq	0x42874
00000000000427cc	sub	x9, x29, #0x90
00000000000427d0	mov	x10, x24
00000000000427d4	b	0x427e8
00000000000427d8	mov	x10, x12
00000000000427dc	mov	w25, #0x10
00000000000427e0	cmp	x10, x26
00000000000427e4	b.eq	0x42878
00000000000427e8	ldr	w11, [x10, #0x20]
00000000000427ec	sub	x12, x29, #0x90
00000000000427f0	bfxil	x12, x11, #0, #4
00000000000427f4	ldrb	w12, [x12]
00000000000427f8	cbnz	w12, 0x42850
00000000000427fc	and	x11, x11, #0xf
0000000000042800	orr	x11, x9, x11
0000000000042804	strb	w8, [x11]
0000000000042808	ldr	x11, [x10, #0x8]
000000000004280c	cbz	x11, 0x42820
0000000000042810	mov	x10, x11
0000000000042814	ldr	x11, [x11]
0000000000042818	cbnz	x11, 0x42810
000000000004281c	b	0x427dc
0000000000042820	mov	x11, x10
0000000000042824	ldr	x12, [x11, #0x10]!
0000000000042828	ldr	x13, [x12]
000000000004282c	cmp	x13, x10
0000000000042830	b.eq	0x427d8
0000000000042834	ldr	x12, [x11]
0000000000042838	mov	x11, x12
000000000004283c	ldr	x10, [x11, #0x10]!
0000000000042840	ldr	x13, [x10]
0000000000042844	cmp	x13, x12
0000000000042848	b.ne	0x42834
000000000004284c	b	0x427dc
0000000000042850	movi.16b	v0, #0x0
0000000000042854	sub	x8, x29, #0xd0
0000000000042858	stp	q0, q0, [x8, #0x40]
000000000004285c	mov	w8, #0x1
0000000000042860	cmp	x24, x26
0000000000042864	b.eq	0x42874
0000000000042868	sub	x9, x29, #0x90
000000000004286c	mov	x10, x24
0000000000042870	b	0x42918
0000000000042874	mov	w25, #0x1
0000000000042878	ldr	w19, [sp, #0x90]
000000000004287c	mov	w20, #0x1
0000000000042880	sxtw	x0, w25
0000000000042884	mov	w1, #0x10
0000000000042888	bl	0x519e0 ; symbol stub for: _calloc
000000000004288c	mov	x21, x0
0000000000042890	str	x0, [x22, #0x40]
0000000000042894	tbz	w20, #0x0, 0x42998
0000000000042898	sub	w8, w25, #0x1
000000000004289c	str	w8, [x22, #0x3c]
00000000000428a0	b	0x428a8
00000000000428a4	mov	x24, x10
00000000000428a8	cmp	x24, x26
00000000000428ac	b.eq	0x42a14
00000000000428b0	ldr	w9, [x24, #0x20]
00000000000428b4	and	w10, w9, w8
00000000000428b8	sbfiz	x10, x10, #4, #32
00000000000428bc	str	w9, [x21, x10]
00000000000428c0	ldr	x9, [x24, #0x8]
00000000000428c4	cbz	x9, 0x428d8
00000000000428c8	mov	x24, x9
00000000000428cc	ldr	x9, [x9]
00000000000428d0	cbnz	x9, 0x428c8
00000000000428d4	b	0x428a8
00000000000428d8	mov	x9, x24
00000000000428dc	ldr	x10, [x9, #0x10]!
00000000000428e0	ldr	x11, [x10]
00000000000428e4	cmp	x11, x24
00000000000428e8	b.eq	0x428a4
00000000000428ec	ldr	x10, [x9]
00000000000428f0	mov	x9, x10
00000000000428f4	ldr	x24, [x9, #0x10]!
00000000000428f8	ldr	x11, [x24]
00000000000428fc	cmp	x11, x10
0000000000042900	b.ne	0x428ec
0000000000042904	b	0x428a8
0000000000042908	mov	x10, x12
000000000004290c	mov	w25, #0x20
0000000000042910	cmp	x10, x26
0000000000042914	b.eq	0x42878
0000000000042918	ldr	w11, [x10, #0x20]
000000000004291c	and	x11, x11, #0x1f
0000000000042920	ldrb	w12, [x9, x11]
0000000000042924	cbnz	w12, 0x42974
0000000000042928	strb	w8, [x9, x11]
000000000004292c	ldr	x11, [x10, #0x8]
0000000000042930	cbz	x11, 0x42944
0000000000042934	mov	x10, x11
0000000000042938	ldr	x11, [x11]
000000000004293c	cbnz	x11, 0x42934
0000000000042940	b	0x4290c
0000000000042944	mov	x11, x10
0000000000042948	ldr	x12, [x11, #0x10]!
000000000004294c	ldr	x13, [x12]
0000000000042950	cmp	x13, x10
0000000000042954	b.eq	0x42908
0000000000042958	ldr	x12, [x11]
000000000004295c	mov	x11, x12
0000000000042960	ldr	x10, [x11, #0x10]!
0000000000042964	ldr	x13, [x10]
0000000000042968	cmp	x13, x12
000000000004296c	b.ne	0x42958
0000000000042970	b	0x4290c
0000000000042974	mov	w20, #0x0
0000000000042978	ldr	w19, [sp, #0x90]
000000000004297c	mov	x25, x19
0000000000042980	sxtw	x0, w25
0000000000042984	mov	w1, #0x10
0000000000042988	bl	0x519e0 ; symbol stub for: _calloc
000000000004298c	mov	x21, x0
0000000000042990	str	x0, [x22, #0x40]
0000000000042994	tbnz	w20, #0x0, 0x42898
0000000000042998	neg	w8, w19
000000000004299c	str	w8, [x22, #0x3c]
00000000000429a0	cmp	x24, x26
00000000000429a4	b.eq	0x42a14
00000000000429a8	mov	x8, #0x0
00000000000429ac	b	0x429c0
00000000000429b0	mov	x24, x10
00000000000429b4	add	x8, x8, #0x1
00000000000429b8	cmp	x24, x26
00000000000429bc	b.eq	0x42a14
00000000000429c0	ldr	w9, [x24, #0x20]
00000000000429c4	lsl	x10, x8, #4
00000000000429c8	str	w9, [x21, x10]
00000000000429cc	ldr	x9, [x24, #0x8]
00000000000429d0	cbz	x9, 0x429e4
00000000000429d4	mov	x24, x9
00000000000429d8	ldr	x9, [x9]
00000000000429dc	cbnz	x9, 0x429d4
00000000000429e0	b	0x429b4
00000000000429e4	mov	x9, x24
00000000000429e8	ldr	x10, [x9, #0x10]!
00000000000429ec	ldr	x11, [x10]
00000000000429f0	cmp	x11, x24
00000000000429f4	b.eq	0x429b0
00000000000429f8	ldr	x10, [x9]
00000000000429fc	mov	x9, x10
0000000000042a00	ldr	x24, [x9, #0x10]!
0000000000042a04	ldr	x11, [x24]
0000000000042a08	cmp	x11, x10
0000000000042a0c	b.ne	0x429f8
0000000000042a10	b	0x429b4
0000000000042a14	cmp	w25, #0x1
0000000000042a18	b.lt	0x421d0
0000000000042a1c	mov	x19, #0x0
0000000000042a20	mov	w20, w25
0000000000042a24	ldr	x24, [sp, #0x88]
0000000000042a28	b	0x42a4c
0000000000042a2c	mov	x0, #0x0
0000000000042a30	add	x8, x21, x19, lsl #4
0000000000042a34	str	x0, [x8, #0x8]
0000000000042a38	str	w26, [x8, #0x4]
0000000000042a3c	ldr	x26, [sp, #0x60]
0000000000042a40	add	x19, x19, #0x1
0000000000042a44	cmp	x19, x20
0000000000042a48	b.eq	0x421d0
0000000000042a4c	lsl	x8, x19, #4
0000000000042a50	ldr	w8, [x21, x8]
0000000000042a54	cbz	w8, 0x42a40
0000000000042a58	cbz	x24, 0x42aa0
0000000000042a5c	mov	x25, x26
0000000000042a60	mov	x12, x24
0000000000042a64	mov	x9, x12
0000000000042a68	mov	x10, x25
0000000000042a6c	ldr	w11, [x12, #0x20]
0000000000042a70	cmp	w11, w8
0000000000042a74	cset	w12, lt
0000000000042a78	csel	x25, x25, x9, lt
0000000000042a7c	ldr	x12, [x9, w12, uxtw #3]
0000000000042a80	cbnz	x12, 0x42a64
0000000000042a84	cmp	x25, x26
0000000000042a88	b.eq	0x42aa0
0000000000042a8c	cmp	w11, w8
0000000000042a90	csel	x9, x10, x9, lt
0000000000042a94	ldr	w9, [x9, #0x20]
0000000000042a98	cmp	w8, w9
0000000000042a9c	b.ge	0x42aa4
0000000000042aa0	mov	x25, x26
0000000000042aa4	ldp	x9, x8, [x25, #0x28]
0000000000042aa8	sub	x27, x8, x9
0000000000042aac	lsr	x26, x27, #3
0000000000042ab0	cbz	w26, 0x42a2c
0000000000042ab4	sbfx	x0, x27, #3, #32
0000000000042ab8	mov	w1, #0x8
0000000000042abc	bl	0x519e0 ; symbol stub for: _calloc
0000000000042ac0	cmp	w26, #0x1
0000000000042ac4	b.lt	0x42a30
0000000000042ac8	mov	x8, #0x0
0000000000042acc	ubfx	x9, x27, #3, #32
0000000000042ad0	lsl	x9, x9, #3
0000000000042ad4	ldr	x10, [x25, #0x28]
0000000000042ad8	ldr	x10, [x10, x8]
0000000000042adc	str	x10, [x0, x8]
0000000000042ae0	add	x8, x8, #0x8
0000000000042ae4	cmp	x9, x8
0000000000042ae8	b.ne	0x42ad4
0000000000042aec	b	0x42a30
0000000000042af0	add	x0, sp, #0x68
0000000000042af4	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000042af8	b	0x42b28
0000000000042afc	sub	x0, x29, #0xd0
0000000000042b00	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000042b04	b	0x42b28
0000000000042b08	add	x0, sp, #0x98
0000000000042b0c	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000042b10	b	0x42b28
0000000000042b14	add	x0, sp, #0x68
0000000000042b18	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000042b1c	b	0x42b28
0000000000042b20	sub	x0, x29, #0xa8
0000000000042b24	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000042b28	brk	#0x1
0000000000042b2c	mov	x19, x0
0000000000042b30	b	0x42c70
0000000000042b34	b	0x42c8c
0000000000042b38	b	0x42c1c
0000000000042b3c	mov	x19, x0
0000000000042b40	b	0x42ca8
0000000000042b44	b	0x42c8c
0000000000042b48	b	0x42c1c
0000000000042b4c	mov	x19, x0
0000000000042b50	b	0x42cb8
0000000000042b54	mov	x19, x0
0000000000042b58	cbnz	x23, 0x42b8c
0000000000042b5c	ldur	x0, [x29, #-0x90]
0000000000042b60	cbnz	x0, 0x42c28
0000000000042b64	ldur	x0, [x29, #-0xc0]
0000000000042b68	cbz	x0, 0x42b7c
0000000000042b6c	ldr	x20, [x0]
0000000000042b70	bl	0x51a64 ; symbol stub for: _free
0000000000042b74	mov	x0, x20
0000000000042b78	cbnz	x20, 0x42b6c
0000000000042b7c	ldur	x0, [x29, #-0xd0]
0000000000042b80	stur	xzr, [x29, #-0xd0]
0000000000042b84	cbnz	x0, 0x42c9c
0000000000042b88	b	0x42ca0
0000000000042b8c	mov	x0, x23
0000000000042b90	bl	0x51a64 ; symbol stub for: _free
0000000000042b94	ldur	x0, [x29, #-0x90]
0000000000042b98	cbz	x0, 0x42b64
0000000000042b9c	b	0x42c28
0000000000042ba0	mov	x19, x0
0000000000042ba4	cbz	x21, 0x42ce8
0000000000042ba8	add	x0, x21, #0x138
0000000000042bac	ldaxr	w8, [x0]
0000000000042bb0	stlxr	w9, w20, [x0]
0000000000042bb4	cbnz	w9, 0x42bac
0000000000042bb8	cbnz	w20, 0x42ce8
0000000000042bbc	cmp	w8, #0x1
0000000000042bc0	b.ne	0x42ce8
0000000000042bc4	adr	x8, #0x43e7f
0000000000042bc8	nop
0000000000042bcc	ldarb	w8, [x8]
0000000000042bd0	tbnz	w8, #0x0, 0x42d30
0000000000042bd4	b	0x42ce8
0000000000042bd8	mov	x19, x0
0000000000042bdc	cbz	x23, 0x42cb8
0000000000042be0	mov	x0, x23
0000000000042be4	b	0x42cb4
0000000000042be8	mov	x19, x0
0000000000042bec	ldur	x0, [x29, #-0xd0]
0000000000042bf0	cbz	x0, 0x42ca0
0000000000042bf4	stur	x0, [x29, #-0xc8]
0000000000042bf8	b	0x42c9c
0000000000042bfc	mov	x19, x0
0000000000042c00	adr	x8, #0x43e4b
0000000000042c04	nop
0000000000042c08	stlrb	wzr, [x8]
0000000000042c0c	mov	x0, x19
0000000000042c10	bl	0x517a0 ; symbol stub for: __Unwind_Resume
0000000000042c14	b	0x42c1c
0000000000042c18	b	0x42c1c
0000000000042c1c	mov	x19, x0
0000000000042c20	ldur	x0, [x29, #-0x90]
0000000000042c24	cbz	x0, 0x42b64
0000000000042c28	stur	x0, [x29, #-0x88]
0000000000042c2c	bl	0x51a64 ; symbol stub for: _free
0000000000042c30	ldur	x0, [x29, #-0xc0]
0000000000042c34	cbnz	x0, 0x42b6c
0000000000042c38	b	0x42b7c
0000000000042c3c	b	0x42c8c
0000000000042c40	b	0x42c8c
0000000000042c44	mov	x19, x0
0000000000042c48	ldur	x0, [x29, #-0xc0]
0000000000042c4c	cbz	x0, 0x42c60
0000000000042c50	ldr	x20, [x0]
0000000000042c54	bl	0x51a64 ; symbol stub for: _free
0000000000042c58	mov	x0, x20
0000000000042c5c	cbnz	x20, 0x42c50
0000000000042c60	ldur	x0, [x29, #-0xd0]
0000000000042c64	stur	xzr, [x29, #-0xd0]
0000000000042c68	cbz	x0, 0x42c70
0000000000042c6c	bl	0x51a64 ; symbol stub for: _free
0000000000042c70	ldur	x0, [x29, #-0xa8]
0000000000042c74	cbz	x0, 0x42c90
0000000000042c78	stur	x0, [x29, #-0xa0]
0000000000042c7c	bl	0x51a64 ; symbol stub for: _free
0000000000042c80	b	0x42c90
0000000000042c84	mov	x19, x0
0000000000042c88	b	0x42cb8
0000000000042c8c	mov	x19, x0
0000000000042c90	ldr	x0, [sp, #0x68]
0000000000042c94	cbz	x0, 0x42ca0
0000000000042c98	str	x0, [sp, #0x70]
0000000000042c9c	bl	0x51a64 ; symbol stub for: _free
0000000000042ca0	ldr	x0, [sp, #0x88]
0000000000042ca4	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
0000000000042ca8	ldr	x0, [sp, #0x98]
0000000000042cac	cbz	x0, 0x42cb8
0000000000042cb0	str	x0, [sp, #0xa0]
0000000000042cb4	bl	0x51a64 ; symbol stub for: _free
0000000000042cb8	ldr	x0, [sp, #0xc0]
0000000000042cbc	cbz	x0, 0x42cd0
0000000000042cc0	ldr	x20, [x0]
0000000000042cc4	bl	0x51a64 ; symbol stub for: _free
0000000000042cc8	mov	x0, x20
0000000000042ccc	cbnz	x20, 0x42cc0
0000000000042cd0	ldr	x0, [sp, #0xb0]
0000000000042cd4	str	xzr, [sp, #0xb0]
0000000000042cd8	cbz	x0, 0x42ce0
0000000000042cdc	bl	0x51a64 ; symbol stub for: _free
0000000000042ce0	ldr	x8, [sp, #0x28]
0000000000042ce4	cbnz	x8, 0x42cfc
0000000000042ce8	adr	x8, #0x43d63
0000000000042cec	nop
0000000000042cf0	stlrb	wzr, [x8]
0000000000042cf4	mov	x0, x19
0000000000042cf8	bl	0x517a0 ; symbol stub for: __Unwind_Resume
0000000000042cfc	ldr	x8, [sp, #0x28]
0000000000042d00	add	x0, x8, #0x138
0000000000042d04	ldr	x10, [sp, #0x18]
0000000000042d08	ldaxr	w8, [x0]
0000000000042d0c	stlxr	w9, w10, [x0]
0000000000042d10	cbnz	w9, 0x42d08
0000000000042d14	cbnz	w10, 0x42ce8
0000000000042d18	cmp	w8, #0x1
0000000000042d1c	b.ne	0x42ce8
0000000000042d20	adr	x8, #0x43d23
0000000000042d24	nop
0000000000042d28	ldarb	w8, [x8]
0000000000042d2c	tbz	w8, #0x0, 0x42ce8
0000000000042d30	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042d34	adr	x8, #0x43d17
0000000000042d38	nop
0000000000042d3c	stlrb	wzr, [x8]
0000000000042d40	mov	x0, x19
0000000000042d44	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZN6kotlin8SpinLockILNS_24MutexThreadStateHandlingE1EE4lockEv:
0000000000042d48	stp	x22, x21, [sp, #-0x30]!
0000000000042d4c	stp	x20, x19, [sp, #0x10]
0000000000042d50	stp	x29, x30, [sp, #0x20]
0000000000042d54	add	x29, sp, #0x20
0000000000042d58	mov	x19, x0
0000000000042d5c	mov	w8, #0x1
0000000000042d60	ldaxrb	w9, [x19]
0000000000042d64	stxrb	w10, w8, [x19]
0000000000042d68	cbnz	w10, 0x42d60
0000000000042d6c	tbz	w9, #0x0, 0x42df0
0000000000042d70	adrp	x0, 42 ; 0x6c000
0000000000042d74	add	x0, x0, #0xbb0
0000000000042d78	ldr	x8, [x0]
0000000000042d7c	blr	x8
0000000000042d80	ldr	x20, [x0]
0000000000042d84	cbz	x20, 0x42da0
0000000000042d88	add	x8, x20, #0x138
0000000000042d8c	mov	w9, #0x1
0000000000042d90	ldaxr	w21, [x8]
0000000000042d94	stlxr	w10, w9, [x8]
0000000000042d98	cbnz	w10, 0x42d90
0000000000042d9c	b	0x42da4
0000000000042da0	mov	w21, #0x1
0000000000042da4	mov	w22, #0x1
0000000000042da8	ldaxrb	w8, [x19]
0000000000042dac	stxrb	w9, w22, [x19]
0000000000042db0	cbnz	w9, 0x42da8
0000000000042db4	tbz	w8, #0x0, 0x42dc0
0000000000042db8	bl	0x51ce0 ; symbol stub for: _sched_yield
0000000000042dbc	b	0x42da8
0000000000042dc0	cbz	x20, 0x42df0
0000000000042dc4	add	x0, x20, #0x138
0000000000042dc8	ldaxr	w8, [x0]
0000000000042dcc	stlxr	w9, w21, [x0]
0000000000042dd0	cbnz	w9, 0x42dc8
0000000000042dd4	cbnz	w21, 0x42df0
0000000000042dd8	cmp	w8, #0x1
0000000000042ddc	b.ne	0x42df0
0000000000042de0	adr	x8, #0x43c63
0000000000042de4	nop
0000000000042de8	ldarb	w8, [x8]
0000000000042dec	tbnz	w8, #0x0, 0x42e00
0000000000042df0	ldp	x29, x30, [sp, #0x20]
0000000000042df4	ldp	x20, x19, [sp, #0x10]
0000000000042df8	ldp	x22, x21, [sp], #0x30
0000000000042dfc	ret
0000000000042e00	ldp	x29, x30, [sp, #0x20]
0000000000042e04	ldp	x20, x19, [sp, #0x10]
0000000000042e08	ldp	x22, x21, [sp], #0x30
0000000000042e0c	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042e10	bl	___clang_call_terminate
__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_:
0000000000042e14	cmp	x1, x0
0000000000042e18	cset	w8, eq
0000000000042e1c	strb	w8, [x1, #0x18]
0000000000042e20	b.eq	0x42fb0
0000000000042e24	mov	w10, #0x1
0000000000042e28	b	0x42e48
0000000000042e2c	strb	w10, [x9, #0x18]
0000000000042e30	mov	x1, x8
0000000000042e34	cmp	x8, x0
0000000000042e38	cset	w9, eq
0000000000042e3c	strb	w9, [x8, #0x18]
0000000000042e40	strb	w10, [x11]
0000000000042e44	b.eq	0x42fb0
0000000000042e48	ldr	x9, [x1, #0x10]
0000000000042e4c	ldrb	w8, [x9, #0x18]
0000000000042e50	cbnz	w8, 0x42fb0
0000000000042e54	ldr	x8, [x9, #0x10]
0000000000042e58	ldr	x11, [x8]
0000000000042e5c	cmp	x11, x9
0000000000042e60	b.eq	0x42e74
0000000000042e64	cbz	x11, 0x42ed0
0000000000042e68	ldrb	w12, [x11, #0x18]!
0000000000042e6c	cbz	w12, 0x42e2c
0000000000042e70	b	0x42ed0
0000000000042e74	ldr	x11, [x8, #0x8]
0000000000042e78	cbz	x11, 0x42e84
0000000000042e7c	ldrb	w12, [x11, #0x18]!
0000000000042e80	cbz	w12, 0x42e2c
0000000000042e84	ldr	x10, [x9]
0000000000042e88	cmp	x10, x1
0000000000042e8c	b.eq	0x42f64
0000000000042e90	ldr	x10, [x9, #0x8]
0000000000042e94	ldr	x11, [x10]
0000000000042e98	str	x11, [x9, #0x8]
0000000000042e9c	cbz	x11, 0x42ea8
0000000000042ea0	str	x9, [x11, #0x10]
0000000000042ea4	ldr	x8, [x9, #0x10]
0000000000042ea8	str	x8, [x10, #0x10]
0000000000042eac	ldr	x8, [x9, #0x10]
0000000000042eb0	ldr	x11, [x8]
0000000000042eb4	cmp	x11, x9
0000000000042eb8	cset	w11, ne
0000000000042ebc	str	x10, [x8, w11, uxtw #3]
0000000000042ec0	str	x9, [x10]
0000000000042ec4	str	x10, [x9, #0x10]
0000000000042ec8	ldr	x8, [x10, #0x10]
0000000000042ecc	b	0x42f68
0000000000042ed0	ldr	x10, [x9]
0000000000042ed4	cmp	x10, x1
0000000000042ed8	b.eq	0x42ee4
0000000000042edc	mov	x1, x9
0000000000042ee0	b	0x42f1c
0000000000042ee4	ldr	x10, [x1, #0x8]
0000000000042ee8	str	x10, [x9]
0000000000042eec	cbz	x10, 0x42ef8
0000000000042ef0	str	x9, [x10, #0x10]
0000000000042ef4	ldr	x8, [x9, #0x10]
0000000000042ef8	str	x8, [x1, #0x10]
0000000000042efc	ldr	x8, [x9, #0x10]
0000000000042f00	ldr	x10, [x8]
0000000000042f04	cmp	x10, x9
0000000000042f08	cset	w10, ne
0000000000042f0c	str	x1, [x8, w10, uxtw #3]
0000000000042f10	str	x9, [x1, #0x8]
0000000000042f14	str	x1, [x9, #0x10]
0000000000042f18	ldr	x8, [x1, #0x10]
0000000000042f1c	mov	w9, #0x1
0000000000042f20	strb	w9, [x1, #0x18]
0000000000042f24	strb	wzr, [x8, #0x18]
0000000000042f28	ldr	x9, [x8, #0x8]
0000000000042f2c	ldr	x10, [x9]
0000000000042f30	str	x10, [x8, #0x8]
0000000000042f34	cbz	x10, 0x42f3c
0000000000042f38	str	x8, [x10, #0x10]
0000000000042f3c	mov	x10, x8
0000000000042f40	ldr	x11, [x10, #0x10]!
0000000000042f44	str	x11, [x9, #0x10]
0000000000042f48	ldr	x11, [x10]
0000000000042f4c	ldr	x12, [x11]
0000000000042f50	cmp	x12, x8
0000000000042f54	cset	w12, ne
0000000000042f58	str	x9, [x11, w12, uxtw #3]
0000000000042f5c	str	x8, [x9]
0000000000042f60	b	0x42fac
0000000000042f64	mov	x10, x9
0000000000042f68	mov	w9, #0x1
0000000000042f6c	strb	w9, [x10, #0x18]
0000000000042f70	strb	wzr, [x8, #0x18]
0000000000042f74	ldr	x9, [x8]
0000000000042f78	ldr	x10, [x9, #0x8]
0000000000042f7c	str	x10, [x8]
0000000000042f80	cbz	x10, 0x42f88
0000000000042f84	str	x8, [x10, #0x10]
0000000000042f88	mov	x10, x8
0000000000042f8c	ldr	x11, [x10, #0x10]!
0000000000042f90	str	x11, [x9, #0x10]
0000000000042f94	ldr	x11, [x10]
0000000000042f98	ldr	x12, [x11]
0000000000042f9c	cmp	x12, x8
0000000000042fa0	cset	w12, ne
0000000000042fa4	str	x9, [x11, w12, uxtw #3]
0000000000042fa8	str	x8, [x9, #0x8]
0000000000042fac	str	x9, [x10]
0000000000042fb0	ret
__ZNSt3__16vectorIP8ProtocolN6kotlin11std_support9allocatorIS2_EEE6insertIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueENS_11__wrap_iterIS9_EEE4typeENSF_IPKS2_EESB_SB_:
0000000000042fb4	stp	x28, x27, [sp, #-0x60]!
0000000000042fb8	stp	x26, x25, [sp, #0x10]
0000000000042fbc	stp	x24, x23, [sp, #0x20]
0000000000042fc0	stp	x22, x21, [sp, #0x30]
0000000000042fc4	stp	x20, x19, [sp, #0x40]
0000000000042fc8	stp	x29, x30, [sp, #0x50]
0000000000042fcc	add	x29, sp, #0x50
0000000000042fd0	sub	x28, x3, x2
0000000000042fd4	cmp	x28, #0x1
0000000000042fd8	b.lt	0x432c0
0000000000042fdc	mov	x21, x2
0000000000042fe0	mov	x19, x1
0000000000042fe4	mov	x20, x0
0000000000042fe8	ldp	x26, x23, [x0]
0000000000042fec	sub	x8, x1, x26
0000000000042ff0	asr	x25, x8, #3
0000000000042ff4	asr	x27, x28, #3
0000000000042ff8	ldr	x8, [x0, #0x10]
0000000000042ffc	sub	x9, x8, x23
0000000000043000	cmp	x27, x9, asr #3
0000000000043004	b.le	0x43064
0000000000043008	sub	x9, x23, x26
000000000004300c	add	x9, x27, x9, asr #3
0000000000043010	lsr	x10, x9, #61
0000000000043014	cbnz	x10, 0x432dc
0000000000043018	sub	x8, x8, x26
000000000004301c	asr	x10, x8, #2
0000000000043020	cmp	x10, x9
0000000000043024	csel	x9, x9, x10, lo
0000000000043028	mov	x10, #0xfffffffffffffff
000000000004302c	cmp	x10, x8, asr #3
0000000000043030	mov	x8, #0x1fffffffffffffff
0000000000043034	csel	x22, x9, x8, hi
0000000000043038	cbz	x22, 0x430b8
000000000004303c	mov	x0, x22
0000000000043040	mov	w1, #0x8
0000000000043044	bl	0x519e0 ; symbol stub for: _calloc
0000000000043048	mov	x24, x0
000000000004304c	add	x8, x24, x25, lsl #3
0000000000043050	add	x23, x8, x27, lsl #3
0000000000043054	sub	x9, x28, #0x8
0000000000043058	lsr	x9, x9, #3
000000000004305c	cbnz	x9, 0x430d0
0000000000043060	b	0x430f4
0000000000043064	sub	x28, x23, x19
0000000000043068	asr	x8, x28, #3
000000000004306c	cmp	x27, x8
0000000000043070	b.le	0x430a8
0000000000043074	add	x22, x21, x8, lsl #3
0000000000043078	sub	x24, x3, x22
000000000004307c	cmp	x24, #0x1
0000000000043080	b.lt	0x431b8
0000000000043084	mov	x0, x23
0000000000043088	mov	x1, x22
000000000004308c	mov	x2, x24
0000000000043090	bl	0x51aac ; symbol stub for: _memcpy
0000000000043094	add	x11, x23, x24
0000000000043098	str	x11, [x20, #0x8]
000000000004309c	cmp	x28, #0x1
00000000000430a0	b.ge	0x431c8
00000000000430a4	b	0x432c0
00000000000430a8	mov	x11, x23
00000000000430ac	mov	x8, x23
00000000000430b0	mov	x22, x3
00000000000430b4	b	0x431cc
00000000000430b8	mov	x24, #0x0
00000000000430bc	add	x8, x24, x25, lsl #3
00000000000430c0	add	x23, x8, x27, lsl #3
00000000000430c4	sub	x9, x28, #0x8
00000000000430c8	lsr	x9, x9, #3
00000000000430cc	cbz	x9, 0x430f4
00000000000430d0	add	x10, x21, x9, lsl #3
00000000000430d4	add	x10, x10, #0x8
00000000000430d8	cmp	x8, x10
00000000000430dc	b.hs	0x43180
00000000000430e0	add	x10, x25, x9
00000000000430e4	add	x10, x24, x10, lsl #3
00000000000430e8	add	x10, x10, #0x8
00000000000430ec	cmp	x10, x21
00000000000430f0	b.ls	0x43180
00000000000430f4	mov	x9, x8
00000000000430f8	mov	x10, x21
00000000000430fc	ldr	x11, [x10], #0x8
0000000000043100	str	x11, [x9], #0x8
0000000000043104	cmp	x9, x23
0000000000043108	b.ne	0x430fc
000000000004310c	ldr	x21, [x20]
0000000000043110	sub	x2, x19, x21
0000000000043114	sub	x25, x8, x2
0000000000043118	cmp	x2, #0x1
000000000004311c	b.lt	0x4312c
0000000000043120	mov	x0, x25
0000000000043124	mov	x1, x21
0000000000043128	bl	0x51aac ; symbol stub for: _memcpy
000000000004312c	add	x24, x24, x22, lsl #3
0000000000043130	ldr	x8, [x20, #0x8]
0000000000043134	sub	x22, x8, x19
0000000000043138	cmp	x22, #0x1
000000000004313c	b.lt	0x43154
0000000000043140	mov	x0, x23
0000000000043144	mov	x1, x19
0000000000043148	mov	x2, x22
000000000004314c	bl	0x51aac ; symbol stub for: _memcpy
0000000000043150	add	x23, x23, x22
0000000000043154	stp	x25, x23, [x20]
0000000000043158	str	x24, [x20, #0x10]
000000000004315c	cbz	x21, 0x432c0
0000000000043160	mov	x0, x21
0000000000043164	ldp	x29, x30, [sp, #0x50]
0000000000043168	ldp	x20, x19, [sp, #0x40]
000000000004316c	ldp	x22, x21, [sp, #0x30]
0000000000043170	ldp	x24, x23, [sp, #0x20]
0000000000043174	ldp	x26, x25, [sp, #0x10]
0000000000043178	ldp	x28, x27, [sp], #0x60
000000000004317c	b	0x51a64 ; symbol stub for: _free
0000000000043180	add	x11, x9, #0x1
0000000000043184	and	x12, x11, #0x3ffffffffffffffe
0000000000043188	lsl	x10, x12, #3
000000000004318c	add	x9, x8, x10
0000000000043190	add	x10, x21, x10
0000000000043194	mov	x13, x8
0000000000043198	mov	x14, x12
000000000004319c	ldr	q0, [x21], #0x10
00000000000431a0	str	q0, [x13], #0x10
00000000000431a4	subs	x14, x14, #0x2
00000000000431a8	b.ne	0x4319c
00000000000431ac	cmp	x11, x12
00000000000431b0	b.ne	0x430fc
00000000000431b4	b	0x4310c
00000000000431b8	mov	x11, x23
00000000000431bc	str	x11, [x20, #0x8]
00000000000431c0	cmp	x28, #0x1
00000000000431c4	b.lt	0x432c0
00000000000431c8	mov	x8, x11
00000000000431cc	lsl	x10, x27, #3
00000000000431d0	add	x9, x19, x10
00000000000431d4	sub	x2, x11, x9
00000000000431d8	asr	x9, x2, #3
00000000000431dc	sub	x10, x11, x10
00000000000431e0	cmp	x10, x23
00000000000431e4	b.hs	0x43280
00000000000431e8	add	x11, x9, x25
00000000000431ec	sub	x12, x23, x11, lsl #3
00000000000431f0	mvn	x13, x26
00000000000431f4	add	x12, x12, x13
00000000000431f8	cmp	x12, #0x17
00000000000431fc	b.hi	0x43208
0000000000043200	mov	x11, x8
0000000000043204	b	0x43270
0000000000043208	lsr	x13, x12, #3
000000000004320c	add	x12, x13, #0x1
0000000000043210	add	x14, x8, x12, lsl #3
0000000000043214	add	x11, x11, x13
0000000000043218	add	x11, x26, x11, lsl #3
000000000004321c	add	x11, x11, #0x8
0000000000043220	cmp	x8, x11
0000000000043224	ccmp	x10, x14, #0x2, lo
0000000000043228	mov	x11, x8
000000000004322c	b.lo	0x43270
0000000000043230	and	x13, x12, #0x3ffffffffffffffc
0000000000043234	add	x10, x10, x13, lsl #3
0000000000043238	add	x11, x8, #0x10
000000000004323c	add	x14, x9, x25
0000000000043240	add	x14, x26, x14, lsl #3
0000000000043244	add	x14, x14, #0x10
0000000000043248	mov	x15, x13
000000000004324c	ldp	q0, q1, [x14, #-0x10]
0000000000043250	stp	q0, q1, [x11, #-0x10]
0000000000043254	add	x11, x11, #0x20
0000000000043258	add	x14, x14, #0x20
000000000004325c	subs	x15, x15, #0x4
0000000000043260	b.ne	0x4324c
0000000000043264	add	x11, x8, x13, lsl #3
0000000000043268	cmp	x12, x13
000000000004326c	b.eq	0x43280
0000000000043270	ldr	x12, [x10], #0x8
0000000000043274	str	x12, [x11], #0x8
0000000000043278	cmp	x10, x23
000000000004327c	b.lo	0x43270
0000000000043280	str	x11, [x20, #0x8]
0000000000043284	cbz	x2, 0x43294
0000000000043288	sub	x0, x8, x9, lsl #3
000000000004328c	mov	x1, x19
0000000000043290	bl	0x51ab8 ; symbol stub for: _memmove
0000000000043294	subs	x2, x22, x21
0000000000043298	b.eq	0x432c0
000000000004329c	mov	x0, x19
00000000000432a0	mov	x1, x21
00000000000432a4	ldp	x29, x30, [sp, #0x50]
00000000000432a8	ldp	x20, x19, [sp, #0x40]
00000000000432ac	ldp	x22, x21, [sp, #0x30]
00000000000432b0	ldp	x24, x23, [sp, #0x20]
00000000000432b4	ldp	x26, x25, [sp, #0x10]
00000000000432b8	ldp	x28, x27, [sp], #0x60
00000000000432bc	b	0x51ab8 ; symbol stub for: _memmove
00000000000432c0	ldp	x29, x30, [sp, #0x50]
00000000000432c4	ldp	x20, x19, [sp, #0x40]
00000000000432c8	ldp	x22, x21, [sp, #0x30]
00000000000432cc	ldp	x24, x23, [sp, #0x20]
00000000000432d0	ldp	x26, x25, [sp, #0x10]
00000000000432d4	ldp	x28, x27, [sp], #0x60
00000000000432d8	ret
00000000000432dc	mov	x0, x20
00000000000432e0	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_:
00000000000432e4	stp	x24, x23, [sp, #-0x40]!
00000000000432e8	stp	x22, x21, [sp, #0x10]
00000000000432ec	stp	x20, x19, [sp, #0x20]
00000000000432f0	stp	x29, x30, [sp, #0x30]
00000000000432f4	add	x29, sp, #0x30
00000000000432f8	mov	x21, x2
00000000000432fc	mov	x19, x0
0000000000043300	lsr	x8, x1, #32
0000000000043304	lsl	w9, w1, #3
0000000000043308	add	x9, x9, #0x8
000000000004330c	eor	x9, x9, x8
0000000000043310	mov	x10, #0x2d69
0000000000043314	movk	x10, #0xeb38, lsl #16
0000000000043318	movk	x10, #0xea08, lsl #32
000000000004331c	movk	x10, #0x9ddf, lsl #48
0000000000043320	mul	x9, x9, x10
0000000000043324	eor	x8, x9, x8
0000000000043328	eor	x8, x8, x9, lsr #47
000000000004332c	mul	x8, x8, x10
0000000000043330	eor	x8, x8, x8, lsr #47
0000000000043334	mul	x23, x8, x10
0000000000043338	ldr	x22, [x0, #0x8]
000000000004333c	cbz	x22, 0x43364
0000000000043340	fmov	d0, x22
0000000000043344	cnt.8b	v0, v0
0000000000043348	uaddlv.8b	h0, v0
000000000004334c	fmov	w8, s0
0000000000043350	cmp	x8, #0x1
0000000000043354	b.hi	0x43368
0000000000043358	sub	x9, x22, #0x1
000000000004335c	and	x24, x23, x9
0000000000043360	b	0x4337c
0000000000043364	b	0x433d8
0000000000043368	mov	x24, x23
000000000004336c	cmp	x23, x22
0000000000043370	b.lo	0x4337c
0000000000043374	udiv	x9, x23, x22
0000000000043378	msub	x24, x9, x22, x23
000000000004337c	ldr	x9, [x19]
0000000000043380	ldr	x9, [x9, x24, lsl #3]
0000000000043384	cbz	x9, 0x433d8
0000000000043388	sub	x10, x22, #0x1
000000000004338c	b	0x433a8
0000000000043390	and	x11, x11, x10
0000000000043394	cmp	x11, x24
0000000000043398	b.ne	0x433d8
000000000004339c	ldr	x11, [x9, #0x10]
00000000000433a0	cmp	x11, x1
00000000000433a4	b.eq	0x434d8
00000000000433a8	ldr	x9, [x9]
00000000000433ac	cbz	x9, 0x433d8
00000000000433b0	ldr	x11, [x9, #0x8]
00000000000433b4	cmp	x11, x23
00000000000433b8	b.eq	0x4339c
00000000000433bc	cmp	x8, #0x1
00000000000433c0	b.ls	0x43390
00000000000433c4	cmp	x11, x22
00000000000433c8	b.lo	0x43394
00000000000433cc	udiv	x12, x11, x22
00000000000433d0	msub	x11, x12, x22, x11
00000000000433d4	b	0x43394
00000000000433d8	mov	w0, #0x1
00000000000433dc	mov	w1, #0x18
00000000000433e0	bl	0x519e0 ; symbol stub for: _calloc
00000000000433e4	mov	x20, x0
00000000000433e8	ldr	x8, [x21]
00000000000433ec	stp	x23, x8, [x0, #0x8]
00000000000433f0	ldr	x8, [x19, #0x18]
00000000000433f4	add	x8, x8, #0x1
00000000000433f8	ucvtf	s0, x8
00000000000433fc	ldr	s1, [x19, #0x20]
0000000000043400	cbz	x22, 0x43414
0000000000043404	ucvtf	s2, x22
0000000000043408	fmul	s2, s1, s2
000000000004340c	fcmp	s2, s0
0000000000043410	b.pl	0x43534
0000000000043414	cmp	x22, #0x3
0000000000043418	cset	w8, lo
000000000004341c	sub	x9, x22, #0x1
0000000000043420	tst	x22, x9
0000000000043424	cset	w9, ne
0000000000043428	orr	w8, w8, w9
000000000004342c	bfi	x8, x22, #1, #63
0000000000043430	fdiv	s0, s0, s1
0000000000043434	fcvtpu	x9, s0
0000000000043438	cmp	x8, x9
000000000004343c	csel	x21, x9, x8, lo
0000000000043440	subs	x8, x21, #0x1
0000000000043444	b.ne	0x43450
0000000000043448	mov	w21, #0x2
000000000004344c	b	0x43468
0000000000043450	tst	x21, x8
0000000000043454	b.eq	0x43468
0000000000043458	mov	x0, x21
000000000004345c	bl	0x517e8 ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000043460	mov	x21, x0
0000000000043464	ldr	x22, [x19, #0x8]
0000000000043468	cmp	x21, x22
000000000004346c	b.ls	0x43480
0000000000043470	mov	x0, x19
0000000000043474	mov	x1, x21
0000000000043478	bl	__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE8__rehashEm
000000000004347c	b	0x43504
0000000000043480	b.hs	0x43504
0000000000043484	ldr	x8, [x19, #0x18]
0000000000043488	ucvtf	s0, x8
000000000004348c	ldr	s1, [x19, #0x20]
0000000000043490	fdiv	s0, s0, s1
0000000000043494	fcvtpu	x0, s0
0000000000043498	cmp	x22, #0x3
000000000004349c	b.lo	0x434f0
00000000000434a0	fmov	d0, x22
00000000000434a4	cnt.8b	v0, v0
00000000000434a8	uaddlv.8b	h0, v0
00000000000434ac	fmov	w8, s0
00000000000434b0	cmp	x8, #0x1
00000000000434b4	b.hi	0x434f0
00000000000434b8	sub	x8, x0, #0x1
00000000000434bc	clz	x8, x8
00000000000434c0	neg	x8, x8
00000000000434c4	mov	w9, #0x1
00000000000434c8	lsl	x8, x9, x8
00000000000434cc	cmp	x0, #0x2
00000000000434d0	csel	x0, x0, x8, lo
00000000000434d4	b	0x434f4
00000000000434d8	mov	x0, #0x0
00000000000434dc	ldp	x29, x30, [sp, #0x30]
00000000000434e0	ldp	x20, x19, [sp, #0x20]
00000000000434e4	ldp	x22, x21, [sp, #0x10]
00000000000434e8	ldp	x24, x23, [sp], #0x40
00000000000434ec	ret
00000000000434f0	bl	0x517e8 ; symbol stub for: __ZNSt3__112__next_primeEm
00000000000434f4	cmp	x21, x0
00000000000434f8	csel	x21, x0, x21, lo
00000000000434fc	cmp	x21, x22
0000000000043500	b.lo	0x43470
0000000000043504	ldr	x22, [x19, #0x8]
0000000000043508	sub	x8, x22, #0x1
000000000004350c	tst	x22, x8
0000000000043510	b.ne	0x43528
0000000000043514	and	x24, x8, x23
0000000000043518	ldr	x9, [x19]
000000000004351c	ldr	x8, [x9, x24, lsl #3]
0000000000043520	cbnz	x8, 0x43540
0000000000043524	b	0x43560
0000000000043528	cmp	x23, x22
000000000004352c	b.hs	0x4354c
0000000000043530	mov	x24, x23
0000000000043534	ldr	x9, [x19]
0000000000043538	ldr	x8, [x9, x24, lsl #3]
000000000004353c	cbz	x8, 0x43560
0000000000043540	ldr	x9, [x8]
0000000000043544	str	x9, [x20]
0000000000043548	b	0x435ac
000000000004354c	udiv	x8, x23, x22
0000000000043550	msub	x24, x8, x22, x23
0000000000043554	ldr	x9, [x19]
0000000000043558	ldr	x8, [x9, x24, lsl #3]
000000000004355c	cbnz	x8, 0x43540
0000000000043560	mov	x8, x19
0000000000043564	ldr	x10, [x8, #0x10]!
0000000000043568	str	x10, [x20]
000000000004356c	str	x20, [x8]
0000000000043570	str	x8, [x9, x24, lsl #3]
0000000000043574	ldr	x8, [x20]
0000000000043578	cbz	x8, 0x435b0
000000000004357c	ldr	x8, [x8, #0x8]
0000000000043580	sub	x9, x22, #0x1
0000000000043584	tst	x22, x9
0000000000043588	b.ne	0x43594
000000000004358c	and	x8, x8, x9
0000000000043590	b	0x435a4
0000000000043594	cmp	x8, x22
0000000000043598	b.lo	0x435a4
000000000004359c	udiv	x9, x8, x22
00000000000435a0	msub	x8, x9, x22, x8
00000000000435a4	ldr	x9, [x19]
00000000000435a8	add	x8, x9, x8, lsl #3
00000000000435ac	str	x20, [x8]
00000000000435b0	ldr	x8, [x19, #0x18]
00000000000435b4	add	x8, x8, #0x1
00000000000435b8	str	x8, [x19, #0x18]
00000000000435bc	mov	w0, #0x1
00000000000435c0	ldp	x29, x30, [sp, #0x30]
00000000000435c4	ldp	x20, x19, [sp, #0x20]
00000000000435c8	ldp	x22, x21, [sp, #0x10]
00000000000435cc	ldp	x24, x23, [sp], #0x40
00000000000435d0	ret
00000000000435d4	mov	x19, x0
00000000000435d8	cbz	x20, 0x435e4
00000000000435dc	mov	x0, x20
00000000000435e0	bl	0x51a64 ; symbol stub for: _free
00000000000435e4	mov	x0, x19
00000000000435e8	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE:
00000000000435ec	cbz	x0, 0x43630
00000000000435f0	stp	x20, x19, [sp, #-0x20]!
00000000000435f4	stp	x29, x30, [sp, #0x10]
00000000000435f8	add	x29, sp, #0x10
00000000000435fc	mov	x19, x0
0000000000043600	ldr	x0, [x0]
0000000000043604	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
0000000000043608	ldr	x0, [x19, #0x8]
000000000004360c	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
0000000000043610	ldr	x0, [x19, #0x28]
0000000000043614	cbz	x0, 0x43620
0000000000043618	str	x0, [x19, #0x30]
000000000004361c	bl	0x51a64 ; symbol stub for: _free
0000000000043620	mov	x0, x19
0000000000043624	ldp	x29, x30, [sp, #0x10]
0000000000043628	ldp	x20, x19, [sp], #0x20
000000000004362c	b	0x51a64 ; symbol stub for: _free
0000000000043630	ret
__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj:
0000000000043634	ldr	x9, [x0]
0000000000043638	ldrsb	w10, [x9]
000000000004363c	and	w8, w10, #0xff
0000000000043640	tbnz	w10, #0x1f, 0x4366c
0000000000043644	cmp	x9, x1
0000000000043648	b.eq	0x4383c
000000000004364c	mov	x10, x9
0000000000043650	mov	x11, x8
0000000000043654	mov	w8, #0x0
0000000000043658	str	w11, [x2]
000000000004365c	add	x9, x10, #0x1
0000000000043660	str	x9, [x0]
0000000000043664	mov	x0, x8
0000000000043668	ret
000000000004366c	and	w10, w8, #0xe0
0000000000043670	cmp	w10, #0xc0
0000000000043674	b.ne	0x436c0
0000000000043678	cmp	x9, x1
000000000004367c	b.eq	0x4383c
0000000000043680	add	x10, x9, #0x1
0000000000043684	str	x10, [x0]
0000000000043688	cmp	x10, x1
000000000004368c	b.eq	0x4383c
0000000000043690	ldrb	w11, [x10]
0000000000043694	and	w12, w11, #0xc0
0000000000043698	cmp	w12, #0x80
000000000004369c	b.ne	0x4384c
00000000000436a0	and	w11, w11, #0x3f
00000000000436a4	bfi	w11, w8, #6, #5
00000000000436a8	cmp	w11, #0x80
00000000000436ac	b.hs	0x43654
00000000000436b0	mov	w8, #0x4
00000000000436b4	str	x9, [x0]
00000000000436b8	mov	x0, x8
00000000000436bc	ret
00000000000436c0	and	w10, w8, #0xf0
00000000000436c4	cmp	w10, #0xe0
00000000000436c8	b.ne	0x4371c
00000000000436cc	cmp	x9, x1
00000000000436d0	b.eq	0x4383c
00000000000436d4	add	x10, x9, #0x1
00000000000436d8	str	x10, [x0]
00000000000436dc	cmp	x10, x1
00000000000436e0	b.eq	0x4383c
00000000000436e4	ldrb	w10, [x10]
00000000000436e8	and	w11, w10, #0xc0
00000000000436ec	cmp	w11, #0x80
00000000000436f0	b.ne	0x4384c
00000000000436f4	ubfiz	w8, w8, #12, #4
00000000000436f8	bfi	w8, w10, #6, #6
00000000000436fc	and	w10, w8, #0xf800
0000000000043700	mov	w11, #0xd800
0000000000043704	cmp	w10, w11
0000000000043708	b.ne	0x4377c
000000000004370c	mov	w8, #0x5
0000000000043710	str	x9, [x0]
0000000000043714	mov	x0, x8
0000000000043718	ret
000000000004371c	and	w10, w8, #0xf8
0000000000043720	cmp	w10, #0xf0
0000000000043724	b.ne	0x43774
0000000000043728	cmp	x9, x1
000000000004372c	b.eq	0x4383c
0000000000043730	add	x10, x9, #0x1
0000000000043734	str	x10, [x0]
0000000000043738	cmp	x10, x1
000000000004373c	b.eq	0x4383c
0000000000043740	ldrb	w10, [x10]
0000000000043744	and	w11, w10, #0xc0
0000000000043748	cmp	w11, #0x80
000000000004374c	b.ne	0x4384c
0000000000043750	ubfiz	w8, w8, #18, #3
0000000000043754	bfi	w8, w10, #12, #6
0000000000043758	lsr	w10, w8, #16
000000000004375c	cmp	w10, #0x10
0000000000043760	b.ls	0x43794
0000000000043764	mov	w8, #0x5
0000000000043768	str	x9, [x0]
000000000004376c	mov	x0, x8
0000000000043770	ret
0000000000043774	mov	w0, #0x2
0000000000043778	ret
000000000004377c	cmp	w8, #0x800
0000000000043780	b.hs	0x437ac
0000000000043784	mov	w8, #0x4
0000000000043788	str	x9, [x0]
000000000004378c	mov	x0, x8
0000000000043790	ret
0000000000043794	cmp	w8, #0x10, lsl #12
0000000000043798	b.hs	0x437ec
000000000004379c	mov	w8, #0x4
00000000000437a0	str	x9, [x0]
00000000000437a4	mov	x0, x8
00000000000437a8	ret
00000000000437ac	add	x10, x9, #0x2
00000000000437b0	str	x10, [x0]
00000000000437b4	cmp	x10, x1
00000000000437b8	b.eq	0x4383c
00000000000437bc	ldrb	w11, [x10]
00000000000437c0	and	w12, w11, #0xc0
00000000000437c4	cmp	w12, #0x80
00000000000437c8	b.ne	0x4384c
00000000000437cc	and	w9, w11, #0x3f
00000000000437d0	orr	w11, w8, w9
00000000000437d4	mov	w8, #0x0
00000000000437d8	str	w11, [x2]
00000000000437dc	add	x9, x10, #0x1
00000000000437e0	str	x9, [x0]
00000000000437e4	mov	x0, x8
00000000000437e8	ret
00000000000437ec	add	x10, x9, #0x2
00000000000437f0	str	x10, [x0]
00000000000437f4	cmp	x10, x1
00000000000437f8	b.eq	0x4383c
00000000000437fc	ldrb	w11, [x10]
0000000000043800	and	w10, w11, #0xc0
0000000000043804	cmp	w10, #0x80
0000000000043808	b.ne	0x4384c
000000000004380c	add	x10, x9, #0x3
0000000000043810	str	x10, [x0]
0000000000043814	cmp	x10, x1
0000000000043818	b.eq	0x4383c
000000000004381c	ldrb	w12, [x10]
0000000000043820	and	w13, w12, #0xc0
0000000000043824	cmp	w13, #0x80
0000000000043828	b.ne	0x4384c
000000000004382c	ubfiz	w9, w11, #6, #6
0000000000043830	orr	w8, w9, w8
0000000000043834	and	w9, w12, #0x3f
0000000000043838	b	0x437d0
000000000004383c	mov	w8, #0x1
0000000000043840	str	x9, [x0]
0000000000043844	mov	x0, x8
0000000000043848	ret
000000000004384c	mov	w8, #0x3
0000000000043850	str	x9, [x0]
0000000000043854	mov	x0, x8
0000000000043858	ret
__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE8__rehashEm:
000000000004385c	stp	x20, x19, [sp, #-0x20]!
0000000000043860	stp	x29, x30, [sp, #0x10]
0000000000043864	add	x29, sp, #0x10
0000000000043868	mov	x19, x0
000000000004386c	cbz	x1, 0x438e4
0000000000043870	mov	x20, x1
0000000000043874	mov	x0, x1
0000000000043878	mov	w1, #0x8
000000000004387c	bl	0x519e0 ; symbol stub for: _calloc
0000000000043880	mov	x8, x0
0000000000043884	ldr	x0, [x19]
0000000000043888	str	x8, [x19]
000000000004388c	cbz	x0, 0x43894
0000000000043890	bl	0x51a64 ; symbol stub for: _free
0000000000043894	mov	x8, #0x0
0000000000043898	str	x20, [x19, #0x8]
000000000004389c	ldr	x9, [x19]
00000000000438a0	str	xzr, [x9, x8, lsl #3]
00000000000438a4	add	x8, x8, #0x1
00000000000438a8	cmp	x8, x20
00000000000438ac	b.lo	0x4389c
00000000000438b0	mov	x11, x19
00000000000438b4	ldr	x8, [x11, #0x10]!
00000000000438b8	cbz	x8, 0x439c0
00000000000438bc	ldr	x9, [x8, #0x8]
00000000000438c0	fmov	d0, x20
00000000000438c4	cnt.8b	v0, v0
00000000000438c8	uaddlv.8b	h0, v0
00000000000438cc	fmov	w10, s0
00000000000438d0	cmp	x10, #0x1
00000000000438d4	b.hi	0x438fc
00000000000438d8	sub	x12, x20, #0x1
00000000000438dc	and	x9, x9, x12
00000000000438e0	b	0x4390c
00000000000438e4	ldr	x0, [x19]
00000000000438e8	str	xzr, [x19]
00000000000438ec	cbz	x0, 0x438f4
00000000000438f0	bl	0x51a64 ; symbol stub for: _free
00000000000438f4	str	xzr, [x19, #0x8]
00000000000438f8	b	0x439c0
00000000000438fc	cmp	x9, x20
0000000000043900	b.lo	0x4390c
0000000000043904	udiv	x12, x9, x20
0000000000043908	msub	x9, x12, x20, x9
000000000004390c	ldr	x12, [x19]
0000000000043910	str	x11, [x12, x9, lsl #3]
0000000000043914	ldr	x12, [x8]
0000000000043918	cbz	x12, 0x439c0
000000000004391c	sub	x11, x20, #0x1
0000000000043920	b	0x43930
0000000000043924	mov	x8, x12
0000000000043928	ldr	x12, [x8]
000000000004392c	cbz	x12, 0x439c0
0000000000043930	ldr	x13, [x12, #0x8]
0000000000043934	cmp	x10, #0x1
0000000000043938	b.hi	0x43944
000000000004393c	and	x13, x13, x11
0000000000043940	b	0x43954
0000000000043944	cmp	x13, x20
0000000000043948	b.lo	0x43954
000000000004394c	udiv	x14, x13, x20
0000000000043950	msub	x13, x14, x20, x13
0000000000043954	cmp	x13, x9
0000000000043958	b.eq	0x43924
000000000004395c	ldr	x14, [x19]
0000000000043960	ldr	x16, [x14, x13, lsl #3]
0000000000043964	mov	x15, x12
0000000000043968	cbz	x16, 0x439b0
000000000004396c	mov	x14, x15
0000000000043970	ldr	x15, [x15]
0000000000043974	cbz	x15, 0x43988
0000000000043978	ldr	x16, [x12, #0x10]
000000000004397c	ldr	x17, [x15, #0x10]
0000000000043980	cmp	x16, x17
0000000000043984	b.eq	0x4396c
0000000000043988	str	x15, [x8]
000000000004398c	ldr	x15, [x19]
0000000000043990	lsl	x13, x13, #3
0000000000043994	ldr	x15, [x15, x13]
0000000000043998	ldr	x15, [x15]
000000000004399c	str	x15, [x14]
00000000000439a0	ldr	x14, [x19]
00000000000439a4	ldr	x13, [x14, x13]
00000000000439a8	str	x12, [x13]
00000000000439ac	b	0x43928
00000000000439b0	str	x8, [x14, x13, lsl #3]
00000000000439b4	mov	x8, x12
00000000000439b8	mov	x9, x13
00000000000439bc	b	0x43928
00000000000439c0	ldp	x29, x30, [sp, #0x10]
00000000000439c4	ldp	x20, x19, [sp], #0x20
00000000000439c8	ret
__ZNSt3__112__hash_tableIP8ProtocolNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm:
00000000000439cc	stp	x20, x19, [sp, #-0x20]!
00000000000439d0	stp	x29, x30, [sp, #0x10]
00000000000439d4	add	x29, sp, #0x10
00000000000439d8	mov	x19, x0
00000000000439dc	cbz	x1, 0x43a54
00000000000439e0	mov	x20, x1
00000000000439e4	mov	x0, x1
00000000000439e8	mov	w1, #0x8
00000000000439ec	bl	0x519e0 ; symbol stub for: _calloc
00000000000439f0	mov	x8, x0
00000000000439f4	ldr	x0, [x19]
00000000000439f8	str	x8, [x19]
00000000000439fc	cbz	x0, 0x43a04
0000000000043a00	bl	0x51a64 ; symbol stub for: _free
0000000000043a04	mov	x8, #0x0
0000000000043a08	str	x20, [x19, #0x8]
0000000000043a0c	ldr	x9, [x19]
0000000000043a10	str	xzr, [x9, x8, lsl #3]
0000000000043a14	add	x8, x8, #0x1
0000000000043a18	cmp	x8, x20
0000000000043a1c	b.lo	0x43a0c
0000000000043a20	mov	x11, x19
0000000000043a24	ldr	x8, [x11, #0x10]!
0000000000043a28	cbz	x8, 0x43b30
0000000000043a2c	ldr	x9, [x8, #0x8]
0000000000043a30	fmov	d0, x20
0000000000043a34	cnt.8b	v0, v0
0000000000043a38	uaddlv.8b	h0, v0
0000000000043a3c	fmov	w10, s0
0000000000043a40	cmp	x10, #0x1
0000000000043a44	b.hi	0x43a6c
0000000000043a48	sub	x12, x20, #0x1
0000000000043a4c	and	x9, x9, x12
0000000000043a50	b	0x43a7c
0000000000043a54	ldr	x0, [x19]
0000000000043a58	str	xzr, [x19]
0000000000043a5c	cbz	x0, 0x43a64
0000000000043a60	bl	0x51a64 ; symbol stub for: _free
0000000000043a64	str	xzr, [x19, #0x8]
0000000000043a68	b	0x43b30
0000000000043a6c	cmp	x9, x20
0000000000043a70	b.lo	0x43a7c
0000000000043a74	udiv	x12, x9, x20
0000000000043a78	msub	x9, x12, x20, x9
0000000000043a7c	ldr	x12, [x19]
0000000000043a80	str	x11, [x12, x9, lsl #3]
0000000000043a84	ldr	x12, [x8]
0000000000043a88	cbz	x12, 0x43b30
0000000000043a8c	sub	x11, x20, #0x1
0000000000043a90	b	0x43aa0
0000000000043a94	mov	x8, x12
0000000000043a98	ldr	x12, [x8]
0000000000043a9c	cbz	x12, 0x43b30
0000000000043aa0	ldr	x13, [x12, #0x8]
0000000000043aa4	cmp	x10, #0x1
0000000000043aa8	b.hi	0x43ab4
0000000000043aac	and	x13, x13, x11
0000000000043ab0	b	0x43ac4
0000000000043ab4	cmp	x13, x20
0000000000043ab8	b.lo	0x43ac4
0000000000043abc	udiv	x14, x13, x20
0000000000043ac0	msub	x13, x14, x20, x13
0000000000043ac4	cmp	x13, x9
0000000000043ac8	b.eq	0x43a94
0000000000043acc	ldr	x14, [x19]
0000000000043ad0	ldr	x16, [x14, x13, lsl #3]
0000000000043ad4	mov	x15, x12
0000000000043ad8	cbz	x16, 0x43b20
0000000000043adc	mov	x14, x15
0000000000043ae0	ldr	x15, [x15]
0000000000043ae4	cbz	x15, 0x43af8
0000000000043ae8	ldr	x16, [x12, #0x10]
0000000000043aec	ldr	x17, [x15, #0x10]
0000000000043af0	cmp	x16, x17
0000000000043af4	b.eq	0x43adc
0000000000043af8	str	x15, [x8]
0000000000043afc	ldr	x15, [x19]
0000000000043b00	lsl	x13, x13, #3
0000000000043b04	ldr	x15, [x15, x13]
0000000000043b08	ldr	x15, [x15]
0000000000043b0c	str	x15, [x14]
0000000000043b10	ldr	x14, [x19]
0000000000043b14	ldr	x13, [x14, x13]
0000000000043b18	str	x12, [x13]
0000000000043b1c	b	0x43a98
0000000000043b20	str	x8, [x14, x13, lsl #3]
0000000000043b24	mov	x8, x12
0000000000043b28	mov	x9, x13
0000000000043b2c	b	0x43a98
0000000000043b30	ldp	x29, x30, [sp, #0x10]
0000000000043b34	ldp	x20, x19, [sp], #0x20
0000000000043b38	ret
__ZNSt3__112__hash_tableIP13objc_selectorNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm:
0000000000043b3c	stp	x20, x19, [sp, #-0x20]!
0000000000043b40	stp	x29, x30, [sp, #0x10]
0000000000043b44	add	x29, sp, #0x10
0000000000043b48	mov	x19, x0
0000000000043b4c	cbz	x1, 0x43bc4
0000000000043b50	mov	x20, x1
0000000000043b54	mov	x0, x1
0000000000043b58	mov	w1, #0x8
0000000000043b5c	bl	0x519e0 ; symbol stub for: _calloc
0000000000043b60	mov	x8, x0
0000000000043b64	ldr	x0, [x19]
0000000000043b68	str	x8, [x19]
0000000000043b6c	cbz	x0, 0x43b74
0000000000043b70	bl	0x51a64 ; symbol stub for: _free
0000000000043b74	mov	x8, #0x0
0000000000043b78	str	x20, [x19, #0x8]
0000000000043b7c	ldr	x9, [x19]
0000000000043b80	str	xzr, [x9, x8, lsl #3]
0000000000043b84	add	x8, x8, #0x1
0000000000043b88	cmp	x8, x20
0000000000043b8c	b.lo	0x43b7c
0000000000043b90	mov	x11, x19
0000000000043b94	ldr	x8, [x11, #0x10]!
0000000000043b98	cbz	x8, 0x43ca0
0000000000043b9c	ldr	x9, [x8, #0x8]
0000000000043ba0	fmov	d0, x20
0000000000043ba4	cnt.8b	v0, v0
0000000000043ba8	uaddlv.8b	h0, v0
0000000000043bac	fmov	w10, s0
0000000000043bb0	cmp	x10, #0x1
0000000000043bb4	b.hi	0x43bdc
0000000000043bb8	sub	x12, x20, #0x1
0000000000043bbc	and	x9, x9, x12
0000000000043bc0	b	0x43bec
0000000000043bc4	ldr	x0, [x19]
0000000000043bc8	str	xzr, [x19]
0000000000043bcc	cbz	x0, 0x43bd4
0000000000043bd0	bl	0x51a64 ; symbol stub for: _free
0000000000043bd4	str	xzr, [x19, #0x8]
0000000000043bd8	b	0x43ca0
0000000000043bdc	cmp	x9, x20
0000000000043be0	b.lo	0x43bec
0000000000043be4	udiv	x12, x9, x20
0000000000043be8	msub	x9, x12, x20, x9
0000000000043bec	ldr	x12, [x19]
0000000000043bf0	str	x11, [x12, x9, lsl #3]
0000000000043bf4	ldr	x12, [x8]
0000000000043bf8	cbz	x12, 0x43ca0
0000000000043bfc	sub	x11, x20, #0x1
0000000000043c00	b	0x43c10
0000000000043c04	mov	x8, x12
0000000000043c08	ldr	x12, [x8]
0000000000043c0c	cbz	x12, 0x43ca0
0000000000043c10	ldr	x13, [x12, #0x8]
0000000000043c14	cmp	x10, #0x1
0000000000043c18	b.hi	0x43c24
0000000000043c1c	and	x13, x13, x11
0000000000043c20	b	0x43c34
0000000000043c24	cmp	x13, x20
0000000000043c28	b.lo	0x43c34
0000000000043c2c	udiv	x14, x13, x20
0000000000043c30	msub	x13, x14, x20, x13
0000000000043c34	cmp	x13, x9
0000000000043c38	b.eq	0x43c04
0000000000043c3c	ldr	x14, [x19]
0000000000043c40	ldr	x16, [x14, x13, lsl #3]
0000000000043c44	mov	x15, x12
0000000000043c48	cbz	x16, 0x43c90
0000000000043c4c	mov	x14, x15
0000000000043c50	ldr	x15, [x15]
0000000000043c54	cbz	x15, 0x43c68
0000000000043c58	ldr	x16, [x12, #0x10]
0000000000043c5c	ldr	x17, [x15, #0x10]
0000000000043c60	cmp	x16, x17
0000000000043c64	b.eq	0x43c4c
0000000000043c68	str	x15, [x8]
0000000000043c6c	ldr	x15, [x19]
0000000000043c70	lsl	x13, x13, #3
0000000000043c74	ldr	x15, [x15, x13]
0000000000043c78	ldr	x15, [x15]
0000000000043c7c	str	x15, [x14]
0000000000043c80	ldr	x14, [x19]
0000000000043c84	ldr	x13, [x14, x13]
0000000000043c88	str	x12, [x13]
0000000000043c8c	b	0x43c08
0000000000043c90	str	x8, [x14, x13, lsl #3]
0000000000043c94	mov	x8, x12
0000000000043c98	mov	x9, x13
0000000000043c9c	b	0x43c08
0000000000043ca0	ldp	x29, x30, [sp, #0x10]
0000000000043ca4	ldp	x20, x19, [sp], #0x20
0000000000043ca8	ret
__ZNSt3__112__hash_tableINS_17__hash_value_typeIiP6WorkerEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEEN6kotlin11std_support9allocatorIS4_EEE8__rehashEm:
0000000000043cac	stp	x20, x19, [sp, #-0x20]!
0000000000043cb0	stp	x29, x30, [sp, #0x10]
0000000000043cb4	add	x29, sp, #0x10
0000000000043cb8	mov	x19, x0
0000000000043cbc	cbz	x1, 0x43d34
0000000000043cc0	mov	x20, x1
0000000000043cc4	mov	x0, x1
0000000000043cc8	mov	w1, #0x8
0000000000043ccc	bl	0x519e0 ; symbol stub for: _calloc
0000000000043cd0	mov	x8, x0
0000000000043cd4	ldr	x0, [x19]
0000000000043cd8	str	x8, [x19]
0000000000043cdc	cbz	x0, 0x43ce4
0000000000043ce0	bl	0x51a64 ; symbol stub for: _free
0000000000043ce4	mov	x8, #0x0
0000000000043ce8	str	x20, [x19, #0x8]
0000000000043cec	ldr	x9, [x19]
0000000000043cf0	str	xzr, [x9, x8, lsl #3]
0000000000043cf4	add	x8, x8, #0x1
0000000000043cf8	cmp	x8, x20
0000000000043cfc	b.lo	0x43cec
0000000000043d00	mov	x11, x19
0000000000043d04	ldr	x8, [x11, #0x10]!
0000000000043d08	cbz	x8, 0x43e10
0000000000043d0c	ldr	x9, [x8, #0x8]
0000000000043d10	fmov	d0, x20
0000000000043d14	cnt.8b	v0, v0
0000000000043d18	uaddlv.8b	h0, v0
0000000000043d1c	fmov	w10, s0
0000000000043d20	cmp	x10, #0x1
0000000000043d24	b.hi	0x43d4c
0000000000043d28	sub	x12, x20, #0x1
0000000000043d2c	and	x9, x9, x12
0000000000043d30	b	0x43d5c
0000000000043d34	ldr	x0, [x19]
0000000000043d38	str	xzr, [x19]
0000000000043d3c	cbz	x0, 0x43d44
0000000000043d40	bl	0x51a64 ; symbol stub for: _free
0000000000043d44	str	xzr, [x19, #0x8]
0000000000043d48	b	0x43e10
0000000000043d4c	cmp	x9, x20
0000000000043d50	b.lo	0x43d5c
0000000000043d54	udiv	x12, x9, x20
0000000000043d58	msub	x9, x12, x20, x9
0000000000043d5c	ldr	x12, [x19]
0000000000043d60	str	x11, [x12, x9, lsl #3]
0000000000043d64	ldr	x12, [x8]
0000000000043d68	cbz	x12, 0x43e10
0000000000043d6c	sub	x11, x20, #0x1
0000000000043d70	b	0x43d80
0000000000043d74	mov	x8, x12
0000000000043d78	ldr	x12, [x8]
0000000000043d7c	cbz	x12, 0x43e10
0000000000043d80	ldr	x13, [x12, #0x8]
0000000000043d84	cmp	x10, #0x1
0000000000043d88	b.hi	0x43d94
0000000000043d8c	and	x13, x13, x11
0000000000043d90	b	0x43da4
0000000000043d94	cmp	x13, x20
0000000000043d98	b.lo	0x43da4
0000000000043d9c	udiv	x14, x13, x20
0000000000043da0	msub	x13, x14, x20, x13
0000000000043da4	cmp	x13, x9
0000000000043da8	b.eq	0x43d74
0000000000043dac	ldr	x14, [x19]
0000000000043db0	ldr	x16, [x14, x13, lsl #3]
0000000000043db4	mov	x15, x12
0000000000043db8	cbz	x16, 0x43e00
0000000000043dbc	mov	x14, x15
0000000000043dc0	ldr	x15, [x15]
0000000000043dc4	cbz	x15, 0x43dd8
0000000000043dc8	ldr	w16, [x12, #0x10]
0000000000043dcc	ldr	w17, [x15, #0x10]
0000000000043dd0	cmp	w16, w17
0000000000043dd4	b.eq	0x43dbc
0000000000043dd8	str	x15, [x8]
0000000000043ddc	ldr	x15, [x19]
0000000000043de0	lsl	x13, x13, #3
0000000000043de4	ldr	x15, [x15, x13]
0000000000043de8	ldr	x15, [x15]
0000000000043dec	str	x15, [x14]
0000000000043df0	ldr	x14, [x19]
0000000000043df4	ldr	x13, [x14, x13]
0000000000043df8	str	x12, [x13]
0000000000043dfc	b	0x43d78
0000000000043e00	str	x8, [x14, x13, lsl #3]
0000000000043e04	mov	x8, x12
0000000000043e08	mov	x9, x13
0000000000043e0c	b	0x43d78
0000000000043e10	ldp	x29, x30, [sp, #0x10]
0000000000043e14	ldp	x20, x19, [sp], #0x20
0000000000043e18	ret
__ZN12_GLOBAL__N_116TerminateHandler13kotlinHandlerEv:
0000000000043e1c	sub	sp, sp, #0x40
0000000000043e20	stp	x22, x21, [sp, #0x10]
0000000000043e24	stp	x20, x19, [sp, #0x20]
0000000000043e28	stp	x29, x30, [sp, #0x30]
0000000000043e2c	add	x29, sp, #0x30
0000000000043e30	add	x8, sp, #0x8
0000000000043e34	bl	0x518f0 ; symbol stub for: __ZSt17current_exceptionv
0000000000043e38	ldr	x8, [sp, #0x8]
0000000000043e3c	cbnz	x8, 0x43e68
0000000000043e40	add	x0, sp, #0x8
0000000000043e44	bl	0x517d0 ; symbol stub for: __ZNSt13exception_ptrD1Ev
0000000000043e48	adrp	x0, 41 ; 0x6c000
0000000000043e4c	add	x0, x0, #0xbb0
0000000000043e50	ldr	x8, [x0]
0000000000043e54	blr	x8
0000000000043e58	ldr	x20, [x0]
0000000000043e5c	cbnz	x20, 0x43e80
0000000000043e60	mov	w21, #0x1
0000000000043e64	b	0x43e94
0000000000043e68	mov	x0, sp
0000000000043e6c	add	x1, sp, #0x8
0000000000043e70	bl	0x517c4 ; symbol stub for: __ZNSt13exception_ptrC1ERKS_
0000000000043e74	mov	x0, sp
0000000000043e78	bl	0x518fc ; symbol stub for: __ZSt17rethrow_exceptionSt13exception_ptr
0000000000043e7c	b	0x43fa4
0000000000043e80	add	x8, x20, #0x138
0000000000043e84	mov	w9, #0x1
0000000000043e88	ldaxr	w21, [x8]
0000000000043e8c	stlxr	w10, w9, [x8]
0000000000043e90	cbnz	w10, 0x43e88
0000000000043e94	bl	__ZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEv
0000000000043e98	b	0x43fa4
0000000000043e9c	mov	x19, x0
0000000000043ea0	cbnz	x20, 0x43eac
0000000000043ea4	mov	x0, x19
0000000000043ea8	bl	0x517a0 ; symbol stub for: __Unwind_Resume
0000000000043eac	add	x0, x20, #0x138
0000000000043eb0	ldaxr	w8, [x0]
0000000000043eb4	stlxr	w9, w21, [x0]
0000000000043eb8	cbnz	w9, 0x43eb0
0000000000043ebc	cbnz	w21, 0x43ea4
0000000000043ec0	cmp	w8, #0x1
0000000000043ec4	b.ne	0x43ea4
0000000000043ec8	adr	x8, #0x42b7b
0000000000043ecc	nop
0000000000043ed0	ldarb	w8, [x8]
0000000000043ed4	tbz	w8, #0x0, 0x43ea4
0000000000043ed8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043edc	mov	x0, x19
0000000000043ee0	bl	0x517a0 ; symbol stub for: __Unwind_Resume
0000000000043ee4	mov	x20, x1
0000000000043ee8	mov	x19, x0
0000000000043eec	mov	x0, sp
0000000000043ef0	bl	0x517d0 ; symbol stub for: __ZNSt13exception_ptrD1Ev
0000000000043ef4	mov	x0, x19
0000000000043ef8	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000043efc	cmp	w20, #0x2
0000000000043f00	b.ne	0x43f6c
0000000000043f04	mov	x19, x0
0000000000043f08	bl	_Kotlin_initRuntimeIfNeeded
0000000000043f0c	adrp	x0, 41 ; 0x6c000
0000000000043f10	add	x0, x0, #0xbb0
0000000000043f14	ldr	x8, [x0]
0000000000043f18	blr	x8
0000000000043f1c	ldr	x8, [x0]
0000000000043f20	add	x20, x8, #0x138
0000000000043f24	ldaxr	w21, [x20]
0000000000043f28	stlxr	w8, wzr, [x20]
0000000000043f2c	cbnz	w8, 0x43f24
0000000000043f30	cmp	w21, #0x1
0000000000043f34	b.ne	0x43f50
0000000000043f38	adr	x8, #0x42b0b
0000000000043f3c	nop
0000000000043f40	ldarb	w8, [x8]
0000000000043f44	tbz	w8, #0x0, 0x43f50
0000000000043f48	mov	x0, x20
0000000000043f4c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043f50	ldr	x8, [x19, #0x8]
0000000000043f54	ldr	x0, [x8]
0000000000043f58	bl	__ZN12_GLOBAL__N_125processUnhandledExceptionEP9ObjHeader
0000000000043f5c	ldr	x8, [x19, #0x8]
0000000000043f60	ldr	x0, [x8]
0000000000043f64	bl	__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader
0000000000043f68	b	0x43fa4
0000000000043f6c	adrp	x0, 41 ; 0x6c000
0000000000043f70	add	x0, x0, #0xbb0
0000000000043f74	ldr	x8, [x0]
0000000000043f78	blr	x8
0000000000043f7c	ldr	x20, [x0]
0000000000043f80	cbnz	x20, 0x43f8c
0000000000043f84	mov	w21, #0x1
0000000000043f88	b	0x43fa0
0000000000043f8c	add	x8, x20, #0x138
0000000000043f90	mov	w9, #0x1
0000000000043f94	ldaxr	w21, [x8]
0000000000043f98	stlxr	w10, w9, [x8]
0000000000043f9c	cbnz	w10, 0x43f94
0000000000043fa0	bl	__ZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEv
0000000000043fa4	brk	#0x1
0000000000043fa8	mov	x19, x0
0000000000043fac	cbz	x20, 0x43fdc
0000000000043fb0	add	x0, x20, #0x138
0000000000043fb4	ldaxr	w8, [x0]
0000000000043fb8	stlxr	w9, w21, [x0]
0000000000043fbc	cbnz	w9, 0x43fb4
0000000000043fc0	cbnz	w21, 0x43fdc
0000000000043fc4	cmp	w8, #0x1
0000000000043fc8	b.ne	0x43fdc
0000000000043fcc	adr	x8, #0x42a77
0000000000043fd0	nop
0000000000043fd4	ldarb	w8, [x8]
0000000000043fd8	tbnz	w8, #0x0, 0x44020
0000000000043fdc	bl	0x51944 ; symbol stub for: ___cxa_end_catch
0000000000043fe0	add	x0, sp, #0x8
0000000000043fe4	bl	0x517d0 ; symbol stub for: __ZNSt13exception_ptrD1Ev
0000000000043fe8	mov	x0, x19
0000000000043fec	bl	0x517a0 ; symbol stub for: __Unwind_Resume
0000000000043ff0	mov	x19, x0
0000000000043ff4	ldaxr	w8, [x20]
0000000000043ff8	stlxr	w9, w21, [x20]
0000000000043ffc	cbnz	w9, 0x43ff4
0000000000044000	cbnz	w21, 0x43fdc
0000000000044004	cmp	w8, #0x1
0000000000044008	b.ne	0x43fdc
000000000004400c	adr	x8, #0x42a37
0000000000044010	nop
0000000000044014	ldarb	w8, [x8]
0000000000044018	tbz	w8, #0x0, 0x43fdc
000000000004401c	mov	x0, x20
0000000000044020	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000044024	bl	0x51944 ; symbol stub for: ___cxa_end_catch
0000000000044028	add	x0, sp, #0x8
000000000004402c	bl	0x517d0 ; symbol stub for: __ZNSt13exception_ptrD1Ev
0000000000044030	mov	x0, x19
0000000000044034	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZN12_GLOBAL__N_125processUnhandledExceptionEP9ObjHeader:
0000000000044038	sub	sp, sp, #0x180
000000000004403c	stp	x28, x27, [sp, #0x120]
0000000000044040	stp	x26, x25, [sp, #0x130]
0000000000044044	stp	x24, x23, [sp, #0x140]
0000000000044048	stp	x22, x21, [sp, #0x150]
000000000004404c	stp	x20, x19, [sp, #0x160]
0000000000044050	stp	x29, x30, [sp, #0x170]
0000000000044054	add	x29, sp, #0x170
0000000000044058	mov	x21, x0
000000000004405c	movi.16b	v0, #0x0
0000000000044060	stp	q0, q0, [sp, #0x30]
0000000000044064	str	q0, [sp, #0x50]
0000000000044068	add	x23, sp, #0x30
000000000004406c	adrp	x19, 40 ; 0x6c000
0000000000044070	add	x19, x19, #0xbb0
0000000000044074	ldr	x26, [x19]
0000000000044078	mov	x0, x19
000000000004407c	blr	x26
0000000000044080	ldr	x8, [x0]
0000000000044084	ldr	x9, [x8, #0x110]
0000000000044088	str	x23, [x8, #0x110]
000000000004408c	mov	x8, #0x600000000
0000000000044090	stp	x9, x8, [sp, #0x38]
0000000000044094	adr	x24, #0x429af
0000000000044098	nop
000000000004409c	ldarb	w8, [x24]
00000000000440a0	tbz	w8, #0x0, 0x440a8
00000000000440a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000440a8	adr	x27, #0x42a10
00000000000440ac	nop
00000000000440b0	ldar	x25, [x27]
00000000000440b4	cmp	x25, #0x2
00000000000440b8	b.hs	0x448ac
00000000000440bc	mov	x0, x19
00000000000440c0	blr	x26
00000000000440c4	ldr	x28, [x0]
00000000000440c8	ldp	x8, x9, [x28, #0x120]
00000000000440cc	cmp	x8, x9
00000000000440d0	b.eq	0x440f0
00000000000440d4	mov	x10, x9
00000000000440d8	ldr	x11, [x10, #-0x10]!
00000000000440dc	cmp	x11, x27
00000000000440e0	b.eq	0x441b0
00000000000440e4	mov	x9, x10
00000000000440e8	cmp	x10, x8
00000000000440ec	b.ne	0x440d8
00000000000440f0	add	x22, x28, #0x120
00000000000440f4	add	x0, x28, #0x138
00000000000440f8	mov	w9, #0x1
00000000000440fc	ldaxr	w8, [x0]
0000000000044100	stlxr	w10, w9, [x0]
0000000000044104	cbnz	w10, 0x440fc
0000000000044108	b	0x44118
000000000004410c	mov	w20, #0x1
0000000000044110	stlxr	w9, x20, [x27]
0000000000044114	cbz	w9, 0x44128
0000000000044118	ldaxr	x25, [x27]
000000000004411c	cbz	x25, 0x4410c
0000000000044120	mov	w20, #0x0
0000000000044124	clrex
0000000000044128	cmp	x25, #0x1
000000000004412c	b.eq	0x44118
0000000000044130	cbz	x28, 0x44158
0000000000044134	ldaxr	w9, [x0]
0000000000044138	stlxr	w10, w8, [x0]
000000000004413c	cbnz	w10, 0x44134
0000000000044140	cbnz	w8, 0x44158
0000000000044144	cmp	w9, #0x1
0000000000044148	b.ne	0x44158
000000000004414c	ldarb	w8, [x24]
0000000000044150	tbz	w8, #0x0, 0x44158
0000000000044154	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000044158	tbz	w20, #0x0, 0x441a8
000000000004415c	str	x21, [sp, #0x20]
0000000000044160	ldr	x8, [x28, #0x118]
0000000000044164	add	x0, x8, #0x70
0000000000044168	mov	w1, #0x18
000000000004416c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000044170	adr	x8, #0x16aa0
0000000000044174	nop
0000000000044178	mov	x25, x0
000000000004417c	str	x8, [x25, #0x10]!
0000000000044180	str	x0, [sp, #0x18]
0000000000044184	str	xzr, [x0, #0x8]
0000000000044188	str	x25, [sp, #0x48]
000000000004418c	ldp	x9, x8, [x28, #0x128]
0000000000044190	cmp	x9, x8
0000000000044194	b.hs	0x441bc
0000000000044198	stp	x27, x25, [x9]
000000000004419c	add	x8, x9, #0x10
00000000000441a0	str	x8, [x28, #0x128]
00000000000441a4	b	0x4424c
00000000000441a8	str	x25, [sp, #0x48]
00000000000441ac	b	0x448ac
00000000000441b0	ldur	x25, [x9, #-0x8]
00000000000441b4	str	x25, [sp, #0x48]
00000000000441b8	b	0x448ac
00000000000441bc	mov	x21, x19
00000000000441c0	ldr	x10, [x22]
00000000000441c4	sub	x9, x9, x10
00000000000441c8	asr	x19, x9, #4
00000000000441cc	add	x9, x19, #0x1
00000000000441d0	lsr	x11, x9, #60
00000000000441d4	cbnz	x11, 0x449f4
00000000000441d8	sub	x8, x8, x10
00000000000441dc	asr	x10, x8, #3
00000000000441e0	cmp	x10, x9
00000000000441e4	csel	x9, x9, x10, lo
00000000000441e8	mov	x10, #0x7ffffffffffffff
00000000000441ec	cmp	x10, x8, asr #4
00000000000441f0	mov	x8, #0xfffffffffffffff
00000000000441f4	csel	x23, x9, x8, hi
00000000000441f8	mov	x0, x23
00000000000441fc	mov	w1, #0x10
0000000000044200	bl	0x519e0 ; symbol stub for: _calloc
0000000000044204	add	x8, x0, x19, lsl #4
0000000000044208	add	x19, x0, x23, lsl #4
000000000004420c	stp	x27, x25, [x8]
0000000000044210	add	x20, x8, #0x10
0000000000044214	ldp	x1, x9, [x28, #0x120]
0000000000044218	sub	x2, x9, x1
000000000004421c	sub	x23, x8, x2
0000000000044220	cmp	x2, #0x1
0000000000044224	b.lt	0x44234
0000000000044228	mov	x0, x23
000000000004422c	bl	0x51aac ; symbol stub for: _memcpy
0000000000044230	ldr	x1, [x22]
0000000000044234	stp	x23, x20, [x28, #0x120]
0000000000044238	str	x19, [x28, #0x130]
000000000004423c	mov	x19, x21
0000000000044240	cbz	x1, 0x4424c
0000000000044244	mov	x0, x1
0000000000044248	bl	0x51a64 ; symbol stub for: _free
000000000004424c	movi.16b	v0, #0x0
0000000000044250	stp	q0, q0, [sp, #0x60]
0000000000044254	str	xzr, [sp, #0xa0]
0000000000044258	stp	q0, q0, [sp, #0x80]
000000000004425c	mov	x0, x19
0000000000044260	blr	x26
0000000000044264	ldr	x8, [x0]
0000000000044268	ldr	x9, [x8, #0x110]
000000000004426c	add	x10, sp, #0x60
0000000000044270	str	x10, [x8, #0x110]
0000000000044274	add	x11, sp, #0xb0
0000000000044278	str	x11, [x8, #0x110]
000000000004427c	ldr	x8, [x0]
0000000000044280	ldr	x11, [x8, #0x110]
0000000000044284	sub	x12, x29, #0xa0
0000000000044288	str	x12, [x8, #0x110]
000000000004428c	mov	x8, #0x900000000
0000000000044290	stp	x9, x8, [sp, #0x68]
0000000000044294	stp	q0, q0, [sp, #0xb0]
0000000000044298	mov	x8, #0x400000000
000000000004429c	stp	x10, x8, [sp, #0xb8]
00000000000442a0	stp	q0, q0, [x29, #-0xa0]
00000000000442a4	stp	x11, x8, [x29, #-0x98]
00000000000442a8	adr	x21, #0x427f0
00000000000442ac	nop
00000000000442b0	ldar	x22, [x21]
00000000000442b4	cmp	x22, #0x2
00000000000442b8	str	x26, [sp, #0x28]
00000000000442bc	b.hs	0x444ac
00000000000442c0	mov	x0, x19
00000000000442c4	blr	x26
00000000000442c8	ldr	x23, [x0]
00000000000442cc	ldp	x8, x9, [x23, #0x120]
00000000000442d0	cmp	x8, x9
00000000000442d4	b.eq	0x442f4
00000000000442d8	mov	x10, x9
00000000000442dc	ldr	x11, [x10, #-0x10]!
00000000000442e0	cmp	x11, x21
00000000000442e4	b.eq	0x443b4
00000000000442e8	mov	x9, x10
00000000000442ec	cmp	x10, x8
00000000000442f0	b.ne	0x442dc
00000000000442f4	add	x8, x23, #0x120
00000000000442f8	str	x8, [sp, #0x10]
00000000000442fc	add	x0, x23, #0x138
0000000000044300	mov	w9, #0x1
0000000000044304	ldaxr	w8, [x0]
0000000000044308	stlxr	w10, w9, [x0]
000000000004430c	cbnz	w10, 0x44304
0000000000044310	b	0x44320
0000000000044314	mov	w20, #0x1
0000000000044318	stlxr	w9, x20, [x21]
000000000004431c	cbz	w9, 0x44330
0000000000044320	ldaxr	x22, [x21]
0000000000044324	cbz	x22, 0x44314
0000000000044328	mov	w20, #0x0
000000000004432c	clrex
0000000000044330	cmp	x22, #0x1
0000000000044334	b.eq	0x44320
0000000000044338	cbz	x23, 0x44364
000000000004433c	ldaxr	w9, [x0]
0000000000044340	stlxr	w10, w8, [x0]
0000000000044344	cbnz	w10, 0x4433c
0000000000044348	cbnz	w8, 0x44364
000000000004434c	cmp	w9, #0x1
0000000000044350	b.ne	0x44364
0000000000044354	ldarb	w8, [x24]
0000000000044358	tbz	w8, #0x0, 0x44364
000000000004435c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000044360	movi.16b	v0, #0x0
0000000000044364	tbz	w20, #0x0, 0x443ac
0000000000044368	ldr	x8, [x23, #0x118]
000000000004436c	add	x0, x8, #0x70
0000000000044370	mov	w1, #0x20
0000000000044374	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000044378	mov	x22, x0
000000000004437c	adr	x8, #0x15744
0000000000044380	nop
0000000000044384	str	x8, [x22, #0x10]!
0000000000044388	stur	xzr, [x22, #-0x8]
000000000004438c	stur	x22, [x29, #-0x88]
0000000000044390	ldp	x9, x8, [x23, #0x128]
0000000000044394	cmp	x9, x8
0000000000044398	b.hs	0x443c0
000000000004439c	stp	x21, x22, [x9]
00000000000443a0	add	x8, x9, #0x10
00000000000443a4	str	x8, [x23, #0x128]
00000000000443a8	b	0x4445c
00000000000443ac	stur	x22, [x29, #-0x88]
00000000000443b0	b	0x444ac
00000000000443b4	ldur	x22, [x9, #-0x8]
00000000000443b8	stur	x22, [x29, #-0x88]
00000000000443bc	b	0x444ac
00000000000443c0	ldr	x10, [sp, #0x10]
00000000000443c4	ldr	x10, [x10]
00000000000443c8	sub	x9, x9, x10
00000000000443cc	asr	x19, x9, #4
00000000000443d0	add	x9, x19, #0x1
00000000000443d4	lsr	x11, x9, #60
00000000000443d8	cbnz	x11, 0x44a00
00000000000443dc	sub	x8, x8, x10
00000000000443e0	asr	x10, x8, #3
00000000000443e4	cmp	x10, x9
00000000000443e8	csel	x9, x9, x10, lo
00000000000443ec	mov	x10, #0x7ffffffffffffff
00000000000443f0	cmp	x10, x8, asr #4
00000000000443f4	mov	x8, #0xfffffffffffffff
00000000000443f8	csel	x20, x9, x8, hi
00000000000443fc	mov	x0, x20
0000000000044400	mov	w1, #0x10
0000000000044404	bl	0x519e0 ; symbol stub for: _calloc
0000000000044408	add	x8, x0, x19, lsl #4
000000000004440c	add	x20, x0, x20, lsl #4
0000000000044410	stp	x21, x22, [x8]
0000000000044414	add	x11, x8, #0x10
0000000000044418	ldp	x1, x9, [x23, #0x120]
000000000004441c	sub	x2, x9, x1
0000000000044420	sub	x19, x8, x2
0000000000044424	cmp	x2, #0x1
0000000000044428	b.lt	0x44440
000000000004442c	mov	x0, x19
0000000000044430	str	x11, [sp, #0x8]
0000000000044434	bl	0x51aac ; symbol stub for: _memcpy
0000000000044438	ldp	x11, x8, [sp, #0x8]
000000000004443c	ldr	x1, [x8]
0000000000044440	stp	x19, x11, [x23, #0x120]
0000000000044444	str	x20, [x23, #0x130]
0000000000044448	adrp	x19, 40 ; 0x6c000
000000000004444c	add	x19, x19, #0xbb0
0000000000044450	cbz	x1, 0x4445c
0000000000044454	mov	x0, x1
0000000000044458	bl	0x51a64 ; symbol stub for: _free
000000000004445c	mov	x0, x22
0000000000044460	bl	"_kfun:kotlin.native.MemoryModel.$OBJECT#<init>(){}"
0000000000044464	mov	w0, #0x1
0000000000044468	mov	w1, #0x28
000000000004446c	bl	0x519e0 ; symbol stub for: _calloc
0000000000044470	ldr	x8, [x23, #0x18]!
0000000000044474	sub	x9, x23, #0x8
0000000000044478	stp	x21, x9, [x0, #0x10]
000000000004447c	stp	x8, x23, [x0]
0000000000044480	str	x0, [x8, #0x8]
0000000000044484	str	x0, [x23]
0000000000044488	ldr	x8, [x23, #0x10]
000000000004448c	add	x8, x8, #0x1
0000000000044490	str	x8, [x23, #0x10]
0000000000044494	str	x0, [x0, #0x20]
0000000000044498	stlr	x22, [x21]
000000000004449c	ldr	x8, [x23, #0x110]
00000000000444a0	sub	x8, x8, #0x10
00000000000444a4	str	x8, [x23, #0x110]
00000000000444a8	movi.16b	v0, #0x0
00000000000444ac	ldr	x20, [x22, #0x8]
00000000000444b0	stp	q0, q0, [x29, #-0x80]
00000000000444b4	stur	xzr, [x29, #-0x60]
00000000000444b8	mov	x0, x19
00000000000444bc	blr	x26
00000000000444c0	ldr	x8, [x0]
00000000000444c4	ldr	x9, [x8, #0x110]
00000000000444c8	sub	x10, x29, #0x80
00000000000444cc	str	x10, [x8, #0x110]
00000000000444d0	mov	x8, #0x500000000
00000000000444d4	stp	x9, x8, [x29, #-0x78]
00000000000444d8	mov	x0, x19
00000000000444dc	ldr	w19, [x20, #0x8]
00000000000444e0	tbnz	w19, #0x1f, 0x449c8
00000000000444e4	blr	x26
00000000000444e8	ldr	x8, [x0]
00000000000444ec	ldr	x8, [x8, #0x118]
00000000000444f0	lsl	x9, x19, #3
00000000000444f4	add	x9, x9, #0x1f
00000000000444f8	and	x1, x9, #0xffffffff8
00000000000444fc	add	x0, x8, #0x70
0000000000044500	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000044504	mov	x22, x0
0000000000044508	mov	x23, x0
000000000004450c	str	xzr, [x23, #0x10]!
0000000000044510	str	xzr, [x0, #0x18]
0000000000044514	str	xzr, [x0, #0x8]
0000000000044518	adr	x8, #0x140c8
000000000004451c	nop
0000000000044520	str	x8, [x23]
0000000000044524	str	w19, [x0, #0x18]
0000000000044528	stur	x23, [x29, #-0x68]
000000000004452c	ldr	w8, [x20, #0x8]
0000000000044530	add	x19, x20, #0x10
0000000000044534	add	x20, x0, #0x20
0000000000044538	bic	w26, w8, w8, asr #31
000000000004453c	cbz	w26, 0x44578
0000000000044540	ldarb	w8, [x24]
0000000000044544	tbz	w8, #0x0, 0x4454c
0000000000044548	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004454c	ldr	x8, [x19]
0000000000044550	stur	x8, [x29, #-0x60]
0000000000044554	ldrsw	x9, [x8, #0x10]
0000000000044558	ldr	w10, [x22, #0x18]
000000000004455c	cmp	w10, w9
0000000000044560	b.ls	0x449b4
0000000000044564	ldr	xzr, [x23]
0000000000044568	str	x8, [x20, x9, lsl #3]
000000000004456c	sub	w26, w26, #0x1
0000000000044570	add	x19, x19, #0x8
0000000000044574	cbnz	w26, 0x44540
0000000000044578	ldr	x8, [x23]
000000000004457c	and	x8, x8, #0xfffffffffffffffc
0000000000044580	ldr	x8, [x8]
0000000000044584	ldr	w8, [x8, #0x5c]
0000000000044588	cmp	w8, #0x49
000000000004458c	b.ne	0x449d0
0000000000044590	adrp	x19, 40 ; 0x6c000
0000000000044594	add	x19, x19, #0xbb0
0000000000044598	mov	x0, x19
000000000004459c	ldr	x26, [sp, #0x28]
00000000000445a0	blr	x26
00000000000445a4	ldr	x8, [x0]
00000000000445a8	str	x23, [sp, #0xc8]
00000000000445ac	ldur	x9, [x29, #-0x98]
00000000000445b0	str	x9, [x8, #0x110]
00000000000445b4	ldr	w9, [x22, #0x18]
00000000000445b8	cmp	w9, #0x2
00000000000445bc	b.ls	0x449e4
00000000000445c0	ldr	x22, [x22, #0x30]
00000000000445c4	str	x22, [sp, #0x78]
00000000000445c8	ldr	x9, [sp, #0xb8]
00000000000445cc	str	x9, [x8, #0x110]
00000000000445d0	ldar	x23, [x21]
00000000000445d4	cmp	x23, #0x2
00000000000445d8	b.hs	0x447c8
00000000000445dc	mov	x0, x19
00000000000445e0	blr	x26
00000000000445e4	ldr	x20, [x0]
00000000000445e8	ldp	x8, x9, [x20, #0x120]
00000000000445ec	cmp	x8, x9
00000000000445f0	b.eq	0x44610
00000000000445f4	mov	x10, x9
00000000000445f8	ldr	x11, [x10, #-0x10]!
00000000000445fc	cmp	x11, x21
0000000000044600	b.eq	0x446d4
0000000000044604	mov	x9, x10
0000000000044608	cmp	x10, x8
000000000004460c	b.ne	0x445f8
0000000000044610	add	x8, x20, #0x120
0000000000044614	str	x8, [sp, #0x10]
0000000000044618	add	x0, x20, #0x138
000000000004461c	mov	w9, #0x1
0000000000044620	ldaxr	w8, [x0]
0000000000044624	stlxr	w10, w9, [x0]
0000000000044628	cbnz	w10, 0x44620
000000000004462c	b	0x4463c
0000000000044630	mov	w19, #0x1
0000000000044634	stlxr	w9, x19, [x21]
0000000000044638	cbz	w9, 0x4464c
000000000004463c	ldaxr	x23, [x21]
0000000000044640	cbz	x23, 0x44630
0000000000044644	mov	w19, #0x0
0000000000044648	clrex
000000000004464c	cmp	x23, #0x1
0000000000044650	b.eq	0x4463c
0000000000044654	cbz	x20, 0x4467c
0000000000044658	ldaxr	w9, [x0]
000000000004465c	stlxr	w10, w8, [x0]
0000000000044660	cbnz	w10, 0x44658
0000000000044664	cbnz	w8, 0x4467c
0000000000044668	cmp	w9, #0x1
000000000004466c	b.ne	0x4467c
0000000000044670	ldarb	w8, [x24]
0000000000044674	tbz	w8, #0x0, 0x4467c
0000000000044678	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004467c	tbz	w19, #0x0, 0x446c4
0000000000044680	ldr	x8, [x20, #0x118]
0000000000044684	add	x0, x8, #0x70
0000000000044688	mov	w1, #0x20
000000000004468c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000044690	mov	x23, x0
0000000000044694	adr	x8, #0x1542c
0000000000044698	nop
000000000004469c	str	x8, [x23, #0x10]!
00000000000446a0	stur	xzr, [x23, #-0x8]
00000000000446a4	str	x23, [sp, #0x80]
00000000000446a8	ldp	x9, x8, [x20, #0x128]
00000000000446ac	cmp	x9, x8
00000000000446b0	b.hs	0x446e0
00000000000446b4	stp	x21, x23, [x9]
00000000000446b8	add	x8, x9, #0x10
00000000000446bc	str	x8, [x20, #0x128]
00000000000446c0	b	0x44774
00000000000446c4	str	x23, [sp, #0x80]
00000000000446c8	adrp	x19, 40 ; 0x6c000
00000000000446cc	add	x19, x19, #0xbb0
00000000000446d0	b	0x447c8
00000000000446d4	ldur	x23, [x9, #-0x8]
00000000000446d8	str	x23, [sp, #0x80]
00000000000446dc	b	0x447c8
00000000000446e0	ldr	x10, [sp, #0x10]
00000000000446e4	ldr	x10, [x10]
00000000000446e8	sub	x9, x9, x10
00000000000446ec	asr	x19, x9, #4
00000000000446f0	add	x9, x19, #0x1
00000000000446f4	lsr	x11, x9, #60
00000000000446f8	cbnz	x11, 0x44a0c
00000000000446fc	sub	x8, x8, x10
0000000000044700	asr	x10, x8, #3
0000000000044704	cmp	x10, x9
0000000000044708	csel	x9, x9, x10, lo
000000000004470c	mov	x10, #0x7ffffffffffffff
0000000000044710	cmp	x10, x8, asr #4
0000000000044714	mov	x8, #0xfffffffffffffff
0000000000044718	csel	x24, x9, x8, hi
000000000004471c	mov	x0, x24
0000000000044720	mov	w1, #0x10
0000000000044724	bl	0x519e0 ; symbol stub for: _calloc
0000000000044728	add	x8, x0, x19, lsl #4
000000000004472c	add	x19, x0, x24, lsl #4
0000000000044730	stp	x21, x23, [x8]
0000000000044734	add	x26, x8, #0x10
0000000000044738	ldp	x1, x9, [x20, #0x120]
000000000004473c	sub	x2, x9, x1
0000000000044740	sub	x24, x8, x2
0000000000044744	cmp	x2, #0x1
0000000000044748	b.lt	0x4475c
000000000004474c	mov	x0, x24
0000000000044750	bl	0x51aac ; symbol stub for: _memcpy
0000000000044754	ldr	x8, [sp, #0x10]
0000000000044758	ldr	x1, [x8]
000000000004475c	stp	x24, x26, [x20, #0x120]
0000000000044760	str	x19, [x20, #0x130]
0000000000044764	ldr	x26, [sp, #0x28]
0000000000044768	cbz	x1, 0x44774
000000000004476c	mov	x0, x1
0000000000044770	bl	0x51a64 ; symbol stub for: _free
0000000000044774	mov	x0, x23
0000000000044778	adrp	x19, 40 ; 0x6c000
000000000004477c	add	x19, x19, #0xbb0
0000000000044780	bl	"_kfun:kotlin.native.MemoryModel.$OBJECT#<init>(){}"
0000000000044784	mov	w0, #0x1
0000000000044788	mov	w1, #0x28
000000000004478c	bl	0x519e0 ; symbol stub for: _calloc
0000000000044790	ldr	x8, [x20, #0x18]!
0000000000044794	sub	x9, x20, #0x8
0000000000044798	stp	x21, x9, [x0, #0x10]
000000000004479c	stp	x8, x20, [x0]
00000000000447a0	str	x0, [x8, #0x8]
00000000000447a4	str	x0, [x20]
00000000000447a8	ldr	x8, [x20, #0x10]
00000000000447ac	add	x8, x8, #0x1
00000000000447b0	str	x8, [x20, #0x10]
00000000000447b4	str	x0, [x0, #0x20]
00000000000447b8	stlr	x23, [x21]
00000000000447bc	ldr	x8, [x20, #0x110]
00000000000447c0	sub	x8, x8, #0x10
00000000000447c4	str	x8, [x20, #0x110]
00000000000447c8	ldr	x8, [x23, #0x8]
00000000000447cc	ldr	w9, [x8, #0x8]
00000000000447d0	cbz	w9, 0x449ec
00000000000447d4	ldr	x1, [x8, #0x10]
00000000000447d8	str	x1, [sp, #0x88]
00000000000447dc	ldr	x8, [x22]
00000000000447e0	and	x8, x8, #0xfffffffffffffffc
00000000000447e4	ldr	x8, [x8]
00000000000447e8	ldr	x8, [x8, #0x70]
00000000000447ec	mov	x0, x22
00000000000447f0	blr	x8
00000000000447f4	ldr	x21, [sp, #0x20]
00000000000447f8	add	x23, sp, #0x30
00000000000447fc	mov	x22, x0
0000000000044800	mov	x0, x19
0000000000044804	blr	x26
0000000000044808	ldr	x8, [x0]
000000000004480c	ldr	x8, [x8, #0x118]
0000000000044810	add	x0, x8, #0x70
0000000000044814	mov	w1, #0x20
0000000000044818	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004481c	adr	x9, #0x15334
0000000000044820	nop
0000000000044824	mov	x8, x0
0000000000044828	str	x9, [x8, #0x10]!
000000000004482c	str	xzr, [x0, #0x8]
0000000000044830	tbz	w22, #0x0, 0x44840
0000000000044834	str	x8, [sp, #0x90]
0000000000044838	str	xzr, [x0, #0x18]
000000000004483c	b	0x4484c
0000000000044840	str	x8, [sp, #0x98]
0000000000044844	str	xzr, [x0, #0x18]
0000000000044848	str	x8, [sp, #0xa0]
000000000004484c	ldr	x9, [sp, #0x18]
0000000000044850	str	x8, [x9, #0x18]
0000000000044854	mov	x0, x19
0000000000044858	blr	x26
000000000004485c	ldr	x8, [x0]
0000000000044860	ldr	x9, [sp, #0x68]
0000000000044864	str	x9, [x8, #0x110]
0000000000044868	mov	w0, #0x1
000000000004486c	mov	w1, #0x28
0000000000044870	bl	0x519e0 ; symbol stub for: _calloc
0000000000044874	ldr	x8, [x28, #0x18]!
0000000000044878	sub	x9, x28, #0x8
000000000004487c	stp	x27, x9, [x0, #0x10]
0000000000044880	stp	x8, x28, [x0]
0000000000044884	str	x0, [x8, #0x8]
0000000000044888	str	x0, [x28]
000000000004488c	ldr	x8, [x28, #0x10]
0000000000044890	add	x8, x8, #0x1
0000000000044894	str	x8, [x28, #0x10]
0000000000044898	str	x0, [x0, #0x20]
000000000004489c	stlr	x25, [x27]
00000000000448a0	ldr	x8, [x28, #0x110]
00000000000448a4	sub	x8, x8, #0x10
00000000000448a8	str	x8, [x28, #0x110]
00000000000448ac	ldr	x8, [x25, #0x8]
00000000000448b0	add	x8, x8, #0x8
00000000000448b4	ldar	x0, [x8]
00000000000448b8	str	x0, [sp, #0x50]
00000000000448bc	cbz	x0, 0x449bc
00000000000448c0	add	x2, x23, #0x28
00000000000448c4	ldr	x8, [x0]
00000000000448c8	and	x8, x8, #0xfffffffffffffffc
00000000000448cc	ldr	x8, [x8]
00000000000448d0	ldr	w9, [x8, #0x3c]
00000000000448d4	ldr	x8, [x8, #0x40]
00000000000448d8	tbnz	w9, #0x1f, 0x448e8
00000000000448dc	mov	w10, #0x2c
00000000000448e0	and	x9, x9, x10
00000000000448e4	b	0x4496c
00000000000448e8	neg	w10, w9
00000000000448ec	mvn	w9, w9
00000000000448f0	cmp	w10, #0x9
00000000000448f4	b.ge	0x4492c
00000000000448f8	cmp	w10, #0x2
00000000000448fc	b.lt	0x44960
0000000000044900	mov	x10, #0x0
0000000000044904	mov	x11, x8
0000000000044908	ldr	w12, [x11]
000000000004490c	cmp	w12, #0x2b
0000000000044910	b.gt	0x44968
0000000000044914	add	x10, x10, #0x1
0000000000044918	add	x11, x11, #0x10
000000000004491c	cmp	x9, x10
0000000000044920	b.ne	0x44908
0000000000044924	mov	x10, x9
0000000000044928	b	0x44968
000000000004492c	mov	w10, #0x0
0000000000044930	add	w11, w9, w10
0000000000044934	cmp	w11, #0x0
0000000000044938	cinc	w11, w11, lt
000000000004493c	asr	w11, w11, #1
0000000000044940	sbfiz	x12, x11, #4, #32
0000000000044944	ldr	w12, [x8, x12]
0000000000044948	cmp	w12, #0x2c
000000000004494c	csinc	w10, w10, w11, ge
0000000000044950	csel	w9, w9, w11, lt
0000000000044954	cmp	w10, w9
0000000000044958	b.lt	0x44930
000000000004495c	b	0x44968
0000000000044960	mov	w10, #0x0
0000000000044964	b	0x44968
0000000000044968	sxtw	x9, w10
000000000004496c	add	x8, x8, x9, lsl #4
0000000000044970	ldr	x8, [x8, #0x8]
0000000000044974	ldr	x8, [x8]
0000000000044978	mov	x1, x21
000000000004497c	blr	x8
0000000000044980	mov	x0, x19
0000000000044984	blr	x26
0000000000044988	ldr	x8, [x0]
000000000004498c	ldr	x9, [sp, #0x38]
0000000000044990	str	x9, [x8, #0x110]
0000000000044994	ldp	x29, x30, [sp, #0x170]
0000000000044998	ldp	x20, x19, [sp, #0x160]
000000000004499c	ldp	x22, x21, [sp, #0x150]
00000000000449a0	ldp	x24, x23, [sp, #0x140]
00000000000449a4	ldp	x26, x25, [sp, #0x130]
00000000000449a8	ldp	x28, x27, [sp, #0x120]
00000000000449ac	add	sp, sp, #0x180
00000000000449b0	ret
00000000000449b4	bl	_ThrowArrayIndexOutOfBoundsException
00000000000449b8	b	0x44ae4
00000000000449bc	mov	x0, x21
00000000000449c0	bl	_ThrowException
00000000000449c4	b	0x44ae4
00000000000449c8	bl	_ThrowIllegalArgumentException
00000000000449cc	b	0x44ae4
00000000000449d0	adr	x1, #0x13c10
00000000000449d4	nop
00000000000449d8	mov	x0, x23
00000000000449dc	bl	_ThrowClassCastException
00000000000449e0	b	0x44ae4
00000000000449e4	bl	_ThrowArrayIndexOutOfBoundsException
00000000000449e8	b	0x44ae4
00000000000449ec	bl	_ThrowArrayIndexOutOfBoundsException
00000000000449f0	b	0x44ae4
00000000000449f4	mov	x0, x22
00000000000449f8	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000449fc	b	0x44ae4
0000000000044a00	ldr	x0, [sp, #0x10]
0000000000044a04	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000044a08	b	0x44ae4
0000000000044a0c	ldr	x0, [sp, #0x10]
0000000000044a10	bl	0x517ac ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000044a14	b	0x44ae4
0000000000044a18	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000044a1c	str	xzr, [sp, #0x80]
0000000000044a20	stlr	xzr, [x21]
0000000000044a24	ldr	x8, [x20, #0x128]
0000000000044a28	sub	x8, x8, #0x10
0000000000044a2c	str	x8, [x20, #0x128]
0000000000044a30	bl	0x51968 ; symbol stub for: ___cxa_rethrow
0000000000044a34	b	0x44ae4
0000000000044a38	b	0x44a5c
0000000000044a3c	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000044a40	stur	xzr, [x29, #-0x88]
0000000000044a44	stlr	xzr, [x21]
0000000000044a48	ldr	x8, [x23, #0x128]
0000000000044a4c	sub	x8, x8, #0x10
0000000000044a50	str	x8, [x23, #0x128]
0000000000044a54	bl	0x51968 ; symbol stub for: ___cxa_rethrow
0000000000044a58	b	0x44ae4
0000000000044a5c	mov	x20, x0
0000000000044a60	bl	0x51944 ; symbol stub for: ___cxa_end_catch
0000000000044a64	b	0x44a7c
0000000000044a68	str	x26, [sp, #0x28]
0000000000044a6c	mov	x21, x1
0000000000044a70	mov	x20, x0
0000000000044a74	b	0x44aac
0000000000044a78	mov	x20, x0
0000000000044a7c	mov	x0, x20
0000000000044a80	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000044a84	str	xzr, [sp, #0x48]
0000000000044a88	stlr	xzr, [x27]
0000000000044a8c	ldr	x8, [x28, #0x128]
0000000000044a90	sub	x8, x8, #0x10
0000000000044a94	str	x8, [x28, #0x128]
0000000000044a98	bl	0x51968 ; symbol stub for: ___cxa_rethrow
0000000000044a9c	b	0x44ae4
0000000000044aa0	mov	x21, x1
0000000000044aa4	mov	x20, x0
0000000000044aa8	bl	0x51944 ; symbol stub for: ___cxa_end_catch
0000000000044aac	adrp	x0, 40 ; 0x6c000
0000000000044ab0	add	x0, x0, #0xbb0
0000000000044ab4	ldr	x8, [sp, #0x28]
0000000000044ab8	blr	x8
0000000000044abc	ldr	x8, [x0]
0000000000044ac0	ldr	x9, [sp, #0x38]
0000000000044ac4	str	x9, [x8, #0x110]
0000000000044ac8	cmp	w21, #0x2
0000000000044acc	b.ne	0x44af0
0000000000044ad0	mov	x0, x20
0000000000044ad4	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
0000000000044ad8	ldr	x8, [x0, #0x8]
0000000000044adc	ldr	x0, [x8]
0000000000044ae0	bl	__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader
0000000000044ae4	brk	#0x1
0000000000044ae8	mov	x20, x0
0000000000044aec	bl	0x51944 ; symbol stub for: ___cxa_end_catch
0000000000044af0	mov	x0, x20
0000000000044af4	bl	___clang_call_terminate
__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader:
0000000000044af8	stp	x29, x30, [sp, #-0x10]!
0000000000044afc	mov	x29, sp
0000000000044b00	bl	__ZN12_GLOBAL__N_13$_0clIZNS_31terminateWithUnhandledExceptionEP9ObjHeaderE3$_1EEvT_
__ZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEv:
0000000000044b04	stp	x29, x30, [sp, #-0x10]!
0000000000044b08	mov	x29, sp
0000000000044b0c	bl	__ZN12_GLOBAL__N_13$_0clIZNS_16TerminateHandler13queuedHandlerEvEUlvE_EEvT_
__ZN12_GLOBAL__N_13$_0clIZNS_16TerminateHandler13queuedHandlerEvEUlvE_EEvT_:
0000000000044b10	sub	sp, sp, #0x50
0000000000044b14	stp	x22, x21, [sp, #0x20]
0000000000044b18	stp	x20, x19, [sp, #0x30]
0000000000044b1c	stp	x29, x30, [sp, #0x40]
0000000000044b20	add	x29, sp, #0x40
0000000000044b24	adr	x8, #0x27a50
0000000000044b28	nop
0000000000044b2c	mov	w9, #0x1
0000000000044b30	ldaxr	w10, [x8]
0000000000044b34	cbnz	w10, 0x44b44
0000000000044b38	stlxr	w10, w9, [x8]
0000000000044b3c	cbnz	w10, 0x44b30
0000000000044b40	bl	__ZZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEvENKUlvE_clEv
0000000000044b44	clrex
0000000000044b48	str	xzr, [sp, #0x10]
0000000000044b4c	mov	w20, #0x1
0000000000044b50	str	w20, [sp, #0x18]
0000000000044b54	strb	wzr, [sp, #0x1c]
0000000000044b58	adrp	x0, 40 ; 0x6c000
0000000000044b5c	add	x0, x0, #0xbb0
0000000000044b60	ldr	x8, [x0]
0000000000044b64	blr	x8
0000000000044b68	ldr	x21, [x0]
0000000000044b6c	cbz	x21, 0x44b94
0000000000044b70	add	x8, x21, #0x138
0000000000044b74	mov	w9, #0x1
0000000000044b78	ldaxr	w20, [x8]
0000000000044b7c	stlxr	w10, w9, [x8]
0000000000044b80	cbnz	w10, 0x44b78
0000000000044b84	str	x21, [sp, #0x10]
0000000000044b88	str	w20, [sp, #0x18]
0000000000044b8c	mov	w8, #0x1
0000000000044b90	strb	w8, [sp, #0x1c]
0000000000044b94	nop
0000000000044b98	ldr	w0, __ZN12_GLOBAL__N_126concurrentTerminateWrapperE
0000000000044b9c	bl	0x51d04 ; symbol stub for: _sleep
0000000000044ba0	add	x0, sp, #0x8
0000000000044ba4	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
0000000000044ba8	mov	w0, #0x1
0000000000044bac	bl	0x51788 ; symbol stub for: __Exit
0000000000044bb0	mov	x19, x0
0000000000044bb4	cbz	x21, 0x44be8
0000000000044bb8	add	x0, x21, #0x138
0000000000044bbc	ldaxr	w8, [x0]
0000000000044bc0	stlxr	w9, w20, [x0]
0000000000044bc4	cbnz	w9, 0x44bbc
0000000000044bc8	cbnz	w20, 0x44be8
0000000000044bcc	cmp	w8, #0x1
0000000000044bd0	b.ne	0x44be8
0000000000044bd4	adr	x8, #0x41e6f
0000000000044bd8	nop
0000000000044bdc	ldarb	w8, [x8]
0000000000044be0	tbz	w8, #0x0, 0x44be8
0000000000044be4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000044be8	mov	x0, x19
0000000000044bec	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEvENKUlvE_clEv:
0000000000044bf0	stp	x29, x30, [sp, #-0x10]!
0000000000044bf4	mov	x29, sp
0000000000044bf8	bl	__ZN12_GLOBAL__N_116TerminateHandler8instanceEv
0000000000044bfc	nop
0000000000044c00	ldr	x8, #0x420d0
0000000000044c04	blr	x8
__ZN12_GLOBAL__N_116TerminateHandler8instanceEv:
0000000000044c08	stp	x20, x19, [sp, #-0x20]!
0000000000044c0c	stp	x29, x30, [sp, #0x10]
0000000000044c10	add	x29, sp, #0x10
0000000000044c14	adr	x8, #0x420b4
0000000000044c18	nop
0000000000044c1c	ldarb	w8, [x8]
0000000000044c20	tbz	w8, #0x0, 0x44c30
0000000000044c24	ldp	x29, x30, [sp, #0x10]
0000000000044c28	ldp	x20, x19, [sp], #0x20
0000000000044c2c	ret
0000000000044c30	adr	x19, #0x42098
0000000000044c34	nop
0000000000044c38	mov	x0, x19
0000000000044c3c	bl	0x51950 ; symbol stub for: ___cxa_guard_acquire
0000000000044c40	cbz	w0, 0x44c24
0000000000044c44	adr	x0, #-0xe28
0000000000044c48	nop
0000000000044c4c	bl	0x518e4 ; symbol stub for: __ZSt13set_terminatePFvvE
0000000000044c50	str	x0, [x19, #0x8]
0000000000044c54	mov	x0, x19
0000000000044c58	ldp	x29, x30, [sp, #0x10]
0000000000044c5c	ldp	x20, x19, [sp], #0x20
0000000000044c60	b	0x5195c ; symbol stub for: ___cxa_guard_release
__ZN12_GLOBAL__N_13$_0clIZNS_31terminateWithUnhandledExceptionEP9ObjHeaderE3$_1EEvT_:
0000000000044c64	sub	sp, sp, #0x50
0000000000044c68	stp	x22, x21, [sp, #0x20]
0000000000044c6c	stp	x20, x19, [sp, #0x30]
0000000000044c70	stp	x29, x30, [sp, #0x40]
0000000000044c74	add	x29, sp, #0x40
0000000000044c78	str	x0, [sp, #0x18]
0000000000044c7c	adr	x8, #0x278f8
0000000000044c80	nop
0000000000044c84	mov	w9, #0x1
0000000000044c88	ldaxr	w10, [x8]
0000000000044c8c	cbnz	w10, 0x44ca0
0000000000044c90	stlxr	w10, w9, [x8]
0000000000044c94	cbnz	w10, 0x44c88
0000000000044c98	add	x0, sp, #0x18
0000000000044c9c	bl	__ZZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeaderENK3$_1clEv
0000000000044ca0	clrex
0000000000044ca4	str	xzr, [sp, #0x8]
0000000000044ca8	mov	w20, #0x1
0000000000044cac	str	w20, [sp, #0x10]
0000000000044cb0	strb	wzr, [sp, #0x14]
0000000000044cb4	adrp	x0, 40 ; 0x6c000
0000000000044cb8	add	x0, x0, #0xbb0
0000000000044cbc	ldr	x8, [x0]
0000000000044cc0	blr	x8
0000000000044cc4	ldr	x21, [x0]
0000000000044cc8	cbz	x21, 0x44cf0
0000000000044ccc	add	x8, x21, #0x138
0000000000044cd0	mov	w9, #0x1
0000000000044cd4	ldaxr	w20, [x8]
0000000000044cd8	stlxr	w10, w9, [x8]
0000000000044cdc	cbnz	w10, 0x44cd4
0000000000044ce0	str	x21, [sp, #0x8]
0000000000044ce4	str	w20, [sp, #0x10]
0000000000044ce8	mov	w8, #0x1
0000000000044cec	strb	w8, [sp, #0x14]
0000000000044cf0	nop
0000000000044cf4	ldr	w0, __ZN12_GLOBAL__N_126concurrentTerminateWrapperE
0000000000044cf8	bl	0x51d04 ; symbol stub for: _sleep
0000000000044cfc	mov	x0, sp
0000000000044d00	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
0000000000044d04	mov	w0, #0x1
0000000000044d08	bl	0x51788 ; symbol stub for: __Exit
0000000000044d0c	mov	x19, x0
0000000000044d10	cbz	x21, 0x44d44
0000000000044d14	add	x0, x21, #0x138
0000000000044d18	ldaxr	w8, [x0]
0000000000044d1c	stlxr	w9, w20, [x0]
0000000000044d20	cbnz	w9, 0x44d18
0000000000044d24	cbnz	w20, 0x44d44
0000000000044d28	cmp	w8, #0x1
0000000000044d2c	b.ne	0x44d44
0000000000044d30	adr	x8, #0x41d13
0000000000044d34	nop
0000000000044d38	ldarb	w8, [x8]
0000000000044d3c	tbz	w8, #0x0, 0x44d44
0000000000044d40	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000044d44	mov	x0, x19
0000000000044d48	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeaderENK3$_1clEv:
0000000000044d4c	stp	x20, x19, [sp, #-0x20]!
0000000000044d50	stp	x29, x30, [sp, #0x10]
0000000000044d54	add	x29, sp, #0x10
0000000000044d58	mov	x19, x0
0000000000044d5c	ldr	x0, [x0]
0000000000044d60	bl	_ReportUnhandledException
0000000000044d64	ldr	x0, [x19]
0000000000044d68	bl	__Z28ReportBacktraceToIosCrashLogP9ObjHeader
0000000000044d6c	bl	__ZN5konan5abortEv
__Z28ReportBacktraceToIosCrashLogP9ObjHeader:
0000000000044d70	sub	sp, sp, #0xb0
0000000000044d74	stp	x28, x27, [sp, #0x50]
0000000000044d78	stp	x26, x25, [sp, #0x60]
0000000000044d7c	stp	x24, x23, [sp, #0x70]
0000000000044d80	stp	x22, x21, [sp, #0x80]
0000000000044d84	stp	x20, x19, [sp, #0x90]
0000000000044d88	stp	x29, x30, [sp, #0xa0]
0000000000044d8c	add	x29, sp, #0xa0
0000000000044d90	mov	x19, x0
0000000000044d94	nop
0000000000044d98	ldr	x0, #0x13268 ; literal pool symbol address: _CFRunLoopRun
0000000000044d9c	add	x1, sp, #0x18
0000000000044da0	bl	0x51a4c ; symbol stub for: _dladdr
0000000000044da4	ldr	x24, [sp, #0x20]
0000000000044da8	cmp	w0, #0x0
0000000000044dac	ccmp	x24, #0x0, #0x4, ne
0000000000044db0	b.eq	0x44fb0
0000000000044db4	ldr	w8, [x24]
0000000000044db8	mov	w9, #0xfacf
0000000000044dbc	movk	w9, #0xfeed, lsl #16
0000000000044dc0	cmp	w8, w9
0000000000044dc4	b.ne	0x44fb0
0000000000044dc8	ldr	w25, [x24, #0x10]
0000000000044dcc	cbz	w25, 0x44fb0
0000000000044dd0	str	xzr, [sp, #0x10]
0000000000044dd4	mov	w27, #0x0
0000000000044dd8	add	x28, x24, #0x20
0000000000044ddc	adr	x20, #0x11d57 ; literal pool for: "__TEXT"
0000000000044de0	nop
0000000000044de4	adr	x21, #0x11d56 ; literal pool for: "__DATA"
0000000000044de8	nop
0000000000044dec	adr	x22, #0x11d55 ; literal pool for: "__cf_except_bt"
0000000000044df0	nop
0000000000044df4	b	0x44e0c
0000000000044df8	ldr	w8, [x28, #0x4]
0000000000044dfc	add	x28, x8, x28
0000000000044e00	add	w27, w27, #0x1
0000000000044e04	cmp	w27, w25
0000000000044e08	b.eq	0x44fb0
0000000000044e0c	ldr	w8, [x28]
0000000000044e10	cmp	w8, #0x19
0000000000044e14	b.ne	0x44df8
0000000000044e18	add	x23, x28, #0x8
0000000000044e1c	mov	x0, x23
0000000000044e20	mov	x1, x20
0000000000044e24	mov	w2, #0x10
0000000000044e28	bl	0x51d40 ; symbol stub for: _strncmp
0000000000044e2c	cbz	w0, 0x44e48
0000000000044e30	mov	x0, x23
0000000000044e34	mov	x1, x21
0000000000044e38	mov	w2, #0x10
0000000000044e3c	bl	0x51d40 ; symbol stub for: _strncmp
0000000000044e40	cbnz	w0, 0x44df8
0000000000044e44	b	0x44e64
0000000000044e48	ldr	x8, [x28, #0x18]
0000000000044e4c	str	x8, [sp, #0x10]
0000000000044e50	mov	x0, x23
0000000000044e54	mov	x1, x21
0000000000044e58	mov	w2, #0x10
0000000000044e5c	bl	0x51d40 ; symbol stub for: _strncmp
0000000000044e60	cbnz	w0, 0x44df8
0000000000044e64	ldr	w26, [x28, #0x40]
0000000000044e68	cbz	w26, 0x44df8
0000000000044e6c	add	x23, x28, #0x48
0000000000044e70	b	0x44e80
0000000000044e74	add	x23, x23, #0x50
0000000000044e78	subs	x26, x26, #0x1
0000000000044e7c	b.eq	0x44df8
0000000000044e80	mov	x0, x23
0000000000044e84	mov	x1, x22
0000000000044e88	mov	w2, #0x10
0000000000044e8c	bl	0x51d40 ; symbol stub for: _strncmp
0000000000044e90	cbnz	w0, 0x44e74
0000000000044e94	add	x0, x23, #0x10
0000000000044e98	mov	x1, x21
0000000000044e9c	mov	w2, #0x10
0000000000044ea0	bl	0x51d40 ; symbol stub for: _strncmp
0000000000044ea4	cbnz	w0, 0x44e74
0000000000044ea8	ldp	x8, x22, [x23, #0x20]
0000000000044eac	ldr	x9, [sp, #0x10]
0000000000044eb0	sub	x9, x24, x9
0000000000044eb4	add	x20, x8, x9
0000000000044eb8	cmp	x22, #0x2
0000000000044ebc	ccmp	x20, #0x0, #0x4, hs
0000000000044ec0	b.eq	0x44fb0
0000000000044ec4	str	xzr, [sp, #0x30]
0000000000044ec8	adrp	x21, 40 ; 0x6c000
0000000000044ecc	add	x21, x21, #0xbb0
0000000000044ed0	ldr	x23, [x21]
0000000000044ed4	mov	x0, x21
0000000000044ed8	blr	x23
0000000000044edc	ldr	x8, [x0]
0000000000044ee0	ldr	x9, [x8, #0x110]
0000000000044ee4	mov	x10, #0x400000000
0000000000044ee8	stp	x9, x10, [sp, #0x20]
0000000000044eec	add	x9, sp, #0x18
0000000000044ef0	stp	xzr, x9, [sp, #0x38]
0000000000044ef4	add	x9, sp, #0x38
0000000000044ef8	str	x9, [x8, #0x110]
0000000000044efc	mov	x8, #0x300000000
0000000000044f00	str	x8, [sp, #0x48]
0000000000044f04	adr	x8, #0x41b3f
0000000000044f08	nop
0000000000044f0c	ldarb	w8, [x8]
0000000000044f10	tbz	w8, #0x0, 0x44f18
0000000000044f14	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000044f18	ldr	x24, [x19, #0x18]
0000000000044f1c	str	x24, [sp, #0x30]
0000000000044f20	mov	x0, x21
0000000000044f24	blr	x23
0000000000044f28	ldr	x8, [x0]
0000000000044f2c	ldr	x9, [sp, #0x40]
0000000000044f30	str	x9, [x8, #0x110]
0000000000044f34	mov	w8, #0x28
0000000000044f38	strb	w8, [x20], #0x1
0000000000044f3c	ldr	w8, [x24, #0x8]
0000000000044f40	cbz	w8, 0x44f94
0000000000044f44	mov	w25, #0x0
0000000000044f48	add	x26, x24, #0x10
0000000000044f4c	sub	x19, x22, #0x1
0000000000044f50	adr	x22, #0x11c00 ; literal pool for: "0x%lx "
0000000000044f54	nop
0000000000044f58	ldr	x8, [x26, w25, sxtw #3]
0000000000044f5c	str	x8, [sp]
0000000000044f60	mov	x0, x20
0000000000044f64	mov	x1, x19
0000000000044f68	mov	x2, x22
0000000000044f6c	bl	0x51d10 ; symbol stub for: _snprintf
0000000000044f70	tbnz	w0, #0x1f, 0x44f94
0000000000044f74	mov	w8, w0
0000000000044f78	subs	x19, x19, x8
0000000000044f7c	b.ls	0x44f94
0000000000044f80	add	x20, x20, x8
0000000000044f84	add	w25, w25, #0x1
0000000000044f88	ldr	w8, [x24, #0x8]
0000000000044f8c	cmp	w25, w8
0000000000044f90	b.lo	0x44f58
0000000000044f94	mov	w8, #0x29
0000000000044f98	sturh	w8, [x20, #-0x1]
0000000000044f9c	mov	x0, x21
0000000000044fa0	blr	x23
0000000000044fa4	ldr	x8, [x0]
0000000000044fa8	ldr	x9, [sp, #0x20]
0000000000044fac	str	x9, [x8, #0x110]
0000000000044fb0	ldp	x29, x30, [sp, #0xa0]
0000000000044fb4	ldp	x20, x19, [sp, #0x90]
0000000000044fb8	ldp	x22, x21, [sp, #0x80]
0000000000044fbc	ldp	x24, x23, [sp, #0x70]
0000000000044fc0	ldp	x26, x25, [sp, #0x60]
0000000000044fc4	ldp	x28, x27, [sp, #0x50]
0000000000044fc8	add	sp, sp, #0xb0
0000000000044fcc	ret
_Kotlin_ObjCExport_refToObjC:
0000000000044fd0	stp	x29, x30, [sp, #-0x10]!
0000000000044fd4	mov	x29, sp
0000000000044fd8	cbz	x0, 0x45038
0000000000044fdc	ldar	x8, [x0]
0000000000044fe0	and	x8, x8, #0xfffffffffffffffc
0000000000044fe4	ldr	x9, [x8]
0000000000044fe8	cmp	x8, #0x0
0000000000044fec	ccmp	x9, x8, #0x4, ne
0000000000044ff0	b.eq	0x45010
0000000000044ff4	add	x8, x8, #0x10
0000000000044ff8	ldar	x8, [x8]
0000000000044ffc	cbz	x8, 0x45010
0000000000045000	mov	x0, x8
0000000000045004	bl	0x51ba8 ; symbol stub for: _objc_retain
0000000000045008	ldp	x29, x30, [sp], #0x10
000000000004500c	b	0x51b18 ; symbol stub for: _objc_autorelease
0000000000045010	ldr	x8, [x0]
0000000000045014	and	x8, x8, #0xfffffffffffffffc
0000000000045018	ldr	x8, [x8]
000000000004501c	ldr	x8, [x8, #0x60]
0000000000045020	ldr	x8, [x8]
0000000000045024	cbz	x8, 0x45034
0000000000045028	blr	x8
000000000004502c	ldp	x29, x30, [sp], #0x10
0000000000045030	b	0x51b18 ; symbol stub for: _objc_autorelease
0000000000045034	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
0000000000045038	ldp	x29, x30, [sp], #0x10
000000000004503c	b	0x51b18 ; symbol stub for: _objc_autorelease
__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader:
0000000000045040	sub	sp, sp, #0x70
0000000000045044	stp	x28, x27, [sp, #0x10]
0000000000045048	stp	x26, x25, [sp, #0x20]
000000000004504c	stp	x24, x23, [sp, #0x30]
0000000000045050	stp	x22, x21, [sp, #0x40]
0000000000045054	stp	x20, x19, [sp, #0x50]
0000000000045058	stp	x29, x30, [sp, #0x60]
000000000004505c	add	x29, sp, #0x60
0000000000045060	mov	x19, x0
0000000000045064	ldr	x8, [x0]
0000000000045068	and	x8, x8, #0xfffffffffffffffc
000000000004506c	ldr	x20, [x8]
0000000000045070	ldr	w8, [x20, #0x38]
0000000000045074	cmp	w8, #0x1
0000000000045078	b.lt	0x451e0
000000000004507c	mov	x26, #0x0
0000000000045080	mov	x28, #0x0
0000000000045084	nop
0000000000045088	ldr	x9, #0x12f80 ; literal pool symbol address: _NSGenericException
000000000004508c	ldr	x21, [x9]
0000000000045090	nop
0000000000045094	ldr	x22, #0x25704 ; Objc selector ref: raise:format:
0000000000045098	adr	x23, #0x22b38 ; Objc cfstring ref: @"bad cfstring ref"
000000000004509c	nop
00000000000450a0	b	0x450b4
00000000000450a4	mov	x28, x27
00000000000450a8	add	x26, x26, #0x1
00000000000450ac	cmp	x26, w8, sxtw
00000000000450b0	b.ge	0x451d0
00000000000450b4	ldr	x9, [x20, #0x30]
00000000000450b8	ldr	x27, [x9, x26, lsl #3]
00000000000450bc	ldrb	w9, [x27, #0x58]
00000000000450c0	tbnz	w9, #0x5, 0x451e0
00000000000450c4	ldr	x9, [x27, #0x60]
00000000000450c8	ldr	x9, [x9]
00000000000450cc	cbz	x9, 0x450a8
00000000000450d0	cbz	x28, 0x450a4
00000000000450d4	ldrsw	x9, [x27, #0x38]
00000000000450d8	cmp	w9, #0x1
00000000000450dc	b.lt	0x450fc
00000000000450e0	ldr	x10, [x27, #0x30]
00000000000450e4	ldr	x11, [x10]
00000000000450e8	cmp	x11, x28
00000000000450ec	b.eq	0x450a4
00000000000450f0	add	x10, x10, #0x8
00000000000450f4	subs	x9, x9, #0x1
00000000000450f8	b.ne	0x450e4
00000000000450fc	ldrsw	x9, [x28, #0x38]
0000000000045100	cmp	w9, #0x1
0000000000045104	b.lt	0x45124
0000000000045108	ldr	x10, [x28, #0x30]
000000000004510c	ldr	x11, [x10]
0000000000045110	cmp	x11, x27
0000000000045114	b.eq	0x450a8
0000000000045118	add	x10, x10, #0x8
000000000004511c	subs	x9, x9, #0x1
0000000000045120	b.ne	0x4510c
0000000000045124	nop
0000000000045128	ldr	x24, #0x25770 ; Objc class ref: _OBJC_CLASS_$_NSException
000000000004512c	ldr	x0, [x28, #0x50]
0000000000045130	cbz	x0, 0x451a0
0000000000045134	ldar	x8, [x0]
0000000000045138	and	x8, x8, #0xfffffffffffffffc
000000000004513c	ldr	x9, [x8]
0000000000045140	cmp	x8, #0x0
0000000000045144	ccmp	x9, x8, #0x4, ne
0000000000045148	b.eq	0x45158
000000000004514c	add	x8, x8, #0x10
0000000000045150	ldar	x25, [x8]
0000000000045154	cbnz	x25, 0x45164
0000000000045158	bl	_Kotlin_ObjCExport_CreateRetainedNSStringFromKString
000000000004515c	bl	0x51b18 ; symbol stub for: _objc_autorelease
0000000000045160	mov	x25, x0
0000000000045164	ldr	x0, [x27, #0x50]
0000000000045168	cbz	x0, 0x451ac
000000000004516c	ldar	x8, [x0]
0000000000045170	and	x8, x8, #0xfffffffffffffffc
0000000000045174	ldr	x9, [x8]
0000000000045178	cmp	x8, #0x0
000000000004517c	ccmp	x9, x8, #0x4, ne
0000000000045180	b.eq	0x45190
0000000000045184	add	x8, x8, #0x10
0000000000045188	ldar	x8, [x8]
000000000004518c	cbnz	x8, 0x451b0
0000000000045190	bl	_Kotlin_ObjCExport_CreateRetainedNSStringFromKString
0000000000045194	bl	0x51b18 ; symbol stub for: _objc_autorelease
0000000000045198	mov	x8, x0
000000000004519c	b	0x451b0
00000000000451a0	mov	x25, #0x0
00000000000451a4	ldr	x0, [x27, #0x50]
00000000000451a8	cbnz	x0, 0x4516c
00000000000451ac	mov	x8, #0x0
00000000000451b0	stp	x25, x8, [sp]
00000000000451b4	mov	x0, x24
00000000000451b8	mov	x1, x22
00000000000451bc	mov	x2, x21
00000000000451c0	mov	x3, x23
00000000000451c4	bl	0x51b78 ; Objc message: +[NSException raise:format:]
00000000000451c8	ldr	w8, [x20, #0x38]
00000000000451cc	b	0x450a8
00000000000451d0	cbz	x28, 0x451e0
00000000000451d4	ldr	x8, [x28, #0x60]
00000000000451d8	ldr	x1, [x8]
00000000000451dc	cbnz	x1, 0x45208
00000000000451e0	mov	x0, x20
00000000000451e4	bl	__ZL16getOrCreateClassPK8TypeInfo
00000000000451e8	adr	x8, #0x14748
00000000000451ec	nop
00000000000451f0	adr	x9, #0x6fc
00000000000451f4	nop
00000000000451f8	adr	x10, #0x670
00000000000451fc	nop
0000000000045200	cmp	x20, x8
0000000000045204	csel	x1, x10, x9, eq
0000000000045208	ldr	x8, [x20, #0x60]
000000000004520c	str	x1, [x8]
0000000000045210	mov	x0, x19
0000000000045214	ldp	x29, x30, [sp, #0x60]
0000000000045218	ldp	x20, x19, [sp, #0x50]
000000000004521c	ldp	x22, x21, [sp, #0x40]
0000000000045220	ldp	x24, x23, [sp, #0x30]
0000000000045224	ldp	x26, x25, [sp, #0x20]
0000000000045228	ldp	x28, x27, [sp, #0x10]
000000000004522c	add	sp, sp, #0x70
0000000000045230	br	x1
__ZL16getOrCreateClassPK8TypeInfo:
0000000000045234	sub	sp, sp, #0xc0
0000000000045238	stp	x28, x27, [sp, #0x60]
000000000004523c	stp	x26, x25, [sp, #0x70]
0000000000045240	stp	x24, x23, [sp, #0x80]
0000000000045244	stp	x22, x21, [sp, #0x90]
0000000000045248	stp	x20, x19, [sp, #0xa0]
000000000004524c	stp	x29, x30, [sp, #0xb0]
0000000000045250	add	x29, sp, #0xb0
0000000000045254	ldr	x8, [x0, #0x60]
0000000000045258	ldr	x21, [x8, #0x8]
000000000004525c	cbnz	x21, 0x45700
0000000000045260	mov	x20, x0
0000000000045264	ldr	x8, [x8, #0x10]
0000000000045268	cbz	x8, 0x45284
000000000004526c	ldr	x0, [x8, #0x28]
0000000000045270	bl	0x51b54 ; symbol stub for: _objc_getClass
0000000000045274	mov	x21, x0
0000000000045278	ldr	x8, [x20, #0x60]
000000000004527c	str	x0, [x8, #0x8]
0000000000045280	b	0x45700
0000000000045284	ldr	x0, [x20, #0x18]
0000000000045288	bl	__ZL16getOrCreateClassPK8TypeInfo
000000000004528c	mov	x23, x0
0000000000045290	adr	x19, #0x417bc
0000000000045294	nop
0000000000045298	mov	x0, x19
000000000004529c	bl	__ZN6kotlin8SpinLockILNS_24MutexThreadStateHandlingE1EE4lockEv
00000000000452a0	ldr	x8, [x20, #0x60]
00000000000452a4	ldr	x21, [x8, #0x8]
00000000000452a8	cbnz	x21, 0x456fc
00000000000452ac	adrp	x0, 39 ; 0x6c000
00000000000452b0	add	x0, x0, #0xbb0
00000000000452b4	ldr	x26, [x0]
00000000000452b8	blr	x26
00000000000452bc	ldr	x8, [x0]
00000000000452c0	cbz	x8, 0x452e0
00000000000452c4	str	x8, [sp, #0x8]
00000000000452c8	add	x8, x8, #0x138
00000000000452cc	mov	w9, #0x1
00000000000452d0	ldaxr	w24, [x8]
00000000000452d4	stlxr	w10, w9, [x8]
00000000000452d8	cbnz	w10, 0x452d0
00000000000452dc	b	0x452e8
00000000000452e0	str	xzr, [sp, #0x8]
00000000000452e4	mov	w24, #0x1
00000000000452e8	adrp	x8, 65 ; 0x86000
00000000000452ec	ldr	w21, [x8, #0xa64]
00000000000452f0	add	w9, w21, #0x1
00000000000452f4	str	w9, [x8, #0xa64]
00000000000452f8	mov	w8, #0x3
00000000000452fc	strb	w8, [sp, #0x57]
0000000000045300	mov	w8, #0x424e
0000000000045304	movk	w8, #0x4b, lsl #16
0000000000045308	str	w8, [sp, #0x40]
000000000004530c	adr	x1, #0x1184b ; literal pool for: "_kobjcc"
0000000000045310	nop
0000000000045314	add	x0, sp, #0x40
0000000000045318	mov	w2, #0x7
000000000004531c	bl	__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE6appendEPKcm
0000000000045320	add	x19, sp, #0x10
0000000000045324	add	x8, sp, #0x10
0000000000045328	mov	x0, x21
000000000004532c	bl	0x518cc ; symbol stub for: __ZNSt3__19to_stringEi
0000000000045330	ldrb	w8, [sp, #0x27]
0000000000045334	sxtb	w9, w8
0000000000045338	ldp	x10, x11, [sp, #0x10]
000000000004533c	cmp	w9, #0x0
0000000000045340	csel	x1, x10, x19, lt
0000000000045344	csel	x2, x11, x8, lt
0000000000045348	add	x0, sp, #0x40
000000000004534c	bl	__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE6appendEPKcm
0000000000045350	ldrsb	w8, [sp, #0x27]
0000000000045354	tbz	w8, #0x1f, 0x45360
0000000000045358	ldr	x0, [sp, #0x10]
000000000004535c	bl	0x51914 ; symbol stub for: __ZdlPv
0000000000045360	ldrsb	w8, [sp, #0x57]
0000000000045364	ldr	x9, [sp, #0x40]
0000000000045368	cmp	w8, #0x0
000000000004536c	add	x8, sp, #0x40
0000000000045370	csel	x1, x9, x8, lt
0000000000045374	mov	x0, x23
0000000000045378	mov	x2, #0x0
000000000004537c	bl	0x51b0c ; symbol stub for: _objc_allocateClassPair
0000000000045380	mov	x21, x0
0000000000045384	cbz	x0, 0x45724
0000000000045388	ldr	x22, [x20, #0x18]
000000000004538c	ldr	x8, [x22, #0x60]
0000000000045390	ldr	x23, [x8, #0x10]
0000000000045394	str	x26, [sp]
0000000000045398	cbz	x23, 0x45404
000000000004539c	cbz	x23, 0x453e8
00000000000453a0	ldr	w8, [x23, #0x58]
00000000000453a4	cmp	w8, #0x1
00000000000453a8	b.lt	0x453e8
00000000000453ac	mov	x27, #0x0
00000000000453b0	mov	x19, #0x0
00000000000453b4	ldr	x25, [x23, #0x50]
00000000000453b8	ldr	x0, [x25, x27]
00000000000453bc	bl	0x51cf8 ; symbol stub for: _sel_registerName
00000000000453c0	mov	x1, x0
00000000000453c4	add	x8, x25, x27
00000000000453c8	ldp	x3, x2, [x8, #0x8]
00000000000453cc	mov	x0, x21
00000000000453d0	bl	0x519ec ; symbol stub for: _class_addMethod
00000000000453d4	add	x19, x19, #0x1
00000000000453d8	ldrsw	x8, [x23, #0x58]
00000000000453dc	add	x27, x27, #0x18
00000000000453e0	cmp	x19, x8
00000000000453e4	b.lt	0x453b4
00000000000453e8	ldr	x22, [x22, #0x18]
00000000000453ec	cbz	x22, 0x45400
00000000000453f0	ldr	x8, [x22, #0x60]
00000000000453f4	ldr	x23, [x8, #0x10]
00000000000453f8	cbnz	x23, 0x453a0
00000000000453fc	b	0x453e8
0000000000045400	ldr	x22, [x20, #0x18]
0000000000045404	ldr	x23, [x22, #0x30]
0000000000045408	ldrsw	x8, [x22, #0x38]
000000000004540c	movi.16b	v0, #0x0
0000000000045410	stp	q0, q0, [sp, #0x10]
0000000000045414	mov	w9, #0x3f800000
0000000000045418	str	w9, [sp, #0x30]
000000000004541c	cbz	w8, 0x45440
0000000000045420	lsl	x19, x8, #3
0000000000045424	ldr	x1, [x23]
0000000000045428	add	x0, sp, #0x10
000000000004542c	mov	x2, x23
0000000000045430	bl	__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_
0000000000045434	add	x23, x23, #0x8
0000000000045438	subs	x19, x19, #0x8
000000000004543c	b.ne	0x45424
0000000000045440	ldr	w8, [x20, #0x38]
0000000000045444	cmp	w8, #0x1
0000000000045448	b.lt	0x455cc
000000000004544c	mov	x27, #0x0
0000000000045450	mov	x28, #0x2d69
0000000000045454	movk	x28, #0xeb38, lsl #16
0000000000045458	movk	x28, #0xea08, lsl #32
000000000004545c	movk	x28, #0x9ddf, lsl #48
0000000000045460	b	0x45474
0000000000045464	add	x27, x27, #0x1
0000000000045468	ldrsw	x8, [x20, #0x38]
000000000004546c	cmp	x27, x8
0000000000045470	b.ge	0x455cc
0000000000045474	ldr	x8, [x20, #0x30]
0000000000045478	ldr	x23, [x8, x27, lsl #3]
000000000004547c	ldr	x8, [x23, #0x60]
0000000000045480	ldr	x22, [x8, #0x10]
0000000000045484	cbz	x22, 0x45464
0000000000045488	ldr	w8, [x22, #0x58]
000000000004548c	cmp	w8, #0x1
0000000000045490	b.lt	0x454d0
0000000000045494	mov	x19, #0x0
0000000000045498	mov	x25, #0x0
000000000004549c	ldr	x26, [x22, #0x50]
00000000000454a0	ldr	x0, [x26, x19]
00000000000454a4	bl	0x51cf8 ; symbol stub for: _sel_registerName
00000000000454a8	mov	x1, x0
00000000000454ac	add	x8, x26, x19
00000000000454b0	ldp	x3, x2, [x8, #0x8]
00000000000454b4	mov	x0, x21
00000000000454b8	bl	0x519ec ; symbol stub for: _class_addMethod
00000000000454bc	add	x25, x25, #0x1
00000000000454c0	ldrsw	x8, [x22, #0x58]
00000000000454c4	add	x19, x19, #0x18
00000000000454c8	cmp	x25, x8
00000000000454cc	b.lt	0x4549c
00000000000454d0	ldr	x8, [sp, #0x18]
00000000000454d4	cbz	x8, 0x4559c
00000000000454d8	lsr	x9, x23, #32
00000000000454dc	lsl	w10, w23, #3
00000000000454e0	add	x10, x10, #0x8
00000000000454e4	eor	x10, x10, x9
00000000000454e8	mul	x10, x10, x28
00000000000454ec	eor	x9, x10, x9
00000000000454f0	eor	x9, x9, x10, lsr #47
00000000000454f4	mul	x9, x9, x28
00000000000454f8	eor	x9, x9, x9, lsr #47
00000000000454fc	mul	x9, x9, x28
0000000000045500	fmov	d0, x8
0000000000045504	cnt.8b	v0, v0
0000000000045508	uaddlv.8b	h0, v0
000000000004550c	fmov	w10, s0
0000000000045510	cmp	x10, #0x1
0000000000045514	b.hi	0x45524
0000000000045518	sub	x11, x8, #0x1
000000000004551c	and	x11, x11, x9
0000000000045520	b	0x45538
0000000000045524	mov	x11, x9
0000000000045528	cmp	x9, x8
000000000004552c	b.lo	0x45538
0000000000045530	udiv	x11, x9, x8
0000000000045534	msub	x11, x11, x8, x9
0000000000045538	ldr	x12, [sp, #0x10]
000000000004553c	ldr	x12, [x12, x11, lsl #3]
0000000000045540	cbz	x12, 0x4559c
0000000000045544	ldr	x12, [x12]
0000000000045548	cbz	x12, 0x4559c
000000000004554c	sub	x13, x8, #0x1
0000000000045550	b	0x45568
0000000000045554	ldr	x14, [x12, #0x10]
0000000000045558	cmp	x14, x23
000000000004555c	b.eq	0x45464
0000000000045560	ldr	x12, [x12]
0000000000045564	cbz	x12, 0x4559c
0000000000045568	ldr	x14, [x12, #0x8]
000000000004556c	cmp	x14, x9
0000000000045570	b.eq	0x45554
0000000000045574	cmp	x10, #0x1
0000000000045578	b.hi	0x45584
000000000004557c	and	x14, x14, x13
0000000000045580	b	0x45594
0000000000045584	cmp	x14, x8
0000000000045588	b.lo	0x45594
000000000004558c	udiv	x15, x14, x8
0000000000045590	msub	x14, x15, x8, x14
0000000000045594	cmp	x14, x11
0000000000045598	b.eq	0x45560
000000000004559c	ldr	x0, [x22, #0x28]
00000000000455a0	bl	0x51b60 ; symbol stub for: _objc_getProtocol
00000000000455a4	mov	x23, x0
00000000000455a8	cbz	x0, 0x45464
00000000000455ac	mov	x0, x21
00000000000455b0	mov	x1, x23
00000000000455b4	bl	0x519f8 ; symbol stub for: _class_addProtocol
00000000000455b8	mov	x0, x21
00000000000455bc	bl	0x51be4 ; symbol stub for: _object_getClass
00000000000455c0	mov	x1, x23
00000000000455c4	bl	0x519f8 ; symbol stub for: _class_addProtocol
00000000000455c8	b	0x45464
00000000000455cc	mov	x0, x21
00000000000455d0	bl	0x51b90 ; symbol stub for: _objc_registerClassPair
00000000000455d4	str	x20, [sp, #0x58]
00000000000455d8	adrp	x0, 39 ; 0x6c000
00000000000455dc	add	x0, x0, #0xbb0
00000000000455e0	ldr	x8, [sp]
00000000000455e4	blr	x8
00000000000455e8	ldr	x23, [x0]
00000000000455ec	cbz	x23, 0x45608
00000000000455f0	add	x8, x23, #0x138
00000000000455f4	mov	w9, #0x1
00000000000455f8	ldaxr	w22, [x8]
00000000000455fc	stlxr	w10, w9, [x8]
0000000000045600	cbnz	w10, 0x455f8
0000000000045604	b	0x4560c
0000000000045608	mov	w22, #0x1
000000000004560c	nop
0000000000045610	ldr	x0, #0x25290 ; Objc class ref: _OBJC_CLASS_$_NSValue
0000000000045614	bl	0x51b00 ; symbol stub for: _objc_alloc
0000000000045618	nop
000000000004561c	ldr	x1, #0x2505c ; Objc selector ref: initWithBytes:objCType:
0000000000045620	adr	x3, #0x113f1 ; literal pool for: "^v"
0000000000045624	nop
0000000000045628	add	x2, sp, #0x58
000000000004562c	bl	0x51b78 ; Objc message: +[NSValue initWithBytes:objCType:]
0000000000045630	mov	x2, x0
0000000000045634	adr	x1, #0x41416
0000000000045638	nop
000000000004563c	mov	x0, x21
0000000000045640	mov	x3, #0x0
0000000000045644	bl	0x51bcc ; symbol stub for: _objc_setAssociatedObject
0000000000045648	cbz	x23, 0x4567c
000000000004564c	add	x0, x23, #0x138
0000000000045650	ldaxr	w8, [x0]
0000000000045654	stlxr	w9, w22, [x0]
0000000000045658	cbnz	w9, 0x45650
000000000004565c	cbnz	w22, 0x4567c
0000000000045660	cmp	w8, #0x1
0000000000045664	b.ne	0x4567c
0000000000045668	adr	x8, #0x413db
000000000004566c	nop
0000000000045670	ldarb	w8, [x8]
0000000000045674	tbz	w8, #0x0, 0x4567c
0000000000045678	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004567c	ldr	x0, [sp, #0x20]
0000000000045680	cbz	x0, 0x45694
0000000000045684	ldr	x19, [x0]
0000000000045688	bl	0x51a64 ; symbol stub for: _free
000000000004568c	mov	x0, x19
0000000000045690	cbnz	x19, 0x45684
0000000000045694	ldr	x0, [sp, #0x10]
0000000000045698	str	xzr, [sp, #0x10]
000000000004569c	cbz	x0, 0x456a4
00000000000456a0	bl	0x51a64 ; symbol stub for: _free
00000000000456a4	ldrsb	w8, [sp, #0x57]
00000000000456a8	tbz	w8, #0x1f, 0x456b4
00000000000456ac	ldr	x0, [sp, #0x40]
00000000000456b0	bl	0x51a64 ; symbol stub for: _free
00000000000456b4	ldr	x8, [sp, #0x8]
00000000000456b8	cbz	x8, 0x456ec
00000000000456bc	add	x0, x8, #0x138
00000000000456c0	ldaxr	w8, [x0]
00000000000456c4	stlxr	w9, w24, [x0]
00000000000456c8	cbnz	w9, 0x456c0
00000000000456cc	cbnz	w24, 0x456ec
00000000000456d0	cmp	w8, #0x1
00000000000456d4	b.ne	0x456ec
00000000000456d8	adr	x8, #0x4136b
00000000000456dc	nop
00000000000456e0	ldarb	w8, [x8]
00000000000456e4	tbz	w8, #0x0, 0x456ec
00000000000456e8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000456ec	ldr	x8, [x20, #0x60]
00000000000456f0	str	x21, [x8, #0x8]
00000000000456f4	adr	x19, #0x41358
00000000000456f8	nop
00000000000456fc	stlrb	wzr, [x19]
0000000000045700	mov	x0, x21
0000000000045704	ldp	x29, x30, [sp, #0xb0]
0000000000045708	ldp	x20, x19, [sp, #0xa0]
000000000004570c	ldp	x22, x21, [sp, #0x90]
0000000000045710	ldp	x24, x23, [sp, #0x80]
0000000000045714	ldp	x26, x25, [sp, #0x70]
0000000000045718	ldp	x28, x27, [sp, #0x60]
000000000004571c	add	sp, sp, #0xc0
0000000000045720	ret
0000000000045724	adr	x2, #0x112b6 ; literal pool for: ""
0000000000045728	nop
000000000004572c	mov	w0, #0x0
0000000000045730	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
0000000000045734	brk	#0x1
0000000000045738	b	0x457c0
000000000004573c	mov	x20, x0
0000000000045740	ldrsb	w8, [sp, #0x27]
0000000000045744	tbz	w8, #0x1f, 0x457f4
0000000000045748	ldr	x0, [sp, #0x10]
000000000004574c	bl	0x51914 ; symbol stub for: __ZdlPv
0000000000045750	b	0x457f4
0000000000045754	b	0x457f0
0000000000045758	b	0x457f0
000000000004575c	b	0x457f0
0000000000045760	mov	x20, x0
0000000000045764	cbz	x23, 0x457c4
0000000000045768	add	x0, x23, #0x138
000000000004576c	ldaxr	w8, [x0]
0000000000045770	stlxr	w9, w22, [x0]
0000000000045774	cbnz	w9, 0x4576c
0000000000045778	cbnz	w22, 0x457c4
000000000004577c	cmp	w8, #0x1
0000000000045780	b.ne	0x457c4
0000000000045784	adr	x8, #0x412bf
0000000000045788	nop
000000000004578c	ldarb	w8, [x8]
0000000000045790	tbz	w8, #0x0, 0x457c4
0000000000045794	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045798	b	0x457c4
000000000004579c	mov	x20, x0
00000000000457a0	ldr	x0, [sp, #0x20]
00000000000457a4	cbz	x0, 0x457dc
00000000000457a8	ldr	x19, [x0]
00000000000457ac	bl	0x51a64 ; symbol stub for: _free
00000000000457b0	mov	x0, x19
00000000000457b4	cbnz	x19, 0x457a8
00000000000457b8	b	0x457dc
00000000000457bc	b	0x457c0
00000000000457c0	mov	x20, x0
00000000000457c4	ldr	x0, [sp, #0x20]
00000000000457c8	cbz	x0, 0x457dc
00000000000457cc	ldr	x19, [x0]
00000000000457d0	bl	0x51a64 ; symbol stub for: _free
00000000000457d4	mov	x0, x19
00000000000457d8	cbnz	x19, 0x457cc
00000000000457dc	ldr	x0, [sp, #0x10]
00000000000457e0	str	xzr, [sp, #0x10]
00000000000457e4	cbz	x0, 0x457f4
00000000000457e8	bl	0x51a64 ; symbol stub for: _free
00000000000457ec	b	0x457f4
00000000000457f0	mov	x20, x0
00000000000457f4	ldrsb	w8, [sp, #0x57]
00000000000457f8	tbz	w8, #0x1f, 0x45804
00000000000457fc	ldr	x0, [sp, #0x40]
0000000000045800	bl	0x51a64 ; symbol stub for: _free
0000000000045804	ldr	x8, [sp, #0x8]
0000000000045808	cbnz	x8, 0x45820
000000000004580c	adr	x8, #0x41240
0000000000045810	nop
0000000000045814	stlrb	wzr, [x8]
0000000000045818	mov	x0, x20
000000000004581c	bl	0x517a0 ; symbol stub for: __Unwind_Resume
0000000000045820	ldr	x8, [sp, #0x8]
0000000000045824	add	x0, x8, #0x138
0000000000045828	ldaxr	w8, [x0]
000000000004582c	stlxr	w9, w24, [x0]
0000000000045830	cbnz	w9, 0x45828
0000000000045834	cbnz	w24, 0x4580c
0000000000045838	cmp	w8, #0x1
000000000004583c	b.ne	0x4580c
0000000000045840	adr	x8, #0x41203
0000000000045844	nop
0000000000045848	ldarb	w8, [x8]
000000000004584c	tbz	w8, #0x0, 0x4580c
0000000000045850	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045854	adr	x8, #0x411f8
0000000000045858	nop
000000000004585c	stlrb	wzr, [x8]
0000000000045860	mov	x0, x20
0000000000045864	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_ObjCExport_convertUnitToRetained:
0000000000045868	sub	sp, sp, #0x40
000000000004586c	stp	x29, x30, [sp, #0x30]
0000000000045870	add	x29, sp, #0x30
0000000000045874	nop
0000000000045878	ldr	x8, #0x12798 ; literal pool symbol address: __NSConcreteGlobalBlock
000000000004587c	str	x8, [sp, #0x8]
0000000000045880	nop
0000000000045884	ldr	d0, 0x524a8
0000000000045888	str	d0, [sp, #0x10]
000000000004588c	adr	x8, #0x84
0000000000045890	nop
0000000000045894	adr	x9, #0x2221c
0000000000045898	nop
000000000004589c	stp	x8, x9, [sp, #0x18]
00000000000458a0	str	x0, [sp, #0x28]
00000000000458a4	nop
00000000000458a8	ldr	x8, #0x41430
00000000000458ac	cmn	x8, #0x1
00000000000458b0	b.ne	0x458c8
00000000000458b4	nop
00000000000458b8	ldr	x0, #0x41428
00000000000458bc	ldp	x29, x30, [sp, #0x30]
00000000000458c0	add	sp, sp, #0x40
00000000000458c4	b	0x51ba8 ; symbol stub for: _objc_retain
00000000000458c8	adr	x0, #0x41410
00000000000458cc	nop
00000000000458d0	add	x1, sp, #0x8
00000000000458d4	bl	0x51a40 ; symbol stub for: _dispatch_once
00000000000458d8	nop
00000000000458dc	ldr	x0, #0x41404
00000000000458e0	ldp	x29, x30, [sp, #0x30]
00000000000458e4	add	sp, sp, #0x40
00000000000458e8	b	0x51ba8 ; symbol stub for: _objc_retain
__ZL29convertKotlinObjectToRetainedP9ObjHeader:
00000000000458ec	mov	x2, x0
00000000000458f0	ldr	x8, [x0]
00000000000458f4	and	x8, x8, #0xfffffffffffffffc
00000000000458f8	ldr	x8, [x8]
00000000000458fc	ldr	x8, [x8, #0x60]
0000000000045900	ldr	x0, [x8, #0x8]
0000000000045904	nop
0000000000045908	ldr	x1, #0x24d08 ; Objc selector ref: createRetainedWrapper:
000000000004590c	b	0x51b78 ; Objc message: -[x0 createRetainedWrapper:]
___Kotlin_ObjCExport_convertUnitToRetained_block_invoke:
0000000000045910	stp	x20, x19, [sp, #-0x20]!
0000000000045914	stp	x29, x30, [sp, #0x10]
0000000000045918	add	x29, sp, #0x10
000000000004591c	mov	x19, x0
0000000000045920	ldr	x8, [x0, #0x20]
0000000000045924	ldr	x8, [x8]
0000000000045928	and	x8, x8, #0xfffffffffffffffc
000000000004592c	ldr	x0, [x8]
0000000000045930	bl	__ZL16getOrCreateClassPK8TypeInfo
0000000000045934	ldr	x2, [x19, #0x20]
0000000000045938	nop
000000000004593c	ldr	x1, #0x24cd4 ; Objc selector ref: createRetainedWrapper:
0000000000045940	bl	0x51b78 ; Objc message: -[x0 createRetainedWrapper:]
0000000000045944	adrp	x8, 65 ; 0x86000
0000000000045948	str	x0, [x8, #0xce0]
000000000004594c	ldp	x29, x30, [sp, #0x10]
0000000000045950	ldp	x20, x19, [sp], #0x20
0000000000045954	ret
_Kotlin_ObjCExport_CreateRetainedNSStringFromKString:
0000000000045958	stp	x22, x21, [sp, #-0x30]!
000000000004595c	stp	x20, x19, [sp, #0x10]
0000000000045960	stp	x29, x30, [sp, #0x20]
0000000000045964	add	x29, sp, #0x20
0000000000045968	mov	x20, x0
000000000004596c	add	x19, x0, #0x10
0000000000045970	ldr	w8, [x0, #0x8]
0000000000045974	lsl	x21, x8, #1
0000000000045978	ldr	x22, [x0]
000000000004597c	nop
0000000000045980	ldr	x0, #0x24f10 ; Objc class ref: _OBJC_CLASS_$_NSString
0000000000045984	bl	0x51b00 ; symbol stub for: _objc_alloc
0000000000045988	tbnz	w22, #0x0, 0x459f0
000000000004598c	nop
0000000000045990	ldr	x1, #0x24ce0 ; Objc selector ref: initWithBytes:length:encoding:
0000000000045994	mov	x2, x19
0000000000045998	mov	x3, x21
000000000004599c	mov	w4, #0x100
00000000000459a0	movk	w4, #0x9400, lsl #16
00000000000459a4	bl	0x51b78 ; Objc message: +[NSString initWithBytes:length:encoding:]
00000000000459a8	mov	x19, x0
00000000000459ac	ldar	x8, [x20]
00000000000459b0	and	x8, x8, #0xfffffffffffffffc
00000000000459b4	ldr	x9, [x8]
00000000000459b8	cmp	x9, x8
00000000000459bc	csel	x0, xzr, x8, eq
00000000000459c0	cbnz	x0, 0x459cc
00000000000459c4	mov	x0, x20
00000000000459c8	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
00000000000459cc	add	x8, x0, #0x10
00000000000459d0	ldaxr	x20, [x8]
00000000000459d4	cbnz	x20, 0x45a1c
00000000000459d8	stlxr	w9, x19, [x8]
00000000000459dc	cbnz	w9, 0x459d0
00000000000459e0	mov	w8, #0x1
00000000000459e4	mov	x0, x19
00000000000459e8	tbz	w8, #0x0, 0x45a2c
00000000000459ec	b	0x45a34
00000000000459f0	nop
00000000000459f4	ldr	x1, #0x24c8c ; Objc selector ref: initWithBytesNoCopy:length:encoding:freeWhenDone:
00000000000459f8	mov	x2, x19
00000000000459fc	mov	x3, x21
0000000000045a00	mov	w4, #0x100
0000000000045a04	movk	w4, #0x9400, lsl #16
0000000000045a08	mov	w5, #0x0
0000000000045a0c	ldp	x29, x30, [sp, #0x20]
0000000000045a10	ldp	x20, x19, [sp, #0x10]
0000000000045a14	ldp	x22, x21, [sp], #0x30
0000000000045a18	b	0x51b78 ; Objc message: -[x0 initWithBytesNoCopy:length:encoding:freeWhenDone:]
0000000000045a1c	mov	w8, #0x0
0000000000045a20	clrex
0000000000045a24	mov	x0, x19
0000000000045a28	tbnz	w8, #0x0, 0x45a34
0000000000045a2c	bl	0x51b9c ; symbol stub for: _objc_release
0000000000045a30	mov	x0, x20
0000000000045a34	ldp	x29, x30, [sp, #0x20]
0000000000045a38	ldp	x20, x19, [sp, #0x10]
0000000000045a3c	ldp	x22, x21, [sp], #0x30
0000000000045a40	b	0x51ba8 ; symbol stub for: _objc_retain
_ThrowException:
0000000000045a44	stp	x29, x30, [sp, #-0x10]!
0000000000045a48	mov	x29, sp
0000000000045a4c	bl	__ZN18ExceptionObjHolder5ThrowEP9ObjHeader
__ZN6kotlin25ProcessUnhandledExceptionEP9ObjHeader:
0000000000045a50	stp	x22, x21, [sp, #-0x30]!
0000000000045a54	stp	x20, x19, [sp, #0x10]
0000000000045a58	stp	x29, x30, [sp, #0x20]
0000000000045a5c	add	x29, sp, #0x20
0000000000045a60	mov	x20, x0
0000000000045a64	adrp	x0, 39 ; 0x6c000
0000000000045a68	add	x0, x0, #0xbb0
0000000000045a6c	ldr	x8, [x0]
0000000000045a70	blr	x8
0000000000045a74	ldr	x22, [x0]
0000000000045a78	add	x19, x22, #0x138
0000000000045a7c	ldaxr	w21, [x19]
0000000000045a80	stlxr	w8, wzr, [x19]
0000000000045a84	cbnz	w8, 0x45a7c
0000000000045a88	cmp	w21, #0x1
0000000000045a8c	b.ne	0x45aa8
0000000000045a90	adr	x8, #0x40fb3
0000000000045a94	nop
0000000000045a98	ldarb	w8, [x8]
0000000000045a9c	tbz	w8, #0x0, 0x45aa8
0000000000045aa0	mov	x0, x19
0000000000045aa4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045aa8	mov	x0, x20
0000000000045aac	bl	__ZN12_GLOBAL__N_125processUnhandledExceptionEP9ObjHeader
0000000000045ab0	cbz	x22, 0x45adc
0000000000045ab4	ldaxr	w8, [x19]
0000000000045ab8	stlxr	w9, w21, [x19]
0000000000045abc	cbnz	w9, 0x45ab4
0000000000045ac0	cbnz	w21, 0x45adc
0000000000045ac4	cmp	w8, #0x1
0000000000045ac8	b.ne	0x45adc
0000000000045acc	adr	x8, #0x40f77
0000000000045ad0	nop
0000000000045ad4	ldarb	w8, [x8]
0000000000045ad8	tbnz	w8, #0x0, 0x45aec
0000000000045adc	ldp	x29, x30, [sp, #0x20]
0000000000045ae0	ldp	x20, x19, [sp, #0x10]
0000000000045ae4	ldp	x22, x21, [sp], #0x30
0000000000045ae8	ret
0000000000045aec	mov	x0, x19
0000000000045af0	ldp	x29, x30, [sp, #0x20]
0000000000045af4	ldp	x20, x19, [sp, #0x10]
0000000000045af8	ldp	x22, x21, [sp], #0x30
0000000000045afc	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
__ZN6kotlin31TerminateWithUnhandledExceptionEP9ObjHeader:
0000000000045b00	sub	sp, sp, #0x30
0000000000045b04	stp	x20, x19, [sp, #0x10]
0000000000045b08	stp	x29, x30, [sp, #0x20]
0000000000045b0c	add	x29, sp, #0x20
0000000000045b10	mov	x19, x0
0000000000045b14	adrp	x0, 39 ; 0x6c000
0000000000045b18	add	x0, x0, #0xbb0
0000000000045b1c	ldr	x8, [x0]
0000000000045b20	blr	x8
0000000000045b24	ldr	x8, [x0]
0000000000045b28	str	x8, [sp]
0000000000045b2c	mov	w9, #0x1
0000000000045b30	strb	w9, [sp, #0xc]
0000000000045b34	add	x0, x8, #0x138
0000000000045b38	ldaxr	w20, [x0]
0000000000045b3c	stlxr	w8, wzr, [x0]
0000000000045b40	cbnz	w8, 0x45b38
0000000000045b44	cmp	w20, #0x1
0000000000045b48	b.ne	0x45b60
0000000000045b4c	adr	x8, #0x40ef7
0000000000045b50	nop
0000000000045b54	ldarb	w8, [x8]
0000000000045b58	tbz	w8, #0x0, 0x45b60
0000000000045b5c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045b60	str	w20, [sp, #0x8]
0000000000045b64	mov	x0, x19
0000000000045b68	bl	__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader
0000000000045b6c	brk	#0x1
0000000000045b70	mov	x19, x0
0000000000045b74	mov	x0, sp
0000000000045b78	bl	__ZN6kotlin16ThreadStateGuardD1Ev
0000000000045b7c	mov	x0, x19
0000000000045b80	bl	___clang_call_terminate
__ZN12_GLOBAL__N_121RunFinalizerHooksImplEP9ObjHeaderPK8TypeInfo:
0000000000045b84	sub	sp, sp, #0xc0
0000000000045b88	stp	x28, x27, [sp, #0x60]
0000000000045b8c	stp	x26, x25, [sp, #0x70]
0000000000045b90	stp	x24, x23, [sp, #0x80]
0000000000045b94	stp	x22, x21, [sp, #0x90]
0000000000045b98	stp	x20, x19, [sp, #0xa0]
0000000000045b9c	stp	x29, x30, [sp, #0xb0]
0000000000045ba0	add	x29, sp, #0xb0
0000000000045ba4	adr	x8, #0x1439c
0000000000045ba8	nop
0000000000045bac	cmp	x1, x8
0000000000045bb0	b.eq	0x45c18
0000000000045bb4	adr	x8, #0x142fc
0000000000045bb8	nop
0000000000045bbc	cmp	x1, x8
0000000000045bc0	b.ne	0x46290
0000000000045bc4	ldr	x19, [x0, #0x8]
0000000000045bc8	cbz	x19, 0x46290
0000000000045bcc	ldr	x8, [x19]
0000000000045bd0	cbz	x8, 0x45bf4
0000000000045bd4	ldr	x1, [x19, #0x8]
0000000000045bd8	adrp	x0, 39 ; 0x6c000
0000000000045bdc	add	x0, x0, #0xbb0
0000000000045be0	ldr	x8, [x0]
0000000000045be4	blr	x8
0000000000045be8	ldr	x8, [x0]
0000000000045bec	add	x0, x8, #0x8
0000000000045bf0	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000045bf4	mov	x0, x19
0000000000045bf8	ldp	x29, x30, [sp, #0xb0]
0000000000045bfc	ldp	x20, x19, [sp, #0xa0]
0000000000045c00	ldp	x22, x21, [sp, #0x90]
0000000000045c04	ldp	x24, x23, [sp, #0x80]
0000000000045c08	ldp	x26, x25, [sp, #0x70]
0000000000045c0c	ldp	x28, x27, [sp, #0x60]
0000000000045c10	add	sp, sp, #0xc0
0000000000045c14	b	0x51a64 ; symbol stub for: _free
0000000000045c18	adr	x8, #0x40e50
0000000000045c1c	nop
0000000000045c20	ldar	w20, [x8]
0000000000045c24	cmn	w20, #0x2
0000000000045c28	b.eq	0x46290
0000000000045c2c	ldr	x27, [x0, #0x8]
0000000000045c30	bl	__ZN12_GLOBAL__N_18theStateEv
0000000000045c34	mov	x19, x0
0000000000045c38	sxtw	x23, w20
0000000000045c3c	str	x0, [sp, #0x30]
0000000000045c40	mov	w8, #0x1
0000000000045c44	strb	w8, [sp, #0x38]
0000000000045c48	str	xzr, [sp, #0x40]
0000000000045c4c	adrp	x20, 39 ; 0x6c000
0000000000045c50	add	x20, x20, #0xbb0
0000000000045c54	ldr	x22, [x20]
0000000000045c58	mov	x0, x20
0000000000045c5c	blr	x22
0000000000045c60	ldr	x25, [x0]
0000000000045c64	add	x21, x25, #0x138
0000000000045c68	ldaxr	w24, [x21]
0000000000045c6c	stlxr	w9, w8, [x21]
0000000000045c70	cbnz	w9, 0x45c68
0000000000045c74	mov	x0, x19
0000000000045c78	bl	0x51c8c ; symbol stub for: _pthread_mutex_lock
0000000000045c7c	cbz	x25, 0x45cb0
0000000000045c80	ldaxr	w8, [x21]
0000000000045c84	stlxr	w9, w24, [x21]
0000000000045c88	cbnz	w9, 0x45c80
0000000000045c8c	cbnz	w24, 0x45cb0
0000000000045c90	cmp	w8, #0x1
0000000000045c94	b.ne	0x45cb0
0000000000045c98	adr	x8, #0x40dab
0000000000045c9c	nop
0000000000045ca0	ldarb	w8, [x8]
0000000000045ca4	tbz	w8, #0x0, 0x45cb0
0000000000045ca8	mov	x0, x21
0000000000045cac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045cb0	ldr	x8, [x19, #0xa0]
0000000000045cb4	cbz	x8, 0x46288
0000000000045cb8	fmov	d0, x8
0000000000045cbc	cnt.8b	v0, v0
0000000000045cc0	uaddlv.8b	h0, v0
0000000000045cc4	fmov	w9, s0
0000000000045cc8	cmp	x9, #0x1
0000000000045ccc	b.hi	0x45cdc
0000000000045cd0	sub	x10, x8, #0x1
0000000000045cd4	and	x10, x10, x23
0000000000045cd8	b	0x45cf0
0000000000045cdc	mov	x10, x23
0000000000045ce0	cmp	x8, x23
0000000000045ce4	b.hi	0x45cf0
0000000000045ce8	udiv	x10, x23, x8
0000000000045cec	msub	x10, x10, x8, x23
0000000000045cf0	ldr	x11, [x19, #0x98]
0000000000045cf4	ldr	x11, [x11, x10, lsl #3]
0000000000045cf8	cbz	x11, 0x46288
0000000000045cfc	ldr	x11, [x11]
0000000000045d00	cbz	x11, 0x46288
0000000000045d04	sub	x12, x8, #0x1
0000000000045d08	b	0x45d20
0000000000045d0c	ldr	w13, [x11, #0x10]
0000000000045d10	cmp	w13, w23
0000000000045d14	b.eq	0x45d58
0000000000045d18	ldr	x11, [x11]
0000000000045d1c	cbz	x11, 0x46288
0000000000045d20	ldr	x13, [x11, #0x8]
0000000000045d24	cmp	x13, x23
0000000000045d28	b.eq	0x45d0c
0000000000045d2c	cmp	x9, #0x1
0000000000045d30	b.hi	0x45d3c
0000000000045d34	and	x13, x13, x12
0000000000045d38	b	0x45d4c
0000000000045d3c	cmp	x13, x8
0000000000045d40	b.lo	0x45d4c
0000000000045d44	udiv	x14, x13, x8
0000000000045d48	msub	x13, x14, x8, x13
0000000000045d4c	cmp	x13, x10
0000000000045d50	b.eq	0x45d18
0000000000045d54	b	0x46288
0000000000045d58	ldr	x28, [x11, #0x18]
0000000000045d5c	mov	x0, x20
0000000000045d60	blr	x22
0000000000045d64	ldr	x24, [x0]
0000000000045d68	add	x19, x24, #0x138
0000000000045d6c	mov	w8, #0x1
0000000000045d70	ldaxr	w26, [x19]
0000000000045d74	stlxr	w9, w8, [x19]
0000000000045d78	cbnz	w9, 0x45d70
0000000000045d7c	add	x8, x28, #0x58
0000000000045d80	str	x8, [sp, #0x48]
0000000000045d84	mov	w9, #0x1
0000000000045d88	strb	w9, [sp, #0x50]
0000000000045d8c	str	xzr, [sp, #0x58]
0000000000045d90	mov	x0, x20
0000000000045d94	blr	x22
0000000000045d98	ldr	x23, [x0]
0000000000045d9c	add	x21, x23, #0x138
0000000000045da0	ldaxr	w22, [x21]
0000000000045da4	stlxr	w10, w9, [x21]
0000000000045da8	cbnz	w10, 0x45da0
0000000000045dac	mov	x0, x8
0000000000045db0	bl	0x51c8c ; symbol stub for: _pthread_mutex_lock
0000000000045db4	cbz	x23, 0x45de8
0000000000045db8	ldaxr	w8, [x21]
0000000000045dbc	stlxr	w9, w22, [x21]
0000000000045dc0	cbnz	w9, 0x45db8
0000000000045dc4	cbnz	w22, 0x45de8
0000000000045dc8	cmp	w8, #0x1
0000000000045dcc	b.ne	0x45de8
0000000000045dd0	adr	x8, #0x40c73
0000000000045dd4	nop
0000000000045dd8	ldarb	w8, [x8]
0000000000045ddc	tbz	w8, #0x0, 0x45de8
0000000000045de0	mov	x0, x21
0000000000045de4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000045de8	str	x27, [sp, #0x10]
0000000000045dec	ldp	x1, x27, [x28, #0x10]
0000000000045df0	subs	x8, x27, x1
0000000000045df4	asr	x25, x8, #3
0000000000045df8	mov	w8, #0x66
0000000000045dfc	mul	x8, x25, x8
0000000000045e00	sub	x8, x8, #0x1
0000000000045e04	csel	x9, xzr, x8, eq
0000000000045e08	ldp	x8, x10, [x28, #0x28]
0000000000045e0c	add	x10, x10, x8
0000000000045e10	cmp	x9, x10
0000000000045e14	b.ne	0x461d0
0000000000045e18	subs	x8, x8, #0x66
0000000000045e1c	b.lo	0x45e8c
0000000000045e20	str	x8, [x28, #0x28]
0000000000045e24	ldr	x22, [x1], #0x8
0000000000045e28	str	x1, [x28, #0x10]
0000000000045e2c	ldr	x8, [x28, #0x20]
0000000000045e30	cmp	x8, x27
0000000000045e34	b.ne	0x461c0
0000000000045e38	ldr	x9, [x28, #0x8]
0000000000045e3c	subs	x10, x1, x9
0000000000045e40	b.ls	0x45f90
0000000000045e44	asr	x9, x10, #3
0000000000045e48	add	x10, x9, #0x1
0000000000045e4c	add	x11, x9, #0x2
0000000000045e50	cmp	x10, #0x0
0000000000045e54	csinc	x9, x11, x9, lt
0000000000045e58	asr	x9, x9, #1
0000000000045e5c	neg	x23, x9
0000000000045e60	sub	x20, x1, x9, lsl #3
0000000000045e64	subs	x21, x8, x1
0000000000045e68	b.eq	0x45e7c
0000000000045e6c	mov	x0, x20
0000000000045e70	mov	x2, x21
0000000000045e74	bl	0x51ab8 ; symbol stub for: _memmove
0000000000045e78	ldr	x1, [x28, #0x10]
0000000000045e7c	add	x27, x20, x21
0000000000045e80	add	x8, x1, x23, lsl #3
0000000000045e84	stp	x8, x27, [x28, #0x10]
0000000000045e88	b	0x461c0
0000000000045e8c	ldr	x21, [x28, #0x20]
0000000000045e90	ldr	x8, [x28, #0x8]
0000000000045e94	sub	x8, x21, x8
0000000000045e98	cmp	x25, x8, asr #3
0000000000045e9c	b.hs	0x45f10
0000000000045ea0	mov	w0, #0x66
0000000000045ea4	mov	w1, #0x28
0000000000045ea8	bl	0x519e0 ; symbol stub for: _calloc
0000000000045eac	mov	x20, x0
0000000000045eb0	cmp	x21, x27
0000000000045eb4	b.ne	0x45f7c
0000000000045eb8	ldp	x9, x1, [x28, #0x8]
0000000000045ebc	cmp	x1, x9
0000000000045ec0	b.ne	0x46394
0000000000045ec4	ldp	x8, x10, [x28, #0x18]
0000000000045ec8	cmp	x8, x10
0000000000045ecc	b.hs	0x462b0
0000000000045ed0	sub	x9, x10, x8
0000000000045ed4	asr	x9, x9, #3
0000000000045ed8	add	x10, x9, #0x1
0000000000045edc	add	x11, x9, #0x2
0000000000045ee0	cmp	x10, #0x0
0000000000045ee4	csinc	x9, x11, x9, lt
0000000000045ee8	asr	x22, x9, #1
0000000000045eec	add	x9, x8, x22, lsl #3
0000000000045ef0	subs	x2, x8, x1
0000000000045ef4	b.eq	0x46364
0000000000045ef8	sub	x21, x9, x2
0000000000045efc	mov	x0, x21
0000000000045f00	bl	0x51ab8 ; symbol stub for: _memmove
0000000000045f04	ldr	x8, [x28, #0x18]
0000000000045f08	mov	x1, x21
0000000000045f0c	b	0x46368
0000000000045f10	str	x24, [sp, #0x8]
0000000000045f14	asr	x9, x8, #2
0000000000045f18	cmp	x8, #0x0
0000000000045f1c	csinc	x23, x9, xzr, ne
0000000000045f20	mov	x0, x23
0000000000045f24	mov	w1, #0x8
0000000000045f28	bl	0x519e0 ; symbol stub for: _calloc
0000000000045f2c	mov	x20, x0
0000000000045f30	add	x21, x0, x25, lsl #3
0000000000045f34	add	x24, x0, x23, lsl #3
0000000000045f38	mov	w0, #0x66
0000000000045f3c	mov	w1, #0x28
0000000000045f40	bl	0x519e0 ; symbol stub for: _calloc
0000000000045f44	mov	x22, x0
0000000000045f48	cmp	x25, x23
0000000000045f4c	b.ne	0x46024
0000000000045f50	subs	x8, x21, x20
0000000000045f54	b.ls	0x45fe8
0000000000045f58	asr	x8, x8, #3
0000000000045f5c	add	x9, x8, #0x1
0000000000045f60	add	x10, x8, #0x2
0000000000045f64	cmp	x9, #0x0
0000000000045f68	csinc	x8, x10, x8, lt
0000000000045f6c	lsl	x8, x8, #2
0000000000045f70	and	x8, x8, #0xfffffffffffffff8
0000000000045f74	sub	x21, x21, x8
0000000000045f78	b	0x46024
0000000000045f7c	ldp	x9, x8, [x28, #0x18]
0000000000045f80	cmp	x9, x8
0000000000045f84	b.eq	0x46148
0000000000045f88	str	x20, [x9]
0000000000045f8c	b	0x461c4
0000000000045f90	subs	x8, x8, x9
0000000000045f94	asr	x8, x8, #2
0000000000045f98	csinc	x20, x8, xzr, ne
0000000000045f9c	lsl	x8, x20, #1
0000000000045fa0	and	x21, x8, #0xfffffffffffffff8
0000000000045fa4	mov	x0, x20
0000000000045fa8	mov	w1, #0x8
0000000000045fac	bl	0x519e0 ; symbol stub for: _calloc
0000000000045fb0	add	x9, x0, x21
0000000000045fb4	add	x10, x0, x20, lsl #3
0000000000045fb8	ldp	x8, x11, [x28, #0x10]
0000000000045fbc	subs	x11, x11, x8
0000000000045fc0	b.eq	0x461a0
0000000000045fc4	asr	x12, x11, #3
0000000000045fc8	add	x27, x9, x11
0000000000045fcc	lsl	x11, x12, #3
0000000000045fd0	mov	x12, x9
0000000000045fd4	ldr	x13, [x8], #0x8
0000000000045fd8	str	x13, [x12], #0x8
0000000000045fdc	subs	x11, x11, #0x8
0000000000045fe0	b.ne	0x45fd4
0000000000045fe4	b	0x461a4
0000000000045fe8	subs	x8, x24, x20
0000000000045fec	asr	x8, x8, #2
0000000000045ff0	csinc	x24, x8, xzr, ne
0000000000045ff4	lsl	x8, x24, #1
0000000000045ff8	and	x21, x8, #0xfffffffffffffff8
0000000000045ffc	mov	x0, x24
0000000000046000	mov	w1, #0x8
0000000000046004	bl	0x519e0 ; symbol stub for: _calloc
0000000000046008	mov	x23, x0
000000000004600c	add	x21, x0, x21
0000000000046010	add	x24, x0, x24, lsl #3
0000000000046014	cbz	x20, 0x46020
0000000000046018	mov	x0, x20
000000000004601c	bl	0x51a64 ; symbol stub for: _free
0000000000046020	mov	x20, x23
0000000000046024	str	x22, [x21]
0000000000046028	add	x27, x21, #0x8
000000000004602c	ldr	x25, [x28, #0x18]
0000000000046030	b	0x46044
0000000000046034	mov	x22, x21
0000000000046038	ldr	x8, [x25]
000000000004603c	stur	x8, [x22, #-0x8]
0000000000046040	sub	x21, x21, #0x8
0000000000046044	ldr	x8, [x28, #0x10]
0000000000046048	cmp	x25, x8
000000000004604c	b.eq	0x46128
0000000000046050	sub	x25, x25, #0x8
0000000000046054	cmp	x21, x20
0000000000046058	b.ne	0x46034
000000000004605c	cmp	x27, x24
0000000000046060	b.hs	0x460b0
0000000000046064	sub	x8, x24, x27
0000000000046068	asr	x8, x8, #3
000000000004606c	add	x9, x8, #0x1
0000000000046070	add	x10, x8, #0x2
0000000000046074	cmp	x9, #0x0
0000000000046078	csinc	x8, x10, x8, lt
000000000004607c	lsl	x8, x8, #2
0000000000046080	and	x8, x8, #0xfffffffffffffff8
0000000000046084	add	x23, x27, x8
0000000000046088	mov	x22, x23
000000000004608c	subs	x2, x27, x21
0000000000046090	b.eq	0x460a4
0000000000046094	sub	x22, x23, x2
0000000000046098	mov	x0, x22
000000000004609c	mov	x1, x21
00000000000460a0	bl	0x51ab8 ; symbol stub for: _memmove
00000000000460a4	mov	x21, x22
00000000000460a8	mov	x27, x23
00000000000460ac	b	0x46038
00000000000460b0	subs	x8, x24, x20
00000000000460b4	asr	x8, x8, #2
00000000000460b8	csinc	x24, x8, xzr, ne
00000000000460bc	lsl	x8, x24, #1
00000000000460c0	add	x8, x8, #0x6
00000000000460c4	and	x22, x8, #0xfffffffffffffff8
00000000000460c8	mov	x0, x24
00000000000460cc	mov	w1, #0x8
00000000000460d0	bl	0x519e0 ; symbol stub for: _calloc
00000000000460d4	mov	x23, x0
00000000000460d8	add	x22, x0, x22
00000000000460dc	subs	x8, x27, x21
00000000000460e0	b.eq	0x46108
00000000000460e4	asr	x9, x8, #3
00000000000460e8	add	x27, x22, x8
00000000000460ec	lsl	x8, x9, #3
00000000000460f0	mov	x9, x22
00000000000460f4	ldr	x10, [x21], #0x8
00000000000460f8	str	x10, [x9], #0x8
00000000000460fc	subs	x8, x8, #0x8
0000000000046100	b.ne	0x460f4
0000000000046104	b	0x4610c
0000000000046108	mov	x27, x22
000000000004610c	add	x24, x23, x24, lsl #3
0000000000046110	cbz	x20, 0x4611c
0000000000046114	mov	x0, x20
0000000000046118	bl	0x51a64 ; symbol stub for: _free
000000000004611c	mov	x20, x23
0000000000046120	mov	x21, x22
0000000000046124	b	0x46038
0000000000046128	ldr	x0, [x28, #0x8]
000000000004612c	stp	x20, x21, [x28, #0x8]
0000000000046130	stp	x27, x24, [x28, #0x18]
0000000000046134	cbz	x0, 0x46140
0000000000046138	bl	0x51a64 ; symbol stub for: _free
000000000004613c	ldr	x27, [x28, #0x18]
0000000000046140	ldr	x24, [sp, #0x8]
0000000000046144	b	0x461d0
0000000000046148	ldp	x10, x1, [x28, #0x8]
000000000004614c	subs	x11, x1, x10
0000000000046150	b.ls	0x4630c
0000000000046154	asr	x8, x11, #3
0000000000046158	add	x10, x8, #0x1
000000000004615c	add	x11, x8, #0x2
0000000000046160	cmp	x10, #0x0
0000000000046164	csinc	x8, x11, x8, lt
0000000000046168	asr	x8, x8, #1
000000000004616c	neg	x23, x8
0000000000046170	sub	x21, x1, x8, lsl #3
0000000000046174	subs	x22, x9, x1
0000000000046178	b.eq	0x4618c
000000000004617c	mov	x0, x21
0000000000046180	mov	x2, x22
0000000000046184	bl	0x51ab8 ; symbol stub for: _memmove
0000000000046188	ldr	x1, [x28, #0x10]
000000000004618c	add	x9, x21, x22
0000000000046190	add	x8, x1, x23, lsl #3
0000000000046194	stp	x8, x9, [x28, #0x10]
0000000000046198	str	x20, [x9]
000000000004619c	b	0x461c4
00000000000461a0	mov	x27, x9
00000000000461a4	ldr	x8, [x28, #0x8]
00000000000461a8	stp	x0, x9, [x28, #0x8]
00000000000461ac	stp	x27, x10, [x28, #0x18]
00000000000461b0	cbz	x8, 0x461c0
00000000000461b4	mov	x0, x8
00000000000461b8	bl	0x51a64 ; symbol stub for: _free
00000000000461bc	ldr	x27, [x28, #0x18]
00000000000461c0	str	x22, [x27]
00000000000461c4	ldr	x8, [x28, #0x18]
00000000000461c8	add	x27, x8, #0x8
00000000000461cc	str	x27, [x28, #0x18]
00000000000461d0	ldr	x8, [x28, #0x10]
00000000000461d4	cmp	x27, x8
00000000000461d8	b.eq	0x46214
00000000000461dc	ldp	x9, x10, [x28, #0x28]
00000000000461e0	add	x9, x9, x10
00000000000461e4	mov	x10, #0xa0a1
00000000000461e8	movk	x10, #0xa0a0, lsl #16
00000000000461ec	movk	x10, #0xa0a0, lsl #32
00000000000461f0	movk	x10, #0xa0a0, lsl #48
00000000000461f4	umulh	x10, x9, x10
00000000000461f8	lsr	x10, x10, #6
00000000000461fc	ldr	x8, [x8, x10, lsl #3]
0000000000046200	mov	x11, #-0x66
0000000000046204	madd	x9, x10, x11, x9
0000000000046208	mov	w10, #0x28
000000000004620c	madd	x8, x9, x10, x8
0000000000046210	b	0x46218
0000000000046214	mov	x8, #0x0
0000000000046218	ldr	x10, [sp, #0x10]
000000000004621c	mov	w9, #0x3
0000000000046220	str	w9, [x8]
0000000000046224	str	x10, [x8, #0x8]
0000000000046228	ldur	q0, [sp, #0x18]
000000000004622c	str	q0, [x8, #0x10]
0000000000046230	ldr	x9, [sp, #0x28]
0000000000046234	str	x9, [x8, #0x20]
0000000000046238	ldr	x8, [x28, #0x30]
000000000004623c	add	x8, x8, #0x1
0000000000046240	str	x8, [x28, #0x30]
0000000000046244	add	x0, x28, #0x98
0000000000046248	bl	0x51c2c ; symbol stub for: _pthread_cond_signal
000000000004624c	add	x0, sp, #0x48
0000000000046250	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000046254	cbz	x24, 0x46288
0000000000046258	ldaxr	w8, [x19]
000000000004625c	stlxr	w9, w26, [x19]
0000000000046260	cbnz	w9, 0x46258
0000000000046264	cbnz	w26, 0x46288
0000000000046268	cmp	w8, #0x1
000000000004626c	b.ne	0x46288
0000000000046270	adr	x8, #0x407d3
0000000000046274	nop
0000000000046278	ldarb	w8, [x8]
000000000004627c	tbz	w8, #0x0, 0x46288
0000000000046280	mov	x0, x19
0000000000046284	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046288	add	x0, sp, #0x30
000000000004628c	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000046290	ldp	x29, x30, [sp, #0xb0]
0000000000046294	ldp	x20, x19, [sp, #0xa0]
0000000000046298	ldp	x22, x21, [sp, #0x90]
000000000004629c	ldp	x24, x23, [sp, #0x80]
00000000000462a0	ldp	x26, x25, [sp, #0x70]
00000000000462a4	ldp	x28, x27, [sp, #0x60]
00000000000462a8	add	sp, sp, #0xc0
00000000000462ac	ret
00000000000462b0	subs	x8, x10, x9
00000000000462b4	asr	x8, x8, #2
00000000000462b8	csinc	x21, x8, xzr, ne
00000000000462bc	lsl	x8, x21, #1
00000000000462c0	add	x8, x8, #0x6
00000000000462c4	and	x22, x8, #0xfffffffffffffff8
00000000000462c8	mov	x0, x21
00000000000462cc	mov	w1, #0x8
00000000000462d0	bl	0x519e0 ; symbol stub for: _calloc
00000000000462d4	add	x1, x0, x22
00000000000462d8	add	x9, x0, x21, lsl #3
00000000000462dc	ldp	x8, x10, [x28, #0x10]
00000000000462e0	subs	x10, x10, x8
00000000000462e4	b.eq	0x46374
00000000000462e8	asr	x11, x10, #3
00000000000462ec	add	x10, x1, x10
00000000000462f0	lsl	x11, x11, #3
00000000000462f4	mov	x12, x1
00000000000462f8	ldr	x13, [x8], #0x8
00000000000462fc	str	x13, [x12], #0x8
0000000000046300	subs	x11, x11, #0x8
0000000000046304	b.ne	0x462f8
0000000000046308	b	0x46378
000000000004630c	subs	x8, x8, x10
0000000000046310	asr	x8, x8, #2
0000000000046314	csinc	x21, x8, xzr, ne
0000000000046318	lsl	x8, x21, #1
000000000004631c	and	x22, x8, #0xfffffffffffffff8
0000000000046320	mov	x0, x21
0000000000046324	mov	w1, #0x8
0000000000046328	bl	0x519e0 ; symbol stub for: _calloc
000000000004632c	add	x10, x0, x22
0000000000046330	add	x11, x0, x21, lsl #3
0000000000046334	ldp	x8, x9, [x28, #0x10]
0000000000046338	subs	x9, x9, x8
000000000004633c	b.eq	0x46470
0000000000046340	asr	x12, x9, #3
0000000000046344	add	x9, x10, x9
0000000000046348	lsl	x12, x12, #3
000000000004634c	mov	x13, x10
0000000000046350	ldr	x14, [x8], #0x8
0000000000046354	str	x14, [x13], #0x8
0000000000046358	subs	x12, x12, #0x8
000000000004635c	b.ne	0x46350
0000000000046360	b	0x46474
0000000000046364	mov	x1, x9
0000000000046368	add	x8, x8, x22, lsl #3
000000000004636c	stp	x1, x8, [x28, #0x10]
0000000000046370	b	0x46394
0000000000046374	mov	x10, x1
0000000000046378	ldr	x8, [x28, #0x8]
000000000004637c	stp	x0, x1, [x28, #0x8]
0000000000046380	stp	x10, x9, [x28, #0x18]
0000000000046384	cbz	x8, 0x46394
0000000000046388	mov	x0, x8
000000000004638c	bl	0x51a64 ; symbol stub for: _free
0000000000046390	ldr	x1, [x28, #0x10]
0000000000046394	stur	x20, [x1, #-0x8]
0000000000046398	ldp	x1, x9, [x28, #0x10]
000000000004639c	sub	x8, x1, #0x8
00000000000463a0	str	x8, [x28, #0x10]
00000000000463a4	ldur	x22, [x1, #-0x8]
00000000000463a8	str	x1, [x28, #0x10]
00000000000463ac	ldr	x8, [x28, #0x20]
00000000000463b0	cmp	x9, x8
00000000000463b4	b.eq	0x463c0
00000000000463b8	str	x22, [x9]
00000000000463bc	b	0x461c4
00000000000463c0	ldr	x10, [x28, #0x8]
00000000000463c4	subs	x11, x1, x10
00000000000463c8	b.ls	0x46418
00000000000463cc	asr	x8, x11, #3
00000000000463d0	add	x10, x8, #0x1
00000000000463d4	add	x11, x8, #0x2
00000000000463d8	cmp	x10, #0x0
00000000000463dc	csinc	x8, x11, x8, lt
00000000000463e0	asr	x8, x8, #1
00000000000463e4	neg	x23, x8
00000000000463e8	sub	x20, x1, x8, lsl #3
00000000000463ec	subs	x21, x9, x1
00000000000463f0	b.eq	0x46404
00000000000463f4	mov	x0, x20
00000000000463f8	mov	x2, x21
00000000000463fc	bl	0x51ab8 ; symbol stub for: _memmove
0000000000046400	ldr	x1, [x28, #0x10]
0000000000046404	add	x9, x20, x21
0000000000046408	add	x8, x1, x23, lsl #3
000000000004640c	stp	x8, x9, [x28, #0x10]
0000000000046410	str	x22, [x9]
0000000000046414	b	0x461c4
0000000000046418	subs	x8, x8, x10
000000000004641c	asr	x8, x8, #2
0000000000046420	csinc	x20, x8, xzr, ne
0000000000046424	lsl	x8, x20, #1
0000000000046428	and	x21, x8, #0xfffffffffffffff8
000000000004642c	mov	x0, x20
0000000000046430	mov	w1, #0x8
0000000000046434	bl	0x519e0 ; symbol stub for: _calloc
0000000000046438	add	x10, x0, x21
000000000004643c	add	x11, x0, x20, lsl #3
0000000000046440	ldp	x8, x9, [x28, #0x10]
0000000000046444	subs	x9, x9, x8
0000000000046448	b.eq	0x46494
000000000004644c	asr	x12, x9, #3
0000000000046450	add	x9, x10, x9
0000000000046454	lsl	x12, x12, #3
0000000000046458	mov	x13, x10
000000000004645c	ldr	x14, [x8], #0x8
0000000000046460	str	x14, [x13], #0x8
0000000000046464	subs	x12, x12, #0x8
0000000000046468	b.ne	0x4645c
000000000004646c	b	0x46498
0000000000046470	mov	x9, x10
0000000000046474	ldr	x8, [x28, #0x8]
0000000000046478	stp	x0, x10, [x28, #0x8]
000000000004647c	stp	x9, x11, [x28, #0x18]
0000000000046480	cbz	x8, 0x45f88
0000000000046484	mov	x0, x8
0000000000046488	bl	0x51a64 ; symbol stub for: _free
000000000004648c	ldr	x9, [x28, #0x18]
0000000000046490	b	0x45f88
0000000000046494	mov	x9, x10
0000000000046498	ldr	x8, [x28, #0x8]
000000000004649c	stp	x0, x10, [x28, #0x8]
00000000000464a0	stp	x9, x11, [x28, #0x18]
00000000000464a4	cbz	x8, 0x463b8
00000000000464a8	mov	x0, x8
00000000000464ac	bl	0x51a64 ; symbol stub for: _free
00000000000464b0	ldr	x9, [x28, #0x18]
00000000000464b4	b	0x463b8
00000000000464b8	mov	x20, x0
00000000000464bc	add	x0, sp, #0x48
00000000000464c0	bl	__ZN12_GLOBAL__N_16LockerD1Ev
00000000000464c4	b	0x46500
00000000000464c8	mov	x20, x0
00000000000464cc	cbz	x23, 0x46500
00000000000464d0	ldaxr	w8, [x21]
00000000000464d4	stlxr	w9, w22, [x21]
00000000000464d8	cbnz	w9, 0x464d0
00000000000464dc	cbnz	w22, 0x46500
00000000000464e0	cmp	w8, #0x1
00000000000464e4	b.ne	0x46500
00000000000464e8	adr	x8, #0x4055b
00000000000464ec	nop
00000000000464f0	ldarb	w8, [x8]
00000000000464f4	tbz	w8, #0x0, 0x46500
00000000000464f8	mov	x0, x21
00000000000464fc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046500	cbnz	x24, 0x46510
0000000000046504	add	x0, sp, #0x30
0000000000046508	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000004650c	b	0x46584
0000000000046510	ldaxr	w8, [x19]
0000000000046514	stlxr	w9, w26, [x19]
0000000000046518	cbnz	w9, 0x46510
000000000004651c	cbnz	w26, 0x46504
0000000000046520	cmp	w8, #0x1
0000000000046524	b.ne	0x46504
0000000000046528	adr	x8, #0x4051b
000000000004652c	nop
0000000000046530	ldarb	w8, [x8]
0000000000046534	tbz	w8, #0x0, 0x46504
0000000000046538	mov	x0, x19
000000000004653c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046540	b	0x46504
0000000000046544	mov	x20, x0
0000000000046548	cbz	x25, 0x46584
000000000004654c	ldaxr	w8, [x21]
0000000000046550	stlxr	w9, w24, [x21]
0000000000046554	cbnz	w9, 0x4654c
0000000000046558	cbnz	w24, 0x46584
000000000004655c	cmp	w8, #0x1
0000000000046560	b.ne	0x46584
0000000000046564	adr	x8, #0x404df
0000000000046568	nop
000000000004656c	ldarb	w8, [x8]
0000000000046570	tbz	w8, #0x0, 0x46584
0000000000046574	mov	x0, x21
0000000000046578	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004657c	b	0x46584
0000000000046580	mov	x20, x0
0000000000046584	mov	x0, x20
0000000000046588	bl	0x51938 ; symbol stub for: ___cxa_begin_catch
000000000004658c	bl	0x51908 ; symbol stub for: __ZSt9terminatev
_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject:
0000000000046590	stp	x22, x21, [sp, #-0x30]!
0000000000046594	stp	x20, x19, [sp, #0x10]
0000000000046598	stp	x29, x30, [sp, #0x20]
000000000004659c	add	x29, sp, #0x20
00000000000465a0	mov	x21, x2
00000000000465a4	mov	x19, x1
00000000000465a8	mov	x22, x0
00000000000465ac	adrp	x0, 38 ; 0x6c000
00000000000465b0	add	x0, x0, #0xbb0
00000000000465b4	ldr	x8, [x0]
00000000000465b8	blr	x8
00000000000465bc	ldr	x8, [x0]
00000000000465c0	ldr	x8, [x8, #0x118]
00000000000465c4	ldrsw	x9, [x22, #0x14]
00000000000465c8	add	x9, x9, #0xf
00000000000465cc	and	x1, x9, #0xfffffffffffffff8
00000000000465d0	add	x0, x8, #0x70
00000000000465d4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000465d8	mov	x20, x0
00000000000465dc	str	x22, [x20, #0x10]!
00000000000465e0	stur	xzr, [x20, #-0x8]
00000000000465e4	str	x20, [x21]
00000000000465e8	ldar	x8, [x20]
00000000000465ec	and	x8, x8, #0xfffffffffffffffc
00000000000465f0	ldr	x9, [x8]
00000000000465f4	cmp	x9, x8
00000000000465f8	csel	x0, xzr, x8, eq
00000000000465fc	cbnz	x0, 0x46608
0000000000046600	mov	x0, x20
0000000000046604	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000046608	add	x8, x0, #0x10
000000000004660c	stlr	x19, [x8]
0000000000046610	mov	x0, x20
0000000000046614	ldp	x29, x30, [sp, #0x20]
0000000000046618	ldp	x20, x19, [sp, #0x10]
000000000004661c	ldp	x22, x21, [sp], #0x30
0000000000046620	ret
_Kotlin_ObjCExport_refToRetainedObjC:
0000000000046624	cbz	x0, 0x46670
0000000000046628	ldar	x8, [x0]
000000000004662c	and	x8, x8, #0xfffffffffffffffc
0000000000046630	ldr	x9, [x8]
0000000000046634	cmp	x8, #0x0
0000000000046638	ccmp	x9, x8, #0x4, ne
000000000004663c	b.eq	0x46654
0000000000046640	add	x8, x8, #0x10
0000000000046644	ldar	x8, [x8]
0000000000046648	cbz	x8, 0x46654
000000000004664c	mov	x0, x8
0000000000046650	b	0x51ba8 ; symbol stub for: _objc_retain
0000000000046654	ldr	x8, [x0]
0000000000046658	and	x8, x8, #0xfffffffffffffffc
000000000004665c	ldr	x8, [x8]
0000000000046660	ldr	x8, [x8, #0x60]
0000000000046664	ldr	x1, [x8]
0000000000046668	cbz	x1, 0x46674
000000000004666c	br	x1
0000000000046670	ret
0000000000046674	b	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
_Kotlin_ObjCExport_refToLocalObjC:
0000000000046678	stp	x29, x30, [sp, #-0x10]!
000000000004667c	mov	x29, sp
0000000000046680	cbz	x0, 0x466d8
0000000000046684	ldar	x8, [x0]
0000000000046688	and	x8, x8, #0xfffffffffffffffc
000000000004668c	ldr	x9, [x8]
0000000000046690	cmp	x8, #0x0
0000000000046694	ccmp	x9, x8, #0x4, ne
0000000000046698	b.eq	0x466b4
000000000004669c	add	x8, x8, #0x10
00000000000466a0	ldar	x8, [x8]
00000000000466a4	cbz	x8, 0x466b4
00000000000466a8	mov	x0, x8
00000000000466ac	ldp	x29, x30, [sp], #0x10
00000000000466b0	ret
00000000000466b4	ldr	x8, [x0]
00000000000466b8	and	x8, x8, #0xfffffffffffffffc
00000000000466bc	ldr	x8, [x8]
00000000000466c0	ldr	x8, [x8, #0x60]
00000000000466c4	ldr	x8, [x8]
00000000000466c8	cbz	x8, 0x466e8
00000000000466cc	blr	x8
00000000000466d0	ldp	x29, x30, [sp], #0x10
00000000000466d4	b	0x51b18 ; symbol stub for: _objc_autorelease
00000000000466d8	mov	x8, #0x0
00000000000466dc	mov	x0, x8
00000000000466e0	ldp	x29, x30, [sp], #0x10
00000000000466e4	ret
00000000000466e8	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
00000000000466ec	ldp	x29, x30, [sp], #0x10
00000000000466f0	b	0x51b18 ; symbol stub for: _objc_autorelease
_Kotlin_NSSetAsKSet_contains:
00000000000466f4	stp	x22, x21, [sp, #-0x30]!
00000000000466f8	stp	x20, x19, [sp, #0x10]
00000000000466fc	stp	x29, x30, [sp, #0x20]
0000000000046700	add	x29, sp, #0x20
0000000000046704	ldar	x8, [x0]
0000000000046708	and	x8, x8, #0xfffffffffffffffc
000000000004670c	ldr	x9, [x8]
0000000000046710	cmp	x8, #0x0
0000000000046714	ccmp	x9, x8, #0x4, ne
0000000000046718	b.ne	0x46730
000000000004671c	mov	x20, #0x0
0000000000046720	cbz	x1, 0x4673c
0000000000046724	mov	x0, x1
0000000000046728	bl	_Kotlin_ObjCExport_refToObjC
000000000004672c	b	0x46750
0000000000046730	add	x8, x8, #0x10
0000000000046734	ldar	x20, [x8]
0000000000046738	cbnz	x1, 0x46724
000000000004673c	nop
0000000000046740	ldr	x0, #0x24178 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000046744	nop
0000000000046748	ldr	x1, #0x24010 ; Objc selector ref: null
000000000004674c	bl	0x51b78 ; Objc message: +[NSNull null]
0000000000046750	mov	x2, x0
0000000000046754	adrp	x0, 38 ; 0x6c000
0000000000046758	add	x0, x0, #0xbb0
000000000004675c	ldr	x8, [x0]
0000000000046760	blr	x8
0000000000046764	ldr	x22, [x0]
0000000000046768	add	x19, x22, #0x138
000000000004676c	mov	w8, #0x1
0000000000046770	ldaxr	w21, [x19]
0000000000046774	stlxr	w9, w8, [x19]
0000000000046778	cbnz	w9, 0x46770
000000000004677c	nop
0000000000046780	ldr	x1, #0x23e58 ; Objc selector ref: containsObject:
0000000000046784	mov	x0, x20
0000000000046788	bl	0x51b78 ; Objc message: -[x0 containsObject:]
000000000004678c	mov	x20, x0
0000000000046790	cbz	x22, 0x467c4
0000000000046794	ldaxr	w8, [x19]
0000000000046798	stlxr	w9, w21, [x19]
000000000004679c	cbnz	w9, 0x46794
00000000000467a0	cbnz	w21, 0x467c4
00000000000467a4	cmp	w8, #0x1
00000000000467a8	b.ne	0x467c4
00000000000467ac	adr	x8, #0x40297
00000000000467b0	nop
00000000000467b4	ldarb	w8, [x8]
00000000000467b8	tbz	w8, #0x0, 0x467c4
00000000000467bc	mov	x0, x19
00000000000467c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000467c4	mov	x0, x20
00000000000467c8	ldp	x29, x30, [sp, #0x20]
00000000000467cc	ldp	x20, x19, [sp, #0x10]
00000000000467d0	ldp	x22, x21, [sp], #0x30
00000000000467d4	ret
00000000000467d8	mov	x20, x0
00000000000467dc	cbz	x22, 0x46810
00000000000467e0	ldaxr	w8, [x19]
00000000000467e4	stlxr	w9, w21, [x19]
00000000000467e8	cbnz	w9, 0x467e0
00000000000467ec	cbnz	w21, 0x46810
00000000000467f0	cmp	w8, #0x1
00000000000467f4	b.ne	0x46810
00000000000467f8	adr	x8, #0x4024b
00000000000467fc	nop
0000000000046800	ldarb	w8, [x8]
0000000000046804	tbz	w8, #0x0, 0x46810
0000000000046808	mov	x0, x19
000000000004680c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046810	mov	x0, x20
0000000000046814	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSSetAsKSet_getElement:
0000000000046818	stp	x26, x25, [sp, #-0x50]!
000000000004681c	stp	x24, x23, [sp, #0x10]
0000000000046820	stp	x22, x21, [sp, #0x20]
0000000000046824	stp	x20, x19, [sp, #0x30]
0000000000046828	stp	x29, x30, [sp, #0x40]
000000000004682c	add	x29, sp, #0x40
0000000000046830	mov	x19, x2
0000000000046834	ldar	x8, [x0]
0000000000046838	and	x8, x8, #0xfffffffffffffffc
000000000004683c	ldr	x9, [x8]
0000000000046840	cmp	x8, #0x0
0000000000046844	ccmp	x9, x8, #0x4, ne
0000000000046848	b.ne	0x46868
000000000004684c	mov	x21, #0x0
0000000000046850	adrp	x22, 36 ; 0x6a000
0000000000046854	adrp	x23, 36 ; 0x6a000
0000000000046858	cbz	x1, 0x4687c
000000000004685c	mov	x0, x1
0000000000046860	bl	_Kotlin_ObjCExport_refToObjC
0000000000046864	b	0x46888
0000000000046868	add	x8, x8, #0x10
000000000004686c	ldar	x21, [x8]
0000000000046870	adrp	x22, 36 ; 0x6a000
0000000000046874	adrp	x23, 36 ; 0x6a000
0000000000046878	cbnz	x1, 0x4685c
000000000004687c	ldr	x0, [x22, #0x8b8]
0000000000046880	ldr	x1, [x23, #0x758]
0000000000046884	bl	0x51b78 ; Objc message: -[x0 containsObject:]
0000000000046888	mov	x2, x0
000000000004688c	adrp	x0, 38 ; 0x6c000
0000000000046890	add	x0, x0, #0xbb0
0000000000046894	ldr	x8, [x0]
0000000000046898	blr	x8
000000000004689c	ldr	x25, [x0]
00000000000468a0	add	x20, x25, #0x138
00000000000468a4	mov	w8, #0x1
00000000000468a8	ldaxr	w24, [x20]
00000000000468ac	stlxr	w9, w8, [x20]
00000000000468b0	cbnz	w9, 0x468a8
00000000000468b4	nop
00000000000468b8	ldr	x1, #0x23e78 ; Objc selector ref: member:
00000000000468bc	mov	x0, x21
00000000000468c0	bl	0x51b78 ; Objc message: -[x0 member:]
00000000000468c4	mov	x21, x0
00000000000468c8	cbz	x25, 0x468fc
00000000000468cc	ldaxr	w8, [x20]
00000000000468d0	stlxr	w9, w24, [x20]
00000000000468d4	cbnz	w9, 0x468cc
00000000000468d8	cbnz	w24, 0x468fc
00000000000468dc	cmp	w8, #0x1
00000000000468e0	b.ne	0x468fc
00000000000468e4	adr	x8, #0x4015f
00000000000468e8	nop
00000000000468ec	ldarb	w8, [x8]
00000000000468f0	tbz	w8, #0x0, 0x468fc
00000000000468f4	mov	x0, x20
00000000000468f8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000468fc	ldr	x0, [x22, #0x8b8]
0000000000046900	ldr	x1, [x23, #0x758]
0000000000046904	bl	0x51b78 ; Objc message: -[x0 member:]
0000000000046908	cmp	x21, x0
000000000004690c	b.eq	0x4693c
0000000000046910	cbz	x21, 0x4693c
0000000000046914	nop
0000000000046918	ldr	x1, #0x40380
000000000004691c	mov	x0, x21
0000000000046920	mov	x2, x19
0000000000046924	ldp	x29, x30, [sp, #0x40]
0000000000046928	ldp	x20, x19, [sp, #0x30]
000000000004692c	ldp	x22, x21, [sp, #0x20]
0000000000046930	ldp	x24, x23, [sp, #0x10]
0000000000046934	ldp	x26, x25, [sp], #0x50
0000000000046938	b	0x51b78 ; Objc message: -[x0 member:]
000000000004693c	str	xzr, [x19]
0000000000046940	mov	x0, #0x0
0000000000046944	ldp	x29, x30, [sp, #0x40]
0000000000046948	ldp	x20, x19, [sp, #0x30]
000000000004694c	ldp	x22, x21, [sp, #0x20]
0000000000046950	ldp	x24, x23, [sp, #0x10]
0000000000046954	ldp	x26, x25, [sp], #0x50
0000000000046958	ret
000000000004695c	mov	x19, x0
0000000000046960	cbz	x25, 0x46994
0000000000046964	ldaxr	w8, [x20]
0000000000046968	stlxr	w9, w24, [x20]
000000000004696c	cbnz	w9, 0x46964
0000000000046970	cbnz	w24, 0x46994
0000000000046974	cmp	w8, #0x1
0000000000046978	b.ne	0x46994
000000000004697c	adr	x8, #0x400c7
0000000000046980	nop
0000000000046984	ldarb	w8, [x8]
0000000000046988	tbz	w8, #0x0, 0x46994
000000000004698c	mov	x0, x20
0000000000046990	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046994	mov	x0, x19
0000000000046998	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_containsKey:
000000000004699c	stp	x22, x21, [sp, #-0x30]!
00000000000469a0	stp	x20, x19, [sp, #0x10]
00000000000469a4	stp	x29, x30, [sp, #0x20]
00000000000469a8	add	x29, sp, #0x20
00000000000469ac	ldar	x8, [x0]
00000000000469b0	and	x8, x8, #0xfffffffffffffffc
00000000000469b4	ldr	x9, [x8]
00000000000469b8	cmp	x8, #0x0
00000000000469bc	ccmp	x9, x8, #0x4, ne
00000000000469c0	b.ne	0x469d8
00000000000469c4	mov	x20, #0x0
00000000000469c8	cbz	x1, 0x469e4
00000000000469cc	mov	x0, x1
00000000000469d0	bl	_Kotlin_ObjCExport_refToObjC
00000000000469d4	b	0x469f8
00000000000469d8	add	x8, x8, #0x10
00000000000469dc	ldar	x20, [x8]
00000000000469e0	cbnz	x1, 0x469cc
00000000000469e4	nop
00000000000469e8	ldr	x0, #0x23ed0 ; Objc class ref: _OBJC_CLASS_$_NSNull
00000000000469ec	nop
00000000000469f0	ldr	x1, #0x23d68 ; Objc selector ref: null
00000000000469f4	bl	0x51b78 ; Objc message: +[NSNull null]
00000000000469f8	mov	x2, x0
00000000000469fc	adrp	x0, 38 ; 0x6c000
0000000000046a00	add	x0, x0, #0xbb0
0000000000046a04	ldr	x8, [x0]
0000000000046a08	blr	x8
0000000000046a0c	ldr	x22, [x0]
0000000000046a10	add	x19, x22, #0x138
0000000000046a14	mov	w8, #0x1
0000000000046a18	ldaxr	w21, [x19]
0000000000046a1c	stlxr	w9, w8, [x19]
0000000000046a20	cbnz	w9, 0x46a18
0000000000046a24	nop
0000000000046a28	ldr	x1, #0x23d58 ; Objc selector ref: objectForKey:
0000000000046a2c	mov	x0, x20
0000000000046a30	bl	0x51b78 ; Objc message: -[x0 objectForKey:]
0000000000046a34	mov	x20, x0
0000000000046a38	cbz	x22, 0x46a6c
0000000000046a3c	ldaxr	w8, [x19]
0000000000046a40	stlxr	w9, w21, [x19]
0000000000046a44	cbnz	w9, 0x46a3c
0000000000046a48	cbnz	w21, 0x46a6c
0000000000046a4c	cmp	w8, #0x1
0000000000046a50	b.ne	0x46a6c
0000000000046a54	adr	x8, #0x3ffef
0000000000046a58	nop
0000000000046a5c	ldarb	w8, [x8]
0000000000046a60	tbz	w8, #0x0, 0x46a6c
0000000000046a64	mov	x0, x19
0000000000046a68	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046a6c	cmp	x20, #0x0
0000000000046a70	cset	w0, ne
0000000000046a74	ldp	x29, x30, [sp, #0x20]
0000000000046a78	ldp	x20, x19, [sp, #0x10]
0000000000046a7c	ldp	x22, x21, [sp], #0x30
0000000000046a80	ret
0000000000046a84	mov	x20, x0
0000000000046a88	cbz	x22, 0x46abc
0000000000046a8c	ldaxr	w8, [x19]
0000000000046a90	stlxr	w9, w21, [x19]
0000000000046a94	cbnz	w9, 0x46a8c
0000000000046a98	cbnz	w21, 0x46abc
0000000000046a9c	cmp	w8, #0x1
0000000000046aa0	b.ne	0x46abc
0000000000046aa4	adr	x8, #0x3ff9f
0000000000046aa8	nop
0000000000046aac	ldarb	w8, [x8]
0000000000046ab0	tbz	w8, #0x0, 0x46abc
0000000000046ab4	mov	x0, x19
0000000000046ab8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046abc	mov	x0, x20
0000000000046ac0	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_containsValue:
0000000000046ac4	sub	sp, sp, #0x140
0000000000046ac8	stp	x28, x27, [sp, #0xe0]
0000000000046acc	stp	x26, x25, [sp, #0xf0]
0000000000046ad0	stp	x24, x23, [sp, #0x100]
0000000000046ad4	stp	x22, x21, [sp, #0x110]
0000000000046ad8	stp	x20, x19, [sp, #0x120]
0000000000046adc	stp	x29, x30, [sp, #0x130]
0000000000046ae0	add	x29, sp, #0x130
0000000000046ae4	ldar	x8, [x0]
0000000000046ae8	and	x8, x8, #0xfffffffffffffffc
0000000000046aec	ldr	x9, [x8]
0000000000046af0	cmp	x8, #0x0
0000000000046af4	ccmp	x9, x8, #0x4, ne
0000000000046af8	b.ne	0x46b10
0000000000046afc	mov	x20, #0x0
0000000000046b00	cbz	x1, 0x46b1c
0000000000046b04	mov	x0, x1
0000000000046b08	bl	_Kotlin_ObjCExport_refToObjC
0000000000046b0c	b	0x46b30
0000000000046b10	add	x8, x8, #0x10
0000000000046b14	ldar	x20, [x8]
0000000000046b18	cbnz	x1, 0x46b04
0000000000046b1c	nop
0000000000046b20	ldr	x0, #0x23d98 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000046b24	nop
0000000000046b28	ldr	x1, #0x23c30 ; Objc selector ref: null
0000000000046b2c	bl	0x51b78 ; Objc message: +[NSNull null]
0000000000046b30	mov	x21, x0
0000000000046b34	adrp	x0, 38 ; 0x6c000
0000000000046b38	add	x0, x0, #0xbb0
0000000000046b3c	ldr	x8, [x0]
0000000000046b40	blr	x8
0000000000046b44	ldr	x23, [x0]
0000000000046b48	add	x19, x23, #0x138
0000000000046b4c	mov	w8, #0x1
0000000000046b50	ldaxr	w25, [x19]
0000000000046b54	stlxr	w9, w8, [x19]
0000000000046b58	cbnz	w9, 0x46b50
0000000000046b5c	movi.16b	v0, #0x0
0000000000046b60	stp	q0, q0, [sp, #0xb0]
0000000000046b64	stp	q0, q0, [sp, #0x90]
0000000000046b68	nop
0000000000046b6c	ldr	x22, #0x23a84 ; Objc selector ref: countByEnumeratingWithState:objects:count:
0000000000046b70	add	x2, sp, #0x90
0000000000046b74	add	x3, sp, #0x10
0000000000046b78	mov	x0, x20
0000000000046b7c	mov	x1, x22
0000000000046b80	mov	w4, #0x10
0000000000046b84	bl	0x51b78 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
0000000000046b88	cbz	x0, 0x46c40
0000000000046b8c	str	x23, [sp, #0x8]
0000000000046b90	ldr	x8, [sp, #0xa0]
0000000000046b94	ldr	x27, [x8]
0000000000046b98	adrp	x8, 36 ; 0x6a000
0000000000046b9c	adrp	x9, 36 ; 0x6a000
0000000000046ba0	mov	x28, #0x0
0000000000046ba4	ldr	x23, [x8, #0x780]
0000000000046ba8	ldr	x24, [x9, #0x708]
0000000000046bac	cmp	x0, #0x1
0000000000046bb0	csinc	x26, x0, xzr, hi
0000000000046bb4	ldr	x8, [sp, #0xa0]
0000000000046bb8	ldr	x8, [x8]
0000000000046bbc	cmp	x8, x27
0000000000046bc0	b.eq	0x46bcc
0000000000046bc4	mov	x0, x20
0000000000046bc8	bl	0x51b3c ; symbol stub for: _objc_enumerationMutation
0000000000046bcc	ldr	x8, [sp, #0x98]
0000000000046bd0	ldr	x2, [x8, x28, lsl #3]
0000000000046bd4	mov	x0, x20
0000000000046bd8	mov	x1, x23
0000000000046bdc	bl	0x51b78 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
0000000000046be0	mov	x1, x24
0000000000046be4	mov	x2, x21
0000000000046be8	bl	0x51b78 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
0000000000046bec	tbnz	w0, #0x0, 0x46c30
0000000000046bf0	add	x28, x28, #0x1
0000000000046bf4	cmp	x26, x28
0000000000046bf8	b.ne	0x46bb4
0000000000046bfc	add	x2, sp, #0x90
0000000000046c00	add	x3, sp, #0x10
0000000000046c04	mov	x0, x20
0000000000046c08	mov	x1, x22
0000000000046c0c	mov	w4, #0x10
0000000000046c10	bl	0x51b78 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
0000000000046c14	adrp	x8, 36 ; 0x6a000
0000000000046c18	adrp	x9, 36 ; 0x6a000
0000000000046c1c	cbnz	x0, 0x46ba0
0000000000046c20	mov	w20, #0x0
0000000000046c24	ldr	x23, [sp, #0x8]
0000000000046c28	cbnz	x23, 0x46c48
0000000000046c2c	b	0x46c78
0000000000046c30	mov	w20, #0x1
0000000000046c34	ldr	x23, [sp, #0x8]
0000000000046c38	cbnz	x23, 0x46c48
0000000000046c3c	b	0x46c78
0000000000046c40	mov	w20, #0x0
0000000000046c44	cbz	x23, 0x46c78
0000000000046c48	ldaxr	w8, [x19]
0000000000046c4c	stlxr	w9, w25, [x19]
0000000000046c50	cbnz	w9, 0x46c48
0000000000046c54	cbnz	w25, 0x46c78
0000000000046c58	cmp	w8, #0x1
0000000000046c5c	b.ne	0x46c78
0000000000046c60	adr	x8, #0x3fde3
0000000000046c64	nop
0000000000046c68	ldarb	w8, [x8]
0000000000046c6c	tbz	w8, #0x0, 0x46c78
0000000000046c70	mov	x0, x19
0000000000046c74	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046c78	mov	x0, x20
0000000000046c7c	ldp	x29, x30, [sp, #0x130]
0000000000046c80	ldp	x20, x19, [sp, #0x120]
0000000000046c84	ldp	x22, x21, [sp, #0x110]
0000000000046c88	ldp	x24, x23, [sp, #0x100]
0000000000046c8c	ldp	x26, x25, [sp, #0xf0]
0000000000046c90	ldp	x28, x27, [sp, #0xe0]
0000000000046c94	add	sp, sp, #0x140
0000000000046c98	ret
0000000000046c9c	b	0x46ca8
0000000000046ca0	str	x23, [sp, #0x8]
0000000000046ca4	b	0x46ca8
0000000000046ca8	mov	x20, x0
0000000000046cac	ldr	x8, [sp, #0x8]
0000000000046cb0	cbnz	x8, 0x46cbc
0000000000046cb4	mov	x0, x20
0000000000046cb8	bl	0x517a0 ; symbol stub for: __Unwind_Resume
0000000000046cbc	ldaxr	w8, [x19]
0000000000046cc0	stlxr	w9, w25, [x19]
0000000000046cc4	cbnz	w9, 0x46cbc
0000000000046cc8	cbnz	w25, 0x46cb4
0000000000046ccc	cmp	w8, #0x1
0000000000046cd0	b.ne	0x46cb4
0000000000046cd4	adr	x8, #0x3fd6f
0000000000046cd8	nop
0000000000046cdc	ldarb	w8, [x8]
0000000000046ce0	tbz	w8, #0x0, 0x46cb4
0000000000046ce4	mov	x0, x19
0000000000046ce8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046cec	mov	x0, x20
0000000000046cf0	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_get:
0000000000046cf4	stp	x26, x25, [sp, #-0x50]!
0000000000046cf8	stp	x24, x23, [sp, #0x10]
0000000000046cfc	stp	x22, x21, [sp, #0x20]
0000000000046d00	stp	x20, x19, [sp, #0x30]
0000000000046d04	stp	x29, x30, [sp, #0x40]
0000000000046d08	add	x29, sp, #0x40
0000000000046d0c	mov	x19, x2
0000000000046d10	ldar	x8, [x0]
0000000000046d14	and	x8, x8, #0xfffffffffffffffc
0000000000046d18	ldr	x9, [x8]
0000000000046d1c	cmp	x8, #0x0
0000000000046d20	ccmp	x9, x8, #0x4, ne
0000000000046d24	b.ne	0x46d44
0000000000046d28	mov	x21, #0x0
0000000000046d2c	adrp	x22, 36 ; 0x6a000
0000000000046d30	adrp	x23, 36 ; 0x6a000
0000000000046d34	cbz	x1, 0x46d58
0000000000046d38	mov	x0, x1
0000000000046d3c	bl	_Kotlin_ObjCExport_refToObjC
0000000000046d40	b	0x46d64
0000000000046d44	add	x8, x8, #0x10
0000000000046d48	ldar	x21, [x8]
0000000000046d4c	adrp	x22, 36 ; 0x6a000
0000000000046d50	adrp	x23, 36 ; 0x6a000
0000000000046d54	cbnz	x1, 0x46d38
0000000000046d58	ldr	x0, [x22, #0x8b8]
0000000000046d5c	ldr	x1, [x23, #0x758]
0000000000046d60	bl	0x51b78 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
0000000000046d64	mov	x2, x0
0000000000046d68	adrp	x0, 38 ; 0x6c000
0000000000046d6c	add	x0, x0, #0xbb0
0000000000046d70	ldr	x8, [x0]
0000000000046d74	blr	x8
0000000000046d78	ldr	x25, [x0]
0000000000046d7c	add	x20, x25, #0x138
0000000000046d80	mov	w8, #0x1
0000000000046d84	ldaxr	w24, [x20]
0000000000046d88	stlxr	w9, w8, [x20]
0000000000046d8c	cbnz	w9, 0x46d84
0000000000046d90	nop
0000000000046d94	ldr	x1, #0x239ec ; Objc selector ref: objectForKey:
0000000000046d98	mov	x0, x21
0000000000046d9c	bl	0x51b78 ; Objc message: -[x0 objectForKey:]
0000000000046da0	mov	x21, x0
0000000000046da4	cbz	x25, 0x46dd8
0000000000046da8	ldaxr	w8, [x20]
0000000000046dac	stlxr	w9, w24, [x20]
0000000000046db0	cbnz	w9, 0x46da8
0000000000046db4	cbnz	w24, 0x46dd8
0000000000046db8	cmp	w8, #0x1
0000000000046dbc	b.ne	0x46dd8
0000000000046dc0	adr	x8, #0x3fc83
0000000000046dc4	nop
0000000000046dc8	ldarb	w8, [x8]
0000000000046dcc	tbz	w8, #0x0, 0x46dd8
0000000000046dd0	mov	x0, x20
0000000000046dd4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046dd8	ldr	x0, [x22, #0x8b8]
0000000000046ddc	ldr	x1, [x23, #0x758]
0000000000046de0	bl	0x51b78 ; Objc message: -[x0 objectForKey:]
0000000000046de4	cmp	x21, x0
0000000000046de8	b.eq	0x46e18
0000000000046dec	cbz	x21, 0x46e18
0000000000046df0	nop
0000000000046df4	ldr	x1, #0x3fea4
0000000000046df8	mov	x0, x21
0000000000046dfc	mov	x2, x19
0000000000046e00	ldp	x29, x30, [sp, #0x40]
0000000000046e04	ldp	x20, x19, [sp, #0x30]
0000000000046e08	ldp	x22, x21, [sp, #0x20]
0000000000046e0c	ldp	x24, x23, [sp, #0x10]
0000000000046e10	ldp	x26, x25, [sp], #0x50
0000000000046e14	b	0x51b78 ; Objc message: -[x0 objectForKey:]
0000000000046e18	str	xzr, [x19]
0000000000046e1c	mov	x0, #0x0
0000000000046e20	ldp	x29, x30, [sp, #0x40]
0000000000046e24	ldp	x20, x19, [sp, #0x30]
0000000000046e28	ldp	x22, x21, [sp, #0x20]
0000000000046e2c	ldp	x24, x23, [sp, #0x10]
0000000000046e30	ldp	x26, x25, [sp], #0x50
0000000000046e34	ret
0000000000046e38	mov	x19, x0
0000000000046e3c	cbz	x25, 0x46e70
0000000000046e40	ldaxr	w8, [x20]
0000000000046e44	stlxr	w9, w24, [x20]
0000000000046e48	cbnz	w9, 0x46e40
0000000000046e4c	cbnz	w24, 0x46e70
0000000000046e50	cmp	w8, #0x1
0000000000046e54	b.ne	0x46e70
0000000000046e58	adr	x8, #0x3fbeb
0000000000046e5c	nop
0000000000046e60	ldarb	w8, [x8]
0000000000046e64	tbz	w8, #0x0, 0x46e70
0000000000046e68	mov	x0, x20
0000000000046e6c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046e70	mov	x0, x19
0000000000046e74	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification:
0000000000046e78	sub	sp, sp, #0x80
0000000000046e7c	stp	x28, x27, [sp, #0x20]
0000000000046e80	stp	x26, x25, [sp, #0x30]
0000000000046e84	stp	x24, x23, [sp, #0x40]
0000000000046e88	stp	x22, x21, [sp, #0x50]
0000000000046e8c	stp	x20, x19, [sp, #0x60]
0000000000046e90	stp	x29, x30, [sp, #0x70]
0000000000046e94	add	x29, sp, #0x70
0000000000046e98	mov	x20, x2
0000000000046e9c	ldar	x8, [x0]
0000000000046ea0	and	x8, x8, #0xfffffffffffffffc
0000000000046ea4	ldr	x9, [x8]
0000000000046ea8	cmp	x8, #0x0
0000000000046eac	ccmp	x9, x8, #0x4, ne
0000000000046eb0	b.ne	0x46ed0
0000000000046eb4	mov	x22, #0x0
0000000000046eb8	adrp	x24, 36 ; 0x6a000
0000000000046ebc	adrp	x25, 36 ; 0x6a000
0000000000046ec0	cbz	x1, 0x46ee4
0000000000046ec4	mov	x0, x1
0000000000046ec8	bl	_Kotlin_ObjCExport_refToObjC
0000000000046ecc	b	0x46ef0
0000000000046ed0	add	x8, x8, #0x10
0000000000046ed4	ldar	x22, [x8]
0000000000046ed8	adrp	x24, 36 ; 0x6a000
0000000000046edc	adrp	x25, 36 ; 0x6a000
0000000000046ee0	cbnz	x1, 0x46ec4
0000000000046ee4	ldr	x0, [x24, #0x8b8]
0000000000046ee8	ldr	x1, [x25, #0x758]
0000000000046eec	bl	0x51b78 ; Objc message: -[x0 objectForKey:]
0000000000046ef0	mov	x2, x0
0000000000046ef4	adrp	x19, 38 ; 0x6c000
0000000000046ef8	add	x19, x19, #0xbb0
0000000000046efc	ldr	x23, [x19]
0000000000046f00	mov	x0, x19
0000000000046f04	blr	x23
0000000000046f08	ldr	x27, [x0]
0000000000046f0c	add	x21, x27, #0x138
0000000000046f10	mov	w8, #0x1
0000000000046f14	ldaxr	w26, [x21]
0000000000046f18	stlxr	w9, w8, [x21]
0000000000046f1c	cbnz	w9, 0x46f14
0000000000046f20	nop
0000000000046f24	ldr	x1, #0x2385c ; Objc selector ref: objectForKey:
0000000000046f28	mov	x0, x22
0000000000046f2c	bl	0x51b78 ; Objc message: -[x0 objectForKey:]
0000000000046f30	mov	x22, x0
0000000000046f34	cbz	x27, 0x46f68
0000000000046f38	ldaxr	w8, [x21]
0000000000046f3c	stlxr	w9, w26, [x21]
0000000000046f40	cbnz	w9, 0x46f38
0000000000046f44	cbnz	w26, 0x46f68
0000000000046f48	cmp	w8, #0x1
0000000000046f4c	b.ne	0x46f68
0000000000046f50	adr	x8, #0x3faf3
0000000000046f54	nop
0000000000046f58	ldarb	w8, [x8]
0000000000046f5c	tbz	w8, #0x0, 0x46f68
0000000000046f60	mov	x0, x21
0000000000046f64	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046f68	cbz	x22, 0x46fd8
0000000000046f6c	ldr	x0, [x24, #0x8b8]
0000000000046f70	ldr	x1, [x25, #0x758]
0000000000046f74	bl	0x51b78 ; Objc message: -[x0 objectForKey:]
0000000000046f78	cmp	x22, x0
0000000000046f7c	b.eq	0x46fb0
0000000000046f80	nop
0000000000046f84	ldr	x1, #0x3fd14
0000000000046f88	mov	x0, x22
0000000000046f8c	mov	x2, x20
0000000000046f90	ldp	x29, x30, [sp, #0x70]
0000000000046f94	ldp	x20, x19, [sp, #0x60]
0000000000046f98	ldp	x22, x21, [sp, #0x50]
0000000000046f9c	ldp	x24, x23, [sp, #0x40]
0000000000046fa0	ldp	x26, x25, [sp, #0x30]
0000000000046fa4	ldp	x28, x27, [sp, #0x20]
0000000000046fa8	add	sp, sp, #0x80
0000000000046fac	b	0x51b78 ; Objc message: -[x0 objectForKey:]
0000000000046fb0	str	xzr, [x20]
0000000000046fb4	mov	x0, #0x0
0000000000046fb8	ldp	x29, x30, [sp, #0x70]
0000000000046fbc	ldp	x20, x19, [sp, #0x60]
0000000000046fc0	ldp	x22, x21, [sp, #0x50]
0000000000046fc4	ldp	x24, x23, [sp, #0x40]
0000000000046fc8	ldp	x26, x25, [sp, #0x30]
0000000000046fcc	ldp	x28, x27, [sp, #0x20]
0000000000046fd0	add	sp, sp, #0x80
0000000000046fd4	ret
0000000000046fd8	movi.16b	v0, #0x0
0000000000046fdc	stp	q0, q0, [sp]
0000000000046fe0	mov	x0, x19
0000000000046fe4	blr	x23
0000000000046fe8	ldr	x8, [x0]
0000000000046fec	ldr	x9, [x8, #0x110]
0000000000046ff0	mov	x10, sp
0000000000046ff4	str	x10, [x8, #0x110]
0000000000046ff8	mov	x8, #0x400000000
0000000000046ffc	stp	x9, x8, [sp, #0x8]
0000000000047000	adr	x21, #0x3fa43
0000000000047004	nop
0000000000047008	ldarb	w8, [x21]
000000000004700c	tbz	w8, #0x0, 0x47014
0000000000047010	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000047014	mov	x0, x19
0000000000047018	blr	x23
000000000004701c	ldr	x8, [x0]
0000000000047020	ldr	x8, [x8, #0x118]
0000000000047024	add	x0, x8, #0x70
0000000000047028	mov	w1, #0x38
000000000004702c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000047030	mov	x20, x0
0000000000047034	adr	x8, #0x11e2c
0000000000047038	nop
000000000004703c	str	x8, [x20, #0x10]!
0000000000047040	stur	xzr, [x20, #-0x8]
0000000000047044	str	x20, [sp, #0x18]
0000000000047048	adr	x1, #0x1e8a8
000000000004704c	nop
0000000000047050	mov	x0, x20
0000000000047054	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000047058	ldarb	w8, [x21]
000000000004705c	tbz	w8, #0x0, 0x47064
0000000000047060	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000047064	mov	x0, x20
0000000000047068	bl	_ThrowException
000000000004706c	brk	#0x1
0000000000047070	mov	x20, x0
0000000000047074	mov	x0, x19
0000000000047078	blr	x23
000000000004707c	ldr	x8, [x0]
0000000000047080	ldr	x9, [sp, #0x8]
0000000000047084	str	x9, [x8, #0x110]
0000000000047088	mov	x0, x20
000000000004708c	bl	0x517a0 ; symbol stub for: __Unwind_Resume
0000000000047090	mov	x20, x0
0000000000047094	cbnz	x27, 0x470a0
0000000000047098	mov	x0, x20
000000000004709c	bl	0x517a0 ; symbol stub for: __Unwind_Resume
00000000000470a0	ldaxr	w8, [x21]
00000000000470a4	stlxr	w9, w26, [x21]
00000000000470a8	cbnz	w9, 0x470a0
00000000000470ac	cbnz	w26, 0x47098
00000000000470b0	cmp	w8, #0x1
00000000000470b4	b.ne	0x47098
00000000000470b8	adr	x8, #0x3f98b
00000000000470bc	nop
00000000000470c0	ldarb	w8, [x8]
00000000000470c4	tbz	w8, #0x0, 0x47098
00000000000470c8	mov	x0, x21
00000000000470cc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000470d0	mov	x0, x20
00000000000470d4	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_containsEntry:
00000000000470d8	stp	x24, x23, [sp, #-0x40]!
00000000000470dc	stp	x22, x21, [sp, #0x10]
00000000000470e0	stp	x20, x19, [sp, #0x20]
00000000000470e4	stp	x29, x30, [sp, #0x30]
00000000000470e8	add	x29, sp, #0x30
00000000000470ec	mov	x19, x1
00000000000470f0	ldar	x8, [x0]
00000000000470f4	and	x8, x8, #0xfffffffffffffffc
00000000000470f8	ldr	x9, [x8]
00000000000470fc	cmp	x8, #0x0
0000000000047100	ccmp	x9, x8, #0x4, ne
0000000000047104	b.ne	0x4712c
0000000000047108	mov	x20, #0x0
000000000004710c	cbz	x2, 0x47138
0000000000047110	mov	x0, x2
0000000000047114	bl	_Kotlin_ObjCExport_refToObjC
0000000000047118	mov	x21, x0
000000000004711c	cbz	x19, 0x47154
0000000000047120	mov	x0, x19
0000000000047124	bl	_Kotlin_ObjCExport_refToObjC
0000000000047128	b	0x47168
000000000004712c	add	x8, x8, #0x10
0000000000047130	ldar	x20, [x8]
0000000000047134	cbnz	x2, 0x47110
0000000000047138	nop
000000000004713c	ldr	x0, #0x2377c ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000047140	nop
0000000000047144	ldr	x1, #0x23614 ; Objc selector ref: null
0000000000047148	bl	0x51b78 ; Objc message: +[NSNull null]
000000000004714c	mov	x21, x0
0000000000047150	cbnz	x19, 0x47120
0000000000047154	nop
0000000000047158	ldr	x0, #0x23760 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004715c	nop
0000000000047160	ldr	x1, #0x235f8 ; Objc selector ref: null
0000000000047164	bl	0x51b78 ; Objc message: +[NSNull null]
0000000000047168	mov	x2, x0
000000000004716c	adrp	x0, 37 ; 0x6c000
0000000000047170	add	x0, x0, #0xbb0
0000000000047174	ldr	x8, [x0]
0000000000047178	blr	x8
000000000004717c	ldr	x23, [x0]
0000000000047180	add	x19, x23, #0x138
0000000000047184	mov	w8, #0x1
0000000000047188	ldaxr	w22, [x19]
000000000004718c	stlxr	w9, w8, [x19]
0000000000047190	cbnz	w9, 0x47188
0000000000047194	nop
0000000000047198	ldr	x1, #0x235e8 ; Objc selector ref: objectForKey:
000000000004719c	mov	x0, x20
00000000000471a0	bl	0x51b78 ; Objc message: -[x0 objectForKey:]
00000000000471a4	mov	x2, x0
00000000000471a8	nop
00000000000471ac	ldr	x1, #0x2355c ; Objc selector ref: isEqual:
00000000000471b0	mov	x0, x21
00000000000471b4	bl	0x51b78 ; Objc message: -[x0 isEqual:]
00000000000471b8	mov	x20, x0
00000000000471bc	cbz	x23, 0x471f0
00000000000471c0	ldaxr	w8, [x19]
00000000000471c4	stlxr	w9, w22, [x19]
00000000000471c8	cbnz	w9, 0x471c0
00000000000471cc	cbnz	w22, 0x471f0
00000000000471d0	cmp	w8, #0x1
00000000000471d4	b.ne	0x471f0
00000000000471d8	adr	x8, #0x3f86b
00000000000471dc	nop
00000000000471e0	ldarb	w8, [x8]
00000000000471e4	tbz	w8, #0x0, 0x471f0
00000000000471e8	mov	x0, x19
00000000000471ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000471f0	mov	x0, x20
00000000000471f4	ldp	x29, x30, [sp, #0x30]
00000000000471f8	ldp	x20, x19, [sp, #0x20]
00000000000471fc	ldp	x22, x21, [sp, #0x10]
0000000000047200	ldp	x24, x23, [sp], #0x40
0000000000047204	ret
0000000000047208	mov	x20, x0
000000000004720c	cbz	x23, 0x47240
0000000000047210	ldaxr	w8, [x19]
0000000000047214	stlxr	w9, w22, [x19]
0000000000047218	cbnz	w9, 0x47210
000000000004721c	cbnz	w22, 0x47240
0000000000047220	cmp	w8, #0x1
0000000000047224	b.ne	0x47240
0000000000047228	adr	x8, #0x3f81b
000000000004722c	nop
0000000000047230	ldarb	w8, [x8]
0000000000047234	tbz	w8, #0x0, 0x47240
0000000000047238	mov	x0, x19
000000000004723c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047240	mov	x0, x20
0000000000047244	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_ObjCExport_trapOnUndeclaredException:
0000000000047248	stp	x20, x19, [sp, #-0x20]!
000000000004724c	stp	x29, x30, [sp, #0x10]
0000000000047250	add	x29, sp, #0x10
0000000000047254	mov	x19, x0
0000000000047258	bl	__ZL14printlnMessagePKc
000000000004725c	mov	x0, x19
0000000000047260	bl	__ZN6kotlin25ProcessUnhandledExceptionEP9ObjHeader
0000000000047264	mov	x0, x19
0000000000047268	bl	__ZN6kotlin31TerminateWithUnhandledExceptionEP9ObjHeader
__ZL14printlnMessagePKc:
000000000004726c	sub	sp, sp, #0x20
0000000000047270	stp	x29, x30, [sp, #0x10]
0000000000047274	add	x29, sp, #0x10
0000000000047278	adr	x8, #0xf93a ; literal pool for: "Function doesn't have or inherit @Throws annotation and thus exception isn't propagated from Kotlin to Objective-C/Swift as NSError.\nIt is considered unexpected and unhandled instead. Program will be terminated."
000000000004727c	nop
0000000000047280	str	x8, [sp]
0000000000047284	adr	x0, #0xfa02 ; literal pool for: "%s\n"
0000000000047288	nop
000000000004728c	bl	__ZN5konan13consolePrintfEPKcz
0000000000047290	ldp	x29, x30, [sp, #0x10]
0000000000047294	add	sp, sp, #0x20
0000000000047298	ret
_Kotlin_Interop_CreateKStringFromNSString:
000000000004729c	stp	x22, x21, [sp, #-0x30]!
00000000000472a0	stp	x20, x19, [sp, #0x10]
00000000000472a4	stp	x29, x30, [sp, #0x20]
00000000000472a8	add	x29, sp, #0x20
00000000000472ac	mov	x19, x1
00000000000472b0	cbz	x0, 0x4736c
00000000000472b4	mov	x1, x0
00000000000472b8	mov	x0, #0x0
00000000000472bc	bl	0x51758 ; symbol stub for: _CFStringCreateCopy
00000000000472c0	mov	x20, x0
00000000000472c4	bl	0x51770 ; symbol stub for: _CFStringGetLength
00000000000472c8	mov	x22, x0
00000000000472cc	tbnz	w22, #0x1f, 0x47388
00000000000472d0	adrp	x0, 37 ; 0x6c000
00000000000472d4	add	x0, x0, #0xbb0
00000000000472d8	ldr	x8, [x0]
00000000000472dc	blr	x8
00000000000472e0	ldr	x8, [x0]
00000000000472e4	ldr	x8, [x8, #0x118]
00000000000472e8	ubfiz	x9, x22, #1, #32
00000000000472ec	add	x9, x9, #0x1f
00000000000472f0	and	x1, x9, #0x3fffffff8
00000000000472f4	add	x0, x8, #0x70
00000000000472f8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000472fc	mov	x21, x0
0000000000047300	adr	x8, #0x123e0
0000000000047304	nop
0000000000047308	stp	x8, xzr, [x21, #0x10]!
000000000004730c	stur	xzr, [x21, #-0x8]
0000000000047310	str	w22, [x21, #0x8]
0000000000047314	str	x21, [x19]
0000000000047318	add	x3, x21, #0x10
000000000004731c	mov	x0, x20
0000000000047320	mov	x1, #0x0
0000000000047324	mov	x2, x22
0000000000047328	bl	0x51764 ; symbol stub for: _CFStringGetCharacters
000000000004732c	ldar	x8, [x21]
0000000000047330	and	x8, x8, #0xfffffffffffffffc
0000000000047334	ldr	x9, [x8]
0000000000047338	cmp	x9, x8
000000000004733c	csel	x0, xzr, x8, eq
0000000000047340	cbnz	x0, 0x4734c
0000000000047344	mov	x0, x21
0000000000047348	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004734c	add	x8, x0, #0x10
0000000000047350	stlr	x20, [x8]
0000000000047354	str	x21, [x19]
0000000000047358	mov	x0, x21
000000000004735c	ldp	x29, x30, [sp, #0x20]
0000000000047360	ldp	x20, x19, [sp, #0x10]
0000000000047364	ldp	x22, x21, [sp], #0x30
0000000000047368	ret
000000000004736c	mov	x21, #0x0
0000000000047370	str	x21, [x19]
0000000000047374	mov	x0, x21
0000000000047378	ldp	x29, x30, [sp, #0x20]
000000000004737c	ldp	x20, x19, [sp, #0x10]
0000000000047380	ldp	x22, x21, [sp], #0x30
0000000000047384	ret
0000000000047388	bl	_ThrowIllegalArgumentException
_Kotlin_io_Console_print:
000000000004738c	sub	sp, sp, #0x60
0000000000047390	stp	x24, x23, [sp, #0x20]
0000000000047394	stp	x22, x21, [sp, #0x30]
0000000000047398	stp	x20, x19, [sp, #0x40]
000000000004739c	stp	x29, x30, [sp, #0x50]
00000000000473a0	add	x29, sp, #0x50
00000000000473a4	mov	x19, x0
00000000000473a8	ldr	x8, [x0]
00000000000473ac	and	x8, x8, #0xfffffffffffffffc
00000000000473b0	ldr	x8, [x8]
00000000000473b4	adr	x9, #0x1232c
00000000000473b8	nop
00000000000473bc	cmp	x8, x9
00000000000473c0	b.ne	0x47568
00000000000473c4	stp	xzr, xzr, [sp, #0x8]
00000000000473c8	str	xzr, [sp, #0x18]
00000000000473cc	ldr	w8, [x19, #0x8]
00000000000473d0	cmp	w8, #0x17
00000000000473d4	b.lo	0x47400
00000000000473d8	add	x8, x8, #0x10
00000000000473dc	and	x20, x8, #0x1fffffff0
00000000000473e0	mov	x0, x20
00000000000473e4	mov	w1, #0x1
00000000000473e8	bl	0x519e0 ; symbol stub for: _calloc
00000000000473ec	ldrb	w8, [sp, #0x8]
00000000000473f0	strb	w8, [x0]
00000000000473f4	orr	x8, x20, #0x8000000000000000
00000000000473f8	stp	xzr, x8, [sp, #0x10]
00000000000473fc	str	x0, [sp, #0x8]
0000000000047400	ldr	w8, [x19, #0x8]
0000000000047404	lsl	x8, x8, #1
0000000000047408	cbz	x8, 0x474a4
000000000004740c	add	x24, x19, #0x10
0000000000047410	add	x19, x24, x8
0000000000047414	mov	w20, #0xd800
0000000000047418	mov	w21, #0x2400
000000000004741c	movk	w21, #0xfca0, lsl #16
0000000000047420	mov	w22, #0xdc00
0000000000047424	mov	w23, #0xfffd
0000000000047428	b	0x47448
000000000004742c	cmp	w10, w22
0000000000047430	csel	w0, w23, w9, eq
0000000000047434	mov	x24, x8
0000000000047438	add	x1, sp, #0x8
000000000004743c	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
0000000000047440	cmp	x24, x19
0000000000047444	b.eq	0x474a4
0000000000047448	mov	x8, x24
000000000004744c	ldrh	w9, [x8], #0x2
0000000000047450	and	w10, w9, #0xfc00
0000000000047454	cmp	w10, w20
0000000000047458	b.ne	0x4742c
000000000004745c	cmp	x8, x19
0000000000047460	b.eq	0x47498
0000000000047464	ldrh	w10, [x24, #0x2]
0000000000047468	and	w11, w10, #0xfc00
000000000004746c	add	w9, w10, w9, lsl #10
0000000000047470	add	w9, w9, w21
0000000000047474	add	x10, x24, #0x4
0000000000047478	cmp	w11, w22
000000000004747c	csel	w0, w9, w23, eq
0000000000047480	csel	x24, x10, x8, eq
0000000000047484	add	x1, sp, #0x8
0000000000047488	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
000000000004748c	cmp	x24, x19
0000000000047490	b.ne	0x47448
0000000000047494	b	0x474a4
0000000000047498	add	x1, sp, #0x8
000000000004749c	mov	w0, #0xfffd
00000000000474a0	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
00000000000474a4	adrp	x0, 37 ; 0x6c000
00000000000474a8	add	x0, x0, #0xbb0
00000000000474ac	ldr	x8, [x0]
00000000000474b0	blr	x8
00000000000474b4	ldr	x22, [x0]
00000000000474b8	add	x19, x22, #0x138
00000000000474bc	mov	w8, #0x1
00000000000474c0	ldaxr	w21, [x19]
00000000000474c4	stlxr	w9, w8, [x19]
00000000000474c8	cbnz	w9, 0x474c0
00000000000474cc	ldrb	w8, [sp, #0x1f]
00000000000474d0	sxtb	w9, w8
00000000000474d4	ldp	x10, x11, [sp, #0x8]
00000000000474d8	cmp	w9, #0x0
00000000000474dc	add	x9, sp, #0x8
00000000000474e0	csel	x1, x10, x9, lt
00000000000474e4	csel	x8, x11, x8, lt
00000000000474e8	and	x2, x8, #0xffffffff
00000000000474ec	mov	w0, #0x1
00000000000474f0	bl	0x51da0 ; symbol stub for: _write
00000000000474f4	cbz	x22, 0x47528
00000000000474f8	ldaxr	w8, [x19]
00000000000474fc	stlxr	w9, w21, [x19]
0000000000047500	cbnz	w9, 0x474f8
0000000000047504	cbnz	w21, 0x47528
0000000000047508	cmp	w8, #0x1
000000000004750c	b.ne	0x47528
0000000000047510	adr	x8, #0x3f533
0000000000047514	nop
0000000000047518	ldarb	w8, [x8]
000000000004751c	tbz	w8, #0x0, 0x47528
0000000000047520	mov	x0, x19
0000000000047524	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047528	ldrsb	w8, [sp, #0x1f]
000000000004752c	tbnz	w8, #0x1f, 0x47548
0000000000047530	ldp	x29, x30, [sp, #0x50]
0000000000047534	ldp	x20, x19, [sp, #0x40]
0000000000047538	ldp	x22, x21, [sp, #0x30]
000000000004753c	ldp	x24, x23, [sp, #0x20]
0000000000047540	add	sp, sp, #0x60
0000000000047544	ret
0000000000047548	ldr	x0, [sp, #0x8]
000000000004754c	bl	0x51a64 ; symbol stub for: _free
0000000000047550	ldp	x29, x30, [sp, #0x50]
0000000000047554	ldp	x20, x19, [sp, #0x40]
0000000000047558	ldp	x22, x21, [sp, #0x30]
000000000004755c	ldp	x24, x23, [sp, #0x20]
0000000000047560	add	sp, sp, #0x60
0000000000047564	ret
0000000000047568	adr	x1, #0x12178
000000000004756c	nop
0000000000047570	mov	x0, x19
0000000000047574	bl	_ThrowClassCastException
0000000000047578	mov	x20, x0
000000000004757c	cbz	x22, 0x475b0
0000000000047580	ldaxr	w8, [x19]
0000000000047584	stlxr	w9, w21, [x19]
0000000000047588	cbnz	w9, 0x47580
000000000004758c	cbnz	w21, 0x475b0
0000000000047590	cmp	w8, #0x1
0000000000047594	b.ne	0x475b0
0000000000047598	adr	x8, #0x3f4ab
000000000004759c	nop
00000000000475a0	ldarb	w8, [x8]
00000000000475a4	tbz	w8, #0x0, 0x475b0
00000000000475a8	mov	x0, x19
00000000000475ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000475b0	ldrsb	w8, [sp, #0x1f]
00000000000475b4	tbz	w8, #0x1f, 0x475c0
00000000000475b8	ldr	x0, [sp, #0x8]
00000000000475bc	bl	0x51a64 ; symbol stub for: _free
00000000000475c0	mov	x0, x20
00000000000475c4	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_:
00000000000475c8	stp	x26, x25, [sp, #-0x50]!
00000000000475cc	stp	x24, x23, [sp, #0x10]
00000000000475d0	stp	x22, x21, [sp, #0x20]
00000000000475d4	stp	x20, x19, [sp, #0x30]
00000000000475d8	stp	x29, x30, [sp, #0x40]
00000000000475dc	add	x29, sp, #0x40
00000000000475e0	mov	x19, x1
00000000000475e4	mov	x20, x0
00000000000475e8	cmp	w0, #0x7f
00000000000475ec	b.hi	0x47610
00000000000475f0	ldrsb	w8, [x19, #0x17]
00000000000475f4	tbnz	w8, #0x1f, 0x4769c
00000000000475f8	and	w9, w8, #0xff
00000000000475fc	cmp	w9, #0x16
0000000000047600	b.ne	0x4772c
0000000000047604	mov	w21, #0x16
0000000000047608	mov	x22, x19
000000000004760c	b	0x476c4
0000000000047610	cmp	w20, #0x7ff
0000000000047614	b.hi	0x4766c
0000000000047618	lsr	w8, w20, #6
000000000004761c	orr	w25, w8, #0xffffffc0
0000000000047620	ldrsb	w8, [x19, #0x17]
0000000000047624	tbz	w8, #0x1f, 0x47974
0000000000047628	ldr	x8, [x19, #0x10]
000000000004762c	and	x8, x8, #0x7fffffffffffffff
0000000000047630	sub	x21, x8, #0x1
0000000000047634	ldp	x22, x8, [x19]
0000000000047638	cmp	x8, x21
000000000004763c	b.ne	0x47768
0000000000047640	mov	x8, #-0x19
0000000000047644	movk	x8, #0x7fff, lsl #48
0000000000047648	cmp	x21, x8
000000000004764c	b.lo	0x47988
0000000000047650	mov	x23, #-0x11
0000000000047654	mov	x0, x23
0000000000047658	mov	w1, #0x1
000000000004765c	bl	0x519e0 ; symbol stub for: _calloc
0000000000047660	mov	x24, x0
0000000000047664	cbnz	x21, 0x479c0
0000000000047668	b	0x479d8
000000000004766c	lsr	w8, w20, #16
0000000000047670	cbnz	w8, 0x47740
0000000000047674	lsr	w8, w20, #12
0000000000047678	orr	w25, w8, #0xffffffe0
000000000004767c	ldrsb	w8, [x19, #0x17]
0000000000047680	tbnz	w8, #0x1f, 0x478b8
0000000000047684	and	w9, w8, #0xff
0000000000047688	cmp	w9, #0x16
000000000004768c	b.ne	0x478a4
0000000000047690	mov	w21, #0x16
0000000000047694	mov	x22, x19
0000000000047698	b	0x478e0
000000000004769c	ldr	x8, [x19, #0x10]
00000000000476a0	and	x8, x8, #0x7fffffffffffffff
00000000000476a4	sub	x21, x8, #0x1
00000000000476a8	ldp	x22, x8, [x19]
00000000000476ac	cmp	x8, x21
00000000000476b0	b.ne	0x47774
00000000000476b4	mov	x8, #-0x19
00000000000476b8	movk	x8, #0x7fff, lsl #48
00000000000476bc	cmp	x21, x8
00000000000476c0	b.hs	0x47790
00000000000476c4	add	x8, x21, #0x1
00000000000476c8	lsl	x9, x21, #1
00000000000476cc	cmp	x8, x9
00000000000476d0	csinc	x8, x9, x21, lo
00000000000476d4	add	x9, x8, #0x10
00000000000476d8	and	x9, x9, #0xfffffffffffffff0
00000000000476dc	cmp	x8, #0x17
00000000000476e0	mov	w8, #0x17
00000000000476e4	csel	x23, x8, x9, lo
00000000000476e8	mov	x0, x23
00000000000476ec	mov	w1, #0x1
00000000000476f0	bl	0x519e0 ; symbol stub for: _calloc
00000000000476f4	mov	x24, x0
00000000000476f8	cbz	x21, 0x47714
00000000000476fc	mov	x0, x24
0000000000047700	mov	x1, x22
0000000000047704	mov	x2, x21
0000000000047708	bl	0x51aac ; symbol stub for: _memcpy
000000000004770c	cmp	x21, #0x16
0000000000047710	b.eq	0x4771c
0000000000047714	mov	x0, x22
0000000000047718	bl	0x51a64 ; symbol stub for: _free
000000000004771c	str	x24, [x19]
0000000000047720	orr	x8, x23, #0x8000000000000000
0000000000047724	str	x8, [x19, #0x10]
0000000000047728	b	0x4777c
000000000004772c	and	x21, x8, #0xff
0000000000047730	add	w8, w9, #0x1
0000000000047734	strb	w8, [x19, #0x17]
0000000000047738	mov	x24, x19
000000000004773c	b	0x47784
0000000000047740	lsr	w8, w20, #18
0000000000047744	orr	w25, w8, #0xfffffff0
0000000000047748	ldrsb	w8, [x19, #0x17]
000000000004774c	tbnz	w8, #0x1f, 0x477ac
0000000000047750	and	w9, w8, #0xff
0000000000047754	cmp	w9, #0x16
0000000000047758	b.ne	0x47828
000000000004775c	mov	w21, #0x16
0000000000047760	mov	x22, x19
0000000000047764	b	0x477d4
0000000000047768	mov	x21, x8
000000000004776c	mov	x24, x22
0000000000047770	b	0x479ec
0000000000047774	mov	x21, x8
0000000000047778	mov	x24, x22
000000000004777c	add	x8, x21, #0x1
0000000000047780	str	x8, [x19, #0x8]
0000000000047784	add	x8, x24, x21
0000000000047788	strb	w20, [x8]
000000000004778c	b	0x47b14
0000000000047790	mov	x23, #-0x11
0000000000047794	mov	x0, x23
0000000000047798	mov	w1, #0x1
000000000004779c	bl	0x519e0 ; symbol stub for: _calloc
00000000000477a0	mov	x24, x0
00000000000477a4	cbnz	x21, 0x476fc
00000000000477a8	b	0x47714
00000000000477ac	ldr	x8, [x19, #0x10]
00000000000477b0	and	x8, x8, #0x7fffffffffffffff
00000000000477b4	sub	x21, x8, #0x1
00000000000477b8	ldp	x22, x8, [x19]
00000000000477bc	cmp	x8, x21
00000000000477c0	b.ne	0x4783c
00000000000477c4	mov	x8, #-0x19
00000000000477c8	movk	x8, #0x7fff, lsl #48
00000000000477cc	cmp	x21, x8
00000000000477d0	b.hs	0x47848
00000000000477d4	add	x8, x21, #0x1
00000000000477d8	lsl	x9, x21, #1
00000000000477dc	cmp	x8, x9
00000000000477e0	csinc	x8, x9, x21, lo
00000000000477e4	add	x9, x8, #0x10
00000000000477e8	and	x9, x9, #0xfffffffffffffff0
00000000000477ec	cmp	x8, #0x17
00000000000477f0	mov	w8, #0x17
00000000000477f4	csel	x23, x8, x9, lo
00000000000477f8	mov	x0, x23
00000000000477fc	mov	w1, #0x1
0000000000047800	bl	0x519e0 ; symbol stub for: _calloc
0000000000047804	mov	x24, x0
0000000000047808	cbz	x21, 0x47860
000000000004780c	mov	x0, x24
0000000000047810	mov	x1, x22
0000000000047814	mov	x2, x21
0000000000047818	bl	0x51aac ; symbol stub for: _memcpy
000000000004781c	cmp	x21, #0x16
0000000000047820	b.ne	0x47860
0000000000047824	b	0x47868
0000000000047828	and	x21, x8, #0xff
000000000004782c	add	w8, w9, #0x1
0000000000047830	strb	w8, [x19, #0x17]
0000000000047834	mov	x24, x19
0000000000047838	b	0x4787c
000000000004783c	mov	x21, x8
0000000000047840	mov	x24, x22
0000000000047844	b	0x47874
0000000000047848	mov	x23, #-0x11
000000000004784c	mov	x0, x23
0000000000047850	mov	w1, #0x1
0000000000047854	bl	0x519e0 ; symbol stub for: _calloc
0000000000047858	mov	x24, x0
000000000004785c	cbnz	x21, 0x4780c
0000000000047860	mov	x0, x22
0000000000047864	bl	0x51a64 ; symbol stub for: _free
0000000000047868	str	x24, [x19]
000000000004786c	orr	x8, x23, #0x8000000000000000
0000000000047870	str	x8, [x19, #0x10]
0000000000047874	add	x8, x21, #0x1
0000000000047878	str	x8, [x19, #0x8]
000000000004787c	add	x8, x24, x21
0000000000047880	strb	w25, [x8]
0000000000047884	strb	wzr, [x8, #0x1]
0000000000047888	mov	w25, #-0x80
000000000004788c	bfxil	w25, w20, #12, #6
0000000000047890	ldrsb	w8, [x19, #0x17]
0000000000047894	tbnz	w8, #0x1f, 0x478b8
0000000000047898	and	w9, w8, #0xff
000000000004789c	cmp	w9, #0x16
00000000000478a0	b.eq	0x47690
00000000000478a4	and	x21, x8, #0xff
00000000000478a8	add	w8, w9, #0x1
00000000000478ac	strb	w8, [x19, #0x17]
00000000000478b0	mov	x24, x19
00000000000478b4	b	0x47958
00000000000478b8	ldr	x8, [x19, #0x10]
00000000000478bc	and	x8, x8, #0x7fffffffffffffff
00000000000478c0	sub	x21, x8, #0x1
00000000000478c4	ldp	x22, x8, [x19]
00000000000478c8	cmp	x8, x21
00000000000478cc	b.ne	0x47948
00000000000478d0	mov	x8, #-0x19
00000000000478d4	movk	x8, #0x7fff, lsl #48
00000000000478d8	cmp	x21, x8
00000000000478dc	b.hs	0x47b34
00000000000478e0	add	x8, x21, #0x1
00000000000478e4	lsl	x9, x21, #1
00000000000478e8	cmp	x8, x9
00000000000478ec	csinc	x8, x9, x21, lo
00000000000478f0	add	x9, x8, #0x10
00000000000478f4	and	x9, x9, #0xfffffffffffffff0
00000000000478f8	cmp	x8, #0x17
00000000000478fc	mov	w8, #0x17
0000000000047900	csel	x23, x8, x9, lo
0000000000047904	mov	x0, x23
0000000000047908	mov	w1, #0x1
000000000004790c	bl	0x519e0 ; symbol stub for: _calloc
0000000000047910	mov	x24, x0
0000000000047914	cbz	x21, 0x47930
0000000000047918	mov	x0, x24
000000000004791c	mov	x1, x22
0000000000047920	mov	x2, x21
0000000000047924	bl	0x51aac ; symbol stub for: _memcpy
0000000000047928	cmp	x21, #0x16
000000000004792c	b.eq	0x47938
0000000000047930	mov	x0, x22
0000000000047934	bl	0x51a64 ; symbol stub for: _free
0000000000047938	str	x24, [x19]
000000000004793c	orr	x8, x23, #0x8000000000000000
0000000000047940	str	x8, [x19, #0x10]
0000000000047944	b	0x47950
0000000000047948	mov	x21, x8
000000000004794c	mov	x24, x22
0000000000047950	add	x8, x21, #0x1
0000000000047954	str	x8, [x19, #0x8]
0000000000047958	add	x8, x24, x21
000000000004795c	strb	w25, [x8]
0000000000047960	strb	wzr, [x8, #0x1]
0000000000047964	mov	w25, #-0x80
0000000000047968	bfxil	w25, w20, #6, #6
000000000004796c	ldrsb	w8, [x19, #0x17]
0000000000047970	tbnz	w8, #0x1f, 0x47628
0000000000047974	and	w9, w8, #0xff
0000000000047978	cmp	w9, #0x16
000000000004797c	b.ne	0x479f8
0000000000047980	mov	w21, #0x16
0000000000047984	mov	x22, x19
0000000000047988	add	x8, x21, #0x1
000000000004798c	lsl	x9, x21, #1
0000000000047990	cmp	x8, x9
0000000000047994	csinc	x8, x9, x21, lo
0000000000047998	add	x9, x8, #0x10
000000000004799c	and	x9, x9, #0xfffffffffffffff0
00000000000479a0	cmp	x8, #0x17
00000000000479a4	mov	w8, #0x17
00000000000479a8	csel	x23, x8, x9, lo
00000000000479ac	mov	x0, x23
00000000000479b0	mov	w1, #0x1
00000000000479b4	bl	0x519e0 ; symbol stub for: _calloc
00000000000479b8	mov	x24, x0
00000000000479bc	cbz	x21, 0x479d8
00000000000479c0	mov	x0, x24
00000000000479c4	mov	x1, x22
00000000000479c8	mov	x2, x21
00000000000479cc	bl	0x51aac ; symbol stub for: _memcpy
00000000000479d0	cmp	x21, #0x16
00000000000479d4	b.eq	0x479e0
00000000000479d8	mov	x0, x22
00000000000479dc	bl	0x51a64 ; symbol stub for: _free
00000000000479e0	str	x24, [x19]
00000000000479e4	orr	x8, x23, #0x8000000000000000
00000000000479e8	str	x8, [x19, #0x10]
00000000000479ec	add	x8, x21, #0x1
00000000000479f0	str	x8, [x19, #0x8]
00000000000479f4	b	0x47a08
00000000000479f8	and	x21, x8, #0xff
00000000000479fc	add	w8, w9, #0x1
0000000000047a00	strb	w8, [x19, #0x17]
0000000000047a04	mov	x24, x19
0000000000047a08	add	x8, x24, x21
0000000000047a0c	strb	w25, [x8]
0000000000047a10	strb	wzr, [x8, #0x1]
0000000000047a14	mov	w24, #-0x80
0000000000047a18	bfxil	w24, w20, #0, #6
0000000000047a1c	ldrsb	w8, [x19, #0x17]
0000000000047a20	tbnz	w8, #0x1f, 0x47a3c
0000000000047a24	and	w9, w8, #0xff
0000000000047a28	cmp	w9, #0x16
0000000000047a2c	b.ne	0x47aa0
0000000000047a30	mov	w20, #0x16
0000000000047a34	mov	x21, x19
0000000000047a38	b	0x47a64
0000000000047a3c	ldr	x8, [x19, #0x10]
0000000000047a40	and	x8, x8, #0x7fffffffffffffff
0000000000047a44	sub	x20, x8, #0x1
0000000000047a48	ldp	x21, x8, [x19]
0000000000047a4c	cmp	x8, x20
0000000000047a50	b.ne	0x47ab4
0000000000047a54	mov	x8, #-0x19
0000000000047a58	movk	x8, #0x7fff, lsl #48
0000000000047a5c	cmp	x20, x8
0000000000047a60	b.hs	0x47ac0
0000000000047a64	add	x8, x20, #0x1
0000000000047a68	lsl	x9, x20, #1
0000000000047a6c	cmp	x8, x9
0000000000047a70	csinc	x8, x9, x20, lo
0000000000047a74	add	x9, x8, #0x10
0000000000047a78	and	x9, x9, #0xfffffffffffffff0
0000000000047a7c	cmp	x8, #0x17
0000000000047a80	mov	w8, #0x17
0000000000047a84	csel	x22, x8, x9, lo
0000000000047a88	mov	x0, x22
0000000000047a8c	mov	w1, #0x1
0000000000047a90	bl	0x519e0 ; symbol stub for: _calloc
0000000000047a94	mov	x23, x0
0000000000047a98	cbnz	x20, 0x47ad8
0000000000047a9c	b	0x47af0
0000000000047aa0	and	x20, x8, #0xff
0000000000047aa4	add	w8, w9, #0x1
0000000000047aa8	strb	w8, [x19, #0x17]
0000000000047aac	mov	x23, x19
0000000000047ab0	b	0x47b0c
0000000000047ab4	mov	x20, x8
0000000000047ab8	mov	x23, x21
0000000000047abc	b	0x47b04
0000000000047ac0	mov	x22, #-0x11
0000000000047ac4	mov	x0, x22
0000000000047ac8	mov	w1, #0x1
0000000000047acc	bl	0x519e0 ; symbol stub for: _calloc
0000000000047ad0	mov	x23, x0
0000000000047ad4	cbz	x20, 0x47af0
0000000000047ad8	mov	x0, x23
0000000000047adc	mov	x1, x21
0000000000047ae0	mov	x2, x20
0000000000047ae4	bl	0x51aac ; symbol stub for: _memcpy
0000000000047ae8	cmp	x20, #0x16
0000000000047aec	b.eq	0x47af8
0000000000047af0	mov	x0, x21
0000000000047af4	bl	0x51a64 ; symbol stub for: _free
0000000000047af8	str	x23, [x19]
0000000000047afc	orr	x8, x22, #0x8000000000000000
0000000000047b00	str	x8, [x19, #0x10]
0000000000047b04	add	x8, x20, #0x1
0000000000047b08	str	x8, [x19, #0x8]
0000000000047b0c	add	x8, x23, x20
0000000000047b10	strb	w24, [x8]
0000000000047b14	strb	wzr, [x8, #0x1]
0000000000047b18	mov	x0, x19
0000000000047b1c	ldp	x29, x30, [sp, #0x40]
0000000000047b20	ldp	x20, x19, [sp, #0x30]
0000000000047b24	ldp	x22, x21, [sp, #0x20]
0000000000047b28	ldp	x24, x23, [sp, #0x10]
0000000000047b2c	ldp	x26, x25, [sp], #0x50
0000000000047b30	ret
0000000000047b34	mov	x23, #-0x11
0000000000047b38	mov	x0, x23
0000000000047b3c	mov	w1, #0x1
0000000000047b40	bl	0x519e0 ; symbol stub for: _calloc
0000000000047b44	mov	x24, x0
0000000000047b48	cbnz	x21, 0x47918
0000000000047b4c	b	0x47930
_Kotlin_io_Console_println:
0000000000047b50	stp	x22, x21, [sp, #-0x30]!
0000000000047b54	stp	x20, x19, [sp, #0x10]
0000000000047b58	stp	x29, x30, [sp, #0x20]
0000000000047b5c	add	x29, sp, #0x20
0000000000047b60	bl	_Kotlin_io_Console_print
0000000000047b64	adrp	x0, 37 ; 0x6c000
0000000000047b68	add	x0, x0, #0xbb0
0000000000047b6c	ldr	x8, [x0]
0000000000047b70	blr	x8
0000000000047b74	ldr	x20, [x0]
0000000000047b78	add	x19, x20, #0x138
0000000000047b7c	mov	w8, #0x1
0000000000047b80	ldaxr	w21, [x19]
0000000000047b84	stlxr	w9, w8, [x19]
0000000000047b88	cbnz	w9, 0x47b80
0000000000047b8c	adr	x1, #0xf0fe ; literal pool for: "\n"
0000000000047b90	nop
0000000000047b94	mov	w0, #0x1
0000000000047b98	mov	w2, #0x1
0000000000047b9c	bl	0x51da0 ; symbol stub for: _write
0000000000047ba0	cbz	x20, 0x47bcc
0000000000047ba4	ldaxr	w8, [x19]
0000000000047ba8	stlxr	w9, w21, [x19]
0000000000047bac	cbnz	w9, 0x47ba4
0000000000047bb0	cbnz	w21, 0x47bcc
0000000000047bb4	cmp	w8, #0x1
0000000000047bb8	b.ne	0x47bcc
0000000000047bbc	adr	x8, #0x3ee87
0000000000047bc0	nop
0000000000047bc4	ldarb	w8, [x8]
0000000000047bc8	tbnz	w8, #0x0, 0x47bdc
0000000000047bcc	ldp	x29, x30, [sp, #0x20]
0000000000047bd0	ldp	x20, x19, [sp, #0x10]
0000000000047bd4	ldp	x22, x21, [sp], #0x30
0000000000047bd8	ret
0000000000047bdc	mov	x0, x19
0000000000047be0	ldp	x29, x30, [sp, #0x20]
0000000000047be4	ldp	x20, x19, [sp, #0x10]
0000000000047be8	ldp	x22, x21, [sp], #0x30
0000000000047bec	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047bf0	mov	x8, x20
0000000000047bf4	mov	x20, x0
0000000000047bf8	cbz	x8, 0x47c2c
0000000000047bfc	ldaxr	w8, [x19]
0000000000047c00	stlxr	w9, w21, [x19]
0000000000047c04	cbnz	w9, 0x47bfc
0000000000047c08	cbnz	w21, 0x47c2c
0000000000047c0c	cmp	w8, #0x1
0000000000047c10	b.ne	0x47c2c
0000000000047c14	adr	x8, #0x3ee2f
0000000000047c18	nop
0000000000047c1c	ldarb	w8, [x8]
0000000000047c20	tbz	w8, #0x0, 0x47c2c
0000000000047c24	mov	x0, x19
0000000000047c28	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047c2c	mov	x0, x20
0000000000047c30	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_CreateStringFromCString:
0000000000047c34	sub	sp, sp, #0x60
0000000000047c38	stp	x26, x25, [sp, #0x10]
0000000000047c3c	stp	x24, x23, [sp, #0x20]
0000000000047c40	stp	x22, x21, [sp, #0x30]
0000000000047c44	stp	x20, x19, [sp, #0x40]
0000000000047c48	stp	x29, x30, [sp, #0x50]
0000000000047c4c	add	x29, sp, #0x50
0000000000047c50	mov	x19, x1
0000000000047c54	cbz	x0, 0x47d20
0000000000047c58	mov	x21, x0
0000000000047c5c	bl	0x51d34 ; symbol stub for: _strlen
0000000000047c60	mov	x22, x0
0000000000047c64	add	x20, x21, x0
0000000000047c68	str	x21, [sp]
0000000000047c6c	cmp	x0, #0x0
0000000000047c70	b.le	0x47d28
0000000000047c74	mov	w24, #0x0
0000000000047c78	mov	w23, #0x1
0000000000047c7c	mov	w25, #0x34
0000000000047c80	mov	w26, #0xa
0000000000047c84	b	0x47ca4
0000000000047c88	ldr	x8, [sp]
0000000000047c8c	add	x8, x8, #0x1
0000000000047c90	str	x8, [sp]
0000000000047c94	mov	w9, #0x1
0000000000047c98	add	w24, w9, w24
0000000000047c9c	cmp	x8, x20
0000000000047ca0	b.hs	0x47d18
0000000000047ca4	str	wzr, [sp, #0xc]
0000000000047ca8	mov	x0, sp
0000000000047cac	add	x2, sp, #0xc
0000000000047cb0	mov	x1, x20
0000000000047cb4	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
0000000000047cb8	lsl	w8, w23, w0
0000000000047cbc	tst	w8, w25
0000000000047cc0	b.ne	0x47c88
0000000000047cc4	tst	w8, w26
0000000000047cc8	b.eq	0x47cfc
0000000000047ccc	ldr	x8, [sp]
0000000000047cd0	add	x9, x8, #0x1
0000000000047cd4	mov	x8, x9
0000000000047cd8	str	x9, [sp]
0000000000047cdc	cmp	x9, x20
0000000000047ce0	b.hs	0x47c94
0000000000047ce4	mov	x9, x8
0000000000047ce8	ldrb	w10, [x9], #0x1
0000000000047cec	and	w10, w10, #0xc0
0000000000047cf0	cmp	w10, #0x80
0000000000047cf4	b.eq	0x47cd4
0000000000047cf8	b	0x47c94
0000000000047cfc	ldrh	w9, [sp, #0xe]
0000000000047d00	ldr	x8, [sp]
0000000000047d04	cmp	w9, #0x0
0000000000047d08	cinc	w9, w23, ne
0000000000047d0c	add	w24, w9, w24
0000000000047d10	cmp	x8, x20
0000000000047d14	b.lo	0x47ca4
0000000000047d18	tbz	w24, #0x1f, 0x47d2c
0000000000047d1c	bl	_ThrowIllegalArgumentException
0000000000047d20	mov	x23, #0x0
0000000000047d24	b	0x47e44
0000000000047d28	mov	w24, #0x0
0000000000047d2c	adrp	x0, 37 ; 0x6c000
0000000000047d30	add	x0, x0, #0xbb0
0000000000047d34	ldr	x8, [x0]
0000000000047d38	blr	x8
0000000000047d3c	ldr	x8, [x0]
0000000000047d40	ldr	x8, [x8, #0x118]
0000000000047d44	mov	w9, w24
0000000000047d48	lsl	x9, x9, #1
0000000000047d4c	add	x9, x9, #0x1f
0000000000047d50	and	x1, x9, #0x3fffffff8
0000000000047d54	add	x0, x8, #0x70
0000000000047d58	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000047d5c	adr	x8, #0x11984
0000000000047d60	nop
0000000000047d64	mov	x23, x0
0000000000047d68	str	x8, [x23, #0x10]!
0000000000047d6c	str	xzr, [x0, #0x18]
0000000000047d70	str	xzr, [x0, #0x8]
0000000000047d74	str	w24, [x0, #0x18]
0000000000047d78	str	x23, [x19]
0000000000047d7c	str	x21, [sp]
0000000000047d80	cbz	x22, 0x47e44
0000000000047d84	add	x21, x0, #0x20
0000000000047d88	mov	w22, #0x1
0000000000047d8c	mov	w24, #0x34
0000000000047d90	mov	w25, #0xa
0000000000047d94	mov	w26, #-0x2840
0000000000047d98	b	0x47dc0
0000000000047d9c	add	w9, w26, w8, lsr #10
0000000000047da0	strh	w9, [x21]
0000000000047da4	mov	w9, #0xdc00
0000000000047da8	bfxil	w9, w8, #0, #10
0000000000047dac	strh	w9, [x21, #0x2]
0000000000047db0	add	x21, x21, #0x4
0000000000047db4	ldr	x8, [sp]
0000000000047db8	cmp	x8, x20
0000000000047dbc	b.eq	0x47e44
0000000000047dc0	str	wzr, [sp, #0xc]
0000000000047dc4	mov	x0, sp
0000000000047dc8	add	x2, sp, #0xc
0000000000047dcc	mov	x1, x20
0000000000047dd0	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
0000000000047dd4	lsl	w8, w22, w0
0000000000047dd8	tst	w8, w24
0000000000047ddc	b.eq	0x47df0
0000000000047de0	ldr	x8, [sp]
0000000000047de4	add	x8, x8, #0x1
0000000000047de8	str	x8, [sp]
0000000000047dec	b	0x47e1c
0000000000047df0	tst	w8, w25
0000000000047df4	b.eq	0x47e34
0000000000047df8	ldr	x8, [sp]
0000000000047dfc	add	x8, x8, #0x1
0000000000047e00	str	x8, [sp]
0000000000047e04	cmp	x8, x20
0000000000047e08	b.hs	0x47e1c
0000000000047e0c	ldrb	w9, [x8], #0x1
0000000000047e10	and	w9, w9, #0xc0
0000000000047e14	cmp	w9, #0x80
0000000000047e18	b.eq	0x47e00
0000000000047e1c	mov	w8, #0xfffd
0000000000047e20	strh	w8, [x21], #0x2
0000000000047e24	ldr	x8, [sp]
0000000000047e28	cmp	x8, x20
0000000000047e2c	b.ne	0x47dc0
0000000000047e30	b	0x47e44
0000000000047e34	ldr	w8, [sp, #0xc]
0000000000047e38	cmp	w8, #0x10, lsl #12
0000000000047e3c	b.lo	0x47e20
0000000000047e40	b	0x47d9c
0000000000047e44	str	x23, [x19]
0000000000047e48	mov	x0, x23
0000000000047e4c	ldp	x29, x30, [sp, #0x50]
0000000000047e50	ldp	x20, x19, [sp, #0x40]
0000000000047e54	ldp	x22, x21, [sp, #0x30]
0000000000047e58	ldp	x24, x23, [sp, #0x20]
0000000000047e5c	ldp	x26, x25, [sp, #0x10]
0000000000047e60	add	sp, sp, #0x60
0000000000047e64	ret
__ZN27BackRefFromAssociatedObject10releaseRefEv:
0000000000047e68	stp	x24, x23, [sp, #-0x40]!
0000000000047e6c	stp	x22, x21, [sp, #0x10]
0000000000047e70	stp	x20, x19, [sp, #0x20]
0000000000047e74	stp	x29, x30, [sp, #0x30]
0000000000047e78	add	x29, sp, #0x30
0000000000047e7c	ldr	x19, [x0, #0x8]
0000000000047e80	add	x8, x0, #0x10
0000000000047e84	ldaxr	w9, [x8]
0000000000047e88	subs	w9, w9, #0x1
0000000000047e8c	stlxr	w10, w9, [x8]
0000000000047e90	cbnz	w10, 0x47e84
0000000000047e94	b.ne	0x47f2c
0000000000047e98	ldr	x8, [x0]
0000000000047e9c	cbz	x8, 0x47f2c
0000000000047ea0	bl	_Kotlin_initRuntimeIfNeeded
0000000000047ea4	adrp	x21, 37 ; 0x6c000
0000000000047ea8	add	x21, x21, #0xbb0
0000000000047eac	ldr	x23, [x21]
0000000000047eb0	mov	x0, x21
0000000000047eb4	blr	x23
0000000000047eb8	ldr	x8, [x0]
0000000000047ebc	add	x20, x8, #0x138
0000000000047ec0	ldaxr	w22, [x20]
0000000000047ec4	stlxr	w8, wzr, [x20]
0000000000047ec8	cbnz	w8, 0x47ec0
0000000000047ecc	cmp	w22, #0x1
0000000000047ed0	b.ne	0x47eec
0000000000047ed4	adr	x8, #0x3eb6f
0000000000047ed8	nop
0000000000047edc	ldarb	w8, [x8]
0000000000047ee0	tbz	w8, #0x0, 0x47eec
0000000000047ee4	mov	x0, x20
0000000000047ee8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047eec	mov	x0, x21
0000000000047ef0	blr	x23
0000000000047ef4	ldr	x8, [x0]
0000000000047ef8	add	x0, x8, #0x8
0000000000047efc	mov	x1, x19
0000000000047f00	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000047f04	ldaxr	w8, [x20]
0000000000047f08	stlxr	w9, w22, [x20]
0000000000047f0c	cbnz	w9, 0x47f04
0000000000047f10	cbnz	w22, 0x47f2c
0000000000047f14	cmp	w8, #0x1
0000000000047f18	b.ne	0x47f2c
0000000000047f1c	adr	x8, #0x3eb27
0000000000047f20	nop
0000000000047f24	ldarb	w8, [x8]
0000000000047f28	tbnz	w8, #0x0, 0x47f40
0000000000047f2c	ldp	x29, x30, [sp, #0x30]
0000000000047f30	ldp	x20, x19, [sp, #0x20]
0000000000047f34	ldp	x22, x21, [sp, #0x10]
0000000000047f38	ldp	x24, x23, [sp], #0x40
0000000000047f3c	ret
0000000000047f40	mov	x0, x20
0000000000047f44	ldp	x29, x30, [sp, #0x30]
0000000000047f48	ldp	x20, x19, [sp, #0x20]
0000000000047f4c	ldp	x22, x21, [sp, #0x10]
0000000000047f50	ldp	x24, x23, [sp], #0x40
0000000000047f54	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
_addHighPrecision:
0000000000047f58	cbz	w1, 0x47fd0
0000000000047f5c	cbz	w3, 0x47fd0
0000000000047f60	mov	x9, #0x0
0000000000047f64	cmp	w1, w3
0000000000047f68	csel	w8, w1, w3, lt
0000000000047f6c	cmp	w8, #0x1
0000000000047f70	csinc	w8, w8, wzr, gt
0000000000047f74	mov	x10, x0
0000000000047f78	mov	x11, x8
0000000000047f7c	ldr	x12, [x10]
0000000000047f80	ldr	x13, [x2]
0000000000047f84	add	x12, x12, x9
0000000000047f88	add	x12, x12, x13
0000000000047f8c	str	x12, [x10], #0x8
0000000000047f90	ldr	x13, [x2], #0x8
0000000000047f94	cmp	x13, x12
0000000000047f98	csinc	x9, x9, xzr, eq
0000000000047f9c	csel	x9, xzr, x9, lo
0000000000047fa0	subs	x11, x11, #0x1
0000000000047fa4	b.ne	0x47f7c
0000000000047fa8	cmp	x9, #0x0
0000000000047fac	ccmp	w8, w1, #0x4, ne
0000000000047fb0	b.eq	0x47fd0
0000000000047fb4	lsl	x9, x8, #3
0000000000047fb8	ldr	x10, [x0, x9]
0000000000047fbc	adds	x10, x10, #0x1
0000000000047fc0	str	x10, [x0, x9]
0000000000047fc4	add	x8, x8, #0x1
0000000000047fc8	ccmp	w8, w1, #0x0, hs
0000000000047fcc	b.lt	0x47fb4
0000000000047fd0	ret
_subtractHighPrecision:
0000000000047fd4	cmp	w1, #0x1
0000000000047fd8	b.lt	0x4803c
0000000000047fdc	mov	w8, w1
0000000000047fe0	cmp	w1, #0x4
0000000000047fe4	b.hs	0x47ff0
0000000000047fe8	mov	x9, #0x0
0000000000047fec	b	0x48020
0000000000047ff0	and	x9, x8, #0xfffffffc
0000000000047ff4	add	x10, x0, #0x10
0000000000047ff8	mov	x11, x9
0000000000047ffc	ldp	q0, q1, [x10, #-0x10]
0000000000048000	mvn.16b	v0, v0
0000000000048004	mvn.16b	v1, v1
0000000000048008	stp	q0, q1, [x10, #-0x10]
000000000004800c	add	x10, x10, #0x20
0000000000048010	subs	x11, x11, #0x4
0000000000048014	b.ne	0x47ffc
0000000000048018	cmp	x9, x8
000000000004801c	b.eq	0x4803c
0000000000048020	sub	x8, x8, x9
0000000000048024	add	x9, x0, x9, lsl #3
0000000000048028	ldr	x10, [x9]
000000000004802c	mvn	x10, x10
0000000000048030	str	x10, [x9], #0x8
0000000000048034	subs	x8, x8, #0x1
0000000000048038	b.ne	0x48028
000000000004803c	ldr	x8, [x0]
0000000000048040	add	x8, x8, #0x1
0000000000048044	str	x8, [x0]
0000000000048048	cmp	w1, #0x1
000000000004804c	b.eq	0x48084
0000000000048050	cbnz	x8, 0x48084
0000000000048054	cmp	w1, #0x2
0000000000048058	mov	w8, #0x2
000000000004805c	csel	w8, w1, w8, gt
0000000000048060	sub	x8, x8, #0x2
0000000000048064	add	x9, x0, #0x8
0000000000048068	ldr	x10, [x9]
000000000004806c	add	x10, x10, #0x1
0000000000048070	str	x10, [x9], #0x8
0000000000048074	cmp	x10, #0x0
0000000000048078	ccmp	x8, #0x0, #0x4, eq
000000000004807c	sub	x8, x8, #0x1
0000000000048080	b.ne	0x48068
0000000000048084	mov	w9, w3
0000000000048088	and	w8, w3, w3, asr #31
000000000004808c	cmp	w9, #0x1
0000000000048090	b.lt	0x480a8
0000000000048094	sub	w10, w9, #0x1
0000000000048098	ldr	x10, [x2, w10, uxtw #3]
000000000004809c	sub	x9, x9, #0x1
00000000000480a0	cbz	x10, 0x4808c
00000000000480a4	add	w8, w9, #0x1
00000000000480a8	cbz	w1, 0x48120
00000000000480ac	cbz	w8, 0x48120
00000000000480b0	mov	x9, #0x0
00000000000480b4	cmp	w8, w1
00000000000480b8	csel	w8, w1, w8, gt
00000000000480bc	cmp	w8, #0x1
00000000000480c0	csinc	w8, w8, wzr, gt
00000000000480c4	mov	x10, x0
00000000000480c8	mov	x11, x8
00000000000480cc	ldr	x12, [x10]
00000000000480d0	ldr	x13, [x2]
00000000000480d4	add	x12, x12, x9
00000000000480d8	add	x12, x12, x13
00000000000480dc	str	x12, [x10], #0x8
00000000000480e0	ldr	x13, [x2], #0x8
00000000000480e4	cmp	x13, x12
00000000000480e8	csinc	x9, x9, xzr, eq
00000000000480ec	csel	x9, xzr, x9, lo
00000000000480f0	subs	x11, x11, #0x1
00000000000480f4	b.ne	0x480cc
00000000000480f8	cmp	w8, w1
00000000000480fc	b.eq	0x48120
0000000000048100	cbz	x9, 0x48120
0000000000048104	lsl	x9, x8, #3
0000000000048108	ldr	x10, [x0, x9]
000000000004810c	adds	x10, x10, #0x1
0000000000048110	str	x10, [x0, x9]
0000000000048114	add	x8, x8, #0x1
0000000000048118	ccmp	w8, w1, #0x0, hs
000000000004811c	b.lt	0x48104
0000000000048120	cmp	w1, #0x1
0000000000048124	b.lt	0x48188
0000000000048128	mov	w8, w1
000000000004812c	cmp	w1, #0x4
0000000000048130	b.hs	0x4813c
0000000000048134	mov	x9, #0x0
0000000000048138	b	0x4816c
000000000004813c	and	x9, x8, #0xfffffffc
0000000000048140	add	x10, x0, #0x10
0000000000048144	mov	x11, x9
0000000000048148	ldp	q0, q1, [x10, #-0x10]
000000000004814c	mvn.16b	v0, v0
0000000000048150	mvn.16b	v1, v1
0000000000048154	stp	q0, q1, [x10, #-0x10]
0000000000048158	add	x10, x10, #0x20
000000000004815c	subs	x11, x11, #0x4
0000000000048160	b.ne	0x48148
0000000000048164	cmp	x9, x8
0000000000048168	b.eq	0x48188
000000000004816c	sub	x8, x8, x9
0000000000048170	add	x9, x0, x9, lsl #3
0000000000048174	ldr	x10, [x9]
0000000000048178	mvn	x10, x10
000000000004817c	str	x10, [x9], #0x8
0000000000048180	subs	x8, x8, #0x1
0000000000048184	b.ne	0x48174
0000000000048188	ldr	x8, [x0]
000000000004818c	add	x8, x8, #0x1
0000000000048190	str	x8, [x0]
0000000000048194	cmp	w1, #0x1
0000000000048198	b.eq	0x481d0
000000000004819c	cbnz	x8, 0x481d0
00000000000481a0	cmp	w1, #0x2
00000000000481a4	mov	w8, #0x2
00000000000481a8	csel	w8, w1, w8, gt
00000000000481ac	sub	x8, x8, #0x2
00000000000481b0	add	x9, x0, #0x8
00000000000481b4	ldr	x10, [x9]
00000000000481b8	add	x10, x10, #0x1
00000000000481bc	str	x10, [x9], #0x8
00000000000481c0	cmp	x10, #0x0
00000000000481c4	ccmp	x8, #0x0, #0x4, eq
00000000000481c8	sub	x8, x8, #0x1
00000000000481cc	b.ne	0x481b4
00000000000481d0	ret
_simpleShiftLeftHighPrecision:
00000000000481d4	stp	x22, x21, [sp, #-0x30]!
00000000000481d8	stp	x20, x19, [sp, #0x10]
00000000000481dc	stp	x29, x30, [sp, #0x20]
00000000000481e0	add	x29, sp, #0x20
00000000000481e4	mov	x21, x2
00000000000481e8	mov	x20, x1
00000000000481ec	mov	x19, x0
00000000000481f0	cmp	w2, #0x40
00000000000481f4	b.lt	0x48260
00000000000481f8	lsr	w11, w21, #6
00000000000481fc	sub	w8, w20, #0x1
0000000000048200	subs	w9, w8, w11
0000000000048204	b.mi	0x48240
0000000000048208	sxtw	x10, w20
000000000004820c	sub	x12, x10, #0x1
0000000000048210	neg	w10, w11
0000000000048214	sub	x11, x12, w11, uxtw
0000000000048218	add	x12, x19, x12, lsl #3
000000000004821c	mov	x13, x8
0000000000048220	ldr	x8, [x19, w9, uxtw #3]
0000000000048224	str	x8, [x12], #-0x8
0000000000048228	sub	w8, w13, #0x1
000000000004822c	add	w9, w10, w13
0000000000048230	sub	w9, w9, #0x1
0000000000048234	mov	x13, x8
0000000000048238	subs	x11, x11, #0x1
000000000004823c	b.pl	0x48220
0000000000048240	sxtw	x9, w8
0000000000048244	bic	w8, w8, w8, asr #31
0000000000048248	sub	x9, x9, x8
000000000004824c	add	x0, x19, x9, lsl #3
0000000000048250	lsl	x8, x8, #3
0000000000048254	add	x1, x8, #0x8
0000000000048258	bl	0x519d4 ; symbol stub for: _bzero
000000000004825c	and	w21, w21, #0x3f
0000000000048260	cbz	w21, 0x482c4
0000000000048264	mov	w8, w21
0000000000048268	cmp	w20, #0x2
000000000004826c	b.lt	0x482b8
0000000000048270	mov	w9, #0x40
0000000000048274	sub	w9, w9, w21
0000000000048278	mov	w12, w20
000000000004827c	mov	w10, #-0x2
0000000000048280	add	x10, x10, w20, sxtw
0000000000048284	add	x11, x19, w20, sxtw #3
0000000000048288	sub	x11, x11, #0x8
000000000004828c	add	x12, x12, #0x1
0000000000048290	ldr	x13, [x11]
0000000000048294	lsl	x13, x13, x8
0000000000048298	ldr	x14, [x19, w10, uxtw #3]
000000000004829c	lsr	x14, x14, x9
00000000000482a0	orr	x13, x14, x13
00000000000482a4	str	x13, [x11], #-0x8
00000000000482a8	sub	x10, x10, #0x1
00000000000482ac	sub	x12, x12, #0x1
00000000000482b0	cmp	x12, #0x2
00000000000482b4	b.gt	0x48290
00000000000482b8	ldr	x9, [x19]
00000000000482bc	lsl	x8, x9, x8
00000000000482c0	str	x8, [x19]
00000000000482c4	ldp	x29, x30, [sp, #0x20]
00000000000482c8	ldp	x20, x19, [sp, #0x10]
00000000000482cc	ldp	x22, x21, [sp], #0x30
00000000000482d0	ret
_compareHighPrecision:
00000000000482d4	sxtw	x10, w1
00000000000482d8	and	w8, w1, w1, asr #31
00000000000482dc	sub	w9, w8, #0x1
00000000000482e0	sub	x12, x0, #0x8
00000000000482e4	subs	x11, x10, #0x1
00000000000482e8	b.lt	0x48308
00000000000482ec	ldr	x13, [x12, x10, lsl #3]
00000000000482f0	mov	x10, x11
00000000000482f4	cbz	x13, 0x482e4
00000000000482f8	mov	w10, #0x0
00000000000482fc	add	w8, w11, #0x1
0000000000048300	mov	x9, x11
0000000000048304	b	0x4830c
0000000000048308	mov	w10, #0x1
000000000004830c	sxtw	x12, w3
0000000000048310	add	w11, w3, #0x1
0000000000048314	sub	x14, x2, #0x8
0000000000048318	and	w13, w3, w3, asr #31
000000000004831c	subs	x15, x12, #0x1
0000000000048320	b.lt	0x48340
0000000000048324	ldr	x16, [x14, x12, lsl #3]
0000000000048328	sub	w11, w11, #0x1
000000000004832c	mov	x12, x15
0000000000048330	cbz	x16, 0x4831c
0000000000048334	cmp	w8, w11
0000000000048338	b.le	0x48354
000000000004833c	b	0x4834c
0000000000048340	mov	x11, x13
0000000000048344	cmp	w8, w11
0000000000048348	b.le	0x48354
000000000004834c	mov	w0, #0x1
0000000000048350	ret
0000000000048354	cset	w8, lt
0000000000048358	orr	w10, w8, w10
000000000004835c	csetm	w8, lt
0000000000048360	tbnz	w10, #0x0, 0x48394
0000000000048364	sxtw	x8, w9
0000000000048368	lsl	x9, x8, #3
000000000004836c	ldr	x10, [x0, x9]
0000000000048370	ldr	x9, [x2, x9]
0000000000048374	cmp	x10, x9
0000000000048378	b.hi	0x4834c
000000000004837c	b.lo	0x4839c
0000000000048380	sub	x9, x8, #0x1
0000000000048384	cmp	x8, #0x0
0000000000048388	mov	x8, x9
000000000004838c	b.gt	0x48368
0000000000048390	mov	w8, #0x0
0000000000048394	mov	x0, x8
0000000000048398	ret
000000000004839c	mov	w0, #-0x1
00000000000483a0	ret
_timesTenToTheEHighPrecision:
00000000000483a4	cbz	w2, 0x48764
00000000000483a8	cmp	w2, #0x13
00000000000483ac	b.lt	0x48484
00000000000483b0	mov	w8, #0x2304
00000000000483b4	movk	w8, #0x8ac7, lsl #16
00000000000483b8	add	x9, x0, #0x4
00000000000483bc	mov	w10, #-0x76180000
00000000000483c0	b	0x483d4
00000000000483c4	sub	w11, w2, #0x13
00000000000483c8	cmp	w2, #0x25
00000000000483cc	mov	x2, x11
00000000000483d0	b.le	0x48488
00000000000483d4	mov	x12, #0x0
00000000000483d8	mov	w14, #0x0
00000000000483dc	mov	w11, #0x0
00000000000483e0	mov	w15, #0x0
00000000000483e4	mov	x13, x9
00000000000483e8	b	0x483fc
00000000000483ec	add	w11, w11, #0x1
00000000000483f0	add	x13, x13, #0x8
00000000000483f4	cmp	w11, w1
00000000000483f8	b.ge	0x4846c
00000000000483fc	ldur	x17, [x13, #-0x4]
0000000000048400	mov	w16, w14
0000000000048404	bfi	x16, x15, #32, #32
0000000000048408	orr	x3, x16, x17
000000000004840c	cbz	x3, 0x483ec
0000000000048410	and	x14, x17, #0xffffffff
0000000000048414	mul	x15, x14, x10
0000000000048418	adds	x15, x15, x16
000000000004841c	cset	w17, hs
0000000000048420	cmp	x15, x16
0000000000048424	cset	w16, lo
0000000000048428	orr	w16, w17, w16
000000000004842c	ldr	w17, [x13]
0000000000048430	mul	x3, x17, x10
0000000000048434	mul	x14, x14, x8
0000000000048438	add	x12, x14, x12
000000000004843c	add	x12, x12, x15, lsr #32
0000000000048440	adds	x3, x12, x3
0000000000048444	cset	w12, hs
0000000000048448	cmp	x3, x14
000000000004844c	cset	w14, lo
0000000000048450	orr	w12, w12, w14
0000000000048454	stp	w15, w3, [x13, #-0x4]
0000000000048458	mul	x14, x17, x8
000000000004845c	orr	x14, x14, x16
0000000000048460	add	x14, x14, x3, lsr #32
0000000000048464	lsr	x15, x14, #32
0000000000048468	b	0x483ec
000000000004846c	mov	w11, w14
0000000000048470	bfi	x11, x15, #32, #32
0000000000048474	cbz	x11, 0x483c4
0000000000048478	str	x11, [x0, w1, sxtw #3]
000000000004847c	add	w1, w1, #0x1
0000000000048480	b	0x483c4
0000000000048484	mov	x11, x2
0000000000048488	cmp	w11, #0x9
000000000004848c	b.lt	0x484f8
0000000000048490	mov	w8, #0xca00
0000000000048494	movk	w8, #0x3b9a, lsl #16
0000000000048498	add	x9, x0, #0x4
000000000004849c	b	0x484b0
00000000000484a0	sub	w10, w11, #0x9
00000000000484a4	cmp	w11, #0x11
00000000000484a8	mov	x11, x10
00000000000484ac	b.le	0x484fc
00000000000484b0	mov	x10, #0x0
00000000000484b4	cmp	w1, #0x1
00000000000484b8	csinc	w12, w1, wzr, gt
00000000000484bc	mov	x13, x9
00000000000484c0	ldur	w14, [x13, #-0x4]
00000000000484c4	madd	x10, x14, x8, x10
00000000000484c8	stur	w10, [x13, #-0x4]
00000000000484cc	ldr	w14, [x13]
00000000000484d0	mul	x14, x14, x8
00000000000484d4	add	x14, x14, x10, lsr #32
00000000000484d8	lsr	x10, x14, #32
00000000000484dc	str	w14, [x13], #0x8
00000000000484e0	subs	x12, x12, #0x1
00000000000484e4	b.ne	0x484c0
00000000000484e8	cbz	x10, 0x484a0
00000000000484ec	str	x10, [x0, w1, sxtw #3]
00000000000484f0	add	w1, w1, #0x1
00000000000484f4	b	0x484a0
00000000000484f8	mov	x10, x11
00000000000484fc	sub	w8, w10, #0x1
0000000000048500	cmp	w8, #0x7
0000000000048504	b.hi	0x48764
0000000000048508	adr	x9, #0xa0cc
000000000004850c	nop
0000000000048510	adr	x10, #0x10
0000000000048514	ldrb	w11, [x9, x8]
0000000000048518	add	x10, x10, x11, lsl #2
000000000004851c	br	x10
0000000000048520	mov	x8, #0x0
0000000000048524	cmp	w1, #0x1
0000000000048528	csinc	w9, w1, wzr, gt
000000000004852c	mov	w10, #0xa
0000000000048530	mov	x11, x0
0000000000048534	ldp	w12, w13, [x11]
0000000000048538	madd	x12, x12, x10, x8
000000000004853c	mul	x8, x13, x10
0000000000048540	add	x13, x8, x12, lsr #32
0000000000048544	lsr	x8, x13, #32
0000000000048548	stp	w12, w13, [x11], #0x8
000000000004854c	subs	x9, x9, #0x1
0000000000048550	b.ne	0x48534
0000000000048554	b	0x4875c
0000000000048558	mov	x8, #0x0
000000000004855c	cmp	w1, #0x1
0000000000048560	csinc	w9, w1, wzr, gt
0000000000048564	mov	w10, #0xa
0000000000048568	mov	x11, x0
000000000004856c	ldp	w12, w13, [x11]
0000000000048570	madd	x12, x12, x10, x8
0000000000048574	mul	x8, x13, x10
0000000000048578	add	x13, x8, x12, lsr #32
000000000004857c	lsr	x8, x13, #32
0000000000048580	stp	w12, w13, [x11], #0x8
0000000000048584	subs	x9, x9, #0x1
0000000000048588	b.ne	0x4856c
000000000004858c	cbz	x8, 0x48598
0000000000048590	str	x8, [x0, w1, sxtw #3]
0000000000048594	add	w1, w1, #0x1
0000000000048598	mov	x8, #0x0
000000000004859c	cmp	w1, #0x1
00000000000485a0	csinc	w9, w1, wzr, gt
00000000000485a4	mov	w10, #0xa
00000000000485a8	mov	x11, x0
00000000000485ac	ldp	w12, w13, [x11]
00000000000485b0	madd	x12, x12, x10, x8
00000000000485b4	mul	x8, x13, x10
00000000000485b8	add	x13, x8, x12, lsr #32
00000000000485bc	lsr	x8, x13, #32
00000000000485c0	stp	w12, w13, [x11], #0x8
00000000000485c4	subs	x9, x9, #0x1
00000000000485c8	b.ne	0x485ac
00000000000485cc	b	0x4875c
00000000000485d0	mov	x8, #0x0
00000000000485d4	cmp	w1, #0x1
00000000000485d8	csinc	w9, w1, wzr, gt
00000000000485dc	add	x10, x0, #0x4
00000000000485e0	mov	w11, #0x3e8
00000000000485e4	ldur	w12, [x10, #-0x4]
00000000000485e8	madd	x8, x12, x11, x8
00000000000485ec	stur	w8, [x10, #-0x4]
00000000000485f0	ldr	w12, [x10]
00000000000485f4	mul	x12, x12, x11
00000000000485f8	add	x12, x12, x8, lsr #32
00000000000485fc	lsr	x8, x12, #32
0000000000048600	str	w12, [x10], #0x8
0000000000048604	subs	x9, x9, #0x1
0000000000048608	b.ne	0x485e4
000000000004860c	b	0x4875c
0000000000048610	mov	x8, #0x0
0000000000048614	cmp	w1, #0x1
0000000000048618	csinc	w9, w1, wzr, gt
000000000004861c	add	x10, x0, #0x4
0000000000048620	mov	w11, #0x2710
0000000000048624	ldur	w12, [x10, #-0x4]
0000000000048628	madd	x8, x12, x11, x8
000000000004862c	stur	w8, [x10, #-0x4]
0000000000048630	ldr	w12, [x10]
0000000000048634	mul	x12, x12, x11
0000000000048638	add	x12, x12, x8, lsr #32
000000000004863c	lsr	x8, x12, #32
0000000000048640	str	w12, [x10], #0x8
0000000000048644	subs	x9, x9, #0x1
0000000000048648	b.ne	0x48624
000000000004864c	b	0x4875c
0000000000048650	mov	x8, #0x0
0000000000048654	mov	w9, #0x86a0
0000000000048658	movk	w9, #0x1, lsl #16
000000000004865c	cmp	w1, #0x1
0000000000048660	csinc	w10, w1, wzr, gt
0000000000048664	add	x11, x0, #0x4
0000000000048668	ldur	w12, [x11, #-0x4]
000000000004866c	madd	x8, x12, x9, x8
0000000000048670	stur	w8, [x11, #-0x4]
0000000000048674	ldr	w12, [x11]
0000000000048678	mul	x12, x12, x9
000000000004867c	add	x12, x12, x8, lsr #32
0000000000048680	lsr	x8, x12, #32
0000000000048684	str	w12, [x11], #0x8
0000000000048688	subs	x10, x10, #0x1
000000000004868c	b.ne	0x48668
0000000000048690	b	0x4875c
0000000000048694	mov	x8, #0x0
0000000000048698	mov	w9, #0x4240
000000000004869c	movk	w9, #0xf, lsl #16
00000000000486a0	cmp	w1, #0x1
00000000000486a4	csinc	w10, w1, wzr, gt
00000000000486a8	add	x11, x0, #0x4
00000000000486ac	ldur	w12, [x11, #-0x4]
00000000000486b0	madd	x8, x12, x9, x8
00000000000486b4	stur	w8, [x11, #-0x4]
00000000000486b8	ldr	w12, [x11]
00000000000486bc	mul	x12, x12, x9
00000000000486c0	add	x12, x12, x8, lsr #32
00000000000486c4	lsr	x8, x12, #32
00000000000486c8	str	w12, [x11], #0x8
00000000000486cc	subs	x10, x10, #0x1
00000000000486d0	b.ne	0x486ac
00000000000486d4	b	0x4875c
00000000000486d8	mov	x8, #0x0
00000000000486dc	mov	w9, #0x9680
00000000000486e0	movk	w9, #0x98, lsl #16
00000000000486e4	cmp	w1, #0x1
00000000000486e8	csinc	w10, w1, wzr, gt
00000000000486ec	add	x11, x0, #0x4
00000000000486f0	ldur	w12, [x11, #-0x4]
00000000000486f4	madd	x8, x12, x9, x8
00000000000486f8	stur	w8, [x11, #-0x4]
00000000000486fc	ldr	w12, [x11]
0000000000048700	mul	x12, x12, x9
0000000000048704	add	x12, x12, x8, lsr #32
0000000000048708	lsr	x8, x12, #32
000000000004870c	str	w12, [x11], #0x8
0000000000048710	subs	x10, x10, #0x1
0000000000048714	b.ne	0x486f0
0000000000048718	b	0x4875c
000000000004871c	mov	x8, #0x0
0000000000048720	mov	w9, #0xe100
0000000000048724	movk	w9, #0x5f5, lsl #16
0000000000048728	cmp	w1, #0x1
000000000004872c	csinc	w10, w1, wzr, gt
0000000000048730	add	x11, x0, #0x4
0000000000048734	ldur	w12, [x11, #-0x4]
0000000000048738	madd	x8, x12, x9, x8
000000000004873c	stur	w8, [x11, #-0x4]
0000000000048740	ldr	w12, [x11]
0000000000048744	mul	x12, x12, x9
0000000000048748	add	x12, x12, x8, lsr #32
000000000004874c	lsr	x8, x12, #32
0000000000048750	str	w12, [x11], #0x8
0000000000048754	subs	x10, x10, #0x1
0000000000048758	b.ne	0x48734
000000000004875c	cbz	x8, 0x48764
0000000000048760	str	x8, [x0, w1, sxtw #3]
0000000000048764	ret
_Kotlin_Any_equals:
0000000000048768	cmp	x0, x1
000000000004876c	cset	w0, eq
0000000000048770	ret
_Kotlin_getCurrentStackTrace:
0000000000048774	sub	sp, sp, #0x80
0000000000048778	stp	x28, x27, [sp, #0x20]
000000000004877c	stp	x26, x25, [sp, #0x30]
0000000000048780	stp	x24, x23, [sp, #0x40]
0000000000048784	stp	x22, x21, [sp, #0x50]
0000000000048788	stp	x20, x19, [sp, #0x60]
000000000004878c	stp	x29, x30, [sp, #0x70]
0000000000048790	add	x29, sp, #0x70
0000000000048794	mov	x21, x0
0000000000048798	adrp	x19, 36 ; 0x6c000
000000000004879c	add	x19, x19, #0xbb0
00000000000487a0	ldr	x23, [x19]
00000000000487a4	mov	x0, x19
00000000000487a8	blr	x23
00000000000487ac	ldr	x27, [x0]
00000000000487b0	add	x22, x27, #0x138
00000000000487b4	mov	w8, #0x1
00000000000487b8	ldaxr	w26, [x22]
00000000000487bc	stlxr	w9, w8, [x22]
00000000000487c0	cbnz	w9, 0x487b8
00000000000487c4	mov	x24, sp
00000000000487c8	mov	x0, sp
00000000000487cc	bl	__ZN6kotlin10StackTraceILm18446744073709551615EE7currentEm
00000000000487d0	ldp	x20, x25, [sp]
00000000000487d4	cbz	x27, 0x48808
00000000000487d8	ldaxr	w8, [x22]
00000000000487dc	stlxr	w9, w26, [x22]
00000000000487e0	cbnz	w9, 0x487d8
00000000000487e4	cbnz	w26, 0x48808
00000000000487e8	cmp	w8, #0x1
00000000000487ec	b.ne	0x48808
00000000000487f0	adr	x8, #0x3e253
00000000000487f4	nop
00000000000487f8	ldarb	w8, [x8]
00000000000487fc	tbz	w8, #0x0, 0x48808
0000000000048800	mov	x0, x22
0000000000048804	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048808	str	xzr, [sp, #0x18]
000000000004880c	mov	x0, x19
0000000000048810	blr	x23
0000000000048814	ldr	x8, [x0]
0000000000048818	ldr	x9, [x8, #0x110]
000000000004881c	str	x24, [x8, #0x110]
0000000000048820	mov	x10, #0x400000000
0000000000048824	stp	x9, x10, [sp, #0x8]
0000000000048828	sub	x24, x25, x20
000000000004882c	asr	x25, x24, #3
0000000000048830	tbnz	w25, #0x1f, 0x48900
0000000000048834	ldr	x8, [x8, #0x118]
0000000000048838	and	x9, x24, #0x7fffffff8
000000000004883c	add	x9, x9, #0x1f
0000000000048840	and	x1, x9, #0xffffffff8
0000000000048844	add	x0, x8, #0x70
0000000000048848	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004884c	adr	x8, #0x118f4
0000000000048850	nop
0000000000048854	mov	x22, x0
0000000000048858	str	x8, [x22, #0x10]!
000000000004885c	str	xzr, [x0, #0x18]
0000000000048860	str	xzr, [x0, #0x8]
0000000000048864	str	w25, [x0, #0x18]
0000000000048868	str	x22, [sp, #0x18]
000000000004886c	cbz	x24, 0x488b0
0000000000048870	mov	x8, #0x0
0000000000048874	cmp	x25, #0x1
0000000000048878	csinc	x9, x25, xzr, hi
000000000004887c	add	x10, x0, #0x20
0000000000048880	ubfx	x11, x24, #3, #32
0000000000048884	mov	x12, #0x100000000
0000000000048888	mov	x13, x20
000000000004888c	cbz	x11, 0x488f8
0000000000048890	ldr	x14, [x13], #0x8
0000000000048894	asr	x15, x8, #29
0000000000048898	ldr	xzr, [x22]
000000000004889c	str	x14, [x10, x15]
00000000000488a0	add	x8, x8, x12
00000000000488a4	sub	x11, x11, #0x1
00000000000488a8	sub	x9, x9, #0x1
00000000000488ac	cbnz	x9, 0x4888c
00000000000488b0	str	x22, [x21]
00000000000488b4	mov	x0, x19
00000000000488b8	blr	x23
00000000000488bc	ldr	x8, [x0]
00000000000488c0	ldr	x9, [sp, #0x8]
00000000000488c4	str	x9, [x8, #0x110]
00000000000488c8	cbz	x20, 0x488d4
00000000000488cc	mov	x0, x20
00000000000488d0	bl	0x51a64 ; symbol stub for: _free
00000000000488d4	mov	x0, x22
00000000000488d8	ldp	x29, x30, [sp, #0x70]
00000000000488dc	ldp	x20, x19, [sp, #0x60]
00000000000488e0	ldp	x22, x21, [sp, #0x50]
00000000000488e4	ldp	x24, x23, [sp, #0x40]
00000000000488e8	ldp	x26, x25, [sp, #0x30]
00000000000488ec	ldp	x28, x27, [sp, #0x20]
00000000000488f0	add	sp, sp, #0x80
00000000000488f4	ret
00000000000488f8	bl	_ThrowArrayIndexOutOfBoundsException
00000000000488fc	b	0x48904
0000000000048900	bl	_ThrowIllegalArgumentException
0000000000048904	brk	#0x1
0000000000048908	b	0x4890c
000000000004890c	mov	x21, x0
0000000000048910	mov	x0, x19
0000000000048914	blr	x23
0000000000048918	ldr	x8, [x0]
000000000004891c	ldr	x9, [sp, #0x8]
0000000000048920	str	x9, [x8, #0x110]
0000000000048924	cbz	x20, 0x48930
0000000000048928	mov	x0, x20
000000000004892c	bl	0x51a64 ; symbol stub for: _free
0000000000048930	mov	x0, x21
0000000000048934	bl	0x517a0 ; symbol stub for: __Unwind_Resume
_Kotlin_Long_toStringRadix:
0000000000048938	cbz	x0, 0x48960
000000000004893c	sub	sp, sp, #0x60
0000000000048940	stp	x29, x30, [sp, #0x50]
0000000000048944	add	x29, sp, #0x50
0000000000048948	cmp	x0, #0x0
000000000004894c	cneg	x8, x0, mi
0000000000048950	negs	x10, x8
0000000000048954	b.mi	0x48970
0000000000048958	mov	w8, #0x0
000000000004895c	b	0x489ac
0000000000048960	adr	x0, #0xe32c ; literal pool for: "0"
0000000000048964	nop
0000000000048968	mov	x1, x2
000000000004896c	b	_CreateStringFromCString
0000000000048970	mov	x8, #0x0
0000000000048974	mov	w9, #0x57
0000000000048978	mov	w11, #0x30
000000000004897c	add	x12, sp, #0xe
0000000000048980	mov	w13, w1
0000000000048984	sdiv	x14, x10, x13
0000000000048988	neg	w10, w10
000000000004898c	madd	w10, w14, w13, w10
0000000000048990	cmp	w10, #0xa
0000000000048994	csel	w15, w11, w9, lo
0000000000048998	add	w10, w15, w10
000000000004899c	strb	w10, [x12, x8]
00000000000489a0	add	x8, x8, #0x1
00000000000489a4	mov	x10, x14
00000000000489a8	tbnz	x14, #0x3f, 0x48984
00000000000489ac	tbnz	x0, #0x3f, 0x489ec
00000000000489b0	cmp	w8, #0x1
00000000000489b4	b.le	0x48a04
00000000000489b8	mov	x9, #0x0
00000000000489bc	mov	w8, w8
00000000000489c0	sub	x10, x8, #0x1
00000000000489c4	add	x11, sp, #0xe
00000000000489c8	ldrb	w12, [x11, x9]
00000000000489cc	ldrb	w13, [x11, x10]
00000000000489d0	strb	w13, [x11, x9]
00000000000489d4	strb	w12, [x11, x10]
00000000000489d8	add	x9, x9, #0x1
00000000000489dc	sub	x10, x10, #0x1
00000000000489e0	cmp	x9, x10
00000000000489e4	b.lt	0x489c8
00000000000489e8	b	0x48a08
00000000000489ec	add	x9, sp, #0xe
00000000000489f0	mov	w10, #0x2d
00000000000489f4	strb	w10, [x9, w8, uxtw]
00000000000489f8	add	w8, w8, #0x1
00000000000489fc	cmp	w8, #0x1
0000000000048a00	b.gt	0x489b8
0000000000048a04	sxtw	x8, w8
0000000000048a08	add	x9, sp, #0xe
0000000000048a0c	strb	wzr, [x9, x8]
0000000000048a10	add	x0, sp, #0xe
0000000000048a14	mov	x1, x2
0000000000048a18	bl	_CreateStringFromCString
0000000000048a1c	ldp	x29, x30, [sp, #0x50]
0000000000048a20	add	sp, sp, #0x60
0000000000048a24	ret
_Kotlin_String_plusImpl:
0000000000048a28	stp	x24, x23, [sp, #-0x40]!
0000000000048a2c	stp	x22, x21, [sp, #0x10]
0000000000048a30	stp	x20, x19, [sp, #0x20]
0000000000048a34	stp	x29, x30, [sp, #0x30]
0000000000048a38	add	x29, sp, #0x30
0000000000048a3c	ldr	w8, [x0, #0x8]
0000000000048a40	ldr	w9, [x1, #0x8]
0000000000048a44	adds	w23, w9, w8
0000000000048a48	b.mi	0x48aec
0000000000048a4c	mov	x19, x2
0000000000048a50	mov	x20, x1
0000000000048a54	mov	x21, x0
0000000000048a58	adrp	x0, 36 ; 0x6c000
0000000000048a5c	add	x0, x0, #0xbb0
0000000000048a60	ldr	x8, [x0]
0000000000048a64	blr	x8
0000000000048a68	ldr	x8, [x0]
0000000000048a6c	ldr	x8, [x8, #0x118]
0000000000048a70	lsl	x9, x23, #1
0000000000048a74	add	x9, x9, #0x1f
0000000000048a78	and	x1, x9, #0x3fffffff8
0000000000048a7c	add	x0, x8, #0x70
0000000000048a80	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000048a84	mov	x22, x0
0000000000048a88	stp	xzr, xzr, [x22, #0x10]!
0000000000048a8c	adr	x8, #0x10c54
0000000000048a90	nop
0000000000048a94	stp	xzr, x8, [x22, #-0x8]
0000000000048a98	str	w23, [x22, #0x8]
0000000000048a9c	str	x22, [x19]
0000000000048aa0	add	x23, x22, #0x10
0000000000048aa4	add	x1, x21, #0x10
0000000000048aa8	ldr	w8, [x21, #0x8]
0000000000048aac	lsl	x2, x8, #1
0000000000048ab0	mov	x0, x23
0000000000048ab4	bl	0x51aac ; symbol stub for: _memcpy
0000000000048ab8	ldrsw	x8, [x21, #0x8]
0000000000048abc	add	x0, x23, x8, lsl #1
0000000000048ac0	add	x1, x20, #0x10
0000000000048ac4	ldr	w8, [x20, #0x8]
0000000000048ac8	lsl	x2, x8, #1
0000000000048acc	bl	0x51aac ; symbol stub for: _memcpy
0000000000048ad0	str	x22, [x19]
0000000000048ad4	mov	x0, x22
0000000000048ad8	ldp	x29, x30, [sp, #0x30]
0000000000048adc	ldp	x20, x19, [sp, #0x20]
0000000000048ae0	ldp	x22, x21, [sp, #0x10]
0000000000048ae4	ldp	x24, x23, [sp], #0x40
0000000000048ae8	ret
0000000000048aec	bl	_ThrowArrayIndexOutOfBoundsException
_Kotlin_String_subSequence:
0000000000048af0	sub	sp, sp, #0x60
0000000000048af4	stp	x24, x23, [sp, #0x20]
0000000000048af8	stp	x22, x21, [sp, #0x30]
0000000000048afc	stp	x20, x19, [sp, #0x40]
0000000000048b00	stp	x29, x30, [sp, #0x50]
0000000000048b04	add	x29, sp, #0x50
0000000000048b08	tbnz	w1, #0x1f, 0x48c1c
0000000000048b0c	mov	x20, x1
0000000000048b10	cmp	w2, w1
0000000000048b14	b.lt	0x48c1c
0000000000048b18	mov	x21, x0
0000000000048b1c	ldr	w8, [x0, #0x8]
0000000000048b20	cmp	w8, w2
0000000000048b24	b.lo	0x48c1c
0000000000048b28	mov	x19, x3
0000000000048b2c	subs	w23, w2, w20
0000000000048b30	b.ne	0x48b9c
0000000000048b34	str	xzr, [sp, #0x8]
0000000000048b38	adrp	x20, 36 ; 0x6c000
0000000000048b3c	add	x20, x20, #0xbb0
0000000000048b40	ldr	x21, [x20]
0000000000048b44	mov	x0, x20
0000000000048b48	blr	x21
0000000000048b4c	ldr	x8, [x0]
0000000000048b50	ldr	x9, [x8, #0x110]
0000000000048b54	add	x10, sp, #0x8
0000000000048b58	str	x10, [x8, #0x110]
0000000000048b5c	mov	x8, #0x300000000
0000000000048b60	stp	x9, x8, [sp, #0x10]
0000000000048b64	adr	x8, #0x3dedf
0000000000048b68	nop
0000000000048b6c	ldarb	w8, [x8]
0000000000048b70	tbz	w8, #0x0, 0x48b78
0000000000048b74	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000048b78	adr	x22, #0x1c660
0000000000048b7c	nop
0000000000048b80	str	x22, [x19]
0000000000048b84	mov	x0, x20
0000000000048b88	blr	x21
0000000000048b8c	ldr	x8, [x0]
0000000000048b90	ldr	x9, [sp, #0x10]
0000000000048b94	str	x9, [x8, #0x110]
0000000000048b98	b	0x48c00
0000000000048b9c	b.mi	0x48c20
0000000000048ba0	adrp	x0, 36 ; 0x6c000
0000000000048ba4	add	x0, x0, #0xbb0
0000000000048ba8	ldr	x8, [x0]
0000000000048bac	blr	x8
0000000000048bb0	ldr	x8, [x0]
0000000000048bb4	ldr	x8, [x8, #0x118]
0000000000048bb8	lsl	x9, x23, #1
0000000000048bbc	add	x9, x9, #0x1f
0000000000048bc0	and	x1, x9, #0x3fffffff8
0000000000048bc4	add	x0, x8, #0x70
0000000000048bc8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000048bcc	mov	x22, x0
0000000000048bd0	adr	x8, #0x10b10
0000000000048bd4	nop
0000000000048bd8	stp	x8, xzr, [x22, #0x10]!
0000000000048bdc	stur	xzr, [x22, #-0x8]
0000000000048be0	str	w23, [x22, #0x8]
0000000000048be4	str	x22, [x19]
0000000000048be8	add	x0, x22, #0x10
0000000000048bec	add	x8, x21, w20, uxtw #1
0000000000048bf0	add	x1, x8, #0x10
0000000000048bf4	sbfiz	x2, x23, #1, #32
0000000000048bf8	bl	0x51aac ; symbol stub for: _memcpy
0000000000048bfc	str	x22, [x19]
0000000000048c00	mov	x0, x22
0000000000048c04	ldp	x29, x30, [sp, #0x50]
0000000000048c08	ldp	x20, x19, [sp, #0x40]
0000000000048c0c	ldp	x22, x21, [sp, #0x30]
0000000000048c10	ldp	x24, x23, [sp, #0x20]
0000000000048c14	add	sp, sp, #0x60
0000000000048c18	ret
0000000000048c1c	bl	_ThrowArrayIndexOutOfBoundsException
0000000000048c20	bl	_ThrowIllegalArgumentException
_Kotlin_String_compareTo:
0000000000048c24	add	x8, x0, #0x10
0000000000048c28	add	x9, x1, #0x10
0000000000048c2c	ldr	w10, [x1, #0x8]
0000000000048c30	ldr	w11, [x0, #0x8]
0000000000048c34	cmp	w10, w11
0000000000048c38	csel	w12, w10, w11, lo
0000000000048c3c	lsr	w13, w12, #2
0000000000048c40	cbz	w13, 0x48c68
0000000000048c44	mov	x14, #0x0
0000000000048c48	lsl	x15, x14, #3
0000000000048c4c	ldr	x16, [x8, x15]
0000000000048c50	ldr	x15, [x9, x15]
0000000000048c54	cmp	x16, x15
0000000000048c58	b.ne	0x48c78
0000000000048c5c	add	x14, x14, #0x1
0000000000048c60	cmp	x13, x14
0000000000048c64	b.ne	0x48c48
0000000000048c68	lsl	w14, w13, #2
0000000000048c6c	cmp	w14, w12
0000000000048c70	b.lo	0x48c88
0000000000048c74	b	0x48cd0
0000000000048c78	mov	x13, x14
0000000000048c7c	lsl	w14, w13, #2
0000000000048c80	cmp	w14, w12
0000000000048c84	b.hs	0x48cd0
0000000000048c88	mov	w13, w13
0000000000048c8c	lsl	x13, x13, #2
0000000000048c90	sub	w12, w12, w14
0000000000048c94	lsl	x14, x13, #1
0000000000048c98	ldrh	w15, [x8, x14]
0000000000048c9c	ldrh	w14, [x9, x14]
0000000000048ca0	cmp	w15, w14
0000000000048ca4	b.ne	0x48cb8
0000000000048ca8	add	x13, x13, #0x1
0000000000048cac	subs	w12, w12, #0x1
0000000000048cb0	b.ne	0x48c94
0000000000048cb4	b	0x48cd0
0000000000048cb8	cbz	w12, 0x48cd0
0000000000048cbc	ubfiz	x10, x13, #1, #32
0000000000048cc0	ldrh	w8, [x8, x10]
0000000000048cc4	ldrh	w9, [x9, x10]
0000000000048cc8	cmp	w8, w9
0000000000048ccc	b	0x48cd4
0000000000048cd0	cmp	w11, w10
0000000000048cd4	cset	w8, eq
0000000000048cd8	cset	w9, lo
0000000000048cdc	cmp	w9, #0x0
0000000000048ce0	mov	w9, #-0x1
0000000000048ce4	cneg	w9, w9, eq
0000000000048ce8	cmp	w8, #0x0
0000000000048cec	csel	w0, wzr, w9, ne
0000000000048cf0	ret
_Kotlin_String_get:
0000000000048cf4	stp	x29, x30, [sp, #-0x10]!
0000000000048cf8	mov	x29, sp
0000000000048cfc	ldr	w8, [x0, #0x8]
0000000000048d00	cmp	w8, w1
0000000000048d04	b.ls	0x48d18
0000000000048d08	add	x8, x0, w1, sxtw #1
0000000000048d0c	ldrh	w0, [x8, #0x10]
0000000000048d10	ldp	x29, x30, [sp], #0x10
0000000000048d14	ret
0000000000048d18	bl	_ThrowArrayIndexOutOfBoundsException
_Kotlin_String_equals:
0000000000048d1c	stp	x29, x30, [sp, #-0x10]!
0000000000048d20	mov	x29, sp
0000000000048d24	cbz	x1, 0x48d44
0000000000048d28	ldr	x8, [x1]
0000000000048d2c	and	x8, x8, #0xfffffffffffffffc
0000000000048d30	ldr	x8, [x8]
0000000000048d34	adr	x9, #0x109ac
0000000000048d38	nop
0000000000048d3c	cmp	x8, x9
0000000000048d40	b.eq	0x48d50
0000000000048d44	mov	w0, #0x0
0000000000048d48	ldp	x29, x30, [sp], #0x10
0000000000048d4c	ret
0000000000048d50	cmp	x1, x0
0000000000048d54	b.eq	0x48d88
0000000000048d58	ldr	w8, [x0, #0x8]
0000000000048d5c	ldr	w9, [x1, #0x8]
0000000000048d60	cmp	w8, w9
0000000000048d64	b.ne	0x48d44
0000000000048d68	add	x0, x0, #0x10
0000000000048d6c	add	x1, x1, #0x10
0000000000048d70	lsl	x2, x8, #1
0000000000048d74	bl	0x51aa0 ; symbol stub for: _memcmp
0000000000048d78	cmp	w0, #0x0
0000000000048d7c	cset	w0, eq
0000000000048d80	ldp	x29, x30, [sp], #0x10
0000000000048d84	ret
0000000000048d88	mov	w0, #0x1
0000000000048d8c	ldp	x29, x30, [sp], #0x10
0000000000048d90	ret
_Kotlin_String_hashCode:
0000000000048d94	stp	d9, d8, [sp, #-0x10]!
0000000000048d98	ldrsw	x9, [x0, #0x8]
0000000000048d9c	add	x8, x0, #0x10
0000000000048da0	add	w10, w9, #0x3
0000000000048da4	cmp	w9, #0x0
0000000000048da8	csel	w10, w10, w9, lt
0000000000048dac	asr	w11, w10, #2
0000000000048db0	adrp	x10, 10 ; 0x52000
0000000000048db4	movi.16b	v0, #0x0
0000000000048db8	cmp	w9, #0x1e8
0000000000048dbc	b.ge	0x48ecc
0000000000048dc0	cmp	w9, #0x10
0000000000048dc4	b.lt	0x48e58
0000000000048dc8	mov	w12, #0xde01
0000000000048dcc	movk	w12, #0x50a9, lsl #16
0000000000048dd0	dup.4s	v1, w12
0000000000048dd4	nop
0000000000048dd8	ldr	q2, 0x52560
0000000000048ddc	nop
0000000000048de0	ldr	q3, 0x52570
0000000000048de4	nop
0000000000048de8	ldr	q4, 0x52580
0000000000048dec	movi.16b	v5, #0x0
0000000000048df0	movi.16b	v6, #0x0
0000000000048df4	movi.16b	v7, #0x0
0000000000048df8	ldr	d16, [x10, #0x4b0]
0000000000048dfc	mov	x12, x11
0000000000048e00	ldp	d17, d18, [x8]
0000000000048e04	ushll.4s	v17, v17, #0x0
0000000000048e08	ushll.4s	v18, v18, #0x0
0000000000048e0c	ldp	d19, d20, [x8, #0x10]
0000000000048e10	ushll.4s	v19, v19, #0x0
0000000000048e14	mul.4s	v7, v7, v1
0000000000048e18	mul.4s	v6, v6, v1
0000000000048e1c	mul.4s	v5, v5, v1
0000000000048e20	mul.4s	v0, v0, v1
0000000000048e24	mla.4s	v7, v17, v2
0000000000048e28	mla.4s	v6, v18, v3
0000000000048e2c	mla.4s	v5, v19, v4
0000000000048e30	umlal.4s	v0, v20, v16
0000000000048e34	add	x8, x8, #0x20
0000000000048e38	sub	w11, w11, #0x4
0000000000048e3c	cmp	w12, #0x7
0000000000048e40	b.gt	0x48dfc
0000000000048e44	add.4s	v1, v6, v7
0000000000048e48	add.4s	v0, v0, v5
0000000000048e4c	add.4s	v0, v0, v1
0000000000048e50	addv.4s	s0, v0
0000000000048e54	dup.4s	v0, v0[0]
0000000000048e58	cmp	w11, #0x1
0000000000048e5c	b.le	0x490d0
0000000000048e60	movi.16b	v1, #0x0
0000000000048e64	mov	w12, #0x6f01
0000000000048e68	movk	w12, #0x9444, lsl #16
0000000000048e6c	dup.4s	v2, w12
0000000000048e70	nop
0000000000048e74	ldr	q3, 0x52580
0000000000048e78	ldr	d5, [x10, #0x4b0]
0000000000048e7c	movi.16b	v4, #0x0
0000000000048e80	mov	x12, x11
0000000000048e84	ldp	d6, d7, [x8], #0x10
0000000000048e88	ushll.4s	v6, v6, #0x0
0000000000048e8c	mul.4s	v4, v4, v2
0000000000048e90	mul.4s	v1, v1, v2
0000000000048e94	mla.4s	v4, v6, v3
0000000000048e98	umlal.4s	v1, v7, v5
0000000000048e9c	sub	w11, w11, #0x2
0000000000048ea0	cmp	w12, #0x3
0000000000048ea4	b.gt	0x48e80
0000000000048ea8	mov	w12, #0x6f01
0000000000048eac	movk	w12, #0x9444, lsl #16
0000000000048eb0	dup.4s	v2, w12
0000000000048eb4	add.4s	v1, v1, v4
0000000000048eb8	addv.4s	s1, v1
0000000000048ebc	dup.4s	v1, v1[0]
0000000000048ec0	mla.4s	v1, v0, v2
0000000000048ec4	mov.16b	v0, v1
0000000000048ec8	b	0x490d0
0000000000048ecc	mov	w12, #0xbc01
0000000000048ed0	movk	w12, #0x7dd7, lsl #16
0000000000048ed4	dup.4s	v5, w12
0000000000048ed8	nop
0000000000048edc	ldr	q6, 0x52520
0000000000048ee0	nop
0000000000048ee4	ldr	q7, 0x52530
0000000000048ee8	nop
0000000000048eec	ldr	q16, 0x52540
0000000000048ef0	nop
0000000000048ef4	ldr	q17, 0x52550
0000000000048ef8	nop
0000000000048efc	ldr	q3, 0x52560
0000000000048f00	nop
0000000000048f04	ldr	q4, 0x52570
0000000000048f08	nop
0000000000048f0c	movi.16b	v18, #0x0
0000000000048f10	movi.16b	v19, #0x0
0000000000048f14	movi.16b	v20, #0x0
0000000000048f18	movi.16b	v21, #0x0
0000000000048f1c	movi.16b	v22, #0x0
0000000000048f20	ldr	q1, 0x52580
0000000000048f24	movi.16b	v23, #0x0
0000000000048f28	movi.16b	v24, #0x0
0000000000048f2c	ldr	d2, [x10, #0x4b0]
0000000000048f30	mov	x12, x11
0000000000048f34	ldp	d25, d26, [x8]
0000000000048f38	ushll.4s	v25, v25, #0x0
0000000000048f3c	ushll.4s	v26, v26, #0x0
0000000000048f40	ldp	d27, d28, [x8, #0x10]
0000000000048f44	ushll.4s	v27, v27, #0x0
0000000000048f48	ushll.4s	v28, v28, #0x0
0000000000048f4c	ldp	d29, d30, [x8, #0x20]
0000000000048f50	ushll.4s	v29, v29, #0x0
0000000000048f54	ushll.4s	v30, v30, #0x0
0000000000048f58	mul.4s	v24, v24, v5
0000000000048f5c	mul.4s	v23, v23, v5
0000000000048f60	ldp	d31, d8, [x8, #0x30]
0000000000048f64	mul.4s	v22, v22, v5
0000000000048f68	mul.4s	v21, v21, v5
0000000000048f6c	mul.4s	v20, v20, v5
0000000000048f70	mul.4s	v19, v19, v5
0000000000048f74	mul.4s	v18, v18, v5
0000000000048f78	mul.4s	v0, v0, v5
0000000000048f7c	ushll.4s	v31, v31, #0x0
0000000000048f80	mla.4s	v24, v25, v6
0000000000048f84	mla.4s	v23, v26, v7
0000000000048f88	mla.4s	v22, v27, v16
0000000000048f8c	mla.4s	v21, v28, v17
0000000000048f90	mla.4s	v20, v29, v3
0000000000048f94	mla.4s	v19, v30, v4
0000000000048f98	mla.4s	v18, v31, v1
0000000000048f9c	add	x8, x8, #0x40
0000000000048fa0	sub	w11, w11, #0x8
0000000000048fa4	umlal.4s	v0, v8, v2
0000000000048fa8	cmp	w12, #0xf
0000000000048fac	b.gt	0x48f30
0000000000048fb0	add.4s	v5, v23, v24
0000000000048fb4	add.4s	v6, v21, v22
0000000000048fb8	add.4s	v7, v19, v20
0000000000048fbc	add.4s	v0, v0, v18
0000000000048fc0	add.4s	v5, v6, v5
0000000000048fc4	add.4s	v5, v5, v7
0000000000048fc8	add.4s	v0, v5, v0
0000000000048fcc	addv.4s	s0, v0
0000000000048fd0	dup.4s	v0, v0[0]
0000000000048fd4	add	w12, w11, #0x8
0000000000048fd8	cmp	w12, #0xc
0000000000048fdc	b.lt	0x4906c
0000000000048fe0	movi.16b	v5, #0x0
0000000000048fe4	mov	w12, #0xde01
0000000000048fe8	movk	w12, #0x50a9, lsl #16
0000000000048fec	dup.4s	v7, w12
0000000000048ff0	movi.16b	v6, #0x0
0000000000048ff4	movi.16b	v16, #0x0
0000000000048ff8	movi.16b	v17, #0x0
0000000000048ffc	mov	x12, x11
0000000000049000	ldp	d18, d19, [x8]
0000000000049004	ushll.4s	v18, v18, #0x0
0000000000049008	ushll.4s	v19, v19, #0x0
000000000004900c	ldp	d20, d21, [x8, #0x10]
0000000000049010	ushll.4s	v20, v20, #0x0
0000000000049014	mul.4s	v17, v17, v7
0000000000049018	mul.4s	v16, v16, v7
000000000004901c	mul.4s	v6, v6, v7
0000000000049020	mul.4s	v5, v5, v7
0000000000049024	mla.4s	v17, v18, v3
0000000000049028	mla.4s	v16, v19, v4
000000000004902c	mla.4s	v6, v20, v1
0000000000049030	umlal.4s	v5, v21, v2
0000000000049034	add	x8, x8, #0x20
0000000000049038	sub	w11, w11, #0x4
000000000004903c	cmp	w12, #0x7
0000000000049040	b.gt	0x48ffc
0000000000049044	mov	w12, #0xde01
0000000000049048	movk	w12, #0x50a9, lsl #16
000000000004904c	dup.4s	v3, w12
0000000000049050	add.4s	v4, v16, v17
0000000000049054	add.4s	v5, v5, v6
0000000000049058	add.4s	v4, v5, v4
000000000004905c	addv.4s	s4, v4
0000000000049060	dup.4s	v4, v4[0]
0000000000049064	mla.4s	v4, v0, v3
0000000000049068	mov.16b	v0, v4
000000000004906c	cmp	w11, #0x1
0000000000049070	b.le	0x490d0
0000000000049074	movi.16b	v3, #0x0
0000000000049078	mov	w12, #0x6f01
000000000004907c	movk	w12, #0x9444, lsl #16
0000000000049080	dup.4s	v5, w12
0000000000049084	movi.16b	v4, #0x0
0000000000049088	mov	x12, x11
000000000004908c	ldp	d6, d7, [x8], #0x10
0000000000049090	ushll.4s	v6, v6, #0x0
0000000000049094	mul.4s	v4, v4, v5
0000000000049098	mul.4s	v3, v3, v5
000000000004909c	mla.4s	v4, v6, v1
00000000000490a0	umlal.4s	v3, v7, v2
00000000000490a4	sub	w11, w11, #0x2
00000000000490a8	cmp	w12, #0x3
00000000000490ac	b.gt	0x49088
00000000000490b0	mov	w12, #0x6f01
00000000000490b4	movk	w12, #0x9444, lsl #16
00000000000490b8	dup.4s	v1, w12
00000000000490bc	add.4s	v2, v3, v4
00000000000490c0	addv.4s	s2, v2
00000000000490c4	dup.4s	v2, v2[0]
00000000000490c8	mla.4s	v2, v0, v1
00000000000490cc	mov.16b	v0, v2
00000000000490d0	cmp	w11, #0x1
00000000000490d4	b.lt	0x49100
00000000000490d8	ldr	d1, [x8]
00000000000490dc	mov	w8, #0x1781
00000000000490e0	movk	w8, #0xe, lsl #16
00000000000490e4	dup.4s	v2, w8
00000000000490e8	ldr	d3, [x10, #0x4b0]
00000000000490ec	umull.4s	v1, v1, v3
00000000000490f0	addv.4s	s1, v1
00000000000490f4	dup.4s	v1, v1[0]
00000000000490f8	mla.4s	v1, v0, v2
00000000000490fc	mov.16b	v0, v1
0000000000049100	fmov	w8, s0
0000000000049104	and	x10, x9, #0xfffffffffffffffc
0000000000049108	cmp	w10, w9
000000000004910c	b.ge	0x49134
0000000000049110	sub	x9, x9, x10
0000000000049114	add	x10, x0, x10, lsl #1
0000000000049118	add	x10, x10, #0x10
000000000004911c	lsl	w11, w8, #5
0000000000049120	sub	w8, w11, w8
0000000000049124	ldrh	w11, [x10], #0x2
0000000000049128	add	w8, w8, w11
000000000004912c	subs	x9, x9, #0x1
0000000000049130	b.ne	0x4911c
0000000000049134	mov	x0, x8
0000000000049138	ldp	d9, d8, [sp], #0x10
000000000004913c	ret
-[KIteratorAsNSEnumerator dealloc]:
0000000000049140	sub	sp, sp, #0x60
0000000000049144	stp	x26, x25, [sp, #0x10]
0000000000049148	stp	x24, x23, [sp, #0x20]
000000000004914c	stp	x22, x21, [sp, #0x30]
0000000000049150	stp	x20, x19, [sp, #0x40]
0000000000049154	stp	x29, x30, [sp, #0x50]
0000000000049158	add	x29, sp, #0x50
000000000004915c	mov	x19, x0
0000000000049160	nop
0000000000049164	ldrsw	x8, _OBJC_IVAR_$_NBKKIteratorAsNSEnumerator.iteratorHolder
0000000000049168	add	x24, x0, x8
000000000004916c	bl	_Kotlin_initRuntimeIfNeeded
0000000000049170	adrp	x21, 35 ; 0x6c000
0000000000049174	add	x21, x21, #0xbb0
0000000000049178	ldr	x25, [x21]
000000000004917c	mov	x0, x21
0000000000049180	blr	x25
0000000000049184	ldr	x8, [x0]
0000000000049188	add	x20, x8, #0x138
000000000004918c	ldaxr	w22, [x20]
0000000000049190	stlxr	w8, wzr, [x20]
0000000000049194	cbnz	w8, 0x4918c
0000000000049198	adr	x23, #0x3d8ab
000000000004919c	nop
00000000000491a0	cmp	w22, #0x1
00000000000491a4	b.ne	0x491b8
00000000000491a8	ldarb	w8, [x23]
00000000000491ac	tbz	w8, #0x0, 0x491b8
00000000000491b0	mov	x0, x20
00000000000491b4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000491b8	ldr	x8, [x24]
00000000000491bc	cbz	x8, 0x491d8
00000000000491c0	ldr	x1, [x24, #0x8]
00000000000491c4	mov	x0, x21
00000000000491c8	blr	x25
00000000000491cc	ldr	x8, [x0]
00000000000491d0	add	x0, x8, #0x8
00000000000491d4	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
00000000000491d8	ldaxr	w8, [x20]
00000000000491dc	stlxr	w9, w22, [x20]
00000000000491e0	cbnz	w9, 0x491d8
00000000000491e4	cbnz	w22, 0x49200
00000000000491e8	cmp	w8, #0x1
00000000000491ec	b.ne	0x49200
00000000000491f0	ldarb	w8, [x23]
00000000000491f4	tbz	w8, #0x0, 0x49200
00000000000491f8	mov	x0, x20
00000000000491fc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049200	nop
0000000000049204	ldr	x8, #0x21724 ; Objc class ref: NBKKIteratorAsNSEnumerator
0000000000049208	stp	x19, x8, [sp]
000000000004920c	nop
0000000000049210	ldr	x1, #0x21410 ; Objc selector ref: dealloc
0000000000049214	mov	x0, sp
0000000000049218	bl	0x51b84 ; Objc message: -[[x0 super] dealloc]
000000000004921c	ldp	x29, x30, [sp, #0x50]
0000000000049220	ldp	x20, x19, [sp, #0x40]
0000000000049224	ldp	x22, x21, [sp, #0x30]
0000000000049228	ldp	x24, x23, [sp, #0x20]
000000000004922c	ldp	x26, x25, [sp, #0x10]
0000000000049230	add	sp, sp, #0x60
0000000000049234	ret
-[KIteratorAsNSEnumerator nextObject]:
0000000000049238	sub	sp, sp, #0x90
000000000004923c	stp	x26, x25, [sp, #0x40]
0000000000049240	stp	x24, x23, [sp, #0x50]
0000000000049244	stp	x22, x21, [sp, #0x60]
0000000000049248	stp	x20, x19, [sp, #0x70]
000000000004924c	stp	x29, x30, [sp, #0x80]
0000000000049250	add	x29, sp, #0x80
0000000000049254	mov	x21, x0
0000000000049258	bl	_Kotlin_initRuntimeIfNeeded
000000000004925c	adrp	x20, 35 ; 0x6c000
0000000000049260	add	x20, x20, #0xbb0
0000000000049264	ldr	x25, [x20]
0000000000049268	mov	x0, x20
000000000004926c	blr	x25
0000000000049270	ldr	x8, [x0]
0000000000049274	add	x19, x8, #0x138
0000000000049278	ldaxr	w24, [x19]
000000000004927c	stlxr	w8, wzr, [x19]
0000000000049280	cbnz	w8, 0x49278
0000000000049284	adr	x23, #0x3d7bf
0000000000049288	nop
000000000004928c	cmp	w24, #0x1
0000000000049290	b.ne	0x492a4
0000000000049294	ldarb	w8, [x23]
0000000000049298	tbz	w8, #0x0, 0x492a4
000000000004929c	mov	x0, x19
00000000000492a0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000492a4	nop
00000000000492a8	ldrsw	x22, _OBJC_IVAR_$_NBKKIteratorAsNSEnumerator.iteratorHolder
00000000000492ac	bl	_Kotlin_initRuntimeIfNeeded
00000000000492b0	ldr	x21, [x21, x22]
00000000000492b4	str	xzr, [sp, #0x28]
00000000000492b8	mov	x0, x20
00000000000492bc	blr	x25
00000000000492c0	ldr	x8, [x0]
00000000000492c4	ldr	x9, [x8, #0x110]
00000000000492c8	add	x10, sp, #0x28
00000000000492cc	str	x10, [x8, #0x110]
00000000000492d0	mov	x8, #0x300000000
00000000000492d4	stp	x9, x8, [sp, #0x30]
00000000000492d8	ldarb	w8, [x23]
00000000000492dc	tbz	w8, #0x0, 0x492e4
00000000000492e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000492e4	ldr	x8, [x21]
00000000000492e8	and	x8, x8, #0xfffffffffffffffc
00000000000492ec	ldr	x8, [x8]
00000000000492f0	ldr	w9, [x8, #0x3c]
00000000000492f4	ldr	x8, [x8, #0x40]
00000000000492f8	tbnz	w9, #0x1f, 0x49308
00000000000492fc	mov	w10, #0xa0
0000000000049300	and	x9, x9, x10
0000000000049304	b	0x4938c
0000000000049308	neg	w10, w9
000000000004930c	mvn	w9, w9
0000000000049310	cmp	w10, #0x9
0000000000049314	b.ge	0x4934c
0000000000049318	cmp	w10, #0x2
000000000004931c	b.lt	0x49380
0000000000049320	mov	x10, #0x0
0000000000049324	mov	x11, x8
0000000000049328	ldr	w12, [x11]
000000000004932c	cmp	w12, #0x9f
0000000000049330	b.gt	0x49388
0000000000049334	add	x10, x10, #0x1
0000000000049338	add	x11, x11, #0x10
000000000004933c	cmp	x9, x10
0000000000049340	b.ne	0x49328
0000000000049344	mov	x10, x9
0000000000049348	b	0x49388
000000000004934c	mov	w10, #0x0
0000000000049350	add	w11, w9, w10
0000000000049354	cmp	w11, #0x0
0000000000049358	cinc	w11, w11, lt
000000000004935c	asr	w11, w11, #1
0000000000049360	sbfiz	x12, x11, #4, #32
0000000000049364	ldr	w12, [x8, x12]
0000000000049368	cmp	w12, #0xa0
000000000004936c	csinc	w10, w10, w11, ge
0000000000049370	csel	w9, w9, w11, lt
0000000000049374	cmp	w10, w9
0000000000049378	b.lt	0x49350
000000000004937c	b	0x49388
0000000000049380	mov	w10, #0x0
0000000000049384	b	0x49388
0000000000049388	sxtw	x9, w10
000000000004938c	add	x8, x8, x9, lsl #4
0000000000049390	ldr	x8, [x8, #0x8]
0000000000049394	ldr	x8, [x8]
0000000000049398	mov	x0, x21
000000000004939c	blr	x8
00000000000493a0	mov	x8, x0
00000000000493a4	mov	x0, x20
00000000000493a8	blr	x25
00000000000493ac	ldr	x9, [x0]
00000000000493b0	ldr	x10, [sp, #0x30]
00000000000493b4	str	x10, [x9, #0x110]
00000000000493b8	cbz	w8, 0x49414
00000000000493bc	add	x8, sp, #0x8
00000000000493c0	add	x22, x8, #0x18
00000000000493c4	mov	x11, #0x400000000
00000000000493c8	str	x10, [sp, #0x10]
00000000000493cc	stp	x11, xzr, [sp, #0x18]
00000000000493d0	stp	xzr, x8, [sp, #0x28]
00000000000493d4	add	x8, sp, #0x28
00000000000493d8	str	x8, [x9, #0x110]
00000000000493dc	mov	x8, #0x300000000
00000000000493e0	str	x8, [sp, #0x38]
00000000000493e4	ldarb	w8, [x23]
00000000000493e8	tbz	w8, #0x0, 0x493f0
00000000000493ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000493f0	ldr	x8, [x21]
00000000000493f4	and	x8, x8, #0xfffffffffffffffc
00000000000493f8	ldr	x8, [x8]
00000000000493fc	ldr	w9, [x8, #0x3c]
0000000000049400	ldr	x8, [x8, #0x40]
0000000000049404	tbnz	w9, #0x1f, 0x4941c
0000000000049408	mov	w10, #0xa0
000000000004940c	and	x9, x9, x10
0000000000049410	b	0x494a0
0000000000049414	mov	x21, #0x0
0000000000049418	b	0x49510
000000000004941c	neg	w10, w9
0000000000049420	mvn	w9, w9
0000000000049424	cmp	w10, #0x9
0000000000049428	b.ge	0x49460
000000000004942c	cmp	w10, #0x2
0000000000049430	b.lt	0x49494
0000000000049434	mov	x10, #0x0
0000000000049438	mov	x11, x8
000000000004943c	ldr	w12, [x11]
0000000000049440	cmp	w12, #0x9f
0000000000049444	b.gt	0x4949c
0000000000049448	add	x10, x10, #0x1
000000000004944c	add	x11, x11, #0x10
0000000000049450	cmp	x9, x10
0000000000049454	b.ne	0x4943c
0000000000049458	mov	x10, x9
000000000004945c	b	0x4949c
0000000000049460	mov	w10, #0x0
0000000000049464	add	w11, w9, w10
0000000000049468	cmp	w11, #0x0
000000000004946c	cinc	w11, w11, lt
0000000000049470	asr	w11, w11, #1
0000000000049474	sbfiz	x12, x11, #4, #32
0000000000049478	ldr	w12, [x8, x12]
000000000004947c	cmp	w12, #0xa0
0000000000049480	csinc	w10, w10, w11, ge
0000000000049484	csel	w9, w9, w11, lt
0000000000049488	cmp	w10, w9
000000000004948c	b.lt	0x49464
0000000000049490	b	0x4949c
0000000000049494	mov	w10, #0x0
0000000000049498	b	0x4949c
000000000004949c	sxtw	x9, w10
00000000000494a0	add	x8, x8, x9, lsl #4
00000000000494a4	ldr	x8, [x8, #0x8]
00000000000494a8	ldr	x8, [x8, #0x8]
00000000000494ac	mov	x0, x21
00000000000494b0	mov	x1, x22
00000000000494b4	blr	x8
00000000000494b8	mov	x8, x0
00000000000494bc	str	x0, [sp, #0x20]
00000000000494c0	mov	x0, x20
00000000000494c4	blr	x25
00000000000494c8	ldr	x9, [x0]
00000000000494cc	ldr	x10, [sp, #0x30]
00000000000494d0	str	x10, [x9, #0x110]
00000000000494d4	cbz	x8, 0x494e4
00000000000494d8	mov	x0, x8
00000000000494dc	bl	_Kotlin_ObjCExport_refToObjC
00000000000494e0	b	0x494f8
00000000000494e4	nop
00000000000494e8	ldr	x0, #0x213d0 ; Objc class ref: _OBJC_CLASS_$_NSNull
00000000000494ec	nop
00000000000494f0	ldr	x1, #0x21268 ; Objc selector ref: null
00000000000494f4	bl	0x51b78 ; Objc message: +[NSNull null]
00000000000494f8	mov	x21, x0
00000000000494fc	mov	x0, x20
0000000000049500	blr	x25
0000000000049504	ldr	x8, [x0]
0000000000049508	ldr	x9, [sp, #0x10]
000000000004950c	str	x9, [x8, #0x110]
0000000000049510	ldaxr	w8, [x19]
0000000000049514	stlxr	w9, w24, [x19]
0000000000049518	cbnz	w9, 0x49510
000000000004951c	cbnz	w24, 0x49538
0000000000049520	cmp	w8, #0x1
0000000000049524	b.ne	0x49538
0000000000049528	ldarb	w8, [x23]
000000000004952c	tbz	w8, #0x0, 0x49538
0000000000049530	mov	x0, x19
0000000000049534	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049538	mov	x0, x21
000000000004953c	ldp	x29, x30, [sp, #0x80]
0000000000049540	ldp	x20, x19, [sp, #0x70]
0000000000049544	ldp	x22, x21, [sp, #0x60]
0000000000049548	ldp	x24, x23, [sp, #0x50]
000000000004954c	ldp	x26, x25, [sp, #0x40]
0000000000049550	add	sp, sp, #0x90
0000000000049554	ret
0000000000049558	mov	x21, x0
000000000004955c	mov	x0, x20
0000000000049560	blr	x25
0000000000049564	ldr	x8, [x0]
0000000000049568	ldr	x9, [sp, #0x10]
000000000004956c	b	0x495a4
0000000000049570	mov	x21, x0
0000000000049574	mov	x0, x20
0000000000049578	blr	x25
000000000004957c	ldr	x8, [x0]
0000000000049580	ldr	x9, [sp, #0x30]
0000000000049584	str	x9, [x8, #0x110]
0000000000049588	ldr	x9, [sp, #0x10]
000000000004958c	b	0x495a4
0000000000049590	mov	x21, x0
0000000000049594	mov	x0, x20
0000000000049598	blr	x25
000000000004959c	ldr	x8, [x0]
00000000000495a0	ldr	x9, [sp, #0x30]
00000000000495a4	str	x9, [x8, #0x110]
00000000000495a8	ldaxr	w8, [x19]
00000000000495ac	stlxr	w9, w24, [x19]
00000000000495b0	cbnz	w9, 0x495a8
00000000000495b4	cbnz	w24, 0x495d0
00000000000495b8	cmp	w8, #0x1
00000000000495bc	b.ne	0x495d0
00000000000495c0	ldarb	w8, [x23]
00000000000495c4	tbz	w8, #0x0, 0x495d0
00000000000495c8	mov	x0, x19
00000000000495cc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000495d0	mov	x0, x21
00000000000495d4	bl	0x517a0 ; symbol stub for: __Unwind_Resume
+[KIteratorAsNSEnumerator createWithKIterator:]:
00000000000495d8	stp	x22, x21, [sp, #-0x30]!
00000000000495dc	stp	x20, x19, [sp, #0x10]
00000000000495e0	stp	x29, x30, [sp, #0x20]
00000000000495e4	add	x29, sp, #0x20
00000000000495e8	mov	x19, x2
00000000000495ec	nop
00000000000495f0	ldr	x0, #0x212e8 ; Objc class ref: NBKKIteratorAsNSEnumerator
00000000000495f4	bl	0x51b00 ; symbol stub for: _objc_alloc
00000000000495f8	nop
00000000000495fc	ldr	x1, #0x21064 ; Objc selector ref: init
0000000000049600	bl	0x51b78 ; Objc message: +[NBKKIteratorAsNSEnumerator init]
0000000000049604	bl	0x51b18 ; symbol stub for: _objc_autorelease
0000000000049608	mov	x20, x0
000000000004960c	nop
0000000000049610	ldrsw	x8, _OBJC_IVAR_$_NBKKIteratorAsNSEnumerator.iteratorHolder
0000000000049614	add	x21, x0, x8
0000000000049618	adrp	x0, 35 ; 0x6c000
000000000004961c	add	x0, x0, #0xbb0
0000000000049620	ldr	x8, [x0]
0000000000049624	blr	x8
0000000000049628	ldr	x22, [x0]
000000000004962c	mov	w0, #0x1
0000000000049630	mov	w1, #0x28
0000000000049634	bl	0x519e0 ; symbol stub for: _calloc
0000000000049638	ldr	x8, [x22, #0xa8]!
000000000004963c	sub	x9, x22, #0x8
0000000000049640	stp	x8, x22, [x0]
0000000000049644	str	x0, [x8, #0x8]
0000000000049648	str	x0, [x22]
000000000004964c	ldr	x8, [x22, #0x10]
0000000000049650	add	x8, x8, #0x1
0000000000049654	str	x8, [x22, #0x10]
0000000000049658	stp	x9, x0, [x0, #0x18]
000000000004965c	str	x19, [x0, #0x10]!
0000000000049660	stp	x19, x0, [x21]
0000000000049664	mov	x0, x20
0000000000049668	ldp	x29, x30, [sp, #0x20]
000000000004966c	ldp	x20, x19, [sp, #0x10]
0000000000049670	ldp	x22, x21, [sp], #0x30
0000000000049674	ret
-[KListAsNSArray dealloc]:
0000000000049678	sub	sp, sp, #0x60
000000000004967c	stp	x26, x25, [sp, #0x10]
0000000000049680	stp	x24, x23, [sp, #0x20]
0000000000049684	stp	x22, x21, [sp, #0x30]
0000000000049688	stp	x20, x19, [sp, #0x40]
000000000004968c	stp	x29, x30, [sp, #0x50]
0000000000049690	add	x29, sp, #0x50
0000000000049694	mov	x19, x0
0000000000049698	nop
000000000004969c	ldrsw	x8, _OBJC_IVAR_$_NBKKListAsNSArray.listHolder
00000000000496a0	add	x24, x0, x8
00000000000496a4	bl	_Kotlin_initRuntimeIfNeeded
00000000000496a8	adrp	x21, 35 ; 0x6c000
00000000000496ac	add	x21, x21, #0xbb0
00000000000496b0	ldr	x25, [x21]
00000000000496b4	mov	x0, x21
00000000000496b8	blr	x25
00000000000496bc	ldr	x8, [x0]
00000000000496c0	add	x20, x8, #0x138
00000000000496c4	ldaxr	w22, [x20]
00000000000496c8	stlxr	w8, wzr, [x20]
00000000000496cc	cbnz	w8, 0x496c4
00000000000496d0	adr	x23, #0x3d373
00000000000496d4	nop
00000000000496d8	cmp	w22, #0x1
00000000000496dc	b.ne	0x496f0
00000000000496e0	ldarb	w8, [x23]
00000000000496e4	tbz	w8, #0x0, 0x496f0
00000000000496e8	mov	x0, x20
00000000000496ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000496f0	ldr	x8, [x24]
00000000000496f4	cbz	x8, 0x49710
00000000000496f8	ldr	x1, [x24, #0x8]
00000000000496fc	mov	x0, x21
0000000000049700	blr	x25
0000000000049704	ldr	x8, [x0]
0000000000049708	add	x0, x8, #0x8
000000000004970c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000049710	ldaxr	w8, [x20]
0000000000049714	stlxr	w9, w22, [x20]
0000000000049718	cbnz	w9, 0x49710
000000000004971c	cbnz	w22, 0x49738
0000000000049720	cmp	w8, #0x1
0000000000049724	b.ne	0x49738
0000000000049728	ldarb	w8, [x23]
000000000004972c	tbz	w8, #0x0, 0x49738
0000000000049730	mov	x0, x20
0000000000049734	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049738	nop
000000000004973c	ldr	x8, #0x211f4 ; Objc class ref: NBKKListAsNSArray
0000000000049740	stp	x19, x8, [sp]
0000000000049744	nop
0000000000049748	ldr	x1, #0x20ed8 ; Objc selector ref: dealloc
000000000004974c	mov	x0, sp
0000000000049750	bl	0x51b84 ; Objc message: -[[x0 super] dealloc]
0000000000049754	ldp	x29, x30, [sp, #0x50]
0000000000049758	ldp	x20, x19, [sp, #0x40]
000000000004975c	ldp	x22, x21, [sp, #0x30]
0000000000049760	ldp	x24, x23, [sp, #0x20]
0000000000049764	ldp	x26, x25, [sp, #0x10]
0000000000049768	add	sp, sp, #0x60
000000000004976c	ret
-[KListAsNSArray toKotlin:]:
0000000000049770	stp	x22, x21, [sp, #-0x30]!
0000000000049774	stp	x20, x19, [sp, #0x10]
0000000000049778	stp	x29, x30, [sp, #0x20]
000000000004977c	add	x29, sp, #0x20
0000000000049780	mov	x19, x2
0000000000049784	mov	x20, x0
0000000000049788	nop
000000000004978c	ldrsw	x21, _OBJC_IVAR_$_NBKKListAsNSArray.listHolder
0000000000049790	bl	_Kotlin_initRuntimeIfNeeded
0000000000049794	ldr	x0, [x20, x21]
0000000000049798	str	x0, [x19]
000000000004979c	ldp	x29, x30, [sp, #0x20]
00000000000497a0	ldp	x20, x19, [sp, #0x10]
00000000000497a4	ldp	x22, x21, [sp], #0x30
00000000000497a8	ret
-[KListAsNSArray objectAtIndex:]:
00000000000497ac	sub	sp, sp, #0x70
00000000000497b0	stp	x26, x25, [sp, #0x20]
00000000000497b4	stp	x24, x23, [sp, #0x30]
00000000000497b8	stp	x22, x21, [sp, #0x40]
00000000000497bc	stp	x20, x19, [sp, #0x50]
00000000000497c0	stp	x29, x30, [sp, #0x60]
00000000000497c4	add	x29, sp, #0x60
00000000000497c8	mov	x21, x2
00000000000497cc	mov	x22, x0
00000000000497d0	bl	_Kotlin_initRuntimeIfNeeded
00000000000497d4	adrp	x20, 35 ; 0x6c000
00000000000497d8	add	x20, x20, #0xbb0
00000000000497dc	ldr	x25, [x20]
00000000000497e0	mov	x0, x20
00000000000497e4	blr	x25
00000000000497e8	ldr	x8, [x0]
00000000000497ec	add	x19, x8, #0x138
00000000000497f0	ldaxr	w24, [x19]
00000000000497f4	stlxr	w8, wzr, [x19]
00000000000497f8	cbnz	w8, 0x497f0
00000000000497fc	cmp	w24, #0x1
0000000000049800	b.ne	0x4981c
0000000000049804	adr	x8, #0x3d23f
0000000000049808	nop
000000000004980c	ldarb	w8, [x8]
0000000000049810	tbz	w8, #0x0, 0x4981c
0000000000049814	mov	x0, x19
0000000000049818	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004981c	mov	x8, sp
0000000000049820	add	x23, x8, #0x18
0000000000049824	str	xzr, [sp, #0x18]
0000000000049828	mov	x0, x20
000000000004982c	blr	x25
0000000000049830	ldr	x9, [x0]
0000000000049834	ldr	x10, [x9, #0x110]
0000000000049838	str	x8, [x9, #0x110]
000000000004983c	mov	x8, #0x400000000
0000000000049840	stp	x10, x8, [sp, #0x8]
0000000000049844	nop
0000000000049848	ldrsw	x26, _OBJC_IVAR_$_NBKKListAsNSArray.listHolder
000000000004984c	bl	_Kotlin_initRuntimeIfNeeded
0000000000049850	ldr	x0, [x22, x26]
0000000000049854	mov	x1, x21
0000000000049858	mov	x2, x23
000000000004985c	bl	_Kotlin_List_get
0000000000049860	cbz	x0, 0x4986c
0000000000049864	bl	_Kotlin_ObjCExport_refToObjC
0000000000049868	b	0x49880
000000000004986c	nop
0000000000049870	ldr	x0, #0x21048 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000049874	nop
0000000000049878	ldr	x1, #0x20ee0 ; Objc selector ref: null
000000000004987c	bl	0x51b78 ; Objc message: +[NSNull null]
0000000000049880	mov	x21, x0
0000000000049884	mov	x0, x20
0000000000049888	blr	x25
000000000004988c	ldr	x8, [x0]
0000000000049890	ldr	x9, [sp, #0x8]
0000000000049894	str	x9, [x8, #0x110]
0000000000049898	ldaxr	w8, [x19]
000000000004989c	stlxr	w9, w24, [x19]
00000000000498a0	cbnz	w9, 0x49898
00000000000498a4	cbnz	w24, 0x498c8
00000000000498a8	cmp	w8, #0x1
00000000000498ac	b.ne	0x498c8
00000000000498b0	adr	x8, #0x3d193
00000000000498b4	nop
00000000000498b8	ldarb	w8, [x8]
00000000000498bc	tbz	w8, #0x0, 0x498c8
00000000000498c0	mov	x0, x19
00000000000498c4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000498c8	mov	x0, x21
00000000000498cc	ldp	x29, x30, [sp, #0x60]
00000000000498d0	ldp	x20, x19, [sp, #0x50]
00000000000498d4	ldp	x22, x21, [sp, #0x40]
00000000000498d8	ldp	x24, x23, [sp, #0x30]
00000000000498dc	ldp	x26, x25, [sp, #0x20]
00000000000498e0	add	sp, sp, #0x70
00000000000498e4	ret
00000000000498e8	mov	x21, x0
00000000000498ec	mov	x0, x20
00000000000498f0	blr	x25
00000000000498f4	ldr	x8, [x0]
00000000000498f8	ldr	x9, [sp, #0x8]
00000000000498fc	str	x9, [x8, #0x110]
0000000000049900	ldaxr	w8, [x19]
0000000000049904	stlxr	w9, w24, [x19]
0000000000049908	cbnz	w9, 0x49900
000000000004990c	cbnz	w24, 0x49930
0000000000049910	cmp	w8, #0x1
0000000000049914	b.ne	0x49930
0000000000049918	adr	x8, #0x3d12b
000000000004991c	nop
0000000000049920	ldarb	w8, [x8]
0000000000049924	tbz	w8, #0x0, 0x49930
0000000000049928	mov	x0, x19
000000000004992c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049930	mov	x0, x21
0000000000049934	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KListAsNSArray count]:
0000000000049938	stp	x22, x21, [sp, #-0x30]!
000000000004993c	stp	x20, x19, [sp, #0x10]
0000000000049940	stp	x29, x30, [sp, #0x20]
0000000000049944	add	x29, sp, #0x20
0000000000049948	mov	x20, x0
000000000004994c	bl	_Kotlin_initRuntimeIfNeeded
0000000000049950	adrp	x0, 35 ; 0x6c000
0000000000049954	add	x0, x0, #0xbb0
0000000000049958	ldr	x8, [x0]
000000000004995c	blr	x8
0000000000049960	ldr	x8, [x0]
0000000000049964	add	x19, x8, #0x138
0000000000049968	ldaxr	w21, [x19]
000000000004996c	stlxr	w8, wzr, [x19]
0000000000049970	cbnz	w8, 0x49968
0000000000049974	cmp	w21, #0x1
0000000000049978	b.ne	0x49994
000000000004997c	adr	x8, #0x3d0c7
0000000000049980	nop
0000000000049984	ldarb	w8, [x8]
0000000000049988	tbz	w8, #0x0, 0x49994
000000000004998c	mov	x0, x19
0000000000049990	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049994	nop
0000000000049998	ldrsw	x22, _OBJC_IVAR_$_NBKKListAsNSArray.listHolder
000000000004999c	bl	_Kotlin_initRuntimeIfNeeded
00000000000499a0	ldr	x0, [x20, x22]
00000000000499a4	bl	_Kotlin_Collection_getSize
00000000000499a8	mov	x20, x0
00000000000499ac	ldaxr	w8, [x19]
00000000000499b0	stlxr	w9, w21, [x19]
00000000000499b4	cbnz	w9, 0x499ac
00000000000499b8	cbnz	w21, 0x499dc
00000000000499bc	cmp	w8, #0x1
00000000000499c0	b.ne	0x499dc
00000000000499c4	adr	x8, #0x3d07f
00000000000499c8	nop
00000000000499cc	ldarb	w8, [x8]
00000000000499d0	tbz	w8, #0x0, 0x499dc
00000000000499d4	mov	x0, x19
00000000000499d8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000499dc	sxtw	x0, w20
00000000000499e0	ldp	x29, x30, [sp, #0x20]
00000000000499e4	ldp	x20, x19, [sp, #0x10]
00000000000499e8	ldp	x22, x21, [sp], #0x30
00000000000499ec	ret
00000000000499f0	mov	x20, x0
00000000000499f4	ldaxr	w8, [x19]
00000000000499f8	stlxr	w9, w21, [x19]
00000000000499fc	cbnz	w9, 0x499f4
0000000000049a00	cbnz	w21, 0x49a24
0000000000049a04	cmp	w8, #0x1
0000000000049a08	b.ne	0x49a24
0000000000049a0c	adr	x8, #0x3d037
0000000000049a10	nop
0000000000049a14	ldarb	w8, [x8]
0000000000049a18	tbz	w8, #0x0, 0x49a24
0000000000049a1c	mov	x0, x19
0000000000049a20	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049a24	mov	x0, x20
0000000000049a28	bl	0x517a0 ; symbol stub for: __Unwind_Resume
+[KListAsNSArray createRetainedWithKList:]:
0000000000049a2c	stp	x22, x21, [sp, #-0x30]!
0000000000049a30	stp	x20, x19, [sp, #0x10]
0000000000049a34	stp	x29, x30, [sp, #0x20]
0000000000049a38	add	x29, sp, #0x20
0000000000049a3c	mov	x19, x2
0000000000049a40	nop
0000000000049a44	ldr	x0, #0x20e9c ; Objc class ref: NBKKListAsNSArray
0000000000049a48	bl	0x51b00 ; symbol stub for: _objc_alloc
0000000000049a4c	nop
0000000000049a50	ldr	x1, #0x20c10 ; Objc selector ref: init
0000000000049a54	bl	0x51b78 ; Objc message: +[NBKKListAsNSArray init]
0000000000049a58	mov	x20, x0
0000000000049a5c	nop
0000000000049a60	ldrsw	x8, _OBJC_IVAR_$_NBKKListAsNSArray.listHolder
0000000000049a64	add	x21, x0, x8
0000000000049a68	adrp	x0, 35 ; 0x6c000
0000000000049a6c	add	x0, x0, #0xbb0
0000000000049a70	ldr	x8, [x0]
0000000000049a74	blr	x8
0000000000049a78	ldr	x22, [x0]
0000000000049a7c	mov	w0, #0x1
0000000000049a80	mov	w1, #0x28
0000000000049a84	bl	0x519e0 ; symbol stub for: _calloc
0000000000049a88	ldr	x8, [x22, #0xa8]!
0000000000049a8c	sub	x9, x22, #0x8
0000000000049a90	stp	x8, x22, [x0]
0000000000049a94	str	x0, [x8, #0x8]
0000000000049a98	str	x0, [x22]
0000000000049a9c	ldr	x8, [x22, #0x10]
0000000000049aa0	add	x8, x8, #0x1
0000000000049aa4	str	x8, [x22, #0x10]
0000000000049aa8	stp	x9, x0, [x0, #0x18]
0000000000049aac	str	x19, [x0, #0x10]!
0000000000049ab0	stp	x19, x0, [x21]
0000000000049ab4	mov	x0, x20
0000000000049ab8	ldp	x29, x30, [sp, #0x20]
0000000000049abc	ldp	x20, x19, [sp, #0x10]
0000000000049ac0	ldp	x22, x21, [sp], #0x30
0000000000049ac4	ret
-[KMutableListAsNSMutableArray dealloc]:
0000000000049ac8	sub	sp, sp, #0x60
0000000000049acc	stp	x26, x25, [sp, #0x10]
0000000000049ad0	stp	x24, x23, [sp, #0x20]
0000000000049ad4	stp	x22, x21, [sp, #0x30]
0000000000049ad8	stp	x20, x19, [sp, #0x40]
0000000000049adc	stp	x29, x30, [sp, #0x50]
0000000000049ae0	add	x29, sp, #0x50
0000000000049ae4	mov	x19, x0
0000000000049ae8	nop
0000000000049aec	ldrsw	x8, _OBJC_IVAR_$_NBKKMutableListAsNSMutableArray.listHolder
0000000000049af0	add	x24, x0, x8
0000000000049af4	bl	_Kotlin_initRuntimeIfNeeded
0000000000049af8	adrp	x21, 35 ; 0x6c000
0000000000049afc	add	x21, x21, #0xbb0
0000000000049b00	ldr	x25, [x21]
0000000000049b04	mov	x0, x21
0000000000049b08	blr	x25
0000000000049b0c	ldr	x8, [x0]
0000000000049b10	add	x20, x8, #0x138
0000000000049b14	ldaxr	w22, [x20]
0000000000049b18	stlxr	w8, wzr, [x20]
0000000000049b1c	cbnz	w8, 0x49b14
0000000000049b20	adr	x23, #0x3cf23
0000000000049b24	nop
0000000000049b28	cmp	w22, #0x1
0000000000049b2c	b.ne	0x49b40
0000000000049b30	ldarb	w8, [x23]
0000000000049b34	tbz	w8, #0x0, 0x49b40
0000000000049b38	mov	x0, x20
0000000000049b3c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049b40	ldr	x8, [x24]
0000000000049b44	cbz	x8, 0x49b60
0000000000049b48	ldr	x1, [x24, #0x8]
0000000000049b4c	mov	x0, x21
0000000000049b50	blr	x25
0000000000049b54	ldr	x8, [x0]
0000000000049b58	add	x0, x8, #0x8
0000000000049b5c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000049b60	ldaxr	w8, [x20]
0000000000049b64	stlxr	w9, w22, [x20]
0000000000049b68	cbnz	w9, 0x49b60
0000000000049b6c	cbnz	w22, 0x49b88
0000000000049b70	cmp	w8, #0x1
0000000000049b74	b.ne	0x49b88
0000000000049b78	ldarb	w8, [x23]
0000000000049b7c	tbz	w8, #0x0, 0x49b88
0000000000049b80	mov	x0, x20
0000000000049b84	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049b88	nop
0000000000049b8c	ldr	x8, #0x20dac ; Objc class ref: NBKKMutableListAsNSMutableArray
0000000000049b90	stp	x19, x8, [sp]
0000000000049b94	nop
0000000000049b98	ldr	x1, #0x20a88 ; Objc selector ref: dealloc
0000000000049b9c	mov	x0, sp
0000000000049ba0	bl	0x51b84 ; Objc message: -[[x0 super] dealloc]
0000000000049ba4	ldp	x29, x30, [sp, #0x50]
0000000000049ba8	ldp	x20, x19, [sp, #0x40]
0000000000049bac	ldp	x22, x21, [sp, #0x30]
0000000000049bb0	ldp	x24, x23, [sp, #0x20]
0000000000049bb4	ldp	x26, x25, [sp, #0x10]
0000000000049bb8	add	sp, sp, #0x60
0000000000049bbc	ret
-[KMutableListAsNSMutableArray toKotlin:]:
0000000000049bc0	stp	x22, x21, [sp, #-0x30]!
0000000000049bc4	stp	x20, x19, [sp, #0x10]
0000000000049bc8	stp	x29, x30, [sp, #0x20]
0000000000049bcc	add	x29, sp, #0x20
0000000000049bd0	mov	x19, x2
0000000000049bd4	mov	x20, x0
0000000000049bd8	nop
0000000000049bdc	ldrsw	x21, _OBJC_IVAR_$_NBKKMutableListAsNSMutableArray.listHolder
0000000000049be0	bl	_Kotlin_initRuntimeIfNeeded
0000000000049be4	ldr	x0, [x20, x21]
0000000000049be8	str	x0, [x19]
0000000000049bec	ldp	x29, x30, [sp, #0x20]
0000000000049bf0	ldp	x20, x19, [sp, #0x10]
0000000000049bf4	ldp	x22, x21, [sp], #0x30
0000000000049bf8	ret
-[KMutableListAsNSMutableArray objectAtIndex:]:
0000000000049bfc	sub	sp, sp, #0x70
0000000000049c00	stp	x26, x25, [sp, #0x20]
0000000000049c04	stp	x24, x23, [sp, #0x30]
0000000000049c08	stp	x22, x21, [sp, #0x40]
0000000000049c0c	stp	x20, x19, [sp, #0x50]
0000000000049c10	stp	x29, x30, [sp, #0x60]
0000000000049c14	add	x29, sp, #0x60
0000000000049c18	mov	x21, x2
0000000000049c1c	mov	x22, x0
0000000000049c20	bl	_Kotlin_initRuntimeIfNeeded
0000000000049c24	adrp	x20, 35 ; 0x6c000
0000000000049c28	add	x20, x20, #0xbb0
0000000000049c2c	ldr	x25, [x20]
0000000000049c30	mov	x0, x20
0000000000049c34	blr	x25
0000000000049c38	ldr	x8, [x0]
0000000000049c3c	add	x19, x8, #0x138
0000000000049c40	ldaxr	w24, [x19]
0000000000049c44	stlxr	w8, wzr, [x19]
0000000000049c48	cbnz	w8, 0x49c40
0000000000049c4c	cmp	w24, #0x1
0000000000049c50	b.ne	0x49c6c
0000000000049c54	adr	x8, #0x3cdef
0000000000049c58	nop
0000000000049c5c	ldarb	w8, [x8]
0000000000049c60	tbz	w8, #0x0, 0x49c6c
0000000000049c64	mov	x0, x19
0000000000049c68	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049c6c	mov	x8, sp
0000000000049c70	add	x23, x8, #0x18
0000000000049c74	str	xzr, [sp, #0x18]
0000000000049c78	mov	x0, x20
0000000000049c7c	blr	x25
0000000000049c80	ldr	x9, [x0]
0000000000049c84	ldr	x10, [x9, #0x110]
0000000000049c88	str	x8, [x9, #0x110]
0000000000049c8c	mov	x8, #0x400000000
0000000000049c90	stp	x10, x8, [sp, #0x8]
0000000000049c94	nop
0000000000049c98	ldrsw	x26, _OBJC_IVAR_$_NBKKMutableListAsNSMutableArray.listHolder
0000000000049c9c	bl	_Kotlin_initRuntimeIfNeeded
0000000000049ca0	ldr	x0, [x22, x26]
0000000000049ca4	mov	x1, x21
0000000000049ca8	mov	x2, x23
0000000000049cac	bl	_Kotlin_List_get
0000000000049cb0	cbz	x0, 0x49cbc
0000000000049cb4	bl	_Kotlin_ObjCExport_refToObjC
0000000000049cb8	b	0x49cd0
0000000000049cbc	nop
0000000000049cc0	ldr	x0, #0x20bf8 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000049cc4	nop
0000000000049cc8	ldr	x1, #0x20a90 ; Objc selector ref: null
0000000000049ccc	bl	0x51b78 ; Objc message: +[NSNull null]
0000000000049cd0	mov	x21, x0
0000000000049cd4	mov	x0, x20
0000000000049cd8	blr	x25
0000000000049cdc	ldr	x8, [x0]
0000000000049ce0	ldr	x9, [sp, #0x8]
0000000000049ce4	str	x9, [x8, #0x110]
0000000000049ce8	ldaxr	w8, [x19]
0000000000049cec	stlxr	w9, w24, [x19]
0000000000049cf0	cbnz	w9, 0x49ce8
0000000000049cf4	cbnz	w24, 0x49d18
0000000000049cf8	cmp	w8, #0x1
0000000000049cfc	b.ne	0x49d18
0000000000049d00	adr	x8, #0x3cd43
0000000000049d04	nop
0000000000049d08	ldarb	w8, [x8]
0000000000049d0c	tbz	w8, #0x0, 0x49d18
0000000000049d10	mov	x0, x19
0000000000049d14	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049d18	mov	x0, x21
0000000000049d1c	ldp	x29, x30, [sp, #0x60]
0000000000049d20	ldp	x20, x19, [sp, #0x50]
0000000000049d24	ldp	x22, x21, [sp, #0x40]
0000000000049d28	ldp	x24, x23, [sp, #0x30]
0000000000049d2c	ldp	x26, x25, [sp, #0x20]
0000000000049d30	add	sp, sp, #0x70
0000000000049d34	ret
0000000000049d38	mov	x21, x0
0000000000049d3c	mov	x0, x20
0000000000049d40	blr	x25
0000000000049d44	ldr	x8, [x0]
0000000000049d48	ldr	x9, [sp, #0x8]
0000000000049d4c	str	x9, [x8, #0x110]
0000000000049d50	ldaxr	w8, [x19]
0000000000049d54	stlxr	w9, w24, [x19]
0000000000049d58	cbnz	w9, 0x49d50
0000000000049d5c	cbnz	w24, 0x49d80
0000000000049d60	cmp	w8, #0x1
0000000000049d64	b.ne	0x49d80
0000000000049d68	adr	x8, #0x3ccdb
0000000000049d6c	nop
0000000000049d70	ldarb	w8, [x8]
0000000000049d74	tbz	w8, #0x0, 0x49d80
0000000000049d78	mov	x0, x19
0000000000049d7c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049d80	mov	x0, x21
0000000000049d84	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray count]:
0000000000049d88	stp	x22, x21, [sp, #-0x30]!
0000000000049d8c	stp	x20, x19, [sp, #0x10]
0000000000049d90	stp	x29, x30, [sp, #0x20]
0000000000049d94	add	x29, sp, #0x20
0000000000049d98	mov	x20, x0
0000000000049d9c	bl	_Kotlin_initRuntimeIfNeeded
0000000000049da0	adrp	x0, 35 ; 0x6c000
0000000000049da4	add	x0, x0, #0xbb0
0000000000049da8	ldr	x8, [x0]
0000000000049dac	blr	x8
0000000000049db0	ldr	x8, [x0]
0000000000049db4	add	x19, x8, #0x138
0000000000049db8	ldaxr	w21, [x19]
0000000000049dbc	stlxr	w8, wzr, [x19]
0000000000049dc0	cbnz	w8, 0x49db8
0000000000049dc4	cmp	w21, #0x1
0000000000049dc8	b.ne	0x49de4
0000000000049dcc	adr	x8, #0x3cc77
0000000000049dd0	nop
0000000000049dd4	ldarb	w8, [x8]
0000000000049dd8	tbz	w8, #0x0, 0x49de4
0000000000049ddc	mov	x0, x19
0000000000049de0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049de4	nop
0000000000049de8	ldrsw	x22, _OBJC_IVAR_$_NBKKMutableListAsNSMutableArray.listHolder
0000000000049dec	bl	_Kotlin_initRuntimeIfNeeded
0000000000049df0	ldr	x0, [x20, x22]
0000000000049df4	bl	_Kotlin_Collection_getSize
0000000000049df8	mov	x20, x0
0000000000049dfc	ldaxr	w8, [x19]
0000000000049e00	stlxr	w9, w21, [x19]
0000000000049e04	cbnz	w9, 0x49dfc
0000000000049e08	cbnz	w21, 0x49e2c
0000000000049e0c	cmp	w8, #0x1
0000000000049e10	b.ne	0x49e2c
0000000000049e14	adr	x8, #0x3cc2f
0000000000049e18	nop
0000000000049e1c	ldarb	w8, [x8]
0000000000049e20	tbz	w8, #0x0, 0x49e2c
0000000000049e24	mov	x0, x19
0000000000049e28	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049e2c	sxtw	x0, w20
0000000000049e30	ldp	x29, x30, [sp, #0x20]
0000000000049e34	ldp	x20, x19, [sp, #0x10]
0000000000049e38	ldp	x22, x21, [sp], #0x30
0000000000049e3c	ret
0000000000049e40	mov	x20, x0
0000000000049e44	ldaxr	w8, [x19]
0000000000049e48	stlxr	w9, w21, [x19]
0000000000049e4c	cbnz	w9, 0x49e44
0000000000049e50	cbnz	w21, 0x49e74
0000000000049e54	cmp	w8, #0x1
0000000000049e58	b.ne	0x49e74
0000000000049e5c	adr	x8, #0x3cbe7
0000000000049e60	nop
0000000000049e64	ldarb	w8, [x8]
0000000000049e68	tbz	w8, #0x0, 0x49e74
0000000000049e6c	mov	x0, x19
0000000000049e70	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049e74	mov	x0, x20
0000000000049e78	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray insertObject:atIndex:]:
0000000000049e7c	sub	sp, sp, #0x90
0000000000049e80	stp	x26, x25, [sp, #0x40]
0000000000049e84	stp	x24, x23, [sp, #0x50]
0000000000049e88	stp	x22, x21, [sp, #0x60]
0000000000049e8c	stp	x20, x19, [sp, #0x70]
0000000000049e90	stp	x29, x30, [sp, #0x80]
0000000000049e94	add	x29, sp, #0x80
0000000000049e98	mov	x21, x3
0000000000049e9c	mov	x22, x2
0000000000049ea0	mov	x23, x0
0000000000049ea4	bl	_Kotlin_initRuntimeIfNeeded
0000000000049ea8	adrp	x20, 35 ; 0x6c000
0000000000049eac	add	x20, x20, #0xbb0
0000000000049eb0	ldr	x25, [x20]
0000000000049eb4	mov	x0, x20
0000000000049eb8	blr	x25
0000000000049ebc	ldr	x8, [x0]
0000000000049ec0	add	x19, x8, #0x138
0000000000049ec4	ldaxr	w24, [x19]
0000000000049ec8	stlxr	w8, wzr, [x19]
0000000000049ecc	cbnz	w8, 0x49ec4
0000000000049ed0	cmp	w24, #0x1
0000000000049ed4	b.ne	0x49ef0
0000000000049ed8	adr	x8, #0x3cb6b
0000000000049edc	nop
0000000000049ee0	ldarb	w8, [x8]
0000000000049ee4	tbz	w8, #0x0, 0x49ef0
0000000000049ee8	mov	x0, x19
0000000000049eec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049ef0	add	x26, sp, #0x8
0000000000049ef4	str	xzr, [sp, #0x20]
0000000000049ef8	mov	x0, x20
0000000000049efc	blr	x25
0000000000049f00	ldr	x8, [x0]
0000000000049f04	ldr	x9, [x8, #0x110]
0000000000049f08	str	x26, [x8, #0x110]
0000000000049f0c	mov	x8, #0x400000000
0000000000049f10	stp	x9, x8, [sp, #0x10]
0000000000049f14	nop
0000000000049f18	ldr	x0, #0x209a0 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000049f1c	nop
0000000000049f20	ldr	x1, #0x20838 ; Objc selector ref: null
0000000000049f24	bl	0x51b78 ; Objc message: +[NSNull null]
0000000000049f28	cmp	x0, x22
0000000000049f2c	ccmp	x22, #0x0, #0x4, ne
0000000000049f30	b.ne	0x49f40
0000000000049f34	mov	x22, #0x0
0000000000049f38	str	xzr, [sp, #0x20]
0000000000049f3c	b	0x49f58
0000000000049f40	add	x2, x26, #0x18
0000000000049f44	nop
0000000000049f48	ldr	x1, #0x3cd50
0000000000049f4c	mov	x0, x22
0000000000049f50	bl	0x51b78 ; Objc message: -[x0 null]
0000000000049f54	mov	x22, x0
0000000000049f58	bl	_Kotlin_initRuntimeIfNeeded
0000000000049f5c	lsr	x8, x21, #31
0000000000049f60	cbnz	x8, 0x4a0c4
0000000000049f64	nop
0000000000049f68	ldrsw	x8, _OBJC_IVAR_$_NBKKMutableListAsNSMutableArray.listHolder
0000000000049f6c	ldr	x23, [x23, x8]
0000000000049f70	str	xzr, [sp, #0x28]
0000000000049f74	mov	x0, x20
0000000000049f78	blr	x25
0000000000049f7c	ldr	x8, [x0]
0000000000049f80	ldr	x9, [x8, #0x110]
0000000000049f84	add	x10, sp, #0x28
0000000000049f88	str	x10, [x8, #0x110]
0000000000049f8c	mov	x8, #0x300000000
0000000000049f90	stp	x9, x8, [sp, #0x30]
0000000000049f94	adr	x26, #0x3caaf
0000000000049f98	nop
0000000000049f9c	ldarb	w8, [x26]
0000000000049fa0	tbz	w8, #0x0, 0x49fa8
0000000000049fa4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000049fa8	ldr	x8, [x23]
0000000000049fac	and	x8, x8, #0xfffffffffffffffc
0000000000049fb0	ldr	x8, [x8]
0000000000049fb4	ldr	w9, [x8, #0x3c]
0000000000049fb8	ldr	x8, [x8, #0x40]
0000000000049fbc	tbnz	w9, #0x1f, 0x49fcc
0000000000049fc0	mov	w10, #0x16
0000000000049fc4	and	x9, x9, x10
0000000000049fc8	b	0x4a050
0000000000049fcc	neg	w10, w9
0000000000049fd0	mvn	w9, w9
0000000000049fd4	cmp	w10, #0x9
0000000000049fd8	b.ge	0x4a010
0000000000049fdc	cmp	w10, #0x2
0000000000049fe0	b.lt	0x4a044
0000000000049fe4	mov	x10, #0x0
0000000000049fe8	mov	x11, x8
0000000000049fec	ldr	w12, [x11]
0000000000049ff0	cmp	w12, #0x15
0000000000049ff4	b.gt	0x4a04c
0000000000049ff8	add	x10, x10, #0x1
0000000000049ffc	add	x11, x11, #0x10
000000000004a000	cmp	x9, x10
000000000004a004	b.ne	0x49fec
000000000004a008	mov	x10, x9
000000000004a00c	b	0x4a04c
000000000004a010	mov	w10, #0x0
000000000004a014	add	w11, w9, w10
000000000004a018	cmp	w11, #0x0
000000000004a01c	cinc	w11, w11, lt
000000000004a020	asr	w11, w11, #1
000000000004a024	sbfiz	x12, x11, #4, #32
000000000004a028	ldr	w12, [x8, x12]
000000000004a02c	cmp	w12, #0x16
000000000004a030	csinc	w10, w10, w11, ge
000000000004a034	csel	w9, w9, w11, lt
000000000004a038	cmp	w10, w9
000000000004a03c	b.lt	0x4a014
000000000004a040	b	0x4a04c
000000000004a044	mov	w10, #0x0
000000000004a048	b	0x4a04c
000000000004a04c	sxtw	x9, w10
000000000004a050	add	x8, x8, x9, lsl #4
000000000004a054	ldr	x8, [x8, #0x8]
000000000004a058	ldr	x8, [x8, #0x8]
000000000004a05c	mov	x0, x23
000000000004a060	mov	x1, x21
000000000004a064	mov	x2, x22
000000000004a068	blr	x8
000000000004a06c	mov	x0, x20
000000000004a070	blr	x25
000000000004a074	ldr	x8, [x0]
000000000004a078	ldr	x9, [sp, #0x10]
000000000004a07c	str	x9, [x8, #0x110]
000000000004a080	ldaxr	w8, [x19]
000000000004a084	stlxr	w9, w24, [x19]
000000000004a088	cbnz	w9, 0x4a080
000000000004a08c	cbnz	w24, 0x4a0a8
000000000004a090	cmp	w8, #0x1
000000000004a094	b.ne	0x4a0a8
000000000004a098	ldarb	w8, [x26]
000000000004a09c	tbz	w8, #0x0, 0x4a0a8
000000000004a0a0	mov	x0, x19
000000000004a0a4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a0a8	ldp	x29, x30, [sp, #0x80]
000000000004a0ac	ldp	x20, x19, [sp, #0x70]
000000000004a0b0	ldp	x22, x21, [sp, #0x60]
000000000004a0b4	ldp	x24, x23, [sp, #0x50]
000000000004a0b8	ldp	x26, x25, [sp, #0x40]
000000000004a0bc	add	sp, sp, #0x90
000000000004a0c0	ret
000000000004a0c4	bl	_ThrowArrayIndexOutOfBoundsException
000000000004a0c8	brk	#0x1
000000000004a0cc	mov	x21, x0
000000000004a0d0	mov	x0, x20
000000000004a0d4	blr	x25
000000000004a0d8	ldr	x8, [x0]
000000000004a0dc	ldr	x9, [sp, #0x30]
000000000004a0e0	str	x9, [x8, #0x110]
000000000004a0e4	b	0x4a0f8
000000000004a0e8	mov	x21, x0
000000000004a0ec	mov	x0, x20
000000000004a0f0	blr	x25
000000000004a0f4	ldr	x8, [x0]
000000000004a0f8	ldr	x9, [sp, #0x10]
000000000004a0fc	str	x9, [x8, #0x110]
000000000004a100	ldaxr	w8, [x19]
000000000004a104	stlxr	w9, w24, [x19]
000000000004a108	cbnz	w9, 0x4a100
000000000004a10c	cbnz	w24, 0x4a130
000000000004a110	cmp	w8, #0x1
000000000004a114	b.ne	0x4a130
000000000004a118	adr	x8, #0x3c92b
000000000004a11c	nop
000000000004a120	ldarb	w8, [x8]
000000000004a124	tbz	w8, #0x0, 0x4a130
000000000004a128	mov	x0, x19
000000000004a12c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a130	mov	x0, x21
000000000004a134	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray removeObjectAtIndex:]:
000000000004a138	sub	sp, sp, #0x70
000000000004a13c	stp	x26, x25, [sp, #0x20]
000000000004a140	stp	x24, x23, [sp, #0x30]
000000000004a144	stp	x22, x21, [sp, #0x40]
000000000004a148	stp	x20, x19, [sp, #0x50]
000000000004a14c	stp	x29, x30, [sp, #0x60]
000000000004a150	add	x29, sp, #0x60
000000000004a154	mov	x21, x2
000000000004a158	mov	x22, x0
000000000004a15c	bl	_Kotlin_initRuntimeIfNeeded
000000000004a160	adrp	x20, 34 ; 0x6c000
000000000004a164	add	x20, x20, #0xbb0
000000000004a168	ldr	x26, [x20]
000000000004a16c	mov	x0, x20
000000000004a170	blr	x26
000000000004a174	ldr	x8, [x0]
000000000004a178	add	x19, x8, #0x138
000000000004a17c	ldaxr	w25, [x19]
000000000004a180	stlxr	w8, wzr, [x19]
000000000004a184	cbnz	w8, 0x4a17c
000000000004a188	adr	x24, #0x3c8bb
000000000004a18c	nop
000000000004a190	cmp	w25, #0x1
000000000004a194	b.ne	0x4a1a8
000000000004a198	ldarb	w8, [x24]
000000000004a19c	tbz	w8, #0x0, 0x4a1a8
000000000004a1a0	mov	x0, x19
000000000004a1a4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a1a8	bl	_Kotlin_initRuntimeIfNeeded
000000000004a1ac	lsr	x8, x21, #31
000000000004a1b0	cbnz	x8, 0x4a314
000000000004a1b4	nop
000000000004a1b8	ldrsw	x8, _OBJC_IVAR_$_NBKKMutableListAsNSMutableArray.listHolder
000000000004a1bc	ldr	x22, [x22, x8]
000000000004a1c0	movi.16b	v0, #0x0
000000000004a1c4	stp	q0, q0, [sp]
000000000004a1c8	mov	x8, sp
000000000004a1cc	add	x23, x8, #0x18
000000000004a1d0	mov	x0, x20
000000000004a1d4	blr	x26
000000000004a1d8	ldr	x9, [x0]
000000000004a1dc	ldr	x10, [x9, #0x110]
000000000004a1e0	str	x8, [x9, #0x110]
000000000004a1e4	mov	x8, #0x400000000
000000000004a1e8	stp	x10, x8, [sp, #0x8]
000000000004a1ec	ldarb	w8, [x24]
000000000004a1f0	tbz	w8, #0x0, 0x4a1f8
000000000004a1f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004a1f8	ldr	x8, [x22]
000000000004a1fc	and	x8, x8, #0xfffffffffffffffc
000000000004a200	ldr	x8, [x8]
000000000004a204	ldr	w9, [x8, #0x3c]
000000000004a208	ldr	x8, [x8, #0x40]
000000000004a20c	tbnz	w9, #0x1f, 0x4a21c
000000000004a210	mov	w10, #0x16
000000000004a214	and	x9, x9, x10
000000000004a218	b	0x4a2a0
000000000004a21c	neg	w10, w9
000000000004a220	mvn	w9, w9
000000000004a224	cmp	w10, #0x9
000000000004a228	b.ge	0x4a260
000000000004a22c	cmp	w10, #0x2
000000000004a230	b.lt	0x4a294
000000000004a234	mov	x10, #0x0
000000000004a238	mov	x11, x8
000000000004a23c	ldr	w12, [x11]
000000000004a240	cmp	w12, #0x15
000000000004a244	b.gt	0x4a29c
000000000004a248	add	x10, x10, #0x1
000000000004a24c	add	x11, x11, #0x10
000000000004a250	cmp	x9, x10
000000000004a254	b.ne	0x4a23c
000000000004a258	mov	x10, x9
000000000004a25c	b	0x4a29c
000000000004a260	mov	w10, #0x0
000000000004a264	add	w11, w9, w10
000000000004a268	cmp	w11, #0x0
000000000004a26c	cinc	w11, w11, lt
000000000004a270	asr	w11, w11, #1
000000000004a274	sbfiz	x12, x11, #4, #32
000000000004a278	ldr	w12, [x8, x12]
000000000004a27c	cmp	w12, #0x16
000000000004a280	csinc	w10, w10, w11, ge
000000000004a284	csel	w9, w9, w11, lt
000000000004a288	cmp	w10, w9
000000000004a28c	b.lt	0x4a264
000000000004a290	b	0x4a29c
000000000004a294	mov	w10, #0x0
000000000004a298	b	0x4a29c
000000000004a29c	sxtw	x9, w10
000000000004a2a0	add	x8, x8, x9, lsl #4
000000000004a2a4	ldr	x8, [x8, #0x8]
000000000004a2a8	ldr	x8, [x8, #0x48]
000000000004a2ac	mov	x0, x22
000000000004a2b0	mov	x1, x21
000000000004a2b4	mov	x2, x23
000000000004a2b8	blr	x8
000000000004a2bc	mov	x0, x20
000000000004a2c0	blr	x26
000000000004a2c4	ldr	x8, [x0]
000000000004a2c8	ldr	x9, [sp, #0x8]
000000000004a2cc	str	x9, [x8, #0x110]
000000000004a2d0	ldaxr	w8, [x19]
000000000004a2d4	stlxr	w9, w25, [x19]
000000000004a2d8	cbnz	w9, 0x4a2d0
000000000004a2dc	cbnz	w25, 0x4a2f8
000000000004a2e0	cmp	w8, #0x1
000000000004a2e4	b.ne	0x4a2f8
000000000004a2e8	ldarb	w8, [x24]
000000000004a2ec	tbz	w8, #0x0, 0x4a2f8
000000000004a2f0	mov	x0, x19
000000000004a2f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a2f8	ldp	x29, x30, [sp, #0x60]
000000000004a2fc	ldp	x20, x19, [sp, #0x50]
000000000004a300	ldp	x22, x21, [sp, #0x40]
000000000004a304	ldp	x24, x23, [sp, #0x30]
000000000004a308	ldp	x26, x25, [sp, #0x20]
000000000004a30c	add	sp, sp, #0x70
000000000004a310	ret
000000000004a314	bl	_ThrowArrayIndexOutOfBoundsException
000000000004a318	brk	#0x1
000000000004a31c	mov	x21, x0
000000000004a320	mov	x0, x20
000000000004a324	blr	x26
000000000004a328	ldr	x8, [x0]
000000000004a32c	ldr	x9, [sp, #0x8]
000000000004a330	str	x9, [x8, #0x110]
000000000004a334	b	0x4a33c
000000000004a338	mov	x21, x0
000000000004a33c	ldaxr	w8, [x19]
000000000004a340	stlxr	w9, w25, [x19]
000000000004a344	cbnz	w9, 0x4a33c
000000000004a348	cbnz	w25, 0x4a364
000000000004a34c	cmp	w8, #0x1
000000000004a350	b.ne	0x4a364
000000000004a354	ldarb	w8, [x24]
000000000004a358	tbz	w8, #0x0, 0x4a364
000000000004a35c	mov	x0, x19
000000000004a360	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a364	mov	x0, x21
000000000004a368	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray addObject:]:
000000000004a36c	sub	sp, sp, #0x70
000000000004a370	stp	x26, x25, [sp, #0x20]
000000000004a374	stp	x24, x23, [sp, #0x30]
000000000004a378	stp	x22, x21, [sp, #0x40]
000000000004a37c	stp	x20, x19, [sp, #0x50]
000000000004a380	stp	x29, x30, [sp, #0x60]
000000000004a384	add	x29, sp, #0x60
000000000004a388	mov	x21, x2
000000000004a38c	mov	x22, x0
000000000004a390	bl	_Kotlin_initRuntimeIfNeeded
000000000004a394	adrp	x20, 34 ; 0x6c000
000000000004a398	add	x20, x20, #0xbb0
000000000004a39c	ldr	x24, [x20]
000000000004a3a0	mov	x0, x20
000000000004a3a4	blr	x24
000000000004a3a8	ldr	x8, [x0]
000000000004a3ac	add	x19, x8, #0x138
000000000004a3b0	ldaxr	w23, [x19]
000000000004a3b4	stlxr	w8, wzr, [x19]
000000000004a3b8	cbnz	w8, 0x4a3b0
000000000004a3bc	cmp	w23, #0x1
000000000004a3c0	b.ne	0x4a3dc
000000000004a3c4	adr	x8, #0x3c67f
000000000004a3c8	nop
000000000004a3cc	ldarb	w8, [x8]
000000000004a3d0	tbz	w8, #0x0, 0x4a3dc
000000000004a3d4	mov	x0, x19
000000000004a3d8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a3dc	mov	x25, sp
000000000004a3e0	str	xzr, [sp, #0x18]
000000000004a3e4	mov	x0, x20
000000000004a3e8	blr	x24
000000000004a3ec	ldr	x8, [x0]
000000000004a3f0	ldr	x9, [x8, #0x110]
000000000004a3f4	str	x25, [x8, #0x110]
000000000004a3f8	mov	x8, #0x400000000
000000000004a3fc	stp	x9, x8, [sp, #0x8]
000000000004a400	nop
000000000004a404	ldrsw	x26, _OBJC_IVAR_$_NBKKMutableListAsNSMutableArray.listHolder
000000000004a408	bl	_Kotlin_initRuntimeIfNeeded
000000000004a40c	ldr	x22, [x22, x26]
000000000004a410	nop
000000000004a414	ldr	x0, #0x204a4 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004a418	nop
000000000004a41c	ldr	x1, #0x2033c ; Objc selector ref: null
000000000004a420	bl	0x51b78 ; Objc message: +[NSNull null]
000000000004a424	cmp	x0, x21
000000000004a428	b.eq	0x4a44c
000000000004a42c	cbz	x21, 0x4a44c
000000000004a430	add	x2, x25, #0x18
000000000004a434	nop
000000000004a438	ldr	x1, #0x3c860
000000000004a43c	mov	x0, x21
000000000004a440	bl	0x51b78 ; Objc message: -[x0 null]
000000000004a444	mov	x1, x0
000000000004a448	b	0x4a454
000000000004a44c	mov	x1, #0x0
000000000004a450	str	xzr, [sp, #0x18]
000000000004a454	mov	x0, x22
000000000004a458	bl	_Kotlin_MutableCollection_addObject
000000000004a45c	mov	x0, x20
000000000004a460	blr	x24
000000000004a464	ldr	x8, [x0]
000000000004a468	ldr	x9, [sp, #0x8]
000000000004a46c	str	x9, [x8, #0x110]
000000000004a470	ldaxr	w8, [x19]
000000000004a474	stlxr	w9, w23, [x19]
000000000004a478	cbnz	w9, 0x4a470
000000000004a47c	cbnz	w23, 0x4a4a0
000000000004a480	cmp	w8, #0x1
000000000004a484	b.ne	0x4a4a0
000000000004a488	adr	x8, #0x3c5bb
000000000004a48c	nop
000000000004a490	ldarb	w8, [x8]
000000000004a494	tbz	w8, #0x0, 0x4a4a0
000000000004a498	mov	x0, x19
000000000004a49c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a4a0	ldp	x29, x30, [sp, #0x60]
000000000004a4a4	ldp	x20, x19, [sp, #0x50]
000000000004a4a8	ldp	x22, x21, [sp, #0x40]
000000000004a4ac	ldp	x24, x23, [sp, #0x30]
000000000004a4b0	ldp	x26, x25, [sp, #0x20]
000000000004a4b4	add	sp, sp, #0x70
000000000004a4b8	ret
000000000004a4bc	mov	x21, x0
000000000004a4c0	mov	x0, x20
000000000004a4c4	blr	x24
000000000004a4c8	ldr	x8, [x0]
000000000004a4cc	ldr	x9, [sp, #0x8]
000000000004a4d0	str	x9, [x8, #0x110]
000000000004a4d4	ldaxr	w8, [x19]
000000000004a4d8	stlxr	w9, w23, [x19]
000000000004a4dc	cbnz	w9, 0x4a4d4
000000000004a4e0	cbnz	w23, 0x4a504
000000000004a4e4	cmp	w8, #0x1
000000000004a4e8	b.ne	0x4a504
000000000004a4ec	adr	x8, #0x3c557
000000000004a4f0	nop
000000000004a4f4	ldarb	w8, [x8]
000000000004a4f8	tbz	w8, #0x0, 0x4a504
000000000004a4fc	mov	x0, x19
000000000004a500	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a504	mov	x0, x21
000000000004a508	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray removeLastObject]:
000000000004a50c	sub	sp, sp, #0x70
000000000004a510	stp	x26, x25, [sp, #0x20]
000000000004a514	stp	x24, x23, [sp, #0x30]
000000000004a518	stp	x22, x21, [sp, #0x40]
000000000004a51c	stp	x20, x19, [sp, #0x50]
000000000004a520	stp	x29, x30, [sp, #0x60]
000000000004a524	add	x29, sp, #0x60
000000000004a528	mov	x21, x0
000000000004a52c	bl	_Kotlin_initRuntimeIfNeeded
000000000004a530	adrp	x20, 34 ; 0x6c000
000000000004a534	add	x20, x20, #0xbb0
000000000004a538	ldr	x24, [x20]
000000000004a53c	mov	x0, x20
000000000004a540	blr	x24
000000000004a544	ldr	x8, [x0]
000000000004a548	add	x19, x8, #0x138
000000000004a54c	ldaxr	w23, [x19]
000000000004a550	stlxr	w8, wzr, [x19]
000000000004a554	cbnz	w8, 0x4a54c
000000000004a558	adr	x22, #0x3c4eb
000000000004a55c	nop
000000000004a560	cmp	w23, #0x1
000000000004a564	b.ne	0x4a578
000000000004a568	ldarb	w8, [x22]
000000000004a56c	tbz	w8, #0x0, 0x4a578
000000000004a570	mov	x0, x19
000000000004a574	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a578	nop
000000000004a57c	ldrsw	x25, _OBJC_IVAR_$_NBKKMutableListAsNSMutableArray.listHolder
000000000004a580	bl	_Kotlin_initRuntimeIfNeeded
000000000004a584	ldr	x21, [x21, x25]
000000000004a588	movi.16b	v0, #0x0
000000000004a58c	stp	q0, q0, [sp]
000000000004a590	mov	x25, sp
000000000004a594	mov	x0, x20
000000000004a598	blr	x24
000000000004a59c	ldr	x8, [x0]
000000000004a5a0	ldr	x9, [x8, #0x110]
000000000004a5a4	str	x25, [x8, #0x110]
000000000004a5a8	mov	x8, #0x400000000
000000000004a5ac	stp	x9, x8, [sp, #0x8]
000000000004a5b0	ldarb	w8, [x22]
000000000004a5b4	tbz	w8, #0x0, 0x4a5bc
000000000004a5b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004a5bc	mov	x0, x21
000000000004a5c0	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0ยง<kotlin.Any?>}kotlin.Int"
000000000004a5c4	mov	x1, x0
000000000004a5c8	add	x2, x25, #0x18
000000000004a5cc	ldr	x8, [x21]
000000000004a5d0	and	x8, x8, #0xfffffffffffffffc
000000000004a5d4	ldr	x8, [x8]
000000000004a5d8	ldr	w9, [x8, #0x3c]
000000000004a5dc	ldr	x8, [x8, #0x40]
000000000004a5e0	tbnz	w9, #0x1f, 0x4a5f0
000000000004a5e4	mov	w10, #0x16
000000000004a5e8	and	x9, x9, x10
000000000004a5ec	b	0x4a674
000000000004a5f0	neg	w10, w9
000000000004a5f4	mvn	w9, w9
000000000004a5f8	cmp	w10, #0x9
000000000004a5fc	b.ge	0x4a634
000000000004a600	cmp	w10, #0x2
000000000004a604	b.lt	0x4a668
000000000004a608	mov	x10, #0x0
000000000004a60c	mov	x11, x8
000000000004a610	ldr	w12, [x11]
000000000004a614	cmp	w12, #0x15
000000000004a618	b.gt	0x4a670
000000000004a61c	add	x10, x10, #0x1
000000000004a620	add	x11, x11, #0x10
000000000004a624	cmp	x9, x10
000000000004a628	b.ne	0x4a610
000000000004a62c	mov	x10, x9
000000000004a630	b	0x4a670
000000000004a634	mov	w10, #0x0
000000000004a638	add	w11, w9, w10
000000000004a63c	cmp	w11, #0x0
000000000004a640	cinc	w11, w11, lt
000000000004a644	asr	w11, w11, #1
000000000004a648	sbfiz	x12, x11, #4, #32
000000000004a64c	ldr	w12, [x8, x12]
000000000004a650	cmp	w12, #0x16
000000000004a654	csinc	w10, w10, w11, ge
000000000004a658	csel	w9, w9, w11, lt
000000000004a65c	cmp	w10, w9
000000000004a660	b.lt	0x4a638
000000000004a664	b	0x4a670
000000000004a668	mov	w10, #0x0
000000000004a66c	b	0x4a670
000000000004a670	sxtw	x9, w10
000000000004a674	add	x8, x8, x9, lsl #4
000000000004a678	ldr	x8, [x8, #0x8]
000000000004a67c	ldr	x8, [x8, #0x48]
000000000004a680	mov	x0, x21
000000000004a684	blr	x8
000000000004a688	mov	x0, x20
000000000004a68c	blr	x24
000000000004a690	ldr	x8, [x0]
000000000004a694	ldr	x9, [sp, #0x8]
000000000004a698	str	x9, [x8, #0x110]
000000000004a69c	ldaxr	w8, [x19]
000000000004a6a0	stlxr	w9, w23, [x19]
000000000004a6a4	cbnz	w9, 0x4a69c
000000000004a6a8	cbnz	w23, 0x4a6c4
000000000004a6ac	cmp	w8, #0x1
000000000004a6b0	b.ne	0x4a6c4
000000000004a6b4	ldarb	w8, [x22]
000000000004a6b8	tbz	w8, #0x0, 0x4a6c4
000000000004a6bc	mov	x0, x19
000000000004a6c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a6c4	ldp	x29, x30, [sp, #0x60]
000000000004a6c8	ldp	x20, x19, [sp, #0x50]
000000000004a6cc	ldp	x22, x21, [sp, #0x40]
000000000004a6d0	ldp	x24, x23, [sp, #0x30]
000000000004a6d4	ldp	x26, x25, [sp, #0x20]
000000000004a6d8	add	sp, sp, #0x70
000000000004a6dc	ret
000000000004a6e0	mov	x21, x0
000000000004a6e4	mov	x0, x20
000000000004a6e8	blr	x24
000000000004a6ec	ldr	x8, [x0]
000000000004a6f0	ldr	x9, [sp, #0x8]
000000000004a6f4	str	x9, [x8, #0x110]
000000000004a6f8	ldaxr	w8, [x19]
000000000004a6fc	stlxr	w9, w23, [x19]
000000000004a700	cbnz	w9, 0x4a6f8
000000000004a704	cbnz	w23, 0x4a720
000000000004a708	cmp	w8, #0x1
000000000004a70c	b.ne	0x4a720
000000000004a710	ldarb	w8, [x22]
000000000004a714	tbz	w8, #0x0, 0x4a720
000000000004a718	mov	x0, x19
000000000004a71c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a720	mov	x0, x21
000000000004a724	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray replaceObjectAtIndex:withObject:]:
000000000004a728	sub	sp, sp, #0xa0
000000000004a72c	stp	x28, x27, [sp, #0x40]
000000000004a730	stp	x26, x25, [sp, #0x50]
000000000004a734	stp	x24, x23, [sp, #0x60]
000000000004a738	stp	x22, x21, [sp, #0x70]
000000000004a73c	stp	x20, x19, [sp, #0x80]
000000000004a740	stp	x29, x30, [sp, #0x90]
000000000004a744	add	x29, sp, #0x90
000000000004a748	mov	x22, x3
000000000004a74c	mov	x21, x2
000000000004a750	mov	x23, x0
000000000004a754	bl	_Kotlin_initRuntimeIfNeeded
000000000004a758	adrp	x20, 34 ; 0x6c000
000000000004a75c	add	x20, x20, #0xbb0
000000000004a760	ldr	x26, [x20]
000000000004a764	mov	x0, x20
000000000004a768	blr	x26
000000000004a76c	ldr	x8, [x0]
000000000004a770	add	x19, x8, #0x138
000000000004a774	ldaxr	w25, [x19]
000000000004a778	stlxr	w8, wzr, [x19]
000000000004a77c	cbnz	w8, 0x4a774
000000000004a780	cmp	w25, #0x1
000000000004a784	b.ne	0x4a7a0
000000000004a788	adr	x8, #0x3c2bb
000000000004a78c	nop
000000000004a790	ldarb	w8, [x8]
000000000004a794	tbz	w8, #0x0, 0x4a7a0
000000000004a798	mov	x0, x19
000000000004a79c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a7a0	mov	x24, sp
000000000004a7a4	str	xzr, [sp, #0x18]
000000000004a7a8	mov	x0, x20
000000000004a7ac	blr	x26
000000000004a7b0	ldr	x8, [x0]
000000000004a7b4	ldr	x9, [x8, #0x110]
000000000004a7b8	str	x24, [x8, #0x110]
000000000004a7bc	mov	x8, #0x400000000
000000000004a7c0	stp	x9, x8, [sp, #0x8]
000000000004a7c4	nop
000000000004a7c8	ldr	x0, #0x200f0 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004a7cc	nop
000000000004a7d0	ldr	x1, #0x1ff88 ; Objc selector ref: null
000000000004a7d4	bl	0x51b78 ; Objc message: +[NSNull null]
000000000004a7d8	cmp	x0, x22
000000000004a7dc	ccmp	x22, #0x0, #0x4, ne
000000000004a7e0	b.ne	0x4a7f0
000000000004a7e4	mov	x22, #0x0
000000000004a7e8	str	xzr, [sp, #0x18]
000000000004a7ec	b	0x4a808
000000000004a7f0	add	x2, x24, #0x18
000000000004a7f4	nop
000000000004a7f8	ldr	x1, #0x3c4a0
000000000004a7fc	mov	x0, x22
000000000004a800	bl	0x51b78 ; Objc message: -[x0 null]
000000000004a804	mov	x22, x0
000000000004a808	bl	_Kotlin_initRuntimeIfNeeded
000000000004a80c	lsr	x8, x21, #31
000000000004a810	cbnz	x8, 0x4a984
000000000004a814	nop
000000000004a818	ldrsw	x8, _OBJC_IVAR_$_NBKKMutableListAsNSMutableArray.listHolder
000000000004a81c	ldr	x23, [x23, x8]
000000000004a820	movi.16b	v0, #0x0
000000000004a824	stp	q0, q0, [sp, #0x20]
000000000004a828	add	x8, sp, #0x20
000000000004a82c	add	x24, x8, #0x18
000000000004a830	mov	x0, x20
000000000004a834	blr	x26
000000000004a838	ldr	x9, [x0]
000000000004a83c	ldr	x10, [x9, #0x110]
000000000004a840	str	x8, [x9, #0x110]
000000000004a844	mov	x8, #0x400000000
000000000004a848	stp	x10, x8, [sp, #0x28]
000000000004a84c	adr	x27, #0x3c1f7
000000000004a850	nop
000000000004a854	ldarb	w8, [x27]
000000000004a858	tbz	w8, #0x0, 0x4a860
000000000004a85c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004a860	ldr	x8, [x23]
000000000004a864	and	x8, x8, #0xfffffffffffffffc
000000000004a868	ldr	x8, [x8]
000000000004a86c	ldr	w9, [x8, #0x3c]
000000000004a870	ldr	x8, [x8, #0x40]
000000000004a874	tbnz	w9, #0x1f, 0x4a884
000000000004a878	mov	w10, #0x16
000000000004a87c	and	x9, x9, x10
000000000004a880	b	0x4a908
000000000004a884	neg	w10, w9
000000000004a888	mvn	w9, w9
000000000004a88c	cmp	w10, #0x9
000000000004a890	b.ge	0x4a8c8
000000000004a894	cmp	w10, #0x2
000000000004a898	b.lt	0x4a8fc
000000000004a89c	mov	x10, #0x0
000000000004a8a0	mov	x11, x8
000000000004a8a4	ldr	w12, [x11]
000000000004a8a8	cmp	w12, #0x15
000000000004a8ac	b.gt	0x4a904
000000000004a8b0	add	x10, x10, #0x1
000000000004a8b4	add	x11, x11, #0x10
000000000004a8b8	cmp	x9, x10
000000000004a8bc	b.ne	0x4a8a4
000000000004a8c0	mov	x10, x9
000000000004a8c4	b	0x4a904
000000000004a8c8	mov	w10, #0x0
000000000004a8cc	add	w11, w9, w10
000000000004a8d0	cmp	w11, #0x0
000000000004a8d4	cinc	w11, w11, lt
000000000004a8d8	asr	w11, w11, #1
000000000004a8dc	sbfiz	x12, x11, #4, #32
000000000004a8e0	ldr	w12, [x8, x12]
000000000004a8e4	cmp	w12, #0x16
000000000004a8e8	csinc	w10, w10, w11, ge
000000000004a8ec	csel	w9, w9, w11, lt
000000000004a8f0	cmp	w10, w9
000000000004a8f4	b.lt	0x4a8cc
000000000004a8f8	b	0x4a904
000000000004a8fc	mov	w10, #0x0
000000000004a900	b	0x4a904
000000000004a904	sxtw	x9, w10
000000000004a908	add	x8, x8, x9, lsl #4
000000000004a90c	ldr	x8, [x8, #0x8]
000000000004a910	ldr	x8, [x8, #0x58]
000000000004a914	mov	x0, x23
000000000004a918	mov	x1, x21
000000000004a91c	mov	x2, x22
000000000004a920	mov	x3, x24
000000000004a924	blr	x8
000000000004a928	mov	x0, x20
000000000004a92c	blr	x26
000000000004a930	ldr	x8, [x0]
000000000004a934	ldr	x9, [sp, #0x8]
000000000004a938	str	x9, [x8, #0x110]
000000000004a93c	ldaxr	w8, [x19]
000000000004a940	stlxr	w9, w25, [x19]
000000000004a944	cbnz	w9, 0x4a93c
000000000004a948	cbnz	w25, 0x4a964
000000000004a94c	cmp	w8, #0x1
000000000004a950	b.ne	0x4a964
000000000004a954	ldarb	w8, [x27]
000000000004a958	tbz	w8, #0x0, 0x4a964
000000000004a95c	mov	x0, x19
000000000004a960	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a964	ldp	x29, x30, [sp, #0x90]
000000000004a968	ldp	x20, x19, [sp, #0x80]
000000000004a96c	ldp	x22, x21, [sp, #0x70]
000000000004a970	ldp	x24, x23, [sp, #0x60]
000000000004a974	ldp	x26, x25, [sp, #0x50]
000000000004a978	ldp	x28, x27, [sp, #0x40]
000000000004a97c	add	sp, sp, #0xa0
000000000004a980	ret
000000000004a984	bl	_ThrowArrayIndexOutOfBoundsException
000000000004a988	brk	#0x1
000000000004a98c	mov	x21, x0
000000000004a990	mov	x0, x20
000000000004a994	blr	x26
000000000004a998	ldr	x8, [x0]
000000000004a99c	ldr	x9, [sp, #0x28]
000000000004a9a0	str	x9, [x8, #0x110]
000000000004a9a4	b	0x4a9b8
000000000004a9a8	mov	x21, x0
000000000004a9ac	mov	x0, x20
000000000004a9b0	blr	x26
000000000004a9b4	ldr	x8, [x0]
000000000004a9b8	ldr	x9, [sp, #0x8]
000000000004a9bc	str	x9, [x8, #0x110]
000000000004a9c0	ldaxr	w8, [x19]
000000000004a9c4	stlxr	w9, w25, [x19]
000000000004a9c8	cbnz	w9, 0x4a9c0
000000000004a9cc	cbnz	w25, 0x4a9f0
000000000004a9d0	cmp	w8, #0x1
000000000004a9d4	b.ne	0x4a9f0
000000000004a9d8	adr	x8, #0x3c06b
000000000004a9dc	nop
000000000004a9e0	ldarb	w8, [x8]
000000000004a9e4	tbz	w8, #0x0, 0x4a9f0
000000000004a9e8	mov	x0, x19
000000000004a9ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a9f0	mov	x0, x21
000000000004a9f4	bl	0x517a0 ; symbol stub for: __Unwind_Resume
+[KMutableListAsNSMutableArray createRetainedWithKList:]:
000000000004a9f8	stp	x22, x21, [sp, #-0x30]!
000000000004a9fc	stp	x20, x19, [sp, #0x10]
000000000004aa00	stp	x29, x30, [sp, #0x20]
000000000004aa04	add	x29, sp, #0x20
000000000004aa08	mov	x19, x2
000000000004aa0c	nop
000000000004aa10	ldr	x0, #0x1fed8 ; Objc class ref: NBKKMutableListAsNSMutableArray
000000000004aa14	bl	0x51b00 ; symbol stub for: _objc_alloc
000000000004aa18	nop
000000000004aa1c	ldr	x1, #0x1fc44 ; Objc selector ref: init
000000000004aa20	bl	0x51b78 ; Objc message: +[NBKKMutableListAsNSMutableArray init]
000000000004aa24	mov	x20, x0
000000000004aa28	nop
000000000004aa2c	ldrsw	x8, _OBJC_IVAR_$_NBKKMutableListAsNSMutableArray.listHolder
000000000004aa30	add	x21, x0, x8
000000000004aa34	adrp	x0, 34 ; 0x6c000
000000000004aa38	add	x0, x0, #0xbb0
000000000004aa3c	ldr	x8, [x0]
000000000004aa40	blr	x8
000000000004aa44	ldr	x22, [x0]
000000000004aa48	mov	w0, #0x1
000000000004aa4c	mov	w1, #0x28
000000000004aa50	bl	0x519e0 ; symbol stub for: _calloc
000000000004aa54	ldr	x8, [x22, #0xa8]!
000000000004aa58	sub	x9, x22, #0x8
000000000004aa5c	stp	x8, x22, [x0]
000000000004aa60	str	x0, [x8, #0x8]
000000000004aa64	str	x0, [x22]
000000000004aa68	ldr	x8, [x22, #0x10]
000000000004aa6c	add	x8, x8, #0x1
000000000004aa70	str	x8, [x22, #0x10]
000000000004aa74	stp	x9, x0, [x0, #0x18]
000000000004aa78	str	x19, [x0, #0x10]!
000000000004aa7c	stp	x19, x0, [x21]
000000000004aa80	mov	x0, x20
000000000004aa84	ldp	x29, x30, [sp, #0x20]
000000000004aa88	ldp	x20, x19, [sp, #0x10]
000000000004aa8c	ldp	x22, x21, [sp], #0x30
000000000004aa90	ret
-[KSetAsNSSet dealloc]:
000000000004aa94	sub	sp, sp, #0x60
000000000004aa98	stp	x26, x25, [sp, #0x10]
000000000004aa9c	stp	x24, x23, [sp, #0x20]
000000000004aaa0	stp	x22, x21, [sp, #0x30]
000000000004aaa4	stp	x20, x19, [sp, #0x40]
000000000004aaa8	stp	x29, x30, [sp, #0x50]
000000000004aaac	add	x29, sp, #0x50
000000000004aab0	mov	x19, x0
000000000004aab4	nop
000000000004aab8	ldrsw	x8, _OBJC_IVAR_$_NBKKSetAsNSSet.setHolder
000000000004aabc	add	x24, x0, x8
000000000004aac0	bl	_Kotlin_initRuntimeIfNeeded
000000000004aac4	adrp	x21, 34 ; 0x6c000
000000000004aac8	add	x21, x21, #0xbb0
000000000004aacc	ldr	x25, [x21]
000000000004aad0	mov	x0, x21
000000000004aad4	blr	x25
000000000004aad8	ldr	x8, [x0]
000000000004aadc	add	x20, x8, #0x138
000000000004aae0	ldaxr	w22, [x20]
000000000004aae4	stlxr	w8, wzr, [x20]
000000000004aae8	cbnz	w8, 0x4aae0
000000000004aaec	adr	x23, #0x3bf57
000000000004aaf0	nop
000000000004aaf4	cmp	w22, #0x1
000000000004aaf8	b.ne	0x4ab0c
000000000004aafc	ldarb	w8, [x23]
000000000004ab00	tbz	w8, #0x0, 0x4ab0c
000000000004ab04	mov	x0, x20
000000000004ab08	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ab0c	ldr	x8, [x24]
000000000004ab10	cbz	x8, 0x4ab2c
000000000004ab14	ldr	x1, [x24, #0x8]
000000000004ab18	mov	x0, x21
000000000004ab1c	blr	x25
000000000004ab20	ldr	x8, [x0]
000000000004ab24	add	x0, x8, #0x8
000000000004ab28	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004ab2c	ldaxr	w8, [x20]
000000000004ab30	stlxr	w9, w22, [x20]
000000000004ab34	cbnz	w9, 0x4ab2c
000000000004ab38	cbnz	w22, 0x4ab54
000000000004ab3c	cmp	w8, #0x1
000000000004ab40	b.ne	0x4ab54
000000000004ab44	ldarb	w8, [x23]
000000000004ab48	tbz	w8, #0x0, 0x4ab54
000000000004ab4c	mov	x0, x20
000000000004ab50	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ab54	nop
000000000004ab58	ldr	x8, #0x1fde8 ; Objc class ref: NBKKSetAsNSSet
000000000004ab5c	stp	x19, x8, [sp]
000000000004ab60	nop
000000000004ab64	ldr	x1, #0x1fabc ; Objc selector ref: dealloc
000000000004ab68	mov	x0, sp
000000000004ab6c	bl	0x51b84 ; Objc message: -[[x0 super] dealloc]
000000000004ab70	ldp	x29, x30, [sp, #0x50]
000000000004ab74	ldp	x20, x19, [sp, #0x40]
000000000004ab78	ldp	x22, x21, [sp, #0x30]
000000000004ab7c	ldp	x24, x23, [sp, #0x20]
000000000004ab80	ldp	x26, x25, [sp, #0x10]
000000000004ab84	add	sp, sp, #0x60
000000000004ab88	ret
-[KSetAsNSSet toKotlin:]:
000000000004ab8c	stp	x22, x21, [sp, #-0x30]!
000000000004ab90	stp	x20, x19, [sp, #0x10]
000000000004ab94	stp	x29, x30, [sp, #0x20]
000000000004ab98	add	x29, sp, #0x20
000000000004ab9c	mov	x19, x2
000000000004aba0	mov	x20, x0
000000000004aba4	nop
000000000004aba8	ldrsw	x21, _OBJC_IVAR_$_NBKKSetAsNSSet.setHolder
000000000004abac	bl	_Kotlin_initRuntimeIfNeeded
000000000004abb0	ldr	x0, [x20, x21]
000000000004abb4	str	x0, [x19]
000000000004abb8	ldp	x29, x30, [sp, #0x20]
000000000004abbc	ldp	x20, x19, [sp, #0x10]
000000000004abc0	ldp	x22, x21, [sp], #0x30
000000000004abc4	ret
-[KSetAsNSSet count]:
000000000004abc8	stp	x22, x21, [sp, #-0x30]!
000000000004abcc	stp	x20, x19, [sp, #0x10]
000000000004abd0	stp	x29, x30, [sp, #0x20]
000000000004abd4	add	x29, sp, #0x20
000000000004abd8	mov	x20, x0
000000000004abdc	bl	_Kotlin_initRuntimeIfNeeded
000000000004abe0	adrp	x0, 34 ; 0x6c000
000000000004abe4	add	x0, x0, #0xbb0
000000000004abe8	ldr	x8, [x0]
000000000004abec	blr	x8
000000000004abf0	ldr	x8, [x0]
000000000004abf4	add	x19, x8, #0x138
000000000004abf8	ldaxr	w21, [x19]
000000000004abfc	stlxr	w8, wzr, [x19]
000000000004ac00	cbnz	w8, 0x4abf8
000000000004ac04	cmp	w21, #0x1
000000000004ac08	b.ne	0x4ac24
000000000004ac0c	adr	x8, #0x3be37
000000000004ac10	nop
000000000004ac14	ldarb	w8, [x8]
000000000004ac18	tbz	w8, #0x0, 0x4ac24
000000000004ac1c	mov	x0, x19
000000000004ac20	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ac24	nop
000000000004ac28	ldrsw	x22, _OBJC_IVAR_$_NBKKSetAsNSSet.setHolder
000000000004ac2c	bl	_Kotlin_initRuntimeIfNeeded
000000000004ac30	ldr	x0, [x20, x22]
000000000004ac34	bl	_Kotlin_Collection_getSize
000000000004ac38	mov	x20, x0
000000000004ac3c	ldaxr	w8, [x19]
000000000004ac40	stlxr	w9, w21, [x19]
000000000004ac44	cbnz	w9, 0x4ac3c
000000000004ac48	cbnz	w21, 0x4ac6c
000000000004ac4c	cmp	w8, #0x1
000000000004ac50	b.ne	0x4ac6c
000000000004ac54	adr	x8, #0x3bdef
000000000004ac58	nop
000000000004ac5c	ldarb	w8, [x8]
000000000004ac60	tbz	w8, #0x0, 0x4ac6c
000000000004ac64	mov	x0, x19
000000000004ac68	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ac6c	sxtw	x0, w20
000000000004ac70	ldp	x29, x30, [sp, #0x20]
000000000004ac74	ldp	x20, x19, [sp, #0x10]
000000000004ac78	ldp	x22, x21, [sp], #0x30
000000000004ac7c	ret
000000000004ac80	mov	x20, x0
000000000004ac84	ldaxr	w8, [x19]
000000000004ac88	stlxr	w9, w21, [x19]
000000000004ac8c	cbnz	w9, 0x4ac84
000000000004ac90	cbnz	w21, 0x4acb4
000000000004ac94	cmp	w8, #0x1
000000000004ac98	b.ne	0x4acb4
000000000004ac9c	adr	x8, #0x3bda7
000000000004aca0	nop
000000000004aca4	ldarb	w8, [x8]
000000000004aca8	tbz	w8, #0x0, 0x4acb4
000000000004acac	mov	x0, x19
000000000004acb0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004acb4	mov	x0, x20
000000000004acb8	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KSetAsNSSet member:]:
000000000004acbc	stp	x24, x23, [sp, #-0x40]!
000000000004acc0	stp	x22, x21, [sp, #0x10]
000000000004acc4	stp	x20, x19, [sp, #0x20]
000000000004acc8	stp	x29, x30, [sp, #0x30]
000000000004accc	add	x29, sp, #0x30
000000000004acd0	mov	x20, x2
000000000004acd4	mov	x21, x0
000000000004acd8	bl	_Kotlin_initRuntimeIfNeeded
000000000004acdc	adrp	x0, 34 ; 0x6c000
000000000004ace0	add	x0, x0, #0xbb0
000000000004ace4	ldr	x8, [x0]
000000000004ace8	blr	x8
000000000004acec	ldr	x8, [x0]
000000000004acf0	add	x19, x8, #0x138
000000000004acf4	ldaxr	w22, [x19]
000000000004acf8	stlxr	w8, wzr, [x19]
000000000004acfc	cbnz	w8, 0x4acf4
000000000004ad00	cmp	w22, #0x1
000000000004ad04	b.ne	0x4ad20
000000000004ad08	adr	x8, #0x3bd3b
000000000004ad0c	nop
000000000004ad10	ldarb	w8, [x8]
000000000004ad14	tbz	w8, #0x0, 0x4ad20
000000000004ad18	mov	x0, x19
000000000004ad1c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ad20	nop
000000000004ad24	ldrsw	x23, _OBJC_IVAR_$_NBKKSetAsNSSet.setHolder
000000000004ad28	bl	_Kotlin_initRuntimeIfNeeded
000000000004ad2c	ldr	x0, [x21, x23]
000000000004ad30	mov	x1, x20
000000000004ad34	bl	__ZL15KSet_getElementP9ObjHeaderP11objc_object
000000000004ad38	mov	x20, x0
000000000004ad3c	ldaxr	w8, [x19]
000000000004ad40	stlxr	w9, w22, [x19]
000000000004ad44	cbnz	w9, 0x4ad3c
000000000004ad48	cbnz	w22, 0x4ad6c
000000000004ad4c	cmp	w8, #0x1
000000000004ad50	b.ne	0x4ad6c
000000000004ad54	adr	x8, #0x3bcef
000000000004ad58	nop
000000000004ad5c	ldarb	w8, [x8]
000000000004ad60	tbz	w8, #0x0, 0x4ad6c
000000000004ad64	mov	x0, x19
000000000004ad68	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ad6c	mov	x0, x20
000000000004ad70	ldp	x29, x30, [sp, #0x30]
000000000004ad74	ldp	x20, x19, [sp, #0x20]
000000000004ad78	ldp	x22, x21, [sp, #0x10]
000000000004ad7c	ldp	x24, x23, [sp], #0x40
000000000004ad80	ret
000000000004ad84	mov	x20, x0
000000000004ad88	ldaxr	w8, [x19]
000000000004ad8c	stlxr	w9, w22, [x19]
000000000004ad90	cbnz	w9, 0x4ad88
000000000004ad94	cbnz	w22, 0x4adb8
000000000004ad98	cmp	w8, #0x1
000000000004ad9c	b.ne	0x4adb8
000000000004ada0	adr	x8, #0x3bca3
000000000004ada4	nop
000000000004ada8	ldarb	w8, [x8]
000000000004adac	tbz	w8, #0x0, 0x4adb8
000000000004adb0	mov	x0, x19
000000000004adb4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004adb8	mov	x0, x20
000000000004adbc	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KSetAsNSSet containsObject:]:
000000000004adc0	sub	sp, sp, #0x70
000000000004adc4	stp	x26, x25, [sp, #0x20]
000000000004adc8	stp	x24, x23, [sp, #0x30]
000000000004adcc	stp	x22, x21, [sp, #0x40]
000000000004add0	stp	x20, x19, [sp, #0x50]
000000000004add4	stp	x29, x30, [sp, #0x60]
000000000004add8	add	x29, sp, #0x60
000000000004addc	mov	x21, x2
000000000004ade0	mov	x22, x0
000000000004ade4	bl	_Kotlin_initRuntimeIfNeeded
000000000004ade8	adrp	x20, 34 ; 0x6c000
000000000004adec	add	x20, x20, #0xbb0
000000000004adf0	ldr	x24, [x20]
000000000004adf4	mov	x0, x20
000000000004adf8	blr	x24
000000000004adfc	ldr	x8, [x0]
000000000004ae00	add	x19, x8, #0x138
000000000004ae04	ldaxr	w23, [x19]
000000000004ae08	stlxr	w8, wzr, [x19]
000000000004ae0c	cbnz	w8, 0x4ae04
000000000004ae10	cmp	w23, #0x1
000000000004ae14	b.ne	0x4ae30
000000000004ae18	adr	x8, #0x3bc2b
000000000004ae1c	nop
000000000004ae20	ldarb	w8, [x8]
000000000004ae24	tbz	w8, #0x0, 0x4ae30
000000000004ae28	mov	x0, x19
000000000004ae2c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ae30	mov	x25, sp
000000000004ae34	str	xzr, [sp, #0x18]
000000000004ae38	mov	x0, x20
000000000004ae3c	blr	x24
000000000004ae40	ldr	x8, [x0]
000000000004ae44	ldr	x9, [x8, #0x110]
000000000004ae48	str	x25, [x8, #0x110]
000000000004ae4c	mov	x8, #0x400000000
000000000004ae50	stp	x9, x8, [sp, #0x8]
000000000004ae54	nop
000000000004ae58	ldrsw	x26, _OBJC_IVAR_$_NBKKSetAsNSSet.setHolder
000000000004ae5c	bl	_Kotlin_initRuntimeIfNeeded
000000000004ae60	ldr	x22, [x22, x26]
000000000004ae64	nop
000000000004ae68	ldr	x0, #0x1fa50 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004ae6c	nop
000000000004ae70	ldr	x1, #0x1f8e8 ; Objc selector ref: null
000000000004ae74	bl	0x51b78 ; Objc message: +[NSNull null]
000000000004ae78	cmp	x0, x21
000000000004ae7c	b.eq	0x4aea0
000000000004ae80	cbz	x21, 0x4aea0
000000000004ae84	add	x2, x25, #0x18
000000000004ae88	nop
000000000004ae8c	ldr	x1, #0x3be0c
000000000004ae90	mov	x0, x21
000000000004ae94	bl	0x51b78 ; Objc message: -[x0 null]
000000000004ae98	mov	x1, x0
000000000004ae9c	b	0x4aea8
000000000004aea0	mov	x1, #0x0
000000000004aea4	str	xzr, [sp, #0x18]
000000000004aea8	mov	x0, x22
000000000004aeac	bl	_Kotlin_Set_contains
000000000004aeb0	mov	x21, x0
000000000004aeb4	mov	x0, x20
000000000004aeb8	blr	x24
000000000004aebc	ldr	x8, [x0]
000000000004aec0	ldr	x9, [sp, #0x8]
000000000004aec4	str	x9, [x8, #0x110]
000000000004aec8	ldaxr	w8, [x19]
000000000004aecc	stlxr	w9, w23, [x19]
000000000004aed0	cbnz	w9, 0x4aec8
000000000004aed4	cbnz	w23, 0x4aef8
000000000004aed8	cmp	w8, #0x1
000000000004aedc	b.ne	0x4aef8
000000000004aee0	adr	x8, #0x3bb63
000000000004aee4	nop
000000000004aee8	ldarb	w8, [x8]
000000000004aeec	tbz	w8, #0x0, 0x4aef8
000000000004aef0	mov	x0, x19
000000000004aef4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004aef8	mov	x0, x21
000000000004aefc	ldp	x29, x30, [sp, #0x60]
000000000004af00	ldp	x20, x19, [sp, #0x50]
000000000004af04	ldp	x22, x21, [sp, #0x40]
000000000004af08	ldp	x24, x23, [sp, #0x30]
000000000004af0c	ldp	x26, x25, [sp, #0x20]
000000000004af10	add	sp, sp, #0x70
000000000004af14	ret
000000000004af18	mov	x21, x0
000000000004af1c	mov	x0, x20
000000000004af20	blr	x24
000000000004af24	ldr	x8, [x0]
000000000004af28	ldr	x9, [sp, #0x8]
000000000004af2c	str	x9, [x8, #0x110]
000000000004af30	ldaxr	w8, [x19]
000000000004af34	stlxr	w9, w23, [x19]
000000000004af38	cbnz	w9, 0x4af30
000000000004af3c	cbnz	w23, 0x4af60
000000000004af40	cmp	w8, #0x1
000000000004af44	b.ne	0x4af60
000000000004af48	adr	x8, #0x3bafb
000000000004af4c	nop
000000000004af50	ldarb	w8, [x8]
000000000004af54	tbz	w8, #0x0, 0x4af60
000000000004af58	mov	x0, x19
000000000004af5c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004af60	mov	x0, x21
000000000004af64	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KSetAsNSSet objectEnumerator]:
000000000004af68	sub	sp, sp, #0x70
000000000004af6c	stp	x26, x25, [sp, #0x20]
000000000004af70	stp	x24, x23, [sp, #0x30]
000000000004af74	stp	x22, x21, [sp, #0x40]
000000000004af78	stp	x20, x19, [sp, #0x50]
000000000004af7c	stp	x29, x30, [sp, #0x60]
000000000004af80	add	x29, sp, #0x60
000000000004af84	mov	x21, x0
000000000004af88	bl	_Kotlin_initRuntimeIfNeeded
000000000004af8c	adrp	x20, 34 ; 0x6c000
000000000004af90	add	x20, x20, #0xbb0
000000000004af94	ldr	x25, [x20]
000000000004af98	mov	x0, x20
000000000004af9c	blr	x25
000000000004afa0	ldr	x8, [x0]
000000000004afa4	add	x19, x8, #0x138
000000000004afa8	ldaxr	w24, [x19]
000000000004afac	stlxr	w8, wzr, [x19]
000000000004afb0	cbnz	w8, 0x4afa8
000000000004afb4	cmp	w24, #0x1
000000000004afb8	b.ne	0x4afd4
000000000004afbc	adr	x8, #0x3ba87
000000000004afc0	nop
000000000004afc4	ldarb	w8, [x8]
000000000004afc8	tbz	w8, #0x0, 0x4afd4
000000000004afcc	mov	x0, x19
000000000004afd0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004afd4	mov	x8, sp
000000000004afd8	add	x23, x8, #0x18
000000000004afdc	str	xzr, [sp, #0x18]
000000000004afe0	mov	x0, x20
000000000004afe4	blr	x25
000000000004afe8	ldr	x9, [x0]
000000000004afec	ldr	x10, [x9, #0x110]
000000000004aff0	str	x8, [x9, #0x110]
000000000004aff4	mov	x8, #0x400000000
000000000004aff8	stp	x10, x8, [sp, #0x8]
000000000004affc	nop
000000000004b000	ldr	x22, #0x1f8d8 ; Objc class ref: NBKKIteratorAsNSEnumerator
000000000004b004	nop
000000000004b008	ldrsw	x26, _OBJC_IVAR_$_NBKKSetAsNSSet.setHolder
000000000004b00c	bl	_Kotlin_initRuntimeIfNeeded
000000000004b010	ldr	x0, [x21, x26]
000000000004b014	mov	x1, x23
000000000004b018	bl	_Kotlin_Set_iterator
000000000004b01c	mov	x2, x0
000000000004b020	nop
000000000004b024	ldr	x1, #0x1f5f4 ; Objc selector ref: createWithKIterator:
000000000004b028	mov	x0, x22
000000000004b02c	bl	0x51b78 ; Objc message: +[NBKKIteratorAsNSEnumerator createWithKIterator:]
000000000004b030	mov	x21, x0
000000000004b034	mov	x0, x20
000000000004b038	blr	x25
000000000004b03c	ldr	x8, [x0]
000000000004b040	ldr	x9, [sp, #0x8]
000000000004b044	str	x9, [x8, #0x110]
000000000004b048	ldaxr	w8, [x19]
000000000004b04c	stlxr	w9, w24, [x19]
000000000004b050	cbnz	w9, 0x4b048
000000000004b054	cbnz	w24, 0x4b078
000000000004b058	cmp	w8, #0x1
000000000004b05c	b.ne	0x4b078
000000000004b060	adr	x8, #0x3b9e3
000000000004b064	nop
000000000004b068	ldarb	w8, [x8]
000000000004b06c	tbz	w8, #0x0, 0x4b078
000000000004b070	mov	x0, x19
000000000004b074	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b078	mov	x0, x21
000000000004b07c	ldp	x29, x30, [sp, #0x60]
000000000004b080	ldp	x20, x19, [sp, #0x50]
000000000004b084	ldp	x22, x21, [sp, #0x40]
000000000004b088	ldp	x24, x23, [sp, #0x30]
000000000004b08c	ldp	x26, x25, [sp, #0x20]
000000000004b090	add	sp, sp, #0x70
000000000004b094	ret
000000000004b098	mov	x21, x0
000000000004b09c	mov	x0, x20
000000000004b0a0	blr	x25
000000000004b0a4	ldr	x8, [x0]
000000000004b0a8	ldr	x9, [sp, #0x8]
000000000004b0ac	str	x9, [x8, #0x110]
000000000004b0b0	ldaxr	w8, [x19]
000000000004b0b4	stlxr	w9, w24, [x19]
000000000004b0b8	cbnz	w9, 0x4b0b0
000000000004b0bc	cbnz	w24, 0x4b0e0
000000000004b0c0	cmp	w8, #0x1
000000000004b0c4	b.ne	0x4b0e0
000000000004b0c8	adr	x8, #0x3b97b
000000000004b0cc	nop
000000000004b0d0	ldarb	w8, [x8]
000000000004b0d4	tbz	w8, #0x0, 0x4b0e0
000000000004b0d8	mov	x0, x19
000000000004b0dc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b0e0	mov	x0, x21
000000000004b0e4	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZL15KSet_getElementP9ObjHeaderP11objc_object:
000000000004b0e8	sub	sp, sp, #0xc0
000000000004b0ec	stp	x26, x25, [sp, #0x70]
000000000004b0f0	stp	x24, x23, [sp, #0x80]
000000000004b0f4	stp	x22, x21, [sp, #0x90]
000000000004b0f8	stp	x20, x19, [sp, #0xa0]
000000000004b0fc	stp	x29, x30, [sp, #0xb0]
000000000004b100	add	x29, sp, #0xb0
000000000004b104	mov	x20, x1
000000000004b108	mov	x21, x0
000000000004b10c	nop
000000000004b110	ldr	x0, #0x1f7a8 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004b114	nop
000000000004b118	ldr	x1, #0x1f640 ; Objc selector ref: null
000000000004b11c	bl	0x51b78 ; Objc message: +[NSNull null]
000000000004b120	cmp	x0, x20
000000000004b124	b.eq	0x4b194
000000000004b128	add	x9, sp, #0x20
000000000004b12c	str	xzr, [sp, #0x38]
000000000004b130	adrp	x19, 33 ; 0x6c000
000000000004b134	add	x19, x19, #0xbb0
000000000004b138	ldr	x24, [x19]
000000000004b13c	mov	x0, x19
000000000004b140	blr	x24
000000000004b144	ldr	x8, [x0]
000000000004b148	ldr	x10, [x8, #0x110]
000000000004b14c	mov	x11, #0x400000000
000000000004b150	stp	x10, x11, [sp, #0x28]
000000000004b154	mov	x23, sp
000000000004b158	stp	x11, xzr, [sp, #0x10]
000000000004b15c	str	x23, [x8, #0x110]
000000000004b160	str	x9, [sp, #0x8]
000000000004b164	cbz	x20, 0x4b1ac
000000000004b168	add	x2, x9, #0x18
000000000004b16c	nop
000000000004b170	ldr	x1, #0x3bb28
000000000004b174	mov	x0, x20
000000000004b178	bl	0x51b78 ; Objc message: -[x0 null]
000000000004b17c	mov	x20, x0
000000000004b180	mov	x0, x19
000000000004b184	blr	x24
000000000004b188	ldr	x8, [x0]
000000000004b18c	ldr	x9, [x8, #0x110]
000000000004b190	b	0x4b1b4
000000000004b194	mov	x0, x21
000000000004b198	mov	x1, #0x0
000000000004b19c	bl	_Kotlin_Set_contains
000000000004b1a0	cmp	w0, #0x0
000000000004b1a4	csel	x8, x20, xzr, ne
000000000004b1a8	b	0x4b734
000000000004b1ac	mov	x9, sp
000000000004b1b0	str	xzr, [sp, #0x38]
000000000004b1b4	movi.16b	v0, #0x0
000000000004b1b8	stp	q0, q0, [sp, #0x40]
000000000004b1bc	str	q0, [sp, #0x60]
000000000004b1c0	add	x22, sp, #0x40
000000000004b1c4	str	x22, [x8, #0x110]
000000000004b1c8	mov	x8, #0x600000000
000000000004b1cc	stp	x9, x8, [sp, #0x48]
000000000004b1d0	adr	x25, #0x3b873
000000000004b1d4	nop
000000000004b1d8	ldarb	w8, [x25]
000000000004b1dc	tbz	w8, #0x0, 0x4b1e4
000000000004b1e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004b1e4	cbz	x21, 0x4b320
000000000004b1e8	ldr	x8, [x21]
000000000004b1ec	and	x8, x8, #0xfffffffffffffffc
000000000004b1f0	ldr	x8, [x8]
000000000004b1f4	ldr	w9, [x8, #0x3c]
000000000004b1f8	ldr	x8, [x8, #0x40]
000000000004b1fc	tbnz	w9, #0x1f, 0x4b240
000000000004b200	mov	w10, #0xb
000000000004b204	and	x9, x9, x10
000000000004b208	lsl	x9, x9, #4
000000000004b20c	ldr	w8, [x8, x9]
000000000004b210	cmp	w8, #0xb
000000000004b214	b.ne	0x4b320
000000000004b218	add	x2, x23, #0x18
000000000004b21c	ldr	x8, [x21]
000000000004b220	and	x8, x8, #0xfffffffffffffffc
000000000004b224	ldr	x8, [x8]
000000000004b228	ldr	w9, [x8, #0x3c]
000000000004b22c	ldr	x8, [x8, #0x40]
000000000004b230	tbnz	w9, #0x1f, 0x4b298
000000000004b234	mov	w10, #0xb
000000000004b238	and	x9, x9, x10
000000000004b23c	b	0x4b6e0
000000000004b240	neg	w10, w9
000000000004b244	mvn	w9, w9
000000000004b248	cmp	w10, #0x9
000000000004b24c	b.ge	0x4b2dc
000000000004b250	cmp	w10, #0x2
000000000004b254	b.lt	0x4b3c0
000000000004b258	mov	x10, #0x0
000000000004b25c	mov	x11, x8
000000000004b260	ldr	w12, [x11]
000000000004b264	cmp	w12, #0xa
000000000004b268	b.gt	0x4b4d8
000000000004b26c	add	x10, x10, #0x1
000000000004b270	add	x11, x11, #0x10
000000000004b274	cmp	x9, x10
000000000004b278	b.ne	0x4b260
000000000004b27c	mov	x10, x9
000000000004b280	sxtw	x9, w10
000000000004b284	lsl	x9, x9, #4
000000000004b288	ldr	w8, [x8, x9]
000000000004b28c	cmp	w8, #0xb
000000000004b290	b.ne	0x4b320
000000000004b294	b	0x4b218
000000000004b298	neg	w10, w9
000000000004b29c	mvn	w9, w9
000000000004b2a0	cmp	w10, #0x9
000000000004b2a4	b.ge	0x4b3dc
000000000004b2a8	cmp	w10, #0x2
000000000004b2ac	b.lt	0x4b4f0
000000000004b2b0	mov	x10, #0x0
000000000004b2b4	mov	x11, x8
000000000004b2b8	ldr	w12, [x11]
000000000004b2bc	cmp	w12, #0xa
000000000004b2c0	b.gt	0x4b6dc
000000000004b2c4	add	x10, x10, #0x1
000000000004b2c8	add	x11, x11, #0x10
000000000004b2cc	cmp	x9, x10
000000000004b2d0	b.ne	0x4b2b8
000000000004b2d4	mov	x10, x9
000000000004b2d8	b	0x4b6dc
000000000004b2dc	mov	w10, #0x0
000000000004b2e0	add	w11, w9, w10
000000000004b2e4	cmp	w11, #0x0
000000000004b2e8	cinc	w11, w11, lt
000000000004b2ec	asr	w11, w11, #1
000000000004b2f0	sbfiz	x12, x11, #4, #32
000000000004b2f4	ldr	w12, [x8, x12]
000000000004b2f8	cmp	w12, #0xb
000000000004b2fc	csinc	w10, w10, w11, ge
000000000004b300	csel	w9, w9, w11, lt
000000000004b304	cmp	w10, w9
000000000004b308	b.lt	0x4b2e0
000000000004b30c	sxtw	x9, w10
000000000004b310	lsl	x9, x9, #4
000000000004b314	ldr	w8, [x8, x9]
000000000004b318	cmp	w8, #0xb
000000000004b31c	b.eq	0x4b218
000000000004b320	ldr	x8, [x21]
000000000004b324	and	x8, x8, #0xfffffffffffffffc
000000000004b328	ldr	x8, [x8]
000000000004b32c	ldr	w9, [x8, #0x3c]
000000000004b330	ldr	x8, [x8, #0x40]
000000000004b334	tbnz	w9, #0x1f, 0x4b340
000000000004b338	and	x9, x9, #0x1e
000000000004b33c	b	0x4b414
000000000004b340	neg	w10, w9
000000000004b344	mvn	w9, w9
000000000004b348	cmp	w10, #0x9
000000000004b34c	b.ge	0x4b384
000000000004b350	cmp	w10, #0x2
000000000004b354	b.lt	0x4b3b8
000000000004b358	mov	x10, #0x0
000000000004b35c	mov	x11, x8
000000000004b360	ldr	w12, [x11]
000000000004b364	cmp	w12, #0x1d
000000000004b368	b.gt	0x4b410
000000000004b36c	add	x10, x10, #0x1
000000000004b370	add	x11, x11, #0x10
000000000004b374	cmp	x9, x10
000000000004b378	b.ne	0x4b360
000000000004b37c	mov	x10, x9
000000000004b380	b	0x4b410
000000000004b384	mov	w10, #0x0
000000000004b388	add	w11, w9, w10
000000000004b38c	cmp	w11, #0x0
000000000004b390	cinc	w11, w11, lt
000000000004b394	asr	w11, w11, #1
000000000004b398	sbfiz	x12, x11, #4, #32
000000000004b39c	ldr	w12, [x8, x12]
000000000004b3a0	cmp	w12, #0x1e
000000000004b3a4	csinc	w10, w10, w11, ge
000000000004b3a8	csel	w9, w9, w11, lt
000000000004b3ac	cmp	w10, w9
000000000004b3b0	b.lt	0x4b388
000000000004b3b4	b	0x4b410
000000000004b3b8	mov	w10, #0x0
000000000004b3bc	b	0x4b410
000000000004b3c0	mov	w10, #0x0
000000000004b3c4	sxtw	x9, w10
000000000004b3c8	lsl	x9, x9, #4
000000000004b3cc	ldr	w8, [x8, x9]
000000000004b3d0	cmp	w8, #0xb
000000000004b3d4	b.eq	0x4b218
000000000004b3d8	b	0x4b320
000000000004b3dc	mov	w10, #0x0
000000000004b3e0	add	w11, w9, w10
000000000004b3e4	cmp	w11, #0x0
000000000004b3e8	cinc	w11, w11, lt
000000000004b3ec	asr	w11, w11, #1
000000000004b3f0	sbfiz	x12, x11, #4, #32
000000000004b3f4	ldr	w12, [x8, x12]
000000000004b3f8	cmp	w12, #0xb
000000000004b3fc	csinc	w10, w10, w11, ge
000000000004b400	csel	w9, w9, w11, lt
000000000004b404	cmp	w10, w9
000000000004b408	b.lt	0x4b3e0
000000000004b40c	b	0x4b6dc
000000000004b410	sxtw	x9, w10
000000000004b414	add	x8, x8, x9, lsl #4
000000000004b418	ldr	x8, [x8, #0x8]
000000000004b41c	ldr	x8, [x8, #0x8]
000000000004b420	mov	x0, x21
000000000004b424	mov	x1, x20
000000000004b428	blr	x8
000000000004b42c	tbz	w0, #0x0, 0x4b6d4
000000000004b430	add	x1, x22, #0x18
000000000004b434	ldr	x8, [x21]
000000000004b438	and	x8, x8, #0xfffffffffffffffc
000000000004b43c	ldr	x8, [x8]
000000000004b440	ldr	w9, [x8, #0x3c]
000000000004b444	ldr	x8, [x8, #0x40]
000000000004b448	tbnz	w9, #0x1f, 0x4b458
000000000004b44c	mov	w10, #0x31
000000000004b450	and	x9, x9, x10
000000000004b454	b	0x4b4fc
000000000004b458	neg	w10, w9
000000000004b45c	mvn	w9, w9
000000000004b460	cmp	w10, #0x9
000000000004b464	b.ge	0x4b49c
000000000004b468	cmp	w10, #0x2
000000000004b46c	b.lt	0x4b4d0
000000000004b470	mov	x10, #0x0
000000000004b474	mov	x11, x8
000000000004b478	ldr	w12, [x11]
000000000004b47c	cmp	w12, #0x30
000000000004b480	b.gt	0x4b4f8
000000000004b484	add	x10, x10, #0x1
000000000004b488	add	x11, x11, #0x10
000000000004b48c	cmp	x9, x10
000000000004b490	b.ne	0x4b478
000000000004b494	mov	x10, x9
000000000004b498	b	0x4b4f8
000000000004b49c	mov	w10, #0x0
000000000004b4a0	add	w11, w9, w10
000000000004b4a4	cmp	w11, #0x0
000000000004b4a8	cinc	w11, w11, lt
000000000004b4ac	asr	w11, w11, #1
000000000004b4b0	sbfiz	x12, x11, #4, #32
000000000004b4b4	ldr	w12, [x8, x12]
000000000004b4b8	cmp	w12, #0x31
000000000004b4bc	csinc	w10, w10, w11, ge
000000000004b4c0	csel	w9, w9, w11, lt
000000000004b4c4	cmp	w10, w9
000000000004b4c8	b.lt	0x4b4a0
000000000004b4cc	b	0x4b4f8
000000000004b4d0	mov	w10, #0x0
000000000004b4d4	b	0x4b4f8
000000000004b4d8	sxtw	x9, w10
000000000004b4dc	lsl	x9, x9, #4
000000000004b4e0	ldr	w8, [x8, x9]
000000000004b4e4	cmp	w8, #0xb
000000000004b4e8	b.ne	0x4b320
000000000004b4ec	b	0x4b218
000000000004b4f0	mov	w10, #0x0
000000000004b4f4	b	0x4b6dc
000000000004b4f8	sxtw	x9, w10
000000000004b4fc	add	x8, x8, x9, lsl #4
000000000004b500	ldr	x8, [x8, #0x8]
000000000004b504	ldr	x8, [x8]
000000000004b508	mov	x0, x21
000000000004b50c	blr	x8
000000000004b510	mov	x21, x0
000000000004b514	add	x22, x22, #0x20
000000000004b518	mov	w26, #0xa0
000000000004b51c	b	0x4b524
000000000004b520	cbz	x20, 0x4b6d4
000000000004b524	ldr	x8, [x21]
000000000004b528	and	x8, x8, #0xfffffffffffffffc
000000000004b52c	ldr	x8, [x8]
000000000004b530	ldr	w9, [x8, #0x3c]
000000000004b534	ldr	x8, [x8, #0x40]
000000000004b538	tbnz	w9, #0x1f, 0x4b544
000000000004b53c	and	x9, x9, x26
000000000004b540	b	0x4b5c8
000000000004b544	neg	w10, w9
000000000004b548	mvn	w9, w9
000000000004b54c	cmp	w10, #0x9
000000000004b550	b.ge	0x4b588
000000000004b554	cmp	w10, #0x2
000000000004b558	b.lt	0x4b5bc
000000000004b55c	mov	x10, #0x0
000000000004b560	mov	x11, x8
000000000004b564	ldr	w12, [x11]
000000000004b568	cmp	w12, #0x9f
000000000004b56c	b.gt	0x4b5c4
000000000004b570	add	x10, x10, #0x1
000000000004b574	add	x11, x11, #0x10
000000000004b578	cmp	x9, x10
000000000004b57c	b.ne	0x4b564
000000000004b580	mov	x10, x9
000000000004b584	b	0x4b5c4
000000000004b588	mov	w10, #0x0
000000000004b58c	add	w11, w9, w10
000000000004b590	cmp	w11, #0x0
000000000004b594	cinc	w11, w11, lt
000000000004b598	asr	w11, w11, #1
000000000004b59c	sbfiz	x12, x11, #4, #32
000000000004b5a0	ldr	w12, [x8, x12]
000000000004b5a4	cmp	w12, #0xa0
000000000004b5a8	csinc	w10, w10, w11, ge
000000000004b5ac	csel	w9, w9, w11, lt
000000000004b5b0	cmp	w10, w9
000000000004b5b4	b.lt	0x4b58c
000000000004b5b8	b	0x4b5c4
000000000004b5bc	mov	w10, #0x0
000000000004b5c0	b	0x4b5c4
000000000004b5c4	sxtw	x9, w10
000000000004b5c8	add	x8, x8, x9, lsl #4
000000000004b5cc	ldr	x8, [x8, #0x8]
000000000004b5d0	ldr	x8, [x8]
000000000004b5d4	mov	x0, x21
000000000004b5d8	blr	x8
000000000004b5dc	tbz	w0, #0x0, 0x4b754
000000000004b5e0	ldarb	w8, [x25]
000000000004b5e4	tbz	w8, #0x0, 0x4b5ec
000000000004b5e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004b5ec	ldr	x8, [x21]
000000000004b5f0	and	x8, x8, #0xfffffffffffffffc
000000000004b5f4	ldr	x8, [x8]
000000000004b5f8	ldr	w9, [x8, #0x3c]
000000000004b5fc	ldr	x8, [x8, #0x40]
000000000004b600	tbnz	w9, #0x1f, 0x4b60c
000000000004b604	and	x9, x9, x26
000000000004b608	b	0x4b690
000000000004b60c	neg	w10, w9
000000000004b610	mvn	w9, w9
000000000004b614	cmp	w10, #0x9
000000000004b618	b.ge	0x4b650
000000000004b61c	cmp	w10, #0x2
000000000004b620	b.lt	0x4b684
000000000004b624	mov	x10, #0x0
000000000004b628	mov	x11, x8
000000000004b62c	ldr	w12, [x11]
000000000004b630	cmp	w12, #0x9f
000000000004b634	b.gt	0x4b68c
000000000004b638	add	x10, x10, #0x1
000000000004b63c	add	x11, x11, #0x10
000000000004b640	cmp	x9, x10
000000000004b644	b.ne	0x4b62c
000000000004b648	mov	x10, x9
000000000004b64c	b	0x4b68c
000000000004b650	mov	w10, #0x0
000000000004b654	add	w11, w9, w10
000000000004b658	cmp	w11, #0x0
000000000004b65c	cinc	w11, w11, lt
000000000004b660	asr	w11, w11, #1
000000000004b664	sbfiz	x12, x11, #4, #32
000000000004b668	ldr	w12, [x8, x12]
000000000004b66c	cmp	w12, #0xa0
000000000004b670	csinc	w10, w10, w11, ge
000000000004b674	csel	w9, w9, w11, lt
000000000004b678	cmp	w10, w9
000000000004b67c	b.lt	0x4b654
000000000004b680	b	0x4b68c
000000000004b684	mov	w10, #0x0
000000000004b688	b	0x4b68c
000000000004b68c	sxtw	x9, w10
000000000004b690	add	x8, x8, x9, lsl #4
000000000004b694	ldr	x8, [x8, #0x8]
000000000004b698	ldr	x8, [x8, #0x8]
000000000004b69c	mov	x0, x21
000000000004b6a0	mov	x1, x22
000000000004b6a4	blr	x8
000000000004b6a8	mov	x23, x0
000000000004b6ac	cbz	x0, 0x4b520
000000000004b6b0	ldr	x8, [x23]
000000000004b6b4	and	x8, x8, #0xfffffffffffffffc
000000000004b6b8	ldr	x8, [x8]
000000000004b6bc	ldr	x8, [x8, #0x70]
000000000004b6c0	mov	x0, x23
000000000004b6c4	mov	x1, x20
000000000004b6c8	blr	x8
000000000004b6cc	tbz	w0, #0x0, 0x4b524
000000000004b6d0	b	0x4b6fc
000000000004b6d4	mov	x23, #0x0
000000000004b6d8	b	0x4b6fc
000000000004b6dc	sxtw	x9, w10
000000000004b6e0	add	x8, x8, x9, lsl #4
000000000004b6e4	ldr	x8, [x8, #0x8]
000000000004b6e8	ldr	x8, [x8]
000000000004b6ec	mov	x0, x21
000000000004b6f0	mov	x1, x20
000000000004b6f4	blr	x8
000000000004b6f8	mov	x23, x0
000000000004b6fc	str	x23, [sp, #0x18]
000000000004b700	mov	x0, x19
000000000004b704	blr	x24
000000000004b708	ldr	x8, [x0]
000000000004b70c	ldr	x9, [sp, #0x48]
000000000004b710	str	x9, [x8, #0x110]
000000000004b714	mov	x0, x23
000000000004b718	bl	_Kotlin_ObjCExport_refToObjC
000000000004b71c	mov	x8, x0
000000000004b720	mov	x0, x19
000000000004b724	blr	x24
000000000004b728	ldr	x9, [x0]
000000000004b72c	ldr	x10, [sp, #0x28]
000000000004b730	str	x10, [x9, #0x110]
000000000004b734	mov	x0, x8
000000000004b738	ldp	x29, x30, [sp, #0xb0]
000000000004b73c	ldp	x20, x19, [sp, #0xa0]
000000000004b740	ldp	x22, x21, [sp, #0x90]
000000000004b744	ldp	x24, x23, [sp, #0x80]
000000000004b748	ldp	x26, x25, [sp, #0x70]
000000000004b74c	add	sp, sp, #0xc0
000000000004b750	ret
000000000004b754	mov	x0, x19
000000000004b758	blr	x24
000000000004b75c	ldr	x8, [x0]
000000000004b760	ldr	x8, [x8, #0x118]
000000000004b764	add	x0, x8, #0x70
000000000004b768	mov	w1, #0x38
000000000004b76c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004b770	adr	x8, #0xd330
000000000004b774	nop
000000000004b778	mov	x20, x0
000000000004b77c	str	x8, [x20, #0x10]!
000000000004b780	stur	xzr, [x20, #-0x8]
000000000004b784	str	x20, [sp, #0x68]
000000000004b788	ldarb	w8, [x25]
000000000004b78c	tbz	w8, #0x0, 0x4b794
000000000004b790	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004b794	adr	x1, #0x1a07c
000000000004b798	nop
000000000004b79c	mov	x0, x20
000000000004b7a0	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000004b7a4	ldarb	w8, [x25]
000000000004b7a8	tbz	w8, #0x0, 0x4b7b0
000000000004b7ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004b7b0	mov	x0, x20
000000000004b7b4	bl	_ThrowException
000000000004b7b8	brk	#0x1
000000000004b7bc	b	0x4b7c0
000000000004b7c0	mov	x1, x0
000000000004b7c4	b	0x4b7e4
000000000004b7c8	b	0x4b7cc
000000000004b7cc	mov	x1, x0
000000000004b7d0	mov	x0, x19
000000000004b7d4	blr	x24
000000000004b7d8	ldr	x8, [x0]
000000000004b7dc	ldr	x9, [sp, #0x48]
000000000004b7e0	str	x9, [x8, #0x110]
000000000004b7e4	mov	x0, x19
000000000004b7e8	blr	x24
000000000004b7ec	ldr	x8, [x0]
000000000004b7f0	ldr	x9, [sp, #0x28]
000000000004b7f4	str	x9, [x8, #0x110]
000000000004b7f8	mov	x0, x1
000000000004b7fc	bl	0x517a0 ; symbol stub for: __Unwind_Resume
+[KSetAsNSSet createRetainedWithKSet:]:
000000000004b800	stp	x22, x21, [sp, #-0x30]!
000000000004b804	stp	x20, x19, [sp, #0x10]
000000000004b808	stp	x29, x30, [sp, #0x20]
000000000004b80c	add	x29, sp, #0x20
000000000004b810	mov	x19, x2
000000000004b814	nop
000000000004b818	ldr	x0, #0x1f0d8 ; Objc class ref: NBKKSetAsNSSet
000000000004b81c	bl	0x51b00 ; symbol stub for: _objc_alloc
000000000004b820	nop
000000000004b824	ldr	x1, #0x1ee3c ; Objc selector ref: init
000000000004b828	bl	0x51b78 ; Objc message: +[NBKKSetAsNSSet init]
000000000004b82c	mov	x20, x0
000000000004b830	nop
000000000004b834	ldrsw	x8, _OBJC_IVAR_$_NBKKSetAsNSSet.setHolder
000000000004b838	add	x21, x0, x8
000000000004b83c	adrp	x0, 33 ; 0x6c000
000000000004b840	add	x0, x0, #0xbb0
000000000004b844	ldr	x8, [x0]
000000000004b848	blr	x8
000000000004b84c	ldr	x22, [x0]
000000000004b850	mov	w0, #0x1
000000000004b854	mov	w1, #0x28
000000000004b858	bl	0x519e0 ; symbol stub for: _calloc
000000000004b85c	ldr	x8, [x22, #0xa8]!
000000000004b860	sub	x9, x22, #0x8
000000000004b864	stp	x8, x22, [x0]
000000000004b868	str	x0, [x8, #0x8]
000000000004b86c	str	x0, [x22]
000000000004b870	ldr	x8, [x22, #0x10]
000000000004b874	add	x8, x8, #0x1
000000000004b878	str	x8, [x22, #0x10]
000000000004b87c	stp	x9, x0, [x0, #0x18]
000000000004b880	str	x19, [x0, #0x10]!
000000000004b884	stp	x19, x0, [x21]
000000000004b888	mov	x0, x20
000000000004b88c	ldp	x29, x30, [sp, #0x20]
000000000004b890	ldp	x20, x19, [sp, #0x10]
000000000004b894	ldp	x22, x21, [sp], #0x30
000000000004b898	ret
-[KotlinMutableSet init]:
000000000004b89c	sub	sp, sp, #0x80
000000000004b8a0	stp	x26, x25, [sp, #0x30]
000000000004b8a4	stp	x24, x23, [sp, #0x40]
000000000004b8a8	stp	x22, x21, [sp, #0x50]
000000000004b8ac	stp	x20, x19, [sp, #0x60]
000000000004b8b0	stp	x29, x30, [sp, #0x70]
000000000004b8b4	add	x29, sp, #0x70
000000000004b8b8	nop
000000000004b8bc	ldr	x8, #0x1f08c ; Objc class ref: NBKMutableSet
000000000004b8c0	stp	x0, x8, [sp, #0x20]
000000000004b8c4	nop
000000000004b8c8	ldr	x1, #0x1ed98 ; Objc selector ref: init
000000000004b8cc	add	x0, sp, #0x20
000000000004b8d0	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004b8d4	mov	x20, x0
000000000004b8d8	cbz	x0, 0x4b9f8
000000000004b8dc	bl	_Kotlin_initRuntimeIfNeeded
000000000004b8e0	adrp	x21, 33 ; 0x6c000
000000000004b8e4	add	x21, x21, #0xbb0
000000000004b8e8	ldr	x25, [x21]
000000000004b8ec	mov	x0, x21
000000000004b8f0	blr	x25
000000000004b8f4	ldr	x24, [x0]
000000000004b8f8	add	x19, x24, #0x138
000000000004b8fc	ldaxr	w23, [x19]
000000000004b900	stlxr	w8, wzr, [x19]
000000000004b904	cbnz	w8, 0x4b8fc
000000000004b908	cmp	w23, #0x1
000000000004b90c	b.ne	0x4b928
000000000004b910	adr	x8, #0x3b133
000000000004b914	nop
000000000004b918	ldarb	w8, [x8]
000000000004b91c	tbz	w8, #0x0, 0x4b928
000000000004b920	mov	x0, x19
000000000004b924	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b928	mov	x8, sp
000000000004b92c	add	x1, x8, #0x18
000000000004b930	str	xzr, [sp, #0x18]
000000000004b934	mov	x0, x21
000000000004b938	blr	x25
000000000004b93c	ldr	x9, [x0]
000000000004b940	ldr	x10, [x9, #0x110]
000000000004b944	str	x8, [x9, #0x110]
000000000004b948	mov	x8, #0x400000000
000000000004b94c	stp	x10, x8, [sp, #0x8]
000000000004b950	mov	w0, #0x8
000000000004b954	bl	_Kotlin_MutableSet_createWithCapacity
000000000004b958	mov	x22, x0
000000000004b95c	nop
000000000004b960	ldrsw	x8, _OBJC_IVAR_$_NBKMutableSet.setHolder
000000000004b964	add	x26, x20, x8
000000000004b968	mov	x0, x21
000000000004b96c	blr	x25
000000000004b970	mov	x21, x0
000000000004b974	ldr	x25, [x0]
000000000004b978	mov	w0, #0x1
000000000004b97c	mov	w1, #0x28
000000000004b980	bl	0x519e0 ; symbol stub for: _calloc
000000000004b984	ldr	x8, [x25, #0xa8]!
000000000004b988	sub	x9, x25, #0x8
000000000004b98c	mov	x10, x0
000000000004b990	str	x22, [x10, #0x10]!
000000000004b994	str	x9, [x0, #0x18]
000000000004b998	stp	x8, x25, [x0]
000000000004b99c	str	x0, [x8, #0x8]
000000000004b9a0	str	x0, [x25]
000000000004b9a4	ldr	x8, [x25, #0x10]
000000000004b9a8	add	x8, x8, #0x1
000000000004b9ac	str	x8, [x25, #0x10]
000000000004b9b0	str	x0, [x0, #0x20]
000000000004b9b4	stp	x22, x10, [x26]
000000000004b9b8	ldr	x8, [x21]
000000000004b9bc	ldr	x9, [sp, #0x8]
000000000004b9c0	str	x9, [x8, #0x110]
000000000004b9c4	cbz	x24, 0x4b9f8
000000000004b9c8	ldaxr	w8, [x19]
000000000004b9cc	stlxr	w9, w23, [x19]
000000000004b9d0	cbnz	w9, 0x4b9c8
000000000004b9d4	cbnz	w23, 0x4b9f8
000000000004b9d8	cmp	w8, #0x1
000000000004b9dc	b.ne	0x4b9f8
000000000004b9e0	adr	x8, #0x3b063
000000000004b9e4	nop
000000000004b9e8	ldarb	w8, [x8]
000000000004b9ec	tbz	w8, #0x0, 0x4b9f8
000000000004b9f0	mov	x0, x19
000000000004b9f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b9f8	mov	x0, x20
000000000004b9fc	ldp	x29, x30, [sp, #0x70]
000000000004ba00	ldp	x20, x19, [sp, #0x60]
000000000004ba04	ldp	x22, x21, [sp, #0x50]
000000000004ba08	ldp	x24, x23, [sp, #0x40]
000000000004ba0c	ldp	x26, x25, [sp, #0x30]
000000000004ba10	add	sp, sp, #0x80
000000000004ba14	ret
000000000004ba18	mov	x20, x0
000000000004ba1c	mov	x0, x21
000000000004ba20	blr	x25
000000000004ba24	ldr	x8, [x0]
000000000004ba28	ldr	x9, [sp, #0x8]
000000000004ba2c	str	x9, [x8, #0x110]
000000000004ba30	cbz	x24, 0x4ba64
000000000004ba34	ldaxr	w8, [x19]
000000000004ba38	stlxr	w9, w23, [x19]
000000000004ba3c	cbnz	w9, 0x4ba34
000000000004ba40	cbnz	w23, 0x4ba64
000000000004ba44	cmp	w8, #0x1
000000000004ba48	b.ne	0x4ba64
000000000004ba4c	adr	x8, #0x3aff7
000000000004ba50	nop
000000000004ba54	ldarb	w8, [x8]
000000000004ba58	tbz	w8, #0x0, 0x4ba64
000000000004ba5c	mov	x0, x19
000000000004ba60	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ba64	mov	x0, x20
000000000004ba68	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet initWithCapacity:]:
000000000004ba6c	sub	sp, sp, #0x80
000000000004ba70	stp	x26, x25, [sp, #0x30]
000000000004ba74	stp	x24, x23, [sp, #0x40]
000000000004ba78	stp	x22, x21, [sp, #0x50]
000000000004ba7c	stp	x20, x19, [sp, #0x60]
000000000004ba80	stp	x29, x30, [sp, #0x70]
000000000004ba84	add	x29, sp, #0x70
000000000004ba88	mov	x21, x2
000000000004ba8c	nop
000000000004ba90	ldr	x8, #0x1eeb8 ; Objc class ref: NBKMutableSet
000000000004ba94	stp	x0, x8, [sp, #0x20]
000000000004ba98	nop
000000000004ba9c	ldr	x1, #0x1ebc4 ; Objc selector ref: init
000000000004baa0	add	x0, sp, #0x20
000000000004baa4	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004baa8	mov	x20, x0
000000000004baac	cbz	x0, 0x4bbd4
000000000004bab0	bl	_Kotlin_initRuntimeIfNeeded
000000000004bab4	adrp	x22, 33 ; 0x6c000
000000000004bab8	add	x22, x22, #0xbb0
000000000004babc	ldr	x25, [x22]
000000000004bac0	mov	x0, x22
000000000004bac4	blr	x25
000000000004bac8	ldr	x24, [x0]
000000000004bacc	add	x19, x24, #0x138
000000000004bad0	ldaxr	w23, [x19]
000000000004bad4	stlxr	w8, wzr, [x19]
000000000004bad8	cbnz	w8, 0x4bad0
000000000004badc	cmp	w23, #0x1
000000000004bae0	b.ne	0x4bafc
000000000004bae4	adr	x8, #0x3af5f
000000000004bae8	nop
000000000004baec	ldarb	w8, [x8]
000000000004baf0	tbz	w8, #0x0, 0x4bafc
000000000004baf4	mov	x0, x19
000000000004baf8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bafc	mov	x8, sp
000000000004bb00	add	x1, x8, #0x18
000000000004bb04	str	xzr, [sp, #0x18]
000000000004bb08	mov	x0, x22
000000000004bb0c	blr	x25
000000000004bb10	ldr	x9, [x0]
000000000004bb14	ldr	x10, [x9, #0x110]
000000000004bb18	str	x8, [x9, #0x110]
000000000004bb1c	mov	x8, #0x400000000
000000000004bb20	stp	x10, x8, [sp, #0x8]
000000000004bb24	mov	w8, #0x7fffffff
000000000004bb28	cmp	x21, x8
000000000004bb2c	csel	w0, w21, w8, lo
000000000004bb30	bl	_Kotlin_MutableSet_createWithCapacity
000000000004bb34	mov	x21, x0
000000000004bb38	nop
000000000004bb3c	ldrsw	x8, _OBJC_IVAR_$_NBKMutableSet.setHolder
000000000004bb40	add	x26, x20, x8
000000000004bb44	mov	x0, x22
000000000004bb48	blr	x25
000000000004bb4c	mov	x22, x0
000000000004bb50	ldr	x25, [x0]
000000000004bb54	mov	w0, #0x1
000000000004bb58	mov	w1, #0x28
000000000004bb5c	bl	0x519e0 ; symbol stub for: _calloc
000000000004bb60	ldr	x8, [x25, #0xa8]!
000000000004bb64	sub	x9, x25, #0x8
000000000004bb68	mov	x10, x0
000000000004bb6c	str	x21, [x10, #0x10]!
000000000004bb70	str	x9, [x0, #0x18]
000000000004bb74	stp	x8, x25, [x0]
000000000004bb78	str	x0, [x8, #0x8]
000000000004bb7c	str	x0, [x25]
000000000004bb80	ldr	x8, [x25, #0x10]
000000000004bb84	add	x8, x8, #0x1
000000000004bb88	str	x8, [x25, #0x10]
000000000004bb8c	str	x0, [x0, #0x20]
000000000004bb90	stp	x21, x10, [x26]
000000000004bb94	ldr	x8, [x22]
000000000004bb98	ldr	x9, [sp, #0x8]
000000000004bb9c	str	x9, [x8, #0x110]
000000000004bba0	cbz	x24, 0x4bbd4
000000000004bba4	ldaxr	w8, [x19]
000000000004bba8	stlxr	w9, w23, [x19]
000000000004bbac	cbnz	w9, 0x4bba4
000000000004bbb0	cbnz	w23, 0x4bbd4
000000000004bbb4	cmp	w8, #0x1
000000000004bbb8	b.ne	0x4bbd4
000000000004bbbc	adr	x8, #0x3ae87
000000000004bbc0	nop
000000000004bbc4	ldarb	w8, [x8]
000000000004bbc8	tbz	w8, #0x0, 0x4bbd4
000000000004bbcc	mov	x0, x19
000000000004bbd0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bbd4	mov	x0, x20
000000000004bbd8	ldp	x29, x30, [sp, #0x70]
000000000004bbdc	ldp	x20, x19, [sp, #0x60]
000000000004bbe0	ldp	x22, x21, [sp, #0x50]
000000000004bbe4	ldp	x24, x23, [sp, #0x40]
000000000004bbe8	ldp	x26, x25, [sp, #0x30]
000000000004bbec	add	sp, sp, #0x80
000000000004bbf0	ret
000000000004bbf4	mov	x20, x0
000000000004bbf8	mov	x0, x22
000000000004bbfc	blr	x25
000000000004bc00	ldr	x8, [x0]
000000000004bc04	ldr	x9, [sp, #0x8]
000000000004bc08	str	x9, [x8, #0x110]
000000000004bc0c	cbz	x24, 0x4bc40
000000000004bc10	ldaxr	w8, [x19]
000000000004bc14	stlxr	w9, w23, [x19]
000000000004bc18	cbnz	w9, 0x4bc10
000000000004bc1c	cbnz	w23, 0x4bc40
000000000004bc20	cmp	w8, #0x1
000000000004bc24	b.ne	0x4bc40
000000000004bc28	adr	x8, #0x3ae1b
000000000004bc2c	nop
000000000004bc30	ldarb	w8, [x8]
000000000004bc34	tbz	w8, #0x0, 0x4bc40
000000000004bc38	mov	x0, x19
000000000004bc3c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bc40	mov	x0, x20
000000000004bc44	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet initWithObjects:count:]:
000000000004bc48	stp	x22, x21, [sp, #-0x30]!
000000000004bc4c	stp	x20, x19, [sp, #0x10]
000000000004bc50	stp	x29, x30, [sp, #0x20]
000000000004bc54	add	x29, sp, #0x20
000000000004bc58	mov	x19, x3
000000000004bc5c	mov	x20, x2
000000000004bc60	nop
000000000004bc64	ldr	x1, #0x1ea24 ; Objc selector ref: initWithCapacity:
000000000004bc68	mov	x2, x3
000000000004bc6c	bl	0x51b78 ; Objc message: -[x0 initWithCapacity:]
000000000004bc70	mov	x21, x0
000000000004bc74	cmp	x0, #0x0
000000000004bc78	ccmp	x19, #0x0, #0x4, ne
000000000004bc7c	b.eq	0x4bca0
000000000004bc80	nop
000000000004bc84	ldr	x22, #0x1e91c ; Objc selector ref: addObject:
000000000004bc88	ldr	x2, [x20], #0x8
000000000004bc8c	mov	x0, x21
000000000004bc90	mov	x1, x22
000000000004bc94	bl	0x51b78 ; Objc message: -[x0 addObject:]
000000000004bc98	subs	x19, x19, #0x1
000000000004bc9c	b.ne	0x4bc88
000000000004bca0	mov	x0, x21
000000000004bca4	ldp	x29, x30, [sp, #0x20]
000000000004bca8	ldp	x20, x19, [sp, #0x10]
000000000004bcac	ldp	x22, x21, [sp], #0x30
000000000004bcb0	ret
-[KotlinMutableSet dealloc]:
000000000004bcb4	sub	sp, sp, #0x60
000000000004bcb8	stp	x26, x25, [sp, #0x10]
000000000004bcbc	stp	x24, x23, [sp, #0x20]
000000000004bcc0	stp	x22, x21, [sp, #0x30]
000000000004bcc4	stp	x20, x19, [sp, #0x40]
000000000004bcc8	stp	x29, x30, [sp, #0x50]
000000000004bccc	add	x29, sp, #0x50
000000000004bcd0	mov	x19, x0
000000000004bcd4	nop
000000000004bcd8	ldrsw	x8, _OBJC_IVAR_$_NBKMutableSet.setHolder
000000000004bcdc	add	x24, x0, x8
000000000004bce0	bl	_Kotlin_initRuntimeIfNeeded
000000000004bce4	adrp	x21, 33 ; 0x6c000
000000000004bce8	add	x21, x21, #0xbb0
000000000004bcec	ldr	x25, [x21]
000000000004bcf0	mov	x0, x21
000000000004bcf4	blr	x25
000000000004bcf8	ldr	x8, [x0]
000000000004bcfc	add	x20, x8, #0x138
000000000004bd00	ldaxr	w22, [x20]
000000000004bd04	stlxr	w8, wzr, [x20]
000000000004bd08	cbnz	w8, 0x4bd00
000000000004bd0c	adr	x23, #0x3ad37
000000000004bd10	nop
000000000004bd14	cmp	w22, #0x1
000000000004bd18	b.ne	0x4bd2c
000000000004bd1c	ldarb	w8, [x23]
000000000004bd20	tbz	w8, #0x0, 0x4bd2c
000000000004bd24	mov	x0, x20
000000000004bd28	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bd2c	ldr	x8, [x24]
000000000004bd30	cbz	x8, 0x4bd4c
000000000004bd34	ldr	x1, [x24, #0x8]
000000000004bd38	mov	x0, x21
000000000004bd3c	blr	x25
000000000004bd40	ldr	x8, [x0]
000000000004bd44	add	x0, x8, #0x8
000000000004bd48	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004bd4c	ldaxr	w8, [x20]
000000000004bd50	stlxr	w9, w22, [x20]
000000000004bd54	cbnz	w9, 0x4bd4c
000000000004bd58	cbnz	w22, 0x4bd74
000000000004bd5c	cmp	w8, #0x1
000000000004bd60	b.ne	0x4bd74
000000000004bd64	ldarb	w8, [x23]
000000000004bd68	tbz	w8, #0x0, 0x4bd74
000000000004bd6c	mov	x0, x20
000000000004bd70	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bd74	nop
000000000004bd78	ldr	x8, #0x1ebd0 ; Objc class ref: NBKMutableSet
000000000004bd7c	stp	x19, x8, [sp]
000000000004bd80	nop
000000000004bd84	ldr	x1, #0x1e89c ; Objc selector ref: dealloc
000000000004bd88	mov	x0, sp
000000000004bd8c	bl	0x51b84 ; Objc message: -[[x0 super] dealloc]
000000000004bd90	ldp	x29, x30, [sp, #0x50]
000000000004bd94	ldp	x20, x19, [sp, #0x40]
000000000004bd98	ldp	x22, x21, [sp, #0x30]
000000000004bd9c	ldp	x24, x23, [sp, #0x20]
000000000004bda0	ldp	x26, x25, [sp, #0x10]
000000000004bda4	add	sp, sp, #0x60
000000000004bda8	ret
-[KotlinMutableSet initWithKSet:]:
000000000004bdac	sub	sp, sp, #0x40
000000000004bdb0	stp	x22, x21, [sp, #0x10]
000000000004bdb4	stp	x20, x19, [sp, #0x20]
000000000004bdb8	stp	x29, x30, [sp, #0x30]
000000000004bdbc	add	x29, sp, #0x30
000000000004bdc0	mov	x19, x2
000000000004bdc4	nop
000000000004bdc8	ldr	x8, #0x1eb80 ; Objc class ref: NBKMutableSet
000000000004bdcc	stp	x0, x8, [sp]
000000000004bdd0	nop
000000000004bdd4	ldr	x1, #0x1e88c ; Objc selector ref: init
000000000004bdd8	mov	x0, sp
000000000004bddc	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004bde0	mov	x20, x0
000000000004bde4	cbz	x0, 0x4be40
000000000004bde8	nop
000000000004bdec	ldrsw	x8, _OBJC_IVAR_$_NBKMutableSet.setHolder
000000000004bdf0	add	x21, x20, x8
000000000004bdf4	adrp	x0, 33 ; 0x6c000
000000000004bdf8	add	x0, x0, #0xbb0
000000000004bdfc	ldr	x8, [x0]
000000000004be00	blr	x8
000000000004be04	ldr	x22, [x0]
000000000004be08	mov	w0, #0x1
000000000004be0c	mov	w1, #0x28
000000000004be10	bl	0x519e0 ; symbol stub for: _calloc
000000000004be14	ldr	x8, [x22, #0xa8]!
000000000004be18	sub	x9, x22, #0x8
000000000004be1c	stp	x8, x22, [x0]
000000000004be20	str	x0, [x8, #0x8]
000000000004be24	str	x0, [x22]
000000000004be28	ldr	x8, [x22, #0x10]
000000000004be2c	add	x8, x8, #0x1
000000000004be30	str	x8, [x22, #0x10]
000000000004be34	stp	x9, x0, [x0, #0x18]
000000000004be38	str	x19, [x0, #0x10]!
000000000004be3c	stp	x19, x0, [x21]
000000000004be40	mov	x0, x20
000000000004be44	ldp	x29, x30, [sp, #0x30]
000000000004be48	ldp	x20, x19, [sp, #0x20]
000000000004be4c	ldp	x22, x21, [sp, #0x10]
000000000004be50	add	sp, sp, #0x40
000000000004be54	ret
-[KotlinMutableSet toKotlin:]:
000000000004be58	stp	x22, x21, [sp, #-0x30]!
000000000004be5c	stp	x20, x19, [sp, #0x10]
000000000004be60	stp	x29, x30, [sp, #0x20]
000000000004be64	add	x29, sp, #0x20
000000000004be68	mov	x19, x2
000000000004be6c	mov	x20, x0
000000000004be70	nop
000000000004be74	ldrsw	x21, _OBJC_IVAR_$_NBKMutableSet.setHolder
000000000004be78	bl	_Kotlin_initRuntimeIfNeeded
000000000004be7c	ldr	x0, [x20, x21]
000000000004be80	str	x0, [x19]
000000000004be84	ldp	x29, x30, [sp, #0x20]
000000000004be88	ldp	x20, x19, [sp, #0x10]
000000000004be8c	ldp	x22, x21, [sp], #0x30
000000000004be90	ret
-[KotlinMutableSet count]:
000000000004be94	stp	x22, x21, [sp, #-0x30]!
000000000004be98	stp	x20, x19, [sp, #0x10]
000000000004be9c	stp	x29, x30, [sp, #0x20]
000000000004bea0	add	x29, sp, #0x20
000000000004bea4	mov	x20, x0
000000000004bea8	bl	_Kotlin_initRuntimeIfNeeded
000000000004beac	adrp	x0, 33 ; 0x6c000
000000000004beb0	add	x0, x0, #0xbb0
000000000004beb4	ldr	x8, [x0]
000000000004beb8	blr	x8
000000000004bebc	ldr	x8, [x0]
000000000004bec0	add	x19, x8, #0x138
000000000004bec4	ldaxr	w21, [x19]
000000000004bec8	stlxr	w8, wzr, [x19]
000000000004becc	cbnz	w8, 0x4bec4
000000000004bed0	cmp	w21, #0x1
000000000004bed4	b.ne	0x4bef0
000000000004bed8	adr	x8, #0x3ab6b
000000000004bedc	nop
000000000004bee0	ldarb	w8, [x8]
000000000004bee4	tbz	w8, #0x0, 0x4bef0
000000000004bee8	mov	x0, x19
000000000004beec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bef0	nop
000000000004bef4	ldrsw	x22, _OBJC_IVAR_$_NBKMutableSet.setHolder
000000000004bef8	bl	_Kotlin_initRuntimeIfNeeded
000000000004befc	ldr	x0, [x20, x22]
000000000004bf00	bl	_Kotlin_Collection_getSize
000000000004bf04	mov	x20, x0
000000000004bf08	ldaxr	w8, [x19]
000000000004bf0c	stlxr	w9, w21, [x19]
000000000004bf10	cbnz	w9, 0x4bf08
000000000004bf14	cbnz	w21, 0x4bf38
000000000004bf18	cmp	w8, #0x1
000000000004bf1c	b.ne	0x4bf38
000000000004bf20	adr	x8, #0x3ab23
000000000004bf24	nop
000000000004bf28	ldarb	w8, [x8]
000000000004bf2c	tbz	w8, #0x0, 0x4bf38
000000000004bf30	mov	x0, x19
000000000004bf34	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bf38	sxtw	x0, w20
000000000004bf3c	ldp	x29, x30, [sp, #0x20]
000000000004bf40	ldp	x20, x19, [sp, #0x10]
000000000004bf44	ldp	x22, x21, [sp], #0x30
000000000004bf48	ret
000000000004bf4c	mov	x20, x0
000000000004bf50	ldaxr	w8, [x19]
000000000004bf54	stlxr	w9, w21, [x19]
000000000004bf58	cbnz	w9, 0x4bf50
000000000004bf5c	cbnz	w21, 0x4bf80
000000000004bf60	cmp	w8, #0x1
000000000004bf64	b.ne	0x4bf80
000000000004bf68	adr	x8, #0x3aadb
000000000004bf6c	nop
000000000004bf70	ldarb	w8, [x8]
000000000004bf74	tbz	w8, #0x0, 0x4bf80
000000000004bf78	mov	x0, x19
000000000004bf7c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bf80	mov	x0, x20
000000000004bf84	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet member:]:
000000000004bf88	stp	x24, x23, [sp, #-0x40]!
000000000004bf8c	stp	x22, x21, [sp, #0x10]
000000000004bf90	stp	x20, x19, [sp, #0x20]
000000000004bf94	stp	x29, x30, [sp, #0x30]
000000000004bf98	add	x29, sp, #0x30
000000000004bf9c	mov	x20, x2
000000000004bfa0	mov	x21, x0
000000000004bfa4	bl	_Kotlin_initRuntimeIfNeeded
000000000004bfa8	adrp	x0, 33 ; 0x6c000
000000000004bfac	add	x0, x0, #0xbb0
000000000004bfb0	ldr	x8, [x0]
000000000004bfb4	blr	x8
000000000004bfb8	ldr	x8, [x0]
000000000004bfbc	add	x19, x8, #0x138
000000000004bfc0	ldaxr	w22, [x19]
000000000004bfc4	stlxr	w8, wzr, [x19]
000000000004bfc8	cbnz	w8, 0x4bfc0
000000000004bfcc	cmp	w22, #0x1
000000000004bfd0	b.ne	0x4bfec
000000000004bfd4	adr	x8, #0x3aa6f
000000000004bfd8	nop
000000000004bfdc	ldarb	w8, [x8]
000000000004bfe0	tbz	w8, #0x0, 0x4bfec
000000000004bfe4	mov	x0, x19
000000000004bfe8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bfec	nop
000000000004bff0	ldrsw	x23, _OBJC_IVAR_$_NBKMutableSet.setHolder
000000000004bff4	bl	_Kotlin_initRuntimeIfNeeded
000000000004bff8	ldr	x0, [x21, x23]
000000000004bffc	mov	x1, x20
000000000004c000	bl	__ZL15KSet_getElementP9ObjHeaderP11objc_object
000000000004c004	mov	x20, x0
000000000004c008	ldaxr	w8, [x19]
000000000004c00c	stlxr	w9, w22, [x19]
000000000004c010	cbnz	w9, 0x4c008
000000000004c014	cbnz	w22, 0x4c038
000000000004c018	cmp	w8, #0x1
000000000004c01c	b.ne	0x4c038
000000000004c020	adr	x8, #0x3aa23
000000000004c024	nop
000000000004c028	ldarb	w8, [x8]
000000000004c02c	tbz	w8, #0x0, 0x4c038
000000000004c030	mov	x0, x19
000000000004c034	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c038	mov	x0, x20
000000000004c03c	ldp	x29, x30, [sp, #0x30]
000000000004c040	ldp	x20, x19, [sp, #0x20]
000000000004c044	ldp	x22, x21, [sp, #0x10]
000000000004c048	ldp	x24, x23, [sp], #0x40
000000000004c04c	ret
000000000004c050	mov	x20, x0
000000000004c054	ldaxr	w8, [x19]
000000000004c058	stlxr	w9, w22, [x19]
000000000004c05c	cbnz	w9, 0x4c054
000000000004c060	cbnz	w22, 0x4c084
000000000004c064	cmp	w8, #0x1
000000000004c068	b.ne	0x4c084
000000000004c06c	adr	x8, #0x3a9d7
000000000004c070	nop
000000000004c074	ldarb	w8, [x8]
000000000004c078	tbz	w8, #0x0, 0x4c084
000000000004c07c	mov	x0, x19
000000000004c080	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c084	mov	x0, x20
000000000004c088	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet containsObject:]:
000000000004c08c	sub	sp, sp, #0x70
000000000004c090	stp	x26, x25, [sp, #0x20]
000000000004c094	stp	x24, x23, [sp, #0x30]
000000000004c098	stp	x22, x21, [sp, #0x40]
000000000004c09c	stp	x20, x19, [sp, #0x50]
000000000004c0a0	stp	x29, x30, [sp, #0x60]
000000000004c0a4	add	x29, sp, #0x60
000000000004c0a8	mov	x21, x2
000000000004c0ac	mov	x22, x0
000000000004c0b0	bl	_Kotlin_initRuntimeIfNeeded
000000000004c0b4	adrp	x20, 32 ; 0x6c000
000000000004c0b8	add	x20, x20, #0xbb0
000000000004c0bc	ldr	x24, [x20]
000000000004c0c0	mov	x0, x20
000000000004c0c4	blr	x24
000000000004c0c8	ldr	x8, [x0]
000000000004c0cc	add	x19, x8, #0x138
000000000004c0d0	ldaxr	w23, [x19]
000000000004c0d4	stlxr	w8, wzr, [x19]
000000000004c0d8	cbnz	w8, 0x4c0d0
000000000004c0dc	cmp	w23, #0x1
000000000004c0e0	b.ne	0x4c0fc
000000000004c0e4	adr	x8, #0x3a95f
000000000004c0e8	nop
000000000004c0ec	ldarb	w8, [x8]
000000000004c0f0	tbz	w8, #0x0, 0x4c0fc
000000000004c0f4	mov	x0, x19
000000000004c0f8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c0fc	mov	x25, sp
000000000004c100	str	xzr, [sp, #0x18]
000000000004c104	mov	x0, x20
000000000004c108	blr	x24
000000000004c10c	ldr	x8, [x0]
000000000004c110	ldr	x9, [x8, #0x110]
000000000004c114	str	x25, [x8, #0x110]
000000000004c118	mov	x8, #0x400000000
000000000004c11c	stp	x9, x8, [sp, #0x8]
000000000004c120	nop
000000000004c124	ldrsw	x26, _OBJC_IVAR_$_NBKMutableSet.setHolder
000000000004c128	bl	_Kotlin_initRuntimeIfNeeded
000000000004c12c	ldr	x22, [x22, x26]
000000000004c130	nop
000000000004c134	ldr	x0, #0x1e784 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004c138	nop
000000000004c13c	ldr	x1, #0x1e61c ; Objc selector ref: null
000000000004c140	bl	0x51b78 ; Objc message: +[NSNull null]
000000000004c144	cmp	x0, x21
000000000004c148	b.eq	0x4c16c
000000000004c14c	cbz	x21, 0x4c16c
000000000004c150	add	x2, x25, #0x18
000000000004c154	nop
000000000004c158	ldr	x1, #0x3ab40
000000000004c15c	mov	x0, x21
000000000004c160	bl	0x51b78 ; Objc message: -[x0 null]
000000000004c164	mov	x1, x0
000000000004c168	b	0x4c174
000000000004c16c	mov	x1, #0x0
000000000004c170	str	xzr, [sp, #0x18]
000000000004c174	mov	x0, x22
000000000004c178	bl	_Kotlin_Set_contains
000000000004c17c	mov	x21, x0
000000000004c180	mov	x0, x20
000000000004c184	blr	x24
000000000004c188	ldr	x8, [x0]
000000000004c18c	ldr	x9, [sp, #0x8]
000000000004c190	str	x9, [x8, #0x110]
000000000004c194	ldaxr	w8, [x19]
000000000004c198	stlxr	w9, w23, [x19]
000000000004c19c	cbnz	w9, 0x4c194
000000000004c1a0	cbnz	w23, 0x4c1c4
000000000004c1a4	cmp	w8, #0x1
000000000004c1a8	b.ne	0x4c1c4
000000000004c1ac	adr	x8, #0x3a897
000000000004c1b0	nop
000000000004c1b4	ldarb	w8, [x8]
000000000004c1b8	tbz	w8, #0x0, 0x4c1c4
000000000004c1bc	mov	x0, x19
000000000004c1c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c1c4	mov	x0, x21
000000000004c1c8	ldp	x29, x30, [sp, #0x60]
000000000004c1cc	ldp	x20, x19, [sp, #0x50]
000000000004c1d0	ldp	x22, x21, [sp, #0x40]
000000000004c1d4	ldp	x24, x23, [sp, #0x30]
000000000004c1d8	ldp	x26, x25, [sp, #0x20]
000000000004c1dc	add	sp, sp, #0x70
000000000004c1e0	ret
000000000004c1e4	mov	x21, x0
000000000004c1e8	mov	x0, x20
000000000004c1ec	blr	x24
000000000004c1f0	ldr	x8, [x0]
000000000004c1f4	ldr	x9, [sp, #0x8]
000000000004c1f8	str	x9, [x8, #0x110]
000000000004c1fc	ldaxr	w8, [x19]
000000000004c200	stlxr	w9, w23, [x19]
000000000004c204	cbnz	w9, 0x4c1fc
000000000004c208	cbnz	w23, 0x4c22c
000000000004c20c	cmp	w8, #0x1
000000000004c210	b.ne	0x4c22c
000000000004c214	adr	x8, #0x3a82f
000000000004c218	nop
000000000004c21c	ldarb	w8, [x8]
000000000004c220	tbz	w8, #0x0, 0x4c22c
000000000004c224	mov	x0, x19
000000000004c228	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c22c	mov	x0, x21
000000000004c230	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet objectEnumerator]:
000000000004c234	sub	sp, sp, #0x70
000000000004c238	stp	x26, x25, [sp, #0x20]
000000000004c23c	stp	x24, x23, [sp, #0x30]
000000000004c240	stp	x22, x21, [sp, #0x40]
000000000004c244	stp	x20, x19, [sp, #0x50]
000000000004c248	stp	x29, x30, [sp, #0x60]
000000000004c24c	add	x29, sp, #0x60
000000000004c250	mov	x21, x0
000000000004c254	bl	_Kotlin_initRuntimeIfNeeded
000000000004c258	adrp	x20, 32 ; 0x6c000
000000000004c25c	add	x20, x20, #0xbb0
000000000004c260	ldr	x25, [x20]
000000000004c264	mov	x0, x20
000000000004c268	blr	x25
000000000004c26c	ldr	x8, [x0]
000000000004c270	add	x19, x8, #0x138
000000000004c274	ldaxr	w24, [x19]
000000000004c278	stlxr	w8, wzr, [x19]
000000000004c27c	cbnz	w8, 0x4c274
000000000004c280	cmp	w24, #0x1
000000000004c284	b.ne	0x4c2a0
000000000004c288	adr	x8, #0x3a7bb
000000000004c28c	nop
000000000004c290	ldarb	w8, [x8]
000000000004c294	tbz	w8, #0x0, 0x4c2a0
000000000004c298	mov	x0, x19
000000000004c29c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c2a0	mov	x8, sp
000000000004c2a4	add	x23, x8, #0x18
000000000004c2a8	str	xzr, [sp, #0x18]
000000000004c2ac	mov	x0, x20
000000000004c2b0	blr	x25
000000000004c2b4	ldr	x9, [x0]
000000000004c2b8	ldr	x10, [x9, #0x110]
000000000004c2bc	str	x8, [x9, #0x110]
000000000004c2c0	mov	x8, #0x400000000
000000000004c2c4	stp	x10, x8, [sp, #0x8]
000000000004c2c8	nop
000000000004c2cc	ldr	x22, #0x1e60c ; Objc class ref: NBKKIteratorAsNSEnumerator
000000000004c2d0	nop
000000000004c2d4	ldrsw	x26, _OBJC_IVAR_$_NBKMutableSet.setHolder
000000000004c2d8	bl	_Kotlin_initRuntimeIfNeeded
000000000004c2dc	ldr	x0, [x21, x26]
000000000004c2e0	mov	x1, x23
000000000004c2e4	bl	_Kotlin_Set_iterator
000000000004c2e8	mov	x2, x0
000000000004c2ec	nop
000000000004c2f0	ldr	x1, #0x1e328 ; Objc selector ref: createWithKIterator:
000000000004c2f4	mov	x0, x22
000000000004c2f8	bl	0x51b78 ; Objc message: +[NBKKIteratorAsNSEnumerator createWithKIterator:]
000000000004c2fc	mov	x21, x0
000000000004c300	mov	x0, x20
000000000004c304	blr	x25
000000000004c308	ldr	x8, [x0]
000000000004c30c	ldr	x9, [sp, #0x8]
000000000004c310	str	x9, [x8, #0x110]
000000000004c314	ldaxr	w8, [x19]
000000000004c318	stlxr	w9, w24, [x19]
000000000004c31c	cbnz	w9, 0x4c314
000000000004c320	cbnz	w24, 0x4c344
000000000004c324	cmp	w8, #0x1
000000000004c328	b.ne	0x4c344
000000000004c32c	adr	x8, #0x3a717
000000000004c330	nop
000000000004c334	ldarb	w8, [x8]
000000000004c338	tbz	w8, #0x0, 0x4c344
000000000004c33c	mov	x0, x19
000000000004c340	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c344	mov	x0, x21
000000000004c348	ldp	x29, x30, [sp, #0x60]
000000000004c34c	ldp	x20, x19, [sp, #0x50]
000000000004c350	ldp	x22, x21, [sp, #0x40]
000000000004c354	ldp	x24, x23, [sp, #0x30]
000000000004c358	ldp	x26, x25, [sp, #0x20]
000000000004c35c	add	sp, sp, #0x70
000000000004c360	ret
000000000004c364	mov	x21, x0
000000000004c368	mov	x0, x20
000000000004c36c	blr	x25
000000000004c370	ldr	x8, [x0]
000000000004c374	ldr	x9, [sp, #0x8]
000000000004c378	str	x9, [x8, #0x110]
000000000004c37c	ldaxr	w8, [x19]
000000000004c380	stlxr	w9, w24, [x19]
000000000004c384	cbnz	w9, 0x4c37c
000000000004c388	cbnz	w24, 0x4c3ac
000000000004c38c	cmp	w8, #0x1
000000000004c390	b.ne	0x4c3ac
000000000004c394	adr	x8, #0x3a6af
000000000004c398	nop
000000000004c39c	ldarb	w8, [x8]
000000000004c3a0	tbz	w8, #0x0, 0x4c3ac
000000000004c3a4	mov	x0, x19
000000000004c3a8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c3ac	mov	x0, x21
000000000004c3b0	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet addObject:]:
000000000004c3b4	sub	sp, sp, #0x70
000000000004c3b8	stp	x26, x25, [sp, #0x20]
000000000004c3bc	stp	x24, x23, [sp, #0x30]
000000000004c3c0	stp	x22, x21, [sp, #0x40]
000000000004c3c4	stp	x20, x19, [sp, #0x50]
000000000004c3c8	stp	x29, x30, [sp, #0x60]
000000000004c3cc	add	x29, sp, #0x60
000000000004c3d0	mov	x21, x2
000000000004c3d4	mov	x22, x0
000000000004c3d8	bl	_Kotlin_initRuntimeIfNeeded
000000000004c3dc	adrp	x20, 32 ; 0x6c000
000000000004c3e0	add	x20, x20, #0xbb0
000000000004c3e4	ldr	x24, [x20]
000000000004c3e8	mov	x0, x20
000000000004c3ec	blr	x24
000000000004c3f0	ldr	x8, [x0]
000000000004c3f4	add	x19, x8, #0x138
000000000004c3f8	ldaxr	w23, [x19]
000000000004c3fc	stlxr	w8, wzr, [x19]
000000000004c400	cbnz	w8, 0x4c3f8
000000000004c404	cmp	w23, #0x1
000000000004c408	b.ne	0x4c424
000000000004c40c	adr	x8, #0x3a637
000000000004c410	nop
000000000004c414	ldarb	w8, [x8]
000000000004c418	tbz	w8, #0x0, 0x4c424
000000000004c41c	mov	x0, x19
000000000004c420	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c424	mov	x25, sp
000000000004c428	str	xzr, [sp, #0x18]
000000000004c42c	mov	x0, x20
000000000004c430	blr	x24
000000000004c434	ldr	x8, [x0]
000000000004c438	ldr	x9, [x8, #0x110]
000000000004c43c	str	x25, [x8, #0x110]
000000000004c440	mov	x8, #0x400000000
000000000004c444	stp	x9, x8, [sp, #0x8]
000000000004c448	nop
000000000004c44c	ldrsw	x26, _OBJC_IVAR_$_NBKMutableSet.setHolder
000000000004c450	bl	_Kotlin_initRuntimeIfNeeded
000000000004c454	ldr	x22, [x22, x26]
000000000004c458	nop
000000000004c45c	ldr	x0, #0x1e45c ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004c460	nop
000000000004c464	ldr	x1, #0x1e2f4 ; Objc selector ref: null
000000000004c468	bl	0x51b78 ; Objc message: +[NSNull null]
000000000004c46c	cmp	x0, x21
000000000004c470	b.eq	0x4c494
000000000004c474	cbz	x21, 0x4c494
000000000004c478	add	x2, x25, #0x18
000000000004c47c	nop
000000000004c480	ldr	x1, #0x3a818
000000000004c484	mov	x0, x21
000000000004c488	bl	0x51b78 ; Objc message: -[x0 null]
000000000004c48c	mov	x1, x0
000000000004c490	b	0x4c49c
000000000004c494	mov	x1, #0x0
000000000004c498	str	xzr, [sp, #0x18]
000000000004c49c	mov	x0, x22
000000000004c4a0	bl	_Kotlin_MutableCollection_addObject
000000000004c4a4	mov	x0, x20
000000000004c4a8	blr	x24
000000000004c4ac	ldr	x8, [x0]
000000000004c4b0	ldr	x9, [sp, #0x8]
000000000004c4b4	str	x9, [x8, #0x110]
000000000004c4b8	ldaxr	w8, [x19]
000000000004c4bc	stlxr	w9, w23, [x19]
000000000004c4c0	cbnz	w9, 0x4c4b8
000000000004c4c4	cbnz	w23, 0x4c4e8
000000000004c4c8	cmp	w8, #0x1
000000000004c4cc	b.ne	0x4c4e8
000000000004c4d0	adr	x8, #0x3a573
000000000004c4d4	nop
000000000004c4d8	ldarb	w8, [x8]
000000000004c4dc	tbz	w8, #0x0, 0x4c4e8
000000000004c4e0	mov	x0, x19
000000000004c4e4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c4e8	ldp	x29, x30, [sp, #0x60]
000000000004c4ec	ldp	x20, x19, [sp, #0x50]
000000000004c4f0	ldp	x22, x21, [sp, #0x40]
000000000004c4f4	ldp	x24, x23, [sp, #0x30]
000000000004c4f8	ldp	x26, x25, [sp, #0x20]
000000000004c4fc	add	sp, sp, #0x70
000000000004c500	ret
000000000004c504	mov	x21, x0
000000000004c508	mov	x0, x20
000000000004c50c	blr	x24
000000000004c510	ldr	x8, [x0]
000000000004c514	ldr	x9, [sp, #0x8]
000000000004c518	str	x9, [x8, #0x110]
000000000004c51c	ldaxr	w8, [x19]
000000000004c520	stlxr	w9, w23, [x19]
000000000004c524	cbnz	w9, 0x4c51c
000000000004c528	cbnz	w23, 0x4c54c
000000000004c52c	cmp	w8, #0x1
000000000004c530	b.ne	0x4c54c
000000000004c534	adr	x8, #0x3a50f
000000000004c538	nop
000000000004c53c	ldarb	w8, [x8]
000000000004c540	tbz	w8, #0x0, 0x4c54c
000000000004c544	mov	x0, x19
000000000004c548	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c54c	mov	x0, x21
000000000004c550	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet removeObject:]:
000000000004c554	sub	sp, sp, #0x90
000000000004c558	stp	x26, x25, [sp, #0x40]
000000000004c55c	stp	x24, x23, [sp, #0x50]
000000000004c560	stp	x22, x21, [sp, #0x60]
000000000004c564	stp	x20, x19, [sp, #0x70]
000000000004c568	stp	x29, x30, [sp, #0x80]
000000000004c56c	add	x29, sp, #0x80
000000000004c570	mov	x22, x2
000000000004c574	mov	x21, x0
000000000004c578	bl	_Kotlin_initRuntimeIfNeeded
000000000004c57c	adrp	x20, 32 ; 0x6c000
000000000004c580	add	x20, x20, #0xbb0
000000000004c584	ldr	x24, [x20]
000000000004c588	mov	x0, x20
000000000004c58c	blr	x24
000000000004c590	ldr	x8, [x0]
000000000004c594	add	x19, x8, #0x138
000000000004c598	ldaxr	w23, [x19]
000000000004c59c	stlxr	w8, wzr, [x19]
000000000004c5a0	cbnz	w8, 0x4c598
000000000004c5a4	cmp	w23, #0x1
000000000004c5a8	b.ne	0x4c5c4
000000000004c5ac	adr	x8, #0x3a497
000000000004c5b0	nop
000000000004c5b4	ldarb	w8, [x8]
000000000004c5b8	tbz	w8, #0x0, 0x4c5c4
000000000004c5bc	mov	x0, x19
000000000004c5c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c5c4	add	x25, sp, #0x8
000000000004c5c8	str	xzr, [sp, #0x20]
000000000004c5cc	mov	x0, x20
000000000004c5d0	blr	x24
000000000004c5d4	ldr	x8, [x0]
000000000004c5d8	ldr	x9, [x8, #0x110]
000000000004c5dc	str	x25, [x8, #0x110]
000000000004c5e0	mov	x8, #0x400000000
000000000004c5e4	stp	x9, x8, [sp, #0x10]
000000000004c5e8	nop
000000000004c5ec	ldrsw	x26, _OBJC_IVAR_$_NBKMutableSet.setHolder
000000000004c5f0	bl	_Kotlin_initRuntimeIfNeeded
000000000004c5f4	ldr	x21, [x21, x26]
000000000004c5f8	nop
000000000004c5fc	ldr	x0, #0x1e2bc ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004c600	nop
000000000004c604	ldr	x1, #0x1e154 ; Objc selector ref: null
000000000004c608	bl	0x51b78 ; Objc message: +[NSNull null]
000000000004c60c	cmp	x0, x22
000000000004c610	b.eq	0x4c634
000000000004c614	cbz	x22, 0x4c634
000000000004c618	add	x2, x25, #0x18
000000000004c61c	nop
000000000004c620	ldr	x1, #0x3a678
000000000004c624	mov	x0, x22
000000000004c628	bl	0x51b78 ; Objc message: -[x0 null]
000000000004c62c	mov	x22, x0
000000000004c630	b	0x4c63c
000000000004c634	mov	x22, #0x0
000000000004c638	str	xzr, [sp, #0x20]
000000000004c63c	str	xzr, [sp, #0x28]
000000000004c640	mov	x0, x20
000000000004c644	blr	x24
000000000004c648	ldr	x8, [x0]
000000000004c64c	ldr	x9, [x8, #0x110]
000000000004c650	add	x10, sp, #0x28
000000000004c654	str	x10, [x8, #0x110]
000000000004c658	mov	x8, #0x300000000
000000000004c65c	stp	x9, x8, [sp, #0x30]
000000000004c660	adr	x25, #0x3a3e3
000000000004c664	nop
000000000004c668	ldarb	w8, [x25]
000000000004c66c	tbz	w8, #0x0, 0x4c674
000000000004c670	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004c674	ldr	x8, [x21]
000000000004c678	and	x8, x8, #0xfffffffffffffffc
000000000004c67c	ldr	x8, [x8]
000000000004c680	ldr	w9, [x8, #0x3c]
000000000004c684	ldr	x8, [x8, #0x40]
000000000004c688	tbnz	w9, #0x1f, 0x4c698
000000000004c68c	mov	w10, #0x15
000000000004c690	and	x9, x9, x10
000000000004c694	b	0x4c71c
000000000004c698	neg	w10, w9
000000000004c69c	mvn	w9, w9
000000000004c6a0	cmp	w10, #0x9
000000000004c6a4	b.ge	0x4c6dc
000000000004c6a8	cmp	w10, #0x2
000000000004c6ac	b.lt	0x4c710
000000000004c6b0	mov	x10, #0x0
000000000004c6b4	mov	x11, x8
000000000004c6b8	ldr	w12, [x11]
000000000004c6bc	cmp	w12, #0x14
000000000004c6c0	b.gt	0x4c718
000000000004c6c4	add	x10, x10, #0x1
000000000004c6c8	add	x11, x11, #0x10
000000000004c6cc	cmp	x9, x10
000000000004c6d0	b.ne	0x4c6b8
000000000004c6d4	mov	x10, x9
000000000004c6d8	b	0x4c718
000000000004c6dc	mov	w10, #0x0
000000000004c6e0	add	w11, w9, w10
000000000004c6e4	cmp	w11, #0x0
000000000004c6e8	cinc	w11, w11, lt
000000000004c6ec	asr	w11, w11, #1
000000000004c6f0	sbfiz	x12, x11, #4, #32
000000000004c6f4	ldr	w12, [x8, x12]
000000000004c6f8	cmp	w12, #0x15
000000000004c6fc	csinc	w10, w10, w11, ge
000000000004c700	csel	w9, w9, w11, lt
000000000004c704	cmp	w10, w9
000000000004c708	b.lt	0x4c6e0
000000000004c70c	b	0x4c718
000000000004c710	mov	w10, #0x0
000000000004c714	b	0x4c718
000000000004c718	sxtw	x9, w10
000000000004c71c	add	x8, x8, x9, lsl #4
000000000004c720	ldr	x8, [x8, #0x8]
000000000004c724	ldr	x8, [x8, #0x20]
000000000004c728	mov	x0, x21
000000000004c72c	mov	x1, x22
000000000004c730	blr	x8
000000000004c734	mov	x0, x20
000000000004c738	blr	x24
000000000004c73c	ldr	x8, [x0]
000000000004c740	ldr	x9, [sp, #0x10]
000000000004c744	str	x9, [x8, #0x110]
000000000004c748	ldaxr	w8, [x19]
000000000004c74c	stlxr	w9, w23, [x19]
000000000004c750	cbnz	w9, 0x4c748
000000000004c754	cbnz	w23, 0x4c770
000000000004c758	cmp	w8, #0x1
000000000004c75c	b.ne	0x4c770
000000000004c760	ldarb	w8, [x25]
000000000004c764	tbz	w8, #0x0, 0x4c770
000000000004c768	mov	x0, x19
000000000004c76c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c770	ldp	x29, x30, [sp, #0x80]
000000000004c774	ldp	x20, x19, [sp, #0x70]
000000000004c778	ldp	x22, x21, [sp, #0x60]
000000000004c77c	ldp	x24, x23, [sp, #0x50]
000000000004c780	ldp	x26, x25, [sp, #0x40]
000000000004c784	add	sp, sp, #0x90
000000000004c788	ret
000000000004c78c	mov	x21, x0
000000000004c790	mov	x0, x20
000000000004c794	blr	x24
000000000004c798	ldr	x8, [x0]
000000000004c79c	ldr	x9, [sp, #0x30]
000000000004c7a0	str	x9, [x8, #0x110]
000000000004c7a4	b	0x4c7b8
000000000004c7a8	mov	x21, x0
000000000004c7ac	mov	x0, x20
000000000004c7b0	blr	x24
000000000004c7b4	ldr	x8, [x0]
000000000004c7b8	ldr	x9, [sp, #0x10]
000000000004c7bc	str	x9, [x8, #0x110]
000000000004c7c0	ldaxr	w8, [x19]
000000000004c7c4	stlxr	w9, w23, [x19]
000000000004c7c8	cbnz	w9, 0x4c7c0
000000000004c7cc	cbnz	w23, 0x4c7f0
000000000004c7d0	cmp	w8, #0x1
000000000004c7d4	b.ne	0x4c7f0
000000000004c7d8	adr	x8, #0x3a26b
000000000004c7dc	nop
000000000004c7e0	ldarb	w8, [x8]
000000000004c7e4	tbz	w8, #0x0, 0x4c7f0
000000000004c7e8	mov	x0, x19
000000000004c7ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c7f0	mov	x0, x21
000000000004c7f4	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KMapAsNSDictionary dealloc]:
000000000004c7f8	sub	sp, sp, #0x60
000000000004c7fc	stp	x26, x25, [sp, #0x10]
000000000004c800	stp	x24, x23, [sp, #0x20]
000000000004c804	stp	x22, x21, [sp, #0x30]
000000000004c808	stp	x20, x19, [sp, #0x40]
000000000004c80c	stp	x29, x30, [sp, #0x50]
000000000004c810	add	x29, sp, #0x50
000000000004c814	mov	x19, x0
000000000004c818	nop
000000000004c81c	ldrsw	x8, _OBJC_IVAR_$_NBKKMapAsNSDictionary.mapHolder
000000000004c820	add	x24, x0, x8
000000000004c824	bl	_Kotlin_initRuntimeIfNeeded
000000000004c828	adrp	x21, 32 ; 0x6c000
000000000004c82c	add	x21, x21, #0xbb0
000000000004c830	ldr	x25, [x21]
000000000004c834	mov	x0, x21
000000000004c838	blr	x25
000000000004c83c	ldr	x8, [x0]
000000000004c840	add	x20, x8, #0x138
000000000004c844	ldaxr	w22, [x20]
000000000004c848	stlxr	w8, wzr, [x20]
000000000004c84c	cbnz	w8, 0x4c844
000000000004c850	adr	x23, #0x3a1f3
000000000004c854	nop
000000000004c858	cmp	w22, #0x1
000000000004c85c	b.ne	0x4c870
000000000004c860	ldarb	w8, [x23]
000000000004c864	tbz	w8, #0x0, 0x4c870
000000000004c868	mov	x0, x20
000000000004c86c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c870	ldr	x8, [x24]
000000000004c874	cbz	x8, 0x4c890
000000000004c878	ldr	x1, [x24, #0x8]
000000000004c87c	mov	x0, x21
000000000004c880	blr	x25
000000000004c884	ldr	x8, [x0]
000000000004c888	add	x0, x8, #0x8
000000000004c88c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004c890	ldaxr	w8, [x20]
000000000004c894	stlxr	w9, w22, [x20]
000000000004c898	cbnz	w9, 0x4c890
000000000004c89c	cbnz	w22, 0x4c8b8
000000000004c8a0	cmp	w8, #0x1
000000000004c8a4	b.ne	0x4c8b8
000000000004c8a8	ldarb	w8, [x23]
000000000004c8ac	tbz	w8, #0x0, 0x4c8b8
000000000004c8b0	mov	x0, x20
000000000004c8b4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c8b8	nop
000000000004c8bc	ldr	x8, #0x1e094 ; Objc class ref: NBKKMapAsNSDictionary
000000000004c8c0	stp	x19, x8, [sp]
000000000004c8c4	nop
000000000004c8c8	ldr	x1, #0x1dd58 ; Objc selector ref: dealloc
000000000004c8cc	mov	x0, sp
000000000004c8d0	bl	0x51b84 ; Objc message: -[[x0 super] dealloc]
000000000004c8d4	ldp	x29, x30, [sp, #0x50]
000000000004c8d8	ldp	x20, x19, [sp, #0x40]
000000000004c8dc	ldp	x22, x21, [sp, #0x30]
000000000004c8e0	ldp	x24, x23, [sp, #0x20]
000000000004c8e4	ldp	x26, x25, [sp, #0x10]
000000000004c8e8	add	sp, sp, #0x60
000000000004c8ec	ret
-[KMapAsNSDictionary toKotlin:]:
000000000004c8f0	stp	x22, x21, [sp, #-0x30]!
000000000004c8f4	stp	x20, x19, [sp, #0x10]
000000000004c8f8	stp	x29, x30, [sp, #0x20]
000000000004c8fc	add	x29, sp, #0x20
000000000004c900	mov	x19, x2
000000000004c904	mov	x20, x0
000000000004c908	nop
000000000004c90c	ldrsw	x21, _OBJC_IVAR_$_NBKKMapAsNSDictionary.mapHolder
000000000004c910	bl	_Kotlin_initRuntimeIfNeeded
000000000004c914	ldr	x0, [x20, x21]
000000000004c918	str	x0, [x19]
000000000004c91c	ldp	x29, x30, [sp, #0x20]
000000000004c920	ldp	x20, x19, [sp, #0x10]
000000000004c924	ldp	x22, x21, [sp], #0x30
000000000004c928	ret
-[KMapAsNSDictionary count]:
000000000004c92c	stp	x22, x21, [sp, #-0x30]!
000000000004c930	stp	x20, x19, [sp, #0x10]
000000000004c934	stp	x29, x30, [sp, #0x20]
000000000004c938	add	x29, sp, #0x20
000000000004c93c	mov	x20, x0
000000000004c940	bl	_Kotlin_initRuntimeIfNeeded
000000000004c944	adrp	x0, 32 ; 0x6c000
000000000004c948	add	x0, x0, #0xbb0
000000000004c94c	ldr	x8, [x0]
000000000004c950	blr	x8
000000000004c954	ldr	x8, [x0]
000000000004c958	add	x19, x8, #0x138
000000000004c95c	ldaxr	w21, [x19]
000000000004c960	stlxr	w8, wzr, [x19]
000000000004c964	cbnz	w8, 0x4c95c
000000000004c968	cmp	w21, #0x1
000000000004c96c	b.ne	0x4c988
000000000004c970	adr	x8, #0x3a0d3
000000000004c974	nop
000000000004c978	ldarb	w8, [x8]
000000000004c97c	tbz	w8, #0x0, 0x4c988
000000000004c980	mov	x0, x19
000000000004c984	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c988	nop
000000000004c98c	ldrsw	x22, _OBJC_IVAR_$_NBKKMapAsNSDictionary.mapHolder
000000000004c990	bl	_Kotlin_initRuntimeIfNeeded
000000000004c994	ldr	x0, [x20, x22]
000000000004c998	bl	_Kotlin_Map_getSize
000000000004c99c	mov	x20, x0
000000000004c9a0	ldaxr	w8, [x19]
000000000004c9a4	stlxr	w9, w21, [x19]
000000000004c9a8	cbnz	w9, 0x4c9a0
000000000004c9ac	cbnz	w21, 0x4c9d0
000000000004c9b0	cmp	w8, #0x1
000000000004c9b4	b.ne	0x4c9d0
000000000004c9b8	adr	x8, #0x3a08b
000000000004c9bc	nop
000000000004c9c0	ldarb	w8, [x8]
000000000004c9c4	tbz	w8, #0x0, 0x4c9d0
000000000004c9c8	mov	x0, x19
000000000004c9cc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c9d0	sxtw	x0, w20
000000000004c9d4	ldp	x29, x30, [sp, #0x20]
000000000004c9d8	ldp	x20, x19, [sp, #0x10]
000000000004c9dc	ldp	x22, x21, [sp], #0x30
000000000004c9e0	ret
000000000004c9e4	mov	x20, x0
000000000004c9e8	ldaxr	w8, [x19]
000000000004c9ec	stlxr	w9, w21, [x19]
000000000004c9f0	cbnz	w9, 0x4c9e8
000000000004c9f4	cbnz	w21, 0x4ca18
000000000004c9f8	cmp	w8, #0x1
000000000004c9fc	b.ne	0x4ca18
000000000004ca00	adr	x8, #0x3a043
000000000004ca04	nop
000000000004ca08	ldarb	w8, [x8]
000000000004ca0c	tbz	w8, #0x0, 0x4ca18
000000000004ca10	mov	x0, x19
000000000004ca14	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ca18	mov	x0, x20
000000000004ca1c	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KMapAsNSDictionary objectForKey:]:
000000000004ca20	stp	x24, x23, [sp, #-0x40]!
000000000004ca24	stp	x22, x21, [sp, #0x10]
000000000004ca28	stp	x20, x19, [sp, #0x20]
000000000004ca2c	stp	x29, x30, [sp, #0x30]
000000000004ca30	add	x29, sp, #0x30
000000000004ca34	mov	x20, x2
000000000004ca38	mov	x21, x0
000000000004ca3c	bl	_Kotlin_initRuntimeIfNeeded
000000000004ca40	adrp	x0, 32 ; 0x6c000
000000000004ca44	add	x0, x0, #0xbb0
000000000004ca48	ldr	x8, [x0]
000000000004ca4c	blr	x8
000000000004ca50	ldr	x8, [x0]
000000000004ca54	add	x19, x8, #0x138
000000000004ca58	ldaxr	w22, [x19]
000000000004ca5c	stlxr	w8, wzr, [x19]
000000000004ca60	cbnz	w8, 0x4ca58
000000000004ca64	cmp	w22, #0x1
000000000004ca68	b.ne	0x4ca84
000000000004ca6c	adr	x8, #0x39fd7
000000000004ca70	nop
000000000004ca74	ldarb	w8, [x8]
000000000004ca78	tbz	w8, #0x0, 0x4ca84
000000000004ca7c	mov	x0, x19
000000000004ca80	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ca84	nop
000000000004ca88	ldrsw	x23, _OBJC_IVAR_$_NBKKMapAsNSDictionary.mapHolder
000000000004ca8c	bl	_Kotlin_initRuntimeIfNeeded
000000000004ca90	ldr	x0, [x21, x23]
000000000004ca94	mov	x1, x20
000000000004ca98	bl	__ZL8KMap_getP9ObjHeaderP11objc_object
000000000004ca9c	mov	x20, x0
000000000004caa0	ldaxr	w8, [x19]
000000000004caa4	stlxr	w9, w22, [x19]
000000000004caa8	cbnz	w9, 0x4caa0
000000000004caac	cbnz	w22, 0x4cad0
000000000004cab0	cmp	w8, #0x1
000000000004cab4	b.ne	0x4cad0
000000000004cab8	adr	x8, #0x39f8b
000000000004cabc	nop
000000000004cac0	ldarb	w8, [x8]
000000000004cac4	tbz	w8, #0x0, 0x4cad0
000000000004cac8	mov	x0, x19
000000000004cacc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004cad0	mov	x0, x20
000000000004cad4	ldp	x29, x30, [sp, #0x30]
000000000004cad8	ldp	x20, x19, [sp, #0x20]
000000000004cadc	ldp	x22, x21, [sp, #0x10]
000000000004cae0	ldp	x24, x23, [sp], #0x40
000000000004cae4	ret
000000000004cae8	mov	x20, x0
000000000004caec	ldaxr	w8, [x19]
000000000004caf0	stlxr	w9, w22, [x19]
000000000004caf4	cbnz	w9, 0x4caec
000000000004caf8	cbnz	w22, 0x4cb1c
000000000004cafc	cmp	w8, #0x1
000000000004cb00	b.ne	0x4cb1c
000000000004cb04	adr	x8, #0x39f3f
000000000004cb08	nop
000000000004cb0c	ldarb	w8, [x8]
000000000004cb10	tbz	w8, #0x0, 0x4cb1c
000000000004cb14	mov	x0, x19
000000000004cb18	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004cb1c	mov	x0, x20
000000000004cb20	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KMapAsNSDictionary keyEnumerator]:
000000000004cb24	sub	sp, sp, #0x70
000000000004cb28	stp	x26, x25, [sp, #0x20]
000000000004cb2c	stp	x24, x23, [sp, #0x30]
000000000004cb30	stp	x22, x21, [sp, #0x40]
000000000004cb34	stp	x20, x19, [sp, #0x50]
000000000004cb38	stp	x29, x30, [sp, #0x60]
000000000004cb3c	add	x29, sp, #0x60
000000000004cb40	mov	x21, x0
000000000004cb44	bl	_Kotlin_initRuntimeIfNeeded
000000000004cb48	adrp	x20, 32 ; 0x6c000
000000000004cb4c	add	x20, x20, #0xbb0
000000000004cb50	ldr	x25, [x20]
000000000004cb54	mov	x0, x20
000000000004cb58	blr	x25
000000000004cb5c	ldr	x8, [x0]
000000000004cb60	add	x19, x8, #0x138
000000000004cb64	ldaxr	w24, [x19]
000000000004cb68	stlxr	w8, wzr, [x19]
000000000004cb6c	cbnz	w8, 0x4cb64
000000000004cb70	cmp	w24, #0x1
000000000004cb74	b.ne	0x4cb90
000000000004cb78	adr	x8, #0x39ecb
000000000004cb7c	nop
000000000004cb80	ldarb	w8, [x8]
000000000004cb84	tbz	w8, #0x0, 0x4cb90
000000000004cb88	mov	x0, x19
000000000004cb8c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004cb90	mov	x8, sp
000000000004cb94	add	x23, x8, #0x18
000000000004cb98	str	xzr, [sp, #0x18]
000000000004cb9c	mov	x0, x20
000000000004cba0	blr	x25
000000000004cba4	ldr	x9, [x0]
000000000004cba8	ldr	x10, [x9, #0x110]
000000000004cbac	str	x8, [x9, #0x110]
000000000004cbb0	mov	x8, #0x400000000
000000000004cbb4	stp	x10, x8, [sp, #0x8]
000000000004cbb8	nop
000000000004cbbc	ldr	x22, #0x1dd1c ; Objc class ref: NBKKIteratorAsNSEnumerator
000000000004cbc0	nop
000000000004cbc4	ldrsw	x26, _OBJC_IVAR_$_NBKKMapAsNSDictionary.mapHolder
000000000004cbc8	bl	_Kotlin_initRuntimeIfNeeded
000000000004cbcc	ldr	x0, [x21, x26]
000000000004cbd0	mov	x1, x23
000000000004cbd4	bl	_Kotlin_Map_keyIterator
000000000004cbd8	mov	x2, x0
000000000004cbdc	nop
000000000004cbe0	ldr	x1, #0x1da38 ; Objc selector ref: createWithKIterator:
000000000004cbe4	mov	x0, x22
000000000004cbe8	bl	0x51b78 ; Objc message: +[NBKKIteratorAsNSEnumerator createWithKIterator:]
000000000004cbec	mov	x21, x0
000000000004cbf0	mov	x0, x20
000000000004cbf4	blr	x25
000000000004cbf8	ldr	x8, [x0]
000000000004cbfc	ldr	x9, [sp, #0x8]
000000000004cc00	str	x9, [x8, #0x110]
000000000004cc04	ldaxr	w8, [x19]
000000000004cc08	stlxr	w9, w24, [x19]
000000000004cc0c	cbnz	w9, 0x4cc04
000000000004cc10	cbnz	w24, 0x4cc34
000000000004cc14	cmp	w8, #0x1
000000000004cc18	b.ne	0x4cc34
000000000004cc1c	adr	x8, #0x39e27
000000000004cc20	nop
000000000004cc24	ldarb	w8, [x8]
000000000004cc28	tbz	w8, #0x0, 0x4cc34
000000000004cc2c	mov	x0, x19
000000000004cc30	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004cc34	mov	x0, x21
000000000004cc38	ldp	x29, x30, [sp, #0x60]
000000000004cc3c	ldp	x20, x19, [sp, #0x50]
000000000004cc40	ldp	x22, x21, [sp, #0x40]
000000000004cc44	ldp	x24, x23, [sp, #0x30]
000000000004cc48	ldp	x26, x25, [sp, #0x20]
000000000004cc4c	add	sp, sp, #0x70
000000000004cc50	ret
000000000004cc54	mov	x21, x0
000000000004cc58	mov	x0, x20
000000000004cc5c	blr	x25
000000000004cc60	ldr	x8, [x0]
000000000004cc64	ldr	x9, [sp, #0x8]
000000000004cc68	str	x9, [x8, #0x110]
000000000004cc6c	ldaxr	w8, [x19]
000000000004cc70	stlxr	w9, w24, [x19]
000000000004cc74	cbnz	w9, 0x4cc6c
000000000004cc78	cbnz	w24, 0x4cc9c
000000000004cc7c	cmp	w8, #0x1
000000000004cc80	b.ne	0x4cc9c
000000000004cc84	adr	x8, #0x39dbf
000000000004cc88	nop
000000000004cc8c	ldarb	w8, [x8]
000000000004cc90	tbz	w8, #0x0, 0x4cc9c
000000000004cc94	mov	x0, x19
000000000004cc98	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004cc9c	mov	x0, x21
000000000004cca0	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZL8KMap_getP9ObjHeaderP11objc_object:
000000000004cca4	sub	sp, sp, #0xb0
000000000004cca8	stp	x26, x25, [sp, #0x60]
000000000004ccac	stp	x24, x23, [sp, #0x70]
000000000004ccb0	stp	x22, x21, [sp, #0x80]
000000000004ccb4	stp	x20, x19, [sp, #0x90]
000000000004ccb8	stp	x29, x30, [sp, #0xa0]
000000000004ccbc	add	x29, sp, #0xa0
000000000004ccc0	mov	x22, x1
000000000004ccc4	mov	x20, x0
000000000004ccc8	add	x26, sp, #0x28
000000000004cccc	str	xzr, [sp, #0x40]
000000000004ccd0	adrp	x19, 32 ; 0x6c000
000000000004ccd4	add	x19, x19, #0xbb0
000000000004ccd8	ldr	x24, [x19]
000000000004ccdc	mov	x0, x19
000000000004cce0	blr	x24
000000000004cce4	ldr	x8, [x0]
000000000004cce8	ldr	x9, [x8, #0x110]
000000000004ccec	mov	x10, #0x400000000
000000000004ccf0	stp	x9, x10, [sp, #0x30]
000000000004ccf4	add	x23, sp, #0x8
000000000004ccf8	stp	x10, xzr, [sp, #0x18]
000000000004ccfc	str	x23, [x8, #0x110]
000000000004cd00	str	x26, [sp, #0x10]
000000000004cd04	adrp	x25, 30 ; 0x6a000
000000000004cd08	ldr	x0, [x25, #0x8b8] ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004cd0c	nop
000000000004cd10	ldr	x21, #0x1da48 ; Objc selector ref: null
000000000004cd14	mov	x1, x21
000000000004cd18	bl	0x51b78 ; Objc message: +[NSNull null]
000000000004cd1c	cmp	x0, x22
000000000004cd20	ccmp	x22, #0x0, #0x4, ne
000000000004cd24	b.ne	0x4cd34
000000000004cd28	mov	x22, #0x0
000000000004cd2c	str	xzr, [sp, #0x40]
000000000004cd30	b	0x4cd4c
000000000004cd34	add	x2, x26, #0x18
000000000004cd38	nop
000000000004cd3c	ldr	x1, #0x39f5c
000000000004cd40	mov	x0, x22
000000000004cd44	bl	0x51b78 ; Objc message: -[x0 null]
000000000004cd48	mov	x22, x0
000000000004cd4c	add	x23, x23, #0x18
000000000004cd50	str	xzr, [sp, #0x48]
000000000004cd54	mov	x0, x19
000000000004cd58	blr	x24
000000000004cd5c	ldr	x8, [x0]
000000000004cd60	ldr	x9, [x8, #0x110]
000000000004cd64	add	x10, sp, #0x48
000000000004cd68	str	x10, [x8, #0x110]
000000000004cd6c	mov	x8, #0x300000000
000000000004cd70	stp	x9, x8, [sp, #0x50]
000000000004cd74	adr	x26, #0x39ccf
000000000004cd78	nop
000000000004cd7c	ldarb	w8, [x26]
000000000004cd80	tbz	w8, #0x0, 0x4cd88
000000000004cd84	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004cd88	ldr	x8, [x20]
000000000004cd8c	and	x8, x8, #0xfffffffffffffffc
000000000004cd90	ldr	x8, [x8]
000000000004cd94	ldr	w9, [x8, #0x3c]
000000000004cd98	ldr	x8, [x8, #0x40]
000000000004cd9c	tbnz	w9, #0x1f, 0x4cdac
000000000004cda0	mov	w10, #0x41
000000000004cda4	and	x9, x9, x10
000000000004cda8	b	0x4ce30
000000000004cdac	neg	w10, w9
000000000004cdb0	mvn	w9, w9
000000000004cdb4	cmp	w10, #0x9
000000000004cdb8	b.ge	0x4cdf0
000000000004cdbc	cmp	w10, #0x2
000000000004cdc0	b.lt	0x4ce24
000000000004cdc4	mov	x10, #0x0
000000000004cdc8	mov	x11, x8
000000000004cdcc	ldr	w12, [x11]
000000000004cdd0	cmp	w12, #0x40
000000000004cdd4	b.gt	0x4ce2c
000000000004cdd8	add	x10, x10, #0x1
000000000004cddc	add	x11, x11, #0x10
000000000004cde0	cmp	x9, x10
000000000004cde4	b.ne	0x4cdcc
000000000004cde8	mov	x10, x9
000000000004cdec	b	0x4ce2c
000000000004cdf0	mov	w10, #0x0
000000000004cdf4	add	w11, w9, w10
000000000004cdf8	cmp	w11, #0x0
000000000004cdfc	cinc	w11, w11, lt
000000000004ce00	asr	w11, w11, #1
000000000004ce04	sbfiz	x12, x11, #4, #32
000000000004ce08	ldr	w12, [x8, x12]
000000000004ce0c	cmp	w12, #0x41
000000000004ce10	csinc	w10, w10, w11, ge
000000000004ce14	csel	w9, w9, w11, lt
000000000004ce18	cmp	w10, w9
000000000004ce1c	b.lt	0x4cdf4
000000000004ce20	b	0x4ce2c
000000000004ce24	mov	w10, #0x0
000000000004ce28	b	0x4ce2c
000000000004ce2c	sxtw	x9, w10
000000000004ce30	add	x8, x8, x9, lsl #4
000000000004ce34	ldr	x8, [x8, #0x8]
000000000004ce38	ldr	x8, [x8, #0x30]
000000000004ce3c	mov	x0, x20
000000000004ce40	mov	x1, x22
000000000004ce44	mov	x2, x23
000000000004ce48	blr	x8
000000000004ce4c	mov	x8, x0
000000000004ce50	str	x0, [sp, #0x20]
000000000004ce54	mov	x0, x19
000000000004ce58	blr	x24
000000000004ce5c	ldr	x9, [x0]
000000000004ce60	ldr	x10, [sp, #0x50]
000000000004ce64	str	x10, [x9, #0x110]
000000000004ce68	cbz	x8, 0x4ce78
000000000004ce6c	mov	x0, x8
000000000004ce70	bl	_Kotlin_ObjCExport_refToObjC
000000000004ce74	b	0x4cf80
000000000004ce78	stp	xzr, x10, [sp, #0x48]
000000000004ce7c	add	x8, sp, #0x48
000000000004ce80	str	x8, [x9, #0x110]
000000000004ce84	mov	x8, #0x300000000
000000000004ce88	str	x8, [sp, #0x58]
000000000004ce8c	ldarb	w8, [x26]
000000000004ce90	tbz	w8, #0x0, 0x4ce98
000000000004ce94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004ce98	ldr	x8, [x20]
000000000004ce9c	and	x8, x8, #0xfffffffffffffffc
000000000004cea0	ldr	x8, [x8]
000000000004cea4	ldr	w9, [x8, #0x3c]
000000000004cea8	ldr	x8, [x8, #0x40]
000000000004ceac	tbnz	w9, #0x1f, 0x4cebc
000000000004ceb0	mov	w10, #0x41
000000000004ceb4	and	x9, x9, x10
000000000004ceb8	b	0x4cf40
000000000004cebc	neg	w10, w9
000000000004cec0	mvn	w9, w9
000000000004cec4	cmp	w10, #0x9
000000000004cec8	b.ge	0x4cf00
000000000004cecc	cmp	w10, #0x2
000000000004ced0	b.lt	0x4cf34
000000000004ced4	mov	x10, #0x0
000000000004ced8	mov	x11, x8
000000000004cedc	ldr	w12, [x11]
000000000004cee0	cmp	w12, #0x40
000000000004cee4	b.gt	0x4cf3c
000000000004cee8	add	x10, x10, #0x1
000000000004ceec	add	x11, x11, #0x10
000000000004cef0	cmp	x9, x10
000000000004cef4	b.ne	0x4cedc
000000000004cef8	mov	x10, x9
000000000004cefc	b	0x4cf3c
000000000004cf00	mov	w10, #0x0
000000000004cf04	add	w11, w9, w10
000000000004cf08	cmp	w11, #0x0
000000000004cf0c	cinc	w11, w11, lt
000000000004cf10	asr	w11, w11, #1
000000000004cf14	sbfiz	x12, x11, #4, #32
000000000004cf18	ldr	w12, [x8, x12]
000000000004cf1c	cmp	w12, #0x41
000000000004cf20	csinc	w10, w10, w11, ge
000000000004cf24	csel	w9, w9, w11, lt
000000000004cf28	cmp	w10, w9
000000000004cf2c	b.lt	0x4cf04
000000000004cf30	b	0x4cf3c
000000000004cf34	mov	w10, #0x0
000000000004cf38	b	0x4cf3c
000000000004cf3c	sxtw	x9, w10
000000000004cf40	add	x8, x8, x9, lsl #4
000000000004cf44	ldr	x8, [x8, #0x8]
000000000004cf48	ldr	x8, [x8, #0x20]
000000000004cf4c	mov	x0, x20
000000000004cf50	mov	x1, x22
000000000004cf54	blr	x8
000000000004cf58	mov	x8, x0
000000000004cf5c	mov	x0, x19
000000000004cf60	blr	x24
000000000004cf64	ldr	x9, [x0]
000000000004cf68	ldr	x10, [sp, #0x50]
000000000004cf6c	str	x10, [x9, #0x110]
000000000004cf70	cbz	w8, 0x4cfb8
000000000004cf74	ldr	x0, [x25, #0x8b8]
000000000004cf78	mov	x1, x21
000000000004cf7c	bl	0x51b78 ; Objc message: -[x0 null]
000000000004cf80	mov	x2, x0
000000000004cf84	mov	x0, x19
000000000004cf88	blr	x24
000000000004cf8c	ldr	x8, [x0]
000000000004cf90	ldr	x9, [sp, #0x30]
000000000004cf94	str	x9, [x8, #0x110]
000000000004cf98	mov	x0, x2
000000000004cf9c	ldp	x29, x30, [sp, #0xa0]
000000000004cfa0	ldp	x20, x19, [sp, #0x90]
000000000004cfa4	ldp	x22, x21, [sp, #0x80]
000000000004cfa8	ldp	x24, x23, [sp, #0x70]
000000000004cfac	ldp	x26, x25, [sp, #0x60]
000000000004cfb0	add	sp, sp, #0xb0
000000000004cfb4	ret
000000000004cfb8	mov	x2, #0x0
000000000004cfbc	b	0x4cf84
000000000004cfc0	b	0x4cfc8
000000000004cfc4	b	0x4cfe4
000000000004cfc8	mov	x1, x0
000000000004cfcc	mov	x0, x19
000000000004cfd0	blr	x24
000000000004cfd4	ldr	x8, [x0]
000000000004cfd8	ldr	x9, [sp, #0x50]
000000000004cfdc	str	x9, [x8, #0x110]
000000000004cfe0	b	0x4cfe8
000000000004cfe4	mov	x1, x0
000000000004cfe8	mov	x0, x19
000000000004cfec	blr	x24
000000000004cff0	ldr	x8, [x0]
000000000004cff4	ldr	x9, [sp, #0x30]
000000000004cff8	str	x9, [x8, #0x110]
000000000004cffc	mov	x0, x1
000000000004d000	bl	0x517a0 ; symbol stub for: __Unwind_Resume
+[KMapAsNSDictionary createRetainedWithKMap:]:
000000000004d004	stp	x22, x21, [sp, #-0x30]!
000000000004d008	stp	x20, x19, [sp, #0x10]
000000000004d00c	stp	x29, x30, [sp, #0x20]
000000000004d010	add	x29, sp, #0x20
000000000004d014	mov	x19, x2
000000000004d018	nop
000000000004d01c	ldr	x0, #0x1d8dc ; Objc class ref: NBKKMapAsNSDictionary
000000000004d020	bl	0x51b00 ; symbol stub for: _objc_alloc
000000000004d024	nop
000000000004d028	ldr	x1, #0x1d638 ; Objc selector ref: init
000000000004d02c	bl	0x51b78 ; Objc message: +[NBKKMapAsNSDictionary init]
000000000004d030	mov	x20, x0
000000000004d034	nop
000000000004d038	ldrsw	x8, _OBJC_IVAR_$_NBKKMapAsNSDictionary.mapHolder
000000000004d03c	add	x21, x0, x8
000000000004d040	adrp	x0, 31 ; 0x6c000
000000000004d044	add	x0, x0, #0xbb0
000000000004d048	ldr	x8, [x0]
000000000004d04c	blr	x8
000000000004d050	ldr	x22, [x0]
000000000004d054	mov	w0, #0x1
000000000004d058	mov	w1, #0x28
000000000004d05c	bl	0x519e0 ; symbol stub for: _calloc
000000000004d060	ldr	x8, [x22, #0xa8]!
000000000004d064	sub	x9, x22, #0x8
000000000004d068	stp	x8, x22, [x0]
000000000004d06c	str	x0, [x8, #0x8]
000000000004d070	str	x0, [x22]
000000000004d074	ldr	x8, [x22, #0x10]
000000000004d078	add	x8, x8, #0x1
000000000004d07c	str	x8, [x22, #0x10]
000000000004d080	stp	x9, x0, [x0, #0x18]
000000000004d084	str	x19, [x0, #0x10]!
000000000004d088	stp	x19, x0, [x21]
000000000004d08c	mov	x0, x20
000000000004d090	ldp	x29, x30, [sp, #0x20]
000000000004d094	ldp	x20, x19, [sp, #0x10]
000000000004d098	ldp	x22, x21, [sp], #0x30
000000000004d09c	ret
-[KotlinMutableDictionary dealloc]:
000000000004d0a0	sub	sp, sp, #0x60
000000000004d0a4	stp	x26, x25, [sp, #0x10]
000000000004d0a8	stp	x24, x23, [sp, #0x20]
000000000004d0ac	stp	x22, x21, [sp, #0x30]
000000000004d0b0	stp	x20, x19, [sp, #0x40]
000000000004d0b4	stp	x29, x30, [sp, #0x50]
000000000004d0b8	add	x29, sp, #0x50
000000000004d0bc	mov	x19, x0
000000000004d0c0	nop
000000000004d0c4	ldrsw	x8, _OBJC_IVAR_$_NBKMutableDictionary.mapHolder
000000000004d0c8	add	x24, x0, x8
000000000004d0cc	bl	_Kotlin_initRuntimeIfNeeded
000000000004d0d0	adrp	x21, 31 ; 0x6c000
000000000004d0d4	add	x21, x21, #0xbb0
000000000004d0d8	ldr	x25, [x21]
000000000004d0dc	mov	x0, x21
000000000004d0e0	blr	x25
000000000004d0e4	ldr	x8, [x0]
000000000004d0e8	add	x20, x8, #0x138
000000000004d0ec	ldaxr	w22, [x20]
000000000004d0f0	stlxr	w8, wzr, [x20]
000000000004d0f4	cbnz	w8, 0x4d0ec
000000000004d0f8	adr	x23, #0x3994b
000000000004d0fc	nop
000000000004d100	cmp	w22, #0x1
000000000004d104	b.ne	0x4d118
000000000004d108	ldarb	w8, [x23]
000000000004d10c	tbz	w8, #0x0, 0x4d118
000000000004d110	mov	x0, x20
000000000004d114	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d118	ldr	x8, [x24]
000000000004d11c	cbz	x8, 0x4d138
000000000004d120	ldr	x1, [x24, #0x8]
000000000004d124	mov	x0, x21
000000000004d128	blr	x25
000000000004d12c	ldr	x8, [x0]
000000000004d130	add	x0, x8, #0x8
000000000004d134	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004d138	ldaxr	w8, [x20]
000000000004d13c	stlxr	w9, w22, [x20]
000000000004d140	cbnz	w9, 0x4d138
000000000004d144	cbnz	w22, 0x4d160
000000000004d148	cmp	w8, #0x1
000000000004d14c	b.ne	0x4d160
000000000004d150	ldarb	w8, [x23]
000000000004d154	tbz	w8, #0x0, 0x4d160
000000000004d158	mov	x0, x20
000000000004d15c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d160	nop
000000000004d164	ldr	x8, #0x1d7f4 ; Objc class ref: NBKMutableDictionary
000000000004d168	stp	x19, x8, [sp]
000000000004d16c	nop
000000000004d170	ldr	x1, #0x1d4b0 ; Objc selector ref: dealloc
000000000004d174	mov	x0, sp
000000000004d178	bl	0x51b84 ; Objc message: -[[x0 super] dealloc]
000000000004d17c	ldp	x29, x30, [sp, #0x50]
000000000004d180	ldp	x20, x19, [sp, #0x40]
000000000004d184	ldp	x22, x21, [sp, #0x30]
000000000004d188	ldp	x24, x23, [sp, #0x20]
000000000004d18c	ldp	x26, x25, [sp, #0x10]
000000000004d190	add	sp, sp, #0x60
000000000004d194	ret
-[KotlinMutableDictionary init]:
000000000004d198	sub	sp, sp, #0x80
000000000004d19c	stp	x26, x25, [sp, #0x30]
000000000004d1a0	stp	x24, x23, [sp, #0x40]
000000000004d1a4	stp	x22, x21, [sp, #0x50]
000000000004d1a8	stp	x20, x19, [sp, #0x60]
000000000004d1ac	stp	x29, x30, [sp, #0x70]
000000000004d1b0	add	x29, sp, #0x70
000000000004d1b4	nop
000000000004d1b8	ldr	x8, #0x1d7a0 ; Objc class ref: NBKMutableDictionary
000000000004d1bc	stp	x0, x8, [sp, #0x20]
000000000004d1c0	nop
000000000004d1c4	ldr	x1, #0x1d49c ; Objc selector ref: init
000000000004d1c8	add	x0, sp, #0x20
000000000004d1cc	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004d1d0	mov	x20, x0
000000000004d1d4	cbz	x0, 0x4d2f4
000000000004d1d8	bl	_Kotlin_initRuntimeIfNeeded
000000000004d1dc	adrp	x21, 31 ; 0x6c000
000000000004d1e0	add	x21, x21, #0xbb0
000000000004d1e4	ldr	x25, [x21]
000000000004d1e8	mov	x0, x21
000000000004d1ec	blr	x25
000000000004d1f0	ldr	x24, [x0]
000000000004d1f4	add	x19, x24, #0x138
000000000004d1f8	ldaxr	w23, [x19]
000000000004d1fc	stlxr	w8, wzr, [x19]
000000000004d200	cbnz	w8, 0x4d1f8
000000000004d204	cmp	w23, #0x1
000000000004d208	b.ne	0x4d224
000000000004d20c	adr	x8, #0x39837
000000000004d210	nop
000000000004d214	ldarb	w8, [x8]
000000000004d218	tbz	w8, #0x0, 0x4d224
000000000004d21c	mov	x0, x19
000000000004d220	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d224	mov	x8, sp
000000000004d228	add	x1, x8, #0x18
000000000004d22c	str	xzr, [sp, #0x18]
000000000004d230	mov	x0, x21
000000000004d234	blr	x25
000000000004d238	ldr	x9, [x0]
000000000004d23c	ldr	x10, [x9, #0x110]
000000000004d240	str	x8, [x9, #0x110]
000000000004d244	mov	x8, #0x400000000
000000000004d248	stp	x10, x8, [sp, #0x8]
000000000004d24c	mov	w0, #0x8
000000000004d250	bl	_Kotlin_MutableMap_createWithCapacity
000000000004d254	mov	x22, x0
000000000004d258	nop
000000000004d25c	ldrsw	x8, _OBJC_IVAR_$_NBKMutableDictionary.mapHolder
000000000004d260	add	x26, x20, x8
000000000004d264	mov	x0, x21
000000000004d268	blr	x25
000000000004d26c	mov	x21, x0
000000000004d270	ldr	x25, [x0]
000000000004d274	mov	w0, #0x1
000000000004d278	mov	w1, #0x28
000000000004d27c	bl	0x519e0 ; symbol stub for: _calloc
000000000004d280	ldr	x8, [x25, #0xa8]!
000000000004d284	sub	x9, x25, #0x8
000000000004d288	mov	x10, x0
000000000004d28c	str	x22, [x10, #0x10]!
000000000004d290	str	x9, [x0, #0x18]
000000000004d294	stp	x8, x25, [x0]
000000000004d298	str	x0, [x8, #0x8]
000000000004d29c	str	x0, [x25]
000000000004d2a0	ldr	x8, [x25, #0x10]
000000000004d2a4	add	x8, x8, #0x1
000000000004d2a8	str	x8, [x25, #0x10]
000000000004d2ac	str	x0, [x0, #0x20]
000000000004d2b0	stp	x22, x10, [x26]
000000000004d2b4	ldr	x8, [x21]
000000000004d2b8	ldr	x9, [sp, #0x8]
000000000004d2bc	str	x9, [x8, #0x110]
000000000004d2c0	cbz	x24, 0x4d2f4
000000000004d2c4	ldaxr	w8, [x19]
000000000004d2c8	stlxr	w9, w23, [x19]
000000000004d2cc	cbnz	w9, 0x4d2c4
000000000004d2d0	cbnz	w23, 0x4d2f4
000000000004d2d4	cmp	w8, #0x1
000000000004d2d8	b.ne	0x4d2f4
000000000004d2dc	adr	x8, #0x39767
000000000004d2e0	nop
000000000004d2e4	ldarb	w8, [x8]
000000000004d2e8	tbz	w8, #0x0, 0x4d2f4
000000000004d2ec	mov	x0, x19
000000000004d2f0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d2f4	mov	x0, x20
000000000004d2f8	ldp	x29, x30, [sp, #0x70]
000000000004d2fc	ldp	x20, x19, [sp, #0x60]
000000000004d300	ldp	x22, x21, [sp, #0x50]
000000000004d304	ldp	x24, x23, [sp, #0x40]
000000000004d308	ldp	x26, x25, [sp, #0x30]
000000000004d30c	add	sp, sp, #0x80
000000000004d310	ret
000000000004d314	mov	x20, x0
000000000004d318	mov	x0, x21
000000000004d31c	blr	x25
000000000004d320	ldr	x8, [x0]
000000000004d324	ldr	x9, [sp, #0x8]
000000000004d328	str	x9, [x8, #0x110]
000000000004d32c	cbz	x24, 0x4d360
000000000004d330	ldaxr	w8, [x19]
000000000004d334	stlxr	w9, w23, [x19]
000000000004d338	cbnz	w9, 0x4d330
000000000004d33c	cbnz	w23, 0x4d360
000000000004d340	cmp	w8, #0x1
000000000004d344	b.ne	0x4d360
000000000004d348	adr	x8, #0x396fb
000000000004d34c	nop
000000000004d350	ldarb	w8, [x8]
000000000004d354	tbz	w8, #0x0, 0x4d360
000000000004d358	mov	x0, x19
000000000004d35c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d360	mov	x0, x20
000000000004d364	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary initWithCapacity:]:
000000000004d368	sub	sp, sp, #0x80
000000000004d36c	stp	x26, x25, [sp, #0x30]
000000000004d370	stp	x24, x23, [sp, #0x40]
000000000004d374	stp	x22, x21, [sp, #0x50]
000000000004d378	stp	x20, x19, [sp, #0x60]
000000000004d37c	stp	x29, x30, [sp, #0x70]
000000000004d380	add	x29, sp, #0x70
000000000004d384	mov	x21, x2
000000000004d388	nop
000000000004d38c	ldr	x8, #0x1d5cc ; Objc class ref: NBKMutableDictionary
000000000004d390	stp	x0, x8, [sp, #0x20]
000000000004d394	nop
000000000004d398	ldr	x1, #0x1d2c8 ; Objc selector ref: init
000000000004d39c	add	x0, sp, #0x20
000000000004d3a0	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004d3a4	mov	x20, x0
000000000004d3a8	cbz	x0, 0x4d4d0
000000000004d3ac	bl	_Kotlin_initRuntimeIfNeeded
000000000004d3b0	adrp	x22, 31 ; 0x6c000
000000000004d3b4	add	x22, x22, #0xbb0
000000000004d3b8	ldr	x25, [x22]
000000000004d3bc	mov	x0, x22
000000000004d3c0	blr	x25
000000000004d3c4	ldr	x24, [x0]
000000000004d3c8	add	x19, x24, #0x138
000000000004d3cc	ldaxr	w23, [x19]
000000000004d3d0	stlxr	w8, wzr, [x19]
000000000004d3d4	cbnz	w8, 0x4d3cc
000000000004d3d8	cmp	w23, #0x1
000000000004d3dc	b.ne	0x4d3f8
000000000004d3e0	adr	x8, #0x39663
000000000004d3e4	nop
000000000004d3e8	ldarb	w8, [x8]
000000000004d3ec	tbz	w8, #0x0, 0x4d3f8
000000000004d3f0	mov	x0, x19
000000000004d3f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d3f8	mov	x8, sp
000000000004d3fc	add	x1, x8, #0x18
000000000004d400	str	xzr, [sp, #0x18]
000000000004d404	mov	x0, x22
000000000004d408	blr	x25
000000000004d40c	ldr	x9, [x0]
000000000004d410	ldr	x10, [x9, #0x110]
000000000004d414	str	x8, [x9, #0x110]
000000000004d418	mov	x8, #0x400000000
000000000004d41c	stp	x10, x8, [sp, #0x8]
000000000004d420	mov	w8, #0x7fffffff
000000000004d424	cmp	x21, x8
000000000004d428	csel	w0, w21, w8, lo
000000000004d42c	bl	_Kotlin_MutableMap_createWithCapacity
000000000004d430	mov	x21, x0
000000000004d434	nop
000000000004d438	ldrsw	x8, _OBJC_IVAR_$_NBKMutableDictionary.mapHolder
000000000004d43c	add	x26, x20, x8
000000000004d440	mov	x0, x22
000000000004d444	blr	x25
000000000004d448	mov	x22, x0
000000000004d44c	ldr	x25, [x0]
000000000004d450	mov	w0, #0x1
000000000004d454	mov	w1, #0x28
000000000004d458	bl	0x519e0 ; symbol stub for: _calloc
000000000004d45c	ldr	x8, [x25, #0xa8]!
000000000004d460	sub	x9, x25, #0x8
000000000004d464	mov	x10, x0
000000000004d468	str	x21, [x10, #0x10]!
000000000004d46c	str	x9, [x0, #0x18]
000000000004d470	stp	x8, x25, [x0]
000000000004d474	str	x0, [x8, #0x8]
000000000004d478	str	x0, [x25]
000000000004d47c	ldr	x8, [x25, #0x10]
000000000004d480	add	x8, x8, #0x1
000000000004d484	str	x8, [x25, #0x10]
000000000004d488	str	x0, [x0, #0x20]
000000000004d48c	stp	x21, x10, [x26]
000000000004d490	ldr	x8, [x22]
000000000004d494	ldr	x9, [sp, #0x8]
000000000004d498	str	x9, [x8, #0x110]
000000000004d49c	cbz	x24, 0x4d4d0
000000000004d4a0	ldaxr	w8, [x19]
000000000004d4a4	stlxr	w9, w23, [x19]
000000000004d4a8	cbnz	w9, 0x4d4a0
000000000004d4ac	cbnz	w23, 0x4d4d0
000000000004d4b0	cmp	w8, #0x1
000000000004d4b4	b.ne	0x4d4d0
000000000004d4b8	adr	x8, #0x3958b
000000000004d4bc	nop
000000000004d4c0	ldarb	w8, [x8]
000000000004d4c4	tbz	w8, #0x0, 0x4d4d0
000000000004d4c8	mov	x0, x19
000000000004d4cc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d4d0	mov	x0, x20
000000000004d4d4	ldp	x29, x30, [sp, #0x70]
000000000004d4d8	ldp	x20, x19, [sp, #0x60]
000000000004d4dc	ldp	x22, x21, [sp, #0x50]
000000000004d4e0	ldp	x24, x23, [sp, #0x40]
000000000004d4e4	ldp	x26, x25, [sp, #0x30]
000000000004d4e8	add	sp, sp, #0x80
000000000004d4ec	ret
000000000004d4f0	mov	x20, x0
000000000004d4f4	mov	x0, x22
000000000004d4f8	blr	x25
000000000004d4fc	ldr	x8, [x0]
000000000004d500	ldr	x9, [sp, #0x8]
000000000004d504	str	x9, [x8, #0x110]
000000000004d508	cbz	x24, 0x4d53c
000000000004d50c	ldaxr	w8, [x19]
000000000004d510	stlxr	w9, w23, [x19]
000000000004d514	cbnz	w9, 0x4d50c
000000000004d518	cbnz	w23, 0x4d53c
000000000004d51c	cmp	w8, #0x1
000000000004d520	b.ne	0x4d53c
000000000004d524	adr	x8, #0x3951f
000000000004d528	nop
000000000004d52c	ldarb	w8, [x8]
000000000004d530	tbz	w8, #0x0, 0x4d53c
000000000004d534	mov	x0, x19
000000000004d538	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d53c	mov	x0, x20
000000000004d540	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary initWithKMap:]:
000000000004d544	sub	sp, sp, #0x40
000000000004d548	stp	x22, x21, [sp, #0x10]
000000000004d54c	stp	x20, x19, [sp, #0x20]
000000000004d550	stp	x29, x30, [sp, #0x30]
000000000004d554	add	x29, sp, #0x30
000000000004d558	mov	x19, x2
000000000004d55c	nop
000000000004d560	ldr	x8, #0x1d3f8 ; Objc class ref: NBKMutableDictionary
000000000004d564	stp	x0, x8, [sp]
000000000004d568	nop
000000000004d56c	ldr	x1, #0x1d0f4 ; Objc selector ref: init
000000000004d570	mov	x0, sp
000000000004d574	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004d578	mov	x20, x0
000000000004d57c	cbz	x0, 0x4d5d8
000000000004d580	nop
000000000004d584	ldrsw	x8, _OBJC_IVAR_$_NBKMutableDictionary.mapHolder
000000000004d588	add	x21, x20, x8
000000000004d58c	adrp	x0, 31 ; 0x6c000
000000000004d590	add	x0, x0, #0xbb0
000000000004d594	ldr	x8, [x0]
000000000004d598	blr	x8
000000000004d59c	ldr	x22, [x0]
000000000004d5a0	mov	w0, #0x1
000000000004d5a4	mov	w1, #0x28
000000000004d5a8	bl	0x519e0 ; symbol stub for: _calloc
000000000004d5ac	ldr	x8, [x22, #0xa8]!
000000000004d5b0	sub	x9, x22, #0x8
000000000004d5b4	stp	x8, x22, [x0]
000000000004d5b8	str	x0, [x8, #0x8]
000000000004d5bc	str	x0, [x22]
000000000004d5c0	ldr	x8, [x22, #0x10]
000000000004d5c4	add	x8, x8, #0x1
000000000004d5c8	str	x8, [x22, #0x10]
000000000004d5cc	stp	x9, x0, [x0, #0x18]
000000000004d5d0	str	x19, [x0, #0x10]!
000000000004d5d4	stp	x19, x0, [x21]
000000000004d5d8	mov	x0, x20
000000000004d5dc	ldp	x29, x30, [sp, #0x30]
000000000004d5e0	ldp	x20, x19, [sp, #0x20]
000000000004d5e4	ldp	x22, x21, [sp, #0x10]
000000000004d5e8	add	sp, sp, #0x40
000000000004d5ec	ret
-[KotlinMutableDictionary toKotlin:]:
000000000004d5f0	stp	x22, x21, [sp, #-0x30]!
000000000004d5f4	stp	x20, x19, [sp, #0x10]
000000000004d5f8	stp	x29, x30, [sp, #0x20]
000000000004d5fc	add	x29, sp, #0x20
000000000004d600	mov	x19, x2
000000000004d604	mov	x20, x0
000000000004d608	nop
000000000004d60c	ldrsw	x21, _OBJC_IVAR_$_NBKMutableDictionary.mapHolder
000000000004d610	bl	_Kotlin_initRuntimeIfNeeded
000000000004d614	ldr	x0, [x20, x21]
000000000004d618	str	x0, [x19]
000000000004d61c	ldp	x29, x30, [sp, #0x20]
000000000004d620	ldp	x20, x19, [sp, #0x10]
000000000004d624	ldp	x22, x21, [sp], #0x30
000000000004d628	ret
-[KotlinMutableDictionary count]:
000000000004d62c	stp	x22, x21, [sp, #-0x30]!
000000000004d630	stp	x20, x19, [sp, #0x10]
000000000004d634	stp	x29, x30, [sp, #0x20]
000000000004d638	add	x29, sp, #0x20
000000000004d63c	mov	x20, x0
000000000004d640	bl	_Kotlin_initRuntimeIfNeeded
000000000004d644	adrp	x0, 31 ; 0x6c000
000000000004d648	add	x0, x0, #0xbb0
000000000004d64c	ldr	x8, [x0]
000000000004d650	blr	x8
000000000004d654	ldr	x8, [x0]
000000000004d658	add	x19, x8, #0x138
000000000004d65c	ldaxr	w21, [x19]
000000000004d660	stlxr	w8, wzr, [x19]
000000000004d664	cbnz	w8, 0x4d65c
000000000004d668	cmp	w21, #0x1
000000000004d66c	b.ne	0x4d688
000000000004d670	adr	x8, #0x393d3
000000000004d674	nop
000000000004d678	ldarb	w8, [x8]
000000000004d67c	tbz	w8, #0x0, 0x4d688
000000000004d680	mov	x0, x19
000000000004d684	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d688	nop
000000000004d68c	ldrsw	x22, _OBJC_IVAR_$_NBKMutableDictionary.mapHolder
000000000004d690	bl	_Kotlin_initRuntimeIfNeeded
000000000004d694	ldr	x0, [x20, x22]
000000000004d698	bl	_Kotlin_Map_getSize
000000000004d69c	mov	x20, x0
000000000004d6a0	ldaxr	w8, [x19]
000000000004d6a4	stlxr	w9, w21, [x19]
000000000004d6a8	cbnz	w9, 0x4d6a0
000000000004d6ac	cbnz	w21, 0x4d6d0
000000000004d6b0	cmp	w8, #0x1
000000000004d6b4	b.ne	0x4d6d0
000000000004d6b8	adr	x8, #0x3938b
000000000004d6bc	nop
000000000004d6c0	ldarb	w8, [x8]
000000000004d6c4	tbz	w8, #0x0, 0x4d6d0
000000000004d6c8	mov	x0, x19
000000000004d6cc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d6d0	sxtw	x0, w20
000000000004d6d4	ldp	x29, x30, [sp, #0x20]
000000000004d6d8	ldp	x20, x19, [sp, #0x10]
000000000004d6dc	ldp	x22, x21, [sp], #0x30
000000000004d6e0	ret
000000000004d6e4	mov	x20, x0
000000000004d6e8	ldaxr	w8, [x19]
000000000004d6ec	stlxr	w9, w21, [x19]
000000000004d6f0	cbnz	w9, 0x4d6e8
000000000004d6f4	cbnz	w21, 0x4d718
000000000004d6f8	cmp	w8, #0x1
000000000004d6fc	b.ne	0x4d718
000000000004d700	adr	x8, #0x39343
000000000004d704	nop
000000000004d708	ldarb	w8, [x8]
000000000004d70c	tbz	w8, #0x0, 0x4d718
000000000004d710	mov	x0, x19
000000000004d714	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d718	mov	x0, x20
000000000004d71c	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary objectForKey:]:
000000000004d720	stp	x24, x23, [sp, #-0x40]!
000000000004d724	stp	x22, x21, [sp, #0x10]
000000000004d728	stp	x20, x19, [sp, #0x20]
000000000004d72c	stp	x29, x30, [sp, #0x30]
000000000004d730	add	x29, sp, #0x30
000000000004d734	mov	x20, x2
000000000004d738	mov	x21, x0
000000000004d73c	bl	_Kotlin_initRuntimeIfNeeded
000000000004d740	adrp	x0, 31 ; 0x6c000
000000000004d744	add	x0, x0, #0xbb0
000000000004d748	ldr	x8, [x0]
000000000004d74c	blr	x8
000000000004d750	ldr	x8, [x0]
000000000004d754	add	x19, x8, #0x138
000000000004d758	ldaxr	w22, [x19]
000000000004d75c	stlxr	w8, wzr, [x19]
000000000004d760	cbnz	w8, 0x4d758
000000000004d764	cmp	w22, #0x1
000000000004d768	b.ne	0x4d784
000000000004d76c	adr	x8, #0x392d7
000000000004d770	nop
000000000004d774	ldarb	w8, [x8]
000000000004d778	tbz	w8, #0x0, 0x4d784
000000000004d77c	mov	x0, x19
000000000004d780	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d784	nop
000000000004d788	ldrsw	x23, _OBJC_IVAR_$_NBKMutableDictionary.mapHolder
000000000004d78c	bl	_Kotlin_initRuntimeIfNeeded
000000000004d790	ldr	x0, [x21, x23]
000000000004d794	mov	x1, x20
000000000004d798	bl	__ZL8KMap_getP9ObjHeaderP11objc_object
000000000004d79c	mov	x20, x0
000000000004d7a0	ldaxr	w8, [x19]
000000000004d7a4	stlxr	w9, w22, [x19]
000000000004d7a8	cbnz	w9, 0x4d7a0
000000000004d7ac	cbnz	w22, 0x4d7d0
000000000004d7b0	cmp	w8, #0x1
000000000004d7b4	b.ne	0x4d7d0
000000000004d7b8	adr	x8, #0x3928b
000000000004d7bc	nop
000000000004d7c0	ldarb	w8, [x8]
000000000004d7c4	tbz	w8, #0x0, 0x4d7d0
000000000004d7c8	mov	x0, x19
000000000004d7cc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d7d0	mov	x0, x20
000000000004d7d4	ldp	x29, x30, [sp, #0x30]
000000000004d7d8	ldp	x20, x19, [sp, #0x20]
000000000004d7dc	ldp	x22, x21, [sp, #0x10]
000000000004d7e0	ldp	x24, x23, [sp], #0x40
000000000004d7e4	ret
000000000004d7e8	mov	x20, x0
000000000004d7ec	ldaxr	w8, [x19]
000000000004d7f0	stlxr	w9, w22, [x19]
000000000004d7f4	cbnz	w9, 0x4d7ec
000000000004d7f8	cbnz	w22, 0x4d81c
000000000004d7fc	cmp	w8, #0x1
000000000004d800	b.ne	0x4d81c
000000000004d804	adr	x8, #0x3923f
000000000004d808	nop
000000000004d80c	ldarb	w8, [x8]
000000000004d810	tbz	w8, #0x0, 0x4d81c
000000000004d814	mov	x0, x19
000000000004d818	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d81c	mov	x0, x20
000000000004d820	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary keyEnumerator]:
000000000004d824	sub	sp, sp, #0x70
000000000004d828	stp	x26, x25, [sp, #0x20]
000000000004d82c	stp	x24, x23, [sp, #0x30]
000000000004d830	stp	x22, x21, [sp, #0x40]
000000000004d834	stp	x20, x19, [sp, #0x50]
000000000004d838	stp	x29, x30, [sp, #0x60]
000000000004d83c	add	x29, sp, #0x60
000000000004d840	mov	x21, x0
000000000004d844	bl	_Kotlin_initRuntimeIfNeeded
000000000004d848	adrp	x20, 31 ; 0x6c000
000000000004d84c	add	x20, x20, #0xbb0
000000000004d850	ldr	x25, [x20]
000000000004d854	mov	x0, x20
000000000004d858	blr	x25
000000000004d85c	ldr	x8, [x0]
000000000004d860	add	x19, x8, #0x138
000000000004d864	ldaxr	w24, [x19]
000000000004d868	stlxr	w8, wzr, [x19]
000000000004d86c	cbnz	w8, 0x4d864
000000000004d870	cmp	w24, #0x1
000000000004d874	b.ne	0x4d890
000000000004d878	adr	x8, #0x391cb
000000000004d87c	nop
000000000004d880	ldarb	w8, [x8]
000000000004d884	tbz	w8, #0x0, 0x4d890
000000000004d888	mov	x0, x19
000000000004d88c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d890	mov	x8, sp
000000000004d894	add	x23, x8, #0x18
000000000004d898	str	xzr, [sp, #0x18]
000000000004d89c	mov	x0, x20
000000000004d8a0	blr	x25
000000000004d8a4	ldr	x9, [x0]
000000000004d8a8	ldr	x10, [x9, #0x110]
000000000004d8ac	str	x8, [x9, #0x110]
000000000004d8b0	mov	x8, #0x400000000
000000000004d8b4	stp	x10, x8, [sp, #0x8]
000000000004d8b8	nop
000000000004d8bc	ldr	x22, #0x1d01c ; Objc class ref: NBKKIteratorAsNSEnumerator
000000000004d8c0	nop
000000000004d8c4	ldrsw	x26, _OBJC_IVAR_$_NBKMutableDictionary.mapHolder
000000000004d8c8	bl	_Kotlin_initRuntimeIfNeeded
000000000004d8cc	ldr	x0, [x21, x26]
000000000004d8d0	mov	x1, x23
000000000004d8d4	bl	_Kotlin_Map_keyIterator
000000000004d8d8	mov	x2, x0
000000000004d8dc	nop
000000000004d8e0	ldr	x1, #0x1cd38 ; Objc selector ref: createWithKIterator:
000000000004d8e4	mov	x0, x22
000000000004d8e8	bl	0x51b78 ; Objc message: +[NBKKIteratorAsNSEnumerator createWithKIterator:]
000000000004d8ec	mov	x21, x0
000000000004d8f0	mov	x0, x20
000000000004d8f4	blr	x25
000000000004d8f8	ldr	x8, [x0]
000000000004d8fc	ldr	x9, [sp, #0x8]
000000000004d900	str	x9, [x8, #0x110]
000000000004d904	ldaxr	w8, [x19]
000000000004d908	stlxr	w9, w24, [x19]
000000000004d90c	cbnz	w9, 0x4d904
000000000004d910	cbnz	w24, 0x4d934
000000000004d914	cmp	w8, #0x1
000000000004d918	b.ne	0x4d934
000000000004d91c	adr	x8, #0x39127
000000000004d920	nop
000000000004d924	ldarb	w8, [x8]
000000000004d928	tbz	w8, #0x0, 0x4d934
000000000004d92c	mov	x0, x19
000000000004d930	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d934	mov	x0, x21
000000000004d938	ldp	x29, x30, [sp, #0x60]
000000000004d93c	ldp	x20, x19, [sp, #0x50]
000000000004d940	ldp	x22, x21, [sp, #0x40]
000000000004d944	ldp	x24, x23, [sp, #0x30]
000000000004d948	ldp	x26, x25, [sp, #0x20]
000000000004d94c	add	sp, sp, #0x70
000000000004d950	ret
000000000004d954	mov	x21, x0
000000000004d958	mov	x0, x20
000000000004d95c	blr	x25
000000000004d960	ldr	x8, [x0]
000000000004d964	ldr	x9, [sp, #0x8]
000000000004d968	str	x9, [x8, #0x110]
000000000004d96c	ldaxr	w8, [x19]
000000000004d970	stlxr	w9, w24, [x19]
000000000004d974	cbnz	w9, 0x4d96c
000000000004d978	cbnz	w24, 0x4d99c
000000000004d97c	cmp	w8, #0x1
000000000004d980	b.ne	0x4d99c
000000000004d984	adr	x8, #0x390bf
000000000004d988	nop
000000000004d98c	ldarb	w8, [x8]
000000000004d990	tbz	w8, #0x0, 0x4d99c
000000000004d994	mov	x0, x19
000000000004d998	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d99c	mov	x0, x21
000000000004d9a0	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary setObject:forKey:]:
000000000004d9a4	sub	sp, sp, #0xc0
000000000004d9a8	stp	x28, x27, [sp, #0x60]
000000000004d9ac	stp	x26, x25, [sp, #0x70]
000000000004d9b0	stp	x24, x23, [sp, #0x80]
000000000004d9b4	stp	x22, x21, [sp, #0x90]
000000000004d9b8	stp	x20, x19, [sp, #0xa0]
000000000004d9bc	stp	x29, x30, [sp, #0xb0]
000000000004d9c0	add	x29, sp, #0xb0
000000000004d9c4	mov	x24, x2
000000000004d9c8	mov	x23, x0
000000000004d9cc	nop
000000000004d9d0	ldr	x1, #0x1cc10 ; Objc selector ref: copyWithZone:
000000000004d9d4	mov	x0, x3
000000000004d9d8	mov	x2, #0x0
000000000004d9dc	bl	0x51b78 ; Objc message: -[x0 copyWithZone:]
000000000004d9e0	mov	x20, x0
000000000004d9e4	bl	_Kotlin_initRuntimeIfNeeded
000000000004d9e8	adrp	x21, 31 ; 0x6c000
000000000004d9ec	add	x21, x21, #0xbb0
000000000004d9f0	ldr	x27, [x21]
000000000004d9f4	mov	x0, x21
000000000004d9f8	blr	x27
000000000004d9fc	ldr	x8, [x0]
000000000004da00	add	x19, x8, #0x138
000000000004da04	ldaxr	w26, [x19]
000000000004da08	stlxr	w8, wzr, [x19]
000000000004da0c	cbnz	w8, 0x4da04
000000000004da10	cmp	w26, #0x1
000000000004da14	b.ne	0x4da30
000000000004da18	adr	x8, #0x3902b
000000000004da1c	nop
000000000004da20	ldarb	w8, [x8]
000000000004da24	tbz	w8, #0x0, 0x4da30
000000000004da28	mov	x0, x19
000000000004da2c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004da30	add	x22, sp, #0x20
000000000004da34	str	xzr, [sp, #0x38]
000000000004da38	mov	x0, x21
000000000004da3c	blr	x27
000000000004da40	ldr	x8, [x0]
000000000004da44	ldr	x9, [x8, #0x110]
000000000004da48	mov	x10, #0x400000000
000000000004da4c	stp	x9, x10, [sp, #0x28]
000000000004da50	mov	x28, sp
000000000004da54	stp	x10, xzr, [sp, #0x10]
000000000004da58	str	x28, [x8, #0x110]
000000000004da5c	str	x22, [sp, #0x8]
000000000004da60	adrp	x21, 29 ; 0x6a000
000000000004da64	ldr	x0, [x21, #0x8b8] ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004da68	nop
000000000004da6c	ldr	x25, #0x1ccec ; Objc selector ref: null
000000000004da70	mov	x1, x25
000000000004da74	bl	0x51b78 ; Objc message: +[NSNull null]
000000000004da78	cmp	x20, x0
000000000004da7c	b.eq	0x4daa0
000000000004da80	cbz	x20, 0x4daa0
000000000004da84	add	x2, x22, #0x18
000000000004da88	nop
000000000004da8c	ldr	x1, #0x3920c
000000000004da90	mov	x0, x20
000000000004da94	bl	0x51b78 ; Objc message: -[x0 null]
000000000004da98	mov	x22, x0
000000000004da9c	b	0x4daa8
000000000004daa0	mov	x22, #0x0
000000000004daa4	str	xzr, [sp, #0x38]
000000000004daa8	ldr	x0, [x21, #0x8b8]
000000000004daac	mov	x1, x25
000000000004dab0	bl	0x51b78 ; Objc message: -[x0 null]
000000000004dab4	cmp	x0, x24
000000000004dab8	b.eq	0x4dadc
000000000004dabc	cbz	x24, 0x4dadc
000000000004dac0	add	x2, x28, #0x18
000000000004dac4	nop
000000000004dac8	ldr	x1, #0x391d0
000000000004dacc	mov	x0, x24
000000000004dad0	bl	0x51b78 ; Objc message: -[x0 null]
000000000004dad4	mov	x24, x0
000000000004dad8	b	0x4dae4
000000000004dadc	mov	x24, #0x0
000000000004dae0	str	xzr, [sp, #0x18]
000000000004dae4	nop
000000000004dae8	ldrsw	x21, _OBJC_IVAR_$_NBKMutableDictionary.mapHolder
000000000004daec	bl	_Kotlin_initRuntimeIfNeeded
000000000004daf0	ldr	x23, [x23, x21]
000000000004daf4	movi.16b	v0, #0x0
000000000004daf8	stp	q0, q0, [sp, #0x40]
000000000004dafc	add	x8, sp, #0x40
000000000004db00	add	x25, x8, #0x18
000000000004db04	adrp	x21, 31 ; 0x6c000
000000000004db08	add	x21, x21, #0xbb0
000000000004db0c	mov	x0, x21
000000000004db10	blr	x27
000000000004db14	ldr	x9, [x0]
000000000004db18	ldr	x10, [x9, #0x110]
000000000004db1c	str	x8, [x9, #0x110]
000000000004db20	mov	x8, #0x400000000
000000000004db24	stp	x10, x8, [sp, #0x48]
000000000004db28	adr	x28, #0x38f1b
000000000004db2c	nop
000000000004db30	ldarb	w8, [x28]
000000000004db34	tbz	w8, #0x0, 0x4db3c
000000000004db38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004db3c	ldr	x8, [x23]
000000000004db40	and	x8, x8, #0xfffffffffffffffc
000000000004db44	ldr	x8, [x8]
000000000004db48	ldr	w9, [x8, #0x3c]
000000000004db4c	ldr	x8, [x8, #0x40]
000000000004db50	tbnz	w9, #0x1f, 0x4db60
000000000004db54	mov	w10, #0xb0
000000000004db58	and	x9, x9, x10
000000000004db5c	b	0x4dbe4
000000000004db60	neg	w10, w9
000000000004db64	mvn	w9, w9
000000000004db68	cmp	w10, #0x9
000000000004db6c	b.ge	0x4dba4
000000000004db70	cmp	w10, #0x2
000000000004db74	b.lt	0x4dbd8
000000000004db78	mov	x10, #0x0
000000000004db7c	mov	x11, x8
000000000004db80	ldr	w12, [x11]
000000000004db84	cmp	w12, #0xaf
000000000004db88	b.gt	0x4dbe0
000000000004db8c	add	x10, x10, #0x1
000000000004db90	add	x11, x11, #0x10
000000000004db94	cmp	x9, x10
000000000004db98	b.ne	0x4db80
000000000004db9c	mov	x10, x9
000000000004dba0	b	0x4dbe0
000000000004dba4	mov	w10, #0x0
000000000004dba8	add	w11, w9, w10
000000000004dbac	cmp	w11, #0x0
000000000004dbb0	cinc	w11, w11, lt
000000000004dbb4	asr	w11, w11, #1
000000000004dbb8	sbfiz	x12, x11, #4, #32
000000000004dbbc	ldr	w12, [x8, x12]
000000000004dbc0	cmp	w12, #0xb0
000000000004dbc4	csinc	w10, w10, w11, ge
000000000004dbc8	csel	w9, w9, w11, lt
000000000004dbcc	cmp	w10, w9
000000000004dbd0	b.lt	0x4dba8
000000000004dbd4	b	0x4dbe0
000000000004dbd8	mov	w10, #0x0
000000000004dbdc	b	0x4dbe0
000000000004dbe0	sxtw	x9, w10
000000000004dbe4	add	x8, x8, x9, lsl #4
000000000004dbe8	ldr	x8, [x8, #0x8]
000000000004dbec	ldr	x8, [x8, #0x20]
000000000004dbf0	mov	x0, x23
000000000004dbf4	mov	x1, x22
000000000004dbf8	mov	x2, x24
000000000004dbfc	mov	x3, x25
000000000004dc00	blr	x8
000000000004dc04	mov	x0, x21
000000000004dc08	blr	x27
000000000004dc0c	ldr	x8, [x0]
000000000004dc10	ldr	x9, [sp, #0x28]
000000000004dc14	str	x9, [x8, #0x110]
000000000004dc18	ldaxr	w8, [x19]
000000000004dc1c	stlxr	w9, w26, [x19]
000000000004dc20	cbnz	w9, 0x4dc18
000000000004dc24	cbnz	w26, 0x4dc40
000000000004dc28	cmp	w8, #0x1
000000000004dc2c	b.ne	0x4dc40
000000000004dc30	ldarb	w8, [x28]
000000000004dc34	tbz	w8, #0x0, 0x4dc40
000000000004dc38	mov	x0, x19
000000000004dc3c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004dc40	mov	x0, x20
000000000004dc44	bl	0x51b9c ; symbol stub for: _objc_release
000000000004dc48	ldp	x29, x30, [sp, #0xb0]
000000000004dc4c	ldp	x20, x19, [sp, #0xa0]
000000000004dc50	ldp	x22, x21, [sp, #0x90]
000000000004dc54	ldp	x24, x23, [sp, #0x80]
000000000004dc58	ldp	x26, x25, [sp, #0x70]
000000000004dc5c	ldp	x28, x27, [sp, #0x60]
000000000004dc60	add	sp, sp, #0xc0
000000000004dc64	ret
000000000004dc68	mov	x20, x0
000000000004dc6c	mov	x0, x21
000000000004dc70	blr	x27
000000000004dc74	ldr	x8, [x0]
000000000004dc78	ldr	x9, [sp, #0x48]
000000000004dc7c	str	x9, [x8, #0x110]
000000000004dc80	b	0x4dc8c
000000000004dc84	b	0x4dc88
000000000004dc88	mov	x20, x0
000000000004dc8c	adrp	x0, 31 ; 0x6c000
000000000004dc90	add	x0, x0, #0xbb0
000000000004dc94	blr	x27
000000000004dc98	ldr	x8, [x0]
000000000004dc9c	ldr	x9, [sp, #0x28]
000000000004dca0	str	x9, [x8, #0x110]
000000000004dca4	ldaxr	w8, [x19]
000000000004dca8	stlxr	w9, w26, [x19]
000000000004dcac	cbnz	w9, 0x4dca4
000000000004dcb0	cbnz	w26, 0x4dcd4
000000000004dcb4	cmp	w8, #0x1
000000000004dcb8	b.ne	0x4dcd4
000000000004dcbc	adr	x8, #0x38d87
000000000004dcc0	nop
000000000004dcc4	ldarb	w8, [x8]
000000000004dcc8	tbz	w8, #0x0, 0x4dcd4
000000000004dccc	mov	x0, x19
000000000004dcd0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004dcd4	mov	x0, x20
000000000004dcd8	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary removeObjectForKey:]:
000000000004dcdc	sub	sp, sp, #0x90
000000000004dce0	stp	x26, x25, [sp, #0x40]
000000000004dce4	stp	x24, x23, [sp, #0x50]
000000000004dce8	stp	x22, x21, [sp, #0x60]
000000000004dcec	stp	x20, x19, [sp, #0x70]
000000000004dcf0	stp	x29, x30, [sp, #0x80]
000000000004dcf4	add	x29, sp, #0x80
000000000004dcf8	mov	x21, x2
000000000004dcfc	mov	x22, x0
000000000004dd00	bl	_Kotlin_initRuntimeIfNeeded
000000000004dd04	adrp	x20, 31 ; 0x6c000
000000000004dd08	add	x20, x20, #0xbb0
000000000004dd0c	ldr	x25, [x20]
000000000004dd10	mov	x0, x20
000000000004dd14	blr	x25
000000000004dd18	ldr	x8, [x0]
000000000004dd1c	add	x19, x8, #0x138
000000000004dd20	ldaxr	w24, [x19]
000000000004dd24	stlxr	w8, wzr, [x19]
000000000004dd28	cbnz	w8, 0x4dd20
000000000004dd2c	cmp	w24, #0x1
000000000004dd30	b.ne	0x4dd4c
000000000004dd34	adr	x8, #0x38d0f
000000000004dd38	nop
000000000004dd3c	ldarb	w8, [x8]
000000000004dd40	tbz	w8, #0x0, 0x4dd4c
000000000004dd44	mov	x0, x19
000000000004dd48	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004dd4c	mov	x23, sp
000000000004dd50	str	xzr, [sp, #0x18]
000000000004dd54	mov	x0, x20
000000000004dd58	blr	x25
000000000004dd5c	ldr	x8, [x0]
000000000004dd60	ldr	x9, [x8, #0x110]
000000000004dd64	str	x23, [x8, #0x110]
000000000004dd68	mov	x8, #0x400000000
000000000004dd6c	stp	x9, x8, [sp, #0x8]
000000000004dd70	nop
000000000004dd74	ldr	x0, #0x1cb44 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004dd78	nop
000000000004dd7c	ldr	x1, #0x1c9dc ; Objc selector ref: null
000000000004dd80	bl	0x51b78 ; Objc message: +[NSNull null]
000000000004dd84	cmp	x0, x21
000000000004dd88	ccmp	x21, #0x0, #0x4, ne
000000000004dd8c	b.ne	0x4dd9c
000000000004dd90	mov	x21, #0x0
000000000004dd94	str	xzr, [sp, #0x18]
000000000004dd98	b	0x4ddb4
000000000004dd9c	add	x2, x23, #0x18
000000000004dda0	nop
000000000004dda4	ldr	x1, #0x38ef4
000000000004dda8	mov	x0, x21
000000000004ddac	bl	0x51b78 ; Objc message: -[x0 null]
000000000004ddb0	mov	x21, x0
000000000004ddb4	nop
000000000004ddb8	ldrsw	x23, _OBJC_IVAR_$_NBKMutableDictionary.mapHolder
000000000004ddbc	bl	_Kotlin_initRuntimeIfNeeded
000000000004ddc0	ldr	x22, [x22, x23]
000000000004ddc4	movi.16b	v0, #0x0
000000000004ddc8	stp	q0, q0, [sp, #0x20]
000000000004ddcc	add	x8, sp, #0x20
000000000004ddd0	add	x23, x8, #0x18
000000000004ddd4	mov	x0, x20
000000000004ddd8	blr	x25
000000000004dddc	ldr	x9, [x0]
000000000004dde0	ldr	x10, [x9, #0x110]
000000000004dde4	str	x8, [x9, #0x110]
000000000004dde8	mov	x8, #0x400000000
000000000004ddec	stp	x10, x8, [sp, #0x28]
000000000004ddf0	adr	x26, #0x38c53
000000000004ddf4	nop
000000000004ddf8	ldarb	w8, [x26]
000000000004ddfc	tbz	w8, #0x0, 0x4de04
000000000004de00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004de04	ldr	x8, [x22]
000000000004de08	and	x8, x8, #0xfffffffffffffffc
000000000004de0c	ldr	x8, [x8]
000000000004de10	ldr	w9, [x8, #0x3c]
000000000004de14	ldr	x8, [x8, #0x40]
000000000004de18	tbnz	w9, #0x1f, 0x4de28
000000000004de1c	mov	w10, #0xb0
000000000004de20	and	x9, x9, x10
000000000004de24	b	0x4deac
000000000004de28	neg	w10, w9
000000000004de2c	mvn	w9, w9
000000000004de30	cmp	w10, #0x9
000000000004de34	b.ge	0x4de6c
000000000004de38	cmp	w10, #0x2
000000000004de3c	b.lt	0x4dea0
000000000004de40	mov	x10, #0x0
000000000004de44	mov	x11, x8
000000000004de48	ldr	w12, [x11]
000000000004de4c	cmp	w12, #0xaf
000000000004de50	b.gt	0x4dea8
000000000004de54	add	x10, x10, #0x1
000000000004de58	add	x11, x11, #0x10
000000000004de5c	cmp	x9, x10
000000000004de60	b.ne	0x4de48
000000000004de64	mov	x10, x9
000000000004de68	b	0x4dea8
000000000004de6c	mov	w10, #0x0
000000000004de70	add	w11, w9, w10
000000000004de74	cmp	w11, #0x0
000000000004de78	cinc	w11, w11, lt
000000000004de7c	asr	w11, w11, #1
000000000004de80	sbfiz	x12, x11, #4, #32
000000000004de84	ldr	w12, [x8, x12]
000000000004de88	cmp	w12, #0xb0
000000000004de8c	csinc	w10, w10, w11, ge
000000000004de90	csel	w9, w9, w11, lt
000000000004de94	cmp	w10, w9
000000000004de98	b.lt	0x4de70
000000000004de9c	b	0x4dea8
000000000004dea0	mov	w10, #0x0
000000000004dea4	b	0x4dea8
000000000004dea8	sxtw	x9, w10
000000000004deac	add	x8, x8, x9, lsl #4
000000000004deb0	ldr	x8, [x8, #0x8]
000000000004deb4	ldr	x8, [x8, #0x30]
000000000004deb8	mov	x0, x22
000000000004debc	mov	x1, x21
000000000004dec0	mov	x2, x23
000000000004dec4	blr	x8
000000000004dec8	mov	x0, x20
000000000004decc	blr	x25
000000000004ded0	ldr	x8, [x0]
000000000004ded4	ldr	x9, [sp, #0x8]
000000000004ded8	str	x9, [x8, #0x110]
000000000004dedc	ldaxr	w8, [x19]
000000000004dee0	stlxr	w9, w24, [x19]
000000000004dee4	cbnz	w9, 0x4dedc
000000000004dee8	cbnz	w24, 0x4df04
000000000004deec	cmp	w8, #0x1
000000000004def0	b.ne	0x4df04
000000000004def4	ldarb	w8, [x26]
000000000004def8	tbz	w8, #0x0, 0x4df04
000000000004defc	mov	x0, x19
000000000004df00	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004df04	ldp	x29, x30, [sp, #0x80]
000000000004df08	ldp	x20, x19, [sp, #0x70]
000000000004df0c	ldp	x22, x21, [sp, #0x60]
000000000004df10	ldp	x24, x23, [sp, #0x50]
000000000004df14	ldp	x26, x25, [sp, #0x40]
000000000004df18	add	sp, sp, #0x90
000000000004df1c	ret
000000000004df20	mov	x21, x0
000000000004df24	mov	x0, x20
000000000004df28	blr	x25
000000000004df2c	ldr	x8, [x0]
000000000004df30	ldr	x9, [sp, #0x28]
000000000004df34	str	x9, [x8, #0x110]
000000000004df38	b	0x4df4c
000000000004df3c	mov	x21, x0
000000000004df40	mov	x0, x20
000000000004df44	blr	x25
000000000004df48	ldr	x8, [x0]
000000000004df4c	ldr	x9, [sp, #0x8]
000000000004df50	str	x9, [x8, #0x110]
000000000004df54	ldaxr	w8, [x19]
000000000004df58	stlxr	w9, w24, [x19]
000000000004df5c	cbnz	w9, 0x4df54
000000000004df60	cbnz	w24, 0x4df84
000000000004df64	cmp	w8, #0x1
000000000004df68	b.ne	0x4df84
000000000004df6c	adr	x8, #0x38ad7
000000000004df70	nop
000000000004df74	ldarb	w8, [x8]
000000000004df78	tbz	w8, #0x0, 0x4df84
000000000004df7c	mov	x0, x19
000000000004df80	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004df84	mov	x0, x21
000000000004df88	bl	0x517a0 ; symbol stub for: __Unwind_Resume
-[KotlinUShort getValue:]:
000000000004df8c	nop
000000000004df90	ldrsw	x8, _OBJC_IVAR_$_NBKUShort.value_
000000000004df94	ldrh	w8, [x0, x8]
000000000004df98	strh	w8, [x2]
000000000004df9c	ret
-[KotlinUShort initWithUnsignedShort:]:
000000000004dfa0	sub	sp, sp, #0x30
000000000004dfa4	stp	x20, x19, [sp, #0x10]
000000000004dfa8	stp	x29, x30, [sp, #0x20]
000000000004dfac	add	x29, sp, #0x20
000000000004dfb0	mov	x19, x2
000000000004dfb4	nop
000000000004dfb8	ldr	x8, #0x1ca00 ; Objc class ref: NBKUShort
000000000004dfbc	stp	x0, x8, [sp]
000000000004dfc0	nop
000000000004dfc4	ldr	x1, #0x1c69c ; Objc selector ref: init
000000000004dfc8	mov	x0, sp
000000000004dfcc	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004dfd0	nop
000000000004dfd4	ldrsw	x8, _OBJC_IVAR_$_NBKUShort.value_
000000000004dfd8	strh	w19, [x0, x8]
000000000004dfdc	ldp	x29, x30, [sp, #0x20]
000000000004dfe0	ldp	x20, x19, [sp, #0x10]
000000000004dfe4	add	sp, sp, #0x30
000000000004dfe8	ret
-[KotlinUShort initWithInteger:]:
000000000004dfec	sub	sp, sp, #0x30
000000000004dff0	stp	x20, x19, [sp, #0x10]
000000000004dff4	stp	x29, x30, [sp, #0x20]
000000000004dff8	add	x29, sp, #0x20
000000000004dffc	mov	x19, x2
000000000004e000	nop
000000000004e004	ldr	x8, #0x1c9b4 ; Objc class ref: NBKUShort
000000000004e008	stp	x0, x8, [sp]
000000000004e00c	nop
000000000004e010	ldr	x1, #0x1c650 ; Objc selector ref: init
000000000004e014	mov	x0, sp
000000000004e018	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e01c	nop
000000000004e020	ldrsw	x8, _OBJC_IVAR_$_NBKUShort.value_
000000000004e024	strh	w19, [x0, x8]
000000000004e028	ldp	x29, x30, [sp, #0x20]
000000000004e02c	ldp	x20, x19, [sp, #0x10]
000000000004e030	add	sp, sp, #0x30
000000000004e034	ret
-[KotlinUShort unsignedShortValue]:
000000000004e038	nop
000000000004e03c	ldrsw	x8, _OBJC_IVAR_$_NBKUShort.value_
000000000004e040	ldrh	w0, [x0, x8]
000000000004e044	ret
-[KotlinUShort objCType]:
000000000004e048	adr	x0, #0x8c4e ; literal pool for: "S"
000000000004e04c	nop
000000000004e050	ret
-[KotlinUShort toKotlin:]:
000000000004e054	mov	x1, x2
000000000004e058	nop
000000000004e05c	ldrsw	x8, _OBJC_IVAR_$_NBKUShort.value_
000000000004e060	ldrh	w0, [x0, x8]
000000000004e064	b	_Kotlin_boxUShort
-[KotlinULong getValue:]:
000000000004e068	nop
000000000004e06c	ldrsw	x8, _OBJC_IVAR_$_NBKULong.value_
000000000004e070	ldr	x8, [x0, x8]
000000000004e074	str	x8, [x2]
000000000004e078	ret
-[KotlinULong initWithUnsignedLongLong:]:
000000000004e07c	sub	sp, sp, #0x30
000000000004e080	stp	x20, x19, [sp, #0x10]
000000000004e084	stp	x29, x30, [sp, #0x20]
000000000004e088	add	x29, sp, #0x20
000000000004e08c	mov	x19, x2
000000000004e090	nop
000000000004e094	ldr	x8, #0x1c934 ; Objc class ref: NBKULong
000000000004e098	stp	x0, x8, [sp]
000000000004e09c	nop
000000000004e0a0	ldr	x1, #0x1c5c0 ; Objc selector ref: init
000000000004e0a4	mov	x0, sp
000000000004e0a8	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e0ac	nop
000000000004e0b0	ldrsw	x8, _OBJC_IVAR_$_NBKULong.value_
000000000004e0b4	str	x19, [x0, x8]
000000000004e0b8	ldp	x29, x30, [sp, #0x20]
000000000004e0bc	ldp	x20, x19, [sp, #0x10]
000000000004e0c0	add	sp, sp, #0x30
000000000004e0c4	ret
-[KotlinULong initWithInteger:]:
000000000004e0c8	sub	sp, sp, #0x30
000000000004e0cc	stp	x20, x19, [sp, #0x10]
000000000004e0d0	stp	x29, x30, [sp, #0x20]
000000000004e0d4	add	x29, sp, #0x20
000000000004e0d8	mov	x19, x2
000000000004e0dc	nop
000000000004e0e0	ldr	x8, #0x1c8e8 ; Objc class ref: NBKULong
000000000004e0e4	stp	x0, x8, [sp]
000000000004e0e8	nop
000000000004e0ec	ldr	x1, #0x1c574 ; Objc selector ref: init
000000000004e0f0	mov	x0, sp
000000000004e0f4	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e0f8	nop
000000000004e0fc	ldrsw	x8, _OBJC_IVAR_$_NBKULong.value_
000000000004e100	str	x19, [x0, x8]
000000000004e104	ldp	x29, x30, [sp, #0x20]
000000000004e108	ldp	x20, x19, [sp, #0x10]
000000000004e10c	add	sp, sp, #0x30
000000000004e110	ret
-[KotlinULong unsignedLongLongValue]:
000000000004e114	nop
000000000004e118	ldrsw	x8, _OBJC_IVAR_$_NBKULong.value_
000000000004e11c	ldr	x0, [x0, x8]
000000000004e120	ret
-[KotlinULong objCType]:
000000000004e124	adr	x0, #0x8b74 ; literal pool for: "Q"
000000000004e128	nop
000000000004e12c	ret
-[KotlinULong toKotlin:]:
000000000004e130	mov	x1, x2
000000000004e134	nop
000000000004e138	ldrsw	x8, _OBJC_IVAR_$_NBKULong.value_
000000000004e13c	ldr	x0, [x0, x8]
000000000004e140	b	_Kotlin_boxULong
-[KotlinUInt getValue:]:
000000000004e144	nop
000000000004e148	ldrsw	x8, _OBJC_IVAR_$_NBKUInt.value_
000000000004e14c	ldr	w8, [x0, x8]
000000000004e150	str	w8, [x2]
000000000004e154	ret
-[KotlinUInt initWithUnsignedInt:]:
000000000004e158	sub	sp, sp, #0x30
000000000004e15c	stp	x20, x19, [sp, #0x10]
000000000004e160	stp	x29, x30, [sp, #0x20]
000000000004e164	add	x29, sp, #0x20
000000000004e168	mov	x19, x2
000000000004e16c	nop
000000000004e170	ldr	x8, #0x1c850 ; Objc class ref: NBKUInt
000000000004e174	stp	x0, x8, [sp]
000000000004e178	nop
000000000004e17c	ldr	x1, #0x1c4e4 ; Objc selector ref: init
000000000004e180	mov	x0, sp
000000000004e184	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e188	nop
000000000004e18c	ldrsw	x8, _OBJC_IVAR_$_NBKUInt.value_
000000000004e190	str	w19, [x0, x8]
000000000004e194	ldp	x29, x30, [sp, #0x20]
000000000004e198	ldp	x20, x19, [sp, #0x10]
000000000004e19c	add	sp, sp, #0x30
000000000004e1a0	ret
-[KotlinUInt initWithInteger:]:
000000000004e1a4	sub	sp, sp, #0x30
000000000004e1a8	stp	x20, x19, [sp, #0x10]
000000000004e1ac	stp	x29, x30, [sp, #0x20]
000000000004e1b0	add	x29, sp, #0x20
000000000004e1b4	mov	x19, x2
000000000004e1b8	nop
000000000004e1bc	ldr	x8, #0x1c804 ; Objc class ref: NBKUInt
000000000004e1c0	stp	x0, x8, [sp]
000000000004e1c4	nop
000000000004e1c8	ldr	x1, #0x1c498 ; Objc selector ref: init
000000000004e1cc	mov	x0, sp
000000000004e1d0	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e1d4	nop
000000000004e1d8	ldrsw	x8, _OBJC_IVAR_$_NBKUInt.value_
000000000004e1dc	str	w19, [x0, x8]
000000000004e1e0	ldp	x29, x30, [sp, #0x20]
000000000004e1e4	ldp	x20, x19, [sp, #0x10]
000000000004e1e8	add	sp, sp, #0x30
000000000004e1ec	ret
-[KotlinUInt unsignedIntValue]:
000000000004e1f0	nop
000000000004e1f4	ldrsw	x8, _OBJC_IVAR_$_NBKUInt.value_
000000000004e1f8	ldr	w0, [x0, x8]
000000000004e1fc	ret
-[KotlinUInt objCType]:
000000000004e200	adr	x0, #0x8a9a ; literal pool for: "I"
000000000004e204	nop
000000000004e208	ret
-[KotlinUInt toKotlin:]:
000000000004e20c	mov	x1, x2
000000000004e210	nop
000000000004e214	ldrsw	x8, _OBJC_IVAR_$_NBKUInt.value_
000000000004e218	ldr	w0, [x0, x8]
000000000004e21c	b	_Kotlin_boxUInt
-[KotlinUByte getValue:]:
000000000004e220	nop
000000000004e224	ldrsw	x8, _OBJC_IVAR_$_NBKUByte.value_
000000000004e228	ldrb	w8, [x0, x8]
000000000004e22c	strb	w8, [x2]
000000000004e230	ret
-[KotlinUByte initWithUnsignedChar:]:
000000000004e234	sub	sp, sp, #0x30
000000000004e238	stp	x20, x19, [sp, #0x10]
000000000004e23c	stp	x29, x30, [sp, #0x20]
000000000004e240	add	x29, sp, #0x20
000000000004e244	mov	x19, x2
000000000004e248	nop
000000000004e24c	ldr	x8, #0x1c764 ; Objc class ref: NBKUByte
000000000004e250	stp	x0, x8, [sp]
000000000004e254	nop
000000000004e258	ldr	x1, #0x1c408 ; Objc selector ref: init
000000000004e25c	mov	x0, sp
000000000004e260	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e264	nop
000000000004e268	ldrsw	x8, _OBJC_IVAR_$_NBKUByte.value_
000000000004e26c	strb	w19, [x0, x8]
000000000004e270	ldp	x29, x30, [sp, #0x20]
000000000004e274	ldp	x20, x19, [sp, #0x10]
000000000004e278	add	sp, sp, #0x30
000000000004e27c	ret
-[KotlinUByte initWithInteger:]:
000000000004e280	sub	sp, sp, #0x30
000000000004e284	stp	x20, x19, [sp, #0x10]
000000000004e288	stp	x29, x30, [sp, #0x20]
000000000004e28c	add	x29, sp, #0x20
000000000004e290	mov	x19, x2
000000000004e294	nop
000000000004e298	ldr	x8, #0x1c718 ; Objc class ref: NBKUByte
000000000004e29c	stp	x0, x8, [sp]
000000000004e2a0	nop
000000000004e2a4	ldr	x1, #0x1c3bc ; Objc selector ref: init
000000000004e2a8	mov	x0, sp
000000000004e2ac	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e2b0	nop
000000000004e2b4	ldrsw	x8, _OBJC_IVAR_$_NBKUByte.value_
000000000004e2b8	strb	w19, [x0, x8]
000000000004e2bc	ldp	x29, x30, [sp, #0x20]
000000000004e2c0	ldp	x20, x19, [sp, #0x10]
000000000004e2c4	add	sp, sp, #0x30
000000000004e2c8	ret
-[KotlinUByte unsignedCharValue]:
000000000004e2cc	nop
000000000004e2d0	ldrsw	x8, _OBJC_IVAR_$_NBKUByte.value_
000000000004e2d4	ldrb	w0, [x0, x8]
000000000004e2d8	ret
-[KotlinUByte objCType]:
000000000004e2dc	adr	x0, #0x89c0 ; literal pool for: "C"
000000000004e2e0	nop
000000000004e2e4	ret
-[KotlinUByte toKotlin:]:
000000000004e2e8	mov	x1, x2
000000000004e2ec	nop
000000000004e2f0	ldrsw	x8, _OBJC_IVAR_$_NBKUByte.value_
000000000004e2f4	ldrb	w0, [x0, x8]
000000000004e2f8	b	_Kotlin_boxUByte
-[KotlinShort getValue:]:
000000000004e2fc	nop
000000000004e300	ldrsw	x8, _OBJC_IVAR_$_NBKShort.value_
000000000004e304	ldrh	w8, [x0, x8]
000000000004e308	strh	w8, [x2]
000000000004e30c	ret
-[KotlinShort initWithShort:]:
000000000004e310	sub	sp, sp, #0x30
000000000004e314	stp	x20, x19, [sp, #0x10]
000000000004e318	stp	x29, x30, [sp, #0x20]
000000000004e31c	add	x29, sp, #0x20
000000000004e320	mov	x19, x2
000000000004e324	nop
000000000004e328	ldr	x8, #0x1c670 ; Objc class ref: NBKShort
000000000004e32c	stp	x0, x8, [sp]
000000000004e330	nop
000000000004e334	ldr	x1, #0x1c32c ; Objc selector ref: init
000000000004e338	mov	x0, sp
000000000004e33c	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e340	nop
000000000004e344	ldrsw	x8, _OBJC_IVAR_$_NBKShort.value_
000000000004e348	strh	w19, [x0, x8]
000000000004e34c	ldp	x29, x30, [sp, #0x20]
000000000004e350	ldp	x20, x19, [sp, #0x10]
000000000004e354	add	sp, sp, #0x30
000000000004e358	ret
-[KotlinShort initWithInteger:]:
000000000004e35c	sub	sp, sp, #0x30
000000000004e360	stp	x20, x19, [sp, #0x10]
000000000004e364	stp	x29, x30, [sp, #0x20]
000000000004e368	add	x29, sp, #0x20
000000000004e36c	mov	x19, x2
000000000004e370	nop
000000000004e374	ldr	x8, #0x1c624 ; Objc class ref: NBKShort
000000000004e378	stp	x0, x8, [sp]
000000000004e37c	nop
000000000004e380	ldr	x1, #0x1c2e0 ; Objc selector ref: init
000000000004e384	mov	x0, sp
000000000004e388	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e38c	nop
000000000004e390	ldrsw	x8, _OBJC_IVAR_$_NBKShort.value_
000000000004e394	strh	w19, [x0, x8]
000000000004e398	ldp	x29, x30, [sp, #0x20]
000000000004e39c	ldp	x20, x19, [sp, #0x10]
000000000004e3a0	add	sp, sp, #0x30
000000000004e3a4	ret
-[KotlinShort shortValue]:
000000000004e3a8	nop
000000000004e3ac	ldrsw	x8, _OBJC_IVAR_$_NBKShort.value_
000000000004e3b0	ldrsh	w0, [x0, x8]
000000000004e3b4	ret
-[KotlinShort objCType]:
000000000004e3b8	adr	x0, #0x88e6 ; literal pool for: "s"
000000000004e3bc	nop
000000000004e3c0	ret
-[KotlinShort toKotlin:]:
000000000004e3c4	mov	x1, x2
000000000004e3c8	nop
000000000004e3cc	ldrsw	x8, _OBJC_IVAR_$_NBKShort.value_
000000000004e3d0	ldrsh	w0, [x0, x8]
000000000004e3d4	b	_Kotlin_boxShort
-[KotlinNumber initWithBool:]:
000000000004e3d8	stp	x29, x30, [sp, #-0x10]!
000000000004e3dc	mov	x29, sp
000000000004e3e0	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithChar:]:
000000000004e3e4	stp	x29, x30, [sp, #-0x10]!
000000000004e3e8	mov	x29, sp
000000000004e3ec	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithShort:]:
000000000004e3f0	stp	x29, x30, [sp, #-0x10]!
000000000004e3f4	mov	x29, sp
000000000004e3f8	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithInt:]:
000000000004e3fc	stp	x29, x30, [sp, #-0x10]!
000000000004e400	mov	x29, sp
000000000004e404	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithInteger:]:
000000000004e408	stp	x29, x30, [sp, #-0x10]!
000000000004e40c	mov	x29, sp
000000000004e410	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithLong:]:
000000000004e414	stp	x29, x30, [sp, #-0x10]!
000000000004e418	mov	x29, sp
000000000004e41c	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithLongLong:]:
000000000004e420	stp	x29, x30, [sp, #-0x10]!
000000000004e424	mov	x29, sp
000000000004e428	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedChar:]:
000000000004e42c	stp	x29, x30, [sp, #-0x10]!
000000000004e430	mov	x29, sp
000000000004e434	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedShort:]:
000000000004e438	stp	x29, x30, [sp, #-0x10]!
000000000004e43c	mov	x29, sp
000000000004e440	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedInt:]:
000000000004e444	stp	x29, x30, [sp, #-0x10]!
000000000004e448	mov	x29, sp
000000000004e44c	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedInteger:]:
000000000004e450	stp	x29, x30, [sp, #-0x10]!
000000000004e454	mov	x29, sp
000000000004e458	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedLong:]:
000000000004e45c	stp	x29, x30, [sp, #-0x10]!
000000000004e460	mov	x29, sp
000000000004e464	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedLongLong:]:
000000000004e468	stp	x29, x30, [sp, #-0x10]!
000000000004e46c	mov	x29, sp
000000000004e470	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithFloat:]:
000000000004e474	stp	x29, x30, [sp, #-0x10]!
000000000004e478	mov	x29, sp
000000000004e47c	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithDouble:]:
000000000004e480	stp	x29, x30, [sp, #-0x10]!
000000000004e484	mov	x29, sp
000000000004e488	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector:
000000000004e48c	sub	sp, sp, #0x40
000000000004e490	stp	x22, x21, [sp, #0x10]
000000000004e494	stp	x20, x19, [sp, #0x20]
000000000004e498	stp	x29, x30, [sp, #0x30]
000000000004e49c	add	x29, sp, #0x30
000000000004e4a0	mov	x19, x1
000000000004e4a4	nop
000000000004e4a8	ldr	x20, #0x1c3f0 ; Objc class ref: _OBJC_CLASS_$_NSException
000000000004e4ac	nop
000000000004e4b0	ldr	x8, #0x9b58 ; literal pool symbol address: _NSGenericException
000000000004e4b4	ldr	x21, [x8]
000000000004e4b8	nop
000000000004e4bc	ldr	x1, #0x1c10c ; Objc selector ref: class
000000000004e4c0	bl	0x51b78 ; Objc message: +[NSException class]
000000000004e4c4	bl	0x5177c ; symbol stub for: _NSStringFromClass
000000000004e4c8	mov	x22, x0
000000000004e4cc	mov	x0, x19
000000000004e4d0	bl	0x51cec ; symbol stub for: _sel_getName
000000000004e4d4	nop
000000000004e4d8	ldr	x1, #0x1c2c0 ; Objc selector ref: raise:format:
000000000004e4dc	stp	x22, x0, [sp]
000000000004e4e0	adr	x3, #0x19710 ; Objc cfstring ref: @"bad cfstring ref"
000000000004e4e4	nop
000000000004e4e8	mov	x0, x20
000000000004e4ec	mov	x2, x21
000000000004e4f0	bl	0x51b78 ; Objc message: -[x0 raise:format:]
000000000004e4f4	bl	0x519a4 ; symbol stub for: _abort
-[KotlinLong getValue:]:
000000000004e4f8	nop
000000000004e4fc	ldrsw	x8, _OBJC_IVAR_$_NBKLong.value_
000000000004e500	ldr	x8, [x0, x8]
000000000004e504	str	x8, [x2]
000000000004e508	ret
-[KotlinLong initWithLongLong:]:
000000000004e50c	sub	sp, sp, #0x30
000000000004e510	stp	x20, x19, [sp, #0x10]
000000000004e514	stp	x29, x30, [sp, #0x20]
000000000004e518	add	x29, sp, #0x20
000000000004e51c	mov	x19, x2
000000000004e520	nop
000000000004e524	ldr	x8, #0x1c484 ; Objc class ref: NBKLong
000000000004e528	stp	x0, x8, [sp]
000000000004e52c	nop
000000000004e530	ldr	x1, #0x1c130 ; Objc selector ref: init
000000000004e534	mov	x0, sp
000000000004e538	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e53c	nop
000000000004e540	ldrsw	x8, _OBJC_IVAR_$_NBKLong.value_
000000000004e544	str	x19, [x0, x8]
000000000004e548	ldp	x29, x30, [sp, #0x20]
000000000004e54c	ldp	x20, x19, [sp, #0x10]
000000000004e550	add	sp, sp, #0x30
000000000004e554	ret
-[KotlinLong initWithInteger:]:
000000000004e558	sub	sp, sp, #0x30
000000000004e55c	stp	x20, x19, [sp, #0x10]
000000000004e560	stp	x29, x30, [sp, #0x20]
000000000004e564	add	x29, sp, #0x20
000000000004e568	mov	x19, x2
000000000004e56c	nop
000000000004e570	ldr	x8, #0x1c438 ; Objc class ref: NBKLong
000000000004e574	stp	x0, x8, [sp]
000000000004e578	nop
000000000004e57c	ldr	x1, #0x1c0e4 ; Objc selector ref: init
000000000004e580	mov	x0, sp
000000000004e584	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e588	nop
000000000004e58c	ldrsw	x8, _OBJC_IVAR_$_NBKLong.value_
000000000004e590	str	x19, [x0, x8]
000000000004e594	ldp	x29, x30, [sp, #0x20]
000000000004e598	ldp	x20, x19, [sp, #0x10]
000000000004e59c	add	sp, sp, #0x30
000000000004e5a0	ret
-[KotlinLong longLongValue]:
000000000004e5a4	nop
000000000004e5a8	ldrsw	x8, _OBJC_IVAR_$_NBKLong.value_
000000000004e5ac	ldr	x0, [x0, x8]
000000000004e5b0	ret
-[KotlinLong objCType]:
000000000004e5b4	adr	x0, #0x872c ; literal pool for: "q"
000000000004e5b8	nop
000000000004e5bc	ret
-[KotlinLong toKotlin:]:
000000000004e5c0	mov	x1, x2
000000000004e5c4	nop
000000000004e5c8	ldrsw	x8, _OBJC_IVAR_$_NBKLong.value_
000000000004e5cc	ldr	x0, [x0, x8]
000000000004e5d0	b	_Kotlin_boxLong
-[KotlinInt getValue:]:
000000000004e5d4	nop
000000000004e5d8	ldrsw	x8, _OBJC_IVAR_$_NBKInt.value_
000000000004e5dc	ldr	w8, [x0, x8]
000000000004e5e0	str	w8, [x2]
000000000004e5e4	ret
-[KotlinInt initWithInt:]:
000000000004e5e8	sub	sp, sp, #0x30
000000000004e5ec	stp	x20, x19, [sp, #0x10]
000000000004e5f0	stp	x29, x30, [sp, #0x20]
000000000004e5f4	add	x29, sp, #0x20
000000000004e5f8	mov	x19, x2
000000000004e5fc	nop
000000000004e600	ldr	x8, #0x1c3a0 ; Objc class ref: NBKInt
000000000004e604	stp	x0, x8, [sp]
000000000004e608	nop
000000000004e60c	ldr	x1, #0x1c054 ; Objc selector ref: init
000000000004e610	mov	x0, sp
000000000004e614	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e618	nop
000000000004e61c	ldrsw	x8, _OBJC_IVAR_$_NBKInt.value_
000000000004e620	str	w19, [x0, x8]
000000000004e624	ldp	x29, x30, [sp, #0x20]
000000000004e628	ldp	x20, x19, [sp, #0x10]
000000000004e62c	add	sp, sp, #0x30
000000000004e630	ret
-[KotlinInt initWithInteger:]:
000000000004e634	sub	sp, sp, #0x30
000000000004e638	stp	x20, x19, [sp, #0x10]
000000000004e63c	stp	x29, x30, [sp, #0x20]
000000000004e640	add	x29, sp, #0x20
000000000004e644	mov	x19, x2
000000000004e648	nop
000000000004e64c	ldr	x8, #0x1c354 ; Objc class ref: NBKInt
000000000004e650	stp	x0, x8, [sp]
000000000004e654	nop
000000000004e658	ldr	x1, #0x1c008 ; Objc selector ref: init
000000000004e65c	mov	x0, sp
000000000004e660	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e664	nop
000000000004e668	ldrsw	x8, _OBJC_IVAR_$_NBKInt.value_
000000000004e66c	str	w19, [x0, x8]
000000000004e670	ldp	x29, x30, [sp, #0x20]
000000000004e674	ldp	x20, x19, [sp, #0x10]
000000000004e678	add	sp, sp, #0x30
000000000004e67c	ret
-[KotlinInt intValue]:
000000000004e680	nop
000000000004e684	ldrsw	x8, _OBJC_IVAR_$_NBKInt.value_
000000000004e688	ldr	w0, [x0, x8]
000000000004e68c	ret
-[KotlinInt objCType]:
000000000004e690	adr	x0, #0x8652 ; literal pool for: "i"
000000000004e694	nop
000000000004e698	ret
-[KotlinInt toKotlin:]:
000000000004e69c	sub	sp, sp, #0x50
000000000004e6a0	stp	x22, x21, [sp, #0x20]
000000000004e6a4	stp	x20, x19, [sp, #0x30]
000000000004e6a8	stp	x29, x30, [sp, #0x40]
000000000004e6ac	add	x29, sp, #0x40
000000000004e6b0	mov	x19, x2
000000000004e6b4	nop
000000000004e6b8	ldrsw	x8, _OBJC_IVAR_$_NBKInt.value_
000000000004e6bc	ldr	w21, [x0, x8]
000000000004e6c0	str	xzr, [sp, #0x8]
000000000004e6c4	adrp	x20, 30 ; 0x6c000
000000000004e6c8	add	x20, x20, #0xbb0
000000000004e6cc	ldr	x22, [x20]
000000000004e6d0	mov	x0, x20
000000000004e6d4	blr	x22
000000000004e6d8	ldr	x8, [x0]
000000000004e6dc	ldr	x9, [x8, #0x110]
000000000004e6e0	add	x10, sp, #0x8
000000000004e6e4	str	x10, [x8, #0x110]
000000000004e6e8	mov	x8, #0x300000000
000000000004e6ec	stp	x9, x8, [sp, #0x10]
000000000004e6f0	adr	x8, #0x38353
000000000004e6f4	nop
000000000004e6f8	ldarb	w8, [x8]
000000000004e6fc	tbz	w8, #0x0, 0x4e704
000000000004e700	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004e704	mov	x0, x21
000000000004e708	mov	x1, x19
000000000004e70c	bl	"_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any"
000000000004e710	mov	x8, x0
000000000004e714	str	x0, [x19]
000000000004e718	mov	x0, x20
000000000004e71c	blr	x22
000000000004e720	ldr	x9, [x0]
000000000004e724	ldr	x10, [sp, #0x10]
000000000004e728	str	x10, [x9, #0x110]
000000000004e72c	mov	x0, x8
000000000004e730	ldp	x29, x30, [sp, #0x40]
000000000004e734	ldp	x20, x19, [sp, #0x30]
000000000004e738	ldp	x22, x21, [sp, #0x20]
000000000004e73c	add	sp, sp, #0x50
000000000004e740	ret
-[KotlinFloat getValue:]:
000000000004e744	nop
000000000004e748	ldrsw	x8, _OBJC_IVAR_$_NBKFloat.value_
000000000004e74c	ldr	w8, [x0, x8]
000000000004e750	str	w8, [x2]
000000000004e754	ret
-[KotlinFloat initWithFloat:]:
000000000004e758	sub	sp, sp, #0x30
000000000004e75c	stp	d9, d8, [sp, #0x10]
000000000004e760	stp	x29, x30, [sp, #0x20]
000000000004e764	add	x29, sp, #0x20
000000000004e768	fmov	s8, s0
000000000004e76c	nop
000000000004e770	ldr	x8, #0x1c210 ; Objc class ref: NBKFloat
000000000004e774	stp	x0, x8, [sp]
000000000004e778	nop
000000000004e77c	ldr	x1, #0x1bee4 ; Objc selector ref: init
000000000004e780	mov	x0, sp
000000000004e784	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e788	nop
000000000004e78c	ldrsw	x8, _OBJC_IVAR_$_NBKFloat.value_
000000000004e790	str	s8, [x0, x8]
000000000004e794	ldp	x29, x30, [sp, #0x20]
000000000004e798	ldp	d9, d8, [sp, #0x10]
000000000004e79c	add	sp, sp, #0x30
000000000004e7a0	ret
-[KotlinFloat initWithInteger:]:
000000000004e7a4	sub	sp, sp, #0x30
000000000004e7a8	stp	x20, x19, [sp, #0x10]
000000000004e7ac	stp	x29, x30, [sp, #0x20]
000000000004e7b0	add	x29, sp, #0x20
000000000004e7b4	mov	x19, x2
000000000004e7b8	nop
000000000004e7bc	ldr	x8, #0x1c1c4 ; Objc class ref: NBKFloat
000000000004e7c0	stp	x0, x8, [sp]
000000000004e7c4	nop
000000000004e7c8	ldr	x1, #0x1be98 ; Objc selector ref: init
000000000004e7cc	mov	x0, sp
000000000004e7d0	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e7d4	scvtf	s0, x19
000000000004e7d8	nop
000000000004e7dc	ldrsw	x8, _OBJC_IVAR_$_NBKFloat.value_
000000000004e7e0	str	s0, [x0, x8]
000000000004e7e4	ldp	x29, x30, [sp, #0x20]
000000000004e7e8	ldp	x20, x19, [sp, #0x10]
000000000004e7ec	add	sp, sp, #0x30
000000000004e7f0	ret
-[KotlinFloat initWithDouble:]:
000000000004e7f4	sub	sp, sp, #0x30
000000000004e7f8	stp	d9, d8, [sp, #0x10]
000000000004e7fc	stp	x29, x30, [sp, #0x20]
000000000004e800	add	x29, sp, #0x20
000000000004e804	fmov	d8, d0
000000000004e808	nop
000000000004e80c	ldr	x8, #0x1c174 ; Objc class ref: NBKFloat
000000000004e810	stp	x0, x8, [sp]
000000000004e814	nop
000000000004e818	ldr	x1, #0x1be48 ; Objc selector ref: init
000000000004e81c	mov	x0, sp
000000000004e820	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e824	fcvt	s0, d8
000000000004e828	nop
000000000004e82c	ldrsw	x8, _OBJC_IVAR_$_NBKFloat.value_
000000000004e830	str	s0, [x0, x8]
000000000004e834	ldp	x29, x30, [sp, #0x20]
000000000004e838	ldp	d9, d8, [sp, #0x10]
000000000004e83c	add	sp, sp, #0x30
000000000004e840	ret
-[KotlinFloat floatValue]:
000000000004e844	nop
000000000004e848	ldrsw	x8, _OBJC_IVAR_$_NBKFloat.value_
000000000004e84c	ldr	s0, [x0, x8]
000000000004e850	ret
-[KotlinFloat objCType]:
000000000004e854	adr	x0, #0x8490 ; literal pool for: "f"
000000000004e858	nop
000000000004e85c	ret
-[KotlinFloat toKotlin:]:
000000000004e860	nop
000000000004e864	ldrsw	x8, _OBJC_IVAR_$_NBKFloat.value_
000000000004e868	ldr	s0, [x0, x8]
000000000004e86c	mov	x0, x2
000000000004e870	b	_Kotlin_boxFloat
-[KotlinDouble getValue:]:
000000000004e874	nop
000000000004e878	ldrsw	x8, _OBJC_IVAR_$_NBKDouble.value_
000000000004e87c	ldr	x8, [x0, x8]
000000000004e880	str	x8, [x2]
000000000004e884	ret
-[KotlinDouble initWithDouble:]:
000000000004e888	sub	sp, sp, #0x30
000000000004e88c	stp	d9, d8, [sp, #0x10]
000000000004e890	stp	x29, x30, [sp, #0x20]
000000000004e894	add	x29, sp, #0x20
000000000004e898	fmov	d8, d0
000000000004e89c	nop
000000000004e8a0	ldr	x8, #0x1c0e8 ; Objc class ref: NBKDouble
000000000004e8a4	stp	x0, x8, [sp]
000000000004e8a8	nop
000000000004e8ac	ldr	x1, #0x1bdb4 ; Objc selector ref: init
000000000004e8b0	mov	x0, sp
000000000004e8b4	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e8b8	nop
000000000004e8bc	ldrsw	x8, _OBJC_IVAR_$_NBKDouble.value_
000000000004e8c0	str	d8, [x0, x8]
000000000004e8c4	ldp	x29, x30, [sp, #0x20]
000000000004e8c8	ldp	d9, d8, [sp, #0x10]
000000000004e8cc	add	sp, sp, #0x30
000000000004e8d0	ret
-[KotlinDouble initWithInteger:]:
000000000004e8d4	sub	sp, sp, #0x30
000000000004e8d8	stp	x20, x19, [sp, #0x10]
000000000004e8dc	stp	x29, x30, [sp, #0x20]
000000000004e8e0	add	x29, sp, #0x20
000000000004e8e4	mov	x19, x2
000000000004e8e8	nop
000000000004e8ec	ldr	x8, #0x1c09c ; Objc class ref: NBKDouble
000000000004e8f0	stp	x0, x8, [sp]
000000000004e8f4	nop
000000000004e8f8	ldr	x1, #0x1bd68 ; Objc selector ref: init
000000000004e8fc	mov	x0, sp
000000000004e900	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e904	scvtf	d0, x19
000000000004e908	nop
000000000004e90c	ldrsw	x8, _OBJC_IVAR_$_NBKDouble.value_
000000000004e910	str	d0, [x0, x8]
000000000004e914	ldp	x29, x30, [sp, #0x20]
000000000004e918	ldp	x20, x19, [sp, #0x10]
000000000004e91c	add	sp, sp, #0x30
000000000004e920	ret
-[KotlinDouble doubleValue]:
000000000004e924	nop
000000000004e928	ldrsw	x8, _OBJC_IVAR_$_NBKDouble.value_
000000000004e92c	ldr	d0, [x0, x8]
000000000004e930	ret
-[KotlinDouble objCType]:
000000000004e934	adr	x0, #0x83b2 ; literal pool for: "d"
000000000004e938	nop
000000000004e93c	ret
-[KotlinDouble toKotlin:]:
000000000004e940	nop
000000000004e944	ldrsw	x8, _OBJC_IVAR_$_NBKDouble.value_
000000000004e948	ldr	d0, [x0, x8]
000000000004e94c	mov	x0, x2
000000000004e950	b	_Kotlin_boxDouble
-[KotlinByte getValue:]:
000000000004e954	nop
000000000004e958	ldrsw	x8, _OBJC_IVAR_$_NBKByte.value_
000000000004e95c	ldrb	w8, [x0, x8]
000000000004e960	strb	w8, [x2]
000000000004e964	ret
-[KotlinByte initWithChar:]:
000000000004e968	sub	sp, sp, #0x30
000000000004e96c	stp	x20, x19, [sp, #0x10]
000000000004e970	stp	x29, x30, [sp, #0x20]
000000000004e974	add	x29, sp, #0x20
000000000004e978	mov	x19, x2
000000000004e97c	nop
000000000004e980	ldr	x8, #0x1c010 ; Objc class ref: NBKByte
000000000004e984	stp	x0, x8, [sp]
000000000004e988	nop
000000000004e98c	ldr	x1, #0x1bcd4 ; Objc selector ref: init
000000000004e990	mov	x0, sp
000000000004e994	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e998	nop
000000000004e99c	ldrsw	x8, _OBJC_IVAR_$_NBKByte.value_
000000000004e9a0	strb	w19, [x0, x8]
000000000004e9a4	ldp	x29, x30, [sp, #0x20]
000000000004e9a8	ldp	x20, x19, [sp, #0x10]
000000000004e9ac	add	sp, sp, #0x30
000000000004e9b0	ret
-[KotlinByte initWithInteger:]:
000000000004e9b4	sub	sp, sp, #0x30
000000000004e9b8	stp	x20, x19, [sp, #0x10]
000000000004e9bc	stp	x29, x30, [sp, #0x20]
000000000004e9c0	add	x29, sp, #0x20
000000000004e9c4	mov	x19, x2
000000000004e9c8	nop
000000000004e9cc	ldr	x8, #0x1bfc4 ; Objc class ref: NBKByte
000000000004e9d0	stp	x0, x8, [sp]
000000000004e9d4	nop
000000000004e9d8	ldr	x1, #0x1bc88 ; Objc selector ref: init
000000000004e9dc	mov	x0, sp
000000000004e9e0	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004e9e4	nop
000000000004e9e8	ldrsw	x8, _OBJC_IVAR_$_NBKByte.value_
000000000004e9ec	strb	w19, [x0, x8]
000000000004e9f0	ldp	x29, x30, [sp, #0x20]
000000000004e9f4	ldp	x20, x19, [sp, #0x10]
000000000004e9f8	add	sp, sp, #0x30
000000000004e9fc	ret
-[KotlinByte charValue]:
000000000004ea00	nop
000000000004ea04	ldrsw	x8, _OBJC_IVAR_$_NBKByte.value_
000000000004ea08	ldrsb	w0, [x0, x8]
000000000004ea0c	ret
-[KotlinByte objCType]:
000000000004ea10	adr	x0, #0x82d8 ; literal pool for: "c"
000000000004ea14	nop
000000000004ea18	ret
-[KotlinByte toKotlin:]:
000000000004ea1c	mov	x1, x2
000000000004ea20	nop
000000000004ea24	ldrsw	x8, _OBJC_IVAR_$_NBKByte.value_
000000000004ea28	ldrsb	w0, [x0, x8]
000000000004ea2c	b	_Kotlin_boxByte
-[KotlinBoolean getValue:]:
000000000004ea30	nop
000000000004ea34	ldrsw	x8, _OBJC_IVAR_$_NBKBoolean.value_
000000000004ea38	ldrb	w8, [x0, x8]
000000000004ea3c	strb	w8, [x2]
000000000004ea40	ret
-[KotlinBoolean initWithBool:]:
000000000004ea44	sub	sp, sp, #0x30
000000000004ea48	stp	x20, x19, [sp, #0x10]
000000000004ea4c	stp	x29, x30, [sp, #0x20]
000000000004ea50	add	x29, sp, #0x20
000000000004ea54	mov	x19, x2
000000000004ea58	nop
000000000004ea5c	ldr	x8, #0x1bf1c ; Objc class ref: NBKBoolean
000000000004ea60	stp	x0, x8, [sp]
000000000004ea64	nop
000000000004ea68	ldr	x1, #0x1bbf8 ; Objc selector ref: init
000000000004ea6c	mov	x0, sp
000000000004ea70	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004ea74	nop
000000000004ea78	ldrsw	x8, _OBJC_IVAR_$_NBKBoolean.value_
000000000004ea7c	strb	w19, [x0, x8]
000000000004ea80	ldp	x29, x30, [sp, #0x20]
000000000004ea84	ldp	x20, x19, [sp, #0x10]
000000000004ea88	add	sp, sp, #0x30
000000000004ea8c	ret
-[KotlinBoolean boolValue]:
000000000004ea90	nop
000000000004ea94	ldrsw	x8, _OBJC_IVAR_$_NBKBoolean.value_
000000000004ea98	ldrb	w0, [x0, x8]
000000000004ea9c	ret
-[KotlinBoolean charValue]:
000000000004eaa0	nop
000000000004eaa4	ldrsw	x8, _OBJC_IVAR_$_NBKBoolean.value_
000000000004eaa8	ldrsb	w0, [x0, x8]
000000000004eaac	ret
-[KotlinBoolean objCType]:
000000000004eab0	adr	x0, #0x8238 ; literal pool for: "c"
000000000004eab4	nop
000000000004eab8	ret
-[KotlinBoolean toKotlin:]:
000000000004eabc	sub	sp, sp, #0x50
000000000004eac0	stp	x22, x21, [sp, #0x20]
000000000004eac4	stp	x20, x19, [sp, #0x30]
000000000004eac8	stp	x29, x30, [sp, #0x40]
000000000004eacc	add	x29, sp, #0x40
000000000004ead0	mov	x19, x2
000000000004ead4	nop
000000000004ead8	ldrsw	x8, _OBJC_IVAR_$_NBKBoolean.value_
000000000004eadc	ldrb	w22, [x0, x8]
000000000004eae0	str	xzr, [sp, #0x8]
000000000004eae4	adrp	x20, 30 ; 0x6c000
000000000004eae8	add	x20, x20, #0xbb0
000000000004eaec	ldr	x21, [x20]
000000000004eaf0	mov	x0, x20
000000000004eaf4	blr	x21
000000000004eaf8	ldr	x8, [x0]
000000000004eafc	ldr	x9, [x8, #0x110]
000000000004eb00	add	x10, sp, #0x8
000000000004eb04	str	x10, [x8, #0x110]
000000000004eb08	mov	x8, #0x300000000
000000000004eb0c	stp	x9, x8, [sp, #0x10]
000000000004eb10	adr	x8, #0x37f33
000000000004eb14	nop
000000000004eb18	ldarb	w8, [x8]
000000000004eb1c	tbz	w8, #0x0, 0x4eb24
000000000004eb20	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004eb24	cmp	w22, #0x0
000000000004eb28	cset	w0, ne
000000000004eb2c	mov	x1, x19
000000000004eb30	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
000000000004eb34	mov	x8, x0
000000000004eb38	str	x0, [x19]
000000000004eb3c	mov	x0, x20
000000000004eb40	blr	x21
000000000004eb44	ldr	x9, [x0]
000000000004eb48	ldr	x10, [sp, #0x10]
000000000004eb4c	str	x10, [x9, #0x110]
000000000004eb50	mov	x0, x8
000000000004eb54	ldp	x29, x30, [sp, #0x40]
000000000004eb58	ldp	x20, x19, [sp, #0x30]
000000000004eb5c	ldp	x22, x21, [sp, #0x20]
000000000004eb60	add	sp, sp, #0x50
000000000004eb64	ret
+[KotlinUShort numberWithUnsignedShort:]:
000000000004eb68	stp	x20, x19, [sp, #-0x20]!
000000000004eb6c	stp	x29, x30, [sp, #0x10]
000000000004eb70	add	x29, sp, #0x10
000000000004eb74	mov	x19, x2
000000000004eb78	nop
000000000004eb7c	ldr	x1, #0x1bbcc ; Objc selector ref: new
000000000004eb80	bl	0x51b78 ; Objc message: -[x0 new]
000000000004eb84	bl	0x51b18 ; symbol stub for: _objc_autorelease
000000000004eb88	nop
000000000004eb8c	ldrsw	x8, _OBJC_IVAR_$_NBKUShort.value_
000000000004eb90	strh	w19, [x0, x8]
000000000004eb94	ldp	x29, x30, [sp, #0x10]
000000000004eb98	ldp	x20, x19, [sp], #0x20
000000000004eb9c	ret
+[KotlinULong numberWithUnsignedLongLong:]:
000000000004eba0	stp	x20, x19, [sp, #-0x20]!
000000000004eba4	stp	x29, x30, [sp, #0x10]
000000000004eba8	add	x29, sp, #0x10
000000000004ebac	mov	x19, x2
000000000004ebb0	nop
000000000004ebb4	ldr	x1, #0x1bb94 ; Objc selector ref: new
000000000004ebb8	bl	0x51b78 ; Objc message: -[x0 new]
000000000004ebbc	bl	0x51b18 ; symbol stub for: _objc_autorelease
000000000004ebc0	nop
000000000004ebc4	ldrsw	x8, _OBJC_IVAR_$_NBKULong.value_
000000000004ebc8	str	x19, [x0, x8]
000000000004ebcc	ldp	x29, x30, [sp, #0x10]
000000000004ebd0	ldp	x20, x19, [sp], #0x20
000000000004ebd4	ret
+[KotlinUInt numberWithUnsignedInt:]:
000000000004ebd8	stp	x20, x19, [sp, #-0x20]!
000000000004ebdc	stp	x29, x30, [sp, #0x10]
000000000004ebe0	add	x29, sp, #0x10
000000000004ebe4	mov	x19, x2
000000000004ebe8	nop
000000000004ebec	ldr	x1, #0x1bb5c ; Objc selector ref: new
000000000004ebf0	bl	0x51b78 ; Objc message: -[x0 new]
000000000004ebf4	bl	0x51b18 ; symbol stub for: _objc_autorelease
000000000004ebf8	nop
000000000004ebfc	ldrsw	x8, _OBJC_IVAR_$_NBKUInt.value_
000000000004ec00	str	w19, [x0, x8]
000000000004ec04	ldp	x29, x30, [sp, #0x10]
000000000004ec08	ldp	x20, x19, [sp], #0x20
000000000004ec0c	ret
+[KotlinUByte numberWithUnsignedChar:]:
000000000004ec10	stp	x20, x19, [sp, #-0x20]!
000000000004ec14	stp	x29, x30, [sp, #0x10]
000000000004ec18	add	x29, sp, #0x10
000000000004ec1c	mov	x19, x2
000000000004ec20	nop
000000000004ec24	ldr	x1, #0x1bb24 ; Objc selector ref: new
000000000004ec28	bl	0x51b78 ; Objc message: -[x0 new]
000000000004ec2c	bl	0x51b18 ; symbol stub for: _objc_autorelease
000000000004ec30	nop
000000000004ec34	ldrsw	x8, _OBJC_IVAR_$_NBKUByte.value_
000000000004ec38	strb	w19, [x0, x8]
000000000004ec3c	ldp	x29, x30, [sp, #0x10]
000000000004ec40	ldp	x20, x19, [sp], #0x20
000000000004ec44	ret
+[KotlinShort numberWithShort:]:
000000000004ec48	stp	x20, x19, [sp, #-0x20]!
000000000004ec4c	stp	x29, x30, [sp, #0x10]
000000000004ec50	add	x29, sp, #0x10
000000000004ec54	mov	x19, x2
000000000004ec58	nop
000000000004ec5c	ldr	x1, #0x1baec ; Objc selector ref: new
000000000004ec60	bl	0x51b78 ; Objc message: -[x0 new]
000000000004ec64	bl	0x51b18 ; symbol stub for: _objc_autorelease
000000000004ec68	nop
000000000004ec6c	ldrsw	x8, _OBJC_IVAR_$_NBKShort.value_
000000000004ec70	strh	w19, [x0, x8]
000000000004ec74	ldp	x29, x30, [sp, #0x10]
000000000004ec78	ldp	x20, x19, [sp], #0x20
000000000004ec7c	ret
+[KotlinNumber numberWithBool:]:
000000000004ec80	stp	x29, x30, [sp, #-0x10]!
000000000004ec84	mov	x29, sp
000000000004ec88	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithChar:]:
000000000004ec8c	stp	x29, x30, [sp, #-0x10]!
000000000004ec90	mov	x29, sp
000000000004ec94	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithShort:]:
000000000004ec98	stp	x29, x30, [sp, #-0x10]!
000000000004ec9c	mov	x29, sp
000000000004eca0	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithInt:]:
000000000004eca4	stp	x29, x30, [sp, #-0x10]!
000000000004eca8	mov	x29, sp
000000000004ecac	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithInteger:]:
000000000004ecb0	stp	x29, x30, [sp, #-0x10]!
000000000004ecb4	mov	x29, sp
000000000004ecb8	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithLong:]:
000000000004ecbc	stp	x29, x30, [sp, #-0x10]!
000000000004ecc0	mov	x29, sp
000000000004ecc4	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithLongLong:]:
000000000004ecc8	stp	x29, x30, [sp, #-0x10]!
000000000004eccc	mov	x29, sp
000000000004ecd0	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedChar:]:
000000000004ecd4	stp	x29, x30, [sp, #-0x10]!
000000000004ecd8	mov	x29, sp
000000000004ecdc	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedShort:]:
000000000004ece0	stp	x29, x30, [sp, #-0x10]!
000000000004ece4	mov	x29, sp
000000000004ece8	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedInt:]:
000000000004ecec	stp	x29, x30, [sp, #-0x10]!
000000000004ecf0	mov	x29, sp
000000000004ecf4	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedLong:]:
000000000004ecf8	stp	x29, x30, [sp, #-0x10]!
000000000004ecfc	mov	x29, sp
000000000004ed00	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedInteger:]:
000000000004ed04	stp	x29, x30, [sp, #-0x10]!
000000000004ed08	mov	x29, sp
000000000004ed0c	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedLongLong:]:
000000000004ed10	stp	x29, x30, [sp, #-0x10]!
000000000004ed14	mov	x29, sp
000000000004ed18	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithFloat:]:
000000000004ed1c	stp	x29, x30, [sp, #-0x10]!
000000000004ed20	mov	x29, sp
000000000004ed24	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithDouble:]:
000000000004ed28	stp	x29, x30, [sp, #-0x10]!
000000000004ed2c	mov	x29, sp
000000000004ed30	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
__ZL22incorrectNumberFactoryP10objc_classP13objc_selector:
000000000004ed34	sub	sp, sp, #0x40
000000000004ed38	stp	x22, x21, [sp, #0x10]
000000000004ed3c	stp	x20, x19, [sp, #0x20]
000000000004ed40	stp	x29, x30, [sp, #0x30]
000000000004ed44	add	x29, sp, #0x30
000000000004ed48	mov	x19, x1
000000000004ed4c	nop
000000000004ed50	ldr	x20, #0x1bb48 ; Objc class ref: _OBJC_CLASS_$_NSException
000000000004ed54	nop
000000000004ed58	ldr	x8, #0x92b0 ; literal pool symbol address: _NSGenericException
000000000004ed5c	ldr	x21, [x8]
000000000004ed60	bl	0x5177c ; symbol stub for: _NSStringFromClass
000000000004ed64	mov	x22, x0
000000000004ed68	mov	x0, x19
000000000004ed6c	bl	0x51cec ; symbol stub for: _sel_getName
000000000004ed70	nop
000000000004ed74	ldr	x1, #0x1ba24 ; Objc selector ref: raise:format:
000000000004ed78	stp	x22, x0, [sp]
000000000004ed7c	adr	x3, #0x18e94 ; Objc cfstring ref: @"bad cfstring ref"
000000000004ed80	nop
000000000004ed84	mov	x0, x20
000000000004ed88	mov	x2, x21
000000000004ed8c	bl	0x51b78 ; Objc message: +[NSException raise:format:]
000000000004ed90	bl	0x519a4 ; symbol stub for: _abort
+[KotlinLong numberWithLongLong:]:
000000000004ed94	stp	x20, x19, [sp, #-0x20]!
000000000004ed98	stp	x29, x30, [sp, #0x10]
000000000004ed9c	add	x29, sp, #0x10
000000000004eda0	mov	x19, x2
000000000004eda4	nop
000000000004eda8	ldr	x1, #0x1b9a0 ; Objc selector ref: new
000000000004edac	bl	0x51b78 ; Objc message: -[x0 new]
000000000004edb0	bl	0x51b18 ; symbol stub for: _objc_autorelease
000000000004edb4	nop
000000000004edb8	ldrsw	x8, _OBJC_IVAR_$_NBKLong.value_
000000000004edbc	str	x19, [x0, x8]
000000000004edc0	ldp	x29, x30, [sp, #0x10]
000000000004edc4	ldp	x20, x19, [sp], #0x20
000000000004edc8	ret
+[KotlinInt numberWithInt:]:
000000000004edcc	stp	x20, x19, [sp, #-0x20]!
000000000004edd0	stp	x29, x30, [sp, #0x10]
000000000004edd4	add	x29, sp, #0x10
000000000004edd8	mov	x19, x2
000000000004eddc	nop
000000000004ede0	ldr	x1, #0x1b968 ; Objc selector ref: new
000000000004ede4	bl	0x51b78 ; Objc message: -[x0 new]
000000000004ede8	bl	0x51b18 ; symbol stub for: _objc_autorelease
000000000004edec	nop
000000000004edf0	ldrsw	x8, _OBJC_IVAR_$_NBKInt.value_
000000000004edf4	str	w19, [x0, x8]
000000000004edf8	ldp	x29, x30, [sp, #0x10]
000000000004edfc	ldp	x20, x19, [sp], #0x20
000000000004ee00	ret
+[KotlinFloat numberWithFloat:]:
000000000004ee04	stp	d9, d8, [sp, #-0x20]!
000000000004ee08	stp	x29, x30, [sp, #0x10]
000000000004ee0c	add	x29, sp, #0x10
000000000004ee10	fmov	s8, s0
000000000004ee14	nop
000000000004ee18	ldr	x1, #0x1b930 ; Objc selector ref: new
000000000004ee1c	bl	0x51b78 ; Objc message: -[x0 new]
000000000004ee20	bl	0x51b18 ; symbol stub for: _objc_autorelease
000000000004ee24	nop
000000000004ee28	ldrsw	x8, _OBJC_IVAR_$_NBKFloat.value_
000000000004ee2c	str	s8, [x0, x8]
000000000004ee30	ldp	x29, x30, [sp, #0x10]
000000000004ee34	ldp	d9, d8, [sp], #0x20
000000000004ee38	ret
+[KotlinDouble numberWithDouble:]:
000000000004ee3c	stp	d9, d8, [sp, #-0x20]!
000000000004ee40	stp	x29, x30, [sp, #0x10]
000000000004ee44	add	x29, sp, #0x10
000000000004ee48	fmov	d8, d0
000000000004ee4c	nop
000000000004ee50	ldr	x1, #0x1b8f8 ; Objc selector ref: new
000000000004ee54	bl	0x51b78 ; Objc message: -[x0 new]
000000000004ee58	bl	0x51b18 ; symbol stub for: _objc_autorelease
000000000004ee5c	nop
000000000004ee60	ldrsw	x8, _OBJC_IVAR_$_NBKDouble.value_
000000000004ee64	str	d8, [x0, x8]
000000000004ee68	ldp	x29, x30, [sp, #0x10]
000000000004ee6c	ldp	d9, d8, [sp], #0x20
000000000004ee70	ret
+[KotlinByte numberWithChar:]:
000000000004ee74	stp	x20, x19, [sp, #-0x20]!
000000000004ee78	stp	x29, x30, [sp, #0x10]
000000000004ee7c	add	x29, sp, #0x10
000000000004ee80	mov	x19, x2
000000000004ee84	nop
000000000004ee88	ldr	x1, #0x1b8c0 ; Objc selector ref: new
000000000004ee8c	bl	0x51b78 ; Objc message: -[x0 new]
000000000004ee90	bl	0x51b18 ; symbol stub for: _objc_autorelease
000000000004ee94	nop
000000000004ee98	ldrsw	x8, _OBJC_IVAR_$_NBKByte.value_
000000000004ee9c	strb	w19, [x0, x8]
000000000004eea0	ldp	x29, x30, [sp, #0x10]
000000000004eea4	ldp	x20, x19, [sp], #0x20
000000000004eea8	ret
+[KotlinBoolean numberWithBool:]:
000000000004eeac	stp	x20, x19, [sp, #-0x20]!
000000000004eeb0	stp	x29, x30, [sp, #0x10]
000000000004eeb4	add	x29, sp, #0x10
000000000004eeb8	mov	x19, x2
000000000004eebc	nop
000000000004eec0	ldr	x1, #0x1b888 ; Objc selector ref: new
000000000004eec4	bl	0x51b78 ; Objc message: -[x0 new]
000000000004eec8	bl	0x51b18 ; symbol stub for: _objc_autorelease
000000000004eecc	nop
000000000004eed0	ldrsw	x8, _OBJC_IVAR_$_NBKBoolean.value_
000000000004eed4	strb	w19, [x0, x8]
000000000004eed8	ldp	x29, x30, [sp, #0x10]
000000000004eedc	ldp	x20, x19, [sp], #0x20
000000000004eee0	ret
-[KotlinObjectHolder initWithRef:]:
000000000004eee4	sub	sp, sp, #0x40
000000000004eee8	stp	x22, x21, [sp, #0x10]
000000000004eeec	stp	x20, x19, [sp, #0x20]
000000000004eef0	stp	x29, x30, [sp, #0x30]
000000000004eef4	add	x29, sp, #0x30
000000000004eef8	mov	x19, x2
000000000004eefc	nop
000000000004ef00	ldr	x8, #0x1ba70 ; Objc class ref: NBKKotlinObjectHolder
000000000004ef04	stp	x0, x8, [sp]
000000000004ef08	nop
000000000004ef0c	ldr	x1, #0x1b754 ; Objc selector ref: init
000000000004ef10	mov	x0, sp
000000000004ef14	bl	0x51b84 ; Objc message: -[[x0 super] init]
000000000004ef18	mov	x20, x0
000000000004ef1c	cbz	x0, 0x4ef6c
000000000004ef20	adrp	x0, 30 ; 0x6c000
000000000004ef24	add	x0, x0, #0xbb0
000000000004ef28	ldr	x8, [x0]
000000000004ef2c	blr	x8
000000000004ef30	ldr	x21, [x0]
000000000004ef34	mov	w0, #0x1
000000000004ef38	mov	w1, #0x28
000000000004ef3c	bl	0x519e0 ; symbol stub for: _calloc
000000000004ef40	ldr	x8, [x21, #0xa8]!
000000000004ef44	sub	x9, x21, #0x8
000000000004ef48	stp	x8, x21, [x0]
000000000004ef4c	str	x0, [x8, #0x8]
000000000004ef50	str	x0, [x21]
000000000004ef54	ldr	x8, [x21, #0x10]
000000000004ef58	add	x8, x8, #0x1
000000000004ef5c	str	x8, [x21, #0x10]
000000000004ef60	stp	x9, x0, [x0, #0x18]
000000000004ef64	str	x19, [x0, #0x10]!
000000000004ef68	stp	x19, x0, [x20, #0x8]
000000000004ef6c	mov	x0, x20
000000000004ef70	ldp	x29, x30, [sp, #0x30]
000000000004ef74	ldp	x20, x19, [sp, #0x20]
000000000004ef78	ldp	x22, x21, [sp, #0x10]
000000000004ef7c	add	sp, sp, #0x40
000000000004ef80	ret
-[KotlinObjectHolder ref]:
000000000004ef84	stp	x20, x19, [sp, #-0x20]!
000000000004ef88	stp	x29, x30, [sp, #0x10]
000000000004ef8c	add	x29, sp, #0x10
000000000004ef90	mov	x19, x0
000000000004ef94	bl	_Kotlin_initRuntimeIfNeeded
000000000004ef98	ldr	x0, [x19, #0x8]
000000000004ef9c	ldp	x29, x30, [sp, #0x10]
000000000004efa0	ldp	x20, x19, [sp], #0x20
000000000004efa4	ret
-[KotlinObjectHolder dealloc]:
000000000004efa8	sub	sp, sp, #0x50
000000000004efac	stp	x24, x23, [sp, #0x10]
000000000004efb0	stp	x22, x21, [sp, #0x20]
000000000004efb4	stp	x20, x19, [sp, #0x30]
000000000004efb8	stp	x29, x30, [sp, #0x40]
000000000004efbc	add	x29, sp, #0x40
000000000004efc0	mov	x19, x0
000000000004efc4	bl	_Kotlin_initRuntimeIfNeeded
000000000004efc8	adrp	x21, 30 ; 0x6c000
000000000004efcc	add	x21, x21, #0xbb0
000000000004efd0	ldr	x24, [x21]
000000000004efd4	mov	x0, x21
000000000004efd8	blr	x24
000000000004efdc	ldr	x8, [x0]
000000000004efe0	add	x20, x8, #0x138
000000000004efe4	ldaxr	w22, [x20]
000000000004efe8	stlxr	w8, wzr, [x20]
000000000004efec	cbnz	w8, 0x4efe4
000000000004eff0	adr	x23, #0x37a53
000000000004eff4	nop
000000000004eff8	cmp	w22, #0x1
000000000004effc	b.ne	0x4f010
000000000004f000	ldarb	w8, [x23]
000000000004f004	tbz	w8, #0x0, 0x4f010
000000000004f008	mov	x0, x20
000000000004f00c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f010	ldr	x8, [x19, #0x8]
000000000004f014	cbz	x8, 0x4f030
000000000004f018	ldr	x1, [x19, #0x10]
000000000004f01c	mov	x0, x21
000000000004f020	blr	x24
000000000004f024	ldr	x8, [x0]
000000000004f028	add	x0, x8, #0x8
000000000004f02c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004f030	ldaxr	w8, [x20]
000000000004f034	stlxr	w9, w22, [x20]
000000000004f038	cbnz	w9, 0x4f030
000000000004f03c	cbnz	w22, 0x4f058
000000000004f040	cmp	w8, #0x1
000000000004f044	b.ne	0x4f058
000000000004f048	ldarb	w8, [x23]
000000000004f04c	tbz	w8, #0x0, 0x4f058
000000000004f050	mov	x0, x20
000000000004f054	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f058	nop
000000000004f05c	ldr	x8, #0x1b914 ; Objc class ref: NBKKotlinObjectHolder
000000000004f060	stp	x19, x8, [sp]
000000000004f064	nop
000000000004f068	ldr	x1, #0x1b5b8 ; Objc selector ref: dealloc
000000000004f06c	mov	x0, sp
000000000004f070	bl	0x51b84 ; Objc message: -[[x0 super] dealloc]
000000000004f074	ldp	x29, x30, [sp, #0x40]
000000000004f078	ldp	x20, x19, [sp, #0x30]
000000000004f07c	ldp	x22, x21, [sp, #0x20]
000000000004f080	ldp	x24, x23, [sp, #0x10]
000000000004f084	add	sp, sp, #0x50
000000000004f088	ret
-[KotlinObjCWeakReference releaseAsAssociatedObject:]:
000000000004f08c	cmp	w2, #0x1
000000000004f090	b.hi	0x4f0bc
000000000004f094	stp	x20, x19, [sp, #-0x20]!
000000000004f098	stp	x29, x30, [sp, #0x10]
000000000004f09c	add	x29, sp, #0x10
000000000004f0a0	mov	x19, x0
000000000004f0a4	add	x0, x0, #0x8
000000000004f0a8	bl	0x51b30 ; symbol stub for: _objc_destroyWeak
000000000004f0ac	mov	x0, x19
000000000004f0b0	ldp	x29, x30, [sp, #0x10]
000000000004f0b4	ldp	x20, x19, [sp], #0x20
000000000004f0b8	b	0x51b9c ; symbol stub for: _objc_release
000000000004f0bc	ret
-[KotlinBase toKotlin:]:
000000000004f0c0	stp	x20, x19, [sp, #-0x20]!
000000000004f0c4	stp	x29, x30, [sp, #0x10]
000000000004f0c8	add	x29, sp, #0x10
000000000004f0cc	mov	x19, x2
000000000004f0d0	mov	x20, x0
000000000004f0d4	bl	_Kotlin_initRuntimeIfNeeded
000000000004f0d8	ldr	x0, [x20, #0x8]
000000000004f0dc	str	x0, [x19]
000000000004f0e0	ldp	x29, x30, [sp, #0x10]
000000000004f0e4	ldp	x20, x19, [sp], #0x20
000000000004f0e8	ret
-[KotlinBase retain]:
000000000004f0ec	sub	sp, sp, #0x50
000000000004f0f0	stp	x24, x23, [sp, #0x10]
000000000004f0f4	stp	x22, x21, [sp, #0x20]
000000000004f0f8	stp	x20, x19, [sp, #0x30]
000000000004f0fc	stp	x29, x30, [sp, #0x40]
000000000004f100	add	x29, sp, #0x40
000000000004f104	mov	x19, x0
000000000004f108	ldrb	w8, [x0, #0x20]
000000000004f10c	cbz	w8, 0x4f130
000000000004f110	nop
000000000004f114	ldr	x8, #0x1b854 ; Objc class ref: NBKBase
000000000004f118	stp	x19, x8, [sp]
000000000004f11c	nop
000000000004f120	ldr	x1, #0x1b6b0 ; Objc selector ref: retain
000000000004f124	mov	x0, sp
000000000004f128	bl	0x51b84 ; Objc message: -[[x0 super] retain]
000000000004f12c	b	0x4f148
000000000004f130	add	x8, x19, #0x18
000000000004f134	ldaxr	w9, [x8]
000000000004f138	add	w10, w9, #0x1
000000000004f13c	stlxr	w11, w10, [x8]
000000000004f140	cbnz	w11, 0x4f134
000000000004f144	cbz	w9, 0x4f164
000000000004f148	mov	x0, x19
000000000004f14c	ldp	x29, x30, [sp, #0x40]
000000000004f150	ldp	x20, x19, [sp, #0x30]
000000000004f154	ldp	x22, x21, [sp, #0x20]
000000000004f158	ldp	x24, x23, [sp, #0x10]
000000000004f15c	add	sp, sp, #0x50
000000000004f160	ret
000000000004f164	ldr	x8, [x19, #0x8]
000000000004f168	cbz	x8, 0x4f148
000000000004f16c	bl	_Kotlin_initRuntimeIfNeeded
000000000004f170	adrp	x21, 29 ; 0x6c000
000000000004f174	add	x21, x21, #0xbb0
000000000004f178	ldr	x23, [x21]
000000000004f17c	mov	x0, x21
000000000004f180	blr	x23
000000000004f184	ldr	x8, [x0]
000000000004f188	add	x20, x8, #0x138
000000000004f18c	ldaxr	w22, [x20]
000000000004f190	stlxr	w8, wzr, [x20]
000000000004f194	cbnz	w8, 0x4f18c
000000000004f198	cmp	w22, #0x1
000000000004f19c	b.ne	0x4f1b8
000000000004f1a0	adr	x8, #0x378a3
000000000004f1a4	nop
000000000004f1a8	ldarb	w8, [x8]
000000000004f1ac	tbz	w8, #0x0, 0x4f1b8
000000000004f1b0	mov	x0, x20
000000000004f1b4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f1b8	bl	_Kotlin_initRuntimeIfNeeded
000000000004f1bc	ldr	x24, [x19, #0x8]
000000000004f1c0	mov	x0, x21
000000000004f1c4	blr	x23
000000000004f1c8	ldr	x21, [x0]
000000000004f1cc	mov	w0, #0x1
000000000004f1d0	mov	w1, #0x28
000000000004f1d4	bl	0x519e0 ; symbol stub for: _calloc
000000000004f1d8	ldr	x8, [x21, #0xa8]!
000000000004f1dc	sub	x9, x21, #0x8
000000000004f1e0	stp	x8, x21, [x0]
000000000004f1e4	str	x0, [x8, #0x8]
000000000004f1e8	str	x0, [x21]
000000000004f1ec	ldr	x8, [x21, #0x10]
000000000004f1f0	add	x8, x8, #0x1
000000000004f1f4	str	x8, [x21, #0x10]
000000000004f1f8	stp	x9, x0, [x0, #0x18]
000000000004f1fc	str	x24, [x0, #0x10]!
000000000004f200	str	x0, [x19, #0x10]
000000000004f204	ldaxr	w8, [x20]
000000000004f208	stlxr	w9, w22, [x20]
000000000004f20c	cbnz	w9, 0x4f204
000000000004f210	cbnz	w22, 0x4f148
000000000004f214	cmp	w8, #0x1
000000000004f218	b.ne	0x4f148
000000000004f21c	adr	x8, #0x37827
000000000004f220	nop
000000000004f224	ldarb	w8, [x8]
000000000004f228	tbz	w8, #0x0, 0x4f148
000000000004f22c	mov	x0, x20
000000000004f230	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f234	b	0x4f148
-[KotlinBase _tryRetain]:
000000000004f238	sub	sp, sp, #0x90
000000000004f23c	stp	x28, x27, [sp, #0x30]
000000000004f240	stp	x26, x25, [sp, #0x40]
000000000004f244	stp	x24, x23, [sp, #0x50]
000000000004f248	stp	x22, x21, [sp, #0x60]
000000000004f24c	stp	x20, x19, [sp, #0x70]
000000000004f250	stp	x29, x30, [sp, #0x80]
000000000004f254	add	x29, sp, #0x80
000000000004f258	mov	x21, x0
000000000004f25c	ldrb	w8, [x0, #0x20]
000000000004f260	cbz	w8, 0x4f2a8
000000000004f264	nop
000000000004f268	ldr	x8, #0x1b700 ; Objc class ref: NBKBase
000000000004f26c	stp	x21, x8, [sp]
000000000004f270	nop
000000000004f274	ldr	x1, #0x1b324 ; Objc selector ref: _tryRetain
000000000004f278	mov	x0, sp
000000000004f27c	bl	0x51b84 ; Objc message: -[[x0 super] _tryRetain]
000000000004f280	mov	x20, x0
000000000004f284	mov	x0, x20
000000000004f288	ldp	x29, x30, [sp, #0x80]
000000000004f28c	ldp	x20, x19, [sp, #0x70]
000000000004f290	ldp	x22, x21, [sp, #0x60]
000000000004f294	ldp	x24, x23, [sp, #0x50]
000000000004f298	ldp	x26, x25, [sp, #0x40]
000000000004f29c	ldp	x28, x27, [sp, #0x30]
000000000004f2a0	add	sp, sp, #0x90
000000000004f2a4	ret
000000000004f2a8	bl	_Kotlin_initRuntimeIfNeeded
000000000004f2ac	adrp	x20, 29 ; 0x6c000
000000000004f2b0	add	x20, x20, #0xbb0
000000000004f2b4	ldr	x24, [x20]
000000000004f2b8	mov	x0, x20
000000000004f2bc	blr	x24
000000000004f2c0	ldr	x8, [x0]
000000000004f2c4	add	x19, x8, #0x138
000000000004f2c8	ldaxr	w23, [x19]
000000000004f2cc	stlxr	w8, wzr, [x19]
000000000004f2d0	cbnz	w8, 0x4f2c8
000000000004f2d4	cmp	w23, #0x1
000000000004f2d8	b.ne	0x4f2f4
000000000004f2dc	adr	x8, #0x37767
000000000004f2e0	nop
000000000004f2e4	ldarb	w8, [x8]
000000000004f2e8	tbz	w8, #0x0, 0x4f2f4
000000000004f2ec	mov	x0, x19
000000000004f2f0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f2f4	ldr	x8, [x21, #0x8]
000000000004f2f8	cbz	x8, 0x4f354
000000000004f2fc	mov	x0, x20
000000000004f300	blr	x24
000000000004f304	ldr	x9, [x0]
000000000004f308	ldr	x10, [x9, #0x110]
000000000004f30c	add	x11, sp, #0x10
000000000004f310	str	x11, [x9, #0x110]
000000000004f314	mov	x9, #0x400000000
000000000004f318	stp	x10, x9, [sp, #0x18]
000000000004f31c	str	x8, [sp, #0x28]
000000000004f320	add	x8, x21, #0x18
000000000004f324	ldaxr	w9, [x8]
000000000004f328	add	w10, w9, #0x1
000000000004f32c	stlxr	w11, w10, [x8]
000000000004f330	cbnz	w11, 0x4f324
000000000004f334	cbz	w9, 0x4f38c
000000000004f338	mov	x0, x20
000000000004f33c	blr	x24
000000000004f340	ldr	x8, [x0]
000000000004f344	ldr	x9, [sp, #0x18]
000000000004f348	str	x9, [x8, #0x110]
000000000004f34c	mov	w20, #0x1
000000000004f350	b	0x4f358
000000000004f354	mov	w20, #0x0
000000000004f358	ldaxr	w8, [x19]
000000000004f35c	stlxr	w9, w23, [x19]
000000000004f360	cbnz	w9, 0x4f358
000000000004f364	cbnz	w23, 0x4f284
000000000004f368	cmp	w8, #0x1
000000000004f36c	b.ne	0x4f284
000000000004f370	adr	x8, #0x376d3
000000000004f374	nop
000000000004f378	ldarb	w8, [x8]
000000000004f37c	tbz	w8, #0x0, 0x4f284
000000000004f380	mov	x0, x19
000000000004f384	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f388	b	0x4f284
000000000004f38c	ldr	x8, [x21, #0x8]
000000000004f390	cbz	x8, 0x4f338
000000000004f394	bl	_Kotlin_initRuntimeIfNeeded
000000000004f398	mov	x0, x20
000000000004f39c	blr	x24
000000000004f3a0	ldr	x8, [x0]
000000000004f3a4	add	x22, x8, #0x138
000000000004f3a8	ldaxr	w25, [x22]
000000000004f3ac	stlxr	w8, wzr, [x22]
000000000004f3b0	cbnz	w8, 0x4f3a8
000000000004f3b4	cmp	w25, #0x1
000000000004f3b8	b.ne	0x4f3d4
000000000004f3bc	adr	x8, #0x37687
000000000004f3c0	nop
000000000004f3c4	ldarb	w8, [x8]
000000000004f3c8	tbz	w8, #0x0, 0x4f3d4
000000000004f3cc	mov	x0, x22
000000000004f3d0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f3d4	ldr	x26, [x21, #0x8]
000000000004f3d8	mov	x0, x20
000000000004f3dc	blr	x24
000000000004f3e0	ldr	x27, [x0]
000000000004f3e4	mov	w0, #0x1
000000000004f3e8	mov	w1, #0x28
000000000004f3ec	bl	0x519e0 ; symbol stub for: _calloc
000000000004f3f0	ldr	x8, [x27, #0xa8]!
000000000004f3f4	sub	x9, x27, #0x8
000000000004f3f8	mov	x10, x0
000000000004f3fc	str	x26, [x10, #0x10]!
000000000004f400	str	x9, [x0, #0x18]
000000000004f404	stp	x8, x27, [x0]
000000000004f408	str	x0, [x8, #0x8]
000000000004f40c	str	x0, [x27]
000000000004f410	ldr	x8, [x27, #0x10]
000000000004f414	add	x8, x8, #0x1
000000000004f418	str	x8, [x27, #0x10]
000000000004f41c	str	x0, [x0, #0x20]
000000000004f420	str	x10, [x21, #0x10]
000000000004f424	ldaxr	w8, [x22]
000000000004f428	stlxr	w9, w25, [x22]
000000000004f42c	cbnz	w9, 0x4f424
000000000004f430	cbnz	w25, 0x4f338
000000000004f434	cmp	w8, #0x1
000000000004f438	b.ne	0x4f338
000000000004f43c	adr	x8, #0x37607
000000000004f440	nop
000000000004f444	ldarb	w8, [x8]
000000000004f448	tbz	w8, #0x0, 0x4f338
000000000004f44c	mov	x0, x22
000000000004f450	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f454	b	0x4f338
-[KotlinBase release]:
000000000004f458	sub	sp, sp, #0x20
000000000004f45c	stp	x29, x30, [sp, #0x10]
000000000004f460	add	x29, sp, #0x10
000000000004f464	ldrb	w8, [x0, #0x20]
000000000004f468	cbz	w8, 0x4f494
000000000004f46c	nop
000000000004f470	ldr	x8, #0x1b4f8 ; Objc class ref: NBKBase
000000000004f474	stp	x0, x8, [sp]
000000000004f478	nop
000000000004f47c	ldr	x1, #0x1b334 ; Objc selector ref: release
000000000004f480	mov	x0, sp
000000000004f484	bl	0x51b84 ; Objc message: -[[x0 super] release]
000000000004f488	ldp	x29, x30, [sp, #0x10]
000000000004f48c	add	sp, sp, #0x20
000000000004f490	ret
000000000004f494	add	x0, x0, #0x8
000000000004f498	ldp	x29, x30, [sp, #0x10]
000000000004f49c	add	sp, sp, #0x20
000000000004f4a0	b	__ZN27BackRefFromAssociatedObject10releaseRefEv
-[KotlinBase releaseAsAssociatedObject:]:
000000000004f4a4	sub	sp, sp, #0x20
000000000004f4a8	stp	x29, x30, [sp, #0x10]
000000000004f4ac	add	x29, sp, #0x10
000000000004f4b0	cbz	w2, 0x4f4c0
000000000004f4b4	str	xzr, [x0, #0x8]
000000000004f4b8	cmp	w2, #0x1
000000000004f4bc	b.ne	0x4f4dc
000000000004f4c0	nop
000000000004f4c4	ldr	x8, #0x1b4a4 ; Objc class ref: NBKBase
000000000004f4c8	stp	x0, x8, [sp]
000000000004f4cc	nop
000000000004f4d0	ldr	x1, #0x1b2e0 ; Objc selector ref: release
000000000004f4d4	mov	x0, sp
000000000004f4d8	bl	0x51b84 ; Objc message: -[[x0 super] release]
000000000004f4dc	ldp	x29, x30, [sp, #0x10]
000000000004f4e0	add	sp, sp, #0x20
000000000004f4e4	ret
-[KotlinBase copyWithZone:]:
000000000004f4e8	b	0x51ba8 ; symbol stub for: _objc_retain
+[KotlinBase load]:
000000000004f4ec	nop
000000000004f4f0	ldr	x8, #0x37820
000000000004f4f4	cmn	x8, #0x1
000000000004f4f8	b.ne	0x4f500
000000000004f4fc	ret
000000000004f500	adr	x0, #0x37810
000000000004f504	nop
000000000004f508	adr	x1, #0x185c8
000000000004f50c	nop
000000000004f510	b	0x51a40 ; symbol stub for: _dispatch_once
+[KotlinBase initialize]:
000000000004f514	sub	sp, sp, #0x70
000000000004f518	stp	x28, x27, [sp, #0x10]
000000000004f51c	stp	x26, x25, [sp, #0x20]
000000000004f520	stp	x24, x23, [sp, #0x30]
000000000004f524	stp	x22, x21, [sp, #0x40]
000000000004f528	stp	x20, x19, [sp, #0x50]
000000000004f52c	stp	x29, x30, [sp, #0x60]
000000000004f530	add	x29, sp, #0x60
000000000004f534	mov	x19, x0
000000000004f538	nop
000000000004f53c	ldr	x0, #0x1b3d4 ; Objc class ref: NBKBase
000000000004f540	nop
000000000004f544	ldr	x1, #0x1b084 ; Objc selector ref: class
000000000004f548	bl	0x51b78 ; Objc message: +[NBKBase class]
000000000004f54c	cmp	x0, x19
000000000004f550	b.ne	0x4f574
000000000004f554	nop
000000000004f558	ldr	x8, #0x377b8
000000000004f55c	cmn	x8, #0x1
000000000004f560	b.ne	0x4f838
000000000004f564	nop
000000000004f568	ldr	x8, #0x37758
000000000004f56c	cmn	x8, #0x1
000000000004f570	b.ne	0x4f85c
000000000004f574	mov	x0, x19
000000000004f578	bl	0x51a28 ; symbol stub for: _class_getName
000000000004f57c	mov	x20, x0
000000000004f580	mov	w22, #0x0
000000000004f584	mov	w21, #0x1
000000000004f588	adr	x23, #0x16ec8
000000000004f58c	nop
000000000004f590	b	0x4f5a0
000000000004f594	sub	w21, w25, #0x1
000000000004f598	cmp	w21, w22
000000000004f59c	b.lt	0x4f5d4
000000000004f5a0	add	w8, w21, w22
000000000004f5a4	cmp	w8, #0x0
000000000004f5a8	cinc	w8, w8, lt
000000000004f5ac	asr	w25, w8, #1
000000000004f5b0	ldr	x24, [x23, w25, uxtw #3]
000000000004f5b4	ldr	x1, [x24, #0x28]
000000000004f5b8	mov	x0, x20
000000000004f5bc	bl	0x51d1c ; symbol stub for: _strcmp
000000000004f5c0	tbnz	w0, #0x1f, 0x4f594
000000000004f5c4	cbz	w0, 0x4f5f8
000000000004f5c8	add	w22, w25, #0x1
000000000004f5cc	cmp	w21, w22
000000000004f5d0	b.ge	0x4f5a0
000000000004f5d4	mov	x0, x19
000000000004f5d8	ldp	x29, x30, [sp, #0x60]
000000000004f5dc	ldp	x20, x19, [sp, #0x50]
000000000004f5e0	ldp	x22, x21, [sp, #0x40]
000000000004f5e4	ldp	x24, x23, [sp, #0x30]
000000000004f5e8	ldp	x26, x25, [sp, #0x20]
000000000004f5ec	ldp	x28, x27, [sp, #0x10]
000000000004f5f0	add	sp, sp, #0x70
000000000004f5f4	b	__ZL19getOrCreateTypeInfoP10objc_class
000000000004f5f8	adrp	x8, 29 ; 0x6c000
000000000004f5fc	add	x8, x8, #0xbb0
000000000004f600	ldr	x9, [x8]
000000000004f604	mov	x0, x8
000000000004f608	blr	x9
000000000004f60c	ldr	x22, [x0]
000000000004f610	cbz	x22, 0x4f634
000000000004f614	add	x10, x22, #0x138
000000000004f618	mov	w11, #0x1
000000000004f61c	ldaxr	w21, [x10]
000000000004f620	stlxr	w12, w11, [x10]
000000000004f624	cbnz	w12, 0x4f61c
000000000004f628	ldr	x23, [x24]
000000000004f62c	cbnz	x23, 0x4f640
000000000004f630	b	0x4f6e0
000000000004f634	mov	w21, #0x1
000000000004f638	ldr	x23, [x24]
000000000004f63c	cbz	x23, 0x4f6e0
000000000004f640	str	x23, [sp, #0x8]
000000000004f644	mov	x0, x8
000000000004f648	blr	x9
000000000004f64c	ldr	x25, [x0]
000000000004f650	cbz	x25, 0x4f66c
000000000004f654	add	x8, x25, #0x138
000000000004f658	mov	w9, #0x1
000000000004f65c	ldaxr	w20, [x8]
000000000004f660	stlxr	w10, w9, [x8]
000000000004f664	cbnz	w10, 0x4f65c
000000000004f668	b	0x4f670
000000000004f66c	mov	w20, #0x1
000000000004f670	nop
000000000004f674	ldr	x0, #0x1b22c ; Objc class ref: _OBJC_CLASS_$_NSValue
000000000004f678	bl	0x51b00 ; symbol stub for: _objc_alloc
000000000004f67c	nop
000000000004f680	ldr	x1, #0x1aff8 ; Objc selector ref: initWithBytes:objCType:
000000000004f684	adr	x3, #0x738d ; literal pool for: "^v"
000000000004f688	nop
000000000004f68c	add	x2, sp, #0x8
000000000004f690	bl	0x51b78 ; Objc message: +[NSValue initWithBytes:objCType:]
000000000004f694	mov	x2, x0
000000000004f698	adr	x1, #0x373b2
000000000004f69c	nop
000000000004f6a0	mov	x0, x19
000000000004f6a4	mov	x3, #0x0
000000000004f6a8	bl	0x51bcc ; symbol stub for: _objc_setAssociatedObject
000000000004f6ac	cbz	x25, 0x4f6e0
000000000004f6b0	add	x0, x25, #0x138
000000000004f6b4	ldaxr	w8, [x0]
000000000004f6b8	stlxr	w9, w20, [x0]
000000000004f6bc	cbnz	w9, 0x4f6b4
000000000004f6c0	cbnz	w20, 0x4f6e0
000000000004f6c4	cmp	w8, #0x1
000000000004f6c8	b.ne	0x4f6e0
000000000004f6cc	adr	x8, #0x37377
000000000004f6d0	nop
000000000004f6d4	ldarb	w8, [x8]
000000000004f6d8	tbz	w8, #0x0, 0x4f6e0
000000000004f6dc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f6e0	ldr	w8, [x24, #0x38]
000000000004f6e4	cmp	w8, #0x1
000000000004f6e8	b.lt	0x4f728
000000000004f6ec	mov	x20, #0x0
000000000004f6f0	mov	x25, #0x0
000000000004f6f4	ldr	x26, [x24, #0x30]
000000000004f6f8	ldr	x0, [x26, x20]
000000000004f6fc	bl	0x51cf8 ; symbol stub for: _sel_registerName
000000000004f700	mov	x1, x0
000000000004f704	add	x8, x26, x20
000000000004f708	ldp	x3, x2, [x8, #0x8]
000000000004f70c	mov	x0, x19
000000000004f710	bl	0x519ec ; symbol stub for: _class_addMethod
000000000004f714	add	x25, x25, #0x1
000000000004f718	ldrsw	x8, [x24, #0x38]
000000000004f71c	add	x20, x20, #0x18
000000000004f720	cmp	x25, x8
000000000004f724	b.lt	0x4f6f4
000000000004f728	ldr	w8, [x24, #0x48]
000000000004f72c	cmp	w8, #0x1
000000000004f730	b.lt	0x4f778
000000000004f734	mov	x25, #0x0
000000000004f738	mov	x26, #0x0
000000000004f73c	ldr	x27, [x24, #0x40]
000000000004f740	ldr	x0, [x27, x25]
000000000004f744	bl	0x51cf8 ; symbol stub for: _sel_registerName
000000000004f748	mov	x20, x0
000000000004f74c	mov	x0, x19
000000000004f750	bl	0x51be4 ; symbol stub for: _object_getClass
000000000004f754	add	x8, x27, x25
000000000004f758	ldp	x3, x2, [x8, #0x8]
000000000004f75c	mov	x1, x20
000000000004f760	bl	0x519ec ; symbol stub for: _class_addMethod
000000000004f764	add	x26, x26, #0x1
000000000004f768	ldrsw	x8, [x24, #0x48]
000000000004f76c	add	x25, x25, #0x18
000000000004f770	cmp	x26, x8
000000000004f774	b.lt	0x4f73c
000000000004f778	cbz	x23, 0x4f7e4
000000000004f77c	ldr	w8, [x23, #0x38]
000000000004f780	cmp	w8, #0x1
000000000004f784	b.lt	0x4f7e4
000000000004f788	mov	x24, #0x0
000000000004f78c	b	0x4f7a0
000000000004f790	add	x24, x24, #0x1
000000000004f794	ldrsw	x8, [x23, #0x38]
000000000004f798	cmp	x24, x8
000000000004f79c	b.ge	0x4f7e4
000000000004f7a0	ldr	x8, [x23, #0x30]
000000000004f7a4	ldr	x8, [x8, x24, lsl #3]
000000000004f7a8	ldr	x8, [x8, #0x60]
000000000004f7ac	ldr	x8, [x8, #0x10]
000000000004f7b0	cbz	x8, 0x4f790
000000000004f7b4	ldr	x0, [x8, #0x28]
000000000004f7b8	bl	0x51b60 ; symbol stub for: _objc_getProtocol
000000000004f7bc	mov	x20, x0
000000000004f7c0	cbz	x0, 0x4f790
000000000004f7c4	mov	x0, x19
000000000004f7c8	mov	x1, x20
000000000004f7cc	bl	0x519f8 ; symbol stub for: _class_addProtocol
000000000004f7d0	mov	x0, x19
000000000004f7d4	bl	0x51be4 ; symbol stub for: _object_getClass
000000000004f7d8	mov	x1, x20
000000000004f7dc	bl	0x519f8 ; symbol stub for: _class_addProtocol
000000000004f7e0	b	0x4f790
000000000004f7e4	cbz	x22, 0x4f818
000000000004f7e8	add	x0, x22, #0x138
000000000004f7ec	ldaxr	w8, [x0]
000000000004f7f0	stlxr	w9, w21, [x0]
000000000004f7f4	cbnz	w9, 0x4f7ec
000000000004f7f8	cbnz	w21, 0x4f818
000000000004f7fc	cmp	w8, #0x1
000000000004f800	b.ne	0x4f818
000000000004f804	adr	x8, #0x3723f
000000000004f808	nop
000000000004f80c	ldarb	w8, [x8]
000000000004f810	tbz	w8, #0x0, 0x4f818
000000000004f814	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f818	ldp	x29, x30, [sp, #0x60]
000000000004f81c	ldp	x20, x19, [sp, #0x50]
000000000004f820	ldp	x22, x21, [sp, #0x40]
000000000004f824	ldp	x24, x23, [sp, #0x30]
000000000004f828	ldp	x26, x25, [sp, #0x20]
000000000004f82c	ldp	x28, x27, [sp, #0x10]
000000000004f830	add	sp, sp, #0x70
000000000004f834	ret
000000000004f838	adr	x0, #0x374d8
000000000004f83c	nop
000000000004f840	adr	x1, #0x18290
000000000004f844	nop
000000000004f848	bl	0x51a40 ; symbol stub for: _dispatch_once
000000000004f84c	nop
000000000004f850	ldr	x8, #0x37470
000000000004f854	cmn	x8, #0x1
000000000004f858	b.eq	0x4f574
000000000004f85c	adr	x0, #0x37464
000000000004f860	nop
000000000004f864	adr	x1, #0x1820c
000000000004f868	nop
000000000004f86c	bl	0x51a40 ; symbol stub for: _dispatch_once
000000000004f870	b	0x4f574
000000000004f874	mov	x19, x0
000000000004f878	cbz	x25, 0x4f8bc
000000000004f87c	add	x0, x25, #0x138
000000000004f880	ldaxr	w8, [x0]
000000000004f884	stlxr	w9, w20, [x0]
000000000004f888	cbnz	w9, 0x4f880
000000000004f88c	cbnz	w20, 0x4f8bc
000000000004f890	cmp	w8, #0x1
000000000004f894	b.ne	0x4f8bc
000000000004f898	adr	x8, #0x371ab
000000000004f89c	nop
000000000004f8a0	ldarb	w8, [x8]
000000000004f8a4	tbz	w8, #0x0, 0x4f8bc
000000000004f8a8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f8ac	b	0x4f8bc
000000000004f8b0	b	0x4f8b8
000000000004f8b4	b	0x4f8b8
000000000004f8b8	mov	x19, x0
000000000004f8bc	cbnz	x22, 0x4f8c8
000000000004f8c0	mov	x0, x19
000000000004f8c4	bl	0x517a0 ; symbol stub for: __Unwind_Resume
000000000004f8c8	add	x0, x22, #0x138
000000000004f8cc	ldaxr	w8, [x0]
000000000004f8d0	stlxr	w9, w21, [x0]
000000000004f8d4	cbnz	w9, 0x4f8cc
000000000004f8d8	cbnz	w21, 0x4f8c0
000000000004f8dc	cmp	w8, #0x1
000000000004f8e0	b.ne	0x4f8c0
000000000004f8e4	adr	x8, #0x3715f
000000000004f8e8	nop
000000000004f8ec	ldarb	w8, [x8]
000000000004f8f0	tbz	w8, #0x0, 0x4f8c0
000000000004f8f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f8f8	mov	x0, x19
000000000004f8fc	bl	0x517a0 ; symbol stub for: __Unwind_Resume
+[KotlinBase allocWithZone:]:
000000000004f900	sub	sp, sp, #0xa0
000000000004f904	stp	x28, x27, [sp, #0x40]
000000000004f908	stp	x26, x25, [sp, #0x50]
000000000004f90c	stp	x24, x23, [sp, #0x60]
000000000004f910	stp	x22, x21, [sp, #0x70]
000000000004f914	stp	x20, x19, [sp, #0x80]
000000000004f918	stp	x29, x30, [sp, #0x90]
000000000004f91c	add	x29, sp, #0x90
000000000004f920	mov	x20, x2
000000000004f924	mov	x22, x0
000000000004f928	bl	_Kotlin_initRuntimeIfNeeded
000000000004f92c	adrp	x21, 29 ; 0x6c000
000000000004f930	add	x21, x21, #0xbb0
000000000004f934	ldr	x27, [x21]
000000000004f938	mov	x0, x21
000000000004f93c	blr	x27
000000000004f940	ldr	x26, [x0]
000000000004f944	add	x19, x26, #0x138
000000000004f948	ldaxr	w25, [x19]
000000000004f94c	stlxr	w8, wzr, [x19]
000000000004f950	cbnz	w8, 0x4f948
000000000004f954	cmp	w25, #0x1
000000000004f958	b.ne	0x4f974
000000000004f95c	adr	x8, #0x370e7
000000000004f960	nop
000000000004f964	ldarb	w8, [x8]
000000000004f968	tbz	w8, #0x0, 0x4f974
000000000004f96c	mov	x0, x19
000000000004f970	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f974	nop
000000000004f978	ldr	x8, #0x1afe8 ; Objc class ref: NBKBase
000000000004f97c	stp	x22, x8, [sp, #0x30]
000000000004f980	nop
000000000004f984	ldr	x1, #0x1ac2c ; Objc selector ref: allocWithZone:
000000000004f988	add	x0, sp, #0x30
000000000004f98c	mov	x2, x20
000000000004f990	bl	0x51b84 ; Objc message: -[[x0 super] allocWithZone:]
000000000004f994	mov	x20, x0
000000000004f998	adr	x1, #0x370b2
000000000004f99c	nop
000000000004f9a0	mov	x0, x22
000000000004f9a4	bl	0x51b48 ; symbol stub for: _objc_getAssociatedObject
000000000004f9a8	nop
000000000004f9ac	ldr	x1, #0x1ade4 ; Objc selector ref: pointerValue
000000000004f9b0	bl	0x51b78 ; Objc message: -[x0 pointerValue]
000000000004f9b4	mov	x23, x0
000000000004f9b8	cbnz	x0, 0x4f9f8
000000000004f9bc	nop
000000000004f9c0	ldr	x24, #0x1aed8 ; Objc class ref: _OBJC_CLASS_$_NSException
000000000004f9c4	mov	x0, x22
000000000004f9c8	bl	0x51be4 ; symbol stub for: _object_getClass
000000000004f9cc	bl	0x51a28 ; symbol stub for: _class_getName
000000000004f9d0	nop
000000000004f9d4	ldr	x8, #0x8634 ; literal pool symbol address: _NSGenericException
000000000004f9d8	ldr	x2, [x8]
000000000004f9dc	nop
000000000004f9e0	ldr	x1, #0x1adb8 ; Objc selector ref: raise:format:
000000000004f9e4	str	x0, [sp]
000000000004f9e8	adr	x3, #0x18248 ; Objc cfstring ref: @"bad cfstring ref"
000000000004f9ec	nop
000000000004f9f0	mov	x0, x24
000000000004f9f4	bl	0x51b78 ; Objc message: +[NSException raise:format:]
000000000004f9f8	ldr	w8, [x23, #0x14]
000000000004f9fc	tbz	w8, #0x1f, 0x4fa40
000000000004fa00	nop
000000000004fa04	ldr	x24, #0x1ae94 ; Objc class ref: _OBJC_CLASS_$_NSException
000000000004fa08	mov	x0, x22
000000000004fa0c	bl	0x51be4 ; symbol stub for: _object_getClass
000000000004fa10	bl	0x51a28 ; symbol stub for: _class_getName
000000000004fa14	nop
000000000004fa18	ldr	x8, #0x85f0 ; literal pool symbol address: _NSGenericException
000000000004fa1c	ldr	x2, [x8]
000000000004fa20	nop
000000000004fa24	ldr	x1, #0x1ad74 ; Objc selector ref: raise:format:
000000000004fa28	str	x0, [sp]
000000000004fa2c	adr	x3, #0x18224 ; Objc cfstring ref: @"bad cfstring ref"
000000000004fa30	nop
000000000004fa34	mov	x0, x24
000000000004fa38	bl	0x51b78 ; Objc message: +[NSException raise:format:]
000000000004fa3c	ldr	w8, [x23, #0x14]
000000000004fa40	str	xzr, [sp, #0x28]
000000000004fa44	mov	x0, x21
000000000004fa48	blr	x27
000000000004fa4c	ldr	x9, [x0]
000000000004fa50	add	x10, sp, #0x10
000000000004fa54	ldp	x11, x12, [x9, #0x110]
000000000004fa58	str	x10, [x9, #0x110]
000000000004fa5c	mov	x9, #0x400000000
000000000004fa60	stp	x11, x9, [sp, #0x18]
000000000004fa64	sxtw	x8, w8
000000000004fa68	add	x8, x8, #0xf
000000000004fa6c	and	x1, x8, #0xfffffffffffffff8
000000000004fa70	add	x0, x12, #0x70
000000000004fa74	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004fa78	str	x23, [x0, #0x10]!
000000000004fa7c	stur	xzr, [x0, #-0x8]
000000000004fa80	str	x0, [sp, #0x28]
000000000004fa84	ldar	x8, [x0]
000000000004fa88	and	x8, x8, #0xfffffffffffffffc
000000000004fa8c	ldr	x9, [x8]
000000000004fa90	cmp	x9, x8
000000000004fa94	csel	x8, xzr, x8, eq
000000000004fa98	cbnz	x8, 0x4faa4
000000000004fa9c	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004faa0	mov	x8, x0
000000000004faa4	add	x8, x8, #0x10
000000000004faa8	stlr	x20, [x8]
000000000004faac	ldr	x22, [sp, #0x28]
000000000004fab0	str	x22, [x20, #0x8]
000000000004fab4	mov	x0, x21
000000000004fab8	blr	x27
000000000004fabc	ldr	x21, [x0]
000000000004fac0	mov	w23, #0x1
000000000004fac4	mov	w0, #0x1
000000000004fac8	mov	w1, #0x28
000000000004facc	bl	0x519e0 ; symbol stub for: _calloc
000000000004fad0	ldr	x8, [x21, #0xa8]!
000000000004fad4	sub	x9, x21, #0x8
000000000004fad8	mov	x10, x0
000000000004fadc	str	x22, [x10, #0x10]!
000000000004fae0	str	x9, [x0, #0x18]
000000000004fae4	stp	x8, x21, [x0]
000000000004fae8	str	x0, [x8, #0x8]
000000000004faec	str	x0, [x21]
000000000004faf0	ldr	x8, [x21, #0x10]
000000000004faf4	add	x8, x8, #0x1
000000000004faf8	str	x8, [x21, #0x10]
000000000004fafc	str	x0, [x0, #0x20]
000000000004fb00	str	x10, [x20, #0x10]
000000000004fb04	str	w23, [x20, #0x18]
000000000004fb08	strb	wzr, [x20, #0x20]
000000000004fb0c	ldr	x8, [sp, #0x18]
000000000004fb10	str	x8, [x21, #0x68]
000000000004fb14	cbz	x26, 0x4fb48
000000000004fb18	ldaxr	w8, [x19]
000000000004fb1c	stlxr	w9, w25, [x19]
000000000004fb20	cbnz	w9, 0x4fb18
000000000004fb24	cbnz	w25, 0x4fb48
000000000004fb28	cmp	w8, #0x1
000000000004fb2c	b.ne	0x4fb48
000000000004fb30	adr	x8, #0x36f13
000000000004fb34	nop
000000000004fb38	ldarb	w8, [x8]
000000000004fb3c	tbz	w8, #0x0, 0x4fb48
000000000004fb40	mov	x0, x19
000000000004fb44	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fb48	mov	x0, x20
000000000004fb4c	ldp	x29, x30, [sp, #0x90]
000000000004fb50	ldp	x20, x19, [sp, #0x80]
000000000004fb54	ldp	x22, x21, [sp, #0x70]
000000000004fb58	ldp	x24, x23, [sp, #0x60]
000000000004fb5c	ldp	x26, x25, [sp, #0x50]
000000000004fb60	ldp	x28, x27, [sp, #0x40]
000000000004fb64	add	sp, sp, #0xa0
000000000004fb68	ret
000000000004fb6c	b	0x4fb70
000000000004fb70	mov	x20, x0
000000000004fb74	cbz	x26, 0x4fba8
000000000004fb78	ldaxr	w8, [x19]
000000000004fb7c	stlxr	w9, w25, [x19]
000000000004fb80	cbnz	w9, 0x4fb78
000000000004fb84	cbnz	w25, 0x4fba8
000000000004fb88	cmp	w8, #0x1
000000000004fb8c	b.ne	0x4fba8
000000000004fb90	adr	x8, #0x36eb3
000000000004fb94	nop
000000000004fb98	ldarb	w8, [x8]
000000000004fb9c	tbz	w8, #0x0, 0x4fba8
000000000004fba0	mov	x0, x19
000000000004fba4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fba8	mov	x0, x20
000000000004fbac	bl	0x517a0 ; symbol stub for: __Unwind_Resume
+[KotlinBase createRetainedWrapper:]:
000000000004fbb0	sub	sp, sp, #0x60
000000000004fbb4	stp	x26, x25, [sp, #0x10]
000000000004fbb8	stp	x24, x23, [sp, #0x20]
000000000004fbbc	stp	x22, x21, [sp, #0x30]
000000000004fbc0	stp	x20, x19, [sp, #0x40]
000000000004fbc4	stp	x29, x30, [sp, #0x50]
000000000004fbc8	add	x29, sp, #0x50
000000000004fbcc	mov	x21, x2
000000000004fbd0	nop
000000000004fbd4	ldr	x8, #0x1ad8c ; Objc class ref: NBKBase
000000000004fbd8	stp	x0, x8, [sp]
000000000004fbdc	nop
000000000004fbe0	ldr	x1, #0x1a9d0 ; Objc selector ref: allocWithZone:
000000000004fbe4	mov	x0, sp
000000000004fbe8	mov	x2, #0x0
000000000004fbec	bl	0x51b84 ; Objc message: -[[x0 super] allocWithZone:]
000000000004fbf0	mov	x19, x0
000000000004fbf4	mov	x20, x0
000000000004fbf8	str	x21, [x20, #0x8]!
000000000004fbfc	adrp	x22, 29 ; 0x6c000
000000000004fc00	add	x22, x22, #0xbb0
000000000004fc04	ldr	x23, [x22]
000000000004fc08	mov	x0, x22
000000000004fc0c	blr	x23
000000000004fc10	ldr	x24, [x0]
000000000004fc14	mov	w25, #0x1
000000000004fc18	mov	w0, #0x1
000000000004fc1c	mov	w1, #0x28
000000000004fc20	bl	0x519e0 ; symbol stub for: _calloc
000000000004fc24	ldr	x8, [x24, #0xa8]!
000000000004fc28	sub	x9, x24, #0x8
000000000004fc2c	stp	x8, x24, [x0]
000000000004fc30	str	x0, [x8, #0x8]
000000000004fc34	str	x0, [x24]
000000000004fc38	ldr	x8, [x24, #0x10]
000000000004fc3c	add	x8, x8, #0x1
000000000004fc40	str	x8, [x24, #0x10]
000000000004fc44	stp	x9, x0, [x0, #0x18]
000000000004fc48	str	x21, [x0, #0x10]!
000000000004fc4c	str	x0, [x19, #0x10]
000000000004fc50	str	w25, [x19, #0x18]
000000000004fc54	ldr	x8, [x21]
000000000004fc58	and	w8, w8, #0x1
000000000004fc5c	strb	w8, [x19, #0x20]
000000000004fc60	ldr	x8, [x21]
000000000004fc64	tbnz	w8, #0x0, 0x4fd30
000000000004fc68	ldar	x8, [x21]
000000000004fc6c	and	x8, x8, #0xfffffffffffffffc
000000000004fc70	ldr	x9, [x8]
000000000004fc74	cmp	x9, x8
000000000004fc78	csel	x0, xzr, x8, eq
000000000004fc7c	cbnz	x0, 0x4fc88
000000000004fc80	mov	x0, x21
000000000004fc84	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004fc88	add	x8, x0, #0x10
000000000004fc8c	ldaxr	x21, [x8]
000000000004fc90	cbnz	x21, 0x4fca8
000000000004fc94	stlxr	w9, x19, [x8]
000000000004fc98	cbnz	w9, 0x4fc8c
000000000004fc9c	mov	w8, #0x1
000000000004fca0	tbz	w8, #0x0, 0x4fcb4
000000000004fca4	b	0x4fd30
000000000004fca8	mov	w8, #0x0
000000000004fcac	clrex
000000000004fcb0	tbnz	w8, #0x0, 0x4fd30
000000000004fcb4	mov	x0, x22
000000000004fcb8	blr	x23
000000000004fcbc	ldr	x24, [x0]
000000000004fcc0	add	x22, x24, #0x138
000000000004fcc4	mov	w8, #0x1
000000000004fcc8	ldaxr	w23, [x22]
000000000004fccc	stlxr	w9, w8, [x22]
000000000004fcd0	cbnz	w9, 0x4fcc8
000000000004fcd4	mov	x0, x20
000000000004fcd8	bl	__ZN27BackRefFromAssociatedObject10releaseRefEv
000000000004fcdc	nop
000000000004fce0	ldr	x1, #0x1a8a0 ; Objc selector ref: NBK_releaseAsAssociatedObject:
000000000004fce4	mov	x0, x19
000000000004fce8	mov	w2, #0x1
000000000004fcec	bl	0x51b78 ; Objc message: -[x0 NBK_releaseAsAssociatedObject:]
000000000004fcf0	cbz	x24, 0x4fd24
000000000004fcf4	ldaxr	w8, [x22]
000000000004fcf8	stlxr	w9, w23, [x22]
000000000004fcfc	cbnz	w9, 0x4fcf4
000000000004fd00	cbnz	w23, 0x4fd24
000000000004fd04	cmp	w8, #0x1
000000000004fd08	b.ne	0x4fd24
000000000004fd0c	adr	x8, #0x36d37
000000000004fd10	nop
000000000004fd14	ldarb	w8, [x8]
000000000004fd18	tbz	w8, #0x0, 0x4fd24
000000000004fd1c	mov	x0, x22
000000000004fd20	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fd24	mov	x0, x21
000000000004fd28	bl	0x51ba8 ; symbol stub for: _objc_retain
000000000004fd2c	mov	x19, x0
000000000004fd30	mov	x0, x19
000000000004fd34	ldp	x29, x30, [sp, #0x50]
000000000004fd38	ldp	x20, x19, [sp, #0x40]
000000000004fd3c	ldp	x22, x21, [sp, #0x30]
000000000004fd40	ldp	x24, x23, [sp, #0x20]
000000000004fd44	ldp	x26, x25, [sp, #0x10]
000000000004fd48	add	sp, sp, #0x60
000000000004fd4c	ret
000000000004fd50	mov	x19, x0
000000000004fd54	cbz	x24, 0x4fd88
000000000004fd58	ldaxr	w8, [x22]
000000000004fd5c	stlxr	w9, w23, [x22]
000000000004fd60	cbnz	w9, 0x4fd58
000000000004fd64	cbnz	w23, 0x4fd88
000000000004fd68	cmp	w8, #0x1
000000000004fd6c	b.ne	0x4fd88
000000000004fd70	adr	x8, #0x36cd3
000000000004fd74	nop
000000000004fd78	ldarb	w8, [x8]
000000000004fd7c	tbz	w8, #0x0, 0x4fd88
000000000004fd80	mov	x0, x22
000000000004fd84	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fd88	mov	x0, x19
000000000004fd8c	bl	0x517a0 ; symbol stub for: __Unwind_Resume
____ZL15injectToRuntimev_block_invoke:
000000000004fd90	stp	x29, x30, [sp, #-0x10]!
000000000004fd94	mov	x29, sp
000000000004fd98	nop
000000000004fd9c	ldr	x8, #0x36efc
000000000004fda0	cbnz	x8, 0x4fdd8
000000000004fda4	nop
000000000004fda8	ldr	x8, #0x1a7e0 ; Objc selector ref: NBK_toKotlin:
000000000004fdac	adr	x9, #0x36eec
000000000004fdb0	nop
000000000004fdb4	str	x8, [x9]
000000000004fdb8	ldr	x8, [x9, #0x8]
000000000004fdbc	cbnz	x8, 0x4fdd8
000000000004fdc0	nop
000000000004fdc4	ldr	x8, #0x1a7bc ; Objc selector ref: NBK_releaseAsAssociatedObject:
000000000004fdc8	adrp	x9, 55 ; 0x86000
000000000004fdcc	str	x8, [x9, #0xca0]
000000000004fdd0	ldp	x29, x30, [sp], #0x10
000000000004fdd4	ret
000000000004fdd8	adr	x2, #0x6fd2 ; literal pool for: "runtime injected twice; https://youtrack.jetbrains.com/issue/KT-42254 might be related"
000000000004fddc	nop
000000000004fde0	mov	w0, #0x0
000000000004fde4	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
-[NSString(NSStringToKotlin) toKotlin:]:
000000000004fde8	mov	x1, x2
000000000004fdec	b	_Kotlin_Interop_CreateKStringFromNSString
-[NSObject(NSObjectToKotlin) toKotlin:]:
000000000004fdf0	stp	x22, x21, [sp, #-0x30]!
000000000004fdf4	stp	x20, x19, [sp, #0x10]
000000000004fdf8	stp	x29, x30, [sp, #0x20]
000000000004fdfc	add	x29, sp, #0x20
000000000004fe00	mov	x21, x2
000000000004fe04	mov	x19, x0
000000000004fe08	bl	0x51be4 ; symbol stub for: _object_getClass
000000000004fe0c	bl	__ZL19getOrCreateTypeInfoP10objc_class
000000000004fe10	mov	x22, x0
000000000004fe14	mov	x0, x19
000000000004fe18	bl	0x51ba8 ; symbol stub for: _objc_retain
000000000004fe1c	mov	x19, x0
000000000004fe20	adrp	x0, 29 ; 0x6c000
000000000004fe24	add	x0, x0, #0xbb0
000000000004fe28	ldr	x8, [x0]
000000000004fe2c	blr	x8
000000000004fe30	ldr	x8, [x0]
000000000004fe34	ldr	x8, [x8, #0x118]
000000000004fe38	ldrsw	x9, [x22, #0x14]
000000000004fe3c	add	x9, x9, #0xf
000000000004fe40	and	x1, x9, #0xfffffffffffffff8
000000000004fe44	add	x0, x8, #0x70
000000000004fe48	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004fe4c	mov	x20, x0
000000000004fe50	str	x22, [x20, #0x10]!
000000000004fe54	stur	xzr, [x20, #-0x8]
000000000004fe58	str	x20, [x21]
000000000004fe5c	ldar	x8, [x20]
000000000004fe60	and	x8, x8, #0xfffffffffffffffc
000000000004fe64	ldr	x9, [x8]
000000000004fe68	cmp	x9, x8
000000000004fe6c	csel	x0, xzr, x8, eq
000000000004fe70	cbnz	x0, 0x4fe7c
000000000004fe74	mov	x0, x20
000000000004fe78	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004fe7c	add	x8, x0, #0x10
000000000004fe80	stlr	x19, [x8]
000000000004fe84	mov	x0, x20
000000000004fe88	ldp	x29, x30, [sp, #0x20]
000000000004fe8c	ldp	x20, x19, [sp, #0x10]
000000000004fe90	ldp	x22, x21, [sp], #0x30
000000000004fe94	ret
-[NSObject(NSObjectToKotlin) releaseAsAssociatedObject:]:
000000000004fe98	cmp	w2, #0x1
000000000004fe9c	b.hi	0x4fea4
000000000004fea0	b	0x51b9c ; symbol stub for: _objc_release
000000000004fea4	ret
-[NSNumber(NSNumberToKotlin) toKotlin:]:
000000000004fea8	sub	sp, sp, #0x50
000000000004feac	stp	x22, x21, [sp, #0x20]
000000000004feb0	stp	x20, x19, [sp, #0x30]
000000000004feb4	stp	x29, x30, [sp, #0x40]
000000000004feb8	add	x29, sp, #0x40
000000000004febc	mov	x19, x2
000000000004fec0	mov	x20, x0
000000000004fec4	nop
000000000004fec8	ldr	x1, #0x1a8a0 ; Objc selector ref: objCType
000000000004fecc	bl	0x51b78 ; Objc message: -[x0 objCType]
000000000004fed0	ldrsb	w8, [x0]
000000000004fed4	sub	w8, w8, #0x43
000000000004fed8	cmp	w8, #0x30
000000000004fedc	b.hi	0x4ff20
000000000004fee0	adr	x9, #0x26fc
000000000004fee4	nop
000000000004fee8	adr	x10, #0x10
000000000004feec	ldrb	w11, [x9, x8]
000000000004fef0	add	x10, x10, x11, lsl #2
000000000004fef4	br	x10
000000000004fef8	nop
000000000004fefc	ldr	x1, #0x1a90c ; Objc selector ref: unsignedCharValue
000000000004ff00	mov	x0, x20
000000000004ff04	bl	0x51b78 ; Objc message: -[x0 unsignedCharValue]
000000000004ff08	mov	x1, x19
000000000004ff0c	ldp	x29, x30, [sp, #0x40]
000000000004ff10	ldp	x20, x19, [sp, #0x30]
000000000004ff14	ldp	x22, x21, [sp, #0x20]
000000000004ff18	add	sp, sp, #0x50
000000000004ff1c	b	_Kotlin_boxUByte
000000000004ff20	mov	x0, x20
000000000004ff24	bl	0x51be4 ; symbol stub for: _object_getClass
000000000004ff28	bl	__ZL19getOrCreateTypeInfoP10objc_class
000000000004ff2c	mov	x22, x0
000000000004ff30	mov	x0, x20
000000000004ff34	bl	0x51ba8 ; symbol stub for: _objc_retain
000000000004ff38	mov	x20, x0
000000000004ff3c	adrp	x0, 29 ; 0x6c000
000000000004ff40	add	x0, x0, #0xbb0
000000000004ff44	ldr	x8, [x0]
000000000004ff48	blr	x8
000000000004ff4c	ldr	x8, [x0]
000000000004ff50	ldr	x8, [x8, #0x118]
000000000004ff54	ldrsw	x9, [x22, #0x14]
000000000004ff58	add	x9, x9, #0xf
000000000004ff5c	and	x1, x9, #0xfffffffffffffff8
000000000004ff60	add	x0, x8, #0x70
000000000004ff64	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004ff68	mov	x21, x0
000000000004ff6c	str	x22, [x21, #0x10]!
000000000004ff70	stur	xzr, [x21, #-0x8]
000000000004ff74	str	x21, [x19]
000000000004ff78	ldar	x8, [x21]
000000000004ff7c	and	x8, x8, #0xfffffffffffffffc
000000000004ff80	ldr	x9, [x8]
000000000004ff84	cmp	x9, x8
000000000004ff88	csel	x0, xzr, x8, eq
000000000004ff8c	cbnz	x0, 0x4ff98
000000000004ff90	mov	x0, x21
000000000004ff94	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004ff98	add	x8, x0, #0x10
000000000004ff9c	stlr	x20, [x8]
000000000004ffa0	mov	x0, x21
000000000004ffa4	ldp	x29, x30, [sp, #0x40]
000000000004ffa8	ldp	x20, x19, [sp, #0x30]
000000000004ffac	ldp	x22, x21, [sp, #0x20]
000000000004ffb0	add	sp, sp, #0x50
000000000004ffb4	ret
000000000004ffb8	nop
000000000004ffbc	ldr	x1, #0x1a854 ; Objc selector ref: unsignedIntValue
000000000004ffc0	mov	x0, x20
000000000004ffc4	bl	0x51b78 ; Objc message: -[x0 unsignedIntValue]
000000000004ffc8	mov	x1, x19
000000000004ffcc	ldp	x29, x30, [sp, #0x40]
000000000004ffd0	ldp	x20, x19, [sp, #0x30]
000000000004ffd4	ldp	x22, x21, [sp, #0x20]
000000000004ffd8	add	sp, sp, #0x50
000000000004ffdc	b	_Kotlin_boxUInt
000000000004ffe0	nop
000000000004ffe4	ldr	x1, #0x1a834 ; Objc selector ref: unsignedLongLongValue
000000000004ffe8	mov	x0, x20
000000000004ffec	bl	0x51b78 ; Objc message: -[x0 unsignedLongLongValue]
000000000004fff0	mov	x1, x19
000000000004fff4	ldp	x29, x30, [sp, #0x40]
000000000004fff8	ldp	x20, x19, [sp, #0x30]
000000000004fffc	ldp	x22, x21, [sp, #0x20]
0000000000050000	add	sp, sp, #0x50
0000000000050004	b	_Kotlin_boxULong
0000000000050008	nop
000000000005000c	ldr	x1, #0x1a814 ; Objc selector ref: unsignedShortValue
0000000000050010	mov	x0, x20
0000000000050014	bl	0x51b78 ; Objc message: -[x0 unsignedShortValue]
0000000000050018	mov	x1, x19
000000000005001c	ldp	x29, x30, [sp, #0x40]
0000000000050020	ldp	x20, x19, [sp, #0x30]
0000000000050024	ldp	x22, x21, [sp, #0x20]
0000000000050028	add	sp, sp, #0x50
000000000005002c	b	_Kotlin_boxUShort
0000000000050030	nop
0000000000050034	ldr	x1, #0x1a58c ; Objc selector ref: charValue
0000000000050038	mov	x0, x20
000000000005003c	bl	0x51b78 ; Objc message: -[x0 charValue]
0000000000050040	mov	x1, x19
0000000000050044	ldp	x29, x30, [sp, #0x40]
0000000000050048	ldp	x20, x19, [sp, #0x30]
000000000005004c	ldp	x22, x21, [sp, #0x20]
0000000000050050	add	sp, sp, #0x50
0000000000050054	b	_Kotlin_boxByte
0000000000050058	nop
000000000005005c	ldr	x1, #0x1a5dc ; Objc selector ref: doubleValue
0000000000050060	mov	x0, x20
0000000000050064	bl	0x51b78 ; Objc message: -[x0 doubleValue]
0000000000050068	mov	x0, x19
000000000005006c	ldp	x29, x30, [sp, #0x40]
0000000000050070	ldp	x20, x19, [sp, #0x30]
0000000000050074	ldp	x22, x21, [sp, #0x20]
0000000000050078	add	sp, sp, #0x50
000000000005007c	b	_Kotlin_boxDouble
0000000000050080	nop
0000000000050084	ldr	x1, #0x1a5c4 ; Objc selector ref: floatValue
0000000000050088	mov	x0, x20
000000000005008c	bl	0x51b78 ; Objc message: -[x0 floatValue]
0000000000050090	mov	x0, x19
0000000000050094	ldp	x29, x30, [sp, #0x40]
0000000000050098	ldp	x20, x19, [sp, #0x30]
000000000005009c	ldp	x22, x21, [sp, #0x20]
00000000000500a0	add	sp, sp, #0x50
00000000000500a4	b	_Kotlin_boxFloat
00000000000500a8	nop
00000000000500ac	ldr	x1, #0x1a654 ; Objc selector ref: intValue
00000000000500b0	mov	x0, x20
00000000000500b4	bl	0x51b78 ; Objc message: -[x0 intValue]
00000000000500b8	mov	x21, x0
00000000000500bc	str	xzr, [sp, #0x8]
00000000000500c0	adrp	x20, 28 ; 0x6c000
00000000000500c4	add	x20, x20, #0xbb0
00000000000500c8	ldr	x22, [x20]
00000000000500cc	mov	x0, x20
00000000000500d0	blr	x22
00000000000500d4	ldr	x8, [x0]
00000000000500d8	ldr	x9, [x8, #0x110]
00000000000500dc	add	x10, sp, #0x8
00000000000500e0	str	x10, [x8, #0x110]
00000000000500e4	mov	x8, #0x300000000
00000000000500e8	stp	x9, x8, [sp, #0x10]
00000000000500ec	adr	x8, #0x36957
00000000000500f0	nop
00000000000500f4	ldarb	w8, [x8]
00000000000500f8	tbz	w8, #0x0, 0x50100
00000000000500fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000050100	mov	x0, x21
0000000000050104	mov	x1, x19
0000000000050108	bl	"_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any"
000000000005010c	mov	x21, x0
0000000000050110	str	x0, [x19]
0000000000050114	mov	x0, x20
0000000000050118	blr	x22
000000000005011c	ldr	x8, [x0]
0000000000050120	ldr	x9, [sp, #0x10]
0000000000050124	str	x9, [x8, #0x110]
0000000000050128	mov	x0, x21
000000000005012c	ldp	x29, x30, [sp, #0x40]
0000000000050130	ldp	x20, x19, [sp, #0x30]
0000000000050134	ldp	x22, x21, [sp, #0x20]
0000000000050138	add	sp, sp, #0x50
000000000005013c	ret
0000000000050140	nop
0000000000050144	ldr	x1, #0x1a5e4 ; Objc selector ref: longLongValue
0000000000050148	mov	x0, x20
000000000005014c	bl	0x51b78 ; Objc message: -[x0 longLongValue]
0000000000050150	mov	x1, x19
0000000000050154	ldp	x29, x30, [sp, #0x40]
0000000000050158	ldp	x20, x19, [sp, #0x30]
000000000005015c	ldp	x22, x21, [sp, #0x20]
0000000000050160	add	sp, sp, #0x50
0000000000050164	b	_Kotlin_boxLong
0000000000050168	nop
000000000005016c	ldr	x1, #0x1a674 ; Objc selector ref: shortValue
0000000000050170	mov	x0, x20
0000000000050174	bl	0x51b78 ; Objc message: -[x0 shortValue]
0000000000050178	mov	x1, x19
000000000005017c	ldp	x29, x30, [sp, #0x40]
0000000000050180	ldp	x20, x19, [sp, #0x30]
0000000000050184	ldp	x22, x21, [sp, #0x20]
0000000000050188	add	sp, sp, #0x50
000000000005018c	b	_Kotlin_boxShort
-[NSDecimalNumber(NSDecimalNumberToKotlin) toKotlin:]:
0000000000050190	stp	x22, x21, [sp, #-0x30]!
0000000000050194	stp	x20, x19, [sp, #0x10]
0000000000050198	stp	x29, x30, [sp, #0x20]
000000000005019c	add	x29, sp, #0x20
00000000000501a0	mov	x21, x2
00000000000501a4	mov	x19, x0
00000000000501a8	bl	0x51be4 ; symbol stub for: _object_getClass
00000000000501ac	bl	__ZL19getOrCreateTypeInfoP10objc_class
00000000000501b0	mov	x22, x0
00000000000501b4	mov	x0, x19
00000000000501b8	bl	0x51ba8 ; symbol stub for: _objc_retain
00000000000501bc	mov	x19, x0
00000000000501c0	adrp	x0, 28 ; 0x6c000
00000000000501c4	add	x0, x0, #0xbb0
00000000000501c8	ldr	x8, [x0]
00000000000501cc	blr	x8
00000000000501d0	ldr	x8, [x0]
00000000000501d4	ldr	x8, [x8, #0x118]
00000000000501d8	ldrsw	x9, [x22, #0x14]
00000000000501dc	add	x9, x9, #0xf
00000000000501e0	and	x1, x9, #0xfffffffffffffff8
00000000000501e4	add	x0, x8, #0x70
00000000000501e8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000501ec	mov	x20, x0
00000000000501f0	str	x22, [x20, #0x10]!
00000000000501f4	stur	xzr, [x20, #-0x8]
00000000000501f8	str	x20, [x21]
00000000000501fc	ldar	x8, [x20]
0000000000050200	and	x8, x8, #0xfffffffffffffffc
0000000000050204	ldr	x9, [x8]
0000000000050208	cmp	x9, x8
000000000005020c	csel	x0, xzr, x8, eq
0000000000050210	cbnz	x0, 0x5021c
0000000000050214	mov	x0, x20
0000000000050218	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000005021c	add	x8, x0, #0x10
0000000000050220	stlr	x19, [x8]
0000000000050224	mov	x0, x20
0000000000050228	ldp	x29, x30, [sp, #0x20]
000000000005022c	ldp	x20, x19, [sp, #0x10]
0000000000050230	ldp	x22, x21, [sp], #0x30
0000000000050234	ret
-[NSSet(NSSetToKotlin) toKotlin:]:
0000000000050238	sub	sp, sp, #0x50
000000000005023c	stp	x22, x21, [sp, #0x20]
0000000000050240	stp	x20, x19, [sp, #0x30]
0000000000050244	stp	x29, x30, [sp, #0x40]
0000000000050248	add	x29, sp, #0x40
000000000005024c	mov	x20, x2
0000000000050250	bl	0x51ba8 ; symbol stub for: _objc_retain
0000000000050254	mov	x19, x0
0000000000050258	bl	_Kotlin_initRuntimeIfNeeded
000000000005025c	str	xzr, [sp, #0x8]
0000000000050260	adrp	x21, 28 ; 0x6c000
0000000000050264	add	x21, x21, #0xbb0
0000000000050268	ldr	x22, [x21]
000000000005026c	mov	x0, x21
0000000000050270	blr	x22
0000000000050274	ldr	x8, [x0]
0000000000050278	ldr	x9, [x8, #0x110]
000000000005027c	add	x10, sp, #0x8
0000000000050280	str	x10, [x8, #0x110]
0000000000050284	mov	x8, #0x300000000
0000000000050288	stp	x9, x8, [sp, #0x10]
000000000005028c	adr	x8, #0x367b7
0000000000050290	nop
0000000000050294	ldarb	w8, [x8]
0000000000050298	tbz	w8, #0x0, 0x502a0
000000000005029c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000502a0	mov	x0, x21
00000000000502a4	blr	x22
00000000000502a8	mov	x22, x0
00000000000502ac	ldr	x8, [x0]
00000000000502b0	ldr	x8, [x8, #0x118]
00000000000502b4	add	x0, x8, #0x70
00000000000502b8	mov	w1, #0x10
00000000000502bc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000502c0	mov	x21, x0
00000000000502c4	adr	x8, #0xa40c
00000000000502c8	nop
00000000000502cc	str	x8, [x21, #0x10]!
00000000000502d0	stur	xzr, [x21, #-0x8]
00000000000502d4	str	x21, [x20]
00000000000502d8	ldr	x8, [x22]
00000000000502dc	ldr	x9, [sp, #0x10]
00000000000502e0	str	x9, [x8, #0x110]
00000000000502e4	ldar	x8, [x21]
00000000000502e8	and	x8, x8, #0xfffffffffffffffc
00000000000502ec	ldr	x9, [x8]
00000000000502f0	cmp	x9, x8
00000000000502f4	csel	x0, xzr, x8, eq
00000000000502f8	cbnz	x0, 0x50304
00000000000502fc	mov	x0, x21
0000000000050300	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000050304	add	x8, x0, #0x10
0000000000050308	stlr	x19, [x8]
000000000005030c	mov	x0, x21
0000000000050310	ldp	x29, x30, [sp, #0x40]
0000000000050314	ldp	x20, x19, [sp, #0x30]
0000000000050318	ldp	x22, x21, [sp, #0x20]
000000000005031c	add	sp, sp, #0x50
0000000000050320	ret
-[NSSet(NSSetToKotlin) releaseAsAssociatedObject:]:
0000000000050324	cmp	w2, #0x1
0000000000050328	b.hi	0x50330
000000000005032c	b	0x51b9c ; symbol stub for: _objc_release
0000000000050330	ret
-[NSMutableArray(NSArrayToKotlin) toKotlin:]:
0000000000050334	sub	sp, sp, #0x50
0000000000050338	stp	x22, x21, [sp, #0x20]
000000000005033c	stp	x20, x19, [sp, #0x30]
0000000000050340	stp	x29, x30, [sp, #0x40]
0000000000050344	add	x29, sp, #0x40
0000000000050348	mov	x20, x2
000000000005034c	bl	0x51ba8 ; symbol stub for: _objc_retain
0000000000050350	mov	x19, x0
0000000000050354	bl	_Kotlin_initRuntimeIfNeeded
0000000000050358	str	xzr, [sp, #0x8]
000000000005035c	adrp	x21, 28 ; 0x6c000
0000000000050360	add	x21, x21, #0xbb0
0000000000050364	ldr	x22, [x21]
0000000000050368	mov	x0, x21
000000000005036c	blr	x22
0000000000050370	ldr	x8, [x0]
0000000000050374	ldr	x9, [x8, #0x110]
0000000000050378	add	x10, sp, #0x8
000000000005037c	str	x10, [x8, #0x110]
0000000000050380	mov	x8, #0x300000000
0000000000050384	stp	x9, x8, [sp, #0x10]
0000000000050388	adr	x8, #0x366bb
000000000005038c	nop
0000000000050390	ldarb	w8, [x8]
0000000000050394	tbz	w8, #0x0, 0x5039c
0000000000050398	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000005039c	mov	x0, x21
00000000000503a0	blr	x22
00000000000503a4	mov	x22, x0
00000000000503a8	ldr	x8, [x0]
00000000000503ac	ldr	x8, [x8, #0x118]
00000000000503b0	add	x0, x8, #0x70
00000000000503b4	mov	w1, #0x18
00000000000503b8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000503bc	mov	x21, x0
00000000000503c0	adr	x8, #0xa1c0
00000000000503c4	nop
00000000000503c8	str	x8, [x21, #0x10]!
00000000000503cc	stur	xzr, [x21, #-0x8]
00000000000503d0	str	x21, [x20]
00000000000503d4	ldr	x8, [x22]
00000000000503d8	ldr	x9, [sp, #0x10]
00000000000503dc	str	x9, [x8, #0x110]
00000000000503e0	ldar	x8, [x21]
00000000000503e4	and	x8, x8, #0xfffffffffffffffc
00000000000503e8	ldr	x9, [x8]
00000000000503ec	cmp	x9, x8
00000000000503f0	csel	x0, xzr, x8, eq
00000000000503f4	cbnz	x0, 0x50400
00000000000503f8	mov	x0, x21
00000000000503fc	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000050400	add	x8, x0, #0x10
0000000000050404	stlr	x19, [x8]
0000000000050408	mov	x0, x21
000000000005040c	ldp	x29, x30, [sp, #0x40]
0000000000050410	ldp	x20, x19, [sp, #0x30]
0000000000050414	ldp	x22, x21, [sp, #0x20]
0000000000050418	add	sp, sp, #0x50
000000000005041c	ret
-[NSMutableArray(NSArrayToKotlin) releaseAsAssociatedObject:]:
0000000000050420	cmp	w2, #0x1
0000000000050424	b.hi	0x5042c
0000000000050428	b	0x51b9c ; symbol stub for: _objc_release
000000000005042c	ret
-[NSEnumerator(NSEnumeratorAsAssociatedObject) releaseAsAssociatedObject:]:
0000000000050430	cmp	w2, #0x1
0000000000050434	b.hi	0x5043c
0000000000050438	b	0x51b9c ; symbol stub for: _objc_release
000000000005043c	ret
-[NSDictionary(NSDictionaryToKotlin) toKotlin:]:
0000000000050440	sub	sp, sp, #0x50
0000000000050444	stp	x22, x21, [sp, #0x20]
0000000000050448	stp	x20, x19, [sp, #0x30]
000000000005044c	stp	x29, x30, [sp, #0x40]
0000000000050450	add	x29, sp, #0x40
0000000000050454	mov	x20, x2
0000000000050458	bl	0x51ba8 ; symbol stub for: _objc_retain
000000000005045c	mov	x19, x0
0000000000050460	bl	_Kotlin_initRuntimeIfNeeded
0000000000050464	str	xzr, [sp, #0x8]
0000000000050468	adrp	x21, 28 ; 0x6c000
000000000005046c	add	x21, x21, #0xbb0
0000000000050470	ldr	x22, [x21]
0000000000050474	mov	x0, x21
0000000000050478	blr	x22
000000000005047c	ldr	x8, [x0]
0000000000050480	ldr	x9, [x8, #0x110]
0000000000050484	add	x10, sp, #0x8
0000000000050488	str	x10, [x8, #0x110]
000000000005048c	mov	x8, #0x300000000
0000000000050490	stp	x9, x8, [sp, #0x10]
0000000000050494	adr	x8, #0x365af
0000000000050498	nop
000000000005049c	ldarb	w8, [x8]
00000000000504a0	tbz	w8, #0x0, 0x504a8
00000000000504a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000504a8	mov	x0, x21
00000000000504ac	blr	x22
00000000000504b0	mov	x22, x0
00000000000504b4	ldr	x8, [x0]
00000000000504b8	ldr	x8, [x8, #0x118]
00000000000504bc	add	x0, x8, #0x70
00000000000504c0	mov	w1, #0x10
00000000000504c4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000504c8	mov	x21, x0
00000000000504cc	adr	x8, #0xa2c4
00000000000504d0	nop
00000000000504d4	str	x8, [x21, #0x10]!
00000000000504d8	stur	xzr, [x21, #-0x8]
00000000000504dc	str	x21, [x20]
00000000000504e0	ldr	x8, [x22]
00000000000504e4	ldr	x9, [sp, #0x10]
00000000000504e8	str	x9, [x8, #0x110]
00000000000504ec	ldar	x8, [x21]
00000000000504f0	and	x8, x8, #0xfffffffffffffffc
00000000000504f4	ldr	x9, [x8]
00000000000504f8	cmp	x9, x8
00000000000504fc	csel	x0, xzr, x8, eq
0000000000050500	cbnz	x0, 0x5050c
0000000000050504	mov	x0, x21
0000000000050508	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000005050c	add	x8, x0, #0x10
0000000000050510	stlr	x19, [x8]
0000000000050514	mov	x0, x21
0000000000050518	ldp	x29, x30, [sp, #0x40]
000000000005051c	ldp	x20, x19, [sp, #0x30]
0000000000050520	ldp	x22, x21, [sp, #0x20]
0000000000050524	add	sp, sp, #0x50
0000000000050528	ret
-[NSDictionary(NSDictionaryToKotlin) releaseAsAssociatedObject:]:
000000000005052c	cmp	w2, #0x1
0000000000050530	b.hi	0x50538
0000000000050534	b	0x51b9c ; symbol stub for: _objc_release
0000000000050538	ret
-[NSArray(NSArrayToKotlin) toKotlin:]:
000000000005053c	sub	sp, sp, #0x50
0000000000050540	stp	x22, x21, [sp, #0x20]
0000000000050544	stp	x20, x19, [sp, #0x30]
0000000000050548	stp	x29, x30, [sp, #0x40]
000000000005054c	add	x29, sp, #0x40
0000000000050550	mov	x20, x2
0000000000050554	bl	0x51ba8 ; symbol stub for: _objc_retain
0000000000050558	mov	x19, x0
000000000005055c	bl	_Kotlin_initRuntimeIfNeeded
0000000000050560	str	xzr, [sp, #0x8]
0000000000050564	adrp	x21, 28 ; 0x6c000
0000000000050568	add	x21, x21, #0xbb0
000000000005056c	ldr	x22, [x21]
0000000000050570	mov	x0, x21
0000000000050574	blr	x22
0000000000050578	ldr	x8, [x0]
000000000005057c	ldr	x9, [x8, #0x110]
0000000000050580	add	x10, sp, #0x8
0000000000050584	str	x10, [x8, #0x110]
0000000000050588	mov	x8, #0x300000000
000000000005058c	stp	x9, x8, [sp, #0x10]
0000000000050590	adr	x8, #0x364b3
0000000000050594	nop
0000000000050598	ldarb	w8, [x8]
000000000005059c	tbz	w8, #0x0, 0x505a4
00000000000505a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000505a4	mov	x0, x21
00000000000505a8	blr	x22
00000000000505ac	mov	x22, x0
00000000000505b0	ldr	x8, [x0]
00000000000505b4	ldr	x8, [x8, #0x118]
00000000000505b8	add	x0, x8, #0x70
00000000000505bc	mov	w1, #0x10
00000000000505c0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000505c4	mov	x21, x0
00000000000505c8	adr	x8, #0x9ec8
00000000000505cc	nop
00000000000505d0	str	x8, [x21, #0x10]!
00000000000505d4	stur	xzr, [x21, #-0x8]
00000000000505d8	str	x21, [x20]
00000000000505dc	ldr	x8, [x22]
00000000000505e0	ldr	x9, [sp, #0x10]
00000000000505e4	str	x9, [x8, #0x110]
00000000000505e8	ldar	x8, [x21]
00000000000505ec	and	x8, x8, #0xfffffffffffffffc
00000000000505f0	ldr	x9, [x8]
00000000000505f4	cmp	x9, x8
00000000000505f8	csel	x0, xzr, x8, eq
00000000000505fc	cbnz	x0, 0x50608
0000000000050600	mov	x0, x21
0000000000050604	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000050608	add	x8, x0, #0x10
000000000005060c	stlr	x19, [x8]
0000000000050610	mov	x0, x21
0000000000050614	ldp	x29, x30, [sp, #0x40]
0000000000050618	ldp	x20, x19, [sp, #0x30]
000000000005061c	ldp	x22, x21, [sp, #0x20]
0000000000050620	add	sp, sp, #0x50
0000000000050624	ret
-[NSArray(NSArrayToKotlin) releaseAsAssociatedObject:]:
0000000000050628	cmp	w2, #0x1
000000000005062c	b.hi	0x50634
0000000000050630	b	0x51b9c ; symbol stub for: _objc_release
0000000000050634	ret
__ZL15injectToRuntimev:
0000000000050638	stp	x29, x30, [sp, #-0x10]!
000000000005063c	mov	x29, sp
0000000000050640	nop
0000000000050644	ldr	x8, #0x366a4
0000000000050648	cbnz	x8, 0x506b8
000000000005064c	adr	x8, #0x3669c
0000000000050650	nop
0000000000050654	adr	x9, #0x74
0000000000050658	nop
000000000005065c	str	x9, [x8]
0000000000050660	ldr	x8, [x8, #0x8]
0000000000050664	cbnz	x8, 0x506b8
0000000000050668	adr	x8, #0x36688
000000000005066c	nop
0000000000050670	adr	x9, #0x98
0000000000050674	nop
0000000000050678	str	x9, [x8]
000000000005067c	ldr	x8, [x8, #0x8]
0000000000050680	cbnz	x8, 0x506b8
0000000000050684	adr	x8, #0x36674
0000000000050688	nop
000000000005068c	adr	x9, #0x90
0000000000050690	nop
0000000000050694	str	x9, [x8]
0000000000050698	ldr	x8, [x8, #0x8]
000000000005069c	cbnz	x8, 0x506b8
00000000000506a0	adrp	x8, 54 ; 0x86000
00000000000506a4	adr	x9, #0x22c
00000000000506a8	nop
00000000000506ac	str	x9, [x8, #0xd00]
00000000000506b0	ldp	x29, x30, [sp], #0x10
00000000000506b4	ret
00000000000506b8	adr	x2, #0x6749 ; literal pool for: "runtime injected twice"
00000000000506bc	nop
00000000000506c0	mov	w0, #0x0
00000000000506c4	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
__ZL39Kotlin_Interop_createKotlinObjectHolderP9ObjHeader:
00000000000506c8	cbz	x0, 0x50704
00000000000506cc	stp	x20, x19, [sp, #-0x20]!
00000000000506d0	stp	x29, x30, [sp, #0x10]
00000000000506d4	add	x29, sp, #0x10
00000000000506d8	mov	x19, x0
00000000000506dc	nop
00000000000506e0	ldr	x0, #0x1a238 ; Objc class ref: NBKKotlinObjectHolder
00000000000506e4	bl	0x51b00 ; symbol stub for: _objc_alloc
00000000000506e8	nop
00000000000506ec	ldr	x1, #0x19fdc ; Objc selector ref: initWithRef:
00000000000506f0	mov	x2, x19
00000000000506f4	bl	0x51b78 ; Objc message: +[NBKKotlinObjectHolder initWithRef:]
00000000000506f8	ldp	x29, x30, [sp, #0x10]
00000000000506fc	ldp	x20, x19, [sp], #0x20
0000000000050700	b	0x51b18 ; symbol stub for: _objc_autorelease
0000000000050704	ret
__ZL39Kotlin_Interop_unwrapKotlinObjectHolderP11objc_object:
0000000000050708	cbz	x0, 0x50718
000000000005070c	nop
0000000000050710	ldr	x1, #0x1a098 ; Objc selector ref: ref
0000000000050714	b	0x51b78 ; Objc message: -[x0 ref]
0000000000050718	ret
__ZL34Konan_ObjCInterop_getWeakReferenceP9ObjHeaderPS0_:
000000000005071c	stp	x26, x25, [sp, #-0x50]!
0000000000050720	stp	x24, x23, [sp, #0x10]
0000000000050724	stp	x22, x21, [sp, #0x20]
0000000000050728	stp	x20, x19, [sp, #0x30]
000000000005072c	stp	x29, x30, [sp, #0x40]
0000000000050730	add	x29, sp, #0x40
0000000000050734	mov	x20, x1
0000000000050738	ldar	x8, [x0]
000000000005073c	and	x8, x8, #0xfffffffffffffffc
0000000000050740	ldr	x9, [x8]
0000000000050744	cmp	x8, #0x0
0000000000050748	ccmp	x9, x8, #0x4, ne
000000000005074c	b.ne	0x50758
0000000000050750	mov	x8, #0x0
0000000000050754	b	0x50760
0000000000050758	add	x8, x8, #0x10
000000000005075c	ldar	x8, [x8]
0000000000050760	add	x8, x8, #0x8
0000000000050764	adrp	x21, 28 ; 0x6c000
0000000000050768	add	x21, x21, #0xbb0
000000000005076c	ldr	x24, [x21]
0000000000050770	mov	x0, x21
0000000000050774	blr	x24
0000000000050778	ldr	x25, [x0]
000000000005077c	add	x19, x25, #0x138
0000000000050780	mov	w9, #0x1
0000000000050784	ldaxr	w23, [x19]
0000000000050788	stlxr	w10, w9, [x19]
000000000005078c	cbnz	w10, 0x50784
0000000000050790	mov	x0, x8
0000000000050794	bl	0x51b6c ; symbol stub for: _objc_loadWeakRetained
0000000000050798	mov	x22, x0
000000000005079c	cbz	x25, 0x507d0
00000000000507a0	ldaxr	w8, [x19]
00000000000507a4	stlxr	w9, w23, [x19]
00000000000507a8	cbnz	w9, 0x507a0
00000000000507ac	cbnz	w23, 0x507d0
00000000000507b0	cmp	w8, #0x1
00000000000507b4	b.ne	0x507d0
00000000000507b8	adr	x8, #0x3628b
00000000000507bc	nop
00000000000507c0	ldarb	w8, [x8]
00000000000507c4	tbz	w8, #0x0, 0x507d0
00000000000507c8	mov	x0, x19
00000000000507cc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000507d0	cbz	x22, 0x507f0
00000000000507d4	nop
00000000000507d8	ldr	x1, #0x364c0
00000000000507dc	mov	x0, x22
00000000000507e0	mov	x2, x20
00000000000507e4	bl	0x51b78 ; Objc message: -[x0 ref]
00000000000507e8	mov	x23, x0
00000000000507ec	b	0x507f8
00000000000507f0	mov	x23, #0x0
00000000000507f4	str	xzr, [x20]
00000000000507f8	mov	x0, x21
00000000000507fc	blr	x24
0000000000050800	ldr	x24, [x0]
0000000000050804	add	x19, x24, #0x138
0000000000050808	mov	w8, #0x1
000000000005080c	ldaxr	w21, [x19]
0000000000050810	stlxr	w9, w8, [x19]
0000000000050814	cbnz	w9, 0x5080c
0000000000050818	mov	x0, x22
000000000005081c	bl	0x51b9c ; symbol stub for: _objc_release
0000000000050820	cbz	x24, 0x50854
0000000000050824	ldaxr	w8, [x19]
0000000000050828	stlxr	w9, w21, [x19]
000000000005082c	cbnz	w9, 0x50824
0000000000050830	cbnz	w21, 0x50854
0000000000050834	cmp	w8, #0x1
0000000000050838	b.ne	0x50854
000000000005083c	adr	x8, #0x36207
0000000000050840	nop
0000000000050844	ldarb	w8, [x8]
0000000000050848	tbz	w8, #0x0, 0x50854
000000000005084c	mov	x0, x19
0000000000050850	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050854	mov	x0, x23
0000000000050858	ldp	x29, x30, [sp, #0x40]
000000000005085c	ldp	x20, x19, [sp, #0x30]
0000000000050860	ldp	x22, x21, [sp, #0x20]
0000000000050864	ldp	x24, x23, [sp, #0x10]
0000000000050868	ldp	x26, x25, [sp], #0x50
000000000005086c	ret
0000000000050870	bl	___clang_call_terminate
0000000000050874	mov	x20, x0
0000000000050878	cbz	x24, 0x508c8
000000000005087c	ldaxr	w8, [x19]
0000000000050880	stlxr	w9, w21, [x19]
0000000000050884	cbnz	w9, 0x5087c
0000000000050888	cbz	w21, 0x508a8
000000000005088c	b	0x508c8
0000000000050890	mov	x20, x0
0000000000050894	cbz	x25, 0x508c8
0000000000050898	ldaxr	w8, [x19]
000000000005089c	stlxr	w9, w23, [x19]
00000000000508a0	cbnz	w9, 0x50898
00000000000508a4	cbnz	w23, 0x508c8
00000000000508a8	cmp	w8, #0x1
00000000000508ac	b.ne	0x508c8
00000000000508b0	adr	x8, #0x36193
00000000000508b4	nop
00000000000508b8	ldarb	w8, [x8]
00000000000508bc	tbz	w8, #0x0, 0x508c8
00000000000508c0	mov	x0, x19
00000000000508c4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000508c8	mov	x0, x20
00000000000508cc	bl	0x517a0 ; symbol stub for: __Unwind_Resume
__ZL35Konan_ObjCInterop_initWeakReferenceP9ObjHeaderP11objc_object:
00000000000508d0	stp	x22, x21, [sp, #-0x30]!
00000000000508d4	stp	x20, x19, [sp, #0x10]
00000000000508d8	stp	x29, x30, [sp, #0x20]
00000000000508dc	add	x29, sp, #0x20
00000000000508e0	mov	x21, x1
00000000000508e4	mov	x19, x0
00000000000508e8	nop
00000000000508ec	ldr	x0, #0x1a034 ; Objc class ref: NBKKotlinObjCWeakReference
00000000000508f0	nop
00000000000508f4	ldr	x1, #0x19e54 ; Objc selector ref: new
00000000000508f8	bl	0x51b78 ; Objc message: +[NBKKotlinObjCWeakReference new]
00000000000508fc	mov	x20, x0
0000000000050900	add	x0, x0, #0x8
0000000000050904	mov	x1, x21
0000000000050908	bl	0x51bd8 ; symbol stub for: _objc_storeWeak
000000000005090c	ldar	x8, [x19]
0000000000050910	and	x8, x8, #0xfffffffffffffffc
0000000000050914	ldr	x9, [x8]
0000000000050918	cmp	x9, x8
000000000005091c	csel	x0, xzr, x8, eq
0000000000050920	cbz	x0, 0x5093c
0000000000050924	add	x8, x0, #0x10
0000000000050928	stlr	x20, [x8]
000000000005092c	ldp	x29, x30, [sp, #0x20]
0000000000050930	ldp	x20, x19, [sp, #0x10]
0000000000050934	ldp	x22, x21, [sp], #0x30
0000000000050938	ret
000000000005093c	mov	x0, x19
0000000000050940	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000050944	add	x8, x0, #0x10
0000000000050948	stlr	x20, [x8]
000000000005094c	ldp	x29, x30, [sp, #0x20]
0000000000050950	ldp	x20, x19, [sp, #0x10]
0000000000050954	ldp	x22, x21, [sp], #0x30
0000000000050958	ret
_Kotlin_Interop_CreateRetainedNSArrayFromKList:
000000000005095c	mov	x2, x0
0000000000050960	nop
0000000000050964	ldr	x0, #0x19f7c ; Objc class ref: NBKKListAsNSArray
0000000000050968	nop
000000000005096c	ldr	x1, #0x19c8c ; Objc selector ref: createRetainedWithKList:
0000000000050970	b	0x51b78 ; Objc message: +[NBKKListAsNSArray createRetainedWithKList:]
_Kotlin_Interop_CreateRetainedNSMutableArrayFromKList:
0000000000050974	mov	x2, x0
0000000000050978	nop
000000000005097c	ldr	x0, #0x19f6c ; Objc class ref: NBKKMutableListAsNSMutableArray
0000000000050980	nop
0000000000050984	ldr	x1, #0x19c74 ; Objc selector ref: createRetainedWithKList:
0000000000050988	b	0x51b78 ; Objc message: +[NBKKMutableListAsNSMutableArray createRetainedWithKList:]
_Kotlin_Interop_CreateRetainedNSSetFromKSet:
000000000005098c	mov	x2, x0
0000000000050990	nop
0000000000050994	ldr	x0, #0x19f5c ; Objc class ref: NBKKSetAsNSSet
0000000000050998	nop
000000000005099c	ldr	x1, #0x19c6c ; Objc selector ref: createRetainedWithKSet:
00000000000509a0	b	0x51b78 ; Objc message: +[NBKKSetAsNSSet createRetainedWithKSet:]
_Kotlin_Interop_CreateRetainedKotlinMutableSetFromKSet:
00000000000509a4	stp	x20, x19, [sp, #-0x20]!
00000000000509a8	stp	x29, x30, [sp, #0x10]
00000000000509ac	add	x29, sp, #0x10
00000000000509b0	mov	x19, x0
00000000000509b4	nop
00000000000509b8	ldr	x0, #0x19f48 ; Objc class ref: NBKMutableSet
00000000000509bc	bl	0x51b00 ; symbol stub for: _objc_alloc
00000000000509c0	nop
00000000000509c4	ldr	x1, #0x19cf4 ; Objc selector ref: initWithKSet:
00000000000509c8	mov	x2, x19
00000000000509cc	ldp	x29, x30, [sp, #0x10]
00000000000509d0	ldp	x20, x19, [sp], #0x20
00000000000509d4	b	0x51b78 ; Objc message: +[NBKMutableSet initWithKSet:]
_Kotlin_Interop_CreateRetainedNSDictionaryFromKMap:
00000000000509d8	mov	x2, x0
00000000000509dc	nop
00000000000509e0	ldr	x0, #0x19f18 ; Objc class ref: NBKKMapAsNSDictionary
00000000000509e4	nop
00000000000509e8	ldr	x1, #0x19c18 ; Objc selector ref: createRetainedWithKMap:
00000000000509ec	b	0x51b78 ; Objc message: +[NBKKMapAsNSDictionary createRetainedWithKMap:]
_Kotlin_Interop_CreateRetainedKotlinMutableDictionaryFromKMap:
00000000000509f0	stp	x20, x19, [sp, #-0x20]!
00000000000509f4	stp	x29, x30, [sp, #0x10]
00000000000509f8	add	x29, sp, #0x10
00000000000509fc	mov	x19, x0
0000000000050a00	nop
0000000000050a04	ldr	x0, #0x19f04 ; Objc class ref: NBKMutableDictionary
0000000000050a08	bl	0x51b00 ; symbol stub for: _objc_alloc
0000000000050a0c	nop
0000000000050a10	ldr	x1, #0x19ca0 ; Objc selector ref: initWithKMap:
0000000000050a14	mov	x2, x19
0000000000050a18	ldp	x29, x30, [sp, #0x10]
0000000000050a1c	ldp	x20, x19, [sp], #0x20
0000000000050a20	b	0x51b78 ; Objc message: +[NBKMutableDictionary initWithKMap:]
_OUTLINED_FUNCTION_0:
0000000000050a24	ldr	x0, [x0]
0000000000050a28	b	0x51a64 ; symbol stub for: _free
__GLOBAL__sub_I_CallsChecker.cpp:
0000000000050a2c	stp	x22, x21, [sp, #-0x30]!
0000000000050a30	stp	x20, x19, [sp, #0x10]
0000000000050a34	stp	x29, x30, [sp, #0x20]
0000000000050a38	add	x29, sp, #0x20
0000000000050a3c	adr	x8, #0x1d0a4
0000000000050a40	nop
0000000000050a44	movi.16b	v0, #0x0
0000000000050a48	stp	q0, q0, [x8]
0000000000050a4c	mov	w9, #0x3f800000
0000000000050a50	str	w9, [x8, #0x20]
0000000000050a54	add	x19, x8, #0x28
0000000000050a58	mov	x0, x19
0000000000050a5c	mov	w1, #0xec0
0000000000050a60	bl	0x519d4 ; symbol stub for: _bzero
0000000000050a64	mov	x21, #0x0
0000000000050a68	adr	x22, #0x15aa8
0000000000050a6c	nop
0000000000050a70	ldr	x20, [x22, x21]
0000000000050a74	mov	x0, x20
0000000000050a78	bl	0x51d34 ; symbol stub for: _strlen
0000000000050a7c	stp	x20, x0, [x19], #0x10
0000000000050a80	add	x21, x21, #0x8
0000000000050a84	cmp	x21, #0x760
0000000000050a88	b.ne	0x50a70
0000000000050a8c	adr	x0, #0x1d07c
0000000000050a90	nop
0000000000050a94	add	x1, x0, #0xec0
0000000000050a98	ldp	x29, x30, [sp, #0x20]
0000000000050a9c	ldp	x20, x19, [sp, #0x10]
0000000000050aa0	ldp	x22, x21, [sp], #0x30
0000000000050aa4	b	__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_
__GLOBAL__sub_I_GlobalData.cpp:
0000000000050aa8	sub	sp, sp, #0x120
0000000000050aac	stp	x28, x27, [sp, #0xc0]
0000000000050ab0	stp	x26, x25, [sp, #0xd0]
0000000000050ab4	stp	x24, x23, [sp, #0xe0]
0000000000050ab8	stp	x22, x21, [sp, #0xf0]
0000000000050abc	stp	x20, x19, [sp, #0x100]
0000000000050ac0	stp	x29, x30, [sp, #0x110]
0000000000050ac4	add	x29, sp, #0x110
0000000000050ac8	adr	x8, #0x36268
0000000000050acc	nop
0000000000050ad0	stp	xzr, xzr, [x8]
0000000000050ad4	add	x0, x8, #0x10
0000000000050ad8	bl	0x51824 ; symbol stub for: __ZNSt3__115recursive_mutexC1Ev
0000000000050adc	adr	x25, #0x362a4
0000000000050ae0	nop
0000000000050ae4	str	wzr, [x25]
0000000000050ae8	mov	w24, #0xb1bb
0000000000050aec	movk	w24, #0x3cb0, lsl #16
0000000000050af0	mov	w23, #0xaba7
0000000000050af4	movk	w23, #0x32aa, lsl #16
0000000000050af8	add	x8, x25, #0x10
0000000000050afc	stp	xzr, x8, [x25, #0x8]
0000000000050b00	stp	x8, xzr, [x25, #0x18]
0000000000050b04	add	x8, x25, #0x28
0000000000050b08	stp	x8, x8, [x25, #0x28]
0000000000050b0c	str	xzr, [x25, #0x38]
0000000000050b10	strb	wzr, [x25, #0x40]
0000000000050b14	add	x8, x25, #0x48
0000000000050b18	stp	x8, x8, [x25, #0x48]
0000000000050b1c	add	x8, x25, #0x60
0000000000050b20	stp	xzr, x8, [x25, #0x58]
0000000000050b24	stp	x8, xzr, [x25, #0x68]
0000000000050b28	strb	wzr, [x25, #0x78]
0000000000050b2c	add	x8, x25, #0x80
0000000000050b30	stp	x8, x8, [x25, #0x80]
0000000000050b34	add	x8, x25, #0x98
0000000000050b38	stp	xzr, x8, [x25, #0x90]
0000000000050b3c	stp	x8, xzr, [x25, #0xa0]
0000000000050b40	strb	wzr, [x25, #0xb0]
0000000000050b44	mov	w19, #0x1
0000000000050b48	mov	w0, #0x1
0000000000050b4c	mov	w1, #0x238
0000000000050b50	bl	0x519e0 ; symbol stub for: _calloc
0000000000050b54	mov	x20, x0
0000000000050b58	str	xzr, [x0, #0x10]
0000000000050b5c	movi.16b	v0, #0x0
0000000000050b60	stur	q0, [x0, #0x18]
0000000000050b64	mov	w8, #0x86a0
0000000000050b68	movk	w8, #0x1, lsl #16
0000000000050b6c	mov	x9, x0
0000000000050b70	str	w8, [x9, #0x30]!
0000000000050b74	add	x8, x0, #0x8
0000000000050b78	strb	wzr, [x0, #0x28]
0000000000050b7c	mov	w10, #0x2800
0000000000050b80	str	x10, [x0, #0x38]
0000000000050b84	strb	w19, [x0, #0x40]
0000000000050b88	nop
0000000000050b8c	ldr	q0, 0x524c0
0000000000050b90	stur	q0, [x0, #0x48]
0000000000050b94	mov	x10, #0x3fe0000000000000
0000000000050b98	str	x10, [x0, #0x58]
0000000000050b9c	nop
0000000000050ba0	ldr	q0, 0x524d0
0000000000050ba4	str	q0, [x0, #0x60]
0000000000050ba8	mov	x28, x0
0000000000050bac	str	x8, [x28, #0x98]!
0000000000050bb0	str	x9, [x0, #0xa0]
0000000000050bb4	add	x27, x0, #0xb0
0000000000050bb8	nop
0000000000050bbc	ldr	q0, 0x524e0
0000000000050bc0	stur	q0, [x0, #0xa8]
0000000000050bc4	movi.16b	v0, #0x0
0000000000050bc8	stur	q0, [x0, #0xb8]
0000000000050bcc	stur	q0, [x0, #0xc8]
0000000000050bd0	stur	q0, [x0, #0xd8]
0000000000050bd4	stur	q0, [x0, #0xe8]
0000000000050bd8	stp	x27, x24, [x0, #0xf8]
0000000000050bdc	add	x8, x0, #0x108
0000000000050be0	stp	q0, q0, [x8]
0000000000050be4	str	q0, [x8, #0x20]
0000000000050be8	stp	x27, x24, [x0, #0x138]
0000000000050bec	add	x8, x0, #0x148
0000000000050bf0	stp	q0, q0, [x8]
0000000000050bf4	str	q0, [x8, #0x20]
0000000000050bf8	stp	x27, x24, [x0, #0x178]
0000000000050bfc	add	x8, x0, #0x188
0000000000050c00	stp	q0, q0, [x8, #0x10]
0000000000050c04	str	q0, [x8]
0000000000050c08	stp	x27, x24, [x0, #0x1b8]
0000000000050c0c	add	x8, x0, #0x1c8
0000000000050c10	stp	q0, q0, [x8]
0000000000050c14	stur	q0, [x8, #0x19]
0000000000050c18	mov	w0, #0x1
0000000000050c1c	mov	w1, #0x180
0000000000050c20	bl	0x519e0 ; symbol stub for: _calloc
0000000000050c24	str	xzr, [x0, #0x10]
0000000000050c28	movi.16b	v0, #0x0
0000000000050c2c	stur	q0, [x0, #0x18]
0000000000050c30	str	x24, [x0, #0x28]
0000000000050c34	stp	q0, q0, [x0, #0x30]
0000000000050c38	stp	xzr, x23, [x0, #0x50]
0000000000050c3c	stp	q0, q0, [x0, #0x60]
0000000000050c40	str	q0, [x0, #0x80]
0000000000050c44	str	xzr, [x0, #0x90]
0000000000050c48	adr	x8, #0x16110
0000000000050c4c	nop
0000000000050c50	mov	x9, x0
0000000000050c54	str	x8, [x9, #0x98]!
0000000000050c58	str	x9, [x0, #0xb0]
0000000000050c5c	str	x28, [x0, #0xa0]
0000000000050c60	strb	w19, [x0, #0xc1]
0000000000050c64	str	x23, [x0, #0xc8]
0000000000050c68	stp	q0, q0, [x0, #0xe0]
0000000000050c6c	str	q0, [x0, #0xd0]
0000000000050c70	stp	xzr, x24, [x0, #0x100]
0000000000050c74	add	x8, x0, #0x110
0000000000050c78	stp	q0, q0, [x0, #0x110]
0000000000050c7c	stur	q0, [x8, #0x19]
0000000000050c80	str	x23, [x0, #0x140]
0000000000050c84	add	x8, x0, #0x148
0000000000050c88	stp	q0, q0, [x8]
0000000000050c8c	str	q0, [x8, #0x20]
0000000000050c90	str	xzr, [x8, #0x30]
0000000000050c94	str	x0, [x20, #0x200]
0000000000050c98	add	x8, x20, #0x208
0000000000050c9c	str	q0, [x8]
0000000000050ca0	movi.16b	v0, #0x0
0000000000050ca4	ldr	x8, [x20, #0x208]
0000000000050ca8	and	x8, x8, #0x1
0000000000050cac	str	x8, [x20, #0x208]
0000000000050cb0	add	x8, x20, #0x218
0000000000050cb4	str	xzr, [x8, #0x10]
0000000000050cb8	str	q0, [x8]
0000000000050cbc	ldr	x19, [x20, #0xa0]
0000000000050cc0	adr	x8, #0x160f0
0000000000050cc4	nop
0000000000050cc8	stp	x8, x28, [sp, #0x10]
0000000000050ccc	add	x8, sp, #0x10
0000000000050cd0	str	x8, [sp, #0x28]
0000000000050cd4	add	x21, x19, #0x48
0000000000050cd8	ldr	x0, [x19, #0x60]
0000000000050cdc	str	xzr, [x19, #0x60]
0000000000050ce0	cmp	x21, x0
0000000000050ce4	b.eq	0x50cf8
0000000000050ce8	cbz	x0, 0x50d04
0000000000050cec	ldr	x8, [x0]
0000000000050cf0	ldr	x8, [x8, #0x28]
0000000000050cf4	b	0x50d00
0000000000050cf8	ldr	x8, [x0]
0000000000050cfc	ldr	x8, [x8, #0x20]
0000000000050d00	blr	x8
0000000000050d04	ldr	x0, [sp, #0x28]
0000000000050d08	cbz	x0, 0x50d24
0000000000050d0c	add	x8, sp, #0x10
0000000000050d10	cmp	x8, x0
0000000000050d14	b.eq	0x50d5c
0000000000050d18	str	x0, [x19, #0x60]
0000000000050d1c	str	xzr, [sp, #0x28]
0000000000050d20	b	0x50d78
0000000000050d24	str	xzr, [x19, #0x60]
0000000000050d28	mov	x22, #0x0
0000000000050d2c	str	xzr, [sp, #0x48]
0000000000050d30	mov	w0, #0x1
0000000000050d34	mov	w1, #0xf8
0000000000050d38	bl	0x519e0 ; symbol stub for: _calloc
0000000000050d3c	mov	x21, x0
0000000000050d40	cbz	x22, 0x50dac
0000000000050d44	add	x8, sp, #0x30
0000000000050d48	cmp	x8, x22
0000000000050d4c	b.eq	0x50dbc
0000000000050d50	add	x8, x8, #0x18
0000000000050d54	str	x22, [sp, #0x68]
0000000000050d58	b	0x50db4
0000000000050d5c	str	x21, [x19, #0x60]
0000000000050d60	ldr	x8, [x0]
0000000000050d64	ldr	x8, [x8, #0x18]
0000000000050d68	mov	x1, x21
0000000000050d6c	blr	x8
0000000000050d70	ldr	x0, [x19, #0x60]
0000000000050d74	cbz	x0, 0x50d28
0000000000050d78	add	x8, sp, #0x30
0000000000050d7c	cmp	x21, x0
0000000000050d80	b.eq	0x50f40
0000000000050d84	ldr	x8, [x0]
0000000000050d88	ldr	x8, [x8, #0x10]
0000000000050d8c	blr	x8
0000000000050d90	mov	x22, x0
0000000000050d94	str	x0, [sp, #0x48]
0000000000050d98	mov	w0, #0x1
0000000000050d9c	mov	w1, #0xf8
0000000000050da0	bl	0x519e0 ; symbol stub for: _calloc
0000000000050da4	mov	x21, x0
0000000000050da8	cbnz	x22, 0x50d44
0000000000050dac	add	x8, sp, #0x50
0000000000050db0	add	x8, x8, #0x18
0000000000050db4	str	xzr, [x8]
0000000000050db8	b	0x50dd8
0000000000050dbc	add	x8, sp, #0x50
0000000000050dc0	str	x8, [sp, #0x68]
0000000000050dc4	ldr	x8, [x22]
0000000000050dc8	ldr	x8, [x8, #0x18]
0000000000050dcc	add	x1, sp, #0x50
0000000000050dd0	mov	x0, x22
0000000000050dd4	blr	x8
0000000000050dd8	adr	x8, #0x156e8
0000000000050ddc	nop
0000000000050de0	stp	x8, x19, [x21]
0000000000050de4	stp	x25, x19, [x21, #0x10]
0000000000050de8	stp	xzr, xzr, [x21, #0x20]
0000000000050dec	str	x19, [x21, #0x30]
0000000000050df0	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000050df4	str	x0, [x21, #0x38]
0000000000050df8	ldr	x0, [sp, #0x68]
0000000000050dfc	cbz	x0, 0x50e18
0000000000050e00	add	x8, sp, #0x50
0000000000050e04	cmp	x8, x0
0000000000050e08	b.eq	0x50e24
0000000000050e0c	add	x8, x8, #0x18
0000000000050e10	str	x0, [x21, #0x58]
0000000000050e14	b	0x50e1c
0000000000050e18	add	x8, x21, #0x58
0000000000050e1c	str	xzr, [x8]
0000000000050e20	b	0x50e38
0000000000050e24	add	x1, x21, #0x40
0000000000050e28	str	x1, [x21, #0x58]
0000000000050e2c	ldr	x8, [x0]
0000000000050e30	ldr	x8, [x8, #0x18]
0000000000050e34	blr	x8
0000000000050e38	ldr	x8, [x21, #0x8]
0000000000050e3c	add	x8, x8, #0x18
0000000000050e40	ldar	x8, [x8]
0000000000050e44	mov	x22, x21
0000000000050e48	str	x23, [x22, #0x60]!
0000000000050e4c	movi.16b	v0, #0x0
0000000000050e50	stur	q0, [x22, #0x8]
0000000000050e54	stur	q0, [x22, #0x18]
0000000000050e58	stur	q0, [x22, #0x28]
0000000000050e5c	str	xzr, [x22, #0x38]
0000000000050e60	mov	x23, x22
0000000000050e64	str	x24, [x23, #0x40]!
0000000000050e68	stur	q0, [x22, #0x48]
0000000000050e6c	stur	q0, [x22, #0x58]
0000000000050e70	str	xzr, [x22, #0x68]
0000000000050e74	mov	w9, #0x1
0000000000050e78	strb	w9, [x22, #0x70]
0000000000050e7c	mov	w9, #0x3e8
0000000000050e80	mul	x10, x8, x9
0000000000050e84	smulh	x9, x8, x9
0000000000050e88	cmp	x9, x10, asr #63
0000000000050e8c	asr	x8, x8, #63
0000000000050e90	eor	x8, x8, #0x7fffffffffffffff
0000000000050e94	csel	x8, x8, x10, ne
0000000000050e98	str	x8, [x22, #0x78]
0000000000050e9c	bl	0x5189c ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000050ea0	ldr	x8, [x22, #0x78]
0000000000050ea4	adds	x8, x0, x8
0000000000050ea8	asr	x9, x8, #63
0000000000050eac	eor	x9, x9, #0x8000000000000000
0000000000050eb0	csel	x8, x9, x8, vs
0000000000050eb4	str	x8, [x22, #0x80]
0000000000050eb8	strb	wzr, [x22, #0x88]
0000000000050ebc	movi.16b	v0, #0x0
0000000000050ec0	stp	q0, q0, [sp, #0x70]
0000000000050ec4	adr	x1, #0x4185 ; literal pool for: "GC Timer thread"
0000000000050ec8	nop
0000000000050ecc	add	x0, sp, #0x70
0000000000050ed0	mov	w2, #0xf
0000000000050ed4	bl	__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_
0000000000050ed8	mov	w0, #0x8
0000000000050edc	bl	0x51920 ; symbol stub for: __Znwm
0000000000050ee0	mov	x25, x0
0000000000050ee4	bl	0x517f4 ; symbol stub for: __ZNSt3__115__thread_structC1Ev
0000000000050ee8	mov	w0, #0x50
0000000000050eec	bl	0x51920 ; symbol stub for: __Znwm
0000000000050ef0	mov	x24, x0
0000000000050ef4	sturb	wzr, [x29, #-0x80]
0000000000050ef8	sturb	wzr, [x29, #-0x68]
0000000000050efc	ldrb	w8, [sp, #0x88]
0000000000050f00	cbz	w8, 0x50f20
0000000000050f04	ldrsb	w8, [sp, #0x87]
0000000000050f08	tbnz	w8, #0x1f, 0x50f28
0000000000050f0c	ldr	q0, [sp, #0x70]
0000000000050f10	stur	q0, [x29, #-0x80]
0000000000050f14	ldr	x8, [sp, #0x80]
0000000000050f18	stur	x8, [x29, #-0x70]
0000000000050f1c	b	0x50fa8
0000000000050f20	mov	w8, #0x1
0000000000050f24	b	0x50fb4
0000000000050f28	ldp	x1, x26, [sp, #0x70]
0000000000050f2c	cmp	x26, #0x16
0000000000050f30	b.hi	0x50f70
0000000000050f34	sub	x0, x29, #0x80
0000000000050f38	sturb	w26, [x29, #-0x69]
0000000000050f3c	b	0x50fa0
0000000000050f40	str	x8, [sp, #0x48]
0000000000050f44	ldr	x8, [x0]
0000000000050f48	ldr	x8, [x8, #0x18]
0000000000050f4c	add	x1, sp, #0x30
0000000000050f50	blr	x8
0000000000050f54	ldr	x22, [sp, #0x48]
0000000000050f58	mov	w0, #0x1
0000000000050f5c	mov	w1, #0xf8
0000000000050f60	bl	0x519e0 ; symbol stub for: _calloc
0000000000050f64	mov	x21, x0
0000000000050f68	cbnz	x22, 0x50d44
0000000000050f6c	b	0x50dac
0000000000050f70	stp	x1, x27, [sp]
0000000000050f74	cmn	x26, #0x10
0000000000050f78	b.hs	0x5128c
0000000000050f7c	add	x8, x26, #0x10
0000000000050f80	and	x27, x8, #0xfffffffffffffff0
0000000000050f84	mov	x0, x27
0000000000050f88	mov	w1, #0x1
0000000000050f8c	bl	0x519e0 ; symbol stub for: _calloc
0000000000050f90	orr	x8, x27, #0x8000000000000000
0000000000050f94	stp	x26, x8, [x29, #-0x78]
0000000000050f98	stur	x0, [x29, #-0x80]
0000000000050f9c	ldp	x1, x27, [sp]
0000000000050fa0	add	x2, x26, #0x1
0000000000050fa4	bl	0x51aac ; symbol stub for: _memcpy
0000000000050fa8	mov	w8, #0x0
0000000000050fac	mov	w9, #0x1
0000000000050fb0	sturb	w9, [x29, #-0x68]
0000000000050fb4	add	x0, x21, #0xf0
0000000000050fb8	adr	x9, #-0x261d0
0000000000050fbc	nop
0000000000050fc0	stp	x25, x9, [x24]
0000000000050fc4	mov	x25, x24
0000000000050fc8	strb	wzr, [x25, #0x10]!
0000000000050fcc	strb	wzr, [x24, #0x28]
0000000000050fd0	tbnz	w8, #0x0, 0x50ff4
0000000000050fd4	ldur	q0, [x29, #-0x80]
0000000000050fd8	str	q0, [x25]
0000000000050fdc	ldur	x8, [x29, #-0x70]
0000000000050fe0	str	x8, [x25, #0x10]
0000000000050fe4	stp	xzr, xzr, [x29, #-0x78]
0000000000050fe8	stur	xzr, [x29, #-0x80]
0000000000050fec	mov	w8, #0x1
0000000000050ff0	strb	w8, [x24, #0x28]
0000000000050ff4	adr	x8, #-0x264dc
0000000000050ff8	nop
0000000000050ffc	movi.16b	v0, #0x0
0000000000051000	mov.d	v0[0], x8
0000000000051004	str	q0, [x24, #0x30]
0000000000051008	stp	x22, x21, [x24, #0x40]
000000000005100c	adr	x2, #-0x261c0
0000000000051010	nop
0000000000051014	mov	x1, #0x0
0000000000051018	mov	x3, x24
000000000005101c	bl	0x51c38 ; symbol stub for: _pthread_create
0000000000051020	cbnz	w0, 0x51268
0000000000051024	ldrb	w8, [sp, #0x88]
0000000000051028	cbz	w8, 0x5103c
000000000005102c	ldrsb	w8, [sp, #0x87]
0000000000051030	tbz	w8, #0x1f, 0x5103c
0000000000051034	ldr	x0, [sp, #0x70]
0000000000051038	bl	0x51a64 ; symbol stub for: _free
000000000005103c	ldr	x0, [sp, #0x68]
0000000000051040	add	x8, sp, #0x50
0000000000051044	cmp	x8, x0
0000000000051048	b.eq	0x5105c
000000000005104c	cbz	x0, 0x51068
0000000000051050	ldr	x8, [x0]
0000000000051054	ldr	x8, [x8, #0x28]
0000000000051058	b	0x51064
000000000005105c	ldr	x8, [x0]
0000000000051060	ldr	x8, [x8, #0x20]
0000000000051064	blr	x8
0000000000051068	ldr	x22, [x19, #0x40]
000000000005106c	str	x21, [x19, #0x40]
0000000000051070	cbz	x22, 0x5108c
0000000000051074	ldr	x8, [x22]
0000000000051078	ldr	x8, [x8]
000000000005107c	mov	x0, x22
0000000000051080	blr	x8
0000000000051084	mov	x0, x22
0000000000051088	bl	0x51a64 ; symbol stub for: _free
000000000005108c	ldr	x0, [sp, #0x48]
0000000000051090	add	x8, sp, #0x30
0000000000051094	cmp	x8, x0
0000000000051098	b.eq	0x510ac
000000000005109c	cbz	x0, 0x510b8
00000000000510a0	ldr	x8, [x0]
00000000000510a4	ldr	x8, [x8, #0x28]
00000000000510a8	b	0x510b4
00000000000510ac	ldr	x8, [x0]
00000000000510b0	ldr	x8, [x8, #0x20]
00000000000510b4	blr	x8
00000000000510b8	ldr	x0, [sp, #0x28]
00000000000510bc	add	x8, sp, #0x10
00000000000510c0	cmp	x8, x0
00000000000510c4	b.eq	0x510d8
00000000000510c8	cbz	x0, 0x510e4
00000000000510cc	ldr	x8, [x0]
00000000000510d0	ldr	x8, [x8, #0x28]
00000000000510d4	b	0x510e0
00000000000510d8	ldr	x8, [x0]
00000000000510dc	ldr	x8, [x8, #0x20]
00000000000510e0	blr	x8
00000000000510e4	movi.16b	v0, #0x0
00000000000510e8	stp	q0, q0, [sp, #0x70]
00000000000510ec	adr	x1, #0x4fe4 ; literal pool for: "GC thread"
00000000000510f0	nop
00000000000510f4	add	x0, sp, #0x70
00000000000510f8	mov	w2, #0x9
00000000000510fc	bl	__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_
0000000000051100	add	x21, x20, #0x1f8
0000000000051104	mov	w0, #0x8
0000000000051108	bl	0x51920 ; symbol stub for: __Znwm
000000000005110c	mov	x24, x0
0000000000051110	bl	0x517f4 ; symbol stub for: __ZNSt3__115__thread_structC1Ev
0000000000051114	mov	w0, #0x38
0000000000051118	bl	0x51920 ; symbol stub for: __Znwm
000000000005111c	mov	x23, x0
0000000000051120	sturb	wzr, [x29, #-0x80]
0000000000051124	sturb	wzr, [x29, #-0x68]
0000000000051128	ldrb	w8, [sp, #0x88]
000000000005112c	cbz	w8, 0x5114c
0000000000051130	ldrsb	w8, [sp, #0x87]
0000000000051134	tbnz	w8, #0x1f, 0x51154
0000000000051138	ldr	q0, [sp, #0x70]
000000000005113c	stur	q0, [x29, #-0x80]
0000000000051140	ldr	x8, [sp, #0x80]
0000000000051144	stur	x8, [x29, #-0x70]
0000000000051148	b	0x511a0
000000000005114c	mov	w8, #0x1
0000000000051150	b	0x511ac
0000000000051154	ldp	x22, x19, [sp, #0x70]
0000000000051158	cmp	x19, #0x16
000000000005115c	b.hi	0x5116c
0000000000051160	sub	x0, x29, #0x80
0000000000051164	sturb	w19, [x29, #-0x69]
0000000000051168	b	0x51194
000000000005116c	cmn	x19, #0x10
0000000000051170	b.hs	0x51298
0000000000051174	add	x8, x19, #0x10
0000000000051178	and	x25, x8, #0xfffffffffffffff0
000000000005117c	mov	x0, x25
0000000000051180	mov	w1, #0x1
0000000000051184	bl	0x519e0 ; symbol stub for: _calloc
0000000000051188	orr	x8, x25, #0x8000000000000000
000000000005118c	stp	x19, x8, [x29, #-0x78]
0000000000051190	stur	x0, [x29, #-0x80]
0000000000051194	add	x2, x19, #0x1
0000000000051198	mov	x1, x22
000000000005119c	bl	0x51aac ; symbol stub for: _memcpy
00000000000511a0	mov	w8, #0x0
00000000000511a4	mov	w9, #0x1
00000000000511a8	sturb	w9, [x29, #-0x68]
00000000000511ac	adr	x9, #-0x22b28
00000000000511b0	nop
00000000000511b4	stp	x24, x9, [x23]
00000000000511b8	mov	x19, x23
00000000000511bc	strb	wzr, [x19, #0x10]!
00000000000511c0	strb	wzr, [x23, #0x28]
00000000000511c4	tbnz	w8, #0x0, 0x511e8
00000000000511c8	ldur	q0, [x29, #-0x80]
00000000000511cc	str	q0, [x19]
00000000000511d0	ldur	x8, [x29, #-0x70]
00000000000511d4	str	x8, [x19, #0x10]
00000000000511d8	stp	xzr, xzr, [x29, #-0x78]
00000000000511dc	stur	xzr, [x29, #-0x80]
00000000000511e0	mov	w8, #0x1
00000000000511e4	strb	w8, [x23, #0x28]
00000000000511e8	str	x28, [x23, #0x30]
00000000000511ec	adr	x2, #-0x22018
00000000000511f0	nop
00000000000511f4	add	x0, sp, #0x50
00000000000511f8	mov	x1, #0x0
00000000000511fc	mov	x3, x23
0000000000051200	bl	0x51c38 ; symbol stub for: _pthread_create
0000000000051204	cbnz	w0, 0x51278
0000000000051208	ldr	x8, [x21]
000000000005120c	cbnz	x8, 0x51288
0000000000051210	ldr	x8, [sp, #0x50]
0000000000051214	str	x8, [x21]
0000000000051218	str	xzr, [sp, #0x50]
000000000005121c	add	x0, sp, #0x50
0000000000051220	bl	0x518c0 ; symbol stub for: __ZNSt3__16threadD1Ev
0000000000051224	ldrb	w8, [sp, #0x88]
0000000000051228	cbz	w8, 0x5123c
000000000005122c	ldrsb	w8, [sp, #0x87]
0000000000051230	tbz	w8, #0x1f, 0x5123c
0000000000051234	ldr	x0, [sp, #0x70]
0000000000051238	bl	0x51a64 ; symbol stub for: _free
000000000005123c	str	wzr, [x20, #0x230]
0000000000051240	adrp	x8, 53 ; 0x86000
0000000000051244	str	x20, [x8, #0xe38]
0000000000051248	ldp	x29, x30, [sp, #0x110]
000000000005124c	ldp	x20, x19, [sp, #0x100]
0000000000051250	ldp	x22, x21, [sp, #0xf0]
0000000000051254	ldp	x24, x23, [sp, #0xe0]
0000000000051258	ldp	x26, x25, [sp, #0xd0]
000000000005125c	ldp	x28, x27, [sp, #0xc0]
0000000000051260	add	sp, sp, #0x120
0000000000051264	ret
0000000000051268	adr	x1, #0x4e89 ; literal pool for: "thread constructor failed"
000000000005126c	nop
0000000000051270	bl	0x5186c ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000051274	b	0x512a0
0000000000051278	adr	x1, #0x4e79 ; literal pool for: "thread constructor failed"
000000000005127c	nop
0000000000051280	bl	0x5186c ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000051284	b	0x512a0
0000000000051288	bl	0x51908 ; symbol stub for: __ZSt9terminatev
000000000005128c	sub	x0, x29, #0x80
0000000000051290	bl	0x517b8 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
0000000000051294	b	0x512a0
0000000000051298	sub	x0, x29, #0x80
000000000005129c	bl	0x517b8 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
00000000000512a0	brk	#0x1
00000000000512a4	mov	x19, x0
00000000000512a8	ldurb	w8, [x29, #-0x68]
00000000000512ac	cbz	w8, 0x512d4
00000000000512b0	sub	x0, x29, #0x80
00000000000512b4	bl	__ZN6kotlin2gc22ConcurrentMarkAndSweepC2ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerE.cold.1
00000000000512b8	mov	x0, x19
00000000000512bc	bl	___clang_call_terminate
00000000000512c0	mov	x19, x0
00000000000512c4	ldurb	w8, [x29, #-0x68]
00000000000512c8	cbz	w8, 0x512d4
00000000000512cc	sub	x0, x29, #0x80
00000000000512d0	bl	__ZNSt3__16threadC2IPFvN6kotlin12ScopedThread10attributesEOMNS2_13RepeatedTimerINS2_12steady_clockEEEDoFvOZNS2_2gc8internal24GCSchedulerDataWithTimerIS6_EC1ERNS8_17GCSchedulerConfigENS_8functionIFvvEEEEUlvE_EOPS7_SI_EJRKS4_SK_SM_SH_EvEEOT_DpOT0_.cold.1
00000000000512d4	mov	x0, x19
00000000000512d8	bl	___clang_call_terminate
00000000000512dc	bl	___clang_call_terminate
00000000000512e0	bl	___clang_call_terminate
00000000000512e4	bl	___clang_call_terminate
00000000000512e8	bl	___clang_call_terminate
00000000000512ec	mov	x25, x27
00000000000512f0	mov	x22, x0
00000000000512f4	mov	x0, x24
00000000000512f8	bl	0x51800 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
00000000000512fc	b	0x51388
0000000000051300	mov	x25, x27
0000000000051304	mov	x22, x0
0000000000051308	b	0x51388
000000000005130c	mov	x25, x27
0000000000051310	mov	x22, x0
0000000000051314	b	0x51390
0000000000051318	bl	___clang_call_terminate
000000000005131c	mov	x19, x0
0000000000051320	mov	x0, x25
0000000000051324	bl	0x51800 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000051328	b	0x51548
000000000005132c	mov	x19, x0
0000000000051330	b	0x51548
0000000000051334	mov	x19, x0
0000000000051338	b	0x51550
000000000005133c	bl	___clang_call_terminate
0000000000051340	mov	x19, x0
0000000000051344	bl	__ZNSt3__110unique_ptrIN6kotlin14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS1_11std_support9allocatorIS4_EEE4NodeENS6_17allocator_deleterISA_NS7_ISA_EEEEED1Ev
0000000000051348	mov	x0, x19
000000000005134c	bl	___clang_call_terminate
0000000000051350	mov	x25, x27
0000000000051354	mov	x22, x0
0000000000051358	ldrb	w8, [x23, #0x28]
000000000005135c	cbz	w8, 0x51370
0000000000051360	ldrsb	w8, [x23, #0x27]
0000000000051364	tbz	w8, #0x1f, 0x51370
0000000000051368	ldr	x0, [x19]
000000000005136c	bl	0x51a64 ; symbol stub for: _free
0000000000051370	ldr	x0, [x23]
0000000000051374	str	xzr, [x23]
0000000000051378	cbz	x0, 0x51384
000000000005137c	bl	0x51800 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000051380	bl	0x51914 ; symbol stub for: __ZdlPv
0000000000051384	mov	x24, x23
0000000000051388	mov	x0, x24
000000000005138c	bl	0x51914 ; symbol stub for: __ZdlPv
0000000000051390	ldrb	w8, [sp, #0x88]
0000000000051394	cbz	w8, 0x513a8
0000000000051398	ldrsb	w8, [sp, #0x87]
000000000005139c	tbz	w8, #0x1f, 0x513a8
00000000000513a0	ldr	x0, [sp, #0x70]
00000000000513a4	bl	0x51a64 ; symbol stub for: _free
00000000000513a8	ldr	x23, [x20, #0x200]
00000000000513ac	str	xzr, [x20, #0x200]
00000000000513b0	cbnz	x23, 0x513cc
00000000000513b4	mov	x0, x21
00000000000513b8	bl	__ZN6kotlin12ScopedThreadD1Ev
00000000000513bc	mov	x0, x25
00000000000513c0	bl	__ZN13GCStateHolderD1Ev
00000000000513c4	mov	x0, x22
00000000000513c8	bl	___clang_call_terminate
00000000000513cc	add	x20, x23, #0x58
00000000000513d0	mov	x0, x20
00000000000513d4	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
00000000000513d8	ldr	x8, [x23]
00000000000513dc	cbnz	x8, 0x5141c
00000000000513e0	mov	x0, x20
00000000000513e4	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000513e8	add	x0, x23, #0x140
00000000000513ec	bl	0x51890 ; symbol stub for: __ZNSt3__15mutexD1Ev
00000000000513f0	add	x0, x23, #0x108
00000000000513f4	bl	0x51854 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
00000000000513f8	add	x0, x23, #0xc8
00000000000513fc	bl	0x51890 ; symbol stub for: __ZNSt3__15mutexD1Ev
0000000000051400	add	x8, x23, #0x98
0000000000051404	ldr	x0, [x23, #0xb0]
0000000000051408	cmp	x8, x0
000000000005140c	b.ne	0x51460
0000000000051410	ldr	x8, [x0]
0000000000051414	ldr	x8, [x8, #0x20]
0000000000051418	b	0x5146c
000000000005141c	mov	w8, #0x1
0000000000051420	strb	w8, [x23, #0xc0]
0000000000051424	add	x24, x23, #0x28
0000000000051428	mov	x0, x24
000000000005142c	bl	0x51830 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000051430	mov	x0, x20
0000000000051434	bl	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000051438	mov	x0, x23
000000000005143c	bl	0x518b4 ; symbol stub for: __ZNSt3__16thread4joinEv
0000000000051440	strb	wzr, [x23, #0xc0]
0000000000051444	mov	x0, x20
0000000000051448	bl	0x51878 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000005144c	mov	w8, #0x1
0000000000051450	strb	w8, [x23, #0xc1]
0000000000051454	mov	x0, x24
0000000000051458	bl	0x51830 ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000005145c	b	0x513e0
0000000000051460	cbz	x0, 0x51470
0000000000051464	ldr	x8, [x0]
0000000000051468	ldr	x8, [x8, #0x28]
000000000005146c	blr	x8
0000000000051470	mov	x0, x20
0000000000051474	bl	0x51890 ; symbol stub for: __ZNSt3__15mutexD1Ev
0000000000051478	add	x0, x23, #0x28
000000000005147c	bl	0x51854 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
0000000000051480	ldr	x0, [x23, #0x10]
0000000000051484	str	xzr, [x23, #0x10]
0000000000051488	cbnz	x0, 0x51494
000000000005148c	str	xzr, [x23, #0x10]
0000000000051490	b	0x514c0
0000000000051494	ldr	x19, [x0]
0000000000051498	str	xzr, [x0]
000000000005149c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
00000000000514a0	bl	_mi_free
00000000000514a4	mov	x0, x19
00000000000514a8	cbnz	x19, 0x51494
00000000000514ac	ldr	x0, [x23, #0x10]
00000000000514b0	str	xzr, [x23, #0x10]
00000000000514b4	cbz	x0, 0x514c0
00000000000514b8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
00000000000514bc	bl	_mi_free
00000000000514c0	ldr	x8, [x23]
00000000000514c4	cbz	x8, 0x514d0
00000000000514c8	mov	x0, x23
00000000000514cc	bl	0x518b4 ; symbol stub for: __ZNSt3__16thread4joinEv
00000000000514d0	mov	x0, x23
00000000000514d4	bl	0x518c0 ; symbol stub for: __ZNSt3__16threadD1Ev
00000000000514d8	bl	0x51a64 ; symbol stub for: _free
00000000000514dc	mov	x0, x21
00000000000514e0	bl	__ZN6kotlin12ScopedThreadD1Ev
00000000000514e4	mov	x0, x25
00000000000514e8	bl	__ZN13GCStateHolderD1Ev
00000000000514ec	mov	x0, x22
00000000000514f0	bl	___clang_call_terminate
00000000000514f4	bl	___clang_call_terminate
00000000000514f8	mov	x19, x0
00000000000514fc	mov	x0, x23
0000000000051500	bl	0x518c0 ; symbol stub for: __ZNSt3__16threadD1Ev
0000000000051504	mov	x0, x19
0000000000051508	bl	___clang_call_terminate
000000000005150c	bl	___clang_call_terminate
0000000000051510	bl	___clang_call_terminate
0000000000051514	mov	x19, x0
0000000000051518	ldrb	w8, [x24, #0x28]
000000000005151c	cbz	w8, 0x51530
0000000000051520	ldrsb	w8, [x24, #0x27]
0000000000051524	tbz	w8, #0x1f, 0x51530
0000000000051528	ldr	x0, [x25]
000000000005152c	bl	0x51a64 ; symbol stub for: _free
0000000000051530	ldr	x0, [x24]
0000000000051534	str	xzr, [x24]
0000000000051538	cbz	x0, 0x51544
000000000005153c	bl	0x51800 ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000051540	bl	0x51914 ; symbol stub for: __ZdlPv
0000000000051544	mov	x25, x24
0000000000051548	mov	x0, x25
000000000005154c	bl	0x51914 ; symbol stub for: __ZdlPv
0000000000051550	ldrb	w8, [sp, #0x88]
0000000000051554	cbz	w8, 0x51560
0000000000051558	add	x0, sp, #0x70
000000000005155c	bl	__ZN6kotlin13RepeatedTimerINS_12steady_clockEEC2IxNSt3__15ratioILl1ELl1000000EEEZNS_2gc8internal24GCSchedulerDataWithTimerIS1_EC1ERNS7_17GCSchedulerConfigENS4_8functionIFvvEEEEUlvE_EENS4_17basic_string_viewIcNS4_11char_traitsIcEEEENS4_6chrono8durationIT_T0_EEOT1_.cold.1
0000000000051560	mov	x0, x23
0000000000051564	bl	0x51854 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
0000000000051568	mov	x0, x22
000000000005156c	bl	0x51890 ; symbol stub for: __ZNSt3__15mutexD1Ev
0000000000051570	mov	x0, x19
0000000000051574	bl	___clang_call_terminate
__ZN6kotlin13RepeatedTimerINS_12steady_clockEEC2IxNSt3__15ratioILl1ELl1000000EEEZNS_2gc8internal24GCSchedulerDataWithTimerIS1_EC1ERNS7_17GCSchedulerConfigENS4_8functionIFvvEEEEUlvE_EENS4_17basic_string_viewIcNS4_11char_traitsIcEEEENS4_6chrono8durationIT_T0_EEOT1_.cold.1:
0000000000051578	ldrsb	w8, [x0, #0x17]
000000000005157c	tbnz	w8, #0x1f, 0x51584
0000000000051580	ret
0000000000051584	b	_OUTLINED_FUNCTION_0
__ZNSt3__16threadC2IPFvN6kotlin12ScopedThread10attributesEOMNS2_13RepeatedTimerINS2_12steady_clockEEEDoFvOZNS2_2gc8internal24GCSchedulerDataWithTimerIS6_EC1ERNS8_17GCSchedulerConfigENS_8functionIFvvEEEEUlvE_EOPS7_SI_EJRKS4_SK_SM_SH_EvEEOT_DpOT0_.cold.1:
0000000000051588	ldrsb	w8, [x0, #0x17]
000000000005158c	tbnz	w8, #0x1f, 0x51594
0000000000051590	ret
0000000000051594	b	_OUTLINED_FUNCTION_0
__ZN6kotlin2gc22ConcurrentMarkAndSweepC2ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerE.cold.1:
0000000000051598	ldrsb	w8, [x0, #0x17]
000000000005159c	tbnz	w8, #0x1f, 0x515a4
00000000000515a0	ret
00000000000515a4	b	_OUTLINED_FUNCTION_0
__ZN6kotlin2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEv.cold.1:
00000000000515a8	ldrsb	w8, [x0, #0x17]
00000000000515ac	tbnz	w8, #0x1f, 0x515b4
00000000000515b0	ret
00000000000515b4	b	_OUTLINED_FUNCTION_0
__ZN6kotlin12ScopedThread3RunIZNS_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOS7_DpOS8_.cold.1:
00000000000515b8	stp	x24, x23, [sp, #-0x40]!
00000000000515bc	stp	x22, x21, [sp, #0x10]
00000000000515c0	stp	x20, x19, [sp, #0x20]
00000000000515c4	stp	x29, x30, [sp, #0x30]
00000000000515c8	add	x29, sp, #0x30
00000000000515cc	mov	x21, x2
00000000000515d0	mov	x20, x1
00000000000515d4	mov	x19, x0
00000000000515d8	str	xzr, [x2]
00000000000515dc	cbz	x3, 0x51618
00000000000515e0	mov	x22, x3
00000000000515e4	ldr	x23, [x22]
00000000000515e8	str	xzr, [x22]
00000000000515ec	mov	x0, x22
00000000000515f0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
00000000000515f4	bl	_mi_free
00000000000515f8	mov	x22, x23
00000000000515fc	cbnz	x23, 0x515e4
0000000000051600	ldr	x0, [x21]
0000000000051604	str	xzr, [x21]
0000000000051608	cbz	x0, 0x5161c
000000000005160c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000051610	bl	_mi_free
0000000000051614	b	0x5161c
0000000000051618	str	xzr, [x21]
000000000005161c	ldrb	w8, [x20]
0000000000051620	cbz	w8, 0x5163c
0000000000051624	ldr	x0, [x19]
0000000000051628	ldp	x29, x30, [sp, #0x30]
000000000005162c	ldp	x20, x19, [sp, #0x20]
0000000000051630	ldp	x22, x21, [sp, #0x10]
0000000000051634	ldp	x24, x23, [sp], #0x40
0000000000051638	b	0x51884 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000005163c	ldp	x29, x30, [sp, #0x30]
0000000000051640	ldp	x20, x19, [sp, #0x20]
0000000000051644	ldp	x22, x21, [sp, #0x10]
0000000000051648	ldp	x24, x23, [sp], #0x40
000000000005164c	ret
__ZN12_GLOBAL__N_18theStateEv.cold.1:
0000000000051650	stp	x24, x23, [sp, #-0x40]!
0000000000051654	stp	x22, x21, [sp, #0x10]
0000000000051658	stp	x20, x19, [sp, #0x20]
000000000005165c	stp	x29, x30, [sp, #0x30]
0000000000051660	add	x29, sp, #0x30
0000000000051664	mov	x19, x3
0000000000051668	mov	x21, x2
000000000005166c	mov	x22, x1
0000000000051670	mov	x20, x0
0000000000051674	ldr	x0, [x0, #0xd0]
0000000000051678	cbz	x0, 0x5168c
000000000005167c	ldr	x23, [x0]
0000000000051680	bl	0x51a64 ; symbol stub for: _free
0000000000051684	mov	x0, x23
0000000000051688	cbnz	x23, 0x5167c
000000000005168c	ldr	x0, [x22]
0000000000051690	str	xzr, [x22]
0000000000051694	bl	0x51a64 ; symbol stub for: _free
0000000000051698	ldr	x0, [x20, #0xa8]
000000000005169c	cbz	x0, 0x516b0
00000000000516a0	ldr	x22, [x0]
00000000000516a4	bl	0x51a64 ; symbol stub for: _free
00000000000516a8	mov	x0, x22
00000000000516ac	cbnz	x22, 0x516a0
00000000000516b0	ldr	x0, [x21]
00000000000516b4	str	xzr, [x21]
00000000000516b8	bl	0x51a64 ; symbol stub for: _free
00000000000516bc	ldr	x0, [x20, #0x80]
00000000000516c0	cbz	x0, 0x516d4
00000000000516c4	ldr	x20, [x0]
00000000000516c8	bl	0x51a64 ; symbol stub for: _free
00000000000516cc	mov	x0, x20
00000000000516d0	cbnz	x20, 0x516c4
00000000000516d4	ldr	x0, [x19]
00000000000516d8	str	xzr, [x19]
00000000000516dc	ldp	x29, x30, [sp, #0x30]
00000000000516e0	ldp	x20, x19, [sp, #0x20]
00000000000516e4	ldp	x22, x21, [sp, #0x10]
00000000000516e8	ldp	x24, x23, [sp], #0x40
00000000000516ec	b	0x51a64 ; symbol stub for: _free
_Kotlin_getStackTraceStrings.cold.1:
00000000000516f0	stp	x22, x21, [sp, #-0x30]!
00000000000516f4	stp	x20, x19, [sp, #0x10]
00000000000516f8	stp	x29, x30, [sp, #0x20]
00000000000516fc	add	x29, sp, #0x20
0000000000051700	mov	x19, x1
0000000000051704	mov	x20, x0
0000000000051708	ldr	x8, [x1]
000000000005170c	cmp	x8, x0
0000000000051710	b.eq	0x51740
0000000000051714	mov	x21, x2
0000000000051718	sub	x22, x8, #0x18
000000000005171c	ldursb	w9, [x8, #-0x1]
0000000000051720	tbz	w9, #0x1f, 0x5172c
0000000000051724	ldur	x0, [x8, #-0x18]
0000000000051728	bl	0x51a64 ; symbol stub for: _free
000000000005172c	mov	x8, x22
0000000000051730	cmp	x22, x20
0000000000051734	b.ne	0x51718
0000000000051738	ldr	x0, [x21]
000000000005173c	b	0x51744
0000000000051740	mov	x0, x20
0000000000051744	str	x20, [x19]
0000000000051748	ldp	x29, x30, [sp, #0x20]
000000000005174c	ldp	x20, x19, [sp, #0x10]
0000000000051750	ldp	x22, x21, [sp], #0x30
0000000000051754	b	0x51a64 ; symbol stub for: _free
