../../../SkantzBinaries/KMM/reverseComplementKmm:
(__TEXT,__text) section
_kfun:kotlinx.cinterop.NativePlacement#alloc(kotlin.Int;kotlin.Int){}kotlinx.cinterop.NativePointed:
00000000000078bc	stp	x22, x21, [sp, #-0x30]!
00000000000078c0	stp	x20, x19, [sp, #0x10]
00000000000078c4	stp	x29, x30, [sp, #0x20]
00000000000078c8	add	x29, sp, #0x20
00000000000078cc	mov	x19, x2
00000000000078d0	mov	x21, x1
00000000000078d4	mov	x20, x0
00000000000078d8	adr	x8, #0x8cc31
00000000000078dc	nop
00000000000078e0	ldarb	w8, [x8]
00000000000078e4	tbz	w8, #0x0, 0x78ec
00000000000078e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000078ec	ldr	x8, [x20]
00000000000078f0	and	x8, x8, #0xfffffffffffffffc
00000000000078f4	ldr	x8, [x8]
00000000000078f8	ldr	w9, [x8, #0x3c]
00000000000078fc	ldr	x8, [x8, #0x40]
0000000000007900	tbnz	w9, #0x1f, 0x790c
0000000000007904	and	x9, x9, #0x10
0000000000007908	b	0x7990
000000000000790c	neg	w10, w9
0000000000007910	mvn	w9, w9
0000000000007914	cmp	w10, #0x9
0000000000007918	b.ge	0x7950
000000000000791c	cmp	w10, #0x2
0000000000007920	b.lt	0x7984
0000000000007924	mov	x10, #0x0
0000000000007928	mov	x11, x8
000000000000792c	ldr	w12, [x11]
0000000000007930	cmp	w12, #0xf
0000000000007934	b.gt	0x798c
0000000000007938	add	x10, x10, #0x1
000000000000793c	add	x11, x11, #0x10
0000000000007940	cmp	x9, x10
0000000000007944	b.ne	0x792c
0000000000007948	mov	x10, x9
000000000000794c	b	0x798c
0000000000007950	mov	w10, #0x0
0000000000007954	add	w11, w9, w10
0000000000007958	cmp	w11, #0x0
000000000000795c	cinc	w11, w11, lt
0000000000007960	asr	w11, w11, #1
0000000000007964	sbfiz	x12, x11, #4, #32
0000000000007968	ldr	w12, [x8, x12]
000000000000796c	cmp	w12, #0x10
0000000000007970	csinc	w10, w10, w11, ge
0000000000007974	csel	w9, w9, w11, lt
0000000000007978	cmp	w10, w9
000000000000797c	b.lt	0x7954
0000000000007980	b	0x798c
0000000000007984	mov	w10, #0x0
0000000000007988	b	0x798c
000000000000798c	sxtw	x9, w10
0000000000007990	sxtw	x1, w21
0000000000007994	add	x8, x8, x9, lsl #4
0000000000007998	ldr	x8, [x8, #0x8]
000000000000799c	ldr	x3, [x8, #0x8]
00000000000079a0	mov	x0, x20
00000000000079a4	mov	x2, x19
00000000000079a8	ldp	x29, x30, [sp, #0x20]
00000000000079ac	ldp	x20, x19, [sp, #0x10]
00000000000079b0	ldp	x22, x21, [sp], #0x30
00000000000079b4	br	x3
_kfun:kotlinx.cinterop.ArenaBase#alloc(kotlin.Long;kotlin.Int){}kotlinx.cinterop.NativePointed:
00000000000079b8	stp	x22, x21, [sp, #-0x30]!
00000000000079bc	stp	x20, x19, [sp, #0x10]
00000000000079c0	stp	x29, x30, [sp, #0x20]
00000000000079c4	add	x29, sp, #0x20
00000000000079c8	mov	x20, x2
00000000000079cc	mov	x21, x1
00000000000079d0	mov	x19, x0
00000000000079d4	adr	x8, #0x8cb35
00000000000079d8	nop
00000000000079dc	ldarb	w8, [x8]
00000000000079e0	tbz	w8, #0x0, 0x79e8
00000000000079e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000079e8	cmp	w20, #0x8
00000000000079ec	mov	w8, #0x8
00000000000079f0	csel	w20, w20, w8, gt
00000000000079f4	ldr	x0, [x19, #0x10]
00000000000079f8	add	x1, x20, x21
00000000000079fc	ldr	x8, [x0]
0000000000007a00	and	x8, x8, #0xfffffffffffffffc
0000000000007a04	ldr	x8, [x8]
0000000000007a08	ldr	w9, [x8, #0x3c]
0000000000007a0c	ldr	x8, [x8, #0x40]
0000000000007a10	tbnz	w9, #0x1f, 0x7a1c
0000000000007a14	and	x9, x9, #0x10
0000000000007a18	b	0x7aa0
0000000000007a1c	neg	w10, w9
0000000000007a20	mvn	w9, w9
0000000000007a24	cmp	w10, #0x9
0000000000007a28	b.ge	0x7a60
0000000000007a2c	cmp	w10, #0x2
0000000000007a30	b.lt	0x7a94
0000000000007a34	mov	x10, #0x0
0000000000007a38	mov	x11, x8
0000000000007a3c	ldr	w12, [x11]
0000000000007a40	cmp	w12, #0xf
0000000000007a44	b.gt	0x7a9c
0000000000007a48	add	x10, x10, #0x1
0000000000007a4c	add	x11, x11, #0x10
0000000000007a50	cmp	x9, x10
0000000000007a54	b.ne	0x7a3c
0000000000007a58	mov	x10, x9
0000000000007a5c	b	0x7a9c
0000000000007a60	mov	w10, #0x0
0000000000007a64	add	w11, w9, w10
0000000000007a68	cmp	w11, #0x0
0000000000007a6c	cinc	w11, w11, lt
0000000000007a70	asr	w11, w11, #1
0000000000007a74	sbfiz	x12, x11, #4, #32
0000000000007a78	ldr	w12, [x8, x12]
0000000000007a7c	cmp	w12, #0x10
0000000000007a80	csinc	w10, w10, w11, ge
0000000000007a84	csel	w9, w9, w11, lt
0000000000007a88	cmp	w10, w9
0000000000007a8c	b.lt	0x7a64
0000000000007a90	b	0x7a9c
0000000000007a94	mov	w10, #0x0
0000000000007a98	b	0x7a9c
0000000000007a9c	sxtw	x9, w10
0000000000007aa0	add	x8, x8, x9, lsl #4
0000000000007aa4	ldr	x8, [x8, #0x8]
0000000000007aa8	ldr	x8, [x8, #0x8]
0000000000007aac	mov	x2, x20
0000000000007ab0	blr	x8
0000000000007ab4	ldr	x8, [x19, #0x18]
0000000000007ab8	str	x8, [x0]
0000000000007abc	str	x0, [x19, #0x18]
0000000000007ac0	adds	x0, x0, x20
0000000000007ac4	b.eq	0x7ad8
0000000000007ac8	ldp	x29, x30, [sp, #0x20]
0000000000007acc	ldp	x20, x19, [sp, #0x10]
0000000000007ad0	ldp	x22, x21, [sp], #0x30
0000000000007ad4	ret
0000000000007ad8	bl	_ThrowNullPointerException
_kfun:kotlinx.cinterop.ArenaBase#clearImpl(){}:
0000000000007adc	sub	sp, sp, #0x70
0000000000007ae0	stp	x24, x23, [sp, #0x30]
0000000000007ae4	stp	x22, x21, [sp, #0x40]
0000000000007ae8	stp	x20, x19, [sp, #0x50]
0000000000007aec	stp	x29, x30, [sp, #0x60]
0000000000007af0	add	x29, sp, #0x60
0000000000007af4	mov	x19, x0
0000000000007af8	adr	x21, #0x8ca11
0000000000007afc	nop
0000000000007b00	ldarb	w8, [x21]
0000000000007b04	tbz	w8, #0x0, 0x7b0c
0000000000007b08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007b0c	movi.16b	v0, #0x0
0000000000007b10	stp	q0, q0, [sp]
0000000000007b14	str	xzr, [sp, #0x20]
0000000000007b18	mov	x8, sp
0000000000007b1c	adrp	x20, 115 ; 0x7a000
0000000000007b20	add	x20, x20, #0x4e0
0000000000007b24	ldr	x22, [x20]
0000000000007b28	mov	x0, x20
0000000000007b2c	blr	x22
0000000000007b30	ldr	x9, [x0]
0000000000007b34	ldr	x10, [x9, #0x110]
0000000000007b38	str	x8, [x9, #0x110]
0000000000007b3c	mov	x9, #0x500000000
0000000000007b40	stp	x10, x9, [sp, #0x8]
0000000000007b44	ldr	x0, [x19, #0x8]
0000000000007b48	str	x0, [sp, #0x18]
0000000000007b4c	cbz	x0, 0x7c10
0000000000007b50	add	x1, x8, #0x20
0000000000007b54	ldr	x8, [x0]
0000000000007b58	and	x8, x8, #0xfffffffffffffffc
0000000000007b5c	ldr	x8, [x8]
0000000000007b60	ldr	w9, [x8, #0x3c]
0000000000007b64	ldr	x8, [x8, #0x40]
0000000000007b68	tbnz	w9, #0x1f, 0x7b78
0000000000007b6c	mov	w10, #0x59
0000000000007b70	and	x9, x9, x10
0000000000007b74	b	0x7bfc
0000000000007b78	neg	w10, w9
0000000000007b7c	mvn	w9, w9
0000000000007b80	cmp	w10, #0x9
0000000000007b84	b.ge	0x7bbc
0000000000007b88	cmp	w10, #0x2
0000000000007b8c	b.lt	0x7bf0
0000000000007b90	mov	x10, #0x0
0000000000007b94	mov	x11, x8
0000000000007b98	ldr	w12, [x11]
0000000000007b9c	cmp	w12, #0x58
0000000000007ba0	b.gt	0x7bf8
0000000000007ba4	add	x10, x10, #0x1
0000000000007ba8	add	x11, x11, #0x10
0000000000007bac	cmp	x9, x10
0000000000007bb0	b.ne	0x7b98
0000000000007bb4	mov	x10, x9
0000000000007bb8	b	0x7bf8
0000000000007bbc	mov	w10, #0x0
0000000000007bc0	add	w11, w9, w10
0000000000007bc4	cmp	w11, #0x0
0000000000007bc8	cinc	w11, w11, lt
0000000000007bcc	asr	w11, w11, #1
0000000000007bd0	sbfiz	x12, x11, #4, #32
0000000000007bd4	ldr	w12, [x8, x12]
0000000000007bd8	cmp	w12, #0x59
0000000000007bdc	csinc	w10, w10, w11, ge
0000000000007be0	csel	w9, w9, w11, lt
0000000000007be4	cmp	w10, w9
0000000000007be8	b.lt	0x7bc0
0000000000007bec	b	0x7bf8
0000000000007bf0	mov	w10, #0x0
0000000000007bf4	b	0x7bf8
0000000000007bf8	sxtw	x9, w10
0000000000007bfc	add	x8, x8, x9, lsl #4
0000000000007c00	ldr	x8, [x8, #0x8]
0000000000007c04	ldr	x8, [x8]
0000000000007c08	blr	x8
0000000000007c0c	str	xzr, [x19, #0x8]
0000000000007c10	mov	x0, x20
0000000000007c14	blr	x22
0000000000007c18	ldr	x8, [x0]
0000000000007c1c	ldr	x9, [sp, #0x8]
0000000000007c20	str	x9, [x8, #0x110]
0000000000007c24	ldr	x20, [x19, #0x18]
0000000000007c28	mov	w22, #0x9
0000000000007c2c	b	0x7c6c
0000000000007c30	ldr	x23, [x20]
0000000000007c34	ldr	x0, [x19, #0x10]
0000000000007c38	ldr	x8, [x0]
0000000000007c3c	and	x8, x8, #0xfffffffffffffffc
0000000000007c40	ldr	x8, [x8]
0000000000007c44	ldr	w9, [x8, #0x3c]
0000000000007c48	ldr	x8, [x8, #0x40]
0000000000007c4c	tbnz	w9, #0x1f, 0x7c80
0000000000007c50	and	x9, x9, x22
0000000000007c54	add	x8, x8, x9, lsl #4
0000000000007c58	ldr	x8, [x8, #0x8]
0000000000007c5c	ldr	x8, [x8]
0000000000007c60	mov	x1, x20
0000000000007c64	blr	x8
0000000000007c68	mov	x20, x23
0000000000007c6c	cbz	x20, 0x7d10
0000000000007c70	ldarb	w8, [x21]
0000000000007c74	tbz	w8, #0x0, 0x7c30
0000000000007c78	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007c7c	b	0x7c30
0000000000007c80	neg	w10, w9
0000000000007c84	mvn	w9, w9
0000000000007c88	cmp	w10, #0x9
0000000000007c8c	b.ge	0x7cc8
0000000000007c90	cmp	w10, #0x2
0000000000007c94	b.lt	0x7cfc
0000000000007c98	mov	x10, #0x0
0000000000007c9c	mov	x11, x8
0000000000007ca0	ldr	w12, [x11]
0000000000007ca4	cmp	w12, #0x8
0000000000007ca8	b.gt	0x7d08
0000000000007cac	add	x10, x10, #0x1
0000000000007cb0	add	x11, x11, #0x10
0000000000007cb4	cmp	x9, x10
0000000000007cb8	b.ne	0x7ca0
0000000000007cbc	mov	x10, x9
0000000000007cc0	sxtw	x9, w10
0000000000007cc4	b	0x7c54
0000000000007cc8	mov	w10, #0x0
0000000000007ccc	add	w11, w9, w10
0000000000007cd0	cmp	w11, #0x0
0000000000007cd4	cinc	w11, w11, lt
0000000000007cd8	asr	w11, w11, #1
0000000000007cdc	sbfiz	x12, x11, #4, #32
0000000000007ce0	ldr	w12, [x8, x12]
0000000000007ce4	cmp	w12, #0x9
0000000000007ce8	csinc	w10, w10, w11, ge
0000000000007cec	csel	w9, w9, w11, lt
0000000000007cf0	cmp	w10, w9
0000000000007cf4	b.lt	0x7ccc
0000000000007cf8	b	0x7d08
0000000000007cfc	mov	w10, #0x0
0000000000007d00	sxtw	x9, w10
0000000000007d04	b	0x7c54
0000000000007d08	sxtw	x9, w10
0000000000007d0c	b	0x7c54
0000000000007d10	ldp	x29, x30, [sp, #0x60]
0000000000007d14	ldp	x20, x19, [sp, #0x50]
0000000000007d18	ldp	x22, x21, [sp, #0x40]
0000000000007d1c	ldp	x24, x23, [sp, #0x30]
0000000000007d20	add	sp, sp, #0x70
0000000000007d24	ret
_kfun:kotlinx.cinterop.nativeHeap#alloc(kotlin.Long;kotlin.Int){}kotlinx.cinterop.NativePointed:
0000000000007d28	sub	sp, sp, #0x60
0000000000007d2c	stp	x22, x21, [sp, #0x30]
0000000000007d30	stp	x20, x19, [sp, #0x40]
0000000000007d34	stp	x29, x30, [sp, #0x50]
0000000000007d38	add	x29, sp, #0x50
0000000000007d3c	mov	x21, x2
0000000000007d40	mov	x20, x1
0000000000007d44	adr	x8, #0x8c7c5
0000000000007d48	nop
0000000000007d4c	ldarb	w8, [x8]
0000000000007d50	tbz	w8, #0x0, 0x7d58
0000000000007d54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007d58	movi.16b	v0, #0x0
0000000000007d5c	stp	q0, q0, [sp]
0000000000007d60	adrp	x19, 115 ; 0x7a000
0000000000007d64	add	x19, x19, #0x4e0
0000000000007d68	ldr	x22, [x19]
0000000000007d6c	mov	x0, x19
0000000000007d70	blr	x22
0000000000007d74	ldr	x8, [x0]
0000000000007d78	ldr	x9, [x8, #0x110]
0000000000007d7c	mov	x10, sp
0000000000007d80	str	x10, [x8, #0x110]
0000000000007d84	mov	x8, #0x400000000
0000000000007d88	stp	x9, x8, [sp, #0x8]
0000000000007d8c	tbnz	x20, #0x3f, 0x7e2c
0000000000007d90	sxtw	x8, w21
0000000000007d94	add	x9, x20, x8
0000000000007d98	sub	x9, x9, #0x1
0000000000007d9c	neg	x10, x8
0000000000007da0	and	x20, x9, x10
0000000000007da4	cmp	w21, #0x1
0000000000007da8	b.ne	0x7dbc
0000000000007dac	mov	x0, x20
0000000000007db0	bl	0x55bb8 ; symbol stub for: _malloc
0000000000007db4	mov	x21, x0
0000000000007db8	b	0x7de4
0000000000007dbc	sub	x9, x8, #0x1
0000000000007dc0	tst	x8, x9
0000000000007dc4	ccmp	w21, #0x8, #0x2, eq
0000000000007dc8	mov	w9, #0x8
0000000000007dcc	csel	x1, x9, x8, lo
0000000000007dd0	add	x0, sp, #0x28
0000000000007dd4	mov	x2, x20
0000000000007dd8	bl	0x55d20 ; symbol stub for: _posix_memalign
0000000000007ddc	cbnz	w0, 0x7e20
0000000000007de0	ldr	x21, [sp, #0x28]
0000000000007de4	mov	x0, x21
0000000000007de8	mov	x1, x20
0000000000007dec	bl	0x55ae0 ; symbol stub for: _bzero
0000000000007df0	cbz	x21, 0x7e2c
0000000000007df4	mov	x0, x19
0000000000007df8	blr	x22
0000000000007dfc	ldr	x8, [x0]
0000000000007e00	ldr	x9, [sp, #0x8]
0000000000007e04	str	x9, [x8, #0x110]
0000000000007e08	mov	x0, x21
0000000000007e0c	ldp	x29, x30, [sp, #0x50]
0000000000007e10	ldp	x20, x19, [sp, #0x40]
0000000000007e14	ldp	x22, x21, [sp, #0x30]
0000000000007e18	add	sp, sp, #0x60
0000000000007e1c	ret
0000000000007e20	mov	x0, #0x0
0000000000007e24	mov	x1, x20
0000000000007e28	bl	0x55ae0 ; symbol stub for: _bzero
0000000000007e2c	mov	x0, x19
0000000000007e30	blr	x22
0000000000007e34	ldr	x8, [x0]
0000000000007e38	ldr	x8, [x8, #0x118]
0000000000007e3c	add	x0, x8, #0x70
0000000000007e40	mov	w1, #0x38
0000000000007e44	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000007e48	mov	x19, x0
0000000000007e4c	adr	x8, #0x59c24
0000000000007e50	nop
0000000000007e54	str	x8, [x19, #0x10]!
0000000000007e58	stur	xzr, [x19, #-0x8]
0000000000007e5c	str	x19, [sp, #0x18]
0000000000007e60	adr	x1, #0x662d0
0000000000007e64	nop
0000000000007e68	mov	x0, x19
0000000000007e6c	bl	"_kfun:kotlin.OutOfMemoryError#<init>(kotlin.String?){}"
0000000000007e70	mov	x0, x19
0000000000007e74	bl	_ThrowException
0000000000007e78	bl	___clang_call_terminate
_kfun:kotlinx.cinterop.nativeHeap#free(kotlin.native.internal.NativePtr){}:
0000000000007e7c	stp	x20, x19, [sp, #-0x20]!
0000000000007e80	stp	x29, x30, [sp, #0x10]
0000000000007e84	add	x29, sp, #0x10
0000000000007e88	mov	x19, x1
0000000000007e8c	adr	x8, #0x8c67d
0000000000007e90	nop
0000000000007e94	ldarb	w8, [x8]
0000000000007e98	tbz	w8, #0x0, 0x7ea0
0000000000007e9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007ea0	mov	x0, x19
0000000000007ea4	ldp	x29, x30, [sp, #0x10]
0000000000007ea8	ldp	x20, x19, [sp], #0x20
0000000000007eac	b	0x55b7c ; symbol stub for: _free
_kfun:kotlinx.cinterop#cPointerToString__at__kotlinx.cinterop.CPointer<*>(){}kotlin.String:
0000000000007eb0	sub	sp, sp, #0x130
0000000000007eb4	stp	x26, x25, [sp, #0xe0]
0000000000007eb8	stp	x24, x23, [sp, #0xf0]
0000000000007ebc	stp	x22, x21, [sp, #0x100]
0000000000007ec0	stp	x20, x19, [sp, #0x110]
0000000000007ec4	stp	x29, x30, [sp, #0x120]
0000000000007ec8	add	x29, sp, #0x120
0000000000007ecc	mov	x19, x1
0000000000007ed0	mov	x23, x0
0000000000007ed4	movi.16b	v0, #0x0
0000000000007ed8	stp	q0, q0, [sp, #0x20]
0000000000007edc	stp	q0, q0, [sp, #0x40]
0000000000007ee0	add	x8, sp, #0x20
0000000000007ee4	add	x24, x8, #0x20
0000000000007ee8	add	x21, x8, #0x30
0000000000007eec	add	x22, x8, #0x28
0000000000007ef0	add	x20, x8, #0x38
0000000000007ef4	stp	xzr, xzr, [sp, #0x10]
0000000000007ef8	adr	x9, #0x5cec8
0000000000007efc	nop
0000000000007f00	orr	x9, x9, #0x3
0000000000007f04	str	x9, [sp, #0x8]
0000000000007f08	adrp	x0, 115 ; 0x7a000
0000000000007f0c	add	x0, x0, #0x4e0
0000000000007f10	ldr	x9, [x0]
0000000000007f14	blr	x9
0000000000007f18	ldr	x25, [x0]
0000000000007f1c	ldr	x9, [x25, #0x110]
0000000000007f20	str	x8, [x25, #0x110]
0000000000007f24	mov	x8, #0x800000000
0000000000007f28	stp	x9, x8, [sp, #0x28]
0000000000007f2c	adr	x8, #0x8c5dd
0000000000007f30	nop
0000000000007f34	ldarb	w8, [x8]
0000000000007f38	tbz	w8, #0x0, 0x7f40
0000000000007f3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000007f40	add	x8, sp, #0x8
0000000000007f44	str	x8, [sp, #0x38]
0000000000007f48	add	x0, sp, #0x8
0000000000007f4c	mov	w1, #0xa
0000000000007f50	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000007f54	adr	x1, #0x6622c
0000000000007f58	nop
0000000000007f5c	add	x0, sp, #0x8
0000000000007f60	mov	x2, x24
0000000000007f64	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000007f68	movi.16b	v0, #0x0
0000000000007f6c	stp	q0, q0, [sp, #0x60]
0000000000007f70	add	x8, sp, #0x60
0000000000007f74	add	x2, x8, #0x18
0000000000007f78	ldr	x9, [x25, #0x110]
0000000000007f7c	str	x8, [x25, #0x110]
0000000000007f80	mov	x8, #0x400000000
0000000000007f84	stp	x9, x8, [sp, #0x68]
0000000000007f88	mov	x0, x23
0000000000007f8c	mov	w1, #0x10
0000000000007f90	bl	_Kotlin_Long_toStringRadix
0000000000007f94	mov	x1, x0
0000000000007f98	adr	x0, #0x67488
0000000000007f9c	nop
0000000000007fa0	mov	x2, x22
0000000000007fa4	bl	_Kotlin_String_plusImpl
0000000000007fa8	mov	x1, x0
0000000000007fac	str	x0, [sp, #0x48]
0000000000007fb0	ldr	x8, [sp, #0x68]
0000000000007fb4	str	x8, [x25, #0x110]
0000000000007fb8	add	x0, sp, #0x8
0000000000007fbc	mov	x2, x21
0000000000007fc0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000007fc4	adr	x1, #0x660fc
0000000000007fc8	nop
0000000000007fcc	add	x0, sp, #0x8
0000000000007fd0	mov	x2, x20
0000000000007fd4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000007fd8	add	x0, sp, #0x8
0000000000007fdc	mov	x1, x19
0000000000007fe0	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000007fe4	str	x0, [x19]
0000000000007fe8	ldr	x8, [sp, #0x28]
0000000000007fec	str	x8, [x25, #0x110]
0000000000007ff0	ldp	x29, x30, [sp, #0x120]
0000000000007ff4	ldp	x20, x19, [sp, #0x110]
0000000000007ff8	ldp	x22, x21, [sp, #0x100]
0000000000007ffc	ldp	x24, x23, [sp, #0xf0]
0000000000008000	ldp	x26, x25, [sp, #0xe0]
0000000000008004	add	sp, sp, #0x130
0000000000008008	ret
_interpretObjCPointer:
000000000000800c	sub	sp, sp, #0x60
0000000000008010	stp	x24, x23, [sp, #0x20]
0000000000008014	stp	x22, x21, [sp, #0x30]
0000000000008018	stp	x20, x19, [sp, #0x40]
000000000000801c	stp	x29, x30, [sp, #0x50]
0000000000008020	add	x29, sp, #0x50
0000000000008024	mov	x20, x1
0000000000008028	mov	x21, x0
000000000000802c	movi.16b	v0, #0x0
0000000000008030	stp	q0, q0, [sp]
0000000000008034	mov	x23, sp
0000000000008038	adrp	x19, 114 ; 0x7a000
000000000000803c	add	x19, x19, #0x4e0
0000000000008040	ldr	x22, [x19]
0000000000008044	mov	x0, x19
0000000000008048	blr	x22
000000000000804c	ldr	x8, [x0]
0000000000008050	ldr	x9, [x8, #0x110]
0000000000008054	str	x23, [x8, #0x110]
0000000000008058	mov	x8, #0x400000000
000000000000805c	stp	x9, x8, [sp, #0x8]
0000000000008060	adr	x8, #0x8c4a9
0000000000008064	nop
0000000000008068	ldarb	w8, [x8]
000000000000806c	tbz	w8, #0x0, 0x8074
0000000000008070	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008074	cbz	x21, 0x80c8
0000000000008078	add	x2, x23, #0x18
000000000000807c	nop
0000000000008080	ldr	x1, #0x8c6d8
0000000000008084	mov	x0, x21
0000000000008088	bl	0x55ca8 ; Objc message: _objc_msgSend
000000000000808c	mov	x8, x0
0000000000008090	cbz	x0, 0x80cc
0000000000008094	str	x8, [x20]
0000000000008098	mov	x0, x19
000000000000809c	blr	x22
00000000000080a0	ldr	x9, [x0]
00000000000080a4	ldr	x10, [sp, #0x8]
00000000000080a8	str	x10, [x9, #0x110]
00000000000080ac	mov	x0, x8
00000000000080b0	ldp	x29, x30, [sp, #0x50]
00000000000080b4	ldp	x20, x19, [sp, #0x40]
00000000000080b8	ldp	x22, x21, [sp, #0x30]
00000000000080bc	ldp	x24, x23, [sp, #0x20]
00000000000080c0	add	sp, sp, #0x60
00000000000080c4	ret
00000000000080c8	str	xzr, [sp, #0x18]
00000000000080cc	bl	_ThrowNullPointerException
00000000000080d0	brk	#0x1
00000000000080d4	bl	___clang_call_terminate
00000000000080d8	mov	x1, x0
00000000000080dc	mov	x0, x19
00000000000080e0	blr	x22
00000000000080e4	ldr	x8, [x0]
00000000000080e8	ldr	x9, [sp, #0x8]
00000000000080ec	str	x9, [x8, #0x110]
00000000000080f0	mov	x0, x1
00000000000080f4	bl	0x558ac ; symbol stub for: __Unwind_Resume
_kfun:kotlinx.cinterop.Pinned#toString(){}kotlin.String:
00000000000080f8	sub	sp, sp, #0xb0
00000000000080fc	stp	x26, x25, [sp, #0x60]
0000000000008100	stp	x24, x23, [sp, #0x70]
0000000000008104	stp	x22, x21, [sp, #0x80]
0000000000008108	stp	x20, x19, [sp, #0x90]
000000000000810c	stp	x29, x30, [sp, #0xa0]
0000000000008110	add	x29, sp, #0xa0
0000000000008114	mov	x19, x1
0000000000008118	mov	x22, x0
000000000000811c	movi.16b	v0, #0x0
0000000000008120	stp	q0, q0, [sp, #0x20]
0000000000008124	stp	q0, q0, [sp, #0x40]
0000000000008128	add	x8, sp, #0x20
000000000000812c	add	x24, x8, #0x20
0000000000008130	add	x21, x8, #0x30
0000000000008134	add	x23, x8, #0x28
0000000000008138	add	x20, x8, #0x38
000000000000813c	stp	xzr, xzr, [sp, #0x10]
0000000000008140	adr	x9, #0x5cc80
0000000000008144	nop
0000000000008148	orr	x9, x9, #0x3
000000000000814c	str	x9, [sp, #0x8]
0000000000008150	adrp	x0, 114 ; 0x7a000
0000000000008154	add	x0, x0, #0x4e0
0000000000008158	ldr	x9, [x0]
000000000000815c	blr	x9
0000000000008160	ldr	x25, [x0]
0000000000008164	ldr	x9, [x25, #0x110]
0000000000008168	str	x8, [x25, #0x110]
000000000000816c	mov	x8, #0x800000000
0000000000008170	stp	x9, x8, [sp, #0x28]
0000000000008174	adr	x8, #0x8c395
0000000000008178	nop
000000000000817c	ldarb	w8, [x8]
0000000000008180	tbz	w8, #0x0, 0x8188
0000000000008184	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008188	add	x8, sp, #0x8
000000000000818c	str	x8, [sp, #0x38]
0000000000008190	add	x0, sp, #0x8
0000000000008194	mov	w1, #0xa
0000000000008198	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000819c	adr	x1, #0x66074
00000000000081a0	nop
00000000000081a4	add	x0, sp, #0x8
00000000000081a8	mov	x2, x24
00000000000081ac	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000081b0	ldr	x0, [x22, #0x8]
00000000000081b4	mov	x1, x23
00000000000081b8	bl	"_kfun:kotlinx.cinterop#cPointerToString__at__kotlinx.cinterop.CPointer<*>(){}kotlin.String"
00000000000081bc	mov	x1, x0
00000000000081c0	str	x0, [sp, #0x48]
00000000000081c4	add	x0, sp, #0x8
00000000000081c8	mov	x2, x21
00000000000081cc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000081d0	adr	x1, #0x65ef0
00000000000081d4	nop
00000000000081d8	add	x0, sp, #0x8
00000000000081dc	mov	x2, x20
00000000000081e0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000081e4	add	x0, sp, #0x8
00000000000081e8	mov	x1, x19
00000000000081ec	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
00000000000081f0	str	x0, [x19]
00000000000081f4	ldr	x8, [sp, #0x28]
00000000000081f8	str	x8, [x25, #0x110]
00000000000081fc	ldp	x29, x30, [sp, #0xa0]
0000000000008200	ldp	x20, x19, [sp, #0x90]
0000000000008204	ldp	x22, x21, [sp, #0x80]
0000000000008208	ldp	x24, x23, [sp, #0x70]
000000000000820c	ldp	x26, x25, [sp, #0x60]
0000000000008210	add	sp, sp, #0xb0
0000000000008214	ret
_kfun:kotlinx.cinterop.Pinned#hashCode(){}kotlin.Int:
0000000000008218	stp	x20, x19, [sp, #-0x20]!
000000000000821c	stp	x29, x30, [sp, #0x10]
0000000000008220	add	x29, sp, #0x10
0000000000008224	mov	x19, x0
0000000000008228	adr	x8, #0x8c2e1
000000000000822c	nop
0000000000008230	ldarb	w8, [x8]
0000000000008234	tbz	w8, #0x0, 0x823c
0000000000008238	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000823c	ldp	w8, w9, [x19, #0x8]
0000000000008240	eor	w0, w9, w8
0000000000008244	ldp	x29, x30, [sp, #0x10]
0000000000008248	ldp	x20, x19, [sp], #0x20
000000000000824c	ret
_kfun:kotlinx.cinterop.Pinned#equals(kotlin.Any?){}kotlin.Boolean:
0000000000008250	stp	x20, x19, [sp, #-0x20]!
0000000000008254	stp	x29, x30, [sp, #0x10]
0000000000008258	add	x29, sp, #0x10
000000000000825c	mov	x19, x1
0000000000008260	mov	x20, x0
0000000000008264	adr	x8, #0x8c2a5
0000000000008268	nop
000000000000826c	ldarb	w8, [x8]
0000000000008270	tbz	w8, #0x0, 0x8278
0000000000008274	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008278	cmp	x20, x19
000000000000827c	b.eq	0x82e0
0000000000008280	cbz	x19, 0x82d0
0000000000008284	ldr	x8, [x19]
0000000000008288	and	x8, x8, #0xfffffffffffffffc
000000000000828c	ldr	x8, [x8]
0000000000008290	ldr	w8, [x8, #0x5c]
0000000000008294	cmp	w8, #0x44
0000000000008298	b.ne	0x82d0
000000000000829c	ldr	x8, [x19]
00000000000082a0	and	x8, x8, #0xfffffffffffffffc
00000000000082a4	ldr	x8, [x8]
00000000000082a8	ldr	w8, [x8, #0x5c]
00000000000082ac	cmp	w8, #0x44
00000000000082b0	b.ne	0x82f0
00000000000082b4	ldr	x8, [x20, #0x8]
00000000000082b8	ldr	x9, [x19, #0x8]
00000000000082bc	cmp	x8, x9
00000000000082c0	cset	w0, eq
00000000000082c4	ldp	x29, x30, [sp, #0x10]
00000000000082c8	ldp	x20, x19, [sp], #0x20
00000000000082cc	ret
00000000000082d0	mov	w0, #0x0
00000000000082d4	ldp	x29, x30, [sp, #0x10]
00000000000082d8	ldp	x20, x19, [sp], #0x20
00000000000082dc	ret
00000000000082e0	mov	w0, #0x1
00000000000082e4	ldp	x29, x30, [sp, #0x10]
00000000000082e8	ldp	x20, x19, [sp], #0x20
00000000000082ec	ret
00000000000082f0	adr	x1, #0x58870
00000000000082f4	nop
00000000000082f8	mov	x0, x19
00000000000082fc	bl	_ThrowClassCastException
_kfun:kotlinx.cinterop.object-2.getPointer#internal:
0000000000008300	sub	sp, sp, #0x90
0000000000008304	stp	x24, x23, [sp, #0x50]
0000000000008308	stp	x22, x21, [sp, #0x60]
000000000000830c	stp	x20, x19, [sp, #0x70]
0000000000008310	stp	x29, x30, [sp, #0x80]
0000000000008314	add	x29, sp, #0x80
0000000000008318	mov	x20, x1
000000000000831c	mov	x19, x0
0000000000008320	movi.16b	v0, #0x0
0000000000008324	stp	q0, q0, [sp]
0000000000008328	str	q0, [sp, #0x20]
000000000000832c	adrp	x0, 114 ; 0x7a000
0000000000008330	add	x0, x0, #0x4e0
0000000000008334	ldr	x8, [x0]
0000000000008338	blr	x8
000000000000833c	ldr	x23, [x0]
0000000000008340	ldr	x8, [x23, #0x110]
0000000000008344	mov	x9, sp
0000000000008348	str	x9, [x23, #0x110]
000000000000834c	mov	x9, #0x600000000
0000000000008350	stp	x8, x9, [sp, #0x8]
0000000000008354	adr	x8, #0x8c1b5
0000000000008358	nop
000000000000835c	ldarb	w8, [x8]
0000000000008360	tbz	w8, #0x0, 0x8368
0000000000008364	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008368	ldr	x22, [x19, #0x8]
000000000000836c	mov	w0, #0x1
0000000000008370	mov	w1, #0x10
0000000000008374	bl	0x55aec ; symbol stub for: _calloc
0000000000008378	mov	x21, x0
000000000000837c	cbz	x0, 0x8384
0000000000008380	stp	xzr, xzr, [x21]
0000000000008384	mov	w0, #0x1
0000000000008388	mov	w1, #0x28
000000000000838c	bl	0x55aec ; symbol stub for: _calloc
0000000000008390	mov	x24, x23
0000000000008394	ldr	x8, [x24, #0xa8]!
0000000000008398	sub	x9, x24, #0x8
000000000000839c	mov	x10, x0
00000000000083a0	str	x22, [x10, #0x10]!
00000000000083a4	str	x9, [x0, #0x18]
00000000000083a8	stp	x8, x24, [x0]
00000000000083ac	str	x0, [x8, #0x8]
00000000000083b0	str	x0, [x24]
00000000000083b4	ldr	x8, [x24, #0x10]
00000000000083b8	add	x8, x8, #0x1
00000000000083bc	str	x8, [x24, #0x10]
00000000000083c0	str	x0, [x0, #0x20]
00000000000083c4	stp	x22, x10, [x21]
00000000000083c8	ldr	x8, [x24, #0x70]
00000000000083cc	add	x0, x8, #0x70
00000000000083d0	mov	w1, #0x18
00000000000083d4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000083d8	mov	x22, x0
00000000000083dc	adr	x8, #0x58784
00000000000083e0	nop
00000000000083e4	str	x8, [x22, #0x10]!
00000000000083e8	stur	xzr, [x22, #-0x8]
00000000000083ec	str	x22, [sp, #0x18]
00000000000083f0	str	x21, [x22, #0x8]
00000000000083f4	ldr	x21, [x20, #0x8]
00000000000083f8	stp	x22, x21, [sp, #0x18]
00000000000083fc	ldr	x8, [x24, #0x70]
0000000000008400	add	x0, x8, #0x70
0000000000008404	mov	w1, #0x20
0000000000008408	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000840c	adr	x8, #0x58874
0000000000008410	nop
0000000000008414	str	x8, [x0, #0x10]!
0000000000008418	stur	xzr, [x0, #-0x8]
000000000000841c	str	x0, [sp, #0x28]
0000000000008420	stp	x22, x21, [x0, #0x8]
0000000000008424	str	x0, [x20, #0x8]
0000000000008428	ldrsw	x19, [x19, #0x10]
000000000000842c	movi.16b	v0, #0x0
0000000000008430	stp	q0, q0, [sp, #0x30]
0000000000008434	ldr	x8, [x24, #0x68]
0000000000008438	add	x9, sp, #0x30
000000000000843c	str	x9, [x24, #0x68]
0000000000008440	mov	x9, #0x400000000
0000000000008444	stp	x8, x9, [sp, #0x38]
0000000000008448	ldr	x20, [x22, #0x8]
000000000000844c	bl	_Kotlin_initRuntimeIfNeeded
0000000000008450	ldr	x8, [x20]
0000000000008454	str	x8, [sp, #0x48]
0000000000008458	ldr	w9, [x8, #0x8]
000000000000845c	cmp	w9, w19
0000000000008460	b.ls	0x848c
0000000000008464	add	x8, x8, x19
0000000000008468	add	x0, x8, #0x10
000000000000846c	ldr	x8, [sp, #0x8]
0000000000008470	str	x8, [x23, #0x110]
0000000000008474	ldp	x29, x30, [sp, #0x80]
0000000000008478	ldp	x20, x19, [sp, #0x70]
000000000000847c	ldp	x22, x21, [sp, #0x60]
0000000000008480	ldp	x24, x23, [sp, #0x50]
0000000000008484	add	sp, sp, #0x90
0000000000008488	ret
000000000000848c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlinx.cinterop.object-2.$getPointer$lambda$0$FUNCTION_REFERENCE$1.$<bridge-UNN>invoke(){}#internal:
0000000000008490	sub	sp, sp, #0x70
0000000000008494	stp	x24, x23, [sp, #0x30]
0000000000008498	stp	x22, x21, [sp, #0x40]
000000000000849c	stp	x20, x19, [sp, #0x50]
00000000000084a0	stp	x29, x30, [sp, #0x60]
00000000000084a4	add	x29, sp, #0x60
00000000000084a8	mov	x19, x1
00000000000084ac	mov	x20, x0
00000000000084b0	adr	x8, #0x8c059
00000000000084b4	nop
00000000000084b8	ldarb	w8, [x8]
00000000000084bc	tbz	w8, #0x0, 0x84c4
00000000000084c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000084c4	ldp	x8, x20, [x20, #0x8]
00000000000084c8	movi.16b	v0, #0x0
00000000000084cc	stp	q0, q0, [sp]
00000000000084d0	str	q0, [sp, #0x20]
00000000000084d4	mov	x24, sp
00000000000084d8	adrp	x21, 114 ; 0x7a000
00000000000084dc	add	x21, x21, #0x4e0
00000000000084e0	ldr	x23, [x21]
00000000000084e4	mov	x0, x21
00000000000084e8	blr	x23
00000000000084ec	ldr	x9, [x0]
00000000000084f0	ldr	x10, [x9, #0x110]
00000000000084f4	str	x24, [x9, #0x110]
00000000000084f8	mov	x9, #0x600000000
00000000000084fc	stp	x10, x9, [sp, #0x8]
0000000000008500	ldr	x22, [x8, #0x8]
0000000000008504	ldr	x8, [x22]
0000000000008508	cbz	x8, 0x8524
000000000000850c	ldr	x1, [x22, #0x8]
0000000000008510	mov	x0, x21
0000000000008514	blr	x23
0000000000008518	ldr	x8, [x0]
000000000000851c	add	x0, x8, #0x8
0000000000008520	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000008524	mov	x0, x22
0000000000008528	bl	0x55b7c ; symbol stub for: _free
000000000000852c	cbz	x20, 0x85f0
0000000000008530	add	x1, x24, #0x28
0000000000008534	ldr	x8, [x20]
0000000000008538	and	x8, x8, #0xfffffffffffffffc
000000000000853c	ldr	x8, [x8]
0000000000008540	ldr	w9, [x8, #0x3c]
0000000000008544	ldr	x8, [x8, #0x40]
0000000000008548	tbnz	w9, #0x1f, 0x8558
000000000000854c	mov	w10, #0x59
0000000000008550	and	x9, x9, x10
0000000000008554	b	0x85dc
0000000000008558	neg	w10, w9
000000000000855c	mvn	w9, w9
0000000000008560	cmp	w10, #0x9
0000000000008564	b.ge	0x859c
0000000000008568	cmp	w10, #0x2
000000000000856c	b.lt	0x85d0
0000000000008570	mov	x10, #0x0
0000000000008574	mov	x11, x8
0000000000008578	ldr	w12, [x11]
000000000000857c	cmp	w12, #0x58
0000000000008580	b.gt	0x85d8
0000000000008584	add	x10, x10, #0x1
0000000000008588	add	x11, x11, #0x10
000000000000858c	cmp	x9, x10
0000000000008590	b.ne	0x8578
0000000000008594	mov	x10, x9
0000000000008598	b	0x85d8
000000000000859c	mov	w10, #0x0
00000000000085a0	add	w11, w9, w10
00000000000085a4	cmp	w11, #0x0
00000000000085a8	cinc	w11, w11, lt
00000000000085ac	asr	w11, w11, #1
00000000000085b0	sbfiz	x12, x11, #4, #32
00000000000085b4	ldr	w12, [x8, x12]
00000000000085b8	cmp	w12, #0x59
00000000000085bc	csinc	w10, w10, w11, ge
00000000000085c0	csel	w9, w9, w11, lt
00000000000085c4	cmp	w10, w9
00000000000085c8	b.lt	0x85a0
00000000000085cc	b	0x85d8
00000000000085d0	mov	w10, #0x0
00000000000085d4	b	0x85d8
00000000000085d8	sxtw	x9, w10
00000000000085dc	add	x8, x8, x9, lsl #4
00000000000085e0	ldr	x8, [x8, #0x8]
00000000000085e4	ldr	x8, [x8]
00000000000085e8	mov	x0, x20
00000000000085ec	blr	x8
00000000000085f0	mov	x0, x21
00000000000085f4	blr	x23
00000000000085f8	ldr	x8, [x0]
00000000000085fc	ldr	x9, [sp, #0x8]
0000000000008600	str	x9, [x8, #0x110]
0000000000008604	adr	x0, #0x59d44
0000000000008608	nop
000000000000860c	str	x0, [x19]
0000000000008610	ldp	x29, x30, [sp, #0x60]
0000000000008614	ldp	x20, x19, [sp, #0x50]
0000000000008618	ldp	x22, x21, [sp, #0x40]
000000000000861c	ldp	x24, x23, [sp, #0x30]
0000000000008620	add	sp, sp, #0x70
0000000000008624	ret
_kfun:kotlin.collections#copyInto__at__kotlin.Array<out|0:0>(kotlin.Array<0:0>;kotlin.Int;kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0>:
0000000000008628	stp	x22, x21, [sp, #-0x30]!
000000000000862c	stp	x20, x19, [sp, #0x10]
0000000000008630	stp	x29, x30, [sp, #0x20]
0000000000008634	add	x29, sp, #0x20
0000000000008638	mov	x20, x3
000000000000863c	mov	x22, x2
0000000000008640	mov	x19, x1
0000000000008644	mov	x21, x0
0000000000008648	adr	x8, #0x8bec1
000000000000864c	nop
0000000000008650	ldarb	w8, [x8]
0000000000008654	tbz	w8, #0x0, 0x865c
0000000000008658	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000865c	ldr	x8, [x21]
0000000000008660	and	x8, x8, #0xfffffffffffffffc
0000000000008664	ldr	x8, [x8]
0000000000008668	ldr	w8, [x8, #0x5c]
000000000000866c	cmp	w8, #0x59
0000000000008670	b.ne	0x874c
0000000000008674	ldr	x8, [x19]
0000000000008678	and	x8, x8, #0xfffffffffffffffc
000000000000867c	ldr	x8, [x8]
0000000000008680	ldr	w8, [x8, #0x5c]
0000000000008684	cmp	w8, #0x59
0000000000008688	b.ne	0x875c
000000000000868c	tbnz	w22, #0x1f, 0x8748
0000000000008690	ldr	w8, [x21, #0x8]
0000000000008694	cmp	w8, w22
0000000000008698	b.lo	0x8748
000000000000869c	ldr	w8, [x19, #0x8]
00000000000086a0	cmp	w8, w22
00000000000086a4	b.lo	0x8748
00000000000086a8	ldr	xzr, [x19]
00000000000086ac	cmp	w22, #0x1
00000000000086b0	b.lt	0x8710
00000000000086b4	mov	w8, w22
00000000000086b8	cmp	w22, #0x1
00000000000086bc	b.eq	0x86e8
00000000000086c0	add	x9, x19, #0x10
00000000000086c4	add	x10, x21, #0x10
00000000000086c8	lsl	x11, x8, #3
00000000000086cc	add	x11, x11, #0x10
00000000000086d0	add	x12, x21, x11
00000000000086d4	cmp	x9, x12
00000000000086d8	b.hs	0x8724
00000000000086dc	add	x11, x19, x11
00000000000086e0	cmp	x10, x11
00000000000086e4	b.hs	0x8724
00000000000086e8	mov	x11, #0x0
00000000000086ec	sub	x8, x8, x11
00000000000086f0	lsl	x9, x11, #3
00000000000086f4	add	x10, x9, #0x10
00000000000086f8	add	x9, x21, x10
00000000000086fc	add	x10, x19, x10
0000000000008700	ldr	x11, [x9], #0x8
0000000000008704	str	x11, [x10], #0x8
0000000000008708	subs	x8, x8, #0x1
000000000000870c	b.ne	0x8700
0000000000008710	str	x19, [x20]
0000000000008714	ldp	x29, x30, [sp, #0x20]
0000000000008718	ldp	x20, x19, [sp, #0x10]
000000000000871c	ldp	x22, x21, [sp], #0x30
0000000000008720	ret
0000000000008724	and	x11, x8, #0xfffffffe
0000000000008728	mov	x12, x11
000000000000872c	ldr	q0, [x10], #0x10
0000000000008730	str	q0, [x9], #0x10
0000000000008734	subs	x12, x12, #0x2
0000000000008738	b.ne	0x872c
000000000000873c	cmp	x11, x8
0000000000008740	b.eq	0x8710
0000000000008744	b	0x86ec
0000000000008748	bl	_ThrowArrayIndexOutOfBoundsException
000000000000874c	adr	x1, #0x58654
0000000000008750	nop
0000000000008754	mov	x0, x21
0000000000008758	bl	_ThrowClassCastException
000000000000875c	adr	x1, #0x58644
0000000000008760	nop
0000000000008764	mov	x0, x19
0000000000008768	bl	_ThrowClassCastException
_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0>:
000000000000876c	sub	sp, sp, #0xc0
0000000000008770	stp	x24, x23, [sp, #0x80]
0000000000008774	stp	x22, x21, [sp, #0x90]
0000000000008778	stp	x20, x19, [sp, #0xa0]
000000000000877c	stp	x29, x30, [sp, #0xb0]
0000000000008780	add	x29, sp, #0xb0
0000000000008784	mov	x20, x2
0000000000008788	mov	x19, x1
000000000000878c	mov	x21, x0
0000000000008790	movi.16b	v0, #0x0
0000000000008794	stp	q0, q0, [sp, #0x20]
0000000000008798	stp	q0, q0, [sp, #0x60]
000000000000879c	stp	q0, q0, [sp, #0x40]
00000000000087a0	stp	xzr, xzr, [sp, #0x10]
00000000000087a4	adr	x8, #0x5c61c
00000000000087a8	nop
00000000000087ac	orr	x8, x8, #0x3
00000000000087b0	str	x8, [sp, #0x8]
00000000000087b4	adrp	x0, 114 ; 0x7a000
00000000000087b8	add	x0, x0, #0x4e0
00000000000087bc	ldr	x8, [x0]
00000000000087c0	blr	x8
00000000000087c4	ldr	x23, [x0]
00000000000087c8	ldr	x8, [x23, #0x110]
00000000000087cc	add	x9, sp, #0x20
00000000000087d0	str	x9, [x23, #0x110]
00000000000087d4	mov	x9, #0xc00000000
00000000000087d8	stp	x8, x9, [sp, #0x28]
00000000000087dc	adr	x8, #0x8bd2d
00000000000087e0	nop
00000000000087e4	ldarb	w8, [x8]
00000000000087e8	tbz	w8, #0x0, 0x87f0
00000000000087ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000087f0	tbnz	w19, #0x1f, 0x8874
00000000000087f4	ldr	x8, [x23, #0x118]
00000000000087f8	mov	w9, w19
00000000000087fc	lsl	x9, x9, #3
0000000000008800	add	x9, x9, #0x1f
0000000000008804	and	x1, x9, #0xffffffff8
0000000000008808	add	x0, x8, #0x70
000000000000880c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008810	mov	x22, x0
0000000000008814	stp	xzr, xzr, [x22, #0x10]!
0000000000008818	adr	x8, #0x58588
000000000000881c	nop
0000000000008820	stp	xzr, x8, [x22, #-0x8]
0000000000008824	str	w19, [x22, #0x8]
0000000000008828	str	x22, [sp, #0x70]
000000000000882c	ldr	w8, [x21, #0x8]
0000000000008830	cmp	w8, w19
0000000000008834	csel	w2, w8, w19, lt
0000000000008838	add	x8, sp, #0x20
000000000000883c	add	x3, x8, #0x58
0000000000008840	mov	x0, x21
0000000000008844	mov	x1, x22
0000000000008848	bl	"_kfun:kotlin.collections#copyInto__at__kotlin.Array<out|0:0>(kotlin.Array<0:0>;kotlin.Int;kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0>"
000000000000884c	str	x22, [x20]
0000000000008850	ldr	x8, [sp, #0x28]
0000000000008854	str	x8, [x23, #0x110]
0000000000008858	mov	x0, x22
000000000000885c	ldp	x29, x30, [sp, #0xb0]
0000000000008860	ldp	x20, x19, [sp, #0xa0]
0000000000008864	ldp	x22, x21, [sp, #0x90]
0000000000008868	ldp	x24, x23, [sp, #0x80]
000000000000886c	add	sp, sp, #0xc0
0000000000008870	ret
0000000000008874	add	x8, sp, #0x20
0000000000008878	add	x20, x8, #0x38
000000000000887c	add	x21, x8, #0x30
0000000000008880	add	x22, x8, #0x28
0000000000008884	mov	x24, x23
0000000000008888	add	x23, x8, #0x20
000000000000888c	add	x8, sp, #0x8
0000000000008890	str	x8, [sp, #0x38]
0000000000008894	add	x0, sp, #0x8
0000000000008898	mov	w1, #0xa
000000000000889c	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000088a0	add	x0, sp, #0x8
00000000000088a4	mov	w1, #0x0
00000000000088a8	mov	x2, x23
00000000000088ac	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000088b0	adr	x1, #0x65a20
00000000000088b4	nop
00000000000088b8	add	x0, sp, #0x8
00000000000088bc	mov	x2, x22
00000000000088c0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000088c4	add	x0, sp, #0x8
00000000000088c8	mov	x1, x19
00000000000088cc	mov	x2, x21
00000000000088d0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000088d4	add	x0, sp, #0x8
00000000000088d8	mov	x1, x20
00000000000088dc	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
00000000000088e0	mov	x19, x0
00000000000088e4	ldr	x8, [x24, #0x118]
00000000000088e8	add	x0, x8, #0x70
00000000000088ec	mov	w1, #0x38
00000000000088f0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000088f4	mov	x20, x0
00000000000088f8	adr	x8, #0x58c78
00000000000088fc	nop
0000000000008900	str	x8, [x20, #0x10]!
0000000000008904	stur	xzr, [x20, #-0x8]
0000000000008908	str	x20, [sp, #0x60]
000000000000890c	mov	x0, x20
0000000000008910	mov	x1, x19
0000000000008914	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000008918	mov	x0, x20
000000000000891c	bl	_ThrowException
_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.IntArray(kotlin.Int;kotlin.Int){}kotlin.IntArray:
0000000000008920	sub	sp, sp, #0xc0
0000000000008924	stp	x24, x23, [sp, #0x80]
0000000000008928	stp	x22, x21, [sp, #0x90]
000000000000892c	stp	x20, x19, [sp, #0xa0]
0000000000008930	stp	x29, x30, [sp, #0xb0]
0000000000008934	add	x29, sp, #0xb0
0000000000008938	mov	x20, x2
000000000000893c	mov	x19, x1
0000000000008940	mov	x21, x0
0000000000008944	movi.16b	v0, #0x0
0000000000008948	stp	q0, q0, [sp, #0x20]
000000000000894c	str	xzr, [sp, #0x70]
0000000000008950	stp	q0, q0, [sp, #0x50]
0000000000008954	str	q0, [sp, #0x40]
0000000000008958	stp	xzr, xzr, [sp, #0x10]
000000000000895c	adr	x8, #0x5c464
0000000000008960	nop
0000000000008964	orr	x8, x8, #0x3
0000000000008968	str	x8, [sp, #0x8]
000000000000896c	adrp	x0, 114 ; 0x7a000
0000000000008970	add	x0, x0, #0x4e0
0000000000008974	ldr	x8, [x0]
0000000000008978	blr	x8
000000000000897c	ldr	x23, [x0]
0000000000008980	ldr	x8, [x23, #0x110]
0000000000008984	add	x9, sp, #0x20
0000000000008988	str	x9, [x23, #0x110]
000000000000898c	mov	x9, #0xb00000000
0000000000008990	stp	x8, x9, [sp, #0x28]
0000000000008994	adr	x8, #0x8bb75
0000000000008998	nop
000000000000899c	ldarb	w8, [x8]
00000000000089a0	tbz	w8, #0x0, 0x89a8
00000000000089a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000089a8	tbnz	w19, #0x1f, 0x8a5c
00000000000089ac	ldr	x8, [x23, #0x118]
00000000000089b0	mov	w9, w19
00000000000089b4	lsl	x9, x9, #2
00000000000089b8	add	x9, x9, #0x1f
00000000000089bc	and	x1, x9, #0x7fffffff8
00000000000089c0	add	x0, x8, #0x70
00000000000089c4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000089c8	mov	x22, x0
00000000000089cc	str	xzr, [x22, #0x10]!
00000000000089d0	str	xzr, [x0, #0x18]
00000000000089d4	adr	x8, #0x5857c
00000000000089d8	nop
00000000000089dc	str	xzr, [x0, #0x8]
00000000000089e0	str	x8, [x22]
00000000000089e4	str	w19, [x0, #0x18]
00000000000089e8	str	x22, [sp, #0x68]
00000000000089ec	ldr	w8, [x21, #0x8]
00000000000089f0	cmp	w8, w19
00000000000089f4	b.ge	0x8a00
00000000000089f8	mov	x19, x8
00000000000089fc	tbnz	w8, #0x1f, 0x8a58
0000000000008a00	ldr	w8, [x21, #0x8]
0000000000008a04	cmp	w8, w19
0000000000008a08	b.lo	0x8a58
0000000000008a0c	ldr	w8, [x0, #0x18]
0000000000008a10	cmp	w8, w19
0000000000008a14	b.lo	0x8a58
0000000000008a18	ldr	xzr, [x0, #0x10]
0000000000008a1c	add	x0, x0, #0x20
0000000000008a20	add	x1, x21, #0x10
0000000000008a24	sbfiz	x2, x19, #2, #32
0000000000008a28	bl	0x55bdc ; symbol stub for: _memmove
0000000000008a2c	str	x22, [sp, #0x70]
0000000000008a30	str	x22, [x20]
0000000000008a34	ldr	x8, [sp, #0x28]
0000000000008a38	str	x8, [x23, #0x110]
0000000000008a3c	mov	x0, x22
0000000000008a40	ldp	x29, x30, [sp, #0xb0]
0000000000008a44	ldp	x20, x19, [sp, #0xa0]
0000000000008a48	ldp	x22, x21, [sp, #0x90]
0000000000008a4c	ldp	x24, x23, [sp, #0x80]
0000000000008a50	add	sp, sp, #0xc0
0000000000008a54	ret
0000000000008a58	bl	_ThrowArrayIndexOutOfBoundsException
0000000000008a5c	add	x8, sp, #0x20
0000000000008a60	add	x20, x8, #0x38
0000000000008a64	add	x21, x8, #0x30
0000000000008a68	add	x22, x8, #0x28
0000000000008a6c	mov	x24, x23
0000000000008a70	add	x23, x8, #0x20
0000000000008a74	add	x8, sp, #0x8
0000000000008a78	str	x8, [sp, #0x38]
0000000000008a7c	add	x0, sp, #0x8
0000000000008a80	mov	w1, #0xa
0000000000008a84	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000008a88	add	x0, sp, #0x8
0000000000008a8c	mov	w1, #0x0
0000000000008a90	mov	x2, x23
0000000000008a94	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000008a98	adr	x1, #0x65838
0000000000008a9c	nop
0000000000008aa0	add	x0, sp, #0x8
0000000000008aa4	mov	x2, x22
0000000000008aa8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000008aac	add	x0, sp, #0x8
0000000000008ab0	mov	x1, x19
0000000000008ab4	mov	x2, x21
0000000000008ab8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000008abc	add	x0, sp, #0x8
0000000000008ac0	mov	x1, x20
0000000000008ac4	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000008ac8	mov	x19, x0
0000000000008acc	ldr	x8, [x24, #0x118]
0000000000008ad0	add	x0, x8, #0x70
0000000000008ad4	mov	w1, #0x38
0000000000008ad8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008adc	mov	x20, x0
0000000000008ae0	adr	x8, #0x58a90
0000000000008ae4	nop
0000000000008ae8	str	x8, [x20, #0x10]!
0000000000008aec	stur	xzr, [x20, #-0x8]
0000000000008af0	str	x20, [sp, #0x60]
0000000000008af4	mov	x0, x20
0000000000008af8	mov	x1, x19
0000000000008afc	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000008b00	mov	x0, x20
0000000000008b04	bl	_ThrowException
_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.CharArray(kotlin.Int;kotlin.Int){}kotlin.CharArray:
0000000000008b08	sub	sp, sp, #0xc0
0000000000008b0c	stp	x24, x23, [sp, #0x80]
0000000000008b10	stp	x22, x21, [sp, #0x90]
0000000000008b14	stp	x20, x19, [sp, #0xa0]
0000000000008b18	stp	x29, x30, [sp, #0xb0]
0000000000008b1c	add	x29, sp, #0xb0
0000000000008b20	mov	x20, x2
0000000000008b24	mov	x19, x1
0000000000008b28	mov	x21, x0
0000000000008b2c	movi.16b	v0, #0x0
0000000000008b30	stp	q0, q0, [sp, #0x20]
0000000000008b34	str	xzr, [sp, #0x70]
0000000000008b38	stp	q0, q0, [sp, #0x50]
0000000000008b3c	str	q0, [sp, #0x40]
0000000000008b40	stp	xzr, xzr, [sp, #0x10]
0000000000008b44	adr	x8, #0x5c27c
0000000000008b48	nop
0000000000008b4c	orr	x8, x8, #0x3
0000000000008b50	str	x8, [sp, #0x8]
0000000000008b54	adrp	x0, 114 ; 0x7a000
0000000000008b58	add	x0, x0, #0x4e0
0000000000008b5c	ldr	x8, [x0]
0000000000008b60	blr	x8
0000000000008b64	ldr	x23, [x0]
0000000000008b68	ldr	x8, [x23, #0x110]
0000000000008b6c	add	x9, sp, #0x20
0000000000008b70	str	x9, [x23, #0x110]
0000000000008b74	mov	x9, #0xb00000000
0000000000008b78	stp	x8, x9, [sp, #0x28]
0000000000008b7c	adr	x8, #0x8b98d
0000000000008b80	nop
0000000000008b84	ldarb	w8, [x8]
0000000000008b88	tbz	w8, #0x0, 0x8b90
0000000000008b8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008b90	tbnz	w19, #0x1f, 0x8c44
0000000000008b94	ldr	x8, [x23, #0x118]
0000000000008b98	mov	w9, w19
0000000000008b9c	lsl	x9, x9, #1
0000000000008ba0	add	x9, x9, #0x1f
0000000000008ba4	and	x1, x9, #0x3fffffff8
0000000000008ba8	add	x0, x8, #0x70
0000000000008bac	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008bb0	mov	x22, x0
0000000000008bb4	str	xzr, [x22, #0x10]!
0000000000008bb8	str	xzr, [x0, #0x18]
0000000000008bbc	adr	x8, #0x58304
0000000000008bc0	nop
0000000000008bc4	str	xzr, [x0, #0x8]
0000000000008bc8	str	x8, [x22]
0000000000008bcc	str	w19, [x0, #0x18]
0000000000008bd0	str	x22, [sp, #0x68]
0000000000008bd4	ldr	w8, [x21, #0x8]
0000000000008bd8	cmp	w8, w19
0000000000008bdc	b.ge	0x8be8
0000000000008be0	mov	x19, x8
0000000000008be4	tbnz	w8, #0x1f, 0x8c40
0000000000008be8	ldr	w8, [x21, #0x8]
0000000000008bec	cmp	w8, w19
0000000000008bf0	b.lo	0x8c40
0000000000008bf4	ldr	w8, [x0, #0x18]
0000000000008bf8	cmp	w8, w19
0000000000008bfc	b.lo	0x8c40
0000000000008c00	ldr	xzr, [x0, #0x10]
0000000000008c04	add	x0, x0, #0x20
0000000000008c08	add	x1, x21, #0x10
0000000000008c0c	sbfiz	x2, x19, #1, #32
0000000000008c10	bl	0x55bdc ; symbol stub for: _memmove
0000000000008c14	str	x22, [sp, #0x70]
0000000000008c18	str	x22, [x20]
0000000000008c1c	ldr	x8, [sp, #0x28]
0000000000008c20	str	x8, [x23, #0x110]
0000000000008c24	mov	x0, x22
0000000000008c28	ldp	x29, x30, [sp, #0xb0]
0000000000008c2c	ldp	x20, x19, [sp, #0xa0]
0000000000008c30	ldp	x22, x21, [sp, #0x90]
0000000000008c34	ldp	x24, x23, [sp, #0x80]
0000000000008c38	add	sp, sp, #0xc0
0000000000008c3c	ret
0000000000008c40	bl	_ThrowArrayIndexOutOfBoundsException
0000000000008c44	add	x8, sp, #0x20
0000000000008c48	add	x20, x8, #0x38
0000000000008c4c	add	x21, x8, #0x30
0000000000008c50	add	x22, x8, #0x28
0000000000008c54	mov	x24, x23
0000000000008c58	add	x23, x8, #0x20
0000000000008c5c	add	x8, sp, #0x8
0000000000008c60	str	x8, [sp, #0x38]
0000000000008c64	add	x0, sp, #0x8
0000000000008c68	mov	w1, #0xa
0000000000008c6c	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000008c70	add	x0, sp, #0x8
0000000000008c74	mov	w1, #0x0
0000000000008c78	mov	x2, x23
0000000000008c7c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000008c80	adr	x1, #0x65650
0000000000008c84	nop
0000000000008c88	add	x0, sp, #0x8
0000000000008c8c	mov	x2, x22
0000000000008c90	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000008c94	add	x0, sp, #0x8
0000000000008c98	mov	x1, x19
0000000000008c9c	mov	x2, x21
0000000000008ca0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000008ca4	add	x0, sp, #0x8
0000000000008ca8	mov	x1, x20
0000000000008cac	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000008cb0	mov	x19, x0
0000000000008cb4	ldr	x8, [x24, #0x118]
0000000000008cb8	add	x0, x8, #0x70
0000000000008cbc	mov	w1, #0x38
0000000000008cc0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008cc4	mov	x20, x0
0000000000008cc8	adr	x8, #0x588a8
0000000000008ccc	nop
0000000000008cd0	str	x8, [x20, #0x10]!
0000000000008cd4	stur	xzr, [x20, #-0x8]
0000000000008cd8	str	x20, [sp, #0x60]
0000000000008cdc	mov	x0, x20
0000000000008ce0	mov	x1, x19
0000000000008ce4	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000008ce8	mov	x0, x20
0000000000008cec	bl	_ThrowException
_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.ByteArray(kotlin.Int;kotlin.Int){}kotlin.ByteArray:
0000000000008cf0	sub	sp, sp, #0xd0
0000000000008cf4	stp	x26, x25, [sp, #0x80]
0000000000008cf8	stp	x24, x23, [sp, #0x90]
0000000000008cfc	stp	x22, x21, [sp, #0xa0]
0000000000008d00	stp	x20, x19, [sp, #0xb0]
0000000000008d04	stp	x29, x30, [sp, #0xc0]
0000000000008d08	add	x29, sp, #0xc0
0000000000008d0c	mov	x21, x3
0000000000008d10	mov	x20, x2
0000000000008d14	mov	x19, x1
0000000000008d18	mov	x22, x0
0000000000008d1c	movi.16b	v0, #0x0
0000000000008d20	stp	q0, q0, [sp, #0x20]
0000000000008d24	str	xzr, [sp, #0x70]
0000000000008d28	stp	q0, q0, [sp, #0x50]
0000000000008d2c	str	q0, [sp, #0x40]
0000000000008d30	stp	xzr, xzr, [sp, #0x10]
0000000000008d34	adr	x8, #0x5c08c
0000000000008d38	nop
0000000000008d3c	orr	x8, x8, #0x3
0000000000008d40	str	x8, [sp, #0x8]
0000000000008d44	adrp	x0, 114 ; 0x7a000
0000000000008d48	add	x0, x0, #0x4e0
0000000000008d4c	ldr	x8, [x0]
0000000000008d50	blr	x8
0000000000008d54	ldr	x24, [x0]
0000000000008d58	ldr	x8, [x24, #0x110]
0000000000008d5c	add	x9, sp, #0x20
0000000000008d60	str	x9, [x24, #0x110]
0000000000008d64	mov	x9, #0xb00000000
0000000000008d68	stp	x8, x9, [sp, #0x28]
0000000000008d6c	adr	x8, #0x8b79d
0000000000008d70	nop
0000000000008d74	ldarb	w8, [x8]
0000000000008d78	tbz	w8, #0x0, 0x8d80
0000000000008d7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008d80	subs	w25, w20, w19
0000000000008d84	b.mi	0x8e44
0000000000008d88	ldr	x8, [x24, #0x118]
0000000000008d8c	add	x9, x25, #0x1f
0000000000008d90	and	x1, x9, #0x1fffffff8
0000000000008d94	add	x0, x8, #0x70
0000000000008d98	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008d9c	mov	x23, x0
0000000000008da0	str	xzr, [x23, #0x10]!
0000000000008da4	str	xzr, [x0, #0x18]
0000000000008da8	str	xzr, [x0, #0x8]
0000000000008dac	adr	x8, #0x58084
0000000000008db0	nop
0000000000008db4	str	x8, [x23]
0000000000008db8	str	w25, [x0, #0x18]
0000000000008dbc	str	x23, [sp, #0x68]
0000000000008dc0	ldr	w9, [x22, #0x8]
0000000000008dc4	sub	w8, w9, w19
0000000000008dc8	cmp	w9, w20
0000000000008dcc	csel	w8, w8, w25, lt
0000000000008dd0	orr	w10, w8, w19
0000000000008dd4	tbnz	w10, #0x1f, 0x8e40
0000000000008dd8	cmp	w9, w20
0000000000008ddc	csel	w9, w9, w20, lt
0000000000008de0	ldr	w10, [x22, #0x8]
0000000000008de4	cmp	w9, w10
0000000000008de8	b.hi	0x8e40
0000000000008dec	ldr	w9, [x0, #0x18]
0000000000008df0	cmp	w8, w9
0000000000008df4	b.hi	0x8e40
0000000000008df8	ldr	xzr, [x0, #0x10]
0000000000008dfc	add	x0, x0, #0x20
0000000000008e00	add	x9, x22, w19, sxtw
0000000000008e04	add	x1, x9, #0x10
0000000000008e08	sxtw	x2, w8
0000000000008e0c	bl	0x55bdc ; symbol stub for: _memmove
0000000000008e10	str	x23, [sp, #0x70]
0000000000008e14	str	x23, [x21]
0000000000008e18	ldr	x8, [sp, #0x28]
0000000000008e1c	str	x8, [x24, #0x110]
0000000000008e20	mov	x0, x23
0000000000008e24	ldp	x29, x30, [sp, #0xc0]
0000000000008e28	ldp	x20, x19, [sp, #0xb0]
0000000000008e2c	ldp	x22, x21, [sp, #0xa0]
0000000000008e30	ldp	x24, x23, [sp, #0x90]
0000000000008e34	ldp	x26, x25, [sp, #0x80]
0000000000008e38	add	sp, sp, #0xd0
0000000000008e3c	ret
0000000000008e40	bl	_ThrowArrayIndexOutOfBoundsException
0000000000008e44	add	x8, sp, #0x20
0000000000008e48	add	x21, x8, #0x38
0000000000008e4c	add	x22, x8, #0x30
0000000000008e50	add	x23, x8, #0x28
0000000000008e54	mov	x25, x24
0000000000008e58	add	x24, x8, #0x20
0000000000008e5c	add	x8, sp, #0x8
0000000000008e60	str	x8, [sp, #0x38]
0000000000008e64	add	x0, sp, #0x8
0000000000008e68	mov	w1, #0xa
0000000000008e6c	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000008e70	add	x0, sp, #0x8
0000000000008e74	mov	x1, x19
0000000000008e78	mov	x2, x24
0000000000008e7c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000008e80	adr	x1, #0x65450
0000000000008e84	nop
0000000000008e88	add	x0, sp, #0x8
0000000000008e8c	mov	x2, x23
0000000000008e90	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000008e94	add	x0, sp, #0x8
0000000000008e98	mov	x1, x20
0000000000008e9c	mov	x2, x22
0000000000008ea0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000008ea4	add	x0, sp, #0x8
0000000000008ea8	mov	x1, x21
0000000000008eac	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000008eb0	mov	x19, x0
0000000000008eb4	ldr	x8, [x25, #0x118]
0000000000008eb8	add	x0, x8, #0x70
0000000000008ebc	mov	w1, #0x38
0000000000008ec0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000008ec4	mov	x20, x0
0000000000008ec8	adr	x8, #0x586a8
0000000000008ecc	nop
0000000000008ed0	str	x8, [x20, #0x10]!
0000000000008ed4	stur	xzr, [x20, #-0x8]
0000000000008ed8	str	x20, [sp, #0x60]
0000000000008edc	mov	x0, x20
0000000000008ee0	mov	x1, x19
0000000000008ee4	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000008ee8	mov	x0, x20
0000000000008eec	bl	_ThrowException
_kfun:kotlin.text.$init_global#internal:
0000000000008ef0	sub	sp, sp, #0x40
0000000000008ef4	stp	x20, x19, [sp, #0x20]
0000000000008ef8	stp	x29, x30, [sp, #0x30]
0000000000008efc	add	x29, sp, #0x30
0000000000008f00	movi.16b	v0, #0x0
0000000000008f04	stp	q0, q0, [sp]
0000000000008f08	mov	x8, sp
0000000000008f0c	add	x19, x8, #0x18
0000000000008f10	adrp	x0, 114 ; 0x7a000
0000000000008f14	add	x0, x0, #0x4e0
0000000000008f18	ldr	x9, [x0]
0000000000008f1c	blr	x9
0000000000008f20	ldr	x20, [x0]
0000000000008f24	ldr	x9, [x20, #0x110]
0000000000008f28	str	x8, [x20, #0x110]
0000000000008f2c	mov	x8, #0x400000000
0000000000008f30	stp	x9, x8, [sp, #0x8]
0000000000008f34	adr	x8, #0x8b5d5
0000000000008f38	nop
0000000000008f3c	ldarb	w8, [x8]
0000000000008f40	tbz	w8, #0x0, 0x8f48
0000000000008f44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008f48	adr	x0, #0x653f8
0000000000008f4c	nop
0000000000008f50	mov	w1, #0x25
0000000000008f54	mov	x2, x19
0000000000008f58	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.IntArray(kotlin.Int;kotlin.Int){}kotlin.IntArray"
0000000000008f5c	mov	x19, x0
0000000000008f60	str	x0, [sp, #0x18]
0000000000008f64	mov	w0, #0x1
0000000000008f68	mov	w1, #0x28
0000000000008f6c	bl	0x55aec ; symbol stub for: _calloc
0000000000008f70	ldr	x8, [x20, #0x18]!
0000000000008f74	sub	x9, x20, #0x8
0000000000008f78	adr	x10, #0x8b5c8
0000000000008f7c	nop
0000000000008f80	adrp	x11, 140 ; 0x94000
0000000000008f84	stp	x10, x9, [x0, #0x10]
0000000000008f88	stp	x8, x20, [x0]
0000000000008f8c	str	x0, [x8, #0x8]
0000000000008f90	str	x0, [x20]
0000000000008f94	ldr	x8, [x20, #0x10]
0000000000008f98	add	x8, x8, #0x1
0000000000008f9c	str	x8, [x20, #0x10]
0000000000008fa0	str	x0, [x0, #0x20]
0000000000008fa4	str	x19, [x11, #0x540]
0000000000008fa8	ldr	x8, [sp, #0x8]
0000000000008fac	str	x8, [x20, #0xf8]
0000000000008fb0	ldp	x29, x30, [sp, #0x30]
0000000000008fb4	ldp	x20, x19, [sp, #0x20]
0000000000008fb8	add	sp, sp, #0x40
0000000000008fbc	ret
_kfun:kotlin.text#binarySearchRange(kotlin.IntArray;kotlin.Int){}kotlin.Int:
0000000000008fc0	stp	x24, x23, [sp, #-0x40]!
0000000000008fc4	stp	x22, x21, [sp, #0x10]
0000000000008fc8	stp	x20, x19, [sp, #0x20]
0000000000008fcc	stp	x29, x30, [sp, #0x30]
0000000000008fd0	add	x29, sp, #0x30
0000000000008fd4	mov	x19, x1
0000000000008fd8	mov	x20, x0
0000000000008fdc	adr	x21, #0x8b52d
0000000000008fe0	nop
0000000000008fe4	ldarb	w8, [x21]
0000000000008fe8	tbz	w8, #0x0, 0x8ff0
0000000000008fec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000008ff0	mov	w8, #0x0
0000000000008ff4	mov	w22, #0x0
0000000000008ff8	ldr	w9, [x20, #0x8]
0000000000008ffc	sub	w24, w9, #0x1
0000000000009000	add	x23, x20, #0x10
0000000000009004	mov	w0, #-0x1
0000000000009008	cmp	w22, w24
000000000000900c	b.gt	0x9058
0000000000009010	ldarb	w8, [x21]
0000000000009014	tbz	w8, #0x0, 0x901c
0000000000009018	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000901c	add	w8, w22, w24
0000000000009020	cmp	w8, #0x0
0000000000009024	cinc	w8, w8, lt
0000000000009028	asr	w0, w8, #1
000000000000902c	ldr	w8, [x20, #0x8]
0000000000009030	cmp	w8, w0
0000000000009034	b.ls	0x9078
0000000000009038	ldr	w8, [x23, w0, sxtw #2]
000000000000903c	cmp	w8, w19
0000000000009040	b.ge	0x904c
0000000000009044	add	w22, w0, #0x1
0000000000009048	b	0x9008
000000000000904c	b.eq	0x9064
0000000000009050	sub	w24, w0, #0x1
0000000000009054	b	0x9008
0000000000009058	cmp	w8, w19
000000000000905c	cset	w8, gt
0000000000009060	sub	w0, w0, w8
0000000000009064	ldp	x29, x30, [sp, #0x30]
0000000000009068	ldp	x20, x19, [sp, #0x20]
000000000000906c	ldp	x22, x21, [sp, #0x10]
0000000000009070	ldp	x24, x23, [sp], #0x40
0000000000009074	ret
0000000000009078	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.text.$init_global#internal.4:
000000000000907c	sub	sp, sp, #0x70
0000000000009080	stp	x24, x23, [sp, #0x30]
0000000000009084	stp	x22, x21, [sp, #0x40]
0000000000009088	stp	x20, x19, [sp, #0x50]
000000000000908c	stp	x29, x30, [sp, #0x60]
0000000000009090	add	x29, sp, #0x60
0000000000009094	movi.16b	v0, #0x0
0000000000009098	stp	q0, q0, [sp]
000000000000909c	str	xzr, [sp, #0x20]
00000000000090a0	mov	x8, sp
00000000000090a4	add	x19, x8, #0x20
00000000000090a8	add	x20, x8, #0x18
00000000000090ac	adrp	x0, 113 ; 0x7a000
00000000000090b0	add	x0, x0, #0x4e0
00000000000090b4	ldr	x9, [x0]
00000000000090b8	blr	x9
00000000000090bc	ldr	x21, [x0]
00000000000090c0	ldr	x9, [x21, #0x110]
00000000000090c4	str	x8, [x21, #0x110]
00000000000090c8	mov	x8, #0x500000000
00000000000090cc	stp	x9, x8, [sp, #0x8]
00000000000090d0	adr	x8, #0x8b439
00000000000090d4	nop
00000000000090d8	ldarb	w8, [x8]
00000000000090dc	tbz	w8, #0x0, 0x90e4
00000000000090e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000090e4	adr	x0, #0x6530c
00000000000090e8	nop
00000000000090ec	mov	w1, #0xae
00000000000090f0	mov	x2, x20
00000000000090f4	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.IntArray(kotlin.Int;kotlin.Int){}kotlin.IntArray"
00000000000090f8	mov	x20, x0
00000000000090fc	str	x0, [sp, #0x18]
0000000000009100	mov	w0, #0x1
0000000000009104	mov	w1, #0x28
0000000000009108	bl	0x55aec ; symbol stub for: _calloc
000000000000910c	ldr	x8, [x21, #0x18]!
0000000000009110	adr	x22, #0x8b438
0000000000009114	nop
0000000000009118	sub	x23, x21, #0x8
000000000000911c	stp	x22, x23, [x0, #0x10]
0000000000009120	stp	x8, x21, [x0]
0000000000009124	str	x0, [x8, #0x8]
0000000000009128	str	x0, [x21]
000000000000912c	ldr	x8, [x21, #0x10]
0000000000009130	add	x8, x8, #0x1
0000000000009134	str	x8, [x21, #0x10]
0000000000009138	str	x0, [x0, #0x20]
000000000000913c	str	x20, [x22]
0000000000009140	adr	x0, #0x65580
0000000000009144	nop
0000000000009148	mov	w1, #0xae
000000000000914c	mov	x2, x19
0000000000009150	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.IntArray(kotlin.Int;kotlin.Int){}kotlin.IntArray"
0000000000009154	mov	x19, x0
0000000000009158	str	x0, [sp, #0x20]
000000000000915c	mov	w0, #0x1
0000000000009160	mov	w1, #0x28
0000000000009164	bl	0x55aec ; symbol stub for: _calloc
0000000000009168	ldr	x8, [x21]
000000000000916c	stp	x8, x21, [x0]
0000000000009170	str	x0, [x8, #0x8]
0000000000009174	str	x0, [x21]
0000000000009178	str	x19, [x22, #0x8]!
000000000000917c	stp	x22, x23, [x0, #0x10]
0000000000009180	ldr	x8, [x21, #0x10]
0000000000009184	add	x8, x8, #0x1
0000000000009188	str	x8, [x21, #0x10]
000000000000918c	str	x0, [x0, #0x20]
0000000000009190	ldr	x8, [sp, #0x8]
0000000000009194	str	x8, [x21, #0xf8]
0000000000009198	ldp	x29, x30, [sp, #0x60]
000000000000919c	ldp	x20, x19, [sp, #0x50]
00000000000091a0	ldp	x22, x21, [sp, #0x40]
00000000000091a4	ldp	x24, x23, [sp, #0x30]
00000000000091a8	add	sp, sp, #0x70
00000000000091ac	ret
_kfun:kotlin.text#lowercaseCharImpl__at__kotlin.Char(){}kotlin.Char:
00000000000091b0	stp	x22, x21, [sp, #-0x30]!
00000000000091b4	stp	x20, x19, [sp, #0x10]
00000000000091b8	stp	x29, x30, [sp, #0x20]
00000000000091bc	add	x29, sp, #0x20
00000000000091c0	mov	x19, x0
00000000000091c4	adr	x8, #0x8b345
00000000000091c8	nop
00000000000091cc	ldarb	w8, [x8]
00000000000091d0	tbnz	w8, #0x0, 0x9210
00000000000091d4	adr	x20, #0x8b348
00000000000091d8	nop
00000000000091dc	ldar	w8, [x20]
00000000000091e0	cmp	w8, #0x2
00000000000091e4	b.ne	0x9228
00000000000091e8	ldar	w8, [x20]
00000000000091ec	cmp	w8, #0x2
00000000000091f0	b.ne	0x9248
00000000000091f4	cmp	w19, #0x41
00000000000091f8	b.hs	0x9264
00000000000091fc	and	w0, w19, #0xffff
0000000000009200	ldp	x29, x30, [sp, #0x20]
0000000000009204	ldp	x20, x19, [sp, #0x10]
0000000000009208	ldp	x22, x21, [sp], #0x30
000000000000920c	ret
0000000000009210	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009214	adr	x20, #0x8b308
0000000000009218	nop
000000000000921c	ldar	w8, [x20]
0000000000009220	cmp	w8, #0x2
0000000000009224	b.eq	0x91e8
0000000000009228	adr	x0, #0x8b2f4
000000000000922c	nop
0000000000009230	adr	x1, #-0x1b4
0000000000009234	nop
0000000000009238	bl	_CallInitGlobalPossiblyLock
000000000000923c	ldar	w8, [x20]
0000000000009240	cmp	w8, #0x2
0000000000009244	b.eq	0x91f4
0000000000009248	adr	x0, #0x8b2d4
000000000000924c	nop
0000000000009250	adr	x1, #-0x1d4
0000000000009254	nop
0000000000009258	bl	_CallInitGlobalPossiblyLock
000000000000925c	cmp	w19, #0x41
0000000000009260	b.lo	0x91fc
0000000000009264	cmp	w19, #0x5a
0000000000009268	b.hi	0x9284
000000000000926c	add	w19, w19, #0x20
0000000000009270	and	w0, w19, #0xffff
0000000000009274	ldp	x29, x30, [sp, #0x20]
0000000000009278	ldp	x20, x19, [sp, #0x10]
000000000000927c	ldp	x22, x21, [sp], #0x30
0000000000009280	ret
0000000000009284	cmp	w19, #0x80
0000000000009288	b.lo	0x91fc
000000000000928c	adr	x8, #0x8b28c
0000000000009290	nop
0000000000009294	ldar	w8, [x8]
0000000000009298	cmp	w8, #0x2
000000000000929c	b.eq	0x92b4
00000000000092a0	adr	x0, #0x8b278
00000000000092a4	nop
00000000000092a8	adr	x1, #-0x3b8
00000000000092ac	nop
00000000000092b0	bl	_CallInitGlobalPossiblyLock
00000000000092b4	adr	x21, #0x8b26c
00000000000092b8	nop
00000000000092bc	ldr	x0, [x21, #0x28]
00000000000092c0	mov	x1, x19
00000000000092c4	bl	"_kfun:kotlin.text#binarySearchRange(kotlin.IntArray;kotlin.Int){}kotlin.Int"
00000000000092c8	mov	x20, x0
00000000000092cc	ldar	w8, [x21]
00000000000092d0	cmp	w8, #0x2
00000000000092d4	b.eq	0x92ec
00000000000092d8	adr	x0, #0x8b248
00000000000092dc	nop
00000000000092e0	adr	x1, #0x88
00000000000092e4	nop
00000000000092e8	bl	_CallInitGlobalPossiblyLock
00000000000092ec	nop
00000000000092f0	ldr	x8, #0x8b258
00000000000092f4	ldr	w9, [x8, #0x8]
00000000000092f8	cmp	w9, w20
00000000000092fc	b.ls	0x9360
0000000000009300	nop
0000000000009304	ldr	x9, #0x8b24c
0000000000009308	ldr	w10, [x9, #0x8]
000000000000930c	cmp	w10, w20
0000000000009310	b.ls	0x9360
0000000000009314	sbfiz	x10, x20, #2, #32
0000000000009318	add	x8, x8, x10
000000000000931c	ldr	w11, [x8, #0x10]
0000000000009320	add	x8, x9, x10
0000000000009324	ldr	w8, [x8, #0x10]
0000000000009328	sub	w9, w19, w11
000000000000932c	cmp	w9, w8, uxtb
0000000000009330	b.ge	0x91fc
0000000000009334	ubfx	w10, w8, #8, #4
0000000000009338	cbz	w10, 0x9364
000000000000933c	sdiv	w11, w9, w10
0000000000009340	msub	w9, w11, w10, w9
0000000000009344	cbnz	w9, 0x91fc
0000000000009348	add	w19, w19, w8, asr #12
000000000000934c	and	w0, w19, #0xffff
0000000000009350	ldp	x29, x30, [sp, #0x20]
0000000000009354	ldp	x20, x19, [sp, #0x10]
0000000000009358	ldp	x22, x21, [sp], #0x30
000000000000935c	ret
0000000000009360	bl	_ThrowArrayIndexOutOfBoundsException
0000000000009364	bl	_ThrowArithmeticException
_kfun:kotlin.text.$init_global#internal.8:
0000000000009368	sub	sp, sp, #0x70
000000000000936c	stp	x24, x23, [sp, #0x30]
0000000000009370	stp	x22, x21, [sp, #0x40]
0000000000009374	stp	x20, x19, [sp, #0x50]
0000000000009378	stp	x29, x30, [sp, #0x60]
000000000000937c	add	x29, sp, #0x60
0000000000009380	movi.16b	v0, #0x0
0000000000009384	stp	q0, q0, [sp]
0000000000009388	str	xzr, [sp, #0x20]
000000000000938c	mov	x8, sp
0000000000009390	add	x19, x8, #0x20
0000000000009394	add	x20, x8, #0x18
0000000000009398	adrp	x0, 113 ; 0x7a000
000000000000939c	add	x0, x0, #0x4e0
00000000000093a0	ldr	x9, [x0]
00000000000093a4	blr	x9
00000000000093a8	ldr	x21, [x0]
00000000000093ac	ldr	x9, [x21, #0x110]
00000000000093b0	str	x8, [x21, #0x110]
00000000000093b4	mov	x8, #0x500000000
00000000000093b8	stp	x9, x8, [sp, #0x8]
00000000000093bc	adr	x8, #0x8b14d
00000000000093c0	nop
00000000000093c4	ldarb	w8, [x8]
00000000000093c8	tbz	w8, #0x0, 0x93d0
00000000000093cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000093d0	adr	x0, #0x655e0
00000000000093d4	nop
00000000000093d8	mov	w1, #0xbd
00000000000093dc	mov	x2, x20
00000000000093e0	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.IntArray(kotlin.Int;kotlin.Int){}kotlin.IntArray"
00000000000093e4	mov	x20, x0
00000000000093e8	str	x0, [sp, #0x18]
00000000000093ec	mov	w0, #0x1
00000000000093f0	mov	w1, #0x28
00000000000093f4	bl	0x55aec ; symbol stub for: _calloc
00000000000093f8	ldr	x8, [x21, #0x18]!
00000000000093fc	adr	x22, #0x8b15c
0000000000009400	nop
0000000000009404	sub	x23, x21, #0x8
0000000000009408	stp	x22, x23, [x0, #0x10]
000000000000940c	stp	x8, x21, [x0]
0000000000009410	str	x0, [x8, #0x8]
0000000000009414	str	x0, [x21]
0000000000009418	ldr	x8, [x21, #0x10]
000000000000941c	add	x8, x8, #0x1
0000000000009420	str	x8, [x21, #0x10]
0000000000009424	str	x0, [x0, #0x20]
0000000000009428	str	x20, [x22]
000000000000942c	adr	x0, #0x65894
0000000000009430	nop
0000000000009434	mov	w1, #0xbd
0000000000009438	mov	x2, x19
000000000000943c	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.IntArray(kotlin.Int;kotlin.Int){}kotlin.IntArray"
0000000000009440	mov	x19, x0
0000000000009444	str	x0, [sp, #0x20]
0000000000009448	mov	w0, #0x1
000000000000944c	mov	w1, #0x28
0000000000009450	bl	0x55aec ; symbol stub for: _calloc
0000000000009454	ldr	x8, [x21]
0000000000009458	stp	x8, x21, [x0]
000000000000945c	str	x0, [x8, #0x8]
0000000000009460	str	x0, [x21]
0000000000009464	str	x19, [x22, #0x8]!
0000000000009468	stp	x22, x23, [x0, #0x10]
000000000000946c	ldr	x8, [x21, #0x10]
0000000000009470	add	x8, x8, #0x1
0000000000009474	str	x8, [x21, #0x10]
0000000000009478	str	x0, [x0, #0x20]
000000000000947c	ldr	x8, [sp, #0x8]
0000000000009480	str	x8, [x21, #0xf8]
0000000000009484	ldp	x29, x30, [sp, #0x60]
0000000000009488	ldp	x20, x19, [sp, #0x50]
000000000000948c	ldp	x22, x21, [sp, #0x40]
0000000000009490	ldp	x24, x23, [sp, #0x30]
0000000000009494	add	sp, sp, #0x70
0000000000009498	ret
_kfun:kotlin.Any#hashCode(){}kotlin.Int:
000000000000949c	stp	x20, x19, [sp, #-0x20]!
00000000000094a0	stp	x29, x30, [sp, #0x10]
00000000000094a4	add	x29, sp, #0x10
00000000000094a8	mov	x19, x0
00000000000094ac	adr	x8, #0x8b05d
00000000000094b0	nop
00000000000094b4	ldarb	w8, [x8]
00000000000094b8	tbz	w8, #0x0, 0x94c0
00000000000094bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000094c0	mov	x0, x19
00000000000094c4	ldp	x29, x30, [sp, #0x10]
00000000000094c8	ldp	x20, x19, [sp], #0x20
00000000000094cc	ret
_kfun:kotlin.Any#toString(){}kotlin.String:
00000000000094d0	sub	sp, sp, #0x140
00000000000094d4	stp	x28, x27, [sp, #0xe0]
00000000000094d8	stp	x26, x25, [sp, #0xf0]
00000000000094dc	stp	x24, x23, [sp, #0x100]
00000000000094e0	stp	x22, x21, [sp, #0x110]
00000000000094e4	stp	x20, x19, [sp, #0x120]
00000000000094e8	stp	x29, x30, [sp, #0x130]
00000000000094ec	add	x29, sp, #0x130
00000000000094f0	mov	x19, x1
00000000000094f4	mov	x20, x0
00000000000094f8	movi.16b	v0, #0x0
00000000000094fc	stp	q0, q0, [sp, #0x30]
0000000000009500	stp	q0, q0, [sp, #0x60]
0000000000009504	str	q0, [sp, #0x50]
0000000000009508	add	x21, sp, #0x30
000000000000950c	adr	x8, #0x59564
0000000000009510	nop
0000000000009514	orr	x8, x8, #0x3
0000000000009518	stp	x8, xzr, [sp, #0x20]
000000000000951c	stp	xzr, xzr, [sp, #0x10]
0000000000009520	adr	x8, #0x5b8a0
0000000000009524	nop
0000000000009528	orr	x8, x8, #0x3
000000000000952c	str	x8, [sp, #0x8]
0000000000009530	adrp	x0, 113 ; 0x7a000
0000000000009534	add	x0, x0, #0x4e0
0000000000009538	ldr	x8, [x0]
000000000000953c	blr	x8
0000000000009540	ldr	x26, [x0]
0000000000009544	ldr	x8, [x26, #0x110]
0000000000009548	str	x21, [x26, #0x110]
000000000000954c	mov	x9, #0xa00000000
0000000000009550	stp	x8, x9, [sp, #0x38]
0000000000009554	adr	x8, #0x8afb5
0000000000009558	nop
000000000000955c	ldarb	w8, [x8]
0000000000009560	tbz	w8, #0x0, 0x9568
0000000000009564	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009568	ldr	x8, [x20]
000000000000956c	and	x8, x8, #0xfffffffffffffffc
0000000000009570	ldr	x8, [x8]
0000000000009574	add	x9, sp, #0x20
0000000000009578	str	x9, [sp, #0x48]
000000000000957c	str	x8, [sp, #0x28]
0000000000009580	ldr	x8, [sp, #0x20]
0000000000009584	and	x8, x8, #0xfffffffffffffffc
0000000000009588	ldr	x8, [x8]
000000000000958c	ldr	w8, [x8, #0x5c]
0000000000009590	cmp	w8, #0xe2
0000000000009594	b.ne	0x95bc
0000000000009598	add	x1, x21, #0x20
000000000000959c	add	x0, sp, #0x20
00000000000095a0	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-fullName>(){}kotlin.String?"
00000000000095a4	str	x0, [sp, #0x50]
00000000000095a8	adr	x8, #0x65a28
00000000000095ac	nop
00000000000095b0	cmp	x0, #0x0
00000000000095b4	csel	x21, x8, x0, eq
00000000000095b8	b	0x95c8
00000000000095bc	str	xzr, [sp, #0x50]
00000000000095c0	adr	x21, #0x65a10
00000000000095c4	nop
00000000000095c8	add	x8, sp, #0x30
00000000000095cc	add	x22, x8, #0x48
00000000000095d0	add	x23, x8, #0x40
00000000000095d4	add	x24, x8, #0x38
00000000000095d8	add	x25, x8, #0x28
00000000000095dc	ldr	x8, [x20]
00000000000095e0	and	x8, x8, #0xfffffffffffffffc
00000000000095e4	ldr	x8, [x8]
00000000000095e8	ldr	x8, [x8, #0x78]
00000000000095ec	mov	x0, x20
00000000000095f0	blr	x8
00000000000095f4	mov	w0, w0
00000000000095f8	mov	w1, #0x10
00000000000095fc	mov	x2, x25
0000000000009600	bl	_Kotlin_Long_toStringRadix
0000000000009604	mov	x20, x0
0000000000009608	add	x8, sp, #0x8
000000000000960c	str	x8, [sp, #0x60]
0000000000009610	add	x0, sp, #0x8
0000000000009614	mov	w1, #0xa
0000000000009618	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000961c	add	x0, sp, #0x8
0000000000009620	mov	x1, x21
0000000000009624	mov	x2, x24
0000000000009628	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000962c	adr	x1, #0x659c4
0000000000009630	nop
0000000000009634	add	x0, sp, #0x8
0000000000009638	mov	x2, x23
000000000000963c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009640	add	x0, sp, #0x8
0000000000009644	mov	x1, x20
0000000000009648	mov	x2, x22
000000000000964c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000009650	add	x0, sp, #0x8
0000000000009654	mov	x1, x19
0000000000009658	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000965c	str	x0, [x19]
0000000000009660	ldr	x8, [sp, #0x38]
0000000000009664	str	x8, [x26, #0x110]
0000000000009668	ldp	x29, x30, [sp, #0x130]
000000000000966c	ldp	x20, x19, [sp, #0x120]
0000000000009670	ldp	x22, x21, [sp, #0x110]
0000000000009674	ldp	x24, x23, [sp, #0x100]
0000000000009678	ldp	x26, x25, [sp, #0xf0]
000000000000967c	ldp	x28, x27, [sp, #0xe0]
0000000000009680	add	sp, sp, #0x140
0000000000009684	ret
_kfun:kotlin.ByteIteratorImpl.nextByte#internal:
0000000000009688	sub	sp, sp, #0x80
000000000000968c	stp	x22, x21, [sp, #0x50]
0000000000009690	stp	x20, x19, [sp, #0x60]
0000000000009694	stp	x29, x30, [sp, #0x70]
0000000000009698	add	x29, sp, #0x70
000000000000969c	mov	x19, x0
00000000000096a0	movi.16b	v0, #0x0
00000000000096a4	stp	q0, q0, [sp, #0x10]
00000000000096a8	str	xzr, [sp, #0x30]
00000000000096ac	adrp	x0, 113 ; 0x7a000
00000000000096b0	add	x0, x0, #0x4e0
00000000000096b4	ldr	x8, [x0]
00000000000096b8	blr	x8
00000000000096bc	ldr	x20, [x0]
00000000000096c0	ldr	x8, [x20, #0x110]
00000000000096c4	add	x9, sp, #0x10
00000000000096c8	str	x9, [x20, #0x110]
00000000000096cc	mov	x9, #0x500000000
00000000000096d0	stp	x8, x9, [sp, #0x18]
00000000000096d4	adr	x8, #0x8ae35
00000000000096d8	nop
00000000000096dc	ldarb	w8, [x8]
00000000000096e0	tbz	w8, #0x0, 0x96e8
00000000000096e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000096e8	ldr	w8, [x19, #0x10]
00000000000096ec	ldr	x9, [x19, #0x8]
00000000000096f0	ldr	w9, [x9, #0x8]
00000000000096f4	cmp	w8, w9
00000000000096f8	b.ge	0x973c
00000000000096fc	ldr	x8, [x19, #0x8]
0000000000009700	ldrsw	x9, [x19, #0x10]
0000000000009704	add	w10, w9, #0x1
0000000000009708	str	w10, [x19, #0x10]
000000000000970c	ldr	w10, [x8, #0x8]
0000000000009710	cmp	w10, w9
0000000000009714	b.ls	0x97b0
0000000000009718	add	x8, x8, x9
000000000000971c	ldrsb	w0, [x8, #0x10]
0000000000009720	ldr	x8, [sp, #0x18]
0000000000009724	str	x8, [x20, #0x110]
0000000000009728	ldp	x29, x30, [sp, #0x70]
000000000000972c	ldp	x20, x19, [sp, #0x60]
0000000000009730	ldp	x22, x21, [sp, #0x50]
0000000000009734	add	sp, sp, #0x80
0000000000009738	ret
000000000000973c	add	x8, sp, #0x10
0000000000009740	mov	x21, x20
0000000000009744	add	x20, x8, #0x18
0000000000009748	ldr	w8, [x19, #0x10]
000000000000974c	str	x8, [sp]
0000000000009750	adr	x2, #0x53d57 ; literal pool for: "%d"
0000000000009754	nop
0000000000009758	sub	x0, x29, #0x30
000000000000975c	mov	w1, #0x10
0000000000009760	bl	__ZN5konan8snprintfEPcmPKcz
0000000000009764	sub	x0, x29, #0x30
0000000000009768	mov	x1, x20
000000000000976c	bl	_CreateStringFromCString
0000000000009770	mov	x19, x0
0000000000009774	ldr	x8, [x21, #0x118]
0000000000009778	add	x0, x8, #0x70
000000000000977c	mov	w1, #0x38
0000000000009780	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000009784	mov	x20, x0
0000000000009788	adr	x8, #0x57c08
000000000000978c	nop
0000000000009790	str	x8, [x20, #0x10]!
0000000000009794	stur	xzr, [x20, #-0x8]
0000000000009798	str	x20, [sp, #0x30]
000000000000979c	mov	x0, x20
00000000000097a0	mov	x1, x19
00000000000097a4	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
00000000000097a8	mov	x0, x20
00000000000097ac	bl	_ThrowException
00000000000097b0	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.ByteIteratorImpl.hasNext#internal:
00000000000097b4	stp	x20, x19, [sp, #-0x20]!
00000000000097b8	stp	x29, x30, [sp, #0x10]
00000000000097bc	add	x29, sp, #0x10
00000000000097c0	mov	x19, x0
00000000000097c4	adr	x8, #0x8ad45
00000000000097c8	nop
00000000000097cc	ldarb	w8, [x8]
00000000000097d0	tbz	w8, #0x0, 0x97d8
00000000000097d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000097d8	ldr	w8, [x19, #0x10]
00000000000097dc	ldr	x9, [x19, #0x8]
00000000000097e0	ldr	w9, [x9, #0x8]
00000000000097e4	cmp	w8, w9
00000000000097e8	cset	w0, lt
00000000000097ec	ldp	x29, x30, [sp, #0x10]
00000000000097f0	ldp	x20, x19, [sp], #0x20
00000000000097f4	ret
_kfun:kotlin.Boolean#$<bridge-NBNB>compareTo(kotlin.Boolean){}kotlin.Int(kotlin.Any?){}kotlin.Int:
00000000000097f8	stp	x20, x19, [sp, #-0x20]!
00000000000097fc	stp	x29, x30, [sp, #0x10]
0000000000009800	add	x29, sp, #0x10
0000000000009804	mov	x19, x1
0000000000009808	mov	x20, x0
000000000000980c	adr	x8, #0x8acfd
0000000000009810	nop
0000000000009814	ldarb	w8, [x8]
0000000000009818	tbz	w8, #0x0, 0x9820
000000000000981c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009820	ldrb	w8, [x20, #0x8]
0000000000009824	ldrb	w9, [x19, #0x8]
0000000000009828	eor	w10, w8, w9
000000000000982c	bic	w8, w9, w8
0000000000009830	tst	w8, #0x1
0000000000009834	mov	w8, #-0x1
0000000000009838	cneg	w8, w8, eq
000000000000983c	tst	w10, #0x1
0000000000009840	csel	w0, w8, wzr, ne
0000000000009844	ldp	x29, x30, [sp, #0x10]
0000000000009848	ldp	x20, x19, [sp], #0x20
000000000000984c	ret
_kfun:kotlin.Boolean#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000009850	stp	x20, x19, [sp, #-0x20]!
0000000000009854	stp	x29, x30, [sp, #0x10]
0000000000009858	add	x29, sp, #0x10
000000000000985c	mov	x19, x1
0000000000009860	mov	x20, x0
0000000000009864	adr	x8, #0x8aca5
0000000000009868	nop
000000000000986c	ldarb	w8, [x8]
0000000000009870	tbz	w8, #0x0, 0x9878
0000000000009874	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009878	cbz	x19, 0x98b4
000000000000987c	ldrb	w8, [x20, #0x8]
0000000000009880	ldr	x9, [x19]
0000000000009884	and	x9, x9, #0xfffffffffffffffc
0000000000009888	ldr	x9, [x9]
000000000000988c	ldr	w9, [x9, #0x5c]
0000000000009890	cmp	w9, #0x63
0000000000009894	b.ne	0x98b4
0000000000009898	ldrb	w9, [x19, #0x8]
000000000000989c	eor	w8, w9, w8
00000000000098a0	eor	w8, w8, #0x1
00000000000098a4	and	w0, w8, #0x1
00000000000098a8	ldp	x29, x30, [sp, #0x10]
00000000000098ac	ldp	x20, x19, [sp], #0x20
00000000000098b0	ret
00000000000098b4	mov	w8, #0x0
00000000000098b8	and	w0, w8, #0x1
00000000000098bc	ldp	x29, x30, [sp, #0x10]
00000000000098c0	ldp	x20, x19, [sp], #0x20
00000000000098c4	ret
_kfun:kotlin.Boolean#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
00000000000098c8	stp	x20, x19, [sp, #-0x20]!
00000000000098cc	stp	x29, x30, [sp, #0x10]
00000000000098d0	add	x29, sp, #0x10
00000000000098d4	mov	x19, x1
00000000000098d8	mov	x20, x0
00000000000098dc	adr	x8, #0x8ac2d
00000000000098e0	nop
00000000000098e4	ldarb	w8, [x8]
00000000000098e8	tbz	w8, #0x0, 0x98f0
00000000000098ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000098f0	ldrb	w8, [x20, #0x8]
00000000000098f4	adr	x9, #0x6573c
00000000000098f8	nop
00000000000098fc	adr	x10, #0x65714
0000000000009900	nop
0000000000009904	cmp	w8, #0x0
0000000000009908	csel	x0, x10, x9, ne
000000000000990c	str	x0, [x19]
0000000000009910	ldp	x29, x30, [sp, #0x10]
0000000000009914	ldp	x20, x19, [sp], #0x20
0000000000009918	ret
_kfun:kotlin.Boolean#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
000000000000991c	stp	x20, x19, [sp, #-0x20]!
0000000000009920	stp	x29, x30, [sp, #0x10]
0000000000009924	add	x29, sp, #0x10
0000000000009928	mov	x19, x0
000000000000992c	adr	x8, #0x8abdd
0000000000009930	nop
0000000000009934	ldarb	w8, [x8]
0000000000009938	tbz	w8, #0x0, 0x9940
000000000000993c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009940	ldrb	w0, [x19, #0x8]
0000000000009944	ldp	x29, x30, [sp, #0x10]
0000000000009948	ldp	x20, x19, [sp], #0x20
000000000000994c	ret
_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any:
0000000000009950	sub	sp, sp, #0x50
0000000000009954	stp	x22, x21, [sp, #0x20]
0000000000009958	stp	x20, x19, [sp, #0x30]
000000000000995c	stp	x29, x30, [sp, #0x40]
0000000000009960	add	x29, sp, #0x40
0000000000009964	mov	x19, x1
0000000000009968	mov	x20, x0
000000000000996c	movi.16b	v0, #0x0
0000000000009970	stp	q0, q0, [sp]
0000000000009974	adrp	x0, 113 ; 0x7a000
0000000000009978	add	x0, x0, #0x4e0
000000000000997c	ldr	x8, [x0]
0000000000009980	blr	x8
0000000000009984	ldr	x21, [x0]
0000000000009988	ldr	x8, [x21, #0x110]
000000000000998c	mov	x9, sp
0000000000009990	str	x9, [x21, #0x110]
0000000000009994	mov	x9, #0x400000000
0000000000009998	stp	x8, x9, [sp, #0x8]
000000000000999c	adr	x8, #0x8ab6d
00000000000099a0	nop
00000000000099a4	ldarb	w8, [x8]
00000000000099a8	tbz	w8, #0x0, 0x99b0
00000000000099ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000099b0	adrp	x8, 79 ; 0x58000
00000000000099b4	ldrb	w8, [x8, #0x760]
00000000000099b8	cbnz	w8, 0x99ec
00000000000099bc	cbz	w20, 0x99ec
00000000000099c0	ldr	x8, [x21, #0x118]
00000000000099c4	add	x0, x8, #0x70
00000000000099c8	mov	w1, #0x18
00000000000099cc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000099d0	adr	x8, #0x57740
00000000000099d4	nop
00000000000099d8	str	x8, [x0, #0x10]!
00000000000099dc	stur	xzr, [x0, #-0x8]
00000000000099e0	str	x0, [sp, #0x18]
00000000000099e4	strb	w20, [x0, #0x8]
00000000000099e8	b	0x99fc
00000000000099ec	adr	x8, #0x606b4
00000000000099f0	nop
00000000000099f4	add	x0, x8, w20, uxtw #4
00000000000099f8	str	x0, [x19]
00000000000099fc	str	x0, [x19]
0000000000009a00	ldr	x8, [sp, #0x8]
0000000000009a04	str	x8, [x21, #0x110]
0000000000009a08	ldp	x29, x30, [sp, #0x40]
0000000000009a0c	ldp	x20, x19, [sp, #0x30]
0000000000009a10	ldp	x22, x21, [sp, #0x20]
0000000000009a14	add	sp, sp, #0x50
0000000000009a18	ret
_kfun:kotlin.Enum#compareTo(1:0){}kotlin.Int:
0000000000009a1c	stp	x20, x19, [sp, #-0x20]!
0000000000009a20	stp	x29, x30, [sp, #0x10]
0000000000009a24	add	x29, sp, #0x10
0000000000009a28	mov	x19, x1
0000000000009a2c	mov	x20, x0
0000000000009a30	adr	x8, #0x8aad9
0000000000009a34	nop
0000000000009a38	ldarb	w8, [x8]
0000000000009a3c	tbz	w8, #0x0, 0x9a44
0000000000009a40	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009a44	ldr	w8, [x20, #0x10]
0000000000009a48	ldr	w9, [x19, #0x10]
0000000000009a4c	sub	w0, w8, w9
0000000000009a50	ldp	x29, x30, [sp, #0x10]
0000000000009a54	ldp	x20, x19, [sp], #0x20
0000000000009a58	ret
_kfun:kotlin.Enum#equals(kotlin.Any?){}kotlin.Boolean:
0000000000009a5c	stp	x20, x19, [sp, #-0x20]!
0000000000009a60	stp	x29, x30, [sp, #0x10]
0000000000009a64	add	x29, sp, #0x10
0000000000009a68	mov	x19, x1
0000000000009a6c	mov	x20, x0
0000000000009a70	adr	x8, #0x8aa99
0000000000009a74	nop
0000000000009a78	ldarb	w8, [x8]
0000000000009a7c	tbz	w8, #0x0, 0x9a84
0000000000009a80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009a84	cmp	x20, x19
0000000000009a88	cset	w0, eq
0000000000009a8c	ldp	x29, x30, [sp, #0x10]
0000000000009a90	ldp	x20, x19, [sp], #0x20
0000000000009a94	ret
_kfun:kotlin.Enum#hashCode(){}kotlin.Int:
0000000000009a98	stp	x20, x19, [sp, #-0x20]!
0000000000009a9c	stp	x29, x30, [sp, #0x10]
0000000000009aa0	add	x29, sp, #0x10
0000000000009aa4	mov	x19, x0
0000000000009aa8	adr	x8, #0x8aa61
0000000000009aac	nop
0000000000009ab0	ldarb	w8, [x8]
0000000000009ab4	tbz	w8, #0x0, 0x9abc
0000000000009ab8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009abc	ldr	w0, [x19, #0x10]
0000000000009ac0	ldp	x29, x30, [sp, #0x10]
0000000000009ac4	ldp	x20, x19, [sp], #0x20
0000000000009ac8	ret
_kfun:kotlin.Enum#toString(){}kotlin.String:
0000000000009acc	stp	x20, x19, [sp, #-0x20]!
0000000000009ad0	stp	x29, x30, [sp, #0x10]
0000000000009ad4	add	x29, sp, #0x10
0000000000009ad8	mov	x19, x1
0000000000009adc	mov	x20, x0
0000000000009ae0	adr	x8, #0x8aa29
0000000000009ae4	nop
0000000000009ae8	ldarb	w8, [x8]
0000000000009aec	tbz	w8, #0x0, 0x9af4
0000000000009af0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009af4	ldr	x0, [x20, #0x8]
0000000000009af8	str	x0, [x19]
0000000000009afc	ldp	x29, x30, [sp, #0x10]
0000000000009b00	ldp	x20, x19, [sp], #0x20
0000000000009b04	ret
_kfun:kotlin.RuntimeException#<init>(){}:
0000000000009b08	stp	x20, x19, [sp, #-0x20]!
0000000000009b0c	stp	x29, x30, [sp, #0x10]
0000000000009b10	add	x29, sp, #0x10
0000000000009b14	mov	x19, x0
0000000000009b18	adr	x8, #0x8a9f1
0000000000009b1c	nop
0000000000009b20	ldarb	w8, [x8]
0000000000009b24	tbz	w8, #0x0, 0x9b2c
0000000000009b28	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009b2c	mov	x0, x19
0000000000009b30	mov	x1, #0x0
0000000000009b34	ldp	x29, x30, [sp, #0x10]
0000000000009b38	ldp	x20, x19, [sp], #0x20
0000000000009b3c	b	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}:
0000000000009b40	stp	x20, x19, [sp, #-0x20]!
0000000000009b44	stp	x29, x30, [sp, #0x10]
0000000000009b48	add	x29, sp, #0x10
0000000000009b4c	mov	x19, x1
0000000000009b50	mov	x20, x0
0000000000009b54	adr	x8, #0x8a9b5
0000000000009b58	nop
0000000000009b5c	ldarb	w8, [x8]
0000000000009b60	tbz	w8, #0x0, 0x9b68
0000000000009b64	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009b68	mov	x0, x20
0000000000009b6c	mov	x1, x19
0000000000009b70	ldp	x29, x30, [sp, #0x10]
0000000000009b74	ldp	x20, x19, [sp], #0x20
0000000000009b78	b	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
_kfun:kotlin.OutOfMemoryError#<init>(kotlin.String?){}:
0000000000009b7c	stp	x20, x19, [sp, #-0x20]!
0000000000009b80	stp	x29, x30, [sp, #0x10]
0000000000009b84	add	x29, sp, #0x10
0000000000009b88	mov	x19, x1
0000000000009b8c	mov	x20, x0
0000000000009b90	adr	x8, #0x8a979
0000000000009b94	nop
0000000000009b98	ldarb	w8, [x8]
0000000000009b9c	tbz	w8, #0x0, 0x9ba4
0000000000009ba0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009ba4	mov	x0, x20
0000000000009ba8	mov	x1, x19
0000000000009bac	ldp	x29, x30, [sp, #0x10]
0000000000009bb0	ldp	x20, x19, [sp], #0x20
0000000000009bb4	b	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
_kfun:kotlin.Int#$<bridge-NBNB>compareTo(kotlin.Int){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000009bb8	stp	x20, x19, [sp, #-0x20]!
0000000000009bbc	stp	x29, x30, [sp, #0x10]
0000000000009bc0	add	x29, sp, #0x10
0000000000009bc4	mov	x19, x1
0000000000009bc8	mov	x20, x0
0000000000009bcc	adr	x8, #0x8a93d
0000000000009bd0	nop
0000000000009bd4	ldarb	w8, [x8]
0000000000009bd8	tbz	w8, #0x0, 0x9be0
0000000000009bdc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009be0	ldr	w8, [x20, #0x8]
0000000000009be4	ldr	w9, [x19, #0x8]
0000000000009be8	cmp	w8, w9
0000000000009bec	mov	w8, #-0x1
0000000000009bf0	cneg	w8, w8, ge
0000000000009bf4	csel	w0, wzr, w8, eq
0000000000009bf8	ldp	x29, x30, [sp, #0x10]
0000000000009bfc	ldp	x20, x19, [sp], #0x20
0000000000009c00	ret
_kfun:kotlin.Int#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000009c04	stp	x20, x19, [sp, #-0x20]!
0000000000009c08	stp	x29, x30, [sp, #0x10]
0000000000009c0c	add	x29, sp, #0x10
0000000000009c10	mov	x19, x0
0000000000009c14	adr	x8, #0x8a8f5
0000000000009c18	nop
0000000000009c1c	ldarb	w8, [x8]
0000000000009c20	tbz	w8, #0x0, 0x9c28
0000000000009c24	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009c28	ldrsb	w0, [x19, #0x8]
0000000000009c2c	ldp	x29, x30, [sp, #0x10]
0000000000009c30	ldp	x20, x19, [sp], #0x20
0000000000009c34	ret
_kfun:kotlin.Int#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
0000000000009c38	stp	x20, x19, [sp, #-0x20]!
0000000000009c3c	stp	x29, x30, [sp, #0x10]
0000000000009c40	add	x29, sp, #0x10
0000000000009c44	mov	x19, x0
0000000000009c48	adr	x8, #0x8a8c1
0000000000009c4c	nop
0000000000009c50	ldarb	w8, [x8]
0000000000009c54	tbz	w8, #0x0, 0x9c5c
0000000000009c58	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009c5c	ldrh	w0, [x19, #0x8]
0000000000009c60	ldp	x29, x30, [sp, #0x10]
0000000000009c64	ldp	x20, x19, [sp], #0x20
0000000000009c68	ret
_kfun:kotlin.Int#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
0000000000009c6c	stp	x20, x19, [sp, #-0x20]!
0000000000009c70	stp	x29, x30, [sp, #0x10]
0000000000009c74	add	x29, sp, #0x10
0000000000009c78	mov	x19, x0
0000000000009c7c	adr	x8, #0x8a88d
0000000000009c80	nop
0000000000009c84	ldarb	w8, [x8]
0000000000009c88	tbz	w8, #0x0, 0x9c90
0000000000009c8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009c90	ldrsh	w0, [x19, #0x8]
0000000000009c94	ldp	x29, x30, [sp, #0x10]
0000000000009c98	ldp	x20, x19, [sp], #0x20
0000000000009c9c	ret
_kfun:kotlin.Int#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
0000000000009ca0	stp	x20, x19, [sp, #-0x20]!
0000000000009ca4	stp	x29, x30, [sp, #0x10]
0000000000009ca8	add	x29, sp, #0x10
0000000000009cac	mov	x19, x0
0000000000009cb0	adr	x8, #0x8a859
0000000000009cb4	nop
0000000000009cb8	ldarb	w8, [x8]
0000000000009cbc	tbz	w8, #0x0, 0x9cc4
0000000000009cc0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009cc4	ldr	w0, [x19, #0x8]
0000000000009cc8	ldp	x29, x30, [sp, #0x10]
0000000000009ccc	ldp	x20, x19, [sp], #0x20
0000000000009cd0	ret
_kfun:kotlin.Int#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
0000000000009cd4	stp	x20, x19, [sp, #-0x20]!
0000000000009cd8	stp	x29, x30, [sp, #0x10]
0000000000009cdc	add	x29, sp, #0x10
0000000000009ce0	mov	x19, x0
0000000000009ce4	adr	x8, #0x8a825
0000000000009ce8	nop
0000000000009cec	ldarb	w8, [x8]
0000000000009cf0	tbz	w8, #0x0, 0x9cf8
0000000000009cf4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009cf8	ldrsw	x0, [x19, #0x8]
0000000000009cfc	ldp	x29, x30, [sp, #0x10]
0000000000009d00	ldp	x20, x19, [sp], #0x20
0000000000009d04	ret
_kfun:kotlin.Int#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
0000000000009d08	stp	x20, x19, [sp, #-0x20]!
0000000000009d0c	stp	x29, x30, [sp, #0x10]
0000000000009d10	add	x29, sp, #0x10
0000000000009d14	mov	x19, x0
0000000000009d18	adr	x8, #0x8a7f1
0000000000009d1c	nop
0000000000009d20	ldarb	w8, [x8]
0000000000009d24	tbz	w8, #0x0, 0x9d2c
0000000000009d28	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009d2c	ldr	s0, [x19, #0x8]
0000000000009d30	scvtf	s0, s0
0000000000009d34	ldp	x29, x30, [sp, #0x10]
0000000000009d38	ldp	x20, x19, [sp], #0x20
0000000000009d3c	ret
_kfun:kotlin.Int#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
0000000000009d40	stp	x20, x19, [sp, #-0x20]!
0000000000009d44	stp	x29, x30, [sp, #0x10]
0000000000009d48	add	x29, sp, #0x10
0000000000009d4c	mov	x19, x0
0000000000009d50	adr	x8, #0x8a7b9
0000000000009d54	nop
0000000000009d58	ldarb	w8, [x8]
0000000000009d5c	tbz	w8, #0x0, 0x9d64
0000000000009d60	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009d64	ldr	s0, [x19, #0x8]
0000000000009d68	sshll.2d	v0, v0, #0x0
0000000000009d6c	scvtf	d0, d0
0000000000009d70	ldp	x29, x30, [sp, #0x10]
0000000000009d74	ldp	x20, x19, [sp], #0x20
0000000000009d78	ret
_kfun:kotlin.Int#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
0000000000009d7c	stp	x20, x19, [sp, #-0x20]!
0000000000009d80	stp	x29, x30, [sp, #0x10]
0000000000009d84	add	x29, sp, #0x10
0000000000009d88	mov	x19, x1
0000000000009d8c	mov	x20, x0
0000000000009d90	adr	x8, #0x8a779
0000000000009d94	nop
0000000000009d98	ldarb	w8, [x8]
0000000000009d9c	tbz	w8, #0x0, 0x9da4
0000000000009da0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009da4	cbz	x19, 0x9ddc
0000000000009da8	ldr	w8, [x20, #0x8]
0000000000009dac	ldr	x9, [x19]
0000000000009db0	and	x9, x9, #0xfffffffffffffffc
0000000000009db4	ldr	x9, [x9]
0000000000009db8	ldr	w9, [x9, #0x5c]
0000000000009dbc	cmp	w9, #0x79
0000000000009dc0	b.ne	0x9ddc
0000000000009dc4	ldr	w9, [x19, #0x8]
0000000000009dc8	cmp	w9, w8
0000000000009dcc	cset	w0, eq
0000000000009dd0	ldp	x29, x30, [sp, #0x10]
0000000000009dd4	ldp	x20, x19, [sp], #0x20
0000000000009dd8	ret
0000000000009ddc	mov	w0, #0x0
0000000000009de0	ldp	x29, x30, [sp, #0x10]
0000000000009de4	ldp	x20, x19, [sp], #0x20
0000000000009de8	ret
_kfun:kotlin.Int#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000009dec	sub	sp, sp, #0x40
0000000000009df0	stp	x20, x19, [sp, #0x20]
0000000000009df4	stp	x29, x30, [sp, #0x30]
0000000000009df8	add	x29, sp, #0x30
0000000000009dfc	mov	x19, x1
0000000000009e00	mov	x20, x0
0000000000009e04	adr	x8, #0x8a705
0000000000009e08	nop
0000000000009e0c	ldarb	w8, [x8]
0000000000009e10	tbz	w8, #0x0, 0x9e18
0000000000009e14	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009e18	ldr	w8, [x20, #0x8]
0000000000009e1c	str	x8, [sp]
0000000000009e20	adr	x2, #0x53687 ; literal pool for: "%d"
0000000000009e24	nop
0000000000009e28	add	x0, sp, #0x10
0000000000009e2c	mov	w1, #0x10
0000000000009e30	bl	__ZN5konan8snprintfEPcmPKcz
0000000000009e34	add	x0, sp, #0x10
0000000000009e38	mov	x1, x19
0000000000009e3c	bl	_CreateStringFromCString
0000000000009e40	str	x0, [x19]
0000000000009e44	ldp	x29, x30, [sp, #0x30]
0000000000009e48	ldp	x20, x19, [sp, #0x20]
0000000000009e4c	add	sp, sp, #0x40
0000000000009e50	ret
_kfun:kotlin.Int#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000009e54	stp	x20, x19, [sp, #-0x20]!
0000000000009e58	stp	x29, x30, [sp, #0x10]
0000000000009e5c	add	x29, sp, #0x10
0000000000009e60	mov	x19, x0
0000000000009e64	adr	x8, #0x8a6a5
0000000000009e68	nop
0000000000009e6c	ldarb	w8, [x8]
0000000000009e70	tbz	w8, #0x0, 0x9e78
0000000000009e74	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009e78	ldr	w0, [x19, #0x8]
0000000000009e7c	ldp	x29, x30, [sp, #0x10]
0000000000009e80	ldp	x20, x19, [sp], #0x20
0000000000009e84	ret
_kfun:kotlin.Double#$<bridge-NBNB>compareTo(kotlin.Double){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000009e88	stp	x20, x19, [sp, #-0x20]!
0000000000009e8c	stp	x29, x30, [sp, #0x10]
0000000000009e90	add	x29, sp, #0x10
0000000000009e94	mov	x19, x1
0000000000009e98	mov	x20, x0
0000000000009e9c	adr	x8, #0x8a66d
0000000000009ea0	nop
0000000000009ea4	ldarb	w8, [x8]
0000000000009ea8	tbz	w8, #0x0, 0x9eb0
0000000000009eac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009eb0	ldr	d1, [x20, #0x8]
0000000000009eb4	ldr	d0, [x19, #0x8]
0000000000009eb8	fcmp	d1, d0
0000000000009ebc	b.le	0x9ed0
0000000000009ec0	mov	w0, #0x1
0000000000009ec4	ldp	x29, x30, [sp, #0x10]
0000000000009ec8	ldp	x20, x19, [sp], #0x20
0000000000009ecc	ret
0000000000009ed0	mov	w0, #-0x1
0000000000009ed4	b.mi	0x9ec4
0000000000009ed8	fmov	x8, d1
0000000000009edc	fcmp	d1, d1
0000000000009ee0	mov	x9, #0x7ff8000000000000
0000000000009ee4	csel	x8, x9, x8, vs
0000000000009ee8	fmov	x10, d0
0000000000009eec	fcmp	d0, d0
0000000000009ef0	csel	x9, x9, x10, vs
0000000000009ef4	cmp	x8, x9
0000000000009ef8	cneg	w8, w0, ge
0000000000009efc	csel	w0, wzr, w8, eq
0000000000009f00	ldp	x29, x30, [sp, #0x10]
0000000000009f04	ldp	x20, x19, [sp], #0x20
0000000000009f08	ret
_kfun:kotlin.Double#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
0000000000009f0c	stp	x20, x19, [sp, #-0x20]!
0000000000009f10	stp	x29, x30, [sp, #0x10]
0000000000009f14	add	x29, sp, #0x10
0000000000009f18	mov	x19, x0
0000000000009f1c	adr	x8, #0x8a5ed
0000000000009f20	nop
0000000000009f24	ldarb	w8, [x8]
0000000000009f28	tbz	w8, #0x0, 0x9f30
0000000000009f2c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009f30	ldr	d0, [x19, #0x8]
0000000000009f34	fcmp	d0, d0
0000000000009f38	b.vs	0x9f88
0000000000009f3c	mov	x8, #0xffffffc00000
0000000000009f40	movk	x8, #0x41df, lsl #48
0000000000009f44	fmov	d1, x8
0000000000009f48	fcmp	d0, d1
0000000000009f4c	b.ge	0x9f74
0000000000009f50	mov	x8, #-0x3e20000000000000
0000000000009f54	fmov	d1, x8
0000000000009f58	fcmp	d0, d1
0000000000009f5c	b.ls	0x9f88
0000000000009f60	fcvtzs	w8, d0
0000000000009f64	sxtb	w0, w8
0000000000009f68	ldp	x29, x30, [sp, #0x10]
0000000000009f6c	ldp	x20, x19, [sp], #0x20
0000000000009f70	ret
0000000000009f74	mov	w8, #0xff
0000000000009f78	sxtb	w0, w8
0000000000009f7c	ldp	x29, x30, [sp, #0x10]
0000000000009f80	ldp	x20, x19, [sp], #0x20
0000000000009f84	ret
0000000000009f88	mov	w8, #0x0
0000000000009f8c	sxtb	w0, w8
0000000000009f90	ldp	x29, x30, [sp, #0x10]
0000000000009f94	ldp	x20, x19, [sp], #0x20
0000000000009f98	ret
_kfun:kotlin.Double#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
0000000000009f9c	stp	x20, x19, [sp, #-0x20]!
0000000000009fa0	stp	x29, x30, [sp, #0x10]
0000000000009fa4	add	x29, sp, #0x10
0000000000009fa8	mov	x19, x0
0000000000009fac	adr	x8, #0x8a55d
0000000000009fb0	nop
0000000000009fb4	ldarb	w8, [x8]
0000000000009fb8	tbz	w8, #0x0, 0x9fc0
0000000000009fbc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000009fc0	ldr	d0, [x19, #0x8]
0000000000009fc4	fcmp	d0, d0
0000000000009fc8	b.vs	0xa018
0000000000009fcc	mov	x8, #0xffffffc00000
0000000000009fd0	movk	x8, #0x41df, lsl #48
0000000000009fd4	fmov	d1, x8
0000000000009fd8	fcmp	d0, d1
0000000000009fdc	b.ge	0xa004
0000000000009fe0	mov	x8, #-0x3e20000000000000
0000000000009fe4	fmov	d1, x8
0000000000009fe8	fcmp	d0, d1
0000000000009fec	b.ls	0xa018
0000000000009ff0	fcvtzs	w8, d0
0000000000009ff4	and	w0, w8, #0xffff
0000000000009ff8	ldp	x29, x30, [sp, #0x10]
0000000000009ffc	ldp	x20, x19, [sp], #0x20
000000000000a000	ret
000000000000a004	mov	w8, #0xffff
000000000000a008	and	w0, w8, #0xffff
000000000000a00c	ldp	x29, x30, [sp, #0x10]
000000000000a010	ldp	x20, x19, [sp], #0x20
000000000000a014	ret
000000000000a018	mov	w8, #0x0
000000000000a01c	and	w0, w8, #0xffff
000000000000a020	ldp	x29, x30, [sp, #0x10]
000000000000a024	ldp	x20, x19, [sp], #0x20
000000000000a028	ret
_kfun:kotlin.Double#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
000000000000a02c	stp	x20, x19, [sp, #-0x20]!
000000000000a030	stp	x29, x30, [sp, #0x10]
000000000000a034	add	x29, sp, #0x10
000000000000a038	mov	x19, x0
000000000000a03c	adr	x8, #0x8a4cd
000000000000a040	nop
000000000000a044	ldarb	w8, [x8]
000000000000a048	tbz	w8, #0x0, 0xa050
000000000000a04c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a050	ldr	d0, [x19, #0x8]
000000000000a054	fcmp	d0, d0
000000000000a058	b.vs	0xa0a8
000000000000a05c	mov	x8, #0xffffffc00000
000000000000a060	movk	x8, #0x41df, lsl #48
000000000000a064	fmov	d1, x8
000000000000a068	fcmp	d0, d1
000000000000a06c	b.ge	0xa094
000000000000a070	mov	x8, #-0x3e20000000000000
000000000000a074	fmov	d1, x8
000000000000a078	fcmp	d0, d1
000000000000a07c	b.ls	0xa0a8
000000000000a080	fcvtzs	w8, d0
000000000000a084	sxth	w0, w8
000000000000a088	ldp	x29, x30, [sp, #0x10]
000000000000a08c	ldp	x20, x19, [sp], #0x20
000000000000a090	ret
000000000000a094	mov	w8, #0xffff
000000000000a098	sxth	w0, w8
000000000000a09c	ldp	x29, x30, [sp, #0x10]
000000000000a0a0	ldp	x20, x19, [sp], #0x20
000000000000a0a4	ret
000000000000a0a8	mov	w8, #0x0
000000000000a0ac	sxth	w0, w8
000000000000a0b0	ldp	x29, x30, [sp, #0x10]
000000000000a0b4	ldp	x20, x19, [sp], #0x20
000000000000a0b8	ret
_kfun:kotlin.Double#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
000000000000a0bc	stp	x20, x19, [sp, #-0x20]!
000000000000a0c0	stp	x29, x30, [sp, #0x10]
000000000000a0c4	add	x29, sp, #0x10
000000000000a0c8	mov	x19, x0
000000000000a0cc	adr	x8, #0x8a43d
000000000000a0d0	nop
000000000000a0d4	ldarb	w8, [x8]
000000000000a0d8	tbz	w8, #0x0, 0xa0e0
000000000000a0dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a0e0	ldr	d0, [x19, #0x8]
000000000000a0e4	fcmp	d0, d0
000000000000a0e8	b.vs	0xa140
000000000000a0ec	mov	x8, #0xffffffc00000
000000000000a0f0	movk	x8, #0x41df, lsl #48
000000000000a0f4	fmov	d1, x8
000000000000a0f8	fcmp	d0, d1
000000000000a0fc	b.ge	0xa120
000000000000a100	mov	x8, #-0x3e20000000000000
000000000000a104	fmov	d1, x8
000000000000a108	fcmp	d0, d1
000000000000a10c	b.ls	0xa130
000000000000a110	fcvtzs	w0, d0
000000000000a114	ldp	x29, x30, [sp, #0x10]
000000000000a118	ldp	x20, x19, [sp], #0x20
000000000000a11c	ret
000000000000a120	mov	w0, #0x7fffffff
000000000000a124	ldp	x29, x30, [sp, #0x10]
000000000000a128	ldp	x20, x19, [sp], #0x20
000000000000a12c	ret
000000000000a130	mov	w0, #-0x80000000
000000000000a134	ldp	x29, x30, [sp, #0x10]
000000000000a138	ldp	x20, x19, [sp], #0x20
000000000000a13c	ret
000000000000a140	mov	w0, #0x0
000000000000a144	ldp	x29, x30, [sp, #0x10]
000000000000a148	ldp	x20, x19, [sp], #0x20
000000000000a14c	ret
_kfun:kotlin.Double#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
000000000000a150	stp	x20, x19, [sp, #-0x20]!
000000000000a154	stp	x29, x30, [sp, #0x10]
000000000000a158	add	x29, sp, #0x10
000000000000a15c	mov	x19, x0
000000000000a160	adr	x8, #0x8a3a9
000000000000a164	nop
000000000000a168	ldarb	w8, [x8]
000000000000a16c	tbz	w8, #0x0, 0xa174
000000000000a170	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a174	ldr	d0, [x19, #0x8]
000000000000a178	fcmp	d0, d0
000000000000a17c	b.vs	0xa1d0
000000000000a180	mov	x8, #0x43e0000000000000
000000000000a184	fmov	d1, x8
000000000000a188	fcmp	d0, d1
000000000000a18c	b.ge	0xa1b0
000000000000a190	mov	x8, #-0x3c20000000000000
000000000000a194	fmov	d1, x8
000000000000a198	fcmp	d0, d1
000000000000a19c	b.ls	0xa1c0
000000000000a1a0	fcvtzs	x0, d0
000000000000a1a4	ldp	x29, x30, [sp, #0x10]
000000000000a1a8	ldp	x20, x19, [sp], #0x20
000000000000a1ac	ret
000000000000a1b0	mov	x0, #0x7fffffffffffffff
000000000000a1b4	ldp	x29, x30, [sp, #0x10]
000000000000a1b8	ldp	x20, x19, [sp], #0x20
000000000000a1bc	ret
000000000000a1c0	mov	x0, #-0x8000000000000000
000000000000a1c4	ldp	x29, x30, [sp, #0x10]
000000000000a1c8	ldp	x20, x19, [sp], #0x20
000000000000a1cc	ret
000000000000a1d0	mov	x0, #0x0
000000000000a1d4	ldp	x29, x30, [sp, #0x10]
000000000000a1d8	ldp	x20, x19, [sp], #0x20
000000000000a1dc	ret
_kfun:kotlin.Double#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
000000000000a1e0	stp	x20, x19, [sp, #-0x20]!
000000000000a1e4	stp	x29, x30, [sp, #0x10]
000000000000a1e8	add	x29, sp, #0x10
000000000000a1ec	mov	x19, x0
000000000000a1f0	adr	x8, #0x8a319
000000000000a1f4	nop
000000000000a1f8	ldarb	w8, [x8]
000000000000a1fc	tbz	w8, #0x0, 0xa204
000000000000a200	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a204	ldr	d0, [x19, #0x8]
000000000000a208	fcvt	s0, d0
000000000000a20c	ldp	x29, x30, [sp, #0x10]
000000000000a210	ldp	x20, x19, [sp], #0x20
000000000000a214	ret
_kfun:kotlin.Double#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
000000000000a218	stp	x20, x19, [sp, #-0x20]!
000000000000a21c	stp	x29, x30, [sp, #0x10]
000000000000a220	add	x29, sp, #0x10
000000000000a224	mov	x19, x0
000000000000a228	adr	x8, #0x8a2e1
000000000000a22c	nop
000000000000a230	ldarb	w8, [x8]
000000000000a234	tbz	w8, #0x0, 0xa23c
000000000000a238	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a23c	ldr	d0, [x19, #0x8]
000000000000a240	ldp	x29, x30, [sp, #0x10]
000000000000a244	ldp	x20, x19, [sp], #0x20
000000000000a248	ret
_kfun:kotlin.Double#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
000000000000a24c	stp	x20, x19, [sp, #-0x20]!
000000000000a250	stp	x29, x30, [sp, #0x10]
000000000000a254	add	x29, sp, #0x10
000000000000a258	mov	x19, x1
000000000000a25c	mov	x20, x0
000000000000a260	adr	x8, #0x8a2a9
000000000000a264	nop
000000000000a268	ldarb	w8, [x8]
000000000000a26c	tbz	w8, #0x0, 0xa274
000000000000a270	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a274	cbz	x19, 0xa2c8
000000000000a278	ldr	d0, [x20, #0x8]
000000000000a27c	ldr	x8, [x19]
000000000000a280	and	x8, x8, #0xfffffffffffffffc
000000000000a284	ldr	x8, [x8]
000000000000a288	ldr	w8, [x8, #0x5c]
000000000000a28c	cmp	w8, #0x7a
000000000000a290	b.ne	0xa2c8
000000000000a294	ldr	d1, [x19, #0x8]
000000000000a298	fmov	x8, d0
000000000000a29c	fcmp	d0, d0
000000000000a2a0	mov	x9, #0x7ff8000000000000
000000000000a2a4	csel	x8, x9, x8, vs
000000000000a2a8	fcmp	d1, d1
000000000000a2ac	fmov	x10, d1
000000000000a2b0	csel	x9, x9, x10, vs
000000000000a2b4	cmp	x8, x9
000000000000a2b8	cset	w0, eq
000000000000a2bc	ldp	x29, x30, [sp, #0x10]
000000000000a2c0	ldp	x20, x19, [sp], #0x20
000000000000a2c4	ret
000000000000a2c8	mov	w0, #0x0
000000000000a2cc	ldp	x29, x30, [sp, #0x10]
000000000000a2d0	ldp	x20, x19, [sp], #0x20
000000000000a2d4	ret
_kfun:kotlin.Double#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
000000000000a2d8	sub	sp, sp, #0xf0
000000000000a2dc	stp	d9, d8, [sp, #0x80]
000000000000a2e0	stp	x28, x27, [sp, #0x90]
000000000000a2e4	stp	x26, x25, [sp, #0xa0]
000000000000a2e8	stp	x24, x23, [sp, #0xb0]
000000000000a2ec	stp	x22, x21, [sp, #0xc0]
000000000000a2f0	stp	x20, x19, [sp, #0xd0]
000000000000a2f4	stp	x29, x30, [sp, #0xe0]
000000000000a2f8	add	x29, sp, #0xe0
000000000000a2fc	mov	x19, x1
000000000000a300	mov	x20, x0
000000000000a304	adr	x26, #0x8a205
000000000000a308	nop
000000000000a30c	ldarb	w8, [x26]
000000000000a310	tbz	w8, #0x0, 0xa318
000000000000a314	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a318	ldr	d8, [x20, #0x8]
000000000000a31c	movi.16b	v0, #0x0
000000000000a320	stp	q0, q0, [sp, #0x10]
000000000000a324	adrp	x23, 112 ; 0x7a000
000000000000a328	add	x23, x23, #0x4e0
000000000000a32c	ldr	x25, [x23]
000000000000a330	mov	x0, x23
000000000000a334	blr	x25
000000000000a338	ldr	x8, [x0]
000000000000a33c	ldr	x9, [x8, #0x110]
000000000000a340	add	x10, sp, #0x10
000000000000a344	str	x10, [x8, #0x110]
000000000000a348	mov	x24, #0x400000000
000000000000a34c	stp	x9, x24, [sp, #0x18]
000000000000a350	adr	x27, #0x8a230
000000000000a354	nop
000000000000a358	ldar	x8, [x27]
000000000000a35c	cmp	x8, #0x2
000000000000a360	b.hs	0xa550
000000000000a364	mov	x0, x23
000000000000a368	blr	x25
000000000000a36c	ldr	x28, [x0]
000000000000a370	ldp	x8, x9, [x28, #0x120]
000000000000a374	cmp	x8, x9
000000000000a378	b.eq	0xa398
000000000000a37c	mov	x10, x9
000000000000a380	ldr	x11, [x10, #-0x10]!
000000000000a384	cmp	x11, x27
000000000000a388	b.eq	0xa45c
000000000000a38c	mov	x9, x10
000000000000a390	cmp	x10, x8
000000000000a394	b.ne	0xa380
000000000000a398	add	x21, x28, #0x120
000000000000a39c	add	x0, x28, #0x138
000000000000a3a0	mov	w9, #0x1
000000000000a3a4	ldaxr	w8, [x0]
000000000000a3a8	stlxr	w10, w9, [x0]
000000000000a3ac	cbnz	w10, 0xa3a4
000000000000a3b0	b	0xa3c0
000000000000a3b4	mov	w23, #0x1
000000000000a3b8	stlxr	w9, x23, [x27]
000000000000a3bc	cbz	w9, 0xa3d0
000000000000a3c0	ldaxr	x22, [x27]
000000000000a3c4	cbz	x22, 0xa3b4
000000000000a3c8	mov	w23, #0x0
000000000000a3cc	clrex
000000000000a3d0	cmp	x22, #0x1
000000000000a3d4	b.eq	0xa3c0
000000000000a3d8	cbz	x28, 0xa404
000000000000a3dc	ldaxr	w9, [x0]
000000000000a3e0	stlxr	w10, w8, [x0]
000000000000a3e4	cbnz	w10, 0xa3dc
000000000000a3e8	cbnz	w8, 0xa404
000000000000a3ec	cmp	w9, #0x1
000000000000a3f0	b.ne	0xa404
000000000000a3f4	ldarb	w8, [x26]
000000000000a3f8	tbz	w8, #0x0, 0xa404
000000000000a3fc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000a400	movi.16b	v0, #0x0
000000000000a404	tbz	w23, #0x0, 0xa44c
000000000000a408	ldr	x8, [x28, #0x118]
000000000000a40c	add	x0, x8, #0x70
000000000000a410	mov	w1, #0x20
000000000000a414	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000a418	mov	x22, x0
000000000000a41c	adr	x8, #0x58874
000000000000a420	nop
000000000000a424	str	x8, [x22, #0x10]!
000000000000a428	stur	xzr, [x22, #-0x8]
000000000000a42c	str	x22, [sp, #0x28]
000000000000a430	ldp	x9, x8, [x28, #0x128]
000000000000a434	cmp	x9, x8
000000000000a438	b.hs	0xa468
000000000000a43c	stp	x27, x22, [x9]
000000000000a440	add	x8, x9, #0x10
000000000000a444	str	x8, [x28, #0x128]
000000000000a448	b	0xa4f8
000000000000a44c	str	x22, [sp, #0x28]
000000000000a450	adrp	x23, 112 ; 0x7a000
000000000000a454	add	x23, x23, #0x4e0
000000000000a458	b	0xa550
000000000000a45c	ldur	x8, [x9, #-0x8]
000000000000a460	str	x8, [sp, #0x28]
000000000000a464	b	0xa550
000000000000a468	str	x21, [sp, #0x8]
000000000000a46c	ldr	x10, [x21]
000000000000a470	sub	x9, x9, x10
000000000000a474	asr	x21, x9, #4
000000000000a478	add	x9, x21, #0x1
000000000000a47c	lsr	x11, x9, #60
000000000000a480	cbnz	x11, 0xa794
000000000000a484	sub	x8, x8, x10
000000000000a488	asr	x10, x8, #3
000000000000a48c	cmp	x10, x9
000000000000a490	csel	x9, x9, x10, lo
000000000000a494	mov	x10, #0x7ffffffffffffff
000000000000a498	cmp	x10, x8, asr #4
000000000000a49c	mov	x8, #0xfffffffffffffff
000000000000a4a0	csel	x23, x9, x8, hi
000000000000a4a4	mov	x0, x23
000000000000a4a8	mov	w1, #0x10
000000000000a4ac	bl	0x55aec ; symbol stub for: _calloc
000000000000a4b0	add	x8, x0, x21, lsl #4
000000000000a4b4	add	x20, x0, x23, lsl #4
000000000000a4b8	stp	x27, x22, [x8]
000000000000a4bc	add	x21, x8, #0x10
000000000000a4c0	ldp	x1, x9, [x28, #0x120]
000000000000a4c4	sub	x2, x9, x1
000000000000a4c8	sub	x23, x8, x2
000000000000a4cc	cmp	x2, #0x1
000000000000a4d0	b.lt	0xa4e4
000000000000a4d4	mov	x0, x23
000000000000a4d8	bl	0x55bd0 ; symbol stub for: _memcpy
000000000000a4dc	ldr	x8, [sp, #0x8]
000000000000a4e0	ldr	x1, [x8]
000000000000a4e4	stp	x23, x21, [x28, #0x120]
000000000000a4e8	str	x20, [x28, #0x130]
000000000000a4ec	cbz	x1, 0xa4f8
000000000000a4f0	mov	x0, x1
000000000000a4f4	bl	0x55b7c ; symbol stub for: _free
000000000000a4f8	mov	x0, x22
000000000000a4fc	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
000000000000a500	adrp	x23, 112 ; 0x7a000
000000000000a504	add	x23, x23, #0x4e0
000000000000a508	mov	w0, #0x1
000000000000a50c	mov	w1, #0x28
000000000000a510	bl	0x55aec ; symbol stub for: _calloc
000000000000a514	ldr	x8, [x28, #0x18]!
000000000000a518	sub	x9, x28, #0x8
000000000000a51c	stp	x27, x9, [x0, #0x10]
000000000000a520	stp	x8, x28, [x0]
000000000000a524	str	x0, [x8, #0x8]
000000000000a528	str	x0, [x28]
000000000000a52c	ldr	x8, [x28, #0x10]
000000000000a530	add	x8, x8, #0x1
000000000000a534	str	x8, [x28, #0x10]
000000000000a538	str	x0, [x0, #0x20]
000000000000a53c	stlr	x22, [x27]
000000000000a540	ldr	x8, [x28, #0x110]
000000000000a544	sub	x8, x8, #0x10
000000000000a548	str	x8, [x28, #0x110]
000000000000a54c	movi.16b	v0, #0x0
000000000000a550	stp	q0, q0, [sp, #0x30]
000000000000a554	add	x9, sp, #0x30
000000000000a558	add	x8, x9, #0x18
000000000000a55c	mov	x0, x23
000000000000a560	blr	x25
000000000000a564	mov	x21, x0
000000000000a568	ldr	x10, [x0]
000000000000a56c	ldr	x11, [x10, #0x110]
000000000000a570	str	x9, [x10, #0x110]
000000000000a574	stp	x11, x24, [sp, #0x38]
000000000000a578	mov	x0, x8
000000000000a57c	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion.<get-converter>#internal"
000000000000a580	movi.16b	v0, #0x0
000000000000a584	stp	q0, q0, [sp, #0x50]
000000000000a588	str	xzr, [sp, #0x70]
000000000000a58c	add	x27, sp, #0x50
000000000000a590	ldr	x8, [x21]
000000000000a594	ldr	x9, [x8, #0x110]
000000000000a598	str	x27, [x8, #0x110]
000000000000a59c	mov	x8, #0x500000000
000000000000a5a0	stp	x9, x8, [sp, #0x58]
000000000000a5a4	adr	x8, #0x64e9c
000000000000a5a8	nop
000000000000a5ac	adr	x9, #0x63b74
000000000000a5b0	nop
000000000000a5b4	fmov	x10, d8
000000000000a5b8	cmp	x10, #0x0
000000000000a5bc	csel	x21, x9, x8, ge
000000000000a5c0	ubfx	x28, x10, #52, #11
000000000000a5c4	and	x20, x10, #0xfffffffffffff
000000000000a5c8	cmp	w28, #0x7ff
000000000000a5cc	b.ne	0xa5e0
000000000000a5d0	cbz	x20, 0xa608
000000000000a5d4	adr	x8, #0x64eac
000000000000a5d8	nop
000000000000a5dc	b	0xa730
000000000000a5e0	mov	x22, x0
000000000000a5e4	cbz	w28, 0xa614
000000000000a5e8	orr	x1, x20, #0x10000000000000
000000000000a5ec	sub	w2, w28, #0x433
000000000000a5f0	cmp	w28, #0x3f9
000000000000a5f4	b.lo	0xa62c
000000000000a5f8	cmp	w28, #0x439
000000000000a5fc	b.lo	0xa640
000000000000a600	mov	w24, #0x34
000000000000a604	b	0xa65c
000000000000a608	adr	x1, #0x64e58
000000000000a60c	nop
000000000000a610	b	0xa720
000000000000a614	cbz	x20, 0xa664
000000000000a618	cmp	x20, #0x1
000000000000a61c	b.ne	0xa670
000000000000a620	adr	x1, #0x64ea0
000000000000a624	nop
000000000000a628	b	0xa720
000000000000a62c	mov	w24, #0x34
000000000000a630	cmn	w2, #0x3b
000000000000a634	b.ne	0xa65c
000000000000a638	cbz	x20, 0xa65c
000000000000a63c	mov	w2, #-0x3b
000000000000a640	cmp	x20, #0x0
000000000000a644	cset	w4, eq
000000000000a648	mov	x0, x22
000000000000a64c	mov	w3, #0x0
000000000000a650	mov	w5, #0x34
000000000000a654	bl	"_kfun:kotlin.native.internal.NumberConverter.longDigitGenerator#internal"
000000000000a658	b	0xa6bc
000000000000a65c	mov	x20, x1
000000000000a660	b	0xa6a4
000000000000a664	adr	x1, #0x64e3c
000000000000a668	nop
000000000000a66c	b	0xa720
000000000000a670	mov	w24, #0x34
000000000000a674	mov	x23, x20
000000000000a678	b	0xa684
000000000000a67c	lsl	x23, x23, #1
000000000000a680	sub	w24, w24, #0x1
000000000000a684	tbnz	x23, #0x34, 0xa698
000000000000a688	ldarb	w8, [x26]
000000000000a68c	tbz	w8, #0x0, 0xa67c
000000000000a690	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a694	b	0xa67c
000000000000a698	mov	w2, #-0x432
000000000000a69c	adrp	x23, 112 ; 0x7a000
000000000000a6a0	add	x23, x23, #0x4e0
000000000000a6a4	cmp	w28, #0x0
000000000000a6a8	cset	w3, eq
000000000000a6ac	mov	x0, x22
000000000000a6b0	mov	x1, x20
000000000000a6b4	mov	x4, x24
000000000000a6b8	bl	"_kfun:kotlin.native.internal.NumberConverter.bigIntDigitGeneratorInstImpl#internal"
000000000000a6bc	mov	x8, #0x12d000000000
000000000000a6c0	movk	x8, #0x4163, lsl #48
000000000000a6c4	fmov	d0, x8
000000000000a6c8	fcmp	d8, d0
000000000000a6cc	mov	x8, #0x12d000000000
000000000000a6d0	movk	x8, #0xc163, lsl #48
000000000000a6d4	fmov	d0, x8
000000000000a6d8	fccmp	d8, d0, #0x0, lt
000000000000a6dc	b.ls	0xa700
000000000000a6e0	nop
000000000000a6e4	ldr	d0, 0x57fc0
000000000000a6e8	fcmp	d8, d0
000000000000a6ec	b.le	0xa710
000000000000a6f0	nop
000000000000a6f4	ldr	d0, 0x57fc8
000000000000a6f8	fcmp	d8, d0
000000000000a6fc	b.pl	0xa710
000000000000a700	add	x1, x27, #0x18
000000000000a704	mov	x0, x22
000000000000a708	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormatExponential#internal"
000000000000a70c	b	0xa71c
000000000000a710	add	x1, x27, #0x20
000000000000a714	mov	x0, x22
000000000000a718	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormat#internal"
000000000000a71c	mov	x1, x0
000000000000a720	mov	x0, x21
000000000000a724	mov	x2, x19
000000000000a728	bl	_Kotlin_String_plusImpl
000000000000a72c	mov	x8, x0
000000000000a730	str	x8, [x19]
000000000000a734	mov	x0, x23
000000000000a738	blr	x25
000000000000a73c	ldr	x9, [x0]
000000000000a740	ldr	x10, [sp, #0x58]
000000000000a744	str	x10, [x9, #0x110]
000000000000a748	str	x8, [x19]
000000000000a74c	ldr	x9, [x0]
000000000000a750	ldr	x10, [sp, #0x38]
000000000000a754	str	x10, [x9, #0x110]
000000000000a758	str	x8, [x19]
000000000000a75c	ldr	x9, [x0]
000000000000a760	ldr	x10, [sp, #0x18]
000000000000a764	str	x10, [x9, #0x110]
000000000000a768	str	x8, [x19]
000000000000a76c	mov	x0, x8
000000000000a770	ldp	x29, x30, [sp, #0xe0]
000000000000a774	ldp	x20, x19, [sp, #0xd0]
000000000000a778	ldp	x22, x21, [sp, #0xc0]
000000000000a77c	ldp	x24, x23, [sp, #0xb0]
000000000000a780	ldp	x26, x25, [sp, #0xa0]
000000000000a784	ldp	x28, x27, [sp, #0x90]
000000000000a788	ldp	d9, d8, [sp, #0x80]
000000000000a78c	add	sp, sp, #0xf0
000000000000a790	ret
000000000000a794	ldr	x0, [sp, #0x8]
000000000000a798	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000a79c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000000a7a0	str	xzr, [sp, #0x28]
000000000000a7a4	stlr	xzr, [x27]
000000000000a7a8	ldr	x8, [x28, #0x128]
000000000000a7ac	sub	x8, x8, #0x10
000000000000a7b0	str	x8, [x28, #0x128]
000000000000a7b4	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
000000000000a7b8	brk	#0x1
000000000000a7bc	mov	x19, x0
000000000000a7c0	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000000a7c4	mov	x0, x19
000000000000a7c8	bl	0x558ac ; symbol stub for: __Unwind_Resume
_kfun:kotlin.Double#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
000000000000a7cc	stp	x20, x19, [sp, #-0x20]!
000000000000a7d0	stp	x29, x30, [sp, #0x10]
000000000000a7d4	add	x29, sp, #0x10
000000000000a7d8	mov	x19, x0
000000000000a7dc	adr	x8, #0x89d2d
000000000000a7e0	nop
000000000000a7e4	ldarb	w8, [x8]
000000000000a7e8	tbz	w8, #0x0, 0xa7f0
000000000000a7ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a7f0	ldr	d0, [x19, #0x8]
000000000000a7f4	fcmp	d0, d0
000000000000a7f8	fmov	x8, d0
000000000000a7fc	mov	x9, #0x7ff8000000000000
000000000000a800	csel	x8, x9, x8, vs
000000000000a804	lsr	x9, x8, #32
000000000000a808	eor	w0, w9, w8
000000000000a80c	ldp	x29, x30, [sp, #0x10]
000000000000a810	ldp	x20, x19, [sp], #0x20
000000000000a814	ret
_kfun:kotlin.Long#$<bridge-NBNB>compareTo(kotlin.Long){}kotlin.Int(kotlin.Any?){}kotlin.Int:
000000000000a818	stp	x20, x19, [sp, #-0x20]!
000000000000a81c	stp	x29, x30, [sp, #0x10]
000000000000a820	add	x29, sp, #0x10
000000000000a824	mov	x19, x1
000000000000a828	mov	x20, x0
000000000000a82c	adr	x8, #0x89cdd
000000000000a830	nop
000000000000a834	ldarb	w8, [x8]
000000000000a838	tbz	w8, #0x0, 0xa840
000000000000a83c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a840	ldr	x8, [x20, #0x8]
000000000000a844	ldr	x9, [x19, #0x8]
000000000000a848	cmp	x8, x9
000000000000a84c	mov	w8, #-0x1
000000000000a850	cneg	w8, w8, ge
000000000000a854	csel	w0, wzr, w8, eq
000000000000a858	ldp	x29, x30, [sp, #0x10]
000000000000a85c	ldp	x20, x19, [sp], #0x20
000000000000a860	ret
_kfun:kotlin.Long#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
000000000000a864	stp	x20, x19, [sp, #-0x20]!
000000000000a868	stp	x29, x30, [sp, #0x10]
000000000000a86c	add	x29, sp, #0x10
000000000000a870	mov	x19, x0
000000000000a874	adr	x8, #0x89c95
000000000000a878	nop
000000000000a87c	ldarb	w8, [x8]
000000000000a880	tbz	w8, #0x0, 0xa888
000000000000a884	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a888	ldrsb	w0, [x19, #0x8]
000000000000a88c	ldp	x29, x30, [sp, #0x10]
000000000000a890	ldp	x20, x19, [sp], #0x20
000000000000a894	ret
_kfun:kotlin.Long#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
000000000000a898	stp	x20, x19, [sp, #-0x20]!
000000000000a89c	stp	x29, x30, [sp, #0x10]
000000000000a8a0	add	x29, sp, #0x10
000000000000a8a4	mov	x19, x0
000000000000a8a8	adr	x8, #0x89c61
000000000000a8ac	nop
000000000000a8b0	ldarb	w8, [x8]
000000000000a8b4	tbz	w8, #0x0, 0xa8bc
000000000000a8b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a8bc	ldrh	w0, [x19, #0x8]
000000000000a8c0	ldp	x29, x30, [sp, #0x10]
000000000000a8c4	ldp	x20, x19, [sp], #0x20
000000000000a8c8	ret
_kfun:kotlin.Long#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
000000000000a8cc	stp	x20, x19, [sp, #-0x20]!
000000000000a8d0	stp	x29, x30, [sp, #0x10]
000000000000a8d4	add	x29, sp, #0x10
000000000000a8d8	mov	x19, x0
000000000000a8dc	adr	x8, #0x89c2d
000000000000a8e0	nop
000000000000a8e4	ldarb	w8, [x8]
000000000000a8e8	tbz	w8, #0x0, 0xa8f0
000000000000a8ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a8f0	ldrsh	w0, [x19, #0x8]
000000000000a8f4	ldp	x29, x30, [sp, #0x10]
000000000000a8f8	ldp	x20, x19, [sp], #0x20
000000000000a8fc	ret
_kfun:kotlin.Long#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
000000000000a900	stp	x20, x19, [sp, #-0x20]!
000000000000a904	stp	x29, x30, [sp, #0x10]
000000000000a908	add	x29, sp, #0x10
000000000000a90c	mov	x19, x0
000000000000a910	adr	x8, #0x89bf9
000000000000a914	nop
000000000000a918	ldarb	w8, [x8]
000000000000a91c	tbz	w8, #0x0, 0xa924
000000000000a920	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a924	ldr	w0, [x19, #0x8]
000000000000a928	ldp	x29, x30, [sp, #0x10]
000000000000a92c	ldp	x20, x19, [sp], #0x20
000000000000a930	ret
_kfun:kotlin.Long#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
000000000000a934	stp	x20, x19, [sp, #-0x20]!
000000000000a938	stp	x29, x30, [sp, #0x10]
000000000000a93c	add	x29, sp, #0x10
000000000000a940	mov	x19, x0
000000000000a944	adr	x8, #0x89bc5
000000000000a948	nop
000000000000a94c	ldarb	w8, [x8]
000000000000a950	tbz	w8, #0x0, 0xa958
000000000000a954	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a958	ldr	x0, [x19, #0x8]
000000000000a95c	ldp	x29, x30, [sp, #0x10]
000000000000a960	ldp	x20, x19, [sp], #0x20
000000000000a964	ret
_kfun:kotlin.Long#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
000000000000a968	stp	x20, x19, [sp, #-0x20]!
000000000000a96c	stp	x29, x30, [sp, #0x10]
000000000000a970	add	x29, sp, #0x10
000000000000a974	mov	x19, x0
000000000000a978	adr	x8, #0x89b91
000000000000a97c	nop
000000000000a980	ldarb	w8, [x8]
000000000000a984	tbz	w8, #0x0, 0xa98c
000000000000a988	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a98c	ldr	x8, [x19, #0x8]
000000000000a990	scvtf	s0, x8
000000000000a994	ldp	x29, x30, [sp, #0x10]
000000000000a998	ldp	x20, x19, [sp], #0x20
000000000000a99c	ret
_kfun:kotlin.Long#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
000000000000a9a0	stp	x20, x19, [sp, #-0x20]!
000000000000a9a4	stp	x29, x30, [sp, #0x10]
000000000000a9a8	add	x29, sp, #0x10
000000000000a9ac	mov	x19, x0
000000000000a9b0	adr	x8, #0x89b59
000000000000a9b4	nop
000000000000a9b8	ldarb	w8, [x8]
000000000000a9bc	tbz	w8, #0x0, 0xa9c4
000000000000a9c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000a9c4	ldr	d0, [x19, #0x8]
000000000000a9c8	scvtf	d0, d0
000000000000a9cc	ldp	x29, x30, [sp, #0x10]
000000000000a9d0	ldp	x20, x19, [sp], #0x20
000000000000a9d4	ret
_kfun:kotlin.Long#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
000000000000a9d8	stp	x20, x19, [sp, #-0x20]!
000000000000a9dc	stp	x29, x30, [sp, #0x10]
000000000000a9e0	add	x29, sp, #0x10
000000000000a9e4	mov	x19, x1
000000000000a9e8	mov	x20, x0
000000000000a9ec	adr	x8, #0x89b1d
000000000000a9f0	nop
000000000000a9f4	ldarb	w8, [x8]
000000000000a9f8	tbz	w8, #0x0, 0xaa00
000000000000a9fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000aa00	cbz	x19, 0xaa38
000000000000aa04	ldr	x8, [x20, #0x8]
000000000000aa08	ldr	x9, [x19]
000000000000aa0c	and	x9, x9, #0xfffffffffffffffc
000000000000aa10	ldr	x9, [x9]
000000000000aa14	ldr	w9, [x9, #0x5c]
000000000000aa18	cmp	w9, #0x7b
000000000000aa1c	b.ne	0xaa38
000000000000aa20	ldr	x9, [x19, #0x8]
000000000000aa24	cmp	x9, x8
000000000000aa28	cset	w0, eq
000000000000aa2c	ldp	x29, x30, [sp, #0x10]
000000000000aa30	ldp	x20, x19, [sp], #0x20
000000000000aa34	ret
000000000000aa38	mov	w0, #0x0
000000000000aa3c	ldp	x29, x30, [sp, #0x10]
000000000000aa40	ldp	x20, x19, [sp], #0x20
000000000000aa44	ret
_kfun:kotlin.Long#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
000000000000aa48	sub	sp, sp, #0x50
000000000000aa4c	stp	x20, x19, [sp, #0x30]
000000000000aa50	stp	x29, x30, [sp, #0x40]
000000000000aa54	add	x29, sp, #0x40
000000000000aa58	mov	x19, x1
000000000000aa5c	mov	x20, x0
000000000000aa60	adr	x8, #0x89aa9
000000000000aa64	nop
000000000000aa68	ldarb	w8, [x8]
000000000000aa6c	tbz	w8, #0x0, 0xaa74
000000000000aa70	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000aa74	ldr	x8, [x20, #0x8]
000000000000aa78	str	x8, [sp]
000000000000aa7c	adr	x2, #0x52a26 ; literal pool for: "%lld"
000000000000aa80	nop
000000000000aa84	add	x0, sp, #0x10
000000000000aa88	mov	w1, #0x20
000000000000aa8c	bl	__ZN5konan8snprintfEPcmPKcz
000000000000aa90	add	x0, sp, #0x10
000000000000aa94	mov	x1, x19
000000000000aa98	bl	_CreateStringFromCString
000000000000aa9c	str	x0, [x19]
000000000000aaa0	ldp	x29, x30, [sp, #0x40]
000000000000aaa4	ldp	x20, x19, [sp, #0x30]
000000000000aaa8	add	sp, sp, #0x50
000000000000aaac	ret
_kfun:kotlin.Long#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
000000000000aab0	stp	x20, x19, [sp, #-0x20]!
000000000000aab4	stp	x29, x30, [sp, #0x10]
000000000000aab8	add	x29, sp, #0x10
000000000000aabc	mov	x19, x0
000000000000aac0	adr	x8, #0x89a49
000000000000aac4	nop
000000000000aac8	ldarb	w8, [x8]
000000000000aacc	tbz	w8, #0x0, 0xaad4
000000000000aad0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000aad4	ldp	w8, w9, [x19, #0x8]
000000000000aad8	eor	w0, w9, w8
000000000000aadc	ldp	x29, x30, [sp, #0x10]
000000000000aae0	ldp	x20, x19, [sp], #0x20
000000000000aae4	ret
_kfun:kotlin.Byte#$<bridge-NBNB>compareTo(kotlin.Byte){}kotlin.Int(kotlin.Any?){}kotlin.Int:
000000000000aae8	stp	x20, x19, [sp, #-0x20]!
000000000000aaec	stp	x29, x30, [sp, #0x10]
000000000000aaf0	add	x29, sp, #0x10
000000000000aaf4	mov	x19, x1
000000000000aaf8	mov	x20, x0
000000000000aafc	adr	x8, #0x89a0d
000000000000ab00	nop
000000000000ab04	ldarb	w8, [x8]
000000000000ab08	tbz	w8, #0x0, 0xab10
000000000000ab0c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ab10	ldrb	w8, [x20, #0x8]
000000000000ab14	sxtb	w9, w8
000000000000ab18	ldrb	w10, [x19, #0x8]
000000000000ab1c	cmp	w9, w10, sxtb
000000000000ab20	mov	w9, #-0x1
000000000000ab24	cneg	w9, w9, ge
000000000000ab28	cmp	w8, w10
000000000000ab2c	csel	w0, wzr, w9, eq
000000000000ab30	ldp	x29, x30, [sp, #0x10]
000000000000ab34	ldp	x20, x19, [sp], #0x20
000000000000ab38	ret
_kfun:kotlin.Byte#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
000000000000ab3c	stp	x20, x19, [sp, #-0x20]!
000000000000ab40	stp	x29, x30, [sp, #0x10]
000000000000ab44	add	x29, sp, #0x10
000000000000ab48	mov	x19, x0
000000000000ab4c	adr	x8, #0x899bd
000000000000ab50	nop
000000000000ab54	ldarb	w8, [x8]
000000000000ab58	tbz	w8, #0x0, 0xab60
000000000000ab5c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ab60	ldrsb	w0, [x19, #0x8]
000000000000ab64	ldp	x29, x30, [sp, #0x10]
000000000000ab68	ldp	x20, x19, [sp], #0x20
000000000000ab6c	ret
_kfun:kotlin.Byte#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
000000000000ab70	stp	x20, x19, [sp, #-0x20]!
000000000000ab74	stp	x29, x30, [sp, #0x10]
000000000000ab78	add	x29, sp, #0x10
000000000000ab7c	mov	x19, x0
000000000000ab80	adr	x8, #0x89989
000000000000ab84	nop
000000000000ab88	ldarb	w8, [x8]
000000000000ab8c	tbz	w8, #0x0, 0xab94
000000000000ab90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ab94	ldrsb	w8, [x19, #0x8]
000000000000ab98	and	w0, w8, #0xffff
000000000000ab9c	ldp	x29, x30, [sp, #0x10]
000000000000aba0	ldp	x20, x19, [sp], #0x20
000000000000aba4	ret
_kfun:kotlin.Byte#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
000000000000aba8	stp	x20, x19, [sp, #-0x20]!
000000000000abac	stp	x29, x30, [sp, #0x10]
000000000000abb0	add	x29, sp, #0x10
000000000000abb4	mov	x19, x0
000000000000abb8	adr	x8, #0x89951
000000000000abbc	nop
000000000000abc0	ldarb	w8, [x8]
000000000000abc4	tbz	w8, #0x0, 0xabcc
000000000000abc8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000abcc	ldrsb	w0, [x19, #0x8]
000000000000abd0	ldp	x29, x30, [sp, #0x10]
000000000000abd4	ldp	x20, x19, [sp], #0x20
000000000000abd8	ret
_kfun:kotlin.Byte#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
000000000000abdc	stp	x20, x19, [sp, #-0x20]!
000000000000abe0	stp	x29, x30, [sp, #0x10]
000000000000abe4	add	x29, sp, #0x10
000000000000abe8	mov	x19, x0
000000000000abec	adr	x8, #0x8991d
000000000000abf0	nop
000000000000abf4	ldarb	w8, [x8]
000000000000abf8	tbz	w8, #0x0, 0xac00
000000000000abfc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ac00	ldrsb	w0, [x19, #0x8]
000000000000ac04	ldp	x29, x30, [sp, #0x10]
000000000000ac08	ldp	x20, x19, [sp], #0x20
000000000000ac0c	ret
_kfun:kotlin.Byte#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
000000000000ac10	stp	x20, x19, [sp, #-0x20]!
000000000000ac14	stp	x29, x30, [sp, #0x10]
000000000000ac18	add	x29, sp, #0x10
000000000000ac1c	mov	x19, x0
000000000000ac20	adr	x8, #0x898e9
000000000000ac24	nop
000000000000ac28	ldarb	w8, [x8]
000000000000ac2c	tbz	w8, #0x0, 0xac34
000000000000ac30	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ac34	ldrsb	x0, [x19, #0x8]
000000000000ac38	ldp	x29, x30, [sp, #0x10]
000000000000ac3c	ldp	x20, x19, [sp], #0x20
000000000000ac40	ret
_kfun:kotlin.Byte#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
000000000000ac44	stp	x20, x19, [sp, #-0x20]!
000000000000ac48	stp	x29, x30, [sp, #0x10]
000000000000ac4c	add	x29, sp, #0x10
000000000000ac50	mov	x19, x0
000000000000ac54	adr	x8, #0x898b5
000000000000ac58	nop
000000000000ac5c	ldarb	w8, [x8]
000000000000ac60	tbz	w8, #0x0, 0xac68
000000000000ac64	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ac68	ldr	b0, [x19, #0x8]
000000000000ac6c	sshll.8h	v0, v0, #0x0
000000000000ac70	sshll.4s	v0, v0, #0x0
000000000000ac74	scvtf	s0, s0
000000000000ac78	ldp	x29, x30, [sp, #0x10]
000000000000ac7c	ldp	x20, x19, [sp], #0x20
000000000000ac80	ret
_kfun:kotlin.Byte#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
000000000000ac84	stp	x20, x19, [sp, #-0x20]!
000000000000ac88	stp	x29, x30, [sp, #0x10]
000000000000ac8c	add	x29, sp, #0x10
000000000000ac90	mov	x19, x0
000000000000ac94	adr	x8, #0x89875
000000000000ac98	nop
000000000000ac9c	ldarb	w8, [x8]
000000000000aca0	tbz	w8, #0x0, 0xaca8
000000000000aca4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000aca8	ldrsb	w8, [x19, #0x8]
000000000000acac	scvtf	d0, w8
000000000000acb0	ldp	x29, x30, [sp, #0x10]
000000000000acb4	ldp	x20, x19, [sp], #0x20
000000000000acb8	ret
_kfun:kotlin.Byte#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
000000000000acbc	stp	x20, x19, [sp, #-0x20]!
000000000000acc0	stp	x29, x30, [sp, #0x10]
000000000000acc4	add	x29, sp, #0x10
000000000000acc8	mov	x19, x1
000000000000accc	mov	x20, x0
000000000000acd0	adr	x8, #0x89839
000000000000acd4	nop
000000000000acd8	ldarb	w8, [x8]
000000000000acdc	tbz	w8, #0x0, 0xace4
000000000000ace0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ace4	cbz	x19, 0xad1c
000000000000ace8	ldrb	w8, [x20, #0x8]
000000000000acec	ldr	x9, [x19]
000000000000acf0	and	x9, x9, #0xfffffffffffffffc
000000000000acf4	ldr	x9, [x9]
000000000000acf8	ldr	w9, [x9, #0x5c]
000000000000acfc	cmp	w9, #0x7c
000000000000ad00	b.ne	0xad1c
000000000000ad04	ldrb	w9, [x19, #0x8]
000000000000ad08	cmp	w9, w8
000000000000ad0c	cset	w0, eq
000000000000ad10	ldp	x29, x30, [sp, #0x10]
000000000000ad14	ldp	x20, x19, [sp], #0x20
000000000000ad18	ret
000000000000ad1c	mov	w0, #0x0
000000000000ad20	ldp	x29, x30, [sp, #0x10]
000000000000ad24	ldp	x20, x19, [sp], #0x20
000000000000ad28	ret
_kfun:kotlin.Byte#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
000000000000ad2c	sub	sp, sp, #0x30
000000000000ad30	stp	x20, x19, [sp, #0x10]
000000000000ad34	stp	x29, x30, [sp, #0x20]
000000000000ad38	add	x29, sp, #0x20
000000000000ad3c	mov	x19, x1
000000000000ad40	mov	x20, x0
000000000000ad44	adr	x8, #0x897c5
000000000000ad48	nop
000000000000ad4c	ldarb	w8, [x8]
000000000000ad50	tbz	w8, #0x0, 0xad58
000000000000ad54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ad58	ldrsb	x8, [x20, #0x8]
000000000000ad5c	str	x8, [sp]
000000000000ad60	adr	x2, #0x52747 ; literal pool for: "%d"
000000000000ad64	nop
000000000000ad68	add	x0, sp, #0x8
000000000000ad6c	mov	w1, #0x8
000000000000ad70	bl	__ZN5konan8snprintfEPcmPKcz
000000000000ad74	add	x0, sp, #0x8
000000000000ad78	mov	x1, x19
000000000000ad7c	bl	_CreateStringFromCString
000000000000ad80	str	x0, [x19]
000000000000ad84	ldp	x29, x30, [sp, #0x20]
000000000000ad88	ldp	x20, x19, [sp, #0x10]
000000000000ad8c	add	sp, sp, #0x30
000000000000ad90	ret
_kfun:kotlin.Byte#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
000000000000ad94	stp	x20, x19, [sp, #-0x20]!
000000000000ad98	stp	x29, x30, [sp, #0x10]
000000000000ad9c	add	x29, sp, #0x10
000000000000ada0	mov	x19, x0
000000000000ada4	adr	x8, #0x89765
000000000000ada8	nop
000000000000adac	ldarb	w8, [x8]
000000000000adb0	tbz	w8, #0x0, 0xadb8
000000000000adb4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000adb8	ldrsb	w0, [x19, #0x8]
000000000000adbc	ldp	x29, x30, [sp, #0x10]
000000000000adc0	ldp	x20, x19, [sp], #0x20
000000000000adc4	ret
_kfun:kotlin.Short#$<bridge-NBNB>compareTo(kotlin.Short){}kotlin.Int(kotlin.Any?){}kotlin.Int:
000000000000adc8	stp	x20, x19, [sp, #-0x20]!
000000000000adcc	stp	x29, x30, [sp, #0x10]
000000000000add0	add	x29, sp, #0x10
000000000000add4	mov	x19, x1
000000000000add8	mov	x20, x0
000000000000addc	adr	x8, #0x8972d
000000000000ade0	nop
000000000000ade4	ldarb	w8, [x8]
000000000000ade8	tbz	w8, #0x0, 0xadf0
000000000000adec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000adf0	ldrh	w8, [x20, #0x8]
000000000000adf4	sxth	w9, w8
000000000000adf8	ldrh	w10, [x19, #0x8]
000000000000adfc	cmp	w9, w10, sxth
000000000000ae00	mov	w9, #-0x1
000000000000ae04	cneg	w9, w9, ge
000000000000ae08	cmp	w8, w10
000000000000ae0c	csel	w0, wzr, w9, eq
000000000000ae10	ldp	x29, x30, [sp, #0x10]
000000000000ae14	ldp	x20, x19, [sp], #0x20
000000000000ae18	ret
_kfun:kotlin.Short#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
000000000000ae1c	stp	x20, x19, [sp, #-0x20]!
000000000000ae20	stp	x29, x30, [sp, #0x10]
000000000000ae24	add	x29, sp, #0x10
000000000000ae28	mov	x19, x0
000000000000ae2c	adr	x8, #0x896dd
000000000000ae30	nop
000000000000ae34	ldarb	w8, [x8]
000000000000ae38	tbz	w8, #0x0, 0xae40
000000000000ae3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ae40	ldrsb	w0, [x19, #0x8]
000000000000ae44	ldp	x29, x30, [sp, #0x10]
000000000000ae48	ldp	x20, x19, [sp], #0x20
000000000000ae4c	ret
_kfun:kotlin.Short#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
000000000000ae50	stp	x20, x19, [sp, #-0x20]!
000000000000ae54	stp	x29, x30, [sp, #0x10]
000000000000ae58	add	x29, sp, #0x10
000000000000ae5c	mov	x19, x0
000000000000ae60	adr	x8, #0x896a9
000000000000ae64	nop
000000000000ae68	ldarb	w8, [x8]
000000000000ae6c	tbz	w8, #0x0, 0xae74
000000000000ae70	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ae74	ldrh	w0, [x19, #0x8]
000000000000ae78	ldp	x29, x30, [sp, #0x10]
000000000000ae7c	ldp	x20, x19, [sp], #0x20
000000000000ae80	ret
_kfun:kotlin.Short#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
000000000000ae84	stp	x20, x19, [sp, #-0x20]!
000000000000ae88	stp	x29, x30, [sp, #0x10]
000000000000ae8c	add	x29, sp, #0x10
000000000000ae90	mov	x19, x0
000000000000ae94	adr	x8, #0x89675
000000000000ae98	nop
000000000000ae9c	ldarb	w8, [x8]
000000000000aea0	tbz	w8, #0x0, 0xaea8
000000000000aea4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000aea8	ldrsh	w0, [x19, #0x8]
000000000000aeac	ldp	x29, x30, [sp, #0x10]
000000000000aeb0	ldp	x20, x19, [sp], #0x20
000000000000aeb4	ret
_kfun:kotlin.Short#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
000000000000aeb8	stp	x20, x19, [sp, #-0x20]!
000000000000aebc	stp	x29, x30, [sp, #0x10]
000000000000aec0	add	x29, sp, #0x10
000000000000aec4	mov	x19, x0
000000000000aec8	adr	x8, #0x89641
000000000000aecc	nop
000000000000aed0	ldarb	w8, [x8]
000000000000aed4	tbz	w8, #0x0, 0xaedc
000000000000aed8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000aedc	ldrsh	w0, [x19, #0x8]
000000000000aee0	ldp	x29, x30, [sp, #0x10]
000000000000aee4	ldp	x20, x19, [sp], #0x20
000000000000aee8	ret
_kfun:kotlin.Short#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
000000000000aeec	stp	x20, x19, [sp, #-0x20]!
000000000000aef0	stp	x29, x30, [sp, #0x10]
000000000000aef4	add	x29, sp, #0x10
000000000000aef8	mov	x19, x0
000000000000aefc	adr	x8, #0x8960d
000000000000af00	nop
000000000000af04	ldarb	w8, [x8]
000000000000af08	tbz	w8, #0x0, 0xaf10
000000000000af0c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000af10	ldrsh	x0, [x19, #0x8]
000000000000af14	ldp	x29, x30, [sp, #0x10]
000000000000af18	ldp	x20, x19, [sp], #0x20
000000000000af1c	ret
_kfun:kotlin.Short#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
000000000000af20	stp	x20, x19, [sp, #-0x20]!
000000000000af24	stp	x29, x30, [sp, #0x10]
000000000000af28	add	x29, sp, #0x10
000000000000af2c	mov	x19, x0
000000000000af30	adr	x8, #0x895d9
000000000000af34	nop
000000000000af38	ldarb	w8, [x8]
000000000000af3c	tbz	w8, #0x0, 0xaf44
000000000000af40	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000af44	ldr	h0, [x19, #0x8]
000000000000af48	sshll.4s	v0, v0, #0x0
000000000000af4c	scvtf	s0, s0
000000000000af50	ldp	x29, x30, [sp, #0x10]
000000000000af54	ldp	x20, x19, [sp], #0x20
000000000000af58	ret
_kfun:kotlin.Short#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
000000000000af5c	stp	x20, x19, [sp, #-0x20]!
000000000000af60	stp	x29, x30, [sp, #0x10]
000000000000af64	add	x29, sp, #0x10
000000000000af68	mov	x19, x0
000000000000af6c	adr	x8, #0x8959d
000000000000af70	nop
000000000000af74	ldarb	w8, [x8]
000000000000af78	tbz	w8, #0x0, 0xaf80
000000000000af7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000af80	ldr	h0, [x19, #0x8]
000000000000af84	sshll.4s	v0, v0, #0x0
000000000000af88	sshll.2d	v0, v0, #0x0
000000000000af8c	scvtf	d0, d0
000000000000af90	ldp	x29, x30, [sp, #0x10]
000000000000af94	ldp	x20, x19, [sp], #0x20
000000000000af98	ret
_kfun:kotlin.Short#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
000000000000af9c	stp	x20, x19, [sp, #-0x20]!
000000000000afa0	stp	x29, x30, [sp, #0x10]
000000000000afa4	add	x29, sp, #0x10
000000000000afa8	mov	x19, x1
000000000000afac	mov	x20, x0
000000000000afb0	adr	x8, #0x89559
000000000000afb4	nop
000000000000afb8	ldarb	w8, [x8]
000000000000afbc	tbz	w8, #0x0, 0xafc4
000000000000afc0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000afc4	cbz	x19, 0xaffc
000000000000afc8	ldrh	w8, [x20, #0x8]
000000000000afcc	ldr	x9, [x19]
000000000000afd0	and	x9, x9, #0xfffffffffffffffc
000000000000afd4	ldr	x9, [x9]
000000000000afd8	ldr	w9, [x9, #0x5c]
000000000000afdc	cmp	w9, #0x7d
000000000000afe0	b.ne	0xaffc
000000000000afe4	ldrh	w9, [x19, #0x8]
000000000000afe8	cmp	w9, w8
000000000000afec	cset	w0, eq
000000000000aff0	ldp	x29, x30, [sp, #0x10]
000000000000aff4	ldp	x20, x19, [sp], #0x20
000000000000aff8	ret
000000000000affc	mov	w0, #0x0
000000000000b000	ldp	x29, x30, [sp, #0x10]
000000000000b004	ldp	x20, x19, [sp], #0x20
000000000000b008	ret
_kfun:kotlin.Short#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
000000000000b00c	sub	sp, sp, #0x30
000000000000b010	stp	x20, x19, [sp, #0x10]
000000000000b014	stp	x29, x30, [sp, #0x20]
000000000000b018	add	x29, sp, #0x20
000000000000b01c	mov	x19, x1
000000000000b020	mov	x20, x0
000000000000b024	adr	x8, #0x894e5
000000000000b028	nop
000000000000b02c	ldarb	w8, [x8]
000000000000b030	tbz	w8, #0x0, 0xb038
000000000000b034	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b038	ldrsh	x8, [x20, #0x8]
000000000000b03c	str	x8, [sp]
000000000000b040	adr	x2, #0x52467 ; literal pool for: "%d"
000000000000b044	nop
000000000000b048	add	x0, sp, #0x8
000000000000b04c	mov	w1, #0x8
000000000000b050	bl	__ZN5konan8snprintfEPcmPKcz
000000000000b054	add	x0, sp, #0x8
000000000000b058	mov	x1, x19
000000000000b05c	bl	_CreateStringFromCString
000000000000b060	str	x0, [x19]
000000000000b064	ldp	x29, x30, [sp, #0x20]
000000000000b068	ldp	x20, x19, [sp, #0x10]
000000000000b06c	add	sp, sp, #0x30
000000000000b070	ret
_kfun:kotlin.Short#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
000000000000b074	stp	x20, x19, [sp, #-0x20]!
000000000000b078	stp	x29, x30, [sp, #0x10]
000000000000b07c	add	x29, sp, #0x10
000000000000b080	mov	x19, x0
000000000000b084	adr	x8, #0x89485
000000000000b088	nop
000000000000b08c	ldarb	w8, [x8]
000000000000b090	tbz	w8, #0x0, 0xb098
000000000000b094	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b098	ldrsh	w0, [x19, #0x8]
000000000000b09c	ldp	x29, x30, [sp, #0x10]
000000000000b0a0	ldp	x20, x19, [sp], #0x20
000000000000b0a4	ret
_kfun:kotlin.Float#$<bridge-NBNB>compareTo(kotlin.Float){}kotlin.Int(kotlin.Any?){}kotlin.Int:
000000000000b0a8	stp	x20, x19, [sp, #-0x20]!
000000000000b0ac	stp	x29, x30, [sp, #0x10]
000000000000b0b0	add	x29, sp, #0x10
000000000000b0b4	mov	x19, x1
000000000000b0b8	mov	x20, x0
000000000000b0bc	adr	x8, #0x8944d
000000000000b0c0	nop
000000000000b0c4	ldarb	w8, [x8]
000000000000b0c8	tbz	w8, #0x0, 0xb0d0
000000000000b0cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b0d0	ldr	s1, [x20, #0x8]
000000000000b0d4	ldr	s0, [x19, #0x8]
000000000000b0d8	fcmp	s1, s0
000000000000b0dc	b.le	0xb0f0
000000000000b0e0	mov	w0, #0x1
000000000000b0e4	ldp	x29, x30, [sp, #0x10]
000000000000b0e8	ldp	x20, x19, [sp], #0x20
000000000000b0ec	ret
000000000000b0f0	mov	w0, #-0x1
000000000000b0f4	b.mi	0xb0e4
000000000000b0f8	fmov	w8, s1
000000000000b0fc	fcmp	s1, s1
000000000000b100	mov	w9, #0x7fc00000
000000000000b104	csel	w8, w9, w8, vs
000000000000b108	fmov	w10, s0
000000000000b10c	fcmp	s0, s0
000000000000b110	csel	w9, w9, w10, vs
000000000000b114	cmp	w8, w9
000000000000b118	cneg	w8, w0, ge
000000000000b11c	csel	w0, wzr, w8, eq
000000000000b120	ldp	x29, x30, [sp, #0x10]
000000000000b124	ldp	x20, x19, [sp], #0x20
000000000000b128	ret
_kfun:kotlin.Float#$<bridge-NBN>toByte(){}kotlin.Byte(){}kotlin.Byte:
000000000000b12c	stp	x20, x19, [sp, #-0x20]!
000000000000b130	stp	x29, x30, [sp, #0x10]
000000000000b134	add	x29, sp, #0x10
000000000000b138	mov	x19, x0
000000000000b13c	adr	x8, #0x893cd
000000000000b140	nop
000000000000b144	ldarb	w8, [x8]
000000000000b148	tbz	w8, #0x0, 0xb150
000000000000b14c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b150	ldr	s0, [x19, #0x8]
000000000000b154	fcmp	s0, s0
000000000000b158	b.vs	0xb1a4
000000000000b15c	mov	w8, #0x4f000000
000000000000b160	fmov	s1, w8
000000000000b164	fcmp	s0, s1
000000000000b168	b.ge	0xb190
000000000000b16c	mov	w8, #-0x31000000
000000000000b170	fmov	s1, w8
000000000000b174	fcmp	s0, s1
000000000000b178	b.ls	0xb1a4
000000000000b17c	fcvtzs	w8, s0
000000000000b180	sxtb	w0, w8
000000000000b184	ldp	x29, x30, [sp, #0x10]
000000000000b188	ldp	x20, x19, [sp], #0x20
000000000000b18c	ret
000000000000b190	mov	w8, #0xff
000000000000b194	sxtb	w0, w8
000000000000b198	ldp	x29, x30, [sp, #0x10]
000000000000b19c	ldp	x20, x19, [sp], #0x20
000000000000b1a0	ret
000000000000b1a4	mov	w8, #0x0
000000000000b1a8	sxtb	w0, w8
000000000000b1ac	ldp	x29, x30, [sp, #0x10]
000000000000b1b0	ldp	x20, x19, [sp], #0x20
000000000000b1b4	ret
_kfun:kotlin.Float#$<bridge-NBN>toChar(){}kotlin.Char(){}kotlin.Char:
000000000000b1b8	stp	x20, x19, [sp, #-0x20]!
000000000000b1bc	stp	x29, x30, [sp, #0x10]
000000000000b1c0	add	x29, sp, #0x10
000000000000b1c4	mov	x19, x0
000000000000b1c8	adr	x8, #0x89341
000000000000b1cc	nop
000000000000b1d0	ldarb	w8, [x8]
000000000000b1d4	tbz	w8, #0x0, 0xb1dc
000000000000b1d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b1dc	ldr	s0, [x19, #0x8]
000000000000b1e0	fcmp	s0, s0
000000000000b1e4	b.vs	0xb230
000000000000b1e8	mov	w8, #0x4f000000
000000000000b1ec	fmov	s1, w8
000000000000b1f0	fcmp	s0, s1
000000000000b1f4	b.ge	0xb21c
000000000000b1f8	mov	w8, #-0x31000000
000000000000b1fc	fmov	s1, w8
000000000000b200	fcmp	s0, s1
000000000000b204	b.ls	0xb230
000000000000b208	fcvtzs	w8, s0
000000000000b20c	and	w0, w8, #0xffff
000000000000b210	ldp	x29, x30, [sp, #0x10]
000000000000b214	ldp	x20, x19, [sp], #0x20
000000000000b218	ret
000000000000b21c	mov	w8, #0xffff
000000000000b220	and	w0, w8, #0xffff
000000000000b224	ldp	x29, x30, [sp, #0x10]
000000000000b228	ldp	x20, x19, [sp], #0x20
000000000000b22c	ret
000000000000b230	mov	w8, #0x0
000000000000b234	and	w0, w8, #0xffff
000000000000b238	ldp	x29, x30, [sp, #0x10]
000000000000b23c	ldp	x20, x19, [sp], #0x20
000000000000b240	ret
_kfun:kotlin.Float#$<bridge-NBN>toShort(){}kotlin.Short(){}kotlin.Short:
000000000000b244	stp	x20, x19, [sp, #-0x20]!
000000000000b248	stp	x29, x30, [sp, #0x10]
000000000000b24c	add	x29, sp, #0x10
000000000000b250	mov	x19, x0
000000000000b254	adr	x8, #0x892b5
000000000000b258	nop
000000000000b25c	ldarb	w8, [x8]
000000000000b260	tbz	w8, #0x0, 0xb268
000000000000b264	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b268	ldr	s0, [x19, #0x8]
000000000000b26c	fcmp	s0, s0
000000000000b270	b.vs	0xb2bc
000000000000b274	mov	w8, #0x4f000000
000000000000b278	fmov	s1, w8
000000000000b27c	fcmp	s0, s1
000000000000b280	b.ge	0xb2a8
000000000000b284	mov	w8, #-0x31000000
000000000000b288	fmov	s1, w8
000000000000b28c	fcmp	s0, s1
000000000000b290	b.ls	0xb2bc
000000000000b294	fcvtzs	w8, s0
000000000000b298	sxth	w0, w8
000000000000b29c	ldp	x29, x30, [sp, #0x10]
000000000000b2a0	ldp	x20, x19, [sp], #0x20
000000000000b2a4	ret
000000000000b2a8	mov	w8, #0xffff
000000000000b2ac	sxth	w0, w8
000000000000b2b0	ldp	x29, x30, [sp, #0x10]
000000000000b2b4	ldp	x20, x19, [sp], #0x20
000000000000b2b8	ret
000000000000b2bc	mov	w8, #0x0
000000000000b2c0	sxth	w0, w8
000000000000b2c4	ldp	x29, x30, [sp, #0x10]
000000000000b2c8	ldp	x20, x19, [sp], #0x20
000000000000b2cc	ret
_kfun:kotlin.Float#$<bridge-NBN>toInt(){}kotlin.Int(){}kotlin.Int:
000000000000b2d0	stp	x20, x19, [sp, #-0x20]!
000000000000b2d4	stp	x29, x30, [sp, #0x10]
000000000000b2d8	add	x29, sp, #0x10
000000000000b2dc	mov	x19, x0
000000000000b2e0	adr	x8, #0x89229
000000000000b2e4	nop
000000000000b2e8	ldarb	w8, [x8]
000000000000b2ec	tbz	w8, #0x0, 0xb2f4
000000000000b2f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b2f4	ldr	s0, [x19, #0x8]
000000000000b2f8	fcmp	s0, s0
000000000000b2fc	b.vs	0xb350
000000000000b300	mov	w8, #0x4f000000
000000000000b304	fmov	s1, w8
000000000000b308	fcmp	s0, s1
000000000000b30c	b.ge	0xb330
000000000000b310	mov	w8, #-0x31000000
000000000000b314	fmov	s1, w8
000000000000b318	fcmp	s0, s1
000000000000b31c	b.ls	0xb340
000000000000b320	fcvtzs	w0, s0
000000000000b324	ldp	x29, x30, [sp, #0x10]
000000000000b328	ldp	x20, x19, [sp], #0x20
000000000000b32c	ret
000000000000b330	mov	w0, #0x7fffffff
000000000000b334	ldp	x29, x30, [sp, #0x10]
000000000000b338	ldp	x20, x19, [sp], #0x20
000000000000b33c	ret
000000000000b340	mov	w0, #-0x80000000
000000000000b344	ldp	x29, x30, [sp, #0x10]
000000000000b348	ldp	x20, x19, [sp], #0x20
000000000000b34c	ret
000000000000b350	mov	w0, #0x0
000000000000b354	ldp	x29, x30, [sp, #0x10]
000000000000b358	ldp	x20, x19, [sp], #0x20
000000000000b35c	ret
_kfun:kotlin.Float#$<bridge-NBN>toLong(){}kotlin.Long(){}kotlin.Long:
000000000000b360	stp	x20, x19, [sp, #-0x20]!
000000000000b364	stp	x29, x30, [sp, #0x10]
000000000000b368	add	x29, sp, #0x10
000000000000b36c	mov	x19, x0
000000000000b370	adr	x8, #0x89199
000000000000b374	nop
000000000000b378	ldarb	w8, [x8]
000000000000b37c	tbz	w8, #0x0, 0xb384
000000000000b380	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b384	ldr	s0, [x19, #0x8]
000000000000b388	fcmp	s0, s0
000000000000b38c	b.vs	0xb3e0
000000000000b390	mov	w8, #0x5f000000
000000000000b394	fmov	s1, w8
000000000000b398	fcmp	s0, s1
000000000000b39c	b.ge	0xb3c0
000000000000b3a0	mov	w8, #-0x21000000
000000000000b3a4	fmov	s1, w8
000000000000b3a8	fcmp	s0, s1
000000000000b3ac	b.ls	0xb3d0
000000000000b3b0	fcvtzs	x0, s0
000000000000b3b4	ldp	x29, x30, [sp, #0x10]
000000000000b3b8	ldp	x20, x19, [sp], #0x20
000000000000b3bc	ret
000000000000b3c0	mov	x0, #0x7fffffffffffffff
000000000000b3c4	ldp	x29, x30, [sp, #0x10]
000000000000b3c8	ldp	x20, x19, [sp], #0x20
000000000000b3cc	ret
000000000000b3d0	mov	x0, #-0x8000000000000000
000000000000b3d4	ldp	x29, x30, [sp, #0x10]
000000000000b3d8	ldp	x20, x19, [sp], #0x20
000000000000b3dc	ret
000000000000b3e0	mov	x0, #0x0
000000000000b3e4	ldp	x29, x30, [sp, #0x10]
000000000000b3e8	ldp	x20, x19, [sp], #0x20
000000000000b3ec	ret
_kfun:kotlin.Float#$<bridge-NBN>toFloat(){}kotlin.Float(){}kotlin.Float:
000000000000b3f0	stp	x20, x19, [sp, #-0x20]!
000000000000b3f4	stp	x29, x30, [sp, #0x10]
000000000000b3f8	add	x29, sp, #0x10
000000000000b3fc	mov	x19, x0
000000000000b400	adr	x8, #0x89109
000000000000b404	nop
000000000000b408	ldarb	w8, [x8]
000000000000b40c	tbz	w8, #0x0, 0xb414
000000000000b410	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b414	ldr	s0, [x19, #0x8]
000000000000b418	ldp	x29, x30, [sp, #0x10]
000000000000b41c	ldp	x20, x19, [sp], #0x20
000000000000b420	ret
_kfun:kotlin.Float#$<bridge-NBN>toDouble(){}kotlin.Double(){}kotlin.Double:
000000000000b424	stp	x20, x19, [sp, #-0x20]!
000000000000b428	stp	x29, x30, [sp, #0x10]
000000000000b42c	add	x29, sp, #0x10
000000000000b430	mov	x19, x0
000000000000b434	adr	x8, #0x890d5
000000000000b438	nop
000000000000b43c	ldarb	w8, [x8]
000000000000b440	tbz	w8, #0x0, 0xb448
000000000000b444	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b448	ldr	s0, [x19, #0x8]
000000000000b44c	fcvt	d0, s0
000000000000b450	ldp	x29, x30, [sp, #0x10]
000000000000b454	ldp	x20, x19, [sp], #0x20
000000000000b458	ret
_kfun:kotlin.Float#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
000000000000b45c	stp	x20, x19, [sp, #-0x20]!
000000000000b460	stp	x29, x30, [sp, #0x10]
000000000000b464	add	x29, sp, #0x10
000000000000b468	mov	x19, x1
000000000000b46c	mov	x20, x0
000000000000b470	adr	x8, #0x89099
000000000000b474	nop
000000000000b478	ldarb	w8, [x8]
000000000000b47c	tbz	w8, #0x0, 0xb484
000000000000b480	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b484	cbz	x19, 0xb4d8
000000000000b488	ldr	s0, [x20, #0x8]
000000000000b48c	ldr	x8, [x19]
000000000000b490	and	x8, x8, #0xfffffffffffffffc
000000000000b494	ldr	x8, [x8]
000000000000b498	ldr	w8, [x8, #0x5c]
000000000000b49c	cmp	w8, #0x7e
000000000000b4a0	b.ne	0xb4d8
000000000000b4a4	ldr	s1, [x19, #0x8]
000000000000b4a8	fmov	w8, s0
000000000000b4ac	fcmp	s0, s0
000000000000b4b0	mov	w9, #0x7fc00000
000000000000b4b4	csel	w8, w9, w8, vs
000000000000b4b8	fcmp	s1, s1
000000000000b4bc	fmov	w10, s1
000000000000b4c0	csel	w9, w9, w10, vs
000000000000b4c4	cmp	w8, w9
000000000000b4c8	cset	w0, eq
000000000000b4cc	ldp	x29, x30, [sp, #0x10]
000000000000b4d0	ldp	x20, x19, [sp], #0x20
000000000000b4d4	ret
000000000000b4d8	mov	w0, #0x0
000000000000b4dc	ldp	x29, x30, [sp, #0x10]
000000000000b4e0	ldp	x20, x19, [sp], #0x20
000000000000b4e4	ret
_kfun:kotlin.Float#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
000000000000b4e8	sub	sp, sp, #0xf0
000000000000b4ec	stp	d9, d8, [sp, #0x80]
000000000000b4f0	stp	x28, x27, [sp, #0x90]
000000000000b4f4	stp	x26, x25, [sp, #0xa0]
000000000000b4f8	stp	x24, x23, [sp, #0xb0]
000000000000b4fc	stp	x22, x21, [sp, #0xc0]
000000000000b500	stp	x20, x19, [sp, #0xd0]
000000000000b504	stp	x29, x30, [sp, #0xe0]
000000000000b508	add	x29, sp, #0xe0
000000000000b50c	mov	x19, x1
000000000000b510	mov	x20, x0
000000000000b514	adr	x27, #0x88ff5
000000000000b518	nop
000000000000b51c	ldarb	w8, [x27]
000000000000b520	tbz	w8, #0x0, 0xb528
000000000000b524	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b528	ldr	s8, [x20, #0x8]
000000000000b52c	movi.16b	v0, #0x0
000000000000b530	stp	q0, q0, [sp, #0x10]
000000000000b534	adrp	x23, 111 ; 0x7a000
000000000000b538	add	x23, x23, #0x4e0
000000000000b53c	ldr	x26, [x23]
000000000000b540	mov	x0, x23
000000000000b544	blr	x26
000000000000b548	ldr	x8, [x0]
000000000000b54c	ldr	x9, [x8, #0x110]
000000000000b550	add	x10, sp, #0x10
000000000000b554	str	x10, [x8, #0x110]
000000000000b558	mov	x24, #0x400000000
000000000000b55c	stp	x9, x24, [sp, #0x18]
000000000000b560	adr	x25, #0x89020
000000000000b564	nop
000000000000b568	ldar	x8, [x25]
000000000000b56c	cmp	x8, #0x2
000000000000b570	b.hs	0xb758
000000000000b574	mov	x0, x23
000000000000b578	blr	x26
000000000000b57c	ldr	x28, [x0]
000000000000b580	ldp	x8, x9, [x28, #0x120]
000000000000b584	cmp	x8, x9
000000000000b588	b.eq	0xb5a8
000000000000b58c	mov	x10, x9
000000000000b590	ldr	x11, [x10, #-0x10]!
000000000000b594	cmp	x11, x25
000000000000b598	b.eq	0xb664
000000000000b59c	mov	x9, x10
000000000000b5a0	cmp	x10, x8
000000000000b5a4	b.ne	0xb590
000000000000b5a8	add	x21, x28, #0x120
000000000000b5ac	add	x0, x28, #0x138
000000000000b5b0	mov	w9, #0x1
000000000000b5b4	ldaxr	w8, [x0]
000000000000b5b8	stlxr	w10, w9, [x0]
000000000000b5bc	cbnz	w10, 0xb5b4
000000000000b5c0	b	0xb5d0
000000000000b5c4	mov	w22, #0x1
000000000000b5c8	stlxr	w9, x22, [x25]
000000000000b5cc	cbz	w9, 0xb5e0
000000000000b5d0	ldaxr	x20, [x25]
000000000000b5d4	cbz	x20, 0xb5c4
000000000000b5d8	mov	w22, #0x0
000000000000b5dc	clrex
000000000000b5e0	cmp	x20, #0x1
000000000000b5e4	b.eq	0xb5d0
000000000000b5e8	cbz	x28, 0xb614
000000000000b5ec	ldaxr	w9, [x0]
000000000000b5f0	stlxr	w10, w8, [x0]
000000000000b5f4	cbnz	w10, 0xb5ec
000000000000b5f8	cbnz	w8, 0xb614
000000000000b5fc	cmp	w9, #0x1
000000000000b600	b.ne	0xb614
000000000000b604	ldarb	w8, [x27]
000000000000b608	tbz	w8, #0x0, 0xb614
000000000000b60c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000b610	movi.16b	v0, #0x0
000000000000b614	tbz	w22, #0x0, 0xb65c
000000000000b618	ldr	x8, [x28, #0x118]
000000000000b61c	add	x0, x8, #0x70
000000000000b620	mov	w1, #0x20
000000000000b624	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000b628	mov	x22, x0
000000000000b62c	adr	x8, #0x57664
000000000000b630	nop
000000000000b634	str	x8, [x22, #0x10]!
000000000000b638	stur	xzr, [x22, #-0x8]
000000000000b63c	str	x22, [sp, #0x28]
000000000000b640	ldp	x9, x8, [x28, #0x128]
000000000000b644	cmp	x9, x8
000000000000b648	b.hs	0xb670
000000000000b64c	stp	x25, x22, [x9]
000000000000b650	add	x8, x9, #0x10
000000000000b654	str	x8, [x28, #0x128]
000000000000b658	b	0xb708
000000000000b65c	str	x20, [sp, #0x28]
000000000000b660	b	0xb758
000000000000b664	ldur	x8, [x9, #-0x8]
000000000000b668	str	x8, [sp, #0x28]
000000000000b66c	b	0xb758
000000000000b670	str	x21, [sp, #0x8]
000000000000b674	ldr	x10, [x21]
000000000000b678	sub	x9, x9, x10
000000000000b67c	asr	x20, x9, #4
000000000000b680	add	x9, x20, #0x1
000000000000b684	lsr	x11, x9, #60
000000000000b688	cbnz	x11, 0xb9b4
000000000000b68c	sub	x8, x8, x10
000000000000b690	asr	x10, x8, #3
000000000000b694	cmp	x10, x9
000000000000b698	csel	x9, x9, x10, lo
000000000000b69c	mov	x10, #0x7ffffffffffffff
000000000000b6a0	cmp	x10, x8, asr #4
000000000000b6a4	mov	x8, #0xfffffffffffffff
000000000000b6a8	csel	x23, x9, x8, hi
000000000000b6ac	mov	x0, x23
000000000000b6b0	mov	w1, #0x10
000000000000b6b4	bl	0x55aec ; symbol stub for: _calloc
000000000000b6b8	add	x8, x0, x20, lsl #4
000000000000b6bc	add	x20, x0, x23, lsl #4
000000000000b6c0	stp	x25, x22, [x8]
000000000000b6c4	add	x21, x8, #0x10
000000000000b6c8	ldp	x1, x9, [x28, #0x120]
000000000000b6cc	sub	x2, x9, x1
000000000000b6d0	sub	x23, x8, x2
000000000000b6d4	cmp	x2, #0x1
000000000000b6d8	b.lt	0xb6ec
000000000000b6dc	mov	x0, x23
000000000000b6e0	bl	0x55bd0 ; symbol stub for: _memcpy
000000000000b6e4	ldr	x8, [sp, #0x8]
000000000000b6e8	ldr	x1, [x8]
000000000000b6ec	stp	x23, x21, [x28, #0x120]
000000000000b6f0	str	x20, [x28, #0x130]
000000000000b6f4	adrp	x23, 111 ; 0x7a000
000000000000b6f8	add	x23, x23, #0x4e0
000000000000b6fc	cbz	x1, 0xb708
000000000000b700	mov	x0, x1
000000000000b704	bl	0x55b7c ; symbol stub for: _free
000000000000b708	mov	x0, x22
000000000000b70c	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
000000000000b710	mov	w0, #0x1
000000000000b714	mov	w1, #0x28
000000000000b718	bl	0x55aec ; symbol stub for: _calloc
000000000000b71c	ldr	x8, [x28, #0x18]!
000000000000b720	sub	x9, x28, #0x8
000000000000b724	stp	x25, x9, [x0, #0x10]
000000000000b728	stp	x8, x28, [x0]
000000000000b72c	str	x0, [x8, #0x8]
000000000000b730	str	x0, [x28]
000000000000b734	ldr	x8, [x28, #0x10]
000000000000b738	add	x8, x8, #0x1
000000000000b73c	str	x8, [x28, #0x10]
000000000000b740	str	x0, [x0, #0x20]
000000000000b744	stlr	x22, [x25]
000000000000b748	ldr	x8, [x28, #0x110]
000000000000b74c	sub	x8, x8, #0x10
000000000000b750	str	x8, [x28, #0x110]
000000000000b754	movi.16b	v0, #0x0
000000000000b758	stp	q0, q0, [sp, #0x30]
000000000000b75c	add	x9, sp, #0x30
000000000000b760	add	x8, x9, #0x18
000000000000b764	mov	x0, x23
000000000000b768	blr	x26
000000000000b76c	mov	x21, x0
000000000000b770	ldr	x10, [x0]
000000000000b774	ldr	x11, [x10, #0x110]
000000000000b778	str	x9, [x10, #0x110]
000000000000b77c	stp	x11, x24, [sp, #0x38]
000000000000b780	mov	x0, x8
000000000000b784	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion.<get-converter>#internal"
000000000000b788	movi.16b	v0, #0x0
000000000000b78c	stp	q0, q0, [sp, #0x50]
000000000000b790	str	xzr, [sp, #0x70]
000000000000b794	add	x28, sp, #0x50
000000000000b798	ldr	x8, [x21]
000000000000b79c	ldr	x9, [x8, #0x110]
000000000000b7a0	str	x28, [x8, #0x110]
000000000000b7a4	mov	x8, #0x500000000
000000000000b7a8	stp	x9, x8, [sp, #0x58]
000000000000b7ac	adr	x8, #0x63c94
000000000000b7b0	nop
000000000000b7b4	adr	x9, #0x6296c
000000000000b7b8	nop
000000000000b7bc	fmov	w10, s8
000000000000b7c0	cmp	w10, #0x0
000000000000b7c4	csel	x21, x9, x8, ge
000000000000b7c8	ubfx	w20, w10, #23, #8
000000000000b7cc	and	w8, w10, #0x7fffff
000000000000b7d0	cmp	w20, #0xff
000000000000b7d4	b.ne	0xb7e8
000000000000b7d8	cbz	w8, 0xb810
000000000000b7dc	adr	x8, #0x63ca4
000000000000b7e0	nop
000000000000b7e4	b	0xb950
000000000000b7e8	mov	x22, x0
000000000000b7ec	cbz	w20, 0xb81c
000000000000b7f0	orr	w24, w8, #0x800000
000000000000b7f4	sub	w23, w20, #0x96
000000000000b7f8	cmp	w20, #0x5c
000000000000b7fc	b.lo	0xb864
000000000000b800	cmp	w20, #0xb9
000000000000b804	b.lo	0xb878
000000000000b808	mov	w25, #0x17
000000000000b80c	b	0xb8a0
000000000000b810	adr	x1, #0x63c50
000000000000b814	nop
000000000000b818	b	0xb940
000000000000b81c	cbz	w8, 0xb938
000000000000b820	lsl	w9, w8, #2
000000000000b824	cmp	w8, #0x8
000000000000b828	mov	w10, #-0x95
000000000000b82c	mov	w11, #-0x97
000000000000b830	csel	w23, w11, w10, lo
000000000000b834	csel	w24, w9, w8, lo
000000000000b838	mov	w25, #0x17
000000000000b83c	tbnz	w24, #0x17, 0xb8a0
000000000000b840	mov	x28, x24
000000000000b844	b	0xb854
000000000000b848	lsl	w28, w28, #1
000000000000b84c	sub	w25, w25, #0x1
000000000000b850	tbnz	w28, #0x17, 0xb89c
000000000000b854	ldarb	w8, [x27]
000000000000b858	tbz	w8, #0x0, 0xb848
000000000000b85c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000b860	b	0xb848
000000000000b864	mov	w25, #0x17
000000000000b868	cmn	w23, #0x3b
000000000000b86c	b.ne	0xb8a0
000000000000b870	cbz	w8, 0xb8a0
000000000000b874	mov	w23, #-0x3b
000000000000b878	cmp	w8, #0x0
000000000000b87c	cset	w4, eq
000000000000b880	mov	x0, x22
000000000000b884	mov	x1, x24
000000000000b888	mov	x2, x23
000000000000b88c	mov	w3, #0x0
000000000000b890	mov	w5, #0x17
000000000000b894	bl	"_kfun:kotlin.native.internal.NumberConverter.longDigitGenerator#internal"
000000000000b898	b	0xb8bc
000000000000b89c	add	x28, sp, #0x50
000000000000b8a0	cmp	w20, #0x0
000000000000b8a4	cset	w3, eq
000000000000b8a8	mov	w1, w24
000000000000b8ac	mov	x0, x22
000000000000b8b0	mov	x2, x23
000000000000b8b4	mov	x4, x25
000000000000b8b8	bl	"_kfun:kotlin.native.internal.NumberConverter.bigIntDigitGeneratorInstImpl#internal"
000000000000b8bc	mov	w8, #0x9680
000000000000b8c0	movk	w8, #0x4b18, lsl #16
000000000000b8c4	fmov	s0, w8
000000000000b8c8	fcmp	s8, s0
000000000000b8cc	mov	w8, #0x9680
000000000000b8d0	movk	w8, #0xcb18, lsl #16
000000000000b8d4	fmov	s0, w8
000000000000b8d8	fccmp	s8, s0, #0x0, lt
000000000000b8dc	adrp	x23, 111 ; 0x7a000
000000000000b8e0	add	x23, x23, #0x4e0
000000000000b8e4	b.ls	0xb910
000000000000b8e8	mov	w8, #0x126f
000000000000b8ec	movk	w8, #0xba83, lsl #16
000000000000b8f0	fmov	s0, w8
000000000000b8f4	fcmp	s8, s0
000000000000b8f8	b.le	0xb924
000000000000b8fc	mov	w8, #0x126f
000000000000b900	movk	w8, #0x3a83, lsl #16
000000000000b904	fmov	s0, w8
000000000000b908	fcmp	s8, s0
000000000000b90c	b.pl	0xb924
000000000000b910	add	x1, x28, #0x18
000000000000b914	mov	x0, x22
000000000000b918	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormatExponential#internal"
000000000000b91c	mov	x1, x0
000000000000b920	b	0xb940
000000000000b924	add	x1, x28, #0x20
000000000000b928	mov	x0, x22
000000000000b92c	bl	"_kfun:kotlin.native.internal.NumberConverter.freeFormat#internal"
000000000000b930	mov	x1, x0
000000000000b934	b	0xb940
000000000000b938	adr	x1, #0x63b68
000000000000b93c	nop
000000000000b940	mov	x0, x21
000000000000b944	mov	x2, x19
000000000000b948	bl	_Kotlin_String_plusImpl
000000000000b94c	mov	x8, x0
000000000000b950	str	x8, [x19]
000000000000b954	mov	x0, x23
000000000000b958	blr	x26
000000000000b95c	ldr	x9, [x0]
000000000000b960	ldr	x10, [sp, #0x58]
000000000000b964	str	x10, [x9, #0x110]
000000000000b968	str	x8, [x19]
000000000000b96c	ldr	x9, [x0]
000000000000b970	ldr	x10, [sp, #0x38]
000000000000b974	str	x10, [x9, #0x110]
000000000000b978	str	x8, [x19]
000000000000b97c	ldr	x9, [x0]
000000000000b980	ldr	x10, [sp, #0x18]
000000000000b984	str	x10, [x9, #0x110]
000000000000b988	str	x8, [x19]
000000000000b98c	mov	x0, x8
000000000000b990	ldp	x29, x30, [sp, #0xe0]
000000000000b994	ldp	x20, x19, [sp, #0xd0]
000000000000b998	ldp	x22, x21, [sp, #0xc0]
000000000000b99c	ldp	x24, x23, [sp, #0xb0]
000000000000b9a0	ldp	x26, x25, [sp, #0xa0]
000000000000b9a4	ldp	x28, x27, [sp, #0x90]
000000000000b9a8	ldp	d9, d8, [sp, #0x80]
000000000000b9ac	add	sp, sp, #0xf0
000000000000b9b0	ret
000000000000b9b4	ldr	x0, [sp, #0x8]
000000000000b9b8	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000b9bc	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000000b9c0	str	xzr, [sp, #0x28]
000000000000b9c4	stlr	xzr, [x25]
000000000000b9c8	ldr	x8, [x28, #0x128]
000000000000b9cc	sub	x8, x8, #0x10
000000000000b9d0	str	x8, [x28, #0x128]
000000000000b9d4	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
000000000000b9d8	brk	#0x1
000000000000b9dc	mov	x19, x0
000000000000b9e0	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000000b9e4	mov	x0, x19
000000000000b9e8	bl	0x558ac ; symbol stub for: __Unwind_Resume
_kfun:kotlin.Float#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
000000000000b9ec	stp	x20, x19, [sp, #-0x20]!
000000000000b9f0	stp	x29, x30, [sp, #0x10]
000000000000b9f4	add	x29, sp, #0x10
000000000000b9f8	mov	x19, x0
000000000000b9fc	adr	x8, #0x88b0d
000000000000ba00	nop
000000000000ba04	ldarb	w8, [x8]
000000000000ba08	tbz	w8, #0x0, 0xba10
000000000000ba0c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ba10	ldr	s0, [x19, #0x8]
000000000000ba14	fcmp	s0, s0
000000000000ba18	fmov	w8, s0
000000000000ba1c	mov	w9, #0x7fc00000
000000000000ba20	csel	w0, w9, w8, vs
000000000000ba24	ldp	x29, x30, [sp, #0x10]
000000000000ba28	ldp	x20, x19, [sp], #0x20
000000000000ba2c	ret
_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any:
000000000000ba30	sub	sp, sp, #0x50
000000000000ba34	stp	x22, x21, [sp, #0x20]
000000000000ba38	stp	x20, x19, [sp, #0x30]
000000000000ba3c	stp	x29, x30, [sp, #0x40]
000000000000ba40	add	x29, sp, #0x40
000000000000ba44	mov	x19, x1
000000000000ba48	mov	x20, x0
000000000000ba4c	movi.16b	v0, #0x0
000000000000ba50	stp	q0, q0, [sp]
000000000000ba54	adrp	x0, 111 ; 0x7a000
000000000000ba58	add	x0, x0, #0x4e0
000000000000ba5c	ldr	x8, [x0]
000000000000ba60	blr	x8
000000000000ba64	ldr	x21, [x0]
000000000000ba68	ldr	x8, [x21, #0x110]
000000000000ba6c	mov	x9, sp
000000000000ba70	str	x9, [x21, #0x110]
000000000000ba74	mov	x9, #0x400000000
000000000000ba78	stp	x8, x9, [sp, #0x8]
000000000000ba7c	adr	x8, #0x88a8d
000000000000ba80	nop
000000000000ba84	ldarb	w8, [x8]
000000000000ba88	tbz	w8, #0x0, 0xba90
000000000000ba8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ba90	cmp	w20, w20, sxtb
000000000000ba94	b.ne	0xbab0
000000000000ba98	add	w8, w20, #0x80
000000000000ba9c	adr	x9, #0x60624
000000000000baa0	nop
000000000000baa4	add	x0, x9, w8, sxtw #4
000000000000baa8	str	x0, [x19]
000000000000baac	b	0xbad8
000000000000bab0	ldr	x8, [x21, #0x118]
000000000000bab4	add	x0, x8, #0x70
000000000000bab8	mov	w1, #0x18
000000000000babc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bac0	adr	x8, #0x56130
000000000000bac4	nop
000000000000bac8	str	x8, [x0, #0x10]!
000000000000bacc	stur	xzr, [x0, #-0x8]
000000000000bad0	str	x0, [sp, #0x18]
000000000000bad4	str	w20, [x0, #0x8]
000000000000bad8	str	x0, [x19]
000000000000badc	ldr	x8, [sp, #0x8]
000000000000bae0	str	x8, [x21, #0x110]
000000000000bae4	ldp	x29, x30, [sp, #0x40]
000000000000bae8	ldp	x20, x19, [sp, #0x30]
000000000000baec	ldp	x22, x21, [sp, #0x20]
000000000000baf0	add	sp, sp, #0x50
000000000000baf4	ret
_kfun:kotlin#<Byte-box>(kotlin.Byte){}kotlin.Any:
000000000000baf8	sub	sp, sp, #0x50
000000000000bafc	stp	x22, x21, [sp, #0x20]
000000000000bb00	stp	x20, x19, [sp, #0x30]
000000000000bb04	stp	x29, x30, [sp, #0x40]
000000000000bb08	add	x29, sp, #0x40
000000000000bb0c	mov	x19, x1
000000000000bb10	mov	x20, x0
000000000000bb14	movi.16b	v0, #0x0
000000000000bb18	stp	q0, q0, [sp]
000000000000bb1c	adrp	x0, 111 ; 0x7a000
000000000000bb20	add	x0, x0, #0x4e0
000000000000bb24	ldr	x8, [x0]
000000000000bb28	blr	x8
000000000000bb2c	ldr	x21, [x0]
000000000000bb30	ldr	x8, [x21, #0x110]
000000000000bb34	mov	x9, sp
000000000000bb38	str	x9, [x21, #0x110]
000000000000bb3c	mov	x9, #0x400000000
000000000000bb40	stp	x8, x9, [sp, #0x8]
000000000000bb44	adr	x8, #0x889c5
000000000000bb48	nop
000000000000bb4c	ldarb	w8, [x8]
000000000000bb50	tbz	w8, #0x0, 0xbb58
000000000000bb54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bb58	adr	x8, #0x5e568
000000000000bb5c	nop
000000000000bb60	add	x8, x8, w20, sxtw #4
000000000000bb64	add	x0, x8, #0x800
000000000000bb68	str	x0, [x19]
000000000000bb6c	ldr	x8, [sp, #0x8]
000000000000bb70	str	x8, [x21, #0x110]
000000000000bb74	ldp	x29, x30, [sp, #0x40]
000000000000bb78	ldp	x20, x19, [sp, #0x30]
000000000000bb7c	ldp	x22, x21, [sp, #0x20]
000000000000bb80	add	sp, sp, #0x50
000000000000bb84	ret
_kfun:kotlin.String#toString(){}kotlin.String:
000000000000bb88	stp	x20, x19, [sp, #-0x20]!
000000000000bb8c	stp	x29, x30, [sp, #0x10]
000000000000bb90	add	x29, sp, #0x10
000000000000bb94	mov	x20, x1
000000000000bb98	mov	x19, x0
000000000000bb9c	adr	x8, #0x8896d
000000000000bba0	nop
000000000000bba4	ldarb	w8, [x8]
000000000000bba8	tbz	w8, #0x0, 0xbbb0
000000000000bbac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bbb0	str	x19, [x20]
000000000000bbb4	mov	x0, x19
000000000000bbb8	ldp	x29, x30, [sp, #0x10]
000000000000bbbc	ldp	x20, x19, [sp], #0x20
000000000000bbc0	ret
_kfun:kotlin.String#<get-length>(){}kotlin.Int:
000000000000bbc4	stp	x20, x19, [sp, #-0x20]!
000000000000bbc8	stp	x29, x30, [sp, #0x10]
000000000000bbcc	add	x29, sp, #0x10
000000000000bbd0	mov	x19, x0
000000000000bbd4	adr	x8, #0x88935
000000000000bbd8	nop
000000000000bbdc	ldarb	w8, [x8]
000000000000bbe0	tbz	w8, #0x0, 0xbbe8
000000000000bbe4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bbe8	ldr	w0, [x19, #0x8]
000000000000bbec	ldp	x29, x30, [sp, #0x10]
000000000000bbf0	ldp	x20, x19, [sp], #0x20
000000000000bbf4	ret
_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}:
000000000000bbf8	sub	sp, sp, #0x140
000000000000bbfc	stp	x28, x27, [sp, #0xe0]
000000000000bc00	stp	x26, x25, [sp, #0xf0]
000000000000bc04	stp	x24, x23, [sp, #0x100]
000000000000bc08	stp	x22, x21, [sp, #0x110]
000000000000bc0c	stp	x20, x19, [sp, #0x120]
000000000000bc10	stp	x29, x30, [sp, #0x130]
000000000000bc14	add	x29, sp, #0x130
000000000000bc18	mov	x20, x1
000000000000bc1c	mov	x19, x0
000000000000bc20	movi.16b	v0, #0x0
000000000000bc24	stp	q0, q0, [sp, #0x10]
000000000000bc28	str	q0, [sp, #0x30]
000000000000bc2c	add	x8, sp, #0x10
000000000000bc30	add	x21, x8, #0x18
000000000000bc34	adrp	x0, 111 ; 0x7a000
000000000000bc38	add	x0, x0, #0x4e0
000000000000bc3c	ldr	x9, [x0]
000000000000bc40	blr	x9
000000000000bc44	ldr	x24, [x0]
000000000000bc48	ldr	x9, [x24, #0x110]
000000000000bc4c	str	x8, [x24, #0x110]
000000000000bc50	mov	x8, #0x600000000
000000000000bc54	stp	x9, x8, [sp, #0x18]
000000000000bc58	adr	x23, #0x888b1
000000000000bc5c	nop
000000000000bc60	ldarb	w8, [x23]
000000000000bc64	tbz	w8, #0x0, 0xbc6c
000000000000bc68	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000bc6c	stp	x20, xzr, [x19, #0x8]
000000000000bc70	mov	x0, x21
000000000000bc74	bl	_Kotlin_getCurrentStackTrace
000000000000bc78	str	x0, [x19, #0x18]
000000000000bc7c	ldr	x8, [x24, #0x118]
000000000000bc80	add	x0, x8, #0x70
000000000000bc84	mov	w1, #0x18
000000000000bc88	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bc8c	mov	x21, x0
000000000000bc90	adr	x8, #0x565a0
000000000000bc94	nop
000000000000bc98	str	x8, [x21, #0x10]!
000000000000bc9c	stur	xzr, [x21, #-0x8]
000000000000bca0	str	x21, [sp, #0x30]
000000000000bca4	str	x19, [x21, #0x8]
000000000000bca8	ldr	x8, [x24, #0x118]
000000000000bcac	add	x0, x8, #0x70
000000000000bcb0	mov	w1, #0x28
000000000000bcb4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bcb8	mov	x20, x0
000000000000bcbc	adr	x8, #0x569e4
000000000000bcc0	nop
000000000000bcc4	mov	x25, x0
000000000000bcc8	str	x8, [x25, #0x10]!
000000000000bccc	str	xzr, [x0, #0x8]
000000000000bcd0	movi.16b	v0, #0x0
000000000000bcd4	stp	q0, q0, [sp, #0x40]
000000000000bcd8	add	x8, sp, #0x40
000000000000bcdc	ldp	x9, x10, [x24, #0x110]
000000000000bce0	str	x8, [x24, #0x110]
000000000000bce4	mov	x8, #0x700000000
000000000000bce8	stp	x9, x8, [sp, #0x48]
000000000000bcec	str	x25, [sp, #0x38]
000000000000bcf0	str	xzr, [sp, #0x70]
000000000000bcf4	str	q0, [sp, #0x60]
000000000000bcf8	add	x0, x10, #0x70
000000000000bcfc	mov	w1, #0x20
000000000000bd00	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bd04	adr	x26, #0x5687c
000000000000bd08	nop
000000000000bd0c	str	x26, [x0, #0x10]!
000000000000bd10	stur	xzr, [x0, #-0x8]
000000000000bd14	str	x0, [sp, #0x58]
000000000000bd18	str	x21, [x0, #0x8]
000000000000bd1c	str	x0, [x20, #0x18]
000000000000bd20	adr	x27, #0x88850
000000000000bd24	nop
000000000000bd28	ldar	x21, [x27]
000000000000bd2c	cmp	x21, #0x1
000000000000bd30	b.hi	0xbef8
000000000000bd34	ldp	x8, x9, [x24, #0x120]
000000000000bd38	cmp	x8, x9
000000000000bd3c	b.eq	0xbd5c
000000000000bd40	mov	x10, x9
000000000000bd44	ldr	x11, [x10, #-0x10]!
000000000000bd48	cmp	x11, x27
000000000000bd4c	b.eq	0xbe14
000000000000bd50	mov	x9, x10
000000000000bd54	cmp	x10, x8
000000000000bd58	b.ne	0xbd44
000000000000bd5c	add	x22, x24, #0x120
000000000000bd60	add	x0, x24, #0x138
000000000000bd64	mov	w9, #0x1
000000000000bd68	ldaxr	w8, [x0]
000000000000bd6c	stlxr	w10, w9, [x0]
000000000000bd70	cbnz	w10, 0xbd68
000000000000bd74	b	0xbd84
000000000000bd78	mov	w28, #0x1
000000000000bd7c	stlxr	w9, x28, [x27]
000000000000bd80	cbz	w9, 0xbd94
000000000000bd84	ldaxr	x21, [x27]
000000000000bd88	cbz	x21, 0xbd78
000000000000bd8c	mov	w28, #0x0
000000000000bd90	clrex
000000000000bd94	cmp	x21, #0x1
000000000000bd98	b.eq	0xbd84
000000000000bd9c	cbz	x24, 0xbdc4
000000000000bda0	ldaxr	w9, [x0]
000000000000bda4	stlxr	w10, w8, [x0]
000000000000bda8	cbnz	w10, 0xbda0
000000000000bdac	cbnz	w8, 0xbdc4
000000000000bdb0	cmp	w9, #0x1
000000000000bdb4	b.ne	0xbdc4
000000000000bdb8	ldarb	w8, [x23]
000000000000bdbc	tbz	w8, #0x0, 0xbdc4
000000000000bdc0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000bdc4	tbz	w28, #0x0, 0xbe0c
000000000000bdc8	ldr	x8, [x24, #0x118]
000000000000bdcc	add	x0, x8, #0x70
000000000000bdd0	mov	w1, #0x10
000000000000bdd4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bdd8	mov	x21, x0
000000000000bddc	adr	x8, #0x56954
000000000000bde0	nop
000000000000bde4	str	x8, [x21, #0x10]!
000000000000bde8	stur	xzr, [x21, #-0x8]
000000000000bdec	str	x21, [sp, #0x60]
000000000000bdf0	ldp	x9, x8, [x24, #0x128]
000000000000bdf4	cmp	x9, x8
000000000000bdf8	b.hs	0xbe20
000000000000bdfc	stp	x27, x21, [x9]
000000000000be00	add	x8, x9, #0x10
000000000000be04	str	x8, [x24, #0x128]
000000000000be08	b	0xbeb0
000000000000be0c	str	x21, [sp, #0x60]
000000000000be10	b	0xbef8
000000000000be14	ldur	x21, [x9, #-0x8]
000000000000be18	str	x21, [sp, #0x60]
000000000000be1c	b	0xbef8
000000000000be20	str	x22, [sp, #0x8]
000000000000be24	ldr	x10, [x22]
000000000000be28	sub	x9, x9, x10
000000000000be2c	asr	x22, x9, #4
000000000000be30	add	x9, x22, #0x1
000000000000be34	lsr	x11, x9, #60
000000000000be38	cbnz	x11, 0xbfe4
000000000000be3c	sub	x8, x8, x10
000000000000be40	asr	x10, x8, #3
000000000000be44	cmp	x10, x9
000000000000be48	csel	x9, x9, x10, lo
000000000000be4c	mov	x10, #0x7ffffffffffffff
000000000000be50	cmp	x10, x8, asr #4
000000000000be54	mov	x8, #0xfffffffffffffff
000000000000be58	csel	x23, x9, x8, hi
000000000000be5c	mov	x0, x23
000000000000be60	mov	w1, #0x10
000000000000be64	bl	0x55aec ; symbol stub for: _calloc
000000000000be68	add	x8, x0, x22, lsl #4
000000000000be6c	add	x28, x0, x23, lsl #4
000000000000be70	stp	x27, x21, [x8]
000000000000be74	add	x22, x8, #0x10
000000000000be78	ldp	x1, x9, [x24, #0x120]
000000000000be7c	sub	x2, x9, x1
000000000000be80	sub	x23, x8, x2
000000000000be84	cmp	x2, #0x1
000000000000be88	b.lt	0xbe9c
000000000000be8c	mov	x0, x23
000000000000be90	bl	0x55bd0 ; symbol stub for: _memcpy
000000000000be94	ldr	x8, [sp, #0x8]
000000000000be98	ldr	x1, [x8]
000000000000be9c	stp	x23, x22, [x24, #0x120]
000000000000bea0	str	x28, [x24, #0x130]
000000000000bea4	cbz	x1, 0xbeb0
000000000000bea8	mov	x0, x1
000000000000beac	bl	0x55b7c ; symbol stub for: _free
000000000000beb0	mov	w0, #0x1
000000000000beb4	mov	w1, #0x28
000000000000beb8	bl	0x55aec ; symbol stub for: _calloc
000000000000bebc	mov	x8, x24
000000000000bec0	ldr	x9, [x8, #0x18]!
000000000000bec4	sub	x10, x8, #0x8
000000000000bec8	stp	x27, x10, [x0, #0x10]
000000000000becc	stp	x9, x8, [x0]
000000000000bed0	str	x0, [x9, #0x8]
000000000000bed4	str	x0, [x8]
000000000000bed8	ldr	x9, [x8, #0x10]
000000000000bedc	add	x9, x9, #0x1
000000000000bee0	str	x9, [x8, #0x10]
000000000000bee4	str	x0, [x0, #0x20]
000000000000bee8	stlr	x21, [x27]
000000000000beec	ldr	x9, [x8, #0x110]
000000000000bef0	sub	x9, x9, #0x10
000000000000bef4	str	x9, [x8, #0x110]
000000000000bef8	ldr	x8, [x24, #0x118]
000000000000befc	add	x0, x8, #0x70
000000000000bf00	mov	w1, #0x20
000000000000bf04	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bf08	str	x26, [x0, #0x10]!
000000000000bf0c	stur	xzr, [x0, #-0x8]
000000000000bf10	str	x0, [sp, #0x68]
000000000000bf14	str	x21, [x0, #0x8]
000000000000bf18	str	x0, [x20, #0x20]
000000000000bf1c	ldr	x8, [x24, #0x118]
000000000000bf20	add	x0, x8, #0x70
000000000000bf24	mov	w1, #0x20
000000000000bf28	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bf2c	mov	x21, x0
000000000000bf30	adr	x8, #0x56890
000000000000bf34	nop
000000000000bf38	str	x8, [x21, #0x10]!
000000000000bf3c	stur	xzr, [x21, #-0x8]
000000000000bf40	movi.16b	v0, #0x0
000000000000bf44	stp	q0, q0, [sp, #0x80]
000000000000bf48	add	x8, sp, #0x80
000000000000bf4c	ldp	x9, x10, [x24, #0x110]
000000000000bf50	str	x8, [x24, #0x110]
000000000000bf54	mov	x8, #0x500000000
000000000000bf58	stp	x9, x8, [sp, #0x88]
000000000000bf5c	str	x21, [sp, #0x70]
000000000000bf60	str	xzr, [sp, #0xa0]
000000000000bf64	add	x0, x10, #0x70
000000000000bf68	mov	w1, #0x18
000000000000bf6c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bf70	adr	x22, #0x566a0
000000000000bf74	nop
000000000000bf78	str	x22, [x0, #0x10]!
000000000000bf7c	stur	xzr, [x0, #-0x8]
000000000000bf80	str	x0, [sp, #0x98]
000000000000bf84	str	wzr, [x0, #0x8]
000000000000bf88	str	x0, [x21, #0x8]
000000000000bf8c	ldr	x8, [x24, #0x118]
000000000000bf90	add	x0, x8, #0x70
000000000000bf94	mov	w1, #0x18
000000000000bf98	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000bf9c	str	x22, [x0, #0x10]!
000000000000bfa0	stur	xzr, [x0, #-0x8]
000000000000bfa4	str	x0, [sp, #0xa0]
000000000000bfa8	str	wzr, [x0, #0x8]
000000000000bfac	str	x0, [x21, #0x10]
000000000000bfb0	str	x21, [x20, #0x28]
000000000000bfb4	str	x25, [sp, #0x38]
000000000000bfb8	str	x25, [x19, #0x20]
000000000000bfbc	ldr	x8, [sp, #0x18]
000000000000bfc0	str	x8, [x24, #0x110]
000000000000bfc4	ldp	x29, x30, [sp, #0x130]
000000000000bfc8	ldp	x20, x19, [sp, #0x120]
000000000000bfcc	ldp	x22, x21, [sp, #0x110]
000000000000bfd0	ldp	x24, x23, [sp, #0x100]
000000000000bfd4	ldp	x26, x25, [sp, #0xf0]
000000000000bfd8	ldp	x28, x27, [sp, #0xe0]
000000000000bfdc	add	sp, sp, #0x140
000000000000bfe0	ret
000000000000bfe4	ldr	x0, [sp, #0x8]
000000000000bfe8	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
_kfun:kotlin.Throwable#<get-message>(){}kotlin.String?:
000000000000bfec	stp	x20, x19, [sp, #-0x20]!
000000000000bff0	stp	x29, x30, [sp, #0x10]
000000000000bff4	add	x29, sp, #0x10
000000000000bff8	mov	x19, x1
000000000000bffc	mov	x20, x0
000000000000c000	adr	x8, #0x88509
000000000000c004	nop
000000000000c008	ldarb	w8, [x8]
000000000000c00c	tbz	w8, #0x0, 0xc014
000000000000c010	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c014	ldr	x0, [x20, #0x8]
000000000000c018	str	x0, [x19]
000000000000c01c	ldp	x29, x30, [sp, #0x10]
000000000000c020	ldp	x20, x19, [sp], #0x20
000000000000c024	ret
_kfun:kotlin.Throwable#<get-cause>(){}kotlin.Throwable?:
000000000000c028	stp	x20, x19, [sp, #-0x20]!
000000000000c02c	stp	x29, x30, [sp, #0x10]
000000000000c030	add	x29, sp, #0x10
000000000000c034	mov	x19, x1
000000000000c038	mov	x20, x0
000000000000c03c	adr	x8, #0x884cd
000000000000c040	nop
000000000000c044	ldarb	w8, [x8]
000000000000c048	tbz	w8, #0x0, 0xc050
000000000000c04c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c050	ldr	x0, [x20, #0x10]
000000000000c054	str	x0, [x19]
000000000000c058	ldp	x29, x30, [sp, #0x10]
000000000000c05c	ldp	x20, x19, [sp], #0x20
000000000000c060	ret
_kfun:kotlin.Throwable.<get-stackTraceStrings>#internal:
000000000000c064	stp	x20, x19, [sp, #-0x20]!
000000000000c068	stp	x29, x30, [sp, #0x10]
000000000000c06c	add	x29, sp, #0x10
000000000000c070	mov	x19, x1
000000000000c074	mov	x20, x0
000000000000c078	adr	x8, #0x88491
000000000000c07c	nop
000000000000c080	ldarb	w8, [x8]
000000000000c084	tbz	w8, #0x0, 0xc08c
000000000000c088	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c08c	ldr	x0, [x20, #0x20]
000000000000c090	ldr	x8, [x0]
000000000000c094	and	x8, x8, #0xfffffffffffffffc
000000000000c098	ldr	x8, [x8]
000000000000c09c	ldr	w9, [x8, #0x3c]
000000000000c0a0	ldr	x8, [x8, #0x40]
000000000000c0a4	tbnz	w9, #0x1f, 0xc0b4
000000000000c0a8	mov	w10, #0x150
000000000000c0ac	and	x9, x9, x10
000000000000c0b0	b	0xc138
000000000000c0b4	neg	w10, w9
000000000000c0b8	mvn	w9, w9
000000000000c0bc	cmp	w10, #0x9
000000000000c0c0	b.ge	0xc0f8
000000000000c0c4	cmp	w10, #0x2
000000000000c0c8	b.lt	0xc12c
000000000000c0cc	mov	x10, #0x0
000000000000c0d0	mov	x11, x8
000000000000c0d4	ldr	w12, [x11]
000000000000c0d8	cmp	w12, #0x14f
000000000000c0dc	b.gt	0xc134
000000000000c0e0	add	x10, x10, #0x1
000000000000c0e4	add	x11, x11, #0x10
000000000000c0e8	cmp	x9, x10
000000000000c0ec	b.ne	0xc0d4
000000000000c0f0	mov	x10, x9
000000000000c0f4	b	0xc134
000000000000c0f8	mov	w10, #0x0
000000000000c0fc	add	w11, w9, w10
000000000000c100	cmp	w11, #0x0
000000000000c104	cinc	w11, w11, lt
000000000000c108	asr	w11, w11, #1
000000000000c10c	sbfiz	x12, x11, #4, #32
000000000000c110	ldr	w12, [x8, x12]
000000000000c114	cmp	w12, #0x150
000000000000c118	csinc	w10, w10, w11, ge
000000000000c11c	csel	w9, w9, w11, lt
000000000000c120	cmp	w10, w9
000000000000c124	b.lt	0xc0fc
000000000000c128	b	0xc134
000000000000c12c	mov	w10, #0x0
000000000000c130	b	0xc134
000000000000c134	sxtw	x9, w10
000000000000c138	add	x8, x8, x9, lsl #4
000000000000c13c	ldr	x8, [x8, #0x8]
000000000000c140	ldr	x8, [x8]
000000000000c144	mov	x1, x19
000000000000c148	blr	x8
000000000000c14c	str	x0, [x19]
000000000000c150	ldp	x29, x30, [sp, #0x10]
000000000000c154	ldp	x20, x19, [sp], #0x20
000000000000c158	ret
_kfun:kotlin.Throwable#printStackTrace(){}:
000000000000c15c	sub	sp, sp, #0xd0
000000000000c160	stp	x22, x21, [sp, #0xa0]
000000000000c164	stp	x20, x19, [sp, #0xb0]
000000000000c168	stp	x29, x30, [sp, #0xc0]
000000000000c16c	add	x29, sp, #0xc0
000000000000c170	mov	x19, x0
000000000000c174	movi.16b	v0, #0x0
000000000000c178	stp	q0, q0, [sp, #0x30]
000000000000c17c	stp	q0, q0, [sp, #0x10]
000000000000c180	adr	x8, #0x56020
000000000000c184	nop
000000000000c188	orr	x8, x8, #0x3
000000000000c18c	str	x8, [sp, #0x8]
000000000000c190	adrp	x0, 110 ; 0x7a000
000000000000c194	add	x0, x0, #0x4e0
000000000000c198	ldr	x8, [x0]
000000000000c19c	blr	x8
000000000000c1a0	ldr	x21, [x0]
000000000000c1a4	ldr	x8, [x21, #0x110]
000000000000c1a8	add	x9, sp, #0x30
000000000000c1ac	str	x9, [x21, #0x110]
000000000000c1b0	mov	x20, #0x400000000
000000000000c1b4	stp	x8, x20, [sp, #0x38]
000000000000c1b8	adr	x8, #0x88351
000000000000c1bc	nop
000000000000c1c0	ldarb	w8, [x8]
000000000000c1c4	tbz	w8, #0x0, 0xc1cc
000000000000c1c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c1cc	add	x8, sp, #0x8
000000000000c1d0	str	x8, [sp, #0x48]
000000000000c1d4	movi.16b	v0, #0x0
000000000000c1d8	stp	q0, q0, [sp, #0x50]
000000000000c1dc	str	xzr, [sp, #0x70]
000000000000c1e0	add	x8, sp, #0x50
000000000000c1e4	ldp	x9, x10, [x21, #0x110]
000000000000c1e8	str	x8, [x21, #0x110]
000000000000c1ec	mov	x8, #0x500000000
000000000000c1f0	stp	x9, x8, [sp, #0x58]
000000000000c1f4	str	x19, [sp, #0x10]
000000000000c1f8	add	x0, x10, #0x70
000000000000c1fc	mov	w1, #0x20
000000000000c200	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c204	mov	x19, x0
000000000000c208	adr	x8, #0x58bb8
000000000000c20c	nop
000000000000c210	str	x8, [x19, #0x10]!
000000000000c214	stur	xzr, [x19, #-0x8]
000000000000c218	str	x19, [sp, #0x68]
000000000000c21c	mov	x0, x19
000000000000c220	mov	w1, #0xa
000000000000c224	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000c228	str	x19, [sp, #0x18]
000000000000c22c	ldr	x8, [x21, #0x118]
000000000000c230	add	x0, x8, #0x70
000000000000c234	mov	w1, #0x18
000000000000c238	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c23c	mov	x19, x0
000000000000c240	adr	x8, #0x58470
000000000000c244	nop
000000000000c248	str	x8, [x19, #0x10]!
000000000000c24c	stur	xzr, [x19, #-0x8]
000000000000c250	str	x19, [sp, #0x70]
000000000000c254	movi.16b	v0, #0x0
000000000000c258	stp	q0, q0, [x29, #-0x40]
000000000000c25c	sub	x8, x29, #0x40
000000000000c260	ldp	x9, x10, [x21, #0x110]
000000000000c264	str	x8, [x21, #0x110]
000000000000c268	stp	x9, x20, [x29, #-0x38]
000000000000c26c	add	x0, x10, #0x70
000000000000c270	mov	w1, #0x60
000000000000c274	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000c278	mov	x20, x0
000000000000c27c	adr	x8, #0x57d84
000000000000c280	nop
000000000000c284	str	x8, [x20, #0x10]!
000000000000c288	stur	xzr, [x20, #-0x8]
000000000000c28c	stur	x20, [x29, #-0x28]
000000000000c290	mov	x0, x20
000000000000c294	mov	w1, #0x8
000000000000c298	bl	"_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}"
000000000000c29c	str	x20, [x19, #0x8]
000000000000c2a0	str	x19, [sp, #0x20]
000000000000c2a4	ldr	x8, [sp, #0x58]
000000000000c2a8	str	x8, [x21, #0x110]
000000000000c2ac	mov	w8, #0x1
000000000000c2b0	strb	w8, [sp, #0x28]
000000000000c2b4	ldr	x1, [sp, #0x10]
000000000000c2b8	adr	x2, #0x61e68
000000000000c2bc	nop
000000000000c2c0	add	x0, sp, #0x8
000000000000c2c4	mov	x3, x2
000000000000c2c8	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpFullTrace#internal"
000000000000c2cc	ldr	x8, [sp, #0x38]
000000000000c2d0	str	x8, [x21, #0x110]
000000000000c2d4	ldp	x29, x30, [sp, #0xc0]
000000000000c2d8	ldp	x20, x19, [sp, #0xb0]
000000000000c2dc	ldp	x22, x21, [sp, #0xa0]
000000000000c2e0	add	sp, sp, #0xd0
000000000000c2e4	ret
_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal:
000000000000c2e8	sub	sp, sp, #0xd0
000000000000c2ec	stp	x24, x23, [sp, #0x90]
000000000000c2f0	stp	x22, x21, [sp, #0xa0]
000000000000c2f4	stp	x20, x19, [sp, #0xb0]
000000000000c2f8	stp	x29, x30, [sp, #0xc0]
000000000000c2fc	add	x29, sp, #0xc0
000000000000c300	mov	x19, x1
000000000000c304	mov	x20, x0
000000000000c308	movi.16b	v0, #0x0
000000000000c30c	stp	q0, q0, [sp]
000000000000c310	str	xzr, [sp, #0x20]
000000000000c314	adrp	x0, 110 ; 0x7a000
000000000000c318	add	x0, x0, #0x4e0
000000000000c31c	ldr	x8, [x0]
000000000000c320	blr	x8
000000000000c324	ldr	x22, [x0]
000000000000c328	ldr	x8, [x22, #0x110]
000000000000c32c	mov	x9, sp
000000000000c330	str	x9, [x22, #0x110]
000000000000c334	mov	x9, #0x500000000
000000000000c338	stp	x8, x9, [sp, #0x8]
000000000000c33c	adr	x8, #0x881cd
000000000000c340	nop
000000000000c344	ldarb	w8, [x8]
000000000000c348	tbz	w8, #0x0, 0xc350
000000000000c34c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c350	ldrb	w8, [x20, #0x20]
000000000000c354	cmp	w8, #0x1
000000000000c358	b.ne	0xc39c
000000000000c35c	movi.16b	v0, #0x0
000000000000c360	stp	q0, q0, [sp, #0x30]
000000000000c364	ldr	x8, [x22, #0x110]
000000000000c368	add	x20, sp, #0x30
000000000000c36c	str	x20, [x22, #0x110]
000000000000c370	mov	x9, #0x400000000
000000000000c374	stp	x8, x9, [sp, #0x38]
000000000000c378	cbz	x19, 0xc3b4
000000000000c37c	add	x1, x20, #0x18
000000000000c380	ldr	x8, [x19]
000000000000c384	and	x8, x8, #0xfffffffffffffffc
000000000000c388	ldr	x8, [x8]
000000000000c38c	ldr	x8, [x8, #0x80]
000000000000c390	mov	x0, x19
000000000000c394	blr	x8
000000000000c398	b	0xc3bc
000000000000c39c	mov	x8, sp
000000000000c3a0	add	x2, x8, #0x20
000000000000c3a4	mov	x0, x19
000000000000c3a8	mov	w1, #0xa
000000000000c3ac	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Char){}kotlin.text.StringBuilder"
000000000000c3b0	b	0xc490
000000000000c3b4	adr	x0, #0x61e9c
000000000000c3b8	nop
000000000000c3bc	bl	_Kotlin_io_Console_println
000000000000c3c0	ldr	x8, [sp, #0x38]
000000000000c3c4	str	x8, [x22, #0x110]
000000000000c3c8	movi.16b	v0, #0x0
000000000000c3cc	stp	q0, q0, [sp, #0x30]
000000000000c3d0	str	xzr, [sp, #0x80]
000000000000c3d4	stp	q0, q0, [sp, #0x60]
000000000000c3d8	str	q0, [sp, #0x50]
000000000000c3dc	str	x20, [x22, #0x110]
000000000000c3e0	mov	x9, #0xb00000000
000000000000c3e4	stp	x8, x9, [sp, #0x38]
000000000000c3e8	ldr	w20, [x19, #0x10]
000000000000c3ec	tbz	w20, #0x1f, 0xc474
000000000000c3f0	ldr	x23, [x19, #0x8]
000000000000c3f4	stp	x23, x23, [sp, #0x78]
000000000000c3f8	ldr	w2, [x23, #0x8]
000000000000c3fc	and	w21, w2, w2, asr #31
000000000000c400	mov	x0, x20
000000000000c404	mov	x1, x21
000000000000c408	bl	_checkRangeIndexes
000000000000c40c	ldr	xzr, [x23]
000000000000c410	cmp	w20, w21
000000000000c414	b.ge	0xc474
000000000000c418	sxtw	x8, w20
000000000000c41c	add	x8, x23, x8, lsl #1
000000000000c420	add	x8, x8, #0x10
000000000000c424	mvn	w9, w20
000000000000c428	add	w9, w21, w9
000000000000c42c	cmp	w9, #0xf
000000000000c430	b.lo	0xc464
000000000000c434	add	x10, x9, #0x1
000000000000c438	and	x9, x10, #0x1fffffff0
000000000000c43c	add	w20, w20, w9
000000000000c440	movi.16b	v0, #0x0
000000000000c444	mov	x11, x8
000000000000c448	mov	x12, x9
000000000000c44c	stp	q0, q0, [x11], #0x20
000000000000c450	subs	x12, x12, #0x10
000000000000c454	b.ne	0xc44c
000000000000c458	cmp	x10, x9
000000000000c45c	b.eq	0xc474
000000000000c460	add	x8, x8, x9, lsl #1
000000000000c464	sub	w9, w21, w20
000000000000c468	strh	wzr, [x8], #0x2
000000000000c46c	subs	w9, w9, #0x1
000000000000c470	b.ne	0xc468
000000000000c474	mov	x0, x19
000000000000c478	mov	w1, #0x0
000000000000c47c	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000000c480	str	wzr, [x19, #0x10]
000000000000c484	ldr	x8, [sp, #0x38]
000000000000c488	str	x8, [x22, #0x110]
000000000000c48c	str	x19, [sp, #0x18]
000000000000c490	ldr	x8, [sp, #0x8]
000000000000c494	str	x8, [x22, #0x110]
000000000000c498	ldp	x29, x30, [sp, #0xc0]
000000000000c49c	ldp	x20, x19, [sp, #0xb0]
000000000000c4a0	ldp	x22, x21, [sp, #0xa0]
000000000000c4a4	ldp	x24, x23, [sp, #0x90]
000000000000c4a8	add	sp, sp, #0xd0
000000000000c4ac	ret
_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpFullTrace#internal:
000000000000c4b0	sub	sp, sp, #0xa0
000000000000c4b4	stp	x26, x25, [sp, #0x50]
000000000000c4b8	stp	x24, x23, [sp, #0x60]
000000000000c4bc	stp	x22, x21, [sp, #0x70]
000000000000c4c0	stp	x20, x19, [sp, #0x80]
000000000000c4c4	stp	x29, x30, [sp, #0x90]
000000000000c4c8	add	x29, sp, #0x90
000000000000c4cc	mov	x21, x3
000000000000c4d0	mov	x19, x2
000000000000c4d4	mov	x22, x1
000000000000c4d8	mov	x20, x0
000000000000c4dc	movi.16b	v0, #0x0
000000000000c4e0	stp	q0, q0, [sp]
000000000000c4e4	str	xzr, [sp, #0x40]
000000000000c4e8	stp	q0, q0, [sp, #0x20]
000000000000c4ec	mov	x25, sp
000000000000c4f0	adrp	x0, 110 ; 0x7a000
000000000000c4f4	add	x0, x0, #0x4e0
000000000000c4f8	ldr	x8, [x0]
000000000000c4fc	blr	x8
000000000000c500	ldr	x23, [x0]
000000000000c504	ldr	x8, [x23, #0x110]
000000000000c508	str	x25, [x23, #0x110]
000000000000c50c	mov	x9, #0x900000000
000000000000c510	stp	x8, x9, [sp, #0x8]
000000000000c514	adr	x24, #0x87ff5
000000000000c518	nop
000000000000c51c	ldarb	w8, [x24]
000000000000c520	tbz	w8, #0x0, 0xc528
000000000000c524	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c528	mov	x0, x20
000000000000c52c	mov	x1, x22
000000000000c530	mov	x2, x19
000000000000c534	mov	x3, x21
000000000000c538	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpSelfTrace#internal"
000000000000c53c	cbz	w0, 0xc5c0
000000000000c540	add	x21, x25, #0x40
000000000000c544	mov	x8, sp
000000000000c548	add	x1, x8, #0x18
000000000000c54c	ldr	x8, [x22]
000000000000c550	and	x8, x8, #0xfffffffffffffffc
000000000000c554	ldr	x8, [x8]
000000000000c558	ldr	x8, [x8, #0x88]
000000000000c55c	mov	x0, x22
000000000000c560	blr	x8
000000000000c564	adr	x22, #0x62aec
000000000000c568	nop
000000000000c56c	b	0xc5a8
000000000000c570	ldr	x1, [sp, #0x20]
000000000000c574	str	x1, [sp, #0x30]
000000000000c578	mov	x0, x20
000000000000c57c	mov	x2, x19
000000000000c580	mov	x3, x22
000000000000c584	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpSelfTrace#internal"
000000000000c588	ldr	x0, [sp, #0x20]
000000000000c58c	str	x0, [sp, #0x38]
000000000000c590	ldr	x8, [x0]
000000000000c594	and	x8, x8, #0xfffffffffffffffc
000000000000c598	ldr	x8, [x8]
000000000000c59c	ldr	x8, [x8, #0x88]
000000000000c5a0	mov	x1, x21
000000000000c5a4	blr	x8
000000000000c5a8	stp	x0, x0, [sp, #0x20]
000000000000c5ac	cbz	x0, 0xc5c0
000000000000c5b0	ldarb	w8, [x24]
000000000000c5b4	tbz	w8, #0x0, 0xc570
000000000000c5b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c5bc	b	0xc570
000000000000c5c0	ldr	x8, [sp, #0x8]
000000000000c5c4	str	x8, [x23, #0x110]
000000000000c5c8	ldp	x29, x30, [sp, #0x90]
000000000000c5cc	ldp	x20, x19, [sp, #0x80]
000000000000c5d0	ldp	x22, x21, [sp, #0x70]
000000000000c5d4	ldp	x24, x23, [sp, #0x60]
000000000000c5d8	ldp	x26, x25, [sp, #0x50]
000000000000c5dc	add	sp, sp, #0xa0
000000000000c5e0	ret
_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpSelfTrace#internal:
000000000000c5e4	sub	sp, sp, #0x170
000000000000c5e8	stp	x28, x27, [sp, #0x110]
000000000000c5ec	stp	x26, x25, [sp, #0x120]
000000000000c5f0	stp	x24, x23, [sp, #0x130]
000000000000c5f4	stp	x22, x21, [sp, #0x140]
000000000000c5f8	stp	x20, x19, [sp, #0x150]
000000000000c5fc	stp	x29, x30, [sp, #0x160]
000000000000c600	add	x29, sp, #0x160
000000000000c604	mov	x22, x3
000000000000c608	str	x2, [sp, #0x28]
000000000000c60c	mov	x28, x1
000000000000c610	mov	x20, x0
000000000000c614	movi.16b	v0, #0x0
000000000000c618	stp	q0, q0, [sp, #0x30]
000000000000c61c	str	xzr, [sp, #0x100]
000000000000c620	stp	q0, q0, [sp, #0xe0]
000000000000c624	stp	q0, q0, [sp, #0xc0]
000000000000c628	stp	q0, q0, [sp, #0xa0]
000000000000c62c	stp	q0, q0, [sp, #0x80]
000000000000c630	stp	q0, q0, [sp, #0x60]
000000000000c634	str	q0, [sp, #0x50]
000000000000c638	add	x21, sp, #0x30
000000000000c63c	adrp	x0, 110 ; 0x7a000
000000000000c640	add	x0, x0, #0x4e0
000000000000c644	ldr	x8, [x0]
000000000000c648	blr	x8
000000000000c64c	ldr	x19, [x0]
000000000000c650	ldr	x8, [x19, #0x110]
000000000000c654	str	x21, [x19, #0x110]
000000000000c658	mov	x9, #0x1b00000000
000000000000c65c	stp	x8, x9, [sp, #0x38]
000000000000c660	adr	x8, #0x87ea9
000000000000c664	nop
000000000000c668	ldarb	w8, [x8]
000000000000c66c	tbz	w8, #0x0, 0xc674
000000000000c670	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c674	ldr	x0, [x20, #0x18]
000000000000c678	ldr	x8, [x0]
000000000000c67c	and	x8, x8, #0xfffffffffffffffc
000000000000c680	ldr	x8, [x8]
000000000000c684	ldr	w9, [x8, #0x3c]
000000000000c688	ldr	x8, [x8, #0x40]
000000000000c68c	tbnz	w9, #0x1f, 0xc698
000000000000c690	and	x9, x9, #0xc0
000000000000c694	b	0xc71c
000000000000c698	neg	w10, w9
000000000000c69c	mvn	w9, w9
000000000000c6a0	cmp	w10, #0x9
000000000000c6a4	b.ge	0xc6dc
000000000000c6a8	cmp	w10, #0x2
000000000000c6ac	b.lt	0xc710
000000000000c6b0	mov	x10, #0x0
000000000000c6b4	mov	x11, x8
000000000000c6b8	ldr	w12, [x11]
000000000000c6bc	cmp	w12, #0xbf
000000000000c6c0	b.gt	0xc718
000000000000c6c4	add	x10, x10, #0x1
000000000000c6c8	add	x11, x11, #0x10
000000000000c6cc	cmp	x9, x10
000000000000c6d0	b.ne	0xc6b8
000000000000c6d4	mov	x10, x9
000000000000c6d8	b	0xc718
000000000000c6dc	mov	w10, #0x0
000000000000c6e0	add	w11, w9, w10
000000000000c6e4	cmp	w11, #0x0
000000000000c6e8	cinc	w11, w11, lt
000000000000c6ec	asr	w11, w11, #1
000000000000c6f0	sbfiz	x12, x11, #4, #32
000000000000c6f4	ldr	w12, [x8, x12]
000000000000c6f8	cmp	w12, #0xc0
000000000000c6fc	csinc	w10, w10, w11, ge
000000000000c700	csel	w9, w9, w11, lt
000000000000c704	cmp	w10, w9
000000000000c708	b.lt	0xc6e0
000000000000c70c	b	0xc718
000000000000c710	mov	w10, #0x0
000000000000c714	b	0xc718
000000000000c718	sxtw	x9, w10
000000000000c71c	add	x8, x8, x9, lsl #4
000000000000c720	ldr	x8, [x8, #0x8]
000000000000c724	ldr	x8, [x8]
000000000000c728	mov	x1, x28
000000000000c72c	blr	x8
000000000000c730	ldr	x23, [x20, #0x10]
000000000000c734	tbz	w0, #0x0, 0xc838
000000000000c738	str	x19, [sp, #0x10]
000000000000c73c	add	x24, x21, #0x50
000000000000c740	add	x25, x21, #0x60
000000000000c744	add	x2, x21, #0x48
000000000000c748	add	x26, x21, #0x58
000000000000c74c	mov	x0, x23
000000000000c750	ldr	x1, [sp, #0x28]
000000000000c754	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c758	mov	x1, x22
000000000000c75c	mov	x2, x24
000000000000c760	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c764	ldr	x8, [x28]
000000000000c768	and	x8, x8, #0xfffffffffffffffc
000000000000c76c	ldr	x8, [x8]
000000000000c770	ldr	x8, [x8, #0x80]
000000000000c774	mov	x0, x28
000000000000c778	mov	x1, x26
000000000000c77c	blr	x8
000000000000c780	mov	x1, x0
000000000000c784	mov	x0, x23
000000000000c788	mov	x2, x25
000000000000c78c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c790	mov	x0, x20
000000000000c794	mov	x1, x23
000000000000c798	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
000000000000c79c	stp	x28, x20, [sp, #0x18]
000000000000c7a0	ldr	x8, [x20, #0x8]
000000000000c7a4	cmp	x8, x28
000000000000c7a8	b.eq	0xc8d0
000000000000c7ac	mov	x20, #0x0
000000000000c7b0	ldr	x22, [x8, #0x18]
000000000000c7b4	ldr	w8, [x22, #0x8]
000000000000c7b8	ldr	x23, [x28, #0x18]
000000000000c7bc	ldr	w9, [x23, #0x8]
000000000000c7c0	cmp	w8, w9
000000000000c7c4	csel	w10, w9, w8, gt
000000000000c7c8	add	x25, x23, #0x10
000000000000c7cc	add	x26, x22, #0x10
000000000000c7d0	bic	w24, w10, w10, asr #31
000000000000c7d4	sub	w27, w8, #0x1
000000000000c7d8	sub	w28, w9, #0x1
000000000000c7dc	cmp	x24, x20
000000000000c7e0	b.eq	0xc8dc
000000000000c7e4	adr	x8, #0x87d25
000000000000c7e8	nop
000000000000c7ec	ldarb	w8, [x8]
000000000000c7f0	tbz	w8, #0x0, 0xc7f8
000000000000c7f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c7f8	ldr	w8, [x23, #0x8]
000000000000c7fc	cmp	w8, w28
000000000000c800	b.ls	0xcde8
000000000000c804	ldr	w8, [x22, #0x8]
000000000000c808	cmp	w8, w27
000000000000c80c	b.ls	0xcde8
000000000000c810	ldr	x8, [x25, w28, sxtw #3]
000000000000c814	ldr	x9, [x26, w27, sxtw #3]
000000000000c818	cmp	x8, x9
000000000000c81c	b.ne	0xc8d8
000000000000c820	add	x20, x20, #0x1
000000000000c824	sub	w27, w27, #0x1
000000000000c828	sub	w28, w28, #0x1
000000000000c82c	cmp	x24, x20
000000000000c830	b.ne	0xc7e4
000000000000c834	b	0xc8dc
000000000000c838	add	x24, x21, #0x20
000000000000c83c	add	x25, x21, #0x30
000000000000c840	add	x26, x21, #0x40
000000000000c844	add	x2, x21, #0x18
000000000000c848	add	x8, sp, #0x30
000000000000c84c	add	x27, x8, #0x28
000000000000c850	mov	x21, x28
000000000000c854	add	x28, x8, #0x38
000000000000c858	mov	x0, x23
000000000000c85c	ldr	x1, [sp, #0x28]
000000000000c860	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c864	mov	x1, x22
000000000000c868	mov	x2, x24
000000000000c86c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c870	adr	x1, #0x62810
000000000000c874	nop
000000000000c878	mov	x2, x27
000000000000c87c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c880	ldr	x8, [x21]
000000000000c884	and	x8, x8, #0xfffffffffffffffc
000000000000c888	ldr	x8, [x8]
000000000000c88c	ldr	x8, [x8, #0x80]
000000000000c890	mov	x0, x21
000000000000c894	mov	x1, x25
000000000000c898	blr	x8
000000000000c89c	mov	x1, x0
000000000000c8a0	mov	x0, x23
000000000000c8a4	mov	x2, x28
000000000000c8a8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c8ac	adr	x1, #0x61a04
000000000000c8b0	nop
000000000000c8b4	mov	x2, x26
000000000000c8b8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c8bc	mov	x0, x20
000000000000c8c0	mov	x1, x23
000000000000c8c4	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
000000000000c8c8	mov	w0, #0x0
000000000000c8cc	b	0xcdc0
000000000000c8d0	mov	w19, #0x0
000000000000c8d4	b	0xc8ec
000000000000c8d8	mov	x24, x20
000000000000c8dc	sub	w8, w24, #0x1
000000000000c8e0	bic	w19, w8, w8, asr #31
000000000000c8e4	add	x21, sp, #0x30
000000000000c8e8	ldr	x28, [sp, #0x18]
000000000000c8ec	add	x1, x21, #0x68
000000000000c8f0	mov	x0, x28
000000000000c8f4	bl	"_kfun:kotlin.Throwable.<get-stackTraceStrings>#internal"
000000000000c8f8	ldr	w8, [x0, #0x8]
000000000000c8fc	str	w19, [sp, #0xc]
000000000000c900	sub	w20, w8, w19
000000000000c904	cmp	w20, #0x1
000000000000c908	b.lt	0xc9b4
000000000000c90c	mov	x22, #0x0
000000000000c910	add	x8, sp, #0x30
000000000000c914	add	x23, x8, #0x70
000000000000c918	add	x24, x8, #0x80
000000000000c91c	add	x25, x8, #0x90
000000000000c920	add	x26, x8, #0x88
000000000000c924	adr	x27, #0x627ac
000000000000c928	nop
000000000000c92c	ldr	x21, [sp, #0x20]
000000000000c930	adr	x8, #0x87bd9
000000000000c934	nop
000000000000c938	ldarb	w8, [x8]
000000000000c93c	tbz	w8, #0x0, 0xc944
000000000000c940	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000c944	mov	x0, x28
000000000000c948	mov	x1, x23
000000000000c94c	bl	"_kfun:kotlin.Throwable.<get-stackTraceStrings>#internal"
000000000000c950	ldr	w8, [x0, #0x8]
000000000000c954	cmp	x22, x8
000000000000c958	b.hs	0xcde8
000000000000c95c	add	x19, x22, #0x1
000000000000c960	add	x8, x0, x22, lsl #3
000000000000c964	ldr	x28, [x8, #0x10]
000000000000c968	str	x28, [sp, #0xa8]
000000000000c96c	ldr	x22, [x21, #0x10]
000000000000c970	mov	x0, x22
000000000000c974	ldr	x1, [sp, #0x28]
000000000000c978	mov	x2, x24
000000000000c97c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c980	mov	x1, x27
000000000000c984	mov	x2, x26
000000000000c988	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c98c	mov	x1, x28
000000000000c990	mov	x2, x25
000000000000c994	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c998	mov	x0, x21
000000000000c99c	mov	x1, x22
000000000000c9a0	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
000000000000c9a4	mov	x22, x19
000000000000c9a8	cmp	x20, x19
000000000000c9ac	ldr	x28, [sp, #0x18]
000000000000c9b0	b.ne	0xc930
000000000000c9b4	ldr	x26, [sp, #0x20]
000000000000c9b8	add	x20, sp, #0x30
000000000000c9bc	ldr	w19, [sp, #0xc]
000000000000c9c0	cbz	w19, 0xca1c
000000000000c9c4	add	x22, x20, #0xa0
000000000000c9c8	add	x23, x20, #0xb0
000000000000c9cc	add	x2, x20, #0x98
000000000000c9d0	add	x24, x20, #0xa8
000000000000c9d4	ldr	x25, [x26, #0x10]
000000000000c9d8	mov	x0, x25
000000000000c9dc	ldr	x1, [sp, #0x28]
000000000000c9e0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c9e4	adr	x1, #0x6270c
000000000000c9e8	nop
000000000000c9ec	mov	x2, x22
000000000000c9f0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000c9f4	mov	x1, x19
000000000000c9f8	mov	x2, x24
000000000000c9fc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000ca00	adr	x1, #0x62720
000000000000ca04	nop
000000000000ca08	mov	x2, x23
000000000000ca0c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000ca10	mov	x0, x26
000000000000ca14	mov	x1, x25
000000000000ca18	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.endln#internal"
000000000000ca1c	ldr	x22, [x28, #0x28]
000000000000ca20	str	x22, [sp, #0xe8]
000000000000ca24	ldr	x19, [sp, #0x10]
000000000000ca28	cbz	x22, 0xca64
000000000000ca2c	ldr	x8, [x22]
000000000000ca30	and	x8, x8, #0xfffffffffffffffc
000000000000ca34	ldr	x8, [x8]
000000000000ca38	ldr	w9, [x8, #0x3c]
000000000000ca3c	ldr	x8, [x8, #0x40]
000000000000ca40	tbnz	w9, #0x1f, 0xca6c
000000000000ca44	mov	w10, #0x12
000000000000ca48	and	x9, x9, x10
000000000000ca4c	add	x8, x8, x9, lsl #4
000000000000ca50	ldr	x8, [x8, #0x8]
000000000000ca54	ldr	x8, [x8, #0x18]
000000000000ca58	mov	x0, x22
000000000000ca5c	blr	x8
000000000000ca60	tbz	w0, #0x0, 0xcb08
000000000000ca64	mov	w0, #0x1
000000000000ca68	b	0xcdc0
000000000000ca6c	neg	w10, w9
000000000000ca70	mvn	w9, w9
000000000000ca74	cmp	w10, #0x9
000000000000ca78	b.ge	0xcab0
000000000000ca7c	cmp	w10, #0x2
000000000000ca80	b.lt	0xcae4
000000000000ca84	mov	x10, #0x0
000000000000ca88	mov	x11, x8
000000000000ca8c	ldr	w12, [x11]
000000000000ca90	cmp	w12, #0x11
000000000000ca94	b.gt	0xcaec
000000000000ca98	add	x10, x10, #0x1
000000000000ca9c	add	x11, x11, #0x10
000000000000caa0	cmp	x9, x10
000000000000caa4	b.ne	0xca8c
000000000000caa8	mov	x10, x9
000000000000caac	b	0xcaec
000000000000cab0	mov	w10, #0x0
000000000000cab4	add	w11, w9, w10
000000000000cab8	cmp	w11, #0x0
000000000000cabc	cinc	w11, w11, lt
000000000000cac0	asr	w11, w11, #1
000000000000cac4	sbfiz	x12, x11, #4, #32
000000000000cac8	ldr	w12, [x8, x12]
000000000000cacc	cmp	w12, #0x12
000000000000cad0	csinc	w10, w10, w11, ge
000000000000cad4	csel	w9, w9, w11, lt
000000000000cad8	cmp	w10, w9
000000000000cadc	b.lt	0xcab4
000000000000cae0	b	0xcaec
000000000000cae4	mov	w10, #0x0
000000000000cae8	b	0xcaec
000000000000caec	sxtw	x9, w10
000000000000caf0	add	x8, x8, x9, lsl #4
000000000000caf4	ldr	x8, [x8, #0x8]
000000000000caf8	ldr	x8, [x8, #0x18]
000000000000cafc	mov	x0, x22
000000000000cb00	blr	x8
000000000000cb04	tbnz	w0, #0x0, 0xca64
000000000000cb08	add	x2, x20, #0xc0
000000000000cb0c	add	x21, x20, #0xd0
000000000000cb10	add	x23, x20, #0xc8
000000000000cb14	adr	x1, #0x6266c
000000000000cb18	nop
000000000000cb1c	ldr	x0, [sp, #0x28]
000000000000cb20	bl	_Kotlin_String_plusImpl
000000000000cb24	mov	x20, x0
000000000000cb28	ldr	x8, [x22]
000000000000cb2c	and	x8, x8, #0xfffffffffffffffc
000000000000cb30	ldr	x8, [x8]
000000000000cb34	ldr	w9, [x8, #0x3c]
000000000000cb38	ldr	x8, [x8, #0x40]
000000000000cb3c	tbnz	w9, #0x1f, 0xcb4c
000000000000cb40	mov	w10, #0x2b
000000000000cb44	and	x9, x9, x10
000000000000cb48	b	0xcbd0
000000000000cb4c	neg	w10, w9
000000000000cb50	mvn	w9, w9
000000000000cb54	cmp	w10, #0x9
000000000000cb58	b.ge	0xcb90
000000000000cb5c	cmp	w10, #0x2
000000000000cb60	b.lt	0xcbc4
000000000000cb64	mov	x10, #0x0
000000000000cb68	mov	x11, x8
000000000000cb6c	ldr	w12, [x11]
000000000000cb70	cmp	w12, #0x2a
000000000000cb74	b.gt	0xcbcc
000000000000cb78	add	x10, x10, #0x1
000000000000cb7c	add	x11, x11, #0x10
000000000000cb80	cmp	x9, x10
000000000000cb84	b.ne	0xcb6c
000000000000cb88	mov	x10, x9
000000000000cb8c	b	0xcbcc
000000000000cb90	mov	w10, #0x0
000000000000cb94	add	w11, w9, w10
000000000000cb98	cmp	w11, #0x0
000000000000cb9c	cinc	w11, w11, lt
000000000000cba0	asr	w11, w11, #1
000000000000cba4	sbfiz	x12, x11, #4, #32
000000000000cba8	ldr	w12, [x8, x12]
000000000000cbac	cmp	w12, #0x2b
000000000000cbb0	csinc	w10, w10, w11, ge
000000000000cbb4	csel	w9, w9, w11, lt
000000000000cbb8	cmp	w10, w9
000000000000cbbc	b.lt	0xcb94
000000000000cbc0	b	0xcbcc
000000000000cbc4	mov	w10, #0x0
000000000000cbc8	b	0xcbcc
000000000000cbcc	sxtw	x9, w10
000000000000cbd0	add	x8, x8, x9, lsl #4
000000000000cbd4	ldr	x8, [x8, #0x8]
000000000000cbd8	ldr	x8, [x8, #0x30]
000000000000cbdc	mov	x0, x22
000000000000cbe0	mov	x1, x23
000000000000cbe4	blr	x8
000000000000cbe8	mov	x22, x0
000000000000cbec	mov	w24, #0xa0
000000000000cbf0	adr	x23, #0x625b0
000000000000cbf4	nop
000000000000cbf8	b	0xcc44
000000000000cbfc	ldr	x8, [x22]
000000000000cc00	and	x8, x8, #0xfffffffffffffffc
000000000000cc04	ldr	x8, [x8]
000000000000cc08	ldr	w9, [x8, #0x3c]
000000000000cc0c	ldr	x8, [x8, #0x40]
000000000000cc10	tbnz	w9, #0x1f, 0xccc0
000000000000cc14	and	x9, x9, x24
000000000000cc18	add	x8, x8, x9, lsl #4
000000000000cc1c	ldr	x8, [x8, #0x8]
000000000000cc20	ldr	x8, [x8, #0x8]
000000000000cc24	mov	x0, x22
000000000000cc28	mov	x1, x21
000000000000cc2c	blr	x8
000000000000cc30	mov	x1, x0
000000000000cc34	mov	x0, x26
000000000000cc38	mov	x2, x20
000000000000cc3c	mov	x3, x23
000000000000cc40	bl	"_kfun:kotlin.Throwable.ExceptionTraceBuilder.dumpFullTrace#internal"
000000000000cc44	ldr	x8, [x22]
000000000000cc48	and	x8, x8, #0xfffffffffffffffc
000000000000cc4c	ldr	x8, [x8]
000000000000cc50	ldr	w9, [x8, #0x3c]
000000000000cc54	ldr	x8, [x8, #0x40]
000000000000cc58	tbnz	w9, #0x1f, 0xcc7c
000000000000cc5c	and	x9, x9, x24
000000000000cc60	add	x8, x8, x9, lsl #4
000000000000cc64	ldr	x8, [x8, #0x8]
000000000000cc68	ldr	x8, [x8]
000000000000cc6c	mov	x0, x22
000000000000cc70	blr	x8
000000000000cc74	tbnz	w0, #0x0, 0xcd98
000000000000cc78	b	0xcdb8
000000000000cc7c	neg	w10, w9
000000000000cc80	mvn	w9, w9
000000000000cc84	cmp	w10, #0x9
000000000000cc88	b.ge	0xcd04
000000000000cc8c	cmp	w10, #0x2
000000000000cc90	b.lt	0xcd6c
000000000000cc94	mov	x10, #0x0
000000000000cc98	mov	x11, x8
000000000000cc9c	ldr	w12, [x11]
000000000000cca0	cmp	w12, #0x9f
000000000000cca4	b.gt	0xcd7c
000000000000cca8	add	x10, x10, #0x1
000000000000ccac	add	x11, x11, #0x10
000000000000ccb0	cmp	x9, x10
000000000000ccb4	b.ne	0xcc9c
000000000000ccb8	mov	x10, x9
000000000000ccbc	b	0xcd7c
000000000000ccc0	neg	w10, w9
000000000000ccc4	mvn	w9, w9
000000000000ccc8	cmp	w10, #0x9
000000000000cccc	b.ge	0xcd38
000000000000ccd0	cmp	w10, #0x2
000000000000ccd4	b.lt	0xcd74
000000000000ccd8	mov	x10, #0x0
000000000000ccdc	mov	x11, x8
000000000000cce0	ldr	w12, [x11]
000000000000cce4	cmp	w12, #0x9f
000000000000cce8	b.gt	0xcdb0
000000000000ccec	add	x10, x10, #0x1
000000000000ccf0	add	x11, x11, #0x10
000000000000ccf4	cmp	x9, x10
000000000000ccf8	b.ne	0xcce0
000000000000ccfc	mov	x10, x9
000000000000cd00	b	0xcdb0
000000000000cd04	mov	w10, #0x0
000000000000cd08	add	w11, w9, w10
000000000000cd0c	cmp	w11, #0x0
000000000000cd10	cinc	w11, w11, lt
000000000000cd14	asr	w11, w11, #1
000000000000cd18	sbfiz	x12, x11, #4, #32
000000000000cd1c	ldr	w12, [x8, x12]
000000000000cd20	cmp	w12, #0xa0
000000000000cd24	csinc	w10, w10, w11, ge
000000000000cd28	csel	w9, w9, w11, lt
000000000000cd2c	cmp	w10, w9
000000000000cd30	b.lt	0xcd08
000000000000cd34	b	0xcd7c
000000000000cd38	mov	w10, #0x0
000000000000cd3c	add	w11, w9, w10
000000000000cd40	cmp	w11, #0x0
000000000000cd44	cinc	w11, w11, lt
000000000000cd48	asr	w11, w11, #1
000000000000cd4c	sbfiz	x12, x11, #4, #32
000000000000cd50	ldr	w12, [x8, x12]
000000000000cd54	cmp	w12, #0xa0
000000000000cd58	csinc	w10, w10, w11, ge
000000000000cd5c	csel	w9, w9, w11, lt
000000000000cd60	cmp	w10, w9
000000000000cd64	b.lt	0xcd3c
000000000000cd68	b	0xcdb0
000000000000cd6c	mov	w10, #0x0
000000000000cd70	b	0xcd7c
000000000000cd74	mov	w10, #0x0
000000000000cd78	b	0xcdb0
000000000000cd7c	sxtw	x9, w10
000000000000cd80	add	x8, x8, x9, lsl #4
000000000000cd84	ldr	x8, [x8, #0x8]
000000000000cd88	ldr	x8, [x8]
000000000000cd8c	mov	x0, x22
000000000000cd90	blr	x8
000000000000cd94	tbz	w0, #0x0, 0xcdb8
000000000000cd98	adr	x8, #0x87771
000000000000cd9c	nop
000000000000cda0	ldarb	w8, [x8]
000000000000cda4	tbz	w8, #0x0, 0xcbfc
000000000000cda8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000cdac	b	0xcbfc
000000000000cdb0	sxtw	x9, w10
000000000000cdb4	b	0xcc18
000000000000cdb8	mov	w0, #0x1
000000000000cdbc	ldr	x19, [sp, #0x10]
000000000000cdc0	ldr	x8, [sp, #0x38]
000000000000cdc4	str	x8, [x19, #0x110]
000000000000cdc8	ldp	x29, x30, [sp, #0x160]
000000000000cdcc	ldp	x20, x19, [sp, #0x150]
000000000000cdd0	ldp	x22, x21, [sp, #0x140]
000000000000cdd4	ldp	x24, x23, [sp, #0x130]
000000000000cdd8	ldp	x26, x25, [sp, #0x120]
000000000000cddc	ldp	x28, x27, [sp, #0x110]
000000000000cde0	add	sp, sp, #0x170
000000000000cde4	ret
000000000000cde8	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.Throwable#toString(){}kotlin.String:
000000000000cdec	sub	sp, sp, #0x100
000000000000cdf0	stp	x28, x27, [sp, #0xa0]
000000000000cdf4	stp	x26, x25, [sp, #0xb0]
000000000000cdf8	stp	x24, x23, [sp, #0xc0]
000000000000cdfc	stp	x22, x21, [sp, #0xd0]
000000000000ce00	stp	x20, x19, [sp, #0xe0]
000000000000ce04	stp	x29, x30, [sp, #0xf0]
000000000000ce08	add	x29, sp, #0xf0
000000000000ce0c	mov	x19, x1
000000000000ce10	mov	x20, x0
000000000000ce14	movi.16b	v0, #0x0
000000000000ce18	stp	q0, q0, [sp, #0x30]
000000000000ce1c	str	xzr, [sp, #0x90]
000000000000ce20	stp	q0, q0, [sp, #0x70]
000000000000ce24	stp	q0, q0, [sp, #0x50]
000000000000ce28	add	x27, sp, #0x30
000000000000ce2c	add	x22, x27, #0x20
000000000000ce30	add	x21, x27, #0x30
000000000000ce34	adr	x8, #0x55c3c
000000000000ce38	nop
000000000000ce3c	orr	x8, x8, #0x3
000000000000ce40	stp	x8, xzr, [sp, #0x20]
000000000000ce44	stp	xzr, xzr, [sp, #0x10]
000000000000ce48	adr	x8, #0x57f78
000000000000ce4c	nop
000000000000ce50	orr	x8, x8, #0x3
000000000000ce54	str	x8, [sp, #0x8]
000000000000ce58	adrp	x0, 110 ; 0x7a000
000000000000ce5c	add	x0, x0, #0x4e0
000000000000ce60	ldr	x8, [x0]
000000000000ce64	blr	x8
000000000000ce68	ldr	x26, [x0]
000000000000ce6c	ldr	x8, [x26, #0x110]
000000000000ce70	str	x27, [x26, #0x110]
000000000000ce74	mov	x9, #0xd00000000
000000000000ce78	stp	x8, x9, [sp, #0x38]
000000000000ce7c	adr	x8, #0x8768d
000000000000ce80	nop
000000000000ce84	ldarb	w8, [x8]
000000000000ce88	tbz	w8, #0x0, 0xce90
000000000000ce8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ce90	ldr	x8, [x20]
000000000000ce94	and	x8, x8, #0xfffffffffffffffc
000000000000ce98	ldr	x8, [x8]
000000000000ce9c	add	x9, sp, #0x20
000000000000cea0	str	x9, [sp, #0x48]
000000000000cea4	str	x8, [sp, #0x28]
000000000000cea8	add	x0, sp, #0x20
000000000000ceac	mov	x1, x22
000000000000ceb0	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-qualifiedName>(){}kotlin.String?"
000000000000ceb4	mov	x22, x0
000000000000ceb8	cbnz	x0, 0xcedc
000000000000cebc	add	x8, sp, #0x30
000000000000cec0	add	x1, x8, #0x28
000000000000cec4	add	x0, sp, #0x20
000000000000cec8	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-simpleName>(){}kotlin.String?"
000000000000cecc	adr	x8, #0x59a54
000000000000ced0	nop
000000000000ced4	cmp	x0, #0x0
000000000000ced8	csel	x22, x8, x0, eq
000000000000cedc	ldr	x8, [x20]
000000000000cee0	and	x8, x8, #0xfffffffffffffffc
000000000000cee4	ldr	x8, [x8]
000000000000cee8	ldr	x8, [x8, #0x90]
000000000000ceec	mov	x0, x20
000000000000cef0	mov	x1, x21
000000000000cef4	blr	x8
000000000000cef8	cbz	x0, 0xcfa8
000000000000cefc	add	x23, x27, #0x40
000000000000cf00	add	x24, x27, #0x50
000000000000cf04	add	x21, x27, #0x60
000000000000cf08	add	x25, x27, #0x48
000000000000cf0c	add	x8, sp, #0x8
000000000000cf10	str	x8, [sp, #0x68]
000000000000cf14	add	x0, sp, #0x8
000000000000cf18	mov	w1, #0xa
000000000000cf1c	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000cf20	add	x0, sp, #0x8
000000000000cf24	mov	x1, x22
000000000000cf28	mov	x2, x23
000000000000cf2c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000cf30	adr	x1, #0x622a0
000000000000cf34	nop
000000000000cf38	add	x0, sp, #0x8
000000000000cf3c	mov	x2, x25
000000000000cf40	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000cf44	ldr	x8, [x20]
000000000000cf48	and	x8, x8, #0xfffffffffffffffc
000000000000cf4c	ldr	x8, [x8]
000000000000cf50	ldr	x8, [x8, #0x90]
000000000000cf54	mov	x0, x20
000000000000cf58	mov	x1, x24
000000000000cf5c	blr	x8
000000000000cf60	cbz	x0, 0xcf84
000000000000cf64	add	x1, x27, #0x58
000000000000cf68	ldr	x8, [x0]
000000000000cf6c	and	x8, x8, #0xfffffffffffffffc
000000000000cf70	ldr	x8, [x8]
000000000000cf74	ldr	x8, [x8, #0x80]
000000000000cf78	blr	x8
000000000000cf7c	mov	x1, x0
000000000000cf80	b	0xcf8c
000000000000cf84	adr	x1, #0x612cc
000000000000cf88	nop
000000000000cf8c	add	x0, sp, #0x8
000000000000cf90	mov	x2, x21
000000000000cf94	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000cf98	add	x0, sp, #0x8
000000000000cf9c	mov	x1, x19
000000000000cfa0	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000cfa4	mov	x22, x0
000000000000cfa8	str	x22, [x19]
000000000000cfac	ldr	x8, [sp, #0x38]
000000000000cfb0	str	x8, [x26, #0x110]
000000000000cfb4	mov	x0, x22
000000000000cfb8	ldp	x29, x30, [sp, #0xf0]
000000000000cfbc	ldp	x20, x19, [sp, #0xe0]
000000000000cfc0	ldp	x22, x21, [sp, #0xd0]
000000000000cfc4	ldp	x24, x23, [sp, #0xc0]
000000000000cfc8	ldp	x26, x25, [sp, #0xb0]
000000000000cfcc	ldp	x28, x27, [sp, #0xa0]
000000000000cfd0	add	sp, sp, #0x100
000000000000cfd4	ret
_kfun:kotlin.Throwable.$<init>$lambda$0$FUNCTION_REFERENCE$4.invoke#internal:
000000000000cfd8	stp	x28, x27, [sp, #-0x60]!
000000000000cfdc	stp	x26, x25, [sp, #0x10]
000000000000cfe0	stp	x24, x23, [sp, #0x20]
000000000000cfe4	stp	x22, x21, [sp, #0x30]
000000000000cfe8	stp	x20, x19, [sp, #0x40]
000000000000cfec	stp	x29, x30, [sp, #0x50]
000000000000cff0	add	x29, sp, #0x50
000000000000cff4	sub	sp, sp, #0x4a0
000000000000cff8	str	x1, [sp, #0x10]
000000000000cffc	mov	x20, x0
000000000000d000	adr	x23, #0x87509
000000000000d004	nop
000000000000d008	ldarb	w8, [x23]
000000000000d00c	tbz	w8, #0x0, 0xd014
000000000000d010	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000d014	ldr	x8, [x20, #0x8]
000000000000d018	movi.16b	v0, #0x0
000000000000d01c	stp	q0, q0, [sp, #0x20]
000000000000d020	adrp	x0, 109 ; 0x7a000
000000000000d024	add	x0, x0, #0x4e0
000000000000d028	ldr	x9, [x0]
000000000000d02c	str	x9, [sp, #0x18]
000000000000d030	blr	x9
000000000000d034	ldr	x20, [x0]
000000000000d038	ldr	x9, [x20, #0x110]
000000000000d03c	add	x10, sp, #0x20
000000000000d040	str	x10, [x20, #0x110]
000000000000d044	mov	x10, #0x400000000
000000000000d048	stp	x9, x10, [sp, #0x28]
000000000000d04c	ldr	x8, [x8, #0x18]
000000000000d050	add	x28, x8, #0x10
000000000000d054	ldr	w22, [x8, #0x8]
000000000000d058	add	x21, x20, #0x138
000000000000d05c	mov	w8, #0x1
000000000000d060	ldaxr	w19, [x21]
000000000000d064	stlxr	w9, w8, [x21]
000000000000d068	cbnz	w9, 0xd060
000000000000d06c	str	xzr, [sp, #0x50]
000000000000d070	mov	w8, #0x1
000000000000d074	str	w8, [sp, #0x58]
000000000000d078	strb	wzr, [sp, #0x5c]
000000000000d07c	adrp	x0, 109 ; 0x7a000
000000000000d080	add	x0, x0, #0x4e0
000000000000d084	ldr	x8, [sp, #0x18]
000000000000d088	blr	x8
000000000000d08c	ldr	x8, [x0]
000000000000d090	cbz	x8, 0xd0b8
000000000000d094	add	x9, x8, #0x138
000000000000d098	mov	w11, #0x1
000000000000d09c	ldaxr	w10, [x9]
000000000000d0a0	stlxr	w12, w11, [x9]
000000000000d0a4	cbnz	w12, 0xd09c
000000000000d0a8	str	x8, [sp, #0x50]
000000000000d0ac	str	w10, [sp, #0x58]
000000000000d0b0	mov	w9, #0x1
000000000000d0b4	strb	w9, [sp, #0x5c]
000000000000d0b8	stp	xzr, xzr, [sp, #0x68]
000000000000d0bc	str	xzr, [sp, #0x78]
000000000000d0c0	cbz	w22, 0xd338
000000000000d0c4	str	x20, [sp, #0x8]
000000000000d0c8	mov	w23, #0x18
000000000000d0cc	mov	x0, x22
000000000000d0d0	mov	w1, #0x18
000000000000d0d4	bl	0x55aec ; symbol stub for: _calloc
000000000000d0d8	mov	x20, #0x0
000000000000d0dc	madd	x8, x22, x23, x0
000000000000d0e0	stp	x0, x0, [sp, #0x68]
000000000000d0e4	str	x8, [sp, #0x78]
000000000000d0e8	mov	x23, #-0x5555555555555556
000000000000d0ec	movk	x23, #0xaaab
000000000000d0f0	adr	x27, #0x500bb ; literal pool for: ""
000000000000d0f4	nop
000000000000d0f8	b	0xd128
000000000000d0fc	ldr	q0, [sp, #0x80]
000000000000d100	ldr	x8, [sp, #0x90]
000000000000d104	str	x8, [x26, #0x10]
000000000000d108	str	q0, [x26]
000000000000d10c	stp	xzr, xzr, [sp, #0x88]
000000000000d110	str	xzr, [sp, #0x80]
000000000000d114	add	x8, x26, #0x18
000000000000d118	str	x8, [sp, #0x70]
000000000000d11c	add	x20, x20, #0x1
000000000000d120	cmp	x20, x22
000000000000d124	b.eq	0xd328
000000000000d128	ldr	x8, [x28, x20, lsl #3]
000000000000d12c	cmp	x8, #0x2
000000000000d130	b.lo	0xd11c
000000000000d134	and	x8, x8, #0xfffffffffffffffe
000000000000d138	sub	x3, x8, #0x1
000000000000d13c	ldp	x9, x8, [sp, #0x68]
000000000000d140	sub	x8, x8, x9
000000000000d144	asr	x8, x8, #3
000000000000d148	mul	x2, x8, x23
000000000000d14c	str	x27, [sp]
000000000000d150	add	x0, sp, #0x98
000000000000d154	mov	w4, #0x0
000000000000d158	adr	x5, #0x4ff9d ; literal pool for: "%s"
000000000000d15c	nop
000000000000d160	bl	__ZL18snprintf_with_addrPcmmPKvbPKcz
000000000000d164	add	x0, sp, #0x98
000000000000d168	bl	0x55e7c ; symbol stub for: _strlen
000000000000d16c	cmn	x0, #0x10
000000000000d170	b.hs	0xd59c
000000000000d174	mov	x24, x0
000000000000d178	cmp	x0, #0x17
000000000000d17c	b.hs	0xd1a0
000000000000d180	add	x25, sp, #0x80
000000000000d184	strb	w24, [sp, #0x97]
000000000000d188	cbnz	x24, 0xd1c4
000000000000d18c	strb	wzr, [x25, x24]
000000000000d190	ldp	x26, x8, [sp, #0x70]
000000000000d194	cmp	x26, x8
000000000000d198	b.lo	0xd0fc
000000000000d19c	b	0xd1e4
000000000000d1a0	add	x8, x24, #0x10
000000000000d1a4	and	x26, x8, #0xfffffffffffffff0
000000000000d1a8	mov	x0, x26
000000000000d1ac	mov	w1, #0x1
000000000000d1b0	bl	0x55aec ; symbol stub for: _calloc
000000000000d1b4	mov	x25, x0
000000000000d1b8	orr	x8, x26, #0x8000000000000000
000000000000d1bc	stp	x24, x8, [sp, #0x88]
000000000000d1c0	str	x0, [sp, #0x80]
000000000000d1c4	add	x1, sp, #0x98
000000000000d1c8	mov	x0, x25
000000000000d1cc	mov	x2, x24
000000000000d1d0	bl	0x55bd0 ; symbol stub for: _memcpy
000000000000d1d4	strb	wzr, [x25, x24]
000000000000d1d8	ldp	x26, x8, [sp, #0x70]
000000000000d1dc	cmp	x26, x8
000000000000d1e0	b.lo	0xd0fc
000000000000d1e4	mov	x10, #-0x5555555555555556
000000000000d1e8	movk	x10, #0xaaab
000000000000d1ec	mov	x23, x27
000000000000d1f0	ldr	x25, [sp, #0x68]
000000000000d1f4	sub	x9, x26, x25
000000000000d1f8	asr	x9, x9, #3
000000000000d1fc	mov	x11, #-0x5555555555555556
000000000000d200	movk	x11, #0xaaa, lsl #48
000000000000d204	mul	x27, x9, x10
000000000000d208	add	x9, x27, #0x1
000000000000d20c	cmp	x9, x11
000000000000d210	b.hi	0xd5a8
000000000000d214	sub	x8, x8, x25
000000000000d218	asr	x8, x8, #3
000000000000d21c	mul	x8, x8, x10
000000000000d220	lsl	x10, x8, #1
000000000000d224	cmp	x10, x9
000000000000d228	csel	x9, x9, x10, lo
000000000000d22c	mov	x10, #0x5555555555555555
000000000000d230	movk	x10, #0x555, lsl #48
000000000000d234	cmp	x8, x10
000000000000d238	csel	x24, x9, x11, lo
000000000000d23c	cbz	x24, 0xd250
000000000000d240	mov	x0, x24
000000000000d244	mov	w1, #0x18
000000000000d248	bl	0x55aec ; symbol stub for: _calloc
000000000000d24c	b	0xd254
000000000000d250	mov	x0, #0x0
000000000000d254	mov	w8, #0x18
000000000000d258	madd	x8, x27, x8, x0
000000000000d25c	mov	w11, #0x18
000000000000d260	ldr	q0, [sp, #0x80]
000000000000d264	str	q0, [x8]
000000000000d268	ldr	x9, [sp, #0x90]
000000000000d26c	str	x9, [x8, #0x10]
000000000000d270	stp	xzr, xzr, [sp, #0x88]
000000000000d274	str	xzr, [sp, #0x80]
000000000000d278	mov	x9, x8
000000000000d27c	cmp	x26, x25
000000000000d280	b.eq	0xd2bc
000000000000d284	mov	x27, x23
000000000000d288	ldur	q0, [x26, #-0x18]
000000000000d28c	ldur	x10, [x26, #-0x8]
000000000000d290	stur	x10, [x9, #-0x8]
000000000000d294	stur	q0, [x9, #-0x18]
000000000000d298	stp	xzr, xzr, [x26, #-0x10]
000000000000d29c	stur	xzr, [x26, #-0x18]
000000000000d2a0	sub	x10, x26, #0x18
000000000000d2a4	sub	x9, x9, #0x18
000000000000d2a8	mov	x26, x10
000000000000d2ac	cmp	x10, x25
000000000000d2b0	b.ne	0xd288
000000000000d2b4	ldp	x25, x26, [sp, #0x68]
000000000000d2b8	b	0xd2c4
000000000000d2bc	mov	x25, x26
000000000000d2c0	mov	x27, x23
000000000000d2c4	mov	x23, #-0x5555555555555556
000000000000d2c8	movk	x23, #0xaaab
000000000000d2cc	madd	x10, x24, x11, x0
000000000000d2d0	add	x8, x8, #0x18
000000000000d2d4	stp	x9, x8, [sp, #0x68]
000000000000d2d8	str	x10, [sp, #0x78]
000000000000d2dc	cmp	x26, x25
000000000000d2e0	b.ne	0xd310
000000000000d2e4	cbz	x25, 0xd2f0
000000000000d2e8	mov	x0, x25
000000000000d2ec	bl	0x55b7c ; symbol stub for: _free
000000000000d2f0	ldrsb	w8, [sp, #0x97]
000000000000d2f4	tbz	w8, #0x1f, 0xd11c
000000000000d2f8	ldr	x0, [sp, #0x80]
000000000000d2fc	bl	0x55b7c ; symbol stub for: _free
000000000000d300	b	0xd11c
000000000000d304	mov	x26, x24
000000000000d308	cmp	x24, x25
000000000000d30c	b.eq	0xd2e4
000000000000d310	sub	x24, x26, #0x18
000000000000d314	ldursb	w8, [x26, #-0x1]
000000000000d318	tbz	w8, #0x1f, 0xd304
000000000000d31c	ldur	x0, [x26, #-0x18]
000000000000d320	bl	0x55b7c ; symbol stub for: _free
000000000000d324	b	0xd304
000000000000d328	ldr	x8, [sp, #0x50]
000000000000d32c	adr	x23, #0x871dd
000000000000d330	nop
000000000000d334	ldr	x20, [sp, #0x8]
000000000000d338	cbz	x8, 0xd368
000000000000d33c	ldr	w9, [sp, #0x58]
000000000000d340	add	x0, x8, #0x138
000000000000d344	ldaxr	w8, [x0]
000000000000d348	stlxr	w10, w9, [x0]
000000000000d34c	cbnz	w10, 0xd344
000000000000d350	cbnz	w9, 0xd368
000000000000d354	cmp	w8, #0x1
000000000000d358	b.ne	0xd368
000000000000d35c	ldarb	w8, [x23]
000000000000d360	tbz	w8, #0x0, 0xd368
000000000000d364	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000d368	cbz	x20, 0xd394
000000000000d36c	ldaxr	w8, [x21]
000000000000d370	stlxr	w9, w19, [x21]
000000000000d374	cbnz	w9, 0xd36c
000000000000d378	cbnz	w19, 0xd394
000000000000d37c	cmp	w8, #0x1
000000000000d380	b.ne	0xd394
000000000000d384	ldarb	w8, [x23]
000000000000d388	tbz	w8, #0x0, 0xd394
000000000000d38c	mov	x0, x21
000000000000d390	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000d394	str	xzr, [sp, #0xb0]
000000000000d398	adrp	x0, 109 ; 0x7a000
000000000000d39c	add	x0, x0, #0x4e0
000000000000d3a0	ldr	x8, [sp, #0x18]
000000000000d3a4	blr	x8
000000000000d3a8	ldr	x8, [x0]
000000000000d3ac	ldr	x9, [x8, #0x110]
000000000000d3b0	add	x10, sp, #0x98
000000000000d3b4	str	x10, [x8, #0x110]
000000000000d3b8	mov	x10, #0x400000000
000000000000d3bc	stp	x9, x10, [sp, #0xa0]
000000000000d3c0	ldp	x10, x9, [sp, #0x68]
000000000000d3c4	sub	x9, x9, x10
000000000000d3c8	asr	x9, x9, #3
000000000000d3cc	mov	x10, #-0x5555555555555556
000000000000d3d0	movk	x10, #0xaaab
000000000000d3d4	mul	x19, x9, x10
000000000000d3d8	tbnz	w19, #0x1f, 0xd5b4
000000000000d3dc	ldr	x8, [x8, #0x118]
000000000000d3e0	ubfiz	x9, x19, #3, #32
000000000000d3e4	add	x9, x9, #0x1f
000000000000d3e8	and	x1, x9, #0xffffffff8
000000000000d3ec	add	x0, x8, #0x70
000000000000d3f0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000d3f4	mov	x21, x0
000000000000d3f8	str	xzr, [x21, #0x10]!
000000000000d3fc	str	xzr, [x0, #0x18]
000000000000d400	str	xzr, [x0, #0x8]
000000000000d404	adr	x8, #0x5399c
000000000000d408	nop
000000000000d40c	str	x8, [x21]
000000000000d410	str	w19, [x0, #0x18]
000000000000d414	str	x21, [sp, #0xb0]
000000000000d418	ldp	x19, x9, [sp, #0x68]
000000000000d41c	cmp	x9, x19
000000000000d420	b.ne	0xd44c
000000000000d424	adrp	x0, 109 ; 0x7a000
000000000000d428	add	x0, x0, #0x4e0
000000000000d42c	ldr	x8, [sp, #0x18]
000000000000d430	blr	x8
000000000000d434	ldr	x8, [x0]
000000000000d438	str	x21, [sp, #0x38]
000000000000d43c	ldr	x10, [sp, #0xa0]
000000000000d440	str	x10, [x8, #0x110]
000000000000d444	cbnz	x19, 0xd514
000000000000d448	b	0xd554
000000000000d44c	str	x21, [sp, #0x8]
000000000000d450	add	x20, sp, #0x48
000000000000d454	add	x22, x20, #0x18
000000000000d458	add	x23, x0, #0x20
000000000000d45c	adrp	x0, 109 ; 0x7a000
000000000000d460	add	x0, x0, #0x4e0
000000000000d464	ldr	x8, [sp, #0x18]
000000000000d468	blr	x8
000000000000d46c	mov	x24, #0x0
000000000000d470	mov	x25, #0x0
000000000000d474	mov	x26, #0x0
000000000000d478	ldr	x8, [x0]
000000000000d47c	ldr	x10, [x8, #0x110]
000000000000d480	mov	x28, #0x400000000
000000000000d484	mov	x27, #-0x5555555555555556
000000000000d488	movk	x27, #0xaaab
000000000000d48c	mov	x21, #0x100000000
000000000000d490	stp	x28, xzr, [sp, #0x58]
000000000000d494	str	x20, [x8, #0x110]
000000000000d498	str	x10, [sp, #0x50]
000000000000d49c	add	x0, x19, x24
000000000000d4a0	ldrsb	w8, [x0, #0x17]
000000000000d4a4	tbz	w8, #0x1f, 0xd4ac
000000000000d4a8	ldr	x0, [x19, x24]
000000000000d4ac	mov	x1, x22
000000000000d4b0	bl	_CreateStringFromCString
000000000000d4b4	asr	x8, x25, #29
000000000000d4b8	ldr	x9, [sp, #0x60]
000000000000d4bc	str	x9, [x23, x8]
000000000000d4c0	adrp	x0, 109 ; 0x7a000
000000000000d4c4	add	x0, x0, #0x4e0
000000000000d4c8	ldr	x8, [sp, #0x18]
000000000000d4cc	blr	x8
000000000000d4d0	ldr	x8, [x0]
000000000000d4d4	ldr	x10, [sp, #0x50]
000000000000d4d8	str	x10, [x8, #0x110]
000000000000d4dc	add	x26, x26, #0x1
000000000000d4e0	ldp	x19, x9, [sp, #0x68]
000000000000d4e4	sub	x11, x9, x19
000000000000d4e8	asr	x11, x11, #3
000000000000d4ec	mul	x11, x11, x27
000000000000d4f0	add	x25, x25, x21
000000000000d4f4	add	x24, x24, #0x18
000000000000d4f8	cmp	x26, x11
000000000000d4fc	b.lo	0xd490
000000000000d500	ldr	x21, [sp, #0x8]
000000000000d504	str	x21, [sp, #0x38]
000000000000d508	ldr	x10, [sp, #0xa0]
000000000000d50c	str	x10, [x8, #0x110]
000000000000d510	cbz	x19, 0xd554
000000000000d514	cmp	x19, x9
000000000000d518	b.ne	0xd530
000000000000d51c	mov	x0, x19
000000000000d520	b	0xd54c
000000000000d524	mov	x9, x20
000000000000d528	cmp	x20, x19
000000000000d52c	b.eq	0xd548
000000000000d530	sub	x20, x9, #0x18
000000000000d534	ldursb	w8, [x9, #-0x1]
000000000000d538	tbz	w8, #0x1f, 0xd524
000000000000d53c	ldur	x0, [x9, #-0x18]
000000000000d540	bl	0x55b7c ; symbol stub for: _free
000000000000d544	b	0xd524
000000000000d548	ldr	x0, [sp, #0x68]
000000000000d54c	str	x19, [sp, #0x70]
000000000000d550	bl	0x55b7c ; symbol stub for: _free
000000000000d554	ldp	x10, x8, [sp, #0x10]
000000000000d558	str	x21, [x10]
000000000000d55c	adrp	x0, 109 ; 0x7a000
000000000000d560	add	x0, x0, #0x4e0
000000000000d564	blr	x8
000000000000d568	ldr	x8, [x0]
000000000000d56c	ldr	x9, [sp, #0x28]
000000000000d570	str	x9, [x8, #0x110]
000000000000d574	str	x21, [x10]
000000000000d578	mov	x0, x21
000000000000d57c	add	sp, sp, #0x4a0
000000000000d580	ldp	x29, x30, [sp, #0x50]
000000000000d584	ldp	x20, x19, [sp, #0x40]
000000000000d588	ldp	x22, x21, [sp, #0x30]
000000000000d58c	ldp	x24, x23, [sp, #0x20]
000000000000d590	ldp	x26, x25, [sp, #0x10]
000000000000d594	ldp	x28, x27, [sp], #0x60
000000000000d598	ret
000000000000d59c	add	x0, sp, #0x80
000000000000d5a0	bl	0x558c4 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
000000000000d5a4	b	0xd5b8
000000000000d5a8	add	x0, sp, #0x68
000000000000d5ac	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000d5b0	b	0xd5b8
000000000000d5b4	bl	_ThrowIllegalArgumentException
000000000000d5b8	brk	#0x1
000000000000d5bc	mov	x19, x0
000000000000d5c0	adrp	x0, 109 ; 0x7a000
000000000000d5c4	add	x0, x0, #0x4e0
000000000000d5c8	ldr	x8, [sp, #0x18]
000000000000d5cc	blr	x8
000000000000d5d0	ldr	x8, [x0]
000000000000d5d4	b	0xd630
000000000000d5d8	mov	x19, x0
000000000000d5dc	ldrsb	w8, [sp, #0x97]
000000000000d5e0	tbz	w8, #0x1f, 0xd5f8
000000000000d5e4	ldr	x0, [sp, #0x80]
000000000000d5e8	bl	0x55b7c ; symbol stub for: _free
000000000000d5ec	b	0xd5f8
000000000000d5f0	b	0xd5f4
000000000000d5f4	mov	x19, x0
000000000000d5f8	add	x0, sp, #0x68
000000000000d5fc	bl	__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEENS6_IS8_EEED1Ev
000000000000d600	add	x0, sp, #0x48
000000000000d604	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
000000000000d608	mov	x0, x19
000000000000d60c	bl	___clang_call_terminate
000000000000d610	mov	x19, x0
000000000000d614	adrp	x0, 109 ; 0x7a000
000000000000d618	add	x0, x0, #0x4e0
000000000000d61c	ldr	x8, [sp, #0x18]
000000000000d620	blr	x8
000000000000d624	ldr	x8, [x0]
000000000000d628	ldr	x9, [sp, #0x50]
000000000000d62c	str	x9, [x8, #0x110]
000000000000d630	ldr	x9, [sp, #0xa0]
000000000000d634	str	x9, [x8, #0x110]
000000000000d638	ldr	x0, [sp, #0x68]
000000000000d63c	cbz	x0, 0xd650
000000000000d640	add	x8, sp, #0x68
000000000000d644	add	x1, x8, #0x8
000000000000d648	add	x2, sp, #0x68
000000000000d64c	bl	_Kotlin_getStackTraceStrings.cold.1
000000000000d650	mov	x0, x19
000000000000d654	bl	0x558ac ; symbol stub for: __Unwind_Resume
_kfun:kotlin.Unit#toString(){}kotlin.String:
000000000000d658	stp	x20, x19, [sp, #-0x20]!
000000000000d65c	stp	x29, x30, [sp, #0x10]
000000000000d660	add	x29, sp, #0x10
000000000000d664	mov	x19, x1
000000000000d668	adr	x8, #0x86ea1
000000000000d66c	nop
000000000000d670	ldarb	w8, [x8]
000000000000d674	tbz	w8, #0x0, 0xd67c
000000000000d678	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000d67c	adr	x0, #0x61b74
000000000000d680	nop
000000000000d684	str	x0, [x19]
000000000000d688	ldp	x29, x30, [sp, #0x10]
000000000000d68c	ldp	x20, x19, [sp], #0x20
000000000000d690	ret
_checkRangeIndexes:
000000000000d694	sub	sp, sp, #0x120
000000000000d698	stp	x28, x27, [sp, #0xd0]
000000000000d69c	stp	x24, x23, [sp, #0xe0]
000000000000d6a0	stp	x22, x21, [sp, #0xf0]
000000000000d6a4	stp	x20, x19, [sp, #0x100]
000000000000d6a8	stp	x29, x30, [sp, #0x110]
000000000000d6ac	add	x29, sp, #0x110
000000000000d6b0	mov	x21, x2
000000000000d6b4	mov	x20, x1
000000000000d6b8	mov	x22, x0
000000000000d6bc	str	xzr, [sp, #0xc0]
000000000000d6c0	movi.16b	v0, #0x0
000000000000d6c4	stp	q0, q0, [sp, #0xa0]
000000000000d6c8	stp	q0, q0, [sp, #0x80]
000000000000d6cc	stp	q0, q0, [sp, #0x60]
000000000000d6d0	stp	q0, q0, [sp, #0x40]
000000000000d6d4	str	q0, [sp, #0x30]
000000000000d6d8	add	x24, sp, #0x30
000000000000d6dc	stp	xzr, xzr, [sp, #0x20]
000000000000d6e0	adr	x8, #0x576e0
000000000000d6e4	nop
000000000000d6e8	orr	x8, x8, #0x3
000000000000d6ec	stp	xzr, x8, [sp, #0x10]
000000000000d6f0	stp	x8, xzr, [sp]
000000000000d6f4	adrp	x19, 109 ; 0x7a000
000000000000d6f8	add	x19, x19, #0x4e0
000000000000d6fc	ldr	x23, [x19]
000000000000d700	mov	x0, x19
000000000000d704	blr	x23
000000000000d708	ldr	x8, [x0]
000000000000d70c	ldr	x9, [x8, #0x110]
000000000000d710	str	x24, [x8, #0x110]
000000000000d714	mov	x8, #0x1300000000
000000000000d718	stp	x9, x8, [sp, #0x38]
000000000000d71c	adr	x8, #0x86ded
000000000000d720	nop
000000000000d724	ldarb	w8, [x8]
000000000000d728	tbz	w8, #0x0, 0xd730
000000000000d72c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000d730	tbnz	w22, #0x1f, 0xd774
000000000000d734	cmp	w20, w21
000000000000d738	b.gt	0xd774
000000000000d73c	cmp	w22, w20
000000000000d740	b.gt	0xd850
000000000000d744	mov	x0, x19
000000000000d748	blr	x23
000000000000d74c	ldr	x8, [x0]
000000000000d750	ldr	x9, [sp, #0x38]
000000000000d754	str	x9, [x8, #0x110]
000000000000d758	ldp	x29, x30, [sp, #0x110]
000000000000d75c	ldp	x20, x19, [sp, #0x100]
000000000000d760	ldp	x22, x21, [sp, #0xf0]
000000000000d764	ldp	x24, x23, [sp, #0xe0]
000000000000d768	ldp	x28, x27, [sp, #0xd0]
000000000000d76c	add	sp, sp, #0x120
000000000000d770	ret
000000000000d774	add	x8, sp, #0x18
000000000000d778	str	x8, [sp, #0x48]
000000000000d77c	add	x0, sp, #0x18
000000000000d780	mov	w1, #0xa
000000000000d784	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000d788	add	x2, x24, #0x20
000000000000d78c	adr	x1, #0x61a94
000000000000d790	nop
000000000000d794	add	x0, sp, #0x18
000000000000d798	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000d79c	add	x2, x24, #0x28
000000000000d7a0	add	x0, sp, #0x18
000000000000d7a4	mov	x1, x22
000000000000d7a8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000d7ac	add	x2, x24, #0x30
000000000000d7b0	adr	x1, #0x61aa0
000000000000d7b4	nop
000000000000d7b8	add	x0, sp, #0x18
000000000000d7bc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000d7c0	add	x2, x24, #0x38
000000000000d7c4	add	x0, sp, #0x18
000000000000d7c8	mov	x1, x20
000000000000d7cc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000d7d0	add	x2, x24, #0x40
000000000000d7d4	adr	x1, #0x61aac
000000000000d7d8	nop
000000000000d7dc	add	x0, sp, #0x18
000000000000d7e0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000d7e4	add	x2, x24, #0x48
000000000000d7e8	add	x0, sp, #0x18
000000000000d7ec	mov	x1, x21
000000000000d7f0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000d7f4	add	x1, x24, #0x50
000000000000d7f8	add	x0, sp, #0x18
000000000000d7fc	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000d800	mov	x20, x0
000000000000d804	mov	x0, x19
000000000000d808	blr	x23
000000000000d80c	ldr	x8, [x0]
000000000000d810	ldr	x8, [x8, #0x118]
000000000000d814	add	x0, x8, #0x70
000000000000d818	mov	w1, #0x38
000000000000d81c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000d820	mov	x21, x0
000000000000d824	adr	x8, #0x53cac
000000000000d828	nop
000000000000d82c	str	x8, [x21, #0x10]!
000000000000d830	stur	xzr, [x21, #-0x8]
000000000000d834	str	x21, [sp, #0x88]
000000000000d838	mov	x0, x21
000000000000d83c	mov	x1, x20
000000000000d840	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000000d844	mov	x0, x21
000000000000d848	bl	_ThrowException
000000000000d84c	b	0xd904
000000000000d850	mov	x8, sp
000000000000d854	str	x8, [sp, #0x90]
000000000000d858	mov	x0, sp
000000000000d85c	mov	w1, #0xa
000000000000d860	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000d864	add	x2, x24, #0x68
000000000000d868	adr	x1, #0x619b8
000000000000d86c	nop
000000000000d870	mov	x0, sp
000000000000d874	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000d878	add	x2, x24, #0x70
000000000000d87c	mov	x0, sp
000000000000d880	mov	x1, x22
000000000000d884	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000d888	add	x2, x24, #0x78
000000000000d88c	adr	x1, #0x61a14
000000000000d890	nop
000000000000d894	mov	x0, sp
000000000000d898	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000d89c	add	x2, x24, #0x80
000000000000d8a0	mov	x0, sp
000000000000d8a4	mov	x1, x20
000000000000d8a8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000000d8ac	add	x1, x24, #0x88
000000000000d8b0	mov	x0, sp
000000000000d8b4	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000d8b8	mov	x20, x0
000000000000d8bc	mov	x0, x19
000000000000d8c0	blr	x23
000000000000d8c4	ldr	x8, [x0]
000000000000d8c8	ldr	x8, [x8, #0x118]
000000000000d8cc	add	x0, x8, #0x70
000000000000d8d0	mov	w1, #0x38
000000000000d8d4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000d8d8	mov	x21, x0
000000000000d8dc	adr	x8, #0x53c94
000000000000d8e0	nop
000000000000d8e4	str	x8, [x21, #0x10]!
000000000000d8e8	stur	xzr, [x21, #-0x8]
000000000000d8ec	str	x21, [sp, #0xc0]
000000000000d8f0	mov	x0, x21
000000000000d8f4	mov	x1, x20
000000000000d8f8	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000000d8fc	mov	x0, x21
000000000000d900	bl	_ThrowException
000000000000d904	brk	#0x1
000000000000d908	mov	x1, x0
000000000000d90c	mov	x0, x19
000000000000d910	blr	x23
000000000000d914	ldr	x8, [x0]
000000000000d918	ldr	x9, [sp, #0x38]
000000000000d91c	str	x9, [x8, #0x110]
000000000000d920	mov	x0, x1
000000000000d924	bl	0x558ac ; symbol stub for: __Unwind_Resume
_kfun:kotlin.collections#resetAt__at__kotlin.Array<0:0>(kotlin.Int){0§<kotlin.Any?>}:
000000000000d928	stp	x20, x19, [sp, #-0x20]!
000000000000d92c	stp	x29, x30, [sp, #0x10]
000000000000d930	add	x29, sp, #0x10
000000000000d934	mov	x20, x1
000000000000d938	mov	x19, x0
000000000000d93c	adr	x8, #0x86bcd
000000000000d940	nop
000000000000d944	ldarb	w8, [x8]
000000000000d948	tbz	w8, #0x0, 0xd950
000000000000d94c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000d950	ldr	x8, [x19]
000000000000d954	and	x8, x8, #0xfffffffffffffffc
000000000000d958	ldr	x8, [x8]
000000000000d95c	ldr	w8, [x8, #0x5c]
000000000000d960	cmp	w8, #0x59
000000000000d964	b.ne	0xd98c
000000000000d968	ldr	w8, [x19, #0x8]
000000000000d96c	cmp	w8, w20
000000000000d970	b.ls	0xd99c
000000000000d974	ldr	xzr, [x19]
000000000000d978	add	x8, x19, w20, sxtw #3
000000000000d97c	str	xzr, [x8, #0x10]
000000000000d980	ldp	x29, x30, [sp, #0x10]
000000000000d984	ldp	x20, x19, [sp], #0x20
000000000000d988	ret
000000000000d98c	adr	x1, #0x53414
000000000000d990	nop
000000000000d994	mov	x0, x19
000000000000d998	bl	_ThrowClassCastException
000000000000d99c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}:
000000000000d9a0	stp	x22, x21, [sp, #-0x30]!
000000000000d9a4	stp	x20, x19, [sp, #0x10]
000000000000d9a8	stp	x29, x30, [sp, #0x20]
000000000000d9ac	add	x29, sp, #0x20
000000000000d9b0	mov	x20, x2
000000000000d9b4	mov	x21, x1
000000000000d9b8	mov	x19, x0
000000000000d9bc	adr	x8, #0x86b4d
000000000000d9c0	nop
000000000000d9c4	ldarb	w8, [x8]
000000000000d9c8	tbz	w8, #0x0, 0xd9d0
000000000000d9cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000d9d0	ldr	x8, [x19]
000000000000d9d4	and	x8, x8, #0xfffffffffffffffc
000000000000d9d8	ldr	x8, [x8]
000000000000d9dc	ldr	w8, [x8, #0x5c]
000000000000d9e0	cmp	w8, #0x59
000000000000d9e4	b.ne	0xda70
000000000000d9e8	ldr	w2, [x19, #0x8]
000000000000d9ec	mov	x0, x21
000000000000d9f0	mov	x1, x20
000000000000d9f4	bl	_checkRangeIndexes
000000000000d9f8	ldr	xzr, [x19]
000000000000d9fc	cmp	w21, w20
000000000000da00	b.ge	0xda60
000000000000da04	sxtw	x11, w21
000000000000da08	mvn	w8, w21
000000000000da0c	adds	w8, w8, w20
000000000000da10	b.eq	0xda44
000000000000da14	add	x9, x8, #0x1
000000000000da18	and	x10, x9, #0x1fffffffe
000000000000da1c	add	x8, x10, x11
000000000000da20	add	x11, x19, x11, lsl #3
000000000000da24	add	x11, x11, #0x10
000000000000da28	mov	x12, x10
000000000000da2c	stp	xzr, xzr, [x11], #0x10
000000000000da30	subs	x12, x12, #0x2
000000000000da34	b.ne	0xda2c
000000000000da38	cmp	x9, x10
000000000000da3c	b.ne	0xda48
000000000000da40	b	0xda60
000000000000da44	mov	x8, x11
000000000000da48	sub	w9, w20, w8
000000000000da4c	add	x8, x19, x8, lsl #3
000000000000da50	add	x8, x8, #0x10
000000000000da54	str	xzr, [x8], #0x8
000000000000da58	subs	w9, w9, #0x1
000000000000da5c	b.ne	0xda54
000000000000da60	ldp	x29, x30, [sp, #0x20]
000000000000da64	ldp	x20, x19, [sp, #0x10]
000000000000da68	ldp	x22, x21, [sp], #0x30
000000000000da6c	ret
000000000000da70	adr	x1, #0x53330
000000000000da74	nop
000000000000da78	mov	x0, x19
000000000000da7c	bl	_ThrowClassCastException
_kfun:kotlin.native.MemoryModel.$OBJECT#<init>(){}:
000000000000da80	sub	sp, sp, #0x170
000000000000da84	stp	x24, x23, [sp, #0x130]
000000000000da88	stp	x22, x21, [sp, #0x140]
000000000000da8c	stp	x20, x19, [sp, #0x150]
000000000000da90	stp	x29, x30, [sp, #0x160]
000000000000da94	add	x29, sp, #0x160
000000000000da98	mov	x19, x0
000000000000da9c	str	xzr, [sp, #0x120]
000000000000daa0	movi.16b	v0, #0x0
000000000000daa4	stp	q0, q0, [sp, #0x100]
000000000000daa8	stp	q0, q0, [sp, #0xe0]
000000000000daac	stp	q0, q0, [sp, #0xc0]
000000000000dab0	stp	q0, q0, [sp, #0xa0]
000000000000dab4	stp	q0, q0, [sp, #0x80]
000000000000dab8	stp	q0, q0, [sp, #0x60]
000000000000dabc	stp	q0, q0, [sp, #0x40]
000000000000dac0	stp	q0, q0, [sp, #0x20]
000000000000dac4	stp	q0, q0, [sp]
000000000000dac8	mov	x8, sp
000000000000dacc	add	x20, x8, #0x120
000000000000dad0	adrp	x0, 109 ; 0x7a000
000000000000dad4	add	x0, x0, #0x4e0
000000000000dad8	ldr	x9, [x0]
000000000000dadc	blr	x9
000000000000dae0	ldr	x21, [x0]
000000000000dae4	ldr	x9, [x21, #0x110]
000000000000dae8	str	x8, [x21, #0x110]
000000000000daec	mov	x8, #0x2500000000
000000000000daf0	stp	x9, x8, [sp, #0x8]
000000000000daf4	adr	x8, #0x86a15
000000000000daf8	nop
000000000000dafc	ldarb	w8, [x8]
000000000000db00	tbz	w8, #0x0, 0xdb08
000000000000db04	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000db08	ldr	x8, [x21, #0x118]
000000000000db0c	add	x0, x8, #0x70
000000000000db10	mov	w1, #0x20
000000000000db14	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000db18	adr	x22, #0x548a8
000000000000db1c	nop
000000000000db20	str	x22, [x0, #0x10]!
000000000000db24	stur	xzr, [x0, #-0x8]
000000000000db28	stp	x0, x0, [sp, #0x18]
000000000000db2c	ldr	x8, [x21, #0x118]
000000000000db30	add	x0, x8, #0x70
000000000000db34	mov	w1, #0x20
000000000000db38	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000db3c	str	x22, [x0, #0x10]!
000000000000db40	stur	xzr, [x0, #-0x8]
000000000000db44	stp	x0, x0, [sp, #0x28]
000000000000db48	ldr	x8, [x21, #0x118]
000000000000db4c	add	x0, x8, #0x70
000000000000db50	mov	w1, #0x20
000000000000db54	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000db58	str	x22, [x0, #0x10]!
000000000000db5c	stur	xzr, [x0, #-0x8]
000000000000db60	stp	x0, x0, [sp, #0x38]
000000000000db64	ldr	x8, [x21, #0x118]
000000000000db68	add	x0, x8, #0x70
000000000000db6c	mov	w1, #0x30
000000000000db70	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000db74	adr	x22, #0x5322c
000000000000db78	nop
000000000000db7c	stp	x22, xzr, [x0, #0x10]!
000000000000db80	stur	xzr, [x0, #-0x8]
000000000000db84	mov	w23, #0x3
000000000000db88	str	w23, [x0, #0x8]
000000000000db8c	stp	x0, x0, [sp, #0x48]
000000000000db90	ldr	x8, [sp, #0x20]
000000000000db94	stp	x0, x8, [sp, #0x58]
000000000000db98	ldr	xzr, [x0]
000000000000db9c	str	x8, [x0, #0x10]
000000000000dba0	ldr	x8, [sp, #0x50]
000000000000dba4	ldr	x9, [sp, #0x30]
000000000000dba8	stp	x8, x9, [sp, #0x68]
000000000000dbac	ldr	xzr, [x8]
000000000000dbb0	str	x9, [x8, #0x18]
000000000000dbb4	ldr	x8, [sp, #0x50]
000000000000dbb8	ldr	x9, [sp, #0x40]
000000000000dbbc	stp	x8, x9, [sp, #0x78]
000000000000dbc0	ldr	xzr, [x8]
000000000000dbc4	str	x9, [x8, #0x20]
000000000000dbc8	ldr	x8, [sp, #0x50]
000000000000dbcc	str	x8, [sp, #0x88]
000000000000dbd0	str	x8, [x19, #0x8]
000000000000dbd4	ldr	x9, [x8, #0x20]
000000000000dbd8	str	x9, [sp, #0x90]
000000000000dbdc	adr	x10, #0x616f4
000000000000dbe0	nop
000000000000dbe4	str	x10, [x9, #0x8]
000000000000dbe8	str	wzr, [x9, #0x10]
000000000000dbec	ldr	x9, [x8, #0x18]
000000000000dbf0	str	x9, [sp, #0x98]
000000000000dbf4	adr	x10, #0x616fc
000000000000dbf8	nop
000000000000dbfc	str	x10, [x9, #0x8]
000000000000dc00	mov	w10, #0x1
000000000000dc04	str	w10, [x9, #0x10]
000000000000dc08	ldr	x8, [x8, #0x10]
000000000000dc0c	str	x8, [sp, #0xa0]
000000000000dc10	adr	x9, #0x61700
000000000000dc14	nop
000000000000dc18	str	x9, [x8, #0x8]
000000000000dc1c	mov	w9, #0x2
000000000000dc20	str	w9, [x8, #0x10]
000000000000dc24	ldr	x8, [x19, #0x8]
000000000000dc28	ldr	x9, [x8, #0x20]
000000000000dc2c	stp	x9, x9, [sp, #0xa8]
000000000000dc30	ldr	x9, [x8, #0x18]
000000000000dc34	stp	x9, x9, [sp, #0xb8]
000000000000dc38	ldr	x8, [x8, #0x10]
000000000000dc3c	stp	x8, x8, [sp, #0xc8]
000000000000dc40	ldr	x8, [x21, #0x118]
000000000000dc44	add	x0, x8, #0x70
000000000000dc48	mov	w1, #0x30
000000000000dc4c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000dc50	stp	x22, xzr, [x0, #0x10]!
000000000000dc54	stur	xzr, [x0, #-0x8]
000000000000dc58	str	w23, [x0, #0x8]
000000000000dc5c	stp	x0, x0, [sp, #0xd8]
000000000000dc60	ldr	x8, [sp, #0xb0]
000000000000dc64	stp	x0, x8, [sp, #0xe8]
000000000000dc68	ldr	xzr, [x0]
000000000000dc6c	str	x8, [x0, #0x10]
000000000000dc70	ldr	x8, [sp, #0xe0]
000000000000dc74	ldr	x9, [sp, #0xc0]
000000000000dc78	stp	x8, x9, [sp, #0xf8]
000000000000dc7c	ldr	xzr, [x8]
000000000000dc80	str	x9, [x8, #0x18]
000000000000dc84	ldr	x8, [sp, #0xe0]
000000000000dc88	ldr	x9, [sp, #0xd0]
000000000000dc8c	stp	x8, x9, [sp, #0x108]
000000000000dc90	ldr	xzr, [x8]
000000000000dc94	str	x9, [x8, #0x20]
000000000000dc98	ldr	x0, [sp, #0xe0]
000000000000dc9c	str	x0, [sp, #0x118]
000000000000dca0	mov	x1, x20
000000000000dca4	bl	"_kfun:kotlin.enums#enumEntries(kotlin.Array<0:0>){0§<kotlin.Enum<0:0>>}kotlin.enums.EnumEntries<0:0>"
000000000000dca8	str	x0, [x19, #0x10]
000000000000dcac	ldr	x8, [sp, #0x8]
000000000000dcb0	str	x8, [x21, #0x110]
000000000000dcb4	ldp	x29, x30, [sp, #0x160]
000000000000dcb8	ldp	x20, x19, [sp, #0x150]
000000000000dcbc	ldp	x22, x21, [sp, #0x140]
000000000000dcc0	ldp	x24, x23, [sp, #0x130]
000000000000dcc4	add	sp, sp, #0x170
000000000000dcc8	ret
_kfun:kotlin.native.concurrent.FreezableAtomicReference#toString(){}kotlin.String:
000000000000dccc	sub	sp, sp, #0xc0
000000000000dcd0	stp	x26, x25, [sp, #0x70]
000000000000dcd4	stp	x24, x23, [sp, #0x80]
000000000000dcd8	stp	x22, x21, [sp, #0x90]
000000000000dcdc	stp	x20, x19, [sp, #0xa0]
000000000000dce0	stp	x29, x30, [sp, #0xb0]
000000000000dce4	add	x29, sp, #0xb0
000000000000dce8	mov	x19, x1
000000000000dcec	mov	x20, x0
000000000000dcf0	movi.16b	v0, #0x0
000000000000dcf4	stp	q0, q0, [sp, #0x20]
000000000000dcf8	stp	q0, q0, [sp, #0x50]
000000000000dcfc	str	q0, [sp, #0x40]
000000000000dd00	add	x8, sp, #0x20
000000000000dd04	add	x25, x8, #0x20
000000000000dd08	add	x23, x8, #0x30
000000000000dd0c	add	x22, x8, #0x40
000000000000dd10	add	x24, x8, #0x28
000000000000dd14	add	x21, x8, #0x48
000000000000dd18	stp	xzr, xzr, [sp, #0x10]
000000000000dd1c	adr	x9, #0x570a4
000000000000dd20	nop
000000000000dd24	orr	x9, x9, #0x3
000000000000dd28	str	x9, [sp, #0x8]
000000000000dd2c	adrp	x0, 109 ; 0x7a000
000000000000dd30	add	x0, x0, #0x4e0
000000000000dd34	ldr	x9, [x0]
000000000000dd38	blr	x9
000000000000dd3c	ldr	x26, [x0]
000000000000dd40	ldr	x9, [x26, #0x110]
000000000000dd44	str	x8, [x26, #0x110]
000000000000dd48	mov	x8, #0xa00000000
000000000000dd4c	stp	x9, x8, [sp, #0x28]
000000000000dd50	adr	x8, #0x867b9
000000000000dd54	nop
000000000000dd58	ldarb	w8, [x8]
000000000000dd5c	tbz	w8, #0x0, 0xdd64
000000000000dd60	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000dd64	add	x8, sp, #0x8
000000000000dd68	str	x8, [sp, #0x38]
000000000000dd6c	add	x0, sp, #0x8
000000000000dd70	mov	w1, #0xa
000000000000dd74	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000dd78	mov	x0, x20
000000000000dd7c	mov	x1, x25
000000000000dd80	bl	"_kfun:kotlin.native.concurrent.debugString#internal"
000000000000dd84	mov	x1, x0
000000000000dd88	add	x0, sp, #0x8
000000000000dd8c	mov	x2, x24
000000000000dd90	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000dd94	adr	x1, #0x615ac
000000000000dd98	nop
000000000000dd9c	add	x0, sp, #0x8
000000000000dda0	mov	x2, x23
000000000000dda4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000dda8	add	x8, x20, #0x8
000000000000ddac	ldar	x0, [x8]
000000000000ddb0	str	x0, [sp, #0x58]
000000000000ddb4	mov	x1, x22
000000000000ddb8	bl	"_kfun:kotlin.native.concurrent.debugString#internal"
000000000000ddbc	mov	x1, x0
000000000000ddc0	add	x0, sp, #0x8
000000000000ddc4	mov	x2, x21
000000000000ddc8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000ddcc	add	x0, sp, #0x8
000000000000ddd0	mov	x1, x19
000000000000ddd4	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000ddd8	str	x0, [x19]
000000000000dddc	ldr	x8, [sp, #0x28]
000000000000dde0	str	x8, [x26, #0x110]
000000000000dde4	ldp	x29, x30, [sp, #0xb0]
000000000000dde8	ldp	x20, x19, [sp, #0xa0]
000000000000ddec	ldp	x22, x21, [sp, #0x90]
000000000000ddf0	ldp	x24, x23, [sp, #0x80]
000000000000ddf4	ldp	x26, x25, [sp, #0x70]
000000000000ddf8	add	sp, sp, #0xc0
000000000000ddfc	ret
_kfun:kotlin.native.concurrent.debugString#internal:
000000000000de00	sub	sp, sp, #0x150
000000000000de04	stp	x26, x25, [sp, #0x100]
000000000000de08	stp	x24, x23, [sp, #0x110]
000000000000de0c	stp	x22, x21, [sp, #0x120]
000000000000de10	stp	x20, x19, [sp, #0x130]
000000000000de14	stp	x29, x30, [sp, #0x140]
000000000000de18	add	x29, sp, #0x140
000000000000de1c	mov	x19, x1
000000000000de20	mov	x20, x0
000000000000de24	movi.16b	v0, #0x0
000000000000de28	stp	q0, q0, [sp, #0x30]
000000000000de2c	stp	q0, q0, [sp, #0x60]
000000000000de30	str	q0, [sp, #0x50]
000000000000de34	stp	xzr, xzr, [sp, #0x20]
000000000000de38	adr	x8, #0x56f88
000000000000de3c	nop
000000000000de40	orr	x8, x8, #0x3
000000000000de44	stp	xzr, x8, [sp, #0x10]
000000000000de48	adr	x8, #0x54c28
000000000000de4c	nop
000000000000de50	orr	x8, x8, #0x3
000000000000de54	str	x8, [sp, #0x8]
000000000000de58	adrp	x0, 109 ; 0x7a000
000000000000de5c	add	x0, x0, #0x4e0
000000000000de60	ldr	x8, [x0]
000000000000de64	blr	x8
000000000000de68	ldr	x25, [x0]
000000000000de6c	ldr	x8, [x25, #0x110]
000000000000de70	add	x9, sp, #0x30
000000000000de74	str	x9, [x25, #0x110]
000000000000de78	mov	x9, #0xa00000000
000000000000de7c	stp	x8, x9, [sp, #0x38]
000000000000de80	adr	x8, #0x86689
000000000000de84	nop
000000000000de88	ldarb	w8, [x8]
000000000000de8c	tbz	w8, #0x0, 0xde94
000000000000de90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000de94	cbz	x20, 0xdf7c
000000000000de98	add	x8, sp, #0x30
000000000000de9c	add	x21, x8, #0x48
000000000000dea0	add	x22, x8, #0x38
000000000000dea4	add	x23, x8, #0x30
000000000000dea8	add	x24, x8, #0x28
000000000000deac	add	x8, sp, #0x18
000000000000deb0	str	x8, [sp, #0x48]
000000000000deb4	add	x0, sp, #0x18
000000000000deb8	mov	w1, #0xa
000000000000debc	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000dec0	ldr	x8, [x20]
000000000000dec4	and	x8, x8, #0xfffffffffffffffc
000000000000dec8	ldr	x8, [x8]
000000000000decc	add	x9, sp, #0x8
000000000000ded0	str	x9, [sp, #0x50]
000000000000ded4	str	x8, [sp, #0x10]
000000000000ded8	add	x0, sp, #0x8
000000000000dedc	mov	x1, x24
000000000000dee0	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-qualifiedName>(){}kotlin.String?"
000000000000dee4	mov	x1, x0
000000000000dee8	add	x0, sp, #0x18
000000000000deec	mov	x2, x23
000000000000def0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000def4	adr	x1, #0x612dc
000000000000def8	nop
000000000000defc	add	x0, sp, #0x18
000000000000df00	mov	x2, x22
000000000000df04	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000df08	movi.16b	v0, #0x0
000000000000df0c	stp	q0, q0, [sp, #0x80]
000000000000df10	add	x8, sp, #0x80
000000000000df14	add	x22, x8, #0x18
000000000000df18	ldr	x9, [x25, #0x110]
000000000000df1c	str	x8, [x25, #0x110]
000000000000df20	mov	x8, #0x400000000
000000000000df24	stp	x9, x8, [sp, #0x88]
000000000000df28	ldr	x8, [x20]
000000000000df2c	and	x8, x8, #0xfffffffffffffffc
000000000000df30	ldr	x8, [x8]
000000000000df34	ldr	x8, [x8, #0x78]
000000000000df38	mov	x0, x20
000000000000df3c	blr	x8
000000000000df40	mov	w0, w0
000000000000df44	mov	w1, #0x10
000000000000df48	mov	x2, x22
000000000000df4c	bl	_Kotlin_Long_toStringRadix
000000000000df50	mov	x1, x0
000000000000df54	str	x0, [sp, #0x70]
000000000000df58	ldr	x8, [sp, #0x88]
000000000000df5c	str	x8, [x25, #0x110]
000000000000df60	add	x0, sp, #0x18
000000000000df64	mov	x2, x21
000000000000df68	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000df6c	add	x0, sp, #0x18
000000000000df70	mov	x1, x19
000000000000df74	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000df78	b	0xdf84
000000000000df7c	adr	x0, #0x602d4
000000000000df80	nop
000000000000df84	str	x0, [x19]
000000000000df88	ldr	x8, [sp, #0x38]
000000000000df8c	str	x8, [x25, #0x110]
000000000000df90	ldp	x29, x30, [sp, #0x140]
000000000000df94	ldp	x20, x19, [sp, #0x130]
000000000000df98	ldp	x22, x21, [sp, #0x120]
000000000000df9c	ldp	x24, x23, [sp, #0x110]
000000000000dfa0	ldp	x26, x25, [sp, #0x100]
000000000000dfa4	add	sp, sp, #0x150
000000000000dfa8	ret
_kfun:kotlin.native.concurrent.AtomicInt#toString(){}kotlin.String:
000000000000dfac	sub	sp, sp, #0x40
000000000000dfb0	stp	x20, x19, [sp, #0x20]
000000000000dfb4	stp	x29, x30, [sp, #0x30]
000000000000dfb8	add	x29, sp, #0x30
000000000000dfbc	mov	x19, x1
000000000000dfc0	mov	x20, x0
000000000000dfc4	adr	x8, #0x86545
000000000000dfc8	nop
000000000000dfcc	ldarb	w8, [x8]
000000000000dfd0	tbz	w8, #0x0, 0xdfd8
000000000000dfd4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000dfd8	add	x8, x20, #0x8
000000000000dfdc	ldar	w8, [x8]
000000000000dfe0	str	x8, [sp]
000000000000dfe4	adr	x2, #0x4f4c3 ; literal pool for: "%d"
000000000000dfe8	nop
000000000000dfec	add	x0, sp, #0x10
000000000000dff0	mov	w1, #0x10
000000000000dff4	bl	__ZN5konan8snprintfEPcmPKcz
000000000000dff8	add	x0, sp, #0x10
000000000000dffc	mov	x1, x19
000000000000e000	bl	_CreateStringFromCString
000000000000e004	str	x0, [x19]
000000000000e008	ldp	x29, x30, [sp, #0x30]
000000000000e00c	ldp	x20, x19, [sp, #0x20]
000000000000e010	add	sp, sp, #0x40
000000000000e014	ret
_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#<get-value>(){}1:0:
000000000000e018	sub	sp, sp, #0x150
000000000000e01c	stp	x28, x27, [sp, #0xf0]
000000000000e020	stp	x26, x25, [sp, #0x100]
000000000000e024	stp	x24, x23, [sp, #0x110]
000000000000e028	stp	x22, x21, [sp, #0x120]
000000000000e02c	stp	x20, x19, [sp, #0x130]
000000000000e030	stp	x29, x30, [sp, #0x140]
000000000000e034	add	x29, sp, #0x140
000000000000e038	mov	x27, x1
000000000000e03c	mov	x20, x0
000000000000e040	movi.16b	v0, #0x0
000000000000e044	stp	q0, q0, [sp, #0x10]
000000000000e048	str	xzr, [sp, #0x90]
000000000000e04c	stp	q0, q0, [sp, #0x70]
000000000000e050	stp	q0, q0, [sp, #0x50]
000000000000e054	stp	q0, q0, [sp, #0x30]
000000000000e058	add	x19, sp, #0x10
000000000000e05c	adrp	x0, 108 ; 0x7a000
000000000000e060	add	x0, x0, #0x4e0
000000000000e064	ldr	x8, [x0]
000000000000e068	blr	x8
000000000000e06c	ldr	x26, [x0]
000000000000e070	ldr	x8, [x26, #0x110]
000000000000e074	str	x19, [x26, #0x110]
000000000000e078	mov	x9, #0x1100000000
000000000000e07c	stp	x8, x9, [sp, #0x18]
000000000000e080	adr	x25, #0x86489
000000000000e084	nop
000000000000e088	ldarb	w8, [x25]
000000000000e08c	tbz	w8, #0x0, 0xe094
000000000000e090	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e094	ldr	x8, [x20, #0x10]
000000000000e098	str	x8, [sp, #0x28]
000000000000e09c	add	x8, x8, #0x8
000000000000e0a0	ldar	x21, [x8]
000000000000e0a4	str	x21, [sp, #0x30]
000000000000e0a8	adr	x28, #0x864c8
000000000000e0ac	nop
000000000000e0b0	ldar	x22, [x28]
000000000000e0b4	cmp	x22, #0x2
000000000000e0b8	b.hs	0xe1ac
000000000000e0bc	ldp	x8, x9, [x26, #0x120]
000000000000e0c0	cmp	x8, x9
000000000000e0c4	b.eq	0xe0e4
000000000000e0c8	mov	x10, x9
000000000000e0cc	ldr	x11, [x10, #-0x10]!
000000000000e0d0	cmp	x11, x28
000000000000e0d4	b.eq	0xe1a4
000000000000e0d8	mov	x9, x10
000000000000e0dc	cmp	x10, x8
000000000000e0e0	b.ne	0xe0cc
000000000000e0e4	add	x23, x26, #0x120
000000000000e0e8	add	x0, x26, #0x138
000000000000e0ec	mov	w9, #0x1
000000000000e0f0	ldaxr	w8, [x0]
000000000000e0f4	stlxr	w10, w9, [x0]
000000000000e0f8	cbnz	w10, 0xe0f0
000000000000e0fc	b	0xe10c
000000000000e100	mov	w24, #0x1
000000000000e104	stlxr	w9, x24, [x28]
000000000000e108	cbz	w9, 0xe11c
000000000000e10c	ldaxr	x22, [x28]
000000000000e110	cbz	x22, 0xe100
000000000000e114	mov	w24, #0x0
000000000000e118	clrex
000000000000e11c	cmp	x22, #0x1
000000000000e120	b.eq	0xe10c
000000000000e124	cbz	x26, 0xe14c
000000000000e128	ldaxr	w9, [x0]
000000000000e12c	stlxr	w10, w8, [x0]
000000000000e130	cbnz	w10, 0xe128
000000000000e134	cbnz	w8, 0xe14c
000000000000e138	cmp	w9, #0x1
000000000000e13c	b.ne	0xe14c
000000000000e140	ldarb	w8, [x25]
000000000000e144	tbz	w8, #0x0, 0xe14c
000000000000e148	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000e14c	tbz	w24, #0x0, 0xe194
000000000000e150	ldr	x8, [x26, #0x118]
000000000000e154	add	x0, x8, #0x70
000000000000e158	mov	w1, #0x10
000000000000e15c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000e160	mov	x22, x0
000000000000e164	adr	x8, #0x545cc
000000000000e168	nop
000000000000e16c	str	x8, [x22, #0x10]!
000000000000e170	stur	xzr, [x22, #-0x8]
000000000000e174	str	x22, [sp, #0x38]
000000000000e178	ldp	x9, x8, [x26, #0x128]
000000000000e17c	cmp	x9, x8
000000000000e180	b.hs	0xe2bc
000000000000e184	stp	x28, x22, [x9]
000000000000e188	add	x8, x9, #0x10
000000000000e18c	str	x8, [x26, #0x128]
000000000000e190	b	0xe350
000000000000e194	str	x22, [sp, #0x38]
000000000000e198	cmp	x22, x21
000000000000e19c	b.ne	0xe5ac
000000000000e1a0	b	0xe1b4
000000000000e1a4	ldur	x22, [x9, #-0x8]
000000000000e1a8	str	x22, [sp, #0x38]
000000000000e1ac	cmp	x22, x21
000000000000e1b0	b.ne	0xe5ac
000000000000e1b4	ldr	x22, [x20, #0x18]
000000000000e1b8	mov	x0, x22
000000000000e1bc	bl	"_kfun:kotlin.native.concurrent.Lock#lock(){}"
000000000000e1c0	ldr	x8, [x20, #0x10]
000000000000e1c4	str	x8, [sp, #0x40]
000000000000e1c8	add	x8, x8, #0x8
000000000000e1cc	ldar	x21, [x8]
000000000000e1d0	str	x21, [sp, #0x48]
000000000000e1d4	ldar	x23, [x28]
000000000000e1d8	cmp	x23, #0x2
000000000000e1dc	b.hs	0xe3bc
000000000000e1e0	ldp	x8, x9, [x26, #0x120]
000000000000e1e4	cmp	x8, x9
000000000000e1e8	b.eq	0xe208
000000000000e1ec	mov	x10, x9
000000000000e1f0	ldr	x11, [x10, #-0x10]!
000000000000e1f4	cmp	x11, x28
000000000000e1f8	b.eq	0xe3b4
000000000000e1fc	mov	x9, x10
000000000000e200	cmp	x10, x8
000000000000e204	b.ne	0xe1f0
000000000000e208	add	x8, x26, #0x120
000000000000e20c	str	x8, [sp, #0x8]
000000000000e210	add	x0, x26, #0x138
000000000000e214	mov	w9, #0x1
000000000000e218	ldaxr	w8, [x0]
000000000000e21c	stlxr	w10, w9, [x0]
000000000000e220	cbnz	w10, 0xe218
000000000000e224	b	0xe234
000000000000e228	mov	w24, #0x1
000000000000e22c	stlxr	w9, x24, [x28]
000000000000e230	cbz	w9, 0xe244
000000000000e234	ldaxr	x23, [x28]
000000000000e238	cbz	x23, 0xe228
000000000000e23c	mov	w24, #0x0
000000000000e240	clrex
000000000000e244	cmp	x23, #0x1
000000000000e248	b.eq	0xe234
000000000000e24c	cbz	x26, 0xe274
000000000000e250	ldaxr	w9, [x0]
000000000000e254	stlxr	w10, w8, [x0]
000000000000e258	cbnz	w10, 0xe250
000000000000e25c	cbnz	w8, 0xe274
000000000000e260	cmp	w9, #0x1
000000000000e264	b.ne	0xe274
000000000000e268	ldarb	w8, [x25]
000000000000e26c	tbz	w8, #0x0, 0xe274
000000000000e270	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000e274	tbz	w24, #0x0, 0xe3a4
000000000000e278	ldr	x8, [x26, #0x118]
000000000000e27c	add	x0, x8, #0x70
000000000000e280	mov	w1, #0x10
000000000000e284	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000e288	mov	x23, x0
000000000000e28c	adr	x8, #0x544a4
000000000000e290	nop
000000000000e294	str	x8, [x23, #0x10]!
000000000000e298	stur	xzr, [x23, #-0x8]
000000000000e29c	str	x23, [sp, #0x58]
000000000000e2a0	ldp	x9, x8, [x26, #0x128]
000000000000e2a4	cmp	x9, x8
000000000000e2a8	b.hs	0xe448
000000000000e2ac	stp	x28, x23, [x9]
000000000000e2b0	add	x8, x9, #0x10
000000000000e2b4	str	x8, [x26, #0x128]
000000000000e2b8	b	0xe4dc
000000000000e2bc	str	x27, [sp, #0x8]
000000000000e2c0	ldr	x10, [x23]
000000000000e2c4	sub	x9, x9, x10
000000000000e2c8	asr	x19, x9, #4
000000000000e2cc	add	x9, x19, #0x1
000000000000e2d0	lsr	x11, x9, #60
000000000000e2d4	cbnz	x11, 0xe5e4
000000000000e2d8	sub	x8, x8, x10
000000000000e2dc	asr	x10, x8, #3
000000000000e2e0	cmp	x10, x9
000000000000e2e4	csel	x9, x9, x10, lo
000000000000e2e8	mov	x10, #0x7ffffffffffffff
000000000000e2ec	cmp	x10, x8, asr #4
000000000000e2f0	mov	x8, #0xfffffffffffffff
000000000000e2f4	csel	x24, x9, x8, hi
000000000000e2f8	mov	x0, x24
000000000000e2fc	mov	w1, #0x10
000000000000e300	bl	0x55aec ; symbol stub for: _calloc
000000000000e304	add	x8, x0, x19, lsl #4
000000000000e308	add	x27, x0, x24, lsl #4
000000000000e30c	stp	x28, x22, [x8]
000000000000e310	add	x19, x8, #0x10
000000000000e314	ldp	x1, x9, [x26, #0x120]
000000000000e318	sub	x2, x9, x1
000000000000e31c	sub	x24, x8, x2
000000000000e320	cmp	x2, #0x1
000000000000e324	b.lt	0xe334
000000000000e328	mov	x0, x24
000000000000e32c	bl	0x55bd0 ; symbol stub for: _memcpy
000000000000e330	ldr	x1, [x23]
000000000000e334	stp	x24, x19, [x26, #0x120]
000000000000e338	str	x27, [x26, #0x130]
000000000000e33c	ldr	x27, [sp, #0x8]
000000000000e340	add	x19, sp, #0x10
000000000000e344	cbz	x1, 0xe350
000000000000e348	mov	x0, x1
000000000000e34c	bl	0x55b7c ; symbol stub for: _free
000000000000e350	mov	w0, #0x1
000000000000e354	mov	w1, #0x28
000000000000e358	bl	0x55aec ; symbol stub for: _calloc
000000000000e35c	mov	x8, x26
000000000000e360	ldr	x9, [x8, #0x18]!
000000000000e364	sub	x10, x8, #0x8
000000000000e368	stp	x28, x10, [x0, #0x10]
000000000000e36c	stp	x9, x8, [x0]
000000000000e370	str	x0, [x9, #0x8]
000000000000e374	str	x0, [x8]
000000000000e378	ldr	x9, [x8, #0x10]
000000000000e37c	add	x9, x9, #0x1
000000000000e380	str	x9, [x8, #0x10]
000000000000e384	str	x0, [x0, #0x20]
000000000000e388	stlr	x22, [x28]
000000000000e38c	ldr	x9, [x8, #0x110]
000000000000e390	sub	x9, x9, #0x10
000000000000e394	str	x9, [x8, #0x110]
000000000000e398	cmp	x22, x21
000000000000e39c	b.ne	0xe5ac
000000000000e3a0	b	0xe1b4
000000000000e3a4	str	x23, [sp, #0x58]
000000000000e3a8	cmp	x23, x21
000000000000e3ac	b.ne	0xe5a4
000000000000e3b0	b	0xe3c4
000000000000e3b4	ldur	x23, [x9, #-0x8]
000000000000e3b8	str	x23, [sp, #0x58]
000000000000e3bc	cmp	x23, x21
000000000000e3c0	b.ne	0xe5a4
000000000000e3c4	ldr	x8, [x20, #0x8]
000000000000e3c8	str	x8, [sp, #0x60]
000000000000e3cc	add	x8, x8, #0x8
000000000000e3d0	ldar	x0, [x8]
000000000000e3d4	str	x0, [sp, #0x68]
000000000000e3d8	cbz	x0, 0xe5dc
000000000000e3dc	add	x1, x19, #0x60
000000000000e3e0	ldr	x8, [x0]
000000000000e3e4	and	x8, x8, #0xfffffffffffffffc
000000000000e3e8	ldr	x8, [x8]
000000000000e3ec	ldr	w9, [x8, #0x3c]
000000000000e3f0	ldr	x8, [x8, #0x40]
000000000000e3f4	tbnz	w9, #0x1f, 0xe404
000000000000e3f8	mov	w10, #0x59
000000000000e3fc	and	x9, x9, x10
000000000000e400	b	0xe570
000000000000e404	neg	w10, w9
000000000000e408	mvn	w9, w9
000000000000e40c	cmp	w10, #0x9
000000000000e410	b.ge	0xe530
000000000000e414	cmp	w10, #0x2
000000000000e418	b.lt	0xe564
000000000000e41c	mov	x10, #0x0
000000000000e420	mov	x11, x8
000000000000e424	ldr	w12, [x11]
000000000000e428	cmp	w12, #0x58
000000000000e42c	b.gt	0xe56c
000000000000e430	add	x10, x10, #0x1
000000000000e434	add	x11, x11, #0x10
000000000000e438	cmp	x9, x10
000000000000e43c	b.ne	0xe424
000000000000e440	mov	x10, x9
000000000000e444	b	0xe56c
000000000000e448	ldr	x10, [sp, #0x8]
000000000000e44c	ldr	x10, [x10]
000000000000e450	sub	x9, x9, x10
000000000000e454	asr	x19, x9, #4
000000000000e458	add	x9, x19, #0x1
000000000000e45c	lsr	x11, x9, #60
000000000000e460	cbnz	x11, 0xe5ec
000000000000e464	sub	x8, x8, x10
000000000000e468	asr	x10, x8, #3
000000000000e46c	cmp	x10, x9
000000000000e470	csel	x9, x9, x10, lo
000000000000e474	mov	x10, #0x7ffffffffffffff
000000000000e478	cmp	x10, x8, asr #4
000000000000e47c	mov	x8, #0xfffffffffffffff
000000000000e480	csel	x25, x9, x8, hi
000000000000e484	mov	x0, x25
000000000000e488	mov	w1, #0x10
000000000000e48c	bl	0x55aec ; symbol stub for: _calloc
000000000000e490	add	x8, x0, x19, lsl #4
000000000000e494	add	x24, x0, x25, lsl #4
000000000000e498	stp	x28, x23, [x8]
000000000000e49c	add	x19, x8, #0x10
000000000000e4a0	ldp	x1, x9, [x26, #0x120]
000000000000e4a4	sub	x2, x9, x1
000000000000e4a8	sub	x25, x8, x2
000000000000e4ac	cmp	x2, #0x1
000000000000e4b0	b.lt	0xe4c4
000000000000e4b4	mov	x0, x25
000000000000e4b8	bl	0x55bd0 ; symbol stub for: _memcpy
000000000000e4bc	ldr	x8, [sp, #0x8]
000000000000e4c0	ldr	x1, [x8]
000000000000e4c4	stp	x25, x19, [x26, #0x120]
000000000000e4c8	str	x24, [x26, #0x130]
000000000000e4cc	add	x19, sp, #0x10
000000000000e4d0	cbz	x1, 0xe4dc
000000000000e4d4	mov	x0, x1
000000000000e4d8	bl	0x55b7c ; symbol stub for: _free
000000000000e4dc	mov	w0, #0x1
000000000000e4e0	mov	w1, #0x28
000000000000e4e4	bl	0x55aec ; symbol stub for: _calloc
000000000000e4e8	mov	x8, x26
000000000000e4ec	ldr	x9, [x8, #0x18]!
000000000000e4f0	sub	x10, x8, #0x8
000000000000e4f4	stp	x28, x10, [x0, #0x10]
000000000000e4f8	stp	x9, x8, [x0]
000000000000e4fc	str	x0, [x9, #0x8]
000000000000e500	str	x0, [x8]
000000000000e504	ldr	x9, [x8, #0x10]
000000000000e508	add	x9, x9, #0x1
000000000000e50c	str	x9, [x8, #0x10]
000000000000e510	str	x0, [x0, #0x20]
000000000000e514	stlr	x23, [x28]
000000000000e518	ldr	x9, [x8, #0x110]
000000000000e51c	sub	x9, x9, #0x10
000000000000e520	str	x9, [x8, #0x110]
000000000000e524	cmp	x23, x21
000000000000e528	b.ne	0xe5a4
000000000000e52c	b	0xe3c4
000000000000e530	mov	w10, #0x0
000000000000e534	add	w11, w9, w10
000000000000e538	cmp	w11, #0x0
000000000000e53c	cinc	w11, w11, lt
000000000000e540	asr	w11, w11, #1
000000000000e544	sbfiz	x12, x11, #4, #32
000000000000e548	ldr	w12, [x8, x12]
000000000000e54c	cmp	w12, #0x59
000000000000e550	csinc	w10, w10, w11, ge
000000000000e554	csel	w9, w9, w11, lt
000000000000e558	cmp	w10, w9
000000000000e55c	b.lt	0xe534
000000000000e560	b	0xe56c
000000000000e564	mov	w10, #0x0
000000000000e568	b	0xe56c
000000000000e56c	sxtw	x9, w10
000000000000e570	add	x8, x8, x9, lsl #4
000000000000e574	ldr	x8, [x8, #0x8]
000000000000e578	ldr	x8, [x8]
000000000000e57c	blr	x8
000000000000e580	mov	x21, x0
000000000000e584	ldr	x8, [x20, #0x10]
000000000000e588	str	x8, [sp, #0x88]
000000000000e58c	add	x8, x8, #0x8
000000000000e590	stlr	x0, [x8]
000000000000e594	ldr	x8, [x20, #0x8]
000000000000e598	str	x8, [sp, #0x90]
000000000000e59c	add	x8, x8, #0x8
000000000000e5a0	stlr	xzr, [x8]
000000000000e5a4	mov	x0, x22
000000000000e5a8	bl	"_kfun:kotlin.native.concurrent.Lock#unlock(){}"
000000000000e5ac	str	x21, [x27]
000000000000e5b0	ldr	x8, [sp, #0x18]
000000000000e5b4	str	x8, [x26, #0x110]
000000000000e5b8	mov	x0, x21
000000000000e5bc	ldp	x29, x30, [sp, #0x140]
000000000000e5c0	ldp	x20, x19, [sp, #0x130]
000000000000e5c4	ldp	x22, x21, [sp, #0x120]
000000000000e5c8	ldp	x24, x23, [sp, #0x110]
000000000000e5cc	ldp	x26, x25, [sp, #0x100]
000000000000e5d0	ldp	x28, x27, [sp, #0xf0]
000000000000e5d4	add	sp, sp, #0x150
000000000000e5d8	ret
000000000000e5dc	bl	_ThrowNullPointerException
000000000000e5e0	b	0xe5f4
000000000000e5e4	mov	x0, x23
000000000000e5e8	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000e5ec	ldr	x0, [sp, #0x8]
000000000000e5f0	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000000e5f4	brk	#0x1
000000000000e5f8	add	x8, sp, #0x10
000000000000e5fc	str	x8, [x26, #0x110]
000000000000e600	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000000e604	ldr	x8, [x0, #0x8]
000000000000e608	ldr	x19, [x8]
000000000000e60c	str	x19, [sp, #0x50]
000000000000e610	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000000e614	mov	x0, x22
000000000000e618	bl	"_kfun:kotlin.native.concurrent.Lock#unlock(){}"
000000000000e61c	mov	x0, x19
000000000000e620	bl	_ThrowException
_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#isInitialized(){}kotlin.Boolean:
000000000000e624	sub	sp, sp, #0xa0
000000000000e628	stp	x26, x25, [sp, #0x50]
000000000000e62c	stp	x24, x23, [sp, #0x60]
000000000000e630	stp	x22, x21, [sp, #0x70]
000000000000e634	stp	x20, x19, [sp, #0x80]
000000000000e638	stp	x29, x30, [sp, #0x90]
000000000000e63c	add	x29, sp, #0x90
000000000000e640	mov	x19, x0
000000000000e644	movi.16b	v0, #0x0
000000000000e648	stp	q0, q0, [sp]
000000000000e64c	str	q0, [sp, #0x20]
000000000000e650	adrp	x0, 108 ; 0x7a000
000000000000e654	add	x0, x0, #0x4e0
000000000000e658	ldr	x8, [x0]
000000000000e65c	blr	x8
000000000000e660	ldr	x22, [x0]
000000000000e664	ldr	x8, [x22, #0x110]
000000000000e668	mov	x9, sp
000000000000e66c	str	x9, [x22, #0x110]
000000000000e670	mov	x9, #0x600000000
000000000000e674	stp	x8, x9, [sp, #0x8]
000000000000e678	adr	x21, #0x85e91
000000000000e67c	nop
000000000000e680	ldarb	w8, [x21]
000000000000e684	tbz	w8, #0x0, 0xe68c
000000000000e688	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e68c	ldr	x8, [x19, #0x10]
000000000000e690	str	x8, [sp, #0x18]
000000000000e694	add	x8, x8, #0x8
000000000000e698	ldar	x23, [x8]
000000000000e69c	str	x23, [sp, #0x20]
000000000000e6a0	adr	x24, #0x85ed0
000000000000e6a4	nop
000000000000e6a8	ldar	x19, [x24]
000000000000e6ac	cmp	x19, #0x1
000000000000e6b0	b.hi	0xe870
000000000000e6b4	ldp	x8, x9, [x22, #0x120]
000000000000e6b8	cmp	x8, x9
000000000000e6bc	b.eq	0xe6dc
000000000000e6c0	mov	x10, x9
000000000000e6c4	ldr	x11, [x10, #-0x10]!
000000000000e6c8	cmp	x11, x24
000000000000e6cc	b.eq	0xe794
000000000000e6d0	mov	x9, x10
000000000000e6d4	cmp	x10, x8
000000000000e6d8	b.ne	0xe6c4
000000000000e6dc	add	x20, x22, #0x120
000000000000e6e0	add	x0, x22, #0x138
000000000000e6e4	mov	w9, #0x1
000000000000e6e8	ldaxr	w8, [x0]
000000000000e6ec	stlxr	w10, w9, [x0]
000000000000e6f0	cbnz	w10, 0xe6e8
000000000000e6f4	b	0xe704
000000000000e6f8	mov	w25, #0x1
000000000000e6fc	stlxr	w9, x25, [x24]
000000000000e700	cbz	w9, 0xe714
000000000000e704	ldaxr	x19, [x24]
000000000000e708	cbz	x19, 0xe6f8
000000000000e70c	mov	w25, #0x0
000000000000e710	clrex
000000000000e714	cmp	x19, #0x1
000000000000e718	b.eq	0xe704
000000000000e71c	cbz	x22, 0xe744
000000000000e720	ldaxr	w9, [x0]
000000000000e724	stlxr	w10, w8, [x0]
000000000000e728	cbnz	w10, 0xe720
000000000000e72c	cbnz	w8, 0xe744
000000000000e730	cmp	w9, #0x1
000000000000e734	b.ne	0xe744
000000000000e738	ldarb	w8, [x21]
000000000000e73c	tbz	w8, #0x0, 0xe744
000000000000e740	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000000e744	tbz	w25, #0x0, 0xe78c
000000000000e748	ldr	x8, [x22, #0x118]
000000000000e74c	add	x0, x8, #0x70
000000000000e750	mov	w1, #0x10
000000000000e754	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000e758	mov	x19, x0
000000000000e75c	adr	x8, #0x53fd4
000000000000e760	nop
000000000000e764	str	x8, [x19, #0x10]!
000000000000e768	stur	xzr, [x19, #-0x8]
000000000000e76c	str	x19, [sp, #0x28]
000000000000e770	ldp	x9, x8, [x22, #0x128]
000000000000e774	cmp	x9, x8
000000000000e778	b.hs	0xe7a0
000000000000e77c	stp	x24, x19, [x9]
000000000000e780	add	x8, x9, #0x10
000000000000e784	str	x8, [x22, #0x128]
000000000000e788	b	0xe828
000000000000e78c	str	x19, [sp, #0x28]
000000000000e790	b	0xe870
000000000000e794	ldur	x19, [x9, #-0x8]
000000000000e798	str	x19, [sp, #0x28]
000000000000e79c	b	0xe870
000000000000e7a0	ldr	x10, [x20]
000000000000e7a4	sub	x9, x9, x10
000000000000e7a8	asr	x25, x9, #4
000000000000e7ac	add	x9, x25, #0x1
000000000000e7b0	lsr	x11, x9, #60
000000000000e7b4	cbnz	x11, 0xe89c
000000000000e7b8	sub	x8, x8, x10
000000000000e7bc	asr	x10, x8, #3
000000000000e7c0	cmp	x10, x9
000000000000e7c4	csel	x9, x9, x10, lo
000000000000e7c8	mov	x10, #0x7ffffffffffffff
000000000000e7cc	cmp	x10, x8, asr #4
000000000000e7d0	mov	x8, #0xfffffffffffffff
000000000000e7d4	csel	x21, x9, x8, hi
000000000000e7d8	mov	x0, x21
000000000000e7dc	mov	w1, #0x10
000000000000e7e0	bl	0x55aec ; symbol stub for: _calloc
000000000000e7e4	add	x8, x0, x25, lsl #4
000000000000e7e8	add	x25, x0, x21, lsl #4
000000000000e7ec	stp	x24, x19, [x8]
000000000000e7f0	add	x26, x8, #0x10
000000000000e7f4	ldp	x1, x9, [x22, #0x120]
000000000000e7f8	sub	x2, x9, x1
000000000000e7fc	sub	x21, x8, x2
000000000000e800	cmp	x2, #0x1
000000000000e804	b.lt	0xe814
000000000000e808	mov	x0, x21
000000000000e80c	bl	0x55bd0 ; symbol stub for: _memcpy
000000000000e810	ldr	x1, [x20]
000000000000e814	stp	x21, x26, [x22, #0x120]
000000000000e818	str	x25, [x22, #0x130]
000000000000e81c	cbz	x1, 0xe828
000000000000e820	mov	x0, x1
000000000000e824	bl	0x55b7c ; symbol stub for: _free
000000000000e828	mov	w0, #0x1
000000000000e82c	mov	w1, #0x28
000000000000e830	bl	0x55aec ; symbol stub for: _calloc
000000000000e834	mov	x8, x22
000000000000e838	ldr	x9, [x8, #0x18]!
000000000000e83c	sub	x10, x8, #0x8
000000000000e840	stp	x24, x10, [x0, #0x10]
000000000000e844	stp	x9, x8, [x0]
000000000000e848	str	x0, [x9, #0x8]
000000000000e84c	str	x0, [x8]
000000000000e850	ldr	x9, [x8, #0x10]
000000000000e854	add	x9, x9, #0x1
000000000000e858	str	x9, [x8, #0x10]
000000000000e85c	str	x0, [x0, #0x20]
000000000000e860	stlr	x19, [x24]
000000000000e864	ldr	x9, [x8, #0x110]
000000000000e868	sub	x9, x9, #0x10
000000000000e86c	str	x9, [x8, #0x110]
000000000000e870	cmp	x19, x23
000000000000e874	cset	w0, ne
000000000000e878	ldr	x8, [sp, #0x8]
000000000000e87c	str	x8, [x22, #0x110]
000000000000e880	ldp	x29, x30, [sp, #0x90]
000000000000e884	ldp	x20, x19, [sp, #0x80]
000000000000e888	ldp	x22, x21, [sp, #0x70]
000000000000e88c	ldp	x24, x23, [sp, #0x60]
000000000000e890	ldp	x26, x25, [sp, #0x50]
000000000000e894	add	sp, sp, #0xa0
000000000000e898	ret
000000000000e89c	mov	x0, x20
000000000000e8a0	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#toString(){}kotlin.String:
000000000000e8a4	sub	sp, sp, #0x50
000000000000e8a8	stp	x22, x21, [sp, #0x20]
000000000000e8ac	stp	x20, x19, [sp, #0x30]
000000000000e8b0	stp	x29, x30, [sp, #0x40]
000000000000e8b4	add	x29, sp, #0x40
000000000000e8b8	mov	x19, x1
000000000000e8bc	mov	x20, x0
000000000000e8c0	movi.16b	v0, #0x0
000000000000e8c4	stp	q0, q0, [sp]
000000000000e8c8	adrp	x0, 108 ; 0x7a000
000000000000e8cc	add	x0, x0, #0x4e0
000000000000e8d0	ldr	x8, [x0]
000000000000e8d4	blr	x8
000000000000e8d8	ldr	x21, [x0]
000000000000e8dc	ldr	x8, [x21, #0x110]
000000000000e8e0	mov	x9, sp
000000000000e8e4	str	x9, [x21, #0x110]
000000000000e8e8	mov	x9, #0x400000000
000000000000e8ec	stp	x8, x9, [sp, #0x8]
000000000000e8f0	adr	x8, #0x85c19
000000000000e8f4	nop
000000000000e8f8	ldarb	w8, [x8]
000000000000e8fc	tbnz	w8, #0x0, 0xe93c
000000000000e900	mov	x0, x20
000000000000e904	bl	"_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#isInitialized(){}kotlin.Boolean"
000000000000e908	cbz	w0, 0xe94c
000000000000e90c	mov	x8, sp
000000000000e910	add	x1, x8, #0x18
000000000000e914	mov	x0, x20
000000000000e918	bl	"_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#<get-value>(){}1:0"
000000000000e91c	cbz	x0, 0xe958
000000000000e920	ldr	x8, [x0]
000000000000e924	and	x8, x8, #0xfffffffffffffffc
000000000000e928	ldr	x8, [x8]
000000000000e92c	ldr	x8, [x8, #0x80]
000000000000e930	mov	x1, x19
000000000000e934	blr	x8
000000000000e938	b	0xe960
000000000000e93c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e940	mov	x0, x20
000000000000e944	bl	"_kfun:kotlin.native.concurrent.SynchronizedLazyImpl#isInitialized(){}kotlin.Boolean"
000000000000e948	cbnz	w0, 0xe90c
000000000000e94c	adr	x0, #0x60a14
000000000000e950	nop
000000000000e954	b	0xe960
000000000000e958	adr	x0, #0x5f8f8
000000000000e95c	nop
000000000000e960	str	x0, [x19]
000000000000e964	ldr	x8, [sp, #0x8]
000000000000e968	str	x8, [x21, #0x110]
000000000000e96c	ldp	x29, x30, [sp, #0x40]
000000000000e970	ldp	x20, x19, [sp, #0x30]
000000000000e974	ldp	x22, x21, [sp, #0x20]
000000000000e978	add	sp, sp, #0x50
000000000000e97c	ret
_kfun:kotlin.native.concurrent.Lock#lock(){}:
000000000000e980	sub	sp, sp, #0x90
000000000000e984	stp	x24, x23, [sp, #0x50]
000000000000e988	stp	x22, x21, [sp, #0x60]
000000000000e98c	stp	x20, x19, [sp, #0x70]
000000000000e990	stp	x29, x30, [sp, #0x80]
000000000000e994	add	x29, sp, #0x80
000000000000e998	mov	x19, x0
000000000000e99c	movi.16b	v0, #0x0
000000000000e9a0	stp	q0, q0, [sp]
000000000000e9a4	adrp	x0, 108 ; 0x7a000
000000000000e9a8	add	x0, x0, #0x4e0
000000000000e9ac	ldr	x8, [x0]
000000000000e9b0	blr	x8
000000000000e9b4	ldr	x22, [x0]
000000000000e9b8	ldr	x8, [x22, #0x110]
000000000000e9bc	mov	x9, sp
000000000000e9c0	str	x9, [x22, #0x110]
000000000000e9c4	mov	x9, #0x400000000
000000000000e9c8	stp	x8, x9, [sp, #0x8]
000000000000e9cc	adr	x23, #0x85b3d
000000000000e9d0	nop
000000000000e9d4	ldarb	w8, [x23]
000000000000e9d8	tbz	w8, #0x0, 0xe9e0
000000000000e9dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000e9e0	bl	_LookupTLS
000000000000e9e4	ldar	x20, [x0]
000000000000e9e8	cmp	x20, #0x2
000000000000e9ec	b.hs	0xea78
000000000000e9f0	cbz	x20, 0xe9fc
000000000000e9f4	str	x20, [sp, #0x18]
000000000000e9f8	b	0xea78
000000000000e9fc	mov	x21, x0
000000000000ea00	ldr	x8, [x22, #0x118]
000000000000ea04	add	x0, x8, #0x70
000000000000ea08	mov	w1, #0x18
000000000000ea0c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ea10	mov	x20, x0
000000000000ea14	adr	x8, #0x53e3c
000000000000ea18	nop
000000000000ea1c	str	x8, [x20, #0x10]!
000000000000ea20	stur	xzr, [x20, #-0x8]
000000000000ea24	str	x20, [sp, #0x18]
000000000000ea28	str	x20, [x21]
000000000000ea2c	movi.16b	v0, #0x0
000000000000ea30	stp	q0, q0, [sp, #0x20]
000000000000ea34	str	xzr, [sp, #0x40]
000000000000ea38	add	x8, sp, #0x20
000000000000ea3c	ldp	x9, x10, [x22, #0x110]
000000000000ea40	str	x8, [x22, #0x110]
000000000000ea44	mov	x8, #0x500000000
000000000000ea48	stp	x9, x8, [sp, #0x28]
000000000000ea4c	add	x0, x10, #0x70
000000000000ea50	mov	w1, #0x10
000000000000ea54	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ea58	adr	x8, #0x522b8
000000000000ea5c	nop
000000000000ea60	str	x8, [x0, #0x10]!
000000000000ea64	stur	xzr, [x0, #-0x8]
000000000000ea68	stp	x0, x0, [sp, #0x38]
000000000000ea6c	str	x0, [x20, #0x8]
000000000000ea70	ldr	x8, [sp, #0x28]
000000000000ea74	str	x8, [x22, #0x110]
000000000000ea78	ldr	x0, [x20, #0x8]
000000000000ea7c	ldr	x8, [x0]
000000000000ea80	and	x8, x8, #0xfffffffffffffffc
000000000000ea84	ldr	x8, [x8]
000000000000ea88	ldr	x8, [x8, #0x78]
000000000000ea8c	blr	x8
000000000000ea90	mov	x20, x0
000000000000ea94	ldarb	w8, [x23]
000000000000ea98	tbz	w8, #0x0, 0xeaa0
000000000000ea9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000eaa0	ldr	x8, [x19, #0x8]
000000000000eaa4	add	x9, x8, #0x8
000000000000eaa8	ldaxr	w8, [x9]
000000000000eaac	cbnz	w8, 0xeac8
000000000000eab0	stlxr	w10, w20, [x9]
000000000000eab4	cbnz	w10, 0xeaa8
000000000000eab8	mov	w9, #0x1
000000000000eabc	cmp	w8, w20
000000000000eac0	b.ne	0xead8
000000000000eac4	b	0xeae0
000000000000eac8	mov	w9, #0x0
000000000000eacc	clrex
000000000000ead0	cmp	w8, w20
000000000000ead4	b.eq	0xeae0
000000000000ead8	tbz	w9, #0x0, 0xea94
000000000000eadc	b	0xeaf8
000000000000eae0	ldr	x8, [x19, #0x10]
000000000000eae4	add	x8, x8, #0x8
000000000000eae8	ldaxr	w9, [x8]
000000000000eaec	add	w9, w9, #0x1
000000000000eaf0	stlxr	w10, w9, [x8]
000000000000eaf4	cbnz	w10, 0xeae8
000000000000eaf8	ldr	x8, [sp, #0x8]
000000000000eafc	str	x8, [x22, #0x110]
000000000000eb00	ldp	x29, x30, [sp, #0x80]
000000000000eb04	ldp	x20, x19, [sp, #0x70]
000000000000eb08	ldp	x22, x21, [sp, #0x60]
000000000000eb0c	ldp	x24, x23, [sp, #0x50]
000000000000eb10	add	sp, sp, #0x90
000000000000eb14	ret
_kfun:kotlin.native.concurrent.Lock#unlock(){}:
000000000000eb18	sub	sp, sp, #0x80
000000000000eb1c	stp	x22, x21, [sp, #0x50]
000000000000eb20	stp	x20, x19, [sp, #0x60]
000000000000eb24	stp	x29, x30, [sp, #0x70]
000000000000eb28	add	x29, sp, #0x70
000000000000eb2c	mov	x19, x0
000000000000eb30	movi.16b	v0, #0x0
000000000000eb34	stp	q0, q0, [sp]
000000000000eb38	adrp	x0, 108 ; 0x7a000
000000000000eb3c	add	x0, x0, #0x4e0
000000000000eb40	ldr	x8, [x0]
000000000000eb44	blr	x8
000000000000eb48	ldr	x22, [x0]
000000000000eb4c	ldr	x8, [x22, #0x110]
000000000000eb50	mov	x9, sp
000000000000eb54	str	x9, [x22, #0x110]
000000000000eb58	mov	x9, #0x400000000
000000000000eb5c	stp	x8, x9, [sp, #0x8]
000000000000eb60	adr	x8, #0x859a9
000000000000eb64	nop
000000000000eb68	ldarb	w8, [x8]
000000000000eb6c	tbz	w8, #0x0, 0xeb74
000000000000eb70	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000eb74	ldr	x8, [x19, #0x10]
000000000000eb78	add	x8, x8, #0x8
000000000000eb7c	ldar	w8, [x8]
000000000000eb80	cmp	w8, #0x1
000000000000eb84	b.lt	0xeba4
000000000000eb88	ldr	x8, [x19, #0x10]
000000000000eb8c	add	x8, x8, #0x8
000000000000eb90	ldaxr	w9, [x8]
000000000000eb94	sub	w9, w9, #0x1
000000000000eb98	stlxr	w10, w9, [x8]
000000000000eb9c	cbnz	w10, 0xeb90
000000000000eba0	b	0xec78
000000000000eba4	bl	_LookupTLS
000000000000eba8	ldar	x20, [x0]
000000000000ebac	cmp	x20, #0x2
000000000000ebb0	b.hs	0xec3c
000000000000ebb4	cbz	x20, 0xebc0
000000000000ebb8	str	x20, [sp, #0x18]
000000000000ebbc	b	0xec3c
000000000000ebc0	mov	x21, x0
000000000000ebc4	ldr	x8, [x22, #0x118]
000000000000ebc8	add	x0, x8, #0x70
000000000000ebcc	mov	w1, #0x18
000000000000ebd0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ebd4	mov	x20, x0
000000000000ebd8	adr	x8, #0x53c78
000000000000ebdc	nop
000000000000ebe0	str	x8, [x20, #0x10]!
000000000000ebe4	stur	xzr, [x20, #-0x8]
000000000000ebe8	str	x20, [sp, #0x18]
000000000000ebec	str	x20, [x21]
000000000000ebf0	movi.16b	v0, #0x0
000000000000ebf4	stp	q0, q0, [sp, #0x20]
000000000000ebf8	str	xzr, [sp, #0x40]
000000000000ebfc	add	x8, sp, #0x20
000000000000ec00	ldp	x9, x10, [x22, #0x110]
000000000000ec04	str	x8, [x22, #0x110]
000000000000ec08	mov	x8, #0x500000000
000000000000ec0c	stp	x9, x8, [sp, #0x28]
000000000000ec10	add	x0, x10, #0x70
000000000000ec14	mov	w1, #0x10
000000000000ec18	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ec1c	adr	x8, #0x520f4
000000000000ec20	nop
000000000000ec24	str	x8, [x0, #0x10]!
000000000000ec28	stur	xzr, [x0, #-0x8]
000000000000ec2c	stp	x0, x0, [sp, #0x38]
000000000000ec30	str	x0, [x20, #0x8]
000000000000ec34	ldr	x8, [sp, #0x28]
000000000000ec38	str	x8, [x22, #0x110]
000000000000ec3c	ldr	x0, [x20, #0x8]
000000000000ec40	ldr	x8, [x0]
000000000000ec44	and	x8, x8, #0xfffffffffffffffc
000000000000ec48	ldr	x8, [x8]
000000000000ec4c	ldr	x8, [x8, #0x78]
000000000000ec50	blr	x8
000000000000ec54	ldr	x8, [x19, #0x8]
000000000000ec58	add	x8, x8, #0x8
000000000000ec5c	ldaxr	w9, [x8]
000000000000ec60	cmp	w9, w0
000000000000ec64	b.ne	0xec74
000000000000ec68	stlxr	w9, wzr, [x8]
000000000000ec6c	cbnz	w9, 0xec5c
000000000000ec70	b	0xec78
000000000000ec74	clrex
000000000000ec78	ldr	x8, [sp, #0x8]
000000000000ec7c	str	x8, [x22, #0x110]
000000000000ec80	ldp	x29, x30, [sp, #0x70]
000000000000ec84	ldp	x20, x19, [sp, #0x60]
000000000000ec88	ldp	x22, x21, [sp, #0x50]
000000000000ec8c	add	sp, sp, #0x80
000000000000ec90	ret
_Kotlin_boxShort:
000000000000ec94	sub	sp, sp, #0x70
000000000000ec98	stp	x22, x21, [sp, #0x40]
000000000000ec9c	stp	x20, x19, [sp, #0x50]
000000000000eca0	stp	x29, x30, [sp, #0x60]
000000000000eca4	add	x29, sp, #0x60
000000000000eca8	mov	x19, x1
000000000000ecac	mov	x21, x0
000000000000ecb0	str	xzr, [sp, #0x8]
000000000000ecb4	adrp	x20, 108 ; 0x7a000
000000000000ecb8	add	x20, x20, #0x4e0
000000000000ecbc	ldr	x22, [x20]
000000000000ecc0	mov	x0, x20
000000000000ecc4	blr	x22
000000000000ecc8	ldr	x8, [x0]
000000000000eccc	ldr	x9, [x8, #0x110]
000000000000ecd0	add	x10, sp, #0x8
000000000000ecd4	str	x10, [x8, #0x110]
000000000000ecd8	mov	x8, #0x300000000
000000000000ecdc	stp	x9, x8, [sp, #0x10]
000000000000ece0	adr	x8, #0x85829
000000000000ece4	nop
000000000000ece8	ldarb	w8, [x8]
000000000000ecec	tbz	w8, #0x0, 0xecf4
000000000000ecf0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ecf4	movi.16b	v0, #0x0
000000000000ecf8	stp	q0, q0, [sp, #0x20]
000000000000ecfc	mov	x0, x20
000000000000ed00	blr	x22
000000000000ed04	ldr	x8, [x0]
000000000000ed08	ldr	x9, [x8, #0x110]
000000000000ed0c	add	x10, sp, #0x20
000000000000ed10	str	x10, [x8, #0x110]
000000000000ed14	mov	x8, #0x400000000
000000000000ed18	stp	x9, x8, [sp, #0x28]
000000000000ed1c	cmp	w21, w21, sxtb
000000000000ed20	b.ne	0xed3c
000000000000ed24	adr	x8, #0x5c39c
000000000000ed28	nop
000000000000ed2c	add	x8, x8, w21, sxtw #4
000000000000ed30	add	x8, x8, #0x800
000000000000ed34	str	x8, [x19]
000000000000ed38	b	0xed74
000000000000ed3c	mov	x0, x20
000000000000ed40	blr	x22
000000000000ed44	ldr	x8, [x0]
000000000000ed48	ldr	x8, [x8, #0x118]
000000000000ed4c	add	x0, x8, #0x70
000000000000ed50	mov	w1, #0x18
000000000000ed54	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ed58	adr	x9, #0x53198
000000000000ed5c	nop
000000000000ed60	mov	x8, x0
000000000000ed64	str	x9, [x8, #0x10]!
000000000000ed68	stur	xzr, [x8, #-0x8]
000000000000ed6c	str	x8, [sp, #0x38]
000000000000ed70	strh	w21, [x8, #0x8]
000000000000ed74	str	x8, [x19]
000000000000ed78	mov	x0, x20
000000000000ed7c	blr	x22
000000000000ed80	ldr	x9, [x0]
000000000000ed84	ldr	x10, [sp, #0x28]
000000000000ed88	str	x10, [x9, #0x110]
000000000000ed8c	str	x8, [x19]
000000000000ed90	ldr	x9, [x0]
000000000000ed94	ldr	x10, [sp, #0x10]
000000000000ed98	str	x10, [x9, #0x110]
000000000000ed9c	mov	x0, x8
000000000000eda0	ldp	x29, x30, [sp, #0x60]
000000000000eda4	ldp	x20, x19, [sp, #0x50]
000000000000eda8	ldp	x22, x21, [sp, #0x40]
000000000000edac	add	sp, sp, #0x70
000000000000edb0	ret
_Kotlin_boxLong:
000000000000edb4	sub	sp, sp, #0x70
000000000000edb8	stp	x22, x21, [sp, #0x40]
000000000000edbc	stp	x20, x19, [sp, #0x50]
000000000000edc0	stp	x29, x30, [sp, #0x60]
000000000000edc4	add	x29, sp, #0x60
000000000000edc8	mov	x19, x1
000000000000edcc	mov	x21, x0
000000000000edd0	str	xzr, [sp, #0x8]
000000000000edd4	adrp	x20, 108 ; 0x7a000
000000000000edd8	add	x20, x20, #0x4e0
000000000000eddc	ldr	x22, [x20]
000000000000ede0	mov	x0, x20
000000000000ede4	blr	x22
000000000000ede8	ldr	x8, [x0]
000000000000edec	ldr	x9, [x8, #0x110]
000000000000edf0	add	x10, sp, #0x8
000000000000edf4	str	x10, [x8, #0x110]
000000000000edf8	mov	x8, #0x300000000
000000000000edfc	stp	x9, x8, [sp, #0x10]
000000000000ee00	adr	x8, #0x85709
000000000000ee04	nop
000000000000ee08	ldarb	w8, [x8]
000000000000ee0c	tbz	w8, #0x0, 0xee14
000000000000ee10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ee14	movi.16b	v0, #0x0
000000000000ee18	stp	q0, q0, [sp, #0x20]
000000000000ee1c	mov	x0, x20
000000000000ee20	blr	x22
000000000000ee24	ldr	x8, [x0]
000000000000ee28	ldr	x9, [x8, #0x110]
000000000000ee2c	add	x10, sp, #0x20
000000000000ee30	str	x10, [x8, #0x110]
000000000000ee34	mov	x8, #0x400000000
000000000000ee38	stp	x9, x8, [sp, #0x28]
000000000000ee3c	cmp	x21, w21, sxtb
000000000000ee40	b.ne	0xee5c
000000000000ee44	add	x8, x21, #0x80
000000000000ee48	adr	x9, #0x5e278
000000000000ee4c	nop
000000000000ee50	add	x8, x9, x8, lsl #4
000000000000ee54	str	x8, [x19]
000000000000ee58	b	0xee94
000000000000ee5c	mov	x0, x20
000000000000ee60	blr	x22
000000000000ee64	ldr	x8, [x0]
000000000000ee68	ldr	x8, [x8, #0x118]
000000000000ee6c	add	x0, x8, #0x70
000000000000ee70	mov	w1, #0x18
000000000000ee74	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ee78	adr	x9, #0x52ef8
000000000000ee7c	nop
000000000000ee80	mov	x8, x0
000000000000ee84	str	x9, [x8, #0x10]!
000000000000ee88	stur	xzr, [x8, #-0x8]
000000000000ee8c	str	x8, [sp, #0x38]
000000000000ee90	str	x21, [x8, #0x8]
000000000000ee94	str	x8, [x19]
000000000000ee98	mov	x0, x20
000000000000ee9c	blr	x22
000000000000eea0	ldr	x9, [x0]
000000000000eea4	ldr	x10, [sp, #0x28]
000000000000eea8	str	x10, [x9, #0x110]
000000000000eeac	str	x8, [x19]
000000000000eeb0	ldr	x9, [x0]
000000000000eeb4	ldr	x10, [sp, #0x10]
000000000000eeb8	str	x10, [x9, #0x110]
000000000000eebc	mov	x0, x8
000000000000eec0	ldp	x29, x30, [sp, #0x60]
000000000000eec4	ldp	x20, x19, [sp, #0x50]
000000000000eec8	ldp	x22, x21, [sp, #0x40]
000000000000eecc	add	sp, sp, #0x70
000000000000eed0	ret
_Kotlin_boxUByte:
000000000000eed4	sub	sp, sp, #0x70
000000000000eed8	stp	x22, x21, [sp, #0x40]
000000000000eedc	stp	x20, x19, [sp, #0x50]
000000000000eee0	stp	x29, x30, [sp, #0x60]
000000000000eee4	add	x29, sp, #0x60
000000000000eee8	mov	x19, x1
000000000000eeec	mov	x20, x0
000000000000eef0	str	xzr, [sp, #0x8]
000000000000eef4	adrp	x21, 108 ; 0x7a000
000000000000eef8	add	x21, x21, #0x4e0
000000000000eefc	ldr	x22, [x21]
000000000000ef00	mov	x0, x21
000000000000ef04	blr	x22
000000000000ef08	ldr	x8, [x0]
000000000000ef0c	ldr	x9, [x8, #0x110]
000000000000ef10	add	x10, sp, #0x8
000000000000ef14	str	x10, [x8, #0x110]
000000000000ef18	mov	x8, #0x300000000
000000000000ef1c	stp	x9, x8, [sp, #0x10]
000000000000ef20	adr	x8, #0x855e9
000000000000ef24	nop
000000000000ef28	ldarb	w8, [x8]
000000000000ef2c	tbz	w8, #0x0, 0xef34
000000000000ef30	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ef34	movi.16b	v0, #0x0
000000000000ef38	stp	q0, q0, [sp, #0x20]
000000000000ef3c	mov	x0, x21
000000000000ef40	blr	x22
000000000000ef44	mov	x21, x0
000000000000ef48	ldr	x8, [x0]
000000000000ef4c	add	x9, sp, #0x20
000000000000ef50	ldp	x10, x11, [x8, #0x110]
000000000000ef54	str	x9, [x8, #0x110]
000000000000ef58	mov	x8, #0x400000000
000000000000ef5c	stp	x10, x8, [sp, #0x28]
000000000000ef60	add	x0, x11, #0x70
000000000000ef64	mov	w1, #0x18
000000000000ef68	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000ef6c	adr	x8, #0x567e4
000000000000ef70	nop
000000000000ef74	str	x8, [x0, #0x10]!
000000000000ef78	stur	xzr, [x0, #-0x8]
000000000000ef7c	str	x0, [sp, #0x38]
000000000000ef80	strb	w20, [x0, #0x8]
000000000000ef84	str	x0, [x19]
000000000000ef88	ldr	x8, [x21]
000000000000ef8c	ldr	x9, [sp, #0x28]
000000000000ef90	str	x9, [x8, #0x110]
000000000000ef94	str	x0, [x19]
000000000000ef98	ldr	x8, [x21]
000000000000ef9c	ldr	x9, [sp, #0x10]
000000000000efa0	str	x9, [x8, #0x110]
000000000000efa4	ldp	x29, x30, [sp, #0x60]
000000000000efa8	ldp	x20, x19, [sp, #0x50]
000000000000efac	ldp	x22, x21, [sp, #0x40]
000000000000efb0	add	sp, sp, #0x70
000000000000efb4	ret
_Kotlin_boxUShort:
000000000000efb8	sub	sp, sp, #0x70
000000000000efbc	stp	x22, x21, [sp, #0x40]
000000000000efc0	stp	x20, x19, [sp, #0x50]
000000000000efc4	stp	x29, x30, [sp, #0x60]
000000000000efc8	add	x29, sp, #0x60
000000000000efcc	mov	x19, x1
000000000000efd0	mov	x20, x0
000000000000efd4	str	xzr, [sp, #0x8]
000000000000efd8	adrp	x21, 108 ; 0x7a000
000000000000efdc	add	x21, x21, #0x4e0
000000000000efe0	ldr	x22, [x21]
000000000000efe4	mov	x0, x21
000000000000efe8	blr	x22
000000000000efec	ldr	x8, [x0]
000000000000eff0	ldr	x9, [x8, #0x110]
000000000000eff4	add	x10, sp, #0x8
000000000000eff8	str	x10, [x8, #0x110]
000000000000effc	mov	x8, #0x300000000
000000000000f000	stp	x9, x8, [sp, #0x10]
000000000000f004	adr	x8, #0x85505
000000000000f008	nop
000000000000f00c	ldarb	w8, [x8]
000000000000f010	tbz	w8, #0x0, 0xf018
000000000000f014	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f018	movi.16b	v0, #0x0
000000000000f01c	stp	q0, q0, [sp, #0x20]
000000000000f020	mov	x0, x21
000000000000f024	blr	x22
000000000000f028	mov	x21, x0
000000000000f02c	ldr	x8, [x0]
000000000000f030	add	x9, sp, #0x20
000000000000f034	ldp	x10, x11, [x8, #0x110]
000000000000f038	str	x9, [x8, #0x110]
000000000000f03c	mov	x8, #0x400000000
000000000000f040	stp	x10, x8, [sp, #0x28]
000000000000f044	add	x0, x11, #0x70
000000000000f048	mov	w1, #0x18
000000000000f04c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000f050	adr	x8, #0x568b0
000000000000f054	nop
000000000000f058	str	x8, [x0, #0x10]!
000000000000f05c	stur	xzr, [x0, #-0x8]
000000000000f060	str	x0, [sp, #0x38]
000000000000f064	strh	w20, [x0, #0x8]
000000000000f068	str	x0, [x19]
000000000000f06c	ldr	x8, [x21]
000000000000f070	ldr	x9, [sp, #0x28]
000000000000f074	str	x9, [x8, #0x110]
000000000000f078	str	x0, [x19]
000000000000f07c	ldr	x8, [x21]
000000000000f080	ldr	x9, [sp, #0x10]
000000000000f084	str	x9, [x8, #0x110]
000000000000f088	ldp	x29, x30, [sp, #0x60]
000000000000f08c	ldp	x20, x19, [sp, #0x50]
000000000000f090	ldp	x22, x21, [sp, #0x40]
000000000000f094	add	sp, sp, #0x70
000000000000f098	ret
_Kotlin_boxUInt:
000000000000f09c	sub	sp, sp, #0x70
000000000000f0a0	stp	x22, x21, [sp, #0x40]
000000000000f0a4	stp	x20, x19, [sp, #0x50]
000000000000f0a8	stp	x29, x30, [sp, #0x60]
000000000000f0ac	add	x29, sp, #0x60
000000000000f0b0	mov	x19, x1
000000000000f0b4	mov	x20, x0
000000000000f0b8	str	xzr, [sp, #0x8]
000000000000f0bc	adrp	x21, 107 ; 0x7a000
000000000000f0c0	add	x21, x21, #0x4e0
000000000000f0c4	ldr	x22, [x21]
000000000000f0c8	mov	x0, x21
000000000000f0cc	blr	x22
000000000000f0d0	ldr	x8, [x0]
000000000000f0d4	ldr	x9, [x8, #0x110]
000000000000f0d8	add	x10, sp, #0x8
000000000000f0dc	str	x10, [x8, #0x110]
000000000000f0e0	mov	x8, #0x300000000
000000000000f0e4	stp	x9, x8, [sp, #0x10]
000000000000f0e8	adr	x8, #0x85421
000000000000f0ec	nop
000000000000f0f0	ldarb	w8, [x8]
000000000000f0f4	tbz	w8, #0x0, 0xf0fc
000000000000f0f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f0fc	movi.16b	v0, #0x0
000000000000f100	stp	q0, q0, [sp, #0x20]
000000000000f104	mov	x0, x21
000000000000f108	blr	x22
000000000000f10c	mov	x21, x0
000000000000f110	ldr	x8, [x0]
000000000000f114	add	x9, sp, #0x20
000000000000f118	ldp	x10, x11, [x8, #0x110]
000000000000f11c	str	x9, [x8, #0x110]
000000000000f120	mov	x8, #0x400000000
000000000000f124	stp	x10, x8, [sp, #0x28]
000000000000f128	add	x0, x11, #0x70
000000000000f12c	mov	w1, #0x18
000000000000f130	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000f134	adr	x8, #0x566ac
000000000000f138	nop
000000000000f13c	str	x8, [x0, #0x10]!
000000000000f140	stur	xzr, [x0, #-0x8]
000000000000f144	str	x0, [sp, #0x38]
000000000000f148	str	w20, [x0, #0x8]
000000000000f14c	str	x0, [x19]
000000000000f150	ldr	x8, [x21]
000000000000f154	ldr	x9, [sp, #0x28]
000000000000f158	str	x9, [x8, #0x110]
000000000000f15c	str	x0, [x19]
000000000000f160	ldr	x8, [x21]
000000000000f164	ldr	x9, [sp, #0x10]
000000000000f168	str	x9, [x8, #0x110]
000000000000f16c	ldp	x29, x30, [sp, #0x60]
000000000000f170	ldp	x20, x19, [sp, #0x50]
000000000000f174	ldp	x22, x21, [sp, #0x40]
000000000000f178	add	sp, sp, #0x70
000000000000f17c	ret
_Kotlin_boxULong:
000000000000f180	sub	sp, sp, #0x70
000000000000f184	stp	x22, x21, [sp, #0x40]
000000000000f188	stp	x20, x19, [sp, #0x50]
000000000000f18c	stp	x29, x30, [sp, #0x60]
000000000000f190	add	x29, sp, #0x60
000000000000f194	mov	x19, x1
000000000000f198	mov	x20, x0
000000000000f19c	str	xzr, [sp, #0x8]
000000000000f1a0	adrp	x21, 107 ; 0x7a000
000000000000f1a4	add	x21, x21, #0x4e0
000000000000f1a8	ldr	x22, [x21]
000000000000f1ac	mov	x0, x21
000000000000f1b0	blr	x22
000000000000f1b4	ldr	x8, [x0]
000000000000f1b8	ldr	x9, [x8, #0x110]
000000000000f1bc	add	x10, sp, #0x8
000000000000f1c0	str	x10, [x8, #0x110]
000000000000f1c4	mov	x8, #0x300000000
000000000000f1c8	stp	x9, x8, [sp, #0x10]
000000000000f1cc	adr	x8, #0x8533d
000000000000f1d0	nop
000000000000f1d4	ldarb	w8, [x8]
000000000000f1d8	tbz	w8, #0x0, 0xf1e0
000000000000f1dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f1e0	movi.16b	v0, #0x0
000000000000f1e4	stp	q0, q0, [sp, #0x20]
000000000000f1e8	mov	x0, x21
000000000000f1ec	blr	x22
000000000000f1f0	mov	x21, x0
000000000000f1f4	ldr	x8, [x0]
000000000000f1f8	add	x9, sp, #0x20
000000000000f1fc	ldp	x10, x11, [x8, #0x110]
000000000000f200	str	x9, [x8, #0x110]
000000000000f204	mov	x8, #0x400000000
000000000000f208	stp	x10, x8, [sp, #0x28]
000000000000f20c	add	x0, x11, #0x70
000000000000f210	mov	w1, #0x18
000000000000f214	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000f218	adr	x8, #0x56658
000000000000f21c	nop
000000000000f220	str	x8, [x0, #0x10]!
000000000000f224	stur	xzr, [x0, #-0x8]
000000000000f228	str	x0, [sp, #0x38]
000000000000f22c	str	x20, [x0, #0x8]
000000000000f230	str	x0, [x19]
000000000000f234	ldr	x8, [x21]
000000000000f238	ldr	x9, [sp, #0x28]
000000000000f23c	str	x9, [x8, #0x110]
000000000000f240	str	x0, [x19]
000000000000f244	ldr	x8, [x21]
000000000000f248	ldr	x9, [sp, #0x10]
000000000000f24c	str	x9, [x8, #0x110]
000000000000f250	ldp	x29, x30, [sp, #0x60]
000000000000f254	ldp	x20, x19, [sp, #0x50]
000000000000f258	ldp	x22, x21, [sp, #0x40]
000000000000f25c	add	sp, sp, #0x70
000000000000f260	ret
_Kotlin_boxFloat:
000000000000f264	sub	sp, sp, #0x80
000000000000f268	stp	d9, d8, [sp, #0x40]
000000000000f26c	stp	x22, x21, [sp, #0x50]
000000000000f270	stp	x20, x19, [sp, #0x60]
000000000000f274	stp	x29, x30, [sp, #0x70]
000000000000f278	add	x29, sp, #0x70
000000000000f27c	mov	x19, x0
000000000000f280	fmov	s8, s0
000000000000f284	str	xzr, [sp, #0x8]
000000000000f288	adrp	x20, 107 ; 0x7a000
000000000000f28c	add	x20, x20, #0x4e0
000000000000f290	ldr	x21, [x20]
000000000000f294	mov	x0, x20
000000000000f298	blr	x21
000000000000f29c	ldr	x8, [x0]
000000000000f2a0	ldr	x9, [x8, #0x110]
000000000000f2a4	add	x10, sp, #0x8
000000000000f2a8	str	x10, [x8, #0x110]
000000000000f2ac	mov	x8, #0x300000000
000000000000f2b0	stp	x9, x8, [sp, #0x10]
000000000000f2b4	adr	x8, #0x85255
000000000000f2b8	nop
000000000000f2bc	ldarb	w8, [x8]
000000000000f2c0	tbz	w8, #0x0, 0xf2c8
000000000000f2c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f2c8	movi.16b	v0, #0x0
000000000000f2cc	stp	q0, q0, [sp, #0x20]
000000000000f2d0	mov	x0, x20
000000000000f2d4	blr	x21
000000000000f2d8	mov	x20, x0
000000000000f2dc	ldr	x8, [x0]
000000000000f2e0	add	x9, sp, #0x20
000000000000f2e4	ldp	x10, x11, [x8, #0x110]
000000000000f2e8	str	x9, [x8, #0x110]
000000000000f2ec	mov	x8, #0x400000000
000000000000f2f0	stp	x10, x8, [sp, #0x28]
000000000000f2f4	add	x0, x11, #0x70
000000000000f2f8	mov	w1, #0x18
000000000000f2fc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000f300	adr	x8, #0x52cb0
000000000000f304	nop
000000000000f308	str	x8, [x0, #0x10]!
000000000000f30c	stur	xzr, [x0, #-0x8]
000000000000f310	str	x0, [sp, #0x38]
000000000000f314	str	s8, [x0, #0x8]
000000000000f318	str	x0, [x19]
000000000000f31c	ldr	x8, [x20]
000000000000f320	ldr	x9, [sp, #0x28]
000000000000f324	str	x9, [x8, #0x110]
000000000000f328	str	x0, [x19]
000000000000f32c	ldr	x8, [x20]
000000000000f330	ldr	x9, [sp, #0x10]
000000000000f334	str	x9, [x8, #0x110]
000000000000f338	ldp	x29, x30, [sp, #0x70]
000000000000f33c	ldp	x20, x19, [sp, #0x60]
000000000000f340	ldp	x22, x21, [sp, #0x50]
000000000000f344	ldp	d9, d8, [sp, #0x40]
000000000000f348	add	sp, sp, #0x80
000000000000f34c	ret
_Kotlin_boxDouble:
000000000000f350	sub	sp, sp, #0x80
000000000000f354	stp	d9, d8, [sp, #0x40]
000000000000f358	stp	x22, x21, [sp, #0x50]
000000000000f35c	stp	x20, x19, [sp, #0x60]
000000000000f360	stp	x29, x30, [sp, #0x70]
000000000000f364	add	x29, sp, #0x70
000000000000f368	mov	x19, x0
000000000000f36c	fmov	d8, d0
000000000000f370	str	xzr, [sp, #0x8]
000000000000f374	adrp	x20, 107 ; 0x7a000
000000000000f378	add	x20, x20, #0x4e0
000000000000f37c	ldr	x21, [x20]
000000000000f380	mov	x0, x20
000000000000f384	blr	x21
000000000000f388	ldr	x8, [x0]
000000000000f38c	ldr	x9, [x8, #0x110]
000000000000f390	add	x10, sp, #0x8
000000000000f394	str	x10, [x8, #0x110]
000000000000f398	mov	x8, #0x300000000
000000000000f39c	stp	x9, x8, [sp, #0x10]
000000000000f3a0	adr	x8, #0x85169
000000000000f3a4	nop
000000000000f3a8	ldarb	w8, [x8]
000000000000f3ac	tbz	w8, #0x0, 0xf3b4
000000000000f3b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f3b4	movi.16b	v0, #0x0
000000000000f3b8	stp	q0, q0, [sp, #0x20]
000000000000f3bc	mov	x0, x20
000000000000f3c0	blr	x21
000000000000f3c4	mov	x20, x0
000000000000f3c8	ldr	x8, [x0]
000000000000f3cc	add	x9, sp, #0x20
000000000000f3d0	ldp	x10, x11, [x8, #0x110]
000000000000f3d4	str	x9, [x8, #0x110]
000000000000f3d8	mov	x8, #0x400000000
000000000000f3dc	stp	x10, x8, [sp, #0x28]
000000000000f3e0	add	x0, x11, #0x70
000000000000f3e4	mov	w1, #0x18
000000000000f3e8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000f3ec	adr	x8, #0x528c4
000000000000f3f0	nop
000000000000f3f4	str	x8, [x0, #0x10]!
000000000000f3f8	stur	xzr, [x0, #-0x8]
000000000000f3fc	str	x0, [sp, #0x38]
000000000000f400	str	d8, [x0, #0x8]
000000000000f404	str	x0, [x19]
000000000000f408	ldr	x8, [x20]
000000000000f40c	ldr	x9, [sp, #0x28]
000000000000f410	str	x9, [x8, #0x110]
000000000000f414	str	x0, [x19]
000000000000f418	ldr	x8, [x20]
000000000000f41c	ldr	x9, [sp, #0x10]
000000000000f420	str	x9, [x8, #0x110]
000000000000f424	ldp	x29, x30, [sp, #0x70]
000000000000f428	ldp	x20, x19, [sp, #0x60]
000000000000f42c	ldp	x22, x21, [sp, #0x50]
000000000000f430	ldp	d9, d8, [sp, #0x40]
000000000000f434	add	sp, sp, #0x80
000000000000f438	ret
_kfun:kotlin.native.internal.KClassImpl#<get-simpleName>(){}kotlin.String?:
000000000000f43c	sub	sp, sp, #0x60
000000000000f440	stp	x22, x21, [sp, #0x30]
000000000000f444	stp	x20, x19, [sp, #0x40]
000000000000f448	stp	x29, x30, [sp, #0x50]
000000000000f44c	add	x29, sp, #0x50
000000000000f450	mov	x19, x1
000000000000f454	mov	x20, x0
000000000000f458	movi.16b	v0, #0x0
000000000000f45c	stp	q0, q0, [sp]
000000000000f460	str	xzr, [sp, #0x20]
000000000000f464	mov	x22, sp
000000000000f468	adrp	x0, 107 ; 0x7a000
000000000000f46c	add	x0, x0, #0x4e0
000000000000f470	ldr	x8, [x0]
000000000000f474	blr	x8
000000000000f478	ldr	x21, [x0]
000000000000f47c	ldr	x8, [x21, #0x110]
000000000000f480	str	x22, [x21, #0x110]
000000000000f484	mov	x9, #0x500000000
000000000000f488	stp	x8, x9, [sp, #0x8]
000000000000f48c	adr	x8, #0x8507d
000000000000f490	nop
000000000000f494	ldarb	w8, [x8]
000000000000f498	tbz	w8, #0x0, 0xf4a0
000000000000f49c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f4a0	ldr	x8, [x20, #0x8]
000000000000f4a4	ldrb	w9, [x8, #0x59]
000000000000f4a8	tbnz	w9, #0x1, 0xf4b4
000000000000f4ac	mov	x0, #0x0
000000000000f4b0	b	0xf4d8
000000000000f4b4	ldr	x0, [x8, #0x50]
000000000000f4b8	str	x0, [sp, #0x18]
000000000000f4bc	cbz	x0, 0xf4d8
000000000000f4c0	add	x2, x22, #0x20
000000000000f4c4	mov	w1, #0x2e
000000000000f4c8	bl	"_kfun:kotlin.text#substringAfterLast$default__at__kotlin.String(kotlin.Char;kotlin.String?;kotlin.Int){}kotlin.String"
000000000000f4cc	mov	w1, #0x24
000000000000f4d0	mov	x2, x19
000000000000f4d4	bl	"_kfun:kotlin.text#substringAfterLast$default__at__kotlin.String(kotlin.Char;kotlin.String?;kotlin.Int){}kotlin.String"
000000000000f4d8	str	x0, [x19]
000000000000f4dc	ldr	x8, [sp, #0x8]
000000000000f4e0	str	x8, [x21, #0x110]
000000000000f4e4	ldp	x29, x30, [sp, #0x50]
000000000000f4e8	ldp	x20, x19, [sp, #0x40]
000000000000f4ec	ldp	x22, x21, [sp, #0x30]
000000000000f4f0	add	sp, sp, #0x60
000000000000f4f4	ret
_kfun:kotlin.native.internal.KClassImpl#<get-qualifiedName>(){}kotlin.String?:
000000000000f4f8	sub	sp, sp, #0xc0
000000000000f4fc	stp	x26, x25, [sp, #0x70]
000000000000f500	stp	x24, x23, [sp, #0x80]
000000000000f504	stp	x22, x21, [sp, #0x90]
000000000000f508	stp	x20, x19, [sp, #0xa0]
000000000000f50c	stp	x29, x30, [sp, #0xb0]
000000000000f510	add	x29, sp, #0xb0
000000000000f514	mov	x19, x1
000000000000f518	mov	x20, x0
000000000000f51c	movi.16b	v0, #0x0
000000000000f520	stp	q0, q0, [sp, #0x20]
000000000000f524	str	xzr, [sp, #0x60]
000000000000f528	stp	q0, q0, [sp, #0x40]
000000000000f52c	add	x24, sp, #0x20
000000000000f530	stp	xzr, xzr, [sp, #0x10]
000000000000f534	adr	x8, #0x5588c
000000000000f538	nop
000000000000f53c	orr	x8, x8, #0x3
000000000000f540	str	x8, [sp, #0x8]
000000000000f544	adrp	x0, 107 ; 0x7a000
000000000000f548	add	x0, x0, #0x4e0
000000000000f54c	ldr	x8, [x0]
000000000000f550	blr	x8
000000000000f554	ldr	x25, [x0]
000000000000f558	ldr	x8, [x25, #0x110]
000000000000f55c	str	x24, [x25, #0x110]
000000000000f560	mov	x9, #0x900000000
000000000000f564	stp	x8, x9, [sp, #0x28]
000000000000f568	adr	x8, #0x84fa1
000000000000f56c	nop
000000000000f570	ldarb	w8, [x8]
000000000000f574	tbz	w8, #0x0, 0xf57c
000000000000f578	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f57c	ldr	x8, [x20, #0x8]
000000000000f580	ldr	w9, [x8, #0x58]
000000000000f584	tbnz	w9, #0x8, 0xf5b8
000000000000f588	mov	x20, #0x0
000000000000f58c	str	x20, [x19]
000000000000f590	ldr	x8, [sp, #0x28]
000000000000f594	str	x8, [x25, #0x110]
000000000000f598	mov	x0, x20
000000000000f59c	ldp	x29, x30, [sp, #0xb0]
000000000000f5a0	ldp	x20, x19, [sp, #0xa0]
000000000000f5a4	ldp	x22, x21, [sp, #0x90]
000000000000f5a8	ldp	x24, x23, [sp, #0x80]
000000000000f5ac	ldp	x26, x25, [sp, #0x70]
000000000000f5b0	add	sp, sp, #0xc0
000000000000f5b4	ret
000000000000f5b8	mov	x20, #0x0
000000000000f5bc	ldr	x21, [x8, #0x48]
000000000000f5c0	str	x21, [sp, #0x38]
000000000000f5c4	cbz	x21, 0xf58c
000000000000f5c8	tbz	w9, #0x9, 0xf58c
000000000000f5cc	ldr	x20, [x8, #0x50]
000000000000f5d0	str	x20, [sp, #0x40]
000000000000f5d4	cbz	x20, 0xf58c
000000000000f5d8	ldr	w8, [x21, #0x8]
000000000000f5dc	cbz	w8, 0xf58c
000000000000f5e0	add	x22, x24, #0x30
000000000000f5e4	add	x23, x24, #0x40
000000000000f5e8	add	x24, x24, #0x38
000000000000f5ec	add	x8, sp, #0x8
000000000000f5f0	str	x8, [sp, #0x48]
000000000000f5f4	add	x0, sp, #0x8
000000000000f5f8	mov	w1, #0xa
000000000000f5fc	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000f600	add	x0, sp, #0x8
000000000000f604	mov	x1, x21
000000000000f608	mov	x2, x22
000000000000f60c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000f610	adr	x1, #0x5fda0
000000000000f614	nop
000000000000f618	add	x0, sp, #0x8
000000000000f61c	mov	x2, x24
000000000000f620	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000f624	add	x0, sp, #0x8
000000000000f628	mov	x1, x20
000000000000f62c	mov	x2, x23
000000000000f630	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000f634	add	x0, sp, #0x8
000000000000f638	mov	x1, x19
000000000000f63c	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000f640	mov	x20, x0
000000000000f644	b	0xf58c
_kfun:kotlin.native.internal.KClassImpl#isInstance(kotlin.Any?){}kotlin.Boolean:
000000000000f648	stp	x20, x19, [sp, #-0x20]!
000000000000f64c	stp	x29, x30, [sp, #0x10]
000000000000f650	add	x29, sp, #0x10
000000000000f654	mov	x19, x1
000000000000f658	mov	x20, x0
000000000000f65c	adr	x8, #0x84ead
000000000000f660	nop
000000000000f664	ldarb	w8, [x8]
000000000000f668	tbz	w8, #0x0, 0xf670
000000000000f66c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f670	cbz	x19, 0xf6e4
000000000000f674	ldr	x8, [x20, #0x8]
000000000000f678	ldr	x9, [x19]
000000000000f67c	and	x9, x9, #0xfffffffffffffffc
000000000000f680	ldr	x9, [x9]
000000000000f684	ldrb	w10, [x8, #0x58]
000000000000f688	tbnz	w10, #0x2, 0xf6bc
000000000000f68c	cmp	x9, #0x0
000000000000f690	cset	w0, ne
000000000000f694	ccmp	x8, x9, #0x4, ne
000000000000f698	b.eq	0xf6b0
000000000000f69c	ldr	x9, [x9, #0x18]
000000000000f6a0	cmp	x9, #0x0
000000000000f6a4	cset	w0, ne
000000000000f6a8	ccmp	x9, x8, #0x4, ne
000000000000f6ac	b.ne	0xf69c
000000000000f6b0	ldp	x29, x30, [sp, #0x10]
000000000000f6b4	ldp	x20, x19, [sp], #0x20
000000000000f6b8	ret
000000000000f6bc	ldrsw	x10, [x9, #0x38]
000000000000f6c0	cmp	w10, #0x1
000000000000f6c4	b.lt	0xf6e4
000000000000f6c8	ldr	x9, [x9, #0x30]
000000000000f6cc	ldr	x11, [x9]
000000000000f6d0	cmp	x11, x8
000000000000f6d4	b.eq	0xf6f4
000000000000f6d8	add	x9, x9, #0x8
000000000000f6dc	subs	x10, x10, #0x1
000000000000f6e0	b.ne	0xf6cc
000000000000f6e4	mov	w0, #0x0
000000000000f6e8	ldp	x29, x30, [sp, #0x10]
000000000000f6ec	ldp	x20, x19, [sp], #0x20
000000000000f6f0	ret
000000000000f6f4	mov	w0, #0x1
000000000000f6f8	ldp	x29, x30, [sp, #0x10]
000000000000f6fc	ldp	x20, x19, [sp], #0x20
000000000000f700	ret
_kfun:kotlin.native.internal.KClassImpl#equals(kotlin.Any?){}kotlin.Boolean:
000000000000f704	stp	x20, x19, [sp, #-0x20]!
000000000000f708	stp	x29, x30, [sp, #0x10]
000000000000f70c	add	x29, sp, #0x10
000000000000f710	mov	x19, x1
000000000000f714	mov	x20, x0
000000000000f718	adr	x8, #0x84df1
000000000000f71c	nop
000000000000f720	ldarb	w8, [x8]
000000000000f724	tbz	w8, #0x0, 0xf72c
000000000000f728	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f72c	cbz	x19, 0xf764
000000000000f730	ldr	x8, [x19]
000000000000f734	and	x8, x8, #0xfffffffffffffffc
000000000000f738	ldr	x8, [x8]
000000000000f73c	ldr	w8, [x8, #0x5c]
000000000000f740	cmp	w8, #0xe2
000000000000f744	b.ne	0xf764
000000000000f748	ldr	x8, [x20, #0x8]
000000000000f74c	ldr	x9, [x19, #0x8]
000000000000f750	cmp	x8, x9
000000000000f754	cset	w0, eq
000000000000f758	ldp	x29, x30, [sp, #0x10]
000000000000f75c	ldp	x20, x19, [sp], #0x20
000000000000f760	ret
000000000000f764	mov	w0, #0x0
000000000000f768	ldp	x29, x30, [sp, #0x10]
000000000000f76c	ldp	x20, x19, [sp], #0x20
000000000000f770	ret
_kfun:kotlin.native.internal.KClassImpl#hashCode(){}kotlin.Int:
000000000000f774	stp	x20, x19, [sp, #-0x20]!
000000000000f778	stp	x29, x30, [sp, #0x10]
000000000000f77c	add	x29, sp, #0x10
000000000000f780	mov	x19, x0
000000000000f784	adr	x8, #0x84d85
000000000000f788	nop
000000000000f78c	ldarb	w8, [x8]
000000000000f790	tbz	w8, #0x0, 0xf798
000000000000f794	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f798	ldp	w8, w9, [x19, #0x8]
000000000000f79c	eor	w0, w9, w8
000000000000f7a0	ldp	x29, x30, [sp, #0x10]
000000000000f7a4	ldp	x20, x19, [sp], #0x20
000000000000f7a8	ret
_kfun:kotlin.native.internal.KClassImpl#toString(){}kotlin.String:
000000000000f7ac	sub	sp, sp, #0x50
000000000000f7b0	stp	x22, x21, [sp, #0x20]
000000000000f7b4	stp	x20, x19, [sp, #0x30]
000000000000f7b8	stp	x29, x30, [sp, #0x40]
000000000000f7bc	add	x29, sp, #0x40
000000000000f7c0	mov	x19, x1
000000000000f7c4	mov	x20, x0
000000000000f7c8	movi.16b	v0, #0x0
000000000000f7cc	stp	q0, q0, [sp]
000000000000f7d0	mov	x8, sp
000000000000f7d4	add	x21, x8, #0x18
000000000000f7d8	adrp	x0, 107 ; 0x7a000
000000000000f7dc	add	x0, x0, #0x4e0
000000000000f7e0	ldr	x9, [x0]
000000000000f7e4	blr	x9
000000000000f7e8	ldr	x22, [x0]
000000000000f7ec	ldr	x9, [x22, #0x110]
000000000000f7f0	str	x8, [x22, #0x110]
000000000000f7f4	mov	x8, #0x400000000
000000000000f7f8	stp	x9, x8, [sp, #0x8]
000000000000f7fc	adr	x8, #0x84d0d
000000000000f800	nop
000000000000f804	ldarb	w8, [x8]
000000000000f808	tbz	w8, #0x0, 0xf810
000000000000f80c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f810	mov	x0, x20
000000000000f814	mov	x1, x21
000000000000f818	bl	"_kfun:kotlin.native.internal.KClassImpl#<get-fullName>(){}kotlin.String?"
000000000000f81c	adr	x8, #0x5fbd4
000000000000f820	nop
000000000000f824	cmp	x0, #0x0
000000000000f828	csel	x1, x8, x0, eq
000000000000f82c	adr	x0, #0x5fba4
000000000000f830	nop
000000000000f834	mov	x2, x19
000000000000f838	bl	_Kotlin_String_plusImpl
000000000000f83c	str	x0, [x19]
000000000000f840	ldr	x8, [sp, #0x8]
000000000000f844	str	x8, [x22, #0x110]
000000000000f848	ldp	x29, x30, [sp, #0x40]
000000000000f84c	ldp	x20, x19, [sp, #0x30]
000000000000f850	ldp	x22, x21, [sp, #0x20]
000000000000f854	add	sp, sp, #0x50
000000000000f858	ret
_kfun:kotlin.native.internal.KClassImpl#<get-fullName>(){}kotlin.String?:
000000000000f85c	sub	sp, sp, #0xc0
000000000000f860	stp	x26, x25, [sp, #0x70]
000000000000f864	stp	x24, x23, [sp, #0x80]
000000000000f868	stp	x22, x21, [sp, #0x90]
000000000000f86c	stp	x20, x19, [sp, #0xa0]
000000000000f870	stp	x29, x30, [sp, #0xb0]
000000000000f874	add	x29, sp, #0xb0
000000000000f878	mov	x19, x1
000000000000f87c	mov	x20, x0
000000000000f880	movi.16b	v0, #0x0
000000000000f884	stp	q0, q0, [sp, #0x20]
000000000000f888	stp	q0, q0, [sp, #0x50]
000000000000f88c	str	q0, [sp, #0x40]
000000000000f890	add	x24, sp, #0x20
000000000000f894	stp	xzr, xzr, [sp, #0x10]
000000000000f898	adr	x8, #0x55528
000000000000f89c	nop
000000000000f8a0	orr	x8, x8, #0x3
000000000000f8a4	str	x8, [sp, #0x8]
000000000000f8a8	adrp	x0, 107 ; 0x7a000
000000000000f8ac	add	x0, x0, #0x4e0
000000000000f8b0	ldr	x8, [x0]
000000000000f8b4	blr	x8
000000000000f8b8	ldr	x25, [x0]
000000000000f8bc	ldr	x8, [x25, #0x110]
000000000000f8c0	str	x24, [x25, #0x110]
000000000000f8c4	mov	x9, #0xa00000000
000000000000f8c8	stp	x8, x9, [sp, #0x28]
000000000000f8cc	adr	x8, #0x84c3d
000000000000f8d0	nop
000000000000f8d4	ldarb	w8, [x8]
000000000000f8d8	tbz	w8, #0x0, 0xf8e0
000000000000f8dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000f8e0	ldr	x8, [x20, #0x8]
000000000000f8e4	ldr	x20, [x8, #0x50]
000000000000f8e8	str	x20, [sp, #0x38]
000000000000f8ec	cbz	x20, 0xf980
000000000000f8f0	ldr	x21, [x8, #0x48]
000000000000f8f4	str	x21, [sp, #0x40]
000000000000f8f8	cbz	x21, 0xf980
000000000000f8fc	add	x1, x24, #0x28
000000000000f900	ldr	w8, [x21, #0x8]
000000000000f904	cmp	w8, #0x0
000000000000f908	cset	w0, eq
000000000000f90c	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
000000000000f910	cbz	x0, 0xf980
000000000000f914	ldrb	w8, [x0, #0x8]
000000000000f918	tbnz	w8, #0x0, 0xf980
000000000000f91c	add	x22, x24, #0x40
000000000000f920	add	x23, x24, #0x38
000000000000f924	add	x24, x24, #0x48
000000000000f928	add	x8, sp, #0x8
000000000000f92c	str	x8, [sp, #0x50]
000000000000f930	add	x0, sp, #0x8
000000000000f934	mov	w1, #0xa
000000000000f938	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000000f93c	add	x0, sp, #0x8
000000000000f940	mov	x1, x21
000000000000f944	mov	x2, x23
000000000000f948	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000f94c	adr	x1, #0x5fa64
000000000000f950	nop
000000000000f954	add	x0, sp, #0x8
000000000000f958	mov	x2, x22
000000000000f95c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000f960	add	x0, sp, #0x8
000000000000f964	mov	x1, x20
000000000000f968	mov	x2, x24
000000000000f96c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000000f970	add	x0, sp, #0x8
000000000000f974	mov	x1, x19
000000000000f978	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000000f97c	mov	x20, x0
000000000000f980	str	x20, [x19]
000000000000f984	ldr	x8, [sp, #0x28]
000000000000f988	str	x8, [x25, #0x110]
000000000000f98c	mov	x0, x20
000000000000f990	ldp	x29, x30, [sp, #0xb0]
000000000000f994	ldp	x20, x19, [sp, #0xa0]
000000000000f998	ldp	x22, x21, [sp, #0x90]
000000000000f99c	ldp	x24, x23, [sp, #0x80]
000000000000f9a0	ldp	x26, x25, [sp, #0x70]
000000000000f9a4	add	sp, sp, #0xc0
000000000000f9a8	ret
_kfun:kotlin.native.internal.NumberConverter.freeFormatExponential#internal:
000000000000f9ac	sub	sp, sp, #0xe0
000000000000f9b0	stp	x26, x25, [sp, #0x90]
000000000000f9b4	stp	x24, x23, [sp, #0xa0]
000000000000f9b8	stp	x22, x21, [sp, #0xb0]
000000000000f9bc	stp	x20, x19, [sp, #0xc0]
000000000000f9c0	stp	x29, x30, [sp, #0xd0]
000000000000f9c4	add	x29, sp, #0xd0
000000000000f9c8	mov	x19, x1
000000000000f9cc	mov	x20, x0
000000000000f9d0	movi.16b	v0, #0x0
000000000000f9d4	stp	q0, q0, [sp, #0x50]
000000000000f9d8	str	q0, [sp, #0x70]
000000000000f9dc	adr	x8, #0x514e4
000000000000f9e0	nop
000000000000f9e4	orr	x8, x8, #0x3
000000000000f9e8	str	x8, [sp, #0x8]
000000000000f9ec	mov	w8, #0x19
000000000000f9f0	str	w8, [sp, #0x10]
000000000000f9f4	stur	q0, [sp, #0x18]
000000000000f9f8	stur	q0, [sp, #0x28]
000000000000f9fc	stur	q0, [sp, #0x38]
000000000000fa00	strh	wzr, [sp, #0x48]
000000000000fa04	adrp	x0, 107 ; 0x7a000
000000000000fa08	add	x0, x0, #0x4e0
000000000000fa0c	ldr	x8, [x0]
000000000000fa10	blr	x8
000000000000fa14	ldr	x23, [x0]
000000000000fa18	ldr	x8, [x23, #0x110]
000000000000fa1c	add	x9, sp, #0x50
000000000000fa20	str	x9, [x23, #0x110]
000000000000fa24	mov	x9, #0x600000000
000000000000fa28	stp	x8, x9, [sp, #0x58]
000000000000fa2c	adr	x22, #0x84add
000000000000fa30	nop
000000000000fa34	ldarb	w8, [x22]
000000000000fa38	tbz	w8, #0x0, 0xfa40
000000000000fa3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000fa40	add	x8, sp, #0x8
000000000000fa44	str	x8, [sp, #0x68]
000000000000fa48	ldr	x8, [x20, #0x8]
000000000000fa4c	ldrsw	x9, [x20, #0x14]
000000000000fa50	add	w10, w9, #0x1
000000000000fa54	str	w10, [x20, #0x14]
000000000000fa58	ldr	w10, [x8, #0x8]
000000000000fa5c	cmp	w10, w9
000000000000fa60	b.ls	0xfc04
000000000000fa64	ldr	w10, [sp, #0x10]
000000000000fa68	cbz	w10, 0xfc04
000000000000fa6c	add	x8, x8, x9, lsl #2
000000000000fa70	ldr	w8, [x8, #0x10]
000000000000fa74	add	w8, w8, #0x30
000000000000fa78	ldr	x9, [sp, #0x8]
000000000000fa7c	strh	w8, [sp, #0x18]
000000000000fa80	cmp	w10, #0x1
000000000000fa84	b.eq	0xfc04
000000000000fa88	add	x26, sp, #0x8
000000000000fa8c	add	x21, x26, #0x10
000000000000fa90	ldr	x8, [sp, #0x8]
000000000000fa94	mov	w8, #0x2e
000000000000fa98	strh	w8, [sp, #0x1a]
000000000000fa9c	ldr	w24, [x20, #0x18]
000000000000faa0	mov	w25, #0x2
000000000000faa4	ldarb	w8, [x22]
000000000000faa8	tbz	w8, #0x0, 0xfab0
000000000000faac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000fab0	ldp	w9, w8, [x20, #0x10]
000000000000fab4	sxtw	x8, w8
000000000000fab8	cmp	w8, w9
000000000000fabc	b.ge	0xfb0c
000000000000fac0	ldr	x9, [x20, #0x8]
000000000000fac4	add	w10, w8, #0x1
000000000000fac8	str	w10, [x20, #0x14]
000000000000facc	ldr	w10, [x9, #0x8]
000000000000fad0	cmp	w10, w8
000000000000fad4	b.ls	0xfc04
000000000000fad8	ldr	w10, [sp, #0x10]
000000000000fadc	cmp	w10, w25
000000000000fae0	b.ls	0xfc04
000000000000fae4	add	x8, x9, x8, lsl #2
000000000000fae8	ldr	w8, [x8, #0x10]
000000000000faec	add	w8, w8, #0x30
000000000000faf0	ldr	x9, [sp, #0x8]
000000000000faf4	add	x9, x26, w25, sxtw #1
000000000000faf8	strh	w8, [x9, #0x10]
000000000000fafc	add	w25, w25, #0x1
000000000000fb00	ldarb	w8, [x22]
000000000000fb04	tbnz	w8, #0x0, 0xfaac
000000000000fb08	b	0xfab0
000000000000fb0c	ldr	w8, [sp, #0x10]
000000000000fb10	cmp	w25, #0x2
000000000000fb14	b.ne	0xfb38
000000000000fb18	cmp	w8, w25
000000000000fb1c	b.ls	0xfc04
000000000000fb20	ldr	x9, [sp, #0x8]
000000000000fb24	add	x9, sp, #0x8
000000000000fb28	add	x9, x9, w25, sxtw #1
000000000000fb2c	mov	w10, #0x30
000000000000fb30	strh	w10, [x9, #0x10]
000000000000fb34	add	w25, w25, #0x1
000000000000fb38	cmp	w8, w25
000000000000fb3c	b.ls	0xfc04
000000000000fb40	ldr	x8, [sp, #0x8]
000000000000fb44	add	x8, sp, #0x8
000000000000fb48	add	x8, x8, w25, sxtw #1
000000000000fb4c	mov	w9, #0x45
000000000000fb50	strh	w9, [x8, #0x10]
000000000000fb54	adds	w25, w25, #0x1
000000000000fb58	b.mi	0xfc08
000000000000fb5c	add	x8, sp, #0x50
000000000000fb60	add	x20, x8, #0x28
000000000000fb64	ldr	x8, [x23, #0x118]
000000000000fb68	lsl	x9, x25, #1
000000000000fb6c	add	x9, x9, #0x1f
000000000000fb70	and	x1, x9, #0x3fffffff8
000000000000fb74	add	x0, x8, #0x70
000000000000fb78	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000fb7c	mov	x22, x0
000000000000fb80	adr	x8, #0x524f0
000000000000fb84	nop
000000000000fb88	stp	x8, xzr, [x22, #0x10]!
000000000000fb8c	stur	xzr, [x22, #-0x8]
000000000000fb90	str	w25, [x22, #0x8]
000000000000fb94	add	x0, x22, #0x10
000000000000fb98	sbfiz	x2, x25, #1, #32
000000000000fb9c	mov	x1, x21
000000000000fba0	bl	0x55bd0 ; symbol stub for: _memcpy
000000000000fba4	str	x22, [sp, #0x70]
000000000000fba8	str	x24, [sp]
000000000000fbac	adr	x2, #0x4d8fb ; literal pool for: "%d"
000000000000fbb0	nop
000000000000fbb4	sub	x0, x29, #0x50
000000000000fbb8	mov	w1, #0x10
000000000000fbbc	bl	__ZN5konan8snprintfEPcmPKcz
000000000000fbc0	sub	x0, x29, #0x50
000000000000fbc4	mov	x1, x20
000000000000fbc8	bl	_CreateStringFromCString
000000000000fbcc	mov	x1, x0
000000000000fbd0	mov	x0, x22
000000000000fbd4	mov	x2, x19
000000000000fbd8	bl	_Kotlin_String_plusImpl
000000000000fbdc	str	x0, [x19]
000000000000fbe0	ldr	x8, [sp, #0x58]
000000000000fbe4	str	x8, [x23, #0x110]
000000000000fbe8	ldp	x29, x30, [sp, #0xd0]
000000000000fbec	ldp	x20, x19, [sp, #0xc0]
000000000000fbf0	ldp	x22, x21, [sp, #0xb0]
000000000000fbf4	ldp	x24, x23, [sp, #0xa0]
000000000000fbf8	ldp	x26, x25, [sp, #0x90]
000000000000fbfc	add	sp, sp, #0xe0
000000000000fc00	ret
000000000000fc04	bl	_ThrowArrayIndexOutOfBoundsException
000000000000fc08	bl	_ThrowIllegalArgumentException
_kfun:kotlin.native.internal.NumberConverter.freeFormat#internal:
000000000000fc0c	sub	sp, sp, #0xf0
000000000000fc10	stp	x28, x27, [sp, #0x90]
000000000000fc14	stp	x26, x25, [sp, #0xa0]
000000000000fc18	stp	x24, x23, [sp, #0xb0]
000000000000fc1c	stp	x22, x21, [sp, #0xc0]
000000000000fc20	stp	x20, x19, [sp, #0xd0]
000000000000fc24	stp	x29, x30, [sp, #0xe0]
000000000000fc28	add	x29, sp, #0xe0
000000000000fc2c	mov	x19, x1
000000000000fc30	mov	x20, x0
000000000000fc34	movi.16b	v0, #0x0
000000000000fc38	stp	q0, q0, [sp, #0x50]
000000000000fc3c	adr	x8, #0x51284
000000000000fc40	nop
000000000000fc44	orr	x8, x8, #0x3
000000000000fc48	str	x8, [sp, #0x8]
000000000000fc4c	mov	w8, #0x19
000000000000fc50	str	w8, [sp, #0x10]
000000000000fc54	stur	q0, [sp, #0x18]
000000000000fc58	stur	q0, [sp, #0x28]
000000000000fc5c	stur	q0, [sp, #0x38]
000000000000fc60	strh	wzr, [sp, #0x48]
000000000000fc64	adrp	x0, 107 ; 0x7a000
000000000000fc68	add	x0, x0, #0x4e0
000000000000fc6c	ldr	x8, [x0]
000000000000fc70	blr	x8
000000000000fc74	ldr	x21, [x0]
000000000000fc78	ldr	x8, [x21, #0x110]
000000000000fc7c	add	x9, sp, #0x50
000000000000fc80	str	x9, [x21, #0x110]
000000000000fc84	mov	x9, #0x400000000
000000000000fc88	stp	x8, x9, [sp, #0x58]
000000000000fc8c	adr	x22, #0x8487d
000000000000fc90	nop
000000000000fc94	ldarb	w8, [x22]
000000000000fc98	tbz	w8, #0x0, 0xfca0
000000000000fc9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000fca0	add	x8, sp, #0x8
000000000000fca4	str	x8, [sp, #0x68]
000000000000fca8	ldr	w23, [x20, #0x18]
000000000000fcac	tbnz	w23, #0x1f, 0xfcb8
000000000000fcb0	mov	w26, #0x0
000000000000fcb4	b	0xfd38
000000000000fcb8	ldr	w8, [sp, #0x10]
000000000000fcbc	cbz	w8, 0xfefc
000000000000fcc0	ldr	x9, [sp, #0x8]
000000000000fcc4	mov	w9, #0x30
000000000000fcc8	strh	w9, [sp, #0x18]
000000000000fccc	cmp	w8, #0x1
000000000000fcd0	b.eq	0xfefc
000000000000fcd4	ldr	x8, [sp, #0x8]
000000000000fcd8	mov	w8, #0x2e
000000000000fcdc	strh	w8, [sp, #0x1a]
000000000000fce0	cmn	w23, #0x1
000000000000fce4	b.mi	0xfcf0
000000000000fce8	mov	w26, #0x2
000000000000fcec	b	0xfd38
000000000000fcf0	neg	w25, w23
000000000000fcf4	mov	w24, #0x1
000000000000fcf8	add	x26, sp, #0x8
000000000000fcfc	mov	w27, #0x30
000000000000fd00	ldarb	w8, [x22]
000000000000fd04	tbz	w8, #0x0, 0xfd0c
000000000000fd08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000fd0c	add	w8, w24, #0x1
000000000000fd10	ldr	w9, [sp, #0x10]
000000000000fd14	cmp	w9, w8
000000000000fd18	b.ls	0xfefc
000000000000fd1c	ldr	x9, [sp, #0x8]
000000000000fd20	add	x8, x26, w8, sxtw #1
000000000000fd24	strh	w27, [x8, #0x10]
000000000000fd28	add	w24, w24, #0x1
000000000000fd2c	cmp	w25, w24
000000000000fd30	b.ne	0xfd00
000000000000fd34	add	w26, w24, #0x1
000000000000fd38	ldr	x8, [x20, #0x8]
000000000000fd3c	ldrsw	x9, [x20, #0x14]
000000000000fd40	add	w10, w9, #0x1
000000000000fd44	str	w10, [x20, #0x14]
000000000000fd48	ldr	w10, [x8, #0x8]
000000000000fd4c	cmp	w10, w9
000000000000fd50	b.ls	0xfefc
000000000000fd54	add	x8, x8, x9, lsl #2
000000000000fd58	ldr	w28, [x8, #0x10]
000000000000fd5c	add	x24, sp, #0x8
000000000000fd60	mov	w25, #0x2e
000000000000fd64	b	0xfd78
000000000000fd68	mov	w28, #-0x1
000000000000fd6c	mov	x26, x27
000000000000fd70	cmn	w23, #0x2
000000000000fd74	b.le	0xfe58
000000000000fd78	ldarb	w8, [x22]
000000000000fd7c	tbz	w8, #0x0, 0xfd84
000000000000fd80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000fd84	cmn	w28, #0x1
000000000000fd88	b.eq	0xfdb4
000000000000fd8c	ldr	w8, [sp, #0x10]
000000000000fd90	cmp	w8, w26
000000000000fd94	b.ls	0xfefc
000000000000fd98	add	w9, w28, #0x30
000000000000fd9c	ldr	x10, [sp, #0x8]
000000000000fda0	add	x10, x24, w26, sxtw #1
000000000000fda4	strh	w9, [x10, #0x10]
000000000000fda8	add	w27, w26, #0x1
000000000000fdac	cbnz	w23, 0xfdf8
000000000000fdb0	b	0xfde0
000000000000fdb4	cmn	w23, #0x1
000000000000fdb8	b.lt	0xfe3c
000000000000fdbc	ldr	w8, [sp, #0x10]
000000000000fdc0	cmp	w8, w26
000000000000fdc4	b.ls	0xfefc
000000000000fdc8	ldr	x9, [sp, #0x8]
000000000000fdcc	mov	w9, #0x30
000000000000fdd0	add	x10, x24, w26, sxtw #1
000000000000fdd4	strh	w9, [x10, #0x10]
000000000000fdd8	add	w27, w26, #0x1
000000000000fddc	cbnz	w23, 0xfdf8
000000000000fde0	cmp	w8, w27
000000000000fde4	b.ls	0xfefc
000000000000fde8	ldr	x8, [sp, #0x8]
000000000000fdec	add	x8, x24, w27, sxtw #1
000000000000fdf0	strh	w25, [x8, #0x10]
000000000000fdf4	add	w27, w26, #0x2
000000000000fdf8	sub	w23, w23, #0x1
000000000000fdfc	ldp	w9, w8, [x20, #0x10]
000000000000fe00	sxtw	x8, w8
000000000000fe04	cmp	w8, w9
000000000000fe08	b.ge	0xfd68
000000000000fe0c	ldr	x9, [x20, #0x8]
000000000000fe10	add	w10, w8, #0x1
000000000000fe14	str	w10, [x20, #0x14]
000000000000fe18	ldr	w10, [x9, #0x8]
000000000000fe1c	cmp	w10, w8
000000000000fe20	b.ls	0xfefc
000000000000fe24	add	x8, x9, x8, lsl #2
000000000000fe28	ldr	w28, [x8, #0x10]
000000000000fe2c	mov	x26, x27
000000000000fe30	cmn	w28, #0x1
000000000000fe34	b.ne	0xfd78
000000000000fe38	b	0xfd68
000000000000fe3c	mov	x27, x26
000000000000fe40	sub	w23, w23, #0x1
000000000000fe44	ldp	w9, w8, [x20, #0x10]
000000000000fe48	sxtw	x8, w8
000000000000fe4c	cmp	w8, w9
000000000000fe50	b.ge	0xfd68
000000000000fe54	b	0xfe0c
000000000000fe58	cbz	w27, 0xfeb0
000000000000fe5c	tbnz	w27, #0x1f, 0xff00
000000000000fe60	ldr	x8, [x21, #0x118]
000000000000fe64	mov	w9, w27
000000000000fe68	lsl	x9, x9, #1
000000000000fe6c	add	x9, x9, #0x1f
000000000000fe70	and	x1, x9, #0x3fffffff8
000000000000fe74	add	x0, x8, #0x70
000000000000fe78	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000000fe7c	mov	x20, x0
000000000000fe80	adr	x8, #0x521f0
000000000000fe84	nop
000000000000fe88	stp	x8, xzr, [x20, #0x10]!
000000000000fe8c	stur	xzr, [x20, #-0x8]
000000000000fe90	str	w27, [x20, #0x8]
000000000000fe94	add	x0, x20, #0x10
000000000000fe98	add	x8, sp, #0x8
000000000000fe9c	add	x1, x8, #0x10
000000000000fea0	sbfiz	x2, x27, #1, #32
000000000000fea4	bl	0x55bd0 ; symbol stub for: _memcpy
000000000000fea8	str	x20, [x19]
000000000000feac	b	0xfecc
000000000000feb0	ldr	x8, [x21, #0x110]
000000000000feb4	sub	x9, x29, #0x68
000000000000feb8	str	x9, [x21, #0x110]
000000000000febc	adr	x20, #0x5e264
000000000000fec0	nop
000000000000fec4	str	x20, [x19]
000000000000fec8	str	x8, [x21, #0x110]
000000000000fecc	str	x20, [x19]
000000000000fed0	ldr	x8, [sp, #0x58]
000000000000fed4	str	x8, [x21, #0x110]
000000000000fed8	mov	x0, x20
000000000000fedc	ldp	x29, x30, [sp, #0xe0]
000000000000fee0	ldp	x20, x19, [sp, #0xd0]
000000000000fee4	ldp	x22, x21, [sp, #0xc0]
000000000000fee8	ldp	x24, x23, [sp, #0xb0]
000000000000feec	ldp	x26, x25, [sp, #0xa0]
000000000000fef0	ldp	x28, x27, [sp, #0x90]
000000000000fef4	add	sp, sp, #0xf0
000000000000fef8	ret
000000000000fefc	bl	_ThrowArrayIndexOutOfBoundsException
000000000000ff00	bl	_ThrowIllegalArgumentException
_kfun:kotlin.native.internal.NumberConverter.bigIntDigitGeneratorInstImpl#internal:
000000000000ff04	stp	x28, x27, [sp, #-0x60]!
000000000000ff08	stp	x26, x25, [sp, #0x10]
000000000000ff0c	stp	x24, x23, [sp, #0x20]
000000000000ff10	stp	x22, x21, [sp, #0x30]
000000000000ff14	stp	x20, x19, [sp, #0x40]
000000000000ff18	stp	x29, x30, [sp, #0x50]
000000000000ff1c	add	x29, sp, #0x50
000000000000ff20	sub	sp, sp, #0x400
000000000000ff24	mov	x22, x4
000000000000ff28	mov	x23, x3
000000000000ff2c	mov	x20, x2
000000000000ff30	mov	x21, x1
000000000000ff34	mov	x24, x0
000000000000ff38	movi.16b	v0, #0x0
000000000000ff3c	stp	q0, q0, [sp, #0x70]
000000000000ff40	adr	x8, #0x51010
000000000000ff44	nop
000000000000ff48	orr	x8, x8, #0x3
000000000000ff4c	str	x8, [sp, #0x50]
000000000000ff50	mov	w8, #0x3
000000000000ff54	str	w8, [sp, #0x58]
000000000000ff58	str	xzr, [sp, #0x60]
000000000000ff5c	str	wzr, [sp, #0x68]
000000000000ff60	adrp	x0, 107 ; 0x7a000
000000000000ff64	add	x0, x0, #0x4e0
000000000000ff68	ldr	x8, [x0]
000000000000ff6c	blr	x8
000000000000ff70	ldr	x10, [x0]
000000000000ff74	ldr	x8, [x10, #0x110]
000000000000ff78	add	x9, sp, #0x70
000000000000ff7c	str	x10, [sp]
000000000000ff80	str	x9, [x10, #0x110]
000000000000ff84	mov	x9, #0x400000000
000000000000ff88	stp	x8, x9, [sp, #0x78]
000000000000ff8c	adr	x8, #0x8457d
000000000000ff90	nop
000000000000ff94	ldarb	w8, [x8]
000000000000ff98	tbz	w8, #0x0, 0xffa4
000000000000ff9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000000ffa0	movi.16b	v0, #0x0
000000000000ffa4	add	x8, sp, #0x50
000000000000ffa8	str	x8, [sp, #0x88]
000000000000ffac	ldr	x26, [x24, #0x8]
000000000000ffb0	stp	q0, q0, [x29, #-0x100]
000000000000ffb4	stp	q0, q0, [x29, #-0xe0]
000000000000ffb8	stp	q0, q0, [x29, #-0xc0]
000000000000ffbc	stp	q0, q0, [x29, #-0xa0]
000000000000ffc0	stp	q0, q0, [x29, #-0x80]
000000000000ffc4	stur	xzr, [x29, #-0x60]
000000000000ffc8	stp	q0, q0, [sp, #0x2a0]
000000000000ffcc	stp	q0, q0, [sp, #0x2c0]
000000000000ffd0	stp	q0, q0, [sp, #0x2e0]
000000000000ffd4	stp	q0, q0, [sp, #0x300]
000000000000ffd8	stp	q0, q0, [sp, #0x320]
000000000000ffdc	str	q0, [sp, #0x340]
000000000000ffe0	str	xzr, [sp, #0x290]
000000000000ffe4	stp	q0, q0, [sp, #0x270]
000000000000ffe8	stp	q0, q0, [sp, #0x250]
000000000000ffec	stp	q0, q0, [sp, #0x230]
000000000000fff0	stp	q0, q0, [sp, #0x210]
000000000000fff4	stp	q0, q0, [sp, #0x1f0]
000000000000fff8	str	xzr, [sp, #0x1e0]
000000000000fffc	stp	q0, q0, [sp, #0x1c0]
0000000000010000	stp	q0, q0, [sp, #0x1a0]
0000000000010004	stp	q0, q0, [sp, #0x180]
0000000000010008	stp	q0, q0, [sp, #0x160]
000000000001000c	stp	q0, q0, [sp, #0x140]
0000000000010010	stp	q0, q0, [sp, #0x120]
0000000000010014	stp	q0, q0, [sp, #0x100]
0000000000010018	stp	q0, q0, [sp, #0xe0]
000000000001001c	stp	q0, q0, [sp, #0xc0]
0000000000010020	stp	q0, q0, [sp, #0xa0]
0000000000010024	str	q0, [sp, #0x90]
0000000000010028	str	x24, [sp, #0x10]
000000000001002c	tbnz	w20, #0x1f, 0x10094
0000000000010030	stur	x21, [x29, #-0x100]
0000000000010034	mov	w8, #0x1
0000000000010038	str	x8, [sp, #0x140]
000000000001003c	str	x8, [sp, #0x1f0]
0000000000010040	add	x0, sp, #0x140
0000000000010044	mov	w1, #0x15
0000000000010048	mov	x2, x20
000000000001004c	bl	_simpleShiftLeftHighPrecision
0000000000010050	sub	w19, w22, #0x1
0000000000010054	mov	w8, #0x2
0000000000010058	lsl	w8, w8, w19
000000000001005c	sxtw	x8, w8
0000000000010060	cmp	x8, x21
0000000000010064	b.ne	0x100dc
0000000000010068	add	w2, w20, #0x2
000000000001006c	sub	x0, x29, #0x100
0000000000010070	mov	w1, #0x15
0000000000010074	bl	_simpleShiftLeftHighPrecision
0000000000010078	mov	w8, #0x4
000000000001007c	str	x8, [sp, #0x2a0]
0000000000010080	add	w2, w20, #0x1
0000000000010084	add	x0, sp, #0x1f0
0000000000010088	mov	w1, #0x15
000000000001008c	bl	_simpleShiftLeftHighPrecision
0000000000010090	b	0x10130
0000000000010094	sub	w19, w22, #0x1
0000000000010098	tbnz	w23, #0x0, 0x10108
000000000001009c	mov	w22, #0x2
00000000000100a0	lsl	w8, w22, w19
00000000000100a4	sxtw	x8, w8
00000000000100a8	cmp	x8, x21
00000000000100ac	b.ne	0x10108
00000000000100b0	lsl	x8, x21, #2
00000000000100b4	stur	x8, [x29, #-0x100]
00000000000100b8	mov	w21, #0x1
00000000000100bc	str	x21, [sp, #0x2a0]
00000000000100c0	sub	w2, w22, w20
00000000000100c4	add	x0, sp, #0x2a0
00000000000100c8	mov	w1, #0x16
00000000000100cc	bl	_simpleShiftLeftHighPrecision
00000000000100d0	str	x22, [sp, #0x1f0]
00000000000100d4	str	x21, [sp, #0x140]
00000000000100d8	b	0x10130
00000000000100dc	add	w2, w20, #0x1
00000000000100e0	sub	x0, x29, #0x100
00000000000100e4	mov	w1, #0x15
00000000000100e8	bl	_simpleShiftLeftHighPrecision
00000000000100ec	mov	w8, #0x2
00000000000100f0	str	x8, [sp, #0x2a0]
00000000000100f4	add	x0, sp, #0x1f0
00000000000100f8	mov	w1, #0x15
00000000000100fc	mov	x2, x20
0000000000010100	bl	_simpleShiftLeftHighPrecision
0000000000010104	b	0x10130
0000000000010108	lsl	x8, x21, #1
000000000001010c	stur	x8, [x29, #-0x100]
0000000000010110	mov	w21, #0x1
0000000000010114	str	x21, [sp, #0x2a0]
0000000000010118	sub	w2, w21, w20
000000000001011c	add	x0, sp, #0x2a0
0000000000010120	mov	w1, #0x16
0000000000010124	bl	_simpleShiftLeftHighPrecision
0000000000010128	str	x21, [sp, #0x140]
000000000001012c	str	x21, [sp, #0x1f0]
0000000000010130	add	w8, w19, w20
0000000000010134	scvtf	d0, w8
0000000000010138	nop
000000000001013c	ldr	d1, 0x57fd0
0000000000010140	fmul	d0, d0, d1
0000000000010144	nop
0000000000010148	ldr	d1, 0x57fd8
000000000001014c	fadd	d0, d0, d1
0000000000010150	fcvtps	w24, d0
0000000000010154	subs	w27, w24, #0x1
0000000000010158	b.lt	0x1016c
000000000001015c	add	x0, sp, #0x2a0
0000000000010160	mov	w1, #0x16
0000000000010164	mov	x2, x24
0000000000010168	b	0x1019c
000000000001016c	neg	w20, w24
0000000000010170	sub	x0, x29, #0x100
0000000000010174	mov	w1, #0x15
0000000000010178	mov	x2, x20
000000000001017c	bl	_timesTenToTheEHighPrecision
0000000000010180	add	x0, sp, #0x1f0
0000000000010184	mov	w1, #0x15
0000000000010188	mov	x2, x20
000000000001018c	bl	_timesTenToTheEHighPrecision
0000000000010190	add	x0, sp, #0x140
0000000000010194	mov	w1, #0x15
0000000000010198	mov	x2, x20
000000000001019c	bl	_timesTenToTheEHighPrecision
00000000000101a0	ldp	q0, q1, [x29, #-0x80]
00000000000101a4	stp	q0, q1, [sp, #0x110]
00000000000101a8	ldur	x8, [x29, #-0x60]
00000000000101ac	stp	x8, xzr, [sp, #0x130]
00000000000101b0	ldp	q0, q1, [x29, #-0xc0]
00000000000101b4	stp	q0, q1, [sp, #0xd0]
00000000000101b8	ldp	q1, q0, [x29, #-0xa0]
00000000000101bc	stp	q1, q0, [sp, #0xf0]
00000000000101c0	ldp	q0, q1, [x29, #-0x100]
00000000000101c4	stp	q0, q1, [sp, #0x90]
00000000000101c8	ldp	q1, q0, [x29, #-0xe0]
00000000000101cc	mov	w8, #0x14
00000000000101d0	sub	x9, x29, #0x100
00000000000101d4	stp	q1, q0, [sp, #0xb0]
00000000000101d8	add	x10, x8, #0x1
00000000000101dc	cmp	x10, #0x2
00000000000101e0	b.lo	0x101f8
00000000000101e4	ldr	x10, [x9, x8, lsl #3]
00000000000101e8	sub	x8, x8, #0x1
00000000000101ec	cbz	x10, 0x101d8
00000000000101f0	add	w21, w8, #0x2
00000000000101f4	b	0x101fc
00000000000101f8	mov	w21, #0x1
00000000000101fc	mov	w8, #0x14
0000000000010200	add	x9, sp, #0x1f0
0000000000010204	add	x10, x8, #0x1
0000000000010208	cmp	x10, #0x2
000000000001020c	b.lo	0x10224
0000000000010210	ldr	x10, [x9, x8, lsl #3]
0000000000010214	sub	x8, x8, #0x1
0000000000010218	cbz	x10, 0x10204
000000000001021c	add	w22, w8, #0x2
0000000000010220	b	0x10228
0000000000010224	mov	w22, #0x1
0000000000010228	mov	w8, #0x14
000000000001022c	add	x9, sp, #0x140
0000000000010230	add	x10, x8, #0x1
0000000000010234	cmp	x10, #0x2
0000000000010238	b.lo	0x10250
000000000001023c	ldr	x10, [x9, x8, lsl #3]
0000000000010240	sub	x8, x8, #0x1
0000000000010244	cbz	x10, 0x10230
0000000000010248	add	w23, w8, #0x2
000000000001024c	b	0x10254
0000000000010250	mov	w23, #0x1
0000000000010254	mov	w8, #0x15
0000000000010258	add	x9, sp, #0x2a0
000000000001025c	add	x10, x8, #0x1
0000000000010260	cmp	x10, #0x2
0000000000010264	b.lo	0x1027c
0000000000010268	ldr	x10, [x9, x8, lsl #3]
000000000001026c	sub	x8, x8, #0x1
0000000000010270	cbz	x10, 0x1025c
0000000000010274	add	w20, w8, #0x2
0000000000010278	b	0x10280
000000000001027c	mov	w20, #0x1
0000000000010280	cmp	w21, w22
0000000000010284	csel	w8, w21, w22, gt
0000000000010288	add	w25, w8, #0x1
000000000001028c	add	x19, sp, #0x90
0000000000010290	add	x0, sp, #0x90
0000000000010294	add	x2, sp, #0x1f0
0000000000010298	mov	x1, x25
000000000001029c	mov	x3, x22
00000000000102a0	bl	_addHighPrecision
00000000000102a4	add	x0, sp, #0x90
00000000000102a8	add	x2, sp, #0x2a0
00000000000102ac	mov	x1, x25
00000000000102b0	str	x20, [sp, #0x28]
00000000000102b4	mov	x3, x20
00000000000102b8	bl	_compareHighPrecision
00000000000102bc	tbnz	w0, #0x1f, 0x102c8
00000000000102c0	str	w24, [sp, #0xc]
00000000000102c4	b	0x103f8
00000000000102c8	mov	x9, #0x0
00000000000102cc	cmp	w21, #0x1
00000000000102d0	mov	w8, #0x1
00000000000102d4	csinc	w8, w8, w21, lt
00000000000102d8	sub	x10, x29, #0x100
00000000000102dc	mov	w11, #0xa
00000000000102e0	ldp	w12, w13, [x10]
00000000000102e4	madd	x12, x12, x11, x9
00000000000102e8	mul	x9, x13, x11
00000000000102ec	add	x13, x9, x12, lsr #32
00000000000102f0	lsr	x9, x13, #32
00000000000102f4	stp	w12, w13, [x10], #0x8
00000000000102f8	subs	x8, x8, #0x1
00000000000102fc	b.ne	0x102e0
0000000000010300	mov	x9, #0x0
0000000000010304	cmp	w22, #0x1
0000000000010308	mov	w8, #0x1
000000000001030c	csinc	w8, w8, w22, lt
0000000000010310	add	x10, sp, #0x1f0
0000000000010314	mov	w11, #0xa
0000000000010318	ldp	w12, w13, [x10]
000000000001031c	madd	x12, x12, x11, x9
0000000000010320	mul	x9, x13, x11
0000000000010324	add	x13, x9, x12, lsr #32
0000000000010328	lsr	x9, x13, #32
000000000001032c	stp	w12, w13, [x10], #0x8
0000000000010330	subs	x8, x8, #0x1
0000000000010334	b.ne	0x10318
0000000000010338	mov	x9, #0x0
000000000001033c	cmp	w23, #0x1
0000000000010340	mov	w8, #0x1
0000000000010344	csinc	w8, w8, w23, lt
0000000000010348	add	x10, sp, #0x140
000000000001034c	mov	w11, #0xa
0000000000010350	ldp	w12, w13, [x10]
0000000000010354	madd	x12, x12, x11, x9
0000000000010358	mul	x9, x13, x11
000000000001035c	add	x13, x9, x12, lsr #32
0000000000010360	lsr	x9, x13, #32
0000000000010364	stp	w12, w13, [x10], #0x8
0000000000010368	subs	x8, x8, #0x1
000000000001036c	b.ne	0x10350
0000000000010370	mov	w8, w21
0000000000010374	sub	x9, x29, #0x100
0000000000010378	add	x10, x8, #0x1
000000000001037c	cmp	x10, #0x2
0000000000010380	b.lt	0x10398
0000000000010384	ldr	x10, [x9, x8, lsl #3]
0000000000010388	sub	x8, x8, #0x1
000000000001038c	cbz	x10, 0x10378
0000000000010390	add	w21, w8, #0x2
0000000000010394	b	0x1039c
0000000000010398	mov	w21, #0x1
000000000001039c	mov	w8, w22
00000000000103a0	add	x9, sp, #0x1f0
00000000000103a4	add	x10, x8, #0x1
00000000000103a8	cmp	x10, #0x2
00000000000103ac	b.lt	0x103c4
00000000000103b0	ldr	x10, [x9, x8, lsl #3]
00000000000103b4	sub	x8, x8, #0x1
00000000000103b8	cbz	x10, 0x103a4
00000000000103bc	add	w22, w8, #0x2
00000000000103c0	b	0x103c8
00000000000103c4	mov	w22, #0x1
00000000000103c8	mov	w8, w23
00000000000103cc	add	x9, sp, #0x140
00000000000103d0	str	w27, [sp, #0xc]
00000000000103d4	add	x10, x8, #0x1
00000000000103d8	cmp	x10, #0x2
00000000000103dc	b.lt	0x103f4
00000000000103e0	ldr	x10, [x9, x8, lsl #3]
00000000000103e4	sub	x8, x8, #0x1
00000000000103e8	cbz	x10, 0x103d4
00000000000103ec	add	w23, w8, #0x2
00000000000103f0	b	0x103f8
00000000000103f4	mov	w23, #0x1
00000000000103f8	ldr	x27, [sp, #0x28]
00000000000103fc	add	w24, w27, #0x1
0000000000010400	sxtw	x8, w27
0000000000010404	str	x8, [sp, #0x48]
0000000000010408	sbfiz	x8, x27, #3, #32
000000000001040c	stp	xzr, x8, [sp, #0x38]
0000000000010410	add	x8, x26, #0x10
0000000000010414	stp	x8, x26, [sp, #0x18]
0000000000010418	sub	x25, x19, #0x8
000000000001041c	add	x20, sp, #0x140
0000000000010420	mov	w28, #0xa
0000000000010424	ldp	x2, x8, [sp, #0x40]
0000000000010428	str	xzr, [x19, x8, lsl #3]
000000000001042c	add	x0, sp, #0x90
0000000000010430	add	x1, sp, #0x2a0
0000000000010434	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000010438	cmp	w27, #0x1
000000000001043c	b.lt	0x1046c
0000000000010440	mov	x8, x24
0000000000010444	lsl	x9, x8, #3
0000000000010448	sub	w10, w8, #0x2
000000000001044c	sub	x11, x8, #0x1
0000000000010450	ldr	x12, [x25, x9]
0000000000010454	ldr	x10, [x19, w10, uxtw #3]
0000000000010458	extr	x10, x12, x10, #0x3d
000000000001045c	str	x10, [x25, x9]
0000000000010460	cmp	x8, #0x2
0000000000010464	mov	x8, x11
0000000000010468	b.gt	0x10444
000000000001046c	ldr	x8, [sp, #0x90]
0000000000010470	lsl	x8, x8, #3
0000000000010474	str	x8, [sp, #0x90]
0000000000010478	sub	x0, x29, #0x100
000000000001047c	add	x2, sp, #0x90
0000000000010480	mov	x1, x21
0000000000010484	mov	x3, x24
0000000000010488	bl	_compareHighPrecision
000000000001048c	tbnz	w0, #0x1f, 0x104ac
0000000000010490	sub	x0, x29, #0x100
0000000000010494	add	x2, sp, #0x90
0000000000010498	mov	x1, x21
000000000001049c	mov	x3, x24
00000000000104a0	bl	_subtractHighPrecision
00000000000104a4	mov	w26, #0x8
00000000000104a8	b	0x104b0
00000000000104ac	mov	w26, #0x0
00000000000104b0	ldp	x2, x8, [sp, #0x40]
00000000000104b4	str	xzr, [x19, x8, lsl #3]
00000000000104b8	add	x0, sp, #0x90
00000000000104bc	add	x1, sp, #0x2a0
00000000000104c0	bl	0x55bd0 ; symbol stub for: _memcpy
00000000000104c4	cmp	w27, #0x1
00000000000104c8	b.lt	0x104f8
00000000000104cc	mov	x8, x24
00000000000104d0	lsl	x9, x8, #3
00000000000104d4	sub	w10, w8, #0x2
00000000000104d8	sub	x11, x8, #0x1
00000000000104dc	ldr	x12, [x25, x9]
00000000000104e0	ldr	x10, [x19, w10, uxtw #3]
00000000000104e4	extr	x10, x12, x10, #0x3e
00000000000104e8	str	x10, [x25, x9]
00000000000104ec	cmp	x8, #0x2
00000000000104f0	mov	x8, x11
00000000000104f4	b.gt	0x104d0
00000000000104f8	ldr	x8, [sp, #0x90]
00000000000104fc	lsl	x8, x8, #2
0000000000010500	str	x8, [sp, #0x90]
0000000000010504	sub	x0, x29, #0x100
0000000000010508	add	x2, sp, #0x90
000000000001050c	mov	x1, x21
0000000000010510	mov	x3, x24
0000000000010514	bl	_compareHighPrecision
0000000000010518	tbnz	w0, #0x1f, 0x10534
000000000001051c	sub	x0, x29, #0x100
0000000000010520	add	x2, sp, #0x90
0000000000010524	mov	x1, x21
0000000000010528	mov	x3, x24
000000000001052c	bl	_subtractHighPrecision
0000000000010530	orr	w26, w26, #0x4
0000000000010534	ldp	x2, x8, [sp, #0x40]
0000000000010538	str	xzr, [x19, x8, lsl #3]
000000000001053c	add	x0, sp, #0x90
0000000000010540	add	x1, sp, #0x2a0
0000000000010544	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000010548	cmp	w27, #0x1
000000000001054c	b.lt	0x1057c
0000000000010550	mov	x8, x24
0000000000010554	lsl	x9, x8, #3
0000000000010558	sub	w10, w8, #0x2
000000000001055c	sub	x11, x8, #0x1
0000000000010560	ldr	x12, [x25, x9]
0000000000010564	ldr	x10, [x19, w10, uxtw #3]
0000000000010568	extr	x10, x12, x10, #0x3f
000000000001056c	str	x10, [x25, x9]
0000000000010570	cmp	x8, #0x2
0000000000010574	mov	x8, x11
0000000000010578	b.gt	0x10554
000000000001057c	ldr	x8, [sp, #0x90]
0000000000010580	lsl	x8, x8, #1
0000000000010584	str	x8, [sp, #0x90]
0000000000010588	sub	x0, x29, #0x100
000000000001058c	add	x2, sp, #0x90
0000000000010590	mov	x1, x21
0000000000010594	mov	x3, x24
0000000000010598	bl	_compareHighPrecision
000000000001059c	tbnz	w0, #0x1f, 0x105b8
00000000000105a0	sub	x0, x29, #0x100
00000000000105a4	add	x2, sp, #0x90
00000000000105a8	mov	x1, x21
00000000000105ac	mov	x3, x24
00000000000105b0	bl	_subtractHighPrecision
00000000000105b4	add	w26, w26, #0x2
00000000000105b8	ldp	x2, x8, [sp, #0x40]
00000000000105bc	str	xzr, [x19, x8, lsl #3]
00000000000105c0	add	x0, sp, #0x90
00000000000105c4	add	x1, sp, #0x2a0
00000000000105c8	bl	0x55bd0 ; symbol stub for: _memcpy
00000000000105cc	sub	x0, x29, #0x100
00000000000105d0	add	x2, sp, #0x90
00000000000105d4	mov	x1, x21
00000000000105d8	mov	x3, x24
00000000000105dc	bl	_compareHighPrecision
00000000000105e0	tbnz	w0, #0x1f, 0x105fc
00000000000105e4	sub	x0, x29, #0x100
00000000000105e8	add	x2, sp, #0x90
00000000000105ec	mov	x1, x21
00000000000105f0	mov	x3, x24
00000000000105f4	bl	_subtractHighPrecision
00000000000105f8	add	w26, w26, #0x1
00000000000105fc	str	w26, [sp, #0x34]
0000000000010600	sub	x0, x29, #0x100
0000000000010604	add	x2, sp, #0x140
0000000000010608	mov	x1, x21
000000000001060c	mov	x3, x23
0000000000010610	bl	_compareHighPrecision
0000000000010614	mov	x26, x0
0000000000010618	sbfiz	x27, x21, #3, #32
000000000001061c	add	x0, x19, x27
0000000000010620	mov	w8, #0x16
0000000000010624	sub	w8, w8, w21
0000000000010628	sbfiz	x1, x8, #3, #32
000000000001062c	bl	0x55ae0 ; symbol stub for: _bzero
0000000000010630	add	x0, sp, #0x90
0000000000010634	sub	x1, x29, #0x100
0000000000010638	mov	x2, x27
000000000001063c	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000010640	cmp	w21, w22
0000000000010644	csel	w8, w21, w22, gt
0000000000010648	add	w27, w8, #0x1
000000000001064c	add	x0, sp, #0x90
0000000000010650	add	x2, sp, #0x1f0
0000000000010654	mov	x1, x27
0000000000010658	mov	x3, x22
000000000001065c	bl	_addHighPrecision
0000000000010660	add	x0, sp, #0x90
0000000000010664	add	x2, sp, #0x2a0
0000000000010668	mov	x1, x27
000000000001066c	ldr	x27, [sp, #0x28]
0000000000010670	mov	x3, x27
0000000000010674	bl	_compareHighPrecision
0000000000010678	add	w1, w21, #0x1
000000000001067c	cmp	w26, #0x1
0000000000010680	b.lt	0x107f0
0000000000010684	tbz	w0, #0x1f, 0x107f0
0000000000010688	mov	x9, #0x0
000000000001068c	cmp	w1, #0x1
0000000000010690	csinc	w8, w1, wzr, gt
0000000000010694	sub	x10, x29, #0x100
0000000000010698	ldp	w11, w12, [x10]
000000000001069c	madd	x11, x11, x28, x9
00000000000106a0	mul	x9, x12, x28
00000000000106a4	add	x12, x9, x11, lsr #32
00000000000106a8	lsr	x9, x12, #32
00000000000106ac	stp	w11, w12, [x10], #0x8
00000000000106b0	subs	x8, x8, #0x1
00000000000106b4	b.ne	0x10698
00000000000106b8	mov	x10, #0x0
00000000000106bc	add	w8, w22, #0x1
00000000000106c0	cmp	w8, #0x1
00000000000106c4	mov	w14, #0x1
00000000000106c8	csinc	w9, w14, w22, le
00000000000106cc	add	x11, sp, #0x1f0
00000000000106d0	ldr	x15, [sp, #0x20]
00000000000106d4	ldr	w16, [sp, #0x34]
00000000000106d8	ldp	w12, w13, [x11]
00000000000106dc	madd	x12, x12, x28, x10
00000000000106e0	mul	x10, x13, x28
00000000000106e4	add	x13, x10, x12, lsr #32
00000000000106e8	lsr	x10, x13, #32
00000000000106ec	stp	w12, w13, [x11], #0x8
00000000000106f0	subs	x9, x9, #0x1
00000000000106f4	b.ne	0x106d8
00000000000106f8	mov	x11, #0x0
00000000000106fc	add	w9, w23, #0x1
0000000000010700	cmp	w9, #0x1
0000000000010704	csinc	w10, w14, w23, le
0000000000010708	add	x12, sp, #0x140
000000000001070c	ldp	w13, w14, [x12]
0000000000010710	madd	x13, x13, x28, x11
0000000000010714	mul	x11, x14, x28
0000000000010718	add	x14, x11, x13, lsr #32
000000000001071c	lsr	x11, x14, #32
0000000000010720	stp	w13, w14, [x12], #0x8
0000000000010724	subs	x10, x10, #0x1
0000000000010728	b.ne	0x1070c
000000000001072c	cmp	w1, #0x1
0000000000010730	csinc	w10, w1, wzr, lt
0000000000010734	mov	w14, #-0x1
0000000000010738	add	x11, x14, w1, uxtw
000000000001073c	add	w21, w21, #0x2
0000000000010740	sub	x13, x29, #0x100
0000000000010744	sub	w21, w21, #0x1
0000000000010748	cmp	w21, #0x2
000000000001074c	b.lt	0x10760
0000000000010750	ldr	x12, [x13, w11, uxtw #3]
0000000000010754	sub	x11, x11, #0x1
0000000000010758	cbz	x12, 0x10744
000000000001075c	b	0x10764
0000000000010760	mov	x21, x10
0000000000010764	cmp	w8, #0x1
0000000000010768	csinc	w10, w8, wzr, lt
000000000001076c	add	x8, x14, w8, uxtw
0000000000010770	add	w22, w22, #0x2
0000000000010774	add	x12, sp, #0x1f0
0000000000010778	sub	w22, w22, #0x1
000000000001077c	cmp	w22, #0x2
0000000000010780	b.lt	0x10794
0000000000010784	ldr	x11, [x12, w8, uxtw #3]
0000000000010788	sub	x8, x8, #0x1
000000000001078c	cbz	x11, 0x10778
0000000000010790	b	0x10798
0000000000010794	mov	x22, x10
0000000000010798	cmp	w9, #0x1
000000000001079c	csinc	w8, w9, wzr, lt
00000000000107a0	add	x9, x14, w9, uxtw
00000000000107a4	add	w23, w23, #0x2
00000000000107a8	sub	w23, w23, #0x1
00000000000107ac	cmp	w23, #0x2
00000000000107b0	b.lt	0x107c4
00000000000107b4	ldr	x10, [x20, w9, uxtw #3]
00000000000107b8	sub	x9, x9, #0x1
00000000000107bc	cbz	x10, 0x107a8
00000000000107c0	b	0x107c8
00000000000107c4	mov	x23, x8
00000000000107c8	ldr	w8, [x15, #0x8]
00000000000107cc	ldr	x9, [sp, #0x38]
00000000000107d0	cmp	x9, x8
00000000000107d4	b.hs	0x1091c
00000000000107d8	ldr	xzr, [x15]
00000000000107dc	ldr	x8, [sp, #0x18]
00000000000107e0	str	w16, [x8, x9, lsl #2]
00000000000107e4	add	x8, x9, #0x1
00000000000107e8	str	x8, [sp, #0x38]
00000000000107ec	b	0x10424
00000000000107f0	cmp	w1, #0x1
00000000000107f4	b.le	0x10830
00000000000107f8	mov	w8, #-0x2
00000000000107fc	add	x8, x8, w1, sxtw
0000000000010800	sub	x9, x29, #0x100
0000000000010804	add	x10, x9, w1, sxtw #3
0000000000010808	sub	x10, x10, #0x8
000000000001080c	add	x11, x1, #0x1
0000000000010810	ldr	x12, [x10]
0000000000010814	ldr	x13, [x9, w8, uxtw #3]
0000000000010818	extr	x12, x12, x13, #0x3f
000000000001081c	str	x12, [x10], #-0x8
0000000000010820	sub	x8, x8, #0x1
0000000000010824	sub	x11, x11, #0x1
0000000000010828	cmp	x11, #0x2
000000000001082c	b.gt	0x10810
0000000000010830	ldur	x8, [x29, #-0x100]
0000000000010834	lsl	x8, x8, #1
0000000000010838	stur	x8, [x29, #-0x100]
000000000001083c	ldr	x19, [sp, #0x10]
0000000000010840	ldr	w20, [sp, #0xc]
0000000000010844	tbz	w0, #0x1f, 0x10860
0000000000010848	cmp	w26, #0x1
000000000001084c	b.ge	0x10860
0000000000010850	ldr	x9, [sp, #0x20]
0000000000010854	ldr	x10, [sp, #0x38]
0000000000010858	ldr	w11, [sp, #0x34]
000000000001085c	b	0x1089c
0000000000010860	cmp	w26, #0x1
0000000000010864	b.lt	0x10878
0000000000010868	tbnz	w0, #0x1f, 0x10878
000000000001086c	ldr	w11, [sp, #0x34]
0000000000010870	add	w11, w11, #0x1
0000000000010874	b	0x10894
0000000000010878	sub	x0, x29, #0x100
000000000001087c	add	x2, sp, #0x2a0
0000000000010880	mov	x3, x27
0000000000010884	bl	_compareHighPrecision
0000000000010888	mvn	w8, w0
000000000001088c	ldr	w11, [sp, #0x34]
0000000000010890	add	w11, w11, w8, lsr #31
0000000000010894	ldr	x9, [sp, #0x20]
0000000000010898	ldr	x10, [sp, #0x38]
000000000001089c	ldr	w8, [x9, #0x8]
00000000000108a0	cmp	w8, w10
00000000000108a4	b.ls	0x1091c
00000000000108a8	ldr	xzr, [x9]
00000000000108ac	ldr	x8, [sp, #0x18]
00000000000108b0	str	w11, [x8, w10, uxtw #2]
00000000000108b4	ldr	w9, [sp, #0x58]
00000000000108b8	cbz	w9, 0x1091c
00000000000108bc	add	w8, w10, #0x1
00000000000108c0	ldr	x10, [sp, #0x50]
00000000000108c4	str	w8, [sp, #0x60]
00000000000108c8	cmp	w9, #0x1
00000000000108cc	b.eq	0x1091c
00000000000108d0	ldr	x10, [sp, #0x50]
00000000000108d4	str	wzr, [sp, #0x64]
00000000000108d8	cmp	w9, #0x2
00000000000108dc	b.ls	0x1091c
00000000000108e0	ldr	x9, [sp, #0x50]
00000000000108e4	str	w20, [sp, #0x68]
00000000000108e8	stp	w8, wzr, [x19, #0x10]
00000000000108ec	str	w20, [x19, #0x18]
00000000000108f0	ldr	x8, [sp, #0x78]
00000000000108f4	ldr	x9, [sp]
00000000000108f8	str	x8, [x9, #0x110]
00000000000108fc	add	sp, sp, #0x400
0000000000010900	ldp	x29, x30, [sp, #0x50]
0000000000010904	ldp	x20, x19, [sp, #0x40]
0000000000010908	ldp	x22, x21, [sp, #0x30]
000000000001090c	ldp	x24, x23, [sp, #0x20]
0000000000010910	ldp	x26, x25, [sp, #0x10]
0000000000010914	ldp	x28, x27, [sp], #0x60
0000000000010918	ret
000000000001091c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.native.internal.NumberConverter.longDigitGenerator#internal:
0000000000010920	sub	sp, sp, #0x130
0000000000010924	stp	x28, x27, [sp, #0xd0]
0000000000010928	stp	x26, x25, [sp, #0xe0]
000000000001092c	stp	x24, x23, [sp, #0xf0]
0000000000010930	stp	x22, x21, [sp, #0x100]
0000000000010934	stp	x20, x19, [sp, #0x110]
0000000000010938	stp	x29, x30, [sp, #0x120]
000000000001093c	add	x29, sp, #0x120
0000000000010940	mov	x23, x4
0000000000010944	mov	x24, x3
0000000000010948	mov	x21, x2
000000000001094c	mov	x25, x1
0000000000010950	mov	x19, x0
0000000000010954	movi.16b	v0, #0x0
0000000000010958	stp	q0, q0, [sp, #0x60]
000000000001095c	str	xzr, [sp, #0xc0]
0000000000010960	stp	q0, q0, [sp, #0xa0]
0000000000010964	stp	q0, q0, [sp, #0x80]
0000000000010968	adr	x8, #0x50678
000000000001096c	nop
0000000000010970	orr	x8, x8, #0x3
0000000000010974	str	x8, [sp, #0x30]
0000000000010978	mov	w8, #0x4
000000000001097c	str	w8, [sp, #0x38]
0000000000010980	stp	q0, q0, [sp, #0x40]
0000000000010984	adrp	x0, 106 ; 0x7a000
0000000000010988	add	x0, x0, #0x4e0
000000000001098c	ldr	x8, [x0]
0000000000010990	blr	x8
0000000000010994	ldr	x26, [x0]
0000000000010998	ldr	x8, [x26, #0x110]
000000000001099c	add	x9, sp, #0x60
00000000000109a0	str	x9, [x26, #0x110]
00000000000109a4	mov	x9, #0xd00000000
00000000000109a8	stp	x8, x9, [sp, #0x68]
00000000000109ac	adr	x27, #0x83b5d
00000000000109b0	nop
00000000000109b4	ldarb	w8, [x27]
00000000000109b8	tbz	w8, #0x0, 0x109c8
00000000000109bc	mov	x20, x5
00000000000109c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000109c4	mov	x5, x20
00000000000109c8	eor	w8, w23, #0x1
00000000000109cc	orr	w8, w8, w24
00000000000109d0	cmp	w8, #0x0
00000000000109d4	mov	w8, #0x1
00000000000109d8	cinc	w9, w8, eq
00000000000109dc	cinc	x10, x8, eq
00000000000109e0	sub	w9, w9, w21
00000000000109e4	lsl	x9, x8, x9
00000000000109e8	lsl	x11, x8, x21
00000000000109ec	cmp	w23, #0x0
00000000000109f0	mov	w12, #0x2
00000000000109f4	mov	w13, #0x4
00000000000109f8	csel	x12, x13, x12, ne
00000000000109fc	cinc	w13, w8, ne
0000000000010a00	add	w13, w13, w21
0000000000010a04	and	w13, w13, #0x3f
0000000000010a08	tst	w21, #0x80000000
0000000000010a0c	csel	x24, x8, x11, ne
0000000000010a10	csel	x28, x9, x12, ne
0000000000010a14	csel	x20, x10, x13, ne
0000000000010a18	adr	x22, #0x83b68
0000000000010a1c	nop
0000000000010a20	ldar	x23, [x22]
0000000000010a24	cmp	x23, #0x2
0000000000010a28	b.hs	0x10c24
0000000000010a2c	ldp	x8, x9, [x26, #0x120]
0000000000010a30	cmp	x8, x9
0000000000010a34	b.eq	0x10a54
0000000000010a38	mov	x10, x9
0000000000010a3c	ldr	x11, [x10, #-0x10]!
0000000000010a40	cmp	x11, x22
0000000000010a44	b.eq	0x10b20
0000000000010a48	mov	x9, x10
0000000000010a4c	cmp	x10, x8
0000000000010a50	b.ne	0x10a3c
0000000000010a54	add	x8, x26, #0x120
0000000000010a58	stp	x8, x25, [sp, #0x20]
0000000000010a5c	add	x0, x26, #0x138
0000000000010a60	mov	w9, #0x1
0000000000010a64	ldaxr	w8, [x0]
0000000000010a68	stlxr	w10, w9, [x0]
0000000000010a6c	cbnz	w10, 0x10a64
0000000000010a70	b	0x10a80
0000000000010a74	mov	w25, #0x1
0000000000010a78	stlxr	w9, x25, [x22]
0000000000010a7c	cbz	w9, 0x10a90
0000000000010a80	ldaxr	x23, [x22]
0000000000010a84	cbz	x23, 0x10a74
0000000000010a88	mov	w25, #0x0
0000000000010a8c	clrex
0000000000010a90	cmp	x23, #0x1
0000000000010a94	b.eq	0x10a80
0000000000010a98	cbz	x26, 0x10ac8
0000000000010a9c	ldaxr	w9, [x0]
0000000000010aa0	stlxr	w10, w8, [x0]
0000000000010aa4	cbnz	w10, 0x10a9c
0000000000010aa8	cbnz	w8, 0x10ac8
0000000000010aac	cmp	w9, #0x1
0000000000010ab0	b.ne	0x10ac8
0000000000010ab4	ldarb	w8, [x27]
0000000000010ab8	tbz	w8, #0x0, 0x10ac8
0000000000010abc	str	w5, [sp, #0x18]
0000000000010ac0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000010ac4	ldr	w5, [sp, #0x18]
0000000000010ac8	tbz	w25, #0x0, 0x10b14
0000000000010acc	str	w5, [sp, #0x18]
0000000000010ad0	ldr	x8, [x26, #0x118]
0000000000010ad4	add	x0, x8, #0x70
0000000000010ad8	mov	w1, #0x20
0000000000010adc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000010ae0	mov	x23, x0
0000000000010ae4	adr	x8, #0x521ac
0000000000010ae8	nop
0000000000010aec	str	x8, [x23, #0x10]!
0000000000010af0	stur	xzr, [x23, #-0x8]
0000000000010af4	str	x23, [sp, #0x78]
0000000000010af8	ldp	x9, x8, [x26, #0x128]
0000000000010afc	cmp	x9, x8
0000000000010b00	b.hs	0x10b2c
0000000000010b04	stp	x22, x23, [x9]
0000000000010b08	add	x8, x9, #0x10
0000000000010b0c	str	x8, [x26, #0x128]
0000000000010b10	b	0x10bcc
0000000000010b14	str	x23, [sp, #0x78]
0000000000010b18	ldr	x25, [sp, #0x28]
0000000000010b1c	b	0x10c24
0000000000010b20	ldur	x23, [x9, #-0x8]
0000000000010b24	str	x23, [sp, #0x78]
0000000000010b28	b	0x10c24
0000000000010b2c	ldr	x10, [sp, #0x20]
0000000000010b30	ldr	x10, [x10]
0000000000010b34	sub	x9, x9, x10
0000000000010b38	asr	x9, x9, #4
0000000000010b3c	str	x9, [sp, #0x10]
0000000000010b40	add	x9, x9, #0x1
0000000000010b44	lsr	x11, x9, #60
0000000000010b48	cbnz	x11, 0x11328
0000000000010b4c	sub	x8, x8, x10
0000000000010b50	asr	x10, x8, #3
0000000000010b54	cmp	x10, x9
0000000000010b58	csel	x9, x9, x10, lo
0000000000010b5c	mov	x10, #0x7ffffffffffffff
0000000000010b60	cmp	x10, x8, asr #4
0000000000010b64	mov	x8, #0xfffffffffffffff
0000000000010b68	csel	x25, x9, x8, hi
0000000000010b6c	mov	x0, x25
0000000000010b70	mov	w1, #0x10
0000000000010b74	bl	0x55aec ; symbol stub for: _calloc
0000000000010b78	ldr	x8, [sp, #0x10]
0000000000010b7c	add	x8, x0, x8, lsl #4
0000000000010b80	add	x10, x0, x25, lsl #4
0000000000010b84	stp	x22, x23, [x8]
0000000000010b88	add	x11, x8, #0x10
0000000000010b8c	ldp	x1, x9, [x26, #0x120]
0000000000010b90	sub	x2, x9, x1
0000000000010b94	sub	x25, x8, x2
0000000000010b98	cmp	x2, #0x1
0000000000010b9c	b.lt	0x10bb8
0000000000010ba0	mov	x0, x25
0000000000010ba4	stp	x11, x10, [sp, #0x8]
0000000000010ba8	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000010bac	ldp	x11, x10, [sp, #0x8]
0000000000010bb0	ldr	x8, [sp, #0x20]
0000000000010bb4	ldr	x1, [x8]
0000000000010bb8	stp	x25, x11, [x26, #0x120]
0000000000010bbc	str	x10, [x26, #0x130]
0000000000010bc0	cbz	x1, 0x10bcc
0000000000010bc4	mov	x0, x1
0000000000010bc8	bl	0x55b7c ; symbol stub for: _free
0000000000010bcc	mov	x0, x23
0000000000010bd0	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
0000000000010bd4	ldr	x25, [sp, #0x28]
0000000000010bd8	mov	w0, #0x1
0000000000010bdc	mov	w1, #0x28
0000000000010be0	bl	0x55aec ; symbol stub for: _calloc
0000000000010be4	mov	x8, x26
0000000000010be8	ldr	x9, [x8, #0x18]!
0000000000010bec	sub	x10, x8, #0x8
0000000000010bf0	stp	x22, x10, [x0, #0x10]
0000000000010bf4	stp	x9, x8, [x0]
0000000000010bf8	str	x0, [x9, #0x8]
0000000000010bfc	str	x0, [x8]
0000000000010c00	ldr	x9, [x8, #0x10]
0000000000010c04	add	x9, x9, #0x1
0000000000010c08	str	x9, [x8, #0x10]
0000000000010c0c	str	x0, [x0, #0x20]
0000000000010c10	stlr	x23, [x22]
0000000000010c14	ldr	x9, [x8, #0x110]
0000000000010c18	sub	x9, x9, #0x10
0000000000010c1c	str	x9, [x8, #0x110]
0000000000010c20	ldr	w5, [sp, #0x18]
0000000000010c24	lsl	x25, x25, x20
0000000000010c28	add	w8, w21, w5
0000000000010c2c	sub	w8, w8, #0x1
0000000000010c30	ldr	d0, [x23, #0x8]
0000000000010c34	scvtf	d1, w8
0000000000010c38	fmul	d0, d0, d1
0000000000010c3c	nop
0000000000010c40	ldr	d1, 0x57fd8
0000000000010c44	fadd	d0, d0, d1
0000000000010c48	frintp	d0, d0
0000000000010c4c	fcmp	d0, d0
0000000000010c50	b.vs	0x110e0
0000000000010c54	mov	x8, #0xffffffc00000
0000000000010c58	movk	x8, #0x41df, lsl #48
0000000000010c5c	fmov	d1, x8
0000000000010c60	fcmp	d0, d1
0000000000010c64	b.ge	0x10c94
0000000000010c68	mov	x8, #-0x3e20000000000000
0000000000010c6c	fmov	d1, x8
0000000000010c70	fcmp	d0, d1
0000000000010c74	b.ls	0x10d80
0000000000010c78	fcvtzs	w21, d0
0000000000010c7c	cmp	w21, #0x1
0000000000010c80	b.lt	0x10e80
0000000000010c84	ldar	x20, [x22]
0000000000010c88	cmp	x20, #0x2
0000000000010c8c	b.lo	0x10ca4
0000000000010c90	b	0x10f78
0000000000010c94	mov	w21, #0x7fffffff
0000000000010c98	ldar	x20, [x22]
0000000000010c9c	cmp	x20, #0x2
0000000000010ca0	b.hs	0x10f78
0000000000010ca4	ldp	x8, x9, [x26, #0x120]
0000000000010ca8	cmp	x8, x9
0000000000010cac	b.eq	0x10ccc
0000000000010cb0	mov	x10, x9
0000000000010cb4	ldr	x11, [x10, #-0x10]!
0000000000010cb8	cmp	x11, x22
0000000000010cbc	b.eq	0x10e74
0000000000010cc0	mov	x9, x10
0000000000010cc4	cmp	x10, x8
0000000000010cc8	b.ne	0x10cb4
0000000000010ccc	add	x8, x26, #0x120
0000000000010cd0	str	x8, [sp, #0x28]
0000000000010cd4	add	x0, x26, #0x138
0000000000010cd8	mov	w9, #0x1
0000000000010cdc	ldaxr	w8, [x0]
0000000000010ce0	stlxr	w10, w9, [x0]
0000000000010ce4	cbnz	w10, 0x10cdc
0000000000010ce8	b	0x10cf8
0000000000010cec	mov	w23, #0x1
0000000000010cf0	stlxr	w9, x23, [x22]
0000000000010cf4	cbz	w9, 0x10d08
0000000000010cf8	ldaxr	x20, [x22]
0000000000010cfc	cbz	x20, 0x10cec
0000000000010d00	mov	w23, #0x0
0000000000010d04	clrex
0000000000010d08	cmp	x20, #0x1
0000000000010d0c	b.eq	0x10cf8
0000000000010d10	cbz	x26, 0x10d38
0000000000010d14	ldaxr	w9, [x0]
0000000000010d18	stlxr	w10, w8, [x0]
0000000000010d1c	cbnz	w10, 0x10d14
0000000000010d20	cbnz	w8, 0x10d38
0000000000010d24	cmp	w9, #0x1
0000000000010d28	b.ne	0x10d38
0000000000010d2c	ldarb	w8, [x27]
0000000000010d30	tbz	w8, #0x0, 0x10d38
0000000000010d34	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000010d38	tbz	w23, #0x0, 0x10e6c
0000000000010d3c	ldr	x8, [x26, #0x118]
0000000000010d40	add	x0, x8, #0x70
0000000000010d44	mov	w1, #0x20
0000000000010d48	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000010d4c	mov	x20, x0
0000000000010d50	adr	x8, #0x51f40
0000000000010d54	nop
0000000000010d58	str	x8, [x20, #0x10]!
0000000000010d5c	stur	xzr, [x20, #-0x8]
0000000000010d60	str	x20, [sp, #0x80]
0000000000010d64	ldp	x9, x8, [x26, #0x128]
0000000000010d68	cmp	x9, x8
0000000000010d6c	b.hs	0x10e88
0000000000010d70	stp	x22, x20, [x9]
0000000000010d74	add	x8, x9, #0x10
0000000000010d78	str	x8, [x26, #0x128]
0000000000010d7c	b	0x10f28
0000000000010d80	mov	w21, #-0x80000000
0000000000010d84	ldar	x20, [x22]
0000000000010d88	cmp	x20, #0x2
0000000000010d8c	b.hs	0x110a8
0000000000010d90	ldp	x8, x9, [x26, #0x120]
0000000000010d94	cmp	x8, x9
0000000000010d98	b.eq	0x10db8
0000000000010d9c	mov	x10, x9
0000000000010da0	ldr	x11, [x10, #-0x10]!
0000000000010da4	cmp	x11, x22
0000000000010da8	b.eq	0x10fac
0000000000010dac	mov	x9, x10
0000000000010db0	cmp	x10, x8
0000000000010db4	b.ne	0x10da0
0000000000010db8	add	x8, x26, #0x120
0000000000010dbc	str	x8, [sp, #0x28]
0000000000010dc0	add	x0, x26, #0x138
0000000000010dc4	mov	w9, #0x1
0000000000010dc8	ldaxr	w8, [x0]
0000000000010dcc	stlxr	w10, w9, [x0]
0000000000010dd0	cbnz	w10, 0x10dc8
0000000000010dd4	b	0x10de4
0000000000010dd8	mov	w23, #0x1
0000000000010ddc	stlxr	w9, x23, [x22]
0000000000010de0	cbz	w9, 0x10df4
0000000000010de4	ldaxr	x20, [x22]
0000000000010de8	cbz	x20, 0x10dd8
0000000000010dec	mov	w23, #0x0
0000000000010df0	clrex
0000000000010df4	cmp	x20, #0x1
0000000000010df8	b.eq	0x10de4
0000000000010dfc	cbz	x26, 0x10e24
0000000000010e00	ldaxr	w9, [x0]
0000000000010e04	stlxr	w10, w8, [x0]
0000000000010e08	cbnz	w10, 0x10e00
0000000000010e0c	cbnz	w8, 0x10e24
0000000000010e10	cmp	w9, #0x1
0000000000010e14	b.ne	0x10e24
0000000000010e18	ldarb	w8, [x27]
0000000000010e1c	tbz	w8, #0x0, 0x10e24
0000000000010e20	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000010e24	tbz	w23, #0x0, 0x10fa4
0000000000010e28	ldr	x8, [x26, #0x118]
0000000000010e2c	add	x0, x8, #0x70
0000000000010e30	mov	w1, #0x20
0000000000010e34	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000010e38	mov	x20, x0
0000000000010e3c	adr	x8, #0x51e54
0000000000010e40	nop
0000000000010e44	str	x8, [x20, #0x10]!
0000000000010e48	stur	xzr, [x20, #-0x8]
0000000000010e4c	str	x20, [sp, #0x88]
0000000000010e50	ldp	x9, x8, [x26, #0x128]
0000000000010e54	cmp	x9, x8
0000000000010e58	b.hs	0x10fb8
0000000000010e5c	stp	x22, x20, [x9]
0000000000010e60	add	x8, x9, #0x10
0000000000010e64	str	x8, [x26, #0x128]
0000000000010e68	b	0x11058
0000000000010e6c	str	x20, [sp, #0x80]
0000000000010e70	b	0x10f78
0000000000010e74	ldur	x20, [x9, #-0x8]
0000000000010e78	str	x20, [sp, #0x80]
0000000000010e7c	b	0x10f78
0000000000010e80	tbz	w21, #0x1f, 0x110cc
0000000000010e84	b	0x10d84
0000000000010e88	ldr	x10, [sp, #0x28]
0000000000010e8c	ldr	x10, [x10]
0000000000010e90	sub	x9, x9, x10
0000000000010e94	asr	x9, x9, #4
0000000000010e98	str	x9, [sp, #0x20]
0000000000010e9c	add	x9, x9, #0x1
0000000000010ea0	lsr	x11, x9, #60
0000000000010ea4	cbnz	x11, 0x11330
0000000000010ea8	sub	x8, x8, x10
0000000000010eac	asr	x10, x8, #3
0000000000010eb0	cmp	x10, x9
0000000000010eb4	csel	x9, x9, x10, lo
0000000000010eb8	mov	x10, #0x7ffffffffffffff
0000000000010ebc	cmp	x10, x8, asr #4
0000000000010ec0	mov	x8, #0xfffffffffffffff
0000000000010ec4	csel	x23, x9, x8, hi
0000000000010ec8	mov	x0, x23
0000000000010ecc	mov	w1, #0x10
0000000000010ed0	bl	0x55aec ; symbol stub for: _calloc
0000000000010ed4	ldr	x8, [sp, #0x20]
0000000000010ed8	add	x8, x0, x8, lsl #4
0000000000010edc	add	x10, x0, x23, lsl #4
0000000000010ee0	stp	x22, x20, [x8]
0000000000010ee4	add	x11, x8, #0x10
0000000000010ee8	ldp	x1, x9, [x26, #0x120]
0000000000010eec	sub	x2, x9, x1
0000000000010ef0	sub	x23, x8, x2
0000000000010ef4	cmp	x2, #0x1
0000000000010ef8	b.lt	0x10f14
0000000000010efc	mov	x0, x23
0000000000010f00	stp	x11, x10, [sp, #0x18]
0000000000010f04	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000010f08	ldp	x11, x10, [sp, #0x18]
0000000000010f0c	ldr	x8, [sp, #0x28]
0000000000010f10	ldr	x1, [x8]
0000000000010f14	stp	x23, x11, [x26, #0x120]
0000000000010f18	str	x10, [x26, #0x130]
0000000000010f1c	cbz	x1, 0x10f28
0000000000010f20	mov	x0, x1
0000000000010f24	bl	0x55b7c ; symbol stub for: _free
0000000000010f28	mov	x0, x20
0000000000010f2c	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
0000000000010f30	mov	w0, #0x1
0000000000010f34	mov	w1, #0x28
0000000000010f38	bl	0x55aec ; symbol stub for: _calloc
0000000000010f3c	mov	x8, x26
0000000000010f40	ldr	x9, [x8, #0x18]!
0000000000010f44	sub	x10, x8, #0x8
0000000000010f48	stp	x22, x10, [x0, #0x10]
0000000000010f4c	stp	x9, x8, [x0]
0000000000010f50	str	x0, [x9, #0x8]
0000000000010f54	str	x0, [x8]
0000000000010f58	ldr	x9, [x8, #0x10]
0000000000010f5c	add	x9, x9, #0x1
0000000000010f60	str	x9, [x8, #0x10]
0000000000010f64	str	x0, [x0, #0x20]
0000000000010f68	stlr	x20, [x22]
0000000000010f6c	ldr	x9, [x8, #0x110]
0000000000010f70	sub	x9, x9, #0x10
0000000000010f74	str	x9, [x8, #0x110]
0000000000010f78	ldr	x8, [x20, #0x10]
0000000000010f7c	ldr	w9, [x8, #0x8]
0000000000010f80	cmp	w9, w21
0000000000010f84	b.ls	0x11324
0000000000010f88	add	x8, x8, w21, sxtw #3
0000000000010f8c	ldr	x8, [x8, #0x10]
0000000000010f90	mul	x28, x28, x8
0000000000010f94	add	x8, x25, x24
0000000000010f98	cmp	x8, x28
0000000000010f9c	b.gt	0x110d8
0000000000010fa0	b	0x110f0
0000000000010fa4	str	x20, [sp, #0x88]
0000000000010fa8	b	0x110a8
0000000000010fac	ldur	x20, [x9, #-0x8]
0000000000010fb0	str	x20, [sp, #0x88]
0000000000010fb4	b	0x110a8
0000000000010fb8	ldr	x10, [sp, #0x28]
0000000000010fbc	ldr	x10, [x10]
0000000000010fc0	sub	x9, x9, x10
0000000000010fc4	asr	x9, x9, #4
0000000000010fc8	str	x9, [sp, #0x20]
0000000000010fcc	add	x9, x9, #0x1
0000000000010fd0	lsr	x11, x9, #60
0000000000010fd4	cbnz	x11, 0x11330
0000000000010fd8	sub	x8, x8, x10
0000000000010fdc	asr	x10, x8, #3
0000000000010fe0	cmp	x10, x9
0000000000010fe4	csel	x9, x9, x10, lo
0000000000010fe8	mov	x10, #0x7ffffffffffffff
0000000000010fec	cmp	x10, x8, asr #4
0000000000010ff0	mov	x8, #0xfffffffffffffff
0000000000010ff4	csel	x23, x9, x8, hi
0000000000010ff8	mov	x0, x23
0000000000010ffc	mov	w1, #0x10
0000000000011000	bl	0x55aec ; symbol stub for: _calloc
0000000000011004	ldr	x8, [sp, #0x20]
0000000000011008	add	x8, x0, x8, lsl #4
000000000001100c	add	x10, x0, x23, lsl #4
0000000000011010	stp	x22, x20, [x8]
0000000000011014	add	x11, x8, #0x10
0000000000011018	ldp	x1, x9, [x26, #0x120]
000000000001101c	sub	x2, x9, x1
0000000000011020	sub	x23, x8, x2
0000000000011024	cmp	x2, #0x1
0000000000011028	b.lt	0x11044
000000000001102c	mov	x0, x23
0000000000011030	stp	x11, x10, [sp, #0x18]
0000000000011034	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000011038	ldp	x11, x10, [sp, #0x18]
000000000001103c	ldr	x8, [sp, #0x28]
0000000000011040	ldr	x1, [x8]
0000000000011044	stp	x23, x11, [x26, #0x120]
0000000000011048	str	x10, [x26, #0x130]
000000000001104c	cbz	x1, 0x11058
0000000000011050	mov	x0, x1
0000000000011054	bl	0x55b7c ; symbol stub for: _free
0000000000011058	mov	x0, x20
000000000001105c	bl	"_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}"
0000000000011060	mov	w0, #0x1
0000000000011064	mov	w1, #0x28
0000000000011068	bl	0x55aec ; symbol stub for: _calloc
000000000001106c	mov	x8, x26
0000000000011070	ldr	x9, [x8, #0x18]!
0000000000011074	sub	x10, x8, #0x8
0000000000011078	stp	x22, x10, [x0, #0x10]
000000000001107c	stp	x9, x8, [x0]
0000000000011080	str	x0, [x9, #0x8]
0000000000011084	str	x0, [x8]
0000000000011088	ldr	x9, [x8, #0x10]
000000000001108c	add	x9, x9, #0x1
0000000000011090	str	x9, [x8, #0x10]
0000000000011094	str	x0, [x0, #0x20]
0000000000011098	stlr	x20, [x22]
000000000001109c	ldr	x9, [x8, #0x110]
00000000000110a0	sub	x9, x9, #0x10
00000000000110a4	str	x9, [x8, #0x110]
00000000000110a8	ldr	x8, [x20, #0x10]
00000000000110ac	neg	w9, w21
00000000000110b0	ldr	w10, [x8, #0x8]
00000000000110b4	cmp	w10, w9
00000000000110b8	b.ls	0x11324
00000000000110bc	add	x8, x8, w9, sxtw #3
00000000000110c0	ldr	x8, [x8, #0x10]
00000000000110c4	mul	x25, x25, x8
00000000000110c8	mul	x24, x24, x8
00000000000110cc	add	x8, x25, x24
00000000000110d0	cmp	x8, x28
00000000000110d4	b.le	0x110f0
00000000000110d8	str	w21, [x19, #0x18]
00000000000110dc	b	0x11108
00000000000110e0	mov	w21, #0x0
00000000000110e4	add	x8, x25, x24
00000000000110e8	cmp	x8, x28
00000000000110ec	b.gt	0x110d8
00000000000110f0	sub	w8, w21, #0x1
00000000000110f4	str	w8, [x19, #0x18]
00000000000110f8	add	x8, x25, x25, lsl #2
00000000000110fc	lsl	x25, x8, #1
0000000000011100	add	x8, x24, x24, lsl #2
0000000000011104	lsl	x24, x8, #1
0000000000011108	str	xzr, [x19, #0x10]
000000000001110c	lsl	x8, x28, #1
0000000000011110	lsl	x9, x28, #2
0000000000011114	lsl	x10, x28, #3
0000000000011118	add	x11, sp, #0x30
000000000001111c	stp	x11, x11, [sp, #0x90]
0000000000011120	stp	x11, x11, [sp, #0xa0]
0000000000011124	ldr	x12, [sp, #0x30]
0000000000011128	stp	x28, x8, [sp, #0x40]
000000000001112c	ldr	x12, [sp, #0x30]
0000000000011130	stp	x11, x11, [sp, #0xb0]
0000000000011134	ldr	x8, [sp, #0x30]
0000000000011138	stp	x9, x10, [sp, #0x50]
000000000001113c	ldr	x8, [sp, #0x30]
0000000000011140	str	x11, [sp, #0xc0]
0000000000011144	ldarb	w8, [x27]
0000000000011148	tbnz	w8, #0x0, 0x11164
000000000001114c	ldarb	w8, [x27]
0000000000011150	tbnz	w8, #0x0, 0x11170
0000000000011154	ldr	w8, [sp, #0x38]
0000000000011158	cmp	w8, #0x3
000000000001115c	b.hi	0x11180
0000000000011160	b	0x11324
0000000000011164	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011168	ldarb	w8, [x27]
000000000001116c	tbz	w8, #0x0, 0x11154
0000000000011170	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011174	ldr	w8, [sp, #0x38]
0000000000011178	cmp	w8, #0x3
000000000001117c	b.ls	0x11324
0000000000011180	ldr	x8, [sp, #0x58]
0000000000011184	sub	x21, x25, x8
0000000000011188	cmp	x21, #0x0
000000000001118c	csel	x20, x21, x25, ge
0000000000011190	ldarb	w8, [x27]
0000000000011194	tbz	w8, #0x0, 0x1119c
0000000000011198	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001119c	ldr	w8, [sp, #0x38]
00000000000111a0	cmp	w8, #0x3
00000000000111a4	b.lo	0x11324
00000000000111a8	lsr	x8, x21, #60
00000000000111ac	mvn	w8, w8
00000000000111b0	and	w8, w8, #0x8
00000000000111b4	ldr	x9, [sp, #0x50]
00000000000111b8	sub	x9, x20, x9
00000000000111bc	orr	w10, w8, #0x4
00000000000111c0	cmp	x9, #0x0
00000000000111c4	csel	w21, w10, w8, ge
00000000000111c8	csel	x20, x9, x20, ge
00000000000111cc	ldarb	w8, [x27]
00000000000111d0	tbz	w8, #0x0, 0x111d8
00000000000111d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000111d8	ldr	w8, [sp, #0x38]
00000000000111dc	cmp	w8, #0x2
00000000000111e0	b.lo	0x11324
00000000000111e4	ldr	x8, [sp, #0x48]
00000000000111e8	sub	x8, x20, x8
00000000000111ec	orr	w9, w21, #0x2
00000000000111f0	cmp	x8, #0x0
00000000000111f4	csel	w21, w9, w21, ge
00000000000111f8	csel	x20, x8, x20, ge
00000000000111fc	ldarb	w8, [x27]
0000000000011200	tbz	w8, #0x0, 0x11208
0000000000011204	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011208	ldr	w8, [sp, #0x38]
000000000001120c	cbz	w8, 0x11324
0000000000011210	ldr	x8, [sp, #0x40]
0000000000011214	sub	x9, x20, x8
0000000000011218	lsr	x8, x9, #63
000000000001121c	orr	w8, w21, w8
0000000000011220	eor	w8, w8, #0x1
0000000000011224	cmp	x9, #0x0
0000000000011228	csel	x11, x9, x20, ge
000000000001122c	add	x12, x11, x24
0000000000011230	cmp	x11, x24
0000000000011234	b.lt	0x11288
0000000000011238	ldr	x9, [x19, #0x8]
000000000001123c	ldr	w10, [x19, #0x10]
0000000000011240	add	w13, w10, #0x1
0000000000011244	str	w13, [x19, #0x10]
0000000000011248	ldr	w13, [x9, #0x8]
000000000001124c	cmp	x12, x28
0000000000011250	b.gt	0x112b8
0000000000011254	cmp	w13, w10
0000000000011258	b.ls	0x11324
000000000001125c	sxtw	x10, w10
0000000000011260	add	x12, x24, x24, lsl #2
0000000000011264	lsl	x24, x12, #1
0000000000011268	add	x11, x11, x11, lsl #2
000000000001126c	ldr	xzr, [x9]
0000000000011270	add	x9, x9, x10, lsl #2
0000000000011274	str	w8, [x9, #0x10]
0000000000011278	lsl	x25, x11, #1
000000000001127c	ldarb	w8, [x27]
0000000000011280	tbnz	w8, #0x0, 0x11164
0000000000011284	b	0x1114c
0000000000011288	cmp	x12, x28
000000000001128c	b.le	0x112c4
0000000000011290	ldr	x9, [x19, #0x8]
0000000000011294	ldr	w10, [x19, #0x10]
0000000000011298	add	w12, w10, #0x1
000000000001129c	str	w12, [x19, #0x10]
00000000000112a0	ldr	w12, [x9, #0x8]
00000000000112a4	cmp	x28, x11, lsl #1
00000000000112a8	b.le	0x112e4
00000000000112ac	cmp	w12, w10
00000000000112b0	b.hi	0x112f0
00000000000112b4	b	0x11324
00000000000112b8	cmp	w13, w10
00000000000112bc	b.hi	0x112ec
00000000000112c0	b	0x11324
00000000000112c4	ldr	x9, [x19, #0x8]
00000000000112c8	ldr	w10, [x19, #0x10]
00000000000112cc	add	w11, w10, #0x1
00000000000112d0	str	w11, [x19, #0x10]
00000000000112d4	ldr	w11, [x9, #0x8]
00000000000112d8	cmp	w11, w10
00000000000112dc	b.hi	0x112f0
00000000000112e0	b	0x11324
00000000000112e4	cmp	w12, w10
00000000000112e8	b.ls	0x11324
00000000000112ec	add	w8, w8, #0x1
00000000000112f0	ldr	xzr, [x9]
00000000000112f4	add	x9, x9, w10, sxtw #2
00000000000112f8	str	w8, [x9, #0x10]
00000000000112fc	ldr	x8, [sp, #0x68]
0000000000011300	str	x8, [x26, #0x110]
0000000000011304	ldp	x29, x30, [sp, #0x120]
0000000000011308	ldp	x20, x19, [sp, #0x110]
000000000001130c	ldp	x22, x21, [sp, #0x100]
0000000000011310	ldp	x24, x23, [sp, #0xf0]
0000000000011314	ldp	x26, x25, [sp, #0xe0]
0000000000011318	ldp	x28, x27, [sp, #0xd0]
000000000001131c	add	sp, sp, #0x130
0000000000011320	ret
0000000000011324	bl	_ThrowArrayIndexOutOfBoundsException
0000000000011328	ldr	x0, [sp, #0x20]
000000000001132c	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000011330	ldr	x0, [sp, #0x28]
0000000000011334	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000011338	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000001133c	str	xzr, [sp, #0x88]
0000000000011340	stlr	xzr, [x22]
0000000000011344	ldr	x8, [x26, #0x128]
0000000000011348	sub	x8, x8, #0x10
000000000001134c	str	x8, [x26, #0x128]
0000000000011350	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
0000000000011354	b	0x1139c
0000000000011358	b	0x113a0
000000000001135c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000011360	str	xzr, [sp, #0x80]
0000000000011364	stlr	xzr, [x22]
0000000000011368	ldr	x8, [x26, #0x128]
000000000001136c	sub	x8, x8, #0x10
0000000000011370	str	x8, [x26, #0x128]
0000000000011374	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
0000000000011378	b	0x1139c
000000000001137c	b	0x113a0
0000000000011380	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000011384	str	xzr, [sp, #0x78]
0000000000011388	stlr	xzr, [x22]
000000000001138c	ldr	x8, [x26, #0x128]
0000000000011390	sub	x8, x8, #0x10
0000000000011394	str	x8, [x26, #0x128]
0000000000011398	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
000000000001139c	brk	#0x1
00000000000113a0	mov	x19, x0
00000000000113a4	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
00000000000113a8	mov	x0, x19
00000000000113ac	bl	0x558ac ; symbol stub for: __Unwind_Resume
_kfun:kotlin.native.internal.NumberConverter.Companion#<init>(){}:
00000000000113b0	sub	sp, sp, #0x60
00000000000113b4	stp	x24, x23, [sp, #0x20]
00000000000113b8	stp	x22, x21, [sp, #0x30]
00000000000113bc	stp	x20, x19, [sp, #0x40]
00000000000113c0	stp	x29, x30, [sp, #0x50]
00000000000113c4	add	x29, sp, #0x50
00000000000113c8	mov	x19, x0
00000000000113cc	movi.16b	v0, #0x0
00000000000113d0	stp	q0, q0, [sp]
00000000000113d4	adrp	x0, 105 ; 0x7a000
00000000000113d8	add	x0, x0, #0x4e0
00000000000113dc	ldr	x8, [x0]
00000000000113e0	blr	x8
00000000000113e4	ldr	x20, [x0]
00000000000113e8	ldr	x8, [x20, #0x110]
00000000000113ec	mov	x9, sp
00000000000113f0	str	x9, [x20, #0x110]
00000000000113f4	mov	x9, #0x400000000
00000000000113f8	stp	x8, x9, [sp, #0x8]
00000000000113fc	adr	x21, #0x8310d
0000000000011400	nop
0000000000011404	ldarb	w8, [x21]
0000000000011408	tbz	w8, #0x0, 0x11410
000000000001140c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011410	mov	x8, #0x79fe
0000000000011414	movk	x8, #0x509f, lsl #16
0000000000011418	movk	x8, #0x4413, lsl #32
000000000001141c	movk	x8, #0x3fd3, lsl #48
0000000000011420	str	x8, [x19, #0x8]
0000000000011424	ldr	x8, [x20, #0x118]
0000000000011428	add	x0, x8, #0x70
000000000001142c	mov	w1, #0xb8
0000000000011430	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011434	str	xzr, [x0, #0x18]
0000000000011438	str	xzr, [x0, #0x8]
000000000001143c	adr	x8, #0x4fba4
0000000000011440	nop
0000000000011444	mov	x9, x0
0000000000011448	str	x8, [x9, #0x10]!
000000000001144c	mov	w8, #0x14
0000000000011450	str	w8, [x0, #0x18]
0000000000011454	str	x9, [sp, #0x18]
0000000000011458	str	x9, [x19, #0x10]
000000000001145c	cbz	w8, 0x114e4
0000000000011460	ldr	xzr, [x0, #0x10]
0000000000011464	mov	w8, #0x1
0000000000011468	str	x8, [x0, #0x20]
000000000001146c	ldr	x8, [x19, #0x10]
0000000000011470	ldr	w8, [x8, #0x8]
0000000000011474	cmp	w8, #0x2
0000000000011478	b.lt	0x114c4
000000000001147c	mov	x22, #0x0
0000000000011480	sub	x23, x8, #0x1
0000000000011484	ldarb	w8, [x21]
0000000000011488	tbz	w8, #0x0, 0x11490
000000000001148c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011490	ldr	x8, [x19, #0x10]
0000000000011494	ldr	w9, [x8, #0x8]
0000000000011498	cmp	x22, x9
000000000001149c	b.hs	0x114e4
00000000000114a0	add	x9, x8, x22, lsl #3
00000000000114a4	ldr	x10, [x9, #0x10]
00000000000114a8	add	x10, x10, x10, lsl #2
00000000000114ac	lsl	x10, x10, #1
00000000000114b0	ldr	xzr, [x8]
00000000000114b4	str	x10, [x9, #0x18]
00000000000114b8	add	x22, x22, #0x1
00000000000114bc	cmp	x23, x22
00000000000114c0	b.ne	0x11484
00000000000114c4	ldr	x8, [sp, #0x8]
00000000000114c8	str	x8, [x20, #0x110]
00000000000114cc	ldp	x29, x30, [sp, #0x50]
00000000000114d0	ldp	x20, x19, [sp, #0x40]
00000000000114d4	ldp	x22, x21, [sp, #0x30]
00000000000114d8	ldp	x24, x23, [sp, #0x20]
00000000000114dc	add	sp, sp, #0x60
00000000000114e0	ret
00000000000114e4	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.native.internal.NumberConverter.Companion.<get-converter>#internal:
00000000000114e8	sub	sp, sp, #0x50
00000000000114ec	stp	x22, x21, [sp, #0x20]
00000000000114f0	stp	x20, x19, [sp, #0x30]
00000000000114f4	stp	x29, x30, [sp, #0x40]
00000000000114f8	add	x29, sp, #0x40
00000000000114fc	mov	x19, x0
0000000000011500	adr	x8, #0x83009
0000000000011504	nop
0000000000011508	ldarb	w8, [x8]
000000000001150c	tbz	w8, #0x0, 0x11514
0000000000011510	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011514	adrp	x0, 105 ; 0x7a000
0000000000011518	add	x0, x0, #0x4e0
000000000001151c	ldr	x8, [x0]
0000000000011520	blr	x8
0000000000011524	mov	x20, x0
0000000000011528	ldr	x8, [x0]
000000000001152c	ldr	x8, [x8, #0x118]
0000000000011530	add	x0, x8, #0x70
0000000000011534	mov	w1, #0x28
0000000000011538	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001153c	mov	x21, x0
0000000000011540	adr	x8, #0x516c0
0000000000011544	nop
0000000000011548	str	x8, [x21, #0x10]!
000000000001154c	stur	xzr, [x21, #-0x8]
0000000000011550	str	x21, [x19]
0000000000011554	ldr	x8, [x20]
0000000000011558	mov	x9, sp
000000000001155c	ldp	x10, x11, [x8, #0x110]
0000000000011560	str	x9, [x8, #0x110]
0000000000011564	movi.16b	v0, #0x0
0000000000011568	stp	q0, q0, [sp]
000000000001156c	mov	x8, #0x400000000
0000000000011570	stp	x10, x8, [sp, #0x8]
0000000000011574	add	x0, x11, #0x70
0000000000011578	mov	w1, #0x118
000000000001157c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011580	str	xzr, [x0, #0x10]!
0000000000011584	adr	x8, #0x4f9cc
0000000000011588	nop
000000000001158c	stp	xzr, x8, [x0, #-0x8]
0000000000011590	str	xzr, [x0, #0x8]
0000000000011594	mov	w8, #0x40
0000000000011598	str	w8, [x0, #0x8]
000000000001159c	str	x0, [sp, #0x18]
00000000000115a0	str	x0, [x21, #0x8]
00000000000115a4	ldr	x8, [x20]
00000000000115a8	ldr	x9, [sp, #0x8]
00000000000115ac	str	x9, [x8, #0x110]
00000000000115b0	str	x21, [x19]
00000000000115b4	mov	x0, x21
00000000000115b8	ldp	x29, x30, [sp, #0x40]
00000000000115bc	ldp	x20, x19, [sp, #0x30]
00000000000115c0	ldp	x22, x21, [sp, #0x20]
00000000000115c4	add	sp, sp, #0x50
00000000000115c8	ret
_Kotlin_Collection_getSize:
00000000000115cc	sub	sp, sp, #0x50
00000000000115d0	stp	x22, x21, [sp, #0x20]
00000000000115d4	stp	x20, x19, [sp, #0x30]
00000000000115d8	stp	x29, x30, [sp, #0x40]
00000000000115dc	add	x29, sp, #0x40
00000000000115e0	mov	x20, x0
00000000000115e4	str	xzr, [sp, #0x8]
00000000000115e8	adrp	x19, 105 ; 0x7a000
00000000000115ec	add	x19, x19, #0x4e0
00000000000115f0	ldr	x21, [x19]
00000000000115f4	mov	x0, x19
00000000000115f8	blr	x21
00000000000115fc	ldr	x8, [x0]
0000000000011600	ldr	x9, [x8, #0x110]
0000000000011604	add	x10, sp, #0x8
0000000000011608	str	x10, [x8, #0x110]
000000000001160c	mov	x8, #0x300000000
0000000000011610	stp	x9, x8, [sp, #0x10]
0000000000011614	adr	x8, #0x82ef5
0000000000011618	nop
000000000001161c	ldarb	w8, [x8]
0000000000011620	tbz	w8, #0x0, 0x11628
0000000000011624	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011628	ldr	x8, [x20]
000000000001162c	and	x8, x8, #0xfffffffffffffffc
0000000000011630	ldr	x8, [x8]
0000000000011634	ldr	w9, [x8, #0x3c]
0000000000011638	ldr	x8, [x8, #0x40]
000000000001163c	tbnz	w9, #0x1f, 0x1164c
0000000000011640	mov	w10, #0x12
0000000000011644	and	x9, x9, x10
0000000000011648	b	0x116d0
000000000001164c	neg	w10, w9
0000000000011650	mvn	w9, w9
0000000000011654	cmp	w10, #0x9
0000000000011658	b.ge	0x11690
000000000001165c	cmp	w10, #0x2
0000000000011660	b.lt	0x116c4
0000000000011664	mov	x10, #0x0
0000000000011668	mov	x11, x8
000000000001166c	ldr	w12, [x11]
0000000000011670	cmp	w12, #0x11
0000000000011674	b.gt	0x116cc
0000000000011678	add	x10, x10, #0x1
000000000001167c	add	x11, x11, #0x10
0000000000011680	cmp	x9, x10
0000000000011684	b.ne	0x1166c
0000000000011688	mov	x10, x9
000000000001168c	b	0x116cc
0000000000011690	mov	w10, #0x0
0000000000011694	add	w11, w9, w10
0000000000011698	cmp	w11, #0x0
000000000001169c	cinc	w11, w11, lt
00000000000116a0	asr	w11, w11, #1
00000000000116a4	sbfiz	x12, x11, #4, #32
00000000000116a8	ldr	w12, [x8, x12]
00000000000116ac	cmp	w12, #0x12
00000000000116b0	csinc	w10, w10, w11, ge
00000000000116b4	csel	w9, w9, w11, lt
00000000000116b8	cmp	w10, w9
00000000000116bc	b.lt	0x11694
00000000000116c0	b	0x116cc
00000000000116c4	mov	w10, #0x0
00000000000116c8	b	0x116cc
00000000000116cc	sxtw	x9, w10
00000000000116d0	add	x8, x8, x9, lsl #4
00000000000116d4	ldr	x8, [x8, #0x8]
00000000000116d8	ldr	x8, [x8]
00000000000116dc	mov	x0, x20
00000000000116e0	blr	x8
00000000000116e4	mov	x1, x0
00000000000116e8	mov	x0, x19
00000000000116ec	blr	x21
00000000000116f0	ldr	x8, [x0]
00000000000116f4	ldr	x9, [sp, #0x10]
00000000000116f8	str	x9, [x8, #0x110]
00000000000116fc	mov	x0, x1
0000000000011700	ldp	x29, x30, [sp, #0x40]
0000000000011704	ldp	x20, x19, [sp, #0x30]
0000000000011708	ldp	x22, x21, [sp, #0x20]
000000000001170c	add	sp, sp, #0x50
0000000000011710	ret
0000000000011714	mov	x1, x0
0000000000011718	mov	x0, x19
000000000001171c	blr	x21
0000000000011720	ldr	x8, [x0]
0000000000011724	ldr	x9, [sp, #0x10]
0000000000011728	str	x9, [x8, #0x110]
000000000001172c	mov	x0, x1
0000000000011730	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_List_get:
0000000000011734	sub	sp, sp, #0x60
0000000000011738	stp	x24, x23, [sp, #0x20]
000000000001173c	stp	x22, x21, [sp, #0x30]
0000000000011740	stp	x20, x19, [sp, #0x40]
0000000000011744	stp	x29, x30, [sp, #0x50]
0000000000011748	add	x29, sp, #0x50
000000000001174c	mov	x19, x2
0000000000011750	mov	x21, x1
0000000000011754	mov	x22, x0
0000000000011758	str	xzr, [sp, #0x8]
000000000001175c	adrp	x20, 105 ; 0x7a000
0000000000011760	add	x20, x20, #0x4e0
0000000000011764	ldr	x23, [x20]
0000000000011768	mov	x0, x20
000000000001176c	blr	x23
0000000000011770	ldr	x8, [x0]
0000000000011774	ldr	x9, [x8, #0x110]
0000000000011778	add	x10, sp, #0x8
000000000001177c	str	x10, [x8, #0x110]
0000000000011780	mov	x8, #0x300000000
0000000000011784	stp	x9, x8, [sp, #0x10]
0000000000011788	adr	x8, #0x82d81
000000000001178c	nop
0000000000011790	ldarb	w8, [x8]
0000000000011794	tbz	w8, #0x0, 0x1179c
0000000000011798	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001179c	ldr	x8, [x22]
00000000000117a0	and	x8, x8, #0xfffffffffffffffc
00000000000117a4	ldr	x8, [x8]
00000000000117a8	ldr	w9, [x8, #0x3c]
00000000000117ac	ldr	x8, [x8, #0x40]
00000000000117b0	tbnz	w9, #0x1f, 0x117c0
00000000000117b4	mov	w10, #0x2b
00000000000117b8	and	x9, x9, x10
00000000000117bc	b	0x11844
00000000000117c0	neg	w10, w9
00000000000117c4	mvn	w9, w9
00000000000117c8	cmp	w10, #0x9
00000000000117cc	b.ge	0x11804
00000000000117d0	cmp	w10, #0x2
00000000000117d4	b.lt	0x11838
00000000000117d8	mov	x10, #0x0
00000000000117dc	mov	x11, x8
00000000000117e0	ldr	w12, [x11]
00000000000117e4	cmp	w12, #0x2a
00000000000117e8	b.gt	0x11840
00000000000117ec	add	x10, x10, #0x1
00000000000117f0	add	x11, x11, #0x10
00000000000117f4	cmp	x9, x10
00000000000117f8	b.ne	0x117e0
00000000000117fc	mov	x10, x9
0000000000011800	b	0x11840
0000000000011804	mov	w10, #0x0
0000000000011808	add	w11, w9, w10
000000000001180c	cmp	w11, #0x0
0000000000011810	cinc	w11, w11, lt
0000000000011814	asr	w11, w11, #1
0000000000011818	sbfiz	x12, x11, #4, #32
000000000001181c	ldr	w12, [x8, x12]
0000000000011820	cmp	w12, #0x2b
0000000000011824	csinc	w10, w10, w11, ge
0000000000011828	csel	w9, w9, w11, lt
000000000001182c	cmp	w10, w9
0000000000011830	b.lt	0x11808
0000000000011834	b	0x11840
0000000000011838	mov	w10, #0x0
000000000001183c	b	0x11840
0000000000011840	sxtw	x9, w10
0000000000011844	add	x8, x8, x9, lsl #4
0000000000011848	ldr	x8, [x8, #0x8]
000000000001184c	ldr	x8, [x8, #0x18]
0000000000011850	mov	x0, x22
0000000000011854	mov	x1, x21
0000000000011858	mov	x2, x19
000000000001185c	blr	x8
0000000000011860	mov	x8, x0
0000000000011864	str	x0, [x19]
0000000000011868	mov	x0, x20
000000000001186c	blr	x23
0000000000011870	ldr	x9, [x0]
0000000000011874	ldr	x10, [sp, #0x10]
0000000000011878	str	x10, [x9, #0x110]
000000000001187c	mov	x0, x8
0000000000011880	ldp	x29, x30, [sp, #0x50]
0000000000011884	ldp	x20, x19, [sp, #0x40]
0000000000011888	ldp	x22, x21, [sp, #0x30]
000000000001188c	ldp	x24, x23, [sp, #0x20]
0000000000011890	add	sp, sp, #0x60
0000000000011894	ret
0000000000011898	mov	x1, x0
000000000001189c	mov	x0, x20
00000000000118a0	blr	x23
00000000000118a4	ldr	x8, [x0]
00000000000118a8	ldr	x9, [sp, #0x10]
00000000000118ac	str	x9, [x8, #0x110]
00000000000118b0	mov	x0, x1
00000000000118b4	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_MutableCollection_addObject:
00000000000118b8	sub	sp, sp, #0x50
00000000000118bc	stp	x22, x21, [sp, #0x20]
00000000000118c0	stp	x20, x19, [sp, #0x30]
00000000000118c4	stp	x29, x30, [sp, #0x40]
00000000000118c8	add	x29, sp, #0x40
00000000000118cc	mov	x20, x1
00000000000118d0	mov	x21, x0
00000000000118d4	str	xzr, [sp, #0x8]
00000000000118d8	adrp	x19, 105 ; 0x7a000
00000000000118dc	add	x19, x19, #0x4e0
00000000000118e0	ldr	x22, [x19]
00000000000118e4	mov	x0, x19
00000000000118e8	blr	x22
00000000000118ec	ldr	x8, [x0]
00000000000118f0	ldr	x9, [x8, #0x110]
00000000000118f4	add	x10, sp, #0x8
00000000000118f8	str	x10, [x8, #0x110]
00000000000118fc	mov	x8, #0x300000000
0000000000011900	stp	x9, x8, [sp, #0x10]
0000000000011904	adr	x8, #0x82c05
0000000000011908	nop
000000000001190c	ldarb	w8, [x8]
0000000000011910	tbz	w8, #0x0, 0x11918
0000000000011914	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011918	ldr	x8, [x21]
000000000001191c	and	x8, x8, #0xfffffffffffffffc
0000000000011920	ldr	x8, [x8]
0000000000011924	ldr	w9, [x8, #0x3c]
0000000000011928	ldr	x8, [x8, #0x40]
000000000001192c	tbnz	w9, #0x1f, 0x1193c
0000000000011930	mov	w10, #0x15
0000000000011934	and	x9, x9, x10
0000000000011938	b	0x119c0
000000000001193c	neg	w10, w9
0000000000011940	mvn	w9, w9
0000000000011944	cmp	w10, #0x9
0000000000011948	b.ge	0x11980
000000000001194c	cmp	w10, #0x2
0000000000011950	b.lt	0x119b4
0000000000011954	mov	x10, #0x0
0000000000011958	mov	x11, x8
000000000001195c	ldr	w12, [x11]
0000000000011960	cmp	w12, #0x14
0000000000011964	b.gt	0x119bc
0000000000011968	add	x10, x10, #0x1
000000000001196c	add	x11, x11, #0x10
0000000000011970	cmp	x9, x10
0000000000011974	b.ne	0x1195c
0000000000011978	mov	x10, x9
000000000001197c	b	0x119bc
0000000000011980	mov	w10, #0x0
0000000000011984	add	w11, w9, w10
0000000000011988	cmp	w11, #0x0
000000000001198c	cinc	w11, w11, lt
0000000000011990	asr	w11, w11, #1
0000000000011994	sbfiz	x12, x11, #4, #32
0000000000011998	ldr	w12, [x8, x12]
000000000001199c	cmp	w12, #0x15
00000000000119a0	csinc	w10, w10, w11, ge
00000000000119a4	csel	w9, w9, w11, lt
00000000000119a8	cmp	w10, w9
00000000000119ac	b.lt	0x11984
00000000000119b0	b	0x119bc
00000000000119b4	mov	w10, #0x0
00000000000119b8	b	0x119bc
00000000000119bc	sxtw	x9, w10
00000000000119c0	add	x8, x8, x9, lsl #4
00000000000119c4	ldr	x8, [x8, #0x8]
00000000000119c8	ldr	x8, [x8]
00000000000119cc	mov	x0, x21
00000000000119d0	mov	x1, x20
00000000000119d4	blr	x8
00000000000119d8	mov	x0, x19
00000000000119dc	blr	x22
00000000000119e0	ldr	x8, [x0]
00000000000119e4	ldr	x9, [sp, #0x10]
00000000000119e8	str	x9, [x8, #0x110]
00000000000119ec	ldp	x29, x30, [sp, #0x40]
00000000000119f0	ldp	x20, x19, [sp, #0x30]
00000000000119f4	ldp	x22, x21, [sp, #0x20]
00000000000119f8	add	sp, sp, #0x50
00000000000119fc	ret
0000000000011a00	mov	x1, x0
0000000000011a04	mov	x0, x19
0000000000011a08	blr	x22
0000000000011a0c	ldr	x8, [x0]
0000000000011a10	ldr	x9, [sp, #0x10]
0000000000011a14	str	x9, [x8, #0x110]
0000000000011a18	mov	x0, x1
0000000000011a1c	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_Set_contains:
0000000000011a20	sub	sp, sp, #0x50
0000000000011a24	stp	x22, x21, [sp, #0x20]
0000000000011a28	stp	x20, x19, [sp, #0x30]
0000000000011a2c	stp	x29, x30, [sp, #0x40]
0000000000011a30	add	x29, sp, #0x40
0000000000011a34	mov	x20, x1
0000000000011a38	mov	x21, x0
0000000000011a3c	str	xzr, [sp, #0x8]
0000000000011a40	adrp	x19, 105 ; 0x7a000
0000000000011a44	add	x19, x19, #0x4e0
0000000000011a48	ldr	x22, [x19]
0000000000011a4c	mov	x0, x19
0000000000011a50	blr	x22
0000000000011a54	ldr	x8, [x0]
0000000000011a58	ldr	x9, [x8, #0x110]
0000000000011a5c	add	x10, sp, #0x8
0000000000011a60	str	x10, [x8, #0x110]
0000000000011a64	mov	x8, #0x300000000
0000000000011a68	stp	x9, x8, [sp, #0x10]
0000000000011a6c	adr	x8, #0x82a9d
0000000000011a70	nop
0000000000011a74	ldarb	w8, [x8]
0000000000011a78	tbz	w8, #0x0, 0x11a80
0000000000011a7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011a80	ldr	x8, [x21]
0000000000011a84	and	x8, x8, #0xfffffffffffffffc
0000000000011a88	ldr	x8, [x8]
0000000000011a8c	ldr	w9, [x8, #0x3c]
0000000000011a90	ldr	x8, [x8, #0x40]
0000000000011a94	tbnz	w9, #0x1f, 0x11aa0
0000000000011a98	and	x9, x9, #0x1e
0000000000011a9c	b	0x11b24
0000000000011aa0	neg	w10, w9
0000000000011aa4	mvn	w9, w9
0000000000011aa8	cmp	w10, #0x9
0000000000011aac	b.ge	0x11ae4
0000000000011ab0	cmp	w10, #0x2
0000000000011ab4	b.lt	0x11b18
0000000000011ab8	mov	x10, #0x0
0000000000011abc	mov	x11, x8
0000000000011ac0	ldr	w12, [x11]
0000000000011ac4	cmp	w12, #0x1d
0000000000011ac8	b.gt	0x11b20
0000000000011acc	add	x10, x10, #0x1
0000000000011ad0	add	x11, x11, #0x10
0000000000011ad4	cmp	x9, x10
0000000000011ad8	b.ne	0x11ac0
0000000000011adc	mov	x10, x9
0000000000011ae0	b	0x11b20
0000000000011ae4	mov	w10, #0x0
0000000000011ae8	add	w11, w9, w10
0000000000011aec	cmp	w11, #0x0
0000000000011af0	cinc	w11, w11, lt
0000000000011af4	asr	w11, w11, #1
0000000000011af8	sbfiz	x12, x11, #4, #32
0000000000011afc	ldr	w12, [x8, x12]
0000000000011b00	cmp	w12, #0x1e
0000000000011b04	csinc	w10, w10, w11, ge
0000000000011b08	csel	w9, w9, w11, lt
0000000000011b0c	cmp	w10, w9
0000000000011b10	b.lt	0x11ae8
0000000000011b14	b	0x11b20
0000000000011b18	mov	w10, #0x0
0000000000011b1c	b	0x11b20
0000000000011b20	sxtw	x9, w10
0000000000011b24	add	x8, x8, x9, lsl #4
0000000000011b28	ldr	x8, [x8, #0x8]
0000000000011b2c	ldr	x8, [x8, #0x8]
0000000000011b30	mov	x0, x21
0000000000011b34	mov	x1, x20
0000000000011b38	blr	x8
0000000000011b3c	mov	x1, x0
0000000000011b40	mov	x0, x19
0000000000011b44	blr	x22
0000000000011b48	ldr	x8, [x0]
0000000000011b4c	ldr	x9, [sp, #0x10]
0000000000011b50	str	x9, [x8, #0x110]
0000000000011b54	mov	x0, x1
0000000000011b58	ldp	x29, x30, [sp, #0x40]
0000000000011b5c	ldp	x20, x19, [sp, #0x30]
0000000000011b60	ldp	x22, x21, [sp, #0x20]
0000000000011b64	add	sp, sp, #0x50
0000000000011b68	ret
0000000000011b6c	mov	x1, x0
0000000000011b70	mov	x0, x19
0000000000011b74	blr	x22
0000000000011b78	ldr	x8, [x0]
0000000000011b7c	ldr	x9, [sp, #0x10]
0000000000011b80	str	x9, [x8, #0x110]
0000000000011b84	mov	x0, x1
0000000000011b88	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_Set_iterator:
0000000000011b8c	sub	sp, sp, #0x50
0000000000011b90	stp	x22, x21, [sp, #0x20]
0000000000011b94	stp	x20, x19, [sp, #0x30]
0000000000011b98	stp	x29, x30, [sp, #0x40]
0000000000011b9c	add	x29, sp, #0x40
0000000000011ba0	mov	x20, x1
0000000000011ba4	mov	x21, x0
0000000000011ba8	str	xzr, [sp, #0x8]
0000000000011bac	adrp	x19, 105 ; 0x7a000
0000000000011bb0	add	x19, x19, #0x4e0
0000000000011bb4	ldr	x22, [x19]
0000000000011bb8	mov	x0, x19
0000000000011bbc	blr	x22
0000000000011bc0	ldr	x8, [x0]
0000000000011bc4	ldr	x9, [x8, #0x110]
0000000000011bc8	add	x10, sp, #0x8
0000000000011bcc	str	x10, [x8, #0x110]
0000000000011bd0	mov	x8, #0x300000000
0000000000011bd4	stp	x9, x8, [sp, #0x10]
0000000000011bd8	adr	x8, #0x82931
0000000000011bdc	nop
0000000000011be0	ldarb	w8, [x8]
0000000000011be4	tbz	w8, #0x0, 0x11bec
0000000000011be8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011bec	ldr	x8, [x21]
0000000000011bf0	and	x8, x8, #0xfffffffffffffffc
0000000000011bf4	ldr	x8, [x8]
0000000000011bf8	ldr	w9, [x8, #0x3c]
0000000000011bfc	ldr	x8, [x8, #0x40]
0000000000011c00	tbnz	w9, #0x1f, 0x11c0c
0000000000011c04	and	x9, x9, #0x1e
0000000000011c08	b	0x11c90
0000000000011c0c	neg	w10, w9
0000000000011c10	mvn	w9, w9
0000000000011c14	cmp	w10, #0x9
0000000000011c18	b.ge	0x11c50
0000000000011c1c	cmp	w10, #0x2
0000000000011c20	b.lt	0x11c84
0000000000011c24	mov	x10, #0x0
0000000000011c28	mov	x11, x8
0000000000011c2c	ldr	w12, [x11]
0000000000011c30	cmp	w12, #0x1d
0000000000011c34	b.gt	0x11c8c
0000000000011c38	add	x10, x10, #0x1
0000000000011c3c	add	x11, x11, #0x10
0000000000011c40	cmp	x9, x10
0000000000011c44	b.ne	0x11c2c
0000000000011c48	mov	x10, x9
0000000000011c4c	b	0x11c8c
0000000000011c50	mov	w10, #0x0
0000000000011c54	add	w11, w9, w10
0000000000011c58	cmp	w11, #0x0
0000000000011c5c	cinc	w11, w11, lt
0000000000011c60	asr	w11, w11, #1
0000000000011c64	sbfiz	x12, x11, #4, #32
0000000000011c68	ldr	w12, [x8, x12]
0000000000011c6c	cmp	w12, #0x1e
0000000000011c70	csinc	w10, w10, w11, ge
0000000000011c74	csel	w9, w9, w11, lt
0000000000011c78	cmp	w10, w9
0000000000011c7c	b.lt	0x11c54
0000000000011c80	b	0x11c8c
0000000000011c84	mov	w10, #0x0
0000000000011c88	b	0x11c8c
0000000000011c8c	sxtw	x9, w10
0000000000011c90	add	x8, x8, x9, lsl #4
0000000000011c94	ldr	x8, [x8, #0x8]
0000000000011c98	ldr	x8, [x8, #0x20]
0000000000011c9c	mov	x0, x21
0000000000011ca0	mov	x1, x20
0000000000011ca4	blr	x8
0000000000011ca8	mov	x8, x0
0000000000011cac	str	x0, [x20]
0000000000011cb0	mov	x0, x19
0000000000011cb4	blr	x22
0000000000011cb8	ldr	x9, [x0]
0000000000011cbc	ldr	x10, [sp, #0x10]
0000000000011cc0	str	x10, [x9, #0x110]
0000000000011cc4	mov	x0, x8
0000000000011cc8	ldp	x29, x30, [sp, #0x40]
0000000000011ccc	ldp	x20, x19, [sp, #0x30]
0000000000011cd0	ldp	x22, x21, [sp, #0x20]
0000000000011cd4	add	sp, sp, #0x50
0000000000011cd8	ret
0000000000011cdc	mov	x1, x0
0000000000011ce0	mov	x0, x19
0000000000011ce4	blr	x22
0000000000011ce8	ldr	x8, [x0]
0000000000011cec	ldr	x9, [sp, #0x10]
0000000000011cf0	str	x9, [x8, #0x110]
0000000000011cf4	mov	x0, x1
0000000000011cf8	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_MutableSet_createWithCapacity:
0000000000011cfc	sub	sp, sp, #0x90
0000000000011d00	stp	x26, x25, [sp, #0x40]
0000000000011d04	stp	x24, x23, [sp, #0x50]
0000000000011d08	stp	x22, x21, [sp, #0x60]
0000000000011d0c	stp	x20, x19, [sp, #0x70]
0000000000011d10	stp	x29, x30, [sp, #0x80]
0000000000011d14	add	x29, sp, #0x80
0000000000011d18	mov	x19, x1
0000000000011d1c	mov	x21, x0
0000000000011d20	str	xzr, [sp, #0x8]
0000000000011d24	adrp	x20, 105 ; 0x7a000
0000000000011d28	add	x20, x20, #0x4e0
0000000000011d2c	ldr	x25, [x20]
0000000000011d30	mov	x0, x20
0000000000011d34	blr	x25
0000000000011d38	ldr	x8, [x0]
0000000000011d3c	ldr	x9, [x8, #0x110]
0000000000011d40	add	x10, sp, #0x8
0000000000011d44	str	x10, [x8, #0x110]
0000000000011d48	mov	x8, #0x300000000
0000000000011d4c	stp	x9, x8, [sp, #0x10]
0000000000011d50	adr	x8, #0x827b9
0000000000011d54	nop
0000000000011d58	ldarb	w8, [x8]
0000000000011d5c	tbz	w8, #0x0, 0x11d64
0000000000011d60	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011d64	mov	x0, x20
0000000000011d68	blr	x25
0000000000011d6c	mov	x24, x0
0000000000011d70	ldr	x8, [x0]
0000000000011d74	ldr	x8, [x8, #0x118]
0000000000011d78	add	x0, x8, #0x70
0000000000011d7c	mov	w1, #0x18
0000000000011d80	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011d84	mov	x23, x0
0000000000011d88	adr	x8, #0x52928
0000000000011d8c	nop
0000000000011d90	mov	x22, x0
0000000000011d94	str	x8, [x22, #0x10]!
0000000000011d98	str	xzr, [x0, #0x8]
0000000000011d9c	str	x22, [x19]
0000000000011da0	ldr	x8, [x24]
0000000000011da4	add	x9, sp, #0x20
0000000000011da8	ldp	x10, x11, [x8, #0x110]
0000000000011dac	str	x9, [x8, #0x110]
0000000000011db0	movi.16b	v0, #0x0
0000000000011db4	stp	q0, q0, [sp, #0x20]
0000000000011db8	mov	x8, #0x400000000
0000000000011dbc	stp	x10, x8, [sp, #0x28]
0000000000011dc0	add	x0, x11, #0x70
0000000000011dc4	mov	w1, #0x60
0000000000011dc8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000011dcc	mov	x24, x0
0000000000011dd0	adr	x8, #0x52230
0000000000011dd4	nop
0000000000011dd8	str	x8, [x24, #0x10]!
0000000000011ddc	stur	xzr, [x24, #-0x8]
0000000000011de0	str	x24, [sp, #0x38]
0000000000011de4	mov	x0, x24
0000000000011de8	mov	x1, x21
0000000000011dec	bl	"_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}"
0000000000011df0	str	x24, [x23, #0x18]
0000000000011df4	mov	x0, x20
0000000000011df8	blr	x25
0000000000011dfc	ldr	x8, [x0]
0000000000011e00	ldr	x9, [sp, #0x28]
0000000000011e04	str	x9, [x8, #0x110]
0000000000011e08	str	x22, [x19]
0000000000011e0c	ldr	x8, [x0]
0000000000011e10	ldr	x9, [sp, #0x10]
0000000000011e14	str	x9, [x8, #0x110]
0000000000011e18	mov	x0, x22
0000000000011e1c	ldp	x29, x30, [sp, #0x80]
0000000000011e20	ldp	x20, x19, [sp, #0x70]
0000000000011e24	ldp	x22, x21, [sp, #0x60]
0000000000011e28	ldp	x24, x23, [sp, #0x50]
0000000000011e2c	ldp	x26, x25, [sp, #0x40]
0000000000011e30	add	sp, sp, #0x90
0000000000011e34	ret
0000000000011e38	mov	x1, x0
0000000000011e3c	mov	x0, x20
0000000000011e40	blr	x25
0000000000011e44	ldr	x8, [x0]
0000000000011e48	ldr	x9, [sp, #0x10]
0000000000011e4c	str	x9, [x8, #0x110]
0000000000011e50	mov	x0, x1
0000000000011e54	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_Map_getSize:
0000000000011e58	sub	sp, sp, #0x50
0000000000011e5c	stp	x22, x21, [sp, #0x20]
0000000000011e60	stp	x20, x19, [sp, #0x30]
0000000000011e64	stp	x29, x30, [sp, #0x40]
0000000000011e68	add	x29, sp, #0x40
0000000000011e6c	mov	x20, x0
0000000000011e70	str	xzr, [sp, #0x8]
0000000000011e74	adrp	x19, 105 ; 0x7a000
0000000000011e78	add	x19, x19, #0x4e0
0000000000011e7c	ldr	x21, [x19]
0000000000011e80	mov	x0, x19
0000000000011e84	blr	x21
0000000000011e88	ldr	x8, [x0]
0000000000011e8c	ldr	x9, [x8, #0x110]
0000000000011e90	add	x10, sp, #0x8
0000000000011e94	str	x10, [x8, #0x110]
0000000000011e98	mov	x8, #0x300000000
0000000000011e9c	stp	x9, x8, [sp, #0x10]
0000000000011ea0	adr	x8, #0x82669
0000000000011ea4	nop
0000000000011ea8	ldarb	w8, [x8]
0000000000011eac	tbz	w8, #0x0, 0x11eb4
0000000000011eb0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000011eb4	ldr	x8, [x20]
0000000000011eb8	and	x8, x8, #0xfffffffffffffffc
0000000000011ebc	ldr	x8, [x8]
0000000000011ec0	ldr	w9, [x8, #0x3c]
0000000000011ec4	ldr	x8, [x8, #0x40]
0000000000011ec8	tbnz	w9, #0x1f, 0x11ed8
0000000000011ecc	mov	w10, #0x41
0000000000011ed0	and	x9, x9, x10
0000000000011ed4	b	0x11f5c
0000000000011ed8	neg	w10, w9
0000000000011edc	mvn	w9, w9
0000000000011ee0	cmp	w10, #0x9
0000000000011ee4	b.ge	0x11f1c
0000000000011ee8	cmp	w10, #0x2
0000000000011eec	b.lt	0x11f50
0000000000011ef0	mov	x10, #0x0
0000000000011ef4	mov	x11, x8
0000000000011ef8	ldr	w12, [x11]
0000000000011efc	cmp	w12, #0x40
0000000000011f00	b.gt	0x11f58
0000000000011f04	add	x10, x10, #0x1
0000000000011f08	add	x11, x11, #0x10
0000000000011f0c	cmp	x9, x10
0000000000011f10	b.ne	0x11ef8
0000000000011f14	mov	x10, x9
0000000000011f18	b	0x11f58
0000000000011f1c	mov	w10, #0x0
0000000000011f20	add	w11, w9, w10
0000000000011f24	cmp	w11, #0x0
0000000000011f28	cinc	w11, w11, lt
0000000000011f2c	asr	w11, w11, #1
0000000000011f30	sbfiz	x12, x11, #4, #32
0000000000011f34	ldr	w12, [x8, x12]
0000000000011f38	cmp	w12, #0x41
0000000000011f3c	csinc	w10, w10, w11, ge
0000000000011f40	csel	w9, w9, w11, lt
0000000000011f44	cmp	w10, w9
0000000000011f48	b.lt	0x11f20
0000000000011f4c	b	0x11f58
0000000000011f50	mov	w10, #0x0
0000000000011f54	b	0x11f58
0000000000011f58	sxtw	x9, w10
0000000000011f5c	add	x8, x8, x9, lsl #4
0000000000011f60	ldr	x8, [x8, #0x8]
0000000000011f64	ldr	x8, [x8, #0x10]
0000000000011f68	mov	x0, x20
0000000000011f6c	blr	x8
0000000000011f70	mov	x1, x0
0000000000011f74	mov	x0, x19
0000000000011f78	blr	x21
0000000000011f7c	ldr	x8, [x0]
0000000000011f80	ldr	x9, [sp, #0x10]
0000000000011f84	str	x9, [x8, #0x110]
0000000000011f88	mov	x0, x1
0000000000011f8c	ldp	x29, x30, [sp, #0x40]
0000000000011f90	ldp	x20, x19, [sp, #0x30]
0000000000011f94	ldp	x22, x21, [sp, #0x20]
0000000000011f98	add	sp, sp, #0x50
0000000000011f9c	ret
0000000000011fa0	mov	x1, x0
0000000000011fa4	mov	x0, x19
0000000000011fa8	blr	x21
0000000000011fac	ldr	x8, [x0]
0000000000011fb0	ldr	x9, [sp, #0x10]
0000000000011fb4	str	x9, [x8, #0x110]
0000000000011fb8	mov	x0, x1
0000000000011fbc	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_Map_keyIterator:
0000000000011fc0	sub	sp, sp, #0x60
0000000000011fc4	stp	x24, x23, [sp, #0x20]
0000000000011fc8	stp	x22, x21, [sp, #0x30]
0000000000011fcc	stp	x20, x19, [sp, #0x40]
0000000000011fd0	stp	x29, x30, [sp, #0x50]
0000000000011fd4	add	x29, sp, #0x50
0000000000011fd8	mov	x19, x1
0000000000011fdc	mov	x21, x0
0000000000011fe0	movi.16b	v0, #0x0
0000000000011fe4	stp	q0, q0, [sp]
0000000000011fe8	mov	x8, sp
0000000000011fec	add	x22, x8, #0x18
0000000000011ff0	adrp	x20, 105 ; 0x7a000
0000000000011ff4	add	x20, x20, #0x4e0
0000000000011ff8	ldr	x23, [x20]
0000000000011ffc	mov	x0, x20
0000000000012000	blr	x23
0000000000012004	ldr	x9, [x0]
0000000000012008	ldr	x10, [x9, #0x110]
000000000001200c	str	x8, [x9, #0x110]
0000000000012010	mov	x8, #0x400000000
0000000000012014	stp	x10, x8, [sp, #0x8]
0000000000012018	adr	x8, #0x824f1
000000000001201c	nop
0000000000012020	ldarb	w8, [x8]
0000000000012024	tbz	w8, #0x0, 0x1202c
0000000000012028	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001202c	ldr	x8, [x21]
0000000000012030	and	x8, x8, #0xfffffffffffffffc
0000000000012034	ldr	x8, [x8]
0000000000012038	ldr	w9, [x8, #0x3c]
000000000001203c	ldr	x8, [x8, #0x40]
0000000000012040	tbnz	w9, #0x1f, 0x12050
0000000000012044	mov	w10, #0x41
0000000000012048	and	x9, x9, x10
000000000001204c	b	0x120d4
0000000000012050	neg	w10, w9
0000000000012054	mvn	w9, w9
0000000000012058	cmp	w10, #0x9
000000000001205c	b.ge	0x12094
0000000000012060	cmp	w10, #0x2
0000000000012064	b.lt	0x120c8
0000000000012068	mov	x10, #0x0
000000000001206c	mov	x11, x8
0000000000012070	ldr	w12, [x11]
0000000000012074	cmp	w12, #0x40
0000000000012078	b.gt	0x120d0
000000000001207c	add	x10, x10, #0x1
0000000000012080	add	x11, x11, #0x10
0000000000012084	cmp	x9, x10
0000000000012088	b.ne	0x12070
000000000001208c	mov	x10, x9
0000000000012090	b	0x120d0
0000000000012094	mov	w10, #0x0
0000000000012098	add	w11, w9, w10
000000000001209c	cmp	w11, #0x0
00000000000120a0	cinc	w11, w11, lt
00000000000120a4	asr	w11, w11, #1
00000000000120a8	sbfiz	x12, x11, #4, #32
00000000000120ac	ldr	w12, [x8, x12]
00000000000120b0	cmp	w12, #0x41
00000000000120b4	csinc	w10, w10, w11, ge
00000000000120b8	csel	w9, w9, w11, lt
00000000000120bc	cmp	w10, w9
00000000000120c0	b.lt	0x12098
00000000000120c4	b	0x120d0
00000000000120c8	mov	w10, #0x0
00000000000120cc	b	0x120d0
00000000000120d0	sxtw	x9, w10
00000000000120d4	add	x8, x8, x9, lsl #4
00000000000120d8	ldr	x8, [x8, #0x8]
00000000000120dc	ldr	x8, [x8, #0x8]
00000000000120e0	mov	x0, x21
00000000000120e4	mov	x1, x22
00000000000120e8	blr	x8
00000000000120ec	ldr	x8, [x0]
00000000000120f0	and	x8, x8, #0xfffffffffffffffc
00000000000120f4	ldr	x8, [x8]
00000000000120f8	ldr	w9, [x8, #0x3c]
00000000000120fc	ldr	x8, [x8, #0x40]
0000000000012100	tbnz	w9, #0x1f, 0x1210c
0000000000012104	and	x9, x9, #0x1e
0000000000012108	b	0x12190
000000000001210c	neg	w10, w9
0000000000012110	mvn	w9, w9
0000000000012114	cmp	w10, #0x9
0000000000012118	b.ge	0x12150
000000000001211c	cmp	w10, #0x2
0000000000012120	b.lt	0x12184
0000000000012124	mov	x10, #0x0
0000000000012128	mov	x11, x8
000000000001212c	ldr	w12, [x11]
0000000000012130	cmp	w12, #0x1d
0000000000012134	b.gt	0x1218c
0000000000012138	add	x10, x10, #0x1
000000000001213c	add	x11, x11, #0x10
0000000000012140	cmp	x9, x10
0000000000012144	b.ne	0x1212c
0000000000012148	mov	x10, x9
000000000001214c	b	0x1218c
0000000000012150	mov	w10, #0x0
0000000000012154	add	w11, w9, w10
0000000000012158	cmp	w11, #0x0
000000000001215c	cinc	w11, w11, lt
0000000000012160	asr	w11, w11, #1
0000000000012164	sbfiz	x12, x11, #4, #32
0000000000012168	ldr	w12, [x8, x12]
000000000001216c	cmp	w12, #0x1e
0000000000012170	csinc	w10, w10, w11, ge
0000000000012174	csel	w9, w9, w11, lt
0000000000012178	cmp	w10, w9
000000000001217c	b.lt	0x12154
0000000000012180	b	0x1218c
0000000000012184	mov	w10, #0x0
0000000000012188	b	0x1218c
000000000001218c	sxtw	x9, w10
0000000000012190	add	x8, x8, x9, lsl #4
0000000000012194	ldr	x8, [x8, #0x8]
0000000000012198	ldr	x8, [x8, #0x20]
000000000001219c	mov	x1, x19
00000000000121a0	blr	x8
00000000000121a4	mov	x8, x0
00000000000121a8	str	x0, [x19]
00000000000121ac	mov	x0, x20
00000000000121b0	blr	x23
00000000000121b4	ldr	x9, [x0]
00000000000121b8	ldr	x10, [sp, #0x8]
00000000000121bc	str	x10, [x9, #0x110]
00000000000121c0	mov	x0, x8
00000000000121c4	ldp	x29, x30, [sp, #0x50]
00000000000121c8	ldp	x20, x19, [sp, #0x40]
00000000000121cc	ldp	x22, x21, [sp, #0x30]
00000000000121d0	ldp	x24, x23, [sp, #0x20]
00000000000121d4	add	sp, sp, #0x60
00000000000121d8	ret
00000000000121dc	mov	x1, x0
00000000000121e0	mov	x0, x20
00000000000121e4	blr	x23
00000000000121e8	ldr	x8, [x0]
00000000000121ec	ldr	x9, [sp, #0x8]
00000000000121f0	str	x9, [x8, #0x110]
00000000000121f4	mov	x0, x1
00000000000121f8	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_MutableMap_createWithCapacity:
00000000000121fc	sub	sp, sp, #0x60
0000000000012200	stp	x24, x23, [sp, #0x20]
0000000000012204	stp	x22, x21, [sp, #0x30]
0000000000012208	stp	x20, x19, [sp, #0x40]
000000000001220c	stp	x29, x30, [sp, #0x50]
0000000000012210	add	x29, sp, #0x50
0000000000012214	mov	x20, x1
0000000000012218	mov	x21, x0
000000000001221c	str	xzr, [sp, #0x8]
0000000000012220	adrp	x19, 104 ; 0x7a000
0000000000012224	add	x19, x19, #0x4e0
0000000000012228	ldr	x23, [x19]
000000000001222c	mov	x0, x19
0000000000012230	blr	x23
0000000000012234	ldr	x8, [x0]
0000000000012238	ldr	x9, [x8, #0x110]
000000000001223c	add	x10, sp, #0x8
0000000000012240	str	x10, [x8, #0x110]
0000000000012244	mov	x8, #0x300000000
0000000000012248	stp	x9, x8, [sp, #0x10]
000000000001224c	adr	x8, #0x822bd
0000000000012250	nop
0000000000012254	ldarb	w8, [x8]
0000000000012258	tbz	w8, #0x0, 0x12260
000000000001225c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012260	mov	x0, x19
0000000000012264	blr	x23
0000000000012268	ldr	x8, [x0]
000000000001226c	ldr	x8, [x8, #0x118]
0000000000012270	add	x0, x8, #0x70
0000000000012274	mov	w1, #0x60
0000000000012278	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001227c	mov	x22, x0
0000000000012280	adr	x8, #0x51d80
0000000000012284	nop
0000000000012288	str	x8, [x22, #0x10]!
000000000001228c	stur	xzr, [x22, #-0x8]
0000000000012290	str	x22, [x20]
0000000000012294	mov	x0, x22
0000000000012298	mov	x1, x21
000000000001229c	bl	"_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}"
00000000000122a0	str	x22, [x20]
00000000000122a4	mov	x0, x19
00000000000122a8	blr	x23
00000000000122ac	ldr	x8, [x0]
00000000000122b0	ldr	x9, [sp, #0x10]
00000000000122b4	str	x9, [x8, #0x110]
00000000000122b8	mov	x0, x22
00000000000122bc	ldp	x29, x30, [sp, #0x50]
00000000000122c0	ldp	x20, x19, [sp, #0x40]
00000000000122c4	ldp	x22, x21, [sp, #0x30]
00000000000122c8	ldp	x24, x23, [sp, #0x20]
00000000000122cc	add	sp, sp, #0x60
00000000000122d0	ret
00000000000122d4	mov	x1, x0
00000000000122d8	mov	x0, x19
00000000000122dc	blr	x23
00000000000122e0	ldr	x8, [x0]
00000000000122e4	ldr	x9, [sp, #0x10]
00000000000122e8	str	x9, [x8, #0x110]
00000000000122ec	mov	x0, x1
00000000000122f0	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_ObjCExport_ThrowCollectionTooLarge:
00000000000122f4	sub	sp, sp, #0x50
00000000000122f8	stp	x22, x21, [sp, #0x20]
00000000000122fc	stp	x20, x19, [sp, #0x30]
0000000000012300	stp	x29, x30, [sp, #0x40]
0000000000012304	add	x29, sp, #0x40
0000000000012308	movi.16b	v0, #0x0
000000000001230c	stp	q0, q0, [sp]
0000000000012310	adrp	x19, 104 ; 0x7a000
0000000000012314	add	x19, x19, #0x4e0
0000000000012318	ldr	x21, [x19]
000000000001231c	mov	x0, x19
0000000000012320	blr	x21
0000000000012324	ldr	x8, [x0]
0000000000012328	ldr	x9, [x8, #0x110]
000000000001232c	mov	x10, sp
0000000000012330	str	x10, [x8, #0x110]
0000000000012334	mov	x8, #0x400000000
0000000000012338	stp	x9, x8, [sp, #0x8]
000000000001233c	adr	x8, #0x821cd
0000000000012340	nop
0000000000012344	ldarb	w8, [x8]
0000000000012348	tbz	w8, #0x0, 0x12350
000000000001234c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012350	mov	x0, x19
0000000000012354	blr	x21
0000000000012358	ldr	x8, [x0]
000000000001235c	ldr	x8, [x8, #0x118]
0000000000012360	add	x0, x8, #0x70
0000000000012364	mov	w1, #0x38
0000000000012368	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001236c	mov	x20, x0
0000000000012370	adr	x8, #0x4f3e0
0000000000012374	nop
0000000000012378	str	x8, [x20, #0x10]!
000000000001237c	stur	xzr, [x20, #-0x8]
0000000000012380	str	x20, [sp, #0x18]
0000000000012384	adr	x1, #0x5d1dc
0000000000012388	nop
000000000001238c	mov	x0, x20
0000000000012390	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000012394	mov	x0, x20
0000000000012398	bl	_ThrowException
000000000001239c	brk	#0x1
00000000000123a0	mov	x1, x0
00000000000123a4	mov	x0, x19
00000000000123a8	blr	x21
00000000000123ac	ldr	x8, [x0]
00000000000123b0	ldr	x9, [sp, #0x8]
00000000000123b4	str	x9, [x8, #0x110]
00000000000123b8	mov	x0, x1
00000000000123bc	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_NSEnumeratorAsKIterator_create:
00000000000123c0	sub	sp, sp, #0xc0
00000000000123c4	stp	x28, x27, [sp, #0x60]
00000000000123c8	stp	x26, x25, [sp, #0x70]
00000000000123cc	stp	x24, x23, [sp, #0x80]
00000000000123d0	stp	x22, x21, [sp, #0x90]
00000000000123d4	stp	x20, x19, [sp, #0xa0]
00000000000123d8	stp	x29, x30, [sp, #0xb0]
00000000000123dc	add	x29, sp, #0xb0
00000000000123e0	mov	x20, x0
00000000000123e4	str	xzr, [sp, #0x18]
00000000000123e8	adrp	x19, 104 ; 0x7a000
00000000000123ec	add	x19, x19, #0x4e0
00000000000123f0	ldr	x26, [x19]
00000000000123f4	mov	x0, x19
00000000000123f8	blr	x26
00000000000123fc	ldr	x8, [x0]
0000000000012400	ldr	x9, [x8, #0x110]
0000000000012404	add	x10, sp, #0x18
0000000000012408	str	x10, [x8, #0x110]
000000000001240c	mov	x8, #0x300000000
0000000000012410	stp	x9, x8, [sp, #0x20]
0000000000012414	adr	x25, #0x820f5
0000000000012418	nop
000000000001241c	ldarb	w8, [x25]
0000000000012420	tbz	w8, #0x0, 0x12428
0000000000012424	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012428	mov	x0, x19
000000000001242c	blr	x26
0000000000012430	mov	x23, x0
0000000000012434	ldr	x8, [x0]
0000000000012438	ldr	x8, [x8, #0x118]
000000000001243c	add	x0, x8, #0x70
0000000000012440	mov	w1, #0x20
0000000000012444	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000012448	mov	x22, x0
000000000001244c	adr	x8, #0x50944
0000000000012450	nop
0000000000012454	mov	x21, x0
0000000000012458	str	x8, [x21, #0x10]!
000000000001245c	str	xzr, [x0, #0x8]
0000000000012460	str	x21, [x20]
0000000000012464	ldr	x8, [x23]
0000000000012468	ldr	x9, [x8, #0x110]
000000000001246c	add	x10, sp, #0x30
0000000000012470	str	x10, [x8, #0x110]
0000000000012474	movi.16b	v0, #0x0
0000000000012478	stp	q0, q0, [sp, #0x30]
000000000001247c	str	xzr, [sp, #0x50]
0000000000012480	mov	x8, #0x500000000
0000000000012484	stp	x9, x8, [sp, #0x38]
0000000000012488	adr	x27, #0x82108
000000000001248c	nop
0000000000012490	ldar	x23, [x27]
0000000000012494	cmp	x23, #0x2
0000000000012498	b.hs	0x12678
000000000001249c	mov	x0, x19
00000000000124a0	blr	x26
00000000000124a4	ldr	x28, [x0]
00000000000124a8	ldp	x8, x9, [x28, #0x120]
00000000000124ac	cmp	x8, x9
00000000000124b0	b.eq	0x124d0
00000000000124b4	mov	x10, x9
00000000000124b8	ldr	x11, [x10, #-0x10]!
00000000000124bc	cmp	x11, x27
00000000000124c0	b.eq	0x1258c
00000000000124c4	mov	x9, x10
00000000000124c8	cmp	x10, x8
00000000000124cc	b.ne	0x124b8
00000000000124d0	add	x8, x28, #0x120
00000000000124d4	str	x8, [sp, #0x10]
00000000000124d8	add	x0, x28, #0x138
00000000000124dc	mov	w9, #0x1
00000000000124e0	ldaxr	w8, [x0]
00000000000124e4	stlxr	w10, w9, [x0]
00000000000124e8	cbnz	w10, 0x124e0
00000000000124ec	b	0x124fc
00000000000124f0	mov	w24, #0x1
00000000000124f4	stlxr	w9, x24, [x27]
00000000000124f8	cbz	w9, 0x1250c
00000000000124fc	ldaxr	x23, [x27]
0000000000012500	cbz	x23, 0x124f0
0000000000012504	mov	w24, #0x0
0000000000012508	clrex
000000000001250c	cmp	x23, #0x1
0000000000012510	b.eq	0x124fc
0000000000012514	cbz	x28, 0x1253c
0000000000012518	ldaxr	w9, [x0]
000000000001251c	stlxr	w10, w8, [x0]
0000000000012520	cbnz	w10, 0x12518
0000000000012524	cbnz	w8, 0x1253c
0000000000012528	cmp	w9, #0x1
000000000001252c	b.ne	0x1253c
0000000000012530	ldarb	w8, [x25]
0000000000012534	tbz	w8, #0x0, 0x1253c
0000000000012538	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000001253c	tbz	w24, #0x0, 0x12584
0000000000012540	ldr	x8, [x28, #0x118]
0000000000012544	add	x0, x8, #0x70
0000000000012548	mov	w1, #0x20
000000000001254c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000012550	mov	x23, x0
0000000000012554	adr	x8, #0x52afc
0000000000012558	nop
000000000001255c	str	x8, [x23, #0x10]!
0000000000012560	stur	xzr, [x23, #-0x8]
0000000000012564	str	x23, [sp, #0x48]
0000000000012568	ldp	x9, x8, [x28, #0x128]
000000000001256c	cmp	x9, x8
0000000000012570	b.hs	0x12598
0000000000012574	stp	x27, x23, [x9]
0000000000012578	add	x8, x9, #0x10
000000000001257c	str	x8, [x28, #0x128]
0000000000012580	b	0x1262c
0000000000012584	str	x23, [sp, #0x48]
0000000000012588	b	0x12678
000000000001258c	ldur	x23, [x9, #-0x8]
0000000000012590	str	x23, [sp, #0x48]
0000000000012594	b	0x12678
0000000000012598	ldr	x10, [sp, #0x10]
000000000001259c	ldr	x10, [x10]
00000000000125a0	sub	x9, x9, x10
00000000000125a4	asr	x24, x9, #4
00000000000125a8	add	x9, x24, #0x1
00000000000125ac	lsr	x11, x9, #60
00000000000125b0	cbnz	x11, 0x126e4
00000000000125b4	sub	x8, x8, x10
00000000000125b8	asr	x10, x8, #3
00000000000125bc	cmp	x10, x9
00000000000125c0	csel	x9, x9, x10, lo
00000000000125c4	mov	x10, #0x7ffffffffffffff
00000000000125c8	cmp	x10, x8, asr #4
00000000000125cc	mov	x8, #0xfffffffffffffff
00000000000125d0	csel	x25, x9, x8, hi
00000000000125d4	mov	x0, x25
00000000000125d8	mov	w1, #0x10
00000000000125dc	bl	0x55aec ; symbol stub for: _calloc
00000000000125e0	add	x8, x0, x24, lsl #4
00000000000125e4	add	x10, x0, x25, lsl #4
00000000000125e8	stp	x27, x23, [x8]
00000000000125ec	add	x24, x8, #0x10
00000000000125f0	ldp	x1, x9, [x28, #0x120]
00000000000125f4	sub	x2, x9, x1
00000000000125f8	sub	x25, x8, x2
00000000000125fc	cmp	x2, #0x1
0000000000012600	b.lt	0x12618
0000000000012604	mov	x0, x25
0000000000012608	str	x10, [sp, #0x8]
000000000001260c	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000012610	ldp	x10, x8, [sp, #0x8]
0000000000012614	ldr	x1, [x8]
0000000000012618	stp	x25, x24, [x28, #0x120]
000000000001261c	str	x10, [x28, #0x130]
0000000000012620	cbz	x1, 0x1262c
0000000000012624	mov	x0, x1
0000000000012628	bl	0x55b7c ; symbol stub for: _free
000000000001262c	mov	x0, x23
0000000000012630	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
0000000000012634	mov	w0, #0x1
0000000000012638	mov	w1, #0x28
000000000001263c	bl	0x55aec ; symbol stub for: _calloc
0000000000012640	ldr	x8, [x28, #0x18]!
0000000000012644	sub	x9, x28, #0x8
0000000000012648	stp	x27, x9, [x0, #0x10]
000000000001264c	stp	x8, x28, [x0]
0000000000012650	str	x0, [x8, #0x8]
0000000000012654	str	x0, [x28]
0000000000012658	ldr	x8, [x28, #0x10]
000000000001265c	add	x8, x8, #0x1
0000000000012660	str	x8, [x28, #0x10]
0000000000012664	str	x0, [x0, #0x20]
0000000000012668	stlr	x23, [x27]
000000000001266c	ldr	x8, [x28, #0x110]
0000000000012670	sub	x8, x8, #0x10
0000000000012674	str	x8, [x28, #0x110]
0000000000012678	ldr	x8, [x23, #0x8]
000000000001267c	ldr	w9, [x8, #0x8]
0000000000012680	cmp	w9, #0x2
0000000000012684	b.ls	0x126dc
0000000000012688	ldr	x8, [x8, #0x20]
000000000001268c	str	x8, [sp, #0x50]
0000000000012690	str	x8, [x22, #0x18]
0000000000012694	mov	x0, x19
0000000000012698	blr	x26
000000000001269c	ldr	x8, [x0]
00000000000126a0	ldr	x9, [sp, #0x38]
00000000000126a4	str	x9, [x8, #0x110]
00000000000126a8	str	x21, [x20]
00000000000126ac	ldr	x8, [x0]
00000000000126b0	ldr	x9, [sp, #0x20]
00000000000126b4	str	x9, [x8, #0x110]
00000000000126b8	mov	x0, x21
00000000000126bc	ldp	x29, x30, [sp, #0xb0]
00000000000126c0	ldp	x20, x19, [sp, #0xa0]
00000000000126c4	ldp	x22, x21, [sp, #0x90]
00000000000126c8	ldp	x24, x23, [sp, #0x80]
00000000000126cc	ldp	x26, x25, [sp, #0x70]
00000000000126d0	ldp	x28, x27, [sp, #0x60]
00000000000126d4	add	sp, sp, #0xc0
00000000000126d8	ret
00000000000126dc	bl	_ThrowArrayIndexOutOfBoundsException
00000000000126e0	b	0x1270c
00000000000126e4	ldr	x0, [sp, #0x10]
00000000000126e8	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000126ec	b	0x1270c
00000000000126f0	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
00000000000126f4	str	xzr, [sp, #0x48]
00000000000126f8	stlr	xzr, [x27]
00000000000126fc	ldr	x8, [x28, #0x128]
0000000000012700	sub	x8, x8, #0x10
0000000000012704	str	x8, [x28, #0x128]
0000000000012708	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
000000000001270c	brk	#0x1
0000000000012710	mov	x20, x0
0000000000012714	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
0000000000012718	b	0x12720
000000000001271c	mov	x20, x0
0000000000012720	mov	x0, x19
0000000000012724	blr	x26
0000000000012728	ldr	x8, [x0]
000000000001272c	ldr	x9, [sp, #0x20]
0000000000012730	str	x9, [x8, #0x110]
0000000000012734	mov	x0, x20
0000000000012738	bl	0x558ac ; symbol stub for: __Unwind_Resume
_kfun:kotlin.native.internal.NSArrayAsKList#<get-size>(){}kotlin.Int:
000000000001273c	stp	x20, x19, [sp, #-0x20]!
0000000000012740	stp	x29, x30, [sp, #0x10]
0000000000012744	add	x29, sp, #0x10
0000000000012748	mov	x19, x0
000000000001274c	adr	x8, #0x81dbd
0000000000012750	nop
0000000000012754	ldarb	w8, [x8]
0000000000012758	tbz	w8, #0x0, 0x12760
000000000001275c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012760	ldar	x8, [x19]
0000000000012764	and	x8, x8, #0xfffffffffffffffc
0000000000012768	ldr	x9, [x8]
000000000001276c	cmp	x8, #0x0
0000000000012770	ccmp	x9, x8, #0x4, ne
0000000000012774	b.ne	0x12780
0000000000012778	mov	x0, #0x0
000000000001277c	b	0x12788
0000000000012780	add	x8, x8, #0x10
0000000000012784	ldar	x0, [x8]
0000000000012788	nop
000000000001278c	ldr	x1, #0x644ac ; Objc selector ref: count
0000000000012790	bl	0x55ca8 ; Objc message: -[x0 count]
0000000000012794	lsr	x8, x0, #31
0000000000012798	cbnz	x8, 0x127a8
000000000001279c	ldp	x29, x30, [sp, #0x10]
00000000000127a0	ldp	x20, x19, [sp], #0x20
00000000000127a4	ret
00000000000127a8	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSMutableArrayAsKMutableList#<get-size>(){}kotlin.Int:
00000000000127ac	stp	x20, x19, [sp, #-0x20]!
00000000000127b0	stp	x29, x30, [sp, #0x10]
00000000000127b4	add	x29, sp, #0x10
00000000000127b8	mov	x19, x0
00000000000127bc	adr	x8, #0x81d4d
00000000000127c0	nop
00000000000127c4	ldarb	w8, [x8]
00000000000127c8	tbz	w8, #0x0, 0x127d0
00000000000127cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000127d0	ldar	x8, [x19]
00000000000127d4	and	x8, x8, #0xfffffffffffffffc
00000000000127d8	ldr	x9, [x8]
00000000000127dc	cmp	x8, #0x0
00000000000127e0	ccmp	x9, x8, #0x4, ne
00000000000127e4	b.ne	0x127f0
00000000000127e8	mov	x0, #0x0
00000000000127ec	b	0x127f8
00000000000127f0	add	x8, x8, #0x10
00000000000127f4	ldar	x0, [x8]
00000000000127f8	nop
00000000000127fc	ldr	x1, #0x6443c ; Objc selector ref: count
0000000000012800	bl	0x55ca8 ; Objc message: -[x0 count]
0000000000012804	lsr	x8, x0, #31
0000000000012808	cbnz	x8, 0x12818
000000000001280c	ldp	x29, x30, [sp, #0x10]
0000000000012810	ldp	x20, x19, [sp], #0x20
0000000000012814	ret
0000000000012818	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSSetAsKSet#<get-size>(){}kotlin.Int:
000000000001281c	stp	x20, x19, [sp, #-0x20]!
0000000000012820	stp	x29, x30, [sp, #0x10]
0000000000012824	add	x29, sp, #0x10
0000000000012828	mov	x19, x0
000000000001282c	adr	x8, #0x81cdd
0000000000012830	nop
0000000000012834	ldarb	w8, [x8]
0000000000012838	tbz	w8, #0x0, 0x12840
000000000001283c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012840	ldar	x8, [x19]
0000000000012844	and	x8, x8, #0xfffffffffffffffc
0000000000012848	ldr	x9, [x8]
000000000001284c	cmp	x8, #0x0
0000000000012850	ccmp	x9, x8, #0x4, ne
0000000000012854	b.ne	0x12860
0000000000012858	mov	x0, #0x0
000000000001285c	b	0x12868
0000000000012860	add	x8, x8, #0x10
0000000000012864	ldar	x0, [x8]
0000000000012868	nop
000000000001286c	ldr	x1, #0x643cc ; Objc selector ref: count
0000000000012870	bl	0x55ca8 ; Objc message: -[x0 count]
0000000000012874	lsr	x8, x0, #31
0000000000012878	cbnz	x8, 0x12888
000000000001287c	ldp	x29, x30, [sp, #0x10]
0000000000012880	ldp	x20, x19, [sp], #0x20
0000000000012884	ret
0000000000012888	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#equals(kotlin.Any?){}kotlin.Boolean:
000000000001288c	sub	sp, sp, #0xa0
0000000000012890	stp	x28, x27, [sp, #0x40]
0000000000012894	stp	x26, x25, [sp, #0x50]
0000000000012898	stp	x24, x23, [sp, #0x60]
000000000001289c	stp	x22, x21, [sp, #0x70]
00000000000128a0	stp	x20, x19, [sp, #0x80]
00000000000128a4	stp	x29, x30, [sp, #0x90]
00000000000128a8	add	x29, sp, #0x90
00000000000128ac	mov	x20, x1
00000000000128b0	mov	x19, x0
00000000000128b4	movi.16b	v0, #0x0
00000000000128b8	stp	q0, q0, [sp]
00000000000128bc	stp	q0, q0, [sp, #0x20]
00000000000128c0	mov	x22, sp
00000000000128c4	adrp	x0, 104 ; 0x7a000
00000000000128c8	add	x0, x0, #0x4e0
00000000000128cc	ldr	x8, [x0]
00000000000128d0	blr	x8
00000000000128d4	ldr	x26, [x0]
00000000000128d8	ldr	x8, [x26, #0x110]
00000000000128dc	str	x22, [x26, #0x110]
00000000000128e0	mov	x9, #0x800000000
00000000000128e4	stp	x8, x9, [sp, #0x8]
00000000000128e8	adr	x8, #0x81c21
00000000000128ec	nop
00000000000128f0	ldarb	w8, [x8]
00000000000128f4	tbz	w8, #0x0, 0x128fc
00000000000128f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000128fc	cmp	x19, x20
0000000000012900	b.eq	0x12d5c
0000000000012904	cbz	x20, 0x13180
0000000000012908	ldr	x8, [x20]
000000000001290c	and	x8, x8, #0xfffffffffffffffc
0000000000012910	ldr	x8, [x8]
0000000000012914	ldr	w9, [x8, #0x3c]
0000000000012918	ldr	x8, [x8, #0x40]
000000000001291c	tbnz	w9, #0x1f, 0x1293c
0000000000012920	mov	w10, #0x41
0000000000012924	and	x9, x9, x10
0000000000012928	lsl	x9, x9, #4
000000000001292c	ldr	w8, [x8, x9]
0000000000012930	cmp	w8, #0x41
0000000000012934	b.eq	0x12a0c
0000000000012938	b	0x13180
000000000001293c	neg	w10, w9
0000000000012940	mvn	w9, w9
0000000000012944	cmp	w10, #0x9
0000000000012948	b.ge	0x12994
000000000001294c	cmp	w10, #0x2
0000000000012950	b.lt	0x129dc
0000000000012954	mov	x10, #0x0
0000000000012958	mov	x11, x8
000000000001295c	ldr	w12, [x11]
0000000000012960	cmp	w12, #0x40
0000000000012964	b.gt	0x129f8
0000000000012968	add	x10, x10, #0x1
000000000001296c	add	x11, x11, #0x10
0000000000012970	cmp	x9, x10
0000000000012974	b.ne	0x1295c
0000000000012978	mov	x10, x9
000000000001297c	sxtw	x9, w10
0000000000012980	lsl	x9, x9, #4
0000000000012984	ldr	w8, [x8, x9]
0000000000012988	cmp	w8, #0x41
000000000001298c	b.ne	0x13180
0000000000012990	b	0x12a0c
0000000000012994	mov	w10, #0x0
0000000000012998	add	w11, w9, w10
000000000001299c	cmp	w11, #0x0
00000000000129a0	cinc	w11, w11, lt
00000000000129a4	asr	w11, w11, #1
00000000000129a8	sbfiz	x12, x11, #4, #32
00000000000129ac	ldr	w12, [x8, x12]
00000000000129b0	cmp	w12, #0x41
00000000000129b4	csinc	w10, w10, w11, ge
00000000000129b8	csel	w9, w9, w11, lt
00000000000129bc	cmp	w10, w9
00000000000129c0	b.lt	0x12998
00000000000129c4	sxtw	x9, w10
00000000000129c8	lsl	x9, x9, #4
00000000000129cc	ldr	w8, [x8, x9]
00000000000129d0	cmp	w8, #0x41
00000000000129d4	b.ne	0x13180
00000000000129d8	b	0x12a0c
00000000000129dc	mov	w10, #0x0
00000000000129e0	sxtw	x9, w10
00000000000129e4	lsl	x9, x9, #4
00000000000129e8	ldr	w8, [x8, x9]
00000000000129ec	cmp	w8, #0x41
00000000000129f0	b.ne	0x13180
00000000000129f4	b	0x12a0c
00000000000129f8	sxtw	x9, w10
00000000000129fc	lsl	x9, x9, #4
0000000000012a00	ldr	w8, [x8, x9]
0000000000012a04	cmp	w8, #0x41
0000000000012a08	b.ne	0x13180
0000000000012a0c	mov	x0, #0x0
0000000000012a10	ldar	x8, [x19]
0000000000012a14	ands	x8, x8, #0xfffffffffffffffc
0000000000012a18	b.eq	0x12a30
0000000000012a1c	ldr	x9, [x8]
0000000000012a20	cmp	x9, x8
0000000000012a24	b.eq	0x12a30
0000000000012a28	add	x8, x8, #0x10
0000000000012a2c	ldar	x0, [x8]
0000000000012a30	nop
0000000000012a34	ldr	x1, #0x64204 ; Objc selector ref: count
0000000000012a38	bl	0x55ca8 ; Objc message: -[x0 count]
0000000000012a3c	lsr	x8, x0, #31
0000000000012a40	cbnz	x8, 0x131ac
0000000000012a44	mov	x21, x0
0000000000012a48	ldr	x8, [x20]
0000000000012a4c	and	x8, x8, #0xfffffffffffffffc
0000000000012a50	ldr	x8, [x8]
0000000000012a54	ldr	w9, [x8, #0x3c]
0000000000012a58	ldr	x8, [x8, #0x40]
0000000000012a5c	tbnz	w9, #0x1f, 0x12a6c
0000000000012a60	mov	w10, #0x41
0000000000012a64	and	x9, x9, x10
0000000000012a68	b	0x12af0
0000000000012a6c	neg	w10, w9
0000000000012a70	mvn	w9, w9
0000000000012a74	cmp	w10, #0x9
0000000000012a78	b.ge	0x12ab0
0000000000012a7c	cmp	w10, #0x2
0000000000012a80	b.lt	0x12ae4
0000000000012a84	mov	x10, #0x0
0000000000012a88	mov	x11, x8
0000000000012a8c	ldr	w12, [x11]
0000000000012a90	cmp	w12, #0x40
0000000000012a94	b.gt	0x12aec
0000000000012a98	add	x10, x10, #0x1
0000000000012a9c	add	x11, x11, #0x10
0000000000012aa0	cmp	x9, x10
0000000000012aa4	b.ne	0x12a8c
0000000000012aa8	mov	x10, x9
0000000000012aac	b	0x12aec
0000000000012ab0	mov	w10, #0x0
0000000000012ab4	add	w11, w9, w10
0000000000012ab8	cmp	w11, #0x0
0000000000012abc	cinc	w11, w11, lt
0000000000012ac0	asr	w11, w11, #1
0000000000012ac4	sbfiz	x12, x11, #4, #32
0000000000012ac8	ldr	w12, [x8, x12]
0000000000012acc	cmp	w12, #0x41
0000000000012ad0	csinc	w10, w10, w11, ge
0000000000012ad4	csel	w9, w9, w11, lt
0000000000012ad8	cmp	w10, w9
0000000000012adc	b.lt	0x12ab4
0000000000012ae0	b	0x12aec
0000000000012ae4	mov	w10, #0x0
0000000000012ae8	b	0x12aec
0000000000012aec	sxtw	x9, w10
0000000000012af0	add	x8, x8, x9, lsl #4
0000000000012af4	ldr	x8, [x8, #0x8]
0000000000012af8	ldr	x8, [x8, #0x10]
0000000000012afc	mov	x0, x20
0000000000012b00	blr	x8
0000000000012b04	cmp	w0, w21
0000000000012b08	b.ne	0x13180
0000000000012b0c	add	x1, x22, #0x18
0000000000012b10	ldr	x8, [x20]
0000000000012b14	and	x8, x8, #0xfffffffffffffffc
0000000000012b18	ldr	x8, [x8]
0000000000012b1c	ldr	w9, [x8, #0x3c]
0000000000012b20	ldr	x8, [x8, #0x40]
0000000000012b24	tbnz	w9, #0x1f, 0x12b34
0000000000012b28	mov	w10, #0x41
0000000000012b2c	and	x9, x9, x10
0000000000012b30	b	0x12bb8
0000000000012b34	neg	w10, w9
0000000000012b38	mvn	w9, w9
0000000000012b3c	cmp	w10, #0x9
0000000000012b40	b.ge	0x12b78
0000000000012b44	cmp	w10, #0x2
0000000000012b48	b.lt	0x12bac
0000000000012b4c	mov	x10, #0x0
0000000000012b50	mov	x11, x8
0000000000012b54	ldr	w12, [x11]
0000000000012b58	cmp	w12, #0x40
0000000000012b5c	b.gt	0x12bb4
0000000000012b60	add	x10, x10, #0x1
0000000000012b64	add	x11, x11, #0x10
0000000000012b68	cmp	x9, x10
0000000000012b6c	b.ne	0x12b54
0000000000012b70	mov	x10, x9
0000000000012b74	b	0x12bb4
0000000000012b78	mov	w10, #0x0
0000000000012b7c	add	w11, w9, w10
0000000000012b80	cmp	w11, #0x0
0000000000012b84	cinc	w11, w11, lt
0000000000012b88	asr	w11, w11, #1
0000000000012b8c	sbfiz	x12, x11, #4, #32
0000000000012b90	ldr	w12, [x8, x12]
0000000000012b94	cmp	w12, #0x41
0000000000012b98	csinc	w10, w10, w11, ge
0000000000012b9c	csel	w9, w9, w11, lt
0000000000012ba0	cmp	w10, w9
0000000000012ba4	b.lt	0x12b7c
0000000000012ba8	b	0x12bb4
0000000000012bac	mov	w10, #0x0
0000000000012bb0	b	0x12bb4
0000000000012bb4	sxtw	x9, w10
0000000000012bb8	add	x8, x8, x9, lsl #4
0000000000012bbc	ldr	x8, [x8, #0x8]
0000000000012bc0	ldr	x8, [x8]
0000000000012bc4	mov	x0, x20
0000000000012bc8	blr	x8
0000000000012bcc	mov	x23, x0
0000000000012bd0	cbz	x0, 0x12d64
0000000000012bd4	ldr	x8, [x23]
0000000000012bd8	and	x8, x8, #0xfffffffffffffffc
0000000000012bdc	ldr	x8, [x8]
0000000000012be0	ldr	w9, [x8, #0x3c]
0000000000012be4	ldr	x8, [x8, #0x40]
0000000000012be8	tbnz	w9, #0x1f, 0x12c08
0000000000012bec	mov	w10, #0x12
0000000000012bf0	and	x9, x9, x10
0000000000012bf4	lsl	x9, x9, #4
0000000000012bf8	ldr	w8, [x8, x9]
0000000000012bfc	cmp	w8, #0x12
0000000000012c00	b.ne	0x12d64
0000000000012c04	b	0x12c9c
0000000000012c08	neg	w10, w9
0000000000012c0c	mvn	w9, w9
0000000000012c10	cmp	w10, #0x9
0000000000012c14	b.ge	0x12c4c
0000000000012c18	cmp	w10, #0x2
0000000000012c1c	b.lt	0x12c80
0000000000012c20	mov	x10, #0x0
0000000000012c24	mov	x11, x8
0000000000012c28	ldr	w12, [x11]
0000000000012c2c	cmp	w12, #0x11
0000000000012c30	b.gt	0x12c88
0000000000012c34	add	x10, x10, #0x1
0000000000012c38	add	x11, x11, #0x10
0000000000012c3c	cmp	x9, x10
0000000000012c40	b.ne	0x12c28
0000000000012c44	mov	x10, x9
0000000000012c48	b	0x12c88
0000000000012c4c	mov	w10, #0x0
0000000000012c50	add	w11, w9, w10
0000000000012c54	cmp	w11, #0x0
0000000000012c58	cinc	w11, w11, lt
0000000000012c5c	asr	w11, w11, #1
0000000000012c60	sbfiz	x12, x11, #4, #32
0000000000012c64	ldr	w12, [x8, x12]
0000000000012c68	cmp	w12, #0x12
0000000000012c6c	csinc	w10, w10, w11, ge
0000000000012c70	csel	w9, w9, w11, lt
0000000000012c74	cmp	w10, w9
0000000000012c78	b.lt	0x12c50
0000000000012c7c	b	0x12c88
0000000000012c80	mov	w10, #0x0
0000000000012c84	b	0x12c88
0000000000012c88	sxtw	x9, w10
0000000000012c8c	lsl	x9, x9, #4
0000000000012c90	ldr	w8, [x8, x9]
0000000000012c94	cmp	w8, #0x12
0000000000012c98	b.ne	0x12d64
0000000000012c9c	ldr	x8, [x23]
0000000000012ca0	and	x8, x8, #0xfffffffffffffffc
0000000000012ca4	ldr	x8, [x8]
0000000000012ca8	ldr	w9, [x8, #0x3c]
0000000000012cac	ldr	x8, [x8, #0x40]
0000000000012cb0	tbnz	w9, #0x1f, 0x12cc0
0000000000012cb4	mov	w10, #0x12
0000000000012cb8	and	x9, x9, x10
0000000000012cbc	b	0x12d44
0000000000012cc0	neg	w10, w9
0000000000012cc4	mvn	w9, w9
0000000000012cc8	cmp	w10, #0x9
0000000000012ccc	b.ge	0x12d04
0000000000012cd0	cmp	w10, #0x2
0000000000012cd4	b.lt	0x12d38
0000000000012cd8	mov	x10, #0x0
0000000000012cdc	mov	x11, x8
0000000000012ce0	ldr	w12, [x11]
0000000000012ce4	cmp	w12, #0x11
0000000000012ce8	b.gt	0x12d40
0000000000012cec	add	x10, x10, #0x1
0000000000012cf0	add	x11, x11, #0x10
0000000000012cf4	cmp	x9, x10
0000000000012cf8	b.ne	0x12ce0
0000000000012cfc	mov	x10, x9
0000000000012d00	b	0x12d40
0000000000012d04	mov	w10, #0x0
0000000000012d08	add	w11, w9, w10
0000000000012d0c	cmp	w11, #0x0
0000000000012d10	cinc	w11, w11, lt
0000000000012d14	asr	w11, w11, #1
0000000000012d18	sbfiz	x12, x11, #4, #32
0000000000012d1c	ldr	w12, [x8, x12]
0000000000012d20	cmp	w12, #0x12
0000000000012d24	csinc	w10, w10, w11, ge
0000000000012d28	csel	w9, w9, w11, lt
0000000000012d2c	cmp	w10, w9
0000000000012d30	b.lt	0x12d08
0000000000012d34	b	0x12d40
0000000000012d38	mov	w10, #0x0
0000000000012d3c	b	0x12d40
0000000000012d40	sxtw	x9, w10
0000000000012d44	add	x8, x8, x9, lsl #4
0000000000012d48	ldr	x8, [x8, #0x8]
0000000000012d4c	ldr	x8, [x8, #0x18]
0000000000012d50	mov	x0, x23
0000000000012d54	blr	x8
0000000000012d58	tbz	w0, #0x0, 0x12d64
0000000000012d5c	mov	w0, #0x1
0000000000012d60	b	0x13184
0000000000012d64	add	x1, x22, #0x20
0000000000012d68	add	x20, x22, #0x30
0000000000012d6c	add	x21, x22, #0x28
0000000000012d70	add	x22, x22, #0x38
0000000000012d74	ldr	x8, [x23]
0000000000012d78	and	x8, x8, #0xfffffffffffffffc
0000000000012d7c	ldr	x8, [x8]
0000000000012d80	ldr	w9, [x8, #0x3c]
0000000000012d84	ldr	x8, [x8, #0x40]
0000000000012d88	tbnz	w9, #0x1f, 0x12d98
0000000000012d8c	mov	w10, #0x31
0000000000012d90	and	x9, x9, x10
0000000000012d94	b	0x12e1c
0000000000012d98	neg	w10, w9
0000000000012d9c	mvn	w9, w9
0000000000012da0	cmp	w10, #0x9
0000000000012da4	b.ge	0x12ddc
0000000000012da8	cmp	w10, #0x2
0000000000012dac	b.lt	0x12e10
0000000000012db0	mov	x10, #0x0
0000000000012db4	mov	x11, x8
0000000000012db8	ldr	w12, [x11]
0000000000012dbc	cmp	w12, #0x30
0000000000012dc0	b.gt	0x12e18
0000000000012dc4	add	x10, x10, #0x1
0000000000012dc8	add	x11, x11, #0x10
0000000000012dcc	cmp	x9, x10
0000000000012dd0	b.ne	0x12db8
0000000000012dd4	mov	x10, x9
0000000000012dd8	b	0x12e18
0000000000012ddc	mov	w10, #0x0
0000000000012de0	add	w11, w9, w10
0000000000012de4	cmp	w11, #0x0
0000000000012de8	cinc	w11, w11, lt
0000000000012dec	asr	w11, w11, #1
0000000000012df0	sbfiz	x12, x11, #4, #32
0000000000012df4	ldr	w12, [x8, x12]
0000000000012df8	cmp	w12, #0x31
0000000000012dfc	csinc	w10, w10, w11, ge
0000000000012e00	csel	w9, w9, w11, lt
0000000000012e04	cmp	w10, w9
0000000000012e08	b.lt	0x12de0
0000000000012e0c	b	0x12e18
0000000000012e10	mov	w10, #0x0
0000000000012e14	b	0x12e18
0000000000012e18	sxtw	x9, w10
0000000000012e1c	add	x8, x8, x9, lsl #4
0000000000012e20	ldr	x8, [x8, #0x8]
0000000000012e24	ldr	x8, [x8]
0000000000012e28	mov	x0, x23
0000000000012e2c	blr	x8
0000000000012e30	mov	x23, x0
0000000000012e34	mov	w28, #0xa0
0000000000012e38	mov	w27, #0xa8
0000000000012e3c	b	0x12e70
0000000000012e40	and	x9, x9, x27
0000000000012e44	add	x8, x8, x9, lsl #4
0000000000012e48	ldr	x8, [x8, #0x8]
0000000000012e4c	ldr	x8, [x8, #0x8]
0000000000012e50	mov	x0, x24
0000000000012e54	mov	x1, x22
0000000000012e58	blr	x8
0000000000012e5c	mov	x2, x0
0000000000012e60	mov	x0, x19
0000000000012e64	mov	x1, x25
0000000000012e68	bl	_Kotlin_NSDictionaryAsKMap_containsEntry
0000000000012e6c	tbz	w0, #0x0, 0x13180
0000000000012e70	ldr	x8, [x23]
0000000000012e74	and	x8, x8, #0xfffffffffffffffc
0000000000012e78	ldr	x8, [x8]
0000000000012e7c	ldr	w9, [x8, #0x3c]
0000000000012e80	ldr	x8, [x8, #0x40]
0000000000012e84	tbnz	w9, #0x1f, 0x12ea8
0000000000012e88	and	x9, x9, x28
0000000000012e8c	add	x8, x8, x9, lsl #4
0000000000012e90	ldr	x8, [x8, #0x8]
0000000000012e94	ldr	x8, [x8]
0000000000012e98	mov	x0, x23
0000000000012e9c	blr	x8
0000000000012ea0	tbnz	w0, #0x0, 0x12f44
0000000000012ea4	b	0x12d5c
0000000000012ea8	neg	w10, w9
0000000000012eac	mvn	w9, w9
0000000000012eb0	cmp	w10, #0x9
0000000000012eb4	b.ge	0x12eec
0000000000012eb8	cmp	w10, #0x2
0000000000012ebc	b.lt	0x12f20
0000000000012ec0	mov	x10, #0x0
0000000000012ec4	mov	x11, x8
0000000000012ec8	ldr	w12, [x11]
0000000000012ecc	cmp	w12, #0x9f
0000000000012ed0	b.gt	0x12f28
0000000000012ed4	add	x10, x10, #0x1
0000000000012ed8	add	x11, x11, #0x10
0000000000012edc	cmp	x9, x10
0000000000012ee0	b.ne	0x12ec8
0000000000012ee4	mov	x10, x9
0000000000012ee8	b	0x12f28
0000000000012eec	mov	w10, #0x0
0000000000012ef0	add	w11, w9, w10
0000000000012ef4	cmp	w11, #0x0
0000000000012ef8	cinc	w11, w11, lt
0000000000012efc	asr	w11, w11, #1
0000000000012f00	sbfiz	x12, x11, #4, #32
0000000000012f04	ldr	w12, [x8, x12]
0000000000012f08	cmp	w12, #0xa0
0000000000012f0c	csinc	w10, w10, w11, ge
0000000000012f10	csel	w9, w9, w11, lt
0000000000012f14	cmp	w10, w9
0000000000012f18	b.lt	0x12ef0
0000000000012f1c	b	0x12f28
0000000000012f20	mov	w10, #0x0
0000000000012f24	b	0x12f28
0000000000012f28	sxtw	x9, w10
0000000000012f2c	add	x8, x8, x9, lsl #4
0000000000012f30	ldr	x8, [x8, #0x8]
0000000000012f34	ldr	x8, [x8]
0000000000012f38	mov	x0, x23
0000000000012f3c	blr	x8
0000000000012f40	tbz	w0, #0x0, 0x12d5c
0000000000012f44	adr	x8, #0x815c5
0000000000012f48	nop
0000000000012f4c	ldarb	w8, [x8]
0000000000012f50	tbz	w8, #0x0, 0x12f58
0000000000012f54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000012f58	ldr	x8, [x23]
0000000000012f5c	and	x8, x8, #0xfffffffffffffffc
0000000000012f60	ldr	x8, [x8]
0000000000012f64	ldr	w9, [x8, #0x3c]
0000000000012f68	ldr	x8, [x8, #0x40]
0000000000012f6c	tbnz	w9, #0x1f, 0x12f78
0000000000012f70	and	x9, x9, x28
0000000000012f74	b	0x12ffc
0000000000012f78	neg	w10, w9
0000000000012f7c	mvn	w9, w9
0000000000012f80	cmp	w10, #0x9
0000000000012f84	b.ge	0x12fbc
0000000000012f88	cmp	w10, #0x2
0000000000012f8c	b.lt	0x12ff0
0000000000012f90	mov	x10, #0x0
0000000000012f94	mov	x11, x8
0000000000012f98	ldr	w12, [x11]
0000000000012f9c	cmp	w12, #0x9f
0000000000012fa0	b.gt	0x12ff8
0000000000012fa4	add	x10, x10, #0x1
0000000000012fa8	add	x11, x11, #0x10
0000000000012fac	cmp	x9, x10
0000000000012fb0	b.ne	0x12f98
0000000000012fb4	mov	x10, x9
0000000000012fb8	b	0x12ff8
0000000000012fbc	mov	w10, #0x0
0000000000012fc0	add	w11, w9, w10
0000000000012fc4	cmp	w11, #0x0
0000000000012fc8	cinc	w11, w11, lt
0000000000012fcc	asr	w11, w11, #1
0000000000012fd0	sbfiz	x12, x11, #4, #32
0000000000012fd4	ldr	w12, [x8, x12]
0000000000012fd8	cmp	w12, #0xa0
0000000000012fdc	csinc	w10, w10, w11, ge
0000000000012fe0	csel	w9, w9, w11, lt
0000000000012fe4	cmp	w10, w9
0000000000012fe8	b.lt	0x12fc0
0000000000012fec	b	0x12ff8
0000000000012ff0	mov	w10, #0x0
0000000000012ff4	b	0x12ff8
0000000000012ff8	sxtw	x9, w10
0000000000012ffc	add	x8, x8, x9, lsl #4
0000000000013000	ldr	x8, [x8, #0x8]
0000000000013004	ldr	x8, [x8, #0x8]
0000000000013008	mov	x0, x23
000000000001300c	mov	x1, x21
0000000000013010	blr	x8
0000000000013014	mov	x24, x0
0000000000013018	ldr	x8, [x0]
000000000001301c	and	x8, x8, #0xfffffffffffffffc
0000000000013020	ldr	x8, [x8]
0000000000013024	ldr	w9, [x8, #0x3c]
0000000000013028	ldr	x8, [x8, #0x40]
000000000001302c	tbnz	w9, #0x1f, 0x13038
0000000000013030	and	x9, x9, x27
0000000000013034	b	0x130bc
0000000000013038	neg	w10, w9
000000000001303c	mvn	w9, w9
0000000000013040	cmp	w10, #0x9
0000000000013044	b.ge	0x1307c
0000000000013048	cmp	w10, #0x2
000000000001304c	b.lt	0x130b0
0000000000013050	mov	x10, #0x0
0000000000013054	mov	x11, x8
0000000000013058	ldr	w12, [x11]
000000000001305c	cmp	w12, #0xa7
0000000000013060	b.gt	0x130b8
0000000000013064	add	x10, x10, #0x1
0000000000013068	add	x11, x11, #0x10
000000000001306c	cmp	x9, x10
0000000000013070	b.ne	0x13058
0000000000013074	mov	x10, x9
0000000000013078	b	0x130b8
000000000001307c	mov	w10, #0x0
0000000000013080	add	w11, w9, w10
0000000000013084	cmp	w11, #0x0
0000000000013088	cinc	w11, w11, lt
000000000001308c	asr	w11, w11, #1
0000000000013090	sbfiz	x12, x11, #4, #32
0000000000013094	ldr	w12, [x8, x12]
0000000000013098	cmp	w12, #0xa8
000000000001309c	csinc	w10, w10, w11, ge
00000000000130a0	csel	w9, w9, w11, lt
00000000000130a4	cmp	w10, w9
00000000000130a8	b.lt	0x13080
00000000000130ac	b	0x130b8
00000000000130b0	mov	w10, #0x0
00000000000130b4	b	0x130b8
00000000000130b8	sxtw	x9, w10
00000000000130bc	add	x8, x8, x9, lsl #4
00000000000130c0	ldr	x8, [x8, #0x8]
00000000000130c4	ldr	x8, [x8]
00000000000130c8	mov	x0, x24
00000000000130cc	mov	x1, x20
00000000000130d0	blr	x8
00000000000130d4	mov	x25, x0
00000000000130d8	ldr	x8, [x24]
00000000000130dc	and	x8, x8, #0xfffffffffffffffc
00000000000130e0	ldr	x8, [x8]
00000000000130e4	ldr	w9, [x8, #0x3c]
00000000000130e8	ldr	x8, [x8, #0x40]
00000000000130ec	tbz	w9, #0x1f, 0x12e40
00000000000130f0	neg	w10, w9
00000000000130f4	mvn	w9, w9
00000000000130f8	cmp	w10, #0x9
00000000000130fc	b.ge	0x13138
0000000000013100	cmp	w10, #0x2
0000000000013104	b.lt	0x1316c
0000000000013108	mov	x10, #0x0
000000000001310c	mov	x11, x8
0000000000013110	ldr	w12, [x11]
0000000000013114	cmp	w12, #0xa7
0000000000013118	b.gt	0x13178
000000000001311c	add	x10, x10, #0x1
0000000000013120	add	x11, x11, #0x10
0000000000013124	cmp	x9, x10
0000000000013128	b.ne	0x13110
000000000001312c	mov	x10, x9
0000000000013130	sxtw	x9, w10
0000000000013134	b	0x12e44
0000000000013138	mov	w10, #0x0
000000000001313c	add	w11, w9, w10
0000000000013140	cmp	w11, #0x0
0000000000013144	cinc	w11, w11, lt
0000000000013148	asr	w11, w11, #1
000000000001314c	sbfiz	x12, x11, #4, #32
0000000000013150	ldr	w12, [x8, x12]
0000000000013154	cmp	w12, #0xa8
0000000000013158	csinc	w10, w10, w11, ge
000000000001315c	csel	w9, w9, w11, lt
0000000000013160	cmp	w10, w9
0000000000013164	b.lt	0x1313c
0000000000013168	b	0x13178
000000000001316c	mov	w10, #0x0
0000000000013170	sxtw	x9, w10
0000000000013174	b	0x12e44
0000000000013178	sxtw	x9, w10
000000000001317c	b	0x12e44
0000000000013180	mov	w0, #0x0
0000000000013184	ldr	x8, [sp, #0x8]
0000000000013188	str	x8, [x26, #0x110]
000000000001318c	ldp	x29, x30, [sp, #0x90]
0000000000013190	ldp	x20, x19, [sp, #0x80]
0000000000013194	ldp	x22, x21, [sp, #0x70]
0000000000013198	ldp	x24, x23, [sp, #0x60]
000000000001319c	ldp	x26, x25, [sp, #0x50]
00000000000131a0	ldp	x28, x27, [sp, #0x40]
00000000000131a4	add	sp, sp, #0xa0
00000000000131a8	ret
00000000000131ac	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#hashCode(){}kotlin.Int:
00000000000131b0	sub	sp, sp, #0x90
00000000000131b4	stp	x28, x27, [sp, #0x30]
00000000000131b8	stp	x26, x25, [sp, #0x40]
00000000000131bc	stp	x24, x23, [sp, #0x50]
00000000000131c0	stp	x22, x21, [sp, #0x60]
00000000000131c4	stp	x20, x19, [sp, #0x70]
00000000000131c8	stp	x29, x30, [sp, #0x80]
00000000000131cc	add	x29, sp, #0x80
00000000000131d0	mov	x19, x0
00000000000131d4	movi.16b	v0, #0x0
00000000000131d8	stp	q0, q0, [sp]
00000000000131dc	str	q0, [sp, #0x20]
00000000000131e0	mov	x8, sp
00000000000131e4	add	x20, x8, #0x20
00000000000131e8	add	x22, x8, #0x18
00000000000131ec	add	x21, x8, #0x28
00000000000131f0	adrp	x0, 103 ; 0x7a000
00000000000131f4	add	x0, x0, #0x4e0
00000000000131f8	ldr	x9, [x0]
00000000000131fc	blr	x9
0000000000013200	ldr	x26, [x0]
0000000000013204	ldr	x9, [x26, #0x110]
0000000000013208	str	x8, [x26, #0x110]
000000000001320c	mov	x8, #0x600000000
0000000000013210	stp	x9, x8, [sp, #0x8]
0000000000013214	adr	x27, #0x812f5
0000000000013218	nop
000000000001321c	ldarb	w8, [x27]
0000000000013220	tbz	w8, #0x0, 0x13228
0000000000013224	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013228	mov	x0, x19
000000000001322c	mov	x1, x22
0000000000013230	bl	_Kotlin_NSDictionaryAsKMap_keyIterator
0000000000013234	mov	x23, x0
0000000000013238	mov	w22, #0x0
000000000001323c	mov	w28, #0xa0
0000000000013240	b	0x13278
0000000000013244	mov	w24, #0x0
0000000000013248	mov	x0, x19
000000000001324c	mov	x1, x25
0000000000013250	mov	x2, x21
0000000000013254	bl	_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification
0000000000013258	cbz	x0, 0x13270
000000000001325c	ldr	x8, [x0]
0000000000013260	and	x8, x8, #0xfffffffffffffffc
0000000000013264	ldr	x8, [x8]
0000000000013268	ldr	x8, [x8, #0x78]
000000000001326c	blr	x8
0000000000013270	eor	w8, w24, w0
0000000000013274	add	w22, w22, w8
0000000000013278	ldr	x8, [x23]
000000000001327c	and	x8, x8, #0xfffffffffffffffc
0000000000013280	ldr	x8, [x8]
0000000000013284	ldr	w9, [x8, #0x3c]
0000000000013288	ldr	x8, [x8, #0x40]
000000000001328c	tbnz	w9, #0x1f, 0x132b0
0000000000013290	and	x9, x9, x28
0000000000013294	add	x8, x8, x9, lsl #4
0000000000013298	ldr	x8, [x8, #0x8]
000000000001329c	ldr	x8, [x8]
00000000000132a0	mov	x0, x23
00000000000132a4	blr	x8
00000000000132a8	tbnz	w0, #0x0, 0x1334c
00000000000132ac	b	0x13450
00000000000132b0	neg	w10, w9
00000000000132b4	mvn	w9, w9
00000000000132b8	cmp	w10, #0x9
00000000000132bc	b.ge	0x132f4
00000000000132c0	cmp	w10, #0x2
00000000000132c4	b.lt	0x13328
00000000000132c8	mov	x10, #0x0
00000000000132cc	mov	x11, x8
00000000000132d0	ldr	w12, [x11]
00000000000132d4	cmp	w12, #0x9f
00000000000132d8	b.gt	0x13330
00000000000132dc	add	x10, x10, #0x1
00000000000132e0	add	x11, x11, #0x10
00000000000132e4	cmp	x9, x10
00000000000132e8	b.ne	0x132d0
00000000000132ec	mov	x10, x9
00000000000132f0	b	0x13330
00000000000132f4	mov	w10, #0x0
00000000000132f8	add	w11, w9, w10
00000000000132fc	cmp	w11, #0x0
0000000000013300	cinc	w11, w11, lt
0000000000013304	asr	w11, w11, #1
0000000000013308	sbfiz	x12, x11, #4, #32
000000000001330c	ldr	w12, [x8, x12]
0000000000013310	cmp	w12, #0xa0
0000000000013314	csinc	w10, w10, w11, ge
0000000000013318	csel	w9, w9, w11, lt
000000000001331c	cmp	w10, w9
0000000000013320	b.lt	0x132f8
0000000000013324	b	0x13330
0000000000013328	mov	w10, #0x0
000000000001332c	b	0x13330
0000000000013330	sxtw	x9, w10
0000000000013334	add	x8, x8, x9, lsl #4
0000000000013338	ldr	x8, [x8, #0x8]
000000000001333c	ldr	x8, [x8]
0000000000013340	mov	x0, x23
0000000000013344	blr	x8
0000000000013348	tbz	w0, #0x0, 0x13450
000000000001334c	ldarb	w8, [x27]
0000000000013350	tbz	w8, #0x0, 0x13358
0000000000013354	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013358	ldr	x8, [x23]
000000000001335c	and	x8, x8, #0xfffffffffffffffc
0000000000013360	ldr	x8, [x8]
0000000000013364	ldr	w9, [x8, #0x3c]
0000000000013368	ldr	x8, [x8, #0x40]
000000000001336c	tbnz	w9, #0x1f, 0x13378
0000000000013370	and	x9, x9, x28
0000000000013374	b	0x133fc
0000000000013378	neg	w10, w9
000000000001337c	mvn	w9, w9
0000000000013380	cmp	w10, #0x9
0000000000013384	b.ge	0x133bc
0000000000013388	cmp	w10, #0x2
000000000001338c	b.lt	0x133f0
0000000000013390	mov	x10, #0x0
0000000000013394	mov	x11, x8
0000000000013398	ldr	w12, [x11]
000000000001339c	cmp	w12, #0x9f
00000000000133a0	b.gt	0x133f8
00000000000133a4	add	x10, x10, #0x1
00000000000133a8	add	x11, x11, #0x10
00000000000133ac	cmp	x9, x10
00000000000133b0	b.ne	0x13398
00000000000133b4	mov	x10, x9
00000000000133b8	b	0x133f8
00000000000133bc	mov	w10, #0x0
00000000000133c0	add	w11, w9, w10
00000000000133c4	cmp	w11, #0x0
00000000000133c8	cinc	w11, w11, lt
00000000000133cc	asr	w11, w11, #1
00000000000133d0	sbfiz	x12, x11, #4, #32
00000000000133d4	ldr	w12, [x8, x12]
00000000000133d8	cmp	w12, #0xa0
00000000000133dc	csinc	w10, w10, w11, ge
00000000000133e0	csel	w9, w9, w11, lt
00000000000133e4	cmp	w10, w9
00000000000133e8	b.lt	0x133c0
00000000000133ec	b	0x133f8
00000000000133f0	mov	w10, #0x0
00000000000133f4	b	0x133f8
00000000000133f8	sxtw	x9, w10
00000000000133fc	add	x8, x8, x9, lsl #4
0000000000013400	ldr	x8, [x8, #0x8]
0000000000013404	ldr	x8, [x8, #0x8]
0000000000013408	mov	x0, x23
000000000001340c	mov	x1, x20
0000000000013410	blr	x8
0000000000013414	mov	x25, x0
0000000000013418	cbz	x0, 0x13244
000000000001341c	ldr	x8, [x25]
0000000000013420	and	x8, x8, #0xfffffffffffffffc
0000000000013424	ldr	x8, [x8]
0000000000013428	ldr	x8, [x8, #0x78]
000000000001342c	mov	x0, x25
0000000000013430	blr	x8
0000000000013434	mov	x24, x0
0000000000013438	mov	x0, x19
000000000001343c	mov	x1, x25
0000000000013440	mov	x2, x21
0000000000013444	bl	_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification
0000000000013448	cbnz	x0, 0x1325c
000000000001344c	b	0x13270
0000000000013450	ldr	x8, [sp, #0x8]
0000000000013454	str	x8, [x26, #0x110]
0000000000013458	mov	x0, x22
000000000001345c	ldp	x29, x30, [sp, #0x80]
0000000000013460	ldp	x20, x19, [sp, #0x70]
0000000000013464	ldp	x22, x21, [sp, #0x60]
0000000000013468	ldp	x24, x23, [sp, #0x50]
000000000001346c	ldp	x26, x25, [sp, #0x40]
0000000000013470	ldp	x28, x27, [sp, #0x30]
0000000000013474	add	sp, sp, #0x90
0000000000013478	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#toString(){}kotlin.String:
000000000001347c	sub	sp, sp, #0x60
0000000000013480	stp	x22, x21, [sp, #0x30]
0000000000013484	stp	x20, x19, [sp, #0x40]
0000000000013488	stp	x29, x30, [sp, #0x50]
000000000001348c	add	x29, sp, #0x50
0000000000013490	mov	x19, x1
0000000000013494	mov	x20, x0
0000000000013498	movi.16b	v0, #0x0
000000000001349c	stp	q0, q0, [sp]
00000000000134a0	str	xzr, [sp, #0x20]
00000000000134a4	adrp	x0, 103 ; 0x7a000
00000000000134a8	add	x0, x0, #0x4e0
00000000000134ac	ldr	x8, [x0]
00000000000134b0	blr	x8
00000000000134b4	ldr	x22, [x0]
00000000000134b8	ldr	x8, [x22, #0x110]
00000000000134bc	mov	x9, sp
00000000000134c0	str	x9, [x22, #0x110]
00000000000134c4	mov	x9, #0x500000000
00000000000134c8	stp	x8, x9, [sp, #0x8]
00000000000134cc	adr	x8, #0x8103d
00000000000134d0	nop
00000000000134d4	ldarb	w8, [x8]
00000000000134d8	tbz	w8, #0x0, 0x134e0
00000000000134dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000134e0	ldr	x8, [x22, #0x118]
00000000000134e4	add	x0, x8, #0x70
00000000000134e8	mov	w1, #0x18
00000000000134ec	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000134f0	mov	x21, x0
00000000000134f4	adr	x8, #0x4fedc
00000000000134f8	nop
00000000000134fc	str	x8, [x21, #0x10]!
0000000000013500	stur	xzr, [x21, #-0x8]
0000000000013504	str	x21, [sp, #0x18]
0000000000013508	str	x20, [x21, #0x8]
000000000001350c	str	x21, [sp, #0x18]
0000000000013510	ldr	x8, [x22, #0x118]
0000000000013514	add	x0, x8, #0x70
0000000000013518	mov	w1, #0x18
000000000001351c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013520	adr	x8, #0x50090
0000000000013524	nop
0000000000013528	mov	x3, x0
000000000001352c	str	x8, [x3, #0x10]!
0000000000013530	stur	xzr, [x3, #-0x8]
0000000000013534	str	x3, [sp, #0x20]
0000000000013538	str	x20, [x3, #0x8]
000000000001353c	adr	x1, #0x5c104
0000000000013540	nop
0000000000013544	adr	x2, #0x5c11c
0000000000013548	nop
000000000001354c	mov	x0, x21
0000000000013550	mov	x4, x19
0000000000013554	bl	"_kfun:kotlin.collections#joinToString$default__at__kotlin.collections.Iterable<0:0>(kotlin.CharSequence?;kotlin.CharSequence?;kotlin.CharSequence?;kotlin.Int;kotlin.CharSequence?;kotlin.Function1<0:0,kotlin.CharSequence>?;kotlin.Int){0§<kotlin.Any?>}kotlin.String"
0000000000013558	str	x0, [x19]
000000000001355c	ldr	x8, [sp, #0x8]
0000000000013560	str	x8, [x22, #0x110]
0000000000013564	ldp	x29, x30, [sp, #0x50]
0000000000013568	ldp	x20, x19, [sp, #0x40]
000000000001356c	ldp	x22, x21, [sp, #0x30]
0000000000013570	add	sp, sp, #0x60
0000000000013574	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-size>(){}kotlin.Int:
0000000000013578	stp	x20, x19, [sp, #-0x20]!
000000000001357c	stp	x29, x30, [sp, #0x10]
0000000000013580	add	x29, sp, #0x10
0000000000013584	mov	x19, x0
0000000000013588	adr	x8, #0x80f81
000000000001358c	nop
0000000000013590	ldarb	w8, [x8]
0000000000013594	tbz	w8, #0x0, 0x1359c
0000000000013598	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001359c	ldar	x8, [x19]
00000000000135a0	and	x8, x8, #0xfffffffffffffffc
00000000000135a4	ldr	x9, [x8]
00000000000135a8	cmp	x8, #0x0
00000000000135ac	ccmp	x9, x8, #0x4, ne
00000000000135b0	b.ne	0x135bc
00000000000135b4	mov	x0, #0x0
00000000000135b8	b	0x135c4
00000000000135bc	add	x8, x8, #0x10
00000000000135c0	ldar	x0, [x8]
00000000000135c4	nop
00000000000135c8	ldr	x1, #0x63670 ; Objc selector ref: count
00000000000135cc	bl	0x55ca8 ; Objc message: -[x0 count]
00000000000135d0	lsr	x8, x0, #31
00000000000135d4	cbnz	x8, 0x135e4
00000000000135d8	ldp	x29, x30, [sp, #0x10]
00000000000135dc	ldp	x20, x19, [sp], #0x20
00000000000135e0	ret
00000000000135e4	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#isEmpty(){}kotlin.Boolean:
00000000000135e8	stp	x20, x19, [sp, #-0x20]!
00000000000135ec	stp	x29, x30, [sp, #0x10]
00000000000135f0	add	x29, sp, #0x10
00000000000135f4	mov	x19, x0
00000000000135f8	adr	x8, #0x80f11
00000000000135fc	nop
0000000000013600	ldarb	w8, [x8]
0000000000013604	tbz	w8, #0x0, 0x1360c
0000000000013608	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001360c	ldar	x8, [x19]
0000000000013610	and	x8, x8, #0xfffffffffffffffc
0000000000013614	ldr	x9, [x8]
0000000000013618	cmp	x8, #0x0
000000000001361c	ccmp	x9, x8, #0x4, ne
0000000000013620	b.ne	0x1362c
0000000000013624	mov	x0, #0x0
0000000000013628	b	0x13634
000000000001362c	add	x8, x8, #0x10
0000000000013630	ldar	x0, [x8]
0000000000013634	nop
0000000000013638	ldr	x1, #0x63600 ; Objc selector ref: count
000000000001363c	bl	0x55ca8 ; Objc message: -[x0 count]
0000000000013640	lsr	x8, x0, #31
0000000000013644	cbnz	x8, 0x1365c
0000000000013648	cmp	w0, #0x0
000000000001364c	cset	w0, eq
0000000000013650	ldp	x29, x30, [sp, #0x10]
0000000000013654	ldp	x20, x19, [sp], #0x20
0000000000013658	ret
000000000001365c	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-keys>(){}kotlin.collections.Set<kotlin.Any?>:
0000000000013660	stp	x20, x19, [sp, #-0x20]!
0000000000013664	stp	x29, x30, [sp, #0x10]
0000000000013668	add	x29, sp, #0x10
000000000001366c	mov	x19, x1
0000000000013670	mov	x20, x0
0000000000013674	adr	x8, #0x80e95
0000000000013678	nop
000000000001367c	ldarb	w8, [x8]
0000000000013680	tbz	w8, #0x0, 0x13688
0000000000013684	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013688	adrp	x0, 103 ; 0x7a000
000000000001368c	add	x0, x0, #0x4e0
0000000000013690	ldr	x8, [x0]
0000000000013694	blr	x8
0000000000013698	ldr	x8, [x0]
000000000001369c	ldr	x8, [x8, #0x118]
00000000000136a0	add	x0, x8, #0x70
00000000000136a4	mov	w1, #0x18
00000000000136a8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000136ac	adr	x8, #0x4fba4
00000000000136b0	nop
00000000000136b4	str	x8, [x0, #0x10]!
00000000000136b8	stur	xzr, [x0, #-0x8]
00000000000136bc	str	x0, [x19]
00000000000136c0	str	x20, [x0, #0x8]
00000000000136c4	str	x0, [x19]
00000000000136c8	ldp	x29, x30, [sp, #0x10]
00000000000136cc	ldp	x20, x19, [sp], #0x20
00000000000136d0	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-values>(){}kotlin.collections.Collection<kotlin.Any?>:
00000000000136d4	stp	x20, x19, [sp, #-0x20]!
00000000000136d8	stp	x29, x30, [sp, #0x10]
00000000000136dc	add	x29, sp, #0x10
00000000000136e0	mov	x19, x1
00000000000136e4	mov	x20, x0
00000000000136e8	adr	x8, #0x80e21
00000000000136ec	nop
00000000000136f0	ldarb	w8, [x8]
00000000000136f4	tbz	w8, #0x0, 0x136fc
00000000000136f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000136fc	adrp	x0, 103 ; 0x7a000
0000000000013700	add	x0, x0, #0x4e0
0000000000013704	ldr	x8, [x0]
0000000000013708	blr	x8
000000000001370c	ldr	x8, [x0]
0000000000013710	ldr	x8, [x8, #0x118]
0000000000013714	add	x0, x8, #0x70
0000000000013718	mov	w1, #0x18
000000000001371c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013720	adr	x8, #0x4fbf0
0000000000013724	nop
0000000000013728	str	x8, [x0, #0x10]!
000000000001372c	stur	xzr, [x0, #-0x8]
0000000000013730	str	x0, [x19]
0000000000013734	str	x20, [x0, #0x8]
0000000000013738	str	x0, [x19]
000000000001373c	ldp	x29, x30, [sp, #0x10]
0000000000013740	ldp	x20, x19, [sp], #0x20
0000000000013744	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap#<get-entries>(){}kotlin.collections.Set<kotlin.collections.Map.Entry<kotlin.Any?,kotlin.Any?>>:
0000000000013748	stp	x20, x19, [sp, #-0x20]!
000000000001374c	stp	x29, x30, [sp, #0x10]
0000000000013750	add	x29, sp, #0x10
0000000000013754	mov	x19, x1
0000000000013758	mov	x20, x0
000000000001375c	adr	x8, #0x80dad
0000000000013760	nop
0000000000013764	ldarb	w8, [x8]
0000000000013768	tbz	w8, #0x0, 0x13770
000000000001376c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013770	adrp	x0, 103 ; 0x7a000
0000000000013774	add	x0, x0, #0x4e0
0000000000013778	ldr	x8, [x0]
000000000001377c	blr	x8
0000000000013780	ldr	x8, [x0]
0000000000013784	ldr	x8, [x8, #0x118]
0000000000013788	add	x0, x8, #0x70
000000000001378c	mov	w1, #0x18
0000000000013790	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013794	adr	x8, #0x4fc3c
0000000000013798	nop
000000000001379c	str	x8, [x0, #0x10]!
00000000000137a0	stur	xzr, [x0, #-0x8]
00000000000137a4	str	x0, [x19]
00000000000137a8	str	x20, [x0, #0x8]
00000000000137ac	str	x0, [x19]
00000000000137b0	ldp	x29, x30, [sp, #0x10]
00000000000137b4	ldp	x20, x19, [sp], #0x20
00000000000137b8	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Keys.<get-size>#internal:
00000000000137bc	stp	x20, x19, [sp, #-0x20]!
00000000000137c0	stp	x29, x30, [sp, #0x10]
00000000000137c4	add	x29, sp, #0x10
00000000000137c8	mov	x19, x0
00000000000137cc	adr	x8, #0x80d3d
00000000000137d0	nop
00000000000137d4	ldarb	w8, [x8]
00000000000137d8	tbz	w8, #0x0, 0x137e0
00000000000137dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000137e0	ldr	x8, [x19, #0x8]
00000000000137e4	ldar	x8, [x8]
00000000000137e8	and	x8, x8, #0xfffffffffffffffc
00000000000137ec	ldr	x9, [x8]
00000000000137f0	cmp	x8, #0x0
00000000000137f4	ccmp	x9, x8, #0x4, ne
00000000000137f8	b.ne	0x13804
00000000000137fc	mov	x0, #0x0
0000000000013800	b	0x1380c
0000000000013804	add	x8, x8, #0x10
0000000000013808	ldar	x0, [x8]
000000000001380c	nop
0000000000013810	ldr	x1, #0x63428 ; Objc selector ref: count
0000000000013814	bl	0x55ca8 ; Objc message: -[x0 count]
0000000000013818	lsr	x8, x0, #31
000000000001381c	cbnz	x8, 0x1382c
0000000000013820	ldp	x29, x30, [sp, #0x10]
0000000000013824	ldp	x20, x19, [sp], #0x20
0000000000013828	ret
000000000001382c	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Keys.iterator#internal:
0000000000013830	stp	x20, x19, [sp, #-0x20]!
0000000000013834	stp	x29, x30, [sp, #0x10]
0000000000013838	add	x29, sp, #0x10
000000000001383c	mov	x19, x1
0000000000013840	mov	x20, x0
0000000000013844	adr	x8, #0x80cc5
0000000000013848	nop
000000000001384c	ldarb	w8, [x8]
0000000000013850	tbz	w8, #0x0, 0x13858
0000000000013854	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013858	ldr	x0, [x20, #0x8]
000000000001385c	mov	x1, x19
0000000000013860	bl	_Kotlin_NSDictionaryAsKMap_keyIterator
0000000000013864	str	x0, [x19]
0000000000013868	ldp	x29, x30, [sp, #0x10]
000000000001386c	ldp	x20, x19, [sp], #0x20
0000000000013870	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Keys.contains#internal:
0000000000013874	stp	x20, x19, [sp, #-0x20]!
0000000000013878	stp	x29, x30, [sp, #0x10]
000000000001387c	add	x29, sp, #0x10
0000000000013880	mov	x19, x1
0000000000013884	mov	x20, x0
0000000000013888	adr	x8, #0x80c81
000000000001388c	nop
0000000000013890	ldarb	w8, [x8]
0000000000013894	tbz	w8, #0x0, 0x1389c
0000000000013898	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001389c	ldr	x0, [x20, #0x8]
00000000000138a0	mov	x1, x19
00000000000138a4	ldp	x29, x30, [sp, #0x10]
00000000000138a8	ldp	x20, x19, [sp], #0x20
00000000000138ac	b	_Kotlin_NSDictionaryAsKMap_containsKey
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Values.<get-size>#internal:
00000000000138b0	stp	x20, x19, [sp, #-0x20]!
00000000000138b4	stp	x29, x30, [sp, #0x10]
00000000000138b8	add	x29, sp, #0x10
00000000000138bc	mov	x19, x0
00000000000138c0	adr	x8, #0x80c49
00000000000138c4	nop
00000000000138c8	ldarb	w8, [x8]
00000000000138cc	tbz	w8, #0x0, 0x138d4
00000000000138d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000138d4	ldr	x8, [x19, #0x8]
00000000000138d8	ldar	x8, [x8]
00000000000138dc	and	x8, x8, #0xfffffffffffffffc
00000000000138e0	ldr	x9, [x8]
00000000000138e4	cmp	x8, #0x0
00000000000138e8	ccmp	x9, x8, #0x4, ne
00000000000138ec	b.ne	0x138f8
00000000000138f0	mov	x0, #0x0
00000000000138f4	b	0x13900
00000000000138f8	add	x8, x8, #0x10
00000000000138fc	ldar	x0, [x8]
0000000000013900	nop
0000000000013904	ldr	x1, #0x63334 ; Objc selector ref: count
0000000000013908	bl	0x55ca8 ; Objc message: -[x0 count]
000000000001390c	lsr	x8, x0, #31
0000000000013910	cbnz	x8, 0x13920
0000000000013914	ldp	x29, x30, [sp, #0x10]
0000000000013918	ldp	x20, x19, [sp], #0x20
000000000001391c	ret
0000000000013920	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Values.iterator#internal:
0000000000013924	stp	x20, x19, [sp, #-0x20]!
0000000000013928	stp	x29, x30, [sp, #0x10]
000000000001392c	add	x29, sp, #0x10
0000000000013930	mov	x19, x1
0000000000013934	mov	x20, x0
0000000000013938	adr	x8, #0x80bd1
000000000001393c	nop
0000000000013940	ldarb	w8, [x8]
0000000000013944	tbz	w8, #0x0, 0x1394c
0000000000013948	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001394c	ldr	x0, [x20, #0x8]
0000000000013950	mov	x1, x19
0000000000013954	bl	_Kotlin_NSDictionaryAsKMap_valueIterator
0000000000013958	str	x0, [x19]
000000000001395c	ldp	x29, x30, [sp, #0x10]
0000000000013960	ldp	x20, x19, [sp], #0x20
0000000000013964	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Values.contains#internal:
0000000000013968	stp	x20, x19, [sp, #-0x20]!
000000000001396c	stp	x29, x30, [sp, #0x10]
0000000000013970	add	x29, sp, #0x10
0000000000013974	mov	x19, x1
0000000000013978	mov	x20, x0
000000000001397c	adr	x8, #0x80b8d
0000000000013980	nop
0000000000013984	ldarb	w8, [x8]
0000000000013988	tbz	w8, #0x0, 0x13990
000000000001398c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013990	ldr	x0, [x20, #0x8]
0000000000013994	mov	x1, x19
0000000000013998	ldp	x29, x30, [sp, #0x10]
000000000001399c	ldp	x20, x19, [sp], #0x20
00000000000139a0	b	_Kotlin_NSDictionaryAsKMap_containsValue
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entries.<get-size>#internal:
00000000000139a4	stp	x20, x19, [sp, #-0x20]!
00000000000139a8	stp	x29, x30, [sp, #0x10]
00000000000139ac	add	x29, sp, #0x10
00000000000139b0	mov	x19, x0
00000000000139b4	adr	x8, #0x80b55
00000000000139b8	nop
00000000000139bc	ldarb	w8, [x8]
00000000000139c0	tbz	w8, #0x0, 0x139c8
00000000000139c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000139c8	ldr	x8, [x19, #0x8]
00000000000139cc	ldar	x8, [x8]
00000000000139d0	and	x8, x8, #0xfffffffffffffffc
00000000000139d4	ldr	x9, [x8]
00000000000139d8	cmp	x8, #0x0
00000000000139dc	ccmp	x9, x8, #0x4, ne
00000000000139e0	b.ne	0x139ec
00000000000139e4	mov	x0, #0x0
00000000000139e8	b	0x139f4
00000000000139ec	add	x8, x8, #0x10
00000000000139f0	ldar	x0, [x8]
00000000000139f4	nop
00000000000139f8	ldr	x1, #0x63240 ; Objc selector ref: count
00000000000139fc	bl	0x55ca8 ; Objc message: -[x0 count]
0000000000013a00	lsr	x8, x0, #31
0000000000013a04	cbnz	x8, 0x13a14
0000000000013a08	ldp	x29, x30, [sp, #0x10]
0000000000013a0c	ldp	x20, x19, [sp], #0x20
0000000000013a10	ret
0000000000013a14	bl	_Kotlin_ObjCExport_ThrowCollectionTooLarge
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entries.iterator#internal:
0000000000013a18	sub	sp, sp, #0x50
0000000000013a1c	stp	x22, x21, [sp, #0x20]
0000000000013a20	stp	x20, x19, [sp, #0x30]
0000000000013a24	stp	x29, x30, [sp, #0x40]
0000000000013a28	add	x29, sp, #0x40
0000000000013a2c	mov	x19, x1
0000000000013a30	mov	x20, x0
0000000000013a34	adr	x8, #0x80ad5
0000000000013a38	nop
0000000000013a3c	ldarb	w8, [x8]
0000000000013a40	tbz	w8, #0x0, 0x13a48
0000000000013a44	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013a48	ldr	x20, [x20, #0x8]
0000000000013a4c	adrp	x0, 103 ; 0x7a000
0000000000013a50	add	x0, x0, #0x4e0
0000000000013a54	ldr	x8, [x0]
0000000000013a58	blr	x8
0000000000013a5c	mov	x21, x0
0000000000013a60	ldr	x8, [x0]
0000000000013a64	ldr	x8, [x8, #0x118]
0000000000013a68	add	x0, x8, #0x70
0000000000013a6c	mov	w1, #0x20
0000000000013a70	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000013a74	mov	x22, x0
0000000000013a78	adr	x8, #0x4faa8
0000000000013a7c	nop
0000000000013a80	str	x8, [x22, #0x10]!
0000000000013a84	stur	xzr, [x22, #-0x8]
0000000000013a88	str	x22, [x19]
0000000000013a8c	movi.16b	v0, #0x0
0000000000013a90	stp	q0, q0, [sp]
0000000000013a94	mov	x8, sp
0000000000013a98	add	x1, x8, #0x18
0000000000013a9c	ldr	x9, [x21]
0000000000013aa0	ldr	x10, [x9, #0x110]
0000000000013aa4	str	x8, [x9, #0x110]
0000000000013aa8	mov	x8, #0x400000000
0000000000013aac	stp	x10, x8, [sp, #0x8]
0000000000013ab0	str	x20, [x22, #0x10]
0000000000013ab4	mov	x0, x20
0000000000013ab8	bl	_Kotlin_NSDictionaryAsKMap_keyIterator
0000000000013abc	str	x0, [x22, #0x8]
0000000000013ac0	ldr	x8, [x21]
0000000000013ac4	ldr	x9, [sp, #0x8]
0000000000013ac8	str	x9, [x8, #0x110]
0000000000013acc	str	x22, [x19]
0000000000013ad0	mov	x0, x22
0000000000013ad4	ldp	x29, x30, [sp, #0x40]
0000000000013ad8	ldp	x20, x19, [sp, #0x30]
0000000000013adc	ldp	x22, x21, [sp, #0x20]
0000000000013ae0	add	sp, sp, #0x50
0000000000013ae4	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entries.contains#internal:
0000000000013ae8	sub	sp, sp, #0x70
0000000000013aec	stp	x24, x23, [sp, #0x30]
0000000000013af0	stp	x22, x21, [sp, #0x40]
0000000000013af4	stp	x20, x19, [sp, #0x50]
0000000000013af8	stp	x29, x30, [sp, #0x60]
0000000000013afc	add	x29, sp, #0x60
0000000000013b00	mov	x19, x1
0000000000013b04	mov	x20, x0
0000000000013b08	movi.16b	v0, #0x0
0000000000013b0c	stp	q0, q0, [sp]
0000000000013b10	str	xzr, [sp, #0x20]
0000000000013b14	mov	x22, sp
0000000000013b18	adrp	x0, 103 ; 0x7a000
0000000000013b1c	add	x0, x0, #0x4e0
0000000000013b20	ldr	x8, [x0]
0000000000013b24	blr	x8
0000000000013b28	ldr	x23, [x0]
0000000000013b2c	ldr	x8, [x23, #0x110]
0000000000013b30	str	x22, [x23, #0x110]
0000000000013b34	mov	x9, #0x500000000
0000000000013b38	stp	x8, x9, [sp, #0x8]
0000000000013b3c	adr	x8, #0x809cd
0000000000013b40	nop
0000000000013b44	ldarb	w8, [x8]
0000000000013b48	tbz	w8, #0x0, 0x13b50
0000000000013b4c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013b50	cbz	x19, 0x13c94
0000000000013b54	ldr	x8, [x19]
0000000000013b58	and	x8, x8, #0xfffffffffffffffc
0000000000013b5c	ldr	x8, [x8]
0000000000013b60	ldr	w9, [x8, #0x3c]
0000000000013b64	ldr	x8, [x8, #0x40]
0000000000013b68	tbnz	w9, #0x1f, 0x13bb4
0000000000013b6c	mov	w10, #0xa8
0000000000013b70	and	x9, x9, x10
0000000000013b74	lsl	x9, x9, #4
0000000000013b78	ldr	w8, [x8, x9]
0000000000013b7c	cmp	w8, #0xa8
0000000000013b80	b.ne	0x13c94
0000000000013b84	add	x21, x22, #0x20
0000000000013b88	add	x1, x22, #0x18
0000000000013b8c	ldr	x20, [x20, #0x8]
0000000000013b90	ldr	x8, [x19]
0000000000013b94	and	x8, x8, #0xfffffffffffffffc
0000000000013b98	ldr	x8, [x8]
0000000000013b9c	ldr	w9, [x8, #0x3c]
0000000000013ba0	ldr	x8, [x8, #0x40]
0000000000013ba4	tbnz	w9, #0x1f, 0x13c0c
0000000000013ba8	mov	w10, #0xa8
0000000000013bac	and	x9, x9, x10
0000000000013bb0	b	0x13d10
0000000000013bb4	neg	w10, w9
0000000000013bb8	mvn	w9, w9
0000000000013bbc	cmp	w10, #0x9
0000000000013bc0	b.ge	0x13c50
0000000000013bc4	cmp	w10, #0x2
0000000000013bc8	b.lt	0x13c9c
0000000000013bcc	mov	x10, #0x0
0000000000013bd0	mov	x11, x8
0000000000013bd4	ldr	w12, [x11]
0000000000013bd8	cmp	w12, #0xa7
0000000000013bdc	b.gt	0x13cec
0000000000013be0	add	x10, x10, #0x1
0000000000013be4	add	x11, x11, #0x10
0000000000013be8	cmp	x9, x10
0000000000013bec	b.ne	0x13bd4
0000000000013bf0	mov	x10, x9
0000000000013bf4	sxtw	x9, w10
0000000000013bf8	lsl	x9, x9, #4
0000000000013bfc	ldr	w8, [x8, x9]
0000000000013c00	cmp	w8, #0xa8
0000000000013c04	b.eq	0x13b84
0000000000013c08	b	0x13c94
0000000000013c0c	neg	w10, w9
0000000000013c10	mvn	w9, w9
0000000000013c14	cmp	w10, #0x9
0000000000013c18	b.ge	0x13cb8
0000000000013c1c	cmp	w10, #0x2
0000000000013c20	b.lt	0x13d04
0000000000013c24	mov	x10, #0x0
0000000000013c28	mov	x11, x8
0000000000013c2c	ldr	w12, [x11]
0000000000013c30	cmp	w12, #0xa7
0000000000013c34	b.gt	0x13d0c
0000000000013c38	add	x10, x10, #0x1
0000000000013c3c	add	x11, x11, #0x10
0000000000013c40	cmp	x9, x10
0000000000013c44	b.ne	0x13c2c
0000000000013c48	mov	x10, x9
0000000000013c4c	b	0x13d0c
0000000000013c50	mov	w10, #0x0
0000000000013c54	add	w11, w9, w10
0000000000013c58	cmp	w11, #0x0
0000000000013c5c	cinc	w11, w11, lt
0000000000013c60	asr	w11, w11, #1
0000000000013c64	sbfiz	x12, x11, #4, #32
0000000000013c68	ldr	w12, [x8, x12]
0000000000013c6c	cmp	w12, #0xa8
0000000000013c70	csinc	w10, w10, w11, ge
0000000000013c74	csel	w9, w9, w11, lt
0000000000013c78	cmp	w10, w9
0000000000013c7c	b.lt	0x13c54
0000000000013c80	sxtw	x9, w10
0000000000013c84	lsl	x9, x9, #4
0000000000013c88	ldr	w8, [x8, x9]
0000000000013c8c	cmp	w8, #0xa8
0000000000013c90	b.eq	0x13b84
0000000000013c94	mov	w0, #0x0
0000000000013c98	b	0x13df8
0000000000013c9c	mov	w10, #0x0
0000000000013ca0	sxtw	x9, w10
0000000000013ca4	lsl	x9, x9, #4
0000000000013ca8	ldr	w8, [x8, x9]
0000000000013cac	cmp	w8, #0xa8
0000000000013cb0	b.eq	0x13b84
0000000000013cb4	b	0x13c94
0000000000013cb8	mov	w10, #0x0
0000000000013cbc	add	w11, w9, w10
0000000000013cc0	cmp	w11, #0x0
0000000000013cc4	cinc	w11, w11, lt
0000000000013cc8	asr	w11, w11, #1
0000000000013ccc	sbfiz	x12, x11, #4, #32
0000000000013cd0	ldr	w12, [x8, x12]
0000000000013cd4	cmp	w12, #0xa8
0000000000013cd8	csinc	w10, w10, w11, ge
0000000000013cdc	csel	w9, w9, w11, lt
0000000000013ce0	cmp	w10, w9
0000000000013ce4	b.lt	0x13cbc
0000000000013ce8	b	0x13d0c
0000000000013cec	sxtw	x9, w10
0000000000013cf0	lsl	x9, x9, #4
0000000000013cf4	ldr	w8, [x8, x9]
0000000000013cf8	cmp	w8, #0xa8
0000000000013cfc	b.eq	0x13b84
0000000000013d00	b	0x13c94
0000000000013d04	mov	w10, #0x0
0000000000013d08	b	0x13d0c
0000000000013d0c	sxtw	x9, w10
0000000000013d10	add	x8, x8, x9, lsl #4
0000000000013d14	ldr	x8, [x8, #0x8]
0000000000013d18	ldr	x8, [x8]
0000000000013d1c	mov	x0, x19
0000000000013d20	blr	x8
0000000000013d24	mov	x22, x0
0000000000013d28	ldr	x8, [x19]
0000000000013d2c	and	x8, x8, #0xfffffffffffffffc
0000000000013d30	ldr	x8, [x8]
0000000000013d34	ldr	w9, [x8, #0x3c]
0000000000013d38	ldr	x8, [x8, #0x40]
0000000000013d3c	tbnz	w9, #0x1f, 0x13d4c
0000000000013d40	mov	w10, #0xa8
0000000000013d44	and	x9, x9, x10
0000000000013d48	b	0x13dd0
0000000000013d4c	neg	w10, w9
0000000000013d50	mvn	w9, w9
0000000000013d54	cmp	w10, #0x9
0000000000013d58	b.ge	0x13d90
0000000000013d5c	cmp	w10, #0x2
0000000000013d60	b.lt	0x13dc4
0000000000013d64	mov	x10, #0x0
0000000000013d68	mov	x11, x8
0000000000013d6c	ldr	w12, [x11]
0000000000013d70	cmp	w12, #0xa7
0000000000013d74	b.gt	0x13dcc
0000000000013d78	add	x10, x10, #0x1
0000000000013d7c	add	x11, x11, #0x10
0000000000013d80	cmp	x9, x10
0000000000013d84	b.ne	0x13d6c
0000000000013d88	mov	x10, x9
0000000000013d8c	b	0x13dcc
0000000000013d90	mov	w10, #0x0
0000000000013d94	add	w11, w9, w10
0000000000013d98	cmp	w11, #0x0
0000000000013d9c	cinc	w11, w11, lt
0000000000013da0	asr	w11, w11, #1
0000000000013da4	sbfiz	x12, x11, #4, #32
0000000000013da8	ldr	w12, [x8, x12]
0000000000013dac	cmp	w12, #0xa8
0000000000013db0	csinc	w10, w10, w11, ge
0000000000013db4	csel	w9, w9, w11, lt
0000000000013db8	cmp	w10, w9
0000000000013dbc	b.lt	0x13d94
0000000000013dc0	b	0x13dcc
0000000000013dc4	mov	w10, #0x0
0000000000013dc8	b	0x13dcc
0000000000013dcc	sxtw	x9, w10
0000000000013dd0	add	x8, x8, x9, lsl #4
0000000000013dd4	ldr	x8, [x8, #0x8]
0000000000013dd8	ldr	x8, [x8, #0x8]
0000000000013ddc	mov	x0, x19
0000000000013de0	mov	x1, x21
0000000000013de4	blr	x8
0000000000013de8	mov	x2, x0
0000000000013dec	mov	x0, x20
0000000000013df0	mov	x1, x22
0000000000013df4	bl	_Kotlin_NSDictionaryAsKMap_containsEntry
0000000000013df8	ldr	x8, [sp, #0x8]
0000000000013dfc	str	x8, [x23, #0x110]
0000000000013e00	ldp	x29, x30, [sp, #0x60]
0000000000013e04	ldp	x20, x19, [sp, #0x50]
0000000000013e08	ldp	x22, x21, [sp, #0x40]
0000000000013e0c	ldp	x24, x23, [sp, #0x30]
0000000000013e10	add	sp, sp, #0x70
0000000000013e14	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.<get-key>#internal:
0000000000013e18	stp	x20, x19, [sp, #-0x20]!
0000000000013e1c	stp	x29, x30, [sp, #0x10]
0000000000013e20	add	x29, sp, #0x10
0000000000013e24	mov	x19, x1
0000000000013e28	mov	x20, x0
0000000000013e2c	adr	x8, #0x806dd
0000000000013e30	nop
0000000000013e34	ldarb	w8, [x8]
0000000000013e38	tbz	w8, #0x0, 0x13e40
0000000000013e3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013e40	ldr	x0, [x20, #0x8]
0000000000013e44	str	x0, [x19]
0000000000013e48	ldp	x29, x30, [sp, #0x10]
0000000000013e4c	ldp	x20, x19, [sp], #0x20
0000000000013e50	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.<get-value>#internal:
0000000000013e54	stp	x20, x19, [sp, #-0x20]!
0000000000013e58	stp	x29, x30, [sp, #0x10]
0000000000013e5c	add	x29, sp, #0x10
0000000000013e60	mov	x19, x1
0000000000013e64	mov	x20, x0
0000000000013e68	adr	x8, #0x806a1
0000000000013e6c	nop
0000000000013e70	ldarb	w8, [x8]
0000000000013e74	tbz	w8, #0x0, 0x13e7c
0000000000013e78	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013e7c	ldr	x0, [x20, #0x10]
0000000000013e80	str	x0, [x19]
0000000000013e84	ldp	x29, x30, [sp, #0x10]
0000000000013e88	ldp	x20, x19, [sp], #0x20
0000000000013e8c	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.equals#internal:
0000000000013e90	sub	sp, sp, #0x60
0000000000013e94	stp	x22, x21, [sp, #0x30]
0000000000013e98	stp	x20, x19, [sp, #0x40]
0000000000013e9c	stp	x29, x30, [sp, #0x50]
0000000000013ea0	add	x29, sp, #0x50
0000000000013ea4	mov	x20, x1
0000000000013ea8	mov	x19, x0
0000000000013eac	movi.16b	v0, #0x0
0000000000013eb0	stp	q0, q0, [sp]
0000000000013eb4	str	xzr, [sp, #0x20]
0000000000013eb8	mov	x22, sp
0000000000013ebc	adrp	x0, 103 ; 0x7a000
0000000000013ec0	add	x0, x0, #0x4e0
0000000000013ec4	ldr	x8, [x0]
0000000000013ec8	blr	x8
0000000000013ecc	ldr	x21, [x0]
0000000000013ed0	ldr	x8, [x21, #0x110]
0000000000013ed4	str	x22, [x21, #0x110]
0000000000013ed8	mov	x9, #0x500000000
0000000000013edc	stp	x8, x9, [sp, #0x8]
0000000000013ee0	adr	x8, #0x80629
0000000000013ee4	nop
0000000000013ee8	ldarb	w8, [x8]
0000000000013eec	tbz	w8, #0x0, 0x13ef4
0000000000013ef0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000013ef4	cbz	x20, 0x140e4
0000000000013ef8	ldr	x8, [x20]
0000000000013efc	and	x8, x8, #0xfffffffffffffffc
0000000000013f00	ldr	x8, [x8]
0000000000013f04	ldr	w9, [x8, #0x3c]
0000000000013f08	ldr	x8, [x8, #0x40]
0000000000013f0c	tbnz	w9, #0x1f, 0x13f2c
0000000000013f10	mov	w10, #0xa8
0000000000013f14	and	x9, x9, x10
0000000000013f18	lsl	x9, x9, #4
0000000000013f1c	ldr	w8, [x8, x9]
0000000000013f20	cmp	w8, #0xa8
0000000000013f24	b.eq	0x13ffc
0000000000013f28	b	0x140e4
0000000000013f2c	neg	w10, w9
0000000000013f30	mvn	w9, w9
0000000000013f34	cmp	w10, #0x9
0000000000013f38	b.ge	0x13f84
0000000000013f3c	cmp	w10, #0x2
0000000000013f40	b.lt	0x13fcc
0000000000013f44	mov	x10, #0x0
0000000000013f48	mov	x11, x8
0000000000013f4c	ldr	w12, [x11]
0000000000013f50	cmp	w12, #0xa7
0000000000013f54	b.gt	0x13fe8
0000000000013f58	add	x10, x10, #0x1
0000000000013f5c	add	x11, x11, #0x10
0000000000013f60	cmp	x9, x10
0000000000013f64	b.ne	0x13f4c
0000000000013f68	mov	x10, x9
0000000000013f6c	sxtw	x9, w10
0000000000013f70	lsl	x9, x9, #4
0000000000013f74	ldr	w8, [x8, x9]
0000000000013f78	cmp	w8, #0xa8
0000000000013f7c	b.eq	0x13ffc
0000000000013f80	b	0x140e4
0000000000013f84	mov	w10, #0x0
0000000000013f88	add	w11, w9, w10
0000000000013f8c	cmp	w11, #0x0
0000000000013f90	cinc	w11, w11, lt
0000000000013f94	asr	w11, w11, #1
0000000000013f98	sbfiz	x12, x11, #4, #32
0000000000013f9c	ldr	w12, [x8, x12]
0000000000013fa0	cmp	w12, #0xa8
0000000000013fa4	csinc	w10, w10, w11, ge
0000000000013fa8	csel	w9, w9, w11, lt
0000000000013fac	cmp	w10, w9
0000000000013fb0	b.lt	0x13f88
0000000000013fb4	sxtw	x9, w10
0000000000013fb8	lsl	x9, x9, #4
0000000000013fbc	ldr	w8, [x8, x9]
0000000000013fc0	cmp	w8, #0xa8
0000000000013fc4	b.ne	0x140e4
0000000000013fc8	b	0x13ffc
0000000000013fcc	mov	w10, #0x0
0000000000013fd0	sxtw	x9, w10
0000000000013fd4	lsl	x9, x9, #4
0000000000013fd8	ldr	w8, [x8, x9]
0000000000013fdc	cmp	w8, #0xa8
0000000000013fe0	b.eq	0x13ffc
0000000000013fe4	b	0x140e4
0000000000013fe8	sxtw	x9, w10
0000000000013fec	lsl	x9, x9, #4
0000000000013ff0	ldr	w8, [x8, x9]
0000000000013ff4	cmp	w8, #0xa8
0000000000013ff8	b.ne	0x140e4
0000000000013ffc	add	x1, x22, #0x18
0000000000014000	ldr	x8, [x20]
0000000000014004	and	x8, x8, #0xfffffffffffffffc
0000000000014008	ldr	x8, [x8]
000000000001400c	ldr	w9, [x8, #0x3c]
0000000000014010	ldr	x8, [x8, #0x40]
0000000000014014	tbnz	w9, #0x1f, 0x14024
0000000000014018	mov	w10, #0xa8
000000000001401c	and	x9, x9, x10
0000000000014020	b	0x140a8
0000000000014024	neg	w10, w9
0000000000014028	mvn	w9, w9
000000000001402c	cmp	w10, #0x9
0000000000014030	b.ge	0x14068
0000000000014034	cmp	w10, #0x2
0000000000014038	b.lt	0x1409c
000000000001403c	mov	x10, #0x0
0000000000014040	mov	x11, x8
0000000000014044	ldr	w12, [x11]
0000000000014048	cmp	w12, #0xa7
000000000001404c	b.gt	0x140a4
0000000000014050	add	x10, x10, #0x1
0000000000014054	add	x11, x11, #0x10
0000000000014058	cmp	x9, x10
000000000001405c	b.ne	0x14044
0000000000014060	mov	x10, x9
0000000000014064	b	0x140a4
0000000000014068	mov	w10, #0x0
000000000001406c	add	w11, w9, w10
0000000000014070	cmp	w11, #0x0
0000000000014074	cinc	w11, w11, lt
0000000000014078	asr	w11, w11, #1
000000000001407c	sbfiz	x12, x11, #4, #32
0000000000014080	ldr	w12, [x8, x12]
0000000000014084	cmp	w12, #0xa8
0000000000014088	csinc	w10, w10, w11, ge
000000000001408c	csel	w9, w9, w11, lt
0000000000014090	cmp	w10, w9
0000000000014094	b.lt	0x1406c
0000000000014098	b	0x140a4
000000000001409c	mov	w10, #0x0
00000000000140a0	b	0x140a4
00000000000140a4	sxtw	x9, w10
00000000000140a8	add	x8, x8, x9, lsl #4
00000000000140ac	ldr	x8, [x8, #0x8]
00000000000140b0	ldr	x8, [x8]
00000000000140b4	mov	x0, x20
00000000000140b8	blr	x8
00000000000140bc	ldr	x1, [x19, #0x8]
00000000000140c0	cbz	x0, 0x140e0
00000000000140c4	ldr	x8, [x0]
00000000000140c8	and	x8, x8, #0xfffffffffffffffc
00000000000140cc	ldr	x8, [x8]
00000000000140d0	ldr	x8, [x8, #0x70]
00000000000140d4	blr	x8
00000000000140d8	cbz	w0, 0x140e8
00000000000140dc	b	0x14104
00000000000140e0	cbz	x1, 0x14104
00000000000140e4	mov	w0, #0x0
00000000000140e8	ldr	x8, [sp, #0x8]
00000000000140ec	str	x8, [x21, #0x110]
00000000000140f0	ldp	x29, x30, [sp, #0x50]
00000000000140f4	ldp	x20, x19, [sp, #0x40]
00000000000140f8	ldp	x22, x21, [sp, #0x30]
00000000000140fc	add	sp, sp, #0x60
0000000000014100	ret
0000000000014104	add	x1, x22, #0x20
0000000000014108	ldr	x8, [x20]
000000000001410c	and	x8, x8, #0xfffffffffffffffc
0000000000014110	ldr	x8, [x8]
0000000000014114	ldr	w9, [x8, #0x3c]
0000000000014118	ldr	x8, [x8, #0x40]
000000000001411c	tbnz	w9, #0x1f, 0x1412c
0000000000014120	mov	w10, #0xa8
0000000000014124	and	x9, x9, x10
0000000000014128	b	0x141b0
000000000001412c	neg	w10, w9
0000000000014130	mvn	w9, w9
0000000000014134	cmp	w10, #0x9
0000000000014138	b.ge	0x14170
000000000001413c	cmp	w10, #0x2
0000000000014140	b.lt	0x141a4
0000000000014144	mov	x10, #0x0
0000000000014148	mov	x11, x8
000000000001414c	ldr	w12, [x11]
0000000000014150	cmp	w12, #0xa7
0000000000014154	b.gt	0x141ac
0000000000014158	add	x10, x10, #0x1
000000000001415c	add	x11, x11, #0x10
0000000000014160	cmp	x9, x10
0000000000014164	b.ne	0x1414c
0000000000014168	mov	x10, x9
000000000001416c	b	0x141ac
0000000000014170	mov	w10, #0x0
0000000000014174	add	w11, w9, w10
0000000000014178	cmp	w11, #0x0
000000000001417c	cinc	w11, w11, lt
0000000000014180	asr	w11, w11, #1
0000000000014184	sbfiz	x12, x11, #4, #32
0000000000014188	ldr	w12, [x8, x12]
000000000001418c	cmp	w12, #0xa8
0000000000014190	csinc	w10, w10, w11, ge
0000000000014194	csel	w9, w9, w11, lt
0000000000014198	cmp	w10, w9
000000000001419c	b.lt	0x14174
00000000000141a0	b	0x141ac
00000000000141a4	mov	w10, #0x0
00000000000141a8	b	0x141ac
00000000000141ac	sxtw	x9, w10
00000000000141b0	add	x8, x8, x9, lsl #4
00000000000141b4	ldr	x8, [x8, #0x8]
00000000000141b8	ldr	x8, [x8, #0x8]
00000000000141bc	mov	x0, x20
00000000000141c0	blr	x8
00000000000141c4	ldr	x1, [x19, #0x10]
00000000000141c8	cbz	x0, 0x141e4
00000000000141cc	ldr	x8, [x0]
00000000000141d0	and	x8, x8, #0xfffffffffffffffc
00000000000141d4	ldr	x8, [x8]
00000000000141d8	ldr	x8, [x8, #0x70]
00000000000141dc	blr	x8
00000000000141e0	b	0x140e8
00000000000141e4	cmp	x1, #0x0
00000000000141e8	cset	w0, eq
00000000000141ec	b	0x140e8
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.hashCode#internal:
00000000000141f0	stp	x20, x19, [sp, #-0x20]!
00000000000141f4	stp	x29, x30, [sp, #0x10]
00000000000141f8	add	x29, sp, #0x10
00000000000141fc	mov	x19, x0
0000000000014200	adr	x8, #0x80309
0000000000014204	nop
0000000000014208	ldarb	w8, [x8]
000000000001420c	tbz	w8, #0x0, 0x14214
0000000000014210	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014214	ldr	x0, [x19, #0x8]
0000000000014218	cbz	x0, 0x14260
000000000001421c	ldr	x8, [x0]
0000000000014220	and	x8, x8, #0xfffffffffffffffc
0000000000014224	ldr	x8, [x8]
0000000000014228	ldr	x8, [x8, #0x78]
000000000001422c	blr	x8
0000000000014230	mov	x20, x0
0000000000014234	ldr	x0, [x19, #0x10]
0000000000014238	cbz	x0, 0x14250
000000000001423c	ldr	x8, [x0]
0000000000014240	and	x8, x8, #0xfffffffffffffffc
0000000000014244	ldr	x8, [x8]
0000000000014248	ldr	x8, [x8, #0x78]
000000000001424c	blr	x8
0000000000014250	eor	w0, w20, w0
0000000000014254	ldp	x29, x30, [sp, #0x10]
0000000000014258	ldp	x20, x19, [sp], #0x20
000000000001425c	ret
0000000000014260	mov	w20, #0x0
0000000000014264	ldr	x0, [x19, #0x10]
0000000000014268	cbnz	x0, 0x1423c
000000000001426c	b	0x14250
_kfun:kotlin.native.internal.NSDictionaryAsKMap.Entry.toString#internal:
0000000000014270	sub	sp, sp, #0xb0
0000000000014274	stp	x24, x23, [sp, #0x70]
0000000000014278	stp	x22, x21, [sp, #0x80]
000000000001427c	stp	x20, x19, [sp, #0x90]
0000000000014280	stp	x29, x30, [sp, #0xa0]
0000000000014284	add	x29, sp, #0xa0
0000000000014288	mov	x19, x1
000000000001428c	mov	x20, x0
0000000000014290	movi.16b	v0, #0x0
0000000000014294	stp	q0, q0, [sp, #0x20]
0000000000014298	str	xzr, [sp, #0x60]
000000000001429c	stp	q0, q0, [sp, #0x40]
00000000000142a0	add	x24, sp, #0x20
00000000000142a4	add	x21, x24, #0x30
00000000000142a8	add	x22, x24, #0x28
00000000000142ac	stp	xzr, xzr, [sp, #0x10]
00000000000142b0	adr	x8, #0x50b10
00000000000142b4	nop
00000000000142b8	orr	x8, x8, #0x3
00000000000142bc	str	x8, [sp, #0x8]
00000000000142c0	adrp	x0, 102 ; 0x7a000
00000000000142c4	add	x0, x0, #0x4e0
00000000000142c8	ldr	x8, [x0]
00000000000142cc	blr	x8
00000000000142d0	ldr	x23, [x0]
00000000000142d4	ldr	x8, [x23, #0x110]
00000000000142d8	str	x24, [x23, #0x110]
00000000000142dc	mov	x9, #0x900000000
00000000000142e0	stp	x8, x9, [sp, #0x28]
00000000000142e4	adr	x8, #0x80225
00000000000142e8	nop
00000000000142ec	ldarb	w8, [x8]
00000000000142f0	tbz	w8, #0x0, 0x142f8
00000000000142f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000142f8	add	x8, sp, #0x8
00000000000142fc	str	x8, [sp, #0x38]
0000000000014300	add	x0, sp, #0x8
0000000000014304	mov	w1, #0xa
0000000000014308	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000001430c	ldr	x0, [x20, #0x8]
0000000000014310	cbz	x0, 0x14338
0000000000014314	add	x8, sp, #0x20
0000000000014318	add	x1, x8, #0x20
000000000001431c	ldr	x8, [x0]
0000000000014320	and	x8, x8, #0xfffffffffffffffc
0000000000014324	ldr	x8, [x8]
0000000000014328	ldr	x8, [x8, #0x80]
000000000001432c	blr	x8
0000000000014330	mov	x1, x0
0000000000014334	b	0x1433c
0000000000014338	mov	x1, #0x0
000000000001433c	add	x0, sp, #0x8
0000000000014340	mov	x2, x22
0000000000014344	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000014348	adr	x1, #0x5b368
000000000001434c	nop
0000000000014350	add	x0, sp, #0x8
0000000000014354	mov	x2, x21
0000000000014358	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001435c	ldr	x0, [x20, #0x10]
0000000000014360	cbz	x0, 0x14384
0000000000014364	add	x1, x24, #0x38
0000000000014368	ldr	x8, [x0]
000000000001436c	and	x8, x8, #0xfffffffffffffffc
0000000000014370	ldr	x8, [x8]
0000000000014374	ldr	x8, [x8, #0x80]
0000000000014378	blr	x8
000000000001437c	mov	x1, x0
0000000000014380	b	0x14388
0000000000014384	mov	x1, #0x0
0000000000014388	add	x8, sp, #0x20
000000000001438c	add	x2, x8, #0x40
0000000000014390	add	x0, sp, #0x8
0000000000014394	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000014398	add	x0, sp, #0x8
000000000001439c	mov	x1, x19
00000000000143a0	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
00000000000143a4	str	x0, [x19]
00000000000143a8	ldr	x8, [sp, #0x28]
00000000000143ac	str	x8, [x23, #0x110]
00000000000143b0	ldp	x29, x30, [sp, #0xa0]
00000000000143b4	ldp	x20, x19, [sp, #0x90]
00000000000143b8	ldp	x22, x21, [sp, #0x80]
00000000000143bc	ldp	x24, x23, [sp, #0x70]
00000000000143c0	add	sp, sp, #0xb0
00000000000143c4	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.EntryIterator.hasNext#internal:
00000000000143c8	stp	x20, x19, [sp, #-0x20]!
00000000000143cc	stp	x29, x30, [sp, #0x10]
00000000000143d0	add	x29, sp, #0x10
00000000000143d4	mov	x19, x0
00000000000143d8	adr	x8, #0x80131
00000000000143dc	nop
00000000000143e0	ldarb	w8, [x8]
00000000000143e4	tbz	w8, #0x0, 0x143ec
00000000000143e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000143ec	ldr	x0, [x19, #0x8]
00000000000143f0	ldr	x8, [x0]
00000000000143f4	and	x8, x8, #0xfffffffffffffffc
00000000000143f8	ldr	x8, [x8]
00000000000143fc	ldr	w9, [x8, #0x3c]
0000000000014400	ldr	x8, [x8, #0x40]
0000000000014404	tbnz	w9, #0x1f, 0x14428
0000000000014408	mov	w10, #0xa0
000000000001440c	and	x9, x9, x10
0000000000014410	add	x8, x8, x9, lsl #4
0000000000014414	ldr	x8, [x8, #0x8]
0000000000014418	ldr	x1, [x8]
000000000001441c	ldp	x29, x30, [sp, #0x10]
0000000000014420	ldp	x20, x19, [sp], #0x20
0000000000014424	br	x1
0000000000014428	neg	w10, w9
000000000001442c	mvn	w9, w9
0000000000014430	cmp	w10, #0x9
0000000000014434	b.ge	0x1446c
0000000000014438	cmp	w10, #0x2
000000000001443c	b.lt	0x144a0
0000000000014440	mov	x10, #0x0
0000000000014444	mov	x11, x8
0000000000014448	ldr	w12, [x11]
000000000001444c	cmp	w12, #0x9f
0000000000014450	b.gt	0x144a8
0000000000014454	add	x10, x10, #0x1
0000000000014458	add	x11, x11, #0x10
000000000001445c	cmp	x9, x10
0000000000014460	b.ne	0x14448
0000000000014464	mov	x10, x9
0000000000014468	b	0x144a8
000000000001446c	mov	w10, #0x0
0000000000014470	add	w11, w9, w10
0000000000014474	cmp	w11, #0x0
0000000000014478	cinc	w11, w11, lt
000000000001447c	asr	w11, w11, #1
0000000000014480	sbfiz	x12, x11, #4, #32
0000000000014484	ldr	w12, [x8, x12]
0000000000014488	cmp	w12, #0xa0
000000000001448c	csinc	w10, w10, w11, ge
0000000000014490	csel	w9, w9, w11, lt
0000000000014494	cmp	w10, w9
0000000000014498	b.lt	0x14470
000000000001449c	b	0x144a8
00000000000144a0	mov	w10, #0x0
00000000000144a4	b	0x144a8
00000000000144a8	sxtw	x9, w10
00000000000144ac	add	x8, x8, x9, lsl #4
00000000000144b0	ldr	x8, [x8, #0x8]
00000000000144b4	ldr	x1, [x8]
00000000000144b8	ldp	x29, x30, [sp, #0x10]
00000000000144bc	ldp	x20, x19, [sp], #0x20
00000000000144c0	br	x1
_kfun:kotlin.native.internal.NSDictionaryAsKMap.EntryIterator.next#internal:
00000000000144c4	sub	sp, sp, #0x70
00000000000144c8	stp	x24, x23, [sp, #0x30]
00000000000144cc	stp	x22, x21, [sp, #0x40]
00000000000144d0	stp	x20, x19, [sp, #0x50]
00000000000144d4	stp	x29, x30, [sp, #0x60]
00000000000144d8	add	x29, sp, #0x60
00000000000144dc	mov	x19, x1
00000000000144e0	mov	x20, x0
00000000000144e4	movi.16b	v0, #0x0
00000000000144e8	stp	q0, q0, [sp]
00000000000144ec	str	xzr, [sp, #0x20]
00000000000144f0	adrp	x0, 102 ; 0x7a000
00000000000144f4	add	x0, x0, #0x4e0
00000000000144f8	ldr	x8, [x0]
00000000000144fc	blr	x8
0000000000014500	ldr	x23, [x0]
0000000000014504	ldr	x8, [x23, #0x110]
0000000000014508	mov	x9, sp
000000000001450c	str	x9, [x23, #0x110]
0000000000014510	mov	x9, #0x500000000
0000000000014514	stp	x8, x9, [sp, #0x8]
0000000000014518	adr	x8, #0x7fff1
000000000001451c	nop
0000000000014520	ldarb	w8, [x8]
0000000000014524	tbz	w8, #0x0, 0x1452c
0000000000014528	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001452c	ldr	x0, [x20, #0x8]
0000000000014530	ldr	x8, [x0]
0000000000014534	and	x8, x8, #0xfffffffffffffffc
0000000000014538	ldr	x8, [x8]
000000000001453c	ldr	w9, [x8, #0x3c]
0000000000014540	ldr	x8, [x8, #0x40]
0000000000014544	tbnz	w9, #0x1f, 0x14554
0000000000014548	mov	w10, #0xa0
000000000001454c	and	x9, x9, x10
0000000000014550	b	0x145d8
0000000000014554	neg	w10, w9
0000000000014558	mvn	w9, w9
000000000001455c	cmp	w10, #0x9
0000000000014560	b.ge	0x14598
0000000000014564	cmp	w10, #0x2
0000000000014568	b.lt	0x145cc
000000000001456c	mov	x10, #0x0
0000000000014570	mov	x11, x8
0000000000014574	ldr	w12, [x11]
0000000000014578	cmp	w12, #0x9f
000000000001457c	b.gt	0x145d4
0000000000014580	add	x10, x10, #0x1
0000000000014584	add	x11, x11, #0x10
0000000000014588	cmp	x9, x10
000000000001458c	b.ne	0x14574
0000000000014590	mov	x10, x9
0000000000014594	b	0x145d4
0000000000014598	mov	w10, #0x0
000000000001459c	add	w11, w9, w10
00000000000145a0	cmp	w11, #0x0
00000000000145a4	cinc	w11, w11, lt
00000000000145a8	asr	w11, w11, #1
00000000000145ac	sbfiz	x12, x11, #4, #32
00000000000145b0	ldr	w12, [x8, x12]
00000000000145b4	cmp	w12, #0xa0
00000000000145b8	csinc	w10, w10, w11, ge
00000000000145bc	csel	w9, w9, w11, lt
00000000000145c0	cmp	w10, w9
00000000000145c4	b.lt	0x1459c
00000000000145c8	b	0x145d4
00000000000145cc	mov	w10, #0x0
00000000000145d0	b	0x145d4
00000000000145d4	sxtw	x9, w10
00000000000145d8	mov	x10, sp
00000000000145dc	add	x21, x10, #0x20
00000000000145e0	add	x1, x10, #0x18
00000000000145e4	add	x8, x8, x9, lsl #4
00000000000145e8	ldr	x8, [x8, #0x8]
00000000000145ec	ldr	x8, [x8, #0x8]
00000000000145f0	blr	x8
00000000000145f4	mov	x22, x0
00000000000145f8	ldr	x0, [x20, #0x10]
00000000000145fc	mov	x1, x22
0000000000014600	mov	x2, x21
0000000000014604	bl	_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification
0000000000014608	mov	x20, x0
000000000001460c	ldr	x8, [x23, #0x118]
0000000000014610	add	x0, x8, #0x70
0000000000014614	mov	w1, #0x20
0000000000014618	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001461c	adr	x8, #0x4ee74
0000000000014620	nop
0000000000014624	str	x8, [x0, #0x10]!
0000000000014628	stur	xzr, [x0, #-0x8]
000000000001462c	str	x0, [x19]
0000000000014630	stp	x22, x20, [x0, #0x8]
0000000000014634	str	x0, [x19]
0000000000014638	ldr	x8, [sp, #0x8]
000000000001463c	str	x8, [x23, #0x110]
0000000000014640	ldp	x29, x30, [sp, #0x60]
0000000000014644	ldp	x20, x19, [sp, #0x50]
0000000000014648	ldp	x22, x21, [sp, #0x40]
000000000001464c	ldp	x24, x23, [sp, #0x30]
0000000000014650	add	sp, sp, #0x70
0000000000014654	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.toString$lambda$0#internal:
0000000000014658	sub	sp, sp, #0xe0
000000000001465c	stp	x28, x27, [sp, #0x80]
0000000000014660	stp	x26, x25, [sp, #0x90]
0000000000014664	stp	x24, x23, [sp, #0xa0]
0000000000014668	stp	x22, x21, [sp, #0xb0]
000000000001466c	stp	x20, x19, [sp, #0xc0]
0000000000014670	stp	x29, x30, [sp, #0xd0]
0000000000014674	add	x29, sp, #0xd0
0000000000014678	mov	x19, x2
000000000001467c	mov	x21, x1
0000000000014680	mov	x20, x0
0000000000014684	movi.16b	v0, #0x0
0000000000014688	stp	q0, q0, [sp, #0x20]
000000000001468c	str	xzr, [sp, #0x70]
0000000000014690	stp	q0, q0, [sp, #0x50]
0000000000014694	str	q0, [sp, #0x40]
0000000000014698	add	x27, sp, #0x20
000000000001469c	add	x25, x27, #0x20
00000000000146a0	stp	xzr, xzr, [sp, #0x10]
00000000000146a4	adr	x8, #0x5071c
00000000000146a8	nop
00000000000146ac	orr	x8, x8, #0x3
00000000000146b0	str	x8, [sp, #0x8]
00000000000146b4	adrp	x0, 102 ; 0x7a000
00000000000146b8	add	x0, x0, #0x4e0
00000000000146bc	ldr	x8, [x0]
00000000000146c0	blr	x8
00000000000146c4	ldr	x26, [x0]
00000000000146c8	ldr	x8, [x26, #0x110]
00000000000146cc	str	x27, [x26, #0x110]
00000000000146d0	mov	x9, #0xb00000000
00000000000146d4	stp	x8, x9, [sp, #0x28]
00000000000146d8	adr	x8, #0x7fe31
00000000000146dc	nop
00000000000146e0	ldarb	w8, [x8]
00000000000146e4	tbz	w8, #0x0, 0x146ec
00000000000146e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000146ec	add	x24, x27, #0x30
00000000000146f0	add	x22, x27, #0x38
00000000000146f4	add	x8, sp, #0x8
00000000000146f8	str	x8, [sp, #0x38]
00000000000146fc	add	x0, sp, #0x8
0000000000014700	mov	w1, #0xa
0000000000014704	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000014708	ldr	x8, [x21]
000000000001470c	and	x8, x8, #0xfffffffffffffffc
0000000000014710	ldr	x8, [x8]
0000000000014714	ldr	w9, [x8, #0x3c]
0000000000014718	ldr	x8, [x8, #0x40]
000000000001471c	tbnz	w9, #0x1f, 0x1472c
0000000000014720	mov	w10, #0xa8
0000000000014724	and	x9, x9, x10
0000000000014728	b	0x147b0
000000000001472c	neg	w10, w9
0000000000014730	mvn	w9, w9
0000000000014734	cmp	w10, #0x9
0000000000014738	b.ge	0x14770
000000000001473c	cmp	w10, #0x2
0000000000014740	b.lt	0x147a4
0000000000014744	mov	x10, #0x0
0000000000014748	mov	x11, x8
000000000001474c	ldr	w12, [x11]
0000000000014750	cmp	w12, #0xa7
0000000000014754	b.gt	0x147ac
0000000000014758	add	x10, x10, #0x1
000000000001475c	add	x11, x11, #0x10
0000000000014760	cmp	x9, x10
0000000000014764	b.ne	0x1474c
0000000000014768	mov	x10, x9
000000000001476c	b	0x147ac
0000000000014770	mov	w10, #0x0
0000000000014774	add	w11, w9, w10
0000000000014778	cmp	w11, #0x0
000000000001477c	cinc	w11, w11, lt
0000000000014780	asr	w11, w11, #1
0000000000014784	sbfiz	x12, x11, #4, #32
0000000000014788	ldr	w12, [x8, x12]
000000000001478c	cmp	w12, #0xa8
0000000000014790	csinc	w10, w10, w11, ge
0000000000014794	csel	w9, w9, w11, lt
0000000000014798	cmp	w10, w9
000000000001479c	b.lt	0x14774
00000000000147a0	b	0x147ac
00000000000147a4	mov	w10, #0x0
00000000000147a8	b	0x147ac
00000000000147ac	sxtw	x9, w10
00000000000147b0	add	x23, x27, #0x40
00000000000147b4	add	x8, x8, x9, lsl #4
00000000000147b8	ldr	x8, [x8, #0x8]
00000000000147bc	ldr	x8, [x8]
00000000000147c0	mov	x0, x21
00000000000147c4	mov	x1, x25
00000000000147c8	blr	x8
00000000000147cc	cmp	x0, x20
00000000000147d0	b.eq	0x147f8
00000000000147d4	cbz	x0, 0x14804
00000000000147d8	add	x1, x27, #0x28
00000000000147dc	ldr	x8, [x0]
00000000000147e0	and	x8, x8, #0xfffffffffffffffc
00000000000147e4	ldr	x8, [x8]
00000000000147e8	ldr	x8, [x8, #0x80]
00000000000147ec	blr	x8
00000000000147f0	mov	x1, x0
00000000000147f4	b	0x1480c
00000000000147f8	adr	x1, #0x5ae88
00000000000147fc	nop
0000000000014800	b	0x1480c
0000000000014804	adr	x1, #0x59a4c
0000000000014808	nop
000000000001480c	str	x1, [sp, #0x48]
0000000000014810	add	x0, sp, #0x8
0000000000014814	mov	x2, x24
0000000000014818	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001481c	adr	x1, #0x5ae94
0000000000014820	nop
0000000000014824	add	x0, sp, #0x8
0000000000014828	mov	x2, x22
000000000001482c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000014830	ldr	x8, [x21]
0000000000014834	and	x8, x8, #0xfffffffffffffffc
0000000000014838	ldr	x8, [x8]
000000000001483c	ldr	w9, [x8, #0x3c]
0000000000014840	ldr	x8, [x8, #0x40]
0000000000014844	tbnz	w9, #0x1f, 0x14854
0000000000014848	mov	w10, #0xa8
000000000001484c	and	x9, x9, x10
0000000000014850	b	0x148d8
0000000000014854	neg	w10, w9
0000000000014858	mvn	w9, w9
000000000001485c	cmp	w10, #0x9
0000000000014860	b.ge	0x14898
0000000000014864	cmp	w10, #0x2
0000000000014868	b.lt	0x148cc
000000000001486c	mov	x10, #0x0
0000000000014870	mov	x11, x8
0000000000014874	ldr	w12, [x11]
0000000000014878	cmp	w12, #0xa7
000000000001487c	b.gt	0x148d4
0000000000014880	add	x10, x10, #0x1
0000000000014884	add	x11, x11, #0x10
0000000000014888	cmp	x9, x10
000000000001488c	b.ne	0x14874
0000000000014890	mov	x10, x9
0000000000014894	b	0x148d4
0000000000014898	mov	w10, #0x0
000000000001489c	add	w11, w9, w10
00000000000148a0	cmp	w11, #0x0
00000000000148a4	cinc	w11, w11, lt
00000000000148a8	asr	w11, w11, #1
00000000000148ac	sbfiz	x12, x11, #4, #32
00000000000148b0	ldr	w12, [x8, x12]
00000000000148b4	cmp	w12, #0xa8
00000000000148b8	csinc	w10, w10, w11, ge
00000000000148bc	csel	w9, w9, w11, lt
00000000000148c0	cmp	w10, w9
00000000000148c4	b.lt	0x1489c
00000000000148c8	b	0x148d4
00000000000148cc	mov	w10, #0x0
00000000000148d0	b	0x148d4
00000000000148d4	sxtw	x9, w10
00000000000148d8	add	x8, x8, x9, lsl #4
00000000000148dc	ldr	x8, [x8, #0x8]
00000000000148e0	ldr	x8, [x8, #0x8]
00000000000148e4	mov	x0, x21
00000000000148e8	mov	x1, x23
00000000000148ec	blr	x8
00000000000148f0	cmp	x0, x20
00000000000148f4	b.eq	0x1491c
00000000000148f8	cbz	x0, 0x14928
00000000000148fc	add	x1, x27, #0x48
0000000000014900	ldr	x8, [x0]
0000000000014904	and	x8, x8, #0xfffffffffffffffc
0000000000014908	ldr	x8, [x8]
000000000001490c	ldr	x8, [x8, #0x80]
0000000000014910	blr	x8
0000000000014914	mov	x1, x0
0000000000014918	b	0x14930
000000000001491c	adr	x1, #0x5ad64
0000000000014920	nop
0000000000014924	b	0x14930
0000000000014928	adr	x1, #0x59928
000000000001492c	nop
0000000000014930	add	x8, sp, #0x20
0000000000014934	add	x2, x8, #0x50
0000000000014938	str	x1, [sp, #0x68]
000000000001493c	add	x0, sp, #0x8
0000000000014940	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000014944	add	x0, sp, #0x8
0000000000014948	mov	x1, x19
000000000001494c	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000014950	str	x0, [x19]
0000000000014954	ldr	x8, [sp, #0x28]
0000000000014958	str	x8, [x26, #0x110]
000000000001495c	ldp	x29, x30, [sp, #0xd0]
0000000000014960	ldp	x20, x19, [sp, #0xc0]
0000000000014964	ldp	x22, x21, [sp, #0xb0]
0000000000014968	ldp	x24, x23, [sp, #0xa0]
000000000001496c	ldp	x26, x25, [sp, #0x90]
0000000000014970	ldp	x28, x27, [sp, #0x80]
0000000000014974	add	sp, sp, #0xe0
0000000000014978	ret
_kfun:kotlin.native.internal.NSDictionaryAsKMap.$toString$lambda$0$FUNCTION_REFERENCE$6.invoke#internal:
000000000001497c	stp	x22, x21, [sp, #-0x30]!
0000000000014980	stp	x20, x19, [sp, #0x10]
0000000000014984	stp	x29, x30, [sp, #0x20]
0000000000014988	add	x29, sp, #0x20
000000000001498c	mov	x19, x2
0000000000014990	mov	x20, x1
0000000000014994	mov	x21, x0
0000000000014998	adr	x8, #0x7fb71
000000000001499c	nop
00000000000149a0	ldarb	w8, [x8]
00000000000149a4	tbz	w8, #0x0, 0x149ac
00000000000149a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000149ac	ldr	x0, [x21, #0x8]
00000000000149b0	mov	x1, x20
00000000000149b4	mov	x2, x19
00000000000149b8	bl	"_kfun:kotlin.native.internal.NSDictionaryAsKMap.toString$lambda$0#internal"
00000000000149bc	str	x0, [x19]
00000000000149c0	ldp	x29, x30, [sp, #0x20]
00000000000149c4	ldp	x20, x19, [sp, #0x10]
00000000000149c8	ldp	x22, x21, [sp], #0x30
00000000000149cc	ret
_ThrowNullPointerException:
00000000000149d0	sub	sp, sp, #0x50
00000000000149d4	stp	x22, x21, [sp, #0x20]
00000000000149d8	stp	x20, x19, [sp, #0x30]
00000000000149dc	stp	x29, x30, [sp, #0x40]
00000000000149e0	add	x29, sp, #0x40
00000000000149e4	movi.16b	v0, #0x0
00000000000149e8	stp	q0, q0, [sp]
00000000000149ec	adrp	x19, 102 ; 0x7a000
00000000000149f0	add	x19, x19, #0x4e0
00000000000149f4	ldr	x21, [x19]
00000000000149f8	mov	x0, x19
00000000000149fc	blr	x21
0000000000014a00	ldr	x8, [x0]
0000000000014a04	ldr	x9, [x8, #0x110]
0000000000014a08	mov	x10, sp
0000000000014a0c	str	x10, [x8, #0x110]
0000000000014a10	mov	x8, #0x400000000
0000000000014a14	stp	x9, x8, [sp, #0x8]
0000000000014a18	adr	x8, #0x7faf1
0000000000014a1c	nop
0000000000014a20	ldarb	w8, [x8]
0000000000014a24	tbz	w8, #0x0, 0x14a2c
0000000000014a28	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014a2c	mov	x0, x19
0000000000014a30	blr	x21
0000000000014a34	ldr	x8, [x0]
0000000000014a38	ldr	x8, [x8, #0x118]
0000000000014a3c	add	x0, x8, #0x70
0000000000014a40	mov	w1, #0x38
0000000000014a44	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000014a48	mov	x20, x0
0000000000014a4c	adr	x8, #0x4cda4
0000000000014a50	nop
0000000000014a54	str	x8, [x20, #0x10]!
0000000000014a58	stur	xzr, [x20, #-0x8]
0000000000014a5c	str	x20, [sp, #0x18]
0000000000014a60	mov	x0, x20
0000000000014a64	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
0000000000014a68	mov	x0, x20
0000000000014a6c	bl	_ThrowException
0000000000014a70	brk	#0x1
0000000000014a74	mov	x1, x0
0000000000014a78	mov	x0, x19
0000000000014a7c	blr	x21
0000000000014a80	ldr	x8, [x0]
0000000000014a84	ldr	x9, [sp, #0x8]
0000000000014a88	str	x9, [x8, #0x110]
0000000000014a8c	mov	x0, x1
0000000000014a90	bl	0x558ac ; symbol stub for: __Unwind_Resume
_ThrowArrayIndexOutOfBoundsException:
0000000000014a94	sub	sp, sp, #0x50
0000000000014a98	stp	x22, x21, [sp, #0x20]
0000000000014a9c	stp	x20, x19, [sp, #0x30]
0000000000014aa0	stp	x29, x30, [sp, #0x40]
0000000000014aa4	add	x29, sp, #0x40
0000000000014aa8	movi.16b	v0, #0x0
0000000000014aac	stp	q0, q0, [sp]
0000000000014ab0	adrp	x19, 102 ; 0x7a000
0000000000014ab4	add	x19, x19, #0x4e0
0000000000014ab8	ldr	x21, [x19]
0000000000014abc	mov	x0, x19
0000000000014ac0	blr	x21
0000000000014ac4	ldr	x8, [x0]
0000000000014ac8	ldr	x9, [x8, #0x110]
0000000000014acc	mov	x10, sp
0000000000014ad0	str	x10, [x8, #0x110]
0000000000014ad4	mov	x8, #0x400000000
0000000000014ad8	stp	x9, x8, [sp, #0x8]
0000000000014adc	adr	x8, #0x7fa2d
0000000000014ae0	nop
0000000000014ae4	ldarb	w8, [x8]
0000000000014ae8	tbz	w8, #0x0, 0x14af0
0000000000014aec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014af0	mov	x0, x19
0000000000014af4	blr	x21
0000000000014af8	ldr	x8, [x0]
0000000000014afc	ldr	x8, [x8, #0x118]
0000000000014b00	add	x0, x8, #0x70
0000000000014b04	mov	w1, #0x38
0000000000014b08	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000014b0c	mov	x20, x0
0000000000014b10	adr	x8, #0x4cd80
0000000000014b14	nop
0000000000014b18	str	x8, [x20, #0x10]!
0000000000014b1c	stur	xzr, [x20, #-0x8]
0000000000014b20	str	x20, [sp, #0x18]
0000000000014b24	mov	x0, x20
0000000000014b28	mov	x1, #0x0
0000000000014b2c	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000014b30	mov	x0, x20
0000000000014b34	bl	_ThrowException
0000000000014b38	brk	#0x1
0000000000014b3c	mov	x1, x0
0000000000014b40	mov	x0, x19
0000000000014b44	blr	x21
0000000000014b48	ldr	x8, [x0]
0000000000014b4c	ldr	x9, [sp, #0x8]
0000000000014b50	str	x9, [x8, #0x110]
0000000000014b54	mov	x0, x1
0000000000014b58	bl	0x558ac ; symbol stub for: __Unwind_Resume
_ThrowClassCastException:
0000000000014b5c	sub	sp, sp, #0xf0
0000000000014b60	stp	x24, x23, [sp, #0xb0]
0000000000014b64	stp	x22, x21, [sp, #0xc0]
0000000000014b68	stp	x20, x19, [sp, #0xd0]
0000000000014b6c	stp	x29, x30, [sp, #0xe0]
0000000000014b70	add	x29, sp, #0xe0
0000000000014b74	mov	x21, x1
0000000000014b78	mov	x20, x0
0000000000014b7c	movi.16b	v0, #0x0
0000000000014b80	stp	q0, q0, [sp, #0x40]
0000000000014b84	str	xzr, [sp, #0xa0]
0000000000014b88	stp	q0, q0, [sp, #0x80]
0000000000014b8c	stp	q0, q0, [sp, #0x60]
0000000000014b90	add	x23, sp, #0x40
0000000000014b94	adr	x8, #0x4dedc
0000000000014b98	nop
0000000000014b9c	orr	x8, x8, #0x3
0000000000014ba0	stp	x8, xzr, [sp, #0x30]
0000000000014ba4	stp	xzr, xzr, [sp, #0x20]
0000000000014ba8	adr	x9, #0x50218
0000000000014bac	nop
0000000000014bb0	orr	x9, x9, #0x3
0000000000014bb4	stp	xzr, x9, [sp, #0x10]
0000000000014bb8	str	x8, [sp, #0x8]
0000000000014bbc	adrp	x19, 102 ; 0x7a000
0000000000014bc0	add	x19, x19, #0x4e0
0000000000014bc4	ldr	x22, [x19]
0000000000014bc8	mov	x0, x19
0000000000014bcc	blr	x22
0000000000014bd0	ldr	x8, [x0]
0000000000014bd4	ldr	x9, [x8, #0x110]
0000000000014bd8	str	x23, [x8, #0x110]
0000000000014bdc	mov	x8, #0xd00000000
0000000000014be0	stp	x9, x8, [sp, #0x48]
0000000000014be4	adr	x8, #0x7f925
0000000000014be8	nop
0000000000014bec	ldarb	w8, [x8]
0000000000014bf0	tbz	w8, #0x0, 0x14bf8
0000000000014bf4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014bf8	add	x8, sp, #0x30
0000000000014bfc	str	x21, [sp, #0x38]
0000000000014c00	add	x9, sp, #0x18
0000000000014c04	stp	x8, x9, [sp, #0x58]
0000000000014c08	add	x0, sp, #0x18
0000000000014c0c	mov	w1, #0xa
0000000000014c10	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000014c14	add	x8, sp, #0x40
0000000000014c18	add	x1, x8, #0x30
0000000000014c1c	ldr	x8, [x20]
0000000000014c20	and	x8, x8, #0xfffffffffffffffc
0000000000014c24	ldr	x8, [x8]
0000000000014c28	add	x9, sp, #0x8
0000000000014c2c	str	x9, [sp, #0x68]
0000000000014c30	str	x8, [sp, #0x10]
0000000000014c34	add	x0, sp, #0x8
0000000000014c38	bl	"_kfun:kotlin.native.internal.KClassImpl#toString(){}kotlin.String"
0000000000014c3c	mov	x1, x0
0000000000014c40	add	x2, x23, #0x38
0000000000014c44	add	x0, sp, #0x18
0000000000014c48	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000014c4c	add	x2, x23, #0x40
0000000000014c50	adr	x1, #0x5aa80
0000000000014c54	nop
0000000000014c58	add	x0, sp, #0x18
0000000000014c5c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000014c60	add	x1, x23, #0x48
0000000000014c64	add	x0, sp, #0x30
0000000000014c68	bl	"_kfun:kotlin.native.internal.KClassImpl#toString(){}kotlin.String"
0000000000014c6c	mov	x1, x0
0000000000014c70	add	x2, x23, #0x50
0000000000014c74	add	x0, sp, #0x18
0000000000014c78	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000014c7c	add	x1, x23, #0x58
0000000000014c80	add	x0, sp, #0x18
0000000000014c84	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000014c88	mov	x20, x0
0000000000014c8c	mov	x0, x19
0000000000014c90	blr	x22
0000000000014c94	ldr	x8, [x0]
0000000000014c98	ldr	x8, [x8, #0x118]
0000000000014c9c	add	x0, x8, #0x70
0000000000014ca0	mov	w1, #0x38
0000000000014ca4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000014ca8	mov	x21, x0
0000000000014cac	adr	x8, #0x4cc84
0000000000014cb0	nop
0000000000014cb4	str	x8, [x21, #0x10]!
0000000000014cb8	stur	xzr, [x21, #-0x8]
0000000000014cbc	str	x21, [sp, #0xa0]
0000000000014cc0	mov	x0, x21
0000000000014cc4	mov	x1, x20
0000000000014cc8	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000014ccc	mov	x0, x21
0000000000014cd0	bl	_ThrowException
0000000000014cd4	brk	#0x1
0000000000014cd8	mov	x1, x0
0000000000014cdc	mov	x0, x19
0000000000014ce0	blr	x22
0000000000014ce4	ldr	x8, [x0]
0000000000014ce8	ldr	x9, [sp, #0x48]
0000000000014cec	str	x9, [x8, #0x110]
0000000000014cf0	mov	x0, x1
0000000000014cf4	bl	0x558ac ; symbol stub for: __Unwind_Resume
_ThrowArithmeticException:
0000000000014cf8	sub	sp, sp, #0x50
0000000000014cfc	stp	x22, x21, [sp, #0x20]
0000000000014d00	stp	x20, x19, [sp, #0x30]
0000000000014d04	stp	x29, x30, [sp, #0x40]
0000000000014d08	add	x29, sp, #0x40
0000000000014d0c	movi.16b	v0, #0x0
0000000000014d10	stp	q0, q0, [sp]
0000000000014d14	adrp	x19, 102 ; 0x7a000
0000000000014d18	add	x19, x19, #0x4e0
0000000000014d1c	ldr	x21, [x19]
0000000000014d20	mov	x0, x19
0000000000014d24	blr	x21
0000000000014d28	ldr	x8, [x0]
0000000000014d2c	ldr	x9, [x8, #0x110]
0000000000014d30	mov	x10, sp
0000000000014d34	str	x10, [x8, #0x110]
0000000000014d38	mov	x8, #0x400000000
0000000000014d3c	stp	x9, x8, [sp, #0x8]
0000000000014d40	adr	x8, #0x7f7c9
0000000000014d44	nop
0000000000014d48	ldarb	w8, [x8]
0000000000014d4c	tbz	w8, #0x0, 0x14d54
0000000000014d50	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014d54	mov	x0, x19
0000000000014d58	blr	x21
0000000000014d5c	ldr	x8, [x0]
0000000000014d60	ldr	x8, [x8, #0x118]
0000000000014d64	add	x0, x8, #0x70
0000000000014d68	mov	w1, #0x38
0000000000014d6c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000014d70	mov	x20, x0
0000000000014d74	adr	x8, #0x4cc5c
0000000000014d78	nop
0000000000014d7c	str	x8, [x20, #0x10]!
0000000000014d80	stur	xzr, [x20, #-0x8]
0000000000014d84	str	x20, [sp, #0x18]
0000000000014d88	mov	x0, x20
0000000000014d8c	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
0000000000014d90	mov	x0, x20
0000000000014d94	bl	_ThrowException
0000000000014d98	brk	#0x1
0000000000014d9c	mov	x1, x0
0000000000014da0	mov	x0, x19
0000000000014da4	blr	x21
0000000000014da8	ldr	x8, [x0]
0000000000014dac	ldr	x9, [sp, #0x8]
0000000000014db0	str	x9, [x8, #0x110]
0000000000014db4	mov	x0, x1
0000000000014db8	bl	0x558ac ; symbol stub for: __Unwind_Resume
_ThrowIllegalArgumentException:
0000000000014dbc	sub	sp, sp, #0x50
0000000000014dc0	stp	x22, x21, [sp, #0x20]
0000000000014dc4	stp	x20, x19, [sp, #0x30]
0000000000014dc8	stp	x29, x30, [sp, #0x40]
0000000000014dcc	add	x29, sp, #0x40
0000000000014dd0	movi.16b	v0, #0x0
0000000000014dd4	stp	q0, q0, [sp]
0000000000014dd8	adrp	x19, 102 ; 0x7a000
0000000000014ddc	add	x19, x19, #0x4e0
0000000000014de0	ldr	x21, [x19]
0000000000014de4	mov	x0, x19
0000000000014de8	blr	x21
0000000000014dec	ldr	x8, [x0]
0000000000014df0	ldr	x9, [x8, #0x110]
0000000000014df4	mov	x10, sp
0000000000014df8	str	x10, [x8, #0x110]
0000000000014dfc	mov	x8, #0x400000000
0000000000014e00	stp	x9, x8, [sp, #0x8]
0000000000014e04	adr	x8, #0x7f705
0000000000014e08	nop
0000000000014e0c	ldarb	w8, [x8]
0000000000014e10	tbz	w8, #0x0, 0x14e18
0000000000014e14	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014e18	mov	x0, x19
0000000000014e1c	blr	x21
0000000000014e20	ldr	x8, [x0]
0000000000014e24	ldr	x8, [x8, #0x118]
0000000000014e28	add	x0, x8, #0x70
0000000000014e2c	mov	w1, #0x38
0000000000014e30	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000014e34	mov	x20, x0
0000000000014e38	adr	x8, #0x4c738
0000000000014e3c	nop
0000000000014e40	str	x8, [x20, #0x10]!
0000000000014e44	stur	xzr, [x20, #-0x8]
0000000000014e48	str	x20, [sp, #0x18]
0000000000014e4c	mov	x0, x20
0000000000014e50	mov	x1, #0x0
0000000000014e54	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
0000000000014e58	mov	x0, x20
0000000000014e5c	bl	_ThrowException
0000000000014e60	brk	#0x1
0000000000014e64	mov	x1, x0
0000000000014e68	mov	x0, x19
0000000000014e6c	blr	x21
0000000000014e70	ldr	x8, [x0]
0000000000014e74	ldr	x9, [sp, #0x8]
0000000000014e78	str	x9, [x8, #0x110]
0000000000014e7c	mov	x0, x1
0000000000014e80	bl	0x558ac ; symbol stub for: __Unwind_Resume
_ThrowFileFailedToInitializeException:
0000000000014e84	sub	sp, sp, #0x50
0000000000014e88	stp	x22, x21, [sp, #0x20]
0000000000014e8c	stp	x20, x19, [sp, #0x30]
0000000000014e90	stp	x29, x30, [sp, #0x40]
0000000000014e94	add	x29, sp, #0x40
0000000000014e98	movi.16b	v0, #0x0
0000000000014e9c	stp	q0, q0, [sp]
0000000000014ea0	adrp	x19, 102 ; 0x7a000
0000000000014ea4	add	x19, x19, #0x4e0
0000000000014ea8	ldr	x21, [x19]
0000000000014eac	mov	x0, x19
0000000000014eb0	blr	x21
0000000000014eb4	ldr	x8, [x0]
0000000000014eb8	ldr	x9, [x8, #0x110]
0000000000014ebc	mov	x10, sp
0000000000014ec0	str	x10, [x8, #0x110]
0000000000014ec4	mov	x8, #0x400000000
0000000000014ec8	stp	x9, x8, [sp, #0x8]
0000000000014ecc	adr	x8, #0x7f63d
0000000000014ed0	nop
0000000000014ed4	ldarb	w8, [x8]
0000000000014ed8	tbz	w8, #0x0, 0x14ee0
0000000000014edc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014ee0	mov	x0, x19
0000000000014ee4	blr	x21
0000000000014ee8	ldr	x8, [x0]
0000000000014eec	ldr	x8, [x8, #0x118]
0000000000014ef0	add	x0, x8, #0x70
0000000000014ef4	mov	w1, #0x38
0000000000014ef8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000014efc	mov	x20, x0
0000000000014f00	adr	x8, #0x4d5e0
0000000000014f04	nop
0000000000014f08	str	x8, [x20, #0x10]!
0000000000014f0c	stur	xzr, [x20, #-0x8]
0000000000014f10	str	x20, [sp, #0x18]
0000000000014f14	adr	x1, #0x5a7fc
0000000000014f18	nop
0000000000014f1c	mov	x0, x20
0000000000014f20	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000014f24	mov	x0, x20
0000000000014f28	bl	_ThrowException
0000000000014f2c	brk	#0x1
0000000000014f30	mov	x1, x0
0000000000014f34	mov	x0, x19
0000000000014f38	blr	x21
0000000000014f3c	ldr	x8, [x0]
0000000000014f40	ldr	x9, [sp, #0x8]
0000000000014f44	str	x9, [x8, #0x110]
0000000000014f48	mov	x0, x1
0000000000014f4c	bl	0x558ac ; symbol stub for: __Unwind_Resume
_ReportUnhandledException:
0000000000014f50	sub	sp, sp, #0x50
0000000000014f54	stp	x22, x21, [sp, #0x20]
0000000000014f58	stp	x20, x19, [sp, #0x30]
0000000000014f5c	stp	x29, x30, [sp, #0x40]
0000000000014f60	add	x29, sp, #0x40
0000000000014f64	mov	x20, x0
0000000000014f68	str	xzr, [sp, #0x8]
0000000000014f6c	adrp	x19, 102 ; 0x7a000
0000000000014f70	add	x19, x19, #0x4e0
0000000000014f74	ldr	x21, [x19]
0000000000014f78	mov	x0, x19
0000000000014f7c	blr	x21
0000000000014f80	ldr	x8, [x0]
0000000000014f84	ldr	x9, [x8, #0x110]
0000000000014f88	add	x10, sp, #0x8
0000000000014f8c	str	x10, [x8, #0x110]
0000000000014f90	mov	x8, #0x300000000
0000000000014f94	stp	x9, x8, [sp, #0x10]
0000000000014f98	adr	x8, #0x7f571
0000000000014f9c	nop
0000000000014fa0	ldarb	w8, [x8]
0000000000014fa4	tbz	w8, #0x0, 0x14fac
0000000000014fa8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000014fac	adr	x0, #0x5a7d4
0000000000014fb0	nop
0000000000014fb4	bl	_Kotlin_io_Console_print
0000000000014fb8	mov	x0, x20
0000000000014fbc	bl	"_kfun:kotlin.Throwable#printStackTrace(){}"
0000000000014fc0	mov	x0, x19
0000000000014fc4	blr	x21
0000000000014fc8	ldr	x8, [x0]
0000000000014fcc	ldr	x9, [sp, #0x10]
0000000000014fd0	str	x9, [x8, #0x110]
0000000000014fd4	ldp	x29, x30, [sp, #0x40]
0000000000014fd8	ldp	x20, x19, [sp, #0x30]
0000000000014fdc	ldp	x22, x21, [sp, #0x20]
0000000000014fe0	add	sp, sp, #0x50
0000000000014fe4	ret
0000000000014fe8	mov	x1, x0
0000000000014fec	mov	x0, x19
0000000000014ff0	blr	x21
0000000000014ff4	ldr	x8, [x0]
0000000000014ff8	ldr	x9, [sp, #0x10]
0000000000014ffc	str	x9, [x8, #0x110]
0000000000015000	mov	x0, x1
0000000000015004	bl	0x558ac ; symbol stub for: __Unwind_Resume
_kfun:kotlin.text#checkBoundsIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}:
0000000000015008	sub	sp, sp, #0x140
000000000001500c	stp	x28, x27, [sp, #0xe0]
0000000000015010	stp	x26, x25, [sp, #0xf0]
0000000000015014	stp	x24, x23, [sp, #0x100]
0000000000015018	stp	x22, x21, [sp, #0x110]
000000000001501c	stp	x20, x19, [sp, #0x120]
0000000000015020	stp	x29, x30, [sp, #0x130]
0000000000015024	add	x29, sp, #0x130
0000000000015028	mov	x21, x2
000000000001502c	mov	x19, x1
0000000000015030	mov	x20, x0
0000000000015034	str	xzr, [sp, #0xd0]
0000000000015038	movi.16b	v0, #0x0
000000000001503c	stp	q0, q0, [sp, #0xb0]
0000000000015040	stp	q0, q0, [sp, #0x90]
0000000000015044	stp	q0, q0, [sp, #0x70]
0000000000015048	stp	q0, q0, [sp, #0x50]
000000000001504c	str	q0, [sp, #0x40]
0000000000015050	stp	xzr, xzr, [sp, #0x30]
0000000000015054	adr	x8, #0x4fd6c
0000000000015058	nop
000000000001505c	orr	x8, x8, #0x3
0000000000015060	stp	xzr, x8, [sp, #0x20]
0000000000015064	stp	x8, xzr, [sp, #0x10]
0000000000015068	adrp	x0, 101 ; 0x7a000
000000000001506c	add	x0, x0, #0x4e0
0000000000015070	ldr	x8, [x0]
0000000000015074	blr	x8
0000000000015078	ldr	x22, [x0]
000000000001507c	ldr	x8, [x22, #0x110]
0000000000015080	add	x9, sp, #0x40
0000000000015084	str	x9, [x22, #0x110]
0000000000015088	mov	x9, #0x1300000000
000000000001508c	stp	x8, x9, [sp, #0x48]
0000000000015090	adr	x8, #0x7f479
0000000000015094	nop
0000000000015098	ldarb	w8, [x8]
000000000001509c	tbz	w8, #0x0, 0x150a4
00000000000150a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000150a4	tbnz	w20, #0x1f, 0x150e0
00000000000150a8	cmp	w19, w21
00000000000150ac	b.gt	0x150e0
00000000000150b0	cmp	w20, w19
00000000000150b4	b.gt	0x151c0
00000000000150b8	ldr	x8, [sp, #0x48]
00000000000150bc	str	x8, [x22, #0x110]
00000000000150c0	ldp	x29, x30, [sp, #0x130]
00000000000150c4	ldp	x20, x19, [sp, #0x120]
00000000000150c8	ldp	x22, x21, [sp, #0x110]
00000000000150cc	ldp	x24, x23, [sp, #0x100]
00000000000150d0	ldp	x26, x25, [sp, #0xf0]
00000000000150d4	ldp	x28, x27, [sp, #0xe0]
00000000000150d8	add	sp, sp, #0x140
00000000000150dc	ret
00000000000150e0	add	x8, sp, #0x40
00000000000150e4	add	x9, x8, #0x50
00000000000150e8	str	x9, [sp, #0x8]
00000000000150ec	add	x23, x8, #0x48
00000000000150f0	add	x24, x8, #0x40
00000000000150f4	add	x25, x8, #0x38
00000000000150f8	add	x26, x8, #0x30
00000000000150fc	add	x27, x8, #0x28
0000000000015100	add	x9, sp, #0x28
0000000000015104	str	x9, [sp, #0x58]
0000000000015108	add	x28, x8, #0x20
000000000001510c	add	x0, sp, #0x28
0000000000015110	mov	w1, #0xa
0000000000015114	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000015118	adr	x1, #0x5a6b8
000000000001511c	nop
0000000000015120	add	x0, sp, #0x28
0000000000015124	mov	x2, x28
0000000000015128	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001512c	add	x0, sp, #0x28
0000000000015130	mov	x1, x20
0000000000015134	mov	x2, x27
0000000000015138	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000001513c	adr	x1, #0x5a6c4
0000000000015140	nop
0000000000015144	add	x0, sp, #0x28
0000000000015148	mov	x2, x26
000000000001514c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000015150	add	x0, sp, #0x28
0000000000015154	mov	x1, x19
0000000000015158	mov	x2, x25
000000000001515c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000015160	adr	x1, #0x5a120
0000000000015164	nop
0000000000015168	add	x0, sp, #0x28
000000000001516c	mov	x2, x24
0000000000015170	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000015174	add	x0, sp, #0x28
0000000000015178	mov	x1, x21
000000000001517c	mov	x2, x23
0000000000015180	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000015184	add	x0, sp, #0x28
0000000000015188	ldr	x1, [sp, #0x8]
000000000001518c	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000015190	mov	x19, x0
0000000000015194	ldr	x8, [x22, #0x118]
0000000000015198	add	x0, x8, #0x70
000000000001519c	mov	w1, #0x38
00000000000151a0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000151a4	mov	x20, x0
00000000000151a8	adr	x8, #0x4c328
00000000000151ac	nop
00000000000151b0	str	x8, [x20, #0x10]!
00000000000151b4	stur	xzr, [x20, #-0x8]
00000000000151b8	str	x20, [sp, #0x98]
00000000000151bc	b	0x1526c
00000000000151c0	add	x8, sp, #0x40
00000000000151c4	add	x21, x8, #0x88
00000000000151c8	add	x26, x8, #0x80
00000000000151cc	add	x23, x8, #0x78
00000000000151d0	add	x24, x8, #0x70
00000000000151d4	add	x25, x8, #0x68
00000000000151d8	add	x8, sp, #0x10
00000000000151dc	str	x8, [sp, #0xa0]
00000000000151e0	add	x0, sp, #0x10
00000000000151e4	mov	w1, #0xa
00000000000151e8	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000151ec	adr	x1, #0x5a5e4
00000000000151f0	nop
00000000000151f4	add	x0, sp, #0x10
00000000000151f8	mov	x2, x25
00000000000151fc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000015200	add	x0, sp, #0x10
0000000000015204	mov	x1, x20
0000000000015208	mov	x2, x24
000000000001520c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000015210	adr	x1, #0x5a620
0000000000015214	nop
0000000000015218	add	x0, sp, #0x10
000000000001521c	mov	x2, x23
0000000000015220	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000015224	add	x0, sp, #0x10
0000000000015228	mov	x1, x19
000000000001522c	mov	x2, x26
0000000000015230	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000015234	add	x0, sp, #0x10
0000000000015238	mov	x1, x21
000000000001523c	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000015240	mov	x19, x0
0000000000015244	ldr	x8, [x22, #0x118]
0000000000015248	add	x0, x8, #0x70
000000000001524c	mov	w1, #0x38
0000000000015250	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015254	mov	x20, x0
0000000000015258	adr	x8, #0x4c318
000000000001525c	nop
0000000000015260	str	x8, [x20, #0x10]!
0000000000015264	stur	xzr, [x20, #-0x8]
0000000000015268	str	x20, [sp, #0xd0]
000000000001526c	mov	x0, x20
0000000000015270	mov	x1, x19
0000000000015274	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000015278	mov	x0, x20
000000000001527c	bl	_ThrowException
_kfun:kotlin.collections#getOrNull__at__kotlin.Array<out|0:0>(kotlin.Int){0§<kotlin.Any?>}0:0?:
0000000000015280	stp	x22, x21, [sp, #-0x30]!
0000000000015284	stp	x20, x19, [sp, #0x10]
0000000000015288	stp	x29, x30, [sp, #0x20]
000000000001528c	add	x29, sp, #0x20
0000000000015290	mov	x19, x2
0000000000015294	mov	x20, x1
0000000000015298	mov	x21, x0
000000000001529c	adr	x8, #0x7f26d
00000000000152a0	nop
00000000000152a4	ldarb	w8, [x8]
00000000000152a8	tbz	w8, #0x0, 0x152b0
00000000000152ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000152b0	tbnz	w20, #0x1f, 0x152c4
00000000000152b4	ldr	w8, [x21, #0x8]
00000000000152b8	sub	w9, w8, #0x1
00000000000152bc	cmp	w9, w20
00000000000152c0	b.ge	0x152dc
00000000000152c4	mov	x0, #0x0
00000000000152c8	str	x0, [x19]
00000000000152cc	ldp	x29, x30, [sp, #0x20]
00000000000152d0	ldp	x20, x19, [sp, #0x10]
00000000000152d4	ldp	x22, x21, [sp], #0x30
00000000000152d8	ret
00000000000152dc	cmp	w8, w20
00000000000152e0	b.ls	0x15304
00000000000152e4	add	x8, x21, w20, sxtw #3
00000000000152e8	ldr	x0, [x8, #0x10]
00000000000152ec	str	x0, [x19]
00000000000152f0	str	x0, [x19]
00000000000152f4	ldp	x29, x30, [sp, #0x20]
00000000000152f8	ldp	x20, x19, [sp, #0x10]
00000000000152fc	ldp	x22, x21, [sp], #0x30
0000000000015300	ret
0000000000015304	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections#joinToString$default__at__kotlin.collections.Iterable<0:0>(kotlin.CharSequence?;kotlin.CharSequence?;kotlin.CharSequence?;kotlin.Int;kotlin.CharSequence?;kotlin.Function1<0:0,kotlin.CharSequence>?;kotlin.Int){0§<kotlin.Any?>}kotlin.String:
0000000000015308	sub	sp, sp, #0x170
000000000001530c	stp	x28, x27, [sp, #0x110]
0000000000015310	stp	x26, x25, [sp, #0x120]
0000000000015314	stp	x24, x23, [sp, #0x130]
0000000000015318	stp	x22, x21, [sp, #0x140]
000000000001531c	stp	x20, x19, [sp, #0x150]
0000000000015320	stp	x29, x30, [sp, #0x160]
0000000000015324	add	x29, sp, #0x160
0000000000015328	stp	x2, x4, [sp, #0x8]
000000000001532c	mov	x23, x3
0000000000015330	mov	x26, x1
0000000000015334	mov	x19, x0
0000000000015338	adr	x8, #0x7f1d1
000000000001533c	nop
0000000000015340	ldarb	w8, [x8]
0000000000015344	tbz	w8, #0x0, 0x1534c
0000000000015348	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001534c	movi.16b	v0, #0x0
0000000000015350	stp	q0, q0, [sp, #0x40]
0000000000015354	str	xzr, [sp, #0x60]
0000000000015358	adrp	x21, 101 ; 0x7a000
000000000001535c	add	x21, x21, #0x4e0
0000000000015360	ldr	x20, [x21]
0000000000015364	mov	x0, x21
0000000000015368	blr	x20
000000000001536c	mov	x24, x0
0000000000015370	ldr	x8, [x0]
0000000000015374	add	x9, sp, #0x40
0000000000015378	ldp	x10, x11, [x8, #0x110]
000000000001537c	str	x9, [x8, #0x110]
0000000000015380	mov	x8, #0x500000000
0000000000015384	stp	x10, x8, [sp, #0x48]
0000000000015388	add	x0, x11, #0x70
000000000001538c	mov	w1, #0x20
0000000000015390	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000015394	mov	x22, x0
0000000000015398	adr	x8, #0x4fa28
000000000001539c	nop
00000000000153a0	str	x8, [x22, #0x10]!
00000000000153a4	stur	xzr, [x22, #-0x8]
00000000000153a8	str	x22, [sp, #0x58]
00000000000153ac	mov	x0, x22
00000000000153b0	mov	w1, #0xa
00000000000153b4	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000153b8	movi.16b	v0, #0x0
00000000000153bc	stp	q0, q0, [sp, #0x70]
00000000000153c0	str	xzr, [sp, #0xb0]
00000000000153c4	stp	q0, q0, [sp, #0x90]
00000000000153c8	add	x8, sp, #0x70
00000000000153cc	add	x27, x8, #0x20
00000000000153d0	add	x2, x8, #0x18
00000000000153d4	ldr	x9, [x24]
00000000000153d8	ldr	x10, [x9, #0x110]
00000000000153dc	str	x8, [x9, #0x110]
00000000000153e0	mov	x9, #0x900000000
00000000000153e4	stp	x10, x9, [sp, #0x78]
00000000000153e8	ldr	x9, [x22]
00000000000153ec	and	x9, x9, #0xfffffffffffffffc
00000000000153f0	ldr	x9, [x9]
00000000000153f4	ldr	w10, [x9, #0x3c]
00000000000153f8	ldr	x9, [x9, #0x40]
00000000000153fc	tbnz	w10, #0x1f, 0x1540c
0000000000015400	mov	w11, #0xc8
0000000000015404	and	x10, x10, x11
0000000000015408	b	0x15490
000000000001540c	neg	w11, w10
0000000000015410	mvn	w10, w10
0000000000015414	cmp	w11, #0x9
0000000000015418	b.ge	0x15450
000000000001541c	cmp	w11, #0x2
0000000000015420	b.lt	0x15484
0000000000015424	mov	x11, #0x0
0000000000015428	mov	x12, x9
000000000001542c	ldr	w13, [x12]
0000000000015430	cmp	w13, #0xc7
0000000000015434	b.gt	0x1548c
0000000000015438	add	x11, x11, #0x1
000000000001543c	add	x12, x12, #0x10
0000000000015440	cmp	x10, x11
0000000000015444	b.ne	0x1542c
0000000000015448	mov	x11, x10
000000000001544c	b	0x1548c
0000000000015450	mov	w11, #0x0
0000000000015454	add	w12, w10, w11
0000000000015458	cmp	w12, #0x0
000000000001545c	cinc	w12, w12, lt
0000000000015460	asr	w12, w12, #1
0000000000015464	sbfiz	x13, x12, #4, #32
0000000000015468	ldr	w13, [x9, x13]
000000000001546c	cmp	w13, #0xc8
0000000000015470	csinc	w11, w11, w12, ge
0000000000015474	csel	w10, w10, w12, lt
0000000000015478	cmp	w11, w10
000000000001547c	b.lt	0x15454
0000000000015480	b	0x1548c
0000000000015484	mov	w11, #0x0
0000000000015488	b	0x1548c
000000000001548c	sxtw	x10, w11
0000000000015490	add	x11, x8, #0x30
0000000000015494	str	x11, [sp, #0x38]
0000000000015498	add	x25, x8, #0x28
000000000001549c	add	x8, x9, x10, lsl #4
00000000000154a0	ldr	x8, [x8, #0x8]
00000000000154a4	ldr	x8, [x8, #0x8]
00000000000154a8	mov	x0, x22
00000000000154ac	mov	x1, x26
00000000000154b0	blr	x8
00000000000154b4	ldr	x8, [x19]
00000000000154b8	and	x8, x8, #0xfffffffffffffffc
00000000000154bc	ldr	x8, [x8]
00000000000154c0	ldr	w9, [x8, #0x3c]
00000000000154c4	ldr	x8, [x8, #0x40]
00000000000154c8	tbnz	w9, #0x1f, 0x154d8
00000000000154cc	mov	w10, #0x31
00000000000154d0	and	x9, x9, x10
00000000000154d4	b	0x1555c
00000000000154d8	neg	w10, w9
00000000000154dc	mvn	w9, w9
00000000000154e0	cmp	w10, #0x9
00000000000154e4	b.ge	0x1551c
00000000000154e8	cmp	w10, #0x2
00000000000154ec	b.lt	0x15550
00000000000154f0	mov	x10, #0x0
00000000000154f4	mov	x11, x8
00000000000154f8	ldr	w12, [x11]
00000000000154fc	cmp	w12, #0x30
0000000000015500	b.gt	0x15558
0000000000015504	add	x10, x10, #0x1
0000000000015508	add	x11, x11, #0x10
000000000001550c	cmp	x9, x10
0000000000015510	b.ne	0x154f8
0000000000015514	mov	x10, x9
0000000000015518	b	0x15558
000000000001551c	mov	w10, #0x0
0000000000015520	add	w11, w9, w10
0000000000015524	cmp	w11, #0x0
0000000000015528	cinc	w11, w11, lt
000000000001552c	asr	w11, w11, #1
0000000000015530	sbfiz	x12, x11, #4, #32
0000000000015534	ldr	w12, [x8, x12]
0000000000015538	cmp	w12, #0x31
000000000001553c	csinc	w10, w10, w11, ge
0000000000015540	csel	w9, w9, w11, lt
0000000000015544	cmp	w10, w9
0000000000015548	b.lt	0x15520
000000000001554c	b	0x15558
0000000000015550	mov	w10, #0x0
0000000000015554	b	0x15558
0000000000015558	sxtw	x9, w10
000000000001555c	add	x8, x8, x9, lsl #4
0000000000015560	ldr	x8, [x8, #0x8]
0000000000015564	ldr	x8, [x8]
0000000000015568	mov	x0, x19
000000000001556c	mov	x1, x27
0000000000015570	blr	x8
0000000000015574	mov	x26, x0
0000000000015578	mov	w24, #0x0
000000000001557c	sub	x8, x29, #0xa0
0000000000015580	add	x27, x8, #0x18
0000000000015584	add	x28, x8, #0x20
0000000000015588	add	x10, x8, #0x28
000000000001558c	add	x9, x8, #0x30
0000000000015590	stp	x9, x10, [sp, #0x28]
0000000000015594	add	x9, x8, #0x38
0000000000015598	add	x8, x8, #0x40
000000000001559c	stp	x8, x9, [sp, #0x18]
00000000000155a0	b	0x155d8
00000000000155a4	mov	w10, #0xc8
00000000000155a8	and	x9, x9, x10
00000000000155ac	add	x8, x8, x9, lsl #4
00000000000155b0	ldr	x8, [x8, #0x8]
00000000000155b4	ldr	x8, [x8, #0x8]
00000000000155b8	mov	x0, x22
00000000000155bc	mov	x2, x28
00000000000155c0	blr	x8
00000000000155c4	mov	x0, x21
00000000000155c8	blr	x20
00000000000155cc	ldr	x8, [x0]
00000000000155d0	ldur	x9, [x29, #-0x98]
00000000000155d4	str	x9, [x8, #0x110]
00000000000155d8	ldr	x8, [x26]
00000000000155dc	and	x8, x8, #0xfffffffffffffffc
00000000000155e0	ldr	x8, [x8]
00000000000155e4	ldr	w9, [x8, #0x3c]
00000000000155e8	ldr	x8, [x8, #0x40]
00000000000155ec	tbnz	w9, #0x1f, 0x15614
00000000000155f0	mov	w10, #0xa0
00000000000155f4	and	x9, x9, x10
00000000000155f8	add	x8, x8, x9, lsl #4
00000000000155fc	ldr	x8, [x8, #0x8]
0000000000015600	ldr	x8, [x8]
0000000000015604	mov	x0, x26
0000000000015608	blr	x8
000000000001560c	tbnz	w0, #0x0, 0x156b0
0000000000015610	b	0x15d80
0000000000015614	neg	w10, w9
0000000000015618	mvn	w9, w9
000000000001561c	cmp	w10, #0x9
0000000000015620	b.ge	0x15658
0000000000015624	cmp	w10, #0x2
0000000000015628	b.lt	0x1568c
000000000001562c	mov	x10, #0x0
0000000000015630	mov	x11, x8
0000000000015634	ldr	w12, [x11]
0000000000015638	cmp	w12, #0x9f
000000000001563c	b.gt	0x15694
0000000000015640	add	x10, x10, #0x1
0000000000015644	add	x11, x11, #0x10
0000000000015648	cmp	x9, x10
000000000001564c	b.ne	0x15634
0000000000015650	mov	x10, x9
0000000000015654	b	0x15694
0000000000015658	mov	w10, #0x0
000000000001565c	add	w11, w9, w10
0000000000015660	cmp	w11, #0x0
0000000000015664	cinc	w11, w11, lt
0000000000015668	asr	w11, w11, #1
000000000001566c	sbfiz	x12, x11, #4, #32
0000000000015670	ldr	w12, [x8, x12]
0000000000015674	cmp	w12, #0xa0
0000000000015678	csinc	w10, w10, w11, ge
000000000001567c	csel	w9, w9, w11, lt
0000000000015680	cmp	w10, w9
0000000000015684	b.lt	0x1565c
0000000000015688	b	0x15694
000000000001568c	mov	w10, #0x0
0000000000015690	b	0x15694
0000000000015694	sxtw	x9, w10
0000000000015698	add	x8, x8, x9, lsl #4
000000000001569c	ldr	x8, [x8, #0x8]
00000000000156a0	ldr	x8, [x8]
00000000000156a4	mov	x0, x26
00000000000156a8	blr	x8
00000000000156ac	tbz	w0, #0x0, 0x15d80
00000000000156b0	adr	x8, #0x7ee59
00000000000156b4	nop
00000000000156b8	ldarb	w8, [x8]
00000000000156bc	tbz	w8, #0x0, 0x156c4
00000000000156c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000156c4	ldr	x8, [x26]
00000000000156c8	and	x8, x8, #0xfffffffffffffffc
00000000000156cc	ldr	x8, [x8]
00000000000156d0	ldr	w9, [x8, #0x3c]
00000000000156d4	ldr	x8, [x8, #0x40]
00000000000156d8	tbnz	w9, #0x1f, 0x156e8
00000000000156dc	mov	w10, #0xa0
00000000000156e0	and	x9, x9, x10
00000000000156e4	b	0x1576c
00000000000156e8	neg	w10, w9
00000000000156ec	mvn	w9, w9
00000000000156f0	cmp	w10, #0x9
00000000000156f4	b.ge	0x1572c
00000000000156f8	cmp	w10, #0x2
00000000000156fc	b.lt	0x15760
0000000000015700	mov	x10, #0x0
0000000000015704	mov	x11, x8
0000000000015708	ldr	w12, [x11]
000000000001570c	cmp	w12, #0x9f
0000000000015710	b.gt	0x15768
0000000000015714	add	x10, x10, #0x1
0000000000015718	add	x11, x11, #0x10
000000000001571c	cmp	x9, x10
0000000000015720	b.ne	0x15708
0000000000015724	mov	x10, x9
0000000000015728	b	0x15768
000000000001572c	mov	w10, #0x0
0000000000015730	add	w11, w9, w10
0000000000015734	cmp	w11, #0x0
0000000000015738	cinc	w11, w11, lt
000000000001573c	asr	w11, w11, #1
0000000000015740	sbfiz	x12, x11, #4, #32
0000000000015744	ldr	w12, [x8, x12]
0000000000015748	cmp	w12, #0xa0
000000000001574c	csinc	w10, w10, w11, ge
0000000000015750	csel	w9, w9, w11, lt
0000000000015754	cmp	w10, w9
0000000000015758	b.lt	0x15730
000000000001575c	b	0x15768
0000000000015760	mov	w10, #0x0
0000000000015764	b	0x15768
0000000000015768	sxtw	x9, w10
000000000001576c	add	x8, x8, x9, lsl #4
0000000000015770	ldr	x8, [x8, #0x8]
0000000000015774	ldr	x8, [x8, #0x8]
0000000000015778	mov	x0, x26
000000000001577c	mov	x1, x25
0000000000015780	blr	x8
0000000000015784	mov	x19, x0
0000000000015788	add	w24, w24, #0x1
000000000001578c	cmp	w24, #0x2
0000000000015790	b.lt	0x1585c
0000000000015794	ldr	x8, [x22]
0000000000015798	and	x8, x8, #0xfffffffffffffffc
000000000001579c	ldr	x8, [x8]
00000000000157a0	ldr	w9, [x8, #0x3c]
00000000000157a4	ldr	x8, [x8, #0x40]
00000000000157a8	tbnz	w9, #0x1f, 0x157b8
00000000000157ac	mov	w10, #0xc8
00000000000157b0	and	x9, x9, x10
00000000000157b4	b	0x1583c
00000000000157b8	neg	w10, w9
00000000000157bc	mvn	w9, w9
00000000000157c0	cmp	w10, #0x9
00000000000157c4	b.ge	0x157fc
00000000000157c8	cmp	w10, #0x2
00000000000157cc	b.lt	0x15830
00000000000157d0	mov	x10, #0x0
00000000000157d4	mov	x11, x8
00000000000157d8	ldr	w12, [x11]
00000000000157dc	cmp	w12, #0xc7
00000000000157e0	b.gt	0x15838
00000000000157e4	add	x10, x10, #0x1
00000000000157e8	add	x11, x11, #0x10
00000000000157ec	cmp	x9, x10
00000000000157f0	b.ne	0x157d8
00000000000157f4	mov	x10, x9
00000000000157f8	b	0x15838
00000000000157fc	mov	w10, #0x0
0000000000015800	add	w11, w9, w10
0000000000015804	cmp	w11, #0x0
0000000000015808	cinc	w11, w11, lt
000000000001580c	asr	w11, w11, #1
0000000000015810	sbfiz	x12, x11, #4, #32
0000000000015814	ldr	w12, [x8, x12]
0000000000015818	cmp	w12, #0xc8
000000000001581c	csinc	w10, w10, w11, ge
0000000000015820	csel	w9, w9, w11, lt
0000000000015824	cmp	w10, w9
0000000000015828	b.lt	0x15800
000000000001582c	b	0x15838
0000000000015830	mov	w10, #0x0
0000000000015834	b	0x15838
0000000000015838	sxtw	x9, w10
000000000001583c	add	x8, x8, x9, lsl #4
0000000000015840	ldr	x8, [x8, #0x8]
0000000000015844	ldr	x8, [x8, #0x8]
0000000000015848	mov	x0, x22
000000000001584c	adr	x1, #0x58a24
0000000000015850	nop
0000000000015854	ldr	x2, [sp, #0x38]
0000000000015858	blr	x8
000000000001585c	movi.16b	v0, #0x0
0000000000015860	stp	q0, q0, [x29, #-0xa0]
0000000000015864	stur	xzr, [x29, #-0x60]
0000000000015868	stp	q0, q0, [x29, #-0x80]
000000000001586c	mov	x0, x21
0000000000015870	blr	x20
0000000000015874	ldr	x8, [x0]
0000000000015878	ldr	x9, [x8, #0x110]
000000000001587c	sub	x10, x29, #0xa0
0000000000015880	str	x10, [x8, #0x110]
0000000000015884	mov	x8, #0x900000000
0000000000015888	stp	x9, x8, [x29, #-0x98]
000000000001588c	cbz	x23, 0x158b4
0000000000015890	ldr	x8, [x23]
0000000000015894	and	x8, x8, #0xfffffffffffffffc
0000000000015898	ldr	x8, [x8]
000000000001589c	ldr	w9, [x8, #0x3c]
00000000000158a0	ldr	x8, [x8, #0x40]
00000000000158a4	tbnz	w9, #0x1f, 0x1590c
00000000000158a8	mov	w10, #0x2c
00000000000158ac	and	x9, x9, x10
00000000000158b0	b	0x15b28
00000000000158b4	cbz	x19, 0x158e8
00000000000158b8	ldr	x8, [x19]
00000000000158bc	and	x8, x8, #0xfffffffffffffffc
00000000000158c0	ldr	x8, [x8]
00000000000158c4	ldr	w9, [x8, #0x3c]
00000000000158c8	ldr	x8, [x8, #0x40]
00000000000158cc	tbnz	w9, #0x1f, 0x159c8
00000000000158d0	mov	w10, #0x19
00000000000158d4	and	x9, x9, x10
00000000000158d8	lsl	x9, x9, #4
00000000000158dc	ldr	w8, [x8, x9]
00000000000158e0	cmp	w8, #0x19
00000000000158e4	b.ne	0x15aa0
00000000000158e8	ldr	x8, [x22]
00000000000158ec	and	x8, x8, #0xfffffffffffffffc
00000000000158f0	ldr	x8, [x8]
00000000000158f4	ldr	w9, [x8, #0x3c]
00000000000158f8	ldr	x8, [x8, #0x40]
00000000000158fc	tbnz	w9, #0x1f, 0x15984
0000000000015900	mov	w10, #0xc8
0000000000015904	and	x9, x9, x10
0000000000015908	b	0x15c98
000000000001590c	neg	w10, w9
0000000000015910	mvn	w9, w9
0000000000015914	cmp	w10, #0x9
0000000000015918	b.ge	0x15950
000000000001591c	cmp	w10, #0x2
0000000000015920	b.lt	0x15a20
0000000000015924	mov	x10, #0x0
0000000000015928	mov	x11, x8
000000000001592c	ldr	w12, [x11]
0000000000015930	cmp	w12, #0x2b
0000000000015934	b.gt	0x15b24
0000000000015938	add	x10, x10, #0x1
000000000001593c	add	x11, x11, #0x10
0000000000015940	cmp	x9, x10
0000000000015944	b.ne	0x1592c
0000000000015948	mov	x10, x9
000000000001594c	b	0x15b24
0000000000015950	mov	w10, #0x0
0000000000015954	add	w11, w9, w10
0000000000015958	cmp	w11, #0x0
000000000001595c	cinc	w11, w11, lt
0000000000015960	asr	w11, w11, #1
0000000000015964	sbfiz	x12, x11, #4, #32
0000000000015968	ldr	w12, [x8, x12]
000000000001596c	cmp	w12, #0x2c
0000000000015970	csinc	w10, w10, w11, ge
0000000000015974	csel	w9, w9, w11, lt
0000000000015978	cmp	w10, w9
000000000001597c	b.lt	0x15954
0000000000015980	b	0x15b24
0000000000015984	neg	w10, w9
0000000000015988	mvn	w9, w9
000000000001598c	cmp	w10, #0x9
0000000000015990	b.ge	0x15a28
0000000000015994	cmp	w10, #0x2
0000000000015998	b.lt	0x15be8
000000000001599c	mov	x10, #0x0
00000000000159a0	mov	x11, x8
00000000000159a4	ldr	w12, [x11]
00000000000159a8	cmp	w12, #0xc7
00000000000159ac	b.gt	0x15c94
00000000000159b0	add	x10, x10, #0x1
00000000000159b4	add	x11, x11, #0x10
00000000000159b8	cmp	x9, x10
00000000000159bc	b.ne	0x159a4
00000000000159c0	mov	x10, x9
00000000000159c4	b	0x15c94
00000000000159c8	neg	w10, w9
00000000000159cc	mvn	w9, w9
00000000000159d0	cmp	w10, #0x9
00000000000159d4	b.ge	0x15a5c
00000000000159d8	cmp	w10, #0x2
00000000000159dc	b.lt	0x15bf0
00000000000159e0	mov	x10, #0x0
00000000000159e4	mov	x11, x8
00000000000159e8	ldr	w12, [x11]
00000000000159ec	cmp	w12, #0x18
00000000000159f0	b.gt	0x15cb4
00000000000159f4	add	x10, x10, #0x1
00000000000159f8	add	x11, x11, #0x10
00000000000159fc	cmp	x9, x10
0000000000015a00	b.ne	0x159e8
0000000000015a04	mov	x10, x9
0000000000015a08	sxtw	x9, w10
0000000000015a0c	lsl	x9, x9, #4
0000000000015a10	ldr	w8, [x8, x9]
0000000000015a14	cmp	w8, #0x19
0000000000015a18	b.ne	0x15aa0
0000000000015a1c	b	0x158e8
0000000000015a20	mov	w10, #0x0
0000000000015a24	b	0x15b24
0000000000015a28	mov	w10, #0x0
0000000000015a2c	add	w11, w9, w10
0000000000015a30	cmp	w11, #0x0
0000000000015a34	cinc	w11, w11, lt
0000000000015a38	asr	w11, w11, #1
0000000000015a3c	sbfiz	x12, x11, #4, #32
0000000000015a40	ldr	w12, [x8, x12]
0000000000015a44	cmp	w12, #0xc8
0000000000015a48	csinc	w10, w10, w11, ge
0000000000015a4c	csel	w9, w9, w11, lt
0000000000015a50	cmp	w10, w9
0000000000015a54	b.lt	0x15a2c
0000000000015a58	b	0x15c94
0000000000015a5c	mov	w10, #0x0
0000000000015a60	add	w11, w9, w10
0000000000015a64	cmp	w11, #0x0
0000000000015a68	cinc	w11, w11, lt
0000000000015a6c	asr	w11, w11, #1
0000000000015a70	sbfiz	x12, x11, #4, #32
0000000000015a74	ldr	w12, [x8, x12]
0000000000015a78	cmp	w12, #0x19
0000000000015a7c	csinc	w10, w10, w11, ge
0000000000015a80	csel	w9, w9, w11, lt
0000000000015a84	cmp	w10, w9
0000000000015a88	b.lt	0x15a60
0000000000015a8c	sxtw	x9, w10
0000000000015a90	lsl	x9, x9, #4
0000000000015a94	ldr	w8, [x8, x9]
0000000000015a98	cmp	w8, #0x19
0000000000015a9c	b.eq	0x158e8
0000000000015aa0	ldr	x8, [x19]
0000000000015aa4	and	x8, x8, #0xfffffffffffffffc
0000000000015aa8	ldr	x8, [x8]
0000000000015aac	ldr	w8, [x8, #0x5c]
0000000000015ab0	cmp	w8, #0x65
0000000000015ab4	b.ne	0x15ae0
0000000000015ab8	ldrh	w1, [x19, #0x8]
0000000000015abc	ldr	x8, [x22]
0000000000015ac0	and	x8, x8, #0xfffffffffffffffc
0000000000015ac4	ldr	x8, [x8]
0000000000015ac8	ldr	w9, [x8, #0x3c]
0000000000015acc	ldr	x8, [x8, #0x40]
0000000000015ad0	tbnz	w9, #0x1f, 0x15c0c
0000000000015ad4	mov	w10, #0xc8
0000000000015ad8	and	x9, x9, x10
0000000000015adc	b	0x15d48
0000000000015ae0	ldr	x8, [x19]
0000000000015ae4	and	x8, x8, #0xfffffffffffffffc
0000000000015ae8	ldr	x8, [x8]
0000000000015aec	ldr	x8, [x8, #0x80]
0000000000015af0	mov	x0, x19
0000000000015af4	ldr	x1, [sp, #0x20]
0000000000015af8	blr	x8
0000000000015afc	mov	x1, x0
0000000000015b00	ldr	x8, [x22]
0000000000015b04	and	x8, x8, #0xfffffffffffffffc
0000000000015b08	ldr	x8, [x8]
0000000000015b0c	ldr	w9, [x8, #0x3c]
0000000000015b10	ldr	x8, [x8, #0x40]
0000000000015b14	tbnz	w9, #0x1f, 0x15c50
0000000000015b18	mov	w10, #0xc8
0000000000015b1c	and	x9, x9, x10
0000000000015b20	b	0x15d68
0000000000015b24	sxtw	x9, w10
0000000000015b28	add	x8, x8, x9, lsl #4
0000000000015b2c	ldr	x8, [x8, #0x8]
0000000000015b30	ldr	x8, [x8]
0000000000015b34	mov	x0, x23
0000000000015b38	mov	x1, x19
0000000000015b3c	mov	x2, x27
0000000000015b40	blr	x8
0000000000015b44	mov	x1, x0
0000000000015b48	ldr	x8, [x22]
0000000000015b4c	and	x8, x8, #0xfffffffffffffffc
0000000000015b50	ldr	x8, [x8]
0000000000015b54	ldr	w9, [x8, #0x3c]
0000000000015b58	ldr	x8, [x8, #0x40]
0000000000015b5c	tbz	w9, #0x1f, 0x155a4
0000000000015b60	neg	w10, w9
0000000000015b64	mvn	w9, w9
0000000000015b68	cmp	w10, #0x9
0000000000015b6c	b.ge	0x15ba4
0000000000015b70	cmp	w10, #0x2
0000000000015b74	b.lt	0x15bd8
0000000000015b78	mov	x10, #0x0
0000000000015b7c	mov	x11, x8
0000000000015b80	ldr	w12, [x11]
0000000000015b84	cmp	w12, #0xc7
0000000000015b88	b.gt	0x15be0
0000000000015b8c	add	x10, x10, #0x1
0000000000015b90	add	x11, x11, #0x10
0000000000015b94	cmp	x9, x10
0000000000015b98	b.ne	0x15b80
0000000000015b9c	mov	x10, x9
0000000000015ba0	b	0x15be0
0000000000015ba4	mov	w10, #0x0
0000000000015ba8	add	w11, w9, w10
0000000000015bac	cmp	w11, #0x0
0000000000015bb0	cinc	w11, w11, lt
0000000000015bb4	asr	w11, w11, #1
0000000000015bb8	sbfiz	x12, x11, #4, #32
0000000000015bbc	ldr	w12, [x8, x12]
0000000000015bc0	cmp	w12, #0xc8
0000000000015bc4	csinc	w10, w10, w11, ge
0000000000015bc8	csel	w9, w9, w11, lt
0000000000015bcc	cmp	w10, w9
0000000000015bd0	b.lt	0x15ba8
0000000000015bd4	b	0x15be0
0000000000015bd8	mov	w10, #0x0
0000000000015bdc	b	0x15be0
0000000000015be0	sxtw	x9, w10
0000000000015be4	b	0x155ac
0000000000015be8	mov	w10, #0x0
0000000000015bec	b	0x15c94
0000000000015bf0	mov	w10, #0x0
0000000000015bf4	sxtw	x9, w10
0000000000015bf8	lsl	x9, x9, #4
0000000000015bfc	ldr	w8, [x8, x9]
0000000000015c00	cmp	w8, #0x19
0000000000015c04	b.eq	0x158e8
0000000000015c08	b	0x15aa0
0000000000015c0c	neg	w10, w9
0000000000015c10	mvn	w9, w9
0000000000015c14	cmp	w10, #0x9
0000000000015c18	b.ge	0x15ccc
0000000000015c1c	cmp	w10, #0x2
0000000000015c20	b.lt	0x15d34
0000000000015c24	mov	x10, #0x0
0000000000015c28	mov	x11, x8
0000000000015c2c	ldr	w12, [x11]
0000000000015c30	cmp	w12, #0xc7
0000000000015c34	b.gt	0x15d44
0000000000015c38	add	x10, x10, #0x1
0000000000015c3c	add	x11, x11, #0x10
0000000000015c40	cmp	x9, x10
0000000000015c44	b.ne	0x15c2c
0000000000015c48	mov	x10, x9
0000000000015c4c	b	0x15d44
0000000000015c50	neg	w10, w9
0000000000015c54	mvn	w9, w9
0000000000015c58	cmp	w10, #0x9
0000000000015c5c	b.ge	0x15d00
0000000000015c60	cmp	w10, #0x2
0000000000015c64	b.lt	0x15d3c
0000000000015c68	mov	x10, #0x0
0000000000015c6c	mov	x11, x8
0000000000015c70	ldr	w12, [x11]
0000000000015c74	cmp	w12, #0xc7
0000000000015c78	b.gt	0x15d64
0000000000015c7c	add	x10, x10, #0x1
0000000000015c80	add	x11, x11, #0x10
0000000000015c84	cmp	x9, x10
0000000000015c88	b.ne	0x15c70
0000000000015c8c	mov	x10, x9
0000000000015c90	b	0x15d64
0000000000015c94	sxtw	x9, w10
0000000000015c98	add	x8, x8, x9, lsl #4
0000000000015c9c	ldr	x8, [x8, #0x8]
0000000000015ca0	ldr	x8, [x8, #0x8]
0000000000015ca4	mov	x0, x22
0000000000015ca8	mov	x1, x19
0000000000015cac	ldr	x2, [sp, #0x30]
0000000000015cb0	b	0x155c0
0000000000015cb4	sxtw	x9, w10
0000000000015cb8	lsl	x9, x9, #4
0000000000015cbc	ldr	w8, [x8, x9]
0000000000015cc0	cmp	w8, #0x19
0000000000015cc4	b.ne	0x15aa0
0000000000015cc8	b	0x158e8
0000000000015ccc	mov	w10, #0x0
0000000000015cd0	add	w11, w9, w10
0000000000015cd4	cmp	w11, #0x0
0000000000015cd8	cinc	w11, w11, lt
0000000000015cdc	asr	w11, w11, #1
0000000000015ce0	sbfiz	x12, x11, #4, #32
0000000000015ce4	ldr	w12, [x8, x12]
0000000000015ce8	cmp	w12, #0xc8
0000000000015cec	csinc	w10, w10, w11, ge
0000000000015cf0	csel	w9, w9, w11, lt
0000000000015cf4	cmp	w10, w9
0000000000015cf8	b.lt	0x15cd0
0000000000015cfc	b	0x15d44
0000000000015d00	mov	w10, #0x0
0000000000015d04	add	w11, w9, w10
0000000000015d08	cmp	w11, #0x0
0000000000015d0c	cinc	w11, w11, lt
0000000000015d10	asr	w11, w11, #1
0000000000015d14	sbfiz	x12, x11, #4, #32
0000000000015d18	ldr	w12, [x8, x12]
0000000000015d1c	cmp	w12, #0xc8
0000000000015d20	csinc	w10, w10, w11, ge
0000000000015d24	csel	w9, w9, w11, lt
0000000000015d28	cmp	w10, w9
0000000000015d2c	b.lt	0x15d04
0000000000015d30	b	0x15d64
0000000000015d34	mov	w10, #0x0
0000000000015d38	b	0x15d44
0000000000015d3c	mov	w10, #0x0
0000000000015d40	b	0x15d64
0000000000015d44	sxtw	x9, w10
0000000000015d48	add	x8, x8, x9, lsl #4
0000000000015d4c	ldr	x8, [x8, #0x8]
0000000000015d50	ldr	x8, [x8]
0000000000015d54	mov	x0, x22
0000000000015d58	ldr	x2, [sp, #0x28]
0000000000015d5c	blr	x8
0000000000015d60	b	0x155c4
0000000000015d64	sxtw	x9, w10
0000000000015d68	add	x8, x8, x9, lsl #4
0000000000015d6c	ldr	x8, [x8, #0x8]
0000000000015d70	ldr	x8, [x8, #0x8]
0000000000015d74	mov	x0, x22
0000000000015d78	ldr	x2, [sp, #0x18]
0000000000015d7c	b	0x155c0
0000000000015d80	ldr	x8, [x22]
0000000000015d84	and	x8, x8, #0xfffffffffffffffc
0000000000015d88	ldr	x8, [x8]
0000000000015d8c	ldr	w9, [x8, #0x3c]
0000000000015d90	ldr	x8, [x8, #0x40]
0000000000015d94	tbnz	w9, #0x1f, 0x15da4
0000000000015d98	mov	w10, #0xc8
0000000000015d9c	and	x9, x9, x10
0000000000015da0	b	0x15e28
0000000000015da4	neg	w10, w9
0000000000015da8	mvn	w9, w9
0000000000015dac	cmp	w10, #0x9
0000000000015db0	b.ge	0x15de8
0000000000015db4	cmp	w10, #0x2
0000000000015db8	b.lt	0x15e1c
0000000000015dbc	mov	x10, #0x0
0000000000015dc0	mov	x11, x8
0000000000015dc4	ldr	w12, [x11]
0000000000015dc8	cmp	w12, #0xc7
0000000000015dcc	b.gt	0x15e24
0000000000015dd0	add	x10, x10, #0x1
0000000000015dd4	add	x11, x11, #0x10
0000000000015dd8	cmp	x9, x10
0000000000015ddc	b.ne	0x15dc4
0000000000015de0	mov	x10, x9
0000000000015de4	b	0x15e24
0000000000015de8	mov	w10, #0x0
0000000000015dec	add	w11, w9, w10
0000000000015df0	cmp	w11, #0x0
0000000000015df4	cinc	w11, w11, lt
0000000000015df8	asr	w11, w11, #1
0000000000015dfc	sbfiz	x12, x11, #4, #32
0000000000015e00	ldr	w12, [x8, x12]
0000000000015e04	cmp	w12, #0xc8
0000000000015e08	csinc	w10, w10, w11, ge
0000000000015e0c	csel	w9, w9, w11, lt
0000000000015e10	cmp	w10, w9
0000000000015e14	b.lt	0x15dec
0000000000015e18	b	0x15e24
0000000000015e1c	mov	w10, #0x0
0000000000015e20	b	0x15e24
0000000000015e24	sxtw	x9, w10
0000000000015e28	add	x10, sp, #0x70
0000000000015e2c	add	x2, x10, #0x40
0000000000015e30	add	x8, x8, x9, lsl #4
0000000000015e34	ldr	x8, [x8, #0x8]
0000000000015e38	ldr	x8, [x8, #0x8]
0000000000015e3c	mov	x0, x22
0000000000015e40	ldr	x1, [sp, #0x8]
0000000000015e44	blr	x8
0000000000015e48	str	x22, [sp, #0x60]
0000000000015e4c	mov	x0, x21
0000000000015e50	blr	x20
0000000000015e54	mov	x19, x0
0000000000015e58	ldr	x8, [x0]
0000000000015e5c	ldr	x9, [sp, #0x78]
0000000000015e60	str	x9, [x8, #0x110]
0000000000015e64	mov	x0, x22
0000000000015e68	ldr	x20, [sp, #0x10]
0000000000015e6c	mov	x1, x20
0000000000015e70	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000015e74	str	x0, [x20]
0000000000015e78	ldr	x8, [x19]
0000000000015e7c	ldr	x9, [sp, #0x48]
0000000000015e80	str	x9, [x8, #0x110]
0000000000015e84	str	x0, [x20]
0000000000015e88	ldp	x29, x30, [sp, #0x160]
0000000000015e8c	ldp	x20, x19, [sp, #0x150]
0000000000015e90	ldp	x22, x21, [sp, #0x140]
0000000000015e94	ldp	x24, x23, [sp, #0x130]
0000000000015e98	ldp	x26, x25, [sp, #0x120]
0000000000015e9c	ldp	x28, x27, [sp, #0x110]
0000000000015ea0	add	sp, sp, #0x170
0000000000015ea4	ret
_kfun:kotlin.text#single__at__kotlin.CharSequence(){}kotlin.Char:
0000000000015ea8	sub	sp, sp, #0x50
0000000000015eac	stp	x20, x19, [sp, #0x30]
0000000000015eb0	stp	x29, x30, [sp, #0x40]
0000000000015eb4	add	x29, sp, #0x40
0000000000015eb8	mov	x19, x0
0000000000015ebc	movi.16b	v0, #0x0
0000000000015ec0	stp	q0, q0, [sp]
0000000000015ec4	str	xzr, [sp, #0x20]
0000000000015ec8	adrp	x0, 101 ; 0x7a000
0000000000015ecc	add	x0, x0, #0x4e0
0000000000015ed0	ldr	x8, [x0]
0000000000015ed4	blr	x8
0000000000015ed8	ldr	x20, [x0]
0000000000015edc	ldr	x8, [x20, #0x110]
0000000000015ee0	mov	x9, sp
0000000000015ee4	str	x9, [x20, #0x110]
0000000000015ee8	mov	x9, #0x500000000
0000000000015eec	stp	x8, x9, [sp, #0x8]
0000000000015ef0	adr	x8, #0x7e619
0000000000015ef4	nop
0000000000015ef8	ldarb	w8, [x8]
0000000000015efc	tbz	w8, #0x0, 0x15f04
0000000000015f00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000015f04	ldr	x8, [x19]
0000000000015f08	and	x8, x8, #0xfffffffffffffffc
0000000000015f0c	ldr	x8, [x8]
0000000000015f10	ldr	w9, [x8, #0x3c]
0000000000015f14	ldr	x8, [x8, #0x40]
0000000000015f18	tbnz	w9, #0x1f, 0x15f28
0000000000015f1c	mov	w10, #0x19
0000000000015f20	and	x9, x9, x10
0000000000015f24	b	0x15fac
0000000000015f28	neg	w10, w9
0000000000015f2c	mvn	w9, w9
0000000000015f30	cmp	w10, #0x9
0000000000015f34	b.ge	0x15f6c
0000000000015f38	cmp	w10, #0x2
0000000000015f3c	b.lt	0x15fa0
0000000000015f40	mov	x10, #0x0
0000000000015f44	mov	x11, x8
0000000000015f48	ldr	w12, [x11]
0000000000015f4c	cmp	w12, #0x18
0000000000015f50	b.gt	0x15fa8
0000000000015f54	add	x10, x10, #0x1
0000000000015f58	add	x11, x11, #0x10
0000000000015f5c	cmp	x9, x10
0000000000015f60	b.ne	0x15f48
0000000000015f64	mov	x10, x9
0000000000015f68	b	0x15fa8
0000000000015f6c	mov	w10, #0x0
0000000000015f70	add	w11, w9, w10
0000000000015f74	cmp	w11, #0x0
0000000000015f78	cinc	w11, w11, lt
0000000000015f7c	asr	w11, w11, #1
0000000000015f80	sbfiz	x12, x11, #4, #32
0000000000015f84	ldr	w12, [x8, x12]
0000000000015f88	cmp	w12, #0x19
0000000000015f8c	csinc	w10, w10, w11, ge
0000000000015f90	csel	w9, w9, w11, lt
0000000000015f94	cmp	w10, w9
0000000000015f98	b.lt	0x15f70
0000000000015f9c	b	0x15fa8
0000000000015fa0	mov	w10, #0x0
0000000000015fa4	b	0x15fa8
0000000000015fa8	sxtw	x9, w10
0000000000015fac	add	x8, x8, x9, lsl #4
0000000000015fb0	ldr	x8, [x8, #0x8]
0000000000015fb4	ldr	x8, [x8]
0000000000015fb8	mov	x0, x19
0000000000015fbc	blr	x8
0000000000015fc0	cmp	w0, #0x1
0000000000015fc4	b.ne	0x160a0
0000000000015fc8	ldr	x8, [x19]
0000000000015fcc	and	x8, x8, #0xfffffffffffffffc
0000000000015fd0	ldr	x8, [x8]
0000000000015fd4	ldr	w9, [x8, #0x3c]
0000000000015fd8	ldr	x8, [x8, #0x40]
0000000000015fdc	tbnz	w9, #0x1f, 0x15fec
0000000000015fe0	mov	w10, #0x19
0000000000015fe4	and	x9, x9, x10
0000000000015fe8	b	0x16070
0000000000015fec	neg	w10, w9
0000000000015ff0	mvn	w9, w9
0000000000015ff4	cmp	w10, #0x9
0000000000015ff8	b.ge	0x16030
0000000000015ffc	cmp	w10, #0x2
0000000000016000	b.lt	0x16064
0000000000016004	mov	x10, #0x0
0000000000016008	mov	x11, x8
000000000001600c	ldr	w12, [x11]
0000000000016010	cmp	w12, #0x18
0000000000016014	b.gt	0x1606c
0000000000016018	add	x10, x10, #0x1
000000000001601c	add	x11, x11, #0x10
0000000000016020	cmp	x9, x10
0000000000016024	b.ne	0x1600c
0000000000016028	mov	x10, x9
000000000001602c	b	0x1606c
0000000000016030	mov	w10, #0x0
0000000000016034	add	w11, w9, w10
0000000000016038	cmp	w11, #0x0
000000000001603c	cinc	w11, w11, lt
0000000000016040	asr	w11, w11, #1
0000000000016044	sbfiz	x12, x11, #4, #32
0000000000016048	ldr	w12, [x8, x12]
000000000001604c	cmp	w12, #0x19
0000000000016050	csinc	w10, w10, w11, ge
0000000000016054	csel	w9, w9, w11, lt
0000000000016058	cmp	w10, w9
000000000001605c	b.lt	0x16034
0000000000016060	b	0x1606c
0000000000016064	mov	w10, #0x0
0000000000016068	b	0x1606c
000000000001606c	sxtw	x9, w10
0000000000016070	add	x8, x8, x9, lsl #4
0000000000016074	ldr	x8, [x8, #0x8]
0000000000016078	ldr	x8, [x8, #0x8]
000000000001607c	mov	x0, x19
0000000000016080	mov	w1, #0x0
0000000000016084	blr	x8
0000000000016088	ldr	x8, [sp, #0x8]
000000000001608c	str	x8, [x20, #0x110]
0000000000016090	ldp	x29, x30, [sp, #0x40]
0000000000016094	ldp	x20, x19, [sp, #0x30]
0000000000016098	add	sp, sp, #0x50
000000000001609c	ret
00000000000160a0	cbnz	w0, 0x160d8
00000000000160a4	ldr	x8, [x20, #0x118]
00000000000160a8	add	x0, x8, #0x70
00000000000160ac	mov	w1, #0x38
00000000000160b0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000160b4	mov	x19, x0
00000000000160b8	adr	x8, #0x4b2d8
00000000000160bc	nop
00000000000160c0	str	x8, [x19, #0x10]!
00000000000160c4	stur	xzr, [x19, #-0x8]
00000000000160c8	str	x19, [sp, #0x18]
00000000000160cc	adr	x1, #0x59814
00000000000160d0	nop
00000000000160d4	b	0x16108
00000000000160d8	ldr	x8, [x20, #0x118]
00000000000160dc	add	x0, x8, #0x70
00000000000160e0	mov	w1, #0x38
00000000000160e4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000160e8	mov	x19, x0
00000000000160ec	adr	x8, #0x4b484
00000000000160f0	nop
00000000000160f4	str	x8, [x19, #0x10]!
00000000000160f8	stur	xzr, [x19, #-0x8]
00000000000160fc	str	x19, [sp, #0x20]
0000000000016100	adr	x1, #0x59820
0000000000016104	nop
0000000000016108	mov	x0, x19
000000000001610c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000016110	mov	x0, x19
0000000000016114	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableCollection#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000016118	sub	sp, sp, #0x80
000000000001611c	stp	x26, x25, [sp, #0x30]
0000000000016120	stp	x24, x23, [sp, #0x40]
0000000000016124	stp	x22, x21, [sp, #0x50]
0000000000016128	stp	x20, x19, [sp, #0x60]
000000000001612c	stp	x29, x30, [sp, #0x70]
0000000000016130	add	x29, sp, #0x70
0000000000016134	mov	x21, x1
0000000000016138	mov	x19, x0
000000000001613c	movi.16b	v0, #0x0
0000000000016140	stp	q0, q0, [sp]
0000000000016144	str	xzr, [sp, #0x20]
0000000000016148	mov	x20, sp
000000000001614c	add	x22, x20, #0x18
0000000000016150	adrp	x0, 100 ; 0x7a000
0000000000016154	add	x0, x0, #0x4e0
0000000000016158	ldr	x8, [x0]
000000000001615c	blr	x8
0000000000016160	ldr	x23, [x0]
0000000000016164	ldr	x8, [x23, #0x110]
0000000000016168	str	x20, [x23, #0x110]
000000000001616c	mov	x9, #0x500000000
0000000000016170	stp	x8, x9, [sp, #0x8]
0000000000016174	adr	x24, #0x7e395
0000000000016178	nop
000000000001617c	ldarb	w8, [x24]
0000000000016180	tbz	w8, #0x0, 0x16188
0000000000016184	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016188	add	x20, x20, #0x20
000000000001618c	ldr	x8, [x21]
0000000000016190	and	x8, x8, #0xfffffffffffffffc
0000000000016194	ldr	x8, [x8]
0000000000016198	ldr	w9, [x8, #0x3c]
000000000001619c	ldr	x8, [x8, #0x40]
00000000000161a0	tbnz	w9, #0x1f, 0x161b0
00000000000161a4	mov	w10, #0x12
00000000000161a8	and	x9, x9, x10
00000000000161ac	b	0x16234
00000000000161b0	neg	w10, w9
00000000000161b4	mvn	w9, w9
00000000000161b8	cmp	w10, #0x9
00000000000161bc	b.ge	0x161f4
00000000000161c0	cmp	w10, #0x2
00000000000161c4	b.lt	0x16228
00000000000161c8	mov	x10, #0x0
00000000000161cc	mov	x11, x8
00000000000161d0	ldr	w12, [x11]
00000000000161d4	cmp	w12, #0x11
00000000000161d8	b.gt	0x16230
00000000000161dc	add	x10, x10, #0x1
00000000000161e0	add	x11, x11, #0x10
00000000000161e4	cmp	x9, x10
00000000000161e8	b.ne	0x161d0
00000000000161ec	mov	x10, x9
00000000000161f0	b	0x16230
00000000000161f4	mov	w10, #0x0
00000000000161f8	add	w11, w9, w10
00000000000161fc	cmp	w11, #0x0
0000000000016200	cinc	w11, w11, lt
0000000000016204	asr	w11, w11, #1
0000000000016208	sbfiz	x12, x11, #4, #32
000000000001620c	ldr	w12, [x8, x12]
0000000000016210	cmp	w12, #0x12
0000000000016214	csinc	w10, w10, w11, ge
0000000000016218	csel	w9, w9, w11, lt
000000000001621c	cmp	w10, w9
0000000000016220	b.lt	0x161f8
0000000000016224	b	0x16230
0000000000016228	mov	w10, #0x0
000000000001622c	b	0x16230
0000000000016230	sxtw	x9, w10
0000000000016234	add	x8, x8, x9, lsl #4
0000000000016238	ldr	x8, [x8, #0x8]
000000000001623c	ldr	x8, [x8, #0x20]
0000000000016240	mov	x0, x21
0000000000016244	mov	x1, x22
0000000000016248	blr	x8
000000000001624c	mov	x21, x0
0000000000016250	mov	w22, #0x0
0000000000016254	mov	w25, #0xa0
0000000000016258	b	0x162b0
000000000001625c	ldr	x8, [x21]
0000000000016260	and	x8, x8, #0xfffffffffffffffc
0000000000016264	ldr	x8, [x8]
0000000000016268	ldr	w9, [x8, #0x3c]
000000000001626c	ldr	x8, [x8, #0x40]
0000000000016270	tbnz	w9, #0x1f, 0x1632c
0000000000016274	and	x9, x9, x25
0000000000016278	add	x8, x8, x9, lsl #4
000000000001627c	ldr	x8, [x8, #0x8]
0000000000016280	ldr	x8, [x8, #0x8]
0000000000016284	mov	x0, x21
0000000000016288	mov	x1, x20
000000000001628c	blr	x8
0000000000016290	mov	x1, x0
0000000000016294	ldr	x8, [x19]
0000000000016298	and	x8, x8, #0xfffffffffffffffc
000000000001629c	ldr	x8, [x8]
00000000000162a0	ldr	x8, [x8, #0xc0]
00000000000162a4	mov	x0, x19
00000000000162a8	blr	x8
00000000000162ac	orr	w22, w0, w22
00000000000162b0	ldr	x8, [x21]
00000000000162b4	and	x8, x8, #0xfffffffffffffffc
00000000000162b8	ldr	x8, [x8]
00000000000162bc	ldr	w9, [x8, #0x3c]
00000000000162c0	ldr	x8, [x8, #0x40]
00000000000162c4	tbnz	w9, #0x1f, 0x162e8
00000000000162c8	and	x9, x9, x25
00000000000162cc	add	x8, x8, x9, lsl #4
00000000000162d0	ldr	x8, [x8, #0x8]
00000000000162d4	ldr	x8, [x8]
00000000000162d8	mov	x0, x21
00000000000162dc	blr	x8
00000000000162e0	tbnz	w0, #0x0, 0x16404
00000000000162e4	b	0x1641c
00000000000162e8	neg	w10, w9
00000000000162ec	mvn	w9, w9
00000000000162f0	cmp	w10, #0x9
00000000000162f4	b.ge	0x16370
00000000000162f8	cmp	w10, #0x2
00000000000162fc	b.lt	0x163d8
0000000000016300	mov	x10, #0x0
0000000000016304	mov	x11, x8
0000000000016308	ldr	w12, [x11]
000000000001630c	cmp	w12, #0x9f
0000000000016310	b.gt	0x163e8
0000000000016314	add	x10, x10, #0x1
0000000000016318	add	x11, x11, #0x10
000000000001631c	cmp	x9, x10
0000000000016320	b.ne	0x16308
0000000000016324	mov	x10, x9
0000000000016328	b	0x163e8
000000000001632c	neg	w10, w9
0000000000016330	mvn	w9, w9
0000000000016334	cmp	w10, #0x9
0000000000016338	b.ge	0x163a4
000000000001633c	cmp	w10, #0x2
0000000000016340	b.lt	0x163e0
0000000000016344	mov	x10, #0x0
0000000000016348	mov	x11, x8
000000000001634c	ldr	w12, [x11]
0000000000016350	cmp	w12, #0x9f
0000000000016354	b.gt	0x16414
0000000000016358	add	x10, x10, #0x1
000000000001635c	add	x11, x11, #0x10
0000000000016360	cmp	x9, x10
0000000000016364	b.ne	0x1634c
0000000000016368	mov	x10, x9
000000000001636c	b	0x16414
0000000000016370	mov	w10, #0x0
0000000000016374	add	w11, w9, w10
0000000000016378	cmp	w11, #0x0
000000000001637c	cinc	w11, w11, lt
0000000000016380	asr	w11, w11, #1
0000000000016384	sbfiz	x12, x11, #4, #32
0000000000016388	ldr	w12, [x8, x12]
000000000001638c	cmp	w12, #0xa0
0000000000016390	csinc	w10, w10, w11, ge
0000000000016394	csel	w9, w9, w11, lt
0000000000016398	cmp	w10, w9
000000000001639c	b.lt	0x16374
00000000000163a0	b	0x163e8
00000000000163a4	mov	w10, #0x0
00000000000163a8	add	w11, w9, w10
00000000000163ac	cmp	w11, #0x0
00000000000163b0	cinc	w11, w11, lt
00000000000163b4	asr	w11, w11, #1
00000000000163b8	sbfiz	x12, x11, #4, #32
00000000000163bc	ldr	w12, [x8, x12]
00000000000163c0	cmp	w12, #0xa0
00000000000163c4	csinc	w10, w10, w11, ge
00000000000163c8	csel	w9, w9, w11, lt
00000000000163cc	cmp	w10, w9
00000000000163d0	b.lt	0x163a8
00000000000163d4	b	0x16414
00000000000163d8	mov	w10, #0x0
00000000000163dc	b	0x163e8
00000000000163e0	mov	w10, #0x0
00000000000163e4	b	0x16414
00000000000163e8	sxtw	x9, w10
00000000000163ec	add	x8, x8, x9, lsl #4
00000000000163f0	ldr	x8, [x8, #0x8]
00000000000163f4	ldr	x8, [x8]
00000000000163f8	mov	x0, x21
00000000000163fc	blr	x8
0000000000016400	tbz	w0, #0x0, 0x1641c
0000000000016404	ldarb	w8, [x24]
0000000000016408	tbz	w8, #0x0, 0x1625c
000000000001640c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016410	b	0x1625c
0000000000016414	sxtw	x9, w10
0000000000016418	b	0x16278
000000000001641c	ldr	x8, [sp, #0x8]
0000000000016420	str	x8, [x23, #0x110]
0000000000016424	and	w0, w22, #0x1
0000000000016428	ldp	x29, x30, [sp, #0x70]
000000000001642c	ldp	x20, x19, [sp, #0x60]
0000000000016430	ldp	x22, x21, [sp, #0x50]
0000000000016434	ldp	x24, x23, [sp, #0x40]
0000000000016438	ldp	x26, x25, [sp, #0x30]
000000000001643c	add	sp, sp, #0x80
0000000000016440	ret
_kfun:kotlin.collections.AbstractMutableCollection#remove(1:0){}kotlin.Boolean:
0000000000016444	sub	sp, sp, #0x70
0000000000016448	stp	x24, x23, [sp, #0x30]
000000000001644c	stp	x22, x21, [sp, #0x40]
0000000000016450	stp	x20, x19, [sp, #0x50]
0000000000016454	stp	x29, x30, [sp, #0x60]
0000000000016458	add	x29, sp, #0x60
000000000001645c	mov	x20, x1
0000000000016460	mov	x19, x0
0000000000016464	movi.16b	v0, #0x0
0000000000016468	stp	q0, q0, [sp]
000000000001646c	str	xzr, [sp, #0x20]
0000000000016470	mov	x8, sp
0000000000016474	add	x21, x8, #0x20
0000000000016478	add	x22, x8, #0x18
000000000001647c	adrp	x0, 100 ; 0x7a000
0000000000016480	add	x0, x0, #0x4e0
0000000000016484	ldr	x9, [x0]
0000000000016488	blr	x9
000000000001648c	ldr	x23, [x0]
0000000000016490	ldr	x9, [x23, #0x110]
0000000000016494	str	x8, [x23, #0x110]
0000000000016498	mov	x8, #0x500000000
000000000001649c	stp	x9, x8, [sp, #0x8]
00000000000164a0	adr	x24, #0x7e069
00000000000164a4	nop
00000000000164a8	ldarb	w8, [x24]
00000000000164ac	tbz	w8, #0x0, 0x164b4
00000000000164b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000164b4	ldr	x8, [x19]
00000000000164b8	and	x8, x8, #0xfffffffffffffffc
00000000000164bc	ldr	x8, [x8]
00000000000164c0	ldr	x8, [x8, #0xa8]
00000000000164c4	mov	x0, x19
00000000000164c8	mov	x1, x22
00000000000164cc	blr	x8
00000000000164d0	mov	x19, x0
00000000000164d4	mov	w22, #0xa0
00000000000164d8	b	0x164e0
00000000000164dc	cbz	x20, 0x1669c
00000000000164e0	ldr	x8, [x19]
00000000000164e4	and	x8, x8, #0xfffffffffffffffc
00000000000164e8	ldr	x8, [x8]
00000000000164ec	ldr	w9, [x8, #0x3c]
00000000000164f0	ldr	x8, [x8, #0x40]
00000000000164f4	tbnz	w9, #0x1f, 0x16518
00000000000164f8	and	x9, x9, x22
00000000000164fc	add	x8, x8, x9, lsl #4
0000000000016500	ldr	x8, [x8, #0x8]
0000000000016504	ldr	x8, [x8]
0000000000016508	mov	x0, x19
000000000001650c	blr	x8
0000000000016510	tbnz	w0, #0x0, 0x165b4
0000000000016514	b	0x166c0
0000000000016518	neg	w10, w9
000000000001651c	mvn	w9, w9
0000000000016520	cmp	w10, #0x9
0000000000016524	b.ge	0x1655c
0000000000016528	cmp	w10, #0x2
000000000001652c	b.lt	0x16590
0000000000016530	mov	x10, #0x0
0000000000016534	mov	x11, x8
0000000000016538	ldr	w12, [x11]
000000000001653c	cmp	w12, #0x9f
0000000000016540	b.gt	0x16598
0000000000016544	add	x10, x10, #0x1
0000000000016548	add	x11, x11, #0x10
000000000001654c	cmp	x9, x10
0000000000016550	b.ne	0x16538
0000000000016554	mov	x10, x9
0000000000016558	b	0x16598
000000000001655c	mov	w10, #0x0
0000000000016560	add	w11, w9, w10
0000000000016564	cmp	w11, #0x0
0000000000016568	cinc	w11, w11, lt
000000000001656c	asr	w11, w11, #1
0000000000016570	sbfiz	x12, x11, #4, #32
0000000000016574	ldr	w12, [x8, x12]
0000000000016578	cmp	w12, #0xa0
000000000001657c	csinc	w10, w10, w11, ge
0000000000016580	csel	w9, w9, w11, lt
0000000000016584	cmp	w10, w9
0000000000016588	b.lt	0x16560
000000000001658c	b	0x16598
0000000000016590	mov	w10, #0x0
0000000000016594	b	0x16598
0000000000016598	sxtw	x9, w10
000000000001659c	add	x8, x8, x9, lsl #4
00000000000165a0	ldr	x8, [x8, #0x8]
00000000000165a4	ldr	x8, [x8]
00000000000165a8	mov	x0, x19
00000000000165ac	blr	x8
00000000000165b0	tbz	w0, #0x0, 0x166c0
00000000000165b4	ldarb	w8, [x24]
00000000000165b8	tbz	w8, #0x0, 0x165c0
00000000000165bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000165c0	ldr	x8, [x19]
00000000000165c4	and	x8, x8, #0xfffffffffffffffc
00000000000165c8	ldr	x8, [x8]
00000000000165cc	ldr	w9, [x8, #0x3c]
00000000000165d0	ldr	x8, [x8, #0x40]
00000000000165d4	tbnz	w9, #0x1f, 0x165e0
00000000000165d8	and	x9, x9, x22
00000000000165dc	b	0x16664
00000000000165e0	neg	w10, w9
00000000000165e4	mvn	w9, w9
00000000000165e8	cmp	w10, #0x9
00000000000165ec	b.ge	0x16624
00000000000165f0	cmp	w10, #0x2
00000000000165f4	b.lt	0x16658
00000000000165f8	mov	x10, #0x0
00000000000165fc	mov	x11, x8
0000000000016600	ldr	w12, [x11]
0000000000016604	cmp	w12, #0x9f
0000000000016608	b.gt	0x16660
000000000001660c	add	x10, x10, #0x1
0000000000016610	add	x11, x11, #0x10
0000000000016614	cmp	x9, x10
0000000000016618	b.ne	0x16600
000000000001661c	mov	x10, x9
0000000000016620	b	0x16660
0000000000016624	mov	w10, #0x0
0000000000016628	add	w11, w9, w10
000000000001662c	cmp	w11, #0x0
0000000000016630	cinc	w11, w11, lt
0000000000016634	asr	w11, w11, #1
0000000000016638	sbfiz	x12, x11, #4, #32
000000000001663c	ldr	w12, [x8, x12]
0000000000016640	cmp	w12, #0xa0
0000000000016644	csinc	w10, w10, w11, ge
0000000000016648	csel	w9, w9, w11, lt
000000000001664c	cmp	w10, w9
0000000000016650	b.lt	0x16628
0000000000016654	b	0x16660
0000000000016658	mov	w10, #0x0
000000000001665c	b	0x16660
0000000000016660	sxtw	x9, w10
0000000000016664	add	x8, x8, x9, lsl #4
0000000000016668	ldr	x8, [x8, #0x8]
000000000001666c	ldr	x8, [x8, #0x8]
0000000000016670	mov	x0, x19
0000000000016674	mov	x1, x21
0000000000016678	blr	x8
000000000001667c	cbz	x0, 0x164dc
0000000000016680	ldr	x8, [x0]
0000000000016684	and	x8, x8, #0xfffffffffffffffc
0000000000016688	ldr	x8, [x8]
000000000001668c	ldr	x8, [x8, #0x70]
0000000000016690	mov	x1, x20
0000000000016694	blr	x8
0000000000016698	tbz	w0, #0x0, 0x164e0
000000000001669c	ldr	x8, [x19]
00000000000166a0	and	x8, x8, #0xfffffffffffffffc
00000000000166a4	ldr	x8, [x8]
00000000000166a8	ldr	w9, [x8, #0x3c]
00000000000166ac	ldr	x8, [x8, #0x40]
00000000000166b0	tbnz	w9, #0x1f, 0x166c8
00000000000166b4	mov	w10, #0x39
00000000000166b8	and	x9, x9, x10
00000000000166bc	b	0x1674c
00000000000166c0	mov	w0, #0x0
00000000000166c4	b	0x16764
00000000000166c8	neg	w10, w9
00000000000166cc	mvn	w9, w9
00000000000166d0	cmp	w10, #0x9
00000000000166d4	b.ge	0x1670c
00000000000166d8	cmp	w10, #0x2
00000000000166dc	b.lt	0x16740
00000000000166e0	mov	x10, #0x0
00000000000166e4	mov	x11, x8
00000000000166e8	ldr	w12, [x11]
00000000000166ec	cmp	w12, #0x38
00000000000166f0	b.gt	0x16748
00000000000166f4	add	x10, x10, #0x1
00000000000166f8	add	x11, x11, #0x10
00000000000166fc	cmp	x9, x10
0000000000016700	b.ne	0x166e8
0000000000016704	mov	x10, x9
0000000000016708	b	0x16748
000000000001670c	mov	w10, #0x0
0000000000016710	add	w11, w9, w10
0000000000016714	cmp	w11, #0x0
0000000000016718	cinc	w11, w11, lt
000000000001671c	asr	w11, w11, #1
0000000000016720	sbfiz	x12, x11, #4, #32
0000000000016724	ldr	w12, [x8, x12]
0000000000016728	cmp	w12, #0x39
000000000001672c	csinc	w10, w10, w11, ge
0000000000016730	csel	w9, w9, w11, lt
0000000000016734	cmp	w10, w9
0000000000016738	b.lt	0x16710
000000000001673c	b	0x16748
0000000000016740	mov	w10, #0x0
0000000000016744	b	0x16748
0000000000016748	sxtw	x9, w10
000000000001674c	add	x8, x8, x9, lsl #4
0000000000016750	ldr	x8, [x8, #0x8]
0000000000016754	ldr	x8, [x8]
0000000000016758	mov	x0, x19
000000000001675c	blr	x8
0000000000016760	mov	w0, #0x1
0000000000016764	ldr	x8, [sp, #0x8]
0000000000016768	str	x8, [x23, #0x110]
000000000001676c	ldp	x29, x30, [sp, #0x60]
0000000000016770	ldp	x20, x19, [sp, #0x50]
0000000000016774	ldp	x22, x21, [sp, #0x40]
0000000000016778	ldp	x24, x23, [sp, #0x30]
000000000001677c	add	sp, sp, #0x70
0000000000016780	ret
_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000016784	sub	sp, sp, #0x50
0000000000016788	stp	x22, x21, [sp, #0x20]
000000000001678c	stp	x20, x19, [sp, #0x30]
0000000000016790	stp	x29, x30, [sp, #0x40]
0000000000016794	add	x29, sp, #0x40
0000000000016798	mov	x20, x1
000000000001679c	mov	x19, x0
00000000000167a0	movi.16b	v0, #0x0
00000000000167a4	stp	q0, q0, [sp]
00000000000167a8	adrp	x0, 100 ; 0x7a000
00000000000167ac	add	x0, x0, #0x4e0
00000000000167b0	ldr	x8, [x0]
00000000000167b4	blr	x8
00000000000167b8	ldr	x21, [x0]
00000000000167bc	ldr	x8, [x21, #0x110]
00000000000167c0	mov	x9, sp
00000000000167c4	str	x9, [x21, #0x110]
00000000000167c8	mov	x9, #0x400000000
00000000000167cc	stp	x8, x9, [sp, #0x8]
00000000000167d0	adr	x8, #0x7dd39
00000000000167d4	nop
00000000000167d8	ldarb	w8, [x8]
00000000000167dc	tbz	w8, #0x0, 0x167e4
00000000000167e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000167e4	ldr	x8, [x19]
00000000000167e8	and	x8, x8, #0xfffffffffffffffc
00000000000167ec	ldr	x8, [x8]
00000000000167f0	ldr	w9, [x8, #0x3c]
00000000000167f4	ldr	x8, [x8, #0x40]
00000000000167f8	tbnz	w9, #0x1f, 0x16868
00000000000167fc	mov	w10, #0x24
0000000000016800	and	x9, x9, x10
0000000000016804	lsl	x9, x9, #4
0000000000016808	ldr	w8, [x8, x9]
000000000001680c	cmp	w8, #0x24
0000000000016810	b.ne	0x1690c
0000000000016814	ldr	x8, [x21, #0x118]
0000000000016818	add	x0, x8, #0x70
000000000001681c	mov	w1, #0x18
0000000000016820	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000016824	adr	x8, #0x4d06c
0000000000016828	nop
000000000001682c	mov	x1, x0
0000000000016830	str	x8, [x1, #0x10]!
0000000000016834	stur	xzr, [x1, #-0x8]
0000000000016838	str	x1, [sp, #0x18]
000000000001683c	str	x20, [x1, #0x8]
0000000000016840	mov	x0, x19
0000000000016844	mov	w2, #0x1
0000000000016848	bl	"_kfun:kotlin.collections.filterInPlace#internal.14"
000000000001684c	ldr	x8, [sp, #0x8]
0000000000016850	str	x8, [x21, #0x110]
0000000000016854	ldp	x29, x30, [sp, #0x40]
0000000000016858	ldp	x20, x19, [sp, #0x30]
000000000001685c	ldp	x22, x21, [sp, #0x20]
0000000000016860	add	sp, sp, #0x50
0000000000016864	ret
0000000000016868	neg	w10, w9
000000000001686c	mvn	w9, w9
0000000000016870	cmp	w10, #0x9
0000000000016874	b.ge	0x168c0
0000000000016878	cmp	w10, #0x2
000000000001687c	b.lt	0x168f4
0000000000016880	mov	x10, #0x0
0000000000016884	mov	x11, x8
0000000000016888	ldr	w12, [x11]
000000000001688c	cmp	w12, #0x23
0000000000016890	b.gt	0x1691c
0000000000016894	add	x10, x10, #0x1
0000000000016898	add	x11, x11, #0x10
000000000001689c	cmp	x9, x10
00000000000168a0	b.ne	0x16888
00000000000168a4	mov	x10, x9
00000000000168a8	sxtw	x9, w10
00000000000168ac	lsl	x9, x9, #4
00000000000168b0	ldr	w8, [x8, x9]
00000000000168b4	cmp	w8, #0x24
00000000000168b8	b.eq	0x16814
00000000000168bc	b	0x1690c
00000000000168c0	mov	w10, #0x0
00000000000168c4	add	w11, w9, w10
00000000000168c8	cmp	w11, #0x0
00000000000168cc	cinc	w11, w11, lt
00000000000168d0	asr	w11, w11, #1
00000000000168d4	sbfiz	x12, x11, #4, #32
00000000000168d8	ldr	w12, [x8, x12]
00000000000168dc	cmp	w12, #0x24
00000000000168e0	csinc	w10, w10, w11, ge
00000000000168e4	csel	w9, w9, w11, lt
00000000000168e8	cmp	w10, w9
00000000000168ec	b.lt	0x168c4
00000000000168f0	b	0x168f8
00000000000168f4	mov	w10, #0x0
00000000000168f8	sxtw	x9, w10
00000000000168fc	lsl	x9, x9, #4
0000000000016900	ldr	w8, [x8, x9]
0000000000016904	cmp	w8, #0x24
0000000000016908	b.eq	0x16814
000000000001690c	adr	x1, #0x4d684
0000000000016910	nop
0000000000016914	mov	x0, x19
0000000000016918	bl	_ThrowClassCastException
000000000001691c	sxtw	x9, w10
0000000000016920	lsl	x9, x9, #4
0000000000016924	ldr	w8, [x8, x9]
0000000000016928	cmp	w8, #0x24
000000000001692c	b.eq	0x16814
0000000000016930	b	0x1690c
_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000016934	sub	sp, sp, #0x50
0000000000016938	stp	x22, x21, [sp, #0x20]
000000000001693c	stp	x20, x19, [sp, #0x30]
0000000000016940	stp	x29, x30, [sp, #0x40]
0000000000016944	add	x29, sp, #0x40
0000000000016948	mov	x20, x1
000000000001694c	mov	x19, x0
0000000000016950	movi.16b	v0, #0x0
0000000000016954	stp	q0, q0, [sp]
0000000000016958	adrp	x0, 100 ; 0x7a000
000000000001695c	add	x0, x0, #0x4e0
0000000000016960	ldr	x8, [x0]
0000000000016964	blr	x8
0000000000016968	ldr	x21, [x0]
000000000001696c	ldr	x8, [x21, #0x110]
0000000000016970	mov	x9, sp
0000000000016974	str	x9, [x21, #0x110]
0000000000016978	mov	x9, #0x400000000
000000000001697c	stp	x8, x9, [sp, #0x8]
0000000000016980	adr	x8, #0x7db89
0000000000016984	nop
0000000000016988	ldarb	w8, [x8]
000000000001698c	tbz	w8, #0x0, 0x16994
0000000000016990	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016994	ldr	x8, [x19]
0000000000016998	and	x8, x8, #0xfffffffffffffffc
000000000001699c	ldr	x8, [x8]
00000000000169a0	ldr	w9, [x8, #0x3c]
00000000000169a4	ldr	x8, [x8, #0x40]
00000000000169a8	tbnz	w9, #0x1f, 0x16a18
00000000000169ac	mov	w10, #0x24
00000000000169b0	and	x9, x9, x10
00000000000169b4	lsl	x9, x9, #4
00000000000169b8	ldr	w8, [x8, x9]
00000000000169bc	cmp	w8, #0x24
00000000000169c0	b.ne	0x16abc
00000000000169c4	ldr	x8, [x21, #0x118]
00000000000169c8	add	x0, x8, #0x70
00000000000169cc	mov	w1, #0x18
00000000000169d0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000169d4	adr	x8, #0x4cf4c
00000000000169d8	nop
00000000000169dc	mov	x1, x0
00000000000169e0	str	x8, [x1, #0x10]!
00000000000169e4	stur	xzr, [x1, #-0x8]
00000000000169e8	str	x1, [sp, #0x18]
00000000000169ec	str	x20, [x1, #0x8]
00000000000169f0	mov	x0, x19
00000000000169f4	mov	w2, #0x0
00000000000169f8	bl	"_kfun:kotlin.collections.filterInPlace#internal.14"
00000000000169fc	ldr	x8, [sp, #0x8]
0000000000016a00	str	x8, [x21, #0x110]
0000000000016a04	ldp	x29, x30, [sp, #0x40]
0000000000016a08	ldp	x20, x19, [sp, #0x30]
0000000000016a0c	ldp	x22, x21, [sp, #0x20]
0000000000016a10	add	sp, sp, #0x50
0000000000016a14	ret
0000000000016a18	neg	w10, w9
0000000000016a1c	mvn	w9, w9
0000000000016a20	cmp	w10, #0x9
0000000000016a24	b.ge	0x16a70
0000000000016a28	cmp	w10, #0x2
0000000000016a2c	b.lt	0x16aa4
0000000000016a30	mov	x10, #0x0
0000000000016a34	mov	x11, x8
0000000000016a38	ldr	w12, [x11]
0000000000016a3c	cmp	w12, #0x23
0000000000016a40	b.gt	0x16acc
0000000000016a44	add	x10, x10, #0x1
0000000000016a48	add	x11, x11, #0x10
0000000000016a4c	cmp	x9, x10
0000000000016a50	b.ne	0x16a38
0000000000016a54	mov	x10, x9
0000000000016a58	sxtw	x9, w10
0000000000016a5c	lsl	x9, x9, #4
0000000000016a60	ldr	w8, [x8, x9]
0000000000016a64	cmp	w8, #0x24
0000000000016a68	b.eq	0x169c4
0000000000016a6c	b	0x16abc
0000000000016a70	mov	w10, #0x0
0000000000016a74	add	w11, w9, w10
0000000000016a78	cmp	w11, #0x0
0000000000016a7c	cinc	w11, w11, lt
0000000000016a80	asr	w11, w11, #1
0000000000016a84	sbfiz	x12, x11, #4, #32
0000000000016a88	ldr	w12, [x8, x12]
0000000000016a8c	cmp	w12, #0x24
0000000000016a90	csinc	w10, w10, w11, ge
0000000000016a94	csel	w9, w9, w11, lt
0000000000016a98	cmp	w10, w9
0000000000016a9c	b.lt	0x16a74
0000000000016aa0	b	0x16aa8
0000000000016aa4	mov	w10, #0x0
0000000000016aa8	sxtw	x9, w10
0000000000016aac	lsl	x9, x9, #4
0000000000016ab0	ldr	w8, [x8, x9]
0000000000016ab4	cmp	w8, #0x24
0000000000016ab8	b.eq	0x169c4
0000000000016abc	adr	x1, #0x4d4d4
0000000000016ac0	nop
0000000000016ac4	mov	x0, x19
0000000000016ac8	bl	_ThrowClassCastException
0000000000016acc	sxtw	x9, w10
0000000000016ad0	lsl	x9, x9, #4
0000000000016ad4	ldr	w8, [x8, x9]
0000000000016ad8	cmp	w8, #0x24
0000000000016adc	b.eq	0x169c4
0000000000016ae0	b	0x16abc
_kfun:kotlin.collections.AbstractMutableCollection.$removeAll$lambda$0$FUNCTION_REFERENCE$15.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
0000000000016ae4	stp	x22, x21, [sp, #-0x30]!
0000000000016ae8	stp	x20, x19, [sp, #0x10]
0000000000016aec	stp	x29, x30, [sp, #0x20]
0000000000016af0	add	x29, sp, #0x20
0000000000016af4	mov	x19, x2
0000000000016af8	mov	x20, x1
0000000000016afc	mov	x21, x0
0000000000016b00	adr	x8, #0x7da09
0000000000016b04	nop
0000000000016b08	ldarb	w8, [x8]
0000000000016b0c	tbz	w8, #0x0, 0x16b14
0000000000016b10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016b14	ldr	x0, [x21, #0x8]
0000000000016b18	ldr	x8, [x0]
0000000000016b1c	and	x8, x8, #0xfffffffffffffffc
0000000000016b20	ldr	x8, [x8]
0000000000016b24	ldr	w9, [x8, #0x3c]
0000000000016b28	ldr	x8, [x8, #0x40]
0000000000016b2c	tbnz	w9, #0x1f, 0x16b3c
0000000000016b30	mov	w10, #0x12
0000000000016b34	and	x9, x9, x10
0000000000016b38	b	0x16bc0
0000000000016b3c	neg	w10, w9
0000000000016b40	mvn	w9, w9
0000000000016b44	cmp	w10, #0x9
0000000000016b48	b.ge	0x16b80
0000000000016b4c	cmp	w10, #0x2
0000000000016b50	b.lt	0x16bb4
0000000000016b54	mov	x10, #0x0
0000000000016b58	mov	x11, x8
0000000000016b5c	ldr	w12, [x11]
0000000000016b60	cmp	w12, #0x11
0000000000016b64	b.gt	0x16bbc
0000000000016b68	add	x10, x10, #0x1
0000000000016b6c	add	x11, x11, #0x10
0000000000016b70	cmp	x9, x10
0000000000016b74	b.ne	0x16b5c
0000000000016b78	mov	x10, x9
0000000000016b7c	b	0x16bbc
0000000000016b80	mov	w10, #0x0
0000000000016b84	add	w11, w9, w10
0000000000016b88	cmp	w11, #0x0
0000000000016b8c	cinc	w11, w11, lt
0000000000016b90	asr	w11, w11, #1
0000000000016b94	sbfiz	x12, x11, #4, #32
0000000000016b98	ldr	w12, [x8, x12]
0000000000016b9c	cmp	w12, #0x12
0000000000016ba0	csinc	w10, w10, w11, ge
0000000000016ba4	csel	w9, w9, w11, lt
0000000000016ba8	cmp	w10, w9
0000000000016bac	b.lt	0x16b84
0000000000016bb0	b	0x16bbc
0000000000016bb4	mov	w10, #0x0
0000000000016bb8	b	0x16bbc
0000000000016bbc	sxtw	x9, w10
0000000000016bc0	add	x8, x8, x9, lsl #4
0000000000016bc4	ldr	x8, [x8, #0x8]
0000000000016bc8	ldr	x8, [x8, #0x8]
0000000000016bcc	mov	x1, x20
0000000000016bd0	blr	x8
0000000000016bd4	mov	x1, x19
0000000000016bd8	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
0000000000016bdc	str	x0, [x19]
0000000000016be0	ldp	x29, x30, [sp, #0x20]
0000000000016be4	ldp	x20, x19, [sp, #0x10]
0000000000016be8	ldp	x22, x21, [sp], #0x30
0000000000016bec	ret
_kfun:kotlin.collections.AbstractMutableCollection.$retainAll$lambda$1$FUNCTION_REFERENCE$16.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
0000000000016bf0	stp	x22, x21, [sp, #-0x30]!
0000000000016bf4	stp	x20, x19, [sp, #0x10]
0000000000016bf8	stp	x29, x30, [sp, #0x20]
0000000000016bfc	add	x29, sp, #0x20
0000000000016c00	mov	x19, x2
0000000000016c04	mov	x20, x1
0000000000016c08	mov	x21, x0
0000000000016c0c	adr	x8, #0x7d8fd
0000000000016c10	nop
0000000000016c14	ldarb	w8, [x8]
0000000000016c18	tbz	w8, #0x0, 0x16c20
0000000000016c1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016c20	ldr	x0, [x21, #0x8]
0000000000016c24	ldr	x8, [x0]
0000000000016c28	and	x8, x8, #0xfffffffffffffffc
0000000000016c2c	ldr	x8, [x8]
0000000000016c30	ldr	w9, [x8, #0x3c]
0000000000016c34	ldr	x8, [x8, #0x40]
0000000000016c38	tbnz	w9, #0x1f, 0x16c48
0000000000016c3c	mov	w10, #0x12
0000000000016c40	and	x9, x9, x10
0000000000016c44	b	0x16ccc
0000000000016c48	neg	w10, w9
0000000000016c4c	mvn	w9, w9
0000000000016c50	cmp	w10, #0x9
0000000000016c54	b.ge	0x16c8c
0000000000016c58	cmp	w10, #0x2
0000000000016c5c	b.lt	0x16cc0
0000000000016c60	mov	x10, #0x0
0000000000016c64	mov	x11, x8
0000000000016c68	ldr	w12, [x11]
0000000000016c6c	cmp	w12, #0x11
0000000000016c70	b.gt	0x16cc8
0000000000016c74	add	x10, x10, #0x1
0000000000016c78	add	x11, x11, #0x10
0000000000016c7c	cmp	x9, x10
0000000000016c80	b.ne	0x16c68
0000000000016c84	mov	x10, x9
0000000000016c88	b	0x16cc8
0000000000016c8c	mov	w10, #0x0
0000000000016c90	add	w11, w9, w10
0000000000016c94	cmp	w11, #0x0
0000000000016c98	cinc	w11, w11, lt
0000000000016c9c	asr	w11, w11, #1
0000000000016ca0	sbfiz	x12, x11, #4, #32
0000000000016ca4	ldr	w12, [x8, x12]
0000000000016ca8	cmp	w12, #0x12
0000000000016cac	csinc	w10, w10, w11, ge
0000000000016cb0	csel	w9, w9, w11, lt
0000000000016cb4	cmp	w10, w9
0000000000016cb8	b.lt	0x16c90
0000000000016cbc	b	0x16cc8
0000000000016cc0	mov	w10, #0x0
0000000000016cc4	b	0x16cc8
0000000000016cc8	sxtw	x9, w10
0000000000016ccc	add	x8, x8, x9, lsl #4
0000000000016cd0	ldr	x8, [x8, #0x8]
0000000000016cd4	ldr	x8, [x8, #0x8]
0000000000016cd8	mov	x1, x20
0000000000016cdc	blr	x8
0000000000016ce0	mov	x1, x19
0000000000016ce4	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
0000000000016ce8	str	x0, [x19]
0000000000016cec	ldp	x29, x30, [sp, #0x20]
0000000000016cf0	ldp	x20, x19, [sp, #0x10]
0000000000016cf4	ldp	x22, x21, [sp], #0x30
0000000000016cf8	ret
_kfun:kotlin.collections.AbstractMutableList#add(1:0){}kotlin.Boolean:
0000000000016cfc	stp	x20, x19, [sp, #-0x20]!
0000000000016d00	stp	x29, x30, [sp, #0x10]
0000000000016d04	add	x29, sp, #0x10
0000000000016d08	mov	x19, x1
0000000000016d0c	mov	x20, x0
0000000000016d10	adr	x8, #0x7d7f9
0000000000016d14	nop
0000000000016d18	ldarb	w8, [x8]
0000000000016d1c	tbz	w8, #0x0, 0x16d24
0000000000016d20	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016d24	ldr	x8, [x20]
0000000000016d28	and	x8, x8, #0xfffffffffffffffc
0000000000016d2c	ldr	x8, [x8]
0000000000016d30	ldr	x8, [x8, #0x88]
0000000000016d34	mov	x0, x20
0000000000016d38	blr	x8
0000000000016d3c	mov	x1, x0
0000000000016d40	ldr	x8, [x20]
0000000000016d44	and	x8, x8, #0xfffffffffffffffc
0000000000016d48	ldr	x8, [x8]
0000000000016d4c	ldr	x8, [x8, #0xf0]
0000000000016d50	mov	x0, x20
0000000000016d54	mov	x2, x19
0000000000016d58	blr	x8
0000000000016d5c	mov	w0, #0x1
0000000000016d60	ldp	x29, x30, [sp, #0x10]
0000000000016d64	ldp	x20, x19, [sp], #0x20
0000000000016d68	ret
_kfun:kotlin.collections.AbstractMutableList#addAll(kotlin.Int;kotlin.collections.Collection<1:0>){}kotlin.Boolean:
0000000000016d6c	sub	sp, sp, #0x80
0000000000016d70	stp	x26, x25, [sp, #0x30]
0000000000016d74	stp	x24, x23, [sp, #0x40]
0000000000016d78	stp	x22, x21, [sp, #0x50]
0000000000016d7c	stp	x20, x19, [sp, #0x60]
0000000000016d80	stp	x29, x30, [sp, #0x70]
0000000000016d84	add	x29, sp, #0x70
0000000000016d88	mov	x22, x2
0000000000016d8c	mov	x19, x1
0000000000016d90	mov	x20, x0
0000000000016d94	movi.16b	v0, #0x0
0000000000016d98	stp	q0, q0, [sp]
0000000000016d9c	str	xzr, [sp, #0x20]
0000000000016da0	mov	x21, sp
0000000000016da4	add	x23, x21, #0x18
0000000000016da8	adrp	x0, 100 ; 0x7a000
0000000000016dac	add	x0, x0, #0x4e0
0000000000016db0	ldr	x8, [x0]
0000000000016db4	blr	x8
0000000000016db8	ldr	x24, [x0]
0000000000016dbc	ldr	x8, [x24, #0x110]
0000000000016dc0	str	x21, [x24, #0x110]
0000000000016dc4	mov	x9, #0x500000000
0000000000016dc8	stp	x8, x9, [sp, #0x8]
0000000000016dcc	adr	x25, #0x7d73d
0000000000016dd0	nop
0000000000016dd4	ldarb	w8, [x25]
0000000000016dd8	tbz	w8, #0x0, 0x16de0
0000000000016ddc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000016de0	add	x21, x21, #0x20
0000000000016de4	ldr	x8, [x20]
0000000000016de8	and	x8, x8, #0xfffffffffffffffc
0000000000016dec	ldr	x8, [x8]
0000000000016df0	ldr	x8, [x8, #0x88]
0000000000016df4	mov	x0, x20
0000000000016df8	blr	x8
0000000000016dfc	mov	x1, x0
0000000000016e00	mov	x0, x19
0000000000016e04	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
0000000000016e08	ldr	x8, [x22]
0000000000016e0c	and	x8, x8, #0xfffffffffffffffc
0000000000016e10	ldr	x8, [x8]
0000000000016e14	ldr	w9, [x8, #0x3c]
0000000000016e18	ldr	x8, [x8, #0x40]
0000000000016e1c	tbnz	w9, #0x1f, 0x16e2c
0000000000016e20	mov	w10, #0x12
0000000000016e24	and	x9, x9, x10
0000000000016e28	b	0x16eb0
0000000000016e2c	neg	w10, w9
0000000000016e30	mvn	w9, w9
0000000000016e34	cmp	w10, #0x9
0000000000016e38	b.ge	0x16e70
0000000000016e3c	cmp	w10, #0x2
0000000000016e40	b.lt	0x16ea4
0000000000016e44	mov	x10, #0x0
0000000000016e48	mov	x11, x8
0000000000016e4c	ldr	w12, [x11]
0000000000016e50	cmp	w12, #0x11
0000000000016e54	b.gt	0x16eac
0000000000016e58	add	x10, x10, #0x1
0000000000016e5c	add	x11, x11, #0x10
0000000000016e60	cmp	x9, x10
0000000000016e64	b.ne	0x16e4c
0000000000016e68	mov	x10, x9
0000000000016e6c	b	0x16eac
0000000000016e70	mov	w10, #0x0
0000000000016e74	add	w11, w9, w10
0000000000016e78	cmp	w11, #0x0
0000000000016e7c	cinc	w11, w11, lt
0000000000016e80	asr	w11, w11, #1
0000000000016e84	sbfiz	x12, x11, #4, #32
0000000000016e88	ldr	w12, [x8, x12]
0000000000016e8c	cmp	w12, #0x12
0000000000016e90	csinc	w10, w10, w11, ge
0000000000016e94	csel	w9, w9, w11, lt
0000000000016e98	cmp	w10, w9
0000000000016e9c	b.lt	0x16e74
0000000000016ea0	b	0x16eac
0000000000016ea4	mov	w10, #0x0
0000000000016ea8	b	0x16eac
0000000000016eac	sxtw	x9, w10
0000000000016eb0	add	x8, x8, x9, lsl #4
0000000000016eb4	ldr	x8, [x8, #0x8]
0000000000016eb8	ldr	x8, [x8, #0x20]
0000000000016ebc	mov	x0, x22
0000000000016ec0	mov	x1, x23
0000000000016ec4	blr	x8
0000000000016ec8	mov	x22, x0
0000000000016ecc	mov	w26, #0x0
0000000000016ed0	mov	w23, #0xa0
0000000000016ed4	b	0x16f34
0000000000016ed8	ldr	x8, [x22]
0000000000016edc	and	x8, x8, #0xfffffffffffffffc
0000000000016ee0	ldr	x8, [x8]
0000000000016ee4	ldr	w9, [x8, #0x3c]
0000000000016ee8	ldr	x8, [x8, #0x40]
0000000000016eec	tbnz	w9, #0x1f, 0x16fb0
0000000000016ef0	and	x9, x9, x23
0000000000016ef4	add	x8, x8, x9, lsl #4
0000000000016ef8	ldr	x8, [x8, #0x8]
0000000000016efc	ldr	x8, [x8, #0x8]
0000000000016f00	mov	x0, x22
0000000000016f04	mov	x1, x21
0000000000016f08	blr	x8
0000000000016f0c	mov	x2, x0
0000000000016f10	ldr	x8, [x20]
0000000000016f14	and	x8, x8, #0xfffffffffffffffc
0000000000016f18	ldr	x8, [x8]
0000000000016f1c	ldr	x8, [x8, #0xf0]
0000000000016f20	mov	x0, x20
0000000000016f24	mov	x1, x19
0000000000016f28	blr	x8
0000000000016f2c	add	w19, w19, #0x1
0000000000016f30	mov	w26, #0x1
0000000000016f34	ldr	x8, [x22]
0000000000016f38	and	x8, x8, #0xfffffffffffffffc
0000000000016f3c	ldr	x8, [x8]
0000000000016f40	ldr	w9, [x8, #0x3c]
0000000000016f44	ldr	x8, [x8, #0x40]
0000000000016f48	tbnz	w9, #0x1f, 0x16f6c
0000000000016f4c	and	x9, x9, x23
0000000000016f50	add	x8, x8, x9, lsl #4
0000000000016f54	ldr	x8, [x8, #0x8]
0000000000016f58	ldr	x8, [x8]
0000000000016f5c	mov	x0, x22
0000000000016f60	blr	x8
0000000000016f64	tbnz	w0, #0x0, 0x17088
0000000000016f68	b	0x170a0
0000000000016f6c	neg	w10, w9
0000000000016f70	mvn	w9, w9
0000000000016f74	cmp	w10, #0x9
0000000000016f78	b.ge	0x16ff4
0000000000016f7c	cmp	w10, #0x2
0000000000016f80	b.lt	0x1705c
0000000000016f84	mov	x10, #0x0
0000000000016f88	mov	x11, x8
0000000000016f8c	ldr	w12, [x11]
0000000000016f90	cmp	w12, #0x9f
0000000000016f94	b.gt	0x1706c
0000000000016f98	add	x10, x10, #0x1
0000000000016f9c	add	x11, x11, #0x10
0000000000016fa0	cmp	x9, x10
0000000000016fa4	b.ne	0x16f8c
0000000000016fa8	mov	x10, x9
0000000000016fac	b	0x1706c
0000000000016fb0	neg	w10, w9
0000000000016fb4	mvn	w9, w9
0000000000016fb8	cmp	w10, #0x9
0000000000016fbc	b.ge	0x17028
0000000000016fc0	cmp	w10, #0x2
0000000000016fc4	b.lt	0x17064
0000000000016fc8	mov	x10, #0x0
0000000000016fcc	mov	x11, x8
0000000000016fd0	ldr	w12, [x11]
0000000000016fd4	cmp	w12, #0x9f
0000000000016fd8	b.gt	0x17098
0000000000016fdc	add	x10, x10, #0x1
0000000000016fe0	add	x11, x11, #0x10
0000000000016fe4	cmp	x9, x10
0000000000016fe8	b.ne	0x16fd0
0000000000016fec	mov	x10, x9
0000000000016ff0	b	0x17098
0000000000016ff4	mov	w10, #0x0
0000000000016ff8	add	w11, w9, w10
0000000000016ffc	cmp	w11, #0x0
0000000000017000	cinc	w11, w11, lt
0000000000017004	asr	w11, w11, #1
0000000000017008	sbfiz	x12, x11, #4, #32
000000000001700c	ldr	w12, [x8, x12]
0000000000017010	cmp	w12, #0xa0
0000000000017014	csinc	w10, w10, w11, ge
0000000000017018	csel	w9, w9, w11, lt
000000000001701c	cmp	w10, w9
0000000000017020	b.lt	0x16ff8
0000000000017024	b	0x1706c
0000000000017028	mov	w10, #0x0
000000000001702c	add	w11, w9, w10
0000000000017030	cmp	w11, #0x0
0000000000017034	cinc	w11, w11, lt
0000000000017038	asr	w11, w11, #1
000000000001703c	sbfiz	x12, x11, #4, #32
0000000000017040	ldr	w12, [x8, x12]
0000000000017044	cmp	w12, #0xa0
0000000000017048	csinc	w10, w10, w11, ge
000000000001704c	csel	w9, w9, w11, lt
0000000000017050	cmp	w10, w9
0000000000017054	b.lt	0x1702c
0000000000017058	b	0x17098
000000000001705c	mov	w10, #0x0
0000000000017060	b	0x1706c
0000000000017064	mov	w10, #0x0
0000000000017068	b	0x17098
000000000001706c	sxtw	x9, w10
0000000000017070	add	x8, x8, x9, lsl #4
0000000000017074	ldr	x8, [x8, #0x8]
0000000000017078	ldr	x8, [x8]
000000000001707c	mov	x0, x22
0000000000017080	blr	x8
0000000000017084	tbz	w0, #0x0, 0x170a0
0000000000017088	ldarb	w8, [x25]
000000000001708c	tbz	w8, #0x0, 0x16ed8
0000000000017090	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017094	b	0x16ed8
0000000000017098	sxtw	x9, w10
000000000001709c	b	0x16ef4
00000000000170a0	ldr	x8, [sp, #0x8]
00000000000170a4	str	x8, [x24, #0x110]
00000000000170a8	and	w0, w26, #0x1
00000000000170ac	ldp	x29, x30, [sp, #0x70]
00000000000170b0	ldp	x20, x19, [sp, #0x60]
00000000000170b4	ldp	x22, x21, [sp, #0x50]
00000000000170b8	ldp	x24, x23, [sp, #0x40]
00000000000170bc	ldp	x26, x25, [sp, #0x30]
00000000000170c0	add	sp, sp, #0x80
00000000000170c4	ret
_kfun:kotlin.collections.AbstractMutableList#clear(){}:
00000000000170c8	stp	x20, x19, [sp, #-0x20]!
00000000000170cc	stp	x29, x30, [sp, #0x10]
00000000000170d0	add	x29, sp, #0x10
00000000000170d4	mov	x19, x0
00000000000170d8	adr	x8, #0x7d431
00000000000170dc	nop
00000000000170e0	ldarb	w8, [x8]
00000000000170e4	tbz	w8, #0x0, 0x170ec
00000000000170e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000170ec	ldr	x8, [x19]
00000000000170f0	and	x8, x8, #0xfffffffffffffffc
00000000000170f4	ldr	x8, [x8]
00000000000170f8	ldr	x8, [x8, #0x88]
00000000000170fc	mov	x0, x19
0000000000017100	blr	x8
0000000000017104	mov	x2, x0
0000000000017108	ldr	x8, [x19]
000000000001710c	and	x8, x8, #0xfffffffffffffffc
0000000000017110	ldr	x8, [x8]
0000000000017114	ldr	x3, [x8, #0x130]
0000000000017118	mov	x0, x19
000000000001711c	mov	w1, #0x0
0000000000017120	ldp	x29, x30, [sp, #0x10]
0000000000017124	ldp	x20, x19, [sp], #0x20
0000000000017128	br	x3
_kfun:kotlin.collections.AbstractMutableList#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001712c	sub	sp, sp, #0x50
0000000000017130	stp	x22, x21, [sp, #0x20]
0000000000017134	stp	x20, x19, [sp, #0x30]
0000000000017138	stp	x29, x30, [sp, #0x40]
000000000001713c	add	x29, sp, #0x40
0000000000017140	mov	x20, x1
0000000000017144	mov	x19, x0
0000000000017148	movi.16b	v0, #0x0
000000000001714c	stp	q0, q0, [sp]
0000000000017150	adrp	x0, 99 ; 0x7a000
0000000000017154	add	x0, x0, #0x4e0
0000000000017158	ldr	x8, [x0]
000000000001715c	blr	x8
0000000000017160	ldr	x21, [x0]
0000000000017164	ldr	x8, [x21, #0x110]
0000000000017168	mov	x9, sp
000000000001716c	str	x9, [x21, #0x110]
0000000000017170	mov	x9, #0x400000000
0000000000017174	stp	x8, x9, [sp, #0x8]
0000000000017178	adr	x8, #0x7d391
000000000001717c	nop
0000000000017180	ldarb	w8, [x8]
0000000000017184	tbz	w8, #0x0, 0x1718c
0000000000017188	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001718c	ldr	x8, [x21, #0x118]
0000000000017190	add	x0, x8, #0x70
0000000000017194	mov	w1, #0x18
0000000000017198	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001719c	adr	x8, #0x4cb14
00000000000171a0	nop
00000000000171a4	mov	x1, x0
00000000000171a8	str	x8, [x1, #0x10]!
00000000000171ac	stur	xzr, [x1, #-0x8]
00000000000171b0	str	x1, [sp, #0x18]
00000000000171b4	str	x20, [x1, #0x8]
00000000000171b8	mov	x0, x19
00000000000171bc	bl	"_kfun:kotlin.collections#removeAll__at__kotlin.collections.MutableList<0:0>(kotlin.Function1<0:0,kotlin.Boolean>){0§<kotlin.Any?>}kotlin.Boolean"
00000000000171c0	ldr	x8, [sp, #0x8]
00000000000171c4	str	x8, [x21, #0x110]
00000000000171c8	ldp	x29, x30, [sp, #0x40]
00000000000171cc	ldp	x20, x19, [sp, #0x30]
00000000000171d0	ldp	x22, x21, [sp, #0x20]
00000000000171d4	add	sp, sp, #0x50
00000000000171d8	ret
_kfun:kotlin.collections.AbstractMutableList#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
00000000000171dc	sub	sp, sp, #0x50
00000000000171e0	stp	x22, x21, [sp, #0x20]
00000000000171e4	stp	x20, x19, [sp, #0x30]
00000000000171e8	stp	x29, x30, [sp, #0x40]
00000000000171ec	add	x29, sp, #0x40
00000000000171f0	mov	x20, x1
00000000000171f4	mov	x19, x0
00000000000171f8	movi.16b	v0, #0x0
00000000000171fc	stp	q0, q0, [sp]
0000000000017200	adrp	x0, 99 ; 0x7a000
0000000000017204	add	x0, x0, #0x4e0
0000000000017208	ldr	x8, [x0]
000000000001720c	blr	x8
0000000000017210	ldr	x21, [x0]
0000000000017214	ldr	x8, [x21, #0x110]
0000000000017218	mov	x9, sp
000000000001721c	str	x9, [x21, #0x110]
0000000000017220	mov	x9, #0x400000000
0000000000017224	stp	x8, x9, [sp, #0x8]
0000000000017228	adr	x8, #0x7d2e1
000000000001722c	nop
0000000000017230	ldarb	w8, [x8]
0000000000017234	tbz	w8, #0x0, 0x1723c
0000000000017238	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001723c	ldr	x8, [x21, #0x118]
0000000000017240	add	x0, x8, #0x70
0000000000017244	mov	w1, #0x18
0000000000017248	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001724c	adr	x8, #0x4caf4
0000000000017250	nop
0000000000017254	mov	x1, x0
0000000000017258	str	x8, [x1, #0x10]!
000000000001725c	stur	xzr, [x1, #-0x8]
0000000000017260	str	x1, [sp, #0x18]
0000000000017264	str	x20, [x1, #0x8]
0000000000017268	mov	x0, x19
000000000001726c	bl	"_kfun:kotlin.collections#removeAll__at__kotlin.collections.MutableList<0:0>(kotlin.Function1<0:0,kotlin.Boolean>){0§<kotlin.Any?>}kotlin.Boolean"
0000000000017270	ldr	x8, [sp, #0x8]
0000000000017274	str	x8, [x21, #0x110]
0000000000017278	ldp	x29, x30, [sp, #0x40]
000000000001727c	ldp	x20, x19, [sp, #0x30]
0000000000017280	ldp	x22, x21, [sp, #0x20]
0000000000017284	add	sp, sp, #0x50
0000000000017288	ret
_kfun:kotlin.collections.AbstractMutableList#iterator(){}kotlin.collections.MutableIterator<1:0>:
000000000001728c	stp	x20, x19, [sp, #-0x20]!
0000000000017290	stp	x29, x30, [sp, #0x10]
0000000000017294	add	x29, sp, #0x10
0000000000017298	mov	x19, x1
000000000001729c	mov	x20, x0
00000000000172a0	adr	x8, #0x7d269
00000000000172a4	nop
00000000000172a8	ldarb	w8, [x8]
00000000000172ac	tbz	w8, #0x0, 0x172b4
00000000000172b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000172b4	adrp	x0, 99 ; 0x7a000
00000000000172b8	add	x0, x0, #0x4e0
00000000000172bc	ldr	x8, [x0]
00000000000172c0	blr	x8
00000000000172c4	ldr	x8, [x0]
00000000000172c8	ldr	x8, [x8, #0x118]
00000000000172cc	add	x0, x8, #0x70
00000000000172d0	mov	w1, #0x20
00000000000172d4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000172d8	adr	x8, #0x4c748
00000000000172dc	nop
00000000000172e0	str	x8, [x0, #0x10]!
00000000000172e4	stur	xzr, [x0, #-0x8]
00000000000172e8	str	x0, [x19]
00000000000172ec	str	x20, [x0, #0x8]
00000000000172f0	mov	w8, #-0x1
00000000000172f4	str	w8, [x0, #0x14]
00000000000172f8	str	x0, [x19]
00000000000172fc	ldp	x29, x30, [sp, #0x10]
0000000000017300	ldp	x20, x19, [sp], #0x20
0000000000017304	ret
_kfun:kotlin.collections.AbstractMutableList#contains(1:0){}kotlin.Boolean:
0000000000017308	stp	x20, x19, [sp, #-0x20]!
000000000001730c	stp	x29, x30, [sp, #0x10]
0000000000017310	add	x29, sp, #0x10
0000000000017314	mov	x19, x1
0000000000017318	mov	x20, x0
000000000001731c	adr	x8, #0x7d1ed
0000000000017320	nop
0000000000017324	ldarb	w8, [x8]
0000000000017328	tbz	w8, #0x0, 0x17330
000000000001732c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017330	ldr	x8, [x20]
0000000000017334	and	x8, x8, #0xfffffffffffffffc
0000000000017338	ldr	x8, [x8]
000000000001733c	ldr	x8, [x8, #0x108]
0000000000017340	mov	x0, x20
0000000000017344	mov	x1, x19
0000000000017348	blr	x8
000000000001734c	mvn	w8, w0
0000000000017350	lsr	w0, w8, #31
0000000000017354	ldp	x29, x30, [sp, #0x10]
0000000000017358	ldp	x20, x19, [sp], #0x20
000000000001735c	ret
_kfun:kotlin.collections.AbstractMutableList#indexOf(1:0){}kotlin.Int:
0000000000017360	sub	sp, sp, #0x70
0000000000017364	stp	x26, x25, [sp, #0x20]
0000000000017368	stp	x24, x23, [sp, #0x30]
000000000001736c	stp	x22, x21, [sp, #0x40]
0000000000017370	stp	x20, x19, [sp, #0x50]
0000000000017374	stp	x29, x30, [sp, #0x60]
0000000000017378	add	x29, sp, #0x60
000000000001737c	mov	x19, x1
0000000000017380	mov	x20, x0
0000000000017384	movi.16b	v0, #0x0
0000000000017388	stp	q0, q0, [sp]
000000000001738c	mov	x22, sp
0000000000017390	adrp	x0, 99 ; 0x7a000
0000000000017394	add	x0, x0, #0x4e0
0000000000017398	ldr	x8, [x0]
000000000001739c	blr	x8
00000000000173a0	ldr	x23, [x0]
00000000000173a4	ldr	x8, [x23, #0x110]
00000000000173a8	str	x22, [x23, #0x110]
00000000000173ac	mov	x9, #0x400000000
00000000000173b0	stp	x8, x9, [sp, #0x8]
00000000000173b4	adr	x24, #0x7d155
00000000000173b8	nop
00000000000173bc	ldarb	w8, [x24]
00000000000173c0	tbz	w8, #0x0, 0x173c8
00000000000173c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000173c8	mov	x0, x20
00000000000173cc	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0§<kotlin.Any?>}kotlin.Int"
00000000000173d0	tbnz	w0, #0x1f, 0x17444
00000000000173d4	mov	w21, #0x0
00000000000173d8	add	x22, x22, #0x18
00000000000173dc	add	w25, w0, #0x1
00000000000173e0	b	0x173f4
00000000000173e4	cbz	x19, 0x17448
00000000000173e8	add	w21, w21, #0x1
00000000000173ec	cmp	w25, w21
00000000000173f0	b.eq	0x17444
00000000000173f4	ldarb	w8, [x24]
00000000000173f8	tbz	w8, #0x0, 0x17400
00000000000173fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017400	ldr	x8, [x20]
0000000000017404	and	x8, x8, #0xfffffffffffffffc
0000000000017408	ldr	x8, [x8]
000000000001740c	ldr	x8, [x8, #0x100]
0000000000017410	mov	x0, x20
0000000000017414	mov	x1, x21
0000000000017418	mov	x2, x22
000000000001741c	blr	x8
0000000000017420	cbz	x0, 0x173e4
0000000000017424	ldr	x8, [x0]
0000000000017428	and	x8, x8, #0xfffffffffffffffc
000000000001742c	ldr	x8, [x8]
0000000000017430	ldr	x8, [x8, #0x70]
0000000000017434	mov	x1, x19
0000000000017438	blr	x8
000000000001743c	tbz	w0, #0x0, 0x173e8
0000000000017440	b	0x17448
0000000000017444	mov	w21, #-0x1
0000000000017448	ldr	x8, [sp, #0x8]
000000000001744c	str	x8, [x23, #0x110]
0000000000017450	mov	x0, x21
0000000000017454	ldp	x29, x30, [sp, #0x60]
0000000000017458	ldp	x20, x19, [sp, #0x50]
000000000001745c	ldp	x22, x21, [sp, #0x40]
0000000000017460	ldp	x24, x23, [sp, #0x30]
0000000000017464	ldp	x26, x25, [sp, #0x20]
0000000000017468	add	sp, sp, #0x70
000000000001746c	ret
_kfun:kotlin.collections.AbstractMutableList#lastIndexOf(1:0){}kotlin.Int:
0000000000017470	sub	sp, sp, #0x60
0000000000017474	stp	x24, x23, [sp, #0x20]
0000000000017478	stp	x22, x21, [sp, #0x30]
000000000001747c	stp	x20, x19, [sp, #0x40]
0000000000017480	stp	x29, x30, [sp, #0x50]
0000000000017484	add	x29, sp, #0x50
0000000000017488	mov	x19, x1
000000000001748c	mov	x20, x0
0000000000017490	movi.16b	v0, #0x0
0000000000017494	stp	q0, q0, [sp]
0000000000017498	mov	x22, sp
000000000001749c	adrp	x0, 99 ; 0x7a000
00000000000174a0	add	x0, x0, #0x4e0
00000000000174a4	ldr	x8, [x0]
00000000000174a8	blr	x8
00000000000174ac	ldr	x23, [x0]
00000000000174b0	ldr	x8, [x23, #0x110]
00000000000174b4	str	x22, [x23, #0x110]
00000000000174b8	mov	x9, #0x400000000
00000000000174bc	stp	x8, x9, [sp, #0x8]
00000000000174c0	adr	x24, #0x7d049
00000000000174c4	nop
00000000000174c8	ldarb	w8, [x24]
00000000000174cc	tbz	w8, #0x0, 0x174d4
00000000000174d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000174d4	mov	x0, x20
00000000000174d8	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0§<kotlin.Any?>}kotlin.Int"
00000000000174dc	tbnz	w0, #0x1f, 0x17550
00000000000174e0	mov	x21, x0
00000000000174e4	add	x22, x22, #0x18
00000000000174e8	b	0x17500
00000000000174ec	cbz	x19, 0x17554
00000000000174f0	sub	w21, w21, #0x1
00000000000174f4	add	w8, w21, #0x1
00000000000174f8	cmp	w8, #0x0
00000000000174fc	b.le	0x17550
0000000000017500	ldarb	w8, [x24]
0000000000017504	tbz	w8, #0x0, 0x1750c
0000000000017508	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001750c	ldr	x8, [x20]
0000000000017510	and	x8, x8, #0xfffffffffffffffc
0000000000017514	ldr	x8, [x8]
0000000000017518	ldr	x8, [x8, #0x100]
000000000001751c	mov	x0, x20
0000000000017520	mov	x1, x21
0000000000017524	mov	x2, x22
0000000000017528	blr	x8
000000000001752c	cbz	x0, 0x174ec
0000000000017530	ldr	x8, [x0]
0000000000017534	and	x8, x8, #0xfffffffffffffffc
0000000000017538	ldr	x8, [x8]
000000000001753c	ldr	x8, [x8, #0x70]
0000000000017540	mov	x1, x19
0000000000017544	blr	x8
0000000000017548	tbz	w0, #0x0, 0x174f0
000000000001754c	b	0x17554
0000000000017550	mov	w21, #-0x1
0000000000017554	ldr	x8, [sp, #0x8]
0000000000017558	str	x8, [x23, #0x110]
000000000001755c	mov	x0, x21
0000000000017560	ldp	x29, x30, [sp, #0x50]
0000000000017564	ldp	x20, x19, [sp, #0x40]
0000000000017568	ldp	x22, x21, [sp, #0x30]
000000000001756c	ldp	x24, x23, [sp, #0x20]
0000000000017570	add	sp, sp, #0x60
0000000000017574	ret
_kfun:kotlin.collections.AbstractMutableList#listIterator(){}kotlin.collections.MutableListIterator<1:0>:
0000000000017578	stp	x20, x19, [sp, #-0x20]!
000000000001757c	stp	x29, x30, [sp, #0x10]
0000000000017580	add	x29, sp, #0x10
0000000000017584	mov	x19, x1
0000000000017588	mov	x20, x0
000000000001758c	adr	x8, #0x7cf7d
0000000000017590	nop
0000000000017594	ldarb	w8, [x8]
0000000000017598	tbz	w8, #0x0, 0x175a0
000000000001759c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000175a0	ldr	x8, [x20]
00000000000175a4	and	x8, x8, #0xfffffffffffffffc
00000000000175a8	ldr	x8, [x8]
00000000000175ac	ldr	x8, [x8, #0x120]
00000000000175b0	mov	x0, x20
00000000000175b4	mov	w1, #0x0
00000000000175b8	mov	x2, x19
00000000000175bc	blr	x8
00000000000175c0	str	x0, [x19]
00000000000175c4	ldp	x29, x30, [sp, #0x10]
00000000000175c8	ldp	x20, x19, [sp], #0x20
00000000000175cc	ret
_kfun:kotlin.collections.AbstractMutableList#listIterator(kotlin.Int){}kotlin.collections.MutableListIterator<1:0>:
00000000000175d0	stp	x22, x21, [sp, #-0x30]!
00000000000175d4	stp	x20, x19, [sp, #0x10]
00000000000175d8	stp	x29, x30, [sp, #0x20]
00000000000175dc	add	x29, sp, #0x20
00000000000175e0	mov	x19, x2
00000000000175e4	mov	x20, x1
00000000000175e8	mov	x21, x0
00000000000175ec	adr	x8, #0x7cf1d
00000000000175f0	nop
00000000000175f4	ldarb	w8, [x8]
00000000000175f8	tbz	w8, #0x0, 0x17600
00000000000175fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017600	adrp	x0, 99 ; 0x7a000
0000000000017604	add	x0, x0, #0x4e0
0000000000017608	ldr	x8, [x0]
000000000001760c	blr	x8
0000000000017610	ldr	x8, [x0]
0000000000017614	ldr	x8, [x8, #0x118]
0000000000017618	add	x0, x8, #0x70
000000000001761c	mov	w1, #0x28
0000000000017620	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017624	mov	x22, x0
0000000000017628	adr	x8, #0x4c498
000000000001762c	nop
0000000000017630	str	x8, [x22, #0x10]!
0000000000017634	stur	xzr, [x22, #-0x8]
0000000000017638	str	x22, [x19]
000000000001763c	str	x21, [x22, #0x18]
0000000000017640	str	x21, [x22, #0x8]
0000000000017644	mov	w8, #-0x1
0000000000017648	str	w8, [x22, #0x14]
000000000001764c	ldr	x8, [x21]
0000000000017650	and	x8, x8, #0xfffffffffffffffc
0000000000017654	ldr	x8, [x8]
0000000000017658	ldr	x8, [x8, #0x88]
000000000001765c	mov	x0, x21
0000000000017660	blr	x8
0000000000017664	mov	x1, x0
0000000000017668	mov	x0, x20
000000000001766c	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
0000000000017670	str	w20, [x22, #0x10]
0000000000017674	str	x22, [x19]
0000000000017678	mov	x0, x22
000000000001767c	ldp	x29, x30, [sp, #0x20]
0000000000017680	ldp	x20, x19, [sp, #0x10]
0000000000017684	ldp	x22, x21, [sp], #0x30
0000000000017688	ret
_kfun:kotlin.collections.AbstractMutableList#subList(kotlin.Int;kotlin.Int){}kotlin.collections.MutableList<1:0>:
000000000001768c	stp	x24, x23, [sp, #-0x40]!
0000000000017690	stp	x22, x21, [sp, #0x10]
0000000000017694	stp	x20, x19, [sp, #0x20]
0000000000017698	stp	x29, x30, [sp, #0x30]
000000000001769c	add	x29, sp, #0x30
00000000000176a0	mov	x19, x3
00000000000176a4	mov	x20, x2
00000000000176a8	mov	x21, x1
00000000000176ac	mov	x22, x0
00000000000176b0	adr	x8, #0x7ce59
00000000000176b4	nop
00000000000176b8	ldarb	w8, [x8]
00000000000176bc	tbz	w8, #0x0, 0x176c4
00000000000176c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000176c4	adrp	x0, 99 ; 0x7a000
00000000000176c8	add	x0, x0, #0x4e0
00000000000176cc	ldr	x8, [x0]
00000000000176d0	blr	x8
00000000000176d4	ldr	x8, [x0]
00000000000176d8	ldr	x8, [x8, #0x118]
00000000000176dc	add	x0, x8, #0x70
00000000000176e0	mov	w1, #0x28
00000000000176e4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000176e8	mov	x23, x0
00000000000176ec	adr	x8, #0x4c474
00000000000176f0	nop
00000000000176f4	str	x8, [x23, #0x10]!
00000000000176f8	stur	xzr, [x23, #-0x8]
00000000000176fc	str	x23, [x19]
0000000000017700	str	x22, [x23, #0x10]
0000000000017704	str	w21, [x23, #0x18]
0000000000017708	ldr	x8, [x22]
000000000001770c	and	x8, x8, #0xfffffffffffffffc
0000000000017710	ldr	x8, [x8]
0000000000017714	ldr	x8, [x8, #0x88]
0000000000017718	mov	x0, x22
000000000001771c	blr	x8
0000000000017720	mov	x2, x0
0000000000017724	mov	x0, x21
0000000000017728	mov	x1, x20
000000000001772c	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkRangeIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
0000000000017730	ldr	w8, [x23, #0x18]
0000000000017734	sub	w8, w20, w8
0000000000017738	str	w8, [x23, #0x1c]
000000000001773c	str	x23, [x19]
0000000000017740	mov	x0, x23
0000000000017744	ldp	x29, x30, [sp, #0x30]
0000000000017748	ldp	x20, x19, [sp, #0x20]
000000000001774c	ldp	x22, x21, [sp, #0x10]
0000000000017750	ldp	x24, x23, [sp], #0x40
0000000000017754	ret
_kfun:kotlin.collections.AbstractMutableList#removeRange(kotlin.Int;kotlin.Int){}:
0000000000017758	sub	sp, sp, #0x80
000000000001775c	stp	x26, x25, [sp, #0x30]
0000000000017760	stp	x24, x23, [sp, #0x40]
0000000000017764	stp	x22, x21, [sp, #0x50]
0000000000017768	stp	x20, x19, [sp, #0x60]
000000000001776c	stp	x29, x30, [sp, #0x70]
0000000000017770	add	x29, sp, #0x70
0000000000017774	mov	x20, x2
0000000000017778	mov	x21, x1
000000000001777c	mov	x19, x0
0000000000017780	movi.16b	v0, #0x0
0000000000017784	stp	q0, q0, [sp]
0000000000017788	str	xzr, [sp, #0x20]
000000000001778c	mov	x25, sp
0000000000017790	add	x22, x25, #0x18
0000000000017794	adrp	x0, 99 ; 0x7a000
0000000000017798	add	x0, x0, #0x4e0
000000000001779c	ldr	x8, [x0]
00000000000177a0	blr	x8
00000000000177a4	ldr	x23, [x0]
00000000000177a8	ldr	x8, [x23, #0x110]
00000000000177ac	str	x25, [x23, #0x110]
00000000000177b0	mov	x9, #0x500000000
00000000000177b4	stp	x8, x9, [sp, #0x8]
00000000000177b8	adr	x24, #0x7cd51
00000000000177bc	nop
00000000000177c0	ldarb	w8, [x24]
00000000000177c4	tbz	w8, #0x0, 0x177cc
00000000000177c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000177cc	ldr	x8, [x19]
00000000000177d0	and	x8, x8, #0xfffffffffffffffc
00000000000177d4	ldr	x8, [x8]
00000000000177d8	ldr	x8, [x8, #0x120]
00000000000177dc	mov	x0, x19
00000000000177e0	mov	x1, x21
00000000000177e4	mov	x2, x22
00000000000177e8	blr	x8
00000000000177ec	sub	w21, w20, w21
00000000000177f0	cmp	w21, #0x1
00000000000177f4	b.lt	0x179a0
00000000000177f8	mov	x19, x0
00000000000177fc	mov	w22, #0x0
0000000000017800	add	x20, x25, #0x20
0000000000017804	mov	w25, #0x23
0000000000017808	b	0x17830
000000000001780c	and	x9, x9, x25
0000000000017810	add	w22, w22, #0x1
0000000000017814	add	x8, x8, x9, lsl #4
0000000000017818	ldr	x8, [x8, #0x8]
000000000001781c	ldr	x8, [x8, #0x18]
0000000000017820	mov	x0, x19
0000000000017824	blr	x8
0000000000017828	cmp	w22, w21
000000000001782c	b.eq	0x179a0
0000000000017830	ldarb	w8, [x24]
0000000000017834	tbz	w8, #0x0, 0x1783c
0000000000017838	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001783c	ldr	x8, [x19]
0000000000017840	and	x8, x8, #0xfffffffffffffffc
0000000000017844	ldr	x8, [x8]
0000000000017848	ldr	w9, [x8, #0x3c]
000000000001784c	ldr	x8, [x8, #0x40]
0000000000017850	tbnz	w9, #0x1f, 0x1785c
0000000000017854	and	x9, x9, x25
0000000000017858	b	0x178e0
000000000001785c	neg	w10, w9
0000000000017860	mvn	w9, w9
0000000000017864	cmp	w10, #0x9
0000000000017868	b.ge	0x178a0
000000000001786c	cmp	w10, #0x2
0000000000017870	b.lt	0x178d4
0000000000017874	mov	x10, #0x0
0000000000017878	mov	x11, x8
000000000001787c	ldr	w12, [x11]
0000000000017880	cmp	w12, #0x22
0000000000017884	b.gt	0x178dc
0000000000017888	add	x10, x10, #0x1
000000000001788c	add	x11, x11, #0x10
0000000000017890	cmp	x9, x10
0000000000017894	b.ne	0x1787c
0000000000017898	mov	x10, x9
000000000001789c	b	0x178dc
00000000000178a0	mov	w10, #0x0
00000000000178a4	add	w11, w9, w10
00000000000178a8	cmp	w11, #0x0
00000000000178ac	cinc	w11, w11, lt
00000000000178b0	asr	w11, w11, #1
00000000000178b4	sbfiz	x12, x11, #4, #32
00000000000178b8	ldr	w12, [x8, x12]
00000000000178bc	cmp	w12, #0x23
00000000000178c0	csinc	w10, w10, w11, ge
00000000000178c4	csel	w9, w9, w11, lt
00000000000178c8	cmp	w10, w9
00000000000178cc	b.lt	0x178a4
00000000000178d0	b	0x178dc
00000000000178d4	mov	w10, #0x0
00000000000178d8	b	0x178dc
00000000000178dc	sxtw	x9, w10
00000000000178e0	add	x8, x8, x9, lsl #4
00000000000178e4	ldr	x8, [x8, #0x8]
00000000000178e8	ldr	x8, [x8, #0x10]
00000000000178ec	mov	x0, x19
00000000000178f0	mov	x1, x20
00000000000178f4	blr	x8
00000000000178f8	ldr	x8, [x19]
00000000000178fc	and	x8, x8, #0xfffffffffffffffc
0000000000017900	ldr	x8, [x8]
0000000000017904	ldr	w9, [x8, #0x3c]
0000000000017908	ldr	x8, [x8, #0x40]
000000000001790c	tbz	w9, #0x1f, 0x1780c
0000000000017910	neg	w10, w9
0000000000017914	mvn	w9, w9
0000000000017918	cmp	w10, #0x9
000000000001791c	b.ge	0x17958
0000000000017920	cmp	w10, #0x2
0000000000017924	b.lt	0x1798c
0000000000017928	mov	x10, #0x0
000000000001792c	mov	x11, x8
0000000000017930	ldr	w12, [x11]
0000000000017934	cmp	w12, #0x22
0000000000017938	b.gt	0x17998
000000000001793c	add	x10, x10, #0x1
0000000000017940	add	x11, x11, #0x10
0000000000017944	cmp	x9, x10
0000000000017948	b.ne	0x17930
000000000001794c	mov	x10, x9
0000000000017950	sxtw	x9, w10
0000000000017954	b	0x17810
0000000000017958	mov	w10, #0x0
000000000001795c	add	w11, w9, w10
0000000000017960	cmp	w11, #0x0
0000000000017964	cinc	w11, w11, lt
0000000000017968	asr	w11, w11, #1
000000000001796c	sbfiz	x12, x11, #4, #32
0000000000017970	ldr	w12, [x8, x12]
0000000000017974	cmp	w12, #0x23
0000000000017978	csinc	w10, w10, w11, ge
000000000001797c	csel	w9, w9, w11, lt
0000000000017980	cmp	w10, w9
0000000000017984	b.lt	0x1795c
0000000000017988	b	0x17998
000000000001798c	mov	w10, #0x0
0000000000017990	sxtw	x9, w10
0000000000017994	b	0x17810
0000000000017998	sxtw	x9, w10
000000000001799c	b	0x17810
00000000000179a0	ldr	x8, [sp, #0x8]
00000000000179a4	str	x8, [x23, #0x110]
00000000000179a8	ldp	x29, x30, [sp, #0x70]
00000000000179ac	ldp	x20, x19, [sp, #0x60]
00000000000179b0	ldp	x22, x21, [sp, #0x50]
00000000000179b4	ldp	x24, x23, [sp, #0x40]
00000000000179b8	ldp	x26, x25, [sp, #0x30]
00000000000179bc	add	sp, sp, #0x80
00000000000179c0	ret
_kfun:kotlin.collections.AbstractMutableList#equals(kotlin.Any?){}kotlin.Boolean:
00000000000179c4	stp	x20, x19, [sp, #-0x20]!
00000000000179c8	stp	x29, x30, [sp, #0x10]
00000000000179cc	add	x29, sp, #0x10
00000000000179d0	mov	x19, x1
00000000000179d4	mov	x20, x0
00000000000179d8	adr	x8, #0x7cb31
00000000000179dc	nop
00000000000179e0	ldarb	w8, [x8]
00000000000179e4	tbz	w8, #0x0, 0x179ec
00000000000179e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000179ec	cmp	x19, x20
00000000000179f0	b.eq	0x17a2c
00000000000179f4	cbz	x19, 0x17ae0
00000000000179f8	ldr	x8, [x19]
00000000000179fc	and	x8, x8, #0xfffffffffffffffc
0000000000017a00	ldr	x8, [x8]
0000000000017a04	ldr	w9, [x8, #0x3c]
0000000000017a08	ldr	x8, [x8, #0x40]
0000000000017a0c	tbnz	w9, #0x1f, 0x17a3c
0000000000017a10	mov	w10, #0x2b
0000000000017a14	and	x9, x9, x10
0000000000017a18	lsl	x9, x9, #4
0000000000017a1c	ldr	w8, [x8, x9]
0000000000017a20	cmp	w8, #0x2b
0000000000017a24	b.ne	0x17ae0
0000000000017a28	b	0x17b04
0000000000017a2c	mov	w0, #0x1
0000000000017a30	ldp	x29, x30, [sp, #0x10]
0000000000017a34	ldp	x20, x19, [sp], #0x20
0000000000017a38	ret
0000000000017a3c	neg	w10, w9
0000000000017a40	mvn	w9, w9
0000000000017a44	cmp	w10, #0x9
0000000000017a48	b.ge	0x17a94
0000000000017a4c	cmp	w10, #0x2
0000000000017a50	b.lt	0x17ac8
0000000000017a54	mov	x10, #0x0
0000000000017a58	mov	x11, x8
0000000000017a5c	ldr	w12, [x11]
0000000000017a60	cmp	w12, #0x2a
0000000000017a64	b.gt	0x17af0
0000000000017a68	add	x10, x10, #0x1
0000000000017a6c	add	x11, x11, #0x10
0000000000017a70	cmp	x9, x10
0000000000017a74	b.ne	0x17a5c
0000000000017a78	mov	x10, x9
0000000000017a7c	sxtw	x9, w10
0000000000017a80	lsl	x9, x9, #4
0000000000017a84	ldr	w8, [x8, x9]
0000000000017a88	cmp	w8, #0x2b
0000000000017a8c	b.ne	0x17ae0
0000000000017a90	b	0x17b04
0000000000017a94	mov	w10, #0x0
0000000000017a98	add	w11, w9, w10
0000000000017a9c	cmp	w11, #0x0
0000000000017aa0	cinc	w11, w11, lt
0000000000017aa4	asr	w11, w11, #1
0000000000017aa8	sbfiz	x12, x11, #4, #32
0000000000017aac	ldr	w12, [x8, x12]
0000000000017ab0	cmp	w12, #0x2b
0000000000017ab4	csinc	w10, w10, w11, ge
0000000000017ab8	csel	w9, w9, w11, lt
0000000000017abc	cmp	w10, w9
0000000000017ac0	b.lt	0x17a98
0000000000017ac4	b	0x17af0
0000000000017ac8	mov	w10, #0x0
0000000000017acc	sxtw	x9, w10
0000000000017ad0	lsl	x9, x9, #4
0000000000017ad4	ldr	w8, [x8, x9]
0000000000017ad8	cmp	w8, #0x2b
0000000000017adc	b.eq	0x17b04
0000000000017ae0	mov	w0, #0x0
0000000000017ae4	ldp	x29, x30, [sp, #0x10]
0000000000017ae8	ldp	x20, x19, [sp], #0x20
0000000000017aec	ret
0000000000017af0	sxtw	x9, w10
0000000000017af4	lsl	x9, x9, #4
0000000000017af8	ldr	w8, [x8, x9]
0000000000017afc	cmp	w8, #0x2b
0000000000017b00	b.ne	0x17ae0
0000000000017b04	mov	x0, x20
0000000000017b08	mov	x1, x19
0000000000017b0c	ldp	x29, x30, [sp, #0x10]
0000000000017b10	ldp	x20, x19, [sp], #0x20
0000000000017b14	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedEquals(kotlin.collections.Collection<*>;kotlin.collections.Collection<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractMutableList#hashCode(){}kotlin.Int:
0000000000017b18	stp	x20, x19, [sp, #-0x20]!
0000000000017b1c	stp	x29, x30, [sp, #0x10]
0000000000017b20	add	x29, sp, #0x10
0000000000017b24	mov	x19, x0
0000000000017b28	adr	x8, #0x7c9e1
0000000000017b2c	nop
0000000000017b30	ldarb	w8, [x8]
0000000000017b34	tbz	w8, #0x0, 0x17b3c
0000000000017b38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017b3c	mov	x0, x19
0000000000017b40	ldp	x29, x30, [sp, #0x10]
0000000000017b44	ldp	x20, x19, [sp], #0x20
0000000000017b48	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections.AbstractMutableList.IteratorImpl.hasNext#internal:
0000000000017b4c	stp	x20, x19, [sp, #-0x20]!
0000000000017b50	stp	x29, x30, [sp, #0x10]
0000000000017b54	add	x29, sp, #0x10
0000000000017b58	mov	x19, x0
0000000000017b5c	adr	x8, #0x7c9ad
0000000000017b60	nop
0000000000017b64	ldarb	w8, [x8]
0000000000017b68	tbz	w8, #0x0, 0x17b70
0000000000017b6c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017b70	ldr	w20, [x19, #0x10]
0000000000017b74	ldr	x0, [x19, #0x8]
0000000000017b78	ldr	x8, [x0]
0000000000017b7c	and	x8, x8, #0xfffffffffffffffc
0000000000017b80	ldr	x8, [x8]
0000000000017b84	ldr	x8, [x8, #0x88]
0000000000017b88	blr	x8
0000000000017b8c	cmp	w20, w0
0000000000017b90	cset	w0, lt
0000000000017b94	ldp	x29, x30, [sp, #0x10]
0000000000017b98	ldp	x20, x19, [sp], #0x20
0000000000017b9c	ret
_kfun:kotlin.collections.AbstractMutableList.IteratorImpl.next#internal:
0000000000017ba0	sub	sp, sp, #0x50
0000000000017ba4	stp	x22, x21, [sp, #0x20]
0000000000017ba8	stp	x20, x19, [sp, #0x30]
0000000000017bac	stp	x29, x30, [sp, #0x40]
0000000000017bb0	add	x29, sp, #0x40
0000000000017bb4	mov	x19, x1
0000000000017bb8	mov	x20, x0
0000000000017bbc	movi.16b	v0, #0x0
0000000000017bc0	stp	q0, q0, [sp]
0000000000017bc4	adrp	x0, 99 ; 0x7a000
0000000000017bc8	add	x0, x0, #0x4e0
0000000000017bcc	ldr	x8, [x0]
0000000000017bd0	blr	x8
0000000000017bd4	ldr	x21, [x0]
0000000000017bd8	ldr	x8, [x21, #0x110]
0000000000017bdc	mov	x9, sp
0000000000017be0	str	x9, [x21, #0x110]
0000000000017be4	mov	x9, #0x400000000
0000000000017be8	stp	x8, x9, [sp, #0x8]
0000000000017bec	adr	x8, #0x7c91d
0000000000017bf0	nop
0000000000017bf4	ldarb	w8, [x8]
0000000000017bf8	tbz	w8, #0x0, 0x17c00
0000000000017bfc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017c00	ldr	x8, [x20]
0000000000017c04	and	x8, x8, #0xfffffffffffffffc
0000000000017c08	ldr	x8, [x8]
0000000000017c0c	ldr	x8, [x8, #0x88]
0000000000017c10	mov	x0, x20
0000000000017c14	blr	x8
0000000000017c18	tbz	w0, #0x0, 0x17c64
0000000000017c1c	ldr	w1, [x20, #0x10]
0000000000017c20	add	w8, w1, #0x1
0000000000017c24	stp	w8, w1, [x20, #0x10]
0000000000017c28	ldr	x0, [x20, #0x8]
0000000000017c2c	ldr	x8, [x0]
0000000000017c30	and	x8, x8, #0xfffffffffffffffc
0000000000017c34	ldr	x8, [x8]
0000000000017c38	ldr	x8, [x8, #0x100]
0000000000017c3c	mov	x2, x19
0000000000017c40	blr	x8
0000000000017c44	str	x0, [x19]
0000000000017c48	ldr	x8, [sp, #0x8]
0000000000017c4c	str	x8, [x21, #0x110]
0000000000017c50	ldp	x29, x30, [sp, #0x40]
0000000000017c54	ldp	x20, x19, [sp, #0x30]
0000000000017c58	ldp	x22, x21, [sp, #0x20]
0000000000017c5c	add	sp, sp, #0x50
0000000000017c60	ret
0000000000017c64	ldr	x8, [x21, #0x118]
0000000000017c68	add	x0, x8, #0x70
0000000000017c6c	mov	w1, #0x38
0000000000017c70	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017c74	mov	x19, x0
0000000000017c78	adr	x8, #0x49718
0000000000017c7c	nop
0000000000017c80	str	x8, [x19, #0x10]!
0000000000017c84	stur	xzr, [x19, #-0x8]
0000000000017c88	str	x19, [sp, #0x18]
0000000000017c8c	mov	x0, x19
0000000000017c90	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
0000000000017c94	mov	x0, x19
0000000000017c98	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.IteratorImpl.remove#internal:
0000000000017c9c	sub	sp, sp, #0x50
0000000000017ca0	stp	x20, x19, [sp, #0x30]
0000000000017ca4	stp	x29, x30, [sp, #0x40]
0000000000017ca8	add	x29, sp, #0x40
0000000000017cac	mov	x19, x0
0000000000017cb0	movi.16b	v0, #0x0
0000000000017cb4	stp	q0, q0, [sp]
0000000000017cb8	str	xzr, [sp, #0x20]
0000000000017cbc	adrp	x0, 99 ; 0x7a000
0000000000017cc0	add	x0, x0, #0x4e0
0000000000017cc4	ldr	x8, [x0]
0000000000017cc8	blr	x8
0000000000017ccc	ldr	x20, [x0]
0000000000017cd0	ldr	x8, [x20, #0x110]
0000000000017cd4	mov	x9, sp
0000000000017cd8	str	x9, [x20, #0x110]
0000000000017cdc	mov	x9, #0x500000000
0000000000017ce0	stp	x8, x9, [sp, #0x8]
0000000000017ce4	adr	x8, #0x7c825
0000000000017ce8	nop
0000000000017cec	ldarb	w8, [x8]
0000000000017cf0	tbz	w8, #0x0, 0x17cf8
0000000000017cf4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017cf8	ldr	w1, [x19, #0x14]
0000000000017cfc	cmn	w1, #0x1
0000000000017d00	b.eq	0x17d48
0000000000017d04	mov	x8, sp
0000000000017d08	add	x2, x8, #0x20
0000000000017d0c	ldr	x0, [x19, #0x8]
0000000000017d10	ldr	x8, [x0]
0000000000017d14	and	x8, x8, #0xfffffffffffffffc
0000000000017d18	ldr	x8, [x8]
0000000000017d1c	ldr	x8, [x8, #0x128]
0000000000017d20	blr	x8
0000000000017d24	ldr	w8, [x19, #0x14]
0000000000017d28	mov	w9, #-0x1
0000000000017d2c	stp	w8, w9, [x19, #0x10]
0000000000017d30	ldr	x8, [sp, #0x8]
0000000000017d34	str	x8, [x20, #0x110]
0000000000017d38	ldp	x29, x30, [sp, #0x40]
0000000000017d3c	ldp	x20, x19, [sp, #0x30]
0000000000017d40	add	sp, sp, #0x50
0000000000017d44	ret
0000000000017d48	ldr	x8, [x20, #0x118]
0000000000017d4c	add	x0, x8, #0x70
0000000000017d50	mov	w1, #0x38
0000000000017d54	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017d58	mov	x19, x0
0000000000017d5c	adr	x8, #0x498b4
0000000000017d60	nop
0000000000017d64	str	x8, [x19, #0x10]!
0000000000017d68	stur	xzr, [x19, #-0x8]
0000000000017d6c	str	x19, [sp, #0x18]
0000000000017d70	adr	x1, #0x57c10
0000000000017d74	nop
0000000000017d78	mov	x0, x19
0000000000017d7c	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000017d80	mov	x0, x19
0000000000017d84	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.hasPrevious#internal:
0000000000017d88	stp	x20, x19, [sp, #-0x20]!
0000000000017d8c	stp	x29, x30, [sp, #0x10]
0000000000017d90	add	x29, sp, #0x10
0000000000017d94	mov	x19, x0
0000000000017d98	adr	x8, #0x7c771
0000000000017d9c	nop
0000000000017da0	ldarb	w8, [x8]
0000000000017da4	tbz	w8, #0x0, 0x17dac
0000000000017da8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017dac	ldr	w8, [x19, #0x10]
0000000000017db0	cmp	w8, #0x0
0000000000017db4	cset	w0, gt
0000000000017db8	ldp	x29, x30, [sp, #0x10]
0000000000017dbc	ldp	x20, x19, [sp], #0x20
0000000000017dc0	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.nextIndex#internal:
0000000000017dc4	stp	x20, x19, [sp, #-0x20]!
0000000000017dc8	stp	x29, x30, [sp, #0x10]
0000000000017dcc	add	x29, sp, #0x10
0000000000017dd0	mov	x19, x0
0000000000017dd4	adr	x8, #0x7c735
0000000000017dd8	nop
0000000000017ddc	ldarb	w8, [x8]
0000000000017de0	tbz	w8, #0x0, 0x17de8
0000000000017de4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017de8	ldr	w0, [x19, #0x10]
0000000000017dec	ldp	x29, x30, [sp, #0x10]
0000000000017df0	ldp	x20, x19, [sp], #0x20
0000000000017df4	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.previous#internal:
0000000000017df8	sub	sp, sp, #0x50
0000000000017dfc	stp	x22, x21, [sp, #0x20]
0000000000017e00	stp	x20, x19, [sp, #0x30]
0000000000017e04	stp	x29, x30, [sp, #0x40]
0000000000017e08	add	x29, sp, #0x40
0000000000017e0c	mov	x19, x1
0000000000017e10	mov	x20, x0
0000000000017e14	movi.16b	v0, #0x0
0000000000017e18	stp	q0, q0, [sp]
0000000000017e1c	adrp	x0, 99 ; 0x7a000
0000000000017e20	add	x0, x0, #0x4e0
0000000000017e24	ldr	x8, [x0]
0000000000017e28	blr	x8
0000000000017e2c	ldr	x21, [x0]
0000000000017e30	ldr	x8, [x21, #0x110]
0000000000017e34	mov	x9, sp
0000000000017e38	str	x9, [x21, #0x110]
0000000000017e3c	mov	x9, #0x400000000
0000000000017e40	stp	x8, x9, [sp, #0x8]
0000000000017e44	adr	x8, #0x7c6c5
0000000000017e48	nop
0000000000017e4c	ldarb	w8, [x8]
0000000000017e50	tbz	w8, #0x0, 0x17e58
0000000000017e54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017e58	ldr	w8, [x20, #0x10]
0000000000017e5c	cmp	w8, #0x0
0000000000017e60	b.le	0x17ea8
0000000000017e64	sub	w1, w8, #0x1
0000000000017e68	stp	w1, w1, [x20, #0x10]
0000000000017e6c	ldr	x0, [x20, #0x18]
0000000000017e70	ldr	x8, [x0]
0000000000017e74	and	x8, x8, #0xfffffffffffffffc
0000000000017e78	ldr	x8, [x8]
0000000000017e7c	ldr	x8, [x8, #0x100]
0000000000017e80	mov	x2, x19
0000000000017e84	blr	x8
0000000000017e88	str	x0, [x19]
0000000000017e8c	ldr	x8, [sp, #0x8]
0000000000017e90	str	x8, [x21, #0x110]
0000000000017e94	ldp	x29, x30, [sp, #0x40]
0000000000017e98	ldp	x20, x19, [sp, #0x30]
0000000000017e9c	ldp	x22, x21, [sp, #0x20]
0000000000017ea0	add	sp, sp, #0x50
0000000000017ea4	ret
0000000000017ea8	ldr	x8, [x21, #0x118]
0000000000017eac	add	x0, x8, #0x70
0000000000017eb0	mov	w1, #0x38
0000000000017eb4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000017eb8	mov	x19, x0
0000000000017ebc	adr	x8, #0x494d4
0000000000017ec0	nop
0000000000017ec4	str	x8, [x19, #0x10]!
0000000000017ec8	stur	xzr, [x19, #-0x8]
0000000000017ecc	str	x19, [sp, #0x18]
0000000000017ed0	mov	x0, x19
0000000000017ed4	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
0000000000017ed8	mov	x0, x19
0000000000017edc	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.previousIndex#internal:
0000000000017ee0	stp	x20, x19, [sp, #-0x20]!
0000000000017ee4	stp	x29, x30, [sp, #0x10]
0000000000017ee8	add	x29, sp, #0x10
0000000000017eec	mov	x19, x0
0000000000017ef0	adr	x8, #0x7c619
0000000000017ef4	nop
0000000000017ef8	ldarb	w8, [x8]
0000000000017efc	tbz	w8, #0x0, 0x17f04
0000000000017f00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017f04	ldr	w8, [x19, #0x10]
0000000000017f08	sub	w0, w8, #0x1
0000000000017f0c	ldp	x29, x30, [sp, #0x10]
0000000000017f10	ldp	x20, x19, [sp], #0x20
0000000000017f14	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.add#internal:
0000000000017f18	stp	x20, x19, [sp, #-0x20]!
0000000000017f1c	stp	x29, x30, [sp, #0x10]
0000000000017f20	add	x29, sp, #0x10
0000000000017f24	mov	x20, x1
0000000000017f28	mov	x19, x0
0000000000017f2c	adr	x8, #0x7c5dd
0000000000017f30	nop
0000000000017f34	ldarb	w8, [x8]
0000000000017f38	tbz	w8, #0x0, 0x17f40
0000000000017f3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017f40	ldr	x0, [x19, #0x18]
0000000000017f44	ldr	w1, [x19, #0x10]
0000000000017f48	ldr	x8, [x0]
0000000000017f4c	and	x8, x8, #0xfffffffffffffffc
0000000000017f50	ldr	x8, [x8]
0000000000017f54	ldr	x8, [x8, #0xf0]
0000000000017f58	mov	x2, x20
0000000000017f5c	blr	x8
0000000000017f60	ldr	w8, [x19, #0x10]
0000000000017f64	add	w8, w8, #0x1
0000000000017f68	mov	w9, #-0x1
0000000000017f6c	stp	w8, w9, [x19, #0x10]
0000000000017f70	ldp	x29, x30, [sp, #0x10]
0000000000017f74	ldp	x20, x19, [sp], #0x20
0000000000017f78	ret
_kfun:kotlin.collections.AbstractMutableList.ListIteratorImpl.set#internal:
0000000000017f7c	sub	sp, sp, #0x60
0000000000017f80	stp	x22, x21, [sp, #0x30]
0000000000017f84	stp	x20, x19, [sp, #0x40]
0000000000017f88	stp	x29, x30, [sp, #0x50]
0000000000017f8c	add	x29, sp, #0x50
0000000000017f90	mov	x19, x1
0000000000017f94	mov	x20, x0
0000000000017f98	movi.16b	v0, #0x0
0000000000017f9c	stp	q0, q0, [sp]
0000000000017fa0	str	xzr, [sp, #0x20]
0000000000017fa4	adrp	x0, 99 ; 0x7a000
0000000000017fa8	add	x0, x0, #0x4e0
0000000000017fac	ldr	x8, [x0]
0000000000017fb0	blr	x8
0000000000017fb4	ldr	x21, [x0]
0000000000017fb8	ldr	x8, [x21, #0x110]
0000000000017fbc	mov	x9, sp
0000000000017fc0	str	x9, [x21, #0x110]
0000000000017fc4	mov	x9, #0x500000000
0000000000017fc8	stp	x8, x9, [sp, #0x8]
0000000000017fcc	adr	x8, #0x7c53d
0000000000017fd0	nop
0000000000017fd4	ldarb	w8, [x8]
0000000000017fd8	tbz	w8, #0x0, 0x17fe0
0000000000017fdc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000017fe0	ldr	w1, [x20, #0x14]
0000000000017fe4	cmn	w1, #0x1
0000000000017fe8	b.eq	0x1802c
0000000000017fec	mov	x8, sp
0000000000017ff0	add	x3, x8, #0x20
0000000000017ff4	ldr	x0, [x20, #0x18]
0000000000017ff8	ldr	x8, [x0]
0000000000017ffc	and	x8, x8, #0xfffffffffffffffc
0000000000018000	ldr	x8, [x8]
0000000000018004	ldr	x8, [x8, #0x138]
0000000000018008	mov	x2, x19
000000000001800c	blr	x8
0000000000018010	ldr	x8, [sp, #0x8]
0000000000018014	str	x8, [x21, #0x110]
0000000000018018	ldp	x29, x30, [sp, #0x50]
000000000001801c	ldp	x20, x19, [sp, #0x40]
0000000000018020	ldp	x22, x21, [sp, #0x30]
0000000000018024	add	sp, sp, #0x60
0000000000018028	ret
000000000001802c	ldr	x8, [x21, #0x118]
0000000000018030	add	x0, x8, #0x70
0000000000018034	mov	w1, #0x38
0000000000018038	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001803c	mov	x19, x0
0000000000018040	adr	x8, #0x495d0
0000000000018044	nop
0000000000018048	str	x8, [x19, #0x10]!
000000000001804c	stur	xzr, [x19, #-0x8]
0000000000018050	str	x19, [sp, #0x18]
0000000000018054	adr	x1, #0x579cc
0000000000018058	nop
000000000001805c	mov	x0, x19
0000000000018060	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000018064	mov	x0, x19
0000000000018068	bl	_ThrowException
_kfun:kotlin.collections.AbstractMutableList.SubList.add#internal:
000000000001806c	stp	x22, x21, [sp, #-0x30]!
0000000000018070	stp	x20, x19, [sp, #0x10]
0000000000018074	stp	x29, x30, [sp, #0x20]
0000000000018078	add	x29, sp, #0x20
000000000001807c	mov	x20, x2
0000000000018080	mov	x21, x1
0000000000018084	mov	x19, x0
0000000000018088	adr	x8, #0x7c481
000000000001808c	nop
0000000000018090	ldarb	w8, [x8]
0000000000018094	tbz	w8, #0x0, 0x1809c
0000000000018098	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001809c	ldr	w1, [x19, #0x1c]
00000000000180a0	mov	x0, x21
00000000000180a4	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
00000000000180a8	ldr	x0, [x19, #0x10]
00000000000180ac	ldr	w8, [x19, #0x18]
00000000000180b0	add	w1, w8, w21
00000000000180b4	ldr	x8, [x0]
00000000000180b8	and	x8, x8, #0xfffffffffffffffc
00000000000180bc	ldr	x8, [x8]
00000000000180c0	ldr	x8, [x8, #0xf0]
00000000000180c4	mov	x2, x20
00000000000180c8	blr	x8
00000000000180cc	ldr	w8, [x19, #0x1c]
00000000000180d0	add	w8, w8, #0x1
00000000000180d4	str	w8, [x19, #0x1c]
00000000000180d8	ldp	x29, x30, [sp, #0x20]
00000000000180dc	ldp	x20, x19, [sp, #0x10]
00000000000180e0	ldp	x22, x21, [sp], #0x30
00000000000180e4	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.get#internal:
00000000000180e8	stp	x22, x21, [sp, #-0x30]!
00000000000180ec	stp	x20, x19, [sp, #0x10]
00000000000180f0	stp	x29, x30, [sp, #0x20]
00000000000180f4	add	x29, sp, #0x20
00000000000180f8	mov	x19, x2
00000000000180fc	mov	x20, x1
0000000000018100	mov	x21, x0
0000000000018104	adr	x8, #0x7c405
0000000000018108	nop
000000000001810c	ldarb	w8, [x8]
0000000000018110	tbz	w8, #0x0, 0x18118
0000000000018114	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018118	ldr	w1, [x21, #0x1c]
000000000001811c	mov	x0, x20
0000000000018120	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
0000000000018124	ldr	x0, [x21, #0x10]
0000000000018128	ldr	w8, [x21, #0x18]
000000000001812c	add	w1, w8, w20
0000000000018130	ldr	x8, [x0]
0000000000018134	and	x8, x8, #0xfffffffffffffffc
0000000000018138	ldr	x8, [x8]
000000000001813c	ldr	x8, [x8, #0x100]
0000000000018140	mov	x2, x19
0000000000018144	blr	x8
0000000000018148	str	x0, [x19]
000000000001814c	ldp	x29, x30, [sp, #0x20]
0000000000018150	ldp	x20, x19, [sp, #0x10]
0000000000018154	ldp	x22, x21, [sp], #0x30
0000000000018158	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.removeAt#internal:
000000000001815c	sub	sp, sp, #0x60
0000000000018160	stp	x24, x23, [sp, #0x20]
0000000000018164	stp	x22, x21, [sp, #0x30]
0000000000018168	stp	x20, x19, [sp, #0x40]
000000000001816c	stp	x29, x30, [sp, #0x50]
0000000000018170	add	x29, sp, #0x50
0000000000018174	mov	x19, x2
0000000000018178	mov	x22, x1
000000000001817c	mov	x20, x0
0000000000018180	movi.16b	v0, #0x0
0000000000018184	stp	q0, q0, [sp]
0000000000018188	mov	x8, sp
000000000001818c	add	x21, x8, #0x18
0000000000018190	adrp	x0, 98 ; 0x7a000
0000000000018194	add	x0, x0, #0x4e0
0000000000018198	ldr	x9, [x0]
000000000001819c	blr	x9
00000000000181a0	ldr	x23, [x0]
00000000000181a4	ldr	x9, [x23, #0x110]
00000000000181a8	str	x8, [x23, #0x110]
00000000000181ac	mov	x8, #0x400000000
00000000000181b0	stp	x9, x8, [sp, #0x8]
00000000000181b4	adr	x8, #0x7c355
00000000000181b8	nop
00000000000181bc	ldarb	w8, [x8]
00000000000181c0	tbz	w8, #0x0, 0x181c8
00000000000181c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000181c8	ldr	w1, [x20, #0x1c]
00000000000181cc	mov	x0, x22
00000000000181d0	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
00000000000181d4	ldr	x0, [x20, #0x10]
00000000000181d8	ldr	w8, [x20, #0x18]
00000000000181dc	add	w1, w8, w22
00000000000181e0	ldr	x8, [x0]
00000000000181e4	and	x8, x8, #0xfffffffffffffffc
00000000000181e8	ldr	x8, [x8]
00000000000181ec	ldr	x8, [x8, #0x128]
00000000000181f0	mov	x2, x21
00000000000181f4	blr	x8
00000000000181f8	ldr	w8, [x20, #0x1c]
00000000000181fc	sub	w8, w8, #0x1
0000000000018200	str	w8, [x20, #0x1c]
0000000000018204	str	x0, [x19]
0000000000018208	ldr	x8, [sp, #0x8]
000000000001820c	str	x8, [x23, #0x110]
0000000000018210	ldp	x29, x30, [sp, #0x50]
0000000000018214	ldp	x20, x19, [sp, #0x40]
0000000000018218	ldp	x22, x21, [sp, #0x30]
000000000001821c	ldp	x24, x23, [sp, #0x20]
0000000000018220	add	sp, sp, #0x60
0000000000018224	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.set#internal:
0000000000018228	stp	x22, x21, [sp, #-0x30]!
000000000001822c	stp	x20, x19, [sp, #0x10]
0000000000018230	stp	x29, x30, [sp, #0x20]
0000000000018234	add	x29, sp, #0x20
0000000000018238	mov	x19, x3
000000000001823c	mov	x20, x2
0000000000018240	mov	x21, x1
0000000000018244	mov	x22, x0
0000000000018248	adr	x8, #0x7c2c1
000000000001824c	nop
0000000000018250	ldarb	w8, [x8]
0000000000018254	tbz	w8, #0x0, 0x1825c
0000000000018258	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001825c	ldr	w1, [x22, #0x1c]
0000000000018260	mov	x0, x21
0000000000018264	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
0000000000018268	ldr	x0, [x22, #0x10]
000000000001826c	ldr	w8, [x22, #0x18]
0000000000018270	add	w1, w8, w21
0000000000018274	ldr	x8, [x0]
0000000000018278	and	x8, x8, #0xfffffffffffffffc
000000000001827c	ldr	x8, [x8]
0000000000018280	ldr	x8, [x8, #0x138]
0000000000018284	mov	x2, x20
0000000000018288	mov	x3, x19
000000000001828c	blr	x8
0000000000018290	str	x0, [x19]
0000000000018294	ldp	x29, x30, [sp, #0x20]
0000000000018298	ldp	x20, x19, [sp, #0x10]
000000000001829c	ldp	x22, x21, [sp], #0x30
00000000000182a0	ret
_kfun:kotlin.collections.AbstractMutableList.SubList.<get-size>#internal:
00000000000182a4	stp	x20, x19, [sp, #-0x20]!
00000000000182a8	stp	x29, x30, [sp, #0x10]
00000000000182ac	add	x29, sp, #0x10
00000000000182b0	mov	x19, x0
00000000000182b4	adr	x8, #0x7c255
00000000000182b8	nop
00000000000182bc	ldarb	w8, [x8]
00000000000182c0	tbz	w8, #0x0, 0x182c8
00000000000182c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000182c8	ldr	w0, [x19, #0x1c]
00000000000182cc	ldp	x29, x30, [sp, #0x10]
00000000000182d0	ldp	x20, x19, [sp], #0x20
00000000000182d4	ret
_kfun:kotlin.collections.AbstractMutableList.$removeAll$lambda$0$FUNCTION_REFERENCE$17.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
00000000000182d8	stp	x22, x21, [sp, #-0x30]!
00000000000182dc	stp	x20, x19, [sp, #0x10]
00000000000182e0	stp	x29, x30, [sp, #0x20]
00000000000182e4	add	x29, sp, #0x20
00000000000182e8	mov	x19, x2
00000000000182ec	mov	x20, x1
00000000000182f0	mov	x21, x0
00000000000182f4	adr	x8, #0x7c215
00000000000182f8	nop
00000000000182fc	ldarb	w8, [x8]
0000000000018300	tbz	w8, #0x0, 0x18308
0000000000018304	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018308	ldr	x0, [x21, #0x8]
000000000001830c	ldr	x8, [x0]
0000000000018310	and	x8, x8, #0xfffffffffffffffc
0000000000018314	ldr	x8, [x8]
0000000000018318	ldr	w9, [x8, #0x3c]
000000000001831c	ldr	x8, [x8, #0x40]
0000000000018320	tbnz	w9, #0x1f, 0x18330
0000000000018324	mov	w10, #0x12
0000000000018328	and	x9, x9, x10
000000000001832c	b	0x183b4
0000000000018330	neg	w10, w9
0000000000018334	mvn	w9, w9
0000000000018338	cmp	w10, #0x9
000000000001833c	b.ge	0x18374
0000000000018340	cmp	w10, #0x2
0000000000018344	b.lt	0x183a8
0000000000018348	mov	x10, #0x0
000000000001834c	mov	x11, x8
0000000000018350	ldr	w12, [x11]
0000000000018354	cmp	w12, #0x11
0000000000018358	b.gt	0x183b0
000000000001835c	add	x10, x10, #0x1
0000000000018360	add	x11, x11, #0x10
0000000000018364	cmp	x9, x10
0000000000018368	b.ne	0x18350
000000000001836c	mov	x10, x9
0000000000018370	b	0x183b0
0000000000018374	mov	w10, #0x0
0000000000018378	add	w11, w9, w10
000000000001837c	cmp	w11, #0x0
0000000000018380	cinc	w11, w11, lt
0000000000018384	asr	w11, w11, #1
0000000000018388	sbfiz	x12, x11, #4, #32
000000000001838c	ldr	w12, [x8, x12]
0000000000018390	cmp	w12, #0x12
0000000000018394	csinc	w10, w10, w11, ge
0000000000018398	csel	w9, w9, w11, lt
000000000001839c	cmp	w10, w9
00000000000183a0	b.lt	0x18378
00000000000183a4	b	0x183b0
00000000000183a8	mov	w10, #0x0
00000000000183ac	b	0x183b0
00000000000183b0	sxtw	x9, w10
00000000000183b4	add	x8, x8, x9, lsl #4
00000000000183b8	ldr	x8, [x8, #0x8]
00000000000183bc	ldr	x8, [x8, #0x8]
00000000000183c0	mov	x1, x20
00000000000183c4	blr	x8
00000000000183c8	mov	x1, x19
00000000000183cc	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
00000000000183d0	str	x0, [x19]
00000000000183d4	ldp	x29, x30, [sp, #0x20]
00000000000183d8	ldp	x20, x19, [sp, #0x10]
00000000000183dc	ldp	x22, x21, [sp], #0x30
00000000000183e0	ret
_kfun:kotlin.collections.AbstractMutableList.$retainAll$lambda$1$FUNCTION_REFERENCE$18.$<bridge-BNNN>invoke(2:0){}kotlin.Boolean#internal:
00000000000183e4	stp	x22, x21, [sp, #-0x30]!
00000000000183e8	stp	x20, x19, [sp, #0x10]
00000000000183ec	stp	x29, x30, [sp, #0x20]
00000000000183f0	add	x29, sp, #0x20
00000000000183f4	mov	x19, x2
00000000000183f8	mov	x20, x1
00000000000183fc	mov	x21, x0
0000000000018400	adr	x8, #0x7c109
0000000000018404	nop
0000000000018408	ldarb	w8, [x8]
000000000001840c	tbz	w8, #0x0, 0x18414
0000000000018410	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018414	ldr	x0, [x21, #0x8]
0000000000018418	ldr	x8, [x0]
000000000001841c	and	x8, x8, #0xfffffffffffffffc
0000000000018420	ldr	x8, [x8]
0000000000018424	ldr	w9, [x8, #0x3c]
0000000000018428	ldr	x8, [x8, #0x40]
000000000001842c	tbnz	w9, #0x1f, 0x1843c
0000000000018430	mov	w10, #0x12
0000000000018434	and	x9, x9, x10
0000000000018438	b	0x184c0
000000000001843c	neg	w10, w9
0000000000018440	mvn	w9, w9
0000000000018444	cmp	w10, #0x9
0000000000018448	b.ge	0x18480
000000000001844c	cmp	w10, #0x2
0000000000018450	b.lt	0x184b4
0000000000018454	mov	x10, #0x0
0000000000018458	mov	x11, x8
000000000001845c	ldr	w12, [x11]
0000000000018460	cmp	w12, #0x11
0000000000018464	b.gt	0x184bc
0000000000018468	add	x10, x10, #0x1
000000000001846c	add	x11, x11, #0x10
0000000000018470	cmp	x9, x10
0000000000018474	b.ne	0x1845c
0000000000018478	mov	x10, x9
000000000001847c	b	0x184bc
0000000000018480	mov	w10, #0x0
0000000000018484	add	w11, w9, w10
0000000000018488	cmp	w11, #0x0
000000000001848c	cinc	w11, w11, lt
0000000000018490	asr	w11, w11, #1
0000000000018494	sbfiz	x12, x11, #4, #32
0000000000018498	ldr	w12, [x8, x12]
000000000001849c	cmp	w12, #0x12
00000000000184a0	csinc	w10, w10, w11, ge
00000000000184a4	csel	w9, w9, w11, lt
00000000000184a8	cmp	w10, w9
00000000000184ac	b.lt	0x18484
00000000000184b0	b	0x184bc
00000000000184b4	mov	w10, #0x0
00000000000184b8	b	0x184bc
00000000000184bc	sxtw	x9, w10
00000000000184c0	add	x8, x8, x9, lsl #4
00000000000184c4	ldr	x8, [x8, #0x8]
00000000000184c8	ldr	x8, [x8, #0x8]
00000000000184cc	mov	x1, x20
00000000000184d0	blr	x8
00000000000184d4	eor	w0, w0, #0x1
00000000000184d8	mov	x1, x19
00000000000184dc	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
00000000000184e0	str	x0, [x19]
00000000000184e4	ldp	x29, x30, [sp, #0x20]
00000000000184e8	ldp	x20, x19, [sp, #0x10]
00000000000184ec	ldp	x22, x21, [sp], #0x30
00000000000184f0	ret
_kfun:kotlin.collections.AbstractMutableSet#equals(kotlin.Any?){}kotlin.Boolean:
00000000000184f4	stp	x20, x19, [sp, #-0x20]!
00000000000184f8	stp	x29, x30, [sp, #0x10]
00000000000184fc	add	x29, sp, #0x10
0000000000018500	mov	x19, x1
0000000000018504	mov	x20, x0
0000000000018508	adr	x8, #0x7c001
000000000001850c	nop
0000000000018510	ldarb	w8, [x8]
0000000000018514	tbz	w8, #0x0, 0x1851c
0000000000018518	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001851c	cmp	x19, x20
0000000000018520	b.eq	0x18558
0000000000018524	cbz	x19, 0x1860c
0000000000018528	ldr	x8, [x19]
000000000001852c	and	x8, x8, #0xfffffffffffffffc
0000000000018530	ldr	x8, [x8]
0000000000018534	ldr	w9, [x8, #0x3c]
0000000000018538	ldr	x8, [x8, #0x40]
000000000001853c	tbnz	w9, #0x1f, 0x18568
0000000000018540	and	x9, x9, #0x1e
0000000000018544	lsl	x9, x9, #4
0000000000018548	ldr	w8, [x8, x9]
000000000001854c	cmp	w8, #0x1e
0000000000018550	b.ne	0x1860c
0000000000018554	b	0x18630
0000000000018558	mov	w0, #0x1
000000000001855c	ldp	x29, x30, [sp, #0x10]
0000000000018560	ldp	x20, x19, [sp], #0x20
0000000000018564	ret
0000000000018568	neg	w10, w9
000000000001856c	mvn	w9, w9
0000000000018570	cmp	w10, #0x9
0000000000018574	b.ge	0x185c0
0000000000018578	cmp	w10, #0x2
000000000001857c	b.lt	0x185f4
0000000000018580	mov	x10, #0x0
0000000000018584	mov	x11, x8
0000000000018588	ldr	w12, [x11]
000000000001858c	cmp	w12, #0x1d
0000000000018590	b.gt	0x1861c
0000000000018594	add	x10, x10, #0x1
0000000000018598	add	x11, x11, #0x10
000000000001859c	cmp	x9, x10
00000000000185a0	b.ne	0x18588
00000000000185a4	mov	x10, x9
00000000000185a8	sxtw	x9, w10
00000000000185ac	lsl	x9, x9, #4
00000000000185b0	ldr	w8, [x8, x9]
00000000000185b4	cmp	w8, #0x1e
00000000000185b8	b.ne	0x1860c
00000000000185bc	b	0x18630
00000000000185c0	mov	w10, #0x0
00000000000185c4	add	w11, w9, w10
00000000000185c8	cmp	w11, #0x0
00000000000185cc	cinc	w11, w11, lt
00000000000185d0	asr	w11, w11, #1
00000000000185d4	sbfiz	x12, x11, #4, #32
00000000000185d8	ldr	w12, [x8, x12]
00000000000185dc	cmp	w12, #0x1e
00000000000185e0	csinc	w10, w10, w11, ge
00000000000185e4	csel	w9, w9, w11, lt
00000000000185e8	cmp	w10, w9
00000000000185ec	b.lt	0x185c4
00000000000185f0	b	0x1861c
00000000000185f4	mov	w10, #0x0
00000000000185f8	sxtw	x9, w10
00000000000185fc	lsl	x9, x9, #4
0000000000018600	ldr	w8, [x8, x9]
0000000000018604	cmp	w8, #0x1e
0000000000018608	b.eq	0x18630
000000000001860c	mov	w0, #0x0
0000000000018610	ldp	x29, x30, [sp, #0x10]
0000000000018614	ldp	x20, x19, [sp], #0x20
0000000000018618	ret
000000000001861c	sxtw	x9, w10
0000000000018620	lsl	x9, x9, #4
0000000000018624	ldr	w8, [x8, x9]
0000000000018628	cmp	w8, #0x1e
000000000001862c	b.ne	0x1860c
0000000000018630	mov	x0, x20
0000000000018634	mov	x1, x19
0000000000018638	ldp	x29, x30, [sp, #0x10]
000000000001863c	ldp	x20, x19, [sp], #0x20
0000000000018640	b	"_kfun:kotlin.collections.AbstractSet.Companion#setEquals(kotlin.collections.Set<*>;kotlin.collections.Set<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractMutableSet#hashCode(){}kotlin.Int:
0000000000018644	stp	x20, x19, [sp, #-0x20]!
0000000000018648	stp	x29, x30, [sp, #0x10]
000000000001864c	add	x29, sp, #0x10
0000000000018650	mov	x19, x0
0000000000018654	adr	x8, #0x7beb5
0000000000018658	nop
000000000001865c	ldarb	w8, [x8]
0000000000018660	tbz	w8, #0x0, 0x18668
0000000000018664	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018668	mov	x0, x19
000000000001866c	ldp	x29, x30, [sp, #0x10]
0000000000018670	ldp	x20, x19, [sp], #0x20
0000000000018674	b	"_kfun:kotlin.collections.AbstractSet.Companion#unorderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections#copyToArrayImpl(kotlin.collections.Collection<*>){}kotlin.Array<kotlin.Any?>:
0000000000018678	sub	sp, sp, #0xa0
000000000001867c	stp	x28, x27, [sp, #0x40]
0000000000018680	stp	x26, x25, [sp, #0x50]
0000000000018684	stp	x24, x23, [sp, #0x60]
0000000000018688	stp	x22, x21, [sp, #0x70]
000000000001868c	stp	x20, x19, [sp, #0x80]
0000000000018690	stp	x29, x30, [sp, #0x90]
0000000000018694	add	x29, sp, #0x90
0000000000018698	mov	x19, x1
000000000001869c	mov	x23, x0
00000000000186a0	movi.16b	v0, #0x0
00000000000186a4	stp	q0, q0, [sp]
00000000000186a8	str	xzr, [sp, #0x30]
00000000000186ac	str	q0, [sp, #0x20]
00000000000186b0	mov	x21, sp
00000000000186b4	adrp	x0, 98 ; 0x7a000
00000000000186b8	add	x0, x0, #0x4e0
00000000000186bc	ldr	x8, [x0]
00000000000186c0	blr	x8
00000000000186c4	ldr	x26, [x0]
00000000000186c8	ldr	x8, [x26, #0x110]
00000000000186cc	str	x21, [x26, #0x110]
00000000000186d0	mov	x9, #0x700000000
00000000000186d4	stp	x8, x9, [sp, #0x8]
00000000000186d8	adr	x27, #0x7be31
00000000000186dc	nop
00000000000186e0	ldarb	w8, [x27]
00000000000186e4	tbz	w8, #0x0, 0x186ec
00000000000186e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000186ec	ldr	x8, [x23]
00000000000186f0	and	x8, x8, #0xfffffffffffffffc
00000000000186f4	ldr	x8, [x8]
00000000000186f8	ldr	w9, [x8, #0x3c]
00000000000186fc	ldr	x8, [x8, #0x40]
0000000000018700	tbnz	w9, #0x1f, 0x18794
0000000000018704	mov	w10, #0x12
0000000000018708	and	x9, x9, x10
000000000001870c	add	x8, x8, x9, lsl #4
0000000000018710	ldr	x8, [x8, #0x8]
0000000000018714	ldr	x8, [x8]
0000000000018718	mov	x0, x23
000000000001871c	blr	x8
0000000000018720	tbnz	w0, #0x1f, 0x188b0
0000000000018724	mov	x25, x0
0000000000018728	add	x20, x21, #0x30
000000000001872c	add	x24, x21, #0x28
0000000000018730	ldr	x8, [x26, #0x118]
0000000000018734	mov	w9, w0
0000000000018738	lsl	x9, x9, #3
000000000001873c	add	x9, x9, #0x1f
0000000000018740	and	x1, x9, #0xffffffff8
0000000000018744	add	x0, x8, #0x70
0000000000018748	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001874c	mov	x22, x0
0000000000018750	adr	x8, #0x48650
0000000000018754	nop
0000000000018758	mov	x21, x0
000000000001875c	str	x8, [x21, #0x10]!
0000000000018760	str	xzr, [x0, #0x18]
0000000000018764	str	xzr, [x0, #0x8]
0000000000018768	str	w25, [x0, #0x18]
000000000001876c	str	x21, [sp, #0x20]
0000000000018770	ldr	x8, [x23]
0000000000018774	and	x8, x8, #0xfffffffffffffffc
0000000000018778	ldr	x8, [x8]
000000000001877c	ldr	w9, [x8, #0x3c]
0000000000018780	ldr	x8, [x8, #0x40]
0000000000018784	tbnz	w9, #0x1f, 0x187d8
0000000000018788	mov	w10, #0x12
000000000001878c	and	x9, x9, x10
0000000000018790	b	0x188f4
0000000000018794	neg	w10, w9
0000000000018798	mvn	w9, w9
000000000001879c	cmp	w10, #0x9
00000000000187a0	b.ge	0x1881c
00000000000187a4	cmp	w10, #0x2
00000000000187a8	b.lt	0x18884
00000000000187ac	mov	x10, #0x0
00000000000187b0	mov	x11, x8
00000000000187b4	ldr	w12, [x11]
00000000000187b8	cmp	w12, #0x11
00000000000187bc	b.gt	0x18894
00000000000187c0	add	x10, x10, #0x1
00000000000187c4	add	x11, x11, #0x10
00000000000187c8	cmp	x9, x10
00000000000187cc	b.ne	0x187b4
00000000000187d0	mov	x10, x9
00000000000187d4	b	0x18894
00000000000187d8	neg	w10, w9
00000000000187dc	mvn	w9, w9
00000000000187e0	cmp	w10, #0x9
00000000000187e4	b.ge	0x18850
00000000000187e8	cmp	w10, #0x2
00000000000187ec	b.lt	0x1888c
00000000000187f0	mov	x10, #0x0
00000000000187f4	mov	x11, x8
00000000000187f8	ldr	w12, [x11]
00000000000187fc	cmp	w12, #0x11
0000000000018800	b.gt	0x188f0
0000000000018804	add	x10, x10, #0x1
0000000000018808	add	x11, x11, #0x10
000000000001880c	cmp	x9, x10
0000000000018810	b.ne	0x187f8
0000000000018814	mov	x10, x9
0000000000018818	b	0x188f0
000000000001881c	mov	w10, #0x0
0000000000018820	add	w11, w9, w10
0000000000018824	cmp	w11, #0x0
0000000000018828	cinc	w11, w11, lt
000000000001882c	asr	w11, w11, #1
0000000000018830	sbfiz	x12, x11, #4, #32
0000000000018834	ldr	w12, [x8, x12]
0000000000018838	cmp	w12, #0x12
000000000001883c	csinc	w10, w10, w11, ge
0000000000018840	csel	w9, w9, w11, lt
0000000000018844	cmp	w10, w9
0000000000018848	b.lt	0x18820
000000000001884c	b	0x18894
0000000000018850	mov	w10, #0x0
0000000000018854	add	w11, w9, w10
0000000000018858	cmp	w11, #0x0
000000000001885c	cinc	w11, w11, lt
0000000000018860	asr	w11, w11, #1
0000000000018864	sbfiz	x12, x11, #4, #32
0000000000018868	ldr	w12, [x8, x12]
000000000001886c	cmp	w12, #0x12
0000000000018870	csinc	w10, w10, w11, ge
0000000000018874	csel	w9, w9, w11, lt
0000000000018878	cmp	w10, w9
000000000001887c	b.lt	0x18854
0000000000018880	b	0x188f0
0000000000018884	mov	w10, #0x0
0000000000018888	b	0x18894
000000000001888c	mov	w10, #0x0
0000000000018890	b	0x188f0
0000000000018894	sxtw	x9, w10
0000000000018898	add	x8, x8, x9, lsl #4
000000000001889c	ldr	x8, [x8, #0x8]
00000000000188a0	ldr	x8, [x8]
00000000000188a4	mov	x0, x23
00000000000188a8	blr	x8
00000000000188ac	tbz	w0, #0x1f, 0x18724
00000000000188b0	ldr	x8, [x26, #0x118]
00000000000188b4	add	x0, x8, #0x70
00000000000188b8	mov	w1, #0x38
00000000000188bc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000188c0	mov	x19, x0
00000000000188c4	adr	x8, #0x48cac
00000000000188c8	nop
00000000000188cc	str	x8, [x19, #0x10]!
00000000000188d0	stur	xzr, [x19, #-0x8]
00000000000188d4	str	x19, [sp, #0x18]
00000000000188d8	adr	x1, #0x55a18
00000000000188dc	nop
00000000000188e0	mov	x0, x19
00000000000188e4	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
00000000000188e8	mov	x0, x19
00000000000188ec	bl	_ThrowException
00000000000188f0	sxtw	x9, w10
00000000000188f4	add	x8, x8, x9, lsl #4
00000000000188f8	ldr	x8, [x8, #0x8]
00000000000188fc	ldr	x8, [x8, #0x20]
0000000000018900	mov	x0, x23
0000000000018904	mov	x1, x24
0000000000018908	blr	x8
000000000001890c	mov	x23, x0
0000000000018910	mov	w24, #0x0
0000000000018914	add	x25, x22, #0x20
0000000000018918	mov	w28, #0xa0
000000000001891c	ldr	x8, [x23]
0000000000018920	and	x8, x8, #0xfffffffffffffffc
0000000000018924	ldr	x8, [x8]
0000000000018928	ldr	w9, [x8, #0x3c]
000000000001892c	ldr	x8, [x8, #0x40]
0000000000018930	tbz	w9, #0x1f, 0x18ad0
0000000000018934	b	0x18a30
0000000000018938	ldarb	w8, [x27]
000000000001893c	tbz	w8, #0x0, 0x18944
0000000000018940	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018944	ldr	x8, [x23]
0000000000018948	and	x8, x8, #0xfffffffffffffffc
000000000001894c	ldr	x8, [x8]
0000000000018950	ldr	w9, [x8, #0x3c]
0000000000018954	ldr	x8, [x8, #0x40]
0000000000018958	tbnz	w9, #0x1f, 0x18964
000000000001895c	and	x9, x9, x28
0000000000018960	b	0x189e8
0000000000018964	neg	w10, w9
0000000000018968	mvn	w9, w9
000000000001896c	cmp	w10, #0x9
0000000000018970	b.ge	0x189a8
0000000000018974	cmp	w10, #0x2
0000000000018978	b.lt	0x189dc
000000000001897c	mov	x10, #0x0
0000000000018980	mov	x11, x8
0000000000018984	ldr	w12, [x11]
0000000000018988	cmp	w12, #0x9f
000000000001898c	b.gt	0x189e4
0000000000018990	add	x10, x10, #0x1
0000000000018994	add	x11, x11, #0x10
0000000000018998	cmp	x9, x10
000000000001899c	b.ne	0x18984
00000000000189a0	mov	x10, x9
00000000000189a4	b	0x189e4
00000000000189a8	mov	w10, #0x0
00000000000189ac	add	w11, w9, w10
00000000000189b0	cmp	w11, #0x0
00000000000189b4	cinc	w11, w11, lt
00000000000189b8	asr	w11, w11, #1
00000000000189bc	sbfiz	x12, x11, #4, #32
00000000000189c0	ldr	w12, [x8, x12]
00000000000189c4	cmp	w12, #0xa0
00000000000189c8	csinc	w10, w10, w11, ge
00000000000189cc	csel	w9, w9, w11, lt
00000000000189d0	cmp	w10, w9
00000000000189d4	b.lt	0x189ac
00000000000189d8	b	0x189e4
00000000000189dc	mov	w10, #0x0
00000000000189e0	b	0x189e4
00000000000189e4	sxtw	x9, w10
00000000000189e8	add	x8, x8, x9, lsl #4
00000000000189ec	ldr	x8, [x8, #0x8]
00000000000189f0	ldr	x8, [x8, #0x8]
00000000000189f4	mov	x0, x23
00000000000189f8	mov	x1, x20
00000000000189fc	blr	x8
0000000000018a00	ldr	w8, [x22, #0x18]
0000000000018a04	cmp	w8, w24
0000000000018a08	b.ls	0x18b1c
0000000000018a0c	ldr	xzr, [x21]
0000000000018a10	str	x0, [x25, w24, sxtw #3]
0000000000018a14	add	w24, w24, #0x1
0000000000018a18	ldr	x8, [x23]
0000000000018a1c	and	x8, x8, #0xfffffffffffffffc
0000000000018a20	ldr	x8, [x8]
0000000000018a24	ldr	w9, [x8, #0x3c]
0000000000018a28	ldr	x8, [x8, #0x40]
0000000000018a2c	tbz	w9, #0x1f, 0x18ad0
0000000000018a30	neg	w10, w9
0000000000018a34	mvn	w9, w9
0000000000018a38	cmp	w10, #0x9
0000000000018a3c	b.ge	0x18a74
0000000000018a40	cmp	w10, #0x2
0000000000018a44	b.lt	0x18aa8
0000000000018a48	mov	x10, #0x0
0000000000018a4c	mov	x11, x8
0000000000018a50	ldr	w12, [x11]
0000000000018a54	cmp	w12, #0x9f
0000000000018a58	b.gt	0x18ab0
0000000000018a5c	add	x10, x10, #0x1
0000000000018a60	add	x11, x11, #0x10
0000000000018a64	cmp	x9, x10
0000000000018a68	b.ne	0x18a50
0000000000018a6c	mov	x10, x9
0000000000018a70	b	0x18ab0
0000000000018a74	mov	w10, #0x0
0000000000018a78	add	w11, w9, w10
0000000000018a7c	cmp	w11, #0x0
0000000000018a80	cinc	w11, w11, lt
0000000000018a84	asr	w11, w11, #1
0000000000018a88	sbfiz	x12, x11, #4, #32
0000000000018a8c	ldr	w12, [x8, x12]
0000000000018a90	cmp	w12, #0xa0
0000000000018a94	csinc	w10, w10, w11, ge
0000000000018a98	csel	w9, w9, w11, lt
0000000000018a9c	cmp	w10, w9
0000000000018aa0	b.lt	0x18a78
0000000000018aa4	b	0x18ab0
0000000000018aa8	mov	w10, #0x0
0000000000018aac	b	0x18ab0
0000000000018ab0	sxtw	x9, w10
0000000000018ab4	add	x8, x8, x9, lsl #4
0000000000018ab8	ldr	x8, [x8, #0x8]
0000000000018abc	ldr	x8, [x8]
0000000000018ac0	mov	x0, x23
0000000000018ac4	blr	x8
0000000000018ac8	tbnz	w0, #0x0, 0x18938
0000000000018acc	b	0x18aec
0000000000018ad0	and	x9, x9, x28
0000000000018ad4	add	x8, x8, x9, lsl #4
0000000000018ad8	ldr	x8, [x8, #0x8]
0000000000018adc	ldr	x8, [x8]
0000000000018ae0	mov	x0, x23
0000000000018ae4	blr	x8
0000000000018ae8	tbnz	w0, #0x0, 0x18938
0000000000018aec	str	x21, [x19]
0000000000018af0	ldr	x8, [sp, #0x8]
0000000000018af4	str	x8, [x26, #0x110]
0000000000018af8	mov	x0, x21
0000000000018afc	ldp	x29, x30, [sp, #0x90]
0000000000018b00	ldp	x20, x19, [sp, #0x80]
0000000000018b04	ldp	x22, x21, [sp, #0x70]
0000000000018b08	ldp	x24, x23, [sp, #0x60]
0000000000018b0c	ldp	x26, x25, [sp, #0x50]
0000000000018b10	ldp	x28, x27, [sp, #0x40]
0000000000018b14	add	sp, sp, #0xa0
0000000000018b18	ret
0000000000018b1c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections#checkCopyOfRangeArguments(kotlin.Int;kotlin.Int;kotlin.Int){}:
0000000000018b20	sub	sp, sp, #0x130
0000000000018b24	stp	x28, x27, [sp, #0xd0]
0000000000018b28	stp	x26, x25, [sp, #0xe0]
0000000000018b2c	stp	x24, x23, [sp, #0xf0]
0000000000018b30	stp	x22, x21, [sp, #0x100]
0000000000018b34	stp	x20, x19, [sp, #0x110]
0000000000018b38	stp	x29, x30, [sp, #0x120]
0000000000018b3c	add	x29, sp, #0x120
0000000000018b40	mov	x20, x2
0000000000018b44	mov	x19, x1
0000000000018b48	mov	x21, x0
0000000000018b4c	str	xzr, [sp, #0xc0]
0000000000018b50	movi.16b	v0, #0x0
0000000000018b54	stp	q0, q0, [sp, #0xa0]
0000000000018b58	stp	q0, q0, [sp, #0x80]
0000000000018b5c	stp	q0, q0, [sp, #0x60]
0000000000018b60	stp	q0, q0, [sp, #0x40]
0000000000018b64	str	q0, [sp, #0x30]
0000000000018b68	stp	xzr, xzr, [sp, #0x20]
0000000000018b6c	adr	x8, #0x4c254
0000000000018b70	nop
0000000000018b74	orr	x8, x8, #0x3
0000000000018b78	stp	xzr, x8, [sp, #0x10]
0000000000018b7c	stp	x8, xzr, [sp]
0000000000018b80	adrp	x0, 98 ; 0x7a000
0000000000018b84	add	x0, x0, #0x4e0
0000000000018b88	ldr	x8, [x0]
0000000000018b8c	blr	x8
0000000000018b90	ldr	x22, [x0]
0000000000018b94	ldr	x8, [x22, #0x110]
0000000000018b98	add	x9, sp, #0x30
0000000000018b9c	str	x9, [x22, #0x110]
0000000000018ba0	mov	x9, #0x1300000000
0000000000018ba4	stp	x8, x9, [sp, #0x38]
0000000000018ba8	adr	x8, #0x7b961
0000000000018bac	nop
0000000000018bb0	ldarb	w8, [x8]
0000000000018bb4	tbz	w8, #0x0, 0x18bbc
0000000000018bb8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018bbc	cmp	w19, w20
0000000000018bc0	b.gt	0x18bf4
0000000000018bc4	cmp	w21, w19
0000000000018bc8	b.gt	0x18cc0
0000000000018bcc	ldr	x8, [sp, #0x38]
0000000000018bd0	str	x8, [x22, #0x110]
0000000000018bd4	ldp	x29, x30, [sp, #0x120]
0000000000018bd8	ldp	x20, x19, [sp, #0x110]
0000000000018bdc	ldp	x22, x21, [sp, #0x100]
0000000000018be0	ldp	x24, x23, [sp, #0xf0]
0000000000018be4	ldp	x26, x25, [sp, #0xe0]
0000000000018be8	ldp	x28, x27, [sp, #0xd0]
0000000000018bec	add	sp, sp, #0x130
0000000000018bf0	ret
0000000000018bf4	add	x8, sp, #0x30
0000000000018bf8	add	x21, x8, #0x48
0000000000018bfc	mov	x27, x22
0000000000018c00	add	x22, x8, #0x40
0000000000018c04	add	x23, x8, #0x38
0000000000018c08	add	x24, x8, #0x30
0000000000018c0c	add	x25, x8, #0x28
0000000000018c10	add	x26, x8, #0x20
0000000000018c14	add	x8, sp, #0x18
0000000000018c18	str	x8, [sp, #0x48]
0000000000018c1c	add	x0, sp, #0x18
0000000000018c20	mov	w1, #0xa
0000000000018c24	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000018c28	adr	x1, #0x56ec8
0000000000018c2c	nop
0000000000018c30	add	x0, sp, #0x18
0000000000018c34	mov	x2, x26
0000000000018c38	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000018c3c	add	x0, sp, #0x18
0000000000018c40	mov	x1, x19
0000000000018c44	mov	x2, x25
0000000000018c48	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000018c4c	adr	x1, #0x56ed4
0000000000018c50	nop
0000000000018c54	add	x0, sp, #0x18
0000000000018c58	mov	x2, x24
0000000000018c5c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000018c60	add	x0, sp, #0x18
0000000000018c64	mov	x1, x20
0000000000018c68	mov	x2, x23
0000000000018c6c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000018c70	adr	x1, #0x56ef0
0000000000018c74	nop
0000000000018c78	add	x0, sp, #0x18
0000000000018c7c	mov	x2, x22
0000000000018c80	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000018c84	add	x0, sp, #0x18
0000000000018c88	mov	x1, x21
0000000000018c8c	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000018c90	mov	x19, x0
0000000000018c94	ldr	x8, [x27, #0x118]
0000000000018c98	add	x0, x8, #0x70
0000000000018c9c	mov	w1, #0x38
0000000000018ca0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000018ca4	mov	x20, x0
0000000000018ca8	adr	x8, #0x48828
0000000000018cac	nop
0000000000018cb0	str	x8, [x20, #0x10]!
0000000000018cb4	stur	xzr, [x20, #-0x8]
0000000000018cb8	str	x20, [sp, #0x80]
0000000000018cbc	b	0x18d88
0000000000018cc0	add	x8, sp, #0x30
0000000000018cc4	add	x20, x8, #0x88
0000000000018cc8	mov	x27, x22
0000000000018ccc	add	x22, x8, #0x80
0000000000018cd0	add	x23, x8, #0x78
0000000000018cd4	add	x24, x8, #0x70
0000000000018cd8	add	x25, x8, #0x68
0000000000018cdc	add	x26, x8, #0x60
0000000000018ce0	mov	x8, sp
0000000000018ce4	str	x8, [sp, #0x88]
0000000000018ce8	mov	x0, sp
0000000000018cec	mov	w1, #0xa
0000000000018cf0	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000018cf4	adr	x1, #0x56e8c
0000000000018cf8	nop
0000000000018cfc	mov	x0, sp
0000000000018d00	mov	x2, x26
0000000000018d04	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000018d08	mov	x0, sp
0000000000018d0c	mov	x1, x21
0000000000018d10	mov	x2, x25
0000000000018d14	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000018d18	adr	x1, #0x56e98
0000000000018d1c	nop
0000000000018d20	mov	x0, sp
0000000000018d24	mov	x2, x24
0000000000018d28	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000018d2c	mov	x0, sp
0000000000018d30	mov	x1, x19
0000000000018d34	mov	x2, x23
0000000000018d38	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000018d3c	adr	x1, #0x56e24
0000000000018d40	nop
0000000000018d44	mov	x0, sp
0000000000018d48	mov	x2, x22
0000000000018d4c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000018d50	mov	x0, sp
0000000000018d54	mov	x1, x20
0000000000018d58	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000018d5c	mov	x19, x0
0000000000018d60	ldr	x8, [x27, #0x118]
0000000000018d64	add	x0, x8, #0x70
0000000000018d68	mov	w1, #0x38
0000000000018d6c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000018d70	mov	x20, x0
0000000000018d74	adr	x8, #0x487fc
0000000000018d78	nop
0000000000018d7c	str	x8, [x20, #0x10]!
0000000000018d80	stur	xzr, [x20, #-0x8]
0000000000018d84	str	x20, [sp, #0xc0]
0000000000018d88	mov	x0, x20
0000000000018d8c	mov	x1, x19
0000000000018d90	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000018d94	mov	x0, x20
0000000000018d98	bl	_ThrowException
_kfun:kotlin.collections#copyOfNulls__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0?>:
0000000000018d9c	sub	sp, sp, #0xc0
0000000000018da0	stp	x24, x23, [sp, #0x80]
0000000000018da4	stp	x22, x21, [sp, #0x90]
0000000000018da8	stp	x20, x19, [sp, #0xa0]
0000000000018dac	stp	x29, x30, [sp, #0xb0]
0000000000018db0	add	x29, sp, #0xb0
0000000000018db4	mov	x20, x2
0000000000018db8	mov	x19, x1
0000000000018dbc	mov	x21, x0
0000000000018dc0	movi.16b	v0, #0x0
0000000000018dc4	stp	q0, q0, [sp, #0x20]
0000000000018dc8	stp	q0, q0, [sp, #0x60]
0000000000018dcc	stp	q0, q0, [sp, #0x40]
0000000000018dd0	stp	xzr, xzr, [sp, #0x10]
0000000000018dd4	adr	x8, #0x4bfec
0000000000018dd8	nop
0000000000018ddc	orr	x8, x8, #0x3
0000000000018de0	str	x8, [sp, #0x8]
0000000000018de4	adrp	x0, 98 ; 0x7a000
0000000000018de8	add	x0, x0, #0x4e0
0000000000018dec	ldr	x8, [x0]
0000000000018df0	blr	x8
0000000000018df4	ldr	x23, [x0]
0000000000018df8	ldr	x8, [x23, #0x110]
0000000000018dfc	add	x9, sp, #0x20
0000000000018e00	str	x9, [x23, #0x110]
0000000000018e04	mov	x9, #0xc00000000
0000000000018e08	stp	x8, x9, [sp, #0x28]
0000000000018e0c	adr	x8, #0x7b6fd
0000000000018e10	nop
0000000000018e14	ldarb	w8, [x8]
0000000000018e18	tbz	w8, #0x0, 0x18e20
0000000000018e1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018e20	tbnz	w19, #0x1f, 0x18ea4
0000000000018e24	ldr	x8, [x23, #0x118]
0000000000018e28	mov	w9, w19
0000000000018e2c	lsl	x9, x9, #3
0000000000018e30	add	x9, x9, #0x1f
0000000000018e34	and	x1, x9, #0xffffffff8
0000000000018e38	add	x0, x8, #0x70
0000000000018e3c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000018e40	mov	x22, x0
0000000000018e44	stp	xzr, xzr, [x22, #0x10]!
0000000000018e48	adr	x8, #0x47f58
0000000000018e4c	nop
0000000000018e50	stp	xzr, x8, [x22, #-0x8]
0000000000018e54	str	w19, [x22, #0x8]
0000000000018e58	str	x22, [sp, #0x70]
0000000000018e5c	ldr	w8, [x21, #0x8]
0000000000018e60	cmp	w8, w19
0000000000018e64	csel	w2, w8, w19, lt
0000000000018e68	add	x8, sp, #0x20
0000000000018e6c	add	x3, x8, #0x58
0000000000018e70	mov	x0, x21
0000000000018e74	mov	x1, x22
0000000000018e78	bl	"_kfun:kotlin.collections#copyInto__at__kotlin.Array<out|0:0>(kotlin.Array<0:0>;kotlin.Int;kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0>"
0000000000018e7c	str	x22, [x20]
0000000000018e80	ldr	x8, [sp, #0x28]
0000000000018e84	str	x8, [x23, #0x110]
0000000000018e88	mov	x0, x22
0000000000018e8c	ldp	x29, x30, [sp, #0xb0]
0000000000018e90	ldp	x20, x19, [sp, #0xa0]
0000000000018e94	ldp	x22, x21, [sp, #0x90]
0000000000018e98	ldp	x24, x23, [sp, #0x80]
0000000000018e9c	add	sp, sp, #0xc0
0000000000018ea0	ret
0000000000018ea4	add	x8, sp, #0x20
0000000000018ea8	add	x20, x8, #0x38
0000000000018eac	add	x21, x8, #0x30
0000000000018eb0	add	x22, x8, #0x28
0000000000018eb4	mov	x24, x23
0000000000018eb8	add	x23, x8, #0x20
0000000000018ebc	add	x8, sp, #0x8
0000000000018ec0	str	x8, [sp, #0x38]
0000000000018ec4	add	x0, sp, #0x8
0000000000018ec8	mov	w1, #0xa
0000000000018ecc	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000018ed0	add	x0, sp, #0x8
0000000000018ed4	mov	w1, #0x0
0000000000018ed8	mov	x2, x23
0000000000018edc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000018ee0	adr	x1, #0x553f0
0000000000018ee4	nop
0000000000018ee8	add	x0, sp, #0x8
0000000000018eec	mov	x2, x22
0000000000018ef0	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000018ef4	add	x0, sp, #0x8
0000000000018ef8	mov	x1, x19
0000000000018efc	mov	x2, x21
0000000000018f00	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000018f04	add	x0, sp, #0x8
0000000000018f08	mov	x1, x20
0000000000018f0c	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000018f10	mov	x19, x0
0000000000018f14	ldr	x8, [x24, #0x118]
0000000000018f18	add	x0, x8, #0x70
0000000000018f1c	mov	w1, #0x38
0000000000018f20	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000018f24	mov	x20, x0
0000000000018f28	adr	x8, #0x48648
0000000000018f2c	nop
0000000000018f30	str	x8, [x20, #0x10]!
0000000000018f34	stur	xzr, [x20, #-0x8]
0000000000018f38	str	x20, [sp, #0x60]
0000000000018f3c	mov	x0, x20
0000000000018f40	mov	x1, x19
0000000000018f44	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000018f48	mov	x0, x20
0000000000018f4c	bl	_ThrowException
_kfun:kotlin.collections.HashMap#<get-size>(){}kotlin.Int:
0000000000018f50	stp	x20, x19, [sp, #-0x20]!
0000000000018f54	stp	x29, x30, [sp, #0x10]
0000000000018f58	add	x29, sp, #0x10
0000000000018f5c	mov	x19, x0
0000000000018f60	adr	x8, #0x7b5a9
0000000000018f64	nop
0000000000018f68	ldarb	w8, [x8]
0000000000018f6c	tbz	w8, #0x0, 0x18f74
0000000000018f70	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018f74	ldr	w0, [x19, #0x4c]
0000000000018f78	ldp	x29, x30, [sp, #0x10]
0000000000018f7c	ldp	x20, x19, [sp], #0x20
0000000000018f80	ret
_kfun:kotlin.collections.HashMap#<init>(kotlin.Int){}:
0000000000018f84	sub	sp, sp, #0xa0
0000000000018f88	stp	x24, x23, [sp, #0x60]
0000000000018f8c	stp	x22, x21, [sp, #0x70]
0000000000018f90	stp	x20, x19, [sp, #0x80]
0000000000018f94	stp	x29, x30, [sp, #0x90]
0000000000018f98	add	x29, sp, #0x90
0000000000018f9c	mov	x20, x1
0000000000018fa0	mov	x19, x0
0000000000018fa4	movi.16b	v0, #0x0
0000000000018fa8	stp	q0, q0, [sp]
0000000000018fac	str	xzr, [sp, #0x30]
0000000000018fb0	str	q0, [sp, #0x20]
0000000000018fb4	adrp	x0, 98 ; 0x7a000
0000000000018fb8	add	x0, x0, #0x4e0
0000000000018fbc	ldr	x8, [x0]
0000000000018fc0	blr	x8
0000000000018fc4	ldr	x23, [x0]
0000000000018fc8	ldr	x8, [x23, #0x110]
0000000000018fcc	mov	x9, sp
0000000000018fd0	str	x9, [x23, #0x110]
0000000000018fd4	mov	x9, #0x700000000
0000000000018fd8	stp	x8, x9, [sp, #0x8]
0000000000018fdc	adr	x8, #0x7b52d
0000000000018fe0	nop
0000000000018fe4	ldarb	w8, [x8]
0000000000018fe8	tbz	w8, #0x0, 0x18ff0
0000000000018fec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000018ff0	tbnz	w20, #0x1f, 0x19100
0000000000018ff4	ldr	x8, [x23, #0x118]
0000000000018ff8	mov	w22, w20
0000000000018ffc	lsl	x9, x22, #3
0000000000019000	add	x9, x9, #0x1f
0000000000019004	and	x1, x9, #0xffffffff8
0000000000019008	add	x0, x8, #0x70
000000000001900c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000019010	mov	x21, x0
0000000000019014	adr	x8, #0x47d8c
0000000000019018	nop
000000000001901c	stp	x8, xzr, [x21, #0x10]!
0000000000019020	stur	xzr, [x21, #-0x8]
0000000000019024	str	w20, [x21, #0x8]
0000000000019028	str	x21, [sp, #0x20]
000000000001902c	ldr	x8, [x23, #0x118]
0000000000019030	lsl	x9, x22, #2
0000000000019034	add	x9, x9, #0x1f
0000000000019038	and	x1, x9, #0x7fffffff8
000000000001903c	add	x0, x8, #0x70
0000000000019040	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000019044	mov	x22, x0
0000000000019048	adr	x24, #0x47f08
000000000001904c	nop
0000000000019050	stp	x24, xzr, [x22, #0x10]!
0000000000019054	stur	xzr, [x22, #-0x8]
0000000000019058	str	w20, [x22, #0x8]
000000000001905c	str	x22, [sp, #0x28]
0000000000019060	mov	x0, x20
0000000000019064	bl	"_kfun:kotlin.collections.HashMap.Companion.computeHashSize#internal"
0000000000019068	tbnz	w0, #0x1f, 0x19140
000000000001906c	mov	x20, x0
0000000000019070	ldr	x8, [x23, #0x118]
0000000000019074	mov	w9, w0
0000000000019078	lsl	x9, x9, #2
000000000001907c	add	x9, x9, #0x1f
0000000000019080	and	x1, x9, #0x7fffffff8
0000000000019084	add	x0, x8, #0x70
0000000000019088	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001908c	stp	x24, xzr, [x0, #0x10]!
0000000000019090	stur	xzr, [x0, #-0x8]
0000000000019094	str	w20, [x0, #0x8]
0000000000019098	str	x0, [sp, #0x30]
000000000001909c	stp	x21, xzr, [x19, #0x8]
00000000000190a0	stp	x22, x0, [x19, #0x18]
00000000000190a4	mov	w8, #0x2
00000000000190a8	str	x8, [x19, #0x40]
00000000000190ac	movi.16b	v0, #0x0
00000000000190b0	stp	q0, q0, [sp, #0x40]
00000000000190b4	ldr	x8, [x23, #0x110]
00000000000190b8	add	x9, sp, #0x40
00000000000190bc	str	x9, [x23, #0x110]
00000000000190c0	ldr	x9, [x19, #0x20]
00000000000190c4	ldr	w9, [x9, #0x8]
00000000000190c8	str	x8, [x23, #0x110]
00000000000190cc	clz	w8, w9
00000000000190d0	cmp	w9, #0x0
00000000000190d4	mov	w9, #0x21
00000000000190d8	csinc	w8, w9, w8, eq
00000000000190dc	str	w8, [x19, #0x48]
00000000000190e0	ldr	x8, [sp, #0x8]
00000000000190e4	str	x8, [x23, #0x110]
00000000000190e8	ldp	x29, x30, [sp, #0x90]
00000000000190ec	ldp	x20, x19, [sp, #0x80]
00000000000190f0	ldp	x22, x21, [sp, #0x70]
00000000000190f4	ldp	x24, x23, [sp, #0x60]
00000000000190f8	add	sp, sp, #0xa0
00000000000190fc	ret
0000000000019100	ldr	x8, [x23, #0x118]
0000000000019104	add	x0, x8, #0x70
0000000000019108	mov	w1, #0x38
000000000001910c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000019110	mov	x19, x0
0000000000019114	adr	x8, #0x4845c
0000000000019118	nop
000000000001911c	str	x8, [x19, #0x10]!
0000000000019120	stur	xzr, [x19, #-0x8]
0000000000019124	str	x19, [sp, #0x18]
0000000000019128	adr	x1, #0x551c8
000000000001912c	nop
0000000000019130	mov	x0, x19
0000000000019134	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000019138	mov	x0, x19
000000000001913c	bl	_ThrowException
0000000000019140	bl	_ThrowIllegalArgumentException
_kfun:kotlin.collections.HashMap#isEmpty(){}kotlin.Boolean:
0000000000019144	stp	x20, x19, [sp, #-0x20]!
0000000000019148	stp	x29, x30, [sp, #0x10]
000000000001914c	add	x29, sp, #0x10
0000000000019150	mov	x19, x0
0000000000019154	adr	x8, #0x7b3b5
0000000000019158	nop
000000000001915c	ldarb	w8, [x8]
0000000000019160	tbz	w8, #0x0, 0x19168
0000000000019164	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019168	ldr	w8, [x19, #0x4c]
000000000001916c	cmp	w8, #0x0
0000000000019170	cset	w0, eq
0000000000019174	ldp	x29, x30, [sp, #0x10]
0000000000019178	ldp	x20, x19, [sp], #0x20
000000000001917c	ret
_kfun:kotlin.collections.HashMap#containsKey(1:0){}kotlin.Boolean:
0000000000019180	stp	x20, x19, [sp, #-0x20]!
0000000000019184	stp	x29, x30, [sp, #0x10]
0000000000019188	add	x29, sp, #0x10
000000000001918c	mov	x19, x1
0000000000019190	mov	x20, x0
0000000000019194	adr	x8, #0x7b375
0000000000019198	nop
000000000001919c	ldarb	w8, [x8]
00000000000191a0	tbz	w8, #0x0, 0x191a8
00000000000191a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000191a8	mov	x0, x20
00000000000191ac	mov	x1, x19
00000000000191b0	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
00000000000191b4	mvn	w8, w0
00000000000191b8	lsr	w0, w8, #31
00000000000191bc	ldp	x29, x30, [sp, #0x10]
00000000000191c0	ldp	x20, x19, [sp], #0x20
00000000000191c4	ret
_kfun:kotlin.collections.HashMap#containsValue(1:1){}kotlin.Boolean:
00000000000191c8	stp	x20, x19, [sp, #-0x20]!
00000000000191cc	stp	x29, x30, [sp, #0x10]
00000000000191d0	add	x29, sp, #0x10
00000000000191d4	mov	x19, x1
00000000000191d8	mov	x20, x0
00000000000191dc	adr	x8, #0x7b32d
00000000000191e0	nop
00000000000191e4	ldarb	w8, [x8]
00000000000191e8	tbz	w8, #0x0, 0x191f0
00000000000191ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000191f0	mov	x0, x20
00000000000191f4	mov	x1, x19
00000000000191f8	bl	"_kfun:kotlin.collections.HashMap.findValue#internal"
00000000000191fc	mvn	w8, w0
0000000000019200	lsr	w0, w8, #31
0000000000019204	ldp	x29, x30, [sp, #0x10]
0000000000019208	ldp	x20, x19, [sp], #0x20
000000000001920c	ret
_kfun:kotlin.collections.HashMap#get(1:0){}1:1?:
0000000000019210	sub	sp, sp, #0x50
0000000000019214	stp	x22, x21, [sp, #0x20]
0000000000019218	stp	x20, x19, [sp, #0x30]
000000000001921c	stp	x29, x30, [sp, #0x40]
0000000000019220	add	x29, sp, #0x40
0000000000019224	mov	x19, x2
0000000000019228	mov	x21, x1
000000000001922c	mov	x20, x0
0000000000019230	movi.16b	v0, #0x0
0000000000019234	stp	q0, q0, [sp]
0000000000019238	adrp	x0, 97 ; 0x7a000
000000000001923c	add	x0, x0, #0x4e0
0000000000019240	ldr	x8, [x0]
0000000000019244	blr	x8
0000000000019248	ldr	x22, [x0]
000000000001924c	ldr	x8, [x22, #0x110]
0000000000019250	mov	x9, sp
0000000000019254	str	x9, [x22, #0x110]
0000000000019258	mov	x9, #0x400000000
000000000001925c	stp	x8, x9, [sp, #0x8]
0000000000019260	adr	x8, #0x7b2a9
0000000000019264	nop
0000000000019268	ldarb	w8, [x8]
000000000001926c	tbz	w8, #0x0, 0x19274
0000000000019270	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019274	mov	x0, x20
0000000000019278	mov	x1, x21
000000000001927c	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
0000000000019280	tbnz	w0, #0x1f, 0x192ac
0000000000019284	ldr	x8, [x20, #0x10]
0000000000019288	str	x8, [sp, #0x18]
000000000001928c	cbz	x8, 0x192d0
0000000000019290	ldr	w9, [x8, #0x8]
0000000000019294	cmp	w9, w0
0000000000019298	b.ls	0x192d4
000000000001929c	add	x8, x8, w0, sxtw #3
00000000000192a0	ldr	x0, [x8, #0x10]
00000000000192a4	str	x0, [x19]
00000000000192a8	b	0x192b0
00000000000192ac	mov	x0, #0x0
00000000000192b0	str	x0, [x19]
00000000000192b4	ldr	x8, [sp, #0x8]
00000000000192b8	str	x8, [x22, #0x110]
00000000000192bc	ldp	x29, x30, [sp, #0x40]
00000000000192c0	ldp	x20, x19, [sp, #0x30]
00000000000192c4	ldp	x22, x21, [sp, #0x20]
00000000000192c8	add	sp, sp, #0x50
00000000000192cc	ret
00000000000192d0	bl	_ThrowNullPointerException
00000000000192d4	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#put(1:0;1:1){}1:1?:
00000000000192d8	sub	sp, sp, #0x70
00000000000192dc	stp	x24, x23, [sp, #0x30]
00000000000192e0	stp	x22, x21, [sp, #0x40]
00000000000192e4	stp	x20, x19, [sp, #0x50]
00000000000192e8	stp	x29, x30, [sp, #0x60]
00000000000192ec	add	x29, sp, #0x60
00000000000192f0	mov	x19, x3
00000000000192f4	mov	x20, x2
00000000000192f8	mov	x22, x1
00000000000192fc	mov	x21, x0
0000000000019300	movi.16b	v0, #0x0
0000000000019304	stp	q0, q0, [sp]
0000000000019308	str	xzr, [sp, #0x20]
000000000001930c	mov	x8, sp
0000000000019310	add	x23, x8, #0x18
0000000000019314	adrp	x0, 97 ; 0x7a000
0000000000019318	add	x0, x0, #0x4e0
000000000001931c	ldr	x9, [x0]
0000000000019320	blr	x9
0000000000019324	ldr	x24, [x0]
0000000000019328	ldr	x9, [x24, #0x110]
000000000001932c	str	x8, [x24, #0x110]
0000000000019330	mov	x8, #0x500000000
0000000000019334	stp	x9, x8, [sp, #0x8]
0000000000019338	adr	x8, #0x7b1d1
000000000001933c	nop
0000000000019340	ldarb	w8, [x8]
0000000000019344	tbz	w8, #0x0, 0x1934c
0000000000019348	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001934c	mov	x0, x21
0000000000019350	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000019354	mov	x0, x21
0000000000019358	mov	x1, x22
000000000001935c	bl	"_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int"
0000000000019360	mov	x22, x0
0000000000019364	mov	x0, x21
0000000000019368	mov	x1, x23
000000000001936c	bl	"_kfun:kotlin.collections.HashMap.allocateValuesArray#internal"
0000000000019370	mov	x8, x0
0000000000019374	tbnz	w22, #0x1f, 0x19398
0000000000019378	ldr	w9, [x8, #0x8]
000000000001937c	cmp	w9, w22
0000000000019380	b.ls	0x193e0
0000000000019384	mov	x0, #0x0
0000000000019388	ldr	xzr, [x8]
000000000001938c	add	x8, x8, w22, sxtw #3
0000000000019390	add	x9, x8, #0x10
0000000000019394	b	0x193b8
0000000000019398	mvn	w9, w22
000000000001939c	ldr	w10, [x8, #0x8]
00000000000193a0	cmp	w10, w9
00000000000193a4	b.ls	0x193e0
00000000000193a8	add	x9, x8, w9, sxtw #3
00000000000193ac	ldr	x0, [x9, #0x10]!
00000000000193b0	str	x0, [sp, #0x20]
00000000000193b4	ldr	xzr, [x8]
00000000000193b8	str	x20, [x9]
00000000000193bc	str	x0, [x19]
00000000000193c0	ldr	x8, [sp, #0x8]
00000000000193c4	str	x8, [x24, #0x110]
00000000000193c8	ldp	x29, x30, [sp, #0x60]
00000000000193cc	ldp	x20, x19, [sp, #0x50]
00000000000193d0	ldp	x22, x21, [sp, #0x40]
00000000000193d4	ldp	x24, x23, [sp, #0x30]
00000000000193d8	add	sp, sp, #0x70
00000000000193dc	ret
00000000000193e0	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#putAll(kotlin.collections.Map<out|1:0,1:1>){}:
00000000000193e4	sub	sp, sp, #0x120
00000000000193e8	stp	x28, x27, [sp, #0xc0]
00000000000193ec	stp	x26, x25, [sp, #0xd0]
00000000000193f0	stp	x24, x23, [sp, #0xe0]
00000000000193f4	stp	x22, x21, [sp, #0xf0]
00000000000193f8	stp	x20, x19, [sp, #0x100]
00000000000193fc	stp	x29, x30, [sp, #0x110]
0000000000019400	add	x29, sp, #0x110
0000000000019404	mov	x20, x1
0000000000019408	mov	x19, x0
000000000001940c	movi.16b	v0, #0x0
0000000000019410	stp	q0, q0, [sp, #0x20]
0000000000019414	add	x8, sp, #0x20
0000000000019418	add	x21, x8, #0x18
000000000001941c	adrp	x0, 97 ; 0x7a000
0000000000019420	add	x0, x0, #0x4e0
0000000000019424	ldr	x9, [x0]
0000000000019428	blr	x9
000000000001942c	ldr	x25, [x0]
0000000000019430	ldr	x9, [x25, #0x110]
0000000000019434	str	x8, [x25, #0x110]
0000000000019438	mov	x8, #0x400000000
000000000001943c	stp	x9, x8, [sp, #0x28]
0000000000019440	adr	x8, #0x7b0c9
0000000000019444	nop
0000000000019448	ldarb	w8, [x8]
000000000001944c	tbz	w8, #0x0, 0x19454
0000000000019450	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019454	mov	x0, x19
0000000000019458	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001945c	ldr	x8, [x20]
0000000000019460	and	x8, x8, #0xfffffffffffffffc
0000000000019464	ldr	x8, [x8]
0000000000019468	ldr	w9, [x8, #0x3c]
000000000001946c	ldr	x8, [x8, #0x40]
0000000000019470	tbnz	w9, #0x1f, 0x19480
0000000000019474	mov	w10, #0x41
0000000000019478	and	x9, x9, x10
000000000001947c	b	0x19504
0000000000019480	neg	w10, w9
0000000000019484	mvn	w9, w9
0000000000019488	cmp	w10, #0x9
000000000001948c	b.ge	0x194c4
0000000000019490	cmp	w10, #0x2
0000000000019494	b.lt	0x194f8
0000000000019498	mov	x10, #0x0
000000000001949c	mov	x11, x8
00000000000194a0	ldr	w12, [x11]
00000000000194a4	cmp	w12, #0x40
00000000000194a8	b.gt	0x19500
00000000000194ac	add	x10, x10, #0x1
00000000000194b0	add	x11, x11, #0x10
00000000000194b4	cmp	x9, x10
00000000000194b8	b.ne	0x194a0
00000000000194bc	mov	x10, x9
00000000000194c0	b	0x19500
00000000000194c4	mov	w10, #0x0
00000000000194c8	add	w11, w9, w10
00000000000194cc	cmp	w11, #0x0
00000000000194d0	cinc	w11, w11, lt
00000000000194d4	asr	w11, w11, #1
00000000000194d8	sbfiz	x12, x11, #4, #32
00000000000194dc	ldr	w12, [x8, x12]
00000000000194e0	cmp	w12, #0x41
00000000000194e4	csinc	w10, w10, w11, ge
00000000000194e8	csel	w9, w9, w11, lt
00000000000194ec	cmp	w10, w9
00000000000194f0	b.lt	0x194c8
00000000000194f4	b	0x19500
00000000000194f8	mov	w10, #0x0
00000000000194fc	b	0x19500
0000000000019500	sxtw	x9, w10
0000000000019504	add	x8, x8, x9, lsl #4
0000000000019508	ldr	x8, [x8, #0x8]
000000000001950c	ldr	x8, [x8]
0000000000019510	mov	x0, x20
0000000000019514	mov	x1, x21
0000000000019518	blr	x8
000000000001951c	mov	x21, x0
0000000000019520	movi.16b	v0, #0x0
0000000000019524	stp	q0, q0, [sp, #0x40]
0000000000019528	str	xzr, [sp, #0x60]
000000000001952c	add	x20, sp, #0x40
0000000000019530	ldr	x8, [x25, #0x110]
0000000000019534	str	x20, [x25, #0x110]
0000000000019538	mov	x9, #0x500000000
000000000001953c	stp	x8, x9, [sp, #0x48]
0000000000019540	ldr	x8, [x0]
0000000000019544	and	x8, x8, #0xfffffffffffffffc
0000000000019548	ldr	x8, [x8]
000000000001954c	ldr	w9, [x8, #0x3c]
0000000000019550	ldr	x8, [x8, #0x40]
0000000000019554	tbnz	w9, #0x1f, 0x1957c
0000000000019558	mov	w10, #0x12
000000000001955c	and	x9, x9, x10
0000000000019560	add	x8, x8, x9, lsl #4
0000000000019564	ldr	x8, [x8, #0x8]
0000000000019568	ldr	x8, [x8, #0x18]
000000000001956c	mov	x0, x21
0000000000019570	blr	x8
0000000000019574	tbz	w0, #0x0, 0x19640
0000000000019578	b	0x19618
000000000001957c	neg	w10, w9
0000000000019580	mvn	w9, w9
0000000000019584	cmp	w10, #0x9
0000000000019588	b.ge	0x195c0
000000000001958c	cmp	w10, #0x2
0000000000019590	b.lt	0x195f4
0000000000019594	mov	x10, #0x0
0000000000019598	mov	x11, x8
000000000001959c	ldr	w12, [x11]
00000000000195a0	cmp	w12, #0x11
00000000000195a4	b.gt	0x195fc
00000000000195a8	add	x10, x10, #0x1
00000000000195ac	add	x11, x11, #0x10
00000000000195b0	cmp	x9, x10
00000000000195b4	b.ne	0x1959c
00000000000195b8	mov	x10, x9
00000000000195bc	b	0x195fc
00000000000195c0	mov	w10, #0x0
00000000000195c4	add	w11, w9, w10
00000000000195c8	cmp	w11, #0x0
00000000000195cc	cinc	w11, w11, lt
00000000000195d0	asr	w11, w11, #1
00000000000195d4	sbfiz	x12, x11, #4, #32
00000000000195d8	ldr	w12, [x8, x12]
00000000000195dc	cmp	w12, #0x12
00000000000195e0	csinc	w10, w10, w11, ge
00000000000195e4	csel	w9, w9, w11, lt
00000000000195e8	cmp	w10, w9
00000000000195ec	b.lt	0x195c4
00000000000195f0	b	0x195fc
00000000000195f4	mov	w10, #0x0
00000000000195f8	b	0x195fc
00000000000195fc	sxtw	x9, w10
0000000000019600	add	x8, x8, x9, lsl #4
0000000000019604	ldr	x8, [x8, #0x8]
0000000000019608	ldr	x8, [x8, #0x18]
000000000001960c	mov	x0, x21
0000000000019610	blr	x8
0000000000019614	tbz	w0, #0x0, 0x19640
0000000000019618	ldr	x8, [sp, #0x28]
000000000001961c	str	x8, [x25, #0x110]
0000000000019620	ldp	x29, x30, [sp, #0x110]
0000000000019624	ldp	x20, x19, [sp, #0x100]
0000000000019628	ldp	x22, x21, [sp, #0xf0]
000000000001962c	ldp	x24, x23, [sp, #0xe0]
0000000000019630	ldp	x26, x25, [sp, #0xd0]
0000000000019634	ldp	x28, x27, [sp, #0xc0]
0000000000019638	add	sp, sp, #0x120
000000000001963c	ret
0000000000019640	add	x22, x20, #0x18
0000000000019644	ldr	x8, [x21]
0000000000019648	and	x8, x8, #0xfffffffffffffffc
000000000001964c	ldr	x8, [x8]
0000000000019650	ldr	w9, [x8, #0x3c]
0000000000019654	ldr	x8, [x8, #0x40]
0000000000019658	tbnz	w9, #0x1f, 0x19668
000000000001965c	mov	w10, #0x12
0000000000019660	and	x9, x9, x10
0000000000019664	b	0x196ec
0000000000019668	neg	w10, w9
000000000001966c	mvn	w9, w9
0000000000019670	cmp	w10, #0x9
0000000000019674	b.ge	0x196ac
0000000000019678	cmp	w10, #0x2
000000000001967c	b.lt	0x196e0
0000000000019680	mov	x10, #0x0
0000000000019684	mov	x11, x8
0000000000019688	ldr	w12, [x11]
000000000001968c	cmp	w12, #0x11
0000000000019690	b.gt	0x196e8
0000000000019694	add	x10, x10, #0x1
0000000000019698	add	x11, x11, #0x10
000000000001969c	cmp	x9, x10
00000000000196a0	b.ne	0x19688
00000000000196a4	mov	x10, x9
00000000000196a8	b	0x196e8
00000000000196ac	mov	w10, #0x0
00000000000196b0	add	w11, w9, w10
00000000000196b4	cmp	w11, #0x0
00000000000196b8	cinc	w11, w11, lt
00000000000196bc	asr	w11, w11, #1
00000000000196c0	sbfiz	x12, x11, #4, #32
00000000000196c4	ldr	w12, [x8, x12]
00000000000196c8	cmp	w12, #0x12
00000000000196cc	csinc	w10, w10, w11, ge
00000000000196d0	csel	w9, w9, w11, lt
00000000000196d4	cmp	w10, w9
00000000000196d8	b.lt	0x196b0
00000000000196dc	b	0x196e8
00000000000196e0	mov	w10, #0x0
00000000000196e4	b	0x196e8
00000000000196e8	sxtw	x9, w10
00000000000196ec	add	x10, x20, #0x20
00000000000196f0	str	x10, [sp, #0x18]
00000000000196f4	add	x8, x8, x9, lsl #4
00000000000196f8	ldr	x8, [x8, #0x8]
00000000000196fc	ldr	x8, [x8]
0000000000019700	mov	x0, x21
0000000000019704	blr	x8
0000000000019708	mov	x1, x0
000000000001970c	mov	x0, x19
0000000000019710	bl	"_kfun:kotlin.collections.HashMap.ensureExtraCapacity#internal"
0000000000019714	ldr	x8, [x21]
0000000000019718	and	x8, x8, #0xfffffffffffffffc
000000000001971c	ldr	x8, [x8]
0000000000019720	ldr	w9, [x8, #0x3c]
0000000000019724	ldr	x8, [x8, #0x40]
0000000000019728	tbnz	w9, #0x1f, 0x19738
000000000001972c	mov	w10, #0x12
0000000000019730	and	x9, x9, x10
0000000000019734	b	0x197bc
0000000000019738	neg	w10, w9
000000000001973c	mvn	w9, w9
0000000000019740	cmp	w10, #0x9
0000000000019744	b.ge	0x1977c
0000000000019748	cmp	w10, #0x2
000000000001974c	b.lt	0x197b0
0000000000019750	mov	x10, #0x0
0000000000019754	mov	x11, x8
0000000000019758	ldr	w12, [x11]
000000000001975c	cmp	w12, #0x11
0000000000019760	b.gt	0x197b8
0000000000019764	add	x10, x10, #0x1
0000000000019768	add	x11, x11, #0x10
000000000001976c	cmp	x9, x10
0000000000019770	b.ne	0x19758
0000000000019774	mov	x10, x9
0000000000019778	b	0x197b8
000000000001977c	mov	w10, #0x0
0000000000019780	add	w11, w9, w10
0000000000019784	cmp	w11, #0x0
0000000000019788	cinc	w11, w11, lt
000000000001978c	asr	w11, w11, #1
0000000000019790	sbfiz	x12, x11, #4, #32
0000000000019794	ldr	w12, [x8, x12]
0000000000019798	cmp	w12, #0x12
000000000001979c	csinc	w10, w10, w11, ge
00000000000197a0	csel	w9, w9, w11, lt
00000000000197a4	cmp	w10, w9
00000000000197a8	b.lt	0x19780
00000000000197ac	b	0x197b8
00000000000197b0	mov	w10, #0x0
00000000000197b4	b	0x197b8
00000000000197b8	sxtw	x9, w10
00000000000197bc	add	x8, x8, x9, lsl #4
00000000000197c0	ldr	x8, [x8, #0x8]
00000000000197c4	ldr	x8, [x8, #0x20]
00000000000197c8	mov	x0, x21
00000000000197cc	mov	x1, x22
00000000000197d0	blr	x8
00000000000197d4	mov	x21, x0
00000000000197d8	add	x8, sp, #0x70
00000000000197dc	add	x22, x8, #0x18
00000000000197e0	add	x23, x8, #0x20
00000000000197e4	add	x10, x8, #0x28
00000000000197e8	add	x9, x8, #0x38
00000000000197ec	stp	x9, x10, [sp, #0x8]
00000000000197f0	add	x8, x8, #0x40
00000000000197f4	str	x8, [sp]
00000000000197f8	b	0x1983c
00000000000197fc	mov	w10, #0xa8
0000000000019800	and	x9, x9, x10
0000000000019804	add	x8, x8, x9, lsl #4
0000000000019808	ldr	x8, [x8, #0x8]
000000000001980c	ldr	x8, [x8, #0x8]
0000000000019810	mov	x0, x27
0000000000019814	ldr	x1, [sp]
0000000000019818	blr	x8
000000000001981c	ldr	w8, [x28, #0x8]
0000000000019820	cmp	w8, w24
0000000000019824	b.ls	0x19d7c
0000000000019828	sxtw	x8, w24
000000000001982c	ldr	xzr, [x28]
0000000000019830	str	x0, [x20, x8, lsl #3]
0000000000019834	ldr	x8, [sp, #0x78]
0000000000019838	str	x8, [x25, #0x110]
000000000001983c	ldr	x8, [x21]
0000000000019840	and	x8, x8, #0xfffffffffffffffc
0000000000019844	ldr	x8, [x8]
0000000000019848	ldr	w9, [x8, #0x3c]
000000000001984c	ldr	x8, [x8, #0x40]
0000000000019850	tbnz	w9, #0x1f, 0x19878
0000000000019854	mov	w10, #0xa0
0000000000019858	and	x9, x9, x10
000000000001985c	add	x8, x8, x9, lsl #4
0000000000019860	ldr	x8, [x8, #0x8]
0000000000019864	ldr	x8, [x8]
0000000000019868	mov	x0, x21
000000000001986c	blr	x8
0000000000019870	tbnz	w0, #0x0, 0x19914
0000000000019874	b	0x19618
0000000000019878	neg	w10, w9
000000000001987c	mvn	w9, w9
0000000000019880	cmp	w10, #0x9
0000000000019884	b.ge	0x198bc
0000000000019888	cmp	w10, #0x2
000000000001988c	b.lt	0x198f0
0000000000019890	mov	x10, #0x0
0000000000019894	mov	x11, x8
0000000000019898	ldr	w12, [x11]
000000000001989c	cmp	w12, #0x9f
00000000000198a0	b.gt	0x198f8
00000000000198a4	add	x10, x10, #0x1
00000000000198a8	add	x11, x11, #0x10
00000000000198ac	cmp	x9, x10
00000000000198b0	b.ne	0x19898
00000000000198b4	mov	x10, x9
00000000000198b8	b	0x198f8
00000000000198bc	mov	w10, #0x0
00000000000198c0	add	w11, w9, w10
00000000000198c4	cmp	w11, #0x0
00000000000198c8	cinc	w11, w11, lt
00000000000198cc	asr	w11, w11, #1
00000000000198d0	sbfiz	x12, x11, #4, #32
00000000000198d4	ldr	w12, [x8, x12]
00000000000198d8	cmp	w12, #0xa0
00000000000198dc	csinc	w10, w10, w11, ge
00000000000198e0	csel	w9, w9, w11, lt
00000000000198e4	cmp	w10, w9
00000000000198e8	b.lt	0x198c0
00000000000198ec	b	0x198f8
00000000000198f0	mov	w10, #0x0
00000000000198f4	b	0x198f8
00000000000198f8	sxtw	x9, w10
00000000000198fc	add	x8, x8, x9, lsl #4
0000000000019900	ldr	x8, [x8, #0x8]
0000000000019904	ldr	x8, [x8]
0000000000019908	mov	x0, x21
000000000001990c	blr	x8
0000000000019910	tbz	w0, #0x0, 0x19618
0000000000019914	adr	x8, #0x7abf5
0000000000019918	nop
000000000001991c	ldarb	w8, [x8]
0000000000019920	tbz	w8, #0x0, 0x19928
0000000000019924	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019928	ldr	x8, [x21]
000000000001992c	and	x8, x8, #0xfffffffffffffffc
0000000000019930	ldr	x8, [x8]
0000000000019934	ldr	w9, [x8, #0x3c]
0000000000019938	ldr	x8, [x8, #0x40]
000000000001993c	tbnz	w9, #0x1f, 0x1994c
0000000000019940	mov	w10, #0xa0
0000000000019944	and	x9, x9, x10
0000000000019948	b	0x199d0
000000000001994c	neg	w10, w9
0000000000019950	mvn	w9, w9
0000000000019954	cmp	w10, #0x9
0000000000019958	b.ge	0x19990
000000000001995c	cmp	w10, #0x2
0000000000019960	b.lt	0x199c4
0000000000019964	mov	x10, #0x0
0000000000019968	mov	x11, x8
000000000001996c	ldr	w12, [x11]
0000000000019970	cmp	w12, #0x9f
0000000000019974	b.gt	0x199cc
0000000000019978	add	x10, x10, #0x1
000000000001997c	add	x11, x11, #0x10
0000000000019980	cmp	x9, x10
0000000000019984	b.ne	0x1996c
0000000000019988	mov	x10, x9
000000000001998c	b	0x199cc
0000000000019990	mov	w10, #0x0
0000000000019994	add	w11, w9, w10
0000000000019998	cmp	w11, #0x0
000000000001999c	cinc	w11, w11, lt
00000000000199a0	asr	w11, w11, #1
00000000000199a4	sbfiz	x12, x11, #4, #32
00000000000199a8	ldr	w12, [x8, x12]
00000000000199ac	cmp	w12, #0xa0
00000000000199b0	csinc	w10, w10, w11, ge
00000000000199b4	csel	w9, w9, w11, lt
00000000000199b8	cmp	w10, w9
00000000000199bc	b.lt	0x19994
00000000000199c0	b	0x199cc
00000000000199c4	mov	w10, #0x0
00000000000199c8	b	0x199cc
00000000000199cc	sxtw	x9, w10
00000000000199d0	add	x8, x8, x9, lsl #4
00000000000199d4	ldr	x8, [x8, #0x8]
00000000000199d8	ldr	x8, [x8, #0x8]
00000000000199dc	mov	x0, x21
00000000000199e0	ldr	x1, [sp, #0x18]
00000000000199e4	blr	x8
00000000000199e8	mov	x27, x0
00000000000199ec	movi.16b	v0, #0x0
00000000000199f0	stp	q0, q0, [sp, #0x70]
00000000000199f4	str	xzr, [sp, #0xb0]
00000000000199f8	stp	q0, q0, [sp, #0x90]
00000000000199fc	ldr	x10, [x25, #0x110]
0000000000019a00	add	x9, sp, #0x70
0000000000019a04	str	x9, [x25, #0x110]
0000000000019a08	mov	x8, #0x900000000
0000000000019a0c	stp	x10, x8, [sp, #0x78]
0000000000019a10	ldr	x8, [x0]
0000000000019a14	and	x8, x8, #0xfffffffffffffffc
0000000000019a18	ldr	x8, [x8]
0000000000019a1c	ldr	w9, [x8, #0x3c]
0000000000019a20	ldr	x8, [x8, #0x40]
0000000000019a24	tbnz	w9, #0x1f, 0x19a34
0000000000019a28	mov	w10, #0xa8
0000000000019a2c	and	x9, x9, x10
0000000000019a30	b	0x19ab8
0000000000019a34	neg	w10, w9
0000000000019a38	mvn	w9, w9
0000000000019a3c	cmp	w10, #0x9
0000000000019a40	b.ge	0x19a78
0000000000019a44	cmp	w10, #0x2
0000000000019a48	b.lt	0x19aac
0000000000019a4c	mov	x10, #0x0
0000000000019a50	mov	x11, x8
0000000000019a54	ldr	w12, [x11]
0000000000019a58	cmp	w12, #0xa7
0000000000019a5c	b.gt	0x19ab4
0000000000019a60	add	x10, x10, #0x1
0000000000019a64	add	x11, x11, #0x10
0000000000019a68	cmp	x9, x10
0000000000019a6c	b.ne	0x19a54
0000000000019a70	mov	x10, x9
0000000000019a74	b	0x19ab4
0000000000019a78	mov	w10, #0x0
0000000000019a7c	add	w11, w9, w10
0000000000019a80	cmp	w11, #0x0
0000000000019a84	cinc	w11, w11, lt
0000000000019a88	asr	w11, w11, #1
0000000000019a8c	sbfiz	x12, x11, #4, #32
0000000000019a90	ldr	w12, [x8, x12]
0000000000019a94	cmp	w12, #0xa8
0000000000019a98	csinc	w10, w10, w11, ge
0000000000019a9c	csel	w9, w9, w11, lt
0000000000019aa0	cmp	w10, w9
0000000000019aa4	b.lt	0x19a7c
0000000000019aa8	b	0x19ab4
0000000000019aac	mov	w10, #0x0
0000000000019ab0	b	0x19ab4
0000000000019ab4	sxtw	x9, w10
0000000000019ab8	add	x8, x8, x9, lsl #4
0000000000019abc	ldr	x8, [x8, #0x8]
0000000000019ac0	ldr	x8, [x8]
0000000000019ac4	mov	x0, x27
0000000000019ac8	mov	x1, x22
0000000000019acc	blr	x8
0000000000019ad0	mov	x1, x0
0000000000019ad4	mov	x0, x19
0000000000019ad8	bl	"_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int"
0000000000019adc	mov	x26, x0
0000000000019ae0	mov	x0, x19
0000000000019ae4	mov	x1, x23
0000000000019ae8	bl	"_kfun:kotlin.collections.HashMap.allocateValuesArray#internal"
0000000000019aec	mov	x28, x0
0000000000019af0	tbnz	w26, #0x1f, 0x19b18
0000000000019af4	ldr	x8, [x27]
0000000000019af8	and	x8, x8, #0xfffffffffffffffc
0000000000019afc	ldr	x8, [x8]
0000000000019b00	ldr	w9, [x8, #0x3c]
0000000000019b04	ldr	x8, [x8, #0x40]
0000000000019b08	tbnz	w9, #0x1f, 0x19b58
0000000000019b0c	mov	w10, #0xa8
0000000000019b10	and	x9, x9, x10
0000000000019b14	b	0x19c5c
0000000000019b18	mvn	w24, w26
0000000000019b1c	ldr	w8, [x28, #0x8]
0000000000019b20	cmp	w8, w24
0000000000019b24	b.ls	0x19d7c
0000000000019b28	add	x20, x28, #0x10
0000000000019b2c	ldr	x26, [x20, w24, sxtw #3]
0000000000019b30	str	x26, [sp, #0xa0]
0000000000019b34	ldr	x8, [x27]
0000000000019b38	and	x8, x8, #0xfffffffffffffffc
0000000000019b3c	ldr	x8, [x8]
0000000000019b40	ldr	w9, [x8, #0x3c]
0000000000019b44	ldr	x8, [x8, #0x40]
0000000000019b48	tbnz	w9, #0x1f, 0x19b9c
0000000000019b4c	mov	w10, #0xa8
0000000000019b50	and	x9, x9, x10
0000000000019b54	b	0x19c94
0000000000019b58	neg	w10, w9
0000000000019b5c	mvn	w9, w9
0000000000019b60	cmp	w10, #0x9
0000000000019b64	b.ge	0x19be0
0000000000019b68	cmp	w10, #0x2
0000000000019b6c	b.lt	0x19c48
0000000000019b70	mov	x10, #0x0
0000000000019b74	mov	x11, x8
0000000000019b78	ldr	w12, [x11]
0000000000019b7c	cmp	w12, #0xa7
0000000000019b80	b.gt	0x19c58
0000000000019b84	add	x10, x10, #0x1
0000000000019b88	add	x11, x11, #0x10
0000000000019b8c	cmp	x9, x10
0000000000019b90	b.ne	0x19b78
0000000000019b94	mov	x10, x9
0000000000019b98	b	0x19c58
0000000000019b9c	neg	w10, w9
0000000000019ba0	mvn	w9, w9
0000000000019ba4	cmp	w10, #0x9
0000000000019ba8	b.ge	0x19c14
0000000000019bac	cmp	w10, #0x2
0000000000019bb0	b.lt	0x19c50
0000000000019bb4	mov	x10, #0x0
0000000000019bb8	mov	x11, x8
0000000000019bbc	ldr	w12, [x11]
0000000000019bc0	cmp	w12, #0xa7
0000000000019bc4	b.gt	0x19c90
0000000000019bc8	add	x10, x10, #0x1
0000000000019bcc	add	x11, x11, #0x10
0000000000019bd0	cmp	x9, x10
0000000000019bd4	b.ne	0x19bbc
0000000000019bd8	mov	x10, x9
0000000000019bdc	b	0x19c90
0000000000019be0	mov	w10, #0x0
0000000000019be4	add	w11, w9, w10
0000000000019be8	cmp	w11, #0x0
0000000000019bec	cinc	w11, w11, lt
0000000000019bf0	asr	w11, w11, #1
0000000000019bf4	sbfiz	x12, x11, #4, #32
0000000000019bf8	ldr	w12, [x8, x12]
0000000000019bfc	cmp	w12, #0xa8
0000000000019c00	csinc	w10, w10, w11, ge
0000000000019c04	csel	w9, w9, w11, lt
0000000000019c08	cmp	w10, w9
0000000000019c0c	b.lt	0x19be4
0000000000019c10	b	0x19c58
0000000000019c14	mov	w10, #0x0
0000000000019c18	add	w11, w9, w10
0000000000019c1c	cmp	w11, #0x0
0000000000019c20	cinc	w11, w11, lt
0000000000019c24	asr	w11, w11, #1
0000000000019c28	sbfiz	x12, x11, #4, #32
0000000000019c2c	ldr	w12, [x8, x12]
0000000000019c30	cmp	w12, #0xa8
0000000000019c34	csinc	w10, w10, w11, ge
0000000000019c38	csel	w9, w9, w11, lt
0000000000019c3c	cmp	w10, w9
0000000000019c40	b.lt	0x19c18
0000000000019c44	b	0x19c90
0000000000019c48	mov	w10, #0x0
0000000000019c4c	b	0x19c58
0000000000019c50	mov	w10, #0x0
0000000000019c54	b	0x19c90
0000000000019c58	sxtw	x9, w10
0000000000019c5c	add	x8, x8, x9, lsl #4
0000000000019c60	ldr	x8, [x8, #0x8]
0000000000019c64	ldr	x8, [x8, #0x8]
0000000000019c68	mov	x0, x27
0000000000019c6c	ldr	x1, [sp, #0x10]
0000000000019c70	blr	x8
0000000000019c74	ldr	w8, [x28, #0x8]
0000000000019c78	cmp	w8, w26
0000000000019c7c	b.ls	0x19d7c
0000000000019c80	ldr	xzr, [x28]
0000000000019c84	add	x8, x28, w26, sxtw #3
0000000000019c88	str	x0, [x8, #0x10]
0000000000019c8c	b	0x19834
0000000000019c90	sxtw	x9, w10
0000000000019c94	add	x8, x8, x9, lsl #4
0000000000019c98	ldr	x8, [x8, #0x8]
0000000000019c9c	ldr	x8, [x8, #0x8]
0000000000019ca0	mov	x0, x27
0000000000019ca4	ldr	x1, [sp, #0x8]
0000000000019ca8	blr	x8
0000000000019cac	cbz	x0, 0x19cd0
0000000000019cb0	ldr	x8, [x0]
0000000000019cb4	and	x8, x8, #0xfffffffffffffffc
0000000000019cb8	ldr	x8, [x8]
0000000000019cbc	ldr	x8, [x8, #0x70]
0000000000019cc0	mov	x1, x26
0000000000019cc4	blr	x8
0000000000019cc8	tbnz	w0, #0x0, 0x19834
0000000000019ccc	b	0x19cd4
0000000000019cd0	cbz	x26, 0x19834
0000000000019cd4	ldr	x8, [x27]
0000000000019cd8	and	x8, x8, #0xfffffffffffffffc
0000000000019cdc	ldr	x8, [x8]
0000000000019ce0	ldr	w9, [x8, #0x3c]
0000000000019ce4	ldr	x8, [x8, #0x40]
0000000000019ce8	tbz	w9, #0x1f, 0x197fc
0000000000019cec	neg	w10, w9
0000000000019cf0	mvn	w9, w9
0000000000019cf4	cmp	w10, #0x9
0000000000019cf8	b.ge	0x19d34
0000000000019cfc	cmp	w10, #0x2
0000000000019d00	b.lt	0x19d68
0000000000019d04	mov	x10, #0x0
0000000000019d08	mov	x11, x8
0000000000019d0c	ldr	w12, [x11]
0000000000019d10	cmp	w12, #0xa7
0000000000019d14	b.gt	0x19d74
0000000000019d18	add	x10, x10, #0x1
0000000000019d1c	add	x11, x11, #0x10
0000000000019d20	cmp	x9, x10
0000000000019d24	b.ne	0x19d0c
0000000000019d28	mov	x10, x9
0000000000019d2c	sxtw	x9, w10
0000000000019d30	b	0x19804
0000000000019d34	mov	w10, #0x0
0000000000019d38	add	w11, w9, w10
0000000000019d3c	cmp	w11, #0x0
0000000000019d40	cinc	w11, w11, lt
0000000000019d44	asr	w11, w11, #1
0000000000019d48	sbfiz	x12, x11, #4, #32
0000000000019d4c	ldr	w12, [x8, x12]
0000000000019d50	cmp	w12, #0xa8
0000000000019d54	csinc	w10, w10, w11, ge
0000000000019d58	csel	w9, w9, w11, lt
0000000000019d5c	cmp	w10, w9
0000000000019d60	b.lt	0x19d38
0000000000019d64	b	0x19d74
0000000000019d68	mov	w10, #0x0
0000000000019d6c	sxtw	x9, w10
0000000000019d70	b	0x19804
0000000000019d74	sxtw	x9, w10
0000000000019d78	b	0x19804
0000000000019d7c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#remove(1:0){}1:1?:
0000000000019d80	sub	sp, sp, #0x60
0000000000019d84	stp	x22, x21, [sp, #0x30]
0000000000019d88	stp	x20, x19, [sp, #0x40]
0000000000019d8c	stp	x29, x30, [sp, #0x50]
0000000000019d90	add	x29, sp, #0x50
0000000000019d94	mov	x19, x2
0000000000019d98	mov	x21, x1
0000000000019d9c	mov	x20, x0
0000000000019da0	movi.16b	v0, #0x0
0000000000019da4	stp	q0, q0, [sp]
0000000000019da8	str	xzr, [sp, #0x20]
0000000000019dac	adrp	x0, 97 ; 0x7a000
0000000000019db0	add	x0, x0, #0x4e0
0000000000019db4	ldr	x8, [x0]
0000000000019db8	blr	x8
0000000000019dbc	ldr	x22, [x0]
0000000000019dc0	ldr	x8, [x22, #0x110]
0000000000019dc4	mov	x9, sp
0000000000019dc8	str	x9, [x22, #0x110]
0000000000019dcc	mov	x9, #0x500000000
0000000000019dd0	stp	x8, x9, [sp, #0x8]
0000000000019dd4	adr	x8, #0x7a735
0000000000019dd8	nop
0000000000019ddc	ldarb	w8, [x8]
0000000000019de0	tbz	w8, #0x0, 0x19de8
0000000000019de4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019de8	mov	x0, x20
0000000000019dec	mov	x1, x21
0000000000019df0	bl	"_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int"
0000000000019df4	tbnz	w0, #0x1f, 0x19e28
0000000000019df8	mov	x1, x0
0000000000019dfc	ldr	x0, [x20, #0x10]
0000000000019e00	str	x0, [sp, #0x18]
0000000000019e04	cbz	x0, 0x19e50
0000000000019e08	ldr	w8, [x0, #0x8]
0000000000019e0c	cmp	w8, w1
0000000000019e10	b.ls	0x19e54
0000000000019e14	add	x8, x0, w1, sxtw #3
0000000000019e18	ldr	x20, [x8, #0x10]
0000000000019e1c	str	x20, [sp, #0x20]
0000000000019e20	bl	"_kfun:kotlin.collections#resetAt__at__kotlin.Array<0:0>(kotlin.Int){0§<kotlin.Any?>}"
0000000000019e24	b	0x19e2c
0000000000019e28	mov	x20, #0x0
0000000000019e2c	str	x20, [x19]
0000000000019e30	ldr	x8, [sp, #0x8]
0000000000019e34	str	x8, [x22, #0x110]
0000000000019e38	mov	x0, x20
0000000000019e3c	ldp	x29, x30, [sp, #0x50]
0000000000019e40	ldp	x20, x19, [sp, #0x40]
0000000000019e44	ldp	x22, x21, [sp, #0x30]
0000000000019e48	add	sp, sp, #0x60
0000000000019e4c	ret
0000000000019e50	bl	_ThrowNullPointerException
0000000000019e54	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#clear(){}:
0000000000019e58	sub	sp, sp, #0x80
0000000000019e5c	stp	x24, x23, [sp, #0x40]
0000000000019e60	stp	x22, x21, [sp, #0x50]
0000000000019e64	stp	x20, x19, [sp, #0x60]
0000000000019e68	stp	x29, x30, [sp, #0x70]
0000000000019e6c	add	x29, sp, #0x70
0000000000019e70	mov	x19, x0
0000000000019e74	movi.16b	v0, #0x0
0000000000019e78	stp	q0, q0, [sp]
0000000000019e7c	stp	q0, q0, [sp, #0x20]
0000000000019e80	adrp	x0, 97 ; 0x7a000
0000000000019e84	add	x0, x0, #0x4e0
0000000000019e88	ldr	x8, [x0]
0000000000019e8c	blr	x8
0000000000019e90	ldr	x21, [x0]
0000000000019e94	ldr	x8, [x21, #0x110]
0000000000019e98	mov	x9, sp
0000000000019e9c	str	x9, [x21, #0x110]
0000000000019ea0	mov	x9, #0x800000000
0000000000019ea4	stp	x8, x9, [sp, #0x8]
0000000000019ea8	adr	x22, #0x7a661
0000000000019eac	nop
0000000000019eb0	ldarb	w8, [x22]
0000000000019eb4	tbz	w8, #0x0, 0x19ebc
0000000000019eb8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019ebc	mov	x0, x19
0000000000019ec0	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
0000000000019ec4	ldr	w20, [x19, #0x44]
0000000000019ec8	cmp	w20, #0x1
0000000000019ecc	b.mi	0x19f5c
0000000000019ed0	mov	x23, #0x0
0000000000019ed4	mov	w24, #-0x1
0000000000019ed8	b	0x19ef4
0000000000019edc	ldr	xzr, [x8]
0000000000019ee0	add	x8, x8, x23, lsl #2
0000000000019ee4	str	w24, [x8, #0x10]
0000000000019ee8	add	x23, x23, #0x1
0000000000019eec	cmp	w20, w23
0000000000019ef0	b.eq	0x19f58
0000000000019ef4	ldarb	w8, [x22]
0000000000019ef8	tbz	w8, #0x0, 0x19f00
0000000000019efc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000019f00	ldr	x8, [x19, #0x18]
0000000000019f04	str	x8, [sp, #0x18]
0000000000019f08	ldr	w9, [x8, #0x8]
0000000000019f0c	cmp	w9, w23
0000000000019f10	b.ls	0x19f54
0000000000019f14	add	x8, x8, x23, lsl #2
0000000000019f18	ldrsw	x8, [x8, #0x10]
0000000000019f1c	tbnz	w8, #0x1f, 0x19ee8
0000000000019f20	ldr	x9, [x19, #0x20]
0000000000019f24	str	x9, [sp, #0x20]
0000000000019f28	ldr	w10, [x9, #0x8]
0000000000019f2c	cmp	w10, w8
0000000000019f30	b.ls	0x19f54
0000000000019f34	ldr	xzr, [x9]
0000000000019f38	add	x8, x9, x8, lsl #2
0000000000019f3c	str	wzr, [x8, #0x10]
0000000000019f40	ldr	x8, [x19, #0x18]
0000000000019f44	str	x8, [sp, #0x28]
0000000000019f48	ldr	w9, [x8, #0x8]
0000000000019f4c	cmp	w9, w23
0000000000019f50	b.hi	0x19edc
0000000000019f54	bl	_ThrowArrayIndexOutOfBoundsException
0000000000019f58	ldr	w20, [x19, #0x44]
0000000000019f5c	ldr	x0, [x19, #0x8]
0000000000019f60	str	x0, [sp, #0x30]
0000000000019f64	mov	w1, #0x0
0000000000019f68	mov	x2, x20
0000000000019f6c	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}"
0000000000019f70	ldr	x0, [x19, #0x10]
0000000000019f74	str	x0, [sp, #0x38]
0000000000019f78	cbz	x0, 0x19f88
0000000000019f7c	ldr	w2, [x19, #0x44]
0000000000019f80	mov	w1, #0x0
0000000000019f84	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}"
0000000000019f88	str	wzr, [x19, #0x4c]
0000000000019f8c	str	wzr, [x19, #0x44]
0000000000019f90	ldr	x8, [sp, #0x8]
0000000000019f94	str	x8, [x21, #0x110]
0000000000019f98	ldp	x29, x30, [sp, #0x70]
0000000000019f9c	ldp	x20, x19, [sp, #0x60]
0000000000019fa0	ldp	x22, x21, [sp, #0x50]
0000000000019fa4	ldp	x24, x23, [sp, #0x40]
0000000000019fa8	add	sp, sp, #0x80
0000000000019fac	ret
_kfun:kotlin.collections.HashMap#<get-keys>(){}kotlin.collections.MutableSet<1:0>:
0000000000019fb0	sub	sp, sp, #0x60
0000000000019fb4	stp	x22, x21, [sp, #0x30]
0000000000019fb8	stp	x20, x19, [sp, #0x40]
0000000000019fbc	stp	x29, x30, [sp, #0x50]
0000000000019fc0	add	x29, sp, #0x50
0000000000019fc4	mov	x19, x1
0000000000019fc8	mov	x20, x0
0000000000019fcc	movi.16b	v0, #0x0
0000000000019fd0	stp	q0, q0, [sp]
0000000000019fd4	str	xzr, [sp, #0x20]
0000000000019fd8	adrp	x0, 97 ; 0x7a000
0000000000019fdc	add	x0, x0, #0x4e0
0000000000019fe0	ldr	x8, [x0]
0000000000019fe4	blr	x8
0000000000019fe8	ldr	x21, [x0]
0000000000019fec	ldr	x8, [x21, #0x110]
0000000000019ff0	mov	x9, sp
0000000000019ff4	str	x9, [x21, #0x110]
0000000000019ff8	mov	x9, #0x500000000
0000000000019ffc	stp	x8, x9, [sp, #0x8]
000000000001a000	adr	x8, #0x7a509
000000000001a004	nop
000000000001a008	ldarb	w8, [x8]
000000000001a00c	tbz	w8, #0x0, 0x1a014
000000000001a010	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a014	ldr	x0, [x20, #0x28]
000000000001a018	str	x0, [sp, #0x18]
000000000001a01c	cbnz	x0, 0x1a04c
000000000001a020	ldr	x8, [x21, #0x118]
000000000001a024	add	x0, x8, #0x70
000000000001a028	mov	w1, #0x18
000000000001a02c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001a030	adr	x8, #0x4a330
000000000001a034	nop
000000000001a038	str	x8, [x0, #0x10]!
000000000001a03c	stur	xzr, [x0, #-0x8]
000000000001a040	str	x0, [sp, #0x20]
000000000001a044	str	x20, [x0, #0x8]
000000000001a048	str	x0, [x20, #0x28]
000000000001a04c	str	x0, [x19]
000000000001a050	ldr	x8, [sp, #0x8]
000000000001a054	str	x8, [x21, #0x110]
000000000001a058	ldp	x29, x30, [sp, #0x50]
000000000001a05c	ldp	x20, x19, [sp, #0x40]
000000000001a060	ldp	x22, x21, [sp, #0x30]
000000000001a064	add	sp, sp, #0x60
000000000001a068	ret
_kfun:kotlin.collections.HashMap#<get-values>(){}kotlin.collections.MutableCollection<1:1>:
000000000001a06c	sub	sp, sp, #0x60
000000000001a070	stp	x22, x21, [sp, #0x30]
000000000001a074	stp	x20, x19, [sp, #0x40]
000000000001a078	stp	x29, x30, [sp, #0x50]
000000000001a07c	add	x29, sp, #0x50
000000000001a080	mov	x19, x1
000000000001a084	mov	x20, x0
000000000001a088	movi.16b	v0, #0x0
000000000001a08c	stp	q0, q0, [sp]
000000000001a090	str	xzr, [sp, #0x20]
000000000001a094	adrp	x0, 96 ; 0x7a000
000000000001a098	add	x0, x0, #0x4e0
000000000001a09c	ldr	x8, [x0]
000000000001a0a0	blr	x8
000000000001a0a4	ldr	x21, [x0]
000000000001a0a8	ldr	x8, [x21, #0x110]
000000000001a0ac	mov	x9, sp
000000000001a0b0	str	x9, [x21, #0x110]
000000000001a0b4	mov	x9, #0x500000000
000000000001a0b8	stp	x8, x9, [sp, #0x8]
000000000001a0bc	adr	x8, #0x7a44d
000000000001a0c0	nop
000000000001a0c4	ldarb	w8, [x8]
000000000001a0c8	tbz	w8, #0x0, 0x1a0d0
000000000001a0cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a0d0	ldr	x0, [x20, #0x30]
000000000001a0d4	str	x0, [sp, #0x18]
000000000001a0d8	cbnz	x0, 0x1a108
000000000001a0dc	ldr	x8, [x21, #0x118]
000000000001a0e0	add	x0, x8, #0x70
000000000001a0e4	mov	w1, #0x18
000000000001a0e8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001a0ec	adr	x8, #0x4a364
000000000001a0f0	nop
000000000001a0f4	str	x8, [x0, #0x10]!
000000000001a0f8	stur	xzr, [x0, #-0x8]
000000000001a0fc	str	x0, [sp, #0x20]
000000000001a100	str	x20, [x0, #0x8]
000000000001a104	str	x0, [x20, #0x30]
000000000001a108	str	x0, [x19]
000000000001a10c	ldr	x8, [sp, #0x8]
000000000001a110	str	x8, [x21, #0x110]
000000000001a114	ldp	x29, x30, [sp, #0x50]
000000000001a118	ldp	x20, x19, [sp, #0x40]
000000000001a11c	ldp	x22, x21, [sp, #0x30]
000000000001a120	add	sp, sp, #0x60
000000000001a124	ret
_kfun:kotlin.collections.HashMap#<get-entries>(){}kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<1:0,1:1>>:
000000000001a128	sub	sp, sp, #0x60
000000000001a12c	stp	x22, x21, [sp, #0x30]
000000000001a130	stp	x20, x19, [sp, #0x40]
000000000001a134	stp	x29, x30, [sp, #0x50]
000000000001a138	add	x29, sp, #0x50
000000000001a13c	mov	x19, x1
000000000001a140	mov	x20, x0
000000000001a144	movi.16b	v0, #0x0
000000000001a148	stp	q0, q0, [sp]
000000000001a14c	str	xzr, [sp, #0x20]
000000000001a150	adrp	x0, 96 ; 0x7a000
000000000001a154	add	x0, x0, #0x4e0
000000000001a158	ldr	x8, [x0]
000000000001a15c	blr	x8
000000000001a160	ldr	x21, [x0]
000000000001a164	ldr	x8, [x21, #0x110]
000000000001a168	mov	x9, sp
000000000001a16c	str	x9, [x21, #0x110]
000000000001a170	mov	x9, #0x500000000
000000000001a174	stp	x8, x9, [sp, #0x8]
000000000001a178	adr	x8, #0x7a391
000000000001a17c	nop
000000000001a180	ldarb	w8, [x8]
000000000001a184	tbz	w8, #0x0, 0x1a18c
000000000001a188	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a18c	ldr	x0, [x20, #0x38]
000000000001a190	str	x0, [sp, #0x18]
000000000001a194	cbnz	x0, 0x1a1c4
000000000001a198	ldr	x8, [x21, #0x118]
000000000001a19c	add	x0, x8, #0x70
000000000001a1a0	mov	w1, #0x18
000000000001a1a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001a1a8	adr	x8, #0x4a398
000000000001a1ac	nop
000000000001a1b0	str	x8, [x0, #0x10]!
000000000001a1b4	stur	xzr, [x0, #-0x8]
000000000001a1b8	str	x0, [sp, #0x20]
000000000001a1bc	str	x20, [x0, #0x8]
000000000001a1c0	str	x0, [x20, #0x38]
000000000001a1c4	str	x0, [x19]
000000000001a1c8	ldr	x8, [sp, #0x8]
000000000001a1cc	str	x8, [x21, #0x110]
000000000001a1d0	ldp	x29, x30, [sp, #0x50]
000000000001a1d4	ldp	x20, x19, [sp, #0x40]
000000000001a1d8	ldp	x22, x21, [sp, #0x30]
000000000001a1dc	add	sp, sp, #0x60
000000000001a1e0	ret
_kfun:kotlin.collections.HashMap#equals(kotlin.Any?){}kotlin.Boolean:
000000000001a1e4	sub	sp, sp, #0x60
000000000001a1e8	stp	x24, x23, [sp, #0x20]
000000000001a1ec	stp	x22, x21, [sp, #0x30]
000000000001a1f0	stp	x20, x19, [sp, #0x40]
000000000001a1f4	stp	x29, x30, [sp, #0x50]
000000000001a1f8	add	x29, sp, #0x50
000000000001a1fc	mov	x20, x1
000000000001a200	mov	x19, x0
000000000001a204	adr	x8, #0x7a305
000000000001a208	nop
000000000001a20c	ldarb	w8, [x8]
000000000001a210	tbz	w8, #0x0, 0x1a218
000000000001a214	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a218	cmp	x20, x19
000000000001a21c	b.eq	0x1a2b0
000000000001a220	cbz	x20, 0x1a398
000000000001a224	ldr	x8, [x20]
000000000001a228	and	x8, x8, #0xfffffffffffffffc
000000000001a22c	ldr	x8, [x8]
000000000001a230	ldr	w9, [x8, #0x3c]
000000000001a234	ldr	x8, [x8, #0x40]
000000000001a238	tbnz	w9, #0x1f, 0x1a2b8
000000000001a23c	mov	w10, #0x41
000000000001a240	and	x9, x9, x10
000000000001a244	lsl	x9, x9, #4
000000000001a248	ldr	w8, [x8, x9]
000000000001a24c	cmp	w8, #0x41
000000000001a250	b.ne	0x1a398
000000000001a254	movi.16b	v0, #0x0
000000000001a258	stp	q0, q0, [sp]
000000000001a25c	mov	x23, sp
000000000001a260	adrp	x21, 96 ; 0x7a000
000000000001a264	add	x21, x21, #0x4e0
000000000001a268	ldr	x22, [x21]
000000000001a26c	mov	x0, x21
000000000001a270	blr	x22
000000000001a274	ldr	x8, [x0]
000000000001a278	ldr	x9, [x8, #0x110]
000000000001a27c	str	x23, [x8, #0x110]
000000000001a280	mov	x8, #0x400000000
000000000001a284	stp	x9, x8, [sp, #0x8]
000000000001a288	ldr	w24, [x19, #0x4c]
000000000001a28c	ldr	x8, [x20]
000000000001a290	and	x8, x8, #0xfffffffffffffffc
000000000001a294	ldr	x8, [x8]
000000000001a298	ldr	w9, [x8, #0x3c]
000000000001a29c	ldr	x8, [x8, #0x40]
000000000001a2a0	tbnz	w9, #0x1f, 0x1a310
000000000001a2a4	mov	w10, #0x41
000000000001a2a8	and	x9, x9, x10
000000000001a2ac	b	0x1a414
000000000001a2b0	mov	w8, #0x1
000000000001a2b4	b	0x1a51c
000000000001a2b8	neg	w10, w9
000000000001a2bc	mvn	w9, w9
000000000001a2c0	cmp	w10, #0x9
000000000001a2c4	b.ge	0x1a354
000000000001a2c8	cmp	w10, #0x2
000000000001a2cc	b.lt	0x1a3a0
000000000001a2d0	mov	x10, #0x0
000000000001a2d4	mov	x11, x8
000000000001a2d8	ldr	w12, [x11]
000000000001a2dc	cmp	w12, #0x40
000000000001a2e0	b.gt	0x1a3f0
000000000001a2e4	add	x10, x10, #0x1
000000000001a2e8	add	x11, x11, #0x10
000000000001a2ec	cmp	x9, x10
000000000001a2f0	b.ne	0x1a2d8
000000000001a2f4	mov	x10, x9
000000000001a2f8	sxtw	x9, w10
000000000001a2fc	lsl	x9, x9, #4
000000000001a300	ldr	w8, [x8, x9]
000000000001a304	cmp	w8, #0x41
000000000001a308	b.ne	0x1a398
000000000001a30c	b	0x1a254
000000000001a310	neg	w10, w9
000000000001a314	mvn	w9, w9
000000000001a318	cmp	w10, #0x9
000000000001a31c	b.ge	0x1a3bc
000000000001a320	cmp	w10, #0x2
000000000001a324	b.lt	0x1a408
000000000001a328	mov	x10, #0x0
000000000001a32c	mov	x11, x8
000000000001a330	ldr	w12, [x11]
000000000001a334	cmp	w12, #0x40
000000000001a338	b.gt	0x1a410
000000000001a33c	add	x10, x10, #0x1
000000000001a340	add	x11, x11, #0x10
000000000001a344	cmp	x9, x10
000000000001a348	b.ne	0x1a330
000000000001a34c	mov	x10, x9
000000000001a350	b	0x1a410
000000000001a354	mov	w10, #0x0
000000000001a358	add	w11, w9, w10
000000000001a35c	cmp	w11, #0x0
000000000001a360	cinc	w11, w11, lt
000000000001a364	asr	w11, w11, #1
000000000001a368	sbfiz	x12, x11, #4, #32
000000000001a36c	ldr	w12, [x8, x12]
000000000001a370	cmp	w12, #0x41
000000000001a374	csinc	w10, w10, w11, ge
000000000001a378	csel	w9, w9, w11, lt
000000000001a37c	cmp	w10, w9
000000000001a380	b.lt	0x1a358
000000000001a384	sxtw	x9, w10
000000000001a388	lsl	x9, x9, #4
000000000001a38c	ldr	w8, [x8, x9]
000000000001a390	cmp	w8, #0x41
000000000001a394	b.eq	0x1a254
000000000001a398	mov	w8, #0x0
000000000001a39c	b	0x1a51c
000000000001a3a0	mov	w10, #0x0
000000000001a3a4	sxtw	x9, w10
000000000001a3a8	lsl	x9, x9, #4
000000000001a3ac	ldr	w8, [x8, x9]
000000000001a3b0	cmp	w8, #0x41
000000000001a3b4	b.eq	0x1a254
000000000001a3b8	b	0x1a398
000000000001a3bc	mov	w10, #0x0
000000000001a3c0	add	w11, w9, w10
000000000001a3c4	cmp	w11, #0x0
000000000001a3c8	cinc	w11, w11, lt
000000000001a3cc	asr	w11, w11, #1
000000000001a3d0	sbfiz	x12, x11, #4, #32
000000000001a3d4	ldr	w12, [x8, x12]
000000000001a3d8	cmp	w12, #0x41
000000000001a3dc	csinc	w10, w10, w11, ge
000000000001a3e0	csel	w9, w9, w11, lt
000000000001a3e4	cmp	w10, w9
000000000001a3e8	b.lt	0x1a3c0
000000000001a3ec	b	0x1a410
000000000001a3f0	sxtw	x9, w10
000000000001a3f4	lsl	x9, x9, #4
000000000001a3f8	ldr	w8, [x8, x9]
000000000001a3fc	cmp	w8, #0x41
000000000001a400	b.ne	0x1a398
000000000001a404	b	0x1a254
000000000001a408	mov	w10, #0x0
000000000001a40c	b	0x1a410
000000000001a410	sxtw	x9, w10
000000000001a414	add	x8, x8, x9, lsl #4
000000000001a418	ldr	x8, [x8, #0x8]
000000000001a41c	ldr	x8, [x8, #0x10]
000000000001a420	mov	x0, x20
000000000001a424	blr	x8
000000000001a428	cmp	w24, w0
000000000001a42c	b.ne	0x1a458
000000000001a430	add	x1, x23, #0x18
000000000001a434	ldr	x8, [x20]
000000000001a438	and	x8, x8, #0xfffffffffffffffc
000000000001a43c	ldr	x8, [x8]
000000000001a440	ldr	w9, [x8, #0x3c]
000000000001a444	ldr	x8, [x8, #0x40]
000000000001a448	tbnz	w9, #0x1f, 0x1a460
000000000001a44c	mov	w10, #0x41
000000000001a450	and	x9, x9, x10
000000000001a454	b	0x1a4e4
000000000001a458	mov	w8, #0x0
000000000001a45c	b	0x1a508
000000000001a460	neg	w10, w9
000000000001a464	mvn	w9, w9
000000000001a468	cmp	w10, #0x9
000000000001a46c	b.ge	0x1a4a4
000000000001a470	cmp	w10, #0x2
000000000001a474	b.lt	0x1a4d8
000000000001a478	mov	x10, #0x0
000000000001a47c	mov	x11, x8
000000000001a480	ldr	w12, [x11]
000000000001a484	cmp	w12, #0x40
000000000001a488	b.gt	0x1a4e0
000000000001a48c	add	x10, x10, #0x1
000000000001a490	add	x11, x11, #0x10
000000000001a494	cmp	x9, x10
000000000001a498	b.ne	0x1a480
000000000001a49c	mov	x10, x9
000000000001a4a0	b	0x1a4e0
000000000001a4a4	mov	w10, #0x0
000000000001a4a8	add	w11, w9, w10
000000000001a4ac	cmp	w11, #0x0
000000000001a4b0	cinc	w11, w11, lt
000000000001a4b4	asr	w11, w11, #1
000000000001a4b8	sbfiz	x12, x11, #4, #32
000000000001a4bc	ldr	w12, [x8, x12]
000000000001a4c0	cmp	w12, #0x41
000000000001a4c4	csinc	w10, w10, w11, ge
000000000001a4c8	csel	w9, w9, w11, lt
000000000001a4cc	cmp	w10, w9
000000000001a4d0	b.lt	0x1a4a8
000000000001a4d4	b	0x1a4e0
000000000001a4d8	mov	w10, #0x0
000000000001a4dc	b	0x1a4e0
000000000001a4e0	sxtw	x9, w10
000000000001a4e4	add	x8, x8, x9, lsl #4
000000000001a4e8	ldr	x8, [x8, #0x8]
000000000001a4ec	ldr	x8, [x8]
000000000001a4f0	mov	x0, x20
000000000001a4f4	blr	x8
000000000001a4f8	mov	x1, x0
000000000001a4fc	mov	x0, x19
000000000001a500	bl	"_kfun:kotlin.collections.HashMap#containsAllEntries(kotlin.collections.Collection<*>){}kotlin.Boolean"
000000000001a504	mov	x8, x0
000000000001a508	mov	x0, x21
000000000001a50c	blr	x22
000000000001a510	ldr	x9, [x0]
000000000001a514	ldr	x10, [sp, #0x8]
000000000001a518	str	x10, [x9, #0x110]
000000000001a51c	mov	x0, x8
000000000001a520	ldp	x29, x30, [sp, #0x50]
000000000001a524	ldp	x20, x19, [sp, #0x40]
000000000001a528	ldp	x22, x21, [sp, #0x30]
000000000001a52c	ldp	x24, x23, [sp, #0x20]
000000000001a530	add	sp, sp, #0x60
000000000001a534	ret
_kfun:kotlin.collections.HashMap#hashCode(){}kotlin.Int:
000000000001a538	sub	sp, sp, #0xb0
000000000001a53c	stp	x26, x25, [sp, #0x60]
000000000001a540	stp	x24, x23, [sp, #0x70]
000000000001a544	stp	x22, x21, [sp, #0x80]
000000000001a548	stp	x20, x19, [sp, #0x90]
000000000001a54c	stp	x29, x30, [sp, #0xa0]
000000000001a550	add	x29, sp, #0xa0
000000000001a554	mov	x19, x0
000000000001a558	movi.16b	v0, #0x0
000000000001a55c	stp	q0, q0, [sp]
000000000001a560	mov	x8, sp
000000000001a564	add	x20, x8, #0x18
000000000001a568	adrp	x0, 96 ; 0x7a000
000000000001a56c	add	x0, x0, #0x4e0
000000000001a570	ldr	x9, [x0]
000000000001a574	blr	x9
000000000001a578	ldr	x23, [x0]
000000000001a57c	ldr	x9, [x23, #0x110]
000000000001a580	str	x8, [x23, #0x110]
000000000001a584	mov	x8, #0x400000000
000000000001a588	stp	x9, x8, [sp, #0x8]
000000000001a58c	adr	x24, #0x79f7d
000000000001a590	nop
000000000001a594	ldarb	w8, [x24]
000000000001a598	tbz	w8, #0x0, 0x1a5a0
000000000001a59c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a5a0	mov	x0, x19
000000000001a5a4	mov	x1, x20
000000000001a5a8	bl	"_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>"
000000000001a5ac	mov	x20, x0
000000000001a5b0	mov	w19, #0x0
000000000001a5b4	add	x25, sp, #0x20
000000000001a5b8	mov	x26, #0x800000000
000000000001a5bc	b	0x1a5f0
000000000001a5c0	ldr	x8, [x0]
000000000001a5c4	and	x8, x8, #0xfffffffffffffffc
000000000001a5c8	ldr	x8, [x8]
000000000001a5cc	ldr	x8, [x8, #0x78]
000000000001a5d0	blr	x8
000000000001a5d4	mov	x22, x0
000000000001a5d8	mov	x0, x20
000000000001a5dc	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001a5e0	ldr	x8, [sp, #0x28]
000000000001a5e4	str	x8, [x23, #0x110]
000000000001a5e8	eor	w8, w21, w22
000000000001a5ec	add	w19, w19, w8
000000000001a5f0	ldr	w8, [x20, #0x10]
000000000001a5f4	ldr	x9, [x20, #0x8]
000000000001a5f8	ldr	w9, [x9, #0x44]
000000000001a5fc	cmp	w8, w9
000000000001a600	b.ge	0x1a6d4
000000000001a604	ldarb	w8, [x24]
000000000001a608	tbz	w8, #0x0, 0x1a610
000000000001a60c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a610	movi.16b	v0, #0x0
000000000001a614	stp	q0, q0, [sp, #0x20]
000000000001a618	stp	q0, q0, [sp, #0x40]
000000000001a61c	ldr	x8, [x23, #0x110]
000000000001a620	str	x25, [x23, #0x110]
000000000001a624	stp	x8, x26, [sp, #0x28]
000000000001a628	ldr	w8, [x20, #0x10]
000000000001a62c	ldr	x9, [x20, #0x8]
000000000001a630	ldr	w10, [x9, #0x44]
000000000001a634	cmp	w8, w10
000000000001a638	b.ge	0x1a700
000000000001a63c	add	w10, w8, #0x1
000000000001a640	stp	w10, w8, [x20, #0x10]
000000000001a644	ldr	x8, [x9, #0x8]
000000000001a648	str	x8, [sp, #0x40]
000000000001a64c	ldrsw	x9, [x20, #0x14]
000000000001a650	ldr	w10, [x8, #0x8]
000000000001a654	cmp	w10, w9
000000000001a658	b.ls	0x1a6fc
000000000001a65c	add	x8, x8, x9, lsl #3
000000000001a660	ldr	x0, [x8, #0x10]
000000000001a664	str	x0, [sp, #0x48]
000000000001a668	cbz	x0, 0x1a698
000000000001a66c	ldr	x8, [x0]
000000000001a670	and	x8, x8, #0xfffffffffffffffc
000000000001a674	ldr	x8, [x8]
000000000001a678	ldr	x8, [x8, #0x78]
000000000001a67c	blr	x8
000000000001a680	mov	x21, x0
000000000001a684	ldr	x8, [x20, #0x8]
000000000001a688	ldr	x8, [x8, #0x10]
000000000001a68c	str	x8, [sp, #0x50]
000000000001a690	cbnz	x8, 0x1a6ac
000000000001a694	b	0x1a738
000000000001a698	mov	w21, #0x0
000000000001a69c	ldr	x8, [x20, #0x8]
000000000001a6a0	ldr	x8, [x8, #0x10]
000000000001a6a4	str	x8, [sp, #0x50]
000000000001a6a8	cbz	x8, 0x1a738
000000000001a6ac	ldrsw	x9, [x20, #0x14]
000000000001a6b0	ldr	w10, [x8, #0x8]
000000000001a6b4	cmp	w10, w9
000000000001a6b8	b.ls	0x1a6fc
000000000001a6bc	add	x8, x8, x9, lsl #3
000000000001a6c0	ldr	x0, [x8, #0x10]
000000000001a6c4	str	x0, [sp, #0x58]
000000000001a6c8	cbnz	x0, 0x1a5c0
000000000001a6cc	mov	w22, #0x0
000000000001a6d0	b	0x1a5d8
000000000001a6d4	ldr	x8, [sp, #0x8]
000000000001a6d8	str	x8, [x23, #0x110]
000000000001a6dc	mov	x0, x19
000000000001a6e0	ldp	x29, x30, [sp, #0xa0]
000000000001a6e4	ldp	x20, x19, [sp, #0x90]
000000000001a6e8	ldp	x22, x21, [sp, #0x80]
000000000001a6ec	ldp	x24, x23, [sp, #0x70]
000000000001a6f0	ldp	x26, x25, [sp, #0x60]
000000000001a6f4	add	sp, sp, #0xb0
000000000001a6f8	ret
000000000001a6fc	bl	_ThrowArrayIndexOutOfBoundsException
000000000001a700	ldr	x8, [x23, #0x118]
000000000001a704	add	x0, x8, #0x70
000000000001a708	mov	w1, #0x38
000000000001a70c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001a710	mov	x19, x0
000000000001a714	adr	x8, #0x46c7c
000000000001a718	nop
000000000001a71c	str	x8, [x19, #0x10]!
000000000001a720	stur	xzr, [x19, #-0x8]
000000000001a724	str	x19, [sp, #0x38]
000000000001a728	mov	x0, x19
000000000001a72c	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001a730	mov	x0, x19
000000000001a734	bl	_ThrowException
000000000001a738	bl	_ThrowNullPointerException
_kfun:kotlin.collections.HashMap#toString(){}kotlin.String:
000000000001a73c	sub	sp, sp, #0x170
000000000001a740	stp	x28, x27, [sp, #0x110]
000000000001a744	stp	x26, x25, [sp, #0x120]
000000000001a748	stp	x24, x23, [sp, #0x130]
000000000001a74c	stp	x22, x21, [sp, #0x140]
000000000001a750	stp	x20, x19, [sp, #0x150]
000000000001a754	stp	x29, x30, [sp, #0x160]
000000000001a758	add	x29, sp, #0x160
000000000001a75c	str	x1, [sp]
000000000001a760	mov	x23, x0
000000000001a764	add	x19, sp, #0x80
000000000001a768	movi.16b	v0, #0x0
000000000001a76c	stp	q0, q0, [sp, #0x40]
000000000001a770	stp	q0, q0, [sp, #0x60]
000000000001a774	add	x8, sp, #0x40
000000000001a778	add	x24, x8, #0x20
000000000001a77c	add	x20, x8, #0x30
000000000001a780	add	x21, x8, #0x28
000000000001a784	stp	xzr, xzr, [sp, #0x30]
000000000001a788	adr	x9, #0x4a638
000000000001a78c	nop
000000000001a790	orr	x9, x9, #0x3
000000000001a794	str	x9, [sp, #0x28]
000000000001a798	adrp	x0, 96 ; 0x7a000
000000000001a79c	add	x0, x0, #0x4e0
000000000001a7a0	ldr	x9, [x0]
000000000001a7a4	blr	x9
000000000001a7a8	ldr	x22, [x0]
000000000001a7ac	ldr	x9, [x22, #0x110]
000000000001a7b0	str	x8, [x22, #0x110]
000000000001a7b4	mov	x8, #0x800000000
000000000001a7b8	stp	x9, x8, [sp, #0x48]
000000000001a7bc	adr	x8, #0x79d4d
000000000001a7c0	nop
000000000001a7c4	ldarb	w8, [x8]
000000000001a7c8	tbz	w8, #0x0, 0x1a7d0
000000000001a7cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a7d0	ldr	w8, [x23, #0x4c]
000000000001a7d4	add	w8, w8, w8, lsl #1
000000000001a7d8	add	w1, w8, #0x2
000000000001a7dc	add	x8, sp, #0x28
000000000001a7e0	str	x8, [sp, #0x58]
000000000001a7e4	add	x0, sp, #0x28
000000000001a7e8	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000001a7ec	adr	x1, #0x54e54
000000000001a7f0	nop
000000000001a7f4	add	x0, sp, #0x28
000000000001a7f8	mov	x2, x24
000000000001a7fc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001a800	mov	x0, x23
000000000001a804	mov	x1, x21
000000000001a808	bl	"_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>"
000000000001a80c	mov	x21, x0
000000000001a810	mov	w27, #0x0
000000000001a814	add	x9, x19, #0x30
000000000001a818	add	x8, x19, #0x38
000000000001a81c	stp	x8, x9, [sp, #0x18]
000000000001a820	add	x24, x19, #0x40
000000000001a824	add	x25, x19, #0x48
000000000001a828	add	x9, x19, #0x60
000000000001a82c	add	x8, x19, #0x68
000000000001a830	stp	x8, x9, [sp, #0x8]
000000000001a834	add	x28, x19, #0x70
000000000001a838	mov	x26, #0xf00000000
000000000001a83c	b	0x1a864
000000000001a840	mov	x1, #0x0
000000000001a844	add	x0, sp, #0x28
000000000001a848	mov	x2, x28
000000000001a84c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001a850	mov	x0, x21
000000000001a854	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001a858	ldr	x8, [sp, #0x88]
000000000001a85c	str	x8, [x22, #0x110]
000000000001a860	add	w27, w27, #0x1
000000000001a864	ldr	w8, [x21, #0x10]
000000000001a868	ldr	x9, [x21, #0x8]
000000000001a86c	ldr	w9, [x9, #0x44]
000000000001a870	cmp	w8, w9
000000000001a874	b.ge	0x1aa10
000000000001a878	adr	x8, #0x79c91
000000000001a87c	nop
000000000001a880	ldarb	w8, [x8]
000000000001a884	tbz	w8, #0x0, 0x1a88c
000000000001a888	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001a88c	cmp	w27, #0x1
000000000001a890	b.lt	0x1a8a8
000000000001a894	add	x0, sp, #0x28
000000000001a898	adr	x1, #0x539d8
000000000001a89c	nop
000000000001a8a0	mov	x2, x20
000000000001a8a4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001a8a8	movi.16b	v0, #0x0
000000000001a8ac	stp	q0, q0, [sp, #0x80]
000000000001a8b0	str	xzr, [sp, #0xf0]
000000000001a8b4	stp	q0, q0, [x19, #0x50]
000000000001a8b8	stp	q0, q0, [x19, #0x30]
000000000001a8bc	str	q0, [sp, #0xa0]
000000000001a8c0	ldr	x8, [x22, #0x110]
000000000001a8c4	str	x19, [x22, #0x110]
000000000001a8c8	stp	x8, x26, [sp, #0x88]
000000000001a8cc	ldr	w8, [x21, #0x10]
000000000001a8d0	ldr	x9, [x21, #0x8]
000000000001a8d4	ldr	w10, [x9, #0x44]
000000000001a8d8	cmp	w8, w10
000000000001a8dc	b.ge	0x1aa68
000000000001a8e0	add	w10, w8, #0x1
000000000001a8e4	stp	w10, w8, [x21, #0x10]
000000000001a8e8	ldr	x8, [x9, #0x8]
000000000001a8ec	str	x8, [sp, #0xa0]
000000000001a8f0	ldrsw	x9, [x21, #0x14]
000000000001a8f4	ldr	w10, [x8, #0x8]
000000000001a8f8	cmp	w10, w9
000000000001a8fc	b.ls	0x1aa64
000000000001a900	add	x8, x8, x9, lsl #3
000000000001a904	ldr	x23, [x8, #0x10]
000000000001a908	str	x23, [sp, #0xa8]
000000000001a90c	cbz	x23, 0x1a944
000000000001a910	ldr	x1, [x21, #0x8]
000000000001a914	ldr	x8, [x23]
000000000001a918	and	x8, x8, #0xfffffffffffffffc
000000000001a91c	ldr	x8, [x8]
000000000001a920	ldr	x8, [x8, #0x70]
000000000001a924	mov	x0, x23
000000000001a928	blr	x8
000000000001a92c	cbz	w0, 0x1a94c
000000000001a930	add	x0, sp, #0x28
000000000001a934	adr	x1, #0x54d4c
000000000001a938	nop
000000000001a93c	ldr	x2, [sp, #0x20]
000000000001a940	b	0x1a974
000000000001a944	mov	x1, #0x0
000000000001a948	b	0x1a96c
000000000001a94c	ldr	x8, [x23]
000000000001a950	and	x8, x8, #0xfffffffffffffffc
000000000001a954	ldr	x8, [x8]
000000000001a958	ldr	x8, [x8, #0x80]
000000000001a95c	mov	x0, x23
000000000001a960	ldr	x1, [sp, #0x18]
000000000001a964	blr	x8
000000000001a968	mov	x1, x0
000000000001a96c	add	x0, sp, #0x28
000000000001a970	mov	x2, x24
000000000001a974	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001a978	add	x0, sp, #0x28
000000000001a97c	mov	w1, #0x3d
000000000001a980	mov	x2, x25
000000000001a984	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Char){}kotlin.text.StringBuilder"
000000000001a988	ldr	x8, [x21, #0x8]
000000000001a98c	ldr	x8, [x8, #0x10]
000000000001a990	str	x8, [sp, #0xd0]
000000000001a994	cbz	x8, 0x1aaa0
000000000001a998	ldrsw	x9, [x21, #0x14]
000000000001a99c	ldr	w10, [x8, #0x8]
000000000001a9a0	cmp	w10, w9
000000000001a9a4	b.ls	0x1aa64
000000000001a9a8	add	x8, x8, x9, lsl #3
000000000001a9ac	ldr	x23, [x8, #0x10]
000000000001a9b0	str	x23, [sp, #0xd8]
000000000001a9b4	cbz	x23, 0x1a840
000000000001a9b8	ldr	x1, [x21, #0x8]
000000000001a9bc	ldr	x8, [x23]
000000000001a9c0	and	x8, x8, #0xfffffffffffffffc
000000000001a9c4	ldr	x8, [x8]
000000000001a9c8	ldr	x8, [x8, #0x70]
000000000001a9cc	mov	x0, x23
000000000001a9d0	blr	x8
000000000001a9d4	cbz	w0, 0x1a9ec
000000000001a9d8	add	x0, sp, #0x28
000000000001a9dc	adr	x1, #0x54ca4
000000000001a9e0	nop
000000000001a9e4	ldr	x2, [sp, #0x10]
000000000001a9e8	b	0x1a84c
000000000001a9ec	ldr	x8, [x23]
000000000001a9f0	and	x8, x8, #0xfffffffffffffffc
000000000001a9f4	ldr	x8, [x8]
000000000001a9f8	ldr	x8, [x8, #0x80]
000000000001a9fc	mov	x0, x23
000000000001aa00	ldr	x1, [sp, #0x8]
000000000001aa04	blr	x8
000000000001aa08	mov	x1, x0
000000000001aa0c	b	0x1a844
000000000001aa10	add	x8, sp, #0x40
000000000001aa14	add	x2, x8, #0x38
000000000001aa18	adr	x1, #0x54c48
000000000001aa1c	nop
000000000001aa20	add	x0, sp, #0x28
000000000001aa24	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001aa28	add	x0, sp, #0x28
000000000001aa2c	ldr	x19, [sp]
000000000001aa30	mov	x1, x19
000000000001aa34	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000001aa38	str	x0, [x19]
000000000001aa3c	ldr	x8, [sp, #0x48]
000000000001aa40	str	x8, [x22, #0x110]
000000000001aa44	ldp	x29, x30, [sp, #0x160]
000000000001aa48	ldp	x20, x19, [sp, #0x150]
000000000001aa4c	ldp	x22, x21, [sp, #0x140]
000000000001aa50	ldp	x24, x23, [sp, #0x130]
000000000001aa54	ldp	x26, x25, [sp, #0x120]
000000000001aa58	ldp	x28, x27, [sp, #0x110]
000000000001aa5c	add	sp, sp, #0x170
000000000001aa60	ret
000000000001aa64	bl	_ThrowArrayIndexOutOfBoundsException
000000000001aa68	ldr	x8, [x22, #0x118]
000000000001aa6c	add	x0, x8, #0x70
000000000001aa70	mov	w1, #0x38
000000000001aa74	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001aa78	mov	x19, x0
000000000001aa7c	adr	x8, #0x46914
000000000001aa80	nop
000000000001aa84	str	x8, [x19, #0x10]!
000000000001aa88	stur	xzr, [x19, #-0x8]
000000000001aa8c	str	x19, [sp, #0x98]
000000000001aa90	mov	x0, x19
000000000001aa94	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001aa98	mov	x0, x19
000000000001aa9c	bl	_ThrowException
000000000001aaa0	bl	_ThrowNullPointerException
_kfun:kotlin.collections.HashMap#checkIsMutable(){}:
000000000001aaa4	sub	sp, sp, #0x40
000000000001aaa8	stp	x20, x19, [sp, #0x20]
000000000001aaac	stp	x29, x30, [sp, #0x30]
000000000001aab0	add	x29, sp, #0x30
000000000001aab4	mov	x19, x0
000000000001aab8	movi.16b	v0, #0x0
000000000001aabc	stp	q0, q0, [sp]
000000000001aac0	adrp	x0, 96 ; 0x7a000
000000000001aac4	add	x0, x0, #0x4e0
000000000001aac8	ldr	x8, [x0]
000000000001aacc	blr	x8
000000000001aad0	ldr	x20, [x0]
000000000001aad4	ldr	x8, [x20, #0x110]
000000000001aad8	mov	x9, sp
000000000001aadc	str	x9, [x20, #0x110]
000000000001aae0	mov	x9, #0x400000000
000000000001aae4	stp	x8, x9, [sp, #0x8]
000000000001aae8	adr	x8, #0x79a21
000000000001aaec	nop
000000000001aaf0	ldarb	w8, [x8]
000000000001aaf4	tbz	w8, #0x0, 0x1aafc
000000000001aaf8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001aafc	ldrb	w8, [x19, #0x50]
000000000001ab00	cmp	w8, #0x1
000000000001ab04	b.eq	0x1ab20
000000000001ab08	ldr	x8, [sp, #0x8]
000000000001ab0c	str	x8, [x20, #0x110]
000000000001ab10	ldp	x29, x30, [sp, #0x30]
000000000001ab14	ldp	x20, x19, [sp, #0x20]
000000000001ab18	add	sp, sp, #0x40
000000000001ab1c	ret
000000000001ab20	ldr	x8, [x20, #0x118]
000000000001ab24	add	x0, x8, #0x70
000000000001ab28	mov	w1, #0x38
000000000001ab2c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ab30	mov	x19, x0
000000000001ab34	adr	x8, #0x46b7c
000000000001ab38	nop
000000000001ab3c	str	x8, [x19, #0x10]!
000000000001ab40	stur	xzr, [x19, #-0x8]
000000000001ab44	str	x19, [sp, #0x18]
000000000001ab48	mov	x0, x19
000000000001ab4c	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001ab50	mov	x0, x19
000000000001ab54	bl	_ThrowException
_kfun:kotlin.collections.HashMap.ensureExtraCapacity#internal:
000000000001ab58	sub	sp, sp, #0xb0
000000000001ab5c	stp	x24, x23, [sp, #0x70]
000000000001ab60	stp	x22, x21, [sp, #0x80]
000000000001ab64	stp	x20, x19, [sp, #0x90]
000000000001ab68	stp	x29, x30, [sp, #0xa0]
000000000001ab6c	add	x29, sp, #0xa0
000000000001ab70	mov	x20, x1
000000000001ab74	mov	x19, x0
000000000001ab78	adr	x8, #0x79991
000000000001ab7c	nop
000000000001ab80	ldarb	w8, [x8]
000000000001ab84	tbz	w8, #0x0, 0x1ab8c
000000000001ab88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ab8c	ldr	w8, [x19, #0x44]
000000000001ab90	add	w8, w8, w20
000000000001ab94	movi.16b	v0, #0x0
000000000001ab98	stp	q0, q0, [sp]
000000000001ab9c	stp	q0, q0, [sp, #0x30]
000000000001aba0	str	q0, [sp, #0x20]
000000000001aba4	mov	x24, sp
000000000001aba8	adrp	x20, 96 ; 0x7a000
000000000001abac	add	x20, x20, #0x4e0
000000000001abb0	ldr	x23, [x20]
000000000001abb4	mov	x0, x20
000000000001abb8	blr	x23
000000000001abbc	ldr	x9, [x0]
000000000001abc0	ldr	x10, [x9, #0x110]
000000000001abc4	str	x24, [x9, #0x110]
000000000001abc8	mov	x9, #0xa00000000
000000000001abcc	stp	x10, x9, [sp, #0x8]
000000000001abd0	tbnz	w8, #0x1f, 0x1ad74
000000000001abd4	stp	q0, q0, [sp, #0x50]
000000000001abd8	mov	x0, x20
000000000001abdc	blr	x23
000000000001abe0	ldr	x10, [x0]
000000000001abe4	ldr	x9, [x10, #0x110]
000000000001abe8	add	x11, sp, #0x50
000000000001abec	str	x11, [x10, #0x110]
000000000001abf0	ldr	x12, [x19, #0x8]
000000000001abf4	ldr	w12, [x12, #0x8]
000000000001abf8	str	x9, [x10, #0x110]
000000000001abfc	cmp	w12, w8
000000000001ac00	b.ge	0x1ace0
000000000001ac04	add	x2, x24, #0x28
000000000001ac08	add	x21, x24, #0x48
000000000001ac0c	movi.16b	v0, #0x0
000000000001ac10	stp	q0, q0, [sp, #0x50]
000000000001ac14	str	x11, [x10, #0x110]
000000000001ac18	ldr	x10, [x19, #0x8]
000000000001ac1c	ldr	w10, [x10, #0x8]
000000000001ac20	mov	x0, x20
000000000001ac24	blr	x23
000000000001ac28	ldr	x11, [x0]
000000000001ac2c	str	x9, [x11, #0x110]
000000000001ac30	add	w9, w10, w10, lsl #1
000000000001ac34	cmp	w9, #0x0
000000000001ac38	cinc	w9, w9, lt
000000000001ac3c	asr	w9, w9, #1
000000000001ac40	cmp	w9, w8
000000000001ac44	csel	w22, w8, w9, lt
000000000001ac48	ldr	x0, [x19, #0x8]
000000000001ac4c	str	x0, [sp, #0x20]
000000000001ac50	mov	x1, x22
000000000001ac54	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0>"
000000000001ac58	mov	x8, x0
000000000001ac5c	str	x0, [x19, #0x8]
000000000001ac60	ldr	x0, [x19, #0x10]
000000000001ac64	stp	x8, x0, [sp, #0x28]
000000000001ac68	cbz	x0, 0x1ac7c
000000000001ac6c	add	x2, x24, #0x38
000000000001ac70	mov	x1, x22
000000000001ac74	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0>"
000000000001ac78	str	x0, [sp, #0x38]
000000000001ac7c	str	x0, [x19, #0x10]
000000000001ac80	ldr	x0, [x19, #0x18]
000000000001ac84	str	x0, [sp, #0x40]
000000000001ac88	mov	x1, x22
000000000001ac8c	mov	x2, x21
000000000001ac90	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.IntArray(kotlin.Int;kotlin.Int){}kotlin.IntArray"
000000000001ac94	str	x0, [sp, #0x48]
000000000001ac98	str	x0, [x19, #0x18]
000000000001ac9c	mov	x0, x22
000000000001aca0	bl	"_kfun:kotlin.collections.HashMap.Companion.computeHashSize#internal"
000000000001aca4	mov	x1, x0
000000000001aca8	movi.16b	v0, #0x0
000000000001acac	stp	q0, q0, [sp, #0x50]
000000000001acb0	mov	x0, x20
000000000001acb4	blr	x23
000000000001acb8	ldr	x8, [x0]
000000000001acbc	ldr	x9, [x8, #0x110]
000000000001acc0	add	x10, sp, #0x50
000000000001acc4	str	x10, [x8, #0x110]
000000000001acc8	ldr	x10, [x19, #0x20]
000000000001accc	ldr	w10, [x10, #0x8]
000000000001acd0	str	x9, [x8, #0x110]
000000000001acd4	cmp	w1, w10
000000000001acd8	b.gt	0x1ad40
000000000001acdc	b	0x1ad48
000000000001ace0	ldr	w12, [x19, #0x44]
000000000001ace4	ldr	w13, [x19, #0x4c]
000000000001ace8	movi.16b	v0, #0x0
000000000001acec	stp	q0, q0, [sp, #0x50]
000000000001acf0	str	x11, [x10, #0x110]
000000000001acf4	ldr	x10, [x19, #0x8]
000000000001acf8	ldr	w11, [x10, #0x8]
000000000001acfc	mov	x0, x20
000000000001ad00	blr	x23
000000000001ad04	ldr	x10, [x0]
000000000001ad08	str	x9, [x10, #0x110]
000000000001ad0c	add	w8, w12, w8
000000000001ad10	sub	w8, w8, w13
000000000001ad14	cmp	w8, w11
000000000001ad18	b.le	0x1ad48
000000000001ad1c	stp	q0, q0, [sp, #0x50]
000000000001ad20	add	x8, sp, #0x50
000000000001ad24	str	x8, [x10, #0x110]
000000000001ad28	ldr	x8, [x19, #0x20]
000000000001ad2c	ldr	w1, [x8, #0x8]
000000000001ad30	mov	x0, x20
000000000001ad34	blr	x23
000000000001ad38	ldr	x8, [x0]
000000000001ad3c	str	x9, [x8, #0x110]
000000000001ad40	mov	x0, x19
000000000001ad44	bl	"_kfun:kotlin.collections.HashMap.rehash#internal"
000000000001ad48	mov	x0, x20
000000000001ad4c	blr	x23
000000000001ad50	ldr	x8, [x0]
000000000001ad54	ldr	x9, [sp, #0x8]
000000000001ad58	str	x9, [x8, #0x110]
000000000001ad5c	ldp	x29, x30, [sp, #0xa0]
000000000001ad60	ldp	x20, x19, [sp, #0x90]
000000000001ad64	ldp	x22, x21, [sp, #0x80]
000000000001ad68	ldp	x24, x23, [sp, #0x70]
000000000001ad6c	add	sp, sp, #0xb0
000000000001ad70	ret
000000000001ad74	mov	x0, x20
000000000001ad78	blr	x23
000000000001ad7c	ldr	x8, [x0]
000000000001ad80	ldr	x8, [x8, #0x118]
000000000001ad84	add	x0, x8, #0x70
000000000001ad88	mov	w1, #0x38
000000000001ad8c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ad90	mov	x19, x0
000000000001ad94	adr	x8, #0x46cdc
000000000001ad98	nop
000000000001ad9c	str	x8, [x19, #0x10]!
000000000001ada0	stur	xzr, [x19, #-0x8]
000000000001ada4	str	x19, [sp, #0x18]
000000000001ada8	mov	x0, x19
000000000001adac	mov	x1, #0x0
000000000001adb0	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001adb4	mov	x0, x19
000000000001adb8	bl	_ThrowException
_kfun:kotlin.collections.HashMap.allocateValuesArray#internal:
000000000001adbc	sub	sp, sp, #0x80
000000000001adc0	stp	x22, x21, [sp, #0x50]
000000000001adc4	stp	x20, x19, [sp, #0x60]
000000000001adc8	stp	x29, x30, [sp, #0x70]
000000000001adcc	add	x29, sp, #0x70
000000000001add0	mov	x19, x1
000000000001add4	mov	x20, x0
000000000001add8	movi.16b	v0, #0x0
000000000001addc	stp	q0, q0, [sp]
000000000001ade0	str	q0, [sp, #0x20]
000000000001ade4	adrp	x0, 96 ; 0x7a000
000000000001ade8	add	x0, x0, #0x4e0
000000000001adec	ldr	x8, [x0]
000000000001adf0	blr	x8
000000000001adf4	ldr	x21, [x0]
000000000001adf8	ldr	x8, [x21, #0x110]
000000000001adfc	mov	x9, sp
000000000001ae00	str	x9, [x21, #0x110]
000000000001ae04	mov	x9, #0x600000000
000000000001ae08	stp	x8, x9, [sp, #0x8]
000000000001ae0c	adr	x8, #0x796fd
000000000001ae10	nop
000000000001ae14	ldarb	w8, [x8]
000000000001ae18	tbz	w8, #0x0, 0x1ae20
000000000001ae1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ae20	ldr	x0, [x20, #0x10]
000000000001ae24	str	x0, [sp, #0x18]
000000000001ae28	cbnz	x0, 0x1ae84
000000000001ae2c	movi.16b	v0, #0x0
000000000001ae30	stp	q0, q0, [sp, #0x30]
000000000001ae34	ldr	x8, [x21, #0x110]
000000000001ae38	add	x9, sp, #0x30
000000000001ae3c	str	x9, [x21, #0x110]
000000000001ae40	ldr	x9, [x20, #0x8]
000000000001ae44	ldr	w22, [x9, #0x8]
000000000001ae48	str	x8, [x21, #0x110]
000000000001ae4c	tbnz	w22, #0x1f, 0x1aea4
000000000001ae50	ldr	x8, [x21, #0x118]
000000000001ae54	lsl	x9, x22, #3
000000000001ae58	add	x9, x9, #0x1f
000000000001ae5c	and	x1, x9, #0xffffffff8
000000000001ae60	add	x0, x8, #0x70
000000000001ae64	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ae68	adr	x8, #0x45f38
000000000001ae6c	nop
000000000001ae70	stp	x8, xzr, [x0, #0x10]!
000000000001ae74	stur	xzr, [x0, #-0x8]
000000000001ae78	str	w22, [x0, #0x8]
000000000001ae7c	str	x0, [sp, #0x28]
000000000001ae80	str	x0, [x20, #0x10]
000000000001ae84	str	x0, [x19]
000000000001ae88	ldr	x8, [sp, #0x8]
000000000001ae8c	str	x8, [x21, #0x110]
000000000001ae90	ldp	x29, x30, [sp, #0x70]
000000000001ae94	ldp	x20, x19, [sp, #0x60]
000000000001ae98	ldp	x22, x21, [sp, #0x50]
000000000001ae9c	add	sp, sp, #0x80
000000000001aea0	ret
000000000001aea4	ldr	x8, [x21, #0x118]
000000000001aea8	add	x0, x8, #0x70
000000000001aeac	mov	w1, #0x38
000000000001aeb0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001aeb4	mov	x19, x0
000000000001aeb8	adr	x8, #0x466b8
000000000001aebc	nop
000000000001aec0	str	x8, [x19, #0x10]!
000000000001aec4	stur	xzr, [x19, #-0x8]
000000000001aec8	str	x19, [sp, #0x20]
000000000001aecc	adr	x1, #0x53424
000000000001aed0	nop
000000000001aed4	mov	x0, x19
000000000001aed8	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000001aedc	mov	x0, x19
000000000001aee0	bl	_ThrowException
_kfun:kotlin.collections.HashMap.rehash#internal:
000000000001aee4	sub	sp, sp, #0x110
000000000001aee8	stp	x28, x27, [sp, #0xb0]
000000000001aeec	stp	x26, x25, [sp, #0xc0]
000000000001aef0	stp	x24, x23, [sp, #0xd0]
000000000001aef4	stp	x22, x21, [sp, #0xe0]
000000000001aef8	stp	x20, x19, [sp, #0xf0]
000000000001aefc	stp	x29, x30, [sp, #0x100]
000000000001af00	add	x29, sp, #0x100
000000000001af04	mov	x20, x1
000000000001af08	mov	x19, x0
000000000001af0c	movi.16b	v0, #0x0
000000000001af10	stp	q0, q0, [sp]
000000000001af14	str	q0, [sp, #0x20]
000000000001af18	adrp	x0, 96 ; 0x7a000
000000000001af1c	add	x0, x0, #0x4e0
000000000001af20	ldr	x8, [x0]
000000000001af24	blr	x8
000000000001af28	ldr	x23, [x0]
000000000001af2c	ldr	x8, [x23, #0x110]
000000000001af30	mov	x9, sp
000000000001af34	str	x9, [x23, #0x110]
000000000001af38	mov	x9, #0x600000000
000000000001af3c	stp	x8, x9, [sp, #0x8]
000000000001af40	adr	x24, #0x795c9
000000000001af44	nop
000000000001af48	ldarb	w8, [x24]
000000000001af4c	tbz	w8, #0x0, 0x1af54
000000000001af50	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001af54	ldr	w8, [x19, #0x44]
000000000001af58	ldr	w9, [x19, #0x4c]
000000000001af5c	cmp	w8, w9
000000000001af60	b.le	0x1b048
000000000001af64	mov	x25, #0x0
000000000001af68	mov	w21, #0x0
000000000001af6c	movi.16b	v0, #0x0
000000000001af70	stp	q0, q0, [sp, #0x30]
000000000001af74	stp	q0, q0, [sp, #0x60]
000000000001af78	str	q0, [sp, #0x50]
000000000001af7c	ldr	x8, [x23, #0x110]
000000000001af80	add	x9, sp, #0x30
000000000001af84	str	x9, [x23, #0x110]
000000000001af88	mov	x9, #0xa00000000
000000000001af8c	stp	x8, x9, [sp, #0x38]
000000000001af90	ldr	x22, [x19, #0x10]
000000000001af94	str	x22, [sp, #0x48]
000000000001af98	add	x26, x22, #0x10
000000000001af9c	b	0x1afa8
000000000001afa0	add	w21, w21, #0x1
000000000001afa4	add	x25, x25, #0x1
000000000001afa8	ldrsw	x2, [x19, #0x44]
000000000001afac	cmp	x25, x2
000000000001afb0	b.ge	0x1b050
000000000001afb4	ldarb	w8, [x24]
000000000001afb8	tbz	w8, #0x0, 0x1afc0
000000000001afbc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001afc0	ldr	x8, [x19, #0x18]
000000000001afc4	str	x8, [sp, #0x50]
000000000001afc8	ldr	w9, [x8, #0x8]
000000000001afcc	cmp	x25, x9
000000000001afd0	b.hs	0x1b2f0
000000000001afd4	add	x8, x8, x25, lsl #2
000000000001afd8	ldr	w8, [x8, #0x10]
000000000001afdc	tbnz	w8, #0x1f, 0x1afa4
000000000001afe0	ldr	x8, [x19, #0x8]
000000000001afe4	stp	x8, x8, [sp, #0x58]
000000000001afe8	ldr	w9, [x8, #0x8]
000000000001afec	cmp	x25, x9
000000000001aff0	b.hs	0x1b2f0
000000000001aff4	add	x10, x8, x25, lsl #3
000000000001aff8	ldr	x10, [x10, #0x10]
000000000001affc	str	x10, [sp, #0x68]
000000000001b000	cmp	w9, w21
000000000001b004	b.ls	0x1b2f0
000000000001b008	add	x9, x8, #0x10
000000000001b00c	ldr	xzr, [x8]
000000000001b010	str	x10, [x9, w21, sxtw #3]
000000000001b014	cbz	x22, 0x1afa0
000000000001b018	ldr	w8, [x22, #0x8]
000000000001b01c	cmp	x25, x8
000000000001b020	b.hs	0x1b2f0
000000000001b024	add	x9, x22, x25, lsl #3
000000000001b028	ldr	x9, [x9, #0x10]
000000000001b02c	str	x9, [sp, #0x70]
000000000001b030	cmp	w8, w21
000000000001b034	b.ls	0x1b2f0
000000000001b038	sxtw	x8, w21
000000000001b03c	ldr	xzr, [x22]
000000000001b040	str	x9, [x26, x8, lsl #3]
000000000001b044	b	0x1afa0
000000000001b048	ldr	x8, [x23, #0x110]
000000000001b04c	b	0x1b080
000000000001b050	ldr	x0, [x19, #0x8]
000000000001b054	str	x0, [sp, #0x78]
000000000001b058	mov	x1, x21
000000000001b05c	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}"
000000000001b060	cbz	x22, 0x1b074
000000000001b064	ldr	w2, [x19, #0x44]
000000000001b068	mov	x0, x22
000000000001b06c	mov	x1, x21
000000000001b070	bl	"_kfun:kotlin.collections#resetRange__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}"
000000000001b074	str	w21, [x19, #0x44]
000000000001b078	ldr	x8, [sp, #0x38]
000000000001b07c	str	x8, [x23, #0x110]
000000000001b080	movi.16b	v0, #0x0
000000000001b084	stp	q0, q0, [sp, #0x80]
000000000001b088	add	x9, sp, #0x80
000000000001b08c	str	x9, [x23, #0x110]
000000000001b090	ldr	x10, [x19, #0x20]
000000000001b094	ldr	w10, [x10, #0x8]
000000000001b098	str	x8, [x23, #0x110]
000000000001b09c	cmp	w10, w20
000000000001b0a0	b.ne	0x1b0f0
000000000001b0a4	ldr	x21, [x19, #0x20]
000000000001b0a8	str	x21, [sp, #0x20]
000000000001b0ac	stp	q0, q0, [sp, #0x80]
000000000001b0b0	str	x9, [x23, #0x110]
000000000001b0b4	ldr	x9, [x19, #0x20]
000000000001b0b8	ldr	w20, [x9, #0x8]
000000000001b0bc	str	x8, [x23, #0x110]
000000000001b0c0	ldr	w2, [x21, #0x8]
000000000001b0c4	mov	w0, #0x0
000000000001b0c8	mov	x1, x20
000000000001b0cc	bl	_checkRangeIndexes
000000000001b0d0	ldr	xzr, [x21]
000000000001b0d4	subs	w9, w20, #0x1
000000000001b0d8	b.lt	0x1b180
000000000001b0dc	add	x8, x21, #0x10
000000000001b0e0	cmp	w9, #0x7
000000000001b0e4	b.hs	0x1b144
000000000001b0e8	mov	w9, #0x0
000000000001b0ec	b	0x1b170
000000000001b0f0	tbnz	w20, #0x1f, 0x1b33c
000000000001b0f4	ldr	x8, [x23, #0x118]
000000000001b0f8	mov	w9, w20
000000000001b0fc	lsl	x9, x9, #2
000000000001b100	add	x9, x9, #0x1f
000000000001b104	and	x1, x9, #0x7fffffff8
000000000001b108	add	x0, x8, #0x70
000000000001b10c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001b110	adr	x8, #0x45e40
000000000001b114	nop
000000000001b118	stp	x8, xzr, [x0, #0x10]!
000000000001b11c	stur	xzr, [x0, #-0x8]
000000000001b120	str	w20, [x0, #0x8]
000000000001b124	str	x0, [sp, #0x18]
000000000001b128	str	x0, [x19, #0x20]
000000000001b12c	clz	w8, w20
000000000001b130	cmp	w20, #0x0
000000000001b134	mov	w9, #0x21
000000000001b138	csinc	w8, w9, w8, eq
000000000001b13c	str	w8, [x19, #0x48]
000000000001b140	b	0x1b180
000000000001b144	add	x10, x9, #0x1
000000000001b148	and	x9, x10, #0x1fffffff8
000000000001b14c	movi.16b	v0, #0x0
000000000001b150	mov	x11, x8
000000000001b154	mov	x12, x9
000000000001b158	stp	q0, q0, [x11], #0x20
000000000001b15c	subs	x12, x12, #0x8
000000000001b160	b.ne	0x1b158
000000000001b164	cmp	x10, x9
000000000001b168	b.eq	0x1b180
000000000001b16c	add	x8, x8, x9, lsl #2
000000000001b170	sub	w9, w20, w9
000000000001b174	str	wzr, [x8], #0x4
000000000001b178	subs	w9, w9, #0x1
000000000001b17c	b.ne	0x1b174
000000000001b180	mov	x21, #0x0
000000000001b184	add	x20, sp, #0x30
000000000001b188	mov	x22, #0x800000000
000000000001b18c	add	x25, sp, #0x80
000000000001b190	ldrsw	x8, [x19, #0x44]
000000000001b194	cmp	x21, x8
000000000001b198	b.ge	0x1b2c8
000000000001b19c	ldarb	w8, [x24]
000000000001b1a0	tbz	w8, #0x0, 0x1b1a8
000000000001b1a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b1a8	movi.16b	v0, #0x0
000000000001b1ac	stp	q0, q0, [sp, #0x30]
000000000001b1b0	stp	q0, q0, [sp, #0x50]
000000000001b1b4	ldr	x8, [x23, #0x110]
000000000001b1b8	str	x20, [x23, #0x110]
000000000001b1bc	stp	x8, x22, [sp, #0x38]
000000000001b1c0	ldr	x8, [x19, #0x8]
000000000001b1c4	str	x8, [sp, #0x48]
000000000001b1c8	ldr	w9, [x8, #0x8]
000000000001b1cc	cmp	x21, x9
000000000001b1d0	b.hs	0x1b2f0
000000000001b1d4	add	x8, x8, x21, lsl #3
000000000001b1d8	ldr	x0, [x8, #0x10]
000000000001b1dc	str	x0, [sp, #0x50]
000000000001b1e0	cbz	x0, 0x1b210
000000000001b1e4	ldr	x8, [x0]
000000000001b1e8	and	x8, x8, #0xfffffffffffffffc
000000000001b1ec	ldr	x8, [x8]
000000000001b1f0	ldr	x8, [x8, #0x78]
000000000001b1f4	blr	x8
000000000001b1f8	mov	w8, #0x79b9
000000000001b1fc	movk	w8, #0x9e37, lsl #16
000000000001b200	mul	w8, w0, w8
000000000001b204	ldr	w9, [x19, #0x48]
000000000001b208	lsr	w28, w8, w9
000000000001b20c	b	0x1b214
000000000001b210	mov	w28, #0x0
000000000001b214	add	x27, x21, #0x1
000000000001b218	ldr	w8, [x19, #0x40]
000000000001b21c	sub	w26, w8, #0x1
000000000001b220	b	0x1b22c
000000000001b224	sub	w28, w28, #0x1
000000000001b228	sub	w26, w26, #0x1
000000000001b22c	ldarb	w8, [x24]
000000000001b230	tbz	w8, #0x0, 0x1b238
000000000001b234	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b238	ldr	x8, [x19, #0x20]
000000000001b23c	str	x8, [sp, #0x58]
000000000001b240	ldr	w9, [x8, #0x8]
000000000001b244	cmp	w9, w28
000000000001b248	b.ls	0x1b2f0
000000000001b24c	add	x9, x8, #0x10
000000000001b250	ldr	w10, [x9, w28, sxtw #2]
000000000001b254	cbz	w10, 0x1b280
000000000001b258	tbnz	w26, #0x1f, 0x1b2f4
000000000001b25c	cbnz	w28, 0x1b224
000000000001b260	movi.16b	v0, #0x0
000000000001b264	stp	q0, q0, [sp, #0x80]
000000000001b268	ldr	x8, [x23, #0x110]
000000000001b26c	str	x25, [x23, #0x110]
000000000001b270	ldr	x9, [x19, #0x20]
000000000001b274	ldr	w28, [x9, #0x8]
000000000001b278	str	x8, [x23, #0x110]
000000000001b27c	b	0x1b224
000000000001b280	sxtw	x10, w28
000000000001b284	str	x8, [sp, #0x60]
000000000001b288	ldr	xzr, [x8]
000000000001b28c	str	w27, [x9, x10, lsl #2]
000000000001b290	ldr	x8, [x19, #0x18]
000000000001b294	str	x8, [sp, #0x68]
000000000001b298	ldr	w9, [x8, #0x8]
000000000001b29c	cmp	x21, x9
000000000001b2a0	b.hs	0x1b2f0
000000000001b2a4	ldr	xzr, [x8]
000000000001b2a8	add	x8, x8, x21, lsl #2
000000000001b2ac	str	w28, [x8, #0x10]
000000000001b2b0	ldr	x8, [sp, #0x38]
000000000001b2b4	str	x8, [x23, #0x110]
000000000001b2b8	mov	x21, x27
000000000001b2bc	ldrsw	x8, [x19, #0x44]
000000000001b2c0	cmp	x21, x8
000000000001b2c4	b.lt	0x1b19c
000000000001b2c8	ldr	x8, [sp, #0x8]
000000000001b2cc	str	x8, [x23, #0x110]
000000000001b2d0	ldp	x29, x30, [sp, #0x100]
000000000001b2d4	ldp	x20, x19, [sp, #0xf0]
000000000001b2d8	ldp	x22, x21, [sp, #0xe0]
000000000001b2dc	ldp	x24, x23, [sp, #0xd0]
000000000001b2e0	ldp	x26, x25, [sp, #0xc0]
000000000001b2e4	ldp	x28, x27, [sp, #0xb0]
000000000001b2e8	add	sp, sp, #0x110
000000000001b2ec	ret
000000000001b2f0	bl	_ThrowArrayIndexOutOfBoundsException
000000000001b2f4	ldr	x8, [sp, #0x38]
000000000001b2f8	str	x8, [x23, #0x110]
000000000001b2fc	ldr	x8, [x23, #0x118]
000000000001b300	add	x0, x8, #0x70
000000000001b304	mov	w1, #0x38
000000000001b308	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001b30c	mov	x19, x0
000000000001b310	adr	x8, #0x46300
000000000001b314	nop
000000000001b318	str	x8, [x19, #0x10]!
000000000001b31c	stur	xzr, [x19, #-0x8]
000000000001b320	str	x19, [sp, #0x28]
000000000001b324	adr	x1, #0x548dc
000000000001b328	nop
000000000001b32c	mov	x0, x19
000000000001b330	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000001b334	mov	x0, x19
000000000001b338	bl	_ThrowException
000000000001b33c	bl	_ThrowIllegalArgumentException
_kfun:kotlin.collections.HashMap.findKey#internal:
000000000001b340	sub	sp, sp, #0xa0
000000000001b344	stp	x26, x25, [sp, #0x50]
000000000001b348	stp	x24, x23, [sp, #0x60]
000000000001b34c	stp	x22, x21, [sp, #0x70]
000000000001b350	stp	x20, x19, [sp, #0x80]
000000000001b354	stp	x29, x30, [sp, #0x90]
000000000001b358	add	x29, sp, #0x90
000000000001b35c	mov	x19, x1
000000000001b360	mov	x20, x0
000000000001b364	movi.16b	v0, #0x0
000000000001b368	stp	q0, q0, [sp]
000000000001b36c	str	q0, [sp, #0x20]
000000000001b370	adrp	x0, 95 ; 0x7a000
000000000001b374	add	x0, x0, #0x4e0
000000000001b378	ldr	x8, [x0]
000000000001b37c	blr	x8
000000000001b380	ldr	x22, [x0]
000000000001b384	ldr	x8, [x22, #0x110]
000000000001b388	mov	x9, sp
000000000001b38c	str	x9, [x22, #0x110]
000000000001b390	mov	x9, #0x600000000
000000000001b394	stp	x8, x9, [sp, #0x8]
000000000001b398	adr	x23, #0x79171
000000000001b39c	nop
000000000001b3a0	ldarb	w8, [x23]
000000000001b3a4	tbz	w8, #0x0, 0x1b3ac
000000000001b3a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b3ac	cbz	x19, 0x1b3e0
000000000001b3b0	ldr	x8, [x19]
000000000001b3b4	and	x8, x8, #0xfffffffffffffffc
000000000001b3b8	ldr	x8, [x8]
000000000001b3bc	ldr	x8, [x8, #0x78]
000000000001b3c0	mov	x0, x19
000000000001b3c4	blr	x8
000000000001b3c8	mov	w8, #0x79b9
000000000001b3cc	movk	w8, #0x9e37, lsl #16
000000000001b3d0	mul	w8, w0, w8
000000000001b3d4	ldr	w9, [x20, #0x48]
000000000001b3d8	lsr	w24, w8, w9
000000000001b3dc	b	0x1b3e4
000000000001b3e0	mov	w24, #0x0
000000000001b3e4	ldr	w8, [x20, #0x40]
000000000001b3e8	sub	w25, w8, #0x1
000000000001b3ec	add	x26, sp, #0x30
000000000001b3f0	b	0x1b3fc
000000000001b3f4	sub	w24, w24, #0x1
000000000001b3f8	sub	w25, w25, #0x1
000000000001b3fc	ldarb	w8, [x23]
000000000001b400	tbz	w8, #0x0, 0x1b408
000000000001b404	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b408	ldr	x8, [x20, #0x20]
000000000001b40c	str	x8, [sp, #0x18]
000000000001b410	ldr	w9, [x8, #0x8]
000000000001b414	cmp	w9, w24
000000000001b418	b.ls	0x1b4cc
000000000001b41c	add	x8, x8, w24, sxtw #2
000000000001b420	ldr	w8, [x8, #0x10]
000000000001b424	cbz	w8, 0x1b4a0
000000000001b428	subs	w21, w8, #0x1
000000000001b42c	b.lt	0x1b478
000000000001b430	ldr	x8, [x20, #0x8]
000000000001b434	str	x8, [sp, #0x20]
000000000001b438	ldr	w9, [x8, #0x8]
000000000001b43c	cmp	w9, w21
000000000001b440	b.ls	0x1b4cc
000000000001b444	add	x8, x8, w21, sxtw #3
000000000001b448	ldr	x0, [x8, #0x10]
000000000001b44c	str	x0, [sp, #0x28]
000000000001b450	cbz	x0, 0x1b474
000000000001b454	ldr	x8, [x0]
000000000001b458	and	x8, x8, #0xfffffffffffffffc
000000000001b45c	ldr	x8, [x8]
000000000001b460	ldr	x8, [x8, #0x70]
000000000001b464	mov	x1, x19
000000000001b468	blr	x8
000000000001b46c	tbz	w0, #0x0, 0x1b478
000000000001b470	b	0x1b4a4
000000000001b474	cbz	x19, 0x1b4a4
000000000001b478	tbnz	w25, #0x1f, 0x1b4a0
000000000001b47c	cbnz	w24, 0x1b3f4
000000000001b480	movi.16b	v0, #0x0
000000000001b484	stp	q0, q0, [sp, #0x30]
000000000001b488	ldr	x8, [x22, #0x110]
000000000001b48c	str	x26, [x22, #0x110]
000000000001b490	ldr	x9, [x20, #0x20]
000000000001b494	ldr	w24, [x9, #0x8]
000000000001b498	str	x8, [x22, #0x110]
000000000001b49c	b	0x1b3f4
000000000001b4a0	mov	w21, #-0x1
000000000001b4a4	ldr	x8, [sp, #0x8]
000000000001b4a8	str	x8, [x22, #0x110]
000000000001b4ac	mov	x0, x21
000000000001b4b0	ldp	x29, x30, [sp, #0x90]
000000000001b4b4	ldp	x20, x19, [sp, #0x80]
000000000001b4b8	ldp	x22, x21, [sp, #0x70]
000000000001b4bc	ldp	x24, x23, [sp, #0x60]
000000000001b4c0	ldp	x26, x25, [sp, #0x50]
000000000001b4c4	add	sp, sp, #0xa0
000000000001b4c8	ret
000000000001b4cc	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.findValue#internal:
000000000001b4d0	sub	sp, sp, #0x70
000000000001b4d4	stp	x24, x23, [sp, #0x30]
000000000001b4d8	stp	x22, x21, [sp, #0x40]
000000000001b4dc	stp	x20, x19, [sp, #0x50]
000000000001b4e0	stp	x29, x30, [sp, #0x60]
000000000001b4e4	add	x29, sp, #0x60
000000000001b4e8	mov	x19, x1
000000000001b4ec	mov	x20, x0
000000000001b4f0	movi.16b	v0, #0x0
000000000001b4f4	stp	q0, q0, [sp]
000000000001b4f8	str	q0, [sp, #0x20]
000000000001b4fc	adrp	x0, 95 ; 0x7a000
000000000001b500	add	x0, x0, #0x4e0
000000000001b504	ldr	x8, [x0]
000000000001b508	blr	x8
000000000001b50c	ldr	x22, [x0]
000000000001b510	ldr	x8, [x22, #0x110]
000000000001b514	mov	x9, sp
000000000001b518	str	x9, [x22, #0x110]
000000000001b51c	mov	x9, #0x600000000
000000000001b520	stp	x8, x9, [sp, #0x8]
000000000001b524	adr	x23, #0x78fe5
000000000001b528	nop
000000000001b52c	ldarb	w8, [x23]
000000000001b530	tbz	w8, #0x0, 0x1b538
000000000001b534	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b538	ldr	w21, [x20, #0x44]
000000000001b53c	sub	w8, w21, #0x1
000000000001b540	sxtw	x24, w8
000000000001b544	b	0x1b550
000000000001b548	cbz	x19, 0x1b5f4
000000000001b54c	sub	x24, x24, #0x1
000000000001b550	tbnz	w24, #0x1f, 0x1b5cc
000000000001b554	ldarb	w8, [x23]
000000000001b558	tbz	w8, #0x0, 0x1b560
000000000001b55c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b560	ldr	x8, [x20, #0x18]
000000000001b564	str	x8, [sp, #0x18]
000000000001b568	ldr	w9, [x8, #0x8]
000000000001b56c	cmp	w9, w24
000000000001b570	b.ls	0x1b5fc
000000000001b574	sub	w21, w21, #0x1
000000000001b578	add	x8, x8, x24, lsl #2
000000000001b57c	ldr	w8, [x8, #0x10]
000000000001b580	tbnz	w8, #0x1f, 0x1b54c
000000000001b584	ldr	x8, [x20, #0x10]
000000000001b588	str	x8, [sp, #0x20]
000000000001b58c	cbz	x8, 0x1b600
000000000001b590	ldr	w9, [x8, #0x8]
000000000001b594	cmp	w9, w24
000000000001b598	b.ls	0x1b5fc
000000000001b59c	add	x8, x8, x24, lsl #3
000000000001b5a0	ldr	x0, [x8, #0x10]
000000000001b5a4	str	x0, [sp, #0x28]
000000000001b5a8	cbz	x0, 0x1b548
000000000001b5ac	ldr	x8, [x0]
000000000001b5b0	and	x8, x8, #0xfffffffffffffffc
000000000001b5b4	ldr	x8, [x8]
000000000001b5b8	ldr	x8, [x8, #0x70]
000000000001b5bc	mov	x1, x19
000000000001b5c0	blr	x8
000000000001b5c4	tbz	w0, #0x0, 0x1b54c
000000000001b5c8	b	0x1b5d0
000000000001b5cc	mov	w21, #-0x1
000000000001b5d0	ldr	x8, [sp, #0x8]
000000000001b5d4	str	x8, [x22, #0x110]
000000000001b5d8	mov	x0, x21
000000000001b5dc	ldp	x29, x30, [sp, #0x60]
000000000001b5e0	ldp	x20, x19, [sp, #0x50]
000000000001b5e4	ldp	x22, x21, [sp, #0x40]
000000000001b5e8	ldp	x24, x23, [sp, #0x30]
000000000001b5ec	add	sp, sp, #0x70
000000000001b5f0	ret
000000000001b5f4	mov	x21, x24
000000000001b5f8	b	0x1b5d0
000000000001b5fc	bl	_ThrowArrayIndexOutOfBoundsException
000000000001b600	bl	_ThrowNullPointerException
_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int:
000000000001b604	sub	sp, sp, #0xd0
000000000001b608	stp	x28, x27, [sp, #0x70]
000000000001b60c	stp	x26, x25, [sp, #0x80]
000000000001b610	stp	x24, x23, [sp, #0x90]
000000000001b614	stp	x22, x21, [sp, #0xa0]
000000000001b618	stp	x20, x19, [sp, #0xb0]
000000000001b61c	stp	x29, x30, [sp, #0xc0]
000000000001b620	add	x29, sp, #0xc0
000000000001b624	mov	x20, x1
000000000001b628	mov	x19, x0
000000000001b62c	movi.16b	v0, #0x0
000000000001b630	stp	q0, q0, [sp]
000000000001b634	str	xzr, [sp, #0x40]
000000000001b638	stp	q0, q0, [sp, #0x20]
000000000001b63c	adrp	x0, 95 ; 0x7a000
000000000001b640	add	x0, x0, #0x4e0
000000000001b644	ldr	x8, [x0]
000000000001b648	blr	x8
000000000001b64c	ldr	x21, [x0]
000000000001b650	ldr	x8, [x21, #0x110]
000000000001b654	mov	x9, sp
000000000001b658	str	x9, [x21, #0x110]
000000000001b65c	mov	x9, #0x900000000
000000000001b660	stp	x8, x9, [sp, #0x8]
000000000001b664	adr	x22, #0x78ea5
000000000001b668	nop
000000000001b66c	ldarb	w8, [x22]
000000000001b670	tbz	w8, #0x0, 0x1b678
000000000001b674	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b678	mov	x0, x19
000000000001b67c	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001b680	add	x23, sp, #0x50
000000000001b684	mov	w24, #0x79b9
000000000001b688	movk	w24, #0x9e37, lsl #16
000000000001b68c	ldarb	w8, [x22]
000000000001b690	tbz	w8, #0x0, 0x1b698
000000000001b694	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b698	cbz	x20, 0x1b6c4
000000000001b69c	ldr	x8, [x20]
000000000001b6a0	and	x8, x8, #0xfffffffffffffffc
000000000001b6a4	ldr	x8, [x8]
000000000001b6a8	ldr	x8, [x8, #0x78]
000000000001b6ac	mov	x0, x20
000000000001b6b0	blr	x8
000000000001b6b4	mul	w8, w0, w24
000000000001b6b8	ldr	w9, [x19, #0x48]
000000000001b6bc	lsr	w26, w8, w9
000000000001b6c0	b	0x1b6c8
000000000001b6c4	mov	w26, #0x0
000000000001b6c8	mov	w25, #0x0
000000000001b6cc	ldr	w8, [x19, #0x40]
000000000001b6d0	movi.16b	v0, #0x0
000000000001b6d4	stp	q0, q0, [sp, #0x50]
000000000001b6d8	ldr	x9, [x21, #0x110]
000000000001b6dc	str	x23, [x21, #0x110]
000000000001b6e0	ldr	x10, [x19, #0x20]
000000000001b6e4	ldr	w10, [x10, #0x8]
000000000001b6e8	str	x9, [x21, #0x110]
000000000001b6ec	lsl	w8, w8, #1
000000000001b6f0	cmp	w10, #0x0
000000000001b6f4	cinc	w9, w10, lt
000000000001b6f8	asr	w9, w9, #1
000000000001b6fc	cmp	w8, w9
000000000001b700	csel	w8, w9, w8, gt
000000000001b704	bic	w27, w8, w8, asr #31
000000000001b708	b	0x1b714
000000000001b70c	sub	w26, w26, #0x1
000000000001b710	add	w25, w25, #0x1
000000000001b714	ldarb	w8, [x22]
000000000001b718	tbz	w8, #0x0, 0x1b720
000000000001b71c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b720	ldr	x8, [x19, #0x20]
000000000001b724	str	x8, [sp, #0x18]
000000000001b728	ldr	w9, [x8, #0x8]
000000000001b72c	cmp	w9, w26
000000000001b730	b.ls	0x1b8e0
000000000001b734	add	x8, x8, w26, sxtw #2
000000000001b738	ldr	w28, [x8, #0x10]
000000000001b73c	cmp	w28, #0x0
000000000001b740	b.le	0x1b7bc
000000000001b744	ldr	x8, [x19, #0x8]
000000000001b748	str	x8, [sp, #0x38]
000000000001b74c	sub	w9, w28, #0x1
000000000001b750	ldr	w10, [x8, #0x8]
000000000001b754	cmp	w10, w9
000000000001b758	b.ls	0x1b8e0
000000000001b75c	add	x8, x8, w9, sxtw #3
000000000001b760	ldr	x0, [x8, #0x10]
000000000001b764	str	x0, [sp, #0x40]
000000000001b768	cbz	x0, 0x1b78c
000000000001b76c	ldr	x8, [x0]
000000000001b770	and	x8, x8, #0xfffffffffffffffc
000000000001b774	ldr	x8, [x8]
000000000001b778	ldr	x8, [x8, #0x70]
000000000001b77c	mov	x1, x20
000000000001b780	blr	x8
000000000001b784	cbz	w0, 0x1b790
000000000001b788	b	0x1b820
000000000001b78c	cbz	x20, 0x1b820
000000000001b790	cmp	w27, w25
000000000001b794	b.eq	0x1b7f4
000000000001b798	cbnz	w26, 0x1b70c
000000000001b79c	movi.16b	v0, #0x0
000000000001b7a0	stp	q0, q0, [sp, #0x50]
000000000001b7a4	ldr	x8, [x21, #0x110]
000000000001b7a8	str	x23, [x21, #0x110]
000000000001b7ac	ldr	x9, [x19, #0x20]
000000000001b7b0	ldr	w26, [x9, #0x8]
000000000001b7b4	str	x8, [x21, #0x110]
000000000001b7b8	b	0x1b70c
000000000001b7bc	ldr	w8, [x19, #0x44]
000000000001b7c0	movi.16b	v0, #0x0
000000000001b7c4	stp	q0, q0, [sp, #0x50]
000000000001b7c8	ldr	x9, [x21, #0x110]
000000000001b7cc	str	x23, [x21, #0x110]
000000000001b7d0	ldr	x10, [x19, #0x8]
000000000001b7d4	ldr	w10, [x10, #0x8]
000000000001b7d8	str	x9, [x21, #0x110]
000000000001b7dc	cmp	w8, w10
000000000001b7e0	b.lt	0x1b84c
000000000001b7e4	mov	x0, x19
000000000001b7e8	mov	w1, #0x1
000000000001b7ec	bl	"_kfun:kotlin.collections.HashMap.ensureExtraCapacity#internal"
000000000001b7f0	b	0x1b68c
000000000001b7f4	movi.16b	v0, #0x0
000000000001b7f8	stp	q0, q0, [sp, #0x50]
000000000001b7fc	ldr	x8, [x21, #0x110]
000000000001b800	str	x23, [x21, #0x110]
000000000001b804	ldr	x9, [x19, #0x20]
000000000001b808	ldr	w9, [x9, #0x8]
000000000001b80c	str	x8, [x21, #0x110]
000000000001b810	lsl	w1, w9, #1
000000000001b814	mov	x0, x19
000000000001b818	bl	"_kfun:kotlin.collections.HashMap.rehash#internal"
000000000001b81c	b	0x1b68c
000000000001b820	neg	w0, w28
000000000001b824	ldr	x8, [sp, #0x8]
000000000001b828	str	x8, [x21, #0x110]
000000000001b82c	ldp	x29, x30, [sp, #0xc0]
000000000001b830	ldp	x20, x19, [sp, #0xb0]
000000000001b834	ldp	x22, x21, [sp, #0xa0]
000000000001b838	ldp	x24, x23, [sp, #0x90]
000000000001b83c	ldp	x26, x25, [sp, #0x80]
000000000001b840	ldp	x28, x27, [sp, #0x70]
000000000001b844	add	sp, sp, #0xd0
000000000001b848	ret
000000000001b84c	ldr	w0, [x19, #0x44]
000000000001b850	add	w8, w0, #0x1
000000000001b854	str	w8, [x19, #0x44]
000000000001b858	ldr	x10, [x19, #0x8]
000000000001b85c	str	x10, [sp, #0x20]
000000000001b860	ldr	w9, [x10, #0x8]
000000000001b864	cmp	w9, w0
000000000001b868	b.ls	0x1b8e0
000000000001b86c	sxtw	x9, w0
000000000001b870	ldr	xzr, [x10]
000000000001b874	add	x10, x10, x9, lsl #3
000000000001b878	str	x20, [x10, #0x10]
000000000001b87c	ldr	x10, [x19, #0x18]
000000000001b880	str	x10, [sp, #0x28]
000000000001b884	ldr	w11, [x10, #0x8]
000000000001b888	cmp	w11, w0
000000000001b88c	b.ls	0x1b8e0
000000000001b890	ldr	xzr, [x10]
000000000001b894	add	x9, x10, x9, lsl #2
000000000001b898	str	w26, [x9, #0x10]
000000000001b89c	ldr	x9, [x19, #0x20]
000000000001b8a0	str	x9, [sp, #0x30]
000000000001b8a4	ldr	w10, [x9, #0x8]
000000000001b8a8	cmp	w10, w26
000000000001b8ac	b.ls	0x1b8e0
000000000001b8b0	sxtw	x10, w26
000000000001b8b4	ldr	xzr, [x9]
000000000001b8b8	add	x9, x9, x10, lsl #2
000000000001b8bc	str	w8, [x9, #0x10]
000000000001b8c0	ldr	w8, [x19, #0x4c]
000000000001b8c4	add	w8, w8, #0x1
000000000001b8c8	str	w8, [x19, #0x4c]
000000000001b8cc	ldr	w8, [x19, #0x40]
000000000001b8d0	cmp	w25, w8
000000000001b8d4	b.le	0x1b824
000000000001b8d8	str	w25, [x19, #0x40]
000000000001b8dc	b	0x1b824
000000000001b8e0	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int:
000000000001b8e4	stp	x20, x19, [sp, #-0x20]!
000000000001b8e8	stp	x29, x30, [sp, #0x10]
000000000001b8ec	add	x29, sp, #0x10
000000000001b8f0	mov	x20, x1
000000000001b8f4	mov	x19, x0
000000000001b8f8	adr	x8, #0x78c11
000000000001b8fc	nop
000000000001b900	ldarb	w8, [x8]
000000000001b904	tbz	w8, #0x0, 0x1b90c
000000000001b908	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b90c	mov	x0, x19
000000000001b910	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001b914	mov	x0, x19
000000000001b918	mov	x1, x20
000000000001b91c	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001b920	tbnz	w0, #0x1f, 0x1b944
000000000001b924	mov	x20, x0
000000000001b928	mov	x0, x19
000000000001b92c	mov	x1, x20
000000000001b930	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
000000000001b934	mov	x0, x20
000000000001b938	ldp	x29, x30, [sp, #0x10]
000000000001b93c	ldp	x20, x19, [sp], #0x20
000000000001b940	ret
000000000001b944	mov	w20, #-0x1
000000000001b948	mov	x0, x20
000000000001b94c	ldp	x29, x30, [sp, #0x10]
000000000001b950	ldp	x20, x19, [sp], #0x20
000000000001b954	ret
_kfun:kotlin.collections.HashMap.removeKeyAt#internal:
000000000001b958	sub	sp, sp, #0x130
000000000001b95c	stp	x28, x27, [sp, #0xd0]
000000000001b960	stp	x26, x25, [sp, #0xe0]
000000000001b964	stp	x24, x23, [sp, #0xf0]
000000000001b968	stp	x22, x21, [sp, #0x100]
000000000001b96c	stp	x20, x19, [sp, #0x110]
000000000001b970	stp	x29, x30, [sp, #0x120]
000000000001b974	add	x29, sp, #0x120
000000000001b978	mov	x20, x1
000000000001b97c	mov	x19, x0
000000000001b980	movi.16b	v0, #0x0
000000000001b984	stp	q0, q0, [sp, #0x10]
000000000001b988	str	q0, [sp, #0x30]
000000000001b98c	adrp	x0, 95 ; 0x7a000
000000000001b990	add	x0, x0, #0x4e0
000000000001b994	ldr	x8, [x0]
000000000001b998	blr	x8
000000000001b99c	ldr	x21, [x0]
000000000001b9a0	ldr	x8, [x21, #0x110]
000000000001b9a4	add	x9, sp, #0x10
000000000001b9a8	str	x9, [x21, #0x110]
000000000001b9ac	mov	x9, #0x600000000
000000000001b9b0	stp	x8, x9, [sp, #0x18]
000000000001b9b4	adr	x24, #0x78b55
000000000001b9b8	nop
000000000001b9bc	ldarb	w8, [x24]
000000000001b9c0	tbz	w8, #0x0, 0x1b9c8
000000000001b9c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001b9c8	ldr	x0, [x19, #0x8]
000000000001b9cc	str	x0, [sp, #0x28]
000000000001b9d0	mov	x1, x20
000000000001b9d4	bl	"_kfun:kotlin.collections#resetAt__at__kotlin.Array<0:0>(kotlin.Int){0§<kotlin.Any?>}"
000000000001b9d8	ldr	x8, [x19, #0x18]
000000000001b9dc	str	x8, [sp, #0x30]
000000000001b9e0	ldr	w9, [x8, #0x8]
000000000001b9e4	cmp	w9, w20
000000000001b9e8	b.ls	0x1bca0
000000000001b9ec	mov	w25, #0x0
000000000001b9f0	add	x8, x8, w20, sxtw #2
000000000001b9f4	sxtw	x9, w20
000000000001b9f8	stp	x9, x20, [sp]
000000000001b9fc	ldr	w28, [x8, #0x10]
000000000001ba00	movi.16b	v0, #0x0
000000000001ba04	stp	q0, q0, [sp, #0x40]
000000000001ba08	stp	q0, q0, [sp, #0x80]
000000000001ba0c	stp	q0, q0, [sp, #0x60]
000000000001ba10	ldr	x8, [x21, #0x110]
000000000001ba14	add	x9, sp, #0x40
000000000001ba18	str	x9, [x21, #0x110]
000000000001ba1c	mov	x9, #0xc00000000
000000000001ba20	stp	x8, x9, [sp, #0x48]
000000000001ba24	ldr	w8, [x19, #0x40]
000000000001ba28	lsl	w8, w8, #1
000000000001ba2c	stp	q0, q0, [x29, #-0x80]
000000000001ba30	ldr	x9, [x21, #0x110]
000000000001ba34	sub	x26, x29, #0x80
000000000001ba38	str	x26, [x21, #0x110]
000000000001ba3c	ldr	x10, [x19, #0x20]
000000000001ba40	ldr	w10, [x10, #0x8]
000000000001ba44	cmp	w10, #0x0
000000000001ba48	cinc	w10, w10, lt
000000000001ba4c	asr	w10, w10, #1
000000000001ba50	cmp	w8, w10
000000000001ba54	str	x9, [x21, #0x110]
000000000001ba58	csel	w27, w10, w8, gt
000000000001ba5c	mov	x23, x28
000000000001ba60	b	0x1ba8c
000000000001ba64	str	x9, [sp, #0x70]
000000000001ba68	cmp	w10, w28
000000000001ba6c	b.ls	0x1bca0
000000000001ba70	mov	w25, #0x0
000000000001ba74	ldr	xzr, [x9]
000000000001ba78	mov	w9, #-0x1
000000000001ba7c	str	w9, [x8, w28, sxtw #2]
000000000001ba80	mov	x28, x23
000000000001ba84	subs	w27, w27, #0x1
000000000001ba88	b.mi	0x1bc18
000000000001ba8c	ldarb	w8, [x24]
000000000001ba90	tbnz	w8, #0x0, 0x1bab0
000000000001ba94	cbz	w23, 0x1bab8
000000000001ba98	add	w25, w25, #0x1
000000000001ba9c	ldr	w8, [x19, #0x40]
000000000001baa0	ldr	x9, [x19, #0x20]
000000000001baa4	cmp	w25, w8
000000000001baa8	b.le	0x1bae8
000000000001baac	b	0x1bbe0
000000000001bab0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bab4	cbnz	w23, 0x1ba98
000000000001bab8	movi.16b	v0, #0x0
000000000001babc	stp	q0, q0, [x29, #-0x80]
000000000001bac0	ldr	x8, [x21, #0x110]
000000000001bac4	str	x26, [x21, #0x110]
000000000001bac8	ldr	x9, [x19, #0x20]
000000000001bacc	ldr	w23, [x9, #0x8]
000000000001bad0	str	x8, [x21, #0x110]
000000000001bad4	add	w25, w25, #0x1
000000000001bad8	ldr	w8, [x19, #0x40]
000000000001badc	ldr	x9, [x19, #0x20]
000000000001bae0	cmp	w25, w8
000000000001bae4	b.gt	0x1bbe0
000000000001bae8	sub	w23, w23, #0x1
000000000001baec	str	x9, [sp, #0x60]
000000000001baf0	ldr	w10, [x9, #0x8]
000000000001baf4	cmp	w10, w23
000000000001baf8	b.ls	0x1bca0
000000000001bafc	add	x8, x9, #0x10
000000000001bb00	ldr	w22, [x8, w23, sxtw #2]
000000000001bb04	cbz	w22, 0x1bc00
000000000001bb08	tbnz	w22, #0x1f, 0x1ba64
000000000001bb0c	ldr	x8, [x19, #0x8]
000000000001bb10	str	x8, [sp, #0x78]
000000000001bb14	sub	w20, w22, #0x1
000000000001bb18	ldr	w9, [x8, #0x8]
000000000001bb1c	cmp	w9, w20
000000000001bb20	b.ls	0x1bca0
000000000001bb24	add	x8, x8, w20, sxtw #3
000000000001bb28	ldr	x0, [x8, #0x10]
000000000001bb2c	str	x0, [sp, #0x80]
000000000001bb30	cbz	x0, 0x1bb60
000000000001bb34	ldr	x8, [x0]
000000000001bb38	and	x8, x8, #0xfffffffffffffffc
000000000001bb3c	ldr	x8, [x8]
000000000001bb40	ldr	x8, [x8, #0x78]
000000000001bb44	blr	x8
000000000001bb48	mov	w8, #0x79b9
000000000001bb4c	movk	w8, #0x9e37, lsl #16
000000000001bb50	mul	w8, w0, w8
000000000001bb54	ldr	w9, [x19, #0x48]
000000000001bb58	lsr	w8, w8, w9
000000000001bb5c	b	0x1bb64
000000000001bb60	mov	w8, #0x0
000000000001bb64	movi.16b	v0, #0x0
000000000001bb68	stp	q0, q0, [x29, #-0x80]
000000000001bb6c	ldr	x9, [x21, #0x110]
000000000001bb70	str	x26, [x21, #0x110]
000000000001bb74	ldr	x10, [x19, #0x20]
000000000001bb78	ldr	w10, [x10, #0x8]
000000000001bb7c	str	x9, [x21, #0x110]
000000000001bb80	sub	w8, w8, w23
000000000001bb84	sub	w9, w10, #0x1
000000000001bb88	and	w8, w8, w9
000000000001bb8c	cmp	w8, w25
000000000001bb90	b.lt	0x1ba84
000000000001bb94	ldr	x8, [x19, #0x20]
000000000001bb98	str	x8, [sp, #0x88]
000000000001bb9c	ldr	w9, [x8, #0x8]
000000000001bba0	cmp	w9, w28
000000000001bba4	b.ls	0x1bca0
000000000001bba8	ldr	xzr, [x8]
000000000001bbac	add	x8, x8, w28, sxtw #2
000000000001bbb0	str	w22, [x8, #0x10]
000000000001bbb4	ldr	x8, [x19, #0x18]
000000000001bbb8	str	x8, [sp, #0x90]
000000000001bbbc	ldr	w9, [x8, #0x8]
000000000001bbc0	cmp	w9, w20
000000000001bbc4	b.ls	0x1bca0
000000000001bbc8	mov	w25, #0x0
000000000001bbcc	sxtw	x9, w20
000000000001bbd0	ldr	xzr, [x8]
000000000001bbd4	add	x8, x8, x9, lsl #2
000000000001bbd8	str	w28, [x8, #0x10]
000000000001bbdc	b	0x1ba80
000000000001bbe0	str	x9, [sp, #0x58]
000000000001bbe4	ldr	w8, [x9, #0x8]
000000000001bbe8	cmp	w8, w28
000000000001bbec	b.ls	0x1bca0
000000000001bbf0	mov	w10, #0x0
000000000001bbf4	ldr	xzr, [x9]
000000000001bbf8	add	x8, x9, #0x10
000000000001bbfc	b	0x1bc34
000000000001bc00	str	x9, [sp, #0x68]
000000000001bc04	cmp	w10, w28
000000000001bc08	b.ls	0x1bca0
000000000001bc0c	mov	w10, #0x0
000000000001bc10	ldr	xzr, [x9]
000000000001bc14	b	0x1bc34
000000000001bc18	ldr	x8, [x19, #0x20]
000000000001bc1c	str	x8, [sp, #0x98]
000000000001bc20	ldr	w9, [x8, #0x8]
000000000001bc24	cmp	w9, w28
000000000001bc28	b.ls	0x1bca0
000000000001bc2c	ldr	xzr, [x8], #0x10
000000000001bc30	mov	w10, #-0x1
000000000001bc34	ldr	x11, [sp, #0x8]
000000000001bc38	str	w10, [x8, w28, sxtw #2]
000000000001bc3c	ldr	x8, [sp, #0x48]
000000000001bc40	str	x8, [x21, #0x110]
000000000001bc44	ldr	x8, [x19, #0x18]
000000000001bc48	str	x8, [sp, #0x38]
000000000001bc4c	ldr	w9, [x8, #0x8]
000000000001bc50	cmp	w9, w11
000000000001bc54	b.ls	0x1bca0
000000000001bc58	ldr	xzr, [x8]
000000000001bc5c	ldr	x9, [sp]
000000000001bc60	add	x8, x8, x9, lsl #2
000000000001bc64	mov	w9, #-0x1
000000000001bc68	str	w9, [x8, #0x10]
000000000001bc6c	ldr	w8, [x19, #0x4c]
000000000001bc70	sub	w8, w8, #0x1
000000000001bc74	str	w8, [x19, #0x4c]
000000000001bc78	ldr	x8, [sp, #0x18]
000000000001bc7c	str	x8, [x21, #0x110]
000000000001bc80	ldp	x29, x30, [sp, #0x120]
000000000001bc84	ldp	x20, x19, [sp, #0x110]
000000000001bc88	ldp	x22, x21, [sp, #0x100]
000000000001bc8c	ldp	x24, x23, [sp, #0xf0]
000000000001bc90	ldp	x26, x25, [sp, #0xe0]
000000000001bc94	ldp	x28, x27, [sp, #0xd0]
000000000001bc98	add	sp, sp, #0x130
000000000001bc9c	ret
000000000001bca0	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#containsEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.Boolean:
000000000001bca4	sub	sp, sp, #0x80
000000000001bca8	stp	x24, x23, [sp, #0x40]
000000000001bcac	stp	x22, x21, [sp, #0x50]
000000000001bcb0	stp	x20, x19, [sp, #0x60]
000000000001bcb4	stp	x29, x30, [sp, #0x70]
000000000001bcb8	add	x29, sp, #0x70
000000000001bcbc	mov	x19, x1
000000000001bcc0	mov	x20, x0
000000000001bcc4	movi.16b	v0, #0x0
000000000001bcc8	stp	q0, q0, [sp]
000000000001bccc	str	xzr, [sp, #0x30]
000000000001bcd0	str	q0, [sp, #0x20]
000000000001bcd4	mov	x23, sp
000000000001bcd8	add	x21, x23, #0x18
000000000001bcdc	adrp	x0, 95 ; 0x7a000
000000000001bce0	add	x0, x0, #0x4e0
000000000001bce4	ldr	x8, [x0]
000000000001bce8	blr	x8
000000000001bcec	ldr	x22, [x0]
000000000001bcf0	ldr	x8, [x22, #0x110]
000000000001bcf4	str	x23, [x22, #0x110]
000000000001bcf8	mov	x9, #0x700000000
000000000001bcfc	stp	x8, x9, [sp, #0x8]
000000000001bd00	adr	x8, #0x78809
000000000001bd04	nop
000000000001bd08	ldarb	w8, [x8]
000000000001bd0c	tbz	w8, #0x0, 0x1bd14
000000000001bd10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bd14	ldr	x8, [x19]
000000000001bd18	and	x8, x8, #0xfffffffffffffffc
000000000001bd1c	ldr	x8, [x8]
000000000001bd20	ldr	w9, [x8, #0x3c]
000000000001bd24	ldr	x8, [x8, #0x40]
000000000001bd28	tbnz	w9, #0x1f, 0x1bd38
000000000001bd2c	mov	w10, #0xa8
000000000001bd30	and	x9, x9, x10
000000000001bd34	b	0x1bdbc
000000000001bd38	neg	w10, w9
000000000001bd3c	mvn	w9, w9
000000000001bd40	cmp	w10, #0x9
000000000001bd44	b.ge	0x1bd7c
000000000001bd48	cmp	w10, #0x2
000000000001bd4c	b.lt	0x1bdb0
000000000001bd50	mov	x10, #0x0
000000000001bd54	mov	x11, x8
000000000001bd58	ldr	w12, [x11]
000000000001bd5c	cmp	w12, #0xa7
000000000001bd60	b.gt	0x1bdb8
000000000001bd64	add	x10, x10, #0x1
000000000001bd68	add	x11, x11, #0x10
000000000001bd6c	cmp	x9, x10
000000000001bd70	b.ne	0x1bd58
000000000001bd74	mov	x10, x9
000000000001bd78	b	0x1bdb8
000000000001bd7c	mov	w10, #0x0
000000000001bd80	add	w11, w9, w10
000000000001bd84	cmp	w11, #0x0
000000000001bd88	cinc	w11, w11, lt
000000000001bd8c	asr	w11, w11, #1
000000000001bd90	sbfiz	x12, x11, #4, #32
000000000001bd94	ldr	w12, [x8, x12]
000000000001bd98	cmp	w12, #0xa8
000000000001bd9c	csinc	w10, w10, w11, ge
000000000001bda0	csel	w9, w9, w11, lt
000000000001bda4	cmp	w10, w9
000000000001bda8	b.lt	0x1bd80
000000000001bdac	b	0x1bdb8
000000000001bdb0	mov	w10, #0x0
000000000001bdb4	b	0x1bdb8
000000000001bdb8	sxtw	x9, w10
000000000001bdbc	add	x8, x8, x9, lsl #4
000000000001bdc0	ldr	x8, [x8, #0x8]
000000000001bdc4	ldr	x8, [x8]
000000000001bdc8	mov	x0, x19
000000000001bdcc	mov	x1, x21
000000000001bdd0	blr	x8
000000000001bdd4	mov	x1, x0
000000000001bdd8	mov	x0, x20
000000000001bddc	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001bde0	tbnz	w0, #0x1f, 0x1be30
000000000001bde4	ldr	x8, [x20, #0x10]
000000000001bde8	str	x8, [sp, #0x20]
000000000001bdec	cbz	x8, 0x1bf1c
000000000001bdf0	ldr	w9, [x8, #0x8]
000000000001bdf4	cmp	w9, w0
000000000001bdf8	b.ls	0x1bf20
000000000001bdfc	add	x1, x23, #0x30
000000000001be00	add	x8, x8, w0, sxtw #3
000000000001be04	ldr	x20, [x8, #0x10]
000000000001be08	str	x20, [sp, #0x28]
000000000001be0c	ldr	x8, [x19]
000000000001be10	and	x8, x8, #0xfffffffffffffffc
000000000001be14	ldr	x8, [x8]
000000000001be18	ldr	w9, [x8, #0x3c]
000000000001be1c	ldr	x8, [x8, #0x40]
000000000001be20	tbnz	w9, #0x1f, 0x1be38
000000000001be24	mov	w10, #0xa8
000000000001be28	and	x9, x9, x10
000000000001be2c	b	0x1bebc
000000000001be30	mov	w0, #0x0
000000000001be34	b	0x1befc
000000000001be38	neg	w10, w9
000000000001be3c	mvn	w9, w9
000000000001be40	cmp	w10, #0x9
000000000001be44	b.ge	0x1be7c
000000000001be48	cmp	w10, #0x2
000000000001be4c	b.lt	0x1beb0
000000000001be50	mov	x10, #0x0
000000000001be54	mov	x11, x8
000000000001be58	ldr	w12, [x11]
000000000001be5c	cmp	w12, #0xa7
000000000001be60	b.gt	0x1beb8
000000000001be64	add	x10, x10, #0x1
000000000001be68	add	x11, x11, #0x10
000000000001be6c	cmp	x9, x10
000000000001be70	b.ne	0x1be58
000000000001be74	mov	x10, x9
000000000001be78	b	0x1beb8
000000000001be7c	mov	w10, #0x0
000000000001be80	add	w11, w9, w10
000000000001be84	cmp	w11, #0x0
000000000001be88	cinc	w11, w11, lt
000000000001be8c	asr	w11, w11, #1
000000000001be90	sbfiz	x12, x11, #4, #32
000000000001be94	ldr	w12, [x8, x12]
000000000001be98	cmp	w12, #0xa8
000000000001be9c	csinc	w10, w10, w11, ge
000000000001bea0	csel	w9, w9, w11, lt
000000000001bea4	cmp	w10, w9
000000000001bea8	b.lt	0x1be80
000000000001beac	b	0x1beb8
000000000001beb0	mov	w10, #0x0
000000000001beb4	b	0x1beb8
000000000001beb8	sxtw	x9, w10
000000000001bebc	add	x8, x8, x9, lsl #4
000000000001bec0	ldr	x8, [x8, #0x8]
000000000001bec4	ldr	x8, [x8, #0x8]
000000000001bec8	mov	x0, x19
000000000001becc	blr	x8
000000000001bed0	mov	x1, x0
000000000001bed4	cbz	x20, 0x1bef4
000000000001bed8	ldr	x8, [x20]
000000000001bedc	and	x8, x8, #0xfffffffffffffffc
000000000001bee0	ldr	x8, [x8]
000000000001bee4	ldr	x8, [x8, #0x70]
000000000001bee8	mov	x0, x20
000000000001beec	blr	x8
000000000001bef0	b	0x1befc
000000000001bef4	cmp	x1, #0x0
000000000001bef8	cset	w0, eq
000000000001befc	ldr	x8, [sp, #0x8]
000000000001bf00	str	x8, [x22, #0x110]
000000000001bf04	ldp	x29, x30, [sp, #0x70]
000000000001bf08	ldp	x20, x19, [sp, #0x60]
000000000001bf0c	ldp	x22, x21, [sp, #0x50]
000000000001bf10	ldp	x24, x23, [sp, #0x40]
000000000001bf14	add	sp, sp, #0x80
000000000001bf18	ret
000000000001bf1c	bl	_ThrowNullPointerException
000000000001bf20	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#getKey(1:0){}1:0?:
000000000001bf24	sub	sp, sp, #0x60
000000000001bf28	stp	x22, x21, [sp, #0x30]
000000000001bf2c	stp	x20, x19, [sp, #0x40]
000000000001bf30	stp	x29, x30, [sp, #0x50]
000000000001bf34	add	x29, sp, #0x50
000000000001bf38	mov	x19, x2
000000000001bf3c	mov	x21, x1
000000000001bf40	mov	x20, x0
000000000001bf44	movi.16b	v0, #0x0
000000000001bf48	stp	q0, q0, [sp]
000000000001bf4c	str	xzr, [sp, #0x20]
000000000001bf50	adrp	x0, 95 ; 0x7a000
000000000001bf54	add	x0, x0, #0x4e0
000000000001bf58	ldr	x8, [x0]
000000000001bf5c	blr	x8
000000000001bf60	ldr	x22, [x0]
000000000001bf64	ldr	x8, [x22, #0x110]
000000000001bf68	mov	x9, sp
000000000001bf6c	str	x9, [x22, #0x110]
000000000001bf70	mov	x9, #0x500000000
000000000001bf74	stp	x8, x9, [sp, #0x8]
000000000001bf78	adr	x8, #0x78591
000000000001bf7c	nop
000000000001bf80	ldarb	w8, [x8]
000000000001bf84	tbz	w8, #0x0, 0x1bf8c
000000000001bf88	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001bf8c	mov	x0, x20
000000000001bf90	mov	x1, x21
000000000001bf94	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001bf98	tbnz	w0, #0x1f, 0x1bfc4
000000000001bf9c	ldr	x8, [x20, #0x8]
000000000001bfa0	str	x8, [sp, #0x18]
000000000001bfa4	ldr	w9, [x8, #0x8]
000000000001bfa8	cmp	w9, w0
000000000001bfac	b.ls	0x1bfe8
000000000001bfb0	add	x8, x8, w0, sxtw #3
000000000001bfb4	ldr	x0, [x8, #0x10]
000000000001bfb8	str	x0, [sp, #0x20]
000000000001bfbc	cbnz	x0, 0x1bfc8
000000000001bfc0	bl	_ThrowNullPointerException
000000000001bfc4	mov	x0, #0x0
000000000001bfc8	str	x0, [x19]
000000000001bfcc	ldr	x8, [sp, #0x8]
000000000001bfd0	str	x8, [x22, #0x110]
000000000001bfd4	ldp	x29, x30, [sp, #0x50]
000000000001bfd8	ldp	x20, x19, [sp, #0x40]
000000000001bfdc	ldp	x22, x21, [sp, #0x30]
000000000001bfe0	add	sp, sp, #0x60
000000000001bfe4	ret
000000000001bfe8	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap#containsAllEntries(kotlin.collections.Collection<*>){}kotlin.Boolean:
000000000001bfec	sub	sp, sp, #0x80
000000000001bff0	stp	x26, x25, [sp, #0x30]
000000000001bff4	stp	x24, x23, [sp, #0x40]
000000000001bff8	stp	x22, x21, [sp, #0x50]
000000000001bffc	stp	x20, x19, [sp, #0x60]
000000000001c000	stp	x29, x30, [sp, #0x70]
000000000001c004	add	x29, sp, #0x70
000000000001c008	mov	x21, x1
000000000001c00c	mov	x19, x0
000000000001c010	movi.16b	v0, #0x0
000000000001c014	stp	q0, q0, [sp]
000000000001c018	str	q0, [sp, #0x20]
000000000001c01c	mov	x20, sp
000000000001c020	add	x22, x20, #0x18
000000000001c024	adrp	x0, 94 ; 0x7a000
000000000001c028	add	x0, x0, #0x4e0
000000000001c02c	ldr	x8, [x0]
000000000001c030	blr	x8
000000000001c034	ldr	x23, [x0]
000000000001c038	ldr	x8, [x23, #0x110]
000000000001c03c	str	x20, [x23, #0x110]
000000000001c040	mov	x9, #0x600000000
000000000001c044	stp	x8, x9, [sp, #0x8]
000000000001c048	adr	x24, #0x784c1
000000000001c04c	nop
000000000001c050	ldarb	w8, [x24]
000000000001c054	tbz	w8, #0x0, 0x1c05c
000000000001c058	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c05c	add	x20, x20, #0x20
000000000001c060	ldr	x8, [x21]
000000000001c064	and	x8, x8, #0xfffffffffffffffc
000000000001c068	ldr	x8, [x8]
000000000001c06c	ldr	w9, [x8, #0x3c]
000000000001c070	ldr	x8, [x8, #0x40]
000000000001c074	tbnz	w9, #0x1f, 0x1c084
000000000001c078	mov	w10, #0x12
000000000001c07c	and	x9, x9, x10
000000000001c080	b	0x1c108
000000000001c084	neg	w10, w9
000000000001c088	mvn	w9, w9
000000000001c08c	cmp	w10, #0x9
000000000001c090	b.ge	0x1c0c8
000000000001c094	cmp	w10, #0x2
000000000001c098	b.lt	0x1c0fc
000000000001c09c	mov	x10, #0x0
000000000001c0a0	mov	x11, x8
000000000001c0a4	ldr	w12, [x11]
000000000001c0a8	cmp	w12, #0x11
000000000001c0ac	b.gt	0x1c104
000000000001c0b0	add	x10, x10, #0x1
000000000001c0b4	add	x11, x11, #0x10
000000000001c0b8	cmp	x9, x10
000000000001c0bc	b.ne	0x1c0a4
000000000001c0c0	mov	x10, x9
000000000001c0c4	b	0x1c104
000000000001c0c8	mov	w10, #0x0
000000000001c0cc	add	w11, w9, w10
000000000001c0d0	cmp	w11, #0x0
000000000001c0d4	cinc	w11, w11, lt
000000000001c0d8	asr	w11, w11, #1
000000000001c0dc	sbfiz	x12, x11, #4, #32
000000000001c0e0	ldr	w12, [x8, x12]
000000000001c0e4	cmp	w12, #0x12
000000000001c0e8	csinc	w10, w10, w11, ge
000000000001c0ec	csel	w9, w9, w11, lt
000000000001c0f0	cmp	w10, w9
000000000001c0f4	b.lt	0x1c0cc
000000000001c0f8	b	0x1c104
000000000001c0fc	mov	w10, #0x0
000000000001c100	b	0x1c104
000000000001c104	sxtw	x9, w10
000000000001c108	add	x8, x8, x9, lsl #4
000000000001c10c	ldr	x8, [x8, #0x8]
000000000001c110	ldr	x8, [x8, #0x20]
000000000001c114	mov	x0, x21
000000000001c118	mov	x1, x22
000000000001c11c	blr	x8
000000000001c120	mov	x21, x0
000000000001c124	mov	w22, #0xa0
000000000001c128	mov	w25, #0xa8
000000000001c12c	ldr	x8, [x21]
000000000001c130	and	x8, x8, #0xfffffffffffffffc
000000000001c134	ldr	x8, [x8]
000000000001c138	ldr	w9, [x8, #0x3c]
000000000001c13c	ldr	x8, [x8, #0x40]
000000000001c140	tbnz	w9, #0x1f, 0x1c164
000000000001c144	and	x9, x9, x22
000000000001c148	add	x8, x8, x9, lsl #4
000000000001c14c	ldr	x8, [x8, #0x8]
000000000001c150	ldr	x8, [x8]
000000000001c154	mov	x0, x21
000000000001c158	blr	x8
000000000001c15c	tbnz	w0, #0x0, 0x1c200
000000000001c160	b	0x1c3e0
000000000001c164	neg	w10, w9
000000000001c168	mvn	w9, w9
000000000001c16c	cmp	w10, #0x9
000000000001c170	b.ge	0x1c1a8
000000000001c174	cmp	w10, #0x2
000000000001c178	b.lt	0x1c1dc
000000000001c17c	mov	x10, #0x0
000000000001c180	mov	x11, x8
000000000001c184	ldr	w12, [x11]
000000000001c188	cmp	w12, #0x9f
000000000001c18c	b.gt	0x1c1e4
000000000001c190	add	x10, x10, #0x1
000000000001c194	add	x11, x11, #0x10
000000000001c198	cmp	x9, x10
000000000001c19c	b.ne	0x1c184
000000000001c1a0	mov	x10, x9
000000000001c1a4	b	0x1c1e4
000000000001c1a8	mov	w10, #0x0
000000000001c1ac	add	w11, w9, w10
000000000001c1b0	cmp	w11, #0x0
000000000001c1b4	cinc	w11, w11, lt
000000000001c1b8	asr	w11, w11, #1
000000000001c1bc	sbfiz	x12, x11, #4, #32
000000000001c1c0	ldr	w12, [x8, x12]
000000000001c1c4	cmp	w12, #0xa0
000000000001c1c8	csinc	w10, w10, w11, ge
000000000001c1cc	csel	w9, w9, w11, lt
000000000001c1d0	cmp	w10, w9
000000000001c1d4	b.lt	0x1c1ac
000000000001c1d8	b	0x1c1e4
000000000001c1dc	mov	w10, #0x0
000000000001c1e0	b	0x1c1e4
000000000001c1e4	sxtw	x9, w10
000000000001c1e8	add	x8, x8, x9, lsl #4
000000000001c1ec	ldr	x8, [x8, #0x8]
000000000001c1f0	ldr	x8, [x8]
000000000001c1f4	mov	x0, x21
000000000001c1f8	blr	x8
000000000001c1fc	tbz	w0, #0x0, 0x1c3e0
000000000001c200	ldarb	w8, [x24]
000000000001c204	tbz	w8, #0x0, 0x1c20c
000000000001c208	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c20c	ldr	x8, [x21]
000000000001c210	and	x8, x8, #0xfffffffffffffffc
000000000001c214	ldr	x8, [x8]
000000000001c218	ldr	w9, [x8, #0x3c]
000000000001c21c	ldr	x8, [x8, #0x40]
000000000001c220	tbnz	w9, #0x1f, 0x1c22c
000000000001c224	and	x9, x9, x22
000000000001c228	b	0x1c2b0
000000000001c22c	neg	w10, w9
000000000001c230	mvn	w9, w9
000000000001c234	cmp	w10, #0x9
000000000001c238	b.ge	0x1c270
000000000001c23c	cmp	w10, #0x2
000000000001c240	b.lt	0x1c2a4
000000000001c244	mov	x10, #0x0
000000000001c248	mov	x11, x8
000000000001c24c	ldr	w12, [x11]
000000000001c250	cmp	w12, #0x9f
000000000001c254	b.gt	0x1c2ac
000000000001c258	add	x10, x10, #0x1
000000000001c25c	add	x11, x11, #0x10
000000000001c260	cmp	x9, x10
000000000001c264	b.ne	0x1c24c
000000000001c268	mov	x10, x9
000000000001c26c	b	0x1c2ac
000000000001c270	mov	w10, #0x0
000000000001c274	add	w11, w9, w10
000000000001c278	cmp	w11, #0x0
000000000001c27c	cinc	w11, w11, lt
000000000001c280	asr	w11, w11, #1
000000000001c284	sbfiz	x12, x11, #4, #32
000000000001c288	ldr	w12, [x8, x12]
000000000001c28c	cmp	w12, #0xa0
000000000001c290	csinc	w10, w10, w11, ge
000000000001c294	csel	w9, w9, w11, lt
000000000001c298	cmp	w10, w9
000000000001c29c	b.lt	0x1c274
000000000001c2a0	b	0x1c2ac
000000000001c2a4	mov	w10, #0x0
000000000001c2a8	b	0x1c2ac
000000000001c2ac	sxtw	x9, w10
000000000001c2b0	add	x8, x8, x9, lsl #4
000000000001c2b4	ldr	x8, [x8, #0x8]
000000000001c2b8	ldr	x8, [x8, #0x8]
000000000001c2bc	mov	x0, x21
000000000001c2c0	mov	x1, x20
000000000001c2c4	blr	x8
000000000001c2c8	cbz	x0, 0x1c428
000000000001c2cc	mov	x8, x0
000000000001c2d0	ldr	x9, [x0]
000000000001c2d4	and	x9, x9, #0xfffffffffffffffc
000000000001c2d8	ldr	x9, [x9]
000000000001c2dc	ldr	w10, [x9, #0x3c]
000000000001c2e0	ldr	x9, [x9, #0x40]
000000000001c2e4	tbnz	w10, #0x1f, 0x1c300
000000000001c2e8	and	x10, x10, x25
000000000001c2ec	lsl	x10, x10, #4
000000000001c2f0	ldr	w9, [x9, x10]
000000000001c2f4	cmp	w9, #0xa8
000000000001c2f8	b.eq	0x1c3a4
000000000001c2fc	b	0x1c3cc
000000000001c300	neg	w11, w10
000000000001c304	mvn	w10, w10
000000000001c308	cmp	w11, #0x9
000000000001c30c	b.ge	0x1c358
000000000001c310	cmp	w11, #0x2
000000000001c314	b.lt	0x1c38c
000000000001c318	mov	x11, #0x0
000000000001c31c	mov	x12, x9
000000000001c320	ldr	w13, [x12]
000000000001c324	cmp	w13, #0xa7
000000000001c328	b.gt	0x1c3b8
000000000001c32c	add	x11, x11, #0x1
000000000001c330	add	x12, x12, #0x10
000000000001c334	cmp	x10, x11
000000000001c338	b.ne	0x1c320
000000000001c33c	mov	x11, x10
000000000001c340	sxtw	x10, w11
000000000001c344	lsl	x10, x10, #4
000000000001c348	ldr	w9, [x9, x10]
000000000001c34c	cmp	w9, #0xa8
000000000001c350	b.eq	0x1c3a4
000000000001c354	b	0x1c3cc
000000000001c358	mov	w11, #0x0
000000000001c35c	add	w12, w10, w11
000000000001c360	cmp	w12, #0x0
000000000001c364	cinc	w12, w12, lt
000000000001c368	asr	w12, w12, #1
000000000001c36c	sbfiz	x13, x12, #4, #32
000000000001c370	ldr	w13, [x9, x13]
000000000001c374	cmp	w13, #0xa8
000000000001c378	csinc	w11, w11, w12, ge
000000000001c37c	csel	w10, w10, w12, lt
000000000001c380	cmp	w11, w10
000000000001c384	b.lt	0x1c35c
000000000001c388	b	0x1c390
000000000001c38c	mov	w11, #0x0
000000000001c390	sxtw	x10, w11
000000000001c394	lsl	x10, x10, #4
000000000001c398	ldr	w9, [x9, x10]
000000000001c39c	cmp	w9, #0xa8
000000000001c3a0	b.ne	0x1c3cc
000000000001c3a4	mov	x0, x19
000000000001c3a8	mov	x1, x8
000000000001c3ac	bl	"_kfun:kotlin.collections.HashMap#containsEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.Boolean"
000000000001c3b0	tbnz	w0, #0x0, 0x1c12c
000000000001c3b4	b	0x1c424
000000000001c3b8	sxtw	x10, w11
000000000001c3bc	lsl	x10, x10, #4
000000000001c3c0	ldr	w9, [x9, x10]
000000000001c3c4	cmp	w9, #0xa8
000000000001c3c8	b.eq	0x1c3a4
000000000001c3cc	adr	x1, #0x486e4
000000000001c3d0	nop
000000000001c3d4	mov	x0, x8
000000000001c3d8	bl	_ThrowClassCastException
000000000001c3dc	brk	#0x1
000000000001c3e0	mov	w0, #0x1
000000000001c3e4	b	0x1c428
000000000001c3e8	b	0x1c3ec
000000000001c3ec	mov	x8, sp
000000000001c3f0	str	x8, [x23, #0x110]
000000000001c3f4	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000001c3f8	ldr	x8, [x0, #0x8]
000000000001c3fc	ldr	x19, [x8]
000000000001c400	str	x19, [sp, #0x28]
000000000001c404	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000001c408	ldr	x8, [x19]
000000000001c40c	and	x8, x8, #0xfffffffffffffffc
000000000001c410	ldr	x8, [x8]
000000000001c414	ldr	w8, [x8, #0x5c]
000000000001c418	and	w8, w8, #0xfffffffe
000000000001c41c	cmp	w8, #0x94
000000000001c420	b.ne	0x1c44c
000000000001c424	mov	w0, #0x0
000000000001c428	ldr	x8, [sp, #0x8]
000000000001c42c	str	x8, [x23, #0x110]
000000000001c430	ldp	x29, x30, [sp, #0x70]
000000000001c434	ldp	x20, x19, [sp, #0x60]
000000000001c438	ldp	x22, x21, [sp, #0x50]
000000000001c43c	ldp	x24, x23, [sp, #0x40]
000000000001c440	ldp	x26, x25, [sp, #0x30]
000000000001c444	add	sp, sp, #0x80
000000000001c448	ret
000000000001c44c	mov	x0, x19
000000000001c450	bl	_ThrowException
_kfun:kotlin.collections.HashMap#keysIterator(){}kotlin.collections.HashMap.KeysItr<1:0,1:1>:
000000000001c454	stp	x22, x21, [sp, #-0x30]!
000000000001c458	stp	x20, x19, [sp, #0x10]
000000000001c45c	stp	x29, x30, [sp, #0x20]
000000000001c460	add	x29, sp, #0x20
000000000001c464	mov	x19, x1
000000000001c468	mov	x20, x0
000000000001c46c	adr	x8, #0x7809d
000000000001c470	nop
000000000001c474	ldarb	w8, [x8]
000000000001c478	tbz	w8, #0x0, 0x1c480
000000000001c47c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c480	adrp	x0, 94 ; 0x7a000
000000000001c484	add	x0, x0, #0x4e0
000000000001c488	ldr	x8, [x0]
000000000001c48c	blr	x8
000000000001c490	ldr	x8, [x0]
000000000001c494	ldr	x8, [x8, #0x118]
000000000001c498	add	x0, x8, #0x70
000000000001c49c	mov	w1, #0x20
000000000001c4a0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001c4a4	mov	x21, x0
000000000001c4a8	adr	x8, #0x47c78
000000000001c4ac	nop
000000000001c4b0	str	x8, [x21, #0x10]!
000000000001c4b4	stur	xzr, [x21, #-0x8]
000000000001c4b8	str	x21, [x19]
000000000001c4bc	str	x20, [x21, #0x8]
000000000001c4c0	mov	w8, #-0x1
000000000001c4c4	str	w8, [x21, #0x14]
000000000001c4c8	mov	x0, x21
000000000001c4cc	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001c4d0	str	x21, [x19]
000000000001c4d4	mov	x0, x21
000000000001c4d8	ldp	x29, x30, [sp, #0x20]
000000000001c4dc	ldp	x20, x19, [sp, #0x10]
000000000001c4e0	ldp	x22, x21, [sp], #0x30
000000000001c4e4	ret
_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>:
000000000001c4e8	stp	x22, x21, [sp, #-0x30]!
000000000001c4ec	stp	x20, x19, [sp, #0x10]
000000000001c4f0	stp	x29, x30, [sp, #0x20]
000000000001c4f4	add	x29, sp, #0x20
000000000001c4f8	mov	x19, x1
000000000001c4fc	mov	x20, x0
000000000001c500	adr	x8, #0x78009
000000000001c504	nop
000000000001c508	ldarb	w8, [x8]
000000000001c50c	tbz	w8, #0x0, 0x1c514
000000000001c510	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c514	adrp	x0, 94 ; 0x7a000
000000000001c518	add	x0, x0, #0x4e0
000000000001c51c	ldr	x8, [x0]
000000000001c520	blr	x8
000000000001c524	ldr	x8, [x0]
000000000001c528	ldr	x8, [x8, #0x118]
000000000001c52c	add	x0, x8, #0x70
000000000001c530	mov	w1, #0x20
000000000001c534	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001c538	mov	x21, x0
000000000001c53c	adr	x8, #0x47d04
000000000001c540	nop
000000000001c544	str	x8, [x21, #0x10]!
000000000001c548	stur	xzr, [x21, #-0x8]
000000000001c54c	str	x21, [x19]
000000000001c550	str	x20, [x21, #0x8]
000000000001c554	mov	w8, #-0x1
000000000001c558	str	w8, [x21, #0x14]
000000000001c55c	mov	x0, x21
000000000001c560	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001c564	str	x21, [x19]
000000000001c568	mov	x0, x21
000000000001c56c	ldp	x29, x30, [sp, #0x20]
000000000001c570	ldp	x20, x19, [sp, #0x10]
000000000001c574	ldp	x22, x21, [sp], #0x30
000000000001c578	ret
_kfun:kotlin.collections.HashMap.Companion.computeHashSize#internal:
000000000001c57c	stp	x20, x19, [sp, #-0x20]!
000000000001c580	stp	x29, x30, [sp, #0x10]
000000000001c584	add	x29, sp, #0x10
000000000001c588	mov	x19, x0
000000000001c58c	adr	x8, #0x77f7d
000000000001c590	nop
000000000001c594	ldarb	w8, [x8]
000000000001c598	tbz	w8, #0x0, 0x1c5a0
000000000001c59c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c5a0	cmp	w19, #0x1
000000000001c5a4	b.lt	0x1c5c0
000000000001c5a8	adds	w8, w19, w19, lsl #1
000000000001c5ac	b.ne	0x1c5c4
000000000001c5b0	mov	w0, #0x0
000000000001c5b4	ldp	x29, x30, [sp, #0x10]
000000000001c5b8	ldp	x20, x19, [sp], #0x20
000000000001c5bc	ret
000000000001c5c0	mov	w8, #0x3
000000000001c5c4	clz	w8, w8
000000000001c5c8	eor	w8, w8, #0x1f
000000000001c5cc	mov	w9, #0x1
000000000001c5d0	lsl	w0, w9, w8
000000000001c5d4	ldp	x29, x30, [sp, #0x10]
000000000001c5d8	ldp	x20, x19, [sp], #0x20
000000000001c5dc	ret
_kfun:kotlin.collections.HashMap.Itr#initNext(){}:
000000000001c5e0	sub	sp, sp, #0x50
000000000001c5e4	stp	x22, x21, [sp, #0x20]
000000000001c5e8	stp	x20, x19, [sp, #0x30]
000000000001c5ec	stp	x29, x30, [sp, #0x40]
000000000001c5f0	add	x29, sp, #0x40
000000000001c5f4	mov	x19, x0
000000000001c5f8	movi.16b	v0, #0x0
000000000001c5fc	stp	q0, q0, [sp]
000000000001c600	adrp	x0, 94 ; 0x7a000
000000000001c604	add	x0, x0, #0x4e0
000000000001c608	ldr	x8, [x0]
000000000001c60c	blr	x8
000000000001c610	ldr	x20, [x0]
000000000001c614	ldr	x8, [x20, #0x110]
000000000001c618	mov	x9, sp
000000000001c61c	str	x9, [x20, #0x110]
000000000001c620	mov	x9, #0x400000000
000000000001c624	stp	x8, x9, [sp, #0x8]
000000000001c628	adr	x21, #0x77ee1
000000000001c62c	nop
000000000001c630	ldarb	w8, [x21]
000000000001c634	tbz	w8, #0x0, 0x1c63c
000000000001c638	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c63c	ldr	w8, [x19, #0x10]
000000000001c640	b	0x1c650
000000000001c644	ldr	w8, [x19, #0x10]
000000000001c648	add	w8, w8, #0x1
000000000001c64c	str	w8, [x19, #0x10]
000000000001c650	ldr	x9, [x19, #0x8]
000000000001c654	ldr	w10, [x9, #0x44]
000000000001c658	cmp	w8, w10
000000000001c65c	b.ge	0x1c690
000000000001c660	ldr	x9, [x9, #0x18]
000000000001c664	str	x9, [sp, #0x18]
000000000001c668	ldr	w10, [x9, #0x8]
000000000001c66c	cmp	w10, w8
000000000001c670	b.ls	0x1c6ac
000000000001c674	add	x8, x9, w8, sxtw #2
000000000001c678	ldr	w8, [x8, #0x10]
000000000001c67c	tbz	w8, #0x1f, 0x1c690
000000000001c680	ldarb	w8, [x21]
000000000001c684	tbz	w8, #0x0, 0x1c644
000000000001c688	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c68c	b	0x1c644
000000000001c690	ldr	x8, [sp, #0x8]
000000000001c694	str	x8, [x20, #0x110]
000000000001c698	ldp	x29, x30, [sp, #0x40]
000000000001c69c	ldp	x20, x19, [sp, #0x30]
000000000001c6a0	ldp	x22, x21, [sp, #0x20]
000000000001c6a4	add	sp, sp, #0x50
000000000001c6a8	ret
000000000001c6ac	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.Itr#hasNext(){}kotlin.Boolean:
000000000001c6b0	stp	x20, x19, [sp, #-0x20]!
000000000001c6b4	stp	x29, x30, [sp, #0x10]
000000000001c6b8	add	x29, sp, #0x10
000000000001c6bc	mov	x19, x0
000000000001c6c0	adr	x8, #0x77e49
000000000001c6c4	nop
000000000001c6c8	ldarb	w8, [x8]
000000000001c6cc	tbz	w8, #0x0, 0x1c6d4
000000000001c6d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c6d4	ldr	w8, [x19, #0x10]
000000000001c6d8	ldr	x9, [x19, #0x8]
000000000001c6dc	ldr	w9, [x9, #0x44]
000000000001c6e0	cmp	w8, w9
000000000001c6e4	cset	w0, lt
000000000001c6e8	ldp	x29, x30, [sp, #0x10]
000000000001c6ec	ldp	x20, x19, [sp], #0x20
000000000001c6f0	ret
_kfun:kotlin.collections.HashMap.Itr#remove(){}:
000000000001c6f4	stp	x20, x19, [sp, #-0x20]!
000000000001c6f8	stp	x29, x30, [sp, #0x10]
000000000001c6fc	add	x29, sp, #0x10
000000000001c700	mov	x19, x0
000000000001c704	adr	x8, #0x77e05
000000000001c708	nop
000000000001c70c	ldarb	w8, [x8]
000000000001c710	tbz	w8, #0x0, 0x1c718
000000000001c714	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c718	ldr	x0, [x19, #0x8]
000000000001c71c	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001c720	ldr	x0, [x19, #0x8]
000000000001c724	ldr	w1, [x19, #0x14]
000000000001c728	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
000000000001c72c	mov	w8, #-0x1
000000000001c730	str	w8, [x19, #0x14]
000000000001c734	ldp	x29, x30, [sp, #0x10]
000000000001c738	ldp	x20, x19, [sp], #0x20
000000000001c73c	ret
_kfun:kotlin.collections.HashMap.KeysItr#next(){}1:0:
000000000001c740	sub	sp, sp, #0x60
000000000001c744	stp	x22, x21, [sp, #0x30]
000000000001c748	stp	x20, x19, [sp, #0x40]
000000000001c74c	stp	x29, x30, [sp, #0x50]
000000000001c750	add	x29, sp, #0x50
000000000001c754	mov	x19, x1
000000000001c758	mov	x20, x0
000000000001c75c	movi.16b	v0, #0x0
000000000001c760	stp	q0, q0, [sp]
000000000001c764	str	q0, [sp, #0x20]
000000000001c768	adrp	x0, 94 ; 0x7a000
000000000001c76c	add	x0, x0, #0x4e0
000000000001c770	ldr	x8, [x0]
000000000001c774	blr	x8
000000000001c778	ldr	x22, [x0]
000000000001c77c	ldr	x8, [x22, #0x110]
000000000001c780	mov	x9, sp
000000000001c784	str	x9, [x22, #0x110]
000000000001c788	mov	x9, #0x600000000
000000000001c78c	stp	x8, x9, [sp, #0x8]
000000000001c790	adr	x8, #0x77d79
000000000001c794	nop
000000000001c798	ldarb	w8, [x8]
000000000001c79c	tbz	w8, #0x0, 0x1c7a4
000000000001c7a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c7a4	ldr	w8, [x20, #0x10]
000000000001c7a8	ldr	x9, [x20, #0x8]
000000000001c7ac	ldr	w10, [x9, #0x44]
000000000001c7b0	cmp	w8, w10
000000000001c7b4	b.ge	0x1c810
000000000001c7b8	add	w10, w8, #0x1
000000000001c7bc	stp	w10, w8, [x20, #0x10]
000000000001c7c0	ldr	x9, [x9, #0x8]
000000000001c7c4	str	x9, [sp, #0x20]
000000000001c7c8	ldr	w10, [x9, #0x8]
000000000001c7cc	cmp	w10, w8
000000000001c7d0	b.ls	0x1c848
000000000001c7d4	sxtw	x8, w8
000000000001c7d8	add	x8, x9, x8, lsl #3
000000000001c7dc	ldr	x21, [x8, #0x10]
000000000001c7e0	str	x21, [sp, #0x28]
000000000001c7e4	mov	x0, x20
000000000001c7e8	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001c7ec	str	x21, [x19]
000000000001c7f0	ldr	x8, [sp, #0x8]
000000000001c7f4	str	x8, [x22, #0x110]
000000000001c7f8	mov	x0, x21
000000000001c7fc	ldp	x29, x30, [sp, #0x50]
000000000001c800	ldp	x20, x19, [sp, #0x40]
000000000001c804	ldp	x22, x21, [sp, #0x30]
000000000001c808	add	sp, sp, #0x60
000000000001c80c	ret
000000000001c810	ldr	x8, [x22, #0x118]
000000000001c814	add	x0, x8, #0x70
000000000001c818	mov	w1, #0x38
000000000001c81c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001c820	mov	x19, x0
000000000001c824	adr	x8, #0x44b6c
000000000001c828	nop
000000000001c82c	str	x8, [x19, #0x10]!
000000000001c830	stur	xzr, [x19, #-0x8]
000000000001c834	str	x19, [sp, #0x18]
000000000001c838	mov	x0, x19
000000000001c83c	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001c840	mov	x0, x19
000000000001c844	bl	_ThrowException
000000000001c848	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.ValuesItr#next(){}1:1:
000000000001c84c	sub	sp, sp, #0x60
000000000001c850	stp	x22, x21, [sp, #0x30]
000000000001c854	stp	x20, x19, [sp, #0x40]
000000000001c858	stp	x29, x30, [sp, #0x50]
000000000001c85c	add	x29, sp, #0x50
000000000001c860	mov	x19, x1
000000000001c864	mov	x20, x0
000000000001c868	movi.16b	v0, #0x0
000000000001c86c	stp	q0, q0, [sp]
000000000001c870	str	q0, [sp, #0x20]
000000000001c874	adrp	x0, 94 ; 0x7a000
000000000001c878	add	x0, x0, #0x4e0
000000000001c87c	ldr	x8, [x0]
000000000001c880	blr	x8
000000000001c884	ldr	x22, [x0]
000000000001c888	ldr	x8, [x22, #0x110]
000000000001c88c	mov	x9, sp
000000000001c890	str	x9, [x22, #0x110]
000000000001c894	mov	x9, #0x600000000
000000000001c898	stp	x8, x9, [sp, #0x8]
000000000001c89c	adr	x8, #0x77c6d
000000000001c8a0	nop
000000000001c8a4	ldarb	w8, [x8]
000000000001c8a8	tbz	w8, #0x0, 0x1c8b0
000000000001c8ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c8b0	ldr	w8, [x20, #0x10]
000000000001c8b4	ldr	x9, [x20, #0x8]
000000000001c8b8	ldr	w10, [x9, #0x44]
000000000001c8bc	cmp	w8, w10
000000000001c8c0	b.ge	0x1c920
000000000001c8c4	add	w10, w8, #0x1
000000000001c8c8	stp	w10, w8, [x20, #0x10]
000000000001c8cc	ldr	x9, [x9, #0x10]
000000000001c8d0	str	x9, [sp, #0x20]
000000000001c8d4	cbz	x9, 0x1c958
000000000001c8d8	ldr	w10, [x9, #0x8]
000000000001c8dc	cmp	w10, w8
000000000001c8e0	b.ls	0x1c95c
000000000001c8e4	sxtw	x8, w8
000000000001c8e8	add	x8, x9, x8, lsl #3
000000000001c8ec	ldr	x21, [x8, #0x10]
000000000001c8f0	str	x21, [sp, #0x28]
000000000001c8f4	mov	x0, x20
000000000001c8f8	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001c8fc	str	x21, [x19]
000000000001c900	ldr	x8, [sp, #0x8]
000000000001c904	str	x8, [x22, #0x110]
000000000001c908	mov	x0, x21
000000000001c90c	ldp	x29, x30, [sp, #0x50]
000000000001c910	ldp	x20, x19, [sp, #0x40]
000000000001c914	ldp	x22, x21, [sp, #0x30]
000000000001c918	add	sp, sp, #0x60
000000000001c91c	ret
000000000001c920	ldr	x8, [x22, #0x118]
000000000001c924	add	x0, x8, #0x70
000000000001c928	mov	w1, #0x38
000000000001c92c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001c930	mov	x19, x0
000000000001c934	adr	x8, #0x44a5c
000000000001c938	nop
000000000001c93c	str	x8, [x19, #0x10]!
000000000001c940	stur	xzr, [x19, #-0x8]
000000000001c944	str	x19, [sp, #0x18]
000000000001c948	mov	x0, x19
000000000001c94c	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001c950	mov	x0, x19
000000000001c954	bl	_ThrowException
000000000001c958	bl	_ThrowNullPointerException
000000000001c95c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntriesItr#next(){}kotlin.collections.HashMap.EntryRef<1:0,1:1>:
000000000001c960	sub	sp, sp, #0x70
000000000001c964	stp	x24, x23, [sp, #0x30]
000000000001c968	stp	x22, x21, [sp, #0x40]
000000000001c96c	stp	x20, x19, [sp, #0x50]
000000000001c970	stp	x29, x30, [sp, #0x60]
000000000001c974	add	x29, sp, #0x60
000000000001c978	mov	x19, x1
000000000001c97c	mov	x20, x0
000000000001c980	movi.16b	v0, #0x0
000000000001c984	stp	q0, q0, [sp]
000000000001c988	str	xzr, [sp, #0x20]
000000000001c98c	adrp	x0, 94 ; 0x7a000
000000000001c990	add	x0, x0, #0x4e0
000000000001c994	ldr	x8, [x0]
000000000001c998	blr	x8
000000000001c99c	ldr	x22, [x0]
000000000001c9a0	ldr	x8, [x22, #0x110]
000000000001c9a4	mov	x9, sp
000000000001c9a8	str	x9, [x22, #0x110]
000000000001c9ac	mov	x9, #0x500000000
000000000001c9b0	stp	x8, x9, [sp, #0x8]
000000000001c9b4	adr	x8, #0x77b55
000000000001c9b8	nop
000000000001c9bc	ldarb	w8, [x8]
000000000001c9c0	tbz	w8, #0x0, 0x1c9c8
000000000001c9c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001c9c8	ldr	w23, [x20, #0x10]
000000000001c9cc	ldr	x24, [x20, #0x8]
000000000001c9d0	ldr	w8, [x24, #0x44]
000000000001c9d4	cmp	w23, w8
000000000001c9d8	b.ge	0x1ca44
000000000001c9dc	add	w8, w23, #0x1
000000000001c9e0	stp	w8, w23, [x20, #0x10]
000000000001c9e4	ldr	x8, [x22, #0x118]
000000000001c9e8	add	x0, x8, #0x70
000000000001c9ec	mov	w1, #0x20
000000000001c9f0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001c9f4	mov	x21, x0
000000000001c9f8	adr	x8, #0x478d8
000000000001c9fc	nop
000000000001ca00	str	x8, [x21, #0x10]!
000000000001ca04	stur	xzr, [x21, #-0x8]
000000000001ca08	str	x21, [sp, #0x20]
000000000001ca0c	str	x24, [x21, #0x8]
000000000001ca10	str	w23, [x21, #0x10]
000000000001ca14	mov	x0, x20
000000000001ca18	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001ca1c	str	x21, [x19]
000000000001ca20	ldr	x8, [sp, #0x8]
000000000001ca24	str	x8, [x22, #0x110]
000000000001ca28	mov	x0, x21
000000000001ca2c	ldp	x29, x30, [sp, #0x60]
000000000001ca30	ldp	x20, x19, [sp, #0x50]
000000000001ca34	ldp	x22, x21, [sp, #0x40]
000000000001ca38	ldp	x24, x23, [sp, #0x30]
000000000001ca3c	add	sp, sp, #0x70
000000000001ca40	ret
000000000001ca44	ldr	x8, [x22, #0x118]
000000000001ca48	add	x0, x8, #0x70
000000000001ca4c	mov	w1, #0x38
000000000001ca50	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ca54	mov	x19, x0
000000000001ca58	adr	x8, #0x44938
000000000001ca5c	nop
000000000001ca60	str	x8, [x19, #0x10]!
000000000001ca64	stur	xzr, [x19, #-0x8]
000000000001ca68	str	x19, [sp, #0x18]
000000000001ca6c	mov	x0, x19
000000000001ca70	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001ca74	mov	x0, x19
000000000001ca78	bl	_ThrowException
_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0:
000000000001ca7c	sub	sp, sp, #0x50
000000000001ca80	stp	x22, x21, [sp, #0x20]
000000000001ca84	stp	x20, x19, [sp, #0x30]
000000000001ca88	stp	x29, x30, [sp, #0x40]
000000000001ca8c	add	x29, sp, #0x40
000000000001ca90	mov	x19, x1
000000000001ca94	mov	x20, x0
000000000001ca98	movi.16b	v0, #0x0
000000000001ca9c	stp	q0, q0, [sp]
000000000001caa0	adrp	x0, 94 ; 0x7a000
000000000001caa4	add	x0, x0, #0x4e0
000000000001caa8	ldr	x8, [x0]
000000000001caac	blr	x8
000000000001cab0	ldr	x21, [x0]
000000000001cab4	ldr	x8, [x21, #0x110]
000000000001cab8	mov	x9, sp
000000000001cabc	str	x9, [x21, #0x110]
000000000001cac0	mov	x9, #0x400000000
000000000001cac4	stp	x8, x9, [sp, #0x8]
000000000001cac8	adr	x8, #0x77a41
000000000001cacc	nop
000000000001cad0	ldarb	w8, [x8]
000000000001cad4	tbz	w8, #0x0, 0x1cadc
000000000001cad8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cadc	ldr	x8, [x20, #0x8]
000000000001cae0	ldr	x8, [x8, #0x8]
000000000001cae4	str	x8, [sp, #0x18]
000000000001cae8	ldrsw	x9, [x20, #0x10]
000000000001caec	ldr	w10, [x8, #0x8]
000000000001caf0	cmp	w10, w9
000000000001caf4	b.ls	0x1cb20
000000000001caf8	add	x8, x8, x9, lsl #3
000000000001cafc	ldr	x0, [x8, #0x10]
000000000001cb00	str	x0, [x19]
000000000001cb04	ldr	x8, [sp, #0x8]
000000000001cb08	str	x8, [x21, #0x110]
000000000001cb0c	ldp	x29, x30, [sp, #0x40]
000000000001cb10	ldp	x20, x19, [sp, #0x30]
000000000001cb14	ldp	x22, x21, [sp, #0x20]
000000000001cb18	add	sp, sp, #0x50
000000000001cb1c	ret
000000000001cb20	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1:
000000000001cb24	sub	sp, sp, #0x50
000000000001cb28	stp	x22, x21, [sp, #0x20]
000000000001cb2c	stp	x20, x19, [sp, #0x30]
000000000001cb30	stp	x29, x30, [sp, #0x40]
000000000001cb34	add	x29, sp, #0x40
000000000001cb38	mov	x19, x1
000000000001cb3c	mov	x20, x0
000000000001cb40	movi.16b	v0, #0x0
000000000001cb44	stp	q0, q0, [sp]
000000000001cb48	adrp	x0, 94 ; 0x7a000
000000000001cb4c	add	x0, x0, #0x4e0
000000000001cb50	ldr	x8, [x0]
000000000001cb54	blr	x8
000000000001cb58	ldr	x21, [x0]
000000000001cb5c	ldr	x8, [x21, #0x110]
000000000001cb60	mov	x9, sp
000000000001cb64	str	x9, [x21, #0x110]
000000000001cb68	mov	x9, #0x400000000
000000000001cb6c	stp	x8, x9, [sp, #0x8]
000000000001cb70	adr	x8, #0x77999
000000000001cb74	nop
000000000001cb78	ldarb	w8, [x8]
000000000001cb7c	tbz	w8, #0x0, 0x1cb84
000000000001cb80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cb84	ldr	x8, [x20, #0x8]
000000000001cb88	ldr	x8, [x8, #0x10]
000000000001cb8c	str	x8, [sp, #0x18]
000000000001cb90	cbz	x8, 0x1cbcc
000000000001cb94	ldrsw	x9, [x20, #0x10]
000000000001cb98	ldr	w10, [x8, #0x8]
000000000001cb9c	cmp	w10, w9
000000000001cba0	b.ls	0x1cbd0
000000000001cba4	add	x8, x8, x9, lsl #3
000000000001cba8	ldr	x0, [x8, #0x10]
000000000001cbac	str	x0, [x19]
000000000001cbb0	ldr	x8, [sp, #0x8]
000000000001cbb4	str	x8, [x21, #0x110]
000000000001cbb8	ldp	x29, x30, [sp, #0x40]
000000000001cbbc	ldp	x20, x19, [sp, #0x30]
000000000001cbc0	ldp	x22, x21, [sp, #0x20]
000000000001cbc4	add	sp, sp, #0x50
000000000001cbc8	ret
000000000001cbcc	bl	_ThrowNullPointerException
000000000001cbd0	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntryRef#setValue(1:1){}1:1:
000000000001cbd4	sub	sp, sp, #0x70
000000000001cbd8	stp	x24, x23, [sp, #0x30]
000000000001cbdc	stp	x22, x21, [sp, #0x40]
000000000001cbe0	stp	x20, x19, [sp, #0x50]
000000000001cbe4	stp	x29, x30, [sp, #0x60]
000000000001cbe8	add	x29, sp, #0x60
000000000001cbec	mov	x19, x2
000000000001cbf0	mov	x20, x1
000000000001cbf4	mov	x21, x0
000000000001cbf8	movi.16b	v0, #0x0
000000000001cbfc	stp	q0, q0, [sp]
000000000001cc00	str	xzr, [sp, #0x20]
000000000001cc04	mov	x8, sp
000000000001cc08	add	x22, x8, #0x18
000000000001cc0c	adrp	x0, 94 ; 0x7a000
000000000001cc10	add	x0, x0, #0x4e0
000000000001cc14	ldr	x9, [x0]
000000000001cc18	blr	x9
000000000001cc1c	ldr	x23, [x0]
000000000001cc20	ldr	x9, [x23, #0x110]
000000000001cc24	str	x8, [x23, #0x110]
000000000001cc28	mov	x8, #0x500000000
000000000001cc2c	stp	x9, x8, [sp, #0x8]
000000000001cc30	adr	x8, #0x778d9
000000000001cc34	nop
000000000001cc38	ldarb	w8, [x8]
000000000001cc3c	tbz	w8, #0x0, 0x1cc44
000000000001cc40	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cc44	ldr	x0, [x21, #0x8]
000000000001cc48	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001cc4c	ldr	x0, [x21, #0x8]
000000000001cc50	mov	x1, x22
000000000001cc54	bl	"_kfun:kotlin.collections.HashMap.allocateValuesArray#internal"
000000000001cc58	ldrsw	x8, [x21, #0x10]
000000000001cc5c	ldr	w9, [x0, #0x8]
000000000001cc60	cmp	w9, w8
000000000001cc64	b.ls	0x1cca4
000000000001cc68	add	x9, x0, x8, lsl #3
000000000001cc6c	ldr	x8, [x9, #0x10]
000000000001cc70	str	x8, [sp, #0x20]
000000000001cc74	ldr	xzr, [x0]
000000000001cc78	str	x20, [x9, #0x10]
000000000001cc7c	str	x8, [x19]
000000000001cc80	ldr	x9, [sp, #0x8]
000000000001cc84	str	x9, [x23, #0x110]
000000000001cc88	mov	x0, x8
000000000001cc8c	ldp	x29, x30, [sp, #0x60]
000000000001cc90	ldp	x20, x19, [sp, #0x50]
000000000001cc94	ldp	x22, x21, [sp, #0x40]
000000000001cc98	ldp	x24, x23, [sp, #0x30]
000000000001cc9c	add	sp, sp, #0x70
000000000001cca0	ret
000000000001cca4	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMap.EntryRef#equals(kotlin.Any?){}kotlin.Boolean:
000000000001cca8	sub	sp, sp, #0x80
000000000001ccac	stp	x24, x23, [sp, #0x40]
000000000001ccb0	stp	x22, x21, [sp, #0x50]
000000000001ccb4	stp	x20, x19, [sp, #0x60]
000000000001ccb8	stp	x29, x30, [sp, #0x70]
000000000001ccbc	add	x29, sp, #0x70
000000000001ccc0	mov	x20, x1
000000000001ccc4	mov	x19, x0
000000000001ccc8	movi.16b	v0, #0x0
000000000001cccc	stp	q0, q0, [sp]
000000000001ccd0	str	xzr, [sp, #0x30]
000000000001ccd4	str	q0, [sp, #0x20]
000000000001ccd8	mov	x24, sp
000000000001ccdc	adrp	x0, 94 ; 0x7a000
000000000001cce0	add	x0, x0, #0x4e0
000000000001cce4	ldr	x8, [x0]
000000000001cce8	blr	x8
000000000001ccec	ldr	x23, [x0]
000000000001ccf0	ldr	x8, [x23, #0x110]
000000000001ccf4	str	x24, [x23, #0x110]
000000000001ccf8	mov	x9, #0x700000000
000000000001ccfc	stp	x8, x9, [sp, #0x8]
000000000001cd00	adr	x8, #0x77809
000000000001cd04	nop
000000000001cd08	ldarb	w8, [x8]
000000000001cd0c	tbz	w8, #0x0, 0x1cd14
000000000001cd10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001cd14	cbz	x20, 0x1cf1c
000000000001cd18	ldr	x8, [x20]
000000000001cd1c	and	x8, x8, #0xfffffffffffffffc
000000000001cd20	ldr	x8, [x8]
000000000001cd24	ldr	w9, [x8, #0x3c]
000000000001cd28	ldr	x8, [x8, #0x40]
000000000001cd2c	tbnz	w9, #0x1f, 0x1cd4c
000000000001cd30	mov	w10, #0xa8
000000000001cd34	and	x9, x9, x10
000000000001cd38	lsl	x9, x9, #4
000000000001cd3c	ldr	w8, [x8, x9]
000000000001cd40	cmp	w8, #0xa8
000000000001cd44	b.eq	0x1ce1c
000000000001cd48	b	0x1cf1c
000000000001cd4c	neg	w10, w9
000000000001cd50	mvn	w9, w9
000000000001cd54	cmp	w10, #0x9
000000000001cd58	b.ge	0x1cda4
000000000001cd5c	cmp	w10, #0x2
000000000001cd60	b.lt	0x1cdec
000000000001cd64	mov	x10, #0x0
000000000001cd68	mov	x11, x8
000000000001cd6c	ldr	w12, [x11]
000000000001cd70	cmp	w12, #0xa7
000000000001cd74	b.gt	0x1ce08
000000000001cd78	add	x10, x10, #0x1
000000000001cd7c	add	x11, x11, #0x10
000000000001cd80	cmp	x9, x10
000000000001cd84	b.ne	0x1cd6c
000000000001cd88	mov	x10, x9
000000000001cd8c	sxtw	x9, w10
000000000001cd90	lsl	x9, x9, #4
000000000001cd94	ldr	w8, [x8, x9]
000000000001cd98	cmp	w8, #0xa8
000000000001cd9c	b.eq	0x1ce1c
000000000001cda0	b	0x1cf1c
000000000001cda4	mov	w10, #0x0
000000000001cda8	add	w11, w9, w10
000000000001cdac	cmp	w11, #0x0
000000000001cdb0	cinc	w11, w11, lt
000000000001cdb4	asr	w11, w11, #1
000000000001cdb8	sbfiz	x12, x11, #4, #32
000000000001cdbc	ldr	w12, [x8, x12]
000000000001cdc0	cmp	w12, #0xa8
000000000001cdc4	csinc	w10, w10, w11, ge
000000000001cdc8	csel	w9, w9, w11, lt
000000000001cdcc	cmp	w10, w9
000000000001cdd0	b.lt	0x1cda8
000000000001cdd4	sxtw	x9, w10
000000000001cdd8	lsl	x9, x9, #4
000000000001cddc	ldr	w8, [x8, x9]
000000000001cde0	cmp	w8, #0xa8
000000000001cde4	b.ne	0x1cf1c
000000000001cde8	b	0x1ce1c
000000000001cdec	mov	w10, #0x0
000000000001cdf0	sxtw	x9, w10
000000000001cdf4	lsl	x9, x9, #4
000000000001cdf8	ldr	w8, [x8, x9]
000000000001cdfc	cmp	w8, #0xa8
000000000001ce00	b.eq	0x1ce1c
000000000001ce04	b	0x1cf1c
000000000001ce08	sxtw	x9, w10
000000000001ce0c	lsl	x9, x9, #4
000000000001ce10	ldr	w8, [x8, x9]
000000000001ce14	cmp	w8, #0xa8
000000000001ce18	b.ne	0x1cf1c
000000000001ce1c	add	x21, x24, #0x20
000000000001ce20	add	x1, x24, #0x18
000000000001ce24	ldr	x8, [x20]
000000000001ce28	and	x8, x8, #0xfffffffffffffffc
000000000001ce2c	ldr	x8, [x8]
000000000001ce30	ldr	w9, [x8, #0x3c]
000000000001ce34	ldr	x8, [x8, #0x40]
000000000001ce38	tbnz	w9, #0x1f, 0x1ce48
000000000001ce3c	mov	w10, #0xa8
000000000001ce40	and	x9, x9, x10
000000000001ce44	b	0x1cecc
000000000001ce48	neg	w10, w9
000000000001ce4c	mvn	w9, w9
000000000001ce50	cmp	w10, #0x9
000000000001ce54	b.ge	0x1ce8c
000000000001ce58	cmp	w10, #0x2
000000000001ce5c	b.lt	0x1cec0
000000000001ce60	mov	x10, #0x0
000000000001ce64	mov	x11, x8
000000000001ce68	ldr	w12, [x11]
000000000001ce6c	cmp	w12, #0xa7
000000000001ce70	b.gt	0x1cec8
000000000001ce74	add	x10, x10, #0x1
000000000001ce78	add	x11, x11, #0x10
000000000001ce7c	cmp	x9, x10
000000000001ce80	b.ne	0x1ce68
000000000001ce84	mov	x10, x9
000000000001ce88	b	0x1cec8
000000000001ce8c	mov	w10, #0x0
000000000001ce90	add	w11, w9, w10
000000000001ce94	cmp	w11, #0x0
000000000001ce98	cinc	w11, w11, lt
000000000001ce9c	asr	w11, w11, #1
000000000001cea0	sbfiz	x12, x11, #4, #32
000000000001cea4	ldr	w12, [x8, x12]
000000000001cea8	cmp	w12, #0xa8
000000000001ceac	csinc	w10, w10, w11, ge
000000000001ceb0	csel	w9, w9, w11, lt
000000000001ceb4	cmp	w10, w9
000000000001ceb8	b.lt	0x1ce90
000000000001cebc	b	0x1cec8
000000000001cec0	mov	w10, #0x0
000000000001cec4	b	0x1cec8
000000000001cec8	sxtw	x9, w10
000000000001cecc	add	x8, x8, x9, lsl #4
000000000001ced0	ldr	x8, [x8, #0x8]
000000000001ced4	ldr	x8, [x8]
000000000001ced8	mov	x0, x20
000000000001cedc	blr	x8
000000000001cee0	mov	x22, x0
000000000001cee4	mov	x0, x19
000000000001cee8	mov	x1, x21
000000000001ceec	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0"
000000000001cef0	mov	x1, x0
000000000001cef4	cbz	x22, 0x1cf18
000000000001cef8	ldr	x8, [x22]
000000000001cefc	and	x8, x8, #0xfffffffffffffffc
000000000001cf00	ldr	x8, [x8]
000000000001cf04	ldr	x8, [x8, #0x70]
000000000001cf08	mov	x0, x22
000000000001cf0c	blr	x8
000000000001cf10	cbz	w0, 0x1cf20
000000000001cf14	b	0x1cf40
000000000001cf18	cbz	x1, 0x1cf40
000000000001cf1c	mov	w0, #0x0
000000000001cf20	ldr	x8, [sp, #0x8]
000000000001cf24	str	x8, [x23, #0x110]
000000000001cf28	ldp	x29, x30, [sp, #0x70]
000000000001cf2c	ldp	x20, x19, [sp, #0x60]
000000000001cf30	ldp	x22, x21, [sp, #0x50]
000000000001cf34	ldp	x24, x23, [sp, #0x40]
000000000001cf38	add	sp, sp, #0x80
000000000001cf3c	ret
000000000001cf40	add	x21, x24, #0x30
000000000001cf44	add	x1, x24, #0x28
000000000001cf48	ldr	x8, [x20]
000000000001cf4c	and	x8, x8, #0xfffffffffffffffc
000000000001cf50	ldr	x8, [x8]
000000000001cf54	ldr	w9, [x8, #0x3c]
000000000001cf58	ldr	x8, [x8, #0x40]
000000000001cf5c	tbnz	w9, #0x1f, 0x1cf6c
000000000001cf60	mov	w10, #0xa8
000000000001cf64	and	x9, x9, x10
000000000001cf68	b	0x1cff0
000000000001cf6c	neg	w10, w9
000000000001cf70	mvn	w9, w9
000000000001cf74	cmp	w10, #0x9
000000000001cf78	b.ge	0x1cfb0
000000000001cf7c	cmp	w10, #0x2
000000000001cf80	b.lt	0x1cfe4
000000000001cf84	mov	x10, #0x0
000000000001cf88	mov	x11, x8
000000000001cf8c	ldr	w12, [x11]
000000000001cf90	cmp	w12, #0xa7
000000000001cf94	b.gt	0x1cfec
000000000001cf98	add	x10, x10, #0x1
000000000001cf9c	add	x11, x11, #0x10
000000000001cfa0	cmp	x9, x10
000000000001cfa4	b.ne	0x1cf8c
000000000001cfa8	mov	x10, x9
000000000001cfac	b	0x1cfec
000000000001cfb0	mov	w10, #0x0
000000000001cfb4	add	w11, w9, w10
000000000001cfb8	cmp	w11, #0x0
000000000001cfbc	cinc	w11, w11, lt
000000000001cfc0	asr	w11, w11, #1
000000000001cfc4	sbfiz	x12, x11, #4, #32
000000000001cfc8	ldr	w12, [x8, x12]
000000000001cfcc	cmp	w12, #0xa8
000000000001cfd0	csinc	w10, w10, w11, ge
000000000001cfd4	csel	w9, w9, w11, lt
000000000001cfd8	cmp	w10, w9
000000000001cfdc	b.lt	0x1cfb4
000000000001cfe0	b	0x1cfec
000000000001cfe4	mov	w10, #0x0
000000000001cfe8	b	0x1cfec
000000000001cfec	sxtw	x9, w10
000000000001cff0	add	x8, x8, x9, lsl #4
000000000001cff4	ldr	x8, [x8, #0x8]
000000000001cff8	ldr	x8, [x8, #0x8]
000000000001cffc	mov	x0, x20
000000000001d000	blr	x8
000000000001d004	mov	x20, x0
000000000001d008	mov	x0, x19
000000000001d00c	mov	x1, x21
000000000001d010	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
000000000001d014	mov	x1, x0
000000000001d018	cbz	x20, 0x1d038
000000000001d01c	ldr	x8, [x20]
000000000001d020	and	x8, x8, #0xfffffffffffffffc
000000000001d024	ldr	x8, [x8]
000000000001d028	ldr	x8, [x8, #0x70]
000000000001d02c	mov	x0, x20
000000000001d030	blr	x8
000000000001d034	b	0x1cf20
000000000001d038	cmp	x1, #0x0
000000000001d03c	cset	w0, eq
000000000001d040	b	0x1cf20
_kfun:kotlin.collections.HashMap.EntryRef#hashCode(){}kotlin.Int:
000000000001d044	sub	sp, sp, #0x60
000000000001d048	stp	x22, x21, [sp, #0x30]
000000000001d04c	stp	x20, x19, [sp, #0x40]
000000000001d050	stp	x29, x30, [sp, #0x50]
000000000001d054	add	x29, sp, #0x50
000000000001d058	mov	x19, x0
000000000001d05c	movi.16b	v0, #0x0
000000000001d060	stp	q0, q0, [sp]
000000000001d064	str	xzr, [sp, #0x20]
000000000001d068	mov	x8, sp
000000000001d06c	add	x20, x8, #0x20
000000000001d070	add	x21, x8, #0x18
000000000001d074	adrp	x0, 93 ; 0x7a000
000000000001d078	add	x0, x0, #0x4e0
000000000001d07c	ldr	x9, [x0]
000000000001d080	blr	x9
000000000001d084	ldr	x22, [x0]
000000000001d088	ldr	x9, [x22, #0x110]
000000000001d08c	str	x8, [x22, #0x110]
000000000001d090	mov	x8, #0x500000000
000000000001d094	stp	x9, x8, [sp, #0x8]
000000000001d098	adr	x8, #0x77471
000000000001d09c	nop
000000000001d0a0	ldarb	w8, [x8]
000000000001d0a4	tbz	w8, #0x0, 0x1d0ac
000000000001d0a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d0ac	mov	x0, x19
000000000001d0b0	mov	x1, x21
000000000001d0b4	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0"
000000000001d0b8	cbz	x0, 0x1d118
000000000001d0bc	ldr	x8, [x0]
000000000001d0c0	and	x8, x8, #0xfffffffffffffffc
000000000001d0c4	ldr	x8, [x8]
000000000001d0c8	ldr	x8, [x8, #0x78]
000000000001d0cc	blr	x8
000000000001d0d0	mov	x21, x0
000000000001d0d4	mov	x0, x19
000000000001d0d8	mov	x1, x20
000000000001d0dc	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
000000000001d0e0	cbz	x0, 0x1d0f8
000000000001d0e4	ldr	x8, [x0]
000000000001d0e8	and	x8, x8, #0xfffffffffffffffc
000000000001d0ec	ldr	x8, [x8]
000000000001d0f0	ldr	x8, [x8, #0x78]
000000000001d0f4	blr	x8
000000000001d0f8	eor	w0, w21, w0
000000000001d0fc	ldr	x8, [sp, #0x8]
000000000001d100	str	x8, [x22, #0x110]
000000000001d104	ldp	x29, x30, [sp, #0x50]
000000000001d108	ldp	x20, x19, [sp, #0x40]
000000000001d10c	ldp	x22, x21, [sp, #0x30]
000000000001d110	add	sp, sp, #0x60
000000000001d114	ret
000000000001d118	mov	w21, #0x0
000000000001d11c	mov	x0, x19
000000000001d120	mov	x1, x20
000000000001d124	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
000000000001d128	cbnz	x0, 0x1d0e4
000000000001d12c	b	0x1d0f8
_kfun:kotlin.collections.HashMap.EntryRef#toString(){}kotlin.String:
000000000001d130	sub	sp, sp, #0xd0
000000000001d134	stp	x26, x25, [sp, #0x80]
000000000001d138	stp	x24, x23, [sp, #0x90]
000000000001d13c	stp	x22, x21, [sp, #0xa0]
000000000001d140	stp	x20, x19, [sp, #0xb0]
000000000001d144	stp	x29, x30, [sp, #0xc0]
000000000001d148	add	x29, sp, #0xc0
000000000001d14c	mov	x19, x1
000000000001d150	mov	x20, x0
000000000001d154	movi.16b	v0, #0x0
000000000001d158	stp	q0, q0, [sp, #0x20]
000000000001d15c	str	xzr, [sp, #0x70]
000000000001d160	stp	q0, q0, [sp, #0x50]
000000000001d164	str	q0, [sp, #0x40]
000000000001d168	add	x26, sp, #0x20
000000000001d16c	add	x24, x26, #0x20
000000000001d170	add	x23, x26, #0x30
000000000001d174	add	x21, x26, #0x40
000000000001d178	add	x22, x26, #0x38
000000000001d17c	stp	xzr, xzr, [sp, #0x10]
000000000001d180	adr	x8, #0x47c40
000000000001d184	nop
000000000001d188	orr	x8, x8, #0x3
000000000001d18c	str	x8, [sp, #0x8]
000000000001d190	adrp	x0, 93 ; 0x7a000
000000000001d194	add	x0, x0, #0x4e0
000000000001d198	ldr	x8, [x0]
000000000001d19c	blr	x8
000000000001d1a0	ldr	x25, [x0]
000000000001d1a4	ldr	x8, [x25, #0x110]
000000000001d1a8	str	x26, [x25, #0x110]
000000000001d1ac	mov	x9, #0xb00000000
000000000001d1b0	stp	x8, x9, [sp, #0x28]
000000000001d1b4	adr	x8, #0x77355
000000000001d1b8	nop
000000000001d1bc	ldarb	w8, [x8]
000000000001d1c0	tbz	w8, #0x0, 0x1d1c8
000000000001d1c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d1c8	add	x8, sp, #0x8
000000000001d1cc	str	x8, [sp, #0x38]
000000000001d1d0	add	x0, sp, #0x8
000000000001d1d4	mov	w1, #0xa
000000000001d1d8	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
000000000001d1dc	mov	x0, x20
000000000001d1e0	mov	x1, x24
000000000001d1e4	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-key>(){}1:0"
000000000001d1e8	cbz	x0, 0x1d210
000000000001d1ec	add	x8, sp, #0x20
000000000001d1f0	add	x1, x8, #0x28
000000000001d1f4	ldr	x8, [x0]
000000000001d1f8	and	x8, x8, #0xfffffffffffffffc
000000000001d1fc	ldr	x8, [x8]
000000000001d200	ldr	x8, [x8, #0x80]
000000000001d204	blr	x8
000000000001d208	mov	x1, x0
000000000001d20c	b	0x1d214
000000000001d210	mov	x1, #0x0
000000000001d214	add	x0, sp, #0x8
000000000001d218	mov	x2, x23
000000000001d21c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001d220	adr	x1, #0x52490
000000000001d224	nop
000000000001d228	add	x0, sp, #0x8
000000000001d22c	mov	x2, x22
000000000001d230	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001d234	mov	x0, x20
000000000001d238	mov	x1, x21
000000000001d23c	bl	"_kfun:kotlin.collections.HashMap.EntryRef#<get-value>(){}1:1"
000000000001d240	cbz	x0, 0x1d264
000000000001d244	add	x1, x26, #0x48
000000000001d248	ldr	x8, [x0]
000000000001d24c	and	x8, x8, #0xfffffffffffffffc
000000000001d250	ldr	x8, [x8]
000000000001d254	ldr	x8, [x8, #0x80]
000000000001d258	blr	x8
000000000001d25c	mov	x1, x0
000000000001d260	b	0x1d268
000000000001d264	mov	x1, #0x0
000000000001d268	add	x8, sp, #0x20
000000000001d26c	add	x2, x8, #0x50
000000000001d270	add	x0, sp, #0x8
000000000001d274	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
000000000001d278	add	x0, sp, #0x8
000000000001d27c	mov	x1, x19
000000000001d280	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000001d284	str	x0, [x19]
000000000001d288	ldr	x8, [sp, #0x28]
000000000001d28c	str	x8, [x25, #0x110]
000000000001d290	ldp	x29, x30, [sp, #0xc0]
000000000001d294	ldp	x20, x19, [sp, #0xb0]
000000000001d298	ldp	x22, x21, [sp, #0xa0]
000000000001d29c	ldp	x24, x23, [sp, #0x90]
000000000001d2a0	ldp	x26, x25, [sp, #0x80]
000000000001d2a4	add	sp, sp, #0xd0
000000000001d2a8	ret
_kfun:kotlin.collections.HashMapKeys#<get-size>(){}kotlin.Int:
000000000001d2ac	stp	x20, x19, [sp, #-0x20]!
000000000001d2b0	stp	x29, x30, [sp, #0x10]
000000000001d2b4	add	x29, sp, #0x10
000000000001d2b8	mov	x19, x0
000000000001d2bc	adr	x8, #0x7724d
000000000001d2c0	nop
000000000001d2c4	ldarb	w8, [x8]
000000000001d2c8	tbz	w8, #0x0, 0x1d2d0
000000000001d2cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d2d0	ldr	x8, [x19, #0x8]
000000000001d2d4	ldr	w0, [x8, #0x4c]
000000000001d2d8	ldp	x29, x30, [sp, #0x10]
000000000001d2dc	ldp	x20, x19, [sp], #0x20
000000000001d2e0	ret
_kfun:kotlin.collections.HashMapKeys#isEmpty(){}kotlin.Boolean:
000000000001d2e4	stp	x20, x19, [sp, #-0x20]!
000000000001d2e8	stp	x29, x30, [sp, #0x10]
000000000001d2ec	add	x29, sp, #0x10
000000000001d2f0	mov	x19, x0
000000000001d2f4	adr	x8, #0x77215
000000000001d2f8	nop
000000000001d2fc	ldarb	w8, [x8]
000000000001d300	tbz	w8, #0x0, 0x1d308
000000000001d304	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d308	ldr	x8, [x19, #0x8]
000000000001d30c	ldr	w8, [x8, #0x4c]
000000000001d310	cmp	w8, #0x0
000000000001d314	cset	w0, eq
000000000001d318	ldp	x29, x30, [sp, #0x10]
000000000001d31c	ldp	x20, x19, [sp], #0x20
000000000001d320	ret
_kfun:kotlin.collections.HashMapKeys#contains(1:0){}kotlin.Boolean:
000000000001d324	stp	x20, x19, [sp, #-0x20]!
000000000001d328	stp	x29, x30, [sp, #0x10]
000000000001d32c	add	x29, sp, #0x10
000000000001d330	mov	x19, x1
000000000001d334	mov	x20, x0
000000000001d338	adr	x8, #0x771d1
000000000001d33c	nop
000000000001d340	ldarb	w8, [x8]
000000000001d344	tbz	w8, #0x0, 0x1d34c
000000000001d348	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d34c	ldr	x0, [x20, #0x8]
000000000001d350	mov	x1, x19
000000000001d354	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001d358	mvn	w8, w0
000000000001d35c	lsr	w0, w8, #31
000000000001d360	ldp	x29, x30, [sp, #0x10]
000000000001d364	ldp	x20, x19, [sp], #0x20
000000000001d368	ret
_kfun:kotlin.collections.HashMapKeys#getElement(1:0){}1:0?:
000000000001d36c	stp	x22, x21, [sp, #-0x30]!
000000000001d370	stp	x20, x19, [sp, #0x10]
000000000001d374	stp	x29, x30, [sp, #0x20]
000000000001d378	add	x29, sp, #0x20
000000000001d37c	mov	x19, x2
000000000001d380	mov	x20, x1
000000000001d384	mov	x21, x0
000000000001d388	adr	x8, #0x77181
000000000001d38c	nop
000000000001d390	ldarb	w8, [x8]
000000000001d394	tbz	w8, #0x0, 0x1d39c
000000000001d398	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d39c	ldr	x0, [x21, #0x8]
000000000001d3a0	mov	x1, x20
000000000001d3a4	mov	x2, x19
000000000001d3a8	bl	"_kfun:kotlin.collections.HashMap#getKey(1:0){}1:0?"
000000000001d3ac	str	x0, [x19]
000000000001d3b0	ldp	x29, x30, [sp, #0x20]
000000000001d3b4	ldp	x20, x19, [sp, #0x10]
000000000001d3b8	ldp	x22, x21, [sp], #0x30
000000000001d3bc	ret
_kfun:kotlin.collections.HashMapKeys#clear(){}:
000000000001d3c0	stp	x20, x19, [sp, #-0x20]!
000000000001d3c4	stp	x29, x30, [sp, #0x10]
000000000001d3c8	add	x29, sp, #0x10
000000000001d3cc	mov	x19, x0
000000000001d3d0	adr	x8, #0x77139
000000000001d3d4	nop
000000000001d3d8	ldarb	w8, [x8]
000000000001d3dc	tbz	w8, #0x0, 0x1d3e4
000000000001d3e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d3e4	ldr	x0, [x19, #0x8]
000000000001d3e8	ldp	x29, x30, [sp, #0x10]
000000000001d3ec	ldp	x20, x19, [sp], #0x20
000000000001d3f0	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashMapKeys#add(1:0){}kotlin.Boolean:
000000000001d3f4	sub	sp, sp, #0x40
000000000001d3f8	stp	x20, x19, [sp, #0x20]
000000000001d3fc	stp	x29, x30, [sp, #0x30]
000000000001d400	add	x29, sp, #0x30
000000000001d404	movi.16b	v0, #0x0
000000000001d408	stp	q0, q0, [sp]
000000000001d40c	adrp	x0, 93 ; 0x7a000
000000000001d410	add	x0, x0, #0x4e0
000000000001d414	ldr	x8, [x0]
000000000001d418	blr	x8
000000000001d41c	ldr	x19, [x0]
000000000001d420	ldr	x8, [x19, #0x110]
000000000001d424	mov	x9, sp
000000000001d428	str	x9, [x19, #0x110]
000000000001d42c	mov	x9, #0x400000000
000000000001d430	stp	x8, x9, [sp, #0x8]
000000000001d434	adr	x8, #0x770d5
000000000001d438	nop
000000000001d43c	ldarb	w8, [x8]
000000000001d440	tbz	w8, #0x0, 0x1d448
000000000001d444	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d448	ldr	x8, [x19, #0x118]
000000000001d44c	add	x0, x8, #0x70
000000000001d450	mov	w1, #0x38
000000000001d454	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d458	mov	x19, x0
000000000001d45c	adr	x8, #0x44254
000000000001d460	nop
000000000001d464	str	x8, [x19, #0x10]!
000000000001d468	stur	xzr, [x19, #-0x8]
000000000001d46c	str	x19, [sp, #0x18]
000000000001d470	mov	x0, x19
000000000001d474	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001d478	mov	x0, x19
000000000001d47c	bl	_ThrowException
_kfun:kotlin.collections.HashMapKeys#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001d480	sub	sp, sp, #0x40
000000000001d484	stp	x20, x19, [sp, #0x20]
000000000001d488	stp	x29, x30, [sp, #0x30]
000000000001d48c	add	x29, sp, #0x30
000000000001d490	movi.16b	v0, #0x0
000000000001d494	stp	q0, q0, [sp]
000000000001d498	adrp	x0, 93 ; 0x7a000
000000000001d49c	add	x0, x0, #0x4e0
000000000001d4a0	ldr	x8, [x0]
000000000001d4a4	blr	x8
000000000001d4a8	ldr	x19, [x0]
000000000001d4ac	ldr	x8, [x19, #0x110]
000000000001d4b0	mov	x9, sp
000000000001d4b4	str	x9, [x19, #0x110]
000000000001d4b8	mov	x9, #0x400000000
000000000001d4bc	stp	x8, x9, [sp, #0x8]
000000000001d4c0	adr	x8, #0x77049
000000000001d4c4	nop
000000000001d4c8	ldarb	w8, [x8]
000000000001d4cc	tbz	w8, #0x0, 0x1d4d4
000000000001d4d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d4d4	ldr	x8, [x19, #0x118]
000000000001d4d8	add	x0, x8, #0x70
000000000001d4dc	mov	w1, #0x38
000000000001d4e0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d4e4	mov	x19, x0
000000000001d4e8	adr	x8, #0x441c8
000000000001d4ec	nop
000000000001d4f0	str	x8, [x19, #0x10]!
000000000001d4f4	stur	xzr, [x19, #-0x8]
000000000001d4f8	str	x19, [sp, #0x18]
000000000001d4fc	mov	x0, x19
000000000001d500	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001d504	mov	x0, x19
000000000001d508	bl	_ThrowException
_kfun:kotlin.collections.HashMapKeys#remove(1:0){}kotlin.Boolean:
000000000001d50c	stp	x20, x19, [sp, #-0x20]!
000000000001d510	stp	x29, x30, [sp, #0x10]
000000000001d514	add	x29, sp, #0x10
000000000001d518	mov	x19, x1
000000000001d51c	mov	x20, x0
000000000001d520	adr	x8, #0x76fe9
000000000001d524	nop
000000000001d528	ldarb	w8, [x8]
000000000001d52c	tbz	w8, #0x0, 0x1d534
000000000001d530	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d534	ldr	x0, [x20, #0x8]
000000000001d538	mov	x1, x19
000000000001d53c	bl	"_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int"
000000000001d540	mvn	w8, w0
000000000001d544	lsr	w0, w8, #31
000000000001d548	ldp	x29, x30, [sp, #0x10]
000000000001d54c	ldp	x20, x19, [sp], #0x20
000000000001d550	ret
_kfun:kotlin.collections.HashMapKeys#iterator(){}kotlin.collections.MutableIterator<1:0>:
000000000001d554	stp	x20, x19, [sp, #-0x20]!
000000000001d558	stp	x29, x30, [sp, #0x10]
000000000001d55c	add	x29, sp, #0x10
000000000001d560	mov	x19, x1
000000000001d564	mov	x20, x0
000000000001d568	adr	x8, #0x76fa1
000000000001d56c	nop
000000000001d570	ldarb	w8, [x8]
000000000001d574	tbz	w8, #0x0, 0x1d57c
000000000001d578	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d57c	ldr	x0, [x20, #0x8]
000000000001d580	mov	x1, x19
000000000001d584	bl	"_kfun:kotlin.collections.HashMap#keysIterator(){}kotlin.collections.HashMap.KeysItr<1:0,1:1>"
000000000001d588	str	x0, [x19]
000000000001d58c	ldp	x29, x30, [sp, #0x10]
000000000001d590	ldp	x20, x19, [sp], #0x20
000000000001d594	ret
_kfun:kotlin.collections.HashMapKeys#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001d598	stp	x20, x19, [sp, #-0x20]!
000000000001d59c	stp	x29, x30, [sp, #0x10]
000000000001d5a0	add	x29, sp, #0x10
000000000001d5a4	mov	x19, x1
000000000001d5a8	mov	x20, x0
000000000001d5ac	adr	x8, #0x76f5d
000000000001d5b0	nop
000000000001d5b4	ldarb	w8, [x8]
000000000001d5b8	tbz	w8, #0x0, 0x1d5c0
000000000001d5bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d5c0	ldr	x0, [x20, #0x8]
000000000001d5c4	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001d5c8	mov	x0, x20
000000000001d5cc	mov	x1, x19
000000000001d5d0	ldp	x29, x30, [sp, #0x10]
000000000001d5d4	ldp	x20, x19, [sp], #0x20
000000000001d5d8	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapKeys#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001d5dc	stp	x20, x19, [sp, #-0x20]!
000000000001d5e0	stp	x29, x30, [sp, #0x10]
000000000001d5e4	add	x29, sp, #0x10
000000000001d5e8	mov	x19, x1
000000000001d5ec	mov	x20, x0
000000000001d5f0	adr	x8, #0x76f19
000000000001d5f4	nop
000000000001d5f8	ldarb	w8, [x8]
000000000001d5fc	tbz	w8, #0x0, 0x1d604
000000000001d600	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d604	ldr	x0, [x20, #0x8]
000000000001d608	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001d60c	mov	x0, x20
000000000001d610	mov	x1, x19
000000000001d614	ldp	x29, x30, [sp, #0x10]
000000000001d618	ldp	x20, x19, [sp], #0x20
000000000001d61c	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapValues#<get-size>(){}kotlin.Int:
000000000001d620	stp	x20, x19, [sp, #-0x20]!
000000000001d624	stp	x29, x30, [sp, #0x10]
000000000001d628	add	x29, sp, #0x10
000000000001d62c	mov	x19, x0
000000000001d630	adr	x8, #0x76ed9
000000000001d634	nop
000000000001d638	ldarb	w8, [x8]
000000000001d63c	tbz	w8, #0x0, 0x1d644
000000000001d640	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d644	ldr	x8, [x19, #0x8]
000000000001d648	ldr	w0, [x8, #0x4c]
000000000001d64c	ldp	x29, x30, [sp, #0x10]
000000000001d650	ldp	x20, x19, [sp], #0x20
000000000001d654	ret
_kfun:kotlin.collections.HashMapValues#isEmpty(){}kotlin.Boolean:
000000000001d658	stp	x20, x19, [sp, #-0x20]!
000000000001d65c	stp	x29, x30, [sp, #0x10]
000000000001d660	add	x29, sp, #0x10
000000000001d664	mov	x19, x0
000000000001d668	adr	x8, #0x76ea1
000000000001d66c	nop
000000000001d670	ldarb	w8, [x8]
000000000001d674	tbz	w8, #0x0, 0x1d67c
000000000001d678	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d67c	ldr	x8, [x19, #0x8]
000000000001d680	ldr	w8, [x8, #0x4c]
000000000001d684	cmp	w8, #0x0
000000000001d688	cset	w0, eq
000000000001d68c	ldp	x29, x30, [sp, #0x10]
000000000001d690	ldp	x20, x19, [sp], #0x20
000000000001d694	ret
_kfun:kotlin.collections.HashMapValues#contains(1:0){}kotlin.Boolean:
000000000001d698	stp	x20, x19, [sp, #-0x20]!
000000000001d69c	stp	x29, x30, [sp, #0x10]
000000000001d6a0	add	x29, sp, #0x10
000000000001d6a4	mov	x19, x1
000000000001d6a8	mov	x20, x0
000000000001d6ac	adr	x8, #0x76e5d
000000000001d6b0	nop
000000000001d6b4	ldarb	w8, [x8]
000000000001d6b8	tbz	w8, #0x0, 0x1d6c0
000000000001d6bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d6c0	ldr	x0, [x20, #0x8]
000000000001d6c4	mov	x1, x19
000000000001d6c8	bl	"_kfun:kotlin.collections.HashMap.findValue#internal"
000000000001d6cc	mvn	w8, w0
000000000001d6d0	lsr	w0, w8, #31
000000000001d6d4	ldp	x29, x30, [sp, #0x10]
000000000001d6d8	ldp	x20, x19, [sp], #0x20
000000000001d6dc	ret
_kfun:kotlin.collections.HashMapValues#add(1:0){}kotlin.Boolean:
000000000001d6e0	sub	sp, sp, #0x40
000000000001d6e4	stp	x20, x19, [sp, #0x20]
000000000001d6e8	stp	x29, x30, [sp, #0x30]
000000000001d6ec	add	x29, sp, #0x30
000000000001d6f0	movi.16b	v0, #0x0
000000000001d6f4	stp	q0, q0, [sp]
000000000001d6f8	adrp	x0, 93 ; 0x7a000
000000000001d6fc	add	x0, x0, #0x4e0
000000000001d700	ldr	x8, [x0]
000000000001d704	blr	x8
000000000001d708	ldr	x19, [x0]
000000000001d70c	ldr	x8, [x19, #0x110]
000000000001d710	mov	x9, sp
000000000001d714	str	x9, [x19, #0x110]
000000000001d718	mov	x9, #0x400000000
000000000001d71c	stp	x8, x9, [sp, #0x8]
000000000001d720	adr	x8, #0x76de9
000000000001d724	nop
000000000001d728	ldarb	w8, [x8]
000000000001d72c	tbz	w8, #0x0, 0x1d734
000000000001d730	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d734	ldr	x8, [x19, #0x118]
000000000001d738	add	x0, x8, #0x70
000000000001d73c	mov	w1, #0x38
000000000001d740	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d744	mov	x19, x0
000000000001d748	adr	x8, #0x43f68
000000000001d74c	nop
000000000001d750	str	x8, [x19, #0x10]!
000000000001d754	stur	xzr, [x19, #-0x8]
000000000001d758	str	x19, [sp, #0x18]
000000000001d75c	mov	x0, x19
000000000001d760	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001d764	mov	x0, x19
000000000001d768	bl	_ThrowException
_kfun:kotlin.collections.HashMapValues#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001d76c	sub	sp, sp, #0x40
000000000001d770	stp	x20, x19, [sp, #0x20]
000000000001d774	stp	x29, x30, [sp, #0x30]
000000000001d778	add	x29, sp, #0x30
000000000001d77c	movi.16b	v0, #0x0
000000000001d780	stp	q0, q0, [sp]
000000000001d784	adrp	x0, 93 ; 0x7a000
000000000001d788	add	x0, x0, #0x4e0
000000000001d78c	ldr	x8, [x0]
000000000001d790	blr	x8
000000000001d794	ldr	x19, [x0]
000000000001d798	ldr	x8, [x19, #0x110]
000000000001d79c	mov	x9, sp
000000000001d7a0	str	x9, [x19, #0x110]
000000000001d7a4	mov	x9, #0x400000000
000000000001d7a8	stp	x8, x9, [sp, #0x8]
000000000001d7ac	adr	x8, #0x76d5d
000000000001d7b0	nop
000000000001d7b4	ldarb	w8, [x8]
000000000001d7b8	tbz	w8, #0x0, 0x1d7c0
000000000001d7bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d7c0	ldr	x8, [x19, #0x118]
000000000001d7c4	add	x0, x8, #0x70
000000000001d7c8	mov	w1, #0x38
000000000001d7cc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d7d0	mov	x19, x0
000000000001d7d4	adr	x8, #0x43edc
000000000001d7d8	nop
000000000001d7dc	str	x8, [x19, #0x10]!
000000000001d7e0	stur	xzr, [x19, #-0x8]
000000000001d7e4	str	x19, [sp, #0x18]
000000000001d7e8	mov	x0, x19
000000000001d7ec	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001d7f0	mov	x0, x19
000000000001d7f4	bl	_ThrowException
_kfun:kotlin.collections.HashMapValues#clear(){}:
000000000001d7f8	stp	x20, x19, [sp, #-0x20]!
000000000001d7fc	stp	x29, x30, [sp, #0x10]
000000000001d800	add	x29, sp, #0x10
000000000001d804	mov	x19, x0
000000000001d808	adr	x8, #0x76d01
000000000001d80c	nop
000000000001d810	ldarb	w8, [x8]
000000000001d814	tbz	w8, #0x0, 0x1d81c
000000000001d818	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d81c	ldr	x0, [x19, #0x8]
000000000001d820	ldp	x29, x30, [sp, #0x10]
000000000001d824	ldp	x20, x19, [sp], #0x20
000000000001d828	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashMapValues#iterator(){}kotlin.collections.MutableIterator<1:0>:
000000000001d82c	stp	x22, x21, [sp, #-0x30]!
000000000001d830	stp	x20, x19, [sp, #0x10]
000000000001d834	stp	x29, x30, [sp, #0x20]
000000000001d838	add	x29, sp, #0x20
000000000001d83c	mov	x19, x1
000000000001d840	mov	x20, x0
000000000001d844	adr	x8, #0x76cc5
000000000001d848	nop
000000000001d84c	ldarb	w8, [x8]
000000000001d850	tbz	w8, #0x0, 0x1d858
000000000001d854	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d858	ldr	x21, [x20, #0x8]
000000000001d85c	adrp	x0, 93 ; 0x7a000
000000000001d860	add	x0, x0, #0x4e0
000000000001d864	ldr	x8, [x0]
000000000001d868	blr	x8
000000000001d86c	ldr	x8, [x0]
000000000001d870	ldr	x8, [x8, #0x118]
000000000001d874	add	x0, x8, #0x70
000000000001d878	mov	w1, #0x20
000000000001d87c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001d880	mov	x20, x0
000000000001d884	adr	x8, #0x4692c
000000000001d888	nop
000000000001d88c	str	x8, [x20, #0x10]!
000000000001d890	stur	xzr, [x20, #-0x8]
000000000001d894	str	x20, [x19]
000000000001d898	str	x21, [x20, #0x8]
000000000001d89c	mov	w8, #-0x1
000000000001d8a0	str	w8, [x20, #0x14]
000000000001d8a4	mov	x0, x20
000000000001d8a8	bl	"_kfun:kotlin.collections.HashMap.Itr#initNext(){}"
000000000001d8ac	str	x20, [x19]
000000000001d8b0	mov	x0, x20
000000000001d8b4	ldp	x29, x30, [sp, #0x20]
000000000001d8b8	ldp	x20, x19, [sp, #0x10]
000000000001d8bc	ldp	x22, x21, [sp], #0x30
000000000001d8c0	ret
_kfun:kotlin.collections.HashMapValues#remove(1:0){}kotlin.Boolean:
000000000001d8c4	stp	x20, x19, [sp, #-0x20]!
000000000001d8c8	stp	x29, x30, [sp, #0x10]
000000000001d8cc	add	x29, sp, #0x10
000000000001d8d0	mov	x19, x1
000000000001d8d4	mov	x20, x0
000000000001d8d8	adr	x8, #0x76c31
000000000001d8dc	nop
000000000001d8e0	ldarb	w8, [x8]
000000000001d8e4	tbz	w8, #0x0, 0x1d8ec
000000000001d8e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d8ec	ldr	x20, [x20, #0x8]
000000000001d8f0	mov	x0, x20
000000000001d8f4	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001d8f8	mov	x0, x20
000000000001d8fc	mov	x1, x19
000000000001d900	bl	"_kfun:kotlin.collections.HashMap.findValue#internal"
000000000001d904	tbnz	w0, #0x1f, 0x1d924
000000000001d908	mov	x1, x0
000000000001d90c	mov	x0, x20
000000000001d910	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
000000000001d914	mov	w0, #0x1
000000000001d918	ldp	x29, x30, [sp, #0x10]
000000000001d91c	ldp	x20, x19, [sp], #0x20
000000000001d920	ret
000000000001d924	mov	w0, #0x0
000000000001d928	ldp	x29, x30, [sp, #0x10]
000000000001d92c	ldp	x20, x19, [sp], #0x20
000000000001d930	ret
_kfun:kotlin.collections.HashMapValues#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001d934	stp	x20, x19, [sp, #-0x20]!
000000000001d938	stp	x29, x30, [sp, #0x10]
000000000001d93c	add	x29, sp, #0x10
000000000001d940	mov	x19, x1
000000000001d944	mov	x20, x0
000000000001d948	adr	x8, #0x76bc1
000000000001d94c	nop
000000000001d950	ldarb	w8, [x8]
000000000001d954	tbz	w8, #0x0, 0x1d95c
000000000001d958	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d95c	ldr	x0, [x20, #0x8]
000000000001d960	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001d964	mov	x0, x20
000000000001d968	mov	x1, x19
000000000001d96c	ldp	x29, x30, [sp, #0x10]
000000000001d970	ldp	x20, x19, [sp], #0x20
000000000001d974	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapValues#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001d978	stp	x20, x19, [sp, #-0x20]!
000000000001d97c	stp	x29, x30, [sp, #0x10]
000000000001d980	add	x29, sp, #0x10
000000000001d984	mov	x19, x1
000000000001d988	mov	x20, x0
000000000001d98c	adr	x8, #0x76b7d
000000000001d990	nop
000000000001d994	ldarb	w8, [x8]
000000000001d998	tbz	w8, #0x0, 0x1d9a0
000000000001d99c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d9a0	ldr	x0, [x20, #0x8]
000000000001d9a4	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001d9a8	mov	x0, x20
000000000001d9ac	mov	x1, x19
000000000001d9b0	ldp	x29, x30, [sp, #0x10]
000000000001d9b4	ldp	x20, x19, [sp], #0x20
000000000001d9b8	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySet#getEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.collections.MutableMap.MutableEntry<1:0,1:1>?:
000000000001d9bc	sub	sp, sp, #0x90
000000000001d9c0	stp	x26, x25, [sp, #0x40]
000000000001d9c4	stp	x24, x23, [sp, #0x50]
000000000001d9c8	stp	x22, x21, [sp, #0x60]
000000000001d9cc	stp	x20, x19, [sp, #0x70]
000000000001d9d0	stp	x29, x30, [sp, #0x80]
000000000001d9d4	add	x29, sp, #0x80
000000000001d9d8	mov	x19, x2
000000000001d9dc	mov	x22, x1
000000000001d9e0	mov	x20, x0
000000000001d9e4	adr	x8, #0x76b25
000000000001d9e8	nop
000000000001d9ec	ldarb	w8, [x8]
000000000001d9f0	tbz	w8, #0x0, 0x1d9f8
000000000001d9f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001d9f8	ldr	x21, [x20, #0x8]
000000000001d9fc	movi.16b	v0, #0x0
000000000001da00	stp	q0, q0, [sp]
000000000001da04	str	xzr, [sp, #0x30]
000000000001da08	str	q0, [sp, #0x20]
000000000001da0c	mov	x24, sp
000000000001da10	add	x1, x24, #0x18
000000000001da14	adrp	x20, 93 ; 0x7a000
000000000001da18	add	x20, x20, #0x4e0
000000000001da1c	ldr	x25, [x20]
000000000001da20	mov	x0, x20
000000000001da24	blr	x25
000000000001da28	ldr	x8, [x0]
000000000001da2c	ldr	x9, [x8, #0x110]
000000000001da30	str	x24, [x8, #0x110]
000000000001da34	mov	x8, #0x700000000
000000000001da38	stp	x9, x8, [sp, #0x8]
000000000001da3c	ldr	x8, [x22]
000000000001da40	and	x8, x8, #0xfffffffffffffffc
000000000001da44	ldr	x8, [x8]
000000000001da48	ldr	w9, [x8, #0x3c]
000000000001da4c	ldr	x8, [x8, #0x40]
000000000001da50	tbnz	w9, #0x1f, 0x1da60
000000000001da54	mov	w10, #0xa8
000000000001da58	and	x9, x9, x10
000000000001da5c	b	0x1dae4
000000000001da60	neg	w10, w9
000000000001da64	mvn	w9, w9
000000000001da68	cmp	w10, #0x9
000000000001da6c	b.ge	0x1daa4
000000000001da70	cmp	w10, #0x2
000000000001da74	b.lt	0x1dad8
000000000001da78	mov	x10, #0x0
000000000001da7c	mov	x11, x8
000000000001da80	ldr	w12, [x11]
000000000001da84	cmp	w12, #0xa7
000000000001da88	b.gt	0x1dae0
000000000001da8c	add	x10, x10, #0x1
000000000001da90	add	x11, x11, #0x10
000000000001da94	cmp	x9, x10
000000000001da98	b.ne	0x1da80
000000000001da9c	mov	x10, x9
000000000001daa0	b	0x1dae0
000000000001daa4	mov	w10, #0x0
000000000001daa8	add	w11, w9, w10
000000000001daac	cmp	w11, #0x0
000000000001dab0	cinc	w11, w11, lt
000000000001dab4	asr	w11, w11, #1
000000000001dab8	sbfiz	x12, x11, #4, #32
000000000001dabc	ldr	w12, [x8, x12]
000000000001dac0	cmp	w12, #0xa8
000000000001dac4	csinc	w10, w10, w11, ge
000000000001dac8	csel	w9, w9, w11, lt
000000000001dacc	cmp	w10, w9
000000000001dad0	b.lt	0x1daa8
000000000001dad4	b	0x1dae0
000000000001dad8	mov	w10, #0x0
000000000001dadc	b	0x1dae0
000000000001dae0	sxtw	x9, w10
000000000001dae4	add	x8, x8, x9, lsl #4
000000000001dae8	ldr	x8, [x8, #0x8]
000000000001daec	ldr	x8, [x8]
000000000001daf0	mov	x0, x22
000000000001daf4	blr	x8
000000000001daf8	mov	x1, x0
000000000001dafc	mov	x0, x21
000000000001db00	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001db04	tbnz	w0, #0x1f, 0x1dc58
000000000001db08	ldr	x8, [x21, #0x10]
000000000001db0c	str	x8, [sp, #0x20]
000000000001db10	cbz	x8, 0x1dc98
000000000001db14	mov	x23, x0
000000000001db18	ldr	w9, [x8, #0x8]
000000000001db1c	cmp	w9, w0
000000000001db20	b.ls	0x1dc9c
000000000001db24	add	x1, x24, #0x30
000000000001db28	add	x8, x8, w23, sxtw #3
000000000001db2c	ldr	x24, [x8, #0x10]
000000000001db30	str	x24, [sp, #0x28]
000000000001db34	ldr	x8, [x22]
000000000001db38	and	x8, x8, #0xfffffffffffffffc
000000000001db3c	ldr	x8, [x8]
000000000001db40	ldr	w9, [x8, #0x3c]
000000000001db44	ldr	x8, [x8, #0x40]
000000000001db48	tbnz	w9, #0x1f, 0x1db58
000000000001db4c	mov	w10, #0xa8
000000000001db50	and	x9, x9, x10
000000000001db54	b	0x1dbdc
000000000001db58	neg	w10, w9
000000000001db5c	mvn	w9, w9
000000000001db60	cmp	w10, #0x9
000000000001db64	b.ge	0x1db9c
000000000001db68	cmp	w10, #0x2
000000000001db6c	b.lt	0x1dbd0
000000000001db70	mov	x10, #0x0
000000000001db74	mov	x11, x8
000000000001db78	ldr	w12, [x11]
000000000001db7c	cmp	w12, #0xa7
000000000001db80	b.gt	0x1dbd8
000000000001db84	add	x10, x10, #0x1
000000000001db88	add	x11, x11, #0x10
000000000001db8c	cmp	x9, x10
000000000001db90	b.ne	0x1db78
000000000001db94	mov	x10, x9
000000000001db98	b	0x1dbd8
000000000001db9c	mov	w10, #0x0
000000000001dba0	add	w11, w9, w10
000000000001dba4	cmp	w11, #0x0
000000000001dba8	cinc	w11, w11, lt
000000000001dbac	asr	w11, w11, #1
000000000001dbb0	sbfiz	x12, x11, #4, #32
000000000001dbb4	ldr	w12, [x8, x12]
000000000001dbb8	cmp	w12, #0xa8
000000000001dbbc	csinc	w10, w10, w11, ge
000000000001dbc0	csel	w9, w9, w11, lt
000000000001dbc4	cmp	w10, w9
000000000001dbc8	b.lt	0x1dba0
000000000001dbcc	b	0x1dbd8
000000000001dbd0	mov	w10, #0x0
000000000001dbd4	b	0x1dbd8
000000000001dbd8	sxtw	x9, w10
000000000001dbdc	add	x8, x8, x9, lsl #4
000000000001dbe0	ldr	x8, [x8, #0x8]
000000000001dbe4	ldr	x8, [x8, #0x8]
000000000001dbe8	mov	x0, x22
000000000001dbec	blr	x8
000000000001dbf0	mov	x1, x0
000000000001dbf4	cbz	x24, 0x1dc54
000000000001dbf8	ldr	x8, [x24]
000000000001dbfc	and	x8, x8, #0xfffffffffffffffc
000000000001dc00	ldr	x8, [x8]
000000000001dc04	ldr	x8, [x8, #0x70]
000000000001dc08	mov	x0, x24
000000000001dc0c	blr	x8
000000000001dc10	cbz	w0, 0x1dc58
000000000001dc14	mov	x0, x20
000000000001dc18	blr	x25
000000000001dc1c	ldr	x8, [x0]
000000000001dc20	ldr	x8, [x8, #0x118]
000000000001dc24	add	x0, x8, #0x70
000000000001dc28	mov	w1, #0x20
000000000001dc2c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001dc30	mov	x8, x0
000000000001dc34	adr	x9, #0x4669c
000000000001dc38	nop
000000000001dc3c	str	x9, [x8, #0x10]!
000000000001dc40	stur	xzr, [x8, #-0x8]
000000000001dc44	str	x8, [x19]
000000000001dc48	str	x21, [x8, #0x8]
000000000001dc4c	str	w23, [x8, #0x10]
000000000001dc50	b	0x1dc5c
000000000001dc54	cbz	x1, 0x1dc14
000000000001dc58	mov	x8, #0x0
000000000001dc5c	str	x8, [x19]
000000000001dc60	mov	x0, x20
000000000001dc64	blr	x25
000000000001dc68	ldr	x9, [x0]
000000000001dc6c	ldr	x10, [sp, #0x8]
000000000001dc70	str	x10, [x9, #0x110]
000000000001dc74	str	x8, [x19]
000000000001dc78	mov	x0, x8
000000000001dc7c	ldp	x29, x30, [sp, #0x80]
000000000001dc80	ldp	x20, x19, [sp, #0x70]
000000000001dc84	ldp	x22, x21, [sp, #0x60]
000000000001dc88	ldp	x24, x23, [sp, #0x50]
000000000001dc8c	ldp	x26, x25, [sp, #0x40]
000000000001dc90	add	sp, sp, #0x90
000000000001dc94	ret
000000000001dc98	bl	_ThrowNullPointerException
000000000001dc9c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMapEntrySet#iterator(){}kotlin.collections.MutableIterator<kotlin.collections.MutableMap.MutableEntry<1:0,1:1>>:
000000000001dca0	stp	x20, x19, [sp, #-0x20]!
000000000001dca4	stp	x29, x30, [sp, #0x10]
000000000001dca8	add	x29, sp, #0x10
000000000001dcac	mov	x19, x1
000000000001dcb0	mov	x20, x0
000000000001dcb4	adr	x8, #0x76855
000000000001dcb8	nop
000000000001dcbc	ldarb	w8, [x8]
000000000001dcc0	tbz	w8, #0x0, 0x1dcc8
000000000001dcc4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001dcc8	ldr	x0, [x20, #0x8]
000000000001dccc	mov	x1, x19
000000000001dcd0	bl	"_kfun:kotlin.collections.HashMap#entriesIterator(){}kotlin.collections.HashMap.EntriesItr<1:0,1:1>"
000000000001dcd4	str	x0, [x19]
000000000001dcd8	ldp	x29, x30, [sp, #0x10]
000000000001dcdc	ldp	x20, x19, [sp], #0x20
000000000001dce0	ret
_kfun:kotlin.collections.HashMapEntrySetBase#<get-size>(){}kotlin.Int:
000000000001dce4	stp	x20, x19, [sp, #-0x20]!
000000000001dce8	stp	x29, x30, [sp, #0x10]
000000000001dcec	add	x29, sp, #0x10
000000000001dcf0	mov	x19, x0
000000000001dcf4	adr	x8, #0x76815
000000000001dcf8	nop
000000000001dcfc	ldarb	w8, [x8]
000000000001dd00	tbz	w8, #0x0, 0x1dd08
000000000001dd04	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001dd08	ldr	x8, [x19, #0x8]
000000000001dd0c	ldr	w0, [x8, #0x4c]
000000000001dd10	ldp	x29, x30, [sp, #0x10]
000000000001dd14	ldp	x20, x19, [sp], #0x20
000000000001dd18	ret
_kfun:kotlin.collections.HashMapEntrySetBase#isEmpty(){}kotlin.Boolean:
000000000001dd1c	stp	x20, x19, [sp, #-0x20]!
000000000001dd20	stp	x29, x30, [sp, #0x10]
000000000001dd24	add	x29, sp, #0x10
000000000001dd28	mov	x19, x0
000000000001dd2c	adr	x8, #0x767dd
000000000001dd30	nop
000000000001dd34	ldarb	w8, [x8]
000000000001dd38	tbz	w8, #0x0, 0x1dd40
000000000001dd3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001dd40	ldr	x8, [x19, #0x8]
000000000001dd44	ldr	w8, [x8, #0x4c]
000000000001dd48	cmp	w8, #0x0
000000000001dd4c	cset	w0, eq
000000000001dd50	ldp	x29, x30, [sp, #0x10]
000000000001dd54	ldp	x20, x19, [sp], #0x20
000000000001dd58	ret
_kfun:kotlin.collections.HashMapEntrySetBase#contains(1:2){}kotlin.Boolean:
000000000001dd5c	stp	x20, x19, [sp, #-0x20]!
000000000001dd60	stp	x29, x30, [sp, #0x10]
000000000001dd64	add	x29, sp, #0x10
000000000001dd68	mov	x19, x1
000000000001dd6c	mov	x20, x0
000000000001dd70	adr	x8, #0x76799
000000000001dd74	nop
000000000001dd78	ldarb	w8, [x8]
000000000001dd7c	tbz	w8, #0x0, 0x1dd84
000000000001dd80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001dd84	cbz	x19, 0x1de60
000000000001dd88	ldr	x8, [x19]
000000000001dd8c	and	x8, x8, #0xfffffffffffffffc
000000000001dd90	ldr	x8, [x8]
000000000001dd94	ldr	w9, [x8, #0x3c]
000000000001dd98	ldr	x8, [x8, #0x40]
000000000001dd9c	tbnz	w9, #0x1f, 0x1ddbc
000000000001dda0	mov	w10, #0xa8
000000000001dda4	and	x9, x9, x10
000000000001dda8	lsl	x9, x9, #4
000000000001ddac	ldr	w8, [x8, x9]
000000000001ddb0	cmp	w8, #0xa8
000000000001ddb4	b.ne	0x1de60
000000000001ddb8	b	0x1de84
000000000001ddbc	neg	w10, w9
000000000001ddc0	mvn	w9, w9
000000000001ddc4	cmp	w10, #0x9
000000000001ddc8	b.ge	0x1de14
000000000001ddcc	cmp	w10, #0x2
000000000001ddd0	b.lt	0x1de48
000000000001ddd4	mov	x10, #0x0
000000000001ddd8	mov	x11, x8
000000000001dddc	ldr	w12, [x11]
000000000001dde0	cmp	w12, #0xa7
000000000001dde4	b.gt	0x1de70
000000000001dde8	add	x10, x10, #0x1
000000000001ddec	add	x11, x11, #0x10
000000000001ddf0	cmp	x9, x10
000000000001ddf4	b.ne	0x1dddc
000000000001ddf8	mov	x10, x9
000000000001ddfc	sxtw	x9, w10
000000000001de00	lsl	x9, x9, #4
000000000001de04	ldr	w8, [x8, x9]
000000000001de08	cmp	w8, #0xa8
000000000001de0c	b.ne	0x1de60
000000000001de10	b	0x1de84
000000000001de14	mov	w10, #0x0
000000000001de18	add	w11, w9, w10
000000000001de1c	cmp	w11, #0x0
000000000001de20	cinc	w11, w11, lt
000000000001de24	asr	w11, w11, #1
000000000001de28	sbfiz	x12, x11, #4, #32
000000000001de2c	ldr	w12, [x8, x12]
000000000001de30	cmp	w12, #0xa8
000000000001de34	csinc	w10, w10, w11, ge
000000000001de38	csel	w9, w9, w11, lt
000000000001de3c	cmp	w10, w9
000000000001de40	b.lt	0x1de18
000000000001de44	b	0x1de70
000000000001de48	mov	w10, #0x0
000000000001de4c	sxtw	x9, w10
000000000001de50	lsl	x9, x9, #4
000000000001de54	ldr	w8, [x8, x9]
000000000001de58	cmp	w8, #0xa8
000000000001de5c	b.eq	0x1de84
000000000001de60	mov	w0, #0x0
000000000001de64	ldp	x29, x30, [sp, #0x10]
000000000001de68	ldp	x20, x19, [sp], #0x20
000000000001de6c	ret
000000000001de70	sxtw	x9, w10
000000000001de74	lsl	x9, x9, #4
000000000001de78	ldr	w8, [x8, x9]
000000000001de7c	cmp	w8, #0xa8
000000000001de80	b.ne	0x1de60
000000000001de84	ldr	x0, [x20, #0x8]
000000000001de88	mov	x1, x19
000000000001de8c	ldp	x29, x30, [sp, #0x10]
000000000001de90	ldp	x20, x19, [sp], #0x20
000000000001de94	b	"_kfun:kotlin.collections.HashMap#containsEntry(kotlin.collections.Map.Entry<1:0,1:1>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySetBase#getElement(1:2){}1:2?:
000000000001de98	stp	x22, x21, [sp, #-0x30]!
000000000001de9c	stp	x20, x19, [sp, #0x10]
000000000001dea0	stp	x29, x30, [sp, #0x20]
000000000001dea4	add	x29, sp, #0x20
000000000001dea8	mov	x19, x2
000000000001deac	mov	x20, x1
000000000001deb0	mov	x21, x0
000000000001deb4	adr	x8, #0x76655
000000000001deb8	nop
000000000001debc	ldarb	w8, [x8]
000000000001dec0	tbz	w8, #0x0, 0x1dec8
000000000001dec4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001dec8	ldr	x8, [x21]
000000000001decc	and	x8, x8, #0xfffffffffffffffc
000000000001ded0	ldr	x8, [x8]
000000000001ded4	ldr	x8, [x8, #0xf8]
000000000001ded8	mov	x0, x21
000000000001dedc	mov	x1, x20
000000000001dee0	mov	x2, x19
000000000001dee4	blr	x8
000000000001dee8	str	x0, [x19]
000000000001deec	ldp	x29, x30, [sp, #0x20]
000000000001def0	ldp	x20, x19, [sp, #0x10]
000000000001def4	ldp	x22, x21, [sp], #0x30
000000000001def8	ret
_kfun:kotlin.collections.HashMapEntrySetBase#clear(){}:
000000000001defc	stp	x20, x19, [sp, #-0x20]!
000000000001df00	stp	x29, x30, [sp, #0x10]
000000000001df04	add	x29, sp, #0x10
000000000001df08	mov	x19, x0
000000000001df0c	adr	x8, #0x765fd
000000000001df10	nop
000000000001df14	ldarb	w8, [x8]
000000000001df18	tbz	w8, #0x0, 0x1df20
000000000001df1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001df20	ldr	x0, [x19, #0x8]
000000000001df24	ldp	x29, x30, [sp, #0x10]
000000000001df28	ldp	x20, x19, [sp], #0x20
000000000001df2c	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashMapEntrySetBase#add(1:2){}kotlin.Boolean:
000000000001df30	sub	sp, sp, #0x40
000000000001df34	stp	x20, x19, [sp, #0x20]
000000000001df38	stp	x29, x30, [sp, #0x30]
000000000001df3c	add	x29, sp, #0x30
000000000001df40	movi.16b	v0, #0x0
000000000001df44	stp	q0, q0, [sp]
000000000001df48	adrp	x0, 93 ; 0x7a000
000000000001df4c	add	x0, x0, #0x4e0
000000000001df50	ldr	x8, [x0]
000000000001df54	blr	x8
000000000001df58	ldr	x19, [x0]
000000000001df5c	ldr	x8, [x19, #0x110]
000000000001df60	mov	x9, sp
000000000001df64	str	x9, [x19, #0x110]
000000000001df68	mov	x9, #0x400000000
000000000001df6c	stp	x8, x9, [sp, #0x8]
000000000001df70	adr	x8, #0x76599
000000000001df74	nop
000000000001df78	ldarb	w8, [x8]
000000000001df7c	tbz	w8, #0x0, 0x1df84
000000000001df80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001df84	ldr	x8, [x19, #0x118]
000000000001df88	add	x0, x8, #0x70
000000000001df8c	mov	w1, #0x38
000000000001df90	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001df94	mov	x19, x0
000000000001df98	adr	x8, #0x43718
000000000001df9c	nop
000000000001dfa0	str	x8, [x19, #0x10]!
000000000001dfa4	stur	xzr, [x19, #-0x8]
000000000001dfa8	str	x19, [sp, #0x18]
000000000001dfac	mov	x0, x19
000000000001dfb0	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001dfb4	mov	x0, x19
000000000001dfb8	bl	_ThrowException
_kfun:kotlin.collections.HashMapEntrySetBase#addAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001dfbc	sub	sp, sp, #0x40
000000000001dfc0	stp	x20, x19, [sp, #0x20]
000000000001dfc4	stp	x29, x30, [sp, #0x30]
000000000001dfc8	add	x29, sp, #0x30
000000000001dfcc	movi.16b	v0, #0x0
000000000001dfd0	stp	q0, q0, [sp]
000000000001dfd4	adrp	x0, 93 ; 0x7a000
000000000001dfd8	add	x0, x0, #0x4e0
000000000001dfdc	ldr	x8, [x0]
000000000001dfe0	blr	x8
000000000001dfe4	ldr	x19, [x0]
000000000001dfe8	ldr	x8, [x19, #0x110]
000000000001dfec	mov	x9, sp
000000000001dff0	str	x9, [x19, #0x110]
000000000001dff4	mov	x9, #0x400000000
000000000001dff8	stp	x8, x9, [sp, #0x8]
000000000001dffc	adr	x8, #0x7650d
000000000001e000	nop
000000000001e004	ldarb	w8, [x8]
000000000001e008	tbz	w8, #0x0, 0x1e010
000000000001e00c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e010	ldr	x8, [x19, #0x118]
000000000001e014	add	x0, x8, #0x70
000000000001e018	mov	w1, #0x38
000000000001e01c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001e020	mov	x19, x0
000000000001e024	adr	x8, #0x4368c
000000000001e028	nop
000000000001e02c	str	x8, [x19, #0x10]!
000000000001e030	stur	xzr, [x19, #-0x8]
000000000001e034	str	x19, [sp, #0x18]
000000000001e038	mov	x0, x19
000000000001e03c	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
000000000001e040	mov	x0, x19
000000000001e044	bl	_ThrowException
_kfun:kotlin.collections.HashMapEntrySetBase#remove(1:2){}kotlin.Boolean:
000000000001e048	sub	sp, sp, #0x80
000000000001e04c	stp	x24, x23, [sp, #0x40]
000000000001e050	stp	x22, x21, [sp, #0x50]
000000000001e054	stp	x20, x19, [sp, #0x60]
000000000001e058	stp	x29, x30, [sp, #0x70]
000000000001e05c	add	x29, sp, #0x70
000000000001e060	mov	x19, x1
000000000001e064	mov	x20, x0
000000000001e068	adr	x8, #0x764a1
000000000001e06c	nop
000000000001e070	ldarb	w8, [x8]
000000000001e074	tbz	w8, #0x0, 0x1e07c
000000000001e078	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e07c	cbz	x19, 0x1e200
000000000001e080	ldr	x8, [x19]
000000000001e084	and	x8, x8, #0xfffffffffffffffc
000000000001e088	ldr	x8, [x8]
000000000001e08c	ldr	w9, [x8, #0x3c]
000000000001e090	ldr	x8, [x8, #0x40]
000000000001e094	tbnz	w9, #0x1f, 0x1e120
000000000001e098	mov	w10, #0xa8
000000000001e09c	and	x9, x9, x10
000000000001e0a0	lsl	x9, x9, #4
000000000001e0a4	ldr	w8, [x8, x9]
000000000001e0a8	cmp	w8, #0xa8
000000000001e0ac	b.ne	0x1e200
000000000001e0b0	ldr	x21, [x20, #0x8]
000000000001e0b4	movi.16b	v0, #0x0
000000000001e0b8	stp	q0, q0, [sp]
000000000001e0bc	str	xzr, [sp, #0x30]
000000000001e0c0	str	q0, [sp, #0x20]
000000000001e0c4	mov	x23, sp
000000000001e0c8	add	x22, x23, #0x18
000000000001e0cc	adrp	x20, 92 ; 0x7a000
000000000001e0d0	add	x20, x20, #0x4e0
000000000001e0d4	ldr	x24, [x20]
000000000001e0d8	mov	x0, x20
000000000001e0dc	blr	x24
000000000001e0e0	ldr	x8, [x0]
000000000001e0e4	ldr	x9, [x8, #0x110]
000000000001e0e8	str	x23, [x8, #0x110]
000000000001e0ec	mov	x8, #0x700000000
000000000001e0f0	stp	x9, x8, [sp, #0x8]
000000000001e0f4	mov	x0, x21
000000000001e0f8	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001e0fc	ldr	x8, [x19]
000000000001e100	and	x8, x8, #0xfffffffffffffffc
000000000001e104	ldr	x8, [x8]
000000000001e108	ldr	w9, [x8, #0x3c]
000000000001e10c	ldr	x8, [x8, #0x40]
000000000001e110	tbnz	w9, #0x1f, 0x1e178
000000000001e114	mov	w10, #0xa8
000000000001e118	and	x9, x9, x10
000000000001e11c	b	0x1e27c
000000000001e120	neg	w10, w9
000000000001e124	mvn	w9, w9
000000000001e128	cmp	w10, #0x9
000000000001e12c	b.ge	0x1e1bc
000000000001e130	cmp	w10, #0x2
000000000001e134	b.lt	0x1e208
000000000001e138	mov	x10, #0x0
000000000001e13c	mov	x11, x8
000000000001e140	ldr	w12, [x11]
000000000001e144	cmp	w12, #0xa7
000000000001e148	b.gt	0x1e258
000000000001e14c	add	x10, x10, #0x1
000000000001e150	add	x11, x11, #0x10
000000000001e154	cmp	x9, x10
000000000001e158	b.ne	0x1e140
000000000001e15c	mov	x10, x9
000000000001e160	sxtw	x9, w10
000000000001e164	lsl	x9, x9, #4
000000000001e168	ldr	w8, [x8, x9]
000000000001e16c	cmp	w8, #0xa8
000000000001e170	b.ne	0x1e200
000000000001e174	b	0x1e0b0
000000000001e178	neg	w10, w9
000000000001e17c	mvn	w9, w9
000000000001e180	cmp	w10, #0x9
000000000001e184	b.ge	0x1e224
000000000001e188	cmp	w10, #0x2
000000000001e18c	b.lt	0x1e270
000000000001e190	mov	x10, #0x0
000000000001e194	mov	x11, x8
000000000001e198	ldr	w12, [x11]
000000000001e19c	cmp	w12, #0xa7
000000000001e1a0	b.gt	0x1e278
000000000001e1a4	add	x10, x10, #0x1
000000000001e1a8	add	x11, x11, #0x10
000000000001e1ac	cmp	x9, x10
000000000001e1b0	b.ne	0x1e198
000000000001e1b4	mov	x10, x9
000000000001e1b8	b	0x1e278
000000000001e1bc	mov	w10, #0x0
000000000001e1c0	add	w11, w9, w10
000000000001e1c4	cmp	w11, #0x0
000000000001e1c8	cinc	w11, w11, lt
000000000001e1cc	asr	w11, w11, #1
000000000001e1d0	sbfiz	x12, x11, #4, #32
000000000001e1d4	ldr	w12, [x8, x12]
000000000001e1d8	cmp	w12, #0xa8
000000000001e1dc	csinc	w10, w10, w11, ge
000000000001e1e0	csel	w9, w9, w11, lt
000000000001e1e4	cmp	w10, w9
000000000001e1e8	b.lt	0x1e1c0
000000000001e1ec	sxtw	x9, w10
000000000001e1f0	lsl	x9, x9, #4
000000000001e1f4	ldr	w8, [x8, x9]
000000000001e1f8	cmp	w8, #0xa8
000000000001e1fc	b.eq	0x1e0b0
000000000001e200	mov	w8, #0x0
000000000001e204	b	0x1e3e0
000000000001e208	mov	w10, #0x0
000000000001e20c	sxtw	x9, w10
000000000001e210	lsl	x9, x9, #4
000000000001e214	ldr	w8, [x8, x9]
000000000001e218	cmp	w8, #0xa8
000000000001e21c	b.eq	0x1e0b0
000000000001e220	b	0x1e200
000000000001e224	mov	w10, #0x0
000000000001e228	add	w11, w9, w10
000000000001e22c	cmp	w11, #0x0
000000000001e230	cinc	w11, w11, lt
000000000001e234	asr	w11, w11, #1
000000000001e238	sbfiz	x12, x11, #4, #32
000000000001e23c	ldr	w12, [x8, x12]
000000000001e240	cmp	w12, #0xa8
000000000001e244	csinc	w10, w10, w11, ge
000000000001e248	csel	w9, w9, w11, lt
000000000001e24c	cmp	w10, w9
000000000001e250	b.lt	0x1e228
000000000001e254	b	0x1e278
000000000001e258	sxtw	x9, w10
000000000001e25c	lsl	x9, x9, #4
000000000001e260	ldr	w8, [x8, x9]
000000000001e264	cmp	w8, #0xa8
000000000001e268	b.ne	0x1e200
000000000001e26c	b	0x1e0b0
000000000001e270	mov	w10, #0x0
000000000001e274	b	0x1e278
000000000001e278	sxtw	x9, w10
000000000001e27c	add	x8, x8, x9, lsl #4
000000000001e280	ldr	x8, [x8, #0x8]
000000000001e284	ldr	x8, [x8]
000000000001e288	mov	x0, x19
000000000001e28c	mov	x1, x22
000000000001e290	blr	x8
000000000001e294	mov	x1, x0
000000000001e298	mov	x0, x21
000000000001e29c	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001e2a0	tbnz	w0, #0x1f, 0x1e3c8
000000000001e2a4	ldr	x8, [x21, #0x10]
000000000001e2a8	str	x8, [sp, #0x20]
000000000001e2ac	cbz	x8, 0x1e3fc
000000000001e2b0	mov	x22, x0
000000000001e2b4	ldr	w9, [x8, #0x8]
000000000001e2b8	cmp	w9, w0
000000000001e2bc	b.ls	0x1e400
000000000001e2c0	add	x1, x23, #0x30
000000000001e2c4	add	x8, x8, w22, sxtw #3
000000000001e2c8	ldr	x23, [x8, #0x10]
000000000001e2cc	str	x23, [sp, #0x28]
000000000001e2d0	ldr	x8, [x19]
000000000001e2d4	and	x8, x8, #0xfffffffffffffffc
000000000001e2d8	ldr	x8, [x8]
000000000001e2dc	ldr	w9, [x8, #0x3c]
000000000001e2e0	ldr	x8, [x8, #0x40]
000000000001e2e4	tbnz	w9, #0x1f, 0x1e2f4
000000000001e2e8	mov	w10, #0xa8
000000000001e2ec	and	x9, x9, x10
000000000001e2f0	b	0x1e378
000000000001e2f4	neg	w10, w9
000000000001e2f8	mvn	w9, w9
000000000001e2fc	cmp	w10, #0x9
000000000001e300	b.ge	0x1e338
000000000001e304	cmp	w10, #0x2
000000000001e308	b.lt	0x1e36c
000000000001e30c	mov	x10, #0x0
000000000001e310	mov	x11, x8
000000000001e314	ldr	w12, [x11]
000000000001e318	cmp	w12, #0xa7
000000000001e31c	b.gt	0x1e374
000000000001e320	add	x10, x10, #0x1
000000000001e324	add	x11, x11, #0x10
000000000001e328	cmp	x9, x10
000000000001e32c	b.ne	0x1e314
000000000001e330	mov	x10, x9
000000000001e334	b	0x1e374
000000000001e338	mov	w10, #0x0
000000000001e33c	add	w11, w9, w10
000000000001e340	cmp	w11, #0x0
000000000001e344	cinc	w11, w11, lt
000000000001e348	asr	w11, w11, #1
000000000001e34c	sbfiz	x12, x11, #4, #32
000000000001e350	ldr	w12, [x8, x12]
000000000001e354	cmp	w12, #0xa8
000000000001e358	csinc	w10, w10, w11, ge
000000000001e35c	csel	w9, w9, w11, lt
000000000001e360	cmp	w10, w9
000000000001e364	b.lt	0x1e33c
000000000001e368	b	0x1e374
000000000001e36c	mov	w10, #0x0
000000000001e370	b	0x1e374
000000000001e374	sxtw	x9, w10
000000000001e378	add	x8, x8, x9, lsl #4
000000000001e37c	ldr	x8, [x8, #0x8]
000000000001e380	ldr	x8, [x8, #0x8]
000000000001e384	mov	x0, x19
000000000001e388	blr	x8
000000000001e38c	mov	x1, x0
000000000001e390	cbz	x23, 0x1e3c4
000000000001e394	ldr	x8, [x23]
000000000001e398	and	x8, x8, #0xfffffffffffffffc
000000000001e39c	ldr	x8, [x8]
000000000001e3a0	ldr	x8, [x8, #0x70]
000000000001e3a4	mov	x0, x23
000000000001e3a8	blr	x8
000000000001e3ac	tbz	w0, #0x0, 0x1e3c8
000000000001e3b0	mov	x0, x21
000000000001e3b4	mov	x1, x22
000000000001e3b8	bl	"_kfun:kotlin.collections.HashMap.removeKeyAt#internal"
000000000001e3bc	mov	w8, #0x1
000000000001e3c0	b	0x1e3cc
000000000001e3c4	cbz	x1, 0x1e3b0
000000000001e3c8	mov	w8, #0x0
000000000001e3cc	mov	x0, x20
000000000001e3d0	blr	x24
000000000001e3d4	ldr	x9, [x0]
000000000001e3d8	ldr	x10, [sp, #0x8]
000000000001e3dc	str	x10, [x9, #0x110]
000000000001e3e0	mov	x0, x8
000000000001e3e4	ldp	x29, x30, [sp, #0x70]
000000000001e3e8	ldp	x20, x19, [sp, #0x60]
000000000001e3ec	ldp	x22, x21, [sp, #0x50]
000000000001e3f0	ldp	x24, x23, [sp, #0x40]
000000000001e3f4	add	sp, sp, #0x80
000000000001e3f8	ret
000000000001e3fc	bl	_ThrowNullPointerException
000000000001e400	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.collections.HashMapEntrySetBase#containsAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001e404	stp	x20, x19, [sp, #-0x20]!
000000000001e408	stp	x29, x30, [sp, #0x10]
000000000001e40c	add	x29, sp, #0x10
000000000001e410	mov	x19, x1
000000000001e414	mov	x20, x0
000000000001e418	adr	x8, #0x760f1
000000000001e41c	nop
000000000001e420	ldarb	w8, [x8]
000000000001e424	tbz	w8, #0x0, 0x1e42c
000000000001e428	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e42c	ldr	x0, [x20, #0x8]
000000000001e430	mov	x1, x19
000000000001e434	ldp	x29, x30, [sp, #0x10]
000000000001e438	ldp	x20, x19, [sp], #0x20
000000000001e43c	b	"_kfun:kotlin.collections.HashMap#containsAllEntries(kotlin.collections.Collection<*>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySetBase#removeAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001e440	stp	x20, x19, [sp, #-0x20]!
000000000001e444	stp	x29, x30, [sp, #0x10]
000000000001e448	add	x29, sp, #0x10
000000000001e44c	mov	x19, x1
000000000001e450	mov	x20, x0
000000000001e454	adr	x8, #0x760b5
000000000001e458	nop
000000000001e45c	ldarb	w8, [x8]
000000000001e460	tbz	w8, #0x0, 0x1e468
000000000001e464	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e468	ldr	x0, [x20, #0x8]
000000000001e46c	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001e470	mov	x0, x20
000000000001e474	mov	x1, x19
000000000001e478	ldp	x29, x30, [sp, #0x10]
000000000001e47c	ldp	x20, x19, [sp], #0x20
000000000001e480	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashMapEntrySetBase#retainAll(kotlin.collections.Collection<1:2>){}kotlin.Boolean:
000000000001e484	stp	x20, x19, [sp, #-0x20]!
000000000001e488	stp	x29, x30, [sp, #0x10]
000000000001e48c	add	x29, sp, #0x10
000000000001e490	mov	x19, x1
000000000001e494	mov	x20, x0
000000000001e498	adr	x8, #0x76071
000000000001e49c	nop
000000000001e4a0	ldarb	w8, [x8]
000000000001e4a4	tbz	w8, #0x0, 0x1e4ac
000000000001e4a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e4ac	ldr	x0, [x20, #0x8]
000000000001e4b0	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001e4b4	mov	x0, x20
000000000001e4b8	mov	x1, x19
000000000001e4bc	ldp	x29, x30, [sp, #0x10]
000000000001e4c0	ldp	x20, x19, [sp], #0x20
000000000001e4c4	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashSet#<get-size>(){}kotlin.Int:
000000000001e4c8	stp	x20, x19, [sp, #-0x20]!
000000000001e4cc	stp	x29, x30, [sp, #0x10]
000000000001e4d0	add	x29, sp, #0x10
000000000001e4d4	mov	x19, x0
000000000001e4d8	adr	x8, #0x76031
000000000001e4dc	nop
000000000001e4e0	ldarb	w8, [x8]
000000000001e4e4	tbz	w8, #0x0, 0x1e4ec
000000000001e4e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e4ec	ldr	x8, [x19, #0x8]
000000000001e4f0	ldr	w0, [x8, #0x4c]
000000000001e4f4	ldp	x29, x30, [sp, #0x10]
000000000001e4f8	ldp	x20, x19, [sp], #0x20
000000000001e4fc	ret
_kfun:kotlin.collections.HashSet#isEmpty(){}kotlin.Boolean:
000000000001e500	stp	x20, x19, [sp, #-0x20]!
000000000001e504	stp	x29, x30, [sp, #0x10]
000000000001e508	add	x29, sp, #0x10
000000000001e50c	mov	x19, x0
000000000001e510	adr	x8, #0x75ff9
000000000001e514	nop
000000000001e518	ldarb	w8, [x8]
000000000001e51c	tbz	w8, #0x0, 0x1e524
000000000001e520	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e524	ldr	x8, [x19, #0x8]
000000000001e528	ldr	w8, [x8, #0x4c]
000000000001e52c	cmp	w8, #0x0
000000000001e530	cset	w0, eq
000000000001e534	ldp	x29, x30, [sp, #0x10]
000000000001e538	ldp	x20, x19, [sp], #0x20
000000000001e53c	ret
_kfun:kotlin.collections.HashSet#contains(1:0){}kotlin.Boolean:
000000000001e540	stp	x20, x19, [sp, #-0x20]!
000000000001e544	stp	x29, x30, [sp, #0x10]
000000000001e548	add	x29, sp, #0x10
000000000001e54c	mov	x19, x1
000000000001e550	mov	x20, x0
000000000001e554	adr	x8, #0x75fb5
000000000001e558	nop
000000000001e55c	ldarb	w8, [x8]
000000000001e560	tbz	w8, #0x0, 0x1e568
000000000001e564	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e568	ldr	x0, [x20, #0x8]
000000000001e56c	mov	x1, x19
000000000001e570	bl	"_kfun:kotlin.collections.HashMap.findKey#internal"
000000000001e574	mvn	w8, w0
000000000001e578	lsr	w0, w8, #31
000000000001e57c	ldp	x29, x30, [sp, #0x10]
000000000001e580	ldp	x20, x19, [sp], #0x20
000000000001e584	ret
_kfun:kotlin.collections.HashSet#getElement(1:0){}1:0?:
000000000001e588	stp	x22, x21, [sp, #-0x30]!
000000000001e58c	stp	x20, x19, [sp, #0x10]
000000000001e590	stp	x29, x30, [sp, #0x20]
000000000001e594	add	x29, sp, #0x20
000000000001e598	mov	x19, x2
000000000001e59c	mov	x20, x1
000000000001e5a0	mov	x21, x0
000000000001e5a4	adr	x8, #0x75f65
000000000001e5a8	nop
000000000001e5ac	ldarb	w8, [x8]
000000000001e5b0	tbz	w8, #0x0, 0x1e5b8
000000000001e5b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e5b8	ldr	x0, [x21, #0x8]
000000000001e5bc	mov	x1, x20
000000000001e5c0	mov	x2, x19
000000000001e5c4	bl	"_kfun:kotlin.collections.HashMap#getKey(1:0){}1:0?"
000000000001e5c8	str	x0, [x19]
000000000001e5cc	ldp	x29, x30, [sp, #0x20]
000000000001e5d0	ldp	x20, x19, [sp, #0x10]
000000000001e5d4	ldp	x22, x21, [sp], #0x30
000000000001e5d8	ret
_kfun:kotlin.collections.HashSet#clear(){}:
000000000001e5dc	stp	x20, x19, [sp, #-0x20]!
000000000001e5e0	stp	x29, x30, [sp, #0x10]
000000000001e5e4	add	x29, sp, #0x10
000000000001e5e8	mov	x19, x0
000000000001e5ec	adr	x8, #0x75f1d
000000000001e5f0	nop
000000000001e5f4	ldarb	w8, [x8]
000000000001e5f8	tbz	w8, #0x0, 0x1e600
000000000001e5fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e600	ldr	x0, [x19, #0x8]
000000000001e604	ldp	x29, x30, [sp, #0x10]
000000000001e608	ldp	x20, x19, [sp], #0x20
000000000001e60c	b	"_kfun:kotlin.collections.HashMap#clear(){}"
_kfun:kotlin.collections.HashSet#add(1:0){}kotlin.Boolean:
000000000001e610	stp	x20, x19, [sp, #-0x20]!
000000000001e614	stp	x29, x30, [sp, #0x10]
000000000001e618	add	x29, sp, #0x10
000000000001e61c	mov	x19, x1
000000000001e620	mov	x20, x0
000000000001e624	adr	x8, #0x75ee5
000000000001e628	nop
000000000001e62c	ldarb	w8, [x8]
000000000001e630	tbz	w8, #0x0, 0x1e638
000000000001e634	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e638	ldr	x0, [x20, #0x8]
000000000001e63c	mov	x1, x19
000000000001e640	bl	"_kfun:kotlin.collections.HashMap#addKey(1:0){}kotlin.Int"
000000000001e644	mvn	w8, w0
000000000001e648	lsr	w0, w8, #31
000000000001e64c	ldp	x29, x30, [sp, #0x10]
000000000001e650	ldp	x20, x19, [sp], #0x20
000000000001e654	ret
_kfun:kotlin.collections.HashSet#remove(1:0){}kotlin.Boolean:
000000000001e658	stp	x20, x19, [sp, #-0x20]!
000000000001e65c	stp	x29, x30, [sp, #0x10]
000000000001e660	add	x29, sp, #0x10
000000000001e664	mov	x19, x1
000000000001e668	mov	x20, x0
000000000001e66c	adr	x8, #0x75e9d
000000000001e670	nop
000000000001e674	ldarb	w8, [x8]
000000000001e678	tbz	w8, #0x0, 0x1e680
000000000001e67c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e680	ldr	x0, [x20, #0x8]
000000000001e684	mov	x1, x19
000000000001e688	bl	"_kfun:kotlin.collections.HashMap#removeKey(1:0){}kotlin.Int"
000000000001e68c	mvn	w8, w0
000000000001e690	lsr	w0, w8, #31
000000000001e694	ldp	x29, x30, [sp, #0x10]
000000000001e698	ldp	x20, x19, [sp], #0x20
000000000001e69c	ret
_kfun:kotlin.collections.HashSet#iterator(){}kotlin.collections.MutableIterator<1:0>:
000000000001e6a0	stp	x20, x19, [sp, #-0x20]!
000000000001e6a4	stp	x29, x30, [sp, #0x10]
000000000001e6a8	add	x29, sp, #0x10
000000000001e6ac	mov	x19, x1
000000000001e6b0	mov	x20, x0
000000000001e6b4	adr	x8, #0x75e55
000000000001e6b8	nop
000000000001e6bc	ldarb	w8, [x8]
000000000001e6c0	tbz	w8, #0x0, 0x1e6c8
000000000001e6c4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e6c8	ldr	x0, [x20, #0x8]
000000000001e6cc	mov	x1, x19
000000000001e6d0	bl	"_kfun:kotlin.collections.HashMap#keysIterator(){}kotlin.collections.HashMap.KeysItr<1:0,1:1>"
000000000001e6d4	str	x0, [x19]
000000000001e6d8	ldp	x29, x30, [sp, #0x10]
000000000001e6dc	ldp	x20, x19, [sp], #0x20
000000000001e6e0	ret
_kfun:kotlin.collections.HashSet#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001e6e4	stp	x20, x19, [sp, #-0x20]!
000000000001e6e8	stp	x29, x30, [sp, #0x10]
000000000001e6ec	add	x29, sp, #0x10
000000000001e6f0	mov	x19, x1
000000000001e6f4	mov	x20, x0
000000000001e6f8	adr	x8, #0x75e11
000000000001e6fc	nop
000000000001e700	ldarb	w8, [x8]
000000000001e704	tbz	w8, #0x0, 0x1e70c
000000000001e708	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e70c	ldr	x0, [x20, #0x8]
000000000001e710	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001e714	mov	x0, x20
000000000001e718	mov	x1, x19
000000000001e71c	ldp	x29, x30, [sp, #0x10]
000000000001e720	ldp	x20, x19, [sp], #0x20
000000000001e724	b	"_kfun:kotlin.collections.AbstractMutableCollection#addAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashSet#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001e728	stp	x20, x19, [sp, #-0x20]!
000000000001e72c	stp	x29, x30, [sp, #0x10]
000000000001e730	add	x29, sp, #0x10
000000000001e734	mov	x19, x1
000000000001e738	mov	x20, x0
000000000001e73c	adr	x8, #0x75dcd
000000000001e740	nop
000000000001e744	ldarb	w8, [x8]
000000000001e748	tbz	w8, #0x0, 0x1e750
000000000001e74c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e750	ldr	x0, [x20, #0x8]
000000000001e754	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001e758	mov	x0, x20
000000000001e75c	mov	x1, x19
000000000001e760	ldp	x29, x30, [sp, #0x10]
000000000001e764	ldp	x20, x19, [sp], #0x20
000000000001e768	b	"_kfun:kotlin.collections.AbstractMutableCollection#removeAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.collections.HashSet#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001e76c	stp	x20, x19, [sp, #-0x20]!
000000000001e770	stp	x29, x30, [sp, #0x10]
000000000001e774	add	x29, sp, #0x10
000000000001e778	mov	x19, x1
000000000001e77c	mov	x20, x0
000000000001e780	adr	x8, #0x75d89
000000000001e784	nop
000000000001e788	ldarb	w8, [x8]
000000000001e78c	tbz	w8, #0x0, 0x1e794
000000000001e790	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e794	ldr	x0, [x20, #0x8]
000000000001e798	bl	"_kfun:kotlin.collections.HashMap#checkIsMutable(){}"
000000000001e79c	mov	x0, x20
000000000001e7a0	mov	x1, x19
000000000001e7a4	ldp	x29, x30, [sp, #0x10]
000000000001e7a8	ldp	x20, x19, [sp], #0x20
000000000001e7ac	b	"_kfun:kotlin.collections.AbstractMutableCollection#retainAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean"
_kfun:kotlin.text#lowercase__at__kotlin.Char(){}kotlin.String:
000000000001e7b0	stp	x20, x19, [sp, #-0x20]!
000000000001e7b4	stp	x29, x30, [sp, #0x10]
000000000001e7b8	add	x29, sp, #0x10
000000000001e7bc	mov	x19, x1
000000000001e7c0	mov	x20, x0
000000000001e7c4	adr	x8, #0x75d45
000000000001e7c8	nop
000000000001e7cc	ldarb	w8, [x8]
000000000001e7d0	tbz	w8, #0x0, 0x1e7d8
000000000001e7d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e7d8	cmp	w20, #0x130
000000000001e7dc	b.ne	0x1e7f8
000000000001e7e0	adr	x0, #0x501b0
000000000001e7e4	nop
000000000001e7e8	str	x0, [x19]
000000000001e7ec	ldp	x29, x30, [sp, #0x10]
000000000001e7f0	ldp	x20, x19, [sp], #0x20
000000000001e7f4	ret
000000000001e7f8	mov	x0, x20
000000000001e7fc	bl	"_kfun:kotlin.text#lowercaseCharImpl__at__kotlin.Char(){}kotlin.Char"
000000000001e800	mov	x20, x0
000000000001e804	adrp	x0, 92 ; 0x7a000
000000000001e808	add	x0, x0, #0x4e0
000000000001e80c	ldr	x8, [x0]
000000000001e810	blr	x8
000000000001e814	ldr	x8, [x0]
000000000001e818	ldr	x8, [x8, #0x118]
000000000001e81c	add	x0, x8, #0x70
000000000001e820	mov	w1, #0x20
000000000001e824	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001e828	adr	x8, #0x43848
000000000001e82c	nop
000000000001e830	stp	x8, xzr, [x0, #0x10]!
000000000001e834	stur	xzr, [x0, #-0x8]
000000000001e838	mov	w8, #0x1
000000000001e83c	str	w8, [x0, #0x8]
000000000001e840	strh	w20, [x0, #0x10]
000000000001e844	str	x0, [x19]
000000000001e848	str	x0, [x19]
000000000001e84c	ldp	x29, x30, [sp, #0x10]
000000000001e850	ldp	x20, x19, [sp], #0x20
000000000001e854	ret
_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}:
000000000001e858	sub	sp, sp, #0x50
000000000001e85c	stp	x22, x21, [sp, #0x20]
000000000001e860	stp	x20, x19, [sp, #0x30]
000000000001e864	stp	x29, x30, [sp, #0x40]
000000000001e868	add	x29, sp, #0x40
000000000001e86c	mov	x20, x1
000000000001e870	mov	x19, x0
000000000001e874	movi.16b	v0, #0x0
000000000001e878	stp	q0, q0, [sp]
000000000001e87c	adrp	x0, 92 ; 0x7a000
000000000001e880	add	x0, x0, #0x4e0
000000000001e884	ldr	x8, [x0]
000000000001e888	blr	x8
000000000001e88c	ldr	x21, [x0]
000000000001e890	ldr	x8, [x21, #0x110]
000000000001e894	mov	x9, sp
000000000001e898	str	x9, [x21, #0x110]
000000000001e89c	mov	x9, #0x400000000
000000000001e8a0	stp	x8, x9, [sp, #0x8]
000000000001e8a4	adr	x8, #0x75c65
000000000001e8a8	nop
000000000001e8ac	ldarb	w8, [x8]
000000000001e8b0	tbz	w8, #0x0, 0x1e8b8
000000000001e8b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e8b8	tbnz	w20, #0x1f, 0x1e910
000000000001e8bc	ldr	x8, [x21, #0x118]
000000000001e8c0	mov	w9, w20
000000000001e8c4	lsl	x9, x9, #1
000000000001e8c8	add	x9, x9, #0x1f
000000000001e8cc	and	x1, x9, #0x3fffffff8
000000000001e8d0	add	x0, x8, #0x70
000000000001e8d4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001e8d8	stp	xzr, xzr, [x0, #0x10]!
000000000001e8dc	adr	x8, #0x425e4
000000000001e8e0	nop
000000000001e8e4	stp	xzr, x8, [x0, #-0x8]
000000000001e8e8	str	w20, [x0, #0x8]
000000000001e8ec	str	x0, [sp, #0x18]
000000000001e8f0	str	x0, [x19, #0x8]
000000000001e8f4	ldr	x8, [sp, #0x8]
000000000001e8f8	str	x8, [x21, #0x110]
000000000001e8fc	ldp	x29, x30, [sp, #0x40]
000000000001e900	ldp	x20, x19, [sp, #0x30]
000000000001e904	ldp	x22, x21, [sp, #0x20]
000000000001e908	add	sp, sp, #0x50
000000000001e90c	ret
000000000001e910	bl	_ThrowIllegalArgumentException
_kfun:kotlin.text.StringBuilder#<get-length>(){}kotlin.Int:
000000000001e914	stp	x20, x19, [sp, #-0x20]!
000000000001e918	stp	x29, x30, [sp, #0x10]
000000000001e91c	add	x29, sp, #0x10
000000000001e920	mov	x19, x0
000000000001e924	adr	x8, #0x75be5
000000000001e928	nop
000000000001e92c	ldarb	w8, [x8]
000000000001e930	tbz	w8, #0x0, 0x1e938
000000000001e934	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e938	ldr	w0, [x19, #0x10]
000000000001e93c	ldp	x29, x30, [sp, #0x10]
000000000001e940	ldp	x20, x19, [sp], #0x20
000000000001e944	ret
_kfun:kotlin.text.StringBuilder#get(kotlin.Int){}kotlin.Char:
000000000001e948	sub	sp, sp, #0x70
000000000001e94c	stp	x22, x21, [sp, #0x40]
000000000001e950	stp	x20, x19, [sp, #0x50]
000000000001e954	stp	x29, x30, [sp, #0x60]
000000000001e958	add	x29, sp, #0x60
000000000001e95c	mov	x19, x1
000000000001e960	mov	x20, x0
000000000001e964	movi.16b	v0, #0x0
000000000001e968	stp	q0, q0, [sp]
000000000001e96c	adrp	x0, 92 ; 0x7a000
000000000001e970	add	x0, x0, #0x4e0
000000000001e974	ldr	x8, [x0]
000000000001e978	blr	x8
000000000001e97c	ldr	x21, [x0]
000000000001e980	ldr	x8, [x21, #0x110]
000000000001e984	mov	x9, sp
000000000001e988	str	x9, [x21, #0x110]
000000000001e98c	mov	x22, #0x400000000
000000000001e990	stp	x8, x22, [sp, #0x8]
000000000001e994	adr	x8, #0x75b75
000000000001e998	nop
000000000001e99c	ldarb	w8, [x8]
000000000001e9a0	tbz	w8, #0x0, 0x1e9ac
000000000001e9a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001e9a8	movi.16b	v0, #0x0
000000000001e9ac	stp	q0, q0, [sp, #0x20]
000000000001e9b0	ldr	x8, [x21, #0x110]
000000000001e9b4	add	x9, sp, #0x20
000000000001e9b8	str	x9, [x21, #0x110]
000000000001e9bc	stp	x8, x22, [sp, #0x28]
000000000001e9c0	tbnz	w19, #0x1f, 0x1ea10
000000000001e9c4	ldr	w8, [x20, #0x10]
000000000001e9c8	cmp	w8, w19
000000000001e9cc	b.le	0x1ea10
000000000001e9d0	ldr	x8, [sp, #0x28]
000000000001e9d4	str	x8, [x21, #0x110]
000000000001e9d8	ldr	x8, [x20, #0x8]
000000000001e9dc	str	x8, [sp, #0x18]
000000000001e9e0	ldr	w9, [x8, #0x8]
000000000001e9e4	cmp	w9, w19
000000000001e9e8	b.ls	0x1ea4c
000000000001e9ec	add	x8, x8, w19, sxtw #1
000000000001e9f0	ldrh	w0, [x8, #0x10]
000000000001e9f4	ldr	x8, [sp, #0x8]
000000000001e9f8	str	x8, [x21, #0x110]
000000000001e9fc	ldp	x29, x30, [sp, #0x60]
000000000001ea00	ldp	x20, x19, [sp, #0x50]
000000000001ea04	ldp	x22, x21, [sp, #0x40]
000000000001ea08	add	sp, sp, #0x70
000000000001ea0c	ret
000000000001ea10	ldr	x8, [x21, #0x118]
000000000001ea14	add	x0, x8, #0x70
000000000001ea18	mov	w1, #0x38
000000000001ea1c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ea20	mov	x19, x0
000000000001ea24	adr	x8, #0x42aac
000000000001ea28	nop
000000000001ea2c	str	x8, [x19, #0x10]!
000000000001ea30	stur	xzr, [x19, #-0x8]
000000000001ea34	str	x19, [sp, #0x38]
000000000001ea38	mov	x0, x19
000000000001ea3c	mov	x1, #0x0
000000000001ea40	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000001ea44	mov	x0, x19
000000000001ea48	bl	_ThrowException
000000000001ea4c	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.text.StringBuilder#subSequence(kotlin.Int;kotlin.Int){}kotlin.CharSequence:
000000000001ea50	sub	sp, sp, #0x90
000000000001ea54	stp	x26, x25, [sp, #0x40]
000000000001ea58	stp	x24, x23, [sp, #0x50]
000000000001ea5c	stp	x22, x21, [sp, #0x60]
000000000001ea60	stp	x20, x19, [sp, #0x70]
000000000001ea64	stp	x29, x30, [sp, #0x80]
000000000001ea68	add	x29, sp, #0x80
000000000001ea6c	mov	x19, x3
000000000001ea70	mov	x22, x2
000000000001ea74	mov	x21, x1
000000000001ea78	mov	x23, x0
000000000001ea7c	adr	x8, #0x75a8d
000000000001ea80	nop
000000000001ea84	ldarb	w8, [x8]
000000000001ea88	tbz	w8, #0x0, 0x1ea90
000000000001ea8c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ea90	movi.16b	v0, #0x0
000000000001ea94	stp	q0, q0, [sp]
000000000001ea98	adrp	x20, 92 ; 0x7a000
000000000001ea9c	add	x20, x20, #0x4e0
000000000001eaa0	ldr	x24, [x20]
000000000001eaa4	mov	x0, x20
000000000001eaa8	blr	x24
000000000001eaac	ldr	x8, [x0]
000000000001eab0	ldr	x9, [x8, #0x110]
000000000001eab4	mov	x10, sp
000000000001eab8	str	x10, [x8, #0x110]
000000000001eabc	mov	x8, #0x400000000
000000000001eac0	stp	x9, x8, [sp, #0x8]
000000000001eac4	ldr	w2, [x23, #0x10]
000000000001eac8	mov	x0, x21
000000000001eacc	mov	x1, x22
000000000001ead0	bl	"_kfun:kotlin.text#checkBoundsIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
000000000001ead4	ldr	x23, [x23, #0x8]
000000000001ead8	str	x23, [sp, #0x18]
000000000001eadc	subs	w25, w22, w21
000000000001eae0	b.eq	0x1eb44
000000000001eae4	tbnz	w25, #0x1f, 0x1ebac
000000000001eae8	mov	x0, x20
000000000001eaec	blr	x24
000000000001eaf0	ldr	x8, [x0]
000000000001eaf4	ldr	x8, [x8, #0x118]
000000000001eaf8	lsl	x9, x25, #1
000000000001eafc	add	x9, x9, #0x1f
000000000001eb00	and	x1, x9, #0x3fffffff8
000000000001eb04	add	x0, x8, #0x70
000000000001eb08	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001eb0c	mov	x22, x0
000000000001eb10	adr	x8, #0x43560
000000000001eb14	nop
000000000001eb18	stp	x8, xzr, [x22, #0x10]!
000000000001eb1c	stur	xzr, [x22, #-0x8]
000000000001eb20	str	w25, [x22, #0x8]
000000000001eb24	str	x22, [x19]
000000000001eb28	add	x0, x22, #0x10
000000000001eb2c	add	x8, x23, w21, sxtw #1
000000000001eb30	add	x1, x8, #0x10
000000000001eb34	sbfiz	x2, x25, #1, #32
000000000001eb38	bl	0x55bd0 ; symbol stub for: _memcpy
000000000001eb3c	str	x22, [x19]
000000000001eb40	b	0x1eb70
000000000001eb44	mov	x0, x20
000000000001eb48	blr	x24
000000000001eb4c	ldr	x8, [x0]
000000000001eb50	ldr	x9, [x8, #0x110]
000000000001eb54	add	x10, sp, #0x28
000000000001eb58	str	x10, [x8, #0x110]
000000000001eb5c	adr	x22, #0x4f5c4
000000000001eb60	nop
000000000001eb64	str	x22, [x19]
000000000001eb68	ldr	x8, [x0]
000000000001eb6c	str	x9, [x8, #0x110]
000000000001eb70	str	x22, [x19]
000000000001eb74	mov	x0, x20
000000000001eb78	blr	x24
000000000001eb7c	ldr	x8, [x0]
000000000001eb80	ldr	x9, [sp, #0x8]
000000000001eb84	str	x9, [x8, #0x110]
000000000001eb88	str	x22, [x19]
000000000001eb8c	mov	x0, x22
000000000001eb90	ldp	x29, x30, [sp, #0x80]
000000000001eb94	ldp	x20, x19, [sp, #0x70]
000000000001eb98	ldp	x22, x21, [sp, #0x60]
000000000001eb9c	ldp	x24, x23, [sp, #0x50]
000000000001eba0	ldp	x26, x25, [sp, #0x40]
000000000001eba4	add	sp, sp, #0x90
000000000001eba8	ret
000000000001ebac	bl	_ThrowIllegalArgumentException
_kfun:kotlin.text.StringBuilder#append(kotlin.Char){}kotlin.text.StringBuilder:
000000000001ebb0	sub	sp, sp, #0x70
000000000001ebb4	stp	x26, x25, [sp, #0x20]
000000000001ebb8	stp	x24, x23, [sp, #0x30]
000000000001ebbc	stp	x22, x21, [sp, #0x40]
000000000001ebc0	stp	x20, x19, [sp, #0x50]
000000000001ebc4	stp	x29, x30, [sp, #0x60]
000000000001ebc8	add	x29, sp, #0x60
000000000001ebcc	mov	x20, x2
000000000001ebd0	mov	x21, x1
000000000001ebd4	mov	x19, x0
000000000001ebd8	movi.16b	v0, #0x0
000000000001ebdc	stp	q0, q0, [sp]
000000000001ebe0	adrp	x0, 92 ; 0x7a000
000000000001ebe4	add	x0, x0, #0x4e0
000000000001ebe8	ldr	x8, [x0]
000000000001ebec	blr	x8
000000000001ebf0	ldr	x23, [x0]
000000000001ebf4	ldr	x8, [x23, #0x110]
000000000001ebf8	mov	x9, sp
000000000001ebfc	str	x9, [x23, #0x110]
000000000001ec00	mov	x9, #0x400000000
000000000001ec04	stp	x8, x9, [sp, #0x8]
000000000001ec08	adr	x8, #0x75901
000000000001ec0c	nop
000000000001ec10	ldarb	w8, [x8]
000000000001ec14	tbz	w8, #0x0, 0x1ec1c
000000000001ec18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ec1c	ldr	w8, [x19, #0x10]
000000000001ec20	add	w1, w8, #0x1
000000000001ec24	mov	x0, x19
000000000001ec28	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001ec2c	ldr	x24, [x19, #0x8]
000000000001ec30	str	x24, [sp, #0x18]
000000000001ec34	ldrsw	x25, [x19, #0x10]
000000000001ec38	add	w22, w25, #0x1
000000000001ec3c	mov	x0, x19
000000000001ec40	mov	x1, x22
000000000001ec44	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001ec48	str	w22, [x19, #0x10]
000000000001ec4c	ldr	w8, [x24, #0x8]
000000000001ec50	cmp	w8, w25
000000000001ec54	b.ls	0x1ec90
000000000001ec58	ldr	xzr, [x24]
000000000001ec5c	add	x8, x24, x25, lsl #1
000000000001ec60	strh	w21, [x8, #0x10]
000000000001ec64	str	x19, [x20]
000000000001ec68	ldr	x8, [sp, #0x8]
000000000001ec6c	str	x8, [x23, #0x110]
000000000001ec70	mov	x0, x19
000000000001ec74	ldp	x29, x30, [sp, #0x60]
000000000001ec78	ldp	x20, x19, [sp, #0x50]
000000000001ec7c	ldp	x22, x21, [sp, #0x40]
000000000001ec80	ldp	x24, x23, [sp, #0x30]
000000000001ec84	ldp	x26, x25, [sp, #0x20]
000000000001ec88	add	sp, sp, #0x70
000000000001ec8c	ret
000000000001ec90	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.text.StringBuilder#append(kotlin.CharSequence?){}kotlin.text.StringBuilder:
000000000001ec94	stp	x22, x21, [sp, #-0x30]!
000000000001ec98	stp	x20, x19, [sp, #0x10]
000000000001ec9c	stp	x29, x30, [sp, #0x20]
000000000001eca0	add	x29, sp, #0x20
000000000001eca4	mov	x19, x2
000000000001eca8	mov	x21, x1
000000000001ecac	mov	x20, x0
000000000001ecb0	adr	x8, #0x75859
000000000001ecb4	nop
000000000001ecb8	ldarb	w8, [x8]
000000000001ecbc	tbz	w8, #0x0, 0x1ecc4
000000000001ecc0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ecc4	adr	x8, #0x4f58c
000000000001ecc8	nop
000000000001eccc	cmp	x21, #0x0
000000000001ecd0	csel	x21, x8, x21, eq
000000000001ecd4	ldr	x8, [x21]
000000000001ecd8	and	x8, x8, #0xfffffffffffffffc
000000000001ecdc	ldr	x8, [x8]
000000000001ece0	ldr	w9, [x8, #0x3c]
000000000001ece4	ldr	x8, [x8, #0x40]
000000000001ece8	tbnz	w9, #0x1f, 0x1ecf8
000000000001ecec	mov	w10, #0x19
000000000001ecf0	and	x9, x9, x10
000000000001ecf4	b	0x1ed7c
000000000001ecf8	neg	w10, w9
000000000001ecfc	mvn	w9, w9
000000000001ed00	cmp	w10, #0x9
000000000001ed04	b.ge	0x1ed3c
000000000001ed08	cmp	w10, #0x2
000000000001ed0c	b.lt	0x1ed70
000000000001ed10	mov	x10, #0x0
000000000001ed14	mov	x11, x8
000000000001ed18	ldr	w12, [x11]
000000000001ed1c	cmp	w12, #0x18
000000000001ed20	b.gt	0x1ed78
000000000001ed24	add	x10, x10, #0x1
000000000001ed28	add	x11, x11, #0x10
000000000001ed2c	cmp	x9, x10
000000000001ed30	b.ne	0x1ed18
000000000001ed34	mov	x10, x9
000000000001ed38	b	0x1ed78
000000000001ed3c	mov	w10, #0x0
000000000001ed40	add	w11, w9, w10
000000000001ed44	cmp	w11, #0x0
000000000001ed48	cinc	w11, w11, lt
000000000001ed4c	asr	w11, w11, #1
000000000001ed50	sbfiz	x12, x11, #4, #32
000000000001ed54	ldr	w12, [x8, x12]
000000000001ed58	cmp	w12, #0x19
000000000001ed5c	csinc	w10, w10, w11, ge
000000000001ed60	csel	w9, w9, w11, lt
000000000001ed64	cmp	w10, w9
000000000001ed68	b.lt	0x1ed40
000000000001ed6c	b	0x1ed78
000000000001ed70	mov	w10, #0x0
000000000001ed74	b	0x1ed78
000000000001ed78	sxtw	x9, w10
000000000001ed7c	add	x8, x8, x9, lsl #4
000000000001ed80	ldr	x8, [x8, #0x8]
000000000001ed84	ldr	x8, [x8]
000000000001ed88	mov	x0, x21
000000000001ed8c	blr	x8
000000000001ed90	mov	x3, x0
000000000001ed94	mov	x0, x20
000000000001ed98	mov	x1, x21
000000000001ed9c	mov	w2, #0x0
000000000001eda0	mov	x4, x19
000000000001eda4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.CharSequence?;kotlin.Int;kotlin.Int){}kotlin.text.StringBuilder"
000000000001eda8	str	x20, [x19]
000000000001edac	ldp	x29, x30, [sp, #0x20]
000000000001edb0	ldp	x20, x19, [sp, #0x10]
000000000001edb4	ldp	x22, x21, [sp], #0x30
000000000001edb8	ret
_kfun:kotlin.text.StringBuilder#append(kotlin.CharSequence?;kotlin.Int;kotlin.Int){}kotlin.text.StringBuilder:
000000000001edbc	sub	sp, sp, #0xa0
000000000001edc0	stp	x28, x27, [sp, #0x40]
000000000001edc4	stp	x26, x25, [sp, #0x50]
000000000001edc8	stp	x24, x23, [sp, #0x60]
000000000001edcc	stp	x22, x21, [sp, #0x70]
000000000001edd0	stp	x20, x19, [sp, #0x80]
000000000001edd4	stp	x29, x30, [sp, #0x90]
000000000001edd8	add	x29, sp, #0x90
000000000001eddc	mov	x19, x4
000000000001ede0	mov	x24, x3
000000000001ede4	mov	x21, x2
000000000001ede8	mov	x22, x1
000000000001edec	mov	x20, x0
000000000001edf0	adr	x26, #0x75719
000000000001edf4	nop
000000000001edf8	ldarb	w8, [x26]
000000000001edfc	tbz	w8, #0x0, 0x1ee04
000000000001ee00	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ee04	adr	x8, #0x4f44c
000000000001ee08	nop
000000000001ee0c	cmp	x22, #0x0
000000000001ee10	csel	x23, x8, x22, eq
000000000001ee14	movi.16b	v0, #0x0
000000000001ee18	stp	q0, q0, [sp, #0x10]
000000000001ee1c	str	xzr, [sp, #0x30]
000000000001ee20	adrp	x0, 92 ; 0x7a000
000000000001ee24	add	x0, x0, #0x4e0
000000000001ee28	ldr	x25, [x0]
000000000001ee2c	blr	x25
000000000001ee30	ldr	x8, [x0]
000000000001ee34	ldr	x9, [x8, #0x110]
000000000001ee38	add	x10, sp, #0x10
000000000001ee3c	str	x10, [x8, #0x110]
000000000001ee40	mov	x8, #0x500000000
000000000001ee44	stp	x9, x8, [sp, #0x18]
000000000001ee48	ldr	x8, [x23]
000000000001ee4c	and	x8, x8, #0xfffffffffffffffc
000000000001ee50	ldr	x8, [x8]
000000000001ee54	ldr	w9, [x8, #0x3c]
000000000001ee58	ldr	x8, [x8, #0x40]
000000000001ee5c	str	x19, [sp, #0x8]
000000000001ee60	tbnz	w9, #0x1f, 0x1ee70
000000000001ee64	mov	w10, #0x19
000000000001ee68	and	x9, x9, x10
000000000001ee6c	b	0x1eef4
000000000001ee70	neg	w10, w9
000000000001ee74	mvn	w9, w9
000000000001ee78	cmp	w10, #0x9
000000000001ee7c	b.ge	0x1eeb4
000000000001ee80	cmp	w10, #0x2
000000000001ee84	b.lt	0x1eee8
000000000001ee88	mov	x10, #0x0
000000000001ee8c	mov	x11, x8
000000000001ee90	ldr	w12, [x11]
000000000001ee94	cmp	w12, #0x18
000000000001ee98	b.gt	0x1eef0
000000000001ee9c	add	x10, x10, #0x1
000000000001eea0	add	x11, x11, #0x10
000000000001eea4	cmp	x9, x10
000000000001eea8	b.ne	0x1ee90
000000000001eeac	mov	x10, x9
000000000001eeb0	b	0x1eef0
000000000001eeb4	mov	w10, #0x0
000000000001eeb8	add	w11, w9, w10
000000000001eebc	cmp	w11, #0x0
000000000001eec0	cinc	w11, w11, lt
000000000001eec4	asr	w11, w11, #1
000000000001eec8	sbfiz	x12, x11, #4, #32
000000000001eecc	ldr	w12, [x8, x12]
000000000001eed0	cmp	w12, #0x19
000000000001eed4	csinc	w10, w10, w11, ge
000000000001eed8	csel	w9, w9, w11, lt
000000000001eedc	cmp	w10, w9
000000000001eee0	b.lt	0x1eeb8
000000000001eee4	b	0x1eef0
000000000001eee8	mov	w10, #0x0
000000000001eeec	b	0x1eef0
000000000001eef0	sxtw	x9, w10
000000000001eef4	add	x8, x8, x9, lsl #4
000000000001eef8	ldr	x8, [x8, #0x8]
000000000001eefc	ldr	x8, [x8]
000000000001ef00	mov	x0, x23
000000000001ef04	blr	x8
000000000001ef08	mov	x2, x0
000000000001ef0c	mov	x0, x21
000000000001ef10	mov	x1, x24
000000000001ef14	bl	"_kfun:kotlin.text#checkBoundsIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
000000000001ef18	sub	w19, w24, w21
000000000001ef1c	ldr	w8, [x20, #0x10]
000000000001ef20	add	w1, w8, w19
000000000001ef24	mov	x0, x20
000000000001ef28	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001ef2c	ldr	x8, [x23]
000000000001ef30	and	x8, x8, #0xfffffffffffffffc
000000000001ef34	ldr	x8, [x8]
000000000001ef38	ldr	w8, [x8, #0x5c]
000000000001ef3c	cmp	w8, #0x85
000000000001ef40	b.ne	0x1ef80
000000000001ef44	ldrsw	x22, [x20, #0x10]
000000000001ef48	ldr	x8, [x20, #0x8]
000000000001ef4c	str	x8, [sp, #0x28]
000000000001ef50	add	x8, x8, x22, lsl #1
000000000001ef54	add	x0, x8, #0x10
000000000001ef58	add	x8, x23, w21, sxtw #1
000000000001ef5c	add	x1, x8, #0x10
000000000001ef60	sbfiz	x2, x19, #1, #32
000000000001ef64	bl	0x55bd0 ; symbol stub for: _memcpy
000000000001ef68	add	w21, w22, w19
000000000001ef6c	mov	x0, x20
000000000001ef70	mov	x1, x21
000000000001ef74	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001ef78	str	w21, [x20, #0x10]
000000000001ef7c	b	0x1f0a0
000000000001ef80	cmp	w24, w21
000000000001ef84	csel	w27, w24, w21, gt
000000000001ef88	mov	w28, #0x19
000000000001ef8c	cmp	w21, w27
000000000001ef90	b.eq	0x1f0a0
000000000001ef94	ldarb	w8, [x26]
000000000001ef98	tbz	w8, #0x0, 0x1efa0
000000000001ef9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001efa0	ldr	x22, [x20, #0x8]
000000000001efa4	str	x22, [sp, #0x30]
000000000001efa8	ldrsw	x19, [x20, #0x10]
000000000001efac	add	w24, w19, #0x1
000000000001efb0	mov	x0, x20
000000000001efb4	mov	x1, x24
000000000001efb8	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001efbc	str	w24, [x20, #0x10]
000000000001efc0	ldr	x8, [x23]
000000000001efc4	and	x8, x8, #0xfffffffffffffffc
000000000001efc8	ldr	x8, [x8]
000000000001efcc	ldr	w9, [x8, #0x3c]
000000000001efd0	ldr	x8, [x8, #0x40]
000000000001efd4	tbnz	w9, #0x1f, 0x1efe0
000000000001efd8	and	x9, x9, x28
000000000001efdc	b	0x1f064
000000000001efe0	neg	w10, w9
000000000001efe4	mvn	w9, w9
000000000001efe8	cmp	w10, #0x9
000000000001efec	b.ge	0x1f024
000000000001eff0	cmp	w10, #0x2
000000000001eff4	b.lt	0x1f058
000000000001eff8	mov	x10, #0x0
000000000001effc	mov	x11, x8
000000000001f000	ldr	w12, [x11]
000000000001f004	cmp	w12, #0x18
000000000001f008	b.gt	0x1f060
000000000001f00c	add	x10, x10, #0x1
000000000001f010	add	x11, x11, #0x10
000000000001f014	cmp	x9, x10
000000000001f018	b.ne	0x1f000
000000000001f01c	mov	x10, x9
000000000001f020	b	0x1f060
000000000001f024	mov	w10, #0x0
000000000001f028	add	w11, w9, w10
000000000001f02c	cmp	w11, #0x0
000000000001f030	cinc	w11, w11, lt
000000000001f034	asr	w11, w11, #1
000000000001f038	sbfiz	x12, x11, #4, #32
000000000001f03c	ldr	w12, [x8, x12]
000000000001f040	cmp	w12, #0x19
000000000001f044	csinc	w10, w10, w11, ge
000000000001f048	csel	w9, w9, w11, lt
000000000001f04c	cmp	w10, w9
000000000001f050	b.lt	0x1f028
000000000001f054	b	0x1f060
000000000001f058	mov	w10, #0x0
000000000001f05c	b	0x1f060
000000000001f060	sxtw	x9, w10
000000000001f064	add	x8, x8, x9, lsl #4
000000000001f068	ldr	x8, [x8, #0x8]
000000000001f06c	ldr	x8, [x8, #0x8]
000000000001f070	mov	x0, x23
000000000001f074	mov	x1, x21
000000000001f078	blr	x8
000000000001f07c	ldr	w8, [x22, #0x8]
000000000001f080	cmp	w8, w19
000000000001f084	b.ls	0x1f0e8
000000000001f088	add	w21, w21, #0x1
000000000001f08c	ldr	xzr, [x22]
000000000001f090	add	x8, x22, x19, lsl #1
000000000001f094	strh	w0, [x8, #0x10]
000000000001f098	cmp	w21, w27
000000000001f09c	b.ne	0x1ef94
000000000001f0a0	ldr	x10, [sp, #0x8]
000000000001f0a4	str	x20, [x10]
000000000001f0a8	adrp	x0, 91 ; 0x7a000
000000000001f0ac	add	x0, x0, #0x4e0
000000000001f0b0	blr	x25
000000000001f0b4	ldr	x8, [x0]
000000000001f0b8	ldr	x9, [sp, #0x18]
000000000001f0bc	str	x9, [x8, #0x110]
000000000001f0c0	str	x20, [x10]
000000000001f0c4	mov	x0, x20
000000000001f0c8	ldp	x29, x30, [sp, #0x90]
000000000001f0cc	ldp	x20, x19, [sp, #0x80]
000000000001f0d0	ldp	x22, x21, [sp, #0x70]
000000000001f0d4	ldp	x24, x23, [sp, #0x60]
000000000001f0d8	ldp	x26, x25, [sp, #0x50]
000000000001f0dc	ldp	x28, x27, [sp, #0x40]
000000000001f0e0	add	sp, sp, #0xa0
000000000001f0e4	ret
000000000001f0e8	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder:
000000000001f0ec	sub	sp, sp, #0x90
000000000001f0f0	stp	x26, x25, [sp, #0x40]
000000000001f0f4	stp	x24, x23, [sp, #0x50]
000000000001f0f8	stp	x22, x21, [sp, #0x60]
000000000001f0fc	stp	x20, x19, [sp, #0x70]
000000000001f100	stp	x29, x30, [sp, #0x80]
000000000001f104	add	x29, sp, #0x80
000000000001f108	mov	x20, x2
000000000001f10c	mov	x21, x1
000000000001f110	mov	x19, x0
000000000001f114	movi.16b	v0, #0x0
000000000001f118	stp	q0, q0, [sp, #0x10]
000000000001f11c	adrp	x0, 91 ; 0x7a000
000000000001f120	add	x0, x0, #0x4e0
000000000001f124	ldr	x8, [x0]
000000000001f128	blr	x8
000000000001f12c	ldr	x22, [x0]
000000000001f130	ldr	x8, [x22, #0x110]
000000000001f134	add	x9, sp, #0x10
000000000001f138	str	x9, [x22, #0x110]
000000000001f13c	mov	x9, #0x400000000
000000000001f140	stp	x8, x9, [sp, #0x18]
000000000001f144	adr	x8, #0x753c5
000000000001f148	nop
000000000001f14c	ldarb	w8, [x8]
000000000001f150	tbz	w8, #0x0, 0x1f158
000000000001f154	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f158	ldr	w8, [x19, #0x10]
000000000001f15c	add	w1, w8, #0xb
000000000001f160	mov	x0, x19
000000000001f164	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001f168	ldrsw	x23, [x19, #0x10]
000000000001f16c	ldr	x25, [x19, #0x8]
000000000001f170	str	x25, [sp, #0x28]
000000000001f174	add	x24, sp, #0x34
000000000001f178	str	x21, [sp]
000000000001f17c	adr	x2, #0x3e32b ; literal pool for: "%d"
000000000001f180	nop
000000000001f184	add	x0, sp, #0x34
000000000001f188	mov	w1, #0xc
000000000001f18c	bl	__ZN5konan8snprintfEPcmPKcz
000000000001f190	ldrb	w8, [sp, #0x34]
000000000001f194	cbz	w8, 0x1f1b4
000000000001f198	add	x24, sp, #0x34
000000000001f19c	add	x9, x25, x23, lsl #1
000000000001f1a0	add	x9, x9, #0x10
000000000001f1a4	sxtb	w8, w8
000000000001f1a8	strh	w8, [x9], #0x2
000000000001f1ac	ldrb	w8, [x24, #0x1]!
000000000001f1b0	cbnz	w8, 0x1f1a4
000000000001f1b4	add	x8, sp, #0x34
000000000001f1b8	sub	w8, w24, w8
000000000001f1bc	add	w21, w23, w8
000000000001f1c0	mov	x0, x19
000000000001f1c4	mov	x1, x21
000000000001f1c8	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001f1cc	str	w21, [x19, #0x10]
000000000001f1d0	str	x19, [x20]
000000000001f1d4	ldr	x8, [sp, #0x18]
000000000001f1d8	str	x8, [x22, #0x110]
000000000001f1dc	mov	x0, x19
000000000001f1e0	ldp	x29, x30, [sp, #0x80]
000000000001f1e4	ldp	x20, x19, [sp, #0x70]
000000000001f1e8	ldp	x22, x21, [sp, #0x60]
000000000001f1ec	ldp	x24, x23, [sp, #0x50]
000000000001f1f0	ldp	x26, x25, [sp, #0x40]
000000000001f1f4	add	sp, sp, #0x90
000000000001f1f8	ret
_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder:
000000000001f1fc	sub	sp, sp, #0x60
000000000001f200	stp	x24, x23, [sp, #0x20]
000000000001f204	stp	x22, x21, [sp, #0x30]
000000000001f208	stp	x20, x19, [sp, #0x40]
000000000001f20c	stp	x29, x30, [sp, #0x50]
000000000001f210	add	x29, sp, #0x50
000000000001f214	mov	x20, x2
000000000001f218	mov	x21, x1
000000000001f21c	mov	x19, x0
000000000001f220	movi.16b	v0, #0x0
000000000001f224	stp	q0, q0, [sp]
000000000001f228	adrp	x0, 91 ; 0x7a000
000000000001f22c	add	x0, x0, #0x4e0
000000000001f230	ldr	x8, [x0]
000000000001f234	blr	x8
000000000001f238	ldr	x22, [x0]
000000000001f23c	ldr	x8, [x22, #0x110]
000000000001f240	mov	x9, sp
000000000001f244	str	x9, [x22, #0x110]
000000000001f248	mov	x9, #0x400000000
000000000001f24c	stp	x8, x9, [sp, #0x8]
000000000001f250	adr	x8, #0x752b9
000000000001f254	nop
000000000001f258	ldarb	w8, [x8]
000000000001f25c	tbz	w8, #0x0, 0x1f264
000000000001f260	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f264	adr	x8, #0x4efec
000000000001f268	nop
000000000001f26c	cmp	x21, #0x0
000000000001f270	csel	x21, x8, x21, eq
000000000001f274	ldr	w8, [x21, #0x8]
000000000001f278	ldr	w9, [x19, #0x10]
000000000001f27c	add	w1, w9, w8
000000000001f280	mov	x0, x19
000000000001f284	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001f288	ldrsw	x23, [x19, #0x10]
000000000001f28c	ldr	x8, [x19, #0x8]
000000000001f290	str	x8, [sp, #0x18]
000000000001f294	ldrsw	x24, [x21, #0x8]
000000000001f298	add	x8, x8, x23, lsl #1
000000000001f29c	add	x0, x8, #0x10
000000000001f2a0	add	x1, x21, #0x10
000000000001f2a4	lsl	x2, x24, #1
000000000001f2a8	bl	0x55bd0 ; symbol stub for: _memcpy
000000000001f2ac	add	w21, w23, w24
000000000001f2b0	mov	x0, x19
000000000001f2b4	mov	x1, x21
000000000001f2b8	bl	"_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}"
000000000001f2bc	str	w21, [x19, #0x10]
000000000001f2c0	str	x19, [x20]
000000000001f2c4	ldr	x8, [sp, #0x8]
000000000001f2c8	str	x8, [x22, #0x110]
000000000001f2cc	mov	x0, x19
000000000001f2d0	ldp	x29, x30, [sp, #0x50]
000000000001f2d4	ldp	x20, x19, [sp, #0x40]
000000000001f2d8	ldp	x22, x21, [sp, #0x30]
000000000001f2dc	ldp	x24, x23, [sp, #0x20]
000000000001f2e0	add	sp, sp, #0x60
000000000001f2e4	ret
_kfun:kotlin.text.StringBuilder#ensureCapacity(kotlin.Int){}:
000000000001f2e8	sub	sp, sp, #0x70
000000000001f2ec	stp	x22, x21, [sp, #0x40]
000000000001f2f0	stp	x20, x19, [sp, #0x50]
000000000001f2f4	stp	x29, x30, [sp, #0x60]
000000000001f2f8	add	x29, sp, #0x60
000000000001f2fc	mov	x20, x1
000000000001f300	mov	x19, x0
000000000001f304	movi.16b	v0, #0x0
000000000001f308	stp	q0, q0, [sp]
000000000001f30c	str	xzr, [sp, #0x30]
000000000001f310	str	q0, [sp, #0x20]
000000000001f314	mov	x22, sp
000000000001f318	adrp	x0, 91 ; 0x7a000
000000000001f31c	add	x0, x0, #0x4e0
000000000001f320	ldr	x8, [x0]
000000000001f324	blr	x8
000000000001f328	ldr	x21, [x0]
000000000001f32c	ldr	x8, [x21, #0x110]
000000000001f330	str	x22, [x21, #0x110]
000000000001f334	mov	x9, #0x700000000
000000000001f338	stp	x8, x9, [sp, #0x8]
000000000001f33c	adr	x8, #0x751cd
000000000001f340	nop
000000000001f344	ldarb	w8, [x8]
000000000001f348	tbz	w8, #0x0, 0x1f350
000000000001f34c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f350	ldr	x8, [x19, #0x8]
000000000001f354	str	x8, [sp, #0x18]
000000000001f358	ldr	w8, [x8, #0x8]
000000000001f35c	cmp	w8, w20
000000000001f360	b.ge	0x1f390
000000000001f364	add	x2, x22, #0x30
000000000001f368	ldr	x0, [x19, #0x8]
000000000001f36c	ldr	w8, [x0, #0x8]
000000000001f370	lsl	w8, w8, #1
000000000001f374	add	w8, w8, #0x2
000000000001f378	cmp	w8, w20
000000000001f37c	csel	w1, w20, w8, lt
000000000001f380	stp	x0, x0, [sp, #0x20]
000000000001f384	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.CharArray(kotlin.Int;kotlin.Int){}kotlin.CharArray"
000000000001f388	str	x0, [sp, #0x30]
000000000001f38c	str	x0, [x19, #0x8]
000000000001f390	ldr	x8, [sp, #0x8]
000000000001f394	str	x8, [x21, #0x110]
000000000001f398	ldp	x29, x30, [sp, #0x60]
000000000001f39c	ldp	x20, x19, [sp, #0x50]
000000000001f3a0	ldp	x22, x21, [sp, #0x40]
000000000001f3a4	add	sp, sp, #0x70
000000000001f3a8	ret
_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String:
000000000001f3ac	sub	sp, sp, #0x80
000000000001f3b0	stp	x24, x23, [sp, #0x40]
000000000001f3b4	stp	x22, x21, [sp, #0x50]
000000000001f3b8	stp	x20, x19, [sp, #0x60]
000000000001f3bc	stp	x29, x30, [sp, #0x70]
000000000001f3c0	add	x29, sp, #0x70
000000000001f3c4	mov	x19, x1
000000000001f3c8	mov	x20, x0
000000000001f3cc	movi.16b	v0, #0x0
000000000001f3d0	stp	q0, q0, [sp]
000000000001f3d4	adrp	x0, 91 ; 0x7a000
000000000001f3d8	add	x0, x0, #0x4e0
000000000001f3dc	ldr	x8, [x0]
000000000001f3e0	blr	x8
000000000001f3e4	ldr	x21, [x0]
000000000001f3e8	ldr	x8, [x21, #0x110]
000000000001f3ec	mov	x9, sp
000000000001f3f0	str	x9, [x21, #0x110]
000000000001f3f4	mov	x9, #0x400000000
000000000001f3f8	stp	x8, x9, [sp, #0x8]
000000000001f3fc	adr	x8, #0x7510d
000000000001f400	nop
000000000001f404	ldarb	w8, [x8]
000000000001f408	tbz	w8, #0x0, 0x1f410
000000000001f40c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f410	ldr	x22, [x20, #0x8]
000000000001f414	str	x22, [sp, #0x18]
000000000001f418	ldr	w23, [x20, #0x10]
000000000001f41c	cbz	w23, 0x1f478
000000000001f420	tbnz	w23, #0x1f, 0x1f4bc
000000000001f424	mov	x8, x23
000000000001f428	sxtw	x24, w8
000000000001f42c	ldr	x8, [x21, #0x118]
000000000001f430	lsl	x9, x23, #1
000000000001f434	add	x9, x9, #0x1f
000000000001f438	and	x1, x9, #0x3fffffff8
000000000001f43c	add	x0, x8, #0x70
000000000001f440	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001f444	mov	x20, x0
000000000001f448	adr	x8, #0x42c28
000000000001f44c	nop
000000000001f450	stp	x8, xzr, [x20, #0x10]!
000000000001f454	stur	xzr, [x20, #-0x8]
000000000001f458	str	w23, [x20, #0x8]
000000000001f45c	str	x20, [x19]
000000000001f460	add	x0, x20, #0x10
000000000001f464	add	x1, x22, #0x10
000000000001f468	lsl	x2, x24, #1
000000000001f46c	bl	0x55bd0 ; symbol stub for: _memcpy
000000000001f470	str	x20, [x19]
000000000001f474	b	0x1f494
000000000001f478	ldr	x8, [x21, #0x110]
000000000001f47c	add	x9, sp, #0x28
000000000001f480	str	x9, [x21, #0x110]
000000000001f484	adr	x20, #0x4ec9c
000000000001f488	nop
000000000001f48c	str	x20, [x19]
000000000001f490	str	x8, [x21, #0x110]
000000000001f494	str	x20, [x19]
000000000001f498	ldr	x8, [sp, #0x8]
000000000001f49c	str	x8, [x21, #0x110]
000000000001f4a0	mov	x0, x20
000000000001f4a4	ldp	x29, x30, [sp, #0x70]
000000000001f4a8	ldp	x20, x19, [sp, #0x60]
000000000001f4ac	ldp	x22, x21, [sp, #0x50]
000000000001f4b0	ldp	x24, x23, [sp, #0x40]
000000000001f4b4	add	sp, sp, #0x80
000000000001f4b8	ret
000000000001f4bc	bl	_ThrowIllegalArgumentException
_kfun:kotlin.collections.AbstractCollection#contains(1:0){}kotlin.Boolean:
000000000001f4c0	sub	sp, sp, #0x70
000000000001f4c4	stp	x24, x23, [sp, #0x30]
000000000001f4c8	stp	x22, x21, [sp, #0x40]
000000000001f4cc	stp	x20, x19, [sp, #0x50]
000000000001f4d0	stp	x29, x30, [sp, #0x60]
000000000001f4d4	add	x29, sp, #0x60
000000000001f4d8	mov	x19, x1
000000000001f4dc	mov	x21, x0
000000000001f4e0	movi.16b	v0, #0x0
000000000001f4e4	stp	q0, q0, [sp]
000000000001f4e8	str	xzr, [sp, #0x20]
000000000001f4ec	mov	x24, sp
000000000001f4f0	adrp	x0, 91 ; 0x7a000
000000000001f4f4	add	x0, x0, #0x4e0
000000000001f4f8	ldr	x8, [x0]
000000000001f4fc	blr	x8
000000000001f500	ldr	x22, [x0]
000000000001f504	ldr	x8, [x22, #0x110]
000000000001f508	str	x24, [x22, #0x110]
000000000001f50c	mov	x9, #0x500000000
000000000001f510	stp	x8, x9, [sp, #0x8]
000000000001f514	adr	x23, #0x74ff5
000000000001f518	nop
000000000001f51c	ldarb	w8, [x23]
000000000001f520	tbz	w8, #0x0, 0x1f528
000000000001f524	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f528	cbz	x21, 0x1f710
000000000001f52c	ldr	x8, [x21]
000000000001f530	and	x8, x8, #0xfffffffffffffffc
000000000001f534	ldr	x8, [x8]
000000000001f538	ldr	w9, [x8, #0x3c]
000000000001f53c	ldr	x8, [x8, #0x40]
000000000001f540	tbnz	w9, #0x1f, 0x1f560
000000000001f544	mov	w10, #0x12
000000000001f548	and	x9, x9, x10
000000000001f54c	lsl	x9, x9, #4
000000000001f550	ldr	w8, [x8, x9]
000000000001f554	cmp	w8, #0x12
000000000001f558	b.eq	0x1f630
000000000001f55c	b	0x1f710
000000000001f560	neg	w10, w9
000000000001f564	mvn	w9, w9
000000000001f568	cmp	w10, #0x9
000000000001f56c	b.ge	0x1f5b8
000000000001f570	cmp	w10, #0x2
000000000001f574	b.lt	0x1f600
000000000001f578	mov	x10, #0x0
000000000001f57c	mov	x11, x8
000000000001f580	ldr	w12, [x11]
000000000001f584	cmp	w12, #0x11
000000000001f588	b.gt	0x1f61c
000000000001f58c	add	x10, x10, #0x1
000000000001f590	add	x11, x11, #0x10
000000000001f594	cmp	x9, x10
000000000001f598	b.ne	0x1f580
000000000001f59c	mov	x10, x9
000000000001f5a0	sxtw	x9, w10
000000000001f5a4	lsl	x9, x9, #4
000000000001f5a8	ldr	w8, [x8, x9]
000000000001f5ac	cmp	w8, #0x12
000000000001f5b0	b.eq	0x1f630
000000000001f5b4	b	0x1f710
000000000001f5b8	mov	w10, #0x0
000000000001f5bc	add	w11, w9, w10
000000000001f5c0	cmp	w11, #0x0
000000000001f5c4	cinc	w11, w11, lt
000000000001f5c8	asr	w11, w11, #1
000000000001f5cc	sbfiz	x12, x11, #4, #32
000000000001f5d0	ldr	w12, [x8, x12]
000000000001f5d4	cmp	w12, #0x12
000000000001f5d8	csinc	w10, w10, w11, ge
000000000001f5dc	csel	w9, w9, w11, lt
000000000001f5e0	cmp	w10, w9
000000000001f5e4	b.lt	0x1f5bc
000000000001f5e8	sxtw	x9, w10
000000000001f5ec	lsl	x9, x9, #4
000000000001f5f0	ldr	w8, [x8, x9]
000000000001f5f4	cmp	w8, #0x12
000000000001f5f8	b.eq	0x1f630
000000000001f5fc	b	0x1f710
000000000001f600	mov	w10, #0x0
000000000001f604	sxtw	x9, w10
000000000001f608	lsl	x9, x9, #4
000000000001f60c	ldr	w8, [x8, x9]
000000000001f610	cmp	w8, #0x12
000000000001f614	b.eq	0x1f630
000000000001f618	b	0x1f710
000000000001f61c	sxtw	x9, w10
000000000001f620	lsl	x9, x9, #4
000000000001f624	ldr	w8, [x8, x9]
000000000001f628	cmp	w8, #0x12
000000000001f62c	b.ne	0x1f710
000000000001f630	ldr	x8, [x21]
000000000001f634	and	x8, x8, #0xfffffffffffffffc
000000000001f638	ldr	x8, [x8]
000000000001f63c	ldr	w9, [x8, #0x3c]
000000000001f640	ldr	x8, [x8, #0x40]
000000000001f644	tbnz	w9, #0x1f, 0x1f66c
000000000001f648	mov	w10, #0x12
000000000001f64c	and	x9, x9, x10
000000000001f650	add	x8, x8, x9, lsl #4
000000000001f654	ldr	x8, [x8, #0x8]
000000000001f658	ldr	x8, [x8, #0x18]
000000000001f65c	mov	x0, x21
000000000001f660	blr	x8
000000000001f664	tbnz	w0, #0x0, 0x1f708
000000000001f668	b	0x1f710
000000000001f66c	neg	w10, w9
000000000001f670	mvn	w9, w9
000000000001f674	cmp	w10, #0x9
000000000001f678	b.ge	0x1f6b0
000000000001f67c	cmp	w10, #0x2
000000000001f680	b.lt	0x1f6e4
000000000001f684	mov	x10, #0x0
000000000001f688	mov	x11, x8
000000000001f68c	ldr	w12, [x11]
000000000001f690	cmp	w12, #0x11
000000000001f694	b.gt	0x1f6ec
000000000001f698	add	x10, x10, #0x1
000000000001f69c	add	x11, x11, #0x10
000000000001f6a0	cmp	x9, x10
000000000001f6a4	b.ne	0x1f68c
000000000001f6a8	mov	x10, x9
000000000001f6ac	b	0x1f6ec
000000000001f6b0	mov	w10, #0x0
000000000001f6b4	add	w11, w9, w10
000000000001f6b8	cmp	w11, #0x0
000000000001f6bc	cinc	w11, w11, lt
000000000001f6c0	asr	w11, w11, #1
000000000001f6c4	sbfiz	x12, x11, #4, #32
000000000001f6c8	ldr	w12, [x8, x12]
000000000001f6cc	cmp	w12, #0x12
000000000001f6d0	csinc	w10, w10, w11, ge
000000000001f6d4	csel	w9, w9, w11, lt
000000000001f6d8	cmp	w10, w9
000000000001f6dc	b.lt	0x1f6b4
000000000001f6e0	b	0x1f6ec
000000000001f6e4	mov	w10, #0x0
000000000001f6e8	b	0x1f6ec
000000000001f6ec	sxtw	x9, w10
000000000001f6f0	add	x8, x8, x9, lsl #4
000000000001f6f4	ldr	x8, [x8, #0x8]
000000000001f6f8	ldr	x8, [x8, #0x18]
000000000001f6fc	mov	x0, x21
000000000001f700	blr	x8
000000000001f704	tbz	w0, #0x0, 0x1f710
000000000001f708	mov	w0, #0x0
000000000001f70c	b	0x1f9a4
000000000001f710	add	x20, x24, #0x20
000000000001f714	add	x1, x24, #0x18
000000000001f718	ldr	x8, [x21]
000000000001f71c	and	x8, x8, #0xfffffffffffffffc
000000000001f720	ldr	x8, [x8]
000000000001f724	ldr	w9, [x8, #0x3c]
000000000001f728	ldr	x8, [x8, #0x40]
000000000001f72c	tbnz	w9, #0x1f, 0x1f73c
000000000001f730	mov	w10, #0x31
000000000001f734	and	x9, x9, x10
000000000001f738	b	0x1f7c0
000000000001f73c	neg	w10, w9
000000000001f740	mvn	w9, w9
000000000001f744	cmp	w10, #0x9
000000000001f748	b.ge	0x1f780
000000000001f74c	cmp	w10, #0x2
000000000001f750	b.lt	0x1f7b4
000000000001f754	mov	x10, #0x0
000000000001f758	mov	x11, x8
000000000001f75c	ldr	w12, [x11]
000000000001f760	cmp	w12, #0x30
000000000001f764	b.gt	0x1f7bc
000000000001f768	add	x10, x10, #0x1
000000000001f76c	add	x11, x11, #0x10
000000000001f770	cmp	x9, x10
000000000001f774	b.ne	0x1f75c
000000000001f778	mov	x10, x9
000000000001f77c	b	0x1f7bc
000000000001f780	mov	w10, #0x0
000000000001f784	add	w11, w9, w10
000000000001f788	cmp	w11, #0x0
000000000001f78c	cinc	w11, w11, lt
000000000001f790	asr	w11, w11, #1
000000000001f794	sbfiz	x12, x11, #4, #32
000000000001f798	ldr	w12, [x8, x12]
000000000001f79c	cmp	w12, #0x31
000000000001f7a0	csinc	w10, w10, w11, ge
000000000001f7a4	csel	w9, w9, w11, lt
000000000001f7a8	cmp	w10, w9
000000000001f7ac	b.lt	0x1f784
000000000001f7b0	b	0x1f7bc
000000000001f7b4	mov	w10, #0x0
000000000001f7b8	b	0x1f7bc
000000000001f7bc	sxtw	x9, w10
000000000001f7c0	add	x8, x8, x9, lsl #4
000000000001f7c4	ldr	x8, [x8, #0x8]
000000000001f7c8	ldr	x8, [x8]
000000000001f7cc	mov	x0, x21
000000000001f7d0	blr	x8
000000000001f7d4	mov	x21, x0
000000000001f7d8	mov	w24, #0xa0
000000000001f7dc	b	0x1f7e4
000000000001f7e0	cbz	x19, 0x1f9a0
000000000001f7e4	ldr	x8, [x21]
000000000001f7e8	and	x8, x8, #0xfffffffffffffffc
000000000001f7ec	ldr	x8, [x8]
000000000001f7f0	ldr	w9, [x8, #0x3c]
000000000001f7f4	ldr	x8, [x8, #0x40]
000000000001f7f8	tbnz	w9, #0x1f, 0x1f81c
000000000001f7fc	and	x9, x9, x24
000000000001f800	add	x8, x8, x9, lsl #4
000000000001f804	ldr	x8, [x8, #0x8]
000000000001f808	ldr	x8, [x8]
000000000001f80c	mov	x0, x21
000000000001f810	blr	x8
000000000001f814	tbnz	w0, #0x0, 0x1f8b8
000000000001f818	b	0x1f708
000000000001f81c	neg	w10, w9
000000000001f820	mvn	w9, w9
000000000001f824	cmp	w10, #0x9
000000000001f828	b.ge	0x1f860
000000000001f82c	cmp	w10, #0x2
000000000001f830	b.lt	0x1f894
000000000001f834	mov	x10, #0x0
000000000001f838	mov	x11, x8
000000000001f83c	ldr	w12, [x11]
000000000001f840	cmp	w12, #0x9f
000000000001f844	b.gt	0x1f89c
000000000001f848	add	x10, x10, #0x1
000000000001f84c	add	x11, x11, #0x10
000000000001f850	cmp	x9, x10
000000000001f854	b.ne	0x1f83c
000000000001f858	mov	x10, x9
000000000001f85c	b	0x1f89c
000000000001f860	mov	w10, #0x0
000000000001f864	add	w11, w9, w10
000000000001f868	cmp	w11, #0x0
000000000001f86c	cinc	w11, w11, lt
000000000001f870	asr	w11, w11, #1
000000000001f874	sbfiz	x12, x11, #4, #32
000000000001f878	ldr	w12, [x8, x12]
000000000001f87c	cmp	w12, #0xa0
000000000001f880	csinc	w10, w10, w11, ge
000000000001f884	csel	w9, w9, w11, lt
000000000001f888	cmp	w10, w9
000000000001f88c	b.lt	0x1f864
000000000001f890	b	0x1f89c
000000000001f894	mov	w10, #0x0
000000000001f898	b	0x1f89c
000000000001f89c	sxtw	x9, w10
000000000001f8a0	add	x8, x8, x9, lsl #4
000000000001f8a4	ldr	x8, [x8, #0x8]
000000000001f8a8	ldr	x8, [x8]
000000000001f8ac	mov	x0, x21
000000000001f8b0	blr	x8
000000000001f8b4	tbz	w0, #0x0, 0x1f708
000000000001f8b8	ldarb	w8, [x23]
000000000001f8bc	tbz	w8, #0x0, 0x1f8c4
000000000001f8c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001f8c4	ldr	x8, [x21]
000000000001f8c8	and	x8, x8, #0xfffffffffffffffc
000000000001f8cc	ldr	x8, [x8]
000000000001f8d0	ldr	w9, [x8, #0x3c]
000000000001f8d4	ldr	x8, [x8, #0x40]
000000000001f8d8	tbnz	w9, #0x1f, 0x1f8e4
000000000001f8dc	and	x9, x9, x24
000000000001f8e0	b	0x1f968
000000000001f8e4	neg	w10, w9
000000000001f8e8	mvn	w9, w9
000000000001f8ec	cmp	w10, #0x9
000000000001f8f0	b.ge	0x1f928
000000000001f8f4	cmp	w10, #0x2
000000000001f8f8	b.lt	0x1f95c
000000000001f8fc	mov	x10, #0x0
000000000001f900	mov	x11, x8
000000000001f904	ldr	w12, [x11]
000000000001f908	cmp	w12, #0x9f
000000000001f90c	b.gt	0x1f964
000000000001f910	add	x10, x10, #0x1
000000000001f914	add	x11, x11, #0x10
000000000001f918	cmp	x9, x10
000000000001f91c	b.ne	0x1f904
000000000001f920	mov	x10, x9
000000000001f924	b	0x1f964
000000000001f928	mov	w10, #0x0
000000000001f92c	add	w11, w9, w10
000000000001f930	cmp	w11, #0x0
000000000001f934	cinc	w11, w11, lt
000000000001f938	asr	w11, w11, #1
000000000001f93c	sbfiz	x12, x11, #4, #32
000000000001f940	ldr	w12, [x8, x12]
000000000001f944	cmp	w12, #0xa0
000000000001f948	csinc	w10, w10, w11, ge
000000000001f94c	csel	w9, w9, w11, lt
000000000001f950	cmp	w10, w9
000000000001f954	b.lt	0x1f92c
000000000001f958	b	0x1f964
000000000001f95c	mov	w10, #0x0
000000000001f960	b	0x1f964
000000000001f964	sxtw	x9, w10
000000000001f968	add	x8, x8, x9, lsl #4
000000000001f96c	ldr	x8, [x8, #0x8]
000000000001f970	ldr	x8, [x8, #0x8]
000000000001f974	mov	x0, x21
000000000001f978	mov	x1, x20
000000000001f97c	blr	x8
000000000001f980	cbz	x0, 0x1f7e0
000000000001f984	ldr	x8, [x0]
000000000001f988	and	x8, x8, #0xfffffffffffffffc
000000000001f98c	ldr	x8, [x8]
000000000001f990	ldr	x8, [x8, #0x70]
000000000001f994	mov	x1, x19
000000000001f998	blr	x8
000000000001f99c	tbz	w0, #0x0, 0x1f7e4
000000000001f9a0	mov	w0, #0x1
000000000001f9a4	ldr	x8, [sp, #0x8]
000000000001f9a8	str	x8, [x22, #0x110]
000000000001f9ac	ldp	x29, x30, [sp, #0x60]
000000000001f9b0	ldp	x20, x19, [sp, #0x50]
000000000001f9b4	ldp	x22, x21, [sp, #0x40]
000000000001f9b8	ldp	x24, x23, [sp, #0x30]
000000000001f9bc	add	sp, sp, #0x70
000000000001f9c0	ret
_kfun:kotlin.collections.AbstractCollection#containsAll(kotlin.collections.Collection<1:0>){}kotlin.Boolean:
000000000001f9c4	sub	sp, sp, #0x70
000000000001f9c8	stp	x24, x23, [sp, #0x30]
000000000001f9cc	stp	x22, x21, [sp, #0x40]
000000000001f9d0	stp	x20, x19, [sp, #0x50]
000000000001f9d4	stp	x29, x30, [sp, #0x60]
000000000001f9d8	add	x29, sp, #0x60
000000000001f9dc	mov	x20, x1
000000000001f9e0	mov	x19, x0
000000000001f9e4	movi.16b	v0, #0x0
000000000001f9e8	stp	q0, q0, [sp]
000000000001f9ec	str	xzr, [sp, #0x20]
000000000001f9f0	mov	x24, sp
000000000001f9f4	adrp	x0, 91 ; 0x7a000
000000000001f9f8	add	x0, x0, #0x4e0
000000000001f9fc	ldr	x8, [x0]
000000000001fa00	blr	x8
000000000001fa04	ldr	x22, [x0]
000000000001fa08	ldr	x8, [x22, #0x110]
000000000001fa0c	str	x24, [x22, #0x110]
000000000001fa10	mov	x9, #0x500000000
000000000001fa14	stp	x8, x9, [sp, #0x8]
000000000001fa18	adr	x23, #0x74af1
000000000001fa1c	nop
000000000001fa20	ldarb	w8, [x23]
000000000001fa24	tbz	w8, #0x0, 0x1fa2c
000000000001fa28	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001fa2c	cbz	x20, 0x1fc14
000000000001fa30	ldr	x8, [x20]
000000000001fa34	and	x8, x8, #0xfffffffffffffffc
000000000001fa38	ldr	x8, [x8]
000000000001fa3c	ldr	w9, [x8, #0x3c]
000000000001fa40	ldr	x8, [x8, #0x40]
000000000001fa44	tbnz	w9, #0x1f, 0x1fa64
000000000001fa48	mov	w10, #0x12
000000000001fa4c	and	x9, x9, x10
000000000001fa50	lsl	x9, x9, #4
000000000001fa54	ldr	w8, [x8, x9]
000000000001fa58	cmp	w8, #0x12
000000000001fa5c	b.eq	0x1fb34
000000000001fa60	b	0x1fc14
000000000001fa64	neg	w10, w9
000000000001fa68	mvn	w9, w9
000000000001fa6c	cmp	w10, #0x9
000000000001fa70	b.ge	0x1fabc
000000000001fa74	cmp	w10, #0x2
000000000001fa78	b.lt	0x1fb04
000000000001fa7c	mov	x10, #0x0
000000000001fa80	mov	x11, x8
000000000001fa84	ldr	w12, [x11]
000000000001fa88	cmp	w12, #0x11
000000000001fa8c	b.gt	0x1fb20
000000000001fa90	add	x10, x10, #0x1
000000000001fa94	add	x11, x11, #0x10
000000000001fa98	cmp	x9, x10
000000000001fa9c	b.ne	0x1fa84
000000000001faa0	mov	x10, x9
000000000001faa4	sxtw	x9, w10
000000000001faa8	lsl	x9, x9, #4
000000000001faac	ldr	w8, [x8, x9]
000000000001fab0	cmp	w8, #0x12
000000000001fab4	b.eq	0x1fb34
000000000001fab8	b	0x1fc14
000000000001fabc	mov	w10, #0x0
000000000001fac0	add	w11, w9, w10
000000000001fac4	cmp	w11, #0x0
000000000001fac8	cinc	w11, w11, lt
000000000001facc	asr	w11, w11, #1
000000000001fad0	sbfiz	x12, x11, #4, #32
000000000001fad4	ldr	w12, [x8, x12]
000000000001fad8	cmp	w12, #0x12
000000000001fadc	csinc	w10, w10, w11, ge
000000000001fae0	csel	w9, w9, w11, lt
000000000001fae4	cmp	w10, w9
000000000001fae8	b.lt	0x1fac0
000000000001faec	sxtw	x9, w10
000000000001faf0	lsl	x9, x9, #4
000000000001faf4	ldr	w8, [x8, x9]
000000000001faf8	cmp	w8, #0x12
000000000001fafc	b.eq	0x1fb34
000000000001fb00	b	0x1fc14
000000000001fb04	mov	w10, #0x0
000000000001fb08	sxtw	x9, w10
000000000001fb0c	lsl	x9, x9, #4
000000000001fb10	ldr	w8, [x8, x9]
000000000001fb14	cmp	w8, #0x12
000000000001fb18	b.eq	0x1fb34
000000000001fb1c	b	0x1fc14
000000000001fb20	sxtw	x9, w10
000000000001fb24	lsl	x9, x9, #4
000000000001fb28	ldr	w8, [x8, x9]
000000000001fb2c	cmp	w8, #0x12
000000000001fb30	b.ne	0x1fc14
000000000001fb34	ldr	x8, [x20]
000000000001fb38	and	x8, x8, #0xfffffffffffffffc
000000000001fb3c	ldr	x8, [x8]
000000000001fb40	ldr	w9, [x8, #0x3c]
000000000001fb44	ldr	x8, [x8, #0x40]
000000000001fb48	tbnz	w9, #0x1f, 0x1fb70
000000000001fb4c	mov	w10, #0x12
000000000001fb50	and	x9, x9, x10
000000000001fb54	add	x8, x8, x9, lsl #4
000000000001fb58	ldr	x8, [x8, #0x8]
000000000001fb5c	ldr	x8, [x8, #0x18]
000000000001fb60	mov	x0, x20
000000000001fb64	blr	x8
000000000001fb68	tbnz	w0, #0x0, 0x1fc0c
000000000001fb6c	b	0x1fc14
000000000001fb70	neg	w10, w9
000000000001fb74	mvn	w9, w9
000000000001fb78	cmp	w10, #0x9
000000000001fb7c	b.ge	0x1fbb4
000000000001fb80	cmp	w10, #0x2
000000000001fb84	b.lt	0x1fbe8
000000000001fb88	mov	x10, #0x0
000000000001fb8c	mov	x11, x8
000000000001fb90	ldr	w12, [x11]
000000000001fb94	cmp	w12, #0x11
000000000001fb98	b.gt	0x1fbf0
000000000001fb9c	add	x10, x10, #0x1
000000000001fba0	add	x11, x11, #0x10
000000000001fba4	cmp	x9, x10
000000000001fba8	b.ne	0x1fb90
000000000001fbac	mov	x10, x9
000000000001fbb0	b	0x1fbf0
000000000001fbb4	mov	w10, #0x0
000000000001fbb8	add	w11, w9, w10
000000000001fbbc	cmp	w11, #0x0
000000000001fbc0	cinc	w11, w11, lt
000000000001fbc4	asr	w11, w11, #1
000000000001fbc8	sbfiz	x12, x11, #4, #32
000000000001fbcc	ldr	w12, [x8, x12]
000000000001fbd0	cmp	w12, #0x12
000000000001fbd4	csinc	w10, w10, w11, ge
000000000001fbd8	csel	w9, w9, w11, lt
000000000001fbdc	cmp	w10, w9
000000000001fbe0	b.lt	0x1fbb8
000000000001fbe4	b	0x1fbf0
000000000001fbe8	mov	w10, #0x0
000000000001fbec	b	0x1fbf0
000000000001fbf0	sxtw	x9, w10
000000000001fbf4	add	x8, x8, x9, lsl #4
000000000001fbf8	ldr	x8, [x8, #0x8]
000000000001fbfc	ldr	x8, [x8, #0x18]
000000000001fc00	mov	x0, x20
000000000001fc04	blr	x8
000000000001fc08	tbz	w0, #0x0, 0x1fc14
000000000001fc0c	mov	w0, #0x1
000000000001fc10	b	0x1feb0
000000000001fc14	add	x21, x24, #0x20
000000000001fc18	add	x1, x24, #0x18
000000000001fc1c	ldr	x8, [x20]
000000000001fc20	and	x8, x8, #0xfffffffffffffffc
000000000001fc24	ldr	x8, [x8]
000000000001fc28	ldr	w9, [x8, #0x3c]
000000000001fc2c	ldr	x8, [x8, #0x40]
000000000001fc30	tbnz	w9, #0x1f, 0x1fc40
000000000001fc34	mov	w10, #0x31
000000000001fc38	and	x9, x9, x10
000000000001fc3c	b	0x1fcc4
000000000001fc40	neg	w10, w9
000000000001fc44	mvn	w9, w9
000000000001fc48	cmp	w10, #0x9
000000000001fc4c	b.ge	0x1fc84
000000000001fc50	cmp	w10, #0x2
000000000001fc54	b.lt	0x1fcb8
000000000001fc58	mov	x10, #0x0
000000000001fc5c	mov	x11, x8
000000000001fc60	ldr	w12, [x11]
000000000001fc64	cmp	w12, #0x30
000000000001fc68	b.gt	0x1fcc0
000000000001fc6c	add	x10, x10, #0x1
000000000001fc70	add	x11, x11, #0x10
000000000001fc74	cmp	x9, x10
000000000001fc78	b.ne	0x1fc60
000000000001fc7c	mov	x10, x9
000000000001fc80	b	0x1fcc0
000000000001fc84	mov	w10, #0x0
000000000001fc88	add	w11, w9, w10
000000000001fc8c	cmp	w11, #0x0
000000000001fc90	cinc	w11, w11, lt
000000000001fc94	asr	w11, w11, #1
000000000001fc98	sbfiz	x12, x11, #4, #32
000000000001fc9c	ldr	w12, [x8, x12]
000000000001fca0	cmp	w12, #0x31
000000000001fca4	csinc	w10, w10, w11, ge
000000000001fca8	csel	w9, w9, w11, lt
000000000001fcac	cmp	w10, w9
000000000001fcb0	b.lt	0x1fc88
000000000001fcb4	b	0x1fcc0
000000000001fcb8	mov	w10, #0x0
000000000001fcbc	b	0x1fcc0
000000000001fcc0	sxtw	x9, w10
000000000001fcc4	add	x8, x8, x9, lsl #4
000000000001fcc8	ldr	x8, [x8, #0x8]
000000000001fccc	ldr	x8, [x8]
000000000001fcd0	mov	x0, x20
000000000001fcd4	blr	x8
000000000001fcd8	mov	x20, x0
000000000001fcdc	mov	w24, #0xa0
000000000001fce0	b	0x1fd38
000000000001fce4	ldr	x8, [x20]
000000000001fce8	and	x8, x8, #0xfffffffffffffffc
000000000001fcec	ldr	x8, [x8]
000000000001fcf0	ldr	w9, [x8, #0x3c]
000000000001fcf4	ldr	x8, [x8, #0x40]
000000000001fcf8	tbnz	w9, #0x1f, 0x1fdb4
000000000001fcfc	and	x9, x9, x24
000000000001fd00	add	x8, x8, x9, lsl #4
000000000001fd04	ldr	x8, [x8, #0x8]
000000000001fd08	ldr	x8, [x8, #0x8]
000000000001fd0c	mov	x0, x20
000000000001fd10	mov	x1, x21
000000000001fd14	blr	x8
000000000001fd18	mov	x1, x0
000000000001fd1c	ldr	x8, [x19]
000000000001fd20	and	x8, x8, #0xfffffffffffffffc
000000000001fd24	ldr	x8, [x8]
000000000001fd28	ldr	x8, [x8, #0x90]
000000000001fd2c	mov	x0, x19
000000000001fd30	blr	x8
000000000001fd34	tbz	w0, #0x0, 0x1feac
000000000001fd38	ldr	x8, [x20]
000000000001fd3c	and	x8, x8, #0xfffffffffffffffc
000000000001fd40	ldr	x8, [x8]
000000000001fd44	ldr	w9, [x8, #0x3c]
000000000001fd48	ldr	x8, [x8, #0x40]
000000000001fd4c	tbnz	w9, #0x1f, 0x1fd70
000000000001fd50	and	x9, x9, x24
000000000001fd54	add	x8, x8, x9, lsl #4
000000000001fd58	ldr	x8, [x8, #0x8]
000000000001fd5c	ldr	x8, [x8]
000000000001fd60	mov	x0, x20
000000000001fd64	blr	x8
000000000001fd68	tbnz	w0, #0x0, 0x1fe94
000000000001fd6c	b	0x1fc0c
000000000001fd70	neg	w10, w9
000000000001fd74	mvn	w9, w9
000000000001fd78	cmp	w10, #0x9
000000000001fd7c	b.ge	0x1fdfc
000000000001fd80	cmp	w10, #0x2
000000000001fd84	b.lt	0x1fe64
000000000001fd88	mov	x10, #0x0
000000000001fd8c	mov	x11, x8
000000000001fd90	ldr	w12, [x11]
000000000001fd94	cmp	w12, #0x9f
000000000001fd98	b.gt	0x1fe78
000000000001fd9c	add	x10, x10, #0x1
000000000001fda0	add	x11, x11, #0x10
000000000001fda4	cmp	x9, x10
000000000001fda8	b.ne	0x1fd90
000000000001fdac	mov	x10, x9
000000000001fdb0	b	0x1fe78
000000000001fdb4	neg	w10, w9
000000000001fdb8	mvn	w9, w9
000000000001fdbc	cmp	w10, #0x9
000000000001fdc0	b.ge	0x1fe30
000000000001fdc4	cmp	w10, #0x2
000000000001fdc8	b.lt	0x1fe6c
000000000001fdcc	mov	x10, #0x0
000000000001fdd0	mov	x11, x8
000000000001fdd4	ldr	w12, [x11]
000000000001fdd8	cmp	w12, #0x9f
000000000001fddc	b.gt	0x1fea4
000000000001fde0	add	x10, x10, #0x1
000000000001fde4	add	x11, x11, #0x10
000000000001fde8	cmp	x9, x10
000000000001fdec	b.ne	0x1fdd4
000000000001fdf0	mov	x10, x9
000000000001fdf4	sxtw	x9, w10
000000000001fdf8	b	0x1fd00
000000000001fdfc	mov	w10, #0x0
000000000001fe00	add	w11, w9, w10
000000000001fe04	cmp	w11, #0x0
000000000001fe08	cinc	w11, w11, lt
000000000001fe0c	asr	w11, w11, #1
000000000001fe10	sbfiz	x12, x11, #4, #32
000000000001fe14	ldr	w12, [x8, x12]
000000000001fe18	cmp	w12, #0xa0
000000000001fe1c	csinc	w10, w10, w11, ge
000000000001fe20	csel	w9, w9, w11, lt
000000000001fe24	cmp	w10, w9
000000000001fe28	b.lt	0x1fe00
000000000001fe2c	b	0x1fe78
000000000001fe30	mov	w10, #0x0
000000000001fe34	add	w11, w9, w10
000000000001fe38	cmp	w11, #0x0
000000000001fe3c	cinc	w11, w11, lt
000000000001fe40	asr	w11, w11, #1
000000000001fe44	sbfiz	x12, x11, #4, #32
000000000001fe48	ldr	w12, [x8, x12]
000000000001fe4c	cmp	w12, #0xa0
000000000001fe50	csinc	w10, w10, w11, ge
000000000001fe54	csel	w9, w9, w11, lt
000000000001fe58	cmp	w10, w9
000000000001fe5c	b.lt	0x1fe34
000000000001fe60	b	0x1fea4
000000000001fe64	mov	w10, #0x0
000000000001fe68	b	0x1fe78
000000000001fe6c	mov	w10, #0x0
000000000001fe70	sxtw	x9, w10
000000000001fe74	b	0x1fd00
000000000001fe78	sxtw	x9, w10
000000000001fe7c	add	x8, x8, x9, lsl #4
000000000001fe80	ldr	x8, [x8, #0x8]
000000000001fe84	ldr	x8, [x8]
000000000001fe88	mov	x0, x20
000000000001fe8c	blr	x8
000000000001fe90	tbz	w0, #0x0, 0x1fc0c
000000000001fe94	ldarb	w8, [x23]
000000000001fe98	tbz	w8, #0x0, 0x1fce4
000000000001fe9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001fea0	b	0x1fce4
000000000001fea4	sxtw	x9, w10
000000000001fea8	b	0x1fd00
000000000001feac	mov	w0, #0x0
000000000001feb0	ldr	x8, [sp, #0x8]
000000000001feb4	str	x8, [x22, #0x110]
000000000001feb8	ldp	x29, x30, [sp, #0x60]
000000000001febc	ldp	x20, x19, [sp, #0x50]
000000000001fec0	ldp	x22, x21, [sp, #0x40]
000000000001fec4	ldp	x24, x23, [sp, #0x30]
000000000001fec8	add	sp, sp, #0x70
000000000001fecc	ret
_kfun:kotlin.collections.AbstractCollection#isEmpty(){}kotlin.Boolean:
000000000001fed0	stp	x20, x19, [sp, #-0x20]!
000000000001fed4	stp	x29, x30, [sp, #0x10]
000000000001fed8	add	x29, sp, #0x10
000000000001fedc	mov	x19, x0
000000000001fee0	adr	x8, #0x74629
000000000001fee4	nop
000000000001fee8	ldarb	w8, [x8]
000000000001feec	tbz	w8, #0x0, 0x1fef4
000000000001fef0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001fef4	ldr	x8, [x19]
000000000001fef8	and	x8, x8, #0xfffffffffffffffc
000000000001fefc	ldr	x8, [x8]
000000000001ff00	ldr	x8, [x8, #0x88]
000000000001ff04	mov	x0, x19
000000000001ff08	blr	x8
000000000001ff0c	cmp	w0, #0x0
000000000001ff10	cset	w0, eq
000000000001ff14	ldp	x29, x30, [sp, #0x10]
000000000001ff18	ldp	x20, x19, [sp], #0x20
000000000001ff1c	ret
_kfun:kotlin.collections.AbstractCollection#toString(){}kotlin.String:
000000000001ff20	sub	sp, sp, #0x50
000000000001ff24	stp	x22, x21, [sp, #0x20]
000000000001ff28	stp	x20, x19, [sp, #0x30]
000000000001ff2c	stp	x29, x30, [sp, #0x40]
000000000001ff30	add	x29, sp, #0x40
000000000001ff34	mov	x19, x1
000000000001ff38	mov	x20, x0
000000000001ff3c	movi.16b	v0, #0x0
000000000001ff40	stp	q0, q0, [sp]
000000000001ff44	adrp	x0, 91 ; 0x7a000
000000000001ff48	add	x0, x0, #0x4e0
000000000001ff4c	ldr	x8, [x0]
000000000001ff50	blr	x8
000000000001ff54	ldr	x21, [x0]
000000000001ff58	ldr	x8, [x21, #0x110]
000000000001ff5c	mov	x9, sp
000000000001ff60	str	x9, [x21, #0x110]
000000000001ff64	mov	x9, #0x400000000
000000000001ff68	stp	x8, x9, [sp, #0x8]
000000000001ff6c	adr	x8, #0x7459d
000000000001ff70	nop
000000000001ff74	ldarb	w8, [x8]
000000000001ff78	tbz	w8, #0x0, 0x1ff80
000000000001ff7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000001ff80	ldr	x8, [x21, #0x118]
000000000001ff84	add	x0, x8, #0x70
000000000001ff88	mov	w1, #0x18
000000000001ff8c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000001ff90	adr	x8, #0x44f30
000000000001ff94	nop
000000000001ff98	mov	x3, x0
000000000001ff9c	str	x8, [x3, #0x10]!
000000000001ffa0	stur	xzr, [x3, #-0x8]
000000000001ffa4	str	x3, [sp, #0x18]
000000000001ffa8	str	x20, [x3, #0x8]
000000000001ffac	adr	x1, #0x4e2e4
000000000001ffb0	nop
000000000001ffb4	adr	x2, #0x4e2fc
000000000001ffb8	nop
000000000001ffbc	mov	x0, x20
000000000001ffc0	mov	x4, x19
000000000001ffc4	bl	"_kfun:kotlin.collections#joinToString$default__at__kotlin.collections.Iterable<0:0>(kotlin.CharSequence?;kotlin.CharSequence?;kotlin.CharSequence?;kotlin.Int;kotlin.CharSequence?;kotlin.Function1<0:0,kotlin.CharSequence>?;kotlin.Int){0§<kotlin.Any?>}kotlin.String"
000000000001ffc8	str	x0, [x19]
000000000001ffcc	ldr	x8, [sp, #0x8]
000000000001ffd0	str	x8, [x21, #0x110]
000000000001ffd4	ldp	x29, x30, [sp, #0x40]
000000000001ffd8	ldp	x20, x19, [sp, #0x30]
000000000001ffdc	ldp	x22, x21, [sp, #0x20]
000000000001ffe0	add	sp, sp, #0x50
000000000001ffe4	ret
_kfun:kotlin.collections.AbstractCollection#toArray(){}kotlin.Array<kotlin.Any?>:
000000000001ffe8	stp	x20, x19, [sp, #-0x20]!
000000000001ffec	stp	x29, x30, [sp, #0x10]
000000000001fff0	add	x29, sp, #0x10
000000000001fff4	mov	x19, x1
000000000001fff8	mov	x20, x0
000000000001fffc	adr	x8, #0x7450d
0000000000020000	nop
0000000000020004	ldarb	w8, [x8]
0000000000020008	tbz	w8, #0x0, 0x20010
000000000002000c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020010	mov	x0, x20
0000000000020014	mov	x1, x19
0000000000020018	bl	"_kfun:kotlin.collections#copyToArrayImpl(kotlin.collections.Collection<*>){}kotlin.Array<kotlin.Any?>"
000000000002001c	str	x0, [x19]
0000000000020020	ldp	x29, x30, [sp, #0x10]
0000000000020024	ldp	x20, x19, [sp], #0x20
0000000000020028	ret
_kfun:kotlin.collections.AbstractCollection#toArray(kotlin.Array<0:0>){0§<kotlin.Any?>}kotlin.Array<0:0>:
000000000002002c	sub	sp, sp, #0x90
0000000000020030	stp	x28, x27, [sp, #0x30]
0000000000020034	stp	x26, x25, [sp, #0x40]
0000000000020038	stp	x24, x23, [sp, #0x50]
000000000002003c	stp	x22, x21, [sp, #0x60]
0000000000020040	stp	x20, x19, [sp, #0x70]
0000000000020044	stp	x29, x30, [sp, #0x80]
0000000000020048	add	x29, sp, #0x80
000000000002004c	mov	x19, x2
0000000000020050	mov	x20, x1
0000000000020054	mov	x23, x0
0000000000020058	adr	x26, #0x744b1
000000000002005c	nop
0000000000020060	ldarb	w8, [x26]
0000000000020064	tbz	w8, #0x0, 0x2006c
0000000000020068	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002006c	movi.16b	v0, #0x0
0000000000020070	stp	q0, q0, [sp]
0000000000020074	str	xzr, [sp, #0x20]
0000000000020078	mov	x24, sp
000000000002007c	adrp	x21, 90 ; 0x7a000
0000000000020080	add	x21, x21, #0x4e0
0000000000020084	ldr	x25, [x21]
0000000000020088	mov	x0, x21
000000000002008c	blr	x25
0000000000020090	ldr	x8, [x0]
0000000000020094	ldr	x9, [x8, #0x110]
0000000000020098	str	x24, [x8, #0x110]
000000000002009c	mov	x8, #0x500000000
00000000000200a0	stp	x9, x8, [sp, #0x8]
00000000000200a4	ldr	w22, [x20, #0x8]
00000000000200a8	ldr	x8, [x23]
00000000000200ac	and	x8, x8, #0xfffffffffffffffc
00000000000200b0	ldr	x8, [x8]
00000000000200b4	ldr	w9, [x8, #0x3c]
00000000000200b8	ldr	x8, [x8, #0x40]
00000000000200bc	tbnz	w9, #0x1f, 0x200cc
00000000000200c0	mov	w10, #0x12
00000000000200c4	and	x9, x9, x10
00000000000200c8	b	0x20150
00000000000200cc	neg	w10, w9
00000000000200d0	mvn	w9, w9
00000000000200d4	cmp	w10, #0x9
00000000000200d8	b.ge	0x20110
00000000000200dc	cmp	w10, #0x2
00000000000200e0	b.lt	0x20144
00000000000200e4	mov	x10, #0x0
00000000000200e8	mov	x11, x8
00000000000200ec	ldr	w12, [x11]
00000000000200f0	cmp	w12, #0x11
00000000000200f4	b.gt	0x2014c
00000000000200f8	add	x10, x10, #0x1
00000000000200fc	add	x11, x11, #0x10
0000000000020100	cmp	x9, x10
0000000000020104	b.ne	0x200ec
0000000000020108	mov	x10, x9
000000000002010c	b	0x2014c
0000000000020110	mov	w10, #0x0
0000000000020114	add	w11, w9, w10
0000000000020118	cmp	w11, #0x0
000000000002011c	cinc	w11, w11, lt
0000000000020120	asr	w11, w11, #1
0000000000020124	sbfiz	x12, x11, #4, #32
0000000000020128	ldr	w12, [x8, x12]
000000000002012c	cmp	w12, #0x12
0000000000020130	csinc	w10, w10, w11, ge
0000000000020134	csel	w9, w9, w11, lt
0000000000020138	cmp	w10, w9
000000000002013c	b.lt	0x20114
0000000000020140	b	0x2014c
0000000000020144	mov	w10, #0x0
0000000000020148	b	0x2014c
000000000002014c	sxtw	x9, w10
0000000000020150	add	x8, x8, x9, lsl #4
0000000000020154	ldr	x8, [x8, #0x8]
0000000000020158	ldr	x8, [x8]
000000000002015c	mov	x0, x23
0000000000020160	blr	x8
0000000000020164	cmp	w22, w0
0000000000020168	b.ge	0x20198
000000000002016c	mov	x0, x23
0000000000020170	mov	x1, x19
0000000000020174	bl	"_kfun:kotlin.collections#copyToArrayImpl(kotlin.collections.Collection<*>){}kotlin.Array<kotlin.Any?>"
0000000000020178	mov	x20, x0
000000000002017c	ldr	x8, [x0]
0000000000020180	and	x8, x8, #0xfffffffffffffffc
0000000000020184	ldr	x8, [x8]
0000000000020188	ldr	w8, [x8, #0x5c]
000000000002018c	cmp	w8, #0x59
0000000000020190	b.eq	0x20478
0000000000020194	b	0x204bc
0000000000020198	add	x22, x24, #0x20
000000000002019c	add	x1, x24, #0x18
00000000000201a0	ldr	x8, [x23]
00000000000201a4	and	x8, x8, #0xfffffffffffffffc
00000000000201a8	ldr	x8, [x8]
00000000000201ac	ldr	w9, [x8, #0x3c]
00000000000201b0	ldr	x8, [x8, #0x40]
00000000000201b4	tbnz	w9, #0x1f, 0x201c4
00000000000201b8	mov	w10, #0x12
00000000000201bc	and	x9, x9, x10
00000000000201c0	b	0x20248
00000000000201c4	neg	w10, w9
00000000000201c8	mvn	w9, w9
00000000000201cc	cmp	w10, #0x9
00000000000201d0	b.ge	0x20208
00000000000201d4	cmp	w10, #0x2
00000000000201d8	b.lt	0x2023c
00000000000201dc	mov	x10, #0x0
00000000000201e0	mov	x11, x8
00000000000201e4	ldr	w12, [x11]
00000000000201e8	cmp	w12, #0x11
00000000000201ec	b.gt	0x20244
00000000000201f0	add	x10, x10, #0x1
00000000000201f4	add	x11, x11, #0x10
00000000000201f8	cmp	x9, x10
00000000000201fc	b.ne	0x201e4
0000000000020200	mov	x10, x9
0000000000020204	b	0x20244
0000000000020208	mov	w10, #0x0
000000000002020c	add	w11, w9, w10
0000000000020210	cmp	w11, #0x0
0000000000020214	cinc	w11, w11, lt
0000000000020218	asr	w11, w11, #1
000000000002021c	sbfiz	x12, x11, #4, #32
0000000000020220	ldr	w12, [x8, x12]
0000000000020224	cmp	w12, #0x12
0000000000020228	csinc	w10, w10, w11, ge
000000000002022c	csel	w9, w9, w11, lt
0000000000020230	cmp	w10, w9
0000000000020234	b.lt	0x2020c
0000000000020238	b	0x20244
000000000002023c	mov	w10, #0x0
0000000000020240	b	0x20244
0000000000020244	sxtw	x9, w10
0000000000020248	add	x8, x8, x9, lsl #4
000000000002024c	ldr	x8, [x8, #0x8]
0000000000020250	ldr	x8, [x8, #0x20]
0000000000020254	mov	x0, x23
0000000000020258	blr	x8
000000000002025c	mov	x24, x0
0000000000020260	mov	w23, #0x0
0000000000020264	add	x27, x20, #0x10
0000000000020268	mov	w28, #0xa0
000000000002026c	ldr	x8, [x24]
0000000000020270	and	x8, x8, #0xfffffffffffffffc
0000000000020274	ldr	x8, [x8]
0000000000020278	ldr	w9, [x8, #0x3c]
000000000002027c	ldr	x8, [x8, #0x40]
0000000000020280	tbz	w9, #0x1f, 0x20420
0000000000020284	b	0x20380
0000000000020288	ldarb	w8, [x26]
000000000002028c	tbz	w8, #0x0, 0x20294
0000000000020290	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020294	ldr	x8, [x24]
0000000000020298	and	x8, x8, #0xfffffffffffffffc
000000000002029c	ldr	x8, [x8]
00000000000202a0	ldr	w9, [x8, #0x3c]
00000000000202a4	ldr	x8, [x8, #0x40]
00000000000202a8	tbnz	w9, #0x1f, 0x202b4
00000000000202ac	and	x9, x9, x28
00000000000202b0	b	0x20338
00000000000202b4	neg	w10, w9
00000000000202b8	mvn	w9, w9
00000000000202bc	cmp	w10, #0x9
00000000000202c0	b.ge	0x202f8
00000000000202c4	cmp	w10, #0x2
00000000000202c8	b.lt	0x2032c
00000000000202cc	mov	x10, #0x0
00000000000202d0	mov	x11, x8
00000000000202d4	ldr	w12, [x11]
00000000000202d8	cmp	w12, #0x9f
00000000000202dc	b.gt	0x20334
00000000000202e0	add	x10, x10, #0x1
00000000000202e4	add	x11, x11, #0x10
00000000000202e8	cmp	x9, x10
00000000000202ec	b.ne	0x202d4
00000000000202f0	mov	x10, x9
00000000000202f4	b	0x20334
00000000000202f8	mov	w10, #0x0
00000000000202fc	add	w11, w9, w10
0000000000020300	cmp	w11, #0x0
0000000000020304	cinc	w11, w11, lt
0000000000020308	asr	w11, w11, #1
000000000002030c	sbfiz	x12, x11, #4, #32
0000000000020310	ldr	w12, [x8, x12]
0000000000020314	cmp	w12, #0xa0
0000000000020318	csinc	w10, w10, w11, ge
000000000002031c	csel	w9, w9, w11, lt
0000000000020320	cmp	w10, w9
0000000000020324	b.lt	0x202fc
0000000000020328	b	0x20334
000000000002032c	mov	w10, #0x0
0000000000020330	b	0x20334
0000000000020334	sxtw	x9, w10
0000000000020338	add	x8, x8, x9, lsl #4
000000000002033c	ldr	x8, [x8, #0x8]
0000000000020340	ldr	x8, [x8, #0x8]
0000000000020344	mov	x0, x24
0000000000020348	mov	x1, x22
000000000002034c	blr	x8
0000000000020350	ldr	w8, [x20, #0x8]
0000000000020354	cmp	w8, w23
0000000000020358	b.ls	0x204b8
000000000002035c	ldr	xzr, [x20]
0000000000020360	str	x0, [x27, w23, sxtw #3]
0000000000020364	add	w23, w23, #0x1
0000000000020368	ldr	x8, [x24]
000000000002036c	and	x8, x8, #0xfffffffffffffffc
0000000000020370	ldr	x8, [x8]
0000000000020374	ldr	w9, [x8, #0x3c]
0000000000020378	ldr	x8, [x8, #0x40]
000000000002037c	tbz	w9, #0x1f, 0x20420
0000000000020380	neg	w10, w9
0000000000020384	mvn	w9, w9
0000000000020388	cmp	w10, #0x9
000000000002038c	b.ge	0x203c4
0000000000020390	cmp	w10, #0x2
0000000000020394	b.lt	0x203f8
0000000000020398	mov	x10, #0x0
000000000002039c	mov	x11, x8
00000000000203a0	ldr	w12, [x11]
00000000000203a4	cmp	w12, #0x9f
00000000000203a8	b.gt	0x20400
00000000000203ac	add	x10, x10, #0x1
00000000000203b0	add	x11, x11, #0x10
00000000000203b4	cmp	x9, x10
00000000000203b8	b.ne	0x203a0
00000000000203bc	mov	x10, x9
00000000000203c0	b	0x20400
00000000000203c4	mov	w10, #0x0
00000000000203c8	add	w11, w9, w10
00000000000203cc	cmp	w11, #0x0
00000000000203d0	cinc	w11, w11, lt
00000000000203d4	asr	w11, w11, #1
00000000000203d8	sbfiz	x12, x11, #4, #32
00000000000203dc	ldr	w12, [x8, x12]
00000000000203e0	cmp	w12, #0xa0
00000000000203e4	csinc	w10, w10, w11, ge
00000000000203e8	csel	w9, w9, w11, lt
00000000000203ec	cmp	w10, w9
00000000000203f0	b.lt	0x203c8
00000000000203f4	b	0x20400
00000000000203f8	mov	w10, #0x0
00000000000203fc	b	0x20400
0000000000020400	sxtw	x9, w10
0000000000020404	add	x8, x8, x9, lsl #4
0000000000020408	ldr	x8, [x8, #0x8]
000000000002040c	ldr	x8, [x8]
0000000000020410	mov	x0, x24
0000000000020414	blr	x8
0000000000020418	tbnz	w0, #0x0, 0x20288
000000000002041c	b	0x2043c
0000000000020420	and	x9, x9, x28
0000000000020424	add	x8, x8, x9, lsl #4
0000000000020428	ldr	x8, [x8, #0x8]
000000000002042c	ldr	x8, [x8]
0000000000020430	mov	x0, x24
0000000000020434	blr	x8
0000000000020438	tbnz	w0, #0x0, 0x20288
000000000002043c	ldr	w8, [x20, #0x8]
0000000000020440	cmp	w23, w8
0000000000020444	b.ge	0x20478
0000000000020448	mov	x0, x20
000000000002044c	mov	x1, x23
0000000000020450	mov	x2, x19
0000000000020454	bl	"_kfun:kotlin.collections#copyOfNulls__at__kotlin.Array<0:0>(kotlin.Int;kotlin.Int){0§<kotlin.Any?>}kotlin.Array<0:0?>"
0000000000020458	mov	x20, x0
000000000002045c	str	x0, [x19]
0000000000020460	ldr	x8, [x0]
0000000000020464	and	x8, x8, #0xfffffffffffffffc
0000000000020468	ldr	x8, [x8]
000000000002046c	ldr	w8, [x8, #0x5c]
0000000000020470	cmp	w8, #0x59
0000000000020474	b.ne	0x204bc
0000000000020478	str	x20, [x19]
000000000002047c	mov	x0, x21
0000000000020480	blr	x25
0000000000020484	ldr	x8, [x0]
0000000000020488	ldr	x9, [sp, #0x8]
000000000002048c	str	x9, [x8, #0x110]
0000000000020490	str	x20, [x19]
0000000000020494	mov	x0, x20
0000000000020498	ldp	x29, x30, [sp, #0x80]
000000000002049c	ldp	x20, x19, [sp, #0x70]
00000000000204a0	ldp	x22, x21, [sp, #0x60]
00000000000204a4	ldp	x24, x23, [sp, #0x50]
00000000000204a8	ldp	x26, x25, [sp, #0x40]
00000000000204ac	ldp	x28, x27, [sp, #0x30]
00000000000204b0	add	sp, sp, #0x90
00000000000204b4	ret
00000000000204b8	bl	_ThrowArrayIndexOutOfBoundsException
00000000000204bc	adr	x1, #0x408e4
00000000000204c0	nop
00000000000204c4	mov	x0, x20
00000000000204c8	bl	_ThrowClassCastException
_kfun:kotlin.collections.AbstractCollection.$toString$lambda$0$FUNCTION_REFERENCE$19.invoke#internal:
00000000000204cc	stp	x22, x21, [sp, #-0x30]!
00000000000204d0	stp	x20, x19, [sp, #0x10]
00000000000204d4	stp	x29, x30, [sp, #0x20]
00000000000204d8	add	x29, sp, #0x20
00000000000204dc	mov	x19, x2
00000000000204e0	mov	x20, x1
00000000000204e4	mov	x21, x0
00000000000204e8	adr	x8, #0x74021
00000000000204ec	nop
00000000000204f0	ldarb	w8, [x8]
00000000000204f4	tbz	w8, #0x0, 0x204fc
00000000000204f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000204fc	ldr	x8, [x21, #0x8]
0000000000020500	cmp	x8, x20
0000000000020504	b.eq	0x2053c
0000000000020508	cbz	x20, 0x20558
000000000002050c	ldr	x8, [x20]
0000000000020510	and	x8, x8, #0xfffffffffffffffc
0000000000020514	ldr	x8, [x8]
0000000000020518	ldr	x8, [x8, #0x80]
000000000002051c	mov	x0, x20
0000000000020520	mov	x1, x19
0000000000020524	blr	x8
0000000000020528	str	x0, [x19]
000000000002052c	ldp	x29, x30, [sp, #0x20]
0000000000020530	ldp	x20, x19, [sp, #0x10]
0000000000020534	ldp	x22, x21, [sp], #0x30
0000000000020538	ret
000000000002053c	adr	x0, #0x4f7a4
0000000000020540	nop
0000000000020544	str	x0, [x19]
0000000000020548	ldp	x29, x30, [sp, #0x20]
000000000002054c	ldp	x20, x19, [sp, #0x10]
0000000000020550	ldp	x22, x21, [sp], #0x30
0000000000020554	ret
0000000000020558	adr	x0, #0x4dcf8
000000000002055c	nop
0000000000020560	str	x0, [x19]
0000000000020564	ldp	x29, x30, [sp, #0x20]
0000000000020568	ldp	x20, x19, [sp, #0x10]
000000000002056c	ldp	x22, x21, [sp], #0x30
0000000000020570	ret
_kfun:kotlin.collections.AbstractIterator#hasNext(){}kotlin.Boolean:
0000000000020574	sub	sp, sp, #0xe0
0000000000020578	stp	x28, x27, [sp, #0x80]
000000000002057c	stp	x26, x25, [sp, #0x90]
0000000000020580	stp	x24, x23, [sp, #0xa0]
0000000000020584	stp	x22, x21, [sp, #0xb0]
0000000000020588	stp	x20, x19, [sp, #0xc0]
000000000002058c	stp	x29, x30, [sp, #0xd0]
0000000000020590	add	x29, sp, #0xd0
0000000000020594	mov	x19, x0
0000000000020598	movi.16b	v0, #0x0
000000000002059c	stp	q0, q0, [sp]
00000000000205a0	stp	q0, q0, [sp, #0x20]
00000000000205a4	adrp	x0, 90 ; 0x7a000
00000000000205a8	add	x0, x0, #0x4e0
00000000000205ac	ldr	x8, [x0]
00000000000205b0	blr	x8
00000000000205b4	ldr	x24, [x0]
00000000000205b8	ldr	x8, [x24, #0x110]
00000000000205bc	mov	x9, sp
00000000000205c0	str	x9, [x24, #0x110]
00000000000205c4	mov	x9, #0x800000000
00000000000205c8	stp	x8, x9, [sp, #0x8]
00000000000205cc	adr	x26, #0x73f3d
00000000000205d0	nop
00000000000205d4	ldarb	w8, [x26]
00000000000205d8	tbz	w8, #0x0, 0x205e0
00000000000205dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000205e0	ldr	x20, [x19, #0x8]
00000000000205e4	str	x20, [sp, #0x18]
00000000000205e8	adr	x25, #0x73fa8
00000000000205ec	nop
00000000000205f0	ldar	x21, [x25]
00000000000205f4	cmp	x21, #0x2
00000000000205f8	b.hs	0x207c0
00000000000205fc	ldp	x8, x9, [x24, #0x120]
0000000000020600	cmp	x8, x9
0000000000020604	b.eq	0x20624
0000000000020608	mov	x10, x9
000000000002060c	ldr	x11, [x10, #-0x10]!
0000000000020610	cmp	x11, x25
0000000000020614	b.eq	0x206dc
0000000000020618	mov	x9, x10
000000000002061c	cmp	x10, x8
0000000000020620	b.ne	0x2060c
0000000000020624	add	x22, x24, #0x120
0000000000020628	add	x0, x24, #0x138
000000000002062c	mov	w9, #0x1
0000000000020630	ldaxr	w8, [x0]
0000000000020634	stlxr	w10, w9, [x0]
0000000000020638	cbnz	w10, 0x20630
000000000002063c	b	0x2064c
0000000000020640	mov	w23, #0x1
0000000000020644	stlxr	w9, x23, [x25]
0000000000020648	cbz	w9, 0x2065c
000000000002064c	ldaxr	x21, [x25]
0000000000020650	cbz	x21, 0x20640
0000000000020654	mov	w23, #0x0
0000000000020658	clrex
000000000002065c	cmp	x21, #0x1
0000000000020660	b.eq	0x2064c
0000000000020664	cbz	x24, 0x2068c
0000000000020668	ldaxr	w9, [x0]
000000000002066c	stlxr	w10, w8, [x0]
0000000000020670	cbnz	w10, 0x20668
0000000000020674	cbnz	w8, 0x2068c
0000000000020678	cmp	w9, #0x1
000000000002067c	b.ne	0x2068c
0000000000020680	ldarb	w8, [x26]
0000000000020684	tbz	w8, #0x0, 0x2068c
0000000000020688	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002068c	tbz	w23, #0x0, 0x206d4
0000000000020690	ldr	x8, [x24, #0x118]
0000000000020694	add	x0, x8, #0x70
0000000000020698	mov	w1, #0x20
000000000002069c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000206a0	mov	x21, x0
00000000000206a4	adr	x8, #0x449ac
00000000000206a8	nop
00000000000206ac	str	x8, [x21, #0x10]!
00000000000206b0	stur	xzr, [x21, #-0x8]
00000000000206b4	str	x21, [sp, #0x20]
00000000000206b8	ldp	x9, x8, [x24, #0x128]
00000000000206bc	cmp	x9, x8
00000000000206c0	b.hs	0x206e8
00000000000206c4	stp	x25, x21, [x9]
00000000000206c8	add	x8, x9, #0x10
00000000000206cc	str	x8, [x24, #0x128]
00000000000206d0	b	0x20770
00000000000206d4	str	x21, [sp, #0x20]
00000000000206d8	b	0x207c0
00000000000206dc	ldur	x21, [x9, #-0x8]
00000000000206e0	str	x21, [sp, #0x20]
00000000000206e4	b	0x207c0
00000000000206e8	ldr	x10, [x22]
00000000000206ec	sub	x9, x9, x10
00000000000206f0	asr	x27, x9, #4
00000000000206f4	add	x9, x27, #0x1
00000000000206f8	lsr	x11, x9, #60
00000000000206fc	cbnz	x11, 0x20cbc
0000000000020700	sub	x8, x8, x10
0000000000020704	asr	x10, x8, #3
0000000000020708	cmp	x10, x9
000000000002070c	csel	x9, x9, x10, lo
0000000000020710	mov	x10, #0x7ffffffffffffff
0000000000020714	cmp	x10, x8, asr #4
0000000000020718	mov	x8, #0xfffffffffffffff
000000000002071c	csel	x23, x9, x8, hi
0000000000020720	mov	x0, x23
0000000000020724	mov	w1, #0x10
0000000000020728	bl	0x55aec ; symbol stub for: _calloc
000000000002072c	add	x8, x0, x27, lsl #4
0000000000020730	add	x27, x0, x23, lsl #4
0000000000020734	stp	x25, x21, [x8]
0000000000020738	add	x28, x8, #0x10
000000000002073c	ldp	x1, x9, [x24, #0x120]
0000000000020740	sub	x2, x9, x1
0000000000020744	sub	x23, x8, x2
0000000000020748	cmp	x2, #0x1
000000000002074c	b.lt	0x2075c
0000000000020750	mov	x0, x23
0000000000020754	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000020758	ldr	x1, [x22]
000000000002075c	stp	x23, x28, [x24, #0x120]
0000000000020760	str	x27, [x24, #0x130]
0000000000020764	cbz	x1, 0x20770
0000000000020768	mov	x0, x1
000000000002076c	bl	0x55b7c ; symbol stub for: _free
0000000000020770	mov	x0, x21
0000000000020774	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
0000000000020778	mov	w0, #0x1
000000000002077c	mov	w1, #0x28
0000000000020780	bl	0x55aec ; symbol stub for: _calloc
0000000000020784	mov	x8, x24
0000000000020788	ldr	x9, [x8, #0x18]!
000000000002078c	sub	x10, x8, #0x8
0000000000020790	stp	x25, x10, [x0, #0x10]
0000000000020794	stp	x9, x8, [x0]
0000000000020798	str	x0, [x9, #0x8]
000000000002079c	str	x0, [x8]
00000000000207a0	ldr	x9, [x8, #0x10]
00000000000207a4	add	x9, x9, #0x1
00000000000207a8	str	x9, [x8, #0x10]
00000000000207ac	str	x0, [x0, #0x20]
00000000000207b0	stlr	x21, [x25]
00000000000207b4	ldr	x9, [x8, #0x110]
00000000000207b8	sub	x9, x9, #0x10
00000000000207bc	str	x9, [x8, #0x110]
00000000000207c0	ldr	x8, [x21, #0x8]
00000000000207c4	ldr	w9, [x8, #0x8]
00000000000207c8	cmp	w9, #0x1
00000000000207cc	b.ls	0x20c78
00000000000207d0	ldr	x1, [x8, #0x18]
00000000000207d4	str	x1, [sp, #0x28]
00000000000207d8	ldr	x8, [x20]
00000000000207dc	and	x8, x8, #0xfffffffffffffffc
00000000000207e0	ldr	x8, [x8]
00000000000207e4	ldr	x8, [x8, #0x70]
00000000000207e8	mov	x0, x20
00000000000207ec	blr	x8
00000000000207f0	cbnz	w0, 0x20c7c
00000000000207f4	ldr	x8, [x19, #0x8]
00000000000207f8	str	x8, [sp, #0x38]
00000000000207fc	ldr	w8, [x8, #0x10]
0000000000020800	cbz	w8, 0x20814
0000000000020804	cmp	w8, #0x2
0000000000020808	b.ne	0x2081c
000000000002080c	mov	w0, #0x0
0000000000020810	b	0x20c50
0000000000020814	mov	w0, #0x1
0000000000020818	b	0x20c50
000000000002081c	movi.16b	v0, #0x0
0000000000020820	stp	q0, q0, [sp, #0x40]
0000000000020824	stp	q0, q0, [sp, #0x60]
0000000000020828	ldr	x8, [x24, #0x110]
000000000002082c	add	x9, sp, #0x40
0000000000020830	str	x9, [x24, #0x110]
0000000000020834	mov	x9, #0x800000000
0000000000020838	stp	x8, x9, [sp, #0x48]
000000000002083c	ldar	x20, [x25]
0000000000020840	cmp	x20, #0x2
0000000000020844	b.hs	0x20a0c
0000000000020848	ldp	x8, x9, [x24, #0x120]
000000000002084c	cmp	x8, x9
0000000000020850	b.eq	0x20870
0000000000020854	mov	x10, x9
0000000000020858	ldr	x11, [x10, #-0x10]!
000000000002085c	cmp	x11, x25
0000000000020860	b.eq	0x20928
0000000000020864	mov	x9, x10
0000000000020868	cmp	x10, x8
000000000002086c	b.ne	0x20858
0000000000020870	add	x21, x24, #0x120
0000000000020874	add	x0, x24, #0x138
0000000000020878	mov	w9, #0x1
000000000002087c	ldaxr	w8, [x0]
0000000000020880	stlxr	w10, w9, [x0]
0000000000020884	cbnz	w10, 0x2087c
0000000000020888	b	0x20898
000000000002088c	mov	w22, #0x1
0000000000020890	stlxr	w9, x22, [x25]
0000000000020894	cbz	w9, 0x208a8
0000000000020898	ldaxr	x20, [x25]
000000000002089c	cbz	x20, 0x2088c
00000000000208a0	mov	w22, #0x0
00000000000208a4	clrex
00000000000208a8	cmp	x20, #0x1
00000000000208ac	b.eq	0x20898
00000000000208b0	cbz	x24, 0x208d8
00000000000208b4	ldaxr	w9, [x0]
00000000000208b8	stlxr	w10, w8, [x0]
00000000000208bc	cbnz	w10, 0x208b4
00000000000208c0	cbnz	w8, 0x208d8
00000000000208c4	cmp	w9, #0x1
00000000000208c8	b.ne	0x208d8
00000000000208cc	ldarb	w8, [x26]
00000000000208d0	tbz	w8, #0x0, 0x208d8
00000000000208d4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000208d8	tbz	w22, #0x0, 0x20920
00000000000208dc	ldr	x8, [x24, #0x118]
00000000000208e0	add	x0, x8, #0x70
00000000000208e4	mov	w1, #0x20
00000000000208e8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000208ec	mov	x20, x0
00000000000208f0	adr	x8, #0x44760
00000000000208f4	nop
00000000000208f8	str	x8, [x20, #0x10]!
00000000000208fc	stur	xzr, [x20, #-0x8]
0000000000020900	str	x20, [sp, #0x58]
0000000000020904	ldp	x9, x8, [x24, #0x128]
0000000000020908	cmp	x9, x8
000000000002090c	b.hs	0x20934
0000000000020910	stp	x25, x20, [x9]
0000000000020914	add	x8, x9, #0x10
0000000000020918	str	x8, [x24, #0x128]
000000000002091c	b	0x209bc
0000000000020920	str	x20, [sp, #0x58]
0000000000020924	b	0x20a0c
0000000000020928	ldur	x20, [x9, #-0x8]
000000000002092c	str	x20, [sp, #0x58]
0000000000020930	b	0x20a0c
0000000000020934	ldr	x10, [x21]
0000000000020938	sub	x9, x9, x10
000000000002093c	asr	x23, x9, #4
0000000000020940	add	x9, x23, #0x1
0000000000020944	lsr	x11, x9, #60
0000000000020948	cbnz	x11, 0x20cc4
000000000002094c	sub	x8, x8, x10
0000000000020950	asr	x10, x8, #3
0000000000020954	cmp	x10, x9
0000000000020958	csel	x9, x9, x10, lo
000000000002095c	mov	x10, #0x7ffffffffffffff
0000000000020960	cmp	x10, x8, asr #4
0000000000020964	mov	x8, #0xfffffffffffffff
0000000000020968	csel	x22, x9, x8, hi
000000000002096c	mov	x0, x22
0000000000020970	mov	w1, #0x10
0000000000020974	bl	0x55aec ; symbol stub for: _calloc
0000000000020978	add	x8, x0, x23, lsl #4
000000000002097c	add	x23, x0, x22, lsl #4
0000000000020980	stp	x25, x20, [x8]
0000000000020984	add	x27, x8, #0x10
0000000000020988	ldp	x1, x9, [x24, #0x120]
000000000002098c	sub	x2, x9, x1
0000000000020990	sub	x22, x8, x2
0000000000020994	cmp	x2, #0x1
0000000000020998	b.lt	0x209a8
000000000002099c	mov	x0, x22
00000000000209a0	bl	0x55bd0 ; symbol stub for: _memcpy
00000000000209a4	ldr	x1, [x21]
00000000000209a8	stp	x22, x27, [x24, #0x120]
00000000000209ac	str	x23, [x24, #0x130]
00000000000209b0	cbz	x1, 0x209bc
00000000000209b4	mov	x0, x1
00000000000209b8	bl	0x55b7c ; symbol stub for: _free
00000000000209bc	mov	x0, x20
00000000000209c0	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
00000000000209c4	mov	w0, #0x1
00000000000209c8	mov	w1, #0x28
00000000000209cc	bl	0x55aec ; symbol stub for: _calloc
00000000000209d0	mov	x8, x24
00000000000209d4	ldr	x9, [x8, #0x18]!
00000000000209d8	sub	x10, x8, #0x8
00000000000209dc	stp	x25, x10, [x0, #0x10]
00000000000209e0	stp	x9, x8, [x0]
00000000000209e4	str	x0, [x9, #0x8]
00000000000209e8	str	x0, [x8]
00000000000209ec	ldr	x9, [x8, #0x10]
00000000000209f0	add	x9, x9, #0x1
00000000000209f4	str	x9, [x8, #0x10]
00000000000209f8	str	x0, [x0, #0x20]
00000000000209fc	stlr	x20, [x25]
0000000000020a00	ldr	x9, [x8, #0x110]
0000000000020a04	sub	x9, x9, #0x10
0000000000020a08	str	x9, [x8, #0x110]
0000000000020a0c	ldr	x8, [x20, #0x8]
0000000000020a10	ldr	w9, [x8, #0x8]
0000000000020a14	cmp	w9, #0x1
0000000000020a18	b.ls	0x20c78
0000000000020a1c	ldr	x8, [x8, #0x18]
0000000000020a20	str	x8, [sp, #0x60]
0000000000020a24	str	x8, [x19, #0x8]
0000000000020a28	ldr	x8, [x19]
0000000000020a2c	and	x8, x8, #0xfffffffffffffffc
0000000000020a30	ldr	x8, [x8]
0000000000020a34	ldr	x8, [x8, #0x88]
0000000000020a38	mov	x0, x19
0000000000020a3c	blr	x8
0000000000020a40	ldr	x19, [x19, #0x8]
0000000000020a44	str	x19, [sp, #0x68]
0000000000020a48	ldar	x20, [x25]
0000000000020a4c	cmp	x20, #0x2
0000000000020a50	b.hs	0x20c18
0000000000020a54	ldp	x8, x9, [x24, #0x120]
0000000000020a58	cmp	x8, x9
0000000000020a5c	b.eq	0x20a7c
0000000000020a60	mov	x10, x9
0000000000020a64	ldr	x11, [x10, #-0x10]!
0000000000020a68	cmp	x11, x25
0000000000020a6c	b.eq	0x20b34
0000000000020a70	mov	x9, x10
0000000000020a74	cmp	x10, x8
0000000000020a78	b.ne	0x20a64
0000000000020a7c	add	x21, x24, #0x120
0000000000020a80	add	x0, x24, #0x138
0000000000020a84	mov	w9, #0x1
0000000000020a88	ldaxr	w8, [x0]
0000000000020a8c	stlxr	w10, w9, [x0]
0000000000020a90	cbnz	w10, 0x20a88
0000000000020a94	b	0x20aa4
0000000000020a98	mov	w22, #0x1
0000000000020a9c	stlxr	w9, x22, [x25]
0000000000020aa0	cbz	w9, 0x20ab4
0000000000020aa4	ldaxr	x20, [x25]
0000000000020aa8	cbz	x20, 0x20a98
0000000000020aac	mov	w22, #0x0
0000000000020ab0	clrex
0000000000020ab4	cmp	x20, #0x1
0000000000020ab8	b.eq	0x20aa4
0000000000020abc	cbz	x24, 0x20ae4
0000000000020ac0	ldaxr	w9, [x0]
0000000000020ac4	stlxr	w10, w8, [x0]
0000000000020ac8	cbnz	w10, 0x20ac0
0000000000020acc	cbnz	w8, 0x20ae4
0000000000020ad0	cmp	w9, #0x1
0000000000020ad4	b.ne	0x20ae4
0000000000020ad8	ldarb	w8, [x26]
0000000000020adc	tbz	w8, #0x0, 0x20ae4
0000000000020ae0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000020ae4	tbz	w22, #0x0, 0x20b2c
0000000000020ae8	ldr	x8, [x24, #0x118]
0000000000020aec	add	x0, x8, #0x70
0000000000020af0	mov	w1, #0x20
0000000000020af4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000020af8	mov	x20, x0
0000000000020afc	adr	x8, #0x44554
0000000000020b00	nop
0000000000020b04	str	x8, [x20, #0x10]!
0000000000020b08	stur	xzr, [x20, #-0x8]
0000000000020b0c	str	x20, [sp, #0x70]
0000000000020b10	ldp	x9, x8, [x24, #0x128]
0000000000020b14	cmp	x9, x8
0000000000020b18	b.hs	0x20b40
0000000000020b1c	stp	x25, x20, [x9]
0000000000020b20	add	x8, x9, #0x10
0000000000020b24	str	x8, [x24, #0x128]
0000000000020b28	b	0x20bc8
0000000000020b2c	str	x20, [sp, #0x70]
0000000000020b30	b	0x20c18
0000000000020b34	ldur	x20, [x9, #-0x8]
0000000000020b38	str	x20, [sp, #0x70]
0000000000020b3c	b	0x20c18
0000000000020b40	ldr	x10, [x21]
0000000000020b44	sub	x9, x9, x10
0000000000020b48	asr	x23, x9, #4
0000000000020b4c	add	x9, x23, #0x1
0000000000020b50	lsr	x11, x9, #60
0000000000020b54	cbnz	x11, 0x20cc4
0000000000020b58	sub	x8, x8, x10
0000000000020b5c	asr	x10, x8, #3
0000000000020b60	cmp	x10, x9
0000000000020b64	csel	x9, x9, x10, lo
0000000000020b68	mov	x10, #0x7ffffffffffffff
0000000000020b6c	cmp	x10, x8, asr #4
0000000000020b70	mov	x8, #0xfffffffffffffff
0000000000020b74	csel	x22, x9, x8, hi
0000000000020b78	mov	x0, x22
0000000000020b7c	mov	w1, #0x10
0000000000020b80	bl	0x55aec ; symbol stub for: _calloc
0000000000020b84	add	x8, x0, x23, lsl #4
0000000000020b88	add	x23, x0, x22, lsl #4
0000000000020b8c	stp	x25, x20, [x8]
0000000000020b90	add	x26, x8, #0x10
0000000000020b94	ldp	x1, x9, [x24, #0x120]
0000000000020b98	sub	x2, x9, x1
0000000000020b9c	sub	x22, x8, x2
0000000000020ba0	cmp	x2, #0x1
0000000000020ba4	b.lt	0x20bb4
0000000000020ba8	mov	x0, x22
0000000000020bac	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000020bb0	ldr	x1, [x21]
0000000000020bb4	stp	x22, x26, [x24, #0x120]
0000000000020bb8	str	x23, [x24, #0x130]
0000000000020bbc	cbz	x1, 0x20bc8
0000000000020bc0	mov	x0, x1
0000000000020bc4	bl	0x55b7c ; symbol stub for: _free
0000000000020bc8	mov	x0, x20
0000000000020bcc	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
0000000000020bd0	mov	w0, #0x1
0000000000020bd4	mov	w1, #0x28
0000000000020bd8	bl	0x55aec ; symbol stub for: _calloc
0000000000020bdc	mov	x8, x24
0000000000020be0	ldr	x9, [x8, #0x18]!
0000000000020be4	sub	x10, x8, #0x8
0000000000020be8	stp	x25, x10, [x0, #0x10]
0000000000020bec	stp	x9, x8, [x0]
0000000000020bf0	str	x0, [x9, #0x8]
0000000000020bf4	str	x0, [x8]
0000000000020bf8	ldr	x9, [x8, #0x10]
0000000000020bfc	add	x9, x9, #0x1
0000000000020c00	str	x9, [x8, #0x10]
0000000000020c04	str	x0, [x0, #0x20]
0000000000020c08	stlr	x20, [x25]
0000000000020c0c	ldr	x9, [x8, #0x110]
0000000000020c10	sub	x9, x9, #0x10
0000000000020c14	str	x9, [x8, #0x110]
0000000000020c18	ldr	x8, [x20, #0x8]
0000000000020c1c	ldr	w9, [x8, #0x8]
0000000000020c20	cmp	w9, #0x3
0000000000020c24	b.ls	0x20c78
0000000000020c28	ldr	x1, [x8, #0x28]
0000000000020c2c	str	x1, [sp, #0x78]
0000000000020c30	ldr	x8, [x19]
0000000000020c34	and	x8, x8, #0xfffffffffffffffc
0000000000020c38	ldr	x8, [x8]
0000000000020c3c	ldr	x8, [x8, #0x70]
0000000000020c40	mov	x0, x19
0000000000020c44	blr	x8
0000000000020c48	ldr	x8, [sp, #0x48]
0000000000020c4c	str	x8, [x24, #0x110]
0000000000020c50	ldr	x8, [sp, #0x8]
0000000000020c54	str	x8, [x24, #0x110]
0000000000020c58	ldp	x29, x30, [sp, #0xd0]
0000000000020c5c	ldp	x20, x19, [sp, #0xc0]
0000000000020c60	ldp	x22, x21, [sp, #0xb0]
0000000000020c64	ldp	x24, x23, [sp, #0xa0]
0000000000020c68	ldp	x26, x25, [sp, #0x90]
0000000000020c6c	ldp	x28, x27, [sp, #0x80]
0000000000020c70	add	sp, sp, #0xe0
0000000000020c74	ret
0000000000020c78	bl	_ThrowArrayIndexOutOfBoundsException
0000000000020c7c	ldr	x8, [x24, #0x118]
0000000000020c80	add	x0, x8, #0x70
0000000000020c84	mov	w1, #0x38
0000000000020c88	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000020c8c	mov	x19, x0
0000000000020c90	adr	x8, #0x408e0
0000000000020c94	nop
0000000000020c98	str	x8, [x19, #0x10]!
0000000000020c9c	stur	xzr, [x19, #-0x8]
0000000000020ca0	str	x19, [sp, #0x30]
0000000000020ca4	adr	x1, #0x4d43c
0000000000020ca8	nop
0000000000020cac	mov	x0, x19
0000000000020cb0	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000020cb4	mov	x0, x19
0000000000020cb8	bl	_ThrowException
0000000000020cbc	mov	x0, x22
0000000000020cc0	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000020cc4	mov	x0, x21
0000000000020cc8	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000020ccc	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000020cd0	str	xzr, [sp, #0x70]
0000000000020cd4	stlr	xzr, [x25]
0000000000020cd8	ldr	x8, [x24, #0x128]
0000000000020cdc	sub	x8, x8, #0x10
0000000000020ce0	str	x8, [x24, #0x128]
0000000000020ce4	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
0000000000020ce8	b	0x20d30
0000000000020cec	b	0x20d34
0000000000020cf0	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000020cf4	str	xzr, [sp, #0x58]
0000000000020cf8	stlr	xzr, [x25]
0000000000020cfc	ldr	x8, [x24, #0x128]
0000000000020d00	sub	x8, x8, #0x10
0000000000020d04	str	x8, [x24, #0x128]
0000000000020d08	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
0000000000020d0c	b	0x20d30
0000000000020d10	b	0x20d34
0000000000020d14	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000020d18	str	xzr, [sp, #0x20]
0000000000020d1c	stlr	xzr, [x25]
0000000000020d20	ldr	x8, [x24, #0x128]
0000000000020d24	sub	x8, x8, #0x10
0000000000020d28	str	x8, [x24, #0x128]
0000000000020d2c	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
0000000000020d30	brk	#0x1
0000000000020d34	mov	x19, x0
0000000000020d38	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
0000000000020d3c	mov	x0, x19
0000000000020d40	bl	0x558ac ; symbol stub for: __Unwind_Resume
_kfun:kotlin.collections.AbstractIterator#next(){}1:0:
0000000000020d44	sub	sp, sp, #0x90
0000000000020d48	stp	x28, x27, [sp, #0x30]
0000000000020d4c	stp	x26, x25, [sp, #0x40]
0000000000020d50	stp	x24, x23, [sp, #0x50]
0000000000020d54	stp	x22, x21, [sp, #0x60]
0000000000020d58	stp	x20, x19, [sp, #0x70]
0000000000020d5c	stp	x29, x30, [sp, #0x80]
0000000000020d60	add	x29, sp, #0x80
0000000000020d64	mov	x19, x1
0000000000020d68	mov	x20, x0
0000000000020d6c	movi.16b	v0, #0x0
0000000000020d70	stp	q0, q0, [sp]
0000000000020d74	str	q0, [sp, #0x20]
0000000000020d78	adrp	x0, 90 ; 0x7a000
0000000000020d7c	add	x0, x0, #0x4e0
0000000000020d80	ldr	x8, [x0]
0000000000020d84	blr	x8
0000000000020d88	ldr	x24, [x0]
0000000000020d8c	ldr	x8, [x24, #0x110]
0000000000020d90	mov	x9, sp
0000000000020d94	str	x9, [x24, #0x110]
0000000000020d98	mov	x9, #0x600000000
0000000000020d9c	stp	x8, x9, [sp, #0x8]
0000000000020da0	adr	x23, #0x73769
0000000000020da4	nop
0000000000020da8	ldarb	w8, [x23]
0000000000020dac	tbz	w8, #0x0, 0x20db4
0000000000020db0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000020db4	ldr	x8, [x20]
0000000000020db8	and	x8, x8, #0xfffffffffffffffc
0000000000020dbc	ldr	x8, [x8]
0000000000020dc0	ldr	x8, [x8, #0x90]
0000000000020dc4	mov	x0, x20
0000000000020dc8	blr	x8
0000000000020dcc	tbz	w0, #0x0, 0x20ff4
0000000000020dd0	adr	x25, #0x737c0
0000000000020dd4	nop
0000000000020dd8	ldar	x21, [x25]
0000000000020ddc	cmp	x21, #0x2
0000000000020de0	b.hs	0x20fa8
0000000000020de4	ldp	x8, x9, [x24, #0x120]
0000000000020de8	cmp	x8, x9
0000000000020dec	b.eq	0x20e0c
0000000000020df0	mov	x10, x9
0000000000020df4	ldr	x11, [x10, #-0x10]!
0000000000020df8	cmp	x11, x25
0000000000020dfc	b.eq	0x20ec4
0000000000020e00	mov	x9, x10
0000000000020e04	cmp	x10, x8
0000000000020e08	b.ne	0x20df4
0000000000020e0c	add	x22, x24, #0x120
0000000000020e10	add	x0, x24, #0x138
0000000000020e14	mov	w9, #0x1
0000000000020e18	ldaxr	w8, [x0]
0000000000020e1c	stlxr	w10, w9, [x0]
0000000000020e20	cbnz	w10, 0x20e18
0000000000020e24	b	0x20e34
0000000000020e28	mov	w26, #0x1
0000000000020e2c	stlxr	w9, x26, [x25]
0000000000020e30	cbz	w9, 0x20e44
0000000000020e34	ldaxr	x21, [x25]
0000000000020e38	cbz	x21, 0x20e28
0000000000020e3c	mov	w26, #0x0
0000000000020e40	clrex
0000000000020e44	cmp	x21, #0x1
0000000000020e48	b.eq	0x20e34
0000000000020e4c	cbz	x24, 0x20e74
0000000000020e50	ldaxr	w9, [x0]
0000000000020e54	stlxr	w10, w8, [x0]
0000000000020e58	cbnz	w10, 0x20e50
0000000000020e5c	cbnz	w8, 0x20e74
0000000000020e60	cmp	w9, #0x1
0000000000020e64	b.ne	0x20e74
0000000000020e68	ldarb	w8, [x23]
0000000000020e6c	tbz	w8, #0x0, 0x20e74
0000000000020e70	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000020e74	tbz	w26, #0x0, 0x20ebc
0000000000020e78	ldr	x8, [x24, #0x118]
0000000000020e7c	add	x0, x8, #0x70
0000000000020e80	mov	w1, #0x20
0000000000020e84	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000020e88	mov	x21, x0
0000000000020e8c	adr	x8, #0x441c4
0000000000020e90	nop
0000000000020e94	str	x8, [x21, #0x10]!
0000000000020e98	stur	xzr, [x21, #-0x8]
0000000000020e9c	str	x21, [sp, #0x20]
0000000000020ea0	ldp	x9, x8, [x24, #0x128]
0000000000020ea4	cmp	x9, x8
0000000000020ea8	b.hs	0x20ed0
0000000000020eac	stp	x25, x21, [x9]
0000000000020eb0	add	x8, x9, #0x10
0000000000020eb4	str	x8, [x24, #0x128]
0000000000020eb8	b	0x20f58
0000000000020ebc	str	x21, [sp, #0x20]
0000000000020ec0	b	0x20fa8
0000000000020ec4	ldur	x21, [x9, #-0x8]
0000000000020ec8	str	x21, [sp, #0x20]
0000000000020ecc	b	0x20fa8
0000000000020ed0	ldr	x10, [x22]
0000000000020ed4	sub	x9, x9, x10
0000000000020ed8	asr	x26, x9, #4
0000000000020edc	add	x9, x26, #0x1
0000000000020ee0	lsr	x11, x9, #60
0000000000020ee4	cbnz	x11, 0x21030
0000000000020ee8	sub	x8, x8, x10
0000000000020eec	asr	x10, x8, #3
0000000000020ef0	cmp	x10, x9
0000000000020ef4	csel	x9, x9, x10, lo
0000000000020ef8	mov	x10, #0x7ffffffffffffff
0000000000020efc	cmp	x10, x8, asr #4
0000000000020f00	mov	x8, #0xfffffffffffffff
0000000000020f04	csel	x23, x9, x8, hi
0000000000020f08	mov	x0, x23
0000000000020f0c	mov	w1, #0x10
0000000000020f10	bl	0x55aec ; symbol stub for: _calloc
0000000000020f14	add	x8, x0, x26, lsl #4
0000000000020f18	add	x26, x0, x23, lsl #4
0000000000020f1c	stp	x25, x21, [x8]
0000000000020f20	add	x27, x8, #0x10
0000000000020f24	ldp	x1, x9, [x24, #0x120]
0000000000020f28	sub	x2, x9, x1
0000000000020f2c	sub	x23, x8, x2
0000000000020f30	cmp	x2, #0x1
0000000000020f34	b.lt	0x20f44
0000000000020f38	mov	x0, x23
0000000000020f3c	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000020f40	ldr	x1, [x22]
0000000000020f44	stp	x23, x27, [x24, #0x120]
0000000000020f48	str	x26, [x24, #0x130]
0000000000020f4c	cbz	x1, 0x20f58
0000000000020f50	mov	x0, x1
0000000000020f54	bl	0x55b7c ; symbol stub for: _free
0000000000020f58	mov	x0, x21
0000000000020f5c	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
0000000000020f60	mov	w0, #0x1
0000000000020f64	mov	w1, #0x28
0000000000020f68	bl	0x55aec ; symbol stub for: _calloc
0000000000020f6c	mov	x8, x24
0000000000020f70	ldr	x9, [x8, #0x18]!
0000000000020f74	sub	x10, x8, #0x8
0000000000020f78	stp	x25, x10, [x0, #0x10]
0000000000020f7c	stp	x9, x8, [x0]
0000000000020f80	str	x0, [x9, #0x8]
0000000000020f84	str	x0, [x8]
0000000000020f88	ldr	x9, [x8, #0x10]
0000000000020f8c	add	x9, x9, #0x1
0000000000020f90	str	x9, [x8, #0x10]
0000000000020f94	str	x0, [x0, #0x20]
0000000000020f98	stlr	x21, [x25]
0000000000020f9c	ldr	x9, [x8, #0x110]
0000000000020fa0	sub	x9, x9, #0x10
0000000000020fa4	str	x9, [x8, #0x110]
0000000000020fa8	ldr	x8, [x21, #0x8]
0000000000020fac	ldr	w9, [x8, #0x8]
0000000000020fb0	cmp	w9, #0x2
0000000000020fb4	b.ls	0x2102c
0000000000020fb8	ldr	x8, [x8, #0x20]
0000000000020fbc	str	x8, [sp, #0x28]
0000000000020fc0	str	x8, [x20, #0x8]
0000000000020fc4	ldr	x0, [x20, #0x10]
0000000000020fc8	str	x0, [x19]
0000000000020fcc	ldr	x8, [sp, #0x8]
0000000000020fd0	str	x8, [x24, #0x110]
0000000000020fd4	ldp	x29, x30, [sp, #0x80]
0000000000020fd8	ldp	x20, x19, [sp, #0x70]
0000000000020fdc	ldp	x22, x21, [sp, #0x60]
0000000000020fe0	ldp	x24, x23, [sp, #0x50]
0000000000020fe4	ldp	x26, x25, [sp, #0x40]
0000000000020fe8	ldp	x28, x27, [sp, #0x30]
0000000000020fec	add	sp, sp, #0x90
0000000000020ff0	ret
0000000000020ff4	ldr	x8, [x24, #0x118]
0000000000020ff8	add	x0, x8, #0x70
0000000000020ffc	mov	w1, #0x38
0000000000021000	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021004	mov	x19, x0
0000000000021008	adr	x8, #0x40388
000000000002100c	nop
0000000000021010	str	x8, [x19, #0x10]!
0000000000021014	stur	xzr, [x19, #-0x8]
0000000000021018	str	x19, [sp, #0x18]
000000000002101c	mov	x0, x19
0000000000021020	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
0000000000021024	mov	x0, x19
0000000000021028	bl	_ThrowException
000000000002102c	bl	_ThrowArrayIndexOutOfBoundsException
0000000000021030	mov	x0, x22
0000000000021034	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000021038	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002103c	str	xzr, [sp, #0x20]
0000000000021040	stlr	xzr, [x25]
0000000000021044	ldr	x8, [x24, #0x128]
0000000000021048	sub	x8, x8, #0x10
000000000002104c	str	x8, [x24, #0x128]
0000000000021050	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
0000000000021054	brk	#0x1
0000000000021058	mov	x19, x0
000000000002105c	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
0000000000021060	mov	x0, x19
0000000000021064	bl	0x558ac ; symbol stub for: __Unwind_Resume
_kfun:kotlin.collections.State.$OBJECT.<init>#internal:
0000000000021068	sub	sp, sp, #0x1b0
000000000002106c	stp	x24, x23, [sp, #0x170]
0000000000021070	stp	x22, x21, [sp, #0x180]
0000000000021074	stp	x20, x19, [sp, #0x190]
0000000000021078	stp	x29, x30, [sp, #0x1a0]
000000000002107c	add	x29, sp, #0x1a0
0000000000021080	mov	x19, x0
0000000000021084	movi.16b	v0, #0x0
0000000000021088	stp	q0, q0, [sp, #0x150]
000000000002108c	stp	q0, q0, [sp, #0x130]
0000000000021090	stp	q0, q0, [sp, #0x110]
0000000000021094	stp	q0, q0, [sp, #0xf0]
0000000000021098	stp	q0, q0, [sp, #0xd0]
000000000002109c	stp	q0, q0, [sp, #0xb0]
00000000000210a0	stp	q0, q0, [sp, #0x90]
00000000000210a4	stp	q0, q0, [sp, #0x70]
00000000000210a8	stp	q0, q0, [sp, #0x50]
00000000000210ac	stp	q0, q0, [sp, #0x30]
00000000000210b0	stp	q0, q0, [sp, #0x10]
00000000000210b4	str	q0, [sp]
00000000000210b8	mov	x8, sp
00000000000210bc	add	x20, x8, #0x168
00000000000210c0	adrp	x0, 89 ; 0x7a000
00000000000210c4	add	x0, x0, #0x4e0
00000000000210c8	ldr	x9, [x0]
00000000000210cc	blr	x9
00000000000210d0	ldr	x21, [x0]
00000000000210d4	ldr	x9, [x21, #0x110]
00000000000210d8	str	x8, [x21, #0x110]
00000000000210dc	mov	x8, #0x2e00000000
00000000000210e0	stp	x9, x8, [sp, #0x8]
00000000000210e4	adr	x8, #0x73425
00000000000210e8	nop
00000000000210ec	ldarb	w8, [x8]
00000000000210f0	tbz	w8, #0x0, 0x210f8
00000000000210f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000210f8	ldr	x8, [x21, #0x118]
00000000000210fc	add	x0, x8, #0x70
0000000000021100	mov	w1, #0x20
0000000000021104	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021108	adr	x22, #0x43eb8
000000000002110c	nop
0000000000021110	str	x22, [x0, #0x10]!
0000000000021114	stur	xzr, [x0, #-0x8]
0000000000021118	stp	x0, x0, [sp, #0x18]
000000000002111c	ldr	x8, [x21, #0x118]
0000000000021120	add	x0, x8, #0x70
0000000000021124	mov	w1, #0x20
0000000000021128	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002112c	str	x22, [x0, #0x10]!
0000000000021130	stur	xzr, [x0, #-0x8]
0000000000021134	stp	x0, x0, [sp, #0x28]
0000000000021138	ldr	x8, [x21, #0x118]
000000000002113c	add	x0, x8, #0x70
0000000000021140	mov	w1, #0x20
0000000000021144	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021148	str	x22, [x0, #0x10]!
000000000002114c	stur	xzr, [x0, #-0x8]
0000000000021150	stp	x0, x0, [sp, #0x38]
0000000000021154	ldr	x8, [x21, #0x118]
0000000000021158	add	x0, x8, #0x70
000000000002115c	mov	w1, #0x20
0000000000021160	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021164	str	x22, [x0, #0x10]!
0000000000021168	stur	xzr, [x0, #-0x8]
000000000002116c	stp	x0, x0, [sp, #0x48]
0000000000021170	ldr	x8, [x21, #0x118]
0000000000021174	add	x0, x8, #0x70
0000000000021178	mov	w1, #0x38
000000000002117c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021180	adr	x22, #0x3fc20
0000000000021184	nop
0000000000021188	stp	x22, xzr, [x0, #0x10]!
000000000002118c	stur	xzr, [x0, #-0x8]
0000000000021190	mov	w23, #0x4
0000000000021194	str	w23, [x0, #0x8]
0000000000021198	stp	x0, x0, [sp, #0x58]
000000000002119c	ldr	x8, [sp, #0x20]
00000000000211a0	stp	x0, x8, [sp, #0x68]
00000000000211a4	ldr	xzr, [x0]
00000000000211a8	str	x8, [x0, #0x10]
00000000000211ac	ldr	x8, [sp, #0x60]
00000000000211b0	ldr	x9, [sp, #0x30]
00000000000211b4	stp	x8, x9, [sp, #0x78]
00000000000211b8	ldr	xzr, [x8]
00000000000211bc	str	x9, [x8, #0x18]
00000000000211c0	ldr	x8, [sp, #0x60]
00000000000211c4	ldr	x9, [sp, #0x40]
00000000000211c8	stp	x8, x9, [sp, #0x88]
00000000000211cc	ldr	xzr, [x8]
00000000000211d0	str	x9, [x8, #0x20]
00000000000211d4	ldr	x8, [sp, #0x60]
00000000000211d8	ldr	x9, [sp, #0x50]
00000000000211dc	stp	x8, x9, [sp, #0x98]
00000000000211e0	ldr	xzr, [x8]
00000000000211e4	str	x9, [x8, #0x28]
00000000000211e8	ldr	x8, [sp, #0x60]
00000000000211ec	str	x8, [sp, #0xa8]
00000000000211f0	str	x8, [x19, #0x8]
00000000000211f4	ldr	x9, [x8, #0x28]
00000000000211f8	str	x9, [sp, #0xb0]
00000000000211fc	adr	x10, #0x4eb24
0000000000021200	nop
0000000000021204	str	x10, [x9, #0x8]
0000000000021208	str	wzr, [x9, #0x10]
000000000002120c	ldr	x9, [x8, #0x20]
0000000000021210	str	x9, [sp, #0xb8]
0000000000021214	adr	x10, #0x4eb2c
0000000000021218	nop
000000000002121c	str	x10, [x9, #0x8]
0000000000021220	mov	w10, #0x1
0000000000021224	str	w10, [x9, #0x10]
0000000000021228	ldr	x9, [x8, #0x10]
000000000002122c	str	x9, [sp, #0xc0]
0000000000021230	adr	x10, #0x4eb30
0000000000021234	nop
0000000000021238	str	x10, [x9, #0x8]
000000000002123c	mov	w10, #0x2
0000000000021240	str	w10, [x9, #0x10]
0000000000021244	ldr	x8, [x8, #0x18]
0000000000021248	str	x8, [sp, #0xc8]
000000000002124c	adr	x9, #0x4eb34
0000000000021250	nop
0000000000021254	str	x9, [x8, #0x8]
0000000000021258	mov	w9, #0x3
000000000002125c	str	w9, [x8, #0x10]
0000000000021260	ldr	x8, [x19, #0x8]
0000000000021264	ldr	x9, [x8, #0x28]
0000000000021268	stp	x9, x9, [sp, #0xd0]
000000000002126c	ldr	x9, [x8, #0x20]
0000000000021270	stp	x9, x9, [sp, #0xe0]
0000000000021274	ldr	x9, [x8, #0x10]
0000000000021278	stp	x9, x9, [sp, #0xf0]
000000000002127c	ldr	x8, [x8, #0x18]
0000000000021280	stp	x8, x8, [sp, #0x100]
0000000000021284	ldr	x8, [x21, #0x118]
0000000000021288	add	x0, x8, #0x70
000000000002128c	mov	w1, #0x38
0000000000021290	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021294	stp	x22, xzr, [x0, #0x10]!
0000000000021298	stur	xzr, [x0, #-0x8]
000000000002129c	str	w23, [x0, #0x8]
00000000000212a0	stp	x0, x0, [sp, #0x110]
00000000000212a4	ldr	x8, [sp, #0xd8]
00000000000212a8	stp	x0, x8, [sp, #0x120]
00000000000212ac	ldr	xzr, [x0]
00000000000212b0	str	x8, [x0, #0x10]
00000000000212b4	ldr	x8, [sp, #0x118]
00000000000212b8	ldr	x9, [sp, #0xe8]
00000000000212bc	stp	x8, x9, [sp, #0x130]
00000000000212c0	ldr	xzr, [x8]
00000000000212c4	str	x9, [x8, #0x18]
00000000000212c8	ldr	x8, [sp, #0x118]
00000000000212cc	ldr	x9, [sp, #0xf8]
00000000000212d0	stp	x8, x9, [sp, #0x140]
00000000000212d4	ldr	xzr, [x8]
00000000000212d8	str	x9, [x8, #0x20]
00000000000212dc	ldr	x8, [sp, #0x118]
00000000000212e0	ldr	x9, [sp, #0x108]
00000000000212e4	stp	x8, x9, [sp, #0x150]
00000000000212e8	ldr	xzr, [x8]
00000000000212ec	str	x9, [x8, #0x28]
00000000000212f0	ldr	x0, [sp, #0x118]
00000000000212f4	str	x0, [sp, #0x160]
00000000000212f8	mov	x1, x20
00000000000212fc	bl	"_kfun:kotlin.enums#enumEntries(kotlin.Array<0:0>){0§<kotlin.Enum<0:0>>}kotlin.enums.EnumEntries<0:0>"
0000000000021300	str	x0, [x19, #0x10]
0000000000021304	ldr	x8, [sp, #0x8]
0000000000021308	str	x8, [x21, #0x110]
000000000002130c	ldp	x29, x30, [sp, #0x1a0]
0000000000021310	ldp	x20, x19, [sp, #0x190]
0000000000021314	ldp	x22, x21, [sp, #0x180]
0000000000021318	ldp	x24, x23, [sp, #0x170]
000000000002131c	add	sp, sp, #0x1b0
0000000000021320	ret
_kfun:kotlin.collections.AbstractList#iterator(){}kotlin.collections.Iterator<1:0>:
0000000000021324	stp	x20, x19, [sp, #-0x20]!
0000000000021328	stp	x29, x30, [sp, #0x10]
000000000002132c	add	x29, sp, #0x10
0000000000021330	mov	x19, x1
0000000000021334	mov	x20, x0
0000000000021338	adr	x8, #0x731d1
000000000002133c	nop
0000000000021340	ldarb	w8, [x8]
0000000000021344	tbz	w8, #0x0, 0x2134c
0000000000021348	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002134c	adrp	x0, 89 ; 0x7a000
0000000000021350	add	x0, x0, #0x4e0
0000000000021354	ldr	x8, [x0]
0000000000021358	blr	x8
000000000002135c	ldr	x8, [x0]
0000000000021360	ldr	x8, [x8, #0x118]
0000000000021364	add	x0, x8, #0x70
0000000000021368	mov	w1, #0x20
000000000002136c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021370	adr	x8, #0x43ed0
0000000000021374	nop
0000000000021378	str	x8, [x0, #0x10]!
000000000002137c	stur	xzr, [x0, #-0x8]
0000000000021380	str	x0, [x19]
0000000000021384	str	x20, [x0, #0x8]
0000000000021388	str	x0, [x19]
000000000002138c	ldp	x29, x30, [sp, #0x10]
0000000000021390	ldp	x20, x19, [sp], #0x20
0000000000021394	ret
_kfun:kotlin.collections.AbstractList#indexOf(1:0){}kotlin.Int:
0000000000021398	sub	sp, sp, #0x80
000000000002139c	stp	x26, x25, [sp, #0x30]
00000000000213a0	stp	x24, x23, [sp, #0x40]
00000000000213a4	stp	x22, x21, [sp, #0x50]
00000000000213a8	stp	x20, x19, [sp, #0x60]
00000000000213ac	stp	x29, x30, [sp, #0x70]
00000000000213b0	add	x29, sp, #0x70
00000000000213b4	mov	x19, x1
00000000000213b8	mov	x21, x0
00000000000213bc	movi.16b	v0, #0x0
00000000000213c0	stp	q0, q0, [sp]
00000000000213c4	str	xzr, [sp, #0x20]
00000000000213c8	mov	x20, sp
00000000000213cc	add	x22, x20, #0x18
00000000000213d0	adrp	x0, 89 ; 0x7a000
00000000000213d4	add	x0, x0, #0x4e0
00000000000213d8	ldr	x8, [x0]
00000000000213dc	blr	x8
00000000000213e0	ldr	x23, [x0]
00000000000213e4	ldr	x8, [x23, #0x110]
00000000000213e8	str	x20, [x23, #0x110]
00000000000213ec	mov	x9, #0x500000000
00000000000213f0	stp	x8, x9, [sp, #0x8]
00000000000213f4	adr	x24, #0x73115
00000000000213f8	nop
00000000000213fc	ldarb	w8, [x24]
0000000000021400	tbz	w8, #0x0, 0x21408
0000000000021404	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021408	add	x20, x20, #0x20
000000000002140c	ldr	x8, [x21]
0000000000021410	and	x8, x8, #0xfffffffffffffffc
0000000000021414	ldr	x8, [x8]
0000000000021418	ldr	w9, [x8, #0x3c]
000000000002141c	ldr	x8, [x8, #0x40]
0000000000021420	tbnz	w9, #0x1f, 0x21430
0000000000021424	mov	w10, #0x2b
0000000000021428	and	x9, x9, x10
000000000002142c	b	0x214b4
0000000000021430	neg	w10, w9
0000000000021434	mvn	w9, w9
0000000000021438	cmp	w10, #0x9
000000000002143c	b.ge	0x21474
0000000000021440	cmp	w10, #0x2
0000000000021444	b.lt	0x214a8
0000000000021448	mov	x10, #0x0
000000000002144c	mov	x11, x8
0000000000021450	ldr	w12, [x11]
0000000000021454	cmp	w12, #0x2a
0000000000021458	b.gt	0x214b0
000000000002145c	add	x10, x10, #0x1
0000000000021460	add	x11, x11, #0x10
0000000000021464	cmp	x9, x10
0000000000021468	b.ne	0x21450
000000000002146c	mov	x10, x9
0000000000021470	b	0x214b0
0000000000021474	mov	w10, #0x0
0000000000021478	add	w11, w9, w10
000000000002147c	cmp	w11, #0x0
0000000000021480	cinc	w11, w11, lt
0000000000021484	asr	w11, w11, #1
0000000000021488	sbfiz	x12, x11, #4, #32
000000000002148c	ldr	w12, [x8, x12]
0000000000021490	cmp	w12, #0x2b
0000000000021494	csinc	w10, w10, w11, ge
0000000000021498	csel	w9, w9, w11, lt
000000000002149c	cmp	w10, w9
00000000000214a0	b.lt	0x21478
00000000000214a4	b	0x214b0
00000000000214a8	mov	w10, #0x0
00000000000214ac	b	0x214b0
00000000000214b0	sxtw	x9, w10
00000000000214b4	add	x8, x8, x9, lsl #4
00000000000214b8	ldr	x8, [x8, #0x8]
00000000000214bc	ldr	x8, [x8, #0x30]
00000000000214c0	mov	x0, x21
00000000000214c4	mov	x1, x22
00000000000214c8	blr	x8
00000000000214cc	mov	x22, x0
00000000000214d0	mov	w21, #0x0
00000000000214d4	mov	w25, #0xa0
00000000000214d8	b	0x214e4
00000000000214dc	cbz	x19, 0x216a8
00000000000214e0	add	w21, w21, #0x1
00000000000214e4	ldr	x8, [x22]
00000000000214e8	and	x8, x8, #0xfffffffffffffffc
00000000000214ec	ldr	x8, [x8]
00000000000214f0	ldr	w9, [x8, #0x3c]
00000000000214f4	ldr	x8, [x8, #0x40]
00000000000214f8	tbnz	w9, #0x1f, 0x2151c
00000000000214fc	and	x9, x9, x25
0000000000021500	add	x8, x8, x9, lsl #4
0000000000021504	ldr	x8, [x8, #0x8]
0000000000021508	ldr	x8, [x8]
000000000002150c	mov	x0, x22
0000000000021510	blr	x8
0000000000021514	tbnz	w0, #0x0, 0x215b8
0000000000021518	b	0x216a4
000000000002151c	neg	w10, w9
0000000000021520	mvn	w9, w9
0000000000021524	cmp	w10, #0x9
0000000000021528	b.ge	0x21560
000000000002152c	cmp	w10, #0x2
0000000000021530	b.lt	0x21594
0000000000021534	mov	x10, #0x0
0000000000021538	mov	x11, x8
000000000002153c	ldr	w12, [x11]
0000000000021540	cmp	w12, #0x9f
0000000000021544	b.gt	0x2159c
0000000000021548	add	x10, x10, #0x1
000000000002154c	add	x11, x11, #0x10
0000000000021550	cmp	x9, x10
0000000000021554	b.ne	0x2153c
0000000000021558	mov	x10, x9
000000000002155c	b	0x2159c
0000000000021560	mov	w10, #0x0
0000000000021564	add	w11, w9, w10
0000000000021568	cmp	w11, #0x0
000000000002156c	cinc	w11, w11, lt
0000000000021570	asr	w11, w11, #1
0000000000021574	sbfiz	x12, x11, #4, #32
0000000000021578	ldr	w12, [x8, x12]
000000000002157c	cmp	w12, #0xa0
0000000000021580	csinc	w10, w10, w11, ge
0000000000021584	csel	w9, w9, w11, lt
0000000000021588	cmp	w10, w9
000000000002158c	b.lt	0x21564
0000000000021590	b	0x2159c
0000000000021594	mov	w10, #0x0
0000000000021598	b	0x2159c
000000000002159c	sxtw	x9, w10
00000000000215a0	add	x8, x8, x9, lsl #4
00000000000215a4	ldr	x8, [x8, #0x8]
00000000000215a8	ldr	x8, [x8]
00000000000215ac	mov	x0, x22
00000000000215b0	blr	x8
00000000000215b4	tbz	w0, #0x0, 0x216a4
00000000000215b8	ldarb	w8, [x24]
00000000000215bc	tbz	w8, #0x0, 0x215c4
00000000000215c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000215c4	ldr	x8, [x22]
00000000000215c8	and	x8, x8, #0xfffffffffffffffc
00000000000215cc	ldr	x8, [x8]
00000000000215d0	ldr	w9, [x8, #0x3c]
00000000000215d4	ldr	x8, [x8, #0x40]
00000000000215d8	tbnz	w9, #0x1f, 0x215e4
00000000000215dc	and	x9, x9, x25
00000000000215e0	b	0x21668
00000000000215e4	neg	w10, w9
00000000000215e8	mvn	w9, w9
00000000000215ec	cmp	w10, #0x9
00000000000215f0	b.ge	0x21628
00000000000215f4	cmp	w10, #0x2
00000000000215f8	b.lt	0x2165c
00000000000215fc	mov	x10, #0x0
0000000000021600	mov	x11, x8
0000000000021604	ldr	w12, [x11]
0000000000021608	cmp	w12, #0x9f
000000000002160c	b.gt	0x21664
0000000000021610	add	x10, x10, #0x1
0000000000021614	add	x11, x11, #0x10
0000000000021618	cmp	x9, x10
000000000002161c	b.ne	0x21604
0000000000021620	mov	x10, x9
0000000000021624	b	0x21664
0000000000021628	mov	w10, #0x0
000000000002162c	add	w11, w9, w10
0000000000021630	cmp	w11, #0x0
0000000000021634	cinc	w11, w11, lt
0000000000021638	asr	w11, w11, #1
000000000002163c	sbfiz	x12, x11, #4, #32
0000000000021640	ldr	w12, [x8, x12]
0000000000021644	cmp	w12, #0xa0
0000000000021648	csinc	w10, w10, w11, ge
000000000002164c	csel	w9, w9, w11, lt
0000000000021650	cmp	w10, w9
0000000000021654	b.lt	0x2162c
0000000000021658	b	0x21664
000000000002165c	mov	w10, #0x0
0000000000021660	b	0x21664
0000000000021664	sxtw	x9, w10
0000000000021668	add	x8, x8, x9, lsl #4
000000000002166c	ldr	x8, [x8, #0x8]
0000000000021670	ldr	x8, [x8, #0x8]
0000000000021674	mov	x0, x22
0000000000021678	mov	x1, x20
000000000002167c	blr	x8
0000000000021680	cbz	x0, 0x214dc
0000000000021684	ldr	x8, [x0]
0000000000021688	and	x8, x8, #0xfffffffffffffffc
000000000002168c	ldr	x8, [x8]
0000000000021690	ldr	x8, [x8, #0x70]
0000000000021694	mov	x1, x19
0000000000021698	blr	x8
000000000002169c	tbz	w0, #0x0, 0x214e0
00000000000216a0	b	0x216a8
00000000000216a4	mov	w21, #-0x1
00000000000216a8	ldr	x8, [sp, #0x8]
00000000000216ac	str	x8, [x23, #0x110]
00000000000216b0	mov	x0, x21
00000000000216b4	ldp	x29, x30, [sp, #0x70]
00000000000216b8	ldp	x20, x19, [sp, #0x60]
00000000000216bc	ldp	x22, x21, [sp, #0x50]
00000000000216c0	ldp	x24, x23, [sp, #0x40]
00000000000216c4	ldp	x26, x25, [sp, #0x30]
00000000000216c8	add	sp, sp, #0x80
00000000000216cc	ret
_kfun:kotlin.collections.AbstractList#lastIndexOf(1:0){}kotlin.Int:
00000000000216d0	sub	sp, sp, #0x70
00000000000216d4	stp	x24, x23, [sp, #0x30]
00000000000216d8	stp	x22, x21, [sp, #0x40]
00000000000216dc	stp	x20, x19, [sp, #0x50]
00000000000216e0	stp	x29, x30, [sp, #0x60]
00000000000216e4	add	x29, sp, #0x60
00000000000216e8	mov	x19, x1
00000000000216ec	mov	x21, x0
00000000000216f0	movi.16b	v0, #0x0
00000000000216f4	stp	q0, q0, [sp]
00000000000216f8	str	xzr, [sp, #0x20]
00000000000216fc	mov	x20, sp
0000000000021700	adrp	x0, 89 ; 0x7a000
0000000000021704	add	x0, x0, #0x4e0
0000000000021708	ldr	x8, [x0]
000000000002170c	blr	x8
0000000000021710	ldr	x23, [x0]
0000000000021714	ldr	x8, [x23, #0x110]
0000000000021718	str	x20, [x23, #0x110]
000000000002171c	mov	x9, #0x500000000
0000000000021720	stp	x8, x9, [sp, #0x8]
0000000000021724	adr	x24, #0x72de5
0000000000021728	nop
000000000002172c	ldarb	w8, [x24]
0000000000021730	tbz	w8, #0x0, 0x21738
0000000000021734	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021738	add	x22, x20, #0x18
000000000002173c	ldr	x8, [x21]
0000000000021740	and	x8, x8, #0xfffffffffffffffc
0000000000021744	ldr	x8, [x8]
0000000000021748	ldr	w9, [x8, #0x3c]
000000000002174c	ldr	x8, [x8, #0x40]
0000000000021750	tbnz	w9, #0x1f, 0x21760
0000000000021754	mov	w10, #0x2b
0000000000021758	and	x9, x9, x10
000000000002175c	b	0x217e4
0000000000021760	neg	w10, w9
0000000000021764	mvn	w9, w9
0000000000021768	cmp	w10, #0x9
000000000002176c	b.ge	0x217a4
0000000000021770	cmp	w10, #0x2
0000000000021774	b.lt	0x217d8
0000000000021778	mov	x10, #0x0
000000000002177c	mov	x11, x8
0000000000021780	ldr	w12, [x11]
0000000000021784	cmp	w12, #0x2a
0000000000021788	b.gt	0x217e0
000000000002178c	add	x10, x10, #0x1
0000000000021790	add	x11, x11, #0x10
0000000000021794	cmp	x9, x10
0000000000021798	b.ne	0x21780
000000000002179c	mov	x10, x9
00000000000217a0	b	0x217e0
00000000000217a4	mov	w10, #0x0
00000000000217a8	add	w11, w9, w10
00000000000217ac	cmp	w11, #0x0
00000000000217b0	cinc	w11, w11, lt
00000000000217b4	asr	w11, w11, #1
00000000000217b8	sbfiz	x12, x11, #4, #32
00000000000217bc	ldr	w12, [x8, x12]
00000000000217c0	cmp	w12, #0x2b
00000000000217c4	csinc	w10, w10, w11, ge
00000000000217c8	csel	w9, w9, w11, lt
00000000000217cc	cmp	w10, w9
00000000000217d0	b.lt	0x217a8
00000000000217d4	b	0x217e0
00000000000217d8	mov	w10, #0x0
00000000000217dc	b	0x217e0
00000000000217e0	sxtw	x9, w10
00000000000217e4	add	x20, x20, #0x20
00000000000217e8	add	x8, x8, x9, lsl #4
00000000000217ec	ldr	x8, [x8, #0x8]
00000000000217f0	ldr	x8, [x8]
00000000000217f4	mov	x0, x21
00000000000217f8	blr	x8
00000000000217fc	mov	x1, x0
0000000000021800	ldr	x8, [x21]
0000000000021804	and	x8, x8, #0xfffffffffffffffc
0000000000021808	ldr	x8, [x8]
000000000002180c	ldr	w9, [x8, #0x3c]
0000000000021810	ldr	x8, [x8, #0x40]
0000000000021814	tbnz	w9, #0x1f, 0x21824
0000000000021818	mov	w10, #0x2b
000000000002181c	and	x9, x9, x10
0000000000021820	b	0x218a8
0000000000021824	neg	w10, w9
0000000000021828	mvn	w9, w9
000000000002182c	cmp	w10, #0x9
0000000000021830	b.ge	0x21868
0000000000021834	cmp	w10, #0x2
0000000000021838	b.lt	0x2189c
000000000002183c	mov	x10, #0x0
0000000000021840	mov	x11, x8
0000000000021844	ldr	w12, [x11]
0000000000021848	cmp	w12, #0x2a
000000000002184c	b.gt	0x218a4
0000000000021850	add	x10, x10, #0x1
0000000000021854	add	x11, x11, #0x10
0000000000021858	cmp	x9, x10
000000000002185c	b.ne	0x21844
0000000000021860	mov	x10, x9
0000000000021864	b	0x218a4
0000000000021868	mov	w10, #0x0
000000000002186c	add	w11, w9, w10
0000000000021870	cmp	w11, #0x0
0000000000021874	cinc	w11, w11, lt
0000000000021878	asr	w11, w11, #1
000000000002187c	sbfiz	x12, x11, #4, #32
0000000000021880	ldr	w12, [x8, x12]
0000000000021884	cmp	w12, #0x2b
0000000000021888	csinc	w10, w10, w11, ge
000000000002188c	csel	w9, w9, w11, lt
0000000000021890	cmp	w10, w9
0000000000021894	b.lt	0x2186c
0000000000021898	b	0x218a4
000000000002189c	mov	w10, #0x0
00000000000218a0	b	0x218a4
00000000000218a4	sxtw	x9, w10
00000000000218a8	add	x8, x8, x9, lsl #4
00000000000218ac	ldr	x8, [x8, #0x8]
00000000000218b0	ldr	x8, [x8, #0x48]
00000000000218b4	mov	x0, x21
00000000000218b8	mov	x2, x22
00000000000218bc	blr	x8
00000000000218c0	mov	x21, x0
00000000000218c4	mov	w22, #0x1a
00000000000218c8	b	0x218d0
00000000000218cc	cbz	x19, 0x21a8c
00000000000218d0	ldr	x8, [x21]
00000000000218d4	and	x8, x8, #0xfffffffffffffffc
00000000000218d8	ldr	x8, [x8]
00000000000218dc	ldr	w9, [x8, #0x3c]
00000000000218e0	ldr	x8, [x8, #0x40]
00000000000218e4	tbnz	w9, #0x1f, 0x21908
00000000000218e8	and	x9, x9, x22
00000000000218ec	add	x8, x8, x9, lsl #4
00000000000218f0	ldr	x8, [x8, #0x8]
00000000000218f4	ldr	x8, [x8, #0x8]
00000000000218f8	mov	x0, x21
00000000000218fc	blr	x8
0000000000021900	tbnz	w0, #0x0, 0x219a4
0000000000021904	b	0x21ab0
0000000000021908	neg	w10, w9
000000000002190c	mvn	w9, w9
0000000000021910	cmp	w10, #0x9
0000000000021914	b.ge	0x2194c
0000000000021918	cmp	w10, #0x2
000000000002191c	b.lt	0x21980
0000000000021920	mov	x10, #0x0
0000000000021924	mov	x11, x8
0000000000021928	ldr	w12, [x11]
000000000002192c	cmp	w12, #0x19
0000000000021930	b.gt	0x21988
0000000000021934	add	x10, x10, #0x1
0000000000021938	add	x11, x11, #0x10
000000000002193c	cmp	x9, x10
0000000000021940	b.ne	0x21928
0000000000021944	mov	x10, x9
0000000000021948	b	0x21988
000000000002194c	mov	w10, #0x0
0000000000021950	add	w11, w9, w10
0000000000021954	cmp	w11, #0x0
0000000000021958	cinc	w11, w11, lt
000000000002195c	asr	w11, w11, #1
0000000000021960	sbfiz	x12, x11, #4, #32
0000000000021964	ldr	w12, [x8, x12]
0000000000021968	cmp	w12, #0x1a
000000000002196c	csinc	w10, w10, w11, ge
0000000000021970	csel	w9, w9, w11, lt
0000000000021974	cmp	w10, w9
0000000000021978	b.lt	0x21950
000000000002197c	b	0x21988
0000000000021980	mov	w10, #0x0
0000000000021984	b	0x21988
0000000000021988	sxtw	x9, w10
000000000002198c	add	x8, x8, x9, lsl #4
0000000000021990	ldr	x8, [x8, #0x8]
0000000000021994	ldr	x8, [x8, #0x8]
0000000000021998	mov	x0, x21
000000000002199c	blr	x8
00000000000219a0	tbz	w0, #0x0, 0x21ab0
00000000000219a4	ldarb	w8, [x24]
00000000000219a8	tbz	w8, #0x0, 0x219b0
00000000000219ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000219b0	ldr	x8, [x21]
00000000000219b4	and	x8, x8, #0xfffffffffffffffc
00000000000219b8	ldr	x8, [x8]
00000000000219bc	ldr	w9, [x8, #0x3c]
00000000000219c0	ldr	x8, [x8, #0x40]
00000000000219c4	tbnz	w9, #0x1f, 0x219d0
00000000000219c8	and	x9, x9, x22
00000000000219cc	b	0x21a54
00000000000219d0	neg	w10, w9
00000000000219d4	mvn	w9, w9
00000000000219d8	cmp	w10, #0x9
00000000000219dc	b.ge	0x21a14
00000000000219e0	cmp	w10, #0x2
00000000000219e4	b.lt	0x21a48
00000000000219e8	mov	x10, #0x0
00000000000219ec	mov	x11, x8
00000000000219f0	ldr	w12, [x11]
00000000000219f4	cmp	w12, #0x19
00000000000219f8	b.gt	0x21a50
00000000000219fc	add	x10, x10, #0x1
0000000000021a00	add	x11, x11, #0x10
0000000000021a04	cmp	x9, x10
0000000000021a08	b.ne	0x219f0
0000000000021a0c	mov	x10, x9
0000000000021a10	b	0x21a50
0000000000021a14	mov	w10, #0x0
0000000000021a18	add	w11, w9, w10
0000000000021a1c	cmp	w11, #0x0
0000000000021a20	cinc	w11, w11, lt
0000000000021a24	asr	w11, w11, #1
0000000000021a28	sbfiz	x12, x11, #4, #32
0000000000021a2c	ldr	w12, [x8, x12]
0000000000021a30	cmp	w12, #0x1a
0000000000021a34	csinc	w10, w10, w11, ge
0000000000021a38	csel	w9, w9, w11, lt
0000000000021a3c	cmp	w10, w9
0000000000021a40	b.lt	0x21a18
0000000000021a44	b	0x21a50
0000000000021a48	mov	w10, #0x0
0000000000021a4c	b	0x21a50
0000000000021a50	sxtw	x9, w10
0000000000021a54	add	x8, x8, x9, lsl #4
0000000000021a58	ldr	x8, [x8, #0x8]
0000000000021a5c	ldr	x8, [x8, #0x20]
0000000000021a60	mov	x0, x21
0000000000021a64	mov	x1, x20
0000000000021a68	blr	x8
0000000000021a6c	cbz	x0, 0x218cc
0000000000021a70	ldr	x8, [x0]
0000000000021a74	and	x8, x8, #0xfffffffffffffffc
0000000000021a78	ldr	x8, [x8]
0000000000021a7c	ldr	x8, [x8, #0x70]
0000000000021a80	mov	x1, x19
0000000000021a84	blr	x8
0000000000021a88	tbz	w0, #0x0, 0x218d0
0000000000021a8c	ldr	x8, [x21]
0000000000021a90	and	x8, x8, #0xfffffffffffffffc
0000000000021a94	ldr	x8, [x8]
0000000000021a98	ldr	w9, [x8, #0x3c]
0000000000021a9c	ldr	x8, [x8, #0x40]
0000000000021aa0	tbnz	w9, #0x1f, 0x21ab8
0000000000021aa4	mov	w10, #0x1a
0000000000021aa8	and	x9, x9, x10
0000000000021aac	b	0x21b3c
0000000000021ab0	mov	w0, #-0x1
0000000000021ab4	b	0x21b50
0000000000021ab8	neg	w10, w9
0000000000021abc	mvn	w9, w9
0000000000021ac0	cmp	w10, #0x9
0000000000021ac4	b.ge	0x21afc
0000000000021ac8	cmp	w10, #0x2
0000000000021acc	b.lt	0x21b30
0000000000021ad0	mov	x10, #0x0
0000000000021ad4	mov	x11, x8
0000000000021ad8	ldr	w12, [x11]
0000000000021adc	cmp	w12, #0x19
0000000000021ae0	b.gt	0x21b38
0000000000021ae4	add	x10, x10, #0x1
0000000000021ae8	add	x11, x11, #0x10
0000000000021aec	cmp	x9, x10
0000000000021af0	b.ne	0x21ad8
0000000000021af4	mov	x10, x9
0000000000021af8	b	0x21b38
0000000000021afc	mov	w10, #0x0
0000000000021b00	add	w11, w9, w10
0000000000021b04	cmp	w11, #0x0
0000000000021b08	cinc	w11, w11, lt
0000000000021b0c	asr	w11, w11, #1
0000000000021b10	sbfiz	x12, x11, #4, #32
0000000000021b14	ldr	w12, [x8, x12]
0000000000021b18	cmp	w12, #0x1a
0000000000021b1c	csinc	w10, w10, w11, ge
0000000000021b20	csel	w9, w9, w11, lt
0000000000021b24	cmp	w10, w9
0000000000021b28	b.lt	0x21b00
0000000000021b2c	b	0x21b38
0000000000021b30	mov	w10, #0x0
0000000000021b34	b	0x21b38
0000000000021b38	sxtw	x9, w10
0000000000021b3c	add	x8, x8, x9, lsl #4
0000000000021b40	ldr	x8, [x8, #0x8]
0000000000021b44	ldr	x8, [x8, #0x18]
0000000000021b48	mov	x0, x21
0000000000021b4c	blr	x8
0000000000021b50	ldr	x8, [sp, #0x8]
0000000000021b54	str	x8, [x23, #0x110]
0000000000021b58	ldp	x29, x30, [sp, #0x60]
0000000000021b5c	ldp	x20, x19, [sp, #0x50]
0000000000021b60	ldp	x22, x21, [sp, #0x40]
0000000000021b64	ldp	x24, x23, [sp, #0x30]
0000000000021b68	add	sp, sp, #0x70
0000000000021b6c	ret
_kfun:kotlin.collections.AbstractList#listIterator(){}kotlin.collections.ListIterator<1:0>:
0000000000021b70	stp	x22, x21, [sp, #-0x30]!
0000000000021b74	stp	x20, x19, [sp, #0x10]
0000000000021b78	stp	x29, x30, [sp, #0x20]
0000000000021b7c	add	x29, sp, #0x20
0000000000021b80	mov	x19, x1
0000000000021b84	mov	x20, x0
0000000000021b88	adr	x8, #0x72981
0000000000021b8c	nop
0000000000021b90	ldarb	w8, [x8]
0000000000021b94	tbz	w8, #0x0, 0x21b9c
0000000000021b98	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021b9c	adrp	x0, 89 ; 0x7a000
0000000000021ba0	add	x0, x0, #0x4e0
0000000000021ba4	ldr	x8, [x0]
0000000000021ba8	blr	x8
0000000000021bac	ldr	x8, [x0]
0000000000021bb0	ldr	x8, [x8, #0x118]
0000000000021bb4	add	x0, x8, #0x70
0000000000021bb8	mov	w1, #0x28
0000000000021bbc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021bc0	mov	x21, x0
0000000000021bc4	adr	x8, #0x4371c
0000000000021bc8	nop
0000000000021bcc	str	x8, [x21, #0x10]!
0000000000021bd0	stur	xzr, [x21, #-0x8]
0000000000021bd4	str	x21, [x19]
0000000000021bd8	str	x20, [x21, #0x18]
0000000000021bdc	str	x20, [x21, #0x8]
0000000000021be0	ldr	x8, [x20]
0000000000021be4	and	x8, x8, #0xfffffffffffffffc
0000000000021be8	ldr	x8, [x8]
0000000000021bec	ldr	x8, [x8, #0x88]
0000000000021bf0	mov	x0, x20
0000000000021bf4	blr	x8
0000000000021bf8	mov	x1, x0
0000000000021bfc	mov	w0, #0x0
0000000000021c00	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
0000000000021c04	str	wzr, [x21, #0x10]
0000000000021c08	str	x21, [x19]
0000000000021c0c	mov	x0, x21
0000000000021c10	ldp	x29, x30, [sp, #0x20]
0000000000021c14	ldp	x20, x19, [sp, #0x10]
0000000000021c18	ldp	x22, x21, [sp], #0x30
0000000000021c1c	ret
_kfun:kotlin.collections.AbstractList#listIterator(kotlin.Int){}kotlin.collections.ListIterator<1:0>:
0000000000021c20	stp	x22, x21, [sp, #-0x30]!
0000000000021c24	stp	x20, x19, [sp, #0x10]
0000000000021c28	stp	x29, x30, [sp, #0x20]
0000000000021c2c	add	x29, sp, #0x20
0000000000021c30	mov	x19, x2
0000000000021c34	mov	x20, x1
0000000000021c38	mov	x21, x0
0000000000021c3c	adr	x8, #0x728cd
0000000000021c40	nop
0000000000021c44	ldarb	w8, [x8]
0000000000021c48	tbz	w8, #0x0, 0x21c50
0000000000021c4c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021c50	adrp	x0, 89 ; 0x7a000
0000000000021c54	add	x0, x0, #0x4e0
0000000000021c58	ldr	x8, [x0]
0000000000021c5c	blr	x8
0000000000021c60	ldr	x8, [x0]
0000000000021c64	ldr	x8, [x8, #0x118]
0000000000021c68	add	x0, x8, #0x70
0000000000021c6c	mov	w1, #0x28
0000000000021c70	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021c74	mov	x22, x0
0000000000021c78	adr	x8, #0x43668
0000000000021c7c	nop
0000000000021c80	str	x8, [x22, #0x10]!
0000000000021c84	stur	xzr, [x22, #-0x8]
0000000000021c88	str	x22, [x19]
0000000000021c8c	str	x21, [x22, #0x18]
0000000000021c90	str	x21, [x22, #0x8]
0000000000021c94	ldr	x8, [x21]
0000000000021c98	and	x8, x8, #0xfffffffffffffffc
0000000000021c9c	ldr	x8, [x8]
0000000000021ca0	ldr	x8, [x8, #0x88]
0000000000021ca4	mov	x0, x21
0000000000021ca8	blr	x8
0000000000021cac	mov	x1, x0
0000000000021cb0	mov	x0, x20
0000000000021cb4	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}"
0000000000021cb8	str	w20, [x22, #0x10]
0000000000021cbc	str	x22, [x19]
0000000000021cc0	mov	x0, x22
0000000000021cc4	ldp	x29, x30, [sp, #0x20]
0000000000021cc8	ldp	x20, x19, [sp, #0x10]
0000000000021ccc	ldp	x22, x21, [sp], #0x30
0000000000021cd0	ret
_kfun:kotlin.collections.AbstractList#subList(kotlin.Int;kotlin.Int){}kotlin.collections.List<1:0>:
0000000000021cd4	stp	x24, x23, [sp, #-0x40]!
0000000000021cd8	stp	x22, x21, [sp, #0x10]
0000000000021cdc	stp	x20, x19, [sp, #0x20]
0000000000021ce0	stp	x29, x30, [sp, #0x30]
0000000000021ce4	add	x29, sp, #0x30
0000000000021ce8	mov	x19, x3
0000000000021cec	mov	x20, x2
0000000000021cf0	mov	x21, x1
0000000000021cf4	mov	x22, x0
0000000000021cf8	adr	x8, #0x72811
0000000000021cfc	nop
0000000000021d00	ldarb	w8, [x8]
0000000000021d04	tbz	w8, #0x0, 0x21d0c
0000000000021d08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021d0c	adrp	x0, 89 ; 0x7a000
0000000000021d10	add	x0, x0, #0x4e0
0000000000021d14	ldr	x8, [x0]
0000000000021d18	blr	x8
0000000000021d1c	ldr	x8, [x0]
0000000000021d20	ldr	x8, [x8, #0x118]
0000000000021d24	add	x0, x8, #0x70
0000000000021d28	mov	w1, #0x20
0000000000021d2c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000021d30	mov	x23, x0
0000000000021d34	adr	x8, #0x4341c
0000000000021d38	nop
0000000000021d3c	str	x8, [x23, #0x10]!
0000000000021d40	stur	xzr, [x23, #-0x8]
0000000000021d44	str	x23, [x19]
0000000000021d48	str	x22, [x23, #0x8]
0000000000021d4c	str	w21, [x23, #0x10]
0000000000021d50	ldr	x8, [x22]
0000000000021d54	and	x8, x8, #0xfffffffffffffffc
0000000000021d58	ldr	x8, [x8]
0000000000021d5c	ldr	x8, [x8, #0x88]
0000000000021d60	mov	x0, x22
0000000000021d64	blr	x8
0000000000021d68	mov	x2, x0
0000000000021d6c	mov	x0, x21
0000000000021d70	mov	x1, x20
0000000000021d74	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkRangeIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}"
0000000000021d78	ldr	w8, [x23, #0x10]
0000000000021d7c	sub	w8, w20, w8
0000000000021d80	str	w8, [x23, #0x14]
0000000000021d84	str	x23, [x19]
0000000000021d88	mov	x0, x23
0000000000021d8c	ldp	x29, x30, [sp, #0x30]
0000000000021d90	ldp	x20, x19, [sp, #0x20]
0000000000021d94	ldp	x22, x21, [sp, #0x10]
0000000000021d98	ldp	x24, x23, [sp], #0x40
0000000000021d9c	ret
_kfun:kotlin.collections.AbstractList.SubList.get#internal:
0000000000021da0	stp	x22, x21, [sp, #-0x30]!
0000000000021da4	stp	x20, x19, [sp, #0x10]
0000000000021da8	stp	x29, x30, [sp, #0x20]
0000000000021dac	add	x29, sp, #0x20
0000000000021db0	mov	x19, x2
0000000000021db4	mov	x20, x1
0000000000021db8	mov	x21, x0
0000000000021dbc	adr	x8, #0x7274d
0000000000021dc0	nop
0000000000021dc4	ldarb	w8, [x8]
0000000000021dc8	tbz	w8, #0x0, 0x21dd0
0000000000021dcc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021dd0	ldr	w1, [x21, #0x14]
0000000000021dd4	mov	x0, x20
0000000000021dd8	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
0000000000021ddc	ldr	x0, [x21, #0x8]
0000000000021de0	ldr	w8, [x21, #0x10]
0000000000021de4	add	w1, w8, w20
0000000000021de8	ldr	x8, [x0]
0000000000021dec	and	x8, x8, #0xfffffffffffffffc
0000000000021df0	ldr	x8, [x8]
0000000000021df4	ldr	x8, [x8, #0xc0]
0000000000021df8	mov	x2, x19
0000000000021dfc	blr	x8
0000000000021e00	str	x0, [x19]
0000000000021e04	ldp	x29, x30, [sp, #0x20]
0000000000021e08	ldp	x20, x19, [sp, #0x10]
0000000000021e0c	ldp	x22, x21, [sp], #0x30
0000000000021e10	ret
_kfun:kotlin.collections.AbstractList.SubList.<get-size>#internal:
0000000000021e14	stp	x20, x19, [sp, #-0x20]!
0000000000021e18	stp	x29, x30, [sp, #0x10]
0000000000021e1c	add	x29, sp, #0x10
0000000000021e20	mov	x19, x0
0000000000021e24	adr	x8, #0x726e5
0000000000021e28	nop
0000000000021e2c	ldarb	w8, [x8]
0000000000021e30	tbz	w8, #0x0, 0x21e38
0000000000021e34	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021e38	ldr	w0, [x19, #0x14]
0000000000021e3c	ldp	x29, x30, [sp, #0x10]
0000000000021e40	ldp	x20, x19, [sp], #0x20
0000000000021e44	ret
_kfun:kotlin.collections.AbstractList#equals(kotlin.Any?){}kotlin.Boolean:
0000000000021e48	stp	x20, x19, [sp, #-0x20]!
0000000000021e4c	stp	x29, x30, [sp, #0x10]
0000000000021e50	add	x29, sp, #0x10
0000000000021e54	mov	x19, x1
0000000000021e58	mov	x20, x0
0000000000021e5c	adr	x8, #0x726ad
0000000000021e60	nop
0000000000021e64	ldarb	w8, [x8]
0000000000021e68	tbz	w8, #0x0, 0x21e70
0000000000021e6c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021e70	cmp	x19, x20
0000000000021e74	b.eq	0x21eb0
0000000000021e78	cbz	x19, 0x21f64
0000000000021e7c	ldr	x8, [x19]
0000000000021e80	and	x8, x8, #0xfffffffffffffffc
0000000000021e84	ldr	x8, [x8]
0000000000021e88	ldr	w9, [x8, #0x3c]
0000000000021e8c	ldr	x8, [x8, #0x40]
0000000000021e90	tbnz	w9, #0x1f, 0x21ec0
0000000000021e94	mov	w10, #0x2b
0000000000021e98	and	x9, x9, x10
0000000000021e9c	lsl	x9, x9, #4
0000000000021ea0	ldr	w8, [x8, x9]
0000000000021ea4	cmp	w8, #0x2b
0000000000021ea8	b.ne	0x21f64
0000000000021eac	b	0x21f88
0000000000021eb0	mov	w0, #0x1
0000000000021eb4	ldp	x29, x30, [sp, #0x10]
0000000000021eb8	ldp	x20, x19, [sp], #0x20
0000000000021ebc	ret
0000000000021ec0	neg	w10, w9
0000000000021ec4	mvn	w9, w9
0000000000021ec8	cmp	w10, #0x9
0000000000021ecc	b.ge	0x21f18
0000000000021ed0	cmp	w10, #0x2
0000000000021ed4	b.lt	0x21f4c
0000000000021ed8	mov	x10, #0x0
0000000000021edc	mov	x11, x8
0000000000021ee0	ldr	w12, [x11]
0000000000021ee4	cmp	w12, #0x2a
0000000000021ee8	b.gt	0x21f74
0000000000021eec	add	x10, x10, #0x1
0000000000021ef0	add	x11, x11, #0x10
0000000000021ef4	cmp	x9, x10
0000000000021ef8	b.ne	0x21ee0
0000000000021efc	mov	x10, x9
0000000000021f00	sxtw	x9, w10
0000000000021f04	lsl	x9, x9, #4
0000000000021f08	ldr	w8, [x8, x9]
0000000000021f0c	cmp	w8, #0x2b
0000000000021f10	b.ne	0x21f64
0000000000021f14	b	0x21f88
0000000000021f18	mov	w10, #0x0
0000000000021f1c	add	w11, w9, w10
0000000000021f20	cmp	w11, #0x0
0000000000021f24	cinc	w11, w11, lt
0000000000021f28	asr	w11, w11, #1
0000000000021f2c	sbfiz	x12, x11, #4, #32
0000000000021f30	ldr	w12, [x8, x12]
0000000000021f34	cmp	w12, #0x2b
0000000000021f38	csinc	w10, w10, w11, ge
0000000000021f3c	csel	w9, w9, w11, lt
0000000000021f40	cmp	w10, w9
0000000000021f44	b.lt	0x21f1c
0000000000021f48	b	0x21f74
0000000000021f4c	mov	w10, #0x0
0000000000021f50	sxtw	x9, w10
0000000000021f54	lsl	x9, x9, #4
0000000000021f58	ldr	w8, [x8, x9]
0000000000021f5c	cmp	w8, #0x2b
0000000000021f60	b.eq	0x21f88
0000000000021f64	mov	w0, #0x0
0000000000021f68	ldp	x29, x30, [sp, #0x10]
0000000000021f6c	ldp	x20, x19, [sp], #0x20
0000000000021f70	ret
0000000000021f74	sxtw	x9, w10
0000000000021f78	lsl	x9, x9, #4
0000000000021f7c	ldr	w8, [x8, x9]
0000000000021f80	cmp	w8, #0x2b
0000000000021f84	b.ne	0x21f64
0000000000021f88	mov	x0, x20
0000000000021f8c	mov	x1, x19
0000000000021f90	ldp	x29, x30, [sp, #0x10]
0000000000021f94	ldp	x20, x19, [sp], #0x20
0000000000021f98	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedEquals(kotlin.collections.Collection<*>;kotlin.collections.Collection<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractList#hashCode(){}kotlin.Int:
0000000000021f9c	stp	x20, x19, [sp, #-0x20]!
0000000000021fa0	stp	x29, x30, [sp, #0x10]
0000000000021fa4	add	x29, sp, #0x10
0000000000021fa8	mov	x19, x0
0000000000021fac	adr	x8, #0x7255d
0000000000021fb0	nop
0000000000021fb4	ldarb	w8, [x8]
0000000000021fb8	tbz	w8, #0x0, 0x21fc0
0000000000021fbc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021fc0	mov	x0, x19
0000000000021fc4	ldp	x29, x30, [sp, #0x10]
0000000000021fc8	ldp	x20, x19, [sp], #0x20
0000000000021fcc	b	"_kfun:kotlin.collections.AbstractList.Companion#orderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections.AbstractList.IteratorImpl.hasNext#internal:
0000000000021fd0	stp	x20, x19, [sp, #-0x20]!
0000000000021fd4	stp	x29, x30, [sp, #0x10]
0000000000021fd8	add	x29, sp, #0x10
0000000000021fdc	mov	x19, x0
0000000000021fe0	adr	x8, #0x72529
0000000000021fe4	nop
0000000000021fe8	ldarb	w8, [x8]
0000000000021fec	tbz	w8, #0x0, 0x21ff4
0000000000021ff0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000021ff4	ldr	w20, [x19, #0x10]
0000000000021ff8	ldr	x0, [x19, #0x8]
0000000000021ffc	ldr	x8, [x0]
0000000000022000	and	x8, x8, #0xfffffffffffffffc
0000000000022004	ldr	x8, [x8]
0000000000022008	ldr	x8, [x8, #0x88]
000000000002200c	blr	x8
0000000000022010	cmp	w20, w0
0000000000022014	cset	w0, lt
0000000000022018	ldp	x29, x30, [sp, #0x10]
000000000002201c	ldp	x20, x19, [sp], #0x20
0000000000022020	ret
_kfun:kotlin.collections.AbstractList.IteratorImpl.next#internal:
0000000000022024	sub	sp, sp, #0x50
0000000000022028	stp	x22, x21, [sp, #0x20]
000000000002202c	stp	x20, x19, [sp, #0x30]
0000000000022030	stp	x29, x30, [sp, #0x40]
0000000000022034	add	x29, sp, #0x40
0000000000022038	mov	x19, x1
000000000002203c	mov	x20, x0
0000000000022040	movi.16b	v0, #0x0
0000000000022044	stp	q0, q0, [sp]
0000000000022048	adrp	x0, 88 ; 0x7a000
000000000002204c	add	x0, x0, #0x4e0
0000000000022050	ldr	x8, [x0]
0000000000022054	blr	x8
0000000000022058	ldr	x21, [x0]
000000000002205c	ldr	x8, [x21, #0x110]
0000000000022060	mov	x9, sp
0000000000022064	str	x9, [x21, #0x110]
0000000000022068	mov	x9, #0x400000000
000000000002206c	stp	x8, x9, [sp, #0x8]
0000000000022070	adr	x8, #0x72499
0000000000022074	nop
0000000000022078	ldarb	w8, [x8]
000000000002207c	tbz	w8, #0x0, 0x22084
0000000000022080	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022084	ldr	x8, [x20]
0000000000022088	and	x8, x8, #0xfffffffffffffffc
000000000002208c	ldr	x8, [x8]
0000000000022090	ldr	x8, [x8, #0x88]
0000000000022094	mov	x0, x20
0000000000022098	blr	x8
000000000002209c	tbz	w0, #0x0, 0x220e8
00000000000220a0	ldr	x0, [x20, #0x8]
00000000000220a4	ldr	w1, [x20, #0x10]
00000000000220a8	add	w8, w1, #0x1
00000000000220ac	str	w8, [x20, #0x10]
00000000000220b0	ldr	x8, [x0]
00000000000220b4	and	x8, x8, #0xfffffffffffffffc
00000000000220b8	ldr	x8, [x8]
00000000000220bc	ldr	x8, [x8, #0xc0]
00000000000220c0	mov	x2, x19
00000000000220c4	blr	x8
00000000000220c8	str	x0, [x19]
00000000000220cc	ldr	x8, [sp, #0x8]
00000000000220d0	str	x8, [x21, #0x110]
00000000000220d4	ldp	x29, x30, [sp, #0x40]
00000000000220d8	ldp	x20, x19, [sp, #0x30]
00000000000220dc	ldp	x22, x21, [sp, #0x20]
00000000000220e0	add	sp, sp, #0x50
00000000000220e4	ret
00000000000220e8	ldr	x8, [x21, #0x118]
00000000000220ec	add	x0, x8, #0x70
00000000000220f0	mov	w1, #0x38
00000000000220f4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000220f8	mov	x19, x0
00000000000220fc	adr	x8, #0x3f294
0000000000022100	nop
0000000000022104	str	x8, [x19, #0x10]!
0000000000022108	stur	xzr, [x19, #-0x8]
000000000002210c	str	x19, [sp, #0x18]
0000000000022110	mov	x0, x19
0000000000022114	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
0000000000022118	mov	x0, x19
000000000002211c	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.hasPrevious#internal:
0000000000022120	stp	x20, x19, [sp, #-0x20]!
0000000000022124	stp	x29, x30, [sp, #0x10]
0000000000022128	add	x29, sp, #0x10
000000000002212c	mov	x19, x0
0000000000022130	adr	x8, #0x723d9
0000000000022134	nop
0000000000022138	ldarb	w8, [x8]
000000000002213c	tbz	w8, #0x0, 0x22144
0000000000022140	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022144	ldr	w8, [x19, #0x10]
0000000000022148	cmp	w8, #0x0
000000000002214c	cset	w0, gt
0000000000022150	ldp	x29, x30, [sp, #0x10]
0000000000022154	ldp	x20, x19, [sp], #0x20
0000000000022158	ret
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.nextIndex#internal:
000000000002215c	stp	x20, x19, [sp, #-0x20]!
0000000000022160	stp	x29, x30, [sp, #0x10]
0000000000022164	add	x29, sp, #0x10
0000000000022168	mov	x19, x0
000000000002216c	adr	x8, #0x7239d
0000000000022170	nop
0000000000022174	ldarb	w8, [x8]
0000000000022178	tbz	w8, #0x0, 0x22180
000000000002217c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022180	ldr	w0, [x19, #0x10]
0000000000022184	ldp	x29, x30, [sp, #0x10]
0000000000022188	ldp	x20, x19, [sp], #0x20
000000000002218c	ret
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.previous#internal:
0000000000022190	sub	sp, sp, #0x50
0000000000022194	stp	x22, x21, [sp, #0x20]
0000000000022198	stp	x20, x19, [sp, #0x30]
000000000002219c	stp	x29, x30, [sp, #0x40]
00000000000221a0	add	x29, sp, #0x40
00000000000221a4	mov	x19, x1
00000000000221a8	mov	x20, x0
00000000000221ac	movi.16b	v0, #0x0
00000000000221b0	stp	q0, q0, [sp]
00000000000221b4	adrp	x0, 88 ; 0x7a000
00000000000221b8	add	x0, x0, #0x4e0
00000000000221bc	ldr	x8, [x0]
00000000000221c0	blr	x8
00000000000221c4	ldr	x21, [x0]
00000000000221c8	ldr	x8, [x21, #0x110]
00000000000221cc	mov	x9, sp
00000000000221d0	str	x9, [x21, #0x110]
00000000000221d4	mov	x9, #0x400000000
00000000000221d8	stp	x8, x9, [sp, #0x8]
00000000000221dc	adr	x8, #0x7232d
00000000000221e0	nop
00000000000221e4	ldarb	w8, [x8]
00000000000221e8	tbz	w8, #0x0, 0x221f0
00000000000221ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000221f0	ldr	x8, [x20]
00000000000221f4	and	x8, x8, #0xfffffffffffffffc
00000000000221f8	ldr	x8, [x8]
00000000000221fc	ldr	x8, [x8, #0x98]
0000000000022200	mov	x0, x20
0000000000022204	blr	x8
0000000000022208	tbz	w0, #0x0, 0x22254
000000000002220c	ldr	x0, [x20, #0x18]
0000000000022210	ldr	w8, [x20, #0x10]
0000000000022214	sub	w1, w8, #0x1
0000000000022218	str	w1, [x20, #0x10]
000000000002221c	ldr	x8, [x0]
0000000000022220	and	x8, x8, #0xfffffffffffffffc
0000000000022224	ldr	x8, [x8]
0000000000022228	ldr	x8, [x8, #0xc0]
000000000002222c	mov	x2, x19
0000000000022230	blr	x8
0000000000022234	str	x0, [x19]
0000000000022238	ldr	x8, [sp, #0x8]
000000000002223c	str	x8, [x21, #0x110]
0000000000022240	ldp	x29, x30, [sp, #0x40]
0000000000022244	ldp	x20, x19, [sp, #0x30]
0000000000022248	ldp	x22, x21, [sp, #0x20]
000000000002224c	add	sp, sp, #0x50
0000000000022250	ret
0000000000022254	ldr	x8, [x21, #0x118]
0000000000022258	add	x0, x8, #0x70
000000000002225c	mov	w1, #0x38
0000000000022260	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000022264	mov	x19, x0
0000000000022268	adr	x8, #0x3f128
000000000002226c	nop
0000000000022270	str	x8, [x19, #0x10]!
0000000000022274	stur	xzr, [x19, #-0x8]
0000000000022278	str	x19, [sp, #0x18]
000000000002227c	mov	x0, x19
0000000000022280	bl	"_kfun:kotlin.RuntimeException#<init>(){}"
0000000000022284	mov	x0, x19
0000000000022288	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.ListIteratorImpl.previousIndex#internal:
000000000002228c	stp	x20, x19, [sp, #-0x20]!
0000000000022290	stp	x29, x30, [sp, #0x10]
0000000000022294	add	x29, sp, #0x10
0000000000022298	mov	x19, x0
000000000002229c	adr	x8, #0x7226d
00000000000222a0	nop
00000000000222a4	ldarb	w8, [x8]
00000000000222a8	tbz	w8, #0x0, 0x222b0
00000000000222ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000222b0	ldr	w8, [x19, #0x10]
00000000000222b4	sub	w0, w8, #0x1
00000000000222b8	ldp	x29, x30, [sp, #0x10]
00000000000222bc	ldp	x20, x19, [sp], #0x20
00000000000222c0	ret
_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}:
00000000000222c4	sub	sp, sp, #0xc0
00000000000222c8	stp	x26, x25, [sp, #0x70]
00000000000222cc	stp	x24, x23, [sp, #0x80]
00000000000222d0	stp	x22, x21, [sp, #0x90]
00000000000222d4	stp	x20, x19, [sp, #0xa0]
00000000000222d8	stp	x29, x30, [sp, #0xb0]
00000000000222dc	add	x29, sp, #0xb0
00000000000222e0	mov	x19, x1
00000000000222e4	mov	x20, x0
00000000000222e8	movi.16b	v0, #0x0
00000000000222ec	stp	q0, q0, [sp, #0x20]
00000000000222f0	stp	q0, q0, [sp, #0x50]
00000000000222f4	str	q0, [sp, #0x40]
00000000000222f8	stp	xzr, xzr, [sp, #0x10]
00000000000222fc	adr	x8, #0x42ac4
0000000000022300	nop
0000000000022304	orr	x8, x8, #0x3
0000000000022308	str	x8, [sp, #0x8]
000000000002230c	adrp	x0, 88 ; 0x7a000
0000000000022310	add	x0, x0, #0x4e0
0000000000022314	ldr	x8, [x0]
0000000000022318	blr	x8
000000000002231c	ldr	x21, [x0]
0000000000022320	ldr	x8, [x21, #0x110]
0000000000022324	add	x9, sp, #0x20
0000000000022328	str	x9, [x21, #0x110]
000000000002232c	mov	x9, #0xa00000000
0000000000022330	stp	x8, x9, [sp, #0x28]
0000000000022334	adr	x8, #0x721d5
0000000000022338	nop
000000000002233c	ldarb	w8, [x8]
0000000000022340	tbz	w8, #0x0, 0x22348
0000000000022344	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022348	tbnz	w20, #0x1f, 0x22378
000000000002234c	cmp	w20, w19
0000000000022350	b.ge	0x22378
0000000000022354	ldr	x8, [sp, #0x28]
0000000000022358	str	x8, [x21, #0x110]
000000000002235c	ldp	x29, x30, [sp, #0xb0]
0000000000022360	ldp	x20, x19, [sp, #0xa0]
0000000000022364	ldp	x22, x21, [sp, #0x90]
0000000000022368	ldp	x24, x23, [sp, #0x80]
000000000002236c	ldp	x26, x25, [sp, #0x70]
0000000000022370	add	sp, sp, #0xc0
0000000000022374	ret
0000000000022378	add	x8, sp, #0x20
000000000002237c	mov	x26, x21
0000000000022380	add	x21, x8, #0x40
0000000000022384	add	x22, x8, #0x38
0000000000022388	add	x23, x8, #0x30
000000000002238c	add	x24, x8, #0x28
0000000000022390	add	x25, x8, #0x20
0000000000022394	add	x8, sp, #0x8
0000000000022398	str	x8, [sp, #0x38]
000000000002239c	add	x0, sp, #0x8
00000000000223a0	mov	w1, #0xa
00000000000223a4	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000223a8	adr	x1, #0x4d728
00000000000223ac	nop
00000000000223b0	add	x0, sp, #0x8
00000000000223b4	mov	x2, x25
00000000000223b8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000223bc	add	x0, sp, #0x8
00000000000223c0	mov	x1, x20
00000000000223c4	mov	x2, x24
00000000000223c8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000223cc	adr	x1, #0x4ceb4
00000000000223d0	nop
00000000000223d4	add	x0, sp, #0x8
00000000000223d8	mov	x2, x23
00000000000223dc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000223e0	add	x0, sp, #0x8
00000000000223e4	mov	x1, x19
00000000000223e8	mov	x2, x22
00000000000223ec	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000223f0	add	x0, sp, #0x8
00000000000223f4	mov	x1, x21
00000000000223f8	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
00000000000223fc	mov	x19, x0
0000000000022400	ldr	x8, [x26, #0x118]
0000000000022404	add	x0, x8, #0x70
0000000000022408	mov	w1, #0x38
000000000002240c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000022410	mov	x20, x0
0000000000022414	adr	x8, #0x3f0bc
0000000000022418	nop
000000000002241c	str	x8, [x20, #0x10]!
0000000000022420	stur	xzr, [x20, #-0x8]
0000000000022424	str	x20, [sp, #0x68]
0000000000022428	mov	x0, x20
000000000002242c	mov	x1, x19
0000000000022430	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000022434	mov	x0, x20
0000000000022438	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.Companion#checkPositionIndex(kotlin.Int;kotlin.Int){}:
000000000002243c	sub	sp, sp, #0xc0
0000000000022440	stp	x26, x25, [sp, #0x70]
0000000000022444	stp	x24, x23, [sp, #0x80]
0000000000022448	stp	x22, x21, [sp, #0x90]
000000000002244c	stp	x20, x19, [sp, #0xa0]
0000000000022450	stp	x29, x30, [sp, #0xb0]
0000000000022454	add	x29, sp, #0xb0
0000000000022458	mov	x19, x1
000000000002245c	mov	x20, x0
0000000000022460	movi.16b	v0, #0x0
0000000000022464	stp	q0, q0, [sp, #0x20]
0000000000022468	stp	q0, q0, [sp, #0x50]
000000000002246c	str	q0, [sp, #0x40]
0000000000022470	stp	xzr, xzr, [sp, #0x10]
0000000000022474	adr	x8, #0x4294c
0000000000022478	nop
000000000002247c	orr	x8, x8, #0x3
0000000000022480	str	x8, [sp, #0x8]
0000000000022484	adrp	x0, 88 ; 0x7a000
0000000000022488	add	x0, x0, #0x4e0
000000000002248c	ldr	x8, [x0]
0000000000022490	blr	x8
0000000000022494	ldr	x21, [x0]
0000000000022498	ldr	x8, [x21, #0x110]
000000000002249c	add	x9, sp, #0x20
00000000000224a0	str	x9, [x21, #0x110]
00000000000224a4	mov	x9, #0xa00000000
00000000000224a8	stp	x8, x9, [sp, #0x28]
00000000000224ac	adr	x8, #0x7205d
00000000000224b0	nop
00000000000224b4	ldarb	w8, [x8]
00000000000224b8	tbz	w8, #0x0, 0x224c0
00000000000224bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000224c0	tbnz	w20, #0x1f, 0x224f0
00000000000224c4	cmp	w20, w19
00000000000224c8	b.gt	0x224f0
00000000000224cc	ldr	x8, [sp, #0x28]
00000000000224d0	str	x8, [x21, #0x110]
00000000000224d4	ldp	x29, x30, [sp, #0xb0]
00000000000224d8	ldp	x20, x19, [sp, #0xa0]
00000000000224dc	ldp	x22, x21, [sp, #0x90]
00000000000224e0	ldp	x24, x23, [sp, #0x80]
00000000000224e4	ldp	x26, x25, [sp, #0x70]
00000000000224e8	add	sp, sp, #0xc0
00000000000224ec	ret
00000000000224f0	add	x8, sp, #0x20
00000000000224f4	mov	x26, x21
00000000000224f8	add	x21, x8, #0x40
00000000000224fc	add	x22, x8, #0x38
0000000000022500	add	x23, x8, #0x30
0000000000022504	add	x24, x8, #0x28
0000000000022508	add	x25, x8, #0x20
000000000002250c	add	x8, sp, #0x8
0000000000022510	str	x8, [sp, #0x38]
0000000000022514	add	x0, sp, #0x8
0000000000022518	mov	w1, #0xa
000000000002251c	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000022520	adr	x1, #0x4d5b0
0000000000022524	nop
0000000000022528	add	x0, sp, #0x8
000000000002252c	mov	x2, x25
0000000000022530	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022534	add	x0, sp, #0x8
0000000000022538	mov	x1, x20
000000000002253c	mov	x2, x24
0000000000022540	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000022544	adr	x1, #0x4cd3c
0000000000022548	nop
000000000002254c	add	x0, sp, #0x8
0000000000022550	mov	x2, x23
0000000000022554	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022558	add	x0, sp, #0x8
000000000002255c	mov	x1, x19
0000000000022560	mov	x2, x22
0000000000022564	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000022568	add	x0, sp, #0x8
000000000002256c	mov	x1, x21
0000000000022570	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
0000000000022574	mov	x19, x0
0000000000022578	ldr	x8, [x26, #0x118]
000000000002257c	add	x0, x8, #0x70
0000000000022580	mov	w1, #0x38
0000000000022584	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000022588	mov	x20, x0
000000000002258c	adr	x8, #0x3ef44
0000000000022590	nop
0000000000022594	str	x8, [x20, #0x10]!
0000000000022598	stur	xzr, [x20, #-0x8]
000000000002259c	str	x20, [sp, #0x68]
00000000000225a0	mov	x0, x20
00000000000225a4	mov	x1, x19
00000000000225a8	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
00000000000225ac	mov	x0, x20
00000000000225b0	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.Companion#checkRangeIndexes(kotlin.Int;kotlin.Int;kotlin.Int){}:
00000000000225b4	sub	sp, sp, #0x140
00000000000225b8	stp	x28, x27, [sp, #0xe0]
00000000000225bc	stp	x26, x25, [sp, #0xf0]
00000000000225c0	stp	x24, x23, [sp, #0x100]
00000000000225c4	stp	x22, x21, [sp, #0x110]
00000000000225c8	stp	x20, x19, [sp, #0x120]
00000000000225cc	stp	x29, x30, [sp, #0x130]
00000000000225d0	add	x29, sp, #0x130
00000000000225d4	mov	x21, x2
00000000000225d8	mov	x19, x1
00000000000225dc	mov	x20, x0
00000000000225e0	str	xzr, [sp, #0xd0]
00000000000225e4	movi.16b	v0, #0x0
00000000000225e8	stp	q0, q0, [sp, #0xb0]
00000000000225ec	stp	q0, q0, [sp, #0x90]
00000000000225f0	stp	q0, q0, [sp, #0x70]
00000000000225f4	stp	q0, q0, [sp, #0x50]
00000000000225f8	str	q0, [sp, #0x40]
00000000000225fc	stp	xzr, xzr, [sp, #0x30]
0000000000022600	adr	x8, #0x427c0
0000000000022604	nop
0000000000022608	orr	x8, x8, #0x3
000000000002260c	stp	xzr, x8, [sp, #0x20]
0000000000022610	stp	x8, xzr, [sp, #0x10]
0000000000022614	adrp	x0, 88 ; 0x7a000
0000000000022618	add	x0, x0, #0x4e0
000000000002261c	ldr	x8, [x0]
0000000000022620	blr	x8
0000000000022624	ldr	x22, [x0]
0000000000022628	ldr	x8, [x22, #0x110]
000000000002262c	add	x9, sp, #0x40
0000000000022630	str	x9, [x22, #0x110]
0000000000022634	mov	x9, #0x1300000000
0000000000022638	stp	x8, x9, [sp, #0x48]
000000000002263c	adr	x8, #0x71ecd
0000000000022640	nop
0000000000022644	ldarb	w8, [x8]
0000000000022648	tbz	w8, #0x0, 0x22650
000000000002264c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022650	tbnz	w20, #0x1f, 0x2268c
0000000000022654	cmp	w19, w21
0000000000022658	b.gt	0x2268c
000000000002265c	cmp	w20, w19
0000000000022660	b.gt	0x2276c
0000000000022664	ldr	x8, [sp, #0x48]
0000000000022668	str	x8, [x22, #0x110]
000000000002266c	ldp	x29, x30, [sp, #0x130]
0000000000022670	ldp	x20, x19, [sp, #0x120]
0000000000022674	ldp	x22, x21, [sp, #0x110]
0000000000022678	ldp	x24, x23, [sp, #0x100]
000000000002267c	ldp	x26, x25, [sp, #0xf0]
0000000000022680	ldp	x28, x27, [sp, #0xe0]
0000000000022684	add	sp, sp, #0x140
0000000000022688	ret
000000000002268c	add	x8, sp, #0x40
0000000000022690	add	x9, x8, #0x50
0000000000022694	str	x9, [sp, #0x8]
0000000000022698	add	x23, x8, #0x48
000000000002269c	add	x24, x8, #0x40
00000000000226a0	add	x25, x8, #0x38
00000000000226a4	add	x26, x8, #0x30
00000000000226a8	add	x27, x8, #0x28
00000000000226ac	add	x9, sp, #0x28
00000000000226b0	str	x9, [sp, #0x58]
00000000000226b4	add	x28, x8, #0x20
00000000000226b8	add	x0, sp, #0x28
00000000000226bc	mov	w1, #0xa
00000000000226c0	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
00000000000226c4	adr	x1, #0x4cb5c
00000000000226c8	nop
00000000000226cc	add	x0, sp, #0x28
00000000000226d0	mov	x2, x28
00000000000226d4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000226d8	add	x0, sp, #0x28
00000000000226dc	mov	x1, x20
00000000000226e0	mov	x2, x27
00000000000226e4	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000226e8	adr	x1, #0x4cb68
00000000000226ec	nop
00000000000226f0	add	x0, sp, #0x28
00000000000226f4	mov	x2, x26
00000000000226f8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000226fc	add	x0, sp, #0x28
0000000000022700	mov	x1, x19
0000000000022704	mov	x2, x25
0000000000022708	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
000000000002270c	adr	x1, #0x4cb74
0000000000022710	nop
0000000000022714	add	x0, sp, #0x28
0000000000022718	mov	x2, x24
000000000002271c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
0000000000022720	add	x0, sp, #0x28
0000000000022724	mov	x1, x21
0000000000022728	mov	x2, x23
000000000002272c	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
0000000000022730	add	x0, sp, #0x28
0000000000022734	ldr	x1, [sp, #0x8]
0000000000022738	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
000000000002273c	mov	x19, x0
0000000000022740	ldr	x8, [x22, #0x118]
0000000000022744	add	x0, x8, #0x70
0000000000022748	mov	w1, #0x38
000000000002274c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000022750	mov	x20, x0
0000000000022754	adr	x8, #0x3ed7c
0000000000022758	nop
000000000002275c	str	x8, [x20, #0x10]!
0000000000022760	stur	xzr, [x20, #-0x8]
0000000000022764	str	x20, [sp, #0x98]
0000000000022768	b	0x22818
000000000002276c	add	x8, sp, #0x40
0000000000022770	add	x21, x8, #0x88
0000000000022774	add	x26, x8, #0x80
0000000000022778	add	x23, x8, #0x78
000000000002277c	add	x24, x8, #0x70
0000000000022780	add	x25, x8, #0x68
0000000000022784	add	x8, sp, #0x10
0000000000022788	str	x8, [sp, #0xa0]
000000000002278c	add	x0, sp, #0x10
0000000000022790	mov	w1, #0xa
0000000000022794	bl	"_kfun:kotlin.text.StringBuilder#<init>(kotlin.Int){}"
0000000000022798	adr	x1, #0x4ca88
000000000002279c	nop
00000000000227a0	add	x0, sp, #0x10
00000000000227a4	mov	x2, x25
00000000000227a8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000227ac	add	x0, sp, #0x10
00000000000227b0	mov	x1, x20
00000000000227b4	mov	x2, x24
00000000000227b8	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000227bc	adr	x1, #0x4cae4
00000000000227c0	nop
00000000000227c4	add	x0, sp, #0x10
00000000000227c8	mov	x2, x23
00000000000227cc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.String?){}kotlin.text.StringBuilder"
00000000000227d0	add	x0, sp, #0x10
00000000000227d4	mov	x1, x19
00000000000227d8	mov	x2, x26
00000000000227dc	bl	"_kfun:kotlin.text.StringBuilder#append(kotlin.Int){}kotlin.text.StringBuilder"
00000000000227e0	add	x0, sp, #0x10
00000000000227e4	mov	x1, x21
00000000000227e8	bl	"_kfun:kotlin.text.StringBuilder#toString(){}kotlin.String"
00000000000227ec	mov	x19, x0
00000000000227f0	ldr	x8, [x22, #0x118]
00000000000227f4	add	x0, x8, #0x70
00000000000227f8	mov	w1, #0x38
00000000000227fc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000022800	mov	x20, x0
0000000000022804	adr	x8, #0x3ed6c
0000000000022808	nop
000000000002280c	str	x8, [x20, #0x10]!
0000000000022810	stur	xzr, [x20, #-0x8]
0000000000022814	str	x20, [sp, #0xd0]
0000000000022818	mov	x0, x20
000000000002281c	mov	x1, x19
0000000000022820	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
0000000000022824	mov	x0, x20
0000000000022828	bl	_ThrowException
_kfun:kotlin.collections.AbstractList.Companion#orderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int:
000000000002282c	sub	sp, sp, #0x70
0000000000022830	stp	x24, x23, [sp, #0x30]
0000000000022834	stp	x22, x21, [sp, #0x40]
0000000000022838	stp	x20, x19, [sp, #0x50]
000000000002283c	stp	x29, x30, [sp, #0x60]
0000000000022840	add	x29, sp, #0x60
0000000000022844	mov	x20, x0
0000000000022848	movi.16b	v0, #0x0
000000000002284c	stp	q0, q0, [sp]
0000000000022850	str	xzr, [sp, #0x20]
0000000000022854	mov	x19, sp
0000000000022858	add	x21, x19, #0x18
000000000002285c	adrp	x0, 88 ; 0x7a000
0000000000022860	add	x0, x0, #0x4e0
0000000000022864	ldr	x8, [x0]
0000000000022868	blr	x8
000000000002286c	ldr	x22, [x0]
0000000000022870	ldr	x8, [x22, #0x110]
0000000000022874	str	x19, [x22, #0x110]
0000000000022878	mov	x9, #0x500000000
000000000002287c	stp	x8, x9, [sp, #0x8]
0000000000022880	adr	x23, #0x71c89
0000000000022884	nop
0000000000022888	ldarb	w8, [x23]
000000000002288c	tbz	w8, #0x0, 0x22894
0000000000022890	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022894	add	x19, x19, #0x20
0000000000022898	ldr	x8, [x20]
000000000002289c	and	x8, x8, #0xfffffffffffffffc
00000000000228a0	ldr	x8, [x8]
00000000000228a4	ldr	w9, [x8, #0x3c]
00000000000228a8	ldr	x8, [x8, #0x40]
00000000000228ac	tbnz	w9, #0x1f, 0x228bc
00000000000228b0	mov	w10, #0x12
00000000000228b4	and	x9, x9, x10
00000000000228b8	b	0x22940
00000000000228bc	neg	w10, w9
00000000000228c0	mvn	w9, w9
00000000000228c4	cmp	w10, #0x9
00000000000228c8	b.ge	0x22900
00000000000228cc	cmp	w10, #0x2
00000000000228d0	b.lt	0x22934
00000000000228d4	mov	x10, #0x0
00000000000228d8	mov	x11, x8
00000000000228dc	ldr	w12, [x11]
00000000000228e0	cmp	w12, #0x11
00000000000228e4	b.gt	0x2293c
00000000000228e8	add	x10, x10, #0x1
00000000000228ec	add	x11, x11, #0x10
00000000000228f0	cmp	x9, x10
00000000000228f4	b.ne	0x228dc
00000000000228f8	mov	x10, x9
00000000000228fc	b	0x2293c
0000000000022900	mov	w10, #0x0
0000000000022904	add	w11, w9, w10
0000000000022908	cmp	w11, #0x0
000000000002290c	cinc	w11, w11, lt
0000000000022910	asr	w11, w11, #1
0000000000022914	sbfiz	x12, x11, #4, #32
0000000000022918	ldr	w12, [x8, x12]
000000000002291c	cmp	w12, #0x12
0000000000022920	csinc	w10, w10, w11, ge
0000000000022924	csel	w9, w9, w11, lt
0000000000022928	cmp	w10, w9
000000000002292c	b.lt	0x22904
0000000000022930	b	0x2293c
0000000000022934	mov	w10, #0x0
0000000000022938	b	0x2293c
000000000002293c	sxtw	x9, w10
0000000000022940	add	x8, x8, x9, lsl #4
0000000000022944	ldr	x8, [x8, #0x8]
0000000000022948	ldr	x8, [x8, #0x20]
000000000002294c	mov	x0, x20
0000000000022950	mov	x1, x21
0000000000022954	blr	x8
0000000000022958	mov	x20, x0
000000000002295c	mov	w21, #0x1
0000000000022960	mov	w24, #0xa0
0000000000022964	b	0x2296c
0000000000022968	add	w21, w21, w0
000000000002296c	ldr	x8, [x20]
0000000000022970	and	x8, x8, #0xfffffffffffffffc
0000000000022974	ldr	x8, [x8]
0000000000022978	ldr	w9, [x8, #0x3c]
000000000002297c	ldr	x8, [x8, #0x40]
0000000000022980	tbnz	w9, #0x1f, 0x229a4
0000000000022984	and	x9, x9, x24
0000000000022988	add	x8, x8, x9, lsl #4
000000000002298c	ldr	x8, [x8, #0x8]
0000000000022990	ldr	x8, [x8]
0000000000022994	mov	x0, x20
0000000000022998	blr	x8
000000000002299c	tbnz	w0, #0x0, 0x22a40
00000000000229a0	b	0x22b2c
00000000000229a4	neg	w10, w9
00000000000229a8	mvn	w9, w9
00000000000229ac	cmp	w10, #0x9
00000000000229b0	b.ge	0x229e8
00000000000229b4	cmp	w10, #0x2
00000000000229b8	b.lt	0x22a1c
00000000000229bc	mov	x10, #0x0
00000000000229c0	mov	x11, x8
00000000000229c4	ldr	w12, [x11]
00000000000229c8	cmp	w12, #0x9f
00000000000229cc	b.gt	0x22a24
00000000000229d0	add	x10, x10, #0x1
00000000000229d4	add	x11, x11, #0x10
00000000000229d8	cmp	x9, x10
00000000000229dc	b.ne	0x229c4
00000000000229e0	mov	x10, x9
00000000000229e4	b	0x22a24
00000000000229e8	mov	w10, #0x0
00000000000229ec	add	w11, w9, w10
00000000000229f0	cmp	w11, #0x0
00000000000229f4	cinc	w11, w11, lt
00000000000229f8	asr	w11, w11, #1
00000000000229fc	sbfiz	x12, x11, #4, #32
0000000000022a00	ldr	w12, [x8, x12]
0000000000022a04	cmp	w12, #0xa0
0000000000022a08	csinc	w10, w10, w11, ge
0000000000022a0c	csel	w9, w9, w11, lt
0000000000022a10	cmp	w10, w9
0000000000022a14	b.lt	0x229ec
0000000000022a18	b	0x22a24
0000000000022a1c	mov	w10, #0x0
0000000000022a20	b	0x22a24
0000000000022a24	sxtw	x9, w10
0000000000022a28	add	x8, x8, x9, lsl #4
0000000000022a2c	ldr	x8, [x8, #0x8]
0000000000022a30	ldr	x8, [x8]
0000000000022a34	mov	x0, x20
0000000000022a38	blr	x8
0000000000022a3c	tbz	w0, #0x0, 0x22b2c
0000000000022a40	ldarb	w8, [x23]
0000000000022a44	tbz	w8, #0x0, 0x22a4c
0000000000022a48	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022a4c	ldr	x8, [x20]
0000000000022a50	and	x8, x8, #0xfffffffffffffffc
0000000000022a54	ldr	x8, [x8]
0000000000022a58	ldr	w9, [x8, #0x3c]
0000000000022a5c	ldr	x8, [x8, #0x40]
0000000000022a60	tbnz	w9, #0x1f, 0x22a6c
0000000000022a64	and	x9, x9, x24
0000000000022a68	b	0x22af0
0000000000022a6c	neg	w10, w9
0000000000022a70	mvn	w9, w9
0000000000022a74	cmp	w10, #0x9
0000000000022a78	b.ge	0x22ab0
0000000000022a7c	cmp	w10, #0x2
0000000000022a80	b.lt	0x22ae4
0000000000022a84	mov	x10, #0x0
0000000000022a88	mov	x11, x8
0000000000022a8c	ldr	w12, [x11]
0000000000022a90	cmp	w12, #0x9f
0000000000022a94	b.gt	0x22aec
0000000000022a98	add	x10, x10, #0x1
0000000000022a9c	add	x11, x11, #0x10
0000000000022aa0	cmp	x9, x10
0000000000022aa4	b.ne	0x22a8c
0000000000022aa8	mov	x10, x9
0000000000022aac	b	0x22aec
0000000000022ab0	mov	w10, #0x0
0000000000022ab4	add	w11, w9, w10
0000000000022ab8	cmp	w11, #0x0
0000000000022abc	cinc	w11, w11, lt
0000000000022ac0	asr	w11, w11, #1
0000000000022ac4	sbfiz	x12, x11, #4, #32
0000000000022ac8	ldr	w12, [x8, x12]
0000000000022acc	cmp	w12, #0xa0
0000000000022ad0	csinc	w10, w10, w11, ge
0000000000022ad4	csel	w9, w9, w11, lt
0000000000022ad8	cmp	w10, w9
0000000000022adc	b.lt	0x22ab4
0000000000022ae0	b	0x22aec
0000000000022ae4	mov	w10, #0x0
0000000000022ae8	b	0x22aec
0000000000022aec	sxtw	x9, w10
0000000000022af0	add	x8, x8, x9, lsl #4
0000000000022af4	ldr	x8, [x8, #0x8]
0000000000022af8	ldr	x8, [x8, #0x8]
0000000000022afc	mov	x0, x20
0000000000022b00	mov	x1, x19
0000000000022b04	blr	x8
0000000000022b08	lsl	w8, w21, #5
0000000000022b0c	sub	w21, w8, w21
0000000000022b10	cbz	x0, 0x22968
0000000000022b14	ldr	x8, [x0]
0000000000022b18	and	x8, x8, #0xfffffffffffffffc
0000000000022b1c	ldr	x8, [x8]
0000000000022b20	ldr	x8, [x8, #0x78]
0000000000022b24	blr	x8
0000000000022b28	b	0x22968
0000000000022b2c	ldr	x8, [sp, #0x8]
0000000000022b30	str	x8, [x22, #0x110]
0000000000022b34	mov	x0, x21
0000000000022b38	ldp	x29, x30, [sp, #0x60]
0000000000022b3c	ldp	x20, x19, [sp, #0x50]
0000000000022b40	ldp	x22, x21, [sp, #0x40]
0000000000022b44	ldp	x24, x23, [sp, #0x30]
0000000000022b48	add	sp, sp, #0x70
0000000000022b4c	ret
_kfun:kotlin.collections.AbstractList.Companion#orderedEquals(kotlin.collections.Collection<*>;kotlin.collections.Collection<*>){}kotlin.Boolean:
0000000000022b50	sub	sp, sp, #0x90
0000000000022b54	stp	x26, x25, [sp, #0x40]
0000000000022b58	stp	x24, x23, [sp, #0x50]
0000000000022b5c	stp	x22, x21, [sp, #0x60]
0000000000022b60	stp	x20, x19, [sp, #0x70]
0000000000022b64	stp	x29, x30, [sp, #0x80]
0000000000022b68	add	x29, sp, #0x80
0000000000022b6c	mov	x22, x1
0000000000022b70	mov	x21, x0
0000000000022b74	movi.16b	v0, #0x0
0000000000022b78	stp	q0, q0, [sp]
0000000000022b7c	str	xzr, [sp, #0x30]
0000000000022b80	str	q0, [sp, #0x20]
0000000000022b84	mov	x20, sp
0000000000022b88	adrp	x0, 88 ; 0x7a000
0000000000022b8c	add	x0, x0, #0x4e0
0000000000022b90	ldr	x8, [x0]
0000000000022b94	blr	x8
0000000000022b98	ldr	x24, [x0]
0000000000022b9c	ldr	x8, [x24, #0x110]
0000000000022ba0	str	x20, [x24, #0x110]
0000000000022ba4	mov	x9, #0x700000000
0000000000022ba8	stp	x8, x9, [sp, #0x8]
0000000000022bac	adr	x25, #0x7195d
0000000000022bb0	nop
0000000000022bb4	ldarb	w8, [x25]
0000000000022bb8	tbz	w8, #0x0, 0x22bc0
0000000000022bbc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022bc0	ldr	x8, [x21]
0000000000022bc4	and	x8, x8, #0xfffffffffffffffc
0000000000022bc8	ldr	x8, [x8]
0000000000022bcc	ldr	w9, [x8, #0x3c]
0000000000022bd0	ldr	x8, [x8, #0x40]
0000000000022bd4	tbnz	w9, #0x1f, 0x22be4
0000000000022bd8	mov	w10, #0x12
0000000000022bdc	and	x9, x9, x10
0000000000022be0	b	0x22c68
0000000000022be4	neg	w10, w9
0000000000022be8	mvn	w9, w9
0000000000022bec	cmp	w10, #0x9
0000000000022bf0	b.ge	0x22c28
0000000000022bf4	cmp	w10, #0x2
0000000000022bf8	b.lt	0x22c5c
0000000000022bfc	mov	x10, #0x0
0000000000022c00	mov	x11, x8
0000000000022c04	ldr	w12, [x11]
0000000000022c08	cmp	w12, #0x11
0000000000022c0c	b.gt	0x22c64
0000000000022c10	add	x10, x10, #0x1
0000000000022c14	add	x11, x11, #0x10
0000000000022c18	cmp	x9, x10
0000000000022c1c	b.ne	0x22c04
0000000000022c20	mov	x10, x9
0000000000022c24	b	0x22c64
0000000000022c28	mov	w10, #0x0
0000000000022c2c	add	w11, w9, w10
0000000000022c30	cmp	w11, #0x0
0000000000022c34	cinc	w11, w11, lt
0000000000022c38	asr	w11, w11, #1
0000000000022c3c	sbfiz	x12, x11, #4, #32
0000000000022c40	ldr	w12, [x8, x12]
0000000000022c44	cmp	w12, #0x12
0000000000022c48	csinc	w10, w10, w11, ge
0000000000022c4c	csel	w9, w9, w11, lt
0000000000022c50	cmp	w10, w9
0000000000022c54	b.lt	0x22c2c
0000000000022c58	b	0x22c64
0000000000022c5c	mov	w10, #0x0
0000000000022c60	b	0x22c64
0000000000022c64	sxtw	x9, w10
0000000000022c68	add	x8, x8, x9, lsl #4
0000000000022c6c	ldr	x8, [x8, #0x8]
0000000000022c70	ldr	x8, [x8]
0000000000022c74	mov	x0, x21
0000000000022c78	blr	x8
0000000000022c7c	mov	x19, x0
0000000000022c80	ldr	x8, [x22]
0000000000022c84	and	x8, x8, #0xfffffffffffffffc
0000000000022c88	ldr	x8, [x8]
0000000000022c8c	ldr	w9, [x8, #0x3c]
0000000000022c90	ldr	x8, [x8, #0x40]
0000000000022c94	tbnz	w9, #0x1f, 0x22ca4
0000000000022c98	mov	w10, #0x12
0000000000022c9c	and	x9, x9, x10
0000000000022ca0	b	0x22d28
0000000000022ca4	neg	w10, w9
0000000000022ca8	mvn	w9, w9
0000000000022cac	cmp	w10, #0x9
0000000000022cb0	b.ge	0x22ce8
0000000000022cb4	cmp	w10, #0x2
0000000000022cb8	b.lt	0x22d1c
0000000000022cbc	mov	x10, #0x0
0000000000022cc0	mov	x11, x8
0000000000022cc4	ldr	w12, [x11]
0000000000022cc8	cmp	w12, #0x11
0000000000022ccc	b.gt	0x22d24
0000000000022cd0	add	x10, x10, #0x1
0000000000022cd4	add	x11, x11, #0x10
0000000000022cd8	cmp	x9, x10
0000000000022cdc	b.ne	0x22cc4
0000000000022ce0	mov	x10, x9
0000000000022ce4	b	0x22d24
0000000000022ce8	mov	w10, #0x0
0000000000022cec	add	w11, w9, w10
0000000000022cf0	cmp	w11, #0x0
0000000000022cf4	cinc	w11, w11, lt
0000000000022cf8	asr	w11, w11, #1
0000000000022cfc	sbfiz	x12, x11, #4, #32
0000000000022d00	ldr	w12, [x8, x12]
0000000000022d04	cmp	w12, #0x12
0000000000022d08	csinc	w10, w10, w11, ge
0000000000022d0c	csel	w9, w9, w11, lt
0000000000022d10	cmp	w10, w9
0000000000022d14	b.lt	0x22cec
0000000000022d18	b	0x22d24
0000000000022d1c	mov	w10, #0x0
0000000000022d20	b	0x22d24
0000000000022d24	sxtw	x9, w10
0000000000022d28	add	x8, x8, x9, lsl #4
0000000000022d2c	ldr	x8, [x8, #0x8]
0000000000022d30	ldr	x8, [x8]
0000000000022d34	mov	x0, x22
0000000000022d38	blr	x8
0000000000022d3c	cmp	w19, w0
0000000000022d40	b.ne	0x23164
0000000000022d44	add	x23, x20, #0x20
0000000000022d48	add	x1, x20, #0x18
0000000000022d4c	ldr	x8, [x22]
0000000000022d50	and	x8, x8, #0xfffffffffffffffc
0000000000022d54	ldr	x8, [x8]
0000000000022d58	ldr	w9, [x8, #0x3c]
0000000000022d5c	ldr	x8, [x8, #0x40]
0000000000022d60	tbnz	w9, #0x1f, 0x22d70
0000000000022d64	mov	w10, #0x12
0000000000022d68	and	x9, x9, x10
0000000000022d6c	b	0x22df4
0000000000022d70	neg	w10, w9
0000000000022d74	mvn	w9, w9
0000000000022d78	cmp	w10, #0x9
0000000000022d7c	b.ge	0x22db4
0000000000022d80	cmp	w10, #0x2
0000000000022d84	b.lt	0x22de8
0000000000022d88	mov	x10, #0x0
0000000000022d8c	mov	x11, x8
0000000000022d90	ldr	w12, [x11]
0000000000022d94	cmp	w12, #0x11
0000000000022d98	b.gt	0x22df0
0000000000022d9c	add	x10, x10, #0x1
0000000000022da0	add	x11, x11, #0x10
0000000000022da4	cmp	x9, x10
0000000000022da8	b.ne	0x22d90
0000000000022dac	mov	x10, x9
0000000000022db0	b	0x22df0
0000000000022db4	mov	w10, #0x0
0000000000022db8	add	w11, w9, w10
0000000000022dbc	cmp	w11, #0x0
0000000000022dc0	cinc	w11, w11, lt
0000000000022dc4	asr	w11, w11, #1
0000000000022dc8	sbfiz	x12, x11, #4, #32
0000000000022dcc	ldr	w12, [x8, x12]
0000000000022dd0	cmp	w12, #0x12
0000000000022dd4	csinc	w10, w10, w11, ge
0000000000022dd8	csel	w9, w9, w11, lt
0000000000022ddc	cmp	w10, w9
0000000000022de0	b.lt	0x22db8
0000000000022de4	b	0x22df0
0000000000022de8	mov	w10, #0x0
0000000000022dec	b	0x22df0
0000000000022df0	sxtw	x9, w10
0000000000022df4	add	x19, x20, #0x30
0000000000022df8	add	x20, x20, #0x28
0000000000022dfc	add	x8, x8, x9, lsl #4
0000000000022e00	ldr	x8, [x8, #0x8]
0000000000022e04	ldr	x8, [x8, #0x20]
0000000000022e08	mov	x0, x22
0000000000022e0c	blr	x8
0000000000022e10	mov	x22, x0
0000000000022e14	ldr	x8, [x21]
0000000000022e18	and	x8, x8, #0xfffffffffffffffc
0000000000022e1c	ldr	x8, [x8]
0000000000022e20	ldr	w9, [x8, #0x3c]
0000000000022e24	ldr	x8, [x8, #0x40]
0000000000022e28	tbnz	w9, #0x1f, 0x22e38
0000000000022e2c	mov	w10, #0x12
0000000000022e30	and	x9, x9, x10
0000000000022e34	b	0x22ebc
0000000000022e38	neg	w10, w9
0000000000022e3c	mvn	w9, w9
0000000000022e40	cmp	w10, #0x9
0000000000022e44	b.ge	0x22e7c
0000000000022e48	cmp	w10, #0x2
0000000000022e4c	b.lt	0x22eb0
0000000000022e50	mov	x10, #0x0
0000000000022e54	mov	x11, x8
0000000000022e58	ldr	w12, [x11]
0000000000022e5c	cmp	w12, #0x11
0000000000022e60	b.gt	0x22eb8
0000000000022e64	add	x10, x10, #0x1
0000000000022e68	add	x11, x11, #0x10
0000000000022e6c	cmp	x9, x10
0000000000022e70	b.ne	0x22e58
0000000000022e74	mov	x10, x9
0000000000022e78	b	0x22eb8
0000000000022e7c	mov	w10, #0x0
0000000000022e80	add	w11, w9, w10
0000000000022e84	cmp	w11, #0x0
0000000000022e88	cinc	w11, w11, lt
0000000000022e8c	asr	w11, w11, #1
0000000000022e90	sbfiz	x12, x11, #4, #32
0000000000022e94	ldr	w12, [x8, x12]
0000000000022e98	cmp	w12, #0x12
0000000000022e9c	csinc	w10, w10, w11, ge
0000000000022ea0	csel	w9, w9, w11, lt
0000000000022ea4	cmp	w10, w9
0000000000022ea8	b.lt	0x22e80
0000000000022eac	b	0x22eb8
0000000000022eb0	mov	w10, #0x0
0000000000022eb4	b	0x22eb8
0000000000022eb8	sxtw	x9, w10
0000000000022ebc	add	x8, x8, x9, lsl #4
0000000000022ec0	ldr	x8, [x8, #0x8]
0000000000022ec4	ldr	x8, [x8, #0x20]
0000000000022ec8	mov	x0, x21
0000000000022ecc	mov	x1, x23
0000000000022ed0	blr	x8
0000000000022ed4	mov	x21, x0
0000000000022ed8	mov	w26, #0xa0
0000000000022edc	b	0x22ee4
0000000000022ee0	cbnz	x1, 0x23164
0000000000022ee4	ldr	x8, [x21]
0000000000022ee8	and	x8, x8, #0xfffffffffffffffc
0000000000022eec	ldr	x8, [x8]
0000000000022ef0	ldr	w9, [x8, #0x3c]
0000000000022ef4	ldr	x8, [x8, #0x40]
0000000000022ef8	tbnz	w9, #0x1f, 0x22f1c
0000000000022efc	and	x9, x9, x26
0000000000022f00	add	x8, x8, x9, lsl #4
0000000000022f04	ldr	x8, [x8, #0x8]
0000000000022f08	ldr	x8, [x8]
0000000000022f0c	mov	x0, x21
0000000000022f10	blr	x8
0000000000022f14	tbnz	w0, #0x0, 0x22fb8
0000000000022f18	b	0x2316c
0000000000022f1c	neg	w10, w9
0000000000022f20	mvn	w9, w9
0000000000022f24	cmp	w10, #0x9
0000000000022f28	b.ge	0x22f60
0000000000022f2c	cmp	w10, #0x2
0000000000022f30	b.lt	0x22f94
0000000000022f34	mov	x10, #0x0
0000000000022f38	mov	x11, x8
0000000000022f3c	ldr	w12, [x11]
0000000000022f40	cmp	w12, #0x9f
0000000000022f44	b.gt	0x22f9c
0000000000022f48	add	x10, x10, #0x1
0000000000022f4c	add	x11, x11, #0x10
0000000000022f50	cmp	x9, x10
0000000000022f54	b.ne	0x22f3c
0000000000022f58	mov	x10, x9
0000000000022f5c	b	0x22f9c
0000000000022f60	mov	w10, #0x0
0000000000022f64	add	w11, w9, w10
0000000000022f68	cmp	w11, #0x0
0000000000022f6c	cinc	w11, w11, lt
0000000000022f70	asr	w11, w11, #1
0000000000022f74	sbfiz	x12, x11, #4, #32
0000000000022f78	ldr	w12, [x8, x12]
0000000000022f7c	cmp	w12, #0xa0
0000000000022f80	csinc	w10, w10, w11, ge
0000000000022f84	csel	w9, w9, w11, lt
0000000000022f88	cmp	w10, w9
0000000000022f8c	b.lt	0x22f64
0000000000022f90	b	0x22f9c
0000000000022f94	mov	w10, #0x0
0000000000022f98	b	0x22f9c
0000000000022f9c	sxtw	x9, w10
0000000000022fa0	add	x8, x8, x9, lsl #4
0000000000022fa4	ldr	x8, [x8, #0x8]
0000000000022fa8	ldr	x8, [x8]
0000000000022fac	mov	x0, x21
0000000000022fb0	blr	x8
0000000000022fb4	tbz	w0, #0x0, 0x2316c
0000000000022fb8	ldarb	w8, [x25]
0000000000022fbc	tbz	w8, #0x0, 0x22fc4
0000000000022fc0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000022fc4	ldr	x8, [x21]
0000000000022fc8	and	x8, x8, #0xfffffffffffffffc
0000000000022fcc	ldr	x8, [x8]
0000000000022fd0	ldr	w9, [x8, #0x3c]
0000000000022fd4	ldr	x8, [x8, #0x40]
0000000000022fd8	tbnz	w9, #0x1f, 0x22fe4
0000000000022fdc	and	x9, x9, x26
0000000000022fe0	b	0x23068
0000000000022fe4	neg	w10, w9
0000000000022fe8	mvn	w9, w9
0000000000022fec	cmp	w10, #0x9
0000000000022ff0	b.ge	0x23028
0000000000022ff4	cmp	w10, #0x2
0000000000022ff8	b.lt	0x2305c
0000000000022ffc	mov	x10, #0x0
0000000000023000	mov	x11, x8
0000000000023004	ldr	w12, [x11]
0000000000023008	cmp	w12, #0x9f
000000000002300c	b.gt	0x23064
0000000000023010	add	x10, x10, #0x1
0000000000023014	add	x11, x11, #0x10
0000000000023018	cmp	x9, x10
000000000002301c	b.ne	0x23004
0000000000023020	mov	x10, x9
0000000000023024	b	0x23064
0000000000023028	mov	w10, #0x0
000000000002302c	add	w11, w9, w10
0000000000023030	cmp	w11, #0x0
0000000000023034	cinc	w11, w11, lt
0000000000023038	asr	w11, w11, #1
000000000002303c	sbfiz	x12, x11, #4, #32
0000000000023040	ldr	w12, [x8, x12]
0000000000023044	cmp	w12, #0xa0
0000000000023048	csinc	w10, w10, w11, ge
000000000002304c	csel	w9, w9, w11, lt
0000000000023050	cmp	w10, w9
0000000000023054	b.lt	0x2302c
0000000000023058	b	0x23064
000000000002305c	mov	w10, #0x0
0000000000023060	b	0x23064
0000000000023064	sxtw	x9, w10
0000000000023068	add	x8, x8, x9, lsl #4
000000000002306c	ldr	x8, [x8, #0x8]
0000000000023070	ldr	x8, [x8, #0x8]
0000000000023074	mov	x0, x21
0000000000023078	mov	x1, x20
000000000002307c	blr	x8
0000000000023080	mov	x23, x0
0000000000023084	ldr	x8, [x22]
0000000000023088	and	x8, x8, #0xfffffffffffffffc
000000000002308c	ldr	x8, [x8]
0000000000023090	ldr	w9, [x8, #0x3c]
0000000000023094	ldr	x8, [x8, #0x40]
0000000000023098	tbnz	w9, #0x1f, 0x230a4
000000000002309c	and	x9, x9, x26
00000000000230a0	b	0x23128
00000000000230a4	neg	w10, w9
00000000000230a8	mvn	w9, w9
00000000000230ac	cmp	w10, #0x9
00000000000230b0	b.ge	0x230e8
00000000000230b4	cmp	w10, #0x2
00000000000230b8	b.lt	0x2311c
00000000000230bc	mov	x10, #0x0
00000000000230c0	mov	x11, x8
00000000000230c4	ldr	w12, [x11]
00000000000230c8	cmp	w12, #0x9f
00000000000230cc	b.gt	0x23124
00000000000230d0	add	x10, x10, #0x1
00000000000230d4	add	x11, x11, #0x10
00000000000230d8	cmp	x9, x10
00000000000230dc	b.ne	0x230c4
00000000000230e0	mov	x10, x9
00000000000230e4	b	0x23124
00000000000230e8	mov	w10, #0x0
00000000000230ec	add	w11, w9, w10
00000000000230f0	cmp	w11, #0x0
00000000000230f4	cinc	w11, w11, lt
00000000000230f8	asr	w11, w11, #1
00000000000230fc	sbfiz	x12, x11, #4, #32
0000000000023100	ldr	w12, [x8, x12]
0000000000023104	cmp	w12, #0xa0
0000000000023108	csinc	w10, w10, w11, ge
000000000002310c	csel	w9, w9, w11, lt
0000000000023110	cmp	w10, w9
0000000000023114	b.lt	0x230ec
0000000000023118	b	0x23124
000000000002311c	mov	w10, #0x0
0000000000023120	b	0x23124
0000000000023124	sxtw	x9, w10
0000000000023128	add	x8, x8, x9, lsl #4
000000000002312c	ldr	x8, [x8, #0x8]
0000000000023130	ldr	x8, [x8, #0x8]
0000000000023134	mov	x0, x22
0000000000023138	mov	x1, x19
000000000002313c	blr	x8
0000000000023140	mov	x1, x0
0000000000023144	cbz	x23, 0x22ee0
0000000000023148	ldr	x8, [x23]
000000000002314c	and	x8, x8, #0xfffffffffffffffc
0000000000023150	ldr	x8, [x8]
0000000000023154	ldr	x8, [x8, #0x70]
0000000000023158	mov	x0, x23
000000000002315c	blr	x8
0000000000023160	tbnz	w0, #0x0, 0x22ee4
0000000000023164	mov	w0, #0x0
0000000000023168	b	0x23170
000000000002316c	mov	w0, #0x1
0000000000023170	ldr	x8, [sp, #0x8]
0000000000023174	str	x8, [x24, #0x110]
0000000000023178	ldp	x29, x30, [sp, #0x80]
000000000002317c	ldp	x20, x19, [sp, #0x70]
0000000000023180	ldp	x22, x21, [sp, #0x60]
0000000000023184	ldp	x24, x23, [sp, #0x50]
0000000000023188	ldp	x26, x25, [sp, #0x40]
000000000002318c	add	sp, sp, #0x90
0000000000023190	ret
_kfun:kotlin.collections.AbstractSet#equals(kotlin.Any?){}kotlin.Boolean:
0000000000023194	stp	x20, x19, [sp, #-0x20]!
0000000000023198	stp	x29, x30, [sp, #0x10]
000000000002319c	add	x29, sp, #0x10
00000000000231a0	mov	x19, x1
00000000000231a4	mov	x20, x0
00000000000231a8	adr	x8, #0x71361
00000000000231ac	nop
00000000000231b0	ldarb	w8, [x8]
00000000000231b4	tbz	w8, #0x0, 0x231bc
00000000000231b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000231bc	cmp	x19, x20
00000000000231c0	b.eq	0x231f8
00000000000231c4	cbz	x19, 0x232ac
00000000000231c8	ldr	x8, [x19]
00000000000231cc	and	x8, x8, #0xfffffffffffffffc
00000000000231d0	ldr	x8, [x8]
00000000000231d4	ldr	w9, [x8, #0x3c]
00000000000231d8	ldr	x8, [x8, #0x40]
00000000000231dc	tbnz	w9, #0x1f, 0x23208
00000000000231e0	and	x9, x9, #0x1e
00000000000231e4	lsl	x9, x9, #4
00000000000231e8	ldr	w8, [x8, x9]
00000000000231ec	cmp	w8, #0x1e
00000000000231f0	b.ne	0x232ac
00000000000231f4	b	0x232d0
00000000000231f8	mov	w0, #0x1
00000000000231fc	ldp	x29, x30, [sp, #0x10]
0000000000023200	ldp	x20, x19, [sp], #0x20
0000000000023204	ret
0000000000023208	neg	w10, w9
000000000002320c	mvn	w9, w9
0000000000023210	cmp	w10, #0x9
0000000000023214	b.ge	0x23260
0000000000023218	cmp	w10, #0x2
000000000002321c	b.lt	0x23294
0000000000023220	mov	x10, #0x0
0000000000023224	mov	x11, x8
0000000000023228	ldr	w12, [x11]
000000000002322c	cmp	w12, #0x1d
0000000000023230	b.gt	0x232bc
0000000000023234	add	x10, x10, #0x1
0000000000023238	add	x11, x11, #0x10
000000000002323c	cmp	x9, x10
0000000000023240	b.ne	0x23228
0000000000023244	mov	x10, x9
0000000000023248	sxtw	x9, w10
000000000002324c	lsl	x9, x9, #4
0000000000023250	ldr	w8, [x8, x9]
0000000000023254	cmp	w8, #0x1e
0000000000023258	b.ne	0x232ac
000000000002325c	b	0x232d0
0000000000023260	mov	w10, #0x0
0000000000023264	add	w11, w9, w10
0000000000023268	cmp	w11, #0x0
000000000002326c	cinc	w11, w11, lt
0000000000023270	asr	w11, w11, #1
0000000000023274	sbfiz	x12, x11, #4, #32
0000000000023278	ldr	w12, [x8, x12]
000000000002327c	cmp	w12, #0x1e
0000000000023280	csinc	w10, w10, w11, ge
0000000000023284	csel	w9, w9, w11, lt
0000000000023288	cmp	w10, w9
000000000002328c	b.lt	0x23264
0000000000023290	b	0x232bc
0000000000023294	mov	w10, #0x0
0000000000023298	sxtw	x9, w10
000000000002329c	lsl	x9, x9, #4
00000000000232a0	ldr	w8, [x8, x9]
00000000000232a4	cmp	w8, #0x1e
00000000000232a8	b.eq	0x232d0
00000000000232ac	mov	w0, #0x0
00000000000232b0	ldp	x29, x30, [sp, #0x10]
00000000000232b4	ldp	x20, x19, [sp], #0x20
00000000000232b8	ret
00000000000232bc	sxtw	x9, w10
00000000000232c0	lsl	x9, x9, #4
00000000000232c4	ldr	w8, [x8, x9]
00000000000232c8	cmp	w8, #0x1e
00000000000232cc	b.ne	0x232ac
00000000000232d0	mov	x0, x20
00000000000232d4	mov	x1, x19
00000000000232d8	ldp	x29, x30, [sp, #0x10]
00000000000232dc	ldp	x20, x19, [sp], #0x20
00000000000232e0	b	"_kfun:kotlin.collections.AbstractSet.Companion#setEquals(kotlin.collections.Set<*>;kotlin.collections.Set<*>){}kotlin.Boolean"
_kfun:kotlin.collections.AbstractSet#hashCode(){}kotlin.Int:
00000000000232e4	stp	x20, x19, [sp, #-0x20]!
00000000000232e8	stp	x29, x30, [sp, #0x10]
00000000000232ec	add	x29, sp, #0x10
00000000000232f0	mov	x19, x0
00000000000232f4	adr	x8, #0x71215
00000000000232f8	nop
00000000000232fc	ldarb	w8, [x8]
0000000000023300	tbz	w8, #0x0, 0x23308
0000000000023304	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023308	mov	x0, x19
000000000002330c	ldp	x29, x30, [sp, #0x10]
0000000000023310	ldp	x20, x19, [sp], #0x20
0000000000023314	b	"_kfun:kotlin.collections.AbstractSet.Companion#unorderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int"
_kfun:kotlin.collections.AbstractSet.Companion#unorderedHashCode(kotlin.collections.Collection<*>){}kotlin.Int:
0000000000023318	sub	sp, sp, #0x70
000000000002331c	stp	x24, x23, [sp, #0x30]
0000000000023320	stp	x22, x21, [sp, #0x40]
0000000000023324	stp	x20, x19, [sp, #0x50]
0000000000023328	stp	x29, x30, [sp, #0x60]
000000000002332c	add	x29, sp, #0x60
0000000000023330	mov	x20, x0
0000000000023334	movi.16b	v0, #0x0
0000000000023338	stp	q0, q0, [sp]
000000000002333c	str	xzr, [sp, #0x20]
0000000000023340	mov	x19, sp
0000000000023344	add	x21, x19, #0x18
0000000000023348	adrp	x0, 87 ; 0x7a000
000000000002334c	add	x0, x0, #0x4e0
0000000000023350	ldr	x8, [x0]
0000000000023354	blr	x8
0000000000023358	ldr	x22, [x0]
000000000002335c	ldr	x8, [x22, #0x110]
0000000000023360	str	x19, [x22, #0x110]
0000000000023364	mov	x9, #0x500000000
0000000000023368	stp	x8, x9, [sp, #0x8]
000000000002336c	adr	x23, #0x7119d
0000000000023370	nop
0000000000023374	ldarb	w8, [x23]
0000000000023378	tbz	w8, #0x0, 0x23380
000000000002337c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023380	add	x19, x19, #0x20
0000000000023384	ldr	x8, [x20]
0000000000023388	and	x8, x8, #0xfffffffffffffffc
000000000002338c	ldr	x8, [x8]
0000000000023390	ldr	w9, [x8, #0x3c]
0000000000023394	ldr	x8, [x8, #0x40]
0000000000023398	tbnz	w9, #0x1f, 0x233a8
000000000002339c	mov	w10, #0x12
00000000000233a0	and	x9, x9, x10
00000000000233a4	b	0x2342c
00000000000233a8	neg	w10, w9
00000000000233ac	mvn	w9, w9
00000000000233b0	cmp	w10, #0x9
00000000000233b4	b.ge	0x233ec
00000000000233b8	cmp	w10, #0x2
00000000000233bc	b.lt	0x23420
00000000000233c0	mov	x10, #0x0
00000000000233c4	mov	x11, x8
00000000000233c8	ldr	w12, [x11]
00000000000233cc	cmp	w12, #0x11
00000000000233d0	b.gt	0x23428
00000000000233d4	add	x10, x10, #0x1
00000000000233d8	add	x11, x11, #0x10
00000000000233dc	cmp	x9, x10
00000000000233e0	b.ne	0x233c8
00000000000233e4	mov	x10, x9
00000000000233e8	b	0x23428
00000000000233ec	mov	w10, #0x0
00000000000233f0	add	w11, w9, w10
00000000000233f4	cmp	w11, #0x0
00000000000233f8	cinc	w11, w11, lt
00000000000233fc	asr	w11, w11, #1
0000000000023400	sbfiz	x12, x11, #4, #32
0000000000023404	ldr	w12, [x8, x12]
0000000000023408	cmp	w12, #0x12
000000000002340c	csinc	w10, w10, w11, ge
0000000000023410	csel	w9, w9, w11, lt
0000000000023414	cmp	w10, w9
0000000000023418	b.lt	0x233f0
000000000002341c	b	0x23428
0000000000023420	mov	w10, #0x0
0000000000023424	b	0x23428
0000000000023428	sxtw	x9, w10
000000000002342c	add	x8, x8, x9, lsl #4
0000000000023430	ldr	x8, [x8, #0x8]
0000000000023434	ldr	x8, [x8, #0x20]
0000000000023438	mov	x0, x20
000000000002343c	mov	x1, x21
0000000000023440	blr	x8
0000000000023444	mov	x21, x0
0000000000023448	mov	w20, #0x0
000000000002344c	mov	w24, #0xa0
0000000000023450	b	0x23458
0000000000023454	add	w20, w20, w0
0000000000023458	ldr	x8, [x21]
000000000002345c	and	x8, x8, #0xfffffffffffffffc
0000000000023460	ldr	x8, [x8]
0000000000023464	ldr	w9, [x8, #0x3c]
0000000000023468	ldr	x8, [x8, #0x40]
000000000002346c	tbnz	w9, #0x1f, 0x23490
0000000000023470	and	x9, x9, x24
0000000000023474	add	x8, x8, x9, lsl #4
0000000000023478	ldr	x8, [x8, #0x8]
000000000002347c	ldr	x8, [x8]
0000000000023480	mov	x0, x21
0000000000023484	blr	x8
0000000000023488	tbnz	w0, #0x0, 0x2352c
000000000002348c	b	0x23610
0000000000023490	neg	w10, w9
0000000000023494	mvn	w9, w9
0000000000023498	cmp	w10, #0x9
000000000002349c	b.ge	0x234d4
00000000000234a0	cmp	w10, #0x2
00000000000234a4	b.lt	0x23508
00000000000234a8	mov	x10, #0x0
00000000000234ac	mov	x11, x8
00000000000234b0	ldr	w12, [x11]
00000000000234b4	cmp	w12, #0x9f
00000000000234b8	b.gt	0x23510
00000000000234bc	add	x10, x10, #0x1
00000000000234c0	add	x11, x11, #0x10
00000000000234c4	cmp	x9, x10
00000000000234c8	b.ne	0x234b0
00000000000234cc	mov	x10, x9
00000000000234d0	b	0x23510
00000000000234d4	mov	w10, #0x0
00000000000234d8	add	w11, w9, w10
00000000000234dc	cmp	w11, #0x0
00000000000234e0	cinc	w11, w11, lt
00000000000234e4	asr	w11, w11, #1
00000000000234e8	sbfiz	x12, x11, #4, #32
00000000000234ec	ldr	w12, [x8, x12]
00000000000234f0	cmp	w12, #0xa0
00000000000234f4	csinc	w10, w10, w11, ge
00000000000234f8	csel	w9, w9, w11, lt
00000000000234fc	cmp	w10, w9
0000000000023500	b.lt	0x234d8
0000000000023504	b	0x23510
0000000000023508	mov	w10, #0x0
000000000002350c	b	0x23510
0000000000023510	sxtw	x9, w10
0000000000023514	add	x8, x8, x9, lsl #4
0000000000023518	ldr	x8, [x8, #0x8]
000000000002351c	ldr	x8, [x8]
0000000000023520	mov	x0, x21
0000000000023524	blr	x8
0000000000023528	tbz	w0, #0x0, 0x23610
000000000002352c	ldarb	w8, [x23]
0000000000023530	tbz	w8, #0x0, 0x23538
0000000000023534	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023538	ldr	x8, [x21]
000000000002353c	and	x8, x8, #0xfffffffffffffffc
0000000000023540	ldr	x8, [x8]
0000000000023544	ldr	w9, [x8, #0x3c]
0000000000023548	ldr	x8, [x8, #0x40]
000000000002354c	tbnz	w9, #0x1f, 0x23558
0000000000023550	and	x9, x9, x24
0000000000023554	b	0x235dc
0000000000023558	neg	w10, w9
000000000002355c	mvn	w9, w9
0000000000023560	cmp	w10, #0x9
0000000000023564	b.ge	0x2359c
0000000000023568	cmp	w10, #0x2
000000000002356c	b.lt	0x235d0
0000000000023570	mov	x10, #0x0
0000000000023574	mov	x11, x8
0000000000023578	ldr	w12, [x11]
000000000002357c	cmp	w12, #0x9f
0000000000023580	b.gt	0x235d8
0000000000023584	add	x10, x10, #0x1
0000000000023588	add	x11, x11, #0x10
000000000002358c	cmp	x9, x10
0000000000023590	b.ne	0x23578
0000000000023594	mov	x10, x9
0000000000023598	b	0x235d8
000000000002359c	mov	w10, #0x0
00000000000235a0	add	w11, w9, w10
00000000000235a4	cmp	w11, #0x0
00000000000235a8	cinc	w11, w11, lt
00000000000235ac	asr	w11, w11, #1
00000000000235b0	sbfiz	x12, x11, #4, #32
00000000000235b4	ldr	w12, [x8, x12]
00000000000235b8	cmp	w12, #0xa0
00000000000235bc	csinc	w10, w10, w11, ge
00000000000235c0	csel	w9, w9, w11, lt
00000000000235c4	cmp	w10, w9
00000000000235c8	b.lt	0x235a0
00000000000235cc	b	0x235d8
00000000000235d0	mov	w10, #0x0
00000000000235d4	b	0x235d8
00000000000235d8	sxtw	x9, w10
00000000000235dc	add	x8, x8, x9, lsl #4
00000000000235e0	ldr	x8, [x8, #0x8]
00000000000235e4	ldr	x8, [x8, #0x8]
00000000000235e8	mov	x0, x21
00000000000235ec	mov	x1, x19
00000000000235f0	blr	x8
00000000000235f4	cbz	x0, 0x23454
00000000000235f8	ldr	x8, [x0]
00000000000235fc	and	x8, x8, #0xfffffffffffffffc
0000000000023600	ldr	x8, [x8]
0000000000023604	ldr	x8, [x8, #0x78]
0000000000023608	blr	x8
000000000002360c	b	0x23454
0000000000023610	ldr	x8, [sp, #0x8]
0000000000023614	str	x8, [x22, #0x110]
0000000000023618	mov	x0, x20
000000000002361c	ldp	x29, x30, [sp, #0x60]
0000000000023620	ldp	x20, x19, [sp, #0x50]
0000000000023624	ldp	x22, x21, [sp, #0x40]
0000000000023628	ldp	x24, x23, [sp, #0x30]
000000000002362c	add	sp, sp, #0x70
0000000000023630	ret
_kfun:kotlin.collections.AbstractSet.Companion#setEquals(kotlin.collections.Set<*>;kotlin.collections.Set<*>){}kotlin.Boolean:
0000000000023634	stp	x22, x21, [sp, #-0x30]!
0000000000023638	stp	x20, x19, [sp, #0x10]
000000000002363c	stp	x29, x30, [sp, #0x20]
0000000000023640	add	x29, sp, #0x20
0000000000023644	mov	x19, x1
0000000000023648	mov	x20, x0
000000000002364c	adr	x8, #0x70ebd
0000000000023650	nop
0000000000023654	ldarb	w8, [x8]
0000000000023658	tbz	w8, #0x0, 0x23660
000000000002365c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023660	ldr	x8, [x20]
0000000000023664	and	x8, x8, #0xfffffffffffffffc
0000000000023668	ldr	x8, [x8]
000000000002366c	ldr	w9, [x8, #0x3c]
0000000000023670	ldr	x8, [x8, #0x40]
0000000000023674	tbnz	w9, #0x1f, 0x23680
0000000000023678	and	x9, x9, #0x1e
000000000002367c	b	0x23704
0000000000023680	neg	w10, w9
0000000000023684	mvn	w9, w9
0000000000023688	cmp	w10, #0x9
000000000002368c	b.ge	0x236c4
0000000000023690	cmp	w10, #0x2
0000000000023694	b.lt	0x236f8
0000000000023698	mov	x10, #0x0
000000000002369c	mov	x11, x8
00000000000236a0	ldr	w12, [x11]
00000000000236a4	cmp	w12, #0x1d
00000000000236a8	b.gt	0x23700
00000000000236ac	add	x10, x10, #0x1
00000000000236b0	add	x11, x11, #0x10
00000000000236b4	cmp	x9, x10
00000000000236b8	b.ne	0x236a0
00000000000236bc	mov	x10, x9
00000000000236c0	b	0x23700
00000000000236c4	mov	w10, #0x0
00000000000236c8	add	w11, w9, w10
00000000000236cc	cmp	w11, #0x0
00000000000236d0	cinc	w11, w11, lt
00000000000236d4	asr	w11, w11, #1
00000000000236d8	sbfiz	x12, x11, #4, #32
00000000000236dc	ldr	w12, [x8, x12]
00000000000236e0	cmp	w12, #0x1e
00000000000236e4	csinc	w10, w10, w11, ge
00000000000236e8	csel	w9, w9, w11, lt
00000000000236ec	cmp	w10, w9
00000000000236f0	b.lt	0x236c8
00000000000236f4	b	0x23700
00000000000236f8	mov	w10, #0x0
00000000000236fc	b	0x23700
0000000000023700	sxtw	x9, w10
0000000000023704	add	x8, x8, x9, lsl #4
0000000000023708	ldr	x8, [x8, #0x8]
000000000002370c	ldr	x8, [x8]
0000000000023710	mov	x0, x20
0000000000023714	blr	x8
0000000000023718	mov	x21, x0
000000000002371c	ldr	x8, [x19]
0000000000023720	and	x8, x8, #0xfffffffffffffffc
0000000000023724	ldr	x8, [x8]
0000000000023728	ldr	w9, [x8, #0x3c]
000000000002372c	ldr	x8, [x8, #0x40]
0000000000023730	tbnz	w9, #0x1f, 0x2373c
0000000000023734	and	x9, x9, #0x1e
0000000000023738	b	0x237c0
000000000002373c	neg	w10, w9
0000000000023740	mvn	w9, w9
0000000000023744	cmp	w10, #0x9
0000000000023748	b.ge	0x23780
000000000002374c	cmp	w10, #0x2
0000000000023750	b.lt	0x237b4
0000000000023754	mov	x10, #0x0
0000000000023758	mov	x11, x8
000000000002375c	ldr	w12, [x11]
0000000000023760	cmp	w12, #0x1d
0000000000023764	b.gt	0x237bc
0000000000023768	add	x10, x10, #0x1
000000000002376c	add	x11, x11, #0x10
0000000000023770	cmp	x9, x10
0000000000023774	b.ne	0x2375c
0000000000023778	mov	x10, x9
000000000002377c	b	0x237bc
0000000000023780	mov	w10, #0x0
0000000000023784	add	w11, w9, w10
0000000000023788	cmp	w11, #0x0
000000000002378c	cinc	w11, w11, lt
0000000000023790	asr	w11, w11, #1
0000000000023794	sbfiz	x12, x11, #4, #32
0000000000023798	ldr	w12, [x8, x12]
000000000002379c	cmp	w12, #0x1e
00000000000237a0	csinc	w10, w10, w11, ge
00000000000237a4	csel	w9, w9, w11, lt
00000000000237a8	cmp	w10, w9
00000000000237ac	b.lt	0x23784
00000000000237b0	b	0x237bc
00000000000237b4	mov	w10, #0x0
00000000000237b8	b	0x237bc
00000000000237bc	sxtw	x9, w10
00000000000237c0	add	x8, x8, x9, lsl #4
00000000000237c4	ldr	x8, [x8, #0x8]
00000000000237c8	ldr	x8, [x8]
00000000000237cc	mov	x0, x19
00000000000237d0	blr	x8
00000000000237d4	cmp	w21, w0
00000000000237d8	b.ne	0x23800
00000000000237dc	ldr	x8, [x20]
00000000000237e0	and	x8, x8, #0xfffffffffffffffc
00000000000237e4	ldr	x8, [x8]
00000000000237e8	ldr	w9, [x8, #0x3c]
00000000000237ec	ldr	x8, [x8, #0x40]
00000000000237f0	tbnz	w9, #0x1f, 0x23814
00000000000237f4	mov	w10, #0x12
00000000000237f8	and	x9, x9, x10
00000000000237fc	b	0x23898
0000000000023800	mov	w0, #0x0
0000000000023804	ldp	x29, x30, [sp, #0x20]
0000000000023808	ldp	x20, x19, [sp, #0x10]
000000000002380c	ldp	x22, x21, [sp], #0x30
0000000000023810	ret
0000000000023814	neg	w10, w9
0000000000023818	mvn	w9, w9
000000000002381c	cmp	w10, #0x9
0000000000023820	b.ge	0x23858
0000000000023824	cmp	w10, #0x2
0000000000023828	b.lt	0x2388c
000000000002382c	mov	x10, #0x0
0000000000023830	mov	x11, x8
0000000000023834	ldr	w12, [x11]
0000000000023838	cmp	w12, #0x11
000000000002383c	b.gt	0x23894
0000000000023840	add	x10, x10, #0x1
0000000000023844	add	x11, x11, #0x10
0000000000023848	cmp	x9, x10
000000000002384c	b.ne	0x23834
0000000000023850	mov	x10, x9
0000000000023854	b	0x23894
0000000000023858	mov	w10, #0x0
000000000002385c	add	w11, w9, w10
0000000000023860	cmp	w11, #0x0
0000000000023864	cinc	w11, w11, lt
0000000000023868	asr	w11, w11, #1
000000000002386c	sbfiz	x12, x11, #4, #32
0000000000023870	ldr	w12, [x8, x12]
0000000000023874	cmp	w12, #0x12
0000000000023878	csinc	w10, w10, w11, ge
000000000002387c	csel	w9, w9, w11, lt
0000000000023880	cmp	w10, w9
0000000000023884	b.lt	0x2385c
0000000000023888	b	0x23894
000000000002388c	mov	w10, #0x0
0000000000023890	b	0x23894
0000000000023894	sxtw	x9, w10
0000000000023898	add	x8, x8, x9, lsl #4
000000000002389c	ldr	x8, [x8, #0x8]
00000000000238a0	ldr	x2, [x8, #0x10]
00000000000238a4	mov	x0, x20
00000000000238a8	mov	x1, x19
00000000000238ac	ldp	x29, x30, [sp, #0x20]
00000000000238b0	ldp	x20, x19, [sp, #0x10]
00000000000238b4	ldp	x22, x21, [sp], #0x30
00000000000238b8	br	x2
_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0§<kotlin.Any?>}kotlin.Int:
00000000000238bc	stp	x20, x19, [sp, #-0x20]!
00000000000238c0	stp	x29, x30, [sp, #0x10]
00000000000238c4	add	x29, sp, #0x10
00000000000238c8	mov	x19, x0
00000000000238cc	adr	x8, #0x70c3d
00000000000238d0	nop
00000000000238d4	ldarb	w8, [x8]
00000000000238d8	tbz	w8, #0x0, 0x238e0
00000000000238dc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000238e0	ldr	x8, [x19]
00000000000238e4	and	x8, x8, #0xfffffffffffffffc
00000000000238e8	ldr	x8, [x8]
00000000000238ec	ldr	w9, [x8, #0x3c]
00000000000238f0	ldr	x8, [x8, #0x40]
00000000000238f4	tbnz	w9, #0x1f, 0x23904
00000000000238f8	mov	w10, #0x2b
00000000000238fc	and	x9, x9, x10
0000000000023900	b	0x23988
0000000000023904	neg	w10, w9
0000000000023908	mvn	w9, w9
000000000002390c	cmp	w10, #0x9
0000000000023910	b.ge	0x23948
0000000000023914	cmp	w10, #0x2
0000000000023918	b.lt	0x2397c
000000000002391c	mov	x10, #0x0
0000000000023920	mov	x11, x8
0000000000023924	ldr	w12, [x11]
0000000000023928	cmp	w12, #0x2a
000000000002392c	b.gt	0x23984
0000000000023930	add	x10, x10, #0x1
0000000000023934	add	x11, x11, #0x10
0000000000023938	cmp	x9, x10
000000000002393c	b.ne	0x23924
0000000000023940	mov	x10, x9
0000000000023944	b	0x23984
0000000000023948	mov	w10, #0x0
000000000002394c	add	w11, w9, w10
0000000000023950	cmp	w11, #0x0
0000000000023954	cinc	w11, w11, lt
0000000000023958	asr	w11, w11, #1
000000000002395c	sbfiz	x12, x11, #4, #32
0000000000023960	ldr	w12, [x8, x12]
0000000000023964	cmp	w12, #0x2b
0000000000023968	csinc	w10, w10, w11, ge
000000000002396c	csel	w9, w9, w11, lt
0000000000023970	cmp	w10, w9
0000000000023974	b.lt	0x2394c
0000000000023978	b	0x23984
000000000002397c	mov	w10, #0x0
0000000000023980	b	0x23984
0000000000023984	sxtw	x9, w10
0000000000023988	add	x8, x8, x9, lsl #4
000000000002398c	ldr	x8, [x8, #0x8]
0000000000023990	ldr	x8, [x8]
0000000000023994	mov	x0, x19
0000000000023998	blr	x8
000000000002399c	sub	w0, w0, #0x1
00000000000239a0	ldp	x29, x30, [sp, #0x10]
00000000000239a4	ldp	x20, x19, [sp], #0x20
00000000000239a8	ret
_kfun:kotlin.collections#removeAll__at__kotlin.collections.MutableList<0:0>(kotlin.Function1<0:0,kotlin.Boolean>){0§<kotlin.Any?>}kotlin.Boolean:
00000000000239ac	sub	sp, sp, #0xb0
00000000000239b0	stp	x28, x27, [sp, #0x50]
00000000000239b4	stp	x26, x25, [sp, #0x60]
00000000000239b8	stp	x24, x23, [sp, #0x70]
00000000000239bc	stp	x22, x21, [sp, #0x80]
00000000000239c0	stp	x20, x19, [sp, #0x90]
00000000000239c4	stp	x29, x30, [sp, #0xa0]
00000000000239c8	add	x29, sp, #0xa0
00000000000239cc	mov	x21, x1
00000000000239d0	mov	x20, x0
00000000000239d4	adr	x19, #0x70b35
00000000000239d8	nop
00000000000239dc	ldarb	w8, [x19]
00000000000239e0	tbz	w8, #0x0, 0x239e8
00000000000239e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000239e8	movi.16b	v0, #0x0
00000000000239ec	stp	q0, q0, [sp, #0x10]
00000000000239f0	str	xzr, [sp, #0x40]
00000000000239f4	str	q0, [sp, #0x30]
00000000000239f8	add	x27, sp, #0x10
00000000000239fc	adrp	x22, 87 ; 0x7a000
0000000000023a00	add	x22, x22, #0x4e0
0000000000023a04	ldr	x26, [x22]
0000000000023a08	mov	x0, x22
0000000000023a0c	blr	x26
0000000000023a10	ldr	x8, [x0]
0000000000023a14	ldr	x9, [x8, #0x110]
0000000000023a18	str	x27, [x8, #0x110]
0000000000023a1c	mov	x8, #0x700000000
0000000000023a20	stp	x9, x8, [sp, #0x18]
0000000000023a24	cbz	x20, 0x23dd8
0000000000023a28	ldr	x8, [x20]
0000000000023a2c	and	x8, x8, #0xfffffffffffffffc
0000000000023a30	ldr	x8, [x8]
0000000000023a34	ldr	w9, [x8, #0x3c]
0000000000023a38	ldr	x8, [x8, #0x40]
0000000000023a3c	tbnz	w9, #0x1f, 0x23d0c
0000000000023a40	mov	w10, #0xb8
0000000000023a44	and	x9, x9, x10
0000000000023a48	lsl	x9, x9, #4
0000000000023a4c	ldr	w8, [x8, x9]
0000000000023a50	cmp	w8, #0xb8
0000000000023a54	b.ne	0x23dd8
0000000000023a58	str	x26, [sp]
0000000000023a5c	mov	x0, x20
0000000000023a60	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0§<kotlin.Any?>}kotlin.Int"
0000000000023a64	tbnz	w0, #0x1f, 0x23d64
0000000000023a68	mov	x23, x0
0000000000023a6c	mov	w25, #0x0
0000000000023a70	mov	w22, #0x0
0000000000023a74	add	x24, x27, #0x20
0000000000023a78	add	x26, x27, #0x18
0000000000023a7c	add	x8, x27, #0x28
0000000000023a80	str	x8, [sp, #0x8]
0000000000023a84	mov	w27, #0x2c
0000000000023a88	b	0x23ac8
0000000000023a8c	mov	w10, #0x16
0000000000023a90	and	x9, x9, x10
0000000000023a94	add	x8, x8, x9, lsl #4
0000000000023a98	ldr	x8, [x8, #0x8]
0000000000023a9c	ldr	x8, [x8, #0x58]
0000000000023aa0	mov	x0, x20
0000000000023aa4	mov	x1, x22
0000000000023aa8	mov	x2, x28
0000000000023aac	ldr	x3, [sp, #0x8]
0000000000023ab0	blr	x8
0000000000023ab4	add	w22, w22, #0x1
0000000000023ab8	add	w8, w25, #0x1
0000000000023abc	cmp	w25, w23
0000000000023ac0	mov	x25, x8
0000000000023ac4	b.eq	0x23d68
0000000000023ac8	ldarb	w8, [x19]
0000000000023acc	tbz	w8, #0x0, 0x23ad4
0000000000023ad0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000023ad4	ldr	x8, [x20]
0000000000023ad8	and	x8, x8, #0xfffffffffffffffc
0000000000023adc	ldr	x8, [x8]
0000000000023ae0	ldr	w9, [x8, #0x3c]
0000000000023ae4	ldr	x8, [x8, #0x40]
0000000000023ae8	tbnz	w9, #0x1f, 0x23af8
0000000000023aec	mov	w10, #0x2b
0000000000023af0	and	x9, x9, x10
0000000000023af4	b	0x23b7c
0000000000023af8	neg	w10, w9
0000000000023afc	mvn	w9, w9
0000000000023b00	cmp	w10, #0x9
0000000000023b04	b.ge	0x23b3c
0000000000023b08	cmp	w10, #0x2
0000000000023b0c	b.lt	0x23b70
0000000000023b10	mov	x10, #0x0
0000000000023b14	mov	x11, x8
0000000000023b18	ldr	w12, [x11]
0000000000023b1c	cmp	w12, #0x2a
0000000000023b20	b.gt	0x23b78
0000000000023b24	add	x10, x10, #0x1
0000000000023b28	add	x11, x11, #0x10
0000000000023b2c	cmp	x9, x10
0000000000023b30	b.ne	0x23b18
0000000000023b34	mov	x10, x9
0000000000023b38	b	0x23b78
0000000000023b3c	mov	w10, #0x0
0000000000023b40	add	w11, w9, w10
0000000000023b44	cmp	w11, #0x0
0000000000023b48	cinc	w11, w11, lt
0000000000023b4c	asr	w11, w11, #1
0000000000023b50	sbfiz	x12, x11, #4, #32
0000000000023b54	ldr	w12, [x8, x12]
0000000000023b58	cmp	w12, #0x2b
0000000000023b5c	csinc	w10, w10, w11, ge
0000000000023b60	csel	w9, w9, w11, lt
0000000000023b64	cmp	w10, w9
0000000000023b68	b.lt	0x23b40
0000000000023b6c	b	0x23b78
0000000000023b70	mov	w10, #0x0
0000000000023b74	b	0x23b78
0000000000023b78	sxtw	x9, w10
0000000000023b7c	add	x8, x8, x9, lsl #4
0000000000023b80	ldr	x8, [x8, #0x8]
0000000000023b84	ldr	x8, [x8, #0x18]
0000000000023b88	mov	x0, x20
0000000000023b8c	mov	x1, x25
0000000000023b90	mov	x2, x26
0000000000023b94	blr	x8
0000000000023b98	mov	x28, x0
0000000000023b9c	ldr	x8, [x21]
0000000000023ba0	and	x8, x8, #0xfffffffffffffffc
0000000000023ba4	ldr	x8, [x8]
0000000000023ba8	ldr	w9, [x8, #0x3c]
0000000000023bac	ldr	x8, [x8, #0x40]
0000000000023bb0	tbnz	w9, #0x1f, 0x23bbc
0000000000023bb4	and	x9, x9, x27
0000000000023bb8	b	0x23c40
0000000000023bbc	neg	w10, w9
0000000000023bc0	mvn	w9, w9
0000000000023bc4	cmp	w10, #0x9
0000000000023bc8	b.ge	0x23c00
0000000000023bcc	cmp	w10, #0x2
0000000000023bd0	b.lt	0x23c34
0000000000023bd4	mov	x10, #0x0
0000000000023bd8	mov	x11, x8
0000000000023bdc	ldr	w12, [x11]
0000000000023be0	cmp	w12, #0x2b
0000000000023be4	b.gt	0x23c3c
0000000000023be8	add	x10, x10, #0x1
0000000000023bec	add	x11, x11, #0x10
0000000000023bf0	cmp	x9, x10
0000000000023bf4	b.ne	0x23bdc
0000000000023bf8	mov	x10, x9
0000000000023bfc	b	0x23c3c
0000000000023c00	mov	w10, #0x0
0000000000023c04	add	w11, w9, w10
0000000000023c08	cmp	w11, #0x0
0000000000023c0c	cinc	w11, w11, lt
0000000000023c10	asr	w11, w11, #1
0000000000023c14	sbfiz	x12, x11, #4, #32
0000000000023c18	ldr	w12, [x8, x12]
0000000000023c1c	cmp	w12, #0x2c
0000000000023c20	csinc	w10, w10, w11, ge
0000000000023c24	csel	w9, w9, w11, lt
0000000000023c28	cmp	w10, w9
0000000000023c2c	b.lt	0x23c04
0000000000023c30	b	0x23c3c
0000000000023c34	mov	w10, #0x0
0000000000023c38	b	0x23c3c
0000000000023c3c	sxtw	x9, w10
0000000000023c40	add	x8, x8, x9, lsl #4
0000000000023c44	ldr	x8, [x8, #0x8]
0000000000023c48	ldr	x8, [x8]
0000000000023c4c	mov	x0, x21
0000000000023c50	mov	x1, x28
0000000000023c54	mov	x2, x24
0000000000023c58	blr	x8
0000000000023c5c	ldrb	w8, [x0, #0x8]
0000000000023c60	tbnz	w8, #0x0, 0x23ab8
0000000000023c64	cmp	w22, w25
0000000000023c68	b.eq	0x23ab4
0000000000023c6c	ldr	x8, [x20]
0000000000023c70	and	x8, x8, #0xfffffffffffffffc
0000000000023c74	ldr	x8, [x8]
0000000000023c78	ldr	w9, [x8, #0x3c]
0000000000023c7c	ldr	x8, [x8, #0x40]
0000000000023c80	tbz	w9, #0x1f, 0x23a8c
0000000000023c84	neg	w10, w9
0000000000023c88	mvn	w9, w9
0000000000023c8c	cmp	w10, #0x9
0000000000023c90	b.ge	0x23cc8
0000000000023c94	cmp	w10, #0x2
0000000000023c98	b.lt	0x23cfc
0000000000023c9c	mov	x10, #0x0
0000000000023ca0	mov	x11, x8
0000000000023ca4	ldr	w12, [x11]
0000000000023ca8	cmp	w12, #0x15
0000000000023cac	b.gt	0x23d04
0000000000023cb0	add	x10, x10, #0x1
0000000000023cb4	add	x11, x11, #0x10
0000000000023cb8	cmp	x9, x10
0000000000023cbc	b.ne	0x23ca4
0000000000023cc0	mov	x10, x9
0000000000023cc4	b	0x23d04
0000000000023cc8	mov	w10, #0x0
0000000000023ccc	add	w11, w9, w10
0000000000023cd0	cmp	w11, #0x0
0000000000023cd4	cinc	w11, w11, lt
0000000000023cd8	asr	w11, w11, #1
0000000000023cdc	sbfiz	x12, x11, #4, #32
0000000000023ce0	ldr	w12, [x8, x12]
0000000000023ce4	cmp	w12, #0x16
0000000000023ce8	csinc	w10, w10, w11, ge
0000000000023cec	csel	w9, w9, w11, lt
0000000000023cf0	cmp	w10, w9
0000000000023cf4	b.lt	0x23ccc
0000000000023cf8	b	0x23d04
0000000000023cfc	mov	w10, #0x0
0000000000023d00	b	0x23d04
0000000000023d04	sxtw	x9, w10
0000000000023d08	b	0x23a94
0000000000023d0c	neg	w10, w9
0000000000023d10	mvn	w9, w9
0000000000023d14	cmp	w10, #0x9
0000000000023d18	b.ge	0x23d94
0000000000023d1c	cmp	w10, #0x2
0000000000023d20	b.lt	0x23f54
0000000000023d24	mov	x10, #0x0
0000000000023d28	mov	x11, x8
0000000000023d2c	ldr	w12, [x11]
0000000000023d30	cmp	w12, #0xb7
0000000000023d34	b.gt	0x23fbc
0000000000023d38	add	x10, x10, #0x1
0000000000023d3c	add	x11, x11, #0x10
0000000000023d40	cmp	x9, x10
0000000000023d44	b.ne	0x23d2c
0000000000023d48	mov	x10, x9
0000000000023d4c	sxtw	x9, w10
0000000000023d50	lsl	x9, x9, #4
0000000000023d54	ldr	w8, [x8, x9]
0000000000023d58	cmp	w8, #0xb8
0000000000023d5c	b.ne	0x23dd8
0000000000023d60	b	0x23a58
0000000000023d64	mov	w22, #0x0
0000000000023d68	ldr	x8, [x20]
0000000000023d6c	and	x8, x8, #0xfffffffffffffffc
0000000000023d70	ldr	x8, [x8]
0000000000023d74	ldr	w9, [x8, #0x3c]
0000000000023d78	ldr	x8, [x8, #0x40]
0000000000023d7c	tbnz	w9, #0x1f, 0x23ee0
0000000000023d80	mov	w10, #0x2b
0000000000023d84	and	x9, x9, x10
0000000000023d88	ldr	x26, [sp]
0000000000023d8c	add	x23, sp, #0x10
0000000000023d90	b	0x23fe0
0000000000023d94	mov	w10, #0x0
0000000000023d98	add	w11, w9, w10
0000000000023d9c	cmp	w11, #0x0
0000000000023da0	cinc	w11, w11, lt
0000000000023da4	asr	w11, w11, #1
0000000000023da8	sbfiz	x12, x11, #4, #32
0000000000023dac	ldr	w12, [x8, x12]
0000000000023db0	cmp	w12, #0xb8
0000000000023db4	csinc	w10, w10, w11, ge
0000000000023db8	csel	w9, w9, w11, lt
0000000000023dbc	cmp	w10, w9
0000000000023dc0	b.lt	0x23d98
0000000000023dc4	sxtw	x9, w10
0000000000023dc8	lsl	x9, x9, #4
0000000000023dcc	ldr	w8, [x8, x9]
0000000000023dd0	cmp	w8, #0xb8
0000000000023dd4	b.eq	0x23a58
0000000000023dd8	ldr	x8, [x20]
0000000000023ddc	and	x8, x8, #0xfffffffffffffffc
0000000000023de0	ldr	x8, [x8]
0000000000023de4	ldr	w9, [x8, #0x3c]
0000000000023de8	ldr	x8, [x8, #0x40]
0000000000023dec	tbnz	w9, #0x1f, 0x23e54
0000000000023df0	mov	w10, #0x24
0000000000023df4	and	x9, x9, x10
0000000000023df8	lsl	x9, x9, #4
0000000000023dfc	ldr	w8, [x8, x9]
0000000000023e00	cmp	w8, #0x24
0000000000023e04	b.ne	0x23f44
0000000000023e08	mov	x0, x20
0000000000023e0c	mov	x1, x21
0000000000023e10	mov	w2, #0x1
0000000000023e14	bl	"_kfun:kotlin.collections.filterInPlace#internal.14"
0000000000023e18	mov	x8, x0
0000000000023e1c	mov	x0, x22
0000000000023e20	blr	x26
0000000000023e24	ldr	x9, [x0]
0000000000023e28	ldr	x10, [sp, #0x18]
0000000000023e2c	str	x10, [x9, #0x110]
0000000000023e30	mov	x0, x8
0000000000023e34	ldp	x29, x30, [sp, #0xa0]
0000000000023e38	ldp	x20, x19, [sp, #0x90]
0000000000023e3c	ldp	x22, x21, [sp, #0x80]
0000000000023e40	ldp	x24, x23, [sp, #0x70]
0000000000023e44	ldp	x26, x25, [sp, #0x60]
0000000000023e48	ldp	x28, x27, [sp, #0x50]
0000000000023e4c	add	sp, sp, #0xb0
0000000000023e50	ret
0000000000023e54	neg	w10, w9
0000000000023e58	mvn	w9, w9
0000000000023e5c	cmp	w10, #0x9
0000000000023e60	b.ge	0x23eac
0000000000023e64	cmp	w10, #0x2
0000000000023e68	b.lt	0x23f2c
0000000000023e6c	mov	x10, #0x0
0000000000023e70	mov	x11, x8
0000000000023e74	ldr	w12, [x11]
0000000000023e78	cmp	w12, #0x23
0000000000023e7c	b.gt	0x23fa4
0000000000023e80	add	x10, x10, #0x1
0000000000023e84	add	x11, x11, #0x10
0000000000023e88	cmp	x9, x10
0000000000023e8c	b.ne	0x23e74
0000000000023e90	mov	x10, x9
0000000000023e94	sxtw	x9, w10
0000000000023e98	lsl	x9, x9, #4
0000000000023e9c	ldr	w8, [x8, x9]
0000000000023ea0	cmp	w8, #0x24
0000000000023ea4	b.eq	0x23e08
0000000000023ea8	b	0x23f44
0000000000023eac	mov	w10, #0x0
0000000000023eb0	add	w11, w9, w10
0000000000023eb4	cmp	w11, #0x0
0000000000023eb8	cinc	w11, w11, lt
0000000000023ebc	asr	w11, w11, #1
0000000000023ec0	sbfiz	x12, x11, #4, #32
0000000000023ec4	ldr	w12, [x8, x12]
0000000000023ec8	cmp	w12, #0x24
0000000000023ecc	csinc	w10, w10, w11, ge
0000000000023ed0	csel	w9, w9, w11, lt
0000000000023ed4	cmp	w10, w9
0000000000023ed8	b.lt	0x23eb0
0000000000023edc	b	0x23f30
0000000000023ee0	neg	w10, w9
0000000000023ee4	mvn	w9, w9
0000000000023ee8	cmp	w10, #0x9
0000000000023eec	ldr	x26, [sp]
0000000000023ef0	add	x23, sp, #0x10
0000000000023ef4	b.ge	0x23f70
0000000000023ef8	cmp	w10, #0x2
0000000000023efc	b.lt	0x23fd4
0000000000023f00	mov	x10, #0x0
0000000000023f04	mov	x11, x8
0000000000023f08	ldr	w12, [x11]
0000000000023f0c	cmp	w12, #0x2a
0000000000023f10	b.gt	0x23fdc
0000000000023f14	add	x10, x10, #0x1
0000000000023f18	add	x11, x11, #0x10
0000000000023f1c	cmp	x9, x10
0000000000023f20	b.ne	0x23f08
0000000000023f24	mov	x10, x9
0000000000023f28	b	0x23fdc
0000000000023f2c	mov	w10, #0x0
0000000000023f30	sxtw	x9, w10
0000000000023f34	lsl	x9, x9, #4
0000000000023f38	ldr	w8, [x8, x9]
0000000000023f3c	cmp	w8, #0x24
0000000000023f40	b.eq	0x23e08
0000000000023f44	adr	x1, #0x4004c
0000000000023f48	nop
0000000000023f4c	mov	x0, x20
0000000000023f50	bl	_ThrowClassCastException
0000000000023f54	mov	w10, #0x0
0000000000023f58	sxtw	x9, w10
0000000000023f5c	lsl	x9, x9, #4
0000000000023f60	ldr	w8, [x8, x9]
0000000000023f64	cmp	w8, #0xb8
0000000000023f68	b.eq	0x23a58
0000000000023f6c	b	0x23dd8
0000000000023f70	mov	w10, #0x0
0000000000023f74	add	w11, w9, w10
0000000000023f78	cmp	w11, #0x0
0000000000023f7c	cinc	w11, w11, lt
0000000000023f80	asr	w11, w11, #1
0000000000023f84	sbfiz	x12, x11, #4, #32
0000000000023f88	ldr	w12, [x8, x12]
0000000000023f8c	cmp	w12, #0x2b
0000000000023f90	csinc	w10, w10, w11, ge
0000000000023f94	csel	w9, w9, w11, lt
0000000000023f98	cmp	w10, w9
0000000000023f9c	b.lt	0x23f74
0000000000023fa0	b	0x23fdc
0000000000023fa4	sxtw	x9, w10
0000000000023fa8	lsl	x9, x9, #4
0000000000023fac	ldr	w8, [x8, x9]
0000000000023fb0	cmp	w8, #0x24
0000000000023fb4	b.eq	0x23e08
0000000000023fb8	b	0x23f44
0000000000023fbc	sxtw	x9, w10
0000000000023fc0	lsl	x9, x9, #4
0000000000023fc4	ldr	w8, [x8, x9]
0000000000023fc8	cmp	w8, #0xb8
0000000000023fcc	b.ne	0x23dd8
0000000000023fd0	b	0x23a58
0000000000023fd4	mov	w10, #0x0
0000000000023fd8	b	0x23fdc
0000000000023fdc	sxtw	x9, w10
0000000000023fe0	add	x8, x8, x9, lsl #4
0000000000023fe4	ldr	x8, [x8, #0x8]
0000000000023fe8	ldr	x8, [x8]
0000000000023fec	mov	x0, x20
0000000000023ff0	blr	x8
0000000000023ff4	cmp	w22, w0
0000000000023ff8	b.ge	0x2401c
0000000000023ffc	mov	x0, x20
0000000000024000	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0§<kotlin.Any?>}kotlin.Int"
0000000000024004	cmp	w22, w0
0000000000024008	b.le	0x2402c
000000000002400c	mov	w8, #0x1
0000000000024010	adrp	x22, 86 ; 0x7a000
0000000000024014	add	x22, x22, #0x4e0
0000000000024018	b	0x23e1c
000000000002401c	mov	w8, #0x0
0000000000024020	adrp	x22, 86 ; 0x7a000
0000000000024024	add	x22, x22, #0x4e0
0000000000024028	b	0x23e1c
000000000002402c	mov	x21, x0
0000000000024030	add	x23, x23, #0x30
0000000000024034	mov	w24, #0x16
0000000000024038	b	0x24084
000000000002403c	sub	w25, w21, #0x1
0000000000024040	ldr	x8, [x20]
0000000000024044	and	x8, x8, #0xfffffffffffffffc
0000000000024048	ldr	x8, [x8]
000000000002404c	ldr	w9, [x8, #0x3c]
0000000000024050	ldr	x8, [x8, #0x40]
0000000000024054	tbnz	w9, #0x1f, 0x24094
0000000000024058	and	x9, x9, x24
000000000002405c	add	x8, x8, x9, lsl #4
0000000000024060	ldr	x8, [x8, #0x8]
0000000000024064	ldr	x8, [x8, #0x48]
0000000000024068	mov	x0, x20
000000000002406c	mov	x1, x21
0000000000024070	mov	x2, x23
0000000000024074	blr	x8
0000000000024078	cmp	w21, w22
000000000002407c	mov	x21, x25
0000000000024080	b.eq	0x2400c
0000000000024084	ldarb	w8, [x19]
0000000000024088	tbz	w8, #0x0, 0x2403c
000000000002408c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024090	b	0x2403c
0000000000024094	neg	w10, w9
0000000000024098	mvn	w9, w9
000000000002409c	cmp	w10, #0x9
00000000000240a0	b.ge	0x240dc
00000000000240a4	cmp	w10, #0x2
00000000000240a8	b.lt	0x24110
00000000000240ac	mov	x10, #0x0
00000000000240b0	mov	x11, x8
00000000000240b4	ldr	w12, [x11]
00000000000240b8	cmp	w12, #0x15
00000000000240bc	b.gt	0x2411c
00000000000240c0	add	x10, x10, #0x1
00000000000240c4	add	x11, x11, #0x10
00000000000240c8	cmp	x9, x10
00000000000240cc	b.ne	0x240b4
00000000000240d0	mov	x10, x9
00000000000240d4	sxtw	x9, w10
00000000000240d8	b	0x2405c
00000000000240dc	mov	w10, #0x0
00000000000240e0	add	w11, w9, w10
00000000000240e4	cmp	w11, #0x0
00000000000240e8	cinc	w11, w11, lt
00000000000240ec	asr	w11, w11, #1
00000000000240f0	sbfiz	x12, x11, #4, #32
00000000000240f4	ldr	w12, [x8, x12]
00000000000240f8	cmp	w12, #0x16
00000000000240fc	csinc	w10, w10, w11, ge
0000000000024100	csel	w9, w9, w11, lt
0000000000024104	cmp	w10, w9
0000000000024108	b.lt	0x240e0
000000000002410c	b	0x2411c
0000000000024110	mov	w10, #0x0
0000000000024114	sxtw	x9, w10
0000000000024118	b	0x2405c
000000000002411c	sxtw	x9, w10
0000000000024120	b	0x2405c
_kfun:kotlin.collections.filterInPlace#internal.14:
0000000000024124	sub	sp, sp, #0x90
0000000000024128	stp	x28, x27, [sp, #0x30]
000000000002412c	stp	x26, x25, [sp, #0x40]
0000000000024130	stp	x24, x23, [sp, #0x50]
0000000000024134	stp	x22, x21, [sp, #0x60]
0000000000024138	stp	x20, x19, [sp, #0x70]
000000000002413c	stp	x29, x30, [sp, #0x80]
0000000000024140	add	x29, sp, #0x80
0000000000024144	mov	x19, x2
0000000000024148	mov	x20, x1
000000000002414c	mov	x23, x0
0000000000024150	movi.16b	v0, #0x0
0000000000024154	stp	q0, q0, [sp]
0000000000024158	str	q0, [sp, #0x20]
000000000002415c	mov	x22, sp
0000000000024160	add	x24, x22, #0x18
0000000000024164	adrp	x0, 86 ; 0x7a000
0000000000024168	add	x0, x0, #0x4e0
000000000002416c	ldr	x8, [x0]
0000000000024170	blr	x8
0000000000024174	ldr	x25, [x0]
0000000000024178	ldr	x8, [x25, #0x110]
000000000002417c	str	x22, [x25, #0x110]
0000000000024180	mov	x9, #0x600000000
0000000000024184	stp	x8, x9, [sp, #0x8]
0000000000024188	adr	x26, #0x70381
000000000002418c	nop
0000000000024190	ldarb	w8, [x26]
0000000000024194	tbz	w8, #0x0, 0x2419c
0000000000024198	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002419c	add	x21, x22, #0x20
00000000000241a0	add	x22, x22, #0x28
00000000000241a4	ldr	x8, [x23]
00000000000241a8	and	x8, x8, #0xfffffffffffffffc
00000000000241ac	ldr	x8, [x8]
00000000000241b0	ldr	w9, [x8, #0x3c]
00000000000241b4	ldr	x8, [x8, #0x40]
00000000000241b8	tbnz	w9, #0x1f, 0x241c8
00000000000241bc	mov	w10, #0x24
00000000000241c0	and	x9, x9, x10
00000000000241c4	b	0x2424c
00000000000241c8	neg	w10, w9
00000000000241cc	mvn	w9, w9
00000000000241d0	cmp	w10, #0x9
00000000000241d4	b.ge	0x2420c
00000000000241d8	cmp	w10, #0x2
00000000000241dc	b.lt	0x24240
00000000000241e0	mov	x10, #0x0
00000000000241e4	mov	x11, x8
00000000000241e8	ldr	w12, [x11]
00000000000241ec	cmp	w12, #0x23
00000000000241f0	b.gt	0x24248
00000000000241f4	add	x10, x10, #0x1
00000000000241f8	add	x11, x11, #0x10
00000000000241fc	cmp	x9, x10
0000000000024200	b.ne	0x241e8
0000000000024204	mov	x10, x9
0000000000024208	b	0x24248
000000000002420c	mov	w10, #0x0
0000000000024210	add	w11, w9, w10
0000000000024214	cmp	w11, #0x0
0000000000024218	cinc	w11, w11, lt
000000000002421c	asr	w11, w11, #1
0000000000024220	sbfiz	x12, x11, #4, #32
0000000000024224	ldr	w12, [x8, x12]
0000000000024228	cmp	w12, #0x24
000000000002422c	csinc	w10, w10, w11, ge
0000000000024230	csel	w9, w9, w11, lt
0000000000024234	cmp	w10, w9
0000000000024238	b.lt	0x24210
000000000002423c	b	0x24248
0000000000024240	mov	w10, #0x0
0000000000024244	b	0x24248
0000000000024248	sxtw	x9, w10
000000000002424c	add	x8, x8, x9, lsl #4
0000000000024250	ldr	x8, [x8, #0x8]
0000000000024254	ldr	x8, [x8]
0000000000024258	mov	x0, x23
000000000002425c	mov	x1, x24
0000000000024260	blr	x8
0000000000024264	mov	x23, x0
0000000000024268	mov	w28, #0x0
000000000002426c	mov	w24, #0xa0
0000000000024270	mov	w27, #0x2c
0000000000024274	ldr	x8, [x23]
0000000000024278	and	x8, x8, #0xfffffffffffffffc
000000000002427c	ldr	x8, [x8]
0000000000024280	ldr	w9, [x8, #0x3c]
0000000000024284	ldr	x8, [x8, #0x40]
0000000000024288	tbz	w9, #0x1f, 0x242d0
000000000002428c	b	0x243c8
0000000000024290	and	x9, x9, x27
0000000000024294	add	x8, x8, x9, lsl #4
0000000000024298	ldr	x8, [x8, #0x8]
000000000002429c	ldr	x8, [x8]
00000000000242a0	mov	x0, x20
00000000000242a4	mov	x2, x22
00000000000242a8	blr	x8
00000000000242ac	ldrb	w8, [x0, #0x8]
00000000000242b0	cmp	w8, w19
00000000000242b4	b.eq	0x242f0
00000000000242b8	ldr	x8, [x23]
00000000000242bc	and	x8, x8, #0xfffffffffffffffc
00000000000242c0	ldr	x8, [x8]
00000000000242c4	ldr	w9, [x8, #0x3c]
00000000000242c8	ldr	x8, [x8, #0x40]
00000000000242cc	tbnz	w9, #0x1f, 0x243c8
00000000000242d0	and	x9, x9, x24
00000000000242d4	add	x8, x8, x9, lsl #4
00000000000242d8	ldr	x8, [x8, #0x8]
00000000000242dc	ldr	x8, [x8]
00000000000242e0	mov	x0, x23
00000000000242e4	blr	x8
00000000000242e8	tbnz	w0, #0x0, 0x24464
00000000000242ec	b	0x245d0
00000000000242f0	ldr	x8, [x23]
00000000000242f4	and	x8, x8, #0xfffffffffffffffc
00000000000242f8	ldr	x8, [x8]
00000000000242fc	ldr	w9, [x8, #0x3c]
0000000000024300	ldr	x8, [x8, #0x40]
0000000000024304	tbnz	w9, #0x1f, 0x24314
0000000000024308	mov	w10, #0x39
000000000002430c	and	x9, x9, x10
0000000000024310	b	0x24398
0000000000024314	neg	w10, w9
0000000000024318	mvn	w9, w9
000000000002431c	cmp	w10, #0x9
0000000000024320	b.ge	0x24358
0000000000024324	cmp	w10, #0x2
0000000000024328	b.lt	0x2438c
000000000002432c	mov	x10, #0x0
0000000000024330	mov	x11, x8
0000000000024334	ldr	w12, [x11]
0000000000024338	cmp	w12, #0x38
000000000002433c	b.gt	0x24394
0000000000024340	add	x10, x10, #0x1
0000000000024344	add	x11, x11, #0x10
0000000000024348	cmp	x9, x10
000000000002434c	b.ne	0x24334
0000000000024350	mov	x10, x9
0000000000024354	b	0x24394
0000000000024358	mov	w10, #0x0
000000000002435c	add	w11, w9, w10
0000000000024360	cmp	w11, #0x0
0000000000024364	cinc	w11, w11, lt
0000000000024368	asr	w11, w11, #1
000000000002436c	sbfiz	x12, x11, #4, #32
0000000000024370	ldr	w12, [x8, x12]
0000000000024374	cmp	w12, #0x39
0000000000024378	csinc	w10, w10, w11, ge
000000000002437c	csel	w9, w9, w11, lt
0000000000024380	cmp	w10, w9
0000000000024384	b.lt	0x2435c
0000000000024388	b	0x24394
000000000002438c	mov	w10, #0x0
0000000000024390	b	0x24394
0000000000024394	sxtw	x9, w10
0000000000024398	add	x8, x8, x9, lsl #4
000000000002439c	ldr	x8, [x8, #0x8]
00000000000243a0	ldr	x8, [x8]
00000000000243a4	mov	x0, x23
00000000000243a8	blr	x8
00000000000243ac	mov	w28, #0x1
00000000000243b0	ldr	x8, [x23]
00000000000243b4	and	x8, x8, #0xfffffffffffffffc
00000000000243b8	ldr	x8, [x8]
00000000000243bc	ldr	w9, [x8, #0x3c]
00000000000243c0	ldr	x8, [x8, #0x40]
00000000000243c4	tbz	w9, #0x1f, 0x242d0
00000000000243c8	neg	w10, w9
00000000000243cc	mvn	w9, w9
00000000000243d0	cmp	w10, #0x9
00000000000243d4	b.ge	0x2440c
00000000000243d8	cmp	w10, #0x2
00000000000243dc	b.lt	0x24440
00000000000243e0	mov	x10, #0x0
00000000000243e4	mov	x11, x8
00000000000243e8	ldr	w12, [x11]
00000000000243ec	cmp	w12, #0x9f
00000000000243f0	b.gt	0x24448
00000000000243f4	add	x10, x10, #0x1
00000000000243f8	add	x11, x11, #0x10
00000000000243fc	cmp	x9, x10
0000000000024400	b.ne	0x243e8
0000000000024404	mov	x10, x9
0000000000024408	b	0x24448
000000000002440c	mov	w10, #0x0
0000000000024410	add	w11, w9, w10
0000000000024414	cmp	w11, #0x0
0000000000024418	cinc	w11, w11, lt
000000000002441c	asr	w11, w11, #1
0000000000024420	sbfiz	x12, x11, #4, #32
0000000000024424	ldr	w12, [x8, x12]
0000000000024428	cmp	w12, #0xa0
000000000002442c	csinc	w10, w10, w11, ge
0000000000024430	csel	w9, w9, w11, lt
0000000000024434	cmp	w10, w9
0000000000024438	b.lt	0x24410
000000000002443c	b	0x24448
0000000000024440	mov	w10, #0x0
0000000000024444	b	0x24448
0000000000024448	sxtw	x9, w10
000000000002444c	add	x8, x8, x9, lsl #4
0000000000024450	ldr	x8, [x8, #0x8]
0000000000024454	ldr	x8, [x8]
0000000000024458	mov	x0, x23
000000000002445c	blr	x8
0000000000024460	tbz	w0, #0x0, 0x245d0
0000000000024464	ldarb	w8, [x26]
0000000000024468	tbz	w8, #0x0, 0x24470
000000000002446c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024470	ldr	x8, [x23]
0000000000024474	and	x8, x8, #0xfffffffffffffffc
0000000000024478	ldr	x8, [x8]
000000000002447c	ldr	w9, [x8, #0x3c]
0000000000024480	ldr	x8, [x8, #0x40]
0000000000024484	tbnz	w9, #0x1f, 0x24490
0000000000024488	and	x9, x9, x24
000000000002448c	b	0x24514
0000000000024490	neg	w10, w9
0000000000024494	mvn	w9, w9
0000000000024498	cmp	w10, #0x9
000000000002449c	b.ge	0x244d4
00000000000244a0	cmp	w10, #0x2
00000000000244a4	b.lt	0x24508
00000000000244a8	mov	x10, #0x0
00000000000244ac	mov	x11, x8
00000000000244b0	ldr	w12, [x11]
00000000000244b4	cmp	w12, #0x9f
00000000000244b8	b.gt	0x24510
00000000000244bc	add	x10, x10, #0x1
00000000000244c0	add	x11, x11, #0x10
00000000000244c4	cmp	x9, x10
00000000000244c8	b.ne	0x244b0
00000000000244cc	mov	x10, x9
00000000000244d0	b	0x24510
00000000000244d4	mov	w10, #0x0
00000000000244d8	add	w11, w9, w10
00000000000244dc	cmp	w11, #0x0
00000000000244e0	cinc	w11, w11, lt
00000000000244e4	asr	w11, w11, #1
00000000000244e8	sbfiz	x12, x11, #4, #32
00000000000244ec	ldr	w12, [x8, x12]
00000000000244f0	cmp	w12, #0xa0
00000000000244f4	csinc	w10, w10, w11, ge
00000000000244f8	csel	w9, w9, w11, lt
00000000000244fc	cmp	w10, w9
0000000000024500	b.lt	0x244d8
0000000000024504	b	0x24510
0000000000024508	mov	w10, #0x0
000000000002450c	b	0x24510
0000000000024510	sxtw	x9, w10
0000000000024514	add	x8, x8, x9, lsl #4
0000000000024518	ldr	x8, [x8, #0x8]
000000000002451c	ldr	x8, [x8, #0x8]
0000000000024520	mov	x0, x23
0000000000024524	mov	x1, x21
0000000000024528	blr	x8
000000000002452c	mov	x1, x0
0000000000024530	ldr	x8, [x20]
0000000000024534	and	x8, x8, #0xfffffffffffffffc
0000000000024538	ldr	x8, [x8]
000000000002453c	ldr	w9, [x8, #0x3c]
0000000000024540	ldr	x8, [x8, #0x40]
0000000000024544	tbz	w9, #0x1f, 0x24290
0000000000024548	neg	w10, w9
000000000002454c	mvn	w9, w9
0000000000024550	cmp	w10, #0x9
0000000000024554	b.ge	0x2458c
0000000000024558	cmp	w10, #0x2
000000000002455c	b.lt	0x245c0
0000000000024560	mov	x10, #0x0
0000000000024564	mov	x11, x8
0000000000024568	ldr	w12, [x11]
000000000002456c	cmp	w12, #0x2b
0000000000024570	b.gt	0x245c8
0000000000024574	add	x10, x10, #0x1
0000000000024578	add	x11, x11, #0x10
000000000002457c	cmp	x9, x10
0000000000024580	b.ne	0x24568
0000000000024584	mov	x10, x9
0000000000024588	b	0x245c8
000000000002458c	mov	w10, #0x0
0000000000024590	add	w11, w9, w10
0000000000024594	cmp	w11, #0x0
0000000000024598	cinc	w11, w11, lt
000000000002459c	asr	w11, w11, #1
00000000000245a0	sbfiz	x12, x11, #4, #32
00000000000245a4	ldr	w12, [x8, x12]
00000000000245a8	cmp	w12, #0x2c
00000000000245ac	csinc	w10, w10, w11, ge
00000000000245b0	csel	w9, w9, w11, lt
00000000000245b4	cmp	w10, w9
00000000000245b8	b.lt	0x24590
00000000000245bc	b	0x245c8
00000000000245c0	mov	w10, #0x0
00000000000245c4	b	0x245c8
00000000000245c8	sxtw	x9, w10
00000000000245cc	b	0x24294
00000000000245d0	ldr	x8, [sp, #0x8]
00000000000245d4	str	x8, [x25, #0x110]
00000000000245d8	and	w0, w28, #0x1
00000000000245dc	ldp	x29, x30, [sp, #0x80]
00000000000245e0	ldp	x20, x19, [sp, #0x70]
00000000000245e4	ldp	x22, x21, [sp, #0x60]
00000000000245e8	ldp	x24, x23, [sp, #0x50]
00000000000245ec	ldp	x26, x25, [sp, #0x40]
00000000000245f0	ldp	x28, x27, [sp, #0x30]
00000000000245f4	add	sp, sp, #0x90
00000000000245f8	ret
_kfun:kotlin.collections.ByteIterator#$<bridge-BNN>next(){}kotlin.Byte(){}kotlin.Any?:
00000000000245fc	stp	x20, x19, [sp, #-0x20]!
0000000000024600	stp	x29, x30, [sp, #0x10]
0000000000024604	add	x29, sp, #0x10
0000000000024608	mov	x19, x1
000000000002460c	mov	x20, x0
0000000000024610	adr	x8, #0x6fef9
0000000000024614	nop
0000000000024618	ldarb	w8, [x8]
000000000002461c	tbz	w8, #0x0, 0x24624
0000000000024620	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024624	ldr	x8, [x20]
0000000000024628	and	x8, x8, #0xfffffffffffffffc
000000000002462c	ldr	x8, [x8]
0000000000024630	ldr	x8, [x8, #0x90]
0000000000024634	mov	x0, x20
0000000000024638	blr	x8
000000000002463c	mov	x1, x19
0000000000024640	bl	"_kfun:kotlin#<Byte-box>(kotlin.Byte){}kotlin.Any"
0000000000024644	str	x0, [x19]
0000000000024648	ldp	x29, x30, [sp, #0x10]
000000000002464c	ldp	x20, x19, [sp], #0x20
0000000000024650	ret
_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal:
0000000000024654	sub	sp, sp, #0x70
0000000000024658	stp	x22, x21, [sp, #0x40]
000000000002465c	stp	x20, x19, [sp, #0x50]
0000000000024660	stp	x29, x30, [sp, #0x60]
0000000000024664	add	x29, sp, #0x60
0000000000024668	mov	x19, x1
000000000002466c	mov	x20, x0
0000000000024670	movi.16b	v0, #0x0
0000000000024674	stp	q0, q0, [sp]
0000000000024678	stp	q0, q0, [sp, #0x20]
000000000002467c	mov	x22, sp
0000000000024680	adrp	x0, 86 ; 0x7a000
0000000000024684	add	x0, x0, #0x4e0
0000000000024688	ldr	x8, [x0]
000000000002468c	blr	x8
0000000000024690	ldr	x21, [x0]
0000000000024694	ldr	x8, [x21, #0x110]
0000000000024698	str	x22, [x21, #0x110]
000000000002469c	mov	x9, #0x800000000
00000000000246a0	stp	x8, x9, [sp, #0x8]
00000000000246a4	adr	x8, #0x6fe65
00000000000246a8	nop
00000000000246ac	ldarb	w8, [x8]
00000000000246b0	tbz	w8, #0x0, 0x246b8
00000000000246b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000246b8	ldr	x0, [x20, #0x10]
00000000000246bc	stp	x0, x0, [sp, #0x18]
00000000000246c0	str	x0, [sp, #0x28]
00000000000246c4	cbnz	x0, 0x24794
00000000000246c8	add	x1, x22, #0x30
00000000000246cc	ldr	x0, [x20, #0x8]
00000000000246d0	ldr	x8, [x0]
00000000000246d4	and	x8, x8, #0xfffffffffffffffc
00000000000246d8	ldr	x8, [x8]
00000000000246dc	ldr	w9, [x8, #0x3c]
00000000000246e0	ldr	x8, [x8, #0x40]
00000000000246e4	tbnz	w9, #0x1f, 0x246f4
00000000000246e8	mov	w10, #0x59
00000000000246ec	and	x9, x9, x10
00000000000246f0	b	0x24778
00000000000246f4	neg	w10, w9
00000000000246f8	mvn	w9, w9
00000000000246fc	cmp	w10, #0x9
0000000000024700	b.ge	0x24738
0000000000024704	cmp	w10, #0x2
0000000000024708	b.lt	0x2476c
000000000002470c	mov	x10, #0x0
0000000000024710	mov	x11, x8
0000000000024714	ldr	w12, [x11]
0000000000024718	cmp	w12, #0x58
000000000002471c	b.gt	0x24774
0000000000024720	add	x10, x10, #0x1
0000000000024724	add	x11, x11, #0x10
0000000000024728	cmp	x9, x10
000000000002472c	b.ne	0x24714
0000000000024730	mov	x10, x9
0000000000024734	b	0x24774
0000000000024738	mov	w10, #0x0
000000000002473c	add	w11, w9, w10
0000000000024740	cmp	w11, #0x0
0000000000024744	cinc	w11, w11, lt
0000000000024748	asr	w11, w11, #1
000000000002474c	sbfiz	x12, x11, #4, #32
0000000000024750	ldr	w12, [x8, x12]
0000000000024754	cmp	w12, #0x59
0000000000024758	csinc	w10, w10, w11, ge
000000000002475c	csel	w9, w9, w11, lt
0000000000024760	cmp	w10, w9
0000000000024764	b.lt	0x2473c
0000000000024768	b	0x24774
000000000002476c	mov	w10, #0x0
0000000000024770	b	0x24774
0000000000024774	sxtw	x9, w10
0000000000024778	add	x8, x8, x9, lsl #4
000000000002477c	ldr	x8, [x8, #0x8]
0000000000024780	ldr	x8, [x8]
0000000000024784	blr	x8
0000000000024788	str	x0, [sp, #0x20]
000000000002478c	str	x0, [sp, #0x38]
0000000000024790	str	x0, [x20, #0x10]
0000000000024794	str	x0, [x19]
0000000000024798	ldr	x8, [sp, #0x8]
000000000002479c	str	x8, [x21, #0x110]
00000000000247a0	ldp	x29, x30, [sp, #0x60]
00000000000247a4	ldp	x20, x19, [sp, #0x50]
00000000000247a8	ldp	x22, x21, [sp, #0x40]
00000000000247ac	add	sp, sp, #0x70
00000000000247b0	ret
_kfun:kotlin.enums.EnumEntriesList.<get-size>#internal:
00000000000247b4	sub	sp, sp, #0x50
00000000000247b8	stp	x22, x21, [sp, #0x20]
00000000000247bc	stp	x20, x19, [sp, #0x30]
00000000000247c0	stp	x29, x30, [sp, #0x40]
00000000000247c4	add	x29, sp, #0x40
00000000000247c8	mov	x19, x0
00000000000247cc	movi.16b	v0, #0x0
00000000000247d0	stp	q0, q0, [sp]
00000000000247d4	mov	x8, sp
00000000000247d8	add	x20, x8, #0x18
00000000000247dc	adrp	x0, 86 ; 0x7a000
00000000000247e0	add	x0, x0, #0x4e0
00000000000247e4	ldr	x9, [x0]
00000000000247e8	blr	x9
00000000000247ec	ldr	x21, [x0]
00000000000247f0	ldr	x9, [x21, #0x110]
00000000000247f4	str	x8, [x21, #0x110]
00000000000247f8	mov	x8, #0x400000000
00000000000247fc	stp	x9, x8, [sp, #0x8]
0000000000024800	adr	x8, #0x6fd09
0000000000024804	nop
0000000000024808	ldarb	w8, [x8]
000000000002480c	tbz	w8, #0x0, 0x24814
0000000000024810	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024814	mov	x0, x19
0000000000024818	mov	x1, x20
000000000002481c	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000024820	ldr	w0, [x0, #0x8]
0000000000024824	ldr	x8, [sp, #0x8]
0000000000024828	str	x8, [x21, #0x110]
000000000002482c	ldp	x29, x30, [sp, #0x40]
0000000000024830	ldp	x20, x19, [sp, #0x30]
0000000000024834	ldp	x22, x21, [sp, #0x20]
0000000000024838	add	sp, sp, #0x50
000000000002483c	ret
_kfun:kotlin.enums.EnumEntriesList.get#internal:
0000000000024840	sub	sp, sp, #0x60
0000000000024844	stp	x24, x23, [sp, #0x20]
0000000000024848	stp	x22, x21, [sp, #0x30]
000000000002484c	stp	x20, x19, [sp, #0x40]
0000000000024850	stp	x29, x30, [sp, #0x50]
0000000000024854	add	x29, sp, #0x50
0000000000024858	mov	x19, x2
000000000002485c	mov	x20, x1
0000000000024860	mov	x21, x0
0000000000024864	movi.16b	v0, #0x0
0000000000024868	stp	q0, q0, [sp]
000000000002486c	mov	x8, sp
0000000000024870	add	x22, x8, #0x18
0000000000024874	adrp	x0, 86 ; 0x7a000
0000000000024878	add	x0, x0, #0x4e0
000000000002487c	ldr	x9, [x0]
0000000000024880	blr	x9
0000000000024884	ldr	x23, [x0]
0000000000024888	ldr	x9, [x23, #0x110]
000000000002488c	str	x8, [x23, #0x110]
0000000000024890	mov	x8, #0x400000000
0000000000024894	stp	x9, x8, [sp, #0x8]
0000000000024898	adr	x8, #0x6fc71
000000000002489c	nop
00000000000248a0	ldarb	w8, [x8]
00000000000248a4	tbz	w8, #0x0, 0x248ac
00000000000248a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000248ac	mov	x0, x21
00000000000248b0	mov	x1, x22
00000000000248b4	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
00000000000248b8	mov	x21, x0
00000000000248bc	ldr	w1, [x0, #0x8]
00000000000248c0	mov	x0, x20
00000000000248c4	bl	"_kfun:kotlin.collections.AbstractList.Companion#checkElementIndex(kotlin.Int;kotlin.Int){}"
00000000000248c8	ldr	w8, [x21, #0x8]
00000000000248cc	cmp	w8, w20
00000000000248d0	b.ls	0x24900
00000000000248d4	add	x8, x21, w20, sxtw #3
00000000000248d8	ldr	x0, [x8, #0x10]
00000000000248dc	str	x0, [x19]
00000000000248e0	ldr	x8, [sp, #0x8]
00000000000248e4	str	x8, [x23, #0x110]
00000000000248e8	ldp	x29, x30, [sp, #0x50]
00000000000248ec	ldp	x20, x19, [sp, #0x40]
00000000000248f0	ldp	x22, x21, [sp, #0x30]
00000000000248f4	ldp	x24, x23, [sp, #0x20]
00000000000248f8	add	sp, sp, #0x60
00000000000248fc	ret
0000000000024900	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:kotlin.enums.EnumEntriesList.contains#internal:
0000000000024904	sub	sp, sp, #0x70
0000000000024908	stp	x24, x23, [sp, #0x30]
000000000002490c	stp	x22, x21, [sp, #0x40]
0000000000024910	stp	x20, x19, [sp, #0x50]
0000000000024914	stp	x29, x30, [sp, #0x60]
0000000000024918	add	x29, sp, #0x60
000000000002491c	mov	x19, x1
0000000000024920	mov	x20, x0
0000000000024924	movi.16b	v0, #0x0
0000000000024928	stp	q0, q0, [sp]
000000000002492c	str	xzr, [sp, #0x20]
0000000000024930	mov	x23, sp
0000000000024934	adrp	x0, 86 ; 0x7a000
0000000000024938	add	x0, x0, #0x4e0
000000000002493c	ldr	x8, [x0]
0000000000024940	blr	x8
0000000000024944	ldr	x22, [x0]
0000000000024948	ldr	x8, [x22, #0x110]
000000000002494c	str	x23, [x22, #0x110]
0000000000024950	mov	x9, #0x500000000
0000000000024954	stp	x8, x9, [sp, #0x8]
0000000000024958	adr	x8, #0x6fbb1
000000000002495c	nop
0000000000024960	ldarb	w8, [x8]
0000000000024964	tbz	w8, #0x0, 0x2496c
0000000000024968	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002496c	cbz	x19, 0x2498c
0000000000024970	ldr	x8, [x19]
0000000000024974	and	x8, x8, #0xfffffffffffffffc
0000000000024978	ldr	x8, [x8]
000000000002497c	ldr	w8, [x8, #0x5c]
0000000000024980	sub	w8, w8, #0x67
0000000000024984	cmp	w8, #0xe
0000000000024988	b.ls	0x24994
000000000002498c	mov	w0, #0x0
0000000000024990	b	0x249b8
0000000000024994	add	x21, x23, #0x20
0000000000024998	add	x1, x23, #0x18
000000000002499c	mov	x0, x20
00000000000249a0	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
00000000000249a4	ldr	w1, [x19, #0x10]
00000000000249a8	mov	x2, x21
00000000000249ac	bl	"_kfun:kotlin.collections#getOrNull__at__kotlin.Array<out|0:0>(kotlin.Int){0§<kotlin.Any?>}0:0?"
00000000000249b0	cmp	x0, x19
00000000000249b4	cset	w0, eq
00000000000249b8	ldr	x8, [sp, #0x8]
00000000000249bc	str	x8, [x22, #0x110]
00000000000249c0	ldp	x29, x30, [sp, #0x60]
00000000000249c4	ldp	x20, x19, [sp, #0x50]
00000000000249c8	ldp	x22, x21, [sp, #0x40]
00000000000249cc	ldp	x24, x23, [sp, #0x30]
00000000000249d0	add	sp, sp, #0x70
00000000000249d4	ret
_kfun:kotlin.enums.EnumEntriesList.indexOf#internal:
00000000000249d8	sub	sp, sp, #0x70
00000000000249dc	stp	x24, x23, [sp, #0x30]
00000000000249e0	stp	x22, x21, [sp, #0x40]
00000000000249e4	stp	x20, x19, [sp, #0x50]
00000000000249e8	stp	x29, x30, [sp, #0x60]
00000000000249ec	add	x29, sp, #0x60
00000000000249f0	mov	x19, x1
00000000000249f4	mov	x20, x0
00000000000249f8	movi.16b	v0, #0x0
00000000000249fc	stp	q0, q0, [sp]
0000000000024a00	str	xzr, [sp, #0x20]
0000000000024a04	mov	x22, sp
0000000000024a08	adrp	x0, 86 ; 0x7a000
0000000000024a0c	add	x0, x0, #0x4e0
0000000000024a10	ldr	x8, [x0]
0000000000024a14	blr	x8
0000000000024a18	ldr	x23, [x0]
0000000000024a1c	ldr	x8, [x23, #0x110]
0000000000024a20	str	x22, [x23, #0x110]
0000000000024a24	mov	x9, #0x500000000
0000000000024a28	stp	x8, x9, [sp, #0x8]
0000000000024a2c	adr	x8, #0x6fadd
0000000000024a30	nop
0000000000024a34	ldarb	w8, [x8]
0000000000024a38	tbz	w8, #0x0, 0x24a40
0000000000024a3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024a40	cbz	x19, 0x24a60
0000000000024a44	ldr	x8, [x19]
0000000000024a48	and	x8, x8, #0xfffffffffffffffc
0000000000024a4c	ldr	x8, [x8]
0000000000024a50	ldr	w8, [x8, #0x5c]
0000000000024a54	sub	w8, w8, #0x67
0000000000024a58	cmp	w8, #0xe
0000000000024a5c	b.ls	0x24a68
0000000000024a60	mov	w0, #-0x1
0000000000024a64	b	0x24a90
0000000000024a68	add	x21, x22, #0x20
0000000000024a6c	add	x1, x22, #0x18
0000000000024a70	ldr	w22, [x19, #0x10]
0000000000024a74	mov	x0, x20
0000000000024a78	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000024a7c	mov	x1, x22
0000000000024a80	mov	x2, x21
0000000000024a84	bl	"_kfun:kotlin.collections#getOrNull__at__kotlin.Array<out|0:0>(kotlin.Int){0§<kotlin.Any?>}0:0?"
0000000000024a88	cmp	x0, x19
0000000000024a8c	csinv	w0, w22, wzr, eq
0000000000024a90	ldr	x8, [sp, #0x8]
0000000000024a94	str	x8, [x23, #0x110]
0000000000024a98	ldp	x29, x30, [sp, #0x60]
0000000000024a9c	ldp	x20, x19, [sp, #0x50]
0000000000024aa0	ldp	x22, x21, [sp, #0x40]
0000000000024aa4	ldp	x24, x23, [sp, #0x30]
0000000000024aa8	add	sp, sp, #0x70
0000000000024aac	ret
_kfun:kotlin.enums.EnumEntriesList.lastIndexOf#internal:
0000000000024ab0	stp	x20, x19, [sp, #-0x20]!
0000000000024ab4	stp	x29, x30, [sp, #0x10]
0000000000024ab8	add	x29, sp, #0x10
0000000000024abc	mov	x19, x1
0000000000024ac0	mov	x20, x0
0000000000024ac4	adr	x8, #0x6fa45
0000000000024ac8	nop
0000000000024acc	ldarb	w8, [x8]
0000000000024ad0	tbz	w8, #0x0, 0x24ad8
0000000000024ad4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024ad8	cbz	x19, 0x24af8
0000000000024adc	ldr	x8, [x19]
0000000000024ae0	and	x8, x8, #0xfffffffffffffffc
0000000000024ae4	ldr	x8, [x8]
0000000000024ae8	ldr	w8, [x8, #0x5c]
0000000000024aec	sub	w8, w8, #0x67
0000000000024af0	cmp	w8, #0xe
0000000000024af4	b.ls	0x24b08
0000000000024af8	mov	w0, #-0x1
0000000000024afc	ldp	x29, x30, [sp, #0x10]
0000000000024b00	ldp	x20, x19, [sp], #0x20
0000000000024b04	ret
0000000000024b08	mov	x0, x20
0000000000024b0c	mov	x1, x19
0000000000024b10	ldp	x29, x30, [sp, #0x10]
0000000000024b14	ldp	x20, x19, [sp], #0x20
0000000000024b18	b	"_kfun:kotlin.enums.EnumEntriesList.indexOf#internal"
_kfun:kotlin.enums#enumEntries(kotlin.Array<0:0>){0§<kotlin.Enum<0:0>>}kotlin.enums.EnumEntries<0:0>:
0000000000024b1c	sub	sp, sp, #0x80
0000000000024b20	stp	x22, x21, [sp, #0x50]
0000000000024b24	stp	x20, x19, [sp, #0x60]
0000000000024b28	stp	x29, x30, [sp, #0x70]
0000000000024b2c	add	x29, sp, #0x70
0000000000024b30	mov	x19, x1
0000000000024b34	mov	x20, x0
0000000000024b38	movi.16b	v0, #0x0
0000000000024b3c	stp	q0, q0, [sp]
0000000000024b40	str	xzr, [sp, #0x20]
0000000000024b44	adrp	x0, 86 ; 0x7a000
0000000000024b48	add	x0, x0, #0x4e0
0000000000024b4c	ldr	x8, [x0]
0000000000024b50	blr	x8
0000000000024b54	ldr	x22, [x0]
0000000000024b58	ldr	x8, [x22, #0x110]
0000000000024b5c	mov	x9, sp
0000000000024b60	str	x9, [x22, #0x110]
0000000000024b64	mov	x9, #0x500000000
0000000000024b68	stp	x8, x9, [sp, #0x8]
0000000000024b6c	adr	x8, #0x6f99d
0000000000024b70	nop
0000000000024b74	ldarb	w8, [x8]
0000000000024b78	tbz	w8, #0x0, 0x24b80
0000000000024b7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024b80	ldr	x8, [x22, #0x118]
0000000000024b84	add	x0, x8, #0x70
0000000000024b88	mov	w1, #0x18
0000000000024b8c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000024b90	mov	x21, x0
0000000000024b94	adr	x8, #0x40a4c
0000000000024b98	nop
0000000000024b9c	str	x8, [x21, #0x10]!
0000000000024ba0	stur	xzr, [x21, #-0x8]
0000000000024ba4	str	x21, [sp, #0x18]
0000000000024ba8	str	x20, [x21, #0x8]
0000000000024bac	ldr	x8, [x22, #0x118]
0000000000024bb0	add	x0, x8, #0x70
0000000000024bb4	mov	w1, #0x20
0000000000024bb8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000024bbc	mov	x20, x0
0000000000024bc0	adr	x8, #0x40930
0000000000024bc4	nop
0000000000024bc8	str	x8, [x20, #0x10]!
0000000000024bcc	stur	xzr, [x20, #-0x8]
0000000000024bd0	str	x20, [sp, #0x20]
0000000000024bd4	str	x21, [x20, #0x8]
0000000000024bd8	movi.16b	v0, #0x0
0000000000024bdc	stp	q0, q0, [sp, #0x30]
0000000000024be0	add	x8, sp, #0x30
0000000000024be4	add	x1, x8, #0x18
0000000000024be8	ldr	x9, [x22, #0x110]
0000000000024bec	str	x8, [x22, #0x110]
0000000000024bf0	mov	x8, #0x400000000
0000000000024bf4	stp	x9, x8, [sp, #0x38]
0000000000024bf8	mov	x0, x20
0000000000024bfc	bl	"_kfun:kotlin.enums.EnumEntriesList.<get-entries>#internal"
0000000000024c00	ldr	x8, [sp, #0x38]
0000000000024c04	str	x8, [x22, #0x110]
0000000000024c08	str	x20, [x19]
0000000000024c0c	ldr	x8, [sp, #0x8]
0000000000024c10	str	x8, [x22, #0x110]
0000000000024c14	mov	x0, x20
0000000000024c18	ldp	x29, x30, [sp, #0x70]
0000000000024c1c	ldp	x20, x19, [sp, #0x60]
0000000000024c20	ldp	x22, x21, [sp, #0x50]
0000000000024c24	add	sp, sp, #0x80
0000000000024c28	ret
_kfun:kotlin.enums.$enumEntries$lambda$0$FUNCTION_REFERENCE$23.invoke#internal:
0000000000024c2c	stp	x20, x19, [sp, #-0x20]!
0000000000024c30	stp	x29, x30, [sp, #0x10]
0000000000024c34	add	x29, sp, #0x10
0000000000024c38	mov	x19, x1
0000000000024c3c	mov	x20, x0
0000000000024c40	adr	x8, #0x6f8c9
0000000000024c44	nop
0000000000024c48	ldarb	w8, [x8]
0000000000024c4c	tbz	w8, #0x0, 0x24c54
0000000000024c50	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024c54	ldr	x0, [x20, #0x8]
0000000000024c58	str	x0, [x19]
0000000000024c5c	ldp	x29, x30, [sp, #0x10]
0000000000024c60	ldp	x20, x19, [sp], #0x20
0000000000024c64	ret
_kfun:kotlin.text#substringAfterLast$default__at__kotlin.String(kotlin.Char;kotlin.String?;kotlin.Int){}kotlin.String:
0000000000024c68	stp	x22, x21, [sp, #-0x30]!
0000000000024c6c	stp	x20, x19, [sp, #0x10]
0000000000024c70	stp	x29, x30, [sp, #0x20]
0000000000024c74	add	x29, sp, #0x20
0000000000024c78	mov	x19, x2
0000000000024c7c	mov	x21, x1
0000000000024c80	mov	x20, x0
0000000000024c84	adr	x8, #0x6f885
0000000000024c88	nop
0000000000024c8c	ldarb	w8, [x8]
0000000000024c90	tbz	w8, #0x0, 0x24c98
0000000000024c94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024c98	mov	x0, x20
0000000000024c9c	bl	"_kfun:kotlin.text#<get-lastIndex>__at__kotlin.CharSequence(){}kotlin.Int"
0000000000024ca0	mov	x2, x0
0000000000024ca4	mov	x0, x20
0000000000024ca8	mov	x1, x21
0000000000024cac	bl	"_kfun:kotlin.text#lastIndexOf__at__kotlin.CharSequence(kotlin.Char;kotlin.Int;kotlin.Boolean){}kotlin.Int"
0000000000024cb0	cmn	w0, #0x1
0000000000024cb4	b.eq	0x24ce8
0000000000024cb8	ldr	w2, [x20, #0x8]
0000000000024cbc	add	w1, w0, #0x1
0000000000024cc0	mov	x0, x20
0000000000024cc4	mov	x3, x19
0000000000024cc8	bl	_Kotlin_String_subSequence
0000000000024ccc	mov	x20, x0
0000000000024cd0	ldr	x8, [x0]
0000000000024cd4	and	x8, x8, #0xfffffffffffffffc
0000000000024cd8	ldr	x8, [x8]
0000000000024cdc	ldr	w8, [x8, #0x5c]
0000000000024ce0	cmp	w8, #0x85
0000000000024ce4	b.ne	0x24d00
0000000000024ce8	str	x20, [x19]
0000000000024cec	mov	x0, x20
0000000000024cf0	ldp	x29, x30, [sp, #0x20]
0000000000024cf4	ldp	x20, x19, [sp, #0x10]
0000000000024cf8	ldp	x22, x21, [sp], #0x30
0000000000024cfc	ret
0000000000024d00	adr	x1, #0x3d370
0000000000024d04	nop
0000000000024d08	mov	x0, x20
0000000000024d0c	bl	_ThrowClassCastException
_kfun:kotlin.text#<get-lastIndex>__at__kotlin.CharSequence(){}kotlin.Int:
0000000000024d10	stp	x20, x19, [sp, #-0x20]!
0000000000024d14	stp	x29, x30, [sp, #0x10]
0000000000024d18	add	x29, sp, #0x10
0000000000024d1c	mov	x19, x0
0000000000024d20	adr	x8, #0x6f7e9
0000000000024d24	nop
0000000000024d28	ldarb	w8, [x8]
0000000000024d2c	tbz	w8, #0x0, 0x24d34
0000000000024d30	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024d34	ldr	x8, [x19]
0000000000024d38	and	x8, x8, #0xfffffffffffffffc
0000000000024d3c	ldr	x8, [x8]
0000000000024d40	ldr	w9, [x8, #0x3c]
0000000000024d44	ldr	x8, [x8, #0x40]
0000000000024d48	tbnz	w9, #0x1f, 0x24d58
0000000000024d4c	mov	w10, #0x19
0000000000024d50	and	x9, x9, x10
0000000000024d54	b	0x24ddc
0000000000024d58	neg	w10, w9
0000000000024d5c	mvn	w9, w9
0000000000024d60	cmp	w10, #0x9
0000000000024d64	b.ge	0x24d9c
0000000000024d68	cmp	w10, #0x2
0000000000024d6c	b.lt	0x24dd0
0000000000024d70	mov	x10, #0x0
0000000000024d74	mov	x11, x8
0000000000024d78	ldr	w12, [x11]
0000000000024d7c	cmp	w12, #0x18
0000000000024d80	b.gt	0x24dd8
0000000000024d84	add	x10, x10, #0x1
0000000000024d88	add	x11, x11, #0x10
0000000000024d8c	cmp	x9, x10
0000000000024d90	b.ne	0x24d78
0000000000024d94	mov	x10, x9
0000000000024d98	b	0x24dd8
0000000000024d9c	mov	w10, #0x0
0000000000024da0	add	w11, w9, w10
0000000000024da4	cmp	w11, #0x0
0000000000024da8	cinc	w11, w11, lt
0000000000024dac	asr	w11, w11, #1
0000000000024db0	sbfiz	x12, x11, #4, #32
0000000000024db4	ldr	w12, [x8, x12]
0000000000024db8	cmp	w12, #0x19
0000000000024dbc	csinc	w10, w10, w11, ge
0000000000024dc0	csel	w9, w9, w11, lt
0000000000024dc4	cmp	w10, w9
0000000000024dc8	b.lt	0x24da0
0000000000024dcc	b	0x24dd8
0000000000024dd0	mov	w10, #0x0
0000000000024dd4	b	0x24dd8
0000000000024dd8	sxtw	x9, w10
0000000000024ddc	add	x8, x8, x9, lsl #4
0000000000024de0	ldr	x8, [x8, #0x8]
0000000000024de4	ldr	x8, [x8]
0000000000024de8	mov	x0, x19
0000000000024dec	blr	x8
0000000000024df0	sub	w0, w0, #0x1
0000000000024df4	ldp	x29, x30, [sp, #0x10]
0000000000024df8	ldp	x20, x19, [sp], #0x20
0000000000024dfc	ret
_kfun:kotlin.text#lastIndexOf__at__kotlin.CharSequence(kotlin.Char;kotlin.Int;kotlin.Boolean){}kotlin.Int:
0000000000024e00	sub	sp, sp, #0xf0
0000000000024e04	stp	x28, x27, [sp, #0x90]
0000000000024e08	stp	x26, x25, [sp, #0xa0]
0000000000024e0c	stp	x24, x23, [sp, #0xb0]
0000000000024e10	stp	x22, x21, [sp, #0xc0]
0000000000024e14	stp	x20, x19, [sp, #0xd0]
0000000000024e18	stp	x29, x30, [sp, #0xe0]
0000000000024e1c	add	x29, sp, #0xe0
0000000000024e20	mov	x20, x2
0000000000024e24	mov	x21, x1
0000000000024e28	mov	x19, x0
0000000000024e2c	movi.16b	v0, #0x0
0000000000024e30	stp	q0, q0, [sp, #0x20]
0000000000024e34	str	xzr, [sp, #0x50]
0000000000024e38	str	q0, [sp, #0x40]
0000000000024e3c	adr	x8, #0x3c084
0000000000024e40	nop
0000000000024e44	orr	x8, x8, #0x3
0000000000024e48	str	x8, [sp, #0x8]
0000000000024e4c	mov	w8, #0x1
0000000000024e50	str	w8, [sp, #0x10]
0000000000024e54	strh	wzr, [sp, #0x18]
0000000000024e58	adrp	x0, 86 ; 0x7a000
0000000000024e5c	add	x0, x0, #0x4e0
0000000000024e60	ldr	x8, [x0]
0000000000024e64	blr	x8
0000000000024e68	ldr	x22, [x0]
0000000000024e6c	ldr	x8, [x22, #0x110]
0000000000024e70	add	x9, sp, #0x20
0000000000024e74	str	x9, [x22, #0x110]
0000000000024e78	mov	x9, #0x700000000
0000000000024e7c	stp	x8, x9, [sp, #0x28]
0000000000024e80	adr	x23, #0x6f689
0000000000024e84	nop
0000000000024e88	ldarb	w8, [x23]
0000000000024e8c	tbz	w8, #0x0, 0x24e94
0000000000024e90	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024e94	cbz	x19, 0x24ef0
0000000000024e98	ldr	x8, [x19]
0000000000024e9c	and	x8, x8, #0xfffffffffffffffc
0000000000024ea0	ldr	x8, [x8]
0000000000024ea4	ldr	w8, [x8, #0x5c]
0000000000024ea8	cmp	w8, #0x85
0000000000024eac	b.ne	0x24ef0
0000000000024eb0	tbnz	w20, #0x1f, 0x250e0
0000000000024eb4	ldr	w8, [x19, #0x8]
0000000000024eb8	cbz	w8, 0x250e0
0000000000024ebc	sub	w9, w8, #0x1
0000000000024ec0	cmp	w8, w20
0000000000024ec4	csel	w0, w20, w9, hi
0000000000024ec8	tbnz	w0, #0x1f, 0x250e0
0000000000024ecc	add	x8, x19, #0x10
0000000000024ed0	ldrh	w9, [x8, x0, lsl #1]
0000000000024ed4	cmp	w9, w21
0000000000024ed8	b.eq	0x250ec
0000000000024edc	sub	x0, x0, #0x1
0000000000024ee0	add	w9, w0, #0x1
0000000000024ee4	cmp	w9, #0x0
0000000000024ee8	b.gt	0x24ed0
0000000000024eec	b	0x250e0
0000000000024ef0	add	x8, sp, #0x8
0000000000024ef4	stp	x8, x8, [sp, #0x38]
0000000000024ef8	stp	x8, x8, [sp, #0x48]
0000000000024efc	ldr	x9, [sp, #0x8]
0000000000024f00	strh	w21, [sp, #0x18]
0000000000024f04	ldr	w8, [sp, #0x10]
0000000000024f08	cmp	w8, #0x1
0000000000024f0c	b.ne	0x24fa8
0000000000024f10	cbz	x19, 0x24fa8
0000000000024f14	ldr	x8, [x19]
0000000000024f18	and	x8, x8, #0xfffffffffffffffc
0000000000024f1c	ldr	x8, [x8]
0000000000024f20	ldr	w8, [x8, #0x5c]
0000000000024f24	cmp	w8, #0x85
0000000000024f28	b.ne	0x24fa8
0000000000024f2c	movi.16b	v0, #0x0
0000000000024f30	stp	q0, q0, [sp, #0x60]
0000000000024f34	str	xzr, [sp, #0x80]
0000000000024f38	ldr	x8, [x22, #0x110]
0000000000024f3c	add	x9, sp, #0x60
0000000000024f40	str	x9, [x22, #0x110]
0000000000024f44	mov	x9, #0x500000000
0000000000024f48	stp	x8, x9, [sp, #0x68]
0000000000024f4c	ldr	w8, [sp, #0x10]
0000000000024f50	cmp	w8, #0x1
0000000000024f54	b.ne	0x2511c
0000000000024f58	ldrh	w8, [sp, #0x18]
0000000000024f5c	ldr	x9, [sp, #0x68]
0000000000024f60	str	x9, [x22, #0x110]
0000000000024f64	tbnz	w20, #0x1f, 0x250e0
0000000000024f68	ldr	w9, [x19, #0x8]
0000000000024f6c	cbz	w9, 0x250e0
0000000000024f70	sub	w10, w9, #0x1
0000000000024f74	cmp	w9, w20
0000000000024f78	csel	w9, w20, w10, hi
0000000000024f7c	tbnz	w9, #0x1f, 0x250e0
0000000000024f80	add	x10, x19, #0x10
0000000000024f84	ldrh	w11, [x10, x9, lsl #1]
0000000000024f88	cmp	w11, w8
0000000000024f8c	b.eq	0x25114
0000000000024f90	sub	x9, x9, #0x1
0000000000024f94	add	w11, w9, #0x1
0000000000024f98	mov	w0, #-0x1
0000000000024f9c	cmp	w11, #0x0
0000000000024fa0	b.gt	0x24f84
0000000000024fa4	b	0x250ec
0000000000024fa8	mov	x0, x19
0000000000024fac	bl	"_kfun:kotlin.text#<get-lastIndex>__at__kotlin.CharSequence(){}kotlin.Int"
0000000000024fb0	cmp	w0, w20
0000000000024fb4	csel	w20, w0, w20, lt
0000000000024fb8	tbnz	w20, #0x1f, 0x250e0
0000000000024fbc	add	x8, sp, #0x8
0000000000024fc0	add	x24, x8, #0x10
0000000000024fc4	mov	w25, #0x19
0000000000024fc8	ldarb	w8, [x23]
0000000000024fcc	tbz	w8, #0x0, 0x24fd4
0000000000024fd0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000024fd4	sub	w26, w20, #0x1
0000000000024fd8	ldr	x8, [x19]
0000000000024fdc	and	x8, x8, #0xfffffffffffffffc
0000000000024fe0	ldr	x8, [x8]
0000000000024fe4	ldr	w9, [x8, #0x3c]
0000000000024fe8	ldr	x8, [x8, #0x40]
0000000000024fec	tbnz	w9, #0x1f, 0x24ff8
0000000000024ff0	and	x9, x9, x25
0000000000024ff4	b	0x2507c
0000000000024ff8	neg	w10, w9
0000000000024ffc	mvn	w9, w9
0000000000025000	cmp	w10, #0x9
0000000000025004	b.ge	0x2503c
0000000000025008	cmp	w10, #0x2
000000000002500c	b.lt	0x25070
0000000000025010	mov	x10, #0x0
0000000000025014	mov	x11, x8
0000000000025018	ldr	w12, [x11]
000000000002501c	cmp	w12, #0x18
0000000000025020	b.gt	0x25078
0000000000025024	add	x10, x10, #0x1
0000000000025028	add	x11, x11, #0x10
000000000002502c	cmp	x9, x10
0000000000025030	b.ne	0x25018
0000000000025034	mov	x10, x9
0000000000025038	b	0x25078
000000000002503c	mov	w10, #0x0
0000000000025040	add	w11, w9, w10
0000000000025044	cmp	w11, #0x0
0000000000025048	cinc	w11, w11, lt
000000000002504c	asr	w11, w11, #1
0000000000025050	sbfiz	x12, x11, #4, #32
0000000000025054	ldr	w12, [x8, x12]
0000000000025058	cmp	w12, #0x19
000000000002505c	csinc	w10, w10, w11, ge
0000000000025060	csel	w9, w9, w11, lt
0000000000025064	cmp	w10, w9
0000000000025068	b.lt	0x25040
000000000002506c	b	0x25078
0000000000025070	mov	w10, #0x0
0000000000025074	b	0x25078
0000000000025078	sxtw	x9, w10
000000000002507c	add	x8, x8, x9, lsl #4
0000000000025080	ldr	x8, [x8, #0x8]
0000000000025084	ldr	x8, [x8, #0x8]
0000000000025088	mov	x0, x19
000000000002508c	mov	x1, x20
0000000000025090	blr	x8
0000000000025094	mov	x21, x0
0000000000025098	ldr	w8, [sp, #0x10]
000000000002509c	bic	w27, w8, w8, asr #31
00000000000250a0	mov	x28, x24
00000000000250a4	cbz	w27, 0x250cc
00000000000250a8	ldarb	w8, [x23]
00000000000250ac	tbz	w8, #0x0, 0x250b4
00000000000250b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000250b4	ldrh	w8, [x28]
00000000000250b8	cmp	w8, w21
00000000000250bc	b.eq	0x250e8
00000000000250c0	sub	w27, w27, #0x1
00000000000250c4	add	x28, x28, #0x2
00000000000250c8	cbnz	w27, 0x250a8
00000000000250cc	mov	w0, #-0x1
00000000000250d0	cmp	w20, #0x0
00000000000250d4	mov	x20, x26
00000000000250d8	b.gt	0x24fc8
00000000000250dc	b	0x250ec
00000000000250e0	mov	w0, #-0x1
00000000000250e4	b	0x250ec
00000000000250e8	mov	x0, x20
00000000000250ec	ldr	x8, [sp, #0x28]
00000000000250f0	str	x8, [x22, #0x110]
00000000000250f4	ldp	x29, x30, [sp, #0xe0]
00000000000250f8	ldp	x20, x19, [sp, #0xd0]
00000000000250fc	ldp	x22, x21, [sp, #0xc0]
0000000000025100	ldp	x24, x23, [sp, #0xb0]
0000000000025104	ldp	x26, x25, [sp, #0xa0]
0000000000025108	ldp	x28, x27, [sp, #0x90]
000000000002510c	add	sp, sp, #0xf0
0000000000025110	ret
0000000000025114	mov	x0, x9
0000000000025118	b	0x250ec
000000000002511c	cbnz	w8, 0x25154
0000000000025120	ldr	x8, [x22, #0x118]
0000000000025124	add	x0, x8, #0x70
0000000000025128	mov	w1, #0x38
000000000002512c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000025130	mov	x19, x0
0000000000025134	adr	x8, #0x3c25c
0000000000025138	nop
000000000002513c	str	x8, [x19, #0x10]!
0000000000025140	stur	xzr, [x19, #-0x8]
0000000000025144	str	x19, [sp, #0x78]
0000000000025148	adr	x1, #0x4a718
000000000002514c	nop
0000000000025150	b	0x25184
0000000000025154	ldr	x8, [x22, #0x118]
0000000000025158	add	x0, x8, #0x70
000000000002515c	mov	w1, #0x38
0000000000025160	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000025164	mov	x19, x0
0000000000025168	adr	x8, #0x3c408
000000000002516c	nop
0000000000025170	str	x8, [x19, #0x10]!
0000000000025174	stur	xzr, [x19, #-0x8]
0000000000025178	str	x19, [sp, #0x80]
000000000002517c	adr	x1, #0x4a714
0000000000025180	nop
0000000000025184	mov	x0, x19
0000000000025188	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000002518c	mov	x0, x19
0000000000025190	bl	_ThrowException
_kfun:kotlin.UByte#$<bridge-NBNB>compareTo(kotlin.UByte){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000025194	stp	x20, x19, [sp, #-0x20]!
0000000000025198	stp	x29, x30, [sp, #0x10]
000000000002519c	add	x29, sp, #0x10
00000000000251a0	mov	x19, x1
00000000000251a4	mov	x20, x0
00000000000251a8	adr	x8, #0x6f361
00000000000251ac	nop
00000000000251b0	ldarb	w8, [x8]
00000000000251b4	tbz	w8, #0x0, 0x251bc
00000000000251b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000251bc	ldrb	w8, [x20, #0x8]
00000000000251c0	ldrb	w9, [x19, #0x8]
00000000000251c4	cmp	w8, w9
00000000000251c8	mov	w8, #-0x1
00000000000251cc	cneg	w8, w8, hs
00000000000251d0	csel	w0, wzr, w8, eq
00000000000251d4	ldp	x29, x30, [sp, #0x10]
00000000000251d8	ldp	x20, x19, [sp], #0x20
00000000000251dc	ret
_kfun:kotlin.UByte#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
00000000000251e0	sub	sp, sp, #0x40
00000000000251e4	stp	x20, x19, [sp, #0x20]
00000000000251e8	stp	x29, x30, [sp, #0x30]
00000000000251ec	add	x29, sp, #0x30
00000000000251f0	mov	x19, x1
00000000000251f4	mov	x20, x0
00000000000251f8	adr	x8, #0x6f311
00000000000251fc	nop
0000000000025200	ldarb	w8, [x8]
0000000000025204	tbz	w8, #0x0, 0x2520c
0000000000025208	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002520c	ldrb	w8, [x20, #0x8]
0000000000025210	str	x8, [sp]
0000000000025214	adr	x2, #0x38293 ; literal pool for: "%d"
0000000000025218	nop
000000000002521c	add	x0, sp, #0x10
0000000000025220	mov	w1, #0x10
0000000000025224	bl	__ZN5konan8snprintfEPcmPKcz
0000000000025228	add	x0, sp, #0x10
000000000002522c	mov	x1, x19
0000000000025230	bl	_CreateStringFromCString
0000000000025234	str	x0, [x19]
0000000000025238	ldp	x29, x30, [sp, #0x30]
000000000002523c	ldp	x20, x19, [sp, #0x20]
0000000000025240	add	sp, sp, #0x40
0000000000025244	ret
_kfun:kotlin.UByte#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000025248	stp	x20, x19, [sp, #-0x20]!
000000000002524c	stp	x29, x30, [sp, #0x10]
0000000000025250	add	x29, sp, #0x10
0000000000025254	mov	x19, x0
0000000000025258	adr	x8, #0x6f2b1
000000000002525c	nop
0000000000025260	ldarb	w8, [x8]
0000000000025264	tbz	w8, #0x0, 0x2526c
0000000000025268	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002526c	ldrsb	w0, [x19, #0x8]
0000000000025270	ldp	x29, x30, [sp, #0x10]
0000000000025274	ldp	x20, x19, [sp], #0x20
0000000000025278	ret
_kfun:kotlin.UByte#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
000000000002527c	stp	x20, x19, [sp, #-0x20]!
0000000000025280	stp	x29, x30, [sp, #0x10]
0000000000025284	add	x29, sp, #0x10
0000000000025288	mov	x19, x1
000000000002528c	mov	x20, x0
0000000000025290	adr	x8, #0x6f279
0000000000025294	nop
0000000000025298	ldarb	w8, [x8]
000000000002529c	tbz	w8, #0x0, 0x252a4
00000000000252a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000252a4	cbz	x19, 0x252f4
00000000000252a8	ldrb	w8, [x20, #0x8]
00000000000252ac	ldr	x9, [x19]
00000000000252b0	and	x9, x9, #0xfffffffffffffffc
00000000000252b4	ldr	x9, [x9]
00000000000252b8	ldr	w9, [x9, #0x5c]
00000000000252bc	cmp	w9, #0x18f
00000000000252c0	b.ne	0x252f4
00000000000252c4	ldr	x9, [x19]
00000000000252c8	and	x9, x9, #0xfffffffffffffffc
00000000000252cc	ldr	x9, [x9]
00000000000252d0	ldr	w9, [x9, #0x5c]
00000000000252d4	cmp	w9, #0x18f
00000000000252d8	b.ne	0x25304
00000000000252dc	ldrb	w9, [x19, #0x8]
00000000000252e0	cmp	w9, w8
00000000000252e4	cset	w0, eq
00000000000252e8	ldp	x29, x30, [sp, #0x10]
00000000000252ec	ldp	x20, x19, [sp], #0x20
00000000000252f0	ret
00000000000252f4	mov	w0, #0x0
00000000000252f8	ldp	x29, x30, [sp, #0x10]
00000000000252fc	ldp	x20, x19, [sp], #0x20
0000000000025300	ret
0000000000025304	adr	x1, #0x4044c
0000000000025308	nop
000000000002530c	mov	x0, x19
0000000000025310	bl	_ThrowClassCastException
_kfun:kotlin.UInt#$<bridge-NBNB>compareTo(kotlin.UInt){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000025314	stp	x20, x19, [sp, #-0x20]!
0000000000025318	stp	x29, x30, [sp, #0x10]
000000000002531c	add	x29, sp, #0x10
0000000000025320	mov	x19, x1
0000000000025324	mov	x20, x0
0000000000025328	adr	x8, #0x6f1e1
000000000002532c	nop
0000000000025330	ldarb	w8, [x8]
0000000000025334	tbz	w8, #0x0, 0x2533c
0000000000025338	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002533c	ldr	w8, [x20, #0x8]
0000000000025340	ldr	w9, [x19, #0x8]
0000000000025344	cmp	w8, w9
0000000000025348	mov	w8, #-0x1
000000000002534c	cneg	w8, w8, hs
0000000000025350	csel	w0, wzr, w8, eq
0000000000025354	ldp	x29, x30, [sp, #0x10]
0000000000025358	ldp	x20, x19, [sp], #0x20
000000000002535c	ret
_kfun:kotlin.UInt#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000025360	sub	sp, sp, #0x50
0000000000025364	stp	x20, x19, [sp, #0x30]
0000000000025368	stp	x29, x30, [sp, #0x40]
000000000002536c	add	x29, sp, #0x40
0000000000025370	mov	x19, x1
0000000000025374	mov	x20, x0
0000000000025378	adr	x8, #0x6f191
000000000002537c	nop
0000000000025380	ldarb	w8, [x8]
0000000000025384	tbz	w8, #0x0, 0x2538c
0000000000025388	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002538c	ldr	w8, [x20, #0x8]
0000000000025390	str	x8, [sp]
0000000000025394	adr	x2, #0x3810e ; literal pool for: "%lld"
0000000000025398	nop
000000000002539c	add	x0, sp, #0x10
00000000000253a0	mov	w1, #0x20
00000000000253a4	bl	__ZN5konan8snprintfEPcmPKcz
00000000000253a8	add	x0, sp, #0x10
00000000000253ac	mov	x1, x19
00000000000253b0	bl	_CreateStringFromCString
00000000000253b4	str	x0, [x19]
00000000000253b8	ldp	x29, x30, [sp, #0x40]
00000000000253bc	ldp	x20, x19, [sp, #0x30]
00000000000253c0	add	sp, sp, #0x50
00000000000253c4	ret
_kfun:kotlin.UInt#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
00000000000253c8	stp	x20, x19, [sp, #-0x20]!
00000000000253cc	stp	x29, x30, [sp, #0x10]
00000000000253d0	add	x29, sp, #0x10
00000000000253d4	mov	x19, x0
00000000000253d8	adr	x8, #0x6f131
00000000000253dc	nop
00000000000253e0	ldarb	w8, [x8]
00000000000253e4	tbz	w8, #0x0, 0x253ec
00000000000253e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000253ec	ldr	w0, [x19, #0x8]
00000000000253f0	ldp	x29, x30, [sp, #0x10]
00000000000253f4	ldp	x20, x19, [sp], #0x20
00000000000253f8	ret
_kfun:kotlin.UInt#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
00000000000253fc	stp	x20, x19, [sp, #-0x20]!
0000000000025400	stp	x29, x30, [sp, #0x10]
0000000000025404	add	x29, sp, #0x10
0000000000025408	mov	x19, x1
000000000002540c	mov	x20, x0
0000000000025410	adr	x8, #0x6f0f9
0000000000025414	nop
0000000000025418	ldarb	w8, [x8]
000000000002541c	tbz	w8, #0x0, 0x25424
0000000000025420	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025424	cbz	x19, 0x25474
0000000000025428	ldr	w8, [x20, #0x8]
000000000002542c	ldr	x9, [x19]
0000000000025430	and	x9, x9, #0xfffffffffffffffc
0000000000025434	ldr	x9, [x9]
0000000000025438	ldr	w9, [x9, #0x5c]
000000000002543c	cmp	w9, #0x193
0000000000025440	b.ne	0x25474
0000000000025444	ldr	x9, [x19]
0000000000025448	and	x9, x9, #0xfffffffffffffffc
000000000002544c	ldr	x9, [x9]
0000000000025450	ldr	w9, [x9, #0x5c]
0000000000025454	cmp	w9, #0x193
0000000000025458	b.ne	0x25484
000000000002545c	ldr	w9, [x19, #0x8]
0000000000025460	cmp	w9, w8
0000000000025464	cset	w0, eq
0000000000025468	ldp	x29, x30, [sp, #0x10]
000000000002546c	ldp	x20, x19, [sp], #0x20
0000000000025470	ret
0000000000025474	mov	w0, #0x0
0000000000025478	ldp	x29, x30, [sp, #0x10]
000000000002547c	ldp	x20, x19, [sp], #0x20
0000000000025480	ret
0000000000025484	adr	x1, #0x4035c
0000000000025488	nop
000000000002548c	mov	x0, x19
0000000000025490	bl	_ThrowClassCastException
_kfun:kotlin.ULong#$<bridge-NBNB>compareTo(kotlin.ULong){}kotlin.Int(kotlin.Any?){}kotlin.Int:
0000000000025494	stp	x20, x19, [sp, #-0x20]!
0000000000025498	stp	x29, x30, [sp, #0x10]
000000000002549c	add	x29, sp, #0x10
00000000000254a0	mov	x19, x1
00000000000254a4	mov	x20, x0
00000000000254a8	adr	x8, #0x6f061
00000000000254ac	nop
00000000000254b0	ldarb	w8, [x8]
00000000000254b4	tbz	w8, #0x0, 0x254bc
00000000000254b8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000254bc	ldr	x8, [x20, #0x8]
00000000000254c0	ldr	x9, [x19, #0x8]
00000000000254c4	cmp	x8, x9
00000000000254c8	mov	w8, #-0x1
00000000000254cc	cneg	w8, w8, hs
00000000000254d0	csel	w0, wzr, w8, eq
00000000000254d4	ldp	x29, x30, [sp, #0x10]
00000000000254d8	ldp	x20, x19, [sp], #0x20
00000000000254dc	ret
_kfun:kotlin.ULong#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
00000000000254e0	sub	sp, sp, #0xd0
00000000000254e4	stp	x24, x23, [sp, #0x90]
00000000000254e8	stp	x22, x21, [sp, #0xa0]
00000000000254ec	stp	x20, x19, [sp, #0xb0]
00000000000254f0	stp	x29, x30, [sp, #0xc0]
00000000000254f4	add	x29, sp, #0xc0
00000000000254f8	mov	x19, x1
00000000000254fc	mov	x20, x0
0000000000025500	adr	x8, #0x6f009
0000000000025504	nop
0000000000025508	ldarb	w8, [x8]
000000000002550c	tbz	w8, #0x0, 0x25514
0000000000025510	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025514	ldr	x8, [x20, #0x8]
0000000000025518	movi.16b	v0, #0x0
000000000002551c	stp	q0, q0, [sp]
0000000000025520	str	xzr, [sp, #0x20]
0000000000025524	adrp	x20, 85 ; 0x7a000
0000000000025528	add	x20, x20, #0x4e0
000000000002552c	ldr	x24, [x20]
0000000000025530	mov	x0, x20
0000000000025534	blr	x24
0000000000025538	ldr	x10, [x0]
000000000002553c	ldr	x11, [x10, #0x110]
0000000000025540	mov	x9, sp
0000000000025544	str	x9, [x10, #0x110]
0000000000025548	mov	x10, #0x500000000
000000000002554c	stp	x11, x10, [sp, #0x8]
0000000000025550	tbnz	x8, #0x3f, 0x25568
0000000000025554	mov	x0, x8
0000000000025558	mov	w1, #0xa
000000000002555c	mov	x2, x19
0000000000025560	bl	_Kotlin_Long_toStringRadix
0000000000025564	b	0x255c8
0000000000025568	add	x21, x9, #0x20
000000000002556c	add	x2, x9, #0x18
0000000000025570	mov	x9, #-0x3333333333333334
0000000000025574	movk	x9, #0xcccd
0000000000025578	umulh	x9, x8, x9
000000000002557c	lsr	x9, x9, #4
0000000000025580	mov	x10, #-0x14
0000000000025584	madd	x8, x9, x10, x8
0000000000025588	sub	x10, x8, #0xa
000000000002558c	cmp	x8, #0x9
0000000000025590	cset	w0, gt
0000000000025594	csel	x22, x10, x8, gt
0000000000025598	bfi	x0, x9, #1, #60
000000000002559c	mov	w1, #0xa
00000000000255a0	bl	_Kotlin_Long_toStringRadix
00000000000255a4	mov	x23, x0
00000000000255a8	mov	x0, x22
00000000000255ac	mov	w1, #0xa
00000000000255b0	mov	x2, x21
00000000000255b4	bl	_Kotlin_Long_toStringRadix
00000000000255b8	mov	x1, x0
00000000000255bc	mov	x0, x23
00000000000255c0	mov	x2, x19
00000000000255c4	bl	_Kotlin_String_plusImpl
00000000000255c8	mov	x8, x0
00000000000255cc	str	x0, [x19]
00000000000255d0	mov	x0, x20
00000000000255d4	blr	x24
00000000000255d8	ldr	x9, [x0]
00000000000255dc	ldr	x10, [sp, #0x8]
00000000000255e0	str	x10, [x9, #0x110]
00000000000255e4	str	x8, [x19]
00000000000255e8	mov	x0, x8
00000000000255ec	ldp	x29, x30, [sp, #0xc0]
00000000000255f0	ldp	x20, x19, [sp, #0xb0]
00000000000255f4	ldp	x22, x21, [sp, #0xa0]
00000000000255f8	ldp	x24, x23, [sp, #0x90]
00000000000255fc	add	sp, sp, #0xd0
0000000000025600	ret
_kfun:kotlin.ULong#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000025604	stp	x20, x19, [sp, #-0x20]!
0000000000025608	stp	x29, x30, [sp, #0x10]
000000000002560c	add	x29, sp, #0x10
0000000000025610	mov	x19, x0
0000000000025614	adr	x8, #0x6eef5
0000000000025618	nop
000000000002561c	ldarb	w8, [x8]
0000000000025620	tbz	w8, #0x0, 0x25628
0000000000025624	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025628	ldp	w8, w9, [x19, #0x8]
000000000002562c	eor	w0, w9, w8
0000000000025630	ldp	x29, x30, [sp, #0x10]
0000000000025634	ldp	x20, x19, [sp], #0x20
0000000000025638	ret
_kfun:kotlin.ULong#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
000000000002563c	stp	x20, x19, [sp, #-0x20]!
0000000000025640	stp	x29, x30, [sp, #0x10]
0000000000025644	add	x29, sp, #0x10
0000000000025648	mov	x19, x1
000000000002564c	mov	x20, x0
0000000000025650	adr	x8, #0x6eeb9
0000000000025654	nop
0000000000025658	ldarb	w8, [x8]
000000000002565c	tbz	w8, #0x0, 0x25664
0000000000025660	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025664	cbz	x19, 0x256b4
0000000000025668	ldr	x8, [x20, #0x8]
000000000002566c	ldr	x9, [x19]
0000000000025670	and	x9, x9, #0xfffffffffffffffc
0000000000025674	ldr	x9, [x9]
0000000000025678	ldr	w9, [x9, #0x5c]
000000000002567c	cmp	w9, #0x19c
0000000000025680	b.ne	0x256b4
0000000000025684	ldr	x9, [x19]
0000000000025688	and	x9, x9, #0xfffffffffffffffc
000000000002568c	ldr	x9, [x9]
0000000000025690	ldr	w9, [x9, #0x5c]
0000000000025694	cmp	w9, #0x19c
0000000000025698	b.ne	0x256c4
000000000002569c	ldr	x9, [x19, #0x8]
00000000000256a0	cmp	x9, x8
00000000000256a4	cset	w0, eq
00000000000256a8	ldp	x29, x30, [sp, #0x10]
00000000000256ac	ldp	x20, x19, [sp], #0x20
00000000000256b0	ret
00000000000256b4	mov	w0, #0x0
00000000000256b8	ldp	x29, x30, [sp, #0x10]
00000000000256bc	ldp	x20, x19, [sp], #0x20
00000000000256c0	ret
00000000000256c4	adr	x1, #0x401ac
00000000000256c8	nop
00000000000256cc	mov	x0, x19
00000000000256d0	bl	_ThrowClassCastException
_kfun:kotlin.UShort#$<bridge-NBNB>compareTo(kotlin.UShort){}kotlin.Int(kotlin.Any?){}kotlin.Int:
00000000000256d4	stp	x20, x19, [sp, #-0x20]!
00000000000256d8	stp	x29, x30, [sp, #0x10]
00000000000256dc	add	x29, sp, #0x10
00000000000256e0	mov	x19, x1
00000000000256e4	mov	x20, x0
00000000000256e8	adr	x8, #0x6ee21
00000000000256ec	nop
00000000000256f0	ldarb	w8, [x8]
00000000000256f4	tbz	w8, #0x0, 0x256fc
00000000000256f8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000256fc	ldrh	w8, [x20, #0x8]
0000000000025700	ldrh	w9, [x19, #0x8]
0000000000025704	cmp	w8, w9
0000000000025708	mov	w8, #-0x1
000000000002570c	cneg	w8, w8, hs
0000000000025710	csel	w0, wzr, w8, eq
0000000000025714	ldp	x29, x30, [sp, #0x10]
0000000000025718	ldp	x20, x19, [sp], #0x20
000000000002571c	ret
_kfun:kotlin.UShort#$<bridge-NBN>toString(){}kotlin.String(){}kotlin.String:
0000000000025720	sub	sp, sp, #0x40
0000000000025724	stp	x20, x19, [sp, #0x20]
0000000000025728	stp	x29, x30, [sp, #0x30]
000000000002572c	add	x29, sp, #0x30
0000000000025730	mov	x19, x1
0000000000025734	mov	x20, x0
0000000000025738	adr	x8, #0x6edd1
000000000002573c	nop
0000000000025740	ldarb	w8, [x8]
0000000000025744	tbz	w8, #0x0, 0x2574c
0000000000025748	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002574c	ldrh	w8, [x20, #0x8]
0000000000025750	str	x8, [sp]
0000000000025754	adr	x2, #0x37d53 ; literal pool for: "%d"
0000000000025758	nop
000000000002575c	add	x0, sp, #0x10
0000000000025760	mov	w1, #0x10
0000000000025764	bl	__ZN5konan8snprintfEPcmPKcz
0000000000025768	add	x0, sp, #0x10
000000000002576c	mov	x1, x19
0000000000025770	bl	_CreateStringFromCString
0000000000025774	str	x0, [x19]
0000000000025778	ldp	x29, x30, [sp, #0x30]
000000000002577c	ldp	x20, x19, [sp, #0x20]
0000000000025780	add	sp, sp, #0x40
0000000000025784	ret
_kfun:kotlin.UShort#$<bridge-NBN>hashCode(){}kotlin.Int(){}kotlin.Int:
0000000000025788	stp	x20, x19, [sp, #-0x20]!
000000000002578c	stp	x29, x30, [sp, #0x10]
0000000000025790	add	x29, sp, #0x10
0000000000025794	mov	x19, x0
0000000000025798	adr	x8, #0x6ed71
000000000002579c	nop
00000000000257a0	ldarb	w8, [x8]
00000000000257a4	tbz	w8, #0x0, 0x257ac
00000000000257a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000257ac	ldrsh	w0, [x19, #0x8]
00000000000257b0	ldp	x29, x30, [sp, #0x10]
00000000000257b4	ldp	x20, x19, [sp], #0x20
00000000000257b8	ret
_kfun:kotlin.UShort#$<bridge-NBNN>equals(kotlin.Any?){}kotlin.Boolean(kotlin.Any?){}kotlin.Boolean:
00000000000257bc	stp	x20, x19, [sp, #-0x20]!
00000000000257c0	stp	x29, x30, [sp, #0x10]
00000000000257c4	add	x29, sp, #0x10
00000000000257c8	mov	x19, x1
00000000000257cc	mov	x20, x0
00000000000257d0	adr	x8, #0x6ed39
00000000000257d4	nop
00000000000257d8	ldarb	w8, [x8]
00000000000257dc	tbz	w8, #0x0, 0x257e4
00000000000257e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000257e4	cbz	x19, 0x25834
00000000000257e8	ldrh	w8, [x20, #0x8]
00000000000257ec	ldr	x9, [x19]
00000000000257f0	and	x9, x9, #0xfffffffffffffffc
00000000000257f4	ldr	x9, [x9]
00000000000257f8	ldr	w9, [x9, #0x5c]
00000000000257fc	cmp	w9, #0x1a5
0000000000025800	b.ne	0x25834
0000000000025804	ldr	x9, [x19]
0000000000025808	and	x9, x9, #0xfffffffffffffffc
000000000002580c	ldr	x9, [x9]
0000000000025810	ldr	w9, [x9, #0x5c]
0000000000025814	cmp	w9, #0x1a5
0000000000025818	b.ne	0x25844
000000000002581c	ldrh	w9, [x19, #0x8]
0000000000025820	cmp	w9, w8
0000000000025824	cset	w0, eq
0000000000025828	ldp	x29, x30, [sp, #0x10]
000000000002582c	ldp	x20, x19, [sp], #0x20
0000000000025830	ret
0000000000025834	mov	w0, #0x0
0000000000025838	ldp	x29, x30, [sp, #0x10]
000000000002583c	ldp	x20, x19, [sp], #0x20
0000000000025840	ret
0000000000025844	adr	x1, #0x400bc
0000000000025848	nop
000000000002584c	mov	x0, x19
0000000000025850	bl	_ThrowClassCastException
_kfun:com.example.reversecomplementkmm.ReverseComplementKmm.prepareWrite#internal:
0000000000025854	sub	sp, sp, #0x70
0000000000025858	stp	x22, x21, [sp, #0x40]
000000000002585c	stp	x20, x19, [sp, #0x50]
0000000000025860	stp	x29, x30, [sp, #0x60]
0000000000025864	add	x29, sp, #0x60
0000000000025868	mov	x20, x1
000000000002586c	mov	x19, x0
0000000000025870	movi.16b	v0, #0x0
0000000000025874	stp	q0, q0, [sp]
0000000000025878	adrp	x0, 85 ; 0x7a000
000000000002587c	add	x0, x0, #0x4e0
0000000000025880	ldr	x8, [x0]
0000000000025884	blr	x8
0000000000025888	ldr	x21, [x0]
000000000002588c	ldr	x8, [x21, #0x110]
0000000000025890	mov	x9, sp
0000000000025894	str	x9, [x21, #0x110]
0000000000025898	mov	x9, #0x400000000
000000000002589c	stp	x8, x9, [sp, #0x8]
00000000000258a0	adr	x8, #0x6ec69
00000000000258a4	nop
00000000000258a8	ldarb	w8, [x8]
00000000000258ac	tbz	w8, #0x0, 0x258b4
00000000000258b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000258b4	ldr	w8, [x19, #0x58]
00000000000258b8	ldr	x9, [x19, #0x38]
00000000000258bc	str	x9, [sp, #0x18]
00000000000258c0	ldr	w9, [x9, #0x8]
00000000000258c4	add	w8, w8, w20
00000000000258c8	cmp	w8, w9
00000000000258cc	b.le	0x2590c
00000000000258d0	movi.16b	v0, #0x0
00000000000258d4	stp	q0, q0, [sp, #0x20]
00000000000258d8	ldr	x8, [x21, #0x110]
00000000000258dc	add	x9, sp, #0x20
00000000000258e0	str	x9, [x21, #0x110]
00000000000258e4	mov	x9, #0x400000000
00000000000258e8	stp	x8, x9, [sp, #0x28]
00000000000258ec	ldr	x0, [x19, #0x38]
00000000000258f0	str	x0, [sp, #0x38]
00000000000258f4	ldr	w2, [x19, #0x58]
00000000000258f8	mov	w1, #0x0
00000000000258fc	bl	"_kfun:com.example.kmm.utils.IOAndBufferOperator#writeBytes(kotlin.ByteArray;kotlin.Int;kotlin.Int){}"
0000000000025900	str	wzr, [x19, #0x58]
0000000000025904	ldr	x8, [sp, #0x28]
0000000000025908	str	x8, [x21, #0x110]
000000000002590c	ldr	x8, [sp, #0x8]
0000000000025910	str	x8, [x21, #0x110]
0000000000025914	ldp	x29, x30, [sp, #0x60]
0000000000025918	ldp	x20, x19, [sp, #0x50]
000000000002591c	ldp	x22, x21, [sp, #0x40]
0000000000025920	add	sp, sp, #0x70
0000000000025924	ret
_kfun:com.example.reversecomplementkmm.ReverseComplementKmm.write#internal:
0000000000025928	sub	sp, sp, #0x50
000000000002592c	stp	x22, x21, [sp, #0x20]
0000000000025930	stp	x20, x19, [sp, #0x30]
0000000000025934	stp	x29, x30, [sp, #0x40]
0000000000025938	add	x29, sp, #0x40
000000000002593c	mov	x19, x1
0000000000025940	mov	x20, x0
0000000000025944	movi.16b	v0, #0x0
0000000000025948	stp	q0, q0, [sp]
000000000002594c	adrp	x0, 85 ; 0x7a000
0000000000025950	add	x0, x0, #0x4e0
0000000000025954	ldr	x8, [x0]
0000000000025958	blr	x8
000000000002595c	ldr	x21, [x0]
0000000000025960	ldr	x8, [x21, #0x110]
0000000000025964	mov	x9, sp
0000000000025968	str	x9, [x21, #0x110]
000000000002596c	mov	x9, #0x400000000
0000000000025970	stp	x8, x9, [sp, #0x8]
0000000000025974	adr	x8, #0x6eb95
0000000000025978	nop
000000000002597c	ldarb	w8, [x8]
0000000000025980	tbz	w8, #0x0, 0x25988
0000000000025984	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025988	ldr	x8, [x20, #0x38]
000000000002598c	str	x8, [sp, #0x18]
0000000000025990	ldrsw	x9, [x20, #0x58]
0000000000025994	add	w10, w9, #0x1
0000000000025998	str	w10, [x20, #0x58]
000000000002599c	ldr	w10, [x8, #0x8]
00000000000259a0	cmp	w10, w9
00000000000259a4	b.ls	0x259d0
00000000000259a8	ldr	xzr, [x8]
00000000000259ac	add	x8, x8, x9
00000000000259b0	strb	w19, [x8, #0x10]
00000000000259b4	ldr	x8, [sp, #0x8]
00000000000259b8	str	x8, [x21, #0x110]
00000000000259bc	ldp	x29, x30, [sp, #0x40]
00000000000259c0	ldp	x20, x19, [sp, #0x30]
00000000000259c4	ldp	x22, x21, [sp, #0x20]
00000000000259c8	add	sp, sp, #0x50
00000000000259cc	ret
00000000000259d0	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:com.example.reversecomplementkmm.ReverseComplementKmm.finishData#internal:
00000000000259d4	sub	sp, sp, #0x50
00000000000259d8	stp	x22, x21, [sp, #0x20]
00000000000259dc	stp	x20, x19, [sp, #0x30]
00000000000259e0	stp	x29, x30, [sp, #0x40]
00000000000259e4	add	x29, sp, #0x40
00000000000259e8	mov	x19, x0
00000000000259ec	movi.16b	v0, #0x0
00000000000259f0	stp	q0, q0, [sp]
00000000000259f4	adrp	x0, 85 ; 0x7a000
00000000000259f8	add	x0, x0, #0x4e0
00000000000259fc	ldr	x8, [x0]
0000000000025a00	blr	x8
0000000000025a04	ldr	x20, [x0]
0000000000025a08	ldr	x8, [x20, #0x110]
0000000000025a0c	mov	x9, sp
0000000000025a10	str	x9, [x20, #0x110]
0000000000025a14	mov	x9, #0x400000000
0000000000025a18	stp	x8, x9, [sp, #0x8]
0000000000025a1c	adr	x21, #0x6eaed
0000000000025a20	nop
0000000000025a24	ldarb	w8, [x21]
0000000000025a28	tbz	w8, #0x0, 0x25a40
0000000000025a2c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025a30	b	0x25a40
0000000000025a34	mov	x0, x19
0000000000025a38	mov	w1, #0xa
0000000000025a3c	bl	"_kfun:com.example.reversecomplementkmm.ReverseComplementKmm.write#internal"
0000000000025a40	ldr	w8, [x19, #0x54]
0000000000025a44	cmp	w8, #0x0
0000000000025a48	b.le	0x25abc
0000000000025a4c	ldarb	w8, [x21]
0000000000025a50	tbz	w8, #0x0, 0x25a58
0000000000025a54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025a58	ldp	w8, w9, [x19, #0x50]
0000000000025a5c	cmp	w8, w9
0000000000025a60	csel	w22, w8, w9, lt
0000000000025a64	add	w1, w22, #0x1
0000000000025a68	mov	x0, x19
0000000000025a6c	bl	"_kfun:com.example.reversecomplementkmm.ReverseComplementKmm.prepareWrite#internal"
0000000000025a70	cbz	w22, 0x25a34
0000000000025a74	ldarb	w8, [x21]
0000000000025a78	tbz	w8, #0x0, 0x25a80
0000000000025a7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025a80	ldr	x8, [x19, #0x30]
0000000000025a84	str	x8, [sp, #0x18]
0000000000025a88	ldr	w9, [x19, #0x54]
0000000000025a8c	sub	w9, w9, #0x1
0000000000025a90	str	w9, [x19, #0x54]
0000000000025a94	ldr	w10, [x8, #0x8]
0000000000025a98	cmp	w10, w9
0000000000025a9c	b.ls	0x25adc
0000000000025aa0	add	x8, x8, w9, sxtw
0000000000025aa4	ldrsb	w1, [x8, #0x10]
0000000000025aa8	mov	x0, x19
0000000000025aac	bl	"_kfun:com.example.reversecomplementkmm.ReverseComplementKmm.write#internal"
0000000000025ab0	sub	w22, w22, #0x1
0000000000025ab4	cbnz	w22, 0x25a74
0000000000025ab8	b	0x25a34
0000000000025abc	str	xzr, [x19, #0x50]
0000000000025ac0	ldr	x8, [sp, #0x8]
0000000000025ac4	str	x8, [x20, #0x110]
0000000000025ac8	ldp	x29, x30, [sp, #0x40]
0000000000025acc	ldp	x20, x19, [sp, #0x30]
0000000000025ad0	ldp	x22, x21, [sp, #0x20]
0000000000025ad4	add	sp, sp, #0x50
0000000000025ad8	ret
0000000000025adc	bl	_ThrowArrayIndexOutOfBoundsException
_kfun:com.example.kmm.utils.IOAndBufferOperator#read(kotlin.ByteArray;kotlin.Int;kotlin.Int){}kotlin.Int:
0000000000025ae0	sub	sp, sp, #0xa0
0000000000025ae4	stp	x24, x23, [sp, #0x60]
0000000000025ae8	stp	x22, x21, [sp, #0x70]
0000000000025aec	stp	x20, x19, [sp, #0x80]
0000000000025af0	stp	x29, x30, [sp, #0x90]
0000000000025af4	add	x29, sp, #0x90
0000000000025af8	mov	x19, x2
0000000000025afc	mov	x20, x1
0000000000025b00	mov	x21, x0
0000000000025b04	movi.16b	v0, #0x0
0000000000025b08	stp	q0, q0, [sp, #0x20]
0000000000025b0c	str	xzr, [sp, #0x50]
0000000000025b10	str	q0, [sp, #0x40]
0000000000025b14	stp	xzr, xzr, [sp, #0x10]
0000000000025b18	adr	x8, #0x3ad78
0000000000025b1c	nop
0000000000025b20	orr	x8, x8, #0x3
0000000000025b24	stp	x8, xzr, [sp]
0000000000025b28	adrp	x0, 85 ; 0x7a000
0000000000025b2c	add	x0, x0, #0x4e0
0000000000025b30	ldr	x8, [x0]
0000000000025b34	blr	x8
0000000000025b38	ldr	x22, [x0]
0000000000025b3c	ldr	x8, [x22, #0x110]
0000000000025b40	add	x9, sp, #0x20
0000000000025b44	str	x9, [x22, #0x110]
0000000000025b48	mov	x9, #0x700000000
0000000000025b4c	stp	x8, x9, [sp, #0x28]
0000000000025b50	adr	x23, #0x6e9b9
0000000000025b54	nop
0000000000025b58	ldarb	w8, [x23]
0000000000025b5c	tbz	w8, #0x0, 0x25b64
0000000000025b60	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025b64	mov	x8, sp
0000000000025b68	str	x8, [sp, #0x38]
0000000000025b6c	adr	x8, #0x485ac
0000000000025b70	nop
0000000000025b74	stp	x8, xzr, [sp, #0x10]
0000000000025b78	ldr	x8, [x22, #0x118]
0000000000025b7c	add	x0, x8, #0x70
0000000000025b80	mov	w1, #0x20
0000000000025b84	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000025b88	adr	x8, #0x3b068
0000000000025b8c	nop
0000000000025b90	str	x8, [x0, #0x10]!
0000000000025b94	stur	xzr, [x0, #-0x8]
0000000000025b98	str	x0, [sp, #0x40]
0000000000025b9c	str	x21, [x0, #0x8]
0000000000025ba0	str	w20, [x0, #0x10]
0000000000025ba4	str	x0, [sp, #0x40]
0000000000025ba8	mov	x1, sp
0000000000025bac	bl	"_kfun:kotlinx.cinterop.object-2.getPointer#internal"
0000000000025bb0	mov	x1, x0
0000000000025bb4	sxtw	x2, w19
0000000000025bb8	add	x8, x22, #0x138
0000000000025bbc	mov	w9, #0x1
0000000000025bc0	ldaxr	wzr, [x8]
0000000000025bc4	stlxr	w10, w9, [x8]
0000000000025bc8	cbnz	w10, 0x25bc0
0000000000025bcc	mov	w0, #0x0
0000000000025bd0	bl	0x55e1c ; symbol stub for: _read
0000000000025bd4	mov	x19, x0
0000000000025bd8	add	x0, x22, #0x138
0000000000025bdc	ldaxr	w8, [x0]
0000000000025be0	stlxr	w9, wzr, [x0]
0000000000025be4	cbnz	w9, 0x25bdc
0000000000025be8	cmp	w8, #0x1
0000000000025bec	b.ne	0x25bfc
0000000000025bf0	ldarb	w8, [x23]
0000000000025bf4	tbz	w8, #0x0, 0x25bfc
0000000000025bf8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025bfc	mov	x0, sp
0000000000025c00	bl	"_kfun:kotlinx.cinterop.ArenaBase#clearImpl(){}"
0000000000025c04	ldr	x8, [sp, #0x28]
0000000000025c08	str	x8, [x22, #0x110]
0000000000025c0c	mov	x0, x19
0000000000025c10	ldp	x29, x30, [sp, #0x90]
0000000000025c14	ldp	x20, x19, [sp, #0x80]
0000000000025c18	ldp	x22, x21, [sp, #0x70]
0000000000025c1c	ldp	x24, x23, [sp, #0x60]
0000000000025c20	add	sp, sp, #0xa0
0000000000025c24	ret
0000000000025c28	mov	x19, x1
0000000000025c2c	mov	x20, x0
0000000000025c30	add	x0, x22, #0x138
0000000000025c34	ldaxr	w8, [x0]
0000000000025c38	stlxr	w9, wzr, [x0]
0000000000025c3c	cbnz	w9, 0x25c34
0000000000025c40	cmp	w8, #0x1
0000000000025c44	b.ne	0x25c54
0000000000025c48	ldarb	w8, [x23]
0000000000025c4c	tbz	w8, #0x0, 0x25c54
0000000000025c50	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025c54	add	x8, sp, #0x20
0000000000025c58	str	x8, [x22, #0x110]
0000000000025c5c	mov	x0, x20
0000000000025c60	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000025c64	cmp	w19, #0x2
0000000000025c68	b.eq	0x25c74
0000000000025c6c	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000025c70	b	0x25c70
0000000000025c74	ldr	x8, [x0, #0x8]
0000000000025c78	ldr	x19, [x8]
0000000000025c7c	str	x19, [sp, #0x50]
0000000000025c80	b	0x25c9c
0000000000025c84	add	x8, sp, #0x20
0000000000025c88	str	x8, [x22, #0x110]
0000000000025c8c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000025c90	ldr	x8, [x0, #0x8]
0000000000025c94	ldr	x19, [x8]
0000000000025c98	str	x19, [sp, #0x48]
0000000000025c9c	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
0000000000025ca0	mov	x0, sp
0000000000025ca4	bl	"_kfun:kotlinx.cinterop.ArenaBase#clearImpl(){}"
0000000000025ca8	mov	x0, x19
0000000000025cac	bl	_ThrowException
_kfun:com.example.kmm.utils.IOAndBufferOperator#writeBytes(kotlin.ByteArray;kotlin.Int;kotlin.Int){}:
0000000000025cb0	sub	sp, sp, #0x190
0000000000025cb4	stp	x28, x27, [sp, #0x130]
0000000000025cb8	stp	x26, x25, [sp, #0x140]
0000000000025cbc	stp	x24, x23, [sp, #0x150]
0000000000025cc0	stp	x22, x21, [sp, #0x160]
0000000000025cc4	stp	x20, x19, [sp, #0x170]
0000000000025cc8	stp	x29, x30, [sp, #0x180]
0000000000025ccc	add	x29, sp, #0x180
0000000000025cd0	mov	x23, x2
0000000000025cd4	mov	x19, x1
0000000000025cd8	mov	x20, x0
0000000000025cdc	movi.16b	v0, #0x0
0000000000025ce0	stp	q0, q0, [sp, #0x40]
0000000000025ce4	str	xzr, [sp, #0x80]
0000000000025ce8	stp	q0, q0, [sp, #0x60]
0000000000025cec	add	x21, sp, #0x40
0000000000025cf0	add	x22, x21, #0x18
0000000000025cf4	adrp	x25, 85 ; 0x7a000
0000000000025cf8	add	x25, x25, #0x4e0
0000000000025cfc	ldr	x26, [x25]
0000000000025d00	mov	x0, x25
0000000000025d04	blr	x26
0000000000025d08	ldr	x24, [x0]
0000000000025d0c	ldr	x8, [x24, #0x110]
0000000000025d10	str	x21, [x24, #0x110]
0000000000025d14	mov	x9, #0x900000000
0000000000025d18	stp	x8, x9, [sp, #0x48]
0000000000025d1c	adr	x27, #0x6e7ed
0000000000025d20	nop
0000000000025d24	ldarb	w8, [x27]
0000000000025d28	tbz	w8, #0x0, 0x25d30
0000000000025d2c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000025d30	add	w23, w19, w23
0000000000025d34	ldr	w2, [x20, #0x8]
0000000000025d38	mov	x0, x19
0000000000025d3c	mov	x1, x23
0000000000025d40	bl	"_kfun:kotlin.collections#checkCopyOfRangeArguments(kotlin.Int;kotlin.Int;kotlin.Int){}"
0000000000025d44	mov	x0, x20
0000000000025d48	mov	x1, x19
0000000000025d4c	mov	x2, x23
0000000000025d50	mov	x3, x22
0000000000025d54	bl	"_kfun:kotlin.collections#copyOfUninitializedElements__at__kotlin.ByteArray(kotlin.Int;kotlin.Int){}kotlin.ByteArray"
0000000000025d58	mov	x23, x0
0000000000025d5c	str	x0, [sp, #0x58]
0000000000025d60	movi.16b	v0, #0x0
0000000000025d64	stp	q0, q0, [sp, #0x90]
0000000000025d68	stp	q0, q0, [sp, #0xb0]
0000000000025d6c	add	x22, sp, #0x90
0000000000025d70	mov	x8, #0x800000000
0000000000025d74	ldp	x9, x10, [x24, #0x110]
0000000000025d78	stp	x9, x8, [sp, #0x98]
0000000000025d7c	add	x20, x22, #0x20
0000000000025d80	str	x22, [x24, #0x110]
0000000000025d84	add	x0, x10, #0x70
0000000000025d88	mov	w1, #0x28
0000000000025d8c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000025d90	mov	x19, x0
0000000000025d94	adr	x8, #0x3aafc
0000000000025d98	nop
0000000000025d9c	str	x8, [x19, #0x10]!
0000000000025da0	stur	xzr, [x19, #-0x8]
0000000000025da4	str	x19, [sp, #0xa8]
0000000000025da8	adr	x8, #0x48370
0000000000025dac	nop
0000000000025db0	stp	x8, xzr, [x19, #0x10]
0000000000025db4	nop
0000000000025db8	ldr	x0, #0x51238 ; Objc class ref: _OBJC_CLASS_$_NSData
0000000000025dbc	mov	x1, x20
0000000000025dc0	bl	_interpretObjCPointer
0000000000025dc4	cbz	x0, 0x25e0c
0000000000025dc8	ldar	x8, [x0]
0000000000025dcc	ands	x8, x8, #0xfffffffffffffffc
0000000000025dd0	b.eq	0x25dec
0000000000025dd4	ldr	x9, [x8]
0000000000025dd8	cmp	x9, x8
0000000000025ddc	b.eq	0x25dec
0000000000025de0	add	x8, x8, #0x10
0000000000025de4	ldar	x8, [x8]
0000000000025de8	cbnz	x8, 0x25e20
0000000000025dec	ldr	x8, [x0]
0000000000025df0	and	x8, x8, #0xfffffffffffffffc
0000000000025df4	ldr	x8, [x8]
0000000000025df8	ldr	x8, [x8, #0x60]
0000000000025dfc	ldr	x8, [x8]
0000000000025e00	cbz	x8, 0x25e14
0000000000025e04	blr	x8
0000000000025e08	b	0x25e18
0000000000025e0c	mov	x8, #0x0
0000000000025e10	b	0x25e20
0000000000025e14	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
0000000000025e18	bl	0x55c48 ; symbol stub for: _objc_autorelease
0000000000025e1c	mov	x8, x0
0000000000025e20	add	x9, x21, #0x28
0000000000025e24	stp	x9, x26, [sp, #0x28]
0000000000025e28	add	x9, x21, #0x38
0000000000025e2c	str	x9, [sp, #0x18]
0000000000025e30	add	x20, x22, #0x38
0000000000025e34	movi.16b	v0, #0x0
0000000000025e38	stp	q0, q0, [x29, #-0xb0]
0000000000025e3c	stur	xzr, [x29, #-0x90]
0000000000025e40	ldr	x9, [x24, #0x110]
0000000000025e44	sub	x10, x29, #0xb0
0000000000025e48	str	x10, [x24, #0x110]
0000000000025e4c	mov	x10, #0x500000000
0000000000025e50	stp	x9, x10, [x29, #-0xa8]
0000000000025e54	mov	x0, x25
0000000000025e58	blr	x26
0000000000025e5c	ldr	x28, [x0]
0000000000025e60	add	x26, x28, #0x138
0000000000025e64	mov	w9, #0x1
0000000000025e68	ldaxr	w22, [x26]
0000000000025e6c	stlxr	w10, w9, [x26]
0000000000025e70	cbnz	w10, 0x25e68
0000000000025e74	mov	x0, x8
0000000000025e78	bl	0x55c30 ; symbol stub for: _objc_allocWithZone
0000000000025e7c	mov	x21, x0
0000000000025e80	cbz	x28, 0x25eac
0000000000025e84	ldaxr	w8, [x26]
0000000000025e88	stlxr	w9, w22, [x26]
0000000000025e8c	cbnz	w9, 0x25e84
0000000000025e90	cbnz	w22, 0x25eac
0000000000025e94	cmp	w8, #0x1
0000000000025e98	b.ne	0x25eac
0000000000025e9c	ldarb	w8, [x27]
0000000000025ea0	tbz	w8, #0x0, 0x25eac
0000000000025ea4	mov	x0, x26
0000000000025ea8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025eac	str	x20, [sp, #0x20]
0000000000025eb0	str	x21, [sp, #0x38]
0000000000025eb4	cbz	x21, 0x26758
0000000000025eb8	ldur	x8, [x29, #-0xa8]
0000000000025ebc	movi.16b	v0, #0x0
0000000000025ec0	stp	q0, q0, [x29, #-0xb0]
0000000000025ec4	stur	xzr, [x29, #-0x90]
0000000000025ec8	sub	x9, x29, #0xb0
0000000000025ecc	str	x9, [x24, #0x110]
0000000000025ed0	mov	x9, #0x500000000
0000000000025ed4	stp	x8, x9, [x29, #-0xa8]
0000000000025ed8	ldrsw	x12, [x23, #0x8]
0000000000025edc	adr	x26, #0x6e65c
0000000000025ee0	nop
0000000000025ee4	ldar	x21, [x26]
0000000000025ee8	cmp	x21, #0x2
0000000000025eec	b.hs	0x25ff8
0000000000025ef0	ldp	x8, x9, [x24, #0x120]
0000000000025ef4	cmp	x8, x9
0000000000025ef8	b.eq	0x25f18
0000000000025efc	mov	x10, x9
0000000000025f00	ldr	x11, [x10, #-0x10]!
0000000000025f04	cmp	x11, x26
0000000000025f08	b.eq	0x25ff0
0000000000025f0c	mov	x9, x10
0000000000025f10	cmp	x10, x8
0000000000025f14	b.ne	0x25f00
0000000000025f18	add	x28, x24, #0x120
0000000000025f1c	add	x0, x24, #0x138
0000000000025f20	mov	w9, #0x1
0000000000025f24	ldaxr	w8, [x0]
0000000000025f28	stlxr	w10, w9, [x0]
0000000000025f2c	cbnz	w10, 0x25f24
0000000000025f30	b	0x25f40
0000000000025f34	mov	w20, #0x1
0000000000025f38	stlxr	w9, x20, [x26]
0000000000025f3c	cbz	w9, 0x25f50
0000000000025f40	ldaxr	x21, [x26]
0000000000025f44	cbz	x21, 0x25f34
0000000000025f48	mov	w20, #0x0
0000000000025f4c	clrex
0000000000025f50	cmp	x21, #0x1
0000000000025f54	b.eq	0x25f40
0000000000025f58	cbz	x24, 0x25f88
0000000000025f5c	ldaxr	w9, [x0]
0000000000025f60	stlxr	w10, w8, [x0]
0000000000025f64	cbnz	w10, 0x25f5c
0000000000025f68	cbnz	w8, 0x25f88
0000000000025f6c	cmp	w9, #0x1
0000000000025f70	b.ne	0x25f88
0000000000025f74	ldarb	w8, [x27]
0000000000025f78	tbz	w8, #0x0, 0x25f88
0000000000025f7c	mov	x22, x12
0000000000025f80	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000025f84	mov	x12, x22
0000000000025f88	tbz	w20, #0x0, 0x25fd8
0000000000025f8c	str	x12, [sp, #0x10]
0000000000025f90	ldr	x8, [x24, #0x118]
0000000000025f94	add	x0, x8, #0x70
0000000000025f98	mov	w1, #0x20
0000000000025f9c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000025fa0	mov	x20, x0
0000000000025fa4	adr	x8, #0x3a5cc
0000000000025fa8	nop
0000000000025fac	mov	x21, x0
0000000000025fb0	str	x8, [x21, #0x10]!
0000000000025fb4	str	xzr, [x0, #0x8]
0000000000025fb8	stur	x21, [x29, #-0x98]
0000000000025fbc	ldp	x9, x8, [x24, #0x128]
0000000000025fc0	cmp	x9, x8
0000000000025fc4	b.hs	0x2610c
0000000000025fc8	stp	x26, x21, [x9]
0000000000025fcc	add	x8, x9, #0x10
0000000000025fd0	str	x8, [x24, #0x128]
0000000000025fd4	b	0x261a0
0000000000025fd8	stur	x21, [x29, #-0x98]
0000000000025fdc	ldr	x22, [x21, #0x8]
0000000000025fe0	ldar	x20, [x26]
0000000000025fe4	cmp	x20, #0x2
0000000000025fe8	b.lo	0x26008
0000000000025fec	b	0x26338
0000000000025ff0	ldur	x21, [x9, #-0x8]
0000000000025ff4	stur	x21, [x29, #-0x98]
0000000000025ff8	ldr	x22, [x21, #0x8]
0000000000025ffc	ldar	x20, [x26]
0000000000026000	cmp	x20, #0x2
0000000000026004	b.hs	0x26338
0000000000026008	ldp	x8, x9, [x24, #0x120]
000000000002600c	cmp	x8, x9
0000000000026010	b.eq	0x26030
0000000000026014	mov	x10, x9
0000000000026018	ldr	x11, [x10, #-0x10]!
000000000002601c	cmp	x11, x26
0000000000026020	b.eq	0x26100
0000000000026024	mov	x9, x10
0000000000026028	cmp	x10, x8
000000000002602c	b.ne	0x26018
0000000000026030	add	x28, x24, #0x120
0000000000026034	add	x0, x24, #0x138
0000000000026038	mov	w9, #0x1
000000000002603c	ldaxr	w8, [x0]
0000000000026040	stlxr	w10, w9, [x0]
0000000000026044	cbnz	w10, 0x2603c
0000000000026048	b	0x26058
000000000002604c	mov	w21, #0x1
0000000000026050	stlxr	w9, x21, [x26]
0000000000026054	cbz	w9, 0x26068
0000000000026058	ldaxr	x20, [x26]
000000000002605c	cbz	x20, 0x2604c
0000000000026060	mov	w21, #0x0
0000000000026064	clrex
0000000000026068	cmp	x20, #0x1
000000000002606c	b.eq	0x26058
0000000000026070	cbz	x24, 0x260a8
0000000000026074	ldaxr	w9, [x0]
0000000000026078	stlxr	w10, w8, [x0]
000000000002607c	cbnz	w10, 0x26074
0000000000026080	cbnz	w8, 0x260a8
0000000000026084	cmp	w9, #0x1
0000000000026088	b.ne	0x260a8
000000000002608c	ldarb	w8, [x27]
0000000000026090	tbz	w8, #0x0, 0x260a8
0000000000026094	str	x28, [sp, #0x8]
0000000000026098	mov	x28, x12
000000000002609c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000260a0	mov	x12, x28
00000000000260a4	ldr	x28, [sp, #0x8]
00000000000260a8	tbz	w21, #0x0, 0x260f8
00000000000260ac	str	x12, [sp, #0x10]
00000000000260b0	ldr	x8, [x24, #0x118]
00000000000260b4	add	x0, x8, #0x70
00000000000260b8	mov	w1, #0x20
00000000000260bc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000260c0	mov	x21, x0
00000000000260c4	adr	x8, #0x3a4ac
00000000000260c8	nop
00000000000260cc	mov	x20, x0
00000000000260d0	str	x8, [x20, #0x10]!
00000000000260d4	str	xzr, [x0, #0x8]
00000000000260d8	stur	x20, [x29, #-0x90]
00000000000260dc	ldp	x9, x8, [x24, #0x128]
00000000000260e0	cmp	x9, x8
00000000000260e4	b.hs	0x26224
00000000000260e8	stp	x26, x20, [x9]
00000000000260ec	add	x8, x9, #0x10
00000000000260f0	str	x8, [x24, #0x128]
00000000000260f4	b	0x262c8
00000000000260f8	stur	x20, [x29, #-0x90]
00000000000260fc	b	0x26338
0000000000026100	ldur	x20, [x9, #-0x8]
0000000000026104	stur	x20, [x29, #-0x90]
0000000000026108	b	0x26338
000000000002610c	str	x28, [sp, #0x8]
0000000000026110	ldr	x10, [x28]
0000000000026114	sub	x9, x9, x10
0000000000026118	asr	x22, x9, #4
000000000002611c	add	x9, x22, #0x1
0000000000026120	lsr	x11, x9, #60
0000000000026124	cbnz	x11, 0x267a4
0000000000026128	sub	x8, x8, x10
000000000002612c	asr	x10, x8, #3
0000000000026130	cmp	x10, x9
0000000000026134	csel	x9, x9, x10, lo
0000000000026138	mov	x10, #0x7ffffffffffffff
000000000002613c	cmp	x10, x8, asr #4
0000000000026140	mov	x8, #0xfffffffffffffff
0000000000026144	csel	x28, x9, x8, hi
0000000000026148	mov	x0, x28
000000000002614c	mov	w1, #0x10
0000000000026150	bl	0x55aec ; symbol stub for: _calloc
0000000000026154	add	x8, x0, x22, lsl #4
0000000000026158	add	x10, x0, x28, lsl #4
000000000002615c	stp	x26, x21, [x8]
0000000000026160	add	x22, x8, #0x10
0000000000026164	ldp	x1, x9, [x24, #0x120]
0000000000026168	sub	x2, x9, x1
000000000002616c	sub	x28, x8, x2
0000000000026170	cmp	x2, #0x1
0000000000026174	b.lt	0x2618c
0000000000026178	mov	x0, x28
000000000002617c	str	x10, [sp]
0000000000026180	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000026184	ldp	x10, x8, [sp]
0000000000026188	ldr	x1, [x8]
000000000002618c	stp	x28, x22, [x24, #0x120]
0000000000026190	str	x10, [x24, #0x130]
0000000000026194	cbz	x1, 0x261a0
0000000000026198	mov	x0, x1
000000000002619c	bl	0x55b7c ; symbol stub for: _free
00000000000261a0	movi.16b	v0, #0x0
00000000000261a4	stur	q0, [x29, #-0x70]
00000000000261a8	ldr	x8, [x24, #0x110]
00000000000261ac	sub	x9, x29, #0x80
00000000000261b0	str	x9, [x24, #0x110]
00000000000261b4	mov	w9, #0x1
00000000000261b8	str	x9, [x20, #0x18]
00000000000261bc	str	w9, [x20, #0x20]
00000000000261c0	str	x8, [x24, #0x110]
00000000000261c4	mov	w0, #0x1
00000000000261c8	mov	w1, #0x28
00000000000261cc	bl	0x55aec ; symbol stub for: _calloc
00000000000261d0	mov	x8, x24
00000000000261d4	ldr	x9, [x8, #0x18]!
00000000000261d8	sub	x10, x8, #0x8
00000000000261dc	stp	x26, x10, [x0, #0x10]
00000000000261e0	stp	x9, x8, [x0]
00000000000261e4	str	x0, [x9, #0x8]
00000000000261e8	str	x0, [x8]
00000000000261ec	ldr	x9, [x8, #0x10]
00000000000261f0	add	x9, x9, #0x1
00000000000261f4	str	x9, [x8, #0x10]
00000000000261f8	str	x0, [x0, #0x20]
00000000000261fc	stlr	x21, [x26]
0000000000026200	ldr	x9, [x8, #0x110]
0000000000026204	sub	x9, x9, #0x10
0000000000026208	str	x9, [x8, #0x110]
000000000002620c	ldr	x12, [sp, #0x10]
0000000000026210	ldr	x22, [x21, #0x8]
0000000000026214	ldar	x20, [x26]
0000000000026218	cmp	x20, #0x2
000000000002621c	b.lo	0x26008
0000000000026220	b	0x26338
0000000000026224	str	x28, [sp, #0x8]
0000000000026228	ldr	x10, [x28]
000000000002622c	sub	x9, x9, x10
0000000000026230	asr	x25, x9, #4
0000000000026234	add	x9, x25, #0x1
0000000000026238	lsr	x11, x9, #60
000000000002623c	cbnz	x11, 0x267b0
0000000000026240	sub	x8, x8, x10
0000000000026244	asr	x10, x8, #3
0000000000026248	cmp	x10, x9
000000000002624c	csel	x9, x9, x10, lo
0000000000026250	mov	x10, #0x7ffffffffffffff
0000000000026254	cmp	x10, x8, asr #4
0000000000026258	mov	x8, #0xfffffffffffffff
000000000002625c	csel	x28, x9, x8, hi
0000000000026260	mov	x0, x28
0000000000026264	mov	w1, #0x10
0000000000026268	bl	0x55aec ; symbol stub for: _calloc
000000000002626c	add	x8, x0, x25, lsl #4
0000000000026270	add	x10, x0, x28, lsl #4
0000000000026274	stp	x26, x20, [x8]
0000000000026278	add	x11, x8, #0x10
000000000002627c	ldp	x1, x9, [x24, #0x120]
0000000000026280	sub	x2, x9, x1
0000000000026284	sub	x28, x8, x2
0000000000026288	cmp	x2, #0x1
000000000002628c	b.lt	0x262ac
0000000000026290	mov	x0, x28
0000000000026294	str	x10, [sp]
0000000000026298	mov	x25, x11
000000000002629c	bl	0x55bd0 ; symbol stub for: _memcpy
00000000000262a0	mov	x11, x25
00000000000262a4	ldp	x10, x8, [sp]
00000000000262a8	ldr	x1, [x8]
00000000000262ac	adrp	x25, 84 ; 0x7a000
00000000000262b0	add	x25, x25, #0x4e0
00000000000262b4	stp	x28, x11, [x24, #0x120]
00000000000262b8	str	x10, [x24, #0x130]
00000000000262bc	cbz	x1, 0x262c8
00000000000262c0	mov	x0, x1
00000000000262c4	bl	0x55b7c ; symbol stub for: _free
00000000000262c8	movi.16b	v0, #0x0
00000000000262cc	stur	q0, [x29, #-0x70]
00000000000262d0	ldr	x8, [x24, #0x110]
00000000000262d4	sub	x9, x29, #0x80
00000000000262d8	str	x9, [x24, #0x110]
00000000000262dc	mov	w9, #0x1
00000000000262e0	str	x9, [x21, #0x18]
00000000000262e4	str	w9, [x21, #0x20]
00000000000262e8	str	x8, [x24, #0x110]
00000000000262ec	mov	w0, #0x1
00000000000262f0	mov	w1, #0x28
00000000000262f4	bl	0x55aec ; symbol stub for: _calloc
00000000000262f8	mov	x8, x24
00000000000262fc	ldr	x9, [x8, #0x18]!
0000000000026300	sub	x10, x8, #0x8
0000000000026304	stp	x26, x10, [x0, #0x10]
0000000000026308	stp	x9, x8, [x0]
000000000002630c	str	x0, [x9, #0x8]
0000000000026310	str	x0, [x8]
0000000000026314	ldr	x9, [x8, #0x10]
0000000000026318	add	x9, x9, #0x1
000000000002631c	str	x9, [x8, #0x10]
0000000000026320	str	x0, [x0, #0x20]
0000000000026324	stlr	x20, [x26]
0000000000026328	ldr	x9, [x8, #0x110]
000000000002632c	sub	x9, x9, #0x10
0000000000026330	str	x9, [x8, #0x110]
0000000000026334	ldr	x12, [sp, #0x10]
0000000000026338	mul	x1, x22, x12
000000000002633c	ldr	w2, [x20, #0x10]
0000000000026340	ldr	x8, [x19]
0000000000026344	and	x8, x8, #0xfffffffffffffffc
0000000000026348	ldr	x8, [x8]
000000000002634c	ldr	w9, [x8, #0x3c]
0000000000026350	ldr	x8, [x8, #0x40]
0000000000026354	tbnz	w9, #0x1f, 0x26360
0000000000026358	and	x9, x9, #0x10
000000000002635c	b	0x263e4
0000000000026360	neg	w10, w9
0000000000026364	mvn	w9, w9
0000000000026368	cmp	w10, #0x9
000000000002636c	b.ge	0x263a4
0000000000026370	cmp	w10, #0x2
0000000000026374	b.lt	0x263d8
0000000000026378	mov	x10, #0x0
000000000002637c	mov	x11, x8
0000000000026380	ldr	w12, [x11]
0000000000026384	cmp	w12, #0xf
0000000000026388	b.gt	0x263e0
000000000002638c	add	x10, x10, #0x1
0000000000026390	add	x11, x11, #0x10
0000000000026394	cmp	x9, x10
0000000000026398	b.ne	0x26380
000000000002639c	mov	x10, x9
00000000000263a0	b	0x263e0
00000000000263a4	mov	w10, #0x0
00000000000263a8	add	w11, w9, w10
00000000000263ac	cmp	w11, #0x0
00000000000263b0	cinc	w11, w11, lt
00000000000263b4	asr	w11, w11, #1
00000000000263b8	sbfiz	x12, x11, #4, #32
00000000000263bc	ldr	w12, [x8, x12]
00000000000263c0	cmp	w12, #0x10
00000000000263c4	csinc	w10, w10, w11, ge
00000000000263c8	csel	w9, w9, w11, lt
00000000000263cc	cmp	w10, w9
00000000000263d0	b.lt	0x263a8
00000000000263d4	b	0x263e0
00000000000263d8	mov	w10, #0x0
00000000000263dc	b	0x263e0
00000000000263e0	sxtw	x9, w10
00000000000263e4	add	x8, x8, x9, lsl #4
00000000000263e8	ldr	x8, [x8, #0x8]
00000000000263ec	ldr	x8, [x8, #0x8]
00000000000263f0	mov	x0, x19
00000000000263f4	blr	x8
00000000000263f8	mov	x26, x0
00000000000263fc	cbz	x0, 0x2679c
0000000000026400	mov	x20, #0x0
0000000000026404	ldr	w8, [x23, #0x8]
0000000000026408	add	x21, x23, #0x10
000000000002640c	bic	w22, w8, w8, asr #31
0000000000026410	cmp	w22, w20
0000000000026414	b.eq	0x2644c
0000000000026418	ldarb	w8, [x27]
000000000002641c	tbz	w8, #0x0, 0x26424
0000000000026420	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026424	ldr	w8, [x23, #0x8]
0000000000026428	cmp	w8, w20
000000000002642c	b.ls	0x26750
0000000000026430	adds	x8, x26, x20
0000000000026434	b.eq	0x26748
0000000000026438	ldrb	w9, [x21, x20]
000000000002643c	strb	w9, [x8]
0000000000026440	add	x20, x20, #0x1
0000000000026444	cmp	w22, w20
0000000000026448	b.ne	0x26418
000000000002644c	mov	x21, x25
0000000000026450	ldur	x8, [x29, #-0xa8]
0000000000026454	str	x8, [x24, #0x110]
0000000000026458	ldrsw	x3, [x23, #0x8]
000000000002645c	add	x8, x24, #0x138
0000000000026460	mov	w9, #0x1
0000000000026464	ldaxr	wzr, [x8]
0000000000026468	stlxr	w10, w9, [x8]
000000000002646c	cbnz	w10, 0x26464
0000000000026470	nop
0000000000026474	ldr	x1, #0x5085c ; Objc selector ref: initWithBytes:length:
0000000000026478	ldr	x0, [sp, #0x38]
000000000002647c	mov	x2, x26
0000000000026480	bl	0x55ca8 ; Objc message: +[NSData initWithBytes:length:]
0000000000026484	mov	x25, x0
0000000000026488	add	x0, x24, #0x138
000000000002648c	ldaxr	w8, [x0]
0000000000026490	stlxr	w9, wzr, [x0]
0000000000026494	cbnz	w9, 0x2648c
0000000000026498	cmp	w8, #0x1
000000000002649c	b.ne	0x264ac
00000000000264a0	ldarb	w8, [x27]
00000000000264a4	tbz	w8, #0x0, 0x264ac
00000000000264a8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000264ac	adrp	x20, 110 ; 0x94000
00000000000264b0	cbz	x25, 0x264cc
00000000000264b4	ldr	x1, [x20, #0x758]
00000000000264b8	mov	x0, x25
00000000000264bc	ldr	x2, [sp, #0x20]
00000000000264c0	bl	0x55ca8 ; Objc message: -[x0 initWithBytes:length:]
00000000000264c4	mov	x23, x0
00000000000264c8	b	0x264d4
00000000000264cc	mov	x23, #0x0
00000000000264d0	str	xzr, [sp, #0xc8]
00000000000264d4	mov	x0, x21
00000000000264d8	ldr	x8, [sp, #0x30]
00000000000264dc	blr	x8
00000000000264e0	ldr	x26, [x0]
00000000000264e4	add	x21, x26, #0x138
00000000000264e8	mov	w8, #0x1
00000000000264ec	ldaxr	w22, [x21]
00000000000264f0	stlxr	w9, w8, [x21]
00000000000264f4	cbnz	w9, 0x264ec
00000000000264f8	mov	x0, x25
00000000000264fc	bl	0x55ccc ; symbol stub for: _objc_release
0000000000026500	cbz	x26, 0x2652c
0000000000026504	ldaxr	w8, [x21]
0000000000026508	stlxr	w9, w22, [x21]
000000000002650c	cbnz	w9, 0x26504
0000000000026510	cbnz	w22, 0x2652c
0000000000026514	cmp	w8, #0x1
0000000000026518	b.ne	0x2652c
000000000002651c	ldarb	w8, [x27]
0000000000026520	tbz	w8, #0x0, 0x2652c
0000000000026524	mov	x0, x21
0000000000026528	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002652c	mov	x0, x19
0000000000026530	bl	"_kfun:kotlinx.cinterop.ArenaBase#clearImpl(){}"
0000000000026534	str	x23, [sp, #0x60]
0000000000026538	ldr	x8, [sp, #0x98]
000000000002653c	str	x8, [x24, #0x110]
0000000000026540	nop
0000000000026544	ldr	x0, #0x50aa4 ; Objc class ref: _OBJC_CLASS_$_NSFileHandle
0000000000026548	ldr	x1, [sp, #0x28]
000000000002654c	bl	_interpretObjCPointer
0000000000026550	cbz	x0, 0x26598
0000000000026554	ldar	x8, [x0]
0000000000026558	and	x8, x8, #0xfffffffffffffffc
000000000002655c	ldr	x9, [x8]
0000000000026560	cmp	x8, #0x0
0000000000026564	ccmp	x9, x8, #0x4, ne
0000000000026568	b.eq	0x26578
000000000002656c	add	x8, x8, #0x10
0000000000026570	ldar	x8, [x8]
0000000000026574	cbnz	x8, 0x265ac
0000000000026578	ldr	x8, [x0]
000000000002657c	and	x8, x8, #0xfffffffffffffffc
0000000000026580	ldr	x8, [x8]
0000000000026584	ldr	x8, [x8, #0x60]
0000000000026588	ldr	x8, [x8]
000000000002658c	cbz	x8, 0x265a0
0000000000026590	blr	x8
0000000000026594	b	0x265a4
0000000000026598	mov	x8, #0x0
000000000002659c	b	0x265ac
00000000000265a0	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
00000000000265a4	bl	0x55c48 ; symbol stub for: _objc_autorelease
00000000000265a8	mov	x8, x0
00000000000265ac	add	x9, x24, #0x138
00000000000265b0	mov	w10, #0x1
00000000000265b4	ldaxr	wzr, [x9]
00000000000265b8	stlxr	w11, w10, [x9]
00000000000265bc	cbnz	w11, 0x265b4
00000000000265c0	nop
00000000000265c4	ldr	x1, #0x506d4 ; Objc selector ref: fileHandleWithStandardOutput
00000000000265c8	mov	x0, x8
00000000000265cc	bl	0x55ca8 ; Objc message: +[NSFileHandle fileHandleWithStandardOutput]
00000000000265d0	mov	x19, x0
00000000000265d4	add	x0, x24, #0x138
00000000000265d8	ldaxr	w8, [x0]
00000000000265dc	stlxr	w9, wzr, [x0]
00000000000265e0	cbnz	w9, 0x265d8
00000000000265e4	cmp	w8, #0x1
00000000000265e8	b.ne	0x265f8
00000000000265ec	ldarb	w8, [x27]
00000000000265f0	tbz	w8, #0x0, 0x265f8
00000000000265f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000265f8	cbz	x19, 0x26654
00000000000265fc	ldr	x1, [x20, #0x758]
0000000000026600	mov	x0, x19
0000000000026604	ldr	x2, [sp, #0x18]
0000000000026608	bl	0x55ca8 ; Objc message: -[x0 fileHandleWithStandardOutput]
000000000002660c	cbz	x0, 0x26664
0000000000026610	ldar	x8, [x0]
0000000000026614	and	x8, x8, #0xfffffffffffffffc
0000000000026618	ldr	x9, [x8]
000000000002661c	cmp	x8, #0x0
0000000000026620	ccmp	x9, x8, #0x4, ne
0000000000026624	b.eq	0x26634
0000000000026628	add	x8, x8, #0x10
000000000002662c	ldar	x19, [x8]
0000000000026630	cbnz	x19, 0x26668
0000000000026634	ldr	x8, [x0]
0000000000026638	and	x8, x8, #0xfffffffffffffffc
000000000002663c	ldr	x8, [x8]
0000000000026640	ldr	x8, [x8, #0x60]
0000000000026644	ldr	x8, [x8]
0000000000026648	cbz	x8, 0x26734
000000000002664c	blr	x8
0000000000026650	b	0x26738
0000000000026654	str	xzr, [sp, #0x78]
0000000000026658	cbnz	x23, 0x2666c
000000000002665c	mov	x2, #0x0
0000000000026660	b	0x266c4
0000000000026664	mov	x19, #0x0
0000000000026668	cbz	x23, 0x2665c
000000000002666c	ldar	x8, [x23]
0000000000026670	ands	x8, x8, #0xfffffffffffffffc
0000000000026674	b.eq	0x26690
0000000000026678	ldr	x9, [x8]
000000000002667c	cmp	x9, x8
0000000000026680	b.eq	0x26690
0000000000026684	add	x8, x8, #0x10
0000000000026688	ldar	x2, [x8]
000000000002668c	cbnz	x2, 0x266c4
0000000000026690	ldr	x8, [x23]
0000000000026694	and	x8, x8, #0xfffffffffffffffc
0000000000026698	ldr	x8, [x8]
000000000002669c	ldr	x8, [x8, #0x60]
00000000000266a0	ldr	x8, [x8]
00000000000266a4	cbz	x8, 0x266b4
00000000000266a8	mov	x0, x23
00000000000266ac	blr	x8
00000000000266b0	b	0x266bc
00000000000266b4	mov	x0, x23
00000000000266b8	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
00000000000266bc	bl	0x55c48 ; symbol stub for: _objc_autorelease
00000000000266c0	mov	x2, x0
00000000000266c4	add	x8, x24, #0x138
00000000000266c8	mov	w9, #0x1
00000000000266cc	ldaxr	wzr, [x8]
00000000000266d0	stlxr	w10, w9, [x8]
00000000000266d4	cbnz	w10, 0x266cc
00000000000266d8	nop
00000000000266dc	ldr	x1, #0x507cc ; Objc selector ref: writeData:
00000000000266e0	mov	x0, x19
00000000000266e4	bl	0x55ca8 ; Objc message: -[x0 writeData:]
00000000000266e8	add	x0, x24, #0x138
00000000000266ec	ldaxr	w8, [x0]
00000000000266f0	stlxr	w9, wzr, [x0]
00000000000266f4	cbnz	w9, 0x266ec
00000000000266f8	cmp	w8, #0x1
00000000000266fc	b.ne	0x2670c
0000000000026700	ldarb	w8, [x27]
0000000000026704	tbz	w8, #0x0, 0x2670c
0000000000026708	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002670c	ldr	x8, [sp, #0x48]
0000000000026710	str	x8, [x24, #0x110]
0000000000026714	ldp	x29, x30, [sp, #0x180]
0000000000026718	ldp	x20, x19, [sp, #0x170]
000000000002671c	ldp	x22, x21, [sp, #0x160]
0000000000026720	ldp	x24, x23, [sp, #0x150]
0000000000026724	ldp	x26, x25, [sp, #0x140]
0000000000026728	ldp	x28, x27, [sp, #0x130]
000000000002672c	add	sp, sp, #0x190
0000000000026730	ret
0000000000026734	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
0000000000026738	bl	0x55c48 ; symbol stub for: _objc_autorelease
000000000002673c	mov	x19, x0
0000000000026740	cbnz	x23, 0x2666c
0000000000026744	b	0x2665c
0000000000026748	bl	_ThrowNullPointerException
000000000002674c	b	0x2699c
0000000000026750	bl	_ThrowArrayIndexOutOfBoundsException
0000000000026754	b	0x2699c
0000000000026758	ldr	x8, [x24, #0x118]
000000000002675c	add	x0, x8, #0x70
0000000000026760	mov	w1, #0x38
0000000000026764	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000026768	mov	x20, x0
000000000002676c	adr	x8, #0x3b304
0000000000026770	nop
0000000000026774	str	x8, [x20, #0x10]!
0000000000026778	stur	xzr, [x20, #-0x8]
000000000002677c	stur	x20, [x29, #-0x90]
0000000000026780	adr	x1, #0x47a30
0000000000026784	nop
0000000000026788	mov	x0, x20
000000000002678c	bl	"_kfun:kotlin.OutOfMemoryError#<init>(kotlin.String?){}"
0000000000026790	mov	x0, x20
0000000000026794	bl	_ThrowException
0000000000026798	b	0x2699c
000000000002679c	bl	_ThrowNullPointerException
00000000000267a0	b	0x2699c
00000000000267a4	ldr	x0, [sp, #0x8]
00000000000267a8	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000267ac	b	0x2699c
00000000000267b0	ldr	x0, [sp, #0x8]
00000000000267b4	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000267b8	b	0x2699c
00000000000267bc	bl	___clang_call_terminate
00000000000267c0	bl	___clang_call_terminate
00000000000267c4	bl	___clang_call_terminate
00000000000267c8	bl	___clang_call_terminate
00000000000267cc	bl	___clang_call_terminate
00000000000267d0	bl	___clang_call_terminate
00000000000267d4	mov	x20, x1
00000000000267d8	mov	x19, x0
00000000000267dc	add	x0, x24, #0x138
00000000000267e0	ldaxr	w8, [x0]
00000000000267e4	stlxr	w9, wzr, [x0]
00000000000267e8	cbnz	w9, 0x267e0
00000000000267ec	cmp	w8, #0x1
00000000000267f0	b.ne	0x26800
00000000000267f4	ldarb	w8, [x27]
00000000000267f8	tbz	w8, #0x0, 0x26800
00000000000267fc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026800	add	x8, sp, #0x40
0000000000026804	str	x8, [x24, #0x110]
0000000000026808	mov	x0, x19
000000000002680c	cmp	w20, #0x2
0000000000026810	b.eq	0x26820
0000000000026814	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000026818	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002681c	b	0x2681c
0000000000026820	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000026824	ldr	x8, [x0, #0x8]
0000000000026828	ldr	x19, [x8]
000000000002682c	str	x19, [sp, #0x80]
0000000000026830	b	0x26890
0000000000026834	mov	x20, x1
0000000000026838	mov	x19, x0
000000000002683c	add	x0, x24, #0x138
0000000000026840	ldaxr	w8, [x0]
0000000000026844	stlxr	w9, wzr, [x0]
0000000000026848	cbnz	w9, 0x26840
000000000002684c	cmp	w8, #0x1
0000000000026850	b.ne	0x26860
0000000000026854	ldarb	w8, [x27]
0000000000026858	tbz	w8, #0x0, 0x26860
000000000002685c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026860	add	x8, sp, #0x40
0000000000026864	str	x8, [x24, #0x110]
0000000000026868	mov	x0, x19
000000000002686c	cmp	w20, #0x2
0000000000026870	b.eq	0x26880
0000000000026874	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000026878	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002687c	b	0x2687c
0000000000026880	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000026884	ldr	x8, [x0, #0x8]
0000000000026888	ldr	x19, [x8]
000000000002688c	str	x19, [sp, #0x70]
0000000000026890	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
0000000000026894	mov	x0, x19
0000000000026898	bl	_ThrowException
000000000002689c	mov	x20, x0
00000000000268a0	cbz	x26, 0x269a4
00000000000268a4	ldaxr	w8, [x21]
00000000000268a8	stlxr	w9, w22, [x21]
00000000000268ac	cbnz	w9, 0x268a4
00000000000268b0	cbnz	w22, 0x269a4
00000000000268b4	cmp	w8, #0x1
00000000000268b8	b.ne	0x269a4
00000000000268bc	ldarb	w8, [x27]
00000000000268c0	tbz	w8, #0x0, 0x269a4
00000000000268c4	mov	x0, x21
00000000000268c8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000268cc	b	0x269a4
00000000000268d0	mov	x20, x1
00000000000268d4	mov	x21, x0
00000000000268d8	add	x0, x24, #0x138
00000000000268dc	ldaxr	w8, [x0]
00000000000268e0	stlxr	w9, wzr, [x0]
00000000000268e4	cbnz	w9, 0x268dc
00000000000268e8	cmp	w8, #0x1
00000000000268ec	b.ne	0x268fc
00000000000268f0	ldarb	w8, [x27]
00000000000268f4	tbz	w8, #0x0, 0x268fc
00000000000268f8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000268fc	add	x8, sp, #0x90
0000000000026900	str	x8, [x24, #0x110]
0000000000026904	mov	x0, x21
0000000000026908	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002690c	cmp	w20, #0x2
0000000000026910	b.eq	0x2691c
0000000000026914	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000026918	b	0x26918
000000000002691c	ldr	x8, [x0, #0x8]
0000000000026920	ldr	x20, [x8]
0000000000026924	str	x20, [sp, #0xc0]
0000000000026928	b	0x269c0
000000000002692c	mov	x21, x1
0000000000026930	mov	x20, x0
0000000000026934	cbz	x28, 0x26960
0000000000026938	ldaxr	w8, [x26]
000000000002693c	stlxr	w9, w22, [x26]
0000000000026940	cbnz	w9, 0x26938
0000000000026944	cbnz	w22, 0x26960
0000000000026948	cmp	w8, #0x1
000000000002694c	b.ne	0x26960
0000000000026950	ldarb	w8, [x27]
0000000000026954	tbz	w8, #0x0, 0x26960
0000000000026958	mov	x0, x26
000000000002695c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026960	sub	x8, x29, #0xb0
0000000000026964	str	x8, [x24, #0x110]
0000000000026968	mov	x0, x20
000000000002696c	cmp	w21, #0x2
0000000000026970	b.eq	0x26980
0000000000026974	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000026978	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002697c	b	0x2697c
0000000000026980	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000026984	ldr	x8, [x0, #0x8]
0000000000026988	ldr	x20, [x8]
000000000002698c	stur	x20, [x29, #-0x98]
0000000000026990	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
0000000000026994	mov	x0, x20
0000000000026998	bl	_ThrowException
000000000002699c	brk	#0x1
00000000000269a0	mov	x20, x0
00000000000269a4	add	x8, sp, #0x90
00000000000269a8	str	x8, [x24, #0x110]
00000000000269ac	mov	x0, x20
00000000000269b0	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
00000000000269b4	ldr	x8, [x0, #0x8]
00000000000269b8	ldr	x20, [x8]
00000000000269bc	str	x20, [sp, #0xb8]
00000000000269c0	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
00000000000269c4	mov	x0, x19
00000000000269c8	bl	"_kfun:kotlinx.cinterop.ArenaBase#clearImpl(){}"
00000000000269cc	mov	x0, x20
00000000000269d0	bl	_ThrowException
_kfun:com.example.kmm.utils.IOAndBufferOperator#flush(){}:
00000000000269d4	sub	sp, sp, #0x60
00000000000269d8	stp	x22, x21, [sp, #0x30]
00000000000269dc	stp	x20, x19, [sp, #0x40]
00000000000269e0	stp	x29, x30, [sp, #0x50]
00000000000269e4	add	x29, sp, #0x50
00000000000269e8	movi.16b	v0, #0x0
00000000000269ec	stp	q0, q0, [sp]
00000000000269f0	str	xzr, [sp, #0x20]
00000000000269f4	adrp	x0, 84 ; 0x7a000
00000000000269f8	add	x0, x0, #0x4e0
00000000000269fc	ldr	x8, [x0]
0000000000026a00	blr	x8
0000000000026a04	ldr	x20, [x0]
0000000000026a08	ldr	x8, [x20, #0x110]
0000000000026a0c	mov	x9, sp
0000000000026a10	str	x9, [x20, #0x110]
0000000000026a14	mov	x9, #0x500000000
0000000000026a18	stp	x8, x9, [sp, #0x8]
0000000000026a1c	adr	x21, #0x6daed
0000000000026a20	nop
0000000000026a24	ldarb	w8, [x21]
0000000000026a28	tbz	w8, #0x0, 0x26a30
0000000000026a2c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026a30	add	x8, x20, #0x138
0000000000026a34	mov	w9, #0x1
0000000000026a38	ldaxr	wzr, [x8]
0000000000026a3c	stlxr	w10, w9, [x8]
0000000000026a40	cbnz	w10, 0x26a38
0000000000026a44	nop
0000000000026a48	ldr	x8, #0x395f0 ; literal pool symbol address: ___stdoutp
0000000000026a4c	ldr	x19, [x8]
0000000000026a50	add	x0, x20, #0x138
0000000000026a54	ldaxr	w8, [x0]
0000000000026a58	stlxr	w9, wzr, [x0]
0000000000026a5c	cbnz	w9, 0x26a54
0000000000026a60	cmp	w8, #0x1
0000000000026a64	b.ne	0x26a74
0000000000026a68	ldarb	w8, [x21]
0000000000026a6c	tbz	w8, #0x0, 0x26a74
0000000000026a70	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026a74	add	x8, x20, #0x138
0000000000026a78	mov	w9, #0x1
0000000000026a7c	ldaxr	wzr, [x8]
0000000000026a80	stlxr	w10, w9, [x8]
0000000000026a84	cbnz	w10, 0x26a7c
0000000000026a88	mov	x0, x19
0000000000026a8c	bl	0x55b64 ; symbol stub for: _fflush
0000000000026a90	add	x0, x20, #0x138
0000000000026a94	ldaxr	w8, [x0]
0000000000026a98	stlxr	w9, wzr, [x0]
0000000000026a9c	cbnz	w9, 0x26a94
0000000000026aa0	cmp	w8, #0x1
0000000000026aa4	b.ne	0x26ab4
0000000000026aa8	ldarb	w8, [x21]
0000000000026aac	tbz	w8, #0x0, 0x26ab4
0000000000026ab0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000026ab4	ldr	x8, [sp, #0x8]
0000000000026ab8	str	x8, [x20, #0x110]
0000000000026abc	ldp	x29, x30, [sp, #0x50]
0000000000026ac0	ldp	x20, x19, [sp, #0x40]
0000000000026ac4	ldp	x22, x21, [sp, #0x30]
0000000000026ac8	add	sp, sp, #0x60
0000000000026acc	ret
0000000000026ad0	stp	x20, x19, [sp, #-0x20]!
0000000000026ad4	stp	x29, x30, [sp, #0x10]
0000000000026ad8	add	x29, sp, #0x10
0000000000026adc	mov	x19, x1
0000000000026ae0	mov	x20, x0
0000000000026ae4	adr	x8, #0x6da25
0000000000026ae8	nop
0000000000026aec	ldarb	w8, [x8]
0000000000026af0	tbz	w8, #0x0, 0x26af8
0000000000026af4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026af8	sub	w8, w20, #0x1
0000000000026afc	cmp	w8, #0x3
0000000000026b00	b.hs	0x26b10
0000000000026b04	ldp	x29, x30, [sp, #0x10]
0000000000026b08	ldp	x20, x19, [sp], #0x20
0000000000026b0c	ret
0000000000026b10	adr	x1, #0x6da98
0000000000026b14	nop
0000000000026b18	mov	x0, x19
0000000000026b1c	mov	w2, #0x3
0000000000026b20	ldp	x29, x30, [sp, #0x10]
0000000000026b24	ldp	x20, x19, [sp], #0x20
0000000000026b28	b	_AddTLSRecord
0000000000026b2c	stp	x20, x19, [sp, #-0x20]!
0000000000026b30	stp	x29, x30, [sp, #0x10]
0000000000026b34	add	x29, sp, #0x10
0000000000026b38	mov	x19, x1
0000000000026b3c	mov	x20, x0
0000000000026b40	adr	x8, #0x6d9c9
0000000000026b44	nop
0000000000026b48	ldarb	w8, [x8]
0000000000026b4c	tbz	w8, #0x0, 0x26b54
0000000000026b50	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026b54	sub	w8, w20, #0x1
0000000000026b58	cmp	w8, #0x2
0000000000026b5c	b.lo	0x26b88
0000000000026b60	cbnz	w20, 0x26b80
0000000000026b64	adr	x1, #0x6da44
0000000000026b68	nop
0000000000026b6c	mov	x0, x19
0000000000026b70	mov	w2, #0x3
0000000000026b74	ldp	x29, x30, [sp, #0x10]
0000000000026b78	ldp	x20, x19, [sp], #0x20
0000000000026b7c	b	_AddTLSRecord
0000000000026b80	adrp	x8, 110 ; 0x94000
0000000000026b84	str	xzr, [x8, #0x538]
0000000000026b88	ldp	x29, x30, [sp, #0x10]
0000000000026b8c	ldp	x20, x19, [sp], #0x20
0000000000026b90	ret
0000000000026b94	stp	x20, x19, [sp, #-0x20]!
0000000000026b98	stp	x29, x30, [sp, #0x10]
0000000000026b9c	add	x29, sp, #0x10
0000000000026ba0	mov	x19, x1
0000000000026ba4	mov	x20, x0
0000000000026ba8	adr	x8, #0x6d961
0000000000026bac	nop
0000000000026bb0	ldarb	w8, [x8]
0000000000026bb4	tbz	w8, #0x0, 0x26bbc
0000000000026bb8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026bbc	sub	w8, w20, #0x1
0000000000026bc0	cmp	w8, #0x3
0000000000026bc4	b.hs	0x26bd4
0000000000026bc8	ldp	x29, x30, [sp, #0x10]
0000000000026bcc	ldp	x20, x19, [sp], #0x20
0000000000026bd0	ret
0000000000026bd4	adr	x1, #0x6d9d4
0000000000026bd8	nop
0000000000026bdc	mov	x0, x19
0000000000026be0	mov	w2, #0x3
0000000000026be4	ldp	x29, x30, [sp, #0x10]
0000000000026be8	ldp	x20, x19, [sp], #0x20
0000000000026bec	b	_AddTLSRecord
0000000000026bf0	stp	x20, x19, [sp, #-0x20]!
0000000000026bf4	stp	x29, x30, [sp, #0x10]
0000000000026bf8	add	x29, sp, #0x10
0000000000026bfc	mov	x19, x1
0000000000026c00	mov	x20, x0
0000000000026c04	adr	x8, #0x6d905
0000000000026c08	nop
0000000000026c0c	ldarb	w8, [x8]
0000000000026c10	tbz	w8, #0x0, 0x26c18
0000000000026c14	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026c18	sub	w8, w20, #0x1
0000000000026c1c	cmp	w8, #0x2
0000000000026c20	b.lo	0x26c54
0000000000026c24	cbnz	w20, 0x26c44
0000000000026c28	adr	x1, #0x6d980
0000000000026c2c	nop
0000000000026c30	mov	x0, x19
0000000000026c34	mov	w2, #0x3
0000000000026c38	ldp	x29, x30, [sp, #0x10]
0000000000026c3c	ldp	x20, x19, [sp], #0x20
0000000000026c40	b	_AddTLSRecord
0000000000026c44	adr	x8, #0x6d8d4
0000000000026c48	nop
0000000000026c4c	str	xzr, [x8, #0x28]
0000000000026c50	str	wzr, [x8]
0000000000026c54	ldp	x29, x30, [sp, #0x10]
0000000000026c58	ldp	x20, x19, [sp], #0x20
0000000000026c5c	ret
0000000000026c60	stp	x20, x19, [sp, #-0x20]!
0000000000026c64	stp	x29, x30, [sp, #0x10]
0000000000026c68	add	x29, sp, #0x10
0000000000026c6c	mov	x19, x1
0000000000026c70	mov	x20, x0
0000000000026c74	adr	x8, #0x6d895
0000000000026c78	nop
0000000000026c7c	ldarb	w8, [x8]
0000000000026c80	tbz	w8, #0x0, 0x26c88
0000000000026c84	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026c88	sub	w8, w20, #0x1
0000000000026c8c	cmp	w8, #0x3
0000000000026c90	b.hs	0x26ca0
0000000000026c94	ldp	x29, x30, [sp, #0x10]
0000000000026c98	ldp	x20, x19, [sp], #0x20
0000000000026c9c	ret
0000000000026ca0	adr	x1, #0x6d908
0000000000026ca4	nop
0000000000026ca8	mov	x0, x19
0000000000026cac	mov	w2, #0x3
0000000000026cb0	ldp	x29, x30, [sp, #0x10]
0000000000026cb4	ldp	x20, x19, [sp], #0x20
0000000000026cb8	b	_AddTLSRecord
0000000000026cbc	stp	x20, x19, [sp, #-0x20]!
0000000000026cc0	stp	x29, x30, [sp, #0x10]
0000000000026cc4	add	x29, sp, #0x10
0000000000026cc8	mov	x19, x1
0000000000026ccc	mov	x20, x0
0000000000026cd0	adr	x8, #0x6d839
0000000000026cd4	nop
0000000000026cd8	ldarb	w8, [x8]
0000000000026cdc	tbz	w8, #0x0, 0x26ce4
0000000000026ce0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026ce4	sub	w8, w20, #0x1
0000000000026ce8	cmp	w8, #0x2
0000000000026cec	b.lo	0x26d24
0000000000026cf0	cbnz	w20, 0x26d10
0000000000026cf4	adr	x1, #0x6d8b4
0000000000026cf8	nop
0000000000026cfc	mov	x0, x19
0000000000026d00	mov	w2, #0x3
0000000000026d04	ldp	x29, x30, [sp, #0x10]
0000000000026d08	ldp	x20, x19, [sp], #0x20
0000000000026d0c	b	_AddTLSRecord
0000000000026d10	adr	x8, #0x6d80c
0000000000026d14	nop
0000000000026d18	stur	xzr, [x8, #0x34]
0000000000026d1c	stur	xzr, [x8, #0x2c]
0000000000026d20	str	wzr, [x8]
0000000000026d24	ldp	x29, x30, [sp, #0x10]
0000000000026d28	ldp	x20, x19, [sp], #0x20
0000000000026d2c	ret
0000000000026d30	stp	x20, x19, [sp, #-0x20]!
0000000000026d34	stp	x29, x30, [sp, #0x10]
0000000000026d38	add	x29, sp, #0x10
0000000000026d3c	mov	x19, x1
0000000000026d40	mov	x20, x0
0000000000026d44	adr	x8, #0x6d7c5
0000000000026d48	nop
0000000000026d4c	ldarb	w8, [x8]
0000000000026d50	tbz	w8, #0x0, 0x26d58
0000000000026d54	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026d58	sub	w8, w20, #0x1
0000000000026d5c	cmp	w8, #0x3
0000000000026d60	b.hs	0x26d70
0000000000026d64	ldp	x29, x30, [sp, #0x10]
0000000000026d68	ldp	x20, x19, [sp], #0x20
0000000000026d6c	ret
0000000000026d70	adr	x1, #0x6d838
0000000000026d74	nop
0000000000026d78	mov	x0, x19
0000000000026d7c	mov	w2, #0x3
0000000000026d80	ldp	x29, x30, [sp, #0x10]
0000000000026d84	ldp	x20, x19, [sp], #0x20
0000000000026d88	b	_AddTLSRecord
0000000000026d8c	stp	x20, x19, [sp, #-0x20]!
0000000000026d90	stp	x29, x30, [sp, #0x10]
0000000000026d94	add	x29, sp, #0x10
0000000000026d98	mov	x19, x1
0000000000026d9c	mov	x20, x0
0000000000026da0	adr	x8, #0x6d769
0000000000026da4	nop
0000000000026da8	ldarb	w8, [x8]
0000000000026dac	tbz	w8, #0x0, 0x26db4
0000000000026db0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026db4	sub	w8, w20, #0x1
0000000000026db8	cmp	w8, #0x3
0000000000026dbc	b.hs	0x26dcc
0000000000026dc0	ldp	x29, x30, [sp, #0x10]
0000000000026dc4	ldp	x20, x19, [sp], #0x20
0000000000026dc8	ret
0000000000026dcc	adr	x1, #0x6d7dc
0000000000026dd0	nop
0000000000026dd4	mov	x0, x19
0000000000026dd8	mov	w2, #0x3
0000000000026ddc	ldp	x29, x30, [sp, #0x10]
0000000000026de0	ldp	x20, x19, [sp], #0x20
0000000000026de4	b	_AddTLSRecord
0000000000026de8	stp	x20, x19, [sp, #-0x20]!
0000000000026dec	stp	x29, x30, [sp, #0x10]
0000000000026df0	add	x29, sp, #0x10
0000000000026df4	mov	x19, x1
0000000000026df8	mov	x20, x0
0000000000026dfc	adr	x8, #0x6d70d
0000000000026e00	nop
0000000000026e04	ldarb	w8, [x8]
0000000000026e08	tbz	w8, #0x0, 0x26e10
0000000000026e0c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026e10	sub	w8, w20, #0x1
0000000000026e14	cmp	w8, #0x3
0000000000026e18	b.hs	0x26e28
0000000000026e1c	ldp	x29, x30, [sp, #0x10]
0000000000026e20	ldp	x20, x19, [sp], #0x20
0000000000026e24	ret
0000000000026e28	adr	x1, #0x6d780
0000000000026e2c	nop
0000000000026e30	mov	x0, x19
0000000000026e34	mov	w2, #0x3
0000000000026e38	ldp	x29, x30, [sp, #0x10]
0000000000026e3c	ldp	x20, x19, [sp], #0x20
0000000000026e40	b	_AddTLSRecord
0000000000026e44	stp	x20, x19, [sp, #-0x20]!
0000000000026e48	stp	x29, x30, [sp, #0x10]
0000000000026e4c	add	x29, sp, #0x10
0000000000026e50	mov	x19, x1
0000000000026e54	mov	x20, x0
0000000000026e58	adr	x8, #0x6d6b1
0000000000026e5c	nop
0000000000026e60	ldarb	w8, [x8]
0000000000026e64	tbz	w8, #0x0, 0x26e6c
0000000000026e68	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026e6c	sub	w8, w20, #0x1
0000000000026e70	cmp	w8, #0x2
0000000000026e74	b.lo	0x26ea8
0000000000026e78	cbnz	w20, 0x26e98
0000000000026e7c	adr	x1, #0x6d72c
0000000000026e80	nop
0000000000026e84	mov	x0, x19
0000000000026e88	mov	w2, #0x3
0000000000026e8c	ldp	x29, x30, [sp, #0x10]
0000000000026e90	ldp	x20, x19, [sp], #0x20
0000000000026e94	b	_AddTLSRecord
0000000000026e98	adr	x8, #0x6d688
0000000000026e9c	nop
0000000000026ea0	stp	xzr, xzr, [x8, #0x38]
0000000000026ea4	str	wzr, [x8]
0000000000026ea8	ldp	x29, x30, [sp, #0x10]
0000000000026eac	ldp	x20, x19, [sp], #0x20
0000000000026eb0	ret
0000000000026eb4	stp	x20, x19, [sp, #-0x20]!
0000000000026eb8	stp	x29, x30, [sp, #0x10]
0000000000026ebc	add	x29, sp, #0x10
0000000000026ec0	mov	x19, x1
0000000000026ec4	mov	x20, x0
0000000000026ec8	adr	x8, #0x6d641
0000000000026ecc	nop
0000000000026ed0	ldarb	w8, [x8]
0000000000026ed4	tbz	w8, #0x0, 0x26edc
0000000000026ed8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026edc	sub	w8, w20, #0x1
0000000000026ee0	cmp	w8, #0x3
0000000000026ee4	b.hs	0x26ef4
0000000000026ee8	ldp	x29, x30, [sp, #0x10]
0000000000026eec	ldp	x20, x19, [sp], #0x20
0000000000026ef0	ret
0000000000026ef4	adr	x1, #0x6d6b4
0000000000026ef8	nop
0000000000026efc	mov	x0, x19
0000000000026f00	mov	w2, #0x3
0000000000026f04	ldp	x29, x30, [sp, #0x10]
0000000000026f08	ldp	x20, x19, [sp], #0x20
0000000000026f0c	b	_AddTLSRecord
0000000000026f10	stp	x20, x19, [sp, #-0x20]!
0000000000026f14	stp	x29, x30, [sp, #0x10]
0000000000026f18	add	x29, sp, #0x10
0000000000026f1c	mov	x19, x1
0000000000026f20	mov	x20, x0
0000000000026f24	adr	x8, #0x6d5e5
0000000000026f28	nop
0000000000026f2c	ldarb	w8, [x8]
0000000000026f30	tbz	w8, #0x0, 0x26f38
0000000000026f34	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026f38	sub	w8, w20, #0x1
0000000000026f3c	cmp	w8, #0x2
0000000000026f40	b.lo	0x26f6c
0000000000026f44	cbnz	w20, 0x26f64
0000000000026f48	adr	x1, #0x6d660
0000000000026f4c	nop
0000000000026f50	mov	x0, x19
0000000000026f54	mov	w2, #0x3
0000000000026f58	ldp	x29, x30, [sp, #0x10]
0000000000026f5c	ldp	x20, x19, [sp], #0x20
0000000000026f60	b	_AddTLSRecord
0000000000026f64	adrp	x8, 110 ; 0x94000
0000000000026f68	str	xzr, [x8, #0x580]
0000000000026f6c	ldp	x29, x30, [sp, #0x10]
0000000000026f70	ldp	x20, x19, [sp], #0x20
0000000000026f74	ret
0000000000026f78	stp	x20, x19, [sp, #-0x20]!
0000000000026f7c	stp	x29, x30, [sp, #0x10]
0000000000026f80	add	x29, sp, #0x10
0000000000026f84	mov	x19, x1
0000000000026f88	mov	x20, x0
0000000000026f8c	adr	x8, #0x6d57d
0000000000026f90	nop
0000000000026f94	ldarb	w8, [x8]
0000000000026f98	tbz	w8, #0x0, 0x26fa0
0000000000026f9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026fa0	sub	w8, w20, #0x1
0000000000026fa4	cmp	w8, #0x3
0000000000026fa8	b.hs	0x26fb8
0000000000026fac	ldp	x29, x30, [sp, #0x10]
0000000000026fb0	ldp	x20, x19, [sp], #0x20
0000000000026fb4	ret
0000000000026fb8	adr	x1, #0x6d5f0
0000000000026fbc	nop
0000000000026fc0	mov	x0, x19
0000000000026fc4	mov	w2, #0x3
0000000000026fc8	ldp	x29, x30, [sp, #0x10]
0000000000026fcc	ldp	x20, x19, [sp], #0x20
0000000000026fd0	b	_AddTLSRecord
0000000000026fd4	stp	x20, x19, [sp, #-0x20]!
0000000000026fd8	stp	x29, x30, [sp, #0x10]
0000000000026fdc	add	x29, sp, #0x10
0000000000026fe0	mov	x19, x1
0000000000026fe4	mov	x20, x0
0000000000026fe8	adr	x8, #0x6d521
0000000000026fec	nop
0000000000026ff0	ldarb	w8, [x8]
0000000000026ff4	tbz	w8, #0x0, 0x26ffc
0000000000026ff8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000026ffc	sub	w8, w20, #0x1
0000000000027000	cmp	w8, #0x3
0000000000027004	b.hs	0x27014
0000000000027008	ldp	x29, x30, [sp, #0x10]
000000000002700c	ldp	x20, x19, [sp], #0x20
0000000000027010	ret
0000000000027014	adr	x1, #0x6d594
0000000000027018	nop
000000000002701c	mov	x0, x19
0000000000027020	mov	w2, #0x3
0000000000027024	ldp	x29, x30, [sp, #0x10]
0000000000027028	ldp	x20, x19, [sp], #0x20
000000000002702c	b	_AddTLSRecord
0000000000027030	stp	x20, x19, [sp, #-0x20]!
0000000000027034	stp	x29, x30, [sp, #0x10]
0000000000027038	add	x29, sp, #0x10
000000000002703c	mov	x19, x1
0000000000027040	mov	x20, x0
0000000000027044	adr	x8, #0x6d4c5
0000000000027048	nop
000000000002704c	ldarb	w8, [x8]
0000000000027050	tbz	w8, #0x0, 0x27058
0000000000027054	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027058	sub	w8, w20, #0x1
000000000002705c	cmp	w8, #0x2
0000000000027060	b.lo	0x2708c
0000000000027064	cbnz	w20, 0x27084
0000000000027068	adr	x1, #0x6d540
000000000002706c	nop
0000000000027070	mov	x0, x19
0000000000027074	mov	w2, #0x3
0000000000027078	ldp	x29, x30, [sp, #0x10]
000000000002707c	ldp	x20, x19, [sp], #0x20
0000000000027080	b	_AddTLSRecord
0000000000027084	adrp	x8, 109 ; 0x94000
0000000000027088	str	xzr, [x8, #0x568]
000000000002708c	ldp	x29, x30, [sp, #0x10]
0000000000027090	ldp	x20, x19, [sp], #0x20
0000000000027094	ret
0000000000027098	stp	x20, x19, [sp, #-0x20]!
000000000002709c	stp	x29, x30, [sp, #0x10]
00000000000270a0	add	x29, sp, #0x10
00000000000270a4	mov	x19, x1
00000000000270a8	mov	x20, x0
00000000000270ac	adr	x8, #0x6d45d
00000000000270b0	nop
00000000000270b4	ldarb	w8, [x8]
00000000000270b8	tbz	w8, #0x0, 0x270c0
00000000000270bc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000270c0	sub	w8, w20, #0x1
00000000000270c4	cmp	w8, #0x3
00000000000270c8	b.hs	0x270d8
00000000000270cc	ldp	x29, x30, [sp, #0x10]
00000000000270d0	ldp	x20, x19, [sp], #0x20
00000000000270d4	ret
00000000000270d8	adr	x1, #0x6d4d0
00000000000270dc	nop
00000000000270e0	mov	x0, x19
00000000000270e4	mov	w2, #0x3
00000000000270e8	ldp	x29, x30, [sp, #0x10]
00000000000270ec	ldp	x20, x19, [sp], #0x20
00000000000270f0	b	_AddTLSRecord
00000000000270f4	stp	x20, x19, [sp, #-0x20]!
00000000000270f8	stp	x29, x30, [sp, #0x10]
00000000000270fc	add	x29, sp, #0x10
0000000000027100	mov	x19, x1
0000000000027104	mov	x20, x0
0000000000027108	adr	x8, #0x6d401
000000000002710c	nop
0000000000027110	ldarb	w8, [x8]
0000000000027114	tbz	w8, #0x0, 0x2711c
0000000000027118	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002711c	sub	w8, w20, #0x1
0000000000027120	cmp	w8, #0x2
0000000000027124	b.lo	0x27154
0000000000027128	cbnz	w20, 0x27148
000000000002712c	adr	x1, #0x6d47c
0000000000027130	nop
0000000000027134	mov	x0, x19
0000000000027138	mov	w2, #0x3
000000000002713c	ldp	x29, x30, [sp, #0x10]
0000000000027140	ldp	x20, x19, [sp], #0x20
0000000000027144	b	_AddTLSRecord
0000000000027148	adr	x8, #0x6d428
000000000002714c	nop
0000000000027150	stp	xzr, xzr, [x8]
0000000000027154	ldp	x29, x30, [sp, #0x10]
0000000000027158	ldp	x20, x19, [sp], #0x20
000000000002715c	ret
0000000000027160	stp	x20, x19, [sp, #-0x20]!
0000000000027164	stp	x29, x30, [sp, #0x10]
0000000000027168	add	x29, sp, #0x10
000000000002716c	mov	x19, x1
0000000000027170	mov	x20, x0
0000000000027174	adr	x8, #0x6d395
0000000000027178	nop
000000000002717c	ldarb	w8, [x8]
0000000000027180	tbz	w8, #0x0, 0x27188
0000000000027184	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027188	sub	w8, w20, #0x1
000000000002718c	cmp	w8, #0x3
0000000000027190	b.hs	0x271a0
0000000000027194	ldp	x29, x30, [sp, #0x10]
0000000000027198	ldp	x20, x19, [sp], #0x20
000000000002719c	ret
00000000000271a0	adr	x1, #0x6d408
00000000000271a4	nop
00000000000271a8	mov	x0, x19
00000000000271ac	mov	w2, #0x3
00000000000271b0	ldp	x29, x30, [sp, #0x10]
00000000000271b4	ldp	x20, x19, [sp], #0x20
00000000000271b8	b	_AddTLSRecord
00000000000271bc	stp	x20, x19, [sp, #-0x20]!
00000000000271c0	stp	x29, x30, [sp, #0x10]
00000000000271c4	add	x29, sp, #0x10
00000000000271c8	mov	x19, x1
00000000000271cc	mov	x20, x0
00000000000271d0	adr	x8, #0x6d339
00000000000271d4	nop
00000000000271d8	ldarb	w8, [x8]
00000000000271dc	tbz	w8, #0x0, 0x271e4
00000000000271e0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000271e4	sub	w8, w20, #0x1
00000000000271e8	cmp	w8, #0x3
00000000000271ec	b.hs	0x271fc
00000000000271f0	ldp	x29, x30, [sp, #0x10]
00000000000271f4	ldp	x20, x19, [sp], #0x20
00000000000271f8	ret
00000000000271fc	adr	x1, #0x6d3ac
0000000000027200	nop
0000000000027204	mov	x0, x19
0000000000027208	mov	w2, #0x3
000000000002720c	ldp	x29, x30, [sp, #0x10]
0000000000027210	ldp	x20, x19, [sp], #0x20
0000000000027214	b	_AddTLSRecord
0000000000027218	stp	x20, x19, [sp, #-0x20]!
000000000002721c	stp	x29, x30, [sp, #0x10]
0000000000027220	add	x29, sp, #0x10
0000000000027224	mov	x19, x1
0000000000027228	mov	x20, x0
000000000002722c	adr	x8, #0x6d2dd
0000000000027230	nop
0000000000027234	ldarb	w8, [x8]
0000000000027238	tbz	w8, #0x0, 0x27240
000000000002723c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027240	sub	w8, w20, #0x1
0000000000027244	cmp	w8, #0x2
0000000000027248	b.lo	0x27274
000000000002724c	cbnz	w20, 0x2726c
0000000000027250	adr	x1, #0x6d358
0000000000027254	nop
0000000000027258	mov	x0, x19
000000000002725c	mov	w2, #0x3
0000000000027260	ldp	x29, x30, [sp, #0x10]
0000000000027264	ldp	x20, x19, [sp], #0x20
0000000000027268	b	_AddTLSRecord
000000000002726c	adrp	x8, 109 ; 0x94000
0000000000027270	str	xzr, [x8, #0x568]
0000000000027274	ldp	x29, x30, [sp, #0x10]
0000000000027278	ldp	x20, x19, [sp], #0x20
000000000002727c	ret
0000000000027280	stp	x20, x19, [sp, #-0x20]!
0000000000027284	stp	x29, x30, [sp, #0x10]
0000000000027288	add	x29, sp, #0x10
000000000002728c	mov	x19, x1
0000000000027290	mov	x20, x0
0000000000027294	adr	x8, #0x6d275
0000000000027298	nop
000000000002729c	ldarb	w8, [x8]
00000000000272a0	tbz	w8, #0x0, 0x272a8
00000000000272a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000272a8	sub	w8, w20, #0x1
00000000000272ac	cmp	w8, #0x3
00000000000272b0	b.hs	0x272c0
00000000000272b4	ldp	x29, x30, [sp, #0x10]
00000000000272b8	ldp	x20, x19, [sp], #0x20
00000000000272bc	ret
00000000000272c0	adr	x1, #0x6d2e8
00000000000272c4	nop
00000000000272c8	mov	x0, x19
00000000000272cc	mov	w2, #0x3
00000000000272d0	ldp	x29, x30, [sp, #0x10]
00000000000272d4	ldp	x20, x19, [sp], #0x20
00000000000272d8	b	_AddTLSRecord
00000000000272dc	stp	x20, x19, [sp, #-0x20]!
00000000000272e0	stp	x29, x30, [sp, #0x10]
00000000000272e4	add	x29, sp, #0x10
00000000000272e8	mov	x19, x1
00000000000272ec	mov	x20, x0
00000000000272f0	adr	x8, #0x6d219
00000000000272f4	nop
00000000000272f8	ldarb	w8, [x8]
00000000000272fc	tbz	w8, #0x0, 0x27304
0000000000027300	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027304	sub	w8, w20, #0x1
0000000000027308	cmp	w8, #0x2
000000000002730c	b.lo	0x2733c
0000000000027310	cbnz	w20, 0x27330
0000000000027314	adr	x1, #0x6d294
0000000000027318	nop
000000000002731c	mov	x0, x19
0000000000027320	mov	w2, #0x3
0000000000027324	ldp	x29, x30, [sp, #0x10]
0000000000027328	ldp	x20, x19, [sp], #0x20
000000000002732c	b	_AddTLSRecord
0000000000027330	adr	x8, #0x6d268
0000000000027334	nop
0000000000027338	stp	xzr, xzr, [x8]
000000000002733c	ldp	x29, x30, [sp, #0x10]
0000000000027340	ldp	x20, x19, [sp], #0x20
0000000000027344	ret
0000000000027348	stp	x20, x19, [sp, #-0x20]!
000000000002734c	stp	x29, x30, [sp, #0x10]
0000000000027350	add	x29, sp, #0x10
0000000000027354	mov	x19, x1
0000000000027358	mov	x20, x0
000000000002735c	adr	x8, #0x6d1ad
0000000000027360	nop
0000000000027364	ldarb	w8, [x8]
0000000000027368	tbz	w8, #0x0, 0x27370
000000000002736c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027370	sub	w8, w20, #0x1
0000000000027374	cmp	w8, #0x2
0000000000027378	b.lo	0x273a4
000000000002737c	cbnz	w20, 0x2739c
0000000000027380	adr	x1, #0x6d228
0000000000027384	nop
0000000000027388	mov	x0, x19
000000000002738c	mov	w2, #0x3
0000000000027390	ldp	x29, x30, [sp, #0x10]
0000000000027394	ldp	x20, x19, [sp], #0x20
0000000000027398	b	_AddTLSRecord
000000000002739c	adrp	x8, 109 ; 0x94000
00000000000273a0	str	xzr, [x8, #0x580]
00000000000273a4	ldp	x29, x30, [sp, #0x10]
00000000000273a8	ldp	x20, x19, [sp], #0x20
00000000000273ac	ret
00000000000273b0	stp	x20, x19, [sp, #-0x20]!
00000000000273b4	stp	x29, x30, [sp, #0x10]
00000000000273b8	add	x29, sp, #0x10
00000000000273bc	mov	x19, x1
00000000000273c0	mov	x20, x0
00000000000273c4	adr	x8, #0x6d145
00000000000273c8	nop
00000000000273cc	ldarb	w8, [x8]
00000000000273d0	tbz	w8, #0x0, 0x273d8
00000000000273d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000273d8	sub	w8, w20, #0x1
00000000000273dc	cmp	w8, #0x2
00000000000273e0	b.lo	0x27414
00000000000273e4	cbnz	w20, 0x27404
00000000000273e8	adr	x1, #0x6d1c0
00000000000273ec	nop
00000000000273f0	mov	x0, x19
00000000000273f4	mov	w2, #0x3
00000000000273f8	ldp	x29, x30, [sp, #0x10]
00000000000273fc	ldp	x20, x19, [sp], #0x20
0000000000027400	b	_AddTLSRecord
0000000000027404	adr	x8, #0x6d164
0000000000027408	nop
000000000002740c	str	xzr, [x8, #0x20]
0000000000027410	str	xzr, [x8]
0000000000027414	ldp	x29, x30, [sp, #0x10]
0000000000027418	ldp	x20, x19, [sp], #0x20
000000000002741c	ret
0000000000027420	stp	x20, x19, [sp, #-0x20]!
0000000000027424	stp	x29, x30, [sp, #0x10]
0000000000027428	add	x29, sp, #0x10
000000000002742c	mov	x19, x1
0000000000027430	mov	x20, x0
0000000000027434	adr	x8, #0x6d0d5
0000000000027438	nop
000000000002743c	ldarb	w8, [x8]
0000000000027440	tbz	w8, #0x0, 0x27448
0000000000027444	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027448	sub	w8, w20, #0x1
000000000002744c	cmp	w8, #0x3
0000000000027450	b.hs	0x27460
0000000000027454	ldp	x29, x30, [sp, #0x10]
0000000000027458	ldp	x20, x19, [sp], #0x20
000000000002745c	ret
0000000000027460	adr	x1, #0x6d148
0000000000027464	nop
0000000000027468	mov	x0, x19
000000000002746c	mov	w2, #0x3
0000000000027470	ldp	x29, x30, [sp, #0x10]
0000000000027474	ldp	x20, x19, [sp], #0x20
0000000000027478	b	_AddTLSRecord
000000000002747c	stp	x20, x19, [sp, #-0x20]!
0000000000027480	stp	x29, x30, [sp, #0x10]
0000000000027484	add	x29, sp, #0x10
0000000000027488	mov	x19, x1
000000000002748c	mov	x20, x0
0000000000027490	adr	x8, #0x6d079
0000000000027494	nop
0000000000027498	ldarb	w8, [x8]
000000000002749c	tbz	w8, #0x0, 0x274a4
00000000000274a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000274a4	sub	w8, w20, #0x1
00000000000274a8	cmp	w8, #0x3
00000000000274ac	b.hs	0x274bc
00000000000274b0	ldp	x29, x30, [sp, #0x10]
00000000000274b4	ldp	x20, x19, [sp], #0x20
00000000000274b8	ret
00000000000274bc	adr	x1, #0x6d0ec
00000000000274c0	nop
00000000000274c4	mov	x0, x19
00000000000274c8	mov	w2, #0x3
00000000000274cc	ldp	x29, x30, [sp, #0x10]
00000000000274d0	ldp	x20, x19, [sp], #0x20
00000000000274d4	b	_AddTLSRecord
00000000000274d8	stp	x20, x19, [sp, #-0x20]!
00000000000274dc	stp	x29, x30, [sp, #0x10]
00000000000274e0	add	x29, sp, #0x10
00000000000274e4	mov	x19, x1
00000000000274e8	mov	x20, x0
00000000000274ec	adr	x8, #0x6d01d
00000000000274f0	nop
00000000000274f4	ldarb	w8, [x8]
00000000000274f8	tbz	w8, #0x0, 0x27500
00000000000274fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027500	sub	w8, w20, #0x1
0000000000027504	cmp	w8, #0x3
0000000000027508	b.hs	0x27518
000000000002750c	ldp	x29, x30, [sp, #0x10]
0000000000027510	ldp	x20, x19, [sp], #0x20
0000000000027514	ret
0000000000027518	adr	x1, #0x6d090
000000000002751c	nop
0000000000027520	mov	x0, x19
0000000000027524	mov	w2, #0x3
0000000000027528	ldp	x29, x30, [sp, #0x10]
000000000002752c	ldp	x20, x19, [sp], #0x20
0000000000027530	b	_AddTLSRecord
0000000000027534	stp	x20, x19, [sp, #-0x20]!
0000000000027538	stp	x29, x30, [sp, #0x10]
000000000002753c	add	x29, sp, #0x10
0000000000027540	mov	x19, x1
0000000000027544	mov	x20, x0
0000000000027548	adr	x8, #0x6cfc1
000000000002754c	nop
0000000000027550	ldarb	w8, [x8]
0000000000027554	tbz	w8, #0x0, 0x2755c
0000000000027558	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002755c	sub	w8, w20, #0x1
0000000000027560	cmp	w8, #0x3
0000000000027564	b.hs	0x27574
0000000000027568	ldp	x29, x30, [sp, #0x10]
000000000002756c	ldp	x20, x19, [sp], #0x20
0000000000027570	ret
0000000000027574	adr	x1, #0x6d034
0000000000027578	nop
000000000002757c	mov	x0, x19
0000000000027580	mov	w2, #0x3
0000000000027584	ldp	x29, x30, [sp, #0x10]
0000000000027588	ldp	x20, x19, [sp], #0x20
000000000002758c	b	_AddTLSRecord
0000000000027590	stp	x20, x19, [sp, #-0x20]!
0000000000027594	stp	x29, x30, [sp, #0x10]
0000000000027598	add	x29, sp, #0x10
000000000002759c	mov	x19, x1
00000000000275a0	mov	x20, x0
00000000000275a4	adr	x8, #0x6cf65
00000000000275a8	nop
00000000000275ac	ldarb	w8, [x8]
00000000000275b0	tbz	w8, #0x0, 0x275b8
00000000000275b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000275b8	sub	w8, w20, #0x1
00000000000275bc	cmp	w8, #0x3
00000000000275c0	b.hs	0x275d0
00000000000275c4	ldp	x29, x30, [sp, #0x10]
00000000000275c8	ldp	x20, x19, [sp], #0x20
00000000000275cc	ret
00000000000275d0	adr	x1, #0x6cfd8
00000000000275d4	nop
00000000000275d8	mov	x0, x19
00000000000275dc	mov	w2, #0x3
00000000000275e0	ldp	x29, x30, [sp, #0x10]
00000000000275e4	ldp	x20, x19, [sp], #0x20
00000000000275e8	b	_AddTLSRecord
00000000000275ec	stp	x20, x19, [sp, #-0x20]!
00000000000275f0	stp	x29, x30, [sp, #0x10]
00000000000275f4	add	x29, sp, #0x10
00000000000275f8	mov	x19, x1
00000000000275fc	mov	x20, x0
0000000000027600	adr	x8, #0x6cf09
0000000000027604	nop
0000000000027608	ldarb	w8, [x8]
000000000002760c	tbz	w8, #0x0, 0x27614
0000000000027610	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027614	sub	w8, w20, #0x1
0000000000027618	cmp	w8, #0x3
000000000002761c	b.hs	0x2762c
0000000000027620	ldp	x29, x30, [sp, #0x10]
0000000000027624	ldp	x20, x19, [sp], #0x20
0000000000027628	ret
000000000002762c	adr	x1, #0x6cf7c
0000000000027630	nop
0000000000027634	mov	x0, x19
0000000000027638	mov	w2, #0x3
000000000002763c	ldp	x29, x30, [sp, #0x10]
0000000000027640	ldp	x20, x19, [sp], #0x20
0000000000027644	b	_AddTLSRecord
0000000000027648	stp	x20, x19, [sp, #-0x20]!
000000000002764c	stp	x29, x30, [sp, #0x10]
0000000000027650	add	x29, sp, #0x10
0000000000027654	mov	x19, x1
0000000000027658	mov	x20, x0
000000000002765c	adr	x8, #0x6cead
0000000000027660	nop
0000000000027664	ldarb	w8, [x8]
0000000000027668	tbz	w8, #0x0, 0x27670
000000000002766c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027670	sub	w8, w20, #0x1
0000000000027674	cmp	w8, #0x3
0000000000027678	b.hs	0x27688
000000000002767c	ldp	x29, x30, [sp, #0x10]
0000000000027680	ldp	x20, x19, [sp], #0x20
0000000000027684	ret
0000000000027688	adr	x1, #0x6cf20
000000000002768c	nop
0000000000027690	mov	x0, x19
0000000000027694	mov	w2, #0x3
0000000000027698	ldp	x29, x30, [sp, #0x10]
000000000002769c	ldp	x20, x19, [sp], #0x20
00000000000276a0	b	_AddTLSRecord
00000000000276a4	stp	x20, x19, [sp, #-0x20]!
00000000000276a8	stp	x29, x30, [sp, #0x10]
00000000000276ac	add	x29, sp, #0x10
00000000000276b0	mov	x19, x1
00000000000276b4	mov	x20, x0
00000000000276b8	adr	x8, #0x6ce51
00000000000276bc	nop
00000000000276c0	ldarb	w8, [x8]
00000000000276c4	tbz	w8, #0x0, 0x276cc
00000000000276c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000276cc	sub	w8, w20, #0x1
00000000000276d0	cmp	w8, #0x3
00000000000276d4	b.hs	0x276e4
00000000000276d8	ldp	x29, x30, [sp, #0x10]
00000000000276dc	ldp	x20, x19, [sp], #0x20
00000000000276e0	ret
00000000000276e4	adr	x1, #0x6cec4
00000000000276e8	nop
00000000000276ec	mov	x0, x19
00000000000276f0	mov	w2, #0x3
00000000000276f4	ldp	x29, x30, [sp, #0x10]
00000000000276f8	ldp	x20, x19, [sp], #0x20
00000000000276fc	b	_AddTLSRecord
0000000000027700	stp	x20, x19, [sp, #-0x20]!
0000000000027704	stp	x29, x30, [sp, #0x10]
0000000000027708	add	x29, sp, #0x10
000000000002770c	mov	x19, x1
0000000000027710	mov	x20, x0
0000000000027714	adr	x8, #0x6cdf5
0000000000027718	nop
000000000002771c	ldarb	w8, [x8]
0000000000027720	tbz	w8, #0x0, 0x27728
0000000000027724	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027728	sub	w8, w20, #0x1
000000000002772c	cmp	w8, #0x3
0000000000027730	b.hs	0x27740
0000000000027734	ldp	x29, x30, [sp, #0x10]
0000000000027738	ldp	x20, x19, [sp], #0x20
000000000002773c	ret
0000000000027740	adr	x1, #0x6ce68
0000000000027744	nop
0000000000027748	mov	x0, x19
000000000002774c	mov	w2, #0x3
0000000000027750	ldp	x29, x30, [sp, #0x10]
0000000000027754	ldp	x20, x19, [sp], #0x20
0000000000027758	b	_AddTLSRecord
000000000002775c	stp	x20, x19, [sp, #-0x20]!
0000000000027760	stp	x29, x30, [sp, #0x10]
0000000000027764	add	x29, sp, #0x10
0000000000027768	mov	x19, x1
000000000002776c	mov	x20, x0
0000000000027770	adr	x8, #0x6cd99
0000000000027774	nop
0000000000027778	ldarb	w8, [x8]
000000000002777c	tbz	w8, #0x0, 0x27784
0000000000027780	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027784	sub	w8, w20, #0x1
0000000000027788	cmp	w8, #0x2
000000000002778c	b.lo	0x277b8
0000000000027790	cbnz	w20, 0x277b0
0000000000027794	adr	x1, #0x6ce14
0000000000027798	nop
000000000002779c	mov	x0, x19
00000000000277a0	mov	w2, #0x3
00000000000277a4	ldp	x29, x30, [sp, #0x10]
00000000000277a8	ldp	x20, x19, [sp], #0x20
00000000000277ac	b	_AddTLSRecord
00000000000277b0	adrp	x8, 109 ; 0x94000
00000000000277b4	str	xzr, [x8, #0x590]
00000000000277b8	ldp	x29, x30, [sp, #0x10]
00000000000277bc	ldp	x20, x19, [sp], #0x20
00000000000277c0	ret
00000000000277c4	stp	x20, x19, [sp, #-0x20]!
00000000000277c8	stp	x29, x30, [sp, #0x10]
00000000000277cc	add	x29, sp, #0x10
00000000000277d0	mov	x19, x1
00000000000277d4	mov	x20, x0
00000000000277d8	adr	x8, #0x6cd31
00000000000277dc	nop
00000000000277e0	ldarb	w8, [x8]
00000000000277e4	tbz	w8, #0x0, 0x277ec
00000000000277e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000277ec	sub	w8, w20, #0x1
00000000000277f0	cmp	w8, #0x3
00000000000277f4	b.hs	0x27804
00000000000277f8	ldp	x29, x30, [sp, #0x10]
00000000000277fc	ldp	x20, x19, [sp], #0x20
0000000000027800	ret
0000000000027804	adr	x1, #0x6cda4
0000000000027808	nop
000000000002780c	mov	x0, x19
0000000000027810	mov	w2, #0x3
0000000000027814	ldp	x29, x30, [sp, #0x10]
0000000000027818	ldp	x20, x19, [sp], #0x20
000000000002781c	b	_AddTLSRecord
0000000000027820	stp	x20, x19, [sp, #-0x20]!
0000000000027824	stp	x29, x30, [sp, #0x10]
0000000000027828	add	x29, sp, #0x10
000000000002782c	mov	x19, x1
0000000000027830	mov	x20, x0
0000000000027834	adr	x8, #0x6ccd5
0000000000027838	nop
000000000002783c	ldarb	w8, [x8]
0000000000027840	tbz	w8, #0x0, 0x27848
0000000000027844	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027848	sub	w8, w20, #0x1
000000000002784c	cmp	w8, #0x3
0000000000027850	b.hs	0x27860
0000000000027854	ldp	x29, x30, [sp, #0x10]
0000000000027858	ldp	x20, x19, [sp], #0x20
000000000002785c	ret
0000000000027860	adr	x1, #0x6cd48
0000000000027864	nop
0000000000027868	mov	x0, x19
000000000002786c	mov	w2, #0x3
0000000000027870	ldp	x29, x30, [sp, #0x10]
0000000000027874	ldp	x20, x19, [sp], #0x20
0000000000027878	b	_AddTLSRecord
000000000002787c	stp	x20, x19, [sp, #-0x20]!
0000000000027880	stp	x29, x30, [sp, #0x10]
0000000000027884	add	x29, sp, #0x10
0000000000027888	mov	x19, x1
000000000002788c	mov	x20, x0
0000000000027890	adr	x8, #0x6cc79
0000000000027894	nop
0000000000027898	ldarb	w8, [x8]
000000000002789c	tbz	w8, #0x0, 0x278a4
00000000000278a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000278a4	sub	w8, w20, #0x1
00000000000278a8	cmp	w8, #0x3
00000000000278ac	b.hs	0x278bc
00000000000278b0	ldp	x29, x30, [sp, #0x10]
00000000000278b4	ldp	x20, x19, [sp], #0x20
00000000000278b8	ret
00000000000278bc	adr	x1, #0x6ccec
00000000000278c0	nop
00000000000278c4	mov	x0, x19
00000000000278c8	mov	w2, #0x3
00000000000278cc	ldp	x29, x30, [sp, #0x10]
00000000000278d0	ldp	x20, x19, [sp], #0x20
00000000000278d4	b	_AddTLSRecord
00000000000278d8	stp	x20, x19, [sp, #-0x20]!
00000000000278dc	stp	x29, x30, [sp, #0x10]
00000000000278e0	add	x29, sp, #0x10
00000000000278e4	mov	x19, x1
00000000000278e8	mov	x20, x0
00000000000278ec	adr	x8, #0x6cc1d
00000000000278f0	nop
00000000000278f4	ldarb	w8, [x8]
00000000000278f8	tbz	w8, #0x0, 0x27900
00000000000278fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027900	sub	w8, w20, #0x1
0000000000027904	cmp	w8, #0x2
0000000000027908	b.lo	0x27934
000000000002790c	cbnz	w20, 0x2792c
0000000000027910	adr	x1, #0x6cc98
0000000000027914	nop
0000000000027918	mov	x0, x19
000000000002791c	mov	w2, #0x3
0000000000027920	ldp	x29, x30, [sp, #0x10]
0000000000027924	ldp	x20, x19, [sp], #0x20
0000000000027928	b	_AddTLSRecord
000000000002792c	adrp	x8, 109 ; 0x94000
0000000000027930	str	xzr, [x8, #0x5a0]
0000000000027934	ldp	x29, x30, [sp, #0x10]
0000000000027938	ldp	x20, x19, [sp], #0x20
000000000002793c	ret
0000000000027940	stp	x20, x19, [sp, #-0x20]!
0000000000027944	stp	x29, x30, [sp, #0x10]
0000000000027948	add	x29, sp, #0x10
000000000002794c	mov	x19, x1
0000000000027950	mov	x20, x0
0000000000027954	adr	x8, #0x6cbb5
0000000000027958	nop
000000000002795c	ldarb	w8, [x8]
0000000000027960	tbz	w8, #0x0, 0x27968
0000000000027964	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027968	sub	w8, w20, #0x1
000000000002796c	cmp	w8, #0x2
0000000000027970	b.lo	0x2799c
0000000000027974	cbnz	w20, 0x27994
0000000000027978	adr	x1, #0x6cc30
000000000002797c	nop
0000000000027980	mov	x0, x19
0000000000027984	mov	w2, #0x3
0000000000027988	ldp	x29, x30, [sp, #0x10]
000000000002798c	ldp	x20, x19, [sp], #0x20
0000000000027990	b	_AddTLSRecord
0000000000027994	adrp	x8, 109 ; 0x94000
0000000000027998	str	xzr, [x8, #0x5a0]
000000000002799c	ldp	x29, x30, [sp, #0x10]
00000000000279a0	ldp	x20, x19, [sp], #0x20
00000000000279a4	ret
00000000000279a8	stp	x20, x19, [sp, #-0x20]!
00000000000279ac	stp	x29, x30, [sp, #0x10]
00000000000279b0	add	x29, sp, #0x10
00000000000279b4	mov	x19, x1
00000000000279b8	mov	x20, x0
00000000000279bc	adr	x8, #0x6cb4d
00000000000279c0	nop
00000000000279c4	ldarb	w8, [x8]
00000000000279c8	tbz	w8, #0x0, 0x279d0
00000000000279cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000279d0	sub	w8, w20, #0x1
00000000000279d4	cmp	w8, #0x3
00000000000279d8	b.hs	0x279e8
00000000000279dc	ldp	x29, x30, [sp, #0x10]
00000000000279e0	ldp	x20, x19, [sp], #0x20
00000000000279e4	ret
00000000000279e8	adr	x1, #0x6cbc0
00000000000279ec	nop
00000000000279f0	mov	x0, x19
00000000000279f4	mov	w2, #0x3
00000000000279f8	ldp	x29, x30, [sp, #0x10]
00000000000279fc	ldp	x20, x19, [sp], #0x20
0000000000027a00	b	_AddTLSRecord
_blockDisposeHelper:
0000000000027a04	sub	sp, sp, #0x50
0000000000027a08	stp	x22, x21, [sp, #0x20]
0000000000027a0c	stp	x20, x19, [sp, #0x30]
0000000000027a10	stp	x29, x30, [sp, #0x40]
0000000000027a14	add	x29, sp, #0x40
0000000000027a18	mov	x20, x0
0000000000027a1c	stp	xzr, xzr, [sp, #0x8]
0000000000027a20	str	xzr, [sp, #0x18]
0000000000027a24	bl	_Kotlin_initRuntimeIfNeeded
0000000000027a28	adrp	x19, 83 ; 0x7a000
0000000000027a2c	add	x19, x19, #0x4e0
0000000000027a30	ldr	x21, [x19]
0000000000027a34	mov	x0, x19
0000000000027a38	blr	x21
0000000000027a3c	ldr	x8, [x0]
0000000000027a40	add	x0, x8, #0x138
0000000000027a44	ldaxr	w8, [x0]
0000000000027a48	stlxr	w9, wzr, [x0]
0000000000027a4c	cbnz	w9, 0x27a44
0000000000027a50	adr	x22, #0x6cab9
0000000000027a54	nop
0000000000027a58	cmp	w8, #0x1
0000000000027a5c	b.ne	0x27a6c
0000000000027a60	ldarb	w8, [x22]
0000000000027a64	tbz	w8, #0x0, 0x27a6c
0000000000027a68	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000027a6c	mov	x0, x19
0000000000027a70	blr	x21
0000000000027a74	ldr	x8, [x0]
0000000000027a78	ldr	x9, [x8, #0x110]
0000000000027a7c	add	x10, sp, #0x8
0000000000027a80	str	x10, [x8, #0x110]
0000000000027a84	mov	x8, #0x300000000
0000000000027a88	stp	x9, x8, [sp, #0x10]
0000000000027a8c	ldarb	w8, [x22]
0000000000027a90	tbz	w8, #0x0, 0x27a98
0000000000027a94	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027a98	ldr	x8, [x20, #0x20]
0000000000027a9c	cbz	x8, 0x27ab8
0000000000027aa0	ldr	x1, [x20, #0x28]
0000000000027aa4	mov	x0, x19
0000000000027aa8	blr	x21
0000000000027aac	ldr	x8, [x0]
0000000000027ab0	add	x0, x8, #0x8
0000000000027ab4	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000027ab8	mov	x0, x19
0000000000027abc	blr	x21
0000000000027ac0	ldr	x8, [x0]
0000000000027ac4	ldr	x9, [sp, #0x10]
0000000000027ac8	str	x9, [x8, #0x110]
0000000000027acc	add	x8, x8, #0x138
0000000000027ad0	mov	w9, #0x1
0000000000027ad4	ldaxr	wzr, [x8]
0000000000027ad8	stlxr	w10, w9, [x8]
0000000000027adc	cbnz	w10, 0x27ad4
0000000000027ae0	ldp	x29, x30, [sp, #0x40]
0000000000027ae4	ldp	x20, x19, [sp, #0x30]
0000000000027ae8	ldp	x22, x21, [sp, #0x20]
0000000000027aec	add	sp, sp, #0x50
0000000000027af0	ret
_blockCopyHelper:
0000000000027af4	stp	x22, x21, [sp, #-0x30]!
0000000000027af8	stp	x20, x19, [sp, #0x10]
0000000000027afc	stp	x29, x30, [sp, #0x20]
0000000000027b00	add	x29, sp, #0x20
0000000000027b04	mov	x20, x1
0000000000027b08	mov	x19, x0
0000000000027b0c	adr	x8, #0x6c9fd
0000000000027b10	nop
0000000000027b14	ldarb	w8, [x8]
0000000000027b18	tbz	w8, #0x0, 0x27b20
0000000000027b1c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027b20	bl	_Kotlin_initRuntimeIfNeeded
0000000000027b24	ldr	x20, [x20, #0x20]
0000000000027b28	adrp	x0, 83 ; 0x7a000
0000000000027b2c	add	x0, x0, #0x4e0
0000000000027b30	ldr	x8, [x0]
0000000000027b34	blr	x8
0000000000027b38	ldr	x21, [x0]
0000000000027b3c	mov	w0, #0x1
0000000000027b40	mov	w1, #0x28
0000000000027b44	bl	0x55aec ; symbol stub for: _calloc
0000000000027b48	ldr	x8, [x21, #0xa8]!
0000000000027b4c	sub	x9, x21, #0x8
0000000000027b50	stp	x8, x21, [x0]
0000000000027b54	str	x0, [x8, #0x8]
0000000000027b58	str	x0, [x21]
0000000000027b5c	ldr	x8, [x21, #0x10]
0000000000027b60	add	x8, x8, #0x1
0000000000027b64	str	x8, [x21, #0x10]
0000000000027b68	stp	x9, x0, [x0, #0x18]
0000000000027b6c	str	x20, [x0, #0x10]!
0000000000027b70	stp	x20, x0, [x19, #0x20]
0000000000027b74	ldp	x29, x30, [sp, #0x20]
0000000000027b78	ldp	x20, x19, [sp, #0x10]
0000000000027b7c	ldp	x22, x21, [sp], #0x30
0000000000027b80	ret
_convertFunction1:
0000000000027b84	sub	sp, sp, #0x80
0000000000027b88	stp	x22, x21, [sp, #0x50]
0000000000027b8c	stp	x20, x19, [sp, #0x60]
0000000000027b90	stp	x29, x30, [sp, #0x70]
0000000000027b94	add	x29, sp, #0x70
0000000000027b98	mov	x20, x0
0000000000027b9c	str	xzr, [sp, #0x8]
0000000000027ba0	adrp	x19, 83 ; 0x7a000
0000000000027ba4	add	x19, x19, #0x4e0
0000000000027ba8	ldr	x21, [x19]
0000000000027bac	mov	x0, x19
0000000000027bb0	blr	x21
0000000000027bb4	ldr	x8, [x0]
0000000000027bb8	ldr	x9, [x8, #0x110]
0000000000027bbc	add	x10, sp, #0x8
0000000000027bc0	str	x10, [x8, #0x110]
0000000000027bc4	mov	x8, #0x300000000
0000000000027bc8	stp	x9, x8, [sp, #0x10]
0000000000027bcc	adr	x8, #0x6c93d
0000000000027bd0	nop
0000000000027bd4	ldarb	w8, [x8]
0000000000027bd8	tbz	w8, #0x0, 0x27be0
0000000000027bdc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027be0	cbz	x20, 0x27c1c
0000000000027be4	nop
0000000000027be8	ldr	x8, #0x38430 ; literal pool symbol address: __NSConcreteStackBlock
0000000000027bec	mov	w9, #-0x3e000000
0000000000027bf0	stp	x8, x9, [sp, #0x20]
0000000000027bf4	adr	x8, #0x80
0000000000027bf8	nop
0000000000027bfc	adr	x9, #0x501f4
0000000000027c00	nop
0000000000027c04	stp	x8, x9, [sp, #0x30]
0000000000027c08	stp	x20, xzr, [sp, #0x40]
0000000000027c0c	add	x0, sp, #0x20
0000000000027c10	bl	0x55cf0 ; symbol stub for: _objc_retainBlock
0000000000027c14	mov	x1, x0
0000000000027c18	b	0x27c20
0000000000027c1c	mov	x1, #0x0
0000000000027c20	mov	x0, x19
0000000000027c24	blr	x21
0000000000027c28	ldr	x8, [x0]
0000000000027c2c	ldr	x9, [sp, #0x10]
0000000000027c30	str	x9, [x8, #0x110]
0000000000027c34	mov	x0, x1
0000000000027c38	ldp	x29, x30, [sp, #0x70]
0000000000027c3c	ldp	x20, x19, [sp, #0x60]
0000000000027c40	ldp	x22, x21, [sp, #0x50]
0000000000027c44	add	sp, sp, #0x80
0000000000027c48	ret
0000000000027c4c	mov	x1, x0
0000000000027c50	mov	x0, x19
0000000000027c54	blr	x21
0000000000027c58	ldr	x8, [x0]
0000000000027c5c	add	x9, sp, #0x8
0000000000027c60	str	x9, [x8, #0x110]
0000000000027c64	mov	x0, x1
0000000000027c68	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000027c6c	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000027c70	b	0x27c70
_invokeBlock1:
0000000000027c74	sub	sp, sp, #0x80
0000000000027c78	stp	x26, x25, [sp, #0x30]
0000000000027c7c	stp	x24, x23, [sp, #0x40]
0000000000027c80	stp	x22, x21, [sp, #0x50]
0000000000027c84	stp	x20, x19, [sp, #0x60]
0000000000027c88	stp	x29, x30, [sp, #0x70]
0000000000027c8c	add	x29, sp, #0x70
0000000000027c90	mov	x22, x1
0000000000027c94	mov	x21, x0
0000000000027c98	str	xzr, [sp, #0x20]
0000000000027c9c	movi.16b	v0, #0x0
0000000000027ca0	stp	q0, q0, [sp]
0000000000027ca4	mov	x8, sp
0000000000027ca8	add	x20, x8, #0x20
0000000000027cac	add	x23, x8, #0x18
0000000000027cb0	bl	_Kotlin_initRuntimeIfNeeded
0000000000027cb4	adrp	x19, 83 ; 0x7a000
0000000000027cb8	add	x19, x19, #0x4e0
0000000000027cbc	ldr	x24, [x19]
0000000000027cc0	mov	x0, x19
0000000000027cc4	blr	x24
0000000000027cc8	ldr	x8, [x0]
0000000000027ccc	add	x0, x8, #0x138
0000000000027cd0	ldaxr	w8, [x0]
0000000000027cd4	stlxr	w9, wzr, [x0]
0000000000027cd8	cbnz	w9, 0x27cd0
0000000000027cdc	adr	x25, #0x6c82d
0000000000027ce0	nop
0000000000027ce4	cmp	w8, #0x1
0000000000027ce8	b.ne	0x27cf8
0000000000027cec	ldarb	w8, [x25]
0000000000027cf0	tbz	w8, #0x0, 0x27cf8
0000000000027cf4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000027cf8	mov	x0, x19
0000000000027cfc	blr	x24
0000000000027d00	ldr	x8, [x0]
0000000000027d04	ldr	x9, [x8, #0x110]
0000000000027d08	mov	x10, sp
0000000000027d0c	str	x10, [x8, #0x110]
0000000000027d10	mov	x8, #0x500000000
0000000000027d14	stp	x9, x8, [sp, #0x8]
0000000000027d18	ldarb	w8, [x25]
0000000000027d1c	tbz	w8, #0x0, 0x27d24
0000000000027d20	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027d24	bl	_Kotlin_initRuntimeIfNeeded
0000000000027d28	ldr	x21, [x21, #0x20]
0000000000027d2c	cbz	x22, 0x27d6c
0000000000027d30	nop
0000000000027d34	ldr	x1, #0x6ca24
0000000000027d38	mov	x0, x22
0000000000027d3c	mov	x2, x23
0000000000027d40	bl	0x55ca8 ; Objc message: -[x0 writeData:]
0000000000027d44	mov	x1, x0
0000000000027d48	ldr	x8, [x21]
0000000000027d4c	and	x8, x8, #0xfffffffffffffffc
0000000000027d50	ldr	x8, [x8]
0000000000027d54	ldr	w9, [x8, #0x3c]
0000000000027d58	ldr	x8, [x8, #0x40]
0000000000027d5c	tbnz	w9, #0x1f, 0x27d8c
0000000000027d60	mov	w10, #0x2c
0000000000027d64	and	x9, x9, x10
0000000000027d68	b	0x27e10
0000000000027d6c	mov	x1, #0x0
0000000000027d70	str	xzr, [sp, #0x18]
0000000000027d74	ldr	x8, [x21]
0000000000027d78	and	x8, x8, #0xfffffffffffffffc
0000000000027d7c	ldr	x8, [x8]
0000000000027d80	ldr	w9, [x8, #0x3c]
0000000000027d84	ldr	x8, [x8, #0x40]
0000000000027d88	tbz	w9, #0x1f, 0x27d60
0000000000027d8c	neg	w10, w9
0000000000027d90	mvn	w9, w9
0000000000027d94	cmp	w10, #0x9
0000000000027d98	b.ge	0x27dd0
0000000000027d9c	cmp	w10, #0x2
0000000000027da0	b.lt	0x27e04
0000000000027da4	mov	x10, #0x0
0000000000027da8	mov	x11, x8
0000000000027dac	ldr	w12, [x11]
0000000000027db0	cmp	w12, #0x2b
0000000000027db4	b.gt	0x27e0c
0000000000027db8	add	x10, x10, #0x1
0000000000027dbc	add	x11, x11, #0x10
0000000000027dc0	cmp	x9, x10
0000000000027dc4	b.ne	0x27dac
0000000000027dc8	mov	x10, x9
0000000000027dcc	b	0x27e0c
0000000000027dd0	mov	w10, #0x0
0000000000027dd4	add	w11, w9, w10
0000000000027dd8	cmp	w11, #0x0
0000000000027ddc	cinc	w11, w11, lt
0000000000027de0	asr	w11, w11, #1
0000000000027de4	sbfiz	x12, x11, #4, #32
0000000000027de8	ldr	w12, [x8, x12]
0000000000027dec	cmp	w12, #0x2c
0000000000027df0	csinc	w10, w10, w11, ge
0000000000027df4	csel	w9, w9, w11, lt
0000000000027df8	cmp	w10, w9
0000000000027dfc	b.lt	0x27dd4
0000000000027e00	b	0x27e0c
0000000000027e04	mov	w10, #0x0
0000000000027e08	b	0x27e0c
0000000000027e0c	sxtw	x9, w10
0000000000027e10	add	x8, x8, x9, lsl #4
0000000000027e14	ldr	x8, [x8, #0x8]
0000000000027e18	ldr	x8, [x8]
0000000000027e1c	mov	x0, x21
0000000000027e20	mov	x2, x20
0000000000027e24	blr	x8
0000000000027e28	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000027e2c	mov	x1, x0
0000000000027e30	mov	x0, x19
0000000000027e34	blr	x24
0000000000027e38	ldr	x8, [x0]
0000000000027e3c	ldr	x9, [sp, #0x8]
0000000000027e40	str	x9, [x8, #0x110]
0000000000027e44	add	x8, x8, #0x138
0000000000027e48	mov	w9, #0x1
0000000000027e4c	ldaxr	wzr, [x8]
0000000000027e50	stlxr	w10, w9, [x8]
0000000000027e54	cbnz	w10, 0x27e4c
0000000000027e58	mov	x0, x1
0000000000027e5c	ldp	x29, x30, [sp, #0x70]
0000000000027e60	ldp	x20, x19, [sp, #0x60]
0000000000027e64	ldp	x22, x21, [sp, #0x50]
0000000000027e68	ldp	x24, x23, [sp, #0x40]
0000000000027e6c	ldp	x26, x25, [sp, #0x30]
0000000000027e70	add	sp, sp, #0x80
0000000000027e74	b	0x55c54 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000027e78	mov	x1, x0
0000000000027e7c	mov	x0, x19
0000000000027e80	blr	x24
0000000000027e84	ldr	x8, [x0]
0000000000027e88	mov	x9, sp
0000000000027e8c	str	x9, [x8, #0x110]
0000000000027e90	mov	x0, x1
0000000000027e94	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000027e98	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000027e9c	b	0x27e9c
_convertFunction0:
0000000000027ea0	sub	sp, sp, #0x80
0000000000027ea4	stp	x22, x21, [sp, #0x50]
0000000000027ea8	stp	x20, x19, [sp, #0x60]
0000000000027eac	stp	x29, x30, [sp, #0x70]
0000000000027eb0	add	x29, sp, #0x70
0000000000027eb4	mov	x20, x0
0000000000027eb8	str	xzr, [sp, #0x8]
0000000000027ebc	adrp	x19, 83 ; 0x7a000
0000000000027ec0	add	x19, x19, #0x4e0
0000000000027ec4	ldr	x21, [x19]
0000000000027ec8	mov	x0, x19
0000000000027ecc	blr	x21
0000000000027ed0	ldr	x8, [x0]
0000000000027ed4	ldr	x9, [x8, #0x110]
0000000000027ed8	add	x10, sp, #0x8
0000000000027edc	str	x10, [x8, #0x110]
0000000000027ee0	mov	x8, #0x300000000
0000000000027ee4	stp	x9, x8, [sp, #0x10]
0000000000027ee8	adr	x8, #0x6c621
0000000000027eec	nop
0000000000027ef0	ldarb	w8, [x8]
0000000000027ef4	tbz	w8, #0x0, 0x27efc
0000000000027ef8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000027efc	cbz	x20, 0x27f38
0000000000027f00	nop
0000000000027f04	ldr	x8, #0x38114 ; literal pool symbol address: __NSConcreteStackBlock
0000000000027f08	mov	w9, #-0x3e000000
0000000000027f0c	stp	x8, x9, [sp, #0x20]
0000000000027f10	adr	x8, #0x80
0000000000027f14	nop
0000000000027f18	adr	x9, #0x4ff08
0000000000027f1c	nop
0000000000027f20	stp	x8, x9, [sp, #0x30]
0000000000027f24	stp	x20, xzr, [sp, #0x40]
0000000000027f28	add	x0, sp, #0x20
0000000000027f2c	bl	0x55cf0 ; symbol stub for: _objc_retainBlock
0000000000027f30	mov	x1, x0
0000000000027f34	b	0x27f3c
0000000000027f38	mov	x1, #0x0
0000000000027f3c	mov	x0, x19
0000000000027f40	blr	x21
0000000000027f44	ldr	x8, [x0]
0000000000027f48	ldr	x9, [sp, #0x10]
0000000000027f4c	str	x9, [x8, #0x110]
0000000000027f50	mov	x0, x1
0000000000027f54	ldp	x29, x30, [sp, #0x70]
0000000000027f58	ldp	x20, x19, [sp, #0x60]
0000000000027f5c	ldp	x22, x21, [sp, #0x50]
0000000000027f60	add	sp, sp, #0x80
0000000000027f64	ret
0000000000027f68	mov	x1, x0
0000000000027f6c	mov	x0, x19
0000000000027f70	blr	x21
0000000000027f74	ldr	x8, [x0]
0000000000027f78	add	x9, sp, #0x8
0000000000027f7c	str	x9, [x8, #0x110]
0000000000027f80	mov	x0, x1
0000000000027f84	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000027f88	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000027f8c	b	0x27f8c
_invokeBlock0:
0000000000027f90	sub	sp, sp, #0x60
0000000000027f94	stp	x24, x23, [sp, #0x20]
0000000000027f98	stp	x22, x21, [sp, #0x30]
0000000000027f9c	stp	x20, x19, [sp, #0x40]
0000000000027fa0	stp	x29, x30, [sp, #0x50]
0000000000027fa4	add	x29, sp, #0x50
0000000000027fa8	mov	x21, x0
0000000000027fac	movi.16b	v0, #0x0
0000000000027fb0	stp	q0, q0, [sp]
0000000000027fb4	mov	x8, sp
0000000000027fb8	add	x20, x8, #0x18
0000000000027fbc	bl	_Kotlin_initRuntimeIfNeeded
0000000000027fc0	adrp	x19, 83 ; 0x7a000
0000000000027fc4	add	x19, x19, #0x4e0
0000000000027fc8	ldr	x22, [x19]
0000000000027fcc	mov	x0, x19
0000000000027fd0	blr	x22
0000000000027fd4	ldr	x8, [x0]
0000000000027fd8	add	x0, x8, #0x138
0000000000027fdc	ldaxr	w8, [x0]
0000000000027fe0	stlxr	w9, wzr, [x0]
0000000000027fe4	cbnz	w9, 0x27fdc
0000000000027fe8	adr	x23, #0x6c521
0000000000027fec	nop
0000000000027ff0	cmp	w8, #0x1
0000000000027ff4	b.ne	0x28004
0000000000027ff8	ldarb	w8, [x23]
0000000000027ffc	tbz	w8, #0x0, 0x28004
0000000000028000	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028004	mov	x0, x19
0000000000028008	blr	x22
000000000002800c	ldr	x8, [x0]
0000000000028010	ldr	x9, [x8, #0x110]
0000000000028014	mov	x10, sp
0000000000028018	str	x10, [x8, #0x110]
000000000002801c	mov	x8, #0x400000000
0000000000028020	stp	x9, x8, [sp, #0x8]
0000000000028024	ldarb	w8, [x23]
0000000000028028	tbz	w8, #0x0, 0x28030
000000000002802c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028030	bl	_Kotlin_initRuntimeIfNeeded
0000000000028034	ldr	x0, [x21, #0x20]
0000000000028038	ldr	x8, [x0]
000000000002803c	and	x8, x8, #0xfffffffffffffffc
0000000000028040	ldr	x8, [x8]
0000000000028044	ldr	w9, [x8, #0x3c]
0000000000028048	ldr	x8, [x8, #0x40]
000000000002804c	tbnz	w9, #0x1f, 0x2805c
0000000000028050	mov	w10, #0x59
0000000000028054	and	x9, x9, x10
0000000000028058	b	0x280e0
000000000002805c	neg	w10, w9
0000000000028060	mvn	w9, w9
0000000000028064	cmp	w10, #0x9
0000000000028068	b.ge	0x280a0
000000000002806c	cmp	w10, #0x2
0000000000028070	b.lt	0x280d4
0000000000028074	mov	x10, #0x0
0000000000028078	mov	x11, x8
000000000002807c	ldr	w12, [x11]
0000000000028080	cmp	w12, #0x58
0000000000028084	b.gt	0x280dc
0000000000028088	add	x10, x10, #0x1
000000000002808c	add	x11, x11, #0x10
0000000000028090	cmp	x9, x10
0000000000028094	b.ne	0x2807c
0000000000028098	mov	x10, x9
000000000002809c	b	0x280dc
00000000000280a0	mov	w10, #0x0
00000000000280a4	add	w11, w9, w10
00000000000280a8	cmp	w11, #0x0
00000000000280ac	cinc	w11, w11, lt
00000000000280b0	asr	w11, w11, #1
00000000000280b4	sbfiz	x12, x11, #4, #32
00000000000280b8	ldr	w12, [x8, x12]
00000000000280bc	cmp	w12, #0x59
00000000000280c0	csinc	w10, w10, w11, ge
00000000000280c4	csel	w9, w9, w11, lt
00000000000280c8	cmp	w10, w9
00000000000280cc	b.lt	0x280a4
00000000000280d0	b	0x280dc
00000000000280d4	mov	w10, #0x0
00000000000280d8	b	0x280dc
00000000000280dc	sxtw	x9, w10
00000000000280e0	add	x8, x8, x9, lsl #4
00000000000280e4	ldr	x8, [x8, #0x8]
00000000000280e8	ldr	x8, [x8]
00000000000280ec	mov	x1, x20
00000000000280f0	blr	x8
00000000000280f4	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000280f8	mov	x1, x0
00000000000280fc	mov	x0, x19
0000000000028100	blr	x22
0000000000028104	ldr	x8, [x0]
0000000000028108	ldr	x9, [sp, #0x8]
000000000002810c	str	x9, [x8, #0x110]
0000000000028110	add	x8, x8, #0x138
0000000000028114	mov	w9, #0x1
0000000000028118	ldaxr	wzr, [x8]
000000000002811c	stlxr	w10, w9, [x8]
0000000000028120	cbnz	w10, 0x28118
0000000000028124	mov	x0, x1
0000000000028128	ldp	x29, x30, [sp, #0x50]
000000000002812c	ldp	x20, x19, [sp, #0x40]
0000000000028130	ldp	x22, x21, [sp, #0x30]
0000000000028134	ldp	x24, x23, [sp, #0x20]
0000000000028138	add	sp, sp, #0x60
000000000002813c	b	0x55c54 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000028140	mov	x1, x0
0000000000028144	mov	x0, x19
0000000000028148	blr	x22
000000000002814c	ldr	x8, [x0]
0000000000028150	mov	x9, sp
0000000000028154	str	x9, [x8, #0x110]
0000000000028158	mov	x0, x1
000000000002815c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000028160	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000028164	b	0x28164
_convertFunction2:
0000000000028168	sub	sp, sp, #0x80
000000000002816c	stp	x22, x21, [sp, #0x50]
0000000000028170	stp	x20, x19, [sp, #0x60]
0000000000028174	stp	x29, x30, [sp, #0x70]
0000000000028178	add	x29, sp, #0x70
000000000002817c	mov	x20, x0
0000000000028180	str	xzr, [sp, #0x8]
0000000000028184	adrp	x19, 82 ; 0x7a000
0000000000028188	add	x19, x19, #0x4e0
000000000002818c	ldr	x21, [x19]
0000000000028190	mov	x0, x19
0000000000028194	blr	x21
0000000000028198	ldr	x8, [x0]
000000000002819c	ldr	x9, [x8, #0x110]
00000000000281a0	add	x10, sp, #0x8
00000000000281a4	str	x10, [x8, #0x110]
00000000000281a8	mov	x8, #0x300000000
00000000000281ac	stp	x9, x8, [sp, #0x10]
00000000000281b0	adr	x8, #0x6c359
00000000000281b4	nop
00000000000281b8	ldarb	w8, [x8]
00000000000281bc	tbz	w8, #0x0, 0x281c4
00000000000281c0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000281c4	cbz	x20, 0x28200
00000000000281c8	nop
00000000000281cc	ldr	x8, #0x37e4c ; literal pool symbol address: __NSConcreteStackBlock
00000000000281d0	mov	w9, #-0x3e000000
00000000000281d4	stp	x8, x9, [sp, #0x20]
00000000000281d8	adr	x8, #0x80
00000000000281dc	nop
00000000000281e0	adr	x9, #0x4fc70
00000000000281e4	nop
00000000000281e8	stp	x8, x9, [sp, #0x30]
00000000000281ec	stp	x20, xzr, [sp, #0x40]
00000000000281f0	add	x0, sp, #0x20
00000000000281f4	bl	0x55cf0 ; symbol stub for: _objc_retainBlock
00000000000281f8	mov	x1, x0
00000000000281fc	b	0x28204
0000000000028200	mov	x1, #0x0
0000000000028204	mov	x0, x19
0000000000028208	blr	x21
000000000002820c	ldr	x8, [x0]
0000000000028210	ldr	x9, [sp, #0x10]
0000000000028214	str	x9, [x8, #0x110]
0000000000028218	mov	x0, x1
000000000002821c	ldp	x29, x30, [sp, #0x70]
0000000000028220	ldp	x20, x19, [sp, #0x60]
0000000000028224	ldp	x22, x21, [sp, #0x50]
0000000000028228	add	sp, sp, #0x80
000000000002822c	ret
0000000000028230	mov	x1, x0
0000000000028234	mov	x0, x19
0000000000028238	blr	x21
000000000002823c	ldr	x8, [x0]
0000000000028240	add	x9, sp, #0x8
0000000000028244	str	x9, [x8, #0x110]
0000000000028248	mov	x0, x1
000000000002824c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000028250	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000028254	b	0x28254
_invokeBlock2:
0000000000028258	sub	sp, sp, #0x90
000000000002825c	stp	x28, x27, [sp, #0x30]
0000000000028260	stp	x26, x25, [sp, #0x40]
0000000000028264	stp	x24, x23, [sp, #0x50]
0000000000028268	stp	x22, x21, [sp, #0x60]
000000000002826c	stp	x20, x19, [sp, #0x70]
0000000000028270	stp	x29, x30, [sp, #0x80]
0000000000028274	add	x29, sp, #0x80
0000000000028278	mov	x23, x2
000000000002827c	mov	x22, x1
0000000000028280	mov	x21, x0
0000000000028284	movi.16b	v0, #0x0
0000000000028288	stp	q0, q0, [sp, #0x10]
000000000002828c	str	q0, [sp]
0000000000028290	mov	x8, sp
0000000000028294	add	x24, x8, #0x20
0000000000028298	add	x25, x8, #0x18
000000000002829c	add	x20, x8, #0x28
00000000000282a0	bl	_Kotlin_initRuntimeIfNeeded
00000000000282a4	adrp	x19, 82 ; 0x7a000
00000000000282a8	add	x19, x19, #0x4e0
00000000000282ac	ldr	x26, [x19]
00000000000282b0	mov	x0, x19
00000000000282b4	blr	x26
00000000000282b8	ldr	x8, [x0]
00000000000282bc	add	x0, x8, #0x138
00000000000282c0	ldaxr	w8, [x0]
00000000000282c4	stlxr	w9, wzr, [x0]
00000000000282c8	cbnz	w9, 0x282c0
00000000000282cc	adr	x27, #0x6c23d
00000000000282d0	nop
00000000000282d4	cmp	w8, #0x1
00000000000282d8	b.ne	0x282e8
00000000000282dc	ldarb	w8, [x27]
00000000000282e0	tbz	w8, #0x0, 0x282e8
00000000000282e4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000282e8	mov	x0, x19
00000000000282ec	blr	x26
00000000000282f0	ldr	x8, [x0]
00000000000282f4	ldr	x9, [x8, #0x110]
00000000000282f8	mov	x10, sp
00000000000282fc	str	x10, [x8, #0x110]
0000000000028300	mov	x8, #0x600000000
0000000000028304	stp	x9, x8, [sp, #0x8]
0000000000028308	ldarb	w8, [x27]
000000000002830c	tbz	w8, #0x0, 0x28314
0000000000028310	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028314	bl	_Kotlin_initRuntimeIfNeeded
0000000000028318	ldr	x21, [x21, #0x20]
000000000002831c	adrp	x27, 108 ; 0x94000
0000000000028320	cbz	x22, 0x28374
0000000000028324	ldr	x1, [x27, #0x758]
0000000000028328	mov	x0, x22
000000000002832c	mov	x2, x25
0000000000028330	bl	0x55ca8 ; Objc message: -[x0 writeData:]
0000000000028334	mov	x22, x0
0000000000028338	cbz	x23, 0x2837c
000000000002833c	ldr	x1, [x27, #0x758]
0000000000028340	mov	x0, x23
0000000000028344	mov	x2, x24
0000000000028348	bl	0x55ca8 ; Objc message: -[x0 writeData:]
000000000002834c	mov	x2, x0
0000000000028350	ldr	x8, [x21]
0000000000028354	and	x8, x8, #0xfffffffffffffffc
0000000000028358	ldr	x8, [x8]
000000000002835c	ldr	w9, [x8, #0x3c]
0000000000028360	ldr	x8, [x8, #0x40]
0000000000028364	tbnz	w9, #0x1f, 0x2839c
0000000000028368	mov	w10, #0x61
000000000002836c	and	x9, x9, x10
0000000000028370	b	0x28420
0000000000028374	str	xzr, [sp, #0x18]
0000000000028378	cbnz	x23, 0x2833c
000000000002837c	mov	x2, #0x0
0000000000028380	str	xzr, [sp, #0x20]
0000000000028384	ldr	x8, [x21]
0000000000028388	and	x8, x8, #0xfffffffffffffffc
000000000002838c	ldr	x8, [x8]
0000000000028390	ldr	w9, [x8, #0x3c]
0000000000028394	ldr	x8, [x8, #0x40]
0000000000028398	tbz	w9, #0x1f, 0x28368
000000000002839c	neg	w10, w9
00000000000283a0	mvn	w9, w9
00000000000283a4	cmp	w10, #0x9
00000000000283a8	b.ge	0x283e0
00000000000283ac	cmp	w10, #0x2
00000000000283b0	b.lt	0x28414
00000000000283b4	mov	x10, #0x0
00000000000283b8	mov	x11, x8
00000000000283bc	ldr	w12, [x11]
00000000000283c0	cmp	w12, #0x60
00000000000283c4	b.gt	0x2841c
00000000000283c8	add	x10, x10, #0x1
00000000000283cc	add	x11, x11, #0x10
00000000000283d0	cmp	x9, x10
00000000000283d4	b.ne	0x283bc
00000000000283d8	mov	x10, x9
00000000000283dc	b	0x2841c
00000000000283e0	mov	w10, #0x0
00000000000283e4	add	w11, w9, w10
00000000000283e8	cmp	w11, #0x0
00000000000283ec	cinc	w11, w11, lt
00000000000283f0	asr	w11, w11, #1
00000000000283f4	sbfiz	x12, x11, #4, #32
00000000000283f8	ldr	w12, [x8, x12]
00000000000283fc	cmp	w12, #0x61
0000000000028400	csinc	w10, w10, w11, ge
0000000000028404	csel	w9, w9, w11, lt
0000000000028408	cmp	w10, w9
000000000002840c	b.lt	0x283e4
0000000000028410	b	0x2841c
0000000000028414	mov	w10, #0x0
0000000000028418	b	0x2841c
000000000002841c	sxtw	x9, w10
0000000000028420	add	x8, x8, x9, lsl #4
0000000000028424	ldr	x8, [x8, #0x8]
0000000000028428	ldr	x8, [x8]
000000000002842c	mov	x0, x21
0000000000028430	mov	x1, x22
0000000000028434	mov	x3, x20
0000000000028438	blr	x8
000000000002843c	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000028440	mov	x1, x0
0000000000028444	mov	x0, x19
0000000000028448	blr	x26
000000000002844c	ldr	x8, [x0]
0000000000028450	ldr	x9, [sp, #0x8]
0000000000028454	str	x9, [x8, #0x110]
0000000000028458	add	x8, x8, #0x138
000000000002845c	mov	w9, #0x1
0000000000028460	ldaxr	wzr, [x8]
0000000000028464	stlxr	w10, w9, [x8]
0000000000028468	cbnz	w10, 0x28460
000000000002846c	mov	x0, x1
0000000000028470	ldp	x29, x30, [sp, #0x80]
0000000000028474	ldp	x20, x19, [sp, #0x70]
0000000000028478	ldp	x22, x21, [sp, #0x60]
000000000002847c	ldp	x24, x23, [sp, #0x50]
0000000000028480	ldp	x26, x25, [sp, #0x40]
0000000000028484	ldp	x28, x27, [sp, #0x30]
0000000000028488	add	sp, sp, #0x90
000000000002848c	b	0x55c54 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000028490	mov	x1, x0
0000000000028494	mov	x0, x19
0000000000028498	blr	x26
000000000002849c	ldr	x8, [x0]
00000000000284a0	mov	x9, sp
00000000000284a4	str	x9, [x8, #0x110]
00000000000284a8	mov	x0, x1
00000000000284ac	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
00000000000284b0	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
00000000000284b4	b	0x284b4
_convertFunction3:
00000000000284b8	sub	sp, sp, #0x80
00000000000284bc	stp	x22, x21, [sp, #0x50]
00000000000284c0	stp	x20, x19, [sp, #0x60]
00000000000284c4	stp	x29, x30, [sp, #0x70]
00000000000284c8	add	x29, sp, #0x70
00000000000284cc	mov	x20, x0
00000000000284d0	str	xzr, [sp, #0x8]
00000000000284d4	adrp	x19, 82 ; 0x7a000
00000000000284d8	add	x19, x19, #0x4e0
00000000000284dc	ldr	x21, [x19]
00000000000284e0	mov	x0, x19
00000000000284e4	blr	x21
00000000000284e8	ldr	x8, [x0]
00000000000284ec	ldr	x9, [x8, #0x110]
00000000000284f0	add	x10, sp, #0x8
00000000000284f4	str	x10, [x8, #0x110]
00000000000284f8	mov	x8, #0x300000000
00000000000284fc	stp	x9, x8, [sp, #0x10]
0000000000028500	adr	x8, #0x6c009
0000000000028504	nop
0000000000028508	ldarb	w8, [x8]
000000000002850c	tbz	w8, #0x0, 0x28514
0000000000028510	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028514	cbz	x20, 0x28550
0000000000028518	nop
000000000002851c	ldr	x8, #0x37afc ; literal pool symbol address: __NSConcreteStackBlock
0000000000028520	mov	w9, #-0x3e000000
0000000000028524	stp	x8, x9, [sp, #0x20]
0000000000028528	adr	x8, #0x80
000000000002852c	nop
0000000000028530	adr	x9, #0x4f950
0000000000028534	nop
0000000000028538	stp	x8, x9, [sp, #0x30]
000000000002853c	stp	x20, xzr, [sp, #0x40]
0000000000028540	add	x0, sp, #0x20
0000000000028544	bl	0x55cf0 ; symbol stub for: _objc_retainBlock
0000000000028548	mov	x1, x0
000000000002854c	b	0x28554
0000000000028550	mov	x1, #0x0
0000000000028554	mov	x0, x19
0000000000028558	blr	x21
000000000002855c	ldr	x8, [x0]
0000000000028560	ldr	x9, [sp, #0x10]
0000000000028564	str	x9, [x8, #0x110]
0000000000028568	mov	x0, x1
000000000002856c	ldp	x29, x30, [sp, #0x70]
0000000000028570	ldp	x20, x19, [sp, #0x60]
0000000000028574	ldp	x22, x21, [sp, #0x50]
0000000000028578	add	sp, sp, #0x80
000000000002857c	ret
0000000000028580	mov	x1, x0
0000000000028584	mov	x0, x19
0000000000028588	blr	x21
000000000002858c	ldr	x8, [x0]
0000000000028590	add	x9, sp, #0x8
0000000000028594	str	x9, [x8, #0x110]
0000000000028598	mov	x0, x1
000000000002859c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
00000000000285a0	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
00000000000285a4	b	0x285a4
_invokeBlock3:
00000000000285a8	sub	sp, sp, #0xb0
00000000000285ac	stp	x28, x27, [sp, #0x50]
00000000000285b0	stp	x26, x25, [sp, #0x60]
00000000000285b4	stp	x24, x23, [sp, #0x70]
00000000000285b8	stp	x22, x21, [sp, #0x80]
00000000000285bc	stp	x20, x19, [sp, #0x90]
00000000000285c0	stp	x29, x30, [sp, #0xa0]
00000000000285c4	add	x29, sp, #0xa0
00000000000285c8	mov	x24, x3
00000000000285cc	mov	x23, x2
00000000000285d0	mov	x22, x1
00000000000285d4	mov	x21, x0
00000000000285d8	str	xzr, [sp, #0x40]
00000000000285dc	movi.16b	v0, #0x0
00000000000285e0	stp	q0, q0, [sp, #0x20]
00000000000285e4	add	x8, sp, #0x10
00000000000285e8	str	q0, [sp, #0x10]
00000000000285ec	add	x26, x8, #0x20
00000000000285f0	add	x9, x8, #0x30
00000000000285f4	str	x9, [sp, #0x8]
00000000000285f8	add	x27, x8, #0x18
00000000000285fc	add	x25, x8, #0x28
0000000000028600	bl	_Kotlin_initRuntimeIfNeeded
0000000000028604	adrp	x19, 82 ; 0x7a000
0000000000028608	add	x19, x19, #0x4e0
000000000002860c	ldr	x28, [x19]
0000000000028610	mov	x0, x19
0000000000028614	blr	x28
0000000000028618	ldr	x8, [x0]
000000000002861c	add	x0, x8, #0x138
0000000000028620	ldaxr	w8, [x0]
0000000000028624	stlxr	w9, wzr, [x0]
0000000000028628	cbnz	w9, 0x28620
000000000002862c	adr	x20, #0x6bedd
0000000000028630	nop
0000000000028634	cmp	w8, #0x1
0000000000028638	b.ne	0x28648
000000000002863c	ldarb	w8, [x20]
0000000000028640	tbz	w8, #0x0, 0x28648
0000000000028644	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028648	mov	x0, x19
000000000002864c	blr	x28
0000000000028650	ldr	x8, [x0]
0000000000028654	ldr	x9, [x8, #0x110]
0000000000028658	add	x10, sp, #0x10
000000000002865c	str	x10, [x8, #0x110]
0000000000028660	mov	x8, #0x700000000
0000000000028664	stp	x9, x8, [sp, #0x18]
0000000000028668	ldarb	w8, [x20]
000000000002866c	tbz	w8, #0x0, 0x28674
0000000000028670	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028674	bl	_Kotlin_initRuntimeIfNeeded
0000000000028678	ldr	x21, [x21, #0x20]
000000000002867c	adrp	x20, 108 ; 0x94000
0000000000028680	cbz	x22, 0x286ec
0000000000028684	ldr	x1, [x20, #0x758]
0000000000028688	mov	x0, x22
000000000002868c	mov	x2, x27
0000000000028690	bl	0x55ca8 ; Objc message: -[x0 writeData:]
0000000000028694	mov	x22, x0
0000000000028698	cbz	x23, 0x286f4
000000000002869c	ldr	x1, [x20, #0x758]
00000000000286a0	mov	x0, x23
00000000000286a4	mov	x2, x26
00000000000286a8	bl	0x55ca8 ; Objc message: -[x0 writeData:]
00000000000286ac	mov	x23, x0
00000000000286b0	cbz	x24, 0x286fc
00000000000286b4	ldr	x1, [x20, #0x758]
00000000000286b8	mov	x0, x24
00000000000286bc	mov	x2, x25
00000000000286c0	bl	0x55ca8 ; Objc message: -[x0 writeData:]
00000000000286c4	mov	x3, x0
00000000000286c8	ldr	x8, [x21]
00000000000286cc	and	x8, x8, #0xfffffffffffffffc
00000000000286d0	ldr	x8, [x8]
00000000000286d4	ldr	w9, [x8, #0x3c]
00000000000286d8	ldr	x8, [x8, #0x40]
00000000000286dc	tbnz	w9, #0x1f, 0x2871c
00000000000286e0	mov	w10, #0x158
00000000000286e4	and	x9, x9, x10
00000000000286e8	b	0x287a0
00000000000286ec	str	xzr, [sp, #0x28]
00000000000286f0	cbnz	x23, 0x2869c
00000000000286f4	str	xzr, [sp, #0x30]
00000000000286f8	cbnz	x24, 0x286b4
00000000000286fc	mov	x3, #0x0
0000000000028700	str	xzr, [sp, #0x38]
0000000000028704	ldr	x8, [x21]
0000000000028708	and	x8, x8, #0xfffffffffffffffc
000000000002870c	ldr	x8, [x8]
0000000000028710	ldr	w9, [x8, #0x3c]
0000000000028714	ldr	x8, [x8, #0x40]
0000000000028718	tbz	w9, #0x1f, 0x286e0
000000000002871c	neg	w10, w9
0000000000028720	mvn	w9, w9
0000000000028724	cmp	w10, #0x9
0000000000028728	b.ge	0x28760
000000000002872c	cmp	w10, #0x2
0000000000028730	b.lt	0x28794
0000000000028734	mov	x10, #0x0
0000000000028738	mov	x11, x8
000000000002873c	ldr	w12, [x11]
0000000000028740	cmp	w12, #0x157
0000000000028744	b.gt	0x2879c
0000000000028748	add	x10, x10, #0x1
000000000002874c	add	x11, x11, #0x10
0000000000028750	cmp	x9, x10
0000000000028754	b.ne	0x2873c
0000000000028758	mov	x10, x9
000000000002875c	b	0x2879c
0000000000028760	mov	w10, #0x0
0000000000028764	add	w11, w9, w10
0000000000028768	cmp	w11, #0x0
000000000002876c	cinc	w11, w11, lt
0000000000028770	asr	w11, w11, #1
0000000000028774	sbfiz	x12, x11, #4, #32
0000000000028778	ldr	w12, [x8, x12]
000000000002877c	cmp	w12, #0x158
0000000000028780	csinc	w10, w10, w11, ge
0000000000028784	csel	w9, w9, w11, lt
0000000000028788	cmp	w10, w9
000000000002878c	b.lt	0x28764
0000000000028790	b	0x2879c
0000000000028794	mov	w10, #0x0
0000000000028798	b	0x2879c
000000000002879c	sxtw	x9, w10
00000000000287a0	add	x8, x8, x9, lsl #4
00000000000287a4	ldr	x8, [x8, #0x8]
00000000000287a8	ldr	x8, [x8]
00000000000287ac	mov	x0, x21
00000000000287b0	mov	x1, x22
00000000000287b4	mov	x2, x23
00000000000287b8	ldr	x4, [sp, #0x8]
00000000000287bc	blr	x8
00000000000287c0	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000287c4	mov	x1, x0
00000000000287c8	mov	x0, x19
00000000000287cc	blr	x28
00000000000287d0	ldr	x8, [x0]
00000000000287d4	ldr	x9, [sp, #0x18]
00000000000287d8	str	x9, [x8, #0x110]
00000000000287dc	add	x8, x8, #0x138
00000000000287e0	mov	w9, #0x1
00000000000287e4	ldaxr	wzr, [x8]
00000000000287e8	stlxr	w10, w9, [x8]
00000000000287ec	cbnz	w10, 0x287e4
00000000000287f0	mov	x0, x1
00000000000287f4	ldp	x29, x30, [sp, #0xa0]
00000000000287f8	ldp	x20, x19, [sp, #0x90]
00000000000287fc	ldp	x22, x21, [sp, #0x80]
0000000000028800	ldp	x24, x23, [sp, #0x70]
0000000000028804	ldp	x26, x25, [sp, #0x60]
0000000000028808	ldp	x28, x27, [sp, #0x50]
000000000002880c	add	sp, sp, #0xb0
0000000000028810	b	0x55c54 ; symbol stub for: _objc_autoreleaseReturnValue
0000000000028814	mov	x1, x0
0000000000028818	mov	x0, x19
000000000002881c	blr	x28
0000000000028820	ldr	x8, [x0]
0000000000028824	add	x9, sp, #0x10
0000000000028828	str	x9, [x8, #0x110]
000000000002882c	mov	x0, x1
0000000000028830	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000028834	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000028838	b	0x28838
_invokeFunction0:
000000000002883c	sub	sp, sp, #0x60
0000000000028840	stp	x24, x23, [sp, #0x20]
0000000000028844	stp	x22, x21, [sp, #0x30]
0000000000028848	stp	x20, x19, [sp, #0x40]
000000000002884c	stp	x29, x30, [sp, #0x50]
0000000000028850	add	x29, sp, #0x50
0000000000028854	mov	x19, x1
0000000000028858	mov	x22, x0
000000000002885c	movi.16b	v0, #0x0
0000000000028860	stp	q0, q0, [sp]
0000000000028864	mov	x21, sp
0000000000028868	adrp	x20, 82 ; 0x7a000
000000000002886c	add	x20, x20, #0x4e0
0000000000028870	ldr	x23, [x20]
0000000000028874	mov	x0, x20
0000000000028878	blr	x23
000000000002887c	ldr	x8, [x0]
0000000000028880	ldr	x9, [x8, #0x110]
0000000000028884	str	x21, [x8, #0x110]
0000000000028888	mov	x8, #0x400000000
000000000002888c	stp	x9, x8, [sp, #0x8]
0000000000028890	adr	x24, #0x6bc79
0000000000028894	nop
0000000000028898	ldarb	w8, [x24]
000000000002889c	tbz	w8, #0x0, 0x288a4
00000000000288a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000288a4	mov	x8, #0x0
00000000000288a8	add	x21, x21, #0x18
00000000000288ac	ldar	x9, [x22]
00000000000288b0	ands	x9, x9, #0xfffffffffffffffc
00000000000288b4	b.eq	0x288cc
00000000000288b8	ldr	x10, [x9]
00000000000288bc	cmp	x10, x9
00000000000288c0	b.eq	0x288cc
00000000000288c4	add	x8, x9, #0x10
00000000000288c8	ldar	x8, [x8]
00000000000288cc	ldr	x1, [x8, #0x10]
00000000000288d0	mov	x0, x20
00000000000288d4	blr	x23
00000000000288d8	ldr	x9, [x0]
00000000000288dc	add	x9, x9, #0x138
00000000000288e0	mov	w10, #0x1
00000000000288e4	ldaxr	wzr, [x9]
00000000000288e8	stlxr	w11, w10, [x9]
00000000000288ec	cbnz	w11, 0x288e4
00000000000288f0	mov	x0, x8
00000000000288f4	bl	0x28a08
00000000000288f8	mov	x22, x0
00000000000288fc	mov	x0, x20
0000000000028900	blr	x23
0000000000028904	ldr	x8, [x0]
0000000000028908	add	x0, x8, #0x138
000000000002890c	ldaxr	w8, [x0]
0000000000028910	stlxr	w9, wzr, [x0]
0000000000028914	cbnz	w9, 0x2890c
0000000000028918	cmp	w8, #0x1
000000000002891c	b.ne	0x2892c
0000000000028920	ldarb	w8, [x24]
0000000000028924	tbz	w8, #0x0, 0x2892c
0000000000028928	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002892c	cbz	x22, 0x2894c
0000000000028930	nop
0000000000028934	ldr	x1, #0x6be24
0000000000028938	mov	x0, x22
000000000002893c	mov	x2, x21
0000000000028940	bl	0x55ca8 ; Objc message: -[x0 writeData:]
0000000000028944	mov	x21, x0
0000000000028948	b	0x28954
000000000002894c	mov	x21, #0x0
0000000000028950	str	xzr, [sp, #0x18]
0000000000028954	mov	x0, x20
0000000000028958	blr	x23
000000000002895c	ldr	x8, [x0]
0000000000028960	add	x8, x8, #0x138
0000000000028964	mov	w9, #0x1
0000000000028968	ldaxr	wzr, [x8]
000000000002896c	stlxr	w10, w9, [x8]
0000000000028970	cbnz	w10, 0x28968
0000000000028974	mov	x0, x22
0000000000028978	bl	0x55ccc ; symbol stub for: _objc_release
000000000002897c	mov	x0, x20
0000000000028980	blr	x23
0000000000028984	ldr	x8, [x0]
0000000000028988	add	x0, x8, #0x138
000000000002898c	ldaxr	w8, [x0]
0000000000028990	stlxr	w9, wzr, [x0]
0000000000028994	cbnz	w9, 0x2898c
0000000000028998	cmp	w8, #0x1
000000000002899c	b.ne	0x289ac
00000000000289a0	ldarb	w8, [x24]
00000000000289a4	tbz	w8, #0x0, 0x289ac
00000000000289a8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000289ac	str	x21, [x19]
00000000000289b0	mov	x0, x20
00000000000289b4	blr	x23
00000000000289b8	ldr	x8, [x0]
00000000000289bc	ldr	x9, [sp, #0x8]
00000000000289c0	str	x9, [x8, #0x110]
00000000000289c4	mov	x0, x21
00000000000289c8	ldp	x29, x30, [sp, #0x50]
00000000000289cc	ldp	x20, x19, [sp, #0x40]
00000000000289d0	ldp	x22, x21, [sp, #0x30]
00000000000289d4	ldp	x24, x23, [sp, #0x20]
00000000000289d8	add	sp, sp, #0x60
00000000000289dc	ret
00000000000289e0	mov	x1, x0
00000000000289e4	mov	x0, x20
00000000000289e8	blr	x23
00000000000289ec	ldr	x8, [x0]
00000000000289f0	mov	x9, sp
00000000000289f4	str	x9, [x8, #0x110]
00000000000289f8	mov	x0, x1
00000000000289fc	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000028a00	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000028a04	b	0x28a04
0000000000028a08	stp	x29, x30, [sp, #-0x10]!
0000000000028a0c	mov	x29, sp
0000000000028a10	blr	x1
0000000000028a14	mov	x29, x29
0000000000028a18	ldp	x29, x30, [sp], #0x10
0000000000028a1c	b	0x55ce4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock0:
0000000000028a20	sub	sp, sp, #0x50
0000000000028a24	stp	x22, x21, [sp, #0x20]
0000000000028a28	stp	x20, x19, [sp, #0x30]
0000000000028a2c	stp	x29, x30, [sp, #0x40]
0000000000028a30	add	x29, sp, #0x40
0000000000028a34	mov	x19, x1
0000000000028a38	mov	x21, x0
0000000000028a3c	movi.16b	v0, #0x0
0000000000028a40	stp	q0, q0, [sp]
0000000000028a44	adrp	x20, 82 ; 0x7a000
0000000000028a48	add	x20, x20, #0x4e0
0000000000028a4c	ldr	x22, [x20]
0000000000028a50	mov	x0, x20
0000000000028a54	blr	x22
0000000000028a58	ldr	x8, [x0]
0000000000028a5c	ldr	x9, [x8, #0x110]
0000000000028a60	mov	x10, sp
0000000000028a64	str	x10, [x8, #0x110]
0000000000028a68	mov	x8, #0x400000000
0000000000028a6c	stp	x9, x8, [sp, #0x8]
0000000000028a70	adr	x8, #0x6ba99
0000000000028a74	nop
0000000000028a78	ldarb	w8, [x8]
0000000000028a7c	tbz	w8, #0x0, 0x28a84
0000000000028a80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028a84	cbz	x21, 0x28ab0
0000000000028a88	mov	x0, x21
0000000000028a8c	bl	0x55cf0 ; symbol stub for: _objc_retainBlock
0000000000028a90	mov	x1, x0
0000000000028a94	mov	x8, sp
0000000000028a98	add	x2, x8, #0x18
0000000000028a9c	adr	x0, #0x47374
0000000000028aa0	nop
0000000000028aa4	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
0000000000028aa8	mov	x8, x0
0000000000028aac	b	0x28ab4
0000000000028ab0	mov	x8, #0x0
0000000000028ab4	str	x8, [x19]
0000000000028ab8	mov	x0, x20
0000000000028abc	blr	x22
0000000000028ac0	ldr	x9, [x0]
0000000000028ac4	ldr	x10, [sp, #0x8]
0000000000028ac8	str	x10, [x9, #0x110]
0000000000028acc	mov	x0, x8
0000000000028ad0	ldp	x29, x30, [sp, #0x40]
0000000000028ad4	ldp	x20, x19, [sp, #0x30]
0000000000028ad8	ldp	x22, x21, [sp, #0x20]
0000000000028adc	add	sp, sp, #0x50
0000000000028ae0	ret
0000000000028ae4	mov	x1, x0
0000000000028ae8	mov	x0, x20
0000000000028aec	blr	x22
0000000000028af0	ldr	x8, [x0]
0000000000028af4	mov	x9, sp
0000000000028af8	str	x9, [x8, #0x110]
0000000000028afc	mov	x0, x1
0000000000028b00	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000028b04	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000028b08	b	0x28b08
_invokeFunction1:
0000000000028b0c	sub	sp, sp, #0x80
0000000000028b10	stp	x28, x27, [sp, #0x20]
0000000000028b14	stp	x26, x25, [sp, #0x30]
0000000000028b18	stp	x24, x23, [sp, #0x40]
0000000000028b1c	stp	x22, x21, [sp, #0x50]
0000000000028b20	stp	x20, x19, [sp, #0x60]
0000000000028b24	stp	x29, x30, [sp, #0x70]
0000000000028b28	add	x29, sp, #0x70
0000000000028b2c	mov	x19, x2
0000000000028b30	mov	x22, x1
0000000000028b34	mov	x23, x0
0000000000028b38	movi.16b	v0, #0x0
0000000000028b3c	stp	q0, q0, [sp]
0000000000028b40	mov	x27, sp
0000000000028b44	adrp	x20, 82 ; 0x7a000
0000000000028b48	add	x20, x20, #0x4e0
0000000000028b4c	ldr	x25, [x20]
0000000000028b50	mov	x0, x20
0000000000028b54	blr	x25
0000000000028b58	ldr	x8, [x0]
0000000000028b5c	ldr	x9, [x8, #0x110]
0000000000028b60	str	x27, [x8, #0x110]
0000000000028b64	mov	x8, #0x400000000
0000000000028b68	stp	x9, x8, [sp, #0x8]
0000000000028b6c	adr	x26, #0x6b99d
0000000000028b70	nop
0000000000028b74	ldarb	w8, [x26]
0000000000028b78	tbz	w8, #0x0, 0x28b80
0000000000028b7c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028b80	mov	x21, #0x0
0000000000028b84	ldar	x8, [x23]
0000000000028b88	ands	x8, x8, #0xfffffffffffffffc
0000000000028b8c	b.eq	0x28ba4
0000000000028b90	ldr	x9, [x8]
0000000000028b94	cmp	x9, x8
0000000000028b98	b.eq	0x28ba4
0000000000028b9c	add	x8, x8, #0x10
0000000000028ba0	ldar	x21, [x8]
0000000000028ba4	ldr	x24, [x21, #0x10]
0000000000028ba8	mov	x0, x22
0000000000028bac	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000028bb0	mov	x23, x0
0000000000028bb4	add	x22, x27, #0x18
0000000000028bb8	mov	x0, x20
0000000000028bbc	blr	x25
0000000000028bc0	ldr	x8, [x0]
0000000000028bc4	add	x8, x8, #0x138
0000000000028bc8	mov	w9, #0x1
0000000000028bcc	ldaxr	wzr, [x8]
0000000000028bd0	stlxr	w10, w9, [x8]
0000000000028bd4	cbnz	w10, 0x28bcc
0000000000028bd8	mov	x0, x21
0000000000028bdc	mov	x1, x23
0000000000028be0	mov	x2, x24
0000000000028be4	bl	0x28d08
0000000000028be8	mov	x21, x0
0000000000028bec	mov	x0, x23
0000000000028bf0	bl	0x55ccc ; symbol stub for: _objc_release
0000000000028bf4	mov	x0, x20
0000000000028bf8	blr	x25
0000000000028bfc	ldr	x8, [x0]
0000000000028c00	add	x0, x8, #0x138
0000000000028c04	ldaxr	w8, [x0]
0000000000028c08	stlxr	w9, wzr, [x0]
0000000000028c0c	cbnz	w9, 0x28c04
0000000000028c10	cmp	w8, #0x1
0000000000028c14	b.ne	0x28c24
0000000000028c18	ldarb	w8, [x26]
0000000000028c1c	tbz	w8, #0x0, 0x28c24
0000000000028c20	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028c24	cbz	x21, 0x28c44
0000000000028c28	nop
0000000000028c2c	ldr	x1, #0x6bb2c
0000000000028c30	mov	x0, x21
0000000000028c34	mov	x2, x22
0000000000028c38	bl	0x55ca8 ; Objc message: -[x0 writeData:]
0000000000028c3c	mov	x22, x0
0000000000028c40	b	0x28c4c
0000000000028c44	mov	x22, #0x0
0000000000028c48	str	xzr, [sp, #0x18]
0000000000028c4c	mov	x0, x20
0000000000028c50	blr	x25
0000000000028c54	ldr	x8, [x0]
0000000000028c58	add	x8, x8, #0x138
0000000000028c5c	mov	w9, #0x1
0000000000028c60	ldaxr	wzr, [x8]
0000000000028c64	stlxr	w10, w9, [x8]
0000000000028c68	cbnz	w10, 0x28c60
0000000000028c6c	mov	x0, x21
0000000000028c70	bl	0x55ccc ; symbol stub for: _objc_release
0000000000028c74	mov	x0, x20
0000000000028c78	blr	x25
0000000000028c7c	ldr	x8, [x0]
0000000000028c80	add	x0, x8, #0x138
0000000000028c84	ldaxr	w8, [x0]
0000000000028c88	stlxr	w9, wzr, [x0]
0000000000028c8c	cbnz	w9, 0x28c84
0000000000028c90	cmp	w8, #0x1
0000000000028c94	b.ne	0x28ca4
0000000000028c98	ldarb	w8, [x26]
0000000000028c9c	tbz	w8, #0x0, 0x28ca4
0000000000028ca0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028ca4	str	x22, [x19]
0000000000028ca8	mov	x0, x20
0000000000028cac	blr	x25
0000000000028cb0	ldr	x8, [x0]
0000000000028cb4	ldr	x9, [sp, #0x8]
0000000000028cb8	str	x9, [x8, #0x110]
0000000000028cbc	mov	x0, x22
0000000000028cc0	ldp	x29, x30, [sp, #0x70]
0000000000028cc4	ldp	x20, x19, [sp, #0x60]
0000000000028cc8	ldp	x22, x21, [sp, #0x50]
0000000000028ccc	ldp	x24, x23, [sp, #0x40]
0000000000028cd0	ldp	x26, x25, [sp, #0x30]
0000000000028cd4	ldp	x28, x27, [sp, #0x20]
0000000000028cd8	add	sp, sp, #0x80
0000000000028cdc	ret
0000000000028ce0	mov	x1, x0
0000000000028ce4	mov	x0, x20
0000000000028ce8	blr	x25
0000000000028cec	ldr	x8, [x0]
0000000000028cf0	mov	x9, sp
0000000000028cf4	str	x9, [x8, #0x110]
0000000000028cf8	mov	x0, x1
0000000000028cfc	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000028d00	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000028d04	b	0x28d04
0000000000028d08	stp	x29, x30, [sp, #-0x10]!
0000000000028d0c	mov	x29, sp
0000000000028d10	blr	x2
0000000000028d14	mov	x29, x29
0000000000028d18	ldp	x29, x30, [sp], #0x10
0000000000028d1c	b	0x55ce4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock1:
0000000000028d20	sub	sp, sp, #0x50
0000000000028d24	stp	x22, x21, [sp, #0x20]
0000000000028d28	stp	x20, x19, [sp, #0x30]
0000000000028d2c	stp	x29, x30, [sp, #0x40]
0000000000028d30	add	x29, sp, #0x40
0000000000028d34	mov	x19, x1
0000000000028d38	mov	x21, x0
0000000000028d3c	movi.16b	v0, #0x0
0000000000028d40	stp	q0, q0, [sp]
0000000000028d44	adrp	x20, 82 ; 0x7a000
0000000000028d48	add	x20, x20, #0x4e0
0000000000028d4c	ldr	x22, [x20]
0000000000028d50	mov	x0, x20
0000000000028d54	blr	x22
0000000000028d58	ldr	x8, [x0]
0000000000028d5c	ldr	x9, [x8, #0x110]
0000000000028d60	mov	x10, sp
0000000000028d64	str	x10, [x8, #0x110]
0000000000028d68	mov	x8, #0x400000000
0000000000028d6c	stp	x9, x8, [sp, #0x8]
0000000000028d70	adr	x8, #0x6b799
0000000000028d74	nop
0000000000028d78	ldarb	w8, [x8]
0000000000028d7c	tbz	w8, #0x0, 0x28d84
0000000000028d80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028d84	cbz	x21, 0x28db0
0000000000028d88	mov	x0, x21
0000000000028d8c	bl	0x55cf0 ; symbol stub for: _objc_retainBlock
0000000000028d90	mov	x1, x0
0000000000028d94	mov	x8, sp
0000000000028d98	add	x2, x8, #0x18
0000000000028d9c	adr	x0, #0x47134
0000000000028da0	nop
0000000000028da4	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
0000000000028da8	mov	x8, x0
0000000000028dac	b	0x28db4
0000000000028db0	mov	x8, #0x0
0000000000028db4	str	x8, [x19]
0000000000028db8	mov	x0, x20
0000000000028dbc	blr	x22
0000000000028dc0	ldr	x9, [x0]
0000000000028dc4	ldr	x10, [sp, #0x8]
0000000000028dc8	str	x10, [x9, #0x110]
0000000000028dcc	mov	x0, x8
0000000000028dd0	ldp	x29, x30, [sp, #0x40]
0000000000028dd4	ldp	x20, x19, [sp, #0x30]
0000000000028dd8	ldp	x22, x21, [sp, #0x20]
0000000000028ddc	add	sp, sp, #0x50
0000000000028de0	ret
0000000000028de4	mov	x1, x0
0000000000028de8	mov	x0, x20
0000000000028dec	blr	x22
0000000000028df0	ldr	x8, [x0]
0000000000028df4	mov	x9, sp
0000000000028df8	str	x9, [x8, #0x110]
0000000000028dfc	mov	x0, x1
0000000000028e00	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000028e04	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000028e08	b	0x28e08
_invokeFunction2:
0000000000028e0c	sub	sp, sp, #0x80
0000000000028e10	stp	x28, x27, [sp, #0x20]
0000000000028e14	stp	x26, x25, [sp, #0x30]
0000000000028e18	stp	x24, x23, [sp, #0x40]
0000000000028e1c	stp	x22, x21, [sp, #0x50]
0000000000028e20	stp	x20, x19, [sp, #0x60]
0000000000028e24	stp	x29, x30, [sp, #0x70]
0000000000028e28	add	x29, sp, #0x70
0000000000028e2c	mov	x19, x3
0000000000028e30	mov	x22, x2
0000000000028e34	mov	x23, x1
0000000000028e38	mov	x24, x0
0000000000028e3c	movi.16b	v0, #0x0
0000000000028e40	stp	q0, q0, [sp]
0000000000028e44	mov	x28, sp
0000000000028e48	adrp	x20, 82 ; 0x7a000
0000000000028e4c	add	x20, x20, #0x4e0
0000000000028e50	ldr	x26, [x20]
0000000000028e54	mov	x0, x20
0000000000028e58	blr	x26
0000000000028e5c	ldr	x8, [x0]
0000000000028e60	ldr	x9, [x8, #0x110]
0000000000028e64	str	x28, [x8, #0x110]
0000000000028e68	mov	x8, #0x400000000
0000000000028e6c	stp	x9, x8, [sp, #0x8]
0000000000028e70	adr	x27, #0x6b699
0000000000028e74	nop
0000000000028e78	ldarb	w8, [x27]
0000000000028e7c	tbz	w8, #0x0, 0x28e84
0000000000028e80	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000028e84	mov	x21, #0x0
0000000000028e88	ldar	x8, [x24]
0000000000028e8c	ands	x8, x8, #0xfffffffffffffffc
0000000000028e90	b.eq	0x28ea8
0000000000028e94	ldr	x9, [x8]
0000000000028e98	cmp	x9, x8
0000000000028e9c	b.eq	0x28ea8
0000000000028ea0	add	x8, x8, #0x10
0000000000028ea4	ldar	x21, [x8]
0000000000028ea8	ldr	x24, [x21, #0x10]
0000000000028eac	mov	x0, x23
0000000000028eb0	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000028eb4	mov	x23, x0
0000000000028eb8	mov	x0, x22
0000000000028ebc	bl	_Kotlin_ObjCExport_refToRetainedObjC
0000000000028ec0	mov	x25, x0
0000000000028ec4	add	x22, x28, #0x18
0000000000028ec8	mov	x0, x20
0000000000028ecc	blr	x26
0000000000028ed0	ldr	x8, [x0]
0000000000028ed4	add	x8, x8, #0x138
0000000000028ed8	mov	w9, #0x1
0000000000028edc	ldaxr	wzr, [x8]
0000000000028ee0	stlxr	w10, w9, [x8]
0000000000028ee4	cbnz	w10, 0x28edc
0000000000028ee8	mov	x0, x21
0000000000028eec	mov	x1, x23
0000000000028ef0	mov	x2, x25
0000000000028ef4	mov	x3, x24
0000000000028ef8	bl	0x29024
0000000000028efc	mov	x21, x0
0000000000028f00	mov	x0, x23
0000000000028f04	bl	0x55ccc ; symbol stub for: _objc_release
0000000000028f08	mov	x0, x25
0000000000028f0c	bl	0x55ccc ; symbol stub for: _objc_release
0000000000028f10	mov	x0, x20
0000000000028f14	blr	x26
0000000000028f18	ldr	x8, [x0]
0000000000028f1c	add	x0, x8, #0x138
0000000000028f20	ldaxr	w8, [x0]
0000000000028f24	stlxr	w9, wzr, [x0]
0000000000028f28	cbnz	w9, 0x28f20
0000000000028f2c	cmp	w8, #0x1
0000000000028f30	b.ne	0x28f40
0000000000028f34	ldarb	w8, [x27]
0000000000028f38	tbz	w8, #0x0, 0x28f40
0000000000028f3c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028f40	cbz	x21, 0x28f60
0000000000028f44	nop
0000000000028f48	ldr	x1, #0x6b810
0000000000028f4c	mov	x0, x21
0000000000028f50	mov	x2, x22
0000000000028f54	bl	0x55ca8 ; Objc message: -[x0 writeData:]
0000000000028f58	mov	x22, x0
0000000000028f5c	b	0x28f68
0000000000028f60	mov	x22, #0x0
0000000000028f64	str	xzr, [sp, #0x18]
0000000000028f68	mov	x0, x20
0000000000028f6c	blr	x26
0000000000028f70	ldr	x8, [x0]
0000000000028f74	add	x8, x8, #0x138
0000000000028f78	mov	w9, #0x1
0000000000028f7c	ldaxr	wzr, [x8]
0000000000028f80	stlxr	w10, w9, [x8]
0000000000028f84	cbnz	w10, 0x28f7c
0000000000028f88	mov	x0, x21
0000000000028f8c	bl	0x55ccc ; symbol stub for: _objc_release
0000000000028f90	mov	x0, x20
0000000000028f94	blr	x26
0000000000028f98	ldr	x8, [x0]
0000000000028f9c	add	x0, x8, #0x138
0000000000028fa0	ldaxr	w8, [x0]
0000000000028fa4	stlxr	w9, wzr, [x0]
0000000000028fa8	cbnz	w9, 0x28fa0
0000000000028fac	cmp	w8, #0x1
0000000000028fb0	b.ne	0x28fc0
0000000000028fb4	ldarb	w8, [x27]
0000000000028fb8	tbz	w8, #0x0, 0x28fc0
0000000000028fbc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000028fc0	str	x22, [x19]
0000000000028fc4	mov	x0, x20
0000000000028fc8	blr	x26
0000000000028fcc	ldr	x8, [x0]
0000000000028fd0	ldr	x9, [sp, #0x8]
0000000000028fd4	str	x9, [x8, #0x110]
0000000000028fd8	mov	x0, x22
0000000000028fdc	ldp	x29, x30, [sp, #0x70]
0000000000028fe0	ldp	x20, x19, [sp, #0x60]
0000000000028fe4	ldp	x22, x21, [sp, #0x50]
0000000000028fe8	ldp	x24, x23, [sp, #0x40]
0000000000028fec	ldp	x26, x25, [sp, #0x30]
0000000000028ff0	ldp	x28, x27, [sp, #0x20]
0000000000028ff4	add	sp, sp, #0x80
0000000000028ff8	ret
0000000000028ffc	mov	x1, x0
0000000000029000	mov	x0, x20
0000000000029004	blr	x26
0000000000029008	ldr	x8, [x0]
000000000002900c	mov	x9, sp
0000000000029010	str	x9, [x8, #0x110]
0000000000029014	mov	x0, x1
0000000000029018	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002901c	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000029020	b	0x29020
0000000000029024	stp	x29, x30, [sp, #-0x10]!
0000000000029028	mov	x29, sp
000000000002902c	blr	x3
0000000000029030	mov	x29, x29
0000000000029034	ldp	x29, x30, [sp], #0x10
0000000000029038	b	0x55ce4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock2:
000000000002903c	sub	sp, sp, #0x50
0000000000029040	stp	x22, x21, [sp, #0x20]
0000000000029044	stp	x20, x19, [sp, #0x30]
0000000000029048	stp	x29, x30, [sp, #0x40]
000000000002904c	add	x29, sp, #0x40
0000000000029050	mov	x19, x1
0000000000029054	mov	x21, x0
0000000000029058	movi.16b	v0, #0x0
000000000002905c	stp	q0, q0, [sp]
0000000000029060	adrp	x20, 81 ; 0x7a000
0000000000029064	add	x20, x20, #0x4e0
0000000000029068	ldr	x22, [x20]
000000000002906c	mov	x0, x20
0000000000029070	blr	x22
0000000000029074	ldr	x8, [x0]
0000000000029078	ldr	x9, [x8, #0x110]
000000000002907c	mov	x10, sp
0000000000029080	str	x10, [x8, #0x110]
0000000000029084	mov	x8, #0x400000000
0000000000029088	stp	x9, x8, [sp, #0x8]
000000000002908c	adr	x8, #0x6b47d
0000000000029090	nop
0000000000029094	ldarb	w8, [x8]
0000000000029098	tbz	w8, #0x0, 0x290a0
000000000002909c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000290a0	cbz	x21, 0x290cc
00000000000290a4	mov	x0, x21
00000000000290a8	bl	0x55cf0 ; symbol stub for: _objc_retainBlock
00000000000290ac	mov	x1, x0
00000000000290b0	mov	x8, sp
00000000000290b4	add	x2, x8, #0x18
00000000000290b8	adr	x0, #0x46f38
00000000000290bc	nop
00000000000290c0	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
00000000000290c4	mov	x8, x0
00000000000290c8	b	0x290d0
00000000000290cc	mov	x8, #0x0
00000000000290d0	str	x8, [x19]
00000000000290d4	mov	x0, x20
00000000000290d8	blr	x22
00000000000290dc	ldr	x9, [x0]
00000000000290e0	ldr	x10, [sp, #0x8]
00000000000290e4	str	x10, [x9, #0x110]
00000000000290e8	mov	x0, x8
00000000000290ec	ldp	x29, x30, [sp, #0x40]
00000000000290f0	ldp	x20, x19, [sp, #0x30]
00000000000290f4	ldp	x22, x21, [sp, #0x20]
00000000000290f8	add	sp, sp, #0x50
00000000000290fc	ret
0000000000029100	mov	x1, x0
0000000000029104	mov	x0, x20
0000000000029108	blr	x22
000000000002910c	ldr	x8, [x0]
0000000000029110	mov	x9, sp
0000000000029114	str	x9, [x8, #0x110]
0000000000029118	mov	x0, x1
000000000002911c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000029120	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000029124	b	0x29124
_invokeFunction3:
0000000000029128	sub	sp, sp, #0x80
000000000002912c	stp	x28, x27, [sp, #0x20]
0000000000029130	stp	x26, x25, [sp, #0x30]
0000000000029134	stp	x24, x23, [sp, #0x40]
0000000000029138	stp	x22, x21, [sp, #0x50]
000000000002913c	stp	x20, x19, [sp, #0x60]
0000000000029140	stp	x29, x30, [sp, #0x70]
0000000000029144	add	x29, sp, #0x70
0000000000029148	mov	x19, x4
000000000002914c	mov	x22, x3
0000000000029150	mov	x23, x2
0000000000029154	mov	x24, x1
0000000000029158	mov	x25, x0
000000000002915c	movi.16b	v0, #0x0
0000000000029160	stp	q0, q0, [sp]
0000000000029164	mov	x28, sp
0000000000029168	adrp	x20, 81 ; 0x7a000
000000000002916c	add	x20, x20, #0x4e0
0000000000029170	ldr	x27, [x20]
0000000000029174	mov	x0, x20
0000000000029178	blr	x27
000000000002917c	ldr	x8, [x0]
0000000000029180	ldr	x9, [x8, #0x110]
0000000000029184	str	x28, [x8, #0x110]
0000000000029188	mov	x8, #0x400000000
000000000002918c	stp	x9, x8, [sp, #0x8]
0000000000029190	adr	x8, #0x6b379
0000000000029194	nop
0000000000029198	ldarb	w8, [x8]
000000000002919c	tbz	w8, #0x0, 0x291a4
00000000000291a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000291a4	mov	x21, #0x0
00000000000291a8	ldar	x8, [x25]
00000000000291ac	ands	x8, x8, #0xfffffffffffffffc
00000000000291b0	b.eq	0x291c8
00000000000291b4	ldr	x9, [x8]
00000000000291b8	cmp	x9, x8
00000000000291bc	b.eq	0x291c8
00000000000291c0	add	x8, x8, #0x10
00000000000291c4	ldar	x21, [x8]
00000000000291c8	ldr	x25, [x21, #0x10]
00000000000291cc	mov	x0, x24
00000000000291d0	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000291d4	mov	x24, x0
00000000000291d8	mov	x0, x23
00000000000291dc	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000291e0	mov	x23, x0
00000000000291e4	mov	x0, x22
00000000000291e8	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000291ec	mov	x26, x0
00000000000291f0	add	x22, x28, #0x18
00000000000291f4	mov	x0, x20
00000000000291f8	blr	x27
00000000000291fc	ldr	x8, [x0]
0000000000029200	add	x8, x8, #0x138
0000000000029204	mov	w9, #0x1
0000000000029208	ldaxr	wzr, [x8]
000000000002920c	stlxr	w10, w9, [x8]
0000000000029210	cbnz	w10, 0x29208
0000000000029214	mov	x0, x21
0000000000029218	mov	x1, x24
000000000002921c	mov	x2, x23
0000000000029220	mov	x3, x26
0000000000029224	mov	x4, x25
0000000000029228	bl	0x2936c
000000000002922c	mov	x21, x0
0000000000029230	mov	x0, x24
0000000000029234	bl	0x55ccc ; symbol stub for: _objc_release
0000000000029238	mov	x0, x23
000000000002923c	bl	0x55ccc ; symbol stub for: _objc_release
0000000000029240	mov	x0, x26
0000000000029244	bl	0x55ccc ; symbol stub for: _objc_release
0000000000029248	mov	x0, x20
000000000002924c	blr	x27
0000000000029250	ldr	x8, [x0]
0000000000029254	add	x0, x8, #0x138
0000000000029258	ldaxr	w8, [x0]
000000000002925c	stlxr	w9, wzr, [x0]
0000000000029260	cbnz	w9, 0x29258
0000000000029264	cmp	w8, #0x1
0000000000029268	b.ne	0x29280
000000000002926c	adr	x8, #0x6b29d
0000000000029270	nop
0000000000029274	ldarb	w8, [x8]
0000000000029278	tbz	w8, #0x0, 0x29280
000000000002927c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029280	cbz	x21, 0x292a0
0000000000029284	nop
0000000000029288	ldr	x1, #0x6b4d0
000000000002928c	mov	x0, x21
0000000000029290	mov	x2, x22
0000000000029294	bl	0x55ca8 ; Objc message: -[x0 writeData:]
0000000000029298	mov	x22, x0
000000000002929c	b	0x292a8
00000000000292a0	mov	x22, #0x0
00000000000292a4	str	xzr, [sp, #0x18]
00000000000292a8	mov	x0, x20
00000000000292ac	blr	x27
00000000000292b0	ldr	x8, [x0]
00000000000292b4	add	x8, x8, #0x138
00000000000292b8	mov	w9, #0x1
00000000000292bc	ldaxr	wzr, [x8]
00000000000292c0	stlxr	w10, w9, [x8]
00000000000292c4	cbnz	w10, 0x292bc
00000000000292c8	mov	x0, x21
00000000000292cc	bl	0x55ccc ; symbol stub for: _objc_release
00000000000292d0	mov	x0, x20
00000000000292d4	blr	x27
00000000000292d8	ldr	x8, [x0]
00000000000292dc	add	x0, x8, #0x138
00000000000292e0	ldaxr	w8, [x0]
00000000000292e4	stlxr	w9, wzr, [x0]
00000000000292e8	cbnz	w9, 0x292e0
00000000000292ec	cmp	w8, #0x1
00000000000292f0	b.ne	0x29308
00000000000292f4	adr	x8, #0x6b215
00000000000292f8	nop
00000000000292fc	ldarb	w8, [x8]
0000000000029300	tbz	w8, #0x0, 0x29308
0000000000029304	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029308	str	x22, [x19]
000000000002930c	mov	x0, x20
0000000000029310	blr	x27
0000000000029314	ldr	x8, [x0]
0000000000029318	ldr	x9, [sp, #0x8]
000000000002931c	str	x9, [x8, #0x110]
0000000000029320	mov	x0, x22
0000000000029324	ldp	x29, x30, [sp, #0x70]
0000000000029328	ldp	x20, x19, [sp, #0x60]
000000000002932c	ldp	x22, x21, [sp, #0x50]
0000000000029330	ldp	x24, x23, [sp, #0x40]
0000000000029334	ldp	x26, x25, [sp, #0x30]
0000000000029338	ldp	x28, x27, [sp, #0x20]
000000000002933c	add	sp, sp, #0x80
0000000000029340	ret
0000000000029344	mov	x1, x0
0000000000029348	mov	x0, x20
000000000002934c	blr	x27
0000000000029350	ldr	x8, [x0]
0000000000029354	mov	x9, sp
0000000000029358	str	x9, [x8, #0x110]
000000000002935c	mov	x0, x1
0000000000029360	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000029364	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000029368	b	0x29368
000000000002936c	stp	x29, x30, [sp, #-0x10]!
0000000000029370	mov	x29, sp
0000000000029374	blr	x4
0000000000029378	mov	x29, x29
000000000002937c	ldp	x29, x30, [sp], #0x10
0000000000029380	b	0x55ce4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_convertBlock3:
0000000000029384	sub	sp, sp, #0x50
0000000000029388	stp	x22, x21, [sp, #0x20]
000000000002938c	stp	x20, x19, [sp, #0x30]
0000000000029390	stp	x29, x30, [sp, #0x40]
0000000000029394	add	x29, sp, #0x40
0000000000029398	mov	x19, x1
000000000002939c	mov	x21, x0
00000000000293a0	movi.16b	v0, #0x0
00000000000293a4	stp	q0, q0, [sp]
00000000000293a8	adrp	x20, 81 ; 0x7a000
00000000000293ac	add	x20, x20, #0x4e0
00000000000293b0	ldr	x22, [x20]
00000000000293b4	mov	x0, x20
00000000000293b8	blr	x22
00000000000293bc	ldr	x8, [x0]
00000000000293c0	ldr	x9, [x8, #0x110]
00000000000293c4	mov	x10, sp
00000000000293c8	str	x10, [x8, #0x110]
00000000000293cc	mov	x8, #0x400000000
00000000000293d0	stp	x9, x8, [sp, #0x8]
00000000000293d4	adr	x8, #0x6b135
00000000000293d8	nop
00000000000293dc	ldarb	w8, [x8]
00000000000293e0	tbz	w8, #0x0, 0x293e8
00000000000293e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000293e8	cbz	x21, 0x29414
00000000000293ec	mov	x0, x21
00000000000293f0	bl	0x55cf0 ; symbol stub for: _objc_retainBlock
00000000000293f4	mov	x1, x0
00000000000293f8	mov	x8, sp
00000000000293fc	add	x2, x8, #0x18
0000000000029400	adr	x0, #0x46cb0
0000000000029404	nop
0000000000029408	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
000000000002940c	mov	x8, x0
0000000000029410	b	0x29418
0000000000029414	mov	x8, #0x0
0000000000029418	str	x8, [x19]
000000000002941c	mov	x0, x20
0000000000029420	blr	x22
0000000000029424	ldr	x9, [x0]
0000000000029428	ldr	x10, [sp, #0x8]
000000000002942c	str	x10, [x9, #0x110]
0000000000029430	mov	x0, x8
0000000000029434	ldp	x29, x30, [sp, #0x40]
0000000000029438	ldp	x20, x19, [sp, #0x30]
000000000002943c	ldp	x22, x21, [sp, #0x20]
0000000000029440	add	sp, sp, #0x50
0000000000029444	ret
0000000000029448	mov	x1, x0
000000000002944c	mov	x0, x20
0000000000029450	blr	x22
0000000000029454	ldr	x8, [x0]
0000000000029458	mov	x9, sp
000000000002945c	str	x9, [x8, #0x110]
0000000000029460	mov	x0, x1
0000000000029464	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000029468	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002946c	b	0x2946c
_kotlin2objc_Kotlin_Any_equals:
0000000000029470	sub	sp, sp, #0x70
0000000000029474	stp	x26, x25, [sp, #0x20]
0000000000029478	stp	x24, x23, [sp, #0x30]
000000000002947c	stp	x22, x21, [sp, #0x40]
0000000000029480	stp	x20, x19, [sp, #0x50]
0000000000029484	stp	x29, x30, [sp, #0x60]
0000000000029488	add	x29, sp, #0x60
000000000002948c	mov	x20, x1
0000000000029490	mov	x21, x0
0000000000029494	str	xzr, [sp, #0x8]
0000000000029498	adrp	x19, 81 ; 0x7a000
000000000002949c	add	x19, x19, #0x4e0
00000000000294a0	ldr	x24, [x19]
00000000000294a4	mov	x0, x19
00000000000294a8	blr	x24
00000000000294ac	ldr	x8, [x0]
00000000000294b0	ldr	x9, [x8, #0x110]
00000000000294b4	add	x10, sp, #0x8
00000000000294b8	str	x10, [x8, #0x110]
00000000000294bc	mov	x8, #0x300000000
00000000000294c0	stp	x9, x8, [sp, #0x10]
00000000000294c4	adr	x25, #0x6b045
00000000000294c8	nop
00000000000294cc	ldarb	w8, [x25]
00000000000294d0	tbz	w8, #0x0, 0x294d8
00000000000294d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000294d8	mov	x0, x21
00000000000294dc	bl	_Kotlin_ObjCExport_refToLocalObjC
00000000000294e0	mov	x21, x0
00000000000294e4	nop
00000000000294e8	ldr	x23, #0x4d888 ; Objc selector ref: isEqual:
00000000000294ec	mov	x0, x20
00000000000294f0	bl	_Kotlin_ObjCExport_refToRetainedObjC
00000000000294f4	mov	x22, x0
00000000000294f8	mov	x0, x19
00000000000294fc	blr	x24
0000000000029500	ldr	x8, [x0]
0000000000029504	add	x8, x8, #0x138
0000000000029508	mov	w9, #0x1
000000000002950c	ldaxr	wzr, [x8]
0000000000029510	stlxr	w10, w9, [x8]
0000000000029514	cbnz	w10, 0x2950c
0000000000029518	mov	x0, x21
000000000002951c	mov	x1, x23
0000000000029520	mov	x2, x22
0000000000029524	bl	0x55ca8 ; Objc message: -[x0 isEqual:]
0000000000029528	mov	x20, x0
000000000002952c	mov	x0, x22
0000000000029530	bl	0x55ccc ; symbol stub for: _objc_release
0000000000029534	mov	x0, x19
0000000000029538	blr	x24
000000000002953c	ldr	x8, [x0]
0000000000029540	add	x0, x8, #0x138
0000000000029544	ldaxr	w8, [x0]
0000000000029548	stlxr	w9, wzr, [x0]
000000000002954c	cbnz	w9, 0x29544
0000000000029550	cmp	w8, #0x1
0000000000029554	b.ne	0x29564
0000000000029558	ldarb	w8, [x25]
000000000002955c	tbz	w8, #0x0, 0x29564
0000000000029560	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029564	cmp	w20, #0x0
0000000000029568	cset	w8, ne
000000000002956c	mov	x0, x19
0000000000029570	blr	x24
0000000000029574	ldr	x9, [x0]
0000000000029578	ldr	x10, [sp, #0x10]
000000000002957c	str	x10, [x9, #0x110]
0000000000029580	mov	x0, x8
0000000000029584	ldp	x29, x30, [sp, #0x60]
0000000000029588	ldp	x20, x19, [sp, #0x50]
000000000002958c	ldp	x22, x21, [sp, #0x40]
0000000000029590	ldp	x24, x23, [sp, #0x30]
0000000000029594	ldp	x26, x25, [sp, #0x20]
0000000000029598	add	sp, sp, #0x70
000000000002959c	ret
00000000000295a0	mov	x1, x0
00000000000295a4	mov	x0, x19
00000000000295a8	blr	x24
00000000000295ac	ldr	x8, [x0]
00000000000295b0	add	x9, sp, #0x8
00000000000295b4	str	x9, [x8, #0x110]
00000000000295b8	mov	x0, x1
00000000000295bc	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
00000000000295c0	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
00000000000295c4	b	0x295c4
_kotlin2objc_kfun:kotlin.Any#hashCode(){}kotlin.Int:
00000000000295c8	sub	sp, sp, #0x50
00000000000295cc	stp	x22, x21, [sp, #0x20]
00000000000295d0	stp	x20, x19, [sp, #0x30]
00000000000295d4	stp	x29, x30, [sp, #0x40]
00000000000295d8	add	x29, sp, #0x40
00000000000295dc	mov	x20, x0
00000000000295e0	str	xzr, [sp, #0x8]
00000000000295e4	adrp	x19, 81 ; 0x7a000
00000000000295e8	add	x19, x19, #0x4e0
00000000000295ec	ldr	x21, [x19]
00000000000295f0	mov	x0, x19
00000000000295f4	blr	x21
00000000000295f8	ldr	x8, [x0]
00000000000295fc	ldr	x9, [x8, #0x110]
0000000000029600	add	x10, sp, #0x8
0000000000029604	str	x10, [x8, #0x110]
0000000000029608	mov	x8, #0x300000000
000000000002960c	stp	x9, x8, [sp, #0x10]
0000000000029610	adr	x22, #0x6aef9
0000000000029614	nop
0000000000029618	ldarb	w8, [x22]
000000000002961c	tbz	w8, #0x0, 0x29624
0000000000029620	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029624	mov	x0, x20
0000000000029628	bl	_Kotlin_ObjCExport_refToLocalObjC
000000000002962c	mov	x2, x0
0000000000029630	nop
0000000000029634	ldr	x1, #0x4d684 ; Objc selector ref: hash
0000000000029638	mov	x0, x19
000000000002963c	blr	x21
0000000000029640	ldr	x8, [x0]
0000000000029644	add	x8, x8, #0x138
0000000000029648	mov	w9, #0x1
000000000002964c	ldaxr	wzr, [x8]
0000000000029650	stlxr	w10, w9, [x8]
0000000000029654	cbnz	w10, 0x2964c
0000000000029658	mov	x0, x2
000000000002965c	bl	0x55ca8 ; Objc message: -[x0 hash]
0000000000029660	mov	x20, x0
0000000000029664	mov	x0, x19
0000000000029668	blr	x21
000000000002966c	ldr	x8, [x0]
0000000000029670	add	x0, x8, #0x138
0000000000029674	ldaxr	w8, [x0]
0000000000029678	stlxr	w9, wzr, [x0]
000000000002967c	cbnz	w9, 0x29674
0000000000029680	cmp	w8, #0x1
0000000000029684	b.ne	0x29694
0000000000029688	ldarb	w8, [x22]
000000000002968c	tbz	w8, #0x0, 0x29694
0000000000029690	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029694	lsr	x8, x20, #32
0000000000029698	eor	w8, w20, w8
000000000002969c	mov	x0, x19
00000000000296a0	blr	x21
00000000000296a4	ldr	x9, [x0]
00000000000296a8	ldr	x10, [sp, #0x10]
00000000000296ac	str	x10, [x9, #0x110]
00000000000296b0	mov	x0, x8
00000000000296b4	ldp	x29, x30, [sp, #0x40]
00000000000296b8	ldp	x20, x19, [sp, #0x30]
00000000000296bc	ldp	x22, x21, [sp, #0x20]
00000000000296c0	add	sp, sp, #0x50
00000000000296c4	ret
00000000000296c8	mov	x1, x0
00000000000296cc	mov	x0, x19
00000000000296d0	blr	x21
00000000000296d4	ldr	x8, [x0]
00000000000296d8	add	x9, sp, #0x8
00000000000296dc	str	x9, [x8, #0x110]
00000000000296e0	mov	x0, x1
00000000000296e4	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
00000000000296e8	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
00000000000296ec	b	0x296ec
_kotlin2objc_kfun:kotlin.Any#toString(){}kotlin.String:
00000000000296f0	sub	sp, sp, #0x60
00000000000296f4	stp	x24, x23, [sp, #0x20]
00000000000296f8	stp	x22, x21, [sp, #0x30]
00000000000296fc	stp	x20, x19, [sp, #0x40]
0000000000029700	stp	x29, x30, [sp, #0x50]
0000000000029704	add	x29, sp, #0x50
0000000000029708	mov	x19, x1
000000000002970c	mov	x21, x0
0000000000029710	movi.16b	v0, #0x0
0000000000029714	stp	q0, q0, [sp]
0000000000029718	mov	x22, sp
000000000002971c	adrp	x20, 81 ; 0x7a000
0000000000029720	add	x20, x20, #0x4e0
0000000000029724	ldr	x23, [x20]
0000000000029728	mov	x0, x20
000000000002972c	blr	x23
0000000000029730	ldr	x8, [x0]
0000000000029734	ldr	x9, [x8, #0x110]
0000000000029738	str	x22, [x8, #0x110]
000000000002973c	mov	x8, #0x400000000
0000000000029740	stp	x9, x8, [sp, #0x8]
0000000000029744	adr	x24, #0x6adc5
0000000000029748	nop
000000000002974c	ldarb	w8, [x24]
0000000000029750	tbz	w8, #0x0, 0x29758
0000000000029754	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029758	mov	x0, x21
000000000002975c	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000029760	mov	x2, x0
0000000000029764	add	x22, x22, #0x18
0000000000029768	nop
000000000002976c	ldr	x1, #0x4d514 ; Objc selector ref: description
0000000000029770	mov	x0, x20
0000000000029774	blr	x23
0000000000029778	ldr	x8, [x0]
000000000002977c	add	x8, x8, #0x138
0000000000029780	mov	w9, #0x1
0000000000029784	ldaxr	wzr, [x8]
0000000000029788	stlxr	w10, w9, [x8]
000000000002978c	cbnz	w10, 0x29784
0000000000029790	mov	x0, x2
0000000000029794	bl	0x298a8
0000000000029798	mov	x21, x0
000000000002979c	mov	x0, x20
00000000000297a0	blr	x23
00000000000297a4	ldr	x8, [x0]
00000000000297a8	add	x0, x8, #0x138
00000000000297ac	ldaxr	w8, [x0]
00000000000297b0	stlxr	w9, wzr, [x0]
00000000000297b4	cbnz	w9, 0x297ac
00000000000297b8	cmp	w8, #0x1
00000000000297bc	b.ne	0x297cc
00000000000297c0	ldarb	w8, [x24]
00000000000297c4	tbz	w8, #0x0, 0x297cc
00000000000297c8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000297cc	cbz	x21, 0x297ec
00000000000297d0	nop
00000000000297d4	ldr	x1, #0x6af84
00000000000297d8	mov	x0, x21
00000000000297dc	mov	x2, x22
00000000000297e0	bl	0x55ca8 ; Objc message: -[x0 description]
00000000000297e4	mov	x22, x0
00000000000297e8	b	0x297f4
00000000000297ec	mov	x22, #0x0
00000000000297f0	str	xzr, [sp, #0x18]
00000000000297f4	mov	x0, x20
00000000000297f8	blr	x23
00000000000297fc	ldr	x8, [x0]
0000000000029800	add	x8, x8, #0x138
0000000000029804	mov	w9, #0x1
0000000000029808	ldaxr	wzr, [x8]
000000000002980c	stlxr	w10, w9, [x8]
0000000000029810	cbnz	w10, 0x29808
0000000000029814	mov	x0, x21
0000000000029818	bl	0x55ccc ; symbol stub for: _objc_release
000000000002981c	mov	x0, x20
0000000000029820	blr	x23
0000000000029824	ldr	x8, [x0]
0000000000029828	add	x0, x8, #0x138
000000000002982c	ldaxr	w8, [x0]
0000000000029830	stlxr	w9, wzr, [x0]
0000000000029834	cbnz	w9, 0x2982c
0000000000029838	cmp	w8, #0x1
000000000002983c	b.ne	0x2984c
0000000000029840	ldarb	w8, [x24]
0000000000029844	tbz	w8, #0x0, 0x2984c
0000000000029848	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002984c	str	x22, [x19]
0000000000029850	mov	x0, x20
0000000000029854	blr	x23
0000000000029858	ldr	x8, [x0]
000000000002985c	ldr	x9, [sp, #0x8]
0000000000029860	str	x9, [x8, #0x110]
0000000000029864	mov	x0, x22
0000000000029868	ldp	x29, x30, [sp, #0x50]
000000000002986c	ldp	x20, x19, [sp, #0x40]
0000000000029870	ldp	x22, x21, [sp, #0x30]
0000000000029874	ldp	x24, x23, [sp, #0x20]
0000000000029878	add	sp, sp, #0x60
000000000002987c	ret
0000000000029880	mov	x1, x0
0000000000029884	mov	x0, x20
0000000000029888	blr	x23
000000000002988c	ldr	x8, [x0]
0000000000029890	mov	x9, sp
0000000000029894	str	x9, [x8, #0x110]
0000000000029898	mov	x0, x1
000000000002989c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
00000000000298a0	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
00000000000298a4	b	0x298a4
00000000000298a8	stp	x29, x30, [sp, #-0x10]!
00000000000298ac	mov	x29, sp
00000000000298b0	bl	0x55ca8 ; Objc message: -[x0 description]
00000000000298b4	mov	x29, x29
00000000000298b8	ldp	x29, x30, [sp], #0x10
00000000000298bc	b	0x55ce4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_kotlin2objc_kfun:kotlin.collections.Iterator#next(){}1:0:
00000000000298c0	sub	sp, sp, #0x60
00000000000298c4	stp	x24, x23, [sp, #0x20]
00000000000298c8	stp	x22, x21, [sp, #0x30]
00000000000298cc	stp	x20, x19, [sp, #0x40]
00000000000298d0	stp	x29, x30, [sp, #0x50]
00000000000298d4	add	x29, sp, #0x50
00000000000298d8	mov	x19, x1
00000000000298dc	mov	x21, x0
00000000000298e0	movi.16b	v0, #0x0
00000000000298e4	stp	q0, q0, [sp]
00000000000298e8	mov	x22, sp
00000000000298ec	adrp	x20, 81 ; 0x7a000
00000000000298f0	add	x20, x20, #0x4e0
00000000000298f4	ldr	x23, [x20]
00000000000298f8	mov	x0, x20
00000000000298fc	blr	x23
0000000000029900	ldr	x8, [x0]
0000000000029904	ldr	x9, [x8, #0x110]
0000000000029908	str	x22, [x8, #0x110]
000000000002990c	mov	x8, #0x400000000
0000000000029910	stp	x9, x8, [sp, #0x8]
0000000000029914	adr	x24, #0x6abf5
0000000000029918	nop
000000000002991c	ldarb	w8, [x24]
0000000000029920	tbz	w8, #0x0, 0x29928
0000000000029924	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029928	mov	x0, x21
000000000002992c	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000029930	mov	x2, x0
0000000000029934	add	x22, x22, #0x18
0000000000029938	nop
000000000002993c	ldr	x1, #0x4d47c ; Objc selector ref: next
0000000000029940	mov	x0, x20
0000000000029944	blr	x23
0000000000029948	ldr	x8, [x0]
000000000002994c	add	x8, x8, #0x138
0000000000029950	mov	w9, #0x1
0000000000029954	ldaxr	wzr, [x8]
0000000000029958	stlxr	w10, w9, [x8]
000000000002995c	cbnz	w10, 0x29954
0000000000029960	mov	x0, x2
0000000000029964	bl	0x29a78
0000000000029968	mov	x21, x0
000000000002996c	mov	x0, x20
0000000000029970	blr	x23
0000000000029974	ldr	x8, [x0]
0000000000029978	add	x0, x8, #0x138
000000000002997c	ldaxr	w8, [x0]
0000000000029980	stlxr	w9, wzr, [x0]
0000000000029984	cbnz	w9, 0x2997c
0000000000029988	cmp	w8, #0x1
000000000002998c	b.ne	0x2999c
0000000000029990	ldarb	w8, [x24]
0000000000029994	tbz	w8, #0x0, 0x2999c
0000000000029998	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002999c	cbz	x21, 0x299bc
00000000000299a0	nop
00000000000299a4	ldr	x1, #0x6adb4
00000000000299a8	mov	x0, x21
00000000000299ac	mov	x2, x22
00000000000299b0	bl	0x55ca8 ; Objc message: -[x0 next]
00000000000299b4	mov	x22, x0
00000000000299b8	b	0x299c4
00000000000299bc	mov	x22, #0x0
00000000000299c0	str	xzr, [sp, #0x18]
00000000000299c4	mov	x0, x20
00000000000299c8	blr	x23
00000000000299cc	ldr	x8, [x0]
00000000000299d0	add	x8, x8, #0x138
00000000000299d4	mov	w9, #0x1
00000000000299d8	ldaxr	wzr, [x8]
00000000000299dc	stlxr	w10, w9, [x8]
00000000000299e0	cbnz	w10, 0x299d8
00000000000299e4	mov	x0, x21
00000000000299e8	bl	0x55ccc ; symbol stub for: _objc_release
00000000000299ec	mov	x0, x20
00000000000299f0	blr	x23
00000000000299f4	ldr	x8, [x0]
00000000000299f8	add	x0, x8, #0x138
00000000000299fc	ldaxr	w8, [x0]
0000000000029a00	stlxr	w9, wzr, [x0]
0000000000029a04	cbnz	w9, 0x299fc
0000000000029a08	cmp	w8, #0x1
0000000000029a0c	b.ne	0x29a1c
0000000000029a10	ldarb	w8, [x24]
0000000000029a14	tbz	w8, #0x0, 0x29a1c
0000000000029a18	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029a1c	str	x22, [x19]
0000000000029a20	mov	x0, x20
0000000000029a24	blr	x23
0000000000029a28	ldr	x8, [x0]
0000000000029a2c	ldr	x9, [sp, #0x8]
0000000000029a30	str	x9, [x8, #0x110]
0000000000029a34	mov	x0, x22
0000000000029a38	ldp	x29, x30, [sp, #0x50]
0000000000029a3c	ldp	x20, x19, [sp, #0x40]
0000000000029a40	ldp	x22, x21, [sp, #0x30]
0000000000029a44	ldp	x24, x23, [sp, #0x20]
0000000000029a48	add	sp, sp, #0x60
0000000000029a4c	ret
0000000000029a50	mov	x1, x0
0000000000029a54	mov	x0, x20
0000000000029a58	blr	x23
0000000000029a5c	ldr	x8, [x0]
0000000000029a60	mov	x9, sp
0000000000029a64	str	x9, [x8, #0x110]
0000000000029a68	mov	x0, x1
0000000000029a6c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000029a70	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000029a74	b	0x29a74
0000000000029a78	stp	x29, x30, [sp, #-0x10]!
0000000000029a7c	mov	x29, sp
0000000000029a80	bl	0x55ca8 ; Objc message: -[x0 next]
0000000000029a84	mov	x29, x29
0000000000029a88	ldp	x29, x30, [sp], #0x10
0000000000029a8c	b	0x55ce4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_kotlin2objc_kfun:kotlin.collections.Iterator#hasNext(){}kotlin.Boolean:
0000000000029a90	sub	sp, sp, #0x50
0000000000029a94	stp	x22, x21, [sp, #0x20]
0000000000029a98	stp	x20, x19, [sp, #0x30]
0000000000029a9c	stp	x29, x30, [sp, #0x40]
0000000000029aa0	add	x29, sp, #0x40
0000000000029aa4	mov	x20, x0
0000000000029aa8	str	xzr, [sp, #0x8]
0000000000029aac	adrp	x19, 81 ; 0x7a000
0000000000029ab0	add	x19, x19, #0x4e0
0000000000029ab4	ldr	x21, [x19]
0000000000029ab8	mov	x0, x19
0000000000029abc	blr	x21
0000000000029ac0	ldr	x8, [x0]
0000000000029ac4	ldr	x9, [x8, #0x110]
0000000000029ac8	add	x10, sp, #0x8
0000000000029acc	str	x10, [x8, #0x110]
0000000000029ad0	mov	x8, #0x300000000
0000000000029ad4	stp	x9, x8, [sp, #0x10]
0000000000029ad8	adr	x22, #0x6aa31
0000000000029adc	nop
0000000000029ae0	ldarb	w8, [x22]
0000000000029ae4	tbz	w8, #0x0, 0x29aec
0000000000029ae8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029aec	mov	x0, x20
0000000000029af0	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000029af4	mov	x2, x0
0000000000029af8	nop
0000000000029afc	ldr	x1, #0x4d1b4 ; Objc selector ref: hasNext
0000000000029b00	mov	x0, x19
0000000000029b04	blr	x21
0000000000029b08	ldr	x8, [x0]
0000000000029b0c	add	x8, x8, #0x138
0000000000029b10	mov	w9, #0x1
0000000000029b14	ldaxr	wzr, [x8]
0000000000029b18	stlxr	w10, w9, [x8]
0000000000029b1c	cbnz	w10, 0x29b14
0000000000029b20	mov	x0, x2
0000000000029b24	bl	0x55ca8 ; Objc message: -[x0 hasNext]
0000000000029b28	mov	x20, x0
0000000000029b2c	mov	x0, x19
0000000000029b30	blr	x21
0000000000029b34	ldr	x8, [x0]
0000000000029b38	add	x0, x8, #0x138
0000000000029b3c	ldaxr	w8, [x0]
0000000000029b40	stlxr	w9, wzr, [x0]
0000000000029b44	cbnz	w9, 0x29b3c
0000000000029b48	cmp	w8, #0x1
0000000000029b4c	b.ne	0x29b5c
0000000000029b50	ldarb	w8, [x22]
0000000000029b54	tbz	w8, #0x0, 0x29b5c
0000000000029b58	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029b5c	cmp	w20, #0x0
0000000000029b60	cset	w8, ne
0000000000029b64	mov	x0, x19
0000000000029b68	blr	x21
0000000000029b6c	ldr	x9, [x0]
0000000000029b70	ldr	x10, [sp, #0x10]
0000000000029b74	str	x10, [x9, #0x110]
0000000000029b78	mov	x0, x8
0000000000029b7c	ldp	x29, x30, [sp, #0x40]
0000000000029b80	ldp	x20, x19, [sp, #0x30]
0000000000029b84	ldp	x22, x21, [sp, #0x20]
0000000000029b88	add	sp, sp, #0x50
0000000000029b8c	ret
0000000000029b90	mov	x1, x0
0000000000029b94	mov	x0, x19
0000000000029b98	blr	x21
0000000000029b9c	ldr	x8, [x0]
0000000000029ba0	add	x9, sp, #0x8
0000000000029ba4	str	x9, [x8, #0x110]
0000000000029ba8	mov	x0, x1
0000000000029bac	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000029bb0	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000029bb4	b	0x29bb4
_kotlin2objc_kfun:kotlin.collections.ByteIterator#nextByte(){}kotlin.Byte:
0000000000029bb8	sub	sp, sp, #0x50
0000000000029bbc	stp	x22, x21, [sp, #0x20]
0000000000029bc0	stp	x20, x19, [sp, #0x30]
0000000000029bc4	stp	x29, x30, [sp, #0x40]
0000000000029bc8	add	x29, sp, #0x40
0000000000029bcc	mov	x20, x0
0000000000029bd0	str	xzr, [sp, #0x8]
0000000000029bd4	adrp	x19, 81 ; 0x7a000
0000000000029bd8	add	x19, x19, #0x4e0
0000000000029bdc	ldr	x21, [x19]
0000000000029be0	mov	x0, x19
0000000000029be4	blr	x21
0000000000029be8	ldr	x8, [x0]
0000000000029bec	ldr	x9, [x8, #0x110]
0000000000029bf0	add	x10, sp, #0x8
0000000000029bf4	str	x10, [x8, #0x110]
0000000000029bf8	mov	x8, #0x300000000
0000000000029bfc	stp	x9, x8, [sp, #0x10]
0000000000029c00	adr	x22, #0x6a909
0000000000029c04	nop
0000000000029c08	ldarb	w8, [x22]
0000000000029c0c	tbz	w8, #0x0, 0x29c14
0000000000029c10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029c14	mov	x0, x20
0000000000029c18	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000029c1c	mov	x2, x0
0000000000029c20	nop
0000000000029c24	ldr	x1, #0x4d19c ; Objc selector ref: nextByte
0000000000029c28	mov	x0, x19
0000000000029c2c	blr	x21
0000000000029c30	ldr	x8, [x0]
0000000000029c34	add	x8, x8, #0x138
0000000000029c38	mov	w9, #0x1
0000000000029c3c	ldaxr	wzr, [x8]
0000000000029c40	stlxr	w10, w9, [x8]
0000000000029c44	cbnz	w10, 0x29c3c
0000000000029c48	mov	x0, x2
0000000000029c4c	bl	0x55ca8 ; Objc message: -[x0 nextByte]
0000000000029c50	mov	x20, x0
0000000000029c54	mov	x0, x19
0000000000029c58	blr	x21
0000000000029c5c	ldr	x8, [x0]
0000000000029c60	add	x0, x8, #0x138
0000000000029c64	ldaxr	w8, [x0]
0000000000029c68	stlxr	w9, wzr, [x0]
0000000000029c6c	cbnz	w9, 0x29c64
0000000000029c70	cmp	w8, #0x1
0000000000029c74	b.ne	0x29c84
0000000000029c78	ldarb	w8, [x22]
0000000000029c7c	tbz	w8, #0x0, 0x29c84
0000000000029c80	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029c84	mov	x0, x19
0000000000029c88	blr	x21
0000000000029c8c	ldr	x8, [x0]
0000000000029c90	ldr	x9, [sp, #0x10]
0000000000029c94	str	x9, [x8, #0x110]
0000000000029c98	mov	x0, x20
0000000000029c9c	ldp	x29, x30, [sp, #0x40]
0000000000029ca0	ldp	x20, x19, [sp, #0x30]
0000000000029ca4	ldp	x22, x21, [sp, #0x20]
0000000000029ca8	add	sp, sp, #0x50
0000000000029cac	ret
0000000000029cb0	mov	x1, x0
0000000000029cb4	mov	x0, x19
0000000000029cb8	blr	x21
0000000000029cbc	ldr	x8, [x0]
0000000000029cc0	add	x9, sp, #0x8
0000000000029cc4	str	x9, [x8, #0x110]
0000000000029cc8	mov	x0, x1
0000000000029ccc	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000029cd0	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000029cd4	b	0x29cd4
_kotlin2objc_kfun:kotlin.collections.Iterator#hasNext(){}kotlin.Boolean.76:
0000000000029cd8	sub	sp, sp, #0x50
0000000000029cdc	stp	x22, x21, [sp, #0x20]
0000000000029ce0	stp	x20, x19, [sp, #0x30]
0000000000029ce4	stp	x29, x30, [sp, #0x40]
0000000000029ce8	add	x29, sp, #0x40
0000000000029cec	mov	x20, x0
0000000000029cf0	str	xzr, [sp, #0x8]
0000000000029cf4	adrp	x19, 81 ; 0x7a000
0000000000029cf8	add	x19, x19, #0x4e0
0000000000029cfc	ldr	x21, [x19]
0000000000029d00	mov	x0, x19
0000000000029d04	blr	x21
0000000000029d08	ldr	x8, [x0]
0000000000029d0c	ldr	x9, [x8, #0x110]
0000000000029d10	add	x10, sp, #0x8
0000000000029d14	str	x10, [x8, #0x110]
0000000000029d18	mov	x8, #0x300000000
0000000000029d1c	stp	x9, x8, [sp, #0x10]
0000000000029d20	adr	x22, #0x6a7e9
0000000000029d24	nop
0000000000029d28	ldarb	w8, [x22]
0000000000029d2c	tbz	w8, #0x0, 0x29d34
0000000000029d30	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029d34	mov	x0, x20
0000000000029d38	bl	_Kotlin_ObjCExport_refToLocalObjC
0000000000029d3c	mov	x2, x0
0000000000029d40	nop
0000000000029d44	ldr	x1, #0x4cf6c ; Objc selector ref: hasNext
0000000000029d48	mov	x0, x19
0000000000029d4c	blr	x21
0000000000029d50	ldr	x8, [x0]
0000000000029d54	add	x8, x8, #0x138
0000000000029d58	mov	w9, #0x1
0000000000029d5c	ldaxr	wzr, [x8]
0000000000029d60	stlxr	w10, w9, [x8]
0000000000029d64	cbnz	w10, 0x29d5c
0000000000029d68	mov	x0, x2
0000000000029d6c	bl	0x55ca8 ; Objc message: -[x0 hasNext]
0000000000029d70	mov	x20, x0
0000000000029d74	mov	x0, x19
0000000000029d78	blr	x21
0000000000029d7c	ldr	x8, [x0]
0000000000029d80	add	x0, x8, #0x138
0000000000029d84	ldaxr	w8, [x0]
0000000000029d88	stlxr	w9, wzr, [x0]
0000000000029d8c	cbnz	w9, 0x29d84
0000000000029d90	cmp	w8, #0x1
0000000000029d94	b.ne	0x29da4
0000000000029d98	ldarb	w8, [x22]
0000000000029d9c	tbz	w8, #0x0, 0x29da4
0000000000029da0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029da4	cmp	w20, #0x0
0000000000029da8	cset	w8, ne
0000000000029dac	mov	x0, x19
0000000000029db0	blr	x21
0000000000029db4	ldr	x9, [x0]
0000000000029db8	ldr	x10, [sp, #0x10]
0000000000029dbc	str	x10, [x9, #0x110]
0000000000029dc0	mov	x0, x8
0000000000029dc4	ldp	x29, x30, [sp, #0x40]
0000000000029dc8	ldp	x20, x19, [sp, #0x30]
0000000000029dcc	ldp	x22, x21, [sp, #0x20]
0000000000029dd0	add	sp, sp, #0x50
0000000000029dd4	ret
0000000000029dd8	mov	x1, x0
0000000000029ddc	mov	x0, x19
0000000000029de0	blr	x21
0000000000029de4	ldr	x8, [x0]
0000000000029de8	add	x9, sp, #0x8
0000000000029dec	str	x9, [x8, #0x110]
0000000000029df0	mov	x0, x1
0000000000029df4	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000029df8	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000029dfc	b	0x29dfc
_objc2kotlin_kfun:com.example.reversecomplementkmm.ReverseComplementKmm#<init>(){}:
0000000000029e00	sub	sp, sp, #0xf0
0000000000029e04	stp	x28, x27, [sp, #0x90]
0000000000029e08	stp	x26, x25, [sp, #0xa0]
0000000000029e0c	stp	x24, x23, [sp, #0xb0]
0000000000029e10	stp	x22, x21, [sp, #0xc0]
0000000000029e14	stp	x20, x19, [sp, #0xd0]
0000000000029e18	stp	x29, x30, [sp, #0xe0]
0000000000029e1c	add	x29, sp, #0xe0
0000000000029e20	mov	x19, x0
0000000000029e24	str	xzr, [sp, #0x30]
0000000000029e28	movi.16b	v0, #0x0
0000000000029e2c	stp	q0, q0, [sp, #0x10]
0000000000029e30	add	x8, sp, #0x10
0000000000029e34	add	x21, x8, #0x18
0000000000029e38	bl	_Kotlin_initRuntimeIfNeeded
0000000000029e3c	adrp	x20, 81 ; 0x7a000
0000000000029e40	add	x20, x20, #0x4e0
0000000000029e44	ldr	x25, [x20]
0000000000029e48	mov	x0, x20
0000000000029e4c	blr	x25
0000000000029e50	ldr	x8, [x0]
0000000000029e54	add	x0, x8, #0x138
0000000000029e58	ldaxr	w8, [x0]
0000000000029e5c	stlxr	w9, wzr, [x0]
0000000000029e60	cbnz	w9, 0x29e58
0000000000029e64	adr	x26, #0x6a6a5
0000000000029e68	nop
0000000000029e6c	cmp	w8, #0x1
0000000000029e70	b.ne	0x29e80
0000000000029e74	ldarb	w8, [x26]
0000000000029e78	tbz	w8, #0x0, 0x29e80
0000000000029e7c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000029e80	mov	x0, x20
0000000000029e84	blr	x25
0000000000029e88	ldr	x8, [x0]
0000000000029e8c	ldr	x9, [x8, #0x110]
0000000000029e90	add	x10, sp, #0x10
0000000000029e94	str	x10, [x8, #0x110]
0000000000029e98	mov	x8, #0x500000000
0000000000029e9c	stp	x9, x8, [sp, #0x18]
0000000000029ea0	ldarb	w8, [x26]
0000000000029ea4	tbz	w8, #0x0, 0x29eac
0000000000029ea8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029eac	str	x19, [sp, #0x8]
0000000000029eb0	cbz	x19, 0x29ed0
0000000000029eb4	nop
0000000000029eb8	ldr	x1, #0x6a8a0
0000000000029ebc	mov	x0, x19
0000000000029ec0	mov	x2, x21
0000000000029ec4	bl	0x55ca8 ; Objc message: -[x0 hasNext]
0000000000029ec8	mov	x21, x0
0000000000029ecc	b	0x29ed8
0000000000029ed0	mov	x21, #0x0
0000000000029ed4	str	xzr, [sp, #0x28]
0000000000029ed8	movi.16b	v0, #0x0
0000000000029edc	stp	q0, q0, [sp, #0x40]
0000000000029ee0	stp	q0, q0, [sp, #0x70]
0000000000029ee4	str	q0, [sp, #0x60]
0000000000029ee8	add	x23, sp, #0x40
0000000000029eec	mov	x0, x20
0000000000029ef0	blr	x25
0000000000029ef4	ldr	x8, [x0]
0000000000029ef8	ldr	x9, [x8, #0x110]
0000000000029efc	str	x23, [x8, #0x110]
0000000000029f00	mov	x8, #0xa00000000
0000000000029f04	stp	x9, x8, [sp, #0x48]
0000000000029f08	ldarb	w8, [x26]
0000000000029f0c	tbz	w8, #0x0, 0x29f14
0000000000029f10	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029f14	adr	x8, #0x45e8c
0000000000029f18	nop
0000000000029f1c	adr	x9, #0x45eb4
0000000000029f20	nop
0000000000029f24	stp	x8, x9, [x21, #0x8]
0000000000029f28	mov	x0, x20
0000000000029f2c	blr	x25
0000000000029f30	ldr	x8, [x0]
0000000000029f34	ldr	x8, [x8, #0x118]
0000000000029f38	add	x0, x8, #0x70
0000000000029f3c	mov	w1, #0x98
0000000000029f40	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000029f44	adr	x8, #0x36eec
0000000000029f48	nop
0000000000029f4c	stp	x8, xzr, [x0, #0x10]!
0000000000029f50	stur	xzr, [x0, #-0x8]
0000000000029f54	mov	w8, #0x80
0000000000029f58	str	w8, [x0, #0x8]
0000000000029f5c	str	x0, [sp, #0x58]
0000000000029f60	str	x0, [x21, #0x18]
0000000000029f64	mov	w19, #0x7f
0000000000029f68	tbnz	w19, #0x1f, 0x29fa4
0000000000029f6c	mov	w22, #0x0
0000000000029f70	b	0x29f94
0000000000029f74	ldr	x8, [x21, #0x18]
0000000000029f78	ldr	xzr, [x8]
0000000000029f7c	add	x8, x8, w22, sxtw
0000000000029f80	strb	w22, [x8, #0x10]
0000000000029f84	add	w8, w22, #0x1
0000000000029f88	mov	x22, x8
0000000000029f8c	cmp	w8, w19
0000000000029f90	b.gt	0x29fa4
0000000000029f94	ldarb	w8, [x26]
0000000000029f98	tbz	w8, #0x0, 0x29f74
0000000000029f9c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029fa0	b	0x29f74
0000000000029fa4	ldr	x19, [x21, #0x8]
0000000000029fa8	ldarb	w8, [x26]
0000000000029fac	tbz	w8, #0x0, 0x29fb4
0000000000029fb0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029fb4	ldr	w28, [x19, #0x8]
0000000000029fb8	cmp	w28, #0x1
0000000000029fbc	b.lt	0x2a078
0000000000029fc0	mov	x19, #0x0
0000000000029fc4	add	x22, x23, #0x20
0000000000029fc8	add	x23, x23, #0x28
0000000000029fcc	ldarb	w8, [x26]
0000000000029fd0	tbz	w8, #0x0, 0x29fd8
0000000000029fd4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000029fd8	ldr	x8, [x21, #0x8]
0000000000029fdc	ldr	w9, [x8, #0x8]
0000000000029fe0	cmp	w9, w19
0000000000029fe4	b.ls	0x2a1cc
0000000000029fe8	add	x8, x8, x19, lsl #1
0000000000029fec	ldrh	w24, [x8, #0x10]
0000000000029ff0	ldr	x27, [x21, #0x18]
0000000000029ff4	mov	x0, x24
0000000000029ff8	mov	x1, x22
0000000000029ffc	bl	"_kfun:kotlin.text#lowercase__at__kotlin.Char(){}kotlin.String"
000000000002a000	bl	"_kfun:kotlin.text#single__at__kotlin.CharSequence(){}kotlin.Char"
000000000002a004	ldr	x8, [x21, #0x10]
000000000002a008	ldr	w9, [x8, #0x8]
000000000002a00c	cmp	w9, w19
000000000002a010	b.ls	0x2a1c4
000000000002a014	ldr	w9, [x27, #0x8]
000000000002a018	cmp	w9, w0
000000000002a01c	b.ls	0x2a1bc
000000000002a020	add	x8, x8, x19, lsl #1
000000000002a024	ldrb	w8, [x8, #0x10]
000000000002a028	ldr	xzr, [x27]
000000000002a02c	add	x9, x27, w0, uxtw
000000000002a030	strb	w8, [x9, #0x10]
000000000002a034	ldr	x27, [x21, #0x18]
000000000002a038	mov	x0, x24
000000000002a03c	mov	x1, x23
000000000002a040	bl	"_kfun:kotlin.text#lowercase__at__kotlin.Char(){}kotlin.String"
000000000002a044	bl	"_kfun:kotlin.text#single__at__kotlin.CharSequence(){}kotlin.Char"
000000000002a048	ldr	w8, [x27, #0x8]
000000000002a04c	cmp	w8, w0
000000000002a050	b.ls	0x2a1b4
000000000002a054	cmp	w8, w24
000000000002a058	b.ls	0x2a1ac
000000000002a05c	add	x8, x27, #0x10
000000000002a060	ldrb	w9, [x8, w0, uxtw]
000000000002a064	ldr	xzr, [x27]
000000000002a068	strb	w9, [x8, w24, uxtw]
000000000002a06c	add	x19, x19, #0x1
000000000002a070	cmp	w28, w19
000000000002a074	b.ne	0x29fcc
000000000002a078	mov	w23, #0x18
000000000002a07c	movk	w23, #0x1, lsl #16
000000000002a080	mov	x0, x20
000000000002a084	blr	x25
000000000002a088	ldr	x8, [x0]
000000000002a08c	ldr	x8, [x8, #0x118]
000000000002a090	add	x0, x8, #0x70
000000000002a094	mov	w1, #0x18
000000000002a098	movk	w1, #0x1, lsl #16
000000000002a09c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002a0a0	mov	x22, x0
000000000002a0a4	adr	x24, #0x36d8c
000000000002a0a8	nop
000000000002a0ac	stp	x24, xzr, [x22, #0x10]!
000000000002a0b0	stur	xzr, [x22, #-0x8]
000000000002a0b4	mov	w19, #0x10000
000000000002a0b8	str	w19, [x22, #0x8]
000000000002a0bc	str	x22, [sp, #0x70]
000000000002a0c0	ldarb	w8, [x26]
000000000002a0c4	tbz	w8, #0x0, 0x2a0cc
000000000002a0c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a0cc	str	x22, [x21, #0x20]
000000000002a0d0	mov	x0, x20
000000000002a0d4	blr	x25
000000000002a0d8	mov	x20, x0
000000000002a0dc	ldr	x8, [x0]
000000000002a0e0	ldr	x8, [x8, #0x118]
000000000002a0e4	add	x0, x8, #0x70
000000000002a0e8	mov	w1, #0x10
000000000002a0ec	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002a0f0	adr	x8, #0x3baf0
000000000002a0f4	nop
000000000002a0f8	str	x8, [x0, #0x10]!
000000000002a0fc	stur	xzr, [x0, #-0x8]
000000000002a100	str	x0, [sp, #0x78]
000000000002a104	str	x0, [x21, #0x28]
000000000002a108	ldr	x8, [x20]
000000000002a10c	ldr	x8, [x8, #0x118]
000000000002a110	add	x0, x8, #0x70
000000000002a114	add	x1, x23, #0xf0, lsl #12
000000000002a118	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002a11c	str	xzr, [x0, #0x10]!
000000000002a120	stp	xzr, x24, [x0, #-0x8]
000000000002a124	str	xzr, [x0, #0x8]
000000000002a128	mov	w8, #0x100000
000000000002a12c	str	w8, [x0, #0x8]
000000000002a130	str	x0, [sp, #0x80]
000000000002a134	str	x0, [x21, #0x30]
000000000002a138	ldr	x8, [x20]
000000000002a13c	ldr	x8, [x8, #0x118]
000000000002a140	add	x0, x8, #0x70
000000000002a144	mov	w1, #0x18
000000000002a148	movk	w1, #0x1, lsl #16
000000000002a14c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002a150	str	xzr, [x0, #0x10]!
000000000002a154	stp	xzr, x24, [x0, #-0x8]
000000000002a158	str	xzr, [x0, #0x8]
000000000002a15c	str	w19, [x0, #0x8]
000000000002a160	str	x0, [sp, #0x88]
000000000002a164	str	x0, [x21, #0x38]
000000000002a168	ldr	x8, [x20]
000000000002a16c	ldr	x9, [sp, #0x18]
000000000002a170	str	x9, [x8, #0x110]
000000000002a174	add	x8, x8, #0x138
000000000002a178	mov	w9, #0x1
000000000002a17c	ldaxr	wzr, [x8]
000000000002a180	stlxr	w10, w9, [x8]
000000000002a184	cbnz	w10, 0x2a17c
000000000002a188	ldr	x0, [sp, #0x8]
000000000002a18c	ldp	x29, x30, [sp, #0xe0]
000000000002a190	ldp	x20, x19, [sp, #0xd0]
000000000002a194	ldp	x22, x21, [sp, #0xc0]
000000000002a198	ldp	x24, x23, [sp, #0xb0]
000000000002a19c	ldp	x26, x25, [sp, #0xa0]
000000000002a1a0	ldp	x28, x27, [sp, #0x90]
000000000002a1a4	add	sp, sp, #0xf0
000000000002a1a8	ret
000000000002a1ac	bl	_ThrowArrayIndexOutOfBoundsException
000000000002a1b0	b	0x2a210
000000000002a1b4	bl	_ThrowArrayIndexOutOfBoundsException
000000000002a1b8	b	0x2a210
000000000002a1bc	bl	_ThrowArrayIndexOutOfBoundsException
000000000002a1c0	b	0x2a210
000000000002a1c4	bl	_ThrowArrayIndexOutOfBoundsException
000000000002a1c8	b	0x2a210
000000000002a1cc	bl	_ThrowArrayIndexOutOfBoundsException
000000000002a1d0	b	0x2a210
000000000002a1d4	b	0x2a1d8
000000000002a1d8	mov	x1, x0
000000000002a1dc	mov	x0, x20
000000000002a1e0	blr	x25
000000000002a1e4	ldr	x8, [x0]
000000000002a1e8	add	x9, sp, #0x10
000000000002a1ec	str	x9, [x8, #0x110]
000000000002a1f0	mov	x0, x1
000000000002a1f4	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002a1f8	ldr	x8, [x0, #0x8]
000000000002a1fc	ldr	x19, [x8]
000000000002a200	str	x19, [sp, #0x30]
000000000002a204	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002a208	mov	x0, x19
000000000002a20c	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002a210	brk	#0x1
000000000002a214	mov	x1, x0
000000000002a218	mov	x0, x20
000000000002a21c	blr	x25
000000000002a220	ldr	x8, [x0]
000000000002a224	add	x9, sp, #0x10
000000000002a228	str	x9, [x8, #0x110]
000000000002a22c	mov	x0, x1
000000000002a230	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002a234	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002a238	b	0x2a238
_objc2kotlin_kfun:com.example.reversecomplementkmm.ReverseComplementKmm#runBenchmark(kotlin.Int){}:
000000000002a23c	sub	sp, sp, #0x140
000000000002a240	stp	x28, x27, [sp, #0xe0]
000000000002a244	stp	x26, x25, [sp, #0xf0]
000000000002a248	stp	x24, x23, [sp, #0x100]
000000000002a24c	stp	x22, x21, [sp, #0x110]
000000000002a250	stp	x20, x19, [sp, #0x120]
000000000002a254	stp	x29, x30, [sp, #0x130]
000000000002a258	add	x29, sp, #0x130
000000000002a25c	mov	x20, x0
000000000002a260	str	xzr, [sp, #0x20]
000000000002a264	movi.16b	v0, #0x0
000000000002a268	stp	q0, q0, [sp]
000000000002a26c	mov	x8, sp
000000000002a270	add	x21, x8, #0x18
000000000002a274	bl	_Kotlin_initRuntimeIfNeeded
000000000002a278	adrp	x19, 80 ; 0x7a000
000000000002a27c	add	x19, x19, #0x4e0
000000000002a280	ldr	x23, [x19]
000000000002a284	mov	x0, x19
000000000002a288	blr	x23
000000000002a28c	ldr	x8, [x0]
000000000002a290	add	x0, x8, #0x138
000000000002a294	ldaxr	w8, [x0]
000000000002a298	stlxr	w9, wzr, [x0]
000000000002a29c	cbnz	w9, 0x2a294
000000000002a2a0	adr	x24, #0x6a269
000000000002a2a4	nop
000000000002a2a8	cmp	w8, #0x1
000000000002a2ac	b.ne	0x2a2bc
000000000002a2b0	ldarb	w8, [x24]
000000000002a2b4	tbz	w8, #0x0, 0x2a2bc
000000000002a2b8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002a2bc	mov	x0, x19
000000000002a2c0	blr	x23
000000000002a2c4	ldr	x8, [x0]
000000000002a2c8	ldr	x9, [x8, #0x110]
000000000002a2cc	mov	x10, sp
000000000002a2d0	str	x10, [x8, #0x110]
000000000002a2d4	mov	x8, #0x500000000
000000000002a2d8	stp	x9, x8, [sp, #0x8]
000000000002a2dc	ldarb	w8, [x24]
000000000002a2e0	tbz	w8, #0x0, 0x2a2e8
000000000002a2e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a2e8	cbz	x20, 0x2a9cc
000000000002a2ec	nop
000000000002a2f0	ldr	x1, #0x6a468
000000000002a2f4	mov	x0, x20
000000000002a2f8	mov	x2, x21
000000000002a2fc	bl	0x55ca8 ; Objc message: -[x0 hasNext]
000000000002a300	mov	x20, x0
000000000002a304	ldarb	w8, [x24]
000000000002a308	tbz	w8, #0x0, 0x2a310
000000000002a30c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a310	movi.16b	v0, #0x0
000000000002a314	stp	q0, q0, [sp, #0x30]
000000000002a318	str	xzr, [sp, #0x50]
000000000002a31c	mov	x0, x19
000000000002a320	blr	x23
000000000002a324	ldr	x8, [x0]
000000000002a328	ldr	x9, [x8, #0x110]
000000000002a32c	add	x10, sp, #0x30
000000000002a330	str	x10, [x8, #0x110]
000000000002a334	mov	x10, #0x500000000
000000000002a338	stp	x9, x10, [sp, #0x38]
000000000002a33c	str	xzr, [x20, #0x40]
000000000002a340	str	wzr, [x20, #0x58]
000000000002a344	str	xzr, [x20, #0x50]
000000000002a348	add	x28, sp, #0x80
000000000002a34c	b	0x2a364
000000000002a350	mov	x0, x19
000000000002a354	blr	x23
000000000002a358	ldr	x8, [x0]
000000000002a35c	ldr	x9, [sp, #0x88]
000000000002a360	str	x9, [x8, #0x110]
000000000002a364	movi.16b	v0, #0x0
000000000002a368	stp	q0, q0, [sp, #0x80]
000000000002a36c	str	xzr, [sp, #0xd0]
000000000002a370	stp	q0, q0, [sp, #0xb0]
000000000002a374	str	q0, [sp, #0xa0]
000000000002a378	ldr	x9, [x8, #0x110]
000000000002a37c	str	x28, [x8, #0x110]
000000000002a380	mov	x8, #0xb00000000
000000000002a384	stp	x9, x8, [sp, #0x88]
000000000002a388	ldarb	w8, [x24]
000000000002a38c	tbz	w8, #0x0, 0x2a394
000000000002a390	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a394	ldarb	w8, [x24]
000000000002a398	tbz	w8, #0x0, 0x2a3a0
000000000002a39c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a3a0	movi.16b	v0, #0x0
000000000002a3a4	stp	q0, q0, [sp, #0x60]
000000000002a3a8	mov	x0, x19
000000000002a3ac	blr	x23
000000000002a3b0	ldr	x8, [x0]
000000000002a3b4	ldr	x9, [x8, #0x110]
000000000002a3b8	add	x10, sp, #0x60
000000000002a3bc	str	x10, [x8, #0x110]
000000000002a3c0	mov	x8, #0x400000000
000000000002a3c4	stp	x9, x8, [sp, #0x68]
000000000002a3c8	ldarb	w8, [x24]
000000000002a3cc	tbz	w8, #0x0, 0x2a3d4
000000000002a3d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a3d4	ldp	w22, w21, [x20, #0x40]
000000000002a3d8	cmp	w22, w21
000000000002a3dc	b.ge	0x2a41c
000000000002a3e0	ldarb	w8, [x24]
000000000002a3e4	tbz	w8, #0x0, 0x2a3ec
000000000002a3e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a3ec	ldr	x8, [x20, #0x20]
000000000002a3f0	str	x8, [sp, #0x78]
000000000002a3f4	ldr	w9, [x8, #0x8]
000000000002a3f8	cmp	w9, w22
000000000002a3fc	b.ls	0x2a9ec
000000000002a400	add	x8, x8, w22, sxtw
000000000002a404	ldrb	w8, [x8, #0x10]
000000000002a408	cmp	w8, #0xa
000000000002a40c	b.eq	0x2a420
000000000002a410	add	w22, w22, #0x1
000000000002a414	cmp	w21, w22
000000000002a418	b.ne	0x2a3e0
000000000002a41c	mov	w22, #-0x1
000000000002a420	mov	x0, x19
000000000002a424	blr	x23
000000000002a428	ldr	x8, [x0]
000000000002a42c	ldr	x9, [sp, #0x68]
000000000002a430	str	x9, [x8, #0x110]
000000000002a434	str	w22, [x20, #0x4c]
000000000002a438	ldr	w21, [x20, #0x40]
000000000002a43c	tbnz	w22, #0x1f, 0x2a510
000000000002a440	str	w21, [x20, #0x48]
000000000002a444	add	w8, w22, #0x1
000000000002a448	str	w8, [x20, #0x40]
000000000002a44c	ldr	x8, [x20, #0x20]
000000000002a450	str	x8, [sp, #0x98]
000000000002a454	sub	w9, w22, #0x1
000000000002a458	ldr	w10, [x8, #0x8]
000000000002a45c	cmp	w10, w9
000000000002a460	b.ls	0x2aa0c
000000000002a464	add	x10, x8, w9, sxtw
000000000002a468	ldrb	w10, [x10, #0x10]
000000000002a46c	cmp	w10, #0xd
000000000002a470	b.ne	0x2a48c
000000000002a474	str	w9, [x20, #0x4c]
000000000002a478	b	0x2a48c
000000000002a47c	ldr	w8, [x20, #0x48]
000000000002a480	add	w21, w8, #0x1
000000000002a484	str	w21, [x20, #0x48]
000000000002a488	ldr	x8, [x20, #0x20]
000000000002a48c	str	x8, [sp, #0xa0]
000000000002a490	ldr	w9, [x8, #0x8]
000000000002a494	cmp	w9, w21
000000000002a498	b.ls	0x2a9dc
000000000002a49c	add	x8, x8, w21, sxtw
000000000002a4a0	ldrb	w8, [x8, #0x10]
000000000002a4a4	cmp	w8, #0x20
000000000002a4a8	b.ne	0x2a4bc
000000000002a4ac	ldarb	w8, [x24]
000000000002a4b0	tbz	w8, #0x0, 0x2a47c
000000000002a4b4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a4b8	b	0x2a47c
000000000002a4bc	ldr	w8, [x20, #0x4c]
000000000002a4c0	b	0x2a4d0
000000000002a4c4	ldp	w21, w8, [x20, #0x48]
000000000002a4c8	sub	w8, w8, #0x1
000000000002a4cc	str	w8, [x20, #0x4c]
000000000002a4d0	cmp	w8, w21
000000000002a4d4	b.le	0x2a394
000000000002a4d8	ldr	x9, [x20, #0x20]
000000000002a4dc	str	x9, [sp, #0xa8]
000000000002a4e0	sub	w8, w8, #0x1
000000000002a4e4	ldr	w10, [x9, #0x8]
000000000002a4e8	cmp	w10, w8
000000000002a4ec	b.ls	0x2a9e4
000000000002a4f0	add	x8, x9, w8, sxtw
000000000002a4f4	ldrb	w8, [x8, #0x10]
000000000002a4f8	cmp	w8, #0x20
000000000002a4fc	b.ne	0x2a5e0
000000000002a500	ldarb	w8, [x24]
000000000002a504	tbz	w8, #0x0, 0x2a4c4
000000000002a508	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a50c	b	0x2a4c4
000000000002a510	cmp	w21, #0x1
000000000002a514	b.lt	0x2a588
000000000002a518	ldr	w27, [x20, #0x44]
000000000002a51c	subs	w26, w27, w21
000000000002a520	b.le	0x2a588
000000000002a524	str	w26, [x20, #0x44]
000000000002a528	ldr	x25, [x20, #0x20]
000000000002a52c	str	x25, [sp, #0xb0]
000000000002a530	ldr	x22, [x20, #0x20]
000000000002a534	str	x22, [sp, #0xb8]
000000000002a538	ldarb	w8, [x24]
000000000002a53c	tbz	w8, #0x0, 0x2a544
000000000002a540	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a544	orr	w8, w26, w21
000000000002a548	tbnz	w8, #0x1f, 0x2aa1c
000000000002a54c	ldr	w8, [x25, #0x8]
000000000002a550	cmp	w27, w8
000000000002a554	b.hi	0x2aa1c
000000000002a558	ldr	w8, [x22, #0x8]
000000000002a55c	cmp	w26, w8
000000000002a560	b.hi	0x2aa1c
000000000002a564	sxtw	x8, w21
000000000002a568	ldr	xzr, [x22]
000000000002a56c	add	x0, x22, #0x10
000000000002a570	add	x8, x25, x8
000000000002a574	add	x1, x8, #0x10
000000000002a578	sxtw	x2, w26
000000000002a57c	bl	0x55bdc ; symbol stub for: _memmove
000000000002a580	str	x22, [sp, #0xc0]
000000000002a584	b	0x2a58c
000000000002a588	str	wzr, [x20, #0x44]
000000000002a58c	str	wzr, [x20, #0x40]
000000000002a590	ldr	x21, [x20, #0x20]
000000000002a594	str	x21, [sp, #0xc8]
000000000002a598	ldr	w22, [x20, #0x44]
000000000002a59c	ldr	x25, [x20, #0x20]
000000000002a5a0	str	x25, [sp, #0xd0]
000000000002a5a4	ldarb	w8, [x24]
000000000002a5a8	tbz	w8, #0x0, 0x2a5b0
000000000002a5ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a5b0	ldr	w8, [x25, #0x8]
000000000002a5b4	ldr	w9, [x20, #0x44]
000000000002a5b8	sub	w2, w8, w9
000000000002a5bc	mov	x0, x21
000000000002a5c0	mov	x1, x22
000000000002a5c4	bl	"_kfun:com.example.kmm.utils.IOAndBufferOperator#read(kotlin.ByteArray;kotlin.Int;kotlin.Int){}kotlin.Int"
000000000002a5c8	cmp	w0, #0x1
000000000002a5cc	b.lt	0x2a8f8
000000000002a5d0	ldr	w8, [x20, #0x44]
000000000002a5d4	add	w8, w8, w0
000000000002a5d8	str	w8, [x20, #0x44]
000000000002a5dc	b	0x2a394
000000000002a5e0	mov	x0, x19
000000000002a5e4	blr	x23
000000000002a5e8	ldr	x8, [x0]
000000000002a5ec	ldr	x9, [sp, #0x88]
000000000002a5f0	str	x9, [x8, #0x110]
000000000002a5f4	ldarb	w8, [x24]
000000000002a5f8	tbz	w8, #0x0, 0x2a600
000000000002a5fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a600	ldr	x8, [x20, #0x20]
000000000002a604	str	x8, [sp, #0x48]
000000000002a608	ldrsw	x9, [x20, #0x48]
000000000002a60c	ldr	w10, [x8, #0x8]
000000000002a610	cmp	w10, w9
000000000002a614	b.ls	0x2aa24
000000000002a618	add	x8, x8, x9
000000000002a61c	ldrb	w8, [x8, #0x10]
000000000002a620	cmp	w8, #0x3e
000000000002a624	b.ne	0x2a708
000000000002a628	mov	x0, x20
000000000002a62c	bl	"_kfun:com.example.reversecomplementkmm.ReverseComplementKmm.finishData#internal"
000000000002a630	ldr	x22, [x20, #0x20]
000000000002a634	str	x22, [sp, #0x50]
000000000002a638	ldrsw	x27, [x20, #0x48]
000000000002a63c	ldr	w26, [x20, #0x40]
000000000002a640	sub	w21, w26, w27
000000000002a644	movi.16b	v0, #0x0
000000000002a648	stp	q0, q0, [sp, #0x80]
000000000002a64c	str	xzr, [sp, #0xa0]
000000000002a650	mov	x0, x19
000000000002a654	blr	x23
000000000002a658	ldr	x8, [x0]
000000000002a65c	ldr	x9, [x8, #0x110]
000000000002a660	str	x28, [x8, #0x110]
000000000002a664	mov	x8, #0x500000000
000000000002a668	stp	x9, x8, [sp, #0x88]
000000000002a66c	ldarb	w8, [x24]
000000000002a670	tbz	w8, #0x0, 0x2a678
000000000002a674	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a678	mov	x0, x20
000000000002a67c	mov	x1, x21
000000000002a680	bl	"_kfun:com.example.reversecomplementkmm.ReverseComplementKmm.prepareWrite#internal"
000000000002a684	ldr	x28, [x20, #0x38]
000000000002a688	str	x28, [sp, #0x98]
000000000002a68c	ldr	w25, [x20, #0x58]
000000000002a690	ldarb	w8, [x24]
000000000002a694	tbz	w8, #0x0, 0x2a69c
000000000002a698	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a69c	orr	w8, w21, w27
000000000002a6a0	tbnz	w8, #0x1f, 0x2aa14
000000000002a6a4	tbnz	w25, #0x1f, 0x2aa14
000000000002a6a8	ldr	w8, [x22, #0x8]
000000000002a6ac	cmp	w26, w8
000000000002a6b0	b.hi	0x2aa14
000000000002a6b4	add	w8, w21, w25
000000000002a6b8	ldr	w9, [x28, #0x8]
000000000002a6bc	cmp	w8, w9
000000000002a6c0	b.hi	0x2aa14
000000000002a6c4	ldr	xzr, [x28]
000000000002a6c8	add	x8, x28, x25
000000000002a6cc	add	x0, x8, #0x10
000000000002a6d0	add	x8, x22, x27
000000000002a6d4	add	x1, x8, #0x10
000000000002a6d8	sxtw	x2, w21
000000000002a6dc	bl	0x55bdc ; symbol stub for: _memmove
000000000002a6e0	ldr	w8, [x20, #0x58]
000000000002a6e4	add	w8, w8, w21
000000000002a6e8	str	w8, [x20, #0x58]
000000000002a6ec	mov	x0, x19
000000000002a6f0	blr	x23
000000000002a6f4	ldr	x8, [x0]
000000000002a6f8	ldr	x9, [sp, #0x88]
000000000002a6fc	str	x9, [x8, #0x110]
000000000002a700	add	x28, sp, #0x80
000000000002a704	b	0x2a364
000000000002a708	movi.16b	v0, #0x0
000000000002a70c	stp	q0, q0, [sp, #0x80]
000000000002a710	str	xzr, [sp, #0xd0]
000000000002a714	stp	q0, q0, [sp, #0xb0]
000000000002a718	str	q0, [sp, #0xa0]
000000000002a71c	mov	x0, x19
000000000002a720	blr	x23
000000000002a724	ldr	x8, [x0]
000000000002a728	ldr	x9, [x8, #0x110]
000000000002a72c	str	x28, [x8, #0x110]
000000000002a730	mov	x8, #0xb00000000
000000000002a734	stp	x9, x8, [sp, #0x88]
000000000002a738	ldarb	w8, [x24]
000000000002a73c	tbnz	w8, #0x0, 0x2a784
000000000002a740	ldp	w9, w8, [x20, #0x48]
000000000002a744	sub	w21, w8, w9
000000000002a748	ldr	w8, [x20, #0x50]
000000000002a74c	cbz	w8, 0x2a798
000000000002a750	ldr	w22, [x20, #0x54]
000000000002a754	ldr	x25, [x20, #0x30]
000000000002a758	str	x25, [sp, #0x98]
000000000002a75c	ldarb	w8, [x24]
000000000002a760	tbnz	w8, #0x0, 0x2a7b0
000000000002a764	ldr	w8, [x25, #0x8]
000000000002a768	add	w9, w22, w21
000000000002a76c	cmp	w9, w8
000000000002a770	b.gt	0x2a7c4
000000000002a774	ldp	w21, w22, [x20, #0x48]
000000000002a778	cmp	w21, w22
000000000002a77c	b.lt	0x2a87c
000000000002a780	b	0x2a350
000000000002a784	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a788	ldp	w9, w8, [x20, #0x48]
000000000002a78c	sub	w21, w8, w9
000000000002a790	ldr	w8, [x20, #0x50]
000000000002a794	cbnz	w8, 0x2a750
000000000002a798	str	w21, [x20, #0x50]
000000000002a79c	ldr	w22, [x20, #0x54]
000000000002a7a0	ldr	x25, [x20, #0x30]
000000000002a7a4	str	x25, [sp, #0x98]
000000000002a7a8	ldarb	w8, [x24]
000000000002a7ac	tbz	w8, #0x0, 0x2a764
000000000002a7b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a7b4	ldr	w8, [x25, #0x8]
000000000002a7b8	add	w9, w22, w21
000000000002a7bc	cmp	w9, w8
000000000002a7c0	b.le	0x2a774
000000000002a7c4	ldr	x22, [x20, #0x30]
000000000002a7c8	stp	x22, x22, [sp, #0xa0]
000000000002a7cc	ldarb	w8, [x24]
000000000002a7d0	tbz	w8, #0x0, 0x2a7d8
000000000002a7d4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a7d8	ldr	w8, [x22, #0x8]
000000000002a7dc	lsl	w25, w8, #1
000000000002a7e0	tbnz	w25, #0x1f, 0x2aa34
000000000002a7e4	mov	x0, x19
000000000002a7e8	blr	x23
000000000002a7ec	ldr	x8, [x0]
000000000002a7f0	ldr	x8, [x8, #0x118]
000000000002a7f4	add	x9, x25, #0x1f
000000000002a7f8	and	x1, x9, #0x1fffffff8
000000000002a7fc	add	x0, x8, #0x70
000000000002a800	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002a804	mov	x21, x0
000000000002a808	mov	x26, x0
000000000002a80c	adr	x8, #0x36624
000000000002a810	nop
000000000002a814	str	x8, [x26, #0x10]!
000000000002a818	str	xzr, [x0, #0x18]
000000000002a81c	str	xzr, [x0, #0x8]
000000000002a820	str	w25, [x0, #0x18]
000000000002a824	str	x26, [sp, #0xb0]
000000000002a828	ldarb	w8, [x24]
000000000002a82c	tbz	w8, #0x0, 0x2a834
000000000002a830	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a834	str	x26, [x20, #0x30]
000000000002a838	str	x26, [sp, #0xb8]
000000000002a83c	ldrsw	x2, [x20, #0x54]
000000000002a840	tbnz	w2, #0x1f, 0x2aa2c
000000000002a844	ldr	w8, [x22, #0x8]
000000000002a848	cmp	w2, w8
000000000002a84c	b.hi	0x2aa2c
000000000002a850	ldr	w8, [x21, #0x18]
000000000002a854	cmp	w2, w8
000000000002a858	b.hi	0x2aa2c
000000000002a85c	ldr	xzr, [x21, #0x10]
000000000002a860	add	x0, x21, #0x20
000000000002a864	add	x1, x22, #0x10
000000000002a868	bl	0x55bdc ; symbol stub for: _memmove
000000000002a86c	str	x26, [sp, #0xc0]
000000000002a870	ldp	w21, w22, [x20, #0x48]
000000000002a874	cmp	w21, w22
000000000002a878	b.ge	0x2a350
000000000002a87c	ldarb	w8, [x24]
000000000002a880	tbz	w8, #0x0, 0x2a888
000000000002a884	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a888	ldr	x8, [x20, #0x30]
000000000002a88c	str	x8, [sp, #0xc8]
000000000002a890	ldrsw	x9, [x20, #0x54]
000000000002a894	add	w10, w9, #0x1
000000000002a898	str	w10, [x20, #0x54]
000000000002a89c	ldp	x10, x11, [x20, #0x18]
000000000002a8a0	str	x11, [sp, #0xd0]
000000000002a8a4	ldr	w12, [x11, #0x8]
000000000002a8a8	cmp	w12, w21
000000000002a8ac	b.ls	0x2a9f4
000000000002a8b0	add	x11, x11, w21, sxtw
000000000002a8b4	ldrsb	w11, [x11, #0x10]
000000000002a8b8	ldr	w12, [x10, #0x8]
000000000002a8bc	cmp	w12, w11
000000000002a8c0	b.ls	0x2a9fc
000000000002a8c4	ldr	w12, [x8, #0x8]
000000000002a8c8	cmp	w12, w9
000000000002a8cc	b.ls	0x2aa04
000000000002a8d0	add	w21, w21, #0x1
000000000002a8d4	sxtw	x11, w11
000000000002a8d8	add	x10, x10, x11
000000000002a8dc	ldrb	w10, [x10, #0x10]
000000000002a8e0	ldr	xzr, [x8]
000000000002a8e4	add	x8, x8, x9
000000000002a8e8	strb	w10, [x8, #0x10]
000000000002a8ec	cmp	w22, w21
000000000002a8f0	b.ne	0x2a87c
000000000002a8f4	b	0x2a350
000000000002a8f8	mov	x0, x19
000000000002a8fc	blr	x23
000000000002a900	ldr	x8, [x0]
000000000002a904	ldr	x9, [sp, #0x88]
000000000002a908	str	x9, [x8, #0x110]
000000000002a90c	mov	x0, x20
000000000002a910	bl	"_kfun:com.example.reversecomplementkmm.ReverseComplementKmm.finishData#internal"
000000000002a914	ldr	w8, [x20, #0x58]
000000000002a918	cmp	w8, #0x1
000000000002a91c	b.lt	0x2a980
000000000002a920	movi.16b	v0, #0x0
000000000002a924	stp	q0, q0, [sp, #0x60]
000000000002a928	mov	x0, x19
000000000002a92c	blr	x23
000000000002a930	ldr	x8, [x0]
000000000002a934	ldr	x9, [x8, #0x110]
000000000002a938	add	x10, sp, #0x60
000000000002a93c	str	x10, [x8, #0x110]
000000000002a940	mov	x8, #0x400000000
000000000002a944	stp	x9, x8, [sp, #0x68]
000000000002a948	ldarb	w8, [x24]
000000000002a94c	tbz	w8, #0x0, 0x2a954
000000000002a950	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002a954	ldr	x0, [x20, #0x38]
000000000002a958	str	x0, [sp, #0x78]
000000000002a95c	ldr	w2, [x20, #0x58]
000000000002a960	mov	w1, #0x0
000000000002a964	bl	"_kfun:com.example.kmm.utils.IOAndBufferOperator#writeBytes(kotlin.ByteArray;kotlin.Int;kotlin.Int){}"
000000000002a968	str	wzr, [x20, #0x58]
000000000002a96c	mov	x0, x19
000000000002a970	blr	x23
000000000002a974	ldr	x8, [x0]
000000000002a978	ldr	x9, [sp, #0x68]
000000000002a97c	str	x9, [x8, #0x110]
000000000002a980	bl	"_kfun:com.example.kmm.utils.IOAndBufferOperator#flush(){}"
000000000002a984	mov	x0, x19
000000000002a988	blr	x23
000000000002a98c	ldr	x8, [x0]
000000000002a990	ldr	x9, [sp, #0x8]
000000000002a994	str	x9, [x8, #0x110]
000000000002a998	add	x8, x8, #0x138
000000000002a99c	mov	w9, #0x1
000000000002a9a0	ldaxr	wzr, [x8]
000000000002a9a4	stlxr	w10, w9, [x8]
000000000002a9a8	cbnz	w10, 0x2a9a0
000000000002a9ac	ldp	x29, x30, [sp, #0x130]
000000000002a9b0	ldp	x20, x19, [sp, #0x120]
000000000002a9b4	ldp	x22, x21, [sp, #0x110]
000000000002a9b8	ldp	x24, x23, [sp, #0x100]
000000000002a9bc	ldp	x26, x25, [sp, #0xf0]
000000000002a9c0	ldp	x28, x27, [sp, #0xe0]
000000000002a9c4	add	sp, sp, #0x140
000000000002a9c8	ret
000000000002a9cc	str	xzr, [sp, #0x18]
000000000002a9d0	ldarb	w8, [x24]
000000000002a9d4	tbnz	w8, #0x0, 0x2a30c
000000000002a9d8	b	0x2a310
000000000002a9dc	bl	_ThrowArrayIndexOutOfBoundsException
000000000002a9e0	b	0x2aa7c
000000000002a9e4	bl	_ThrowArrayIndexOutOfBoundsException
000000000002a9e8	b	0x2aa7c
000000000002a9ec	bl	_ThrowArrayIndexOutOfBoundsException
000000000002a9f0	b	0x2aa7c
000000000002a9f4	bl	_ThrowArrayIndexOutOfBoundsException
000000000002a9f8	b	0x2aa7c
000000000002a9fc	bl	_ThrowArrayIndexOutOfBoundsException
000000000002aa00	b	0x2aa7c
000000000002aa04	bl	_ThrowArrayIndexOutOfBoundsException
000000000002aa08	b	0x2aa7c
000000000002aa0c	bl	_ThrowArrayIndexOutOfBoundsException
000000000002aa10	b	0x2aa7c
000000000002aa14	bl	_ThrowArrayIndexOutOfBoundsException
000000000002aa18	b	0x2aa7c
000000000002aa1c	bl	_ThrowArrayIndexOutOfBoundsException
000000000002aa20	b	0x2aa7c
000000000002aa24	bl	_ThrowArrayIndexOutOfBoundsException
000000000002aa28	b	0x2aa7c
000000000002aa2c	bl	_ThrowArrayIndexOutOfBoundsException
000000000002aa30	b	0x2aa7c
000000000002aa34	bl	_ThrowIllegalArgumentException
000000000002aa38	b	0x2aa7c
000000000002aa3c	b	0x2aa44
000000000002aa40	b	0x2aa44
000000000002aa44	mov	x1, x0
000000000002aa48	mov	x0, x19
000000000002aa4c	blr	x23
000000000002aa50	ldr	x8, [x0]
000000000002aa54	mov	x9, sp
000000000002aa58	str	x9, [x8, #0x110]
000000000002aa5c	mov	x0, x1
000000000002aa60	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002aa64	ldr	x8, [x0, #0x8]
000000000002aa68	ldr	x20, [x8]
000000000002aa6c	str	x20, [sp, #0x20]
000000000002aa70	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002aa74	mov	x0, x20
000000000002aa78	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002aa7c	brk	#0x1
000000000002aa80	mov	x1, x0
000000000002aa84	mov	x0, x19
000000000002aa88	blr	x23
000000000002aa8c	ldr	x8, [x0]
000000000002aa90	mov	x9, sp
000000000002aa94	str	x9, [x8, #0x110]
000000000002aa98	mov	x0, x1
000000000002aa9c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002aaa0	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002aaa4	b	0x2aaa4
_objc2kotlin_kfun:com.example.reversecomplementkmm.ReverseComplementKmm#<get-operator>(){}com.example.kmm.utils.IOAndBufferOperator:
000000000002aaa8	sub	sp, sp, #0x70
000000000002aaac	stp	x24, x23, [sp, #0x30]
000000000002aab0	stp	x22, x21, [sp, #0x40]
000000000002aab4	stp	x20, x19, [sp, #0x50]
000000000002aab8	stp	x29, x30, [sp, #0x60]
000000000002aabc	add	x29, sp, #0x60
000000000002aac0	mov	x20, x0
000000000002aac4	movi.16b	v0, #0x0
000000000002aac8	stp	q0, q0, [sp, #0x10]
000000000002aacc	str	q0, [sp]
000000000002aad0	mov	x8, sp
000000000002aad4	add	x21, x8, #0x18
000000000002aad8	bl	_Kotlin_initRuntimeIfNeeded
000000000002aadc	adrp	x19, 80 ; 0x7a000
000000000002aae0	add	x19, x19, #0x4e0
000000000002aae4	ldr	x22, [x19]
000000000002aae8	mov	x0, x19
000000000002aaec	blr	x22
000000000002aaf0	ldr	x8, [x0]
000000000002aaf4	add	x0, x8, #0x138
000000000002aaf8	ldaxr	w8, [x0]
000000000002aafc	stlxr	w9, wzr, [x0]
000000000002ab00	cbnz	w9, 0x2aaf8
000000000002ab04	adr	x23, #0x69a05
000000000002ab08	nop
000000000002ab0c	cmp	w8, #0x1
000000000002ab10	b.ne	0x2ab20
000000000002ab14	ldarb	w8, [x23]
000000000002ab18	tbz	w8, #0x0, 0x2ab20
000000000002ab1c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002ab20	mov	x0, x19
000000000002ab24	blr	x22
000000000002ab28	ldr	x8, [x0]
000000000002ab2c	ldr	x9, [x8, #0x110]
000000000002ab30	mov	x10, sp
000000000002ab34	str	x10, [x8, #0x110]
000000000002ab38	mov	x8, #0x600000000
000000000002ab3c	stp	x9, x8, [sp, #0x8]
000000000002ab40	ldarb	w8, [x23]
000000000002ab44	tbz	w8, #0x0, 0x2ab4c
000000000002ab48	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002ab4c	cbz	x20, 0x2abc8
000000000002ab50	nop
000000000002ab54	ldr	x1, #0x69c04
000000000002ab58	mov	x0, x20
000000000002ab5c	mov	x2, x21
000000000002ab60	bl	0x55ca8 ; Objc message: -[x0 hasNext]
000000000002ab64	mov	x20, x0
000000000002ab68	ldarb	w8, [x23]
000000000002ab6c	tbz	w8, #0x0, 0x2ab74
000000000002ab70	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002ab74	ldr	x0, [x20, #0x28]
000000000002ab78	str	x0, [sp, #0x28]
000000000002ab7c	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002ab80	mov	x1, x0
000000000002ab84	mov	x0, x19
000000000002ab88	blr	x22
000000000002ab8c	ldr	x8, [x0]
000000000002ab90	ldr	x9, [sp, #0x8]
000000000002ab94	str	x9, [x8, #0x110]
000000000002ab98	add	x8, x8, #0x138
000000000002ab9c	mov	w9, #0x1
000000000002aba0	ldaxr	wzr, [x8]
000000000002aba4	stlxr	w10, w9, [x8]
000000000002aba8	cbnz	w10, 0x2aba0
000000000002abac	mov	x0, x1
000000000002abb0	ldp	x29, x30, [sp, #0x60]
000000000002abb4	ldp	x20, x19, [sp, #0x50]
000000000002abb8	ldp	x22, x21, [sp, #0x40]
000000000002abbc	ldp	x24, x23, [sp, #0x30]
000000000002abc0	add	sp, sp, #0x70
000000000002abc4	b	0x55c54 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002abc8	str	xzr, [sp, #0x18]
000000000002abcc	ldarb	w8, [x23]
000000000002abd0	tbnz	w8, #0x0, 0x2ab70
000000000002abd4	b	0x2ab74
000000000002abd8	mov	x1, x0
000000000002abdc	mov	x0, x19
000000000002abe0	blr	x22
000000000002abe4	ldr	x8, [x0]
000000000002abe8	mov	x9, sp
000000000002abec	str	x9, [x8, #0x110]
000000000002abf0	mov	x0, x1
000000000002abf4	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002abf8	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002abfc	b	0x2abfc
_objc2kotlin_kfun:com.example.kmm.utils.IOAndBufferOperator#<init>(){}:
000000000002ac00	sub	sp, sp, #0x70
000000000002ac04	stp	x24, x23, [sp, #0x30]
000000000002ac08	stp	x22, x21, [sp, #0x40]
000000000002ac0c	stp	x20, x19, [sp, #0x50]
000000000002ac10	stp	x29, x30, [sp, #0x60]
000000000002ac14	add	x29, sp, #0x60
000000000002ac18	mov	x19, x0
000000000002ac1c	str	xzr, [sp, #0x20]
000000000002ac20	movi.16b	v0, #0x0
000000000002ac24	stp	q0, q0, [sp]
000000000002ac28	mov	x8, sp
000000000002ac2c	add	x21, x8, #0x18
000000000002ac30	bl	_Kotlin_initRuntimeIfNeeded
000000000002ac34	adrp	x20, 80 ; 0x7a000
000000000002ac38	add	x20, x20, #0x4e0
000000000002ac3c	ldr	x22, [x20]
000000000002ac40	mov	x0, x20
000000000002ac44	blr	x22
000000000002ac48	ldr	x8, [x0]
000000000002ac4c	add	x0, x8, #0x138
000000000002ac50	ldaxr	w8, [x0]
000000000002ac54	stlxr	w9, wzr, [x0]
000000000002ac58	cbnz	w9, 0x2ac50
000000000002ac5c	adr	x23, #0x698ad
000000000002ac60	nop
000000000002ac64	cmp	w8, #0x1
000000000002ac68	b.ne	0x2ac78
000000000002ac6c	ldarb	w8, [x23]
000000000002ac70	tbz	w8, #0x0, 0x2ac78
000000000002ac74	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002ac78	mov	x0, x20
000000000002ac7c	blr	x22
000000000002ac80	ldr	x8, [x0]
000000000002ac84	ldr	x9, [x8, #0x110]
000000000002ac88	mov	x10, sp
000000000002ac8c	str	x10, [x8, #0x110]
000000000002ac90	mov	x8, #0x500000000
000000000002ac94	stp	x9, x8, [sp, #0x8]
000000000002ac98	ldarb	w8, [x23]
000000000002ac9c	tbz	w8, #0x0, 0x2aca4
000000000002aca0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002aca4	cbz	x19, 0x2ad0c
000000000002aca8	nop
000000000002acac	ldr	x1, #0x69aac
000000000002acb0	mov	x0, x19
000000000002acb4	mov	x2, x21
000000000002acb8	bl	0x55ca8 ; Objc message: -[x0 hasNext]
000000000002acbc	ldarb	w8, [x23]
000000000002acc0	tbz	w8, #0x0, 0x2acc8
000000000002acc4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002acc8	mov	x0, x20
000000000002accc	blr	x22
000000000002acd0	ldr	x8, [x0]
000000000002acd4	ldr	x9, [sp, #0x8]
000000000002acd8	str	x9, [x8, #0x110]
000000000002acdc	add	x8, x8, #0x138
000000000002ace0	mov	w9, #0x1
000000000002ace4	ldaxr	wzr, [x8]
000000000002ace8	stlxr	w10, w9, [x8]
000000000002acec	cbnz	w10, 0x2ace4
000000000002acf0	mov	x0, x19
000000000002acf4	ldp	x29, x30, [sp, #0x60]
000000000002acf8	ldp	x20, x19, [sp, #0x50]
000000000002acfc	ldp	x22, x21, [sp, #0x40]
000000000002ad00	ldp	x24, x23, [sp, #0x30]
000000000002ad04	add	sp, sp, #0x70
000000000002ad08	ret
000000000002ad0c	str	xzr, [sp, #0x18]
000000000002ad10	ldarb	w8, [x23]
000000000002ad14	tbnz	w8, #0x0, 0x2acc4
000000000002ad18	b	0x2acc8
000000000002ad1c	mov	x1, x0
000000000002ad20	mov	x0, x20
000000000002ad24	blr	x22
000000000002ad28	ldr	x8, [x0]
000000000002ad2c	mov	x9, sp
000000000002ad30	str	x9, [x8, #0x110]
000000000002ad34	mov	x0, x1
000000000002ad38	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002ad3c	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002ad40	b	0x2ad40
_objc2kotlin_kfun:com.example.kmm.utils.IOAndBufferOperator#flush(){}:
000000000002ad44	sub	sp, sp, #0x70
000000000002ad48	stp	x24, x23, [sp, #0x30]
000000000002ad4c	stp	x22, x21, [sp, #0x40]
000000000002ad50	stp	x20, x19, [sp, #0x50]
000000000002ad54	stp	x29, x30, [sp, #0x60]
000000000002ad58	add	x29, sp, #0x60
000000000002ad5c	mov	x20, x0
000000000002ad60	str	xzr, [sp, #0x20]
000000000002ad64	movi.16b	v0, #0x0
000000000002ad68	stp	q0, q0, [sp]
000000000002ad6c	mov	x8, sp
000000000002ad70	add	x21, x8, #0x18
000000000002ad74	bl	_Kotlin_initRuntimeIfNeeded
000000000002ad78	adrp	x19, 80 ; 0x7a000
000000000002ad7c	add	x19, x19, #0x4e0
000000000002ad80	ldr	x22, [x19]
000000000002ad84	mov	x0, x19
000000000002ad88	blr	x22
000000000002ad8c	ldr	x8, [x0]
000000000002ad90	add	x0, x8, #0x138
000000000002ad94	ldaxr	w8, [x0]
000000000002ad98	stlxr	w9, wzr, [x0]
000000000002ad9c	cbnz	w9, 0x2ad94
000000000002ada0	adr	x23, #0x69769
000000000002ada4	nop
000000000002ada8	cmp	w8, #0x1
000000000002adac	b.ne	0x2adbc
000000000002adb0	ldarb	w8, [x23]
000000000002adb4	tbz	w8, #0x0, 0x2adbc
000000000002adb8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002adbc	mov	x0, x19
000000000002adc0	blr	x22
000000000002adc4	ldr	x8, [x0]
000000000002adc8	ldr	x9, [x8, #0x110]
000000000002adcc	mov	x10, sp
000000000002add0	str	x10, [x8, #0x110]
000000000002add4	mov	x8, #0x500000000
000000000002add8	stp	x9, x8, [sp, #0x8]
000000000002addc	ldarb	w8, [x23]
000000000002ade0	tbz	w8, #0x0, 0x2ade8
000000000002ade4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002ade8	cbz	x20, 0x2ae04
000000000002adec	nop
000000000002adf0	ldr	x1, #0x69968
000000000002adf4	mov	x0, x20
000000000002adf8	mov	x2, x21
000000000002adfc	bl	0x55ca8 ; Objc message: -[x0 hasNext]
000000000002ae00	b	0x2ae08
000000000002ae04	str	xzr, [sp, #0x18]
000000000002ae08	bl	"_kfun:com.example.kmm.utils.IOAndBufferOperator#flush(){}"
000000000002ae0c	mov	x0, x19
000000000002ae10	blr	x22
000000000002ae14	ldr	x8, [x0]
000000000002ae18	ldr	x9, [sp, #0x8]
000000000002ae1c	str	x9, [x8, #0x110]
000000000002ae20	add	x8, x8, #0x138
000000000002ae24	mov	w9, #0x1
000000000002ae28	ldaxr	wzr, [x8]
000000000002ae2c	stlxr	w10, w9, [x8]
000000000002ae30	cbnz	w10, 0x2ae28
000000000002ae34	ldp	x29, x30, [sp, #0x60]
000000000002ae38	ldp	x20, x19, [sp, #0x50]
000000000002ae3c	ldp	x22, x21, [sp, #0x40]
000000000002ae40	ldp	x24, x23, [sp, #0x30]
000000000002ae44	add	sp, sp, #0x70
000000000002ae48	ret
000000000002ae4c	mov	x1, x0
000000000002ae50	mov	x0, x19
000000000002ae54	blr	x22
000000000002ae58	ldr	x8, [x0]
000000000002ae5c	mov	x9, sp
000000000002ae60	str	x9, [x8, #0x110]
000000000002ae64	mov	x0, x1
000000000002ae68	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002ae6c	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002ae70	b	0x2ae70
_objc2kotlin_kfun:com.example.kmm.utils.IOAndBufferOperator#read(kotlin.ByteArray;kotlin.Int;kotlin.Int){}kotlin.Int:
000000000002ae74	sub	sp, sp, #0x90
000000000002ae78	stp	x28, x27, [sp, #0x30]
000000000002ae7c	stp	x26, x25, [sp, #0x40]
000000000002ae80	stp	x24, x23, [sp, #0x50]
000000000002ae84	stp	x22, x21, [sp, #0x60]
000000000002ae88	stp	x20, x19, [sp, #0x70]
000000000002ae8c	stp	x29, x30, [sp, #0x80]
000000000002ae90	add	x29, sp, #0x80
000000000002ae94	mov	x20, x4
000000000002ae98	mov	x21, x3
000000000002ae9c	mov	x22, x2
000000000002aea0	mov	x24, x0
000000000002aea4	movi.16b	v0, #0x0
000000000002aea8	stp	q0, q0, [sp, #0x10]
000000000002aeac	str	q0, [sp]
000000000002aeb0	mov	x8, sp
000000000002aeb4	add	x23, x8, #0x20
000000000002aeb8	add	x25, x8, #0x18
000000000002aebc	bl	_Kotlin_initRuntimeIfNeeded
000000000002aec0	adrp	x19, 80 ; 0x7a000
000000000002aec4	add	x19, x19, #0x4e0
000000000002aec8	ldr	x26, [x19]
000000000002aecc	mov	x0, x19
000000000002aed0	blr	x26
000000000002aed4	ldr	x8, [x0]
000000000002aed8	add	x0, x8, #0x138
000000000002aedc	ldaxr	w8, [x0]
000000000002aee0	stlxr	w9, wzr, [x0]
000000000002aee4	cbnz	w9, 0x2aedc
000000000002aee8	adr	x27, #0x69621
000000000002aeec	nop
000000000002aef0	cmp	w8, #0x1
000000000002aef4	b.ne	0x2af04
000000000002aef8	ldarb	w8, [x27]
000000000002aefc	tbz	w8, #0x0, 0x2af04
000000000002af00	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002af04	mov	x0, x19
000000000002af08	blr	x26
000000000002af0c	ldr	x8, [x0]
000000000002af10	ldr	x9, [x8, #0x110]
000000000002af14	mov	x10, sp
000000000002af18	str	x10, [x8, #0x110]
000000000002af1c	mov	x8, #0x600000000
000000000002af20	stp	x9, x8, [sp, #0x8]
000000000002af24	ldarb	w8, [x27]
000000000002af28	tbz	w8, #0x0, 0x2af30
000000000002af2c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002af30	adrp	x27, 106 ; 0x94000
000000000002af34	cbz	x24, 0x2af60
000000000002af38	ldr	x1, [x27, #0x758]
000000000002af3c	mov	x0, x24
000000000002af40	mov	x2, x25
000000000002af44	bl	0x55ca8 ; Objc message: -[x0 hasNext]
000000000002af48	cbz	x22, 0x2af68
000000000002af4c	ldr	x1, [x27, #0x758]
000000000002af50	mov	x0, x22
000000000002af54	mov	x2, x23
000000000002af58	bl	0x55ca8 ; Objc message: -[x0 hasNext]
000000000002af5c	b	0x2af70
000000000002af60	str	xzr, [sp, #0x18]
000000000002af64	cbnz	x22, 0x2af4c
000000000002af68	mov	x0, #0x0
000000000002af6c	str	xzr, [sp, #0x20]
000000000002af70	mov	x1, x21
000000000002af74	mov	x2, x20
000000000002af78	bl	"_kfun:com.example.kmm.utils.IOAndBufferOperator#read(kotlin.ByteArray;kotlin.Int;kotlin.Int){}kotlin.Int"
000000000002af7c	mov	x1, x0
000000000002af80	mov	x0, x19
000000000002af84	blr	x26
000000000002af88	ldr	x8, [x0]
000000000002af8c	ldr	x9, [sp, #0x8]
000000000002af90	str	x9, [x8, #0x110]
000000000002af94	add	x8, x8, #0x138
000000000002af98	mov	w9, #0x1
000000000002af9c	ldaxr	wzr, [x8]
000000000002afa0	stlxr	w10, w9, [x8]
000000000002afa4	cbnz	w10, 0x2af9c
000000000002afa8	mov	x0, x1
000000000002afac	ldp	x29, x30, [sp, #0x80]
000000000002afb0	ldp	x20, x19, [sp, #0x70]
000000000002afb4	ldp	x22, x21, [sp, #0x60]
000000000002afb8	ldp	x24, x23, [sp, #0x50]
000000000002afbc	ldp	x26, x25, [sp, #0x40]
000000000002afc0	ldp	x28, x27, [sp, #0x30]
000000000002afc4	add	sp, sp, #0x90
000000000002afc8	ret
000000000002afcc	mov	x1, x0
000000000002afd0	mov	x0, x19
000000000002afd4	blr	x26
000000000002afd8	ldr	x8, [x0]
000000000002afdc	mov	x9, sp
000000000002afe0	str	x9, [x8, #0x110]
000000000002afe4	mov	x0, x1
000000000002afe8	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002afec	ldr	x8, [x0, #0x8]
000000000002aff0	ldr	x20, [x8]
000000000002aff4	str	x20, [sp, #0x28]
000000000002aff8	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002affc	mov	x0, x20
000000000002b000	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002b004	brk	#0x1
000000000002b008	mov	x1, x0
000000000002b00c	mov	x0, x19
000000000002b010	blr	x26
000000000002b014	ldr	x8, [x0]
000000000002b018	mov	x9, sp
000000000002b01c	str	x9, [x8, #0x110]
000000000002b020	mov	x0, x1
000000000002b024	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002b028	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002b02c	b	0x2b02c
_objc2kotlin_kfun:com.example.kmm.utils.IOAndBufferOperator#writeBytes(kotlin.ByteArray;kotlin.Int;kotlin.Int){}:
000000000002b030	sub	sp, sp, #0x90
000000000002b034	stp	x28, x27, [sp, #0x30]
000000000002b038	stp	x26, x25, [sp, #0x40]
000000000002b03c	stp	x24, x23, [sp, #0x50]
000000000002b040	stp	x22, x21, [sp, #0x60]
000000000002b044	stp	x20, x19, [sp, #0x70]
000000000002b048	stp	x29, x30, [sp, #0x80]
000000000002b04c	add	x29, sp, #0x80
000000000002b050	mov	x20, x4
000000000002b054	mov	x21, x3
000000000002b058	mov	x22, x2
000000000002b05c	mov	x24, x0
000000000002b060	movi.16b	v0, #0x0
000000000002b064	stp	q0, q0, [sp, #0x10]
000000000002b068	str	q0, [sp]
000000000002b06c	mov	x8, sp
000000000002b070	add	x23, x8, #0x20
000000000002b074	add	x25, x8, #0x18
000000000002b078	bl	_Kotlin_initRuntimeIfNeeded
000000000002b07c	adrp	x19, 79 ; 0x7a000
000000000002b080	add	x19, x19, #0x4e0
000000000002b084	ldr	x26, [x19]
000000000002b088	mov	x0, x19
000000000002b08c	blr	x26
000000000002b090	ldr	x8, [x0]
000000000002b094	add	x0, x8, #0x138
000000000002b098	ldaxr	w8, [x0]
000000000002b09c	stlxr	w9, wzr, [x0]
000000000002b0a0	cbnz	w9, 0x2b098
000000000002b0a4	adr	x27, #0x69465
000000000002b0a8	nop
000000000002b0ac	cmp	w8, #0x1
000000000002b0b0	b.ne	0x2b0c0
000000000002b0b4	ldarb	w8, [x27]
000000000002b0b8	tbz	w8, #0x0, 0x2b0c0
000000000002b0bc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002b0c0	mov	x0, x19
000000000002b0c4	blr	x26
000000000002b0c8	ldr	x8, [x0]
000000000002b0cc	ldr	x9, [x8, #0x110]
000000000002b0d0	mov	x10, sp
000000000002b0d4	str	x10, [x8, #0x110]
000000000002b0d8	mov	x8, #0x600000000
000000000002b0dc	stp	x9, x8, [sp, #0x8]
000000000002b0e0	ldarb	w8, [x27]
000000000002b0e4	tbz	w8, #0x0, 0x2b0ec
000000000002b0e8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b0ec	adrp	x27, 105 ; 0x94000
000000000002b0f0	cbz	x24, 0x2b11c
000000000002b0f4	ldr	x1, [x27, #0x758]
000000000002b0f8	mov	x0, x24
000000000002b0fc	mov	x2, x25
000000000002b100	bl	0x55ca8 ; Objc message: -[x0 hasNext]
000000000002b104	cbz	x22, 0x2b124
000000000002b108	ldr	x1, [x27, #0x758]
000000000002b10c	mov	x0, x22
000000000002b110	mov	x2, x23
000000000002b114	bl	0x55ca8 ; Objc message: -[x0 hasNext]
000000000002b118	b	0x2b12c
000000000002b11c	str	xzr, [sp, #0x18]
000000000002b120	cbnz	x22, 0x2b108
000000000002b124	mov	x0, #0x0
000000000002b128	str	xzr, [sp, #0x20]
000000000002b12c	mov	x1, x21
000000000002b130	mov	x2, x20
000000000002b134	bl	"_kfun:com.example.kmm.utils.IOAndBufferOperator#writeBytes(kotlin.ByteArray;kotlin.Int;kotlin.Int){}"
000000000002b138	mov	x0, x19
000000000002b13c	blr	x26
000000000002b140	ldr	x8, [x0]
000000000002b144	ldr	x9, [sp, #0x8]
000000000002b148	str	x9, [x8, #0x110]
000000000002b14c	add	x8, x8, #0x138
000000000002b150	mov	w9, #0x1
000000000002b154	ldaxr	wzr, [x8]
000000000002b158	stlxr	w10, w9, [x8]
000000000002b15c	cbnz	w10, 0x2b154
000000000002b160	ldp	x29, x30, [sp, #0x80]
000000000002b164	ldp	x20, x19, [sp, #0x70]
000000000002b168	ldp	x22, x21, [sp, #0x60]
000000000002b16c	ldp	x24, x23, [sp, #0x50]
000000000002b170	ldp	x26, x25, [sp, #0x40]
000000000002b174	ldp	x28, x27, [sp, #0x30]
000000000002b178	add	sp, sp, #0x90
000000000002b17c	ret
000000000002b180	mov	x1, x0
000000000002b184	mov	x0, x19
000000000002b188	blr	x26
000000000002b18c	ldr	x8, [x0]
000000000002b190	mov	x9, sp
000000000002b194	str	x9, [x8, #0x110]
000000000002b198	mov	x0, x1
000000000002b19c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002b1a0	ldr	x8, [x0, #0x8]
000000000002b1a4	ldr	x20, [x8]
000000000002b1a8	str	x20, [sp, #0x28]
000000000002b1ac	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002b1b0	mov	x0, x20
000000000002b1b4	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002b1b8	brk	#0x1
000000000002b1bc	mov	x1, x0
000000000002b1c0	mov	x0, x19
000000000002b1c4	blr	x26
000000000002b1c8	ldr	x8, [x0]
000000000002b1cc	mov	x9, sp
000000000002b1d0	str	x9, [x8, #0x110]
000000000002b1d4	mov	x0, x1
000000000002b1d8	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002b1dc	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002b1e0	b	0x2b1e0
_objc2kotlin_kfun:kotlin.ByteArray#<init>(kotlin.Int){}:
000000000002b1e4	sub	sp, sp, #0x70
000000000002b1e8	stp	x24, x23, [sp, #0x30]
000000000002b1ec	stp	x22, x21, [sp, #0x40]
000000000002b1f0	stp	x20, x19, [sp, #0x50]
000000000002b1f4	stp	x29, x30, [sp, #0x60]
000000000002b1f8	add	x29, sp, #0x60
000000000002b1fc	mov	x20, x2
000000000002b200	str	xzr, [sp, #0x20]
000000000002b204	movi.16b	v0, #0x0
000000000002b208	stp	q0, q0, [sp]
000000000002b20c	bl	_Kotlin_initRuntimeIfNeeded
000000000002b210	adrp	x19, 79 ; 0x7a000
000000000002b214	add	x19, x19, #0x4e0
000000000002b218	ldr	x22, [x19]
000000000002b21c	mov	x0, x19
000000000002b220	blr	x22
000000000002b224	ldr	x8, [x0]
000000000002b228	add	x0, x8, #0x138
000000000002b22c	ldaxr	w8, [x0]
000000000002b230	stlxr	w9, wzr, [x0]
000000000002b234	cbnz	w9, 0x2b22c
000000000002b238	adr	x23, #0x692d1
000000000002b23c	nop
000000000002b240	cmp	w8, #0x1
000000000002b244	b.ne	0x2b254
000000000002b248	ldarb	w8, [x23]
000000000002b24c	tbz	w8, #0x0, 0x2b254
000000000002b250	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002b254	mov	x0, x19
000000000002b258	blr	x22
000000000002b25c	ldr	x8, [x0]
000000000002b260	ldr	x9, [x8, #0x110]
000000000002b264	mov	x10, sp
000000000002b268	str	x10, [x8, #0x110]
000000000002b26c	mov	x8, #0x500000000
000000000002b270	stp	x9, x8, [sp, #0x8]
000000000002b274	ldarb	w8, [x23]
000000000002b278	tbz	w8, #0x0, 0x2b280
000000000002b27c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b280	tbnz	w20, #0x1f, 0x2b320
000000000002b284	mov	x0, x19
000000000002b288	blr	x22
000000000002b28c	ldr	x8, [x0]
000000000002b290	ldr	x8, [x8, #0x118]
000000000002b294	mov	w9, w20
000000000002b298	add	x9, x9, #0x1f
000000000002b29c	and	x1, x9, #0x1fffffff8
000000000002b2a0	add	x0, x8, #0x70
000000000002b2a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002b2a8	mov	x21, x0
000000000002b2ac	adr	x8, #0x35b84
000000000002b2b0	nop
000000000002b2b4	stp	x8, xzr, [x21, #0x10]!
000000000002b2b8	stur	xzr, [x21, #-0x8]
000000000002b2bc	str	w20, [x21, #0x8]
000000000002b2c0	str	x21, [sp, #0x20]
000000000002b2c4	ldarb	w8, [x23]
000000000002b2c8	tbz	w8, #0x0, 0x2b2d0
000000000002b2cc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b2d0	mov	x0, x21
000000000002b2d4	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002b2d8	mov	x1, x0
000000000002b2dc	mov	x0, x19
000000000002b2e0	blr	x22
000000000002b2e4	ldr	x8, [x0]
000000000002b2e8	ldr	x9, [sp, #0x8]
000000000002b2ec	str	x9, [x8, #0x110]
000000000002b2f0	add	x8, x8, #0x138
000000000002b2f4	mov	w9, #0x1
000000000002b2f8	ldaxr	wzr, [x8]
000000000002b2fc	stlxr	w10, w9, [x8]
000000000002b300	cbnz	w10, 0x2b2f8
000000000002b304	mov	x0, x1
000000000002b308	ldp	x29, x30, [sp, #0x60]
000000000002b30c	ldp	x20, x19, [sp, #0x50]
000000000002b310	ldp	x22, x21, [sp, #0x40]
000000000002b314	ldp	x24, x23, [sp, #0x30]
000000000002b318	add	sp, sp, #0x70
000000000002b31c	b	0x55c54 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002b320	bl	_ThrowIllegalArgumentException
000000000002b324	brk	#0x1
000000000002b328	mov	x1, x0
000000000002b32c	mov	x0, x19
000000000002b330	blr	x22
000000000002b334	ldr	x8, [x0]
000000000002b338	mov	x9, sp
000000000002b33c	str	x9, [x8, #0x110]
000000000002b340	mov	x0, x1
000000000002b344	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002b348	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002b34c	b	0x2b34c
_objc2kotlin_kfun:kotlin.ByteArray#<init>(kotlin.Int;kotlin.Function1<kotlin.Int,kotlin.Byte>){}:
000000000002b350	sub	sp, sp, #0xd0
000000000002b354	stp	x28, x27, [sp, #0x70]
000000000002b358	stp	x26, x25, [sp, #0x80]
000000000002b35c	stp	x24, x23, [sp, #0x90]
000000000002b360	stp	x22, x21, [sp, #0xa0]
000000000002b364	stp	x20, x19, [sp, #0xb0]
000000000002b368	stp	x29, x30, [sp, #0xc0]
000000000002b36c	add	x29, sp, #0xc0
000000000002b370	mov	x20, x3
000000000002b374	mov	x23, x2
000000000002b378	movi.16b	v0, #0x0
000000000002b37c	stp	q0, q0, [sp, #0x20]
000000000002b380	str	q0, [sp, #0x10]
000000000002b384	bl	_Kotlin_initRuntimeIfNeeded
000000000002b388	adrp	x25, 79 ; 0x7a000
000000000002b38c	add	x25, x25, #0x4e0
000000000002b390	ldr	x24, [x25]
000000000002b394	mov	x0, x25
000000000002b398	blr	x24
000000000002b39c	ldr	x8, [x0]
000000000002b3a0	add	x0, x8, #0x138
000000000002b3a4	ldaxr	w8, [x0]
000000000002b3a8	stlxr	w9, wzr, [x0]
000000000002b3ac	cbnz	w9, 0x2b3a4
000000000002b3b0	adr	x27, #0x69159
000000000002b3b4	nop
000000000002b3b8	cmp	w8, #0x1
000000000002b3bc	b.ne	0x2b3cc
000000000002b3c0	ldarb	w8, [x27]
000000000002b3c4	tbz	w8, #0x0, 0x2b3cc
000000000002b3c8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002b3cc	mov	x0, x25
000000000002b3d0	blr	x24
000000000002b3d4	ldr	x8, [x0]
000000000002b3d8	ldr	x9, [x8, #0x110]
000000000002b3dc	add	x10, sp, #0x10
000000000002b3e0	str	x10, [x8, #0x110]
000000000002b3e4	mov	x8, #0x600000000
000000000002b3e8	stp	x9, x8, [sp, #0x18]
000000000002b3ec	ldarb	w8, [x27]
000000000002b3f0	tbz	w8, #0x0, 0x2b3f8
000000000002b3f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b3f8	movi.16b	v0, #0x0
000000000002b3fc	stp	q0, q0, [sp, #0x40]
000000000002b400	mov	x0, x25
000000000002b404	blr	x24
000000000002b408	ldr	x8, [x0]
000000000002b40c	ldr	x9, [x8, #0x110]
000000000002b410	add	x10, sp, #0x40
000000000002b414	str	x10, [x8, #0x110]
000000000002b418	mov	x8, #0x400000000
000000000002b41c	stp	x9, x8, [sp, #0x48]
000000000002b420	cbz	x20, 0x2b670
000000000002b424	mov	x0, x20
000000000002b428	bl	0x55cf0 ; symbol stub for: _objc_retainBlock
000000000002b42c	mov	x1, x0
000000000002b430	add	x8, sp, #0x40
000000000002b434	add	x2, x8, #0x18
000000000002b438	adr	x0, #0x44f68
000000000002b43c	nop
000000000002b440	bl	_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject
000000000002b444	mov	x20, x0
000000000002b448	str	x0, [sp, #0x28]
000000000002b44c	mov	x0, x25
000000000002b450	blr	x24
000000000002b454	ldr	x8, [x0]
000000000002b458	ldr	x9, [sp, #0x48]
000000000002b45c	str	x9, [x8, #0x110]
000000000002b460	tbnz	w23, #0x1f, 0x2b68c
000000000002b464	ldr	x8, [x8, #0x118]
000000000002b468	mov	w9, w23
000000000002b46c	add	x9, x9, #0x1f
000000000002b470	and	x1, x9, #0x1fffffff8
000000000002b474	add	x0, x8, #0x70
000000000002b478	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002b47c	mov	x22, x0
000000000002b480	adr	x8, #0x359b0
000000000002b484	nop
000000000002b488	mov	x21, x0
000000000002b48c	str	x8, [x21, #0x10]!
000000000002b490	str	xzr, [x0, #0x18]
000000000002b494	str	xzr, [x0, #0x8]
000000000002b498	str	w23, [x0, #0x18]
000000000002b49c	str	x21, [sp, #0x38]
000000000002b4a0	movi.16b	v0, #0x0
000000000002b4a4	stp	q0, q0, [sp, #0x40]
000000000002b4a8	str	xzr, [sp, #0x60]
000000000002b4ac	add	x19, sp, #0x40
000000000002b4b0	mov	x0, x25
000000000002b4b4	str	x24, [sp, #0x8]
000000000002b4b8	blr	x24
000000000002b4bc	ldr	x8, [x0]
000000000002b4c0	ldr	x9, [x8, #0x110]
000000000002b4c4	str	x19, [x8, #0x110]
000000000002b4c8	mov	x8, #0x500000000
000000000002b4cc	stp	x9, x8, [sp, #0x48]
000000000002b4d0	ldarb	w8, [x27]
000000000002b4d4	tbz	w8, #0x0, 0x2b4dc
000000000002b4d8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b4dc	subs	w28, w23, #0x1
000000000002b4e0	b.mi	0x2b5f8
000000000002b4e4	mov	w24, #0x0
000000000002b4e8	add	x23, x19, #0x20
000000000002b4ec	add	x25, x19, #0x18
000000000002b4f0	add	x19, x22, #0x20
000000000002b4f4	mov	w26, #0x2c
000000000002b4f8	ldarb	w8, [x27]
000000000002b4fc	tbz	w8, #0x0, 0x2b504
000000000002b500	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b504	mov	x0, x24
000000000002b508	mov	x1, x25
000000000002b50c	bl	"_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any"
000000000002b510	mov	x1, x0
000000000002b514	ldr	x8, [x20]
000000000002b518	and	x8, x8, #0xfffffffffffffffc
000000000002b51c	ldr	x8, [x8]
000000000002b520	ldr	w9, [x8, #0x3c]
000000000002b524	ldr	x8, [x8, #0x40]
000000000002b528	tbnz	w9, #0x1f, 0x2b534
000000000002b52c	and	x9, x9, x26
000000000002b530	b	0x2b5b8
000000000002b534	neg	w10, w9
000000000002b538	mvn	w9, w9
000000000002b53c	cmp	w10, #0x9
000000000002b540	b.ge	0x2b578
000000000002b544	cmp	w10, #0x2
000000000002b548	b.lt	0x2b5ac
000000000002b54c	mov	x10, #0x0
000000000002b550	mov	x11, x8
000000000002b554	ldr	w12, [x11]
000000000002b558	cmp	w12, #0x2b
000000000002b55c	b.gt	0x2b5b4
000000000002b560	add	x10, x10, #0x1
000000000002b564	add	x11, x11, #0x10
000000000002b568	cmp	x9, x10
000000000002b56c	b.ne	0x2b554
000000000002b570	mov	x10, x9
000000000002b574	b	0x2b5b4
000000000002b578	mov	w10, #0x0
000000000002b57c	add	w11, w9, w10
000000000002b580	cmp	w11, #0x0
000000000002b584	cinc	w11, w11, lt
000000000002b588	asr	w11, w11, #1
000000000002b58c	sbfiz	x12, x11, #4, #32
000000000002b590	ldr	w12, [x8, x12]
000000000002b594	cmp	w12, #0x2c
000000000002b598	csinc	w10, w10, w11, ge
000000000002b59c	csel	w9, w9, w11, lt
000000000002b5a0	cmp	w10, w9
000000000002b5a4	b.lt	0x2b57c
000000000002b5a8	b	0x2b5b4
000000000002b5ac	mov	w10, #0x0
000000000002b5b0	b	0x2b5b4
000000000002b5b4	sxtw	x9, w10
000000000002b5b8	add	x8, x8, x9, lsl #4
000000000002b5bc	ldr	x8, [x8, #0x8]
000000000002b5c0	ldr	x8, [x8]
000000000002b5c4	mov	x0, x20
000000000002b5c8	mov	x2, x23
000000000002b5cc	blr	x8
000000000002b5d0	ldr	w8, [x22, #0x18]
000000000002b5d4	cmp	w8, w24
000000000002b5d8	b.ls	0x2b694
000000000002b5dc	ldrb	w8, [x0, #0x8]
000000000002b5e0	ldr	xzr, [x21]
000000000002b5e4	strb	w8, [x19, w24, sxtw]
000000000002b5e8	add	w8, w24, #0x1
000000000002b5ec	cmp	w24, w28
000000000002b5f0	mov	x24, x8
000000000002b5f4	b.ne	0x2b4f8
000000000002b5f8	adrp	x25, 79 ; 0x7a000
000000000002b5fc	add	x25, x25, #0x4e0
000000000002b600	mov	x0, x25
000000000002b604	ldr	x24, [sp, #0x8]
000000000002b608	blr	x24
000000000002b60c	ldr	x8, [x0]
000000000002b610	ldr	x9, [sp, #0x48]
000000000002b614	str	x9, [x8, #0x110]
000000000002b618	mov	x0, x21
000000000002b61c	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002b620	mov	x1, x0
000000000002b624	mov	x0, x25
000000000002b628	blr	x24
000000000002b62c	ldr	x8, [x0]
000000000002b630	ldr	x9, [sp, #0x18]
000000000002b634	str	x9, [x8, #0x110]
000000000002b638	add	x8, x8, #0x138
000000000002b63c	mov	w9, #0x1
000000000002b640	ldaxr	wzr, [x8]
000000000002b644	stlxr	w10, w9, [x8]
000000000002b648	cbnz	w10, 0x2b640
000000000002b64c	mov	x0, x1
000000000002b650	ldp	x29, x30, [sp, #0xc0]
000000000002b654	ldp	x20, x19, [sp, #0xb0]
000000000002b658	ldp	x22, x21, [sp, #0xa0]
000000000002b65c	ldp	x24, x23, [sp, #0x90]
000000000002b660	ldp	x26, x25, [sp, #0x80]
000000000002b664	ldp	x28, x27, [sp, #0x70]
000000000002b668	add	sp, sp, #0xd0
000000000002b66c	b	0x55c54 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002b670	str	xzr, [sp, #0x28]
000000000002b674	mov	x0, x25
000000000002b678	blr	x24
000000000002b67c	ldr	x8, [x0]
000000000002b680	ldr	x9, [sp, #0x48]
000000000002b684	str	x9, [x8, #0x110]
000000000002b688	tbz	w23, #0x1f, 0x2b464
000000000002b68c	bl	_ThrowIllegalArgumentException
000000000002b690	b	0x2b70c
000000000002b694	bl	_ThrowArrayIndexOutOfBoundsException
000000000002b698	b	0x2b70c
000000000002b69c	mov	x1, x0
000000000002b6a0	mov	x0, x25
000000000002b6a4	blr	x24
000000000002b6a8	ldr	x8, [x0]
000000000002b6ac	add	x9, sp, #0x40
000000000002b6b0	str	x9, [x8, #0x110]
000000000002b6b4	mov	x0, x1
000000000002b6b8	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002b6bc	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002b6c0	b	0x2b6c0
000000000002b6c4	b	0x2b6c8
000000000002b6c8	mov	x1, x0
000000000002b6cc	adrp	x25, 79 ; 0x7a000
000000000002b6d0	add	x25, x25, #0x4e0
000000000002b6d4	mov	x0, x25
000000000002b6d8	ldr	x24, [sp, #0x8]
000000000002b6dc	blr	x24
000000000002b6e0	ldr	x8, [x0]
000000000002b6e4	add	x9, sp, #0x10
000000000002b6e8	str	x9, [x8, #0x110]
000000000002b6ec	mov	x0, x1
000000000002b6f0	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002b6f4	ldr	x8, [x0, #0x8]
000000000002b6f8	ldr	x20, [x8]
000000000002b6fc	str	x20, [sp, #0x30]
000000000002b700	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002b704	mov	x0, x20
000000000002b708	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002b70c	brk	#0x1
000000000002b710	mov	x1, x0
000000000002b714	mov	x0, x25
000000000002b718	blr	x24
000000000002b71c	ldr	x8, [x0]
000000000002b720	add	x9, sp, #0x10
000000000002b724	str	x9, [x8, #0x110]
000000000002b728	mov	x0, x1
000000000002b72c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002b730	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002b734	b	0x2b734
_invokeFunction1.79:
000000000002b738	sub	sp, sp, #0x80
000000000002b73c	stp	x28, x27, [sp, #0x20]
000000000002b740	stp	x26, x25, [sp, #0x30]
000000000002b744	stp	x24, x23, [sp, #0x40]
000000000002b748	stp	x22, x21, [sp, #0x50]
000000000002b74c	stp	x20, x19, [sp, #0x60]
000000000002b750	stp	x29, x30, [sp, #0x70]
000000000002b754	add	x29, sp, #0x70
000000000002b758	mov	x19, x2
000000000002b75c	mov	x22, x1
000000000002b760	mov	x23, x0
000000000002b764	movi.16b	v0, #0x0
000000000002b768	stp	q0, q0, [sp]
000000000002b76c	mov	x27, sp
000000000002b770	adrp	x20, 79 ; 0x7a000
000000000002b774	add	x20, x20, #0x4e0
000000000002b778	ldr	x25, [x20]
000000000002b77c	mov	x0, x20
000000000002b780	blr	x25
000000000002b784	ldr	x8, [x0]
000000000002b788	ldr	x9, [x8, #0x110]
000000000002b78c	str	x27, [x8, #0x110]
000000000002b790	mov	x8, #0x400000000
000000000002b794	stp	x9, x8, [sp, #0x8]
000000000002b798	adr	x26, #0x68d71
000000000002b79c	nop
000000000002b7a0	ldarb	w8, [x26]
000000000002b7a4	tbz	w8, #0x0, 0x2b7ac
000000000002b7a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b7ac	mov	x21, #0x0
000000000002b7b0	ldar	x8, [x23]
000000000002b7b4	ands	x8, x8, #0xfffffffffffffffc
000000000002b7b8	b.eq	0x2b7d0
000000000002b7bc	ldr	x9, [x8]
000000000002b7c0	cmp	x9, x8
000000000002b7c4	b.eq	0x2b7d0
000000000002b7c8	add	x8, x8, #0x10
000000000002b7cc	ldar	x21, [x8]
000000000002b7d0	ldr	x24, [x21, #0x10]
000000000002b7d4	mov	x0, x22
000000000002b7d8	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002b7dc	mov	x23, x0
000000000002b7e0	add	x22, x27, #0x18
000000000002b7e4	mov	x0, x20
000000000002b7e8	blr	x25
000000000002b7ec	ldr	x8, [x0]
000000000002b7f0	add	x8, x8, #0x138
000000000002b7f4	mov	w9, #0x1
000000000002b7f8	ldaxr	wzr, [x8]
000000000002b7fc	stlxr	w10, w9, [x8]
000000000002b800	cbnz	w10, 0x2b7f8
000000000002b804	mov	x0, x21
000000000002b808	mov	x1, x23
000000000002b80c	mov	x2, x24
000000000002b810	bl	0x2b934
000000000002b814	mov	x21, x0
000000000002b818	mov	x0, x23
000000000002b81c	bl	0x55ccc ; symbol stub for: _objc_release
000000000002b820	mov	x0, x20
000000000002b824	blr	x25
000000000002b828	ldr	x8, [x0]
000000000002b82c	add	x0, x8, #0x138
000000000002b830	ldaxr	w8, [x0]
000000000002b834	stlxr	w9, wzr, [x0]
000000000002b838	cbnz	w9, 0x2b830
000000000002b83c	cmp	w8, #0x1
000000000002b840	b.ne	0x2b850
000000000002b844	ldarb	w8, [x26]
000000000002b848	tbz	w8, #0x0, 0x2b850
000000000002b84c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002b850	cbz	x21, 0x2b870
000000000002b854	nop
000000000002b858	ldr	x1, #0x68f00
000000000002b85c	mov	x0, x21
000000000002b860	mov	x2, x22
000000000002b864	bl	0x55ca8 ; Objc message: -[x0 hasNext]
000000000002b868	mov	x22, x0
000000000002b86c	b	0x2b878
000000000002b870	mov	x22, #0x0
000000000002b874	str	xzr, [sp, #0x18]
000000000002b878	mov	x0, x20
000000000002b87c	blr	x25
000000000002b880	ldr	x8, [x0]
000000000002b884	add	x8, x8, #0x138
000000000002b888	mov	w9, #0x1
000000000002b88c	ldaxr	wzr, [x8]
000000000002b890	stlxr	w10, w9, [x8]
000000000002b894	cbnz	w10, 0x2b88c
000000000002b898	mov	x0, x21
000000000002b89c	bl	0x55ccc ; symbol stub for: _objc_release
000000000002b8a0	mov	x0, x20
000000000002b8a4	blr	x25
000000000002b8a8	ldr	x8, [x0]
000000000002b8ac	add	x0, x8, #0x138
000000000002b8b0	ldaxr	w8, [x0]
000000000002b8b4	stlxr	w9, wzr, [x0]
000000000002b8b8	cbnz	w9, 0x2b8b0
000000000002b8bc	cmp	w8, #0x1
000000000002b8c0	b.ne	0x2b8d0
000000000002b8c4	ldarb	w8, [x26]
000000000002b8c8	tbz	w8, #0x0, 0x2b8d0
000000000002b8cc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002b8d0	str	x22, [x19]
000000000002b8d4	mov	x0, x20
000000000002b8d8	blr	x25
000000000002b8dc	ldr	x8, [x0]
000000000002b8e0	ldr	x9, [sp, #0x8]
000000000002b8e4	str	x9, [x8, #0x110]
000000000002b8e8	mov	x0, x22
000000000002b8ec	ldp	x29, x30, [sp, #0x70]
000000000002b8f0	ldp	x20, x19, [sp, #0x60]
000000000002b8f4	ldp	x22, x21, [sp, #0x50]
000000000002b8f8	ldp	x24, x23, [sp, #0x40]
000000000002b8fc	ldp	x26, x25, [sp, #0x30]
000000000002b900	ldp	x28, x27, [sp, #0x20]
000000000002b904	add	sp, sp, #0x80
000000000002b908	ret
000000000002b90c	mov	x1, x0
000000000002b910	mov	x0, x20
000000000002b914	blr	x25
000000000002b918	ldr	x8, [x0]
000000000002b91c	mov	x9, sp
000000000002b920	str	x9, [x8, #0x110]
000000000002b924	mov	x0, x1
000000000002b928	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002b92c	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002b930	b	0x2b930
000000000002b934	stp	x29, x30, [sp, #-0x10]!
000000000002b938	mov	x29, sp
000000000002b93c	blr	x2
000000000002b940	mov	x29, x29
000000000002b944	ldp	x29, x30, [sp], #0x10
000000000002b948	b	0x55ce4 ; symbol stub for: _objc_retainAutoreleasedReturnValue
_objc2kotlin_Kotlin_ByteArray_get:
000000000002b94c	sub	sp, sp, #0x70
000000000002b950	stp	x24, x23, [sp, #0x30]
000000000002b954	stp	x22, x21, [sp, #0x40]
000000000002b958	stp	x20, x19, [sp, #0x50]
000000000002b95c	stp	x29, x30, [sp, #0x60]
000000000002b960	add	x29, sp, #0x60
000000000002b964	mov	x20, x2
000000000002b968	mov	x21, x0
000000000002b96c	str	xzr, [sp, #0x20]
000000000002b970	movi.16b	v0, #0x0
000000000002b974	stp	q0, q0, [sp]
000000000002b978	mov	x8, sp
000000000002b97c	add	x22, x8, #0x18
000000000002b980	bl	_Kotlin_initRuntimeIfNeeded
000000000002b984	adrp	x19, 79 ; 0x7a000
000000000002b988	add	x19, x19, #0x4e0
000000000002b98c	ldr	x23, [x19]
000000000002b990	mov	x0, x19
000000000002b994	blr	x23
000000000002b998	ldr	x8, [x0]
000000000002b99c	add	x0, x8, #0x138
000000000002b9a0	ldaxr	w8, [x0]
000000000002b9a4	stlxr	w9, wzr, [x0]
000000000002b9a8	cbnz	w9, 0x2b9a0
000000000002b9ac	adr	x24, #0x68b5d
000000000002b9b0	nop
000000000002b9b4	cmp	w8, #0x1
000000000002b9b8	b.ne	0x2b9c8
000000000002b9bc	ldarb	w8, [x24]
000000000002b9c0	tbz	w8, #0x0, 0x2b9c8
000000000002b9c4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002b9c8	mov	x0, x19
000000000002b9cc	blr	x23
000000000002b9d0	ldr	x8, [x0]
000000000002b9d4	ldr	x9, [x8, #0x110]
000000000002b9d8	mov	x10, sp
000000000002b9dc	str	x10, [x8, #0x110]
000000000002b9e0	mov	x8, #0x500000000
000000000002b9e4	stp	x9, x8, [sp, #0x8]
000000000002b9e8	ldarb	w8, [x24]
000000000002b9ec	tbz	w8, #0x0, 0x2b9f4
000000000002b9f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002b9f4	cbz	x21, 0x2ba64
000000000002b9f8	nop
000000000002b9fc	ldr	x1, #0x68d5c
000000000002ba00	mov	x0, x21
000000000002ba04	mov	x2, x22
000000000002ba08	bl	0x55ca8 ; Objc message: -[x0 hasNext]
000000000002ba0c	ldr	w8, [x0, #0x8]
000000000002ba10	cmp	w8, w20
000000000002ba14	b.ls	0x2ba78
000000000002ba18	add	x8, x0, w20, sxtw
000000000002ba1c	ldrb	w8, [x8, #0x10]
000000000002ba20	mov	x0, x19
000000000002ba24	blr	x23
000000000002ba28	ldr	x9, [x0]
000000000002ba2c	ldr	x10, [sp, #0x8]
000000000002ba30	str	x10, [x9, #0x110]
000000000002ba34	add	x9, x9, #0x138
000000000002ba38	mov	w10, #0x1
000000000002ba3c	ldaxr	wzr, [x9]
000000000002ba40	stlxr	w11, w10, [x9]
000000000002ba44	cbnz	w11, 0x2ba3c
000000000002ba48	sxtb	w0, w8
000000000002ba4c	ldp	x29, x30, [sp, #0x60]
000000000002ba50	ldp	x20, x19, [sp, #0x50]
000000000002ba54	ldp	x22, x21, [sp, #0x40]
000000000002ba58	ldp	x24, x23, [sp, #0x30]
000000000002ba5c	add	sp, sp, #0x70
000000000002ba60	ret
000000000002ba64	mov	x0, #0x0
000000000002ba68	str	xzr, [sp, #0x18]
000000000002ba6c	ldr	w8, [x0, #0x8]
000000000002ba70	cmp	w8, w20
000000000002ba74	b.hi	0x2ba18
000000000002ba78	bl	_ThrowArrayIndexOutOfBoundsException
000000000002ba7c	b	0x2bab8
000000000002ba80	mov	x1, x0
000000000002ba84	mov	x0, x19
000000000002ba88	blr	x23
000000000002ba8c	ldr	x8, [x0]
000000000002ba90	mov	x9, sp
000000000002ba94	str	x9, [x8, #0x110]
000000000002ba98	mov	x0, x1
000000000002ba9c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002baa0	ldr	x8, [x0, #0x8]
000000000002baa4	ldr	x20, [x8]
000000000002baa8	str	x20, [sp, #0x20]
000000000002baac	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002bab0	mov	x0, x20
000000000002bab4	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002bab8	brk	#0x1
000000000002babc	mov	x1, x0
000000000002bac0	mov	x0, x19
000000000002bac4	blr	x23
000000000002bac8	ldr	x8, [x0]
000000000002bacc	mov	x9, sp
000000000002bad0	str	x9, [x8, #0x110]
000000000002bad4	mov	x0, x1
000000000002bad8	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002badc	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002bae0	b	0x2bae0
_objc2kotlin_kfun:kotlin.ByteArray#iterator(){}kotlin.collections.ByteIterator:
000000000002bae4	sub	sp, sp, #0x70
000000000002bae8	stp	x24, x23, [sp, #0x30]
000000000002baec	stp	x22, x21, [sp, #0x40]
000000000002baf0	stp	x20, x19, [sp, #0x50]
000000000002baf4	stp	x29, x30, [sp, #0x60]
000000000002baf8	add	x29, sp, #0x60
000000000002bafc	mov	x20, x0
000000000002bb00	movi.16b	v0, #0x0
000000000002bb04	stp	q0, q0, [sp, #0x10]
000000000002bb08	str	q0, [sp]
000000000002bb0c	mov	x8, sp
000000000002bb10	add	x21, x8, #0x18
000000000002bb14	bl	_Kotlin_initRuntimeIfNeeded
000000000002bb18	adrp	x19, 79 ; 0x7a000
000000000002bb1c	add	x19, x19, #0x4e0
000000000002bb20	ldr	x22, [x19]
000000000002bb24	mov	x0, x19
000000000002bb28	blr	x22
000000000002bb2c	ldr	x8, [x0]
000000000002bb30	add	x0, x8, #0x138
000000000002bb34	ldaxr	w8, [x0]
000000000002bb38	stlxr	w9, wzr, [x0]
000000000002bb3c	cbnz	w9, 0x2bb34
000000000002bb40	adr	x23, #0x689c9
000000000002bb44	nop
000000000002bb48	cmp	w8, #0x1
000000000002bb4c	b.ne	0x2bb5c
000000000002bb50	ldarb	w8, [x23]
000000000002bb54	tbz	w8, #0x0, 0x2bb5c
000000000002bb58	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002bb5c	mov	x0, x19
000000000002bb60	blr	x22
000000000002bb64	ldr	x8, [x0]
000000000002bb68	ldr	x9, [x8, #0x110]
000000000002bb6c	mov	x10, sp
000000000002bb70	str	x10, [x8, #0x110]
000000000002bb74	mov	x8, #0x600000000
000000000002bb78	stp	x9, x8, [sp, #0x8]
000000000002bb7c	ldarb	w8, [x23]
000000000002bb80	tbz	w8, #0x0, 0x2bb88
000000000002bb84	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002bb88	cbz	x20, 0x2bc34
000000000002bb8c	nop
000000000002bb90	ldr	x1, #0x68bc8
000000000002bb94	mov	x0, x20
000000000002bb98	mov	x2, x21
000000000002bb9c	bl	0x55ca8 ; Objc message: -[x0 hasNext]
000000000002bba0	mov	x20, x0
000000000002bba4	ldarb	w8, [x23]
000000000002bba8	tbz	w8, #0x0, 0x2bbb0
000000000002bbac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002bbb0	mov	x0, x19
000000000002bbb4	blr	x22
000000000002bbb8	ldr	x8, [x0]
000000000002bbbc	ldr	x8, [x8, #0x118]
000000000002bbc0	add	x0, x8, #0x70
000000000002bbc4	mov	w1, #0x20
000000000002bbc8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000002bbcc	adr	x8, #0x354a4
000000000002bbd0	nop
000000000002bbd4	str	x8, [x0, #0x10]!
000000000002bbd8	stur	xzr, [x0, #-0x8]
000000000002bbdc	str	x0, [sp, #0x28]
000000000002bbe0	str	x20, [x0, #0x8]
000000000002bbe4	str	x0, [sp, #0x28]
000000000002bbe8	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002bbec	mov	x1, x0
000000000002bbf0	mov	x0, x19
000000000002bbf4	blr	x22
000000000002bbf8	ldr	x8, [x0]
000000000002bbfc	ldr	x9, [sp, #0x8]
000000000002bc00	str	x9, [x8, #0x110]
000000000002bc04	add	x8, x8, #0x138
000000000002bc08	mov	w9, #0x1
000000000002bc0c	ldaxr	wzr, [x8]
000000000002bc10	stlxr	w10, w9, [x8]
000000000002bc14	cbnz	w10, 0x2bc0c
000000000002bc18	mov	x0, x1
000000000002bc1c	ldp	x29, x30, [sp, #0x60]
000000000002bc20	ldp	x20, x19, [sp, #0x50]
000000000002bc24	ldp	x22, x21, [sp, #0x40]
000000000002bc28	ldp	x24, x23, [sp, #0x30]
000000000002bc2c	add	sp, sp, #0x70
000000000002bc30	b	0x55c54 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002bc34	str	xzr, [sp, #0x18]
000000000002bc38	ldarb	w8, [x23]
000000000002bc3c	tbnz	w8, #0x0, 0x2bbac
000000000002bc40	b	0x2bbb0
000000000002bc44	mov	x1, x0
000000000002bc48	mov	x0, x19
000000000002bc4c	blr	x22
000000000002bc50	ldr	x8, [x0]
000000000002bc54	mov	x9, sp
000000000002bc58	str	x9, [x8, #0x110]
000000000002bc5c	mov	x0, x1
000000000002bc60	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002bc64	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002bc68	b	0x2bc68
_objc2kotlin_Kotlin_ByteArray_set:
000000000002bc6c	sub	sp, sp, #0x80
000000000002bc70	stp	x26, x25, [sp, #0x30]
000000000002bc74	stp	x24, x23, [sp, #0x40]
000000000002bc78	stp	x22, x21, [sp, #0x50]
000000000002bc7c	stp	x20, x19, [sp, #0x60]
000000000002bc80	stp	x29, x30, [sp, #0x70]
000000000002bc84	add	x29, sp, #0x70
000000000002bc88	mov	x20, x3
000000000002bc8c	mov	x21, x2
000000000002bc90	mov	x22, x0
000000000002bc94	str	xzr, [sp, #0x20]
000000000002bc98	movi.16b	v0, #0x0
000000000002bc9c	stp	q0, q0, [sp]
000000000002bca0	mov	x8, sp
000000000002bca4	add	x23, x8, #0x18
000000000002bca8	bl	_Kotlin_initRuntimeIfNeeded
000000000002bcac	adrp	x19, 79 ; 0x7a000
000000000002bcb0	add	x19, x19, #0x4e0
000000000002bcb4	ldr	x24, [x19]
000000000002bcb8	mov	x0, x19
000000000002bcbc	blr	x24
000000000002bcc0	ldr	x8, [x0]
000000000002bcc4	add	x0, x8, #0x138
000000000002bcc8	ldaxr	w8, [x0]
000000000002bccc	stlxr	w9, wzr, [x0]
000000000002bcd0	cbnz	w9, 0x2bcc8
000000000002bcd4	adr	x25, #0x68835
000000000002bcd8	nop
000000000002bcdc	cmp	w8, #0x1
000000000002bce0	b.ne	0x2bcf0
000000000002bce4	ldarb	w8, [x25]
000000000002bce8	tbz	w8, #0x0, 0x2bcf0
000000000002bcec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002bcf0	mov	x0, x19
000000000002bcf4	blr	x24
000000000002bcf8	ldr	x8, [x0]
000000000002bcfc	ldr	x9, [x8, #0x110]
000000000002bd00	mov	x10, sp
000000000002bd04	str	x10, [x8, #0x110]
000000000002bd08	mov	x8, #0x500000000
000000000002bd0c	stp	x9, x8, [sp, #0x8]
000000000002bd10	ldarb	w8, [x25]
000000000002bd14	tbz	w8, #0x0, 0x2bd1c
000000000002bd18	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002bd1c	cbz	x22, 0x2bd90
000000000002bd20	nop
000000000002bd24	ldr	x1, #0x68a34
000000000002bd28	mov	x0, x22
000000000002bd2c	mov	x2, x23
000000000002bd30	bl	0x55ca8 ; Objc message: -[x0 hasNext]
000000000002bd34	ldr	w8, [x0, #0x8]
000000000002bd38	cmp	w8, w21
000000000002bd3c	b.ls	0x2bda4
000000000002bd40	ldr	xzr, [x0]
000000000002bd44	add	x8, x0, w21, sxtw
000000000002bd48	strb	w20, [x8, #0x10]
000000000002bd4c	mov	x0, x19
000000000002bd50	blr	x24
000000000002bd54	ldr	x8, [x0]
000000000002bd58	ldr	x9, [sp, #0x8]
000000000002bd5c	str	x9, [x8, #0x110]
000000000002bd60	add	x8, x8, #0x138
000000000002bd64	mov	w9, #0x1
000000000002bd68	ldaxr	wzr, [x8]
000000000002bd6c	stlxr	w10, w9, [x8]
000000000002bd70	cbnz	w10, 0x2bd68
000000000002bd74	ldp	x29, x30, [sp, #0x70]
000000000002bd78	ldp	x20, x19, [sp, #0x60]
000000000002bd7c	ldp	x22, x21, [sp, #0x50]
000000000002bd80	ldp	x24, x23, [sp, #0x40]
000000000002bd84	ldp	x26, x25, [sp, #0x30]
000000000002bd88	add	sp, sp, #0x80
000000000002bd8c	ret
000000000002bd90	mov	x0, #0x0
000000000002bd94	str	xzr, [sp, #0x18]
000000000002bd98	ldr	w8, [x0, #0x8]
000000000002bd9c	cmp	w8, w21
000000000002bda0	b.hi	0x2bd40
000000000002bda4	bl	_ThrowArrayIndexOutOfBoundsException
000000000002bda8	b	0x2bde4
000000000002bdac	mov	x1, x0
000000000002bdb0	mov	x0, x19
000000000002bdb4	blr	x24
000000000002bdb8	ldr	x8, [x0]
000000000002bdbc	mov	x9, sp
000000000002bdc0	str	x9, [x8, #0x110]
000000000002bdc4	mov	x0, x1
000000000002bdc8	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002bdcc	ldr	x8, [x0, #0x8]
000000000002bdd0	ldr	x20, [x8]
000000000002bdd4	str	x20, [sp, #0x20]
000000000002bdd8	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002bddc	mov	x0, x20
000000000002bde0	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002bde4	brk	#0x1
000000000002bde8	mov	x1, x0
000000000002bdec	mov	x0, x19
000000000002bdf0	blr	x24
000000000002bdf4	ldr	x8, [x0]
000000000002bdf8	mov	x9, sp
000000000002bdfc	str	x9, [x8, #0x110]
000000000002be00	mov	x0, x1
000000000002be04	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002be08	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002be0c	b	0x2be0c
_objc2kotlin_kfun:kotlin.ByteArray#<get-size>(){}kotlin.Int:
000000000002be10	sub	sp, sp, #0x70
000000000002be14	stp	x24, x23, [sp, #0x30]
000000000002be18	stp	x22, x21, [sp, #0x40]
000000000002be1c	stp	x20, x19, [sp, #0x50]
000000000002be20	stp	x29, x30, [sp, #0x60]
000000000002be24	add	x29, sp, #0x60
000000000002be28	mov	x20, x0
000000000002be2c	str	xzr, [sp, #0x20]
000000000002be30	movi.16b	v0, #0x0
000000000002be34	stp	q0, q0, [sp]
000000000002be38	mov	x8, sp
000000000002be3c	add	x21, x8, #0x18
000000000002be40	bl	_Kotlin_initRuntimeIfNeeded
000000000002be44	adrp	x19, 79 ; 0x7a000
000000000002be48	add	x19, x19, #0x4e0
000000000002be4c	ldr	x22, [x19]
000000000002be50	mov	x0, x19
000000000002be54	blr	x22
000000000002be58	ldr	x8, [x0]
000000000002be5c	add	x0, x8, #0x138
000000000002be60	ldaxr	w8, [x0]
000000000002be64	stlxr	w9, wzr, [x0]
000000000002be68	cbnz	w9, 0x2be60
000000000002be6c	adr	x23, #0x6869d
000000000002be70	nop
000000000002be74	cmp	w8, #0x1
000000000002be78	b.ne	0x2be88
000000000002be7c	ldarb	w8, [x23]
000000000002be80	tbz	w8, #0x0, 0x2be88
000000000002be84	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002be88	mov	x0, x19
000000000002be8c	blr	x22
000000000002be90	ldr	x8, [x0]
000000000002be94	ldr	x9, [x8, #0x110]
000000000002be98	mov	x10, sp
000000000002be9c	str	x10, [x8, #0x110]
000000000002bea0	mov	x8, #0x500000000
000000000002bea4	stp	x9, x8, [sp, #0x8]
000000000002bea8	ldarb	w8, [x23]
000000000002beac	tbz	w8, #0x0, 0x2beb4
000000000002beb0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002beb4	cbz	x20, 0x2bf24
000000000002beb8	nop
000000000002bebc	ldr	x1, #0x6889c
000000000002bec0	mov	x0, x20
000000000002bec4	mov	x2, x21
000000000002bec8	bl	0x55ca8 ; Objc message: -[x0 hasNext]
000000000002becc	mov	x20, x0
000000000002bed0	ldarb	w8, [x23]
000000000002bed4	tbz	w8, #0x0, 0x2bedc
000000000002bed8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002bedc	ldr	w8, [x20, #0x8]
000000000002bee0	mov	x0, x19
000000000002bee4	blr	x22
000000000002bee8	ldr	x9, [x0]
000000000002beec	ldr	x10, [sp, #0x8]
000000000002bef0	str	x10, [x9, #0x110]
000000000002bef4	add	x9, x9, #0x138
000000000002bef8	mov	w10, #0x1
000000000002befc	ldaxr	wzr, [x9]
000000000002bf00	stlxr	w11, w10, [x9]
000000000002bf04	cbnz	w11, 0x2befc
000000000002bf08	mov	x0, x8
000000000002bf0c	ldp	x29, x30, [sp, #0x60]
000000000002bf10	ldp	x20, x19, [sp, #0x50]
000000000002bf14	ldp	x22, x21, [sp, #0x40]
000000000002bf18	ldp	x24, x23, [sp, #0x30]
000000000002bf1c	add	sp, sp, #0x70
000000000002bf20	ret
000000000002bf24	str	xzr, [sp, #0x18]
000000000002bf28	ldarb	w8, [x23]
000000000002bf2c	tbnz	w8, #0x0, 0x2bed8
000000000002bf30	b	0x2bedc
000000000002bf34	mov	x1, x0
000000000002bf38	mov	x0, x19
000000000002bf3c	blr	x22
000000000002bf40	ldr	x8, [x0]
000000000002bf44	mov	x9, sp
000000000002bf48	str	x9, [x8, #0x110]
000000000002bf4c	mov	x0, x1
000000000002bf50	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002bf54	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002bf58	b	0x2bf58
_objc2kotlin_kfun:kotlin.collections.ByteIterator#<init>(){}:
000000000002bf5c	sub	sp, sp, #0x80
000000000002bf60	stp	x24, x23, [sp, #0x40]
000000000002bf64	stp	x22, x21, [sp, #0x50]
000000000002bf68	stp	x20, x19, [sp, #0x60]
000000000002bf6c	stp	x29, x30, [sp, #0x70]
000000000002bf70	add	x29, sp, #0x70
000000000002bf74	mov	x19, x0
000000000002bf78	str	xzr, [sp, #0x30]
000000000002bf7c	movi.16b	v0, #0x0
000000000002bf80	stp	q0, q0, [sp, #0x10]
000000000002bf84	add	x8, sp, #0x10
000000000002bf88	add	x21, x8, #0x18
000000000002bf8c	bl	_Kotlin_initRuntimeIfNeeded
000000000002bf90	adrp	x20, 79 ; 0x7a000
000000000002bf94	add	x20, x20, #0x4e0
000000000002bf98	ldr	x23, [x20]
000000000002bf9c	mov	x0, x20
000000000002bfa0	blr	x23
000000000002bfa4	ldr	x8, [x0]
000000000002bfa8	add	x0, x8, #0x138
000000000002bfac	ldaxr	w8, [x0]
000000000002bfb0	stlxr	w9, wzr, [x0]
000000000002bfb4	cbnz	w9, 0x2bfac
000000000002bfb8	adr	x24, #0x68551
000000000002bfbc	nop
000000000002bfc0	cmp	w8, #0x1
000000000002bfc4	b.ne	0x2bfd4
000000000002bfc8	ldarb	w8, [x24]
000000000002bfcc	tbz	w8, #0x0, 0x2bfd4
000000000002bfd0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002bfd4	mov	x0, x20
000000000002bfd8	blr	x23
000000000002bfdc	ldr	x8, [x0]
000000000002bfe0	ldr	x9, [x8, #0x110]
000000000002bfe4	add	x10, sp, #0x10
000000000002bfe8	str	x10, [x8, #0x110]
000000000002bfec	mov	x8, #0x500000000
000000000002bff0	stp	x9, x8, [sp, #0x18]
000000000002bff4	ldarb	w8, [x24]
000000000002bff8	tbz	w8, #0x0, 0x2c000
000000000002bffc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c000	cbz	x19, 0x2c01c
000000000002c004	nop
000000000002c008	ldr	x1, #0x68750
000000000002c00c	mov	x0, x19
000000000002c010	mov	x2, x21
000000000002c014	bl	0x55ca8 ; Objc message: -[x0 hasNext]
000000000002c018	b	0x2c020
000000000002c01c	str	xzr, [sp, #0x28]
000000000002c020	mov	x0, x19
000000000002c024	bl	0x55d14 ; symbol stub for: _object_getClass
000000000002c028	mov	x21, x0
000000000002c02c	adr	x0, #0x393e4
000000000002c030	nop
000000000002c034	bl	__ZL16getOrCreateClassPK8TypeInfo
000000000002c038	cmp	x21, x0
000000000002c03c	b.ne	0x2c078
000000000002c040	nop
000000000002c044	ldr	x22, #0x4b014 ; Objc class ref: _OBJC_CLASS_$_NSException
000000000002c048	mov	x0, x21
000000000002c04c	bl	0x55b34 ; symbol stub for: _class_getName
000000000002c050	nop
000000000002c054	ldr	x8, #0x33fb4 ; literal pool symbol address: _NSGenericException
000000000002c058	ldr	x2, [x8]
000000000002c05c	nop
000000000002c060	ldr	x1, #0x4adb0 ; Objc selector ref: raise:format:
000000000002c064	str	x0, [sp]
000000000002c068	adr	x3, #0x46028 ; Objc cfstring ref: @"bad cfstring ref"
000000000002c06c	nop
000000000002c070	mov	x0, x22
000000000002c074	bl	0x55ca8 ; Objc message: +[NSException raise:format:]
000000000002c078	ldarb	w8, [x24]
000000000002c07c	tbz	w8, #0x0, 0x2c084
000000000002c080	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c084	mov	x0, x20
000000000002c088	blr	x23
000000000002c08c	ldr	x8, [x0]
000000000002c090	ldr	x9, [sp, #0x18]
000000000002c094	str	x9, [x8, #0x110]
000000000002c098	add	x8, x8, #0x138
000000000002c09c	mov	w9, #0x1
000000000002c0a0	ldaxr	wzr, [x8]
000000000002c0a4	stlxr	w10, w9, [x8]
000000000002c0a8	cbnz	w10, 0x2c0a0
000000000002c0ac	mov	x0, x19
000000000002c0b0	ldp	x29, x30, [sp, #0x70]
000000000002c0b4	ldp	x20, x19, [sp, #0x60]
000000000002c0b8	ldp	x22, x21, [sp, #0x50]
000000000002c0bc	ldp	x24, x23, [sp, #0x40]
000000000002c0c0	add	sp, sp, #0x80
000000000002c0c4	ret
000000000002c0c8	mov	x1, x0
000000000002c0cc	mov	x0, x20
000000000002c0d0	blr	x23
000000000002c0d4	ldr	x8, [x0]
000000000002c0d8	add	x9, sp, #0x10
000000000002c0dc	str	x9, [x8, #0x110]
000000000002c0e0	mov	x0, x1
000000000002c0e4	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002c0e8	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002c0ec	b	0x2c0ec
_objc2kotlin_kfun:kotlin.collections.Iterator#hasNext(){}kotlin.Boolean:
000000000002c0f0	sub	sp, sp, #0x60
000000000002c0f4	stp	x24, x23, [sp, #0x20]
000000000002c0f8	stp	x22, x21, [sp, #0x30]
000000000002c0fc	stp	x20, x19, [sp, #0x40]
000000000002c100	stp	x29, x30, [sp, #0x50]
000000000002c104	add	x29, sp, #0x50
000000000002c108	mov	x19, x1
000000000002c10c	mov	x21, x0
000000000002c110	stp	xzr, xzr, [sp, #0x8]
000000000002c114	str	xzr, [sp, #0x18]
000000000002c118	bl	_Kotlin_initRuntimeIfNeeded
000000000002c11c	adrp	x20, 78 ; 0x7a000
000000000002c120	add	x20, x20, #0x4e0
000000000002c124	ldr	x22, [x20]
000000000002c128	mov	x0, x20
000000000002c12c	blr	x22
000000000002c130	ldr	x8, [x0]
000000000002c134	add	x0, x8, #0x138
000000000002c138	ldaxr	w8, [x0]
000000000002c13c	stlxr	w9, wzr, [x0]
000000000002c140	cbnz	w9, 0x2c138
000000000002c144	adr	x23, #0x683c5
000000000002c148	nop
000000000002c14c	cmp	w8, #0x1
000000000002c150	b.ne	0x2c160
000000000002c154	ldarb	w8, [x23]
000000000002c158	tbz	w8, #0x0, 0x2c160
000000000002c15c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c160	mov	x0, x20
000000000002c164	blr	x22
000000000002c168	ldr	x8, [x0]
000000000002c16c	ldr	x9, [x8, #0x110]
000000000002c170	add	x10, sp, #0x8
000000000002c174	str	x10, [x8, #0x110]
000000000002c178	mov	x8, #0x300000000
000000000002c17c	stp	x9, x8, [sp, #0x10]
000000000002c180	ldarb	w8, [x23]
000000000002c184	tbz	w8, #0x0, 0x2c18c
000000000002c188	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c18c	mov	x0, x21
000000000002c190	mov	x1, x19
000000000002c194	bl	_Kotlin_ObjCExport_AbstractMethodCalled
000000000002c198	brk	#0x1
000000000002c19c	mov	x1, x0
000000000002c1a0	mov	x0, x20
000000000002c1a4	blr	x22
000000000002c1a8	ldr	x8, [x0]
000000000002c1ac	add	x9, sp, #0x8
000000000002c1b0	str	x9, [x8, #0x110]
000000000002c1b4	mov	x0, x1
000000000002c1b8	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002c1bc	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002c1c0	b	0x2c1c0
_objc2kotlin_kfun:kotlin.collections.ByteIterator#$<bridge-BNN>next(){}kotlin.Byte(){}kotlin.Any?:
000000000002c1c4	sub	sp, sp, #0x70
000000000002c1c8	stp	x24, x23, [sp, #0x30]
000000000002c1cc	stp	x22, x21, [sp, #0x40]
000000000002c1d0	stp	x20, x19, [sp, #0x50]
000000000002c1d4	stp	x29, x30, [sp, #0x60]
000000000002c1d8	add	x29, sp, #0x60
000000000002c1dc	mov	x21, x0
000000000002c1e0	movi.16b	v0, #0x0
000000000002c1e4	stp	q0, q0, [sp, #0x10]
000000000002c1e8	str	q0, [sp]
000000000002c1ec	mov	x8, sp
000000000002c1f0	add	x22, x8, #0x18
000000000002c1f4	add	x20, x8, #0x28
000000000002c1f8	bl	_Kotlin_initRuntimeIfNeeded
000000000002c1fc	adrp	x19, 78 ; 0x7a000
000000000002c200	add	x19, x19, #0x4e0
000000000002c204	ldr	x23, [x19]
000000000002c208	mov	x0, x19
000000000002c20c	blr	x23
000000000002c210	ldr	x8, [x0]
000000000002c214	add	x0, x8, #0x138
000000000002c218	ldaxr	w8, [x0]
000000000002c21c	stlxr	w9, wzr, [x0]
000000000002c220	cbnz	w9, 0x2c218
000000000002c224	adr	x24, #0x682e5
000000000002c228	nop
000000000002c22c	cmp	w8, #0x1
000000000002c230	b.ne	0x2c240
000000000002c234	ldarb	w8, [x24]
000000000002c238	tbz	w8, #0x0, 0x2c240
000000000002c23c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c240	mov	x0, x19
000000000002c244	blr	x23
000000000002c248	ldr	x8, [x0]
000000000002c24c	ldr	x9, [x8, #0x110]
000000000002c250	mov	x10, sp
000000000002c254	str	x10, [x8, #0x110]
000000000002c258	mov	x8, #0x600000000
000000000002c25c	stp	x9, x8, [sp, #0x8]
000000000002c260	ldarb	w8, [x24]
000000000002c264	tbz	w8, #0x0, 0x2c26c
000000000002c268	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c26c	cbz	x21, 0x2c304
000000000002c270	nop
000000000002c274	ldr	x1, #0x684e4
000000000002c278	mov	x0, x21
000000000002c27c	mov	x2, x22
000000000002c280	bl	0x55ca8 ; Objc message: -[x0 raise:format:]
000000000002c284	mov	x21, x0
000000000002c288	ldarb	w8, [x24]
000000000002c28c	tbz	w8, #0x0, 0x2c294
000000000002c290	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c294	ldr	x8, [x21]
000000000002c298	and	x8, x8, #0xfffffffffffffffc
000000000002c29c	ldr	x8, [x8]
000000000002c2a0	ldr	x8, [x8, #0x90]
000000000002c2a4	mov	x0, x21
000000000002c2a8	blr	x8
000000000002c2ac	mov	x1, x20
000000000002c2b0	bl	"_kfun:kotlin#<Byte-box>(kotlin.Byte){}kotlin.Any"
000000000002c2b4	str	x0, [sp, #0x28]
000000000002c2b8	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002c2bc	mov	x1, x0
000000000002c2c0	mov	x0, x19
000000000002c2c4	blr	x23
000000000002c2c8	ldr	x8, [x0]
000000000002c2cc	ldr	x9, [sp, #0x8]
000000000002c2d0	str	x9, [x8, #0x110]
000000000002c2d4	add	x8, x8, #0x138
000000000002c2d8	mov	w9, #0x1
000000000002c2dc	ldaxr	wzr, [x8]
000000000002c2e0	stlxr	w10, w9, [x8]
000000000002c2e4	cbnz	w10, 0x2c2dc
000000000002c2e8	mov	x0, x1
000000000002c2ec	ldp	x29, x30, [sp, #0x60]
000000000002c2f0	ldp	x20, x19, [sp, #0x50]
000000000002c2f4	ldp	x22, x21, [sp, #0x40]
000000000002c2f8	ldp	x24, x23, [sp, #0x30]
000000000002c2fc	add	sp, sp, #0x70
000000000002c300	b	0x55c54 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002c304	str	xzr, [sp, #0x18]
000000000002c308	ldarb	w8, [x24]
000000000002c30c	tbnz	w8, #0x0, 0x2c290
000000000002c310	b	0x2c294
000000000002c314	mov	x1, x0
000000000002c318	mov	x0, x19
000000000002c31c	blr	x23
000000000002c320	ldr	x8, [x0]
000000000002c324	mov	x9, sp
000000000002c328	str	x9, [x8, #0x110]
000000000002c32c	mov	x0, x1
000000000002c330	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002c334	ldr	x8, [x0, #0x8]
000000000002c338	ldr	x20, [x8]
000000000002c33c	str	x20, [sp, #0x20]
000000000002c340	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002c344	mov	x0, x20
000000000002c348	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002c34c	brk	#0x1
000000000002c350	mov	x1, x0
000000000002c354	mov	x0, x19
000000000002c358	blr	x23
000000000002c35c	ldr	x8, [x0]
000000000002c360	mov	x9, sp
000000000002c364	str	x9, [x8, #0x110]
000000000002c368	mov	x0, x1
000000000002c36c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002c370	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002c374	b	0x2c374
_objc2kotlin_kfun:kotlin.collections.ByteIterator#nextByte(){}kotlin.Byte:
000000000002c378	sub	sp, sp, #0x60
000000000002c37c	stp	x24, x23, [sp, #0x20]
000000000002c380	stp	x22, x21, [sp, #0x30]
000000000002c384	stp	x20, x19, [sp, #0x40]
000000000002c388	stp	x29, x30, [sp, #0x50]
000000000002c38c	add	x29, sp, #0x50
000000000002c390	mov	x19, x1
000000000002c394	mov	x21, x0
000000000002c398	stp	xzr, xzr, [sp, #0x8]
000000000002c39c	str	xzr, [sp, #0x18]
000000000002c3a0	bl	_Kotlin_initRuntimeIfNeeded
000000000002c3a4	adrp	x20, 78 ; 0x7a000
000000000002c3a8	add	x20, x20, #0x4e0
000000000002c3ac	ldr	x22, [x20]
000000000002c3b0	mov	x0, x20
000000000002c3b4	blr	x22
000000000002c3b8	ldr	x8, [x0]
000000000002c3bc	add	x0, x8, #0x138
000000000002c3c0	ldaxr	w8, [x0]
000000000002c3c4	stlxr	w9, wzr, [x0]
000000000002c3c8	cbnz	w9, 0x2c3c0
000000000002c3cc	adr	x23, #0x6813d
000000000002c3d0	nop
000000000002c3d4	cmp	w8, #0x1
000000000002c3d8	b.ne	0x2c3e8
000000000002c3dc	ldarb	w8, [x23]
000000000002c3e0	tbz	w8, #0x0, 0x2c3e8
000000000002c3e4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c3e8	mov	x0, x20
000000000002c3ec	blr	x22
000000000002c3f0	ldr	x8, [x0]
000000000002c3f4	ldr	x9, [x8, #0x110]
000000000002c3f8	add	x10, sp, #0x8
000000000002c3fc	str	x10, [x8, #0x110]
000000000002c400	mov	x8, #0x300000000
000000000002c404	stp	x9, x8, [sp, #0x10]
000000000002c408	ldarb	w8, [x23]
000000000002c40c	tbz	w8, #0x0, 0x2c414
000000000002c410	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c414	mov	x0, x21
000000000002c418	mov	x1, x19
000000000002c41c	bl	_Kotlin_ObjCExport_AbstractMethodCalled
000000000002c420	brk	#0x1
000000000002c424	mov	x1, x0
000000000002c428	mov	x0, x20
000000000002c42c	blr	x22
000000000002c430	ldr	x8, [x0]
000000000002c434	add	x9, sp, #0x8
000000000002c438	str	x9, [x8, #0x110]
000000000002c43c	mov	x0, x1
000000000002c440	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002c444	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002c448	b	0x2c448
_objc2kotlin_virtual_kfun:kotlin.collections.ByteIterator#nextByte(){}kotlin.Byte:
000000000002c44c	sub	sp, sp, #0x70
000000000002c450	stp	x24, x23, [sp, #0x30]
000000000002c454	stp	x22, x21, [sp, #0x40]
000000000002c458	stp	x20, x19, [sp, #0x50]
000000000002c45c	stp	x29, x30, [sp, #0x60]
000000000002c460	add	x29, sp, #0x60
000000000002c464	mov	x20, x0
000000000002c468	str	xzr, [sp, #0x20]
000000000002c46c	movi.16b	v0, #0x0
000000000002c470	stp	q0, q0, [sp]
000000000002c474	mov	x8, sp
000000000002c478	add	x21, x8, #0x18
000000000002c47c	bl	_Kotlin_initRuntimeIfNeeded
000000000002c480	adrp	x19, 78 ; 0x7a000
000000000002c484	add	x19, x19, #0x4e0
000000000002c488	ldr	x22, [x19]
000000000002c48c	mov	x0, x19
000000000002c490	blr	x22
000000000002c494	ldr	x8, [x0]
000000000002c498	add	x0, x8, #0x138
000000000002c49c	ldaxr	w8, [x0]
000000000002c4a0	stlxr	w9, wzr, [x0]
000000000002c4a4	cbnz	w9, 0x2c49c
000000000002c4a8	adr	x23, #0x68061
000000000002c4ac	nop
000000000002c4b0	cmp	w8, #0x1
000000000002c4b4	b.ne	0x2c4c4
000000000002c4b8	ldarb	w8, [x23]
000000000002c4bc	tbz	w8, #0x0, 0x2c4c4
000000000002c4c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c4c4	mov	x0, x19
000000000002c4c8	blr	x22
000000000002c4cc	ldr	x8, [x0]
000000000002c4d0	ldr	x9, [x8, #0x110]
000000000002c4d4	mov	x10, sp
000000000002c4d8	str	x10, [x8, #0x110]
000000000002c4dc	mov	x8, #0x500000000
000000000002c4e0	stp	x9, x8, [sp, #0x8]
000000000002c4e4	ldarb	w8, [x23]
000000000002c4e8	tbz	w8, #0x0, 0x2c4f0
000000000002c4ec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c4f0	nop
000000000002c4f4	ldr	x1, #0x68264
000000000002c4f8	mov	x0, x20
000000000002c4fc	mov	x2, x21
000000000002c500	bl	0x55ca8 ; Objc message: -[x0 raise:format:]
000000000002c504	ldr	x8, [x0]
000000000002c508	and	x8, x8, #0xfffffffffffffffc
000000000002c50c	ldr	x8, [x8]
000000000002c510	ldr	x8, [x8, #0x90]
000000000002c514	blr	x8
000000000002c518	mov	x1, x0
000000000002c51c	mov	x0, x19
000000000002c520	blr	x22
000000000002c524	ldr	x8, [x0]
000000000002c528	ldr	x9, [sp, #0x8]
000000000002c52c	str	x9, [x8, #0x110]
000000000002c530	add	x8, x8, #0x138
000000000002c534	mov	w9, #0x1
000000000002c538	ldaxr	wzr, [x8]
000000000002c53c	stlxr	w10, w9, [x8]
000000000002c540	cbnz	w10, 0x2c538
000000000002c544	mov	x0, x1
000000000002c548	ldp	x29, x30, [sp, #0x60]
000000000002c54c	ldp	x20, x19, [sp, #0x50]
000000000002c550	ldp	x22, x21, [sp, #0x40]
000000000002c554	ldp	x24, x23, [sp, #0x30]
000000000002c558	add	sp, sp, #0x70
000000000002c55c	ret
000000000002c560	mov	x1, x0
000000000002c564	mov	x0, x19
000000000002c568	blr	x22
000000000002c56c	ldr	x8, [x0]
000000000002c570	mov	x9, sp
000000000002c574	str	x9, [x8, #0x110]
000000000002c578	mov	x0, x1
000000000002c57c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002c580	ldr	x8, [x0, #0x8]
000000000002c584	ldr	x20, [x8]
000000000002c588	str	x20, [sp, #0x20]
000000000002c58c	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002c590	mov	x0, x20
000000000002c594	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002c598	brk	#0x1
000000000002c59c	mov	x1, x0
000000000002c5a0	mov	x0, x19
000000000002c5a4	blr	x22
000000000002c5a8	ldr	x8, [x0]
000000000002c5ac	mov	x9, sp
000000000002c5b0	str	x9, [x8, #0x110]
000000000002c5b4	mov	x0, x1
000000000002c5b8	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002c5bc	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002c5c0	b	0x2c5c0
_objc2kotlin_virtual_kfun:kotlin.collections.Iterator#hasNext(){}kotlin.Boolean:
000000000002c5c4	sub	sp, sp, #0x70
000000000002c5c8	stp	x24, x23, [sp, #0x30]
000000000002c5cc	stp	x22, x21, [sp, #0x40]
000000000002c5d0	stp	x20, x19, [sp, #0x50]
000000000002c5d4	stp	x29, x30, [sp, #0x60]
000000000002c5d8	add	x29, sp, #0x60
000000000002c5dc	mov	x20, x0
000000000002c5e0	str	xzr, [sp, #0x20]
000000000002c5e4	movi.16b	v0, #0x0
000000000002c5e8	stp	q0, q0, [sp]
000000000002c5ec	mov	x8, sp
000000000002c5f0	add	x21, x8, #0x18
000000000002c5f4	bl	_Kotlin_initRuntimeIfNeeded
000000000002c5f8	adrp	x19, 78 ; 0x7a000
000000000002c5fc	add	x19, x19, #0x4e0
000000000002c600	ldr	x22, [x19]
000000000002c604	mov	x0, x19
000000000002c608	blr	x22
000000000002c60c	ldr	x8, [x0]
000000000002c610	add	x0, x8, #0x138
000000000002c614	ldaxr	w8, [x0]
000000000002c618	stlxr	w9, wzr, [x0]
000000000002c61c	cbnz	w9, 0x2c614
000000000002c620	adr	x23, #0x67ee9
000000000002c624	nop
000000000002c628	cmp	w8, #0x1
000000000002c62c	b.ne	0x2c63c
000000000002c630	ldarb	w8, [x23]
000000000002c634	tbz	w8, #0x0, 0x2c63c
000000000002c638	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c63c	mov	x0, x19
000000000002c640	blr	x22
000000000002c644	ldr	x8, [x0]
000000000002c648	ldr	x9, [x8, #0x110]
000000000002c64c	mov	x10, sp
000000000002c650	str	x10, [x8, #0x110]
000000000002c654	mov	x8, #0x500000000
000000000002c658	stp	x9, x8, [sp, #0x8]
000000000002c65c	ldarb	w8, [x23]
000000000002c660	tbz	w8, #0x0, 0x2c668
000000000002c664	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c668	nop
000000000002c66c	ldr	x1, #0x680ec
000000000002c670	mov	x0, x20
000000000002c674	mov	x2, x21
000000000002c678	bl	0x55ca8 ; Objc message: -[x0 raise:format:]
000000000002c67c	ldr	x8, [x0]
000000000002c680	and	x8, x8, #0xfffffffffffffffc
000000000002c684	ldr	x8, [x8]
000000000002c688	ldr	w9, [x8, #0x3c]
000000000002c68c	ldr	x8, [x8, #0x40]
000000000002c690	tbnz	w9, #0x1f, 0x2c6a0
000000000002c694	mov	w10, #0xa0
000000000002c698	and	x9, x9, x10
000000000002c69c	b	0x2c724
000000000002c6a0	neg	w10, w9
000000000002c6a4	mvn	w9, w9
000000000002c6a8	cmp	w10, #0x9
000000000002c6ac	b.ge	0x2c6e4
000000000002c6b0	cmp	w10, #0x2
000000000002c6b4	b.lt	0x2c718
000000000002c6b8	mov	x10, #0x0
000000000002c6bc	mov	x11, x8
000000000002c6c0	ldr	w12, [x11]
000000000002c6c4	cmp	w12, #0x9f
000000000002c6c8	b.gt	0x2c720
000000000002c6cc	add	x10, x10, #0x1
000000000002c6d0	add	x11, x11, #0x10
000000000002c6d4	cmp	x9, x10
000000000002c6d8	b.ne	0x2c6c0
000000000002c6dc	mov	x10, x9
000000000002c6e0	b	0x2c720
000000000002c6e4	mov	w10, #0x0
000000000002c6e8	add	w11, w9, w10
000000000002c6ec	cmp	w11, #0x0
000000000002c6f0	cinc	w11, w11, lt
000000000002c6f4	asr	w11, w11, #1
000000000002c6f8	sbfiz	x12, x11, #4, #32
000000000002c6fc	ldr	w12, [x8, x12]
000000000002c700	cmp	w12, #0xa0
000000000002c704	csinc	w10, w10, w11, ge
000000000002c708	csel	w9, w9, w11, lt
000000000002c70c	cmp	w10, w9
000000000002c710	b.lt	0x2c6e8
000000000002c714	b	0x2c720
000000000002c718	mov	w10, #0x0
000000000002c71c	b	0x2c720
000000000002c720	sxtw	x9, w10
000000000002c724	add	x8, x8, x9, lsl #4
000000000002c728	ldr	x8, [x8, #0x8]
000000000002c72c	ldr	x8, [x8]
000000000002c730	blr	x8
000000000002c734	mov	x1, x0
000000000002c738	mov	x0, x19
000000000002c73c	blr	x22
000000000002c740	ldr	x8, [x0]
000000000002c744	ldr	x9, [sp, #0x8]
000000000002c748	str	x9, [x8, #0x110]
000000000002c74c	add	x8, x8, #0x138
000000000002c750	mov	w9, #0x1
000000000002c754	ldaxr	wzr, [x8]
000000000002c758	stlxr	w10, w9, [x8]
000000000002c75c	cbnz	w10, 0x2c754
000000000002c760	mov	x0, x1
000000000002c764	ldp	x29, x30, [sp, #0x60]
000000000002c768	ldp	x20, x19, [sp, #0x50]
000000000002c76c	ldp	x22, x21, [sp, #0x40]
000000000002c770	ldp	x24, x23, [sp, #0x30]
000000000002c774	add	sp, sp, #0x70
000000000002c778	ret
000000000002c77c	mov	x1, x0
000000000002c780	mov	x0, x19
000000000002c784	blr	x22
000000000002c788	ldr	x8, [x0]
000000000002c78c	mov	x9, sp
000000000002c790	str	x9, [x8, #0x110]
000000000002c794	mov	x0, x1
000000000002c798	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002c79c	ldr	x8, [x0, #0x8]
000000000002c7a0	ldr	x20, [x8]
000000000002c7a4	str	x20, [sp, #0x20]
000000000002c7a8	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002c7ac	mov	x0, x20
000000000002c7b0	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002c7b4	brk	#0x1
000000000002c7b8	mov	x1, x0
000000000002c7bc	mov	x0, x19
000000000002c7c0	blr	x22
000000000002c7c4	ldr	x8, [x0]
000000000002c7c8	mov	x9, sp
000000000002c7cc	str	x9, [x8, #0x110]
000000000002c7d0	mov	x0, x1
000000000002c7d4	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002c7d8	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002c7dc	b	0x2c7dc
_objc2kotlin_virtual_kfun:kotlin.collections.Iterator#next(){}1:0:
000000000002c7e0	sub	sp, sp, #0x70
000000000002c7e4	stp	x24, x23, [sp, #0x30]
000000000002c7e8	stp	x22, x21, [sp, #0x40]
000000000002c7ec	stp	x20, x19, [sp, #0x50]
000000000002c7f0	stp	x29, x30, [sp, #0x60]
000000000002c7f4	add	x29, sp, #0x60
000000000002c7f8	mov	x21, x0
000000000002c7fc	movi.16b	v0, #0x0
000000000002c800	stp	q0, q0, [sp, #0x10]
000000000002c804	str	q0, [sp]
000000000002c808	mov	x8, sp
000000000002c80c	add	x22, x8, #0x18
000000000002c810	add	x20, x8, #0x28
000000000002c814	bl	_Kotlin_initRuntimeIfNeeded
000000000002c818	adrp	x19, 78 ; 0x7a000
000000000002c81c	add	x19, x19, #0x4e0
000000000002c820	ldr	x23, [x19]
000000000002c824	mov	x0, x19
000000000002c828	blr	x23
000000000002c82c	ldr	x8, [x0]
000000000002c830	add	x0, x8, #0x138
000000000002c834	ldaxr	w8, [x0]
000000000002c838	stlxr	w9, wzr, [x0]
000000000002c83c	cbnz	w9, 0x2c834
000000000002c840	adr	x24, #0x67cc9
000000000002c844	nop
000000000002c848	cmp	w8, #0x1
000000000002c84c	b.ne	0x2c85c
000000000002c850	ldarb	w8, [x24]
000000000002c854	tbz	w8, #0x0, 0x2c85c
000000000002c858	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002c85c	mov	x0, x19
000000000002c860	blr	x23
000000000002c864	ldr	x8, [x0]
000000000002c868	ldr	x9, [x8, #0x110]
000000000002c86c	mov	x10, sp
000000000002c870	str	x10, [x8, #0x110]
000000000002c874	mov	x8, #0x600000000
000000000002c878	stp	x9, x8, [sp, #0x8]
000000000002c87c	ldarb	w8, [x24]
000000000002c880	tbz	w8, #0x0, 0x2c888
000000000002c884	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002c888	nop
000000000002c88c	ldr	x1, #0x67ecc
000000000002c890	mov	x0, x21
000000000002c894	mov	x2, x22
000000000002c898	bl	0x55ca8 ; Objc message: -[x0 raise:format:]
000000000002c89c	ldr	x8, [x0]
000000000002c8a0	and	x8, x8, #0xfffffffffffffffc
000000000002c8a4	ldr	x8, [x8]
000000000002c8a8	ldr	w9, [x8, #0x3c]
000000000002c8ac	ldr	x8, [x8, #0x40]
000000000002c8b0	tbnz	w9, #0x1f, 0x2c8c0
000000000002c8b4	mov	w10, #0xa0
000000000002c8b8	and	x9, x9, x10
000000000002c8bc	b	0x2c944
000000000002c8c0	neg	w10, w9
000000000002c8c4	mvn	w9, w9
000000000002c8c8	cmp	w10, #0x9
000000000002c8cc	b.ge	0x2c904
000000000002c8d0	cmp	w10, #0x2
000000000002c8d4	b.lt	0x2c938
000000000002c8d8	mov	x10, #0x0
000000000002c8dc	mov	x11, x8
000000000002c8e0	ldr	w12, [x11]
000000000002c8e4	cmp	w12, #0x9f
000000000002c8e8	b.gt	0x2c940
000000000002c8ec	add	x10, x10, #0x1
000000000002c8f0	add	x11, x11, #0x10
000000000002c8f4	cmp	x9, x10
000000000002c8f8	b.ne	0x2c8e0
000000000002c8fc	mov	x10, x9
000000000002c900	b	0x2c940
000000000002c904	mov	w10, #0x0
000000000002c908	add	w11, w9, w10
000000000002c90c	cmp	w11, #0x0
000000000002c910	cinc	w11, w11, lt
000000000002c914	asr	w11, w11, #1
000000000002c918	sbfiz	x12, x11, #4, #32
000000000002c91c	ldr	w12, [x8, x12]
000000000002c920	cmp	w12, #0xa0
000000000002c924	csinc	w10, w10, w11, ge
000000000002c928	csel	w9, w9, w11, lt
000000000002c92c	cmp	w10, w9
000000000002c930	b.lt	0x2c908
000000000002c934	b	0x2c940
000000000002c938	mov	w10, #0x0
000000000002c93c	b	0x2c940
000000000002c940	sxtw	x9, w10
000000000002c944	add	x8, x8, x9, lsl #4
000000000002c948	ldr	x8, [x8, #0x8]
000000000002c94c	ldr	x8, [x8, #0x8]
000000000002c950	mov	x1, x20
000000000002c954	blr	x8
000000000002c958	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002c95c	mov	x1, x0
000000000002c960	mov	x0, x19
000000000002c964	blr	x23
000000000002c968	ldr	x8, [x0]
000000000002c96c	ldr	x9, [sp, #0x8]
000000000002c970	str	x9, [x8, #0x110]
000000000002c974	add	x8, x8, #0x138
000000000002c978	mov	w9, #0x1
000000000002c97c	ldaxr	wzr, [x8]
000000000002c980	stlxr	w10, w9, [x8]
000000000002c984	cbnz	w10, 0x2c97c
000000000002c988	mov	x0, x1
000000000002c98c	ldp	x29, x30, [sp, #0x60]
000000000002c990	ldp	x20, x19, [sp, #0x50]
000000000002c994	ldp	x22, x21, [sp, #0x40]
000000000002c998	ldp	x24, x23, [sp, #0x30]
000000000002c99c	add	sp, sp, #0x70
000000000002c9a0	b	0x55c54 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002c9a4	mov	x1, x0
000000000002c9a8	mov	x0, x19
000000000002c9ac	blr	x23
000000000002c9b0	ldr	x8, [x0]
000000000002c9b4	mov	x9, sp
000000000002c9b8	str	x9, [x8, #0x110]
000000000002c9bc	mov	x0, x1
000000000002c9c0	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002c9c4	ldr	x8, [x0, #0x8]
000000000002c9c8	ldr	x20, [x8]
000000000002c9cc	str	x20, [sp, #0x20]
000000000002c9d0	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002c9d4	mov	x0, x20
000000000002c9d8	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002c9dc	brk	#0x1
000000000002c9e0	mov	x1, x0
000000000002c9e4	mov	x0, x19
000000000002c9e8	blr	x23
000000000002c9ec	ldr	x8, [x0]
000000000002c9f0	mov	x9, sp
000000000002c9f4	str	x9, [x8, #0x110]
000000000002c9f8	mov	x0, x1
000000000002c9fc	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002ca00	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002ca04	b	0x2ca04
_objc2kotlin_Kotlin_Any_equals:
000000000002ca08	sub	sp, sp, #0x80
000000000002ca0c	stp	x26, x25, [sp, #0x30]
000000000002ca10	stp	x24, x23, [sp, #0x40]
000000000002ca14	stp	x22, x21, [sp, #0x50]
000000000002ca18	stp	x20, x19, [sp, #0x60]
000000000002ca1c	stp	x29, x30, [sp, #0x70]
000000000002ca20	add	x29, sp, #0x70
000000000002ca24	mov	x20, x2
000000000002ca28	mov	x22, x0
000000000002ca2c	movi.16b	v0, #0x0
000000000002ca30	stp	q0, q0, [sp, #0x10]
000000000002ca34	str	q0, [sp]
000000000002ca38	mov	x8, sp
000000000002ca3c	add	x21, x8, #0x20
000000000002ca40	add	x23, x8, #0x18
000000000002ca44	bl	_Kotlin_initRuntimeIfNeeded
000000000002ca48	adrp	x19, 78 ; 0x7a000
000000000002ca4c	add	x19, x19, #0x4e0
000000000002ca50	ldr	x24, [x19]
000000000002ca54	mov	x0, x19
000000000002ca58	blr	x24
000000000002ca5c	ldr	x8, [x0]
000000000002ca60	add	x0, x8, #0x138
000000000002ca64	ldaxr	w8, [x0]
000000000002ca68	stlxr	w9, wzr, [x0]
000000000002ca6c	cbnz	w9, 0x2ca64
000000000002ca70	adr	x25, #0x67a99
000000000002ca74	nop
000000000002ca78	cmp	w8, #0x1
000000000002ca7c	b.ne	0x2ca8c
000000000002ca80	ldarb	w8, [x25]
000000000002ca84	tbz	w8, #0x0, 0x2ca8c
000000000002ca88	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002ca8c	mov	x0, x19
000000000002ca90	blr	x24
000000000002ca94	ldr	x8, [x0]
000000000002ca98	ldr	x9, [x8, #0x110]
000000000002ca9c	mov	x10, sp
000000000002caa0	str	x10, [x8, #0x110]
000000000002caa4	mov	x8, #0x600000000
000000000002caa8	stp	x9, x8, [sp, #0x8]
000000000002caac	ldarb	w8, [x25]
000000000002cab0	tbz	w8, #0x0, 0x2cab8
000000000002cab4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002cab8	adrp	x25, 104 ; 0x94000
000000000002cabc	cbz	x22, 0x2caec
000000000002cac0	ldr	x1, [x25, #0x758]
000000000002cac4	mov	x0, x22
000000000002cac8	mov	x2, x23
000000000002cacc	bl	0x55ca8 ; Objc message: -[x0 raise:format:]
000000000002cad0	mov	x22, x0
000000000002cad4	cbz	x20, 0x2caf4
000000000002cad8	ldr	x1, [x25, #0x758]
000000000002cadc	mov	x0, x20
000000000002cae0	mov	x2, x21
000000000002cae4	bl	0x55ca8 ; Objc message: -[x0 raise:format:]
000000000002cae8	b	0x2cafc
000000000002caec	str	xzr, [sp, #0x18]
000000000002caf0	cbnz	x20, 0x2cad8
000000000002caf4	mov	x0, #0x0
000000000002caf8	str	xzr, [sp, #0x20]
000000000002cafc	cmp	x22, x0
000000000002cb00	cset	w8, eq
000000000002cb04	mov	x0, x19
000000000002cb08	blr	x24
000000000002cb0c	ldr	x9, [x0]
000000000002cb10	ldr	x10, [sp, #0x8]
000000000002cb14	str	x10, [x9, #0x110]
000000000002cb18	add	x9, x9, #0x138
000000000002cb1c	mov	w10, #0x1
000000000002cb20	ldaxr	wzr, [x9]
000000000002cb24	stlxr	w11, w10, [x9]
000000000002cb28	cbnz	w11, 0x2cb20
000000000002cb2c	mov	x0, x8
000000000002cb30	ldp	x29, x30, [sp, #0x70]
000000000002cb34	ldp	x20, x19, [sp, #0x60]
000000000002cb38	ldp	x22, x21, [sp, #0x50]
000000000002cb3c	ldp	x24, x23, [sp, #0x40]
000000000002cb40	ldp	x26, x25, [sp, #0x30]
000000000002cb44	add	sp, sp, #0x80
000000000002cb48	ret
000000000002cb4c	mov	x1, x0
000000000002cb50	mov	x0, x19
000000000002cb54	blr	x24
000000000002cb58	ldr	x8, [x0]
000000000002cb5c	mov	x9, sp
000000000002cb60	str	x9, [x8, #0x110]
000000000002cb64	mov	x0, x1
000000000002cb68	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002cb6c	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002cb70	b	0x2cb70
_objc2kotlin_kfun:kotlin.Any#hashCode(){}kotlin.Int:
000000000002cb74	sub	sp, sp, #0x70
000000000002cb78	stp	x24, x23, [sp, #0x30]
000000000002cb7c	stp	x22, x21, [sp, #0x40]
000000000002cb80	stp	x20, x19, [sp, #0x50]
000000000002cb84	stp	x29, x30, [sp, #0x60]
000000000002cb88	add	x29, sp, #0x60
000000000002cb8c	mov	x20, x0
000000000002cb90	str	xzr, [sp, #0x20]
000000000002cb94	movi.16b	v0, #0x0
000000000002cb98	stp	q0, q0, [sp]
000000000002cb9c	mov	x8, sp
000000000002cba0	add	x21, x8, #0x18
000000000002cba4	bl	_Kotlin_initRuntimeIfNeeded
000000000002cba8	adrp	x19, 78 ; 0x7a000
000000000002cbac	add	x19, x19, #0x4e0
000000000002cbb0	ldr	x22, [x19]
000000000002cbb4	mov	x0, x19
000000000002cbb8	blr	x22
000000000002cbbc	ldr	x8, [x0]
000000000002cbc0	add	x0, x8, #0x138
000000000002cbc4	ldaxr	w8, [x0]
000000000002cbc8	stlxr	w9, wzr, [x0]
000000000002cbcc	cbnz	w9, 0x2cbc4
000000000002cbd0	adr	x23, #0x67939
000000000002cbd4	nop
000000000002cbd8	cmp	w8, #0x1
000000000002cbdc	b.ne	0x2cbec
000000000002cbe0	ldarb	w8, [x23]
000000000002cbe4	tbz	w8, #0x0, 0x2cbec
000000000002cbe8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002cbec	mov	x0, x19
000000000002cbf0	blr	x22
000000000002cbf4	ldr	x8, [x0]
000000000002cbf8	ldr	x9, [x8, #0x110]
000000000002cbfc	mov	x10, sp
000000000002cc00	str	x10, [x8, #0x110]
000000000002cc04	mov	x8, #0x500000000
000000000002cc08	stp	x9, x8, [sp, #0x8]
000000000002cc0c	ldarb	w8, [x23]
000000000002cc10	tbz	w8, #0x0, 0x2cc18
000000000002cc14	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002cc18	cbz	x20, 0x2cc84
000000000002cc1c	nop
000000000002cc20	ldr	x1, #0x67b38
000000000002cc24	mov	x0, x20
000000000002cc28	mov	x2, x21
000000000002cc2c	bl	0x55ca8 ; Objc message: -[x0 raise:format:]
000000000002cc30	and	x20, x0, #0xffffffff
000000000002cc34	ldarb	w8, [x23]
000000000002cc38	tbz	w8, #0x0, 0x2cc40
000000000002cc3c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002cc40	mov	x0, x19
000000000002cc44	blr	x22
000000000002cc48	ldr	x8, [x0]
000000000002cc4c	ldr	x9, [sp, #0x8]
000000000002cc50	str	x9, [x8, #0x110]
000000000002cc54	add	x8, x8, #0x138
000000000002cc58	mov	w9, #0x1
000000000002cc5c	ldaxr	wzr, [x8]
000000000002cc60	stlxr	w10, w9, [x8]
000000000002cc64	cbnz	w10, 0x2cc5c
000000000002cc68	mov	x0, x20
000000000002cc6c	ldp	x29, x30, [sp, #0x60]
000000000002cc70	ldp	x20, x19, [sp, #0x50]
000000000002cc74	ldp	x22, x21, [sp, #0x40]
000000000002cc78	ldp	x24, x23, [sp, #0x30]
000000000002cc7c	add	sp, sp, #0x70
000000000002cc80	ret
000000000002cc84	str	xzr, [sp, #0x18]
000000000002cc88	ldarb	w8, [x23]
000000000002cc8c	tbnz	w8, #0x0, 0x2cc3c
000000000002cc90	b	0x2cc40
000000000002cc94	mov	x1, x0
000000000002cc98	mov	x0, x19
000000000002cc9c	blr	x22
000000000002cca0	ldr	x8, [x0]
000000000002cca4	mov	x9, sp
000000000002cca8	str	x9, [x8, #0x110]
000000000002ccac	mov	x0, x1
000000000002ccb0	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002ccb4	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002ccb8	b	0x2ccb8
_objc2kotlin_kfun:kotlin.Any#toString(){}kotlin.String:
000000000002ccbc	sub	sp, sp, #0x70
000000000002ccc0	stp	x24, x23, [sp, #0x30]
000000000002ccc4	stp	x22, x21, [sp, #0x40]
000000000002ccc8	stp	x20, x19, [sp, #0x50]
000000000002cccc	stp	x29, x30, [sp, #0x60]
000000000002ccd0	add	x29, sp, #0x60
000000000002ccd4	mov	x21, x0
000000000002ccd8	movi.16b	v0, #0x0
000000000002ccdc	stp	q0, q0, [sp, #0x10]
000000000002cce0	str	q0, [sp]
000000000002cce4	mov	x8, sp
000000000002cce8	add	x22, x8, #0x18
000000000002ccec	add	x20, x8, #0x28
000000000002ccf0	bl	_Kotlin_initRuntimeIfNeeded
000000000002ccf4	adrp	x19, 78 ; 0x7a000
000000000002ccf8	add	x19, x19, #0x4e0
000000000002ccfc	ldr	x23, [x19]
000000000002cd00	mov	x0, x19
000000000002cd04	blr	x23
000000000002cd08	ldr	x8, [x0]
000000000002cd0c	add	x0, x8, #0x138
000000000002cd10	ldaxr	w8, [x0]
000000000002cd14	stlxr	w9, wzr, [x0]
000000000002cd18	cbnz	w9, 0x2cd10
000000000002cd1c	adr	x24, #0x677ed
000000000002cd20	nop
000000000002cd24	cmp	w8, #0x1
000000000002cd28	b.ne	0x2cd38
000000000002cd2c	ldarb	w8, [x24]
000000000002cd30	tbz	w8, #0x0, 0x2cd38
000000000002cd34	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002cd38	mov	x0, x19
000000000002cd3c	blr	x23
000000000002cd40	ldr	x8, [x0]
000000000002cd44	ldr	x9, [x8, #0x110]
000000000002cd48	mov	x10, sp
000000000002cd4c	str	x10, [x8, #0x110]
000000000002cd50	mov	x8, #0x600000000
000000000002cd54	stp	x9, x8, [sp, #0x8]
000000000002cd58	ldarb	w8, [x24]
000000000002cd5c	tbz	w8, #0x0, 0x2cd64
000000000002cd60	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002cd64	cbz	x21, 0x2cd80
000000000002cd68	nop
000000000002cd6c	ldr	x1, #0x679ec
000000000002cd70	mov	x0, x21
000000000002cd74	mov	x2, x22
000000000002cd78	bl	0x55ca8 ; Objc message: -[x0 raise:format:]
000000000002cd7c	b	0x2cd88
000000000002cd80	mov	x0, #0x0
000000000002cd84	str	xzr, [sp, #0x18]
000000000002cd88	mov	x1, x20
000000000002cd8c	bl	"_kfun:kotlin.Any#toString(){}kotlin.String"
000000000002cd90	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002cd94	mov	x1, x0
000000000002cd98	mov	x0, x19
000000000002cd9c	blr	x23
000000000002cda0	ldr	x8, [x0]
000000000002cda4	ldr	x9, [sp, #0x8]
000000000002cda8	str	x9, [x8, #0x110]
000000000002cdac	add	x8, x8, #0x138
000000000002cdb0	mov	w9, #0x1
000000000002cdb4	ldaxr	wzr, [x8]
000000000002cdb8	stlxr	w10, w9, [x8]
000000000002cdbc	cbnz	w10, 0x2cdb4
000000000002cdc0	mov	x0, x1
000000000002cdc4	ldp	x29, x30, [sp, #0x60]
000000000002cdc8	ldp	x20, x19, [sp, #0x50]
000000000002cdcc	ldp	x22, x21, [sp, #0x40]
000000000002cdd0	ldp	x24, x23, [sp, #0x30]
000000000002cdd4	add	sp, sp, #0x70
000000000002cdd8	b	0x55c54 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002cddc	mov	x1, x0
000000000002cde0	mov	x0, x19
000000000002cde4	blr	x23
000000000002cde8	ldr	x8, [x0]
000000000002cdec	mov	x9, sp
000000000002cdf0	str	x9, [x8, #0x110]
000000000002cdf4	mov	x0, x1
000000000002cdf8	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002cdfc	ldr	x8, [x0, #0x8]
000000000002ce00	ldr	x20, [x8]
000000000002ce04	str	x20, [sp, #0x20]
000000000002ce08	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002ce0c	mov	x0, x20
000000000002ce10	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002ce14	brk	#0x1
000000000002ce18	mov	x1, x0
000000000002ce1c	mov	x0, x19
000000000002ce20	blr	x23
000000000002ce24	ldr	x8, [x0]
000000000002ce28	mov	x9, sp
000000000002ce2c	str	x9, [x8, #0x110]
000000000002ce30	mov	x0, x1
000000000002ce34	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002ce38	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002ce3c	b	0x2ce3c
_objc2kotlin_virtual_Kotlin_Any_equals:
000000000002ce40	sub	sp, sp, #0x80
000000000002ce44	stp	x26, x25, [sp, #0x30]
000000000002ce48	stp	x24, x23, [sp, #0x40]
000000000002ce4c	stp	x22, x21, [sp, #0x50]
000000000002ce50	stp	x20, x19, [sp, #0x60]
000000000002ce54	stp	x29, x30, [sp, #0x70]
000000000002ce58	add	x29, sp, #0x70
000000000002ce5c	mov	x20, x2
000000000002ce60	mov	x22, x0
000000000002ce64	movi.16b	v0, #0x0
000000000002ce68	stp	q0, q0, [sp, #0x10]
000000000002ce6c	str	q0, [sp]
000000000002ce70	mov	x8, sp
000000000002ce74	add	x21, x8, #0x20
000000000002ce78	add	x23, x8, #0x18
000000000002ce7c	bl	_Kotlin_initRuntimeIfNeeded
000000000002ce80	adrp	x19, 78 ; 0x7a000
000000000002ce84	add	x19, x19, #0x4e0
000000000002ce88	ldr	x24, [x19]
000000000002ce8c	mov	x0, x19
000000000002ce90	blr	x24
000000000002ce94	ldr	x8, [x0]
000000000002ce98	add	x0, x8, #0x138
000000000002ce9c	ldaxr	w8, [x0]
000000000002cea0	stlxr	w9, wzr, [x0]
000000000002cea4	cbnz	w9, 0x2ce9c
000000000002cea8	adr	x25, #0x67661
000000000002ceac	nop
000000000002ceb0	cmp	w8, #0x1
000000000002ceb4	b.ne	0x2cec4
000000000002ceb8	ldarb	w8, [x25]
000000000002cebc	tbz	w8, #0x0, 0x2cec4
000000000002cec0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002cec4	mov	x0, x19
000000000002cec8	blr	x24
000000000002cecc	ldr	x8, [x0]
000000000002ced0	ldr	x9, [x8, #0x110]
000000000002ced4	mov	x10, sp
000000000002ced8	str	x10, [x8, #0x110]
000000000002cedc	mov	x8, #0x600000000
000000000002cee0	stp	x9, x8, [sp, #0x8]
000000000002cee4	ldarb	w8, [x25]
000000000002cee8	tbz	w8, #0x0, 0x2cef0
000000000002ceec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002cef0	adrp	x25, 104 ; 0x94000
000000000002cef4	cbz	x22, 0x2cf28
000000000002cef8	ldr	x1, [x25, #0x758]
000000000002cefc	mov	x0, x22
000000000002cf00	mov	x2, x23
000000000002cf04	bl	0x55ca8 ; Objc message: -[x0 raise:format:]
000000000002cf08	mov	x22, x0
000000000002cf0c	cbz	x20, 0x2cf30
000000000002cf10	ldr	x1, [x25, #0x758]
000000000002cf14	mov	x0, x20
000000000002cf18	mov	x2, x21
000000000002cf1c	bl	0x55ca8 ; Objc message: -[x0 raise:format:]
000000000002cf20	mov	x1, x0
000000000002cf24	b	0x2cf38
000000000002cf28	str	xzr, [sp, #0x18]
000000000002cf2c	cbnz	x20, 0x2cf10
000000000002cf30	mov	x1, #0x0
000000000002cf34	str	xzr, [sp, #0x20]
000000000002cf38	ldr	x8, [x22]
000000000002cf3c	and	x8, x8, #0xfffffffffffffffc
000000000002cf40	ldr	x8, [x8]
000000000002cf44	ldr	x8, [x8, #0x70]
000000000002cf48	mov	x0, x22
000000000002cf4c	blr	x8
000000000002cf50	mov	x1, x0
000000000002cf54	mov	x0, x19
000000000002cf58	blr	x24
000000000002cf5c	ldr	x8, [x0]
000000000002cf60	ldr	x9, [sp, #0x8]
000000000002cf64	str	x9, [x8, #0x110]
000000000002cf68	add	x8, x8, #0x138
000000000002cf6c	mov	w9, #0x1
000000000002cf70	ldaxr	wzr, [x8]
000000000002cf74	stlxr	w10, w9, [x8]
000000000002cf78	cbnz	w10, 0x2cf70
000000000002cf7c	mov	x0, x1
000000000002cf80	ldp	x29, x30, [sp, #0x70]
000000000002cf84	ldp	x20, x19, [sp, #0x60]
000000000002cf88	ldp	x22, x21, [sp, #0x50]
000000000002cf8c	ldp	x24, x23, [sp, #0x40]
000000000002cf90	ldp	x26, x25, [sp, #0x30]
000000000002cf94	add	sp, sp, #0x80
000000000002cf98	ret
000000000002cf9c	mov	x1, x0
000000000002cfa0	mov	x0, x19
000000000002cfa4	blr	x24
000000000002cfa8	ldr	x8, [x0]
000000000002cfac	mov	x9, sp
000000000002cfb0	str	x9, [x8, #0x110]
000000000002cfb4	mov	x0, x1
000000000002cfb8	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002cfbc	ldr	x8, [x0, #0x8]
000000000002cfc0	ldr	x20, [x8]
000000000002cfc4	str	x20, [sp, #0x28]
000000000002cfc8	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002cfcc	mov	x0, x20
000000000002cfd0	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002cfd4	brk	#0x1
000000000002cfd8	mov	x1, x0
000000000002cfdc	mov	x0, x19
000000000002cfe0	blr	x24
000000000002cfe4	ldr	x8, [x0]
000000000002cfe8	mov	x9, sp
000000000002cfec	str	x9, [x8, #0x110]
000000000002cff0	mov	x0, x1
000000000002cff4	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002cff8	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002cffc	b	0x2cffc
_objc2kotlin_virtual_kfun:kotlin.Any#hashCode(){}kotlin.Int:
000000000002d000	sub	sp, sp, #0x70
000000000002d004	stp	x24, x23, [sp, #0x30]
000000000002d008	stp	x22, x21, [sp, #0x40]
000000000002d00c	stp	x20, x19, [sp, #0x50]
000000000002d010	stp	x29, x30, [sp, #0x60]
000000000002d014	add	x29, sp, #0x60
000000000002d018	mov	x20, x0
000000000002d01c	str	xzr, [sp, #0x20]
000000000002d020	movi.16b	v0, #0x0
000000000002d024	stp	q0, q0, [sp]
000000000002d028	mov	x8, sp
000000000002d02c	add	x21, x8, #0x18
000000000002d030	bl	_Kotlin_initRuntimeIfNeeded
000000000002d034	adrp	x19, 77 ; 0x7a000
000000000002d038	add	x19, x19, #0x4e0
000000000002d03c	ldr	x22, [x19]
000000000002d040	mov	x0, x19
000000000002d044	blr	x22
000000000002d048	ldr	x8, [x0]
000000000002d04c	add	x0, x8, #0x138
000000000002d050	ldaxr	w8, [x0]
000000000002d054	stlxr	w9, wzr, [x0]
000000000002d058	cbnz	w9, 0x2d050
000000000002d05c	adr	x23, #0x674ad
000000000002d060	nop
000000000002d064	cmp	w8, #0x1
000000000002d068	b.ne	0x2d078
000000000002d06c	ldarb	w8, [x23]
000000000002d070	tbz	w8, #0x0, 0x2d078
000000000002d074	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002d078	mov	x0, x19
000000000002d07c	blr	x22
000000000002d080	ldr	x8, [x0]
000000000002d084	ldr	x9, [x8, #0x110]
000000000002d088	mov	x10, sp
000000000002d08c	str	x10, [x8, #0x110]
000000000002d090	mov	x8, #0x500000000
000000000002d094	stp	x9, x8, [sp, #0x8]
000000000002d098	ldarb	w8, [x23]
000000000002d09c	tbz	w8, #0x0, 0x2d0a4
000000000002d0a0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d0a4	nop
000000000002d0a8	ldr	x1, #0x676b0
000000000002d0ac	mov	x0, x20
000000000002d0b0	mov	x2, x21
000000000002d0b4	bl	0x55ca8 ; Objc message: -[x0 raise:format:]
000000000002d0b8	ldr	x8, [x0]
000000000002d0bc	and	x8, x8, #0xfffffffffffffffc
000000000002d0c0	ldr	x8, [x8]
000000000002d0c4	ldr	x8, [x8, #0x78]
000000000002d0c8	blr	x8
000000000002d0cc	mov	w8, w0
000000000002d0d0	mov	x0, x19
000000000002d0d4	blr	x22
000000000002d0d8	ldr	x9, [x0]
000000000002d0dc	ldr	x10, [sp, #0x8]
000000000002d0e0	str	x10, [x9, #0x110]
000000000002d0e4	add	x9, x9, #0x138
000000000002d0e8	mov	w10, #0x1
000000000002d0ec	ldaxr	wzr, [x9]
000000000002d0f0	stlxr	w11, w10, [x9]
000000000002d0f4	cbnz	w11, 0x2d0ec
000000000002d0f8	mov	x0, x8
000000000002d0fc	ldp	x29, x30, [sp, #0x60]
000000000002d100	ldp	x20, x19, [sp, #0x50]
000000000002d104	ldp	x22, x21, [sp, #0x40]
000000000002d108	ldp	x24, x23, [sp, #0x30]
000000000002d10c	add	sp, sp, #0x70
000000000002d110	ret
000000000002d114	mov	x1, x0
000000000002d118	mov	x0, x19
000000000002d11c	blr	x22
000000000002d120	ldr	x8, [x0]
000000000002d124	mov	x9, sp
000000000002d128	str	x9, [x8, #0x110]
000000000002d12c	mov	x0, x1
000000000002d130	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002d134	ldr	x8, [x0, #0x8]
000000000002d138	ldr	x20, [x8]
000000000002d13c	str	x20, [sp, #0x20]
000000000002d140	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002d144	mov	x0, x20
000000000002d148	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002d14c	brk	#0x1
000000000002d150	mov	x1, x0
000000000002d154	mov	x0, x19
000000000002d158	blr	x22
000000000002d15c	ldr	x8, [x0]
000000000002d160	mov	x9, sp
000000000002d164	str	x9, [x8, #0x110]
000000000002d168	mov	x0, x1
000000000002d16c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002d170	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002d174	b	0x2d174
_objc2kotlin_virtual_kfun:kotlin.Any#toString(){}kotlin.String:
000000000002d178	sub	sp, sp, #0x70
000000000002d17c	stp	x24, x23, [sp, #0x30]
000000000002d180	stp	x22, x21, [sp, #0x40]
000000000002d184	stp	x20, x19, [sp, #0x50]
000000000002d188	stp	x29, x30, [sp, #0x60]
000000000002d18c	add	x29, sp, #0x60
000000000002d190	mov	x21, x0
000000000002d194	movi.16b	v0, #0x0
000000000002d198	stp	q0, q0, [sp, #0x10]
000000000002d19c	str	q0, [sp]
000000000002d1a0	mov	x8, sp
000000000002d1a4	add	x22, x8, #0x18
000000000002d1a8	add	x20, x8, #0x28
000000000002d1ac	bl	_Kotlin_initRuntimeIfNeeded
000000000002d1b0	adrp	x19, 77 ; 0x7a000
000000000002d1b4	add	x19, x19, #0x4e0
000000000002d1b8	ldr	x23, [x19]
000000000002d1bc	mov	x0, x19
000000000002d1c0	blr	x23
000000000002d1c4	ldr	x8, [x0]
000000000002d1c8	add	x0, x8, #0x138
000000000002d1cc	ldaxr	w8, [x0]
000000000002d1d0	stlxr	w9, wzr, [x0]
000000000002d1d4	cbnz	w9, 0x2d1cc
000000000002d1d8	adr	x24, #0x67331
000000000002d1dc	nop
000000000002d1e0	cmp	w8, #0x1
000000000002d1e4	b.ne	0x2d1f4
000000000002d1e8	ldarb	w8, [x24]
000000000002d1ec	tbz	w8, #0x0, 0x2d1f4
000000000002d1f0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000002d1f4	mov	x0, x19
000000000002d1f8	blr	x23
000000000002d1fc	ldr	x8, [x0]
000000000002d200	ldr	x9, [x8, #0x110]
000000000002d204	mov	x10, sp
000000000002d208	str	x10, [x8, #0x110]
000000000002d20c	mov	x8, #0x600000000
000000000002d210	stp	x9, x8, [sp, #0x8]
000000000002d214	ldarb	w8, [x24]
000000000002d218	tbz	w8, #0x0, 0x2d220
000000000002d21c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d220	nop
000000000002d224	ldr	x1, #0x67534
000000000002d228	mov	x0, x21
000000000002d22c	mov	x2, x22
000000000002d230	bl	0x55ca8 ; Objc message: -[x0 raise:format:]
000000000002d234	ldr	x8, [x0]
000000000002d238	and	x8, x8, #0xfffffffffffffffc
000000000002d23c	ldr	x8, [x8]
000000000002d240	ldr	x8, [x8, #0x80]
000000000002d244	mov	x1, x20
000000000002d248	blr	x8
000000000002d24c	bl	_Kotlin_ObjCExport_refToRetainedObjC
000000000002d250	mov	x1, x0
000000000002d254	mov	x0, x19
000000000002d258	blr	x23
000000000002d25c	ldr	x8, [x0]
000000000002d260	ldr	x9, [sp, #0x8]
000000000002d264	str	x9, [x8, #0x110]
000000000002d268	add	x8, x8, #0x138
000000000002d26c	mov	w9, #0x1
000000000002d270	ldaxr	wzr, [x8]
000000000002d274	stlxr	w10, w9, [x8]
000000000002d278	cbnz	w10, 0x2d270
000000000002d27c	mov	x0, x1
000000000002d280	ldp	x29, x30, [sp, #0x60]
000000000002d284	ldp	x20, x19, [sp, #0x50]
000000000002d288	ldp	x22, x21, [sp, #0x40]
000000000002d28c	ldp	x24, x23, [sp, #0x30]
000000000002d290	add	sp, sp, #0x70
000000000002d294	b	0x55c54 ; symbol stub for: _objc_autoreleaseReturnValue
000000000002d298	mov	x1, x0
000000000002d29c	mov	x0, x19
000000000002d2a0	blr	x23
000000000002d2a4	ldr	x8, [x0]
000000000002d2a8	mov	x9, sp
000000000002d2ac	str	x9, [x8, #0x110]
000000000002d2b0	mov	x0, x1
000000000002d2b4	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002d2b8	ldr	x8, [x0, #0x8]
000000000002d2bc	ldr	x20, [x8]
000000000002d2c0	str	x20, [sp, #0x20]
000000000002d2c4	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000002d2c8	mov	x0, x20
000000000002d2cc	bl	_Kotlin_ObjCExport_trapOnUndeclaredException
000000000002d2d0	brk	#0x1
000000000002d2d4	mov	x1, x0
000000000002d2d8	mov	x0, x19
000000000002d2dc	blr	x23
000000000002d2e0	ldr	x8, [x0]
000000000002d2e4	mov	x9, sp
000000000002d2e8	str	x9, [x8, #0x110]
000000000002d2ec	mov	x0, x1
000000000002d2f0	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002d2f4	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002d2f8	b	0x2d2f8
000000000002d2fc	sub	sp, sp, #0x50
000000000002d300	stp	x22, x21, [sp, #0x20]
000000000002d304	stp	x20, x19, [sp, #0x30]
000000000002d308	stp	x29, x30, [sp, #0x40]
000000000002d30c	add	x29, sp, #0x40
000000000002d310	mov	x20, x0
000000000002d314	str	xzr, [sp, #0x8]
000000000002d318	adrp	x19, 77 ; 0x7a000
000000000002d31c	add	x19, x19, #0x4e0
000000000002d320	ldr	x21, [x19]
000000000002d324	mov	x0, x19
000000000002d328	blr	x21
000000000002d32c	ldr	x8, [x0]
000000000002d330	ldr	x9, [x8, #0x110]
000000000002d334	add	x10, sp, #0x8
000000000002d338	str	x10, [x8, #0x110]
000000000002d33c	mov	x8, #0x300000000
000000000002d340	stp	x9, x8, [sp, #0x10]
000000000002d344	adr	x8, #0x671c5
000000000002d348	nop
000000000002d34c	ldarb	w8, [x8]
000000000002d350	tbz	w8, #0x0, 0x2d358
000000000002d354	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d358	ldrb	w20, [x20, #0x8]
000000000002d35c	nop
000000000002d360	ldr	x0, #0x49c98 ; Objc class ref: RCKBoolean
000000000002d364	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000002d368	nop
000000000002d36c	ldr	x1, #0x4995c ; Objc selector ref: initWithBool:
000000000002d370	mov	x2, x20
000000000002d374	bl	0x55ca8 ; Objc message: +[RCKBoolean initWithBool:]
000000000002d378	mov	x1, x0
000000000002d37c	mov	x0, x19
000000000002d380	blr	x21
000000000002d384	ldr	x8, [x0]
000000000002d388	ldr	x9, [sp, #0x10]
000000000002d38c	str	x9, [x8, #0x110]
000000000002d390	mov	x0, x1
000000000002d394	ldp	x29, x30, [sp, #0x40]
000000000002d398	ldp	x20, x19, [sp, #0x30]
000000000002d39c	ldp	x22, x21, [sp, #0x20]
000000000002d3a0	add	sp, sp, #0x50
000000000002d3a4	ret
000000000002d3a8	mov	x1, x0
000000000002d3ac	mov	x0, x19
000000000002d3b0	blr	x21
000000000002d3b4	ldr	x8, [x0]
000000000002d3b8	add	x9, sp, #0x8
000000000002d3bc	str	x9, [x8, #0x110]
000000000002d3c0	mov	x0, x1
000000000002d3c4	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002d3c8	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002d3cc	b	0x2d3cc
000000000002d3d0	sub	sp, sp, #0x50
000000000002d3d4	stp	x22, x21, [sp, #0x20]
000000000002d3d8	stp	x20, x19, [sp, #0x30]
000000000002d3dc	stp	x29, x30, [sp, #0x40]
000000000002d3e0	add	x29, sp, #0x40
000000000002d3e4	mov	x20, x0
000000000002d3e8	str	xzr, [sp, #0x8]
000000000002d3ec	adrp	x19, 77 ; 0x7a000
000000000002d3f0	add	x19, x19, #0x4e0
000000000002d3f4	ldr	x21, [x19]
000000000002d3f8	mov	x0, x19
000000000002d3fc	blr	x21
000000000002d400	ldr	x8, [x0]
000000000002d404	ldr	x9, [x8, #0x110]
000000000002d408	add	x10, sp, #0x8
000000000002d40c	str	x10, [x8, #0x110]
000000000002d410	mov	x8, #0x300000000
000000000002d414	stp	x9, x8, [sp, #0x10]
000000000002d418	adr	x8, #0x670f1
000000000002d41c	nop
000000000002d420	ldarb	w8, [x8]
000000000002d424	tbz	w8, #0x0, 0x2d42c
000000000002d428	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d42c	ldrb	w20, [x20, #0x8]
000000000002d430	nop
000000000002d434	ldr	x0, #0x49bcc ; Objc class ref: RCKByte
000000000002d438	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000002d43c	nop
000000000002d440	ldr	x1, #0x498b8 ; Objc selector ref: initWithChar:
000000000002d444	sxtb	w2, w20
000000000002d448	bl	0x55ca8 ; Objc message: +[RCKByte initWithChar:]
000000000002d44c	mov	x1, x0
000000000002d450	mov	x0, x19
000000000002d454	blr	x21
000000000002d458	ldr	x8, [x0]
000000000002d45c	ldr	x9, [sp, #0x10]
000000000002d460	str	x9, [x8, #0x110]
000000000002d464	mov	x0, x1
000000000002d468	ldp	x29, x30, [sp, #0x40]
000000000002d46c	ldp	x20, x19, [sp, #0x30]
000000000002d470	ldp	x22, x21, [sp, #0x20]
000000000002d474	add	sp, sp, #0x50
000000000002d478	ret
000000000002d47c	mov	x1, x0
000000000002d480	mov	x0, x19
000000000002d484	blr	x21
000000000002d488	ldr	x8, [x0]
000000000002d48c	add	x9, sp, #0x8
000000000002d490	str	x9, [x8, #0x110]
000000000002d494	mov	x0, x1
000000000002d498	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002d49c	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002d4a0	b	0x2d4a0
000000000002d4a4	sub	sp, sp, #0x50
000000000002d4a8	stp	x22, x21, [sp, #0x20]
000000000002d4ac	stp	x20, x19, [sp, #0x30]
000000000002d4b0	stp	x29, x30, [sp, #0x40]
000000000002d4b4	add	x29, sp, #0x40
000000000002d4b8	mov	x20, x0
000000000002d4bc	str	xzr, [sp, #0x8]
000000000002d4c0	adrp	x19, 77 ; 0x7a000
000000000002d4c4	add	x19, x19, #0x4e0
000000000002d4c8	ldr	x21, [x19]
000000000002d4cc	mov	x0, x19
000000000002d4d0	blr	x21
000000000002d4d4	ldr	x8, [x0]
000000000002d4d8	ldr	x9, [x8, #0x110]
000000000002d4dc	add	x10, sp, #0x8
000000000002d4e0	str	x10, [x8, #0x110]
000000000002d4e4	mov	x8, #0x300000000
000000000002d4e8	stp	x9, x8, [sp, #0x10]
000000000002d4ec	adr	x8, #0x6701d
000000000002d4f0	nop
000000000002d4f4	ldarb	w8, [x8]
000000000002d4f8	tbz	w8, #0x0, 0x2d500
000000000002d4fc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d500	ldrh	w20, [x20, #0x8]
000000000002d504	nop
000000000002d508	ldr	x0, #0x49b00 ; Objc class ref: RCKShort
000000000002d50c	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000002d510	nop
000000000002d514	ldr	x1, #0x49824 ; Objc selector ref: initWithShort:
000000000002d518	sxth	w2, w20
000000000002d51c	bl	0x55ca8 ; Objc message: +[RCKShort initWithShort:]
000000000002d520	mov	x1, x0
000000000002d524	mov	x0, x19
000000000002d528	blr	x21
000000000002d52c	ldr	x8, [x0]
000000000002d530	ldr	x9, [sp, #0x10]
000000000002d534	str	x9, [x8, #0x110]
000000000002d538	mov	x0, x1
000000000002d53c	ldp	x29, x30, [sp, #0x40]
000000000002d540	ldp	x20, x19, [sp, #0x30]
000000000002d544	ldp	x22, x21, [sp, #0x20]
000000000002d548	add	sp, sp, #0x50
000000000002d54c	ret
000000000002d550	mov	x1, x0
000000000002d554	mov	x0, x19
000000000002d558	blr	x21
000000000002d55c	ldr	x8, [x0]
000000000002d560	add	x9, sp, #0x8
000000000002d564	str	x9, [x8, #0x110]
000000000002d568	mov	x0, x1
000000000002d56c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002d570	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002d574	b	0x2d574
000000000002d578	sub	sp, sp, #0x50
000000000002d57c	stp	x22, x21, [sp, #0x20]
000000000002d580	stp	x20, x19, [sp, #0x30]
000000000002d584	stp	x29, x30, [sp, #0x40]
000000000002d588	add	x29, sp, #0x40
000000000002d58c	mov	x20, x0
000000000002d590	str	xzr, [sp, #0x8]
000000000002d594	adrp	x19, 77 ; 0x7a000
000000000002d598	add	x19, x19, #0x4e0
000000000002d59c	ldr	x21, [x19]
000000000002d5a0	mov	x0, x19
000000000002d5a4	blr	x21
000000000002d5a8	ldr	x8, [x0]
000000000002d5ac	ldr	x9, [x8, #0x110]
000000000002d5b0	add	x10, sp, #0x8
000000000002d5b4	str	x10, [x8, #0x110]
000000000002d5b8	mov	x8, #0x300000000
000000000002d5bc	stp	x9, x8, [sp, #0x10]
000000000002d5c0	adr	x8, #0x66f49
000000000002d5c4	nop
000000000002d5c8	ldarb	w8, [x8]
000000000002d5cc	tbz	w8, #0x0, 0x2d5d4
000000000002d5d0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d5d4	ldr	w20, [x20, #0x8]
000000000002d5d8	nop
000000000002d5dc	ldr	x0, #0x49a34 ; Objc class ref: RCKInt
000000000002d5e0	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000002d5e4	nop
000000000002d5e8	ldr	x1, #0x49728 ; Objc selector ref: initWithInt:
000000000002d5ec	mov	x2, x20
000000000002d5f0	bl	0x55ca8 ; Objc message: +[RCKInt initWithInt:]
000000000002d5f4	mov	x1, x0
000000000002d5f8	mov	x0, x19
000000000002d5fc	blr	x21
000000000002d600	ldr	x8, [x0]
000000000002d604	ldr	x9, [sp, #0x10]
000000000002d608	str	x9, [x8, #0x110]
000000000002d60c	mov	x0, x1
000000000002d610	ldp	x29, x30, [sp, #0x40]
000000000002d614	ldp	x20, x19, [sp, #0x30]
000000000002d618	ldp	x22, x21, [sp, #0x20]
000000000002d61c	add	sp, sp, #0x50
000000000002d620	ret
000000000002d624	mov	x1, x0
000000000002d628	mov	x0, x19
000000000002d62c	blr	x21
000000000002d630	ldr	x8, [x0]
000000000002d634	add	x9, sp, #0x8
000000000002d638	str	x9, [x8, #0x110]
000000000002d63c	mov	x0, x1
000000000002d640	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002d644	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002d648	b	0x2d648
000000000002d64c	sub	sp, sp, #0x50
000000000002d650	stp	x22, x21, [sp, #0x20]
000000000002d654	stp	x20, x19, [sp, #0x30]
000000000002d658	stp	x29, x30, [sp, #0x40]
000000000002d65c	add	x29, sp, #0x40
000000000002d660	mov	x20, x0
000000000002d664	str	xzr, [sp, #0x8]
000000000002d668	adrp	x19, 77 ; 0x7a000
000000000002d66c	add	x19, x19, #0x4e0
000000000002d670	ldr	x21, [x19]
000000000002d674	mov	x0, x19
000000000002d678	blr	x21
000000000002d67c	ldr	x8, [x0]
000000000002d680	ldr	x9, [x8, #0x110]
000000000002d684	add	x10, sp, #0x8
000000000002d688	str	x10, [x8, #0x110]
000000000002d68c	mov	x8, #0x300000000
000000000002d690	stp	x9, x8, [sp, #0x10]
000000000002d694	adr	x8, #0x66e75
000000000002d698	nop
000000000002d69c	ldarb	w8, [x8]
000000000002d6a0	tbz	w8, #0x0, 0x2d6a8
000000000002d6a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d6a8	ldr	x20, [x20, #0x8]
000000000002d6ac	nop
000000000002d6b0	ldr	x0, #0x49968 ; Objc class ref: RCKLong
000000000002d6b4	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000002d6b8	nop
000000000002d6bc	ldr	x1, #0x4966c ; Objc selector ref: initWithLongLong:
000000000002d6c0	mov	x2, x20
000000000002d6c4	bl	0x55ca8 ; Objc message: +[RCKLong initWithLongLong:]
000000000002d6c8	mov	x1, x0
000000000002d6cc	mov	x0, x19
000000000002d6d0	blr	x21
000000000002d6d4	ldr	x8, [x0]
000000000002d6d8	ldr	x9, [sp, #0x10]
000000000002d6dc	str	x9, [x8, #0x110]
000000000002d6e0	mov	x0, x1
000000000002d6e4	ldp	x29, x30, [sp, #0x40]
000000000002d6e8	ldp	x20, x19, [sp, #0x30]
000000000002d6ec	ldp	x22, x21, [sp, #0x20]
000000000002d6f0	add	sp, sp, #0x50
000000000002d6f4	ret
000000000002d6f8	mov	x1, x0
000000000002d6fc	mov	x0, x19
000000000002d700	blr	x21
000000000002d704	ldr	x8, [x0]
000000000002d708	add	x9, sp, #0x8
000000000002d70c	str	x9, [x8, #0x110]
000000000002d710	mov	x0, x1
000000000002d714	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002d718	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002d71c	b	0x2d71c
000000000002d720	sub	sp, sp, #0x50
000000000002d724	stp	x22, x21, [sp, #0x20]
000000000002d728	stp	x20, x19, [sp, #0x30]
000000000002d72c	stp	x29, x30, [sp, #0x40]
000000000002d730	add	x29, sp, #0x40
000000000002d734	mov	x20, x0
000000000002d738	str	xzr, [sp, #0x8]
000000000002d73c	adrp	x19, 77 ; 0x7a000
000000000002d740	add	x19, x19, #0x4e0
000000000002d744	ldr	x21, [x19]
000000000002d748	mov	x0, x19
000000000002d74c	blr	x21
000000000002d750	ldr	x8, [x0]
000000000002d754	ldr	x9, [x8, #0x110]
000000000002d758	add	x10, sp, #0x8
000000000002d75c	str	x10, [x8, #0x110]
000000000002d760	mov	x8, #0x300000000
000000000002d764	stp	x9, x8, [sp, #0x10]
000000000002d768	adr	x8, #0x66da1
000000000002d76c	nop
000000000002d770	ldarb	w8, [x8]
000000000002d774	tbz	w8, #0x0, 0x2d77c
000000000002d778	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d77c	ldrb	w20, [x20, #0x8]
000000000002d780	nop
000000000002d784	ldr	x0, #0x4989c ; Objc class ref: RCKUByte
000000000002d788	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000002d78c	nop
000000000002d790	ldr	x1, #0x495b0 ; Objc selector ref: initWithUnsignedChar:
000000000002d794	mov	x2, x20
000000000002d798	bl	0x55ca8 ; Objc message: +[RCKUByte initWithUnsignedChar:]
000000000002d79c	mov	x1, x0
000000000002d7a0	mov	x0, x19
000000000002d7a4	blr	x21
000000000002d7a8	ldr	x8, [x0]
000000000002d7ac	ldr	x9, [sp, #0x10]
000000000002d7b0	str	x9, [x8, #0x110]
000000000002d7b4	mov	x0, x1
000000000002d7b8	ldp	x29, x30, [sp, #0x40]
000000000002d7bc	ldp	x20, x19, [sp, #0x30]
000000000002d7c0	ldp	x22, x21, [sp, #0x20]
000000000002d7c4	add	sp, sp, #0x50
000000000002d7c8	ret
000000000002d7cc	mov	x1, x0
000000000002d7d0	mov	x0, x19
000000000002d7d4	blr	x21
000000000002d7d8	ldr	x8, [x0]
000000000002d7dc	add	x9, sp, #0x8
000000000002d7e0	str	x9, [x8, #0x110]
000000000002d7e4	mov	x0, x1
000000000002d7e8	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002d7ec	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002d7f0	b	0x2d7f0
000000000002d7f4	sub	sp, sp, #0x50
000000000002d7f8	stp	x22, x21, [sp, #0x20]
000000000002d7fc	stp	x20, x19, [sp, #0x30]
000000000002d800	stp	x29, x30, [sp, #0x40]
000000000002d804	add	x29, sp, #0x40
000000000002d808	mov	x20, x0
000000000002d80c	str	xzr, [sp, #0x8]
000000000002d810	adrp	x19, 77 ; 0x7a000
000000000002d814	add	x19, x19, #0x4e0
000000000002d818	ldr	x21, [x19]
000000000002d81c	mov	x0, x19
000000000002d820	blr	x21
000000000002d824	ldr	x8, [x0]
000000000002d828	ldr	x9, [x8, #0x110]
000000000002d82c	add	x10, sp, #0x8
000000000002d830	str	x10, [x8, #0x110]
000000000002d834	mov	x8, #0x300000000
000000000002d838	stp	x9, x8, [sp, #0x10]
000000000002d83c	adr	x8, #0x66ccd
000000000002d840	nop
000000000002d844	ldarb	w8, [x8]
000000000002d848	tbz	w8, #0x0, 0x2d850
000000000002d84c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d850	ldrh	w20, [x20, #0x8]
000000000002d854	nop
000000000002d858	ldr	x0, #0x497d0 ; Objc class ref: RCKUShort
000000000002d85c	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000002d860	nop
000000000002d864	ldr	x1, #0x494f4 ; Objc selector ref: initWithUnsignedShort:
000000000002d868	mov	x2, x20
000000000002d86c	bl	0x55ca8 ; Objc message: +[RCKUShort initWithUnsignedShort:]
000000000002d870	mov	x1, x0
000000000002d874	mov	x0, x19
000000000002d878	blr	x21
000000000002d87c	ldr	x8, [x0]
000000000002d880	ldr	x9, [sp, #0x10]
000000000002d884	str	x9, [x8, #0x110]
000000000002d888	mov	x0, x1
000000000002d88c	ldp	x29, x30, [sp, #0x40]
000000000002d890	ldp	x20, x19, [sp, #0x30]
000000000002d894	ldp	x22, x21, [sp, #0x20]
000000000002d898	add	sp, sp, #0x50
000000000002d89c	ret
000000000002d8a0	mov	x1, x0
000000000002d8a4	mov	x0, x19
000000000002d8a8	blr	x21
000000000002d8ac	ldr	x8, [x0]
000000000002d8b0	add	x9, sp, #0x8
000000000002d8b4	str	x9, [x8, #0x110]
000000000002d8b8	mov	x0, x1
000000000002d8bc	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002d8c0	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002d8c4	b	0x2d8c4
000000000002d8c8	sub	sp, sp, #0x50
000000000002d8cc	stp	x22, x21, [sp, #0x20]
000000000002d8d0	stp	x20, x19, [sp, #0x30]
000000000002d8d4	stp	x29, x30, [sp, #0x40]
000000000002d8d8	add	x29, sp, #0x40
000000000002d8dc	mov	x20, x0
000000000002d8e0	str	xzr, [sp, #0x8]
000000000002d8e4	adrp	x19, 77 ; 0x7a000
000000000002d8e8	add	x19, x19, #0x4e0
000000000002d8ec	ldr	x21, [x19]
000000000002d8f0	mov	x0, x19
000000000002d8f4	blr	x21
000000000002d8f8	ldr	x8, [x0]
000000000002d8fc	ldr	x9, [x8, #0x110]
000000000002d900	add	x10, sp, #0x8
000000000002d904	str	x10, [x8, #0x110]
000000000002d908	mov	x8, #0x300000000
000000000002d90c	stp	x9, x8, [sp, #0x10]
000000000002d910	adr	x8, #0x66bf9
000000000002d914	nop
000000000002d918	ldarb	w8, [x8]
000000000002d91c	tbz	w8, #0x0, 0x2d924
000000000002d920	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d924	ldr	w20, [x20, #0x8]
000000000002d928	nop
000000000002d92c	ldr	x0, #0x49704 ; Objc class ref: RCKUInt
000000000002d930	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000002d934	nop
000000000002d938	ldr	x1, #0x49410 ; Objc selector ref: initWithUnsignedInt:
000000000002d93c	mov	x2, x20
000000000002d940	bl	0x55ca8 ; Objc message: +[RCKUInt initWithUnsignedInt:]
000000000002d944	mov	x1, x0
000000000002d948	mov	x0, x19
000000000002d94c	blr	x21
000000000002d950	ldr	x8, [x0]
000000000002d954	ldr	x9, [sp, #0x10]
000000000002d958	str	x9, [x8, #0x110]
000000000002d95c	mov	x0, x1
000000000002d960	ldp	x29, x30, [sp, #0x40]
000000000002d964	ldp	x20, x19, [sp, #0x30]
000000000002d968	ldp	x22, x21, [sp, #0x20]
000000000002d96c	add	sp, sp, #0x50
000000000002d970	ret
000000000002d974	mov	x1, x0
000000000002d978	mov	x0, x19
000000000002d97c	blr	x21
000000000002d980	ldr	x8, [x0]
000000000002d984	add	x9, sp, #0x8
000000000002d988	str	x9, [x8, #0x110]
000000000002d98c	mov	x0, x1
000000000002d990	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002d994	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002d998	b	0x2d998
000000000002d99c	sub	sp, sp, #0x50
000000000002d9a0	stp	x22, x21, [sp, #0x20]
000000000002d9a4	stp	x20, x19, [sp, #0x30]
000000000002d9a8	stp	x29, x30, [sp, #0x40]
000000000002d9ac	add	x29, sp, #0x40
000000000002d9b0	mov	x20, x0
000000000002d9b4	str	xzr, [sp, #0x8]
000000000002d9b8	adrp	x19, 77 ; 0x7a000
000000000002d9bc	add	x19, x19, #0x4e0
000000000002d9c0	ldr	x21, [x19]
000000000002d9c4	mov	x0, x19
000000000002d9c8	blr	x21
000000000002d9cc	ldr	x8, [x0]
000000000002d9d0	ldr	x9, [x8, #0x110]
000000000002d9d4	add	x10, sp, #0x8
000000000002d9d8	str	x10, [x8, #0x110]
000000000002d9dc	mov	x8, #0x300000000
000000000002d9e0	stp	x9, x8, [sp, #0x10]
000000000002d9e4	adr	x8, #0x66b25
000000000002d9e8	nop
000000000002d9ec	ldarb	w8, [x8]
000000000002d9f0	tbz	w8, #0x0, 0x2d9f8
000000000002d9f4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002d9f8	ldr	x20, [x20, #0x8]
000000000002d9fc	nop
000000000002da00	ldr	x0, #0x49638 ; Objc class ref: RCKULong
000000000002da04	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000002da08	nop
000000000002da0c	ldr	x1, #0x49344 ; Objc selector ref: initWithUnsignedLongLong:
000000000002da10	mov	x2, x20
000000000002da14	bl	0x55ca8 ; Objc message: +[RCKULong initWithUnsignedLongLong:]
000000000002da18	mov	x1, x0
000000000002da1c	mov	x0, x19
000000000002da20	blr	x21
000000000002da24	ldr	x8, [x0]
000000000002da28	ldr	x9, [sp, #0x10]
000000000002da2c	str	x9, [x8, #0x110]
000000000002da30	mov	x0, x1
000000000002da34	ldp	x29, x30, [sp, #0x40]
000000000002da38	ldp	x20, x19, [sp, #0x30]
000000000002da3c	ldp	x22, x21, [sp, #0x20]
000000000002da40	add	sp, sp, #0x50
000000000002da44	ret
000000000002da48	mov	x1, x0
000000000002da4c	mov	x0, x19
000000000002da50	blr	x21
000000000002da54	ldr	x8, [x0]
000000000002da58	add	x9, sp, #0x8
000000000002da5c	str	x9, [x8, #0x110]
000000000002da60	mov	x0, x1
000000000002da64	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002da68	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002da6c	b	0x2da6c
000000000002da70	sub	sp, sp, #0x60
000000000002da74	stp	d9, d8, [sp, #0x20]
000000000002da78	stp	x22, x21, [sp, #0x30]
000000000002da7c	stp	x20, x19, [sp, #0x40]
000000000002da80	stp	x29, x30, [sp, #0x50]
000000000002da84	add	x29, sp, #0x50
000000000002da88	mov	x20, x0
000000000002da8c	str	xzr, [sp, #0x8]
000000000002da90	adrp	x19, 77 ; 0x7a000
000000000002da94	add	x19, x19, #0x4e0
000000000002da98	ldr	x21, [x19]
000000000002da9c	mov	x0, x19
000000000002daa0	blr	x21
000000000002daa4	ldr	x8, [x0]
000000000002daa8	ldr	x9, [x8, #0x110]
000000000002daac	add	x10, sp, #0x8
000000000002dab0	str	x10, [x8, #0x110]
000000000002dab4	mov	x8, #0x300000000
000000000002dab8	stp	x9, x8, [sp, #0x10]
000000000002dabc	adr	x8, #0x66a4d
000000000002dac0	nop
000000000002dac4	ldarb	w8, [x8]
000000000002dac8	tbz	w8, #0x0, 0x2dad0
000000000002dacc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002dad0	ldr	s8, [x20, #0x8]
000000000002dad4	nop
000000000002dad8	ldr	x0, #0x49568 ; Objc class ref: RCKFloat
000000000002dadc	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000002dae0	nop
000000000002dae4	ldr	x1, #0x49224 ; Objc selector ref: initWithFloat:
000000000002dae8	fmov	s0, s8
000000000002daec	bl	0x55ca8 ; Objc message: +[RCKFloat initWithFloat:]
000000000002daf0	mov	x1, x0
000000000002daf4	mov	x0, x19
000000000002daf8	blr	x21
000000000002dafc	ldr	x8, [x0]
000000000002db00	ldr	x9, [sp, #0x10]
000000000002db04	str	x9, [x8, #0x110]
000000000002db08	mov	x0, x1
000000000002db0c	ldp	x29, x30, [sp, #0x50]
000000000002db10	ldp	x20, x19, [sp, #0x40]
000000000002db14	ldp	x22, x21, [sp, #0x30]
000000000002db18	ldp	d9, d8, [sp, #0x20]
000000000002db1c	add	sp, sp, #0x60
000000000002db20	ret
000000000002db24	mov	x1, x0
000000000002db28	mov	x0, x19
000000000002db2c	blr	x21
000000000002db30	ldr	x8, [x0]
000000000002db34	add	x9, sp, #0x8
000000000002db38	str	x9, [x8, #0x110]
000000000002db3c	mov	x0, x1
000000000002db40	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002db44	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002db48	b	0x2db48
000000000002db4c	sub	sp, sp, #0x60
000000000002db50	stp	d9, d8, [sp, #0x20]
000000000002db54	stp	x22, x21, [sp, #0x30]
000000000002db58	stp	x20, x19, [sp, #0x40]
000000000002db5c	stp	x29, x30, [sp, #0x50]
000000000002db60	add	x29, sp, #0x50
000000000002db64	mov	x20, x0
000000000002db68	str	xzr, [sp, #0x8]
000000000002db6c	adrp	x19, 77 ; 0x7a000
000000000002db70	add	x19, x19, #0x4e0
000000000002db74	ldr	x21, [x19]
000000000002db78	mov	x0, x19
000000000002db7c	blr	x21
000000000002db80	ldr	x8, [x0]
000000000002db84	ldr	x9, [x8, #0x110]
000000000002db88	add	x10, sp, #0x8
000000000002db8c	str	x10, [x8, #0x110]
000000000002db90	mov	x8, #0x300000000
000000000002db94	stp	x9, x8, [sp, #0x10]
000000000002db98	adr	x8, #0x66971
000000000002db9c	nop
000000000002dba0	ldarb	w8, [x8]
000000000002dba4	tbz	w8, #0x0, 0x2dbac
000000000002dba8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000002dbac	ldr	d8, [x20, #0x8]
000000000002dbb0	nop
000000000002dbb4	ldr	x0, #0x49494 ; Objc class ref: RCKDouble
000000000002dbb8	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000002dbbc	nop
000000000002dbc0	ldr	x1, #0x49140 ; Objc selector ref: initWithDouble:
000000000002dbc4	fmov	d0, d8
000000000002dbc8	bl	0x55ca8 ; Objc message: +[RCKDouble initWithDouble:]
000000000002dbcc	mov	x1, x0
000000000002dbd0	mov	x0, x19
000000000002dbd4	blr	x21
000000000002dbd8	ldr	x8, [x0]
000000000002dbdc	ldr	x9, [sp, #0x10]
000000000002dbe0	str	x9, [x8, #0x110]
000000000002dbe4	mov	x0, x1
000000000002dbe8	ldp	x29, x30, [sp, #0x50]
000000000002dbec	ldp	x20, x19, [sp, #0x40]
000000000002dbf0	ldp	x22, x21, [sp, #0x30]
000000000002dbf4	ldp	d9, d8, [sp, #0x20]
000000000002dbf8	add	sp, sp, #0x60
000000000002dbfc	ret
000000000002dc00	mov	x1, x0
000000000002dc04	mov	x0, x19
000000000002dc08	blr	x21
000000000002dc0c	ldr	x8, [x0]
000000000002dc10	add	x9, sp, #0x8
000000000002dc14	str	x9, [x8, #0x110]
000000000002dc18	mov	x0, x1
000000000002dc1c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002dc20	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000002dc24	b	0x2dc24
___unnamed_133:
000000000002dc28	brk	#0x1
000000000002dc2c	adrp	x8, 103 ; 0x94000
000000000002dc30	ldrb	w8, [x8, #0x500]
000000000002dc34	tbz	w8, #0x0, 0x2dc9c
000000000002dc38	adrp	x8, 103 ; 0x94000
000000000002dc3c	ldrb	w9, [x8, #0x501]
000000000002dc40	tbz	w9, #0x0, 0x2e088
000000000002dc44	adrp	x8, 103 ; 0x94000
000000000002dc48	ldrb	w9, [x8, #0x502]
000000000002dc4c	tbz	w9, #0x0, 0x2e09c
000000000002dc50	adrp	x8, 103 ; 0x94000
000000000002dc54	ldrb	w9, [x8, #0x503]
000000000002dc58	tbz	w9, #0x0, 0x2e0b0
000000000002dc5c	adrp	x8, 103 ; 0x94000
000000000002dc60	ldrb	w9, [x8, #0x504]
000000000002dc64	tbz	w9, #0x0, 0x2e0c4
000000000002dc68	adrp	x8, 103 ; 0x94000
000000000002dc6c	ldrb	w9, [x8, #0x505]
000000000002dc70	tbz	w9, #0x0, 0x2e0d8
000000000002dc74	adrp	x8, 103 ; 0x94000
000000000002dc78	ldrb	w9, [x8, #0x506]
000000000002dc7c	tbz	w9, #0x0, 0x2e0ec
000000000002dc80	adrp	x8, 103 ; 0x94000
000000000002dc84	ldrb	w9, [x8, #0x507]
000000000002dc88	tbz	w9, #0x0, 0x2e100
000000000002dc8c	adrp	x8, 103 ; 0x94000
000000000002dc90	ldrb	w9, [x8, #0x508]
000000000002dc94	tbz	w9, #0x0, 0x2e114
000000000002dc98	ret
000000000002dc9c	adr	x8, #0x66864
000000000002dca0	nop
000000000002dca4	mov	w9, #0x1
000000000002dca8	strb	w9, [x8]
000000000002dcac	add	x9, x8, #0x270
000000000002dcb0	ldr	x10, [x8, #0x270]
000000000002dcb4	ldr	x11, [x8, #0x2c8]
000000000002dcb8	add	x11, x11, #0x8
000000000002dcbc	cmp	x10, #0x0
000000000002dcc0	csel	x11, x9, x11, eq
000000000002dcc4	adr	x10, #0x4c2dc
000000000002dcc8	nop
000000000002dccc	str	x10, [x11]
000000000002dcd0	ldr	x11, [x8, #0x270]
000000000002dcd4	add	x12, x10, #0x8
000000000002dcd8	cmp	x11, #0x0
000000000002dcdc	csel	x11, x9, x12, eq
000000000002dce0	add	x12, x10, #0x10
000000000002dce4	str	x12, [x11]
000000000002dce8	ldr	x11, [x8, #0x270]
000000000002dcec	add	x12, x10, #0x18
000000000002dcf0	cmp	x11, #0x0
000000000002dcf4	csel	x11, x9, x12, eq
000000000002dcf8	add	x12, x10, #0x20
000000000002dcfc	str	x12, [x11]
000000000002dd00	ldr	x11, [x8, #0x270]
000000000002dd04	add	x12, x10, #0x28
000000000002dd08	cmp	x11, #0x0
000000000002dd0c	csel	x11, x9, x12, eq
000000000002dd10	add	x12, x10, #0x30
000000000002dd14	str	x12, [x11]
000000000002dd18	ldr	x11, [x8, #0x270]
000000000002dd1c	add	x12, x10, #0x38
000000000002dd20	cmp	x11, #0x0
000000000002dd24	csel	x11, x9, x12, eq
000000000002dd28	add	x12, x10, #0x40
000000000002dd2c	str	x12, [x11]
000000000002dd30	ldr	x11, [x8, #0x270]
000000000002dd34	add	x12, x10, #0x48
000000000002dd38	cmp	x11, #0x0
000000000002dd3c	csel	x11, x9, x12, eq
000000000002dd40	add	x12, x10, #0x50
000000000002dd44	str	x12, [x11]
000000000002dd48	ldr	x11, [x8, #0x270]
000000000002dd4c	add	x12, x10, #0x58
000000000002dd50	cmp	x11, #0x0
000000000002dd54	csel	x11, x9, x12, eq
000000000002dd58	add	x12, x10, #0x60
000000000002dd5c	str	x12, [x11]
000000000002dd60	ldr	x11, [x8, #0x270]
000000000002dd64	add	x12, x10, #0x68
000000000002dd68	cmp	x11, #0x0
000000000002dd6c	csel	x11, x9, x12, eq
000000000002dd70	add	x12, x10, #0x70
000000000002dd74	str	x12, [x11]
000000000002dd78	ldr	x11, [x8, #0x270]
000000000002dd7c	add	x12, x10, #0x78
000000000002dd80	cmp	x11, #0x0
000000000002dd84	csel	x11, x9, x12, eq
000000000002dd88	add	x12, x10, #0x80
000000000002dd8c	str	x12, [x11]
000000000002dd90	ldr	x11, [x8, #0x270]
000000000002dd94	add	x12, x10, #0x88
000000000002dd98	cmp	x11, #0x0
000000000002dd9c	csel	x11, x9, x12, eq
000000000002dda0	add	x12, x10, #0x90
000000000002dda4	str	x12, [x11]
000000000002dda8	ldr	x11, [x8, #0x270]
000000000002ddac	add	x12, x10, #0x98
000000000002ddb0	cmp	x11, #0x0
000000000002ddb4	csel	x11, x9, x12, eq
000000000002ddb8	add	x12, x10, #0xa0
000000000002ddbc	str	x12, [x11]
000000000002ddc0	ldr	x11, [x8, #0x270]
000000000002ddc4	add	x12, x10, #0xa8
000000000002ddc8	cmp	x11, #0x0
000000000002ddcc	csel	x11, x9, x12, eq
000000000002ddd0	add	x12, x10, #0xb0
000000000002ddd4	str	x12, [x11]
000000000002ddd8	ldr	x11, [x8, #0x270]
000000000002dddc	add	x12, x10, #0xb8
000000000002dde0	cmp	x11, #0x0
000000000002dde4	csel	x11, x9, x12, eq
000000000002dde8	add	x12, x10, #0xc0
000000000002ddec	str	x12, [x11]
000000000002ddf0	ldr	x11, [x8, #0x270]
000000000002ddf4	add	x12, x10, #0xc8
000000000002ddf8	cmp	x11, #0x0
000000000002ddfc	csel	x11, x9, x12, eq
000000000002de00	add	x12, x10, #0xd0
000000000002de04	str	x12, [x11]
000000000002de08	ldr	x11, [x8, #0x270]
000000000002de0c	add	x12, x10, #0xd8
000000000002de10	cmp	x11, #0x0
000000000002de14	csel	x11, x9, x12, eq
000000000002de18	add	x12, x10, #0xe0
000000000002de1c	str	x12, [x11]
000000000002de20	ldr	x11, [x8, #0x270]
000000000002de24	add	x12, x10, #0xe8
000000000002de28	cmp	x11, #0x0
000000000002de2c	csel	x11, x9, x12, eq
000000000002de30	add	x12, x10, #0xf0
000000000002de34	str	x12, [x11]
000000000002de38	ldr	x11, [x8, #0x270]
000000000002de3c	add	x12, x10, #0xf8
000000000002de40	cmp	x11, #0x0
000000000002de44	csel	x11, x9, x12, eq
000000000002de48	add	x12, x10, #0x100
000000000002de4c	str	x12, [x11]
000000000002de50	ldr	x11, [x8, #0x270]
000000000002de54	add	x12, x10, #0x108
000000000002de58	cmp	x11, #0x0
000000000002de5c	csel	x11, x9, x12, eq
000000000002de60	add	x12, x10, #0x110
000000000002de64	str	x12, [x11]
000000000002de68	ldr	x11, [x8, #0x270]
000000000002de6c	add	x12, x10, #0x118
000000000002de70	cmp	x11, #0x0
000000000002de74	csel	x11, x9, x12, eq
000000000002de78	add	x12, x10, #0x120
000000000002de7c	str	x12, [x11]
000000000002de80	ldr	x11, [x8, #0x270]
000000000002de84	add	x12, x10, #0x128
000000000002de88	cmp	x11, #0x0
000000000002de8c	csel	x11, x9, x12, eq
000000000002de90	add	x12, x10, #0x130
000000000002de94	str	x12, [x11]
000000000002de98	ldr	x11, [x8, #0x270]
000000000002de9c	add	x12, x10, #0x138
000000000002dea0	cmp	x11, #0x0
000000000002dea4	csel	x11, x9, x12, eq
000000000002dea8	add	x12, x10, #0x140
000000000002deac	str	x12, [x11]
000000000002deb0	ldr	x11, [x8, #0x270]
000000000002deb4	add	x12, x10, #0x148
000000000002deb8	cmp	x11, #0x0
000000000002debc	csel	x11, x9, x12, eq
000000000002dec0	add	x12, x10, #0x150
000000000002dec4	str	x12, [x11]
000000000002dec8	ldr	x11, [x8, #0x270]
000000000002decc	add	x12, x10, #0x158
000000000002ded0	cmp	x11, #0x0
000000000002ded4	csel	x11, x9, x12, eq
000000000002ded8	add	x12, x10, #0x160
000000000002dedc	str	x12, [x11]
000000000002dee0	ldr	x11, [x8, #0x270]
000000000002dee4	add	x12, x10, #0x168
000000000002dee8	cmp	x11, #0x0
000000000002deec	csel	x11, x9, x12, eq
000000000002def0	add	x12, x10, #0x170
000000000002def4	str	x12, [x11]
000000000002def8	ldr	x11, [x8, #0x270]
000000000002defc	add	x12, x10, #0x178
000000000002df00	cmp	x11, #0x0
000000000002df04	csel	x11, x9, x12, eq
000000000002df08	add	x12, x10, #0x180
000000000002df0c	str	x12, [x11]
000000000002df10	ldr	x11, [x8, #0x270]
000000000002df14	add	x12, x10, #0x188
000000000002df18	cmp	x11, #0x0
000000000002df1c	csel	x11, x9, x12, eq
000000000002df20	add	x12, x10, #0x190
000000000002df24	str	x12, [x11]
000000000002df28	ldr	x11, [x8, #0x270]
000000000002df2c	add	x12, x10, #0x198
000000000002df30	cmp	x11, #0x0
000000000002df34	csel	x11, x9, x12, eq
000000000002df38	add	x12, x10, #0x1a0
000000000002df3c	str	x12, [x11]
000000000002df40	ldr	x11, [x8, #0x270]
000000000002df44	add	x12, x10, #0x1a8
000000000002df48	cmp	x11, #0x0
000000000002df4c	csel	x11, x9, x12, eq
000000000002df50	add	x12, x10, #0x1b0
000000000002df54	str	x12, [x11]
000000000002df58	ldr	x11, [x8, #0x270]
000000000002df5c	add	x12, x10, #0x1b8
000000000002df60	cmp	x11, #0x0
000000000002df64	csel	x11, x9, x12, eq
000000000002df68	add	x12, x10, #0x1c0
000000000002df6c	str	x12, [x11]
000000000002df70	ldr	x11, [x8, #0x270]
000000000002df74	add	x12, x10, #0x1c8
000000000002df78	cmp	x11, #0x0
000000000002df7c	csel	x11, x9, x12, eq
000000000002df80	add	x12, x10, #0x1d0
000000000002df84	str	x12, [x11]
000000000002df88	ldr	x11, [x8, #0x270]
000000000002df8c	add	x12, x10, #0x1d8
000000000002df90	cmp	x11, #0x0
000000000002df94	csel	x11, x9, x12, eq
000000000002df98	add	x12, x10, #0x1e0
000000000002df9c	str	x12, [x11]
000000000002dfa0	ldr	x11, [x8, #0x270]
000000000002dfa4	add	x12, x10, #0x1e8
000000000002dfa8	cmp	x11, #0x0
000000000002dfac	csel	x11, x9, x12, eq
000000000002dfb0	add	x12, x10, #0x1f0
000000000002dfb4	str	x12, [x11]
000000000002dfb8	ldr	x11, [x8, #0x270]
000000000002dfbc	add	x12, x10, #0x1f8
000000000002dfc0	cmp	x11, #0x0
000000000002dfc4	csel	x11, x9, x12, eq
000000000002dfc8	add	x12, x10, #0x200
000000000002dfcc	str	x12, [x11]
000000000002dfd0	ldr	x11, [x8, #0x270]
000000000002dfd4	add	x12, x10, #0x208
000000000002dfd8	cmp	x11, #0x0
000000000002dfdc	csel	x11, x9, x12, eq
000000000002dfe0	add	x12, x10, #0x210
000000000002dfe4	str	x12, [x11]
000000000002dfe8	ldr	x11, [x8, #0x270]
000000000002dfec	add	x12, x10, #0x218
000000000002dff0	cmp	x11, #0x0
000000000002dff4	csel	x11, x9, x12, eq
000000000002dff8	add	x12, x10, #0x220
000000000002dffc	str	x12, [x11]
000000000002e000	ldr	x11, [x8, #0x270]
000000000002e004	add	x12, x10, #0x228
000000000002e008	cmp	x11, #0x0
000000000002e00c	csel	x11, x9, x12, eq
000000000002e010	add	x12, x10, #0x230
000000000002e014	str	x12, [x11]
000000000002e018	ldr	x11, [x8, #0x270]
000000000002e01c	add	x12, x10, #0x238
000000000002e020	cmp	x11, #0x0
000000000002e024	csel	x11, x9, x12, eq
000000000002e028	add	x12, x10, #0x240
000000000002e02c	str	x12, [x11]
000000000002e030	ldr	x11, [x8, #0x270]
000000000002e034	add	x12, x10, #0x248
000000000002e038	cmp	x11, #0x0
000000000002e03c	csel	x11, x9, x12, eq
000000000002e040	add	x12, x10, #0x250
000000000002e044	str	x12, [x11]
000000000002e048	ldr	x11, [x8, #0x270]
000000000002e04c	add	x12, x10, #0x258
000000000002e050	cmp	x11, #0x0
000000000002e054	csel	x11, x9, x12, eq
000000000002e058	add	x12, x10, #0x260
000000000002e05c	str	x12, [x11]
000000000002e060	ldr	x11, [x8, #0x270]
000000000002e064	add	x12, x10, #0x268
000000000002e068	cmp	x11, #0x0
000000000002e06c	csel	x9, x9, x12, eq
000000000002e070	add	x10, x10, #0x270
000000000002e074	str	x10, [x9]
000000000002e078	str	x10, [x8, #0x2c8]
000000000002e07c	adrp	x8, 102 ; 0x94000
000000000002e080	ldrb	w9, [x8, #0x501]
000000000002e084	tbnz	w9, #0x0, 0x2dc44
000000000002e088	mov	w9, #0x1
000000000002e08c	strb	w9, [x8, #0x501]
000000000002e090	adrp	x8, 102 ; 0x94000
000000000002e094	ldrb	w9, [x8, #0x502]
000000000002e098	tbnz	w9, #0x0, 0x2dc50
000000000002e09c	mov	w9, #0x1
000000000002e0a0	strb	w9, [x8, #0x502]
000000000002e0a4	adrp	x8, 102 ; 0x94000
000000000002e0a8	ldrb	w9, [x8, #0x503]
000000000002e0ac	tbnz	w9, #0x0, 0x2dc5c
000000000002e0b0	mov	w9, #0x1
000000000002e0b4	strb	w9, [x8, #0x503]
000000000002e0b8	adrp	x8, 102 ; 0x94000
000000000002e0bc	ldrb	w9, [x8, #0x504]
000000000002e0c0	tbnz	w9, #0x0, 0x2dc68
000000000002e0c4	mov	w9, #0x1
000000000002e0c8	strb	w9, [x8, #0x504]
000000000002e0cc	adrp	x8, 102 ; 0x94000
000000000002e0d0	ldrb	w9, [x8, #0x505]
000000000002e0d4	tbnz	w9, #0x0, 0x2dc74
000000000002e0d8	mov	w9, #0x1
000000000002e0dc	strb	w9, [x8, #0x505]
000000000002e0e0	adrp	x8, 102 ; 0x94000
000000000002e0e4	ldrb	w9, [x8, #0x506]
000000000002e0e8	tbnz	w9, #0x0, 0x2dc80
000000000002e0ec	mov	w9, #0x1
000000000002e0f0	strb	w9, [x8, #0x506]
000000000002e0f4	adrp	x8, 102 ; 0x94000
000000000002e0f8	ldrb	w9, [x8, #0x507]
000000000002e0fc	tbnz	w9, #0x0, 0x2dc8c
000000000002e100	mov	w9, #0x1
000000000002e104	strb	w9, [x8, #0x507]
000000000002e108	adrp	x8, 102 ; 0x94000
000000000002e10c	ldrb	w9, [x8, #0x508]
000000000002e110	tbnz	w9, #0x0, 0x2dc98
000000000002e114	mov	w9, #0x1
000000000002e118	strb	w9, [x8, #0x508]
000000000002e11c	ret
___clang_call_terminate:
000000000002e120	stp	x29, x30, [sp, #-0x10]!
000000000002e124	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000002e128	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
__ZNSt3__125__throw_bad_function_callEv:
000000000002e12c	stp	x29, x30, [sp, #-0x10]!
000000000002e130	mov	x29, sp
000000000002e134	mov	w0, #0x8
000000000002e138	bl	0x55a38 ; symbol stub for: ___cxa_allocate_exception
000000000002e13c	adr	x8, #0x427bc
000000000002e140	nop
000000000002e144	str	x8, [x0]
000000000002e148	adr	x1, #0x427c8
000000000002e14c	nop
000000000002e150	adr	x2, #0xc
000000000002e154	nop
000000000002e158	bl	0x55a80 ; symbol stub for: ___cxa_throw
__ZNSt3__117bad_function_callD1Ev:
000000000002e15c	b	0x559e4 ; symbol stub for: __ZNSt9exceptionD2Ev
__ZNSt3__117bad_function_callD0Ev:
000000000002e160	stp	x29, x30, [sp, #-0x10]!
000000000002e164	mov	x29, sp
000000000002e168	bl	0x559e4 ; symbol stub for: __ZNSt9exceptionD2Ev
000000000002e16c	ldp	x29, x30, [sp], #0x10
000000000002e170	b	0x55a20 ; symbol stub for: __ZdlPv
__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_:
000000000002e174	stp	x26, x25, [sp, #-0x50]!
000000000002e178	stp	x24, x23, [sp, #0x10]
000000000002e17c	stp	x22, x21, [sp, #0x20]
000000000002e180	stp	x20, x19, [sp, #0x30]
000000000002e184	stp	x29, x30, [sp, #0x40]
000000000002e188	add	x29, sp, #0x40
000000000002e18c	mov	x20, x2
000000000002e190	mov	x21, x1
000000000002e194	mov	x19, x0
000000000002e198	ldrb	w8, [x0, #0x18]
000000000002e19c	cbz	w8, 0x2e1c4
000000000002e1a0	ldrsb	w8, [x19, #0x17]
000000000002e1a4	tbnz	w8, #0x1f, 0x2e1e4
000000000002e1a8	subs	x8, x20, #0x16
000000000002e1ac	b.ls	0x2e280
000000000002e1b0	cmn	x8, #0x28
000000000002e1b4	b.hi	0x2e324
000000000002e1b8	mov	w25, #0x16
000000000002e1bc	mov	x22, x19
000000000002e1c0	b	0x2e220
000000000002e1c4	cmn	x20, #0x10
000000000002e1c8	b.hs	0x2e324
000000000002e1cc	cmp	x20, #0x17
000000000002e1d0	b.hs	0x2e2ac
000000000002e1d4	strb	w20, [x19, #0x17]
000000000002e1d8	mov	x22, x19
000000000002e1dc	cbnz	x20, 0x2e2d0
000000000002e1e0	b	0x2e2e0
000000000002e1e4	ldr	x8, [x19, #0x10]
000000000002e1e8	and	x8, x8, #0x7fffffffffffffff
000000000002e1ec	sub	x25, x8, #0x1
000000000002e1f0	cmp	x25, x20
000000000002e1f4	b.hs	0x2e2f0
000000000002e1f8	sub	x9, x20, x25
000000000002e1fc	mov	x10, #-0x11
000000000002e200	sub	x8, x10, x8
000000000002e204	cmp	x8, x9
000000000002e208	b.lo	0x2e324
000000000002e20c	ldr	x22, [x19]
000000000002e210	mov	x8, #-0x1a
000000000002e214	movk	x8, #0x7fff, lsl #48
000000000002e218	cmp	x25, x8
000000000002e21c	b.hi	0x2e31c
000000000002e220	lsl	x8, x25, #1
000000000002e224	cmp	x8, x20
000000000002e228	csel	x8, x8, x20, hi
000000000002e22c	add	x9, x8, #0x10
000000000002e230	and	x9, x9, #0xfffffffffffffff0
000000000002e234	cmp	x8, #0x17
000000000002e238	mov	w8, #0x17
000000000002e23c	csel	x23, x8, x9, lo
000000000002e240	mov	x0, x23
000000000002e244	mov	w1, #0x1
000000000002e248	bl	0x55aec ; symbol stub for: _calloc
000000000002e24c	mov	x24, x0
000000000002e250	mov	x1, x21
000000000002e254	mov	x2, x20
000000000002e258	bl	0x55bd0 ; symbol stub for: _memcpy
000000000002e25c	cmp	x25, #0x16
000000000002e260	b.eq	0x2e26c
000000000002e264	mov	x0, x22
000000000002e268	bl	0x55b7c ; symbol stub for: _free
000000000002e26c	orr	x8, x23, #0x8000000000000000
000000000002e270	stp	x20, x8, [x19, #0x8]
000000000002e274	str	x24, [x19]
000000000002e278	strb	wzr, [x24, x20]
000000000002e27c	b	0x2e300
000000000002e280	mov	x22, x19
000000000002e284	cbz	x20, 0x2e298
000000000002e288	mov	x0, x22
000000000002e28c	mov	x1, x21
000000000002e290	mov	x2, x20
000000000002e294	bl	0x55bdc ; symbol stub for: _memmove
000000000002e298	strb	wzr, [x22, x20]
000000000002e29c	ldrsb	w8, [x19, #0x17]
000000000002e2a0	tbnz	w8, #0x1f, 0x2e2fc
000000000002e2a4	strb	w20, [x19, #0x17]
000000000002e2a8	b	0x2e300
000000000002e2ac	add	x8, x20, #0x10
000000000002e2b0	and	x23, x8, #0xfffffffffffffff0
000000000002e2b4	mov	x0, x23
000000000002e2b8	mov	w1, #0x1
000000000002e2bc	bl	0x55aec ; symbol stub for: _calloc
000000000002e2c0	mov	x22, x0
000000000002e2c4	orr	x8, x23, #0x8000000000000000
000000000002e2c8	stp	x20, x8, [x19, #0x8]
000000000002e2cc	str	x0, [x19]
000000000002e2d0	mov	x0, x22
000000000002e2d4	mov	x1, x21
000000000002e2d8	mov	x2, x20
000000000002e2dc	bl	0x55bd0 ; symbol stub for: _memcpy
000000000002e2e0	strb	wzr, [x22, x20]
000000000002e2e4	mov	w8, #0x1
000000000002e2e8	strb	w8, [x19, #0x18]
000000000002e2ec	b	0x2e300
000000000002e2f0	ldr	x22, [x19]
000000000002e2f4	cbnz	x20, 0x2e288
000000000002e2f8	b	0x2e298
000000000002e2fc	str	x20, [x19, #0x8]
000000000002e300	mov	x0, x19
000000000002e304	ldp	x29, x30, [sp, #0x40]
000000000002e308	ldp	x20, x19, [sp, #0x30]
000000000002e30c	ldp	x22, x21, [sp, #0x20]
000000000002e310	ldp	x24, x23, [sp, #0x10]
000000000002e314	ldp	x26, x25, [sp], #0x50
000000000002e318	ret
000000000002e31c	mov	x23, #-0x11
000000000002e320	b	0x2e240
000000000002e324	mov	x0, x19
000000000002e328	bl	0x558c4 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ZN6kotlin13RepeatedTimerINS_12steady_clockEE3RunIZNS_2gc8internal24GCSchedulerDataWithTimerIS1_EC1ERNS4_17GCSchedulerConfigENSt3__18functionIFvvEEEEUlvE_EEvOT_:
000000000002e32c	sub	sp, sp, #0x70
000000000002e330	stp	x28, x27, [sp, #0x10]
000000000002e334	stp	x26, x25, [sp, #0x20]
000000000002e338	stp	x24, x23, [sp, #0x30]
000000000002e33c	stp	x22, x21, [sp, #0x40]
000000000002e340	stp	x20, x19, [sp, #0x50]
000000000002e344	stp	x29, x30, [sp, #0x60]
000000000002e348	add	x29, sp, #0x60
000000000002e34c	mov	x20, x1
000000000002e350	mov	x19, x0
000000000002e354	str	x0, [sp]
000000000002e358	mov	w8, #0x1
000000000002e35c	strb	w8, [sp, #0x8]
000000000002e360	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002e364	ldrb	w8, [x19, #0x70]
000000000002e368	cbz	w8, 0x2e56c
000000000002e36c	mov	x22, #0x914f0000
000000000002e370	movk	x22, #0x4e94, lsl #32
000000000002e374	add	x21, x19, #0x40
000000000002e378	mov	x23, #0x53f7
000000000002e37c	movk	x23, #0xa5e3, lsl #16
000000000002e380	movk	x23, #0xc49b, lsl #32
000000000002e384	movk	x23, #0x20, lsl #48
000000000002e388	mov	w24, #0x3e8
000000000002e38c	mov	x25, #0xac09
000000000002e390	movk	x25, #0x5a1c, lsl #16
000000000002e394	movk	x25, #0x3b64, lsl #32
000000000002e398	movk	x25, #0xffdf, lsl #48
000000000002e39c	b	0x2e3cc
000000000002e3a0	mov	w8, #0x1
000000000002e3a4	strb	w8, [sp, #0x8]
000000000002e3a8	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e3ac	ldr	x8, [x19, #0x78]
000000000002e3b0	adds	x8, x0, x8
000000000002e3b4	asr	x9, x8, #63
000000000002e3b8	eor	x9, x9, #0x8000000000000000
000000000002e3bc	csel	x8, x9, x8, vs
000000000002e3c0	str	x8, [x19, #0x80]
000000000002e3c4	ldrb	w8, [x19, #0x70]
000000000002e3c8	cbz	w8, 0x2e560
000000000002e3cc	strb	wzr, [x19, #0x88]
000000000002e3d0	ldr	x27, [x19, #0x80]
000000000002e3d4	b	0x2e3e0
000000000002e3d8	ldrb	w8, [x19, #0x88]
000000000002e3dc	cbnz	w8, 0x2e3c4
000000000002e3e0	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e3e4	cmp	x0, x27
000000000002e3e8	b.ge	0x2e4c4
000000000002e3ec	subs	x8, x27, x0
000000000002e3f0	asr	x9, x8, #63
000000000002e3f4	eor	x9, x9, #0x8000000000000000
000000000002e3f8	csel	x8, x9, x8, vs
000000000002e3fc	cmp	x8, x22
000000000002e400	csel	x26, x8, x22, lt
000000000002e404	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e408	add	x28, x0, x26
000000000002e40c	b	0x2e434
000000000002e410	mov	x8, #-0x8000000000000000
000000000002e414	add	x2, x8, x26
000000000002e418	mov	x1, sp
000000000002e41c	mov	x0, x21
000000000002e420	bl	0x55948 ; symbol stub for: __ZNSt3__118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE
000000000002e424	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e428	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e42c	cmp	x0, x28
000000000002e430	b.ge	0x2e3d8
000000000002e434	ldrb	w8, [x19, #0x88]
000000000002e438	cbnz	w8, 0x2e3c4
000000000002e43c	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e440	cmp	x0, x28
000000000002e444	b.ge	0x2e3d8
000000000002e448	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e44c	sub	x26, x28, x0
000000000002e450	cmp	x26, #0x1
000000000002e454	b.lt	0x2e428
000000000002e458	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e45c	bl	0x559b4 ; symbol stub for: __ZNSt3__16chrono12system_clock3nowEv
000000000002e460	cbz	x0, 0x2e48c
000000000002e464	cmp	x0, #0x1
000000000002e468	b.lt	0x2e4a4
000000000002e46c	cmp	x0, x23
000000000002e470	b.le	0x2e4ac
000000000002e474	mov	x8, #0x7fffffffffffffff
000000000002e478	mov	x2, #0x7fffffffffffffff
000000000002e47c	sub	x9, x2, x26
000000000002e480	cmp	x8, x9
000000000002e484	b.le	0x2e414
000000000002e488	b	0x2e418
000000000002e48c	mov	x8, #0x0
000000000002e490	mov	x2, #0x7fffffffffffffff
000000000002e494	sub	x9, x2, x26
000000000002e498	cmp	x8, x9
000000000002e49c	b.le	0x2e414
000000000002e4a0	b	0x2e418
000000000002e4a4	cmp	x0, x25
000000000002e4a8	b.lt	0x2e410
000000000002e4ac	mul	x8, x0, x24
000000000002e4b0	mov	x2, #0x7fffffffffffffff
000000000002e4b4	sub	x9, x2, x26
000000000002e4b8	cmp	x8, x9
000000000002e4bc	b.le	0x2e414
000000000002e4c0	b	0x2e418
000000000002e4c4	ldrb	w8, [sp, #0x8]
000000000002e4c8	cbz	w8, 0x2e5bc
000000000002e4cc	ldr	x0, [sp]
000000000002e4d0	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002e4d4	strb	wzr, [sp, #0x8]
000000000002e4d8	ldr	x26, [x20]
000000000002e4dc	ldr	x8, [x26, #0x10]
000000000002e4e0	ldar	w8, [x8]
000000000002e4e4	cmp	w8, #0x1
000000000002e4e8	b.eq	0x2e548
000000000002e4ec	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e4f0	add	x8, x26, #0x38
000000000002e4f4	ldar	x8, [x8]
000000000002e4f8	ldr	x9, [x26, #0x30]
000000000002e4fc	add	x9, x9, #0x18
000000000002e500	ldar	x9, [x9]
000000000002e504	mul	x10, x9, x24
000000000002e508	smulh	x11, x9, x24
000000000002e50c	cmp	x11, x10, asr #63
000000000002e510	asr	x9, x9, #63
000000000002e514	eor	x9, x9, #0x7fffffffffffffff
000000000002e518	csel	x9, x9, x10, ne
000000000002e51c	adds	x8, x8, x9
000000000002e520	asr	x9, x8, #63
000000000002e524	eor	x9, x9, #0x8000000000000000
000000000002e528	csel	x8, x9, x8, vs
000000000002e52c	cmp	x0, x8
000000000002e530	b.lt	0x2e548
000000000002e534	ldr	x0, [x26, #0x58]
000000000002e538	cbz	x0, 0x2e5d0
000000000002e53c	ldr	x8, [x0]
000000000002e540	ldr	x8, [x8, #0x30]
000000000002e544	blr	x8
000000000002e548	ldr	x0, [sp]
000000000002e54c	cbz	x0, 0x2e5a8
000000000002e550	ldrb	w8, [sp, #0x8]
000000000002e554	cbnz	w8, 0x2e594
000000000002e558	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002e55c	b	0x2e3a0
000000000002e560	ldrb	w8, [sp, #0x8]
000000000002e564	cbz	w8, 0x2e574
000000000002e568	ldr	x19, [sp]
000000000002e56c	mov	x0, x19
000000000002e570	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002e574	ldp	x29, x30, [sp, #0x60]
000000000002e578	ldp	x20, x19, [sp, #0x50]
000000000002e57c	ldp	x22, x21, [sp, #0x40]
000000000002e580	ldp	x24, x23, [sp, #0x30]
000000000002e584	ldp	x26, x25, [sp, #0x20]
000000000002e588	ldp	x28, x27, [sp, #0x10]
000000000002e58c	add	sp, sp, #0x70
000000000002e590	ret
000000000002e594	adr	x1, #0x2d2bf ; literal pool for: "unique_lock::lock: already locked"
000000000002e598	nop
000000000002e59c	mov	w0, #0xb
000000000002e5a0	bl	0x55978 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000002e5a4	b	0x2e5d4
000000000002e5a8	adr	x1, #0x2d282 ; literal pool for: "unique_lock::lock: references null mutex"
000000000002e5ac	nop
000000000002e5b0	mov	w0, #0x1
000000000002e5b4	bl	0x55978 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000002e5b8	b	0x2e5d4
000000000002e5bc	adr	x1, #0x2e320 ; literal pool for: "unique_lock::unlock: not locked"
000000000002e5c0	nop
000000000002e5c4	mov	w0, #0x1
000000000002e5c8	bl	0x55978 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
000000000002e5cc	b	0x2e5d4
000000000002e5d0	bl	__ZNSt3__125__throw_bad_function_callEv
000000000002e5d4	brk	#0x1
000000000002e5d8	bl	___clang_call_terminate
000000000002e5dc	b	0x2e5e0
000000000002e5e0	mov	x19, x0
000000000002e5e4	ldrb	w8, [sp, #0x8]
000000000002e5e8	cbz	w8, 0x2e5f4
000000000002e5ec	ldr	x0, [sp]
000000000002e5f0	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002e5f4	mov	x0, x19
000000000002e5f8	bl	___clang_call_terminate
__ZN6kotlin12ScopedThread3RunIMNS_13RepeatedTimerINS_12steady_clockEEEDoFvOZNS_2gc8internal24GCSchedulerDataWithTimerIS3_EC1ERNS5_17GCSchedulerConfigENSt3__18functionIFvvEEEEUlvE_EJPS4_SF_EEENSB_13invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOSL_DpOSM_:
000000000002e5fc	stp	x22, x21, [sp, #-0x30]!
000000000002e600	stp	x20, x19, [sp, #0x10]
000000000002e604	stp	x29, x30, [sp, #0x20]
000000000002e608	add	x29, sp, #0x20
000000000002e60c	mov	x19, x3
000000000002e610	mov	x21, x2
000000000002e614	mov	x20, x1
000000000002e618	ldrb	w8, [x0, #0x18]
000000000002e61c	cbz	w8, 0x2e630
000000000002e620	ldrsb	w8, [x0, #0x17]
000000000002e624	tbz	w8, #0x1f, 0x2e62c
000000000002e628	ldr	x0, [x0]
000000000002e62c	bl	0x55df8 ; symbol stub for: _pthread_setname_np
000000000002e630	ldr	x8, [x21]
000000000002e634	ldp	x2, x9, [x20]
000000000002e638	add	x0, x8, x9, asr #1
000000000002e63c	tbz	w9, #0x0, 0x2e648
000000000002e640	ldr	x8, [x0]
000000000002e644	ldr	x2, [x8, w2, uxtw]
000000000002e648	mov	x1, x19
000000000002e64c	ldp	x29, x30, [sp, #0x20]
000000000002e650	ldp	x20, x19, [sp, #0x10]
000000000002e654	ldp	x22, x21, [sp], #0x30
000000000002e658	br	x2
000000000002e65c	bl	___clang_call_terminate
__ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvN6kotlin12ScopedThread10attributesEOMNS7_13RepeatedTimerINS7_12steady_clockEEEDoFvOZNS7_2gc8internal24GCSchedulerDataWithTimerISB_EC1ERNSD_17GCSchedulerConfigENS_8functionIFvvEEEEUlvE_EOPSC_SN_ES9_SP_SR_SM_EEEEEPvSW_:
000000000002e660	sub	sp, sp, #0x40
000000000002e664	stp	x20, x19, [sp, #0x20]
000000000002e668	stp	x29, x30, [sp, #0x30]
000000000002e66c	add	x29, sp, #0x30
000000000002e670	mov	x19, x0
000000000002e674	bl	0x5596c ; symbol stub for: __ZNSt3__119__thread_local_dataEv
000000000002e678	ldr	x1, [x19]
000000000002e67c	str	xzr, [x19]
000000000002e680	ldr	x0, [x0]
000000000002e684	bl	0x55e04 ; symbol stub for: _pthread_setspecific
000000000002e688	add	x1, x19, #0x30
000000000002e68c	add	x2, x19, #0x40
000000000002e690	add	x3, x19, #0x48
000000000002e694	ldr	x8, [x19, #0x8]
000000000002e698	strb	wzr, [sp]
000000000002e69c	strb	wzr, [sp, #0x18]
000000000002e6a0	ldrb	w9, [x19, #0x28]
000000000002e6a4	cbz	w9, 0x2e6c8
000000000002e6a8	ldr	q0, [x19, #0x10]
000000000002e6ac	str	q0, [sp]
000000000002e6b0	ldr	x9, [x19, #0x20]
000000000002e6b4	str	x9, [sp, #0x10]
000000000002e6b8	stp	xzr, xzr, [x19, #0x18]
000000000002e6bc	str	xzr, [x19, #0x10]
000000000002e6c0	mov	w9, #0x1
000000000002e6c4	strb	w9, [sp, #0x18]
000000000002e6c8	mov	x0, sp
000000000002e6cc	blr	x8
000000000002e6d0	ldrb	w8, [sp, #0x18]
000000000002e6d4	cbz	w8, 0x2e6e8
000000000002e6d8	ldrsb	w8, [sp, #0x17]
000000000002e6dc	tbz	w8, #0x1f, 0x2e6e8
000000000002e6e0	ldr	x0, [sp]
000000000002e6e4	bl	0x55b7c ; symbol stub for: _free
000000000002e6e8	ldrb	w8, [x19, #0x28]
000000000002e6ec	cbz	w8, 0x2e700
000000000002e6f0	ldrsb	w8, [x19, #0x27]
000000000002e6f4	tbz	w8, #0x1f, 0x2e700
000000000002e6f8	ldr	x0, [x19, #0x10]
000000000002e6fc	bl	0x55b7c ; symbol stub for: _free
000000000002e700	ldr	x0, [x19]
000000000002e704	str	xzr, [x19]
000000000002e708	cbz	x0, 0x2e714
000000000002e70c	bl	0x5590c ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002e710	bl	0x55a20 ; symbol stub for: __ZdlPv
000000000002e714	mov	x0, x19
000000000002e718	bl	0x55a20 ; symbol stub for: __ZdlPv
000000000002e71c	mov	x0, #0x0
000000000002e720	ldp	x29, x30, [sp, #0x30]
000000000002e724	ldp	x20, x19, [sp, #0x20]
000000000002e728	add	sp, sp, #0x40
000000000002e72c	ret
000000000002e730	mov	x20, x0
000000000002e734	ldrb	w8, [sp, #0x18]
000000000002e738	cbz	w8, 0x2e760
000000000002e73c	ldrsb	w8, [sp, #0x17]
000000000002e740	tbz	w8, #0x1f, 0x2e760
000000000002e744	ldr	x0, [sp]
000000000002e748	bl	0x55b7c ; symbol stub for: _free
000000000002e74c	b	0x2e760
000000000002e750	mov	x20, x0
000000000002e754	b	0x2e760
000000000002e758	mov	x20, x0
000000000002e75c	cbz	x19, 0x2e794
000000000002e760	ldrb	w8, [x19, #0x28]
000000000002e764	cbz	w8, 0x2e778
000000000002e768	ldrsb	w8, [x19, #0x27]
000000000002e76c	tbz	w8, #0x1f, 0x2e778
000000000002e770	ldr	x0, [x19, #0x10]
000000000002e774	bl	0x55b7c ; symbol stub for: _free
000000000002e778	ldr	x0, [x19]
000000000002e77c	str	xzr, [x19]
000000000002e780	cbz	x0, 0x2e78c
000000000002e784	bl	0x5590c ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000002e788	bl	0x55a20 ; symbol stub for: __ZdlPv
000000000002e78c	mov	x0, x19
000000000002e790	bl	0x55a20 ; symbol stub for: __ZdlPv
000000000002e794	mov	x0, x20
000000000002e798	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEED1Ev:
000000000002e79c	stp	x20, x19, [sp, #-0x20]!
000000000002e7a0	stp	x29, x30, [sp, #0x10]
000000000002e7a4	add	x29, sp, #0x10
000000000002e7a8	mov	x19, x0
000000000002e7ac	adr	x8, #0x4219c
000000000002e7b0	nop
000000000002e7b4	str	x8, [x0], #0x60
000000000002e7b8	bl	__ZN6kotlin13RepeatedTimerINS_12steady_clockEED2Ev
000000000002e7bc	add	x8, x19, #0x40
000000000002e7c0	ldr	x0, [x19, #0x58]
000000000002e7c4	cmp	x8, x0
000000000002e7c8	b.eq	0x2e7dc
000000000002e7cc	cbz	x0, 0x2e7e8
000000000002e7d0	ldr	x8, [x0]
000000000002e7d4	ldr	x8, [x8, #0x28]
000000000002e7d8	b	0x2e7e4
000000000002e7dc	ldr	x8, [x0]
000000000002e7e0	ldr	x8, [x8, #0x20]
000000000002e7e4	blr	x8
000000000002e7e8	mov	x0, x19
000000000002e7ec	ldp	x29, x30, [sp, #0x10]
000000000002e7f0	ldp	x20, x19, [sp], #0x20
000000000002e7f4	ret
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEED0Ev:
000000000002e7f8	stp	x20, x19, [sp, #-0x20]!
000000000002e7fc	stp	x29, x30, [sp, #0x10]
000000000002e800	add	x29, sp, #0x10
000000000002e804	mov	x19, x0
000000000002e808	adr	x8, #0x42140
000000000002e80c	nop
000000000002e810	str	x8, [x0], #0x60
000000000002e814	bl	__ZN6kotlin13RepeatedTimerINS_12steady_clockEED2Ev
000000000002e818	add	x8, x19, #0x40
000000000002e81c	ldr	x0, [x19, #0x58]
000000000002e820	cmp	x8, x0
000000000002e824	b.eq	0x2e838
000000000002e828	cbz	x0, 0x2e844
000000000002e82c	ldr	x8, [x0]
000000000002e830	ldr	x8, [x8, #0x28]
000000000002e834	b	0x2e840
000000000002e838	ldr	x8, [x0]
000000000002e83c	ldr	x8, [x8, #0x20]
000000000002e840	blr	x8
000000000002e844	mov	x0, x19
000000000002e848	ldp	x29, x30, [sp, #0x10]
000000000002e84c	ldp	x20, x19, [sp], #0x20
000000000002e850	b	0x55a20 ; symbol stub for: __ZdlPv
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEE20UpdateFromThreadDataERNS0_21GCSchedulerThreadDataE:
000000000002e854	stp	x29, x30, [sp, #-0x10]!
000000000002e858	mov	x29, sp
000000000002e85c	ldr	x8, [x1, #0x28]
000000000002e860	add	x9, x0, #0x20
000000000002e864	ldaxr	x10, [x9]
000000000002e868	add	x10, x10, x8
000000000002e86c	stlxr	w11, x10, [x9]
000000000002e870	cbnz	w11, 0x2e864
000000000002e874	add	x8, x0, #0x20
000000000002e878	ldar	x8, [x8]
000000000002e87c	add	x9, x0, #0x28
000000000002e880	ldar	x9, [x9]
000000000002e884	add	x8, x9, x8
000000000002e888	ldr	x9, [x0, #0x18]
000000000002e88c	add	x9, x9, #0x20
000000000002e890	ldar	x9, [x9]
000000000002e894	cmp	x8, x9
000000000002e898	b.lo	0x2e8b0
000000000002e89c	ldr	x0, [x0, #0x58]
000000000002e8a0	cbz	x0, 0x2e8b8
000000000002e8a4	ldr	x8, [x0]
000000000002e8a8	ldr	x8, [x8, #0x30]
000000000002e8ac	blr	x8
000000000002e8b0	ldp	x29, x30, [sp], #0x10
000000000002e8b4	ret
000000000002e8b8	bl	__ZNSt3__125__throw_bad_function_callEv
000000000002e8bc	brk	#0x1
000000000002e8c0	bl	___clang_call_terminate
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEE15OnPerformFullGCEv:
000000000002e8c4	stp	x22, x21, [sp, #-0x30]!
000000000002e8c8	stp	x20, x19, [sp, #0x10]
000000000002e8cc	stp	x29, x30, [sp, #0x20]
000000000002e8d0	add	x29, sp, #0x20
000000000002e8d4	mov	x19, x0
000000000002e8d8	add	x8, x0, #0x20
000000000002e8dc	stlr	xzr, [x8]
000000000002e8e0	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e8e4	add	x8, x19, #0x38
000000000002e8e8	stlr	x0, [x8]
000000000002e8ec	ldr	x8, [x19, #0x8]
000000000002e8f0	add	x8, x8, #0x18
000000000002e8f4	ldar	x21, [x8]
000000000002e8f8	add	x20, x19, #0x60
000000000002e8fc	mov	x0, x20
000000000002e900	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002e904	mov	w8, #0x3e8
000000000002e908	mul	x9, x21, x8
000000000002e90c	smulh	x8, x21, x8
000000000002e910	cmp	x8, x9, asr #63
000000000002e914	asr	x8, x21, #63
000000000002e918	eor	x8, x8, #0x7fffffffffffffff
000000000002e91c	csel	x8, x8, x9, ne
000000000002e920	str	x8, [x19, #0xd8]
000000000002e924	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002e928	ldr	x8, [x19, #0xd8]
000000000002e92c	adds	x8, x0, x8
000000000002e930	asr	x9, x8, #63
000000000002e934	eor	x9, x9, #0x8000000000000000
000000000002e938	csel	x8, x9, x8, vs
000000000002e93c	str	x8, [x19, #0xe0]
000000000002e940	mov	w8, #0x1
000000000002e944	strb	w8, [x19, #0xe8]
000000000002e948	mov	x0, x20
000000000002e94c	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002e950	add	x0, x19, #0xa0
000000000002e954	ldp	x29, x30, [sp, #0x20]
000000000002e958	ldp	x20, x19, [sp, #0x10]
000000000002e95c	ldp	x22, x21, [sp], #0x30
000000000002e960	b	0x5593c ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002e964	bl	___clang_call_terminate
__ZN6kotlin2gc8internal24GCSchedulerDataWithTimerINS_12steady_clockEE19UpdateAliveSetBytesEm:
000000000002e968	add	x8, x0, #0x28
000000000002e96c	stlr	x1, [x8]
000000000002e970	ldr	x8, [x0, #0x18]
000000000002e974	add	x8, x8, #0x10
000000000002e978	ldarb	w8, [x8]
000000000002e97c	tbz	w8, #0x0, 0x2e9f0
000000000002e980	ucvtf	d0, x1
000000000002e984	ldr	x8, [x0, #0x18]
000000000002e988	add	x8, x8, #0x28
000000000002e98c	ldar	x8, [x8]
000000000002e990	fmov	d1, x8
000000000002e994	fdiv	d0, d0, d1
000000000002e998	fabs	d1, d0
000000000002e99c	fcmp	d0, d0
000000000002e9a0	mov	x8, #0x7ff0000000000000
000000000002e9a4	fmov	d2, x8
000000000002e9a8	fccmp	d1, d2, #0x4, vc
000000000002e9ac	b.eq	0x2e9f0
000000000002e9b0	ldr	x8, [x0, #0x18]
000000000002e9b4	add	x8, x8, #0x30
000000000002e9b8	ldar	x8, [x8]
000000000002e9bc	scvtf	d1, x8
000000000002e9c0	ldr	x8, [x0, #0x18]
000000000002e9c4	add	x8, x8, #0x38
000000000002e9c8	ldar	x8, [x8]
000000000002e9cc	scvtf	d2, x8
000000000002e9d0	fcmp	d0, d1
000000000002e9d4	fcsel	d0, d1, d0, mi
000000000002e9d8	fcmp	d0, d2
000000000002e9dc	fcsel	d0, d2, d0, gt
000000000002e9e0	fcvtzs	x8, d0
000000000002e9e4	ldr	x9, [x0, #0x18]
000000000002e9e8	add	x9, x9, #0x20
000000000002e9ec	stlr	x8, [x9]
000000000002e9f0	ret
__ZN6kotlin13RepeatedTimerINS_12steady_clockEED2Ev:
000000000002e9f4	stp	x22, x21, [sp, #-0x30]!
000000000002e9f8	stp	x20, x19, [sp, #0x10]
000000000002e9fc	stp	x29, x30, [sp, #0x20]
000000000002ea00	add	x29, sp, #0x20
000000000002ea04	mov	x19, x0
000000000002ea08	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002ea0c	strb	wzr, [x19, #0x70]
000000000002ea10	mov	w8, #0x1
000000000002ea14	strb	w8, [x19, #0x88]
000000000002ea18	mov	x0, x19
000000000002ea1c	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002ea20	add	x20, x19, #0x40
000000000002ea24	mov	x0, x20
000000000002ea28	bl	0x5593c ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000002ea2c	add	x21, x19, #0x90
000000000002ea30	mov	x0, x21
000000000002ea34	bl	0x559c0 ; symbol stub for: __ZNSt3__16thread4joinEv
000000000002ea38	ldr	x8, [x21]
000000000002ea3c	cbz	x8, 0x2ea48
000000000002ea40	mov	x0, x21
000000000002ea44	bl	0x559c0 ; symbol stub for: __ZNSt3__16thread4joinEv
000000000002ea48	mov	x0, x21
000000000002ea4c	bl	0x559cc ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002ea50	mov	x0, x20
000000000002ea54	bl	0x55960 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000002ea58	mov	x0, x19
000000000002ea5c	ldp	x29, x30, [sp, #0x20]
000000000002ea60	ldp	x20, x19, [sp, #0x10]
000000000002ea64	ldp	x22, x21, [sp], #0x30
000000000002ea68	b	0x5599c ; symbol stub for: __ZNSt3__15mutexD1Ev
000000000002ea6c	mov	x19, x0
000000000002ea70	mov	x0, x21
000000000002ea74	bl	0x559cc ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002ea78	mov	x0, x19
000000000002ea7c	bl	___clang_call_terminate
000000000002ea80	b	0x2ea84
000000000002ea84	mov	x20, x0
000000000002ea88	add	x0, x19, #0x90
000000000002ea8c	bl	__ZN6kotlin12ScopedThreadD1Ev
000000000002ea90	add	x0, x19, #0x40
000000000002ea94	bl	0x55960 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000002ea98	mov	x0, x19
000000000002ea9c	bl	0x5599c ; symbol stub for: __ZNSt3__15mutexD1Ev
000000000002eaa0	mov	x0, x20
000000000002eaa4	bl	___clang_call_terminate
__ZN6kotlin12ScopedThreadD1Ev:
000000000002eaa8	stp	x20, x19, [sp, #-0x20]!
000000000002eaac	stp	x29, x30, [sp, #0x10]
000000000002eab0	add	x29, sp, #0x10
000000000002eab4	mov	x19, x0
000000000002eab8	ldr	x8, [x0]
000000000002eabc	cbz	x8, 0x2eac8
000000000002eac0	mov	x0, x19
000000000002eac4	bl	0x559c0 ; symbol stub for: __ZNSt3__16thread4joinEv
000000000002eac8	mov	x0, x19
000000000002eacc	ldp	x29, x30, [sp, #0x10]
000000000002ead0	ldp	x20, x19, [sp], #0x20
000000000002ead4	b	0x559cc ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002ead8	mov	x20, x0
000000000002eadc	mov	x0, x19
000000000002eae0	bl	0x559cc ; symbol stub for: __ZNSt3__16threadD1Ev
000000000002eae4	mov	x0, x20
000000000002eae8	bl	___clang_call_terminate
__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv:
000000000002eaec	sub	sp, sp, #0x40
000000000002eaf0	stp	x22, x21, [sp, #0x10]
000000000002eaf4	stp	x20, x19, [sp, #0x20]
000000000002eaf8	stp	x29, x30, [sp, #0x30]
000000000002eafc	add	x29, sp, #0x30
000000000002eb00	adr	x20, #0x65a09
000000000002eb04	nop
000000000002eb08	ldarb	w8, [x20]
000000000002eb0c	tbz	w8, #0x0, 0x2eb94
000000000002eb10	mov	x19, x0
000000000002eb14	ldr	x8, [x0, #0x8]
000000000002eb18	ldr	x8, [x8, #0x110]
000000000002eb1c	add	x0, x8, #0x48
000000000002eb20	bl	__ZN6kotlin2gc22ConcurrentMarkAndSweep10ThreadData14OnSuspendForGCEv
000000000002eb24	adr	x0, #0x4b75c
000000000002eb28	nop
000000000002eb2c	str	x0, [sp]
000000000002eb30	mov	w8, #0x1
000000000002eb34	strb	w8, [sp, #0x8]
000000000002eb38	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002eb3c	bl	__ZN5konan15currentThreadIdEv
000000000002eb40	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002eb44	add	x21, x19, #0x10
000000000002eb48	ldarb	w8, [x21]
000000000002eb4c	and	w22, w8, #0x1
000000000002eb50	mov	w8, #0x1
000000000002eb54	stlrb	w8, [x21]
000000000002eb58	ldarb	w8, [x20]
000000000002eb5c	tbz	w8, #0x0, 0x2eb7c
000000000002eb60	adr	x19, #0x4b6c0
000000000002eb64	nop
000000000002eb68	mov	x1, sp
000000000002eb6c	mov	x0, x19
000000000002eb70	bl	0x55954 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
000000000002eb74	ldarb	w8, [x20]
000000000002eb78	tbnz	w8, #0x0, 0x2eb68
000000000002eb7c	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000002eb80	stlrb	w22, [x21]
000000000002eb84	ldrb	w8, [sp, #0x8]
000000000002eb88	cbz	w8, 0x2eb94
000000000002eb8c	ldr	x0, [sp]
000000000002eb90	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002eb94	ldp	x29, x30, [sp, #0x30]
000000000002eb98	ldp	x20, x19, [sp, #0x20]
000000000002eb9c	ldp	x22, x21, [sp, #0x10]
000000000002eba0	add	sp, sp, #0x40
000000000002eba4	ret
000000000002eba8	mov	x19, x0
000000000002ebac	adr	x0, #0x4b6d4
000000000002ebb0	nop
000000000002ebb4	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002ebb8	mov	x0, x19
000000000002ebbc	bl	___clang_call_terminate
000000000002ebc0	bl	___clang_call_terminate
__ZN6kotlin2mm24RequestThreadsSuspensionEv:
000000000002ebc4	stp	x20, x19, [sp, #-0x20]!
000000000002ebc8	stp	x29, x30, [sp, #0x10]
000000000002ebcc	add	x29, sp, #0x10
000000000002ebd0	adr	x0, #0x4b6b0
000000000002ebd4	nop
000000000002ebd8	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000002ebdc	adr	x8, #0x6592d
000000000002ebe0	nop
000000000002ebe4	ldaxrb	w9, [x8]
000000000002ebe8	cbnz	w9, 0x2ebfc
000000000002ebec	mov	w19, #0x1
000000000002ebf0	stlxrb	w9, w19, [x8]
000000000002ebf4	cbnz	w9, 0x2ebe4
000000000002ebf8	b	0x2ec04
000000000002ebfc	mov	w19, #0x0
000000000002ec00	clrex
000000000002ec04	adr	x0, #0x4b67c
000000000002ec08	nop
000000000002ec0c	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
000000000002ec10	mov	x0, x19
000000000002ec14	ldp	x29, x30, [sp, #0x10]
000000000002ec18	ldp	x20, x19, [sp], #0x20
000000000002ec1c	ret
000000000002ec20	bl	___clang_call_terminate
__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_:
000000000002ec24	stp	x22, x21, [sp, #-0x30]!
000000000002ec28	stp	x20, x19, [sp, #0x10]
000000000002ec2c	stp	x29, x30, [sp, #0x20]
000000000002ec30	add	x29, sp, #0x20
000000000002ec34	mov	x19, x0
000000000002ec38	ldr	x20, [x0, #0x150]
000000000002ec3c	str	xzr, [x0, #0x150]
000000000002ec40	cbz	x20, 0x2ec54
000000000002ec44	mov	x0, x20
000000000002ec48	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000002ec4c	mov	x0, x20
000000000002ec50	bl	0x55b7c ; symbol stub for: _free
000000000002ec54	ldr	x0, [x19, #0x120]
000000000002ec58	cbz	x0, 0x2ec64
000000000002ec5c	str	x0, [x19, #0x128]
000000000002ec60	bl	0x55b7c ; symbol stub for: _free
000000000002ec64	add	x0, x19, #0x118
000000000002ec68	bl	__ZN6kotlin2gc2GC10ThreadDataD1Ev
000000000002ec6c	add	x0, x19, #0xd8
000000000002ec70	bl	__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv
000000000002ec74	ldr	x8, [x19, #0x108]
000000000002ec78	cbz	x8, 0x2ecb8
000000000002ec7c	add	x20, x19, #0xf8
000000000002ec80	ldp	x8, x0, [x19, #0xf8]
000000000002ec84	ldr	x9, [x8, #0x8]
000000000002ec88	ldr	x10, [x0]
000000000002ec8c	str	x9, [x10, #0x8]
000000000002ec90	ldr	x8, [x8, #0x8]
000000000002ec94	str	x10, [x8]
000000000002ec98	str	xzr, [x19, #0x108]
000000000002ec9c	cmp	x0, x20
000000000002eca0	b.eq	0x2ecb8
000000000002eca4	ldr	x21, [x0, #0x8]
000000000002eca8	bl	_mi_free
000000000002ecac	mov	x0, x21
000000000002ecb0	cmp	x21, x20
000000000002ecb4	b.ne	0x2eca4
000000000002ecb8	ldr	x8, [x19, #0xf0]
000000000002ecbc	cbz	x8, 0x2ecfc
000000000002ecc0	add	x20, x19, #0xe0
000000000002ecc4	ldp	x8, x0, [x19, #0xe0]
000000000002ecc8	ldr	x9, [x8, #0x8]
000000000002eccc	ldr	x10, [x0]
000000000002ecd0	str	x9, [x10, #0x8]
000000000002ecd4	ldr	x8, [x8, #0x8]
000000000002ecd8	str	x10, [x8]
000000000002ecdc	str	xzr, [x19, #0xf0]
000000000002ece0	cmp	x0, x20
000000000002ece4	b.eq	0x2ecfc
000000000002ece8	ldr	x21, [x0, #0x8]
000000000002ecec	bl	_mi_free
000000000002ecf0	mov	x0, x21
000000000002ecf4	cmp	x21, x20
000000000002ecf8	b.ne	0x2ece8
000000000002ecfc	add	x0, x19, #0xa0
000000000002ed00	bl	__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv
000000000002ed04	ldr	x8, [x19, #0xd0]
000000000002ed08	cbz	x8, 0x2ed48
000000000002ed0c	add	x20, x19, #0xc0
000000000002ed10	ldp	x8, x0, [x19, #0xc0]
000000000002ed14	ldr	x9, [x8, #0x8]
000000000002ed18	ldr	x10, [x0]
000000000002ed1c	str	x9, [x10, #0x8]
000000000002ed20	ldr	x8, [x8, #0x8]
000000000002ed24	str	x10, [x8]
000000000002ed28	str	xzr, [x19, #0xd0]
000000000002ed2c	cmp	x0, x20
000000000002ed30	b.eq	0x2ed48
000000000002ed34	ldr	x21, [x0, #0x8]
000000000002ed38	bl	0x55b7c ; symbol stub for: _free
000000000002ed3c	mov	x0, x21
000000000002ed40	cmp	x21, x20
000000000002ed44	b.ne	0x2ed34
000000000002ed48	ldr	x8, [x19, #0xb8]
000000000002ed4c	cbz	x8, 0x2ed8c
000000000002ed50	add	x20, x19, #0xa8
000000000002ed54	ldp	x8, x0, [x19, #0xa8]
000000000002ed58	ldr	x9, [x8, #0x8]
000000000002ed5c	ldr	x10, [x0]
000000000002ed60	str	x9, [x10, #0x8]
000000000002ed64	ldr	x8, [x8, #0x8]
000000000002ed68	str	x10, [x8]
000000000002ed6c	str	xzr, [x19, #0xb8]
000000000002ed70	cmp	x0, x20
000000000002ed74	b.eq	0x2ed8c
000000000002ed78	ldr	x21, [x0, #0x8]
000000000002ed7c	bl	0x55b7c ; symbol stub for: _free
000000000002ed80	mov	x0, x21
000000000002ed84	cmp	x21, x20
000000000002ed88	b.ne	0x2ed78
000000000002ed8c	ldr	x0, [x19, #0x70]
000000000002ed90	cbz	x0, 0x2eda4
000000000002ed94	ldr	x20, [x0]
000000000002ed98	bl	0x55b7c ; symbol stub for: _free
000000000002ed9c	mov	x0, x20
000000000002eda0	cbnz	x20, 0x2ed94
000000000002eda4	ldr	x0, [x19, #0x60]
000000000002eda8	str	xzr, [x19, #0x60]
000000000002edac	cbz	x0, 0x2edb4
000000000002edb0	bl	0x55b7c ; symbol stub for: _free
000000000002edb4	ldr	x0, [x19, #0x48]
000000000002edb8	cbz	x0, 0x2edc4
000000000002edbc	str	x0, [x19, #0x50]
000000000002edc0	bl	0x55b7c ; symbol stub for: _free
000000000002edc4	add	x0, x19, #0x10
000000000002edc8	bl	__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv
000000000002edcc	ldr	x8, [x19, #0x40]
000000000002edd0	cbz	x8, 0x2ee10
000000000002edd4	add	x20, x19, #0x30
000000000002edd8	ldp	x8, x0, [x19, #0x30]
000000000002eddc	ldr	x9, [x8, #0x8]
000000000002ede0	ldr	x10, [x0]
000000000002ede4	str	x9, [x10, #0x8]
000000000002ede8	ldr	x8, [x8, #0x8]
000000000002edec	str	x10, [x8]
000000000002edf0	str	xzr, [x19, #0x40]
000000000002edf4	cmp	x0, x20
000000000002edf8	b.eq	0x2ee10
000000000002edfc	ldr	x21, [x0, #0x8]
000000000002ee00	bl	0x55b7c ; symbol stub for: _free
000000000002ee04	mov	x0, x21
000000000002ee08	cmp	x21, x20
000000000002ee0c	b.ne	0x2edfc
000000000002ee10	ldr	x8, [x19, #0x28]
000000000002ee14	cbz	x8, 0x2ee54
000000000002ee18	add	x20, x19, #0x18
000000000002ee1c	ldp	x8, x0, [x19, #0x18]
000000000002ee20	ldr	x9, [x8, #0x8]
000000000002ee24	ldr	x10, [x0]
000000000002ee28	str	x9, [x10, #0x8]
000000000002ee2c	ldr	x8, [x8, #0x8]
000000000002ee30	str	x10, [x8]
000000000002ee34	str	xzr, [x19, #0x28]
000000000002ee38	cmp	x0, x20
000000000002ee3c	b.eq	0x2ee54
000000000002ee40	ldr	x19, [x0, #0x8]
000000000002ee44	bl	0x55b7c ; symbol stub for: _free
000000000002ee48	mov	x0, x19
000000000002ee4c	cmp	x19, x20
000000000002ee50	b.ne	0x2ee40
000000000002ee54	ldp	x29, x30, [sp, #0x20]
000000000002ee58	ldp	x20, x19, [sp, #0x10]
000000000002ee5c	ldp	x22, x21, [sp], #0x30
000000000002ee60	ret
__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv:
000000000002ee64	stp	x22, x21, [sp, #-0x30]!
000000000002ee68	stp	x20, x19, [sp, #0x10]
000000000002ee6c	stp	x29, x30, [sp, #0x20]
000000000002ee70	add	x29, sp, #0x20
000000000002ee74	mov	x19, x0
000000000002ee78	add	x8, x0, #0x8
000000000002ee7c	ldr	x9, [x0, #0x10]
000000000002ee80	cmp	x8, x9
000000000002ee84	b.eq	0x2ee9c
000000000002ee88	add	x10, x9, #0x18
000000000002ee8c	stlr	xzr, [x10]
000000000002ee90	ldr	x9, [x9, #0x8]
000000000002ee94	cmp	x8, x9
000000000002ee98	b.ne	0x2ee88
000000000002ee9c	ldr	x8, [x19]
000000000002eea0	add	x20, x8, #0x30
000000000002eea4	mov	w21, #0x1
000000000002eea8	ldaxrb	w8, [x20]
000000000002eeac	stxrb	w9, w21, [x20]
000000000002eeb0	cbnz	w9, 0x2eea8
000000000002eeb4	tbz	w8, #0x0, 0x2eec0
000000000002eeb8	bl	0x55e28 ; symbol stub for: _sched_yield
000000000002eebc	b	0x2eea8
000000000002eec0	ldr	x8, [x19]
000000000002eec4	ldr	x9, [x19, #0x18]
000000000002eec8	cbz	x9, 0x2ef08
000000000002eecc	ldp	x11, x10, [x19, #0x8]
000000000002eed0	ldr	x12, [x11, #0x8]
000000000002eed4	ldr	x13, [x10]
000000000002eed8	str	x12, [x13, #0x8]
000000000002eedc	ldr	x12, [x11, #0x8]
000000000002eee0	str	x13, [x12]
000000000002eee4	ldr	x12, [x8]
000000000002eee8	str	x10, [x12, #0x8]
000000000002eeec	str	x12, [x10]
000000000002eef0	str	x11, [x8]
000000000002eef4	str	x8, [x11, #0x8]
000000000002eef8	ldr	x10, [x8, #0x10]
000000000002eefc	add	x9, x10, x9
000000000002ef00	str	x9, [x8, #0x10]
000000000002ef04	str	xzr, [x19, #0x18]
000000000002ef08	ldr	x9, [x19, #0x30]
000000000002ef0c	cbz	x9, 0x2ef50
000000000002ef10	add	x10, x8, #0x18
000000000002ef14	ldp	x12, x11, [x19, #0x20]
000000000002ef18	ldr	x13, [x12, #0x8]
000000000002ef1c	ldr	x14, [x11]
000000000002ef20	str	x13, [x14, #0x8]
000000000002ef24	ldr	x13, [x12, #0x8]
000000000002ef28	str	x14, [x13]
000000000002ef2c	ldr	x13, [x8, #0x18]
000000000002ef30	str	x11, [x13, #0x8]
000000000002ef34	str	x13, [x11]
000000000002ef38	str	x12, [x8, #0x18]
000000000002ef3c	str	x10, [x12, #0x8]
000000000002ef40	ldr	x10, [x8, #0x28]
000000000002ef44	add	x9, x10, x9
000000000002ef48	str	x9, [x8, #0x28]
000000000002ef4c	str	xzr, [x19, #0x30]
000000000002ef50	stlrb	wzr, [x20]
000000000002ef54	ldp	x29, x30, [sp, #0x20]
000000000002ef58	ldp	x20, x19, [sp, #0x10]
000000000002ef5c	ldp	x22, x21, [sp], #0x30
000000000002ef60	ret
000000000002ef64	bl	___clang_call_terminate
__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv:
000000000002ef68	stp	x22, x21, [sp, #-0x30]!
000000000002ef6c	stp	x20, x19, [sp, #0x10]
000000000002ef70	stp	x29, x30, [sp, #0x20]
000000000002ef74	add	x29, sp, #0x20
000000000002ef78	mov	x19, x0
000000000002ef7c	add	x8, x0, #0x8
000000000002ef80	ldr	x9, [x0, #0x10]
000000000002ef84	cmp	x8, x9
000000000002ef88	b.eq	0x2efa0
000000000002ef8c	add	x10, x9, #0x18
000000000002ef90	stlr	xzr, [x10]
000000000002ef94	ldr	x9, [x9, #0x8]
000000000002ef98	cmp	x8, x9
000000000002ef9c	b.ne	0x2ef8c
000000000002efa0	ldr	x8, [x19]
000000000002efa4	add	x20, x8, #0x30
000000000002efa8	mov	w21, #0x1
000000000002efac	ldaxrb	w8, [x20]
000000000002efb0	stxrb	w9, w21, [x20]
000000000002efb4	cbnz	w9, 0x2efac
000000000002efb8	tbz	w8, #0x0, 0x2efc4
000000000002efbc	bl	0x55e28 ; symbol stub for: _sched_yield
000000000002efc0	b	0x2efac
000000000002efc4	ldr	x8, [x19]
000000000002efc8	ldr	x9, [x19, #0x18]
000000000002efcc	cbz	x9, 0x2f00c
000000000002efd0	ldp	x11, x10, [x19, #0x8]
000000000002efd4	ldr	x12, [x11, #0x8]
000000000002efd8	ldr	x13, [x10]
000000000002efdc	str	x12, [x13, #0x8]
000000000002efe0	ldr	x12, [x11, #0x8]
000000000002efe4	str	x13, [x12]
000000000002efe8	ldr	x12, [x8]
000000000002efec	str	x10, [x12, #0x8]
000000000002eff0	str	x12, [x10]
000000000002eff4	str	x11, [x8]
000000000002eff8	str	x8, [x11, #0x8]
000000000002effc	ldr	x10, [x8, #0x10]
000000000002f000	add	x9, x10, x9
000000000002f004	str	x9, [x8, #0x10]
000000000002f008	str	xzr, [x19, #0x18]
000000000002f00c	ldr	x9, [x19, #0x30]
000000000002f010	cbz	x9, 0x2f054
000000000002f014	add	x10, x8, #0x18
000000000002f018	ldp	x12, x11, [x19, #0x20]
000000000002f01c	ldr	x13, [x12, #0x8]
000000000002f020	ldr	x14, [x11]
000000000002f024	str	x13, [x14, #0x8]
000000000002f028	ldr	x13, [x12, #0x8]
000000000002f02c	str	x14, [x13]
000000000002f030	ldr	x13, [x8, #0x18]
000000000002f034	str	x11, [x13, #0x8]
000000000002f038	str	x13, [x11]
000000000002f03c	str	x12, [x8, #0x18]
000000000002f040	str	x10, [x12, #0x8]
000000000002f044	ldr	x10, [x8, #0x28]
000000000002f048	add	x9, x10, x9
000000000002f04c	str	x9, [x8, #0x28]
000000000002f050	str	xzr, [x19, #0x30]
000000000002f054	stlrb	wzr, [x20]
000000000002f058	ldp	x29, x30, [sp, #0x20]
000000000002f05c	ldp	x20, x19, [sp, #0x10]
000000000002f060	ldp	x22, x21, [sp], #0x30
000000000002f064	ret
000000000002f068	bl	___clang_call_terminate
__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv:
000000000002f06c	stp	x22, x21, [sp, #-0x30]!
000000000002f070	stp	x20, x19, [sp, #0x10]
000000000002f074	stp	x29, x30, [sp, #0x20]
000000000002f078	add	x29, sp, #0x20
000000000002f07c	mov	x19, x0
000000000002f080	add	x8, x0, #0x8
000000000002f084	ldr	x9, [x0, #0x10]
000000000002f088	cmp	x8, x9
000000000002f08c	b.eq	0x2f0a4
000000000002f090	add	x10, x9, #0x38
000000000002f094	stlr	xzr, [x10]
000000000002f098	ldr	x9, [x9, #0x8]
000000000002f09c	cmp	x8, x9
000000000002f0a0	b.ne	0x2f090
000000000002f0a4	ldr	x8, [x19]
000000000002f0a8	add	x20, x8, #0x30
000000000002f0ac	mov	w21, #0x1
000000000002f0b0	ldaxrb	w8, [x20]
000000000002f0b4	stxrb	w9, w21, [x20]
000000000002f0b8	cbnz	w9, 0x2f0b0
000000000002f0bc	tbz	w8, #0x0, 0x2f0c8
000000000002f0c0	bl	0x55e28 ; symbol stub for: _sched_yield
000000000002f0c4	b	0x2f0b0
000000000002f0c8	ldr	x8, [x19]
000000000002f0cc	ldr	x9, [x19, #0x18]
000000000002f0d0	cbz	x9, 0x2f110
000000000002f0d4	ldp	x11, x10, [x19, #0x8]
000000000002f0d8	ldr	x12, [x11, #0x8]
000000000002f0dc	ldr	x13, [x10]
000000000002f0e0	str	x12, [x13, #0x8]
000000000002f0e4	ldr	x12, [x11, #0x8]
000000000002f0e8	str	x13, [x12]
000000000002f0ec	ldr	x12, [x8]
000000000002f0f0	str	x10, [x12, #0x8]
000000000002f0f4	str	x12, [x10]
000000000002f0f8	str	x11, [x8]
000000000002f0fc	str	x8, [x11, #0x8]
000000000002f100	ldr	x10, [x8, #0x10]
000000000002f104	add	x9, x10, x9
000000000002f108	str	x9, [x8, #0x10]
000000000002f10c	str	xzr, [x19, #0x18]
000000000002f110	ldr	x9, [x19, #0x30]
000000000002f114	cbz	x9, 0x2f158
000000000002f118	add	x10, x8, #0x18
000000000002f11c	ldp	x12, x11, [x19, #0x20]
000000000002f120	ldr	x13, [x12, #0x8]
000000000002f124	ldr	x14, [x11]
000000000002f128	str	x13, [x14, #0x8]
000000000002f12c	ldr	x13, [x12, #0x8]
000000000002f130	str	x14, [x13]
000000000002f134	ldr	x13, [x8, #0x18]
000000000002f138	str	x11, [x13, #0x8]
000000000002f13c	str	x13, [x11]
000000000002f140	str	x12, [x8, #0x18]
000000000002f144	str	x10, [x12, #0x8]
000000000002f148	ldr	x10, [x8, #0x28]
000000000002f14c	add	x9, x10, x9
000000000002f150	str	x9, [x8, #0x28]
000000000002f154	str	xzr, [x19, #0x30]
000000000002f158	stlrb	wzr, [x20]
000000000002f15c	ldp	x29, x30, [sp, #0x20]
000000000002f160	ldp	x20, x19, [sp, #0x10]
000000000002f164	ldp	x22, x21, [sp], #0x30
000000000002f168	ret
000000000002f16c	bl	___clang_call_terminate
__ZNSt3__110unique_ptrIN6kotlin14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS1_11std_support9allocatorIS4_EEE4NodeENS6_17allocator_deleterISA_NS7_ISA_EEEEED1Ev:
000000000002f170	stp	x20, x19, [sp, #-0x20]!
000000000002f174	stp	x29, x30, [sp, #0x10]
000000000002f178	add	x29, sp, #0x10
000000000002f17c	adrp	x8, 101 ; 0x94000
000000000002f180	ldr	x19, [x8, #0x7f0]
000000000002f184	str	xzr, [x8, #0x7f0]
000000000002f188	cbz	x19, 0x2f1a4
000000000002f18c	mov	x0, x19
000000000002f190	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000002f194	mov	x0, x19
000000000002f198	ldp	x29, x30, [sp, #0x10]
000000000002f19c	ldp	x20, x19, [sp], #0x20
000000000002f1a0	b	0x55b7c ; symbol stub for: _free
000000000002f1a4	ldp	x29, x30, [sp, #0x10]
000000000002f1a8	ldp	x20, x19, [sp], #0x20
000000000002f1ac	ret
__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_:
000000000002f1b0	sub	sp, sp, #0x70
000000000002f1b4	stp	x28, x27, [sp, #0x10]
000000000002f1b8	stp	x26, x25, [sp, #0x20]
000000000002f1bc	stp	x24, x23, [sp, #0x30]
000000000002f1c0	stp	x22, x21, [sp, #0x40]
000000000002f1c4	stp	x20, x19, [sp, #0x50]
000000000002f1c8	stp	x29, x30, [sp, #0x60]
000000000002f1cc	add	x29, sp, #0x60
000000000002f1d0	mov	x20, x1
000000000002f1d4	mov	x19, x0
000000000002f1d8	sub	x21, x20, #0x10
000000000002f1dc	sub	x26, x20, #0x20
000000000002f1e0	mov	x22, x19
000000000002f1e4	mov	x19, x22
000000000002f1e8	sub	x9, x20, x22
000000000002f1ec	asr	x8, x9, #4
000000000002f1f0	cmp	x8, #0x5
000000000002f1f4	b.ls	0x2f5e0
000000000002f1f8	cmp	x9, #0x1ef
000000000002f1fc	b.le	0x2f6b4
000000000002f200	cmp	x8, #0x0
000000000002f204	cinc	x10, x8, lt
000000000002f208	asr	x27, x10, #1
000000000002f20c	add	x22, x19, x27, lsl #4
000000000002f210	mov	w10, #0x3e71
000000000002f214	cmp	x9, x10
000000000002f218	b.lt	0x2f24c
000000000002f21c	add	x9, x8, #0x3
000000000002f220	cmp	x8, #0x0
000000000002f224	csel	x8, x9, x8, lt
000000000002f228	lsl	x8, x8, #2
000000000002f22c	and	x8, x8, #0xfffffffffffffff0
000000000002f230	add	x1, x19, x8
000000000002f234	add	x3, x22, x8
000000000002f238	mov	x0, x19
000000000002f23c	mov	x2, x22
000000000002f240	mov	x4, x21
000000000002f244	bl	__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_
000000000002f248	b	0x2f25c
000000000002f24c	mov	x0, x19
000000000002f250	mov	x1, x22
000000000002f254	mov	x2, x21
000000000002f258	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002f25c	mov	x23, x0
000000000002f260	ldr	x24, [x19, #0x8]
000000000002f264	add	x8, x19, x27, lsl #4
000000000002f268	ldr	x28, [x8, #0x8]
000000000002f26c	cmp	x28, x24
000000000002f270	csel	x2, x28, x24, lo
000000000002f274	cbz	x2, 0x2f2e0
000000000002f278	ldr	x1, [x22]
000000000002f27c	ldr	x0, [x19]
000000000002f280	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f284	cbz	w0, 0x2f2e0
000000000002f288	tbnz	w0, #0x1f, 0x2f2e8
000000000002f28c	mov	x8, x26
000000000002f290	b	0x2f2a0
000000000002f294	mov	w0, #0x0
000000000002f298	sub	x8, x27, #0x10
000000000002f29c	tbnz	w0, #0x1f, 0x2f2fc
000000000002f2a0	cmp	x8, x19
000000000002f2a4	b.eq	0x2f484
000000000002f2a8	mov	x27, x8
000000000002f2ac	ldr	x25, [x8, #0x8]
000000000002f2b0	cmp	x28, x25
000000000002f2b4	csel	x2, x28, x25, lo
000000000002f2b8	cbz	x2, 0x2f2cc
000000000002f2bc	ldr	x1, [x22]
000000000002f2c0	ldr	x0, [x27]
000000000002f2c4	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f2c8	cbnz	w0, 0x2f298
000000000002f2cc	cmp	x25, x28
000000000002f2d0	b.eq	0x2f294
000000000002f2d4	b.lo	0x2f2fc
000000000002f2d8	mov	w0, #0x1
000000000002f2dc	b	0x2f298
000000000002f2e0	cmp	x24, x28
000000000002f2e4	b.hs	0x2f28c
000000000002f2e8	mov	x27, x21
000000000002f2ec	add	x24, x19, #0x10
000000000002f2f0	cmp	x24, x27
000000000002f2f4	b.lo	0x2f350
000000000002f2f8	b	0x2f3dc
000000000002f2fc	ldr	q0, [x19]
000000000002f300	str	q0, [sp]
000000000002f304	ldr	q0, [x27]
000000000002f308	str	q0, [x19]
000000000002f30c	ldr	q0, [sp]
000000000002f310	str	q0, [x27]
000000000002f314	add	w23, w23, #0x1
000000000002f318	add	x24, x19, #0x10
000000000002f31c	cmp	x24, x27
000000000002f320	b.hs	0x2f3dc
000000000002f324	b	0x2f350
000000000002f328	ldr	q0, [x24]
000000000002f32c	str	q0, [sp]
000000000002f330	ldr	q0, [x27]
000000000002f334	str	q0, [x24]
000000000002f338	ldr	q0, [sp]
000000000002f33c	str	q0, [x27]
000000000002f340	add	w23, w23, #0x1
000000000002f344	cmp	x24, x22
000000000002f348	csel	x22, x27, x22, eq
000000000002f34c	add	x24, x24, #0x10
000000000002f350	ldr	x28, [x22, #0x8]
000000000002f354	b	0x2f364
000000000002f358	cmp	x25, x28
000000000002f35c	b.hs	0x2f388
000000000002f360	add	x24, x24, #0x10
000000000002f364	ldr	x25, [x24, #0x8]
000000000002f368	cmp	x28, x25
000000000002f36c	csel	x2, x28, x25, lo
000000000002f370	cbz	x2, 0x2f358
000000000002f374	ldr	x1, [x22]
000000000002f378	ldr	x0, [x24]
000000000002f37c	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f380	cbz	w0, 0x2f358
000000000002f384	tbnz	w0, #0x1f, 0x2f360
000000000002f388	sub	x8, x27, #0x10
000000000002f38c	b	0x2f39c
000000000002f390	mov	w0, #0x0
000000000002f394	sub	x8, x27, #0x10
000000000002f398	tbnz	w0, #0x1f, 0x2f3d4
000000000002f39c	mov	x27, x8
000000000002f3a0	ldr	x25, [x8, #0x8]
000000000002f3a4	cmp	x28, x25
000000000002f3a8	csel	x2, x28, x25, lo
000000000002f3ac	cbz	x2, 0x2f3c0
000000000002f3b0	ldr	x1, [x22]
000000000002f3b4	ldr	x0, [x27]
000000000002f3b8	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f3bc	cbnz	w0, 0x2f394
000000000002f3c0	cmp	x25, x28
000000000002f3c4	b.eq	0x2f390
000000000002f3c8	b.lo	0x2f3d4
000000000002f3cc	mov	w0, #0x1
000000000002f3d0	b	0x2f394
000000000002f3d4	cmp	x24, x27
000000000002f3d8	b.ls	0x2f328
000000000002f3dc	cmp	x24, x22
000000000002f3e0	b.eq	0x2f434
000000000002f3e4	ldr	x25, [x22, #0x8]
000000000002f3e8	ldr	x27, [x24, #0x8]
000000000002f3ec	cmp	x27, x25
000000000002f3f0	csel	x2, x27, x25, lo
000000000002f3f4	cbz	x2, 0x2f410
000000000002f3f8	ldr	x1, [x24]
000000000002f3fc	ldr	x0, [x22]
000000000002f400	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f404	cbz	w0, 0x2f410
000000000002f408	tbnz	w0, #0x1f, 0x2f418
000000000002f40c	b	0x2f434
000000000002f410	cmp	x25, x27
000000000002f414	b.hs	0x2f434
000000000002f418	ldr	q0, [x24]
000000000002f41c	str	q0, [sp]
000000000002f420	ldr	q0, [x22]
000000000002f424	str	q0, [x24]
000000000002f428	ldr	q0, [sp]
000000000002f42c	str	q0, [x22]
000000000002f430	add	w23, w23, #0x1
000000000002f434	cbnz	w23, 0x2f460
000000000002f438	mov	x0, x19
000000000002f43c	mov	x1, x24
000000000002f440	bl	__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEbT0_S9_T_
000000000002f444	mov	x23, x0
000000000002f448	add	x22, x24, #0x10
000000000002f44c	mov	x0, x22
000000000002f450	mov	x1, x20
000000000002f454	bl	__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEbT0_S9_T_
000000000002f458	cbnz	w0, 0x2f5d4
000000000002f45c	tbnz	w23, #0x0, 0x2f1e4
000000000002f460	sub	x8, x24, x19
000000000002f464	sub	x9, x20, x24
000000000002f468	cmp	x8, x9
000000000002f46c	b.ge	0x2f5c0
000000000002f470	mov	x0, x19
000000000002f474	mov	x1, x24
000000000002f478	bl	__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_
000000000002f47c	add	x22, x24, #0x10
000000000002f480	b	0x2f1e4
000000000002f484	add	x22, x19, #0x10
000000000002f488	ldur	x23, [x20, #-0x8]
000000000002f48c	cmp	x23, x24
000000000002f490	csel	x2, x23, x24, lo
000000000002f494	cbz	x2, 0x2f4b0
000000000002f498	ldr	x1, [x21]
000000000002f49c	ldr	x0, [x19]
000000000002f4a0	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f4a4	cbz	w0, 0x2f4b0
000000000002f4a8	tbz	w0, #0x1f, 0x2f4d0
000000000002f4ac	b	0x2f4b8
000000000002f4b0	cmp	x24, x23
000000000002f4b4	b.hs	0x2f4d0
000000000002f4b8	cmp	x22, x21
000000000002f4bc	b.ne	0x2f51c
000000000002f4c0	b	0x2f7c4
000000000002f4c4	cmp	x24, x23
000000000002f4c8	b.lo	0x2f4fc
000000000002f4cc	add	x22, x22, #0x10
000000000002f4d0	cmp	x22, x21
000000000002f4d4	b.eq	0x2f7c4
000000000002f4d8	ldr	x23, [x22, #0x8]
000000000002f4dc	cmp	x23, x24
000000000002f4e0	csel	x2, x23, x24, lo
000000000002f4e4	cbz	x2, 0x2f4c4
000000000002f4e8	ldr	x1, [x22]
000000000002f4ec	ldr	x0, [x19]
000000000002f4f0	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f4f4	cbz	w0, 0x2f4c4
000000000002f4f8	tbz	w0, #0x1f, 0x2f4cc
000000000002f4fc	ldr	q0, [x22]
000000000002f500	str	q0, [sp]
000000000002f504	ldr	q0, [x21]
000000000002f508	str	q0, [x22], #0x10
000000000002f50c	ldr	q0, [sp]
000000000002f510	str	q0, [x21]
000000000002f514	cmp	x22, x21
000000000002f518	b.eq	0x2f7c4
000000000002f51c	mov	x23, x21
000000000002f520	ldr	x24, [x19, #0x8]
000000000002f524	b	0x2f534
000000000002f528	cmp	x24, x25
000000000002f52c	b.lo	0x2f558
000000000002f530	add	x22, x22, #0x10
000000000002f534	ldr	x25, [x22, #0x8]
000000000002f538	cmp	x25, x24
000000000002f53c	csel	x2, x25, x24, lo
000000000002f540	cbz	x2, 0x2f528
000000000002f544	ldr	x1, [x22]
000000000002f548	ldr	x0, [x19]
000000000002f54c	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f550	cbz	w0, 0x2f528
000000000002f554	tbz	w0, #0x1f, 0x2f530
000000000002f558	sub	x8, x23, #0x10
000000000002f55c	b	0x2f568
000000000002f560	sub	x8, x23, #0x10
000000000002f564	tbz	w0, #0x1f, 0x2f59c
000000000002f568	mov	x23, x8
000000000002f56c	ldr	x25, [x8, #0x8]
000000000002f570	cmp	x25, x24
000000000002f574	csel	x2, x25, x24, lo
000000000002f578	cbz	x2, 0x2f58c
000000000002f57c	ldr	x1, [x23]
000000000002f580	ldr	x0, [x19]
000000000002f584	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f588	cbnz	w0, 0x2f560
000000000002f58c	cmp	x24, x25
000000000002f590	b.hs	0x2f59c
000000000002f594	mov	w0, #-0x1
000000000002f598	b	0x2f560
000000000002f59c	cmp	x22, x23
000000000002f5a0	b.hs	0x2f1e4
000000000002f5a4	ldr	q0, [x22]
000000000002f5a8	str	q0, [sp]
000000000002f5ac	ldr	q0, [x23]
000000000002f5b0	str	q0, [x22], #0x10
000000000002f5b4	ldr	q0, [sp]
000000000002f5b8	str	q0, [x23]
000000000002f5bc	b	0x2f520
000000000002f5c0	add	x0, x24, #0x10
000000000002f5c4	mov	x1, x20
000000000002f5c8	bl	__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_
000000000002f5cc	mov	x20, x24
000000000002f5d0	b	0x2f1d8
000000000002f5d4	mov	x20, x24
000000000002f5d8	tbz	w23, #0x0, 0x2f1d8
000000000002f5dc	b	0x2f7c4
000000000002f5e0	adr	x9, #0x28ae0
000000000002f5e4	nop
000000000002f5e8	adr	x10, #0x10
000000000002f5ec	ldrb	w11, [x9, x8]
000000000002f5f0	add	x10, x10, x11, lsl #2
000000000002f5f4	br	x10
000000000002f5f8	ldur	x20, [x20, #-0x8]
000000000002f5fc	ldr	x22, [x19, #0x8]
000000000002f600	cmp	x22, x20
000000000002f604	csel	x2, x22, x20, lo
000000000002f608	cbz	x2, 0x2f7a4
000000000002f60c	ldr	x1, [x19]
000000000002f610	ldr	x0, [x21]
000000000002f614	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f618	cbz	w0, 0x2f7a4
000000000002f61c	tbnz	w0, #0x1f, 0x2f7ac
000000000002f620	b	0x2f7c4
000000000002f624	add	x1, x19, #0x10
000000000002f628	mov	x0, x19
000000000002f62c	mov	x2, x21
000000000002f630	ldp	x29, x30, [sp, #0x60]
000000000002f634	ldp	x20, x19, [sp, #0x50]
000000000002f638	ldp	x22, x21, [sp, #0x40]
000000000002f63c	ldp	x24, x23, [sp, #0x30]
000000000002f640	ldp	x26, x25, [sp, #0x20]
000000000002f644	ldp	x28, x27, [sp, #0x10]
000000000002f648	add	sp, sp, #0x70
000000000002f64c	b	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002f650	add	x1, x19, #0x10
000000000002f654	add	x2, x19, #0x20
000000000002f658	mov	x0, x19
000000000002f65c	mov	x3, x21
000000000002f660	ldp	x29, x30, [sp, #0x60]
000000000002f664	ldp	x20, x19, [sp, #0x50]
000000000002f668	ldp	x22, x21, [sp, #0x40]
000000000002f66c	ldp	x24, x23, [sp, #0x30]
000000000002f670	ldp	x26, x25, [sp, #0x20]
000000000002f674	ldp	x28, x27, [sp, #0x10]
000000000002f678	add	sp, sp, #0x70
000000000002f67c	b	__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_
000000000002f680	add	x1, x19, #0x10
000000000002f684	add	x2, x19, #0x20
000000000002f688	add	x3, x19, #0x30
000000000002f68c	mov	x0, x19
000000000002f690	mov	x4, x21
000000000002f694	ldp	x29, x30, [sp, #0x60]
000000000002f698	ldp	x20, x19, [sp, #0x50]
000000000002f69c	ldp	x22, x21, [sp, #0x40]
000000000002f6a0	ldp	x24, x23, [sp, #0x30]
000000000002f6a4	ldp	x26, x25, [sp, #0x20]
000000000002f6a8	ldp	x28, x27, [sp, #0x10]
000000000002f6ac	add	sp, sp, #0x70
000000000002f6b0	b	__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_
000000000002f6b4	add	x21, x19, #0x20
000000000002f6b8	add	x1, x19, #0x10
000000000002f6bc	mov	x0, x19
000000000002f6c0	mov	x2, x21
000000000002f6c4	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002f6c8	add	x8, x19, #0x30
000000000002f6cc	cmp	x8, x20
000000000002f6d0	b.eq	0x2f7c4
000000000002f6d4	mov	x23, #0x0
000000000002f6d8	b	0x2f6f4
000000000002f6dc	mov	x25, x19
000000000002f6e0	stp	x22, x24, [x25]
000000000002f6e4	add	x8, x21, #0x10
000000000002f6e8	add	x23, x23, #0x10
000000000002f6ec	cmp	x8, x20
000000000002f6f0	b.eq	0x2f7c4
000000000002f6f4	mov	x26, x21
000000000002f6f8	mov	x21, x8
000000000002f6fc	ldr	x24, [x8, #0x8]
000000000002f700	ldr	x25, [x26, #0x8]
000000000002f704	cmp	x25, x24
000000000002f708	csel	x2, x25, x24, lo
000000000002f70c	cbz	x2, 0x2f72c
000000000002f710	ldr	x1, [x26]
000000000002f714	ldr	x22, [x21]
000000000002f718	mov	x0, x22
000000000002f71c	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f720	cbz	w0, 0x2f72c
000000000002f724	tbz	w0, #0x1f, 0x2f6e4
000000000002f728	b	0x2f738
000000000002f72c	cmp	x24, x25
000000000002f730	b.hs	0x2f6e4
000000000002f734	ldr	x22, [x21]
000000000002f738	mov	x27, x23
000000000002f73c	b	0x2f758
000000000002f740	cmp	x24, x26
000000000002f744	b.hs	0x2f798
000000000002f748	mov	w0, #-0x1
000000000002f74c	sub	x26, x25, #0x10
000000000002f750	sub	x27, x27, #0x10
000000000002f754	tbz	w0, #0x1f, 0x2f6e0
000000000002f758	add	x8, x19, x27
000000000002f75c	ldr	q0, [x8, #0x20]
000000000002f760	str	q0, [x8, #0x30]
000000000002f764	cmn	x27, #0x20
000000000002f768	b.eq	0x2f6dc
000000000002f76c	mov	x25, x26
000000000002f770	ldr	x26, [x8, #0x18]
000000000002f774	cmp	x26, x24
000000000002f778	csel	x2, x26, x24, lo
000000000002f77c	cbz	x2, 0x2f740
000000000002f780	add	x8, x19, x27
000000000002f784	ldr	x1, [x8, #0x10]
000000000002f788	mov	x0, x22
000000000002f78c	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f790	cbnz	w0, 0x2f74c
000000000002f794	b	0x2f740
000000000002f798	add	x8, x19, x27
000000000002f79c	add	x25, x8, #0x20
000000000002f7a0	b	0x2f6e0
000000000002f7a4	cmp	x20, x22
000000000002f7a8	b.hs	0x2f7c4
000000000002f7ac	ldr	q0, [x19]
000000000002f7b0	str	q0, [sp]
000000000002f7b4	ldr	q0, [x21]
000000000002f7b8	str	q0, [x19]
000000000002f7bc	ldr	q0, [sp]
000000000002f7c0	str	q0, [x21]
000000000002f7c4	ldp	x29, x30, [sp, #0x60]
000000000002f7c8	ldp	x20, x19, [sp, #0x50]
000000000002f7cc	ldp	x22, x21, [sp, #0x40]
000000000002f7d0	ldp	x24, x23, [sp, #0x30]
000000000002f7d4	ldp	x26, x25, [sp, #0x20]
000000000002f7d8	ldp	x28, x27, [sp, #0x10]
000000000002f7dc	add	sp, sp, #0x70
000000000002f7e0	ret
__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_:
000000000002f7e4	sub	sp, sp, #0x90
000000000002f7e8	stp	x24, x23, [sp, #0x50]
000000000002f7ec	stp	x22, x21, [sp, #0x60]
000000000002f7f0	stp	x20, x19, [sp, #0x70]
000000000002f7f4	stp	x29, x30, [sp, #0x80]
000000000002f7f8	add	x29, sp, #0x80
000000000002f7fc	mov	x20, x2
000000000002f800	mov	x19, x1
000000000002f804	mov	x21, x0
000000000002f808	ldr	x23, [x1, #0x8]
000000000002f80c	ldr	x24, [x0, #0x8]
000000000002f810	cmp	x24, x23
000000000002f814	csel	x2, x24, x23, lo
000000000002f818	cbz	x2, 0x2f844
000000000002f81c	ldr	x1, [x21]
000000000002f820	ldr	x0, [x19]
000000000002f824	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f828	mov	x22, x0
000000000002f82c	cbz	w0, 0x2f844
000000000002f830	ldr	x24, [x20, #0x8]
000000000002f834	cmp	x23, x24
000000000002f838	csel	x2, x23, x24, lo
000000000002f83c	cbnz	x2, 0x2f864
000000000002f840	b	0x2f898
000000000002f844	cmp	x23, x24
000000000002f848	mov	w8, #-0x1
000000000002f84c	cneg	w8, w8, hs
000000000002f850	csel	w22, wzr, w8, eq
000000000002f854	ldr	x24, [x20, #0x8]
000000000002f858	cmp	x23, x24
000000000002f85c	csel	x2, x23, x24, lo
000000000002f860	cbz	x2, 0x2f898
000000000002f864	ldr	x1, [x19]
000000000002f868	ldr	x0, [x20]
000000000002f86c	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f870	cbz	w0, 0x2f898
000000000002f874	tbnz	w22, #0x1f, 0x2f8ac
000000000002f878	tbnz	w0, #0x1f, 0x2f8ec
000000000002f87c	mov	w0, #0x0
000000000002f880	ldp	x29, x30, [sp, #0x80]
000000000002f884	ldp	x20, x19, [sp, #0x70]
000000000002f888	ldp	x22, x21, [sp, #0x60]
000000000002f88c	ldp	x24, x23, [sp, #0x50]
000000000002f890	add	sp, sp, #0x90
000000000002f894	ret
000000000002f898	cmp	x24, x23
000000000002f89c	mov	w8, #-0x1
000000000002f8a0	cneg	w8, w8, hs
000000000002f8a4	csel	w0, wzr, w8, eq
000000000002f8a8	tbz	w22, #0x1f, 0x2f878
000000000002f8ac	tbnz	w0, #0x1f, 0x2f928
000000000002f8b0	ldr	q0, [x21]
000000000002f8b4	ldr	q1, [x19]
000000000002f8b8	str	q1, [x21]
000000000002f8bc	str	q0, [x19]
000000000002f8c0	ldr	x21, [x20, #0x8]
000000000002f8c4	ldr	x22, [x19, #0x8]
000000000002f8c8	cmp	x22, x21
000000000002f8cc	csel	x2, x22, x21, lo
000000000002f8d0	cbz	x2, 0x2f93c
000000000002f8d4	ldr	x1, [x19]
000000000002f8d8	ldr	x0, [x20]
000000000002f8dc	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f8e0	cbz	w0, 0x2f93c
000000000002f8e4	tbz	w0, #0x1f, 0x2f98c
000000000002f8e8	b	0x2f944
000000000002f8ec	ldr	q0, [x19]
000000000002f8f0	ldr	q1, [x20]
000000000002f8f4	str	q1, [x19]
000000000002f8f8	str	q0, [x20]
000000000002f8fc	ldr	x20, [x19, #0x8]
000000000002f900	ldr	x22, [x21, #0x8]
000000000002f904	cmp	x22, x20
000000000002f908	csel	x2, x22, x20, lo
000000000002f90c	cbz	x2, 0x2f958
000000000002f910	ldr	x1, [x21]
000000000002f914	ldr	x0, [x19]
000000000002f918	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002f91c	cbz	w0, 0x2f958
000000000002f920	tbz	w0, #0x1f, 0x2f98c
000000000002f924	b	0x2f960
000000000002f928	ldr	q0, [x21]
000000000002f92c	ldr	q1, [x20]
000000000002f930	str	q1, [x21]
000000000002f934	str	q0, [x20]
000000000002f938	b	0x2f98c
000000000002f93c	cmp	x21, x22
000000000002f940	b.hs	0x2f98c
000000000002f944	ldr	q0, [x19]
000000000002f948	ldr	q1, [x20]
000000000002f94c	str	q1, [x19]
000000000002f950	str	q0, [x20]
000000000002f954	b	0x2f970
000000000002f958	cmp	x20, x22
000000000002f95c	b.hs	0x2f98c
000000000002f960	ldr	q0, [x21]
000000000002f964	ldr	q1, [x19]
000000000002f968	str	q1, [x21]
000000000002f96c	str	q0, [x19]
000000000002f970	mov	w0, #0x2
000000000002f974	ldp	x29, x30, [sp, #0x80]
000000000002f978	ldp	x20, x19, [sp, #0x70]
000000000002f97c	ldp	x22, x21, [sp, #0x60]
000000000002f980	ldp	x24, x23, [sp, #0x50]
000000000002f984	add	sp, sp, #0x90
000000000002f988	ret
000000000002f98c	mov	w0, #0x1
000000000002f990	ldp	x29, x30, [sp, #0x80]
000000000002f994	ldp	x20, x19, [sp, #0x70]
000000000002f998	ldp	x22, x21, [sp, #0x60]
000000000002f99c	ldp	x24, x23, [sp, #0x50]
000000000002f9a0	add	sp, sp, #0x90
000000000002f9a4	ret
__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_:
000000000002f9a8	sub	sp, sp, #0x80
000000000002f9ac	stp	x26, x25, [sp, #0x30]
000000000002f9b0	stp	x24, x23, [sp, #0x40]
000000000002f9b4	stp	x22, x21, [sp, #0x50]
000000000002f9b8	stp	x20, x19, [sp, #0x60]
000000000002f9bc	stp	x29, x30, [sp, #0x70]
000000000002f9c0	add	x29, sp, #0x70
000000000002f9c4	mov	x24, x3
000000000002f9c8	mov	x23, x2
000000000002f9cc	mov	x19, x1
000000000002f9d0	mov	x20, x0
000000000002f9d4	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002f9d8	mov	x21, x0
000000000002f9dc	mov	x22, x0
000000000002f9e0	ldr	x25, [x24, #0x8]
000000000002f9e4	ldr	x26, [x23, #0x8]
000000000002f9e8	cmp	x26, x25
000000000002f9ec	csel	x2, x26, x25, lo
000000000002f9f0	cbz	x2, 0x2fa0c
000000000002f9f4	ldr	x1, [x23]
000000000002f9f8	ldr	x0, [x24]
000000000002f9fc	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002fa00	cbz	w0, 0x2fa0c
000000000002fa04	tbnz	w0, #0x1f, 0x2fa14
000000000002fa08	b	0x2fab8
000000000002fa0c	cmp	x25, x26
000000000002fa10	b.hs	0x2fab8
000000000002fa14	ldr	q0, [x23]
000000000002fa18	ldr	q1, [x24]
000000000002fa1c	str	q1, [x23]
000000000002fa20	str	q0, [x24]
000000000002fa24	add	w22, w21, #0x1
000000000002fa28	ldr	x24, [x23, #0x8]
000000000002fa2c	ldr	x25, [x19, #0x8]
000000000002fa30	cmp	x25, x24
000000000002fa34	csel	x2, x25, x24, lo
000000000002fa38	cbz	x2, 0x2fa54
000000000002fa3c	ldr	x1, [x19]
000000000002fa40	ldr	x0, [x23]
000000000002fa44	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002fa48	cbz	w0, 0x2fa54
000000000002fa4c	tbnz	w0, #0x1f, 0x2fa5c
000000000002fa50	b	0x2fab8
000000000002fa54	cmp	x24, x25
000000000002fa58	b.hs	0x2fab8
000000000002fa5c	ldr	q0, [x19]
000000000002fa60	ldr	q1, [x23]
000000000002fa64	str	q1, [x19]
000000000002fa68	str	q0, [x23]
000000000002fa6c	add	w22, w21, #0x2
000000000002fa70	ldr	x23, [x19, #0x8]
000000000002fa74	ldr	x24, [x20, #0x8]
000000000002fa78	cmp	x24, x23
000000000002fa7c	csel	x2, x24, x23, lo
000000000002fa80	cbz	x2, 0x2fa9c
000000000002fa84	ldr	x1, [x20]
000000000002fa88	ldr	x0, [x19]
000000000002fa8c	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002fa90	cbz	w0, 0x2fa9c
000000000002fa94	tbnz	w0, #0x1f, 0x2faa4
000000000002fa98	b	0x2fab8
000000000002fa9c	cmp	x23, x24
000000000002faa0	b.hs	0x2fab8
000000000002faa4	ldr	q0, [x20]
000000000002faa8	ldr	q1, [x19]
000000000002faac	str	q1, [x20]
000000000002fab0	str	q0, [x19]
000000000002fab4	add	w22, w21, #0x3
000000000002fab8	mov	x0, x22
000000000002fabc	ldp	x29, x30, [sp, #0x70]
000000000002fac0	ldp	x20, x19, [sp, #0x60]
000000000002fac4	ldp	x22, x21, [sp, #0x50]
000000000002fac8	ldp	x24, x23, [sp, #0x40]
000000000002facc	ldp	x26, x25, [sp, #0x30]
000000000002fad0	add	sp, sp, #0x80
000000000002fad4	ret
__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_:
000000000002fad8	sub	sp, sp, #0xa0
000000000002fadc	stp	x28, x27, [sp, #0x40]
000000000002fae0	stp	x26, x25, [sp, #0x50]
000000000002fae4	stp	x24, x23, [sp, #0x60]
000000000002fae8	stp	x22, x21, [sp, #0x70]
000000000002faec	stp	x20, x19, [sp, #0x80]
000000000002faf0	stp	x29, x30, [sp, #0x90]
000000000002faf4	add	x29, sp, #0x90
000000000002faf8	mov	x25, x4
000000000002fafc	mov	x24, x3
000000000002fb00	mov	x23, x2
000000000002fb04	mov	x19, x1
000000000002fb08	mov	x20, x0
000000000002fb0c	bl	__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_
000000000002fb10	mov	x21, x0
000000000002fb14	mov	x22, x0
000000000002fb18	ldr	x26, [x25, #0x8]
000000000002fb1c	ldr	x27, [x24, #0x8]
000000000002fb20	cmp	x27, x26
000000000002fb24	csel	x2, x27, x26, lo
000000000002fb28	cbz	x2, 0x2fb44
000000000002fb2c	ldr	x1, [x24]
000000000002fb30	ldr	x0, [x25]
000000000002fb34	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002fb38	cbz	w0, 0x2fb44
000000000002fb3c	tbnz	w0, #0x1f, 0x2fb4c
000000000002fb40	b	0x2fc38
000000000002fb44	cmp	x26, x27
000000000002fb48	b.hs	0x2fc38
000000000002fb4c	ldr	q0, [x24]
000000000002fb50	ldr	q1, [x25]
000000000002fb54	str	q1, [x24]
000000000002fb58	str	q0, [x25]
000000000002fb5c	add	w22, w21, #0x1
000000000002fb60	ldr	x25, [x24, #0x8]
000000000002fb64	ldr	x26, [x23, #0x8]
000000000002fb68	cmp	x26, x25
000000000002fb6c	csel	x2, x26, x25, lo
000000000002fb70	cbz	x2, 0x2fb8c
000000000002fb74	ldr	x1, [x23]
000000000002fb78	ldr	x0, [x24]
000000000002fb7c	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002fb80	cbz	w0, 0x2fb8c
000000000002fb84	tbnz	w0, #0x1f, 0x2fb94
000000000002fb88	b	0x2fc38
000000000002fb8c	cmp	x25, x26
000000000002fb90	b.hs	0x2fc38
000000000002fb94	ldr	q0, [x23]
000000000002fb98	ldr	q1, [x24]
000000000002fb9c	str	q1, [x23]
000000000002fba0	str	q0, [x24]
000000000002fba4	add	w22, w21, #0x2
000000000002fba8	ldr	x24, [x23, #0x8]
000000000002fbac	ldr	x25, [x19, #0x8]
000000000002fbb0	cmp	x25, x24
000000000002fbb4	csel	x2, x25, x24, lo
000000000002fbb8	cbz	x2, 0x2fbd4
000000000002fbbc	ldr	x1, [x19]
000000000002fbc0	ldr	x0, [x23]
000000000002fbc4	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002fbc8	cbz	w0, 0x2fbd4
000000000002fbcc	tbnz	w0, #0x1f, 0x2fbdc
000000000002fbd0	b	0x2fc38
000000000002fbd4	cmp	x24, x25
000000000002fbd8	b.hs	0x2fc38
000000000002fbdc	ldr	q0, [x19]
000000000002fbe0	ldr	q1, [x23]
000000000002fbe4	str	q1, [x19]
000000000002fbe8	str	q0, [x23]
000000000002fbec	add	w22, w21, #0x3
000000000002fbf0	ldr	x23, [x19, #0x8]
000000000002fbf4	ldr	x24, [x20, #0x8]
000000000002fbf8	cmp	x24, x23
000000000002fbfc	csel	x2, x24, x23, lo
000000000002fc00	cbz	x2, 0x2fc1c
000000000002fc04	ldr	x1, [x20]
000000000002fc08	ldr	x0, [x19]
000000000002fc0c	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002fc10	cbz	w0, 0x2fc1c
000000000002fc14	tbnz	w0, #0x1f, 0x2fc24
000000000002fc18	b	0x2fc38
000000000002fc1c	cmp	x23, x24
000000000002fc20	b.hs	0x2fc38
000000000002fc24	ldr	q0, [x20]
000000000002fc28	ldr	q1, [x19]
000000000002fc2c	str	q1, [x20]
000000000002fc30	str	q0, [x19]
000000000002fc34	add	w22, w21, #0x4
000000000002fc38	mov	x0, x22
000000000002fc3c	ldp	x29, x30, [sp, #0x90]
000000000002fc40	ldp	x20, x19, [sp, #0x80]
000000000002fc44	ldp	x22, x21, [sp, #0x70]
000000000002fc48	ldp	x24, x23, [sp, #0x60]
000000000002fc4c	ldp	x26, x25, [sp, #0x50]
000000000002fc50	ldp	x28, x27, [sp, #0x40]
000000000002fc54	add	sp, sp, #0xa0
000000000002fc58	ret
__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEbT0_S9_T_:
000000000002fc5c	sub	sp, sp, #0x70
000000000002fc60	stp	x28, x27, [sp, #0x10]
000000000002fc64	stp	x26, x25, [sp, #0x20]
000000000002fc68	stp	x24, x23, [sp, #0x30]
000000000002fc6c	stp	x22, x21, [sp, #0x40]
000000000002fc70	stp	x20, x19, [sp, #0x50]
000000000002fc74	stp	x29, x30, [sp, #0x60]
000000000002fc78	add	x29, sp, #0x60
000000000002fc7c	mov	x20, x1
000000000002fc80	mov	x19, x0
000000000002fc84	sub	x8, x1, x0
000000000002fc88	asr	x8, x8, #4
000000000002fc8c	cmp	x8, #0x5
000000000002fc90	b.hi	0x2fce0
000000000002fc94	mov	w0, #0x1
000000000002fc98	adr	x9, #0x2842e
000000000002fc9c	nop
000000000002fca0	adr	x10, #0x10
000000000002fca4	ldrb	w11, [x9, x8]
000000000002fca8	add	x10, x10, x11, lsl #2
000000000002fcac	br	x10
000000000002fcb0	sub	x21, x20, #0x10
000000000002fcb4	ldur	x20, [x20, #-0x8]
000000000002fcb8	ldr	x22, [x19, #0x8]
000000000002fcbc	cmp	x22, x20
000000000002fcc0	csel	x2, x22, x20, lo
000000000002fcc4	cbz	x2, 0x2fe34
000000000002fcc8	ldr	x1, [x19]
000000000002fccc	ldr	x0, [x21]
000000000002fcd0	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002fcd4	cbz	w0, 0x2fe34
000000000002fcd8	tbnz	w0, #0x1f, 0x2fe3c
000000000002fcdc	b	0x2fe4c
000000000002fce0	add	x21, x19, #0x20
000000000002fce4	add	x1, x19, #0x10
000000000002fce8	mov	x0, x19
000000000002fcec	mov	x2, x21
000000000002fcf0	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002fcf4	add	x8, x19, #0x30
000000000002fcf8	cmp	x8, x20
000000000002fcfc	b.eq	0x2fe4c
000000000002fd00	mov	x23, #0x0
000000000002fd04	mov	w24, #0x0
000000000002fd08	b	0x2fd30
000000000002fd0c	mov	x26, x19
000000000002fd10	stp	x22, x25, [x26]
000000000002fd14	add	w24, w24, #0x1
000000000002fd18	cmp	w24, #0x8
000000000002fd1c	b.eq	0x2fe70
000000000002fd20	add	x8, x21, #0x10
000000000002fd24	add	x23, x23, #0x10
000000000002fd28	cmp	x8, x20
000000000002fd2c	b.eq	0x2fe4c
000000000002fd30	mov	x27, x21
000000000002fd34	mov	x21, x8
000000000002fd38	ldr	x25, [x8, #0x8]
000000000002fd3c	ldr	x26, [x27, #0x8]
000000000002fd40	cmp	x26, x25
000000000002fd44	csel	x2, x26, x25, lo
000000000002fd48	cbz	x2, 0x2fd68
000000000002fd4c	ldr	x1, [x27]
000000000002fd50	ldr	x22, [x21]
000000000002fd54	mov	x0, x22
000000000002fd58	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002fd5c	cbz	w0, 0x2fd68
000000000002fd60	tbz	w0, #0x1f, 0x2fd20
000000000002fd64	b	0x2fd74
000000000002fd68	cmp	x25, x26
000000000002fd6c	b.hs	0x2fd20
000000000002fd70	ldr	x22, [x21]
000000000002fd74	mov	x28, x23
000000000002fd78	b	0x2fd94
000000000002fd7c	cmp	x25, x27
000000000002fd80	b.hs	0x2fdd4
000000000002fd84	mov	w0, #-0x1
000000000002fd88	sub	x27, x26, #0x10
000000000002fd8c	sub	x28, x28, #0x10
000000000002fd90	tbz	w0, #0x1f, 0x2fd10
000000000002fd94	add	x8, x19, x28
000000000002fd98	ldr	q0, [x8, #0x20]
000000000002fd9c	str	q0, [x8, #0x30]
000000000002fda0	cmn	x28, #0x20
000000000002fda4	b.eq	0x2fd0c
000000000002fda8	mov	x26, x27
000000000002fdac	ldr	x27, [x8, #0x18]
000000000002fdb0	cmp	x27, x25
000000000002fdb4	csel	x2, x27, x25, lo
000000000002fdb8	cbz	x2, 0x2fd7c
000000000002fdbc	add	x8, x19, x28
000000000002fdc0	ldr	x1, [x8, #0x10]
000000000002fdc4	mov	x0, x22
000000000002fdc8	bl	0x55bc4 ; symbol stub for: _memcmp
000000000002fdcc	cbnz	w0, 0x2fd88
000000000002fdd0	b	0x2fd7c
000000000002fdd4	add	x8, x19, x28
000000000002fdd8	add	x26, x8, #0x20
000000000002fddc	b	0x2fd10
000000000002fde0	add	x1, x19, #0x10
000000000002fde4	sub	x2, x20, #0x10
000000000002fde8	mov	x0, x19
000000000002fdec	bl	__ZNSt3__17__sort3IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_T_
000000000002fdf0	mov	w0, #0x1
000000000002fdf4	b	0x2fe50
000000000002fdf8	add	x1, x19, #0x10
000000000002fdfc	add	x2, x19, #0x20
000000000002fe00	sub	x3, x20, #0x10
000000000002fe04	mov	x0, x19
000000000002fe08	bl	__ZNSt3__17__sort4IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_T_
000000000002fe0c	mov	w0, #0x1
000000000002fe10	b	0x2fe50
000000000002fe14	add	x1, x19, #0x10
000000000002fe18	add	x2, x19, #0x20
000000000002fe1c	add	x3, x19, #0x30
000000000002fe20	sub	x4, x20, #0x10
000000000002fe24	mov	x0, x19
000000000002fe28	bl	__ZNSt3__17__sort5IRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_
000000000002fe2c	mov	w0, #0x1
000000000002fe30	b	0x2fe50
000000000002fe34	cmp	x20, x22
000000000002fe38	b.hs	0x2fe4c
000000000002fe3c	ldr	q0, [x19]
000000000002fe40	ldr	q1, [x21]
000000000002fe44	str	q1, [x19]
000000000002fe48	str	q0, [x21]
000000000002fe4c	mov	w0, #0x1
000000000002fe50	ldp	x29, x30, [sp, #0x60]
000000000002fe54	ldp	x20, x19, [sp, #0x50]
000000000002fe58	ldp	x22, x21, [sp, #0x40]
000000000002fe5c	ldp	x24, x23, [sp, #0x30]
000000000002fe60	ldp	x26, x25, [sp, #0x20]
000000000002fe64	ldp	x28, x27, [sp, #0x10]
000000000002fe68	add	sp, sp, #0x70
000000000002fe6c	ret
000000000002fe70	add	x8, x21, #0x10
000000000002fe74	cmp	x8, x20
000000000002fe78	cset	w0, eq
000000000002fe7c	b	0x2fe50
__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader:
000000000002fe80	stp	x22, x21, [sp, #-0x30]!
000000000002fe84	stp	x20, x19, [sp, #0x10]
000000000002fe88	stp	x29, x30, [sp, #0x20]
000000000002fe8c	add	x29, sp, #0x20
000000000002fe90	ldar	x21, [x0]
000000000002fe94	and	x1, x21, #0xfffffffffffffffc
000000000002fe98	ldr	x8, [x1]
000000000002fe9c	cmp	x1, #0x0
000000000002fea0	ccmp	x8, x1, #0x4, ne
000000000002fea4	b.ne	0x2ff4c
000000000002fea8	tst	x21, #0x3
000000000002feac	b.ne	0x2ff60
000000000002feb0	mov	x19, x0
000000000002feb4	adrp	x0, 75 ; 0x7a000
000000000002feb8	add	x0, x0, #0x4e0
000000000002febc	ldr	x8, [x0]
000000000002fec0	blr	x8
000000000002fec4	ldr	x20, [x0]
000000000002fec8	add	x22, x20, #0xd8
000000000002fecc	mov	w0, #0x48
000000000002fed0	bl	__ZN6kotlin20allocateInObjectPoolEm
000000000002fed4	mov	x1, x0
000000000002fed8	str	xzr, [x1, #0x18]!
000000000002fedc	str	xzr, [x0]
000000000002fee0	str	wzr, [x0, #0x20]
000000000002fee4	stp	xzr, x19, [x0, #0x28]
000000000002fee8	stlr	x21, [x1]
000000000002feec	stp	x22, xzr, [x0, #0x38]
000000000002fef0	mov	x8, x20
000000000002fef4	ldr	x9, [x8, #0xe0]!
000000000002fef8	stp	x9, x8, [x0]
000000000002fefc	str	x0, [x9, #0x8]
000000000002ff00	str	x0, [x8]
000000000002ff04	ldr	x8, [x20, #0xf0]
000000000002ff08	add	x8, x8, #0x1
000000000002ff0c	str	x8, [x20, #0xf0]
000000000002ff10	str	x0, [x0, #0x40]
000000000002ff14	ldaxr	x22, [x19]
000000000002ff18	cmp	x22, x21
000000000002ff1c	b.ne	0x2ff34
000000000002ff20	stlxr	w8, x1, [x19]
000000000002ff24	cbnz	w8, 0x2ff14
000000000002ff28	mov	w8, #0x1
000000000002ff2c	tbz	w8, #0x0, 0x2ff40
000000000002ff30	b	0x2ff4c
000000000002ff34	mov	w8, #0x0
000000000002ff38	clrex
000000000002ff3c	tbnz	w8, #0x0, 0x2ff4c
000000000002ff40	add	x0, x20, #0x8
000000000002ff44	bl	__ZN6kotlin2mm22ExtraObjectDataFactory22DestroyExtraObjectDataEPNS0_10ThreadDataERNS0_15ExtraObjectDataE
000000000002ff48	mov	x1, x22
000000000002ff4c	mov	x0, x1
000000000002ff50	ldp	x29, x30, [sp, #0x20]
000000000002ff54	ldp	x20, x19, [sp, #0x10]
000000000002ff58	ldp	x22, x21, [sp], #0x30
000000000002ff5c	ret
000000000002ff60	adr	x2, #0x2c8dc ; literal pool for: "Object must not be tagged"
000000000002ff64	nop
000000000002ff68	mov	w0, #0x0
000000000002ff6c	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
000000000002ff70	brk	#0x1
000000000002ff74	bl	___clang_call_terminate
__ZN6kotlin2mm22ExtraObjectDataFactory22DestroyExtraObjectDataEPNS0_10ThreadDataERNS0_15ExtraObjectDataE:
000000000002ff78	stp	x20, x19, [sp, #-0x20]!
000000000002ff7c	stp	x29, x30, [sp, #0x10]
000000000002ff80	add	x29, sp, #0x10
000000000002ff84	mov	x19, x0
000000000002ff88	add	x8, x0, #0xd0
000000000002ff8c	sub	x20, x1, #0x8
000000000002ff90	add	x9, x1, #0x20
000000000002ff94	ldar	x9, [x9]
000000000002ff98	cmp	x8, x9
000000000002ff9c	b.eq	0x2ffd4
000000000002ffa0	mov	w0, #0x18
000000000002ffa4	bl	__ZN6kotlin20allocateInObjectPoolEm
000000000002ffa8	ldr	x8, [x19, #0xf0]!
000000000002ffac	stp	x19, x20, [x0, #0x8]
000000000002ffb0	str	x8, [x0]
000000000002ffb4	str	x0, [x8, #0x8]
000000000002ffb8	str	x0, [x19]
000000000002ffbc	ldr	x8, [x19, #0x10]
000000000002ffc0	add	x8, x8, #0x1
000000000002ffc4	str	x8, [x19, #0x10]
000000000002ffc8	ldp	x29, x30, [sp, #0x10]
000000000002ffcc	ldp	x20, x19, [sp], #0x20
000000000002ffd0	ret
000000000002ffd4	ldr	x0, [x20, #0x30]
000000000002ffd8	ldp	x9, x8, [x0]
000000000002ffdc	str	x8, [x9, #0x8]
000000000002ffe0	ldr	x8, [x0, #0x8]
000000000002ffe4	str	x9, [x8]
000000000002ffe8	ldr	x8, [x19, #0xe8]
000000000002ffec	sub	x8, x8, #0x1
000000000002fff0	str	x8, [x19, #0xe8]
000000000002fff4	ldp	x29, x30, [sp, #0x10]
000000000002fff8	ldp	x20, x19, [sp], #0x20
000000000002fffc	b	_mi_free
__ZN6kotlin2mm15ExtraObjectData9UninstallEv:
0000000000030000	stp	x22, x21, [sp, #-0x30]!
0000000000030004	stp	x20, x19, [sp, #0x10]
0000000000030008	stp	x29, x30, [sp, #0x20]
000000000003000c	add	x29, sp, #0x20
0000000000030010	mov	x19, x0
0000000000030014	add	x8, x0, #0x18
0000000000030018	ldar	x8, [x8]
000000000003001c	tbz	w8, #0x0, 0x30028
0000000000030020	and	x8, x8, #0xfffffffffffffffe
0000000000030024	ldr	x8, [x8, #0x8]
0000000000030028	mov	x9, x19
000000000003002c	ldr	x10, [x9], #0x10
0000000000030030	stlr	x10, [x8]
0000000000030034	ldar	x8, [x9]
0000000000030038	cbz	x8, 0x300ac
000000000003003c	adrp	x0, 74 ; 0x7a000
0000000000030040	add	x0, x0, #0x4e0
0000000000030044	ldr	x9, [x0]
0000000000030048	blr	x9
000000000003004c	ldr	x22, [x0]
0000000000030050	add	x20, x22, #0x138
0000000000030054	mov	w9, #0x1
0000000000030058	ldaxr	w21, [x20]
000000000003005c	stlxr	w10, w9, [x20]
0000000000030060	cbnz	w10, 0x30058
0000000000030064	nop
0000000000030068	ldr	x1, #0x646f8
000000000003006c	mov	x0, x8
0000000000030070	mov	w2, #0x0
0000000000030074	bl	0x55ca8 ; Objc message: -[x0 initWithDouble:]
0000000000030078	cbz	x22, 0x300ac
000000000003007c	ldaxr	w8, [x20]
0000000000030080	stlxr	w9, w21, [x20]
0000000000030084	cbnz	w9, 0x3007c
0000000000030088	cbnz	w21, 0x300ac
000000000003008c	cmp	w8, #0x1
0000000000030090	b.ne	0x300ac
0000000000030094	adr	x8, #0x64475
0000000000030098	nop
000000000003009c	ldarb	w8, [x8]
00000000000300a0	tbz	w8, #0x0, 0x300ac
00000000000300a4	mov	x0, x20
00000000000300a8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000300ac	add	x8, x19, #0x10
00000000000300b0	stlr	xzr, [x8]
00000000000300b4	ldp	x29, x30, [sp, #0x20]
00000000000300b8	ldp	x20, x19, [sp, #0x10]
00000000000300bc	ldp	x22, x21, [sp], #0x30
00000000000300c0	ret
00000000000300c4	mov	x19, x0
00000000000300c8	cbz	x22, 0x300fc
00000000000300cc	ldaxr	w8, [x20]
00000000000300d0	stlxr	w9, w21, [x20]
00000000000300d4	cbnz	w9, 0x300cc
00000000000300d8	cbnz	w21, 0x300fc
00000000000300dc	cmp	w8, #0x1
00000000000300e0	b.ne	0x300fc
00000000000300e4	adr	x8, #0x64425
00000000000300e8	nop
00000000000300ec	ldarb	w8, [x8]
00000000000300f0	tbz	w8, #0x0, 0x300fc
00000000000300f4	mov	x0, x20
00000000000300f8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000300fc	mov	x0, x19
0000000000030100	bl	___clang_call_terminate
_AddTLSRecord:
0000000000030104	stp	x28, x27, [sp, #-0x60]!
0000000000030108	stp	x26, x25, [sp, #0x10]
000000000003010c	stp	x24, x23, [sp, #0x20]
0000000000030110	stp	x22, x21, [sp, #0x30]
0000000000030114	stp	x20, x19, [sp, #0x40]
0000000000030118	stp	x29, x30, [sp, #0x50]
000000000003011c	add	x29, sp, #0x50
0000000000030120	mov	x19, x2
0000000000030124	mov	x22, x1
0000000000030128	mov	x20, x0
000000000003012c	add	x21, x0, #0x60
0000000000030130	lsr	x8, x1, #32
0000000000030134	lsl	w9, w22, #3
0000000000030138	add	x9, x9, #0x8
000000000003013c	eor	x9, x9, x8
0000000000030140	mov	x10, #0x2d69
0000000000030144	movk	x10, #0xeb38, lsl #16
0000000000030148	movk	x10, #0xea08, lsl #32
000000000003014c	movk	x10, #0x9ddf, lsl #48
0000000000030150	mul	x9, x9, x10
0000000000030154	eor	x8, x9, x8
0000000000030158	eor	x8, x8, x9, lsr #47
000000000003015c	mul	x8, x8, x10
0000000000030160	eor	x8, x8, x8, lsr #47
0000000000030164	mul	x25, x8, x10
0000000000030168	ldr	x24, [x0, #0x68]
000000000003016c	cbz	x24, 0x30194
0000000000030170	fmov	d0, x24
0000000000030174	cnt.8b	v0, v0
0000000000030178	uaddlv.8b	h0, v0
000000000003017c	fmov	w8, s0
0000000000030180	cmp	x8, #0x1
0000000000030184	b.hi	0x301a0
0000000000030188	sub	x9, x24, #0x1
000000000003018c	and	x9, x25, x9
0000000000030190	b	0x301b4
0000000000030194	mov	x26, x20
0000000000030198	ldr	w27, [x26, #0x8c]!
000000000003019c	b	0x302dc
00000000000301a0	mov	x9, x25
00000000000301a4	cmp	x25, x24
00000000000301a8	b.lo	0x301b4
00000000000301ac	udiv	x9, x25, x24
00000000000301b0	msub	x9, x9, x24, x25
00000000000301b4	ldr	x10, [x21]
00000000000301b8	ldr	x10, [x10, x9, lsl #3]
00000000000301bc	cbz	x10, 0x30248
00000000000301c0	ldr	x10, [x10]
00000000000301c4	cbz	x10, 0x30248
00000000000301c8	sub	x11, x24, #0x1
00000000000301cc	b	0x301e4
00000000000301d0	ldr	x12, [x10, #0x10]
00000000000301d4	cmp	x12, x22
00000000000301d8	b.eq	0x304c0
00000000000301dc	ldr	x10, [x10]
00000000000301e0	cbz	x10, 0x30218
00000000000301e4	ldr	x12, [x10, #0x8]
00000000000301e8	cmp	x12, x25
00000000000301ec	b.eq	0x301d0
00000000000301f0	cmp	x8, #0x1
00000000000301f4	b.hi	0x30200
00000000000301f8	and	x12, x12, x11
00000000000301fc	b	0x30210
0000000000030200	cmp	x12, x24
0000000000030204	b.lo	0x30210
0000000000030208	udiv	x13, x12, x24
000000000003020c	msub	x12, x13, x24, x12
0000000000030210	cmp	x12, x9
0000000000030214	b.eq	0x301dc
0000000000030218	mov	x26, x20
000000000003021c	ldr	w27, [x26, #0x8c]!
0000000000030220	cbz	x24, 0x3019c
0000000000030224	fmov	d0, x24
0000000000030228	cnt.8b	v0, v0
000000000003022c	uaddlv.8b	h0, v0
0000000000030230	fmov	w8, s0
0000000000030234	cmp	x8, #0x1
0000000000030238	b.hi	0x30268
000000000003023c	sub	x9, x24, #0x1
0000000000030240	and	x28, x25, x9
0000000000030244	b	0x30280
0000000000030248	mov	x26, x20
000000000003024c	ldr	w27, [x26, #0x8c]!
0000000000030250	fmov	d0, x24
0000000000030254	cnt.8b	v0, v0
0000000000030258	uaddlv.8b	h0, v0
000000000003025c	fmov	w8, s0
0000000000030260	cmp	x8, #0x1
0000000000030264	b.ls	0x3023c
0000000000030268	mov	x28, x25
000000000003026c	cmp	x25, x24
0000000000030270	b.lo	0x30280
0000000000030274	udiv	x9, x25, x24
0000000000030278	mul	x9, x9, x24
000000000003027c	sub	x28, x25, x9
0000000000030280	ldr	x9, [x21]
0000000000030284	ldr	x9, [x9, x28, lsl #3]
0000000000030288	cbz	x9, 0x302dc
000000000003028c	sub	x10, x24, #0x1
0000000000030290	b	0x302ac
0000000000030294	and	x11, x11, x10
0000000000030298	cmp	x11, x28
000000000003029c	b.ne	0x302dc
00000000000302a0	ldr	x11, [x9, #0x10]
00000000000302a4	cmp	x11, x22
00000000000302a8	b.eq	0x304b8
00000000000302ac	ldr	x9, [x9]
00000000000302b0	cbz	x9, 0x302dc
00000000000302b4	ldr	x11, [x9, #0x8]
00000000000302b8	cmp	x11, x25
00000000000302bc	b.eq	0x302a0
00000000000302c0	cmp	x8, #0x1
00000000000302c4	b.ls	0x30294
00000000000302c8	cmp	x11, x24
00000000000302cc	b.lo	0x30298
00000000000302d0	udiv	x12, x11, x24
00000000000302d4	msub	x11, x12, x24, x11
00000000000302d8	b	0x30298
00000000000302dc	mov	w0, #0x1
00000000000302e0	mov	w1, #0x20
00000000000302e4	bl	0x55aec ; symbol stub for: _calloc
00000000000302e8	mov	x23, x0
00000000000302ec	mov	w8, w27
00000000000302f0	bfi	x8, x19, #32, #32
00000000000302f4	stp	x22, x8, [x0, #0x10]
00000000000302f8	str	x25, [x0, #0x8]
00000000000302fc	ldr	x8, [x20, #0x78]
0000000000030300	add	x8, x8, #0x1
0000000000030304	ucvtf	s0, x8
0000000000030308	ldr	s1, [x20, #0x80]
000000000003030c	cbz	x24, 0x30320
0000000000030310	ucvtf	s2, x24
0000000000030314	fmul	s2, s1, s2
0000000000030318	fcmp	s2, s0
000000000003031c	b.pl	0x30428
0000000000030320	cmp	x24, #0x3
0000000000030324	cset	w8, lo
0000000000030328	sub	x9, x24, #0x1
000000000003032c	tst	x24, x9
0000000000030330	cset	w9, ne
0000000000030334	orr	w8, w8, w9
0000000000030338	bfi	x8, x24, #1, #63
000000000003033c	fdiv	s0, s0, s1
0000000000030340	fcvtpu	x9, s0
0000000000030344	cmp	x8, x9
0000000000030348	csel	x22, x9, x8, lo
000000000003034c	subs	x8, x22, #0x1
0000000000030350	b.ne	0x3035c
0000000000030354	mov	w22, #0x2
0000000000030358	b	0x30374
000000000003035c	tst	x22, x8
0000000000030360	b.eq	0x30374
0000000000030364	mov	x0, x22
0000000000030368	bl	0x558f4 ; symbol stub for: __ZNSt3__112__next_primeEm
000000000003036c	mov	x22, x0
0000000000030370	ldr	x24, [x20, #0x68]
0000000000030374	cmp	x22, x24
0000000000030378	b.ls	0x3038c
000000000003037c	mov	x0, x21
0000000000030380	mov	x1, x22
0000000000030384	bl	__ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN6kotlin2mm18ThreadLocalStorage5EntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_NS_8equal_toIS2_EELb1EEENS3_11std_support9allocatorIS7_EEE8__rehashEm
0000000000030388	b	0x303f8
000000000003038c	b.hs	0x303f8
0000000000030390	ldr	x8, [x20, #0x78]
0000000000030394	ucvtf	s0, x8
0000000000030398	ldr	s1, [x20, #0x80]
000000000003039c	fdiv	s0, s0, s1
00000000000303a0	fcvtpu	x0, s0
00000000000303a4	cmp	x24, #0x3
00000000000303a8	b.lo	0x303e4
00000000000303ac	fmov	d0, x24
00000000000303b0	cnt.8b	v0, v0
00000000000303b4	uaddlv.8b	h0, v0
00000000000303b8	fmov	w8, s0
00000000000303bc	cmp	x8, #0x1
00000000000303c0	b.hi	0x303e4
00000000000303c4	sub	x8, x0, #0x1
00000000000303c8	clz	x8, x8
00000000000303cc	neg	x8, x8
00000000000303d0	mov	w9, #0x1
00000000000303d4	lsl	x8, x9, x8
00000000000303d8	cmp	x0, #0x2
00000000000303dc	csel	x0, x0, x8, lo
00000000000303e0	b	0x303e8
00000000000303e4	bl	0x558f4 ; symbol stub for: __ZNSt3__112__next_primeEm
00000000000303e8	cmp	x22, x0
00000000000303ec	csel	x22, x0, x22, lo
00000000000303f0	cmp	x22, x24
00000000000303f4	b.lo	0x3037c
00000000000303f8	ldr	x24, [x20, #0x68]
00000000000303fc	sub	x8, x24, #0x1
0000000000030400	tst	x24, x8
0000000000030404	b.ne	0x3041c
0000000000030408	and	x28, x8, x25
000000000003040c	ldr	x9, [x21]
0000000000030410	ldr	x8, [x9, x28, lsl #3]
0000000000030414	cbnz	x8, 0x30434
0000000000030418	b	0x30458
000000000003041c	cmp	x25, x24
0000000000030420	b.hs	0x30440
0000000000030424	mov	x28, x25
0000000000030428	ldr	x9, [x21]
000000000003042c	ldr	x8, [x9, x28, lsl #3]
0000000000030430	cbz	x8, 0x30458
0000000000030434	ldr	x9, [x8]
0000000000030438	str	x9, [x23]
000000000003043c	b	0x304a4
0000000000030440	udiv	x8, x25, x24
0000000000030444	mul	x8, x8, x24
0000000000030448	sub	x28, x25, x8
000000000003044c	ldr	x9, [x21]
0000000000030450	ldr	x8, [x9, x28, lsl #3]
0000000000030454	cbnz	x8, 0x30434
0000000000030458	mov	x8, x20
000000000003045c	ldr	x10, [x8, #0x70]!
0000000000030460	str	x10, [x23]
0000000000030464	str	x23, [x8]
0000000000030468	str	x8, [x9, x28, lsl #3]
000000000003046c	ldr	x8, [x23]
0000000000030470	cbz	x8, 0x304a8
0000000000030474	ldr	x8, [x8, #0x8]
0000000000030478	sub	x9, x24, #0x1
000000000003047c	tst	x24, x9
0000000000030480	b.ne	0x3048c
0000000000030484	and	x8, x8, x9
0000000000030488	b	0x3049c
000000000003048c	cmp	x8, x24
0000000000030490	b.lo	0x3049c
0000000000030494	udiv	x9, x8, x24
0000000000030498	msub	x8, x9, x24, x8
000000000003049c	ldr	x9, [x21]
00000000000304a0	add	x8, x9, x8, lsl #3
00000000000304a4	str	x23, [x8]
00000000000304a8	ldr	x8, [x20, #0x78]
00000000000304ac	add	x8, x8, #0x1
00000000000304b0	str	x8, [x20, #0x78]
00000000000304b4	ldr	w27, [x20, #0x8c]
00000000000304b8	add	w8, w27, w19
00000000000304bc	str	w8, [x26]
00000000000304c0	ldp	x29, x30, [sp, #0x50]
00000000000304c4	ldp	x20, x19, [sp, #0x40]
00000000000304c8	ldp	x22, x21, [sp, #0x30]
00000000000304cc	ldp	x24, x23, [sp, #0x20]
00000000000304d0	ldp	x26, x25, [sp, #0x10]
00000000000304d4	ldp	x28, x27, [sp], #0x60
00000000000304d8	ret
00000000000304dc	mov	x19, x0
00000000000304e0	cbz	x23, 0x304ec
00000000000304e4	mov	x0, x23
00000000000304e8	bl	0x55b7c ; symbol stub for: _free
00000000000304ec	mov	x0, x19
00000000000304f0	bl	___clang_call_terminate
__ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN6kotlin2mm18ThreadLocalStorage5EntryEEENS_22__unordered_map_hasherIS2_S7_NS_4hashIS2_EELb1EEENS_21__unordered_map_equalIS2_S7_NS_8equal_toIS2_EELb1EEENS3_11std_support9allocatorIS7_EEE8__rehashEm:
00000000000304f4	stp	x20, x19, [sp, #-0x20]!
00000000000304f8	stp	x29, x30, [sp, #0x10]
00000000000304fc	add	x29, sp, #0x10
0000000000030500	mov	x19, x0
0000000000030504	cbz	x1, 0x3057c
0000000000030508	mov	x20, x1
000000000003050c	mov	x0, x1
0000000000030510	mov	w1, #0x8
0000000000030514	bl	0x55aec ; symbol stub for: _calloc
0000000000030518	mov	x8, x0
000000000003051c	ldr	x0, [x19]
0000000000030520	str	x8, [x19]
0000000000030524	cbz	x0, 0x3052c
0000000000030528	bl	0x55b7c ; symbol stub for: _free
000000000003052c	mov	x8, #0x0
0000000000030530	str	x20, [x19, #0x8]
0000000000030534	ldr	x9, [x19]
0000000000030538	str	xzr, [x9, x8, lsl #3]
000000000003053c	add	x8, x8, #0x1
0000000000030540	cmp	x8, x20
0000000000030544	b.lo	0x30534
0000000000030548	mov	x11, x19
000000000003054c	ldr	x8, [x11, #0x10]!
0000000000030550	cbz	x8, 0x30658
0000000000030554	ldr	x9, [x8, #0x8]
0000000000030558	fmov	d0, x20
000000000003055c	cnt.8b	v0, v0
0000000000030560	uaddlv.8b	h0, v0
0000000000030564	fmov	w10, s0
0000000000030568	cmp	x10, #0x1
000000000003056c	b.hi	0x30594
0000000000030570	sub	x12, x20, #0x1
0000000000030574	and	x9, x9, x12
0000000000030578	b	0x305a4
000000000003057c	ldr	x0, [x19]
0000000000030580	str	xzr, [x19]
0000000000030584	cbz	x0, 0x3058c
0000000000030588	bl	0x55b7c ; symbol stub for: _free
000000000003058c	str	xzr, [x19, #0x8]
0000000000030590	b	0x30658
0000000000030594	cmp	x9, x20
0000000000030598	b.lo	0x305a4
000000000003059c	udiv	x12, x9, x20
00000000000305a0	msub	x9, x12, x20, x9
00000000000305a4	ldr	x12, [x19]
00000000000305a8	str	x11, [x12, x9, lsl #3]
00000000000305ac	ldr	x12, [x8]
00000000000305b0	cbz	x12, 0x30658
00000000000305b4	sub	x11, x20, #0x1
00000000000305b8	b	0x305c8
00000000000305bc	mov	x8, x12
00000000000305c0	ldr	x12, [x8]
00000000000305c4	cbz	x12, 0x30658
00000000000305c8	ldr	x13, [x12, #0x8]
00000000000305cc	cmp	x10, #0x1
00000000000305d0	b.hi	0x305dc
00000000000305d4	and	x13, x13, x11
00000000000305d8	b	0x305ec
00000000000305dc	cmp	x13, x20
00000000000305e0	b.lo	0x305ec
00000000000305e4	udiv	x14, x13, x20
00000000000305e8	msub	x13, x14, x20, x13
00000000000305ec	cmp	x13, x9
00000000000305f0	b.eq	0x305bc
00000000000305f4	ldr	x14, [x19]
00000000000305f8	ldr	x16, [x14, x13, lsl #3]
00000000000305fc	mov	x15, x12
0000000000030600	cbz	x16, 0x30648
0000000000030604	mov	x14, x15
0000000000030608	ldr	x15, [x15]
000000000003060c	cbz	x15, 0x30620
0000000000030610	ldr	x16, [x12, #0x10]
0000000000030614	ldr	x17, [x15, #0x10]
0000000000030618	cmp	x16, x17
000000000003061c	b.eq	0x30604
0000000000030620	str	x15, [x8]
0000000000030624	ldr	x15, [x19]
0000000000030628	lsl	x13, x13, #3
000000000003062c	ldr	x15, [x15, x13]
0000000000030630	ldr	x15, [x15]
0000000000030634	str	x15, [x14]
0000000000030638	ldr	x14, [x19]
000000000003063c	ldr	x13, [x14, x13]
0000000000030640	str	x12, [x13]
0000000000030644	b	0x305c0
0000000000030648	str	x8, [x14, x13, lsl #3]
000000000003064c	mov	x8, x12
0000000000030650	mov	x9, x13
0000000000030654	b	0x305c0
0000000000030658	ldp	x29, x30, [sp, #0x10]
000000000003065c	ldp	x20, x19, [sp], #0x20
0000000000030660	ret
_LookupTLS:
0000000000030664	stp	x29, x30, [sp, #-0x10]!
0000000000030668	mov	x29, sp
000000000003066c	adrp	x0, 74 ; 0x7a000
0000000000030670	add	x0, x0, #0x4e0
0000000000030674	ldr	x8, [x0]
0000000000030678	blr	x8
000000000003067c	ldr	x8, [x0]
0000000000030680	ldr	x10, [x8, #0x90]
0000000000030684	adr	x9, #0x63f24
0000000000030688	nop
000000000003068c	cmp	x10, x9
0000000000030690	b.eq	0x306f8
0000000000030694	ldr	x10, [x8, #0x68]
0000000000030698	cbz	x10, 0x3081c
000000000003069c	fmov	d0, x10
00000000000306a0	cnt.8b	v0, v0
00000000000306a4	uaddlv.8b	h0, v0
00000000000306a8	fmov	w11, s0
00000000000306ac	cmp	x11, #0x1
00000000000306b0	b.hi	0x30714
00000000000306b4	sub	x12, x10, #0x1
00000000000306b8	lsr	x13, x9, #32
00000000000306bc	lsl	w14, w9, #3
00000000000306c0	add	x14, x14, #0x8
00000000000306c4	eor	x14, x14, x13
00000000000306c8	mov	x15, #0x2d69
00000000000306cc	movk	x15, #0xeb38, lsl #16
00000000000306d0	movk	x15, #0xea08, lsl #32
00000000000306d4	movk	x15, #0x9ddf, lsl #48
00000000000306d8	mul	x14, x14, x15
00000000000306dc	eor	x13, x14, x13
00000000000306e0	eor	x13, x13, x14, lsr #47
00000000000306e4	mul	x13, x13, x15
00000000000306e8	eor	x13, x13, x13, lsr #47
00000000000306ec	mul	x13, x13, x15
00000000000306f0	and	x13, x12, x13
00000000000306f4	b	0x30780
00000000000306f8	add	x12, x8, #0x98
00000000000306fc	ldr	x9, [x12]
0000000000030700	lsl	x9, x9, #32
0000000000030704	ldr	x8, [x8, #0x48]
0000000000030708	add	x0, x8, x9, asr #29
000000000003070c	ldp	x29, x30, [sp], #0x10
0000000000030710	ret
0000000000030714	lsr	x12, x9, #32
0000000000030718	lsl	w13, w9, #3
000000000003071c	add	x13, x13, #0x8
0000000000030720	eor	x13, x13, x12
0000000000030724	mov	x14, #0x2d69
0000000000030728	movk	x14, #0xeb38, lsl #16
000000000003072c	movk	x14, #0xea08, lsl #32
0000000000030730	movk	x14, #0x9ddf, lsl #48
0000000000030734	mul	x13, x13, x14
0000000000030738	eor	x15, x13, x12
000000000003073c	eor	x13, x15, x13, lsr #47
0000000000030740	mul	x13, x13, x14
0000000000030744	eor	x13, x13, x13, lsr #47
0000000000030748	mul	x13, x13, x14
000000000003074c	cmp	x10, x13
0000000000030750	b.hi	0x30780
0000000000030754	lsl	w13, w9, #3
0000000000030758	add	x13, x13, #0x8
000000000003075c	eor	x13, x13, x12
0000000000030760	mul	x13, x13, x14
0000000000030764	eor	x12, x13, x12
0000000000030768	eor	x12, x12, x13, lsr #47
000000000003076c	mul	x12, x12, x14
0000000000030770	eor	x12, x12, x12, lsr #47
0000000000030774	mul	x12, x12, x14
0000000000030778	udiv	x13, x12, x10
000000000003077c	msub	x13, x13, x10, x12
0000000000030780	ldr	x12, [x8, #0x60]
0000000000030784	ldr	x12, [x12, x13, lsl #3]
0000000000030788	cbz	x12, 0x30820
000000000003078c	ldr	x12, [x12]
0000000000030790	cbz	x12, 0x30820
0000000000030794	sub	x14, x10, #0x1
0000000000030798	lsr	x15, x9, #32
000000000003079c	mov	x16, #0x2d69
00000000000307a0	movk	x16, #0xeb38, lsl #16
00000000000307a4	movk	x16, #0xea08, lsl #32
00000000000307a8	movk	x16, #0x9ddf, lsl #48
00000000000307ac	b	0x307c4
00000000000307b0	ldr	x17, [x12, #0x10]
00000000000307b4	cmp	x17, x9
00000000000307b8	b.eq	0x30820
00000000000307bc	ldr	x12, [x12]
00000000000307c0	cbz	x12, 0x30820
00000000000307c4	ldr	x17, [x12, #0x8]
00000000000307c8	lsl	w0, w9, #3
00000000000307cc	add	x0, x0, #0x8
00000000000307d0	eor	x0, x0, x15
00000000000307d4	mul	x0, x0, x16
00000000000307d8	eor	x1, x0, x15
00000000000307dc	eor	x0, x1, x0, lsr #47
00000000000307e0	mul	x0, x0, x16
00000000000307e4	eor	x0, x0, x0, lsr #47
00000000000307e8	mul	x0, x0, x16
00000000000307ec	cmp	x17, x0
00000000000307f0	b.eq	0x307b0
00000000000307f4	cmp	x11, #0x1
00000000000307f8	b.hi	0x30804
00000000000307fc	and	x17, x17, x14
0000000000030800	b	0x30814
0000000000030804	cmp	x17, x10
0000000000030808	b.lo	0x30814
000000000003080c	udiv	x0, x17, x10
0000000000030810	msub	x17, x0, x10, x17
0000000000030814	cmp	x17, x13
0000000000030818	b.eq	0x307bc
000000000003081c	mov	x12, #0x0
0000000000030820	ldr	x9, [x12, #0x10]
0000000000030824	str	x9, [x8, #0x90]
0000000000030828	ldr	x9, [x12, #0x18]!
000000000003082c	str	x9, [x8, #0x98]
0000000000030830	ldr	x9, [x12]
0000000000030834	lsl	x9, x9, #32
0000000000030838	ldr	x8, [x8, #0x48]
000000000003083c	add	x0, x8, x9, asr #29
0000000000030840	ldp	x29, x30, [sp], #0x10
0000000000030844	ret
__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE:
0000000000030848	stp	x20, x19, [sp, #-0x20]!
000000000003084c	stp	x29, x30, [sp, #0x10]
0000000000030850	add	x29, sp, #0x10
0000000000030854	mov	x20, x1
0000000000030858	mov	x19, x0
000000000003085c	add	x8, x0, #0x98
0000000000030860	add	x9, x1, #0x8
0000000000030864	ldar	x9, [x9]
0000000000030868	cmp	x8, x9
000000000003086c	b.eq	0x308a8
0000000000030870	mov	w0, #0x1
0000000000030874	mov	w1, #0x18
0000000000030878	bl	0x55aec ; symbol stub for: _calloc
000000000003087c	ldr	x8, [x19, #0xb8]!
0000000000030880	stp	x19, x20, [x0, #0x8]
0000000000030884	str	x8, [x0]
0000000000030888	str	x0, [x8, #0x8]
000000000003088c	str	x0, [x19]
0000000000030890	ldr	x8, [x19, #0x10]
0000000000030894	add	x8, x8, #0x1
0000000000030898	str	x8, [x19, #0x10]
000000000003089c	ldp	x29, x30, [sp, #0x10]
00000000000308a0	ldp	x20, x19, [sp], #0x20
00000000000308a4	ret
00000000000308a8	ldr	x0, [x20, #0x10]
00000000000308ac	ldp	x9, x8, [x0]
00000000000308b0	str	x8, [x9, #0x8]
00000000000308b4	ldr	x8, [x0, #0x8]
00000000000308b8	str	x9, [x8]
00000000000308bc	ldr	x8, [x19, #0xb0]
00000000000308c0	sub	x8, x8, #0x1
00000000000308c4	str	x8, [x19, #0xb0]
00000000000308c8	ldp	x29, x30, [sp, #0x10]
00000000000308cc	ldp	x20, x19, [sp], #0x20
00000000000308d0	b	0x55b7c ; symbol stub for: _free
__ZN18ExceptionObjHolder5ThrowEP9ObjHeader:
00000000000308d4	stp	x20, x19, [sp, #-0x20]!
00000000000308d8	stp	x29, x30, [sp, #0x10]
00000000000308dc	add	x29, sp, #0x10
00000000000308e0	mov	x19, x0
00000000000308e4	mov	w0, #0x10
00000000000308e8	bl	0x55a38 ; symbol stub for: ___cxa_allocate_exception
00000000000308ec	mov	x1, x19
00000000000308f0	bl	__ZN12_GLOBAL__N_122ExceptionObjHolderImplC1EP9ObjHeader
00000000000308f4	adr	x1, #0x40814
00000000000308f8	nop
00000000000308fc	adr	x2, #0x90
0000000000030900	nop
0000000000030904	bl	0x55a80 ; symbol stub for: ___cxa_throw
__ZN12_GLOBAL__N_122ExceptionObjHolderImplC1EP9ObjHeader:
0000000000030908	stp	x22, x21, [sp, #-0x30]!
000000000003090c	stp	x20, x19, [sp, #0x10]
0000000000030910	stp	x29, x30, [sp, #0x20]
0000000000030914	add	x29, sp, #0x20
0000000000030918	mov	x19, x1
000000000003091c	mov	x20, x0
0000000000030920	adr	x8, #0x40810
0000000000030924	nop
0000000000030928	str	x8, [x0]
000000000003092c	adrp	x0, 74 ; 0x7a000
0000000000030930	add	x0, x0, #0x4e0
0000000000030934	ldr	x8, [x0]
0000000000030938	blr	x8
000000000003093c	ldr	x21, [x0]
0000000000030940	mov	w0, #0x1
0000000000030944	mov	w1, #0x28
0000000000030948	bl	0x55aec ; symbol stub for: _calloc
000000000003094c	ldr	x8, [x21, #0xa8]!
0000000000030950	sub	x9, x21, #0x8
0000000000030954	stp	x8, x21, [x0]
0000000000030958	str	x0, [x8, #0x8]
000000000003095c	str	x0, [x21]
0000000000030960	ldr	x8, [x21, #0x10]
0000000000030964	add	x8, x8, #0x1
0000000000030968	str	x8, [x21, #0x10]
000000000003096c	stp	x9, x0, [x0, #0x18]
0000000000030970	str	x19, [x0, #0x10]!
0000000000030974	str	x0, [x20, #0x8]
0000000000030978	mov	x0, x20
000000000003097c	ldp	x29, x30, [sp, #0x20]
0000000000030980	ldp	x20, x19, [sp, #0x10]
0000000000030984	ldp	x22, x21, [sp], #0x30
0000000000030988	ret
__ZN12_GLOBAL__N_122ExceptionObjHolderImplD1Ev:
000000000003098c	stp	x22, x21, [sp, #-0x30]!
0000000000030990	stp	x20, x19, [sp, #0x10]
0000000000030994	stp	x29, x30, [sp, #0x20]
0000000000030998	add	x29, sp, #0x20
000000000003099c	mov	x19, x0
00000000000309a0	adr	x8, #0x40790
00000000000309a4	nop
00000000000309a8	str	x8, [x0]
00000000000309ac	adrp	x0, 74 ; 0x7a000
00000000000309b0	add	x0, x0, #0x4e0
00000000000309b4	ldr	x8, [x0]
00000000000309b8	blr	x8
00000000000309bc	ldr	x20, [x0]
00000000000309c0	add	x8, x20, #0xa0
00000000000309c4	ldr	x21, [x19, #0x8]
00000000000309c8	add	x9, x21, #0x8
00000000000309cc	ldar	x9, [x9]
00000000000309d0	cmp	x8, x9
00000000000309d4	b.eq	0x30a18
00000000000309d8	mov	w0, #0x1
00000000000309dc	mov	w1, #0x18
00000000000309e0	bl	0x55aec ; symbol stub for: _calloc
00000000000309e4	str	x21, [x0, #0x10]
00000000000309e8	ldr	x8, [x20, #0xc0]!
00000000000309ec	stp	x8, x20, [x0]
00000000000309f0	str	x0, [x8, #0x8]
00000000000309f4	str	x0, [x20]
00000000000309f8	ldr	x8, [x20, #0x10]
00000000000309fc	add	x8, x8, #0x1
0000000000030a00	str	x8, [x20, #0x10]
0000000000030a04	mov	x0, x19
0000000000030a08	ldp	x29, x30, [sp, #0x20]
0000000000030a0c	ldp	x20, x19, [sp, #0x10]
0000000000030a10	ldp	x22, x21, [sp], #0x30
0000000000030a14	ret
0000000000030a18	ldr	x0, [x21, #0x10]
0000000000030a1c	ldp	x9, x8, [x0]
0000000000030a20	str	x8, [x9, #0x8]
0000000000030a24	ldr	x8, [x0, #0x8]
0000000000030a28	str	x9, [x8]
0000000000030a2c	ldr	x8, [x20, #0xb8]
0000000000030a30	sub	x8, x8, #0x1
0000000000030a34	str	x8, [x20, #0xb8]
0000000000030a38	bl	0x55b7c ; symbol stub for: _free
0000000000030a3c	mov	x0, x19
0000000000030a40	ldp	x29, x30, [sp, #0x20]
0000000000030a44	ldp	x20, x19, [sp, #0x10]
0000000000030a48	ldp	x22, x21, [sp], #0x30
0000000000030a4c	ret
__ZN12_GLOBAL__N_122ExceptionObjHolderImplD0Ev:
0000000000030a50	stp	x29, x30, [sp, #-0x10]!
0000000000030a54	mov	x29, sp
0000000000030a58	bl	__ZN12_GLOBAL__N_122ExceptionObjHolderImplD1Ev
0000000000030a5c	ldp	x29, x30, [sp], #0x10
0000000000030a60	b	0x55a20 ; symbol stub for: __ZdlPv
__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv:
0000000000030a64	stp	x29, x30, [sp, #-0x10]!
0000000000030a68	mov	x29, sp
0000000000030a6c	adrp	x0, 74 ; 0x7a000
0000000000030a70	add	x0, x0, #0x4e0
0000000000030a74	ldr	x8, [x0]
0000000000030a78	blr	x8
0000000000030a7c	ldr	x8, [x0]
0000000000030a80	add	x0, x8, #0x138
0000000000030a84	ldp	x29, x30, [sp], #0x10
0000000000030a88	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
__ZN6kotlin2gc22ConcurrentMarkAndSweep10ThreadData14OnSuspendForGCEv:
0000000000030a8c	sub	sp, sp, #0x80
0000000000030a90	stp	x22, x21, [sp, #0x50]
0000000000030a94	stp	x20, x19, [sp, #0x60]
0000000000030a98	stp	x29, x30, [sp, #0x70]
0000000000030a9c	add	x29, sp, #0x70
0000000000030aa0	mov	x19, x0
0000000000030aa4	adr	x0, #0x4981c
0000000000030aa8	nop
0000000000030aac	stur	x0, [x29, #-0x30]
0000000000030ab0	mov	w8, #0x1
0000000000030ab4	sturb	w8, [x29, #-0x28]
0000000000030ab8	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000030abc	adr	x22, #0x63a4e
0000000000030ac0	nop
0000000000030ac4	ldarb	w8, [x22]
0000000000030ac8	tbz	w8, #0x0, 0x30bb4
0000000000030acc	add	x8, x19, #0x18
0000000000030ad0	ldarb	w9, [x8]
0000000000030ad4	and	w21, w9, #0x1
0000000000030ad8	mov	w9, #0x1
0000000000030adc	stlrb	w9, [x8]
0000000000030ae0	ldr	x20, [x19, #0x8]
0000000000030ae4	add	x0, x20, #0x8
0000000000030ae8	bl	__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv
0000000000030aec	add	x0, x20, #0x98
0000000000030af0	bl	__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv
0000000000030af4	add	x0, x20, #0xd0
0000000000030af8	bl	__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv
0000000000030afc	ldr	x8, [x20, #0x110]
0000000000030b00	add	x0, x8, #0x70
0000000000030b04	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv
0000000000030b08	ldarb	w8, [x22]
0000000000030b0c	tbz	w8, #0x0, 0x30b2c
0000000000030b10	adr	x20, #0x49740
0000000000030b14	nop
0000000000030b18	sub	x1, x29, #0x30
0000000000030b1c	mov	x0, x20
0000000000030b20	bl	0x55954 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
0000000000030b24	ldarb	w8, [x22]
0000000000030b28	tbnz	w8, #0x0, 0x30b18
0000000000030b2c	ldurb	w8, [x29, #-0x28]
0000000000030b30	cbz	w8, 0x30bd8
0000000000030b34	ldur	x0, [x29, #-0x30]
0000000000030b38	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000030b3c	sturb	wzr, [x29, #-0x28]
0000000000030b40	stp	xzr, xzr, [sp, #0x30]
0000000000030b44	ldr	x8, [sp, #0x30]
0000000000030b48	and	x8, x8, #0x1
0000000000030b4c	str	x8, [sp, #0x30]
0000000000030b50	ldr	x1, [x19, #0x8]
0000000000030b54	add	x0, sp, #0x30
0000000000030b58	bl	__ZN6kotlin2gc23collectRootSetForThreadIN12_GLOBAL__N_110MarkTraitsEEEvRNT_9MarkQueueERNS_2mm10ThreadDataE
0000000000030b5c	add	x0, sp, #0x10
0000000000030b60	add	x1, sp, #0x30
0000000000030b64	bl	__ZN6kotlin2gc4MarkIN12_GLOBAL__N_110MarkTraitsEEENS0_9MarkStatsERNT_9MarkQueueE
0000000000030b68	ldr	x20, [x19]
0000000000030b6c	ldr	q0, [sp, #0x10]
0000000000030b70	str	q0, [sp]
0000000000030b74	ldr	x22, [sp, #0x20]
0000000000030b78	adr	x0, #0x49748
0000000000030b7c	nop
0000000000030b80	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000030b84	ldr	q0, [x20, #0x180]
0000000000030b88	ldr	q1, [sp]
0000000000030b8c	add.2d	v0, v0, v1
0000000000030b90	str	q0, [x20, #0x180]
0000000000030b94	ldr	x8, [x20, #0x190]
0000000000030b98	add	x8, x8, x22
0000000000030b9c	str	x8, [x20, #0x190]
0000000000030ba0	adr	x0, #0x49720
0000000000030ba4	nop
0000000000030ba8	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000030bac	add	x8, x19, #0x18
0000000000030bb0	stlrb	w21, [x8]
0000000000030bb4	ldurb	w8, [x29, #-0x28]
0000000000030bb8	cbz	w8, 0x30bc4
0000000000030bbc	ldur	x0, [x29, #-0x30]
0000000000030bc0	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000030bc4	ldp	x29, x30, [sp, #0x70]
0000000000030bc8	ldp	x20, x19, [sp, #0x60]
0000000000030bcc	ldp	x22, x21, [sp, #0x50]
0000000000030bd0	add	sp, sp, #0x80
0000000000030bd4	ret
0000000000030bd8	adr	x1, #0x2bd04 ; literal pool for: "unique_lock::unlock: not locked"
0000000000030bdc	nop
0000000000030be0	mov	w0, #0x1
0000000000030be4	bl	0x55978 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000030be8	brk	#0x1
0000000000030bec	bl	___clang_call_terminate
0000000000030bf0	mov	x20, x0
0000000000030bf4	add	x8, x19, #0x18
0000000000030bf8	stlrb	w21, [x8]
0000000000030bfc	ldurb	w8, [x29, #-0x28]
0000000000030c00	cbz	w8, 0x30c0c
0000000000030c04	ldur	x0, [x29, #-0x30]
0000000000030c08	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000030c0c	mov	x0, x20
0000000000030c10	bl	___clang_call_terminate
0000000000030c14	bl	___clang_call_terminate
__ZN6kotlin2gc22ConcurrentMarkAndSweep29CollectRootSetAndStartMarkingEv:
0000000000030c18	sub	sp, sp, #0x70
0000000000030c1c	stp	x26, x25, [sp, #0x20]
0000000000030c20	stp	x24, x23, [sp, #0x30]
0000000000030c24	stp	x22, x21, [sp, #0x40]
0000000000030c28	stp	x20, x19, [sp, #0x50]
0000000000030c2c	stp	x29, x30, [sp, #0x60]
0000000000030c30	add	x29, sp, #0x60
0000000000030c34	mov	x19, x0
0000000000030c38	adr	x0, #0x49688
0000000000030c3c	nop
0000000000030c40	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000030c44	adr	x8, #0x638c6
0000000000030c48	nop
0000000000030c4c	stlrb	wzr, [x8]
0000000000030c50	ldr	x9, [x19, #0x170]
0000000000030c54	and	x9, x9, #0x1
0000000000030c58	str	x9, [x19, #0x170]
0000000000030c5c	str	xzr, [x19, #0x178]
0000000000030c60	add	x0, x8, #0x2f6
0000000000030c64	bl	0x55918 ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
0000000000030c68	nop
0000000000030c6c	ldr	x22, #0x63b84
0000000000030c70	cbz	x22, 0x30ccc
0000000000030c74	add	x20, x19, #0x170
0000000000030c78	b	0x30c84
0000000000030c7c	ldr	x22, [x22, #0x150]
0000000000030c80	cbz	x22, 0x30ccc
0000000000030c84	ldr	x8, [x22, #0x118]
0000000000030c88	add	x8, x8, #0x60
0000000000030c8c	ldarb	w8, [x8]
0000000000030c90	tbnz	w8, #0x0, 0x30c7c
0000000000030c94	add	x21, x22, #0x8
0000000000030c98	add	x0, x22, #0x10
0000000000030c9c	bl	__ZN6kotlin16MultiSourceQueueIPP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS3_EEE8Producer7PublishEv
0000000000030ca0	add	x0, x22, #0xa0
0000000000030ca4	bl	__ZN6kotlin16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS2_EEE8Producer7PublishEv
0000000000030ca8	add	x0, x22, #0xd8
0000000000030cac	bl	__ZN6kotlin16MultiSourceQueueINS_2mm15ExtraObjectDataENS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_19ObjectPoolAllocatorIS2_EEE8Producer7PublishEv
0000000000030cb0	ldr	x8, [x22, #0x118]
0000000000030cb4	add	x0, x8, #0x70
0000000000030cb8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv
0000000000030cbc	mov	x0, x20
0000000000030cc0	mov	x1, x21
0000000000030cc4	bl	__ZN6kotlin2gc23collectRootSetForThreadIN12_GLOBAL__N_110MarkTraitsEEEvRNT_9MarkQueueERNS_2mm10ThreadDataE
0000000000030cc8	b	0x30c7c
0000000000030ccc	adr	x0, #0x63b34
0000000000030cd0	nop
0000000000030cd4	bl	0x55924 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
0000000000030cd8	adr	x21, #0x63be0
0000000000030cdc	nop
0000000000030ce0	mov	w20, #0x1
0000000000030ce4	ldaxrb	w8, [x21]
0000000000030ce8	stxrb	w9, w20, [x21]
0000000000030cec	cbnz	w9, 0x30ce4
0000000000030cf0	tbz	w8, #0x0, 0x30cfc
0000000000030cf4	bl	0x55e28 ; symbol stub for: _sched_yield
0000000000030cf8	b	0x30ce4
0000000000030cfc	add	x22, sp, #0x8
0000000000030d00	stp	x22, x22, [sp, #0x8]
0000000000030d04	str	xzr, [sp, #0x18]
0000000000030d08	adr	x20, #0x63b98
0000000000030d0c	nop
0000000000030d10	ldr	x8, [x20, #0x8]
0000000000030d14	adrp	x23, 100 ; 0x94000
0000000000030d18	cmp	x8, x20
0000000000030d1c	b.eq	0x30db8
0000000000030d20	adrp	x24, 100 ; 0x94000
0000000000030d24	b	0x30d58
0000000000030d28	ldr	x0, [x9, #0x10]
0000000000030d2c	ldp	x9, x8, [x0]
0000000000030d30	str	x8, [x9, #0x8]
0000000000030d34	ldr	x8, [x0, #0x8]
0000000000030d38	str	x9, [x8]
0000000000030d3c	ldr	x8, [x24, #0x898]
0000000000030d40	sub	x8, x8, #0x1
0000000000030d44	str	x8, [x24, #0x898]
0000000000030d48	bl	0x55b7c ; symbol stub for: _free
0000000000030d4c	mov	x8, x25
0000000000030d50	cmp	x25, x20
0000000000030d54	b.eq	0x30db8
0000000000030d58	ldp	x25, x9, [x8, #0x8]
0000000000030d5c	add	x10, x9, #0x8
0000000000030d60	ldar	x10, [x10]
0000000000030d64	cbz	x10, 0x30d28
0000000000030d68	cmp	x22, x8
0000000000030d6c	b.eq	0x30d4c
0000000000030d70	ldr	x9, [x8, #0x8]
0000000000030d74	cmp	x9, x22
0000000000030d78	b.eq	0x30d4c
0000000000030d7c	ldr	x10, [x8]
0000000000030d80	str	x9, [x10, #0x8]
0000000000030d84	ldr	x9, [x8, #0x8]
0000000000030d88	str	x10, [x9]
0000000000030d8c	ldr	x9, [sp, #0x8]
0000000000030d90	str	x8, [x9, #0x8]
0000000000030d94	stp	x9, x22, [x8]
0000000000030d98	ldr	x9, [x23, #0x8b0]
0000000000030d9c	sub	x9, x9, #0x1
0000000000030da0	str	x9, [x23, #0x8b0]
0000000000030da4	ldr	x9, [sp, #0x18]
0000000000030da8	add	x9, x9, #0x1
0000000000030dac	str	x8, [sp, #0x8]
0000000000030db0	str	x9, [sp, #0x18]
0000000000030db4	b	0x30d4c
0000000000030db8	ldr	x8, [x23, #0x8b0]
0000000000030dbc	cbz	x8, 0x30df8
0000000000030dc0	ldp	x8, x0, [x20]
0000000000030dc4	ldr	x9, [x8, #0x8]
0000000000030dc8	ldr	x10, [x0]
0000000000030dcc	str	x9, [x10, #0x8]
0000000000030dd0	ldr	x8, [x8, #0x8]
0000000000030dd4	str	x10, [x8]
0000000000030dd8	str	xzr, [x20, #0x10]
0000000000030ddc	cmp	x0, x20
0000000000030de0	b.eq	0x30df8
0000000000030de4	ldr	x22, [x0, #0x8]
0000000000030de8	bl	0x55b7c ; symbol stub for: _free
0000000000030dec	mov	x0, x22
0000000000030df0	cmp	x22, x20
0000000000030df4	b.ne	0x30de4
0000000000030df8	ldr	x8, [sp, #0x18]
0000000000030dfc	cbz	x8, 0x30e3c
0000000000030e00	ldp	x10, x9, [sp, #0x8]
0000000000030e04	ldr	x11, [x10, #0x8]
0000000000030e08	ldr	x12, [x9]
0000000000030e0c	str	x11, [x12, #0x8]
0000000000030e10	ldr	x11, [x10, #0x8]
0000000000030e14	str	x12, [x11]
0000000000030e18	ldr	x11, [x20]
0000000000030e1c	str	x9, [x11, #0x8]
0000000000030e20	str	x11, [x9]
0000000000030e24	str	x10, [x20]
0000000000030e28	str	x20, [x10, #0x8]
0000000000030e2c	ldr	x9, [x20, #0x10]
0000000000030e30	add	x8, x9, x8
0000000000030e34	str	x8, [x20, #0x10]
0000000000030e38	str	xzr, [sp, #0x18]
0000000000030e3c	stlrb	wzr, [x21]
0000000000030e40	adr	x20, #0x63a40
0000000000030e44	nop
0000000000030e48	mov	w22, #0x1
0000000000030e4c	ldaxrb	w8, [x20]
0000000000030e50	stxrb	w9, w22, [x20]
0000000000030e54	cbnz	w9, 0x30e4c
0000000000030e58	tbz	w8, #0x0, 0x30e64
0000000000030e5c	bl	0x55e28 ; symbol stub for: _sched_yield
0000000000030e60	b	0x30e4c
0000000000030e64	mov	w22, #0x1
0000000000030e68	ldaxrb	w8, [x21]
0000000000030e6c	stxrb	w9, w22, [x21]
0000000000030e70	cbnz	w9, 0x30e68
0000000000030e74	tbz	w8, #0x0, 0x30e80
0000000000030e78	bl	0x55e28 ; symbol stub for: _sched_yield
0000000000030e7c	b	0x30e68
0000000000030e80	mov	w11, #0x0
0000000000030e84	adr	x8, #0x639d4
0000000000030e88	nop
0000000000030e8c	ldr	x14, [x8]
0000000000030e90	ldr	x12, [x8, #0x38]
0000000000030e94	adr	x8, #0x639f4
0000000000030e98	nop
0000000000030e9c	adr	x9, #0x639b4
0000000000030ea0	nop
0000000000030ea4	mov	x13, x14
0000000000030ea8	mov	x10, x11
0000000000030eac	cmp	w10, #0x2
0000000000030eb0	b.eq	0x3118c
0000000000030eb4	cmp	w10, #0x1
0000000000030eb8	b.eq	0x30ec4
0000000000030ebc	cbnz	w10, 0x30eac
0000000000030ec0	b	0x30ed4
0000000000030ec4	mov	w10, #0x2
0000000000030ec8	cmp	x13, x8
0000000000030ecc	b.eq	0x30eac
0000000000030ed0	b	0x30ee8
0000000000030ed4	mov	w11, #0x1
0000000000030ed8	mov	x14, x12
0000000000030edc	cmp	x13, x9
0000000000030ee0	b.eq	0x30ea4
0000000000030ee4	b	0x30eec
0000000000030ee8	mov	x10, x11
0000000000030eec	adrp	x11, 100 ; 0x94000
0000000000030ef0	adr	x12, #0x2feb0
0000000000030ef4	nop
0000000000030ef8	cbz	w10, 0x30f0c
0000000000030efc	cmp	w10, #0x1
0000000000030f00	b.ne	0x311cc
0000000000030f04	add	x14, x13, #0x10
0000000000030f08	b	0x30f10
0000000000030f0c	ldr	x14, [x13, #0x10]
0000000000030f10	ldr	x14, [x14]
0000000000030f14	cmp	x14, #0x2
0000000000030f18	b.hs	0x30f70
0000000000030f1c	cbz	w10, 0x30fa4
0000000000030f20	cmp	w10, #0x1
0000000000030f24	b.ne	0x3118c
0000000000030f28	ldr	x14, [x13, #0x8]
0000000000030f2c	ldr	x15, [x11, #0x890]
0000000000030f30	mov	w10, #0x1
0000000000030f34	cmp	w10, #0x2
0000000000030f38	b.eq	0x3118c
0000000000030f3c	cmp	w10, #0x1
0000000000030f40	b.eq	0x30f4c
0000000000030f44	cbnz	w10, 0x30f34
0000000000030f48	b	0x30f5c
0000000000030f4c	mov	w10, #0x2
0000000000030f50	cmp	x14, x8
0000000000030f54	b.eq	0x30f34
0000000000030f58	b	0x31180
0000000000030f5c	mov	x13, x14
0000000000030f60	cmp	x14, x9
0000000000030f64	mov	x14, x15
0000000000030f68	b.eq	0x30f30
0000000000030f6c	b	0x30ef8
0000000000030f70	ldr	x15, [x14]
0000000000030f74	tst	x15, #0x3
0000000000030f78	b.eq	0x31080
0000000000030f7c	ldr	x15, [x14]
0000000000030f80	and	x15, x15, #0xfffffffffffffffc
0000000000030f84	ldr	x15, [x15]
0000000000030f88	cmp	x15, x12
0000000000030f8c	b.eq	0x310d4
0000000000030f90	ldr	w16, [x15, #0x28]
0000000000030f94	cmp	w16, #0x1
0000000000030f98	b.lt	0x30f1c
0000000000030f9c	mov	x16, #0x0
0000000000030fa0	b	0x31008
0000000000030fa4	mov	w15, #0x0
0000000000030fa8	ldr	x14, [x13, #0x8]
0000000000030fac	ldr	x16, [x11, #0x890]
0000000000030fb0	mov	x10, x15
0000000000030fb4	cmp	w10, #0x2
0000000000030fb8	b.eq	0x3118c
0000000000030fbc	cmp	w10, #0x1
0000000000030fc0	b.eq	0x30fcc
0000000000030fc4	cbnz	w10, 0x30fb4
0000000000030fc8	b	0x30fdc
0000000000030fcc	mov	w10, #0x2
0000000000030fd0	cmp	x14, x8
0000000000030fd4	b.eq	0x30fb4
0000000000030fd8	b	0x31174
0000000000030fdc	mov	w15, #0x1
0000000000030fe0	mov	x13, x14
0000000000030fe4	cmp	x14, x9
0000000000030fe8	mov	x14, x16
0000000000030fec	b.eq	0x30fb0
0000000000030ff0	b	0x30ef8
0000000000030ff4	clrex
0000000000030ff8	add	x16, x16, #0x1
0000000000030ffc	ldrsw	x17, [x15, #0x28]
0000000000031000	cmp	x16, x17
0000000000031004	b.ge	0x30f1c
0000000000031008	ldr	x17, [x15, #0x20]
000000000003100c	ldrsw	x17, [x17, x16, lsl #2]
0000000000031010	ldr	x17, [x17, x14]
0000000000031014	cbz	x17, 0x30ff8
0000000000031018	ldr	x0, [x17]
000000000003101c	and	x0, x0, #0x3
0000000000031020	cmp	x17, #0x2
0000000000031024	ccmp	x0, #0x0, #0x0, hs
0000000000031028	b.ne	0x30ff8
000000000003102c	ldur	x0, [x17, #-0x8]
0000000000031030	tbnz	w0, #0x0, 0x30ff8
0000000000031034	sub	x17, x17, #0x8
0000000000031038	orr	x1, x0, #0x1
000000000003103c	ldxr	x2, [x17]
0000000000031040	cmp	x2, x0
0000000000031044	b.ne	0x30ff4
0000000000031048	stxr	w2, x1, [x17]
000000000003104c	cbnz	w2, 0x3103c
0000000000031050	ldr	x0, [x19, #0x170]
0000000000031054	ldr	x1, [x19, #0x170]
0000000000031058	and	x1, x1, #0x1
000000000003105c	orr	x1, x1, x17
0000000000031060	str	x1, [x19, #0x170]
0000000000031064	ldr	x1, [x17]
0000000000031068	bfxil	x0, x1, #0, #1
000000000003106c	str	x0, [x17]
0000000000031070	ldr	x17, [x19, #0x178]
0000000000031074	add	x17, x17, #0x1
0000000000031078	str	x17, [x19, #0x178]
000000000003107c	b	0x30ff8
0000000000031080	ldur	x15, [x14, #-0x8]
0000000000031084	tbnz	w15, #0x0, 0x30f1c
0000000000031088	sub	x14, x14, #0x8
000000000003108c	orr	x16, x15, #0x1
0000000000031090	ldxr	x17, [x14]
0000000000031094	cmp	x17, x15
0000000000031098	b.ne	0x3116c
000000000003109c	stxr	w17, x16, [x14]
00000000000310a0	cbnz	w17, 0x31090
00000000000310a4	ldr	x15, [x19, #0x170]
00000000000310a8	ldr	x16, [x19, #0x170]
00000000000310ac	and	x16, x16, #0x1
00000000000310b0	orr	x16, x16, x14
00000000000310b4	str	x16, [x19, #0x170]
00000000000310b8	ldr	x16, [x14]
00000000000310bc	bfxil	x15, x16, #0, #1
00000000000310c0	str	x15, [x14]
00000000000310c4	ldr	x14, [x19, #0x178]
00000000000310c8	add	x14, x14, #0x1
00000000000310cc	str	x14, [x19, #0x178]
00000000000310d0	b	0x30f1c
00000000000310d4	ldr	w15, [x14, #0x8]
00000000000310d8	cbz	w15, 0x30f1c
00000000000310dc	mov	w15, #0x0
00000000000310e0	add	x16, x14, #0x10
00000000000310e4	b	0x310fc
00000000000310e8	clrex
00000000000310ec	add	w15, w15, #0x1
00000000000310f0	ldr	w17, [x14, #0x8]
00000000000310f4	cmp	w15, w17
00000000000310f8	b.hs	0x30f1c
00000000000310fc	ldr	x17, [x16, w15, sxtw #3]
0000000000031100	cbz	x17, 0x310ec
0000000000031104	ldr	x0, [x17]
0000000000031108	and	x0, x0, #0x3
000000000003110c	cmp	x17, #0x2
0000000000031110	ccmp	x0, #0x0, #0x0, hs
0000000000031114	b.ne	0x310ec
0000000000031118	ldur	x0, [x17, #-0x8]
000000000003111c	tbnz	w0, #0x0, 0x310ec
0000000000031120	sub	x17, x17, #0x8
0000000000031124	orr	x1, x0, #0x1
0000000000031128	ldxr	x2, [x17]
000000000003112c	cmp	x2, x0
0000000000031130	b.ne	0x310e8
0000000000031134	stxr	w2, x1, [x17]
0000000000031138	cbnz	w2, 0x31128
000000000003113c	ldr	x0, [x19, #0x170]
0000000000031140	ldr	x1, [x19, #0x170]
0000000000031144	and	x1, x1, #0x1
0000000000031148	orr	x1, x1, x17
000000000003114c	str	x1, [x19, #0x170]
0000000000031150	ldr	x1, [x17]
0000000000031154	bfxil	x0, x1, #0, #1
0000000000031158	str	x0, [x17]
000000000003115c	ldr	x17, [x19, #0x178]
0000000000031160	add	x17, x17, #0x1
0000000000031164	str	x17, [x19, #0x178]
0000000000031168	b	0x310ec
000000000003116c	clrex
0000000000031170	b	0x30f1c
0000000000031174	mov	x10, x15
0000000000031178	mov	x13, x14
000000000003117c	b	0x30ef8
0000000000031180	mov	w10, #0x1
0000000000031184	mov	x13, x14
0000000000031188	b	0x30ef8
000000000003118c	add	x8, x20, #0x38
0000000000031190	stlrb	wzr, [x8]
0000000000031194	stlrb	wzr, [x20]
0000000000031198	adr	x19, #0x490b8
000000000003119c	nop
00000000000311a0	mov	x0, x19
00000000000311a4	bl	0x5593c ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
00000000000311a8	add	x0, x19, #0x70
00000000000311ac	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000311b0	ldp	x29, x30, [sp, #0x60]
00000000000311b4	ldp	x20, x19, [sp, #0x50]
00000000000311b8	ldp	x22, x21, [sp, #0x40]
00000000000311bc	ldp	x24, x23, [sp, #0x30]
00000000000311c0	ldp	x26, x25, [sp, #0x20]
00000000000311c4	add	sp, sp, #0x70
00000000000311c8	ret
00000000000311cc	adr	x2, #0x2b68a ; literal pool for: "Cannot dereference"
00000000000311d0	nop
00000000000311d4	mov	w0, #0x0
00000000000311d8	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
00000000000311dc	brk	#0x1
00000000000311e0	bl	___clang_call_terminate
00000000000311e4	bl	___clang_call_terminate
00000000000311e8	bl	___clang_call_terminate
00000000000311ec	bl	___clang_call_terminate
00000000000311f0	bl	___clang_call_terminate
00000000000311f4	bl	___clang_call_terminate
__ZN6kotlin2gc23collectRootSetForThreadIN12_GLOBAL__N_110MarkTraitsEEEvRNT_9MarkQueueERNS_2mm10ThreadDataE:
00000000000311f8	sub	sp, sp, #0x20
00000000000311fc	stp	x29, x30, [sp, #0x10]
0000000000031200	add	x29, sp, #0x10
0000000000031204	ldr	x8, [x1, #0x110]
0000000000031208	str	xzr, [x8, #0x28]
000000000003120c	str	xzr, [x8, #0x38]
0000000000031210	ldr	x9, [x8]
0000000000031214	add	x9, x9, #0x8
0000000000031218	ldar	x9, [x9]
000000000003121c	str	x9, [x8, #0x30]
0000000000031220	ldr	x9, [x8]
0000000000031224	ldar	w9, [x9]
0000000000031228	sxtw	x9, w9
000000000003122c	str	x9, [x8, #0x40]
0000000000031230	ldr	x9, [x1, #0x108]
0000000000031234	cbz	x9, 0x31294
0000000000031238	ldpsw	x8, x10, [x9, #0x10]
000000000003123c	lsl	x11, x8, #3
0000000000031240	add	x8, x9, x11
0000000000031244	add	x8, x8, #0x18
0000000000031248	add	x10, x8, x10, lsl #3
000000000003124c	sub	x10, x10, x11
0000000000031250	sub	x10, x10, #0x18
0000000000031254	stp	x8, x10, [sp]
0000000000031258	cbz	x9, 0x3129c
000000000003125c	cmp	x8, x10
0000000000031260	b.lo	0x3129c
0000000000031264	ldr	x9, [x9, #0x8]
0000000000031268	cbz	x9, 0x31294
000000000003126c	ldpsw	x8, x10, [x9, #0x10]
0000000000031270	lsl	x11, x8, #3
0000000000031274	add	x12, x9, x11
0000000000031278	add	x8, x12, #0x18
000000000003127c	add	x10, x12, x10, lsl #3
0000000000031280	sub	x10, x10, x11
0000000000031284	stp	x8, x10, [sp]
0000000000031288	cmp	x8, x10
000000000003128c	b.hs	0x31264
0000000000031290	b	0x3129c
0000000000031294	mov	x8, #0x0
0000000000031298	stp	xzr, xzr, [sp]
000000000003129c	mov	w14, #0x0
00000000000312a0	ldp	x13, x12, [x1, #0x40]
00000000000312a4	mov	x10, x9
00000000000312a8	mov	x11, x14
00000000000312ac	cmp	w11, #0x2
00000000000312b0	b.eq	0x315c4
00000000000312b4	cmp	w11, #0x1
00000000000312b8	b.eq	0x312c4
00000000000312bc	cbnz	w11, 0x312ac
00000000000312c0	b	0x312d4
00000000000312c4	mov	w14, #0x2
00000000000312c8	cmp	x12, x10
00000000000312cc	b.eq	0x312a8
00000000000312d0	b	0x312e4
00000000000312d4	cbnz	x10, 0x312e4
00000000000312d8	mov	w14, #0x1
00000000000312dc	mov	x9, x13
00000000000312e0	cbz	x8, 0x312a4
00000000000312e4	adr	x9, #0x2fabc
00000000000312e8	nop
00000000000312ec	mov	x12, x8
00000000000312f0	cbz	w11, 0x31300
00000000000312f4	cmp	w11, #0x1
00000000000312f8	b.ne	0x315d0
00000000000312fc	mov	x12, x10
0000000000031300	ldr	x12, [x12]
0000000000031304	cmp	x12, #0x2
0000000000031308	b.hs	0x3135c
000000000003130c	cmp	w11, #0x1
0000000000031310	b.ne	0x31508
0000000000031314	add	x12, x10, #0x8
0000000000031318	ldp	x14, x13, [x1, #0x40]
000000000003131c	mov	w11, #0x1
0000000000031320	cmp	w11, #0x2
0000000000031324	b.eq	0x315c4
0000000000031328	cmp	w11, #0x1
000000000003132c	b.eq	0x31338
0000000000031330	cbnz	w11, 0x31320
0000000000031334	b	0x31348
0000000000031338	mov	w11, #0x2
000000000003133c	cmp	x12, x13
0000000000031340	b.eq	0x31320
0000000000031344	b	0x31560
0000000000031348	mov	x10, x12
000000000003134c	cbnz	x12, 0x312ec
0000000000031350	mov	x12, x14
0000000000031354	cbz	x8, 0x3131c
0000000000031358	b	0x312ec
000000000003135c	ldr	x13, [x12]
0000000000031360	tst	x13, #0x3
0000000000031364	b.eq	0x3141c
0000000000031368	ldr	x13, [x12]
000000000003136c	and	x13, x13, #0xfffffffffffffffc
0000000000031370	ldr	x13, [x13]
0000000000031374	cmp	x13, x9
0000000000031378	b.eq	0x31470
000000000003137c	ldr	w14, [x13, #0x28]
0000000000031380	cmp	w14, #0x1
0000000000031384	b.lt	0x3130c
0000000000031388	mov	x14, #0x0
000000000003138c	b	0x313a4
0000000000031390	clrex
0000000000031394	add	x14, x14, #0x1
0000000000031398	ldrsw	x15, [x13, #0x28]
000000000003139c	cmp	x14, x15
00000000000313a0	b.ge	0x3130c
00000000000313a4	ldr	x15, [x13, #0x20]
00000000000313a8	ldrsw	x15, [x15, x14, lsl #2]
00000000000313ac	ldr	x15, [x15, x12]
00000000000313b0	cbz	x15, 0x31394
00000000000313b4	ldr	x16, [x15]
00000000000313b8	and	x16, x16, #0x3
00000000000313bc	cmp	x15, #0x2
00000000000313c0	ccmp	x16, #0x0, #0x0, hs
00000000000313c4	b.ne	0x31394
00000000000313c8	ldur	x16, [x15, #-0x8]
00000000000313cc	tbnz	w16, #0x0, 0x31394
00000000000313d0	sub	x15, x15, #0x8
00000000000313d4	orr	x17, x16, #0x1
00000000000313d8	ldxr	x2, [x15]
00000000000313dc	cmp	x2, x16
00000000000313e0	b.ne	0x31390
00000000000313e4	stxr	w2, x17, [x15]
00000000000313e8	cbnz	w2, 0x313d8
00000000000313ec	ldr	x16, [x0]
00000000000313f0	ldr	x17, [x0]
00000000000313f4	and	x17, x17, #0x1
00000000000313f8	orr	x17, x17, x15
00000000000313fc	str	x17, [x0]
0000000000031400	ldr	x17, [x15]
0000000000031404	bfxil	x16, x17, #0, #1
0000000000031408	str	x16, [x15]
000000000003140c	ldr	x15, [x0, #0x8]
0000000000031410	add	x15, x15, #0x1
0000000000031414	str	x15, [x0, #0x8]
0000000000031418	b	0x31394
000000000003141c	ldur	x13, [x12, #-0x8]
0000000000031420	tbnz	w13, #0x0, 0x3130c
0000000000031424	sub	x12, x12, #0x8
0000000000031428	orr	x14, x13, #0x1
000000000003142c	ldxr	x15, [x12]
0000000000031430	cmp	x15, x13
0000000000031434	b.ne	0x31558
0000000000031438	stxr	w15, x14, [x12]
000000000003143c	cbnz	w15, 0x3142c
0000000000031440	ldr	x13, [x0]
0000000000031444	ldr	x14, [x0]
0000000000031448	and	x14, x14, #0x1
000000000003144c	orr	x14, x14, x12
0000000000031450	str	x14, [x0]
0000000000031454	ldr	x14, [x12]
0000000000031458	bfxil	x13, x14, #0, #1
000000000003145c	str	x13, [x12]
0000000000031460	ldr	x12, [x0, #0x8]
0000000000031464	add	x12, x12, #0x1
0000000000031468	str	x12, [x0, #0x8]
000000000003146c	b	0x3130c
0000000000031470	ldr	w13, [x12, #0x8]
0000000000031474	cbz	w13, 0x3130c
0000000000031478	mov	w13, #0x0
000000000003147c	add	x14, x12, #0x10
0000000000031480	b	0x31498
0000000000031484	clrex
0000000000031488	add	w13, w13, #0x1
000000000003148c	ldr	w15, [x12, #0x8]
0000000000031490	cmp	w13, w15
0000000000031494	b.hs	0x3130c
0000000000031498	ldr	x15, [x14, w13, sxtw #3]
000000000003149c	cbz	x15, 0x31488
00000000000314a0	ldr	x16, [x15]
00000000000314a4	and	x16, x16, #0x3
00000000000314a8	cmp	x15, #0x2
00000000000314ac	ccmp	x16, #0x0, #0x0, hs
00000000000314b0	b.ne	0x31488
00000000000314b4	ldur	x16, [x15, #-0x8]
00000000000314b8	tbnz	w16, #0x0, 0x31488
00000000000314bc	sub	x15, x15, #0x8
00000000000314c0	orr	x17, x16, #0x1
00000000000314c4	ldxr	x2, [x15]
00000000000314c8	cmp	x2, x16
00000000000314cc	b.ne	0x31484
00000000000314d0	stxr	w2, x17, [x15]
00000000000314d4	cbnz	w2, 0x314c4
00000000000314d8	ldr	x16, [x0]
00000000000314dc	ldr	x17, [x0]
00000000000314e0	and	x17, x17, #0x1
00000000000314e4	orr	x17, x17, x15
00000000000314e8	str	x17, [x0]
00000000000314ec	ldr	x17, [x15]
00000000000314f0	bfxil	x16, x17, #0, #1
00000000000314f4	str	x16, [x15]
00000000000314f8	ldr	x15, [x0, #0x8]
00000000000314fc	add	x15, x15, #0x1
0000000000031500	str	x15, [x0, #0x8]
0000000000031504	b	0x31488
0000000000031508	cmp	w11, #0x2
000000000003150c	b.eq	0x315c4
0000000000031510	add	x8, x8, #0x8
0000000000031514	str	x8, [sp]
0000000000031518	cbz	x10, 0x31574
000000000003151c	ldr	x11, [sp, #0x8]
0000000000031520	cmp	x8, x11
0000000000031524	b.lo	0x31574
0000000000031528	ldr	x10, [x10, #0x8]
000000000003152c	cbz	x10, 0x3156c
0000000000031530	ldpsw	x8, x11, [x10, #0x10]
0000000000031534	lsl	x12, x8, #3
0000000000031538	add	x13, x10, x12
000000000003153c	add	x8, x13, #0x18
0000000000031540	add	x11, x13, x11, lsl #3
0000000000031544	sub	x11, x11, x12
0000000000031548	stp	x8, x11, [sp]
000000000003154c	cmp	x8, x11
0000000000031550	b.hs	0x31528
0000000000031554	b	0x31574
0000000000031558	clrex
000000000003155c	b	0x3130c
0000000000031560	mov	w11, #0x1
0000000000031564	mov	x10, x12
0000000000031568	b	0x312ec
000000000003156c	mov	x8, #0x0
0000000000031570	stp	xzr, xzr, [sp]
0000000000031574	mov	w14, #0x0
0000000000031578	ldp	x13, x12, [x1, #0x40]
000000000003157c	mov	x15, x10
0000000000031580	mov	x10, x15
0000000000031584	mov	x11, x14
0000000000031588	cmp	w11, #0x2
000000000003158c	b.eq	0x315c4
0000000000031590	cmp	w11, #0x1
0000000000031594	b.eq	0x315a0
0000000000031598	cbnz	w11, 0x31588
000000000003159c	b	0x315b0
00000000000315a0	mov	w14, #0x2
00000000000315a4	cmp	x12, x10
00000000000315a8	b.eq	0x31584
00000000000315ac	b	0x312ec
00000000000315b0	cbnz	x10, 0x312ec
00000000000315b4	mov	w14, #0x1
00000000000315b8	mov	x15, x13
00000000000315bc	cbz	x8, 0x31580
00000000000315c0	b	0x312ec
00000000000315c4	ldp	x29, x30, [sp, #0x10]
00000000000315c8	add	sp, sp, #0x20
00000000000315cc	ret
00000000000315d0	adr	x2, #0x2b286 ; literal pool for: "Cannot dereference"
00000000000315d4	nop
00000000000315d8	mov	w0, #0x0
00000000000315dc	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
00000000000315e0	brk	#0x1
00000000000315e4	bl	___clang_call_terminate
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv:
00000000000315e8	stp	x22, x21, [sp, #-0x30]!
00000000000315ec	stp	x20, x19, [sp, #0x10]
00000000000315f0	stp	x29, x30, [sp, #0x20]
00000000000315f4	add	x29, sp, #0x20
00000000000315f8	ldr	x8, [x0, #0x18]
00000000000315fc	cbz	x8, 0x31674
0000000000031600	mov	x19, x0
0000000000031604	ldr	x8, [x0]
0000000000031608	add	x20, x8, #0x18
000000000003160c	mov	w21, #0x1
0000000000031610	ldaxrb	w8, [x20]
0000000000031614	stxrb	w9, w21, [x20]
0000000000031618	cbnz	w9, 0x31610
000000000003161c	tbz	w8, #0x0, 0x31628
0000000000031620	bl	0x55e28 ; symbol stub for: _sched_yield
0000000000031624	b	0x31610
0000000000031628	ldr	x8, [x19]
000000000003162c	ldr	x9, [x8]
0000000000031630	cbz	x9, 0x31638
0000000000031634	ldr	x8, [x8, #0x8]
0000000000031638	ldr	x9, [x19, #0x18]
000000000003163c	str	xzr, [x19, #0x18]
0000000000031640	ldr	x0, [x8]
0000000000031644	str	x9, [x8]
0000000000031648	cbz	x0, 0x31654
000000000003164c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000031650	bl	_mi_free
0000000000031654	ldr	x8, [x19]
0000000000031658	ldp	x9, x10, [x19, #0x20]
000000000003165c	str	x9, [x8, #0x8]
0000000000031660	stp	xzr, xzr, [x19, #0x20]
0000000000031664	ldr	x9, [x8, #0x10]
0000000000031668	add	x9, x9, x10
000000000003166c	str	x9, [x8, #0x10]
0000000000031670	stlrb	wzr, [x20]
0000000000031674	ldp	x29, x30, [sp, #0x20]
0000000000031678	ldp	x20, x19, [sp, #0x10]
000000000003167c	ldp	x22, x21, [sp], #0x30
0000000000031680	ret
0000000000031684	bl	___clang_call_terminate
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev:
0000000000031688	stp	x20, x19, [sp, #-0x20]!
000000000003168c	stp	x29, x30, [sp, #0x10]
0000000000031690	add	x29, sp, #0x10
0000000000031694	mov	x19, x0
0000000000031698	ldr	x0, [x0]
000000000003169c	str	xzr, [x19]
00000000000316a0	cbz	x0, 0x316ac
00000000000316a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
00000000000316a8	bl	_mi_free
00000000000316ac	mov	x0, x19
00000000000316b0	ldp	x29, x30, [sp, #0x10]
00000000000316b4	ldp	x20, x19, [sp], #0x20
00000000000316b8	ret
__ZN6kotlin2gc4MarkIN12_GLOBAL__N_110MarkTraitsEEENS0_9MarkStatsERNT_9MarkQueueE:
00000000000316bc	stp	x20, x19, [sp, #-0x20]!
00000000000316c0	stp	x29, x30, [sp, #0x10]
00000000000316c4	add	x29, sp, #0x10
00000000000316c8	mov	x19, x1
00000000000316cc	mov	x20, x0
00000000000316d0	stp	xzr, xzr, [x0]
00000000000316d4	ldr	x8, [x1, #0x8]
00000000000316d8	str	x8, [x0, #0x10]
00000000000316dc	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
00000000000316e0	ldr	x8, [x19, #0x8]
00000000000316e4	cbz	x8, 0x31960
00000000000316e8	adr	x8, #0x2f6b8
00000000000316ec	nop
00000000000316f0	ldr	x9, [x19]
00000000000316f4	ldr	x10, [x19]
00000000000316f8	ands	x10, x10, #0xfffffffffffffffe
00000000000316fc	b.eq	0x31728
0000000000031700	ldr	x11, [x10]
0000000000031704	ldr	x12, [x19]
0000000000031708	bfxil	x11, x12, #0, #1
000000000003170c	str	x11, [x19]
0000000000031710	ldr	x11, [x10]
0000000000031714	and	x11, x11, #0x1
0000000000031718	str	x11, [x10]
000000000003171c	ldr	x10, [x19, #0x8]
0000000000031720	sub	x10, x10, #0x1
0000000000031724	str	x10, [x19, #0x8]
0000000000031728	sub	x9, x9, #0x8
000000000003172c	and	x10, x9, #0xfffffffffffffffe
0000000000031730	ldr	x9, [x20]
0000000000031734	add	x9, x9, #0x1
0000000000031738	str	x9, [x20]
000000000003173c	ldr	x9, [x10, #0x10]
0000000000031740	and	x9, x9, #0xfffffffffffffffc
0000000000031744	ldr	x9, [x9]
0000000000031748	ldrsw	x9, [x9, #0x14]
000000000003174c	tbnz	w9, #0x1f, 0x3175c
0000000000031750	and	x9, x9, #0xffffffff
0000000000031754	add	x11, x9, #0xf
0000000000031758	b	0x31768
000000000003175c	ldr	w11, [x10, #0x18]
0000000000031760	mneg	x9, x9, x11
0000000000031764	add	x11, x9, #0x1f
0000000000031768	add	x9, x10, #0x10
000000000003176c	and	x11, x11, #0xfffffffffffffff8
0000000000031770	add	x11, x11, #0xf
0000000000031774	and	x11, x11, #0xfffffffffffffff8
0000000000031778	ldr	x12, [x20, #0x8]
000000000003177c	add	x11, x12, x11
0000000000031780	str	x11, [x20, #0x8]
0000000000031784	ldr	x11, [x9]
0000000000031788	and	x11, x11, #0xfffffffffffffffc
000000000003178c	ldr	x11, [x11]
0000000000031790	cmp	x11, x8
0000000000031794	b.eq	0x31834
0000000000031798	ldr	w10, [x11, #0x28]
000000000003179c	cmp	w10, #0x1
00000000000317a0	b.lt	0x318c8
00000000000317a4	mov	x10, #0x0
00000000000317a8	b	0x317c0
00000000000317ac	clrex
00000000000317b0	add	x10, x10, #0x1
00000000000317b4	ldrsw	x12, [x11, #0x28]
00000000000317b8	cmp	x10, x12
00000000000317bc	b.ge	0x318c8
00000000000317c0	ldr	x12, [x11, #0x20]
00000000000317c4	ldrsw	x12, [x12, x10, lsl #2]
00000000000317c8	ldr	x12, [x12, x9]
00000000000317cc	cmp	x12, #0x2
00000000000317d0	b.lo	0x317b0
00000000000317d4	ldr	x13, [x12]
00000000000317d8	tst	x13, #0x3
00000000000317dc	b.ne	0x317b0
00000000000317e0	ldur	x13, [x12, #-0x8]
00000000000317e4	tbnz	w13, #0x0, 0x317b0
00000000000317e8	sub	x12, x12, #0x8
00000000000317ec	orr	x14, x13, #0x1
00000000000317f0	ldxr	x15, [x12]
00000000000317f4	cmp	x15, x13
00000000000317f8	b.ne	0x317ac
00000000000317fc	stxr	w15, x14, [x12]
0000000000031800	cbnz	w15, 0x317f0
0000000000031804	ldr	x13, [x19]
0000000000031808	ldr	x14, [x19]
000000000003180c	and	x14, x14, #0x1
0000000000031810	orr	x14, x14, x12
0000000000031814	str	x14, [x19]
0000000000031818	ldr	x14, [x12]
000000000003181c	bfxil	x13, x14, #0, #1
0000000000031820	str	x13, [x12]
0000000000031824	ldr	x12, [x19, #0x8]
0000000000031828	add	x12, x12, #0x1
000000000003182c	str	x12, [x19, #0x8]
0000000000031830	b	0x317b0
0000000000031834	ldr	w11, [x10, #0x18]
0000000000031838	cbz	w11, 0x318c8
000000000003183c	mov	w11, #0x0
0000000000031840	add	x12, x10, #0x20
0000000000031844	b	0x3185c
0000000000031848	clrex
000000000003184c	add	w11, w11, #0x1
0000000000031850	ldr	w13, [x10, #0x18]
0000000000031854	cmp	w11, w13
0000000000031858	b.hs	0x318c8
000000000003185c	ldr	x13, [x12, w11, sxtw #3]
0000000000031860	cmp	x13, #0x2
0000000000031864	b.lo	0x3184c
0000000000031868	ldr	x14, [x13]
000000000003186c	tst	x14, #0x3
0000000000031870	b.ne	0x3184c
0000000000031874	ldur	x14, [x13, #-0x8]
0000000000031878	tbnz	w14, #0x0, 0x3184c
000000000003187c	sub	x13, x13, #0x8
0000000000031880	orr	x15, x14, #0x1
0000000000031884	ldxr	x16, [x13]
0000000000031888	cmp	x16, x14
000000000003188c	b.ne	0x31848
0000000000031890	stxr	w16, x15, [x13]
0000000000031894	cbnz	w16, 0x31884
0000000000031898	ldr	x14, [x19]
000000000003189c	ldr	x15, [x19]
00000000000318a0	and	x15, x15, #0x1
00000000000318a4	orr	x15, x15, x13
00000000000318a8	str	x15, [x19]
00000000000318ac	ldr	x15, [x13]
00000000000318b0	bfxil	x14, x15, #0, #1
00000000000318b4	str	x14, [x13]
00000000000318b8	ldr	x13, [x19, #0x8]
00000000000318bc	add	x13, x13, #0x1
00000000000318c0	str	x13, [x19, #0x8]
00000000000318c4	b	0x3184c
00000000000318c8	ldar	x9, [x9]
00000000000318cc	and	x9, x9, #0xfffffffffffffffc
00000000000318d0	ldr	x10, [x9]
00000000000318d4	cmp	x9, #0x0
00000000000318d8	ccmp	x10, x9, #0x4, ne
00000000000318dc	b.eq	0x31958
00000000000318e0	add	x9, x9, #0x18
00000000000318e4	ldar	x9, [x9]
00000000000318e8	sbfx	x10, x9, #0, #1
00000000000318ec	and	x9, x9, x10
00000000000318f0	and	x9, x9, #0xfffffffffffffffe
00000000000318f4	cmp	x9, #0x2
00000000000318f8	b.lo	0x31958
00000000000318fc	ldur	x10, [x9, #-0x8]
0000000000031900	tbnz	w10, #0x0, 0x31958
0000000000031904	sub	x9, x9, #0x8
0000000000031908	orr	x11, x10, #0x1
000000000003190c	ldxr	x12, [x9]
0000000000031910	cmp	x12, x10
0000000000031914	b.ne	0x31954
0000000000031918	stxr	w12, x11, [x9]
000000000003191c	cbnz	w12, 0x3190c
0000000000031920	ldr	x10, [x19]
0000000000031924	ldr	x11, [x19]
0000000000031928	and	x11, x11, #0x1
000000000003192c	orr	x11, x11, x9
0000000000031930	str	x11, [x19]
0000000000031934	ldr	x11, [x9]
0000000000031938	bfxil	x10, x11, #0, #1
000000000003193c	str	x10, [x9]
0000000000031940	ldr	x9, [x19, #0x8]
0000000000031944	add	x9, x9, #0x1
0000000000031948	str	x9, [x19, #0x8]
000000000003194c	cbnz	x9, 0x316f0
0000000000031950	b	0x31960
0000000000031954	clrex
0000000000031958	ldr	x9, [x19, #0x8]
000000000003195c	cbnz	x9, 0x316f0
0000000000031960	ldp	x29, x30, [sp, #0x10]
0000000000031964	ldp	x20, x19, [sp], #0x20
0000000000031968	b	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEED1Ev:
000000000003196c	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEED0Ev:
0000000000031970	b	0x55a20 ; symbol stub for: __ZdlPv
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE7__cloneEv:
0000000000031974	stp	x20, x19, [sp, #-0x20]!
0000000000031978	stp	x29, x30, [sp, #0x10]
000000000003197c	add	x29, sp, #0x10
0000000000031980	mov	x19, x0
0000000000031984	mov	w0, #0x10
0000000000031988	bl	0x55a2c ; symbol stub for: __Znwm
000000000003198c	ldr	x8, [x19, #0x8]
0000000000031990	adr	x9, #0x3f7c0
0000000000031994	nop
0000000000031998	stp	x9, x8, [x0]
000000000003199c	ldp	x29, x30, [sp, #0x10]
00000000000319a0	ldp	x20, x19, [sp], #0x20
00000000000319a4	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE7__cloneEPNS0_6__baseISC_EE:
00000000000319a8	ldr	x8, [x0, #0x8]
00000000000319ac	adr	x9, #0x3f7a4
00000000000319b0	nop
00000000000319b4	stp	x9, x8, [x1]
00000000000319b8	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE7destroyEv:
00000000000319bc	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE18destroy_deallocateEv:
00000000000319c0	b	0x55a20 ; symbol stub for: __ZdlPv
__ZNSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEEclESB_:
00000000000319c4	ldr	x8, [x0, #0x8]
00000000000319c8	ldr	x0, [x8, #0x40]
00000000000319cc	ldr	x8, [x0]
00000000000319d0	ldr	x2, [x8, #0x10]
00000000000319d4	br	x2
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE6targetERKSt9type_info:
00000000000319d8	stp	x20, x19, [sp, #-0x20]!
00000000000319dc	stp	x29, x30, [sp, #0x10]
00000000000319e0	add	x29, sp, #0x10
00000000000319e4	mov	x19, x0
00000000000319e8	ldr	x9, [x1, #0x8]
00000000000319ec	adr	x8, #0x270af
00000000000319f0	nop
00000000000319f4	mov	x10, #-0x8000000000000000
00000000000319f8	add	x10, x8, x10
00000000000319fc	cmp	x9, x10
0000000000031a00	b.ne	0x31a14
0000000000031a04	add	x0, x19, #0x8
0000000000031a08	ldp	x29, x30, [sp, #0x10]
0000000000031a0c	ldp	x20, x19, [sp], #0x20
0000000000031a10	ret
0000000000031a14	tst	x9, x10
0000000000031a18	b.lt	0x31a2c
0000000000031a1c	mov	x0, #0x0
0000000000031a20	ldp	x29, x30, [sp, #0x10]
0000000000031a24	ldp	x20, x19, [sp], #0x20
0000000000031a28	ret
0000000000031a2c	and	x0, x9, #0x7fffffffffffffff
0000000000031a30	mov	x9, #-0x8000000000000000
0000000000031a34	add	x8, x8, x9
0000000000031a38	and	x1, x8, #0x7fffffffffffffff
0000000000031a3c	bl	0x55e64 ; symbol stub for: _strcmp
0000000000031a40	cbz	w0, 0x31a04
0000000000031a44	mov	x0, #0x0
0000000000031a48	ldp	x29, x30, [sp, #0x10]
0000000000031a4c	ldp	x20, x19, [sp], #0x20
0000000000031a50	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc11GCScheduler13NewThreadDataEvEUlRT_E_NS_9allocatorIS7_EEFvRNS3_21GCSchedulerThreadDataEEE11target_typeEv:
0000000000031a54	adr	x0, #0x3f75c
0000000000031a58	nop
0000000000031a5c	ret
__ZN6kotlin2gc2GC10ThreadDataC1ERS1_RNS_2mm10ThreadDataE:
0000000000031a60	sub	sp, sp, #0x50
0000000000031a64	stp	x22, x21, [sp, #0x20]
0000000000031a68	stp	x20, x19, [sp, #0x30]
0000000000031a6c	stp	x29, x30, [sp, #0x40]
0000000000031a70	add	x29, sp, #0x40
0000000000031a74	mov	x20, x2
0000000000031a78	mov	x22, x1
0000000000031a7c	mov	x19, x0
0000000000031a80	mov	w0, #0x1
0000000000031a84	mov	w1, #0xa0
0000000000031a88	bl	0x55aec ; symbol stub for: _calloc
0000000000031a8c	mov	x21, x0
0000000000031a90	ldr	x8, [x22]
0000000000031a94	add	x9, x8, #0x30
0000000000031a98	adr	x10, #0x3f6b8
0000000000031a9c	nop
0000000000031aa0	stp	x10, x9, [sp]
0000000000031aa4	mov	x11, sp
0000000000031aa8	str	x11, [sp, #0x18]
0000000000031aac	str	x9, [x0]
0000000000031ab0	mov	x12, x0
0000000000031ab4	str	x10, [x12, #0x8]!
0000000000031ab8	str	x12, [x0, #0x20]
0000000000031abc	str	x9, [x0, #0x10]
0000000000031ac0	add	x8, x8, #0x38
0000000000031ac4	movi.16b	v0, #0x0
0000000000031ac8	stur	q0, [x0, #0x28]
0000000000031acc	stur	q0, [x0, #0x38]
0000000000031ad0	ldar	x8, [x8]
0000000000031ad4	str	x8, [x0, #0x30]
0000000000031ad8	mov	x8, x9
0000000000031adc	ldar	w8, [x8]
0000000000031ae0	sxtw	x8, w8
0000000000031ae4	str	x8, [x0, #0x40]
0000000000031ae8	mov	x0, x11
0000000000031aec	cmp	x11, x0
0000000000031af0	b.eq	0x31b04
0000000000031af4	cbz	x0, 0x31b10
0000000000031af8	ldr	x8, [x0]
0000000000031afc	ldr	x8, [x8, #0x28]
0000000000031b00	b	0x31b0c
0000000000031b04	ldr	x8, [x0]
0000000000031b08	ldr	x8, [x8, #0x20]
0000000000031b0c	blr	x8
0000000000031b10	ldr	x8, [x22]
0000000000031b14	add	x9, x8, #0x98
0000000000031b18	mov	x10, x21
0000000000031b1c	str	x9, [x10, #0x48]!
0000000000031b20	stp	x20, x21, [x21, #0x50]
0000000000031b24	add	x8, x8, #0x10
0000000000031b28	str	x8, [x21, #0x70]
0000000000031b2c	stp	x10, xzr, [x21, #0x80]
0000000000031b30	stp	xzr, xzr, [x21, #0x90]
0000000000031b34	str	x21, [x19]
0000000000031b38	mov	x0, x19
0000000000031b3c	ldp	x29, x30, [sp, #0x40]
0000000000031b40	ldp	x20, x19, [sp, #0x30]
0000000000031b44	ldp	x22, x21, [sp, #0x20]
0000000000031b48	add	sp, sp, #0x50
0000000000031b4c	ret
__ZN6kotlin2gc2GC10ThreadDataD1Ev:
0000000000031b50	stp	x20, x19, [sp, #-0x20]!
0000000000031b54	stp	x29, x30, [sp, #0x10]
0000000000031b58	add	x29, sp, #0x10
0000000000031b5c	mov	x19, x0
0000000000031b60	ldr	x20, [x0]
0000000000031b64	str	xzr, [x0]
0000000000031b68	cbz	x20, 0x31bbc
0000000000031b6c	add	x0, x20, #0x70
0000000000031b70	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer7PublishEv
0000000000031b74	ldr	x0, [x20, #0x88]
0000000000031b78	str	xzr, [x20, #0x88]
0000000000031b7c	cbz	x0, 0x31b88
0000000000031b80	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000031b84	bl	_mi_free
0000000000031b88	add	x8, x20, #0x8
0000000000031b8c	ldr	x0, [x20, #0x20]
0000000000031b90	cmp	x8, x0
0000000000031b94	b.eq	0x31ba8
0000000000031b98	cbz	x0, 0x31bb4
0000000000031b9c	ldr	x8, [x0]
0000000000031ba0	ldr	x8, [x8, #0x28]
0000000000031ba4	b	0x31bb0
0000000000031ba8	ldr	x8, [x0]
0000000000031bac	ldr	x8, [x8, #0x20]
0000000000031bb0	blr	x8
0000000000031bb4	mov	x0, x20
0000000000031bb8	bl	0x55b7c ; symbol stub for: _free
0000000000031bbc	mov	x0, x19
0000000000031bc0	ldp	x29, x30, [sp, #0x10]
0000000000031bc4	ldp	x20, x19, [sp], #0x20
0000000000031bc8	ret
__ZN13GCStateHolder8scheduleEv:
0000000000031bcc	stp	x20, x19, [sp, #-0x20]!
0000000000031bd0	stp	x29, x30, [sp, #0x10]
0000000000031bd4	add	x29, sp, #0x10
0000000000031bd8	mov	x19, x0
0000000000031bdc	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000031be0	ldr	x20, [x19, #0xc0]
0000000000031be4	ldr	x8, [x19, #0x40]
0000000000031be8	cmp	x20, x8
0000000000031bec	b.gt	0x31c04
0000000000031bf0	add	x8, x8, #0x1
0000000000031bf4	str	x8, [x19, #0xc0]
0000000000031bf8	add	x0, x19, #0xd0
0000000000031bfc	bl	0x5593c ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000031c00	ldr	x20, [x19, #0xc0]
0000000000031c04	mov	x0, x19
0000000000031c08	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000031c0c	mov	x0, x20
0000000000031c10	ldp	x29, x30, [sp, #0x10]
0000000000031c14	ldp	x20, x19, [sp], #0x20
0000000000031c18	ret
__ZN6kotlin16ThreadStateGuardD1Ev:
0000000000031c1c	stp	x20, x19, [sp, #-0x20]!
0000000000031c20	stp	x29, x30, [sp, #0x10]
0000000000031c24	add	x29, sp, #0x10
0000000000031c28	mov	x19, x0
0000000000031c2c	ldr	x9, [x0]
0000000000031c30	cbz	x9, 0x31c68
0000000000031c34	ldr	w8, [x19, #0x8]
0000000000031c38	add	x0, x9, #0x138
0000000000031c3c	ldaxr	w9, [x0]
0000000000031c40	stlxr	w10, w8, [x0]
0000000000031c44	cbnz	w10, 0x31c3c
0000000000031c48	cbnz	w8, 0x31c68
0000000000031c4c	cmp	w9, #0x1
0000000000031c50	b.ne	0x31c68
0000000000031c54	adr	x8, #0x628b5
0000000000031c58	nop
0000000000031c5c	ldarb	w8, [x8]
0000000000031c60	tbz	w8, #0x0, 0x31c68
0000000000031c64	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000031c68	mov	x0, x19
0000000000031c6c	ldp	x29, x30, [sp, #0x10]
0000000000031c70	ldp	x20, x19, [sp], #0x20
0000000000031c74	ret
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy:
0000000000031c78	sub	sp, sp, #0x70
0000000000031c7c	stp	x24, x23, [sp, #0x30]
0000000000031c80	stp	x22, x21, [sp, #0x40]
0000000000031c84	stp	x20, x19, [sp, #0x50]
0000000000031c88	stp	x29, x30, [sp, #0x60]
0000000000031c8c	add	x29, sp, #0x60
0000000000031c90	mov	x19, x0
0000000000031c94	add	x8, x1, #0xf
0000000000031c98	and	x20, x8, #0xfffffffffffffff8
0000000000031c9c	ldr	x8, [x0, #0x10]
0000000000031ca0	ldr	x21, [x8, #0x10]
0000000000031ca4	ldp	x8, x9, [x21, #0x28]
0000000000031ca8	add	x8, x8, x20
0000000000031cac	str	x8, [x21, #0x28]
0000000000031cb0	cmp	x8, x9
0000000000031cb4	b.lo	0x31cf8
0000000000031cb8	ldr	x0, [x21, #0x20]
0000000000031cbc	cbz	x0, 0x31e5c
0000000000031cc0	ldr	x8, [x0]
0000000000031cc4	ldr	x8, [x8, #0x30]
0000000000031cc8	mov	x1, x21
0000000000031ccc	blr	x8
0000000000031cd0	str	xzr, [x21, #0x28]
0000000000031cd4	str	xzr, [x21, #0x38]
0000000000031cd8	ldr	x8, [x21]
0000000000031cdc	add	x8, x8, #0x8
0000000000031ce0	ldar	x8, [x8]
0000000000031ce4	str	x8, [x21, #0x30]
0000000000031ce8	ldr	x8, [x21]
0000000000031cec	ldar	w8, [x8]
0000000000031cf0	sxtw	x8, w8
0000000000031cf4	str	x8, [x21, #0x40]
0000000000031cf8	adr	x23, #0x62811
0000000000031cfc	nop
0000000000031d00	ldarb	w8, [x23]
0000000000031d04	tbz	w8, #0x0, 0x31d0c
0000000000031d08	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000031d0c	mov	x0, x20
0000000000031d10	bl	__ZN6kotlin20allocateInObjectPoolEm
0000000000031d14	mov	x21, x0
0000000000031d18	cbnz	x0, 0x31e08
0000000000031d1c	ldr	x22, [x19, #0x10]
0000000000031d20	adrp	x0, 73 ; 0x7a000
0000000000031d24	add	x0, x0, #0x4e0
0000000000031d28	ldr	x8, [x0]
0000000000031d2c	blr	x8
0000000000031d30	ldr	x8, [x0]
0000000000031d34	str	x8, [sp, #0x10]
0000000000031d38	strb	wzr, [sp, #0x1c]
0000000000031d3c	add	x8, x8, #0x138
0000000000031d40	mov	w9, #0x1
0000000000031d44	ldaxr	w10, [x8]
0000000000031d48	stlxr	w11, w9, [x8]
0000000000031d4c	cbnz	w11, 0x31d44
0000000000031d50	str	w10, [sp, #0x18]
0000000000031d54	ldr	x8, [x22]
0000000000031d58	add	x0, x8, #0x18
0000000000031d5c	bl	__ZN13GCStateHolder8scheduleEv
0000000000031d60	mov	x21, x0
0000000000031d64	ldr	x24, [x22]
0000000000031d68	ldr	x22, [x24, #0xa0]
0000000000031d6c	str	x22, [sp, #0x20]
0000000000031d70	mov	w8, #0x1
0000000000031d74	strb	w8, [sp, #0x28]
0000000000031d78	mov	x0, x22
0000000000031d7c	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000031d80	ldr	x8, [x24, #0x98]
0000000000031d84	cmp	x8, x21
0000000000031d88	b.ge	0x31dbc
0000000000031d8c	add	x22, x24, #0xa8
0000000000031d90	ldrb	w8, [x24, #0x158]
0000000000031d94	cbnz	w8, 0x31db0
0000000000031d98	add	x1, sp, #0x20
0000000000031d9c	mov	x0, x22
0000000000031da0	bl	0x55954 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
0000000000031da4	ldr	x8, [x24, #0x98]
0000000000031da8	cmp	x8, x21
0000000000031dac	b.lt	0x31d90
0000000000031db0	ldrb	w8, [sp, #0x28]
0000000000031db4	cbz	w8, 0x31dc4
0000000000031db8	ldr	x22, [sp, #0x20]
0000000000031dbc	mov	x0, x22
0000000000031dc0	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000031dc4	ldr	x9, [sp, #0x10]
0000000000031dc8	cbz	x9, 0x31df8
0000000000031dcc	ldr	w8, [sp, #0x18]
0000000000031dd0	add	x0, x9, #0x138
0000000000031dd4	ldaxr	w9, [x0]
0000000000031dd8	stlxr	w10, w8, [x0]
0000000000031ddc	cbnz	w10, 0x31dd4
0000000000031de0	cbnz	w8, 0x31df8
0000000000031de4	cmp	w9, #0x1
0000000000031de8	b.ne	0x31df8
0000000000031dec	ldarb	w8, [x23]
0000000000031df0	tbz	w8, #0x0, 0x31df8
0000000000031df4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000031df8	mov	x0, x20
0000000000031dfc	bl	__ZN6kotlin20allocateInObjectPoolEm
0000000000031e00	mov	x21, x0
0000000000031e04	cbz	x0, 0x31e64
0000000000031e08	str	xzr, [x21]
0000000000031e0c	ldr	x8, [x19, #0x18]
0000000000031e10	cbz	x8, 0x31e30
0000000000031e14	ldr	x8, [x19, #0x20]
0000000000031e18	ldr	x0, [x8]
0000000000031e1c	str	x21, [x8]
0000000000031e20	cbz	x0, 0x31e34
0000000000031e24	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000031e28	bl	_mi_free
0000000000031e2c	b	0x31e34
0000000000031e30	str	x21, [x19, #0x18]
0000000000031e34	ldr	x8, [x19, #0x28]
0000000000031e38	add	x8, x8, #0x1
0000000000031e3c	stp	x21, x8, [x19, #0x20]
0000000000031e40	mov	x0, x21
0000000000031e44	ldp	x29, x30, [sp, #0x60]
0000000000031e48	ldp	x20, x19, [sp, #0x50]
0000000000031e4c	ldp	x22, x21, [sp, #0x40]
0000000000031e50	ldp	x24, x23, [sp, #0x30]
0000000000031e54	add	sp, sp, #0x70
0000000000031e58	ret
0000000000031e5c	bl	__ZNSt3__125__throw_bad_function_callEv
0000000000031e60	b	0x31e78
0000000000031e64	str	x20, [sp]
0000000000031e68	adr	x0, #0x2aa01 ; literal pool for: "Out of memory trying to allocate %llu bytes. Aborting.\n"
0000000000031e6c	nop
0000000000031e70	bl	__ZN5konan13consoleErrorfEPKcz
0000000000031e74	bl	__ZN5konan5abortEv
0000000000031e78	brk	#0x1
0000000000031e7c	bl	___clang_call_terminate
0000000000031e80	mov	x19, x0
0000000000031e84	add	x0, sp, #0x10
0000000000031e88	bl	__ZN6kotlin16ThreadStateGuardD1Ev
0000000000031e8c	mov	x0, x19
0000000000031e90	bl	___clang_call_terminate
0000000000031e94	bl	___clang_call_terminate
__ZN6kotlin12ScopedThread3RunIZNS_2gc22ConcurrentMarkAndSweepC1ERNS_2mm13ObjectFactoryIS3_EERNS2_11GCSchedulerEE3$_3JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOSD_DpOSE_:
0000000000031e98	sub	sp, sp, #0x170
0000000000031e9c	stp	x28, x27, [sp, #0x110]
0000000000031ea0	stp	x26, x25, [sp, #0x120]
0000000000031ea4	stp	x24, x23, [sp, #0x130]
0000000000031ea8	stp	x22, x21, [sp, #0x140]
0000000000031eac	stp	x20, x19, [sp, #0x150]
0000000000031eb0	stp	x29, x30, [sp, #0x160]
0000000000031eb4	add	x29, sp, #0x160
0000000000031eb8	mov	x19, x1
0000000000031ebc	ldrb	w8, [x0, #0x18]
0000000000031ec0	cbz	w8, 0x31ed4
0000000000031ec4	ldrsb	w8, [x0, #0x17]
0000000000031ec8	tbz	w8, #0x1f, 0x31ed0
0000000000031ecc	ldr	x0, [x0]
0000000000031ed0	bl	0x55df8 ; symbol stub for: _pthread_setname_np
0000000000031ed4	ldr	x25, [x19]
0000000000031ed8	add	x26, x25, #0xe8
0000000000031edc	add	x9, x25, #0x180
0000000000031ee0	add	x8, x25, #0x68
0000000000031ee4	stp	x8, x9, [sp, #0x40]
0000000000031ee8	add	x9, x25, #0x170
0000000000031eec	add	x8, x25, #0xa8
0000000000031ef0	stp	x8, x9, [sp, #0x30]
0000000000031ef4	mov	w24, #0x1
0000000000031ef8	adrp	x23, 73 ; 0x7a000
0000000000031efc	add	x23, x23, #0x4e0
0000000000031f00	ldr	x27, [x23]
0000000000031f04	adr	x28, #0x628fc
0000000000031f08	nop
0000000000031f0c	adr	x20, #0x629e4
0000000000031f10	nop
0000000000031f14	str	x25, [sp, #0x50]
0000000000031f18	stp	x27, x26, [sp, #0x20]
0000000000031f1c	b	0x31f30
0000000000031f20	stlrb	wzr, [x23]
0000000000031f24	ldp	x27, x26, [sp, #0x20]
0000000000031f28	adrp	x23, 73 ; 0x7a000
0000000000031f2c	add	x23, x23, #0x4e0
0000000000031f30	ldr	x0, [x25, #0xe0]
0000000000031f34	stur	x0, [x29, #-0x80]
0000000000031f38	sturb	w24, [x29, #-0x78]
0000000000031f3c	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000031f40	ldr	x21, [x25, #0xd8]
0000000000031f44	ldr	x8, [x25, #0x98]
0000000000031f48	cmp	x21, x8
0000000000031f4c	b.gt	0x31f7c
0000000000031f50	ldrb	w8, [x25, #0x158]
0000000000031f54	cbnz	w8, 0x31f74
0000000000031f58	sub	x1, x29, #0x80
0000000000031f5c	mov	x0, x26
0000000000031f60	bl	0x55954 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
0000000000031f64	ldr	x21, [x25, #0xd8]
0000000000031f68	ldr	x8, [x25, #0x98]
0000000000031f6c	cmp	x21, x8
0000000000031f70	b.le	0x31f50
0000000000031f74	ldurb	w8, [x29, #-0x78]
0000000000031f78	cbz	w8, 0x31f88
0000000000031f7c	ldur	x0, [x29, #-0x80]
0000000000031f80	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000031f84	ldr	x21, [x25, #0xd8]
0000000000031f88	ldrb	w8, [x25, #0x158]
0000000000031f8c	cmp	w8, #0x1
0000000000031f90	b.eq	0x32868
0000000000031f94	ldr	w8, [x25, #0x198]
0000000000031f98	cmp	w8, #0x0
0000000000031f9c	cset	w8, eq
0000000000031fa0	adr	x9, #0x6256a
0000000000031fa4	nop
0000000000031fa8	stlrb	w8, [x9]
0000000000031fac	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000031fb0	bl	__ZN6kotlin2mm24RequestThreadsSuspensionEv
0000000000031fb4	mov	x0, x23
0000000000031fb8	blr	x27
0000000000031fbc	ldr	x8, [x0]
0000000000031fc0	add	x9, x8, #0x8
0000000000031fc4	cmp	x8, #0x0
0000000000031fc8	csel	x19, xzr, x9, eq
0000000000031fcc	mov	x0, x28
0000000000031fd0	bl	0x55918 ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
0000000000031fd4	nop
0000000000031fd8	ldr	x8, #0x62818
0000000000031fdc	cbnz	x8, 0x31fec
0000000000031fe0	b	0x32034
0000000000031fe4	ldr	x8, [x8, #0x150]
0000000000031fe8	cbz	x8, 0x32034
0000000000031fec	add	x9, x8, #0x8
0000000000031ff0	cmp	x9, x19
0000000000031ff4	b.eq	0x31fe4
0000000000031ff8	add	x9, x8, #0x148
0000000000031ffc	ldarb	w9, [x9]
0000000000032000	tbnz	w9, #0x0, 0x31fe4
0000000000032004	add	x9, x8, #0x138
0000000000032008	ldar	w9, [x9]
000000000003200c	cmp	w9, #0x1
0000000000032010	b.eq	0x31fe4
0000000000032014	ldr	x9, [x8, #0x118]
0000000000032018	add	x9, x9, #0x60
000000000003201c	ldarb	w9, [x9]
0000000000032020	tbnz	w9, #0x0, 0x31fe4
0000000000032024	mov	x0, x28
0000000000032028	bl	0x55924 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
000000000003202c	bl	0x55e28 ; symbol stub for: _sched_yield
0000000000032030	b	0x31fb4
0000000000032034	str	x21, [sp, #0x78]
0000000000032038	mov	x0, x28
000000000003203c	bl	0x55924 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
0000000000032040	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000032044	ldr	x8, [sp, #0x48]
0000000000032048	stp	xzr, xzr, [x8, #0x8]
000000000003204c	str	xzr, [x8]
0000000000032050	ldr	x22, [x25, #0x8]
0000000000032054	ldr	x0, [x22, #0x40]
0000000000032058	ldr	x8, [x0]
000000000003205c	ldr	x8, [x8, #0x18]
0000000000032060	blr	x8
0000000000032064	ldr	x21, [x25, #0x60]
0000000000032068	mov	x0, x21
000000000003206c	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000032070	ldr	x8, [sp, #0x78]
0000000000032074	str	x8, [x25, #0x58]
0000000000032078	ldr	x0, [sp, #0x40]
000000000003207c	bl	0x5593c ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000032080	mov	x0, x21
0000000000032084	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000032088	mov	x0, x25
000000000003208c	bl	__ZN6kotlin2gc22ConcurrentMarkAndSweep29CollectRootSetAndStartMarkingEv
0000000000032090	add	x0, sp, #0x80
0000000000032094	ldr	x1, [sp, #0x38]
0000000000032098	bl	__ZN6kotlin2gc4MarkIN12_GLOBAL__N_110MarkTraitsEEENS0_9MarkStatsERNT_9MarkQueueE
000000000003209c	ldr	q0, [sp, #0x80]
00000000000320a0	str	q0, [sp, #0x60]
00000000000320a4	ldr	x19, [sp, #0x90]
00000000000320a8	adr	x21, #0x48218
00000000000320ac	nop
00000000000320b0	mov	x0, x21
00000000000320b4	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
00000000000320b8	ldr	q0, [x25, #0x180]
00000000000320bc	ldr	q1, [sp, #0x60]
00000000000320c0	add.2d	v0, v0, v1
00000000000320c4	str	q0, [x25, #0x180]
00000000000320c8	ldr	x8, [x25, #0x190]
00000000000320cc	add	x8, x8, x19
00000000000320d0	str	x8, [x25, #0x190]
00000000000320d4	mov	x0, x21
00000000000320d8	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000320dc	mov	x0, x23
00000000000320e0	blr	x27
00000000000320e4	ldr	x8, [x0]
00000000000320e8	add	x9, x8, #0x8
00000000000320ec	cmp	x8, #0x0
00000000000320f0	csel	x19, xzr, x9, eq
00000000000320f4	mov	x0, x28
00000000000320f8	bl	0x55918 ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
00000000000320fc	nop
0000000000032100	ldr	x8, #0x626f0
0000000000032104	cbnz	x8, 0x32114
0000000000032108	b	0x3214c
000000000003210c	ldr	x8, [x8, #0x150]
0000000000032110	cbz	x8, 0x3214c
0000000000032114	add	x9, x8, #0x8
0000000000032118	cmp	x9, x19
000000000003211c	b.eq	0x3210c
0000000000032120	add	x9, x8, #0x148
0000000000032124	ldarb	w9, [x9]
0000000000032128	tbnz	w9, #0x0, 0x3210c
000000000003212c	add	x9, x8, #0x138
0000000000032130	ldar	w9, [x9]
0000000000032134	cmp	w9, #0x1
0000000000032138	b.eq	0x3210c
000000000003213c	mov	x0, x28
0000000000032140	bl	0x55924 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
0000000000032144	bl	0x55e28 ; symbol stub for: _sched_yield
0000000000032148	b	0x320dc
000000000003214c	mov	x0, x28
0000000000032150	bl	0x55924 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
0000000000032154	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000032158	ldr	x0, [x22, #0x40]
000000000003215c	ldr	x1, [x25, #0x188]
0000000000032160	ldr	x8, [x0]
0000000000032164	ldr	x8, [x8, #0x20]
0000000000032168	blr	x8
000000000003216c	sub	x21, x29, #0x80
0000000000032170	adr	x22, #0x62768
0000000000032174	nop
0000000000032178	adrp	x23, 98 ; 0x94000
000000000003217c	adrp	x28, 98 ; 0x94000
0000000000032180	ldaxrb	w8, [x20]
0000000000032184	stxrb	w9, w24, [x20]
0000000000032188	cbnz	w9, 0x32180
000000000003218c	tbz	w8, #0x0, 0x32198
0000000000032190	bl	0x55e28 ; symbol stub for: _sched_yield
0000000000032194	b	0x32180
0000000000032198	stp	x21, x21, [x29, #-0x80]
000000000003219c	stur	xzr, [x29, #-0x70]
00000000000321a0	ldr	x8, [x22, #0x8]
00000000000321a4	cmp	x8, x22
00000000000321a8	b.ne	0x32284
00000000000321ac	ldr	x8, [x23, #0x8e8]
00000000000321b0	cbz	x8, 0x321ec
00000000000321b4	ldp	x8, x0, [x22]
00000000000321b8	ldr	x9, [x8, #0x8]
00000000000321bc	ldr	x10, [x0]
00000000000321c0	str	x9, [x10, #0x8]
00000000000321c4	ldr	x8, [x8, #0x8]
00000000000321c8	str	x10, [x8]
00000000000321cc	str	xzr, [x22, #0x10]
00000000000321d0	cmp	x0, x22
00000000000321d4	b.eq	0x321ec
00000000000321d8	ldr	x19, [x0, #0x8]
00000000000321dc	bl	_mi_free
00000000000321e0	mov	x0, x19
00000000000321e4	cmp	x19, x22
00000000000321e8	b.ne	0x321d8
00000000000321ec	ldur	x8, [x29, #-0x70]
00000000000321f0	adr	x23, #0x626d0
00000000000321f4	nop
00000000000321f8	cbz	x8, 0x32238
00000000000321fc	ldp	x10, x9, [x29, #-0x80]
0000000000032200	ldr	x11, [x10, #0x8]
0000000000032204	ldr	x12, [x9]
0000000000032208	str	x11, [x12, #0x8]
000000000003220c	ldr	x11, [x10, #0x8]
0000000000032210	str	x12, [x11]
0000000000032214	ldr	x11, [x22]
0000000000032218	str	x9, [x11, #0x8]
000000000003221c	str	x11, [x9]
0000000000032220	str	x10, [x22]
0000000000032224	str	x22, [x10, #0x8]
0000000000032228	ldr	x9, [x22, #0x10]
000000000003222c	add	x8, x9, x8
0000000000032230	str	x8, [x22, #0x10]
0000000000032234	stur	xzr, [x29, #-0x70]
0000000000032238	stlrb	wzr, [x20]
000000000003223c	ldaxrb	w8, [x20]
0000000000032240	stxrb	w9, w24, [x20]
0000000000032244	cbnz	w9, 0x3223c
0000000000032248	tbz	w8, #0x0, 0x322e4
000000000003224c	bl	0x55e28 ; symbol stub for: _sched_yield
0000000000032250	b	0x3223c
0000000000032254	ldr	x0, [x9, #0x30]
0000000000032258	ldp	x9, x8, [x0]
000000000003225c	str	x8, [x9, #0x8]
0000000000032260	ldr	x8, [x0, #0x8]
0000000000032264	str	x9, [x8]
0000000000032268	ldr	x8, [x28, #0x8d0]
000000000003226c	sub	x8, x8, #0x1
0000000000032270	str	x8, [x28, #0x8d0]
0000000000032274	bl	_mi_free
0000000000032278	mov	x8, x19
000000000003227c	cmp	x19, x22
0000000000032280	b.eq	0x321ac
0000000000032284	ldp	x19, x9, [x8, #0x8]
0000000000032288	add	x10, x9, #0x28
000000000003228c	ldar	x10, [x10]
0000000000032290	cbz	x10, 0x32254
0000000000032294	cmp	x21, x8
0000000000032298	b.eq	0x32278
000000000003229c	ldr	x9, [x8, #0x8]
00000000000322a0	cmp	x9, x21
00000000000322a4	b.eq	0x32278
00000000000322a8	ldr	x10, [x8]
00000000000322ac	str	x9, [x10, #0x8]
00000000000322b0	ldr	x9, [x8, #0x8]
00000000000322b4	str	x10, [x9]
00000000000322b8	ldur	x9, [x29, #-0x80]
00000000000322bc	str	x8, [x9, #0x8]
00000000000322c0	stp	x9, x21, [x8]
00000000000322c4	ldr	x9, [x23, #0x8e8]
00000000000322c8	sub	x9, x9, #0x1
00000000000322cc	str	x9, [x23, #0x8e8]
00000000000322d0	ldur	x9, [x29, #-0x70]
00000000000322d4	add	x9, x9, #0x1
00000000000322d8	stur	x8, [x29, #-0x80]
00000000000322dc	stur	x9, [x29, #-0x70]
00000000000322e0	b	0x32278
00000000000322e4	ldr	x21, [x23, #0x8]
00000000000322e8	cmp	x21, x23
00000000000322ec	b.ne	0x3230c
00000000000322f0	b	0x32424
00000000000322f4	ldr	x9, [x8]
00000000000322f8	tst	x9, #0x3
00000000000322fc	b.eq	0x32330
0000000000032300	ldr	x21, [x21, #0x8]
0000000000032304	cmp	x21, x23
0000000000032308	b.eq	0x32424
000000000003230c	add	x22, x21, #0x20
0000000000032310	ldar	w8, [x22]
0000000000032314	tbnz	w8, #0x2, 0x32300
0000000000032318	add	x8, x21, #0x30
000000000003231c	ldar	x8, [x8]
0000000000032320	tbz	w8, #0x0, 0x322f4
0000000000032324	and	x8, x8, #0xfffffffffffffffe
0000000000032328	ldr	x8, [x8, #0x8]
000000000003232c	b	0x322f4
0000000000032330	ldur	x8, [x8, #-0x8]
0000000000032334	tbnz	w8, #0x0, 0x32300
0000000000032338	add	x8, x21, #0x30
000000000003233c	ldar	x9, [x8]
0000000000032340	tbz	w9, #0x0, 0x323b4
0000000000032344	ldar	x8, [x8]
0000000000032348	tbz	w8, #0x0, 0x32354
000000000003234c	and	x8, x8, #0xfffffffffffffffe
0000000000032350	ldr	x8, [x8, #0x8]
0000000000032354	add	x9, x21, #0x30
0000000000032358	ldar	x9, [x9]
000000000003235c	sbfx	x10, x9, #0, #1
0000000000032360	and	x9, x9, x10
0000000000032364	and	x10, x9, #0xfffffffffffffffe
0000000000032368	add	x9, x10, #0x10
000000000003236c	b	0x32378
0000000000032370	stlxr	w12, w24, [x9]
0000000000032374	cbz	w12, 0x32384
0000000000032378	ldaxr	w11, [x9]
000000000003237c	cbz	w11, 0x32370
0000000000032380	clrex
0000000000032384	cmp	w11, #0x1
0000000000032388	b.eq	0x32378
000000000003238c	str	xzr, [x10, #0x8]
0000000000032390	ldaxr	w10, [x9]
0000000000032394	cmp	w10, #0x1
0000000000032398	b.ne	0x323a8
000000000003239c	stlxr	w10, wzr, [x9]
00000000000323a0	cbnz	w10, 0x32390
00000000000323a4	b	0x323ac
00000000000323a8	clrex
00000000000323ac	add	x9, x21, #0x30
00000000000323b0	stlr	x8, [x9]
00000000000323b4	add	x8, x21, #0x28
00000000000323b8	ldar	x9, [x8]
00000000000323bc	cbz	x9, 0x323ec
00000000000323c0	ldar	x0, [x8]
00000000000323c4	cbz	x0, 0x323d8
00000000000323c8	nop
00000000000323cc	ldr	x1, #0x62394
00000000000323d0	mov	w2, #0x2
00000000000323d4	bl	0x55ca8 ; Objc message: -[x0 initWithDouble:]
00000000000323d8	ldaxr	w8, [x22]
00000000000323dc	orr	w8, w8, #0x4
00000000000323e0	stlxr	w9, w8, [x22]
00000000000323e4	cbnz	w9, 0x323d8
00000000000323e8	b	0x32300
00000000000323ec	add	x0, x21, #0x18
00000000000323f0	bl	__ZN6kotlin2mm15ExtraObjectData9UninstallEv
00000000000323f4	ldp	x8, x19, [x21]
00000000000323f8	str	x19, [x8, #0x8]
00000000000323fc	ldr	x9, [x21, #0x8]
0000000000032400	str	x8, [x9]
0000000000032404	ldr	x8, [x28, #0x8d0]
0000000000032408	sub	x8, x8, #0x1
000000000003240c	str	x8, [x28, #0x8d0]
0000000000032410	mov	x0, x21
0000000000032414	bl	_mi_free
0000000000032418	mov	x21, x19
000000000003241c	cmp	x21, x23
0000000000032420	b.ne	0x3230c
0000000000032424	stlrb	wzr, [x20]
0000000000032428	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
000000000003242c	ldr	x8, [x25]
0000000000032430	add	x21, x8, #0x8
0000000000032434	add	x23, x8, #0x20
0000000000032438	ldaxrb	w8, [x23]
000000000003243c	stxrb	w9, w24, [x23]
0000000000032440	cbnz	w9, 0x32438
0000000000032444	tbz	w8, #0x0, 0x32450
0000000000032448	bl	0x55e28 ; symbol stub for: _sched_yield
000000000003244c	b	0x32438
0000000000032450	adr	x0, #0x47e30
0000000000032454	nop
0000000000032458	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
000000000003245c	adr	x8, #0x620ad
0000000000032460	nop
0000000000032464	stlrb	wzr, [x8]
0000000000032468	adr	x19, #0x47db8
000000000003246c	nop
0000000000032470	add	x0, x19, #0x60
0000000000032474	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000032478	mov	x0, x19
000000000003247c	bl	0x5593c ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000032480	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000032484	str	x0, [sp, #0x60]
0000000000032488	ldr	x28, [x21]
000000000003248c	cbz	x28, 0x32598
0000000000032490	mov	x22, #0x0
0000000000032494	mov	x27, #0x0
0000000000032498	mov	x25, #0x0
000000000003249c	mov	x26, #0x0
00000000000324a0	b	0x324c4
00000000000324a4	ldr	x8, [x28, #0x8]
00000000000324a8	and	x8, x8, #0xfffffffffffffffe
00000000000324ac	str	x8, [x28, #0x8]
00000000000324b0	ldr	x8, [x28]
00000000000324b4	mov	x22, x28
00000000000324b8	mov	x28, x8
00000000000324bc	mov	x19, x25
00000000000324c0	cbz	x8, 0x325a4
00000000000324c4	ldr	x8, [x28, #0x8]
00000000000324c8	tbnz	w8, #0x0, 0x324a4
00000000000324cc	add	x8, x28, #0x10
00000000000324d0	ldar	x8, [x8]
00000000000324d4	and	x8, x8, #0xfffffffffffffffc
00000000000324d8	ldr	x9, [x8]
00000000000324dc	cmp	x8, #0x0
00000000000324e0	ccmp	x9, x8, #0x4, ne
00000000000324e4	b.ne	0x3252c
00000000000324e8	ldr	x8, [x28, #0x10]
00000000000324ec	and	x8, x8, #0xfffffffffffffffc
00000000000324f0	ldr	x8, [x8]
00000000000324f4	ldrb	w8, [x8, #0x58]
00000000000324f8	tbnz	w8, #0x6, 0x3252c
00000000000324fc	sub	x0, x29, #0x80
0000000000032500	mov	x1, x21
0000000000032504	mov	x2, x22
0000000000032508	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE13ExtractUnsafeEPNS9_4NodeE
000000000003250c	ldp	x0, x28, [x29, #-0x80]
0000000000032510	stur	xzr, [x29, #-0x80]
0000000000032514	cbz	x0, 0x32520
0000000000032518	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000003251c	bl	_mi_free
0000000000032520	mov	x19, x25
0000000000032524	cbnz	x28, 0x324c4
0000000000032528	b	0x325a4
000000000003252c	sub	x0, x29, #0x80
0000000000032530	mov	x1, x21
0000000000032534	mov	x2, x22
0000000000032538	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE13ExtractUnsafeEPNS9_4NodeE
000000000003253c	ldp	x19, x28, [x29, #-0x80]
0000000000032540	stur	xzr, [x29, #-0x80]
0000000000032544	cbz	x27, 0x32580
0000000000032548	ldr	x0, [x25]
000000000003254c	str	x19, [x25]
0000000000032550	cbz	x0, 0x3255c
0000000000032554	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000032558	bl	_mi_free
000000000003255c	ldur	x0, [x29, #-0x80]
0000000000032560	add	x26, x26, #0x1
0000000000032564	stur	xzr, [x29, #-0x80]
0000000000032568	cbz	x0, 0x32574
000000000003256c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000032570	bl	_mi_free
0000000000032574	mov	x25, x19
0000000000032578	cbnz	x28, 0x324c4
000000000003257c	b	0x325a4
0000000000032580	add	x26, x26, #0x1
0000000000032584	stur	xzr, [x29, #-0x80]
0000000000032588	mov	x27, x19
000000000003258c	mov	x25, x19
0000000000032590	cbnz	x28, 0x324c4
0000000000032594	b	0x325a4
0000000000032598	mov	x27, #0x0
000000000003259c	mov	x19, #0x0
00000000000325a0	mov	x26, #0x0
00000000000325a4	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
00000000000325a8	ldr	x25, [sp, #0x50]
00000000000325ac	ldr	x21, [x25, #0xa0]
00000000000325b0	mov	x0, x21
00000000000325b4	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
00000000000325b8	ldr	x8, [sp, #0x78]
00000000000325bc	str	x8, [x25, #0x98]
00000000000325c0	ldr	x0, [sp, #0x30]
00000000000325c4	bl	0x5593c ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
00000000000325c8	mov	x0, x21
00000000000325cc	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000325d0	ldr	x21, [x25, #0x168]
00000000000325d4	add	x0, x21, #0x58
00000000000325d8	str	x0, [sp, #0xa0]
00000000000325dc	strb	w24, [sp, #0xa8]
00000000000325e0	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
00000000000325e4	adr	x28, #0x6221c
00000000000325e8	nop
00000000000325ec	cbnz	x26, 0x325f8
00000000000325f0	ldr	x8, [x21]
00000000000325f4	cbz	x8, 0x32690
00000000000325f8	add	x28, x21, #0x28
00000000000325fc	ldrb	w8, [x21, #0xc1]
0000000000032600	cbnz	w8, 0x32618
0000000000032604	add	x1, sp, #0xa0
0000000000032608	mov	x0, x28
000000000003260c	bl	0x55954 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
0000000000032610	ldrb	w8, [x21, #0xc1]
0000000000032614	cbz	w8, 0x32604
0000000000032618	add	x0, x21, #0x140
000000000003261c	str	x0, [sp, #0x58]
0000000000032620	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000032624	ldr	x8, [x21]
0000000000032628	cbnz	x8, 0x32800
000000000003262c	movi.16b	v0, #0x0
0000000000032630	stp	q0, q0, [sp, #0xb0]
0000000000032634	add	x0, sp, #0xb0
0000000000032638	adr	x1, #0x2a273 ; literal pool for: "GC finalizer processor"
000000000003263c	nop
0000000000032640	mov	w2, #0x16
0000000000032644	bl	__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_
0000000000032648	mov	w0, #0x8
000000000003264c	bl	0x55a2c ; symbol stub for: __Znwm
0000000000032650	mov	x25, x0
0000000000032654	bl	0x55900 ; symbol stub for: __ZNSt3__115__thread_structC1Ev
0000000000032658	mov	w0, #0x38
000000000003265c	bl	0x55a2c ; symbol stub for: __Znwm
0000000000032660	mov	x22, x0
0000000000032664	sturb	wzr, [x29, #-0x80]
0000000000032668	sturb	wzr, [x29, #-0x68]
000000000003266c	ldrb	w8, [sp, #0xc8]
0000000000032670	cbz	w8, 0x32708
0000000000032674	ldrsb	w8, [sp, #0xc7]
0000000000032678	tbnz	w8, #0x1f, 0x32710
000000000003267c	ldr	q0, [sp, #0xb0]
0000000000032680	stur	q0, [x29, #-0x80]
0000000000032684	ldr	x8, [sp, #0xc0]
0000000000032688	stur	x8, [x29, #-0x70]
000000000003268c	b	0x32768
0000000000032690	ldr	x8, [sp, #0x78]
0000000000032694	stur	x8, [x29, #-0x80]
0000000000032698	ldr	x0, [x21, #0xb0]
000000000003269c	cbz	x0, 0x3289c
00000000000326a0	ldr	x8, [x0]
00000000000326a4	ldr	x8, [x8, #0x30]
00000000000326a8	sub	x1, x29, #0x80
00000000000326ac	blr	x8
00000000000326b0	ldrb	w8, [sp, #0xa8]
00000000000326b4	cbz	w8, 0x326c0
00000000000326b8	ldr	x0, [sp, #0xa0]
00000000000326bc	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000326c0	mov	x8, #0xf7cf
00000000000326c4	movk	x8, #0xe353, lsl #16
00000000000326c8	movk	x8, #0x9ba5, lsl #32
00000000000326cc	movk	x8, #0x20c4, lsl #48
00000000000326d0	ldr	x9, [sp, #0x60]
00000000000326d4	smulh	x8, x9, x8
00000000000326d8	asr	x9, x8, #7
00000000000326dc	add	x8, x9, x8, lsr #63
00000000000326e0	str	x8, [x25, #0x10]
00000000000326e4	cbz	x27, 0x31f20
00000000000326e8	ldr	x19, [x27]
00000000000326ec	str	xzr, [x27]
00000000000326f0	mov	x0, x27
00000000000326f4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
00000000000326f8	bl	_mi_free
00000000000326fc	mov	x27, x19
0000000000032700	cbnz	x19, 0x326e8
0000000000032704	b	0x31f20
0000000000032708	mov	w8, #0x1
000000000003270c	b	0x32770
0000000000032710	str	x25, [sp, #0x18]
0000000000032714	ldp	x1, x25, [sp, #0xb0]
0000000000032718	cmp	x25, #0x16
000000000003271c	b.hi	0x3272c
0000000000032720	sub	x0, x29, #0x80
0000000000032724	sturb	w25, [x29, #-0x69]
0000000000032728	b	0x3275c
000000000003272c	str	x1, [sp, #0x10]
0000000000032730	cmn	x25, #0x10
0000000000032734	b.hs	0x328a4
0000000000032738	add	x8, x25, #0x10
000000000003273c	and	x0, x8, #0xfffffffffffffff0
0000000000032740	str	x0, [sp, #0x8]
0000000000032744	mov	w1, #0x1
0000000000032748	bl	0x55aec ; symbol stub for: _calloc
000000000003274c	ldp	x8, x1, [sp, #0x8]
0000000000032750	orr	x8, x8, #0x8000000000000000
0000000000032754	stp	x25, x8, [x29, #-0x78]
0000000000032758	stur	x0, [x29, #-0x80]
000000000003275c	add	x2, x25, #0x1
0000000000032760	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000032764	ldr	x25, [sp, #0x18]
0000000000032768	mov	w8, #0x0
000000000003276c	sturb	w24, [x29, #-0x68]
0000000000032770	adr	x9, #0x4a8
0000000000032774	nop
0000000000032778	stp	x25, x9, [x22]
000000000003277c	mov	x25, x22
0000000000032780	strb	wzr, [x25, #0x10]!
0000000000032784	strb	wzr, [x22, #0x28]
0000000000032788	tbnz	w8, #0x0, 0x327a8
000000000003278c	ldur	q0, [x29, #-0x80]
0000000000032790	str	q0, [x25]
0000000000032794	ldur	x8, [x29, #-0x70]
0000000000032798	str	x8, [x25, #0x10]
000000000003279c	stp	xzr, xzr, [x29, #-0x78]
00000000000327a0	stur	xzr, [x29, #-0x80]
00000000000327a4	strb	w24, [x22, #0x28]
00000000000327a8	str	x21, [x22, #0x30]
00000000000327ac	sub	x0, x29, #0x88
00000000000327b0	mov	x1, #0x0
00000000000327b4	adr	x2, #0x7a8
00000000000327b8	nop
00000000000327bc	mov	x3, x22
00000000000327c0	bl	0x55d74 ; symbol stub for: _pthread_create
00000000000327c4	cbnz	w0, 0x3288c
00000000000327c8	ldr	x8, [x21]
00000000000327cc	cbnz	x8, 0x32888
00000000000327d0	ldur	x8, [x29, #-0x88]
00000000000327d4	str	x8, [x21]
00000000000327d8	stur	xzr, [x29, #-0x88]
00000000000327dc	sub	x0, x29, #0x88
00000000000327e0	bl	0x559cc ; symbol stub for: __ZNSt3__16threadD1Ev
00000000000327e4	ldrb	w8, [sp, #0xc8]
00000000000327e8	ldr	x25, [sp, #0x50]
00000000000327ec	cbz	w8, 0x32800
00000000000327f0	ldrsb	w8, [sp, #0xc7]
00000000000327f4	tbz	w8, #0x1f, 0x32800
00000000000327f8	ldr	x0, [sp, #0xb0]
00000000000327fc	bl	0x55b7c ; symbol stub for: _free
0000000000032800	ldr	x0, [sp, #0x58]
0000000000032804	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000032808	cbz	x27, 0x32844
000000000003280c	ldr	x8, [x21, #0x10]
0000000000032810	cbz	x8, 0x32830
0000000000032814	ldr	x8, [x21, #0x18]
0000000000032818	ldr	x0, [x8]
000000000003281c	str	x27, [x8]
0000000000032820	cbz	x0, 0x32834
0000000000032824	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000032828	bl	_mi_free
000000000003282c	b	0x32834
0000000000032830	str	x27, [x21, #0x10]
0000000000032834	mov	x27, #0x0
0000000000032838	ldr	x8, [x21, #0x20]
000000000003283c	add	x8, x8, x26
0000000000032840	stp	x19, x8, [x21, #0x18]
0000000000032844	ldr	x8, [sp, #0x78]
0000000000032848	str	x8, [x21, #0xb8]
000000000003284c	mov	x0, x28
0000000000032850	bl	0x5593c ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000032854	adr	x28, #0x61fac
0000000000032858	nop
000000000003285c	ldrb	w8, [sp, #0xa8]
0000000000032860	cbnz	w8, 0x326b8
0000000000032864	b	0x326c0
0000000000032868	ldp	x29, x30, [sp, #0x160]
000000000003286c	ldp	x20, x19, [sp, #0x150]
0000000000032870	ldp	x22, x21, [sp, #0x140]
0000000000032874	ldp	x24, x23, [sp, #0x130]
0000000000032878	ldp	x26, x25, [sp, #0x120]
000000000003287c	ldp	x28, x27, [sp, #0x110]
0000000000032880	add	sp, sp, #0x170
0000000000032884	ret
0000000000032888	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
000000000003288c	adr	x1, #0x2a036 ; literal pool for: "thread constructor failed"
0000000000032890	nop
0000000000032894	bl	0x55978 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000032898	b	0x328ac
000000000003289c	bl	__ZNSt3__125__throw_bad_function_callEv
00000000000328a0	b	0x328ac
00000000000328a4	sub	x0, x29, #0x80
00000000000328a8	bl	0x558c4 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
00000000000328ac	brk	#0x1
00000000000328b0	bl	___clang_call_terminate
00000000000328b4	mov	x19, x0
00000000000328b8	ldurb	w8, [x29, #-0x68]
00000000000328bc	cbz	w8, 0x328dc
00000000000328c0	sub	x0, x29, #0x80
00000000000328c4	bl	__ZN6kotlin2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEv.cold.1
00000000000328c8	b	0x328dc
00000000000328cc	b	0x328d0
00000000000328d0	mov	x19, x0
00000000000328d4	ldrb	w8, [sp, #0xa8]
00000000000328d8	cbnz	w8, 0x328e4
00000000000328dc	mov	x0, x19
00000000000328e0	bl	___clang_call_terminate
00000000000328e4	ldr	x0, [sp, #0xa0]
00000000000328e8	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000328ec	mov	x0, x19
00000000000328f0	bl	___clang_call_terminate
00000000000328f4	bl	___clang_call_terminate
00000000000328f8	bl	___clang_call_terminate
00000000000328fc	bl	___clang_call_terminate
0000000000032900	b	0x32904
0000000000032904	mov	x19, x0
0000000000032908	ldrb	w8, [x22, #0x28]
000000000003290c	cbz	w8, 0x32920
0000000000032910	ldrsb	w8, [x22, #0x27]
0000000000032914	tbz	w8, #0x1f, 0x32920
0000000000032918	ldr	x0, [x25]
000000000003291c	bl	0x55b7c ; symbol stub for: _free
0000000000032920	ldr	x0, [x22]
0000000000032924	str	xzr, [x22]
0000000000032928	cbz	x0, 0x32954
000000000003292c	bl	0x5590c ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000032930	bl	0x55a20 ; symbol stub for: __ZdlPv
0000000000032934	b	0x32954
0000000000032938	mov	x19, x0
000000000003293c	mov	x22, x25
0000000000032940	mov	x0, x25
0000000000032944	bl	0x5590c ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000032948	b	0x32954
000000000003294c	mov	x22, x25
0000000000032950	mov	x19, x0
0000000000032954	mov	x0, x22
0000000000032958	bl	0x55a20 ; symbol stub for: __ZdlPv
000000000003295c	b	0x32964
0000000000032960	mov	x19, x0
0000000000032964	ldrb	w8, [sp, #0xc8]
0000000000032968	cbz	w8, 0x3297c
000000000003296c	ldrsb	w8, [sp, #0xc7]
0000000000032970	tbz	w8, #0x1f, 0x3297c
0000000000032974	ldr	x0, [sp, #0xb0]
0000000000032978	bl	0x55b7c ; symbol stub for: _free
000000000003297c	ldr	x0, [sp, #0x58]
0000000000032980	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000032984	mov	x0, x19
0000000000032988	bl	___clang_call_terminate
000000000003298c	bl	___clang_call_terminate
0000000000032990	bl	___clang_call_terminate
0000000000032994	bl	___clang_call_terminate
0000000000032998	mov	x19, x0
000000000003299c	cbz	x27, 0x329bc
00000000000329a0	ldr	x20, [x27]
00000000000329a4	str	xzr, [x27]
00000000000329a8	mov	x0, x27
00000000000329ac	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
00000000000329b0	bl	_mi_free
00000000000329b4	mov	x27, x20
00000000000329b8	cbnz	x20, 0x329a0
00000000000329bc	stlrb	wzr, [x23]
00000000000329c0	mov	x0, x19
00000000000329c4	bl	___clang_call_terminate
00000000000329c8	bl	___clang_call_terminate
00000000000329cc	bl	___clang_call_terminate
00000000000329d0	bl	___clang_call_terminate
00000000000329d4	bl	___clang_call_terminate
00000000000329d8	bl	___clang_call_terminate
00000000000329dc	bl	___clang_call_terminate
00000000000329e0	bl	___clang_call_terminate
00000000000329e4	bl	___clang_call_terminate
__ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvN6kotlin12ScopedThread10attributesEOZNS7_2gc22ConcurrentMarkAndSweepC1ERNS7_2mm13ObjectFactoryISB_EERNSA_11GCSchedulerEE3$_3ES9_SI_EEEEEPvSN_:
00000000000329e8	sub	sp, sp, #0x40
00000000000329ec	stp	x20, x19, [sp, #0x20]
00000000000329f0	stp	x29, x30, [sp, #0x30]
00000000000329f4	add	x29, sp, #0x30
00000000000329f8	mov	x19, x0
00000000000329fc	bl	0x5596c ; symbol stub for: __ZNSt3__119__thread_local_dataEv
0000000000032a00	ldr	x1, [x19]
0000000000032a04	str	xzr, [x19]
0000000000032a08	ldr	x0, [x0]
0000000000032a0c	bl	0x55e04 ; symbol stub for: _pthread_setspecific
0000000000032a10	add	x1, x19, #0x30
0000000000032a14	ldr	x8, [x19, #0x8]
0000000000032a18	strb	wzr, [sp]
0000000000032a1c	strb	wzr, [sp, #0x18]
0000000000032a20	ldrb	w9, [x19, #0x28]
0000000000032a24	cbz	w9, 0x32a48
0000000000032a28	ldr	q0, [x19, #0x10]
0000000000032a2c	str	q0, [sp]
0000000000032a30	ldr	x9, [x19, #0x20]
0000000000032a34	str	x9, [sp, #0x10]
0000000000032a38	stp	xzr, xzr, [x19, #0x18]
0000000000032a3c	str	xzr, [x19, #0x10]
0000000000032a40	mov	w9, #0x1
0000000000032a44	strb	w9, [sp, #0x18]
0000000000032a48	mov	x0, sp
0000000000032a4c	blr	x8
0000000000032a50	ldrb	w8, [sp, #0x18]
0000000000032a54	cbz	w8, 0x32a68
0000000000032a58	ldrsb	w8, [sp, #0x17]
0000000000032a5c	tbz	w8, #0x1f, 0x32a68
0000000000032a60	ldr	x0, [sp]
0000000000032a64	bl	0x55b7c ; symbol stub for: _free
0000000000032a68	ldrb	w8, [x19, #0x28]
0000000000032a6c	cbz	w8, 0x32a80
0000000000032a70	ldrsb	w8, [x19, #0x27]
0000000000032a74	tbz	w8, #0x1f, 0x32a80
0000000000032a78	ldr	x0, [x19, #0x10]
0000000000032a7c	bl	0x55b7c ; symbol stub for: _free
0000000000032a80	ldr	x0, [x19]
0000000000032a84	str	xzr, [x19]
0000000000032a88	cbz	x0, 0x32a94
0000000000032a8c	bl	0x5590c ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000032a90	bl	0x55a20 ; symbol stub for: __ZdlPv
0000000000032a94	mov	x0, x19
0000000000032a98	bl	0x55a20 ; symbol stub for: __ZdlPv
0000000000032a9c	mov	x0, #0x0
0000000000032aa0	ldp	x29, x30, [sp, #0x30]
0000000000032aa4	ldp	x20, x19, [sp, #0x20]
0000000000032aa8	add	sp, sp, #0x40
0000000000032aac	ret
0000000000032ab0	mov	x20, x0
0000000000032ab4	ldrb	w8, [sp, #0x18]
0000000000032ab8	cbz	w8, 0x32ae0
0000000000032abc	ldrsb	w8, [sp, #0x17]
0000000000032ac0	tbz	w8, #0x1f, 0x32ae0
0000000000032ac4	ldr	x0, [sp]
0000000000032ac8	bl	0x55b7c ; symbol stub for: _free
0000000000032acc	b	0x32ae0
0000000000032ad0	mov	x20, x0
0000000000032ad4	b	0x32ae0
0000000000032ad8	mov	x20, x0
0000000000032adc	cbz	x19, 0x32b14
0000000000032ae0	ldrb	w8, [x19, #0x28]
0000000000032ae4	cbz	w8, 0x32af8
0000000000032ae8	ldrsb	w8, [x19, #0x27]
0000000000032aec	tbz	w8, #0x1f, 0x32af8
0000000000032af0	ldr	x0, [x19, #0x10]
0000000000032af4	bl	0x55b7c ; symbol stub for: _free
0000000000032af8	ldr	x0, [x19]
0000000000032afc	str	xzr, [x19]
0000000000032b00	cbz	x0, 0x32b0c
0000000000032b04	bl	0x5590c ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000032b08	bl	0x55a20 ; symbol stub for: __ZdlPv
0000000000032b0c	mov	x0, x19
0000000000032b10	bl	0x55a20 ; symbol stub for: __ZdlPv
0000000000032b14	mov	x0, x20
0000000000032b18	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZN13GCStateHolderD1Ev:
0000000000032b1c	stp	x20, x19, [sp, #-0x20]!
0000000000032b20	stp	x29, x30, [sp, #0x10]
0000000000032b24	add	x29, sp, #0x10
0000000000032b28	mov	x19, x0
0000000000032b2c	add	x0, x0, #0x110
0000000000032b30	bl	0x55960 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
0000000000032b34	add	x0, x19, #0xd0
0000000000032b38	bl	0x55960 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
0000000000032b3c	add	x0, x19, #0x90
0000000000032b40	bl	0x55960 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
0000000000032b44	add	x0, x19, #0x50
0000000000032b48	bl	0x55960 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
0000000000032b4c	mov	x0, x19
0000000000032b50	ldp	x29, x30, [sp, #0x10]
0000000000032b54	ldp	x20, x19, [sp], #0x20
0000000000032b58	b	0x5599c ; symbol stub for: __ZNSt3__15mutexD1Ev
__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE13ExtractUnsafeEPNS9_4NodeE:
0000000000032b5c	stp	x22, x21, [sp, #-0x30]!
0000000000032b60	stp	x20, x19, [sp, #0x10]
0000000000032b64	stp	x29, x30, [sp, #0x20]
0000000000032b68	add	x29, sp, #0x20
0000000000032b6c	mov	x20, x1
0000000000032b70	mov	x19, x0
0000000000032b74	cbz	x2, 0x32bb0
0000000000032b78	mov	x21, x2
0000000000032b7c	ldr	x22, [x2]
0000000000032b80	str	xzr, [x2]
0000000000032b84	ldr	x8, [x22]
0000000000032b88	str	xzr, [x22]
0000000000032b8c	ldr	x0, [x2]
0000000000032b90	str	x8, [x2]
0000000000032b94	cbz	x0, 0x32ba4
0000000000032b98	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000032b9c	bl	_mi_free
0000000000032ba0	ldr	x8, [x21]
0000000000032ba4	mov	x0, x21
0000000000032ba8	cbnz	x8, 0x32bf4
0000000000032bac	b	0x32bec
0000000000032bb0	ldr	x22, [x20]
0000000000032bb4	str	xzr, [x20]
0000000000032bb8	ldr	x8, [x22]
0000000000032bbc	str	xzr, [x22]
0000000000032bc0	ldr	x0, [x20]
0000000000032bc4	str	x8, [x20]
0000000000032bc8	cbz	x0, 0x32bd8
0000000000032bcc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000032bd0	bl	_mi_free
0000000000032bd4	ldr	x8, [x20]
0000000000032bd8	cbz	x8, 0x32be4
0000000000032bdc	mov	x21, x20
0000000000032be0	b	0x32bf4
0000000000032be4	mov	x21, #0x0
0000000000032be8	mov	x0, x20
0000000000032bec	str	x21, [x20, #0x8]
0000000000032bf0	mov	x21, x0
0000000000032bf4	ldr	x8, [x20, #0x10]
0000000000032bf8	sub	x8, x8, #0x1
0000000000032bfc	str	x8, [x20, #0x10]
0000000000032c00	ldr	x8, [x21]
0000000000032c04	stp	x22, x8, [x19]
0000000000032c08	ldp	x29, x30, [sp, #0x20]
0000000000032c0c	ldp	x20, x19, [sp, #0x10]
0000000000032c10	ldp	x22, x21, [sp], #0x30
0000000000032c14	ret
__ZN6kotlin12ScopedThread3RunIZNS_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOS7_DpOS8_:
0000000000032c18	sub	sp, sp, #0xc0
0000000000032c1c	stp	x28, x27, [sp, #0x60]
0000000000032c20	stp	x26, x25, [sp, #0x70]
0000000000032c24	stp	x24, x23, [sp, #0x80]
0000000000032c28	stp	x22, x21, [sp, #0x90]
0000000000032c2c	stp	x20, x19, [sp, #0xa0]
0000000000032c30	stp	x29, x30, [sp, #0xb0]
0000000000032c34	add	x29, sp, #0xb0
0000000000032c38	mov	x19, x1
0000000000032c3c	ldrb	w8, [x0, #0x18]
0000000000032c40	cbz	w8, 0x32c54
0000000000032c44	ldrsb	w8, [x0, #0x17]
0000000000032c48	tbz	w8, #0x1f, 0x32c50
0000000000032c4c	ldr	x0, [x0]
0000000000032c50	bl	0x55df8 ; symbol stub for: _pthread_setname_np
0000000000032c54	ldr	x28, [x19]
0000000000032c58	bl	_Kotlin_initRuntimeIfNeeded
0000000000032c5c	add	x19, x28, #0xc8
0000000000032c60	mov	x0, x19
0000000000032c64	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000032c68	mov	w23, #0x1
0000000000032c6c	strb	w23, [x28, #0x138]
0000000000032c70	str	x19, [sp, #0x18]
0000000000032c74	mov	x0, x19
0000000000032c78	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000032c7c	add	x0, x28, #0x108
0000000000032c80	str	x0, [sp, #0x10]
0000000000032c84	bl	0x5593c ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000032c88	mov	x21, #0x0
0000000000032c8c	add	x25, x28, #0x58
0000000000032c90	add	x8, sp, #0x48
0000000000032c94	add	x9, x8, #0x8
0000000000032c98	add	x24, x28, #0x28
0000000000032c9c	add	x8, sp, #0x28
0000000000032ca0	add	x8, x8, #0x8
0000000000032ca4	stp	x8, x9, [sp]
0000000000032ca8	add	x8, x28, #0x18
0000000000032cac	str	x8, [sp, #0x20]
0000000000032cb0	adrp	x8, 72 ; 0x7a000
0000000000032cb4	add	x8, x8, #0x4e0
0000000000032cb8	ldr	x19, [x8]
0000000000032cbc	str	x25, [sp, #0x48]
0000000000032cc0	strb	w23, [sp, #0x50]
0000000000032cc4	mov	x0, x25
0000000000032cc8	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000032ccc	ldr	x20, [x28, #0x20]
0000000000032cd0	cbnz	x20, 0x32cfc
0000000000032cd4	ldr	x8, [x28, #0xb8]
0000000000032cd8	cmp	x8, x21
0000000000032cdc	b.ne	0x32ec0
0000000000032ce0	ldrb	w8, [x28, #0xc0]
0000000000032ce4	cbnz	w8, 0x32ec8
0000000000032ce8	add	x1, sp, #0x48
0000000000032cec	mov	x0, x24
0000000000032cf0	bl	0x55954 ; symbol stub for: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
0000000000032cf4	ldr	x20, [x28, #0x20]
0000000000032cf8	cbz	x20, 0x32cd4
0000000000032cfc	ldp	x8, x9, [x28, #0x10]
0000000000032d00	str	xzr, [x28, #0x10]
0000000000032d04	ldr	x21, [x28, #0xb8]
0000000000032d08	ldrb	w10, [sp, #0x50]
0000000000032d0c	stp	x9, x20, [sp, #0x38]
0000000000032d10	str	x8, [sp, #0x30]
0000000000032d14	ldr	x8, [sp, #0x20]
0000000000032d18	stp	xzr, xzr, [x8]
0000000000032d1c	cbz	w10, 0x32f24
0000000000032d20	ldr	x0, [sp, #0x48]
0000000000032d24	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000032d28	strb	wzr, [sp, #0x50]
0000000000032d2c	cbz	x20, 0x32db0
0000000000032d30	adrp	x0, 72 ; 0x7a000
0000000000032d34	add	x0, x0, #0x4e0
0000000000032d38	blr	x19
0000000000032d3c	ldr	x22, [x0]
0000000000032d40	add	x26, x22, #0x138
0000000000032d44	ldaxr	w20, [x26]
0000000000032d48	stlxr	w8, wzr, [x26]
0000000000032d4c	cbnz	w8, 0x32d44
0000000000032d50	cmp	w20, #0x1
0000000000032d54	b.ne	0x32d70
0000000000032d58	adr	x8, #0x617b1
0000000000032d5c	nop
0000000000032d60	ldarb	w8, [x8]
0000000000032d64	tbz	w8, #0x0, 0x32d70
0000000000032d68	mov	x0, x26
0000000000032d6c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000032d70	ldr	x23, [sp, #0x30]
0000000000032d74	cbnz	x23, 0x32e18
0000000000032d78	mov	w23, #0x1
0000000000032d7c	cbz	x22, 0x32db0
0000000000032d80	ldaxr	w8, [x26]
0000000000032d84	stlxr	w9, w20, [x26]
0000000000032d88	cbnz	w9, 0x32d80
0000000000032d8c	cbnz	w20, 0x32db0
0000000000032d90	cmp	w8, #0x1
0000000000032d94	b.ne	0x32db0
0000000000032d98	adr	x8, #0x61771
0000000000032d9c	nop
0000000000032da0	ldarb	w8, [x8]
0000000000032da4	tbz	w8, #0x0, 0x32db0
0000000000032da8	mov	x0, x26
0000000000032dac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000032db0	str	x21, [sp, #0x58]
0000000000032db4	ldr	x0, [x28, #0xb0]
0000000000032db8	cbz	x0, 0x32f1c
0000000000032dbc	ldr	x8, [x0]
0000000000032dc0	ldr	x8, [x8, #0x30]
0000000000032dc4	add	x1, sp, #0x58
0000000000032dc8	blr	x8
0000000000032dcc	ldr	x0, [sp, #0x30]
0000000000032dd0	str	xzr, [sp, #0x30]
0000000000032dd4	cbz	x0, 0x32ea8
0000000000032dd8	ldr	x20, [x0]
0000000000032ddc	str	xzr, [x0]
0000000000032de0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000032de4	bl	_mi_free
0000000000032de8	mov	x0, x20
0000000000032dec	cbnz	x20, 0x32dd8
0000000000032df0	ldr	x0, [sp, #0x30]
0000000000032df4	str	xzr, [sp, #0x30]
0000000000032df8	cbz	x0, 0x32e04
0000000000032dfc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000032e00	bl	_mi_free
0000000000032e04	ldrb	w8, [sp, #0x50]
0000000000032e08	cbnz	w8, 0x32eb4
0000000000032e0c	b	0x32cbc
0000000000032e10	ldr	x23, [x23]
0000000000032e14	cbz	x23, 0x32d78
0000000000032e18	add	x27, x23, #0x10
0000000000032e1c	ldr	x8, [x23, #0x10]
0000000000032e20	and	x8, x8, #0xfffffffffffffffc
0000000000032e24	ldr	x1, [x8]
0000000000032e28	ldrb	w8, [x1, #0x58]
0000000000032e2c	tbnz	w8, #0x6, 0x32e4c
0000000000032e30	ldar	x8, [x27]
0000000000032e34	and	x8, x8, #0xfffffffffffffffc
0000000000032e38	ldr	x9, [x8]
0000000000032e3c	cmp	x8, #0x0
0000000000032e40	ccmp	x9, x8, #0x4, ne
0000000000032e44	b.eq	0x32e10
0000000000032e48	b	0x32e6c
0000000000032e4c	mov	x0, x27
0000000000032e50	bl	__ZN12_GLOBAL__N_121RunFinalizerHooksImplEP9ObjHeaderPK8TypeInfo
0000000000032e54	ldar	x8, [x27]
0000000000032e58	and	x8, x8, #0xfffffffffffffffc
0000000000032e5c	ldr	x9, [x8]
0000000000032e60	cmp	x8, #0x0
0000000000032e64	ccmp	x9, x8, #0x4, ne
0000000000032e68	b.eq	0x32e10
0000000000032e6c	ldar	x8, [x27]
0000000000032e70	and	x8, x8, #0xfffffffffffffffc
0000000000032e74	ldr	x9, [x8]
0000000000032e78	cmp	x9, x8
0000000000032e7c	csel	x27, xzr, x8, eq
0000000000032e80	mov	x0, x27
0000000000032e84	bl	__ZN6kotlin2mm15ExtraObjectData9UninstallEv
0000000000032e88	adrp	x0, 72 ; 0x7a000
0000000000032e8c	add	x0, x0, #0x4e0
0000000000032e90	blr	x19
0000000000032e94	ldr	x8, [x0]
0000000000032e98	add	x0, x8, #0x8
0000000000032e9c	mov	x1, x27
0000000000032ea0	bl	__ZN6kotlin2mm22ExtraObjectDataFactory22DestroyExtraObjectDataEPNS0_10ThreadDataERNS0_15ExtraObjectDataE
0000000000032ea4	b	0x32e10
0000000000032ea8	str	xzr, [sp, #0x30]
0000000000032eac	ldrb	w8, [sp, #0x50]
0000000000032eb0	cbz	w8, 0x32cbc
0000000000032eb4	ldr	x0, [sp, #0x48]
0000000000032eb8	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000032ebc	b	0x32cbc
0000000000032ec0	mov	x20, #0x0
0000000000032ec4	b	0x32cfc
0000000000032ec8	strb	wzr, [x28, #0xc1]
0000000000032ecc	ldrb	w8, [sp, #0x50]
0000000000032ed0	cbz	w8, 0x32edc
0000000000032ed4	ldr	x0, [sp, #0x48]
0000000000032ed8	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000032edc	ldr	x19, [sp, #0x18]
0000000000032ee0	mov	x0, x19
0000000000032ee4	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000032ee8	strb	wzr, [x28, #0x138]
0000000000032eec	mov	x0, x19
0000000000032ef0	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000032ef4	ldr	x0, [sp, #0x10]
0000000000032ef8	bl	0x5593c ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000032efc	ldp	x29, x30, [sp, #0xb0]
0000000000032f00	ldp	x20, x19, [sp, #0xa0]
0000000000032f04	ldp	x22, x21, [sp, #0x90]
0000000000032f08	ldp	x24, x23, [sp, #0x80]
0000000000032f0c	ldp	x26, x25, [sp, #0x70]
0000000000032f10	ldp	x28, x27, [sp, #0x60]
0000000000032f14	add	sp, sp, #0xc0
0000000000032f18	ret
0000000000032f1c	bl	__ZNSt3__125__throw_bad_function_callEv
0000000000032f20	b	0x32f34
0000000000032f24	adr	x1, #0x299b8 ; literal pool for: "unique_lock::unlock: not locked"
0000000000032f28	nop
0000000000032f2c	mov	w0, #0x1
0000000000032f30	bl	0x55978 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000032f34	brk	#0x1
0000000000032f38	bl	___clang_call_terminate
0000000000032f3c	b	0x32f40
0000000000032f40	mov	x19, x0
0000000000032f44	ldr	x3, [sp, #0x30]
0000000000032f48	add	x0, sp, #0x48
0000000000032f4c	ldp	x2, x1, [sp]
0000000000032f50	bl	__ZN6kotlin12ScopedThread3RunIZNS_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOS7_DpOS8_.cold.1
0000000000032f54	mov	x0, x19
0000000000032f58	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEPFvN6kotlin12ScopedThread10attributesEOZNS7_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0ES9_SC_EEEEEPvSH_:
0000000000032f5c	sub	sp, sp, #0x40
0000000000032f60	stp	x20, x19, [sp, #0x20]
0000000000032f64	stp	x29, x30, [sp, #0x30]
0000000000032f68	add	x29, sp, #0x30
0000000000032f6c	mov	x19, x0
0000000000032f70	bl	0x5596c ; symbol stub for: __ZNSt3__119__thread_local_dataEv
0000000000032f74	ldr	x1, [x19]
0000000000032f78	str	xzr, [x19]
0000000000032f7c	ldr	x0, [x0]
0000000000032f80	bl	0x55e04 ; symbol stub for: _pthread_setspecific
0000000000032f84	add	x1, x19, #0x30
0000000000032f88	ldr	x8, [x19, #0x8]
0000000000032f8c	strb	wzr, [sp]
0000000000032f90	strb	wzr, [sp, #0x18]
0000000000032f94	ldrb	w9, [x19, #0x28]
0000000000032f98	cbz	w9, 0x32fbc
0000000000032f9c	ldr	q0, [x19, #0x10]
0000000000032fa0	str	q0, [sp]
0000000000032fa4	ldr	x9, [x19, #0x20]
0000000000032fa8	str	x9, [sp, #0x10]
0000000000032fac	stp	xzr, xzr, [x19, #0x18]
0000000000032fb0	str	xzr, [x19, #0x10]
0000000000032fb4	mov	w9, #0x1
0000000000032fb8	strb	w9, [sp, #0x18]
0000000000032fbc	mov	x0, sp
0000000000032fc0	blr	x8
0000000000032fc4	ldrb	w8, [sp, #0x18]
0000000000032fc8	cbz	w8, 0x32fdc
0000000000032fcc	ldrsb	w8, [sp, #0x17]
0000000000032fd0	tbz	w8, #0x1f, 0x32fdc
0000000000032fd4	ldr	x0, [sp]
0000000000032fd8	bl	0x55b7c ; symbol stub for: _free
0000000000032fdc	ldrb	w8, [x19, #0x28]
0000000000032fe0	cbz	w8, 0x32ff4
0000000000032fe4	ldrsb	w8, [x19, #0x27]
0000000000032fe8	tbz	w8, #0x1f, 0x32ff4
0000000000032fec	ldr	x0, [x19, #0x10]
0000000000032ff0	bl	0x55b7c ; symbol stub for: _free
0000000000032ff4	ldr	x0, [x19]
0000000000032ff8	str	xzr, [x19]
0000000000032ffc	cbz	x0, 0x33008
0000000000033000	bl	0x5590c ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000033004	bl	0x55a20 ; symbol stub for: __ZdlPv
0000000000033008	mov	x0, x19
000000000003300c	bl	0x55a20 ; symbol stub for: __ZdlPv
0000000000033010	mov	x0, #0x0
0000000000033014	ldp	x29, x30, [sp, #0x30]
0000000000033018	ldp	x20, x19, [sp, #0x20]
000000000003301c	add	sp, sp, #0x40
0000000000033020	ret
0000000000033024	mov	x20, x0
0000000000033028	ldrb	w8, [sp, #0x18]
000000000003302c	cbz	w8, 0x33054
0000000000033030	ldrsb	w8, [sp, #0x17]
0000000000033034	tbz	w8, #0x1f, 0x33054
0000000000033038	ldr	x0, [sp]
000000000003303c	bl	0x55b7c ; symbol stub for: _free
0000000000033040	b	0x33054
0000000000033044	mov	x20, x0
0000000000033048	b	0x33054
000000000003304c	mov	x20, x0
0000000000033050	cbz	x19, 0x33088
0000000000033054	ldrb	w8, [x19, #0x28]
0000000000033058	cbz	w8, 0x3306c
000000000003305c	ldrsb	w8, [x19, #0x27]
0000000000033060	tbz	w8, #0x1f, 0x3306c
0000000000033064	ldr	x0, [x19, #0x10]
0000000000033068	bl	0x55b7c ; symbol stub for: _free
000000000003306c	ldr	x0, [x19]
0000000000033070	str	xzr, [x19]
0000000000033074	cbz	x0, 0x33080
0000000000033078	bl	0x5590c ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000003307c	bl	0x55a20 ; symbol stub for: __ZdlPv
0000000000033080	mov	x0, x19
0000000000033084	bl	0x55a20 ; symbol stub for: __ZdlPv
0000000000033088	mov	x0, x20
000000000003308c	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEED1Ev:
0000000000033090	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEED0Ev:
0000000000033094	b	0x55a20 ; symbol stub for: __ZdlPv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE7__cloneEv:
0000000000033098	stp	x20, x19, [sp, #-0x20]!
000000000003309c	stp	x29, x30, [sp, #0x10]
00000000000330a0	add	x29, sp, #0x10
00000000000330a4	mov	x19, x0
00000000000330a8	mov	w0, #0x10
00000000000330ac	bl	0x55a2c ; symbol stub for: __Znwm
00000000000330b0	ldr	x8, [x19, #0x8]
00000000000330b4	adr	x9, #0x3e184
00000000000330b8	nop
00000000000330bc	stp	x9, x8, [x0]
00000000000330c0	ldp	x29, x30, [sp, #0x10]
00000000000330c4	ldp	x20, x19, [sp], #0x20
00000000000330c8	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE7__cloneEPNS0_6__baseISE_EE:
00000000000330cc	ldr	x8, [x0, #0x8]
00000000000330d0	adr	x9, #0x3e168
00000000000330d4	nop
00000000000330d8	stp	x9, x8, [x1]
00000000000330dc	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE7destroyEv:
00000000000330e0	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE18destroy_deallocateEv:
00000000000330e4	b	0x55a20 ; symbol stub for: __ZdlPv
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEEclEv:
00000000000330e8	ldr	x0, [x0, #0x8]
00000000000330ec	b	__ZZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerEENK3$_2clEv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE6targetERKSt9type_info:
00000000000330f0	stp	x20, x19, [sp, #-0x20]!
00000000000330f4	stp	x29, x30, [sp, #0x10]
00000000000330f8	add	x29, sp, #0x10
00000000000330fc	mov	x19, x0
0000000000033100	ldr	x9, [x1, #0x8]
0000000000033104	adr	x8, #0x25a92
0000000000033108	nop
000000000003310c	cmp	x9, x8
0000000000033110	b.ne	0x33124
0000000000033114	add	x0, x19, #0x8
0000000000033118	ldp	x29, x30, [sp, #0x10]
000000000003311c	ldp	x20, x19, [sp], #0x20
0000000000033120	ret
0000000000033124	tst	x9, x8
0000000000033128	b.lt	0x3313c
000000000003312c	mov	x0, #0x0
0000000000033130	ldp	x29, x30, [sp, #0x10]
0000000000033134	ldp	x20, x19, [sp], #0x20
0000000000033138	ret
000000000003313c	and	x0, x9, #0x7fffffffffffffff
0000000000033140	and	x1, x8, #0x7fffffffffffffff
0000000000033144	bl	0x55e64 ; symbol stub for: _strcmp
0000000000033148	cbz	w0, 0x33114
000000000003314c	mov	x0, #0x0
0000000000033150	ldp	x29, x30, [sp, #0x10]
0000000000033154	ldp	x20, x19, [sp], #0x20
0000000000033158	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_2NS_9allocatorISB_EEFvvEE11target_typeEv:
000000000003315c	adr	x0, #0x3e13c
0000000000033160	nop
0000000000033164	ret
__ZZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerEENK3$_2clEv:
0000000000033168	stp	x20, x19, [sp, #-0x20]!
000000000003316c	stp	x29, x30, [sp, #0x10]
0000000000033170	add	x29, sp, #0x10
0000000000033174	mov	x8, x0
0000000000033178	adrp	x0, 71 ; 0x7a000
000000000003317c	add	x0, x0, #0x4e0
0000000000033180	ldr	x9, [x0]
0000000000033184	blr	x9
0000000000033188	ldr	x19, [x0]
000000000003318c	cbz	x19, 0x331a8
0000000000033190	add	x9, x19, #0x138
0000000000033194	mov	w10, #0x1
0000000000033198	ldaxr	w20, [x9]
000000000003319c	stlxr	w11, w10, [x9]
00000000000331a0	cbnz	w11, 0x33198
00000000000331a4	b	0x331ac
00000000000331a8	mov	w20, #0x1
00000000000331ac	add	x0, x8, #0x18
00000000000331b0	bl	__ZN13GCStateHolder8scheduleEv
00000000000331b4	cbz	x19, 0x331e4
00000000000331b8	add	x0, x19, #0x138
00000000000331bc	ldaxr	w8, [x0]
00000000000331c0	stlxr	w9, w20, [x0]
00000000000331c4	cbnz	w9, 0x331bc
00000000000331c8	cbnz	w20, 0x331e4
00000000000331cc	cmp	w8, #0x1
00000000000331d0	b.ne	0x331e4
00000000000331d4	adr	x8, #0x61335
00000000000331d8	nop
00000000000331dc	ldarb	w8, [x8]
00000000000331e0	tbnz	w8, #0x0, 0x331f0
00000000000331e4	ldp	x29, x30, [sp, #0x10]
00000000000331e8	ldp	x20, x19, [sp], #0x20
00000000000331ec	ret
00000000000331f0	ldp	x29, x30, [sp, #0x10]
00000000000331f4	ldp	x20, x19, [sp], #0x20
00000000000331f8	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000331fc	mov	x9, x19
0000000000033200	mov	x19, x0
0000000000033204	cbz	x9, 0x3323c
0000000000033208	mov	x8, x9
000000000003320c	add	x0, x9, #0x138
0000000000033210	ldaxr	w8, [x0]
0000000000033214	stlxr	w9, w20, [x0]
0000000000033218	cbnz	w9, 0x33210
000000000003321c	cbnz	w20, 0x3323c
0000000000033220	cmp	w8, #0x1
0000000000033224	b.ne	0x3323c
0000000000033228	adr	x8, #0x612e1
000000000003322c	nop
0000000000033230	ldarb	w8, [x8]
0000000000033234	tbz	w8, #0x0, 0x3323c
0000000000033238	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000003323c	mov	x0, x19
0000000000033240	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEED1Ev:
0000000000033244	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEED0Ev:
0000000000033248	b	0x55a20 ; symbol stub for: __ZdlPv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE7__cloneEv:
000000000003324c	stp	x20, x19, [sp, #-0x20]!
0000000000033250	stp	x29, x30, [sp, #0x10]
0000000000033254	add	x29, sp, #0x10
0000000000033258	mov	x19, x0
000000000003325c	mov	w0, #0x10
0000000000033260	bl	0x55a2c ; symbol stub for: __Znwm
0000000000033264	ldr	x8, [x19, #0x8]
0000000000033268	adr	x9, #0x3df78
000000000003326c	nop
0000000000033270	stp	x9, x8, [x0]
0000000000033274	ldp	x29, x30, [sp, #0x10]
0000000000033278	ldp	x20, x19, [sp], #0x20
000000000003327c	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE7__cloneEPNS0_6__baseISE_EE:
0000000000033280	ldr	x8, [x0, #0x8]
0000000000033284	adr	x9, #0x3df5c
0000000000033288	nop
000000000003328c	stp	x9, x8, [x1]
0000000000033290	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE7destroyEv:
0000000000033294	ret
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE18destroy_deallocateEv:
0000000000033298	b	0x55a20 ; symbol stub for: __ZdlPv
__ZNSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEEclEOx:
000000000003329c	stp	x22, x21, [sp, #-0x30]!
00000000000332a0	stp	x20, x19, [sp, #0x10]
00000000000332a4	stp	x29, x30, [sp, #0x20]
00000000000332a8	add	x29, sp, #0x20
00000000000332ac	ldr	x20, [x1]
00000000000332b0	ldr	x21, [x0, #0x8]
00000000000332b4	ldr	x19, [x21, #0x120]
00000000000332b8	mov	x0, x19
00000000000332bc	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
00000000000332c0	str	x20, [x21, #0x118]
00000000000332c4	add	x0, x21, #0x128
00000000000332c8	bl	0x5593c ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
00000000000332cc	mov	x0, x19
00000000000332d0	ldp	x29, x30, [sp, #0x20]
00000000000332d4	ldp	x20, x19, [sp, #0x10]
00000000000332d8	ldp	x22, x21, [sp], #0x30
00000000000332dc	b	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE6targetERKSt9type_info:
00000000000332e0	stp	x20, x19, [sp, #-0x20]!
00000000000332e4	stp	x29, x30, [sp, #0x10]
00000000000332e8	add	x29, sp, #0x10
00000000000332ec	mov	x19, x0
00000000000332f0	ldr	x9, [x1, #0x8]
00000000000332f4	adr	x8, #0x2598f
00000000000332f8	nop
00000000000332fc	cmp	x9, x8
0000000000033300	b.ne	0x33314
0000000000033304	add	x0, x19, #0x8
0000000000033308	ldp	x29, x30, [sp, #0x10]
000000000003330c	ldp	x20, x19, [sp], #0x20
0000000000033310	ret
0000000000033314	tst	x9, x8
0000000000033318	b.lt	0x3332c
000000000003331c	mov	x0, #0x0
0000000000033320	ldp	x29, x30, [sp, #0x10]
0000000000033324	ldp	x20, x19, [sp], #0x20
0000000000033328	ret
000000000003332c	and	x0, x9, #0x7fffffffffffffff
0000000000033330	and	x1, x8, #0x7fffffffffffffff
0000000000033334	bl	0x55e64 ; symbol stub for: _strcmp
0000000000033338	cbz	w0, 0x33304
000000000003333c	mov	x0, #0x0
0000000000033340	ldp	x29, x30, [sp, #0x10]
0000000000033344	ldp	x20, x19, [sp], #0x20
0000000000033348	ret
__ZNKSt3__110__function6__funcIZN6kotlin2gc22ConcurrentMarkAndSweepC1ERNS2_2mm13ObjectFactoryIS4_EERNS3_11GCSchedulerEE3$_1NS_9allocatorISB_EEFvxEE11target_typeEv:
000000000003334c	adr	x0, #0x3df74
0000000000033350	nop
0000000000033354	ret
__ZNSt3__117__call_once_proxyINS_5tupleIJOZN6kotlin14initObjectPoolEvE3$_0EEEEEvPv:
0000000000033358	adr	x8, #0x47020
000000000003335c	nop
0000000000033360	mov	w9, #0x1
0000000000033364	str	x9, [x8]
0000000000033368	mov	w9, #0x2
000000000003336c	str	w9, [x8, #0x8]
0000000000033370	ret
__ZN6kotlin20allocateInObjectPoolEm:
0000000000033374	stp	x20, x19, [sp, #-0x20]!
0000000000033378	stp	x29, x30, [sp, #0x10]
000000000003337c	add	x29, sp, #0x10
0000000000033380	mov	x1, x0
0000000000033384	adrp	x0, 71 ; 0x7a000
0000000000033388	add	x0, x0, #0x4f8
000000000003338c	ldr	x8, [x0]
0000000000033390	blr	x8
0000000000033394	tbnz	x1, #0x3f, 0x33424
0000000000033398	ldr	x0, [x0]
000000000003339c	cmp	x1, #0x400
00000000000333a0	b.hi	0x33438
00000000000333a4	add	x8, x1, #0x7
00000000000333a8	and	x8, x8, #0xfffffffffffffff8
00000000000333ac	add	x8, x0, x8
00000000000333b0	ldr	x8, [x8, #0x8]
00000000000333b4	ldr	x19, [x8, #0x8]
00000000000333b8	and	x9, x19, #0x7
00000000000333bc	cmp	x19, #0x0
00000000000333c0	ccmp	x9, #0x0, #0x0, ne
00000000000333c4	b.ne	0x33438
00000000000333c8	ldr	w9, [x8, #0x10]
00000000000333cc	add	w9, w9, #0x1
00000000000333d0	str	w9, [x8, #0x10]
00000000000333d4	ldr	x9, [x19]
00000000000333d8	str	x9, [x8, #0x8]
00000000000333dc	cmp	x1, #0x9
00000000000333e0	b.lo	0x33400
00000000000333e4	ldrb	w8, [x8, #0x7]
00000000000333e8	tbz	w8, #0x0, 0x33400
00000000000333ec	str	xzr, [x19]
00000000000333f0	mov	x0, x19
00000000000333f4	ldp	x29, x30, [sp, #0x10]
00000000000333f8	ldp	x20, x19, [sp], #0x20
00000000000333fc	ret
0000000000033400	mov	x0, x19
0000000000033404	bl	__mi_usable_size
0000000000033408	mov	x1, x0
000000000003340c	mov	x0, x19
0000000000033410	bl	0x55ae0 ; symbol stub for: _bzero
0000000000033414	mov	x0, x19
0000000000033418	ldp	x29, x30, [sp, #0x10]
000000000003341c	ldp	x20, x19, [sp], #0x20
0000000000033420	ret
0000000000033424	mov	x19, #0x0
0000000000033428	mov	x0, x19
000000000003342c	ldp	x29, x30, [sp, #0x10]
0000000000033430	ldp	x20, x19, [sp], #0x20
0000000000033434	ret
0000000000033438	sub	x8, x1, #0x8
000000000003343c	mov	w9, #0x1fff8
0000000000033440	cmp	x8, x9
0000000000033444	b.hi	0x3345c
0000000000033448	and	x8, x1, #0x7
000000000003344c	cbnz	x8, 0x3345c
0000000000033450	ldp	x29, x30, [sp, #0x10]
0000000000033454	ldp	x20, x19, [sp], #0x20
0000000000033458	b	__mi_heap_malloc_zero
000000000003345c	add	x1, x1, #0x7
0000000000033460	bl	__mi_heap_malloc_zero
0000000000033464	mov	x19, x0
0000000000033468	cbz	x0, 0x333f0
000000000003346c	and	x8, x19, #0xfffffffffffffff8
0000000000033470	add	x8, x8, #0x8
0000000000033474	tst	x19, #0x7
0000000000033478	csel	x8, x19, x8, eq
000000000003347c	cmp	x8, x19
0000000000033480	b.eq	0x333f0
0000000000033484	and	x9, x19, #0xffffffffffc00000
0000000000033488	and	x10, x19, #0x3fffff
000000000003348c	ldr	x11, [x9, #0x60]
0000000000033490	lsr	x10, x10, x11
0000000000033494	add	x9, x9, x10, lsl #6
0000000000033498	ldrb	w10, [x9, #0x7e]
000000000003349c	orr	w10, w10, #0x2
00000000000334a0	strb	w10, [x9, #0x7e]
00000000000334a4	mov	x19, x8
00000000000334a8	mov	x0, x19
00000000000334ac	ldp	x29, x30, [sp, #0x10]
00000000000334b0	ldp	x20, x19, [sp], #0x20
00000000000334b4	ret
__mi_process_init:
00000000000334b8	sub	sp, sp, #0x30
00000000000334bc	stp	x20, x19, [sp, #0x10]
00000000000334c0	stp	x29, x30, [sp, #0x20]
00000000000334c4	add	x29, sp, #0x20
00000000000334c8	nop
00000000000334cc	ldr	x8, #0x457dc
00000000000334d0	cbnz	x8, 0x33584
00000000000334d4	bl	0x55dec ; symbol stub for: _pthread_self
00000000000334d8	bl	0x55da4 ; symbol stub for: _pthread_mach_thread_np
00000000000334dc	mov	w8, w0
00000000000334e0	adrp	x9, 69 ; 0x78000
00000000000334e4	str	x8, [x9, #0xca0]
00000000000334e8	bl	0x55ba0 ; symbol stub for: _mach_absolute_time
00000000000334ec	adr	x8, #0x440
00000000000334f0	nop
00000000000334f4	adr	x9, #0x358
00000000000334f8	nop
00000000000334fc	eor	x8, x9, x8
0000000000033500	eor	x8, x0, x8
0000000000033504	eor	w9, w8, w8, lsr #17
0000000000033508	and	x9, x9, #0xf
000000000003350c	add	x9, x9, #0x1
0000000000033510	mov	w10, #0x11
0000000000033514	mov	x11, #0xe5b9
0000000000033518	movk	x11, #0x1ce4, lsl #16
000000000003351c	movk	x11, #0x476d, lsl #32
0000000000033520	movk	x11, #0xbf58, lsl #48
0000000000033524	mov	x12, #0x11eb
0000000000033528	movk	x12, #0x1331, lsl #16
000000000003352c	movk	x12, #0x49bb, lsl #32
0000000000033530	movk	x12, #0x94d0, lsl #48
0000000000033534	cmp	x8, #0x0
0000000000033538	csel	x8, x10, x8, eq
000000000003353c	eor	x8, x8, x8, lsr #30
0000000000033540	mul	x8, x8, x11
0000000000033544	eor	x8, x8, x8, lsr #27
0000000000033548	mul	x8, x8, x12
000000000003354c	eor	x8, x8, x8, lsr #31
0000000000033550	subs	x9, x9, #0x1
0000000000033554	b.ne	0x33534
0000000000033558	adr	x19, #0x44c28
000000000003355c	nop
0000000000033560	str	x8, [x19, #0xb28]
0000000000033564	add	x0, x19, #0xb40
0000000000033568	bl	__mi_random_init
000000000003356c	mov	x0, x19
0000000000033570	bl	__mi_heap_random_next
0000000000033574	str	x0, [x19, #0xb30]
0000000000033578	mov	x0, x19
000000000003357c	bl	__mi_heap_random_next
0000000000033580	str	x0, [x19, #0xb38]
0000000000033584	adrp	x8, 97 ; 0x94000
0000000000033588	mov	w9, #0x1
000000000003358c	strb	w9, [x8, #0x50c]
0000000000033590	adr	x0, #0x530
0000000000033594	nop
0000000000033598	bl	0x55ac8 ; symbol stub for: _atexit
000000000003359c	adr	x9, #0x61044
00000000000335a0	nop
00000000000335a4	ldaxr	x8, [x9]
00000000000335a8	add	x10, x8, #0x1
00000000000335ac	stlxr	w11, x10, [x9]
00000000000335b0	cbnz	w11, 0x335a4
00000000000335b4	cmp	x8, #0x8, lsl #12
00000000000335b8	mov	w9, #0x8000
00000000000335bc	adr	x19, #0x48eec
00000000000335c0	nop
00000000000335c4	csel	x20, x8, x9, lo
00000000000335c8	strb	wzr, [x19, x20]
00000000000335cc	nop
00000000000335d0	ldr	x8, #0x2ca60 ; literal pool symbol address: ___stderrp
00000000000335d4	ldr	x1, [x8]
00000000000335d8	mov	x0, x19
00000000000335dc	bl	0x55b70 ; symbol stub for: _fputs
00000000000335e0	mov	w8, #0xa
00000000000335e4	strb	w8, [x19, x20]
00000000000335e8	adrp	x8, 97 ; 0x94000
00000000000335ec	adr	x9, #0x9124
00000000000335f0	nop
00000000000335f4	str	x9, [x8, #0x5d8]
00000000000335f8	mov	w0, #0x0
00000000000335fc	bl	_mi_option_get
0000000000033600	adr	x20, #0x46988
0000000000033604	nop
0000000000033608	ldr	x8, [x20, #0x388]
000000000003360c	ldr	x9, [x20, #0x378]
0000000000033610	stp	x8, x9, [sp]
0000000000033614	adr	x19, #0x29801 ; literal pool for: "option '%s': %ld\n"
0000000000033618	nop
000000000003361c	mov	x0, x19
0000000000033620	bl	__mi_verbose_message
0000000000033624	mov	w0, #0x1
0000000000033628	bl	_mi_option_get
000000000003362c	ldr	x8, [x20, #0x3a0]
0000000000033630	ldr	x9, [x20, #0x390]
0000000000033634	stp	x8, x9, [sp]
0000000000033638	mov	x0, x19
000000000003363c	bl	__mi_verbose_message
0000000000033640	mov	w0, #0x2
0000000000033644	bl	_mi_option_get
0000000000033648	mov	w0, #0x3
000000000003364c	bl	_mi_option_get
0000000000033650	ldr	x8, [x20, #0x3d0]
0000000000033654	ldr	x9, [x20, #0x3c0]
0000000000033658	stp	x8, x9, [sp]
000000000003365c	mov	x0, x19
0000000000033660	bl	__mi_verbose_message
0000000000033664	mov	w0, #0x4
0000000000033668	bl	_mi_option_get
000000000003366c	ldr	x8, [x20, #0x3e8]
0000000000033670	ldr	x9, [x20, #0x3d8]
0000000000033674	stp	x8, x9, [sp]
0000000000033678	mov	x0, x19
000000000003367c	bl	__mi_verbose_message
0000000000033680	mov	w0, #0x5
0000000000033684	bl	_mi_option_get
0000000000033688	ldr	x8, [x20, #0x400]
000000000003368c	ldr	x9, [x20, #0x3f0]
0000000000033690	stp	x8, x9, [sp]
0000000000033694	mov	x0, x19
0000000000033698	bl	__mi_verbose_message
000000000003369c	mov	w0, #0x6
00000000000336a0	bl	_mi_option_get
00000000000336a4	ldr	x8, [x20, #0x418]
00000000000336a8	ldr	x9, [x20, #0x408]
00000000000336ac	stp	x8, x9, [sp]
00000000000336b0	mov	x0, x19
00000000000336b4	bl	__mi_verbose_message
00000000000336b8	mov	w0, #0x7
00000000000336bc	bl	_mi_option_get
00000000000336c0	ldr	x8, [x20, #0x430]
00000000000336c4	ldr	x9, [x20, #0x420]
00000000000336c8	stp	x8, x9, [sp]
00000000000336cc	mov	x0, x19
00000000000336d0	bl	__mi_verbose_message
00000000000336d4	mov	w0, #0x8
00000000000336d8	bl	_mi_option_get
00000000000336dc	ldr	x8, [x20, #0x448]
00000000000336e0	ldr	x9, [x20, #0x438]
00000000000336e4	stp	x8, x9, [sp]
00000000000336e8	mov	x0, x19
00000000000336ec	bl	__mi_verbose_message
00000000000336f0	mov	w0, #0x9
00000000000336f4	bl	_mi_option_get
00000000000336f8	ldr	x8, [x20, #0x460]
00000000000336fc	ldr	x9, [x20, #0x450]
0000000000033700	stp	x8, x9, [sp]
0000000000033704	mov	x0, x19
0000000000033708	bl	__mi_verbose_message
000000000003370c	mov	w0, #0xa
0000000000033710	bl	_mi_option_get
0000000000033714	ldr	x8, [x20, #0x478]
0000000000033718	ldr	x9, [x20, #0x468]
000000000003371c	stp	x8, x9, [sp]
0000000000033720	mov	x0, x19
0000000000033724	bl	__mi_verbose_message
0000000000033728	mov	w0, #0xb
000000000003372c	bl	_mi_option_get
0000000000033730	ldr	x8, [x20, #0x490]
0000000000033734	ldr	x9, [x20, #0x480]
0000000000033738	stp	x8, x9, [sp]
000000000003373c	mov	x0, x19
0000000000033740	bl	__mi_verbose_message
0000000000033744	mov	w0, #0xc
0000000000033748	bl	_mi_option_get
000000000003374c	ldr	x8, [x20, #0x4a8]
0000000000033750	ldr	x9, [x20, #0x498]
0000000000033754	stp	x8, x9, [sp]
0000000000033758	mov	x0, x19
000000000003375c	bl	__mi_verbose_message
0000000000033760	mov	w0, #0xd
0000000000033764	bl	_mi_option_get
0000000000033768	ldr	x8, [x20, #0x4c0]
000000000003376c	ldr	x9, [x20, #0x4b0]
0000000000033770	stp	x8, x9, [sp]
0000000000033774	mov	x0, x19
0000000000033778	bl	__mi_verbose_message
000000000003377c	mov	w0, #0xe
0000000000033780	bl	_mi_option_get
0000000000033784	ldr	x8, [x20, #0x4d8]
0000000000033788	ldr	x9, [x20, #0x4c8]
000000000003378c	stp	x8, x9, [sp]
0000000000033790	mov	x0, x19
0000000000033794	bl	__mi_verbose_message
0000000000033798	mov	w0, #0xf
000000000003379c	bl	_mi_option_get
00000000000337a0	ldr	x8, [x20, #0x4f0]
00000000000337a4	ldr	x9, [x20, #0x4e0]
00000000000337a8	stp	x8, x9, [sp]
00000000000337ac	mov	x0, x19
00000000000337b0	bl	__mi_verbose_message
00000000000337b4	mov	w0, #0x10
00000000000337b8	bl	_mi_option_get
00000000000337bc	ldr	x8, [x20, #0x508]
00000000000337c0	ldr	x9, [x20, #0x4f8]
00000000000337c4	stp	x8, x9, [sp]
00000000000337c8	mov	x0, x19
00000000000337cc	bl	__mi_verbose_message
00000000000337d0	mov	w0, #0x11
00000000000337d4	bl	_mi_option_get
00000000000337d8	ldr	x8, [x20, #0x520]
00000000000337dc	ldr	x9, [x20, #0x510]
00000000000337e0	stp	x8, x9, [sp]
00000000000337e4	mov	x0, x19
00000000000337e8	bl	__mi_verbose_message
00000000000337ec	mov	w0, #0x12
00000000000337f0	bl	_mi_option_get
00000000000337f4	ldr	x8, [x20, #0x538]
00000000000337f8	ldr	x9, [x20, #0x528]
00000000000337fc	stp	x8, x9, [sp]
0000000000033800	mov	x0, x19
0000000000033804	bl	__mi_verbose_message
0000000000033808	mov	w0, #0x13
000000000003380c	bl	_mi_option_get
0000000000033810	ldr	x8, [x20, #0x550]
0000000000033814	ldr	x9, [x20, #0x540]
0000000000033818	stp	x8, x9, [sp]
000000000003381c	mov	x0, x19
0000000000033820	bl	__mi_verbose_message
0000000000033824	mov	w0, #0x12
0000000000033828	bl	_mi_option_get
000000000003382c	str	x0, [x20, #0x8]
0000000000033830	mov	w0, #0x13
0000000000033834	bl	_mi_option_get
0000000000033838	str	x0, [x20]
000000000003383c	ldp	x29, x30, [sp, #0x20]
0000000000033840	ldp	x20, x19, [sp, #0x10]
0000000000033844	add	sp, sp, #0x30
0000000000033848	b	_mi_process_init
_mi_heap_main_init:
000000000003384c	stp	x20, x19, [sp, #-0x20]!
0000000000033850	stp	x29, x30, [sp, #0x10]
0000000000033854	add	x29, sp, #0x10
0000000000033858	nop
000000000003385c	ldr	x8, #0x4544c
0000000000033860	cbz	x8, 0x33870
0000000000033864	ldp	x29, x30, [sp, #0x10]
0000000000033868	ldp	x20, x19, [sp], #0x20
000000000003386c	ret
0000000000033870	bl	0x55dec ; symbol stub for: _pthread_self
0000000000033874	bl	0x55da4 ; symbol stub for: _pthread_mach_thread_np
0000000000033878	mov	w8, w0
000000000003387c	adrp	x9, 69 ; 0x78000
0000000000033880	str	x8, [x9, #0xca0]
0000000000033884	bl	0x55ba0 ; symbol stub for: _mach_absolute_time
0000000000033888	adr	x8, #0xa4
000000000003388c	nop
0000000000033890	adr	x9, #-0x44
0000000000033894	nop
0000000000033898	eor	x8, x9, x8
000000000003389c	eor	x8, x0, x8
00000000000338a0	eor	w9, w8, w8, lsr #17
00000000000338a4	and	x9, x9, #0xf
00000000000338a8	add	x9, x9, #0x1
00000000000338ac	mov	w10, #0x11
00000000000338b0	mov	x11, #0xe5b9
00000000000338b4	movk	x11, #0x1ce4, lsl #16
00000000000338b8	movk	x11, #0x476d, lsl #32
00000000000338bc	movk	x11, #0xbf58, lsl #48
00000000000338c0	mov	x12, #0x11eb
00000000000338c4	movk	x12, #0x1331, lsl #16
00000000000338c8	movk	x12, #0x49bb, lsl #32
00000000000338cc	movk	x12, #0x94d0, lsl #48
00000000000338d0	cmp	x8, #0x0
00000000000338d4	csel	x8, x10, x8, eq
00000000000338d8	eor	x8, x8, x8, lsr #30
00000000000338dc	mul	x8, x8, x11
00000000000338e0	eor	x8, x8, x8, lsr #27
00000000000338e4	mul	x8, x8, x12
00000000000338e8	eor	x8, x8, x8, lsr #31
00000000000338ec	subs	x9, x9, #0x1
00000000000338f0	b.ne	0x338d0
00000000000338f4	adr	x19, #0x4488c
00000000000338f8	nop
00000000000338fc	str	x8, [x19, #0xb28]
0000000000033900	add	x0, x19, #0xb40
0000000000033904	bl	__mi_random_init
0000000000033908	mov	x0, x19
000000000003390c	bl	__mi_heap_random_next
0000000000033910	str	x0, [x19, #0xb30]
0000000000033914	mov	x0, x19
0000000000033918	bl	__mi_heap_random_next
000000000003391c	str	x0, [x19, #0xb38]
0000000000033920	ldp	x29, x30, [sp, #0x10]
0000000000033924	ldp	x20, x19, [sp], #0x20
0000000000033928	ret
__os_random_weak:
000000000003392c	stp	x20, x19, [sp, #-0x20]!
0000000000033930	stp	x29, x30, [sp, #0x10]
0000000000033934	add	x29, sp, #0x10
0000000000033938	adr	x8, #-0xc
000000000003393c	nop
0000000000033940	eor	x19, x0, x8
0000000000033944	bl	0x55ba0 ; symbol stub for: _mach_absolute_time
0000000000033948	eor	x0, x19, x0
000000000003394c	eor	w8, w0, w0, lsr #17
0000000000033950	and	x8, x8, #0xf
0000000000033954	add	x8, x8, #0x1
0000000000033958	mov	w9, #0x11
000000000003395c	mov	x10, #0xe5b9
0000000000033960	movk	x10, #0x1ce4, lsl #16
0000000000033964	movk	x10, #0x476d, lsl #32
0000000000033968	movk	x10, #0xbf58, lsl #48
000000000003396c	mov	x11, #0x11eb
0000000000033970	movk	x11, #0x1331, lsl #16
0000000000033974	movk	x11, #0x49bb, lsl #32
0000000000033978	movk	x11, #0x94d0, lsl #48
000000000003397c	cmp	x0, #0x0
0000000000033980	csel	x12, x9, x0, eq
0000000000033984	eor	x12, x12, x12, lsr #30
0000000000033988	mul	x12, x12, x10
000000000003398c	eor	x12, x12, x12, lsr #27
0000000000033990	mul	x12, x12, x11
0000000000033994	eor	x0, x12, x12, lsr #31
0000000000033998	subs	x8, x8, #0x1
000000000003399c	b.ne	0x3397c
00000000000339a0	ldp	x29, x30, [sp, #0x10]
00000000000339a4	ldp	x20, x19, [sp], #0x20
00000000000339a8	ret
__mi_random_init:
00000000000339ac	sub	sp, sp, #0x40
00000000000339b0	stp	x20, x19, [sp, #0x20]
00000000000339b4	stp	x29, x30, [sp, #0x30]
00000000000339b8	add	x29, sp, #0x30
00000000000339bc	mov	x19, x0
00000000000339c0	mov	x0, sp
00000000000339c4	mov	w1, #0x20
00000000000339c8	bl	0x55abc ; symbol stub for: _arc4random_buf
00000000000339cc	movi.16b	v0, #0x0
00000000000339d0	stp	q0, q0, [x19, #0x20]
00000000000339d4	str	wzr, [x19, #0x80]
00000000000339d8	stp	q0, q0, [x19, #0x60]
00000000000339dc	stp	q0, q0, [x19, #0x40]
00000000000339e0	nop
00000000000339e4	ldr	q0, 0x58020
00000000000339e8	ldr	q1, [sp]
00000000000339ec	stp	q0, q1, [x19]
00000000000339f0	ldr	w8, [sp, #0x10]
00000000000339f4	str	w8, [x19, #0x20]
00000000000339f8	ldur	x8, [sp, #0x14]
00000000000339fc	stur	x8, [x19, #0x24]
0000000000033a00	ldr	w8, [sp, #0x1c]
0000000000033a04	str	w8, [x19, #0x2c]
0000000000033a08	str	xzr, [x19, #0x30]
0000000000033a0c	lsr	x8, x19, #32
0000000000033a10	stp	w19, w8, [x19, #0x38]
0000000000033a14	ldp	x29, x30, [sp, #0x30]
0000000000033a18	ldp	x20, x19, [sp, #0x20]
0000000000033a1c	add	sp, sp, #0x40
0000000000033a20	ret
__mi_heap_random_next:
0000000000033a24	stp	x22, x21, [sp, #-0x30]!
0000000000033a28	stp	x20, x19, [sp, #0x10]
0000000000033a2c	stp	x29, x30, [sp, #0x20]
0000000000033a30	add	x29, sp, #0x20
0000000000033a34	mov	x19, x0
0000000000033a38	add	x20, x0, #0xb40
0000000000033a3c	ldr	w8, [x0, #0xbc0]
0000000000033a40	cmp	w8, #0x0
0000000000033a44	b.gt	0x33a58
0000000000033a48	mov	x0, x20
0000000000033a4c	bl	_chacha_block
0000000000033a50	mov	w8, #0x10
0000000000033a54	str	w8, [x19, #0xbc0]
0000000000033a58	mov	w22, #0x10
0000000000033a5c	sub	x8, x22, w8, sxtw
0000000000033a60	add	x8, x19, x8, lsl #2
0000000000033a64	ldr	w21, [x8, #0xb80]
0000000000033a68	str	wzr, [x8, #0xb80]
0000000000033a6c	ldr	w8, [x19, #0xbc0]
0000000000033a70	subs	w8, w8, #0x1
0000000000033a74	str	w8, [x19, #0xbc0]
0000000000033a78	b.gt	0x33a8c
0000000000033a7c	mov	x0, x20
0000000000033a80	bl	_chacha_block
0000000000033a84	str	w22, [x19, #0xbc0]
0000000000033a88	mov	w8, #0x10
0000000000033a8c	mov	w9, #0x10
0000000000033a90	sub	x8, x9, w8, sxtw
0000000000033a94	add	x8, x19, x8, lsl #2
0000000000033a98	ldr	w0, [x8, #0xb80]
0000000000033a9c	str	wzr, [x8, #0xb80]
0000000000033aa0	ldr	w8, [x19, #0xbc0]
0000000000033aa4	sub	w8, w8, #0x1
0000000000033aa8	str	w8, [x19, #0xbc0]
0000000000033aac	bfi	x0, x21, #32, #32
0000000000033ab0	ldp	x29, x30, [sp, #0x20]
0000000000033ab4	ldp	x20, x19, [sp, #0x10]
0000000000033ab8	ldp	x22, x21, [sp], #0x30
0000000000033abc	ret
_mi_process_done:
0000000000033ac0	stp	x28, x27, [sp, #-0x60]!
0000000000033ac4	stp	x26, x25, [sp, #0x10]
0000000000033ac8	stp	x24, x23, [sp, #0x20]
0000000000033acc	stp	x22, x21, [sp, #0x30]
0000000000033ad0	stp	x20, x19, [sp, #0x40]
0000000000033ad4	stp	x29, x30, [sp, #0x50]
0000000000033ad8	add	x29, sp, #0x50
0000000000033adc	sub	sp, sp, #0x230
0000000000033ae0	adrp	x8, 97 ; 0x94000
0000000000033ae4	ldrb	w8, [x8, #0x50b]
0000000000033ae8	cmp	w8, #0x1
0000000000033aec	b.ne	0x340dc
0000000000033af0	adrp	x8, 97 ; 0x94000
0000000000033af4	ldrb	w9, [x8, #0x511]
0000000000033af8	tbnz	w9, #0x0, 0x340dc
0000000000033afc	mov	w9, #0x1
0000000000033b00	strb	w9, [x8, #0x511]
0000000000033b04	adrp	x19, 71 ; 0x7a000
0000000000033b08	add	x19, x19, #0x4f8
0000000000033b0c	ldr	x20, [x19]
0000000000033b10	mov	x0, x19
0000000000033b14	blr	x20
0000000000033b18	ldr	x0, [x0]
0000000000033b1c	mov	w1, #0x1
0000000000033b20	bl	_mi_heap_collect_ex
0000000000033b24	mov	w0, #0x1
0000000000033b28	bl	_mi_option_get
0000000000033b2c	cbnz	x0, 0x33b3c
0000000000033b30	mov	w0, #0x2
0000000000033b34	bl	_mi_option_get
0000000000033b38	cbz	x0, 0x340bc
0000000000033b3c	bl	_mi_thread_init
0000000000033b40	mov	x0, x19
0000000000033b44	blr	x20
0000000000033b48	ldr	x8, [x0]
0000000000033b4c	ldr	x8, [x8]
0000000000033b50	add	x0, x8, #0xb0
0000000000033b54	bl	_mi_stats_merge_from
0000000000033b58	stp	xzr, xzr, [sp, #0x40]
0000000000033b5c	nop
0000000000033b60	ldr	q0, 0x58030
0000000000033b64	stur	q0, [sp, #0x58]
0000000000033b68	add	x8, sp, #0x6c
0000000000033b6c	str	x8, [sp, #0x50]
0000000000033b70	adr	x10, #0x29324 ; literal pool for: "count  "
0000000000033b74	nop
0000000000033b78	adr	x8, #0x29315 ; literal pool for: "unit  "
0000000000033b7c	nop
0000000000033b80	adr	x11, #0x29303 ; literal pool for: "current  "
0000000000033b84	nop
0000000000033b88	stp	x8, x10, [sp, #0x28]
0000000000033b8c	adr	x8, #0x292ef ; literal pool for: "freed  "
0000000000033b90	nop
0000000000033b94	adr	x10, #0x292df ; literal pool for: "total  "
0000000000033b98	nop
0000000000033b9c	stp	x8, x11, [sp, #0x18]
0000000000033ba0	adr	x8, #0x292cc ; literal pool for: "peak  "
0000000000033ba4	nop
0000000000033ba8	adr	x9, #0x292b9 ; literal pool for: "heap stats"
0000000000033bac	nop
0000000000033bb0	stp	x8, x10, [sp, #0x8]
0000000000033bb4	str	x9, [sp]
0000000000033bb8	add	x1, sp, #0x40
0000000000033bbc	adr	x2, #0x29280 ; literal pool for: "%10s: %10s %10s %10s %10s %10s %10s\n"
0000000000033bc0	nop
0000000000033bc4	bl	__mi_fprintf
0000000000033bc8	adr	x19, #0x60f38
0000000000033bcc	nop
0000000000033bd0	add	x0, x19, #0x40
0000000000033bd4	adr	x1, #0x292c8 ; literal pool for: "reserved"
0000000000033bd8	nop
0000000000033bdc	add	x3, sp, #0x40
0000000000033be0	mov	w2, #0x1
0000000000033be4	bl	_mi_stat_print
0000000000033be8	add	x0, x19, #0x60
0000000000033bec	adr	x1, #0x292b9 ; literal pool for: "committed"
0000000000033bf0	nop
0000000000033bf4	add	x3, sp, #0x40
0000000000033bf8	mov	w2, #0x1
0000000000033bfc	bl	_mi_stat_print
0000000000033c00	add	x0, x19, #0x80
0000000000033c04	adr	x1, #0x292ab ; literal pool for: "reset"
0000000000033c08	nop
0000000000033c0c	add	x3, sp, #0x40
0000000000033c10	mov	w2, #0x1
0000000000033c14	bl	_mi_stat_print
0000000000033c18	add	x0, x19, #0xa0
0000000000033c1c	adr	x1, #0x29299 ; literal pool for: "touched"
0000000000033c20	nop
0000000000033c24	add	x3, sp, #0x40
0000000000033c28	mov	w2, #0x1
0000000000033c2c	bl	_mi_stat_print
0000000000033c30	adr	x1, #0x2928d ; literal pool for: "segments"
0000000000033c34	nop
0000000000033c38	add	x3, sp, #0x40
0000000000033c3c	mov	x0, x19
0000000000033c40	mov	x2, #-0x1
0000000000033c44	bl	_mi_stat_print
0000000000033c48	add	x0, x19, #0xc0
0000000000033c4c	adr	x20, #0x2927a ; literal pool for: "-abandoned"
0000000000033c50	nop
0000000000033c54	add	x3, sp, #0x40
0000000000033c58	mov	x1, x20
0000000000033c5c	mov	x2, #-0x1
0000000000033c60	bl	_mi_stat_print
0000000000033c64	add	x0, x19, #0x1a0
0000000000033c68	adr	x1, #0x29269 ; literal pool for: "-cached"
0000000000033c6c	nop
0000000000033c70	add	x3, sp, #0x40
0000000000033c74	mov	x2, #-0x1
0000000000033c78	bl	_mi_stat_print
0000000000033c7c	add	x0, x19, #0x20
0000000000033c80	adr	x1, #0x29259 ; literal pool for: "pages"
0000000000033c84	nop
0000000000033c88	add	x3, sp, #0x40
0000000000033c8c	mov	x2, #-0x1
0000000000033c90	bl	_mi_stat_print
0000000000033c94	add	x0, x19, #0xe0
0000000000033c98	add	x3, sp, #0x40
0000000000033c9c	mov	x1, x20
0000000000033ca0	mov	x2, #-0x1
0000000000033ca4	bl	_mi_stat_print
0000000000033ca8	add	x0, x19, #0x1c0
0000000000033cac	adr	x1, #0x29233 ; literal pool for: "-extended"
0000000000033cb0	nop
0000000000033cb4	add	x2, sp, #0x40
0000000000033cb8	bl	_mi_stat_counter_print
0000000000033cbc	add	x0, x19, #0x1f0
0000000000033cc0	adr	x1, #0x29229 ; literal pool for: "-noretire"
0000000000033cc4	nop
0000000000033cc8	add	x2, sp, #0x40
0000000000033ccc	bl	_mi_stat_counter_print
0000000000033cd0	add	x0, x19, #0x1d0
0000000000033cd4	adr	x1, #0x2921f ; literal pool for: "mmaps"
0000000000033cd8	nop
0000000000033cdc	add	x2, sp, #0x40
0000000000033ce0	bl	_mi_stat_counter_print
0000000000033ce4	add	x0, x19, #0x1e0
0000000000033ce8	adr	x1, #0x29211 ; literal pool for: "commits"
0000000000033cec	nop
0000000000033cf0	add	x2, sp, #0x40
0000000000033cf4	bl	_mi_stat_counter_print
0000000000033cf8	add	x0, x19, #0x100
0000000000033cfc	adr	x1, #0x29205 ; literal pool for: "threads"
0000000000033d00	nop
0000000000033d04	add	x3, sp, #0x40
0000000000033d08	mov	x2, #-0x1
0000000000033d0c	bl	_mi_stat_print
0000000000033d10	ldr	x8, [x19, #0x208]
0000000000033d14	cbz	x8, 0x33d2c
0000000000033d18	nop
0000000000033d1c	ldr	x9, #0x60fe4
0000000000033d20	add	x9, x9, x9, lsl #2
0000000000033d24	lsl	x9, x9, #1
0000000000033d28	sdiv	x8, x9, x8
0000000000033d2c	mov	x9, #0x6666666666666666
0000000000033d30	movk	x9, #0x6667
0000000000033d34	smulh	x9, x8, x9
0000000000033d38	asr	x10, x9, #2
0000000000033d3c	add	x9, x10, x9, lsr #63
0000000000033d40	mov	x10, #-0xa
0000000000033d44	madd	x8, x9, x10, x8
0000000000033d48	adr	x10, #0x291d5 ; literal pool for: "searches"
0000000000033d4c	nop
0000000000033d50	stp	x10, x9, [sp]
0000000000033d54	str	x8, [sp, #0x10]
0000000000033d58	adr	x2, #0x291b1 ; literal pool for: "%10s: %5ld.%ld avg\n"
0000000000033d5c	nop
0000000000033d60	add	x1, sp, #0x40
0000000000033d64	bl	__mi_fprintf
0000000000033d68	nop
0000000000033d6c	ldr	x19, #0x60884
0000000000033d70	cbz	x19, 0x340fc
0000000000033d74	adr	x8, #0x291bd ; literal pool for: "numa nodes"
0000000000033d78	nop
0000000000033d7c	stp	x8, x19, [sp]
0000000000033d80	adr	x2, #0x291a6 ; literal pool for: "%10s: %7i\n"
0000000000033d84	nop
0000000000033d88	add	x1, sp, #0x40
0000000000033d8c	bl	__mi_fprintf
0000000000033d90	adr	x20, #0x60878
0000000000033d94	nop
0000000000033d98	ldr	x19, [x20, #0x8]
0000000000033d9c	sub	x0, x29, #0xe0
0000000000033da0	mov	x1, #0x0
0000000000033da4	bl	0x55b94 ; symbol stub for: _gettimeofday
0000000000033da8	ldur	x8, [x29, #-0xe0]
0000000000033dac	mov	w21, #0x3e8
0000000000033db0	mul	x8, x8, x21
0000000000033db4	ldursw	x9, [x29, #-0xd8]
0000000000033db8	mov	w22, #0x4dd3
0000000000033dbc	movk	w22, #0x1062, lsl #16
0000000000033dc0	mul	x9, x9, x22
0000000000033dc4	lsr	x10, x9, #32
0000000000033dc8	lsr	x9, x9, #63
0000000000033dcc	add	w9, w9, w10, asr #6
0000000000033dd0	ldr	x10, [x20]
0000000000033dd4	add	x8, x8, w9, sxtw
0000000000033dd8	add	x9, x19, x10
0000000000033ddc	sub	x23, x8, x9
0000000000033de0	sub	x1, x29, #0xe0
0000000000033de4	mov	w0, #0x0
0000000000033de8	bl	0x55b88 ; symbol stub for: _getrusage
0000000000033dec	ldur	x8, [x29, #-0xe0]
0000000000033df0	ldursw	x9, [x29, #-0xd8]
0000000000033df4	mul	x8, x8, x21
0000000000033df8	mul	x9, x9, x22
0000000000033dfc	lsr	x10, x9, #32
0000000000033e00	lsr	x9, x9, #63
0000000000033e04	add	w9, w9, w10, asr #6
0000000000033e08	add	x24, x8, w9, sxtw
0000000000033e0c	ldur	x8, [x29, #-0xd0]
0000000000033e10	ldursw	x9, [x29, #-0xc8]
0000000000033e14	mul	x8, x8, x21
0000000000033e18	mul	x9, x9, x22
0000000000033e1c	lsr	x10, x9, #32
0000000000033e20	lsr	x9, x9, #63
0000000000033e24	add	w9, w9, w10, asr #6
0000000000033e28	add	x21, x8, w9, sxtw
0000000000033e2c	ldur	x22, [x29, #-0x98]
0000000000033e30	ldr	x19, [x20, #0x568]
0000000000033e34	ldr	xzr, [x20, #0x570]
0000000000033e38	ldur	x20, [x29, #-0xc0]
0000000000033e3c	mov	w8, #0xc
0000000000033e40	str	w8, [sp, #0x16c]
0000000000033e44	nop
0000000000033e48	ldr	x8, #0x2c1f8 ; literal pool symbol address: _mach_task_self_
0000000000033e4c	ldr	w0, [x8]
0000000000033e50	add	x2, sp, #0x170
0000000000033e54	add	x3, sp, #0x16c
0000000000033e58	mov	w1, #0x14
0000000000033e5c	bl	0x55ed0 ; symbol stub for: _task_info
0000000000033e60	mov	x25, #0xf7cf
0000000000033e64	movk	x25, #0xe353, lsl #16
0000000000033e68	movk	x25, #0x9ba5, lsl #32
0000000000033e6c	movk	x25, #0x20c4, lsl #48
0000000000033e70	smulh	x8, x23, x25
0000000000033e74	asr	x9, x8, #7
0000000000033e78	add	x8, x9, x8, lsr #63
0000000000033e7c	mov	x26, #-0x3e8
0000000000033e80	madd	x9, x8, x26, x23
0000000000033e84	stp	x8, x9, [sp, #0x8]
0000000000033e88	adr	x9, #0x290c8 ; literal pool for: "elapsed"
0000000000033e8c	nop
0000000000033e90	str	x9, [sp]
0000000000033e94	adr	x2, #0x290a8 ; literal pool for: "%10s: %7ld.%03ld s\n"
0000000000033e98	nop
0000000000033e9c	add	x1, sp, #0x40
0000000000033ea0	bl	__mi_fprintf
0000000000033ea4	smulh	x8, x24, x25
0000000000033ea8	asr	x9, x8, #7
0000000000033eac	add	x8, x9, x8, lsr #63
0000000000033eb0	madd	x9, x8, x26, x24
0000000000033eb4	smulh	x10, x21, x25
0000000000033eb8	asr	x11, x10, #7
0000000000033ebc	add	x10, x11, x10, lsr #63
0000000000033ec0	madd	x11, x10, x26, x21
0000000000033ec4	stp	x11, x22, [sp, #0x20]
0000000000033ec8	stp	x9, x10, [sp, #0x10]
0000000000033ecc	adr	x9, #0x290cd ; literal pool for: "process"
0000000000033ed0	nop
0000000000033ed4	stp	x9, x8, [sp]
0000000000033ed8	adr	x2, #0x29080 ; literal pool for: "%10s: user: %ld.%03ld s, system: %ld.%03ld s, faults: %lu, rss: "
0000000000033edc	nop
0000000000033ee0	add	x1, sp, #0x40
0000000000033ee4	bl	__mi_fprintf
0000000000033ee8	cmp	x20, #0x0
0000000000033eec	cneg	x8, x20, mi
0000000000033ef0	cmp	x8, #0x3ff
0000000000033ef4	b.gt	0x33f10
0000000000033ef8	adr	x8, #0x290b0 ; literal pool for: "b"
0000000000033efc	nop
0000000000033f00	stp	x20, x8, [sp]
0000000000033f04	adr	x2, #0x2909d ; literal pool for: "%d %s "
0000000000033f08	nop
0000000000033f0c	b	0x33f9c
0000000000033f10	adr	x9, #0x2909c ; literal pool for: "m"
0000000000033f14	nop
0000000000033f18	adr	x10, #0x29092 ; literal pool for: "k"
0000000000033f1c	nop
0000000000033f20	cmp	x8, #0x100, lsl #12
0000000000033f24	csel	x9, x10, x9, lt
0000000000033f28	mov	w10, #0x100000
0000000000033f2c	mov	w11, #0x400
0000000000033f30	csel	x10, x11, x10, lt
0000000000033f34	lsl	x11, x10, #10
0000000000033f38	adr	x12, #0x29076 ; literal pool for: "g"
0000000000033f3c	nop
0000000000033f40	cmp	x8, x11
0000000000033f44	csel	x8, x9, x12, lt
0000000000033f48	csel	x9, x10, x11, lt
0000000000033f4c	mov	w10, #0xcccd
0000000000033f50	movk	w10, #0xcccc, lsl #16
0000000000033f54	mul	x9, x9, x10
0000000000033f58	lsr	x9, x9, #35
0000000000033f5c	sdiv	x9, x20, x9
0000000000033f60	mov	x10, #0x6666666666666666
0000000000033f64	movk	x10, #0x6667
0000000000033f68	smulh	x10, x9, x10
0000000000033f6c	asr	x11, x10, #2
0000000000033f70	add	x10, x11, x10, lsr #63
0000000000033f74	mov	x11, #-0xa
0000000000033f78	madd	x9, x10, x11, x9
0000000000033f7c	cmp	x9, #0x0
0000000000033f80	cneg	x9, x9, mi
0000000000033f84	adr	x11, #0x29024 ; literal pool for: "b"
0000000000033f88	nop
0000000000033f8c	stp	x8, x11, [sp, #0x10]
0000000000033f90	stp	x10, x9, [sp]
0000000000033f94	adr	x2, #0x2901c ; literal pool for: "%ld.%ld %s%s"
0000000000033f98	nop
0000000000033f9c	sub	x0, x29, #0xe0
0000000000033fa0	mov	w1, #0x20
0000000000033fa4	bl	0x55e58 ; symbol stub for: _snprintf
0000000000033fa8	sub	x8, x29, #0xe0
0000000000033fac	str	x8, [sp]
0000000000033fb0	adr	x2, #0x29145 ; literal pool for: "%s"
0000000000033fb4	nop
0000000000033fb8	add	x1, sp, #0x40
0000000000033fbc	bl	__mi_fprintf
0000000000033fc0	cbz	x19, 0x340ac
0000000000033fc4	adr	x2, #0x28ff9 ; literal pool for: ", commit: "
0000000000033fc8	nop
0000000000033fcc	add	x1, sp, #0x40
0000000000033fd0	bl	__mi_fprintf
0000000000033fd4	cmp	x19, #0x0
0000000000033fd8	cneg	x8, x19, mi
0000000000033fdc	cmp	x8, #0x3ff
0000000000033fe0	b.gt	0x33ffc
0000000000033fe4	adr	x8, #0x28fc4 ; literal pool for: "b"
0000000000033fe8	nop
0000000000033fec	stp	x19, x8, [sp]
0000000000033ff0	adr	x2, #0x28fb1 ; literal pool for: "%d %s "
0000000000033ff4	nop
0000000000033ff8	b	0x34088
0000000000033ffc	adr	x9, #0x28fb0 ; literal pool for: "m"
0000000000034000	nop
0000000000034004	adr	x10, #0x28fa6 ; literal pool for: "k"
0000000000034008	nop
000000000003400c	cmp	x8, #0x100, lsl #12
0000000000034010	csel	x9, x10, x9, lt
0000000000034014	mov	w10, #0x100000
0000000000034018	mov	w11, #0x400
000000000003401c	csel	x10, x11, x10, lt
0000000000034020	lsl	x11, x10, #10
0000000000034024	adr	x12, #0x28f8a ; literal pool for: "g"
0000000000034028	nop
000000000003402c	cmp	x8, x11
0000000000034030	csel	x8, x9, x12, lt
0000000000034034	csel	x9, x10, x11, lt
0000000000034038	mov	w10, #0xcccd
000000000003403c	movk	w10, #0xcccc, lsl #16
0000000000034040	mul	x9, x9, x10
0000000000034044	lsr	x9, x9, #35
0000000000034048	sdiv	x9, x19, x9
000000000003404c	mov	x10, #0x6666666666666666
0000000000034050	movk	x10, #0x6667
0000000000034054	smulh	x10, x9, x10
0000000000034058	asr	x11, x10, #2
000000000003405c	add	x10, x11, x10, lsr #63
0000000000034060	mov	x11, #-0xa
0000000000034064	madd	x9, x10, x11, x9
0000000000034068	cmp	x9, #0x0
000000000003406c	cneg	x9, x9, mi
0000000000034070	adr	x11, #0x28f38 ; literal pool for: "b"
0000000000034074	nop
0000000000034078	stp	x8, x11, [sp, #0x10]
000000000003407c	stp	x10, x9, [sp]
0000000000034080	adr	x2, #0x28f30 ; literal pool for: "%ld.%ld %s%s"
0000000000034084	nop
0000000000034088	sub	x0, x29, #0xe0
000000000003408c	mov	w1, #0x20
0000000000034090	bl	0x55e58 ; symbol stub for: _snprintf
0000000000034094	sub	x8, x29, #0xe0
0000000000034098	str	x8, [sp]
000000000003409c	adr	x2, #0x29059 ; literal pool for: "%s"
00000000000340a0	nop
00000000000340a4	add	x1, sp, #0x40
00000000000340a8	bl	__mi_fprintf
00000000000340ac	adr	x2, #0x293f2 ; literal pool for: "\n"
00000000000340b0	nop
00000000000340b4	add	x1, sp, #0x40
00000000000340b8	bl	__mi_fprintf
00000000000340bc	nop
00000000000340c0	ldr	x8, #0x44be0
00000000000340c4	str	x8, [sp]
00000000000340c8	adr	x0, #0x28d5f ; literal pool for: "process done: 0x%zx\n"
00000000000340cc	nop
00000000000340d0	bl	__mi_verbose_message
00000000000340d4	adrp	x8, 96 ; 0x94000
00000000000340d8	strb	wzr, [x8, #0x50c]
00000000000340dc	add	sp, sp, #0x230
00000000000340e0	ldp	x29, x30, [sp, #0x50]
00000000000340e4	ldp	x20, x19, [sp, #0x40]
00000000000340e8	ldp	x22, x21, [sp, #0x30]
00000000000340ec	ldp	x24, x23, [sp, #0x20]
00000000000340f0	ldp	x26, x25, [sp, #0x10]
00000000000340f4	ldp	x28, x27, [sp], #0x60
00000000000340f8	ret
00000000000340fc	adr	x20, #0x604f4
0000000000034100	nop
0000000000034104	ldar	x19, [x20]
0000000000034108	cbnz	x19, 0x33d74
000000000003410c	mov	w0, #0xf
0000000000034110	bl	_mi_option_get
0000000000034114	cmp	x0, #0x1
0000000000034118	csinc	x19, x0, xzr, gt
000000000003411c	stlr	x19, [x20]
0000000000034120	str	x19, [sp]
0000000000034124	adr	x0, #0x289b0 ; literal pool for: "using %zd numa regions\n"
0000000000034128	nop
000000000003412c	bl	__mi_verbose_message
0000000000034130	b	0x33d74
_mi_process_init:
0000000000034134	sub	sp, sp, #0xf0
0000000000034138	stp	x28, x27, [sp, #0x90]
000000000003413c	stp	x26, x25, [sp, #0xa0]
0000000000034140	stp	x24, x23, [sp, #0xb0]
0000000000034144	stp	x22, x21, [sp, #0xc0]
0000000000034148	stp	x20, x19, [sp, #0xd0]
000000000003414c	stp	x29, x30, [sp, #0xe0]
0000000000034150	add	x29, sp, #0xe0
0000000000034154	adrp	x8, 96 ; 0x94000
0000000000034158	ldrb	w8, [x8, #0x50b]
000000000003415c	tbnz	w8, #0x0, 0x34f00
0000000000034160	adr	x9, #0x603ab
0000000000034164	nop
0000000000034168	mov	w8, #0x1
000000000003416c	strb	w8, [x9]
0000000000034170	ldrb	w9, [x9, #0x2]
0000000000034174	tbnz	w9, #0x0, 0x341cc
0000000000034178	adrp	x9, 96 ; 0x94000
000000000003417c	strb	w8, [x9, #0x50d]
0000000000034180	adr	x20, #0x45df8
0000000000034184	nop
0000000000034188	adr	x1, #0xdd8
000000000003418c	nop
0000000000034190	mov	x0, x20
0000000000034194	bl	0x55d98 ; symbol stub for: _pthread_key_create
0000000000034198	adrp	x0, 70 ; 0x7a000
000000000003419c	add	x0, x0, #0x4f8
00000000000341a0	ldr	x8, [x0]
00000000000341a4	blr	x8
00000000000341a8	adr	x8, #0x43fd8
00000000000341ac	nop
00000000000341b0	str	x8, [x0]
00000000000341b4	ldr	x0, [x20]
00000000000341b8	cmn	x0, #0x1
00000000000341bc	b.eq	0x341cc
00000000000341c0	adr	x1, #0x43fc0
00000000000341c4	nop
00000000000341c8	bl	0x55e04 ; symbol stub for: _pthread_setspecific
00000000000341cc	bl	0x55dec ; symbol stub for: _pthread_self
00000000000341d0	bl	0x55da4 ; symbol stub for: _pthread_mach_thread_np
00000000000341d4	mov	w8, w0
00000000000341d8	str	x8, [sp]
00000000000341dc	adr	x0, #0x28720 ; literal pool for: "process init: 0x%zx\n"
00000000000341e0	nop
00000000000341e4	bl	__mi_verbose_message
00000000000341e8	mov	w0, #0x1d
00000000000341ec	bl	0x55ec4 ; symbol stub for: _sysconf
00000000000341f0	cmp	x0, #0x1
00000000000341f4	b.lt	0x34200
00000000000341f8	adrp	x8, 69 ; 0x79000
00000000000341fc	str	x0, [x8, #0xf80]
0000000000034200	adrp	x8, 96 ; 0x94000
0000000000034204	mov	w9, #0x1
0000000000034208	strb	w9, [x8, #0x510]
000000000003420c	nop
0000000000034210	ldr	x8, #0x44a98
0000000000034214	cbnz	x8, 0x342c8
0000000000034218	bl	0x55dec ; symbol stub for: _pthread_self
000000000003421c	bl	0x55da4 ; symbol stub for: _pthread_mach_thread_np
0000000000034220	mov	w8, w0
0000000000034224	adrp	x9, 68 ; 0x78000
0000000000034228	str	x8, [x9, #0xca0]
000000000003422c	bl	0x55ba0 ; symbol stub for: _mach_absolute_time
0000000000034230	adr	x8, #-0x904
0000000000034234	nop
0000000000034238	adr	x9, #-0x9ec
000000000003423c	nop
0000000000034240	eor	x8, x9, x8
0000000000034244	eor	x8, x0, x8
0000000000034248	eor	w9, w8, w8, lsr #17
000000000003424c	and	x9, x9, #0xf
0000000000034250	add	x9, x9, #0x1
0000000000034254	mov	w10, #0x11
0000000000034258	mov	x11, #0xe5b9
000000000003425c	movk	x11, #0x1ce4, lsl #16
0000000000034260	movk	x11, #0x476d, lsl #32
0000000000034264	movk	x11, #0xbf58, lsl #48
0000000000034268	mov	x12, #0x11eb
000000000003426c	movk	x12, #0x1331, lsl #16
0000000000034270	movk	x12, #0x49bb, lsl #32
0000000000034274	movk	x12, #0x94d0, lsl #48
0000000000034278	cmp	x8, #0x0
000000000003427c	csel	x8, x10, x8, eq
0000000000034280	eor	x8, x8, x8, lsr #30
0000000000034284	mul	x8, x8, x11
0000000000034288	eor	x8, x8, x8, lsr #27
000000000003428c	mul	x8, x8, x12
0000000000034290	eor	x8, x8, x8, lsr #31
0000000000034294	subs	x9, x9, #0x1
0000000000034298	b.ne	0x34278
000000000003429c	adr	x20, #0x43ee4
00000000000342a0	nop
00000000000342a4	str	x8, [x20, #0xb28]
00000000000342a8	add	x0, x20, #0xb40
00000000000342ac	bl	__mi_random_init
00000000000342b0	mov	x0, x20
00000000000342b4	bl	__mi_heap_random_next
00000000000342b8	str	x0, [x20, #0xb30]
00000000000342bc	mov	x0, x20
00000000000342c0	bl	__mi_heap_random_next
00000000000342c4	str	x0, [x20, #0xb38]
00000000000342c8	str	xzr, [sp]
00000000000342cc	adr	x0, #0x28645 ; literal pool for: "secure level: %d\n"
00000000000342d0	nop
00000000000342d4	bl	__mi_verbose_message
00000000000342d8	bl	_mi_thread_init
00000000000342dc	bl	_mi_thread_init
00000000000342e0	adrp	x0, 70 ; 0x7a000
00000000000342e4	add	x0, x0, #0x4f8
00000000000342e8	ldr	x8, [x0]
00000000000342ec	str	x8, [sp, #0x70]
00000000000342f0	blr	x8
00000000000342f4	ldr	x8, [x0]
00000000000342f8	ldr	x8, [x8]
00000000000342fc	add	x0, x8, #0xb0
0000000000034300	adr	x8, #0x60800
0000000000034304	nop
0000000000034308	cmp	x0, x8
000000000003430c	b.eq	0x34318
0000000000034310	mov	w1, #0x240
0000000000034314	bl	0x55ae0 ; symbol stub for: _bzero
0000000000034318	adr	x19, #0x602f8
000000000003431c	nop
0000000000034320	add	x0, x19, #0x4f0
0000000000034324	mov	w1, #0x240
0000000000034328	bl	0x55ae0 ; symbol stub for: _bzero
000000000003432c	ldr	x8, [x19]
0000000000034330	cbnz	x8, 0x343f0
0000000000034334	adrp	x19, 96 ; 0x94000
0000000000034338	ldr	x8, [x19, #0x608]
000000000003433c	cbnz	x8, 0x343b0
0000000000034340	sub	x0, x29, #0x60
0000000000034344	mov	x1, #0x0
0000000000034348	bl	0x55b94 ; symbol stub for: _gettimeofday
000000000003434c	ldur	x20, [x29, #-0x60]
0000000000034350	ldursw	x8, [x29, #-0x58]
0000000000034354	mov	x9, #-0x4dd3
0000000000034358	movk	x9, #0xef9d, lsl #16
000000000003435c	mul	x8, x8, x9
0000000000034360	lsr	x9, x8, #63
0000000000034364	asr	x8, x8, #38
0000000000034368	add	w21, w8, w9
000000000003436c	sub	x0, x29, #0x60
0000000000034370	mov	x1, #0x0
0000000000034374	bl	0x55b94 ; symbol stub for: _gettimeofday
0000000000034378	ldur	x8, [x29, #-0x60]
000000000003437c	ldursw	x9, [x29, #-0x58]
0000000000034380	mov	w10, #0x4dd3
0000000000034384	movk	w10, #0x1062, lsl #16
0000000000034388	mul	x9, x9, x10
000000000003438c	lsr	x10, x9, #63
0000000000034390	asr	x9, x9, #38
0000000000034394	add	w9, w9, w10
0000000000034398	sub	x8, x8, x20
000000000003439c	mov	w10, #0x3e8
00000000000343a0	mul	x8, x8, x10
00000000000343a4	add	w9, w9, w21
00000000000343a8	add	x8, x8, w9, sxtw
00000000000343ac	str	x8, [x19, #0x608]
00000000000343b0	sub	x0, x29, #0x60
00000000000343b4	mov	x1, #0x0
00000000000343b8	bl	0x55b94 ; symbol stub for: _gettimeofday
00000000000343bc	ldur	x8, [x29, #-0x60]
00000000000343c0	mov	w9, #0x3e8
00000000000343c4	mul	x8, x8, x9
00000000000343c8	ldursw	x9, [x29, #-0x58]
00000000000343cc	mov	w10, #0x4dd3
00000000000343d0	movk	w10, #0x1062, lsl #16
00000000000343d4	mul	x9, x9, x10
00000000000343d8	lsr	x10, x9, #63
00000000000343dc	asr	x9, x9, #38
00000000000343e0	add	w9, w9, w10
00000000000343e4	add	x8, x8, w9, sxtw
00000000000343e8	adrp	x9, 96 ; 0x94000
00000000000343ec	str	x8, [x9, #0x610]
00000000000343f0	mov	w0, #0x7
00000000000343f4	bl	_mi_option_get
00000000000343f8	cbz	x0, 0x34d0c
00000000000343fc	mov	w0, #0x7
0000000000034400	bl	_mi_option_get
0000000000034404	cbz	x0, 0x34d0c
0000000000034408	mov	x25, x0
000000000003440c	mov	w8, #0x1f4
0000000000034410	mul	x19, x0, x8
0000000000034414	nop
0000000000034418	ldr	x20, #0x601d8
000000000003441c	cbz	x20, 0x34f20
0000000000034420	mov	x26, #0x0
0000000000034424	cmp	x20, #0x0
0000000000034428	csinc	x9, x20, xzr, ne
000000000003442c	adr	x28, #0x601d4
0000000000034430	nop
0000000000034434	adr	x21, #0x60744
0000000000034438	nop
000000000003443c	adr	x20, #0x60724
0000000000034440	nop
0000000000034444	adr	x22, #0x60714
0000000000034448	nop
000000000003444c	adr	x23, #0x606f4
0000000000034450	nop
0000000000034454	udiv	x10, x25, x9
0000000000034458	udiv	x8, x19, x9
000000000003445c	str	x9, [sp, #0x20]
0000000000034460	msub	x9, x10, x9, x25
0000000000034464	stp	x9, x10, [sp, #0x28]
0000000000034468	add	x8, x8, #0x32
000000000003446c	cmp	x19, #0x0
0000000000034470	csel	x8, xzr, x8, eq
0000000000034474	lsl	x9, x8, #1
0000000000034478	str	x8, [sp, #0x68]
000000000003447c	add	x8, x8, #0x1
0000000000034480	stp	x8, x9, [sp, #0x50]
0000000000034484	mov	w19, #0x40000000
0000000000034488	b	0x344bc
000000000003448c	adr	x9, #0x60074
0000000000034490	nop
0000000000034494	add	x8, x9, x8, lsl #3
0000000000034498	add	x8, x8, #0x400
000000000003449c	stlr	x0, [x8]
00000000000344a0	ldur	x8, [x29, #-0x68]
00000000000344a4	subs	x8, x25, x8
00000000000344a8	csel	x25, xzr, x8, lo
00000000000344ac	add	x26, x26, #0x1
00000000000344b0	ldr	x8, [sp, #0x20]
00000000000344b4	ccmp	x26, x8, #0x2, hi
00000000000344b8	b.hs	0x34d0c
00000000000344bc	ldr	x8, [sp, #0x28]
00000000000344c0	cmp	x26, x8
00000000000344c4	ldr	x8, [sp, #0x30]
00000000000344c8	cinc	x8, x8, lo
00000000000344cc	stur	x8, [x29, #-0x68]
00000000000344d0	cbz	x8, 0x344a0
00000000000344d4	stp	x26, x25, [sp, #0x38]
00000000000344d8	tbnz	w26, #0x1f, 0x344f8
00000000000344dc	nop
00000000000344e0	ldr	x24, #0x60110
00000000000344e4	cbz	x24, 0x34b70
00000000000344e8	and	x8, x26, #0xffffffff
00000000000344ec	udiv	x9, x8, x24
00000000000344f0	msub	w8, w9, w24, w8
00000000000344f4	b	0x344fc
00000000000344f8	mov	w8, #-0x1
00000000000344fc	str	x8, [sp, #0x48]
0000000000034500	ldur	x8, [x29, #-0x68]
0000000000034504	lsl	x24, x8, #30
0000000000034508	nop
000000000003450c	ldr	x26, #0x600f4
0000000000034510	b	0x34524
0000000000034514	mov	w9, #0x0
0000000000034518	clrex
000000000003451c	mov	x26, x8
0000000000034520	cbnz	w9, 0x34574
0000000000034524	mov	x25, x26
0000000000034528	cbnz	x26, 0x34550
000000000003452c	adrp	x0, 70 ; 0x7a000
0000000000034530	add	x0, x0, #0x4f8
0000000000034534	ldr	x8, [sp, #0x70]
0000000000034538	blr	x8
000000000003453c	ldr	x0, [x0]
0000000000034540	bl	__mi_heap_random_next
0000000000034544	lsr	x8, x0, #17
0000000000034548	mov	x25, #0x200000000000
000000000003454c	bfi	x25, x8, #30, #12
0000000000034550	add	x9, x25, x24
0000000000034554	ldaxr	x8, [x28]
0000000000034558	cmp	x8, x26
000000000003455c	b.ne	0x34514
0000000000034560	stlxr	w10, x9, [x28]
0000000000034564	cbnz	w10, 0x34554
0000000000034568	mov	w9, #0x1
000000000003456c	mov	x26, x8
0000000000034570	cbz	w9, 0x34524
0000000000034574	nop
0000000000034578	ldr	x8, #0x60090
000000000003457c	cbz	x8, 0x34794
0000000000034580	sub	x0, x29, #0x60
0000000000034584	mov	x1, #0x0
0000000000034588	bl	0x55b94 ; symbol stub for: _gettimeofday
000000000003458c	ldr	x8, [sp, #0x68]
0000000000034590	cmp	x8, #0x0
0000000000034594	b.le	0x34820
0000000000034598	mov	x24, #0x0
000000000003459c	ldur	x8, [x29, #-0x60]
00000000000345a0	mov	w9, #0x3e8
00000000000345a4	mul	x8, x8, x9
00000000000345a8	ldursw	x9, [x29, #-0x58]
00000000000345ac	mov	w10, #0x4dd3
00000000000345b0	movk	w10, #0x1062, lsl #16
00000000000345b4	mul	x9, x9, x10
00000000000345b8	lsr	x10, x9, #63
00000000000345bc	asr	x9, x9, #38
00000000000345c0	add	w9, w9, w10
00000000000345c4	add	x8, x8, w9, sxtw
00000000000345c8	str	x8, [sp, #0x60]
00000000000345cc	add	x27, x25, x24, lsl #30
00000000000345d0	mov	w0, #0x11
00000000000345d4	bl	_mi_option_get
00000000000345d8	sub	w8, w0, #0x64
00000000000345dc	adr	x9, #0x6000c
00000000000345e0	nop
00000000000345e4	ldar	xzr, [x9]
00000000000345e8	mov	w9, #0x20000
00000000000345ec	bfi	w9, w0, #24, #8
00000000000345f0	cmp	w8, #0x9b
00000000000345f4	mov	w8, #0x64020000
00000000000345f8	csel	w4, w8, w9, hi
00000000000345fc	mov	x0, x27
0000000000034600	mov	w1, #0x40000000
0000000000034604	mov	w2, #0x3
0000000000034608	mov	w3, #0x1002
000000000003460c	mov	x5, #0x0
0000000000034610	bl	0x55c00 ; symbol stub for: _mmap
0000000000034614	cmn	x0, #0x1
0000000000034618	csel	x26, xzr, x0, eq
000000000003461c	cmp	x26, x27
0000000000034620	b.ne	0x34974
0000000000034624	adr	x13, #0x6052c
0000000000034628	nop
000000000003462c	ldxr	x8, [x21]
0000000000034630	add	x9, x8, x19
0000000000034634	stxr	w10, x9, [x21]
0000000000034638	cbnz	w10, 0x3462c
000000000003463c	add	x8, x8, x19
0000000000034640	nop
0000000000034644	ldr	x10, #0x6052c
0000000000034648	adr	x12, #0x60528
000000000003464c	nop
0000000000034650	b	0x34664
0000000000034654	clrex
0000000000034658	mov	w11, #0x0
000000000003465c	mov	x10, x9
0000000000034660	cbnz	w11, 0x3468c
0000000000034664	cmp	x10, x8
0000000000034668	b.ge	0x3468c
000000000003466c	ldxr	x9, [x12]
0000000000034670	cmp	x9, x10
0000000000034674	b.ne	0x34654
0000000000034678	stlxr	w10, x8, [x12]
000000000003467c	cbnz	w10, 0x34658
0000000000034680	mov	w11, #0x1
0000000000034684	mov	x10, x9
0000000000034688	cbz	w11, 0x34664
000000000003468c	ldxr	x8, [x20]
0000000000034690	add	x8, x8, x19
0000000000034694	stxr	w9, x8, [x20]
0000000000034698	cbnz	w9, 0x3468c
000000000003469c	ldxr	x8, [x22]
00000000000346a0	add	x9, x8, x19
00000000000346a4	stxr	w10, x9, [x22]
00000000000346a8	cbnz	w10, 0x3469c
00000000000346ac	add	x8, x8, x19
00000000000346b0	nop
00000000000346b4	ldr	x10, #0x6049c
00000000000346b8	b	0x346cc
00000000000346bc	clrex
00000000000346c0	mov	w11, #0x0
00000000000346c4	mov	x10, x9
00000000000346c8	cbnz	w11, 0x346f4
00000000000346cc	cmp	x10, x8
00000000000346d0	b.ge	0x346f4
00000000000346d4	ldxr	x9, [x13]
00000000000346d8	cmp	x9, x10
00000000000346dc	b.ne	0x346bc
00000000000346e0	stlxr	w10, x8, [x13]
00000000000346e4	cbnz	w10, 0x346c0
00000000000346e8	mov	w11, #0x1
00000000000346ec	mov	x10, x9
00000000000346f0	cbz	w11, 0x346cc
00000000000346f4	ldxr	x8, [x23]
00000000000346f8	add	x8, x8, x19
00000000000346fc	stxr	w9, x8, [x23]
0000000000034700	cbnz	w9, 0x346f4
0000000000034704	sub	x0, x29, #0x60
0000000000034708	mov	x1, #0x0
000000000003470c	bl	0x55b94 ; symbol stub for: _gettimeofday
0000000000034710	ldur	x8, [x29, #-0x60]
0000000000034714	mov	w9, #0x3e8
0000000000034718	mul	x8, x8, x9
000000000003471c	ldursw	x9, [x29, #-0x58]
0000000000034720	mov	w10, #0x4dd3
0000000000034724	movk	w10, #0x1062, lsl #16
0000000000034728	mul	x9, x9, x10
000000000003472c	lsr	x10, x9, #63
0000000000034730	asr	x9, x9, #38
0000000000034734	add	w9, w9, w10
0000000000034738	nop
000000000003473c	ldr	x10, #0x5fecc
0000000000034740	add	x8, x8, w9, sxtw
0000000000034744	ldr	x9, [sp, #0x60]
0000000000034748	add	x9, x10, x9
000000000003474c	sub	x8, x8, x9
0000000000034750	cbz	x24, 0x34774
0000000000034754	add	x9, x24, #0x1
0000000000034758	udiv	x9, x8, x9
000000000003475c	ldur	x10, [x29, #-0x68]
0000000000034760	mul	x9, x9, x10
0000000000034764	ldr	x10, [sp, #0x58]
0000000000034768	cmp	x9, x10
000000000003476c	ldr	x9, [sp, #0x50]
0000000000034770	csel	x8, x9, x8, gt
0000000000034774	ldr	x9, [sp, #0x68]
0000000000034778	cmp	x8, x9
000000000003477c	b.gt	0x34aac
0000000000034780	add	x24, x24, #0x1
0000000000034784	ldur	x8, [x29, #-0x68]
0000000000034788	cmp	x24, x8
000000000003478c	b.ne	0x345cc
0000000000034790	b	0x3496c
0000000000034794	sub	x0, x29, #0x60
0000000000034798	mov	x1, #0x0
000000000003479c	bl	0x55b94 ; symbol stub for: _gettimeofday
00000000000347a0	ldur	x24, [x29, #-0x60]
00000000000347a4	ldursw	x8, [x29, #-0x58]
00000000000347a8	mov	x9, #-0x4dd3
00000000000347ac	movk	x9, #0xef9d, lsl #16
00000000000347b0	mul	x8, x8, x9
00000000000347b4	lsr	x9, x8, #63
00000000000347b8	asr	x8, x8, #38
00000000000347bc	add	w26, w8, w9
00000000000347c0	sub	x0, x29, #0x60
00000000000347c4	mov	x1, #0x0
00000000000347c8	bl	0x55b94 ; symbol stub for: _gettimeofday
00000000000347cc	ldur	x8, [x29, #-0x60]
00000000000347d0	ldursw	x9, [x29, #-0x58]
00000000000347d4	mov	w10, #0x4dd3
00000000000347d8	movk	w10, #0x1062, lsl #16
00000000000347dc	mul	x9, x9, x10
00000000000347e0	lsr	x10, x9, #63
00000000000347e4	asr	x9, x9, #38
00000000000347e8	add	w9, w9, w10
00000000000347ec	sub	x8, x8, x24
00000000000347f0	mov	w10, #0x3e8
00000000000347f4	mul	x8, x8, x10
00000000000347f8	add	w9, w9, w26
00000000000347fc	add	x8, x8, w9, sxtw
0000000000034800	adrp	x9, 96 ; 0x94000
0000000000034804	str	x8, [x9, #0x608]
0000000000034808	sub	x0, x29, #0x60
000000000003480c	mov	x1, #0x0
0000000000034810	bl	0x55b94 ; symbol stub for: _gettimeofday
0000000000034814	ldr	x8, [sp, #0x68]
0000000000034818	cmp	x8, #0x0
000000000003481c	b.gt	0x34598
0000000000034820	mov	x24, #0x0
0000000000034824	add	x27, x25, x24, lsl #30
0000000000034828	mov	w0, #0x11
000000000003482c	bl	_mi_option_get
0000000000034830	sub	w8, w0, #0x64
0000000000034834	adr	x9, #0x5fdb4
0000000000034838	nop
000000000003483c	ldar	xzr, [x9]
0000000000034840	mov	w9, #0x20000
0000000000034844	bfi	w9, w0, #24, #8
0000000000034848	cmp	w8, #0x9b
000000000003484c	mov	w8, #0x64020000
0000000000034850	csel	w4, w8, w9, hi
0000000000034854	mov	x0, x27
0000000000034858	mov	w1, #0x40000000
000000000003485c	mov	w2, #0x3
0000000000034860	mov	w3, #0x1002
0000000000034864	mov	x5, #0x0
0000000000034868	bl	0x55c00 ; symbol stub for: _mmap
000000000003486c	cmn	x0, #0x1
0000000000034870	csel	x26, xzr, x0, eq
0000000000034874	cmp	x26, x27
0000000000034878	b.ne	0x34974
000000000003487c	ldxr	x8, [x21]
0000000000034880	add	x9, x8, x19
0000000000034884	stxr	w10, x9, [x21]
0000000000034888	cbnz	w10, 0x3487c
000000000003488c	add	x8, x8, x19
0000000000034890	nop
0000000000034894	ldr	x10, #0x602dc
0000000000034898	adr	x12, #0x602d8
000000000003489c	nop
00000000000348a0	adr	x13, #0x602b0
00000000000348a4	nop
00000000000348a8	b	0x348bc
00000000000348ac	clrex
00000000000348b0	mov	w11, #0x0
00000000000348b4	mov	x10, x9
00000000000348b8	cbnz	w11, 0x348e4
00000000000348bc	cmp	x10, x8
00000000000348c0	b.ge	0x348e4
00000000000348c4	ldxr	x9, [x12]
00000000000348c8	cmp	x9, x10
00000000000348cc	b.ne	0x348ac
00000000000348d0	stlxr	w10, x8, [x12]
00000000000348d4	cbnz	w10, 0x348b0
00000000000348d8	mov	w11, #0x1
00000000000348dc	mov	x10, x9
00000000000348e0	cbz	w11, 0x348bc
00000000000348e4	ldxr	x8, [x20]
00000000000348e8	add	x8, x8, x19
00000000000348ec	stxr	w9, x8, [x20]
00000000000348f0	cbnz	w9, 0x348e4
00000000000348f4	ldxr	x8, [x22]
00000000000348f8	add	x9, x8, x19
00000000000348fc	stxr	w10, x9, [x22]
0000000000034900	cbnz	w10, 0x348f4
0000000000034904	add	x8, x8, x19
0000000000034908	nop
000000000003490c	ldr	x10, #0x60244
0000000000034910	b	0x34924
0000000000034914	clrex
0000000000034918	mov	w11, #0x0
000000000003491c	mov	x10, x9
0000000000034920	cbnz	w11, 0x3494c
0000000000034924	cmp	x10, x8
0000000000034928	b.ge	0x3494c
000000000003492c	ldxr	x9, [x13]
0000000000034930	cmp	x9, x10
0000000000034934	b.ne	0x34914
0000000000034938	stlxr	w10, x8, [x13]
000000000003493c	cbnz	w10, 0x34918
0000000000034940	mov	w11, #0x1
0000000000034944	mov	x10, x9
0000000000034948	cbz	w11, 0x34924
000000000003494c	ldxr	x8, [x23]
0000000000034950	add	x8, x8, x19
0000000000034954	stxr	w9, x8, [x23]
0000000000034958	cbnz	w9, 0x3494c
000000000003495c	add	x24, x24, #0x1
0000000000034960	ldur	x8, [x29, #-0x68]
0000000000034964	cmp	x24, x8
0000000000034968	b.ne	0x34824
000000000003496c	ldur	x24, [x29, #-0x68]
0000000000034970	b	0x34ab8
0000000000034974	cbz	x26, 0x34ab8
0000000000034978	stp	x24, x27, [sp]
000000000003497c	adr	x0, #0x28105 ; literal pool for: "could not allocate contiguous huge page %zu at %p\n"
0000000000034980	nop
0000000000034984	bl	__mi_warning_message
0000000000034988	mov	x0, x26
000000000003498c	mov	w1, #0x40000000
0000000000034990	bl	0x55c18 ; symbol stub for: _munmap
0000000000034994	mov	x10, #-0x40000000
0000000000034998	ldxr	x8, [x21]
000000000003499c	add	x8, x8, x10
00000000000349a0	stxr	w9, x8, [x21]
00000000000349a4	cbnz	w9, 0x34998
00000000000349a8	nop
00000000000349ac	ldr	x10, #0x601c4
00000000000349b0	adr	x12, #0x601c0
00000000000349b4	nop
00000000000349b8	adr	x13, #0x60198
00000000000349bc	nop
00000000000349c0	b	0x349d4
00000000000349c4	clrex
00000000000349c8	mov	w11, #0x0
00000000000349cc	mov	x10, x9
00000000000349d0	cbnz	w11, 0x349fc
00000000000349d4	cmp	x10, x8
00000000000349d8	b.ge	0x349fc
00000000000349dc	ldxr	x9, [x12]
00000000000349e0	cmp	x9, x10
00000000000349e4	b.ne	0x349c4
00000000000349e8	stlxr	w10, x8, [x12]
00000000000349ec	cbnz	w10, 0x349c8
00000000000349f0	mov	w11, #0x1
00000000000349f4	mov	x10, x9
00000000000349f8	cbz	w11, 0x349d4
00000000000349fc	adr	x10, #0x6016c
0000000000034a00	nop
0000000000034a04	ldxr	x8, [x10]
0000000000034a08	add	x8, x8, x19
0000000000034a0c	stxr	w9, x8, [x10]
0000000000034a10	cbnz	w9, 0x34a04
0000000000034a14	mov	x10, #-0x40000000
0000000000034a18	ldxr	x8, [x22]
0000000000034a1c	add	x8, x8, x10
0000000000034a20	stxr	w9, x8, [x22]
0000000000034a24	cbnz	w9, 0x34a18
0000000000034a28	nop
0000000000034a2c	ldr	x10, #0x60124
0000000000034a30	b	0x34a44
0000000000034a34	clrex
0000000000034a38	mov	w11, #0x0
0000000000034a3c	mov	x10, x9
0000000000034a40	cbnz	w11, 0x34a6c
0000000000034a44	cmp	x10, x8
0000000000034a48	b.ge	0x34a6c
0000000000034a4c	ldxr	x9, [x13]
0000000000034a50	cmp	x9, x10
0000000000034a54	b.ne	0x34a34
0000000000034a58	stlxr	w10, x8, [x13]
0000000000034a5c	cbnz	w10, 0x34a38
0000000000034a60	mov	w11, #0x1
0000000000034a64	mov	x10, x9
0000000000034a68	cbz	w11, 0x34a44
0000000000034a6c	adr	x10, #0x600dc
0000000000034a70	nop
0000000000034a74	ldxr	x8, [x10]
0000000000034a78	add	x8, x8, x19
0000000000034a7c	stxr	w9, x8, [x10]
0000000000034a80	cbnz	w9, 0x34a74
0000000000034a84	cmn	w0, #0x1
0000000000034a88	b.ne	0x34ab8
0000000000034a8c	bl	0x55a8c ; symbol stub for: ___error
0000000000034a90	ldr	w0, [x0]
0000000000034a94	bl	0x55e70 ; symbol stub for: _strerror
0000000000034a98	stp	x26, x19, [sp, #0x8]
0000000000034a9c	str	x0, [sp]
0000000000034aa0	adr	x0, #0x27ed2 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
0000000000034aa4	nop
0000000000034aa8	b	0x34ab4
0000000000034aac	adr	x0, #0x28008 ; literal pool for: "huge page allocation timed out\n"
0000000000034ab0	nop
0000000000034ab4	bl	__mi_warning_message
0000000000034ab8	cmp	x24, #0x0
0000000000034abc	csel	x8, xzr, x25, eq
0000000000034ac0	ldr	x26, [sp, #0x48]
0000000000034ac4	str	x8, [sp, #0x60]
0000000000034ac8	cbz	x8, 0x34bb0
0000000000034acc	cbz	x24, 0x34bb0
0000000000034ad0	ldur	x8, [x29, #-0x68]
0000000000034ad4	stp	x24, x8, [sp, #0x8]
0000000000034ad8	str	x26, [sp]
0000000000034adc	adr	x0, #0x27f61 ; literal pool for: "numa node %i: reserved %zu gb huge pages (of the %zu gb requested)\n"
0000000000034ae0	nop
0000000000034ae4	bl	__mi_verbose_message
0000000000034ae8	lsl	x27, x24, #6
0000000000034aec	and	x25, x27, #0xffffffffc0
0000000000034af0	lsr	x8, x25, #2
0000000000034af4	add	x0, x8, #0x40
0000000000034af8	bl	__mi_os_alloc
0000000000034afc	cbz	x0, 0x34bc8
0000000000034b00	ubfx	x8, x27, #6, #34
0000000000034b04	stp	x25, x8, [x0, #0x8]
0000000000034b08	ldr	x9, [sp, #0x60]
0000000000034b0c	stlr	x9, [x0]
0000000000034b10	str	w26, [x0, #0x18]
0000000000034b14	mov	w9, #0x1
0000000000034b18	strb	w9, [x0, #0x1e]
0000000000034b1c	mov	w9, #0x101
0000000000034b20	strh	w9, [x0, #0x1c]
0000000000034b24	add	x9, x0, #0x20
0000000000034b28	stlr	xzr, [x9]
0000000000034b2c	add	x8, x0, x8, lsl #3
0000000000034b30	add	x8, x8, #0x38
0000000000034b34	stp	x8, xzr, [x0, #0x28]
0000000000034b38	adr	x11, #0x5fa88
0000000000034b3c	nop
0000000000034b40	ldaxr	x8, [x11]
0000000000034b44	add	x9, x8, #0x1
0000000000034b48	stlxr	w10, x9, [x11]
0000000000034b4c	cbnz	w10, 0x34b40
0000000000034b50	cmp	x8, #0x40
0000000000034b54	ldp	x26, x25, [sp, #0x38]
0000000000034b58	b.lo	0x3448c
0000000000034b5c	ldaxr	x8, [x11]
0000000000034b60	sub	x8, x8, #0x1
0000000000034b64	stlxr	w9, x8, [x11]
0000000000034b68	cbnz	w9, 0x34b5c
0000000000034b6c	b	0x344a0
0000000000034b70	adr	x8, #0x5fa80
0000000000034b74	nop
0000000000034b78	ldar	x24, [x8]
0000000000034b7c	cbnz	x24, 0x344e8
0000000000034b80	mov	w0, #0xf
0000000000034b84	bl	_mi_option_get
0000000000034b88	cmp	x0, #0x1
0000000000034b8c	csinc	x24, x0, xzr, gt
0000000000034b90	adr	x8, #0x5fa60
0000000000034b94	nop
0000000000034b98	stlr	x24, [x8]
0000000000034b9c	str	x24, [sp]
0000000000034ba0	adr	x0, #0x27f34 ; literal pool for: "using %zd numa regions\n"
0000000000034ba4	nop
0000000000034ba8	bl	__mi_verbose_message
0000000000034bac	b	0x344e8
0000000000034bb0	ldur	x8, [x29, #-0x68]
0000000000034bb4	str	x8, [sp]
0000000000034bb8	adr	x0, #0x27e60 ; literal pool for: "failed to reserve %zu gb huge pages\n"
0000000000034bbc	nop
0000000000034bc0	bl	__mi_warning_message
0000000000034bc4	b	0x34d0c
0000000000034bc8	lsl	x19, x24, #30
0000000000034bcc	adr	x25, #0x5ffa4
0000000000034bd0	nop
0000000000034bd4	adr	x27, #0x5ff7c
0000000000034bd8	nop
0000000000034bdc	ldr	x26, [sp, #0x60]
0000000000034be0	cbz	x19, 0x34d0c
0000000000034be4	mov	w23, #0x40000000
0000000000034be8	mov	x24, #-0x40000000
0000000000034bec	adr	x20, #0x27d86 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
0000000000034bf0	nop
0000000000034bf4	b	0x34c00
0000000000034bf8	adds	x19, x19, x24
0000000000034bfc	b.eq	0x34d0c
0000000000034c00	mov	x0, x26
0000000000034c04	mov	w1, #0x40000000
0000000000034c08	bl	0x55c18 ; symbol stub for: _munmap
0000000000034c0c	ldxr	x8, [x21]
0000000000034c10	add	x8, x8, x24
0000000000034c14	stxr	w9, x8, [x21]
0000000000034c18	cbnz	w9, 0x34c0c
0000000000034c1c	nop
0000000000034c20	ldr	x10, #0x5ff50
0000000000034c24	b	0x34c38
0000000000034c28	clrex
0000000000034c2c	mov	w11, #0x0
0000000000034c30	mov	x10, x9
0000000000034c34	cbnz	w11, 0x34c60
0000000000034c38	cmp	x10, x8
0000000000034c3c	b.ge	0x34c60
0000000000034c40	ldxr	x9, [x25]
0000000000034c44	cmp	x9, x10
0000000000034c48	b.ne	0x34c28
0000000000034c4c	stlxr	w10, x8, [x25]
0000000000034c50	cbnz	w10, 0x34c2c
0000000000034c54	mov	w11, #0x1
0000000000034c58	mov	x10, x9
0000000000034c5c	cbz	w11, 0x34c38
0000000000034c60	adr	x10, #0x5ff08
0000000000034c64	nop
0000000000034c68	ldxr	x8, [x10]
0000000000034c6c	add	x8, x8, x23
0000000000034c70	stxr	w9, x8, [x10]
0000000000034c74	cbnz	w9, 0x34c68
0000000000034c78	ldxr	x8, [x22]
0000000000034c7c	add	x8, x8, x24
0000000000034c80	stxr	w9, x8, [x22]
0000000000034c84	cbnz	w9, 0x34c78
0000000000034c88	nop
0000000000034c8c	ldr	x10, #0x5fec4
0000000000034c90	b	0x34ca4
0000000000034c94	clrex
0000000000034c98	mov	w11, #0x0
0000000000034c9c	mov	x10, x9
0000000000034ca0	cbnz	w11, 0x34ccc
0000000000034ca4	cmp	x10, x8
0000000000034ca8	b.ge	0x34ccc
0000000000034cac	ldxr	x9, [x27]
0000000000034cb0	cmp	x9, x10
0000000000034cb4	b.ne	0x34c94
0000000000034cb8	stlxr	w10, x8, [x27]
0000000000034cbc	cbnz	w10, 0x34c98
0000000000034cc0	mov	w11, #0x1
0000000000034cc4	mov	x10, x9
0000000000034cc8	cbz	w11, 0x34ca4
0000000000034ccc	adr	x10, #0x5fe7c
0000000000034cd0	nop
0000000000034cd4	ldxr	x8, [x10]
0000000000034cd8	add	x8, x8, x23
0000000000034cdc	stxr	w9, x8, [x10]
0000000000034ce0	cbnz	w9, 0x34cd4
0000000000034ce4	cmn	w0, #0x1
0000000000034ce8	b.ne	0x34bf8
0000000000034cec	bl	0x55a8c ; symbol stub for: ___error
0000000000034cf0	ldr	w0, [x0]
0000000000034cf4	bl	0x55e70 ; symbol stub for: _strerror
0000000000034cf8	stp	x26, x23, [sp, #0x8]
0000000000034cfc	str	x0, [sp]
0000000000034d00	mov	x0, x20
0000000000034d04	bl	__mi_warning_message
0000000000034d08	b	0x34bf8
0000000000034d0c	mov	w0, #0x8
0000000000034d10	bl	_mi_option_get
0000000000034d14	cbz	x0, 0x34f00
0000000000034d18	mov	w0, #0x8
0000000000034d1c	bl	_mi_option_get
0000000000034d20	cmp	x0, #0x1
0000000000034d24	b.lt	0x34f00
0000000000034d28	lsl	x19, x0, #10
0000000000034d2c	ubfx	x8, x0, #9, #45
0000000000034d30	cbnz	x8, 0x34d40
0000000000034d34	nop
0000000000034d38	ldr	x8, #0x45248
0000000000034d3c	b	0x34d6c
0000000000034d40	mov	w8, #0x10000
0000000000034d44	mov	w9, #0x40000
0000000000034d48	lsr	x10, x19, #25
0000000000034d4c	cmp	x10, #0x0
0000000000034d50	mov	w10, #0x400000
0000000000034d54	mov	w11, #0x100000
0000000000034d58	csel	x10, x11, x10, eq
0000000000034d5c	cmp	x19, #0x800, lsl #12
0000000000034d60	csel	x9, x9, x10, lo
0000000000034d64	cmp	x19, #0x200, lsl #12
0000000000034d68	csel	x8, x8, x9, lo
0000000000034d6c	mvn	x9, x8
0000000000034d70	cmp	x19, x9
0000000000034d74	b.hs	0x34da0
0000000000034d78	add	x9, x19, x8
0000000000034d7c	sub	x9, x9, #0x1
0000000000034d80	sub	x10, x8, #0x1
0000000000034d84	tst	x8, x10
0000000000034d88	b.ne	0x34d98
0000000000034d8c	neg	x8, x8
0000000000034d90	and	x19, x9, x8
0000000000034d94	b	0x34da0
0000000000034d98	udiv	x9, x9, x8
0000000000034d9c	mul	x19, x9, x8
0000000000034da0	mov	w8, #0x1
0000000000034da4	sturb	w8, [x29, #-0x60]
0000000000034da8	sub	x2, x29, #0x60
0000000000034dac	mov	x0, x19
0000000000034db0	mov	w1, #0x1
0000000000034db4	bl	__mi_os_alloc_aligned
0000000000034db8	cbz	x0, 0x34f00
0000000000034dbc	mov	x20, x0
0000000000034dc0	ldurb	w25, [x29, #-0x60]
0000000000034dc4	mov	w8, #0xffffff
0000000000034dc8	add	x22, x19, x8
0000000000034dcc	lsr	x21, x22, #24
0000000000034dd0	add	x23, x21, #0x3f
0000000000034dd4	lsr	x24, x23, #6
0000000000034dd8	lsl	x8, x24, #4
0000000000034ddc	add	x0, x8, #0x40
0000000000034de0	bl	__mi_os_alloc
0000000000034de4	cbz	x0, 0x34e90
0000000000034de8	stp	x21, x24, [x0, #0x8]
0000000000034dec	stlr	x20, [x0]
0000000000034df0	mov	w8, #-0x1
0000000000034df4	str	w8, [x0, #0x18]
0000000000034df8	strb	w25, [x0, #0x1e]
0000000000034dfc	mov	w8, #0x101
0000000000034e00	strh	w8, [x0, #0x1c]
0000000000034e04	add	x9, x0, #0x20
0000000000034e08	add	x8, x0, #0x38
0000000000034e0c	stlr	xzr, [x9]
0000000000034e10	add	x10, x8, x24, lsl #3
0000000000034e14	and	x9, x23, #0x1ffffffffc0
0000000000034e18	sub	x9, x9, x21
0000000000034e1c	stp	x10, xzr, [x0, #0x28]
0000000000034e20	cmp	x9, #0x1
0000000000034e24	b.lt	0x34e5c
0000000000034e28	lsr	x10, x22, #27
0000000000034e2c	and	x10, x10, #0x1ffffffff8
0000000000034e30	mov	x11, #-0x1
0000000000034e34	lsl	x11, x11, x9
0000000000034e38	mvn	x11, x11
0000000000034e3c	lsl	x11, x11, x21
0000000000034e40	cmp	x9, #0x3f
0000000000034e44	csinv	x9, x11, xzr, ls
0000000000034e48	add	x8, x8, x10
0000000000034e4c	ldaxr	x10, [x8]
0000000000034e50	orr	x10, x10, x9
0000000000034e54	stlxr	w11, x10, [x8]
0000000000034e58	cbnz	w11, 0x34e4c
0000000000034e5c	adr	x8, #0x5f764
0000000000034e60	nop
0000000000034e64	ldaxr	x9, [x8]
0000000000034e68	add	x10, x9, #0x1
0000000000034e6c	stlxr	w11, x10, [x8]
0000000000034e70	cbnz	w11, 0x34e64
0000000000034e74	cmp	x9, #0x40
0000000000034e78	b.lo	0x34eb8
0000000000034e7c	ldaxr	x9, [x8]
0000000000034e80	sub	x9, x9, #0x1
0000000000034e84	stlxr	w10, x9, [x8]
0000000000034e88	cbnz	w10, 0x34e7c
0000000000034e8c	b	0x34ecc
0000000000034e90	mov	x0, x20
0000000000034e94	mov	x1, x19
0000000000034e98	mov	w2, #0x1
0000000000034e9c	bl	__mi_os_free_ex
0000000000034ea0	add	x8, x19, #0x3ff
0000000000034ea4	lsr	x8, x8, #10
0000000000034ea8	str	x8, [sp]
0000000000034eac	adr	x0, #0x27a77 ; literal pool for: "failed to reserve %zu k memory\n"
0000000000034eb0	nop
0000000000034eb4	b	0x34efc
0000000000034eb8	adr	x8, #0x5f648
0000000000034ebc	nop
0000000000034ec0	add	x8, x8, x9, lsl #3
0000000000034ec4	add	x8, x8, #0x400
0000000000034ec8	stlr	x0, [x8]
0000000000034ecc	add	x8, x19, #0x3ff
0000000000034ed0	lsr	x8, x8, #10
0000000000034ed4	ldurb	w9, [x29, #-0x60]
0000000000034ed8	adr	x10, #0x27a6b ; literal pool for: " (in large os pages)"
0000000000034edc	nop
0000000000034ee0	adr	x11, #0x282cb ; literal pool for: ""
0000000000034ee4	nop
0000000000034ee8	cmp	w9, #0x0
0000000000034eec	csel	x9, x11, x10, eq
0000000000034ef0	stp	x8, x9, [sp]
0000000000034ef4	adr	x0, #0x27a64 ; literal pool for: "reserved %zu kb memory%s\n"
0000000000034ef8	nop
0000000000034efc	bl	__mi_verbose_message
0000000000034f00	ldp	x29, x30, [sp, #0xe0]
0000000000034f04	ldp	x20, x19, [sp, #0xd0]
0000000000034f08	ldp	x22, x21, [sp, #0xc0]
0000000000034f0c	ldp	x24, x23, [sp, #0xb0]
0000000000034f10	ldp	x26, x25, [sp, #0xa0]
0000000000034f14	ldp	x28, x27, [sp, #0x90]
0000000000034f18	add	sp, sp, #0xf0
0000000000034f1c	ret
0000000000034f20	adr	x8, #0x5f6d0
0000000000034f24	nop
0000000000034f28	ldar	x20, [x8]
0000000000034f2c	cbnz	x20, 0x34420
0000000000034f30	mov	w0, #0xf
0000000000034f34	bl	_mi_option_get
0000000000034f38	cmp	x0, #0x1
0000000000034f3c	csinc	x20, x0, xzr, gt
0000000000034f40	adr	x8, #0x5f6b0
0000000000034f44	nop
0000000000034f48	stlr	x20, [x8]
0000000000034f4c	str	x20, [sp]
0000000000034f50	adr	x0, #0x27b84 ; literal pool for: "using %zd numa regions\n"
0000000000034f54	nop
0000000000034f58	bl	__mi_verbose_message
0000000000034f5c	b	0x34420
_mi_pthread_done:
0000000000034f60	stp	x28, x27, [sp, #-0x60]!
0000000000034f64	stp	x26, x25, [sp, #0x10]
0000000000034f68	stp	x24, x23, [sp, #0x20]
0000000000034f6c	stp	x22, x21, [sp, #0x30]
0000000000034f70	stp	x20, x19, [sp, #0x40]
0000000000034f74	stp	x29, x30, [sp, #0x50]
0000000000034f78	add	x29, sp, #0x50
0000000000034f7c	cbz	x0, 0x350b0
0000000000034f80	mov	x19, x0
0000000000034f84	adr	x9, #0x5fc94
0000000000034f88	nop
0000000000034f8c	ldxr	x8, [x9]
0000000000034f90	sub	x8, x8, #0x1
0000000000034f94	stxr	w10, x8, [x9]
0000000000034f98	cbnz	w10, 0x34f8c
0000000000034f9c	nop
0000000000034fa0	ldr	x11, #0x5fc70
0000000000034fa4	adr	x9, #0x5fc6c
0000000000034fa8	nop
0000000000034fac	b	0x34fc0
0000000000034fb0	clrex
0000000000034fb4	mov	w12, #0x0
0000000000034fb8	mov	x11, x10
0000000000034fbc	cbnz	w12, 0x34fe8
0000000000034fc0	cmp	x11, x8
0000000000034fc4	b.ge	0x34fe8
0000000000034fc8	ldxr	x10, [x9]
0000000000034fcc	cmp	x10, x11
0000000000034fd0	b.ne	0x34fb0
0000000000034fd4	stlxr	w11, x8, [x9]
0000000000034fd8	cbnz	w11, 0x34fb4
0000000000034fdc	mov	w12, #0x1
0000000000034fe0	mov	x11, x10
0000000000034fe4	cbz	w12, 0x34fc0
0000000000034fe8	adr	x8, #0x5fc20
0000000000034fec	nop
0000000000034ff0	ldxr	x9, [x8]
0000000000034ff4	add	x9, x9, #0x1
0000000000034ff8	stxr	w10, x9, [x8]
0000000000034ffc	cbnz	w10, 0x34ff0
0000000000035000	ldr	x20, [x19, #0xb20]
0000000000035004	bl	0x55dec ; symbol stub for: _pthread_self
0000000000035008	bl	0x55da4 ; symbol stub for: _pthread_mach_thread_np
000000000003500c	adr	x23, #0x3c2f4
0000000000035010	nop
0000000000035014	cmp	x19, x23
0000000000035018	b.eq	0x350b0
000000000003501c	mov	w8, w0
0000000000035020	cmp	x20, x8
0000000000035024	b.ne	0x350b0
0000000000035028	nop
000000000003502c	ldr	x20, #0x43c74
0000000000035030	cbz	x20, 0x35044
0000000000035034	bl	0x55dec ; symbol stub for: _pthread_self
0000000000035038	bl	0x55da4 ; symbol stub for: _pthread_mach_thread_np
000000000003503c	cmp	x20, w0, uxtw
0000000000035040	b.ne	0x35050
0000000000035044	adr	x1, #0x4313c
0000000000035048	nop
000000000003504c	b	0x35058
0000000000035050	adr	x1, #0x3c2b0
0000000000035054	nop
0000000000035058	adrp	x20, 69 ; 0x7a000
000000000003505c	add	x20, x20, #0x4f8
0000000000035060	ldr	x24, [x20]
0000000000035064	mov	x0, x20
0000000000035068	blr	x24
000000000003506c	str	x1, [x0]
0000000000035070	nop
0000000000035074	ldr	x0, #0x44f04
0000000000035078	cmn	x0, #0x1
000000000003507c	b.eq	0x35084
0000000000035080	bl	0x55e04 ; symbol stub for: _pthread_setspecific
0000000000035084	ldr	x8, [x19]
0000000000035088	ldr	x19, [x8, #0x10]
000000000003508c	cmp	x19, x23
0000000000035090	b.eq	0x350b0
0000000000035094	ldr	x8, [x19]
0000000000035098	ldr	x26, [x8, #0x18]
000000000003509c	cbz	x26, 0x35514
00000000000350a0	mov	w27, #0x18
00000000000350a4	mov	w21, #0x7
00000000000350a8	movk	w21, #0x20, lsl #16
00000000000350ac	b	0x350d8
00000000000350b0	ldp	x29, x30, [sp, #0x50]
00000000000350b4	ldp	x20, x19, [sp, #0x40]
00000000000350b8	ldp	x22, x21, [sp, #0x30]
00000000000350bc	ldp	x24, x23, [sp, #0x20]
00000000000350c0	ldp	x26, x25, [sp, #0x10]
00000000000350c4	ldp	x28, x27, [sp], #0x60
00000000000350c8	ret
00000000000350cc	mov	x0, x22
00000000000350d0	bl	_mi_free
00000000000350d4	cbz	x26, 0x35514
00000000000350d8	mov	x22, x26
00000000000350dc	ldr	x26, [x26, #0xbe0]
00000000000350e0	cmp	x22, x19
00000000000350e4	b.eq	0x350d4
00000000000350e8	cbz	x22, 0x350d4
00000000000350ec	cmp	x22, x23
00000000000350f0	b.eq	0x350d4
00000000000350f4	ldr	x8, [x22]
00000000000350f8	ldr	x25, [x8, #0x10]
00000000000350fc	cmp	x25, x22
0000000000035100	b.eq	0x3547c
0000000000035104	ldr	x8, [x22, #0xbc8]
0000000000035108	cbz	x8, 0x35468
000000000003510c	add	x20, x22, #0xb18
0000000000035110	ldr	x8, [x22, #0xb18]
0000000000035114	b	0x35124
0000000000035118	clrex
000000000003511c	mov	w9, #0x0
0000000000035120	cbnz	w9, 0x35148
0000000000035124	cbz	x8, 0x35158
0000000000035128	mov	x0, x8
000000000003512c	ldaxr	x8, [x20]
0000000000035130	cmp	x8, x0
0000000000035134	b.ne	0x35118
0000000000035138	stlxr	w9, xzr, [x20]
000000000003513c	cbnz	w9, 0x3511c
0000000000035140	mov	w9, #0x1
0000000000035144	cbz	w9, 0x35124
0000000000035148	ldr	x28, [x0]
000000000003514c	bl	__mi_free_delayed_block
0000000000035150	mov	x0, x28
0000000000035154	cbnz	x28, 0x35148
0000000000035158	mov	x8, #0x0
000000000003515c	add	x9, x25, #0x410
0000000000035160	add	x10, x25, #0x3f8
0000000000035164	add	x11, x25, #0x8
0000000000035168	add	x12, x25, #0x18
000000000003516c	b	0x3519c
0000000000035170	mov	x13, #0x0
0000000000035174	ldr	x14, [x25, #0xbc8]
0000000000035178	add	x14, x14, x13
000000000003517c	str	x14, [x25, #0xbc8]
0000000000035180	ldr	x14, [x22, #0xbc8]
0000000000035184	sub	x13, x14, x13
0000000000035188	str	x13, [x22, #0xbc8]
000000000003518c	add	x8, x8, #0x1
0000000000035190	add	x10, x10, #0x18
0000000000035194	cmp	x8, #0x4b
0000000000035198	b.eq	0x353ec
000000000003519c	add	x13, x8, x8, lsl #1
00000000000351a0	lsl	x14, x13, #3
00000000000351a4	add	x16, x22, x14
00000000000351a8	ldr	x15, [x16, #0x410]
00000000000351ac	cbz	x15, 0x35170
00000000000351b0	mov	x13, #0x0
00000000000351b4	add	x14, x25, x14
00000000000351b8	add	x14, x14, #0x410
00000000000351bc	add	x16, x16, #0x410
00000000000351c0	b	0x351d0
00000000000351c4	add	x13, x13, #0x1
00000000000351c8	ldr	x15, [x15, #0x30]
00000000000351cc	cbz	x15, 0x35224
00000000000351d0	add	x17, x15, #0x28
00000000000351d4	stlr	x25, [x17]
00000000000351d8	add	x17, x15, #0x20
00000000000351dc	ldar	x0, [x17]
00000000000351e0	and	w1, w0, #0x3
00000000000351e4	cmp	w1, #0x0
00000000000351e8	ccmp	w1, #0x3, #0x4, ne
00000000000351ec	b.eq	0x351c4
00000000000351f0	cmp	w1, #0x1
00000000000351f4	b.eq	0x3521c
00000000000351f8	ldxr	x1, [x17]
00000000000351fc	cmp	x1, x0
0000000000035200	b.ne	0x35214
0000000000035204	and	x0, x0, #0xfffffffffffffffc
0000000000035208	stlxr	w1, x0, [x17]
000000000003520c	cbnz	w1, 0x351dc
0000000000035210	b	0x351c4
0000000000035214	clrex
0000000000035218	b	0x351dc
000000000003521c	wfe
0000000000035220	b	0x351dc
0000000000035224	madd	x15, x8, x27, x25
0000000000035228	add	x17, x15, #0x418
000000000003522c	ldr	x0, [x15, #0x418]
0000000000035230	ldr	x15, [x16]
0000000000035234	cbz	x0, 0x35250
0000000000035238	str	x15, [x0, #0x30]
000000000003523c	str	x0, [x15, #0x38]
0000000000035240	madd	x14, x8, x27, x22
0000000000035244	ldr	x14, [x14, #0x418]
0000000000035248	str	x14, [x17]
000000000003524c	b	0x35174
0000000000035250	str	x15, [x14]
0000000000035254	add	x14, x8, x8, lsl #1
0000000000035258	lsl	x14, x14, #3
000000000003525c	add	x16, x22, x14
0000000000035260	ldr	x16, [x16, #0x418]
0000000000035264	str	x16, [x17]
0000000000035268	add	x14, x25, x14
000000000003526c	ldr	x16, [x14, #0x420]
0000000000035270	cmp	x16, #0x400
0000000000035274	b.hi	0x35174
0000000000035278	cmp	x15, #0x0
000000000003527c	adr	x14, #0x23b44
0000000000035280	nop
0000000000035284	csel	x14, x14, x15, eq
0000000000035288	add	x15, x16, #0x7
000000000003528c	lsr	x15, x15, #3
0000000000035290	add	x17, x25, x15, lsl #3
0000000000035294	ldr	x17, [x17, #0x8]
0000000000035298	cmp	x17, x14
000000000003529c	b.eq	0x35174
00000000000352a0	cmp	x16, #0x9
00000000000352a4	b.hs	0x352b0
00000000000352a8	mov	x16, #0x0
00000000000352ac	b	0x35394
00000000000352b0	sub	x17, x15, #0x1
00000000000352b4	clz	x0, x17
00000000000352b8	mov	w1, #0x3f
00000000000352bc	sub	w0, w1, w0
00000000000352c0	and	w0, w0, #0xff
00000000000352c4	sub	w1, w0, #0x2
00000000000352c8	lsr	x17, x17, x1
00000000000352cc	and	w17, w17, #0x3
00000000000352d0	bfi	w17, w0, #2, #8
00000000000352d4	sub	w17, w17, #0x3
00000000000352d8	add	w0, w15, #0x1
00000000000352dc	and	w0, w0, #0xfffffffe
00000000000352e0	cmp	x16, #0x40
00000000000352e4	csel	w16, w17, w0, hi
00000000000352e8	mov	x17, x10
00000000000352ec	ldr	x0, [x17, #0x10]
00000000000352f0	add	x1, x0, #0x7
00000000000352f4	lsr	x0, x1, #3
00000000000352f8	cmp	x1, #0x10
00000000000352fc	b.hs	0x35310
0000000000035300	mov	w1, #0x1
0000000000035304	cmp	x17, x9
0000000000035308	b.hi	0x35374
000000000003530c	b	0x35384
0000000000035310	cmp	x1, #0x47
0000000000035314	b.hi	0x3532c
0000000000035318	add	w1, w0, #0x1
000000000003531c	and	w1, w1, #0xfffffffe
0000000000035320	cmp	x17, x9
0000000000035324	b.hi	0x35374
0000000000035328	b	0x35384
000000000003532c	cmp	x1, x21
0000000000035330	b.ls	0x35344
0000000000035334	mov	w1, #0x49
0000000000035338	cmp	x17, x9
000000000003533c	b.hi	0x35374
0000000000035340	b	0x35384
0000000000035344	sub	x1, x0, #0x1
0000000000035348	clz	x2, x1
000000000003534c	mov	w3, #0x3f
0000000000035350	sub	w2, w3, w2
0000000000035354	and	w2, w2, #0xff
0000000000035358	sub	w3, w2, #0x2
000000000003535c	lsr	x1, x1, x3
0000000000035360	and	w1, w1, #0x3
0000000000035364	bfi	w1, w2, #2, #8
0000000000035368	sub	w1, w1, #0x3
000000000003536c	cmp	x17, x9
0000000000035370	b.ls	0x35384
0000000000035374	sub	x17, x17, #0x18
0000000000035378	and	w2, w16, #0xff
000000000003537c	cmp	w2, w1, uxtb
0000000000035380	b.eq	0x352ec
0000000000035384	cmp	x0, x15
0000000000035388	csinc	x16, x15, x0, hs
000000000003538c	cmp	x16, x15
0000000000035390	b.hi	0x35174
0000000000035394	sub	x17, x15, x16
0000000000035398	add	x17, x17, #0x1
000000000003539c	cmp	x17, #0x4
00000000000353a0	b.lo	0x353d0
00000000000353a4	and	x0, x17, #0xfffffffffffffffc
00000000000353a8	dup.2d	v0, x14
00000000000353ac	add	x1, x12, x16, lsl #3
00000000000353b0	mov	x2, x0
00000000000353b4	stp	q0, q0, [x1, #-0x10]
00000000000353b8	add	x1, x1, #0x20
00000000000353bc	subs	x2, x2, #0x4
00000000000353c0	b.ne	0x353b4
00000000000353c4	cmp	x17, x0
00000000000353c8	b.eq	0x35174
00000000000353cc	add	x16, x16, x0
00000000000353d0	sub	x15, x15, x16
00000000000353d4	add	x15, x15, #0x1
00000000000353d8	add	x16, x11, x16, lsl #3
00000000000353dc	str	x14, [x16], #0x8
00000000000353e0	subs	x15, x15, #0x1
00000000000353e4	b.ne	0x353dc
00000000000353e8	b	0x35174
00000000000353ec	ldr	x8, [x20]
00000000000353f0	b	0x35400
00000000000353f4	clrex
00000000000353f8	mov	w9, #0x0
00000000000353fc	cbnz	w9, 0x35424
0000000000035400	cbz	x8, 0x35434
0000000000035404	mov	x0, x8
0000000000035408	ldaxr	x8, [x20]
000000000003540c	cmp	x8, x0
0000000000035410	b.ne	0x353f4
0000000000035414	stlxr	w9, xzr, [x20]
0000000000035418	cbnz	w9, 0x353f8
000000000003541c	mov	w9, #0x1
0000000000035420	cbz	w9, 0x35400
0000000000035424	ldr	x20, [x0]
0000000000035428	bl	__mi_free_delayed_block
000000000003542c	mov	x0, x20
0000000000035430	cbnz	x20, 0x35424
0000000000035434	add	x0, x22, #0x8
0000000000035438	mov	w1, #0x408
000000000003543c	bl	0x55ae0 ; symbol stub for: _bzero
0000000000035440	add	x0, x22, #0x410
0000000000035444	adr	x1, #0x3c2cc
0000000000035448	nop
000000000003544c	mov	w2, #0x708
0000000000035450	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000035454	add	x8, x22, #0xb18
0000000000035458	stlr	xzr, [x8]
000000000003545c	str	xzr, [x22, #0xbc8]
0000000000035460	adrp	x20, 69 ; 0x7a000
0000000000035464	add	x20, x20, #0x4f8
0000000000035468	ldr	x8, [x22]
000000000003546c	ldr	x1, [x8, #0x10]
0000000000035470	cmp	x1, x22
0000000000035474	b.ne	0x35498
0000000000035478	b	0x350d4
000000000003547c	mov	x0, x22
0000000000035480	mov	w1, #0x2
0000000000035484	bl	_mi_heap_collect_ex
0000000000035488	ldr	x8, [x22]
000000000003548c	ldr	x1, [x8, #0x10]
0000000000035490	cmp	x1, x22
0000000000035494	b.eq	0x350d4
0000000000035498	mov	x0, x20
000000000003549c	blr	x24
00000000000354a0	ldr	x9, [x0]
00000000000354a4	cmp	x9, x22
00000000000354a8	b.ne	0x354d0
00000000000354ac	mov	x0, x20
00000000000354b0	blr	x24
00000000000354b4	str	x1, [x0]
00000000000354b8	nop
00000000000354bc	ldr	x0, #0x44abc
00000000000354c0	cmn	x0, #0x1
00000000000354c4	b.eq	0x354cc
00000000000354c8	bl	0x55e04 ; symbol stub for: _pthread_setspecific
00000000000354cc	ldr	x8, [x22]
00000000000354d0	mov	x9, #0x0
00000000000354d4	add	x8, x8, #0x18
00000000000354d8	mov	x11, x8
00000000000354dc	mov	x10, x9
00000000000354e0	ldr	x9, [x11]
00000000000354e4	add	x11, x9, #0xbe0
00000000000354e8	cmp	x9, x22
00000000000354ec	ccmp	x9, #0x0, #0x4, ne
00000000000354f0	b.ne	0x354dc
00000000000354f4	cmp	x9, x22
00000000000354f8	b.ne	0x350cc
00000000000354fc	ldr	x9, [x22, #0xbe0]
0000000000035500	add	x11, x10, #0xbe0
0000000000035504	cmp	x10, #0x0
0000000000035508	csel	x8, x8, x11, eq
000000000003550c	str	x9, [x8]
0000000000035510	b	0x350cc
0000000000035514	adr	x8, #0x42c6c
0000000000035518	nop
000000000003551c	cmp	x19, x8
0000000000035520	b.eq	0x35564
0000000000035524	mov	x0, x19
0000000000035528	mov	w1, #0x2
000000000003552c	bl	_mi_heap_collect_ex
0000000000035530	ldr	x8, [x19]
0000000000035534	add	x0, x8, #0xb0
0000000000035538	bl	_mi_stats_merge_from
000000000003553c	mov	x0, x19
0000000000035540	mov	w1, #0xee0
0000000000035544	mov	w2, #0x1
0000000000035548	ldp	x29, x30, [sp, #0x50]
000000000003554c	ldp	x20, x19, [sp, #0x40]
0000000000035550	ldp	x22, x21, [sp, #0x30]
0000000000035554	ldp	x24, x23, [sp, #0x20]
0000000000035558	ldp	x26, x25, [sp, #0x10]
000000000003555c	ldp	x28, x27, [sp], #0x60
0000000000035560	b	__mi_os_free_ex
0000000000035564	ldr	x8, [x19]
0000000000035568	add	x0, x8, #0xb0
000000000003556c	ldp	x29, x30, [sp, #0x50]
0000000000035570	ldp	x20, x19, [sp, #0x40]
0000000000035574	ldp	x22, x21, [sp, #0x30]
0000000000035578	ldp	x24, x23, [sp, #0x20]
000000000003557c	ldp	x26, x25, [sp, #0x10]
0000000000035580	ldp	x28, x27, [sp], #0x60
0000000000035584	b	_mi_stats_merge_from
__mi_verbose_message:
0000000000035588	stp	x28, x27, [sp, #-0x40]!
000000000003558c	stp	x22, x21, [sp, #0x10]
0000000000035590	stp	x20, x19, [sp, #0x20]
0000000000035594	stp	x29, x30, [sp, #0x30]
0000000000035598	add	x29, sp, #0x30
000000000003559c	sub	sp, sp, #0x210
00000000000355a0	mov	x20, x0
00000000000355a4	mov	w0, #0x2
00000000000355a8	bl	_mi_option_get
00000000000355ac	cbz	x0, 0x35688
00000000000355b0	add	x8, x29, #0x10
00000000000355b4	str	x8, [sp, #0x8]
00000000000355b8	cbz	x20, 0x35688
00000000000355bc	adrp	x21, 95 ; 0x94000
00000000000355c0	ldrb	w8, [x21, #0x50c]
00000000000355c4	adrp	x19, 69 ; 0x7a000
00000000000355c8	add	x19, x19, #0x510
00000000000355cc	cmp	w8, #0x1
00000000000355d0	b.ne	0x355f8
00000000000355d4	ldr	x8, [x19]
00000000000355d8	mov	x0, x19
00000000000355dc	blr	x8
00000000000355e0	ldrb	w9, [x0]
00000000000355e4	tbnz	w9, #0x0, 0x35688
00000000000355e8	mov	x0, x19
00000000000355ec	blr	x8
00000000000355f0	mov	w8, #0x1
00000000000355f4	strb	w8, [x0]
00000000000355f8	add	x0, sp, #0x10
00000000000355fc	add	x3, x29, #0x10
0000000000035600	mov	w1, #0x1ff
0000000000035604	mov	x2, x20
0000000000035608	bl	0x55edc ; symbol stub for: _vsnprintf
000000000003560c	ldrb	w8, [x21, #0x50c]
0000000000035610	cmp	w8, #0x1
0000000000035614	b.ne	0x3562c
0000000000035618	ldr	x8, [x19]
000000000003561c	mov	x0, x19
0000000000035620	blr	x8
0000000000035624	mov	w8, #0x1
0000000000035628	strb	w8, [x0]
000000000003562c	adr	x21, #0x5eee0
0000000000035630	nop
0000000000035634	add	x8, x21, #0xc4
0000000000035638	ldar	x20, [x8]
000000000003563c	ldur	x8, [x21, #0xcc]
0000000000035640	adr	x9, #0x1748
0000000000035644	nop
0000000000035648	cmp	x8, #0x0
000000000003564c	csel	x22, x9, x8, eq
0000000000035650	adr	x0, #0x27668 ; literal pool for: "mimalloc: "
0000000000035654	nop
0000000000035658	mov	x1, x20
000000000003565c	blr	x22
0000000000035660	add	x0, sp, #0x10
0000000000035664	mov	x1, x20
0000000000035668	blr	x22
000000000003566c	ldrb	w8, [x21]
0000000000035670	cmp	w8, #0x1
0000000000035674	b.ne	0x35688
0000000000035678	ldr	x8, [x19]
000000000003567c	mov	x0, x19
0000000000035680	blr	x8
0000000000035684	strb	wzr, [x0]
0000000000035688	add	sp, sp, #0x210
000000000003568c	ldp	x29, x30, [sp, #0x30]
0000000000035690	ldp	x20, x19, [sp, #0x20]
0000000000035694	ldp	x22, x21, [sp, #0x10]
0000000000035698	ldp	x28, x27, [sp], #0x40
000000000003569c	ret
_mi_thread_init:
00000000000356a0	sub	sp, sp, #0x40
00000000000356a4	stp	x22, x21, [sp, #0x10]
00000000000356a8	stp	x20, x19, [sp, #0x20]
00000000000356ac	stp	x29, x30, [sp, #0x30]
00000000000356b0	add	x29, sp, #0x30
00000000000356b4	bl	_mi_process_init
00000000000356b8	adrp	x19, 69 ; 0x7a000
00000000000356bc	add	x19, x19, #0x4f8
00000000000356c0	ldr	x21, [x19]
00000000000356c4	mov	x0, x19
00000000000356c8	blr	x21
00000000000356cc	ldr	x8, [x0]
00000000000356d0	adr	x9, #0x3bc30
00000000000356d4	nop
00000000000356d8	cmp	x8, x9
00000000000356dc	b.ne	0x35918
00000000000356e0	adrp	x22, 67 ; 0x78000
00000000000356e4	ldr	x20, [x22, #0xca0]
00000000000356e8	cbz	x20, 0x356fc
00000000000356ec	bl	0x55dec ; symbol stub for: _pthread_self
00000000000356f0	bl	0x55da4 ; symbol stub for: _pthread_mach_thread_np
00000000000356f4	cmp	x20, w0, uxtw
00000000000356f8	b.ne	0x357dc
00000000000356fc	nop
0000000000035700	ldr	x8, #0x435a8
0000000000035704	adr	x20, #0x42a7c
0000000000035708	nop
000000000003570c	cbnz	x8, 0x357b4
0000000000035710	bl	0x55dec ; symbol stub for: _pthread_self
0000000000035714	bl	0x55da4 ; symbol stub for: _pthread_mach_thread_np
0000000000035718	mov	w8, w0
000000000003571c	str	x8, [x22, #0xca0]
0000000000035720	bl	0x55ba0 ; symbol stub for: _mach_absolute_time
0000000000035724	adr	x8, #-0x1df8
0000000000035728	nop
000000000003572c	adr	x9, #-0x1ee0
0000000000035730	nop
0000000000035734	eor	x8, x9, x8
0000000000035738	eor	x8, x0, x8
000000000003573c	eor	w9, w8, w8, lsr #17
0000000000035740	and	x9, x9, #0xf
0000000000035744	add	x9, x9, #0x1
0000000000035748	mov	w10, #0x11
000000000003574c	mov	x11, #0xe5b9
0000000000035750	movk	x11, #0x1ce4, lsl #16
0000000000035754	movk	x11, #0x476d, lsl #32
0000000000035758	movk	x11, #0xbf58, lsl #48
000000000003575c	mov	x12, #0x11eb
0000000000035760	movk	x12, #0x1331, lsl #16
0000000000035764	movk	x12, #0x49bb, lsl #32
0000000000035768	movk	x12, #0x94d0, lsl #48
000000000003576c	cmp	x8, #0x0
0000000000035770	csel	x8, x10, x8, eq
0000000000035774	eor	x8, x8, x8, lsr #30
0000000000035778	mul	x8, x8, x11
000000000003577c	eor	x8, x8, x8, lsr #27
0000000000035780	mul	x8, x8, x12
0000000000035784	eor	x8, x8, x8, lsr #31
0000000000035788	subs	x9, x9, #0x1
000000000003578c	b.ne	0x3576c
0000000000035790	str	x8, [x20, #0xb28]
0000000000035794	add	x0, x20, #0xb40
0000000000035798	bl	__mi_random_init
000000000003579c	mov	x0, x20
00000000000357a0	bl	__mi_heap_random_next
00000000000357a4	str	x0, [x20, #0xb30]
00000000000357a8	mov	x0, x20
00000000000357ac	bl	__mi_heap_random_next
00000000000357b0	str	x0, [x20, #0xb38]
00000000000357b4	mov	x0, x19
00000000000357b8	blr	x21
00000000000357bc	str	x20, [x0]
00000000000357c0	nop
00000000000357c4	ldr	x0, #0x447b4
00000000000357c8	cmn	x0, #0x1
00000000000357cc	b.eq	0x3589c
00000000000357d0	adr	x1, #0x429b0
00000000000357d4	nop
00000000000357d8	b	0x35898
00000000000357dc	mov	w0, #0xee0
00000000000357e0	bl	__mi_os_alloc
00000000000357e4	mov	x20, x0
00000000000357e8	cbnz	x0, 0x357fc
00000000000357ec	mov	w0, #0xee0
00000000000357f0	bl	__mi_os_alloc
00000000000357f4	mov	x20, x0
00000000000357f8	cbz	x0, 0x3592c
00000000000357fc	add	x22, x20, #0xbf0
0000000000035800	adr	x1, #0x3bb00
0000000000035804	nop
0000000000035808	mov	x0, x20
000000000003580c	mov	w2, #0xbf0
0000000000035810	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000035814	bl	0x55dec ; symbol stub for: _pthread_self
0000000000035818	bl	0x55da4 ; symbol stub for: _pthread_mach_thread_np
000000000003581c	mov	w8, w0
0000000000035820	str	x8, [x20, #0xb20]
0000000000035824	add	x0, x20, #0xb40
0000000000035828	bl	__mi_random_init
000000000003582c	mov	x0, x20
0000000000035830	bl	__mi_heap_random_next
0000000000035834	orr	x8, x0, #0x1
0000000000035838	str	x8, [x20, #0xb28]
000000000003583c	mov	x0, x20
0000000000035840	bl	__mi_heap_random_next
0000000000035844	str	x0, [x20, #0xb30]
0000000000035848	mov	x0, x20
000000000003584c	bl	__mi_heap_random_next
0000000000035850	str	x0, [x20, #0xb38]
0000000000035854	str	x22, [x20]
0000000000035858	str	x20, [x20, #0xc00]
000000000003585c	str	x20, [x20, #0xc08]
0000000000035860	dup.2d	v0, x20
0000000000035864	nop
0000000000035868	ldr	q1, 0x58040
000000000003586c	add.2d	v0, v0, v1
0000000000035870	str	q0, [x20, #0xc80]
0000000000035874	str	d0, [x20, #0xc98]
0000000000035878	mov	x0, x19
000000000003587c	blr	x21
0000000000035880	str	x20, [x0]
0000000000035884	nop
0000000000035888	ldr	x0, #0x446f0
000000000003588c	cmn	x0, #0x1
0000000000035890	b.eq	0x3589c
0000000000035894	mov	x1, x20
0000000000035898	bl	0x55e04 ; symbol stub for: _pthread_setspecific
000000000003589c	adr	x10, #0x5f37c
00000000000358a0	nop
00000000000358a4	ldxr	x8, [x10]
00000000000358a8	add	x9, x8, #0x1
00000000000358ac	stxr	w11, x9, [x10]
00000000000358b0	cbnz	w11, 0x358a4
00000000000358b4	nop
00000000000358b8	ldr	x12, #0x5f358
00000000000358bc	adr	x10, #0x5f354
00000000000358c0	nop
00000000000358c4	b	0x358d8
00000000000358c8	clrex
00000000000358cc	mov	w13, #0x0
00000000000358d0	mov	x12, x11
00000000000358d4	cbnz	w13, 0x35900
00000000000358d8	cmp	x12, x8
00000000000358dc	b.gt	0x35900
00000000000358e0	ldxr	x11, [x10]
00000000000358e4	cmp	x11, x12
00000000000358e8	b.ne	0x358c8
00000000000358ec	stlxr	w12, x9, [x10]
00000000000358f0	cbnz	w12, 0x358cc
00000000000358f4	mov	w13, #0x1
00000000000358f8	mov	x12, x11
00000000000358fc	cbz	w13, 0x358d8
0000000000035900	adr	x8, #0x5f300
0000000000035904	nop
0000000000035908	ldxr	x9, [x8]
000000000003590c	add	x9, x9, #0x1
0000000000035910	stxr	w10, x9, [x8]
0000000000035914	cbnz	w10, 0x35908
0000000000035918	ldp	x29, x30, [sp, #0x30]
000000000003591c	ldp	x20, x19, [sp, #0x20]
0000000000035920	ldp	x22, x21, [sp, #0x10]
0000000000035924	add	sp, sp, #0x40
0000000000035928	ret
000000000003592c	mov	w8, #0xee0
0000000000035930	str	x8, [sp]
0000000000035934	adr	x1, #0x27337 ; literal pool for: "unable to allocate thread local heap metadata (%zu bytes)\n"
0000000000035938	nop
000000000003593c	mov	w0, #0xc
0000000000035940	bl	__mi_error_message
0000000000035944	b	0x3589c
_mi_option_get:
0000000000035948	sub	sp, sp, #0x130
000000000003594c	stp	x28, x27, [sp, #0xd0]
0000000000035950	stp	x26, x25, [sp, #0xe0]
0000000000035954	stp	x24, x23, [sp, #0xf0]
0000000000035958	stp	x22, x21, [sp, #0x100]
000000000003595c	stp	x20, x19, [sp, #0x110]
0000000000035960	stp	x29, x30, [sp, #0x120]
0000000000035964	add	x29, sp, #0x120
0000000000035968	adr	x25, #0x44610
000000000003596c	nop
0000000000035970	mov	w8, #0x18
0000000000035974	umaddl	x8, w0, w8, x25
0000000000035978	add	x22, x8, #0x388
000000000003597c	ldr	w9, [x8, #0x390]
0000000000035980	cbz	w9, 0x359a8
0000000000035984	ldr	x0, [x22]
0000000000035988	ldp	x29, x30, [sp, #0x120]
000000000003598c	ldp	x20, x19, [sp, #0x110]
0000000000035990	ldp	x22, x21, [sp, #0x100]
0000000000035994	ldp	x24, x23, [sp, #0xf0]
0000000000035998	ldp	x26, x25, [sp, #0xe0]
000000000003599c	ldp	x28, x27, [sp, #0xd0]
00000000000359a0	add	sp, sp, #0x130
00000000000359a4	ret
00000000000359a8	mov	w19, w0
00000000000359ac	add	x8, x8, #0x390
00000000000359b0	str	x8, [sp, #0x20]
00000000000359b4	strb	wzr, [sp, #0x87]
00000000000359b8	adr	x1, #0x27134 ; literal pool for: "mimalloc_"
00000000000359bc	nop
00000000000359c0	add	x0, sp, #0x87
00000000000359c4	mov	w2, #0x40
00000000000359c8	bl	0x55e94 ; symbol stub for: _strncpy
00000000000359cc	strb	wzr, [sp, #0xc7]
00000000000359d0	mov	w8, #0x18
00000000000359d4	str	x19, [sp, #0x18]
00000000000359d8	madd	x19, x19, x8, x25
00000000000359dc	ldr	x1, [x19, #0x398]
00000000000359e0	add	x0, sp, #0x87
00000000000359e4	mov	w2, #0x40
00000000000359e8	mov	w3, #0x41
00000000000359ec	bl	0x55a98 ; symbol stub for: ___strncat_chk
00000000000359f0	strb	wzr, [sp, #0xc7]
00000000000359f4	add	x0, sp, #0x87
00000000000359f8	bl	0x55e7c ; symbol stub for: _strlen
00000000000359fc	cbz	x0, 0x35acc
0000000000035a00	mov	x24, x0
0000000000035a04	bl	0x558a0 ; symbol stub for: __NSGetEnviron
0000000000035a08	ldr	x8, [x0]
0000000000035a0c	str	x8, [sp, #0x30]
0000000000035a10	cbz	x8, 0x35acc
0000000000035a14	mov	x28, #0x0
0000000000035a18	add	x8, x19, #0x398
0000000000035a1c	str	x8, [sp, #0x10]
0000000000035a20	add	x8, sp, #0x87
0000000000035a24	add	x8, x8, #0x1
0000000000035a28	str	x8, [sp, #0x28]
0000000000035a2c	b	0x35a4c
0000000000035a30	add	x8, x26, x24
0000000000035a34	ldrb	w9, [x8]
0000000000035a38	cmp	w9, #0x3d
0000000000035a3c	b.eq	0x35ae8
0000000000035a40	add	x28, x28, #0x1
0000000000035a44	cmp	x28, #0x100
0000000000035a48	b.eq	0x35acc
0000000000035a4c	ldr	x8, [sp, #0x30]
0000000000035a50	ldr	x26, [x8, x28, lsl #3]
0000000000035a54	cbz	x26, 0x35acc
0000000000035a58	ldrb	w8, [sp, #0x87]
0000000000035a5c	cbz	w8, 0x35ab0
0000000000035a60	ldr	x27, [sp, #0x28]
0000000000035a64	mov	x19, x24
0000000000035a68	mov	x23, x26
0000000000035a6c	cbz	x19, 0x35aa8
0000000000035a70	ldrb	w9, [x23]
0000000000035a74	cbz	w9, 0x35aa8
0000000000035a78	sxtb	w20, w9
0000000000035a7c	sxtb	w0, w8
0000000000035a80	bl	0x55aa4 ; symbol stub for: ___toupper
0000000000035a84	mov	x21, x0
0000000000035a88	mov	x0, x20
0000000000035a8c	bl	0x55aa4 ; symbol stub for: ___toupper
0000000000035a90	cmp	w21, w0
0000000000035a94	b.ne	0x35ab8
0000000000035a98	add	x23, x23, #0x1
0000000000035a9c	sub	x19, x19, #0x1
0000000000035aa0	ldrb	w8, [x27], #0x1
0000000000035aa4	cbnz	w8, 0x35a6c
0000000000035aa8	cbnz	x19, 0x35abc
0000000000035aac	b	0x35a30
0000000000035ab0	mov	x23, x26
0000000000035ab4	b	0x35abc
0000000000035ab8	ldurb	w8, [x27, #-0x1]
0000000000035abc	ldrb	w9, [x23]
0000000000035ac0	cmp	w9, w8, uxtb
0000000000035ac4	b.eq	0x35a30
0000000000035ac8	b	0x35a40
0000000000035acc	adrp	x8, 95 ; 0x94000
0000000000035ad0	ldrb	w8, [x8, #0x50c]
0000000000035ad4	cmp	w8, #0x1
0000000000035ad8	b.ne	0x35984
0000000000035adc	ldr	x9, [sp, #0x20]
0000000000035ae0	str	w8, [x9]
0000000000035ae4	b	0x35984
0000000000035ae8	add	x1, x8, #0x1
0000000000035aec	strb	wzr, [sp, #0x46]
0000000000035af0	mov	w19, #0x40
0000000000035af4	add	x0, sp, #0x46
0000000000035af8	mov	w2, #0x40
0000000000035afc	bl	0x55e94 ; symbol stub for: _strncpy
0000000000035b00	strb	wzr, [sp, #0x86]
0000000000035b04	add	x0, sp, #0x46
0000000000035b08	bl	0x55e7c ; symbol stub for: _strlen
0000000000035b0c	cmp	x0, #0x40
0000000000035b10	csel	x19, x0, x19, lo
0000000000035b14	cbz	x19, 0x35b38
0000000000035b18	add	x20, sp, #0x87
0000000000035b1c	add	x21, sp, #0x46
0000000000035b20	mov	x23, x19
0000000000035b24	ldrsb	w0, [x21], #0x1
0000000000035b28	bl	0x55aa4 ; symbol stub for: ___toupper
0000000000035b2c	strb	w0, [x20], #0x1
0000000000035b30	subs	x23, x23, #0x1
0000000000035b34	b.ne	0x35b24
0000000000035b38	add	x8, sp, #0x87
0000000000035b3c	strb	wzr, [x8, x19]
0000000000035b40	ldrb	w8, [sp, #0x87]
0000000000035b44	cbz	w8, 0x35b5c
0000000000035b48	adr	x0, #0x26fae ; literal pool for: "1;TRUE;YES;ON"
0000000000035b4c	nop
0000000000035b50	add	x1, sp, #0x87
0000000000035b54	bl	0x55eac ; symbol stub for: _strstr
0000000000035b58	cbz	x0, 0x35b6c
0000000000035b5c	mov	w8, #0x1
0000000000035b60	str	x8, [x22]
0000000000035b64	mov	w8, #0x2
0000000000035b68	b	0x35adc
0000000000035b6c	adr	x0, #0x26f98 ; literal pool for: "0;FALSE;NO;OFF"
0000000000035b70	nop
0000000000035b74	add	x19, sp, #0x87
0000000000035b78	add	x1, sp, #0x87
0000000000035b7c	bl	0x55eac ; symbol stub for: _strstr
0000000000035b80	cbz	x0, 0x35b90
0000000000035b84	str	xzr, [x22]
0000000000035b88	mov	w8, #0x2
0000000000035b8c	b	0x35adc
0000000000035b90	str	x19, [sp, #0x38]
0000000000035b94	add	x0, sp, #0x87
0000000000035b98	add	x1, sp, #0x38
0000000000035b9c	mov	w2, #0xa
0000000000035ba0	bl	0x55eb8 ; symbol stub for: _strtol
0000000000035ba4	mov	w8, #0x18
0000000000035ba8	ldr	x9, [sp, #0x18]
0000000000035bac	madd	x8, x9, x8, x25
0000000000035bb0	ldr	w9, [x8, #0x394]
0000000000035bb4	ldr	x8, [sp, #0x38]
0000000000035bb8	cmp	w9, #0x8
0000000000035bbc	b.ne	0x35c10
0000000000035bc0	ldrb	w9, [x8]
0000000000035bc4	cmp	w9, #0x47
0000000000035bc8	b.eq	0x35be8
0000000000035bcc	cmp	w9, #0x4d
0000000000035bd0	b.eq	0x35bf0
0000000000035bd4	cmp	w9, #0x4b
0000000000035bd8	b.eq	0x35bf4
0000000000035bdc	add	x10, x0, #0x3ff
0000000000035be0	lsr	x0, x10, #10
0000000000035be4	b	0x35c00
0000000000035be8	lsl	x0, x0, #20
0000000000035bec	b	0x35bf4
0000000000035bf0	lsl	x0, x0, #10
0000000000035bf4	add	x8, x8, #0x1
0000000000035bf8	str	x8, [sp, #0x38]
0000000000035bfc	ldrb	w9, [x8]
0000000000035c00	cmp	w9, #0x42
0000000000035c04	b.ne	0x35c10
0000000000035c08	add	x8, x8, #0x1
0000000000035c0c	str	x8, [sp, #0x38]
0000000000035c10	ldrb	w8, [x8]
0000000000035c14	cbz	w8, 0x35c3c
0000000000035c18	ldr	x8, [sp, #0x10]
0000000000035c1c	ldr	x8, [x8]
0000000000035c20	add	x9, sp, #0x87
0000000000035c24	stp	x8, x9, [sp]
0000000000035c28	adr	x0, #0x26eeb ; literal pool for: "environment option mimalloc_%s has an invalid value: %s\n"
0000000000035c2c	nop
0000000000035c30	bl	__mi_warning_message
0000000000035c34	mov	w8, #0x1
0000000000035c38	b	0x35adc
0000000000035c3c	str	x0, [x22]
0000000000035c40	mov	w8, #0x2
0000000000035c44	b	0x35adc
__mi_os_alloc_aligned:
0000000000035c48	sub	sp, sp, #0x90
0000000000035c4c	stp	x28, x27, [sp, #0x30]
0000000000035c50	stp	x26, x25, [sp, #0x40]
0000000000035c54	stp	x24, x23, [sp, #0x50]
0000000000035c58	stp	x22, x21, [sp, #0x60]
0000000000035c5c	stp	x20, x19, [sp, #0x70]
0000000000035c60	stp	x29, x30, [sp, #0x80]
0000000000035c64	add	x29, sp, #0x80
0000000000035c68	cbz	x0, 0x35d68
0000000000035c6c	mov	x23, x2
0000000000035c70	mov	x19, x1
0000000000035c74	lsr	x8, x0, #19
0000000000035c78	adrp	x28, 68 ; 0x79000
0000000000035c7c	cbnz	x8, 0x35c88
0000000000035c80	ldr	x8, [x28, #0xf80]
0000000000035c84	b	0x35cbc
0000000000035c88	cmp	x0, #0x200, lsl #12
0000000000035c8c	b.hs	0x35c98
0000000000035c90	mov	w8, #0x10000
0000000000035c94	b	0x35cbc
0000000000035c98	cmp	x0, #0x800, lsl #12
0000000000035c9c	b.hs	0x35ca8
0000000000035ca0	mov	w8, #0x40000
0000000000035ca4	b	0x35cbc
0000000000035ca8	lsr	x8, x0, #25
0000000000035cac	cmp	x8, #0x0
0000000000035cb0	mov	w8, #0x400000
0000000000035cb4	mov	w9, #0x100000
0000000000035cb8	csel	x8, x9, x8, eq
0000000000035cbc	mvn	x9, x8
0000000000035cc0	cmp	x9, x0
0000000000035cc4	b.ls	0x35cf0
0000000000035cc8	add	x9, x0, x8
0000000000035ccc	sub	x9, x9, #0x1
0000000000035cd0	sub	x10, x8, #0x1
0000000000035cd4	tst	x8, x10
0000000000035cd8	b.ne	0x35ce8
0000000000035cdc	neg	x8, x8
0000000000035ce0	and	x0, x9, x8
0000000000035ce4	b	0x35cf0
0000000000035ce8	udiv	x9, x9, x8
0000000000035cec	mul	x0, x9, x8
0000000000035cf0	ldr	x8, [x28, #0xf80]
0000000000035cf4	fmov	d0, x8
0000000000035cf8	cnt.8b	v0, v0
0000000000035cfc	uaddlv.8b	h0, v0
0000000000035d00	fmov	w9, s0
0000000000035d04	mov	w10, #0x3fffff
0000000000035d08	add	x10, x8, x10
0000000000035d0c	udiv	x11, x10, x8
0000000000035d10	mul	x11, x11, x8
0000000000035d14	neg	x12, x8
0000000000035d18	and	x10, x10, x12
0000000000035d1c	cmp	x9, #0x1
0000000000035d20	csel	x21, x11, x10, hi
0000000000035d24	strb	wzr, [sp, #0x2f]
0000000000035d28	cbz	x23, 0x35d3c
0000000000035d2c	ldrb	w10, [x23]
0000000000035d30	strb	w10, [sp, #0x2f]
0000000000035d34	strb	wzr, [x23]
0000000000035d38	b	0x35d44
0000000000035d3c	mov	w10, #0x0
0000000000035d40	add	x23, sp, #0x2f
0000000000035d44	cmp	w10, #0x0
0000000000035d48	cset	w10, ne
0000000000035d4c	fmov	d0, x21
0000000000035d50	cnt.8b	v0, v0
0000000000035d54	uaddlv.8b	h0, v0
0000000000035d58	fmov	w11, s0
0000000000035d5c	cmp	x8, x21
0000000000035d60	ccmp	x11, #0x1, #0x2, ls
0000000000035d64	b.ls	0x35d90
0000000000035d68	mov	x20, #0x0
0000000000035d6c	mov	x0, x20
0000000000035d70	ldp	x29, x30, [sp, #0x80]
0000000000035d74	ldp	x20, x19, [sp, #0x70]
0000000000035d78	ldp	x22, x21, [sp, #0x60]
0000000000035d7c	ldp	x24, x23, [sp, #0x50]
0000000000035d80	ldp	x26, x25, [sp, #0x40]
0000000000035d84	ldp	x28, x27, [sp, #0x30]
0000000000035d88	add	sp, sp, #0x90
0000000000035d8c	ret
0000000000035d90	sub	x11, x8, #0x1
0000000000035d94	add	x11, x11, x0
0000000000035d98	cmp	x9, #0x1
0000000000035d9c	b.hi	0x35db0
0000000000035da0	neg	x8, x8
0000000000035da4	and	x22, x11, x8
0000000000035da8	cbnz	x22, 0x35dbc
0000000000035dac	b	0x35d68
0000000000035db0	udiv	x9, x11, x8
0000000000035db4	mul	x22, x9, x8
0000000000035db8	cbz	x22, 0x35d68
0000000000035dbc	and	w26, w10, w19
0000000000035dc0	cmp	w19, #0x0
0000000000035dc4	mov	w8, #0x3
0000000000035dc8	csel	w24, w8, wzr, ne
0000000000035dcc	mov	w0, #0x11
0000000000035dd0	bl	_mi_option_get
0000000000035dd4	sub	w8, w0, #0x64
0000000000035dd8	lsl	w9, w0, #24
0000000000035ddc	cmp	w8, #0x9b
0000000000035de0	mov	w8, #0x64000000
0000000000035de4	csel	w25, w8, w9, hi
0000000000035de8	adrp	x8, 95 ; 0x94000
0000000000035dec	ldrb	w8, [x8, #0x510]
0000000000035df0	cmp	w8, #0x1
0000000000035df4	b.ne	0x35e7c
0000000000035df8	mov	w0, #0x6
0000000000035dfc	bl	_mi_option_get
0000000000035e00	cbz	x0, 0x35e7c
0000000000035e04	orr	w8, w21, w22
0000000000035e08	tst	x8, #0x1fffff
0000000000035e0c	b.ne	0x35e7c
0000000000035e10	eor	w8, w26, #0x1
0000000000035e14	tbnz	w8, #0x0, 0x35e7c
0000000000035e18	adr	x27, #0x5e7d0
0000000000035e1c	nop
0000000000035e20	ldar	x8, [x27]
0000000000035e24	cbz	x8, 0x35e44
0000000000035e28	sub	x9, x8, #0x1
0000000000035e2c	ldaxr	x10, [x27]
0000000000035e30	cmp	x10, x8
0000000000035e34	b.ne	0x35e78
0000000000035e38	stlxr	w10, x9, [x27]
0000000000035e3c	cbnz	w10, 0x35e2c
0000000000035e40	b	0x35e7c
0000000000035e44	orr	w4, w25, #0x20000
0000000000035e48	mov	w8, #0x1
0000000000035e4c	strb	w8, [x23]
0000000000035e50	mov	x0, x22
0000000000035e54	mov	x1, x21
0000000000035e58	mov	x2, x24
0000000000035e5c	mov	w3, #0x1002
0000000000035e60	bl	_mi_unix_mmapx
0000000000035e64	mov	x20, x0
0000000000035e68	cbnz	x0, 0x35ea0
0000000000035e6c	mov	w8, #0xa
0000000000035e70	stlr	x8, [x27]
0000000000035e74	b	0x35e7c
0000000000035e78	clrex
0000000000035e7c	strb	wzr, [x23]
0000000000035e80	mov	x0, x22
0000000000035e84	mov	x1, x21
0000000000035e88	mov	x2, x24
0000000000035e8c	mov	w3, #0x1042
0000000000035e90	mov	x4, x25
0000000000035e94	bl	_mi_unix_mmapx
0000000000035e98	mov	x20, x0
0000000000035e9c	cbz	x0, 0x35f28
0000000000035ea0	adr	x27, #0x5ecb8
0000000000035ea4	nop
0000000000035ea8	ldxr	x8, [x27]
0000000000035eac	add	x8, x8, x22
0000000000035eb0	stxr	w9, x8, [x27]
0000000000035eb4	cbnz	w9, 0x35ea8
0000000000035eb8	adrp	x25, 95 ; 0x94000
0000000000035ebc	ldr	x10, [x25, #0xb50]
0000000000035ec0	adr	x26, #0x5ec90
0000000000035ec4	nop
0000000000035ec8	b	0x35edc
0000000000035ecc	clrex
0000000000035ed0	mov	w11, #0x0
0000000000035ed4	mov	x10, x9
0000000000035ed8	cbnz	w11, 0x35f04
0000000000035edc	cmp	x10, x8
0000000000035ee0	b.ge	0x35f04
0000000000035ee4	ldxr	x9, [x26]
0000000000035ee8	cmp	x9, x10
0000000000035eec	b.ne	0x35ecc
0000000000035ef0	stlxr	w10, x8, [x26]
0000000000035ef4	cbnz	w10, 0x35ed0
0000000000035ef8	mov	w11, #0x1
0000000000035efc	mov	x10, x9
0000000000035f00	cbz	w11, 0x35edc
0000000000035f04	cmp	x22, #0x1
0000000000035f08	b.lt	0x35f4c
0000000000035f0c	adr	x8, #0x5ec34
0000000000035f10	nop
0000000000035f14	ldxr	x9, [x8]
0000000000035f18	add	x9, x9, x22
0000000000035f1c	stxr	w10, x9, [x8]
0000000000035f20	cbnz	w10, 0x35f14
0000000000035f24	b	0x35f68
0000000000035f28	bl	0x55a8c ; symbol stub for: ___error
0000000000035f2c	ldr	w8, [x0]
0000000000035f30	stp	xzr, xzr, [sp, #0x10]
0000000000035f34	str	x26, [sp, #0x20]
0000000000035f38	stp	x22, x8, [sp]
0000000000035f3c	adr	x0, #0x26a74 ; literal pool for: "unable to allocate OS memory (%zu bytes, error code: %i, address: %p, large only: %d, allow large: %d)\n"
0000000000035f40	nop
0000000000035f44	bl	__mi_warning_message
0000000000035f48	b	0x35d6c
0000000000035f4c	neg	x8, x22
0000000000035f50	adr	x9, #0x5ebf8
0000000000035f54	nop
0000000000035f58	ldxr	x10, [x9]
0000000000035f5c	add	x10, x10, x8
0000000000035f60	stxr	w11, x10, [x9]
0000000000035f64	cbnz	w11, 0x35f58
0000000000035f68	cbz	w19, 0x36010
0000000000035f6c	adr	x9, #0x5ec0c
0000000000035f70	nop
0000000000035f74	ldxr	x8, [x9]
0000000000035f78	add	x8, x8, x22
0000000000035f7c	stxr	w10, x8, [x9]
0000000000035f80	cbnz	w10, 0x35f74
0000000000035f84	nop
0000000000035f88	ldr	x11, #0x5ebe8
0000000000035f8c	adr	x9, #0x5ebe4
0000000000035f90	nop
0000000000035f94	b	0x35fa8
0000000000035f98	clrex
0000000000035f9c	mov	w12, #0x0
0000000000035fa0	mov	x11, x10
0000000000035fa4	cbnz	w12, 0x35fd0
0000000000035fa8	cmp	x11, x8
0000000000035fac	b.ge	0x35fd0
0000000000035fb0	ldxr	x10, [x9]
0000000000035fb4	cmp	x10, x11
0000000000035fb8	b.ne	0x35f98
0000000000035fbc	stlxr	w11, x8, [x9]
0000000000035fc0	cbnz	w11, 0x35f9c
0000000000035fc4	mov	w12, #0x1
0000000000035fc8	mov	x11, x10
0000000000035fcc	cbz	w12, 0x35fa8
0000000000035fd0	cmp	x22, #0x1
0000000000035fd4	b.lt	0x35ff4
0000000000035fd8	adr	x8, #0x5eb88
0000000000035fdc	nop
0000000000035fe0	ldxr	x9, [x8]
0000000000035fe4	add	x9, x9, x22
0000000000035fe8	stxr	w10, x9, [x8]
0000000000035fec	cbnz	w10, 0x35fe0
0000000000035ff0	b	0x36010
0000000000035ff4	neg	x8, x22
0000000000035ff8	adr	x9, #0x5eb70
0000000000035ffc	nop
0000000000036000	ldxr	x10, [x9]
0000000000036004	add	x10, x10, x8
0000000000036008	stxr	w11, x10, [x9]
000000000003600c	cbnz	w11, 0x36000
0000000000036010	udiv	x8, x20, x21
0000000000036014	msub	x8, x8, x21, x20
0000000000036018	cbz	x8, 0x35d6c
000000000003601c	mov	x0, x20
0000000000036020	mov	x1, x22
0000000000036024	bl	0x55c18 ; symbol stub for: _munmap
0000000000036028	neg	x8, x22
000000000003602c	cbz	w19, 0x360d0
0000000000036030	adr	x9, #0x5eb48
0000000000036034	nop
0000000000036038	ldxr	x10, [x9]
000000000003603c	add	x11, x10, x8
0000000000036040	stxr	w12, x11, [x9]
0000000000036044	cbnz	w12, 0x36038
0000000000036048	sub	x9, x10, x22
000000000003604c	nop
0000000000036050	ldr	x12, #0x5eb20
0000000000036054	adr	x10, #0x5eb1c
0000000000036058	nop
000000000003605c	b	0x36070
0000000000036060	clrex
0000000000036064	mov	w13, #0x0
0000000000036068	mov	x12, x11
000000000003606c	cbnz	w13, 0x36098
0000000000036070	cmp	x12, x9
0000000000036074	b.ge	0x36098
0000000000036078	ldxr	x11, [x10]
000000000003607c	cmp	x11, x12
0000000000036080	b.ne	0x36060
0000000000036084	stlxr	w12, x9, [x10]
0000000000036088	cbnz	w12, 0x36064
000000000003608c	mov	w13, #0x1
0000000000036090	mov	x12, x11
0000000000036094	cbz	w13, 0x36070
0000000000036098	tbnz	x22, #0x3f, 0x360b8
000000000003609c	adr	x9, #0x5eacc
00000000000360a0	nop
00000000000360a4	ldxr	x10, [x9]
00000000000360a8	add	x10, x10, x22
00000000000360ac	stxr	w11, x10, [x9]
00000000000360b0	cbnz	w11, 0x360a4
00000000000360b4	b	0x360d0
00000000000360b8	adr	x9, #0x5eaa8
00000000000360bc	nop
00000000000360c0	ldxr	x10, [x9]
00000000000360c4	add	x10, x10, x8
00000000000360c8	stxr	w11, x10, [x9]
00000000000360cc	cbnz	w11, 0x360c0
00000000000360d0	ldxr	x9, [x27]
00000000000360d4	add	x10, x9, x8
00000000000360d8	stxr	w11, x10, [x27]
00000000000360dc	cbnz	w11, 0x360d0
00000000000360e0	sub	x9, x9, x22
00000000000360e4	ldr	x11, [x25, #0xb50]
00000000000360e8	b	0x360fc
00000000000360ec	clrex
00000000000360f0	mov	w12, #0x0
00000000000360f4	mov	x11, x10
00000000000360f8	cbnz	w12, 0x36124
00000000000360fc	cmp	x11, x9
0000000000036100	b.ge	0x36124
0000000000036104	ldxr	x10, [x26]
0000000000036108	cmp	x10, x11
000000000003610c	b.ne	0x360ec
0000000000036110	stlxr	w11, x9, [x26]
0000000000036114	cbnz	w11, 0x360f0
0000000000036118	mov	w12, #0x1
000000000003611c	mov	x11, x10
0000000000036120	cbz	w12, 0x360fc
0000000000036124	tbnz	x22, #0x3f, 0x36144
0000000000036128	adr	x8, #0x5ea20
000000000003612c	nop
0000000000036130	ldxr	x9, [x8]
0000000000036134	add	x9, x9, x22
0000000000036138	stxr	w10, x9, [x8]
000000000003613c	cbnz	w10, 0x36130
0000000000036140	b	0x3615c
0000000000036144	adr	x9, #0x5e9fc
0000000000036148	nop
000000000003614c	ldxr	x10, [x9]
0000000000036150	add	x10, x10, x8
0000000000036154	stxr	w11, x10, [x9]
0000000000036158	cbnz	w11, 0x3614c
000000000003615c	cmn	w0, #0x1
0000000000036160	b.ne	0x36184
0000000000036164	bl	0x55a8c ; symbol stub for: ___error
0000000000036168	ldr	w0, [x0]
000000000003616c	bl	0x55e70 ; symbol stub for: _strerror
0000000000036170	stp	x20, x22, [sp, #0x8]
0000000000036174	str	x0, [sp]
0000000000036178	adr	x0, #0x267fa ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
000000000003617c	nop
0000000000036180	bl	__mi_warning_message
0000000000036184	mvn	x8, x21
0000000000036188	cmp	x22, x8
000000000003618c	b.hs	0x35d68
0000000000036190	adds	x25, x22, x21
0000000000036194	b.eq	0x35d68
0000000000036198	mov	w0, #0x11
000000000003619c	bl	_mi_option_get
00000000000361a0	sub	w8, w0, #0x64
00000000000361a4	lsl	w9, w0, #24
00000000000361a8	cmp	w8, #0x9b
00000000000361ac	mov	w8, #0x64000000
00000000000361b0	csel	w20, w8, w9, hi
00000000000361b4	adrp	x8, 94 ; 0x94000
00000000000361b8	ldrb	w8, [x8, #0x510]
00000000000361bc	cmp	w8, #0x1
00000000000361c0	b.ne	0x361cc
00000000000361c4	mov	w0, #0x6
00000000000361c8	bl	_mi_option_get
00000000000361cc	strb	wzr, [x23]
00000000000361d0	mov	x0, x25
00000000000361d4	mov	x1, x21
00000000000361d8	mov	x2, x24
00000000000361dc	mov	w3, #0x1042
00000000000361e0	mov	x4, x20
00000000000361e4	bl	_mi_unix_mmapx
00000000000361e8	cbz	x0, 0x36268
00000000000361ec	mov	x23, x0
00000000000361f0	ldxr	x8, [x27]
00000000000361f4	add	x8, x8, x25
00000000000361f8	stxr	w9, x8, [x27]
00000000000361fc	cbnz	w9, 0x361f0
0000000000036200	nop
0000000000036204	ldr	x10, #0x5e94c
0000000000036208	b	0x3621c
000000000003620c	clrex
0000000000036210	mov	w11, #0x0
0000000000036214	mov	x10, x9
0000000000036218	cbnz	w11, 0x36244
000000000003621c	cmp	x10, x8
0000000000036220	b.ge	0x36244
0000000000036224	ldxr	x9, [x26]
0000000000036228	cmp	x9, x10
000000000003622c	b.ne	0x3620c
0000000000036230	stlxr	w10, x8, [x26]
0000000000036234	cbnz	w10, 0x36210
0000000000036238	mov	w11, #0x1
000000000003623c	mov	x10, x9
0000000000036240	cbz	w11, 0x3621c
0000000000036244	cmp	x25, #0x1
0000000000036248	b.lt	0x36290
000000000003624c	adr	x8, #0x5e8f4
0000000000036250	nop
0000000000036254	ldxr	x9, [x8]
0000000000036258	add	x9, x9, x25
000000000003625c	stxr	w10, x9, [x8]
0000000000036260	cbnz	w10, 0x36254
0000000000036264	b	0x362ac
0000000000036268	bl	0x55a8c ; symbol stub for: ___error
000000000003626c	ldr	w8, [x0]
0000000000036270	stp	xzr, xzr, [sp, #0x10]
0000000000036274	str	xzr, [sp, #0x20]
0000000000036278	stp	x25, x8, [sp]
000000000003627c	adr	x0, #0x26734 ; literal pool for: "unable to allocate OS memory (%zu bytes, error code: %i, address: %p, large only: %d, allow large: %d)\n"
0000000000036280	nop
0000000000036284	bl	__mi_warning_message
0000000000036288	mov	x20, #0x0
000000000003628c	b	0x35d6c
0000000000036290	neg	x8, x25
0000000000036294	adr	x9, #0x5e8b4
0000000000036298	nop
000000000003629c	ldxr	x10, [x9]
00000000000362a0	add	x10, x10, x8
00000000000362a4	stxr	w11, x10, [x9]
00000000000362a8	cbnz	w11, 0x3629c
00000000000362ac	cbz	w19, 0x36354
00000000000362b0	adr	x9, #0x5e8c8
00000000000362b4	nop
00000000000362b8	ldxr	x8, [x9]
00000000000362bc	add	x8, x8, x25
00000000000362c0	stxr	w10, x8, [x9]
00000000000362c4	cbnz	w10, 0x362b8
00000000000362c8	nop
00000000000362cc	ldr	x11, #0x5e8a4
00000000000362d0	adr	x9, #0x5e8a0
00000000000362d4	nop
00000000000362d8	b	0x362ec
00000000000362dc	clrex
00000000000362e0	mov	w12, #0x0
00000000000362e4	mov	x11, x10
00000000000362e8	cbnz	w12, 0x36314
00000000000362ec	cmp	x11, x8
00000000000362f0	b.ge	0x36314
00000000000362f4	ldxr	x10, [x9]
00000000000362f8	cmp	x10, x11
00000000000362fc	b.ne	0x362dc
0000000000036300	stlxr	w11, x8, [x9]
0000000000036304	cbnz	w11, 0x362e0
0000000000036308	mov	w12, #0x1
000000000003630c	mov	x11, x10
0000000000036310	cbz	w12, 0x362ec
0000000000036314	cmp	x25, #0x1
0000000000036318	b.lt	0x36338
000000000003631c	adr	x8, #0x5e844
0000000000036320	nop
0000000000036324	ldxr	x9, [x8]
0000000000036328	add	x9, x9, x25
000000000003632c	stxr	w10, x9, [x8]
0000000000036330	cbnz	w10, 0x36324
0000000000036334	b	0x36354
0000000000036338	neg	x8, x25
000000000003633c	adr	x9, #0x5e82c
0000000000036340	nop
0000000000036344	ldxr	x10, [x9]
0000000000036348	add	x10, x10, x8
000000000003634c	stxr	w11, x10, [x9]
0000000000036350	cbnz	w11, 0x36344
0000000000036354	add	x8, x21, x23
0000000000036358	sub	x8, x8, #0x1
000000000003635c	neg	x9, x21
0000000000036360	and	x20, x8, x9
0000000000036364	ldr	x8, [x28, #0xf80]
0000000000036368	add	x9, x22, x8
000000000003636c	sub	x9, x9, #0x1
0000000000036370	sub	x10, x8, #0x1
0000000000036374	udiv	x11, x9, x8
0000000000036378	mul	x11, x11, x8
000000000003637c	neg	x12, x8
0000000000036380	and	x9, x9, x12
0000000000036384	tst	x8, x10
0000000000036388	csel	x24, x11, x9, ne
000000000003638c	sub	x22, x20, x23
0000000000036390	sub	x8, x25, x22
0000000000036394	sub	x21, x8, x24
0000000000036398	adrp	x25, 94 ; 0x94000
000000000003639c	cbz	x22, 0x36508
00000000000363a0	mov	x0, x23
00000000000363a4	mov	x1, x22
00000000000363a8	bl	0x55c18 ; symbol stub for: _munmap
00000000000363ac	neg	x8, x22
00000000000363b0	cbz	w19, 0x36454
00000000000363b4	adr	x9, #0x5e7c4
00000000000363b8	nop
00000000000363bc	ldxr	x10, [x9]
00000000000363c0	add	x11, x10, x8
00000000000363c4	stxr	w12, x11, [x9]
00000000000363c8	cbnz	w12, 0x363bc
00000000000363cc	sub	x9, x10, x22
00000000000363d0	nop
00000000000363d4	ldr	x12, #0x5e79c
00000000000363d8	adr	x10, #0x5e798
00000000000363dc	nop
00000000000363e0	b	0x363f4
00000000000363e4	clrex
00000000000363e8	mov	w13, #0x0
00000000000363ec	mov	x12, x11
00000000000363f0	cbnz	w13, 0x3641c
00000000000363f4	cmp	x12, x9
00000000000363f8	b.ge	0x3641c
00000000000363fc	ldxr	x11, [x10]
0000000000036400	cmp	x11, x12
0000000000036404	b.ne	0x363e4
0000000000036408	stlxr	w12, x9, [x10]
000000000003640c	cbnz	w12, 0x363e8
0000000000036410	mov	w13, #0x1
0000000000036414	mov	x12, x11
0000000000036418	cbz	w13, 0x363f4
000000000003641c	tbnz	x22, #0x3f, 0x3643c
0000000000036420	adr	x9, #0x5e748
0000000000036424	nop
0000000000036428	ldxr	x10, [x9]
000000000003642c	add	x10, x10, x22
0000000000036430	stxr	w11, x10, [x9]
0000000000036434	cbnz	w11, 0x36428
0000000000036438	b	0x36454
000000000003643c	adr	x9, #0x5e724
0000000000036440	nop
0000000000036444	ldxr	x10, [x9]
0000000000036448	add	x10, x10, x8
000000000003644c	stxr	w11, x10, [x9]
0000000000036450	cbnz	w11, 0x36444
0000000000036454	ldxr	x9, [x27]
0000000000036458	add	x10, x9, x8
000000000003645c	stxr	w11, x10, [x27]
0000000000036460	cbnz	w11, 0x36454
0000000000036464	sub	x9, x9, x22
0000000000036468	ldr	x11, [x25, #0xb50]
000000000003646c	b	0x36480
0000000000036470	clrex
0000000000036474	mov	w12, #0x0
0000000000036478	mov	x11, x10
000000000003647c	cbnz	w12, 0x364a8
0000000000036480	cmp	x11, x9
0000000000036484	b.ge	0x364a8
0000000000036488	ldxr	x10, [x26]
000000000003648c	cmp	x10, x11
0000000000036490	b.ne	0x36470
0000000000036494	stlxr	w11, x9, [x26]
0000000000036498	cbnz	w11, 0x36474
000000000003649c	mov	w12, #0x1
00000000000364a0	mov	x11, x10
00000000000364a4	cbz	w12, 0x36480
00000000000364a8	tbnz	x22, #0x3f, 0x364c8
00000000000364ac	adr	x8, #0x5e69c
00000000000364b0	nop
00000000000364b4	ldxr	x9, [x8]
00000000000364b8	add	x9, x9, x22
00000000000364bc	stxr	w10, x9, [x8]
00000000000364c0	cbnz	w10, 0x364b4
00000000000364c4	b	0x364e0
00000000000364c8	adr	x9, #0x5e678
00000000000364cc	nop
00000000000364d0	ldxr	x10, [x9]
00000000000364d4	add	x10, x10, x8
00000000000364d8	stxr	w11, x10, [x9]
00000000000364dc	cbnz	w11, 0x364d0
00000000000364e0	cmn	w0, #0x1
00000000000364e4	b.ne	0x36508
00000000000364e8	bl	0x55a8c ; symbol stub for: ___error
00000000000364ec	ldr	w0, [x0]
00000000000364f0	bl	0x55e70 ; symbol stub for: _strerror
00000000000364f4	stp	x23, x22, [sp, #0x8]
00000000000364f8	str	x0, [sp]
00000000000364fc	adr	x0, #0x26476 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
0000000000036500	nop
0000000000036504	bl	__mi_warning_message
0000000000036508	cbz	x21, 0x35d6c
000000000003650c	cbz	x20, 0x35d6c
0000000000036510	add	x22, x20, x24
0000000000036514	mov	x0, x22
0000000000036518	mov	x1, x21
000000000003651c	bl	0x55c18 ; symbol stub for: _munmap
0000000000036520	neg	x8, x21
0000000000036524	cbz	w19, 0x365c8
0000000000036528	adr	x9, #0x5e650
000000000003652c	nop
0000000000036530	ldxr	x10, [x9]
0000000000036534	add	x11, x10, x8
0000000000036538	stxr	w12, x11, [x9]
000000000003653c	cbnz	w12, 0x36530
0000000000036540	sub	x9, x10, x21
0000000000036544	nop
0000000000036548	ldr	x12, #0x5e628
000000000003654c	adr	x10, #0x5e624
0000000000036550	nop
0000000000036554	b	0x36568
0000000000036558	clrex
000000000003655c	mov	w13, #0x0
0000000000036560	mov	x12, x11
0000000000036564	cbnz	w13, 0x36590
0000000000036568	cmp	x12, x9
000000000003656c	b.ge	0x36590
0000000000036570	ldxr	x11, [x10]
0000000000036574	cmp	x11, x12
0000000000036578	b.ne	0x36558
000000000003657c	stlxr	w12, x9, [x10]
0000000000036580	cbnz	w12, 0x3655c
0000000000036584	mov	w13, #0x1
0000000000036588	mov	x12, x11
000000000003658c	cbz	w13, 0x36568
0000000000036590	tbnz	x21, #0x3f, 0x365b0
0000000000036594	adr	x9, #0x5e5d4
0000000000036598	nop
000000000003659c	ldxr	x10, [x9]
00000000000365a0	add	x10, x10, x21
00000000000365a4	stxr	w11, x10, [x9]
00000000000365a8	cbnz	w11, 0x3659c
00000000000365ac	b	0x365c8
00000000000365b0	adr	x9, #0x5e5b0
00000000000365b4	nop
00000000000365b8	ldxr	x10, [x9]
00000000000365bc	add	x10, x10, x8
00000000000365c0	stxr	w11, x10, [x9]
00000000000365c4	cbnz	w11, 0x365b8
00000000000365c8	ldxr	x9, [x27]
00000000000365cc	add	x10, x9, x8
00000000000365d0	stxr	w11, x10, [x27]
00000000000365d4	cbnz	w11, 0x365c8
00000000000365d8	sub	x9, x9, x21
00000000000365dc	ldr	x11, [x25, #0xb50]
00000000000365e0	b	0x365f4
00000000000365e4	clrex
00000000000365e8	mov	w12, #0x0
00000000000365ec	mov	x11, x10
00000000000365f0	cbnz	w12, 0x3661c
00000000000365f4	cmp	x11, x9
00000000000365f8	b.ge	0x3661c
00000000000365fc	ldxr	x10, [x26]
0000000000036600	cmp	x10, x11
0000000000036604	b.ne	0x365e4
0000000000036608	stlxr	w11, x9, [x26]
000000000003660c	cbnz	w11, 0x365e8
0000000000036610	mov	w12, #0x1
0000000000036614	mov	x11, x10
0000000000036618	cbz	w12, 0x365f4
000000000003661c	tbnz	x21, #0x3f, 0x3663c
0000000000036620	adr	x8, #0x5e528
0000000000036624	nop
0000000000036628	ldxr	x9, [x8]
000000000003662c	add	x9, x9, x21
0000000000036630	stxr	w10, x9, [x8]
0000000000036634	cbnz	w10, 0x36628
0000000000036638	b	0x36654
000000000003663c	adr	x9, #0x5e504
0000000000036640	nop
0000000000036644	ldxr	x10, [x9]
0000000000036648	add	x10, x10, x8
000000000003664c	stxr	w11, x10, [x9]
0000000000036650	cbnz	w11, 0x36644
0000000000036654	cmn	w0, #0x1
0000000000036658	b.ne	0x35d6c
000000000003665c	bl	0x55a8c ; symbol stub for: ___error
0000000000036660	ldr	w0, [x0]
0000000000036664	bl	0x55e70 ; symbol stub for: _strerror
0000000000036668	stp	x22, x21, [sp, #0x8]
000000000003666c	str	x0, [sp]
0000000000036670	adr	x0, #0x26302 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
0000000000036674	nop
0000000000036678	b	0x35f44
__mi_os_alloc:
000000000003667c	sub	sp, sp, #0x50
0000000000036680	stp	x20, x19, [sp, #0x30]
0000000000036684	stp	x29, x30, [sp, #0x40]
0000000000036688	add	x29, sp, #0x40
000000000003668c	mov	x19, x0
0000000000036690	lsr	x8, x0, #19
0000000000036694	cbnz	x8, 0x366a4
0000000000036698	nop
000000000003669c	ldr	x8, #0x438e4
00000000000366a0	b	0x366d4
00000000000366a4	cmp	x19, #0x200, lsl #12
00000000000366a8	b.hs	0x366b4
00000000000366ac	mov	w8, #0x10000
00000000000366b0	b	0x366d4
00000000000366b4	mov	w8, #0x40000
00000000000366b8	lsr	x9, x19, #25
00000000000366bc	cmp	x9, #0x0
00000000000366c0	mov	w9, #0x400000
00000000000366c4	mov	w10, #0x100000
00000000000366c8	csel	x9, x10, x9, eq
00000000000366cc	cmp	x19, #0x800, lsl #12
00000000000366d0	csel	x8, x8, x9, lo
00000000000366d4	mvn	x9, x8
00000000000366d8	cmp	x9, x19
00000000000366dc	b.ls	0x36700
00000000000366e0	add	x9, x19, x8
00000000000366e4	sub	x9, x9, #0x1
00000000000366e8	sub	x10, x8, #0x1
00000000000366ec	tst	x8, x10
00000000000366f0	b.ne	0x367e8
00000000000366f4	neg	x8, x8
00000000000366f8	and	x19, x9, x8
00000000000366fc	cbz	x19, 0x367f4
0000000000036700	mov	w0, #0x11
0000000000036704	bl	_mi_option_get
0000000000036708	sub	w8, w0, #0x64
000000000003670c	lsl	w9, w0, #24
0000000000036710	cmp	w8, #0x9b
0000000000036714	mov	w8, #0x64000000
0000000000036718	csel	w20, w8, w9, hi
000000000003671c	adrp	x8, 94 ; 0x94000
0000000000036720	ldrb	w8, [x8, #0x510]
0000000000036724	cmp	w8, #0x1
0000000000036728	b.ne	0x36734
000000000003672c	mov	w0, #0x6
0000000000036730	bl	_mi_option_get
0000000000036734	mov	x0, #0x0
0000000000036738	mov	x1, x19
000000000003673c	mov	w2, #0x3
0000000000036740	mov	w3, #0x1042
0000000000036744	mov	x4, x20
0000000000036748	mov	x5, #0x0
000000000003674c	bl	0x55c00 ; symbol stub for: _mmap
0000000000036750	cmn	x0, #0x1
0000000000036754	csel	x0, xzr, x0, eq
0000000000036758	cbz	x0, 0x36808
000000000003675c	cbz	x19, 0x367f8
0000000000036760	adr	x9, #0x5e3f8
0000000000036764	nop
0000000000036768	ldxr	x8, [x9]
000000000003676c	add	x8, x8, x19
0000000000036770	stxr	w10, x8, [x9]
0000000000036774	cbnz	w10, 0x36768
0000000000036778	nop
000000000003677c	ldr	x11, #0x5e3d4
0000000000036780	adr	x9, #0x5e3d0
0000000000036784	nop
0000000000036788	b	0x3679c
000000000003678c	clrex
0000000000036790	mov	w12, #0x0
0000000000036794	mov	x11, x10
0000000000036798	cbnz	w12, 0x367c4
000000000003679c	cmp	x11, x8
00000000000367a0	b.ge	0x367c4
00000000000367a4	ldxr	x10, [x9]
00000000000367a8	cmp	x10, x11
00000000000367ac	b.ne	0x3678c
00000000000367b0	stlxr	w11, x8, [x9]
00000000000367b4	cbnz	w11, 0x36790
00000000000367b8	mov	w12, #0x1
00000000000367bc	mov	x11, x10
00000000000367c0	cbz	w12, 0x3679c
00000000000367c4	cmp	x19, #0x1
00000000000367c8	b.lt	0x3683c
00000000000367cc	adr	x8, #0x5e374
00000000000367d0	nop
00000000000367d4	ldxr	x9, [x8]
00000000000367d8	add	x9, x9, x19
00000000000367dc	stxr	w10, x9, [x8]
00000000000367e0	cbnz	w10, 0x367d4
00000000000367e4	b	0x36858
00000000000367e8	udiv	x9, x9, x8
00000000000367ec	mul	x19, x9, x8
00000000000367f0	cbnz	x19, 0x36700
00000000000367f4	mov	x0, #0x0
00000000000367f8	ldp	x29, x30, [sp, #0x40]
00000000000367fc	ldp	x20, x19, [sp, #0x30]
0000000000036800	add	sp, sp, #0x50
0000000000036804	ret
0000000000036808	bl	0x55a8c ; symbol stub for: ___error
000000000003680c	ldr	w8, [x0]
0000000000036810	stp	xzr, xzr, [sp, #0x10]
0000000000036814	str	xzr, [sp, #0x20]
0000000000036818	stp	x19, x8, [sp]
000000000003681c	adr	x0, #0x26194 ; literal pool for: "unable to allocate OS memory (%zu bytes, error code: %i, address: %p, large only: %d, allow large: %d)\n"
0000000000036820	nop
0000000000036824	bl	__mi_warning_message
0000000000036828	mov	x0, #0x0
000000000003682c	ldp	x29, x30, [sp, #0x40]
0000000000036830	ldp	x20, x19, [sp, #0x30]
0000000000036834	add	sp, sp, #0x50
0000000000036838	ret
000000000003683c	neg	x8, x19
0000000000036840	adr	x9, #0x5e308
0000000000036844	nop
0000000000036848	ldxr	x10, [x9]
000000000003684c	add	x10, x10, x8
0000000000036850	stxr	w11, x10, [x9]
0000000000036854	cbnz	w11, 0x36848
0000000000036858	adr	x9, #0x5e320
000000000003685c	nop
0000000000036860	ldxr	x8, [x9]
0000000000036864	add	x8, x8, x19
0000000000036868	stxr	w10, x8, [x9]
000000000003686c	cbnz	w10, 0x36860
0000000000036870	nop
0000000000036874	ldr	x11, #0x5e2fc
0000000000036878	adr	x9, #0x5e2f8
000000000003687c	nop
0000000000036880	b	0x36894
0000000000036884	clrex
0000000000036888	mov	w12, #0x0
000000000003688c	mov	x11, x10
0000000000036890	cbnz	w12, 0x368bc
0000000000036894	cmp	x11, x8
0000000000036898	b.ge	0x368bc
000000000003689c	ldxr	x10, [x9]
00000000000368a0	cmp	x10, x11
00000000000368a4	b.ne	0x36884
00000000000368a8	stlxr	w11, x8, [x9]
00000000000368ac	cbnz	w11, 0x36888
00000000000368b0	mov	w12, #0x1
00000000000368b4	mov	x11, x10
00000000000368b8	cbz	w12, 0x36894
00000000000368bc	cmp	x19, #0x1
00000000000368c0	b.lt	0x368e0
00000000000368c4	adr	x8, #0x5e29c
00000000000368c8	nop
00000000000368cc	ldxr	x9, [x8]
00000000000368d0	add	x9, x9, x19
00000000000368d4	stxr	w10, x9, [x8]
00000000000368d8	cbnz	w10, 0x368cc
00000000000368dc	b	0x367f8
00000000000368e0	neg	x8, x19
00000000000368e4	adr	x9, #0x5e284
00000000000368e8	nop
00000000000368ec	ldxr	x10, [x9]
00000000000368f0	add	x10, x10, x8
00000000000368f4	stxr	w11, x10, [x9]
00000000000368f8	cbnz	w11, 0x368ec
00000000000368fc	b	0x367f8
__mi_os_free_ex:
0000000000036900	sub	sp, sp, #0x50
0000000000036904	stp	x22, x21, [sp, #0x20]
0000000000036908	stp	x20, x19, [sp, #0x30]
000000000003690c	stp	x29, x30, [sp, #0x40]
0000000000036910	add	x29, sp, #0x40
0000000000036914	cbz	x0, 0x36998
0000000000036918	mov	x20, x1
000000000003691c	cbz	x1, 0x36998
0000000000036920	mov	x21, x2
0000000000036924	mov	x19, x0
0000000000036928	lsr	x8, x20, #19
000000000003692c	cbnz	x8, 0x3693c
0000000000036930	nop
0000000000036934	ldr	x8, #0x4364c
0000000000036938	b	0x3696c
000000000003693c	cmp	x20, #0x200, lsl #12
0000000000036940	b.hs	0x3694c
0000000000036944	mov	w8, #0x10000
0000000000036948	b	0x3696c
000000000003694c	mov	w8, #0x40000
0000000000036950	lsr	x9, x20, #25
0000000000036954	cmp	x9, #0x0
0000000000036958	mov	w9, #0x400000
000000000003695c	mov	w10, #0x100000
0000000000036960	csel	x9, x10, x9, eq
0000000000036964	cmp	x20, #0x800, lsl #12
0000000000036968	csel	x8, x8, x9, lo
000000000003696c	mvn	x9, x8
0000000000036970	cmp	x9, x20
0000000000036974	b.ls	0x369b8
0000000000036978	add	x9, x20, x8
000000000003697c	sub	x9, x9, #0x1
0000000000036980	sub	x10, x8, #0x1
0000000000036984	tst	x8, x10
0000000000036988	b.ne	0x369ac
000000000003698c	neg	x8, x8
0000000000036990	and	x20, x9, x8
0000000000036994	cbnz	x20, 0x369b8
0000000000036998	ldp	x29, x30, [sp, #0x40]
000000000003699c	ldp	x20, x19, [sp, #0x30]
00000000000369a0	ldp	x22, x21, [sp, #0x20]
00000000000369a4	add	sp, sp, #0x50
00000000000369a8	ret
00000000000369ac	udiv	x9, x9, x8
00000000000369b0	mul	x20, x9, x8
00000000000369b4	cbz	x20, 0x36998
00000000000369b8	mov	x0, x19
00000000000369bc	mov	x1, x20
00000000000369c0	bl	0x55c18 ; symbol stub for: _munmap
00000000000369c4	neg	x8, x20
00000000000369c8	cbz	w21, 0x36a70
00000000000369cc	adr	x9, #0x5e1ac
00000000000369d0	nop
00000000000369d4	ldxr	x10, [x9]
00000000000369d8	add	x11, x10, x8
00000000000369dc	stxr	w12, x11, [x9]
00000000000369e0	cbnz	w12, 0x369d4
00000000000369e4	sub	x9, x10, x20
00000000000369e8	nop
00000000000369ec	ldr	x12, #0x5e184
00000000000369f0	adr	x10, #0x5e180
00000000000369f4	nop
00000000000369f8	b	0x36a0c
00000000000369fc	clrex
0000000000036a00	mov	w13, #0x0
0000000000036a04	mov	x12, x11
0000000000036a08	cbnz	w13, 0x36a34
0000000000036a0c	cmp	x12, x9
0000000000036a10	b.ge	0x36a34
0000000000036a14	ldxr	x11, [x10]
0000000000036a18	cmp	x11, x12
0000000000036a1c	b.ne	0x369fc
0000000000036a20	stlxr	w12, x9, [x10]
0000000000036a24	cbnz	w12, 0x36a00
0000000000036a28	mov	w13, #0x1
0000000000036a2c	mov	x12, x11
0000000000036a30	cbz	w13, 0x36a0c
0000000000036a34	tbnz	x20, #0x3f, 0x36a58
0000000000036a38	adr	x9, #0x5e130
0000000000036a3c	nop
0000000000036a40	ldxr	x10, [x9]
0000000000036a44	add	x10, x10, x20
0000000000036a48	stxr	w11, x10, [x9]
0000000000036a4c	cbnz	w11, 0x36a40
0000000000036a50	cbnz	x20, 0x36a70
0000000000036a54	b	0x36b10
0000000000036a58	adr	x9, #0x5e108
0000000000036a5c	nop
0000000000036a60	ldxr	x10, [x9]
0000000000036a64	add	x10, x10, x8
0000000000036a68	stxr	w11, x10, [x9]
0000000000036a6c	cbnz	w11, 0x36a60
0000000000036a70	adr	x9, #0x5e0e8
0000000000036a74	nop
0000000000036a78	ldxr	x10, [x9]
0000000000036a7c	add	x11, x10, x8
0000000000036a80	stxr	w12, x11, [x9]
0000000000036a84	cbnz	w12, 0x36a78
0000000000036a88	sub	x9, x10, x20
0000000000036a8c	nop
0000000000036a90	ldr	x12, #0x5e0c0
0000000000036a94	adr	x10, #0x5e0bc
0000000000036a98	nop
0000000000036a9c	b	0x36ab0
0000000000036aa0	clrex
0000000000036aa4	mov	w13, #0x0
0000000000036aa8	mov	x12, x11
0000000000036aac	cbnz	w13, 0x36ad8
0000000000036ab0	cmp	x12, x9
0000000000036ab4	b.ge	0x36ad8
0000000000036ab8	ldxr	x11, [x10]
0000000000036abc	cmp	x11, x12
0000000000036ac0	b.ne	0x36aa0
0000000000036ac4	stlxr	w12, x9, [x10]
0000000000036ac8	cbnz	w12, 0x36aa4
0000000000036acc	mov	w13, #0x1
0000000000036ad0	mov	x12, x11
0000000000036ad4	cbz	w13, 0x36ab0
0000000000036ad8	tbnz	x20, #0x3f, 0x36af8
0000000000036adc	adr	x8, #0x5e06c
0000000000036ae0	nop
0000000000036ae4	ldxr	x9, [x8]
0000000000036ae8	add	x9, x9, x20
0000000000036aec	stxr	w10, x9, [x8]
0000000000036af0	cbnz	w10, 0x36ae4
0000000000036af4	b	0x36b10
0000000000036af8	adr	x9, #0x5e048
0000000000036afc	nop
0000000000036b00	ldxr	x10, [x9]
0000000000036b04	add	x10, x10, x8
0000000000036b08	stxr	w11, x10, [x9]
0000000000036b0c	cbnz	w11, 0x36b00
0000000000036b10	cmn	w0, #0x1
0000000000036b14	b.ne	0x36998
0000000000036b18	bl	0x55a8c ; symbol stub for: ___error
0000000000036b1c	ldr	w0, [x0]
0000000000036b20	bl	0x55e70 ; symbol stub for: _strerror
0000000000036b24	stp	x19, x20, [sp, #0x8]
0000000000036b28	str	x0, [sp]
0000000000036b2c	adr	x0, #0x25e46 ; literal pool for: "munmap failed: %s, addr 0x%8li, size %lu\n"
0000000000036b30	nop
0000000000036b34	bl	__mi_warning_message
0000000000036b38	ldp	x29, x30, [sp, #0x40]
0000000000036b3c	ldp	x20, x19, [sp, #0x30]
0000000000036b40	ldp	x22, x21, [sp, #0x20]
0000000000036b44	add	sp, sp, #0x50
0000000000036b48	ret
__mi_stat_decrease:
0000000000036b4c	cbz	x1, 0x36be8
0000000000036b50	adr	x8, #0x5dfb0
0000000000036b54	nop
0000000000036b58	cmp	x0, x8
0000000000036b5c	b.lo	0x36c00
0000000000036b60	adr	x8, #0x5e1e0
0000000000036b64	nop
0000000000036b68	cmp	x0, x8
0000000000036b6c	b.hs	0x36c00
0000000000036b70	neg	x8, x1
0000000000036b74	add	x9, x0, #0x18
0000000000036b78	ldxr	x10, [x9]
0000000000036b7c	add	x11, x10, x8
0000000000036b80	stxr	w12, x11, [x9]
0000000000036b84	cbnz	w12, 0x36b78
0000000000036b88	add	x9, x0, #0x10
0000000000036b8c	sub	x10, x10, x1
0000000000036b90	ldr	x12, [x0, #0x10]
0000000000036b94	b	0x36ba8
0000000000036b98	clrex
0000000000036b9c	mov	w13, #0x0
0000000000036ba0	mov	x12, x11
0000000000036ba4	cbnz	w13, 0x36bd0
0000000000036ba8	cmp	x12, x10
0000000000036bac	b.ge	0x36bd0
0000000000036bb0	ldxr	x11, [x9]
0000000000036bb4	cmp	x11, x12
0000000000036bb8	b.ne	0x36b98
0000000000036bbc	stlxr	w12, x10, [x9]
0000000000036bc0	cbnz	w12, 0x36b9c
0000000000036bc4	mov	w13, #0x1
0000000000036bc8	mov	x12, x11
0000000000036bcc	cbz	w13, 0x36ba8
0000000000036bd0	tbnz	x1, #0x3f, 0x36bec
0000000000036bd4	add	x8, x0, #0x8
0000000000036bd8	ldxr	x9, [x8]
0000000000036bdc	add	x9, x9, x1
0000000000036be0	stxr	w10, x9, [x8]
0000000000036be4	cbnz	w10, 0x36bd8
0000000000036be8	ret
0000000000036bec	ldxr	x9, [x0]
0000000000036bf0	add	x9, x9, x8
0000000000036bf4	stxr	w10, x9, [x0]
0000000000036bf8	cbnz	w10, 0x36bec
0000000000036bfc	b	0x36be8
0000000000036c00	ldp	x9, x8, [x0, #0x10]
0000000000036c04	sub	x8, x8, x1
0000000000036c08	str	x8, [x0, #0x18]
0000000000036c0c	cmp	x8, x9
0000000000036c10	b.le	0x36c18
0000000000036c14	str	x8, [x0, #0x10]
0000000000036c18	tbnz	x1, #0x3f, 0x36c2c
0000000000036c1c	ldr	x8, [x0, #0x8]
0000000000036c20	add	x8, x8, x1
0000000000036c24	str	x8, [x0, #0x8]
0000000000036c28	ret
0000000000036c2c	ldr	x8, [x0]
0000000000036c30	sub	x8, x8, x1
0000000000036c34	str	x8, [x0]
0000000000036c38	ret
__mi_warning_message:
0000000000036c3c	stp	x28, x27, [sp, #-0x40]!
0000000000036c40	stp	x22, x21, [sp, #0x10]
0000000000036c44	stp	x20, x19, [sp, #0x20]
0000000000036c48	stp	x29, x30, [sp, #0x30]
0000000000036c4c	add	x29, sp, #0x30
0000000000036c50	sub	sp, sp, #0x210
0000000000036c54	mov	x19, x0
0000000000036c58	mov	w0, #0x0
0000000000036c5c	bl	_mi_option_get
0000000000036c60	cbnz	x0, 0x36c70
0000000000036c64	mov	w0, #0x2
0000000000036c68	bl	_mi_option_get
0000000000036c6c	cbz	x0, 0x36d70
0000000000036c70	adr	x9, #0x5d958
0000000000036c74	nop
0000000000036c78	ldaxr	x8, [x9]
0000000000036c7c	add	x10, x8, #0x1
0000000000036c80	stlxr	w11, x10, [x9]
0000000000036c84	cbnz	w11, 0x36c78
0000000000036c88	nop
0000000000036c8c	ldr	x9, #0x432fc
0000000000036c90	cmp	x8, x9
0000000000036c94	b.hi	0x36d70
0000000000036c98	add	x8, x29, #0x10
0000000000036c9c	str	x8, [sp, #0x8]
0000000000036ca0	cbz	x19, 0x36d70
0000000000036ca4	adrp	x21, 94 ; 0x94000
0000000000036ca8	ldrb	w8, [x21, #0x50c]
0000000000036cac	adrp	x20, 68 ; 0x7a000
0000000000036cb0	add	x20, x20, #0x510
0000000000036cb4	cmp	w8, #0x1
0000000000036cb8	b.ne	0x36ce0
0000000000036cbc	ldr	x8, [x20]
0000000000036cc0	mov	x0, x20
0000000000036cc4	blr	x8
0000000000036cc8	ldrb	w9, [x0]
0000000000036ccc	tbnz	w9, #0x0, 0x36d70
0000000000036cd0	mov	x0, x20
0000000000036cd4	blr	x8
0000000000036cd8	mov	w8, #0x1
0000000000036cdc	strb	w8, [x0]
0000000000036ce0	add	x0, sp, #0x10
0000000000036ce4	add	x3, x29, #0x10
0000000000036ce8	mov	w1, #0x1ff
0000000000036cec	mov	x2, x19
0000000000036cf0	bl	0x55edc ; symbol stub for: _vsnprintf
0000000000036cf4	ldrb	w8, [x21, #0x50c]
0000000000036cf8	cmp	w8, #0x1
0000000000036cfc	b.ne	0x36d14
0000000000036d00	ldr	x8, [x20]
0000000000036d04	mov	x0, x20
0000000000036d08	blr	x8
0000000000036d0c	mov	w8, #0x1
0000000000036d10	strb	w8, [x0]
0000000000036d14	adr	x21, #0x5d7f8
0000000000036d18	nop
0000000000036d1c	add	x8, x21, #0xc4
0000000000036d20	ldar	x19, [x8]
0000000000036d24	ldur	x8, [x21, #0xcc]
0000000000036d28	adr	x9, #0x60
0000000000036d2c	nop
0000000000036d30	cmp	x8, #0x0
0000000000036d34	csel	x22, x9, x8, eq
0000000000036d38	adr	x0, #0x25c64 ; literal pool for: "mimalloc: warning: "
0000000000036d3c	nop
0000000000036d40	mov	x1, x19
0000000000036d44	blr	x22
0000000000036d48	add	x0, sp, #0x10
0000000000036d4c	mov	x1, x19
0000000000036d50	blr	x22
0000000000036d54	ldrb	w8, [x21]
0000000000036d58	cmp	w8, #0x1
0000000000036d5c	b.ne	0x36d70
0000000000036d60	ldr	x8, [x20]
0000000000036d64	mov	x0, x20
0000000000036d68	blr	x8
0000000000036d6c	strb	wzr, [x0]
0000000000036d70	add	sp, sp, #0x210
0000000000036d74	ldp	x29, x30, [sp, #0x30]
0000000000036d78	ldp	x20, x19, [sp, #0x20]
0000000000036d7c	ldp	x22, x21, [sp, #0x10]
0000000000036d80	ldp	x28, x27, [sp], #0x40
0000000000036d84	ret
_mi_out_buf:
0000000000036d88	stp	x20, x19, [sp, #-0x20]!
0000000000036d8c	stp	x29, x30, [sp, #0x10]
0000000000036d90	add	x29, sp, #0x10
0000000000036d94	cbz	x0, 0x36dd4
0000000000036d98	nop
0000000000036d9c	ldr	x8, #0x5d844
0000000000036da0	lsr	x8, x8, #15
0000000000036da4	cbnz	x8, 0x36dd4
0000000000036da8	mov	x19, x0
0000000000036dac	bl	0x55e7c ; symbol stub for: _strlen
0000000000036db0	cbz	x0, 0x36dd4
0000000000036db4	adr	x9, #0x5d82c
0000000000036db8	nop
0000000000036dbc	ldaxr	x8, [x9]
0000000000036dc0	add	x10, x8, x0
0000000000036dc4	stlxr	w11, x10, [x9]
0000000000036dc8	cbnz	w11, 0x36dbc
0000000000036dcc	lsr	x9, x8, #15
0000000000036dd0	cbz	x9, 0x36de0
0000000000036dd4	ldp	x29, x30, [sp, #0x10]
0000000000036dd8	ldp	x20, x19, [sp], #0x20
0000000000036ddc	ret
0000000000036de0	add	x9, x8, x0
0000000000036de4	mov	w10, #0x7fff
0000000000036de8	sub	x10, x10, x8
0000000000036dec	lsr	x9, x9, #15
0000000000036df0	cmp	x9, #0x0
0000000000036df4	csel	x2, x10, x0, ne
0000000000036df8	adr	x9, #0x456b0
0000000000036dfc	nop
0000000000036e00	add	x0, x9, x8
0000000000036e04	mov	x1, x19
0000000000036e08	ldp	x29, x30, [sp, #0x10]
0000000000036e0c	ldp	x20, x19, [sp], #0x20
0000000000036e10	b	0x55bd0 ; symbol stub for: _memcpy
__mi_stat_increase:
0000000000036e14	cbz	x1, 0x36ea8
0000000000036e18	adr	x8, #0x5dce8
0000000000036e1c	nop
0000000000036e20	cmp	x0, x8
0000000000036e24	b.lo	0x36eac
0000000000036e28	adr	x8, #0x5df18
0000000000036e2c	nop
0000000000036e30	cmp	x0, x8
0000000000036e34	b.hs	0x36eac
0000000000036e38	add	x9, x0, #0x18
0000000000036e3c	ldxr	x8, [x9]
0000000000036e40	add	x8, x8, x1
0000000000036e44	stxr	w10, x8, [x9]
0000000000036e48	cbnz	w10, 0x36e3c
0000000000036e4c	add	x9, x0, #0x10
0000000000036e50	ldr	x11, [x0, #0x10]
0000000000036e54	b	0x36e68
0000000000036e58	clrex
0000000000036e5c	mov	w12, #0x0
0000000000036e60	mov	x11, x10
0000000000036e64	cbnz	w12, 0x36e90
0000000000036e68	cmp	x11, x8
0000000000036e6c	b.ge	0x36e90
0000000000036e70	ldxr	x10, [x9]
0000000000036e74	cmp	x10, x11
0000000000036e78	b.ne	0x36e58
0000000000036e7c	stlxr	w11, x8, [x9]
0000000000036e80	cbnz	w11, 0x36e5c
0000000000036e84	mov	w12, #0x1
0000000000036e88	mov	x11, x10
0000000000036e8c	cbz	w12, 0x36e68
0000000000036e90	cmp	x1, #0x1
0000000000036e94	b.lt	0x36edc
0000000000036e98	ldxr	x8, [x0]
0000000000036e9c	add	x8, x8, x1
0000000000036ea0	stxr	w9, x8, [x0]
0000000000036ea4	cbnz	w9, 0x36e98
0000000000036ea8	ret
0000000000036eac	ldp	x9, x8, [x0, #0x10]
0000000000036eb0	add	x8, x8, x1
0000000000036eb4	str	x8, [x0, #0x18]
0000000000036eb8	cmp	x8, x9
0000000000036ebc	b.le	0x36ec4
0000000000036ec0	str	x8, [x0, #0x10]
0000000000036ec4	cmp	x1, #0x1
0000000000036ec8	b.lt	0x36ef8
0000000000036ecc	ldr	x8, [x0]
0000000000036ed0	add	x8, x8, x1
0000000000036ed4	str	x8, [x0]
0000000000036ed8	ret
0000000000036edc	add	x8, x0, #0x8
0000000000036ee0	neg	x9, x1
0000000000036ee4	ldxr	x10, [x8]
0000000000036ee8	add	x10, x10, x9
0000000000036eec	stxr	w11, x10, [x8]
0000000000036ef0	cbnz	w11, 0x36ee4
0000000000036ef4	b	0x36ea8
0000000000036ef8	ldr	x8, [x0, #0x8]
0000000000036efc	sub	x8, x8, x1
0000000000036f00	str	x8, [x0, #0x8]
0000000000036f04	ret
_mi_unix_mmapx:
0000000000036f08	stp	x26, x25, [sp, #-0x50]!
0000000000036f0c	stp	x24, x23, [sp, #0x10]
0000000000036f10	stp	x22, x21, [sp, #0x20]
0000000000036f14	stp	x20, x19, [sp, #0x30]
0000000000036f18	stp	x29, x30, [sp, #0x40]
0000000000036f1c	add	x29, sp, #0x40
0000000000036f20	mov	x19, x4
0000000000036f24	mov	x20, x3
0000000000036f28	mov	x21, x2
0000000000036f2c	mov	x22, x0
0000000000036f30	sub	x8, x1, #0x1
0000000000036f34	and	x9, x0, #0x3fffff
0000000000036f38	mov	w10, #0x40000000
0000000000036f3c	cmp	x0, x10
0000000000036f40	ccmp	x9, #0x0, #0x0, ls
0000000000036f44	lsr	x8, x8, #22
0000000000036f48	ccmp	x8, #0x0, #0x0, eq
0000000000036f4c	b.ne	0x3700c
0000000000036f50	mov	x23, x1
0000000000036f54	adr	x25, #0x4d56c
0000000000036f58	nop
0000000000036f5c	ldaxr	x24, [x25]
0000000000036f60	add	x8, x24, x22
0000000000036f64	stlxr	w9, x8, [x25]
0000000000036f68	cbnz	w9, 0x36f5c
0000000000036f6c	sub	x8, x24, #0x1
0000000000036f70	lsr	x8, x8, #41
0000000000036f74	cmp	x8, #0xf
0000000000036f78	b.lo	0x36fd4
0000000000036f7c	adrp	x0, 68 ; 0x7a000
0000000000036f80	add	x0, x0, #0x4f8
0000000000036f84	ldr	x8, [x0]
0000000000036f88	blr	x8
0000000000036f8c	ldr	x0, [x0]
0000000000036f90	bl	__mi_heap_random_next
0000000000036f94	lsl	x8, x0, #5
0000000000036f98	and	x8, x8, #0x3ffffc00000
0000000000036f9c	mov	x9, #0x20000000000
0000000000036fa0	add	x8, x8, x9
0000000000036fa4	add	x9, x24, x22
0000000000036fa8	ldaxr	x10, [x25]
0000000000036fac	cmp	x10, x9
0000000000036fb0	b.ne	0x36fc0
0000000000036fb4	stlxr	w10, x8, [x25]
0000000000036fb8	cbnz	w10, 0x36fa8
0000000000036fbc	b	0x36fc4
0000000000036fc0	clrex
0000000000036fc4	ldaxr	x24, [x25]
0000000000036fc8	add	x8, x24, x22
0000000000036fcc	stlxr	w9, x8, [x25]
0000000000036fd0	cbnz	w9, 0x36fc4
0000000000036fd4	cbz	x24, 0x3700c
0000000000036fd8	udiv	x8, x24, x23
0000000000036fdc	msub	x8, x8, x23, x24
0000000000036fe0	cbnz	x8, 0x3700c
0000000000036fe4	mov	x0, x24
0000000000036fe8	mov	x1, x22
0000000000036fec	mov	x2, x21
0000000000036ff0	mov	x3, x20
0000000000036ff4	mov	x4, x19
0000000000036ff8	mov	x5, #0x0
0000000000036ffc	bl	0x55c00 ; symbol stub for: _mmap
0000000000037000	add	x8, x0, #0x1
0000000000037004	cmp	x8, #0x1
0000000000037008	b.hi	0x37030
000000000003700c	mov	x0, #0x0
0000000000037010	mov	x1, x22
0000000000037014	mov	x2, x21
0000000000037018	mov	x3, x20
000000000003701c	mov	x4, x19
0000000000037020	mov	x5, #0x0
0000000000037024	bl	0x55c00 ; symbol stub for: _mmap
0000000000037028	cmn	x0, #0x1
000000000003702c	csel	x0, xzr, x0, eq
0000000000037030	ldp	x29, x30, [sp, #0x40]
0000000000037034	ldp	x20, x19, [sp, #0x30]
0000000000037038	ldp	x22, x21, [sp, #0x20]
000000000003703c	ldp	x24, x23, [sp, #0x10]
0000000000037040	ldp	x26, x25, [sp], #0x50
0000000000037044	ret
__mi_error_message:
0000000000037048	stp	x24, x23, [sp, #-0x40]!
000000000003704c	stp	x22, x21, [sp, #0x10]
0000000000037050	stp	x20, x19, [sp, #0x20]
0000000000037054	stp	x29, x30, [sp, #0x30]
0000000000037058	add	x29, sp, #0x30
000000000003705c	sub	sp, sp, #0x210
0000000000037060	mov	x20, x1
0000000000037064	mov	x19, x0
0000000000037068	add	x8, x29, #0x10
000000000003706c	str	x8, [sp, #0x8]
0000000000037070	mov	w0, #0x0
0000000000037074	bl	_mi_option_get
0000000000037078	cbnz	x0, 0x37088
000000000003707c	mov	w0, #0x2
0000000000037080	bl	_mi_option_get
0000000000037084	cbz	x0, 0x37180
0000000000037088	adr	x9, #0x5d590
000000000003708c	nop
0000000000037090	ldaxr	x8, [x9]
0000000000037094	add	x10, x8, #0x1
0000000000037098	stlxr	w11, x10, [x9]
000000000003709c	cbnz	w11, 0x37090
00000000000370a0	nop
00000000000370a4	ldr	x9, #0x42eec
00000000000370a8	cmp	x8, x9
00000000000370ac	b.hi	0x37180
00000000000370b0	cbz	x20, 0x37180
00000000000370b4	adrp	x22, 93 ; 0x94000
00000000000370b8	ldrb	w8, [x22, #0x50c]
00000000000370bc	adrp	x21, 67 ; 0x7a000
00000000000370c0	add	x21, x21, #0x510
00000000000370c4	cmp	w8, #0x1
00000000000370c8	b.ne	0x370f0
00000000000370cc	ldr	x8, [x21]
00000000000370d0	mov	x0, x21
00000000000370d4	blr	x8
00000000000370d8	ldrb	w9, [x0]
00000000000370dc	tbnz	w9, #0x0, 0x37180
00000000000370e0	mov	x0, x21
00000000000370e4	blr	x8
00000000000370e8	mov	w8, #0x1
00000000000370ec	strb	w8, [x0]
00000000000370f0	add	x0, sp, #0x10
00000000000370f4	add	x3, x29, #0x10
00000000000370f8	mov	w1, #0x1ff
00000000000370fc	mov	x2, x20
0000000000037100	bl	0x55edc ; symbol stub for: _vsnprintf
0000000000037104	ldrb	w8, [x22, #0x50c]
0000000000037108	cmp	w8, #0x1
000000000003710c	b.ne	0x37124
0000000000037110	ldr	x8, [x21]
0000000000037114	mov	x0, x21
0000000000037118	blr	x8
000000000003711c	mov	w8, #0x1
0000000000037120	strb	w8, [x0]
0000000000037124	adr	x22, #0x5d3e8
0000000000037128	nop
000000000003712c	add	x8, x22, #0xc4
0000000000037130	ldar	x20, [x8]
0000000000037134	ldur	x8, [x22, #0xcc]
0000000000037138	adr	x9, #-0x3b0
000000000003713c	nop
0000000000037140	cmp	x8, #0x0
0000000000037144	csel	x23, x9, x8, eq
0000000000037148	adr	x0, #0x25b5e ; literal pool for: "mimalloc: error: "
000000000003714c	nop
0000000000037150	mov	x1, x20
0000000000037154	blr	x23
0000000000037158	add	x0, sp, #0x10
000000000003715c	mov	x1, x20
0000000000037160	blr	x23
0000000000037164	ldrb	w8, [x22]
0000000000037168	cmp	w8, #0x1
000000000003716c	b.ne	0x37180
0000000000037170	ldr	x8, [x21]
0000000000037174	mov	x0, x21
0000000000037178	blr	x8
000000000003717c	strb	wzr, [x0]
0000000000037180	nop
0000000000037184	ldr	x8, #0x5d49c
0000000000037188	cbz	x8, 0x371a4
000000000003718c	adr	x8, #0x5d494
0000000000037190	nop
0000000000037194	ldr	x9, [x8], #0x8
0000000000037198	ldar	x1, [x8]
000000000003719c	mov	x0, x19
00000000000371a0	blr	x9
00000000000371a4	add	sp, sp, #0x210
00000000000371a8	ldp	x29, x30, [sp, #0x30]
00000000000371ac	ldp	x20, x19, [sp, #0x20]
00000000000371b0	ldp	x22, x21, [sp, #0x10]
00000000000371b4	ldp	x24, x23, [sp], #0x40
00000000000371b8	ret
_mi_stats_merge_from:
00000000000371bc	adr	x8, #0x5d944
00000000000371c0	nop
00000000000371c4	cmp	x0, x8
00000000000371c8	b.eq	0x37a60
00000000000371cc	stp	x29, x30, [sp, #-0x10]!
00000000000371d0	mov	x29, sp
00000000000371d4	ldr	x9, [x0]
00000000000371d8	cbnz	x9, 0x371e4
00000000000371dc	ldr	x10, [x0, #0x8]
00000000000371e0	cbz	x10, 0x37248
00000000000371e4	ldxr	x10, [x8]
00000000000371e8	add	x10, x10, x9
00000000000371ec	stxr	w11, x10, [x8]
00000000000371f0	cbnz	w11, 0x371e4
00000000000371f4	ldr	x8, [x0, #0x18]
00000000000371f8	adr	x9, #0x5d920
00000000000371fc	nop
0000000000037200	ldxr	x10, [x9]
0000000000037204	add	x10, x10, x8
0000000000037208	stxr	w11, x10, [x9]
000000000003720c	cbnz	w11, 0x37200
0000000000037210	ldr	x8, [x0, #0x8]
0000000000037214	adr	x9, #0x5d8f4
0000000000037218	nop
000000000003721c	ldxr	x10, [x9]
0000000000037220	add	x10, x10, x8
0000000000037224	stxr	w11, x10, [x9]
0000000000037228	cbnz	w11, 0x3721c
000000000003722c	ldr	x8, [x0, #0x10]
0000000000037230	adr	x9, #0x5d8e0
0000000000037234	nop
0000000000037238	ldxr	x10, [x9]
000000000003723c	add	x10, x10, x8
0000000000037240	stxr	w11, x10, [x9]
0000000000037244	cbnz	w11, 0x37238
0000000000037248	ldr	x8, [x0, #0x20]
000000000003724c	cbnz	x8, 0x37258
0000000000037250	ldr	x9, [x0, #0x28]
0000000000037254	cbz	x9, 0x372c4
0000000000037258	adr	x9, #0x5d8c8
000000000003725c	nop
0000000000037260	ldxr	x10, [x9]
0000000000037264	add	x10, x10, x8
0000000000037268	stxr	w11, x10, [x9]
000000000003726c	cbnz	w11, 0x37260
0000000000037270	ldr	x8, [x0, #0x38]
0000000000037274	adr	x9, #0x5d8c4
0000000000037278	nop
000000000003727c	ldxr	x10, [x9]
0000000000037280	add	x10, x10, x8
0000000000037284	stxr	w11, x10, [x9]
0000000000037288	cbnz	w11, 0x3727c
000000000003728c	ldr	x8, [x0, #0x28]
0000000000037290	adr	x9, #0x5d898
0000000000037294	nop
0000000000037298	ldxr	x10, [x9]
000000000003729c	add	x10, x10, x8
00000000000372a0	stxr	w11, x10, [x9]
00000000000372a4	cbnz	w11, 0x37298
00000000000372a8	ldr	x8, [x0, #0x30]
00000000000372ac	adr	x9, #0x5d884
00000000000372b0	nop
00000000000372b4	ldxr	x10, [x9]
00000000000372b8	add	x10, x10, x8
00000000000372bc	stxr	w11, x10, [x9]
00000000000372c0	cbnz	w11, 0x372b4
00000000000372c4	ldr	x8, [x0, #0x40]
00000000000372c8	cbnz	x8, 0x372d4
00000000000372cc	ldr	x9, [x0, #0x48]
00000000000372d0	cbz	x9, 0x37340
00000000000372d4	adr	x9, #0x5d86c
00000000000372d8	nop
00000000000372dc	ldxr	x10, [x9]
00000000000372e0	add	x10, x10, x8
00000000000372e4	stxr	w11, x10, [x9]
00000000000372e8	cbnz	w11, 0x372dc
00000000000372ec	ldr	x8, [x0, #0x58]
00000000000372f0	adr	x9, #0x5d868
00000000000372f4	nop
00000000000372f8	ldxr	x10, [x9]
00000000000372fc	add	x10, x10, x8
0000000000037300	stxr	w11, x10, [x9]
0000000000037304	cbnz	w11, 0x372f8
0000000000037308	ldr	x8, [x0, #0x48]
000000000003730c	adr	x9, #0x5d83c
0000000000037310	nop
0000000000037314	ldxr	x10, [x9]
0000000000037318	add	x10, x10, x8
000000000003731c	stxr	w11, x10, [x9]
0000000000037320	cbnz	w11, 0x37314
0000000000037324	ldr	x8, [x0, #0x50]
0000000000037328	adr	x9, #0x5d828
000000000003732c	nop
0000000000037330	ldxr	x10, [x9]
0000000000037334	add	x10, x10, x8
0000000000037338	stxr	w11, x10, [x9]
000000000003733c	cbnz	w11, 0x37330
0000000000037340	ldr	x8, [x0, #0x60]
0000000000037344	cbnz	x8, 0x37350
0000000000037348	ldr	x9, [x0, #0x68]
000000000003734c	cbz	x9, 0x373bc
0000000000037350	adr	x9, #0x5d810
0000000000037354	nop
0000000000037358	ldxr	x10, [x9]
000000000003735c	add	x10, x10, x8
0000000000037360	stxr	w11, x10, [x9]
0000000000037364	cbnz	w11, 0x37358
0000000000037368	ldr	x8, [x0, #0x78]
000000000003736c	adr	x9, #0x5d80c
0000000000037370	nop
0000000000037374	ldxr	x10, [x9]
0000000000037378	add	x10, x10, x8
000000000003737c	stxr	w11, x10, [x9]
0000000000037380	cbnz	w11, 0x37374
0000000000037384	ldr	x8, [x0, #0x68]
0000000000037388	adr	x9, #0x5d7e0
000000000003738c	nop
0000000000037390	ldxr	x10, [x9]
0000000000037394	add	x10, x10, x8
0000000000037398	stxr	w11, x10, [x9]
000000000003739c	cbnz	w11, 0x37390
00000000000373a0	ldr	x8, [x0, #0x70]
00000000000373a4	adr	x9, #0x5d7cc
00000000000373a8	nop
00000000000373ac	ldxr	x10, [x9]
00000000000373b0	add	x10, x10, x8
00000000000373b4	stxr	w11, x10, [x9]
00000000000373b8	cbnz	w11, 0x373ac
00000000000373bc	ldr	x8, [x0, #0x80]
00000000000373c0	cbnz	x8, 0x373cc
00000000000373c4	ldr	x9, [x0, #0x88]
00000000000373c8	cbz	x9, 0x37438
00000000000373cc	adr	x9, #0x5d7b4
00000000000373d0	nop
00000000000373d4	ldxr	x10, [x9]
00000000000373d8	add	x10, x10, x8
00000000000373dc	stxr	w11, x10, [x9]
00000000000373e0	cbnz	w11, 0x373d4
00000000000373e4	ldr	x8, [x0, #0x98]
00000000000373e8	adr	x9, #0x5d7b0
00000000000373ec	nop
00000000000373f0	ldxr	x10, [x9]
00000000000373f4	add	x10, x10, x8
00000000000373f8	stxr	w11, x10, [x9]
00000000000373fc	cbnz	w11, 0x373f0
0000000000037400	ldr	x8, [x0, #0x88]
0000000000037404	adr	x9, #0x5d784
0000000000037408	nop
000000000003740c	ldxr	x10, [x9]
0000000000037410	add	x10, x10, x8
0000000000037414	stxr	w11, x10, [x9]
0000000000037418	cbnz	w11, 0x3740c
000000000003741c	ldr	x8, [x0, #0x90]
0000000000037420	adr	x9, #0x5d770
0000000000037424	nop
0000000000037428	ldxr	x10, [x9]
000000000003742c	add	x10, x10, x8
0000000000037430	stxr	w11, x10, [x9]
0000000000037434	cbnz	w11, 0x37428
0000000000037438	ldr	x8, [x0, #0xa0]
000000000003743c	cbnz	x8, 0x37448
0000000000037440	ldr	x9, [x0, #0xa8]
0000000000037444	cbz	x9, 0x374b4
0000000000037448	adr	x9, #0x5d758
000000000003744c	nop
0000000000037450	ldxr	x10, [x9]
0000000000037454	add	x10, x10, x8
0000000000037458	stxr	w11, x10, [x9]
000000000003745c	cbnz	w11, 0x37450
0000000000037460	ldr	x8, [x0, #0xb8]
0000000000037464	adr	x9, #0x5d754
0000000000037468	nop
000000000003746c	ldxr	x10, [x9]
0000000000037470	add	x10, x10, x8
0000000000037474	stxr	w11, x10, [x9]
0000000000037478	cbnz	w11, 0x3746c
000000000003747c	ldr	x8, [x0, #0xa8]
0000000000037480	adr	x9, #0x5d728
0000000000037484	nop
0000000000037488	ldxr	x10, [x9]
000000000003748c	add	x10, x10, x8
0000000000037490	stxr	w11, x10, [x9]
0000000000037494	cbnz	w11, 0x37488
0000000000037498	ldr	x8, [x0, #0xb0]
000000000003749c	adr	x9, #0x5d714
00000000000374a0	nop
00000000000374a4	ldxr	x10, [x9]
00000000000374a8	add	x10, x10, x8
00000000000374ac	stxr	w11, x10, [x9]
00000000000374b0	cbnz	w11, 0x374a4
00000000000374b4	ldr	x8, [x0, #0xe0]
00000000000374b8	cbnz	x8, 0x374c4
00000000000374bc	ldr	x9, [x0, #0xe8]
00000000000374c0	cbz	x9, 0x37530
00000000000374c4	adr	x9, #0x5d71c
00000000000374c8	nop
00000000000374cc	ldxr	x10, [x9]
00000000000374d0	add	x10, x10, x8
00000000000374d4	stxr	w11, x10, [x9]
00000000000374d8	cbnz	w11, 0x374cc
00000000000374dc	ldr	x8, [x0, #0xf8]
00000000000374e0	adr	x9, #0x5d718
00000000000374e4	nop
00000000000374e8	ldxr	x10, [x9]
00000000000374ec	add	x10, x10, x8
00000000000374f0	stxr	w11, x10, [x9]
00000000000374f4	cbnz	w11, 0x374e8
00000000000374f8	ldr	x8, [x0, #0xe8]
00000000000374fc	adr	x9, #0x5d6ec
0000000000037500	nop
0000000000037504	ldxr	x10, [x9]
0000000000037508	add	x10, x10, x8
000000000003750c	stxr	w11, x10, [x9]
0000000000037510	cbnz	w11, 0x37504
0000000000037514	ldr	x8, [x0, #0xf0]
0000000000037518	adr	x9, #0x5d6d8
000000000003751c	nop
0000000000037520	ldxr	x10, [x9]
0000000000037524	add	x10, x10, x8
0000000000037528	stxr	w11, x10, [x9]
000000000003752c	cbnz	w11, 0x37520
0000000000037530	ldr	x8, [x0, #0xc0]
0000000000037534	cbnz	x8, 0x37540
0000000000037538	ldr	x9, [x0, #0xc8]
000000000003753c	cbz	x9, 0x375ac
0000000000037540	adr	x9, #0x5d680
0000000000037544	nop
0000000000037548	ldxr	x10, [x9]
000000000003754c	add	x10, x10, x8
0000000000037550	stxr	w11, x10, [x9]
0000000000037554	cbnz	w11, 0x37548
0000000000037558	ldr	x8, [x0, #0xd8]
000000000003755c	adr	x9, #0x5d67c
0000000000037560	nop
0000000000037564	ldxr	x10, [x9]
0000000000037568	add	x10, x10, x8
000000000003756c	stxr	w11, x10, [x9]
0000000000037570	cbnz	w11, 0x37564
0000000000037574	ldr	x8, [x0, #0xc8]
0000000000037578	adr	x9, #0x5d650
000000000003757c	nop
0000000000037580	ldxr	x10, [x9]
0000000000037584	add	x10, x10, x8
0000000000037588	stxr	w11, x10, [x9]
000000000003758c	cbnz	w11, 0x37580
0000000000037590	ldr	x8, [x0, #0xd0]
0000000000037594	adr	x9, #0x5d63c
0000000000037598	nop
000000000003759c	ldxr	x10, [x9]
00000000000375a0	add	x10, x10, x8
00000000000375a4	stxr	w11, x10, [x9]
00000000000375a8	cbnz	w11, 0x3759c
00000000000375ac	ldr	x8, [x0, #0x100]
00000000000375b0	cbnz	x8, 0x375bc
00000000000375b4	ldr	x9, [x0, #0x108]
00000000000375b8	cbz	x9, 0x37628
00000000000375bc	adr	x9, #0x5d644
00000000000375c0	nop
00000000000375c4	ldxr	x10, [x9]
00000000000375c8	add	x10, x10, x8
00000000000375cc	stxr	w11, x10, [x9]
00000000000375d0	cbnz	w11, 0x375c4
00000000000375d4	ldr	x8, [x0, #0x118]
00000000000375d8	adr	x9, #0x5d640
00000000000375dc	nop
00000000000375e0	ldxr	x10, [x9]
00000000000375e4	add	x10, x10, x8
00000000000375e8	stxr	w11, x10, [x9]
00000000000375ec	cbnz	w11, 0x375e0
00000000000375f0	ldr	x8, [x0, #0x108]
00000000000375f4	adr	x9, #0x5d614
00000000000375f8	nop
00000000000375fc	ldxr	x10, [x9]
0000000000037600	add	x10, x10, x8
0000000000037604	stxr	w11, x10, [x9]
0000000000037608	cbnz	w11, 0x375fc
000000000003760c	ldr	x8, [x0, #0x110]
0000000000037610	adr	x9, #0x5d600
0000000000037614	nop
0000000000037618	ldxr	x10, [x9]
000000000003761c	add	x10, x10, x8
0000000000037620	stxr	w11, x10, [x9]
0000000000037624	cbnz	w11, 0x37618
0000000000037628	ldr	x8, [x0, #0x180]
000000000003762c	cbnz	x8, 0x37638
0000000000037630	ldr	x9, [x0, #0x188]
0000000000037634	cbz	x9, 0x376a4
0000000000037638	adr	x9, #0x5d648
000000000003763c	nop
0000000000037640	ldxr	x10, [x9]
0000000000037644	add	x10, x10, x8
0000000000037648	stxr	w11, x10, [x9]
000000000003764c	cbnz	w11, 0x37640
0000000000037650	ldr	x8, [x0, #0x198]
0000000000037654	adr	x9, #0x5d644
0000000000037658	nop
000000000003765c	ldxr	x10, [x9]
0000000000037660	add	x10, x10, x8
0000000000037664	stxr	w11, x10, [x9]
0000000000037668	cbnz	w11, 0x3765c
000000000003766c	ldr	x8, [x0, #0x188]
0000000000037670	adr	x9, #0x5d618
0000000000037674	nop
0000000000037678	ldxr	x10, [x9]
000000000003767c	add	x10, x10, x8
0000000000037680	stxr	w11, x10, [x9]
0000000000037684	cbnz	w11, 0x37678
0000000000037688	ldr	x8, [x0, #0x190]
000000000003768c	adr	x9, #0x5d604
0000000000037690	nop
0000000000037694	ldxr	x10, [x9]
0000000000037698	add	x10, x10, x8
000000000003769c	stxr	w11, x10, [x9]
00000000000376a0	cbnz	w11, 0x37694
00000000000376a4	ldr	x8, [x0, #0x1a0]
00000000000376a8	cbnz	x8, 0x376b4
00000000000376ac	ldr	x9, [x0, #0x1a8]
00000000000376b0	cbz	x9, 0x37720
00000000000376b4	adr	x9, #0x5d5ec
00000000000376b8	nop
00000000000376bc	ldxr	x10, [x9]
00000000000376c0	add	x10, x10, x8
00000000000376c4	stxr	w11, x10, [x9]
00000000000376c8	cbnz	w11, 0x376bc
00000000000376cc	ldr	x8, [x0, #0x1b8]
00000000000376d0	adr	x9, #0x5d5e8
00000000000376d4	nop
00000000000376d8	ldxr	x10, [x9]
00000000000376dc	add	x10, x10, x8
00000000000376e0	stxr	w11, x10, [x9]
00000000000376e4	cbnz	w11, 0x376d8
00000000000376e8	ldr	x8, [x0, #0x1a8]
00000000000376ec	adr	x9, #0x5d5bc
00000000000376f0	nop
00000000000376f4	ldxr	x10, [x9]
00000000000376f8	add	x10, x10, x8
00000000000376fc	stxr	w11, x10, [x9]
0000000000037700	cbnz	w11, 0x376f4
0000000000037704	ldr	x8, [x0, #0x1b0]
0000000000037708	adr	x9, #0x5d5a8
000000000003770c	nop
0000000000037710	ldxr	x10, [x9]
0000000000037714	add	x10, x10, x8
0000000000037718	stxr	w11, x10, [x9]
000000000003771c	cbnz	w11, 0x37710
0000000000037720	ldr	x8, [x0, #0x120]
0000000000037724	cbnz	x8, 0x37730
0000000000037728	ldr	x9, [x0, #0x128]
000000000003772c	cbz	x9, 0x3779c
0000000000037730	adr	x9, #0x5d4f0
0000000000037734	nop
0000000000037738	ldxr	x10, [x9]
000000000003773c	add	x10, x10, x8
0000000000037740	stxr	w11, x10, [x9]
0000000000037744	cbnz	w11, 0x37738
0000000000037748	ldr	x8, [x0, #0x138]
000000000003774c	adr	x9, #0x5d4ec
0000000000037750	nop
0000000000037754	ldxr	x10, [x9]
0000000000037758	add	x10, x10, x8
000000000003775c	stxr	w11, x10, [x9]
0000000000037760	cbnz	w11, 0x37754
0000000000037764	ldr	x8, [x0, #0x128]
0000000000037768	adr	x9, #0x5d4c0
000000000003776c	nop
0000000000037770	ldxr	x10, [x9]
0000000000037774	add	x10, x10, x8
0000000000037778	stxr	w11, x10, [x9]
000000000003777c	cbnz	w11, 0x37770
0000000000037780	ldr	x8, [x0, #0x130]
0000000000037784	adr	x9, #0x5d4ac
0000000000037788	nop
000000000003778c	ldxr	x10, [x9]
0000000000037790	add	x10, x10, x8
0000000000037794	stxr	w11, x10, [x9]
0000000000037798	cbnz	w11, 0x3778c
000000000003779c	ldr	x8, [x0, #0x140]
00000000000377a0	cbnz	x8, 0x377ac
00000000000377a4	ldr	x9, [x0, #0x148]
00000000000377a8	cbz	x9, 0x37818
00000000000377ac	adr	x9, #0x5d494
00000000000377b0	nop
00000000000377b4	ldxr	x10, [x9]
00000000000377b8	add	x10, x10, x8
00000000000377bc	stxr	w11, x10, [x9]
00000000000377c0	cbnz	w11, 0x377b4
00000000000377c4	ldr	x8, [x0, #0x158]
00000000000377c8	adr	x9, #0x5d490
00000000000377cc	nop
00000000000377d0	ldxr	x10, [x9]
00000000000377d4	add	x10, x10, x8
00000000000377d8	stxr	w11, x10, [x9]
00000000000377dc	cbnz	w11, 0x377d0
00000000000377e0	ldr	x8, [x0, #0x148]
00000000000377e4	adr	x9, #0x5d464
00000000000377e8	nop
00000000000377ec	ldxr	x10, [x9]
00000000000377f0	add	x10, x10, x8
00000000000377f4	stxr	w11, x10, [x9]
00000000000377f8	cbnz	w11, 0x377ec
00000000000377fc	ldr	x8, [x0, #0x150]
0000000000037800	adr	x9, #0x5d450
0000000000037804	nop
0000000000037808	ldxr	x10, [x9]
000000000003780c	add	x10, x10, x8
0000000000037810	stxr	w11, x10, [x9]
0000000000037814	cbnz	w11, 0x37808
0000000000037818	ldr	x8, [x0, #0x160]
000000000003781c	cbnz	x8, 0x37828
0000000000037820	ldr	x9, [x0, #0x168]
0000000000037824	cbz	x9, 0x37894
0000000000037828	adr	x9, #0x5d438
000000000003782c	nop
0000000000037830	ldxr	x10, [x9]
0000000000037834	add	x10, x10, x8
0000000000037838	stxr	w11, x10, [x9]
000000000003783c	cbnz	w11, 0x37830
0000000000037840	ldr	x8, [x0, #0x178]
0000000000037844	adr	x9, #0x5d434
0000000000037848	nop
000000000003784c	ldxr	x10, [x9]
0000000000037850	add	x10, x10, x8
0000000000037854	stxr	w11, x10, [x9]
0000000000037858	cbnz	w11, 0x3784c
000000000003785c	ldr	x8, [x0, #0x168]
0000000000037860	adr	x9, #0x5d408
0000000000037864	nop
0000000000037868	ldxr	x10, [x9]
000000000003786c	add	x10, x10, x8
0000000000037870	stxr	w11, x10, [x9]
0000000000037874	cbnz	w11, 0x37868
0000000000037878	ldr	x8, [x0, #0x170]
000000000003787c	adr	x9, #0x5d3f4
0000000000037880	nop
0000000000037884	ldxr	x10, [x9]
0000000000037888	add	x10, x10, x8
000000000003788c	stxr	w11, x10, [x9]
0000000000037890	cbnz	w11, 0x37884
0000000000037894	ldr	x8, [x0, #0x1c0]
0000000000037898	adr	x9, #0x5d428
000000000003789c	nop
00000000000378a0	ldxr	x10, [x9]
00000000000378a4	add	x10, x10, x8
00000000000378a8	stxr	w11, x10, [x9]
00000000000378ac	cbnz	w11, 0x378a0
00000000000378b0	ldr	x8, [x0, #0x1c8]
00000000000378b4	adr	x9, #0x5d414
00000000000378b8	nop
00000000000378bc	ldxr	x10, [x9]
00000000000378c0	add	x10, x10, x8
00000000000378c4	stxr	w11, x10, [x9]
00000000000378c8	cbnz	w11, 0x378bc
00000000000378cc	ldr	x8, [x0, #0x1d0]
00000000000378d0	adr	x9, #0x5d400
00000000000378d4	nop
00000000000378d8	ldxr	x10, [x9]
00000000000378dc	add	x10, x10, x8
00000000000378e0	stxr	w11, x10, [x9]
00000000000378e4	cbnz	w11, 0x378d8
00000000000378e8	ldr	x8, [x0, #0x1d8]
00000000000378ec	adr	x9, #0x5d3ec
00000000000378f0	nop
00000000000378f4	ldxr	x10, [x9]
00000000000378f8	add	x10, x10, x8
00000000000378fc	stxr	w11, x10, [x9]
0000000000037900	cbnz	w11, 0x378f4
0000000000037904	ldr	x8, [x0, #0x1e0]
0000000000037908	adr	x9, #0x5d3d8
000000000003790c	nop
0000000000037910	ldxr	x10, [x9]
0000000000037914	add	x10, x10, x8
0000000000037918	stxr	w11, x10, [x9]
000000000003791c	cbnz	w11, 0x37910
0000000000037920	ldr	x8, [x0, #0x1e8]
0000000000037924	adr	x9, #0x5d3c4
0000000000037928	nop
000000000003792c	ldxr	x10, [x9]
0000000000037930	add	x10, x10, x8
0000000000037934	stxr	w11, x10, [x9]
0000000000037938	cbnz	w11, 0x3792c
000000000003793c	ldr	x8, [x0, #0x1f0]
0000000000037940	adr	x9, #0x5d3b0
0000000000037944	nop
0000000000037948	ldxr	x10, [x9]
000000000003794c	add	x10, x10, x8
0000000000037950	stxr	w11, x10, [x9]
0000000000037954	cbnz	w11, 0x37948
0000000000037958	ldr	x8, [x0, #0x1f8]
000000000003795c	adr	x9, #0x5d39c
0000000000037960	nop
0000000000037964	ldxr	x10, [x9]
0000000000037968	add	x10, x10, x8
000000000003796c	stxr	w11, x10, [x9]
0000000000037970	cbnz	w11, 0x37964
0000000000037974	ldr	x8, [x0, #0x200]
0000000000037978	adr	x9, #0x5d388
000000000003797c	nop
0000000000037980	ldxr	x10, [x9]
0000000000037984	add	x10, x10, x8
0000000000037988	stxr	w11, x10, [x9]
000000000003798c	cbnz	w11, 0x37980
0000000000037990	ldr	x8, [x0, #0x208]
0000000000037994	adr	x9, #0x5d374
0000000000037998	nop
000000000003799c	ldxr	x10, [x9]
00000000000379a0	add	x10, x10, x8
00000000000379a4	stxr	w11, x10, [x9]
00000000000379a8	cbnz	w11, 0x3799c
00000000000379ac	ldr	x8, [x0, #0x210]
00000000000379b0	adr	x9, #0x5d360
00000000000379b4	nop
00000000000379b8	ldxr	x10, [x9]
00000000000379bc	add	x10, x10, x8
00000000000379c0	stxr	w11, x10, [x9]
00000000000379c4	cbnz	w11, 0x379b8
00000000000379c8	ldr	x8, [x0, #0x218]
00000000000379cc	adr	x9, #0x5d34c
00000000000379d0	nop
00000000000379d4	ldxr	x10, [x9]
00000000000379d8	add	x10, x10, x8
00000000000379dc	stxr	w11, x10, [x9]
00000000000379e0	cbnz	w11, 0x379d4
00000000000379e4	ldr	x8, [x0, #0x220]
00000000000379e8	adr	x9, #0x5d338
00000000000379ec	nop
00000000000379f0	ldxr	x10, [x9]
00000000000379f4	add	x10, x10, x8
00000000000379f8	stxr	w11, x10, [x9]
00000000000379fc	cbnz	w11, 0x379f0
0000000000037a00	ldr	x8, [x0, #0x228]
0000000000037a04	adr	x9, #0x5d324
0000000000037a08	nop
0000000000037a0c	ldxr	x10, [x9]
0000000000037a10	add	x10, x10, x8
0000000000037a14	stxr	w11, x10, [x9]
0000000000037a18	cbnz	w11, 0x37a0c
0000000000037a1c	ldr	x8, [x0, #0x230]
0000000000037a20	adr	x9, #0x5d310
0000000000037a24	nop
0000000000037a28	ldxr	x10, [x9]
0000000000037a2c	add	x10, x10, x8
0000000000037a30	stxr	w11, x10, [x9]
0000000000037a34	cbnz	w11, 0x37a28
0000000000037a38	ldr	x8, [x0, #0x238]
0000000000037a3c	adr	x9, #0x5d2fc
0000000000037a40	nop
0000000000037a44	ldxr	x10, [x9]
0000000000037a48	add	x10, x10, x8
0000000000037a4c	stxr	w11, x10, [x9]
0000000000037a50	cbnz	w11, 0x37a44
0000000000037a54	mov	w1, #0x240
0000000000037a58	bl	0x55ae0 ; symbol stub for: _bzero
0000000000037a5c	ldp	x29, x30, [sp], #0x10
0000000000037a60	ret
_mi_heap_collect_ex:
0000000000037a64	sub	sp, sp, #0x70
0000000000037a68	stp	x28, x27, [sp, #0x10]
0000000000037a6c	stp	x26, x25, [sp, #0x20]
0000000000037a70	stp	x24, x23, [sp, #0x30]
0000000000037a74	stp	x22, x21, [sp, #0x40]
0000000000037a78	stp	x20, x19, [sp, #0x50]
0000000000037a7c	stp	x29, x30, [sp, #0x60]
0000000000037a80	add	x29, sp, #0x60
0000000000037a84	cbz	x0, 0x386a4
0000000000037a88	mov	x28, x0
0000000000037a8c	adr	x8, #0x39874
0000000000037a90	nop
0000000000037a94	cmp	x0, x8
0000000000037a98	b.eq	0x386a4
0000000000037a9c	mov	x20, x1
0000000000037aa0	ldr	x8, [x28]
0000000000037aa4	ldr	x9, [x8]
0000000000037aa8	add	x1, x9, #0x1
0000000000037aac	str	x1, [x8]
0000000000037ab0	nop
0000000000037ab4	ldr	x9, #0x5cc94
0000000000037ab8	cbz	x9, 0x37ac4
0000000000037abc	ldrb	w9, [x8, #0x8]
0000000000037ac0	cbz	w9, 0x37b10
0000000000037ac4	adrp	x9, 65 ; 0x78000
0000000000037ac8	cmp	w20, #0x2
0000000000037acc	b.eq	0x37b44
0000000000037ad0	cmp	w20, #0x1
0000000000037ad4	b.ne	0x37b08
0000000000037ad8	ldr	x19, [x9, #0xca0]
0000000000037adc	cbz	x19, 0x37af4
0000000000037ae0	bl	0x55dec ; symbol stub for: _pthread_self
0000000000037ae4	bl	0x55da4 ; symbol stub for: _pthread_mach_thread_np
0000000000037ae8	cmp	x19, w0, uxtw
0000000000037aec	b.ne	0x37b08
0000000000037af0	ldr	x8, [x28]
0000000000037af4	ldr	x9, [x8, #0x10]
0000000000037af8	cmp	x9, x28
0000000000037afc	b.ne	0x37b08
0000000000037b00	ldrb	w9, [x28, #0xbe8]
0000000000037b04	cbz	w9, 0x38784
0000000000037b08	mov	w21, #0x0
0000000000037b0c	b	0x37bc8
0000000000037b10	mov	w9, #0x1
0000000000037b14	strb	w9, [x8, #0x8]
0000000000037b18	adr	x8, #0x5cc30
0000000000037b1c	nop
0000000000037b20	ldr	x9, [x8], #0x8
0000000000037b24	ldr	x2, [x8]
0000000000037b28	mov	w0, #0x1
0000000000037b2c	blr	x9
0000000000037b30	ldr	x8, [x28]
0000000000037b34	strb	wzr, [x8, #0x8]
0000000000037b38	adrp	x9, 65 ; 0x78000
0000000000037b3c	cmp	w20, #0x2
0000000000037b40	b.ne	0x37ad0
0000000000037b44	ldr	x8, [x28, #0xbc8]
0000000000037b48	cbz	x8, 0x37bc4
0000000000037b4c	mov	x8, #0x0
0000000000037b50	mov	w9, #0x18
0000000000037b54	b	0x37b64
0000000000037b58	add	x8, x8, #0x1
0000000000037b5c	cmp	x8, #0x4b
0000000000037b60	b.eq	0x37bc4
0000000000037b64	madd	x10, x8, x9, x28
0000000000037b68	ldr	x10, [x10, #0x410]
0000000000037b6c	cbnz	x10, 0x37b78
0000000000037b70	b	0x37b58
0000000000037b74	cbz	x10, 0x37b58
0000000000037b78	add	x11, x10, #0x20
0000000000037b7c	ldr	x10, [x10, #0x30]
0000000000037b80	ldar	x12, [x11]
0000000000037b84	and	w13, w12, #0x3
0000000000037b88	cmp	w13, #0x3
0000000000037b8c	b.eq	0x37b74
0000000000037b90	cmp	w13, #0x1
0000000000037b94	b.eq	0x37bbc
0000000000037b98	ldxr	x13, [x11]
0000000000037b9c	cmp	x13, x12
0000000000037ba0	b.ne	0x37bb4
0000000000037ba4	orr	x12, x12, #0x3
0000000000037ba8	stlxr	w13, x12, [x11]
0000000000037bac	cbnz	w13, 0x37b80
0000000000037bb0	b	0x37b74
0000000000037bb4	clrex
0000000000037bb8	b	0x37b80
0000000000037bbc	wfe
0000000000037bc0	b	0x37b80
0000000000037bc4	mov	w21, #0x1
0000000000037bc8	add	x8, x28, #0xb18
0000000000037bcc	ldr	x9, [x28, #0xb18]
0000000000037bd0	b	0x37be0
0000000000037bd4	clrex
0000000000037bd8	mov	w10, #0x0
0000000000037bdc	cbnz	w10, 0x37c04
0000000000037be0	cbz	x9, 0x37c14
0000000000037be4	mov	x0, x9
0000000000037be8	ldaxr	x9, [x8]
0000000000037bec	cmp	x9, x0
0000000000037bf0	b.ne	0x37bd4
0000000000037bf4	stlxr	w10, xzr, [x8]
0000000000037bf8	cbnz	w10, 0x37bd8
0000000000037bfc	mov	w10, #0x1
0000000000037c00	cbz	w10, 0x37be0
0000000000037c04	ldr	x19, [x0]
0000000000037c08	bl	__mi_free_delayed_block
0000000000037c0c	mov	x0, x19
0000000000037c10	cbnz	x19, 0x37c04
0000000000037c14	ldr	x19, [x28, #0xbd0]
0000000000037c18	ldr	x8, [x28, #0xbd8]
0000000000037c1c	cmp	x19, x8
0000000000037c20	b.ls	0x37fbc
0000000000037c24	mov	w8, #0x4a
0000000000037c28	str	x8, [x28, #0xbd0]
0000000000037c2c	str	xzr, [x28, #0xbd8]
0000000000037c30	ldr	x8, [x28, #0xbc8]
0000000000037c34	cbz	x8, 0x3807c
0000000000037c38	tbz	w21, #0x0, 0x3801c
0000000000037c3c	mov	x23, #0x0
0000000000037c40	add	x24, x28, #0x3f8
0000000000037c44	adr	x22, #0x5cebc
0000000000037c48	nop
0000000000037c4c	adr	x25, #0x5d0f4
0000000000037c50	nop
0000000000037c54	str	x28, [sp, #0x8]
0000000000037c58	b	0x37c70
0000000000037c5c	add	x23, x23, #0x1
0000000000037c60	add	x24, x24, #0x18
0000000000037c64	cmp	x23, #0x4b
0000000000037c68	ldr	x28, [sp, #0x8]
0000000000037c6c	b.eq	0x3807c
0000000000037c70	mov	w8, #0x18
0000000000037c74	madd	x8, x23, x8, x28
0000000000037c78	ldr	x26, [x8, #0x410]
0000000000037c7c	cbz	x26, 0x37c5c
0000000000037c80	add	x20, x8, #0x410
0000000000037c84	ldr	x8, [sp, #0x8]
0000000000037c88	mov	w9, #0x18
0000000000037c8c	madd	x8, x23, x9, x8
0000000000037c90	add	x19, x8, #0x418
0000000000037c94	add	x27, x8, #0x420
0000000000037c98	b	0x37cb0
0000000000037c9c	mov	x0, x21
0000000000037ca0	mov	x1, x20
0000000000037ca4	mov	w2, #0x1
0000000000037ca8	bl	__mi_page_free
0000000000037cac	cbz	x26, 0x37c5c
0000000000037cb0	mov	x21, x26
0000000000037cb4	mov	x28, x26
0000000000037cb8	ldr	x26, [x28, #0x30]!
0000000000037cbc	mov	x0, x21
0000000000037cc0	mov	w1, #0x1
0000000000037cc4	bl	__mi_page_free_collect
0000000000037cc8	ldr	w8, [x21, #0x10]
0000000000037ccc	cbz	w8, 0x37c9c
0000000000037cd0	ldr	x8, [x21, #0x28]
0000000000037cd4	ldr	x8, [x8]
0000000000037cd8	ldr	x9, [x21, #0x28]
0000000000037cdc	ldr	x11, [x21, #0x38]
0000000000037ce0	cbz	x11, 0x37cec
0000000000037ce4	ldr	x10, [x28]
0000000000037ce8	str	x10, [x11, #0x30]
0000000000037cec	ldr	x10, [x28]
0000000000037cf0	cbz	x10, 0x37cf8
0000000000037cf4	str	x11, [x10, #0x38]
0000000000037cf8	ldr	x11, [x19]
0000000000037cfc	cmp	x11, x21
0000000000037d00	b.eq	0x37d14
0000000000037d04	ldr	x11, [x20]
0000000000037d08	cmp	x11, x21
0000000000037d0c	b.ne	0x37ebc
0000000000037d10	b	0x37d28
0000000000037d14	ldr	x11, [x21, #0x38]
0000000000037d18	str	x11, [x19]
0000000000037d1c	ldr	x11, [x20]
0000000000037d20	cmp	x11, x21
0000000000037d24	b.ne	0x37ebc
0000000000037d28	str	x10, [x20]
0000000000037d2c	ldr	x12, [x27]
0000000000037d30	cmp	x12, #0x400
0000000000037d34	b.hi	0x37ebc
0000000000037d38	cmp	x10, #0x0
0000000000037d3c	adr	x11, #0x21084
0000000000037d40	nop
0000000000037d44	csel	x10, x11, x10, eq
0000000000037d48	add	x11, x12, #0x7
0000000000037d4c	lsr	x11, x11, #3
0000000000037d50	add	x13, x9, x11, lsl #3
0000000000037d54	ldr	x13, [x13, #0x8]
0000000000037d58	cmp	x13, x10
0000000000037d5c	b.eq	0x37ebc
0000000000037d60	cmp	x12, #0x9
0000000000037d64	b.hs	0x37d70
0000000000037d68	mov	x12, #0x0
0000000000037d6c	b	0x37e60
0000000000037d70	sub	x13, x11, #0x1
0000000000037d74	clz	x14, x13
0000000000037d78	mov	w15, #0x3f
0000000000037d7c	sub	w14, w15, w14
0000000000037d80	and	w14, w14, #0xff
0000000000037d84	sub	w15, w14, #0x2
0000000000037d88	lsr	x13, x13, x15
0000000000037d8c	and	w13, w13, #0x3
0000000000037d90	bfi	w13, w14, #2, #8
0000000000037d94	sub	w13, w13, #0x3
0000000000037d98	add	w14, w11, #0x1
0000000000037d9c	and	w14, w14, #0xfffffffe
0000000000037da0	cmp	x12, #0x40
0000000000037da4	csel	w12, w13, w14, hi
0000000000037da8	add	x13, x9, #0x410
0000000000037dac	mov	x14, x24
0000000000037db0	b	0x37dd0
0000000000037db4	mov	w16, #0x1
0000000000037db8	cmp	x14, x13
0000000000037dbc	b.ls	0x37e50
0000000000037dc0	sub	x14, x14, #0x18
0000000000037dc4	and	w17, w12, #0xff
0000000000037dc8	cmp	w17, w16, uxtb
0000000000037dcc	b.ne	0x37e50
0000000000037dd0	ldr	x15, [x14, #0x10]
0000000000037dd4	add	x16, x15, #0x7
0000000000037dd8	lsr	x15, x16, #3
0000000000037ddc	cmp	x16, #0x10
0000000000037de0	b.lo	0x37db4
0000000000037de4	cmp	x16, #0x47
0000000000037de8	b.hi	0x37e00
0000000000037dec	add	w16, w15, #0x1
0000000000037df0	and	w16, w16, #0xfffffffe
0000000000037df4	cmp	x14, x13
0000000000037df8	b.hi	0x37dc0
0000000000037dfc	b	0x37e50
0000000000037e00	mov	w17, #0x7
0000000000037e04	movk	w17, #0x20, lsl #16
0000000000037e08	cmp	x16, x17
0000000000037e0c	b.ls	0x37e20
0000000000037e10	mov	w16, #0x49
0000000000037e14	cmp	x14, x13
0000000000037e18	b.hi	0x37dc0
0000000000037e1c	b	0x37e50
0000000000037e20	sub	x16, x15, #0x1
0000000000037e24	clz	x17, x16
0000000000037e28	mov	w0, #0x3f
0000000000037e2c	sub	w17, w0, w17
0000000000037e30	and	w17, w17, #0xff
0000000000037e34	sub	w0, w17, #0x2
0000000000037e38	lsr	x16, x16, x0
0000000000037e3c	and	w16, w16, #0x3
0000000000037e40	bfi	w16, w17, #2, #8
0000000000037e44	sub	w16, w16, #0x3
0000000000037e48	cmp	x14, x13
0000000000037e4c	b.hi	0x37dc0
0000000000037e50	cmp	x15, x11
0000000000037e54	csinc	x12, x11, x15, hs
0000000000037e58	cmp	x12, x11
0000000000037e5c	b.hi	0x37ebc
0000000000037e60	sub	x13, x11, x12
0000000000037e64	add	x13, x13, #0x1
0000000000037e68	cmp	x13, #0x4
0000000000037e6c	b.lo	0x37ea0
0000000000037e70	and	x14, x13, #0xfffffffffffffffc
0000000000037e74	dup.2d	v0, x10
0000000000037e78	add	x15, x9, x12, lsl #3
0000000000037e7c	add	x15, x15, #0x18
0000000000037e80	mov	x16, x14
0000000000037e84	stp	q0, q0, [x15, #-0x10]
0000000000037e88	add	x15, x15, #0x20
0000000000037e8c	subs	x16, x16, #0x4
0000000000037e90	b.ne	0x37e84
0000000000037e94	cmp	x13, x14
0000000000037e98	b.eq	0x37ebc
0000000000037e9c	add	x12, x12, x14
0000000000037ea0	sub	x11, x11, x12
0000000000037ea4	add	x11, x11, #0x1
0000000000037ea8	add	x12, x9, x12, lsl #3
0000000000037eac	add	x12, x12, #0x8
0000000000037eb0	str	x10, [x12], #0x8
0000000000037eb4	subs	x11, x11, #0x1
0000000000037eb8	b.ne	0x37eb0
0000000000037ebc	ldr	x10, [x9, #0xbc8]
0000000000037ec0	sub	x10, x10, #0x1
0000000000037ec4	str	x10, [x9, #0xbc8]
0000000000037ec8	stp	xzr, xzr, [x28]
0000000000037ecc	ldrb	w9, [x21, #0x6]
0000000000037ed0	and	w9, w9, #0xfe
0000000000037ed4	strb	w9, [x21, #0x6]
0000000000037ed8	add	x9, x21, #0x28
0000000000037edc	stlr	xzr, [x9]
0000000000037ee0	and	x0, x21, #0xffffffffffc00000
0000000000037ee4	ldr	x9, [x0, #0x28]
0000000000037ee8	add	x10, x9, #0x1
0000000000037eec	str	x10, [x0, #0x28]
0000000000037ef0	ldr	x13, [x8, #0x90]
0000000000037ef4	add	x9, x13, #0xe0
0000000000037ef8	cmp	x9, x22
0000000000037efc	ccmp	x9, x25, #0x2, hs
0000000000037f00	b.lo	0x37f38
0000000000037f04	ldp	x14, x12, [x13, #0xf0]
0000000000037f08	add	x11, x12, #0x1
0000000000037f0c	str	x11, [x13, #0xf8]
0000000000037f10	cmp	x12, x14
0000000000037f14	b.lt	0x37f1c
0000000000037f18	str	x11, [x13, #0xf0]
0000000000037f1c	ldr	x11, [x9]
0000000000037f20	add	x11, x11, #0x1
0000000000037f24	str	x11, [x9]
0000000000037f28	ldr	x9, [x0, #0x38]
0000000000037f2c	cmp	x9, x10
0000000000037f30	b.ne	0x37cac
0000000000037f34	b	0x37fb0
0000000000037f38	add	x12, x13, #0xf8
0000000000037f3c	ldxr	x10, [x12]
0000000000037f40	add	x11, x10, #0x1
0000000000037f44	stxr	w14, x11, [x12]
0000000000037f48	cbnz	w14, 0x37f3c
0000000000037f4c	add	x12, x13, #0xf0
0000000000037f50	ldr	x14, [x13, #0xf0]
0000000000037f54	b	0x37f68
0000000000037f58	clrex
0000000000037f5c	mov	w15, #0x0
0000000000037f60	mov	x14, x13
0000000000037f64	cbnz	w15, 0x37f90
0000000000037f68	cmp	x14, x10
0000000000037f6c	b.gt	0x37f90
0000000000037f70	ldxr	x13, [x12]
0000000000037f74	cmp	x13, x14
0000000000037f78	b.ne	0x37f58
0000000000037f7c	stlxr	w14, x11, [x12]
0000000000037f80	cbnz	w14, 0x37f5c
0000000000037f84	mov	w15, #0x1
0000000000037f88	mov	x14, x13
0000000000037f8c	cbz	w15, 0x37f68
0000000000037f90	ldxr	x10, [x9]
0000000000037f94	add	x10, x10, #0x1
0000000000037f98	stxr	w11, x10, [x9]
0000000000037f9c	cbnz	w11, 0x37f90
0000000000037fa0	ldr	x10, [x0, #0x28]
0000000000037fa4	ldr	x9, [x0, #0x38]
0000000000037fa8	cmp	x9, x10
0000000000037fac	b.ne	0x37cac
0000000000037fb0	add	x1, x8, #0x20
0000000000037fb4	bl	_mi_segment_abandon
0000000000037fb8	b	0x37cac
0000000000037fbc	mov	w8, #0x18
0000000000037fc0	madd	x8, x19, x8, x28
0000000000037fc4	add	x20, x8, #0x410
0000000000037fc8	b	0x37ff4
0000000000037fcc	strb	w10, [x8, #0x7]
0000000000037fd0	ldr	x0, [x20]
0000000000037fd4	mov	x1, x20
0000000000037fd8	mov	w2, #0x1
0000000000037fdc	bl	__mi_page_free
0000000000037fe0	add	x19, x19, #0x1
0000000000037fe4	ldr	x8, [x28, #0xbd8]
0000000000037fe8	add	x20, x20, #0x18
0000000000037fec	cmp	x19, x8
0000000000037ff0	b.hi	0x37c24
0000000000037ff4	ldr	x8, [x20]
0000000000037ff8	cbz	x8, 0x37fe0
0000000000037ffc	ldrb	w9, [x8, #0x7]
0000000000038000	subs	w10, w9, #0x2
0000000000038004	b.lo	0x37fe0
0000000000038008	ldr	w11, [x8, #0x10]
000000000003800c	cbz	w11, 0x37fcc
0000000000038010	and	w9, w9, #0x1
0000000000038014	strb	w9, [x8, #0x7]
0000000000038018	b	0x37fe0
000000000003801c	mov	x19, #0x0
0000000000038020	mov	w22, #0x18
0000000000038024	b	0x38034
0000000000038028	add	x19, x19, #0x1
000000000003802c	cmp	x19, #0x4b
0000000000038030	b.eq	0x3807c
0000000000038034	madd	x8, x19, x22, x28
0000000000038038	ldr	x21, [x8, #0x410]
000000000003803c	cbz	x21, 0x38028
0000000000038040	add	x20, x8, #0x410
0000000000038044	b	0x38050
0000000000038048	mov	x21, x23
000000000003804c	cbz	x23, 0x38028
0000000000038050	ldr	x23, [x21, #0x30]
0000000000038054	mov	x0, x21
0000000000038058	mov	w1, #0x1
000000000003805c	bl	__mi_page_free_collect
0000000000038060	ldr	w8, [x21, #0x10]
0000000000038064	cbnz	w8, 0x38048
0000000000038068	mov	x0, x21
000000000003806c	mov	x1, x20
0000000000038070	mov	w2, #0x1
0000000000038074	bl	__mi_page_free
0000000000038078	b	0x38048
000000000003807c	ldr	x23, [x28]
0000000000038080	ldr	x20, [x23, #0x88]
0000000000038084	cbz	x20, 0x38678
0000000000038088	adr	x24, #0x5ca78
000000000003808c	nop
0000000000038090	mov	w25, #0x1039
0000000000038094	movi.16b	v16, #0x4
0000000000038098	movi.16b	v17, #0x2
000000000003809c	adr	x26, #0x5cca4
00000000000380a0	nop
00000000000380a4	b	0x380d4
00000000000380a8	mov	w4, #0x0
00000000000380ac	mov	w19, #0x1
00000000000380b0	ldr	x2, [x20]
00000000000380b4	and	w3, w19, #0x1
00000000000380b8	mov	x0, x20
00000000000380bc	mov	x1, x21
00000000000380c0	bl	__mi_mem_free
00000000000380c4	ldr	x20, [x23, #0x88]
00000000000380c8	movi.16b	v16, #0x4
00000000000380cc	movi.16b	v17, #0x2
00000000000380d0	cbz	x20, 0x38678
00000000000380d4	ldr	x8, [x23, #0x78]
00000000000380d8	sub	x8, x8, #0x1
00000000000380dc	str	x8, [x23, #0x78]
00000000000380e0	ldr	x8, [x20, #0x18]
00000000000380e4	str	x8, [x23, #0x88]
00000000000380e8	str	xzr, [x20, #0x18]
00000000000380ec	ldr	x8, [x23, #0x90]
00000000000380f0	add	x9, x8, #0x1a0
00000000000380f4	cmp	x9, x24
00000000000380f8	ccmp	x9, x26, #0x2, hs
00000000000380fc	b.lo	0x38128
0000000000038100	ldp	x10, x9, [x8, #0x1b0]
0000000000038104	sub	x9, x9, #0x1
0000000000038108	str	x9, [x8, #0x1b8]
000000000003810c	cmp	x9, x10
0000000000038110	b.le	0x38118
0000000000038114	str	x9, [x8, #0x1b0]
0000000000038118	ldr	x9, [x8, #0x1a8]
000000000003811c	add	x9, x9, #0x1
0000000000038120	str	x9, [x8, #0x1a8]
0000000000038124	b	0x38194
0000000000038128	add	x10, x8, #0x1b8
000000000003812c	ldxr	x9, [x10]
0000000000038130	sub	x9, x9, #0x1
0000000000038134	stxr	w11, x9, [x10]
0000000000038138	cbnz	w11, 0x3812c
000000000003813c	add	x10, x8, #0x1b0
0000000000038140	ldr	x12, [x8, #0x1b0]
0000000000038144	b	0x38158
0000000000038148	clrex
000000000003814c	mov	w13, #0x0
0000000000038150	mov	x12, x11
0000000000038154	cbnz	w13, 0x38180
0000000000038158	cmp	x12, x9
000000000003815c	b.ge	0x38180
0000000000038160	ldxr	x11, [x10]
0000000000038164	cmp	x11, x12
0000000000038168	b.ne	0x38148
000000000003816c	stlxr	w12, x9, [x10]
0000000000038170	cbnz	w12, 0x3814c
0000000000038174	mov	w13, #0x1
0000000000038178	mov	x12, x11
000000000003817c	cbz	w13, 0x38158
0000000000038180	add	x8, x8, #0x1a8
0000000000038184	ldxr	x9, [x8]
0000000000038188	add	x9, x9, #0x1
000000000003818c	stxr	w10, x9, [x8]
0000000000038190	cbnz	w10, 0x38184
0000000000038194	ldr	x21, [x20, #0x48]
0000000000038198	add	x8, x20, #0x68
000000000003819c	stlr	xzr, [x8]
00000000000381a0	ldr	x8, [x23, #0x90]
00000000000381a4	cmp	x8, x24
00000000000381a8	cset	w9, hs
00000000000381ac	add	x10, x24, #0x240
00000000000381b0	cmp	x8, x10
00000000000381b4	cset	w10, lo
00000000000381b8	and	w9, w9, w10
00000000000381bc	add	x11, x8, #0x18
00000000000381c0	cmp	x21, #0x0
00000000000381c4	b.le	0x38250
00000000000381c8	cbz	w9, 0x382f4
00000000000381cc	ldxr	x9, [x11]
00000000000381d0	sub	x9, x9, #0x1
00000000000381d4	stxr	w10, x9, [x11]
00000000000381d8	cbnz	w10, 0x381cc
00000000000381dc	add	x10, x8, #0x10
00000000000381e0	ldr	x12, [x8, #0x10]
00000000000381e4	b	0x381f8
00000000000381e8	clrex
00000000000381ec	mov	w13, #0x0
00000000000381f0	mov	x12, x11
00000000000381f4	cbnz	w13, 0x38220
00000000000381f8	cmp	x12, x9
00000000000381fc	b.ge	0x38220
0000000000038200	ldxr	x11, [x10]
0000000000038204	cmp	x11, x12
0000000000038208	b.ne	0x381e8
000000000003820c	stlxr	w12, x9, [x10]
0000000000038210	cbnz	w12, 0x381ec
0000000000038214	mov	w13, #0x1
0000000000038218	mov	x12, x11
000000000003821c	cbz	w13, 0x381f8
0000000000038220	add	x8, x8, #0x8
0000000000038224	ldxr	x9, [x8]
0000000000038228	add	x9, x9, #0x1
000000000003822c	stxr	w10, x9, [x8]
0000000000038230	cbnz	w10, 0x38224
0000000000038234	mov	x9, #-0x1
0000000000038238	ldp	x8, x10, [x23, #0x58]
000000000003823c	add	x8, x8, x9
0000000000038240	str	x8, [x23, #0x58]
0000000000038244	cmp	x8, x10
0000000000038248	b.hi	0x38354
000000000003824c	b	0x382d0
0000000000038250	cbz	w9, 0x38318
0000000000038254	ldxr	x9, [x11]
0000000000038258	add	x10, x9, #0x1
000000000003825c	stxr	w12, x10, [x11]
0000000000038260	cbnz	w12, 0x38254
0000000000038264	add	x11, x8, #0x10
0000000000038268	ldr	x13, [x8, #0x10]
000000000003826c	b	0x38280
0000000000038270	clrex
0000000000038274	mov	w14, #0x0
0000000000038278	mov	x13, x12
000000000003827c	cbnz	w14, 0x382a8
0000000000038280	cmp	x13, x9
0000000000038284	b.gt	0x382a8
0000000000038288	ldxr	x12, [x11]
000000000003828c	cmp	x12, x13
0000000000038290	b.ne	0x38270
0000000000038294	stlxr	w13, x10, [x11]
0000000000038298	cbnz	w13, 0x38274
000000000003829c	mov	w14, #0x1
00000000000382a0	mov	x13, x12
00000000000382a4	cbz	w14, 0x38280
00000000000382a8	ldxr	x9, [x8]
00000000000382ac	add	x9, x9, #0x1
00000000000382b0	stxr	w10, x9, [x8]
00000000000382b4	cbnz	w10, 0x382a8
00000000000382b8	mov	w9, #0x1
00000000000382bc	ldp	x8, x10, [x23, #0x58]
00000000000382c0	add	x8, x8, x9
00000000000382c4	str	x8, [x23, #0x58]
00000000000382c8	cmp	x8, x10
00000000000382cc	b.hi	0x38354
00000000000382d0	ldp	x8, x9, [x23, #0x68]
00000000000382d4	sub	x8, x8, x21
00000000000382d8	str	x8, [x23, #0x68]
00000000000382dc	cmp	x8, x9
00000000000382e0	b.ls	0x3836c
00000000000382e4	str	x8, [x23, #0x70]
00000000000382e8	ldr	x8, [x20, #0x40]
00000000000382ec	cbnz	x8, 0x38374
00000000000382f0	b	0x380a8
00000000000382f4	ldp	x10, x9, [x8, #0x10]
00000000000382f8	sub	x9, x9, #0x1
00000000000382fc	str	x9, [x8, #0x18]
0000000000038300	cmp	x9, x10
0000000000038304	b.le	0x3830c
0000000000038308	str	x9, [x8, #0x10]
000000000003830c	add	x8, x8, #0x8
0000000000038310	mov	x9, #-0x1
0000000000038314	b	0x38334
0000000000038318	ldp	x11, x10, [x8, #0x10]
000000000003831c	add	x9, x10, #0x1
0000000000038320	str	x9, [x8, #0x18]
0000000000038324	cmp	x10, x11
0000000000038328	b.lt	0x38330
000000000003832c	str	x9, [x8, #0x10]
0000000000038330	mov	w9, #0x1
0000000000038334	ldr	x10, [x8]
0000000000038338	add	x10, x10, #0x1
000000000003833c	str	x10, [x8]
0000000000038340	ldp	x8, x10, [x23, #0x58]
0000000000038344	add	x8, x8, x9
0000000000038348	str	x8, [x23, #0x58]
000000000003834c	cmp	x8, x10
0000000000038350	b.ls	0x382d0
0000000000038354	str	x8, [x23, #0x60]
0000000000038358	ldp	x8, x9, [x23, #0x68]
000000000003835c	sub	x8, x8, x21
0000000000038360	str	x8, [x23, #0x68]
0000000000038364	cmp	x8, x9
0000000000038368	b.hi	0x382e4
000000000003836c	ldr	x8, [x20, #0x40]
0000000000038370	cbz	x8, 0x380a8
0000000000038374	cmp	x8, #0x1f
0000000000038378	b.hi	0x3838c
000000000003837c	mov	w10, #0x0
0000000000038380	mov	x9, #0x0
0000000000038384	mov	w19, #0x1
0000000000038388	b	0x38628
000000000003838c	and	x9, x8, #0xffffffffffffffe0
0000000000038390	add	x10, x20, x25
0000000000038394	movi.16b	v2, #0x1
0000000000038398	movi.16b	v0, #0x0
000000000003839c	mov	x11, x9
00000000000383a0	movi.16b	v1, #0x0
00000000000383a4	movi.16b	v3, #0x1
00000000000383a8	sub	x12, x10, #0x7c0
00000000000383ac	prfm	pldl1keep, [x12]
00000000000383b0	sub	x12, x10, #0x780
00000000000383b4	prfm	pldl1keep, [x12]
00000000000383b8	sub	x12, x10, #0xfc0
00000000000383bc	ldr	b4, [x12]
00000000000383c0	sub	x12, x10, #0x740
00000000000383c4	prfm	pldl1keep, [x12]
00000000000383c8	sub	x12, x10, #0xf80
00000000000383cc	ld1.b	{ v4 }[1], [x12]
00000000000383d0	sub	x12, x10, #0x700
00000000000383d4	prfm	pldl1keep, [x12]
00000000000383d8	sub	x12, x10, #0xf40
00000000000383dc	ld1.b	{ v4 }[2], [x12]
00000000000383e0	sub	x12, x10, #0x6c0
00000000000383e4	prfm	pldl1keep, [x12]
00000000000383e8	sub	x12, x10, #0xf00
00000000000383ec	ld1.b	{ v4 }[3], [x12]
00000000000383f0	sub	x12, x10, #0x680
00000000000383f4	prfm	pldl1keep, [x12]
00000000000383f8	sub	x12, x10, #0xec0
00000000000383fc	ld1.b	{ v4 }[4], [x12]
0000000000038400	sub	x12, x10, #0x640
0000000000038404	prfm	pldl1keep, [x12]
0000000000038408	sub	x12, x10, #0xe80
000000000003840c	ld1.b	{ v4 }[5], [x12]
0000000000038410	sub	x12, x10, #0x600
0000000000038414	prfm	pldl1keep, [x12]
0000000000038418	sub	x12, x10, #0xe40
000000000003841c	ld1.b	{ v4 }[6], [x12]
0000000000038420	sub	x12, x10, #0x5c0
0000000000038424	prfm	pldl1keep, [x12]
0000000000038428	sub	x12, x10, #0xe00
000000000003842c	ld1.b	{ v4 }[7], [x12]
0000000000038430	sub	x12, x10, #0x580
0000000000038434	prfm	pldl1keep, [x12]
0000000000038438	sub	x12, x10, #0xdc0
000000000003843c	ld1.b	{ v4 }[8], [x12]
0000000000038440	sub	x12, x10, #0x540
0000000000038444	prfm	pldl1keep, [x12]
0000000000038448	sub	x12, x10, #0xd80
000000000003844c	ld1.b	{ v4 }[9], [x12]
0000000000038450	sub	x12, x10, #0x500
0000000000038454	prfm	pldl1keep, [x12]
0000000000038458	sub	x12, x10, #0xd40
000000000003845c	ld1.b	{ v4 }[10], [x12]
0000000000038460	sub	x12, x10, #0x4c0
0000000000038464	prfm	pldl1keep, [x12]
0000000000038468	sub	x12, x10, #0xd00
000000000003846c	ld1.b	{ v4 }[11], [x12]
0000000000038470	sub	x12, x10, #0x480
0000000000038474	prfm	pldl1keep, [x12]
0000000000038478	sub	x12, x10, #0xcc0
000000000003847c	ld1.b	{ v4 }[12], [x12]
0000000000038480	sub	x12, x10, #0x440
0000000000038484	prfm	pldl1keep, [x12]
0000000000038488	sub	x12, x10, #0xc80
000000000003848c	ld1.b	{ v4 }[13], [x12]
0000000000038490	sub	x12, x10, #0x400
0000000000038494	prfm	pldl1keep, [x12]
0000000000038498	sub	x12, x10, #0xc40
000000000003849c	ld1.b	{ v4 }[14], [x12]
00000000000384a0	sub	x12, x10, #0xc00
00000000000384a4	ld1.b	{ v4 }[15], [x12]
00000000000384a8	sub	x12, x10, #0x3c0
00000000000384ac	prfm	pldl1keep, [x12]
00000000000384b0	sub	x12, x10, #0x380
00000000000384b4	prfm	pldl1keep, [x12]
00000000000384b8	sub	x12, x10, #0xbc0
00000000000384bc	ldr	b5, [x12]
00000000000384c0	sub	x12, x10, #0x340
00000000000384c4	prfm	pldl1keep, [x12]
00000000000384c8	sub	x12, x10, #0xb80
00000000000384cc	ld1.b	{ v5 }[1], [x12]
00000000000384d0	sub	x12, x10, #0x300
00000000000384d4	prfm	pldl1keep, [x12]
00000000000384d8	sub	x12, x10, #0xb40
00000000000384dc	ld1.b	{ v5 }[2], [x12]
00000000000384e0	sub	x12, x10, #0x2c0
00000000000384e4	prfm	pldl1keep, [x12]
00000000000384e8	sub	x12, x10, #0xb00
00000000000384ec	ld1.b	{ v5 }[3], [x12]
00000000000384f0	sub	x12, x10, #0x280
00000000000384f4	prfm	pldl1keep, [x12]
00000000000384f8	sub	x12, x10, #0xac0
00000000000384fc	ld1.b	{ v5 }[4], [x12]
0000000000038500	sub	x12, x10, #0x240
0000000000038504	prfm	pldl1keep, [x12]
0000000000038508	sub	x12, x10, #0xa80
000000000003850c	ld1.b	{ v5 }[5], [x12]
0000000000038510	sub	x12, x10, #0x200
0000000000038514	prfm	pldl1keep, [x12]
0000000000038518	sub	x12, x10, #0xa40
000000000003851c	ld1.b	{ v5 }[6], [x12]
0000000000038520	sub	x12, x10, #0x1c0
0000000000038524	prfm	pldl1keep, [x12]
0000000000038528	sub	x12, x10, #0xa00
000000000003852c	ld1.b	{ v5 }[7], [x12]
0000000000038530	sub	x12, x10, #0x180
0000000000038534	prfm	pldl1keep, [x12]
0000000000038538	sub	x12, x10, #0x9c0
000000000003853c	ld1.b	{ v5 }[8], [x12]
0000000000038540	sub	x12, x10, #0x140
0000000000038544	prfm	pldl1keep, [x12]
0000000000038548	sub	x12, x10, #0x980
000000000003854c	ld1.b	{ v5 }[9], [x12]
0000000000038550	sub	x12, x10, #0x940
0000000000038554	prfum	pldl1keep, [x10, #-0x100]
0000000000038558	ld1.b	{ v5 }[10], [x12]
000000000003855c	sub	x12, x10, #0x900
0000000000038560	prfum	pldl1keep, [x10, #-0xc0]
0000000000038564	ld1.b	{ v5 }[11], [x12]
0000000000038568	sub	x12, x10, #0x8c0
000000000003856c	prfum	pldl1keep, [x10, #-0x80]
0000000000038570	ld1.b	{ v5 }[12], [x12]
0000000000038574	sub	x12, x10, #0x880
0000000000038578	prfum	pldl1keep, [x10, #-0x40]
000000000003857c	ld1.b	{ v5 }[13], [x12]
0000000000038580	sub	x12, x10, #0x840
0000000000038584	prfm	pldl1keep, [x10]
0000000000038588	ld1.b	{ v5 }[14], [x12]
000000000003858c	sub	x12, x10, #0x800
0000000000038590	ld1.b	{ v5 }[15], [x12]
0000000000038594	and.16b	v6, v4, v16
0000000000038598	and.16b	v7, v5, v16
000000000003859c	cmeq.16b	v6, v6, #0
00000000000385a0	cmeq.16b	v7, v7, #0
00000000000385a4	bic.16b	v2, v2, v6
00000000000385a8	and.16b	v4, v4, v17
00000000000385ac	and.16b	v5, v5, v17
00000000000385b0	bic.16b	v3, v3, v7
00000000000385b4	cmeq.16b	v4, v4, #0
00000000000385b8	cmeq.16b	v5, v5, #0
00000000000385bc	orn.16b	v0, v0, v4
00000000000385c0	orn.16b	v1, v1, v5
00000000000385c4	add	x10, x10, #0x800
00000000000385c8	subs	x11, x11, #0x20
00000000000385cc	b.ne	0x383a8
00000000000385d0	and.16b	v2, v3, v2
00000000000385d4	dup.2d	v3, v2[1]
00000000000385d8	and.16b	v2, v2, v3
00000000000385dc	dup.4s	v3, v2[1]
00000000000385e0	and.16b	v2, v2, v3
00000000000385e4	dup.8h	v3, v2[1]
00000000000385e8	and.16b	v2, v2, v3
00000000000385ec	dup.16b	v3, v2[1]
00000000000385f0	and.16b	v2, v2, v3
00000000000385f4	umov.b	w19, v2[0]
00000000000385f8	orr.16b	v0, v1, v0
00000000000385fc	dup.2d	v1, v0[1]
0000000000038600	orr.16b	v0, v0, v1
0000000000038604	dup.4s	v1, v0[1]
0000000000038608	orr.16b	v0, v0, v1
000000000003860c	dup.8h	v1, v0[1]
0000000000038610	orr.16b	v0, v0, v1
0000000000038614	dup.16b	v1, v0[1]
0000000000038618	orr.16b	v0, v0, v1
000000000003861c	umov.b	w10, v0[0]
0000000000038620	cmp	x8, x9
0000000000038624	b.eq	0x38650
0000000000038628	sub	x8, x8, x9
000000000003862c	add	x9, x20, x9, lsl #6
0000000000038630	add	x9, x9, #0x79
0000000000038634	ldrb	w11, [x9], #0x40
0000000000038638	and	w12, w11, #0x4
000000000003863c	and	w19, w19, w12, lsr #2
0000000000038640	and	w11, w11, #0x2
0000000000038644	orr	w10, w10, w11, lsr #1
0000000000038648	subs	x8, x8, #0x1
000000000003864c	b.ne	0x38634
0000000000038650	tbz	w10, #0x0, 0x38670
0000000000038654	mov	w0, #0x5
0000000000038658	bl	_mi_option_get
000000000003865c	cmp	x0, #0x0
0000000000038660	cset	w8, eq
0000000000038664	and	w19, w19, w8
0000000000038668	mov	w4, #0x1
000000000003866c	b	0x380b0
0000000000038670	mov	w4, #0x0
0000000000038674	b	0x380b0
0000000000038678	nop
000000000003867c	ldr	x19, #0x40624
0000000000038680	cbz	x19, 0x38694
0000000000038684	bl	0x55dec ; symbol stub for: _pthread_self
0000000000038688	bl	0x55da4 ; symbol stub for: _pthread_mach_thread_np
000000000003868c	cmp	x19, w0, uxtw
0000000000038690	b.ne	0x386a4
0000000000038694	ldr	x8, [x28]
0000000000038698	ldr	x8, [x8, #0x10]
000000000003869c	cmp	x8, x28
00000000000386a0	b.eq	0x386c4
00000000000386a4	ldp	x29, x30, [sp, #0x60]
00000000000386a8	ldp	x20, x19, [sp, #0x50]
00000000000386ac	ldp	x22, x21, [sp, #0x40]
00000000000386b0	ldp	x24, x23, [sp, #0x30]
00000000000386b4	ldp	x26, x25, [sp, #0x20]
00000000000386b8	ldp	x28, x27, [sp, #0x10]
00000000000386bc	add	sp, sp, #0x70
00000000000386c0	ret
00000000000386c4	nop
00000000000386c8	ldr	x19, #0x5bf68
00000000000386cc	cbz	x19, 0x386a4
00000000000386d0	mov	x20, #0x0
00000000000386d4	adr	x21, #0x4bdf4
00000000000386d8	nop
00000000000386dc	mov	x22, #-0x1
00000000000386e0	adr	x23, #0x5bf60
00000000000386e4	nop
00000000000386e8	b	0x386f8
00000000000386ec	add	x20, x20, #0x1
00000000000386f0	cmp	x20, x19
00000000000386f4	b.eq	0x386a4
00000000000386f8	add	x8, x21, x20, lsl #6
00000000000386fc	ldr	x9, [x8]
0000000000038700	cbz	x9, 0x386ec
0000000000038704	add	x9, x8, #0x10
0000000000038708	ldr	x10, [x8, #0x10]
000000000003870c	b	0x3871c
0000000000038710	clrex
0000000000038714	mov	w11, #0x0
0000000000038718	cbnz	w11, 0x38738
000000000003871c	cbnz	x10, 0x386ec
0000000000038720	ldxr	x10, [x9]
0000000000038724	cbnz	x10, 0x38710
0000000000038728	stlxr	w11, x22, [x9]
000000000003872c	cbnz	w11, 0x38714
0000000000038730	mov	w11, #0x1
0000000000038734	cbz	w11, 0x3871c
0000000000038738	add	x9, x21, x20, lsl #6
000000000003873c	add	x10, x9, #0x8
0000000000038740	ldar	x0, [x10]
0000000000038744	ldr	x2, [x9, #0x30]
0000000000038748	ldr	x9, [x9, #0x20]
000000000003874c	movi.16b	v0, #0x0
0000000000038750	stp	q0, q0, [x8, #0x20]
0000000000038754	stp	q0, q0, [x8]
0000000000038758	stlr	xzr, [x8]
000000000003875c	cbnz	x0, 0x38768
0000000000038760	b	0x386ec
0000000000038764	wfe
0000000000038768	ldar	x8, [x23]
000000000003876c	cbnz	x8, 0x38764
0000000000038770	cmn	x9, #0x1
0000000000038774	cset	w3, eq
0000000000038778	mov	w1, #0x10000000
000000000003877c	bl	__mi_arena_free
0000000000038780	b	0x386ec
0000000000038784	add	x20, x8, #0x20
0000000000038788	adrp	x21, 92 ; 0x94000
000000000003878c	adrp	x22, 92 ; 0x94000
0000000000038790	adr	x23, #0x5bf70
0000000000038794	nop
0000000000038798	adrp	x24, 92 ; 0x94000
000000000003879c	adr	x25, #0x5bee4
00000000000387a0	nop
00000000000387a4	adr	x26, #0x5bf1c
00000000000387a8	nop
00000000000387ac	adr	x27, #0x5bf94
00000000000387b0	nop
00000000000387b4	adr	x19, #0x5be8c
00000000000387b8	nop
00000000000387bc	ldr	x8, [x21, #0x680]
00000000000387c0	lsr	x8, x8, #22
00000000000387c4	cbnz	x8, 0x3889c
00000000000387c8	ldr	x8, [x22, #0x700]
00000000000387cc	cbz	x8, 0x37b08
00000000000387d0	ldaxr	x8, [x23]
00000000000387d4	stlxr	w9, xzr, [x23]
00000000000387d8	cbnz	w9, 0x387d0
00000000000387dc	cbz	x8, 0x37b08
00000000000387e0	ldr	x10, [x21, #0x680]
00000000000387e4	lsr	x9, x10, #22
00000000000387e8	cbnz	x9, 0x38818
00000000000387ec	ldr	x9, [x24, #0x740]
00000000000387f0	add	w11, w10, #0x1
00000000000387f4	and	x11, x11, #0x3fffff
00000000000387f8	orr	x11, x11, x8
00000000000387fc	ldaxr	x12, [x25]
0000000000038800	cmp	x12, x10
0000000000038804	b.ne	0x38814
0000000000038808	stlxr	w12, x11, [x25]
000000000003880c	cbnz	w12, 0x387fc
0000000000038810	b	0x3887c
0000000000038814	clrex
0000000000038818	mov	x9, x8
000000000003881c	mov	x10, x9
0000000000038820	ldr	x9, [x9, #0x10]
0000000000038824	cbnz	x9, 0x3881c
0000000000038828	ldr	x12, [x21, #0x680]
000000000003882c	b	0x38840
0000000000038830	clrex
0000000000038834	mov	w13, #0x0
0000000000038838	mov	x12, x11
000000000003883c	cbnz	w13, 0x3887c
0000000000038840	ldr	x9, [x25, #0xc0]
0000000000038844	and	x11, x12, #0xffffffffffc00000
0000000000038848	add	x13, x10, #0x10
000000000003884c	stlr	x11, [x13]
0000000000038850	ldxr	x11, [x25]
0000000000038854	cmp	x11, x12
0000000000038858	b.ne	0x38830
000000000003885c	add	w12, w12, #0x1
0000000000038860	and	x12, x12, #0x3fffff
0000000000038864	orr	x12, x12, x8
0000000000038868	stlxr	w13, x12, [x25]
000000000003886c	cbnz	w13, 0x38834
0000000000038870	mov	w13, #0x1
0000000000038874	mov	x12, x11
0000000000038878	cbz	w13, 0x38840
000000000003887c	ldxr	x8, [x26]
0000000000038880	add	x8, x8, x9
0000000000038884	stxr	w10, x8, [x26]
0000000000038888	cbnz	w10, 0x3887c
000000000003888c	ldxr	x8, [x27]
0000000000038890	sub	x8, x8, x9
0000000000038894	stxr	w10, x8, [x27]
0000000000038898	cbnz	w10, 0x3888c
000000000003889c	ldxr	x8, [x19]
00000000000388a0	add	x8, x8, #0x1
00000000000388a4	stxr	w9, x8, [x19]
00000000000388a8	cbnz	w9, 0x3889c
00000000000388ac	ldar	x9, [x25]
00000000000388b0	b	0x388c4
00000000000388b4	clrex
00000000000388b8	mov	w10, #0x0
00000000000388bc	mov	x9, x8
00000000000388c0	cbnz	w10, 0x388fc
00000000000388c4	ands	x0, x9, #0xffffffffffc00000
00000000000388c8	b.eq	0x38948
00000000000388cc	ldr	x10, [x0, #0x10]
00000000000388d0	ldaxr	x8, [x25]
00000000000388d4	cmp	x8, x9
00000000000388d8	b.ne	0x388b4
00000000000388dc	add	w9, w9, #0x1
00000000000388e0	and	x9, x9, #0x3fffff
00000000000388e4	orr	x9, x10, x9
00000000000388e8	stlxr	w10, x9, [x25]
00000000000388ec	cbnz	w10, 0x388b8
00000000000388f0	mov	w10, #0x1
00000000000388f4	mov	x9, x8
00000000000388f8	cbz	w10, 0x388c4
00000000000388fc	ldxr	x8, [x19]
0000000000038900	sub	x8, x8, #0x1
0000000000038904	stxr	w9, x8, [x19]
0000000000038908	cbnz	w9, 0x388fc
000000000003890c	add	x8, x0, #0x10
0000000000038910	stlr	xzr, [x8]
0000000000038914	ldxr	x8, [x26]
0000000000038918	sub	x8, x8, #0x1
000000000003891c	stxr	w9, x8, [x26]
0000000000038920	cbnz	w9, 0x38914
0000000000038924	mov	x1, x28
0000000000038928	mov	x2, #0x0
000000000003892c	mov	x3, #0x0
0000000000038930	mov	x4, x20
0000000000038934	bl	_mi_segment_reclaim
0000000000038938	ldr	x8, [x21, #0x680]
000000000003893c	lsr	x8, x8, #22
0000000000038940	cbz	x8, 0x387c8
0000000000038944	b	0x3889c
0000000000038948	mov	w21, #0x0
000000000003894c	ldxr	x8, [x19]
0000000000038950	sub	x8, x8, #0x1
0000000000038954	stxr	w9, x8, [x19]
0000000000038958	cbnz	w9, 0x3894c
000000000003895c	b	0x37bc8
__mi_page_free_collect:
0000000000038960	stp	x20, x19, [sp, #-0x20]!
0000000000038964	stp	x29, x30, [sp, #0x10]
0000000000038968	add	x29, sp, #0x10
000000000003896c	mov	x20, x1
0000000000038970	mov	x19, x0
0000000000038974	tbnz	w1, #0x0, 0x38984
0000000000038978	ldr	x8, [x19, #0x20]
000000000003897c	cmp	x8, #0x4
0000000000038980	b.lo	0x38a04
0000000000038984	add	x8, x19, #0x20
0000000000038988	ldr	x9, [x19, #0x20]
000000000003898c	b	0x3899c
0000000000038990	clrex
0000000000038994	mov	w11, #0x0
0000000000038998	cbnz	w11, 0x389c0
000000000003899c	mov	x10, x9
00000000000389a0	ldaxr	x9, [x8]
00000000000389a4	cmp	x9, x10
00000000000389a8	b.ne	0x38990
00000000000389ac	and	x11, x10, #0x3
00000000000389b0	stlxr	w12, x11, [x8]
00000000000389b4	cbnz	w12, 0x38994
00000000000389b8	mov	w11, #0x1
00000000000389bc	cbz	w11, 0x3899c
00000000000389c0	ands	x8, x10, #0xfffffffffffffffc
00000000000389c4	b.eq	0x38a04
00000000000389c8	mov	w9, #0x0
00000000000389cc	ldrh	w10, [x19, #0x2]
00000000000389d0	mov	x12, x8
00000000000389d4	mov	x11, x12
00000000000389d8	add	w9, w9, #0x1
00000000000389dc	ldr	x12, [x12]
00000000000389e0	cmp	w9, w10
00000000000389e4	ccmp	x12, #0x0, #0x4, ls
00000000000389e8	b.ne	0x389d4
00000000000389ec	cmp	w9, w10
00000000000389f0	b.ls	0x38a34
00000000000389f4	adr	x1, #0x24405 ; literal pool for: "corrupted thread-free list\n"
00000000000389f8	nop
00000000000389fc	mov	w0, #0xe
0000000000038a00	bl	__mi_error_message
0000000000038a04	ldr	x8, [x19, #0x18]
0000000000038a08	cbz	x8, 0x38a28
0000000000038a0c	ldr	x9, [x19, #0x8]
0000000000038a10	cbnz	x9, 0x38a58
0000000000038a14	str	x8, [x19, #0x8]
0000000000038a18	str	xzr, [x19, #0x18]
0000000000038a1c	ldrb	w8, [x19, #0x7]
0000000000038a20	and	w8, w8, #0xfe
0000000000038a24	strb	w8, [x19, #0x7]
0000000000038a28	ldp	x29, x30, [sp, #0x10]
0000000000038a2c	ldp	x20, x19, [sp], #0x20
0000000000038a30	ret
0000000000038a34	ldr	x10, [x19, #0x18]
0000000000038a38	str	x10, [x11]
0000000000038a3c	str	x8, [x19, #0x18]
0000000000038a40	ldr	w8, [x19, #0x10]
0000000000038a44	sub	w8, w8, w9
0000000000038a48	str	w8, [x19, #0x10]
0000000000038a4c	ldr	x8, [x19, #0x18]
0000000000038a50	cbnz	x8, 0x38a0c
0000000000038a54	b	0x38a28
0000000000038a58	cbz	w20, 0x38a28
0000000000038a5c	mov	x11, x8
0000000000038a60	mov	x10, x11
0000000000038a64	ldr	x11, [x11]
0000000000038a68	cbnz	x11, 0x38a60
0000000000038a6c	str	x9, [x10]
0000000000038a70	b	0x38a14
__mi_page_free:
0000000000038a74	mov	x8, x2
0000000000038a78	ldrb	w9, [x0, #0x6]
0000000000038a7c	and	w9, w9, #0xfffffffd
0000000000038a80	strb	w9, [x0, #0x6]
0000000000038a84	ldr	x9, [x0, #0x28]
0000000000038a88	ldr	x10, [x9]
0000000000038a8c	ldr	x9, [x0, #0x28]
0000000000038a90	ldr	x13, [x0, #0x38]
0000000000038a94	cbz	x13, 0x38aa0
0000000000038a98	ldr	x11, [x0, #0x30]
0000000000038a9c	str	x11, [x13, #0x30]
0000000000038aa0	mov	x11, x0
0000000000038aa4	ldr	x12, [x11, #0x30]!
0000000000038aa8	cbz	x12, 0x38ab0
0000000000038aac	str	x13, [x12, #0x38]
0000000000038ab0	ldr	x13, [x1, #0x8]
0000000000038ab4	cmp	x13, x0
0000000000038ab8	b.eq	0x38acc
0000000000038abc	ldr	x13, [x1]
0000000000038ac0	cmp	x13, x0
0000000000038ac4	b.ne	0x38c58
0000000000038ac8	b	0x38ae0
0000000000038acc	ldr	x13, [x0, #0x38]
0000000000038ad0	str	x13, [x1, #0x8]
0000000000038ad4	ldr	x13, [x1]
0000000000038ad8	cmp	x13, x0
0000000000038adc	b.ne	0x38c58
0000000000038ae0	str	x12, [x1]
0000000000038ae4	ldr	x15, [x1, #0x10]
0000000000038ae8	cmp	x15, #0x400
0000000000038aec	b.hi	0x38c58
0000000000038af0	adr	x13, #0x202d0
0000000000038af4	nop
0000000000038af8	cmp	x12, #0x0
0000000000038afc	csel	x12, x13, x12, eq
0000000000038b00	add	x13, x15, #0x7
0000000000038b04	lsr	x13, x13, #3
0000000000038b08	add	x14, x9, x13, lsl #3
0000000000038b0c	ldr	x14, [x14, #0x8]
0000000000038b10	cmp	x14, x12
0000000000038b14	b.eq	0x38c58
0000000000038b18	cmp	x15, #0x9
0000000000038b1c	b.hs	0x38b28
0000000000038b20	mov	x14, #0x0
0000000000038b24	b	0x38bfc
0000000000038b28	sub	x16, x13, #0x1
0000000000038b2c	clz	x17, x16
0000000000038b30	mov	w14, #0x3f
0000000000038b34	sub	w17, w14, w17
0000000000038b38	and	w17, w17, #0xff
0000000000038b3c	sub	w2, w17, #0x2
0000000000038b40	lsr	x16, x16, x2
0000000000038b44	and	w16, w16, #0x3
0000000000038b48	bfi	w16, w17, #2, #8
0000000000038b4c	sub	w16, w16, #0x3
0000000000038b50	add	w17, w13, #0x1
0000000000038b54	and	w17, w17, #0xfffffffe
0000000000038b58	cmp	x15, #0x40
0000000000038b5c	csel	w17, w16, w17, hi
0000000000038b60	add	x15, x9, #0x410
0000000000038b64	sub	x16, x1, #0x18
0000000000038b68	and	w17, w17, #0xff
0000000000038b6c	mov	w1, #0x7
0000000000038b70	movk	w1, #0x20, lsl #16
0000000000038b74	ldr	x2, [x16, #0x10]
0000000000038b78	add	x3, x2, #0x7
0000000000038b7c	lsr	x2, x3, #3
0000000000038b80	cmp	x3, #0x10
0000000000038b84	b.hs	0x38b90
0000000000038b88	mov	w3, #0x1
0000000000038b8c	b	0x38bd8
0000000000038b90	cmp	x3, #0x47
0000000000038b94	b.hi	0x38ba4
0000000000038b98	add	w3, w2, #0x1
0000000000038b9c	and	w3, w3, #0xfffffffe
0000000000038ba0	b	0x38bd8
0000000000038ba4	cmp	x3, x1
0000000000038ba8	b.ls	0x38bb4
0000000000038bac	mov	w3, #0x49
0000000000038bb0	b	0x38bd8
0000000000038bb4	sub	x3, x2, #0x1
0000000000038bb8	clz	x4, x3
0000000000038bbc	sub	w4, w14, w4
0000000000038bc0	and	w4, w4, #0xff
0000000000038bc4	sub	w5, w4, #0x2
0000000000038bc8	lsr	x3, x3, x5
0000000000038bcc	and	w3, w3, #0x3
0000000000038bd0	bfi	w3, w4, #2, #8
0000000000038bd4	sub	w3, w3, #0x3
0000000000038bd8	cmp	x16, x15
0000000000038bdc	b.ls	0x38bec
0000000000038be0	sub	x16, x16, #0x18
0000000000038be4	cmp	w17, w3, uxtb
0000000000038be8	b.eq	0x38b74
0000000000038bec	cmp	x2, x13
0000000000038bf0	csinc	x14, x13, x2, hs
0000000000038bf4	cmp	x14, x13
0000000000038bf8	b.hi	0x38c58
0000000000038bfc	sub	x15, x13, x14
0000000000038c00	add	x15, x15, #0x1
0000000000038c04	cmp	x15, #0x4
0000000000038c08	b.lo	0x38c3c
0000000000038c0c	and	x16, x15, #0xfffffffffffffffc
0000000000038c10	dup.2d	v0, x12
0000000000038c14	add	x17, x9, x14, lsl #3
0000000000038c18	add	x17, x17, #0x18
0000000000038c1c	mov	x1, x16
0000000000038c20	stp	q0, q0, [x17, #-0x10]
0000000000038c24	add	x17, x17, #0x20
0000000000038c28	subs	x1, x1, #0x4
0000000000038c2c	b.ne	0x38c20
0000000000038c30	cmp	x15, x16
0000000000038c34	b.eq	0x38c58
0000000000038c38	add	x14, x14, x16
0000000000038c3c	sub	x13, x13, x14
0000000000038c40	add	x13, x13, #0x1
0000000000038c44	add	x14, x9, x14, lsl #3
0000000000038c48	add	x14, x14, #0x8
0000000000038c4c	str	x12, [x14], #0x8
0000000000038c50	subs	x13, x13, #0x1
0000000000038c54	b.ne	0x38c4c
0000000000038c58	add	x2, x10, #0x20
0000000000038c5c	ldr	x10, [x9, #0xbc8]
0000000000038c60	sub	x10, x10, #0x1
0000000000038c64	str	x10, [x9, #0xbc8]
0000000000038c68	stp	xzr, xzr, [x11]
0000000000038c6c	ldrb	w9, [x0, #0x6]
0000000000038c70	and	w9, w9, #0xfe
0000000000038c74	strb	w9, [x0, #0x6]
0000000000038c78	add	x9, x0, #0x28
0000000000038c7c	stlr	xzr, [x9]
0000000000038c80	mov	x1, x8
0000000000038c84	b	__mi_segment_page_free
__mi_arena_free:
0000000000038c88	sub	sp, sp, #0x60
0000000000038c8c	stp	x24, x23, [sp, #0x20]
0000000000038c90	stp	x22, x21, [sp, #0x30]
0000000000038c94	stp	x20, x19, [sp, #0x40]
0000000000038c98	stp	x29, x30, [sp, #0x50]
0000000000038c9c	add	x29, sp, #0x50
0000000000038ca0	cbz	x0, 0x38d8c
0000000000038ca4	mov	x20, x1
0000000000038ca8	cbz	x1, 0x38d8c
0000000000038cac	mov	x19, x0
0000000000038cb0	cbz	x2, 0x38d3c
0000000000038cb4	adr	x8, #0x5b84c
0000000000038cb8	nop
0000000000038cbc	add	x8, x8, w2, uxtb #3
0000000000038cc0	ldr	x23, [x8, #0x3f8]
0000000000038cc4	cbz	x23, 0x38d60
0000000000038cc8	ldr	x8, [x23, #0x10]
0000000000038ccc	cmp	x8, x2, lsr #14
0000000000038cd0	b.ls	0x38d74
0000000000038cd4	lsr	x21, x2, #8
0000000000038cd8	mov	w8, #0xffffff
0000000000038cdc	add	x8, x20, x8
0000000000038ce0	lsr	x22, x8, #24
0000000000038ce4	ldrb	w9, [x23, #0x1d]
0000000000038ce8	cbnz	w9, 0x38d14
0000000000038cec	and	x1, x8, #0xffffffffff000000
0000000000038cf0	add	x4, sp, #0x1f
0000000000038cf4	mov	x0, x19
0000000000038cf8	mov	w2, #0x0
0000000000038cfc	mov	w3, #0x1
0000000000038d00	bl	_mi_os_commitx
0000000000038d04	ldr	x0, [x23, #0x30]
0000000000038d08	mov	x1, x22
0000000000038d0c	mov	x2, x21
0000000000038d10	bl	__mi_bitmap_unclaim_across
0000000000038d14	add	x0, x23, #0x38
0000000000038d18	mov	x1, x22
0000000000038d1c	mov	x2, x21
0000000000038d20	bl	__mi_bitmap_unclaim_across
0000000000038d24	tbnz	w0, #0x0, 0x38d8c
0000000000038d28	stp	x19, x20, [sp]
0000000000038d2c	adr	x1, #0x24025 ; literal pool for: "trying to free an already freed block: %p, size %zu\n"
0000000000038d30	nop
0000000000038d34	mov	w0, #0x23
0000000000038d38	b	0x38d88
0000000000038d3c	mov	x0, x19
0000000000038d40	mov	x1, x20
0000000000038d44	mov	x2, x3
0000000000038d48	ldp	x29, x30, [sp, #0x50]
0000000000038d4c	ldp	x20, x19, [sp, #0x40]
0000000000038d50	ldp	x22, x21, [sp, #0x30]
0000000000038d54	ldp	x24, x23, [sp, #0x20]
0000000000038d58	add	sp, sp, #0x60
0000000000038d5c	b	__mi_os_free_ex
0000000000038d60	stp	x20, x2, [sp, #0x8]
0000000000038d64	str	x19, [sp]
0000000000038d68	adr	x1, #0x23f5b ; literal pool for: "trying to free from non-existent arena: %p, size %zu, memid: 0x%zx\n"
0000000000038d6c	nop
0000000000038d70	b	0x38d84
0000000000038d74	stp	x20, x2, [sp, #0x8]
0000000000038d78	str	x19, [sp]
0000000000038d7c	adr	x1, #0x23f8b ; literal pool for: "trying to free from non-existent arena block: %p, size %zu, memid: 0x%zx\n"
0000000000038d80	nop
0000000000038d84	mov	w0, #0x16
0000000000038d88	bl	__mi_error_message
0000000000038d8c	ldp	x29, x30, [sp, #0x50]
0000000000038d90	ldp	x20, x19, [sp, #0x40]
0000000000038d94	ldp	x22, x21, [sp, #0x30]
0000000000038d98	ldp	x24, x23, [sp, #0x20]
0000000000038d9c	add	sp, sp, #0x60
0000000000038da0	ret
__mi_bitmap_unclaim_across:
0000000000038da4	lsr	x12, x2, #6
0000000000038da8	ands	x8, x2, #0x3f
0000000000038dac	add	x9, x8, x1
0000000000038db0	mov	w10, #0x40
0000000000038db4	sub	x10, x10, x8
0000000000038db8	neg	x11, x8
0000000000038dbc	mov	x13, #-0x1
0000000000038dc0	lsl	x11, x13, x11
0000000000038dc4	mvn	x11, x11
0000000000038dc8	lsl	x11, x11, x8
0000000000038dcc	csinv	x11, x11, xzr, ne
0000000000038dd0	sub	x10, x1, x10
0000000000038dd4	lsr	x14, x10, #6
0000000000038dd8	ands	x10, x10, #0x3f
0000000000038ddc	lsl	x10, x13, x10
0000000000038de0	csel	x13, x13, x13, eq
0000000000038de4	csinv	x15, xzr, x10, eq
0000000000038de8	mov	x10, #-0x1
0000000000038dec	lsl	x16, x10, x1
0000000000038df0	mvn	x16, x16
0000000000038df4	lsl	x8, x16, x8
0000000000038df8	cmp	x1, #0x0
0000000000038dfc	csel	x16, xzr, xzr, eq
0000000000038e00	csel	x8, xzr, x8, eq
0000000000038e04	cmp	x1, #0x3f
0000000000038e08	csel	x16, xzr, x16, hi
0000000000038e0c	csel	x8, x10, x8, hi
0000000000038e10	cmp	x9, #0x40
0000000000038e14	csel	x9, x13, x16, hi
0000000000038e18	csel	x10, x11, x8, hi
0000000000038e1c	csel	x8, x15, x16, hi
0000000000038e20	csel	x11, x14, x16, hi
0000000000038e24	add	x12, x0, x12, lsl #3
0000000000038e28	mvn	x13, x10
0000000000038e2c	ldaxr	x14, [x12]
0000000000038e30	and	x15, x14, x13
0000000000038e34	stlxr	w16, x15, [x12]
0000000000038e38	cbnz	w16, 0x38e2c
0000000000038e3c	bics	xzr, x10, x14
0000000000038e40	cset	w0, eq
0000000000038e44	add	x10, x12, #0x8
0000000000038e48	cbz	x11, 0x38e78
0000000000038e4c	mvn	x12, x9
0000000000038e50	sub	x11, x11, #0x1
0000000000038e54	ldaxr	x13, [x10]
0000000000038e58	and	x14, x13, x12
0000000000038e5c	stlxr	w15, x14, [x10]
0000000000038e60	cbnz	w15, 0x38e54
0000000000038e64	bics	xzr, x9, x13
0000000000038e68	cset	w13, eq
0000000000038e6c	and	w0, w0, w13
0000000000038e70	add	x10, x10, #0x8
0000000000038e74	cbnz	x11, 0x38e50
0000000000038e78	cbz	x8, 0x38e9c
0000000000038e7c	mvn	x9, x8
0000000000038e80	ldaxr	x11, [x10]
0000000000038e84	and	x12, x11, x9
0000000000038e88	stlxr	w13, x12, [x10]
0000000000038e8c	cbnz	w13, 0x38e80
0000000000038e90	bics	xzr, x8, x11
0000000000038e94	cset	w8, eq
0000000000038e98	and	w0, w0, w8
0000000000038e9c	ret
_mi_os_commitx:
0000000000038ea0	sub	sp, sp, #0x50
0000000000038ea4	stp	x22, x21, [sp, #0x20]
0000000000038ea8	stp	x20, x19, [sp, #0x30]
0000000000038eac	stp	x29, x30, [sp, #0x40]
0000000000038eb0	add	x29, sp, #0x40
0000000000038eb4	cbz	x4, 0x38ebc
0000000000038eb8	strb	wzr, [x4]
0000000000038ebc	mov	w8, #0x1
0000000000038ec0	cbz	x0, 0x38f14
0000000000038ec4	cbz	x1, 0x38f14
0000000000038ec8	nop
0000000000038ecc	ldr	x8, #0x410b4
0000000000038ed0	fmov	d0, x8
0000000000038ed4	cnt.8b	v0, v0
0000000000038ed8	uaddlv.8b	h0, v0
0000000000038edc	fmov	w9, s0
0000000000038ee0	cbz	w3, 0x38f2c
0000000000038ee4	add	x10, x8, x0
0000000000038ee8	sub	x10, x10, #0x1
0000000000038eec	cmp	x9, #0x2
0000000000038ef0	b.hs	0x39070
0000000000038ef4	neg	x8, x8
0000000000038ef8	and	x19, x10, x8
0000000000038efc	add	x9, x0, x1
0000000000038f00	and	x8, x8, x9
0000000000038f04	sub	x20, x8, x19
0000000000038f08	cmp	x20, #0x1
0000000000038f0c	b.ge	0x38f58
0000000000038f10	mov	w8, #0x1
0000000000038f14	mov	x0, x8
0000000000038f18	ldp	x29, x30, [sp, #0x40]
0000000000038f1c	ldp	x20, x19, [sp, #0x30]
0000000000038f20	ldp	x22, x21, [sp, #0x20]
0000000000038f24	add	sp, sp, #0x50
0000000000038f28	ret
0000000000038f2c	cmp	x9, #0x2
0000000000038f30	b.hs	0x39094
0000000000038f34	neg	x9, x8
0000000000038f38	and	x19, x9, x0
0000000000038f3c	add	x10, x0, x1
0000000000038f40	add	x8, x8, x10
0000000000038f44	sub	x8, x8, #0x1
0000000000038f48	and	x8, x8, x9
0000000000038f4c	sub	x20, x8, x19
0000000000038f50	cmp	x20, #0x1
0000000000038f54	b.lt	0x38f10
0000000000038f58	cbz	w2, 0x38fe4
0000000000038f5c	adr	x9, #0x5bc1c
0000000000038f60	nop
0000000000038f64	ldxr	x8, [x9]
0000000000038f68	add	x8, x8, x1
0000000000038f6c	stxr	w10, x8, [x9]
0000000000038f70	cbnz	w10, 0x38f64
0000000000038f74	nop
0000000000038f78	ldr	x11, #0x5bbf8
0000000000038f7c	adr	x9, #0x5bbf4
0000000000038f80	nop
0000000000038f84	b	0x38f98
0000000000038f88	clrex
0000000000038f8c	mov	w12, #0x0
0000000000038f90	mov	x11, x10
0000000000038f94	cbnz	w12, 0x38fc0
0000000000038f98	cmp	x11, x8
0000000000038f9c	b.ge	0x38fc0
0000000000038fa0	ldxr	x10, [x9]
0000000000038fa4	cmp	x10, x11
0000000000038fa8	b.ne	0x38f88
0000000000038fac	stlxr	w11, x8, [x9]
0000000000038fb0	cbnz	w11, 0x38f8c
0000000000038fb4	mov	w12, #0x1
0000000000038fb8	mov	x11, x10
0000000000038fbc	cbz	w12, 0x38f98
0000000000038fc0	cmp	x1, #0x1
0000000000038fc4	b.lt	0x390c0
0000000000038fc8	adr	x8, #0x5bb98
0000000000038fcc	nop
0000000000038fd0	ldxr	x9, [x8]
0000000000038fd4	add	x9, x9, x1
0000000000038fd8	stxr	w10, x9, [x8]
0000000000038fdc	cbnz	w10, 0x38fd0
0000000000038fe0	b	0x390dc
0000000000038fe4	neg	x8, x1
0000000000038fe8	adr	x9, #0x5bb90
0000000000038fec	nop
0000000000038ff0	ldxr	x10, [x9]
0000000000038ff4	add	x11, x10, x8
0000000000038ff8	stxr	w12, x11, [x9]
0000000000038ffc	cbnz	w12, 0x38ff0
0000000000039000	sub	x9, x10, x1
0000000000039004	nop
0000000000039008	ldr	x12, #0x5bb68
000000000003900c	adr	x10, #0x5bb64
0000000000039010	nop
0000000000039014	b	0x39028
0000000000039018	clrex
000000000003901c	mov	w13, #0x0
0000000000039020	mov	x12, x11
0000000000039024	cbnz	w13, 0x39050
0000000000039028	cmp	x12, x9
000000000003902c	b.ge	0x39050
0000000000039030	ldxr	x11, [x10]
0000000000039034	cmp	x11, x12
0000000000039038	b.ne	0x39018
000000000003903c	stlxr	w12, x9, [x10]
0000000000039040	cbnz	w12, 0x3901c
0000000000039044	mov	w13, #0x1
0000000000039048	mov	x12, x11
000000000003904c	cbz	w13, 0x39028
0000000000039050	tbnz	x1, #0x3f, 0x391cc
0000000000039054	adr	x8, #0x5bb14
0000000000039058	nop
000000000003905c	ldxr	x9, [x8]
0000000000039060	add	x9, x9, x1
0000000000039064	stxr	w10, x9, [x8]
0000000000039068	cbnz	w10, 0x3905c
000000000003906c	b	0x391e4
0000000000039070	udiv	x9, x10, x8
0000000000039074	mul	x19, x9, x8
0000000000039078	add	x9, x0, x1
000000000003907c	udiv	x9, x9, x8
0000000000039080	mul	x8, x9, x8
0000000000039084	sub	x20, x8, x19
0000000000039088	cmp	x20, #0x1
000000000003908c	b.ge	0x38f58
0000000000039090	b	0x38f10
0000000000039094	udiv	x9, x0, x8
0000000000039098	mul	x19, x9, x8
000000000003909c	add	x9, x0, x1
00000000000390a0	add	x9, x8, x9
00000000000390a4	sub	x9, x9, #0x1
00000000000390a8	udiv	x9, x9, x8
00000000000390ac	mul	x8, x9, x8
00000000000390b0	sub	x20, x8, x19
00000000000390b4	cmp	x20, #0x1
00000000000390b8	b.ge	0x38f58
00000000000390bc	b	0x38f10
00000000000390c0	neg	x8, x1
00000000000390c4	adr	x9, #0x5baa4
00000000000390c8	nop
00000000000390cc	ldxr	x10, [x9]
00000000000390d0	add	x10, x10, x8
00000000000390d4	stxr	w11, x10, [x9]
00000000000390d8	cbnz	w11, 0x390cc
00000000000390dc	adr	x8, #0x5ba24
00000000000390e0	nop
00000000000390e4	add	x9, x8, #0x1e0
00000000000390e8	cmp	x9, x8
00000000000390ec	b.lo	0x3919c
00000000000390f0	adr	x8, #0x5bbf8
00000000000390f4	nop
00000000000390f8	ldxr	x9, [x8]
00000000000390fc	add	x9, x9, #0x1
0000000000039100	stxr	w10, x9, [x8]
0000000000039104	cbnz	w10, 0x390f8
0000000000039108	adr	x8, #0x5bbd8
000000000003910c	nop
0000000000039110	ldxr	x9, [x8]
0000000000039114	add	x9, x9, #0x1
0000000000039118	stxr	w10, x9, [x8]
000000000003911c	cbnz	w10, 0x39110
0000000000039120	mov	x0, x19
0000000000039124	mov	x1, x20
0000000000039128	mov	w2, #0x3
000000000003912c	bl	0x55c0c ; symbol stub for: _mprotect
0000000000039130	cbz	w0, 0x39138
0000000000039134	bl	0x55a8c ; symbol stub for: ___error
0000000000039138	mov	x0, x19
000000000003913c	mov	x1, x20
0000000000039140	mov	w2, #0x8
0000000000039144	bl	0x55bac ; symbol stub for: _madvise
0000000000039148	cbz	w0, 0x3924c
000000000003914c	mov	x21, x0
0000000000039150	bl	0x55a8c ; symbol stub for: ___error
0000000000039154	ldr	w8, [x0]
0000000000039158	adr	x22, #0x23c37 ; literal pool for: "commit"
000000000003915c	nop
0000000000039160	cmp	w8, #0x23
0000000000039164	b.ne	0x3921c
0000000000039168	bl	0x55a8c ; symbol stub for: ___error
000000000003916c	str	wzr, [x0]
0000000000039170	mov	x0, x19
0000000000039174	mov	x1, x20
0000000000039178	mov	w2, #0x8
000000000003917c	bl	0x55bac ; symbol stub for: _madvise
0000000000039180	cbz	w0, 0x3924c
0000000000039184	mov	x21, x0
0000000000039188	bl	0x55a8c ; symbol stub for: ___error
000000000003918c	ldr	w8, [x0]
0000000000039190	cmp	w8, #0x23
0000000000039194	b.eq	0x39168
0000000000039198	b	0x3921c
000000000003919c	adr	x8, #0x5bb44
00000000000391a0	nop
00000000000391a4	ldp	x10, x9, [x8]
00000000000391a8	add	x9, x9, #0x1
00000000000391ac	add	x10, x10, #0x1
00000000000391b0	stp	x10, x9, [x8]
00000000000391b4	mov	x0, x19
00000000000391b8	mov	x1, x20
00000000000391bc	mov	w2, #0x3
00000000000391c0	bl	0x55c0c ; symbol stub for: _mprotect
00000000000391c4	cbnz	w0, 0x39134
00000000000391c8	b	0x39138
00000000000391cc	adr	x9, #0x5b994
00000000000391d0	nop
00000000000391d4	ldxr	x10, [x9]
00000000000391d8	add	x10, x10, x8
00000000000391dc	stxr	w11, x10, [x9]
00000000000391e0	cbnz	w11, 0x391d4
00000000000391e4	mov	x0, x19
00000000000391e8	mov	x1, x20
00000000000391ec	mov	w2, #0x0
00000000000391f0	mov	w3, #0x1052
00000000000391f4	mov	w4, #-0x1
00000000000391f8	mov	x5, #0x0
00000000000391fc	bl	0x55c00 ; symbol stub for: _mmap
0000000000039200	cmp	x0, x19
0000000000039204	b.eq	0x3924c
0000000000039208	bl	0x55a8c ; symbol stub for: ___error
000000000003920c	ldr	w21, [x0]
0000000000039210	cbz	w21, 0x3924c
0000000000039214	adr	x22, #0x23b72 ; literal pool for: "decommit"
0000000000039218	nop
000000000003921c	stp	x20, x21, [sp, #0x10]
0000000000039220	stp	x22, x19, [sp]
0000000000039224	adr	x0, #0x23b72 ; literal pool for: "%s error: start: %p, csize: 0x%x, err: %i\n"
0000000000039228	nop
000000000003922c	bl	__mi_warning_message
0000000000039230	mov	w8, #0x0
0000000000039234	mov	x0, x8
0000000000039238	ldp	x29, x30, [sp, #0x40]
000000000003923c	ldp	x20, x19, [sp, #0x30]
0000000000039240	ldp	x22, x21, [sp, #0x20]
0000000000039244	add	sp, sp, #0x50
0000000000039248	ret
000000000003924c	mov	w8, #0x1
0000000000039250	mov	x0, x8
0000000000039254	ldp	x29, x30, [sp, #0x40]
0000000000039258	ldp	x20, x19, [sp, #0x30]
000000000003925c	ldp	x22, x21, [sp, #0x20]
0000000000039260	add	sp, sp, #0x50
0000000000039264	ret
__mi_mem_free:
0000000000039268	stp	x26, x25, [sp, #-0x50]!
000000000003926c	stp	x24, x23, [sp, #0x10]
0000000000039270	stp	x22, x21, [sp, #0x20]
0000000000039274	stp	x20, x19, [sp, #0x30]
0000000000039278	stp	x29, x30, [sp, #0x40]
000000000003927c	add	x29, sp, #0x40
0000000000039280	cbz	x0, 0x393b4
0000000000039284	cbz	x1, 0x393b4
0000000000039288	mov	x19, x0
000000000003928c	nop
0000000000039290	ldr	x8, #0x40cf0
0000000000039294	add	x9, x1, x8
0000000000039298	sub	x9, x9, #0x1
000000000003929c	sub	x10, x8, #0x1
00000000000392a0	udiv	x11, x9, x8
00000000000392a4	mul	x11, x11, x8
00000000000392a8	neg	x12, x8
00000000000392ac	and	x9, x9, x12
00000000000392b0	tst	x8, x10
00000000000392b4	csel	x20, x11, x9, ne
00000000000392b8	tbnz	w2, #0x0, 0x393cc
00000000000392bc	mov	w8, #0x4000000
00000000000392c0	cmp	x20, x8
00000000000392c4	b.hi	0x393b4
00000000000392c8	lsr	x23, x2, #7
00000000000392cc	ubfx	x21, x2, #1, #6
00000000000392d0	mov	w8, #0x3fffff
00000000000392d4	add	x25, x20, x8
00000000000392d8	lsr	x22, x25, #22
00000000000392dc	adr	x24, #0x4b1ec
00000000000392e0	nop
00000000000392e4	add	x9, x24, x23, lsl #6
00000000000392e8	ldar	x8, [x9]
00000000000392ec	add	x9, x9, #0x8
00000000000392f0	ldar	x9, [x9]
00000000000392f4	add	x9, x9, x21, lsl #22
00000000000392f8	add	x10, x22, x21
00000000000392fc	cmp	x10, #0x40
0000000000039300	ccmp	x9, x19, #0x0, ls
0000000000039304	b.ne	0x393b4
0000000000039308	and	x9, x20, #0x3fffff
000000000003930c	cmp	x9, #0x0
0000000000039310	ccmp	w3, #0x0, #0x4, eq
0000000000039314	b.eq	0x39348
0000000000039318	add	x9, x24, x23, lsl #6
000000000003931c	add	x9, x9, #0x20
0000000000039320	mov	x10, #-0x1
0000000000039324	lsl	x10, x10, x22
0000000000039328	mvn	x10, x10
000000000003932c	lsl	x10, x10, x21
0000000000039330	cmp	x22, #0x0
0000000000039334	csel	x10, xzr, x10, eq
0000000000039338	ldaxr	x11, [x9]
000000000003933c	orr	x11, x11, x10
0000000000039340	stlxr	w12, x11, [x9]
0000000000039344	cbnz	w12, 0x39338
0000000000039348	cbz	w4, 0x3937c
000000000003934c	add	x9, x24, x23, lsl #6
0000000000039350	add	x9, x9, #0x28
0000000000039354	mov	x10, #-0x1
0000000000039358	lsl	x10, x10, x22
000000000003935c	mvn	x10, x10
0000000000039360	lsl	x10, x10, x21
0000000000039364	cmp	x22, #0x0
0000000000039368	csel	x10, xzr, x10, eq
000000000003936c	ldaxr	x11, [x9]
0000000000039370	orr	x11, x11, x10
0000000000039374	stlxr	w12, x11, [x9]
0000000000039378	cbnz	w12, 0x3936c
000000000003937c	tst	x8, #0x300
0000000000039380	b.eq	0x393f0
0000000000039384	add	x8, x24, x23, lsl #6
0000000000039388	add	x8, x8, #0x10
000000000003938c	mov	x9, #-0x1
0000000000039390	lsl	x10, x9, x22
0000000000039394	mvn	x10, x10
0000000000039398	lsl	x10, x10, x21
000000000003939c	cmp	x22, #0x0
00000000000393a0	csinv	x9, x9, x10, eq
00000000000393a4	ldaxr	x10, [x8]
00000000000393a8	and	x10, x10, x9
00000000000393ac	stlxr	w11, x10, [x8]
00000000000393b0	cbnz	w11, 0x393a4
00000000000393b4	ldp	x29, x30, [sp, #0x40]
00000000000393b8	ldp	x20, x19, [sp, #0x30]
00000000000393bc	ldp	x22, x21, [sp, #0x20]
00000000000393c0	ldp	x24, x23, [sp, #0x10]
00000000000393c4	ldp	x26, x25, [sp], #0x50
00000000000393c8	ret
00000000000393cc	lsr	x2, x2, #1
00000000000393d0	mov	x0, x19
00000000000393d4	mov	x1, x20
00000000000393d8	ldp	x29, x30, [sp, #0x40]
00000000000393dc	ldp	x20, x19, [sp, #0x30]
00000000000393e0	ldp	x22, x21, [sp, #0x20]
00000000000393e4	ldp	x24, x23, [sp, #0x10]
00000000000393e8	ldp	x26, x25, [sp], #0x50
00000000000393ec	b	__mi_arena_free
00000000000393f0	mov	w0, #0xc
00000000000393f4	bl	_mi_option_get
00000000000393f8	cbz	x0, 0x39384
00000000000393fc	mov	w0, #0x3
0000000000039400	bl	_mi_option_get
0000000000039404	cbnz	x0, 0x39414
0000000000039408	mov	w0, #0x5
000000000003940c	bl	_mi_option_get
0000000000039410	cbz	x0, 0x39384
0000000000039414	add	x8, x24, x23, lsl #6
0000000000039418	add	x8, x8, #0x28
000000000003941c	mov	x9, #-0x1
0000000000039420	lsl	x9, x9, x22
0000000000039424	mvn	x9, x9
0000000000039428	lsl	x9, x9, x21
000000000003942c	cmp	x22, #0x0
0000000000039430	csel	x9, xzr, x9, eq
0000000000039434	ldaxr	x10, [x8]
0000000000039438	orr	x11, x10, x9
000000000003943c	stlxr	w12, x11, [x8]
0000000000039440	cbnz	w12, 0x39434
0000000000039444	bics	xzr, x9, x10
0000000000039448	b.eq	0x39384
000000000003944c	adr	x8, #0x5b1f4
0000000000039450	nop
0000000000039454	ldar	x9, [x8]
0000000000039458	cbz	x9, 0x39468
000000000003945c	wfe
0000000000039460	ldar	x9, [x8]
0000000000039464	cbnz	x9, 0x3945c
0000000000039468	and	x1, x25, #0xffffffffffc00000
000000000003946c	mov	x0, x19
0000000000039470	bl	__mi_os_reset
0000000000039474	add	x8, x24, x23, lsl #6
0000000000039478	add	x8, x8, #0x10
000000000003947c	mov	w9, #0xfc00000
0000000000039480	cmp	x20, x9
0000000000039484	b.ls	0x3938c
0000000000039488	mov	x9, #0x0
000000000003948c	b	0x393a4
__mi_os_reset:
0000000000039490	sub	sp, sp, #0x50
0000000000039494	stp	x22, x21, [sp, #0x20]
0000000000039498	stp	x20, x19, [sp, #0x30]
000000000003949c	stp	x29, x30, [sp, #0x40]
00000000000394a0	add	x29, sp, #0x40
00000000000394a4	mov	x20, x1
00000000000394a8	mov	x21, x0
00000000000394ac	mov	w0, #0x5
00000000000394b0	bl	_mi_option_get
00000000000394b4	cbz	x0, 0x394e4
00000000000394b8	add	x4, sp, #0x1f
00000000000394bc	mov	x0, x21
00000000000394c0	mov	x1, x20
00000000000394c4	mov	w2, #0x0
00000000000394c8	mov	w3, #0x1
00000000000394cc	bl	_mi_os_commitx
00000000000394d0	ldp	x29, x30, [sp, #0x40]
00000000000394d4	ldp	x20, x19, [sp, #0x30]
00000000000394d8	ldp	x22, x21, [sp, #0x20]
00000000000394dc	add	sp, sp, #0x50
00000000000394e0	ret
00000000000394e4	cbz	x21, 0x394d0
00000000000394e8	cbz	x20, 0x394d0
00000000000394ec	nop
00000000000394f0	ldr	x8, #0x40a90
00000000000394f4	add	x9, x21, x8
00000000000394f8	sub	x9, x9, #0x1
00000000000394fc	sub	x10, x8, #0x1
0000000000039500	tst	x8, x10
0000000000039504	b.ne	0x39528
0000000000039508	neg	x8, x8
000000000003950c	and	x19, x9, x8
0000000000039510	add	x9, x21, x20
0000000000039514	and	x8, x8, x9
0000000000039518	sub	x20, x8, x19
000000000003951c	cmp	x20, #0x1
0000000000039520	b.ge	0x39548
0000000000039524	b	0x394d0
0000000000039528	udiv	x9, x9, x8
000000000003952c	mul	x19, x9, x8
0000000000039530	add	x9, x21, x20
0000000000039534	udiv	x9, x9, x8
0000000000039538	mul	x8, x9, x8
000000000003953c	sub	x20, x8, x19
0000000000039540	cmp	x20, #0x1
0000000000039544	b.lt	0x394d0
0000000000039548	adr	x9, #0x5b650
000000000003954c	nop
0000000000039550	ldxr	x8, [x9]
0000000000039554	add	x8, x8, x20
0000000000039558	stxr	w10, x8, [x9]
000000000003955c	cbnz	w10, 0x39550
0000000000039560	nop
0000000000039564	ldr	x11, #0x5b62c
0000000000039568	adr	x9, #0x5b628
000000000003956c	nop
0000000000039570	b	0x39584
0000000000039574	clrex
0000000000039578	mov	w12, #0x0
000000000003957c	mov	x11, x10
0000000000039580	cbnz	w12, 0x395ac
0000000000039584	cmp	x11, x8
0000000000039588	b.ge	0x395ac
000000000003958c	ldxr	x10, [x9]
0000000000039590	cmp	x10, x11
0000000000039594	b.ne	0x39574
0000000000039598	stlxr	w11, x8, [x9]
000000000003959c	cbnz	w11, 0x39578
00000000000395a0	mov	w12, #0x1
00000000000395a4	mov	x11, x10
00000000000395a8	cbz	w12, 0x39584
00000000000395ac	cmp	x20, #0x1
00000000000395b0	b.lt	0x395d0
00000000000395b4	adr	x8, #0x5b5cc
00000000000395b8	nop
00000000000395bc	ldxr	x9, [x8]
00000000000395c0	add	x9, x9, x20
00000000000395c4	stxr	w10, x9, [x8]
00000000000395c8	cbnz	w10, 0x395bc
00000000000395cc	b	0x395ec
00000000000395d0	neg	x8, x20
00000000000395d4	adr	x9, #0x5b5b4
00000000000395d8	nop
00000000000395dc	ldxr	x10, [x9]
00000000000395e0	add	x10, x10, x8
00000000000395e4	stxr	w11, x10, [x9]
00000000000395e8	cbnz	w11, 0x395dc
00000000000395ec	nop
00000000000395f0	ldr	x21, #0x409a8
00000000000395f4	mov	x0, x19
00000000000395f8	mov	x1, x20
00000000000395fc	mov	x2, x21
0000000000039600	bl	0x55bac ; symbol stub for: _madvise
0000000000039604	cbz	w0, 0x394d0
0000000000039608	bl	0x55a8c ; symbol stub for: ___error
000000000003960c	ldr	w22, [x0]
0000000000039610	bl	0x55a8c ; symbol stub for: ___error
0000000000039614	cmp	w22, #0x23
0000000000039618	b.ne	0x39638
000000000003961c	str	wzr, [x0]
0000000000039620	mov	x0, x19
0000000000039624	mov	x1, x20
0000000000039628	mov	x2, x21
000000000003962c	bl	0x55bac ; symbol stub for: _madvise
0000000000039630	cbnz	w0, 0x39608
0000000000039634	b	0x394d0
0000000000039638	cmp	w21, #0x7
000000000003963c	b.ne	0x39670
0000000000039640	ldr	w8, [x0]
0000000000039644	cmp	w8, #0x16
0000000000039648	b.ne	0x39670
000000000003964c	adr	x8, #0x4094c
0000000000039650	nop
0000000000039654	mov	w9, #0x4
0000000000039658	stlr	x9, [x8]
000000000003965c	mov	x0, x19
0000000000039660	mov	x1, x20
0000000000039664	mov	w2, #0x4
0000000000039668	bl	0x55bac ; symbol stub for: _madvise
000000000003966c	cbz	w0, 0x394d0
0000000000039670	bl	0x55a8c ; symbol stub for: ___error
0000000000039674	ldr	w8, [x0]
0000000000039678	stp	x20, x8, [sp, #0x8]
000000000003967c	str	x19, [sp]
0000000000039680	adr	x0, #0x23741 ; literal pool for: "madvise reset error: start: %p, csize: 0x%x, errno: %i\n"
0000000000039684	nop
0000000000039688	bl	__mi_warning_message
000000000003968c	ldp	x29, x30, [sp, #0x40]
0000000000039690	ldp	x20, x19, [sp, #0x30]
0000000000039694	ldp	x22, x21, [sp, #0x20]
0000000000039698	add	sp, sp, #0x50
000000000003969c	ret
__mi_segment_page_free:
00000000000396a0	sub	sp, sp, #0x60
00000000000396a4	stp	x26, x25, [sp, #0x10]
00000000000396a8	stp	x24, x23, [sp, #0x20]
00000000000396ac	stp	x22, x21, [sp, #0x30]
00000000000396b0	stp	x20, x19, [sp, #0x40]
00000000000396b4	stp	x29, x30, [sp, #0x50]
00000000000396b8	add	x29, sp, #0x50
00000000000396bc	mov	x20, x2
00000000000396c0	mov	x21, x1
00000000000396c4	mov	x22, x0
00000000000396c8	and	x19, x0, #0xffffffffffc00000
00000000000396cc	mov	w0, #0xa
00000000000396d0	bl	_mi_option_get
00000000000396d4	cbz	x0, 0x397bc
00000000000396d8	mov	x0, sp
00000000000396dc	mov	x1, #0x0
00000000000396e0	bl	0x55b94 ; symbol stub for: _gettimeofday
00000000000396e4	ldr	x23, [x20, #0x28]
00000000000396e8	cbz	x23, 0x397b8
00000000000396ec	ldr	x8, [sp]
00000000000396f0	ldr	w9, [sp, #0x8]
00000000000396f4	mov	w10, #0x4dd3
00000000000396f8	movk	w10, #0x1062, lsl #16
00000000000396fc	smull	x9, w9, w10
0000000000039700	lsr	x10, x9, #63
0000000000039704	asr	x9, x9, #38
0000000000039708	add	w9, w9, w10
000000000003970c	mov	w10, #0x3e8
0000000000039710	madd	w24, w8, w10, w9
0000000000039714	mov	w25, #0x1
0000000000039718	b	0x39728
000000000003971c	str	wzr, [x26, #0x10]
0000000000039720	stp	xzr, xzr, [x26, #0x30]
0000000000039724	cbz	x23, 0x397b8
0000000000039728	mov	x26, x23
000000000003972c	ldr	w8, [x23, #0x10]
0000000000039730	cmp	w8, w24
0000000000039734	b.gt	0x39868
0000000000039738	ldr	x23, [x26, #0x38]
000000000003973c	mov	w0, #0xa
0000000000039740	bl	_mi_option_get
0000000000039744	cbz	x0, 0x3971c
0000000000039748	and	x9, x26, #0xffffffffffc00000
000000000003974c	ldrb	w8, [x9, #0x8]
0000000000039750	cbnz	w8, 0x3971c
0000000000039754	ldrb	w8, [x26, #0x1]
0000000000039758	and	w10, w8, #0x7
000000000003975c	cmp	w10, #0x4
0000000000039760	b.ne	0x3971c
0000000000039764	ldr	w10, [x9, #0x70]
0000000000039768	cmp	w10, #0x3
000000000003976c	b.ne	0x39784
0000000000039770	ldr	x1, [x9, #0x48]
0000000000039774	ldrb	w10, [x26]
0000000000039778	madd	x0, x1, x10, x9
000000000003977c	cbnz	x10, 0x397a4
0000000000039780	b	0x39798
0000000000039784	ldr	x10, [x9, #0x60]
0000000000039788	lsl	x1, x25, x10
000000000003978c	ldrb	w10, [x26]
0000000000039790	madd	x0, x1, x10, x9
0000000000039794	cbnz	x10, 0x397a4
0000000000039798	ldr	x9, [x9, #0x50]
000000000003979c	add	x0, x0, x9
00000000000397a0	sub	x1, x1, x9
00000000000397a4	orr	w8, w8, #0x2
00000000000397a8	strb	w8, [x26, #0x1]
00000000000397ac	cbz	x1, 0x3971c
00000000000397b0	bl	__mi_os_reset
00000000000397b4	b	0x3971c
00000000000397b8	stp	xzr, xzr, [x20, #0x20]
00000000000397bc	mov	x0, x19
00000000000397c0	mov	x1, x22
00000000000397c4	mov	x2, x20
00000000000397c8	bl	_mi_segment_page_clear
00000000000397cc	ldr	x8, [x19, #0x38]
00000000000397d0	cbz	x8, 0x39888
00000000000397d4	ldr	x9, [x19, #0x28]
00000000000397d8	cmp	x8, x9
00000000000397dc	b.ne	0x39804
00000000000397e0	mov	x0, x19
00000000000397e4	mov	x1, x20
00000000000397e8	ldp	x29, x30, [sp, #0x50]
00000000000397ec	ldp	x20, x19, [sp, #0x40]
00000000000397f0	ldp	x22, x21, [sp, #0x30]
00000000000397f4	ldp	x24, x23, [sp, #0x20]
00000000000397f8	ldp	x26, x25, [sp, #0x10]
00000000000397fc	add	sp, sp, #0x60
0000000000039800	b	_mi_segment_abandon
0000000000039804	add	x8, x8, #0x1
0000000000039808	ldr	x9, [x19, #0x40]
000000000003980c	cmp	x8, x9
0000000000039810	b.ne	0x3984c
0000000000039814	ldr	w8, [x19, #0x70]
0000000000039818	add	x9, x20, #0x10
000000000003981c	cmp	w8, #0x0
0000000000039820	csel	x10, xzr, x20, ne
0000000000039824	cmp	w8, #0x1
0000000000039828	csel	x8, x9, x10, eq
000000000003982c	str	xzr, [x19, #0x18]
0000000000039830	ldr	x9, [x8, #0x8]
0000000000039834	str	x9, [x19, #0x20]
0000000000039838	add	x10, x9, #0x18
000000000003983c	cmp	x9, #0x0
0000000000039840	csel	x9, x8, x10, eq
0000000000039844	str	x19, [x9]
0000000000039848	str	x19, [x8, #0x8]
000000000003984c	ldp	x29, x30, [sp, #0x50]
0000000000039850	ldp	x20, x19, [sp, #0x40]
0000000000039854	ldp	x22, x21, [sp, #0x30]
0000000000039858	ldp	x24, x23, [sp, #0x20]
000000000003985c	ldp	x26, x25, [sp, #0x10]
0000000000039860	add	sp, sp, #0x60
0000000000039864	ret
0000000000039868	str	x26, [x20, #0x28]
000000000003986c	str	xzr, [x26, #0x30]
0000000000039870	mov	x0, x19
0000000000039874	mov	x1, x22
0000000000039878	mov	x2, x20
000000000003987c	bl	_mi_segment_page_clear
0000000000039880	ldr	x8, [x19, #0x38]
0000000000039884	cbnz	x8, 0x397d4
0000000000039888	mov	x0, x19
000000000003988c	mov	x1, x21
0000000000039890	mov	x2, x20
0000000000039894	ldp	x29, x30, [sp, #0x50]
0000000000039898	ldp	x20, x19, [sp, #0x40]
000000000003989c	ldp	x22, x21, [sp, #0x30]
00000000000398a0	ldp	x24, x23, [sp, #0x20]
00000000000398a4	ldp	x26, x25, [sp, #0x10]
00000000000398a8	add	sp, sp, #0x60
00000000000398ac	b	_mi_segment_free
_mi_segment_page_clear:
00000000000398b0	sub	sp, sp, #0x40
00000000000398b4	stp	x22, x21, [sp, #0x10]
00000000000398b8	stp	x20, x19, [sp, #0x20]
00000000000398bc	stp	x29, x30, [sp, #0x30]
00000000000398c0	add	x29, sp, #0x30
00000000000398c4	mov	x21, x2
00000000000398c8	mov	x19, x1
00000000000398cc	mov	x20, x0
00000000000398d0	ldrh	w8, [x1, #0x2]
00000000000398d4	ldr	w9, [x1, #0x14]
00000000000398d8	ubfx	x10, x9, #26, #6
00000000000398dc	cbnz	w10, 0x39b2c
00000000000398e0	mov	x10, x9
00000000000398e4	mul	x1, x10, x8
00000000000398e8	ldr	x8, [x21, #0x70]
00000000000398ec	add	x0, x8, #0xa0
00000000000398f0	bl	__mi_stat_decrease
00000000000398f4	ldr	x8, [x21, #0x70]
00000000000398f8	add	x9, x8, #0x20
00000000000398fc	adr	x10, #0x5b204
0000000000039900	nop
0000000000039904	cmp	x9, x10
0000000000039908	adr	x10, #0x5b438
000000000003990c	nop
0000000000039910	ccmp	x9, x10, #0x2, hs
0000000000039914	b.lo	0x39940
0000000000039918	ldp	x10, x9, [x8, #0x30]
000000000003991c	sub	x9, x9, #0x1
0000000000039920	str	x9, [x8, #0x38]
0000000000039924	cmp	x9, x10
0000000000039928	b.le	0x39930
000000000003992c	str	x9, [x8, #0x30]
0000000000039930	ldr	x9, [x8, #0x28]
0000000000039934	add	x9, x9, #0x1
0000000000039938	str	x9, [x8, #0x28]
000000000003993c	b	0x399ac
0000000000039940	add	x10, x8, #0x38
0000000000039944	ldxr	x9, [x10]
0000000000039948	sub	x9, x9, #0x1
000000000003994c	stxr	w11, x9, [x10]
0000000000039950	cbnz	w11, 0x39944
0000000000039954	add	x10, x8, #0x30
0000000000039958	ldr	x12, [x8, #0x30]
000000000003995c	b	0x39970
0000000000039960	clrex
0000000000039964	mov	w13, #0x0
0000000000039968	mov	x12, x11
000000000003996c	cbnz	w13, 0x39998
0000000000039970	cmp	x12, x9
0000000000039974	b.ge	0x39998
0000000000039978	ldxr	x11, [x10]
000000000003997c	cmp	x11, x12
0000000000039980	b.ne	0x39960
0000000000039984	stlxr	w12, x9, [x10]
0000000000039988	cbnz	w12, 0x39964
000000000003998c	mov	w13, #0x1
0000000000039990	mov	x12, x11
0000000000039994	cbz	w13, 0x39970
0000000000039998	add	x8, x8, #0x28
000000000003999c	ldxr	x9, [x8]
00000000000399a0	add	x9, x9, #0x1
00000000000399a4	stxr	w10, x9, [x8]
00000000000399a8	cbnz	w10, 0x3999c
00000000000399ac	ldrb	w8, [x19, #0x1]
00000000000399b0	mov	w9, #0xf6
00000000000399b4	and	w8, w8, w9
00000000000399b8	strb	w8, [x19, #0x1]
00000000000399bc	ldr	w8, [x19, #0x14]
00000000000399c0	movi.16b	v0, #0x0
00000000000399c4	stur	q0, [x19, #0x16]
00000000000399c8	stur	q0, [x19, #0x6]
00000000000399cc	stur	q0, [x19, #0x26]
00000000000399d0	str	q0, [x19, #0x30]
00000000000399d4	str	w8, [x19, #0x14]
00000000000399d8	ldr	x8, [x20, #0x38]
00000000000399dc	sub	x8, x8, #0x1
00000000000399e0	str	x8, [x20, #0x38]
00000000000399e4	mov	w0, #0xa
00000000000399e8	bl	_mi_option_get
00000000000399ec	cbz	x0, 0x399f8
00000000000399f0	ldrb	w8, [x20, #0x8]
00000000000399f4	cbz	w8, 0x39a10
00000000000399f8	stur	wzr, [x19, #0x2]
00000000000399fc	ldp	x29, x30, [sp, #0x30]
0000000000039a00	ldp	x20, x19, [sp, #0x20]
0000000000039a04	ldp	x22, x21, [sp, #0x10]
0000000000039a08	add	sp, sp, #0x40
0000000000039a0c	ret
0000000000039a10	ldrb	w8, [x19, #0x1]
0000000000039a14	and	w8, w8, #0x7
0000000000039a18	cmp	w8, #0x4
0000000000039a1c	b.ne	0x399f8
0000000000039a20	mov	w0, #0xe
0000000000039a24	bl	_mi_option_get
0000000000039a28	cbz	x0, 0x39aa8
0000000000039a2c	mov	x0, sp
0000000000039a30	mov	x1, #0x0
0000000000039a34	bl	0x55b94 ; symbol stub for: _gettimeofday
0000000000039a38	mov	w8, #0x3e8
0000000000039a3c	ldr	w9, [sp]
0000000000039a40	ldrsw	x10, [sp, #0x8]
0000000000039a44	mov	w11, #0x4dd3
0000000000039a48	movk	w11, #0x1062, lsl #16
0000000000039a4c	mul	x10, x10, x11
0000000000039a50	lsr	x11, x10, #32
0000000000039a54	lsr	x10, x10, #63
0000000000039a58	add	w10, w10, w11, asr #6
0000000000039a5c	madd	w20, w9, w8, w10
0000000000039a60	mov	w0, #0xe
0000000000039a64	bl	_mi_option_get
0000000000039a68	add	w8, w0, w20
0000000000039a6c	str	w8, [x19, #0x10]
0000000000039a70	ldr	x8, [x21, #0x20]
0000000000039a74	stp	x8, xzr, [x19, #0x30]
0000000000039a78	add	x9, x8, #0x38
0000000000039a7c	add	x10, x21, #0x28
0000000000039a80	cmp	x8, #0x0
0000000000039a84	csel	x8, x10, x9, eq
0000000000039a88	str	x19, [x8]
0000000000039a8c	str	x19, [x21, #0x20]
0000000000039a90	stur	wzr, [x19, #0x2]
0000000000039a94	ldp	x29, x30, [sp, #0x30]
0000000000039a98	ldp	x20, x19, [sp, #0x20]
0000000000039a9c	ldp	x22, x21, [sp, #0x10]
0000000000039aa0	add	sp, sp, #0x40
0000000000039aa4	ret
0000000000039aa8	mov	w0, #0xa
0000000000039aac	bl	_mi_option_get
0000000000039ab0	cbz	x0, 0x399f8
0000000000039ab4	ldrb	w8, [x20, #0x8]
0000000000039ab8	cbnz	w8, 0x399f8
0000000000039abc	ldrb	w8, [x19, #0x1]
0000000000039ac0	and	w9, w8, #0x7
0000000000039ac4	cmp	w9, #0x4
0000000000039ac8	b.ne	0x399f8
0000000000039acc	ldr	w9, [x20, #0x70]
0000000000039ad0	cmp	w9, #0x3
0000000000039ad4	b.ne	0x39ae0
0000000000039ad8	ldr	x1, [x20, #0x48]
0000000000039adc	b	0x39aec
0000000000039ae0	ldr	x9, [x20, #0x60]
0000000000039ae4	mov	w10, #0x1
0000000000039ae8	lsl	x1, x10, x9
0000000000039aec	ldrb	w9, [x19]
0000000000039af0	madd	x0, x1, x9, x20
0000000000039af4	cbnz	x9, 0x39b04
0000000000039af8	ldr	x9, [x20, #0x50]
0000000000039afc	add	x0, x0, x9
0000000000039b00	sub	x1, x1, x9
0000000000039b04	orr	w8, w8, #0x2
0000000000039b08	strb	w8, [x19, #0x1]
0000000000039b0c	cbz	x1, 0x399f8
0000000000039b10	bl	__mi_os_reset
0000000000039b14	stur	wzr, [x19, #0x2]
0000000000039b18	ldp	x29, x30, [sp, #0x30]
0000000000039b1c	ldp	x20, x19, [sp, #0x20]
0000000000039b20	ldp	x22, x21, [sp, #0x10]
0000000000039b24	add	sp, sp, #0x40
0000000000039b28	ret
0000000000039b2c	and	x11, x19, #0xffffffffffc00000
0000000000039b30	ldr	w12, [x11, #0x70]
0000000000039b34	cmp	w12, #0x3
0000000000039b38	b.ne	0x39b44
0000000000039b3c	ldr	x10, [x11, #0x48]
0000000000039b40	b	0x39b50
0000000000039b44	ldr	x10, [x11, #0x60]
0000000000039b48	mov	w13, #0x1
0000000000039b4c	lsl	x10, x13, x10
0000000000039b50	ldrb	w13, [x19]
0000000000039b54	cbnz	w13, 0x398e4
0000000000039b58	ldr	x13, [x11, #0x50]
0000000000039b5c	sub	x10, x10, x13
0000000000039b60	cmp	w12, #0x1
0000000000039b64	b.hi	0x398e4
0000000000039b68	add	x11, x11, x13
0000000000039b6c	udiv	x12, x11, x9
0000000000039b70	neg	x11, x11
0000000000039b74	madd	x11, x12, x9, x11
0000000000039b78	add	x11, x9, x11
0000000000039b7c	cmp	x11, x9
0000000000039b80	csel	x9, x11, xzr, lo
0000000000039b84	sub	x10, x10, x9
0000000000039b88	b	0x398e4
_mi_segment_free:
0000000000039b8c	stp	x28, x27, [sp, #-0x60]!
0000000000039b90	stp	x26, x25, [sp, #0x10]
0000000000039b94	stp	x24, x23, [sp, #0x20]
0000000000039b98	stp	x22, x21, [sp, #0x30]
0000000000039b9c	stp	x20, x19, [sp, #0x40]
0000000000039ba0	stp	x29, x30, [sp, #0x50]
0000000000039ba4	add	x29, sp, #0x50
0000000000039ba8	mov	x20, x2
0000000000039bac	mov	x19, x0
0000000000039bb0	adr	x24, #0x5af50
0000000000039bb4	nop
0000000000039bb8	cbz	w1, 0x39be4
0000000000039bbc	mov	w0, #0xb
0000000000039bc0	bl	_mi_option_get
0000000000039bc4	ldrb	w8, [x19, #0x8]
0000000000039bc8	cbz	w8, 0x39c04
0000000000039bcc	ldr	w8, [x19, #0x70]
0000000000039bd0	cbz	w8, 0x39de4
0000000000039bd4	cmp	w8, #0x1
0000000000039bd8	b.ne	0x39e4c
0000000000039bdc	add	x8, x20, #0x10
0000000000039be0	b	0x39dec
0000000000039be4	ldrb	w8, [x19, #0x8]
0000000000039be8	cbz	w8, 0x39d38
0000000000039bec	ldr	w8, [x19, #0x70]
0000000000039bf0	cbz	w8, 0x39e00
0000000000039bf4	cmp	w8, #0x1
0000000000039bf8	b.ne	0x39e90
0000000000039bfc	add	x8, x20, #0x10
0000000000039c00	b	0x39e08
0000000000039c04	ldr	x8, [x19, #0x40]
0000000000039c08	cbz	x8, 0x39bcc
0000000000039c0c	cbz	x0, 0x3aa74
0000000000039c10	mov	x21, #0x0
0000000000039c14	add	x22, x19, #0x78
0000000000039c18	mov	w23, #0x1
0000000000039c1c	b	0x39c34
0000000000039c20	ldr	x8, [x19, #0x40]
0000000000039c24	add	x21, x21, #0x1
0000000000039c28	add	x22, x22, #0x40
0000000000039c2c	cmp	x21, x8
0000000000039c30	b.hs	0x39bcc
0000000000039c34	ldrb	w9, [x22, #0x1]
0000000000039c38	and	w9, w9, #0x7
0000000000039c3c	cmp	w9, #0x4
0000000000039c40	b.ne	0x39c24
0000000000039c44	ldp	x8, x9, [x22, #0x30]
0000000000039c48	cbz	x8, 0x39c54
0000000000039c4c	cbnz	x9, 0x39c58
0000000000039c50	b	0x39c64
0000000000039c54	cbz	x9, 0x39ce8
0000000000039c58	str	x8, [x9, #0x30]
0000000000039c5c	ldr	x8, [x22, #0x30]
0000000000039c60	cbz	x8, 0x39c68
0000000000039c64	str	x9, [x8, #0x38]
0000000000039c68	ldr	x9, [x20, #0x28]
0000000000039c6c	cmp	x22, x9
0000000000039c70	b.eq	0x39ccc
0000000000039c74	ldr	x9, [x20, #0x20]
0000000000039c78	cmp	x22, x9
0000000000039c7c	b.eq	0x39ce0
0000000000039c80	str	wzr, [x22, #0x10]
0000000000039c84	stp	xzr, xzr, [x22, #0x30]
0000000000039c88	mov	w0, #0xa
0000000000039c8c	bl	_mi_option_get
0000000000039c90	cbz	x0, 0x39c20
0000000000039c94	ldrb	w8, [x19, #0x8]
0000000000039c98	cbnz	w8, 0x39c20
0000000000039c9c	ldrb	w8, [x22, #0x1]
0000000000039ca0	and	w9, w8, #0x7
0000000000039ca4	cmp	w9, #0x4
0000000000039ca8	b.ne	0x39c20
0000000000039cac	ldr	w9, [x19, #0x70]
0000000000039cb0	cmp	w9, #0x3
0000000000039cb4	b.ne	0x39d04
0000000000039cb8	ldr	x1, [x19, #0x48]
0000000000039cbc	ldrb	w9, [x22]
0000000000039cc0	madd	x0, x1, x9, x19
0000000000039cc4	cbnz	x9, 0x39d24
0000000000039cc8	b	0x39d18
0000000000039ccc	ldr	x9, [x22, #0x38]
0000000000039cd0	str	x9, [x20, #0x28]
0000000000039cd4	ldr	x9, [x20, #0x20]
0000000000039cd8	cmp	x22, x9
0000000000039cdc	b.ne	0x39c80
0000000000039ce0	str	x8, [x20, #0x20]
0000000000039ce4	b	0x39c80
0000000000039ce8	ldr	x9, [x20, #0x20]
0000000000039cec	cmp	x22, x9
0000000000039cf0	b.eq	0x39c68
0000000000039cf4	ldr	x9, [x20, #0x28]
0000000000039cf8	cmp	x22, x9
0000000000039cfc	b.ne	0x39c88
0000000000039d00	b	0x39c68
0000000000039d04	ldr	x9, [x19, #0x60]
0000000000039d08	lsl	x1, x23, x9
0000000000039d0c	ldrb	w9, [x22]
0000000000039d10	madd	x0, x1, x9, x19
0000000000039d14	cbnz	x9, 0x39d24
0000000000039d18	ldr	x9, [x19, #0x50]
0000000000039d1c	add	x0, x0, x9
0000000000039d20	sub	x1, x1, x9
0000000000039d24	orr	w8, w8, #0x2
0000000000039d28	strb	w8, [x22, #0x1]
0000000000039d2c	cbz	x1, 0x39c20
0000000000039d30	bl	__mi_os_reset
0000000000039d34	b	0x39c20
0000000000039d38	ldr	x8, [x19, #0x40]
0000000000039d3c	cbz	x8, 0x39bec
0000000000039d40	add	x9, x19, #0x78
0000000000039d44	b	0x39d5c
0000000000039d48	str	wzr, [x9, #0x10]
0000000000039d4c	stp	xzr, xzr, [x9, #0x30]
0000000000039d50	add	x9, x9, #0x40
0000000000039d54	subs	x8, x8, #0x1
0000000000039d58	b.eq	0x39bec
0000000000039d5c	ldrb	w10, [x9, #0x1]
0000000000039d60	and	w10, w10, #0x7
0000000000039d64	cmp	w10, #0x4
0000000000039d68	b.ne	0x39d50
0000000000039d6c	ldp	x10, x11, [x9, #0x30]
0000000000039d70	cbz	x10, 0x39d7c
0000000000039d74	cbnz	x11, 0x39d80
0000000000039d78	b	0x39d8c
0000000000039d7c	cbz	x11, 0x39dc8
0000000000039d80	str	x10, [x11, #0x30]
0000000000039d84	ldr	x10, [x9, #0x30]
0000000000039d88	cbz	x10, 0x39d90
0000000000039d8c	str	x11, [x10, #0x38]
0000000000039d90	ldr	x11, [x20, #0x28]
0000000000039d94	cmp	x9, x11
0000000000039d98	b.eq	0x39dac
0000000000039d9c	ldr	x11, [x20, #0x20]
0000000000039da0	cmp	x9, x11
0000000000039da4	b.ne	0x39d48
0000000000039da8	b	0x39dc0
0000000000039dac	ldr	x11, [x9, #0x38]
0000000000039db0	str	x11, [x20, #0x28]
0000000000039db4	ldr	x11, [x20, #0x20]
0000000000039db8	cmp	x9, x11
0000000000039dbc	b.ne	0x39d48
0000000000039dc0	str	x10, [x20, #0x20]
0000000000039dc4	b	0x39d48
0000000000039dc8	ldr	x11, [x20, #0x20]
0000000000039dcc	cmp	x9, x11
0000000000039dd0	b.eq	0x39d90
0000000000039dd4	ldr	x11, [x20, #0x28]
0000000000039dd8	cmp	x9, x11
0000000000039ddc	b.ne	0x39d50
0000000000039de0	b	0x39d90
0000000000039de4	mov	x8, x20
0000000000039de8	cbz	x20, 0x39e4c
0000000000039dec	mov	x9, x19
0000000000039df0	ldp	x10, x11, [x9, #0x18]!
0000000000039df4	cbz	x10, 0x39e1c
0000000000039df8	cbnz	x11, 0x39e20
0000000000039dfc	b	0x39e2c
0000000000039e00	mov	x8, x20
0000000000039e04	cbz	x20, 0x39e90
0000000000039e08	mov	x9, x19
0000000000039e0c	ldp	x10, x11, [x9, #0x18]!
0000000000039e10	cbz	x10, 0x39e60
0000000000039e14	cbnz	x11, 0x39e64
0000000000039e18	b	0x39e70
0000000000039e1c	cbz	x11, 0x3ab18
0000000000039e20	str	x10, [x11, #0x18]
0000000000039e24	ldr	x10, [x9]
0000000000039e28	cbz	x10, 0x39e30
0000000000039e2c	str	x11, [x10, #0x20]
0000000000039e30	ldr	x11, [x8]
0000000000039e34	cmp	x11, x19
0000000000039e38	b.eq	0x3a9a0
0000000000039e3c	ldr	x10, [x8, #0x8]
0000000000039e40	cmp	x10, x19
0000000000039e44	b.eq	0x3a9b0
0000000000039e48	stp	xzr, xzr, [x9]
0000000000039e4c	ldr	x8, [x20, #0x70]
0000000000039e50	add	x0, x8, #0xa0
0000000000039e54	ldr	x1, [x19, #0x50]
0000000000039e58	bl	__mi_stat_decrease
0000000000039e5c	b	0x3a4a4
0000000000039e60	cbz	x11, 0x3ab28
0000000000039e64	str	x10, [x11, #0x18]
0000000000039e68	ldr	x10, [x9]
0000000000039e6c	cbz	x10, 0x39e74
0000000000039e70	str	x11, [x10, #0x20]
0000000000039e74	ldr	x11, [x8]
0000000000039e78	cmp	x11, x19
0000000000039e7c	b.eq	0x3a9bc
0000000000039e80	ldr	x10, [x8, #0x8]
0000000000039e84	cmp	x10, x19
0000000000039e88	b.eq	0x3a9cc
0000000000039e8c	stp	xzr, xzr, [x9]
0000000000039e90	ldr	x8, [x20, #0x70]
0000000000039e94	add	x0, x8, #0xa0
0000000000039e98	ldr	x1, [x19, #0x50]
0000000000039e9c	bl	__mi_stat_decrease
0000000000039ea0	ldr	x8, [x19, #0x48]
0000000000039ea4	cmp	x8, #0x400, lsl #12
0000000000039ea8	b.ne	0x3a4a4
0000000000039eac	mov	w0, #0x9
0000000000039eb0	bl	_mi_option_get
0000000000039eb4	mov	x21, x0
0000000000039eb8	ldr	x8, [x20, #0x58]
0000000000039ebc	cmp	x8, x0
0000000000039ec0	b.hs	0x39ed0
0000000000039ec4	ldr	x9, [x20, #0x40]
0000000000039ec8	cmp	x8, x9, lsr #3
0000000000039ecc	b.ls	0x3a9d8
0000000000039ed0	cmp	x8, x21
0000000000039ed4	b.ls	0x3a4a4
0000000000039ed8	adr	x25, #0x5ae68
0000000000039edc	nop
0000000000039ee0	mov	w26, #0x1039
0000000000039ee4	movi.16b	v16, #0x4
0000000000039ee8	movi.16b	v17, #0x2
0000000000039eec	b	0x39f20
0000000000039ef0	mov	w4, #0x0
0000000000039ef4	mov	w27, #0x1
0000000000039ef8	ldr	x2, [x22]
0000000000039efc	and	w3, w27, #0x1
0000000000039f00	mov	x0, x22
0000000000039f04	mov	x1, x23
0000000000039f08	bl	__mi_mem_free
0000000000039f0c	ldr	x8, [x20, #0x58]
0000000000039f10	movi.16b	v16, #0x4
0000000000039f14	movi.16b	v17, #0x2
0000000000039f18	cmp	x8, x21
0000000000039f1c	b.ls	0x3a4a4
0000000000039f20	ldr	x22, [x20, #0x68]
0000000000039f24	cbz	x22, 0x39f18
0000000000039f28	sub	x8, x8, #0x1
0000000000039f2c	str	x8, [x20, #0x58]
0000000000039f30	ldr	x8, [x22, #0x18]
0000000000039f34	str	x8, [x20, #0x68]
0000000000039f38	str	xzr, [x22, #0x18]
0000000000039f3c	ldr	x8, [x20, #0x70]
0000000000039f40	add	x9, x8, #0x1a0
0000000000039f44	cmp	x9, x24
0000000000039f48	ccmp	x9, x25, #0x2, hs
0000000000039f4c	b.lo	0x39f78
0000000000039f50	ldp	x10, x9, [x8, #0x1b0]
0000000000039f54	sub	x9, x9, #0x1
0000000000039f58	str	x9, [x8, #0x1b8]
0000000000039f5c	cmp	x9, x10
0000000000039f60	b.le	0x39f68
0000000000039f64	str	x9, [x8, #0x1b0]
0000000000039f68	ldr	x9, [x8, #0x1a8]
0000000000039f6c	add	x9, x9, #0x1
0000000000039f70	str	x9, [x8, #0x1a8]
0000000000039f74	b	0x39fe4
0000000000039f78	add	x10, x8, #0x1b8
0000000000039f7c	ldxr	x9, [x10]
0000000000039f80	sub	x9, x9, #0x1
0000000000039f84	stxr	w11, x9, [x10]
0000000000039f88	cbnz	w11, 0x39f7c
0000000000039f8c	add	x10, x8, #0x1b0
0000000000039f90	ldr	x12, [x8, #0x1b0]
0000000000039f94	b	0x39fa8
0000000000039f98	clrex
0000000000039f9c	mov	w13, #0x0
0000000000039fa0	mov	x12, x11
0000000000039fa4	cbnz	w13, 0x39fd0
0000000000039fa8	cmp	x12, x9
0000000000039fac	b.ge	0x39fd0
0000000000039fb0	ldxr	x11, [x10]
0000000000039fb4	cmp	x11, x12
0000000000039fb8	b.ne	0x39f98
0000000000039fbc	stlxr	w12, x9, [x10]
0000000000039fc0	cbnz	w12, 0x39f9c
0000000000039fc4	mov	w13, #0x1
0000000000039fc8	mov	x12, x11
0000000000039fcc	cbz	w13, 0x39fa8
0000000000039fd0	add	x8, x8, #0x1a8
0000000000039fd4	ldxr	x9, [x8]
0000000000039fd8	add	x9, x9, #0x1
0000000000039fdc	stxr	w10, x9, [x8]
0000000000039fe0	cbnz	w10, 0x39fd4
0000000000039fe4	ldr	x23, [x22, #0x48]
0000000000039fe8	add	x8, x22, #0x68
0000000000039fec	stlr	xzr, [x8]
0000000000039ff0	ldr	x8, [x20, #0x70]
0000000000039ff4	cmp	x8, x24
0000000000039ff8	cset	w9, hs
0000000000039ffc	add	x10, x24, #0x240
000000000003a000	cmp	x8, x10
000000000003a004	cset	w10, lo
000000000003a008	and	w9, w9, w10
000000000003a00c	add	x11, x8, #0x18
000000000003a010	cmp	x23, #0x0
000000000003a014	b.le	0x3a08c
000000000003a018	cbz	w9, 0x3a0fc
000000000003a01c	ldxr	x9, [x11]
000000000003a020	sub	x9, x9, #0x1
000000000003a024	stxr	w10, x9, [x11]
000000000003a028	cbnz	w10, 0x3a01c
000000000003a02c	add	x10, x8, #0x10
000000000003a030	ldr	x12, [x8, #0x10]
000000000003a034	b	0x3a048
000000000003a038	clrex
000000000003a03c	mov	w13, #0x0
000000000003a040	mov	x12, x11
000000000003a044	cbnz	w13, 0x3a070
000000000003a048	cmp	x12, x9
000000000003a04c	b.ge	0x3a070
000000000003a050	ldxr	x11, [x10]
000000000003a054	cmp	x11, x12
000000000003a058	b.ne	0x3a038
000000000003a05c	stlxr	w12, x9, [x10]
000000000003a060	cbnz	w12, 0x3a03c
000000000003a064	mov	w13, #0x1
000000000003a068	mov	x12, x11
000000000003a06c	cbz	w13, 0x3a048
000000000003a070	add	x8, x8, #0x8
000000000003a074	ldxr	x9, [x8]
000000000003a078	add	x9, x9, #0x1
000000000003a07c	stxr	w10, x9, [x8]
000000000003a080	cbnz	w10, 0x3a074
000000000003a084	mov	x9, #-0x1
000000000003a088	b	0x3a148
000000000003a08c	cbz	w9, 0x3a120
000000000003a090	ldxr	x9, [x11]
000000000003a094	add	x10, x9, #0x1
000000000003a098	stxr	w12, x10, [x11]
000000000003a09c	cbnz	w12, 0x3a090
000000000003a0a0	add	x11, x8, #0x10
000000000003a0a4	ldr	x13, [x8, #0x10]
000000000003a0a8	b	0x3a0bc
000000000003a0ac	clrex
000000000003a0b0	mov	w14, #0x0
000000000003a0b4	mov	x13, x12
000000000003a0b8	cbnz	w14, 0x3a0e4
000000000003a0bc	cmp	x13, x9
000000000003a0c0	b.gt	0x3a0e4
000000000003a0c4	ldxr	x12, [x11]
000000000003a0c8	cmp	x12, x13
000000000003a0cc	b.ne	0x3a0ac
000000000003a0d0	stlxr	w13, x10, [x11]
000000000003a0d4	cbnz	w13, 0x3a0b0
000000000003a0d8	mov	w14, #0x1
000000000003a0dc	mov	x13, x12
000000000003a0e0	cbz	w14, 0x3a0bc
000000000003a0e4	ldxr	x9, [x8]
000000000003a0e8	add	x9, x9, #0x1
000000000003a0ec	stxr	w10, x9, [x8]
000000000003a0f0	cbnz	w10, 0x3a0e4
000000000003a0f4	mov	w9, #0x1
000000000003a0f8	b	0x3a148
000000000003a0fc	ldp	x10, x9, [x8, #0x10]
000000000003a100	sub	x9, x9, #0x1
000000000003a104	str	x9, [x8, #0x18]
000000000003a108	cmp	x9, x10
000000000003a10c	b.le	0x3a114
000000000003a110	str	x9, [x8, #0x10]
000000000003a114	add	x8, x8, #0x8
000000000003a118	mov	x9, #-0x1
000000000003a11c	b	0x3a13c
000000000003a120	ldp	x11, x10, [x8, #0x10]
000000000003a124	add	x9, x10, #0x1
000000000003a128	str	x9, [x8, #0x18]
000000000003a12c	cmp	x10, x11
000000000003a130	b.lt	0x3a138
000000000003a134	str	x9, [x8, #0x10]
000000000003a138	mov	w9, #0x1
000000000003a13c	ldr	x10, [x8]
000000000003a140	add	x10, x10, #0x1
000000000003a144	str	x10, [x8]
000000000003a148	ldp	x8, x10, [x20, #0x38]
000000000003a14c	add	x8, x8, x9
000000000003a150	str	x8, [x20, #0x38]
000000000003a154	cmp	x8, x10
000000000003a158	b.hi	0x3a17c
000000000003a15c	ldp	x8, x9, [x20, #0x48]
000000000003a160	sub	x8, x8, x23
000000000003a164	str	x8, [x20, #0x48]
000000000003a168	cmp	x8, x9
000000000003a16c	b.hi	0x3a194
000000000003a170	ldr	x8, [x22, #0x40]
000000000003a174	cbnz	x8, 0x3a1a0
000000000003a178	b	0x39ef0
000000000003a17c	str	x8, [x20, #0x40]
000000000003a180	ldp	x8, x9, [x20, #0x48]
000000000003a184	sub	x8, x8, x23
000000000003a188	str	x8, [x20, #0x48]
000000000003a18c	cmp	x8, x9
000000000003a190	b.ls	0x3a170
000000000003a194	str	x8, [x20, #0x50]
000000000003a198	ldr	x8, [x22, #0x40]
000000000003a19c	cbz	x8, 0x39ef0
000000000003a1a0	cmp	x8, #0x1f
000000000003a1a4	b.hi	0x3a1b8
000000000003a1a8	mov	w10, #0x0
000000000003a1ac	mov	x9, #0x0
000000000003a1b0	mov	w27, #0x1
000000000003a1b4	b	0x3a454
000000000003a1b8	and	x9, x8, #0xffffffffffffffe0
000000000003a1bc	add	x10, x22, x26
000000000003a1c0	movi.16b	v2, #0x1
000000000003a1c4	movi.16b	v0, #0x0
000000000003a1c8	mov	x11, x9
000000000003a1cc	movi.16b	v1, #0x0
000000000003a1d0	movi.16b	v3, #0x1
000000000003a1d4	sub	x12, x10, #0x7c0
000000000003a1d8	prfm	pldl1keep, [x12]
000000000003a1dc	sub	x12, x10, #0x780
000000000003a1e0	prfm	pldl1keep, [x12]
000000000003a1e4	sub	x12, x10, #0xfc0
000000000003a1e8	ldr	b4, [x12]
000000000003a1ec	sub	x12, x10, #0x740
000000000003a1f0	prfm	pldl1keep, [x12]
000000000003a1f4	sub	x12, x10, #0xf80
000000000003a1f8	ld1.b	{ v4 }[1], [x12]
000000000003a1fc	sub	x12, x10, #0x700
000000000003a200	prfm	pldl1keep, [x12]
000000000003a204	sub	x12, x10, #0xf40
000000000003a208	ld1.b	{ v4 }[2], [x12]
000000000003a20c	sub	x12, x10, #0x6c0
000000000003a210	prfm	pldl1keep, [x12]
000000000003a214	sub	x12, x10, #0xf00
000000000003a218	ld1.b	{ v4 }[3], [x12]
000000000003a21c	sub	x12, x10, #0x680
000000000003a220	prfm	pldl1keep, [x12]
000000000003a224	sub	x12, x10, #0xec0
000000000003a228	ld1.b	{ v4 }[4], [x12]
000000000003a22c	sub	x12, x10, #0x640
000000000003a230	prfm	pldl1keep, [x12]
000000000003a234	sub	x12, x10, #0xe80
000000000003a238	ld1.b	{ v4 }[5], [x12]
000000000003a23c	sub	x12, x10, #0x600
000000000003a240	prfm	pldl1keep, [x12]
000000000003a244	sub	x12, x10, #0xe40
000000000003a248	ld1.b	{ v4 }[6], [x12]
000000000003a24c	sub	x12, x10, #0x5c0
000000000003a250	prfm	pldl1keep, [x12]
000000000003a254	sub	x12, x10, #0xe00
000000000003a258	ld1.b	{ v4 }[7], [x12]
000000000003a25c	sub	x12, x10, #0x580
000000000003a260	prfm	pldl1keep, [x12]
000000000003a264	sub	x12, x10, #0xdc0
000000000003a268	ld1.b	{ v4 }[8], [x12]
000000000003a26c	sub	x12, x10, #0x540
000000000003a270	prfm	pldl1keep, [x12]
000000000003a274	sub	x12, x10, #0xd80
000000000003a278	ld1.b	{ v4 }[9], [x12]
000000000003a27c	sub	x12, x10, #0x500
000000000003a280	prfm	pldl1keep, [x12]
000000000003a284	sub	x12, x10, #0xd40
000000000003a288	ld1.b	{ v4 }[10], [x12]
000000000003a28c	sub	x12, x10, #0x4c0
000000000003a290	prfm	pldl1keep, [x12]
000000000003a294	sub	x12, x10, #0xd00
000000000003a298	ld1.b	{ v4 }[11], [x12]
000000000003a29c	sub	x12, x10, #0x480
000000000003a2a0	prfm	pldl1keep, [x12]
000000000003a2a4	sub	x12, x10, #0xcc0
000000000003a2a8	ld1.b	{ v4 }[12], [x12]
000000000003a2ac	sub	x12, x10, #0x440
000000000003a2b0	prfm	pldl1keep, [x12]
000000000003a2b4	sub	x12, x10, #0xc80
000000000003a2b8	ld1.b	{ v4 }[13], [x12]
000000000003a2bc	sub	x12, x10, #0x400
000000000003a2c0	prfm	pldl1keep, [x12]
000000000003a2c4	sub	x12, x10, #0xc40
000000000003a2c8	ld1.b	{ v4 }[14], [x12]
000000000003a2cc	sub	x12, x10, #0xc00
000000000003a2d0	ld1.b	{ v4 }[15], [x12]
000000000003a2d4	sub	x12, x10, #0x3c0
000000000003a2d8	prfm	pldl1keep, [x12]
000000000003a2dc	sub	x12, x10, #0x380
000000000003a2e0	prfm	pldl1keep, [x12]
000000000003a2e4	sub	x12, x10, #0xbc0
000000000003a2e8	ldr	b5, [x12]
000000000003a2ec	sub	x12, x10, #0x340
000000000003a2f0	prfm	pldl1keep, [x12]
000000000003a2f4	sub	x12, x10, #0xb80
000000000003a2f8	ld1.b	{ v5 }[1], [x12]
000000000003a2fc	sub	x12, x10, #0x300
000000000003a300	prfm	pldl1keep, [x12]
000000000003a304	sub	x12, x10, #0xb40
000000000003a308	ld1.b	{ v5 }[2], [x12]
000000000003a30c	sub	x12, x10, #0x2c0
000000000003a310	prfm	pldl1keep, [x12]
000000000003a314	sub	x12, x10, #0xb00
000000000003a318	ld1.b	{ v5 }[3], [x12]
000000000003a31c	sub	x12, x10, #0x280
000000000003a320	prfm	pldl1keep, [x12]
000000000003a324	sub	x12, x10, #0xac0
000000000003a328	ld1.b	{ v5 }[4], [x12]
000000000003a32c	sub	x12, x10, #0x240
000000000003a330	prfm	pldl1keep, [x12]
000000000003a334	sub	x12, x10, #0xa80
000000000003a338	ld1.b	{ v5 }[5], [x12]
000000000003a33c	sub	x12, x10, #0x200
000000000003a340	prfm	pldl1keep, [x12]
000000000003a344	sub	x12, x10, #0xa40
000000000003a348	ld1.b	{ v5 }[6], [x12]
000000000003a34c	sub	x12, x10, #0x1c0
000000000003a350	prfm	pldl1keep, [x12]
000000000003a354	sub	x12, x10, #0xa00
000000000003a358	ld1.b	{ v5 }[7], [x12]
000000000003a35c	sub	x12, x10, #0x180
000000000003a360	prfm	pldl1keep, [x12]
000000000003a364	sub	x12, x10, #0x9c0
000000000003a368	ld1.b	{ v5 }[8], [x12]
000000000003a36c	sub	x12, x10, #0x140
000000000003a370	prfm	pldl1keep, [x12]
000000000003a374	sub	x12, x10, #0x980
000000000003a378	ld1.b	{ v5 }[9], [x12]
000000000003a37c	sub	x12, x10, #0x940
000000000003a380	prfum	pldl1keep, [x10, #-0x100]
000000000003a384	ld1.b	{ v5 }[10], [x12]
000000000003a388	sub	x12, x10, #0x900
000000000003a38c	prfum	pldl1keep, [x10, #-0xc0]
000000000003a390	ld1.b	{ v5 }[11], [x12]
000000000003a394	sub	x12, x10, #0x8c0
000000000003a398	prfum	pldl1keep, [x10, #-0x80]
000000000003a39c	ld1.b	{ v5 }[12], [x12]
000000000003a3a0	sub	x12, x10, #0x880
000000000003a3a4	prfum	pldl1keep, [x10, #-0x40]
000000000003a3a8	ld1.b	{ v5 }[13], [x12]
000000000003a3ac	sub	x12, x10, #0x840
000000000003a3b0	prfm	pldl1keep, [x10]
000000000003a3b4	ld1.b	{ v5 }[14], [x12]
000000000003a3b8	sub	x12, x10, #0x800
000000000003a3bc	ld1.b	{ v5 }[15], [x12]
000000000003a3c0	and.16b	v6, v4, v16
000000000003a3c4	and.16b	v7, v5, v16
000000000003a3c8	cmeq.16b	v6, v6, #0
000000000003a3cc	cmeq.16b	v7, v7, #0
000000000003a3d0	bic.16b	v2, v2, v6
000000000003a3d4	and.16b	v4, v4, v17
000000000003a3d8	and.16b	v5, v5, v17
000000000003a3dc	bic.16b	v3, v3, v7
000000000003a3e0	cmeq.16b	v4, v4, #0
000000000003a3e4	cmeq.16b	v5, v5, #0
000000000003a3e8	orn.16b	v0, v0, v4
000000000003a3ec	orn.16b	v1, v1, v5
000000000003a3f0	add	x10, x10, #0x800
000000000003a3f4	subs	x11, x11, #0x20
000000000003a3f8	b.ne	0x3a1d4
000000000003a3fc	and.16b	v2, v3, v2
000000000003a400	dup.2d	v3, v2[1]
000000000003a404	and.16b	v2, v2, v3
000000000003a408	dup.4s	v3, v2[1]
000000000003a40c	and.16b	v2, v2, v3
000000000003a410	dup.8h	v3, v2[1]
000000000003a414	and.16b	v2, v2, v3
000000000003a418	dup.16b	v3, v2[1]
000000000003a41c	and.16b	v2, v2, v3
000000000003a420	umov.b	w27, v2[0]
000000000003a424	orr.16b	v0, v1, v0
000000000003a428	dup.2d	v1, v0[1]
000000000003a42c	orr.16b	v0, v0, v1
000000000003a430	dup.4s	v1, v0[1]
000000000003a434	orr.16b	v0, v0, v1
000000000003a438	dup.8h	v1, v0[1]
000000000003a43c	orr.16b	v0, v0, v1
000000000003a440	dup.16b	v1, v0[1]
000000000003a444	orr.16b	v0, v0, v1
000000000003a448	umov.b	w10, v0[0]
000000000003a44c	cmp	x8, x9
000000000003a450	b.eq	0x3a47c
000000000003a454	sub	x8, x8, x9
000000000003a458	add	x9, x22, x9, lsl #6
000000000003a45c	add	x9, x9, #0x79
000000000003a460	ldrb	w11, [x9], #0x40
000000000003a464	and	w12, w11, #0x4
000000000003a468	and	w27, w27, w12, lsr #2
000000000003a46c	and	w11, w11, #0x2
000000000003a470	orr	w10, w10, w11, lsr #1
000000000003a474	subs	x8, x8, #0x1
000000000003a478	b.ne	0x3a460
000000000003a47c	tbz	w10, #0x0, 0x3a49c
000000000003a480	mov	w0, #0x5
000000000003a484	bl	_mi_option_get
000000000003a488	cmp	x0, #0x0
000000000003a48c	cset	w8, eq
000000000003a490	and	w27, w27, w8
000000000003a494	mov	w4, #0x1
000000000003a498	b	0x39ef8
000000000003a49c	mov	w4, #0x0
000000000003a4a0	b	0x39ef8
000000000003a4a4	ldr	x21, [x19, #0x48]
000000000003a4a8	add	x8, x19, #0x68
000000000003a4ac	stlr	xzr, [x8]
000000000003a4b0	ldr	x8, [x20, #0x70]
000000000003a4b4	cmp	x8, x24
000000000003a4b8	cset	w9, hs
000000000003a4bc	add	x10, x24, #0x240
000000000003a4c0	cmp	x8, x10
000000000003a4c4	cset	w10, lo
000000000003a4c8	and	w9, w9, w10
000000000003a4cc	add	x11, x8, #0x18
000000000003a4d0	cmp	x21, #0x0
000000000003a4d4	b.le	0x3a54c
000000000003a4d8	cbz	w9, 0x3a5bc
000000000003a4dc	ldxr	x9, [x11]
000000000003a4e0	sub	x9, x9, #0x1
000000000003a4e4	stxr	w10, x9, [x11]
000000000003a4e8	cbnz	w10, 0x3a4dc
000000000003a4ec	add	x10, x8, #0x10
000000000003a4f0	ldr	x12, [x8, #0x10]
000000000003a4f4	b	0x3a508
000000000003a4f8	clrex
000000000003a4fc	mov	w13, #0x0
000000000003a500	mov	x12, x11
000000000003a504	cbnz	w13, 0x3a530
000000000003a508	cmp	x12, x9
000000000003a50c	b.ge	0x3a530
000000000003a510	ldxr	x11, [x10]
000000000003a514	cmp	x11, x12
000000000003a518	b.ne	0x3a4f8
000000000003a51c	stlxr	w12, x9, [x10]
000000000003a520	cbnz	w12, 0x3a4fc
000000000003a524	mov	w13, #0x1
000000000003a528	mov	x12, x11
000000000003a52c	cbz	w13, 0x3a508
000000000003a530	add	x8, x8, #0x8
000000000003a534	ldxr	x9, [x8]
000000000003a538	add	x9, x9, #0x1
000000000003a53c	stxr	w10, x9, [x8]
000000000003a540	cbnz	w10, 0x3a534
000000000003a544	mov	x9, #-0x1
000000000003a548	b	0x3a608
000000000003a54c	cbz	w9, 0x3a5e0
000000000003a550	ldxr	x9, [x11]
000000000003a554	add	x10, x9, #0x1
000000000003a558	stxr	w12, x10, [x11]
000000000003a55c	cbnz	w12, 0x3a550
000000000003a560	add	x11, x8, #0x10
000000000003a564	ldr	x13, [x8, #0x10]
000000000003a568	b	0x3a57c
000000000003a56c	clrex
000000000003a570	mov	w14, #0x0
000000000003a574	mov	x13, x12
000000000003a578	cbnz	w14, 0x3a5a4
000000000003a57c	cmp	x13, x9
000000000003a580	b.gt	0x3a5a4
000000000003a584	ldxr	x12, [x11]
000000000003a588	cmp	x12, x13
000000000003a58c	b.ne	0x3a56c
000000000003a590	stlxr	w13, x10, [x11]
000000000003a594	cbnz	w13, 0x3a570
000000000003a598	mov	w14, #0x1
000000000003a59c	mov	x13, x12
000000000003a5a0	cbz	w14, 0x3a57c
000000000003a5a4	mov	w9, #0x1
000000000003a5a8	ldxr	x10, [x8]
000000000003a5ac	add	x10, x10, #0x1
000000000003a5b0	stxr	w11, x10, [x8]
000000000003a5b4	cbnz	w11, 0x3a5a8
000000000003a5b8	b	0x3a608
000000000003a5bc	ldp	x10, x9, [x8, #0x10]
000000000003a5c0	sub	x9, x9, #0x1
000000000003a5c4	str	x9, [x8, #0x18]
000000000003a5c8	cmp	x9, x10
000000000003a5cc	b.le	0x3a5d4
000000000003a5d0	str	x9, [x8, #0x10]
000000000003a5d4	add	x8, x8, #0x8
000000000003a5d8	mov	x9, #-0x1
000000000003a5dc	b	0x3a5fc
000000000003a5e0	ldp	x11, x10, [x8, #0x10]
000000000003a5e4	add	x9, x10, #0x1
000000000003a5e8	str	x9, [x8, #0x18]
000000000003a5ec	cmp	x10, x11
000000000003a5f0	b.lt	0x3a5f8
000000000003a5f4	str	x9, [x8, #0x10]
000000000003a5f8	mov	w9, #0x1
000000000003a5fc	ldr	x10, [x8]
000000000003a600	add	x10, x10, #0x1
000000000003a604	str	x10, [x8]
000000000003a608	ldp	x8, x10, [x20, #0x38]
000000000003a60c	add	x8, x8, x9
000000000003a610	str	x8, [x20, #0x38]
000000000003a614	cmp	x8, x10
000000000003a618	b.hi	0x3a650
000000000003a61c	ldp	x8, x9, [x20, #0x48]
000000000003a620	sub	x8, x8, x21
000000000003a624	str	x8, [x20, #0x48]
000000000003a628	cmp	x8, x9
000000000003a62c	b.hi	0x3a668
000000000003a630	ldr	x8, [x19, #0x40]
000000000003a634	cbz	x8, 0x3a674
000000000003a638	cmp	x8, #0x1f
000000000003a63c	b.hi	0x3a680
000000000003a640	mov	w10, #0x0
000000000003a644	mov	x9, #0x0
000000000003a648	mov	w20, #0x1
000000000003a64c	b	0x3a928
000000000003a650	str	x8, [x20, #0x40]
000000000003a654	ldp	x8, x9, [x20, #0x48]
000000000003a658	sub	x8, x8, x21
000000000003a65c	str	x8, [x20, #0x48]
000000000003a660	cmp	x8, x9
000000000003a664	b.ls	0x3a630
000000000003a668	str	x8, [x20, #0x50]
000000000003a66c	ldr	x8, [x19, #0x40]
000000000003a670	cbnz	x8, 0x3a638
000000000003a674	mov	w4, #0x0
000000000003a678	mov	w20, #0x1
000000000003a67c	b	0x3a974
000000000003a680	and	x9, x8, #0xffffffffffffffe0
000000000003a684	mov	w10, #0x1039
000000000003a688	add	x10, x19, x10
000000000003a68c	movi.16b	v2, #0x1
000000000003a690	movi.16b	v0, #0x0
000000000003a694	movi.16b	v3, #0x4
000000000003a698	movi.16b	v4, #0x2
000000000003a69c	mov	x11, x9
000000000003a6a0	movi.16b	v1, #0x0
000000000003a6a4	movi.16b	v5, #0x1
000000000003a6a8	sub	x12, x10, #0x7c0
000000000003a6ac	prfm	pldl1keep, [x12]
000000000003a6b0	sub	x12, x10, #0x780
000000000003a6b4	prfm	pldl1keep, [x12]
000000000003a6b8	sub	x12, x10, #0xfc0
000000000003a6bc	ldr	b6, [x12]
000000000003a6c0	sub	x12, x10, #0x740
000000000003a6c4	prfm	pldl1keep, [x12]
000000000003a6c8	sub	x12, x10, #0xf80
000000000003a6cc	ld1.b	{ v6 }[1], [x12]
000000000003a6d0	sub	x12, x10, #0x700
000000000003a6d4	prfm	pldl1keep, [x12]
000000000003a6d8	sub	x12, x10, #0xf40
000000000003a6dc	ld1.b	{ v6 }[2], [x12]
000000000003a6e0	sub	x12, x10, #0x6c0
000000000003a6e4	prfm	pldl1keep, [x12]
000000000003a6e8	sub	x12, x10, #0xf00
000000000003a6ec	ld1.b	{ v6 }[3], [x12]
000000000003a6f0	sub	x12, x10, #0x680
000000000003a6f4	prfm	pldl1keep, [x12]
000000000003a6f8	sub	x12, x10, #0xec0
000000000003a6fc	ld1.b	{ v6 }[4], [x12]
000000000003a700	sub	x12, x10, #0x640
000000000003a704	prfm	pldl1keep, [x12]
000000000003a708	sub	x12, x10, #0xe80
000000000003a70c	ld1.b	{ v6 }[5], [x12]
000000000003a710	sub	x12, x10, #0x600
000000000003a714	prfm	pldl1keep, [x12]
000000000003a718	sub	x12, x10, #0xe40
000000000003a71c	ld1.b	{ v6 }[6], [x12]
000000000003a720	sub	x12, x10, #0x5c0
000000000003a724	prfm	pldl1keep, [x12]
000000000003a728	sub	x12, x10, #0xe00
000000000003a72c	ld1.b	{ v6 }[7], [x12]
000000000003a730	sub	x12, x10, #0x580
000000000003a734	prfm	pldl1keep, [x12]
000000000003a738	sub	x12, x10, #0xdc0
000000000003a73c	ld1.b	{ v6 }[8], [x12]
000000000003a740	sub	x12, x10, #0x540
000000000003a744	prfm	pldl1keep, [x12]
000000000003a748	sub	x12, x10, #0xd80
000000000003a74c	ld1.b	{ v6 }[9], [x12]
000000000003a750	sub	x12, x10, #0x500
000000000003a754	prfm	pldl1keep, [x12]
000000000003a758	sub	x12, x10, #0xd40
000000000003a75c	ld1.b	{ v6 }[10], [x12]
000000000003a760	sub	x12, x10, #0x4c0
000000000003a764	prfm	pldl1keep, [x12]
000000000003a768	sub	x12, x10, #0xd00
000000000003a76c	ld1.b	{ v6 }[11], [x12]
000000000003a770	sub	x12, x10, #0x480
000000000003a774	prfm	pldl1keep, [x12]
000000000003a778	sub	x12, x10, #0xcc0
000000000003a77c	ld1.b	{ v6 }[12], [x12]
000000000003a780	sub	x12, x10, #0x440
000000000003a784	prfm	pldl1keep, [x12]
000000000003a788	sub	x12, x10, #0xc80
000000000003a78c	ld1.b	{ v6 }[13], [x12]
000000000003a790	sub	x12, x10, #0x400
000000000003a794	prfm	pldl1keep, [x12]
000000000003a798	sub	x12, x10, #0xc40
000000000003a79c	ld1.b	{ v6 }[14], [x12]
000000000003a7a0	sub	x12, x10, #0xc00
000000000003a7a4	ld1.b	{ v6 }[15], [x12]
000000000003a7a8	sub	x12, x10, #0x3c0
000000000003a7ac	prfm	pldl1keep, [x12]
000000000003a7b0	sub	x12, x10, #0x380
000000000003a7b4	prfm	pldl1keep, [x12]
000000000003a7b8	sub	x12, x10, #0xbc0
000000000003a7bc	ldr	b7, [x12]
000000000003a7c0	sub	x12, x10, #0x340
000000000003a7c4	prfm	pldl1keep, [x12]
000000000003a7c8	sub	x12, x10, #0xb80
000000000003a7cc	ld1.b	{ v7 }[1], [x12]
000000000003a7d0	sub	x12, x10, #0x300
000000000003a7d4	prfm	pldl1keep, [x12]
000000000003a7d8	sub	x12, x10, #0xb40
000000000003a7dc	ld1.b	{ v7 }[2], [x12]
000000000003a7e0	sub	x12, x10, #0x2c0
000000000003a7e4	prfm	pldl1keep, [x12]
000000000003a7e8	sub	x12, x10, #0xb00
000000000003a7ec	ld1.b	{ v7 }[3], [x12]
000000000003a7f0	sub	x12, x10, #0x280
000000000003a7f4	prfm	pldl1keep, [x12]
000000000003a7f8	sub	x12, x10, #0xac0
000000000003a7fc	ld1.b	{ v7 }[4], [x12]
000000000003a800	sub	x12, x10, #0x240
000000000003a804	prfm	pldl1keep, [x12]
000000000003a808	sub	x12, x10, #0xa80
000000000003a80c	ld1.b	{ v7 }[5], [x12]
000000000003a810	sub	x12, x10, #0x200
000000000003a814	prfm	pldl1keep, [x12]
000000000003a818	sub	x12, x10, #0xa40
000000000003a81c	ld1.b	{ v7 }[6], [x12]
000000000003a820	sub	x12, x10, #0x1c0
000000000003a824	prfm	pldl1keep, [x12]
000000000003a828	sub	x12, x10, #0xa00
000000000003a82c	ld1.b	{ v7 }[7], [x12]
000000000003a830	sub	x12, x10, #0x180
000000000003a834	prfm	pldl1keep, [x12]
000000000003a838	sub	x12, x10, #0x9c0
000000000003a83c	ld1.b	{ v7 }[8], [x12]
000000000003a840	sub	x12, x10, #0x140
000000000003a844	prfm	pldl1keep, [x12]
000000000003a848	sub	x12, x10, #0x980
000000000003a84c	ld1.b	{ v7 }[9], [x12]
000000000003a850	sub	x12, x10, #0x940
000000000003a854	prfum	pldl1keep, [x10, #-0x100]
000000000003a858	ld1.b	{ v7 }[10], [x12]
000000000003a85c	sub	x12, x10, #0x900
000000000003a860	prfum	pldl1keep, [x10, #-0xc0]
000000000003a864	ld1.b	{ v7 }[11], [x12]
000000000003a868	sub	x12, x10, #0x8c0
000000000003a86c	prfum	pldl1keep, [x10, #-0x80]
000000000003a870	ld1.b	{ v7 }[12], [x12]
000000000003a874	sub	x12, x10, #0x880
000000000003a878	prfum	pldl1keep, [x10, #-0x40]
000000000003a87c	ld1.b	{ v7 }[13], [x12]
000000000003a880	sub	x12, x10, #0x840
000000000003a884	prfm	pldl1keep, [x10]
000000000003a888	ld1.b	{ v7 }[14], [x12]
000000000003a88c	sub	x12, x10, #0x800
000000000003a890	ld1.b	{ v7 }[15], [x12]
000000000003a894	and.16b	v16, v6, v3
000000000003a898	and.16b	v17, v7, v3
000000000003a89c	cmeq.16b	v16, v16, #0
000000000003a8a0	cmeq.16b	v17, v17, #0
000000000003a8a4	bic.16b	v2, v2, v16
000000000003a8a8	and.16b	v6, v6, v4
000000000003a8ac	and.16b	v7, v7, v4
000000000003a8b0	bic.16b	v5, v5, v17
000000000003a8b4	cmeq.16b	v6, v6, #0
000000000003a8b8	cmeq.16b	v7, v7, #0
000000000003a8bc	orn.16b	v0, v0, v6
000000000003a8c0	orn.16b	v1, v1, v7
000000000003a8c4	add	x10, x10, #0x800
000000000003a8c8	subs	x11, x11, #0x20
000000000003a8cc	b.ne	0x3a6a8
000000000003a8d0	and.16b	v2, v5, v2
000000000003a8d4	dup.2d	v3, v2[1]
000000000003a8d8	and.16b	v2, v2, v3
000000000003a8dc	dup.4s	v3, v2[1]
000000000003a8e0	and.16b	v2, v2, v3
000000000003a8e4	dup.8h	v3, v2[1]
000000000003a8e8	and.16b	v2, v2, v3
000000000003a8ec	dup.16b	v3, v2[1]
000000000003a8f0	and.16b	v2, v2, v3
000000000003a8f4	umov.b	w20, v2[0]
000000000003a8f8	orr.16b	v0, v1, v0
000000000003a8fc	dup.2d	v1, v0[1]
000000000003a900	orr.16b	v0, v0, v1
000000000003a904	dup.4s	v1, v0[1]
000000000003a908	orr.16b	v0, v0, v1
000000000003a90c	dup.8h	v1, v0[1]
000000000003a910	orr.16b	v0, v0, v1
000000000003a914	dup.16b	v1, v0[1]
000000000003a918	orr.16b	v0, v0, v1
000000000003a91c	umov.b	w10, v0[0]
000000000003a920	cmp	x8, x9
000000000003a924	b.eq	0x3a950
000000000003a928	sub	x8, x8, x9
000000000003a92c	add	x9, x19, x9, lsl #6
000000000003a930	add	x9, x9, #0x79
000000000003a934	ldrb	w11, [x9], #0x40
000000000003a938	and	w12, w11, #0x4
000000000003a93c	and	w20, w20, w12, lsr #2
000000000003a940	and	w11, w11, #0x2
000000000003a944	orr	w10, w10, w11, lsr #1
000000000003a948	subs	x8, x8, #0x1
000000000003a94c	b.ne	0x3a934
000000000003a950	tbz	w10, #0x0, 0x3a970
000000000003a954	mov	w0, #0x5
000000000003a958	bl	_mi_option_get
000000000003a95c	cmp	x0, #0x0
000000000003a960	cset	w8, eq
000000000003a964	and	w20, w20, w8
000000000003a968	mov	w4, #0x1
000000000003a96c	b	0x3a974
000000000003a970	mov	w4, #0x0
000000000003a974	ldr	x2, [x19]
000000000003a978	and	w3, w20, #0x1
000000000003a97c	mov	x0, x19
000000000003a980	mov	x1, x21
000000000003a984	ldp	x29, x30, [sp, #0x50]
000000000003a988	ldp	x20, x19, [sp, #0x40]
000000000003a98c	ldp	x22, x21, [sp, #0x30]
000000000003a990	ldp	x24, x23, [sp, #0x20]
000000000003a994	ldp	x26, x25, [sp, #0x10]
000000000003a998	ldp	x28, x27, [sp], #0x60
000000000003a99c	b	__mi_mem_free
000000000003a9a0	str	x10, [x8]
000000000003a9a4	ldr	x10, [x8, #0x8]
000000000003a9a8	cmp	x10, x19
000000000003a9ac	b.ne	0x39e48
000000000003a9b0	ldr	x10, [x19, #0x20]
000000000003a9b4	str	x10, [x8, #0x8]
000000000003a9b8	b	0x39e48
000000000003a9bc	str	x10, [x8]
000000000003a9c0	ldr	x10, [x8, #0x8]
000000000003a9c4	cmp	x10, x19
000000000003a9c8	b.ne	0x39e8c
000000000003a9cc	ldr	x10, [x19, #0x20]
000000000003a9d0	str	x10, [x8, #0x8]
000000000003a9d4	b	0x39e8c
000000000003a9d8	ldp	x9, x12, [x20, #0x68]
000000000003a9dc	str	x9, [x19, #0x18]
000000000003a9e0	str	x19, [x20, #0x68]
000000000003a9e4	add	x8, x8, #0x1
000000000003a9e8	str	x8, [x20, #0x58]
000000000003a9ec	add	x8, x12, #0x1a0
000000000003a9f0	cmp	x8, x24
000000000003a9f4	b.lo	0x3ab38
000000000003a9f8	adr	x9, #0x5a348
000000000003a9fc	nop
000000000003aa00	cmp	x8, x9
000000000003aa04	b.hs	0x3ab38
000000000003aa08	add	x11, x12, #0x1b8
000000000003aa0c	ldxr	x9, [x11]
000000000003aa10	add	x10, x9, #0x1
000000000003aa14	stxr	w13, x10, [x11]
000000000003aa18	cbnz	w13, 0x3aa0c
000000000003aa1c	add	x11, x12, #0x1b0
000000000003aa20	ldr	x13, [x12, #0x1b0]
000000000003aa24	b	0x3aa38
000000000003aa28	clrex
000000000003aa2c	mov	w14, #0x0
000000000003aa30	mov	x13, x12
000000000003aa34	cbnz	w14, 0x3aa60
000000000003aa38	cmp	x13, x9
000000000003aa3c	b.gt	0x3aa60
000000000003aa40	ldxr	x12, [x11]
000000000003aa44	cmp	x12, x13
000000000003aa48	b.ne	0x3aa28
000000000003aa4c	stlxr	w13, x10, [x11]
000000000003aa50	cbnz	w13, 0x3aa2c
000000000003aa54	mov	w14, #0x1
000000000003aa58	mov	x13, x12
000000000003aa5c	cbz	w14, 0x3aa38
000000000003aa60	ldxr	x9, [x8]
000000000003aa64	add	x9, x9, #0x1
000000000003aa68	stxr	w10, x9, [x8]
000000000003aa6c	cbnz	w10, 0x3aa60
000000000003aa70	b	0x3ab5c
000000000003aa74	add	x9, x19, #0x78
000000000003aa78	b	0x3aa90
000000000003aa7c	str	wzr, [x9, #0x10]
000000000003aa80	stp	xzr, xzr, [x9, #0x30]
000000000003aa84	add	x9, x9, #0x40
000000000003aa88	subs	x8, x8, #0x1
000000000003aa8c	b.eq	0x39bcc
000000000003aa90	ldrb	w10, [x9, #0x1]
000000000003aa94	and	w10, w10, #0x7
000000000003aa98	cmp	w10, #0x4
000000000003aa9c	b.ne	0x3aa84
000000000003aaa0	ldp	x10, x11, [x9, #0x30]
000000000003aaa4	cbz	x10, 0x3aab0
000000000003aaa8	cbnz	x11, 0x3aab4
000000000003aaac	b	0x3aac0
000000000003aab0	cbz	x11, 0x3aafc
000000000003aab4	str	x10, [x11, #0x30]
000000000003aab8	ldr	x10, [x9, #0x30]
000000000003aabc	cbz	x10, 0x3aac4
000000000003aac0	str	x11, [x10, #0x38]
000000000003aac4	ldr	x11, [x20, #0x28]
000000000003aac8	cmp	x9, x11
000000000003aacc	b.eq	0x3aae0
000000000003aad0	ldr	x11, [x20, #0x20]
000000000003aad4	cmp	x9, x11
000000000003aad8	b.ne	0x3aa7c
000000000003aadc	b	0x3aaf4
000000000003aae0	ldr	x11, [x9, #0x38]
000000000003aae4	str	x11, [x20, #0x28]
000000000003aae8	ldr	x11, [x20, #0x20]
000000000003aaec	cmp	x9, x11
000000000003aaf0	b.ne	0x3aa7c
000000000003aaf4	str	x10, [x20, #0x20]
000000000003aaf8	b	0x3aa7c
000000000003aafc	ldr	x11, [x20, #0x20]
000000000003ab00	cmp	x9, x11
000000000003ab04	b.eq	0x3aac4
000000000003ab08	ldr	x11, [x20, #0x28]
000000000003ab0c	cmp	x9, x11
000000000003ab10	b.ne	0x3aa84
000000000003ab14	b	0x3aac4
000000000003ab18	ldr	x11, [x8]
000000000003ab1c	cmp	x11, x19
000000000003ab20	b.ne	0x39e4c
000000000003ab24	b	0x39e30
000000000003ab28	ldr	x11, [x8]
000000000003ab2c	cmp	x11, x19
000000000003ab30	b.ne	0x39e90
000000000003ab34	b	0x39e74
000000000003ab38	ldp	x11, x10, [x12, #0x1b0]
000000000003ab3c	add	x9, x10, #0x1
000000000003ab40	str	x9, [x12, #0x1b8]
000000000003ab44	cmp	x10, x11
000000000003ab48	b.lt	0x3ab50
000000000003ab4c	str	x9, [x12, #0x1b0]
000000000003ab50	ldr	x9, [x8]
000000000003ab54	add	x9, x9, #0x1
000000000003ab58	str	x9, [x8]
000000000003ab5c	ldp	x29, x30, [sp, #0x50]
000000000003ab60	ldp	x20, x19, [sp, #0x40]
000000000003ab64	ldp	x22, x21, [sp, #0x30]
000000000003ab68	ldp	x24, x23, [sp, #0x20]
000000000003ab6c	ldp	x26, x25, [sp, #0x10]
000000000003ab70	ldp	x28, x27, [sp], #0x60
000000000003ab74	ret
_mi_segment_abandon:
000000000003ab78	sub	sp, sp, #0x50
000000000003ab7c	stp	x24, x23, [sp, #0x10]
000000000003ab80	stp	x22, x21, [sp, #0x20]
000000000003ab84	stp	x20, x19, [sp, #0x30]
000000000003ab88	stp	x29, x30, [sp, #0x40]
000000000003ab8c	add	x29, sp, #0x40
000000000003ab90	mov	x20, x1
000000000003ab94	mov	x19, x0
000000000003ab98	mov	w0, #0xa
000000000003ab9c	bl	_mi_option_get
000000000003aba0	cbz	x0, 0x3ac88
000000000003aba4	mov	x0, sp
000000000003aba8	mov	x1, #0x0
000000000003abac	bl	0x55b94 ; symbol stub for: _gettimeofday
000000000003abb0	ldr	x21, [x20, #0x28]
000000000003abb4	cbz	x21, 0x3ac84
000000000003abb8	ldr	x8, [sp]
000000000003abbc	ldr	w9, [sp, #0x8]
000000000003abc0	mov	w10, #0x4dd3
000000000003abc4	movk	w10, #0x1062, lsl #16
000000000003abc8	smull	x9, w9, w10
000000000003abcc	lsr	x10, x9, #63
000000000003abd0	asr	x9, x9, #38
000000000003abd4	add	w9, w9, w10
000000000003abd8	mov	w10, #0x3e8
000000000003abdc	madd	w22, w8, w10, w9
000000000003abe0	mov	w23, #0x1
000000000003abe4	b	0x3abf4
000000000003abe8	str	wzr, [x24, #0x10]
000000000003abec	stp	xzr, xzr, [x24, #0x30]
000000000003abf0	cbz	x21, 0x3ac84
000000000003abf4	mov	x24, x21
000000000003abf8	ldr	w8, [x21, #0x10]
000000000003abfc	cmp	w8, w22
000000000003ac00	b.gt	0x3aef0
000000000003ac04	ldr	x21, [x24, #0x38]
000000000003ac08	mov	w0, #0xa
000000000003ac0c	bl	_mi_option_get
000000000003ac10	cbz	x0, 0x3abe8
000000000003ac14	and	x9, x24, #0xffffffffffc00000
000000000003ac18	ldrb	w8, [x9, #0x8]
000000000003ac1c	cbnz	w8, 0x3abe8
000000000003ac20	ldrb	w8, [x24, #0x1]
000000000003ac24	and	w10, w8, #0x7
000000000003ac28	cmp	w10, #0x4
000000000003ac2c	b.ne	0x3abe8
000000000003ac30	ldr	w10, [x9, #0x70]
000000000003ac34	cmp	w10, #0x3
000000000003ac38	b.ne	0x3ac50
000000000003ac3c	ldr	x1, [x9, #0x48]
000000000003ac40	ldrb	w10, [x24]
000000000003ac44	madd	x0, x1, x10, x9
000000000003ac48	cbnz	x10, 0x3ac70
000000000003ac4c	b	0x3ac64
000000000003ac50	ldr	x10, [x9, #0x60]
000000000003ac54	lsl	x1, x23, x10
000000000003ac58	ldrb	w10, [x24]
000000000003ac5c	madd	x0, x1, x10, x9
000000000003ac60	cbnz	x10, 0x3ac70
000000000003ac64	ldr	x9, [x9, #0x50]
000000000003ac68	add	x0, x0, x9
000000000003ac6c	sub	x1, x1, x9
000000000003ac70	orr	w8, w8, #0x2
000000000003ac74	strb	w8, [x24, #0x1]
000000000003ac78	cbz	x1, 0x3abe8
000000000003ac7c	bl	__mi_os_reset
000000000003ac80	b	0x3abe8
000000000003ac84	stp	xzr, xzr, [x20, #0x20]
000000000003ac88	mov	w0, #0xb
000000000003ac8c	bl	_mi_option_get
000000000003ac90	ldrb	w8, [x19, #0x8]
000000000003ac94	cbz	w8, 0x3af08
000000000003ac98	ldr	w8, [x19, #0x70]
000000000003ac9c	cbz	w8, 0x3acb0
000000000003aca0	cmp	w8, #0x1
000000000003aca4	b.ne	0x3ad04
000000000003aca8	add	x8, x20, #0x10
000000000003acac	b	0x3acb8
000000000003acb0	mov	x8, x20
000000000003acb4	cbz	x20, 0x3ad04
000000000003acb8	mov	x9, x19
000000000003acbc	ldp	x10, x11, [x9, #0x18]!
000000000003acc0	cbz	x10, 0x3accc
000000000003acc4	cbnz	x11, 0x3acd0
000000000003acc8	b	0x3acdc
000000000003accc	cbz	x11, 0x3b1e8
000000000003acd0	str	x10, [x11, #0x18]
000000000003acd4	ldr	x10, [x9]
000000000003acd8	cbz	x10, 0x3ace0
000000000003acdc	str	x11, [x10, #0x20]
000000000003ace0	ldr	x11, [x8]
000000000003ace4	cmp	x11, x19
000000000003ace8	b.eq	0x3b03c
000000000003acec	ldr	x10, [x8, #0x8]
000000000003acf0	cmp	x10, x19
000000000003acf4	b.ne	0x3ad00
000000000003acf8	ldr	x10, [x19, #0x20]
000000000003acfc	str	x10, [x8, #0x8]
000000000003ad00	stp	xzr, xzr, [x9]
000000000003ad04	ldr	x8, [x20, #0x70]
000000000003ad08	add	x9, x8, #0xc0
000000000003ad0c	adr	x10, #0x59df4
000000000003ad10	nop
000000000003ad14	cmp	x9, x10
000000000003ad18	b.lo	0x3ad9c
000000000003ad1c	adr	x11, #0x5a024
000000000003ad20	nop
000000000003ad24	cmp	x9, x11
000000000003ad28	b.hs	0x3ad9c
000000000003ad2c	add	x13, x8, #0xd8
000000000003ad30	ldxr	x11, [x13]
000000000003ad34	add	x12, x11, #0x1
000000000003ad38	stxr	w14, x12, [x13]
000000000003ad3c	cbnz	w14, 0x3ad30
000000000003ad40	add	x13, x8, #0xd0
000000000003ad44	ldr	x14, [x8, #0xd0]
000000000003ad48	b	0x3ad5c
000000000003ad4c	clrex
000000000003ad50	mov	w15, #0x0
000000000003ad54	mov	x14, x8
000000000003ad58	cbnz	w15, 0x3ad84
000000000003ad5c	cmp	x14, x11
000000000003ad60	b.gt	0x3ad84
000000000003ad64	ldxr	x8, [x13]
000000000003ad68	cmp	x8, x14
000000000003ad6c	b.ne	0x3ad4c
000000000003ad70	stlxr	w14, x12, [x13]
000000000003ad74	cbnz	w14, 0x3ad50
000000000003ad78	mov	w15, #0x1
000000000003ad7c	mov	x14, x8
000000000003ad80	cbz	w15, 0x3ad5c
000000000003ad84	ldxr	x8, [x9]
000000000003ad88	add	x8, x8, #0x1
000000000003ad8c	stxr	w11, x8, [x9]
000000000003ad90	cbnz	w11, 0x3ad84
000000000003ad94	ldr	x8, [x20, #0x70]
000000000003ad98	b	0x3adc0
000000000003ad9c	ldp	x13, x12, [x8, #0xd0]
000000000003ada0	add	x11, x12, #0x1
000000000003ada4	str	x11, [x8, #0xd8]
000000000003ada8	cmp	x12, x13
000000000003adac	b.lt	0x3adb4
000000000003adb0	str	x11, [x8, #0xd0]
000000000003adb4	ldr	x11, [x9]
000000000003adb8	add	x11, x11, #0x1
000000000003adbc	str	x11, [x9]
000000000003adc0	ldr	x9, [x19, #0x48]
000000000003adc4	cmp	x8, x10
000000000003adc8	cset	w11, hs
000000000003adcc	add	x10, x10, #0x240
000000000003add0	cmp	x8, x10
000000000003add4	cset	w10, lo
000000000003add8	and	w10, w11, w10
000000000003addc	add	x12, x8, #0x18
000000000003ade0	cmp	x9, #0x0
000000000003ade4	b.le	0x3ae5c
000000000003ade8	cbz	w10, 0x3aecc
000000000003adec	ldxr	x10, [x12]
000000000003adf0	sub	x10, x10, #0x1
000000000003adf4	stxr	w11, x10, [x12]
000000000003adf8	cbnz	w11, 0x3adec
000000000003adfc	add	x11, x8, #0x10
000000000003ae00	ldr	x13, [x8, #0x10]
000000000003ae04	b	0x3ae18
000000000003ae08	clrex
000000000003ae0c	mov	w14, #0x0
000000000003ae10	mov	x13, x12
000000000003ae14	cbnz	w14, 0x3ae40
000000000003ae18	cmp	x13, x10
000000000003ae1c	b.ge	0x3ae40
000000000003ae20	ldxr	x12, [x11]
000000000003ae24	cmp	x12, x13
000000000003ae28	b.ne	0x3ae08
000000000003ae2c	stlxr	w13, x10, [x11]
000000000003ae30	cbnz	w13, 0x3ae0c
000000000003ae34	mov	w14, #0x1
000000000003ae38	mov	x13, x12
000000000003ae3c	cbz	w14, 0x3ae18
000000000003ae40	add	x8, x8, #0x8
000000000003ae44	ldxr	x10, [x8]
000000000003ae48	add	x10, x10, #0x1
000000000003ae4c	stxr	w11, x10, [x8]
000000000003ae50	cbnz	w11, 0x3ae44
000000000003ae54	mov	x10, #-0x1
000000000003ae58	b	0x3b078
000000000003ae5c	cbz	w10, 0x3b050
000000000003ae60	ldxr	x10, [x12]
000000000003ae64	add	x11, x10, #0x1
000000000003ae68	stxr	w13, x11, [x12]
000000000003ae6c	cbnz	w13, 0x3ae60
000000000003ae70	add	x12, x8, #0x10
000000000003ae74	ldr	x14, [x8, #0x10]
000000000003ae78	b	0x3ae8c
000000000003ae7c	clrex
000000000003ae80	mov	w15, #0x0
000000000003ae84	mov	x14, x13
000000000003ae88	cbnz	w15, 0x3aeb4
000000000003ae8c	cmp	x14, x10
000000000003ae90	b.gt	0x3aeb4
000000000003ae94	ldxr	x13, [x12]
000000000003ae98	cmp	x13, x14
000000000003ae9c	b.ne	0x3ae7c
000000000003aea0	stlxr	w14, x11, [x12]
000000000003aea4	cbnz	w14, 0x3ae80
000000000003aea8	mov	w15, #0x1
000000000003aeac	mov	x14, x13
000000000003aeb0	cbz	w15, 0x3ae8c
000000000003aeb4	mov	w10, #0x1
000000000003aeb8	ldxr	x11, [x8]
000000000003aebc	add	x11, x11, #0x1
000000000003aec0	stxr	w12, x11, [x8]
000000000003aec4	cbnz	w12, 0x3aeb8
000000000003aec8	b	0x3b078
000000000003aecc	ldp	x11, x10, [x8, #0x10]
000000000003aed0	sub	x10, x10, #0x1
000000000003aed4	str	x10, [x8, #0x18]
000000000003aed8	cmp	x10, x11
000000000003aedc	b.le	0x3aee4
000000000003aee0	str	x10, [x8, #0x10]
000000000003aee4	add	x8, x8, #0x8
000000000003aee8	mov	x10, #-0x1
000000000003aeec	b	0x3b06c
000000000003aef0	str	x24, [x20, #0x28]
000000000003aef4	str	xzr, [x24, #0x30]
000000000003aef8	mov	w0, #0xb
000000000003aefc	bl	_mi_option_get
000000000003af00	ldrb	w8, [x19, #0x8]
000000000003af04	cbnz	w8, 0x3ac98
000000000003af08	ldr	x8, [x19, #0x40]
000000000003af0c	cbz	x8, 0x3ac98
000000000003af10	cbz	x0, 0x3b144
000000000003af14	mov	x21, #0x0
000000000003af18	add	x22, x19, #0x78
000000000003af1c	mov	w23, #0x1
000000000003af20	b	0x3af38
000000000003af24	ldr	x8, [x19, #0x40]
000000000003af28	add	x21, x21, #0x1
000000000003af2c	add	x22, x22, #0x40
000000000003af30	cmp	x21, x8
000000000003af34	b.hs	0x3ac98
000000000003af38	ldrb	w9, [x22, #0x1]
000000000003af3c	and	w9, w9, #0x7
000000000003af40	cmp	w9, #0x4
000000000003af44	b.ne	0x3af28
000000000003af48	ldp	x8, x9, [x22, #0x30]
000000000003af4c	cbz	x8, 0x3af58
000000000003af50	cbnz	x9, 0x3af5c
000000000003af54	b	0x3af68
000000000003af58	cbz	x9, 0x3afec
000000000003af5c	str	x8, [x9, #0x30]
000000000003af60	ldr	x8, [x22, #0x30]
000000000003af64	cbz	x8, 0x3af6c
000000000003af68	str	x9, [x8, #0x38]
000000000003af6c	ldr	x9, [x20, #0x28]
000000000003af70	cmp	x22, x9
000000000003af74	b.eq	0x3afd0
000000000003af78	ldr	x9, [x20, #0x20]
000000000003af7c	cmp	x22, x9
000000000003af80	b.eq	0x3afe4
000000000003af84	str	wzr, [x22, #0x10]
000000000003af88	stp	xzr, xzr, [x22, #0x30]
000000000003af8c	mov	w0, #0xa
000000000003af90	bl	_mi_option_get
000000000003af94	cbz	x0, 0x3af24
000000000003af98	ldrb	w8, [x19, #0x8]
000000000003af9c	cbnz	w8, 0x3af24
000000000003afa0	ldrb	w8, [x22, #0x1]
000000000003afa4	and	w9, w8, #0x7
000000000003afa8	cmp	w9, #0x4
000000000003afac	b.ne	0x3af24
000000000003afb0	ldr	w9, [x19, #0x70]
000000000003afb4	cmp	w9, #0x3
000000000003afb8	b.ne	0x3b008
000000000003afbc	ldr	x1, [x19, #0x48]
000000000003afc0	ldrb	w9, [x22]
000000000003afc4	madd	x0, x1, x9, x19
000000000003afc8	cbnz	x9, 0x3b028
000000000003afcc	b	0x3b01c
000000000003afd0	ldr	x9, [x22, #0x38]
000000000003afd4	str	x9, [x20, #0x28]
000000000003afd8	ldr	x9, [x20, #0x20]
000000000003afdc	cmp	x22, x9
000000000003afe0	b.ne	0x3af84
000000000003afe4	str	x8, [x20, #0x20]
000000000003afe8	b	0x3af84
000000000003afec	ldr	x9, [x20, #0x20]
000000000003aff0	cmp	x22, x9
000000000003aff4	b.eq	0x3af6c
000000000003aff8	ldr	x9, [x20, #0x28]
000000000003affc	cmp	x22, x9
000000000003b000	b.ne	0x3af8c
000000000003b004	b	0x3af6c
000000000003b008	ldr	x9, [x19, #0x60]
000000000003b00c	lsl	x1, x23, x9
000000000003b010	ldrb	w9, [x22]
000000000003b014	madd	x0, x1, x9, x19
000000000003b018	cbnz	x9, 0x3b028
000000000003b01c	ldr	x9, [x19, #0x50]
000000000003b020	add	x0, x0, x9
000000000003b024	sub	x1, x1, x9
000000000003b028	orr	w8, w8, #0x2
000000000003b02c	strb	w8, [x22, #0x1]
000000000003b030	cbz	x1, 0x3af24
000000000003b034	bl	__mi_os_reset
000000000003b038	b	0x3af24
000000000003b03c	str	x10, [x8]
000000000003b040	ldr	x10, [x8, #0x8]
000000000003b044	cmp	x10, x19
000000000003b048	b.ne	0x3ad00
000000000003b04c	b	0x3acf8
000000000003b050	ldp	x12, x11, [x8, #0x10]
000000000003b054	add	x10, x11, #0x1
000000000003b058	str	x10, [x8, #0x18]
000000000003b05c	cmp	x11, x12
000000000003b060	b.lt	0x3b068
000000000003b064	str	x10, [x8, #0x10]
000000000003b068	mov	w10, #0x1
000000000003b06c	ldr	x11, [x8]
000000000003b070	add	x11, x11, #0x1
000000000003b074	str	x11, [x8]
000000000003b078	ldp	x8, x11, [x20, #0x38]
000000000003b07c	add	x8, x8, x10
000000000003b080	str	x8, [x20, #0x38]
000000000003b084	cmp	x8, x11
000000000003b088	b.ls	0x3b090
000000000003b08c	str	x8, [x20, #0x40]
000000000003b090	ldp	x8, x10, [x20, #0x48]
000000000003b094	sub	x8, x8, x9
000000000003b098	str	x8, [x20, #0x48]
000000000003b09c	cmp	x8, x10
000000000003b0a0	b.ls	0x3b0a8
000000000003b0a4	str	x8, [x20, #0x50]
000000000003b0a8	add	x8, x19, #0x68
000000000003b0ac	stlr	xzr, [x8]
000000000003b0b0	str	xzr, [x19, #0x30]
000000000003b0b4	add	x8, x19, #0x10
000000000003b0b8	stlr	xzr, [x8]
000000000003b0bc	nop
000000000003b0c0	ldr	x11, #0x595c0
000000000003b0c4	adr	x9, #0x595bc
000000000003b0c8	nop
000000000003b0cc	b	0x3b0e0
000000000003b0d0	clrex
000000000003b0d4	mov	w12, #0x0
000000000003b0d8	mov	x11, x10
000000000003b0dc	cbnz	w12, 0x3b114
000000000003b0e0	and	x10, x11, #0xffffffffffc00000
000000000003b0e4	stlr	x10, [x8]
000000000003b0e8	ldxr	x10, [x9]
000000000003b0ec	cmp	x10, x11
000000000003b0f0	b.ne	0x3b0d0
000000000003b0f4	add	w11, w11, #0x1
000000000003b0f8	and	x11, x11, #0x3fffff
000000000003b0fc	orr	x11, x11, x19
000000000003b100	stlxr	w12, x11, [x9]
000000000003b104	cbnz	w12, 0x3b0d4
000000000003b108	mov	w12, #0x1
000000000003b10c	mov	x11, x10
000000000003b110	cbz	w12, 0x3b0e0
000000000003b114	adr	x8, #0x595ac
000000000003b118	nop
000000000003b11c	ldxr	x9, [x8]
000000000003b120	add	x9, x9, #0x1
000000000003b124	stxr	w10, x9, [x8]
000000000003b128	cbnz	w10, 0x3b11c
000000000003b12c	ldp	x29, x30, [sp, #0x40]
000000000003b130	ldp	x20, x19, [sp, #0x30]
000000000003b134	ldp	x22, x21, [sp, #0x20]
000000000003b138	ldp	x24, x23, [sp, #0x10]
000000000003b13c	add	sp, sp, #0x50
000000000003b140	ret
000000000003b144	add	x9, x19, #0x78
000000000003b148	b	0x3b160
000000000003b14c	str	wzr, [x9, #0x10]
000000000003b150	stp	xzr, xzr, [x9, #0x30]
000000000003b154	add	x9, x9, #0x40
000000000003b158	subs	x8, x8, #0x1
000000000003b15c	b.eq	0x3ac98
000000000003b160	ldrb	w10, [x9, #0x1]
000000000003b164	and	w10, w10, #0x7
000000000003b168	cmp	w10, #0x4
000000000003b16c	b.ne	0x3b154
000000000003b170	ldp	x10, x11, [x9, #0x30]
000000000003b174	cbz	x10, 0x3b180
000000000003b178	cbnz	x11, 0x3b184
000000000003b17c	b	0x3b190
000000000003b180	cbz	x11, 0x3b1cc
000000000003b184	str	x10, [x11, #0x30]
000000000003b188	ldr	x10, [x9, #0x30]
000000000003b18c	cbz	x10, 0x3b194
000000000003b190	str	x11, [x10, #0x38]
000000000003b194	ldr	x11, [x20, #0x28]
000000000003b198	cmp	x9, x11
000000000003b19c	b.eq	0x3b1b0
000000000003b1a0	ldr	x11, [x20, #0x20]
000000000003b1a4	cmp	x9, x11
000000000003b1a8	b.ne	0x3b14c
000000000003b1ac	b	0x3b1c4
000000000003b1b0	ldr	x11, [x9, #0x38]
000000000003b1b4	str	x11, [x20, #0x28]
000000000003b1b8	ldr	x11, [x20, #0x20]
000000000003b1bc	cmp	x9, x11
000000000003b1c0	b.ne	0x3b14c
000000000003b1c4	str	x10, [x20, #0x20]
000000000003b1c8	b	0x3b14c
000000000003b1cc	ldr	x11, [x20, #0x20]
000000000003b1d0	cmp	x9, x11
000000000003b1d4	b.eq	0x3b194
000000000003b1d8	ldr	x11, [x20, #0x28]
000000000003b1dc	cmp	x9, x11
000000000003b1e0	b.ne	0x3b154
000000000003b1e4	b	0x3b194
000000000003b1e8	ldr	x11, [x8]
000000000003b1ec	cmp	x11, x19
000000000003b1f0	b.ne	0x3ad04
000000000003b1f4	b	0x3ace0
__mi_free_delayed_block:
000000000003b1f8	stp	x22, x21, [sp, #-0x30]!
000000000003b1fc	stp	x20, x19, [sp, #0x10]
000000000003b200	stp	x29, x30, [sp, #0x20]
000000000003b204	add	x29, sp, #0x20
000000000003b208	mov	x20, x0
000000000003b20c	and	x21, x0, #0xffffffffffc00000
000000000003b210	and	x8, x0, #0x3fffff
000000000003b214	ldr	x9, [x21, #0x60]
000000000003b218	lsr	x22, x8, x9
000000000003b21c	add	x8, x21, x22, lsl #6
000000000003b220	add	x19, x8, #0x78
000000000003b224	add	x8, x8, #0x98
000000000003b228	ldar	x9, [x8]
000000000003b22c	and	w10, w9, #0x3
000000000003b230	cmp	w10, #0x0
000000000003b234	ccmp	w10, #0x3, #0x4, ne
000000000003b238	b.eq	0x3b270
000000000003b23c	cmp	w10, #0x1
000000000003b240	b.eq	0x3b268
000000000003b244	ldxr	x10, [x8]
000000000003b248	cmp	x10, x9
000000000003b24c	b.ne	0x3b260
000000000003b250	and	x9, x9, #0xfffffffffffffffc
000000000003b254	stlxr	w10, x9, [x8]
000000000003b258	cbnz	w10, 0x3b228
000000000003b25c	b	0x3b270
000000000003b260	clrex
000000000003b264	b	0x3b228
000000000003b268	wfe
000000000003b26c	b	0x3b228
000000000003b270	mov	x0, x19
000000000003b274	mov	w1, #0x0
000000000003b278	bl	__mi_page_free_collect
000000000003b27c	add	x8, x21, x22, lsl #6
000000000003b280	ldr	x9, [x8, #0x90]
000000000003b284	str	x9, [x20]
000000000003b288	str	x20, [x8, #0x90]
000000000003b28c	ldr	w9, [x8, #0x88]
000000000003b290	subs	w9, w9, #0x1
000000000003b294	str	w9, [x8, #0x88]
000000000003b298	b.eq	0x3b2b4
000000000003b29c	ldrb	w8, [x8, #0x7e]
000000000003b2a0	tbnz	w8, #0x0, 0x3b2c8
000000000003b2a4	ldp	x29, x30, [sp, #0x20]
000000000003b2a8	ldp	x20, x19, [sp, #0x10]
000000000003b2ac	ldp	x22, x21, [sp], #0x30
000000000003b2b0	ret
000000000003b2b4	mov	x0, x19
000000000003b2b8	ldp	x29, x30, [sp, #0x20]
000000000003b2bc	ldp	x20, x19, [sp, #0x10]
000000000003b2c0	ldp	x22, x21, [sp], #0x30
000000000003b2c4	b	__mi_page_retire
000000000003b2c8	mov	x0, x19
000000000003b2cc	ldp	x29, x30, [sp, #0x20]
000000000003b2d0	ldp	x20, x19, [sp, #0x10]
000000000003b2d4	ldp	x22, x21, [sp], #0x30
000000000003b2d8	b	__mi_page_unfull
__mi_page_retire:
000000000003b2dc	ldrb	w9, [x0, #0x6]
000000000003b2e0	and	w8, w9, #0xfffffffd
000000000003b2e4	strb	w8, [x0, #0x6]
000000000003b2e8	ldr	w8, [x0, #0x14]
000000000003b2ec	tbnz	w9, #0x0, 0x3b300
000000000003b2f0	cmp	w8, #0x9
000000000003b2f4	b.hs	0x3b308
000000000003b2f8	mov	w10, #0x1
000000000003b2fc	b	0x3b35c
000000000003b300	mov	w10, #0x4a
000000000003b304	b	0x3b360
000000000003b308	add	x10, x8, #0x7
000000000003b30c	lsr	x10, x10, #3
000000000003b310	cmp	w8, #0x40
000000000003b314	b.hi	0x3b324
000000000003b318	add	w10, w10, #0x1
000000000003b31c	and	x10, x10, #0xfe
000000000003b320	b	0x3b35c
000000000003b324	cmp	w8, #0x200, lsl #12
000000000003b328	b.ls	0x3b334
000000000003b32c	mov	w10, #0x49
000000000003b330	b	0x3b35c
000000000003b334	sub	x10, x10, #0x1
000000000003b338	clz	x11, x10
000000000003b33c	mov	w12, #0x3f
000000000003b340	sub	w11, w12, w11
000000000003b344	and	w11, w11, #0xff
000000000003b348	sub	w12, w11, #0x2
000000000003b34c	lsr	x10, x10, x12
000000000003b350	and	w10, w10, #0x3
000000000003b354	bfi	w10, w11, #2, #8
000000000003b358	add	w10, w10, #0xfd
000000000003b35c	and	x10, x10, #0xff
000000000003b360	ldr	x11, [x0, #0x28]
000000000003b364	mov	w12, #0x18
000000000003b368	madd	x12, x10, x12, x11
000000000003b36c	add	x1, x12, #0x410
000000000003b370	tbnz	w9, #0x0, 0x3b39c
000000000003b374	cmp	w8, #0x200, lsl #12
000000000003b378	b.hi	0x3b39c
000000000003b37c	mov	w9, #0x18
000000000003b380	madd	x9, x10, x9, x11
000000000003b384	ldr	x9, [x9, #0x418]
000000000003b388	cmp	x9, x0
000000000003b38c	b.ne	0x3b39c
000000000003b390	ldr	x9, [x1]
000000000003b394	cmp	x9, x0
000000000003b398	b.eq	0x3b3a4
000000000003b39c	mov	w2, #0x0
000000000003b3a0	b	__mi_page_free
000000000003b3a4	cmp	w8, #0x4, lsl #12
000000000003b3a8	mov	w8, #0x4
000000000003b3ac	mov	w9, #0x10
000000000003b3b0	csel	w8, w9, w8, ls
000000000003b3b4	ldrb	w9, [x0, #0x7]
000000000003b3b8	bfxil	w8, w9, #0, #1
000000000003b3bc	strb	w8, [x0, #0x7]
000000000003b3c0	ldr	x8, [x0, #0x28]
000000000003b3c4	sub	x9, x1, x8
000000000003b3c8	sub	x9, x9, #0x410
000000000003b3cc	asr	x9, x9, #3
000000000003b3d0	mov	x10, #-0x5555555555555556
000000000003b3d4	movk	x10, #0xaaab
000000000003b3d8	mul	x9, x9, x10
000000000003b3dc	ldr	x10, [x8, #0xbd0]
000000000003b3e0	cmp	x9, x10
000000000003b3e4	b.lo	0x3b3f8
000000000003b3e8	ldr	x10, [x8, #0xbd8]
000000000003b3ec	cmp	x9, x10
000000000003b3f0	b.hi	0x3b408
000000000003b3f4	ret
000000000003b3f8	str	x9, [x8, #0xbd0]
000000000003b3fc	ldr	x10, [x8, #0xbd8]
000000000003b400	cmp	x9, x10
000000000003b404	b.ls	0x3b3f4
000000000003b408	str	x9, [x8, #0xbd8]
000000000003b40c	ret
__mi_page_unfull:
000000000003b410	ldrb	w8, [x0, #0x6]
000000000003b414	tbz	w8, #0x0, 0x3b874
000000000003b418	ldr	x10, [x0, #0x28]
000000000003b41c	and	w9, w8, #0xfe
000000000003b420	strb	w9, [x0, #0x6]
000000000003b424	ldr	w9, [x0, #0x14]
000000000003b428	cmp	w9, #0x9
000000000003b42c	b.hs	0x3b44c
000000000003b430	mov	w11, #0x1
000000000003b434	orr	w8, w8, #0x1
000000000003b438	strb	w8, [x0, #0x6]
000000000003b43c	ldr	x9, [x0, #0x28]
000000000003b440	ldr	x8, [x0, #0x38]
000000000003b444	cbnz	x8, 0x3b4dc
000000000003b448	b	0x3b4e4
000000000003b44c	add	x11, x9, #0x7
000000000003b450	lsr	x11, x11, #3
000000000003b454	cmp	w9, #0x40
000000000003b458	b.hi	0x3b47c
000000000003b45c	add	w9, w11, #0x1
000000000003b460	and	x11, x9, #0xfe
000000000003b464	orr	w8, w8, #0x1
000000000003b468	strb	w8, [x0, #0x6]
000000000003b46c	ldr	x9, [x0, #0x28]
000000000003b470	ldr	x8, [x0, #0x38]
000000000003b474	cbnz	x8, 0x3b4dc
000000000003b478	b	0x3b4e4
000000000003b47c	cmp	w9, #0x200, lsl #12
000000000003b480	b.ls	0x3b4a0
000000000003b484	mov	w11, #0x49
000000000003b488	orr	w8, w8, #0x1
000000000003b48c	strb	w8, [x0, #0x6]
000000000003b490	ldr	x9, [x0, #0x28]
000000000003b494	ldr	x8, [x0, #0x38]
000000000003b498	cbnz	x8, 0x3b4dc
000000000003b49c	b	0x3b4e4
000000000003b4a0	sub	x9, x11, #0x1
000000000003b4a4	clz	x11, x9
000000000003b4a8	mov	w12, #0x3f
000000000003b4ac	sub	w11, w12, w11
000000000003b4b0	and	w11, w11, #0xff
000000000003b4b4	sub	w12, w11, #0x2
000000000003b4b8	lsr	x9, x9, x12
000000000003b4bc	and	w9, w9, #0x3
000000000003b4c0	bfi	w9, w11, #2, #8
000000000003b4c4	add	w11, w9, #0xfd
000000000003b4c8	orr	w8, w8, #0x1
000000000003b4cc	strb	w8, [x0, #0x6]
000000000003b4d0	ldr	x9, [x0, #0x28]
000000000003b4d4	ldr	x8, [x0, #0x38]
000000000003b4d8	cbz	x8, 0x3b4e4
000000000003b4dc	ldr	x12, [x0, #0x30]
000000000003b4e0	str	x12, [x8, #0x30]
000000000003b4e4	ldr	x12, [x0, #0x30]
000000000003b4e8	cbz	x12, 0x3b4f0
000000000003b4ec	str	x8, [x12, #0x38]
000000000003b4f0	ldr	x8, [x10, #0xb08]
000000000003b4f4	cmp	x8, x0
000000000003b4f8	b.eq	0x3b518
000000000003b4fc	and	x11, x11, #0xff
000000000003b500	mov	w8, #0x7
000000000003b504	movk	w8, #0x20, lsl #16
000000000003b508	ldr	x13, [x10, #0xb00]
000000000003b50c	cmp	x13, x0
000000000003b510	b.ne	0x3b6a8
000000000003b514	b	0x3b538
000000000003b518	ldr	x8, [x0, #0x38]
000000000003b51c	str	x8, [x10, #0xb08]
000000000003b520	and	x11, x11, #0xff
000000000003b524	mov	w8, #0x7
000000000003b528	movk	w8, #0x20, lsl #16
000000000003b52c	ldr	x13, [x10, #0xb00]
000000000003b530	cmp	x13, x0
000000000003b534	b.ne	0x3b6a8
000000000003b538	str	x12, [x10, #0xb00]
000000000003b53c	ldr	x15, [x10, #0xb10]
000000000003b540	cmp	x15, #0x400
000000000003b544	b.hi	0x3b6a8
000000000003b548	adr	x13, #0x1d878
000000000003b54c	nop
000000000003b550	cmp	x12, #0x0
000000000003b554	csel	x12, x13, x12, eq
000000000003b558	add	x13, x15, #0x7
000000000003b55c	lsr	x13, x13, #3
000000000003b560	add	x14, x9, x13, lsl #3
000000000003b564	ldr	x14, [x14, #0x8]
000000000003b568	cmp	x14, x12
000000000003b56c	b.eq	0x3b6a8
000000000003b570	cmp	x15, #0x9
000000000003b574	b.hs	0x3b580
000000000003b578	mov	x14, #0x0
000000000003b57c	b	0x3b64c
000000000003b580	sub	x16, x13, #0x1
000000000003b584	clz	x17, x16
000000000003b588	mov	w14, #0x3f
000000000003b58c	sub	w17, w14, w17
000000000003b590	and	w17, w17, #0xff
000000000003b594	sub	w1, w17, #0x2
000000000003b598	lsr	x16, x16, x1
000000000003b59c	and	w16, w16, #0x3
000000000003b5a0	bfi	w16, w17, #2, #8
000000000003b5a4	sub	w16, w16, #0x3
000000000003b5a8	add	w17, w13, #0x1
000000000003b5ac	and	w17, w17, #0xfffffffe
000000000003b5b0	cmp	x15, #0x40
000000000003b5b4	csel	w17, w16, w17, hi
000000000003b5b8	add	x15, x9, #0x410
000000000003b5bc	add	x16, x10, #0xae8
000000000003b5c0	and	w17, w17, #0xff
000000000003b5c4	ldr	x1, [x16, #0x10]
000000000003b5c8	add	x2, x1, #0x7
000000000003b5cc	lsr	x1, x2, #3
000000000003b5d0	cmp	x2, #0x10
000000000003b5d4	b.hs	0x3b5e0
000000000003b5d8	mov	w2, #0x1
000000000003b5dc	b	0x3b628
000000000003b5e0	cmp	x2, #0x47
000000000003b5e4	b.hi	0x3b5f4
000000000003b5e8	add	w2, w1, #0x1
000000000003b5ec	and	w2, w2, #0xfffffffe
000000000003b5f0	b	0x3b628
000000000003b5f4	cmp	x2, x8
000000000003b5f8	b.ls	0x3b604
000000000003b5fc	mov	w2, #0x49
000000000003b600	b	0x3b628
000000000003b604	sub	x2, x1, #0x1
000000000003b608	clz	x3, x2
000000000003b60c	sub	w3, w14, w3
000000000003b610	and	w3, w3, #0xff
000000000003b614	sub	w4, w3, #0x2
000000000003b618	lsr	x2, x2, x4
000000000003b61c	and	w2, w2, #0x3
000000000003b620	bfi	w2, w3, #2, #8
000000000003b624	sub	w2, w2, #0x3
000000000003b628	cmp	x16, x15
000000000003b62c	b.ls	0x3b63c
000000000003b630	sub	x16, x16, #0x18
000000000003b634	cmp	w17, w2, uxtb
000000000003b638	b.eq	0x3b5c4
000000000003b63c	cmp	x1, x13
000000000003b640	csinc	x14, x13, x1, hs
000000000003b644	cmp	x14, x13
000000000003b648	b.hi	0x3b6a8
000000000003b64c	sub	x15, x13, x14
000000000003b650	add	x15, x15, #0x1
000000000003b654	cmp	x15, #0x4
000000000003b658	b.lo	0x3b68c
000000000003b65c	and	x16, x15, #0xfffffffffffffffc
000000000003b660	dup.2d	v0, x12
000000000003b664	add	x17, x9, x14, lsl #3
000000000003b668	add	x17, x17, #0x18
000000000003b66c	mov	x1, x16
000000000003b670	stp	q0, q0, [x17, #-0x10]
000000000003b674	add	x17, x17, #0x20
000000000003b678	subs	x1, x1, #0x4
000000000003b67c	b.ne	0x3b670
000000000003b680	cmp	x15, x16
000000000003b684	b.eq	0x3b6a8
000000000003b688	add	x14, x14, x16
000000000003b68c	sub	x13, x13, x14
000000000003b690	add	x13, x13, #0x1
000000000003b694	add	x14, x9, x14, lsl #3
000000000003b698	add	x14, x14, #0x8
000000000003b69c	str	x12, [x14], #0x8
000000000003b6a0	subs	x13, x13, #0x1
000000000003b6a4	b.ne	0x3b69c
000000000003b6a8	mov	w12, #0x18
000000000003b6ac	madd	x12, x11, x12, x10
000000000003b6b0	ldr	x13, [x12, #0x418]
000000000003b6b4	add	x12, x12, #0x418
000000000003b6b8	stp	xzr, x13, [x0, #0x30]
000000000003b6bc	cbz	x13, 0x3b6d8
000000000003b6c0	str	x0, [x13, #0x30]
000000000003b6c4	str	x0, [x12]
000000000003b6c8	mov	w9, #0x18
000000000003b6cc	madd	x9, x11, x9, x10
000000000003b6d0	ldr	x12, [x9, #0x420]
000000000003b6d4	b	0x3b858
000000000003b6d8	mov	w13, #0x18
000000000003b6dc	madd	x13, x11, x13, x10
000000000003b6e0	add	x13, x13, #0x410
000000000003b6e4	str	x0, [x13]
000000000003b6e8	str	x0, [x12]
000000000003b6ec	mov	w12, #0x18
000000000003b6f0	madd	x12, x11, x12, x10
000000000003b6f4	ldr	x12, [x12, #0x420]
000000000003b6f8	cmp	x12, #0x400
000000000003b6fc	b.hi	0x3b858
000000000003b700	add	x13, x12, #0x7
000000000003b704	lsr	x13, x13, #3
000000000003b708	add	x14, x9, x13, lsl #3
000000000003b70c	ldr	x14, [x14, #0x8]
000000000003b710	cmp	x14, x0
000000000003b714	b.eq	0x3b858
000000000003b718	cmp	x12, #0x9
000000000003b71c	b.hs	0x3b728
000000000003b720	mov	x10, #0x0
000000000003b724	b	0x3b7fc
000000000003b728	sub	x15, x13, #0x1
000000000003b72c	clz	x16, x15
000000000003b730	mov	w14, #0x3f
000000000003b734	sub	w16, w14, w16
000000000003b738	and	w16, w16, #0xff
000000000003b73c	sub	w17, w16, #0x2
000000000003b740	lsr	x15, x15, x17
000000000003b744	and	w15, w15, #0x3
000000000003b748	bfi	w15, w16, #2, #8
000000000003b74c	sub	w15, w15, #0x3
000000000003b750	add	w16, w13, #0x1
000000000003b754	and	w16, w16, #0xfffffffe
000000000003b758	cmp	x12, #0x40
000000000003b75c	csel	w16, w15, w16, hi
000000000003b760	add	x15, x9, #0x410
000000000003b764	mov	w17, #0x18
000000000003b768	madd	x10, x11, x17, x10
000000000003b76c	add	x10, x10, #0x3f8
000000000003b770	and	w11, w16, #0xff
000000000003b774	ldr	x16, [x10, #0x10]
000000000003b778	add	x17, x16, #0x7
000000000003b77c	lsr	x16, x17, #3
000000000003b780	cmp	x17, #0x10
000000000003b784	b.hs	0x3b790
000000000003b788	mov	w17, #0x1
000000000003b78c	b	0x3b7d8
000000000003b790	cmp	x17, #0x47
000000000003b794	b.hi	0x3b7a4
000000000003b798	add	w17, w16, #0x1
000000000003b79c	and	w17, w17, #0xfffffffe
000000000003b7a0	b	0x3b7d8
000000000003b7a4	cmp	x17, x8
000000000003b7a8	b.ls	0x3b7b4
000000000003b7ac	mov	w17, #0x49
000000000003b7b0	b	0x3b7d8
000000000003b7b4	sub	x17, x16, #0x1
000000000003b7b8	clz	x1, x17
000000000003b7bc	sub	w1, w14, w1
000000000003b7c0	and	w1, w1, #0xff
000000000003b7c4	sub	w2, w1, #0x2
000000000003b7c8	lsr	x17, x17, x2
000000000003b7cc	and	w17, w17, #0x3
000000000003b7d0	bfi	w17, w1, #2, #8
000000000003b7d4	sub	w17, w17, #0x3
000000000003b7d8	cmp	x10, x15
000000000003b7dc	b.ls	0x3b7ec
000000000003b7e0	sub	x10, x10, #0x18
000000000003b7e4	cmp	w11, w17, uxtb
000000000003b7e8	b.eq	0x3b774
000000000003b7ec	cmp	x16, x13
000000000003b7f0	csinc	x10, x13, x16, hs
000000000003b7f4	cmp	x10, x13
000000000003b7f8	b.hi	0x3b858
000000000003b7fc	sub	x11, x13, x10
000000000003b800	add	x11, x11, #0x1
000000000003b804	cmp	x11, #0x4
000000000003b808	b.lo	0x3b83c
000000000003b80c	and	x14, x11, #0xfffffffffffffffc
000000000003b810	dup.2d	v0, x0
000000000003b814	add	x15, x9, x10, lsl #3
000000000003b818	add	x15, x15, #0x18
000000000003b81c	mov	x16, x14
000000000003b820	stp	q0, q0, [x15, #-0x10]
000000000003b824	add	x15, x15, #0x20
000000000003b828	subs	x16, x16, #0x4
000000000003b82c	b.ne	0x3b820
000000000003b830	cmp	x11, x14
000000000003b834	b.eq	0x3b858
000000000003b838	add	x10, x10, x14
000000000003b83c	sub	x11, x13, x10
000000000003b840	add	x11, x11, #0x1
000000000003b844	add	x9, x9, x10, lsl #3
000000000003b848	add	x9, x9, #0x8
000000000003b84c	str	x0, [x9], #0x8
000000000003b850	subs	x11, x11, #0x1
000000000003b854	b.ne	0x3b84c
000000000003b858	add	x8, x8, #0x9
000000000003b85c	cmp	x12, x8
000000000003b860	cset	w8, eq
000000000003b864	ldrb	w9, [x0, #0x6]
000000000003b868	and	w9, w9, #0xfe
000000000003b86c	orr	w8, w9, w8
000000000003b870	strb	w8, [x0, #0x6]
000000000003b874	ret
_mi_segment_reclaim:
000000000003b878	sub	sp, sp, #0x70
000000000003b87c	stp	x28, x27, [sp, #0x10]
000000000003b880	stp	x26, x25, [sp, #0x20]
000000000003b884	stp	x24, x23, [sp, #0x30]
000000000003b888	stp	x22, x21, [sp, #0x40]
000000000003b88c	stp	x20, x19, [sp, #0x50]
000000000003b890	stp	x29, x30, [sp, #0x60]
000000000003b894	add	x29, sp, #0x60
000000000003b898	mov	x20, x4
000000000003b89c	mov	x23, x3
000000000003b8a0	mov	x21, x2
000000000003b8a4	mov	x22, x1
000000000003b8a8	mov	x19, x0
000000000003b8ac	cbz	x3, 0x3b8b4
000000000003b8b0	strb	wzr, [x23]
000000000003b8b4	bl	0x55dec ; symbol stub for: _pthread_self
000000000003b8b8	bl	0x55da4 ; symbol stub for: _pthread_mach_thread_np
000000000003b8bc	mov	w8, w0
000000000003b8c0	add	x9, x19, #0x68
000000000003b8c4	stlr	x8, [x9]
000000000003b8c8	str	xzr, [x19, #0x30]
000000000003b8cc	ldr	x8, [x19, #0x48]
000000000003b8d0	ldr	x9, [x20, #0x70]
000000000003b8d4	adr	x11, #0x5922c
000000000003b8d8	nop
000000000003b8dc	cmp	x9, x11
000000000003b8e0	cset	w10, hs
000000000003b8e4	add	x11, x11, #0x240
000000000003b8e8	cmp	x9, x11
000000000003b8ec	cset	w11, lo
000000000003b8f0	and	w10, w10, w11
000000000003b8f4	add	x12, x9, #0x18
000000000003b8f8	tbnz	x8, #0x3f, 0x3b96c
000000000003b8fc	cbz	w10, 0x3b9e0
000000000003b900	ldxr	x10, [x12]
000000000003b904	add	x11, x10, #0x1
000000000003b908	stxr	w13, x11, [x12]
000000000003b90c	cbnz	w13, 0x3b900
000000000003b910	add	x12, x9, #0x10
000000000003b914	ldr	x14, [x9, #0x10]
000000000003b918	b	0x3b92c
000000000003b91c	clrex
000000000003b920	mov	w15, #0x0
000000000003b924	mov	x14, x13
000000000003b928	cbnz	w15, 0x3b954
000000000003b92c	cmp	x14, x10
000000000003b930	b.gt	0x3b954
000000000003b934	ldxr	x13, [x12]
000000000003b938	cmp	x13, x14
000000000003b93c	b.ne	0x3b91c
000000000003b940	stlxr	w14, x11, [x12]
000000000003b944	cbnz	w14, 0x3b920
000000000003b948	mov	w15, #0x1
000000000003b94c	mov	x14, x13
000000000003b950	cbz	w15, 0x3b92c
000000000003b954	mov	w10, #0x1
000000000003b958	ldxr	x11, [x9]
000000000003b95c	add	x11, x11, #0x1
000000000003b960	stxr	w12, x11, [x9]
000000000003b964	cbnz	w12, 0x3b958
000000000003b968	b	0x3ba2c
000000000003b96c	cbz	w10, 0x3ba00
000000000003b970	ldxr	x10, [x12]
000000000003b974	sub	x10, x10, #0x1
000000000003b978	stxr	w11, x10, [x12]
000000000003b97c	cbnz	w11, 0x3b970
000000000003b980	add	x11, x9, #0x10
000000000003b984	ldr	x13, [x9, #0x10]
000000000003b988	b	0x3b99c
000000000003b98c	clrex
000000000003b990	mov	w14, #0x0
000000000003b994	mov	x13, x12
000000000003b998	cbnz	w14, 0x3b9c4
000000000003b99c	cmp	x13, x10
000000000003b9a0	b.ge	0x3b9c4
000000000003b9a4	ldxr	x12, [x11]
000000000003b9a8	cmp	x12, x13
000000000003b9ac	b.ne	0x3b98c
000000000003b9b0	stlxr	w13, x10, [x11]
000000000003b9b4	cbnz	w13, 0x3b990
000000000003b9b8	mov	w14, #0x1
000000000003b9bc	mov	x13, x12
000000000003b9c0	cbz	w14, 0x3b99c
000000000003b9c4	add	x9, x9, #0x8
000000000003b9c8	ldxr	x10, [x9]
000000000003b9cc	add	x10, x10, #0x1
000000000003b9d0	stxr	w11, x10, [x9]
000000000003b9d4	cbnz	w11, 0x3b9c8
000000000003b9d8	mov	x10, #-0x1
000000000003b9dc	b	0x3ba2c
000000000003b9e0	ldp	x12, x11, [x9, #0x10]
000000000003b9e4	add	x10, x11, #0x1
000000000003b9e8	str	x10, [x9, #0x18]
000000000003b9ec	cmp	x11, x12
000000000003b9f0	b.lt	0x3b9f8
000000000003b9f4	str	x10, [x9, #0x10]
000000000003b9f8	mov	w10, #0x1
000000000003b9fc	b	0x3ba20
000000000003ba00	ldp	x11, x10, [x9, #0x10]
000000000003ba04	sub	x10, x10, #0x1
000000000003ba08	str	x10, [x9, #0x18]
000000000003ba0c	cmp	x10, x11
000000000003ba10	b.le	0x3ba18
000000000003ba14	str	x10, [x9, #0x10]
000000000003ba18	add	x9, x9, #0x8
000000000003ba1c	mov	x10, #-0x1
000000000003ba20	ldr	x11, [x9]
000000000003ba24	add	x11, x11, #0x1
000000000003ba28	str	x11, [x9]
000000000003ba2c	ldp	x9, x11, [x20, #0x38]
000000000003ba30	add	x9, x9, x10
000000000003ba34	str	x9, [x20, #0x38]
000000000003ba38	cmp	x9, x11
000000000003ba3c	b.ls	0x3ba44
000000000003ba40	str	x9, [x20, #0x40]
000000000003ba44	ldp	x9, x10, [x20, #0x48]
000000000003ba48	add	x8, x9, x8
000000000003ba4c	str	x8, [x20, #0x48]
000000000003ba50	cmp	x8, x10
000000000003ba54	b.ls	0x3ba5c
000000000003ba58	str	x8, [x20, #0x50]
000000000003ba5c	ldr	x8, [x20, #0x70]
000000000003ba60	add	x9, x8, #0xc0
000000000003ba64	adr	x10, #0x5909c
000000000003ba68	nop
000000000003ba6c	cmp	x9, x10
000000000003ba70	adr	x26, #0x592d0
000000000003ba74	nop
000000000003ba78	ccmp	x9, x26, #0x2, hs
000000000003ba7c	b.lo	0x3baa8
000000000003ba80	ldp	x10, x9, [x8, #0xd0]
000000000003ba84	sub	x9, x9, #0x1
000000000003ba88	str	x9, [x8, #0xd8]
000000000003ba8c	cmp	x9, x10
000000000003ba90	b.le	0x3ba98
000000000003ba94	str	x9, [x8, #0xd0]
000000000003ba98	ldr	x9, [x8, #0xc8]
000000000003ba9c	add	x9, x9, #0x1
000000000003baa0	str	x9, [x8, #0xc8]
000000000003baa4	b	0x3bb14
000000000003baa8	add	x10, x8, #0xd8
000000000003baac	ldxr	x9, [x10]
000000000003bab0	sub	x9, x9, #0x1
000000000003bab4	stxr	w11, x9, [x10]
000000000003bab8	cbnz	w11, 0x3baac
000000000003babc	add	x10, x8, #0xd0
000000000003bac0	ldr	x12, [x8, #0xd0]
000000000003bac4	b	0x3bad8
000000000003bac8	clrex
000000000003bacc	mov	w13, #0x0
000000000003bad0	mov	x12, x11
000000000003bad4	cbnz	w13, 0x3bb00
000000000003bad8	cmp	x12, x9
000000000003badc	b.ge	0x3bb00
000000000003bae0	ldxr	x11, [x10]
000000000003bae4	cmp	x11, x12
000000000003bae8	b.ne	0x3bac8
000000000003baec	stlxr	w12, x9, [x10]
000000000003baf0	cbnz	w12, 0x3bacc
000000000003baf4	mov	w13, #0x1
000000000003baf8	mov	x12, x11
000000000003bafc	cbz	w13, 0x3bad8
000000000003bb00	add	x8, x8, #0xc8
000000000003bb04	ldxr	x9, [x8]
000000000003bb08	add	x9, x9, #0x1
000000000003bb0c	stxr	w10, x9, [x8]
000000000003bb10	cbnz	w10, 0x3bb04
000000000003bb14	ldr	x8, [x19, #0x40]
000000000003bb18	cbz	x8, 0x3be60
000000000003bb1c	cbz	x23, 0x3bccc
000000000003bb20	str	x23, [sp, #0x8]
000000000003bb24	mov	x27, #0x0
000000000003bb28	b	0x3bb4c
000000000003bb2c	mov	x0, x19
000000000003bb30	mov	x1, x24
000000000003bb34	mov	x2, x20
000000000003bb38	bl	_mi_segment_page_clear
000000000003bb3c	add	x27, x27, #0x1
000000000003bb40	ldr	x8, [x19, #0x40]
000000000003bb44	cmp	x27, x8
000000000003bb48	b.hs	0x3be60
000000000003bb4c	add	x8, x19, x27, lsl #6
000000000003bb50	ldrb	w9, [x8, #0x79]
000000000003bb54	tbz	w9, #0x0, 0x3bb3c
000000000003bb58	ldr	x9, [x19, #0x28]
000000000003bb5c	sub	x9, x9, #0x1
000000000003bb60	str	x9, [x19, #0x28]
000000000003bb64	ldr	x9, [x20, #0x70]
000000000003bb68	add	x10, x9, #0xe0
000000000003bb6c	adr	x11, #0x58f94
000000000003bb70	nop
000000000003bb74	cmp	x10, x11
000000000003bb78	ccmp	x10, x26, #0x2, hs
000000000003bb7c	b.lo	0x3bba8
000000000003bb80	ldp	x11, x10, [x9, #0xf0]
000000000003bb84	sub	x10, x10, #0x1
000000000003bb88	str	x10, [x9, #0xf8]
000000000003bb8c	cmp	x10, x11
000000000003bb90	b.le	0x3bb98
000000000003bb94	str	x10, [x9, #0xf0]
000000000003bb98	ldr	x10, [x9, #0xe8]
000000000003bb9c	add	x10, x10, #0x1
000000000003bba0	str	x10, [x9, #0xe8]
000000000003bba4	b	0x3bc14
000000000003bba8	add	x11, x9, #0xf8
000000000003bbac	ldxr	x10, [x11]
000000000003bbb0	sub	x10, x10, #0x1
000000000003bbb4	stxr	w12, x10, [x11]
000000000003bbb8	cbnz	w12, 0x3bbac
000000000003bbbc	add	x11, x9, #0xf0
000000000003bbc0	ldr	x13, [x9, #0xf0]
000000000003bbc4	b	0x3bbd8
000000000003bbc8	clrex
000000000003bbcc	mov	w14, #0x0
000000000003bbd0	mov	x13, x12
000000000003bbd4	cbnz	w14, 0x3bc00
000000000003bbd8	cmp	x13, x10
000000000003bbdc	b.ge	0x3bc00
000000000003bbe0	ldxr	x12, [x11]
000000000003bbe4	cmp	x12, x13
000000000003bbe8	b.ne	0x3bbc8
000000000003bbec	stlxr	w13, x10, [x11]
000000000003bbf0	cbnz	w13, 0x3bbcc
000000000003bbf4	mov	w14, #0x1
000000000003bbf8	mov	x13, x12
000000000003bbfc	cbz	w14, 0x3bbd8
000000000003bc00	add	x9, x9, #0xe8
000000000003bc04	ldxr	x10, [x9]
000000000003bc08	add	x10, x10, #0x1
000000000003bc0c	stxr	w11, x10, [x9]
000000000003bc10	cbnz	w11, 0x3bc04
000000000003bc14	add	x24, x8, #0x78
000000000003bc18	add	x8, x19, x27, lsl #6
000000000003bc1c	add	x9, x8, #0xa0
000000000003bc20	stlr	x22, [x9]
000000000003bc24	add	x28, x8, #0x98
000000000003bc28	ldar	x8, [x28]
000000000003bc2c	ands	w9, w8, #0x3
000000000003bc30	b.eq	0x3bc68
000000000003bc34	cmp	w9, #0x1
000000000003bc38	b.eq	0x3bc60
000000000003bc3c	ldxr	x9, [x28]
000000000003bc40	cmp	x9, x8
000000000003bc44	b.ne	0x3bc58
000000000003bc48	and	x8, x8, #0xfffffffffffffffc
000000000003bc4c	stlxr	w9, x8, [x28]
000000000003bc50	cbnz	w9, 0x3bc28
000000000003bc54	b	0x3bc68
000000000003bc58	clrex
000000000003bc5c	b	0x3bc28
000000000003bc60	wfe
000000000003bc64	b	0x3bc28
000000000003bc68	mov	x0, x24
000000000003bc6c	mov	w1, #0x0
000000000003bc70	bl	__mi_page_free_collect
000000000003bc74	add	x25, x19, x27, lsl #6
000000000003bc78	mov	x23, x25
000000000003bc7c	ldr	w8, [x23, #0x88]!
000000000003bc80	cbz	w8, 0x3bb2c
000000000003bc84	mov	x0, x22
000000000003bc88	mov	x1, x24
000000000003bc8c	bl	__mi_page_reclaim
000000000003bc90	ldr	w8, [x25, #0x8c]
000000000003bc94	cmp	x8, x21
000000000003bc98	b.ne	0x3bb3c
000000000003bc9c	ldr	w8, [x23]
000000000003bca0	add	x9, x19, x27, lsl #6
000000000003bca4	ldrh	w9, [x9, #0x7c]
000000000003bca8	cmp	w8, w9
000000000003bcac	b.lo	0x3bcbc
000000000003bcb0	ldr	x8, [x28]
000000000003bcb4	cmp	x8, #0x4
000000000003bcb8	b.lo	0x3bb3c
000000000003bcbc	ldr	x8, [sp, #0x8]
000000000003bcc0	mov	w9, #0x1
000000000003bcc4	strb	w9, [x8]
000000000003bcc8	b	0x3bb3c
000000000003bccc	mov	x24, #0x0
000000000003bcd0	b	0x3bcf4
000000000003bcd4	mov	x0, x19
000000000003bcd8	mov	x1, x23
000000000003bcdc	mov	x2, x20
000000000003bce0	bl	_mi_segment_page_clear
000000000003bce4	add	x24, x24, #0x1
000000000003bce8	ldr	x8, [x19, #0x40]
000000000003bcec	cmp	x24, x8
000000000003bcf0	b.hs	0x3be60
000000000003bcf4	add	x8, x19, x24, lsl #6
000000000003bcf8	ldrb	w9, [x8, #0x79]
000000000003bcfc	tbz	w9, #0x0, 0x3bce4
000000000003bd00	ldr	x9, [x19, #0x28]
000000000003bd04	sub	x9, x9, #0x1
000000000003bd08	str	x9, [x19, #0x28]
000000000003bd0c	ldr	x9, [x20, #0x70]
000000000003bd10	add	x10, x9, #0xe0
000000000003bd14	adr	x11, #0x58dec
000000000003bd18	nop
000000000003bd1c	cmp	x10, x11
000000000003bd20	ccmp	x10, x26, #0x2, hs
000000000003bd24	b.lo	0x3bd50
000000000003bd28	ldp	x11, x10, [x9, #0xf0]
000000000003bd2c	sub	x10, x10, #0x1
000000000003bd30	str	x10, [x9, #0xf8]
000000000003bd34	cmp	x10, x11
000000000003bd38	b.le	0x3bd40
000000000003bd3c	str	x10, [x9, #0xf0]
000000000003bd40	ldr	x10, [x9, #0xe8]
000000000003bd44	add	x10, x10, #0x1
000000000003bd48	str	x10, [x9, #0xe8]
000000000003bd4c	b	0x3bdbc
000000000003bd50	add	x11, x9, #0xf8
000000000003bd54	ldxr	x10, [x11]
000000000003bd58	sub	x10, x10, #0x1
000000000003bd5c	stxr	w12, x10, [x11]
000000000003bd60	cbnz	w12, 0x3bd54
000000000003bd64	add	x11, x9, #0xf0
000000000003bd68	ldr	x13, [x9, #0xf0]
000000000003bd6c	b	0x3bd80
000000000003bd70	clrex
000000000003bd74	mov	w14, #0x0
000000000003bd78	mov	x13, x12
000000000003bd7c	cbnz	w14, 0x3bda8
000000000003bd80	cmp	x13, x10
000000000003bd84	b.ge	0x3bda8
000000000003bd88	ldxr	x12, [x11]
000000000003bd8c	cmp	x12, x13
000000000003bd90	b.ne	0x3bd70
000000000003bd94	stlxr	w13, x10, [x11]
000000000003bd98	cbnz	w13, 0x3bd74
000000000003bd9c	mov	w14, #0x1
000000000003bda0	mov	x13, x12
000000000003bda4	cbz	w14, 0x3bd80
000000000003bda8	add	x9, x9, #0xe8
000000000003bdac	ldxr	x10, [x9]
000000000003bdb0	add	x10, x10, #0x1
000000000003bdb4	stxr	w11, x10, [x9]
000000000003bdb8	cbnz	w11, 0x3bdac
000000000003bdbc	add	x23, x8, #0x78
000000000003bdc0	add	x8, x19, x24, lsl #6
000000000003bdc4	add	x9, x8, #0xa0
000000000003bdc8	stlr	x22, [x9]
000000000003bdcc	add	x27, x8, #0x98
000000000003bdd0	ldar	x8, [x27]
000000000003bdd4	ands	w9, w8, #0x3
000000000003bdd8	b.eq	0x3be10
000000000003bddc	cmp	w9, #0x1
000000000003bde0	b.eq	0x3be08
000000000003bde4	ldxr	x9, [x27]
000000000003bde8	cmp	x9, x8
000000000003bdec	b.ne	0x3be00
000000000003bdf0	and	x8, x8, #0xfffffffffffffffc
000000000003bdf4	stlxr	w9, x8, [x27]
000000000003bdf8	cbnz	w9, 0x3bdd0
000000000003bdfc	b	0x3be10
000000000003be00	clrex
000000000003be04	b	0x3bdd0
000000000003be08	wfe
000000000003be0c	b	0x3bdd0
000000000003be10	mov	x0, x23
000000000003be14	mov	w1, #0x0
000000000003be18	bl	__mi_page_free_collect
000000000003be1c	add	x25, x19, x24, lsl #6
000000000003be20	mov	x28, x25
000000000003be24	ldr	w8, [x28, #0x88]!
000000000003be28	cbz	w8, 0x3bcd4
000000000003be2c	mov	x0, x22
000000000003be30	mov	x1, x23
000000000003be34	bl	__mi_page_reclaim
000000000003be38	ldr	w8, [x25, #0x8c]
000000000003be3c	cmp	x8, x21
000000000003be40	b.ne	0x3bce4
000000000003be44	ldr	w8, [x28]
000000000003be48	add	x9, x19, x24, lsl #6
000000000003be4c	ldrh	w9, [x9, #0x7c]
000000000003be50	cmp	w8, w9
000000000003be54	b.lo	0x3bce4
000000000003be58	ldr	xzr, [x27]
000000000003be5c	b	0x3bce4
000000000003be60	ldr	x10, [x19, #0x38]
000000000003be64	cbz	x10, 0x3beac
000000000003be68	ldr	w9, [x19, #0x70]
000000000003be6c	cmp	x10, x8
000000000003be70	ccmp	w9, #0x1, #0x2, lo
000000000003be74	b.hi	0x3bec0
000000000003be78	add	x8, x20, #0x10
000000000003be7c	cmp	w9, #0x0
000000000003be80	csel	x10, xzr, x20, ne
000000000003be84	cmp	w9, #0x1
000000000003be88	csel	x8, x8, x10, eq
000000000003be8c	ldr	x9, [x8, #0x8]
000000000003be90	stp	xzr, x9, [x19, #0x18]
000000000003be94	add	x10, x9, #0x18
000000000003be98	cmp	x9, #0x0
000000000003be9c	csel	x9, x8, x10, eq
000000000003bea0	str	x19, [x9]
000000000003bea4	str	x19, [x8, #0x8]
000000000003bea8	b	0x3bec0
000000000003beac	mov	x0, x19
000000000003beb0	mov	w1, #0x0
000000000003beb4	mov	x2, x20
000000000003beb8	bl	_mi_segment_free
000000000003bebc	mov	x19, #0x0
000000000003bec0	mov	x0, x19
000000000003bec4	ldp	x29, x30, [sp, #0x60]
000000000003bec8	ldp	x20, x19, [sp, #0x50]
000000000003becc	ldp	x22, x21, [sp, #0x40]
000000000003bed0	ldp	x24, x23, [sp, #0x30]
000000000003bed4	ldp	x26, x25, [sp, #0x20]
000000000003bed8	ldp	x28, x27, [sp, #0x10]
000000000003bedc	add	sp, sp, #0x70
000000000003bee0	ret
__mi_page_reclaim:
000000000003bee4	ldr	w8, [x1, #0x14]
000000000003bee8	ubfx	x9, x8, #26, #6
000000000003beec	cbnz	w9, 0x3c120
000000000003bef0	mov	x10, x8
000000000003bef4	mov	w8, #0x7
000000000003bef8	movk	w8, #0x20, lsl #16
000000000003befc	add	x10, x10, #0x7
000000000003bf00	cmp	x10, #0x10
000000000003bf04	b.hs	0x3bf10
000000000003bf08	mov	w9, #0x1
000000000003bf0c	b	0x3bf60
000000000003bf10	lsr	x9, x10, #3
000000000003bf14	cmp	x10, #0x47
000000000003bf18	b.hi	0x3bf28
000000000003bf1c	add	w9, w9, #0x1
000000000003bf20	and	x9, x9, #0xfe
000000000003bf24	b	0x3bf60
000000000003bf28	cmp	x10, x8
000000000003bf2c	b.ls	0x3bf38
000000000003bf30	mov	w9, #0x49
000000000003bf34	b	0x3bf60
000000000003bf38	sub	x9, x9, #0x1
000000000003bf3c	clz	x10, x9
000000000003bf40	mov	w11, #0x3f
000000000003bf44	sub	w10, w11, w10
000000000003bf48	and	w10, w10, #0xff
000000000003bf4c	sub	w11, w10, #0x2
000000000003bf50	lsr	x9, x9, x11
000000000003bf54	and	w9, w9, #0x3
000000000003bf58	bfi	w9, w10, #2, #8
000000000003bf5c	add	w9, w9, #0xfd
000000000003bf60	and	x12, x9, #0xff
000000000003bf64	mov	w9, #0x18
000000000003bf68	madd	x9, x12, x9, x0
000000000003bf6c	ldr	x10, [x9, #0x420]
000000000003bf70	add	x11, x8, #0x9
000000000003bf74	cmp	x10, x11
000000000003bf78	cset	w10, eq
000000000003bf7c	ldrb	w11, [x1, #0x6]
000000000003bf80	and	w11, w11, #0xfe
000000000003bf84	orr	w10, w11, w10
000000000003bf88	strb	w10, [x1, #0x6]
000000000003bf8c	ldr	x10, [x9, #0x410]
000000000003bf90	stp	x10, xzr, [x1, #0x30]
000000000003bf94	add	x11, x10, #0x38
000000000003bf98	add	x13, x9, #0x418
000000000003bf9c	cmp	x10, #0x0
000000000003bfa0	csel	x10, x13, x11, eq
000000000003bfa4	str	x1, [x10]
000000000003bfa8	str	x1, [x9, #0x410]
000000000003bfac	ldr	x11, [x9, #0x420]
000000000003bfb0	cmp	x11, #0x400
000000000003bfb4	b.hi	0x3c110
000000000003bfb8	add	x9, x11, #0x7
000000000003bfbc	lsr	x9, x9, #3
000000000003bfc0	add	x10, x0, x9, lsl #3
000000000003bfc4	ldr	x10, [x10, #0x8]
000000000003bfc8	cmp	x10, x1
000000000003bfcc	b.eq	0x3c110
000000000003bfd0	cmp	x11, #0x9
000000000003bfd4	b.hs	0x3bfe0
000000000003bfd8	mov	x8, #0x0
000000000003bfdc	b	0x3c0b4
000000000003bfe0	sub	x13, x9, #0x1
000000000003bfe4	clz	x14, x13
000000000003bfe8	mov	w10, #0x3f
000000000003bfec	sub	w14, w10, w14
000000000003bff0	and	w14, w14, #0xff
000000000003bff4	sub	w15, w14, #0x2
000000000003bff8	lsr	x13, x13, x15
000000000003bffc	and	w13, w13, #0x3
000000000003c000	bfi	w13, w14, #2, #8
000000000003c004	sub	w13, w13, #0x3
000000000003c008	add	w14, w9, #0x1
000000000003c00c	and	w14, w14, #0xfffffffe
000000000003c010	cmp	x11, #0x40
000000000003c014	csel	w13, w13, w14, hi
000000000003c018	add	x11, x0, #0x410
000000000003c01c	mov	w14, #0x18
000000000003c020	madd	x12, x12, x14, x0
000000000003c024	add	x12, x12, #0x3f8
000000000003c028	and	w13, w13, #0xff
000000000003c02c	ldr	x14, [x12, #0x10]
000000000003c030	add	x15, x14, #0x7
000000000003c034	lsr	x14, x15, #3
000000000003c038	cmp	x15, #0x10
000000000003c03c	b.hs	0x3c048
000000000003c040	mov	w15, #0x1
000000000003c044	b	0x3c090
000000000003c048	cmp	x15, #0x47
000000000003c04c	b.hi	0x3c05c
000000000003c050	add	w15, w14, #0x1
000000000003c054	and	w15, w15, #0xfffffffe
000000000003c058	b	0x3c090
000000000003c05c	cmp	x15, x8
000000000003c060	b.ls	0x3c06c
000000000003c064	mov	w15, #0x49
000000000003c068	b	0x3c090
000000000003c06c	sub	x15, x14, #0x1
000000000003c070	clz	x16, x15
000000000003c074	sub	w16, w10, w16
000000000003c078	and	w16, w16, #0xff
000000000003c07c	sub	w17, w16, #0x2
000000000003c080	lsr	x15, x15, x17
000000000003c084	and	w15, w15, #0x3
000000000003c088	bfi	w15, w16, #2, #8
000000000003c08c	sub	w15, w15, #0x3
000000000003c090	cmp	x12, x11
000000000003c094	b.ls	0x3c0a4
000000000003c098	sub	x12, x12, #0x18
000000000003c09c	cmp	w13, w15, uxtb
000000000003c0a0	b.eq	0x3c02c
000000000003c0a4	cmp	x14, x9
000000000003c0a8	csinc	x8, x9, x14, hs
000000000003c0ac	cmp	x8, x9
000000000003c0b0	b.hi	0x3c110
000000000003c0b4	sub	x10, x9, x8
000000000003c0b8	add	x10, x10, #0x1
000000000003c0bc	cmp	x10, #0x4
000000000003c0c0	b.lo	0x3c0f4
000000000003c0c4	and	x11, x10, #0xfffffffffffffffc
000000000003c0c8	dup.2d	v0, x1
000000000003c0cc	add	x12, x0, x8, lsl #3
000000000003c0d0	add	x12, x12, #0x18
000000000003c0d4	mov	x13, x11
000000000003c0d8	stp	q0, q0, [x12, #-0x10]
000000000003c0dc	add	x12, x12, #0x20
000000000003c0e0	subs	x13, x13, #0x4
000000000003c0e4	b.ne	0x3c0d8
000000000003c0e8	cmp	x10, x11
000000000003c0ec	b.eq	0x3c110
000000000003c0f0	add	x8, x8, x11
000000000003c0f4	sub	x9, x9, x8
000000000003c0f8	add	x9, x9, #0x1
000000000003c0fc	add	x8, x0, x8, lsl #3
000000000003c100	add	x8, x8, #0x8
000000000003c104	str	x1, [x8], #0x8
000000000003c108	subs	x9, x9, #0x1
000000000003c10c	b.ne	0x3c104
000000000003c110	ldr	x8, [x0, #0xbc8]
000000000003c114	add	x8, x8, #0x1
000000000003c118	str	x8, [x0, #0xbc8]
000000000003c11c	ret
000000000003c120	and	x9, x1, #0xffffffffffc00000
000000000003c124	ldr	w11, [x9, #0x70]
000000000003c128	cmp	w11, #0x3
000000000003c12c	b.ne	0x3c138
000000000003c130	ldr	x12, [x9, #0x48]
000000000003c134	b	0x3c144
000000000003c138	ldr	x10, [x9, #0x60]
000000000003c13c	mov	w12, #0x1
000000000003c140	lsl	x12, x12, x10
000000000003c144	ldrb	w13, [x1]
000000000003c148	cbz	x13, 0x3c154
000000000003c14c	mov	x10, x12
000000000003c150	b	0x3bef4
000000000003c154	ldr	x14, [x9, #0x50]
000000000003c158	sub	x10, x12, x14
000000000003c15c	cmp	w11, #0x1
000000000003c160	ccmp	w8, #0x0, #0x4, ls
000000000003c164	b.eq	0x3bef4
000000000003c168	madd	x9, x12, x13, x9
000000000003c16c	add	x9, x9, x14
000000000003c170	udiv	x11, x9, x8
000000000003c174	neg	x9, x9
000000000003c178	madd	x9, x11, x8, x9
000000000003c17c	add	x9, x8, x9
000000000003c180	cmp	x9, x8
000000000003c184	csel	x8, x9, xzr, lo
000000000003c188	sub	x10, x10, x8
000000000003c18c	b	0x3bef4
_mi_free:
000000000003c190	stp	x20, x19, [sp, #-0x20]!
000000000003c194	stp	x29, x30, [sp, #0x10]
000000000003c198	add	x29, sp, #0x10
000000000003c19c	ands	x20, x0, #0xffffffffffc00000
000000000003c1a0	b.eq	0x3c1fc
000000000003c1a4	mov	x19, x0
000000000003c1a8	bl	0x55dec ; symbol stub for: _pthread_self
000000000003c1ac	bl	0x55da4 ; symbol stub for: _pthread_mach_thread_np
000000000003c1b0	mov	w8, w0
000000000003c1b4	ldr	x9, [x20, #0x60]
000000000003c1b8	add	x10, x20, #0x68
000000000003c1bc	ldar	x11, [x10]
000000000003c1c0	cmp	x11, x8
000000000003c1c4	b.ne	0x3c208
000000000003c1c8	and	x11, x19, #0x3fffff
000000000003c1cc	lsr	x11, x11, x9
000000000003c1d0	add	x9, x20, x11, lsl #6
000000000003c1d4	ldrb	w12, [x9, #0x7e]
000000000003c1d8	cbnz	w12, 0x3c208
000000000003c1dc	add	x8, x20, x11, lsl #6
000000000003c1e0	ldr	x10, [x8, #0x90]
000000000003c1e4	str	x10, [x19]
000000000003c1e8	str	x19, [x8, #0x90]
000000000003c1ec	ldr	w10, [x8, #0x88]
000000000003c1f0	subs	w10, w10, #0x1
000000000003c1f4	str	w10, [x8, #0x88]
000000000003c1f8	b.eq	0x3c228
000000000003c1fc	ldp	x29, x30, [sp, #0x10]
000000000003c200	ldp	x20, x19, [sp], #0x20
000000000003c204	ret
000000000003c208	ldar	x9, [x10]
000000000003c20c	cmp	x9, x8
000000000003c210	cset	w1, eq
000000000003c214	mov	x0, x20
000000000003c218	mov	x2, x19
000000000003c21c	ldp	x29, x30, [sp, #0x10]
000000000003c220	ldp	x20, x19, [sp], #0x20
000000000003c224	b	_mi_free_generic
000000000003c228	add	x0, x9, #0x78
000000000003c22c	ldp	x29, x30, [sp, #0x10]
000000000003c230	ldp	x20, x19, [sp], #0x20
000000000003c234	b	__mi_page_retire
_mi_free_generic:
000000000003c238	mov	x8, x0
000000000003c23c	sub	x9, x2, x0
000000000003c240	ldr	x12, [x0, #0x60]
000000000003c244	lsr	x10, x9, x12
000000000003c248	add	x11, x0, x10, lsl #6
000000000003c24c	mov	x9, x11
000000000003c250	ldrb	w13, [x9, #0x7e]!
000000000003c254	sub	x0, x9, #0x6
000000000003c258	tbz	w13, #0x1, 0x3c2e4
000000000003c25c	ldr	w11, [x11, #0x8c]
000000000003c260	ldr	w14, [x8, #0x70]
000000000003c264	cmp	w14, #0x3
000000000003c268	b.ne	0x3c280
000000000003c26c	ldr	x12, [x8, #0x48]
000000000003c270	ldrb	w13, [x0]
000000000003c274	madd	x12, x12, x13, x8
000000000003c278	cbnz	x13, 0x3c2c4
000000000003c27c	b	0x3c294
000000000003c280	mov	w13, #0x1
000000000003c284	lsl	x12, x13, x12
000000000003c288	ldrb	w13, [x0]
000000000003c28c	madd	x12, x12, x13, x8
000000000003c290	cbnz	x13, 0x3c2c4
000000000003c294	ldr	x15, [x8, #0x50]
000000000003c298	add	x12, x12, x15
000000000003c29c	cmp	w14, #0x1
000000000003c2a0	b.hi	0x3c2c4
000000000003c2a4	cbz	w11, 0x3c2c4
000000000003c2a8	udiv	x14, x12, x11
000000000003c2ac	neg	x15, x12
000000000003c2b0	madd	x14, x14, x11, x15
000000000003c2b4	add	x14, x11, x14
000000000003c2b8	add	x15, x12, x14
000000000003c2bc	cmp	x14, x11
000000000003c2c0	csel	x12, x15, x12, lo
000000000003c2c4	ubfx	x14, x11, #26, #6
000000000003c2c8	cbnz	w14, 0x3c324
000000000003c2cc	mov	x15, x11
000000000003c2d0	sub	x11, x2, x12
000000000003c2d4	udiv	x12, x11, x15
000000000003c2d8	neg	x11, x11
000000000003c2dc	madd	x11, x12, x15, x11
000000000003c2e0	add	x2, x2, x11
000000000003c2e4	cbz	w1, 0x3c314
000000000003c2e8	add	x8, x8, x10, lsl #6
000000000003c2ec	ldr	x10, [x8, #0x90]
000000000003c2f0	str	x10, [x2]
000000000003c2f4	str	x2, [x8, #0x90]
000000000003c2f8	ldr	w10, [x8, #0x88]
000000000003c2fc	subs	w10, w10, #0x1
000000000003c300	str	w10, [x8, #0x88]
000000000003c304	b.eq	0x3c31c
000000000003c308	ldrb	w8, [x9]
000000000003c30c	tbnz	w8, #0x0, 0x3c320
000000000003c310	ret
000000000003c314	mov	x1, x2
000000000003c318	b	__mi_free_block_mt
000000000003c31c	b	__mi_page_retire
000000000003c320	b	__mi_page_unfull
000000000003c324	and	x14, x0, #0xffffffffffc00000
000000000003c328	ldr	w16, [x14, #0x70]
000000000003c32c	cmp	w16, #0x3
000000000003c330	b.ne	0x3c33c
000000000003c334	ldr	x17, [x14, #0x48]
000000000003c338	b	0x3c348
000000000003c33c	ldr	x15, [x14, #0x60]
000000000003c340	mov	w17, #0x1
000000000003c344	lsl	x17, x17, x15
000000000003c348	cbz	w13, 0x3c354
000000000003c34c	mov	x15, x17
000000000003c350	b	0x3c2d0
000000000003c354	ldr	x3, [x14, #0x50]
000000000003c358	sub	x15, x17, x3
000000000003c35c	cmp	w16, #0x1
000000000003c360	ccmp	w11, #0x0, #0x4, ls
000000000003c364	b.eq	0x3c2d0
000000000003c368	madd	x13, x17, x13, x14
000000000003c36c	add	x13, x13, x3
000000000003c370	udiv	x14, x13, x11
000000000003c374	neg	x13, x13
000000000003c378	madd	x13, x14, x11, x13
000000000003c37c	add	x13, x11, x13
000000000003c380	cmp	x13, x11
000000000003c384	csel	x11, x13, xzr, lo
000000000003c388	sub	x15, x15, x11
000000000003c38c	b	0x3c2d0
__mi_free_block_mt:
000000000003c390	stp	x22, x21, [sp, #-0x30]!
000000000003c394	stp	x20, x19, [sp, #0x10]
000000000003c398	stp	x29, x30, [sp, #0x20]
000000000003c39c	add	x29, sp, #0x20
000000000003c3a0	mov	x20, x1
000000000003c3a4	mov	x19, x0
000000000003c3a8	and	x21, x0, #0xffffffffffc00000
000000000003c3ac	ldr	w8, [x21, #0x70]
000000000003c3b0	cmp	w8, #0x3
000000000003c3b4	b.ne	0x3c4b0
000000000003c3b8	bl	_mi_thread_init
000000000003c3bc	adrp	x0, 62 ; 0x7a000
000000000003c3c0	add	x0, x0, #0x4f8
000000000003c3c4	ldr	x8, [x0]
000000000003c3c8	blr	x8
000000000003c3cc	ldr	x8, [x0]
000000000003c3d0	add	x9, x21, #0x68
000000000003c3d4	ldr	x10, [x8, #0xb20]
000000000003c3d8	ldaxr	x11, [x9]
000000000003c3dc	cbnz	x11, 0x3c54c
000000000003c3e0	stlxr	w11, x10, [x9]
000000000003c3e4	cbnz	w11, 0x3c3d8
000000000003c3e8	ldr	x9, [x19, #0x8]
000000000003c3ec	str	x9, [x20]
000000000003c3f0	str	x20, [x19, #0x8]
000000000003c3f4	ldr	w9, [x19, #0x10]
000000000003c3f8	sub	w9, w9, #0x1
000000000003c3fc	str	w9, [x19, #0x10]
000000000003c400	ldrb	w9, [x19, #0x7]
000000000003c404	and	w9, w9, #0xfe
000000000003c408	strb	w9, [x19, #0x7]
000000000003c40c	ldr	x8, [x8]
000000000003c410	ldr	x9, [x21, #0x48]
000000000003c414	ldr	x10, [x8, #0x90]
000000000003c418	adr	x11, #0x586e8
000000000003c41c	nop
000000000003c420	cmp	x10, x11
000000000003c424	cset	w12, hs
000000000003c428	add	x11, x11, #0x240
000000000003c42c	cmp	x10, x11
000000000003c430	cset	w11, lo
000000000003c434	and	w11, w12, w11
000000000003c438	add	x13, x10, #0x18
000000000003c43c	tbnz	x9, #0x3f, 0x3c560
000000000003c440	cbz	w11, 0x3c5d4
000000000003c444	ldxr	x11, [x13]
000000000003c448	add	x12, x11, #0x1
000000000003c44c	stxr	w14, x12, [x13]
000000000003c450	cbnz	w14, 0x3c444
000000000003c454	add	x13, x10, #0x10
000000000003c458	ldr	x15, [x10, #0x10]
000000000003c45c	b	0x3c470
000000000003c460	clrex
000000000003c464	mov	w16, #0x0
000000000003c468	mov	x15, x14
000000000003c46c	cbnz	w16, 0x3c498
000000000003c470	cmp	x15, x11
000000000003c474	b.gt	0x3c498
000000000003c478	ldxr	x14, [x13]
000000000003c47c	cmp	x14, x15
000000000003c480	b.ne	0x3c460
000000000003c484	stlxr	w15, x12, [x13]
000000000003c488	cbnz	w15, 0x3c464
000000000003c48c	mov	w16, #0x1
000000000003c490	mov	x15, x14
000000000003c494	cbz	w16, 0x3c470
000000000003c498	mov	w11, #0x1
000000000003c49c	ldxr	x12, [x10]
000000000003c4a0	add	x12, x12, #0x1
000000000003c4a4	stxr	w13, x12, [x10]
000000000003c4a8	cbnz	w13, 0x3c49c
000000000003c4ac	b	0x3c620
000000000003c4b0	add	x8, x19, #0x20
000000000003c4b4	ldr	x10, [x19, #0x20]
000000000003c4b8	b	0x3c4cc
000000000003c4bc	clrex
000000000003c4c0	mov	w11, #0x0
000000000003c4c4	mov	x10, x9
000000000003c4c8	tbnz	w11, #0x0, 0x3c550
000000000003c4cc	and	x11, x10, #0xfffffffffffffffc
000000000003c4d0	ands	x12, x10, #0x3
000000000003c4d4	b.eq	0x3c504
000000000003c4d8	str	x11, [x20]
000000000003c4dc	ldxr	x9, [x8]
000000000003c4e0	cmp	x9, x10
000000000003c4e4	b.ne	0x3c4bc
000000000003c4e8	orr	x10, x12, x20
000000000003c4ec	stlxr	w11, x10, [x8]
000000000003c4f0	cbnz	w11, 0x3c4c0
000000000003c4f4	mov	w11, #0x1
000000000003c4f8	mov	x10, x9
000000000003c4fc	tbz	w11, #0x0, 0x3c4cc
000000000003c500	b	0x3c550
000000000003c504	ldxr	x9, [x8]
000000000003c508	cmp	x9, x10
000000000003c50c	b.ne	0x3c524
000000000003c510	orr	x10, x11, #0x1
000000000003c514	stlxr	w11, x10, [x8]
000000000003c518	cbnz	w11, 0x3c528
000000000003c51c	mov	w11, #0x1
000000000003c520	b	0x3c52c
000000000003c524	clrex
000000000003c528	mov	w11, #0x0
000000000003c52c	mov	x10, x9
000000000003c530	tbz	w11, #0x0, 0x3c4cc
000000000003c534	add	x9, x19, #0x28
000000000003c538	ldar	x10, [x9]
000000000003c53c	cbz	x10, 0x3c6cc
000000000003c540	add	x9, x10, #0xb18
000000000003c544	ldr	x11, [x10, #0xb18]
000000000003c548	b	0x3c6a8
000000000003c54c	clrex
000000000003c550	ldp	x29, x30, [sp, #0x20]
000000000003c554	ldp	x20, x19, [sp, #0x10]
000000000003c558	ldp	x22, x21, [sp], #0x30
000000000003c55c	ret
000000000003c560	cbz	w11, 0x3c5f4
000000000003c564	ldxr	x11, [x13]
000000000003c568	sub	x11, x11, #0x1
000000000003c56c	stxr	w12, x11, [x13]
000000000003c570	cbnz	w12, 0x3c564
000000000003c574	add	x12, x10, #0x10
000000000003c578	ldr	x14, [x10, #0x10]
000000000003c57c	b	0x3c590
000000000003c580	clrex
000000000003c584	mov	w15, #0x0
000000000003c588	mov	x14, x13
000000000003c58c	cbnz	w15, 0x3c5b8
000000000003c590	cmp	x14, x11
000000000003c594	b.ge	0x3c5b8
000000000003c598	ldxr	x13, [x12]
000000000003c59c	cmp	x13, x14
000000000003c5a0	b.ne	0x3c580
000000000003c5a4	stlxr	w14, x11, [x12]
000000000003c5a8	cbnz	w14, 0x3c584
000000000003c5ac	mov	w15, #0x1
000000000003c5b0	mov	x14, x13
000000000003c5b4	cbz	w15, 0x3c590
000000000003c5b8	add	x10, x10, #0x8
000000000003c5bc	ldxr	x11, [x10]
000000000003c5c0	add	x11, x11, #0x1
000000000003c5c4	stxr	w12, x11, [x10]
000000000003c5c8	cbnz	w12, 0x3c5bc
000000000003c5cc	mov	x11, #-0x1
000000000003c5d0	b	0x3c620
000000000003c5d4	ldp	x13, x12, [x10, #0x10]
000000000003c5d8	add	x11, x12, #0x1
000000000003c5dc	str	x11, [x10, #0x18]
000000000003c5e0	cmp	x12, x13
000000000003c5e4	b.lt	0x3c5ec
000000000003c5e8	str	x11, [x10, #0x10]
000000000003c5ec	mov	w11, #0x1
000000000003c5f0	b	0x3c614
000000000003c5f4	ldp	x12, x11, [x10, #0x10]
000000000003c5f8	sub	x11, x11, #0x1
000000000003c5fc	str	x11, [x10, #0x18]
000000000003c600	cmp	x11, x12
000000000003c604	b.le	0x3c60c
000000000003c608	str	x11, [x10, #0x10]
000000000003c60c	add	x10, x10, #0x8
000000000003c610	mov	x11, #-0x1
000000000003c614	ldr	x12, [x10]
000000000003c618	add	x12, x12, #0x1
000000000003c61c	str	x12, [x10]
000000000003c620	add	x2, x8, #0x20
000000000003c624	ldp	x10, x12, [x8, #0x58]
000000000003c628	add	x10, x10, x11
000000000003c62c	str	x10, [x8, #0x58]
000000000003c630	cmp	x10, x12
000000000003c634	b.hi	0x3c664
000000000003c638	ldp	x10, x11, [x8, #0x68]
000000000003c63c	add	x9, x10, x9
000000000003c640	str	x9, [x8, #0x68]
000000000003c644	cmp	x9, x11
000000000003c648	b.hi	0x3c67c
000000000003c64c	mov	x0, x19
000000000003c650	mov	w1, #0x1
000000000003c654	ldp	x29, x30, [sp, #0x20]
000000000003c658	ldp	x20, x19, [sp, #0x10]
000000000003c65c	ldp	x22, x21, [sp], #0x30
000000000003c660	b	__mi_segment_page_free
000000000003c664	str	x10, [x8, #0x60]
000000000003c668	ldp	x10, x11, [x8, #0x68]
000000000003c66c	add	x9, x10, x9
000000000003c670	str	x9, [x8, #0x68]
000000000003c674	cmp	x9, x11
000000000003c678	b.ls	0x3c64c
000000000003c67c	str	x9, [x8, #0x70]
000000000003c680	mov	x0, x19
000000000003c684	mov	w1, #0x1
000000000003c688	ldp	x29, x30, [sp, #0x20]
000000000003c68c	ldp	x20, x19, [sp, #0x10]
000000000003c690	ldp	x22, x21, [sp], #0x30
000000000003c694	b	__mi_segment_page_free
000000000003c698	clrex
000000000003c69c	mov	w12, #0x0
000000000003c6a0	mov	x11, x10
000000000003c6a4	cbnz	w12, 0x3c6cc
000000000003c6a8	str	x11, [x20]
000000000003c6ac	ldxr	x10, [x9]
000000000003c6b0	cmp	x10, x11
000000000003c6b4	b.ne	0x3c698
000000000003c6b8	stlxr	w11, x20, [x9]
000000000003c6bc	cbnz	w11, 0x3c69c
000000000003c6c0	mov	w12, #0x1
000000000003c6c4	mov	x11, x10
000000000003c6c8	cbz	w12, 0x3c6a8
000000000003c6cc	ldr	x10, [x8]
000000000003c6d0	b	0x3c6e4
000000000003c6d4	clrex
000000000003c6d8	mov	w11, #0x0
000000000003c6dc	mov	x10, x9
000000000003c6e0	cbnz	w11, 0x3c550
000000000003c6e4	ldxr	x9, [x8]
000000000003c6e8	cmp	x9, x10
000000000003c6ec	b.ne	0x3c6d4
000000000003c6f0	and	x10, x10, #0xfffffffffffffffc
000000000003c6f4	orr	x10, x10, #0x2
000000000003c6f8	stlxr	w11, x10, [x8]
000000000003c6fc	cbnz	w11, 0x3c6d8
000000000003c700	mov	w11, #0x1
000000000003c704	mov	x10, x9
000000000003c708	cbz	w11, 0x3c6e4
000000000003c70c	b	0x3c550
_mi_out_buf_stderr:
000000000003c710	stp	x20, x19, [sp, #-0x20]!
000000000003c714	stp	x29, x30, [sp, #0x10]
000000000003c718	add	x29, sp, #0x10
000000000003c71c	mov	x19, x0
000000000003c720	nop
000000000003c724	ldr	x8, #0x2390c ; literal pool symbol address: ___stderrp
000000000003c728	ldr	x1, [x8]
000000000003c72c	bl	0x55b70 ; symbol stub for: _fputs
000000000003c730	cbz	x19, 0x3c770
000000000003c734	nop
000000000003c738	ldr	x8, #0x57ea8
000000000003c73c	lsr	x8, x8, #15
000000000003c740	cbnz	x8, 0x3c770
000000000003c744	mov	x0, x19
000000000003c748	bl	0x55e7c ; symbol stub for: _strlen
000000000003c74c	cbz	x0, 0x3c770
000000000003c750	adr	x9, #0x57e90
000000000003c754	nop
000000000003c758	ldaxr	x8, [x9]
000000000003c75c	add	x10, x8, x0
000000000003c760	stlxr	w11, x10, [x9]
000000000003c764	cbnz	w11, 0x3c758
000000000003c768	lsr	x9, x8, #15
000000000003c76c	cbz	x9, 0x3c77c
000000000003c770	ldp	x29, x30, [sp, #0x10]
000000000003c774	ldp	x20, x19, [sp], #0x20
000000000003c778	ret
000000000003c77c	add	x9, x8, x0
000000000003c780	mov	w10, #0x7fff
000000000003c784	sub	x10, x10, x8
000000000003c788	lsr	x9, x9, #15
000000000003c78c	cmp	x9, #0x0
000000000003c790	csel	x2, x10, x0, ne
000000000003c794	adr	x9, #0x3fd14
000000000003c798	nop
000000000003c79c	add	x0, x9, x8
000000000003c7a0	mov	x1, x19
000000000003c7a4	ldp	x29, x30, [sp, #0x10]
000000000003c7a8	ldp	x20, x19, [sp], #0x20
000000000003c7ac	b	0x55bd0 ; symbol stub for: _memcpy
_mi_buffered_out:
000000000003c7b0	stp	x28, x27, [sp, #-0x60]!
000000000003c7b4	stp	x26, x25, [sp, #0x10]
000000000003c7b8	stp	x24, x23, [sp, #0x20]
000000000003c7bc	stp	x22, x21, [sp, #0x30]
000000000003c7c0	stp	x20, x19, [sp, #0x40]
000000000003c7c4	stp	x29, x30, [sp, #0x50]
000000000003c7c8	add	x29, sp, #0x50
000000000003c7cc	cbz	x0, 0x3c99c
000000000003c7d0	mov	x19, x1
000000000003c7d4	cbz	x1, 0x3c99c
000000000003c7d8	ldrb	w24, [x0]
000000000003c7dc	cbz	w24, 0x3c99c
000000000003c7e0	add	x21, x0, #0x1
000000000003c7e4	adrp	x22, 88 ; 0x94000
000000000003c7e8	adrp	x20, 62 ; 0x7a000
000000000003c7ec	add	x20, x20, #0x510
000000000003c7f0	ldr	x23, [x20]
000000000003c7f4	adr	x25, #0x57d18
000000000003c7f8	nop
000000000003c7fc	adr	x26, #-0x5a74
000000000003c800	nop
000000000003c804	nop
000000000003c808	ldr	x27, #0x23830 ; literal pool symbol address: ___stdoutp
000000000003c80c	nop
000000000003c810	ldr	x28, #0x23820 ; literal pool symbol address: ___stderrp
000000000003c814	b	0x3c830
000000000003c818	ldr	x1, [x19, #0x8]
000000000003c81c	mov	x0, x8
000000000003c820	blr	x9
000000000003c824	str	xzr, [x19, #0x18]
000000000003c828	ldrb	w24, [x21], #0x1
000000000003c82c	cbz	w24, 0x3c99c
000000000003c830	ldp	x8, x9, [x19, #0x18]
000000000003c834	cmp	x8, x9
000000000003c838	b.hs	0x3c858
000000000003c83c	ldr	x9, [x19, #0x10]
000000000003c840	add	x10, x8, #0x1
000000000003c844	str	x10, [x19, #0x18]
000000000003c848	strb	w24, [x9, x8]
000000000003c84c	cmp	w24, #0xa
000000000003c850	b.ne	0x3c828
000000000003c854	b	0x3c910
000000000003c858	ldr	x9, [x19, #0x10]
000000000003c85c	strb	wzr, [x9, x8]
000000000003c860	ldr	x9, [x19]
000000000003c864	ldr	x8, [x19, #0x10]
000000000003c868	cbz	x9, 0x3c880
000000000003c86c	ldr	x10, [x27]
000000000003c870	ldr	x11, [x28]
000000000003c874	cmp	x10, x9
000000000003c878	ccmp	x11, x9, #0x4, ne
000000000003c87c	b.ne	0x3c8e4
000000000003c880	ldrb	w9, [x22, #0x50c]
000000000003c884	cmp	w9, #0x1
000000000003c888	b.ne	0x3c8ac
000000000003c88c	mov	x0, x20
000000000003c890	blr	x23
000000000003c894	ldrb	w9, [x0]
000000000003c898	tbnz	w9, #0x0, 0x3c8f0
000000000003c89c	mov	x0, x20
000000000003c8a0	blr	x23
000000000003c8a4	mov	w9, #0x1
000000000003c8a8	strb	w9, [x0]
000000000003c8ac	add	x9, x25, #0xc4
000000000003c8b0	ldar	x1, [x9]
000000000003c8b4	ldur	x9, [x25, #0xcc]
000000000003c8b8	cmp	x9, #0x0
000000000003c8bc	csel	x9, x26, x9, eq
000000000003c8c0	mov	x0, x8
000000000003c8c4	blr	x9
000000000003c8c8	ldrb	w8, [x25]
000000000003c8cc	cmp	w8, #0x1
000000000003c8d0	b.ne	0x3c8f0
000000000003c8d4	mov	x0, x20
000000000003c8d8	blr	x23
000000000003c8dc	strb	wzr, [x0]
000000000003c8e0	b	0x3c8f0
000000000003c8e4	ldr	x1, [x19, #0x8]
000000000003c8e8	mov	x0, x8
000000000003c8ec	blr	x9
000000000003c8f0	mov	x8, #0x0
000000000003c8f4	str	xzr, [x19, #0x18]
000000000003c8f8	ldr	x9, [x19, #0x10]
000000000003c8fc	add	x10, x8, #0x1
000000000003c900	str	x10, [x19, #0x18]
000000000003c904	strb	w24, [x9, x8]
000000000003c908	cmp	w24, #0xa
000000000003c90c	b.ne	0x3c828
000000000003c910	ldp	x8, x9, [x19, #0x10]
000000000003c914	strb	wzr, [x8, x9]
000000000003c918	ldr	x9, [x19]
000000000003c91c	ldr	x8, [x19, #0x10]
000000000003c920	cbz	x9, 0x3c938
000000000003c924	ldr	x10, [x27]
000000000003c928	ldr	x11, [x28]
000000000003c92c	cmp	x10, x9
000000000003c930	ccmp	x11, x9, #0x4, ne
000000000003c934	b.ne	0x3c818
000000000003c938	ldrb	w9, [x22, #0x50c]
000000000003c93c	cmp	w9, #0x1
000000000003c940	b.ne	0x3c964
000000000003c944	mov	x0, x20
000000000003c948	blr	x23
000000000003c94c	ldrb	w9, [x0]
000000000003c950	tbnz	w9, #0x0, 0x3c824
000000000003c954	mov	x0, x20
000000000003c958	blr	x23
000000000003c95c	mov	w9, #0x1
000000000003c960	strb	w9, [x0]
000000000003c964	add	x9, x25, #0xc4
000000000003c968	ldar	x1, [x9]
000000000003c96c	ldur	x9, [x25, #0xcc]
000000000003c970	cmp	x9, #0x0
000000000003c974	csel	x9, x26, x9, eq
000000000003c978	mov	x0, x8
000000000003c97c	blr	x9
000000000003c980	ldrb	w8, [x25]
000000000003c984	cmp	w8, #0x1
000000000003c988	b.ne	0x3c824
000000000003c98c	mov	x0, x20
000000000003c990	blr	x23
000000000003c994	strb	wzr, [x0]
000000000003c998	b	0x3c824
000000000003c99c	ldp	x29, x30, [sp, #0x50]
000000000003c9a0	ldp	x20, x19, [sp, #0x40]
000000000003c9a4	ldp	x22, x21, [sp, #0x30]
000000000003c9a8	ldp	x24, x23, [sp, #0x20]
000000000003c9ac	ldp	x26, x25, [sp, #0x10]
000000000003c9b0	ldp	x28, x27, [sp], #0x60
000000000003c9b4	ret
__mi_fprintf:
000000000003c9b8	stp	x28, x27, [sp, #-0x30]!
000000000003c9bc	stp	x20, x19, [sp, #0x10]
000000000003c9c0	stp	x29, x30, [sp, #0x20]
000000000003c9c4	add	x29, sp, #0x20
000000000003c9c8	sub	sp, sp, #0x210
000000000003c9cc	add	x8, x29, #0x10
000000000003c9d0	str	x8, [sp, #0x8]
000000000003c9d4	cbz	x2, 0x3cb14
000000000003c9d8	mov	x19, x1
000000000003c9dc	adrp	x20, 88 ; 0x94000
000000000003c9e0	ldrb	w8, [x20, #0x50c]
000000000003c9e4	cmp	w8, #0x1
000000000003c9e8	b.ne	0x3ca18
000000000003c9ec	adrp	x8, 62 ; 0x7a000
000000000003c9f0	add	x8, x8, #0x510
000000000003c9f4	ldr	x9, [x8]
000000000003c9f8	mov	x0, x8
000000000003c9fc	blr	x9
000000000003ca00	ldrb	w10, [x0]
000000000003ca04	tbnz	w10, #0x0, 0x3cb14
000000000003ca08	mov	x0, x8
000000000003ca0c	blr	x9
000000000003ca10	mov	w8, #0x1
000000000003ca14	strb	w8, [x0]
000000000003ca18	add	x0, sp, #0x10
000000000003ca1c	add	x3, x29, #0x10
000000000003ca20	mov	w1, #0x1ff
000000000003ca24	bl	0x55edc ; symbol stub for: _vsnprintf
000000000003ca28	ldrb	w8, [x20, #0x50c]
000000000003ca2c	cmp	w8, #0x1
000000000003ca30	b.ne	0x3ca9c
000000000003ca34	adrp	x8, 62 ; 0x7a000
000000000003ca38	add	x8, x8, #0x510
000000000003ca3c	ldr	x9, [x8]
000000000003ca40	mov	x0, x8
000000000003ca44	blr	x9
000000000003ca48	strb	wzr, [x0]
000000000003ca4c	nop
000000000003ca50	ldr	x10, #0x235e8 ; literal pool symbol address: ___stdoutp
000000000003ca54	adr	x11, #-0x2a4
000000000003ca58	nop
000000000003ca5c	ldr	x10, [x10]
000000000003ca60	nop
000000000003ca64	ldr	x12, #0x235cc ; literal pool symbol address: ___stderrp
000000000003ca68	ldr	x12, [x12]
000000000003ca6c	cmp	x10, x11
000000000003ca70	ccmp	x12, x11, #0x4, ne
000000000003ca74	b.ne	0x3cb28
000000000003ca78	mov	x0, x8
000000000003ca7c	blr	x9
000000000003ca80	ldrb	w10, [x0]
000000000003ca84	tbnz	w10, #0x0, 0x3cb14
000000000003ca88	mov	x0, x8
000000000003ca8c	blr	x9
000000000003ca90	mov	w8, #0x1
000000000003ca94	strb	w8, [x0]
000000000003ca98	b	0x3cac8
000000000003ca9c	nop
000000000003caa0	ldr	x8, #0x23598 ; literal pool symbol address: ___stdoutp
000000000003caa4	adr	x9, #-0x2f4
000000000003caa8	nop
000000000003caac	ldr	x8, [x8]
000000000003cab0	nop
000000000003cab4	ldr	x10, #0x2357c ; literal pool symbol address: ___stderrp
000000000003cab8	ldr	x10, [x10]
000000000003cabc	cmp	x8, x9
000000000003cac0	ccmp	x10, x9, #0x4, ne
000000000003cac4	b.ne	0x3cb28
000000000003cac8	adr	x19, #0x57a44
000000000003cacc	nop
000000000003cad0	add	x8, x19, #0xc4
000000000003cad4	ldar	x1, [x8]
000000000003cad8	ldur	x8, [x19, #0xcc]
000000000003cadc	adr	x9, #-0x5d54
000000000003cae0	nop
000000000003cae4	cmp	x8, #0x0
000000000003cae8	csel	x8, x9, x8, eq
000000000003caec	add	x0, sp, #0x10
000000000003caf0	blr	x8
000000000003caf4	ldrb	w8, [x19]
000000000003caf8	cmp	w8, #0x1
000000000003cafc	b.ne	0x3cb14
000000000003cb00	adrp	x0, 62 ; 0x7a000
000000000003cb04	add	x0, x0, #0x510
000000000003cb08	ldr	x8, [x0]
000000000003cb0c	blr	x8
000000000003cb10	strb	wzr, [x0]
000000000003cb14	add	sp, sp, #0x210
000000000003cb18	ldp	x29, x30, [sp, #0x20]
000000000003cb1c	ldp	x20, x19, [sp, #0x10]
000000000003cb20	ldp	x28, x27, [sp], #0x30
000000000003cb24	ret
000000000003cb28	add	x0, sp, #0x10
000000000003cb2c	mov	x1, x19
000000000003cb30	bl	_mi_buffered_out
000000000003cb34	add	sp, sp, #0x210
000000000003cb38	ldp	x29, x30, [sp, #0x20]
000000000003cb3c	ldp	x20, x19, [sp, #0x10]
000000000003cb40	ldp	x28, x27, [sp], #0x30
000000000003cb44	ret
_mi_stat_print:
000000000003cb48	sub	sp, sp, #0x90
000000000003cb4c	stp	x26, x25, [sp, #0x40]
000000000003cb50	stp	x24, x23, [sp, #0x50]
000000000003cb54	stp	x22, x21, [sp, #0x60]
000000000003cb58	stp	x20, x19, [sp, #0x70]
000000000003cb5c	stp	x29, x30, [sp, #0x80]
000000000003cb60	add	x29, sp, #0x80
000000000003cb64	mov	x19, x3
000000000003cb68	mov	x21, x2
000000000003cb6c	mov	x20, x0
000000000003cb70	str	x1, [sp]
000000000003cb74	adr	x2, #0x20454 ; literal pool for: "%10s:"
000000000003cb78	nop
000000000003cb7c	mov	x1, x3
000000000003cb80	bl	__mi_fprintf
000000000003cb84	cmp	x21, #0x1
000000000003cb88	b.lt	0x3cbb8
000000000003cb8c	ldr	x8, [x20, #0x10]
000000000003cb90	cmp	x8, #0x0
000000000003cb94	cneg	x9, x8, mi
000000000003cb98	cmp	x9, #0x3ff
000000000003cb9c	b.gt	0x3cc00
000000000003cba0	adr	x9, #0x20408 ; literal pool for: "b"
000000000003cba4	nop
000000000003cba8	stp	x8, x9, [sp]
000000000003cbac	adr	x2, #0x203f5 ; literal pool for: "%d %s "
000000000003cbb0	nop
000000000003cbb4	b	0x3cc8c
000000000003cbb8	ldr	x8, [x20, #0x10]
000000000003cbbc	cmp	x8, #0x0
000000000003cbc0	cneg	x9, x8, mi
000000000003cbc4	tbnz	x21, #0x3f, 0x3cfb4
000000000003cbc8	adr	x24, #0x203e4 ; literal pool for: "m"
000000000003cbcc	nop
000000000003cbd0	adr	x25, #0x203da ; literal pool for: "k"
000000000003cbd4	nop
000000000003cbd8	adr	x23, #0x203d6 ; literal pool for: "g"
000000000003cbdc	nop
000000000003cbe0	adr	x22, #0x203c8 ; literal pool for: "b"
000000000003cbe4	nop
000000000003cbe8	cmp	x9, #0x3ff
000000000003cbec	b.gt	0x3cfd4
000000000003cbf0	stp	x8, x22, [sp]
000000000003cbf4	adr	x2, #0x203ad ; literal pool for: "%d %s "
000000000003cbf8	nop
000000000003cbfc	b	0x3d040
000000000003cc00	adr	x10, #0x203ac ; literal pool for: "m"
000000000003cc04	nop
000000000003cc08	adr	x11, #0x203a2 ; literal pool for: "k"
000000000003cc0c	nop
000000000003cc10	cmp	x9, #0x100, lsl #12
000000000003cc14	csel	x10, x11, x10, lt
000000000003cc18	mov	w11, #0x100000
000000000003cc1c	mov	w12, #0x400
000000000003cc20	csel	x11, x12, x11, lt
000000000003cc24	lsl	x12, x11, #10
000000000003cc28	adr	x13, #0x20386 ; literal pool for: "g"
000000000003cc2c	nop
000000000003cc30	cmp	x9, x12
000000000003cc34	csel	x9, x10, x13, lt
000000000003cc38	csel	x10, x11, x12, lt
000000000003cc3c	mov	w11, #0xcccd
000000000003cc40	movk	w11, #0xcccc, lsl #16
000000000003cc44	mul	x10, x10, x11
000000000003cc48	lsr	x10, x10, #35
000000000003cc4c	sdiv	x8, x8, x10
000000000003cc50	mov	x10, #0x6666666666666666
000000000003cc54	movk	x10, #0x6667
000000000003cc58	smulh	x10, x8, x10
000000000003cc5c	asr	x11, x10, #2
000000000003cc60	add	x10, x11, x10, lsr #63
000000000003cc64	mov	x11, #-0xa
000000000003cc68	madd	x8, x10, x11, x8
000000000003cc6c	cmp	x8, #0x0
000000000003cc70	cneg	x8, x8, mi
000000000003cc74	adr	x11, #0x20334 ; literal pool for: "b"
000000000003cc78	nop
000000000003cc7c	stp	x9, x11, [sp, #0x10]
000000000003cc80	stp	x10, x8, [sp]
000000000003cc84	adr	x2, #0x2032c ; literal pool for: "%ld.%ld %s%s"
000000000003cc88	nop
000000000003cc8c	add	x0, sp, #0x20
000000000003cc90	mov	w1, #0x20
000000000003cc94	bl	0x55e58 ; symbol stub for: _snprintf
000000000003cc98	add	x8, sp, #0x20
000000000003cc9c	str	x8, [sp]
000000000003cca0	adr	x2, #0x20330 ; literal pool for: "%11s"
000000000003cca4	nop
000000000003cca8	mov	x1, x19
000000000003ccac	bl	__mi_fprintf
000000000003ccb0	ldr	x8, [x20]
000000000003ccb4	cmp	x8, #0x0
000000000003ccb8	cneg	x9, x8, mi
000000000003ccbc	cmp	x9, #0x3ff
000000000003ccc0	b.gt	0x3ccdc
000000000003ccc4	adr	x9, #0x202e4 ; literal pool for: "b"
000000000003ccc8	nop
000000000003cccc	stp	x8, x9, [sp]
000000000003ccd0	adr	x2, #0x202d1 ; literal pool for: "%d %s "
000000000003ccd4	nop
000000000003ccd8	b	0x3cd68
000000000003ccdc	adr	x10, #0x202d0 ; literal pool for: "m"
000000000003cce0	nop
000000000003cce4	adr	x11, #0x202c6 ; literal pool for: "k"
000000000003cce8	nop
000000000003ccec	cmp	x9, #0x100, lsl #12
000000000003ccf0	csel	x10, x11, x10, lt
000000000003ccf4	mov	w11, #0x100000
000000000003ccf8	mov	w12, #0x400
000000000003ccfc	csel	x11, x12, x11, lt
000000000003cd00	lsl	x12, x11, #10
000000000003cd04	adr	x13, #0x202aa ; literal pool for: "g"
000000000003cd08	nop
000000000003cd0c	cmp	x9, x12
000000000003cd10	csel	x9, x10, x13, lt
000000000003cd14	csel	x10, x11, x12, lt
000000000003cd18	mov	w11, #0xcccd
000000000003cd1c	movk	w11, #0xcccc, lsl #16
000000000003cd20	mul	x10, x10, x11
000000000003cd24	lsr	x10, x10, #35
000000000003cd28	sdiv	x8, x8, x10
000000000003cd2c	mov	x10, #0x6666666666666666
000000000003cd30	movk	x10, #0x6667
000000000003cd34	smulh	x10, x8, x10
000000000003cd38	asr	x11, x10, #2
000000000003cd3c	add	x10, x11, x10, lsr #63
000000000003cd40	mov	x11, #-0xa
000000000003cd44	madd	x8, x10, x11, x8
000000000003cd48	cmp	x8, #0x0
000000000003cd4c	cneg	x8, x8, mi
000000000003cd50	adr	x11, #0x20258 ; literal pool for: "b"
000000000003cd54	nop
000000000003cd58	stp	x9, x11, [sp, #0x10]
000000000003cd5c	stp	x10, x8, [sp]
000000000003cd60	adr	x2, #0x20250 ; literal pool for: "%ld.%ld %s%s"
000000000003cd64	nop
000000000003cd68	add	x0, sp, #0x20
000000000003cd6c	mov	w1, #0x20
000000000003cd70	bl	0x55e58 ; symbol stub for: _snprintf
000000000003cd74	add	x8, sp, #0x20
000000000003cd78	str	x8, [sp]
000000000003cd7c	adr	x2, #0x20254 ; literal pool for: "%11s"
000000000003cd80	nop
000000000003cd84	mov	x1, x19
000000000003cd88	bl	__mi_fprintf
000000000003cd8c	ldr	x8, [x20, #0x8]
000000000003cd90	cmp	x8, #0x0
000000000003cd94	cneg	x9, x8, mi
000000000003cd98	cmp	x9, #0x3ff
000000000003cd9c	b.gt	0x3cdb8
000000000003cda0	adr	x9, #0x20208 ; literal pool for: "b"
000000000003cda4	nop
000000000003cda8	stp	x8, x9, [sp]
000000000003cdac	adr	x2, #0x201f5 ; literal pool for: "%d %s "
000000000003cdb0	nop
000000000003cdb4	b	0x3ce44
000000000003cdb8	adr	x10, #0x201f4 ; literal pool for: "m"
000000000003cdbc	nop
000000000003cdc0	adr	x11, #0x201ea ; literal pool for: "k"
000000000003cdc4	nop
000000000003cdc8	cmp	x9, #0x100, lsl #12
000000000003cdcc	csel	x10, x11, x10, lt
000000000003cdd0	mov	w11, #0x100000
000000000003cdd4	mov	w12, #0x400
000000000003cdd8	csel	x11, x12, x11, lt
000000000003cddc	lsl	x12, x11, #10
000000000003cde0	adr	x13, #0x201ce ; literal pool for: "g"
000000000003cde4	nop
000000000003cde8	cmp	x9, x12
000000000003cdec	csel	x9, x10, x13, lt
000000000003cdf0	csel	x10, x11, x12, lt
000000000003cdf4	mov	w11, #0xcccd
000000000003cdf8	movk	w11, #0xcccc, lsl #16
000000000003cdfc	mul	x10, x10, x11
000000000003ce00	lsr	x10, x10, #35
000000000003ce04	sdiv	x8, x8, x10
000000000003ce08	mov	x10, #0x6666666666666666
000000000003ce0c	movk	x10, #0x6667
000000000003ce10	smulh	x10, x8, x10
000000000003ce14	asr	x11, x10, #2
000000000003ce18	add	x10, x11, x10, lsr #63
000000000003ce1c	mov	x11, #-0xa
000000000003ce20	madd	x8, x10, x11, x8
000000000003ce24	cmp	x8, #0x0
000000000003ce28	cneg	x8, x8, mi
000000000003ce2c	adr	x11, #0x2017c ; literal pool for: "b"
000000000003ce30	nop
000000000003ce34	stp	x9, x11, [sp, #0x10]
000000000003ce38	stp	x10, x8, [sp]
000000000003ce3c	adr	x2, #0x20174 ; literal pool for: "%ld.%ld %s%s"
000000000003ce40	nop
000000000003ce44	add	x0, sp, #0x20
000000000003ce48	mov	w1, #0x20
000000000003ce4c	bl	0x55e58 ; symbol stub for: _snprintf
000000000003ce50	add	x8, sp, #0x20
000000000003ce54	str	x8, [sp]
000000000003ce58	adr	x2, #0x20178 ; literal pool for: "%11s"
000000000003ce5c	nop
000000000003ce60	mov	x1, x19
000000000003ce64	bl	__mi_fprintf
000000000003ce68	ldr	x8, [x20, #0x18]
000000000003ce6c	cmp	x8, #0x0
000000000003ce70	cneg	x9, x8, mi
000000000003ce74	cmp	x9, #0x3ff
000000000003ce78	b.gt	0x3ce94
000000000003ce7c	adr	x9, #0x2012c ; literal pool for: "b"
000000000003ce80	nop
000000000003ce84	stp	x8, x9, [sp]
000000000003ce88	adr	x2, #0x20119 ; literal pool for: "%d %s "
000000000003ce8c	nop
000000000003ce90	b	0x3cf20
000000000003ce94	adr	x10, #0x20118 ; literal pool for: "m"
000000000003ce98	nop
000000000003ce9c	adr	x11, #0x2010e ; literal pool for: "k"
000000000003cea0	nop
000000000003cea4	cmp	x9, #0x100, lsl #12
000000000003cea8	csel	x10, x11, x10, lt
000000000003ceac	mov	w11, #0x100000
000000000003ceb0	mov	w12, #0x400
000000000003ceb4	csel	x11, x12, x11, lt
000000000003ceb8	lsl	x12, x11, #10
000000000003cebc	adr	x13, #0x200f2 ; literal pool for: "g"
000000000003cec0	nop
000000000003cec4	cmp	x9, x12
000000000003cec8	csel	x9, x10, x13, lt
000000000003cecc	csel	x10, x11, x12, lt
000000000003ced0	mov	w11, #0xcccd
000000000003ced4	movk	w11, #0xcccc, lsl #16
000000000003ced8	mul	x10, x10, x11
000000000003cedc	lsr	x10, x10, #35
000000000003cee0	sdiv	x8, x8, x10
000000000003cee4	mov	x10, #0x6666666666666666
000000000003cee8	movk	x10, #0x6667
000000000003ceec	smulh	x10, x8, x10
000000000003cef0	asr	x11, x10, #2
000000000003cef4	add	x10, x11, x10, lsr #63
000000000003cef8	mov	x11, #-0xa
000000000003cefc	madd	x8, x10, x11, x8
000000000003cf00	cmp	x8, #0x0
000000000003cf04	cneg	x8, x8, mi
000000000003cf08	adr	x11, #0x200a0 ; literal pool for: "b"
000000000003cf0c	nop
000000000003cf10	stp	x9, x11, [sp, #0x10]
000000000003cf14	stp	x10, x8, [sp]
000000000003cf18	adr	x2, #0x20098 ; literal pool for: "%ld.%ld %s%s"
000000000003cf1c	nop
000000000003cf20	add	x0, sp, #0x20
000000000003cf24	mov	w1, #0x20
000000000003cf28	bl	0x55e58 ; symbol stub for: _snprintf
000000000003cf2c	add	x22, sp, #0x20
000000000003cf30	str	x22, [sp]
000000000003cf34	adr	x21, #0x2009c ; literal pool for: "%11s"
000000000003cf38	nop
000000000003cf3c	mov	x1, x19
000000000003cf40	mov	x2, x21
000000000003cf44	bl	__mi_fprintf
000000000003cf48	adr	x8, #0x20060 ; literal pool for: "b"
000000000003cf4c	nop
000000000003cf50	mov	w9, #0x1
000000000003cf54	stp	x9, x8, [sp]
000000000003cf58	adr	x2, #0x20049 ; literal pool for: "%d %s "
000000000003cf5c	nop
000000000003cf60	add	x0, sp, #0x20
000000000003cf64	mov	w1, #0x20
000000000003cf68	bl	0x55e58 ; symbol stub for: _snprintf
000000000003cf6c	str	x22, [sp]
000000000003cf70	mov	x1, x19
000000000003cf74	mov	x2, x21
000000000003cf78	bl	__mi_fprintf
000000000003cf7c	adr	x8, #0x20052 ; literal pool for: " "
000000000003cf80	nop
000000000003cf84	str	x8, [sp]
000000000003cf88	mov	x1, x19
000000000003cf8c	mov	x2, x21
000000000003cf90	bl	__mi_fprintf
000000000003cf94	ldp	x8, x9, [x20]
000000000003cf98	adr	x10, #0x2004f ; literal pool for: "  ok\n"
000000000003cf9c	nop
000000000003cfa0	adr	x11, #0x20035 ; literal pool for: "  not all freed!\n"
000000000003cfa4	nop
000000000003cfa8	cmp	x8, x9
000000000003cfac	csel	x2, x11, x10, gt
000000000003cfb0	b	0x3d1f0
000000000003cfb4	cmp	x9, #0x3ff
000000000003cfb8	b.gt	0x3d214
000000000003cfbc	adr	x9, #0x20012 ; literal pool for: " "
000000000003cfc0	nop
000000000003cfc4	stp	x8, x9, [sp]
000000000003cfc8	adr	x2, #0x1ffd9 ; literal pool for: "%d %s "
000000000003cfcc	nop
000000000003cfd0	b	0x3d2a0
000000000003cfd4	cmp	x9, #0x100, lsl #12
000000000003cfd8	csel	x10, x25, x24, lt
000000000003cfdc	mov	w11, #0x100000
000000000003cfe0	mov	w12, #0x400
000000000003cfe4	csel	x11, x12, x11, lt
000000000003cfe8	lsl	x12, x11, #10
000000000003cfec	cmp	x9, x12
000000000003cff0	csel	x9, x10, x23, lt
000000000003cff4	csel	x10, x11, x12, lt
000000000003cff8	mov	w11, #0xcccd
000000000003cffc	movk	w11, #0xcccc, lsl #16
000000000003d000	mul	x10, x10, x11
000000000003d004	lsr	x10, x10, #35
000000000003d008	sdiv	x8, x8, x10
000000000003d00c	mov	x10, #0x6666666666666666
000000000003d010	movk	x10, #0x6667
000000000003d014	smulh	x10, x8, x10
000000000003d018	asr	x11, x10, #2
000000000003d01c	add	x10, x11, x10, lsr #63
000000000003d020	mov	x11, #-0xa
000000000003d024	madd	x8, x10, x11, x8
000000000003d028	cmp	x8, #0x0
000000000003d02c	cneg	x8, x8, mi
000000000003d030	stp	x9, x22, [sp, #0x10]
000000000003d034	stp	x10, x8, [sp]
000000000003d038	adr	x2, #0x1ff78 ; literal pool for: "%ld.%ld %s%s"
000000000003d03c	nop
000000000003d040	add	x0, sp, #0x20
000000000003d044	mov	w1, #0x20
000000000003d048	bl	0x55e58 ; symbol stub for: _snprintf
000000000003d04c	add	x8, sp, #0x20
000000000003d050	str	x8, [sp]
000000000003d054	adr	x2, #0x1ff7c ; literal pool for: "%11s"
000000000003d058	nop
000000000003d05c	mov	x1, x19
000000000003d060	bl	__mi_fprintf
000000000003d064	ldr	x8, [x20]
000000000003d068	cmp	x8, #0x0
000000000003d06c	cneg	x9, x8, mi
000000000003d070	cmp	x9, #0x3ff
000000000003d074	b.gt	0x3d088
000000000003d078	stp	x8, x22, [sp]
000000000003d07c	adr	x2, #0x1ff25 ; literal pool for: "%d %s "
000000000003d080	nop
000000000003d084	b	0x3d0f4
000000000003d088	cmp	x9, #0x100, lsl #12
000000000003d08c	csel	x10, x25, x24, lt
000000000003d090	mov	w11, #0x100000
000000000003d094	mov	w12, #0x400
000000000003d098	csel	x11, x12, x11, lt
000000000003d09c	lsl	x12, x11, #10
000000000003d0a0	cmp	x9, x12
000000000003d0a4	csel	x9, x10, x23, lt
000000000003d0a8	csel	x10, x11, x12, lt
000000000003d0ac	mov	w11, #0xcccd
000000000003d0b0	movk	w11, #0xcccc, lsl #16
000000000003d0b4	mul	x10, x10, x11
000000000003d0b8	lsr	x10, x10, #35
000000000003d0bc	sdiv	x8, x8, x10
000000000003d0c0	mov	x10, #0x6666666666666666
000000000003d0c4	movk	x10, #0x6667
000000000003d0c8	smulh	x10, x8, x10
000000000003d0cc	asr	x11, x10, #2
000000000003d0d0	add	x10, x11, x10, lsr #63
000000000003d0d4	mov	x11, #-0xa
000000000003d0d8	madd	x8, x10, x11, x8
000000000003d0dc	cmp	x8, #0x0
000000000003d0e0	cneg	x8, x8, mi
000000000003d0e4	stp	x9, x22, [sp, #0x10]
000000000003d0e8	stp	x10, x8, [sp]
000000000003d0ec	adr	x2, #0x1fec4 ; literal pool for: "%ld.%ld %s%s"
000000000003d0f0	nop
000000000003d0f4	add	x0, sp, #0x20
000000000003d0f8	mov	w1, #0x20
000000000003d0fc	bl	0x55e58 ; symbol stub for: _snprintf
000000000003d100	add	x8, sp, #0x20
000000000003d104	str	x8, [sp]
000000000003d108	adr	x21, #0x1fec8 ; literal pool for: "%11s"
000000000003d10c	nop
000000000003d110	mov	x1, x19
000000000003d114	mov	x2, x21
000000000003d118	bl	__mi_fprintf
000000000003d11c	adr	x8, #0x1feb2 ; literal pool for: " "
000000000003d120	nop
000000000003d124	str	x8, [sp]
000000000003d128	mov	x1, x19
000000000003d12c	mov	x2, x21
000000000003d130	bl	__mi_fprintf
000000000003d134	ldr	x8, [x20, #0x18]
000000000003d138	cmp	x8, #0x0
000000000003d13c	cneg	x9, x8, mi
000000000003d140	cmp	x9, #0x3ff
000000000003d144	b.gt	0x3d158
000000000003d148	stp	x8, x22, [sp]
000000000003d14c	adr	x2, #0x1fe55 ; literal pool for: "%d %s "
000000000003d150	nop
000000000003d154	b	0x3d1c4
000000000003d158	cmp	x9, #0x100, lsl #12
000000000003d15c	csel	x10, x25, x24, lt
000000000003d160	mov	w11, #0x100000
000000000003d164	mov	w12, #0x400
000000000003d168	csel	x11, x12, x11, lt
000000000003d16c	lsl	x12, x11, #10
000000000003d170	cmp	x9, x12
000000000003d174	csel	x9, x10, x23, lt
000000000003d178	csel	x10, x11, x12, lt
000000000003d17c	mov	w11, #0xcccd
000000000003d180	movk	w11, #0xcccc, lsl #16
000000000003d184	mul	x10, x10, x11
000000000003d188	lsr	x10, x10, #35
000000000003d18c	sdiv	x8, x8, x10
000000000003d190	mov	x10, #0x6666666666666666
000000000003d194	movk	x10, #0x6667
000000000003d198	smulh	x10, x8, x10
000000000003d19c	asr	x11, x10, #2
000000000003d1a0	add	x10, x11, x10, lsr #63
000000000003d1a4	mov	x11, #-0xa
000000000003d1a8	madd	x8, x10, x11, x8
000000000003d1ac	cmp	x8, #0x0
000000000003d1b0	cneg	x8, x8, mi
000000000003d1b4	stp	x9, x22, [sp, #0x10]
000000000003d1b8	stp	x10, x8, [sp]
000000000003d1bc	adr	x2, #0x1fdf4 ; literal pool for: "%ld.%ld %s%s"
000000000003d1c0	nop
000000000003d1c4	add	x0, sp, #0x20
000000000003d1c8	mov	w1, #0x20
000000000003d1cc	bl	0x55e58 ; symbol stub for: _snprintf
000000000003d1d0	add	x8, sp, #0x20
000000000003d1d4	str	x8, [sp]
000000000003d1d8	adr	x2, #0x1fdf8 ; literal pool for: "%11s"
000000000003d1dc	nop
000000000003d1e0	mov	x1, x19
000000000003d1e4	bl	__mi_fprintf
000000000003d1e8	adr	x2, #0x202b6 ; literal pool for: "\n"
000000000003d1ec	nop
000000000003d1f0	mov	x1, x19
000000000003d1f4	bl	__mi_fprintf
000000000003d1f8	ldp	x29, x30, [sp, #0x80]
000000000003d1fc	ldp	x20, x19, [sp, #0x70]
000000000003d200	ldp	x22, x21, [sp, #0x60]
000000000003d204	ldp	x24, x23, [sp, #0x50]
000000000003d208	ldp	x26, x25, [sp, #0x40]
000000000003d20c	add	sp, sp, #0x90
000000000003d210	ret
000000000003d214	adr	x10, #0x1fd98 ; literal pool for: "m"
000000000003d218	nop
000000000003d21c	adr	x11, #0x1fd8e ; literal pool for: "k"
000000000003d220	nop
000000000003d224	cmp	x9, #0x100, lsl #12
000000000003d228	csel	x10, x11, x10, lt
000000000003d22c	mov	w11, #0x100000
000000000003d230	mov	w12, #0x400
000000000003d234	csel	x11, x12, x11, lt
000000000003d238	lsl	x12, x11, #10
000000000003d23c	adr	x13, #0x1fd72 ; literal pool for: "g"
000000000003d240	nop
000000000003d244	cmp	x9, x12
000000000003d248	csel	x9, x10, x13, lt
000000000003d24c	csel	x10, x11, x12, lt
000000000003d250	mov	w11, #0xcccd
000000000003d254	movk	w11, #0xcccc, lsl #16
000000000003d258	mul	x10, x10, x11
000000000003d25c	lsr	x10, x10, #35
000000000003d260	sdiv	x8, x8, x10
000000000003d264	mov	x10, #0x6666666666666666
000000000003d268	movk	x10, #0x6667
000000000003d26c	smulh	x10, x8, x10
000000000003d270	asr	x11, x10, #2
000000000003d274	add	x10, x11, x10, lsr #63
000000000003d278	mov	x11, #-0xa
000000000003d27c	madd	x8, x10, x11, x8
000000000003d280	cmp	x8, #0x0
000000000003d284	cneg	x8, x8, mi
000000000003d288	adr	x11, #0x1fd46 ; literal pool for: " "
000000000003d28c	nop
000000000003d290	stp	x9, x11, [sp, #0x10]
000000000003d294	stp	x10, x8, [sp]
000000000003d298	adr	x2, #0x1fd18 ; literal pool for: "%ld.%ld %s%s"
000000000003d29c	nop
000000000003d2a0	add	x0, sp, #0x20
000000000003d2a4	mov	w1, #0x20
000000000003d2a8	bl	0x55e58 ; symbol stub for: _snprintf
000000000003d2ac	add	x8, sp, #0x20
000000000003d2b0	str	x8, [sp]
000000000003d2b4	adr	x2, #0x1fd1c ; literal pool for: "%11s"
000000000003d2b8	nop
000000000003d2bc	mov	x1, x19
000000000003d2c0	bl	__mi_fprintf
000000000003d2c4	ldr	x8, [x20]
000000000003d2c8	cmp	x8, #0x0
000000000003d2cc	cneg	x9, x8, mi
000000000003d2d0	cmp	x9, #0x3ff
000000000003d2d4	b.gt	0x3d2f0
000000000003d2d8	adr	x9, #0x1fcf6 ; literal pool for: " "
000000000003d2dc	nop
000000000003d2e0	stp	x8, x9, [sp]
000000000003d2e4	adr	x2, #0x1fcbd ; literal pool for: "%d %s "
000000000003d2e8	nop
000000000003d2ec	b	0x3d37c
000000000003d2f0	adr	x10, #0x1fcbc ; literal pool for: "m"
000000000003d2f4	nop
000000000003d2f8	adr	x11, #0x1fcb2 ; literal pool for: "k"
000000000003d2fc	nop
000000000003d300	cmp	x9, #0x100, lsl #12
000000000003d304	csel	x10, x11, x10, lt
000000000003d308	mov	w11, #0x100000
000000000003d30c	mov	w12, #0x400
000000000003d310	csel	x11, x12, x11, lt
000000000003d314	lsl	x12, x11, #10
000000000003d318	adr	x13, #0x1fc96 ; literal pool for: "g"
000000000003d31c	nop
000000000003d320	cmp	x9, x12
000000000003d324	csel	x9, x10, x13, lt
000000000003d328	csel	x10, x11, x12, lt
000000000003d32c	mov	w11, #0xcccd
000000000003d330	movk	w11, #0xcccc, lsl #16
000000000003d334	mul	x10, x10, x11
000000000003d338	lsr	x10, x10, #35
000000000003d33c	sdiv	x8, x8, x10
000000000003d340	mov	x10, #0x6666666666666666
000000000003d344	movk	x10, #0x6667
000000000003d348	smulh	x10, x8, x10
000000000003d34c	asr	x11, x10, #2
000000000003d350	add	x10, x11, x10, lsr #63
000000000003d354	mov	x11, #-0xa
000000000003d358	madd	x8, x10, x11, x8
000000000003d35c	cmp	x8, #0x0
000000000003d360	cneg	x8, x8, mi
000000000003d364	adr	x11, #0x1fc6a ; literal pool for: " "
000000000003d368	nop
000000000003d36c	stp	x9, x11, [sp, #0x10]
000000000003d370	stp	x10, x8, [sp]
000000000003d374	adr	x2, #0x1fc3c ; literal pool for: "%ld.%ld %s%s"
000000000003d378	nop
000000000003d37c	add	x0, sp, #0x20
000000000003d380	mov	w1, #0x20
000000000003d384	bl	0x55e58 ; symbol stub for: _snprintf
000000000003d388	add	x8, sp, #0x20
000000000003d38c	str	x8, [sp]
000000000003d390	adr	x2, #0x1fc40 ; literal pool for: "%11s"
000000000003d394	nop
000000000003d398	mov	x1, x19
000000000003d39c	bl	__mi_fprintf
000000000003d3a0	ldr	x8, [x20, #0x8]
000000000003d3a4	cmp	x8, #0x0
000000000003d3a8	cneg	x9, x8, mi
000000000003d3ac	cmp	x9, #0x3ff
000000000003d3b0	b.gt	0x3d3cc
000000000003d3b4	adr	x9, #0x1fc1a ; literal pool for: " "
000000000003d3b8	nop
000000000003d3bc	stp	x8, x9, [sp]
000000000003d3c0	adr	x2, #0x1fbe1 ; literal pool for: "%d %s "
000000000003d3c4	nop
000000000003d3c8	b	0x3d458
000000000003d3cc	adr	x10, #0x1fbe0 ; literal pool for: "m"
000000000003d3d0	nop
000000000003d3d4	adr	x11, #0x1fbd6 ; literal pool for: "k"
000000000003d3d8	nop
000000000003d3dc	cmp	x9, #0x100, lsl #12
000000000003d3e0	csel	x10, x11, x10, lt
000000000003d3e4	mov	w11, #0x100000
000000000003d3e8	mov	w12, #0x400
000000000003d3ec	csel	x11, x12, x11, lt
000000000003d3f0	lsl	x12, x11, #10
000000000003d3f4	adr	x13, #0x1fbba ; literal pool for: "g"
000000000003d3f8	nop
000000000003d3fc	cmp	x9, x12
000000000003d400	csel	x9, x10, x13, lt
000000000003d404	csel	x10, x11, x12, lt
000000000003d408	mov	w11, #0xcccd
000000000003d40c	movk	w11, #0xcccc, lsl #16
000000000003d410	mul	x10, x10, x11
000000000003d414	lsr	x10, x10, #35
000000000003d418	sdiv	x8, x8, x10
000000000003d41c	mov	x10, #0x6666666666666666
000000000003d420	movk	x10, #0x6667
000000000003d424	smulh	x10, x8, x10
000000000003d428	asr	x11, x10, #2
000000000003d42c	add	x10, x11, x10, lsr #63
000000000003d430	mov	x11, #-0xa
000000000003d434	madd	x8, x10, x11, x8
000000000003d438	cmp	x8, #0x0
000000000003d43c	cneg	x8, x8, mi
000000000003d440	adr	x11, #0x1fb8e ; literal pool for: " "
000000000003d444	nop
000000000003d448	stp	x9, x11, [sp, #0x10]
000000000003d44c	stp	x10, x8, [sp]
000000000003d450	adr	x2, #0x1fb60 ; literal pool for: "%ld.%ld %s%s"
000000000003d454	nop
000000000003d458	add	x0, sp, #0x20
000000000003d45c	mov	w1, #0x20
000000000003d460	bl	0x55e58 ; symbol stub for: _snprintf
000000000003d464	add	x8, sp, #0x20
000000000003d468	str	x8, [sp]
000000000003d46c	adr	x2, #0x1fb64 ; literal pool for: "%11s"
000000000003d470	nop
000000000003d474	mov	x1, x19
000000000003d478	bl	__mi_fprintf
000000000003d47c	ldr	x8, [x20, #0x18]
000000000003d480	cmp	x8, #0x0
000000000003d484	cneg	x9, x8, mi
000000000003d488	cmp	x9, #0x3ff
000000000003d48c	b.gt	0x3d4a8
000000000003d490	adr	x9, #0x1fb3e ; literal pool for: " "
000000000003d494	nop
000000000003d498	stp	x8, x9, [sp]
000000000003d49c	adr	x2, #0x1fb05 ; literal pool for: "%d %s "
000000000003d4a0	nop
000000000003d4a4	b	0x3d534
000000000003d4a8	adr	x10, #0x1fb04 ; literal pool for: "m"
000000000003d4ac	nop
000000000003d4b0	adr	x11, #0x1fafa ; literal pool for: "k"
000000000003d4b4	nop
000000000003d4b8	cmp	x9, #0x100, lsl #12
000000000003d4bc	csel	x10, x11, x10, lt
000000000003d4c0	mov	w11, #0x100000
000000000003d4c4	mov	w12, #0x400
000000000003d4c8	csel	x11, x12, x11, lt
000000000003d4cc	lsl	x12, x11, #10
000000000003d4d0	adr	x13, #0x1fade ; literal pool for: "g"
000000000003d4d4	nop
000000000003d4d8	cmp	x9, x12
000000000003d4dc	csel	x9, x10, x13, lt
000000000003d4e0	csel	x10, x11, x12, lt
000000000003d4e4	mov	w11, #0xcccd
000000000003d4e8	movk	w11, #0xcccc, lsl #16
000000000003d4ec	mul	x10, x10, x11
000000000003d4f0	lsr	x10, x10, #35
000000000003d4f4	sdiv	x8, x8, x10
000000000003d4f8	mov	x10, #0x6666666666666666
000000000003d4fc	movk	x10, #0x6667
000000000003d500	smulh	x10, x8, x10
000000000003d504	asr	x11, x10, #2
000000000003d508	add	x10, x11, x10, lsr #63
000000000003d50c	mov	x11, #-0xa
000000000003d510	madd	x8, x10, x11, x8
000000000003d514	cmp	x8, #0x0
000000000003d518	cneg	x8, x8, mi
000000000003d51c	adr	x11, #0x1fab2 ; literal pool for: " "
000000000003d520	nop
000000000003d524	stp	x9, x11, [sp, #0x10]
000000000003d528	stp	x10, x8, [sp]
000000000003d52c	adr	x2, #0x1fa84 ; literal pool for: "%ld.%ld %s%s"
000000000003d530	nop
000000000003d534	add	x0, sp, #0x20
000000000003d538	mov	w1, #0x20
000000000003d53c	bl	0x55e58 ; symbol stub for: _snprintf
000000000003d540	add	x8, sp, #0x20
000000000003d544	str	x8, [sp]
000000000003d548	adr	x2, #0x1fa88 ; literal pool for: "%11s"
000000000003d54c	nop
000000000003d550	mov	x1, x19
000000000003d554	bl	__mi_fprintf
000000000003d558	adr	x8, #0x1fc53 ; literal pool for: ""
000000000003d55c	nop
000000000003d560	str	x8, [sp]
000000000003d564	adr	x2, #0x1fa89 ; literal pool for: "%22s"
000000000003d568	nop
000000000003d56c	mov	x1, x19
000000000003d570	b	0x3cf90
_mi_stat_counter_print:
000000000003d574	sub	sp, sp, #0x60
000000000003d578	stp	x20, x19, [sp, #0x40]
000000000003d57c	stp	x29, x30, [sp, #0x50]
000000000003d580	add	x29, sp, #0x50
000000000003d584	mov	x19, x2
000000000003d588	mov	x20, x0
000000000003d58c	str	x1, [sp]
000000000003d590	adr	x2, #0x1fa38 ; literal pool for: "%10s:"
000000000003d594	nop
000000000003d598	mov	x1, x19
000000000003d59c	bl	__mi_fprintf
000000000003d5a0	ldr	x8, [x20]
000000000003d5a4	cmp	x8, #0x0
000000000003d5a8	cneg	x9, x8, mi
000000000003d5ac	cmp	x9, #0x3ff
000000000003d5b0	b.gt	0x3d5cc
000000000003d5b4	adr	x9, #0x1fa1a ; literal pool for: " "
000000000003d5b8	nop
000000000003d5bc	stp	x8, x9, [sp]
000000000003d5c0	adr	x2, #0x1f9e1 ; literal pool for: "%d %s "
000000000003d5c4	nop
000000000003d5c8	b	0x3d658
000000000003d5cc	adr	x10, #0x1f9e0 ; literal pool for: "m"
000000000003d5d0	nop
000000000003d5d4	adr	x11, #0x1f9d6 ; literal pool for: "k"
000000000003d5d8	nop
000000000003d5dc	cmp	x9, #0x100, lsl #12
000000000003d5e0	csel	x10, x11, x10, lt
000000000003d5e4	mov	w11, #0x100000
000000000003d5e8	mov	w12, #0x400
000000000003d5ec	csel	x11, x12, x11, lt
000000000003d5f0	lsl	x12, x11, #10
000000000003d5f4	adr	x13, #0x1f9ba ; literal pool for: "g"
000000000003d5f8	nop
000000000003d5fc	cmp	x9, x12
000000000003d600	csel	x9, x10, x13, lt
000000000003d604	csel	x10, x11, x12, lt
000000000003d608	mov	w11, #0xcccd
000000000003d60c	movk	w11, #0xcccc, lsl #16
000000000003d610	mul	x10, x10, x11
000000000003d614	lsr	x10, x10, #35
000000000003d618	sdiv	x8, x8, x10
000000000003d61c	mov	x10, #0x6666666666666666
000000000003d620	movk	x10, #0x6667
000000000003d624	smulh	x10, x8, x10
000000000003d628	asr	x11, x10, #2
000000000003d62c	add	x10, x11, x10, lsr #63
000000000003d630	mov	x11, #-0xa
000000000003d634	madd	x8, x10, x11, x8
000000000003d638	cmp	x8, #0x0
000000000003d63c	cneg	x8, x8, mi
000000000003d640	adr	x11, #0x1f98e ; literal pool for: " "
000000000003d644	nop
000000000003d648	stp	x9, x11, [sp, #0x10]
000000000003d64c	stp	x10, x8, [sp]
000000000003d650	adr	x2, #0x1f960 ; literal pool for: "%ld.%ld %s%s"
000000000003d654	nop
000000000003d658	add	x0, sp, #0x20
000000000003d65c	mov	w1, #0x20
000000000003d660	bl	0x55e58 ; symbol stub for: _snprintf
000000000003d664	add	x8, sp, #0x20
000000000003d668	str	x8, [sp]
000000000003d66c	adr	x2, #0x1f964 ; literal pool for: "%11s"
000000000003d670	nop
000000000003d674	mov	x1, x19
000000000003d678	bl	__mi_fprintf
000000000003d67c	adr	x2, #0x1fe22 ; literal pool for: "\n"
000000000003d680	nop
000000000003d684	mov	x1, x19
000000000003d688	bl	__mi_fprintf
000000000003d68c	ldp	x29, x30, [sp, #0x50]
000000000003d690	ldp	x20, x19, [sp, #0x40]
000000000003d694	add	sp, sp, #0x60
000000000003d698	ret
_chacha_block:
000000000003d69c	stp	x20, x19, [sp, #-0x10]!
000000000003d6a0	ldp	w15, w16, [x0]
000000000003d6a4	ldp	w17, w2, [x0, #0x8]
000000000003d6a8	ldp	w7, w12, [x0, #0x10]
000000000003d6ac	ldp	w13, w14, [x0, #0x18]
000000000003d6b0	ldp	w5, w6, [x0, #0x20]
000000000003d6b4	ldp	w9, w10, [x0, #0x28]
000000000003d6b8	ldp	w1, w3, [x0, #0x30]
000000000003d6bc	mov	x11, #-0x2
000000000003d6c0	ldp	w4, w8, [x0, #0x38]
000000000003d6c4	add	w15, w15, w7
000000000003d6c8	eor	w1, w1, w15
000000000003d6cc	ror	w1, w1, #0x10
000000000003d6d0	add	w5, w1, w5
000000000003d6d4	eor	w7, w5, w7
000000000003d6d8	ror	w7, w7, #0x14
000000000003d6dc	add	w15, w7, w15
000000000003d6e0	eor	w1, w15, w1
000000000003d6e4	ror	w1, w1, #0x18
000000000003d6e8	add	w5, w1, w5
000000000003d6ec	eor	w7, w5, w7
000000000003d6f0	ror	w7, w7, #0x19
000000000003d6f4	add	w16, w16, w12
000000000003d6f8	eor	w3, w3, w16
000000000003d6fc	ror	w3, w3, #0x10
000000000003d700	add	w6, w3, w6
000000000003d704	eor	w12, w6, w12
000000000003d708	ror	w12, w12, #0x14
000000000003d70c	add	w16, w12, w16
000000000003d710	eor	w3, w16, w3
000000000003d714	ror	w3, w3, #0x18
000000000003d718	add	w6, w3, w6
000000000003d71c	eor	w12, w6, w12
000000000003d720	ror	w12, w12, #0x19
000000000003d724	add	w17, w17, w13
000000000003d728	eor	w4, w4, w17
000000000003d72c	ror	w4, w4, #0x10
000000000003d730	add	w9, w4, w9
000000000003d734	eor	w13, w9, w13
000000000003d738	ror	w13, w13, #0x14
000000000003d73c	add	w17, w13, w17
000000000003d740	eor	w4, w17, w4
000000000003d744	ror	w4, w4, #0x18
000000000003d748	add	w9, w4, w9
000000000003d74c	eor	w13, w9, w13
000000000003d750	ror	w13, w13, #0x19
000000000003d754	add	w2, w2, w14
000000000003d758	eor	w8, w8, w2
000000000003d75c	ror	w8, w8, #0x10
000000000003d760	add	w10, w8, w10
000000000003d764	eor	w14, w10, w14
000000000003d768	ror	w14, w14, #0x14
000000000003d76c	add	w2, w14, w2
000000000003d770	eor	w8, w2, w8
000000000003d774	ror	w8, w8, #0x18
000000000003d778	add	w10, w8, w10
000000000003d77c	eor	w14, w10, w14
000000000003d780	ror	w14, w14, #0x19
000000000003d784	add	w15, w12, w15
000000000003d788	eor	w8, w8, w15
000000000003d78c	ror	w8, w8, #0x10
000000000003d790	add	w9, w8, w9
000000000003d794	eor	w12, w9, w12
000000000003d798	ror	w12, w12, #0x14
000000000003d79c	add	w15, w12, w15
000000000003d7a0	eor	w8, w15, w8
000000000003d7a4	ror	w8, w8, #0x18
000000000003d7a8	add	w9, w8, w9
000000000003d7ac	eor	w12, w9, w12
000000000003d7b0	ror	w12, w12, #0x19
000000000003d7b4	add	w16, w13, w16
000000000003d7b8	eor	w1, w16, w1
000000000003d7bc	ror	w1, w1, #0x10
000000000003d7c0	add	w10, w10, w1
000000000003d7c4	eor	w13, w10, w13
000000000003d7c8	ror	w13, w13, #0x14
000000000003d7cc	add	w16, w13, w16
000000000003d7d0	eor	w1, w16, w1
000000000003d7d4	ror	w1, w1, #0x18
000000000003d7d8	add	w10, w1, w10
000000000003d7dc	eor	w13, w10, w13
000000000003d7e0	ror	w13, w13, #0x19
000000000003d7e4	add	w17, w14, w17
000000000003d7e8	eor	w3, w17, w3
000000000003d7ec	ror	w3, w3, #0x10
000000000003d7f0	add	w5, w3, w5
000000000003d7f4	eor	w14, w5, w14
000000000003d7f8	ror	w14, w14, #0x14
000000000003d7fc	add	w17, w14, w17
000000000003d800	eor	w3, w17, w3
000000000003d804	ror	w3, w3, #0x18
000000000003d808	add	w5, w3, w5
000000000003d80c	eor	w14, w5, w14
000000000003d810	ror	w14, w14, #0x19
000000000003d814	add	w2, w2, w7
000000000003d818	eor	w4, w2, w4
000000000003d81c	ror	w4, w4, #0x10
000000000003d820	add	w6, w4, w6
000000000003d824	eor	w7, w6, w7
000000000003d828	ror	w7, w7, #0x14
000000000003d82c	add	w2, w7, w2
000000000003d830	eor	w4, w2, w4
000000000003d834	ror	w4, w4, #0x18
000000000003d838	add	w6, w4, w6
000000000003d83c	eor	w7, w6, w7
000000000003d840	ror	w7, w7, #0x19
000000000003d844	add	x11, x11, #0x2
000000000003d848	cmp	x11, #0x12
000000000003d84c	b.lo	0x3d6c4
000000000003d850	ldp	w11, w19, [x0]
000000000003d854	add	w11, w11, w15
000000000003d858	add	w15, w19, w16
000000000003d85c	stp	w11, w15, [x0, #0x40]
000000000003d860	ldp	w11, w15, [x0, #0x8]
000000000003d864	add	w11, w11, w17
000000000003d868	add	w15, w15, w2
000000000003d86c	stp	w11, w15, [x0, #0x48]
000000000003d870	ldp	w11, w15, [x0, #0x10]
000000000003d874	add	w11, w11, w7
000000000003d878	add	w12, w15, w12
000000000003d87c	stp	w11, w12, [x0, #0x50]
000000000003d880	ldp	w11, w12, [x0, #0x18]
000000000003d884	add	w11, w11, w13
000000000003d888	add	w12, w12, w14
000000000003d88c	stp	w11, w12, [x0, #0x58]
000000000003d890	ldp	w11, w12, [x0, #0x20]
000000000003d894	add	w11, w11, w5
000000000003d898	add	w12, w12, w6
000000000003d89c	stp	w11, w12, [x0, #0x60]
000000000003d8a0	ldp	w11, w12, [x0, #0x28]
000000000003d8a4	add	w9, w11, w9
000000000003d8a8	add	w10, w12, w10
000000000003d8ac	stp	w9, w10, [x0, #0x68]
000000000003d8b0	ldp	w11, w10, [x0, #0x30]
000000000003d8b4	add	w9, w11, w1
000000000003d8b8	add	w12, w10, w3
000000000003d8bc	stp	w9, w12, [x0, #0x70]
000000000003d8c0	ldp	w9, w12, [x0, #0x38]
000000000003d8c4	add	w13, w9, w4
000000000003d8c8	add	w8, w12, w8
000000000003d8cc	stp	w13, w8, [x0, #0x78]
000000000003d8d0	mov	w8, #0x10
000000000003d8d4	str	w8, [x0, #0x80]
000000000003d8d8	adds	w8, w11, #0x1
000000000003d8dc	str	w8, [x0, #0x30]
000000000003d8e0	b.lo	0x3d8f8
000000000003d8e4	adds	w8, w10, #0x1
000000000003d8e8	str	w8, [x0, #0x34]
000000000003d8ec	b.lo	0x3d8f8
000000000003d8f0	add	w8, w9, #0x1
000000000003d8f4	str	w8, [x0, #0x38]
000000000003d8f8	ldp	x20, x19, [sp], #0x10
000000000003d8fc	ret
__mi_malloc_generic:
000000000003d900	sub	sp, sp, #0x70
000000000003d904	stp	x28, x27, [sp, #0x10]
000000000003d908	stp	x26, x25, [sp, #0x20]
000000000003d90c	stp	x24, x23, [sp, #0x30]
000000000003d910	stp	x22, x21, [sp, #0x40]
000000000003d914	stp	x20, x19, [sp, #0x50]
000000000003d918	stp	x29, x30, [sp, #0x60]
000000000003d91c	add	x29, sp, #0x60
000000000003d920	mov	x19, x1
000000000003d924	mov	x21, x0
000000000003d928	adr	x22, #0x339d8
000000000003d92c	nop
000000000003d930	adrp	x20, 61 ; 0x7a000
000000000003d934	add	x20, x20, #0x4f8
000000000003d938	ldr	x23, [x20]
000000000003d93c	adrp	x24, 87 ; 0x94000
000000000003d940	mov	w25, #0x1
000000000003d944	adr	x26, #0x56e04
000000000003d948	nop
000000000003d94c	cmp	x21, x22
000000000003d950	b.eq	0x3d9fc
000000000003d954	ldr	x8, [x21]
000000000003d958	ldr	x9, [x8]
000000000003d95c	add	x1, x9, #0x1
000000000003d960	str	x1, [x8]
000000000003d964	ldr	x9, [x24, #0x748]
000000000003d968	cbz	x9, 0x3d994
000000000003d96c	ldrb	w9, [x8, #0x8]
000000000003d970	cbnz	w9, 0x3d994
000000000003d974	strb	w25, [x8, #0x8]
000000000003d978	mov	x8, x26
000000000003d97c	ldr	x9, [x8], #0x8
000000000003d980	ldr	x2, [x8]
000000000003d984	mov	w0, #0x0
000000000003d988	blr	x9
000000000003d98c	ldr	x8, [x21]
000000000003d990	strb	wzr, [x8, #0x8]
000000000003d994	add	x8, x21, #0xb18
000000000003d998	ldr	x9, [x21, #0xb18]
000000000003d99c	b	0x3d9ac
000000000003d9a0	clrex
000000000003d9a4	mov	w10, #0x0
000000000003d9a8	cbnz	w10, 0x3d9d0
000000000003d9ac	cbz	x9, 0x3d9e0
000000000003d9b0	mov	x0, x9
000000000003d9b4	ldaxr	x9, [x8]
000000000003d9b8	cmp	x9, x0
000000000003d9bc	b.ne	0x3d9a0
000000000003d9c0	stlxr	w10, xzr, [x8]
000000000003d9c4	cbnz	w10, 0x3d9a4
000000000003d9c8	mov	w10, #0x1
000000000003d9cc	cbz	w10, 0x3d9ac
000000000003d9d0	ldr	x27, [x0]
000000000003d9d4	bl	__mi_free_delayed_block
000000000003d9d8	mov	x0, x27
000000000003d9dc	cbnz	x27, 0x3d9d0
000000000003d9e0	mov	x0, x21
000000000003d9e4	mov	x1, x19
000000000003d9e8	bl	_mi_find_page
000000000003d9ec	cbz	x0, 0x3da18
000000000003d9f0	ldr	x8, [x0, #0x8]
000000000003d9f4	cbnz	x8, 0x3da50
000000000003d9f8	b	0x3d94c
000000000003d9fc	bl	_mi_thread_init
000000000003da00	mov	x0, x20
000000000003da04	blr	x23
000000000003da08	ldr	x21, [x0]
000000000003da0c	cmp	x21, x22
000000000003da10	b.ne	0x3d954
000000000003da14	b	0x3da88
000000000003da18	mov	x0, x21
000000000003da1c	mov	w1, #0x1
000000000003da20	bl	_mi_heap_collect_ex
000000000003da24	mov	x0, x21
000000000003da28	mov	x1, x19
000000000003da2c	bl	_mi_find_page
000000000003da30	cbnz	x0, 0x3d9f0
000000000003da34	str	x19, [sp]
000000000003da38	adr	x1, #0x1f5ba ; literal pool for: "unable to allocate memory (%zu bytes)\n"
000000000003da3c	nop
000000000003da40	mov	w0, #0xc
000000000003da44	bl	__mi_error_message
000000000003da48	mov	x8, #0x0
000000000003da4c	b	0x3da64
000000000003da50	ldr	w9, [x0, #0x10]
000000000003da54	add	w9, w9, #0x1
000000000003da58	str	w9, [x0, #0x10]
000000000003da5c	ldr	x9, [x8]
000000000003da60	str	x9, [x0, #0x8]
000000000003da64	mov	x0, x8
000000000003da68	ldp	x29, x30, [sp, #0x60]
000000000003da6c	ldp	x20, x19, [sp, #0x50]
000000000003da70	ldp	x22, x21, [sp, #0x40]
000000000003da74	ldp	x24, x23, [sp, #0x30]
000000000003da78	ldp	x26, x25, [sp, #0x20]
000000000003da7c	ldp	x28, x27, [sp, #0x10]
000000000003da80	add	sp, sp, #0x70
000000000003da84	ret
000000000003da88	mov	x8, #0x0
000000000003da8c	b	0x3da64
_mi_find_page:
000000000003da90	sub	sp, sp, #0x40
000000000003da94	stp	x22, x21, [sp, #0x10]
000000000003da98	stp	x20, x19, [sp, #0x20]
000000000003da9c	stp	x29, x30, [sp, #0x30]
000000000003daa0	add	x29, sp, #0x30
000000000003daa4	mov	x20, x0
000000000003daa8	cmp	x1, #0x200, lsl #12
000000000003daac	b.hi	0x3dc60
000000000003dab0	cmp	x1, #0x9
000000000003dab4	b.hs	0x3dad4
000000000003dab8	mov	w8, #0x1
000000000003dabc	and	x8, x8, #0xff
000000000003dac0	mov	w9, #0x18
000000000003dac4	madd	x21, x8, x9, x20
000000000003dac8	ldr	x19, [x21, #0x410]
000000000003dacc	cbnz	x19, 0x3db40
000000000003dad0	b	0x3dc40
000000000003dad4	add	x8, x1, #0x7
000000000003dad8	lsr	x8, x8, #3
000000000003dadc	cmp	x1, #0x40
000000000003dae0	b.hi	0x3db04
000000000003dae4	add	w8, w8, #0x1
000000000003dae8	and	x8, x8, #0xfe
000000000003daec	and	x8, x8, #0xff
000000000003daf0	mov	w9, #0x18
000000000003daf4	madd	x21, x8, x9, x20
000000000003daf8	ldr	x19, [x21, #0x410]
000000000003dafc	cbnz	x19, 0x3db40
000000000003db00	b	0x3dc40
000000000003db04	sub	x8, x8, #0x1
000000000003db08	clz	x9, x8
000000000003db0c	mov	w10, #0x3f
000000000003db10	sub	w9, w10, w9
000000000003db14	and	w9, w9, #0xff
000000000003db18	sub	w10, w9, #0x2
000000000003db1c	lsr	x8, x8, x10
000000000003db20	and	w8, w8, #0x3
000000000003db24	bfi	w8, w9, #2, #8
000000000003db28	add	w8, w8, #0xfd
000000000003db2c	and	x8, x8, #0xff
000000000003db30	mov	w9, #0x18
000000000003db34	madd	x21, x8, x9, x20
000000000003db38	ldr	x19, [x21, #0x410]
000000000003db3c	cbz	x19, 0x3dc40
000000000003db40	ldr	x8, [x19, #0x20]
000000000003db44	cmp	x8, #0x4
000000000003db48	b.lo	0x3dbcc
000000000003db4c	add	x8, x19, #0x20
000000000003db50	ldr	x9, [x8]
000000000003db54	b	0x3db64
000000000003db58	clrex
000000000003db5c	mov	w11, #0x0
000000000003db60	cbnz	w11, 0x3db88
000000000003db64	mov	x10, x9
000000000003db68	ldaxr	x9, [x8]
000000000003db6c	cmp	x9, x10
000000000003db70	b.ne	0x3db58
000000000003db74	and	x11, x10, #0x3
000000000003db78	stlxr	w12, x11, [x8]
000000000003db7c	cbnz	w12, 0x3db5c
000000000003db80	mov	w11, #0x1
000000000003db84	cbz	w11, 0x3db64
000000000003db88	ands	x8, x10, #0xfffffffffffffffc
000000000003db8c	b.eq	0x3dbcc
000000000003db90	mov	w9, #0x0
000000000003db94	ldrh	w10, [x19, #0x2]
000000000003db98	mov	x12, x8
000000000003db9c	mov	x11, x12
000000000003dba0	add	w9, w9, #0x1
000000000003dba4	ldr	x12, [x12]
000000000003dba8	cmp	w9, w10
000000000003dbac	ccmp	x12, #0x0, #0x4, ls
000000000003dbb0	b.ne	0x3db9c
000000000003dbb4	cmp	w9, w10
000000000003dbb8	b.ls	0x3dbf4
000000000003dbbc	adr	x1, #0x1f23d ; literal pool for: "corrupted thread-free list\n"
000000000003dbc0	nop
000000000003dbc4	mov	w0, #0xe
000000000003dbc8	bl	__mi_error_message
000000000003dbcc	ldr	x8, [x19, #0x18]
000000000003dbd0	ldr	x9, [x19, #0x8]
000000000003dbd4	cbz	x8, 0x3dc18
000000000003dbd8	cbnz	x9, 0x3dc1c
000000000003dbdc	str	x8, [x19, #0x8]
000000000003dbe0	str	xzr, [x19, #0x18]
000000000003dbe4	ldrb	w8, [x19, #0x7]
000000000003dbe8	and	w8, w8, #0xfe
000000000003dbec	strb	w8, [x19, #0x7]
000000000003dbf0	b	0x3dc1c
000000000003dbf4	ldr	x10, [x19, #0x18]
000000000003dbf8	str	x10, [x11]
000000000003dbfc	str	x8, [x19, #0x18]
000000000003dc00	ldr	w8, [x19, #0x10]
000000000003dc04	sub	w8, w8, w9
000000000003dc08	str	w8, [x19, #0x10]
000000000003dc0c	ldr	x8, [x19, #0x18]
000000000003dc10	ldr	x9, [x19, #0x8]
000000000003dc14	cbnz	x8, 0x3dbd8
000000000003dc18	cbz	x9, 0x3dc40
000000000003dc1c	ldrb	w8, [x19, #0x7]
000000000003dc20	and	w8, w8, #0x1
000000000003dc24	strb	w8, [x19, #0x7]
000000000003dc28	mov	x0, x19
000000000003dc2c	ldp	x29, x30, [sp, #0x30]
000000000003dc30	ldp	x20, x19, [sp, #0x20]
000000000003dc34	ldp	x22, x21, [sp, #0x10]
000000000003dc38	add	sp, sp, #0x40
000000000003dc3c	ret
000000000003dc40	add	x1, x21, #0x410
000000000003dc44	mov	x0, x20
000000000003dc48	mov	w2, #0x1
000000000003dc4c	ldp	x29, x30, [sp, #0x30]
000000000003dc50	ldp	x20, x19, [sp, #0x20]
000000000003dc54	ldp	x22, x21, [sp, #0x10]
000000000003dc58	add	sp, sp, #0x40
000000000003dc5c	b	_mi_page_queue_find_free_ex
000000000003dc60	tbnz	x1, #0x3f, 0x3ddc0
000000000003dc64	lsr	x8, x1, #25
000000000003dc68	cmp	x8, #0x0
000000000003dc6c	mov	w8, #0x400000
000000000003dc70	mov	w9, #0x100000
000000000003dc74	csel	x8, x9, x8, eq
000000000003dc78	cmp	x1, #0x800, lsl #12
000000000003dc7c	mov	w9, #0x40000
000000000003dc80	csel	x8, x9, x8, lo
000000000003dc84	mvn	x9, x8
000000000003dc88	add	x10, x1, x8
000000000003dc8c	sub	x10, x10, #0x1
000000000003dc90	neg	x8, x8
000000000003dc94	and	x8, x10, x8
000000000003dc98	cmp	x9, x1
000000000003dc9c	csel	x2, x8, x1, hi
000000000003dca0	mov	x0, x20
000000000003dca4	mov	x1, #0x0
000000000003dca8	bl	_mi_page_fresh_alloc
000000000003dcac	mov	x19, x0
000000000003dcb0	cbz	x0, 0x3dc28
000000000003dcb4	ldr	w8, [x19, #0x14]
000000000003dcb8	ubfx	x9, x8, #26, #6
000000000003dcbc	cbnz	w9, 0x3ddf0
000000000003dcc0	mov	x1, x8
000000000003dcc4	add	x8, x19, #0x28
000000000003dcc8	stlr	xzr, [x8]
000000000003dccc	ldr	x8, [x20]
000000000003dcd0	mov	w9, #0x1
000000000003dcd4	movk	w9, #0x400, lsl #16
000000000003dcd8	cmp	x1, x9
000000000003dcdc	b.lo	0x3dd38
000000000003dce0	add	x0, x8, #0x210
000000000003dce4	bl	__mi_stat_increase
000000000003dce8	ldr	x9, [x20]
000000000003dcec	add	x8, x9, #0x2e0
000000000003dcf0	adr	x10, #0x56e10
000000000003dcf4	nop
000000000003dcf8	add	x9, x9, #0x2e8
000000000003dcfc	cmp	x8, x10
000000000003dd00	b.lo	0x3dd90
000000000003dd04	adr	x10, #0x5703c
000000000003dd08	nop
000000000003dd0c	cmp	x8, x10
000000000003dd10	b.hs	0x3dd90
000000000003dd14	ldxr	x10, [x9]
000000000003dd18	add	x10, x10, #0x1
000000000003dd1c	stxr	w11, x10, [x9]
000000000003dd20	cbnz	w11, 0x3dd14
000000000003dd24	ldxr	x9, [x8]
000000000003dd28	add	x9, x9, #0x1
000000000003dd2c	stxr	w10, x9, [x8]
000000000003dd30	cbnz	w10, 0x3dd24
000000000003dd34	b	0x3dc28
000000000003dd38	add	x0, x8, #0x1f0
000000000003dd3c	bl	__mi_stat_increase
000000000003dd40	ldr	x9, [x20]
000000000003dd44	add	x8, x9, #0x2d0
000000000003dd48	adr	x10, #0x56db8
000000000003dd4c	nop
000000000003dd50	add	x9, x9, #0x2d8
000000000003dd54	cmp	x8, x10
000000000003dd58	b.lo	0x3dd90
000000000003dd5c	adr	x10, #0x56fe4
000000000003dd60	nop
000000000003dd64	cmp	x8, x10
000000000003dd68	b.hs	0x3dd90
000000000003dd6c	ldxr	x10, [x9]
000000000003dd70	add	x10, x10, #0x1
000000000003dd74	stxr	w11, x10, [x9]
000000000003dd78	cbnz	w11, 0x3dd6c
000000000003dd7c	ldxr	x9, [x8]
000000000003dd80	add	x9, x9, #0x1
000000000003dd84	stxr	w10, x9, [x8]
000000000003dd88	cbnz	w10, 0x3dd7c
000000000003dd8c	b	0x3dc28
000000000003dd90	ldr	x10, [x9]
000000000003dd94	add	x10, x10, #0x1
000000000003dd98	str	x10, [x9]
000000000003dd9c	ldr	x9, [x8]
000000000003dda0	add	x9, x9, #0x1
000000000003dda4	str	x9, [x8]
000000000003dda8	mov	x0, x19
000000000003ddac	ldp	x29, x30, [sp, #0x30]
000000000003ddb0	ldp	x20, x19, [sp, #0x20]
000000000003ddb4	ldp	x22, x21, [sp, #0x10]
000000000003ddb8	add	sp, sp, #0x40
000000000003ddbc	ret
000000000003ddc0	str	x1, [sp]
000000000003ddc4	adr	x1, #0x1f255 ; literal pool for: "allocation request is too large (%zu bytes)\n"
000000000003ddc8	nop
000000000003ddcc	mov	w0, #0x54
000000000003ddd0	bl	__mi_error_message
000000000003ddd4	mov	x19, #0x0
000000000003ddd8	mov	x0, x19
000000000003dddc	ldp	x29, x30, [sp, #0x30]
000000000003dde0	ldp	x20, x19, [sp, #0x20]
000000000003dde4	ldp	x22, x21, [sp, #0x10]
000000000003dde8	add	sp, sp, #0x40
000000000003ddec	ret
000000000003ddf0	and	x9, x19, #0xffffffffffc00000
000000000003ddf4	ldr	w10, [x9, #0x70]
000000000003ddf8	cmp	w10, #0x3
000000000003ddfc	b.ne	0x3de08
000000000003de00	ldr	x11, [x9, #0x48]
000000000003de04	b	0x3de14
000000000003de08	ldr	x11, [x9, #0x60]
000000000003de0c	mov	w12, #0x1
000000000003de10	lsl	x11, x12, x11
000000000003de14	ldrb	w12, [x19]
000000000003de18	cbz	x12, 0x3de24
000000000003de1c	mov	x1, x11
000000000003de20	b	0x3dcc4
000000000003de24	ldr	x13, [x9, #0x50]
000000000003de28	sub	x1, x11, x13
000000000003de2c	cmp	w10, #0x1
000000000003de30	ccmp	w8, #0x0, #0x4, ls
000000000003de34	b.eq	0x3dcc4
000000000003de38	madd	x9, x11, x12, x9
000000000003de3c	add	x9, x9, x13
000000000003de40	udiv	x10, x9, x8
000000000003de44	neg	x9, x9
000000000003de48	madd	x9, x10, x8, x9
000000000003de4c	add	x9, x8, x9
000000000003de50	cmp	x9, x8
000000000003de54	csel	x8, x9, xzr, lo
000000000003de58	sub	x1, x1, x8
000000000003de5c	b	0x3dcc4
_mi_page_fresh_alloc:
000000000003de60	sub	sp, sp, #0x70
000000000003de64	stp	x28, x27, [sp, #0x10]
000000000003de68	stp	x26, x25, [sp, #0x20]
000000000003de6c	stp	x24, x23, [sp, #0x30]
000000000003de70	stp	x22, x21, [sp, #0x40]
000000000003de74	stp	x20, x19, [sp, #0x50]
000000000003de78	stp	x29, x30, [sp, #0x60]
000000000003de7c	add	x29, sp, #0x60
000000000003de80	mov	x22, x2
000000000003de84	mov	x20, x1
000000000003de88	mov	x19, x0
000000000003de8c	ldr	x23, [x0]
000000000003de90	add	x21, x23, #0x20
000000000003de94	add	x5, x23, #0xa0
000000000003de98	cmp	x2, #0x4, lsl #12
000000000003de9c	b.hi	0x3decc
000000000003dea0	ldr	x0, [x21]
000000000003dea4	cbnz	x0, 0x3e100
000000000003dea8	mov	x0, x19
000000000003deac	mov	x1, x22
000000000003deb0	mov	w2, #0x0
000000000003deb4	mov	w3, #0x10
000000000003deb8	mov	x4, x21
000000000003debc	bl	_mi_segment_reclaim_or_alloc
000000000003dec0	cbz	x0, 0x3dfac
000000000003dec4	ldr	x0, [x21]
000000000003dec8	b	0x3e100
000000000003decc	cmp	x22, #0x20, lsl #12
000000000003ded0	b.hi	0x3df00
000000000003ded4	ldr	x0, [x23, #0x30]
000000000003ded8	cbnz	x0, 0x3e100
000000000003dedc	mov	x0, x19
000000000003dee0	mov	x1, x22
000000000003dee4	mov	w2, #0x1
000000000003dee8	mov	w3, #0x13
000000000003deec	mov	x4, x21
000000000003def0	bl	_mi_segment_reclaim_or_alloc
000000000003def4	cbz	x0, 0x3dfac
000000000003def8	ldr	x0, [x23, #0x30]
000000000003defc	b	0x3e100
000000000003df00	mov	w8, #0x1
000000000003df04	movk	w8, #0x2, lsl #16
000000000003df08	add	x8, x8, #0x1e0, lsl #12
000000000003df0c	cmp	x22, x8
000000000003df10	b.hs	0x3df34
000000000003df14	mov	x0, x19
000000000003df18	mov	x1, x22
000000000003df1c	mov	w2, #0x2
000000000003df20	mov	w3, #0x16
000000000003df24	mov	x4, x21
000000000003df28	bl	_mi_segment_reclaim_or_alloc
000000000003df2c	cbnz	x0, 0x3e100
000000000003df30	b	0x3dfac
000000000003df34	mov	x0, #0x0
000000000003df38	mov	x1, x22
000000000003df3c	mov	w2, #0x3
000000000003df40	mov	w3, #0x16
000000000003df44	mov	x4, x21
000000000003df48	bl	_mi_segment_init
000000000003df4c	cbz	x0, 0x3dfac
000000000003df50	add	x8, x0, #0x68
000000000003df54	stlr	xzr, [x8]
000000000003df58	ldr	x8, [x0, #0x48]
000000000003df5c	ldr	x9, [x23, #0x90]
000000000003df60	adr	x10, #0x56ba0
000000000003df64	nop
000000000003df68	cmp	x9, x10
000000000003df6c	cset	w11, hs
000000000003df70	add	x10, x10, #0x240
000000000003df74	cmp	x9, x10
000000000003df78	cset	w10, lo
000000000003df7c	and	w10, w11, w10
000000000003df80	add	x12, x9, #0x18
000000000003df84	cmp	x8, #0x0
000000000003df88	b.le	0x3e014
000000000003df8c	cbz	w10, 0x3e084
000000000003df90	ldxr	x10, [x12]
000000000003df94	sub	x10, x10, #0x1
000000000003df98	stxr	w11, x10, [x12]
000000000003df9c	cbnz	w11, 0x3df90
000000000003dfa0	add	x11, x9, #0x10
000000000003dfa4	ldr	x13, [x9, #0x10]
000000000003dfa8	b	0x3dfd0
000000000003dfac	mov	x21, #0x0
000000000003dfb0	mov	w0, #0xa
000000000003dfb4	bl	_mi_option_get
000000000003dfb8	cbnz	x0, 0x3e118
000000000003dfbc	b	0x3e1fc
000000000003dfc0	clrex
000000000003dfc4	mov	w14, #0x0
000000000003dfc8	mov	x13, x12
000000000003dfcc	cbnz	w14, 0x3dff8
000000000003dfd0	cmp	x13, x10
000000000003dfd4	b.ge	0x3dff8
000000000003dfd8	ldxr	x12, [x11]
000000000003dfdc	cmp	x12, x13
000000000003dfe0	b.ne	0x3dfc0
000000000003dfe4	stlxr	w13, x10, [x11]
000000000003dfe8	cbnz	w13, 0x3dfc4
000000000003dfec	mov	w14, #0x1
000000000003dff0	mov	x13, x12
000000000003dff4	cbz	w14, 0x3dfd0
000000000003dff8	add	x9, x9, #0x8
000000000003dffc	ldxr	x10, [x9]
000000000003e000	add	x10, x10, #0x1
000000000003e004	stxr	w11, x10, [x9]
000000000003e008	cbnz	w11, 0x3dffc
000000000003e00c	mov	x10, #-0x1
000000000003e010	b	0x3e0d0
000000000003e014	cbz	w10, 0x3e0a8
000000000003e018	ldxr	x10, [x12]
000000000003e01c	add	x11, x10, #0x1
000000000003e020	stxr	w13, x11, [x12]
000000000003e024	cbnz	w13, 0x3e018
000000000003e028	add	x12, x9, #0x10
000000000003e02c	ldr	x14, [x9, #0x10]
000000000003e030	b	0x3e044
000000000003e034	clrex
000000000003e038	mov	w15, #0x0
000000000003e03c	mov	x14, x13
000000000003e040	cbnz	w15, 0x3e06c
000000000003e044	cmp	x14, x10
000000000003e048	b.gt	0x3e06c
000000000003e04c	ldxr	x13, [x12]
000000000003e050	cmp	x13, x14
000000000003e054	b.ne	0x3e034
000000000003e058	stlxr	w14, x11, [x12]
000000000003e05c	cbnz	w14, 0x3e038
000000000003e060	mov	w15, #0x1
000000000003e064	mov	x14, x13
000000000003e068	cbz	w15, 0x3e044
000000000003e06c	mov	w10, #0x1
000000000003e070	ldxr	x11, [x9]
000000000003e074	add	x11, x11, #0x1
000000000003e078	stxr	w12, x11, [x9]
000000000003e07c	cbnz	w12, 0x3e070
000000000003e080	b	0x3e0d0
000000000003e084	ldp	x11, x10, [x9, #0x10]
000000000003e088	sub	x10, x10, #0x1
000000000003e08c	str	x10, [x9, #0x18]
000000000003e090	cmp	x10, x11
000000000003e094	b.le	0x3e09c
000000000003e098	str	x10, [x9, #0x10]
000000000003e09c	add	x9, x9, #0x8
000000000003e0a0	mov	x10, #-0x1
000000000003e0a4	b	0x3e0c4
000000000003e0a8	ldp	x12, x11, [x9, #0x10]
000000000003e0ac	add	x10, x11, #0x1
000000000003e0b0	str	x10, [x9, #0x18]
000000000003e0b4	cmp	x11, x12
000000000003e0b8	b.lt	0x3e0c0
000000000003e0bc	str	x10, [x9, #0x10]
000000000003e0c0	mov	w10, #0x1
000000000003e0c4	ldr	x11, [x9]
000000000003e0c8	add	x11, x11, #0x1
000000000003e0cc	str	x11, [x9]
000000000003e0d0	ldp	x9, x11, [x23, #0x58]
000000000003e0d4	add	x9, x9, x10
000000000003e0d8	str	x9, [x23, #0x58]
000000000003e0dc	cmp	x9, x11
000000000003e0e0	b.ls	0x3e0e8
000000000003e0e4	str	x9, [x23, #0x60]
000000000003e0e8	ldp	x9, x10, [x23, #0x68]
000000000003e0ec	sub	x8, x9, x8
000000000003e0f0	str	x8, [x23, #0x68]
000000000003e0f4	cmp	x8, x10
000000000003e0f8	b.ls	0x3e100
000000000003e0fc	str	x8, [x23, #0x70]
000000000003e100	mov	x1, x21
000000000003e104	bl	_mi_segment_find_free
000000000003e108	mov	x21, x0
000000000003e10c	mov	w0, #0xa
000000000003e110	bl	_mi_option_get
000000000003e114	cbz	x0, 0x3e1fc
000000000003e118	mov	x0, sp
000000000003e11c	mov	x1, #0x0
000000000003e120	bl	0x55b94 ; symbol stub for: _gettimeofday
000000000003e124	ldr	x24, [x23, #0x48]
000000000003e128	cbz	x24, 0x3e1f8
000000000003e12c	ldr	x8, [sp]
000000000003e130	ldr	w9, [sp, #0x8]
000000000003e134	mov	w10, #0x4dd3
000000000003e138	movk	w10, #0x1062, lsl #16
000000000003e13c	smull	x9, w9, w10
000000000003e140	lsr	x10, x9, #63
000000000003e144	asr	x9, x9, #38
000000000003e148	add	w9, w9, w10
000000000003e14c	mov	w10, #0x3e8
000000000003e150	madd	w25, w8, w10, w9
000000000003e154	mov	w26, #0x1
000000000003e158	b	0x3e168
000000000003e15c	str	wzr, [x27, #0x10]
000000000003e160	stp	xzr, xzr, [x27, #0x30]
000000000003e164	cbz	x24, 0x3e1f8
000000000003e168	mov	x27, x24
000000000003e16c	ldr	w8, [x24, #0x10]
000000000003e170	cmp	w8, w25
000000000003e174	b.gt	0x3e2d4
000000000003e178	ldr	x24, [x27, #0x38]
000000000003e17c	mov	w0, #0xa
000000000003e180	bl	_mi_option_get
000000000003e184	cbz	x0, 0x3e15c
000000000003e188	and	x9, x27, #0xffffffffffc00000
000000000003e18c	ldrb	w8, [x9, #0x8]
000000000003e190	cbnz	w8, 0x3e15c
000000000003e194	ldrb	w8, [x27, #0x1]
000000000003e198	and	w10, w8, #0x7
000000000003e19c	cmp	w10, #0x4
000000000003e1a0	b.ne	0x3e15c
000000000003e1a4	ldr	w10, [x9, #0x70]
000000000003e1a8	cmp	w10, #0x3
000000000003e1ac	b.ne	0x3e1c4
000000000003e1b0	ldr	x1, [x9, #0x48]
000000000003e1b4	ldrb	w10, [x27]
000000000003e1b8	madd	x0, x1, x10, x9
000000000003e1bc	cbnz	x10, 0x3e1e4
000000000003e1c0	b	0x3e1d8
000000000003e1c4	ldr	x10, [x9, #0x60]
000000000003e1c8	lsl	x1, x26, x10
000000000003e1cc	ldrb	w10, [x27]
000000000003e1d0	madd	x0, x1, x10, x9
000000000003e1d4	cbnz	x10, 0x3e1e4
000000000003e1d8	ldr	x9, [x9, #0x50]
000000000003e1dc	add	x0, x0, x9
000000000003e1e0	sub	x1, x1, x9
000000000003e1e4	orr	w8, w8, #0x2
000000000003e1e8	strb	w8, [x27, #0x1]
000000000003e1ec	cbz	x1, 0x3e15c
000000000003e1f0	bl	__mi_os_reset
000000000003e1f4	b	0x3e15c
000000000003e1f8	stp	xzr, xzr, [x23, #0x40]
000000000003e1fc	cbz	x21, 0x3e5fc
000000000003e200	and	x8, x21, #0xffffffffffc00000
000000000003e204	add	x9, x21, #0x28
000000000003e208	stlr	x19, [x9]
000000000003e20c	ldr	w10, [x8, #0x70]
000000000003e210	cmp	w10, #0x3
000000000003e214	b.ne	0x3e22c
000000000003e218	ldr	x12, [x8, #0x48]
000000000003e21c	ldrb	w9, [x21]
000000000003e220	cbz	x9, 0x3e240
000000000003e224	mov	x11, x12
000000000003e228	b	0x3e278
000000000003e22c	ldr	x9, [x8, #0x60]
000000000003e230	mov	w11, #0x1
000000000003e234	lsl	x12, x11, x9
000000000003e238	ldrb	w9, [x21]
000000000003e23c	cbnz	x9, 0x3e224
000000000003e240	ldr	x13, [x8, #0x50]
000000000003e244	sub	x11, x12, x13
000000000003e248	cmp	w10, #0x1
000000000003e24c	b.hi	0x3e278
000000000003e250	cbz	x22, 0x3e278
000000000003e254	madd	x10, x12, x9, x8
000000000003e258	add	x10, x10, x13
000000000003e25c	udiv	x12, x10, x22
000000000003e260	neg	x10, x10
000000000003e264	madd	x10, x12, x22, x10
000000000003e268	add	x10, x22, x10
000000000003e26c	cmp	x10, x22
000000000003e270	csel	x10, x10, xzr, lo
000000000003e274	sub	x11, x11, x10
000000000003e278	lsr	x10, x22, #26
000000000003e27c	cmp	x10, #0x0
000000000003e280	mov	w10, #0x4000000
000000000003e284	csel	x10, x22, x10, eq
000000000003e288	str	w10, [x21, #0x14]
000000000003e28c	udiv	x11, x11, x22
000000000003e290	strh	w11, [x21, #0x4]
000000000003e294	ldrb	w12, [x21, #0x1]
000000000003e298	ldrb	w13, [x21, #0x7]
000000000003e29c	bfxil	w13, w12, #3, #1
000000000003e2a0	strb	w13, [x21, #0x7]
000000000003e2a4	ldr	x12, [x21, #0x8]
000000000003e2a8	cbnz	x12, 0x3e38c
000000000003e2ac	ldrh	w12, [x21, #0x2]
000000000003e2b0	cmp	w12, w11, uxth
000000000003e2b4	b.hs	0x3e38c
000000000003e2b8	ldr	w15, [x8, #0x70]
000000000003e2bc	cmp	w15, #0x3
000000000003e2c0	b.ne	0x3e2e4
000000000003e2c4	ldr	x14, [x8, #0x48]
000000000003e2c8	cbz	w9, 0x3e2f4
000000000003e2cc	mov	x13, x14
000000000003e2d0	b	0x3e32c
000000000003e2d4	str	x27, [x23, #0x48]
000000000003e2d8	str	xzr, [x27, #0x30]
000000000003e2dc	cbnz	x21, 0x3e200
000000000003e2e0	b	0x3e5fc
000000000003e2e4	ldr	x13, [x8, #0x60]
000000000003e2e8	mov	w14, #0x1
000000000003e2ec	lsl	x14, x14, x13
000000000003e2f0	cbnz	w9, 0x3e2cc
000000000003e2f4	ldr	x16, [x8, #0x50]
000000000003e2f8	sub	x13, x14, x16
000000000003e2fc	cmp	w15, #0x1
000000000003e300	b.hi	0x3e32c
000000000003e304	cbz	x10, 0x3e32c
000000000003e308	madd	x8, x14, x9, x8
000000000003e30c	add	x8, x8, x16
000000000003e310	udiv	x9, x8, x10
000000000003e314	neg	x8, x8
000000000003e318	madd	x8, x9, x10, x8
000000000003e31c	add	x8, x10, x8
000000000003e320	cmp	x8, x10
000000000003e324	csel	x8, x8, xzr, lo
000000000003e328	sub	x13, x13, x8
000000000003e32c	lsr	w8, w10, #26
000000000003e330	cmp	w8, #0x0
000000000003e334	csel	x1, x10, x13, eq
000000000003e338	and	x8, x11, #0xffff
000000000003e33c	sub	x8, x8, x12
000000000003e340	mov	w9, #0x1
000000000003e344	cmp	x1, #0xfff
000000000003e348	and	w10, w1, #0xffff
000000000003e34c	mov	w11, #0x1000
000000000003e350	udiv	w10, w11, w10
000000000003e354	csel	x9, x9, x10, hi
000000000003e358	cmp	x8, x9
000000000003e35c	csel	x22, x9, x8, hi
000000000003e360	mov	x0, x21
000000000003e364	mov	x2, x22
000000000003e368	bl	_mi_page_free_list_extend
000000000003e36c	ldrh	w8, [x21, #0x2]
000000000003e370	add	w8, w8, w22
000000000003e374	strh	w8, [x21, #0x2]
000000000003e378	ldrb	w8, [x21, #0x1]
000000000003e37c	tbnz	w8, #0x3, 0x3e38c
000000000003e380	ldrb	w8, [x21, #0x7]
000000000003e384	and	w8, w8, #0xfe
000000000003e388	strb	w8, [x21, #0x7]
000000000003e38c	ldr	x12, [x19]
000000000003e390	add	x8, x12, #0xd0
000000000003e394	adr	x9, #0x5676c
000000000003e398	nop
000000000003e39c	cmp	x8, x9
000000000003e3a0	b.lo	0x3e424
000000000003e3a4	adr	x9, #0x5699c
000000000003e3a8	nop
000000000003e3ac	cmp	x8, x9
000000000003e3b0	b.hs	0x3e424
000000000003e3b4	add	x11, x12, #0xe8
000000000003e3b8	ldxr	x9, [x11]
000000000003e3bc	add	x10, x9, #0x1
000000000003e3c0	stxr	w13, x10, [x11]
000000000003e3c4	cbnz	w13, 0x3e3b8
000000000003e3c8	add	x11, x12, #0xe0
000000000003e3cc	ldr	x13, [x12, #0xe0]
000000000003e3d0	b	0x3e3e4
000000000003e3d4	clrex
000000000003e3d8	mov	w14, #0x0
000000000003e3dc	mov	x13, x12
000000000003e3e0	cbnz	w14, 0x3e40c
000000000003e3e4	cmp	x13, x9
000000000003e3e8	b.gt	0x3e40c
000000000003e3ec	ldxr	x12, [x11]
000000000003e3f0	cmp	x12, x13
000000000003e3f4	b.ne	0x3e3d4
000000000003e3f8	stlxr	w13, x10, [x11]
000000000003e3fc	cbnz	w13, 0x3e3d8
000000000003e400	mov	w14, #0x1
000000000003e404	mov	x13, x12
000000000003e408	cbz	w14, 0x3e3e4
000000000003e40c	ldxr	x9, [x8]
000000000003e410	add	x9, x9, #0x1
000000000003e414	stxr	w10, x9, [x8]
000000000003e418	cbnz	w10, 0x3e40c
000000000003e41c	cbnz	x20, 0x3e44c
000000000003e420	b	0x3e5fc
000000000003e424	ldp	x11, x10, [x12, #0xe0]
000000000003e428	add	x9, x10, #0x1
000000000003e42c	str	x9, [x12, #0xe8]
000000000003e430	cmp	x10, x11
000000000003e434	b.lt	0x3e43c
000000000003e438	str	x9, [x12, #0xe0]
000000000003e43c	ldr	x9, [x8]
000000000003e440	add	x9, x9, #0x1
000000000003e444	str	x9, [x8]
000000000003e448	cbz	x20, 0x3e5fc
000000000003e44c	mov	w9, #0x7
000000000003e450	movk	w9, #0x20, lsl #16
000000000003e454	ldr	x8, [x20, #0x10]
000000000003e458	add	x10, x9, #0x9
000000000003e45c	cmp	x8, x10
000000000003e460	cset	w8, eq
000000000003e464	ldrb	w10, [x21, #0x6]
000000000003e468	and	w10, w10, #0xfe
000000000003e46c	orr	w8, w10, w8
000000000003e470	strb	w8, [x21, #0x6]
000000000003e474	ldr	x8, [x20]
000000000003e478	stp	x8, xzr, [x21, #0x30]
000000000003e47c	add	x10, x8, #0x38
000000000003e480	add	x11, x20, #0x8
000000000003e484	cmp	x8, #0x0
000000000003e488	csel	x8, x11, x10, eq
000000000003e48c	str	x21, [x8]
000000000003e490	str	x21, [x20]
000000000003e494	ldr	x11, [x20, #0x10]
000000000003e498	cmp	x11, #0x400
000000000003e49c	b.hi	0x3e5f0
000000000003e4a0	add	x8, x11, #0x7
000000000003e4a4	lsr	x8, x8, #3
000000000003e4a8	add	x10, x19, x8, lsl #3
000000000003e4ac	ldr	x10, [x10, #0x8]
000000000003e4b0	cmp	x10, x21
000000000003e4b4	b.eq	0x3e5f0
000000000003e4b8	cmp	x11, #0x9
000000000003e4bc	b.hs	0x3e4c8
000000000003e4c0	mov	x9, #0x0
000000000003e4c4	b	0x3e594
000000000003e4c8	sub	x12, x8, #0x1
000000000003e4cc	clz	x13, x12
000000000003e4d0	mov	w10, #0x3f
000000000003e4d4	sub	w13, w10, w13
000000000003e4d8	and	w13, w13, #0xff
000000000003e4dc	sub	w14, w13, #0x2
000000000003e4e0	lsr	x12, x12, x14
000000000003e4e4	and	w12, w12, #0x3
000000000003e4e8	bfi	w12, w13, #2, #8
000000000003e4ec	sub	w12, w12, #0x3
000000000003e4f0	add	w13, w8, #0x1
000000000003e4f4	and	w13, w13, #0xfffffffe
000000000003e4f8	cmp	x11, #0x40
000000000003e4fc	csel	w13, w12, w13, hi
000000000003e500	add	x11, x19, #0x410
000000000003e504	sub	x12, x20, #0x18
000000000003e508	and	w13, w13, #0xff
000000000003e50c	ldr	x14, [x12, #0x10]
000000000003e510	add	x15, x14, #0x7
000000000003e514	lsr	x14, x15, #3
000000000003e518	cmp	x15, #0x10
000000000003e51c	b.hs	0x3e528
000000000003e520	mov	w15, #0x1
000000000003e524	b	0x3e570
000000000003e528	cmp	x15, #0x47
000000000003e52c	b.hi	0x3e53c
000000000003e530	add	w15, w14, #0x1
000000000003e534	and	w15, w15, #0xfffffffe
000000000003e538	b	0x3e570
000000000003e53c	cmp	x15, x9
000000000003e540	b.ls	0x3e54c
000000000003e544	mov	w15, #0x49
000000000003e548	b	0x3e570
000000000003e54c	sub	x15, x14, #0x1
000000000003e550	clz	x16, x15
000000000003e554	sub	w16, w10, w16
000000000003e558	and	w16, w16, #0xff
000000000003e55c	sub	w17, w16, #0x2
000000000003e560	lsr	x15, x15, x17
000000000003e564	and	w15, w15, #0x3
000000000003e568	bfi	w15, w16, #2, #8
000000000003e56c	sub	w15, w15, #0x3
000000000003e570	cmp	x12, x11
000000000003e574	b.ls	0x3e584
000000000003e578	sub	x12, x12, #0x18
000000000003e57c	cmp	w13, w15, uxtb
000000000003e580	b.eq	0x3e50c
000000000003e584	cmp	x14, x8
000000000003e588	csinc	x9, x8, x14, hs
000000000003e58c	cmp	x9, x8
000000000003e590	b.hi	0x3e5f0
000000000003e594	sub	x10, x8, x9
000000000003e598	add	x10, x10, #0x1
000000000003e59c	cmp	x10, #0x4
000000000003e5a0	b.lo	0x3e5d4
000000000003e5a4	and	x11, x10, #0xfffffffffffffffc
000000000003e5a8	dup.2d	v0, x21
000000000003e5ac	add	x12, x19, x9, lsl #3
000000000003e5b0	add	x12, x12, #0x18
000000000003e5b4	mov	x13, x11
000000000003e5b8	stp	q0, q0, [x12, #-0x10]
000000000003e5bc	add	x12, x12, #0x20
000000000003e5c0	subs	x13, x13, #0x4
000000000003e5c4	b.ne	0x3e5b8
000000000003e5c8	cmp	x10, x11
000000000003e5cc	b.eq	0x3e5f0
000000000003e5d0	add	x9, x9, x11
000000000003e5d4	sub	x8, x8, x9
000000000003e5d8	add	x8, x8, #0x1
000000000003e5dc	add	x9, x19, x9, lsl #3
000000000003e5e0	add	x9, x9, #0x8
000000000003e5e4	str	x21, [x9], #0x8
000000000003e5e8	subs	x8, x8, #0x1
000000000003e5ec	b.ne	0x3e5e4
000000000003e5f0	ldr	x8, [x19, #0xbc8]
000000000003e5f4	add	x8, x8, #0x1
000000000003e5f8	str	x8, [x19, #0xbc8]
000000000003e5fc	mov	x0, x21
000000000003e600	ldp	x29, x30, [sp, #0x60]
000000000003e604	ldp	x20, x19, [sp, #0x50]
000000000003e608	ldp	x22, x21, [sp, #0x40]
000000000003e60c	ldp	x24, x23, [sp, #0x30]
000000000003e610	ldp	x26, x25, [sp, #0x20]
000000000003e614	ldp	x28, x27, [sp, #0x10]
000000000003e618	add	sp, sp, #0x70
000000000003e61c	ret
_mi_page_queue_find_free_ex:
000000000003e620	sub	sp, sp, #0x70
000000000003e624	stp	x28, x27, [sp, #0x10]
000000000003e628	stp	x26, x25, [sp, #0x20]
000000000003e62c	stp	x24, x23, [sp, #0x30]
000000000003e630	stp	x22, x21, [sp, #0x40]
000000000003e634	stp	x20, x19, [sp, #0x50]
000000000003e638	stp	x29, x30, [sp, #0x60]
000000000003e63c	add	x29, sp, #0x60
000000000003e640	mov	x19, x1
000000000003e644	mov	x20, x0
000000000003e648	mov	w23, #0x7
000000000003e64c	movk	w23, #0x20, lsl #16
000000000003e650	eor	w24, w2, #0x1
000000000003e654	sub	x9, x1, #0x18
000000000003e658	add	x8, x0, #0x410
000000000003e65c	stp	x9, x8, [sp]
000000000003e660	mov	w27, #0x3f
000000000003e664	adr	x21, #0x1e795 ; literal pool for: "corrupted thread-free list\n"
000000000003e668	nop
000000000003e66c	ldr	x28, [x19]
000000000003e670	cbnz	x28, 0x3e6c0
000000000003e674	ldr	x28, [x20, #0xbd0]
000000000003e678	ldr	x8, [x20, #0xbd8]
000000000003e67c	cmp	x28, x8
000000000003e680	b.ls	0x3ec10
000000000003e684	mov	x25, #0x0
000000000003e688	mov	w26, #0x4a
000000000003e68c	str	x26, [x20, #0xbd0]
000000000003e690	str	x25, [x20, #0xbd8]
000000000003e694	ldr	x2, [x19, #0x10]
000000000003e698	mov	x0, x20
000000000003e69c	mov	x1, x19
000000000003e6a0	bl	_mi_page_fresh_alloc
000000000003e6a4	cmp	x0, #0x0
000000000003e6a8	cset	w8, ne
000000000003e6ac	orr	w8, w8, w24
000000000003e6b0	mov	w24, #0x1
000000000003e6b4	tbz	w8, #0x0, 0x3e66c
000000000003e6b8	b	0x3ed98
000000000003e6bc	cbz	x28, 0x3e674
000000000003e6c0	mov	x22, x28
000000000003e6c4	ldr	x28, [x28, #0x30]
000000000003e6c8	add	x25, x22, #0x20
000000000003e6cc	ldr	x8, [x22, #0x20]
000000000003e6d0	cmp	x8, #0x4
000000000003e6d4	b.lo	0x3e750
000000000003e6d8	ldr	x8, [x25]
000000000003e6dc	b	0x3e6ec
000000000003e6e0	clrex
000000000003e6e4	mov	w10, #0x0
000000000003e6e8	cbnz	w10, 0x3e710
000000000003e6ec	mov	x9, x8
000000000003e6f0	ldaxr	x8, [x25]
000000000003e6f4	cmp	x8, x9
000000000003e6f8	b.ne	0x3e6e0
000000000003e6fc	and	x10, x9, #0x3
000000000003e700	stlxr	w11, x10, [x25]
000000000003e704	cbnz	w11, 0x3e6e4
000000000003e708	mov	w10, #0x1
000000000003e70c	cbz	w10, 0x3e6ec
000000000003e710	ands	x8, x9, #0xfffffffffffffffc
000000000003e714	b.eq	0x3e750
000000000003e718	mov	w9, #0x0
000000000003e71c	ldrh	w10, [x22, #0x2]
000000000003e720	mov	x12, x8
000000000003e724	mov	x11, x12
000000000003e728	add	w9, w9, #0x1
000000000003e72c	ldr	x12, [x12]
000000000003e730	cmp	w9, w10
000000000003e734	ccmp	x12, #0x0, #0x4, ls
000000000003e738	b.ne	0x3e724
000000000003e73c	cmp	w9, w10
000000000003e740	b.ls	0x3e830
000000000003e744	mov	w0, #0xe
000000000003e748	mov	x1, x21
000000000003e74c	bl	__mi_error_message
000000000003e750	ldr	x8, [x22, #0x18]
000000000003e754	cbz	x8, 0x3e774
000000000003e758	ldr	x9, [x22, #0x8]
000000000003e75c	cbnz	x9, 0x3e774
000000000003e760	str	x8, [x22, #0x8]
000000000003e764	str	xzr, [x22, #0x18]
000000000003e768	ldrb	w8, [x22, #0x7]
000000000003e76c	and	w8, w8, #0xfe
000000000003e770	strb	w8, [x22, #0x7]
000000000003e774	ldr	x8, [x22, #0x8]
000000000003e778	cbnz	x8, 0x3ed68
000000000003e77c	ldrh	w8, [x22, #0x2]
000000000003e780	ldrh	w9, [x22, #0x4]
000000000003e784	cmp	w8, w9
000000000003e788	b.lo	0x3ec94
000000000003e78c	ldrb	w8, [x22, #0x6]
000000000003e790	tbnz	w8, #0x0, 0x3e6bc
000000000003e794	ldr	x9, [x22, #0x28]
000000000003e798	ldr	x8, [x22, #0x28]
000000000003e79c	ldr	x11, [x22, #0x38]
000000000003e7a0	cbz	x11, 0x3e7ac
000000000003e7a4	ldr	x10, [x22, #0x30]
000000000003e7a8	str	x10, [x11, #0x30]
000000000003e7ac	ldr	x10, [x22, #0x30]
000000000003e7b0	cbz	x10, 0x3e7b8
000000000003e7b4	str	x11, [x10, #0x38]
000000000003e7b8	ldr	x11, [x19, #0x8]
000000000003e7bc	cmp	x11, x22
000000000003e7c0	b.eq	0x3e7d4
000000000003e7c4	ldr	x11, [x19]
000000000003e7c8	cmp	x11, x22
000000000003e7cc	b.ne	0x3e994
000000000003e7d0	b	0x3e7e8
000000000003e7d4	ldr	x11, [x22, #0x38]
000000000003e7d8	str	x11, [x19, #0x8]
000000000003e7dc	ldr	x11, [x19]
000000000003e7e0	cmp	x11, x22
000000000003e7e4	b.ne	0x3e994
000000000003e7e8	str	x10, [x19]
000000000003e7ec	ldr	x12, [x19, #0x10]
000000000003e7f0	cmp	x12, #0x400
000000000003e7f4	b.hi	0x3e994
000000000003e7f8	cmp	x10, #0x0
000000000003e7fc	adr	x11, #0x1a5c4
000000000003e800	nop
000000000003e804	csel	x10, x11, x10, eq
000000000003e808	add	x11, x12, #0x7
000000000003e80c	lsr	x11, x11, #3
000000000003e810	add	x13, x8, x11, lsl #3
000000000003e814	ldr	x13, [x13, #0x8]
000000000003e818	cmp	x13, x10
000000000003e81c	b.eq	0x3e994
000000000003e820	cmp	x12, #0x9
000000000003e824	b.hs	0x3e854
000000000003e828	mov	x12, #0x0
000000000003e82c	b	0x3e938
000000000003e830	ldr	x10, [x22, #0x18]
000000000003e834	str	x10, [x11]
000000000003e838	str	x8, [x22, #0x18]
000000000003e83c	ldr	w8, [x22, #0x10]
000000000003e840	sub	w8, w8, w9
000000000003e844	str	w8, [x22, #0x10]
000000000003e848	ldr	x8, [x22, #0x18]
000000000003e84c	cbnz	x8, 0x3e758
000000000003e850	b	0x3e774
000000000003e854	cmp	x12, #0x40
000000000003e858	b.hi	0x3e868
000000000003e85c	add	w12, w11, #0x1
000000000003e860	and	w12, w12, #0xfffffffe
000000000003e864	b	0x3e88c
000000000003e868	sub	x12, x11, #0x1
000000000003e86c	clz	x13, x12
000000000003e870	sub	w13, w27, w13
000000000003e874	and	w13, w13, #0xff
000000000003e878	sub	w14, w13, #0x2
000000000003e87c	lsr	x12, x12, x14
000000000003e880	and	w12, w12, #0x3
000000000003e884	bfi	w12, w13, #2, #8
000000000003e888	sub	w12, w12, #0x3
000000000003e88c	add	x13, x8, #0x410
000000000003e890	ldr	x14, [sp]
000000000003e894	ldr	x15, [x14, #0x10]
000000000003e898	add	x16, x15, #0x7
000000000003e89c	lsr	x15, x16, #3
000000000003e8a0	cmp	x16, #0x10
000000000003e8a4	b.hs	0x3e8b8
000000000003e8a8	mov	w16, #0x1
000000000003e8ac	cmp	x14, x13
000000000003e8b0	b.hi	0x3e918
000000000003e8b4	b	0x3e928
000000000003e8b8	cmp	x16, #0x47
000000000003e8bc	b.hi	0x3e8d4
000000000003e8c0	add	w16, w15, #0x1
000000000003e8c4	and	w16, w16, #0xfffffffe
000000000003e8c8	cmp	x14, x13
000000000003e8cc	b.hi	0x3e918
000000000003e8d0	b	0x3e928
000000000003e8d4	cmp	x16, x23
000000000003e8d8	b.ls	0x3e8ec
000000000003e8dc	mov	w16, #0x49
000000000003e8e0	cmp	x14, x13
000000000003e8e4	b.hi	0x3e918
000000000003e8e8	b	0x3e928
000000000003e8ec	sub	x16, x15, #0x1
000000000003e8f0	clz	x17, x16
000000000003e8f4	sub	w17, w27, w17
000000000003e8f8	and	w17, w17, #0xff
000000000003e8fc	sub	w0, w17, #0x2
000000000003e900	lsr	x16, x16, x0
000000000003e904	and	w16, w16, #0x3
000000000003e908	bfi	w16, w17, #2, #8
000000000003e90c	sub	w16, w16, #0x3
000000000003e910	cmp	x14, x13
000000000003e914	b.ls	0x3e928
000000000003e918	sub	x14, x14, #0x18
000000000003e91c	and	w17, w12, #0xff
000000000003e920	cmp	w17, w16, uxtb
000000000003e924	b.eq	0x3e894
000000000003e928	cmp	x15, x11
000000000003e92c	csinc	x12, x11, x15, hs
000000000003e930	cmp	x12, x11
000000000003e934	b.hi	0x3e994
000000000003e938	sub	x13, x11, x12
000000000003e93c	add	x13, x13, #0x1
000000000003e940	cmp	x13, #0x4
000000000003e944	b.lo	0x3e978
000000000003e948	and	x14, x13, #0xfffffffffffffffc
000000000003e94c	dup.2d	v0, x10
000000000003e950	add	x15, x8, x12, lsl #3
000000000003e954	add	x15, x15, #0x18
000000000003e958	mov	x16, x14
000000000003e95c	stp	q0, q0, [x15, #-0x10]
000000000003e960	add	x15, x15, #0x20
000000000003e964	subs	x16, x16, #0x4
000000000003e968	b.ne	0x3e95c
000000000003e96c	cmp	x13, x14
000000000003e970	b.eq	0x3e994
000000000003e974	add	x12, x12, x14
000000000003e978	sub	x11, x11, x12
000000000003e97c	add	x11, x11, #0x1
000000000003e980	add	x12, x8, x12, lsl #3
000000000003e984	add	x12, x12, #0x8
000000000003e988	str	x10, [x12], #0x8
000000000003e98c	subs	x11, x11, #0x1
000000000003e990	b.ne	0x3e988
000000000003e994	ldr	x10, [x9, #0xb08]
000000000003e998	stp	xzr, x10, [x22, #0x30]
000000000003e99c	cbz	x10, 0x3e9b0
000000000003e9a0	str	x22, [x10, #0x30]
000000000003e9a4	str	x22, [x9, #0xb08]
000000000003e9a8	ldr	x10, [x9, #0xb10]
000000000003e9ac	b	0x3eb28
000000000003e9b0	str	x22, [x9, #0xb00]
000000000003e9b4	str	x22, [x9, #0xb08]
000000000003e9b8	ldr	x10, [x9, #0xb10]
000000000003e9bc	cmp	x10, #0x400
000000000003e9c0	b.hi	0x3eb28
000000000003e9c4	add	x11, x10, #0x7
000000000003e9c8	lsr	x11, x11, #3
000000000003e9cc	add	x12, x8, x11, lsl #3
000000000003e9d0	ldr	x12, [x12, #0x8]
000000000003e9d4	cmp	x12, x22
000000000003e9d8	b.eq	0x3eb28
000000000003e9dc	cmp	x10, #0x9
000000000003e9e0	b.hs	0x3e9ec
000000000003e9e4	mov	x9, #0x0
000000000003e9e8	b	0x3eacc
000000000003e9ec	sub	x12, x11, #0x1
000000000003e9f0	clz	x13, x12
000000000003e9f4	sub	w13, w27, w13
000000000003e9f8	and	w13, w13, #0xff
000000000003e9fc	sub	w14, w13, #0x2
000000000003ea00	lsr	x12, x12, x14
000000000003ea04	and	w12, w12, #0x3
000000000003ea08	bfi	w12, w13, #2, #8
000000000003ea0c	sub	w12, w12, #0x3
000000000003ea10	add	w13, w11, #0x1
000000000003ea14	and	w13, w13, #0xfffffffe
000000000003ea18	cmp	x10, #0x40
000000000003ea1c	csel	w12, w12, w13, hi
000000000003ea20	add	x13, x8, #0x410
000000000003ea24	add	x9, x9, #0xae8
000000000003ea28	ldr	x14, [x9, #0x10]
000000000003ea2c	add	x15, x14, #0x7
000000000003ea30	lsr	x14, x15, #3
000000000003ea34	cmp	x15, #0x10
000000000003ea38	b.hs	0x3ea4c
000000000003ea3c	mov	w15, #0x1
000000000003ea40	cmp	x9, x13
000000000003ea44	b.hi	0x3eaac
000000000003ea48	b	0x3eabc
000000000003ea4c	cmp	x15, #0x47
000000000003ea50	b.hi	0x3ea68
000000000003ea54	add	w15, w14, #0x1
000000000003ea58	and	w15, w15, #0xfffffffe
000000000003ea5c	cmp	x9, x13
000000000003ea60	b.hi	0x3eaac
000000000003ea64	b	0x3eabc
000000000003ea68	cmp	x15, x23
000000000003ea6c	b.ls	0x3ea80
000000000003ea70	mov	w15, #0x49
000000000003ea74	cmp	x9, x13
000000000003ea78	b.hi	0x3eaac
000000000003ea7c	b	0x3eabc
000000000003ea80	sub	x15, x14, #0x1
000000000003ea84	clz	x16, x15
000000000003ea88	sub	w16, w27, w16
000000000003ea8c	and	w16, w16, #0xff
000000000003ea90	sub	w17, w16, #0x2
000000000003ea94	lsr	x15, x15, x17
000000000003ea98	and	w15, w15, #0x3
000000000003ea9c	bfi	w15, w16, #2, #8
000000000003eaa0	sub	w15, w15, #0x3
000000000003eaa4	cmp	x9, x13
000000000003eaa8	b.ls	0x3eabc
000000000003eaac	sub	x9, x9, #0x18
000000000003eab0	and	w16, w12, #0xff
000000000003eab4	cmp	w16, w15, uxtb
000000000003eab8	b.eq	0x3ea28
000000000003eabc	cmp	x14, x11
000000000003eac0	csinc	x9, x11, x14, hs
000000000003eac4	cmp	x9, x11
000000000003eac8	b.hi	0x3eb28
000000000003eacc	sub	x12, x11, x9
000000000003ead0	add	x12, x12, #0x1
000000000003ead4	cmp	x12, #0x4
000000000003ead8	b.lo	0x3eb0c
000000000003eadc	and	x13, x12, #0xfffffffffffffffc
000000000003eae0	dup.2d	v0, x22
000000000003eae4	add	x14, x8, x9, lsl #3
000000000003eae8	add	x14, x14, #0x18
000000000003eaec	mov	x15, x13
000000000003eaf0	stp	q0, q0, [x14, #-0x10]
000000000003eaf4	add	x14, x14, #0x20
000000000003eaf8	subs	x15, x15, #0x4
000000000003eafc	b.ne	0x3eaf0
000000000003eb00	cmp	x12, x13
000000000003eb04	b.eq	0x3eb28
000000000003eb08	add	x9, x9, x13
000000000003eb0c	sub	x11, x11, x9
000000000003eb10	add	x11, x11, #0x1
000000000003eb14	add	x8, x8, x9, lsl #3
000000000003eb18	add	x8, x8, #0x8
000000000003eb1c	str	x22, [x8], #0x8
000000000003eb20	subs	x11, x11, #0x1
000000000003eb24	b.ne	0x3eb1c
000000000003eb28	add	x8, x23, #0x9
000000000003eb2c	cmp	x10, x8
000000000003eb30	cset	w8, eq
000000000003eb34	ldrb	w9, [x22, #0x6]
000000000003eb38	and	w9, w9, #0xfe
000000000003eb3c	orr	w8, w9, w8
000000000003eb40	strb	w8, [x22, #0x6]
000000000003eb44	ldr	x8, [x22, #0x20]
000000000003eb48	cmp	x8, #0x4
000000000003eb4c	b.lo	0x3ebc8
000000000003eb50	ldr	x8, [x25]
000000000003eb54	b	0x3eb64
000000000003eb58	clrex
000000000003eb5c	mov	w10, #0x0
000000000003eb60	cbnz	w10, 0x3eb88
000000000003eb64	mov	x9, x8
000000000003eb68	ldaxr	x8, [x25]
000000000003eb6c	cmp	x8, x9
000000000003eb70	b.ne	0x3eb58
000000000003eb74	and	x10, x9, #0x3
000000000003eb78	stlxr	w11, x10, [x25]
000000000003eb7c	cbnz	w11, 0x3eb5c
000000000003eb80	mov	w10, #0x1
000000000003eb84	cbz	w10, 0x3eb64
000000000003eb88	ands	x8, x9, #0xfffffffffffffffc
000000000003eb8c	b.eq	0x3ebc8
000000000003eb90	mov	w9, #0x0
000000000003eb94	ldrh	w11, [x22, #0x2]
000000000003eb98	mov	x12, x8
000000000003eb9c	mov	x10, x12
000000000003eba0	add	w9, w9, #0x1
000000000003eba4	ldr	x12, [x12]
000000000003eba8	cmp	w9, w11
000000000003ebac	ccmp	x12, #0x0, #0x4, ls
000000000003ebb0	b.ne	0x3eb9c
000000000003ebb4	cmp	w9, w11
000000000003ebb8	b.ls	0x3ebf0
000000000003ebbc	mov	w0, #0xe
000000000003ebc0	mov	x1, x21
000000000003ebc4	bl	__mi_error_message
000000000003ebc8	ldr	x8, [x22, #0x18]
000000000003ebcc	cbz	x8, 0x3e6bc
000000000003ebd0	ldr	x9, [x22, #0x8]
000000000003ebd4	cbnz	x9, 0x3e6bc
000000000003ebd8	str	x8, [x22, #0x8]
000000000003ebdc	str	xzr, [x22, #0x18]
000000000003ebe0	ldrb	w8, [x22, #0x7]
000000000003ebe4	and	w8, w8, #0xfe
000000000003ebe8	strb	w8, [x22, #0x7]
000000000003ebec	b	0x3e6bc
000000000003ebf0	ldr	x11, [x22, #0x18]
000000000003ebf4	str	x11, [x10]
000000000003ebf8	str	x8, [x22, #0x18]
000000000003ebfc	ldr	w10, [x22, #0x10]
000000000003ec00	sub	w9, w10, w9
000000000003ec04	str	w9, [x22, #0x10]
000000000003ec08	cbnz	x8, 0x3ebd0
000000000003ec0c	b	0x3e6bc
000000000003ec10	mov	x25, #0x0
000000000003ec14	ldr	x8, [sp, #0x8]
000000000003ec18	mov	w9, #0x18
000000000003ec1c	madd	x22, x28, x9, x8
000000000003ec20	mov	w26, #0x4a
000000000003ec24	b	0x3ec44
000000000003ec28	and	w9, w9, #0x1
000000000003ec2c	strb	w9, [x8, #0x7]
000000000003ec30	add	x28, x28, #0x1
000000000003ec34	ldr	x8, [x20, #0xbd8]
000000000003ec38	add	x22, x22, #0x18
000000000003ec3c	cmp	x28, x8
000000000003ec40	b.hi	0x3e68c
000000000003ec44	ldr	x8, [x22]
000000000003ec48	cbz	x8, 0x3ec30
000000000003ec4c	ldrb	w9, [x8, #0x7]
000000000003ec50	subs	w10, w9, #0x2
000000000003ec54	b.lo	0x3ec30
000000000003ec58	ldr	w11, [x8, #0x10]
000000000003ec5c	cbnz	w11, 0x3ec28
000000000003ec60	strb	w10, [x8, #0x7]
000000000003ec64	cmp	w10, #0x1
000000000003ec68	b.hi	0x3ec80
000000000003ec6c	ldr	x0, [x22]
000000000003ec70	mov	x1, x22
000000000003ec74	mov	w2, #0x0
000000000003ec78	bl	__mi_page_free
000000000003ec7c	b	0x3ec30
000000000003ec80	cmp	x28, x26
000000000003ec84	csel	x26, x28, x26, lo
000000000003ec88	cmp	x28, x25
000000000003ec8c	csel	x25, x28, x25, hi
000000000003ec90	b	0x3ec30
000000000003ec94	and	x11, x22, #0xffffffffffc00000
000000000003ec98	ldr	w10, [x22, #0x14]
000000000003ec9c	ldr	w14, [x11, #0x70]
000000000003eca0	cmp	w14, #0x3
000000000003eca4	b.ne	0x3ecbc
000000000003eca8	ldr	x13, [x11, #0x48]
000000000003ecac	ldrb	w15, [x22]
000000000003ecb0	cbz	x15, 0x3ecd0
000000000003ecb4	mov	x12, x13
000000000003ecb8	b	0x3ed08
000000000003ecbc	ldr	x12, [x11, #0x60]
000000000003ecc0	mov	w13, #0x1
000000000003ecc4	lsl	x13, x13, x12
000000000003ecc8	ldrb	w15, [x22]
000000000003eccc	cbnz	x15, 0x3ecb4
000000000003ecd0	ldr	x16, [x11, #0x50]
000000000003ecd4	sub	x12, x13, x16
000000000003ecd8	cmp	w14, #0x1
000000000003ecdc	b.hi	0x3ed08
000000000003ece0	cbz	w10, 0x3ed08
000000000003ece4	madd	x11, x13, x15, x11
000000000003ece8	add	x11, x11, x16
000000000003ecec	udiv	x13, x11, x10
000000000003ecf0	neg	x11, x11
000000000003ecf4	madd	x11, x13, x10, x11
000000000003ecf8	add	x11, x10, x11
000000000003ecfc	cmp	x11, x10
000000000003ed00	csel	x11, x11, xzr, lo
000000000003ed04	sub	x12, x12, x11
000000000003ed08	ubfx	x11, x10, #26, #6
000000000003ed0c	cmp	w11, #0x0
000000000003ed10	csel	x1, x10, x12, eq
000000000003ed14	sub	x8, x9, x8
000000000003ed18	cmp	x1, #0xfff
000000000003ed1c	b.ls	0x3ed28
000000000003ed20	mov	w9, #0x1
000000000003ed24	b	0x3ed34
000000000003ed28	and	w9, w1, #0xffff
000000000003ed2c	mov	w10, #0x1000
000000000003ed30	udiv	w9, w10, w9
000000000003ed34	cmp	x8, x9
000000000003ed38	csel	x19, x9, x8, hi
000000000003ed3c	mov	x0, x22
000000000003ed40	mov	x2, x19
000000000003ed44	bl	_mi_page_free_list_extend
000000000003ed48	ldrh	w8, [x22, #0x2]
000000000003ed4c	add	w8, w8, w19
000000000003ed50	strh	w8, [x22, #0x2]
000000000003ed54	ldrb	w8, [x22, #0x1]
000000000003ed58	tbnz	w8, #0x3, 0x3ed68
000000000003ed5c	ldrb	w8, [x22, #0x7]
000000000003ed60	and	w8, w8, #0xfe
000000000003ed64	strb	w8, [x22, #0x7]
000000000003ed68	ldrb	w8, [x22, #0x7]
000000000003ed6c	and	w8, w8, #0x1
000000000003ed70	strb	w8, [x22, #0x7]
000000000003ed74	mov	x0, x22
000000000003ed78	ldp	x29, x30, [sp, #0x60]
000000000003ed7c	ldp	x20, x19, [sp, #0x50]
000000000003ed80	ldp	x22, x21, [sp, #0x40]
000000000003ed84	ldp	x24, x23, [sp, #0x30]
000000000003ed88	ldp	x26, x25, [sp, #0x20]
000000000003ed8c	ldp	x28, x27, [sp, #0x10]
000000000003ed90	add	sp, sp, #0x70
000000000003ed94	ret
000000000003ed98	mov	x22, x0
000000000003ed9c	b	0x3ed74
_mi_page_free_list_extend:
000000000003eda0	and	x10, x0, #0xffffffffffc00000
000000000003eda4	ldr	w9, [x10, #0x70]
000000000003eda8	cmp	w9, #0x3
000000000003edac	b.ne	0x3edc4
000000000003edb0	ldr	x8, [x10, #0x48]
000000000003edb4	ldrb	w11, [x0]
000000000003edb8	madd	x8, x8, x11, x10
000000000003edbc	cbnz	x11, 0x3ee10
000000000003edc0	b	0x3eddc
000000000003edc4	ldr	x8, [x10, #0x60]
000000000003edc8	mov	w11, #0x1
000000000003edcc	lsl	x8, x11, x8
000000000003edd0	ldrb	w11, [x0]
000000000003edd4	madd	x8, x8, x11, x10
000000000003edd8	cbnz	x11, 0x3ee10
000000000003eddc	ldr	w11, [x0, #0x14]
000000000003ede0	ldr	x10, [x10, #0x50]
000000000003ede4	add	x8, x8, x10
000000000003ede8	cmp	w9, #0x1
000000000003edec	ccmp	w11, #0x0, #0x4, ls
000000000003edf0	b.eq	0x3ee10
000000000003edf4	udiv	x9, x8, x11
000000000003edf8	neg	x10, x8
000000000003edfc	madd	x9, x9, x11, x10
000000000003ee00	add	x9, x11, x9
000000000003ee04	add	x10, x8, x9
000000000003ee08	cmp	x9, x11
000000000003ee0c	csel	x8, x10, x8, lo
000000000003ee10	ldrh	w12, [x0, #0x2]
000000000003ee14	mul	x11, x12, x1
000000000003ee18	add	x9, x8, x11
000000000003ee1c	add	x10, x2, x12
000000000003ee20	sub	x10, x10, #0x1
000000000003ee24	mul	x13, x10, x1
000000000003ee28	add	x10, x8, x13
000000000003ee2c	cmp	x11, x13
000000000003ee30	b.gt	0x3ee58
000000000003ee34	mov	x11, #0x0
000000000003ee38	add	x12, x12, #0x1
000000000003ee3c	madd	x8, x1, x12, x8
000000000003ee40	add	x12, x8, x11
000000000003ee44	str	x12, [x9, x11]
000000000003ee48	add	x11, x11, x1
000000000003ee4c	add	x12, x9, x11
000000000003ee50	cmp	x12, x10
000000000003ee54	b.ls	0x3ee40
000000000003ee58	ldr	x8, [x0, #0x8]
000000000003ee5c	str	x8, [x10]
000000000003ee60	str	x9, [x0, #0x8]
000000000003ee64	ret
_mi_segment_reclaim_or_alloc:
000000000003ee68	sub	sp, sp, #0xb0
000000000003ee6c	stp	x28, x27, [sp, #0x50]
000000000003ee70	stp	x26, x25, [sp, #0x60]
000000000003ee74	stp	x24, x23, [sp, #0x70]
000000000003ee78	stp	x22, x21, [sp, #0x80]
000000000003ee7c	stp	x20, x19, [sp, #0x90]
000000000003ee80	stp	x29, x30, [sp, #0xa0]
000000000003ee84	add	x29, sp, #0xa0
000000000003ee88	mov	x20, x5
000000000003ee8c	mov	x22, x4
000000000003ee90	mov	x23, x3
000000000003ee94	mov	x24, x2
000000000003ee98	ldr	x25, [x4, #0x68]
000000000003ee9c	cbz	x25, 0x3ef04
000000000003eea0	ldr	x8, [x22, #0x58]
000000000003eea4	sub	x8, x8, #0x1
000000000003eea8	str	x8, [x22, #0x58]
000000000003eeac	ldr	x8, [x25, #0x18]
000000000003eeb0	str	x8, [x22, #0x68]
000000000003eeb4	str	xzr, [x25, #0x18]
000000000003eeb8	ldr	x8, [x22, #0x70]
000000000003eebc	add	x9, x8, #0x1a0
000000000003eec0	adr	x10, #0x55c40
000000000003eec4	nop
000000000003eec8	cmp	x9, x10
000000000003eecc	adr	x10, #0x55e74
000000000003eed0	nop
000000000003eed4	ccmp	x9, x10, #0x2, hs
000000000003eed8	b.lo	0x3f274
000000000003eedc	ldp	x10, x9, [x8, #0x1b0]
000000000003eee0	sub	x9, x9, #0x1
000000000003eee4	str	x9, [x8, #0x1b8]
000000000003eee8	cmp	x9, x10
000000000003eeec	b.le	0x3eef4
000000000003eef0	str	x9, [x8, #0x1b0]
000000000003eef4	ldr	x9, [x8, #0x1a8]
000000000003eef8	add	x9, x9, #0x1
000000000003eefc	str	x9, [x8, #0x1a8]
000000000003ef00	b	0x3f2e0
000000000003ef04	str	x0, [sp, #0x28]
000000000003ef08	str	x1, [sp, #0x38]
000000000003ef0c	mov	w8, #0x7
000000000003ef10	adrp	x13, 86 ; 0x94000
000000000003ef14	strb	wzr, [sp, #0x4f]
000000000003ef18	adrp	x9, 86 ; 0x94000
000000000003ef1c	adr	x28, #0x557e4
000000000003ef20	nop
000000000003ef24	adr	x26, #0x5575c
000000000003ef28	nop
000000000003ef2c	adr	x19, #0x55794
000000000003ef30	nop
000000000003ef34	adr	x15, #0x5580c
000000000003ef38	nop
000000000003ef3c	adr	x27, #0x55704
000000000003ef40	nop
000000000003ef44	mov	x14, x8
000000000003ef48	ldr	x8, [x13, #0x680]
000000000003ef4c	lsr	x8, x8, #22
000000000003ef50	cbnz	x8, 0x3f02c
000000000003ef54	ldr	x8, [x9, #0x700]
000000000003ef58	cbz	x8, 0x3f260
000000000003ef5c	ldaxr	x8, [x28]
000000000003ef60	stlxr	w9, xzr, [x28]
000000000003ef64	cbnz	w9, 0x3ef5c
000000000003ef68	cbz	x8, 0x3f260
000000000003ef6c	ldr	x10, [x13, #0x680]
000000000003ef70	lsr	x9, x10, #22
000000000003ef74	cbnz	x9, 0x3efa8
000000000003ef78	nop
000000000003ef7c	ldr	x9, #0x557c4
000000000003ef80	add	w11, w10, #0x1
000000000003ef84	and	x11, x11, #0x3fffff
000000000003ef88	orr	x11, x11, x8
000000000003ef8c	ldaxr	x12, [x26]
000000000003ef90	cmp	x12, x10
000000000003ef94	b.ne	0x3efa4
000000000003ef98	stlxr	w12, x11, [x26]
000000000003ef9c	cbnz	w12, 0x3ef8c
000000000003efa0	b	0x3f00c
000000000003efa4	clrex
000000000003efa8	mov	x9, x8
000000000003efac	mov	x10, x9
000000000003efb0	ldr	x9, [x9, #0x10]
000000000003efb4	cbnz	x9, 0x3efac
000000000003efb8	ldr	x12, [x13, #0x680]
000000000003efbc	b	0x3efd0
000000000003efc0	clrex
000000000003efc4	mov	w13, #0x0
000000000003efc8	mov	x12, x11
000000000003efcc	cbnz	w13, 0x3f00c
000000000003efd0	ldr	x9, [x26, #0xc0]
000000000003efd4	and	x11, x12, #0xffffffffffc00000
000000000003efd8	add	x13, x10, #0x10
000000000003efdc	stlr	x11, [x13]
000000000003efe0	ldxr	x11, [x26]
000000000003efe4	cmp	x11, x12
000000000003efe8	b.ne	0x3efc0
000000000003efec	add	w12, w12, #0x1
000000000003eff0	and	x12, x12, #0x3fffff
000000000003eff4	orr	x12, x12, x8
000000000003eff8	stlxr	w13, x12, [x26]
000000000003effc	cbnz	w13, 0x3efc4
000000000003f000	mov	w13, #0x1
000000000003f004	mov	x12, x11
000000000003f008	cbz	w13, 0x3efd0
000000000003f00c	ldxr	x8, [x19]
000000000003f010	add	x8, x8, x9
000000000003f014	stxr	w10, x8, [x19]
000000000003f018	cbnz	w10, 0x3f00c
000000000003f01c	ldxr	x8, [x15]
000000000003f020	sub	x8, x8, x9
000000000003f024	stxr	w10, x8, [x15]
000000000003f028	cbnz	w10, 0x3f01c
000000000003f02c	str	w14, [sp, #0x34]
000000000003f030	ldxr	x8, [x27]
000000000003f034	add	x8, x8, #0x1
000000000003f038	stxr	w9, x8, [x27]
000000000003f03c	cbnz	w9, 0x3f030
000000000003f040	ldar	x9, [x26]
000000000003f044	b	0x3f058
000000000003f048	clrex
000000000003f04c	mov	w10, #0x0
000000000003f050	mov	x9, x8
000000000003f054	cbnz	w10, 0x3f090
000000000003f058	ands	x25, x9, #0xffffffffffc00000
000000000003f05c	b.eq	0x3f250
000000000003f060	ldr	x10, [x25, #0x10]
000000000003f064	ldaxr	x8, [x26]
000000000003f068	cmp	x8, x9
000000000003f06c	b.ne	0x3f048
000000000003f070	add	w9, w9, #0x1
000000000003f074	and	x9, x9, #0x3fffff
000000000003f078	orr	x9, x10, x9
000000000003f07c	stlxr	w10, x9, [x26]
000000000003f080	cbnz	w10, 0x3f04c
000000000003f084	mov	w10, #0x1
000000000003f088	mov	x9, x8
000000000003f08c	cbz	w10, 0x3f058
000000000003f090	ldxr	x8, [x27]
000000000003f094	sub	x8, x8, #0x1
000000000003f098	stxr	w9, x8, [x27]
000000000003f09c	cbnz	w9, 0x3f090
000000000003f0a0	add	x8, x25, #0x10
000000000003f0a4	stlr	xzr, [x8]
000000000003f0a8	ldxr	x8, [x19]
000000000003f0ac	sub	x8, x8, #0x1
000000000003f0b0	stxr	w9, x8, [x19]
000000000003f0b4	cbnz	w9, 0x3f0a8
000000000003f0b8	ldr	x8, [x25, #0x30]
000000000003f0bc	add	x8, x8, #0x1
000000000003f0c0	str	x8, [x25, #0x30]
000000000003f0c4	ldr	x8, [x25, #0x40]
000000000003f0c8	cbz	x8, 0x3f1b8
000000000003f0cc	str	w24, [sp, #0xc]
000000000003f0d0	stp	x23, x22, [sp, #0x10]
000000000003f0d4	str	x20, [sp, #0x20]
000000000003f0d8	mov	x22, #0x0
000000000003f0dc	mov	w9, #0x0
000000000003f0e0	mov	x20, #0x0
000000000003f0e4	str	xzr, [sp, #0x40]
000000000003f0e8	mov	x21, #0x0
000000000003f0ec	b	0x3f114
000000000003f0f0	ldr	x8, [sp, #0x40]
000000000003f0f4	add	x8, x8, #0x1
000000000003f0f8	str	x8, [sp, #0x40]
000000000003f0fc	mov	w9, #0x1
000000000003f100	add	x20, x20, #0x1
000000000003f104	ldr	x8, [x25, #0x40]
000000000003f108	add	x22, x22, #0x40
000000000003f10c	cmp	x20, x8
000000000003f110	b.hs	0x3f184
000000000003f114	add	x24, x25, x22
000000000003f118	ldrb	w8, [x24, #0x79]
000000000003f11c	tbz	w8, #0x0, 0x3f0fc
000000000003f120	mov	x23, x9
000000000003f124	add	x0, x24, #0x78
000000000003f128	add	x21, x21, #0x1
000000000003f12c	mov	w1, #0x0
000000000003f130	bl	__mi_page_free_collect
000000000003f134	ldr	w8, [x24, #0x88]
000000000003f138	cbz	w8, 0x3f0f0
000000000003f13c	add	x9, x25, x22
000000000003f140	ldr	w10, [x9, #0x8c]
000000000003f144	ldr	x11, [sp, #0x38]
000000000003f148	cmp	x10, x11
000000000003f14c	b.ne	0x3f16c
000000000003f150	ldrh	w9, [x9, #0x7c]
000000000003f154	cmp	w8, w9
000000000003f158	b.lo	0x3f0fc
000000000003f15c	add	x8, x25, x22
000000000003f160	ldr	x8, [x8, #0x98]
000000000003f164	cmp	x8, #0x4
000000000003f168	b.hs	0x3f0fc
000000000003f16c	mov	x9, x23
000000000003f170	add	x20, x20, #0x1
000000000003f174	ldr	x8, [x25, #0x40]
000000000003f178	add	x22, x22, #0x40
000000000003f17c	cmp	x20, x8
000000000003f180	b.lo	0x3f114
000000000003f184	ldr	x8, [sp, #0x40]
000000000003f188	cmp	x21, x8
000000000003f18c	ldp	x22, x20, [sp, #0x18]
000000000003f190	ldr	x23, [sp, #0x10]
000000000003f194	ldr	w24, [sp, #0xc]
000000000003f198	b.eq	0x3f1b8
000000000003f19c	tbz	w9, #0x0, 0x3f1ac
000000000003f1a0	ldr	w8, [x25, #0x70]
000000000003f1a4	cmp	w8, w24
000000000003f1a8	b.eq	0x3f320
000000000003f1ac	ldr	x8, [x25, #0x30]
000000000003f1b0	cmp	x8, #0x2
000000000003f1b4	b.ls	0x3f1f0
000000000003f1b8	mov	x0, x25
000000000003f1bc	ldr	x1, [sp, #0x28]
000000000003f1c0	mov	x2, #0x0
000000000003f1c4	mov	x3, #0x0
000000000003f1c8	mov	x4, x22
000000000003f1cc	bl	_mi_segment_reclaim
000000000003f1d0	adr	x15, #0x55570
000000000003f1d4	nop
000000000003f1d8	ldr	w10, [sp, #0x34]
000000000003f1dc	sub	w8, w10, #0x1
000000000003f1e0	adrp	x13, 85 ; 0x94000
000000000003f1e4	adrp	x9, 85 ; 0x94000
000000000003f1e8	cbnz	w10, 0x3ef44
000000000003f1ec	b	0x3f260
000000000003f1f0	nop
000000000003f1f4	ldr	x9, #0x5550c
000000000003f1f8	b	0x3f20c
000000000003f1fc	clrex
000000000003f200	mov	w10, #0x0
000000000003f204	mov	x9, x8
000000000003f208	cbnz	w10, 0x3f234
000000000003f20c	add	x8, x25, #0x10
000000000003f210	stlr	x9, [x8]
000000000003f214	ldxr	x8, [x28]
000000000003f218	cmp	x8, x9
000000000003f21c	b.ne	0x3f1fc
000000000003f220	stlxr	w9, x25, [x28]
000000000003f224	cbnz	w9, 0x3f200
000000000003f228	mov	w10, #0x1
000000000003f22c	mov	x9, x8
000000000003f230	cbz	w10, 0x3f20c
000000000003f234	adr	x15, #0x5550c
000000000003f238	nop
000000000003f23c	ldxr	x8, [x15]
000000000003f240	add	x8, x8, #0x1
000000000003f244	stxr	w9, x8, [x15]
000000000003f248	cbnz	w9, 0x3f23c
000000000003f24c	b	0x3f1d8
000000000003f250	ldxr	x8, [x27]
000000000003f254	sub	x8, x8, #0x1
000000000003f258	stxr	w9, x8, [x27]
000000000003f25c	cbnz	w9, 0x3f250
000000000003f260	mov	x25, #0x0
000000000003f264	ldrb	w8, [sp, #0x4f]
000000000003f268	cbz	w8, 0x3f344
000000000003f26c	mov	x25, #0x0
000000000003f270	b	0x3f2fc
000000000003f274	add	x10, x8, #0x1b8
000000000003f278	ldxr	x9, [x10]
000000000003f27c	sub	x9, x9, #0x1
000000000003f280	stxr	w11, x9, [x10]
000000000003f284	cbnz	w11, 0x3f278
000000000003f288	add	x10, x8, #0x1b0
000000000003f28c	ldr	x12, [x8, #0x1b0]
000000000003f290	b	0x3f2a4
000000000003f294	clrex
000000000003f298	mov	w13, #0x0
000000000003f29c	mov	x12, x11
000000000003f2a0	cbnz	w13, 0x3f2cc
000000000003f2a4	cmp	x12, x9
000000000003f2a8	b.ge	0x3f2cc
000000000003f2ac	ldxr	x11, [x10]
000000000003f2b0	cmp	x11, x12
000000000003f2b4	b.ne	0x3f294
000000000003f2b8	stlxr	w12, x9, [x10]
000000000003f2bc	cbnz	w12, 0x3f298
000000000003f2c0	mov	w13, #0x1
000000000003f2c4	mov	x12, x11
000000000003f2c8	cbz	w13, 0x3f2a4
000000000003f2cc	add	x8, x8, #0x1a8
000000000003f2d0	ldxr	x9, [x8]
000000000003f2d4	add	x9, x9, #0x1
000000000003f2d8	stxr	w10, x9, [x8]
000000000003f2dc	cbnz	w10, 0x3f2d0
000000000003f2e0	mov	x0, x25
000000000003f2e4	mov	x1, #0x0
000000000003f2e8	mov	x2, x24
000000000003f2ec	mov	x3, x23
000000000003f2f0	mov	x4, x22
000000000003f2f4	mov	x5, x20
000000000003f2f8	bl	_mi_segment_init
000000000003f2fc	mov	x0, x25
000000000003f300	ldp	x29, x30, [sp, #0xa0]
000000000003f304	ldp	x20, x19, [sp, #0x90]
000000000003f308	ldp	x22, x21, [sp, #0x80]
000000000003f30c	ldp	x24, x23, [sp, #0x70]
000000000003f310	ldp	x26, x25, [sp, #0x60]
000000000003f314	ldp	x28, x27, [sp, #0x50]
000000000003f318	add	sp, sp, #0xb0
000000000003f31c	ret
000000000003f320	add	x3, sp, #0x4f
000000000003f324	mov	x0, x25
000000000003f328	ldr	x1, [sp, #0x28]
000000000003f32c	ldr	x2, [sp, #0x38]
000000000003f330	mov	x4, x22
000000000003f334	bl	_mi_segment_reclaim
000000000003f338	mov	x25, x0
000000000003f33c	ldrb	w8, [sp, #0x4f]
000000000003f340	cbnz	w8, 0x3f26c
000000000003f344	cbnz	x25, 0x3f2fc
000000000003f348	mov	x0, #0x0
000000000003f34c	mov	x1, #0x0
000000000003f350	mov	x2, x24
000000000003f354	mov	x3, x23
000000000003f358	mov	x4, x22
000000000003f35c	mov	x5, x20
000000000003f360	bl	_mi_segment_init
000000000003f364	mov	x25, x0
000000000003f368	b	0x3f2fc
_mi_segment_find_free:
000000000003f36c	sub	sp, sp, #0x50
000000000003f370	stp	x24, x23, [sp, #0x10]
000000000003f374	stp	x22, x21, [sp, #0x20]
000000000003f378	stp	x20, x19, [sp, #0x30]
000000000003f37c	stp	x29, x30, [sp, #0x40]
000000000003f380	add	x29, sp, #0x40
000000000003f384	ldr	x8, [x0, #0x40]
000000000003f388	cbz	x8, 0x3f578
000000000003f38c	mov	x20, x1
000000000003f390	mov	x21, x0
000000000003f394	mov	x22, #0x0
000000000003f398	add	x19, x0, #0x78
000000000003f39c	mov	w23, #0x1
000000000003f3a0	b	0x3f3dc
000000000003f3a4	ldrb	w8, [x19, #0x1]
000000000003f3a8	orr	w8, w8, #0x8
000000000003f3ac	strb	w8, [x19, #0x1]
000000000003f3b0	tbnz	w0, #0x0, 0x3f580
000000000003f3b4	and	w8, w8, #0xfe
000000000003f3b8	strb	w8, [x19, #0x1]
000000000003f3bc	ldr	x8, [x21, #0x38]
000000000003f3c0	sub	x8, x8, #0x1
000000000003f3c4	str	x8, [x21, #0x38]
000000000003f3c8	add	x22, x22, #0x1
000000000003f3cc	ldr	x8, [x21, #0x40]
000000000003f3d0	add	x19, x19, #0x40
000000000003f3d4	cmp	x22, x8
000000000003f3d8	b.hs	0x3f578
000000000003f3dc	ldrb	w9, [x19, #0x1]
000000000003f3e0	tbnz	w9, #0x0, 0x3f3c8
000000000003f3e4	ldp	x8, x10, [x19, #0x30]
000000000003f3e8	cbz	x8, 0x3f3f4
000000000003f3ec	cbnz	x10, 0x3f3f8
000000000003f3f0	b	0x3f404
000000000003f3f4	cbz	x10, 0x3f55c
000000000003f3f8	str	x8, [x10, #0x30]
000000000003f3fc	ldr	x8, [x19, #0x30]
000000000003f400	cbz	x8, 0x3f408
000000000003f404	str	x10, [x8, #0x38]
000000000003f408	ldr	x9, [x20, #0x28]
000000000003f40c	cmp	x19, x9
000000000003f410	b.eq	0x3f450
000000000003f414	ldr	x9, [x20, #0x20]
000000000003f418	cmp	x19, x9
000000000003f41c	b.eq	0x3f464
000000000003f420	str	wzr, [x19, #0x10]
000000000003f424	stp	xzr, xzr, [x19, #0x30]
000000000003f428	ldrb	w9, [x19, #0x1]
000000000003f42c	tbnz	w9, #0x2, 0x3f4c0
000000000003f430	ldr	w8, [x21, #0x70]
000000000003f434	cmp	w8, #0x3
000000000003f438	b.ne	0x3f46c
000000000003f43c	ldr	x1, [x21, #0x48]
000000000003f440	ldrb	w8, [x19]
000000000003f444	madd	x0, x1, x8, x21
000000000003f448	cbnz	x8, 0x3f48c
000000000003f44c	b	0x3f480
000000000003f450	ldr	x9, [x19, #0x38]
000000000003f454	str	x9, [x20, #0x28]
000000000003f458	ldr	x9, [x20, #0x20]
000000000003f45c	cmp	x19, x9
000000000003f460	b.ne	0x3f420
000000000003f464	str	x8, [x20, #0x20]
000000000003f468	b	0x3f420
000000000003f46c	ldr	x8, [x21, #0x60]
000000000003f470	lsl	x1, x23, x8
000000000003f474	ldrb	w8, [x19]
000000000003f478	madd	x0, x1, x8, x21
000000000003f47c	cbnz	x8, 0x3f48c
000000000003f480	ldr	x8, [x21, #0x50]
000000000003f484	add	x0, x0, x8
000000000003f488	sub	x1, x1, x8
000000000003f48c	strb	wzr, [sp, #0xe]
000000000003f490	add	x4, sp, #0xe
000000000003f494	mov	w2, #0x1
000000000003f498	mov	w3, #0x0
000000000003f49c	bl	_mi_os_commitx
000000000003f4a0	cbz	w0, 0x3f3c8
000000000003f4a4	ldrb	w9, [sp, #0xe]
000000000003f4a8	ldrb	w8, [x19, #0x1]
000000000003f4ac	cbz	w9, 0x3f4b8
000000000003f4b0	orr	w8, w8, #0x8
000000000003f4b4	strb	w8, [x19, #0x1]
000000000003f4b8	orr	w9, w8, #0x4
000000000003f4bc	strb	w9, [x19, #0x1]
000000000003f4c0	orr	w8, w9, #0x1
000000000003f4c4	strb	w8, [x19, #0x1]
000000000003f4c8	ldr	x8, [x21, #0x38]
000000000003f4cc	add	x8, x8, #0x1
000000000003f4d0	str	x8, [x21, #0x38]
000000000003f4d4	ldrb	w8, [x19, #0x1]
000000000003f4d8	tbz	w8, #0x1, 0x3f580
000000000003f4dc	mvn	w9, w8
000000000003f4e0	tst	w9, #0x6
000000000003f4e4	b.ne	0x3f580
000000000003f4e8	ldrb	w9, [x21, #0x8]
000000000003f4ec	cbnz	w9, 0x3f580
000000000003f4f0	and	w8, w8, #0xfffffffd
000000000003f4f4	strb	w8, [x19, #0x1]
000000000003f4f8	ldr	w8, [x21, #0x70]
000000000003f4fc	cmp	w8, #0x3
000000000003f500	b.ne	0x3f518
000000000003f504	ldr	x1, [x21, #0x48]
000000000003f508	ldrb	w8, [x19]
000000000003f50c	madd	x0, x1, x8, x21
000000000003f510	cbnz	x8, 0x3f538
000000000003f514	b	0x3f52c
000000000003f518	ldr	x8, [x21, #0x60]
000000000003f51c	lsl	x1, x23, x8
000000000003f520	ldrb	w8, [x19]
000000000003f524	madd	x0, x1, x8, x21
000000000003f528	cbnz	x8, 0x3f538
000000000003f52c	ldr	x8, [x21, #0x50]
000000000003f530	add	x0, x0, x8
000000000003f534	sub	x1, x1, x8
000000000003f538	strb	wzr, [sp, #0xf]
000000000003f53c	cbz	x1, 0x3f580
000000000003f540	add	x2, sp, #0xf
000000000003f544	bl	__mi_os_unreset
000000000003f548	ldrb	w8, [sp, #0xf]
000000000003f54c	cbnz	w8, 0x3f3a4
000000000003f550	tbnz	w0, #0x0, 0x3f580
000000000003f554	ldrb	w8, [x19, #0x1]
000000000003f558	b	0x3f3b4
000000000003f55c	ldr	x10, [x20, #0x20]
000000000003f560	cmp	x19, x10
000000000003f564	b.eq	0x3f408
000000000003f568	ldr	x10, [x20, #0x28]
000000000003f56c	cmp	x19, x10
000000000003f570	b.ne	0x3f42c
000000000003f574	b	0x3f408
000000000003f578	mov	x19, #0x0
000000000003f57c	b	0x3f5f8
000000000003f580	ldp	x8, x9, [x21, #0x38]
000000000003f584	cmp	x8, x9
000000000003f588	b.ne	0x3f5f8
000000000003f58c	ldr	w8, [x21, #0x70]
000000000003f590	cmp	w8, #0x1
000000000003f594	b.hi	0x3f5f8
000000000003f598	cbz	w8, 0x3f5a8
000000000003f59c	cmp	w8, #0x1
000000000003f5a0	b.ne	0x3f5f8
000000000003f5a4	add	x20, x20, #0x10
000000000003f5a8	mov	x8, x21
000000000003f5ac	ldp	x9, x10, [x8, #0x18]!
000000000003f5b0	cbz	x9, 0x3f5bc
000000000003f5b4	cbnz	x10, 0x3f5c0
000000000003f5b8	b	0x3f5cc
000000000003f5bc	cbz	x10, 0x3f614
000000000003f5c0	str	x9, [x10, #0x18]
000000000003f5c4	ldr	x9, [x8]
000000000003f5c8	cbz	x9, 0x3f5d0
000000000003f5cc	str	x10, [x9, #0x20]
000000000003f5d0	ldr	x10, [x20]
000000000003f5d4	cmp	x10, x21
000000000003f5d8	b.ne	0x3f5e0
000000000003f5dc	str	x9, [x20]
000000000003f5e0	ldr	x9, [x20, #0x8]
000000000003f5e4	cmp	x9, x21
000000000003f5e8	b.ne	0x3f5f4
000000000003f5ec	ldr	x9, [x21, #0x20]
000000000003f5f0	str	x9, [x20, #0x8]
000000000003f5f4	stp	xzr, xzr, [x8]
000000000003f5f8	mov	x0, x19
000000000003f5fc	ldp	x29, x30, [sp, #0x40]
000000000003f600	ldp	x20, x19, [sp, #0x30]
000000000003f604	ldp	x22, x21, [sp, #0x20]
000000000003f608	ldp	x24, x23, [sp, #0x10]
000000000003f60c	add	sp, sp, #0x50
000000000003f610	ret
000000000003f614	ldr	x10, [x20]
000000000003f618	cmp	x10, x21
000000000003f61c	b.ne	0x3f5f8
000000000003f620	b	0x3f5d0
_mi_segment_init:
000000000003f624	sub	sp, sp, #0xc0
000000000003f628	stp	x28, x27, [sp, #0x60]
000000000003f62c	stp	x26, x25, [sp, #0x70]
000000000003f630	stp	x24, x23, [sp, #0x80]
000000000003f634	stp	x22, x21, [sp, #0x90]
000000000003f638	stp	x20, x19, [sp, #0xa0]
000000000003f63c	stp	x29, x30, [sp, #0xb0]
000000000003f640	add	x29, sp, #0xb0
000000000003f644	mov	x26, x5
000000000003f648	mov	x28, x4
000000000003f64c	mov	x21, x3
000000000003f650	mov	x20, x2
000000000003f654	mov	x23, x0
000000000003f658	mov	w8, #0x400000
000000000003f65c	lsr	x9, x8, x3
000000000003f660	cmp	w2, #0x3
000000000003f664	csinc	x27, x9, xzr, ne
000000000003f668	lsl	w9, w27, #6
000000000003f66c	add	w9, w9, #0x187
000000000003f670	and	x22, x9, #0x3fffff00
000000000003f674	add	x9, x1, x22
000000000003f678	mov	w10, #0x3ffff
000000000003f67c	add	x9, x9, x10
000000000003f680	and	x9, x9, #0xfffffffffffc0000
000000000003f684	cmp	x1, #0x0
000000000003f688	csel	x25, x8, x9, eq
000000000003f68c	cmp	w2, #0x1
000000000003f690	b.hi	0x3f75c
000000000003f694	ldr	x19, [x28, #0x38]
000000000003f698	mov	w0, #0xd
000000000003f69c	bl	_mi_option_get
000000000003f6a0	cmp	x19, x0
000000000003f6a4	b.hs	0x3f75c
000000000003f6a8	mov	w8, #0x0
000000000003f6ac	mov	w24, #0x0
000000000003f6b0	strb	w24, [sp, #0x47]
000000000003f6b4	strb	wzr, [sp, #0x46]
000000000003f6b8	cbnz	x23, 0x3f77c
000000000003f6bc	strb	w8, [sp, #0x45]
000000000003f6c0	strb	wzr, [sp, #0x46]
000000000003f6c4	strb	wzr, [sp, #0x44]
000000000003f6c8	cbz	x25, 0x4005c
000000000003f6cc	nop
000000000003f6d0	ldr	x8, #0x3a8b0
000000000003f6d4	add	x9, x25, x8
000000000003f6d8	sub	x9, x9, #0x1
000000000003f6dc	sub	x10, x8, #0x1
000000000003f6e0	udiv	x11, x9, x8
000000000003f6e4	mul	x11, x11, x8
000000000003f6e8	neg	x12, x8
000000000003f6ec	and	x9, x9, x12
000000000003f6f0	tst	x8, x10
000000000003f6f4	csel	x23, x11, x9, ne
000000000003f6f8	mov	w8, #0x3fffff
000000000003f6fc	add	x8, x23, x8
000000000003f700	lsr	x9, x8, #22
000000000003f704	cmp	x9, #0x10
000000000003f708	b.hi	0x3fe84
000000000003f70c	str	x8, [sp, #0x10]
000000000003f710	str	x21, [sp, #0x28]
000000000003f714	adrp	x8, 85 ; 0x94000
000000000003f718	ldr	x19, [x8, #0x5f0]
000000000003f71c	str	x9, [sp, #0x38]
000000000003f720	cbz	x19, 0x401ac
000000000003f724	adrp	x21, 85 ; 0x94000
000000000003f728	cmp	x19, #0x2
000000000003f72c	str	x28, [sp, #0x30]
000000000003f730	stp	x23, x25, [sp, #0x18]
000000000003f734	b.hs	0x3f980
000000000003f738	ldrb	w9, [sp, #0x45]
000000000003f73c	ldr	x23, [x21, #0x630]
000000000003f740	cbz	x23, 0x3fa24
000000000003f744	ldr	x8, [x26]
000000000003f748	adr	x19, #0x44d80
000000000003f74c	nop
000000000003f750	mov	x25, x23
000000000003f754	cbnz	w9, 0x3f8b8
000000000003f758	b	0x3f944
000000000003f75c	mov	w0, #0x3
000000000003f760	bl	_mi_option_get
000000000003f764	cmp	x0, #0x0
000000000003f768	cset	w24, ne
000000000003f76c	mov	w8, #0x1
000000000003f770	strb	w24, [sp, #0x47]
000000000003f774	strb	wzr, [sp, #0x46]
000000000003f778	cbz	x23, 0x3f6bc
000000000003f77c	cmp	w20, #0x1
000000000003f780	b.hi	0x3f7c0
000000000003f784	ldr	w8, [x23, #0x70]
000000000003f788	cmp	w8, w20
000000000003f78c	b.ne	0x3f7c0
000000000003f790	ldr	x8, [x23, #0x48]
000000000003f794	cmp	x8, x25
000000000003f798	b.ne	0x3f7c0
000000000003f79c	add	x8, x23, #0x10
000000000003f7a0	stlr	xzr, [x8]
000000000003f7a4	movi.16b	v0, #0x0
000000000003f7a8	mov	x24, x23
000000000003f7ac	str	q0, [x24, #0x18]!
000000000003f7b0	stp	q0, q0, [x24, #0x40]
000000000003f7b4	stp	q0, q0, [x24, #0x20]
000000000003f7b8	str	q0, [x24, #0x10]
000000000003f7bc	b	0x40114
000000000003f7c0	ldr	x8, [x23, #0x40]
000000000003f7c4	cbz	x8, 0x3f8fc
000000000003f7c8	str	w20, [sp, #0x38]
000000000003f7cc	mov	x20, x28
000000000003f7d0	mov	x28, x22
000000000003f7d4	mov	x22, x25
000000000003f7d8	mov	x19, x21
000000000003f7dc	mov	x25, #0x0
000000000003f7e0	add	x26, x23, #0x79
000000000003f7e4	mov	w21, #0x1
000000000003f7e8	b	0x3f808
000000000003f7ec	ldrb	w8, [x23, #0x8]
000000000003f7f0	cbz	w8, 0x3f830
000000000003f7f4	add	x25, x25, #0x1
000000000003f7f8	ldr	x8, [x23, #0x40]
000000000003f7fc	add	x26, x26, #0x40
000000000003f800	cmp	x25, x8
000000000003f804	b.hs	0x3f8e8
000000000003f808	ldrb	w8, [x26]
000000000003f80c	tbz	w8, #0x1, 0x3f7f4
000000000003f810	tbnz	w24, #0x0, 0x3f7ec
000000000003f814	mov	w0, #0x5
000000000003f818	bl	_mi_option_get
000000000003f81c	cbz	x0, 0x3f7ec
000000000003f820	ldrb	w8, [x26]
000000000003f824	and	w8, w8, #0xfffffffd
000000000003f828	strb	w8, [x26]
000000000003f82c	b	0x3f7f4
000000000003f830	ldrb	w8, [x26]
000000000003f834	mvn	w9, w8
000000000003f838	tst	w9, #0x6
000000000003f83c	b.ne	0x3f7f4
000000000003f840	and	w8, w8, #0xfffffffd
000000000003f844	strb	w8, [x26]
000000000003f848	ldr	w8, [x23, #0x70]
000000000003f84c	cmp	w8, #0x3
000000000003f850	b.ne	0x3f868
000000000003f854	ldr	x1, [x23, #0x48]
000000000003f858	ldurb	w8, [x26, #-0x1]
000000000003f85c	madd	x0, x1, x8, x23
000000000003f860	cbnz	x8, 0x3f888
000000000003f864	b	0x3f87c
000000000003f868	ldr	x8, [x23, #0x60]
000000000003f86c	lsl	x1, x21, x8
000000000003f870	ldurb	w8, [x26, #-0x1]
000000000003f874	madd	x0, x1, x8, x23
000000000003f878	cbnz	x8, 0x3f888
000000000003f87c	ldr	x8, [x23, #0x50]
000000000003f880	add	x0, x0, x8
000000000003f884	sub	x1, x1, x8
000000000003f888	strb	wzr, [sp, #0x50]
000000000003f88c	cbz	x1, 0x3f7f4
000000000003f890	add	x2, sp, #0x50
000000000003f894	bl	__mi_os_unreset
000000000003f898	ldrb	w8, [sp, #0x50]
000000000003f89c	cbz	w8, 0x3f7f4
000000000003f8a0	ldrb	w8, [x26]
000000000003f8a4	orr	w8, w8, #0x8
000000000003f8a8	b	0x3f828
000000000003f8ac	add	x8, x21, #0x1
000000000003f8b0	subs	x25, x25, #0x1
000000000003f8b4	b.eq	0x3fa24
000000000003f8b8	cmp	x8, x23
000000000003f8bc	csel	x21, x8, xzr, lo
000000000003f8c0	add	x24, x19, x21, lsl #6
000000000003f8c4	ldr	x8, [x24]
000000000003f8c8	cbz	x8, 0x3f8ac
000000000003f8cc	add	x0, x24, #0x10
000000000003f8d0	add	x2, sp, #0x48
000000000003f8d4	ldr	x1, [sp, #0x38]
000000000003f8d8	bl	__mi_bitmap_try_find_claim_field
000000000003f8dc	ldr	x14, [sp, #0x38]
000000000003f8e0	tbz	w0, #0x0, 0x3f8ac
000000000003f8e4	b	0x3fa14
000000000003f8e8	mov	x21, x19
000000000003f8ec	mov	x25, x22
000000000003f8f0	mov	x22, x28
000000000003f8f4	mov	x28, x20
000000000003f8f8	ldr	w20, [sp, #0x38]
000000000003f8fc	cmp	x8, x27
000000000003f900	b.hs	0x400c0
000000000003f904	strb	wzr, [sp, #0x50]
000000000003f908	mov	w19, #0x1
000000000003f90c	add	x4, sp, #0x50
000000000003f910	mov	x0, x23
000000000003f914	mov	x1, x22
000000000003f918	mov	w2, #0x1
000000000003f91c	mov	w3, #0x0
000000000003f920	bl	_mi_os_commitx
000000000003f924	ldrb	w8, [sp, #0x50]
000000000003f928	cbz	w8, 0x3f930
000000000003f92c	strb	w19, [sp, #0x46]
000000000003f930	tbnz	w0, #0x0, 0x400c0
000000000003f934	b	0x4005c
000000000003f938	add	x8, x21, #0x1
000000000003f93c	subs	x25, x25, #0x1
000000000003f940	b.eq	0x3fa24
000000000003f944	cmp	x8, x23
000000000003f948	csel	x21, x8, xzr, lo
000000000003f94c	add	x24, x19, x21, lsl #6
000000000003f950	ldr	x8, [x24]
000000000003f954	and	x9, x8, #0x100
000000000003f958	cmp	x8, #0x0
000000000003f95c	ccmp	x9, #0x0, #0x0, ne
000000000003f960	b.ne	0x3f938
000000000003f964	add	x0, x24, #0x10
000000000003f968	add	x2, sp, #0x48
000000000003f96c	ldr	x1, [sp, #0x38]
000000000003f970	bl	__mi_bitmap_try_find_claim_field
000000000003f974	ldr	x14, [sp, #0x38]
000000000003f978	tbz	w0, #0x0, 0x3f938
000000000003f97c	b	0x3fa14
000000000003f980	ldr	x8, [x8, #0x5f0]
000000000003f984	cmp	x8, #0x1
000000000003f988	b.ne	0x401ec
000000000003f98c	ldrb	w23, [sp, #0x45]
000000000003f990	ldr	x25, [x21, #0x630]
000000000003f994	cbz	x25, 0x3fa24
000000000003f998	ldr	x8, [x26]
000000000003f99c	adr	x19, #0x44b2c
000000000003f9a0	nop
000000000003f9a4	mov	x28, x25
000000000003f9a8	b	0x3f9b8
000000000003f9ac	add	x8, x21, #0x1
000000000003f9b0	subs	x28, x28, #0x1
000000000003f9b4	b.eq	0x3fa24
000000000003f9b8	cmp	x8, x25
000000000003f9bc	csel	x21, x8, xzr, lo
000000000003f9c0	add	x24, x19, x21, lsl #6
000000000003f9c4	ldr	x8, [x24]
000000000003f9c8	cbz	x8, 0x3f9ac
000000000003f9cc	cmp	w23, #0x0
000000000003f9d0	cset	w10, eq
000000000003f9d4	ubfx	x11, x8, #8, #1
000000000003f9d8	cmp	w8, #0x0
000000000003f9dc	cset	w9, lt
000000000003f9e0	cmp	w8, #0x10, lsl #12
000000000003f9e4	cset	w8, lo
000000000003f9e8	and	w10, w10, w11
000000000003f9ec	tbnz	w10, #0x0, 0x3f9ac
000000000003f9f0	orr	w8, w9, w8
000000000003f9f4	cbz	w8, 0x3f9ac
000000000003f9f8	add	x8, x19, x21, lsl #6
000000000003f9fc	add	x0, x8, #0x10
000000000003fa00	add	x2, sp, #0x48
000000000003fa04	ldr	x1, [sp, #0x38]
000000000003fa08	bl	__mi_bitmap_try_find_claim_field
000000000003fa0c	ldr	x14, [sp, #0x38]
000000000003fa10	tbz	w0, #0x0, 0x3f9ac
000000000003fa14	ldr	x25, [sp, #0x20]
000000000003fa18	str	x21, [x26]
000000000003fa1c	ldr	x28, [sp, #0x30]
000000000003fa20	b	0x3fbcc
000000000003fa24	ldrb	w19, [sp, #0x47]
000000000003fa28	ldrb	w21, [sp, #0x45]
000000000003fa2c	nop
000000000003fa30	ldr	x8, #0x54c00
000000000003fa34	cmp	x8, #0x3fe
000000000003fa38	ldr	x28, [sp, #0x30]
000000000003fa3c	ldr	x25, [sp, #0x20]
000000000003fa40	b.hi	0x3fe6c
000000000003fa44	cbz	w19, 0x3fa5c
000000000003fa48	mov	w0, #0x4
000000000003fa4c	bl	_mi_option_get
000000000003fa50	cmp	x0, #0x0
000000000003fa54	cset	w8, ne
000000000003fa58	b	0x3fa60
000000000003fa5c	mov	w8, #0x0
000000000003fa60	cmp	w21, #0x0
000000000003fa64	cset	w9, ne
000000000003fa68	cmp	w19, #0x0
000000000003fa6c	sturb	w8, [x29, #-0x51]
000000000003fa70	cset	w8, ne
000000000003fa74	and	w8, w8, w9
000000000003fa78	sturb	w8, [x29, #-0x52]
000000000003fa7c	sturh	wzr, [x29, #-0x54]
000000000003fa80	str	xzr, [sp, #0x50]
000000000003fa84	sub	x1, x29, #0x51
000000000003fa88	sub	x2, x29, #0x52
000000000003fa8c	sub	x3, x29, #0x54
000000000003fa90	sub	x4, x29, #0x53
000000000003fa94	add	x5, sp, #0x50
000000000003fa98	mov	w0, #0x10000000
000000000003fa9c	bl	__mi_arena_alloc_aligned
000000000003faa0	cbz	x0, 0x3fb00
000000000003faa4	adr	x9, #0x54b8c
000000000003faa8	nop
000000000003faac	ldr	x14, [sp, #0x38]
000000000003fab0	ldaxr	x8, [x9]
000000000003fab4	add	x10, x8, #0x1
000000000003fab8	stlxr	w11, x10, [x9]
000000000003fabc	cbnz	w11, 0x3fab0
000000000003fac0	cmp	x8, #0x400
000000000003fac4	ldr	x13, [sp, #0x10]
000000000003fac8	b.lo	0x3fb10
000000000003facc	ldaxr	x8, [x9]
000000000003fad0	sub	x8, x8, #0x1
000000000003fad4	stlxr	w10, x8, [x9]
000000000003fad8	cbnz	w10, 0x3facc
000000000003fadc	ldr	x2, [sp, #0x50]
000000000003fae0	ldurb	w3, [x29, #-0x51]
000000000003fae4	mov	w1, #0x10000000
000000000003fae8	bl	__mi_arena_free
000000000003faec	mov	w8, #0x100
000000000003faf0	str	x8, [sp]
000000000003faf4	adr	x0, #0x1d552 ; literal pool for: "maximum regions used: %zu GiB (perhaps recompile with a larger setting for MI_HEAP_REGION_MAX_SIZE)"
000000000003faf8	nop
000000000003fafc	bl	__mi_warning_message
000000000003fb00	mov	w8, #0x0
000000000003fb04	ldr	x14, [sp, #0x38]
000000000003fb08	cbnz	w8, 0x3fbcc
000000000003fb0c	b	0x3fe6c
000000000003fb10	adr	x9, #0x449b8
000000000003fb14	nop
000000000003fb18	add	x24, x9, x8, lsl #6
000000000003fb1c	ldr	x10, [sp, #0x50]
000000000003fb20	add	x11, x24, #0x30
000000000003fb24	stlr	x10, [x11]
000000000003fb28	add	x10, x24, #0x10
000000000003fb2c	stlr	xzr, [x10]
000000000003fb30	add	x11, x24, #0x18
000000000003fb34	ldurb	w12, [x29, #-0x53]
000000000003fb38	sub	x12, x12, #0x1
000000000003fb3c	stlr	x12, [x11]
000000000003fb40	add	x11, x24, #0x20
000000000003fb44	ldurb	w12, [x29, #-0x51]
000000000003fb48	sbfx	w12, w12, #0, #1
000000000003fb4c	sxtw	x12, w12
000000000003fb50	stlr	x12, [x11]
000000000003fb54	add	x11, x24, #0x28
000000000003fb58	stlr	xzr, [x11]
000000000003fb5c	str	xzr, [sp, #0x48]
000000000003fb60	mov	x11, #-0x1
000000000003fb64	lsr	x12, x13, #28
000000000003fb68	lsl	x13, x11, x14
000000000003fb6c	cmp	x14, #0x0
000000000003fb70	csinv	x13, xzr, x13, eq
000000000003fb74	cmp	x12, #0x0
000000000003fb78	csel	x11, x11, x13, ne
000000000003fb7c	ldaxr	x12, [x10]
000000000003fb80	orr	x12, x12, x11
000000000003fb84	stlxr	w13, x12, [x10]
000000000003fb88	cbnz	w13, 0x3fb7c
000000000003fb8c	add	x8, x9, x8, lsl #6
000000000003fb90	add	x8, x8, #0x8
000000000003fb94	stlr	x0, [x8]
000000000003fb98	ldurb	w8, [x29, #-0x52]
000000000003fb9c	ldurb	w9, [x29, #-0x54]
000000000003fba0	orr	w19, w8, w9, lsl #1
000000000003fba4	adrp	x9, 85 ; 0x94000
000000000003fba8	ldr	x8, [x9, #0x5f0]
000000000003fbac	cmp	x8, #0x1
000000000003fbb0	b.ne	0x40230
000000000003fbb4	and	x9, x19, #0xff
000000000003fbb8	mov	w8, #0x1
000000000003fbbc	mov	w10, #0x1
000000000003fbc0	bfi	x10, x9, #8, #8
000000000003fbc4	stlr	x10, [x24]
000000000003fbc8	cbz	w8, 0x3fe6c
000000000003fbcc	ldar	x8, [x24]
000000000003fbd0	add	x9, x24, #0x8
000000000003fbd4	ldar	x15, [x9]
000000000003fbd8	add	x10, x24, #0x18
000000000003fbdc	ldr	x9, [sp, #0x48]
000000000003fbe0	lsr	x11, x9, #6
000000000003fbe4	and	x9, x9, #0x3f
000000000003fbe8	mov	x12, #-0x1
000000000003fbec	ldr	x19, [sp, #0x10]
000000000003fbf0	lsr	x16, x19, #28
000000000003fbf4	lsl	x13, x12, x14
000000000003fbf8	mvn	x13, x13
000000000003fbfc	lsl	x9, x13, x9
000000000003fc00	cmp	x14, #0x0
000000000003fc04	csel	x9, xzr, x9, eq
000000000003fc08	cmp	x16, #0x0
000000000003fc0c	csel	x9, x12, x9, ne
000000000003fc10	add	x10, x10, x11, lsl #3
000000000003fc14	ldaxr	x11, [x10]
000000000003fc18	orr	x12, x11, x9
000000000003fc1c	stlxr	w13, x12, [x10]
000000000003fc20	cbnz	w13, 0x3fc14
000000000003fc24	tst	x11, x9
000000000003fc28	cset	w9, eq
000000000003fc2c	strb	w9, [sp, #0x46]
000000000003fc30	ubfx	w9, w8, #8, #1
000000000003fc34	strb	w9, [sp, #0x45]
000000000003fc38	ubfx	w8, w8, #9, #1
000000000003fc3c	strb	w8, [sp, #0x44]
000000000003fc40	ldr	x21, [sp, #0x48]
000000000003fc44	lsl	w8, w21, #22
000000000003fc48	and	x8, x8, #0xfc00000
000000000003fc4c	add	x23, x15, x8
000000000003fc50	ldrb	w9, [sp, #0x47]
000000000003fc54	add	x8, x24, #0x20
000000000003fc58	cbz	w9, 0x3fce8
000000000003fc5c	lsr	x10, x21, #6
000000000003fc60	and	x9, x21, #0x3f
000000000003fc64	mov	x11, #-0x1
000000000003fc68	lsl	x12, x11, x14
000000000003fc6c	mvn	x12, x12
000000000003fc70	lsl	x9, x12, x9
000000000003fc74	cmp	x14, #0x0
000000000003fc78	csel	x9, xzr, x9, eq
000000000003fc7c	cmp	x16, #0x0
000000000003fc80	csel	x9, x11, x9, ne
000000000003fc84	add	x8, x8, x10, lsl #3
000000000003fc88	ldaxr	x10, [x8]
000000000003fc8c	orr	x11, x10, x9
000000000003fc90	stlxr	w12, x11, [x8]
000000000003fc94	cbnz	w12, 0x3fc88
000000000003fc98	bics	xzr, x9, x10
000000000003fc9c	b.eq	0x3fd24
000000000003fca0	mov	x26, x16
000000000003fca4	str	x15, [sp, #0x8]
000000000003fca8	strb	wzr, [sp, #0x50]
000000000003fcac	and	x1, x19, #0xffffffffffc00000
000000000003fcb0	add	x4, sp, #0x50
000000000003fcb4	mov	x0, x23
000000000003fcb8	mov	w2, #0x1
000000000003fcbc	mov	w3, #0x0
000000000003fcc0	bl	_mi_os_commitx
000000000003fcc4	tbz	w0, #0x0, 0x3fe20
000000000003fcc8	ldrb	w8, [sp, #0x50]
000000000003fccc	ldr	x14, [sp, #0x38]
000000000003fcd0	mov	x16, x26
000000000003fcd4	cbz	w8, 0x3fce0
000000000003fcd8	mov	w8, #0x1
000000000003fcdc	strb	w8, [sp, #0x46]
000000000003fce0	ldr	x15, [sp, #0x8]
000000000003fce4	b	0x3fd24
000000000003fce8	and	x9, x21, #0x3f
000000000003fcec	mov	x10, #-0x1
000000000003fcf0	lsl	x11, x10, x14
000000000003fcf4	mvn	x11, x11
000000000003fcf8	lsl	x9, x11, x9
000000000003fcfc	cmp	x14, #0x0
000000000003fd00	csel	x9, xzr, x9, eq
000000000003fd04	cmp	x16, #0x0
000000000003fd08	csel	x9, x10, x9, ne
000000000003fd0c	lsr	x10, x21, #3
000000000003fd10	and	x10, x10, #0x1ffffffffffffff8
000000000003fd14	ldr	x8, [x8, x10]
000000000003fd18	bics	xzr, x9, x8
000000000003fd1c	cset	w8, eq
000000000003fd20	strb	w8, [sp, #0x47]
000000000003fd24	adr	x8, #0x447a4
000000000003fd28	nop
000000000003fd2c	sub	x8, x24, x8
000000000003fd30	add	x8, x8, x21
000000000003fd34	lsl	x26, x8, #1
000000000003fd38	add	x8, x24, #0x28
000000000003fd3c	ldr	x10, [sp, #0x48]
000000000003fd40	cbz	x16, 0x3fd64
000000000003fd44	lsr	x9, x10, #3
000000000003fd48	and	x9, x9, #0x1ffffffffffffff8
000000000003fd4c	add	x8, x8, x9
000000000003fd50	ldr	x9, [x8]
000000000003fd54	ldr	x21, [sp, #0x28]
000000000003fd58	cbz	x9, 0x3fe18
000000000003fd5c	mov	x9, #0x0
000000000003fd60	b	0x3fdbc
000000000003fd64	and	x9, x10, #0x3f
000000000003fd68	mov	x11, #-0x1
000000000003fd6c	lsl	x11, x11, x14
000000000003fd70	mvn	x11, x11
000000000003fd74	lsl	x11, x11, x9
000000000003fd78	cmp	x14, #0x0
000000000003fd7c	csel	x11, xzr, x11, eq
000000000003fd80	lsr	x10, x10, #3
000000000003fd84	and	x10, x10, #0x1ffffffffffffff8
000000000003fd88	add	x8, x8, x10
000000000003fd8c	ldr	x10, [x8]
000000000003fd90	tst	x10, x11
000000000003fd94	ldr	x21, [sp, #0x28]
000000000003fd98	b.eq	0x3fe18
000000000003fd9c	mov	x10, #-0x1
000000000003fda0	lsl	x11, x10, x14
000000000003fda4	mvn	x11, x11
000000000003fda8	lsl	x9, x11, x9
000000000003fdac	cmp	x14, #0x0
000000000003fdb0	csinv	x9, x10, x9, eq
000000000003fdb4	cmp	x16, #0x0
000000000003fdb8	csel	x9, xzr, x9, ne
000000000003fdbc	ldaxr	x10, [x8]
000000000003fdc0	and	x10, x10, x9
000000000003fdc4	stlxr	w11, x10, [x8]
000000000003fdc8	cbnz	w11, 0x3fdbc
000000000003fdcc	ldrb	w8, [sp, #0x47]
000000000003fdd0	cbz	w8, 0x3fe04
000000000003fdd4	mov	x24, x15
000000000003fdd8	strb	wzr, [sp, #0x50]
000000000003fddc	and	x1, x19, #0xffffffffffc00000
000000000003fde0	add	x2, sp, #0x50
000000000003fde4	mov	x0, x23
000000000003fde8	bl	__mi_os_unreset
000000000003fdec	ldrb	w8, [sp, #0x50]
000000000003fdf0	cbz	w8, 0x3fdfc
000000000003fdf4	mov	w8, #0x1
000000000003fdf8	strb	w8, [sp, #0x46]
000000000003fdfc	mov	x15, x24
000000000003fe00	b	0x3fe18
000000000003fe04	mov	w0, #0x5
000000000003fe08	mov	x24, x15
000000000003fe0c	bl	_mi_option_get
000000000003fe10	mov	x15, x24
000000000003fe14	cbz	x0, 0x3fdd4
000000000003fe18	cbnz	x15, 0x3feb0
000000000003fe1c	b	0x3fe70
000000000003fe20	add	x9, x24, #0x10
000000000003fe24	ldr	x10, [sp, #0x48]
000000000003fe28	and	x8, x10, #0x3f
000000000003fe2c	mov	x11, #-0x1
000000000003fe30	ldr	x13, [sp, #0x38]
000000000003fe34	lsl	x12, x11, x13
000000000003fe38	mvn	x12, x12
000000000003fe3c	lsl	x8, x12, x8
000000000003fe40	cmp	x13, #0x0
000000000003fe44	csinv	x8, x11, x8, eq
000000000003fe48	cmp	x26, #0x0
000000000003fe4c	csel	x8, xzr, x8, ne
000000000003fe50	lsr	x10, x10, #3
000000000003fe54	and	x10, x10, #0x1ffffffffffffff8
000000000003fe58	add	x9, x9, x10
000000000003fe5c	ldaxr	x10, [x9]
000000000003fe60	and	x10, x10, x8
000000000003fe64	stlxr	w11, x10, [x9]
000000000003fe68	cbnz	w11, 0x3fe5c
000000000003fe6c	ldr	x21, [sp, #0x28]
000000000003fe70	ldr	x23, [sp, #0x18]
000000000003fe74	str	x23, [sp]
000000000003fe78	adr	x0, #0x1d232 ; literal pool for: "unable to allocate from region: size %zu\n"
000000000003fe7c	nop
000000000003fe80	bl	__mi_warning_message
000000000003fe84	add	x1, sp, #0x47
000000000003fe88	add	x2, sp, #0x45
000000000003fe8c	add	x3, sp, #0x44
000000000003fe90	add	x4, sp, #0x46
000000000003fe94	add	x5, sp, #0x50
000000000003fe98	mov	x0, x23
000000000003fe9c	bl	__mi_arena_alloc_aligned
000000000003fea0	mov	x23, x0
000000000003fea4	ldr	x8, [sp, #0x50]
000000000003fea8	mov	w26, #0x1
000000000003feac	bfi	x26, x8, #1, #63
000000000003feb0	cbz	x23, 0x4005c
000000000003feb4	ldrb	w8, [sp, #0x47]
000000000003feb8	cbz	w8, 0x3fec4
000000000003febc	mov	w8, #0x1
000000000003fec0	b	0x3fef8
000000000003fec4	strb	wzr, [sp, #0x50]
000000000003fec8	mov	w19, #0x1
000000000003fecc	add	x4, sp, #0x50
000000000003fed0	mov	x0, x23
000000000003fed4	mov	x1, x22
000000000003fed8	mov	w2, #0x1
000000000003fedc	mov	w3, #0x0
000000000003fee0	bl	_mi_os_commitx
000000000003fee4	ldrb	w8, [sp, #0x50]
000000000003fee8	cbz	w8, 0x3fef0
000000000003feec	strb	w19, [sp, #0x46]
000000000003fef0	tbz	w0, #0x0, 0x40044
000000000003fef4	mov	w8, #0x0
000000000003fef8	str	x26, [x23]
000000000003fefc	ldrb	w9, [sp, #0x45]
000000000003ff00	ldrb	w10, [sp, #0x44]
000000000003ff04	and	w10, w10, #0x1
000000000003ff08	orr	w9, w10, w9
000000000003ff0c	strb	w9, [x23, #0x8]
000000000003ff10	strb	w8, [x23, #0x9]
000000000003ff14	ldr	x8, [x28, #0x70]
000000000003ff18	adr	x9, #0x54be8
000000000003ff1c	nop
000000000003ff20	cmp	x8, x9
000000000003ff24	cset	w10, hs
000000000003ff28	add	x9, x9, #0x240
000000000003ff2c	cmp	x8, x9
000000000003ff30	cset	w9, lo
000000000003ff34	and	w9, w10, w9
000000000003ff38	add	x11, x8, #0x18
000000000003ff3c	tbnz	x25, #0x3f, 0x3ffb0
000000000003ff40	cbz	w9, 0x40024
000000000003ff44	ldxr	x9, [x11]
000000000003ff48	add	x10, x9, #0x1
000000000003ff4c	stxr	w12, x10, [x11]
000000000003ff50	cbnz	w12, 0x3ff44
000000000003ff54	add	x11, x8, #0x10
000000000003ff58	ldr	x13, [x8, #0x10]
000000000003ff5c	b	0x3ff70
000000000003ff60	clrex
000000000003ff64	mov	w14, #0x0
000000000003ff68	mov	x13, x12
000000000003ff6c	cbnz	w14, 0x3ff98
000000000003ff70	cmp	x13, x9
000000000003ff74	b.gt	0x3ff98
000000000003ff78	ldxr	x12, [x11]
000000000003ff7c	cmp	x12, x13
000000000003ff80	b.ne	0x3ff60
000000000003ff84	stlxr	w13, x10, [x11]
000000000003ff88	cbnz	w13, 0x3ff64
000000000003ff8c	mov	w14, #0x1
000000000003ff90	mov	x13, x12
000000000003ff94	cbz	w14, 0x3ff70
000000000003ff98	mov	w9, #0x1
000000000003ff9c	ldxr	x10, [x8]
000000000003ffa0	add	x10, x10, #0x1
000000000003ffa4	stxr	w11, x10, [x8]
000000000003ffa8	cbnz	w11, 0x3ff9c
000000000003ffac	b	0x40090
000000000003ffb0	cbz	w9, 0x40064
000000000003ffb4	ldxr	x9, [x11]
000000000003ffb8	sub	x9, x9, #0x1
000000000003ffbc	stxr	w10, x9, [x11]
000000000003ffc0	cbnz	w10, 0x3ffb4
000000000003ffc4	add	x10, x8, #0x10
000000000003ffc8	ldr	x12, [x8, #0x10]
000000000003ffcc	b	0x3ffe0
000000000003ffd0	clrex
000000000003ffd4	mov	w13, #0x0
000000000003ffd8	mov	x12, x11
000000000003ffdc	cbnz	w13, 0x40008
000000000003ffe0	cmp	x12, x9
000000000003ffe4	b.ge	0x40008
000000000003ffe8	ldxr	x11, [x10]
000000000003ffec	cmp	x11, x12
000000000003fff0	b.ne	0x3ffd0
000000000003fff4	stlxr	w12, x9, [x10]
000000000003fff8	cbnz	w12, 0x3ffd4
000000000003fffc	mov	w13, #0x1
0000000000040000	mov	x12, x11
0000000000040004	cbz	w13, 0x3ffe0
0000000000040008	add	x8, x8, #0x8
000000000004000c	ldxr	x9, [x8]
0000000000040010	add	x9, x9, #0x1
0000000000040014	stxr	w10, x9, [x8]
0000000000040018	cbnz	w10, 0x4000c
000000000004001c	mov	x9, #-0x1
0000000000040020	b	0x40090
0000000000040024	ldp	x11, x10, [x8, #0x10]
0000000000040028	add	x9, x10, #0x1
000000000004002c	str	x9, [x8, #0x18]
0000000000040030	cmp	x10, x11
0000000000040034	b.lt	0x4003c
0000000000040038	str	x9, [x8, #0x10]
000000000004003c	mov	w9, #0x1
0000000000040040	b	0x40084
0000000000040044	mov	x0, x23
0000000000040048	mov	w1, #0x400000
000000000004004c	mov	x2, x26
0000000000040050	mov	w3, #0x0
0000000000040054	mov	w4, #0x0
0000000000040058	bl	__mi_mem_free
000000000004005c	mov	x23, #0x0
0000000000040060	b	0x40188
0000000000040064	ldp	x10, x9, [x8, #0x10]
0000000000040068	sub	x9, x9, #0x1
000000000004006c	str	x9, [x8, #0x18]
0000000000040070	cmp	x9, x10
0000000000040074	b.le	0x4007c
0000000000040078	str	x9, [x8, #0x10]
000000000004007c	add	x8, x8, #0x8
0000000000040080	mov	x9, #-0x1
0000000000040084	ldr	x10, [x8]
0000000000040088	add	x10, x10, #0x1
000000000004008c	str	x10, [x8]
0000000000040090	ldp	x8, x10, [x28, #0x38]
0000000000040094	add	x8, x8, x9
0000000000040098	str	x8, [x28, #0x38]
000000000004009c	cmp	x8, x10
00000000000400a0	b.ls	0x400a8
00000000000400a4	str	x8, [x28, #0x40]
00000000000400a8	ldp	x8, x9, [x28, #0x48]
00000000000400ac	add	x8, x8, x25
00000000000400b0	str	x8, [x28, #0x48]
00000000000400b4	cmp	x8, x9
00000000000400b8	b.ls	0x400c0
00000000000400bc	str	x8, [x28, #0x50]
00000000000400c0	add	x8, x23, #0x10
00000000000400c4	stlr	xzr, [x8]
00000000000400c8	add	x24, x23, #0x18
00000000000400cc	sub	x1, x22, #0x18
00000000000400d0	mov	x0, x24
00000000000400d4	bl	0x55ae0 ; symbol stub for: _bzero
00000000000400d8	mov	x8, #0x0
00000000000400dc	add	x9, x23, x8, lsl #6
00000000000400e0	strb	w8, [x9, #0x78]
00000000000400e4	ldrb	w10, [x9, #0x79]
00000000000400e8	ldrb	w11, [sp, #0x47]
00000000000400ec	and	w10, w10, #0xfffffff1
00000000000400f0	orr	w10, w10, w11, lsl #2
00000000000400f4	ldrb	w11, [sp, #0x46]
00000000000400f8	and	w10, w10, #0xfffffff7
00000000000400fc	orr	w10, w10, w11, lsl #3
0000000000040100	strb	w10, [x9, #0x79]
0000000000040104	add	w8, w8, #0x1
0000000000040108	and	x8, x8, #0xff
000000000004010c	cmp	x27, x8
0000000000040110	b.hi	0x400dc
0000000000040114	str	w20, [x23, #0x70]
0000000000040118	str	x21, [x23, #0x60]
000000000004011c	stp	x27, x25, [x23, #0x40]
0000000000040120	str	x22, [x23, #0x50]
0000000000040124	bl	0x55dec ; symbol stub for: _pthread_self
0000000000040128	bl	0x55da4 ; symbol stub for: _pthread_mach_thread_np
000000000004012c	mov	w8, w0
0000000000040130	add	x9, x23, #0x68
0000000000040134	stlr	x8, [x9]
0000000000040138	nop
000000000004013c	ldr	x8, #0x38b6c
0000000000040140	eor	x8, x8, x23
0000000000040144	str	x8, [x23, #0x58]
0000000000040148	cmp	w20, #0x1
000000000004014c	b.hi	0x40188
0000000000040150	ldr	w8, [x23, #0x70]
0000000000040154	add	x9, x28, #0x10
0000000000040158	cmp	w8, #0x0
000000000004015c	csel	x10, xzr, x28, ne
0000000000040160	cmp	w8, #0x1
0000000000040164	csel	x8, x9, x10, eq
0000000000040168	str	xzr, [x24]
000000000004016c	ldr	x9, [x8, #0x8]
0000000000040170	str	x9, [x23, #0x20]
0000000000040174	add	x10, x9, #0x18
0000000000040178	cmp	x9, #0x0
000000000004017c	csel	x9, x8, x10, eq
0000000000040180	str	x23, [x9]
0000000000040184	str	x23, [x8, #0x8]
0000000000040188	mov	x0, x23
000000000004018c	ldp	x29, x30, [sp, #0xb0]
0000000000040190	ldp	x20, x19, [sp, #0xa0]
0000000000040194	ldp	x22, x21, [sp, #0x90]
0000000000040198	ldp	x24, x23, [sp, #0x80]
000000000004019c	ldp	x26, x25, [sp, #0x70]
00000000000401a0	ldp	x28, x27, [sp, #0x60]
00000000000401a4	add	sp, sp, #0xc0
00000000000401a8	ret
00000000000401ac	adr	x21, #0x54444
00000000000401b0	nop
00000000000401b4	ldar	x19, [x21]
00000000000401b8	cbnz	x19, 0x3f724
00000000000401bc	mov	w0, #0xf
00000000000401c0	mov	x24, x8
00000000000401c4	bl	_mi_option_get
00000000000401c8	cmp	x0, #0x1
00000000000401cc	csinc	x19, x0, xzr, gt
00000000000401d0	stlr	x19, [x21]
00000000000401d4	str	x19, [sp]
00000000000401d8	adr	x0, #0x1c8fc ; literal pool for: "using %zd numa regions\n"
00000000000401dc	nop
00000000000401e0	bl	__mi_verbose_message
00000000000401e4	mov	x8, x24
00000000000401e8	b	0x3f724
00000000000401ec	nop
00000000000401f0	ldr	x8, #0x54400
00000000000401f4	cbnz	x8, 0x3f98c
00000000000401f8	adr	x19, #0x543f8
00000000000401fc	nop
0000000000040200	ldar	x8, [x19]
0000000000040204	cbnz	x8, 0x3f98c
0000000000040208	mov	w0, #0xf
000000000004020c	bl	_mi_option_get
0000000000040210	cmp	x0, #0x1
0000000000040214	csinc	x8, x0, xzr, gt
0000000000040218	stlr	x8, [x19]
000000000004021c	str	x8, [sp]
0000000000040220	adr	x0, #0x1c8b4 ; literal pool for: "using %zd numa regions\n"
0000000000040224	nop
0000000000040228	bl	__mi_verbose_message
000000000004022c	b	0x3f98c
0000000000040230	ldr	x8, [x9, #0x5f0]
0000000000040234	cbnz	x8, 0x3fbb4
0000000000040238	adr	x21, #0x543b8
000000000004023c	nop
0000000000040240	ldar	x8, [x21]
0000000000040244	cbnz	x8, 0x3fbb4
0000000000040248	mov	w0, #0xf
000000000004024c	bl	_mi_option_get
0000000000040250	cmp	x0, #0x1
0000000000040254	csinc	x8, x0, xzr, gt
0000000000040258	stlr	x8, [x21]
000000000004025c	str	x8, [sp]
0000000000040260	adr	x0, #0x1c874 ; literal pool for: "using %zd numa regions\n"
0000000000040264	nop
0000000000040268	bl	__mi_verbose_message
000000000004026c	ldr	x14, [sp, #0x38]
0000000000040270	b	0x3fbb4
__mi_bitmap_try_find_claim_field:
0000000000040274	ldr	x11, [x0]
0000000000040278	cmn	x11, #0x1
000000000004027c	b.eq	0x402b4
0000000000040280	mov	x8, #-0x1
0000000000040284	lsl	x9, x8, x1
0000000000040288	cmp	x1, #0x0
000000000004028c	csinv	x9, xzr, x9, eq
0000000000040290	cmp	x1, #0x3f
0000000000040294	csel	x10, x8, x9, hi
0000000000040298	mov	w8, #0x40
000000000004029c	sub	x8, x8, x1
00000000000402a0	mvn	x9, x11
00000000000402a4	rbit	x9, x9
00000000000402a8	clz	x9, x9
00000000000402ac	cmp	x9, x8
00000000000402b0	b.ls	0x402bc
00000000000402b4	mov	w0, #0x0
00000000000402b8	ret
00000000000402bc	lsl	x10, x10, x9
00000000000402c0	cmp	x1, #0x1
00000000000402c4	b.ne	0x40340
00000000000402c8	b	0x402dc
00000000000402cc	add	x9, x9, #0x1
00000000000402d0	lsl	x10, x10, #1
00000000000402d4	cmp	x9, x8
00000000000402d8	b.hi	0x402b4
00000000000402dc	tst	x11, x10
00000000000402e0	b.ne	0x402cc
00000000000402e4	ldaxr	x12, [x0]
00000000000402e8	cmp	x12, x11
00000000000402ec	b.ne	0x4030c
00000000000402f0	orr	x11, x11, x10
00000000000402f4	stlxr	w13, x11, [x0]
00000000000402f8	cbnz	w13, 0x40310
00000000000402fc	mov	w13, #0x1
0000000000040300	mov	x11, x12
0000000000040304	tbz	w13, #0x0, 0x402d4
0000000000040308	b	0x40380
000000000004030c	clrex
0000000000040310	mov	w13, #0x0
0000000000040314	mov	x11, x12
0000000000040318	tbz	w13, #0x0, 0x402d4
000000000004031c	b	0x40380
0000000000040320	clz	x12, x12
0000000000040324	eor	x12, x12, #0x3f
0000000000040328	sub	x9, x12, x9
000000000004032c	add	x13, x9, #0x1
0000000000040330	add	x9, x12, #0x1
0000000000040334	lsl	x10, x10, x13
0000000000040338	cmp	x9, x8
000000000004033c	b.hi	0x402b4
0000000000040340	ands	x12, x11, x10
0000000000040344	b.ne	0x40320
0000000000040348	ldaxr	x12, [x0]
000000000004034c	cmp	x12, x11
0000000000040350	b.ne	0x40370
0000000000040354	orr	x11, x11, x10
0000000000040358	stlxr	w13, x11, [x0]
000000000004035c	cbnz	w13, 0x40374
0000000000040360	mov	w13, #0x1
0000000000040364	mov	x11, x12
0000000000040368	cbz	w13, 0x40338
000000000004036c	b	0x40380
0000000000040370	clrex
0000000000040374	mov	w13, #0x0
0000000000040378	mov	x11, x12
000000000004037c	cbz	w13, 0x40338
0000000000040380	str	x9, [x2]
0000000000040384	mov	w0, #0x1
0000000000040388	ret
__mi_arena_alloc_aligned:
000000000004038c	sub	sp, sp, #0x70
0000000000040390	stp	x28, x27, [sp, #0x10]
0000000000040394	stp	x26, x25, [sp, #0x20]
0000000000040398	stp	x24, x23, [sp, #0x30]
000000000004039c	stp	x22, x21, [sp, #0x40]
00000000000403a0	stp	x20, x19, [sp, #0x50]
00000000000403a4	stp	x29, x30, [sp, #0x60]
00000000000403a8	add	x29, sp, #0x60
00000000000403ac	mov	x21, x5
00000000000403b0	mov	x24, x4
00000000000403b4	mov	x19, x3
00000000000403b8	mov	x20, x2
00000000000403bc	mov	x23, x1
00000000000403c0	mov	x22, x0
00000000000403c4	str	xzr, [x5]
00000000000403c8	strb	wzr, [x4]
00000000000403cc	strb	wzr, [x3]
00000000000403d0	cmp	x0, #0x800, lsl #12
00000000000403d4	b.lo	0x404d0
00000000000403d8	nop
00000000000403dc	ldr	x8, #0x541e4
00000000000403e0	cbz	x8, 0x404d0
00000000000403e4	mov	w8, #0xffffff
00000000000403e8	add	x8, x22, x8
00000000000403ec	lsr	x25, x8, #24
00000000000403f0	adrp	x8, 84 ; 0x94000
00000000000403f4	ldr	x9, [x8, #0x5f0]
00000000000403f8	cmp	x9, #0x1
00000000000403fc	b.ne	0x4053c
0000000000040400	mov	x26, #0x0
0000000000040404	adr	x27, #0x540fc
0000000000040408	nop
000000000004040c	b	0x40440
0000000000040410	mov	x1, x26
0000000000040414	mov	x2, x25
0000000000040418	mov	x3, x23
000000000004041c	mov	x4, x20
0000000000040420	mov	x5, x19
0000000000040424	mov	x6, x24
0000000000040428	mov	x7, x21
000000000004042c	bl	_mi_arena_alloc_from
0000000000040430	cbnz	x0, 0x4051c
0000000000040434	add	x26, x26, #0x1
0000000000040438	cmp	x26, #0x40
000000000004043c	b.eq	0x4046c
0000000000040440	add	x8, x27, x26, lsl #3
0000000000040444	ldr	x0, [x8, #0x400]
0000000000040448	cbz	x0, 0x4046c
000000000004044c	ldr	w8, [x0, #0x18]
0000000000040450	cmp	w8, #0x0
0000000000040454	b.gt	0x40434
0000000000040458	ldrb	w8, [x20]
000000000004045c	cbnz	w8, 0x40410
0000000000040460	ldrb	w8, [x0, #0x1e]
0000000000040464	cbnz	w8, 0x40434
0000000000040468	b	0x40410
000000000004046c	mov	x26, #0x0
0000000000040470	b	0x404a4
0000000000040474	mov	x1, x26
0000000000040478	mov	x2, x25
000000000004047c	mov	x3, x23
0000000000040480	mov	x4, x20
0000000000040484	mov	x5, x19
0000000000040488	mov	x6, x24
000000000004048c	mov	x7, x21
0000000000040490	bl	_mi_arena_alloc_from
0000000000040494	cbnz	x0, 0x4051c
0000000000040498	add	x26, x26, #0x1
000000000004049c	cmp	x26, #0x40
00000000000404a0	b.eq	0x404d0
00000000000404a4	add	x8, x27, x26, lsl #3
00000000000404a8	ldr	x0, [x8, #0x400]
00000000000404ac	cbz	x0, 0x404d0
00000000000404b0	ldr	w8, [x0, #0x18]
00000000000404b4	cmp	w8, #0x1
00000000000404b8	b.lt	0x40498
00000000000404bc	ldrb	w8, [x20]
00000000000404c0	cbnz	w8, 0x40474
00000000000404c4	ldrb	w8, [x0, #0x1e]
00000000000404c8	cbnz	w8, 0x40498
00000000000404cc	b	0x40474
00000000000404d0	mov	w0, #0x10
00000000000404d4	bl	_mi_option_get
00000000000404d8	cbz	x0, 0x404f4
00000000000404dc	bl	0x55a8c ; symbol stub for: ___error
00000000000404e0	mov	x8, x0
00000000000404e4	mov	x0, #0x0
00000000000404e8	mov	w9, #0xc
00000000000404ec	str	w9, [x8]
00000000000404f0	b	0x4051c
00000000000404f4	mov	w8, #0x1
00000000000404f8	strb	w8, [x24]
00000000000404fc	str	xzr, [x21]
0000000000040500	ldrb	w1, [x23]
0000000000040504	mov	x0, x22
0000000000040508	mov	x2, x20
000000000004050c	bl	__mi_os_alloc_aligned
0000000000040510	cbz	x0, 0x4051c
0000000000040514	ldrb	w8, [x20]
0000000000040518	strb	w8, [x19]
000000000004051c	ldp	x29, x30, [sp, #0x60]
0000000000040520	ldp	x20, x19, [sp, #0x50]
0000000000040524	ldp	x22, x21, [sp, #0x40]
0000000000040528	ldp	x24, x23, [sp, #0x30]
000000000004052c	ldp	x26, x25, [sp, #0x20]
0000000000040530	ldp	x28, x27, [sp, #0x10]
0000000000040534	add	sp, sp, #0x70
0000000000040538	ret
000000000004053c	ldr	x8, [x8, #0x5f0]
0000000000040540	cbnz	x8, 0x40400
0000000000040544	adr	x26, #0x540ac
0000000000040548	nop
000000000004054c	ldar	x8, [x26]
0000000000040550	cbnz	x8, 0x40400
0000000000040554	mov	w0, #0xf
0000000000040558	bl	_mi_option_get
000000000004055c	cmp	x0, #0x1
0000000000040560	csinc	x8, x0, xzr, gt
0000000000040564	stlr	x8, [x26]
0000000000040568	str	x8, [sp]
000000000004056c	adr	x0, #0x1c568 ; literal pool for: "using %zd numa regions\n"
0000000000040570	nop
0000000000040574	bl	__mi_verbose_message
0000000000040578	b	0x40400
__mi_os_unreset:
000000000004057c	stp	x22, x21, [sp, #-0x30]!
0000000000040580	stp	x20, x19, [sp, #0x10]
0000000000040584	stp	x29, x30, [sp, #0x20]
0000000000040588	add	x29, sp, #0x20
000000000004058c	mov	x21, x2
0000000000040590	mov	x19, x1
0000000000040594	mov	x20, x0
0000000000040598	mov	w0, #0x5
000000000004059c	bl	_mi_option_get
00000000000405a0	cbz	x0, 0x405c8
00000000000405a4	mov	x0, x20
00000000000405a8	mov	x1, x19
00000000000405ac	mov	w2, #0x1
00000000000405b0	mov	w3, #0x1
00000000000405b4	mov	x4, x21
00000000000405b8	ldp	x29, x30, [sp, #0x20]
00000000000405bc	ldp	x20, x19, [sp, #0x10]
00000000000405c0	ldp	x22, x21, [sp], #0x30
00000000000405c4	b	_mi_os_commitx
00000000000405c8	strb	wzr, [x21]
00000000000405cc	cbz	x20, 0x406d4
00000000000405d0	cbz	x19, 0x406d4
00000000000405d4	nop
00000000000405d8	ldr	x9, #0x399a8
00000000000405dc	add	x8, x20, x9
00000000000405e0	sub	x8, x8, #0x1
00000000000405e4	sub	x10, x9, #0x1
00000000000405e8	tst	x9, x10
00000000000405ec	b.ne	0x40610
00000000000405f0	neg	x9, x9
00000000000405f4	and	x8, x8, x9
00000000000405f8	add	x10, x20, x19
00000000000405fc	and	x9, x9, x10
0000000000040600	sub	x8, x9, x8
0000000000040604	cmp	x8, #0x1
0000000000040608	b.ge	0x40630
000000000004060c	b	0x406d4
0000000000040610	udiv	x8, x8, x9
0000000000040614	mul	x8, x8, x9
0000000000040618	add	x10, x20, x19
000000000004061c	udiv	x10, x10, x9
0000000000040620	mul	x9, x10, x9
0000000000040624	sub	x8, x9, x8
0000000000040628	cmp	x8, #0x1
000000000004062c	b.lt	0x406d4
0000000000040630	neg	x9, x8
0000000000040634	adr	x10, #0x54564
0000000000040638	nop
000000000004063c	ldxr	x11, [x10]
0000000000040640	add	x12, x11, x9
0000000000040644	stxr	w13, x12, [x10]
0000000000040648	cbnz	w13, 0x4063c
000000000004064c	sub	x10, x11, x8
0000000000040650	nop
0000000000040654	ldr	x13, #0x5453c
0000000000040658	adr	x11, #0x54538
000000000004065c	nop
0000000000040660	b	0x40674
0000000000040664	clrex
0000000000040668	mov	w14, #0x0
000000000004066c	mov	x13, x12
0000000000040670	cbnz	w14, 0x4069c
0000000000040674	cmp	x13, x10
0000000000040678	b.ge	0x4069c
000000000004067c	ldxr	x12, [x11]
0000000000040680	cmp	x12, x13
0000000000040684	b.ne	0x40664
0000000000040688	stlxr	w13, x10, [x11]
000000000004068c	cbnz	w13, 0x40668
0000000000040690	mov	w14, #0x1
0000000000040694	mov	x13, x12
0000000000040698	cbz	w14, 0x40674
000000000004069c	tbnz	x8, #0x3f, 0x406bc
00000000000406a0	adr	x9, #0x544e8
00000000000406a4	nop
00000000000406a8	ldxr	x10, [x9]
00000000000406ac	add	x10, x10, x8
00000000000406b0	stxr	w11, x10, [x9]
00000000000406b4	cbnz	w11, 0x406a8
00000000000406b8	b	0x406d4
00000000000406bc	adr	x8, #0x544c4
00000000000406c0	nop
00000000000406c4	ldxr	x10, [x8]
00000000000406c8	add	x10, x10, x9
00000000000406cc	stxr	w11, x10, [x8]
00000000000406d0	cbnz	w11, 0x406c4
00000000000406d4	mov	w0, #0x1
00000000000406d8	ldp	x29, x30, [sp, #0x20]
00000000000406dc	ldp	x20, x19, [sp, #0x10]
00000000000406e0	ldp	x22, x21, [sp], #0x30
00000000000406e4	ret
_mi_arena_alloc_from:
00000000000406e8	sub	sp, sp, #0x70
00000000000406ec	stp	x28, x27, [sp, #0x10]
00000000000406f0	stp	x26, x25, [sp, #0x20]
00000000000406f4	stp	x24, x23, [sp, #0x30]
00000000000406f8	stp	x22, x21, [sp, #0x40]
00000000000406fc	stp	x20, x19, [sp, #0x50]
0000000000040700	stp	x29, x30, [sp, #0x60]
0000000000040704	add	x29, sp, #0x60
0000000000040708	mov	x21, x6
000000000004070c	mov	x23, x5
0000000000040710	mov	x24, x4
0000000000040714	mov	x20, x2
0000000000040718	mov	x22, x0
000000000004071c	add	x8, x0, #0x20
0000000000040720	ldar	x8, [x8]
0000000000040724	ldr	x9, [x0, #0x10]
0000000000040728	cmp	x2, #0x1
000000000004072c	b.ne	0x40858
0000000000040730	cbz	x9, 0x40c30
0000000000040734	mov	x11, #0x0
0000000000040738	mov	w12, #0x1
000000000004073c	mov	x10, x8
0000000000040740	b	0x40754
0000000000040744	add	x11, x11, #0x1
0000000000040748	add	x10, x10, #0x1
000000000004074c	cmp	x11, x9
0000000000040750	b.eq	0x40c30
0000000000040754	cmp	x10, x9
0000000000040758	csel	x10, x10, xzr, lo
000000000004075c	add	x13, x22, x10, lsl #3
0000000000040760	ldr	x15, [x13, #0x38]
0000000000040764	cmn	x15, #0x1
0000000000040768	b.eq	0x40744
000000000004076c	mvn	x14, x15
0000000000040770	rbit	x14, x14
0000000000040774	clz	x2, x14
0000000000040778	cmp	x2, #0x3f
000000000004077c	b.hi	0x40744
0000000000040780	add	x13, x13, #0x38
0000000000040784	lsl	x14, x12, x2
0000000000040788	b	0x4079c
000000000004078c	add	x2, x2, #0x1
0000000000040790	lsl	x14, x14, #1
0000000000040794	cmp	x2, #0x40
0000000000040798	b.hs	0x40744
000000000004079c	tst	x14, x15
00000000000407a0	b.ne	0x4078c
00000000000407a4	ldaxr	x16, [x13]
00000000000407a8	cmp	x16, x15
00000000000407ac	b.ne	0x407cc
00000000000407b0	orr	x15, x14, x15
00000000000407b4	stlxr	w17, x15, [x13]
00000000000407b8	cbz	w17, 0x407e0
00000000000407bc	mov	w17, #0x0
00000000000407c0	mov	x15, x16
00000000000407c4	tbz	w17, #0x0, 0x40794
00000000000407c8	b	0x407ec
00000000000407cc	clrex
00000000000407d0	mov	w17, #0x0
00000000000407d4	mov	x15, x16
00000000000407d8	tbz	w17, #0x0, 0x40794
00000000000407dc	b	0x407ec
00000000000407e0	mov	w17, #0x1
00000000000407e4	mov	x15, x16
00000000000407e8	tbz	w17, #0x0, 0x40794
00000000000407ec	str	x3, [sp]
00000000000407f0	add	x26, x2, x10, lsl #6
00000000000407f4	add	x9, x22, #0x20
00000000000407f8	stlr	x8, [x9]
00000000000407fc	ldar	x8, [x22]
0000000000040800	add	x25, x8, x26, lsl #24
0000000000040804	add	w8, w1, #0x1
0000000000040808	bfi	x8, x26, #8, #56
000000000004080c	str	x8, [x7]
0000000000040810	ldr	x0, [x22, #0x28]
0000000000040814	mov	x1, x20
0000000000040818	mov	x2, x26
000000000004081c	mov	x3, #0x0
0000000000040820	bl	__mi_bitmap_claim_across
0000000000040824	strb	w0, [x21]
0000000000040828	ldrb	w8, [x22, #0x1e]
000000000004082c	strb	w8, [x24]
0000000000040830	ldrb	w8, [x22, #0x1e]
0000000000040834	cbz	w8, 0x40894
0000000000040838	mov	w8, #0x1
000000000004083c	ldr	x14, [sp]
0000000000040840	strb	w8, [x23]
0000000000040844	ldrb	w8, [x22, #0x1d]
0000000000040848	cbz	w8, 0x408b0
000000000004084c	mov	w8, #0x1
0000000000040850	strb	w8, [x14]
0000000000040854	b	0x40c34
0000000000040858	cbz	x9, 0x40c30
000000000004085c	str	x3, [sp]
0000000000040860	mov	x11, #0x0
0000000000040864	mov	x12, #-0x1
0000000000040868	lsl	x10, x12, x20
000000000004086c	mov	w13, #0x40
0000000000040870	sub	x14, x13, x20
0000000000040874	add	x15, x20, #0x3f
0000000000040878	cmp	x20, #0x0
000000000004087c	csinv	x10, xzr, x10, eq
0000000000040880	cmp	x20, #0x3f
0000000000040884	csinv	x16, x10, xzr, ls
0000000000040888	add	x17, x22, #0x30
000000000004088c	mov	x10, x8
0000000000040890	b	0x4092c
0000000000040894	ldrb	w8, [x22, #0x1d]
0000000000040898	cmp	w8, #0x0
000000000004089c	cset	w8, ne
00000000000408a0	ldr	x14, [sp]
00000000000408a4	strb	w8, [x23]
00000000000408a8	ldrb	w8, [x22, #0x1d]
00000000000408ac	cbnz	w8, 0x4084c
00000000000408b0	ldrb	w8, [x14]
00000000000408b4	cbz	w8, 0x40c58
00000000000408b8	ldr	x0, [x22, #0x30]
00000000000408bc	add	x3, sp, #0xf
00000000000408c0	mov	x1, x20
00000000000408c4	mov	x2, x26
00000000000408c8	bl	__mi_bitmap_claim_across
00000000000408cc	ldrb	w8, [sp, #0xf]
00000000000408d0	cbz	w8, 0x40c34
00000000000408d4	lsl	x1, x20, #24
00000000000408d8	mov	w19, #0x1
00000000000408dc	add	x4, sp, #0xe
00000000000408e0	mov	x0, x25
00000000000408e4	mov	w2, #0x1
00000000000408e8	mov	w3, #0x0
00000000000408ec	bl	_mi_os_commitx
00000000000408f0	ldrb	w8, [sp, #0xe]
00000000000408f4	cbz	w8, 0x40c34
00000000000408f8	strb	w19, [x21]
00000000000408fc	b	0x40c34
0000000000040900	ldr	x4, [x0]
0000000000040904	cmn	x4, #0x1
0000000000040908	mvn	x2, x4
000000000004090c	rbit	x2, x2
0000000000040910	clz	x2, x2
0000000000040914	ccmp	x2, x14, #0x2, ne
0000000000040918	b.ls	0x40bb4
000000000004091c	add	x11, x11, #0x1
0000000000040920	add	x10, x10, #0x1
0000000000040924	cmp	x11, x9
0000000000040928	b.eq	0x40c30
000000000004092c	cmp	x10, x9
0000000000040930	csel	x10, x10, xzr, lo
0000000000040934	cmp	x20, #0x40
0000000000040938	b.hi	0x4095c
000000000004093c	add	x0, x22, x10, lsl #3
0000000000040940	ldr	x4, [x0, #0x38]
0000000000040944	cmn	x4, #0x1
0000000000040948	mvn	x2, x4
000000000004094c	rbit	x2, x2
0000000000040950	clz	x2, x2
0000000000040954	ccmp	x2, x14, #0x2, ne
0000000000040958	b.ls	0x40b34
000000000004095c	add	x0, x22, x10, lsl #3
0000000000040960	ldr	x6, [x0, #0x38]
0000000000040964	clz	x27, x6
0000000000040968	cbz	x27, 0x4091c
000000000004096c	mov	x3, #0x0
0000000000040970	add	x0, x0, #0x38
0000000000040974	sub	x4, x9, x10
0000000000040978	add	x5, x17, x10, lsl #3
000000000004097c	cmp	x27, x20
0000000000040980	b.hs	0x40900
0000000000040984	sub	x2, x15, x27
0000000000040988	cmp	x4, x2, lsr #6
000000000004098c	b.ls	0x4091c
0000000000040990	mov	x26, x5
0000000000040994	mov	x2, x27
0000000000040998	ldr	x30, [x26, #0x10]
000000000004099c	add	x25, x2, #0x40
00000000000409a0	sub	x28, x20, x2
00000000000409a4	cmp	x25, x20
00000000000409a8	csel	x28, x28, x13, hi
00000000000409ac	lsl	x25, x12, x28
00000000000409b0	cmp	x28, #0x0
00000000000409b4	csinv	x25, xzr, x25, eq
00000000000409b8	cmp	x28, #0x3f
00000000000409bc	csel	x25, x12, x25, hi
00000000000409c0	tst	x25, x30
00000000000409c4	b.ne	0x4091c
00000000000409c8	add	x2, x28, x2
00000000000409cc	add	x26, x26, #0x8
00000000000409d0	cmp	x2, x20
00000000000409d4	b.lo	0x40998
00000000000409d8	sub	x2, x13, x27
00000000000409dc	lsl	x28, x12, x27
00000000000409e0	mvn	x28, x28
00000000000409e4	neg	x27, x27
00000000000409e8	lsl	x27, x28, x27
00000000000409ec	cmp	x6, #0x0
00000000000409f0	csinv	x6, x27, xzr, ne
00000000000409f4	ldr	x27, [x0]
00000000000409f8	b	0x40a0c
00000000000409fc	mov	w30, #0x0
0000000000040a00	clrex
0000000000040a04	mov	x27, x28
0000000000040a08	cbnz	w30, 0x40a38
0000000000040a0c	tst	x27, x6
0000000000040a10	b.ne	0x40a60
0000000000040a14	orr	x30, x27, x6
0000000000040a18	ldaxr	x28, [x0]
0000000000040a1c	cmp	x28, x27
0000000000040a20	b.ne	0x409fc
0000000000040a24	stlxr	w19, x30, [x0]
0000000000040a28	cbnz	w19, 0x40a18
0000000000040a2c	mov	w30, #0x1
0000000000040a30	mov	x27, x28
0000000000040a34	cbz	w30, 0x40a0c
0000000000040a38	mov	x27, x0
0000000000040a3c	mov	x19, x27
0000000000040a40	add	x27, x27, #0x8
0000000000040a44	cmp	x19, x26
0000000000040a48	b.hs	0x40aec
0000000000040a4c	ldaxr	x19, [x27]
0000000000040a50	cbnz	x19, 0x40a6c
0000000000040a54	stlxr	w19, x12, [x27]
0000000000040a58	cbnz	w19, 0x40a4c
0000000000040a5c	b	0x40a3c
0000000000040a60	mov	x27, x0
0000000000040a64	sub	x2, x0, #0x8
0000000000040a68	b	0x40a80
0000000000040a6c	clrex
0000000000040a70	sub	x2, x27, #0x8
0000000000040a74	b	0x40a80
0000000000040a78	stlr	xzr, [x2]
0000000000040a7c	sub	x2, x2, #0x8
0000000000040a80	cmp	x2, x0
0000000000040a84	b.hi	0x40a78
0000000000040a88	cmp	x2, x0
0000000000040a8c	b.ne	0x40ad0
0000000000040a90	ldr	x25, [x0]
0000000000040a94	mvn	x2, x6
0000000000040a98	b	0x40aac
0000000000040a9c	mov	w26, #0x0
0000000000040aa0	clrex
0000000000040aa4	mov	x25, x6
0000000000040aa8	cbnz	w26, 0x40ad0
0000000000040aac	and	x26, x25, x2
0000000000040ab0	ldaxr	x6, [x0]
0000000000040ab4	cmp	x6, x25
0000000000040ab8	b.ne	0x40a9c
0000000000040abc	stlxr	w19, x26, [x0]
0000000000040ac0	cbnz	w19, 0x40ab0
0000000000040ac4	mov	w26, #0x1
0000000000040ac8	mov	x25, x6
0000000000040acc	cbz	w26, 0x40aac
0000000000040ad0	cmp	x3, #0x4
0000000000040ad4	b.eq	0x4091c
0000000000040ad8	add	x3, x3, #0x1
0000000000040adc	ldr	x6, [x0]
0000000000040ae0	clz	x27, x6
0000000000040ae4	cbnz	x27, 0x4097c
0000000000040ae8	b	0x4091c
0000000000040aec	ldr	x28, [x27]
0000000000040af0	b	0x40b04
0000000000040af4	mov	w30, #0x0
0000000000040af8	clrex
0000000000040afc	mov	x28, x26
0000000000040b00	tbnz	w30, #0x0, 0x407f0
0000000000040b04	tst	x28, x25
0000000000040b08	b.ne	0x40a70
0000000000040b0c	orr	x30, x28, x25
0000000000040b10	ldaxr	x26, [x27]
0000000000040b14	cmp	x26, x28
0000000000040b18	b.ne	0x40af4
0000000000040b1c	stlxr	w19, x30, [x27]
0000000000040b20	cbnz	w19, 0x40b10
0000000000040b24	mov	w30, #0x1
0000000000040b28	mov	x28, x26
0000000000040b2c	tbz	w30, #0x0, 0x40b04
0000000000040b30	b	0x407f0
0000000000040b34	add	x0, x0, #0x38
0000000000040b38	lsl	x3, x16, x2
0000000000040b3c	b	0x40b60
0000000000040b40	clz	x5, x5
0000000000040b44	eor	x5, x5, #0x3f
0000000000040b48	sub	x2, x5, x2
0000000000040b4c	add	x6, x2, #0x1
0000000000040b50	add	x2, x5, #0x1
0000000000040b54	lsl	x3, x3, x6
0000000000040b58	cmp	x2, x14
0000000000040b5c	b.hi	0x4095c
0000000000040b60	ands	x5, x3, x4
0000000000040b64	b.ne	0x40b40
0000000000040b68	ldaxr	x5, [x0]
0000000000040b6c	cmp	x5, x4
0000000000040b70	b.ne	0x40b90
0000000000040b74	orr	x4, x3, x4
0000000000040b78	stlxr	w6, x4, [x0]
0000000000040b7c	cbz	w6, 0x40ba4
0000000000040b80	mov	w6, #0x0
0000000000040b84	mov	x4, x5
0000000000040b88	tbz	w6, #0x0, 0x40b58
0000000000040b8c	b	0x407f0
0000000000040b90	clrex
0000000000040b94	mov	w6, #0x0
0000000000040b98	mov	x4, x5
0000000000040b9c	tbz	w6, #0x0, 0x40b58
0000000000040ba0	b	0x407f0
0000000000040ba4	mov	w6, #0x1
0000000000040ba8	mov	x4, x5
0000000000040bac	tbz	w6, #0x0, 0x40b58
0000000000040bb0	b	0x407f0
0000000000040bb4	lsl	x3, x16, x2
0000000000040bb8	b	0x40bdc
0000000000040bbc	clz	x5, x5
0000000000040bc0	eor	x5, x5, #0x3f
0000000000040bc4	sub	x2, x5, x2
0000000000040bc8	add	x6, x2, #0x1
0000000000040bcc	add	x2, x5, #0x1
0000000000040bd0	lsl	x3, x3, x6
0000000000040bd4	cmp	x2, x14
0000000000040bd8	b.hi	0x4091c
0000000000040bdc	ands	x5, x3, x4
0000000000040be0	b.ne	0x40bbc
0000000000040be4	ldaxr	x5, [x0]
0000000000040be8	cmp	x5, x4
0000000000040bec	b.ne	0x40c0c
0000000000040bf0	orr	x4, x3, x4
0000000000040bf4	stlxr	w6, x4, [x0]
0000000000040bf8	cbz	w6, 0x40c20
0000000000040bfc	mov	w6, #0x0
0000000000040c00	mov	x4, x5
0000000000040c04	tbz	w6, #0x0, 0x40bd4
0000000000040c08	b	0x407f0
0000000000040c0c	clrex
0000000000040c10	mov	w6, #0x0
0000000000040c14	mov	x4, x5
0000000000040c18	tbz	w6, #0x0, 0x40bd4
0000000000040c1c	b	0x407f0
0000000000040c20	mov	w6, #0x1
0000000000040c24	mov	x4, x5
0000000000040c28	tbz	w6, #0x0, 0x40bd4
0000000000040c2c	b	0x407f0
0000000000040c30	mov	x25, #0x0
0000000000040c34	mov	x0, x25
0000000000040c38	ldp	x29, x30, [sp, #0x60]
0000000000040c3c	ldp	x20, x19, [sp, #0x50]
0000000000040c40	ldp	x22, x21, [sp, #0x40]
0000000000040c44	ldp	x24, x23, [sp, #0x30]
0000000000040c48	ldp	x26, x25, [sp, #0x20]
0000000000040c4c	ldp	x28, x27, [sp, #0x10]
0000000000040c50	add	sp, sp, #0x70
0000000000040c54	ret
0000000000040c58	ldr	x8, [x22, #0x30]
0000000000040c5c	lsr	x11, x26, #6
0000000000040c60	and	x9, x26, #0x3f
0000000000040c64	add	x10, x9, x20
0000000000040c68	cmp	x10, #0x40
0000000000040c6c	b.hi	0x40ca0
0000000000040c70	mov	x10, #-0x1
0000000000040c74	lsl	x12, x10, x20
0000000000040c78	mvn	x12, x12
0000000000040c7c	lsl	x9, x12, x9
0000000000040c80	cmp	x20, #0x0
0000000000040c84	csel	x9, xzr, x9, eq
0000000000040c88	cmp	x20, #0x3f
0000000000040c8c	csel	x9, x10, x9, hi
0000000000040c90	ldr	x8, [x8, x11, lsl #3]
0000000000040c94	bics	xzr, x9, x8
0000000000040c98	cset	w8, eq
0000000000040c9c	b	0x40850
0000000000040ca0	mov	w10, #0x40
0000000000040ca4	sub	x10, x10, x9
0000000000040ca8	neg	x12, x9
0000000000040cac	mov	x13, #-0x1
0000000000040cb0	lsl	x12, x13, x12
0000000000040cb4	mvn	x12, x12
0000000000040cb8	lsl	x12, x12, x9
0000000000040cbc	cmp	x9, #0x0
0000000000040cc0	csinv	x12, x12, xzr, ne
0000000000040cc4	sub	x9, x20, x10
0000000000040cc8	lsr	x10, x9, #6
0000000000040ccc	lsl	x13, x13, x9
0000000000040cd0	tst	x9, #0x3f
0000000000040cd4	csinv	x9, xzr, x13, eq
0000000000040cd8	add	x11, x8, x11, lsl #3
0000000000040cdc	ldr	x8, [x11], #0x8
0000000000040ce0	bics	xzr, x12, x8
0000000000040ce4	cset	w8, eq
0000000000040ce8	cbz	x10, 0x40d04
0000000000040cec	ldr	x12, [x11], #0x8
0000000000040cf0	cmn	x12, #0x1
0000000000040cf4	cset	w12, eq
0000000000040cf8	and	w8, w8, w12
0000000000040cfc	sub	x10, x10, #0x1
0000000000040d00	cbnz	x10, 0x40cec
0000000000040d04	cbz	x9, 0x40850
0000000000040d08	ldr	x10, [x11]
0000000000040d0c	bics	xzr, x9, x10
0000000000040d10	cset	w9, eq
0000000000040d14	and	w8, w8, w9
0000000000040d18	b	0x40850
__mi_bitmap_claim_across:
0000000000040d1c	lsr	x11, x2, #6
0000000000040d20	ands	x8, x2, #0x3f
0000000000040d24	add	x9, x8, x1
0000000000040d28	mov	w10, #0x40
0000000000040d2c	sub	x10, x10, x8
0000000000040d30	neg	x12, x8
0000000000040d34	mov	x13, #-0x1
0000000000040d38	lsl	x12, x13, x12
0000000000040d3c	mvn	x12, x12
0000000000040d40	lsl	x12, x12, x8
0000000000040d44	csinv	x12, x12, xzr, ne
0000000000040d48	sub	x10, x1, x10
0000000000040d4c	lsr	x14, x10, #6
0000000000040d50	ands	x10, x10, #0x3f
0000000000040d54	lsl	x10, x13, x10
0000000000040d58	csel	x13, x13, x13, eq
0000000000040d5c	csinv	x15, xzr, x10, eq
0000000000040d60	mov	x10, #-0x1
0000000000040d64	lsl	x16, x10, x1
0000000000040d68	mvn	x16, x16
0000000000040d6c	lsl	x8, x16, x8
0000000000040d70	cmp	x1, #0x0
0000000000040d74	csel	x16, xzr, xzr, eq
0000000000040d78	csel	x8, xzr, x8, eq
0000000000040d7c	cmp	x1, #0x3f
0000000000040d80	csel	x16, xzr, x16, hi
0000000000040d84	csel	x8, x10, x8, hi
0000000000040d88	cmp	x9, #0x40
0000000000040d8c	csel	x10, x13, x16, hi
0000000000040d90	csel	x8, x12, x8, hi
0000000000040d94	csel	x9, x15, x16, hi
0000000000040d98	csel	x12, x14, x16, hi
0000000000040d9c	add	x11, x0, x11, lsl #3
0000000000040da0	ldaxr	x13, [x11]
0000000000040da4	orr	x14, x13, x8
0000000000040da8	stlxr	w15, x14, [x11]
0000000000040dac	cbnz	w15, 0x40da0
0000000000040db0	ands	x13, x13, x8
0000000000040db4	cset	w0, eq
0000000000040db8	cmp	x13, x8
0000000000040dbc	cset	w8, ne
0000000000040dc0	add	x11, x11, #0x8
0000000000040dc4	cbz	x12, 0x40dfc
0000000000040dc8	sub	x12, x12, #0x1
0000000000040dcc	ldaxr	x13, [x11]
0000000000040dd0	orr	x14, x13, x10
0000000000040dd4	stlxr	w15, x14, [x11]
0000000000040dd8	cbnz	w15, 0x40dcc
0000000000040ddc	ands	x13, x13, x10
0000000000040de0	cset	w14, eq
0000000000040de4	and	w0, w0, w14
0000000000040de8	cmp	x13, x10
0000000000040dec	cset	w13, ne
0000000000040df0	orr	w8, w8, w13
0000000000040df4	add	x11, x11, #0x8
0000000000040df8	cbnz	x12, 0x40dc8
0000000000040dfc	cbz	x9, 0x40e28
0000000000040e00	ldaxr	x10, [x11]
0000000000040e04	orr	x12, x10, x9
0000000000040e08	stlxr	w13, x12, [x11]
0000000000040e0c	cbnz	w13, 0x40e00
0000000000040e10	ands	x10, x10, x9
0000000000040e14	cset	w11, eq
0000000000040e18	and	w0, w0, w11
0000000000040e1c	cmp	x10, x9
0000000000040e20	cset	w9, ne
0000000000040e24	orr	w8, w8, w9
0000000000040e28	cbz	x3, 0x40e34
0000000000040e2c	and	w8, w8, #0x1
0000000000040e30	strb	w8, [x3]
0000000000040e34	ret
__mi_usable_size:
0000000000040e38	ands	x12, x0, #0xffffffffffc00000
0000000000040e3c	b.eq	0x40e70
0000000000040e40	and	x8, x0, #0x3fffff
0000000000040e44	ldr	x10, [x12, #0x60]
0000000000040e48	lsr	x8, x8, x10
0000000000040e4c	add	x8, x12, x8, lsl #6
0000000000040e50	add	x9, x8, #0x78
0000000000040e54	ldrb	w11, [x8, #0x7e]
0000000000040e58	ldr	w8, [x8, #0x8c]
0000000000040e5c	tbnz	w11, #0x1, 0x40e78
0000000000040e60	ubfx	x10, x8, #26, #6
0000000000040e64	cbnz	w10, 0x40e8c
0000000000040e68	mov	x0, x8
0000000000040e6c	ret
0000000000040e70	mov	x0, #0x0
0000000000040e74	ret
0000000000040e78	ldr	w13, [x12, #0x70]
0000000000040e7c	cmp	w13, #0x3
0000000000040e80	b.ne	0x40ea4
0000000000040e84	ldr	x11, [x12, #0x48]
0000000000040e88	b	0x40eac
0000000000040e8c	and	x10, x9, #0xffffffffffc00000
0000000000040e90	ldr	w11, [x10, #0x70]
0000000000040e94	cmp	w11, #0x3
0000000000040e98	b.ne	0x40f04
0000000000040e9c	ldr	x12, [x10, #0x48]
0000000000040ea0	b	0x40f10
0000000000040ea4	mov	w11, #0x1
0000000000040ea8	lsl	x11, x11, x10
0000000000040eac	ldrb	w10, [x9]
0000000000040eb0	madd	x11, x11, x10, x12
0000000000040eb4	cbnz	x10, 0x40ee8
0000000000040eb8	ldr	x12, [x12, #0x50]
0000000000040ebc	add	x11, x11, x12
0000000000040ec0	cmp	w13, #0x1
0000000000040ec4	b.hi	0x40ee8
0000000000040ec8	cbz	w8, 0x40ee8
0000000000040ecc	udiv	x12, x11, x8
0000000000040ed0	neg	x13, x11
0000000000040ed4	madd	x12, x12, x8, x13
0000000000040ed8	add	x12, x8, x12
0000000000040edc	add	x13, x11, x12
0000000000040ee0	cmp	x12, x8
0000000000040ee4	csel	x11, x13, x11, lo
0000000000040ee8	ubfx	x12, x8, #26, #6
0000000000040eec	cbnz	w12, 0x40f5c
0000000000040ef0	sub	x9, x0, x11
0000000000040ef4	udiv	x10, x9, x8
0000000000040ef8	msub	x11, x10, x8, x9
0000000000040efc	sub	x0, x8, x11
0000000000040f00	ret
0000000000040f04	ldr	x12, [x10, #0x60]
0000000000040f08	mov	w13, #0x1
0000000000040f0c	lsl	x12, x13, x12
0000000000040f10	ldrb	w9, [x9]
0000000000040f14	cbz	x9, 0x40f20
0000000000040f18	mov	x0, x12
0000000000040f1c	ret
0000000000040f20	ldr	x13, [x10, #0x50]
0000000000040f24	sub	x0, x12, x13
0000000000040f28	cmp	w11, #0x1
0000000000040f2c	ccmp	w8, #0x0, #0x4, ls
0000000000040f30	b.eq	0x40f58
0000000000040f34	madd	x9, x12, x9, x10
0000000000040f38	add	x9, x9, x13
0000000000040f3c	udiv	x10, x9, x8
0000000000040f40	neg	x9, x9
0000000000040f44	madd	x9, x10, x8, x9
0000000000040f48	add	x9, x8, x9
0000000000040f4c	cmp	x9, x8
0000000000040f50	csel	x8, x9, xzr, lo
0000000000040f54	sub	x0, x0, x8
0000000000040f58	ret
0000000000040f5c	and	x12, x9, #0xffffffffffc00000
0000000000040f60	ldr	w14, [x12, #0x70]
0000000000040f64	cmp	w14, #0x3
0000000000040f68	b.ne	0x40f74
0000000000040f6c	ldr	x15, [x12, #0x48]
0000000000040f70	b	0x40f80
0000000000040f74	ldr	x13, [x12, #0x60]
0000000000040f78	mov	w15, #0x1
0000000000040f7c	lsl	x15, x15, x13
0000000000040f80	cbz	w10, 0x40f8c
0000000000040f84	mov	x13, x15
0000000000040f88	b	0x40fc4
0000000000040f8c	ldr	x16, [x12, #0x50]
0000000000040f90	sub	x13, x15, x16
0000000000040f94	cmp	w14, #0x1
0000000000040f98	ccmp	w8, #0x0, #0x4, ls
0000000000040f9c	b.eq	0x40fc4
0000000000040fa0	madd	x12, x15, x10, x12
0000000000040fa4	add	x12, x12, x16
0000000000040fa8	udiv	x14, x12, x8
0000000000040fac	neg	x12, x12
0000000000040fb0	madd	x12, x14, x8, x12
0000000000040fb4	add	x12, x8, x12
0000000000040fb8	cmp	x12, x8
0000000000040fbc	csel	x12, x12, xzr, lo
0000000000040fc0	sub	x13, x13, x12
0000000000040fc4	sub	x11, x0, x11
0000000000040fc8	udiv	x12, x11, x13
0000000000040fcc	msub	x11, x12, x13, x11
0000000000040fd0	and	x12, x9, #0xffffffffffc00000
0000000000040fd4	ldr	w9, [x12, #0x70]
0000000000040fd8	cmp	w9, #0x3
0000000000040fdc	b.ne	0x40fe8
0000000000040fe0	ldr	x13, [x12, #0x48]
0000000000040fe4	b	0x40ff4
0000000000040fe8	ldr	x13, [x12, #0x60]
0000000000040fec	mov	w14, #0x1
0000000000040ff0	lsl	x13, x14, x13
0000000000040ff4	cbz	w10, 0x41000
0000000000040ff8	sub	x0, x13, x11
0000000000040ffc	ret
0000000000041000	ldr	x14, [x12, #0x50]
0000000000041004	sub	x15, x13, x14
0000000000041008	madd	x10, x13, x10, x12
000000000004100c	add	x10, x10, x14
0000000000041010	udiv	x12, x10, x8
0000000000041014	neg	x10, x10
0000000000041018	madd	x10, x12, x8, x10
000000000004101c	add	x10, x8, x10
0000000000041020	cmp	x10, x8
0000000000041024	csel	x10, x10, xzr, lo
0000000000041028	sub	x10, x15, x10
000000000004102c	cmp	w9, #0x1
0000000000041030	ccmp	w8, #0x0, #0x4, ls
0000000000041034	csel	x8, x15, x10, eq
0000000000041038	sub	x0, x8, x11
000000000004103c	ret
__mi_heap_malloc_zero:
0000000000041040	stp	x20, x19, [sp, #-0x20]!
0000000000041044	stp	x29, x30, [sp, #0x10]
0000000000041048	add	x29, sp, #0x10
000000000004104c	mov	x20, x1
0000000000041050	cmp	x1, #0x400
0000000000041054	b.hi	0x410e4
0000000000041058	add	x8, x20, #0x7
000000000004105c	and	x8, x8, #0xfffffffffffffff8
0000000000041060	add	x8, x0, x8
0000000000041064	ldr	x8, [x8, #0x8]
0000000000041068	ldr	x19, [x8, #0x8]
000000000004106c	cbz	x19, 0x410e4
0000000000041070	ldr	w9, [x8, #0x10]
0000000000041074	add	w9, w9, #0x1
0000000000041078	str	w9, [x8, #0x10]
000000000004107c	ldr	x9, [x19]
0000000000041080	str	x9, [x8, #0x8]
0000000000041084	cbz	x19, 0x410b0
0000000000041088	cmp	x20, #0x9
000000000004108c	b.lo	0x410c0
0000000000041090	and	x8, x19, #0xffffffffffc00000
0000000000041094	and	x9, x19, #0x3fffff
0000000000041098	ldr	x10, [x8, #0x60]
000000000004109c	lsr	x9, x9, x10
00000000000410a0	add	x8, x8, x9, lsl #6
00000000000410a4	ldrb	w8, [x8, #0x7f]
00000000000410a8	tbz	w8, #0x0, 0x410c0
00000000000410ac	str	xzr, [x19]
00000000000410b0	mov	x0, x19
00000000000410b4	ldp	x29, x30, [sp, #0x10]
00000000000410b8	ldp	x20, x19, [sp], #0x20
00000000000410bc	ret
00000000000410c0	mov	x0, x19
00000000000410c4	bl	__mi_usable_size
00000000000410c8	mov	x1, x0
00000000000410cc	mov	x0, x19
00000000000410d0	bl	0x55ae0 ; symbol stub for: _bzero
00000000000410d4	mov	x0, x19
00000000000410d8	ldp	x29, x30, [sp, #0x10]
00000000000410dc	ldp	x20, x19, [sp], #0x20
00000000000410e0	ret
00000000000410e4	mov	x1, x20
00000000000410e8	bl	__mi_malloc_generic
00000000000410ec	mov	x19, x0
00000000000410f0	cbnz	x19, 0x41088
00000000000410f4	b	0x410b0
-[NSError(NSErrorKotlinException) kotlinException]:
00000000000410f8	stp	x29, x30, [sp, #-0x10]!
00000000000410fc	mov	x29, sp
0000000000041100	nop
0000000000041104	ldr	x1, #0x35d9c ; Objc selector ref: userInfo
0000000000041108	bl	0x55ca8 ; Objc message: -[x0 userInfo]
000000000004110c	cbz	x0, 0x41128
0000000000041110	nop
0000000000041114	ldr	x1, #0x35cec ; Objc selector ref: objectForKeyedSubscript:
0000000000041118	adr	x2, #0x30e58 ; Objc cfstring ref: @"bad cfstring ref"
000000000004111c	nop
0000000000041120	ldp	x29, x30, [sp], #0x10
0000000000041124	b	0x55ca8 ; Objc message: -[x0 objectForKeyedSubscript:]
0000000000041128	ldp	x29, x30, [sp], #0x10
000000000004112c	ret
_Kotlin_NSArrayAsKList_get:
0000000000041130	stp	x20, x19, [sp, #-0x20]!
0000000000041134	stp	x29, x30, [sp, #0x10]
0000000000041138	add	x29, sp, #0x10
000000000004113c	mov	x19, x2
0000000000041140	ldar	x8, [x0]
0000000000041144	and	x8, x8, #0xfffffffffffffffc
0000000000041148	ldr	x9, [x8]
000000000004114c	cmp	x8, #0x0
0000000000041150	ccmp	x9, x8, #0x4, ne
0000000000041154	b.ne	0x41160
0000000000041158	mov	x0, #0x0
000000000004115c	b	0x41168
0000000000041160	add	x8, x8, #0x10
0000000000041164	ldar	x0, [x8]
0000000000041168	sxtw	x2, w1
000000000004116c	nop
0000000000041170	ldr	x1, #0x35c78 ; Objc selector ref: objectAtIndex:
0000000000041174	bl	0x55ca8 ; Objc message: -[x0 objectAtIndex:]
0000000000041178	mov	x20, x0
000000000004117c	nop
0000000000041180	ldr	x0, #0x35ef8 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000041184	nop
0000000000041188	ldr	x1, #0x35c48 ; Objc selector ref: null
000000000004118c	bl	0x55ca8 ; Objc message: +[NSNull null]
0000000000041190	cmp	x20, x0
0000000000041194	b.eq	0x411b8
0000000000041198	cbz	x20, 0x411b8
000000000004119c	nop
00000000000411a0	ldr	x1, #0x535b8
00000000000411a4	mov	x0, x20
00000000000411a8	mov	x2, x19
00000000000411ac	ldp	x29, x30, [sp, #0x10]
00000000000411b0	ldp	x20, x19, [sp], #0x20
00000000000411b4	b	0x55ca8 ; Objc message: -[x0 null]
00000000000411b8	str	xzr, [x19]
00000000000411bc	mov	x0, #0x0
00000000000411c0	ldp	x29, x30, [sp, #0x10]
00000000000411c4	ldp	x20, x19, [sp], #0x20
00000000000411c8	ret
_Kotlin_NSMutableArrayAsKMutableList_add:
00000000000411cc	stp	x20, x19, [sp, #-0x20]!
00000000000411d0	stp	x29, x30, [sp, #0x10]
00000000000411d4	add	x29, sp, #0x10
00000000000411d8	mov	x19, x1
00000000000411dc	ldar	x8, [x0]
00000000000411e0	and	x8, x8, #0xfffffffffffffffc
00000000000411e4	ldr	x9, [x8]
00000000000411e8	cmp	x8, #0x0
00000000000411ec	ccmp	x9, x8, #0x4, ne
00000000000411f0	b.ne	0x41208
00000000000411f4	mov	x20, #0x0
00000000000411f8	cbz	x2, 0x41214
00000000000411fc	mov	x0, x2
0000000000041200	bl	_Kotlin_ObjCExport_refToObjC
0000000000041204	b	0x41228
0000000000041208	add	x8, x8, #0x10
000000000004120c	ldar	x20, [x8]
0000000000041210	cbnz	x2, 0x411fc
0000000000041214	nop
0000000000041218	ldr	x0, #0x35e60 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004121c	nop
0000000000041220	ldr	x1, #0x35bb0 ; Objc selector ref: null
0000000000041224	bl	0x55ca8 ; Objc message: +[NSNull null]
0000000000041228	mov	x2, x0
000000000004122c	sxtw	x3, w19
0000000000041230	nop
0000000000041234	ldr	x1, #0x35b2c ; Objc selector ref: insertObject:atIndex:
0000000000041238	mov	x0, x20
000000000004123c	ldp	x29, x30, [sp, #0x10]
0000000000041240	ldp	x20, x19, [sp], #0x20
0000000000041244	b	0x55ca8 ; Objc message: -[x0 insertObject:atIndex:]
_Kotlin_NSMutableArrayAsKMutableList_removeAt:
0000000000041248	stp	x22, x21, [sp, #-0x30]!
000000000004124c	stp	x20, x19, [sp, #0x10]
0000000000041250	stp	x29, x30, [sp, #0x20]
0000000000041254	add	x29, sp, #0x20
0000000000041258	mov	x20, x2
000000000004125c	ldar	x8, [x0]
0000000000041260	and	x8, x8, #0xfffffffffffffffc
0000000000041264	ldr	x9, [x8]
0000000000041268	cmp	x8, #0x0
000000000004126c	ccmp	x9, x8, #0x4, ne
0000000000041270	b.ne	0x4127c
0000000000041274	mov	x19, #0x0
0000000000041278	b	0x41284
000000000004127c	add	x8, x8, #0x10
0000000000041280	ldar	x19, [x8]
0000000000041284	sxtw	x21, w1
0000000000041288	nop
000000000004128c	ldr	x1, #0x35b5c ; Objc selector ref: objectAtIndex:
0000000000041290	mov	x0, x19
0000000000041294	mov	x2, x21
0000000000041298	bl	0x55ca8 ; Objc message: -[x0 objectAtIndex:]
000000000004129c	mov	x22, x0
00000000000412a0	nop
00000000000412a4	ldr	x0, #0x35dd4 ; Objc class ref: _OBJC_CLASS_$_NSNull
00000000000412a8	nop
00000000000412ac	ldr	x1, #0x35b24 ; Objc selector ref: null
00000000000412b0	bl	0x55ca8 ; Objc message: +[NSNull null]
00000000000412b4	cmp	x22, x0
00000000000412b8	b.eq	0x412dc
00000000000412bc	cbz	x22, 0x412e0
00000000000412c0	nop
00000000000412c4	ldr	x1, #0x53494
00000000000412c8	mov	x0, x22
00000000000412cc	mov	x2, x20
00000000000412d0	bl	0x55ca8 ; Objc message: -[x0 null]
00000000000412d4	mov	x22, x0
00000000000412d8	b	0x412e4
00000000000412dc	mov	x22, #0x0
00000000000412e0	str	xzr, [x20]
00000000000412e4	nop
00000000000412e8	ldr	x1, #0x35b48 ; Objc selector ref: removeObjectAtIndex:
00000000000412ec	mov	x0, x19
00000000000412f0	mov	x2, x21
00000000000412f4	bl	0x55ca8 ; Objc message: -[x0 removeObjectAtIndex:]
00000000000412f8	mov	x0, x22
00000000000412fc	ldp	x29, x30, [sp, #0x20]
0000000000041300	ldp	x20, x19, [sp, #0x10]
0000000000041304	ldp	x22, x21, [sp], #0x30
0000000000041308	ret
_Kotlin_NSMutableArrayAsKMutableList_set:
000000000004130c	stp	x26, x25, [sp, #-0x50]!
0000000000041310	stp	x24, x23, [sp, #0x10]
0000000000041314	stp	x22, x21, [sp, #0x20]
0000000000041318	stp	x20, x19, [sp, #0x30]
000000000004131c	stp	x29, x30, [sp, #0x40]
0000000000041320	add	x29, sp, #0x40
0000000000041324	mov	x22, x3
0000000000041328	mov	x21, x2
000000000004132c	ldar	x8, [x0]
0000000000041330	and	x8, x8, #0xfffffffffffffffc
0000000000041334	ldr	x9, [x8]
0000000000041338	cmp	x8, #0x0
000000000004133c	ccmp	x9, x8, #0x4, ne
0000000000041340	b.ne	0x4134c
0000000000041344	mov	x19, #0x0
0000000000041348	b	0x41354
000000000004134c	add	x8, x8, #0x10
0000000000041350	ldar	x19, [x8]
0000000000041354	sxtw	x20, w1
0000000000041358	nop
000000000004135c	ldr	x1, #0x35a8c ; Objc selector ref: objectAtIndex:
0000000000041360	mov	x0, x19
0000000000041364	mov	x2, x20
0000000000041368	bl	0x55ca8 ; Objc message: -[x0 objectAtIndex:]
000000000004136c	mov	x23, x0
0000000000041370	adrp	x25, 54 ; 0x77000
0000000000041374	ldr	x0, [x25, #0x78] ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000041378	nop
000000000004137c	ldr	x24, #0x35a54 ; Objc selector ref: null
0000000000041380	mov	x1, x24
0000000000041384	bl	0x55ca8 ; Objc message: +[NSNull null]
0000000000041388	cmp	x23, x0
000000000004138c	b.eq	0x413b4
0000000000041390	cbz	x23, 0x413cc
0000000000041394	nop
0000000000041398	ldr	x1, #0x533c0
000000000004139c	mov	x0, x23
00000000000413a0	mov	x2, x22
00000000000413a4	bl	0x55ca8 ; Objc message: -[x0 null]
00000000000413a8	mov	x23, x0
00000000000413ac	cbnz	x21, 0x413c0
00000000000413b0	b	0x413d4
00000000000413b4	mov	x23, #0x0
00000000000413b8	str	xzr, [x22]
00000000000413bc	cbz	x21, 0x413d4
00000000000413c0	mov	x0, x21
00000000000413c4	bl	_Kotlin_ObjCExport_refToObjC
00000000000413c8	b	0x413e0
00000000000413cc	str	xzr, [x22]
00000000000413d0	cbnz	x21, 0x413c0
00000000000413d4	ldr	x0, [x25, #0x78]
00000000000413d8	mov	x1, x24
00000000000413dc	bl	0x55ca8 ; Objc message: -[x0 null]
00000000000413e0	mov	x3, x0
00000000000413e4	nop
00000000000413e8	ldr	x1, #0x35a58 ; Objc selector ref: replaceObjectAtIndex:withObject:
00000000000413ec	mov	x0, x19
00000000000413f0	mov	x2, x20
00000000000413f4	bl	0x55ca8 ; Objc message: -[x0 replaceObjectAtIndex:withObject:]
00000000000413f8	mov	x0, x23
00000000000413fc	ldp	x29, x30, [sp, #0x40]
0000000000041400	ldp	x20, x19, [sp, #0x30]
0000000000041404	ldp	x22, x21, [sp, #0x20]
0000000000041408	ldp	x24, x23, [sp, #0x10]
000000000004140c	ldp	x26, x25, [sp], #0x50
0000000000041410	ret
_Kotlin_NSEnumeratorAsKIterator_computeNext:
0000000000041414	sub	sp, sp, #0xd0
0000000000041418	stp	x28, x27, [sp, #0x70]
000000000004141c	stp	x26, x25, [sp, #0x80]
0000000000041420	stp	x24, x23, [sp, #0x90]
0000000000041424	stp	x22, x21, [sp, #0xa0]
0000000000041428	stp	x20, x19, [sp, #0xb0]
000000000004142c	stp	x29, x30, [sp, #0xc0]
0000000000041430	add	x29, sp, #0xc0
0000000000041434	mov	x19, x0
0000000000041438	ldar	x8, [x0]
000000000004143c	and	x8, x8, #0xfffffffffffffffc
0000000000041440	ldr	x9, [x8]
0000000000041444	cmp	x8, #0x0
0000000000041448	ccmp	x9, x8, #0x4, ne
000000000004144c	b.ne	0x414d0
0000000000041450	mov	x0, #0x0
0000000000041454	nop
0000000000041458	ldr	x1, #0x35970 ; Objc selector ref: nextObject
000000000004145c	bl	0x55ca8 ; Objc message: -[x0 nextObject]
0000000000041460	cbz	x0, 0x414e8
0000000000041464	mov	x21, x0
0000000000041468	add	x22, sp, #0x8
000000000004146c	str	xzr, [sp, #0x20]
0000000000041470	adrp	x20, 57 ; 0x7a000
0000000000041474	add	x20, x20, #0x4e0
0000000000041478	ldr	x24, [x20]
000000000004147c	mov	x0, x20
0000000000041480	blr	x24
0000000000041484	ldr	x8, [x0]
0000000000041488	ldr	x9, [x8, #0x110]
000000000004148c	str	x22, [x8, #0x110]
0000000000041490	mov	x8, #0x400000000
0000000000041494	stp	x9, x8, [sp, #0x10]
0000000000041498	nop
000000000004149c	ldr	x0, #0x35bdc ; Objc class ref: _OBJC_CLASS_$_NSNull
00000000000414a0	nop
00000000000414a4	ldr	x1, #0x3592c ; Objc selector ref: null
00000000000414a8	bl	0x55ca8 ; Objc message: +[NSNull null]
00000000000414ac	cmp	x21, x0
00000000000414b0	b.eq	0x41650
00000000000414b4	add	x2, x22, #0x18
00000000000414b8	nop
00000000000414bc	ldr	x1, #0x5329c
00000000000414c0	mov	x0, x21
00000000000414c4	bl	0x55ca8 ; Objc message: -[x0 null]
00000000000414c8	mov	x21, x0
00000000000414cc	b	0x41658
00000000000414d0	add	x8, x8, #0x10
00000000000414d4	ldar	x0, [x8]
00000000000414d8	nop
00000000000414dc	ldr	x1, #0x358ec ; Objc selector ref: nextObject
00000000000414e0	bl	0x55ca8 ; Objc message: -[x0 nextObject]
00000000000414e4	cbnz	x0, 0x41464
00000000000414e8	str	xzr, [sp, #0x28]
00000000000414ec	adrp	x20, 57 ; 0x7a000
00000000000414f0	add	x20, x20, #0x4e0
00000000000414f4	ldr	x24, [x20]
00000000000414f8	mov	x0, x20
00000000000414fc	blr	x24
0000000000041500	ldr	x8, [x0]
0000000000041504	ldr	x9, [x8, #0x110]
0000000000041508	add	x10, sp, #0x28
000000000004150c	str	x10, [x8, #0x110]
0000000000041510	mov	x8, #0x300000000
0000000000041514	stp	x9, x8, [sp, #0x30]
0000000000041518	adr	x23, #0x52ff1
000000000004151c	nop
0000000000041520	ldarb	w8, [x23]
0000000000041524	tbz	w8, #0x0, 0x4152c
0000000000041528	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004152c	movi.16b	v0, #0x0
0000000000041530	stp	q0, q0, [sp, #0x40]
0000000000041534	str	xzr, [sp, #0x60]
0000000000041538	mov	x0, x20
000000000004153c	blr	x24
0000000000041540	ldr	x8, [x0]
0000000000041544	ldr	x9, [x8, #0x110]
0000000000041548	add	x10, sp, #0x40
000000000004154c	str	x10, [x8, #0x110]
0000000000041550	mov	x8, #0x500000000
0000000000041554	stp	x9, x8, [sp, #0x48]
0000000000041558	adr	x25, #0x53038
000000000004155c	nop
0000000000041560	ldar	x21, [x25]
0000000000041564	cmp	x21, #0x2
0000000000041568	b.hs	0x419b4
000000000004156c	mov	x0, x20
0000000000041570	blr	x24
0000000000041574	ldr	x26, [x0]
0000000000041578	ldp	x8, x9, [x26, #0x120]
000000000004157c	cmp	x8, x9
0000000000041580	b.eq	0x415a0
0000000000041584	mov	x10, x9
0000000000041588	ldr	x11, [x10, #-0x10]!
000000000004158c	cmp	x11, x25
0000000000041590	b.eq	0x417d4
0000000000041594	mov	x9, x10
0000000000041598	cmp	x10, x8
000000000004159c	b.ne	0x41588
00000000000415a0	add	x22, x26, #0x120
00000000000415a4	add	x0, x26, #0x138
00000000000415a8	mov	w9, #0x1
00000000000415ac	ldaxr	w8, [x0]
00000000000415b0	stlxr	w10, w9, [x0]
00000000000415b4	cbnz	w10, 0x415ac
00000000000415b8	b	0x415c8
00000000000415bc	mov	w27, #0x1
00000000000415c0	stlxr	w9, x27, [x25]
00000000000415c4	cbz	w9, 0x415d8
00000000000415c8	ldaxr	x21, [x25]
00000000000415cc	cbz	x21, 0x415bc
00000000000415d0	mov	w27, #0x0
00000000000415d4	clrex
00000000000415d8	cmp	x21, #0x1
00000000000415dc	b.eq	0x415c8
00000000000415e0	cbz	x26, 0x41608
00000000000415e4	ldaxr	w9, [x0]
00000000000415e8	stlxr	w10, w8, [x0]
00000000000415ec	cbnz	w10, 0x415e4
00000000000415f0	cbnz	w8, 0x41608
00000000000415f4	cmp	w9, #0x1
00000000000415f8	b.ne	0x41608
00000000000415fc	ldarb	w8, [x23]
0000000000041600	tbz	w8, #0x0, 0x41608
0000000000041604	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000041608	tbz	w27, #0x0, 0x417cc
000000000004160c	ldr	x8, [x26, #0x118]
0000000000041610	add	x0, x8, #0x70
0000000000041614	mov	w1, #0x20
0000000000041618	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004161c	mov	x21, x0
0000000000041620	adr	x8, #0x23a30
0000000000041624	nop
0000000000041628	str	x8, [x21, #0x10]!
000000000004162c	stur	xzr, [x21, #-0x8]
0000000000041630	str	x21, [sp, #0x58]
0000000000041634	ldp	x9, x8, [x26, #0x128]
0000000000041638	cmp	x9, x8
000000000004163c	b.hs	0x418e0
0000000000041640	stp	x25, x21, [x9]
0000000000041644	add	x8, x9, #0x10
0000000000041648	str	x8, [x26, #0x128]
000000000004164c	b	0x41968
0000000000041650	mov	x21, #0x0
0000000000041654	str	xzr, [sp, #0x20]
0000000000041658	str	xzr, [sp, #0x28]
000000000004165c	mov	x0, x20
0000000000041660	blr	x24
0000000000041664	ldr	x8, [x0]
0000000000041668	ldr	x9, [x8, #0x110]
000000000004166c	add	x10, sp, #0x28
0000000000041670	str	x10, [x8, #0x110]
0000000000041674	mov	x8, #0x300000000
0000000000041678	stp	x9, x8, [sp, #0x30]
000000000004167c	adr	x23, #0x52e8d
0000000000041680	nop
0000000000041684	ldarb	w8, [x23]
0000000000041688	tbz	w8, #0x0, 0x41690
000000000004168c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000041690	movi.16b	v0, #0x0
0000000000041694	stp	q0, q0, [sp, #0x40]
0000000000041698	str	xzr, [sp, #0x60]
000000000004169c	mov	x0, x20
00000000000416a0	blr	x24
00000000000416a4	ldr	x8, [x0]
00000000000416a8	ldr	x9, [x8, #0x110]
00000000000416ac	add	x10, sp, #0x40
00000000000416b0	str	x10, [x8, #0x110]
00000000000416b4	mov	x8, #0x500000000
00000000000416b8	stp	x9, x8, [sp, #0x48]
00000000000416bc	str	x21, [x19, #0x10]
00000000000416c0	adr	x25, #0x52ed0
00000000000416c4	nop
00000000000416c8	ldar	x21, [x25]
00000000000416cc	cmp	x21, #0x2
00000000000416d0	b.hs	0x418b4
00000000000416d4	mov	x0, x20
00000000000416d8	blr	x24
00000000000416dc	ldr	x26, [x0]
00000000000416e0	ldp	x8, x9, [x26, #0x120]
00000000000416e4	cmp	x8, x9
00000000000416e8	b.eq	0x41708
00000000000416ec	mov	x10, x9
00000000000416f0	ldr	x11, [x10, #-0x10]!
00000000000416f4	cmp	x11, x25
00000000000416f8	b.eq	0x417c0
00000000000416fc	mov	x9, x10
0000000000041700	cmp	x10, x8
0000000000041704	b.ne	0x416f0
0000000000041708	add	x22, x26, #0x120
000000000004170c	add	x0, x26, #0x138
0000000000041710	mov	w9, #0x1
0000000000041714	ldaxr	w8, [x0]
0000000000041718	stlxr	w10, w9, [x0]
000000000004171c	cbnz	w10, 0x41714
0000000000041720	b	0x41730
0000000000041724	mov	w27, #0x1
0000000000041728	stlxr	w9, x27, [x25]
000000000004172c	cbz	w9, 0x41740
0000000000041730	ldaxr	x21, [x25]
0000000000041734	cbz	x21, 0x41724
0000000000041738	mov	w27, #0x0
000000000004173c	clrex
0000000000041740	cmp	x21, #0x1
0000000000041744	b.eq	0x41730
0000000000041748	cbz	x26, 0x41770
000000000004174c	ldaxr	w9, [x0]
0000000000041750	stlxr	w10, w8, [x0]
0000000000041754	cbnz	w10, 0x4174c
0000000000041758	cbnz	w8, 0x41770
000000000004175c	cmp	w9, #0x1
0000000000041760	b.ne	0x41770
0000000000041764	ldarb	w8, [x23]
0000000000041768	tbz	w8, #0x0, 0x41770
000000000004176c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000041770	tbz	w27, #0x0, 0x417b8
0000000000041774	ldr	x8, [x26, #0x118]
0000000000041778	add	x0, x8, #0x70
000000000004177c	mov	w1, #0x20
0000000000041780	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000041784	mov	x21, x0
0000000000041788	adr	x8, #0x238c8
000000000004178c	nop
0000000000041790	str	x8, [x21, #0x10]!
0000000000041794	stur	xzr, [x21, #-0x8]
0000000000041798	str	x21, [sp, #0x58]
000000000004179c	ldp	x9, x8, [x26, #0x128]
00000000000417a0	cmp	x9, x8
00000000000417a4	b.hs	0x417e0
00000000000417a8	stp	x25, x21, [x9]
00000000000417ac	add	x8, x9, #0x10
00000000000417b0	str	x8, [x26, #0x128]
00000000000417b4	b	0x41868
00000000000417b8	str	x21, [sp, #0x58]
00000000000417bc	b	0x418b4
00000000000417c0	ldur	x21, [x9, #-0x8]
00000000000417c4	str	x21, [sp, #0x58]
00000000000417c8	b	0x418b4
00000000000417cc	str	x21, [sp, #0x58]
00000000000417d0	b	0x419b4
00000000000417d4	ldur	x21, [x9, #-0x8]
00000000000417d8	str	x21, [sp, #0x58]
00000000000417dc	b	0x419b4
00000000000417e0	ldr	x10, [x22]
00000000000417e4	sub	x9, x9, x10
00000000000417e8	asr	x27, x9, #4
00000000000417ec	add	x9, x27, #0x1
00000000000417f0	lsr	x11, x9, #60
00000000000417f4	cbnz	x11, 0x41a0c
00000000000417f8	sub	x8, x8, x10
00000000000417fc	asr	x10, x8, #3
0000000000041800	cmp	x10, x9
0000000000041804	csel	x9, x9, x10, lo
0000000000041808	mov	x10, #0x7ffffffffffffff
000000000004180c	cmp	x10, x8, asr #4
0000000000041810	mov	x8, #0xfffffffffffffff
0000000000041814	csel	x23, x9, x8, hi
0000000000041818	mov	x0, x23
000000000004181c	mov	w1, #0x10
0000000000041820	bl	0x55aec ; symbol stub for: _calloc
0000000000041824	add	x8, x0, x27, lsl #4
0000000000041828	add	x27, x0, x23, lsl #4
000000000004182c	stp	x25, x21, [x8]
0000000000041830	add	x28, x8, #0x10
0000000000041834	ldp	x1, x9, [x26, #0x120]
0000000000041838	sub	x2, x9, x1
000000000004183c	sub	x23, x8, x2
0000000000041840	cmp	x2, #0x1
0000000000041844	b.lt	0x41854
0000000000041848	mov	x0, x23
000000000004184c	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000041850	ldr	x1, [x22]
0000000000041854	stp	x23, x28, [x26, #0x120]
0000000000041858	str	x27, [x26, #0x130]
000000000004185c	cbz	x1, 0x41868
0000000000041860	mov	x0, x1
0000000000041864	bl	0x55b7c ; symbol stub for: _free
0000000000041868	mov	x0, x21
000000000004186c	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
0000000000041870	mov	w0, #0x1
0000000000041874	mov	w1, #0x28
0000000000041878	bl	0x55aec ; symbol stub for: _calloc
000000000004187c	ldr	x8, [x26, #0x18]!
0000000000041880	sub	x9, x26, #0x8
0000000000041884	stp	x25, x9, [x0, #0x10]
0000000000041888	stp	x8, x26, [x0]
000000000004188c	str	x0, [x8, #0x8]
0000000000041890	str	x0, [x26]
0000000000041894	ldr	x8, [x26, #0x10]
0000000000041898	add	x8, x8, #0x1
000000000004189c	str	x8, [x26, #0x10]
00000000000418a0	str	x0, [x0, #0x20]
00000000000418a4	stlr	x21, [x25]
00000000000418a8	ldr	x8, [x26, #0x110]
00000000000418ac	sub	x8, x8, #0x10
00000000000418b0	str	x8, [x26, #0x110]
00000000000418b4	ldr	x8, [x21, #0x8]
00000000000418b8	ldr	w9, [x8, #0x8]
00000000000418bc	cmp	w9, #0x3
00000000000418c0	b.ls	0x419fc
00000000000418c4	ldr	x8, [x8, #0x28]
00000000000418c8	str	x8, [x19, #0x8]
00000000000418cc	mov	x0, x20
00000000000418d0	blr	x24
00000000000418d4	ldr	x8, [x0]
00000000000418d8	ldr	x9, [sp, #0x10]
00000000000418dc	b	0x419d8
00000000000418e0	ldr	x10, [x22]
00000000000418e4	sub	x9, x9, x10
00000000000418e8	asr	x27, x9, #4
00000000000418ec	add	x9, x27, #0x1
00000000000418f0	lsr	x11, x9, #60
00000000000418f4	cbnz	x11, 0x41a18
00000000000418f8	sub	x8, x8, x10
00000000000418fc	asr	x10, x8, #3
0000000000041900	cmp	x10, x9
0000000000041904	csel	x9, x9, x10, lo
0000000000041908	mov	x10, #0x7ffffffffffffff
000000000004190c	cmp	x10, x8, asr #4
0000000000041910	mov	x8, #0xfffffffffffffff
0000000000041914	csel	x23, x9, x8, hi
0000000000041918	mov	x0, x23
000000000004191c	mov	w1, #0x10
0000000000041920	bl	0x55aec ; symbol stub for: _calloc
0000000000041924	add	x8, x0, x27, lsl #4
0000000000041928	add	x27, x0, x23, lsl #4
000000000004192c	stp	x25, x21, [x8]
0000000000041930	add	x28, x8, #0x10
0000000000041934	ldp	x1, x9, [x26, #0x120]
0000000000041938	sub	x2, x9, x1
000000000004193c	sub	x23, x8, x2
0000000000041940	cmp	x2, #0x1
0000000000041944	b.lt	0x41954
0000000000041948	mov	x0, x23
000000000004194c	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000041950	ldr	x1, [x22]
0000000000041954	stp	x23, x28, [x26, #0x120]
0000000000041958	str	x27, [x26, #0x130]
000000000004195c	cbz	x1, 0x41968
0000000000041960	mov	x0, x1
0000000000041964	bl	0x55b7c ; symbol stub for: _free
0000000000041968	mov	x0, x21
000000000004196c	bl	"_kfun:kotlin.collections.State.$OBJECT.<init>#internal"
0000000000041970	mov	w0, #0x1
0000000000041974	mov	w1, #0x28
0000000000041978	bl	0x55aec ; symbol stub for: _calloc
000000000004197c	ldr	x8, [x26, #0x18]!
0000000000041980	sub	x9, x26, #0x8
0000000000041984	stp	x25, x9, [x0, #0x10]
0000000000041988	stp	x8, x26, [x0]
000000000004198c	str	x0, [x8, #0x8]
0000000000041990	str	x0, [x26]
0000000000041994	ldr	x8, [x26, #0x10]
0000000000041998	add	x8, x8, #0x1
000000000004199c	str	x8, [x26, #0x10]
00000000000419a0	str	x0, [x0, #0x20]
00000000000419a4	stlr	x21, [x25]
00000000000419a8	ldr	x8, [x26, #0x110]
00000000000419ac	sub	x8, x8, #0x10
00000000000419b0	str	x8, [x26, #0x110]
00000000000419b4	ldr	x8, [x21, #0x8]
00000000000419b8	ldr	w9, [x8, #0x8]
00000000000419bc	cbz	w9, 0x41a04
00000000000419c0	ldr	x8, [x8, #0x10]
00000000000419c4	str	x8, [x19, #0x8]
00000000000419c8	mov	x0, x20
00000000000419cc	blr	x24
00000000000419d0	ldr	x8, [x0]
00000000000419d4	ldr	x9, [sp, #0x30]
00000000000419d8	str	x9, [x8, #0x110]
00000000000419dc	ldp	x29, x30, [sp, #0xc0]
00000000000419e0	ldp	x20, x19, [sp, #0xb0]
00000000000419e4	ldp	x22, x21, [sp, #0xa0]
00000000000419e8	ldp	x24, x23, [sp, #0x90]
00000000000419ec	ldp	x26, x25, [sp, #0x80]
00000000000419f0	ldp	x28, x27, [sp, #0x70]
00000000000419f4	add	sp, sp, #0xd0
00000000000419f8	ret
00000000000419fc	bl	_ThrowArrayIndexOutOfBoundsException
0000000000041a00	b	0x41a6c
0000000000041a04	bl	_ThrowArrayIndexOutOfBoundsException
0000000000041a08	b	0x41a6c
0000000000041a0c	mov	x0, x22
0000000000041a10	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000041a14	b	0x41a6c
0000000000041a18	mov	x0, x22
0000000000041a1c	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000041a20	b	0x41a6c
0000000000041a24	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000041a28	str	xzr, [sp, #0x58]
0000000000041a2c	stlr	xzr, [x25]
0000000000041a30	ldr	x8, [x26, #0x128]
0000000000041a34	sub	x8, x8, #0x10
0000000000041a38	str	x8, [x26, #0x128]
0000000000041a3c	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
0000000000041a40	b	0x41a6c
0000000000041a44	mov	x19, x0
0000000000041a48	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
0000000000041a4c	b	0x41a80
0000000000041a50	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000041a54	str	xzr, [sp, #0x58]
0000000000041a58	stlr	xzr, [x25]
0000000000041a5c	ldr	x8, [x26, #0x128]
0000000000041a60	sub	x8, x8, #0x10
0000000000041a64	str	x8, [x26, #0x128]
0000000000041a68	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
0000000000041a6c	brk	#0x1
0000000000041a70	mov	x19, x0
0000000000041a74	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
0000000000041a78	b	0x41a98
0000000000041a7c	mov	x19, x0
0000000000041a80	mov	x0, x20
0000000000041a84	blr	x24
0000000000041a88	ldr	x8, [x0]
0000000000041a8c	ldr	x9, [sp, #0x30]
0000000000041a90	b	0x41ac4
0000000000041a94	mov	x19, x0
0000000000041a98	mov	x0, x20
0000000000041a9c	blr	x24
0000000000041aa0	ldr	x8, [x0]
0000000000041aa4	ldr	x9, [sp, #0x30]
0000000000041aa8	str	x9, [x8, #0x110]
0000000000041aac	b	0x41ac0
0000000000041ab0	mov	x19, x0
0000000000041ab4	mov	x0, x20
0000000000041ab8	blr	x24
0000000000041abc	ldr	x8, [x0]
0000000000041ac0	ldr	x9, [sp, #0x10]
0000000000041ac4	str	x9, [x8, #0x110]
0000000000041ac8	mov	x0, x19
0000000000041acc	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_NSSetAsKSet_iterator:
0000000000041ad0	stp	x20, x19, [sp, #-0x20]!
0000000000041ad4	stp	x29, x30, [sp, #0x10]
0000000000041ad8	add	x29, sp, #0x10
0000000000041adc	mov	x19, x1
0000000000041ae0	ldar	x8, [x0]
0000000000041ae4	and	x8, x8, #0xfffffffffffffffc
0000000000041ae8	ldr	x9, [x8]
0000000000041aec	cmp	x8, #0x0
0000000000041af0	ccmp	x9, x8, #0x4, ne
0000000000041af4	b.ne	0x41b00
0000000000041af8	mov	x0, #0x0
0000000000041afc	b	0x41b08
0000000000041b00	add	x8, x8, #0x10
0000000000041b04	ldar	x0, [x8]
0000000000041b08	nop
0000000000041b0c	ldr	x1, #0x352e4 ; Objc selector ref: objectEnumerator
0000000000041b10	bl	0x55ca8 ; Objc message: -[x0 objectEnumerator]
0000000000041b14	bl	0x55cd8 ; symbol stub for: _objc_retain
0000000000041b18	mov	x20, x0
0000000000041b1c	bl	_Kotlin_initRuntimeIfNeeded
0000000000041b20	mov	x0, x19
0000000000041b24	bl	_Kotlin_NSEnumeratorAsKIterator_create
0000000000041b28	mov	x19, x0
0000000000041b2c	ldar	x8, [x0]
0000000000041b30	and	x8, x8, #0xfffffffffffffffc
0000000000041b34	ldr	x9, [x8]
0000000000041b38	cmp	x9, x8
0000000000041b3c	csel	x0, xzr, x8, eq
0000000000041b40	cbz	x0, 0x41b5c
0000000000041b44	add	x8, x0, #0x10
0000000000041b48	stlr	x20, [x8]
0000000000041b4c	mov	x0, x19
0000000000041b50	ldp	x29, x30, [sp, #0x10]
0000000000041b54	ldp	x20, x19, [sp], #0x20
0000000000041b58	ret
0000000000041b5c	mov	x0, x19
0000000000041b60	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000041b64	add	x8, x0, #0x10
0000000000041b68	stlr	x20, [x8]
0000000000041b6c	mov	x0, x19
0000000000041b70	ldp	x29, x30, [sp, #0x10]
0000000000041b74	ldp	x20, x19, [sp], #0x20
0000000000041b78	ret
_Kotlin_NSDictionaryAsKMap_keyIterator:
0000000000041b7c	stp	x20, x19, [sp, #-0x20]!
0000000000041b80	stp	x29, x30, [sp, #0x10]
0000000000041b84	add	x29, sp, #0x10
0000000000041b88	mov	x19, x1
0000000000041b8c	ldar	x8, [x0]
0000000000041b90	and	x8, x8, #0xfffffffffffffffc
0000000000041b94	ldr	x9, [x8]
0000000000041b98	cmp	x8, #0x0
0000000000041b9c	ccmp	x9, x8, #0x4, ne
0000000000041ba0	b.ne	0x41bac
0000000000041ba4	mov	x0, #0x0
0000000000041ba8	b	0x41bb4
0000000000041bac	add	x8, x8, #0x10
0000000000041bb0	ldar	x0, [x8]
0000000000041bb4	nop
0000000000041bb8	ldr	x1, #0x351c8 ; Objc selector ref: keyEnumerator
0000000000041bbc	bl	0x55ca8 ; Objc message: -[x0 keyEnumerator]
0000000000041bc0	bl	0x55cd8 ; symbol stub for: _objc_retain
0000000000041bc4	mov	x20, x0
0000000000041bc8	bl	_Kotlin_initRuntimeIfNeeded
0000000000041bcc	mov	x0, x19
0000000000041bd0	bl	_Kotlin_NSEnumeratorAsKIterator_create
0000000000041bd4	mov	x19, x0
0000000000041bd8	ldar	x8, [x0]
0000000000041bdc	and	x8, x8, #0xfffffffffffffffc
0000000000041be0	ldr	x9, [x8]
0000000000041be4	cmp	x9, x8
0000000000041be8	csel	x0, xzr, x8, eq
0000000000041bec	cbz	x0, 0x41c08
0000000000041bf0	add	x8, x0, #0x10
0000000000041bf4	stlr	x20, [x8]
0000000000041bf8	mov	x0, x19
0000000000041bfc	ldp	x29, x30, [sp, #0x10]
0000000000041c00	ldp	x20, x19, [sp], #0x20
0000000000041c04	ret
0000000000041c08	mov	x0, x19
0000000000041c0c	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000041c10	add	x8, x0, #0x10
0000000000041c14	stlr	x20, [x8]
0000000000041c18	mov	x0, x19
0000000000041c1c	ldp	x29, x30, [sp, #0x10]
0000000000041c20	ldp	x20, x19, [sp], #0x20
0000000000041c24	ret
_Kotlin_NSDictionaryAsKMap_valueIterator:
0000000000041c28	stp	x20, x19, [sp, #-0x20]!
0000000000041c2c	stp	x29, x30, [sp, #0x10]
0000000000041c30	add	x29, sp, #0x10
0000000000041c34	mov	x19, x1
0000000000041c38	ldar	x8, [x0]
0000000000041c3c	and	x8, x8, #0xfffffffffffffffc
0000000000041c40	ldr	x9, [x8]
0000000000041c44	cmp	x8, #0x0
0000000000041c48	ccmp	x9, x8, #0x4, ne
0000000000041c4c	b.ne	0x41c58
0000000000041c50	mov	x0, #0x0
0000000000041c54	b	0x41c60
0000000000041c58	add	x8, x8, #0x10
0000000000041c5c	ldar	x0, [x8]
0000000000041c60	nop
0000000000041c64	ldr	x1, #0x3518c ; Objc selector ref: objectEnumerator
0000000000041c68	bl	0x55ca8 ; Objc message: -[x0 objectEnumerator]
0000000000041c6c	bl	0x55cd8 ; symbol stub for: _objc_retain
0000000000041c70	mov	x20, x0
0000000000041c74	bl	_Kotlin_initRuntimeIfNeeded
0000000000041c78	mov	x0, x19
0000000000041c7c	bl	_Kotlin_NSEnumeratorAsKIterator_create
0000000000041c80	mov	x19, x0
0000000000041c84	ldar	x8, [x0]
0000000000041c88	and	x8, x8, #0xfffffffffffffffc
0000000000041c8c	ldr	x9, [x8]
0000000000041c90	cmp	x9, x8
0000000000041c94	csel	x0, xzr, x8, eq
0000000000041c98	cbz	x0, 0x41cb4
0000000000041c9c	add	x8, x0, #0x10
0000000000041ca0	stlr	x20, [x8]
0000000000041ca4	mov	x0, x19
0000000000041ca8	ldp	x29, x30, [sp, #0x10]
0000000000041cac	ldp	x20, x19, [sp], #0x20
0000000000041cb0	ret
0000000000041cb4	mov	x0, x19
0000000000041cb8	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000041cbc	add	x8, x0, #0x10
0000000000041cc0	stlr	x20, [x8]
0000000000041cc4	mov	x0, x19
0000000000041cc8	ldp	x29, x30, [sp, #0x10]
0000000000041ccc	ldp	x20, x19, [sp], #0x20
0000000000041cd0	ret
__ZN5konan13consolePrintfEPKcz:
0000000000041cd4	stp	x28, x27, [sp, #-0x20]!
0000000000041cd8	stp	x29, x30, [sp, #0x10]
0000000000041cdc	add	x29, sp, #0x10
0000000000041ce0	sub	sp, sp, #0x410
0000000000041ce4	mov	x2, x0
0000000000041ce8	add	x8, x29, #0x10
0000000000041cec	str	x8, [sp, #0x8]
0000000000041cf0	add	x0, sp, #0x10
0000000000041cf4	add	x3, x29, #0x10
0000000000041cf8	mov	w1, #0x400
0000000000041cfc	bl	0x55edc ; symbol stub for: _vsnprintf
0000000000041d00	tbnz	w0, #0x1f, 0x41d1c
0000000000041d04	cmp	w0, #0x3ff
0000000000041d08	mov	w8, #0x3ff
0000000000041d0c	csel	w2, w0, w8, lo
0000000000041d10	add	x1, sp, #0x10
0000000000041d14	mov	w0, #0x1
0000000000041d18	bl	0x55ee8 ; symbol stub for: _write
0000000000041d1c	add	sp, sp, #0x410
0000000000041d20	ldp	x29, x30, [sp, #0x10]
0000000000041d24	ldp	x28, x27, [sp], #0x20
0000000000041d28	ret
__ZN5konan13consoleErrorfEPKcz:
0000000000041d2c	stp	x28, x27, [sp, #-0x20]!
0000000000041d30	stp	x29, x30, [sp, #0x10]
0000000000041d34	add	x29, sp, #0x10
0000000000041d38	sub	sp, sp, #0x410
0000000000041d3c	mov	x2, x0
0000000000041d40	add	x8, x29, #0x10
0000000000041d44	str	x8, [sp, #0x8]
0000000000041d48	add	x0, sp, #0x10
0000000000041d4c	add	x3, x29, #0x10
0000000000041d50	mov	w1, #0x400
0000000000041d54	bl	0x55edc ; symbol stub for: _vsnprintf
0000000000041d58	tbnz	w0, #0x1f, 0x41d74
0000000000041d5c	cmp	w0, #0x3ff
0000000000041d60	mov	w8, #0x3ff
0000000000041d64	csel	w2, w0, w8, lo
0000000000041d68	add	x1, sp, #0x10
0000000000041d6c	mov	w0, #0x2
0000000000041d70	bl	0x55ee8 ; symbol stub for: _write
0000000000041d74	add	sp, sp, #0x410
0000000000041d78	ldp	x29, x30, [sp, #0x10]
0000000000041d7c	ldp	x28, x27, [sp], #0x20
0000000000041d80	ret
__ZN5konan15currentThreadIdEv:
0000000000041d84	sub	sp, sp, #0x20
0000000000041d88	stp	x29, x30, [sp, #0x10]
0000000000041d8c	add	x29, sp, #0x10
0000000000041d90	bl	0x55dec ; symbol stub for: _pthread_self
0000000000041d94	add	x1, sp, #0x8
0000000000041d98	bl	0x55e10 ; symbol stub for: _pthread_threadid_np
0000000000041d9c	cbnz	w0, 0x41db8
0000000000041da0	ldr	w8, [sp, #0xc]
0000000000041da4	cbnz	w8, 0x41dc8
0000000000041da8	ldr	w0, [sp, #0x8]
0000000000041dac	ldp	x29, x30, [sp, #0x10]
0000000000041db0	add	sp, sp, #0x20
0000000000041db4	ret
0000000000041db8	adr	x2, #0x1b36d ; literal pool for: "Error getting thread id"
0000000000041dbc	nop
0000000000041dc0	mov	w0, #0x0
0000000000041dc4	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
0000000000041dc8	adr	x2, #0x1b375 ; literal pool for: "Thread id is not a uint32"
0000000000041dcc	nop
0000000000041dd0	mov	w0, #0x0
0000000000041dd4	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z:
0000000000041dd8	sub	sp, sp, #0x20
0000000000041ddc	stp	x29, x30, [sp, #0x10]
0000000000041de0	add	x29, sp, #0x10
0000000000041de4	mov	x0, x2
0000000000041de8	add	x8, x29, #0x10
0000000000041dec	str	x8, [sp, #0x8]
0000000000041df0	add	x1, x29, #0x10
0000000000041df4	bl	__ZN12_GLOBAL__N_111PrintAssertEbPKcS1_Pc
0000000000041df8	bl	__ZN5konan5abortEv
__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE6appendEPKcm:
0000000000041dfc	stp	x28, x27, [sp, #-0x60]!
0000000000041e00	stp	x26, x25, [sp, #0x10]
0000000000041e04	stp	x24, x23, [sp, #0x20]
0000000000041e08	stp	x22, x21, [sp, #0x30]
0000000000041e0c	stp	x20, x19, [sp, #0x40]
0000000000041e10	stp	x29, x30, [sp, #0x50]
0000000000041e14	add	x29, sp, #0x50
0000000000041e18	mov	x20, x2
0000000000041e1c	mov	x21, x1
0000000000041e20	mov	x19, x0
0000000000041e24	ldrsb	w9, [x0, #0x17]
0000000000041e28	and	x8, x9, #0xff
0000000000041e2c	tbnz	w9, #0x1f, 0x41eac
0000000000041e30	mov	w26, #0x16
0000000000041e34	mov	x22, x8
0000000000041e38	sub	x9, x26, x22
0000000000041e3c	cmp	x9, x20
0000000000041e40	b.hs	0x41ec4
0000000000041e44	add	x27, x22, x20
0000000000041e48	sub	x9, x27, x26
0000000000041e4c	mov	x10, #-0x12
0000000000041e50	sub	x10, x10, x26
0000000000041e54	cmp	x10, x9
0000000000041e58	b.lo	0x41f98
0000000000041e5c	tbnz	w8, #0x7, 0x41ed4
0000000000041e60	mov	x23, x19
0000000000041e64	mov	x8, #-0x1a
0000000000041e68	movk	x8, #0x7fff, lsl #48
0000000000041e6c	cmp	x26, x8
0000000000041e70	b.hi	0x41ee8
0000000000041e74	lsl	x8, x26, #1
0000000000041e78	cmp	x27, x8
0000000000041e7c	csel	x8, x8, x27, lo
0000000000041e80	add	x9, x8, #0x10
0000000000041e84	and	x9, x9, #0xfffffffffffffff0
0000000000041e88	cmp	x8, #0x17
0000000000041e8c	mov	w8, #0x17
0000000000041e90	csel	x24, x8, x9, lo
0000000000041e94	mov	x0, x24
0000000000041e98	mov	w1, #0x1
0000000000041e9c	bl	0x55aec ; symbol stub for: _calloc
0000000000041ea0	mov	x25, x0
0000000000041ea4	cbnz	x22, 0x41f00
0000000000041ea8	b	0x41f10
0000000000041eac	ldp	x22, x9, [x19, #0x8]
0000000000041eb0	and	x9, x9, #0x7fffffffffffffff
0000000000041eb4	sub	x26, x9, #0x1
0000000000041eb8	sub	x9, x26, x22
0000000000041ebc	cmp	x9, x20
0000000000041ec0	b.lo	0x41e44
0000000000041ec4	cbz	x20, 0x41f78
0000000000041ec8	tbnz	w8, #0x7, 0x41f44
0000000000041ecc	mov	x23, x19
0000000000041ed0	b	0x41f48
0000000000041ed4	ldr	x23, [x19]
0000000000041ed8	mov	x8, #-0x1a
0000000000041edc	movk	x8, #0x7fff, lsl #48
0000000000041ee0	cmp	x26, x8
0000000000041ee4	b.ls	0x41e74
0000000000041ee8	mov	x24, #-0x11
0000000000041eec	mov	x0, x24
0000000000041ef0	mov	w1, #0x1
0000000000041ef4	bl	0x55aec ; symbol stub for: _calloc
0000000000041ef8	mov	x25, x0
0000000000041efc	cbz	x22, 0x41f10
0000000000041f00	mov	x0, x25
0000000000041f04	mov	x1, x23
0000000000041f08	mov	x2, x22
0000000000041f0c	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000041f10	add	x0, x25, x22
0000000000041f14	mov	x1, x21
0000000000041f18	mov	x2, x20
0000000000041f1c	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000041f20	cmp	x26, #0x16
0000000000041f24	b.eq	0x41f30
0000000000041f28	mov	x0, x23
0000000000041f2c	bl	0x55b7c ; symbol stub for: _free
0000000000041f30	orr	x8, x24, #0x8000000000000000
0000000000041f34	stp	x27, x8, [x19, #0x8]
0000000000041f38	str	x25, [x19]
0000000000041f3c	add	x8, x25, x27
0000000000041f40	b	0x41f74
0000000000041f44	ldr	x23, [x19]
0000000000041f48	add	x0, x23, x22
0000000000041f4c	mov	x1, x21
0000000000041f50	mov	x2, x20
0000000000041f54	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000041f58	add	x8, x22, x20
0000000000041f5c	ldrsb	w9, [x19, #0x17]
0000000000041f60	tbnz	w9, #0x1f, 0x41f6c
0000000000041f64	strb	w8, [x19, #0x17]
0000000000041f68	b	0x41f70
0000000000041f6c	str	x8, [x19, #0x8]
0000000000041f70	add	x8, x23, x8
0000000000041f74	strb	wzr, [x8]
0000000000041f78	mov	x0, x19
0000000000041f7c	ldp	x29, x30, [sp, #0x50]
0000000000041f80	ldp	x20, x19, [sp, #0x40]
0000000000041f84	ldp	x22, x21, [sp, #0x30]
0000000000041f88	ldp	x24, x23, [sp, #0x20]
0000000000041f8c	ldp	x26, x25, [sp, #0x10]
0000000000041f90	ldp	x28, x27, [sp], #0x60
0000000000041f94	ret
0000000000041f98	mov	x0, x19
0000000000041f9c	bl	0x558c4 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ZN12_GLOBAL__N_111PrintAssertEbPKcS1_Pc:
0000000000041fa0	stp	x24, x23, [sp, #-0x40]!
0000000000041fa4	stp	x22, x21, [sp, #0x10]
0000000000041fa8	stp	x20, x19, [sp, #0x20]
0000000000041fac	stp	x29, x30, [sp, #0x30]
0000000000041fb0	add	x29, sp, #0x30
0000000000041fb4	sub	sp, sp, #0x400
0000000000041fb8	mov	x20, x1
0000000000041fbc	mov	x21, x0
0000000000041fc0	adr	x2, #0x1b124 ; literal pool for: "runtime assert: "
0000000000041fc4	nop
0000000000041fc8	mov	w22, #0x400
0000000000041fcc	mov	x0, sp
0000000000041fd0	mov	w1, #0x400
0000000000041fd4	bl	__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz
0000000000041fd8	mov	x19, x1
0000000000041fdc	cbz	x1, 0x42018
0000000000041fe0	subs	x23, x19, #0x1
0000000000041fe4	b.ne	0x41ff0
0000000000041fe8	strb	wzr, [x0]
0000000000041fec	b	0x42018
0000000000041ff0	mov	x1, x19
0000000000041ff4	mov	x2, x21
0000000000041ff8	mov	x3, x20
0000000000041ffc	bl	0x55edc ; symbol stub for: _vsnprintf
0000000000042000	mov	w8, w0
0000000000042004	cmp	x23, x8
0000000000042008	csel	x8, x23, x8, lo
000000000004200c	sub	x8, x19, x8
0000000000042010	tst	w0, #0x80000000
0000000000042014	csel	x19, x19, x8, ne
0000000000042018	sub	w2, w22, w19
000000000004201c	mov	x1, sp
0000000000042020	mov	w0, #0x2
0000000000042024	bl	0x55ee8 ; symbol stub for: _write
0000000000042028	adr	x0, #0x1b476 ; literal pool for: "\n"
000000000004202c	nop
0000000000042030	bl	__ZN5konan13consoleErrorfEPKcz
0000000000042034	add	sp, sp, #0x400
0000000000042038	ldp	x29, x30, [sp, #0x30]
000000000004203c	ldp	x20, x19, [sp, #0x20]
0000000000042040	ldp	x22, x21, [sp, #0x10]
0000000000042044	ldp	x24, x23, [sp], #0x40
0000000000042048	ret
000000000004204c	bl	___clang_call_terminate
__ZN5konan5abortEv:
0000000000042050	stp	x29, x30, [sp, #-0x10]!
0000000000042054	mov	x29, sp
0000000000042058	bl	0x55ab0 ; symbol stub for: _abort
__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz:
000000000004205c	sub	sp, sp, #0x40
0000000000042060	stp	x22, x21, [sp, #0x10]
0000000000042064	stp	x20, x19, [sp, #0x20]
0000000000042068	stp	x29, x30, [sp, #0x30]
000000000004206c	add	x29, sp, #0x30
0000000000042070	mov	x20, x1
0000000000042074	mov	x19, x0
0000000000042078	add	x8, x29, #0x10
000000000004207c	str	x8, [sp, #0x8]
0000000000042080	cbz	x1, 0x420bc
0000000000042084	subs	x21, x20, #0x1
0000000000042088	b.ne	0x42094
000000000004208c	strb	wzr, [x19]
0000000000042090	b	0x420bc
0000000000042094	ldr	x3, [sp, #0x8]
0000000000042098	mov	x0, x19
000000000004209c	mov	x1, x20
00000000000420a0	bl	0x55edc ; symbol stub for: _vsnprintf
00000000000420a4	tbnz	w0, #0x1f, 0x420bc
00000000000420a8	mov	w8, w0
00000000000420ac	cmp	x21, x8
00000000000420b0	csel	x8, x21, x8, lo
00000000000420b4	add	x19, x19, x8
00000000000420b8	sub	x20, x20, x8
00000000000420bc	mov	x0, x19
00000000000420c0	mov	x1, x20
00000000000420c4	ldp	x29, x30, [sp, #0x30]
00000000000420c8	ldp	x20, x19, [sp, #0x20]
00000000000420cc	ldp	x22, x21, [sp, #0x10]
00000000000420d0	add	sp, sp, #0x40
00000000000420d4	ret
__ZN6kotlin10StackTraceILm18446744073709551615EE7currentEm:
00000000000420d8	sub	sp, sp, #0x60
00000000000420dc	stp	x24, x23, [sp, #0x20]
00000000000420e0	stp	x22, x21, [sp, #0x30]
00000000000420e4	stp	x20, x19, [sp, #0x40]
00000000000420e8	stp	x29, x30, [sp, #0x50]
00000000000420ec	add	x29, sp, #0x50
00000000000420f0	mov	x19, x0
00000000000420f4	add	x0, sp, #0x8
00000000000420f8	bl	__ZN6kotlin8internal20GetCurrentStackTraceEm
00000000000420fc	stp	xzr, xzr, [x19]
0000000000042100	str	xzr, [x19, #0x10]
0000000000042104	ldp	x20, x8, [sp, #0x8]
0000000000042108	subs	x21, x8, x20
000000000004210c	b.eq	0x42158
0000000000042110	asr	x23, x21, #3
0000000000042114	lsr	x8, x23, #61
0000000000042118	cbnz	x8, 0x42194
000000000004211c	mov	x0, x23
0000000000042120	mov	w1, #0x8
0000000000042124	bl	0x55aec ; symbol stub for: _calloc
0000000000042128	mov	x22, x0
000000000004212c	stp	x0, x0, [x19]
0000000000042130	add	x8, x0, x23, lsl #3
0000000000042134	str	x8, [x19, #0x10]
0000000000042138	cmp	x21, #0x1
000000000004213c	b.lt	0x42154
0000000000042140	mov	x0, x22
0000000000042144	mov	x1, x20
0000000000042148	mov	x2, x21
000000000004214c	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000042150	add	x22, x22, x21
0000000000042154	str	x22, [x19, #0x8]
0000000000042158	cbz	x20, 0x4217c
000000000004215c	str	x20, [sp, #0x10]
0000000000042160	mov	x0, x20
0000000000042164	ldp	x29, x30, [sp, #0x50]
0000000000042168	ldp	x20, x19, [sp, #0x40]
000000000004216c	ldp	x22, x21, [sp, #0x30]
0000000000042170	ldp	x24, x23, [sp, #0x20]
0000000000042174	add	sp, sp, #0x60
0000000000042178	b	0x55b7c ; symbol stub for: _free
000000000004217c	ldp	x29, x30, [sp, #0x50]
0000000000042180	ldp	x20, x19, [sp, #0x40]
0000000000042184	ldp	x22, x21, [sp, #0x30]
0000000000042188	ldp	x24, x23, [sp, #0x20]
000000000004218c	add	sp, sp, #0x60
0000000000042190	ret
0000000000042194	mov	x0, x19
0000000000042198	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000004219c	brk	#0x1
00000000000421a0	mov	x20, x0
00000000000421a4	ldr	x0, [x19]
00000000000421a8	cbz	x0, 0x421b4
00000000000421ac	str	x0, [x19, #0x8]
00000000000421b0	bl	0x55b7c ; symbol stub for: _free
00000000000421b4	mov	x0, x20
00000000000421b8	bl	___clang_call_terminate
__ZL18snprintf_with_addrPcmmPKvbPKcz:
00000000000421bc	stp	x28, x27, [sp, #-0x60]!
00000000000421c0	stp	x26, x25, [sp, #0x10]
00000000000421c4	stp	x24, x23, [sp, #0x20]
00000000000421c8	stp	x22, x21, [sp, #0x30]
00000000000421cc	stp	x20, x19, [sp, #0x40]
00000000000421d0	stp	x29, x30, [sp, #0x50]
00000000000421d4	add	x29, sp, #0x50
00000000000421d8	sub	sp, sp, #0x290
00000000000421dc	mov	x19, x5
00000000000421e0	mov	x20, x4
00000000000421e4	mov	x23, x3
00000000000421e8	mov	x22, x2
00000000000421ec	mov	x21, x0
00000000000421f0	mov	w8, #0x7830
00000000000421f4	movk	w8, #0x30, lsl #16
00000000000421f8	str	w8, [sp, #0x5c]
00000000000421fc	movi.16b	v0, #0x0
0000000000042200	stp	q0, q0, [sp, #0x30]
0000000000042204	add	x1, sp, #0x30
0000000000042208	mov	x0, x3
000000000004220c	bl	0x55b58 ; symbol stub for: _dladdr
0000000000042210	ldr	x24, [sp, #0x30]
0000000000042214	cbz	x24, 0x42234
0000000000042218	mov	x0, x24
000000000004221c	mov	w1, #0x2f
0000000000042220	bl	0x55ea0 ; symbol stub for: _strrchr
0000000000042224	cmp	x0, #0x0
0000000000042228	csinc	x25, x24, x0, eq
000000000004222c	cbnz	x23, 0x42240
0000000000042230	b	0x422bc
0000000000042234	adr	x25, #0x1aec4 ; literal pool for: "???"
0000000000042238	nop
000000000004223c	cbz	x23, 0x422bc
0000000000042240	sub	x1, x29, #0x70
0000000000042244	mov	x0, x23
0000000000042248	bl	0x55b58 ; symbol stub for: _dladdr
000000000004224c	cbz	w0, 0x422bc
0000000000042250	ldur	x24, [x29, #-0x60]
0000000000042254	cbz	x24, 0x42264
0000000000042258	sub	x8, x29, #0x70
000000000004225c	add	x8, x8, #0x18
0000000000042260	b	0x42274
0000000000042264	ldur	x24, [x29, #-0x70]
0000000000042268	cbz	x24, 0x42294
000000000004226c	sub	x8, x29, #0x70
0000000000042270	add	x8, x8, #0x8
0000000000042274	ldr	x8, [x8]
0000000000042278	sub	x26, x23, x8
000000000004227c	add	x0, sp, #0x5c
0000000000042280	mov	x1, x24
0000000000042284	mov	w2, #0x200
0000000000042288	bl	0x55e94 ; symbol stub for: _strncpy
000000000004228c	strb	wzr, [sp, #0x25b]
0000000000042290	b	0x422c0
0000000000042294	sub	x24, x29, #0x84
0000000000042298	ldur	x8, [x29, #-0x58]
000000000004229c	str	x8, [sp]
00000000000422a0	adr	x2, #0x1ae82 ; literal pool for: "%p"
00000000000422a4	nop
00000000000422a8	sub	x0, x29, #0x84
00000000000422ac	mov	w1, #0x14
00000000000422b0	bl	__ZN5konan8snprintfEPcmPKcz
00000000000422b4	cmp	w0, #0x1
00000000000422b8	b.ge	0x42258
00000000000422bc	mov	x26, x23
00000000000422c0	add	x8, sp, #0x5c
00000000000422c4	stp	x8, x26, [sp, #0x18]
00000000000422c8	stp	x25, x23, [sp, #0x8]
00000000000422cc	str	x22, [sp]
00000000000422d0	adr	x2, #0x1ae2c ; literal pool for: "%-4zd%-35s %-18p %s + %td "
00000000000422d4	nop
00000000000422d8	mov	x0, x21
00000000000422dc	mov	w1, #0x3ff
00000000000422e0	bl	__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz
00000000000422e4	cbz	w20, 0x422f4
00000000000422e8	adr	x2, #0x1ae2f ; literal pool for: "[inlined] "
00000000000422ec	nop
00000000000422f0	bl	__ZN6kotlin12FormatToSpanENS_11std_support4spanIcLm18446744073709551615EEEPKcz
00000000000422f4	add	x8, x29, #0x10
00000000000422f8	stur	x8, [x29, #-0x70]
00000000000422fc	cbz	x1, 0x4231c
0000000000042300	cmp	x1, #0x1
0000000000042304	b.ne	0x42310
0000000000042308	strb	wzr, [x0]
000000000004230c	b	0x4231c
0000000000042310	ldur	x3, [x29, #-0x70]
0000000000042314	mov	x2, x19
0000000000042318	bl	0x55edc ; symbol stub for: _vsnprintf
000000000004231c	add	sp, sp, #0x290
0000000000042320	ldp	x29, x30, [sp, #0x50]
0000000000042324	ldp	x20, x19, [sp, #0x40]
0000000000042328	ldp	x22, x21, [sp, #0x30]
000000000004232c	ldp	x24, x23, [sp, #0x20]
0000000000042330	ldp	x26, x25, [sp, #0x10]
0000000000042334	ldp	x28, x27, [sp], #0x60
0000000000042338	ret
__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEENS6_IS8_EEED1Ev:
000000000004233c	stp	x22, x21, [sp, #-0x30]!
0000000000042340	stp	x20, x19, [sp, #0x10]
0000000000042344	stp	x29, x30, [sp, #0x20]
0000000000042348	add	x29, sp, #0x20
000000000004234c	mov	x19, x0
0000000000042350	ldr	x20, [x0]
0000000000042354	cbz	x20, 0x4239c
0000000000042358	ldr	x8, [x19, #0x8]
000000000004235c	cmp	x8, x20
0000000000042360	b.ne	0x42378
0000000000042364	mov	x0, x20
0000000000042368	b	0x42394
000000000004236c	mov	x8, x21
0000000000042370	cmp	x21, x20
0000000000042374	b.eq	0x42390
0000000000042378	sub	x21, x8, #0x18
000000000004237c	ldursb	w9, [x8, #-0x1]
0000000000042380	tbz	w9, #0x1f, 0x4236c
0000000000042384	ldur	x0, [x8, #-0x18]
0000000000042388	bl	0x55b7c ; symbol stub for: _free
000000000004238c	b	0x4236c
0000000000042390	ldr	x0, [x19]
0000000000042394	str	x20, [x19, #0x8]
0000000000042398	bl	0x55b7c ; symbol stub for: _free
000000000004239c	mov	x0, x19
00000000000423a0	ldp	x29, x30, [sp, #0x20]
00000000000423a4	ldp	x20, x19, [sp, #0x10]
00000000000423a8	ldp	x22, x21, [sp], #0x30
00000000000423ac	ret
__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev:
00000000000423b0	stp	x20, x19, [sp, #-0x20]!
00000000000423b4	stp	x29, x30, [sp, #0x10]
00000000000423b8	add	x29, sp, #0x10
00000000000423bc	mov	x19, x0
00000000000423c0	ldr	x9, [x0, #0x8]
00000000000423c4	cbz	x9, 0x423fc
00000000000423c8	ldr	w8, [x19, #0x10]
00000000000423cc	add	x0, x9, #0x138
00000000000423d0	ldaxr	w9, [x0]
00000000000423d4	stlxr	w10, w8, [x0]
00000000000423d8	cbnz	w10, 0x423d0
00000000000423dc	cbnz	w8, 0x423fc
00000000000423e0	cmp	w9, #0x1
00000000000423e4	b.ne	0x423fc
00000000000423e8	adr	x8, #0x52121
00000000000423ec	nop
00000000000423f0	ldarb	w8, [x8]
00000000000423f4	tbz	w8, #0x0, 0x423fc
00000000000423f8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000423fc	mov	x0, x19
0000000000042400	ldp	x29, x30, [sp, #0x10]
0000000000042404	ldp	x20, x19, [sp], #0x20
0000000000042408	ret
__ZN5konan8snprintfEPcmPKcz:
000000000004240c	sub	sp, sp, #0x20
0000000000042410	stp	x29, x30, [sp, #0x10]
0000000000042414	add	x29, sp, #0x10
0000000000042418	add	x8, x29, #0x10
000000000004241c	str	x8, [sp, #0x8]
0000000000042420	add	x3, x29, #0x10
0000000000042424	bl	0x55edc ; symbol stub for: _vsnprintf
0000000000042428	ldp	x29, x30, [sp, #0x10]
000000000004242c	add	sp, sp, #0x20
0000000000042430	ret
__ZN6kotlin8internal20GetCurrentStackTraceEm:
0000000000042434	sub	sp, sp, #0x60
0000000000042438	stp	x22, x21, [sp, #0x30]
000000000004243c	stp	x20, x19, [sp, #0x40]
0000000000042440	stp	x29, x30, [sp, #0x50]
0000000000042444	add	x29, sp, #0x50
0000000000042448	mov	x19, x0
000000000004244c	str	xzr, [sp, #0x20]
0000000000042450	mov	w8, #0x1
0000000000042454	str	w8, [sp, #0x28]
0000000000042458	strb	wzr, [sp, #0x2c]
000000000004245c	adrp	x0, 56 ; 0x7a000
0000000000042460	add	x0, x0, #0x4e0
0000000000042464	ldr	x8, [x0]
0000000000042468	blr	x8
000000000004246c	ldr	x8, [x0]
0000000000042470	cbz	x8, 0x42498
0000000000042474	add	x9, x8, #0x138
0000000000042478	mov	w11, #0x1
000000000004247c	ldaxr	w10, [x9]
0000000000042480	stlxr	w12, w11, [x9]
0000000000042484	cbnz	w12, 0x4247c
0000000000042488	str	x8, [sp, #0x20]
000000000004248c	str	w10, [sp, #0x28]
0000000000042490	mov	w8, #0x1
0000000000042494	strb	w8, [sp, #0x2c]
0000000000042498	stp	xzr, xzr, [sp]
000000000004249c	str	xzr, [sp, #0x10]
00000000000424a0	mov	x0, sp
00000000000424a4	mov	w1, #0x82
00000000000424a8	bl	__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEE8__appendEm
00000000000424ac	ldp	x0, x8, [sp]
00000000000424b0	sub	x8, x8, x0
00000000000424b4	lsr	x1, x8, #3
00000000000424b8	bl	0x55ad4 ; symbol stub for: _backtrace
00000000000424bc	cmp	w0, #0x4
00000000000424c0	b.ls	0x42508
00000000000424c4	sxtw	x9, w0
00000000000424c8	ldp	x0, x8, [sp]
00000000000424cc	sub	x10, x8, x0
00000000000424d0	asr	x10, x10, #3
00000000000424d4	cmp	x10, x9
00000000000424d8	b.hs	0x42524
00000000000424dc	sub	x1, x9, x10
00000000000424e0	mov	x0, sp
00000000000424e4	bl	__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEE8__appendEm
00000000000424e8	ldp	x21, x8, [sp]
00000000000424ec	mov	x0, x21
00000000000424f0	sub	x9, x21, x0
00000000000424f4	add	x9, x9, x21
00000000000424f8	add	x1, x9, #0x20
00000000000424fc	subs	x20, x8, x1
0000000000042500	b.ne	0x42548
0000000000042504	b	0x42554
0000000000042508	stp	xzr, xzr, [x19]
000000000004250c	str	xzr, [x19, #0x10]
0000000000042510	ldr	x0, [sp]
0000000000042514	cbz	x0, 0x4256c
0000000000042518	str	x0, [sp, #0x8]
000000000004251c	bl	0x55b7c ; symbol stub for: _free
0000000000042520	b	0x4256c
0000000000042524	b.ls	0x42530
0000000000042528	add	x8, x0, x9, lsl #3
000000000004252c	str	x8, [sp, #0x8]
0000000000042530	mov	x21, x0
0000000000042534	sub	x9, x21, x0
0000000000042538	add	x9, x9, x21
000000000004253c	add	x1, x9, #0x20
0000000000042540	subs	x20, x8, x1
0000000000042544	b.eq	0x42554
0000000000042548	mov	x2, x20
000000000004254c	bl	0x55bdc ; symbol stub for: _memmove
0000000000042550	ldr	x0, [sp]
0000000000042554	add	x8, x21, x20
0000000000042558	stp	x0, x8, [x19]
000000000004255c	ldr	x8, [sp, #0x10]
0000000000042560	str	x8, [x19, #0x10]
0000000000042564	stp	xzr, xzr, [sp]
0000000000042568	str	xzr, [sp, #0x10]
000000000004256c	ldr	x9, [sp, #0x20]
0000000000042570	cbz	x9, 0x425a8
0000000000042574	ldr	w8, [sp, #0x28]
0000000000042578	add	x0, x9, #0x138
000000000004257c	ldaxr	w9, [x0]
0000000000042580	stlxr	w10, w8, [x0]
0000000000042584	cbnz	w10, 0x4257c
0000000000042588	cbnz	w8, 0x425a8
000000000004258c	cmp	w9, #0x1
0000000000042590	b.ne	0x425a8
0000000000042594	adr	x8, #0x51f75
0000000000042598	nop
000000000004259c	ldarb	w8, [x8]
00000000000425a0	tbz	w8, #0x0, 0x425a8
00000000000425a4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000425a8	ldp	x29, x30, [sp, #0x50]
00000000000425ac	ldp	x20, x19, [sp, #0x40]
00000000000425b0	ldp	x22, x21, [sp, #0x30]
00000000000425b4	add	sp, sp, #0x60
00000000000425b8	ret
00000000000425bc	b	0x425c0
00000000000425c0	mov	x19, x0
00000000000425c4	mov	x0, sp
00000000000425c8	bl	__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEED1Ev
00000000000425cc	add	x0, sp, #0x18
00000000000425d0	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
00000000000425d4	mov	x0, x19
00000000000425d8	bl	___clang_call_terminate
__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEE8__appendEm:
00000000000425dc	stp	x26, x25, [sp, #-0x50]!
00000000000425e0	stp	x24, x23, [sp, #0x10]
00000000000425e4	stp	x22, x21, [sp, #0x20]
00000000000425e8	stp	x20, x19, [sp, #0x30]
00000000000425ec	stp	x29, x30, [sp, #0x40]
00000000000425f0	add	x29, sp, #0x40
00000000000425f4	mov	x22, x1
00000000000425f8	mov	x19, x0
00000000000425fc	ldp	x0, x8, [x0, #0x8]
0000000000042600	sub	x9, x8, x0
0000000000042604	cmp	x1, x9, asr #3
0000000000042608	b.ls	0x4265c
000000000004260c	ldr	x20, [x19]
0000000000042610	sub	x21, x0, x20
0000000000042614	asr	x25, x21, #3
0000000000042618	add	x9, x25, x22
000000000004261c	lsr	x10, x9, #61
0000000000042620	cbnz	x10, 0x426f0
0000000000042624	sub	x8, x8, x20
0000000000042628	asr	x10, x8, #2
000000000004262c	cmp	x10, x9
0000000000042630	csel	x9, x9, x10, lo
0000000000042634	mov	x10, #0xfffffffffffffff
0000000000042638	cmp	x10, x8, asr #3
000000000004263c	mov	x8, #0x1fffffffffffffff
0000000000042640	csel	x24, x9, x8, hi
0000000000042644	cbz	x24, 0x42678
0000000000042648	mov	x0, x24
000000000004264c	mov	w1, #0x8
0000000000042650	bl	0x55aec ; symbol stub for: _calloc
0000000000042654	mov	x23, x0
0000000000042658	b	0x4267c
000000000004265c	cbz	x22, 0x42670
0000000000042660	lsl	x1, x22, #3
0000000000042664	add	x20, x0, x1
0000000000042668	bl	0x55ae0 ; symbol stub for: _bzero
000000000004266c	mov	x0, x20
0000000000042670	str	x0, [x19, #0x8]
0000000000042674	b	0x426d8
0000000000042678	mov	x23, #0x0
000000000004267c	add	x25, x23, x25, lsl #3
0000000000042680	lsl	x22, x22, #3
0000000000042684	add	x24, x23, x24, lsl #3
0000000000042688	mov	x0, x25
000000000004268c	mov	x1, x22
0000000000042690	bl	0x55ae0 ; symbol stub for: _bzero
0000000000042694	add	x22, x25, x22
0000000000042698	cmp	x21, #0x1
000000000004269c	b.lt	0x426b0
00000000000426a0	mov	x0, x23
00000000000426a4	mov	x1, x20
00000000000426a8	mov	x2, x21
00000000000426ac	bl	0x55bd0 ; symbol stub for: _memcpy
00000000000426b0	stp	x23, x22, [x19]
00000000000426b4	str	x24, [x19, #0x10]
00000000000426b8	cbz	x20, 0x426d8
00000000000426bc	mov	x0, x20
00000000000426c0	ldp	x29, x30, [sp, #0x40]
00000000000426c4	ldp	x20, x19, [sp, #0x30]
00000000000426c8	ldp	x22, x21, [sp, #0x20]
00000000000426cc	ldp	x24, x23, [sp, #0x10]
00000000000426d0	ldp	x26, x25, [sp], #0x50
00000000000426d4	b	0x55b7c ; symbol stub for: _free
00000000000426d8	ldp	x29, x30, [sp, #0x40]
00000000000426dc	ldp	x20, x19, [sp, #0x30]
00000000000426e0	ldp	x22, x21, [sp, #0x20]
00000000000426e4	ldp	x24, x23, [sp, #0x10]
00000000000426e8	ldp	x26, x25, [sp], #0x50
00000000000426ec	ret
00000000000426f0	mov	x0, x19
00000000000426f4	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ZNSt3__16vectorIPvN6kotlin11std_support9allocatorIS1_EEED1Ev:
00000000000426f8	stp	x20, x19, [sp, #-0x20]!
00000000000426fc	stp	x29, x30, [sp, #0x10]
0000000000042700	add	x29, sp, #0x10
0000000000042704	mov	x19, x0
0000000000042708	ldr	x0, [x0]
000000000004270c	cbz	x0, 0x42718
0000000000042710	str	x0, [x19, #0x8]
0000000000042714	bl	0x55b7c ; symbol stub for: _free
0000000000042718	mov	x0, x19
000000000004271c	ldp	x29, x30, [sp, #0x10]
0000000000042720	ldp	x20, x19, [sp], #0x20
0000000000042724	ret
_Kotlin_initRuntimeIfNeeded:
0000000000042728	sub	sp, sp, #0xc0
000000000004272c	stp	x28, x27, [sp, #0x60]
0000000000042730	stp	x26, x25, [sp, #0x70]
0000000000042734	stp	x24, x23, [sp, #0x80]
0000000000042738	stp	x22, x21, [sp, #0x90]
000000000004273c	stp	x20, x19, [sp, #0xa0]
0000000000042740	stp	x29, x30, [sp, #0xb0]
0000000000042744	add	x29, sp, #0xb0
0000000000042748	adrp	x22, 56 ; 0x7a000
000000000004274c	add	x22, x22, #0x528
0000000000042750	ldr	x23, [x22]
0000000000042754	mov	x0, x22
0000000000042758	blr	x23
000000000004275c	ldr	x8, [x0]
0000000000042760	cbnz	x8, 0x42ff4
0000000000042764	adr	x8, #0x52024
0000000000042768	nop
000000000004276c	ldarb	w8, [x8]
0000000000042770	tbz	w8, #0x0, 0x43034
0000000000042774	adr	x8, #0x51e3c
0000000000042778	nop
000000000004277c	ldar	x8, [x8]
0000000000042780	cmn	x8, #0x1
0000000000042784	b.eq	0x427b0
0000000000042788	add	x8, sp, #0x38
000000000004278c	str	x8, [sp, #0x48]
0000000000042790	add	x8, sp, #0x48
0000000000042794	str	x8, [sp, #0x40]
0000000000042798	adr	x0, #0x51e18
000000000004279c	nop
00000000000427a0	adr	x2, #-0xf448
00000000000427a4	nop
00000000000427a8	add	x1, sp, #0x40
00000000000427ac	bl	0x558e8 ; symbol stub for: __ZNSt3__111__call_onceERVmPvPFvS2_E
00000000000427b0	bl	_mi_thread_init
00000000000427b4	mov	w0, #0x1
00000000000427b8	mov	w1, #0x18
00000000000427bc	bl	0x55aec ; symbol stub for: _calloc
00000000000427c0	cbz	x0, 0x42f9c
00000000000427c4	mov	x25, x0
00000000000427c8	stp	xzr, xzr, [x0]
00000000000427cc	str	xzr, [x0, #0x10]
00000000000427d0	mov	x0, x22
00000000000427d4	blr	x23
00000000000427d8	ldr	x8, [x0]
00000000000427dc	cbnz	x8, 0x43064
00000000000427e0	mov	x0, x22
00000000000427e4	blr	x23
00000000000427e8	str	x25, [x0]
00000000000427ec	adr	x8, #0x51d3c
00000000000427f0	nop
00000000000427f4	ldaxr	w9, [x8]
00000000000427f8	add	w9, w9, #0x1
00000000000427fc	stlxr	w10, w9, [x8]
0000000000042800	cbnz	w10, 0x427f4
0000000000042804	adr	x8, #0x51d20
0000000000042808	nop
000000000004280c	ldaxr	w9, [x8]
0000000000042810	cbnz	w9, 0x42824
0000000000042814	mov	w28, #0x1
0000000000042818	stlxr	w9, w28, [x8]
000000000004281c	cbnz	w9, 0x4280c
0000000000042820	b	0x4282c
0000000000042824	mov	w28, #0x0
0000000000042828	clrex
000000000004282c	str	x23, [sp, #0x28]
0000000000042830	bl	__ZN5konan15currentThreadIdEv
0000000000042834	mov	x21, x0
0000000000042838	mov	w19, #0x1
000000000004283c	mov	w0, #0x1
0000000000042840	mov	w1, #0x160
0000000000042844	bl	0x55aec ; symbol stub for: _calloc
0000000000042848	mov	x20, x0
000000000004284c	mov	x23, x0
0000000000042850	str	w21, [x23, #0x8]!
0000000000042854	adr	x21, #0x51fac
0000000000042858	nop
000000000004285c	add	x8, x21, #0x50
0000000000042860	add	x9, x0, #0x18
0000000000042864	stp	x8, x9, [x0, #0x10]
0000000000042868	str	x9, [x0, #0x20]
000000000004286c	add	x8, x0, #0x30
0000000000042870	stp	x8, x8, [x0, #0x30]
0000000000042874	movi.16b	v0, #0x0
0000000000042878	stp	q0, q0, [x0, #0x40]
000000000004287c	stp	q0, q0, [x0, #0x60]
0000000000042880	mov	w8, #0x3f800000
0000000000042884	str	w8, [x0, #0x80]
0000000000042888	stp	xzr, xzr, [x0, #0x88]
000000000004288c	add	x8, x21, #0x88
0000000000042890	stp	xzr, x8, [x0, #0x98]
0000000000042894	add	x8, x0, #0xa8
0000000000042898	stp	x8, x8, [x0, #0xa8]
000000000004289c	add	x8, x0, #0xc0
00000000000428a0	stp	x8, x8, [x0, #0xc0]
00000000000428a4	add	x8, x21, #0xc0
00000000000428a8	add	x9, x0, #0xe0
00000000000428ac	stp	x8, x9, [x0, #0xd8]
00000000000428b0	str	x9, [x0, #0xe8]
00000000000428b4	add	x8, x0, #0xf8
00000000000428b8	stp	x8, x8, [x0, #0xf8]
00000000000428bc	add	x0, x0, #0x118
00000000000428c0	stp	xzr, xzr, [x20, #0x108]
00000000000428c4	add	x1, x21, #0xf8
00000000000428c8	mov	x2, x23
00000000000428cc	bl	__ZN6kotlin2gc2GC10ThreadDataC1ERS1_RNS_2mm10ThreadDataE
00000000000428d0	stp	xzr, xzr, [x20, #0x120]
00000000000428d4	str	xzr, [x20, #0x130]
00000000000428d8	str	w19, [x20, #0x138]
00000000000428dc	str	x23, [x20, #0x140]
00000000000428e0	strb	wzr, [x20, #0x148]
00000000000428e4	stp	xzr, xzr, [x20, #0x150]
00000000000428e8	mov	x0, x21
00000000000428ec	bl	0x55918 ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
00000000000428f0	adr	x8, #0x51f00
00000000000428f4	nop
00000000000428f8	ldr	x9, [x8]
00000000000428fc	add	x10, x9, #0x158
0000000000042900	add	x11, x8, #0x8
0000000000042904	cmp	x9, #0x0
0000000000042908	csel	x10, x11, x10, eq
000000000004290c	csel	x9, xzr, x9, eq
0000000000042910	str	x20, [x10]
0000000000042914	str	xzr, [x8]
0000000000042918	ldr	x21, [x20, #0x150]
000000000004291c	str	x9, [x20, #0x150]
0000000000042920	cbz	x21, 0x42958
0000000000042924	mov	x0, x21
0000000000042928	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000004292c	mov	x0, x21
0000000000042930	bl	0x55b7c ; symbol stub for: _free
0000000000042934	adrp	x8, 82 ; 0x94000
0000000000042938	ldr	x21, [x8, #0x7f0]
000000000004293c	str	x20, [x8, #0x7f0]
0000000000042940	cbz	x21, 0x42960
0000000000042944	mov	x0, x21
0000000000042948	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
000000000004294c	mov	x0, x21
0000000000042950	bl	0x55b7c ; symbol stub for: _free
0000000000042954	b	0x42960
0000000000042958	adrp	x8, 82 ; 0x94000
000000000004295c	str	x20, [x8, #0x7f0]
0000000000042960	add	x21, x20, #0x138
0000000000042964	adr	x0, #0x51e9c
0000000000042968	nop
000000000004296c	bl	0x55924 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
0000000000042970	adrp	x26, 56 ; 0x7a000
0000000000042974	add	x26, x26, #0x4e0
0000000000042978	ldr	x23, [x26]
000000000004297c	mov	x0, x26
0000000000042980	blr	x23
0000000000042984	str	x20, [x0]
0000000000042988	str	x20, [x25]
000000000004298c	ldaxr	w19, [x21]
0000000000042990	stlxr	w8, wzr, [x21]
0000000000042994	cbnz	w8, 0x4298c
0000000000042998	cmp	w19, #0x1
000000000004299c	b.ne	0x429b8
00000000000429a0	adr	x8, #0x51b69
00000000000429a4	nop
00000000000429a8	ldarb	w8, [x8]
00000000000429ac	tbz	w8, #0x0, 0x429b8
00000000000429b0	mov	x0, x21
00000000000429b4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000429b8	ldr	x22, [x25]
00000000000429bc	adrp	x0, 56 ; 0x7a000
00000000000429c0	add	x0, x0, #0x540
00000000000429c4	ldr	x8, [x0]
00000000000429c8	blr	x8
00000000000429cc	ldr	x24, [x0]
00000000000429d0	str	x25, [sp, #0x30]
00000000000429d4	cbnz	x24, 0x42dac
00000000000429d8	str	x8, [sp, #0x18]
00000000000429dc	bl	__ZN12_GLOBAL__N_18theStateEv
00000000000429e0	str	x22, [sp, #0x10]
00000000000429e4	str	x0, [sp, #0x20]
00000000000429e8	str	x0, [sp, #0x48]
00000000000429ec	mov	w8, #0x1
00000000000429f0	strb	w8, [sp, #0x50]
00000000000429f4	str	xzr, [sp, #0x58]
00000000000429f8	mov	x0, x26
00000000000429fc	blr	x23
0000000000042a00	ldr	x27, [x0]
0000000000042a04	add	x24, x27, #0x138
0000000000042a08	ldaxr	w25, [x24]
0000000000042a0c	stlxr	w9, w8, [x24]
0000000000042a10	cbnz	w9, 0x42a08
0000000000042a14	ldr	x0, [sp, #0x20]
0000000000042a18	bl	0x55dc8 ; symbol stub for: _pthread_mutex_lock
0000000000042a1c	cbz	x27, 0x42a50
0000000000042a20	ldaxr	w8, [x24]
0000000000042a24	stlxr	w9, w25, [x24]
0000000000042a28	cbnz	w9, 0x42a20
0000000000042a2c	cbnz	w25, 0x42a50
0000000000042a30	cmp	w8, #0x1
0000000000042a34	b.ne	0x42a50
0000000000042a38	adr	x8, #0x51ad1
0000000000042a3c	nop
0000000000042a40	ldarb	w8, [x8]
0000000000042a44	tbz	w8, #0x0, 0x42a50
0000000000042a48	mov	x0, x24
0000000000042a4c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042a50	mov	w22, #0x1
0000000000042a54	mov	w0, #0x1
0000000000042a58	mov	w1, #0xe0
0000000000042a5c	bl	0x55aec ; symbol stub for: _calloc
0000000000042a60	mov	x24, x0
0000000000042a64	cbz	x0, 0x42d88
0000000000042a68	ldr	x10, [sp, #0x20]
0000000000042a6c	ldr	w8, [x10, #0xe8]
0000000000042a70	add	w9, w8, #0x1
0000000000042a74	str	w9, [x10, #0xe8]
0000000000042a78	stp	w8, w22, [x24]
0000000000042a7c	movi.16b	v0, #0x0
0000000000042a80	mov	x27, x24
0000000000042a84	str	q0, [x27, #0x8]!
0000000000042a88	stur	q0, [x24, #0x18]
0000000000042a8c	stur	q0, [x24, #0x28]
0000000000042a90	str	xzr, [x24, #0x48]
0000000000042a94	mov	x8, x24
0000000000042a98	str	xzr, [x8, #0x40]!
0000000000042a9c	str	x8, [x24, #0x38]
0000000000042aa0	stp	xzr, xzr, [x24, #0xd0]
0000000000042aa4	mov	x0, x26
0000000000042aa8	blr	x23
0000000000042aac	ldr	x25, [x0]
0000000000042ab0	add	x26, x25, #0x138
0000000000042ab4	ldaxr	w23, [x26]
0000000000042ab8	stlxr	w8, w22, [x26]
0000000000042abc	cbnz	w8, 0x42ab4
0000000000042ac0	add	x0, x24, #0x58
0000000000042ac4	mov	x1, #0x0
0000000000042ac8	bl	0x55dbc ; symbol stub for: _pthread_mutex_init
0000000000042acc	add	x0, x24, #0x98
0000000000042ad0	mov	x1, #0x0
0000000000042ad4	bl	0x55d5c ; symbol stub for: _pthread_cond_init
0000000000042ad8	cbz	x25, 0x42b0c
0000000000042adc	ldaxr	w8, [x26]
0000000000042ae0	stlxr	w9, w23, [x26]
0000000000042ae4	cbnz	w9, 0x42adc
0000000000042ae8	cbnz	w23, 0x42b0c
0000000000042aec	cmp	w8, #0x1
0000000000042af0	b.ne	0x42b0c
0000000000042af4	adr	x8, #0x51a15
0000000000042af8	nop
0000000000042afc	ldarb	w8, [x8]
0000000000042b00	tbz	w8, #0x0, 0x42b0c
0000000000042b04	mov	x0, x26
0000000000042b08	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042b0c	ldr	w25, [x24]
0000000000042b10	ldr	x8, [sp, #0x20]
0000000000042b14	add	x10, x8, #0x98
0000000000042b18	sxtw	x22, w25
0000000000042b1c	ldr	x26, [x8, #0xa0]
0000000000042b20	str	x10, [sp, #0x8]
0000000000042b24	cbz	x26, 0x42b4c
0000000000042b28	fmov	d0, x26
0000000000042b2c	cnt.8b	v0, v0
0000000000042b30	uaddlv.8b	h0, v0
0000000000042b34	fmov	w8, s0
0000000000042b38	cmp	x8, #0x1
0000000000042b3c	b.hi	0x42b50
0000000000042b40	sub	x9, x26, #0x1
0000000000042b44	and	x23, x9, x22
0000000000042b48	b	0x42b64
0000000000042b4c	b	0x42bc0
0000000000042b50	mov	x23, x22
0000000000042b54	cmp	x26, x22
0000000000042b58	b.hi	0x42b64
0000000000042b5c	udiv	x9, x22, x26
0000000000042b60	msub	x23, x9, x26, x22
0000000000042b64	ldr	x9, [x10]
0000000000042b68	ldr	x27, [x9, x23, lsl #3]
0000000000042b6c	cbz	x27, 0x42bc0
0000000000042b70	sub	x9, x26, #0x1
0000000000042b74	b	0x42b90
0000000000042b78	and	x10, x10, x9
0000000000042b7c	cmp	x10, x23
0000000000042b80	b.ne	0x42bc0
0000000000042b84	ldr	w10, [x27, #0x10]
0000000000042b88	cmp	w10, w25
0000000000042b8c	b.eq	0x42d84
0000000000042b90	ldr	x27, [x27]
0000000000042b94	cbz	x27, 0x42bc0
0000000000042b98	ldr	x10, [x27, #0x8]
0000000000042b9c	cmp	x10, x22
0000000000042ba0	b.eq	0x42b84
0000000000042ba4	cmp	x8, #0x1
0000000000042ba8	b.ls	0x42b78
0000000000042bac	cmp	x10, x26
0000000000042bb0	b.lo	0x42b7c
0000000000042bb4	udiv	x11, x10, x26
0000000000042bb8	msub	x10, x11, x26, x10
0000000000042bbc	b	0x42b7c
0000000000042bc0	mov	w0, #0x1
0000000000042bc4	mov	w1, #0x20
0000000000042bc8	bl	0x55aec ; symbol stub for: _calloc
0000000000042bcc	mov	x27, x0
0000000000042bd0	str	w25, [x0, #0x10]
0000000000042bd4	str	x22, [x0, #0x8]
0000000000042bd8	ldr	x25, [sp, #0x20]
0000000000042bdc	ldr	x8, [x25, #0xb0]
0000000000042be0	add	x8, x8, #0x1
0000000000042be4	ucvtf	s0, x8
0000000000042be8	ldr	s1, [x25, #0xb8]
0000000000042bec	cbz	x26, 0x42c00
0000000000042bf0	ucvtf	s2, x26
0000000000042bf4	fmul	s2, s1, s2
0000000000042bf8	fcmp	s2, s0
0000000000042bfc	b.pl	0x42d08
0000000000042c00	cmp	x26, #0x3
0000000000042c04	cset	w8, lo
0000000000042c08	sub	x9, x26, #0x1
0000000000042c0c	tst	x26, x9
0000000000042c10	cset	w9, ne
0000000000042c14	orr	w8, w8, w9
0000000000042c18	bfi	x8, x26, #1, #63
0000000000042c1c	fdiv	s0, s0, s1
0000000000042c20	fcvtpu	x9, s0
0000000000042c24	cmp	x8, x9
0000000000042c28	csel	x26, x9, x8, lo
0000000000042c2c	subs	x8, x26, #0x1
0000000000042c30	b.ne	0x42c3c
0000000000042c34	mov	w26, #0x2
0000000000042c38	b	0x42c50
0000000000042c3c	tst	x26, x8
0000000000042c40	b.eq	0x42c50
0000000000042c44	mov	x0, x26
0000000000042c48	bl	0x558f4 ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000042c4c	mov	x26, x0
0000000000042c50	ldr	x23, [x25, #0xa0]
0000000000042c54	cmp	x26, x23
0000000000042c58	b.ls	0x42c6c
0000000000042c5c	ldr	x0, [sp, #0x8]
0000000000042c60	mov	x1, x26
0000000000042c64	bl	__ZNSt3__112__hash_tableINS_17__hash_value_typeIiP6WorkerEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEEN6kotlin11std_support9allocatorIS4_EEE8__rehashEm
0000000000042c68	b	0x42cd8
0000000000042c6c	b.hs	0x42cd8
0000000000042c70	ldr	x8, [x25, #0xb0]
0000000000042c74	ucvtf	s0, x8
0000000000042c78	ldr	s1, [x25, #0xb8]
0000000000042c7c	fdiv	s0, s0, s1
0000000000042c80	fcvtpu	x0, s0
0000000000042c84	cmp	x23, #0x3
0000000000042c88	b.lo	0x42cc4
0000000000042c8c	fmov	d0, x23
0000000000042c90	cnt.8b	v0, v0
0000000000042c94	uaddlv.8b	h0, v0
0000000000042c98	fmov	w8, s0
0000000000042c9c	cmp	x8, #0x1
0000000000042ca0	b.hi	0x42cc4
0000000000042ca4	sub	x8, x0, #0x1
0000000000042ca8	clz	x8, x8
0000000000042cac	neg	x8, x8
0000000000042cb0	mov	w9, #0x1
0000000000042cb4	lsl	x8, x9, x8
0000000000042cb8	cmp	x0, #0x2
0000000000042cbc	csel	x0, x0, x8, lo
0000000000042cc0	b	0x42cc8
0000000000042cc4	bl	0x558f4 ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000042cc8	cmp	x26, x0
0000000000042ccc	csel	x26, x0, x26, lo
0000000000042cd0	cmp	x26, x23
0000000000042cd4	b.lo	0x42c5c
0000000000042cd8	ldr	x26, [x25, #0xa0]
0000000000042cdc	sub	x8, x26, #0x1
0000000000042ce0	tst	x26, x8
0000000000042ce4	b.ne	0x42cf0
0000000000042ce8	and	x23, x8, x22
0000000000042cec	b	0x42d08
0000000000042cf0	cmp	x26, x22
0000000000042cf4	b.ls	0x42d00
0000000000042cf8	mov	x23, x22
0000000000042cfc	b	0x42d08
0000000000042d00	udiv	x8, x22, x26
0000000000042d04	msub	x23, x8, x26, x22
0000000000042d08	ldr	x10, [sp, #0x8]
0000000000042d0c	ldr	x8, [x10]
0000000000042d10	ldr	x8, [x8, x23, lsl #3]
0000000000042d14	cbz	x8, 0x42d24
0000000000042d18	ldr	x9, [x8]
0000000000042d1c	str	x9, [x27]
0000000000042d20	b	0x42d74
0000000000042d24	mov	x8, x25
0000000000042d28	ldr	x9, [x8, #0xa8]!
0000000000042d2c	str	x9, [x27]
0000000000042d30	str	x27, [x8]
0000000000042d34	ldur	x9, [x8, #-0x10]
0000000000042d38	str	x8, [x9, x23, lsl #3]
0000000000042d3c	ldr	x8, [x27]
0000000000042d40	cbz	x8, 0x42d78
0000000000042d44	ldr	x8, [x8, #0x8]
0000000000042d48	sub	x9, x26, #0x1
0000000000042d4c	tst	x26, x9
0000000000042d50	b.ne	0x42d5c
0000000000042d54	and	x8, x8, x9
0000000000042d58	b	0x42d6c
0000000000042d5c	cmp	x8, x26
0000000000042d60	b.lo	0x42d6c
0000000000042d64	udiv	x9, x8, x26
0000000000042d68	msub	x8, x9, x26, x8
0000000000042d6c	ldr	x9, [x10]
0000000000042d70	add	x8, x9, x8, lsl #3
0000000000042d74	str	x27, [x8]
0000000000042d78	ldr	x8, [x25, #0xb0]
0000000000042d7c	add	x8, x8, #0x1
0000000000042d80	str	x8, [x25, #0xb0]
0000000000042d84	str	x24, [x27, #0x18]
0000000000042d88	add	x0, sp, #0x48
0000000000042d8c	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000042d90	adrp	x0, 56 ; 0x7a000
0000000000042d94	add	x0, x0, #0x540
0000000000042d98	ldr	x8, [sp, #0x18]
0000000000042d9c	blr	x8
0000000000042da0	str	x24, [x0]
0000000000042da4	ldr	x25, [sp, #0x30]
0000000000042da8	ldr	x22, [sp, #0x10]
0000000000042dac	bl	0x55dec ; symbol stub for: _pthread_self
0000000000042db0	stp	x0, x22, [x24, #0xd0]
0000000000042db4	str	x24, [x25, #0x8]
0000000000042db8	ldr	x23, [x25]
0000000000042dbc	adrp	x26, 82 ; 0x94000
0000000000042dc0	ldr	x22, [x26, #0x770]
0000000000042dc4	cbz	x22, 0x42de4
0000000000042dc8	ldr	x8, [x22]
0000000000042dcc	mov	w0, #0x0
0000000000042dd0	mov	x1, x23
0000000000042dd4	blr	x8
0000000000042dd8	ldr	x22, [x22, #0x8]
0000000000042ddc	cbnz	x22, 0x42dc8
0000000000042de0	ldr	x23, [x25]
0000000000042de4	mov	x24, x23
0000000000042de8	ldr	x8, [x24, #0x48]!
0000000000042dec	ldrsw	x22, [x24, #0x44]
0000000000042df0	ldr	x0, [x24, #0x8]
0000000000042df4	sub	x9, x0, x8
0000000000042df8	asr	x27, x9, #3
0000000000042dfc	cmp	x27, x22
0000000000042e00	b.hs	0x42e5c
0000000000042e04	sub	x25, x22, x27
0000000000042e08	ldr	x9, [x23, #0x58]
0000000000042e0c	sub	x10, x9, x0
0000000000042e10	cmp	x25, x10, asr #3
0000000000042e14	b.ls	0x42e70
0000000000042e18	tbnz	w22, #0x1f, 0x43078
0000000000042e1c	sub	x8, x9, x8
0000000000042e20	asr	x9, x8, #2
0000000000042e24	cmp	x9, x22
0000000000042e28	csel	x9, x22, x9, lo
0000000000042e2c	mov	x10, #0xfffffffffffffff
0000000000042e30	cmp	x10, x8, asr #3
0000000000042e34	mov	x8, #0x1fffffffffffffff
0000000000042e38	csel	x8, x9, x8, hi
0000000000042e3c	cbz	x8, 0x42e90
0000000000042e40	str	x8, [sp, #0x20]
0000000000042e44	mov	x0, x8
0000000000042e48	mov	w1, #0x8
0000000000042e4c	bl	0x55aec ; symbol stub for: _calloc
0000000000042e50	mov	x26, x0
0000000000042e54	ldr	x8, [sp, #0x20]
0000000000042e58	b	0x42e94
0000000000042e5c	ldr	x24, [sp, #0x30]
0000000000042e60	b.ls	0x42ef0
0000000000042e64	add	x8, x8, x22, lsl #3
0000000000042e68	str	x8, [x23, #0x50]
0000000000042e6c	b	0x42ef0
0000000000042e70	cbz	x25, 0x42e84
0000000000042e74	lsl	x1, x25, #3
0000000000042e78	add	x22, x0, x1
0000000000042e7c	bl	0x55ae0 ; symbol stub for: _bzero
0000000000042e80	mov	x0, x22
0000000000042e84	ldr	x24, [sp, #0x30]
0000000000042e88	str	x0, [x23, #0x50]
0000000000042e8c	b	0x42ef0
0000000000042e90	mov	x26, #0x0
0000000000042e94	add	x27, x26, x27, lsl #3
0000000000042e98	lsl	x1, x25, #3
0000000000042e9c	add	x8, x26, x8, lsl #3
0000000000042ea0	str	x8, [sp, #0x20]
0000000000042ea4	mov	x0, x27
0000000000042ea8	bl	0x55ae0 ; symbol stub for: _bzero
0000000000042eac	add	x22, x26, x22, lsl #3
0000000000042eb0	ldp	x1, x8, [x23, #0x48]
0000000000042eb4	sub	x2, x8, x1
0000000000042eb8	sub	x25, x27, x2
0000000000042ebc	cmp	x2, #0x1
0000000000042ec0	b.lt	0x42ed0
0000000000042ec4	mov	x0, x25
0000000000042ec8	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000042ecc	ldr	x1, [x24]
0000000000042ed0	ldr	x24, [sp, #0x30]
0000000000042ed4	adrp	x26, 82 ; 0x94000
0000000000042ed8	stp	x25, x22, [x23, #0x48]
0000000000042edc	ldr	x8, [sp, #0x20]
0000000000042ee0	str	x8, [x23, #0x58]
0000000000042ee4	cbz	x1, 0x42ef0
0000000000042ee8	mov	x0, x1
0000000000042eec	bl	0x55b7c ; symbol stub for: _free
0000000000042ef0	mov	w8, #0x1
0000000000042ef4	str	w8, [x23, #0x88]
0000000000042ef8	cbz	w28, 0x42f30
0000000000042efc	nop
0000000000042f00	ldr	x8, #0x51880
0000000000042f04	cmn	x8, #0x1
0000000000042f08	b.ne	0x43014
0000000000042f0c	ldr	x22, [x26, #0x770]
0000000000042f10	cbz	x22, 0x42f54
0000000000042f14	ldr	x23, [x24]
0000000000042f18	ldr	x8, [x22]
0000000000042f1c	mov	w0, #0x1
0000000000042f20	mov	x1, x23
0000000000042f24	blr	x8
0000000000042f28	ldr	x22, [x22, #0x8]
0000000000042f2c	cbnz	x22, 0x42f18
0000000000042f30	ldr	x22, [x26, #0x770]
0000000000042f34	cbz	x22, 0x42f54
0000000000042f38	ldr	x23, [x24]
0000000000042f3c	ldr	x8, [x22]
0000000000042f40	mov	w0, #0x2
0000000000042f44	mov	x1, x23
0000000000042f48	blr	x8
0000000000042f4c	ldr	x22, [x22, #0x8]
0000000000042f50	cbnz	x22, 0x42f3c
0000000000042f54	mov	w8, #0x1
0000000000042f58	str	w8, [x24, #0x10]
0000000000042f5c	adrp	x22, 56 ; 0x7a000
0000000000042f60	add	x22, x22, #0x528
0000000000042f64	ldr	x23, [sp, #0x28]
0000000000042f68	cbz	x20, 0x42f9c
0000000000042f6c	ldaxr	w8, [x21]
0000000000042f70	stlxr	w9, w19, [x21]
0000000000042f74	cbnz	w9, 0x42f6c
0000000000042f78	cbnz	w19, 0x42f9c
0000000000042f7c	cmp	w8, #0x1
0000000000042f80	b.ne	0x42f9c
0000000000042f84	adr	x8, #0x51585
0000000000042f88	nop
0000000000042f8c	ldarb	w8, [x8]
0000000000042f90	tbz	w8, #0x0, 0x42f9c
0000000000042f94	mov	x0, x21
0000000000042f98	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000042f9c	mov	x0, x22
0000000000042fa0	blr	x23
0000000000042fa4	ldr	x20, [x0]
0000000000042fa8	adr	x0, #0x360b8
0000000000042fac	nop
0000000000042fb0	adr	x1, #0xae8
0000000000042fb4	nop
0000000000042fb8	bl	0x55de0 ; symbol stub for: _pthread_once
0000000000042fbc	mov	w0, #0x1
0000000000042fc0	mov	w1, #0x18
0000000000042fc4	bl	0x55aec ; symbol stub for: _calloc
0000000000042fc8	mov	x19, x0
0000000000042fcc	adr	x8, #0x1e8
0000000000042fd0	nop
0000000000042fd4	stp	x8, x20, [x0, #0x8]
0000000000042fd8	adrp	x20, 82 ; 0x94000
0000000000042fdc	ldr	x0, [x20, #0x768]
0000000000042fe0	bl	0x55d8c ; symbol stub for: _pthread_getspecific
0000000000042fe4	str	x0, [x19]
0000000000042fe8	ldr	x0, [x20, #0x768]
0000000000042fec	mov	x1, x19
0000000000042ff0	bl	0x55e04 ; symbol stub for: _pthread_setspecific
0000000000042ff4	ldp	x29, x30, [sp, #0xb0]
0000000000042ff8	ldp	x20, x19, [sp, #0xa0]
0000000000042ffc	ldp	x22, x21, [sp, #0x90]
0000000000043000	ldp	x24, x23, [sp, #0x80]
0000000000043004	ldp	x26, x25, [sp, #0x70]
0000000000043008	ldp	x28, x27, [sp, #0x60]
000000000004300c	add	sp, sp, #0xc0
0000000000043010	ret
0000000000043014	adr	x0, #0x5176c
0000000000043018	nop
000000000004301c	adr	x1, #0x2eed4
0000000000043020	nop
0000000000043024	bl	0x55b4c ; symbol stub for: _dispatch_once
0000000000043028	ldr	x22, [x26, #0x770]
000000000004302c	cbnz	x22, 0x42f14
0000000000043030	b	0x42f54
0000000000043034	adr	x20, #0x51754
0000000000043038	nop
000000000004303c	mov	x0, x20
0000000000043040	bl	0x55a5c ; symbol stub for: ___cxa_guard_acquire
0000000000043044	cbz	w0, 0x42774
0000000000043048	adr	x0, #0x4c24
000000000004304c	nop
0000000000043050	bl	0x559f0 ; symbol stub for: __ZSt13set_terminatePFvvE
0000000000043054	str	x0, [x20, #0x8]
0000000000043058	mov	x0, x20
000000000004305c	bl	0x55a68 ; symbol stub for: ___cxa_guard_release
0000000000043060	b	0x42774
0000000000043064	adr	x2, #0x1a0f3 ; literal pool for: "No active runtimes allowed"
0000000000043068	nop
000000000004306c	mov	w0, #0x0
0000000000043070	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
0000000000043074	b	0x43080
0000000000043078	mov	x0, x24
000000000004307c	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000043080	brk	#0x1
0000000000043084	mov	x22, x0
0000000000043088	cbz	x27, 0x43124
000000000004308c	mov	x0, x27
0000000000043090	b	0x43120
0000000000043094	bl	___clang_call_terminate
0000000000043098	mov	x22, x0
000000000004309c	cbz	x27, 0x43174
00000000000430a0	ldaxr	w8, [x24]
00000000000430a4	stlxr	w9, w25, [x24]
00000000000430a8	cbnz	w9, 0x430a0
00000000000430ac	cbnz	w25, 0x43174
00000000000430b0	cmp	w8, #0x1
00000000000430b4	b.ne	0x43174
00000000000430b8	adr	x8, #0x51451
00000000000430bc	nop
00000000000430c0	ldarb	w8, [x8]
00000000000430c4	tbz	w8, #0x0, 0x43174
00000000000430c8	mov	x0, x24
00000000000430cc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000430d0	b	0x43174
00000000000430d4	mov	x22, x0
00000000000430d8	cbz	x25, 0x4310c
00000000000430dc	ldaxr	w8, [x26]
00000000000430e0	stlxr	w9, w23, [x26]
00000000000430e4	cbnz	w9, 0x430dc
00000000000430e8	cbnz	w23, 0x4310c
00000000000430ec	cmp	w8, #0x1
00000000000430f0	b.ne	0x4310c
00000000000430f4	adr	x8, #0x51415
00000000000430f8	nop
00000000000430fc	ldarb	w8, [x8]
0000000000043100	tbz	w8, #0x0, 0x4310c
0000000000043104	mov	x0, x26
0000000000043108	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004310c	ldr	x0, [x24, #0x40]
0000000000043110	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
0000000000043114	mov	x0, x27
0000000000043118	bl	__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev
000000000004311c	mov	x0, x24
0000000000043120	bl	0x55b7c ; symbol stub for: _free
0000000000043124	add	x0, sp, #0x48
0000000000043128	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000004312c	b	0x43170
0000000000043130	mov	x19, x0
0000000000043134	cbz	x20, 0x43148
0000000000043138	mov	x0, x20
000000000004313c	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
0000000000043140	mov	x0, x20
0000000000043144	bl	0x55b7c ; symbol stub for: _free
0000000000043148	mov	x0, x19
000000000004314c	bl	___clang_call_terminate
0000000000043150	bl	___clang_call_terminate
0000000000043154	bl	___clang_call_terminate
0000000000043158	b	0x4316c
000000000004315c	mov	x22, x0
0000000000043160	b	0x4319c
0000000000043164	b	0x4316c
0000000000043168	b	0x4316c
000000000004316c	mov	x22, x0
0000000000043170	cbz	x20, 0x4319c
0000000000043174	ldaxr	w8, [x21]
0000000000043178	stlxr	w9, w19, [x21]
000000000004317c	cbnz	w9, 0x43174
0000000000043180	cbnz	w19, 0x4319c
0000000000043184	cmp	w8, #0x1
0000000000043188	b.ne	0x4319c
000000000004318c	adr	x8, #0x5137d
0000000000043190	nop
0000000000043194	ldarb	w8, [x8]
0000000000043198	tbnz	w8, #0x0, 0x431a4
000000000004319c	mov	x0, x22
00000000000431a0	bl	___clang_call_terminate
00000000000431a4	mov	x0, x21
00000000000431a8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000431ac	mov	x0, x22
00000000000431b0	bl	___clang_call_terminate
__ZN12_GLOBAL__N_128Kotlin_deinitRuntimeCallbackEPv:
00000000000431b4	sub	sp, sp, #0x80
00000000000431b8	stp	x28, x27, [sp, #0x20]
00000000000431bc	stp	x26, x25, [sp, #0x30]
00000000000431c0	stp	x24, x23, [sp, #0x40]
00000000000431c4	stp	x22, x21, [sp, #0x50]
00000000000431c8	stp	x20, x19, [sp, #0x60]
00000000000431cc	stp	x29, x30, [sp, #0x70]
00000000000431d0	add	x29, sp, #0x70
00000000000431d4	mov	x20, x0
00000000000431d8	ldr	x8, [x0]
00000000000431dc	add	x0, x8, #0x138
00000000000431e0	ldaxr	w8, [x0]
00000000000431e4	stlxr	w9, wzr, [x0]
00000000000431e8	cbnz	w9, 0x431e0
00000000000431ec	cmp	w8, #0x1
00000000000431f0	b.ne	0x43208
00000000000431f4	adr	x8, #0x51315
00000000000431f8	nop
00000000000431fc	ldarb	w8, [x8]
0000000000043200	tbz	w8, #0x0, 0x43208
0000000000043204	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043208	mov	w8, #0x2
000000000004320c	str	w8, [x20, #0x10]
0000000000043210	adrp	x19, 55 ; 0x7a000
0000000000043214	add	x19, x19, #0x528
0000000000043218	ldr	x24, [x19]
000000000004321c	mov	x0, x19
0000000000043220	blr	x24
0000000000043224	str	x20, [x0]
0000000000043228	adr	x8, #0x51300
000000000004322c	nop
0000000000043230	ldaxr	w9, [x8]
0000000000043234	sub	w9, w9, #0x1
0000000000043238	stlxr	w10, w9, [x8]
000000000004323c	cbnz	w10, 0x43230
0000000000043240	ldr	x8, [x20]
0000000000043244	ldr	x9, [x8, #0x48]
0000000000043248	str	x9, [x8, #0x50]
000000000004324c	mov	w9, #0x2
0000000000043250	str	w9, [x8, #0x88]
0000000000043254	ldr	x21, [x20, #0x8]
0000000000043258	ldrsw	x25, [x21]
000000000004325c	adrp	x0, 55 ; 0x7a000
0000000000043260	add	x0, x0, #0x540
0000000000043264	ldr	x8, [x0]
0000000000043268	blr	x8
000000000004326c	str	xzr, [x0]
0000000000043270	bl	__ZN12_GLOBAL__N_18theStateEv
0000000000043274	mov	x22, x0
0000000000043278	ldr	x27, [x21, #0xd8]
000000000004327c	str	x0, [sp, #0x8]
0000000000043280	mov	w8, #0x1
0000000000043284	strb	w8, [sp, #0x10]
0000000000043288	str	x27, [sp, #0x18]
000000000004328c	add	x23, x27, #0x138
0000000000043290	ldaxr	w26, [x23]
0000000000043294	stlxr	w9, w8, [x23]
0000000000043298	cbnz	w9, 0x43290
000000000004329c	mov	x0, x22
00000000000432a0	bl	0x55dc8 ; symbol stub for: _pthread_mutex_lock
00000000000432a4	cbz	x27, 0x432d8
00000000000432a8	ldaxr	w8, [x23]
00000000000432ac	stlxr	w9, w26, [x23]
00000000000432b0	cbnz	w9, 0x432a8
00000000000432b4	cbnz	w26, 0x432d8
00000000000432b8	cmp	w8, #0x1
00000000000432bc	b.ne	0x432d8
00000000000432c0	adr	x8, #0x51249
00000000000432c4	nop
00000000000432c8	ldarb	w8, [x8]
00000000000432cc	tbz	w8, #0x0, 0x432d8
00000000000432d0	mov	x0, x23
00000000000432d4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000432d8	ldr	x9, [x22, #0xa0]
00000000000432dc	cbz	x9, 0x43380
00000000000432e0	ldrsw	x8, [x21]
00000000000432e4	fmov	d0, x9
00000000000432e8	cnt.8b	v0, v0
00000000000432ec	uaddlv.8b	h0, v0
00000000000432f0	fmov	w10, s0
00000000000432f4	cmp	x10, #0x1
00000000000432f8	b.hi	0x43308
00000000000432fc	sub	x11, x9, #0x1
0000000000043300	and	x13, x11, x8
0000000000043304	b	0x4331c
0000000000043308	mov	x13, x8
000000000004330c	cmp	x9, x8
0000000000043310	b.hi	0x4331c
0000000000043314	udiv	x11, x8, x9
0000000000043318	msub	x13, x11, x9, x8
000000000004331c	ldr	x11, [x22, #0x98]
0000000000043320	ldr	x12, [x11, x13, lsl #3]
0000000000043324	cbz	x12, 0x43380
0000000000043328	ldr	x0, [x12]
000000000004332c	cbz	x0, 0x43380
0000000000043330	sub	x12, x9, #0x1
0000000000043334	b	0x4334c
0000000000043338	ldr	w14, [x0, #0x10]
000000000004333c	cmp	w14, w8
0000000000043340	b.eq	0x43480
0000000000043344	ldr	x0, [x0]
0000000000043348	cbz	x0, 0x43380
000000000004334c	ldr	x14, [x0, #0x8]
0000000000043350	cmp	x14, x8
0000000000043354	b.eq	0x43338
0000000000043358	cmp	x10, #0x1
000000000004335c	b.hi	0x43368
0000000000043360	and	x14, x14, x12
0000000000043364	b	0x43378
0000000000043368	cmp	x14, x9
000000000004336c	b.lo	0x43378
0000000000043370	udiv	x15, x14, x9
0000000000043374	msub	x14, x15, x9, x14
0000000000043378	cmp	x14, x13
000000000004337c	b.eq	0x43344
0000000000043380	add	x0, sp, #0x8
0000000000043384	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000043388	ldp	x8, x9, [x21, #0x10]
000000000004338c	cmp	x9, x8
0000000000043390	b.eq	0x43590
0000000000043394	mov	x10, #0xa0a1
0000000000043398	movk	x10, #0xa0a0, lsl #16
000000000004339c	movk	x10, #0xa0a0, lsl #32
00000000000433a0	movk	x10, #0xa0a0, lsl #48
00000000000433a4	ldp	x11, x12, [x21, #0x28]
00000000000433a8	umulh	x9, x11, x10
00000000000433ac	lsr	x9, x9, #6
00000000000433b0	ldr	x13, [x8, x9, lsl #3]
00000000000433b4	mov	x14, #-0x66
00000000000433b8	madd	x15, x9, x14, x11
00000000000433bc	mov	w16, #0x28
00000000000433c0	madd	x23, x15, x16, x13
00000000000433c4	add	x11, x12, x11
00000000000433c8	umulh	x10, x11, x10
00000000000433cc	lsr	x10, x10, #6
00000000000433d0	ldr	x12, [x8, x10, lsl #3]
00000000000433d4	madd	x10, x10, x14, x11
00000000000433d8	madd	x26, x10, x16, x12
00000000000433dc	cmp	x26, x23
00000000000433e0	b.eq	0x43590
00000000000433e4	add	x27, x8, x9, lsl #3
00000000000433e8	adr	x28, #0x14ce4
00000000000433ec	nop
00000000000433f0	b	0x433fc
00000000000433f4	cmp	x26, x23
00000000000433f8	b.eq	0x43590
00000000000433fc	ldr	w9, [x23]
0000000000043400	cmp	w9, #0x3
0000000000043404	b.hi	0x43464
0000000000043408	ldr	x8, [x23, #0x8]
000000000004340c	adr	x10, #0x10
0000000000043410	ldrh	w11, [x28, x9, lsl #1]
0000000000043414	add	x10, x10, x11, lsl #2
0000000000043418	br	x10
000000000004341c	ldr	x1, [x21, #0xd8]
0000000000043420	mov	x0, x8
0000000000043424	bl	__ZN12_GLOBAL__N_16Future14cancelUnlockedEP11MemoryState
0000000000043428	b	0x43464
000000000004342c	ldp	x1, x22, [x23, #0x10]
0000000000043430	cbz	x1, 0x43440
0000000000043434	ldr	x8, [x21, #0xd8]
0000000000043438	add	x0, x8, #0x8
000000000004343c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000043440	ldr	x1, [x21, #0xd8]
0000000000043444	mov	x0, x22
0000000000043448	bl	__ZN12_GLOBAL__N_16Future14cancelUnlockedEP11MemoryState
000000000004344c	b	0x43464
0000000000043450	cbz	x8, 0x43464
0000000000043454	ldr	x9, [x21, #0xd8]
0000000000043458	add	x0, x9, #0x8
000000000004345c	mov	x1, x8
0000000000043460	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000043464	add	x23, x23, #0x28
0000000000043468	ldr	x8, [x27]
000000000004346c	sub	x8, x23, x8
0000000000043470	cmp	x8, #0xff0
0000000000043474	b.ne	0x433f4
0000000000043478	ldr	x23, [x27, #0x8]!
000000000004347c	b	0x433f4
0000000000043480	cmp	x10, #0x1
0000000000043484	b.hi	0x43490
0000000000043488	and	x8, x12, x8
000000000004348c	b	0x434a0
0000000000043490	cmp	x9, x8
0000000000043494	b.hi	0x434a0
0000000000043498	udiv	x13, x8, x9
000000000004349c	msub	x8, x13, x9, x8
00000000000434a0	ldr	x14, [x11, x8, lsl #3]
00000000000434a4	mov	x13, x14
00000000000434a8	ldr	x14, [x14]
00000000000434ac	cmp	x14, x0
00000000000434b0	b.ne	0x434a4
00000000000434b4	add	x14, x22, #0xa8
00000000000434b8	cmp	x13, x14
00000000000434bc	b.eq	0x434ec
00000000000434c0	ldr	x14, [x13, #0x8]
00000000000434c4	cmp	x10, #0x1
00000000000434c8	b.hi	0x434d4
00000000000434cc	and	x14, x14, x12
00000000000434d0	b	0x434e4
00000000000434d4	cmp	x14, x9
00000000000434d8	b.lo	0x434e4
00000000000434dc	udiv	x15, x14, x9
00000000000434e0	msub	x14, x15, x9, x14
00000000000434e4	cmp	x14, x8
00000000000434e8	b.eq	0x43524
00000000000434ec	ldr	x14, [x0]
00000000000434f0	cbz	x14, 0x43520
00000000000434f4	ldr	x14, [x14, #0x8]
00000000000434f8	cmp	x10, #0x1
00000000000434fc	b.hi	0x43508
0000000000043500	and	x14, x14, x12
0000000000043504	b	0x43518
0000000000043508	cmp	x14, x9
000000000004350c	b.lo	0x43518
0000000000043510	udiv	x15, x14, x9
0000000000043514	msub	x14, x15, x9, x14
0000000000043518	cmp	x14, x8
000000000004351c	b.eq	0x43524
0000000000043520	str	xzr, [x11, x8, lsl #3]
0000000000043524	ldr	x11, [x0]
0000000000043528	cbz	x11, 0x43564
000000000004352c	ldr	x14, [x11, #0x8]
0000000000043530	cmp	x10, #0x1
0000000000043534	b.hi	0x43540
0000000000043538	and	x14, x14, x12
000000000004353c	b	0x43550
0000000000043540	cmp	x14, x9
0000000000043544	b.lo	0x43550
0000000000043548	udiv	x10, x14, x9
000000000004354c	msub	x14, x10, x9, x14
0000000000043550	cmp	x14, x8
0000000000043554	b.eq	0x43564
0000000000043558	ldr	x8, [x22, #0x98]
000000000004355c	str	x13, [x8, x14, lsl #3]
0000000000043560	ldr	x11, [x0]
0000000000043564	str	x11, [x13]
0000000000043568	str	xzr, [x0]
000000000004356c	ldr	x8, [x22, #0xb0]
0000000000043570	sub	x8, x8, #0x1
0000000000043574	str	x8, [x22, #0xb0]
0000000000043578	bl	0x55b7c ; symbol stub for: _free
000000000004357c	add	x0, sp, #0x8
0000000000043580	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000043584	ldp	x8, x9, [x21, #0x10]
0000000000043588	cmp	x9, x8
000000000004358c	b.ne	0x43394
0000000000043590	ldr	x23, [x21, #0x38]
0000000000043594	add	x22, x21, #0x40
0000000000043598	b	0x435a0
000000000004359c	mov	x23, x9
00000000000435a0	cmp	x23, x22
00000000000435a4	b.eq	0x43604
00000000000435a8	ldr	x1, [x23, #0x28]
00000000000435ac	cbz	x1, 0x435bc
00000000000435b0	ldr	x8, [x21, #0xd8]
00000000000435b4	add	x0, x8, #0x8
00000000000435b8	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
00000000000435bc	ldr	x8, [x23, #0x8]
00000000000435c0	cbz	x8, 0x435d4
00000000000435c4	mov	x23, x8
00000000000435c8	ldr	x8, [x8]
00000000000435cc	cbnz	x8, 0x435c4
00000000000435d0	b	0x435a0
00000000000435d4	mov	x8, x23
00000000000435d8	ldr	x9, [x8, #0x10]!
00000000000435dc	ldr	x10, [x9]
00000000000435e0	cmp	x10, x23
00000000000435e4	b.eq	0x4359c
00000000000435e8	ldr	x9, [x8]
00000000000435ec	mov	x8, x9
00000000000435f0	ldr	x23, [x8, #0x10]!
00000000000435f4	ldr	x10, [x23]
00000000000435f8	cmp	x10, x9
00000000000435fc	b.ne	0x435e8
0000000000043600	b	0x435a0
0000000000043604	ldr	x1, [x21, #0x50]
0000000000043608	cbz	x1, 0x43618
000000000004360c	ldr	x8, [x21, #0xd8]
0000000000043610	add	x0, x8, #0x8
0000000000043614	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000043618	ldr	x26, [x21, #0xd8]
000000000004361c	add	x22, x26, #0x138
0000000000043620	mov	w8, #0x1
0000000000043624	ldaxr	w23, [x22]
0000000000043628	stlxr	w9, w8, [x22]
000000000004362c	cbnz	w9, 0x43624
0000000000043630	add	x0, x21, #0x58
0000000000043634	bl	0x55db0 ; symbol stub for: _pthread_mutex_destroy
0000000000043638	add	x0, x21, #0x98
000000000004363c	bl	0x55d50 ; symbol stub for: _pthread_cond_destroy
0000000000043640	cbz	x26, 0x43674
0000000000043644	ldaxr	w8, [x22]
0000000000043648	stlxr	w9, w23, [x22]
000000000004364c	cbnz	w9, 0x43644
0000000000043650	cbnz	w23, 0x43674
0000000000043654	cmp	w8, #0x1
0000000000043658	b.ne	0x43674
000000000004365c	adr	x8, #0x50ead
0000000000043660	nop
0000000000043664	ldarb	w8, [x8]
0000000000043668	tbz	w8, #0x0, 0x43674
000000000004366c	mov	x0, x22
0000000000043670	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043674	add	x22, x21, #0x8
0000000000043678	ldr	x0, [x21, #0x40]
000000000004367c	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
0000000000043680	mov	x0, x22
0000000000043684	bl	__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev
0000000000043688	mov	x0, x21
000000000004368c	bl	0x55b7c ; symbol stub for: _free
0000000000043690	ldr	x8, [x20]
0000000000043694	add	x8, x8, #0x138
0000000000043698	mov	w9, #0x1
000000000004369c	ldaxr	wzr, [x8]
00000000000436a0	stlxr	w10, w9, [x8]
00000000000436a4	cbnz	w10, 0x4369c
00000000000436a8	ldr	x21, [x20]
00000000000436ac	nop
00000000000436b0	ldr	x0, #0x510b8
00000000000436b4	cbz	x0, 0x436c0
00000000000436b8	bl	0x55d8c ; symbol stub for: _pthread_getspecific
00000000000436bc	cbz	x0, 0x436d4
00000000000436c0	adrp	x0, 55 ; 0x7a000
00000000000436c4	add	x0, x0, #0x4e0
00000000000436c8	ldr	x8, [x0]
00000000000436cc	blr	x8
00000000000436d0	str	xzr, [x0]
00000000000436d4	adr	x0, #0x5112c
00000000000436d8	nop
00000000000436dc	bl	0x55918 ; symbol stub for: __ZNSt3__115recursive_mutex4lockEv
00000000000436e0	adr	x9, #0x51110
00000000000436e4	nop
00000000000436e8	ldp	x8, x9, [x9]
00000000000436ec	cmp	x9, x21
00000000000436f0	b.eq	0x43750
00000000000436f4	cmp	x8, x21
00000000000436f8	b.eq	0x43764
00000000000436fc	ldr	x23, [x21, #0x158]
0000000000043700	ldr	x22, [x23, #0x150]
0000000000043704	str	xzr, [x23, #0x150]
0000000000043708	ldr	x8, [x21, #0x150]
000000000004370c	str	xzr, [x21, #0x150]
0000000000043710	ldr	x21, [x23, #0x150]
0000000000043714	str	x8, [x23, #0x150]
0000000000043718	cbz	x21, 0x43730
000000000004371c	mov	x0, x21
0000000000043720	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
0000000000043724	mov	x0, x21
0000000000043728	bl	0x55b7c ; symbol stub for: _free
000000000004372c	ldr	x8, [x23, #0x150]
0000000000043730	cbz	x8, 0x43738
0000000000043734	str	x23, [x8, #0x158]
0000000000043738	cbz	x22, 0x43794
000000000004373c	mov	x0, x22
0000000000043740	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
0000000000043744	mov	x0, x22
0000000000043748	bl	0x55b7c ; symbol stub for: _free
000000000004374c	b	0x43794
0000000000043750	ldr	x9, [x21, #0x158]
0000000000043754	adrp	x10, 81 ; 0x94000
0000000000043758	str	x9, [x10, #0x7f8]
000000000004375c	cmp	x8, x21
0000000000043760	b.ne	0x436fc
0000000000043764	ldr	x9, [x21, #0x150]
0000000000043768	str	xzr, [x21, #0x150]
000000000004376c	adrp	x22, 81 ; 0x94000
0000000000043770	str	x9, [x22, #0x7f0]
0000000000043774	cbz	x8, 0x4378c
0000000000043778	mov	x0, x21
000000000004377c	bl	__ZNSt3__116allocator_traitsIN6kotlin11std_support9allocatorINS1_14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS3_IS6_EEE4NodeEEEE9__destroyISA_EEvNS_17integral_constantIbLb0EEERSB_PT_
0000000000043780	mov	x0, x21
0000000000043784	bl	0x55b7c ; symbol stub for: _free
0000000000043788	ldr	x9, [x22, #0x7f0]
000000000004378c	cbz	x9, 0x43794
0000000000043790	str	xzr, [x9, #0x158]
0000000000043794	adr	x0, #0x5106c
0000000000043798	nop
000000000004379c	bl	0x55924 ; symbol stub for: __ZNSt3__115recursive_mutex6unlockEv
00000000000437a0	mov	x0, x20
00000000000437a4	bl	0x55b7c ; symbol stub for: _free
00000000000437a8	bl	__ZN12_GLOBAL__N_18theStateEv
00000000000437ac	mov	x20, x0
00000000000437b0	str	x0, [sp, #0x8]
00000000000437b4	strb	wzr, [sp, #0x10]
00000000000437b8	str	xzr, [sp, #0x18]
00000000000437bc	bl	0x55dc8 ; symbol stub for: _pthread_mutex_lock
00000000000437c0	ldr	x8, [x20, #0xc8]
00000000000437c4	cbz	x8, 0x4399c
00000000000437c8	fmov	d0, x8
00000000000437cc	cnt.8b	v0, v0
00000000000437d0	uaddlv.8b	h0, v0
00000000000437d4	fmov	w9, s0
00000000000437d8	cmp	x9, #0x1
00000000000437dc	b.hi	0x437ec
00000000000437e0	sub	x10, x8, #0x1
00000000000437e4	and	x10, x10, x25
00000000000437e8	b	0x43800
00000000000437ec	mov	x10, x25
00000000000437f0	cmp	x8, x25
00000000000437f4	b.hi	0x43800
00000000000437f8	udiv	x10, x25, x8
00000000000437fc	msub	x10, x10, x8, x25
0000000000043800	ldr	x11, [x20, #0xc0]
0000000000043804	ldr	x11, [x11, x10, lsl #3]
0000000000043808	cbz	x11, 0x4399c
000000000004380c	ldr	x21, [x11]
0000000000043810	cbz	x21, 0x4399c
0000000000043814	sub	x11, x8, #0x1
0000000000043818	b	0x43830
000000000004381c	ldr	w12, [x21, #0x10]
0000000000043820	cmp	w12, w25
0000000000043824	b.eq	0x43868
0000000000043828	ldr	x21, [x21]
000000000004382c	cbz	x21, 0x4399c
0000000000043830	ldr	x12, [x21, #0x8]
0000000000043834	cmp	x12, x25
0000000000043838	b.eq	0x4381c
000000000004383c	cmp	x9, #0x1
0000000000043840	b.hi	0x4384c
0000000000043844	and	x12, x12, x11
0000000000043848	b	0x4385c
000000000004384c	cmp	x12, x8
0000000000043850	b.lo	0x4385c
0000000000043854	udiv	x13, x12, x8
0000000000043858	msub	x12, x13, x8, x12
000000000004385c	cmp	x12, x10
0000000000043860	b.eq	0x43828
0000000000043864	b	0x4399c
0000000000043868	ldr	x0, [x21, #0x18]
000000000004386c	bl	0x55d80 ; symbol stub for: _pthread_detach
0000000000043870	ldr	x9, [x20, #0xc8]
0000000000043874	ldr	x8, [x21, #0x8]
0000000000043878	fmov	d0, x9
000000000004387c	cnt.8b	v0, v0
0000000000043880	uaddlv.8b	h0, v0
0000000000043884	fmov	w11, s0
0000000000043888	cmp	x11, #0x1
000000000004388c	b.hi	0x4389c
0000000000043890	sub	x10, x9, #0x1
0000000000043894	and	x8, x10, x8
0000000000043898	b	0x438ac
000000000004389c	cmp	x8, x9
00000000000438a0	b.lo	0x438ac
00000000000438a4	udiv	x10, x8, x9
00000000000438a8	msub	x8, x10, x9, x8
00000000000438ac	ldr	x12, [x20, #0xc0]
00000000000438b0	ldr	x13, [x12, x8, lsl #3]
00000000000438b4	mov	x10, x13
00000000000438b8	ldr	x13, [x13]
00000000000438bc	cmp	x13, x21
00000000000438c0	b.ne	0x438b4
00000000000438c4	add	x13, x20, #0xd0
00000000000438c8	cmp	x10, x13
00000000000438cc	b.eq	0x43900
00000000000438d0	ldr	x13, [x10, #0x8]
00000000000438d4	cmp	x11, #0x1
00000000000438d8	b.hi	0x438e8
00000000000438dc	sub	x14, x9, #0x1
00000000000438e0	and	x13, x13, x14
00000000000438e4	b	0x438f8
00000000000438e8	cmp	x13, x9
00000000000438ec	b.lo	0x438f8
00000000000438f0	udiv	x14, x13, x9
00000000000438f4	msub	x13, x14, x9, x13
00000000000438f8	cmp	x13, x8
00000000000438fc	b.eq	0x4393c
0000000000043900	ldr	x13, [x21]
0000000000043904	cbz	x13, 0x43938
0000000000043908	ldr	x13, [x13, #0x8]
000000000004390c	cmp	x11, #0x1
0000000000043910	b.hi	0x43920
0000000000043914	sub	x14, x9, #0x1
0000000000043918	and	x13, x13, x14
000000000004391c	b	0x43930
0000000000043920	cmp	x13, x9
0000000000043924	b.lo	0x43930
0000000000043928	udiv	x14, x13, x9
000000000004392c	msub	x13, x14, x9, x13
0000000000043930	cmp	x13, x8
0000000000043934	b.eq	0x4393c
0000000000043938	str	xzr, [x12, x8, lsl #3]
000000000004393c	ldr	x12, [x21]
0000000000043940	cbz	x12, 0x43980
0000000000043944	ldr	x13, [x12, #0x8]
0000000000043948	cmp	x11, #0x1
000000000004394c	b.hi	0x4395c
0000000000043950	sub	x9, x9, #0x1
0000000000043954	and	x13, x13, x9
0000000000043958	b	0x4396c
000000000004395c	cmp	x13, x9
0000000000043960	b.lo	0x4396c
0000000000043964	udiv	x11, x13, x9
0000000000043968	msub	x13, x11, x9, x13
000000000004396c	cmp	x13, x8
0000000000043970	b.eq	0x43980
0000000000043974	ldr	x8, [x20, #0xc0]
0000000000043978	str	x10, [x8, x13, lsl #3]
000000000004397c	ldr	x12, [x21]
0000000000043980	str	x12, [x10]
0000000000043984	str	xzr, [x21]
0000000000043988	ldr	x8, [x20, #0xd8]
000000000004398c	sub	x8, x8, #0x1
0000000000043990	str	x8, [x20, #0xd8]
0000000000043994	mov	x0, x21
0000000000043998	bl	0x55b7c ; symbol stub for: _free
000000000004399c	add	x0, sp, #0x8
00000000000439a0	bl	__ZN12_GLOBAL__N_16LockerD1Ev
00000000000439a4	mov	x0, x19
00000000000439a8	blr	x24
00000000000439ac	str	xzr, [x0]
00000000000439b0	ldp	x29, x30, [sp, #0x70]
00000000000439b4	ldp	x20, x19, [sp, #0x60]
00000000000439b8	ldp	x22, x21, [sp, #0x50]
00000000000439bc	ldp	x24, x23, [sp, #0x40]
00000000000439c0	ldp	x26, x25, [sp, #0x30]
00000000000439c4	ldp	x28, x27, [sp, #0x20]
00000000000439c8	add	sp, sp, #0x80
00000000000439cc	ret
00000000000439d0	adr	x2, #0x197a2 ; literal pool for: "Cannot be in queue"
00000000000439d4	nop
00000000000439d8	mov	w0, #0x0
00000000000439dc	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
00000000000439e0	brk	#0x1
00000000000439e4	mov	x19, x0
00000000000439e8	add	x0, sp, #0x8
00000000000439ec	bl	__ZN12_GLOBAL__N_16LockerD1Ev
00000000000439f0	mov	x0, x19
00000000000439f4	bl	0x558ac ; symbol stub for: __Unwind_Resume
00000000000439f8	bl	___clang_call_terminate
00000000000439fc	mov	x19, x0
0000000000043a00	cbz	x27, 0x43a34
0000000000043a04	ldaxr	w8, [x23]
0000000000043a08	stlxr	w9, w26, [x23]
0000000000043a0c	cbnz	w9, 0x43a04
0000000000043a10	cbnz	w26, 0x43a34
0000000000043a14	cmp	w8, #0x1
0000000000043a18	b.ne	0x43a34
0000000000043a1c	adr	x8, #0x50aed
0000000000043a20	nop
0000000000043a24	ldarb	w8, [x8]
0000000000043a28	tbz	w8, #0x0, 0x43a34
0000000000043a2c	mov	x0, x23
0000000000043a30	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043a34	mov	x0, x19
0000000000043a38	bl	0x558ac ; symbol stub for: __Unwind_Resume
0000000000043a3c	mov	x19, x0
0000000000043a40	cbz	x26, 0x43a80
0000000000043a44	ldaxr	w8, [x22]
0000000000043a48	stlxr	w9, w23, [x22]
0000000000043a4c	cbnz	w9, 0x43a44
0000000000043a50	cbnz	w23, 0x43a80
0000000000043a54	cmp	w8, #0x1
0000000000043a58	b.ne	0x43a80
0000000000043a5c	adr	x8, #0x50aad
0000000000043a60	nop
0000000000043a64	ldarb	w8, [x8]
0000000000043a68	tbz	w8, #0x0, 0x43a80
0000000000043a6c	mov	x0, x22
0000000000043a70	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043a74	b	0x43a80
0000000000043a78	b	0x43a7c
0000000000043a7c	mov	x19, x0
0000000000043a80	add	x0, x21, #0x38
0000000000043a84	bl	__ZNSt3__18multisetIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEED1Ev
0000000000043a88	add	x0, x21, #0x8
0000000000043a8c	bl	__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev
0000000000043a90	mov	x0, x19
0000000000043a94	bl	___clang_call_terminate
__ZN5konanL16onThreadExitInitEv:
0000000000043a98	adr	x0, #0x50cd0
0000000000043a9c	nop
0000000000043aa0	adr	x1, #0xc
0000000000043aa4	nop
0000000000043aa8	b	0x55d98 ; symbol stub for: _pthread_key_create
__ZN5konanL20onThreadExitCallbackEPv:
0000000000043aac	stp	x20, x19, [sp, #-0x20]!
0000000000043ab0	stp	x29, x30, [sp, #0x10]
0000000000043ab4	add	x29, sp, #0x10
0000000000043ab8	mov	x19, x0
0000000000043abc	nop
0000000000043ac0	ldr	x0, #0x50ca8
0000000000043ac4	mov	x1, #0x0
0000000000043ac8	bl	0x55e04 ; symbol stub for: _pthread_setspecific
0000000000043acc	cbz	x19, 0x43aec
0000000000043ad0	ldp	x8, x0, [x19, #0x8]
0000000000043ad4	blr	x8
0000000000043ad8	ldr	x20, [x19]
0000000000043adc	mov	x0, x19
0000000000043ae0	bl	0x55b7c ; symbol stub for: _free
0000000000043ae4	mov	x19, x20
0000000000043ae8	cbnz	x20, 0x43ad0
0000000000043aec	ldp	x29, x30, [sp, #0x10]
0000000000043af0	ldp	x20, x19, [sp], #0x20
0000000000043af4	ret
__ZN12_GLOBAL__N_18theStateEv:
0000000000043af8	sub	sp, sp, #0x70
0000000000043afc	stp	x28, x27, [sp, #0x10]
0000000000043b00	stp	x26, x25, [sp, #0x20]
0000000000043b04	stp	x24, x23, [sp, #0x30]
0000000000043b08	stp	x22, x21, [sp, #0x40]
0000000000043b0c	stp	x20, x19, [sp, #0x50]
0000000000043b10	stp	x29, x30, [sp, #0x60]
0000000000043b14	add	x29, sp, #0x60
0000000000043b18	adrp	x25, 81 ; 0x94000
0000000000043b1c	ldr	x20, [x25, #0x778]
0000000000043b20	cbnz	x20, 0x43d20
0000000000043b24	mov	w0, #0x1
0000000000043b28	mov	w1, #0xf8
0000000000043b2c	bl	0x55aec ; symbol stub for: _calloc
0000000000043b30	mov	x19, x0
0000000000043b34	adrp	x21, 55 ; 0x7a000
0000000000043b38	add	x21, x21, #0x4e0
0000000000043b3c	cbz	x0, 0x43bf0
0000000000043b40	movi.16b	v0, #0x0
0000000000043b44	mov	x22, x19
0000000000043b48	stp	q0, q0, [x22, #0x70]!
0000000000043b4c	mov	w8, #0x3f800000
0000000000043b50	str	w8, [x22, #0x20]
0000000000043b54	mov	x23, x22
0000000000043b58	str	q0, [x23, #0x28]!
0000000000043b5c	stur	q0, [x22, #0x38]
0000000000043b60	str	w8, [x22, #0x48]
0000000000043b64	mov	x24, x22
0000000000043b68	str	q0, [x24, #0x50]!
0000000000043b6c	str	q0, [x22, #0x60]
0000000000043b70	str	w8, [x22, #0x70]
0000000000043b74	ldr	x8, [x21]
0000000000043b78	mov	x0, x21
0000000000043b7c	blr	x8
0000000000043b80	ldr	x27, [x0]
0000000000043b84	add	x20, x27, #0x138
0000000000043b88	mov	w8, #0x1
0000000000043b8c	ldaxr	w26, [x20]
0000000000043b90	stlxr	w9, w8, [x20]
0000000000043b94	cbnz	w9, 0x43b8c
0000000000043b98	mov	x0, x19
0000000000043b9c	mov	x1, #0x0
0000000000043ba0	bl	0x55dbc ; symbol stub for: _pthread_mutex_init
0000000000043ba4	add	x0, x19, #0x40
0000000000043ba8	mov	x1, #0x0
0000000000043bac	bl	0x55d5c ; symbol stub for: _pthread_cond_init
0000000000043bb0	movi.2s	v0, #0x1
0000000000043bb4	str	d0, [x19, #0xe8]
0000000000043bb8	str	wzr, [x19, #0xf0]
0000000000043bbc	cbz	x27, 0x43bf0
0000000000043bc0	ldaxr	w8, [x20]
0000000000043bc4	stlxr	w9, w26, [x20]
0000000000043bc8	cbnz	w9, 0x43bc0
0000000000043bcc	cbnz	w26, 0x43bf0
0000000000043bd0	cmp	w8, #0x1
0000000000043bd4	b.ne	0x43bf0
0000000000043bd8	adr	x8, #0x50931
0000000000043bdc	nop
0000000000043be0	ldarb	w8, [x8]
0000000000043be4	tbz	w8, #0x0, 0x43bf0
0000000000043be8	mov	x0, x20
0000000000043bec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043bf0	adr	x8, #0x50b88
0000000000043bf4	nop
0000000000043bf8	ldaxr	x20, [x8]
0000000000043bfc	cbnz	x20, 0x43d10
0000000000043c00	stlxr	w9, x19, [x8]
0000000000043c04	cbnz	w9, 0x43bf8
0000000000043c08	mov	w8, #0x1
0000000000043c0c	tbnz	w8, #0x0, 0x43d1c
0000000000043c10	ldr	x8, [x21]
0000000000043c14	mov	x0, x21
0000000000043c18	blr	x8
0000000000043c1c	ldr	x8, [x0]
0000000000043c20	str	x8, [sp]
0000000000043c24	strb	wzr, [sp, #0xc]
0000000000043c28	add	x8, x8, #0x138
0000000000043c2c	mov	w9, #0x1
0000000000043c30	ldaxr	w10, [x8]
0000000000043c34	stlxr	w11, w9, [x8]
0000000000043c38	cbnz	w11, 0x43c30
0000000000043c3c	str	w10, [sp, #0x8]
0000000000043c40	mov	x0, x19
0000000000043c44	bl	0x55db0 ; symbol stub for: _pthread_mutex_destroy
0000000000043c48	add	x0, x19, #0x40
0000000000043c4c	bl	0x55d50 ; symbol stub for: _pthread_cond_destroy
0000000000043c50	ldr	x9, [sp]
0000000000043c54	cbz	x9, 0x43c8c
0000000000043c58	ldr	w8, [sp, #0x8]
0000000000043c5c	add	x0, x9, #0x138
0000000000043c60	ldaxr	w9, [x0]
0000000000043c64	stlxr	w10, w8, [x0]
0000000000043c68	cbnz	w10, 0x43c60
0000000000043c6c	cbnz	w8, 0x43c8c
0000000000043c70	cmp	w9, #0x1
0000000000043c74	b.ne	0x43c8c
0000000000043c78	adr	x8, #0x50891
0000000000043c7c	nop
0000000000043c80	ldarb	w8, [x8]
0000000000043c84	tbz	w8, #0x0, 0x43c8c
0000000000043c88	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043c8c	ldr	x0, [x19, #0xd0]
0000000000043c90	cbz	x0, 0x43ca4
0000000000043c94	ldr	x21, [x0]
0000000000043c98	bl	0x55b7c ; symbol stub for: _free
0000000000043c9c	mov	x0, x21
0000000000043ca0	cbnz	x21, 0x43c94
0000000000043ca4	ldr	x0, [x19, #0xc0]
0000000000043ca8	str	xzr, [x19, #0xc0]
0000000000043cac	cbz	x0, 0x43cb4
0000000000043cb0	bl	0x55b7c ; symbol stub for: _free
0000000000043cb4	ldr	x0, [x19, #0xa8]
0000000000043cb8	cbz	x0, 0x43ccc
0000000000043cbc	ldr	x21, [x0]
0000000000043cc0	bl	0x55b7c ; symbol stub for: _free
0000000000043cc4	mov	x0, x21
0000000000043cc8	cbnz	x21, 0x43cbc
0000000000043ccc	ldr	x0, [x19, #0x98]
0000000000043cd0	str	xzr, [x19, #0x98]
0000000000043cd4	cbz	x0, 0x43cdc
0000000000043cd8	bl	0x55b7c ; symbol stub for: _free
0000000000043cdc	ldr	x0, [x19, #0x80]
0000000000043ce0	cbz	x0, 0x43cf4
0000000000043ce4	ldr	x21, [x0]
0000000000043ce8	bl	0x55b7c ; symbol stub for: _free
0000000000043cec	mov	x0, x21
0000000000043cf0	cbnz	x21, 0x43ce4
0000000000043cf4	ldr	x0, [x19, #0x70]
0000000000043cf8	str	xzr, [x19, #0x70]
0000000000043cfc	cbz	x0, 0x43d04
0000000000043d00	bl	0x55b7c ; symbol stub for: _free
0000000000043d04	mov	x0, x19
0000000000043d08	bl	0x55b7c ; symbol stub for: _free
0000000000043d0c	b	0x43d20
0000000000043d10	mov	w8, #0x0
0000000000043d14	clrex
0000000000043d18	tbz	w8, #0x0, 0x43c10
0000000000043d1c	ldr	x20, [x25, #0x778]
0000000000043d20	mov	x0, x20
0000000000043d24	ldp	x29, x30, [sp, #0x60]
0000000000043d28	ldp	x20, x19, [sp, #0x50]
0000000000043d2c	ldp	x22, x21, [sp, #0x40]
0000000000043d30	ldp	x24, x23, [sp, #0x30]
0000000000043d34	ldp	x26, x25, [sp, #0x20]
0000000000043d38	ldp	x28, x27, [sp, #0x10]
0000000000043d3c	add	sp, sp, #0x70
0000000000043d40	ret
0000000000043d44	mov	x20, x0
0000000000043d48	mov	x0, sp
0000000000043d4c	bl	__ZN6kotlin16ThreadStateGuardD1Ev
0000000000043d50	add	x0, x19, #0xc0
0000000000043d54	bl	__ZNSt3__113unordered_mapIiP17_opaque_pthread_tNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev
0000000000043d58	add	x0, x19, #0x98
0000000000043d5c	bl	__ZNSt3__113unordered_mapIiP6WorkerNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev
0000000000043d60	add	x0, x19, #0x70
0000000000043d64	bl	__ZNSt3__113unordered_mapIiPN12_GLOBAL__N_16FutureENS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS3_EEEEED1Ev
0000000000043d68	mov	x0, x20
0000000000043d6c	bl	___clang_call_terminate
0000000000043d70	mov	x21, x0
0000000000043d74	cbz	x27, 0x43da8
0000000000043d78	ldaxr	w8, [x20]
0000000000043d7c	stlxr	w9, w26, [x20]
0000000000043d80	cbnz	w9, 0x43d78
0000000000043d84	cbnz	w26, 0x43da8
0000000000043d88	cmp	w8, #0x1
0000000000043d8c	b.ne	0x43da8
0000000000043d90	adr	x8, #0x50779
0000000000043d94	nop
0000000000043d98	ldarb	w8, [x8]
0000000000043d9c	tbz	w8, #0x0, 0x43da8
0000000000043da0	mov	x0, x20
0000000000043da4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043da8	mov	x0, x19
0000000000043dac	mov	x1, x24
0000000000043db0	mov	x2, x23
0000000000043db4	mov	x3, x22
0000000000043db8	bl	__ZN12_GLOBAL__N_18theStateEv.cold.1
0000000000043dbc	mov	x0, x19
0000000000043dc0	bl	0x55b7c ; symbol stub for: _free
0000000000043dc4	mov	x0, x21
0000000000043dc8	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZN12_GLOBAL__N_16LockerD1Ev:
0000000000043dcc	stp	x22, x21, [sp, #-0x30]!
0000000000043dd0	stp	x20, x19, [sp, #0x10]
0000000000043dd4	stp	x29, x30, [sp, #0x20]
0000000000043dd8	add	x29, sp, #0x20
0000000000043ddc	mov	x19, x0
0000000000043de0	ldrb	w8, [x0, #0x8]
0000000000043de4	cbz	w8, 0x43e08
0000000000043de8	ldr	x20, [x19, #0x10]
0000000000043dec	cbz	x20, 0x43e14
0000000000043df0	add	x8, x20, #0x138
0000000000043df4	mov	w9, #0x1
0000000000043df8	ldaxr	w21, [x8]
0000000000043dfc	stlxr	w10, w9, [x8]
0000000000043e00	cbnz	w10, 0x43df8
0000000000043e04	b	0x43e3c
0000000000043e08	mov	x20, #0x0
0000000000043e0c	mov	w21, #0x1
0000000000043e10	b	0x43e3c
0000000000043e14	adrp	x0, 55 ; 0x7a000
0000000000043e18	add	x0, x0, #0x4e0
0000000000043e1c	ldr	x8, [x0]
0000000000043e20	blr	x8
0000000000043e24	ldr	x20, [x0]
0000000000043e28	add	x8, x20, #0x138
0000000000043e2c	mov	w9, #0x1
0000000000043e30	ldaxr	w21, [x8]
0000000000043e34	stlxr	w10, w9, [x8]
0000000000043e38	cbnz	w10, 0x43e30
0000000000043e3c	ldr	x0, [x19]
0000000000043e40	bl	0x55dd4 ; symbol stub for: _pthread_mutex_unlock
0000000000043e44	cbz	x20, 0x43e78
0000000000043e48	add	x0, x20, #0x138
0000000000043e4c	ldaxr	w8, [x0]
0000000000043e50	stlxr	w9, w21, [x0]
0000000000043e54	cbnz	w9, 0x43e4c
0000000000043e58	cbnz	w21, 0x43e78
0000000000043e5c	cmp	w8, #0x1
0000000000043e60	b.ne	0x43e78
0000000000043e64	adr	x8, #0x506a5
0000000000043e68	nop
0000000000043e6c	ldarb	w8, [x8]
0000000000043e70	tbz	w8, #0x0, 0x43e78
0000000000043e74	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043e78	mov	x0, x19
0000000000043e7c	ldp	x29, x30, [sp, #0x20]
0000000000043e80	ldp	x20, x19, [sp, #0x10]
0000000000043e84	ldp	x22, x21, [sp], #0x30
0000000000043e88	ret
0000000000043e8c	mov	x19, x0
0000000000043e90	cbz	x20, 0x43ec4
0000000000043e94	add	x0, x20, #0x138
0000000000043e98	ldaxr	w8, [x0]
0000000000043e9c	stlxr	w9, w21, [x0]
0000000000043ea0	cbnz	w9, 0x43e98
0000000000043ea4	cbnz	w21, 0x43ec4
0000000000043ea8	cmp	w8, #0x1
0000000000043eac	b.ne	0x43ec4
0000000000043eb0	adr	x8, #0x50659
0000000000043eb4	nop
0000000000043eb8	ldarb	w8, [x8]
0000000000043ebc	tbz	w8, #0x0, 0x43ec4
0000000000043ec0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000043ec4	mov	x0, x19
0000000000043ec8	bl	___clang_call_terminate
__ZNSt3__113unordered_mapIiP17_opaque_pthread_tNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev:
0000000000043ecc	stp	x20, x19, [sp, #-0x20]!
0000000000043ed0	stp	x29, x30, [sp, #0x10]
0000000000043ed4	add	x29, sp, #0x10
0000000000043ed8	mov	x19, x0
0000000000043edc	ldr	x0, [x0, #0x10]
0000000000043ee0	cbz	x0, 0x43ef4
0000000000043ee4	ldr	x20, [x0]
0000000000043ee8	bl	0x55b7c ; symbol stub for: _free
0000000000043eec	mov	x0, x20
0000000000043ef0	cbnz	x20, 0x43ee4
0000000000043ef4	ldr	x0, [x19]
0000000000043ef8	str	xzr, [x19]
0000000000043efc	cbz	x0, 0x43f04
0000000000043f00	bl	0x55b7c ; symbol stub for: _free
0000000000043f04	mov	x0, x19
0000000000043f08	ldp	x29, x30, [sp, #0x10]
0000000000043f0c	ldp	x20, x19, [sp], #0x20
0000000000043f10	ret
__ZNSt3__113unordered_mapIiP6WorkerNS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS2_EEEEED1Ev:
0000000000043f14	stp	x20, x19, [sp, #-0x20]!
0000000000043f18	stp	x29, x30, [sp, #0x10]
0000000000043f1c	add	x29, sp, #0x10
0000000000043f20	mov	x19, x0
0000000000043f24	ldr	x0, [x0, #0x10]
0000000000043f28	cbz	x0, 0x43f3c
0000000000043f2c	ldr	x20, [x0]
0000000000043f30	bl	0x55b7c ; symbol stub for: _free
0000000000043f34	mov	x0, x20
0000000000043f38	cbnz	x20, 0x43f2c
0000000000043f3c	ldr	x0, [x19]
0000000000043f40	str	xzr, [x19]
0000000000043f44	cbz	x0, 0x43f4c
0000000000043f48	bl	0x55b7c ; symbol stub for: _free
0000000000043f4c	mov	x0, x19
0000000000043f50	ldp	x29, x30, [sp, #0x10]
0000000000043f54	ldp	x20, x19, [sp], #0x20
0000000000043f58	ret
__ZNSt3__113unordered_mapIiPN12_GLOBAL__N_16FutureENS_4hashIiEENS_8equal_toIiEEN6kotlin11std_support9allocatorINS_4pairIKiS3_EEEEED1Ev:
0000000000043f5c	stp	x20, x19, [sp, #-0x20]!
0000000000043f60	stp	x29, x30, [sp, #0x10]
0000000000043f64	add	x29, sp, #0x10
0000000000043f68	mov	x19, x0
0000000000043f6c	ldr	x0, [x0, #0x10]
0000000000043f70	cbz	x0, 0x43f84
0000000000043f74	ldr	x20, [x0]
0000000000043f78	bl	0x55b7c ; symbol stub for: _free
0000000000043f7c	mov	x0, x20
0000000000043f80	cbnz	x20, 0x43f74
0000000000043f84	ldr	x0, [x19]
0000000000043f88	str	xzr, [x19]
0000000000043f8c	cbz	x0, 0x43f94
0000000000043f90	bl	0x55b7c ; symbol stub for: _free
0000000000043f94	mov	x0, x19
0000000000043f98	ldp	x29, x30, [sp, #0x10]
0000000000043f9c	ldp	x20, x19, [sp], #0x20
0000000000043fa0	ret
__ZN12_GLOBAL__N_16Future14cancelUnlockedEP11MemoryState:
0000000000043fa4	sub	sp, sp, #0x60
0000000000043fa8	stp	x24, x23, [sp, #0x20]
0000000000043fac	stp	x22, x21, [sp, #0x30]
0000000000043fb0	stp	x20, x19, [sp, #0x40]
0000000000043fb4	stp	x29, x30, [sp, #0x50]
0000000000043fb8	add	x29, sp, #0x50
0000000000043fbc	mov	x20, x1
0000000000043fc0	mov	x21, x0
0000000000043fc4	add	x19, x1, #0x138
0000000000043fc8	mov	w8, #0x1
0000000000043fcc	ldaxr	w22, [x19]
0000000000043fd0	stlxr	w9, w8, [x19]
0000000000043fd4	cbnz	w9, 0x43fcc
0000000000043fd8	add	x0, x21, #0x10
0000000000043fdc	str	x0, [sp, #0x8]
0000000000043fe0	mov	w8, #0x1
0000000000043fe4	strb	w8, [sp, #0x10]
0000000000043fe8	str	x20, [sp, #0x18]
0000000000043fec	ldaxr	w23, [x19]
0000000000043ff0	stlxr	w9, w8, [x19]
0000000000043ff4	cbnz	w9, 0x43fec
0000000000043ff8	bl	0x55dc8 ; symbol stub for: _pthread_mutex_lock
0000000000043ffc	cbz	x20, 0x44030
0000000000044000	ldaxr	w8, [x19]
0000000000044004	stlxr	w9, w23, [x19]
0000000000044008	cbnz	w9, 0x44000
000000000004400c	cbnz	w23, 0x44030
0000000000044010	cmp	w8, #0x1
0000000000044014	b.ne	0x44030
0000000000044018	adr	x8, #0x504f1
000000000004401c	nop
0000000000044020	ldarb	w8, [x8]
0000000000044024	tbz	w8, #0x0, 0x44030
0000000000044028	mov	x0, x19
000000000004402c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000044030	mov	w8, #0x3
0000000000044034	str	w8, [x21]
0000000000044038	str	xzr, [x21, #0x8]
000000000004403c	add	x0, x21, #0x50
0000000000044040	bl	0x55d44 ; symbol stub for: _pthread_cond_broadcast
0000000000044044	add	x0, sp, #0x8
0000000000044048	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000004404c	bl	__ZN12_GLOBAL__N_18theStateEv
0000000000044050	mov	x21, x0
0000000000044054	str	x0, [sp, #0x8]
0000000000044058	mov	w8, #0x1
000000000004405c	strb	w8, [sp, #0x10]
0000000000044060	str	x20, [sp, #0x18]
0000000000044064	ldaxr	w23, [x19]
0000000000044068	stlxr	w9, w8, [x19]
000000000004406c	cbnz	w9, 0x44064
0000000000044070	mov	x0, x21
0000000000044074	bl	0x55dc8 ; symbol stub for: _pthread_mutex_lock
0000000000044078	cbz	x20, 0x440ac
000000000004407c	ldaxr	w8, [x19]
0000000000044080	stlxr	w9, w23, [x19]
0000000000044084	cbnz	w9, 0x4407c
0000000000044088	cbnz	w23, 0x440ac
000000000004408c	cmp	w8, #0x1
0000000000044090	b.ne	0x440ac
0000000000044094	adr	x8, #0x50475
0000000000044098	nop
000000000004409c	ldarb	w8, [x8]
00000000000440a0	tbz	w8, #0x0, 0x440ac
00000000000440a4	mov	x0, x19
00000000000440a8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000440ac	ldr	w8, [x21, #0xf0]
00000000000440b0	add	w8, w8, #0x1
00000000000440b4	str	w8, [x21, #0xf0]
00000000000440b8	add	x0, sp, #0x8
00000000000440bc	bl	__ZN12_GLOBAL__N_16LockerD1Ev
00000000000440c0	add	x0, x21, #0x40
00000000000440c4	bl	0x55d44 ; symbol stub for: _pthread_cond_broadcast
00000000000440c8	cbz	x20, 0x440fc
00000000000440cc	ldaxr	w8, [x19]
00000000000440d0	stlxr	w9, w22, [x19]
00000000000440d4	cbnz	w9, 0x440cc
00000000000440d8	cbnz	w22, 0x440fc
00000000000440dc	cmp	w8, #0x1
00000000000440e0	b.ne	0x440fc
00000000000440e4	adr	x8, #0x50425
00000000000440e8	nop
00000000000440ec	ldarb	w8, [x8]
00000000000440f0	tbz	w8, #0x0, 0x440fc
00000000000440f4	mov	x0, x19
00000000000440f8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000440fc	ldp	x29, x30, [sp, #0x50]
0000000000044100	ldp	x20, x19, [sp, #0x40]
0000000000044104	ldp	x22, x21, [sp, #0x30]
0000000000044108	ldp	x24, x23, [sp, #0x20]
000000000004410c	add	sp, sp, #0x60
0000000000044110	ret
0000000000044114	mov	x21, x0
0000000000044118	cbz	x20, 0x4417c
000000000004411c	ldaxr	w8, [x19]
0000000000044120	stlxr	w9, w23, [x19]
0000000000044124	cbnz	w9, 0x4411c
0000000000044128	b	0x44150
000000000004412c	mov	x21, x0
0000000000044130	add	x0, sp, #0x8
0000000000044134	bl	__ZN12_GLOBAL__N_16LockerD1Ev
0000000000044138	b	0x4417c
000000000004413c	mov	x21, x0
0000000000044140	cbz	x20, 0x4417c
0000000000044144	ldaxr	w8, [x19]
0000000000044148	stlxr	w9, w23, [x19]
000000000004414c	cbnz	w9, 0x44144
0000000000044150	cbnz	w23, 0x4417c
0000000000044154	cmp	w8, #0x1
0000000000044158	b.ne	0x4417c
000000000004415c	adr	x8, #0x503ad
0000000000044160	nop
0000000000044164	ldarb	w8, [x8]
0000000000044168	tbz	w8, #0x0, 0x4417c
000000000004416c	mov	x0, x19
0000000000044170	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000044174	b	0x4417c
0000000000044178	mov	x21, x0
000000000004417c	cbnz	x20, 0x44188
0000000000044180	mov	x0, x21
0000000000044184	bl	0x558ac ; symbol stub for: __Unwind_Resume
0000000000044188	ldaxr	w8, [x19]
000000000004418c	stlxr	w9, w22, [x19]
0000000000044190	cbnz	w9, 0x44188
0000000000044194	cbnz	w22, 0x44180
0000000000044198	cmp	w8, #0x1
000000000004419c	b.ne	0x44180
00000000000441a0	adr	x8, #0x50369
00000000000441a4	nop
00000000000441a8	ldarb	w8, [x8]
00000000000441ac	tbz	w8, #0x0, 0x44180
00000000000441b0	mov	x0, x19
00000000000441b4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000441b8	mov	x0, x21
00000000000441bc	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE:
00000000000441c0	cbz	x0, 0x441f4
00000000000441c4	stp	x20, x19, [sp, #-0x20]!
00000000000441c8	stp	x29, x30, [sp, #0x10]
00000000000441cc	add	x29, sp, #0x10
00000000000441d0	mov	x19, x0
00000000000441d4	ldr	x0, [x0]
00000000000441d8	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
00000000000441dc	ldr	x0, [x19, #0x8]
00000000000441e0	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
00000000000441e4	mov	x0, x19
00000000000441e8	ldp	x29, x30, [sp, #0x10]
00000000000441ec	ldp	x20, x19, [sp], #0x20
00000000000441f0	b	0x55b7c ; symbol stub for: _free
00000000000441f4	ret
__ZNSt3__15dequeIN12_GLOBAL__N_13JobEN6kotlin11std_support9allocatorIS2_EEED1Ev:
00000000000441f8	stp	x22, x21, [sp, #-0x30]!
00000000000441fc	stp	x20, x19, [sp, #0x10]
0000000000044200	stp	x29, x30, [sp, #0x20]
0000000000044204	add	x29, sp, #0x20
0000000000044208	mov	x19, x0
000000000004420c	ldp	x20, x21, [x0, #0x8]
0000000000044210	subs	x8, x21, x20
0000000000044214	b.eq	0x4429c
0000000000044218	ldr	x11, [x19, #0x20]
000000000004421c	mov	x13, #0xa0a1
0000000000044220	movk	x13, #0xa0a0, lsl #16
0000000000044224	movk	x13, #0xa0a0, lsl #32
0000000000044228	movk	x13, #0xa0a0, lsl #48
000000000004422c	umulh	x9, x11, x13
0000000000044230	lsr	x12, x9, #6
0000000000044234	ldr	x9, [x20, x12, lsl #3]
0000000000044238	mov	x14, #-0x66
000000000004423c	madd	x10, x12, x14, x11
0000000000044240	mov	w15, #0x28
0000000000044244	madd	x10, x10, x15, x9
0000000000044248	mov	x9, x19
000000000004424c	ldr	x16, [x9, #0x28]!
0000000000044250	add	x11, x16, x11
0000000000044254	umulh	x13, x11, x13
0000000000044258	lsr	x13, x13, #6
000000000004425c	ldr	x16, [x20, x13, lsl #3]
0000000000044260	madd	x11, x13, x14, x11
0000000000044264	madd	x11, x11, x15, x16
0000000000044268	cmp	x11, x10
000000000004426c	b.eq	0x442a0
0000000000044270	add	x12, x20, x12, lsl #3
0000000000044274	b	0x44280
0000000000044278	cmp	x11, x10
000000000004427c	b.eq	0x442a0
0000000000044280	add	x10, x10, #0x28
0000000000044284	ldr	x13, [x12]
0000000000044288	sub	x13, x10, x13
000000000004428c	cmp	x13, #0xff0
0000000000044290	b.ne	0x44278
0000000000044294	ldr	x10, [x12, #0x8]!
0000000000044298	b	0x44278
000000000004429c	add	x9, x19, #0x28
00000000000442a0	str	xzr, [x9]
00000000000442a4	asr	x8, x8, #3
00000000000442a8	cmp	x8, #0x3
00000000000442ac	b.lo	0x442d4
00000000000442b0	ldr	x0, [x20]
00000000000442b4	bl	0x55b7c ; symbol stub for: _free
00000000000442b8	ldp	x8, x21, [x19, #0x8]
00000000000442bc	add	x20, x8, #0x8
00000000000442c0	str	x20, [x19, #0x8]
00000000000442c4	sub	x8, x21, x20
00000000000442c8	asr	x8, x8, #3
00000000000442cc	cmp	x8, #0x2
00000000000442d0	b.hi	0x442b0
00000000000442d4	cmp	x8, #0x1
00000000000442d8	b.eq	0x442ec
00000000000442dc	cmp	x8, #0x2
00000000000442e0	b.ne	0x442f4
00000000000442e4	mov	w8, #0x66
00000000000442e8	b	0x442f0
00000000000442ec	mov	w8, #0x33
00000000000442f0	str	x8, [x19, #0x20]
00000000000442f4	cmp	x20, x21
00000000000442f8	b.eq	0x4432c
00000000000442fc	ldr	x0, [x20], #0x8
0000000000044300	bl	0x55b7c ; symbol stub for: _free
0000000000044304	cmp	x20, x21
0000000000044308	b.ne	0x442fc
000000000004430c	ldp	x9, x8, [x19, #0x8]
0000000000044310	subs	x9, x8, x9
0000000000044314	b.eq	0x4432c
0000000000044318	sub	x9, x9, #0x8
000000000004431c	mov	x10, #-0x1
0000000000044320	eor	x9, x10, x9, lsr #3
0000000000044324	add	x8, x8, x9, lsl #3
0000000000044328	str	x8, [x19, #0x10]
000000000004432c	ldr	x0, [x19]
0000000000044330	cbz	x0, 0x44338
0000000000044334	bl	0x55b7c ; symbol stub for: _free
0000000000044338	mov	x0, x19
000000000004433c	ldp	x29, x30, [sp, #0x20]
0000000000044340	ldp	x20, x19, [sp, #0x10]
0000000000044344	ldp	x22, x21, [sp], #0x30
0000000000044348	ret
__ZNSt3__18multisetIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEED1Ev:
000000000004434c	stp	x20, x19, [sp, #-0x20]!
0000000000044350	stp	x29, x30, [sp, #0x10]
0000000000044354	add	x29, sp, #0x10
0000000000044358	mov	x19, x0
000000000004435c	ldr	x0, [x0, #0x8]
0000000000044360	bl	__ZNSt3__16__treeIN12_GLOBAL__N_13JobENS1_10JobCompareEN6kotlin11std_support9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE
0000000000044364	mov	x0, x19
0000000000044368	ldp	x29, x30, [sp, #0x10]
000000000004436c	ldp	x20, x19, [sp], #0x20
0000000000044370	ret
___Kotlin_ObjCExport_initialize_block_invoke:
0000000000044374	stp	x26, x25, [sp, #-0x50]!
0000000000044378	stp	x24, x23, [sp, #0x10]
000000000004437c	stp	x22, x21, [sp, #0x20]
0000000000044380	stp	x20, x19, [sp, #0x30]
0000000000044384	stp	x29, x30, [sp, #0x40]
0000000000044388	add	x29, sp, #0x40
000000000004438c	adrp	x8, 80 ; 0x94000
0000000000044390	ldr	x19, [x8, #0x758]
0000000000044394	cbz	x19, 0x4454c
0000000000044398	adrp	x20, 80 ; 0x94000
000000000004439c	ldr	x9, [x20, #0x760]
00000000000443a0	cbz	x9, 0x4454c
00000000000443a4	adrp	x0, 54 ; 0x7a000
00000000000443a8	add	x0, x0, #0x4e0
00000000000443ac	ldr	x9, [x0]
00000000000443b0	blr	x9
00000000000443b4	ldr	x25, [x0]
00000000000443b8	cbz	x25, 0x443d8
00000000000443bc	add	x9, x25, #0x138
00000000000443c0	mov	w10, #0x1
00000000000443c4	ldaxr	w24, [x9]
00000000000443c8	stlxr	w11, w10, [x9]
00000000000443cc	cbnz	w11, 0x443c4
00000000000443d0	ldr	x19, [x8, #0x758]
00000000000443d4	b	0x443dc
00000000000443d8	mov	w24, #0x1
00000000000443dc	adrp	x23, 51 ; 0x77000
00000000000443e0	ldr	x0, [x23, #0x68] ; Objc class ref: _OBJC_CLASS_$_NSObject
00000000000443e4	nop
00000000000443e8	ldr	x22, #0x32830 ; Objc selector ref: class
00000000000443ec	mov	x1, x22
00000000000443f0	bl	0x55ca8 ; Objc message: +[NSObject class]
00000000000443f4	mov	x1, x19
00000000000443f8	bl	0x55b28 ; symbol stub for: _class_getClassMethod
00000000000443fc	bl	0x55bf4 ; symbol stub for: _method_getTypeEncoding
0000000000044400	mov	x21, x0
0000000000044404	ldr	x20, [x20, #0x760]
0000000000044408	ldr	x0, [x23, #0x68]
000000000004440c	mov	x1, x22
0000000000044410	bl	0x55ca8 ; Objc message: -[x0 class]
0000000000044414	mov	x1, x20
0000000000044418	bl	0x55b28 ; symbol stub for: _class_getClassMethod
000000000004441c	bl	0x55bf4 ; symbol stub for: _method_getTypeEncoding
0000000000044420	mov	x22, x0
0000000000044424	adr	x0, #0x18d88 ; literal pool for: "NSBlock"
0000000000044428	nop
000000000004442c	bl	0x55c84 ; symbol stub for: _objc_getClass
0000000000044430	adr	x2, #0x188
0000000000044434	nop
0000000000044438	mov	x1, x19
000000000004443c	mov	x3, x21
0000000000044440	bl	0x55af8 ; symbol stub for: _class_addMethod
0000000000044444	adr	x0, #0x18d70 ; literal pool for: "__NSCFBoolean"
0000000000044448	nop
000000000004444c	bl	0x55c84 ; symbol stub for: _objc_getClass
0000000000044450	adr	x2, #0x494
0000000000044454	nop
0000000000044458	mov	x1, x19
000000000004445c	mov	x3, x21
0000000000044460	bl	0x55af8 ; symbol stub for: _class_addMethod
0000000000044464	adr	x0, #0x18d5e ; literal pool for: "SwiftObject"
0000000000044468	nop
000000000004446c	bl	0x55c84 ; symbol stub for: _objc_getClass
0000000000044470	mov	x23, x0
0000000000044474	cbz	x0, 0x444a8
0000000000044478	adr	x2, #0x518
000000000004447c	nop
0000000000044480	mov	x0, x23
0000000000044484	mov	x1, x19
0000000000044488	mov	x3, x21
000000000004448c	bl	0x55af8 ; symbol stub for: _class_addMethod
0000000000044490	adr	x2, #0x5a8
0000000000044494	nop
0000000000044498	mov	x0, x23
000000000004449c	mov	x1, x20
00000000000444a0	mov	x3, x22
00000000000444a4	bl	0x55af8 ; symbol stub for: _class_addMethod
00000000000444a8	adr	x0, #0x18d26 ; literal pool for: "_TtCs12_SwiftObject"
00000000000444ac	nop
00000000000444b0	bl	0x55c84 ; symbol stub for: _objc_getClass
00000000000444b4	mov	x23, x0
00000000000444b8	cbz	x0, 0x444ec
00000000000444bc	adr	x2, #0x4d4
00000000000444c0	nop
00000000000444c4	mov	x0, x23
00000000000444c8	mov	x1, x19
00000000000444cc	mov	x3, x21
00000000000444d0	bl	0x55af8 ; symbol stub for: _class_addMethod
00000000000444d4	adr	x2, #0x564
00000000000444d8	nop
00000000000444dc	mov	x0, x23
00000000000444e0	mov	x1, x20
00000000000444e4	mov	x3, x22
00000000000444e8	bl	0x55af8 ; symbol stub for: _class_addMethod
00000000000444ec	cbz	x25, 0x4451c
00000000000444f0	add	x0, x25, #0x138
00000000000444f4	ldaxr	w8, [x0]
00000000000444f8	stlxr	w9, w24, [x0]
00000000000444fc	cbnz	w9, 0x444f4
0000000000044500	cbnz	w24, 0x4451c
0000000000044504	cmp	w8, #0x1
0000000000044508	b.ne	0x4451c
000000000004450c	adr	x8, #0x4fffd
0000000000044510	nop
0000000000044514	ldarb	w8, [x8]
0000000000044518	tbnz	w8, #0x0, 0x44534
000000000004451c	ldp	x29, x30, [sp, #0x40]
0000000000044520	ldp	x20, x19, [sp, #0x30]
0000000000044524	ldp	x22, x21, [sp, #0x20]
0000000000044528	ldp	x24, x23, [sp, #0x10]
000000000004452c	ldp	x26, x25, [sp], #0x50
0000000000044530	ret
0000000000044534	ldp	x29, x30, [sp, #0x40]
0000000000044538	ldp	x20, x19, [sp, #0x30]
000000000004453c	ldp	x22, x21, [sp, #0x20]
0000000000044540	ldp	x24, x23, [sp, #0x10]
0000000000044544	ldp	x26, x25, [sp], #0x50
0000000000044548	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004454c	adr	x2, #0x18c3f ; literal pool for: "unexpected initialization order"
0000000000044550	nop
0000000000044554	mov	w0, #0x0
0000000000044558	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
000000000004455c	b	0x44578
0000000000044560	b	0x44578
0000000000044564	b	0x44578
0000000000044568	b	0x44578
000000000004456c	b	0x44578
0000000000044570	b	0x44578
0000000000044574	b	0x44578
0000000000044578	mov	x19, x0
000000000004457c	cbz	x25, 0x445b0
0000000000044580	add	x0, x25, #0x138
0000000000044584	ldaxr	w8, [x0]
0000000000044588	stlxr	w9, w24, [x0]
000000000004458c	cbnz	w9, 0x44584
0000000000044590	cbnz	w24, 0x445b0
0000000000044594	cmp	w8, #0x1
0000000000044598	b.ne	0x445b0
000000000004459c	adr	x8, #0x4ff6d
00000000000445a0	nop
00000000000445a4	ldarb	w8, [x8]
00000000000445a8	tbz	w8, #0x0, 0x445b0
00000000000445ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000445b0	mov	x0, x19
00000000000445b4	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZL16blockToKotlinImpP11objc_objectP13objc_selectorPP9ObjHeader:
00000000000445b8	sub	sp, sp, #0x90
00000000000445bc	stp	x28, x27, [sp, #0x30]
00000000000445c0	stp	x26, x25, [sp, #0x40]
00000000000445c4	stp	x24, x23, [sp, #0x50]
00000000000445c8	stp	x22, x21, [sp, #0x60]
00000000000445cc	stp	x20, x19, [sp, #0x70]
00000000000445d0	stp	x29, x30, [sp, #0x80]
00000000000445d4	add	x29, sp, #0x80
00000000000445d8	stp	x0, x2, [sp, #0x18]
00000000000445dc	ldr	w8, [x0, #0x8]
00000000000445e0	ldr	x9, [x0, #0x18]
00000000000445e4	tst	w8, #0x2000000
00000000000445e8	mov	w8, #0x20
00000000000445ec	mov	w10, #0x10
00000000000445f0	csel	x8, x10, x8, eq
00000000000445f4	ldr	x2, [x9, x8]
00000000000445f8	nop
00000000000445fc	ldr	x0, #0x32a74 ; Objc class ref: _OBJC_CLASS_$_NSMethodSignature
0000000000044600	nop
0000000000044604	ldr	x1, #0x3285c ; Objc selector ref: signatureWithObjCTypes:
0000000000044608	bl	0x55ca8 ; Objc message: +[NSMethodSignature signatureWithObjCTypes:]
000000000004460c	mov	x23, x0
0000000000044610	nop
0000000000044614	ldr	x1, #0x327c4 ; Objc selector ref: numberOfArguments
0000000000044618	bl	0x55ca8 ; Objc message: -[x0 numberOfArguments]
000000000004461c	sub	w8, w0, #0x1
0000000000044620	str	w8, [sp, #0x14]
0000000000044624	cmp	w8, #0x1
0000000000044628	b.lt	0x4470c
000000000004462c	nop
0000000000044630	ldr	x24, #0x32678 ; Objc selector ref: getArgumentTypeAtIndex:
0000000000044634	nop
0000000000044638	ldr	x8, #0x1b9d0 ; literal pool symbol address: _NSGenericException
000000000004463c	ldr	x8, [x8]
0000000000044640	str	x8, [sp, #0x28]
0000000000044644	nop
0000000000044648	ldr	x26, #0x327c8 ; Objc selector ref: raise:format:
000000000004464c	and	x19, x0, #0xffffffff
0000000000044650	mov	w21, #0x1
0000000000044654	adrp	x8, 54 ; 0x7a000
0000000000044658	add	x8, x8, #0x4e0
000000000004465c	ldr	x20, [x8]
0000000000044660	mov	w28, #0x1
0000000000044664	b	0x44674
0000000000044668	add	x28, x28, #0x1
000000000004466c	cmp	x28, x19
0000000000044670	b.eq	0x4470c
0000000000044674	mov	x0, x23
0000000000044678	mov	x1, x24
000000000004467c	mov	x2, x28
0000000000044680	bl	0x55ca8 ; Objc message: -[x0 raise:format:]
0000000000044684	ldrb	w9, [x0]
0000000000044688	cmp	w9, #0x40
000000000004468c	b.eq	0x44668
0000000000044690	mov	x8, x0
0000000000044694	adrp	x0, 54 ; 0x7a000
0000000000044698	add	x0, x0, #0x4e0
000000000004469c	blr	x20
00000000000446a0	ldr	x25, [x0]
00000000000446a4	add	x22, x25, #0x138
00000000000446a8	ldaxr	w27, [x22]
00000000000446ac	stlxr	w9, w21, [x22]
00000000000446b0	cbnz	w9, 0x446a8
00000000000446b4	nop
00000000000446b8	ldr	x0, #0x329a0 ; Objc class ref: _OBJC_CLASS_$_NSException
00000000000446bc	str	x8, [sp]
00000000000446c0	mov	x1, x26
00000000000446c4	ldr	x2, [sp, #0x28]
00000000000446c8	adr	x3, #0x2d948 ; Objc cfstring ref: @"bad cfstring ref"
00000000000446cc	nop
00000000000446d0	bl	0x55ca8 ; Objc message: +[NSException raise:format:]
00000000000446d4	cbz	x25, 0x44668
00000000000446d8	ldaxr	w8, [x22]
00000000000446dc	stlxr	w9, w27, [x22]
00000000000446e0	cbnz	w9, 0x446d8
00000000000446e4	cbnz	w27, 0x44668
00000000000446e8	cmp	w8, #0x1
00000000000446ec	b.ne	0x44668
00000000000446f0	adr	x8, #0x4fe19
00000000000446f4	nop
00000000000446f8	ldarb	w8, [x8]
00000000000446fc	tbz	w8, #0x0, 0x44668
0000000000044700	mov	x0, x22
0000000000044704	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000044708	b	0x44668
000000000004470c	nop
0000000000044710	ldr	x1, #0x32690 ; Objc selector ref: methodReturnType
0000000000044714	mov	x0, x23
0000000000044718	bl	0x55ca8 ; Objc message: -[x0 methodReturnType]
000000000004471c	ldrb	w9, [x0]
0000000000044720	cmp	w9, #0x40
0000000000044724	b.eq	0x447b4
0000000000044728	mov	x8, x0
000000000004472c	adrp	x0, 54 ; 0x7a000
0000000000044730	add	x0, x0, #0x4e0
0000000000044734	ldr	x9, [x0]
0000000000044738	blr	x9
000000000004473c	ldr	x21, [x0]
0000000000044740	add	x22, x21, #0x138
0000000000044744	mov	w9, #0x1
0000000000044748	ldaxr	w20, [x22]
000000000004474c	stlxr	w10, w9, [x22]
0000000000044750	cbnz	w10, 0x44748
0000000000044754	nop
0000000000044758	ldr	x0, #0x32900 ; Objc class ref: _OBJC_CLASS_$_NSException
000000000004475c	nop
0000000000044760	ldr	x9, #0x1b8a8 ; literal pool symbol address: _NSGenericException
0000000000044764	ldr	x2, [x9]
0000000000044768	nop
000000000004476c	ldr	x1, #0x326a4 ; Objc selector ref: raise:format:
0000000000044770	str	x8, [sp]
0000000000044774	adr	x3, #0x2d8bc ; Objc cfstring ref: @"bad cfstring ref"
0000000000044778	nop
000000000004477c	bl	0x55ca8 ; Objc message: +[NSException raise:format:]
0000000000044780	cbz	x21, 0x447b4
0000000000044784	ldaxr	w8, [x22]
0000000000044788	stlxr	w9, w20, [x22]
000000000004478c	cbnz	w9, 0x44784
0000000000044790	cbnz	w20, 0x447b4
0000000000044794	cmp	w8, #0x1
0000000000044798	b.ne	0x447b4
000000000004479c	adr	x8, #0x4fd6d
00000000000447a0	nop
00000000000447a4	ldarb	w8, [x8]
00000000000447a8	tbz	w8, #0x0, 0x447b4
00000000000447ac	mov	x0, x22
00000000000447b0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000447b4	ldr	w9, [sp, #0x14]
00000000000447b8	cmp	w9, #0x3
00000000000447bc	b.gt	0x447f0
00000000000447c0	adr	x8, #0x2b9a0
00000000000447c4	nop
00000000000447c8	ldr	x2, [x8, w9, sxtw #3]
00000000000447cc	ldp	x0, x1, [sp, #0x18]
00000000000447d0	ldp	x29, x30, [sp, #0x80]
00000000000447d4	ldp	x20, x19, [sp, #0x70]
00000000000447d8	ldp	x22, x21, [sp, #0x60]
00000000000447dc	ldp	x24, x23, [sp, #0x50]
00000000000447e0	ldp	x26, x25, [sp, #0x40]
00000000000447e4	ldp	x28, x27, [sp, #0x30]
00000000000447e8	add	sp, sp, #0x90
00000000000447ec	br	x2
00000000000447f0	ldr	x0, [sp, #0x18]
00000000000447f4	bl	0x55cf0 ; symbol stub for: _objc_retainBlock
00000000000447f8	mov	x20, x0
00000000000447fc	adrp	x0, 54 ; 0x7a000
0000000000044800	add	x0, x0, #0x4e0
0000000000044804	ldr	x8, [x0]
0000000000044808	blr	x8
000000000004480c	ldr	x8, [x0]
0000000000044810	ldr	x8, [x8, #0x118]
0000000000044814	add	x0, x8, #0x70
0000000000044818	mov	w1, #0x10
000000000004481c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000044820	mov	x21, x0
0000000000044824	adr	x8, #0x1e60c
0000000000044828	nop
000000000004482c	str	x8, [x21, #0x10]!
0000000000044830	stur	xzr, [x21, #-0x8]
0000000000044834	ldr	x8, [sp, #0x20]
0000000000044838	str	x21, [x8]
000000000004483c	ldar	x8, [x21]
0000000000044840	and	x8, x8, #0xfffffffffffffffc
0000000000044844	ldr	x9, [x8]
0000000000044848	cmp	x9, x8
000000000004484c	csel	x0, xzr, x8, eq
0000000000044850	cbnz	x0, 0x4485c
0000000000044854	mov	x0, x21
0000000000044858	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004485c	add	x8, x0, #0x10
0000000000044860	stlr	x20, [x8]
0000000000044864	mov	x0, x21
0000000000044868	ldp	x29, x30, [sp, #0x80]
000000000004486c	ldp	x20, x19, [sp, #0x70]
0000000000044870	ldp	x22, x21, [sp, #0x60]
0000000000044874	ldp	x24, x23, [sp, #0x50]
0000000000044878	ldp	x26, x25, [sp, #0x40]
000000000004487c	ldp	x28, x27, [sp, #0x30]
0000000000044880	add	sp, sp, #0x90
0000000000044884	ret
0000000000044888	mov	x19, x0
000000000004488c	cbz	x21, 0x448dc
0000000000044890	ldaxr	w8, [x22]
0000000000044894	stlxr	w9, w20, [x22]
0000000000044898	cbnz	w9, 0x44890
000000000004489c	cbz	w20, 0x448bc
00000000000448a0	b	0x448dc
00000000000448a4	mov	x19, x0
00000000000448a8	cbz	x25, 0x448dc
00000000000448ac	ldaxr	w8, [x22]
00000000000448b0	stlxr	w9, w27, [x22]
00000000000448b4	cbnz	w9, 0x448ac
00000000000448b8	cbnz	w27, 0x448dc
00000000000448bc	cmp	w8, #0x1
00000000000448c0	b.ne	0x448dc
00000000000448c4	adr	x8, #0x4fc45
00000000000448c8	nop
00000000000448cc	ldarb	w8, [x8]
00000000000448d0	tbz	w8, #0x0, 0x448dc
00000000000448d4	mov	x0, x22
00000000000448d8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000448dc	mov	x0, x19
00000000000448e0	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZL23boxedBooleanToKotlinImpP8NSNumberP13objc_selectorPP9ObjHeader:
00000000000448e4	sub	sp, sp, #0x50
00000000000448e8	stp	x22, x21, [sp, #0x20]
00000000000448ec	stp	x20, x19, [sp, #0x30]
00000000000448f0	stp	x29, x30, [sp, #0x40]
00000000000448f4	add	x29, sp, #0x40
00000000000448f8	mov	x19, x2
00000000000448fc	nop
0000000000044900	ldr	x1, #0x32308 ; Objc selector ref: boolValue
0000000000044904	bl	0x55ca8 ; Objc message: -[x0 boolValue]
0000000000044908	mov	x21, x0
000000000004490c	str	xzr, [sp, #0x8]
0000000000044910	adrp	x20, 54 ; 0x7a000
0000000000044914	add	x20, x20, #0x4e0
0000000000044918	ldr	x22, [x20]
000000000004491c	mov	x0, x20
0000000000044920	blr	x22
0000000000044924	ldr	x8, [x0]
0000000000044928	ldr	x9, [x8, #0x110]
000000000004492c	add	x10, sp, #0x8
0000000000044930	str	x10, [x8, #0x110]
0000000000044934	mov	x8, #0x300000000
0000000000044938	stp	x9, x8, [sp, #0x10]
000000000004493c	adr	x8, #0x4fbcd
0000000000044940	nop
0000000000044944	ldarb	w8, [x8]
0000000000044948	tbz	w8, #0x0, 0x44950
000000000004494c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000044950	mov	x0, x21
0000000000044954	mov	x1, x19
0000000000044958	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
000000000004495c	mov	x8, x0
0000000000044960	str	x0, [x19]
0000000000044964	mov	x0, x20
0000000000044968	blr	x22
000000000004496c	ldr	x9, [x0]
0000000000044970	ldr	x10, [sp, #0x10]
0000000000044974	str	x10, [x9, #0x110]
0000000000044978	mov	x0, x8
000000000004497c	ldp	x29, x30, [sp, #0x40]
0000000000044980	ldp	x20, x19, [sp, #0x30]
0000000000044984	ldp	x22, x21, [sp, #0x20]
0000000000044988	add	sp, sp, #0x50
000000000004498c	ret
__ZL23SwiftObject_toKotlinImpP11objc_objectP13objc_selectorPP9ObjHeader:
0000000000044990	stp	x22, x21, [sp, #-0x30]!
0000000000044994	stp	x20, x19, [sp, #0x10]
0000000000044998	stp	x29, x30, [sp, #0x20]
000000000004499c	add	x29, sp, #0x20
00000000000449a0	mov	x21, x2
00000000000449a4	mov	x19, x0
00000000000449a8	bl	0x55d14 ; symbol stub for: _object_getClass
00000000000449ac	bl	__ZL19getOrCreateTypeInfoP10objc_class
00000000000449b0	mov	x22, x0
00000000000449b4	mov	x0, x19
00000000000449b8	bl	0x55cd8 ; symbol stub for: _objc_retain
00000000000449bc	mov	x19, x0
00000000000449c0	adrp	x0, 54 ; 0x7a000
00000000000449c4	add	x0, x0, #0x4e0
00000000000449c8	ldr	x8, [x0]
00000000000449cc	blr	x8
00000000000449d0	ldr	x8, [x0]
00000000000449d4	ldr	x8, [x8, #0x118]
00000000000449d8	ldrsw	x9, [x22, #0x14]
00000000000449dc	add	x9, x9, #0xf
00000000000449e0	and	x1, x9, #0xfffffffffffffff8
00000000000449e4	add	x0, x8, #0x70
00000000000449e8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000449ec	mov	x20, x0
00000000000449f0	str	x22, [x20, #0x10]!
00000000000449f4	stur	xzr, [x20, #-0x8]
00000000000449f8	str	x20, [x21]
00000000000449fc	ldar	x8, [x20]
0000000000044a00	and	x8, x8, #0xfffffffffffffffc
0000000000044a04	ldr	x9, [x8]
0000000000044a08	cmp	x9, x8
0000000000044a0c	csel	x0, xzr, x8, eq
0000000000044a10	cbnz	x0, 0x44a1c
0000000000044a14	mov	x0, x20
0000000000044a18	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000044a1c	add	x8, x0, #0x10
0000000000044a20	stlr	x19, [x8]
0000000000044a24	mov	x0, x20
0000000000044a28	ldp	x29, x30, [sp, #0x20]
0000000000044a2c	ldp	x20, x19, [sp, #0x10]
0000000000044a30	ldp	x22, x21, [sp], #0x30
0000000000044a34	ret
__ZL40SwiftObject_releaseAsAssociatedObjectImpP11objc_objectP13objc_selector11ReleaseMode:
0000000000044a38	cmp	w2, #0x1
0000000000044a3c	b.hi	0x44a44
0000000000044a40	b	0x55ccc ; symbol stub for: _objc_release
0000000000044a44	ret
__ZL19getOrCreateTypeInfoP10objc_class:
0000000000044a48	sub	sp, sp, #0x1f0
0000000000044a4c	stp	x28, x27, [sp, #0x190]
0000000000044a50	stp	x26, x25, [sp, #0x1a0]
0000000000044a54	stp	x24, x23, [sp, #0x1b0]
0000000000044a58	stp	x22, x21, [sp, #0x1c0]
0000000000044a5c	stp	x20, x19, [sp, #0x1d0]
0000000000044a60	stp	x29, x30, [sp, #0x1e0]
0000000000044a64	add	x29, sp, #0x1e0
0000000000044a68	mov	x19, x0
0000000000044a6c	adr	x23, #0x4faa6
0000000000044a70	nop
0000000000044a74	mov	x1, x23
0000000000044a78	bl	0x55c78 ; symbol stub for: _objc_getAssociatedObject
0000000000044a7c	nop
0000000000044a80	ldr	x20, #0x32388 ; Objc selector ref: pointerValue
0000000000044a84	mov	x1, x20
0000000000044a88	bl	0x55ca8 ; Objc message: -[x0 pointerValue]
0000000000044a8c	mov	x22, x0
0000000000044a90	cbnz	x0, 0x44ae4
0000000000044a94	mov	x0, x19
0000000000044a98	bl	0x55b40 ; symbol stub for: _class_getSuperclass
0000000000044a9c	cbz	x0, 0x44aac
0000000000044aa0	bl	__ZL19getOrCreateTypeInfoP10objc_class
0000000000044aa4	mov	x21, x0
0000000000044aa8	b	0x44ab4
0000000000044aac	adr	x21, #0x1c024
0000000000044ab0	nop
0000000000044ab4	add	x0, x23, #0x1
0000000000044ab8	bl	__ZN6kotlin8SpinLockILNS_24MutexThreadStateHandlingE1EE4lockEv
0000000000044abc	mov	x0, x19
0000000000044ac0	mov	x1, x23
0000000000044ac4	bl	0x55c78 ; symbol stub for: _objc_getAssociatedObject
0000000000044ac8	mov	x1, x20
0000000000044acc	bl	0x55ca8 ; Objc message: -[x0 pointerValue]
0000000000044ad0	mov	x22, x0
0000000000044ad4	cbz	x0, 0x44b08
0000000000044ad8	adr	x8, #0x4fa3b
0000000000044adc	nop
0000000000044ae0	stlrb	wzr, [x8]
0000000000044ae4	mov	x0, x22
0000000000044ae8	ldp	x29, x30, [sp, #0x1e0]
0000000000044aec	ldp	x20, x19, [sp, #0x1d0]
0000000000044af0	ldp	x22, x21, [sp, #0x1c0]
0000000000044af4	ldp	x24, x23, [sp, #0x1b0]
0000000000044af8	ldp	x26, x25, [sp, #0x1a0]
0000000000044afc	ldp	x28, x27, [sp, #0x190]
0000000000044b00	add	sp, sp, #0x1f0
0000000000044b04	ret
0000000000044b08	add	x27, sp, #0xe0
0000000000044b0c	adrp	x0, 54 ; 0x7a000
0000000000044b10	add	x0, x0, #0x4e0
0000000000044b14	ldr	x20, [x0]
0000000000044b18	blr	x20
0000000000044b1c	ldr	x8, [x0]
0000000000044b20	cbz	x8, 0x44b44
0000000000044b24	str	x8, [sp, #0x30]
0000000000044b28	add	x8, x8, #0x138
0000000000044b2c	mov	w9, #0x1
0000000000044b30	ldaxr	w11, [x8]
0000000000044b34	stlxr	w10, w9, [x8]
0000000000044b38	cbnz	w10, 0x44b30
0000000000044b3c	str	x11, [sp, #0x20]
0000000000044b40	b	0x44b50
0000000000044b44	str	xzr, [sp, #0x30]
0000000000044b48	mov	w8, #0x1
0000000000044b4c	str	x8, [sp, #0x20]
0000000000044b50	movi.16b	v0, #0x0
0000000000044b54	stp	q0, q0, [sp, #0xe0]
0000000000044b58	mov	w8, #0x3f800000
0000000000044b5c	str	w8, [x27, #0x20]
0000000000044b60	sub	x1, x29, #0xd0
0000000000044b64	mov	x0, x19
0000000000044b68	bl	0x55b10 ; symbol stub for: _class_copyMethodList
0000000000044b6c	mov	x22, x0
0000000000044b70	str	x21, [sp, #0x40]
0000000000044b74	str	x20, [sp, #0x28]
0000000000044b78	str	x19, [sp, #0x60]
0000000000044b7c	mov	x20, #0x2d69
0000000000044b80	movk	x20, #0xeb38, lsl #16
0000000000044b84	movk	x20, #0xea08, lsl #32
0000000000044b88	movk	x20, #0x9ddf, lsl #48
0000000000044b8c	ldr	w8, [x27, #0x30]
0000000000044b90	cbz	w8, 0x44e7c
0000000000044b94	mov	x19, #0x0
0000000000044b98	add	x8, sp, #0xe0
0000000000044b9c	add	x21, x8, #0x10
0000000000044ba0	mov	w25, #0x1
0000000000044ba4	b	0x44bf0
0000000000044ba8	and	x20, x8, x28
0000000000044bac	ldr	x9, [sp, #0xe0]
0000000000044bb0	ldr	x8, [x9, x20, lsl #3]
0000000000044bb4	cbz	x8, 0x44d14
0000000000044bb8	ldr	x9, [x8]
0000000000044bbc	str	x9, [x23]
0000000000044bc0	str	x23, [x8]
0000000000044bc4	ldr	x8, [sp, #0xf8]
0000000000044bc8	add	x8, x8, #0x1
0000000000044bcc	str	x8, [sp, #0xf8]
0000000000044bd0	add	x19, x19, #0x1
0000000000044bd4	ldr	w8, [x27, #0x30]
0000000000044bd8	cmp	x19, x8
0000000000044bdc	mov	x20, #0x2d69
0000000000044be0	movk	x20, #0xeb38, lsl #16
0000000000044be4	movk	x20, #0xea08, lsl #32
0000000000044be8	movk	x20, #0x9ddf, lsl #48
0000000000044bec	b.hs	0x44e80
0000000000044bf0	ldr	x0, [x22, x19, lsl #3]
0000000000044bf4	bl	0x55be8 ; symbol stub for: _method_getName
0000000000044bf8	mov	x24, x0
0000000000044bfc	lsr	x8, x0, #32
0000000000044c00	lsl	w9, w24, #3
0000000000044c04	add	x9, x9, #0x8
0000000000044c08	eor	x9, x9, x8
0000000000044c0c	mul	x9, x9, x20
0000000000044c10	eor	x8, x9, x8
0000000000044c14	eor	x8, x8, x9, lsr #47
0000000000044c18	mul	x8, x8, x20
0000000000044c1c	eor	x8, x8, x8, lsr #47
0000000000044c20	mov	x9, #0x2d69
0000000000044c24	movk	x9, #0xeb38, lsl #16
0000000000044c28	movk	x9, #0xea08, lsl #32
0000000000044c2c	movk	x9, #0x9ddf, lsl #48
0000000000044c30	mul	x28, x8, x9
0000000000044c34	ldr	x26, [sp, #0xe8]
0000000000044c38	cbz	x26, 0x44cd0
0000000000044c3c	fmov	d0, x26
0000000000044c40	cnt.8b	v0, v0
0000000000044c44	uaddlv.8b	h0, v0
0000000000044c48	fmov	w8, s0
0000000000044c4c	cmp	x8, #0x1
0000000000044c50	b.hi	0x44c60
0000000000044c54	sub	x9, x26, #0x1
0000000000044c58	and	x20, x28, x9
0000000000044c5c	b	0x44c74
0000000000044c60	mov	x20, x28
0000000000044c64	cmp	x28, x26
0000000000044c68	b.lo	0x44c74
0000000000044c6c	udiv	x9, x28, x26
0000000000044c70	msub	x20, x9, x26, x28
0000000000044c74	ldr	x9, [sp, #0xe0]
0000000000044c78	ldr	x9, [x9, x20, lsl #3]
0000000000044c7c	cbz	x9, 0x44cd0
0000000000044c80	sub	x10, x26, #0x1
0000000000044c84	b	0x44ca0
0000000000044c88	and	x11, x11, x10
0000000000044c8c	cmp	x11, x20
0000000000044c90	b.ne	0x44cd0
0000000000044c94	ldr	x11, [x9, #0x10]
0000000000044c98	cmp	x11, x24
0000000000044c9c	b.eq	0x44bd0
0000000000044ca0	ldr	x9, [x9]
0000000000044ca4	cbz	x9, 0x44cd0
0000000000044ca8	ldr	x11, [x9, #0x8]
0000000000044cac	cmp	x11, x28
0000000000044cb0	b.eq	0x44c94
0000000000044cb4	cmp	x8, #0x1
0000000000044cb8	b.ls	0x44c88
0000000000044cbc	cmp	x11, x26
0000000000044cc0	b.lo	0x44c8c
0000000000044cc4	udiv	x12, x11, x26
0000000000044cc8	msub	x11, x12, x26, x11
0000000000044ccc	b	0x44c8c
0000000000044cd0	mov	w0, #0x1
0000000000044cd4	mov	w1, #0x18
0000000000044cd8	bl	0x55aec ; symbol stub for: _calloc
0000000000044cdc	mov	x23, x0
0000000000044ce0	stp	x28, x24, [x0, #0x8]
0000000000044ce4	ldr	x8, [sp, #0xf8]
0000000000044ce8	add	x8, x8, #0x1
0000000000044cec	ucvtf	s0, x8
0000000000044cf0	ldr	s1, [x27, #0x20]
0000000000044cf4	cbz	x26, 0x44d44
0000000000044cf8	ucvtf	s2, x26
0000000000044cfc	fmul	s2, s1, s2
0000000000044d00	fcmp	s2, s0
0000000000044d04	b.mi	0x44d44
0000000000044d08	ldr	x9, [sp, #0xe0]
0000000000044d0c	ldr	x8, [x9, x20, lsl #3]
0000000000044d10	cbnz	x8, 0x44bb8
0000000000044d14	ldr	x8, [sp, #0xf0]
0000000000044d18	str	x8, [x23]
0000000000044d1c	str	x23, [sp, #0xf0]
0000000000044d20	str	x21, [x9, x20, lsl #3]
0000000000044d24	ldr	x8, [x23]
0000000000044d28	cbz	x8, 0x44bc4
0000000000044d2c	ldr	x8, [x8, #0x8]
0000000000044d30	sub	x9, x26, #0x1
0000000000044d34	tst	x26, x9
0000000000044d38	b.ne	0x44e04
0000000000044d3c	and	x8, x8, x9
0000000000044d40	b	0x44e14
0000000000044d44	cmp	x26, #0x3
0000000000044d48	cset	w8, lo
0000000000044d4c	sub	x9, x26, #0x1
0000000000044d50	tst	x26, x9
0000000000044d54	cset	w9, ne
0000000000044d58	orr	w8, w8, w9
0000000000044d5c	bfi	x8, x26, #1, #63
0000000000044d60	fdiv	s0, s0, s1
0000000000044d64	fcvtpu	x9, s0
0000000000044d68	cmp	x8, x9
0000000000044d6c	csel	x24, x9, x8, lo
0000000000044d70	subs	x8, x24, #0x1
0000000000044d74	b.ne	0x44d80
0000000000044d78	mov	w24, #0x2
0000000000044d7c	b	0x44d98
0000000000044d80	tst	x24, x8
0000000000044d84	b.eq	0x44d98
0000000000044d88	mov	x0, x24
0000000000044d8c	bl	0x558f4 ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000044d90	mov	x24, x0
0000000000044d94	ldr	x26, [sp, #0xe8]
0000000000044d98	cmp	x24, x26
0000000000044d9c	b.ls	0x44db0
0000000000044da0	add	x0, sp, #0xe0
0000000000044da4	mov	x1, x24
0000000000044da8	bl	__ZNSt3__112__hash_tableIP13objc_selectorNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm
0000000000044dac	b	0x44e34
0000000000044db0	b.hs	0x44e34
0000000000044db4	ldr	x8, [sp, #0xf8]
0000000000044db8	ucvtf	s0, x8
0000000000044dbc	ldr	s1, [x27, #0x20]
0000000000044dc0	fdiv	s0, s0, s1
0000000000044dc4	fcvtpu	x0, s0
0000000000044dc8	cmp	x26, #0x3
0000000000044dcc	b.lo	0x44e20
0000000000044dd0	fmov	d0, x26
0000000000044dd4	cnt.8b	v0, v0
0000000000044dd8	uaddlv.8b	h0, v0
0000000000044ddc	fmov	w8, s0
0000000000044de0	cmp	x8, #0x1
0000000000044de4	b.hi	0x44e20
0000000000044de8	sub	x8, x0, #0x1
0000000000044dec	clz	x8, x8
0000000000044df0	neg	x8, x8
0000000000044df4	lsl	x8, x25, x8
0000000000044df8	cmp	x0, #0x2
0000000000044dfc	csel	x0, x0, x8, lo
0000000000044e00	b	0x44e24
0000000000044e04	cmp	x8, x26
0000000000044e08	b.lo	0x44e14
0000000000044e0c	udiv	x9, x8, x26
0000000000044e10	msub	x8, x9, x26, x8
0000000000044e14	ldr	x9, [sp, #0xe0]
0000000000044e18	add	x8, x9, x8, lsl #3
0000000000044e1c	b	0x44bc0
0000000000044e20	bl	0x558f4 ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000044e24	cmp	x24, x0
0000000000044e28	csel	x24, x0, x24, lo
0000000000044e2c	cmp	x24, x26
0000000000044e30	b.lo	0x44da0
0000000000044e34	ldr	x26, [sp, #0xe8]
0000000000044e38	sub	x8, x26, #0x1
0000000000044e3c	tst	x26, x8
0000000000044e40	b.eq	0x44ba8
0000000000044e44	cmp	x28, x26
0000000000044e48	b.hs	0x44e60
0000000000044e4c	mov	x20, x28
0000000000044e50	ldr	x9, [sp, #0xe0]
0000000000044e54	ldr	x8, [x9, x20, lsl #3]
0000000000044e58	cbnz	x8, 0x44bb8
0000000000044e5c	b	0x44d14
0000000000044e60	udiv	x8, x28, x26
0000000000044e64	mul	x8, x8, x26
0000000000044e68	sub	x20, x28, x8
0000000000044e6c	ldr	x9, [sp, #0xe0]
0000000000044e70	ldr	x8, [x9, x20, lsl #3]
0000000000044e74	cbnz	x8, 0x44bb8
0000000000044e78	b	0x44d14
0000000000044e7c	cbz	x22, 0x44e88
0000000000044e80	mov	x0, x22
0000000000044e84	bl	0x55b7c ; symbol stub for: _free
0000000000044e88	ldr	x20, [sp, #0x40]
0000000000044e8c	ldr	x8, [x20, #0x60]
0000000000044e90	ldr	x9, [x8, #0x10]
0000000000044e94	cbz	x20, 0x44f48
0000000000044e98	mov	x10, x9
0000000000044e9c	cbnz	x9, 0x44eb8
0000000000044ea0	mov	x8, x20
0000000000044ea4	ldr	x8, [x8, #0x18]
0000000000044ea8	cbz	x8, 0x44f48
0000000000044eac	ldr	x10, [x8, #0x60]
0000000000044eb0	ldr	x10, [x10, #0x10]
0000000000044eb4	cbz	x10, 0x44ea4
0000000000044eb8	ldr	w8, [x10, #0x10]
0000000000044ebc	cbz	x9, 0x44f50
0000000000044ec0	ldr	x22, [x9, #0x8]
0000000000044ec4	ldr	x23, [x9, #0x18]
0000000000044ec8	ldr	w9, [x9, #0x20]
0000000000044ecc	str	w9, [sp, #0x3c]
0000000000044ed0	cbz	x22, 0x44f58
0000000000044ed4	stp	xzr, xzr, [sp, #0xc8]
0000000000044ed8	str	xzr, [sp, #0xd8]
0000000000044edc	cbz	w8, 0x44f68
0000000000044ee0	tbnz	w8, #0x1f, 0x466fc
0000000000044ee4	mov	x21, x23
0000000000044ee8	sxtw	x23, w8
0000000000044eec	sbfiz	x24, x8, #3, #32
0000000000044ef0	mov	x0, x23
0000000000044ef4	mov	w1, #0x8
0000000000044ef8	bl	0x55aec ; symbol stub for: _calloc
0000000000044efc	stp	x0, x0, [sp, #0xc8]
0000000000044f00	add	x19, x0, x23, lsl #3
0000000000044f04	str	x19, [sp, #0xd8]
0000000000044f08	mov	x1, x22
0000000000044f0c	mov	x2, x24
0000000000044f10	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000044f14	str	x19, [sp, #0xd0]
0000000000044f18	mov	x23, x21
0000000000044f1c	cbnz	x23, 0x44f6c
0000000000044f20	ldr	x23, [x20, #0x40]
0000000000044f24	ldr	w8, [x20, #0x3c]
0000000000044f28	str	w8, [sp, #0x3c]
0000000000044f2c	add	x8, sp, #0xb0
0000000000044f30	stp	xzr, xzr, [sp, #0xb8]
0000000000044f34	add	x28, x8, #0x8
0000000000044f38	str	x28, [sp, #0xb0]
0000000000044f3c	str	x23, [sp, #0x70]
0000000000044f40	cbnz	x23, 0x44f84
0000000000044f44	b	0x4512c
0000000000044f48	mov	w8, #-0x1
0000000000044f4c	cbnz	x9, 0x44ec0
0000000000044f50	mov	x23, #0x0
0000000000044f54	str	wzr, [sp, #0x3c]
0000000000044f58	add	x22, x20, #0x70
0000000000044f5c	stp	xzr, xzr, [sp, #0xc8]
0000000000044f60	str	xzr, [sp, #0xd8]
0000000000044f64	cbnz	w8, 0x44ee0
0000000000044f68	cbz	x23, 0x44f20
0000000000044f6c	add	x8, sp, #0xb0
0000000000044f70	stp	xzr, xzr, [sp, #0xb8]
0000000000044f74	add	x28, x8, #0x8
0000000000044f78	str	x28, [sp, #0xb0]
0000000000044f7c	str	x23, [sp, #0x70]
0000000000044f80	cbz	x23, 0x4512c
0000000000044f84	ldr	w9, [sp, #0x3c]
0000000000044f88	neg	w8, w9
0000000000044f8c	cmp	w9, #0x0
0000000000044f90	csinc	w21, w8, w9, lt
0000000000044f94	cmp	w21, #0x1
0000000000044f98	b.lt	0x4512c
0000000000044f9c	mov	x24, #0x0
0000000000044fa0	b	0x44fb0
0000000000044fa4	add	x24, x24, #0x1
0000000000044fa8	cmp	x24, x21
0000000000044fac	b.eq	0x4512c
0000000000044fb0	lsl	x8, x24, #4
0000000000044fb4	ldr	w25, [x23, x8]
0000000000044fb8	cbz	w25, 0x44fa4
0000000000044fbc	add	x8, x23, x24, lsl #4
0000000000044fc0	ldrsw	x23, [x8, #0x4]
0000000000044fc4	stp	xzr, xzr, [x27, #0x30]
0000000000044fc8	str	xzr, [x27, #0x40]
0000000000044fcc	cbz	w23, 0x45044
0000000000044fd0	tbnz	w23, #0x1f, 0x466cc
0000000000044fd4	mov	x0, x23
0000000000044fd8	mov	w1, #0x8
0000000000044fdc	bl	0x55aec ; symbol stub for: _calloc
0000000000044fe0	mov	x22, x0
0000000000044fe4	str	x0, [x27, #0x30]
0000000000044fe8	lsl	x1, x23, #3
0000000000044fec	add	x19, x0, x1
0000000000044ff0	str	x19, [x27, #0x40]
0000000000044ff4	bl	0x55ae0 ; symbol stub for: _bzero
0000000000044ff8	mov	x8, #0x0
0000000000044ffc	str	x19, [x27, #0x38]
0000000000045000	ldr	x9, [sp, #0x70]
0000000000045004	add	x9, x9, x24, lsl #4
0000000000045008	and	x10, x23, #0xffffffff
000000000004500c	lsl	x10, x10, #3
0000000000045010	sub	x10, x10, #0x8
0000000000045014	ldr	x11, [x9, #0x8]!
0000000000045018	ldr	x11, [x11, x8]
000000000004501c	str	x11, [x22, x8]
0000000000045020	cmp	x10, x8
0000000000045024	b.eq	0x45044
0000000000045028	ldr	x22, [x27, #0x30]
000000000004502c	add	x8, x8, #0x8
0000000000045030	ldr	x11, [x9]
0000000000045034	ldr	x11, [x11, x8]
0000000000045038	str	x11, [x22, x8]
000000000004503c	cmp	x10, x8
0000000000045040	b.ne	0x45028
0000000000045044	ldr	x20, [sp, #0xb8]
0000000000045048	cbz	x20, 0x45090
000000000004504c	mov	x19, x28
0000000000045050	ldr	x23, [sp, #0x70]
0000000000045054	ldr	w8, [x20, #0x20]
0000000000045058	cmp	w25, w8
000000000004505c	b.ge	0x45074
0000000000045060	ldr	x8, [x20]
0000000000045064	cbz	x8, 0x450f0
0000000000045068	mov	x19, x20
000000000004506c	mov	x20, x8
0000000000045070	b	0x45054
0000000000045074	cmp	w8, w25
0000000000045078	b.ge	0x4509c
000000000004507c	mov	x19, x20
0000000000045080	ldr	x8, [x19, #0x8]!
0000000000045084	cbz	x8, 0x4509c
0000000000045088	mov	x20, x8
000000000004508c	b	0x45054
0000000000045090	mov	x20, x28
0000000000045094	mov	x19, x28
0000000000045098	ldr	x23, [sp, #0x70]
000000000004509c	ldr	x8, [x19]
00000000000450a0	cbnz	x8, 0x45118
00000000000450a4	mov	w0, #0x1
00000000000450a8	mov	w1, #0x40
00000000000450ac	bl	0x55aec ; symbol stub for: _calloc
00000000000450b0	str	w25, [x0, #0x20]
00000000000450b4	ldr	q0, [x27, #0x30]
00000000000450b8	stur	q0, [x0, #0x28]
00000000000450bc	ldr	x8, [x27, #0x40]
00000000000450c0	str	x8, [x0, #0x38]
00000000000450c4	stp	xzr, xzr, [x27, #0x30]
00000000000450c8	str	xzr, [x27, #0x40]
00000000000450cc	stp	xzr, xzr, [x0]
00000000000450d0	str	x20, [x0, #0x10]
00000000000450d4	str	x0, [x19]
00000000000450d8	ldr	x8, [sp, #0xb0]
00000000000450dc	ldr	x8, [x8]
00000000000450e0	cbz	x8, 0x45100
00000000000450e4	str	x8, [sp, #0xb0]
00000000000450e8	ldr	x1, [x19]
00000000000450ec	b	0x45104
00000000000450f0	mov	x19, x20
00000000000450f4	ldr	x8, [x19]
00000000000450f8	cbnz	x8, 0x45118
00000000000450fc	b	0x450a4
0000000000045100	mov	x1, x0
0000000000045104	ldr	x0, [sp, #0xb8]
0000000000045108	bl	__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_
000000000004510c	ldr	x8, [sp, #0xc0]
0000000000045110	add	x8, x8, #0x1
0000000000045114	str	x8, [sp, #0xc0]
0000000000045118	ldr	x0, [x27, #0x30]
000000000004511c	cbz	x0, 0x44fa4
0000000000045120	str	x0, [x27, #0x38]
0000000000045124	bl	0x55b7c ; symbol stub for: _free
0000000000045128	b	0x44fa4
000000000004512c	stp	xzr, xzr, [sp, #0x98]
0000000000045130	str	xzr, [sp, #0xa8]
0000000000045134	movi.16b	v0, #0x0
0000000000045138	stp	q0, q0, [x27, #0x30]
000000000004513c	mov	w8, #0x3f800000
0000000000045140	str	w8, [x27, #0x50]
0000000000045144	stp	xzr, xzr, [x27, #0x70]
0000000000045148	str	xzr, [x27, #0x80]
000000000004514c	sub	x1, x29, #0xa8
0000000000045150	ldr	x0, [sp, #0x60]
0000000000045154	bl	0x55b1c ; symbol stub for: _class_copyProtocolList
0000000000045158	mov	x22, x0
000000000004515c	cbz	x0, 0x45588
0000000000045160	ldr	w8, [x27, #0x58]
0000000000045164	add	x3, x22, x8, lsl #3
0000000000045168	sub	x0, x29, #0x90
000000000004516c	mov	x1, #0x0
0000000000045170	mov	x2, x22
0000000000045174	bl	__ZNSt3__16vectorIP8ProtocolN6kotlin11std_support9allocatorIS2_EEE6insertIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueENS_11__wrap_iterIS9_EEE4typeENSF_IPKS2_EESB_SB_
0000000000045178	mov	x0, x22
000000000004517c	bl	0x55b7c ; symbol stub for: _free
0000000000045180	ldp	x8, x0, [x27, #0x70]
0000000000045184	cmp	x8, x0
0000000000045188	b.eq	0x45578
000000000004518c	sub	x9, x29, #0xd0
0000000000045190	add	x19, x9, #0x10
0000000000045194	adrp	x21, 51 ; 0x78000
0000000000045198	b	0x451a8
000000000004519c	ldp	x8, x0, [x27, #0x70]
00000000000451a0	cmp	x8, x0
00000000000451a4	b.eq	0x4557c
00000000000451a8	ldr	x22, [x0, #-0x8]!
00000000000451ac	str	x0, [x27, #0x78]
00000000000451b0	lsr	x9, x22, #32
00000000000451b4	lsl	w10, w22, #3
00000000000451b8	add	x10, x10, #0x8
00000000000451bc	eor	x10, x10, x9
00000000000451c0	mov	x11, #0x2d69
00000000000451c4	movk	x11, #0xeb38, lsl #16
00000000000451c8	movk	x11, #0xea08, lsl #32
00000000000451cc	movk	x11, #0x9ddf, lsl #48
00000000000451d0	mul	x10, x10, x11
00000000000451d4	eor	x9, x10, x9
00000000000451d8	eor	x9, x9, x10, lsr #47
00000000000451dc	mul	x9, x9, x11
00000000000451e0	eor	x9, x9, x9, lsr #47
00000000000451e4	mul	x26, x9, x11
00000000000451e8	ldr	x25, [x27, #0x38]
00000000000451ec	cbz	x25, 0x45284
00000000000451f0	fmov	d0, x25
00000000000451f4	cnt.8b	v0, v0
00000000000451f8	uaddlv.8b	h0, v0
00000000000451fc	fmov	w9, s0
0000000000045200	cmp	x9, #0x1
0000000000045204	b.hi	0x45214
0000000000045208	sub	x10, x25, #0x1
000000000004520c	and	x20, x26, x10
0000000000045210	b	0x45228
0000000000045214	mov	x20, x26
0000000000045218	cmp	x26, x25
000000000004521c	b.lo	0x45228
0000000000045220	udiv	x10, x26, x25
0000000000045224	msub	x20, x10, x25, x26
0000000000045228	ldr	x10, [x27, #0x30]
000000000004522c	ldr	x10, [x10, x20, lsl #3]
0000000000045230	cbz	x10, 0x45284
0000000000045234	sub	x11, x25, #0x1
0000000000045238	b	0x45254
000000000004523c	and	x12, x12, x11
0000000000045240	cmp	x12, x20
0000000000045244	b.ne	0x45284
0000000000045248	ldr	x12, [x10, #0x10]
000000000004524c	cmp	x12, x22
0000000000045250	b.eq	0x451a0
0000000000045254	ldr	x10, [x10]
0000000000045258	cbz	x10, 0x45284
000000000004525c	ldr	x12, [x10, #0x8]
0000000000045260	cmp	x12, x26
0000000000045264	b.eq	0x45248
0000000000045268	cmp	x9, #0x1
000000000004526c	b.ls	0x4523c
0000000000045270	cmp	x12, x25
0000000000045274	b.lo	0x45240
0000000000045278	udiv	x13, x12, x25
000000000004527c	msub	x12, x13, x25, x12
0000000000045280	b	0x45240
0000000000045284	mov	w0, #0x1
0000000000045288	mov	w1, #0x18
000000000004528c	bl	0x55aec ; symbol stub for: _calloc
0000000000045290	mov	x23, x0
0000000000045294	stp	x26, x22, [x0, #0x8]
0000000000045298	ldr	x8, [x27, #0x48]
000000000004529c	add	x8, x8, #0x1
00000000000452a0	ucvtf	s0, x8
00000000000452a4	ldr	s1, [x27, #0x50]
00000000000452a8	cbz	x25, 0x452d4
00000000000452ac	ucvtf	s2, x25
00000000000452b0	fmul	s2, s1, s2
00000000000452b4	fcmp	s2, s0
00000000000452b8	b.mi	0x452d4
00000000000452bc	ldr	x9, [x27, #0x30]
00000000000452c0	ldr	x8, [x9, x20, lsl #3]
00000000000452c4	cbz	x8, 0x453cc
00000000000452c8	ldr	x9, [x8]
00000000000452cc	str	x9, [x23]
00000000000452d0	b	0x45448
00000000000452d4	cmp	x25, #0x3
00000000000452d8	cset	w8, lo
00000000000452dc	sub	x9, x25, #0x1
00000000000452e0	tst	x25, x9
00000000000452e4	cset	w9, ne
00000000000452e8	orr	w8, w8, w9
00000000000452ec	bfi	x8, x25, #1, #63
00000000000452f0	fdiv	s0, s0, s1
00000000000452f4	fcvtpu	x9, s0
00000000000452f8	cmp	x8, x9
00000000000452fc	csel	x24, x9, x8, lo
0000000000045300	subs	x8, x24, #0x1
0000000000045304	b.ne	0x45310
0000000000045308	mov	w24, #0x2
000000000004530c	b	0x45328
0000000000045310	tst	x24, x8
0000000000045314	b.eq	0x45328
0000000000045318	mov	x0, x24
000000000004531c	bl	0x558f4 ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000045320	mov	x24, x0
0000000000045324	ldr	x25, [x27, #0x38]
0000000000045328	cmp	x24, x25
000000000004532c	b.ls	0x45340
0000000000045330	sub	x0, x29, #0xd0
0000000000045334	mov	x1, x24
0000000000045338	bl	__ZNSt3__112__hash_tableIP8ProtocolNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm
000000000004533c	b	0x453ac
0000000000045340	b.hs	0x453ac
0000000000045344	ldr	x8, [x27, #0x48]
0000000000045348	ucvtf	s0, x8
000000000004534c	ldr	s1, [x27, #0x50]
0000000000045350	fdiv	s0, s0, s1
0000000000045354	fcvtpu	x0, s0
0000000000045358	cmp	x25, #0x3
000000000004535c	b.lo	0x45398
0000000000045360	fmov	d0, x25
0000000000045364	cnt.8b	v0, v0
0000000000045368	uaddlv.8b	h0, v0
000000000004536c	fmov	w8, s0
0000000000045370	cmp	x8, #0x1
0000000000045374	b.hi	0x45398
0000000000045378	sub	x8, x0, #0x1
000000000004537c	clz	x8, x8
0000000000045380	neg	x8, x8
0000000000045384	mov	w9, #0x1
0000000000045388	lsl	x8, x9, x8
000000000004538c	cmp	x0, #0x2
0000000000045390	csel	x0, x0, x8, lo
0000000000045394	b	0x4539c
0000000000045398	bl	0x558f4 ; symbol stub for: __ZNSt3__112__next_primeEm
000000000004539c	cmp	x24, x0
00000000000453a0	csel	x24, x0, x24, lo
00000000000453a4	cmp	x24, x25
00000000000453a8	b.lo	0x45330
00000000000453ac	ldr	x25, [x27, #0x38]
00000000000453b0	sub	x8, x25, #0x1
00000000000453b4	tst	x25, x8
00000000000453b8	b.ne	0x453fc
00000000000453bc	and	x20, x8, x26
00000000000453c0	ldr	x9, [x27, #0x30]
00000000000453c4	ldr	x8, [x9, x20, lsl #3]
00000000000453c8	cbnz	x8, 0x452c8
00000000000453cc	ldr	x8, [x27, #0x40]
00000000000453d0	str	x8, [x23]
00000000000453d4	str	x23, [x27, #0x40]
00000000000453d8	str	x19, [x9, x20, lsl #3]
00000000000453dc	ldr	x8, [x23]
00000000000453e0	cbz	x8, 0x4544c
00000000000453e4	ldr	x8, [x8, #0x8]
00000000000453e8	sub	x9, x25, #0x1
00000000000453ec	tst	x25, x9
00000000000453f0	b.ne	0x45430
00000000000453f4	and	x8, x8, x9
00000000000453f8	b	0x45440
00000000000453fc	cmp	x26, x25
0000000000045400	b.hs	0x45418
0000000000045404	mov	x20, x26
0000000000045408	ldr	x9, [x27, #0x30]
000000000004540c	ldr	x8, [x9, x20, lsl #3]
0000000000045410	cbnz	x8, 0x452c8
0000000000045414	b	0x453cc
0000000000045418	udiv	x8, x26, x25
000000000004541c	msub	x20, x8, x25, x26
0000000000045420	ldr	x9, [x27, #0x30]
0000000000045424	ldr	x8, [x9, x20, lsl #3]
0000000000045428	cbnz	x8, 0x452c8
000000000004542c	b	0x453cc
0000000000045430	cmp	x8, x25
0000000000045434	b.lo	0x45440
0000000000045438	udiv	x9, x8, x25
000000000004543c	msub	x8, x9, x25, x8
0000000000045440	ldr	x9, [x27, #0x30]
0000000000045444	add	x8, x9, x8, lsl #3
0000000000045448	str	x23, [x8]
000000000004544c	ldr	x8, [x27, #0x48]
0000000000045450	add	x8, x8, #0x1
0000000000045454	str	x8, [x27, #0x48]
0000000000045458	mov	x0, x22
000000000004545c	bl	0x55d38 ; symbol stub for: _protocol_getName
0000000000045460	ldr	x1, [x21, #0xc8]
0000000000045464	bl	0x55e64 ; symbol stub for: _strcmp
0000000000045468	cbnz	w0, 0x45520
000000000004546c	ldp	x9, x8, [sp, #0xa0]
0000000000045470	cmp	x9, x8
0000000000045474	b.eq	0x4548c
0000000000045478	nop
000000000004547c	ldr	x8, #0x32c24
0000000000045480	str	x8, [x9], #0x8
0000000000045484	str	x9, [sp, #0xa0]
0000000000045488	b	0x45520
000000000004548c	mov	x20, x19
0000000000045490	ldr	x23, [sp, #0x98]
0000000000045494	sub	x24, x9, x23
0000000000045498	asr	x19, x24, #3
000000000004549c	add	x9, x19, #0x1
00000000000454a0	lsr	x10, x9, #61
00000000000454a4	cbnz	x10, 0x466ec
00000000000454a8	sub	x8, x8, x23
00000000000454ac	asr	x10, x8, #2
00000000000454b0	cmp	x10, x9
00000000000454b4	csel	x9, x9, x10, lo
00000000000454b8	mov	x10, #0xfffffffffffffff
00000000000454bc	cmp	x10, x8, asr #3
00000000000454c0	mov	x8, #0x1fffffffffffffff
00000000000454c4	csel	x25, x9, x8, hi
00000000000454c8	cbz	x25, 0x45558
00000000000454cc	mov	x0, x25
00000000000454d0	mov	w1, #0x8
00000000000454d4	bl	0x55aec ; symbol stub for: _calloc
00000000000454d8	mov	x26, x0
00000000000454dc	add	x19, x26, x19, lsl #3
00000000000454e0	nop
00000000000454e4	ldr	x8, #0x32bbc
00000000000454e8	str	x8, [x19], #0x8
00000000000454ec	cmp	x24, #0x1
00000000000454f0	b.lt	0x45504
00000000000454f4	mov	x0, x26
00000000000454f8	mov	x1, x23
00000000000454fc	mov	x2, x24
0000000000045500	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000045504	add	x8, x26, x25, lsl #3
0000000000045508	stp	x26, x19, [sp, #0x98]
000000000004550c	str	x8, [sp, #0xa8]
0000000000045510	mov	x19, x20
0000000000045514	cbz	x23, 0x45520
0000000000045518	mov	x0, x23
000000000004551c	bl	0x55b7c ; symbol stub for: _free
0000000000045520	sub	x1, x29, #0xa8
0000000000045524	mov	x0, x22
0000000000045528	bl	0x55d2c ; symbol stub for: _protocol_copyProtocolList
000000000004552c	mov	x22, x0
0000000000045530	cbz	x0, 0x4519c
0000000000045534	ldr	x1, [x27, #0x78]
0000000000045538	ldr	w8, [x27, #0x58]
000000000004553c	add	x3, x22, x8, lsl #3
0000000000045540	sub	x0, x29, #0x90
0000000000045544	mov	x2, x22
0000000000045548	bl	__ZNSt3__16vectorIP8ProtocolN6kotlin11std_support9allocatorIS2_EEE6insertIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueENS_11__wrap_iterIS9_EEE4typeENSF_IPKS2_EESB_SB_
000000000004554c	mov	x0, x22
0000000000045550	bl	0x55b7c ; symbol stub for: _free
0000000000045554	b	0x4519c
0000000000045558	mov	x26, #0x0
000000000004555c	add	x19, x26, x19, lsl #3
0000000000045560	nop
0000000000045564	ldr	x8, #0x32b3c
0000000000045568	str	x8, [x19], #0x8
000000000004556c	cmp	x24, #0x1
0000000000045570	b.ge	0x454f4
0000000000045574	b	0x45504
0000000000045578	mov	x0, x8
000000000004557c	cbz	x0, 0x45588
0000000000045580	str	x0, [x27, #0x78]
0000000000045584	bl	0x55b7c ; symbol stub for: _free
0000000000045588	ldr	x0, [x27, #0x40]
000000000004558c	ldr	x20, [sp, #0x40]
0000000000045590	cbz	x0, 0x455a4
0000000000045594	ldr	x19, [x0]
0000000000045598	bl	0x55b7c ; symbol stub for: _free
000000000004559c	mov	x0, x19
00000000000455a0	cbnz	x19, 0x45594
00000000000455a4	ldr	x0, [x27, #0x30]
00000000000455a8	str	xzr, [x27, #0x30]
00000000000455ac	cbz	x0, 0x455b4
00000000000455b0	bl	0x55b7c ; symbol stub for: _free
00000000000455b4	ldr	x22, [x20, #0x30]
00000000000455b8	ldrsw	x23, [x20, #0x38]
00000000000455bc	stp	xzr, xzr, [sp, #0x88]
00000000000455c0	str	xzr, [sp, #0x80]
00000000000455c4	cbz	w23, 0x455fc
00000000000455c8	tbnz	w23, #0x1f, 0x46708
00000000000455cc	lsl	x24, x23, #3
00000000000455d0	mov	x0, x23
00000000000455d4	mov	w1, #0x8
00000000000455d8	bl	0x55aec ; symbol stub for: _calloc
00000000000455dc	stp	x0, x0, [sp, #0x80]
00000000000455e0	add	x19, x0, x23, lsl #3
00000000000455e4	str	x19, [sp, #0x90]
00000000000455e8	mov	x1, x22
00000000000455ec	mov	x2, x24
00000000000455f0	bl	0x55bd0 ; symbol stub for: _memcpy
00000000000455f4	str	x19, [sp, #0x88]
00000000000455f8	b	0x45600
00000000000455fc	mov	x19, #0x0
0000000000045600	mov	x27, #0xfffffffffffffff
0000000000045604	mov	x21, #0x1fffffffffffffff
0000000000045608	mov	x8, x19
000000000004560c	mov	x26, x19
0000000000045610	ldr	x20, [sp, #0x40]
0000000000045614	cmp	x26, x8
0000000000045618	b.eq	0x45634
000000000004561c	str	x20, [x26], #0x8
0000000000045620	str	x26, [sp, #0x88]
0000000000045624	mov	x19, x26
0000000000045628	ldr	x20, [x20, #0x18]
000000000004562c	cbnz	x20, 0x456f0
0000000000045630	b	0x45700
0000000000045634	ldr	x22, [sp, #0x80]
0000000000045638	sub	x8, x8, x22
000000000004563c	asr	x25, x8, #3
0000000000045640	add	x9, x25, #0x1
0000000000045644	lsr	x10, x9, #61
0000000000045648	cbnz	x10, 0x466c0
000000000004564c	asr	x8, x8, #2
0000000000045650	cmp	x8, x9
0000000000045654	csel	x8, x9, x8, lo
0000000000045658	cmp	x25, x27
000000000004565c	csel	x23, x8, x21, lo
0000000000045660	cbz	x23, 0x456c4
0000000000045664	mov	x0, x23
0000000000045668	mov	w1, #0x8
000000000004566c	bl	0x55aec ; symbol stub for: _calloc
0000000000045670	mov	x24, x0
0000000000045674	add	x26, x24, x25, lsl #3
0000000000045678	sub	x2, x19, x22
000000000004567c	sub	x25, x26, x2
0000000000045680	str	x20, [x26], #0x8
0000000000045684	cmp	x2, #0x1
0000000000045688	b.lt	0x45698
000000000004568c	mov	x0, x25
0000000000045690	mov	x1, x22
0000000000045694	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000045698	add	x8, x24, x23, lsl #3
000000000004569c	stp	x25, x26, [sp, #0x80]
00000000000456a0	str	x8, [sp, #0x90]
00000000000456a4	cbz	x22, 0x456e4
00000000000456a8	mov	x0, x22
00000000000456ac	bl	0x55b7c ; symbol stub for: _free
00000000000456b0	ldr	x19, [sp, #0x88]
00000000000456b4	mov	x26, x19
00000000000456b8	ldr	x20, [x20, #0x18]
00000000000456bc	cbnz	x20, 0x456f0
00000000000456c0	b	0x45700
00000000000456c4	mov	x24, #0x0
00000000000456c8	add	x26, x24, x25, lsl #3
00000000000456cc	sub	x2, x19, x22
00000000000456d0	sub	x25, x26, x2
00000000000456d4	str	x20, [x26], #0x8
00000000000456d8	cmp	x2, #0x1
00000000000456dc	b.ge	0x4568c
00000000000456e0	b	0x45698
00000000000456e4	mov	x19, x26
00000000000456e8	ldr	x20, [x20, #0x18]
00000000000456ec	cbz	x20, 0x45700
00000000000456f0	ldr	x8, [sp, #0x90]
00000000000456f4	cmp	x26, x8
00000000000456f8	b.ne	0x4561c
00000000000456fc	b	0x45634
0000000000045700	mov	w8, #0x1
0000000000045704	strb	w8, [sp, #0x7f]
0000000000045708	nop
000000000004570c	ldr	x8, #0x1a8fc ; literal pool symbol address: _NSGenericException
0000000000045710	ldr	x23, [sp, #0x80]
0000000000045714	cmp	x23, x26
0000000000045718	str	x28, [sp, #0x68]
000000000004571c	b.eq	0x45998
0000000000045720	ldr	x8, [x8]
0000000000045724	str	x8, [sp, #0x48]
0000000000045728	mov	w27, #0x1
000000000004572c	mov	x25, #0x2d69
0000000000045730	movk	x25, #0xeb38, lsl #16
0000000000045734	movk	x25, #0xea08, lsl #32
0000000000045738	movk	x25, #0x9ddf, lsl #48
000000000004573c	b	0x4574c
0000000000045740	add	x23, x23, #0x8
0000000000045744	cmp	x23, x26
0000000000045748	b.eq	0x4598c
000000000004574c	ldr	x8, [x23]
0000000000045750	ldr	x8, [x8, #0x60]
0000000000045754	ldr	x22, [x8, #0x10]
0000000000045758	cbz	x22, 0x45740
000000000004575c	ldr	w8, [x22, #0x68]
0000000000045760	cmp	w8, #0x1
0000000000045764	b.lt	0x45740
0000000000045768	mov	x24, #0x0
000000000004576c	nop
0000000000045770	ldr	x8, #0x316a0 ; Objc selector ref: raise:format:
0000000000045774	str	x8, [sp, #0x50]
0000000000045778	b	0x457a4
000000000004577c	mov	x9, x15
0000000000045780	mov	w27, #0x0
0000000000045784	sxtw	x8, w8
0000000000045788	ldr	x10, [x19]
000000000004578c	ldr	x9, [x9, #0x28]
0000000000045790	str	x10, [x9, x8, lsl #3]
0000000000045794	add	x24, x24, #0x1
0000000000045798	ldrsw	x8, [x22, #0x68]
000000000004579c	cmp	x24, x8
00000000000457a0	b.ge	0x45740
00000000000457a4	ldr	x21, [x22, #0x60]
00000000000457a8	add	x20, x21, x24, lsl #5
00000000000457ac	ldr	x0, [x20]
00000000000457b0	bl	0x55e40 ; symbol stub for: _sel_registerName
00000000000457b4	ldr	x8, [sp, #0xe8]
00000000000457b8	cbz	x8, 0x45794
00000000000457bc	lsr	x9, x0, #32
00000000000457c0	lsl	w10, w0, #3
00000000000457c4	add	x10, x10, #0x8
00000000000457c8	eor	x10, x10, x9
00000000000457cc	mul	x10, x10, x25
00000000000457d0	eor	x9, x10, x9
00000000000457d4	eor	x9, x9, x10, lsr #47
00000000000457d8	mul	x9, x9, x25
00000000000457dc	eor	x9, x9, x9, lsr #47
00000000000457e0	mul	x9, x9, x25
00000000000457e4	fmov	d0, x8
00000000000457e8	cnt.8b	v0, v0
00000000000457ec	uaddlv.8b	h0, v0
00000000000457f0	fmov	w10, s0
00000000000457f4	cmp	x10, #0x1
00000000000457f8	b.hi	0x45808
00000000000457fc	sub	x11, x8, #0x1
0000000000045800	and	x11, x11, x9
0000000000045804	b	0x4581c
0000000000045808	mov	x11, x9
000000000004580c	cmp	x9, x8
0000000000045810	b.lo	0x4581c
0000000000045814	udiv	x11, x9, x8
0000000000045818	msub	x11, x11, x8, x9
000000000004581c	ldr	x12, [sp, #0xe0]
0000000000045820	ldr	x12, [x12, x11, lsl #3]
0000000000045824	cbz	x12, 0x45794
0000000000045828	ldr	x12, [x12]
000000000004582c	cbz	x12, 0x45794
0000000000045830	sub	x13, x8, #0x1
0000000000045834	b	0x4584c
0000000000045838	ldr	x14, [x12, #0x10]
000000000004583c	cmp	x14, x0
0000000000045840	b.eq	0x45884
0000000000045844	ldr	x12, [x12]
0000000000045848	cbz	x12, 0x45794
000000000004584c	ldr	x14, [x12, #0x8]
0000000000045850	cmp	x14, x9
0000000000045854	b.eq	0x45838
0000000000045858	cmp	x10, #0x1
000000000004585c	b.hi	0x45868
0000000000045860	and	x14, x14, x13
0000000000045864	b	0x45878
0000000000045868	cmp	x14, x8
000000000004586c	b.lo	0x45878
0000000000045870	udiv	x15, x14, x8
0000000000045874	msub	x14, x15, x8, x14
0000000000045878	cmp	x14, x11
000000000004587c	b.eq	0x45844
0000000000045880	b	0x45794
0000000000045884	str	w27, [sp, #0x58]
0000000000045888	add	x28, x21, x24, lsl #5
000000000004588c	mov	x19, x28
0000000000045890	ldr	x8, [x19, #0x18]!
0000000000045894	cbnz	x8, 0x458f4
0000000000045898	ldr	w8, [x28, #0x14]
000000000004589c	cmn	w8, #0x2
00000000000458a0	adr	x9, #0x2c6f0 ; Objc cfstring ref: @"bad cfstring ref"
00000000000458a4	nop
00000000000458a8	adr	x10, #0x2c708 ; Objc cfstring ref: @"bad cfstring ref"
00000000000458ac	nop
00000000000458b0	csel	x9, x10, x9, eq
00000000000458b4	cmn	w8, #0x1
00000000000458b8	adr	x8, #0x2c718 ; Objc cfstring ref: @"bad cfstring ref"
00000000000458bc	nop
00000000000458c0	csel	x27, x8, x9, eq
00000000000458c4	nop
00000000000458c8	ldr	x25, #0x31790 ; Objc class ref: _OBJC_CLASS_$_NSException
00000000000458cc	ldr	x0, [sp, #0x60]
00000000000458d0	bl	0x55b34 ; symbol stub for: _class_getName
00000000000458d4	ldr	x8, [x20]
00000000000458d8	stp	x8, x27, [sp, #0x8]
00000000000458dc	str	x0, [sp]
00000000000458e0	mov	x0, x25
00000000000458e4	ldp	x2, x1, [sp, #0x48]
00000000000458e8	adr	x3, #0x2c708 ; Objc cfstring ref: @"bad cfstring ref"
00000000000458ec	nop
00000000000458f0	bl	0x55ca8 ; Objc message: +[NSException raise:format:]
00000000000458f4	ldrsw	x8, [x28, #0x14]
00000000000458f8	cmn	w8, #0x1
00000000000458fc	b.eq	0x4590c
0000000000045900	ldr	x9, [x19]
0000000000045904	ldr	x10, [sp, #0xc8]
0000000000045908	str	x9, [x10, x8, lsl #3]
000000000004590c	mov	w27, #0x0
0000000000045910	ldp	x15, x8, [sp, #0x68]
0000000000045914	mov	x25, #0x2d69
0000000000045918	movk	x25, #0xeb38, lsl #16
000000000004591c	movk	x25, #0xea08, lsl #32
0000000000045920	movk	x25, #0x9ddf, lsl #48
0000000000045924	cbz	x8, 0x45794
0000000000045928	add	x8, x21, x24, lsl #5
000000000004592c	ldr	w8, [x8, #0x10]
0000000000045930	cmn	w8, #0x1
0000000000045934	b.eq	0x45794
0000000000045938	ldr	x14, [sp, #0xb8]
000000000004593c	cbz	x14, 0x4577c
0000000000045940	add	x9, x21, x24, lsl #5
0000000000045944	ldr	w10, [x9, #0x8]
0000000000045948	mov	x9, x15
000000000004594c	mov	x11, x14
0000000000045950	mov	x12, x9
0000000000045954	ldr	w13, [x14, #0x20]
0000000000045958	cmp	w13, w10
000000000004595c	cset	w14, lt
0000000000045960	csel	x9, x9, x11, lt
0000000000045964	ldr	x14, [x11, w14, uxtw #3]
0000000000045968	cbnz	x14, 0x4594c
000000000004596c	cmp	x9, x15
0000000000045970	b.eq	0x4577c
0000000000045974	cmp	w13, w10
0000000000045978	csel	x11, x12, x11, lt
000000000004597c	ldr	w11, [x11, #0x20]
0000000000045980	cmp	w11, w10
0000000000045984	b.gt	0x4577c
0000000000045988	b	0x45780
000000000004598c	strb	w27, [sp, #0x7f]
0000000000045990	nop
0000000000045994	ldr	x8, #0x1a674 ; literal pool symbol address: _NSGenericException
0000000000045998	ldp	x21, x9, [sp, #0x98]
000000000004599c	str	x9, [sp, #0x58]
00000000000459a0	cmp	x21, x9
00000000000459a4	ldr	x23, [sp, #0x70]
00000000000459a8	b.eq	0x45b24
00000000000459ac	ldr	x22, [x8]
00000000000459b0	b	0x459c4
00000000000459b4	add	x21, x21, #0x8
00000000000459b8	ldr	x8, [sp, #0x58]
00000000000459bc	cmp	x21, x8
00000000000459c0	b.eq	0x45b24
00000000000459c4	ldr	x8, [x21]
00000000000459c8	ldr	x9, [x8, #0x60]
00000000000459cc	ldr	x27, [x9, #0x10]
00000000000459d0	cbz	x27, 0x459b4
00000000000459d4	cbz	x23, 0x459ec
00000000000459d8	ldr	w2, [x8, #0x5c]
00000000000459dc	ldr	w3, [x27, #0x20]
00000000000459e0	add	x0, sp, #0xb0
00000000000459e4	add	x1, sp, #0x7f
00000000000459e8	bl	__ZZL14createTypeInfoP10objc_classPK8TypeInfoS3_ENK3$_1clEii
00000000000459ec	ldr	w8, [x27, #0x68]
00000000000459f0	cmp	w8, #0x1
00000000000459f4	b.lt	0x459b4
00000000000459f8	mov	x20, #0x0
00000000000459fc	nop
0000000000045a00	ldr	x24, #0x31410 ; Objc selector ref: raise:format:
0000000000045a04	b	0x45a2c
0000000000045a08	mov	x8, x13
0000000000045a0c	ldrsw	x9, [x19]
0000000000045a10	ldr	x10, [x26]
0000000000045a14	ldr	x8, [x8, #0x28]
0000000000045a18	str	x10, [x8, x9, lsl #3]
0000000000045a1c	add	x20, x20, #0x1
0000000000045a20	ldrsw	x8, [x27, #0x68]
0000000000045a24	cmp	x20, x8
0000000000045a28	b.ge	0x459b4
0000000000045a2c	strb	wzr, [sp, #0x7f]
0000000000045a30	ldr	x28, [x27, #0x60]
0000000000045a34	add	x19, x28, x20, lsl #5
0000000000045a38	mov	x26, x19
0000000000045a3c	ldr	x8, [x26, #0x18]!
0000000000045a40	cbnz	x8, 0x45aa8
0000000000045a44	ldr	w8, [x19, #0x14]
0000000000045a48	cmn	w8, #0x2
0000000000045a4c	adr	x9, #0x2c544 ; Objc cfstring ref: @"bad cfstring ref"
0000000000045a50	nop
0000000000045a54	adr	x10, #0x2c55c ; Objc cfstring ref: @"bad cfstring ref"
0000000000045a58	nop
0000000000045a5c	csel	x9, x10, x9, eq
0000000000045a60	cmn	w8, #0x1
0000000000045a64	adr	x8, #0x2c56c ; Objc cfstring ref: @"bad cfstring ref"
0000000000045a68	nop
0000000000045a6c	csel	x23, x8, x9, eq
0000000000045a70	nop
0000000000045a74	ldr	x25, #0x315e4 ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000045a78	ldr	x0, [sp, #0x60]
0000000000045a7c	bl	0x55b34 ; symbol stub for: _class_getName
0000000000045a80	lsl	x8, x20, #5
0000000000045a84	ldr	x8, [x28, x8]
0000000000045a88	stp	x8, x23, [sp, #0x8]
0000000000045a8c	str	x0, [sp]
0000000000045a90	mov	x0, x25
0000000000045a94	mov	x1, x24
0000000000045a98	mov	x2, x22
0000000000045a9c	adr	x3, #0x2c554 ; Objc cfstring ref: @"bad cfstring ref"
0000000000045aa0	nop
0000000000045aa4	bl	0x55ca8 ; Objc message: +[NSException raise:format:]
0000000000045aa8	ldr	x23, [sp, #0x70]
0000000000045aac	cbz	x23, 0x45a1c
0000000000045ab0	ldr	w8, [x19, #0x10]!
0000000000045ab4	cmn	w8, #0x1
0000000000045ab8	b.eq	0x45a1c
0000000000045abc	add	x8, x28, x20, lsl #5
0000000000045ac0	ldp	w25, w3, [x8, #0x8]
0000000000045ac4	add	x0, sp, #0xb0
0000000000045ac8	add	x1, sp, #0x7f
0000000000045acc	mov	x2, x25
0000000000045ad0	bl	__ZZL14createTypeInfoP10objc_classPK8TypeInfoS3_ENK3$_1clEii
0000000000045ad4	ldr	x12, [sp, #0xb8]
0000000000045ad8	ldr	x13, [sp, #0x68]
0000000000045adc	cbz	x12, 0x45a08
0000000000045ae0	mov	x8, x13
0000000000045ae4	mov	x9, x12
0000000000045ae8	mov	x10, x8
0000000000045aec	ldr	w11, [x12, #0x20]
0000000000045af0	cmp	w11, w25
0000000000045af4	cset	w12, lt
0000000000045af8	csel	x8, x8, x9, lt
0000000000045afc	ldr	x12, [x9, w12, uxtw #3]
0000000000045b00	cbnz	x12, 0x45ae4
0000000000045b04	cmp	x8, x13
0000000000045b08	b.eq	0x45a08
0000000000045b0c	cmp	w11, w25
0000000000045b10	csel	x9, x10, x9, lt
0000000000045b14	ldr	w9, [x9, #0x20]
0000000000045b18	cmp	w9, w25
0000000000045b1c	b.gt	0x45a08
0000000000045b20	b	0x45a0c
0000000000045b24	ldr	x0, [sp, #0x60]
0000000000045b28	bl	0x55b34 ; symbol stub for: _class_getName
0000000000045b2c	str	x0, [sp, #0x58]
0000000000045b30	ldrb	w8, [sp, #0x7f]
0000000000045b34	str	w8, [sp, #0x50]
0000000000045b38	ldp	x9, x8, [sp, #0xc8]
0000000000045b3c	sub	x8, x8, x9
0000000000045b40	add	x1, x8, #0x70
0000000000045b44	mov	w0, #0x1
0000000000045b48	bl	0x55aec ; symbol stub for: _calloc
0000000000045b4c	mov	x22, x0
0000000000045b50	str	x0, [x0]
0000000000045b54	mov	w8, #0x8
0000000000045b58	str	w8, [x0, #0x58]
0000000000045b5c	ldr	x9, [sp, #0x40]
0000000000045b60	str	x9, [x0, #0x18]
0000000000045b64	ldr	w8, [x9, #0x14]
0000000000045b68	str	w8, [x0, #0x14]
0000000000045b6c	ldr	x8, [x9, #0x20]
0000000000045b70	str	x8, [x0, #0x20]
0000000000045b74	ldr	w8, [x9, #0x28]
0000000000045b78	str	w8, [x0, #0x28]
0000000000045b7c	ldrb	w8, [x9, #0x58]
0000000000045b80	add	x27, sp, #0xe0
0000000000045b84	ldr	x28, [sp, #0x68]
0000000000045b88	tbz	w8, #0x0, 0x45b94
0000000000045b8c	mov	w8, #0x9
0000000000045b90	str	w8, [x22, #0x58]
0000000000045b94	ldr	w8, [x9, #0x5c]
0000000000045b98	str	w8, [x22, #0x5c]
0000000000045b9c	ldr	x24, [x9, #0x30]
0000000000045ba0	ldrsw	x25, [x9, #0x38]
0000000000045ba4	stp	xzr, xzr, [x27, #0x60]
0000000000045ba8	str	xzr, [x27, #0x58]
0000000000045bac	cbz	w25, 0x45e50
0000000000045bb0	tbnz	w25, #0x1f, 0x46714
0000000000045bb4	lsl	x26, x25, #3
0000000000045bb8	mov	x0, x25
0000000000045bbc	mov	w1, #0x8
0000000000045bc0	bl	0x55aec ; symbol stub for: _calloc
0000000000045bc4	mov	x21, x0
0000000000045bc8	str	x0, [x27, #0x58]
0000000000045bcc	add	x19, x0, x25, lsl #3
0000000000045bd0	str	x19, [x27, #0x68]
0000000000045bd4	mov	x1, x24
0000000000045bd8	mov	x2, x26
0000000000045bdc	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000045be0	str	x19, [x27, #0x60]
0000000000045be4	movi.16b	v0, #0x0
0000000000045be8	stp	q0, q0, [x27, #0x30]
0000000000045bec	mov	w8, #0x3f800000
0000000000045bf0	str	w8, [x27, #0x50]
0000000000045bf4	cmp	x21, x19
0000000000045bf8	b.eq	0x45c18
0000000000045bfc	ldr	x1, [x21]
0000000000045c00	sub	x0, x29, #0xd0
0000000000045c04	mov	x2, x21
0000000000045c08	bl	__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_
0000000000045c0c	add	x21, x21, #0x8
0000000000045c10	cmp	x21, x19
0000000000045c14	b.ne	0x45bfc
0000000000045c18	ldp	x20, x23, [sp, #0x98]
0000000000045c1c	cmp	x20, x23
0000000000045c20	b.ne	0x45c5c
0000000000045c24	ldp	x19, x20, [x27, #0x58]
0000000000045c28	subs	x8, x20, x19
0000000000045c2c	asr	x21, x8, #3
0000000000045c30	mov	x0, x21
0000000000045c34	mov	w1, #0x8
0000000000045c38	bl	0x55aec ; symbol stub for: _calloc
0000000000045c3c	cmp	x20, x19
0000000000045c40	b.ne	0x45d44
0000000000045c44	mov	x21, #0x0
0000000000045c48	ldr	x11, [sp, #0x70]
0000000000045c4c	b	0x45d64
0000000000045c50	add	x20, x20, #0x8
0000000000045c54	cmp	x20, x23
0000000000045c58	b.eq	0x45c24
0000000000045c5c	ldr	x21, [x20]
0000000000045c60	str	x21, [x27, #0x70]
0000000000045c64	sub	x0, x29, #0xd0
0000000000045c68	sub	x2, x29, #0x90
0000000000045c6c	mov	x1, x21
0000000000045c70	bl	__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_
0000000000045c74	tbz	w0, #0x0, 0x45c50
0000000000045c78	ldp	x9, x8, [x27, #0x60]
0000000000045c7c	cmp	x9, x8
0000000000045c80	b.eq	0x45c9c
0000000000045c84	str	x21, [x9], #0x8
0000000000045c88	str	x9, [x27, #0x60]
0000000000045c8c	add	x20, x20, #0x8
0000000000045c90	cmp	x20, x23
0000000000045c94	b.ne	0x45c5c
0000000000045c98	b	0x45c24
0000000000045c9c	ldr	x24, [x27, #0x58]
0000000000045ca0	sub	x25, x9, x24
0000000000045ca4	asr	x19, x25, #3
0000000000045ca8	add	x9, x19, #0x1
0000000000045cac	lsr	x10, x9, #61
0000000000045cb0	cbnz	x10, 0x466dc
0000000000045cb4	sub	x8, x8, x24
0000000000045cb8	asr	x10, x8, #2
0000000000045cbc	cmp	x10, x9
0000000000045cc0	csel	x9, x9, x10, lo
0000000000045cc4	mov	x10, #0xfffffffffffffff
0000000000045cc8	cmp	x10, x8, asr #3
0000000000045ccc	mov	x8, #0x1fffffffffffffff
0000000000045cd0	csel	x26, x9, x8, hi
0000000000045cd4	cbz	x26, 0x45d2c
0000000000045cd8	mov	x0, x26
0000000000045cdc	mov	w1, #0x8
0000000000045ce0	bl	0x55aec ; symbol stub for: _calloc
0000000000045ce4	mov	x27, x0
0000000000045ce8	add	x19, x27, x19, lsl #3
0000000000045cec	str	x21, [x19], #0x8
0000000000045cf0	cmp	x25, #0x1
0000000000045cf4	b.lt	0x45d08
0000000000045cf8	mov	x0, x27
0000000000045cfc	mov	x1, x24
0000000000045d00	mov	x2, x25
0000000000045d04	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000045d08	add	x8, x27, x26, lsl #3
0000000000045d0c	add	x9, sp, #0xe0
0000000000045d10	str	x27, [x9, #0x58]
0000000000045d14	add	x27, sp, #0xe0
0000000000045d18	stp	x19, x8, [x27, #0x60]
0000000000045d1c	cbz	x24, 0x45c50
0000000000045d20	mov	x0, x24
0000000000045d24	bl	0x55b7c ; symbol stub for: _free
0000000000045d28	b	0x45c50
0000000000045d2c	mov	x27, #0x0
0000000000045d30	add	x19, x27, x19, lsl #3
0000000000045d34	str	x21, [x19], #0x8
0000000000045d38	cmp	x25, #0x1
0000000000045d3c	b.ge	0x45cf8
0000000000045d40	b	0x45d08
0000000000045d44	mov	x8, #0x0
0000000000045d48	ldr	x11, [sp, #0x70]
0000000000045d4c	lsl	x9, x8, #3
0000000000045d50	ldr	x10, [x19, x9]
0000000000045d54	str	x10, [x0, x9]
0000000000045d58	add	x8, x8, #0x1
0000000000045d5c	cmp	x8, x21
0000000000045d60	b.lo	0x45d4c
0000000000045d64	str	x0, [x22, #0x30]
0000000000045d68	str	w21, [x22, #0x38]
0000000000045d6c	cbz	x11, 0x45d84
0000000000045d70	ldr	w8, [sp, #0x50]
0000000000045d74	cbz	w8, 0x46140
0000000000045d78	ldr	w8, [sp, #0x3c]
0000000000045d7c	str	w8, [x22, #0x3c]
0000000000045d80	str	x11, [x22, #0x40]
0000000000045d84	str	xzr, [x22, #0x48]
0000000000045d88	ldr	x26, [sp, #0x58]
0000000000045d8c	mov	x0, x26
0000000000045d90	bl	0x55e7c ; symbol stub for: _strlen
0000000000045d94	mov	x24, x0
0000000000045d98	add	x21, x26, x0
0000000000045d9c	str	x26, [x27, #0x70]
0000000000045da0	cmp	x0, #0x1
0000000000045da4	b.lt	0x45e74
0000000000045da8	mov	w20, #0x0
0000000000045dac	mov	w19, #0x1
0000000000045db0	mov	w23, #0x34
0000000000045db4	mov	w25, #0xa
0000000000045db8	b	0x45dd8
0000000000045dbc	ldr	x8, [x27, #0x70]
0000000000045dc0	add	x8, x8, #0x1
0000000000045dc4	str	x8, [x27, #0x70]
0000000000045dc8	mov	w9, #0x1
0000000000045dcc	add	w20, w9, w20
0000000000045dd0	cmp	x8, x21
0000000000045dd4	b.hs	0x45e78
0000000000045dd8	str	wzr, [x27, #0x9c]
0000000000045ddc	sub	x0, x29, #0x90
0000000000045de0	sub	x2, x29, #0x64
0000000000045de4	mov	x1, x21
0000000000045de8	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
0000000000045dec	lsl	w8, w19, w0
0000000000045df0	tst	w8, w23
0000000000045df4	b.ne	0x45dbc
0000000000045df8	tst	w8, w25
0000000000045dfc	b.eq	0x45e30
0000000000045e00	ldr	x8, [x27, #0x70]
0000000000045e04	add	x9, x8, #0x1
0000000000045e08	mov	x8, x9
0000000000045e0c	str	x9, [x27, #0x70]
0000000000045e10	cmp	x9, x21
0000000000045e14	b.hs	0x45dc8
0000000000045e18	mov	x9, x8
0000000000045e1c	ldrb	w10, [x9], #0x1
0000000000045e20	and	w10, w10, #0xc0
0000000000045e24	cmp	w10, #0x80
0000000000045e28	b.eq	0x45e08
0000000000045e2c	b	0x45dc8
0000000000045e30	ldrh	w9, [x27, #0x9e]
0000000000045e34	ldr	x8, [x27, #0x70]
0000000000045e38	cmp	w9, #0x0
0000000000045e3c	cinc	w9, w19, ne
0000000000045e40	add	w20, w9, w20
0000000000045e44	cmp	x8, x21
0000000000045e48	b.lo	0x45dd8
0000000000045e4c	b	0x45e78
0000000000045e50	mov	x19, #0x0
0000000000045e54	mov	x21, #0x0
0000000000045e58	movi.16b	v0, #0x0
0000000000045e5c	stp	q0, q0, [x27, #0x30]
0000000000045e60	mov	w8, #0x3f800000
0000000000045e64	str	w8, [x27, #0x50]
0000000000045e68	cmp	x21, x19
0000000000045e6c	b.ne	0x45bfc
0000000000045e70	b	0x45c18
0000000000045e74	mov	w20, #0x0
0000000000045e78	mov	w8, w20
0000000000045e7c	lsl	x8, x8, #1
0000000000045e80	add	x0, x8, #0x10
0000000000045e84	mov	w19, #0x1
0000000000045e88	mov	w1, #0x1
0000000000045e8c	bl	0x55aec ; symbol stub for: _calloc
0000000000045e90	mov	x25, x0
0000000000045e94	adr	x8, #0x1c1dc
0000000000045e98	nop
0000000000045e9c	orr	x8, x8, #0x1
0000000000045ea0	str	x8, [x0]
0000000000045ea4	str	w20, [x0, #0x8]
0000000000045ea8	str	x26, [x27, #0x70]
0000000000045eac	cbz	x24, 0x45f6c
0000000000045eb0	add	x20, x25, #0x10
0000000000045eb4	mov	w23, #0x34
0000000000045eb8	mov	w24, #0xa
0000000000045ebc	mov	w26, #-0x2840
0000000000045ec0	b	0x45ee8
0000000000045ec4	add	w9, w26, w8, lsr #10
0000000000045ec8	strh	w9, [x20]
0000000000045ecc	mov	w9, #0xdc00
0000000000045ed0	bfxil	w9, w8, #0, #10
0000000000045ed4	strh	w9, [x20, #0x2]
0000000000045ed8	add	x20, x20, #0x4
0000000000045edc	ldr	x8, [x27, #0x70]
0000000000045ee0	cmp	x8, x21
0000000000045ee4	b.eq	0x45f6c
0000000000045ee8	str	wzr, [x27, #0x9c]
0000000000045eec	sub	x0, x29, #0x90
0000000000045ef0	sub	x2, x29, #0x64
0000000000045ef4	mov	x1, x21
0000000000045ef8	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
0000000000045efc	lsl	w8, w19, w0
0000000000045f00	tst	w8, w23
0000000000045f04	b.eq	0x45f18
0000000000045f08	ldr	x8, [x27, #0x70]
0000000000045f0c	add	x8, x8, #0x1
0000000000045f10	str	x8, [x27, #0x70]
0000000000045f14	b	0x45f44
0000000000045f18	tst	w8, w24
0000000000045f1c	b.eq	0x45f5c
0000000000045f20	ldr	x8, [x27, #0x70]
0000000000045f24	add	x8, x8, #0x1
0000000000045f28	str	x8, [x27, #0x70]
0000000000045f2c	cmp	x8, x21
0000000000045f30	b.hs	0x45f44
0000000000045f34	ldrb	w9, [x8], #0x1
0000000000045f38	and	w9, w9, #0xc0
0000000000045f3c	cmp	w9, #0x80
0000000000045f40	b.eq	0x45f28
0000000000045f44	mov	w8, #0xfffd
0000000000045f48	strh	w8, [x20], #0x2
0000000000045f4c	ldr	x8, [x27, #0x70]
0000000000045f50	cmp	x8, x21
0000000000045f54	b.ne	0x45ee8
0000000000045f58	b	0x45f6c
0000000000045f5c	ldr	w8, [x27, #0x9c]
0000000000045f60	cmp	w8, #0x10, lsl #12
0000000000045f64	b.lo	0x45f48
0000000000045f68	b	0x45ec4
0000000000045f6c	str	x25, [x22, #0x50]
0000000000045f70	mov	w0, #0x1
0000000000045f74	mov	w1, #0x18
0000000000045f78	bl	0x55aec ; symbol stub for: _calloc
0000000000045f7c	str	x0, [x22, #0x60]
0000000000045f80	ldp	x8, x9, [sp, #0xc8]
0000000000045f84	subs	x11, x9, x8
0000000000045f88	b.eq	0x45fb0
0000000000045f8c	mov	x9, #0x0
0000000000045f90	add	x10, x22, #0x70
0000000000045f94	asr	x11, x11, #3
0000000000045f98	lsl	x12, x9, #3
0000000000045f9c	ldr	x13, [x8, x12]
0000000000045fa0	str	x13, [x10, x12]
0000000000045fa4	add	x9, x9, #0x1
0000000000045fa8	cmp	x9, x11
0000000000045fac	b.lo	0x45f98
0000000000045fb0	ldr	x0, [x27, #0x40]
0000000000045fb4	ldr	x20, [sp, #0x60]
0000000000045fb8	cbz	x0, 0x45fcc
0000000000045fbc	ldr	x19, [x0]
0000000000045fc0	bl	0x55b7c ; symbol stub for: _free
0000000000045fc4	mov	x0, x19
0000000000045fc8	cbnz	x19, 0x45fbc
0000000000045fcc	ldr	x0, [x27, #0x30]
0000000000045fd0	str	xzr, [x27, #0x30]
0000000000045fd4	cbz	x0, 0x45fdc
0000000000045fd8	bl	0x55b7c ; symbol stub for: _free
0000000000045fdc	ldr	x0, [x27, #0x58]
0000000000045fe0	cbz	x0, 0x45fec
0000000000045fe4	str	x0, [x27, #0x60]
0000000000045fe8	bl	0x55b7c ; symbol stub for: _free
0000000000045fec	ldr	x8, [x22, #0x60]
0000000000045ff0	str	x20, [x8, #0x8]
0000000000045ff4	ldr	x0, [sp, #0x80]
0000000000045ff8	cbz	x0, 0x46004
0000000000045ffc	str	x0, [sp, #0x88]
0000000000046000	bl	0x55b7c ; symbol stub for: _free
0000000000046004	ldr	x0, [sp, #0x98]
0000000000046008	adrp	x20, 52 ; 0x7a000
000000000004600c	add	x20, x20, #0x4e0
0000000000046010	cbz	x0, 0x4601c
0000000000046014	str	x0, [sp, #0xa0]
0000000000046018	bl	0x55b7c ; symbol stub for: _free
000000000004601c	ldr	x0, [sp, #0xb8]
0000000000046020	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
0000000000046024	ldr	x0, [sp, #0xc8]
0000000000046028	cbz	x0, 0x46034
000000000004602c	str	x0, [sp, #0xd0]
0000000000046030	bl	0x55b7c ; symbol stub for: _free
0000000000046034	ldr	x0, [sp, #0xf0]
0000000000046038	cbz	x0, 0x4604c
000000000004603c	ldr	x19, [x0]
0000000000046040	bl	0x55b7c ; symbol stub for: _free
0000000000046044	mov	x0, x19
0000000000046048	cbnz	x19, 0x4603c
000000000004604c	ldr	x0, [sp, #0xe0]
0000000000046050	str	xzr, [sp, #0xe0]
0000000000046054	cbz	x0, 0x4605c
0000000000046058	bl	0x55b7c ; symbol stub for: _free
000000000004605c	ldr	x8, [sp, #0x30]
0000000000046060	cbz	x8, 0x46098
0000000000046064	add	x0, x8, #0x138
0000000000046068	ldr	x10, [sp, #0x20]
000000000004606c	ldaxr	w8, [x0]
0000000000046070	stlxr	w9, w10, [x0]
0000000000046074	cbnz	w9, 0x4606c
0000000000046078	cbnz	w10, 0x46098
000000000004607c	cmp	w8, #0x1
0000000000046080	b.ne	0x46098
0000000000046084	adr	x8, #0x4e485
0000000000046088	nop
000000000004608c	ldarb	w8, [x8]
0000000000046090	tbz	w8, #0x0, 0x46098
0000000000046094	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046098	str	x22, [x27, #0x30]
000000000004609c	mov	x0, x20
00000000000460a0	ldr	x8, [sp, #0x28]
00000000000460a4	blr	x8
00000000000460a8	ldr	x21, [x0]
00000000000460ac	cbz	x21, 0x460c8
00000000000460b0	add	x8, x21, #0x138
00000000000460b4	mov	w9, #0x1
00000000000460b8	ldaxr	w20, [x8]
00000000000460bc	stlxr	w10, w9, [x8]
00000000000460c0	cbnz	w10, 0x460b8
00000000000460c4	b	0x460cc
00000000000460c8	mov	w20, #0x1
00000000000460cc	nop
00000000000460d0	ldr	x0, #0x30f90 ; Objc class ref: _OBJC_CLASS_$_NSValue
00000000000460d4	bl	0x55c24 ; symbol stub for: _objc_alloc
00000000000460d8	nop
00000000000460dc	ldr	x1, #0x30c04 ; Objc selector ref: initWithBytes:objCType:
00000000000460e0	adr	x3, #0x17102 ; literal pool for: "^v"
00000000000460e4	nop
00000000000460e8	sub	x2, x29, #0xd0
00000000000460ec	bl	0x55ca8 ; Objc message: +[NSValue initWithBytes:objCType:]
00000000000460f0	mov	x2, x0
00000000000460f4	adr	x1, #0x4e41e
00000000000460f8	nop
00000000000460fc	ldr	x0, [sp, #0x60]
0000000000046100	mov	x3, #0x0
0000000000046104	bl	0x55cfc ; symbol stub for: _objc_setAssociatedObject
0000000000046108	cbz	x21, 0x44ad8
000000000004610c	add	x0, x21, #0x138
0000000000046110	ldaxr	w8, [x0]
0000000000046114	stlxr	w9, w20, [x0]
0000000000046118	cbnz	w9, 0x46110
000000000004611c	cbnz	w20, 0x44ad8
0000000000046120	cmp	w8, #0x1
0000000000046124	b.ne	0x44ad8
0000000000046128	adr	x8, #0x4e3e1
000000000004612c	nop
0000000000046130	ldarb	w8, [x8]
0000000000046134	tbz	w8, #0x0, 0x44ad8
0000000000046138	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004613c	b	0x44ad8
0000000000046140	ldr	x24, [sp, #0xb0]
0000000000046144	movi.16b	v0, #0x0
0000000000046148	stp	q0, q0, [x27, #0x70]
000000000004614c	mov	w25, #0x1
0000000000046150	cmp	x24, x28
0000000000046154	b.eq	0x4644c
0000000000046158	mov	x8, x24
000000000004615c	b	0x4616c
0000000000046160	mov	x8, x10
0000000000046164	cmp	x8, x28
0000000000046168	b.eq	0x46448
000000000004616c	ldurb	w9, [x29, #-0x90]
0000000000046170	cbnz	w9, 0x461c0
0000000000046174	sturb	w25, [x29, #-0x90]
0000000000046178	ldr	x9, [x8, #0x8]
000000000004617c	cbz	x9, 0x46190
0000000000046180	mov	x8, x9
0000000000046184	ldr	x9, [x9]
0000000000046188	cbnz	x9, 0x46180
000000000004618c	b	0x46164
0000000000046190	mov	x9, x8
0000000000046194	ldr	x10, [x9, #0x10]!
0000000000046198	ldr	x11, [x10]
000000000004619c	cmp	x11, x8
00000000000461a0	b.eq	0x46160
00000000000461a4	ldr	x10, [x9]
00000000000461a8	mov	x9, x10
00000000000461ac	ldr	x8, [x9, #0x10]!
00000000000461b0	ldr	x11, [x8]
00000000000461b4	cmp	x11, x10
00000000000461b8	b.ne	0x461a4
00000000000461bc	b	0x46164
00000000000461c0	movi.16b	v0, #0x0
00000000000461c4	stp	q0, q0, [x27, #0x70]
00000000000461c8	mov	w25, #0x1
00000000000461cc	cmp	x24, x28
00000000000461d0	b.eq	0x4644c
00000000000461d4	sub	x8, x29, #0x90
00000000000461d8	mov	x9, x24
00000000000461dc	b	0x461ec
00000000000461e0	mov	x9, x11
00000000000461e4	cmp	x9, x28
00000000000461e8	b.eq	0x462e8
00000000000461ec	ldr	w10, [x9, #0x20]
00000000000461f0	sub	x11, x29, #0x90
00000000000461f4	bfxil	x11, x10, #0, #1
00000000000461f8	ldrb	w11, [x11]
00000000000461fc	cbnz	w11, 0x46254
0000000000046200	and	x10, x10, #0x1
0000000000046204	orr	x10, x8, x10
0000000000046208	strb	w25, [x10]
000000000004620c	ldr	x10, [x9, #0x8]
0000000000046210	cbz	x10, 0x46224
0000000000046214	mov	x9, x10
0000000000046218	ldr	x10, [x10]
000000000004621c	cbnz	x10, 0x46214
0000000000046220	b	0x461e4
0000000000046224	mov	x10, x9
0000000000046228	ldr	x11, [x10, #0x10]!
000000000004622c	ldr	x12, [x11]
0000000000046230	cmp	x12, x9
0000000000046234	b.eq	0x461e0
0000000000046238	ldr	x11, [x10]
000000000004623c	mov	x10, x11
0000000000046240	ldr	x9, [x10, #0x10]!
0000000000046244	ldr	x12, [x9]
0000000000046248	cmp	x12, x11
000000000004624c	b.ne	0x46238
0000000000046250	b	0x461e4
0000000000046254	movi.16b	v0, #0x0
0000000000046258	stp	q0, q0, [x27, #0x70]
000000000004625c	mov	w25, #0x1
0000000000046260	cmp	x24, x28
0000000000046264	b.eq	0x4644c
0000000000046268	sub	x8, x29, #0x90
000000000004626c	mov	x9, x24
0000000000046270	b	0x46280
0000000000046274	mov	x9, x11
0000000000046278	cmp	x9, x28
000000000004627c	b.eq	0x46388
0000000000046280	ldr	w10, [x9, #0x20]
0000000000046284	sub	x11, x29, #0x90
0000000000046288	bfxil	x11, x10, #0, #2
000000000004628c	ldrb	w11, [x11]
0000000000046290	cbnz	w11, 0x462f0
0000000000046294	and	x10, x10, #0x3
0000000000046298	orr	x10, x8, x10
000000000004629c	strb	w25, [x10]
00000000000462a0	ldr	x10, [x9, #0x8]
00000000000462a4	cbz	x10, 0x462b8
00000000000462a8	mov	x9, x10
00000000000462ac	ldr	x10, [x10]
00000000000462b0	cbnz	x10, 0x462a8
00000000000462b4	b	0x46278
00000000000462b8	mov	x10, x9
00000000000462bc	ldr	x11, [x10, #0x10]!
00000000000462c0	ldr	x12, [x11]
00000000000462c4	cmp	x12, x9
00000000000462c8	b.eq	0x46274
00000000000462cc	ldr	x11, [x10]
00000000000462d0	mov	x10, x11
00000000000462d4	ldr	x9, [x10, #0x10]!
00000000000462d8	ldr	x12, [x9]
00000000000462dc	cmp	x12, x11
00000000000462e0	b.ne	0x462cc
00000000000462e4	b	0x46278
00000000000462e8	mov	w25, #0x2
00000000000462ec	b	0x4644c
00000000000462f0	movi.16b	v0, #0x0
00000000000462f4	stp	q0, q0, [x27, #0x70]
00000000000462f8	mov	w8, #0x1
00000000000462fc	cmp	x24, x28
0000000000046300	b.eq	0x46448
0000000000046304	sub	x9, x29, #0x90
0000000000046308	mov	x10, x24
000000000004630c	b	0x46320
0000000000046310	mov	x10, x12
0000000000046314	mov	w25, #0x8
0000000000046318	cmp	x10, x28
000000000004631c	b.eq	0x4644c
0000000000046320	ldr	w11, [x10, #0x20]
0000000000046324	sub	x12, x29, #0x90
0000000000046328	bfxil	x12, x11, #0, #3
000000000004632c	ldrb	w12, [x12]
0000000000046330	cbnz	w12, 0x46390
0000000000046334	and	x11, x11, #0x7
0000000000046338	orr	x11, x9, x11
000000000004633c	strb	w8, [x11]
0000000000046340	ldr	x11, [x10, #0x8]
0000000000046344	cbz	x11, 0x46358
0000000000046348	mov	x10, x11
000000000004634c	ldr	x11, [x11]
0000000000046350	cbnz	x11, 0x46348
0000000000046354	b	0x46314
0000000000046358	mov	x11, x10
000000000004635c	ldr	x12, [x11, #0x10]!
0000000000046360	ldr	x13, [x12]
0000000000046364	cmp	x13, x10
0000000000046368	b.eq	0x46310
000000000004636c	ldr	x12, [x11]
0000000000046370	mov	x11, x12
0000000000046374	ldr	x10, [x11, #0x10]!
0000000000046378	ldr	x13, [x10]
000000000004637c	cmp	x13, x12
0000000000046380	b.ne	0x4636c
0000000000046384	b	0x46314
0000000000046388	mov	w25, #0x4
000000000004638c	b	0x4644c
0000000000046390	movi.16b	v0, #0x0
0000000000046394	stp	q0, q0, [x27, #0x70]
0000000000046398	mov	w8, #0x1
000000000004639c	cmp	x24, x28
00000000000463a0	b.eq	0x46448
00000000000463a4	sub	x9, x29, #0x90
00000000000463a8	mov	x10, x24
00000000000463ac	b	0x463c0
00000000000463b0	mov	x10, x12
00000000000463b4	mov	w25, #0x10
00000000000463b8	cmp	x10, x28
00000000000463bc	b.eq	0x4644c
00000000000463c0	ldr	w11, [x10, #0x20]
00000000000463c4	sub	x12, x29, #0x90
00000000000463c8	bfxil	x12, x11, #0, #4
00000000000463cc	ldrb	w12, [x12]
00000000000463d0	cbnz	w12, 0x46428
00000000000463d4	and	x11, x11, #0xf
00000000000463d8	orr	x11, x9, x11
00000000000463dc	strb	w8, [x11]
00000000000463e0	ldr	x11, [x10, #0x8]
00000000000463e4	cbz	x11, 0x463f8
00000000000463e8	mov	x10, x11
00000000000463ec	ldr	x11, [x11]
00000000000463f0	cbnz	x11, 0x463e8
00000000000463f4	b	0x463b4
00000000000463f8	mov	x11, x10
00000000000463fc	ldr	x12, [x11, #0x10]!
0000000000046400	ldr	x13, [x12]
0000000000046404	cmp	x13, x10
0000000000046408	b.eq	0x463b0
000000000004640c	ldr	x12, [x11]
0000000000046410	mov	x11, x12
0000000000046414	ldr	x10, [x11, #0x10]!
0000000000046418	ldr	x13, [x10]
000000000004641c	cmp	x13, x12
0000000000046420	b.ne	0x4640c
0000000000046424	b	0x463b4
0000000000046428	movi.16b	v0, #0x0
000000000004642c	stp	q0, q0, [x27, #0x70]
0000000000046430	mov	w8, #0x1
0000000000046434	cmp	x24, x28
0000000000046438	b.eq	0x46448
000000000004643c	sub	x9, x29, #0x90
0000000000046440	mov	x10, x24
0000000000046444	b	0x464ec
0000000000046448	mov	w25, #0x1
000000000004644c	ldr	w19, [sp, #0xc0]
0000000000046450	mov	w20, #0x1
0000000000046454	sxtw	x0, w25
0000000000046458	mov	w1, #0x10
000000000004645c	bl	0x55aec ; symbol stub for: _calloc
0000000000046460	mov	x21, x0
0000000000046464	str	x0, [x22, #0x40]
0000000000046468	tbz	w20, #0x0, 0x4656c
000000000004646c	sub	w8, w25, #0x1
0000000000046470	str	w8, [x22, #0x3c]
0000000000046474	b	0x4647c
0000000000046478	mov	x24, x10
000000000004647c	cmp	x24, x28
0000000000046480	b.eq	0x465e8
0000000000046484	ldr	w9, [x24, #0x20]
0000000000046488	and	w10, w9, w8
000000000004648c	sbfiz	x10, x10, #4, #32
0000000000046490	str	w9, [x21, x10]
0000000000046494	ldr	x9, [x24, #0x8]
0000000000046498	cbz	x9, 0x464ac
000000000004649c	mov	x24, x9
00000000000464a0	ldr	x9, [x9]
00000000000464a4	cbnz	x9, 0x4649c
00000000000464a8	b	0x4647c
00000000000464ac	mov	x9, x24
00000000000464b0	ldr	x10, [x9, #0x10]!
00000000000464b4	ldr	x11, [x10]
00000000000464b8	cmp	x11, x24
00000000000464bc	b.eq	0x46478
00000000000464c0	ldr	x10, [x9]
00000000000464c4	mov	x9, x10
00000000000464c8	ldr	x24, [x9, #0x10]!
00000000000464cc	ldr	x11, [x24]
00000000000464d0	cmp	x11, x10
00000000000464d4	b.ne	0x464c0
00000000000464d8	b	0x4647c
00000000000464dc	mov	x10, x12
00000000000464e0	mov	w25, #0x20
00000000000464e4	cmp	x10, x28
00000000000464e8	b.eq	0x4644c
00000000000464ec	ldr	w11, [x10, #0x20]
00000000000464f0	and	x11, x11, #0x1f
00000000000464f4	ldrb	w12, [x9, x11]
00000000000464f8	cbnz	w12, 0x46548
00000000000464fc	strb	w8, [x9, x11]
0000000000046500	ldr	x11, [x10, #0x8]
0000000000046504	cbz	x11, 0x46518
0000000000046508	mov	x10, x11
000000000004650c	ldr	x11, [x11]
0000000000046510	cbnz	x11, 0x46508
0000000000046514	b	0x464e0
0000000000046518	mov	x11, x10
000000000004651c	ldr	x12, [x11, #0x10]!
0000000000046520	ldr	x13, [x12]
0000000000046524	cmp	x13, x10
0000000000046528	b.eq	0x464dc
000000000004652c	ldr	x12, [x11]
0000000000046530	mov	x11, x12
0000000000046534	ldr	x10, [x11, #0x10]!
0000000000046538	ldr	x13, [x10]
000000000004653c	cmp	x13, x12
0000000000046540	b.ne	0x4652c
0000000000046544	b	0x464e0
0000000000046548	mov	w20, #0x0
000000000004654c	ldr	w19, [sp, #0xc0]
0000000000046550	mov	x25, x19
0000000000046554	sxtw	x0, w25
0000000000046558	mov	w1, #0x10
000000000004655c	bl	0x55aec ; symbol stub for: _calloc
0000000000046560	mov	x21, x0
0000000000046564	str	x0, [x22, #0x40]
0000000000046568	tbnz	w20, #0x0, 0x4646c
000000000004656c	neg	w8, w19
0000000000046570	str	w8, [x22, #0x3c]
0000000000046574	cmp	x24, x28
0000000000046578	b.eq	0x465e8
000000000004657c	mov	x8, #0x0
0000000000046580	b	0x46594
0000000000046584	mov	x24, x10
0000000000046588	add	x8, x8, #0x1
000000000004658c	cmp	x24, x28
0000000000046590	b.eq	0x465e8
0000000000046594	ldr	w9, [x24, #0x20]
0000000000046598	lsl	x10, x8, #4
000000000004659c	str	w9, [x21, x10]
00000000000465a0	ldr	x9, [x24, #0x8]
00000000000465a4	cbz	x9, 0x465b8
00000000000465a8	mov	x24, x9
00000000000465ac	ldr	x9, [x9]
00000000000465b0	cbnz	x9, 0x465a8
00000000000465b4	b	0x46588
00000000000465b8	mov	x9, x24
00000000000465bc	ldr	x10, [x9, #0x10]!
00000000000465c0	ldr	x11, [x10]
00000000000465c4	cmp	x11, x24
00000000000465c8	b.eq	0x46584
00000000000465cc	ldr	x10, [x9]
00000000000465d0	mov	x9, x10
00000000000465d4	ldr	x24, [x9, #0x10]!
00000000000465d8	ldr	x11, [x24]
00000000000465dc	cmp	x11, x10
00000000000465e0	b.ne	0x465cc
00000000000465e4	b	0x46588
00000000000465e8	cmp	w25, #0x1
00000000000465ec	b.lt	0x45d84
00000000000465f0	mov	x20, #0x0
00000000000465f4	mov	w23, w25
00000000000465f8	ldr	x24, [sp, #0xb8]
00000000000465fc	b	0x4661c
0000000000046600	mov	x0, #0x0
0000000000046604	add	x8, x21, x20, lsl #4
0000000000046608	str	x0, [x8, #0x8]
000000000004660c	str	w25, [x8, #0x4]
0000000000046610	add	x20, x20, #0x1
0000000000046614	cmp	x20, x23
0000000000046618	b.eq	0x45d84
000000000004661c	lsl	x8, x20, #4
0000000000046620	ldr	w8, [x21, x8]
0000000000046624	cbz	w8, 0x46610
0000000000046628	cbz	x24, 0x46670
000000000004662c	mov	x19, x28
0000000000046630	mov	x12, x24
0000000000046634	mov	x9, x12
0000000000046638	mov	x10, x19
000000000004663c	ldr	w11, [x12, #0x20]
0000000000046640	cmp	w11, w8
0000000000046644	cset	w12, lt
0000000000046648	csel	x19, x19, x9, lt
000000000004664c	ldr	x12, [x9, w12, uxtw #3]
0000000000046650	cbnz	x12, 0x46634
0000000000046654	cmp	x19, x28
0000000000046658	b.eq	0x46670
000000000004665c	cmp	w11, w8
0000000000046660	csel	x9, x10, x9, lt
0000000000046664	ldr	w9, [x9, #0x20]
0000000000046668	cmp	w8, w9
000000000004666c	b.ge	0x46674
0000000000046670	mov	x19, x28
0000000000046674	ldp	x9, x8, [x19, #0x28]
0000000000046678	sub	x26, x8, x9
000000000004667c	lsr	x25, x26, #3
0000000000046680	cbz	w25, 0x46600
0000000000046684	sbfx	x0, x26, #3, #32
0000000000046688	mov	w1, #0x8
000000000004668c	bl	0x55aec ; symbol stub for: _calloc
0000000000046690	cmp	w25, #0x1
0000000000046694	b.lt	0x46604
0000000000046698	mov	x8, #0x0
000000000004669c	ubfx	x9, x26, #3, #32
00000000000466a0	lsl	x9, x9, #3
00000000000466a4	ldr	x10, [x19, #0x28]
00000000000466a8	ldr	x10, [x10, x8]
00000000000466ac	str	x10, [x0, x8]
00000000000466b0	add	x8, x8, #0x8
00000000000466b4	cmp	x9, x8
00000000000466b8	b.ne	0x466a4
00000000000466bc	b	0x46604
00000000000466c0	add	x0, sp, #0x80
00000000000466c4	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000466c8	b	0x46720
00000000000466cc	add	x20, sp, #0xe0
00000000000466d0	sub	x0, x29, #0xd0
00000000000466d4	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000466d8	b	0x46720
00000000000466dc	add	x20, sp, #0xe0
00000000000466e0	sub	x0, x29, #0xa8
00000000000466e4	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000466e8	b	0x46720
00000000000466ec	add	x20, sp, #0xe0
00000000000466f0	add	x0, sp, #0x98
00000000000466f4	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
00000000000466f8	b	0x46720
00000000000466fc	add	x0, sp, #0xc8
0000000000046700	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000046704	b	0x46720
0000000000046708	add	x0, sp, #0x80
000000000004670c	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000046710	b	0x46720
0000000000046714	add	x20, sp, #0xe0
0000000000046718	sub	x0, x29, #0xa8
000000000004671c	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000046720	brk	#0x1
0000000000046724	mov	x19, x0
0000000000046728	b	0x468d4
000000000004672c	b	0x468f4
0000000000046730	b	0x46844
0000000000046734	mov	x19, x0
0000000000046738	b	0x4692c
000000000004673c	b	0x468f4
0000000000046740	b	0x46844
0000000000046744	mov	x19, x0
0000000000046748	b	0x4693c
000000000004674c	mov	x19, x0
0000000000046750	ldr	x0, [x20, #0x70]
0000000000046754	cbz	x0, 0x46770
0000000000046758	b	0x46854
000000000004675c	add	x20, sp, #0xe0
0000000000046760	mov	x19, x0
0000000000046764	cbnz	x23, 0x4679c
0000000000046768	ldr	x0, [x20, #0x70]
000000000004676c	cbnz	x0, 0x46854
0000000000046770	ldr	x0, [x20, #0x40]
0000000000046774	cbz	x0, 0x46788
0000000000046778	ldr	x20, [x0]
000000000004677c	bl	0x55b7c ; symbol stub for: _free
0000000000046780	mov	x0, x20
0000000000046784	cbnz	x20, 0x46778
0000000000046788	add	x8, sp, #0xe0
000000000004678c	ldr	x0, [x8, #0x30]
0000000000046790	str	xzr, [x8, #0x30]
0000000000046794	cbnz	x0, 0x46910
0000000000046798	b	0x46914
000000000004679c	mov	x0, x23
00000000000467a0	bl	0x55b7c ; symbol stub for: _free
00000000000467a4	ldr	x0, [x20, #0x70]
00000000000467a8	cbz	x0, 0x46770
00000000000467ac	b	0x46854
00000000000467b0	mov	x19, x0
00000000000467b4	cbz	x21, 0x4696c
00000000000467b8	add	x0, x21, #0x138
00000000000467bc	ldaxr	w8, [x0]
00000000000467c0	stlxr	w9, w20, [x0]
00000000000467c4	cbnz	w9, 0x467bc
00000000000467c8	cbnz	w20, 0x4696c
00000000000467cc	cmp	w8, #0x1
00000000000467d0	b.ne	0x4696c
00000000000467d4	adr	x8, #0x4dd35
00000000000467d8	nop
00000000000467dc	ldarb	w8, [x8]
00000000000467e0	tbnz	w8, #0x0, 0x469b0
00000000000467e4	b	0x4696c
00000000000467e8	mov	x19, x0
00000000000467ec	cbz	x23, 0x4693c
00000000000467f0	mov	x0, x23
00000000000467f4	b	0x46938
00000000000467f8	b	0x46880
00000000000467fc	mov	x19, x0
0000000000046800	ldr	x0, [x20, #0x30]
0000000000046804	cbz	x0, 0x46924
0000000000046808	str	x0, [x20, #0x38]
000000000004680c	b	0x46920
0000000000046810	mov	x19, x0
0000000000046814	adr	x8, #0x4dcff
0000000000046818	nop
000000000004681c	stlrb	wzr, [x8]
0000000000046820	mov	x0, x19
0000000000046824	bl	0x558ac ; symbol stub for: __Unwind_Resume
0000000000046828	b	0x46844
000000000004682c	b	0x468f4
0000000000046830	add	x20, sp, #0xe0
0000000000046834	mov	x19, x0
0000000000046838	ldr	x0, [x20, #0x70]
000000000004683c	cbz	x0, 0x46770
0000000000046840	b	0x46854
0000000000046844	add	x20, sp, #0xe0
0000000000046848	mov	x19, x0
000000000004684c	ldr	x0, [x20, #0x70]
0000000000046850	cbz	x0, 0x46770
0000000000046854	str	x0, [x20, #0x78]
0000000000046858	bl	0x55b7c ; symbol stub for: _free
000000000004685c	ldr	x0, [x20, #0x40]
0000000000046860	cbnz	x0, 0x46778
0000000000046864	b	0x46788
0000000000046868	mov	x19, x0
000000000004686c	ldr	w8, [sp, #0x58]
0000000000046870	strb	w8, [sp, #0x7f]
0000000000046874	b	0x46904
0000000000046878	b	0x468f4
000000000004687c	add	x20, sp, #0xe0
0000000000046880	mov	x19, x0
0000000000046884	ldr	x0, [x20, #0x40]
0000000000046888	cbz	x0, 0x468bc
000000000004688c	ldr	x20, [x0]
0000000000046890	bl	0x55b7c ; symbol stub for: _free
0000000000046894	mov	x0, x20
0000000000046898	cbnz	x20, 0x4688c
000000000004689c	b	0x468bc
00000000000468a0	mov	x19, x0
00000000000468a4	ldr	x0, [x27, #0x40]
00000000000468a8	cbz	x0, 0x468bc
00000000000468ac	ldr	x20, [x0]
00000000000468b0	bl	0x55b7c ; symbol stub for: _free
00000000000468b4	mov	x0, x20
00000000000468b8	cbnz	x20, 0x468ac
00000000000468bc	add	x8, sp, #0xe0
00000000000468c0	ldr	x0, [x8, #0x30]
00000000000468c4	add	x20, sp, #0xe0
00000000000468c8	str	xzr, [x8, #0x30]
00000000000468cc	cbz	x0, 0x468d4
00000000000468d0	bl	0x55b7c ; symbol stub for: _free
00000000000468d4	ldr	x0, [x20, #0x58]
00000000000468d8	cbz	x0, 0x46904
00000000000468dc	str	x0, [x20, #0x60]
00000000000468e0	bl	0x55b7c ; symbol stub for: _free
00000000000468e4	b	0x46904
00000000000468e8	mov	x19, x0
00000000000468ec	b	0x4693c
00000000000468f0	b	0x468f4
00000000000468f4	mov	x19, x0
00000000000468f8	b	0x46904
00000000000468fc	mov	x19, x0
0000000000046900	strb	w27, [sp, #0x7f]
0000000000046904	ldr	x0, [sp, #0x80]
0000000000046908	cbz	x0, 0x46914
000000000004690c	str	x0, [sp, #0x88]
0000000000046910	bl	0x55b7c ; symbol stub for: _free
0000000000046914	ldr	x0, [sp, #0x98]
0000000000046918	cbz	x0, 0x46924
000000000004691c	str	x0, [sp, #0xa0]
0000000000046920	bl	0x55b7c ; symbol stub for: _free
0000000000046924	ldr	x0, [sp, #0xb8]
0000000000046928	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
000000000004692c	ldr	x0, [sp, #0xc8]
0000000000046930	cbz	x0, 0x4693c
0000000000046934	str	x0, [sp, #0xd0]
0000000000046938	bl	0x55b7c ; symbol stub for: _free
000000000004693c	ldr	x0, [sp, #0xf0]
0000000000046940	cbz	x0, 0x46954
0000000000046944	ldr	x20, [x0]
0000000000046948	bl	0x55b7c ; symbol stub for: _free
000000000004694c	mov	x0, x20
0000000000046950	cbnz	x20, 0x46944
0000000000046954	ldr	x0, [sp, #0xe0]
0000000000046958	str	xzr, [sp, #0xe0]
000000000004695c	cbz	x0, 0x46964
0000000000046960	bl	0x55b7c ; symbol stub for: _free
0000000000046964	ldr	x8, [sp, #0x30]
0000000000046968	cbnz	x8, 0x46980
000000000004696c	adr	x8, #0x4dba7
0000000000046970	nop
0000000000046974	stlrb	wzr, [x8]
0000000000046978	mov	x0, x19
000000000004697c	bl	0x558ac ; symbol stub for: __Unwind_Resume
0000000000046980	add	x0, x8, #0x138
0000000000046984	ldr	x10, [sp, #0x20]
0000000000046988	ldaxr	w8, [x0]
000000000004698c	stlxr	w9, w10, [x0]
0000000000046990	cbnz	w9, 0x46988
0000000000046994	cbnz	w10, 0x4696c
0000000000046998	cmp	w8, #0x1
000000000004699c	b.ne	0x4696c
00000000000469a0	adr	x8, #0x4db69
00000000000469a4	nop
00000000000469a8	ldarb	w8, [x8]
00000000000469ac	tbz	w8, #0x0, 0x4696c
00000000000469b0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000469b4	adr	x8, #0x4db5f
00000000000469b8	nop
00000000000469bc	stlrb	wzr, [x8]
00000000000469c0	mov	x0, x19
00000000000469c4	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZN6kotlin8SpinLockILNS_24MutexThreadStateHandlingE1EE4lockEv:
00000000000469c8	stp	x22, x21, [sp, #-0x30]!
00000000000469cc	stp	x20, x19, [sp, #0x10]
00000000000469d0	stp	x29, x30, [sp, #0x20]
00000000000469d4	add	x29, sp, #0x20
00000000000469d8	mov	x19, x0
00000000000469dc	mov	w8, #0x1
00000000000469e0	ldaxrb	w9, [x19]
00000000000469e4	stxrb	w10, w8, [x19]
00000000000469e8	cbnz	w10, 0x469e0
00000000000469ec	tbz	w9, #0x0, 0x46a70
00000000000469f0	adrp	x0, 52 ; 0x7a000
00000000000469f4	add	x0, x0, #0x4e0
00000000000469f8	ldr	x8, [x0]
00000000000469fc	blr	x8
0000000000046a00	ldr	x20, [x0]
0000000000046a04	cbz	x20, 0x46a20
0000000000046a08	add	x8, x20, #0x138
0000000000046a0c	mov	w9, #0x1
0000000000046a10	ldaxr	w21, [x8]
0000000000046a14	stlxr	w10, w9, [x8]
0000000000046a18	cbnz	w10, 0x46a10
0000000000046a1c	b	0x46a24
0000000000046a20	mov	w21, #0x1
0000000000046a24	mov	w22, #0x1
0000000000046a28	ldaxrb	w8, [x19]
0000000000046a2c	stxrb	w9, w22, [x19]
0000000000046a30	cbnz	w9, 0x46a28
0000000000046a34	tbz	w8, #0x0, 0x46a40
0000000000046a38	bl	0x55e28 ; symbol stub for: _sched_yield
0000000000046a3c	b	0x46a28
0000000000046a40	cbz	x20, 0x46a70
0000000000046a44	add	x0, x20, #0x138
0000000000046a48	ldaxr	w8, [x0]
0000000000046a4c	stlxr	w9, w21, [x0]
0000000000046a50	cbnz	w9, 0x46a48
0000000000046a54	cbnz	w21, 0x46a70
0000000000046a58	cmp	w8, #0x1
0000000000046a5c	b.ne	0x46a70
0000000000046a60	adr	x8, #0x4daa9
0000000000046a64	nop
0000000000046a68	ldarb	w8, [x8]
0000000000046a6c	tbnz	w8, #0x0, 0x46a80
0000000000046a70	ldp	x29, x30, [sp, #0x20]
0000000000046a74	ldp	x20, x19, [sp, #0x10]
0000000000046a78	ldp	x22, x21, [sp], #0x30
0000000000046a7c	ret
0000000000046a80	ldp	x29, x30, [sp, #0x20]
0000000000046a84	ldp	x20, x19, [sp, #0x10]
0000000000046a88	ldp	x22, x21, [sp], #0x30
0000000000046a8c	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000046a90	bl	___clang_call_terminate
__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_:
0000000000046a94	cmp	x1, x0
0000000000046a98	cset	w8, eq
0000000000046a9c	strb	w8, [x1, #0x18]
0000000000046aa0	b.eq	0x46c30
0000000000046aa4	mov	w10, #0x1
0000000000046aa8	b	0x46ac8
0000000000046aac	strb	w10, [x9, #0x18]
0000000000046ab0	mov	x1, x8
0000000000046ab4	cmp	x8, x0
0000000000046ab8	cset	w9, eq
0000000000046abc	strb	w9, [x8, #0x18]
0000000000046ac0	strb	w10, [x11]
0000000000046ac4	b.eq	0x46c30
0000000000046ac8	ldr	x9, [x1, #0x10]
0000000000046acc	ldrb	w8, [x9, #0x18]
0000000000046ad0	cbnz	w8, 0x46c30
0000000000046ad4	ldr	x8, [x9, #0x10]
0000000000046ad8	ldr	x11, [x8]
0000000000046adc	cmp	x11, x9
0000000000046ae0	b.eq	0x46af4
0000000000046ae4	cbz	x11, 0x46b50
0000000000046ae8	ldrb	w12, [x11, #0x18]!
0000000000046aec	cbz	w12, 0x46aac
0000000000046af0	b	0x46b50
0000000000046af4	ldr	x11, [x8, #0x8]
0000000000046af8	cbz	x11, 0x46b04
0000000000046afc	ldrb	w12, [x11, #0x18]!
0000000000046b00	cbz	w12, 0x46aac
0000000000046b04	ldr	x10, [x9]
0000000000046b08	cmp	x10, x1
0000000000046b0c	b.eq	0x46be4
0000000000046b10	ldr	x10, [x9, #0x8]
0000000000046b14	ldr	x11, [x10]
0000000000046b18	str	x11, [x9, #0x8]
0000000000046b1c	cbz	x11, 0x46b28
0000000000046b20	str	x9, [x11, #0x10]
0000000000046b24	ldr	x8, [x9, #0x10]
0000000000046b28	str	x8, [x10, #0x10]
0000000000046b2c	ldr	x8, [x9, #0x10]
0000000000046b30	ldr	x11, [x8]
0000000000046b34	cmp	x11, x9
0000000000046b38	cset	w11, ne
0000000000046b3c	str	x10, [x8, w11, uxtw #3]
0000000000046b40	str	x9, [x10]
0000000000046b44	str	x10, [x9, #0x10]
0000000000046b48	ldr	x8, [x10, #0x10]
0000000000046b4c	b	0x46be8
0000000000046b50	ldr	x10, [x9]
0000000000046b54	cmp	x10, x1
0000000000046b58	b.eq	0x46b64
0000000000046b5c	mov	x1, x9
0000000000046b60	b	0x46b9c
0000000000046b64	ldr	x10, [x1, #0x8]
0000000000046b68	str	x10, [x9]
0000000000046b6c	cbz	x10, 0x46b78
0000000000046b70	str	x9, [x10, #0x10]
0000000000046b74	ldr	x8, [x9, #0x10]
0000000000046b78	str	x8, [x1, #0x10]
0000000000046b7c	ldr	x8, [x9, #0x10]
0000000000046b80	ldr	x10, [x8]
0000000000046b84	cmp	x10, x9
0000000000046b88	cset	w10, ne
0000000000046b8c	str	x1, [x8, w10, uxtw #3]
0000000000046b90	str	x9, [x1, #0x8]
0000000000046b94	str	x1, [x9, #0x10]
0000000000046b98	ldr	x8, [x1, #0x10]
0000000000046b9c	mov	w9, #0x1
0000000000046ba0	strb	w9, [x1, #0x18]
0000000000046ba4	strb	wzr, [x8, #0x18]
0000000000046ba8	ldr	x9, [x8, #0x8]
0000000000046bac	ldr	x10, [x9]
0000000000046bb0	str	x10, [x8, #0x8]
0000000000046bb4	cbz	x10, 0x46bbc
0000000000046bb8	str	x8, [x10, #0x10]
0000000000046bbc	mov	x10, x8
0000000000046bc0	ldr	x11, [x10, #0x10]!
0000000000046bc4	str	x11, [x9, #0x10]
0000000000046bc8	ldr	x11, [x10]
0000000000046bcc	ldr	x12, [x11]
0000000000046bd0	cmp	x12, x8
0000000000046bd4	cset	w12, ne
0000000000046bd8	str	x9, [x11, w12, uxtw #3]
0000000000046bdc	str	x8, [x9]
0000000000046be0	b	0x46c2c
0000000000046be4	mov	x10, x9
0000000000046be8	mov	w9, #0x1
0000000000046bec	strb	w9, [x10, #0x18]
0000000000046bf0	strb	wzr, [x8, #0x18]
0000000000046bf4	ldr	x9, [x8]
0000000000046bf8	ldr	x10, [x9, #0x8]
0000000000046bfc	str	x10, [x8]
0000000000046c00	cbz	x10, 0x46c08
0000000000046c04	str	x8, [x10, #0x10]
0000000000046c08	mov	x10, x8
0000000000046c0c	ldr	x11, [x10, #0x10]!
0000000000046c10	str	x11, [x9, #0x10]
0000000000046c14	ldr	x11, [x10]
0000000000046c18	ldr	x12, [x11]
0000000000046c1c	cmp	x12, x8
0000000000046c20	cset	w12, ne
0000000000046c24	str	x9, [x11, w12, uxtw #3]
0000000000046c28	str	x8, [x9, #0x8]
0000000000046c2c	str	x9, [x10]
0000000000046c30	ret
__ZNSt3__16vectorIP8ProtocolN6kotlin11std_support9allocatorIS2_EEE6insertIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueENS_11__wrap_iterIS9_EEE4typeENSF_IPKS2_EESB_SB_:
0000000000046c34	stp	x28, x27, [sp, #-0x60]!
0000000000046c38	stp	x26, x25, [sp, #0x10]
0000000000046c3c	stp	x24, x23, [sp, #0x20]
0000000000046c40	stp	x22, x21, [sp, #0x30]
0000000000046c44	stp	x20, x19, [sp, #0x40]
0000000000046c48	stp	x29, x30, [sp, #0x50]
0000000000046c4c	add	x29, sp, #0x50
0000000000046c50	sub	x28, x3, x2
0000000000046c54	cmp	x28, #0x1
0000000000046c58	b.lt	0x46f40
0000000000046c5c	mov	x21, x2
0000000000046c60	mov	x19, x1
0000000000046c64	mov	x20, x0
0000000000046c68	ldp	x26, x23, [x0]
0000000000046c6c	sub	x8, x1, x26
0000000000046c70	asr	x25, x8, #3
0000000000046c74	asr	x27, x28, #3
0000000000046c78	ldr	x8, [x0, #0x10]
0000000000046c7c	sub	x9, x8, x23
0000000000046c80	cmp	x27, x9, asr #3
0000000000046c84	b.le	0x46ce4
0000000000046c88	sub	x9, x23, x26
0000000000046c8c	add	x9, x27, x9, asr #3
0000000000046c90	lsr	x10, x9, #61
0000000000046c94	cbnz	x10, 0x46f5c
0000000000046c98	sub	x8, x8, x26
0000000000046c9c	asr	x10, x8, #2
0000000000046ca0	cmp	x10, x9
0000000000046ca4	csel	x9, x9, x10, lo
0000000000046ca8	mov	x10, #0xfffffffffffffff
0000000000046cac	cmp	x10, x8, asr #3
0000000000046cb0	mov	x8, #0x1fffffffffffffff
0000000000046cb4	csel	x22, x9, x8, hi
0000000000046cb8	cbz	x22, 0x46d38
0000000000046cbc	mov	x0, x22
0000000000046cc0	mov	w1, #0x8
0000000000046cc4	bl	0x55aec ; symbol stub for: _calloc
0000000000046cc8	mov	x24, x0
0000000000046ccc	add	x8, x24, x25, lsl #3
0000000000046cd0	add	x23, x8, x27, lsl #3
0000000000046cd4	sub	x9, x28, #0x8
0000000000046cd8	lsr	x9, x9, #3
0000000000046cdc	cbnz	x9, 0x46d50
0000000000046ce0	b	0x46d74
0000000000046ce4	sub	x28, x23, x19
0000000000046ce8	asr	x8, x28, #3
0000000000046cec	cmp	x27, x8
0000000000046cf0	b.le	0x46d28
0000000000046cf4	add	x22, x21, x8, lsl #3
0000000000046cf8	sub	x24, x3, x22
0000000000046cfc	cmp	x24, #0x1
0000000000046d00	b.lt	0x46e38
0000000000046d04	mov	x0, x23
0000000000046d08	mov	x1, x22
0000000000046d0c	mov	x2, x24
0000000000046d10	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000046d14	add	x11, x23, x24
0000000000046d18	str	x11, [x20, #0x8]
0000000000046d1c	cmp	x28, #0x1
0000000000046d20	b.ge	0x46e48
0000000000046d24	b	0x46f40
0000000000046d28	mov	x11, x23
0000000000046d2c	mov	x8, x23
0000000000046d30	mov	x22, x3
0000000000046d34	b	0x46e4c
0000000000046d38	mov	x24, #0x0
0000000000046d3c	add	x8, x24, x25, lsl #3
0000000000046d40	add	x23, x8, x27, lsl #3
0000000000046d44	sub	x9, x28, #0x8
0000000000046d48	lsr	x9, x9, #3
0000000000046d4c	cbz	x9, 0x46d74
0000000000046d50	add	x10, x21, x9, lsl #3
0000000000046d54	add	x10, x10, #0x8
0000000000046d58	cmp	x8, x10
0000000000046d5c	b.hs	0x46e00
0000000000046d60	add	x10, x25, x9
0000000000046d64	add	x10, x24, x10, lsl #3
0000000000046d68	add	x10, x10, #0x8
0000000000046d6c	cmp	x10, x21
0000000000046d70	b.ls	0x46e00
0000000000046d74	mov	x9, x8
0000000000046d78	mov	x10, x21
0000000000046d7c	ldr	x11, [x10], #0x8
0000000000046d80	str	x11, [x9], #0x8
0000000000046d84	cmp	x9, x23
0000000000046d88	b.ne	0x46d7c
0000000000046d8c	ldr	x21, [x20]
0000000000046d90	sub	x2, x19, x21
0000000000046d94	sub	x25, x8, x2
0000000000046d98	cmp	x2, #0x1
0000000000046d9c	b.lt	0x46dac
0000000000046da0	mov	x0, x25
0000000000046da4	mov	x1, x21
0000000000046da8	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000046dac	add	x24, x24, x22, lsl #3
0000000000046db0	ldr	x8, [x20, #0x8]
0000000000046db4	sub	x22, x8, x19
0000000000046db8	cmp	x22, #0x1
0000000000046dbc	b.lt	0x46dd4
0000000000046dc0	mov	x0, x23
0000000000046dc4	mov	x1, x19
0000000000046dc8	mov	x2, x22
0000000000046dcc	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000046dd0	add	x23, x23, x22
0000000000046dd4	stp	x25, x23, [x20]
0000000000046dd8	str	x24, [x20, #0x10]
0000000000046ddc	cbz	x21, 0x46f40
0000000000046de0	mov	x0, x21
0000000000046de4	ldp	x29, x30, [sp, #0x50]
0000000000046de8	ldp	x20, x19, [sp, #0x40]
0000000000046dec	ldp	x22, x21, [sp, #0x30]
0000000000046df0	ldp	x24, x23, [sp, #0x20]
0000000000046df4	ldp	x26, x25, [sp, #0x10]
0000000000046df8	ldp	x28, x27, [sp], #0x60
0000000000046dfc	b	0x55b7c ; symbol stub for: _free
0000000000046e00	add	x11, x9, #0x1
0000000000046e04	and	x12, x11, #0x3ffffffffffffffe
0000000000046e08	lsl	x10, x12, #3
0000000000046e0c	add	x9, x8, x10
0000000000046e10	add	x10, x21, x10
0000000000046e14	mov	x13, x8
0000000000046e18	mov	x14, x12
0000000000046e1c	ldr	q0, [x21], #0x10
0000000000046e20	str	q0, [x13], #0x10
0000000000046e24	subs	x14, x14, #0x2
0000000000046e28	b.ne	0x46e1c
0000000000046e2c	cmp	x11, x12
0000000000046e30	b.ne	0x46d7c
0000000000046e34	b	0x46d8c
0000000000046e38	mov	x11, x23
0000000000046e3c	str	x11, [x20, #0x8]
0000000000046e40	cmp	x28, #0x1
0000000000046e44	b.lt	0x46f40
0000000000046e48	mov	x8, x11
0000000000046e4c	lsl	x10, x27, #3
0000000000046e50	add	x9, x19, x10
0000000000046e54	sub	x2, x11, x9
0000000000046e58	asr	x9, x2, #3
0000000000046e5c	sub	x10, x11, x10
0000000000046e60	cmp	x10, x23
0000000000046e64	b.hs	0x46f00
0000000000046e68	add	x11, x9, x25
0000000000046e6c	sub	x12, x23, x11, lsl #3
0000000000046e70	mvn	x13, x26
0000000000046e74	add	x12, x12, x13
0000000000046e78	cmp	x12, #0x17
0000000000046e7c	b.hi	0x46e88
0000000000046e80	mov	x11, x8
0000000000046e84	b	0x46ef0
0000000000046e88	lsr	x13, x12, #3
0000000000046e8c	add	x12, x13, #0x1
0000000000046e90	add	x14, x8, x12, lsl #3
0000000000046e94	add	x11, x11, x13
0000000000046e98	add	x11, x26, x11, lsl #3
0000000000046e9c	add	x11, x11, #0x8
0000000000046ea0	cmp	x8, x11
0000000000046ea4	ccmp	x10, x14, #0x2, lo
0000000000046ea8	mov	x11, x8
0000000000046eac	b.lo	0x46ef0
0000000000046eb0	and	x13, x12, #0x3ffffffffffffffc
0000000000046eb4	add	x10, x10, x13, lsl #3
0000000000046eb8	add	x11, x8, #0x10
0000000000046ebc	add	x14, x9, x25
0000000000046ec0	add	x14, x26, x14, lsl #3
0000000000046ec4	add	x14, x14, #0x10
0000000000046ec8	mov	x15, x13
0000000000046ecc	ldp	q0, q1, [x14, #-0x10]
0000000000046ed0	stp	q0, q1, [x11, #-0x10]
0000000000046ed4	add	x11, x11, #0x20
0000000000046ed8	add	x14, x14, #0x20
0000000000046edc	subs	x15, x15, #0x4
0000000000046ee0	b.ne	0x46ecc
0000000000046ee4	add	x11, x8, x13, lsl #3
0000000000046ee8	cmp	x12, x13
0000000000046eec	b.eq	0x46f00
0000000000046ef0	ldr	x12, [x10], #0x8
0000000000046ef4	str	x12, [x11], #0x8
0000000000046ef8	cmp	x10, x23
0000000000046efc	b.lo	0x46ef0
0000000000046f00	str	x11, [x20, #0x8]
0000000000046f04	cbz	x2, 0x46f14
0000000000046f08	sub	x0, x8, x9, lsl #3
0000000000046f0c	mov	x1, x19
0000000000046f10	bl	0x55bdc ; symbol stub for: _memmove
0000000000046f14	subs	x2, x22, x21
0000000000046f18	b.eq	0x46f40
0000000000046f1c	mov	x0, x19
0000000000046f20	mov	x1, x21
0000000000046f24	ldp	x29, x30, [sp, #0x50]
0000000000046f28	ldp	x20, x19, [sp, #0x40]
0000000000046f2c	ldp	x22, x21, [sp, #0x30]
0000000000046f30	ldp	x24, x23, [sp, #0x20]
0000000000046f34	ldp	x26, x25, [sp, #0x10]
0000000000046f38	ldp	x28, x27, [sp], #0x60
0000000000046f3c	b	0x55bdc ; symbol stub for: _memmove
0000000000046f40	ldp	x29, x30, [sp, #0x50]
0000000000046f44	ldp	x20, x19, [sp, #0x40]
0000000000046f48	ldp	x22, x21, [sp, #0x30]
0000000000046f4c	ldp	x24, x23, [sp, #0x20]
0000000000046f50	ldp	x26, x25, [sp, #0x10]
0000000000046f54	ldp	x28, x27, [sp], #0x60
0000000000046f58	ret
0000000000046f5c	mov	x0, x20
0000000000046f60	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ZZL14createTypeInfoP10objc_classPK8TypeInfoS3_ENK3$_1clEii:
0000000000046f64	sub	sp, sp, #0x70
0000000000046f68	stp	x26, x25, [sp, #0x20]
0000000000046f6c	stp	x24, x23, [sp, #0x30]
0000000000046f70	stp	x22, x21, [sp, #0x40]
0000000000046f74	stp	x20, x19, [sp, #0x50]
0000000000046f78	stp	x29, x30, [sp, #0x60]
0000000000046f7c	add	x29, sp, #0x60
0000000000046f80	mov	x20, x2
0000000000046f84	mov	x19, x0
0000000000046f88	mov	x23, x0
0000000000046f8c	ldr	x24, [x23, #0x8]!
0000000000046f90	cbz	x24, 0x46fc8
0000000000046f94	mov	x8, x23
0000000000046f98	mov	x9, x24
0000000000046f9c	ldr	w10, [x9, #0x20]
0000000000046fa0	cmp	w10, w20
0000000000046fa4	cset	w10, lt
0000000000046fa8	csel	x8, x8, x9, lt
0000000000046fac	ldr	x9, [x9, w10, uxtw #3]
0000000000046fb0	cbnz	x9, 0x46f9c
0000000000046fb4	cmp	x8, x23
0000000000046fb8	b.eq	0x46fc8
0000000000046fbc	ldr	w8, [x8, #0x20]
0000000000046fc0	cmp	w8, w20
0000000000046fc4	b.le	0x470f0
0000000000046fc8	strb	wzr, [x1]
0000000000046fcc	stp	xzr, xzr, [sp, #0x8]
0000000000046fd0	str	xzr, [sp, #0x18]
0000000000046fd4	cbz	w3, 0x47054
0000000000046fd8	tbnz	w3, #0x1f, 0x4710c
0000000000046fdc	sxtw	x22, w3
0000000000046fe0	mov	x0, x22
0000000000046fe4	mov	w1, #0x8
0000000000046fe8	bl	0x55aec ; symbol stub for: _calloc
0000000000046fec	mov	x21, x0
0000000000046ff0	lsl	x1, x22, #3
0000000000046ff4	add	x22, x0, x1
0000000000046ff8	str	x0, [sp, #0x8]
0000000000046ffc	str	x22, [sp, #0x18]
0000000000047000	bl	0x55ae0 ; symbol stub for: _bzero
0000000000047004	str	x22, [sp, #0x10]
0000000000047008	cbz	x24, 0x47060
000000000004700c	add	x25, x19, #0x8
0000000000047010	b	0x47018
0000000000047014	mov	x24, x8
0000000000047018	ldr	w8, [x24, #0x20]
000000000004701c	cmp	w8, w20
0000000000047020	b.le	0x47034
0000000000047024	ldr	x8, [x24]
0000000000047028	cbz	x8, 0x47070
000000000004702c	mov	x25, x24
0000000000047030	b	0x47014
0000000000047034	b.ge	0x47044
0000000000047038	mov	x25, x24
000000000004703c	ldr	x8, [x25, #0x8]!
0000000000047040	cbnz	x8, 0x47014
0000000000047044	mov	x23, x24
0000000000047048	ldr	x8, [x25]
000000000004704c	cbnz	x8, 0x470e0
0000000000047050	b	0x47080
0000000000047054	mov	x21, #0x0
0000000000047058	mov	x22, #0x0
000000000004705c	cbnz	x24, 0x4700c
0000000000047060	mov	x25, x23
0000000000047064	ldr	x8, [x25]
0000000000047068	cbnz	x8, 0x470e0
000000000004706c	b	0x47080
0000000000047070	mov	x23, x24
0000000000047074	mov	x25, x24
0000000000047078	ldr	x8, [x25]
000000000004707c	cbnz	x8, 0x470e0
0000000000047080	mov	w0, #0x1
0000000000047084	mov	w1, #0x40
0000000000047088	bl	0x55aec ; symbol stub for: _calloc
000000000004708c	str	w20, [x0, #0x20]
0000000000047090	stp	x21, x22, [x0, #0x28]
0000000000047094	str	x22, [x0, #0x38]
0000000000047098	stp	xzr, xzr, [sp, #0x10]
000000000004709c	str	xzr, [sp, #0x8]
00000000000470a0	stp	xzr, xzr, [x0]
00000000000470a4	str	x23, [x0, #0x10]
00000000000470a8	str	x0, [x25]
00000000000470ac	ldr	x8, [x19]
00000000000470b0	ldr	x8, [x8]
00000000000470b4	cbz	x8, 0x470c4
00000000000470b8	str	x8, [x19]
00000000000470bc	ldr	x1, [x25]
00000000000470c0	b	0x470c8
00000000000470c4	mov	x1, x0
00000000000470c8	ldr	x0, [x19, #0x8]
00000000000470cc	bl	__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_
00000000000470d0	ldr	x8, [x19, #0x10]
00000000000470d4	add	x8, x8, #0x1
00000000000470d8	str	x8, [x19, #0x10]
00000000000470dc	ldr	x21, [sp, #0x8]
00000000000470e0	cbz	x21, 0x470f0
00000000000470e4	str	x21, [sp, #0x10]
00000000000470e8	mov	x0, x21
00000000000470ec	bl	0x55b7c ; symbol stub for: _free
00000000000470f0	ldp	x29, x30, [sp, #0x60]
00000000000470f4	ldp	x20, x19, [sp, #0x50]
00000000000470f8	ldp	x22, x21, [sp, #0x40]
00000000000470fc	ldp	x24, x23, [sp, #0x30]
0000000000047100	ldp	x26, x25, [sp, #0x20]
0000000000047104	add	sp, sp, #0x70
0000000000047108	ret
000000000004710c	add	x0, sp, #0x8
0000000000047110	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000047114	brk	#0x1
0000000000047118	mov	x19, x0
000000000004711c	ldr	x0, [sp, #0x8]
0000000000047120	cbz	x0, 0x4712c
0000000000047124	str	x0, [sp, #0x10]
0000000000047128	bl	0x55b7c ; symbol stub for: _free
000000000004712c	mov	x0, x19
0000000000047130	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_:
0000000000047134	stp	x24, x23, [sp, #-0x40]!
0000000000047138	stp	x22, x21, [sp, #0x10]
000000000004713c	stp	x20, x19, [sp, #0x20]
0000000000047140	stp	x29, x30, [sp, #0x30]
0000000000047144	add	x29, sp, #0x30
0000000000047148	mov	x21, x2
000000000004714c	mov	x19, x0
0000000000047150	lsr	x8, x1, #32
0000000000047154	lsl	w9, w1, #3
0000000000047158	add	x9, x9, #0x8
000000000004715c	eor	x9, x9, x8
0000000000047160	mov	x10, #0x2d69
0000000000047164	movk	x10, #0xeb38, lsl #16
0000000000047168	movk	x10, #0xea08, lsl #32
000000000004716c	movk	x10, #0x9ddf, lsl #48
0000000000047170	mul	x9, x9, x10
0000000000047174	eor	x8, x9, x8
0000000000047178	eor	x8, x8, x9, lsr #47
000000000004717c	mul	x8, x8, x10
0000000000047180	eor	x8, x8, x8, lsr #47
0000000000047184	mul	x23, x8, x10
0000000000047188	ldr	x22, [x0, #0x8]
000000000004718c	cbz	x22, 0x471b4
0000000000047190	fmov	d0, x22
0000000000047194	cnt.8b	v0, v0
0000000000047198	uaddlv.8b	h0, v0
000000000004719c	fmov	w8, s0
00000000000471a0	cmp	x8, #0x1
00000000000471a4	b.hi	0x471b8
00000000000471a8	sub	x9, x22, #0x1
00000000000471ac	and	x24, x23, x9
00000000000471b0	b	0x471cc
00000000000471b4	b	0x47228
00000000000471b8	mov	x24, x23
00000000000471bc	cmp	x23, x22
00000000000471c0	b.lo	0x471cc
00000000000471c4	udiv	x9, x23, x22
00000000000471c8	msub	x24, x9, x22, x23
00000000000471cc	ldr	x9, [x19]
00000000000471d0	ldr	x9, [x9, x24, lsl #3]
00000000000471d4	cbz	x9, 0x47228
00000000000471d8	sub	x10, x22, #0x1
00000000000471dc	b	0x471f8
00000000000471e0	and	x11, x11, x10
00000000000471e4	cmp	x11, x24
00000000000471e8	b.ne	0x47228
00000000000471ec	ldr	x11, [x9, #0x10]
00000000000471f0	cmp	x11, x1
00000000000471f4	b.eq	0x47328
00000000000471f8	ldr	x9, [x9]
00000000000471fc	cbz	x9, 0x47228
0000000000047200	ldr	x11, [x9, #0x8]
0000000000047204	cmp	x11, x23
0000000000047208	b.eq	0x471ec
000000000004720c	cmp	x8, #0x1
0000000000047210	b.ls	0x471e0
0000000000047214	cmp	x11, x22
0000000000047218	b.lo	0x471e4
000000000004721c	udiv	x12, x11, x22
0000000000047220	msub	x11, x12, x22, x11
0000000000047224	b	0x471e4
0000000000047228	mov	w0, #0x1
000000000004722c	mov	w1, #0x18
0000000000047230	bl	0x55aec ; symbol stub for: _calloc
0000000000047234	mov	x20, x0
0000000000047238	ldr	x8, [x21]
000000000004723c	stp	x23, x8, [x0, #0x8]
0000000000047240	ldr	x8, [x19, #0x18]
0000000000047244	add	x8, x8, #0x1
0000000000047248	ucvtf	s0, x8
000000000004724c	ldr	s1, [x19, #0x20]
0000000000047250	cbz	x22, 0x47264
0000000000047254	ucvtf	s2, x22
0000000000047258	fmul	s2, s1, s2
000000000004725c	fcmp	s2, s0
0000000000047260	b.pl	0x47384
0000000000047264	cmp	x22, #0x3
0000000000047268	cset	w8, lo
000000000004726c	sub	x9, x22, #0x1
0000000000047270	tst	x22, x9
0000000000047274	cset	w9, ne
0000000000047278	orr	w8, w8, w9
000000000004727c	bfi	x8, x22, #1, #63
0000000000047280	fdiv	s0, s0, s1
0000000000047284	fcvtpu	x9, s0
0000000000047288	cmp	x8, x9
000000000004728c	csel	x21, x9, x8, lo
0000000000047290	subs	x8, x21, #0x1
0000000000047294	b.ne	0x472a0
0000000000047298	mov	w21, #0x2
000000000004729c	b	0x472b8
00000000000472a0	tst	x21, x8
00000000000472a4	b.eq	0x472b8
00000000000472a8	mov	x0, x21
00000000000472ac	bl	0x558f4 ; symbol stub for: __ZNSt3__112__next_primeEm
00000000000472b0	mov	x21, x0
00000000000472b4	ldr	x22, [x19, #0x8]
00000000000472b8	cmp	x21, x22
00000000000472bc	b.ls	0x472d0
00000000000472c0	mov	x0, x19
00000000000472c4	mov	x1, x21
00000000000472c8	bl	__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE8__rehashEm
00000000000472cc	b	0x47354
00000000000472d0	b.hs	0x47354
00000000000472d4	ldr	x8, [x19, #0x18]
00000000000472d8	ucvtf	s0, x8
00000000000472dc	ldr	s1, [x19, #0x20]
00000000000472e0	fdiv	s0, s0, s1
00000000000472e4	fcvtpu	x0, s0
00000000000472e8	cmp	x22, #0x3
00000000000472ec	b.lo	0x47340
00000000000472f0	fmov	d0, x22
00000000000472f4	cnt.8b	v0, v0
00000000000472f8	uaddlv.8b	h0, v0
00000000000472fc	fmov	w8, s0
0000000000047300	cmp	x8, #0x1
0000000000047304	b.hi	0x47340
0000000000047308	sub	x8, x0, #0x1
000000000004730c	clz	x8, x8
0000000000047310	neg	x8, x8
0000000000047314	mov	w9, #0x1
0000000000047318	lsl	x8, x9, x8
000000000004731c	cmp	x0, #0x2
0000000000047320	csel	x0, x0, x8, lo
0000000000047324	b	0x47344
0000000000047328	mov	x0, #0x0
000000000004732c	ldp	x29, x30, [sp, #0x30]
0000000000047330	ldp	x20, x19, [sp, #0x20]
0000000000047334	ldp	x22, x21, [sp, #0x10]
0000000000047338	ldp	x24, x23, [sp], #0x40
000000000004733c	ret
0000000000047340	bl	0x558f4 ; symbol stub for: __ZNSt3__112__next_primeEm
0000000000047344	cmp	x21, x0
0000000000047348	csel	x21, x0, x21, lo
000000000004734c	cmp	x21, x22
0000000000047350	b.lo	0x472c0
0000000000047354	ldr	x22, [x19, #0x8]
0000000000047358	sub	x8, x22, #0x1
000000000004735c	tst	x22, x8
0000000000047360	b.ne	0x47378
0000000000047364	and	x24, x8, x23
0000000000047368	ldr	x9, [x19]
000000000004736c	ldr	x8, [x9, x24, lsl #3]
0000000000047370	cbnz	x8, 0x47390
0000000000047374	b	0x473b0
0000000000047378	cmp	x23, x22
000000000004737c	b.hs	0x4739c
0000000000047380	mov	x24, x23
0000000000047384	ldr	x9, [x19]
0000000000047388	ldr	x8, [x9, x24, lsl #3]
000000000004738c	cbz	x8, 0x473b0
0000000000047390	ldr	x9, [x8]
0000000000047394	str	x9, [x20]
0000000000047398	b	0x473fc
000000000004739c	udiv	x8, x23, x22
00000000000473a0	msub	x24, x8, x22, x23
00000000000473a4	ldr	x9, [x19]
00000000000473a8	ldr	x8, [x9, x24, lsl #3]
00000000000473ac	cbnz	x8, 0x47390
00000000000473b0	mov	x8, x19
00000000000473b4	ldr	x10, [x8, #0x10]!
00000000000473b8	str	x10, [x20]
00000000000473bc	str	x20, [x8]
00000000000473c0	str	x8, [x9, x24, lsl #3]
00000000000473c4	ldr	x8, [x20]
00000000000473c8	cbz	x8, 0x47400
00000000000473cc	ldr	x8, [x8, #0x8]
00000000000473d0	sub	x9, x22, #0x1
00000000000473d4	tst	x22, x9
00000000000473d8	b.ne	0x473e4
00000000000473dc	and	x8, x8, x9
00000000000473e0	b	0x473f4
00000000000473e4	cmp	x8, x22
00000000000473e8	b.lo	0x473f4
00000000000473ec	udiv	x9, x8, x22
00000000000473f0	msub	x8, x9, x22, x8
00000000000473f4	ldr	x9, [x19]
00000000000473f8	add	x8, x9, x8, lsl #3
00000000000473fc	str	x20, [x8]
0000000000047400	ldr	x8, [x19, #0x18]
0000000000047404	add	x8, x8, #0x1
0000000000047408	str	x8, [x19, #0x18]
000000000004740c	mov	w0, #0x1
0000000000047410	ldp	x29, x30, [sp, #0x30]
0000000000047414	ldp	x20, x19, [sp, #0x20]
0000000000047418	ldp	x22, x21, [sp, #0x10]
000000000004741c	ldp	x24, x23, [sp], #0x40
0000000000047420	ret
0000000000047424	mov	x19, x0
0000000000047428	cbz	x20, 0x47434
000000000004742c	mov	x0, x20
0000000000047430	bl	0x55b7c ; symbol stub for: _free
0000000000047434	mov	x0, x19
0000000000047438	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE:
000000000004743c	cbz	x0, 0x47480
0000000000047440	stp	x20, x19, [sp, #-0x20]!
0000000000047444	stp	x29, x30, [sp, #0x10]
0000000000047448	add	x29, sp, #0x10
000000000004744c	mov	x19, x0
0000000000047450	ldr	x0, [x0]
0000000000047454	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
0000000000047458	ldr	x0, [x19, #0x8]
000000000004745c	bl	__ZNSt3__16__treeINS_12__value_typeIiNS_6vectorIPKvN6kotlin11std_support9allocatorIS4_EEEEEENS_19__map_value_compareIiSA_NS_4lessIiEELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
0000000000047460	ldr	x0, [x19, #0x28]
0000000000047464	cbz	x0, 0x47470
0000000000047468	str	x0, [x19, #0x30]
000000000004746c	bl	0x55b7c ; symbol stub for: _free
0000000000047470	mov	x0, x19
0000000000047474	ldp	x29, x30, [sp, #0x10]
0000000000047478	ldp	x20, x19, [sp], #0x20
000000000004747c	b	0x55b7c ; symbol stub for: _free
0000000000047480	ret
__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj:
0000000000047484	ldr	x9, [x0]
0000000000047488	ldrsb	w10, [x9]
000000000004748c	and	w8, w10, #0xff
0000000000047490	tbnz	w10, #0x1f, 0x474bc
0000000000047494	cmp	x9, x1
0000000000047498	b.eq	0x4768c
000000000004749c	mov	x10, x9
00000000000474a0	mov	x11, x8
00000000000474a4	mov	w8, #0x0
00000000000474a8	str	w11, [x2]
00000000000474ac	add	x9, x10, #0x1
00000000000474b0	str	x9, [x0]
00000000000474b4	mov	x0, x8
00000000000474b8	ret
00000000000474bc	and	w10, w8, #0xe0
00000000000474c0	cmp	w10, #0xc0
00000000000474c4	b.ne	0x47510
00000000000474c8	cmp	x9, x1
00000000000474cc	b.eq	0x4768c
00000000000474d0	add	x10, x9, #0x1
00000000000474d4	str	x10, [x0]
00000000000474d8	cmp	x10, x1
00000000000474dc	b.eq	0x4768c
00000000000474e0	ldrb	w11, [x10]
00000000000474e4	and	w12, w11, #0xc0
00000000000474e8	cmp	w12, #0x80
00000000000474ec	b.ne	0x4769c
00000000000474f0	and	w11, w11, #0x3f
00000000000474f4	bfi	w11, w8, #6, #5
00000000000474f8	cmp	w11, #0x80
00000000000474fc	b.hs	0x474a4
0000000000047500	mov	w8, #0x4
0000000000047504	str	x9, [x0]
0000000000047508	mov	x0, x8
000000000004750c	ret
0000000000047510	and	w10, w8, #0xf0
0000000000047514	cmp	w10, #0xe0
0000000000047518	b.ne	0x4756c
000000000004751c	cmp	x9, x1
0000000000047520	b.eq	0x4768c
0000000000047524	add	x10, x9, #0x1
0000000000047528	str	x10, [x0]
000000000004752c	cmp	x10, x1
0000000000047530	b.eq	0x4768c
0000000000047534	ldrb	w10, [x10]
0000000000047538	and	w11, w10, #0xc0
000000000004753c	cmp	w11, #0x80
0000000000047540	b.ne	0x4769c
0000000000047544	ubfiz	w8, w8, #12, #4
0000000000047548	bfi	w8, w10, #6, #6
000000000004754c	and	w10, w8, #0xf800
0000000000047550	mov	w11, #0xd800
0000000000047554	cmp	w10, w11
0000000000047558	b.ne	0x475cc
000000000004755c	mov	w8, #0x5
0000000000047560	str	x9, [x0]
0000000000047564	mov	x0, x8
0000000000047568	ret
000000000004756c	and	w10, w8, #0xf8
0000000000047570	cmp	w10, #0xf0
0000000000047574	b.ne	0x475c4
0000000000047578	cmp	x9, x1
000000000004757c	b.eq	0x4768c
0000000000047580	add	x10, x9, #0x1
0000000000047584	str	x10, [x0]
0000000000047588	cmp	x10, x1
000000000004758c	b.eq	0x4768c
0000000000047590	ldrb	w10, [x10]
0000000000047594	and	w11, w10, #0xc0
0000000000047598	cmp	w11, #0x80
000000000004759c	b.ne	0x4769c
00000000000475a0	ubfiz	w8, w8, #18, #3
00000000000475a4	bfi	w8, w10, #12, #6
00000000000475a8	lsr	w10, w8, #16
00000000000475ac	cmp	w10, #0x10
00000000000475b0	b.ls	0x475e4
00000000000475b4	mov	w8, #0x5
00000000000475b8	str	x9, [x0]
00000000000475bc	mov	x0, x8
00000000000475c0	ret
00000000000475c4	mov	w0, #0x2
00000000000475c8	ret
00000000000475cc	cmp	w8, #0x800
00000000000475d0	b.hs	0x475fc
00000000000475d4	mov	w8, #0x4
00000000000475d8	str	x9, [x0]
00000000000475dc	mov	x0, x8
00000000000475e0	ret
00000000000475e4	cmp	w8, #0x10, lsl #12
00000000000475e8	b.hs	0x4763c
00000000000475ec	mov	w8, #0x4
00000000000475f0	str	x9, [x0]
00000000000475f4	mov	x0, x8
00000000000475f8	ret
00000000000475fc	add	x10, x9, #0x2
0000000000047600	str	x10, [x0]
0000000000047604	cmp	x10, x1
0000000000047608	b.eq	0x4768c
000000000004760c	ldrb	w11, [x10]
0000000000047610	and	w12, w11, #0xc0
0000000000047614	cmp	w12, #0x80
0000000000047618	b.ne	0x4769c
000000000004761c	and	w9, w11, #0x3f
0000000000047620	orr	w11, w8, w9
0000000000047624	mov	w8, #0x0
0000000000047628	str	w11, [x2]
000000000004762c	add	x9, x10, #0x1
0000000000047630	str	x9, [x0]
0000000000047634	mov	x0, x8
0000000000047638	ret
000000000004763c	add	x10, x9, #0x2
0000000000047640	str	x10, [x0]
0000000000047644	cmp	x10, x1
0000000000047648	b.eq	0x4768c
000000000004764c	ldrb	w11, [x10]
0000000000047650	and	w10, w11, #0xc0
0000000000047654	cmp	w10, #0x80
0000000000047658	b.ne	0x4769c
000000000004765c	add	x10, x9, #0x3
0000000000047660	str	x10, [x0]
0000000000047664	cmp	x10, x1
0000000000047668	b.eq	0x4768c
000000000004766c	ldrb	w12, [x10]
0000000000047670	and	w13, w12, #0xc0
0000000000047674	cmp	w13, #0x80
0000000000047678	b.ne	0x4769c
000000000004767c	ubfiz	w9, w11, #6, #6
0000000000047680	orr	w8, w9, w8
0000000000047684	and	w9, w12, #0x3f
0000000000047688	b	0x47620
000000000004768c	mov	w8, #0x1
0000000000047690	str	x9, [x0]
0000000000047694	mov	x0, x8
0000000000047698	ret
000000000004769c	mov	w8, #0x3
00000000000476a0	str	x9, [x0]
00000000000476a4	mov	x0, x8
00000000000476a8	ret
__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE8__rehashEm:
00000000000476ac	stp	x20, x19, [sp, #-0x20]!
00000000000476b0	stp	x29, x30, [sp, #0x10]
00000000000476b4	add	x29, sp, #0x10
00000000000476b8	mov	x19, x0
00000000000476bc	cbz	x1, 0x47734
00000000000476c0	mov	x20, x1
00000000000476c4	mov	x0, x1
00000000000476c8	mov	w1, #0x8
00000000000476cc	bl	0x55aec ; symbol stub for: _calloc
00000000000476d0	mov	x8, x0
00000000000476d4	ldr	x0, [x19]
00000000000476d8	str	x8, [x19]
00000000000476dc	cbz	x0, 0x476e4
00000000000476e0	bl	0x55b7c ; symbol stub for: _free
00000000000476e4	mov	x8, #0x0
00000000000476e8	str	x20, [x19, #0x8]
00000000000476ec	ldr	x9, [x19]
00000000000476f0	str	xzr, [x9, x8, lsl #3]
00000000000476f4	add	x8, x8, #0x1
00000000000476f8	cmp	x8, x20
00000000000476fc	b.lo	0x476ec
0000000000047700	mov	x11, x19
0000000000047704	ldr	x8, [x11, #0x10]!
0000000000047708	cbz	x8, 0x47810
000000000004770c	ldr	x9, [x8, #0x8]
0000000000047710	fmov	d0, x20
0000000000047714	cnt.8b	v0, v0
0000000000047718	uaddlv.8b	h0, v0
000000000004771c	fmov	w10, s0
0000000000047720	cmp	x10, #0x1
0000000000047724	b.hi	0x4774c
0000000000047728	sub	x12, x20, #0x1
000000000004772c	and	x9, x9, x12
0000000000047730	b	0x4775c
0000000000047734	ldr	x0, [x19]
0000000000047738	str	xzr, [x19]
000000000004773c	cbz	x0, 0x47744
0000000000047740	bl	0x55b7c ; symbol stub for: _free
0000000000047744	str	xzr, [x19, #0x8]
0000000000047748	b	0x47810
000000000004774c	cmp	x9, x20
0000000000047750	b.lo	0x4775c
0000000000047754	udiv	x12, x9, x20
0000000000047758	msub	x9, x12, x20, x9
000000000004775c	ldr	x12, [x19]
0000000000047760	str	x11, [x12, x9, lsl #3]
0000000000047764	ldr	x12, [x8]
0000000000047768	cbz	x12, 0x47810
000000000004776c	sub	x11, x20, #0x1
0000000000047770	b	0x47780
0000000000047774	mov	x8, x12
0000000000047778	ldr	x12, [x8]
000000000004777c	cbz	x12, 0x47810
0000000000047780	ldr	x13, [x12, #0x8]
0000000000047784	cmp	x10, #0x1
0000000000047788	b.hi	0x47794
000000000004778c	and	x13, x13, x11
0000000000047790	b	0x477a4
0000000000047794	cmp	x13, x20
0000000000047798	b.lo	0x477a4
000000000004779c	udiv	x14, x13, x20
00000000000477a0	msub	x13, x14, x20, x13
00000000000477a4	cmp	x13, x9
00000000000477a8	b.eq	0x47774
00000000000477ac	ldr	x14, [x19]
00000000000477b0	ldr	x16, [x14, x13, lsl #3]
00000000000477b4	mov	x15, x12
00000000000477b8	cbz	x16, 0x47800
00000000000477bc	mov	x14, x15
00000000000477c0	ldr	x15, [x15]
00000000000477c4	cbz	x15, 0x477d8
00000000000477c8	ldr	x16, [x12, #0x10]
00000000000477cc	ldr	x17, [x15, #0x10]
00000000000477d0	cmp	x16, x17
00000000000477d4	b.eq	0x477bc
00000000000477d8	str	x15, [x8]
00000000000477dc	ldr	x15, [x19]
00000000000477e0	lsl	x13, x13, #3
00000000000477e4	ldr	x15, [x15, x13]
00000000000477e8	ldr	x15, [x15]
00000000000477ec	str	x15, [x14]
00000000000477f0	ldr	x14, [x19]
00000000000477f4	ldr	x13, [x14, x13]
00000000000477f8	str	x12, [x13]
00000000000477fc	b	0x47778
0000000000047800	str	x8, [x14, x13, lsl #3]
0000000000047804	mov	x8, x12
0000000000047808	mov	x9, x13
000000000004780c	b	0x47778
0000000000047810	ldp	x29, x30, [sp, #0x10]
0000000000047814	ldp	x20, x19, [sp], #0x20
0000000000047818	ret
__ZNSt3__112__hash_tableIP8ProtocolNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm:
000000000004781c	stp	x20, x19, [sp, #-0x20]!
0000000000047820	stp	x29, x30, [sp, #0x10]
0000000000047824	add	x29, sp, #0x10
0000000000047828	mov	x19, x0
000000000004782c	cbz	x1, 0x478a4
0000000000047830	mov	x20, x1
0000000000047834	mov	x0, x1
0000000000047838	mov	w1, #0x8
000000000004783c	bl	0x55aec ; symbol stub for: _calloc
0000000000047840	mov	x8, x0
0000000000047844	ldr	x0, [x19]
0000000000047848	str	x8, [x19]
000000000004784c	cbz	x0, 0x47854
0000000000047850	bl	0x55b7c ; symbol stub for: _free
0000000000047854	mov	x8, #0x0
0000000000047858	str	x20, [x19, #0x8]
000000000004785c	ldr	x9, [x19]
0000000000047860	str	xzr, [x9, x8, lsl #3]
0000000000047864	add	x8, x8, #0x1
0000000000047868	cmp	x8, x20
000000000004786c	b.lo	0x4785c
0000000000047870	mov	x11, x19
0000000000047874	ldr	x8, [x11, #0x10]!
0000000000047878	cbz	x8, 0x47980
000000000004787c	ldr	x9, [x8, #0x8]
0000000000047880	fmov	d0, x20
0000000000047884	cnt.8b	v0, v0
0000000000047888	uaddlv.8b	h0, v0
000000000004788c	fmov	w10, s0
0000000000047890	cmp	x10, #0x1
0000000000047894	b.hi	0x478bc
0000000000047898	sub	x12, x20, #0x1
000000000004789c	and	x9, x9, x12
00000000000478a0	b	0x478cc
00000000000478a4	ldr	x0, [x19]
00000000000478a8	str	xzr, [x19]
00000000000478ac	cbz	x0, 0x478b4
00000000000478b0	bl	0x55b7c ; symbol stub for: _free
00000000000478b4	str	xzr, [x19, #0x8]
00000000000478b8	b	0x47980
00000000000478bc	cmp	x9, x20
00000000000478c0	b.lo	0x478cc
00000000000478c4	udiv	x12, x9, x20
00000000000478c8	msub	x9, x12, x20, x9
00000000000478cc	ldr	x12, [x19]
00000000000478d0	str	x11, [x12, x9, lsl #3]
00000000000478d4	ldr	x12, [x8]
00000000000478d8	cbz	x12, 0x47980
00000000000478dc	sub	x11, x20, #0x1
00000000000478e0	b	0x478f0
00000000000478e4	mov	x8, x12
00000000000478e8	ldr	x12, [x8]
00000000000478ec	cbz	x12, 0x47980
00000000000478f0	ldr	x13, [x12, #0x8]
00000000000478f4	cmp	x10, #0x1
00000000000478f8	b.hi	0x47904
00000000000478fc	and	x13, x13, x11
0000000000047900	b	0x47914
0000000000047904	cmp	x13, x20
0000000000047908	b.lo	0x47914
000000000004790c	udiv	x14, x13, x20
0000000000047910	msub	x13, x14, x20, x13
0000000000047914	cmp	x13, x9
0000000000047918	b.eq	0x478e4
000000000004791c	ldr	x14, [x19]
0000000000047920	ldr	x16, [x14, x13, lsl #3]
0000000000047924	mov	x15, x12
0000000000047928	cbz	x16, 0x47970
000000000004792c	mov	x14, x15
0000000000047930	ldr	x15, [x15]
0000000000047934	cbz	x15, 0x47948
0000000000047938	ldr	x16, [x12, #0x10]
000000000004793c	ldr	x17, [x15, #0x10]
0000000000047940	cmp	x16, x17
0000000000047944	b.eq	0x4792c
0000000000047948	str	x15, [x8]
000000000004794c	ldr	x15, [x19]
0000000000047950	lsl	x13, x13, #3
0000000000047954	ldr	x15, [x15, x13]
0000000000047958	ldr	x15, [x15]
000000000004795c	str	x15, [x14]
0000000000047960	ldr	x14, [x19]
0000000000047964	ldr	x13, [x14, x13]
0000000000047968	str	x12, [x13]
000000000004796c	b	0x478e8
0000000000047970	str	x8, [x14, x13, lsl #3]
0000000000047974	mov	x8, x12
0000000000047978	mov	x9, x13
000000000004797c	b	0x478e8
0000000000047980	ldp	x29, x30, [sp, #0x10]
0000000000047984	ldp	x20, x19, [sp], #0x20
0000000000047988	ret
__ZNSt3__112__hash_tableIP13objc_selectorNS_4hashIS2_EENS_8equal_toIS2_EEN6kotlin11std_support9allocatorIS2_EEE8__rehashEm:
000000000004798c	stp	x20, x19, [sp, #-0x20]!
0000000000047990	stp	x29, x30, [sp, #0x10]
0000000000047994	add	x29, sp, #0x10
0000000000047998	mov	x19, x0
000000000004799c	cbz	x1, 0x47a14
00000000000479a0	mov	x20, x1
00000000000479a4	mov	x0, x1
00000000000479a8	mov	w1, #0x8
00000000000479ac	bl	0x55aec ; symbol stub for: _calloc
00000000000479b0	mov	x8, x0
00000000000479b4	ldr	x0, [x19]
00000000000479b8	str	x8, [x19]
00000000000479bc	cbz	x0, 0x479c4
00000000000479c0	bl	0x55b7c ; symbol stub for: _free
00000000000479c4	mov	x8, #0x0
00000000000479c8	str	x20, [x19, #0x8]
00000000000479cc	ldr	x9, [x19]
00000000000479d0	str	xzr, [x9, x8, lsl #3]
00000000000479d4	add	x8, x8, #0x1
00000000000479d8	cmp	x8, x20
00000000000479dc	b.lo	0x479cc
00000000000479e0	mov	x11, x19
00000000000479e4	ldr	x8, [x11, #0x10]!
00000000000479e8	cbz	x8, 0x47af0
00000000000479ec	ldr	x9, [x8, #0x8]
00000000000479f0	fmov	d0, x20
00000000000479f4	cnt.8b	v0, v0
00000000000479f8	uaddlv.8b	h0, v0
00000000000479fc	fmov	w10, s0
0000000000047a00	cmp	x10, #0x1
0000000000047a04	b.hi	0x47a2c
0000000000047a08	sub	x12, x20, #0x1
0000000000047a0c	and	x9, x9, x12
0000000000047a10	b	0x47a3c
0000000000047a14	ldr	x0, [x19]
0000000000047a18	str	xzr, [x19]
0000000000047a1c	cbz	x0, 0x47a24
0000000000047a20	bl	0x55b7c ; symbol stub for: _free
0000000000047a24	str	xzr, [x19, #0x8]
0000000000047a28	b	0x47af0
0000000000047a2c	cmp	x9, x20
0000000000047a30	b.lo	0x47a3c
0000000000047a34	udiv	x12, x9, x20
0000000000047a38	msub	x9, x12, x20, x9
0000000000047a3c	ldr	x12, [x19]
0000000000047a40	str	x11, [x12, x9, lsl #3]
0000000000047a44	ldr	x12, [x8]
0000000000047a48	cbz	x12, 0x47af0
0000000000047a4c	sub	x11, x20, #0x1
0000000000047a50	b	0x47a60
0000000000047a54	mov	x8, x12
0000000000047a58	ldr	x12, [x8]
0000000000047a5c	cbz	x12, 0x47af0
0000000000047a60	ldr	x13, [x12, #0x8]
0000000000047a64	cmp	x10, #0x1
0000000000047a68	b.hi	0x47a74
0000000000047a6c	and	x13, x13, x11
0000000000047a70	b	0x47a84
0000000000047a74	cmp	x13, x20
0000000000047a78	b.lo	0x47a84
0000000000047a7c	udiv	x14, x13, x20
0000000000047a80	msub	x13, x14, x20, x13
0000000000047a84	cmp	x13, x9
0000000000047a88	b.eq	0x47a54
0000000000047a8c	ldr	x14, [x19]
0000000000047a90	ldr	x16, [x14, x13, lsl #3]
0000000000047a94	mov	x15, x12
0000000000047a98	cbz	x16, 0x47ae0
0000000000047a9c	mov	x14, x15
0000000000047aa0	ldr	x15, [x15]
0000000000047aa4	cbz	x15, 0x47ab8
0000000000047aa8	ldr	x16, [x12, #0x10]
0000000000047aac	ldr	x17, [x15, #0x10]
0000000000047ab0	cmp	x16, x17
0000000000047ab4	b.eq	0x47a9c
0000000000047ab8	str	x15, [x8]
0000000000047abc	ldr	x15, [x19]
0000000000047ac0	lsl	x13, x13, #3
0000000000047ac4	ldr	x15, [x15, x13]
0000000000047ac8	ldr	x15, [x15]
0000000000047acc	str	x15, [x14]
0000000000047ad0	ldr	x14, [x19]
0000000000047ad4	ldr	x13, [x14, x13]
0000000000047ad8	str	x12, [x13]
0000000000047adc	b	0x47a58
0000000000047ae0	str	x8, [x14, x13, lsl #3]
0000000000047ae4	mov	x8, x12
0000000000047ae8	mov	x9, x13
0000000000047aec	b	0x47a58
0000000000047af0	ldp	x29, x30, [sp, #0x10]
0000000000047af4	ldp	x20, x19, [sp], #0x20
0000000000047af8	ret
__ZNSt3__112__hash_tableINS_17__hash_value_typeIiP6WorkerEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEEN6kotlin11std_support9allocatorIS4_EEE8__rehashEm:
0000000000047afc	stp	x20, x19, [sp, #-0x20]!
0000000000047b00	stp	x29, x30, [sp, #0x10]
0000000000047b04	add	x29, sp, #0x10
0000000000047b08	mov	x19, x0
0000000000047b0c	cbz	x1, 0x47b84
0000000000047b10	mov	x20, x1
0000000000047b14	mov	x0, x1
0000000000047b18	mov	w1, #0x8
0000000000047b1c	bl	0x55aec ; symbol stub for: _calloc
0000000000047b20	mov	x8, x0
0000000000047b24	ldr	x0, [x19]
0000000000047b28	str	x8, [x19]
0000000000047b2c	cbz	x0, 0x47b34
0000000000047b30	bl	0x55b7c ; symbol stub for: _free
0000000000047b34	mov	x8, #0x0
0000000000047b38	str	x20, [x19, #0x8]
0000000000047b3c	ldr	x9, [x19]
0000000000047b40	str	xzr, [x9, x8, lsl #3]
0000000000047b44	add	x8, x8, #0x1
0000000000047b48	cmp	x8, x20
0000000000047b4c	b.lo	0x47b3c
0000000000047b50	mov	x11, x19
0000000000047b54	ldr	x8, [x11, #0x10]!
0000000000047b58	cbz	x8, 0x47c60
0000000000047b5c	ldr	x9, [x8, #0x8]
0000000000047b60	fmov	d0, x20
0000000000047b64	cnt.8b	v0, v0
0000000000047b68	uaddlv.8b	h0, v0
0000000000047b6c	fmov	w10, s0
0000000000047b70	cmp	x10, #0x1
0000000000047b74	b.hi	0x47b9c
0000000000047b78	sub	x12, x20, #0x1
0000000000047b7c	and	x9, x9, x12
0000000000047b80	b	0x47bac
0000000000047b84	ldr	x0, [x19]
0000000000047b88	str	xzr, [x19]
0000000000047b8c	cbz	x0, 0x47b94
0000000000047b90	bl	0x55b7c ; symbol stub for: _free
0000000000047b94	str	xzr, [x19, #0x8]
0000000000047b98	b	0x47c60
0000000000047b9c	cmp	x9, x20
0000000000047ba0	b.lo	0x47bac
0000000000047ba4	udiv	x12, x9, x20
0000000000047ba8	msub	x9, x12, x20, x9
0000000000047bac	ldr	x12, [x19]
0000000000047bb0	str	x11, [x12, x9, lsl #3]
0000000000047bb4	ldr	x12, [x8]
0000000000047bb8	cbz	x12, 0x47c60
0000000000047bbc	sub	x11, x20, #0x1
0000000000047bc0	b	0x47bd0
0000000000047bc4	mov	x8, x12
0000000000047bc8	ldr	x12, [x8]
0000000000047bcc	cbz	x12, 0x47c60
0000000000047bd0	ldr	x13, [x12, #0x8]
0000000000047bd4	cmp	x10, #0x1
0000000000047bd8	b.hi	0x47be4
0000000000047bdc	and	x13, x13, x11
0000000000047be0	b	0x47bf4
0000000000047be4	cmp	x13, x20
0000000000047be8	b.lo	0x47bf4
0000000000047bec	udiv	x14, x13, x20
0000000000047bf0	msub	x13, x14, x20, x13
0000000000047bf4	cmp	x13, x9
0000000000047bf8	b.eq	0x47bc4
0000000000047bfc	ldr	x14, [x19]
0000000000047c00	ldr	x16, [x14, x13, lsl #3]
0000000000047c04	mov	x15, x12
0000000000047c08	cbz	x16, 0x47c50
0000000000047c0c	mov	x14, x15
0000000000047c10	ldr	x15, [x15]
0000000000047c14	cbz	x15, 0x47c28
0000000000047c18	ldr	w16, [x12, #0x10]
0000000000047c1c	ldr	w17, [x15, #0x10]
0000000000047c20	cmp	w16, w17
0000000000047c24	b.eq	0x47c0c
0000000000047c28	str	x15, [x8]
0000000000047c2c	ldr	x15, [x19]
0000000000047c30	lsl	x13, x13, #3
0000000000047c34	ldr	x15, [x15, x13]
0000000000047c38	ldr	x15, [x15]
0000000000047c3c	str	x15, [x14]
0000000000047c40	ldr	x14, [x19]
0000000000047c44	ldr	x13, [x14, x13]
0000000000047c48	str	x12, [x13]
0000000000047c4c	b	0x47bc8
0000000000047c50	str	x8, [x14, x13, lsl #3]
0000000000047c54	mov	x8, x12
0000000000047c58	mov	x9, x13
0000000000047c5c	b	0x47bc8
0000000000047c60	ldp	x29, x30, [sp, #0x10]
0000000000047c64	ldp	x20, x19, [sp], #0x20
0000000000047c68	ret
__ZN12_GLOBAL__N_116TerminateHandler13kotlinHandlerEv:
0000000000047c6c	sub	sp, sp, #0x40
0000000000047c70	stp	x22, x21, [sp, #0x10]
0000000000047c74	stp	x20, x19, [sp, #0x20]
0000000000047c78	stp	x29, x30, [sp, #0x30]
0000000000047c7c	add	x29, sp, #0x30
0000000000047c80	add	x8, sp, #0x8
0000000000047c84	bl	0x559fc ; symbol stub for: __ZSt17current_exceptionv
0000000000047c88	ldr	x8, [sp, #0x8]
0000000000047c8c	cbnz	x8, 0x47cb8
0000000000047c90	add	x0, sp, #0x8
0000000000047c94	bl	0x558dc ; symbol stub for: __ZNSt13exception_ptrD1Ev
0000000000047c98	adrp	x0, 51 ; 0x7a000
0000000000047c9c	add	x0, x0, #0x4e0
0000000000047ca0	ldr	x8, [x0]
0000000000047ca4	blr	x8
0000000000047ca8	ldr	x20, [x0]
0000000000047cac	cbnz	x20, 0x47cd0
0000000000047cb0	mov	w21, #0x1
0000000000047cb4	b	0x47ce4
0000000000047cb8	mov	x0, sp
0000000000047cbc	add	x1, sp, #0x8
0000000000047cc0	bl	0x558d0 ; symbol stub for: __ZNSt13exception_ptrC1ERKS_
0000000000047cc4	mov	x0, sp
0000000000047cc8	bl	0x55a08 ; symbol stub for: __ZSt17rethrow_exceptionSt13exception_ptr
0000000000047ccc	b	0x47df4
0000000000047cd0	add	x8, x20, #0x138
0000000000047cd4	mov	w9, #0x1
0000000000047cd8	ldaxr	w21, [x8]
0000000000047cdc	stlxr	w10, w9, [x8]
0000000000047ce0	cbnz	w10, 0x47cd8
0000000000047ce4	bl	__ZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEv
0000000000047ce8	b	0x47df4
0000000000047cec	mov	x19, x0
0000000000047cf0	cbnz	x20, 0x47cfc
0000000000047cf4	mov	x0, x19
0000000000047cf8	bl	0x558ac ; symbol stub for: __Unwind_Resume
0000000000047cfc	add	x0, x20, #0x138
0000000000047d00	ldaxr	w8, [x0]
0000000000047d04	stlxr	w9, w21, [x0]
0000000000047d08	cbnz	w9, 0x47d00
0000000000047d0c	cbnz	w21, 0x47cf4
0000000000047d10	cmp	w8, #0x1
0000000000047d14	b.ne	0x47cf4
0000000000047d18	adr	x8, #0x4c7f1
0000000000047d1c	nop
0000000000047d20	ldarb	w8, [x8]
0000000000047d24	tbz	w8, #0x0, 0x47cf4
0000000000047d28	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047d2c	mov	x0, x19
0000000000047d30	bl	0x558ac ; symbol stub for: __Unwind_Resume
0000000000047d34	mov	x20, x1
0000000000047d38	mov	x19, x0
0000000000047d3c	mov	x0, sp
0000000000047d40	bl	0x558dc ; symbol stub for: __ZNSt13exception_ptrD1Ev
0000000000047d44	mov	x0, x19
0000000000047d48	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000047d4c	cmp	w20, #0x2
0000000000047d50	b.ne	0x47dbc
0000000000047d54	mov	x19, x0
0000000000047d58	bl	_Kotlin_initRuntimeIfNeeded
0000000000047d5c	adrp	x0, 51 ; 0x7a000
0000000000047d60	add	x0, x0, #0x4e0
0000000000047d64	ldr	x8, [x0]
0000000000047d68	blr	x8
0000000000047d6c	ldr	x8, [x0]
0000000000047d70	add	x20, x8, #0x138
0000000000047d74	ldaxr	w21, [x20]
0000000000047d78	stlxr	w8, wzr, [x20]
0000000000047d7c	cbnz	w8, 0x47d74
0000000000047d80	cmp	w21, #0x1
0000000000047d84	b.ne	0x47da0
0000000000047d88	adr	x8, #0x4c781
0000000000047d8c	nop
0000000000047d90	ldarb	w8, [x8]
0000000000047d94	tbz	w8, #0x0, 0x47da0
0000000000047d98	mov	x0, x20
0000000000047d9c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047da0	ldr	x8, [x19, #0x8]
0000000000047da4	ldr	x0, [x8]
0000000000047da8	bl	__ZN12_GLOBAL__N_125processUnhandledExceptionEP9ObjHeader
0000000000047dac	ldr	x8, [x19, #0x8]
0000000000047db0	ldr	x0, [x8]
0000000000047db4	bl	__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader
0000000000047db8	b	0x47df4
0000000000047dbc	adrp	x0, 51 ; 0x7a000
0000000000047dc0	add	x0, x0, #0x4e0
0000000000047dc4	ldr	x8, [x0]
0000000000047dc8	blr	x8
0000000000047dcc	ldr	x20, [x0]
0000000000047dd0	cbnz	x20, 0x47ddc
0000000000047dd4	mov	w21, #0x1
0000000000047dd8	b	0x47df0
0000000000047ddc	add	x8, x20, #0x138
0000000000047de0	mov	w9, #0x1
0000000000047de4	ldaxr	w21, [x8]
0000000000047de8	stlxr	w10, w9, [x8]
0000000000047dec	cbnz	w10, 0x47de4
0000000000047df0	bl	__ZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEv
0000000000047df4	brk	#0x1
0000000000047df8	mov	x19, x0
0000000000047dfc	cbz	x20, 0x47e2c
0000000000047e00	add	x0, x20, #0x138
0000000000047e04	ldaxr	w8, [x0]
0000000000047e08	stlxr	w9, w21, [x0]
0000000000047e0c	cbnz	w9, 0x47e04
0000000000047e10	cbnz	w21, 0x47e2c
0000000000047e14	cmp	w8, #0x1
0000000000047e18	b.ne	0x47e2c
0000000000047e1c	adr	x8, #0x4c6ed
0000000000047e20	nop
0000000000047e24	ldarb	w8, [x8]
0000000000047e28	tbnz	w8, #0x0, 0x47e70
0000000000047e2c	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
0000000000047e30	add	x0, sp, #0x8
0000000000047e34	bl	0x558dc ; symbol stub for: __ZNSt13exception_ptrD1Ev
0000000000047e38	mov	x0, x19
0000000000047e3c	bl	0x558ac ; symbol stub for: __Unwind_Resume
0000000000047e40	mov	x19, x0
0000000000047e44	ldaxr	w8, [x20]
0000000000047e48	stlxr	w9, w21, [x20]
0000000000047e4c	cbnz	w9, 0x47e44
0000000000047e50	cbnz	w21, 0x47e2c
0000000000047e54	cmp	w8, #0x1
0000000000047e58	b.ne	0x47e2c
0000000000047e5c	adr	x8, #0x4c6ad
0000000000047e60	nop
0000000000047e64	ldarb	w8, [x8]
0000000000047e68	tbz	w8, #0x0, 0x47e2c
0000000000047e6c	mov	x0, x20
0000000000047e70	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047e74	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
0000000000047e78	add	x0, sp, #0x8
0000000000047e7c	bl	0x558dc ; symbol stub for: __ZNSt13exception_ptrD1Ev
0000000000047e80	mov	x0, x19
0000000000047e84	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZN12_GLOBAL__N_125processUnhandledExceptionEP9ObjHeader:
0000000000047e88	sub	sp, sp, #0x180
0000000000047e8c	stp	x28, x27, [sp, #0x120]
0000000000047e90	stp	x26, x25, [sp, #0x130]
0000000000047e94	stp	x24, x23, [sp, #0x140]
0000000000047e98	stp	x22, x21, [sp, #0x150]
0000000000047e9c	stp	x20, x19, [sp, #0x160]
0000000000047ea0	stp	x29, x30, [sp, #0x170]
0000000000047ea4	add	x29, sp, #0x170
0000000000047ea8	mov	x21, x0
0000000000047eac	movi.16b	v0, #0x0
0000000000047eb0	stp	q0, q0, [sp, #0x30]
0000000000047eb4	str	q0, [sp, #0x50]
0000000000047eb8	add	x23, sp, #0x30
0000000000047ebc	adrp	x19, 51 ; 0x7a000
0000000000047ec0	add	x19, x19, #0x4e0
0000000000047ec4	ldr	x26, [x19]
0000000000047ec8	mov	x0, x19
0000000000047ecc	blr	x26
0000000000047ed0	ldr	x8, [x0]
0000000000047ed4	ldr	x9, [x8, #0x110]
0000000000047ed8	str	x23, [x8, #0x110]
0000000000047edc	mov	x8, #0x600000000
0000000000047ee0	stp	x9, x8, [sp, #0x38]
0000000000047ee4	adr	x24, #0x4c625
0000000000047ee8	nop
0000000000047eec	ldarb	w8, [x24]
0000000000047ef0	tbz	w8, #0x0, 0x47ef8
0000000000047ef4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000047ef8	adr	x27, #0x4c690
0000000000047efc	nop
0000000000047f00	ldar	x25, [x27]
0000000000047f04	cmp	x25, #0x2
0000000000047f08	b.hs	0x486fc
0000000000047f0c	mov	x0, x19
0000000000047f10	blr	x26
0000000000047f14	ldr	x28, [x0]
0000000000047f18	ldp	x8, x9, [x28, #0x120]
0000000000047f1c	cmp	x8, x9
0000000000047f20	b.eq	0x47f40
0000000000047f24	mov	x10, x9
0000000000047f28	ldr	x11, [x10, #-0x10]!
0000000000047f2c	cmp	x11, x27
0000000000047f30	b.eq	0x48000
0000000000047f34	mov	x9, x10
0000000000047f38	cmp	x10, x8
0000000000047f3c	b.ne	0x47f28
0000000000047f40	add	x22, x28, #0x120
0000000000047f44	add	x0, x28, #0x138
0000000000047f48	mov	w9, #0x1
0000000000047f4c	ldaxr	w8, [x0]
0000000000047f50	stlxr	w10, w9, [x0]
0000000000047f54	cbnz	w10, 0x47f4c
0000000000047f58	b	0x47f68
0000000000047f5c	mov	w20, #0x1
0000000000047f60	stlxr	w9, x20, [x27]
0000000000047f64	cbz	w9, 0x47f78
0000000000047f68	ldaxr	x25, [x27]
0000000000047f6c	cbz	x25, 0x47f5c
0000000000047f70	mov	w20, #0x0
0000000000047f74	clrex
0000000000047f78	cmp	x25, #0x1
0000000000047f7c	b.eq	0x47f68
0000000000047f80	cbz	x28, 0x47fa8
0000000000047f84	ldaxr	w9, [x0]
0000000000047f88	stlxr	w10, w8, [x0]
0000000000047f8c	cbnz	w10, 0x47f84
0000000000047f90	cbnz	w8, 0x47fa8
0000000000047f94	cmp	w9, #0x1
0000000000047f98	b.ne	0x47fa8
0000000000047f9c	ldarb	w8, [x24]
0000000000047fa0	tbz	w8, #0x0, 0x47fa8
0000000000047fa4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000047fa8	tbz	w20, #0x0, 0x47ff8
0000000000047fac	str	x21, [sp, #0x20]
0000000000047fb0	ldr	x8, [x28, #0x118]
0000000000047fb4	add	x0, x8, #0x70
0000000000047fb8	mov	w1, #0x18
0000000000047fbc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000047fc0	adr	x8, #0x1b680
0000000000047fc4	nop
0000000000047fc8	mov	x25, x0
0000000000047fcc	str	x8, [x25, #0x10]!
0000000000047fd0	str	x0, [sp, #0x18]
0000000000047fd4	str	xzr, [x0, #0x8]
0000000000047fd8	str	x25, [sp, #0x48]
0000000000047fdc	ldp	x9, x8, [x28, #0x128]
0000000000047fe0	cmp	x9, x8
0000000000047fe4	b.hs	0x4800c
0000000000047fe8	stp	x27, x25, [x9]
0000000000047fec	add	x8, x9, #0x10
0000000000047ff0	str	x8, [x28, #0x128]
0000000000047ff4	b	0x4809c
0000000000047ff8	str	x25, [sp, #0x48]
0000000000047ffc	b	0x486fc
0000000000048000	ldur	x25, [x9, #-0x8]
0000000000048004	str	x25, [sp, #0x48]
0000000000048008	b	0x486fc
000000000004800c	mov	x21, x19
0000000000048010	ldr	x10, [x22]
0000000000048014	sub	x9, x9, x10
0000000000048018	asr	x19, x9, #4
000000000004801c	add	x9, x19, #0x1
0000000000048020	lsr	x11, x9, #60
0000000000048024	cbnz	x11, 0x48844
0000000000048028	sub	x8, x8, x10
000000000004802c	asr	x10, x8, #3
0000000000048030	cmp	x10, x9
0000000000048034	csel	x9, x9, x10, lo
0000000000048038	mov	x10, #0x7ffffffffffffff
000000000004803c	cmp	x10, x8, asr #4
0000000000048040	mov	x8, #0xfffffffffffffff
0000000000048044	csel	x23, x9, x8, hi
0000000000048048	mov	x0, x23
000000000004804c	mov	w1, #0x10
0000000000048050	bl	0x55aec ; symbol stub for: _calloc
0000000000048054	add	x8, x0, x19, lsl #4
0000000000048058	add	x19, x0, x23, lsl #4
000000000004805c	stp	x27, x25, [x8]
0000000000048060	add	x20, x8, #0x10
0000000000048064	ldp	x1, x9, [x28, #0x120]
0000000000048068	sub	x2, x9, x1
000000000004806c	sub	x23, x8, x2
0000000000048070	cmp	x2, #0x1
0000000000048074	b.lt	0x48084
0000000000048078	mov	x0, x23
000000000004807c	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000048080	ldr	x1, [x22]
0000000000048084	stp	x23, x20, [x28, #0x120]
0000000000048088	str	x19, [x28, #0x130]
000000000004808c	mov	x19, x21
0000000000048090	cbz	x1, 0x4809c
0000000000048094	mov	x0, x1
0000000000048098	bl	0x55b7c ; symbol stub for: _free
000000000004809c	movi.16b	v0, #0x0
00000000000480a0	stp	q0, q0, [sp, #0x60]
00000000000480a4	str	xzr, [sp, #0xa0]
00000000000480a8	stp	q0, q0, [sp, #0x80]
00000000000480ac	mov	x0, x19
00000000000480b0	blr	x26
00000000000480b4	ldr	x8, [x0]
00000000000480b8	ldr	x9, [x8, #0x110]
00000000000480bc	add	x10, sp, #0x60
00000000000480c0	str	x10, [x8, #0x110]
00000000000480c4	add	x11, sp, #0xb0
00000000000480c8	str	x11, [x8, #0x110]
00000000000480cc	ldr	x8, [x0]
00000000000480d0	ldr	x11, [x8, #0x110]
00000000000480d4	sub	x12, x29, #0xa0
00000000000480d8	str	x12, [x8, #0x110]
00000000000480dc	mov	x8, #0x900000000
00000000000480e0	stp	x9, x8, [sp, #0x68]
00000000000480e4	stp	q0, q0, [sp, #0xb0]
00000000000480e8	mov	x8, #0x400000000
00000000000480ec	stp	x10, x8, [sp, #0xb8]
00000000000480f0	stp	q0, q0, [x29, #-0xa0]
00000000000480f4	stp	x11, x8, [x29, #-0x98]
00000000000480f8	adr	x21, #0x4c470
00000000000480fc	nop
0000000000048100	ldar	x22, [x21]
0000000000048104	cmp	x22, #0x2
0000000000048108	str	x26, [sp, #0x28]
000000000004810c	b.hs	0x482fc
0000000000048110	mov	x0, x19
0000000000048114	blr	x26
0000000000048118	ldr	x23, [x0]
000000000004811c	ldp	x8, x9, [x23, #0x120]
0000000000048120	cmp	x8, x9
0000000000048124	b.eq	0x48144
0000000000048128	mov	x10, x9
000000000004812c	ldr	x11, [x10, #-0x10]!
0000000000048130	cmp	x11, x21
0000000000048134	b.eq	0x48204
0000000000048138	mov	x9, x10
000000000004813c	cmp	x10, x8
0000000000048140	b.ne	0x4812c
0000000000048144	add	x8, x23, #0x120
0000000000048148	str	x8, [sp, #0x10]
000000000004814c	add	x0, x23, #0x138
0000000000048150	mov	w9, #0x1
0000000000048154	ldaxr	w8, [x0]
0000000000048158	stlxr	w10, w9, [x0]
000000000004815c	cbnz	w10, 0x48154
0000000000048160	b	0x48170
0000000000048164	mov	w20, #0x1
0000000000048168	stlxr	w9, x20, [x21]
000000000004816c	cbz	w9, 0x48180
0000000000048170	ldaxr	x22, [x21]
0000000000048174	cbz	x22, 0x48164
0000000000048178	mov	w20, #0x0
000000000004817c	clrex
0000000000048180	cmp	x22, #0x1
0000000000048184	b.eq	0x48170
0000000000048188	cbz	x23, 0x481b4
000000000004818c	ldaxr	w9, [x0]
0000000000048190	stlxr	w10, w8, [x0]
0000000000048194	cbnz	w10, 0x4818c
0000000000048198	cbnz	w8, 0x481b4
000000000004819c	cmp	w9, #0x1
00000000000481a0	b.ne	0x481b4
00000000000481a4	ldarb	w8, [x24]
00000000000481a8	tbz	w8, #0x0, 0x481b4
00000000000481ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000481b0	movi.16b	v0, #0x0
00000000000481b4	tbz	w20, #0x0, 0x481fc
00000000000481b8	ldr	x8, [x23, #0x118]
00000000000481bc	add	x0, x8, #0x70
00000000000481c0	mov	w1, #0x20
00000000000481c4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000481c8	mov	x22, x0
00000000000481cc	adr	x8, #0x1a284
00000000000481d0	nop
00000000000481d4	str	x8, [x22, #0x10]!
00000000000481d8	stur	xzr, [x22, #-0x8]
00000000000481dc	stur	x22, [x29, #-0x88]
00000000000481e0	ldp	x9, x8, [x23, #0x128]
00000000000481e4	cmp	x9, x8
00000000000481e8	b.hs	0x48210
00000000000481ec	stp	x21, x22, [x9]
00000000000481f0	add	x8, x9, #0x10
00000000000481f4	str	x8, [x23, #0x128]
00000000000481f8	b	0x482ac
00000000000481fc	stur	x22, [x29, #-0x88]
0000000000048200	b	0x482fc
0000000000048204	ldur	x22, [x9, #-0x8]
0000000000048208	stur	x22, [x29, #-0x88]
000000000004820c	b	0x482fc
0000000000048210	ldr	x10, [sp, #0x10]
0000000000048214	ldr	x10, [x10]
0000000000048218	sub	x9, x9, x10
000000000004821c	asr	x19, x9, #4
0000000000048220	add	x9, x19, #0x1
0000000000048224	lsr	x11, x9, #60
0000000000048228	cbnz	x11, 0x48850
000000000004822c	sub	x8, x8, x10
0000000000048230	asr	x10, x8, #3
0000000000048234	cmp	x10, x9
0000000000048238	csel	x9, x9, x10, lo
000000000004823c	mov	x10, #0x7ffffffffffffff
0000000000048240	cmp	x10, x8, asr #4
0000000000048244	mov	x8, #0xfffffffffffffff
0000000000048248	csel	x20, x9, x8, hi
000000000004824c	mov	x0, x20
0000000000048250	mov	w1, #0x10
0000000000048254	bl	0x55aec ; symbol stub for: _calloc
0000000000048258	add	x8, x0, x19, lsl #4
000000000004825c	add	x20, x0, x20, lsl #4
0000000000048260	stp	x21, x22, [x8]
0000000000048264	add	x11, x8, #0x10
0000000000048268	ldp	x1, x9, [x23, #0x120]
000000000004826c	sub	x2, x9, x1
0000000000048270	sub	x19, x8, x2
0000000000048274	cmp	x2, #0x1
0000000000048278	b.lt	0x48290
000000000004827c	mov	x0, x19
0000000000048280	str	x11, [sp, #0x8]
0000000000048284	bl	0x55bd0 ; symbol stub for: _memcpy
0000000000048288	ldp	x11, x8, [sp, #0x8]
000000000004828c	ldr	x1, [x8]
0000000000048290	stp	x19, x11, [x23, #0x120]
0000000000048294	str	x20, [x23, #0x130]
0000000000048298	adrp	x19, 50 ; 0x7a000
000000000004829c	add	x19, x19, #0x4e0
00000000000482a0	cbz	x1, 0x482ac
00000000000482a4	mov	x0, x1
00000000000482a8	bl	0x55b7c ; symbol stub for: _free
00000000000482ac	mov	x0, x22
00000000000482b0	bl	"_kfun:kotlin.native.MemoryModel.$OBJECT#<init>(){}"
00000000000482b4	mov	w0, #0x1
00000000000482b8	mov	w1, #0x28
00000000000482bc	bl	0x55aec ; symbol stub for: _calloc
00000000000482c0	ldr	x8, [x23, #0x18]!
00000000000482c4	sub	x9, x23, #0x8
00000000000482c8	stp	x21, x9, [x0, #0x10]
00000000000482cc	stp	x8, x23, [x0]
00000000000482d0	str	x0, [x8, #0x8]
00000000000482d4	str	x0, [x23]
00000000000482d8	ldr	x8, [x23, #0x10]
00000000000482dc	add	x8, x8, #0x1
00000000000482e0	str	x8, [x23, #0x10]
00000000000482e4	str	x0, [x0, #0x20]
00000000000482e8	stlr	x22, [x21]
00000000000482ec	ldr	x8, [x23, #0x110]
00000000000482f0	sub	x8, x8, #0x10
00000000000482f4	str	x8, [x23, #0x110]
00000000000482f8	movi.16b	v0, #0x0
00000000000482fc	ldr	x20, [x22, #0x8]
0000000000048300	stp	q0, q0, [x29, #-0x80]
0000000000048304	stur	xzr, [x29, #-0x60]
0000000000048308	mov	x0, x19
000000000004830c	blr	x26
0000000000048310	ldr	x8, [x0]
0000000000048314	ldr	x9, [x8, #0x110]
0000000000048318	sub	x10, x29, #0x80
000000000004831c	str	x10, [x8, #0x110]
0000000000048320	mov	x8, #0x500000000
0000000000048324	stp	x9, x8, [x29, #-0x78]
0000000000048328	mov	x0, x19
000000000004832c	ldr	w19, [x20, #0x8]
0000000000048330	tbnz	w19, #0x1f, 0x48818
0000000000048334	blr	x26
0000000000048338	ldr	x8, [x0]
000000000004833c	ldr	x8, [x8, #0x118]
0000000000048340	lsl	x9, x19, #3
0000000000048344	add	x9, x9, #0x1f
0000000000048348	and	x1, x9, #0xffffffff8
000000000004834c	add	x0, x8, #0x70
0000000000048350	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000048354	mov	x22, x0
0000000000048358	mov	x23, x0
000000000004835c	str	xzr, [x23, #0x10]!
0000000000048360	str	xzr, [x0, #0x18]
0000000000048364	str	xzr, [x0, #0x8]
0000000000048368	adr	x8, #0x18a38
000000000004836c	nop
0000000000048370	str	x8, [x23]
0000000000048374	str	w19, [x0, #0x18]
0000000000048378	stur	x23, [x29, #-0x68]
000000000004837c	ldr	w8, [x20, #0x8]
0000000000048380	add	x19, x20, #0x10
0000000000048384	add	x20, x0, #0x20
0000000000048388	bic	w26, w8, w8, asr #31
000000000004838c	cbz	w26, 0x483c8
0000000000048390	ldarb	w8, [x24]
0000000000048394	tbz	w8, #0x0, 0x4839c
0000000000048398	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004839c	ldr	x8, [x19]
00000000000483a0	stur	x8, [x29, #-0x60]
00000000000483a4	ldrsw	x9, [x8, #0x10]
00000000000483a8	ldr	w10, [x22, #0x18]
00000000000483ac	cmp	w10, w9
00000000000483b0	b.ls	0x48804
00000000000483b4	ldr	xzr, [x23]
00000000000483b8	str	x8, [x20, x9, lsl #3]
00000000000483bc	sub	w26, w26, #0x1
00000000000483c0	add	x19, x19, #0x8
00000000000483c4	cbnz	w26, 0x48390
00000000000483c8	ldr	x8, [x23]
00000000000483cc	and	x8, x8, #0xfffffffffffffffc
00000000000483d0	ldr	x8, [x8]
00000000000483d4	ldr	w8, [x8, #0x5c]
00000000000483d8	cmp	w8, #0x59
00000000000483dc	b.ne	0x48820
00000000000483e0	adrp	x19, 50 ; 0x7a000
00000000000483e4	add	x19, x19, #0x4e0
00000000000483e8	mov	x0, x19
00000000000483ec	ldr	x26, [sp, #0x28]
00000000000483f0	blr	x26
00000000000483f4	ldr	x8, [x0]
00000000000483f8	str	x23, [sp, #0xc8]
00000000000483fc	ldur	x9, [x29, #-0x98]
0000000000048400	str	x9, [x8, #0x110]
0000000000048404	ldr	w9, [x22, #0x18]
0000000000048408	cmp	w9, #0x2
000000000004840c	b.ls	0x48834
0000000000048410	ldr	x22, [x22, #0x30]
0000000000048414	str	x22, [sp, #0x78]
0000000000048418	ldr	x9, [sp, #0xb8]
000000000004841c	str	x9, [x8, #0x110]
0000000000048420	ldar	x23, [x21]
0000000000048424	cmp	x23, #0x2
0000000000048428	b.hs	0x48618
000000000004842c	mov	x0, x19
0000000000048430	blr	x26
0000000000048434	ldr	x20, [x0]
0000000000048438	ldp	x8, x9, [x20, #0x120]
000000000004843c	cmp	x8, x9
0000000000048440	b.eq	0x48460
0000000000048444	mov	x10, x9
0000000000048448	ldr	x11, [x10, #-0x10]!
000000000004844c	cmp	x11, x21
0000000000048450	b.eq	0x48524
0000000000048454	mov	x9, x10
0000000000048458	cmp	x10, x8
000000000004845c	b.ne	0x48448
0000000000048460	add	x8, x20, #0x120
0000000000048464	str	x8, [sp, #0x10]
0000000000048468	add	x0, x20, #0x138
000000000004846c	mov	w9, #0x1
0000000000048470	ldaxr	w8, [x0]
0000000000048474	stlxr	w10, w9, [x0]
0000000000048478	cbnz	w10, 0x48470
000000000004847c	b	0x4848c
0000000000048480	mov	w19, #0x1
0000000000048484	stlxr	w9, x19, [x21]
0000000000048488	cbz	w9, 0x4849c
000000000004848c	ldaxr	x23, [x21]
0000000000048490	cbz	x23, 0x48480
0000000000048494	mov	w19, #0x0
0000000000048498	clrex
000000000004849c	cmp	x23, #0x1
00000000000484a0	b.eq	0x4848c
00000000000484a4	cbz	x20, 0x484cc
00000000000484a8	ldaxr	w9, [x0]
00000000000484ac	stlxr	w10, w8, [x0]
00000000000484b0	cbnz	w10, 0x484a8
00000000000484b4	cbnz	w8, 0x484cc
00000000000484b8	cmp	w9, #0x1
00000000000484bc	b.ne	0x484cc
00000000000484c0	ldarb	w8, [x24]
00000000000484c4	tbz	w8, #0x0, 0x484cc
00000000000484c8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000484cc	tbz	w19, #0x0, 0x48514
00000000000484d0	ldr	x8, [x20, #0x118]
00000000000484d4	add	x0, x8, #0x70
00000000000484d8	mov	w1, #0x20
00000000000484dc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000484e0	mov	x23, x0
00000000000484e4	adr	x8, #0x19f6c
00000000000484e8	nop
00000000000484ec	str	x8, [x23, #0x10]!
00000000000484f0	stur	xzr, [x23, #-0x8]
00000000000484f4	str	x23, [sp, #0x80]
00000000000484f8	ldp	x9, x8, [x20, #0x128]
00000000000484fc	cmp	x9, x8
0000000000048500	b.hs	0x48530
0000000000048504	stp	x21, x23, [x9]
0000000000048508	add	x8, x9, #0x10
000000000004850c	str	x8, [x20, #0x128]
0000000000048510	b	0x485c4
0000000000048514	str	x23, [sp, #0x80]
0000000000048518	adrp	x19, 50 ; 0x7a000
000000000004851c	add	x19, x19, #0x4e0
0000000000048520	b	0x48618
0000000000048524	ldur	x23, [x9, #-0x8]
0000000000048528	str	x23, [sp, #0x80]
000000000004852c	b	0x48618
0000000000048530	ldr	x10, [sp, #0x10]
0000000000048534	ldr	x10, [x10]
0000000000048538	sub	x9, x9, x10
000000000004853c	asr	x19, x9, #4
0000000000048540	add	x9, x19, #0x1
0000000000048544	lsr	x11, x9, #60
0000000000048548	cbnz	x11, 0x4885c
000000000004854c	sub	x8, x8, x10
0000000000048550	asr	x10, x8, #3
0000000000048554	cmp	x10, x9
0000000000048558	csel	x9, x9, x10, lo
000000000004855c	mov	x10, #0x7ffffffffffffff
0000000000048560	cmp	x10, x8, asr #4
0000000000048564	mov	x8, #0xfffffffffffffff
0000000000048568	csel	x24, x9, x8, hi
000000000004856c	mov	x0, x24
0000000000048570	mov	w1, #0x10
0000000000048574	bl	0x55aec ; symbol stub for: _calloc
0000000000048578	add	x8, x0, x19, lsl #4
000000000004857c	add	x19, x0, x24, lsl #4
0000000000048580	stp	x21, x23, [x8]
0000000000048584	add	x26, x8, #0x10
0000000000048588	ldp	x1, x9, [x20, #0x120]
000000000004858c	sub	x2, x9, x1
0000000000048590	sub	x24, x8, x2
0000000000048594	cmp	x2, #0x1
0000000000048598	b.lt	0x485ac
000000000004859c	mov	x0, x24
00000000000485a0	bl	0x55bd0 ; symbol stub for: _memcpy
00000000000485a4	ldr	x8, [sp, #0x10]
00000000000485a8	ldr	x1, [x8]
00000000000485ac	stp	x24, x26, [x20, #0x120]
00000000000485b0	str	x19, [x20, #0x130]
00000000000485b4	ldr	x26, [sp, #0x28]
00000000000485b8	cbz	x1, 0x485c4
00000000000485bc	mov	x0, x1
00000000000485c0	bl	0x55b7c ; symbol stub for: _free
00000000000485c4	mov	x0, x23
00000000000485c8	adrp	x19, 50 ; 0x7a000
00000000000485cc	add	x19, x19, #0x4e0
00000000000485d0	bl	"_kfun:kotlin.native.MemoryModel.$OBJECT#<init>(){}"
00000000000485d4	mov	w0, #0x1
00000000000485d8	mov	w1, #0x28
00000000000485dc	bl	0x55aec ; symbol stub for: _calloc
00000000000485e0	ldr	x8, [x20, #0x18]!
00000000000485e4	sub	x9, x20, #0x8
00000000000485e8	stp	x21, x9, [x0, #0x10]
00000000000485ec	stp	x8, x20, [x0]
00000000000485f0	str	x0, [x8, #0x8]
00000000000485f4	str	x0, [x20]
00000000000485f8	ldr	x8, [x20, #0x10]
00000000000485fc	add	x8, x8, #0x1
0000000000048600	str	x8, [x20, #0x10]
0000000000048604	str	x0, [x0, #0x20]
0000000000048608	stlr	x23, [x21]
000000000004860c	ldr	x8, [x20, #0x110]
0000000000048610	sub	x8, x8, #0x10
0000000000048614	str	x8, [x20, #0x110]
0000000000048618	ldr	x8, [x23, #0x8]
000000000004861c	ldr	w9, [x8, #0x8]
0000000000048620	cbz	w9, 0x4883c
0000000000048624	ldr	x1, [x8, #0x10]
0000000000048628	str	x1, [sp, #0x88]
000000000004862c	ldr	x8, [x22]
0000000000048630	and	x8, x8, #0xfffffffffffffffc
0000000000048634	ldr	x8, [x8]
0000000000048638	ldr	x8, [x8, #0x70]
000000000004863c	mov	x0, x22
0000000000048640	blr	x8
0000000000048644	ldr	x21, [sp, #0x20]
0000000000048648	add	x23, sp, #0x30
000000000004864c	mov	x22, x0
0000000000048650	mov	x0, x19
0000000000048654	blr	x26
0000000000048658	ldr	x8, [x0]
000000000004865c	ldr	x8, [x8, #0x118]
0000000000048660	add	x0, x8, #0x70
0000000000048664	mov	w1, #0x20
0000000000048668	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004866c	adr	x9, #0x19f14
0000000000048670	nop
0000000000048674	mov	x8, x0
0000000000048678	str	x9, [x8, #0x10]!
000000000004867c	str	xzr, [x0, #0x8]
0000000000048680	tbz	w22, #0x0, 0x48690
0000000000048684	str	x8, [sp, #0x90]
0000000000048688	str	xzr, [x0, #0x18]
000000000004868c	b	0x4869c
0000000000048690	str	x8, [sp, #0x98]
0000000000048694	str	xzr, [x0, #0x18]
0000000000048698	str	x8, [sp, #0xa0]
000000000004869c	ldr	x9, [sp, #0x18]
00000000000486a0	str	x8, [x9, #0x18]
00000000000486a4	mov	x0, x19
00000000000486a8	blr	x26
00000000000486ac	ldr	x8, [x0]
00000000000486b0	ldr	x9, [sp, #0x68]
00000000000486b4	str	x9, [x8, #0x110]
00000000000486b8	mov	w0, #0x1
00000000000486bc	mov	w1, #0x28
00000000000486c0	bl	0x55aec ; symbol stub for: _calloc
00000000000486c4	ldr	x8, [x28, #0x18]!
00000000000486c8	sub	x9, x28, #0x8
00000000000486cc	stp	x27, x9, [x0, #0x10]
00000000000486d0	stp	x8, x28, [x0]
00000000000486d4	str	x0, [x8, #0x8]
00000000000486d8	str	x0, [x28]
00000000000486dc	ldr	x8, [x28, #0x10]
00000000000486e0	add	x8, x8, #0x1
00000000000486e4	str	x8, [x28, #0x10]
00000000000486e8	str	x0, [x0, #0x20]
00000000000486ec	stlr	x25, [x27]
00000000000486f0	ldr	x8, [x28, #0x110]
00000000000486f4	sub	x8, x8, #0x10
00000000000486f8	str	x8, [x28, #0x110]
00000000000486fc	ldr	x8, [x25, #0x8]
0000000000048700	add	x8, x8, #0x8
0000000000048704	ldar	x0, [x8]
0000000000048708	str	x0, [sp, #0x50]
000000000004870c	cbz	x0, 0x4880c
0000000000048710	add	x2, x23, #0x28
0000000000048714	ldr	x8, [x0]
0000000000048718	and	x8, x8, #0xfffffffffffffffc
000000000004871c	ldr	x8, [x8]
0000000000048720	ldr	w9, [x8, #0x3c]
0000000000048724	ldr	x8, [x8, #0x40]
0000000000048728	tbnz	w9, #0x1f, 0x48738
000000000004872c	mov	w10, #0x2c
0000000000048730	and	x9, x9, x10
0000000000048734	b	0x487bc
0000000000048738	neg	w10, w9
000000000004873c	mvn	w9, w9
0000000000048740	cmp	w10, #0x9
0000000000048744	b.ge	0x4877c
0000000000048748	cmp	w10, #0x2
000000000004874c	b.lt	0x487b0
0000000000048750	mov	x10, #0x0
0000000000048754	mov	x11, x8
0000000000048758	ldr	w12, [x11]
000000000004875c	cmp	w12, #0x2b
0000000000048760	b.gt	0x487b8
0000000000048764	add	x10, x10, #0x1
0000000000048768	add	x11, x11, #0x10
000000000004876c	cmp	x9, x10
0000000000048770	b.ne	0x48758
0000000000048774	mov	x10, x9
0000000000048778	b	0x487b8
000000000004877c	mov	w10, #0x0
0000000000048780	add	w11, w9, w10
0000000000048784	cmp	w11, #0x0
0000000000048788	cinc	w11, w11, lt
000000000004878c	asr	w11, w11, #1
0000000000048790	sbfiz	x12, x11, #4, #32
0000000000048794	ldr	w12, [x8, x12]
0000000000048798	cmp	w12, #0x2c
000000000004879c	csinc	w10, w10, w11, ge
00000000000487a0	csel	w9, w9, w11, lt
00000000000487a4	cmp	w10, w9
00000000000487a8	b.lt	0x48780
00000000000487ac	b	0x487b8
00000000000487b0	mov	w10, #0x0
00000000000487b4	b	0x487b8
00000000000487b8	sxtw	x9, w10
00000000000487bc	add	x8, x8, x9, lsl #4
00000000000487c0	ldr	x8, [x8, #0x8]
00000000000487c4	ldr	x8, [x8]
00000000000487c8	mov	x1, x21
00000000000487cc	blr	x8
00000000000487d0	mov	x0, x19
00000000000487d4	blr	x26
00000000000487d8	ldr	x8, [x0]
00000000000487dc	ldr	x9, [sp, #0x38]
00000000000487e0	str	x9, [x8, #0x110]
00000000000487e4	ldp	x29, x30, [sp, #0x170]
00000000000487e8	ldp	x20, x19, [sp, #0x160]
00000000000487ec	ldp	x22, x21, [sp, #0x150]
00000000000487f0	ldp	x24, x23, [sp, #0x140]
00000000000487f4	ldp	x26, x25, [sp, #0x130]
00000000000487f8	ldp	x28, x27, [sp, #0x120]
00000000000487fc	add	sp, sp, #0x180
0000000000048800	ret
0000000000048804	bl	_ThrowArrayIndexOutOfBoundsException
0000000000048808	b	0x48934
000000000004880c	mov	x0, x21
0000000000048810	bl	_ThrowException
0000000000048814	b	0x48934
0000000000048818	bl	_ThrowIllegalArgumentException
000000000004881c	b	0x48934
0000000000048820	adr	x1, #0x18580
0000000000048824	nop
0000000000048828	mov	x0, x23
000000000004882c	bl	_ThrowClassCastException
0000000000048830	b	0x48934
0000000000048834	bl	_ThrowArrayIndexOutOfBoundsException
0000000000048838	b	0x48934
000000000004883c	bl	_ThrowArrayIndexOutOfBoundsException
0000000000048840	b	0x48934
0000000000048844	mov	x0, x22
0000000000048848	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
000000000004884c	b	0x48934
0000000000048850	ldr	x0, [sp, #0x10]
0000000000048854	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000048858	b	0x48934
000000000004885c	ldr	x0, [sp, #0x10]
0000000000048860	bl	0x558b8 ; symbol stub for: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
0000000000048864	b	0x48934
0000000000048868	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000004886c	str	xzr, [sp, #0x80]
0000000000048870	stlr	xzr, [x21]
0000000000048874	ldr	x8, [x20, #0x128]
0000000000048878	sub	x8, x8, #0x10
000000000004887c	str	x8, [x20, #0x128]
0000000000048880	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
0000000000048884	b	0x48934
0000000000048888	b	0x488ac
000000000004888c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000048890	stur	xzr, [x29, #-0x88]
0000000000048894	stlr	xzr, [x21]
0000000000048898	ldr	x8, [x23, #0x128]
000000000004889c	sub	x8, x8, #0x10
00000000000488a0	str	x8, [x23, #0x128]
00000000000488a4	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
00000000000488a8	b	0x48934
00000000000488ac	mov	x20, x0
00000000000488b0	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
00000000000488b4	b	0x488cc
00000000000488b8	str	x26, [sp, #0x28]
00000000000488bc	mov	x21, x1
00000000000488c0	mov	x20, x0
00000000000488c4	b	0x488fc
00000000000488c8	mov	x20, x0
00000000000488cc	mov	x0, x20
00000000000488d0	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
00000000000488d4	str	xzr, [sp, #0x48]
00000000000488d8	stlr	xzr, [x27]
00000000000488dc	ldr	x8, [x28, #0x128]
00000000000488e0	sub	x8, x8, #0x10
00000000000488e4	str	x8, [x28, #0x128]
00000000000488e8	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
00000000000488ec	b	0x48934
00000000000488f0	mov	x21, x1
00000000000488f4	mov	x20, x0
00000000000488f8	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
00000000000488fc	adrp	x0, 50 ; 0x7a000
0000000000048900	add	x0, x0, #0x4e0
0000000000048904	ldr	x8, [sp, #0x28]
0000000000048908	blr	x8
000000000004890c	ldr	x8, [x0]
0000000000048910	ldr	x9, [sp, #0x38]
0000000000048914	str	x9, [x8, #0x110]
0000000000048918	cmp	w21, #0x2
000000000004891c	b.ne	0x48940
0000000000048920	mov	x0, x20
0000000000048924	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
0000000000048928	ldr	x8, [x0, #0x8]
000000000004892c	ldr	x0, [x8]
0000000000048930	bl	__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader
0000000000048934	brk	#0x1
0000000000048938	mov	x20, x0
000000000004893c	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
0000000000048940	mov	x0, x20
0000000000048944	bl	___clang_call_terminate
__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader:
0000000000048948	stp	x29, x30, [sp, #-0x10]!
000000000004894c	mov	x29, sp
0000000000048950	bl	__ZN12_GLOBAL__N_13$_0clIZNS_31terminateWithUnhandledExceptionEP9ObjHeaderE3$_1EEvT_
__ZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEv:
0000000000048954	stp	x29, x30, [sp, #-0x10]!
0000000000048958	mov	x29, sp
000000000004895c	bl	__ZN12_GLOBAL__N_13$_0clIZNS_16TerminateHandler13queuedHandlerEvEUlvE_EEvT_
__ZN12_GLOBAL__N_13$_0clIZNS_16TerminateHandler13queuedHandlerEvEUlvE_EEvT_:
0000000000048960	sub	sp, sp, #0x50
0000000000048964	stp	x22, x21, [sp, #0x20]
0000000000048968	stp	x20, x19, [sp, #0x30]
000000000004896c	stp	x29, x30, [sp, #0x40]
0000000000048970	add	x29, sp, #0x40
0000000000048974	adr	x8, #0x30700
0000000000048978	nop
000000000004897c	mov	w9, #0x1
0000000000048980	ldaxr	w10, [x8]
0000000000048984	cbnz	w10, 0x48994
0000000000048988	stlxr	w10, w9, [x8]
000000000004898c	cbnz	w10, 0x48980
0000000000048990	bl	__ZZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEvENKUlvE_clEv
0000000000048994	clrex
0000000000048998	str	xzr, [sp, #0x10]
000000000004899c	mov	w20, #0x1
00000000000489a0	str	w20, [sp, #0x18]
00000000000489a4	strb	wzr, [sp, #0x1c]
00000000000489a8	adrp	x0, 50 ; 0x7a000
00000000000489ac	add	x0, x0, #0x4e0
00000000000489b0	ldr	x8, [x0]
00000000000489b4	blr	x8
00000000000489b8	ldr	x21, [x0]
00000000000489bc	cbz	x21, 0x489e4
00000000000489c0	add	x8, x21, #0x138
00000000000489c4	mov	w9, #0x1
00000000000489c8	ldaxr	w20, [x8]
00000000000489cc	stlxr	w10, w9, [x8]
00000000000489d0	cbnz	w10, 0x489c8
00000000000489d4	str	x21, [sp, #0x10]
00000000000489d8	str	w20, [sp, #0x18]
00000000000489dc	mov	w8, #0x1
00000000000489e0	strb	w8, [sp, #0x1c]
00000000000489e4	nop
00000000000489e8	ldr	w0, __ZN12_GLOBAL__N_126concurrentTerminateWrapperE
00000000000489ec	bl	0x55e4c ; symbol stub for: _sleep
00000000000489f0	add	x0, sp, #0x8
00000000000489f4	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
00000000000489f8	mov	w0, #0x1
00000000000489fc	bl	0x55894 ; symbol stub for: __Exit
0000000000048a00	mov	x19, x0
0000000000048a04	cbz	x21, 0x48a38
0000000000048a08	add	x0, x21, #0x138
0000000000048a0c	ldaxr	w8, [x0]
0000000000048a10	stlxr	w9, w20, [x0]
0000000000048a14	cbnz	w9, 0x48a0c
0000000000048a18	cbnz	w20, 0x48a38
0000000000048a1c	cmp	w8, #0x1
0000000000048a20	b.ne	0x48a38
0000000000048a24	adr	x8, #0x4bae5
0000000000048a28	nop
0000000000048a2c	ldarb	w8, [x8]
0000000000048a30	tbz	w8, #0x0, 0x48a38
0000000000048a34	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048a38	mov	x0, x19
0000000000048a3c	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZZN12_GLOBAL__N_116TerminateHandler13queuedHandlerEvENKUlvE_clEv:
0000000000048a40	stp	x29, x30, [sp, #-0x10]!
0000000000048a44	mov	x29, sp
0000000000048a48	bl	__ZN12_GLOBAL__N_116TerminateHandler8instanceEv
0000000000048a4c	nop
0000000000048a50	ldr	x8, #0x4bd40
0000000000048a54	blr	x8
__ZN12_GLOBAL__N_116TerminateHandler8instanceEv:
0000000000048a58	stp	x20, x19, [sp, #-0x20]!
0000000000048a5c	stp	x29, x30, [sp, #0x10]
0000000000048a60	add	x29, sp, #0x10
0000000000048a64	adr	x8, #0x4bd24
0000000000048a68	nop
0000000000048a6c	ldarb	w8, [x8]
0000000000048a70	tbz	w8, #0x0, 0x48a80
0000000000048a74	ldp	x29, x30, [sp, #0x10]
0000000000048a78	ldp	x20, x19, [sp], #0x20
0000000000048a7c	ret
0000000000048a80	adr	x19, #0x4bd08
0000000000048a84	nop
0000000000048a88	mov	x0, x19
0000000000048a8c	bl	0x55a5c ; symbol stub for: ___cxa_guard_acquire
0000000000048a90	cbz	w0, 0x48a74
0000000000048a94	adr	x0, #-0xe28
0000000000048a98	nop
0000000000048a9c	bl	0x559f0 ; symbol stub for: __ZSt13set_terminatePFvvE
0000000000048aa0	str	x0, [x19, #0x8]
0000000000048aa4	mov	x0, x19
0000000000048aa8	ldp	x29, x30, [sp, #0x10]
0000000000048aac	ldp	x20, x19, [sp], #0x20
0000000000048ab0	b	0x55a68 ; symbol stub for: ___cxa_guard_release
__ZN12_GLOBAL__N_13$_0clIZNS_31terminateWithUnhandledExceptionEP9ObjHeaderE3$_1EEvT_:
0000000000048ab4	sub	sp, sp, #0x50
0000000000048ab8	stp	x22, x21, [sp, #0x20]
0000000000048abc	stp	x20, x19, [sp, #0x30]
0000000000048ac0	stp	x29, x30, [sp, #0x40]
0000000000048ac4	add	x29, sp, #0x40
0000000000048ac8	str	x0, [sp, #0x18]
0000000000048acc	adr	x8, #0x305a8
0000000000048ad0	nop
0000000000048ad4	mov	w9, #0x1
0000000000048ad8	ldaxr	w10, [x8]
0000000000048adc	cbnz	w10, 0x48af0
0000000000048ae0	stlxr	w10, w9, [x8]
0000000000048ae4	cbnz	w10, 0x48ad8
0000000000048ae8	add	x0, sp, #0x18
0000000000048aec	bl	__ZZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeaderENK3$_1clEv
0000000000048af0	clrex
0000000000048af4	str	xzr, [sp, #0x8]
0000000000048af8	mov	w20, #0x1
0000000000048afc	str	w20, [sp, #0x10]
0000000000048b00	strb	wzr, [sp, #0x14]
0000000000048b04	adrp	x0, 50 ; 0x7a000
0000000000048b08	add	x0, x0, #0x4e0
0000000000048b0c	ldr	x8, [x0]
0000000000048b10	blr	x8
0000000000048b14	ldr	x21, [x0]
0000000000048b18	cbz	x21, 0x48b40
0000000000048b1c	add	x8, x21, #0x138
0000000000048b20	mov	w9, #0x1
0000000000048b24	ldaxr	w20, [x8]
0000000000048b28	stlxr	w10, w9, [x8]
0000000000048b2c	cbnz	w10, 0x48b24
0000000000048b30	str	x21, [sp, #0x8]
0000000000048b34	str	w20, [sp, #0x10]
0000000000048b38	mov	w8, #0x1
0000000000048b3c	strb	w8, [sp, #0x14]
0000000000048b40	nop
0000000000048b44	ldr	w0, __ZN12_GLOBAL__N_126concurrentTerminateWrapperE
0000000000048b48	bl	0x55e4c ; symbol stub for: _sleep
0000000000048b4c	mov	x0, sp
0000000000048b50	bl	__ZN6kotlin31NativeOrUnregisteredThreadGuardD1Ev
0000000000048b54	mov	w0, #0x1
0000000000048b58	bl	0x55894 ; symbol stub for: __Exit
0000000000048b5c	mov	x19, x0
0000000000048b60	cbz	x21, 0x48b94
0000000000048b64	add	x0, x21, #0x138
0000000000048b68	ldaxr	w8, [x0]
0000000000048b6c	stlxr	w9, w20, [x0]
0000000000048b70	cbnz	w9, 0x48b68
0000000000048b74	cbnz	w20, 0x48b94
0000000000048b78	cmp	w8, #0x1
0000000000048b7c	b.ne	0x48b94
0000000000048b80	adr	x8, #0x4b989
0000000000048b84	nop
0000000000048b88	ldarb	w8, [x8]
0000000000048b8c	tbz	w8, #0x0, 0x48b94
0000000000048b90	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000048b94	mov	x0, x19
0000000000048b98	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeaderENK3$_1clEv:
0000000000048b9c	stp	x20, x19, [sp, #-0x20]!
0000000000048ba0	stp	x29, x30, [sp, #0x10]
0000000000048ba4	add	x29, sp, #0x10
0000000000048ba8	mov	x19, x0
0000000000048bac	ldr	x0, [x0]
0000000000048bb0	bl	_ReportUnhandledException
0000000000048bb4	ldr	x0, [x19]
0000000000048bb8	bl	__Z28ReportBacktraceToIosCrashLogP9ObjHeader
0000000000048bbc	bl	__ZN5konan5abortEv
__Z28ReportBacktraceToIosCrashLogP9ObjHeader:
0000000000048bc0	sub	sp, sp, #0xb0
0000000000048bc4	stp	x28, x27, [sp, #0x50]
0000000000048bc8	stp	x26, x25, [sp, #0x60]
0000000000048bcc	stp	x24, x23, [sp, #0x70]
0000000000048bd0	stp	x22, x21, [sp, #0x80]
0000000000048bd4	stp	x20, x19, [sp, #0x90]
0000000000048bd8	stp	x29, x30, [sp, #0xa0]
0000000000048bdc	add	x29, sp, #0xa0
0000000000048be0	mov	x19, x0
0000000000048be4	nop
0000000000048be8	ldr	x0, #0x17418 ; literal pool symbol address: _CFRunLoopRun
0000000000048bec	add	x1, sp, #0x18
0000000000048bf0	bl	0x55b58 ; symbol stub for: _dladdr
0000000000048bf4	ldr	x24, [sp, #0x20]
0000000000048bf8	cmp	w0, #0x0
0000000000048bfc	ccmp	x24, #0x0, #0x4, ne
0000000000048c00	b.eq	0x48e00
0000000000048c04	ldr	w8, [x24]
0000000000048c08	mov	w9, #0xfacf
0000000000048c0c	movk	w9, #0xfeed, lsl #16
0000000000048c10	cmp	w8, w9
0000000000048c14	b.ne	0x48e00
0000000000048c18	ldr	w25, [x24, #0x10]
0000000000048c1c	cbz	w25, 0x48e00
0000000000048c20	str	xzr, [sp, #0x10]
0000000000048c24	mov	w27, #0x0
0000000000048c28	add	x28, x24, #0x20
0000000000048c2c	adr	x20, #0x146d8 ; literal pool for: "__TEXT"
0000000000048c30	nop
0000000000048c34	adr	x21, #0x146d7 ; literal pool for: "__DATA"
0000000000048c38	nop
0000000000048c3c	adr	x22, #0x146d6 ; literal pool for: "__cf_except_bt"
0000000000048c40	nop
0000000000048c44	b	0x48c5c
0000000000048c48	ldr	w8, [x28, #0x4]
0000000000048c4c	add	x28, x8, x28
0000000000048c50	add	w27, w27, #0x1
0000000000048c54	cmp	w27, w25
0000000000048c58	b.eq	0x48e00
0000000000048c5c	ldr	w8, [x28]
0000000000048c60	cmp	w8, #0x19
0000000000048c64	b.ne	0x48c48
0000000000048c68	add	x23, x28, #0x8
0000000000048c6c	mov	x0, x23
0000000000048c70	mov	x1, x20
0000000000048c74	mov	w2, #0x10
0000000000048c78	bl	0x55e88 ; symbol stub for: _strncmp
0000000000048c7c	cbz	w0, 0x48c98
0000000000048c80	mov	x0, x23
0000000000048c84	mov	x1, x21
0000000000048c88	mov	w2, #0x10
0000000000048c8c	bl	0x55e88 ; symbol stub for: _strncmp
0000000000048c90	cbnz	w0, 0x48c48
0000000000048c94	b	0x48cb4
0000000000048c98	ldr	x8, [x28, #0x18]
0000000000048c9c	str	x8, [sp, #0x10]
0000000000048ca0	mov	x0, x23
0000000000048ca4	mov	x1, x21
0000000000048ca8	mov	w2, #0x10
0000000000048cac	bl	0x55e88 ; symbol stub for: _strncmp
0000000000048cb0	cbnz	w0, 0x48c48
0000000000048cb4	ldr	w26, [x28, #0x40]
0000000000048cb8	cbz	w26, 0x48c48
0000000000048cbc	add	x23, x28, #0x48
0000000000048cc0	b	0x48cd0
0000000000048cc4	add	x23, x23, #0x50
0000000000048cc8	subs	x26, x26, #0x1
0000000000048ccc	b.eq	0x48c48
0000000000048cd0	mov	x0, x23
0000000000048cd4	mov	x1, x22
0000000000048cd8	mov	w2, #0x10
0000000000048cdc	bl	0x55e88 ; symbol stub for: _strncmp
0000000000048ce0	cbnz	w0, 0x48cc4
0000000000048ce4	add	x0, x23, #0x10
0000000000048ce8	mov	x1, x21
0000000000048cec	mov	w2, #0x10
0000000000048cf0	bl	0x55e88 ; symbol stub for: _strncmp
0000000000048cf4	cbnz	w0, 0x48cc4
0000000000048cf8	ldp	x8, x22, [x23, #0x20]
0000000000048cfc	ldr	x9, [sp, #0x10]
0000000000048d00	sub	x9, x24, x9
0000000000048d04	add	x20, x8, x9
0000000000048d08	cmp	x22, #0x2
0000000000048d0c	ccmp	x20, #0x0, #0x4, hs
0000000000048d10	b.eq	0x48e00
0000000000048d14	str	xzr, [sp, #0x30]
0000000000048d18	adrp	x21, 50 ; 0x7a000
0000000000048d1c	add	x21, x21, #0x4e0
0000000000048d20	ldr	x23, [x21]
0000000000048d24	mov	x0, x21
0000000000048d28	blr	x23
0000000000048d2c	ldr	x8, [x0]
0000000000048d30	ldr	x9, [x8, #0x110]
0000000000048d34	mov	x10, #0x400000000
0000000000048d38	stp	x9, x10, [sp, #0x20]
0000000000048d3c	add	x9, sp, #0x18
0000000000048d40	stp	xzr, x9, [sp, #0x38]
0000000000048d44	add	x9, sp, #0x38
0000000000048d48	str	x9, [x8, #0x110]
0000000000048d4c	mov	x8, #0x300000000
0000000000048d50	str	x8, [sp, #0x48]
0000000000048d54	adr	x8, #0x4b7b5
0000000000048d58	nop
0000000000048d5c	ldarb	w8, [x8]
0000000000048d60	tbz	w8, #0x0, 0x48d68
0000000000048d64	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000048d68	ldr	x24, [x19, #0x18]
0000000000048d6c	str	x24, [sp, #0x30]
0000000000048d70	mov	x0, x21
0000000000048d74	blr	x23
0000000000048d78	ldr	x8, [x0]
0000000000048d7c	ldr	x9, [sp, #0x40]
0000000000048d80	str	x9, [x8, #0x110]
0000000000048d84	mov	w8, #0x28
0000000000048d88	strb	w8, [x20], #0x1
0000000000048d8c	ldr	w8, [x24, #0x8]
0000000000048d90	cbz	w8, 0x48de4
0000000000048d94	mov	w25, #0x0
0000000000048d98	add	x26, x24, #0x10
0000000000048d9c	sub	x19, x22, #0x1
0000000000048da0	adr	x22, #0x14581 ; literal pool for: "0x%lx "
0000000000048da4	nop
0000000000048da8	ldr	x8, [x26, w25, sxtw #3]
0000000000048dac	str	x8, [sp]
0000000000048db0	mov	x0, x20
0000000000048db4	mov	x1, x19
0000000000048db8	mov	x2, x22
0000000000048dbc	bl	0x55e58 ; symbol stub for: _snprintf
0000000000048dc0	tbnz	w0, #0x1f, 0x48de4
0000000000048dc4	mov	w8, w0
0000000000048dc8	subs	x19, x19, x8
0000000000048dcc	b.ls	0x48de4
0000000000048dd0	add	x20, x20, x8
0000000000048dd4	add	w25, w25, #0x1
0000000000048dd8	ldr	w8, [x24, #0x8]
0000000000048ddc	cmp	w25, w8
0000000000048de0	b.lo	0x48da8
0000000000048de4	mov	w8, #0x29
0000000000048de8	sturh	w8, [x20, #-0x1]
0000000000048dec	mov	x0, x21
0000000000048df0	blr	x23
0000000000048df4	ldr	x8, [x0]
0000000000048df8	ldr	x9, [sp, #0x20]
0000000000048dfc	str	x9, [x8, #0x110]
0000000000048e00	ldp	x29, x30, [sp, #0xa0]
0000000000048e04	ldp	x20, x19, [sp, #0x90]
0000000000048e08	ldp	x22, x21, [sp, #0x80]
0000000000048e0c	ldp	x24, x23, [sp, #0x70]
0000000000048e10	ldp	x26, x25, [sp, #0x60]
0000000000048e14	ldp	x28, x27, [sp, #0x50]
0000000000048e18	add	sp, sp, #0xb0
0000000000048e1c	ret
_Kotlin_ObjCExport_refToObjC:
0000000000048e20	stp	x29, x30, [sp, #-0x10]!
0000000000048e24	mov	x29, sp
0000000000048e28	cbz	x0, 0x48e88
0000000000048e2c	ldar	x8, [x0]
0000000000048e30	and	x8, x8, #0xfffffffffffffffc
0000000000048e34	ldr	x9, [x8]
0000000000048e38	cmp	x8, #0x0
0000000000048e3c	ccmp	x9, x8, #0x4, ne
0000000000048e40	b.eq	0x48e60
0000000000048e44	add	x8, x8, #0x10
0000000000048e48	ldar	x8, [x8]
0000000000048e4c	cbz	x8, 0x48e60
0000000000048e50	mov	x0, x8
0000000000048e54	bl	0x55cd8 ; symbol stub for: _objc_retain
0000000000048e58	ldp	x29, x30, [sp], #0x10
0000000000048e5c	b	0x55c48 ; symbol stub for: _objc_autorelease
0000000000048e60	ldr	x8, [x0]
0000000000048e64	and	x8, x8, #0xfffffffffffffffc
0000000000048e68	ldr	x8, [x8]
0000000000048e6c	ldr	x8, [x8, #0x60]
0000000000048e70	ldr	x8, [x8]
0000000000048e74	cbz	x8, 0x48e84
0000000000048e78	blr	x8
0000000000048e7c	ldp	x29, x30, [sp], #0x10
0000000000048e80	b	0x55c48 ; symbol stub for: _objc_autorelease
0000000000048e84	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
0000000000048e88	ldp	x29, x30, [sp], #0x10
0000000000048e8c	b	0x55c48 ; symbol stub for: _objc_autorelease
__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader:
0000000000048e90	sub	sp, sp, #0x70
0000000000048e94	stp	x28, x27, [sp, #0x10]
0000000000048e98	stp	x26, x25, [sp, #0x20]
0000000000048e9c	stp	x24, x23, [sp, #0x30]
0000000000048ea0	stp	x22, x21, [sp, #0x40]
0000000000048ea4	stp	x20, x19, [sp, #0x50]
0000000000048ea8	stp	x29, x30, [sp, #0x60]
0000000000048eac	add	x29, sp, #0x60
0000000000048eb0	mov	x19, x0
0000000000048eb4	ldr	x8, [x0]
0000000000048eb8	and	x8, x8, #0xfffffffffffffffc
0000000000048ebc	ldr	x20, [x8]
0000000000048ec0	ldr	w8, [x20, #0x38]
0000000000048ec4	cmp	w8, #0x1
0000000000048ec8	b.lt	0x49030
0000000000048ecc	mov	x26, #0x0
0000000000048ed0	mov	x28, #0x0
0000000000048ed4	nop
0000000000048ed8	ldr	x9, #0x17130 ; literal pool symbol address: _NSGenericException
0000000000048edc	ldr	x21, [x9]
0000000000048ee0	nop
0000000000048ee4	ldr	x22, #0x2df2c ; Objc selector ref: raise:format:
0000000000048ee8	adr	x23, #0x29168 ; Objc cfstring ref: @"bad cfstring ref"
0000000000048eec	nop
0000000000048ef0	b	0x48f04
0000000000048ef4	mov	x28, x27
0000000000048ef8	add	x26, x26, #0x1
0000000000048efc	cmp	x26, w8, sxtw
0000000000048f00	b.ge	0x49020
0000000000048f04	ldr	x9, [x20, #0x30]
0000000000048f08	ldr	x27, [x9, x26, lsl #3]
0000000000048f0c	ldrb	w9, [x27, #0x58]
0000000000048f10	tbnz	w9, #0x5, 0x49030
0000000000048f14	ldr	x9, [x27, #0x60]
0000000000048f18	ldr	x9, [x9]
0000000000048f1c	cbz	x9, 0x48ef8
0000000000048f20	cbz	x28, 0x48ef4
0000000000048f24	ldrsw	x9, [x27, #0x38]
0000000000048f28	cmp	w9, #0x1
0000000000048f2c	b.lt	0x48f4c
0000000000048f30	ldr	x10, [x27, #0x30]
0000000000048f34	ldr	x11, [x10]
0000000000048f38	cmp	x11, x28
0000000000048f3c	b.eq	0x48ef4
0000000000048f40	add	x10, x10, #0x8
0000000000048f44	subs	x9, x9, #0x1
0000000000048f48	b.ne	0x48f34
0000000000048f4c	ldrsw	x9, [x28, #0x38]
0000000000048f50	cmp	w9, #0x1
0000000000048f54	b.lt	0x48f74
0000000000048f58	ldr	x10, [x28, #0x30]
0000000000048f5c	ldr	x11, [x10]
0000000000048f60	cmp	x11, x27
0000000000048f64	b.eq	0x48ef8
0000000000048f68	add	x10, x10, #0x8
0000000000048f6c	subs	x9, x9, #0x1
0000000000048f70	b.ne	0x48f5c
0000000000048f74	nop
0000000000048f78	ldr	x24, #0x2e0e0 ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000048f7c	ldr	x0, [x28, #0x50]
0000000000048f80	cbz	x0, 0x48ff0
0000000000048f84	ldar	x8, [x0]
0000000000048f88	and	x8, x8, #0xfffffffffffffffc
0000000000048f8c	ldr	x9, [x8]
0000000000048f90	cmp	x8, #0x0
0000000000048f94	ccmp	x9, x8, #0x4, ne
0000000000048f98	b.eq	0x48fa8
0000000000048f9c	add	x8, x8, #0x10
0000000000048fa0	ldar	x25, [x8]
0000000000048fa4	cbnz	x25, 0x48fb4
0000000000048fa8	bl	_Kotlin_ObjCExport_CreateRetainedNSStringFromKString
0000000000048fac	bl	0x55c48 ; symbol stub for: _objc_autorelease
0000000000048fb0	mov	x25, x0
0000000000048fb4	ldr	x0, [x27, #0x50]
0000000000048fb8	cbz	x0, 0x48ffc
0000000000048fbc	ldar	x8, [x0]
0000000000048fc0	and	x8, x8, #0xfffffffffffffffc
0000000000048fc4	ldr	x9, [x8]
0000000000048fc8	cmp	x8, #0x0
0000000000048fcc	ccmp	x9, x8, #0x4, ne
0000000000048fd0	b.eq	0x48fe0
0000000000048fd4	add	x8, x8, #0x10
0000000000048fd8	ldar	x8, [x8]
0000000000048fdc	cbnz	x8, 0x49000
0000000000048fe0	bl	_Kotlin_ObjCExport_CreateRetainedNSStringFromKString
0000000000048fe4	bl	0x55c48 ; symbol stub for: _objc_autorelease
0000000000048fe8	mov	x8, x0
0000000000048fec	b	0x49000
0000000000048ff0	mov	x25, #0x0
0000000000048ff4	ldr	x0, [x27, #0x50]
0000000000048ff8	cbnz	x0, 0x48fbc
0000000000048ffc	mov	x8, #0x0
0000000000049000	stp	x25, x8, [sp]
0000000000049004	mov	x0, x24
0000000000049008	mov	x1, x22
000000000004900c	mov	x2, x21
0000000000049010	mov	x3, x23
0000000000049014	bl	0x55ca8 ; Objc message: +[NSException raise:format:]
0000000000049018	ldr	w8, [x20, #0x38]
000000000004901c	b	0x48ef8
0000000000049020	cbz	x28, 0x49030
0000000000049024	ldr	x8, [x28, #0x60]
0000000000049028	ldr	x1, [x8]
000000000004902c	cbnz	x1, 0x49058
0000000000049030	mov	x0, x20
0000000000049034	bl	__ZL16getOrCreateClassPK8TypeInfo
0000000000049038	adr	x8, #0x19288
000000000004903c	nop
0000000000049040	adr	x9, #0x6fc
0000000000049044	nop
0000000000049048	adr	x10, #0x670
000000000004904c	nop
0000000000049050	cmp	x20, x8
0000000000049054	csel	x1, x10, x9, eq
0000000000049058	ldr	x8, [x20, #0x60]
000000000004905c	str	x1, [x8]
0000000000049060	mov	x0, x19
0000000000049064	ldp	x29, x30, [sp, #0x60]
0000000000049068	ldp	x20, x19, [sp, #0x50]
000000000004906c	ldp	x22, x21, [sp, #0x40]
0000000000049070	ldp	x24, x23, [sp, #0x30]
0000000000049074	ldp	x26, x25, [sp, #0x20]
0000000000049078	ldp	x28, x27, [sp, #0x10]
000000000004907c	add	sp, sp, #0x70
0000000000049080	br	x1
__ZL16getOrCreateClassPK8TypeInfo:
0000000000049084	sub	sp, sp, #0xc0
0000000000049088	stp	x28, x27, [sp, #0x60]
000000000004908c	stp	x26, x25, [sp, #0x70]
0000000000049090	stp	x24, x23, [sp, #0x80]
0000000000049094	stp	x22, x21, [sp, #0x90]
0000000000049098	stp	x20, x19, [sp, #0xa0]
000000000004909c	stp	x29, x30, [sp, #0xb0]
00000000000490a0	add	x29, sp, #0xb0
00000000000490a4	ldr	x8, [x0, #0x60]
00000000000490a8	ldr	x21, [x8, #0x8]
00000000000490ac	cbnz	x21, 0x49550
00000000000490b0	mov	x20, x0
00000000000490b4	ldr	x8, [x8, #0x10]
00000000000490b8	cbz	x8, 0x490d4
00000000000490bc	ldr	x0, [x8, #0x28]
00000000000490c0	bl	0x55c84 ; symbol stub for: _objc_getClass
00000000000490c4	mov	x21, x0
00000000000490c8	ldr	x8, [x20, #0x60]
00000000000490cc	str	x0, [x8, #0x8]
00000000000490d0	b	0x49550
00000000000490d4	ldr	x0, [x20, #0x18]
00000000000490d8	bl	__ZL16getOrCreateClassPK8TypeInfo
00000000000490dc	mov	x23, x0
00000000000490e0	adr	x19, #0x4b434
00000000000490e4	nop
00000000000490e8	mov	x0, x19
00000000000490ec	bl	__ZN6kotlin8SpinLockILNS_24MutexThreadStateHandlingE1EE4lockEv
00000000000490f0	ldr	x8, [x20, #0x60]
00000000000490f4	ldr	x21, [x8, #0x8]
00000000000490f8	cbnz	x21, 0x4954c
00000000000490fc	adrp	x0, 49 ; 0x7a000
0000000000049100	add	x0, x0, #0x4e0
0000000000049104	ldr	x26, [x0]
0000000000049108	blr	x26
000000000004910c	ldr	x8, [x0]
0000000000049110	cbz	x8, 0x49130
0000000000049114	str	x8, [sp, #0x8]
0000000000049118	add	x8, x8, #0x138
000000000004911c	mov	w9, #0x1
0000000000049120	ldaxr	w24, [x8]
0000000000049124	stlxr	w10, w9, [x8]
0000000000049128	cbnz	w10, 0x49120
000000000004912c	b	0x49138
0000000000049130	str	xzr, [sp, #0x8]
0000000000049134	mov	w24, #0x1
0000000000049138	adrp	x8, 75 ; 0x94000
000000000004913c	ldr	w21, [x8, #0x52c]
0000000000049140	add	w9, w21, #0x1
0000000000049144	str	w9, [x8, #0x52c]
0000000000049148	mov	w8, #0x3
000000000004914c	strb	w8, [sp, #0x57]
0000000000049150	mov	w8, #0x4352
0000000000049154	movk	w8, #0x4b, lsl #16
0000000000049158	str	w8, [sp, #0x40]
000000000004915c	adr	x1, #0x141cc ; literal pool for: "_kobjcc"
0000000000049160	nop
0000000000049164	add	x0, sp, #0x40
0000000000049168	mov	w2, #0x7
000000000004916c	bl	__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE6appendEPKcm
0000000000049170	add	x19, sp, #0x10
0000000000049174	add	x8, sp, #0x10
0000000000049178	mov	x0, x21
000000000004917c	bl	0x559d8 ; symbol stub for: __ZNSt3__19to_stringEi
0000000000049180	ldrb	w8, [sp, #0x27]
0000000000049184	sxtb	w9, w8
0000000000049188	ldp	x10, x11, [sp, #0x10]
000000000004918c	cmp	w9, #0x0
0000000000049190	csel	x1, x10, x19, lt
0000000000049194	csel	x2, x11, x8, lt
0000000000049198	add	x0, sp, #0x40
000000000004919c	bl	__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEE6appendEPKcm
00000000000491a0	ldrsb	w8, [sp, #0x27]
00000000000491a4	tbz	w8, #0x1f, 0x491b0
00000000000491a8	ldr	x0, [sp, #0x10]
00000000000491ac	bl	0x55a20 ; symbol stub for: __ZdlPv
00000000000491b0	ldrsb	w8, [sp, #0x57]
00000000000491b4	ldr	x9, [sp, #0x40]
00000000000491b8	cmp	w8, #0x0
00000000000491bc	add	x8, sp, #0x40
00000000000491c0	csel	x1, x9, x8, lt
00000000000491c4	mov	x0, x23
00000000000491c8	mov	x2, #0x0
00000000000491cc	bl	0x55c3c ; symbol stub for: _objc_allocateClassPair
00000000000491d0	mov	x21, x0
00000000000491d4	cbz	x0, 0x49574
00000000000491d8	ldr	x22, [x20, #0x18]
00000000000491dc	ldr	x8, [x22, #0x60]
00000000000491e0	ldr	x23, [x8, #0x10]
00000000000491e4	str	x26, [sp]
00000000000491e8	cbz	x23, 0x49254
00000000000491ec	cbz	x23, 0x49238
00000000000491f0	ldr	w8, [x23, #0x58]
00000000000491f4	cmp	w8, #0x1
00000000000491f8	b.lt	0x49238
00000000000491fc	mov	x27, #0x0
0000000000049200	mov	x19, #0x0
0000000000049204	ldr	x25, [x23, #0x50]
0000000000049208	ldr	x0, [x25, x27]
000000000004920c	bl	0x55e40 ; symbol stub for: _sel_registerName
0000000000049210	mov	x1, x0
0000000000049214	add	x8, x25, x27
0000000000049218	ldp	x3, x2, [x8, #0x8]
000000000004921c	mov	x0, x21
0000000000049220	bl	0x55af8 ; symbol stub for: _class_addMethod
0000000000049224	add	x19, x19, #0x1
0000000000049228	ldrsw	x8, [x23, #0x58]
000000000004922c	add	x27, x27, #0x18
0000000000049230	cmp	x19, x8
0000000000049234	b.lt	0x49204
0000000000049238	ldr	x22, [x22, #0x18]
000000000004923c	cbz	x22, 0x49250
0000000000049240	ldr	x8, [x22, #0x60]
0000000000049244	ldr	x23, [x8, #0x10]
0000000000049248	cbnz	x23, 0x491f0
000000000004924c	b	0x49238
0000000000049250	ldr	x22, [x20, #0x18]
0000000000049254	ldr	x23, [x22, #0x30]
0000000000049258	ldrsw	x8, [x22, #0x38]
000000000004925c	movi.16b	v0, #0x0
0000000000049260	stp	q0, q0, [sp, #0x10]
0000000000049264	mov	w9, #0x3f800000
0000000000049268	str	w9, [sp, #0x30]
000000000004926c	cbz	w8, 0x49290
0000000000049270	lsl	x19, x8, #3
0000000000049274	ldr	x1, [x23]
0000000000049278	add	x0, sp, #0x10
000000000004927c	mov	x2, x23
0000000000049280	bl	__ZNSt3__112__hash_tableIPK8TypeInfoNS_4hashIS3_EENS_8equal_toIS3_EEN6kotlin11std_support9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_
0000000000049284	add	x23, x23, #0x8
0000000000049288	subs	x19, x19, #0x8
000000000004928c	b.ne	0x49274
0000000000049290	ldr	w8, [x20, #0x38]
0000000000049294	cmp	w8, #0x1
0000000000049298	b.lt	0x4941c
000000000004929c	mov	x27, #0x0
00000000000492a0	mov	x28, #0x2d69
00000000000492a4	movk	x28, #0xeb38, lsl #16
00000000000492a8	movk	x28, #0xea08, lsl #32
00000000000492ac	movk	x28, #0x9ddf, lsl #48
00000000000492b0	b	0x492c4
00000000000492b4	add	x27, x27, #0x1
00000000000492b8	ldrsw	x8, [x20, #0x38]
00000000000492bc	cmp	x27, x8
00000000000492c0	b.ge	0x4941c
00000000000492c4	ldr	x8, [x20, #0x30]
00000000000492c8	ldr	x23, [x8, x27, lsl #3]
00000000000492cc	ldr	x8, [x23, #0x60]
00000000000492d0	ldr	x22, [x8, #0x10]
00000000000492d4	cbz	x22, 0x492b4
00000000000492d8	ldr	w8, [x22, #0x58]
00000000000492dc	cmp	w8, #0x1
00000000000492e0	b.lt	0x49320
00000000000492e4	mov	x19, #0x0
00000000000492e8	mov	x25, #0x0
00000000000492ec	ldr	x26, [x22, #0x50]
00000000000492f0	ldr	x0, [x26, x19]
00000000000492f4	bl	0x55e40 ; symbol stub for: _sel_registerName
00000000000492f8	mov	x1, x0
00000000000492fc	add	x8, x26, x19
0000000000049300	ldp	x3, x2, [x8, #0x8]
0000000000049304	mov	x0, x21
0000000000049308	bl	0x55af8 ; symbol stub for: _class_addMethod
000000000004930c	add	x25, x25, #0x1
0000000000049310	ldrsw	x8, [x22, #0x58]
0000000000049314	add	x19, x19, #0x18
0000000000049318	cmp	x25, x8
000000000004931c	b.lt	0x492ec
0000000000049320	ldr	x8, [sp, #0x18]
0000000000049324	cbz	x8, 0x493ec
0000000000049328	lsr	x9, x23, #32
000000000004932c	lsl	w10, w23, #3
0000000000049330	add	x10, x10, #0x8
0000000000049334	eor	x10, x10, x9
0000000000049338	mul	x10, x10, x28
000000000004933c	eor	x9, x10, x9
0000000000049340	eor	x9, x9, x10, lsr #47
0000000000049344	mul	x9, x9, x28
0000000000049348	eor	x9, x9, x9, lsr #47
000000000004934c	mul	x9, x9, x28
0000000000049350	fmov	d0, x8
0000000000049354	cnt.8b	v0, v0
0000000000049358	uaddlv.8b	h0, v0
000000000004935c	fmov	w10, s0
0000000000049360	cmp	x10, #0x1
0000000000049364	b.hi	0x49374
0000000000049368	sub	x11, x8, #0x1
000000000004936c	and	x11, x11, x9
0000000000049370	b	0x49388
0000000000049374	mov	x11, x9
0000000000049378	cmp	x9, x8
000000000004937c	b.lo	0x49388
0000000000049380	udiv	x11, x9, x8
0000000000049384	msub	x11, x11, x8, x9
0000000000049388	ldr	x12, [sp, #0x10]
000000000004938c	ldr	x12, [x12, x11, lsl #3]
0000000000049390	cbz	x12, 0x493ec
0000000000049394	ldr	x12, [x12]
0000000000049398	cbz	x12, 0x493ec
000000000004939c	sub	x13, x8, #0x1
00000000000493a0	b	0x493b8
00000000000493a4	ldr	x14, [x12, #0x10]
00000000000493a8	cmp	x14, x23
00000000000493ac	b.eq	0x492b4
00000000000493b0	ldr	x12, [x12]
00000000000493b4	cbz	x12, 0x493ec
00000000000493b8	ldr	x14, [x12, #0x8]
00000000000493bc	cmp	x14, x9
00000000000493c0	b.eq	0x493a4
00000000000493c4	cmp	x10, #0x1
00000000000493c8	b.hi	0x493d4
00000000000493cc	and	x14, x14, x13
00000000000493d0	b	0x493e4
00000000000493d4	cmp	x14, x8
00000000000493d8	b.lo	0x493e4
00000000000493dc	udiv	x15, x14, x8
00000000000493e0	msub	x14, x15, x8, x14
00000000000493e4	cmp	x14, x11
00000000000493e8	b.eq	0x493b0
00000000000493ec	ldr	x0, [x22, #0x28]
00000000000493f0	bl	0x55c90 ; symbol stub for: _objc_getProtocol
00000000000493f4	mov	x23, x0
00000000000493f8	cbz	x0, 0x492b4
00000000000493fc	mov	x0, x21
0000000000049400	mov	x1, x23
0000000000049404	bl	0x55b04 ; symbol stub for: _class_addProtocol
0000000000049408	mov	x0, x21
000000000004940c	bl	0x55d14 ; symbol stub for: _object_getClass
0000000000049410	mov	x1, x23
0000000000049414	bl	0x55b04 ; symbol stub for: _class_addProtocol
0000000000049418	b	0x492b4
000000000004941c	mov	x0, x21
0000000000049420	bl	0x55cc0 ; symbol stub for: _objc_registerClassPair
0000000000049424	str	x20, [sp, #0x58]
0000000000049428	adrp	x0, 49 ; 0x7a000
000000000004942c	add	x0, x0, #0x4e0
0000000000049430	ldr	x8, [sp]
0000000000049434	blr	x8
0000000000049438	ldr	x23, [x0]
000000000004943c	cbz	x23, 0x49458
0000000000049440	add	x8, x23, #0x138
0000000000049444	mov	w9, #0x1
0000000000049448	ldaxr	w22, [x8]
000000000004944c	stlxr	w10, w9, [x8]
0000000000049450	cbnz	w10, 0x49448
0000000000049454	b	0x4945c
0000000000049458	mov	w22, #0x1
000000000004945c	nop
0000000000049460	ldr	x0, #0x2dc00 ; Objc class ref: _OBJC_CLASS_$_NSValue
0000000000049464	bl	0x55c24 ; symbol stub for: _objc_alloc
0000000000049468	nop
000000000004946c	ldr	x1, #0x2d874 ; Objc selector ref: initWithBytes:objCType:
0000000000049470	adr	x3, #0x13d72 ; literal pool for: "^v"
0000000000049474	nop
0000000000049478	add	x2, sp, #0x58
000000000004947c	bl	0x55ca8 ; Objc message: +[NSValue initWithBytes:objCType:]
0000000000049480	mov	x2, x0
0000000000049484	adr	x1, #0x4b08e
0000000000049488	nop
000000000004948c	mov	x0, x21
0000000000049490	mov	x3, #0x0
0000000000049494	bl	0x55cfc ; symbol stub for: _objc_setAssociatedObject
0000000000049498	cbz	x23, 0x494cc
000000000004949c	add	x0, x23, #0x138
00000000000494a0	ldaxr	w8, [x0]
00000000000494a4	stlxr	w9, w22, [x0]
00000000000494a8	cbnz	w9, 0x494a0
00000000000494ac	cbnz	w22, 0x494cc
00000000000494b0	cmp	w8, #0x1
00000000000494b4	b.ne	0x494cc
00000000000494b8	adr	x8, #0x4b051
00000000000494bc	nop
00000000000494c0	ldarb	w8, [x8]
00000000000494c4	tbz	w8, #0x0, 0x494cc
00000000000494c8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000494cc	ldr	x0, [sp, #0x20]
00000000000494d0	cbz	x0, 0x494e4
00000000000494d4	ldr	x19, [x0]
00000000000494d8	bl	0x55b7c ; symbol stub for: _free
00000000000494dc	mov	x0, x19
00000000000494e0	cbnz	x19, 0x494d4
00000000000494e4	ldr	x0, [sp, #0x10]
00000000000494e8	str	xzr, [sp, #0x10]
00000000000494ec	cbz	x0, 0x494f4
00000000000494f0	bl	0x55b7c ; symbol stub for: _free
00000000000494f4	ldrsb	w8, [sp, #0x57]
00000000000494f8	tbz	w8, #0x1f, 0x49504
00000000000494fc	ldr	x0, [sp, #0x40]
0000000000049500	bl	0x55b7c ; symbol stub for: _free
0000000000049504	ldr	x8, [sp, #0x8]
0000000000049508	cbz	x8, 0x4953c
000000000004950c	add	x0, x8, #0x138
0000000000049510	ldaxr	w8, [x0]
0000000000049514	stlxr	w9, w24, [x0]
0000000000049518	cbnz	w9, 0x49510
000000000004951c	cbnz	w24, 0x4953c
0000000000049520	cmp	w8, #0x1
0000000000049524	b.ne	0x4953c
0000000000049528	adr	x8, #0x4afe1
000000000004952c	nop
0000000000049530	ldarb	w8, [x8]
0000000000049534	tbz	w8, #0x0, 0x4953c
0000000000049538	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004953c	ldr	x8, [x20, #0x60]
0000000000049540	str	x21, [x8, #0x8]
0000000000049544	adr	x19, #0x4afd0
0000000000049548	nop
000000000004954c	stlrb	wzr, [x19]
0000000000049550	mov	x0, x21
0000000000049554	ldp	x29, x30, [sp, #0xb0]
0000000000049558	ldp	x20, x19, [sp, #0xa0]
000000000004955c	ldp	x22, x21, [sp, #0x90]
0000000000049560	ldp	x24, x23, [sp, #0x80]
0000000000049564	ldp	x26, x25, [sp, #0x70]
0000000000049568	ldp	x28, x27, [sp, #0x60]
000000000004956c	add	sp, sp, #0xc0
0000000000049570	ret
0000000000049574	adr	x2, #0x13c37 ; literal pool for: ""
0000000000049578	nop
000000000004957c	mov	w0, #0x0
0000000000049580	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
0000000000049584	brk	#0x1
0000000000049588	b	0x49610
000000000004958c	mov	x20, x0
0000000000049590	ldrsb	w8, [sp, #0x27]
0000000000049594	tbz	w8, #0x1f, 0x49644
0000000000049598	ldr	x0, [sp, #0x10]
000000000004959c	bl	0x55a20 ; symbol stub for: __ZdlPv
00000000000495a0	b	0x49644
00000000000495a4	b	0x49640
00000000000495a8	b	0x49640
00000000000495ac	b	0x49640
00000000000495b0	mov	x20, x0
00000000000495b4	cbz	x23, 0x49614
00000000000495b8	add	x0, x23, #0x138
00000000000495bc	ldaxr	w8, [x0]
00000000000495c0	stlxr	w9, w22, [x0]
00000000000495c4	cbnz	w9, 0x495bc
00000000000495c8	cbnz	w22, 0x49614
00000000000495cc	cmp	w8, #0x1
00000000000495d0	b.ne	0x49614
00000000000495d4	adr	x8, #0x4af35
00000000000495d8	nop
00000000000495dc	ldarb	w8, [x8]
00000000000495e0	tbz	w8, #0x0, 0x49614
00000000000495e4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000495e8	b	0x49614
00000000000495ec	mov	x20, x0
00000000000495f0	ldr	x0, [sp, #0x20]
00000000000495f4	cbz	x0, 0x4962c
00000000000495f8	ldr	x19, [x0]
00000000000495fc	bl	0x55b7c ; symbol stub for: _free
0000000000049600	mov	x0, x19
0000000000049604	cbnz	x19, 0x495f8
0000000000049608	b	0x4962c
000000000004960c	b	0x49610
0000000000049610	mov	x20, x0
0000000000049614	ldr	x0, [sp, #0x20]
0000000000049618	cbz	x0, 0x4962c
000000000004961c	ldr	x19, [x0]
0000000000049620	bl	0x55b7c ; symbol stub for: _free
0000000000049624	mov	x0, x19
0000000000049628	cbnz	x19, 0x4961c
000000000004962c	ldr	x0, [sp, #0x10]
0000000000049630	str	xzr, [sp, #0x10]
0000000000049634	cbz	x0, 0x49644
0000000000049638	bl	0x55b7c ; symbol stub for: _free
000000000004963c	b	0x49644
0000000000049640	mov	x20, x0
0000000000049644	ldrsb	w8, [sp, #0x57]
0000000000049648	tbz	w8, #0x1f, 0x49654
000000000004964c	ldr	x0, [sp, #0x40]
0000000000049650	bl	0x55b7c ; symbol stub for: _free
0000000000049654	ldr	x8, [sp, #0x8]
0000000000049658	cbnz	x8, 0x49670
000000000004965c	adr	x8, #0x4aeb8
0000000000049660	nop
0000000000049664	stlrb	wzr, [x8]
0000000000049668	mov	x0, x20
000000000004966c	bl	0x558ac ; symbol stub for: __Unwind_Resume
0000000000049670	ldr	x8, [sp, #0x8]
0000000000049674	add	x0, x8, #0x138
0000000000049678	ldaxr	w8, [x0]
000000000004967c	stlxr	w9, w24, [x0]
0000000000049680	cbnz	w9, 0x49678
0000000000049684	cbnz	w24, 0x4965c
0000000000049688	cmp	w8, #0x1
000000000004968c	b.ne	0x4965c
0000000000049690	adr	x8, #0x4ae79
0000000000049694	nop
0000000000049698	ldarb	w8, [x8]
000000000004969c	tbz	w8, #0x0, 0x4965c
00000000000496a0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000496a4	adr	x8, #0x4ae70
00000000000496a8	nop
00000000000496ac	stlrb	wzr, [x8]
00000000000496b0	mov	x0, x20
00000000000496b4	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_ObjCExport_convertUnitToRetained:
00000000000496b8	sub	sp, sp, #0x40
00000000000496bc	stp	x29, x30, [sp, #0x30]
00000000000496c0	add	x29, sp, #0x30
00000000000496c4	nop
00000000000496c8	ldr	x8, #0x16948 ; literal pool symbol address: __NSConcreteGlobalBlock
00000000000496cc	str	x8, [sp, #0x8]
00000000000496d0	nop
00000000000496d4	ldr	d0, 0x57fe0
00000000000496d8	str	d0, [sp, #0x10]
00000000000496dc	adr	x8, #0x84
00000000000496e0	nop
00000000000496e4	adr	x9, #0x2884c
00000000000496e8	nop
00000000000496ec	stp	x8, x9, [sp, #0x18]
00000000000496f0	str	x0, [sp, #0x28]
00000000000496f4	nop
00000000000496f8	ldr	x8, #0x4b0a0
00000000000496fc	cmn	x8, #0x1
0000000000049700	b.ne	0x49718
0000000000049704	nop
0000000000049708	ldr	x0, #0x4b098
000000000004970c	ldp	x29, x30, [sp, #0x30]
0000000000049710	add	sp, sp, #0x40
0000000000049714	b	0x55cd8 ; symbol stub for: _objc_retain
0000000000049718	adr	x0, #0x4b080
000000000004971c	nop
0000000000049720	add	x1, sp, #0x8
0000000000049724	bl	0x55b4c ; symbol stub for: _dispatch_once
0000000000049728	nop
000000000004972c	ldr	x0, #0x4b074
0000000000049730	ldp	x29, x30, [sp, #0x30]
0000000000049734	add	sp, sp, #0x40
0000000000049738	b	0x55cd8 ; symbol stub for: _objc_retain
__ZL29convertKotlinObjectToRetainedP9ObjHeader:
000000000004973c	mov	x2, x0
0000000000049740	ldr	x8, [x0]
0000000000049744	and	x8, x8, #0xfffffffffffffffc
0000000000049748	ldr	x8, [x8]
000000000004974c	ldr	x8, [x8, #0x60]
0000000000049750	ldr	x0, [x8, #0x8]
0000000000049754	nop
0000000000049758	ldr	x1, #0x2d508 ; Objc selector ref: createRetainedWrapper:
000000000004975c	b	0x55ca8 ; Objc message: -[x0 createRetainedWrapper:]
___Kotlin_ObjCExport_convertUnitToRetained_block_invoke:
0000000000049760	stp	x20, x19, [sp, #-0x20]!
0000000000049764	stp	x29, x30, [sp, #0x10]
0000000000049768	add	x29, sp, #0x10
000000000004976c	mov	x19, x0
0000000000049770	ldr	x8, [x0, #0x20]
0000000000049774	ldr	x8, [x8]
0000000000049778	and	x8, x8, #0xfffffffffffffffc
000000000004977c	ldr	x0, [x8]
0000000000049780	bl	__ZL16getOrCreateClassPK8TypeInfo
0000000000049784	ldr	x2, [x19, #0x20]
0000000000049788	nop
000000000004978c	ldr	x1, #0x2d4d4 ; Objc selector ref: createRetainedWrapper:
0000000000049790	bl	0x55ca8 ; Objc message: -[x0 createRetainedWrapper:]
0000000000049794	adrp	x8, 75 ; 0x94000
0000000000049798	str	x0, [x8, #0x7a0]
000000000004979c	ldp	x29, x30, [sp, #0x10]
00000000000497a0	ldp	x20, x19, [sp], #0x20
00000000000497a4	ret
_Kotlin_ObjCExport_CreateRetainedNSStringFromKString:
00000000000497a8	stp	x22, x21, [sp, #-0x30]!
00000000000497ac	stp	x20, x19, [sp, #0x10]
00000000000497b0	stp	x29, x30, [sp, #0x20]
00000000000497b4	add	x29, sp, #0x20
00000000000497b8	mov	x20, x0
00000000000497bc	add	x19, x0, #0x10
00000000000497c0	ldr	w8, [x0, #0x8]
00000000000497c4	lsl	x21, x8, #1
00000000000497c8	ldr	x22, [x0]
00000000000497cc	nop
00000000000497d0	ldr	x0, #0x2d880 ; Objc class ref: _OBJC_CLASS_$_NSString
00000000000497d4	bl	0x55c24 ; symbol stub for: _objc_alloc
00000000000497d8	tbnz	w22, #0x0, 0x49840
00000000000497dc	nop
00000000000497e0	ldr	x1, #0x2d4f8 ; Objc selector ref: initWithBytes:length:encoding:
00000000000497e4	mov	x2, x19
00000000000497e8	mov	x3, x21
00000000000497ec	mov	w4, #0x100
00000000000497f0	movk	w4, #0x9400, lsl #16
00000000000497f4	bl	0x55ca8 ; Objc message: +[NSString initWithBytes:length:encoding:]
00000000000497f8	mov	x19, x0
00000000000497fc	ldar	x8, [x20]
0000000000049800	and	x8, x8, #0xfffffffffffffffc
0000000000049804	ldr	x9, [x8]
0000000000049808	cmp	x9, x8
000000000004980c	csel	x0, xzr, x8, eq
0000000000049810	cbnz	x0, 0x4981c
0000000000049814	mov	x0, x20
0000000000049818	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004981c	add	x8, x0, #0x10
0000000000049820	ldaxr	x20, [x8]
0000000000049824	cbnz	x20, 0x4986c
0000000000049828	stlxr	w9, x19, [x8]
000000000004982c	cbnz	w9, 0x49820
0000000000049830	mov	w8, #0x1
0000000000049834	mov	x0, x19
0000000000049838	tbz	w8, #0x0, 0x4987c
000000000004983c	b	0x49884
0000000000049840	nop
0000000000049844	ldr	x1, #0x2d4a4 ; Objc selector ref: initWithBytesNoCopy:length:encoding:freeWhenDone:
0000000000049848	mov	x2, x19
000000000004984c	mov	x3, x21
0000000000049850	mov	w4, #0x100
0000000000049854	movk	w4, #0x9400, lsl #16
0000000000049858	mov	w5, #0x0
000000000004985c	ldp	x29, x30, [sp, #0x20]
0000000000049860	ldp	x20, x19, [sp, #0x10]
0000000000049864	ldp	x22, x21, [sp], #0x30
0000000000049868	b	0x55ca8 ; Objc message: -[x0 initWithBytesNoCopy:length:encoding:freeWhenDone:]
000000000004986c	mov	w8, #0x0
0000000000049870	clrex
0000000000049874	mov	x0, x19
0000000000049878	tbnz	w8, #0x0, 0x49884
000000000004987c	bl	0x55ccc ; symbol stub for: _objc_release
0000000000049880	mov	x0, x20
0000000000049884	ldp	x29, x30, [sp, #0x20]
0000000000049888	ldp	x20, x19, [sp, #0x10]
000000000004988c	ldp	x22, x21, [sp], #0x30
0000000000049890	b	0x55cd8 ; symbol stub for: _objc_retain
_ThrowException:
0000000000049894	stp	x29, x30, [sp, #-0x10]!
0000000000049898	mov	x29, sp
000000000004989c	bl	__ZN18ExceptionObjHolder5ThrowEP9ObjHeader
__ZN6kotlin25ProcessUnhandledExceptionEP9ObjHeader:
00000000000498a0	stp	x22, x21, [sp, #-0x30]!
00000000000498a4	stp	x20, x19, [sp, #0x10]
00000000000498a8	stp	x29, x30, [sp, #0x20]
00000000000498ac	add	x29, sp, #0x20
00000000000498b0	mov	x20, x0
00000000000498b4	adrp	x0, 49 ; 0x7a000
00000000000498b8	add	x0, x0, #0x4e0
00000000000498bc	ldr	x8, [x0]
00000000000498c0	blr	x8
00000000000498c4	ldr	x22, [x0]
00000000000498c8	add	x19, x22, #0x138
00000000000498cc	ldaxr	w21, [x19]
00000000000498d0	stlxr	w8, wzr, [x19]
00000000000498d4	cbnz	w8, 0x498cc
00000000000498d8	cmp	w21, #0x1
00000000000498dc	b.ne	0x498f8
00000000000498e0	adr	x8, #0x4ac29
00000000000498e4	nop
00000000000498e8	ldarb	w8, [x8]
00000000000498ec	tbz	w8, #0x0, 0x498f8
00000000000498f0	mov	x0, x19
00000000000498f4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000498f8	mov	x0, x20
00000000000498fc	bl	__ZN12_GLOBAL__N_125processUnhandledExceptionEP9ObjHeader
0000000000049900	cbz	x22, 0x4992c
0000000000049904	ldaxr	w8, [x19]
0000000000049908	stlxr	w9, w21, [x19]
000000000004990c	cbnz	w9, 0x49904
0000000000049910	cbnz	w21, 0x4992c
0000000000049914	cmp	w8, #0x1
0000000000049918	b.ne	0x4992c
000000000004991c	adr	x8, #0x4abed
0000000000049920	nop
0000000000049924	ldarb	w8, [x8]
0000000000049928	tbnz	w8, #0x0, 0x4993c
000000000004992c	ldp	x29, x30, [sp, #0x20]
0000000000049930	ldp	x20, x19, [sp, #0x10]
0000000000049934	ldp	x22, x21, [sp], #0x30
0000000000049938	ret
000000000004993c	mov	x0, x19
0000000000049940	ldp	x29, x30, [sp, #0x20]
0000000000049944	ldp	x20, x19, [sp, #0x10]
0000000000049948	ldp	x22, x21, [sp], #0x30
000000000004994c	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
__ZN6kotlin31TerminateWithUnhandledExceptionEP9ObjHeader:
0000000000049950	sub	sp, sp, #0x30
0000000000049954	stp	x20, x19, [sp, #0x10]
0000000000049958	stp	x29, x30, [sp, #0x20]
000000000004995c	add	x29, sp, #0x20
0000000000049960	mov	x19, x0
0000000000049964	adrp	x0, 49 ; 0x7a000
0000000000049968	add	x0, x0, #0x4e0
000000000004996c	ldr	x8, [x0]
0000000000049970	blr	x8
0000000000049974	ldr	x8, [x0]
0000000000049978	str	x8, [sp]
000000000004997c	mov	w9, #0x1
0000000000049980	strb	w9, [sp, #0xc]
0000000000049984	add	x0, x8, #0x138
0000000000049988	ldaxr	w20, [x0]
000000000004998c	stlxr	w8, wzr, [x0]
0000000000049990	cbnz	w8, 0x49988
0000000000049994	cmp	w20, #0x1
0000000000049998	b.ne	0x499b0
000000000004999c	adr	x8, #0x4ab6d
00000000000499a0	nop
00000000000499a4	ldarb	w8, [x8]
00000000000499a8	tbz	w8, #0x0, 0x499b0
00000000000499ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000499b0	str	w20, [sp, #0x8]
00000000000499b4	mov	x0, x19
00000000000499b8	bl	__ZN12_GLOBAL__N_131terminateWithUnhandledExceptionEP9ObjHeader
00000000000499bc	brk	#0x1
00000000000499c0	mov	x19, x0
00000000000499c4	mov	x0, sp
00000000000499c8	bl	__ZN6kotlin16ThreadStateGuardD1Ev
00000000000499cc	mov	x0, x19
00000000000499d0	bl	___clang_call_terminate
__ZN12_GLOBAL__N_121RunFinalizerHooksImplEP9ObjHeaderPK8TypeInfo:
00000000000499d4	sub	sp, sp, #0xc0
00000000000499d8	stp	x28, x27, [sp, #0x60]
00000000000499dc	stp	x26, x25, [sp, #0x70]
00000000000499e0	stp	x24, x23, [sp, #0x80]
00000000000499e4	stp	x22, x21, [sp, #0x90]
00000000000499e8	stp	x20, x19, [sp, #0xa0]
00000000000499ec	stp	x29, x30, [sp, #0xb0]
00000000000499f0	add	x29, sp, #0xb0
00000000000499f4	adr	x8, #0x18f7c
00000000000499f8	nop
00000000000499fc	cmp	x1, x8
0000000000049a00	b.eq	0x49a68
0000000000049a04	adr	x8, #0x18edc
0000000000049a08	nop
0000000000049a0c	cmp	x1, x8
0000000000049a10	b.ne	0x4a0e0
0000000000049a14	ldr	x19, [x0, #0x8]
0000000000049a18	cbz	x19, 0x4a0e0
0000000000049a1c	ldr	x8, [x19]
0000000000049a20	cbz	x8, 0x49a44
0000000000049a24	ldr	x1, [x19, #0x8]
0000000000049a28	adrp	x0, 49 ; 0x7a000
0000000000049a2c	add	x0, x0, #0x4e0
0000000000049a30	ldr	x8, [x0]
0000000000049a34	blr	x8
0000000000049a38	ldr	x8, [x0]
0000000000049a3c	add	x0, x8, #0x8
0000000000049a40	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000049a44	mov	x0, x19
0000000000049a48	ldp	x29, x30, [sp, #0xb0]
0000000000049a4c	ldp	x20, x19, [sp, #0xa0]
0000000000049a50	ldp	x22, x21, [sp, #0x90]
0000000000049a54	ldp	x24, x23, [sp, #0x80]
0000000000049a58	ldp	x26, x25, [sp, #0x70]
0000000000049a5c	ldp	x28, x27, [sp, #0x60]
0000000000049a60	add	sp, sp, #0xc0
0000000000049a64	b	0x55b7c ; symbol stub for: _free
0000000000049a68	adr	x8, #0x4aac8
0000000000049a6c	nop
0000000000049a70	ldar	w20, [x8]
0000000000049a74	cmn	w20, #0x2
0000000000049a78	b.eq	0x4a0e0
0000000000049a7c	ldr	x27, [x0, #0x8]
0000000000049a80	bl	__ZN12_GLOBAL__N_18theStateEv
0000000000049a84	mov	x19, x0
0000000000049a88	sxtw	x23, w20
0000000000049a8c	str	x0, [sp, #0x30]
0000000000049a90	mov	w8, #0x1
0000000000049a94	strb	w8, [sp, #0x38]
0000000000049a98	str	xzr, [sp, #0x40]
0000000000049a9c	adrp	x20, 49 ; 0x7a000
0000000000049aa0	add	x20, x20, #0x4e0
0000000000049aa4	ldr	x22, [x20]
0000000000049aa8	mov	x0, x20
0000000000049aac	blr	x22
0000000000049ab0	ldr	x25, [x0]
0000000000049ab4	add	x21, x25, #0x138
0000000000049ab8	ldaxr	w24, [x21]
0000000000049abc	stlxr	w9, w8, [x21]
0000000000049ac0	cbnz	w9, 0x49ab8
0000000000049ac4	mov	x0, x19
0000000000049ac8	bl	0x55dc8 ; symbol stub for: _pthread_mutex_lock
0000000000049acc	cbz	x25, 0x49b00
0000000000049ad0	ldaxr	w8, [x21]
0000000000049ad4	stlxr	w9, w24, [x21]
0000000000049ad8	cbnz	w9, 0x49ad0
0000000000049adc	cbnz	w24, 0x49b00
0000000000049ae0	cmp	w8, #0x1
0000000000049ae4	b.ne	0x49b00
0000000000049ae8	adr	x8, #0x4aa21
0000000000049aec	nop
0000000000049af0	ldarb	w8, [x8]
0000000000049af4	tbz	w8, #0x0, 0x49b00
0000000000049af8	mov	x0, x21
0000000000049afc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049b00	ldr	x8, [x19, #0xa0]
0000000000049b04	cbz	x8, 0x4a0d8
0000000000049b08	fmov	d0, x8
0000000000049b0c	cnt.8b	v0, v0
0000000000049b10	uaddlv.8b	h0, v0
0000000000049b14	fmov	w9, s0
0000000000049b18	cmp	x9, #0x1
0000000000049b1c	b.hi	0x49b2c
0000000000049b20	sub	x10, x8, #0x1
0000000000049b24	and	x10, x10, x23
0000000000049b28	b	0x49b40
0000000000049b2c	mov	x10, x23
0000000000049b30	cmp	x8, x23
0000000000049b34	b.hi	0x49b40
0000000000049b38	udiv	x10, x23, x8
0000000000049b3c	msub	x10, x10, x8, x23
0000000000049b40	ldr	x11, [x19, #0x98]
0000000000049b44	ldr	x11, [x11, x10, lsl #3]
0000000000049b48	cbz	x11, 0x4a0d8
0000000000049b4c	ldr	x11, [x11]
0000000000049b50	cbz	x11, 0x4a0d8
0000000000049b54	sub	x12, x8, #0x1
0000000000049b58	b	0x49b70
0000000000049b5c	ldr	w13, [x11, #0x10]
0000000000049b60	cmp	w13, w23
0000000000049b64	b.eq	0x49ba8
0000000000049b68	ldr	x11, [x11]
0000000000049b6c	cbz	x11, 0x4a0d8
0000000000049b70	ldr	x13, [x11, #0x8]
0000000000049b74	cmp	x13, x23
0000000000049b78	b.eq	0x49b5c
0000000000049b7c	cmp	x9, #0x1
0000000000049b80	b.hi	0x49b8c
0000000000049b84	and	x13, x13, x12
0000000000049b88	b	0x49b9c
0000000000049b8c	cmp	x13, x8
0000000000049b90	b.lo	0x49b9c
0000000000049b94	udiv	x14, x13, x8
0000000000049b98	msub	x13, x14, x8, x13
0000000000049b9c	cmp	x13, x10
0000000000049ba0	b.eq	0x49b68
0000000000049ba4	b	0x4a0d8
0000000000049ba8	ldr	x28, [x11, #0x18]
0000000000049bac	mov	x0, x20
0000000000049bb0	blr	x22
0000000000049bb4	ldr	x24, [x0]
0000000000049bb8	add	x19, x24, #0x138
0000000000049bbc	mov	w8, #0x1
0000000000049bc0	ldaxr	w26, [x19]
0000000000049bc4	stlxr	w9, w8, [x19]
0000000000049bc8	cbnz	w9, 0x49bc0
0000000000049bcc	add	x8, x28, #0x58
0000000000049bd0	str	x8, [sp, #0x48]
0000000000049bd4	mov	w9, #0x1
0000000000049bd8	strb	w9, [sp, #0x50]
0000000000049bdc	str	xzr, [sp, #0x58]
0000000000049be0	mov	x0, x20
0000000000049be4	blr	x22
0000000000049be8	ldr	x23, [x0]
0000000000049bec	add	x21, x23, #0x138
0000000000049bf0	ldaxr	w22, [x21]
0000000000049bf4	stlxr	w10, w9, [x21]
0000000000049bf8	cbnz	w10, 0x49bf0
0000000000049bfc	mov	x0, x8
0000000000049c00	bl	0x55dc8 ; symbol stub for: _pthread_mutex_lock
0000000000049c04	cbz	x23, 0x49c38
0000000000049c08	ldaxr	w8, [x21]
0000000000049c0c	stlxr	w9, w22, [x21]
0000000000049c10	cbnz	w9, 0x49c08
0000000000049c14	cbnz	w22, 0x49c38
0000000000049c18	cmp	w8, #0x1
0000000000049c1c	b.ne	0x49c38
0000000000049c20	adr	x8, #0x4a8e9
0000000000049c24	nop
0000000000049c28	ldarb	w8, [x8]
0000000000049c2c	tbz	w8, #0x0, 0x49c38
0000000000049c30	mov	x0, x21
0000000000049c34	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000049c38	str	x27, [sp, #0x10]
0000000000049c3c	ldp	x1, x27, [x28, #0x10]
0000000000049c40	subs	x8, x27, x1
0000000000049c44	asr	x25, x8, #3
0000000000049c48	mov	w8, #0x66
0000000000049c4c	mul	x8, x25, x8
0000000000049c50	sub	x8, x8, #0x1
0000000000049c54	csel	x9, xzr, x8, eq
0000000000049c58	ldp	x8, x10, [x28, #0x28]
0000000000049c5c	add	x10, x10, x8
0000000000049c60	cmp	x9, x10
0000000000049c64	b.ne	0x4a020
0000000000049c68	subs	x8, x8, #0x66
0000000000049c6c	b.lo	0x49cdc
0000000000049c70	str	x8, [x28, #0x28]
0000000000049c74	ldr	x22, [x1], #0x8
0000000000049c78	str	x1, [x28, #0x10]
0000000000049c7c	ldr	x8, [x28, #0x20]
0000000000049c80	cmp	x8, x27
0000000000049c84	b.ne	0x4a010
0000000000049c88	ldr	x9, [x28, #0x8]
0000000000049c8c	subs	x10, x1, x9
0000000000049c90	b.ls	0x49de0
0000000000049c94	asr	x9, x10, #3
0000000000049c98	add	x10, x9, #0x1
0000000000049c9c	add	x11, x9, #0x2
0000000000049ca0	cmp	x10, #0x0
0000000000049ca4	csinc	x9, x11, x9, lt
0000000000049ca8	asr	x9, x9, #1
0000000000049cac	neg	x23, x9
0000000000049cb0	sub	x20, x1, x9, lsl #3
0000000000049cb4	subs	x21, x8, x1
0000000000049cb8	b.eq	0x49ccc
0000000000049cbc	mov	x0, x20
0000000000049cc0	mov	x2, x21
0000000000049cc4	bl	0x55bdc ; symbol stub for: _memmove
0000000000049cc8	ldr	x1, [x28, #0x10]
0000000000049ccc	add	x27, x20, x21
0000000000049cd0	add	x8, x1, x23, lsl #3
0000000000049cd4	stp	x8, x27, [x28, #0x10]
0000000000049cd8	b	0x4a010
0000000000049cdc	ldr	x21, [x28, #0x20]
0000000000049ce0	ldr	x8, [x28, #0x8]
0000000000049ce4	sub	x8, x21, x8
0000000000049ce8	cmp	x25, x8, asr #3
0000000000049cec	b.hs	0x49d60
0000000000049cf0	mov	w0, #0x66
0000000000049cf4	mov	w1, #0x28
0000000000049cf8	bl	0x55aec ; symbol stub for: _calloc
0000000000049cfc	mov	x20, x0
0000000000049d00	cmp	x21, x27
0000000000049d04	b.ne	0x49dcc
0000000000049d08	ldp	x9, x1, [x28, #0x8]
0000000000049d0c	cmp	x1, x9
0000000000049d10	b.ne	0x4a1e4
0000000000049d14	ldp	x8, x10, [x28, #0x18]
0000000000049d18	cmp	x8, x10
0000000000049d1c	b.hs	0x4a100
0000000000049d20	sub	x9, x10, x8
0000000000049d24	asr	x9, x9, #3
0000000000049d28	add	x10, x9, #0x1
0000000000049d2c	add	x11, x9, #0x2
0000000000049d30	cmp	x10, #0x0
0000000000049d34	csinc	x9, x11, x9, lt
0000000000049d38	asr	x22, x9, #1
0000000000049d3c	add	x9, x8, x22, lsl #3
0000000000049d40	subs	x2, x8, x1
0000000000049d44	b.eq	0x4a1b4
0000000000049d48	sub	x21, x9, x2
0000000000049d4c	mov	x0, x21
0000000000049d50	bl	0x55bdc ; symbol stub for: _memmove
0000000000049d54	ldr	x8, [x28, #0x18]
0000000000049d58	mov	x1, x21
0000000000049d5c	b	0x4a1b8
0000000000049d60	str	x24, [sp, #0x8]
0000000000049d64	asr	x9, x8, #2
0000000000049d68	cmp	x8, #0x0
0000000000049d6c	csinc	x23, x9, xzr, ne
0000000000049d70	mov	x0, x23
0000000000049d74	mov	w1, #0x8
0000000000049d78	bl	0x55aec ; symbol stub for: _calloc
0000000000049d7c	mov	x20, x0
0000000000049d80	add	x21, x0, x25, lsl #3
0000000000049d84	add	x24, x0, x23, lsl #3
0000000000049d88	mov	w0, #0x66
0000000000049d8c	mov	w1, #0x28
0000000000049d90	bl	0x55aec ; symbol stub for: _calloc
0000000000049d94	mov	x22, x0
0000000000049d98	cmp	x25, x23
0000000000049d9c	b.ne	0x49e74
0000000000049da0	subs	x8, x21, x20
0000000000049da4	b.ls	0x49e38
0000000000049da8	asr	x8, x8, #3
0000000000049dac	add	x9, x8, #0x1
0000000000049db0	add	x10, x8, #0x2
0000000000049db4	cmp	x9, #0x0
0000000000049db8	csinc	x8, x10, x8, lt
0000000000049dbc	lsl	x8, x8, #2
0000000000049dc0	and	x8, x8, #0xfffffffffffffff8
0000000000049dc4	sub	x21, x21, x8
0000000000049dc8	b	0x49e74
0000000000049dcc	ldp	x9, x8, [x28, #0x18]
0000000000049dd0	cmp	x9, x8
0000000000049dd4	b.eq	0x49f98
0000000000049dd8	str	x20, [x9]
0000000000049ddc	b	0x4a014
0000000000049de0	subs	x8, x8, x9
0000000000049de4	asr	x8, x8, #2
0000000000049de8	csinc	x20, x8, xzr, ne
0000000000049dec	lsl	x8, x20, #1
0000000000049df0	and	x21, x8, #0xfffffffffffffff8
0000000000049df4	mov	x0, x20
0000000000049df8	mov	w1, #0x8
0000000000049dfc	bl	0x55aec ; symbol stub for: _calloc
0000000000049e00	add	x9, x0, x21
0000000000049e04	add	x10, x0, x20, lsl #3
0000000000049e08	ldp	x8, x11, [x28, #0x10]
0000000000049e0c	subs	x11, x11, x8
0000000000049e10	b.eq	0x49ff0
0000000000049e14	asr	x12, x11, #3
0000000000049e18	add	x27, x9, x11
0000000000049e1c	lsl	x11, x12, #3
0000000000049e20	mov	x12, x9
0000000000049e24	ldr	x13, [x8], #0x8
0000000000049e28	str	x13, [x12], #0x8
0000000000049e2c	subs	x11, x11, #0x8
0000000000049e30	b.ne	0x49e24
0000000000049e34	b	0x49ff4
0000000000049e38	subs	x8, x24, x20
0000000000049e3c	asr	x8, x8, #2
0000000000049e40	csinc	x24, x8, xzr, ne
0000000000049e44	lsl	x8, x24, #1
0000000000049e48	and	x21, x8, #0xfffffffffffffff8
0000000000049e4c	mov	x0, x24
0000000000049e50	mov	w1, #0x8
0000000000049e54	bl	0x55aec ; symbol stub for: _calloc
0000000000049e58	mov	x23, x0
0000000000049e5c	add	x21, x0, x21
0000000000049e60	add	x24, x0, x24, lsl #3
0000000000049e64	cbz	x20, 0x49e70
0000000000049e68	mov	x0, x20
0000000000049e6c	bl	0x55b7c ; symbol stub for: _free
0000000000049e70	mov	x20, x23
0000000000049e74	str	x22, [x21]
0000000000049e78	add	x27, x21, #0x8
0000000000049e7c	ldr	x25, [x28, #0x18]
0000000000049e80	b	0x49e94
0000000000049e84	mov	x22, x21
0000000000049e88	ldr	x8, [x25]
0000000000049e8c	stur	x8, [x22, #-0x8]
0000000000049e90	sub	x21, x21, #0x8
0000000000049e94	ldr	x8, [x28, #0x10]
0000000000049e98	cmp	x25, x8
0000000000049e9c	b.eq	0x49f78
0000000000049ea0	sub	x25, x25, #0x8
0000000000049ea4	cmp	x21, x20
0000000000049ea8	b.ne	0x49e84
0000000000049eac	cmp	x27, x24
0000000000049eb0	b.hs	0x49f00
0000000000049eb4	sub	x8, x24, x27
0000000000049eb8	asr	x8, x8, #3
0000000000049ebc	add	x9, x8, #0x1
0000000000049ec0	add	x10, x8, #0x2
0000000000049ec4	cmp	x9, #0x0
0000000000049ec8	csinc	x8, x10, x8, lt
0000000000049ecc	lsl	x8, x8, #2
0000000000049ed0	and	x8, x8, #0xfffffffffffffff8
0000000000049ed4	add	x23, x27, x8
0000000000049ed8	mov	x22, x23
0000000000049edc	subs	x2, x27, x21
0000000000049ee0	b.eq	0x49ef4
0000000000049ee4	sub	x22, x23, x2
0000000000049ee8	mov	x0, x22
0000000000049eec	mov	x1, x21
0000000000049ef0	bl	0x55bdc ; symbol stub for: _memmove
0000000000049ef4	mov	x21, x22
0000000000049ef8	mov	x27, x23
0000000000049efc	b	0x49e88
0000000000049f00	subs	x8, x24, x20
0000000000049f04	asr	x8, x8, #2
0000000000049f08	csinc	x24, x8, xzr, ne
0000000000049f0c	lsl	x8, x24, #1
0000000000049f10	add	x8, x8, #0x6
0000000000049f14	and	x22, x8, #0xfffffffffffffff8
0000000000049f18	mov	x0, x24
0000000000049f1c	mov	w1, #0x8
0000000000049f20	bl	0x55aec ; symbol stub for: _calloc
0000000000049f24	mov	x23, x0
0000000000049f28	add	x22, x0, x22
0000000000049f2c	subs	x8, x27, x21
0000000000049f30	b.eq	0x49f58
0000000000049f34	asr	x9, x8, #3
0000000000049f38	add	x27, x22, x8
0000000000049f3c	lsl	x8, x9, #3
0000000000049f40	mov	x9, x22
0000000000049f44	ldr	x10, [x21], #0x8
0000000000049f48	str	x10, [x9], #0x8
0000000000049f4c	subs	x8, x8, #0x8
0000000000049f50	b.ne	0x49f44
0000000000049f54	b	0x49f5c
0000000000049f58	mov	x27, x22
0000000000049f5c	add	x24, x23, x24, lsl #3
0000000000049f60	cbz	x20, 0x49f6c
0000000000049f64	mov	x0, x20
0000000000049f68	bl	0x55b7c ; symbol stub for: _free
0000000000049f6c	mov	x20, x23
0000000000049f70	mov	x21, x22
0000000000049f74	b	0x49e88
0000000000049f78	ldr	x0, [x28, #0x8]
0000000000049f7c	stp	x20, x21, [x28, #0x8]
0000000000049f80	stp	x27, x24, [x28, #0x18]
0000000000049f84	cbz	x0, 0x49f90
0000000000049f88	bl	0x55b7c ; symbol stub for: _free
0000000000049f8c	ldr	x27, [x28, #0x18]
0000000000049f90	ldr	x24, [sp, #0x8]
0000000000049f94	b	0x4a020
0000000000049f98	ldp	x10, x1, [x28, #0x8]
0000000000049f9c	subs	x11, x1, x10
0000000000049fa0	b.ls	0x4a15c
0000000000049fa4	asr	x8, x11, #3
0000000000049fa8	add	x10, x8, #0x1
0000000000049fac	add	x11, x8, #0x2
0000000000049fb0	cmp	x10, #0x0
0000000000049fb4	csinc	x8, x11, x8, lt
0000000000049fb8	asr	x8, x8, #1
0000000000049fbc	neg	x23, x8
0000000000049fc0	sub	x21, x1, x8, lsl #3
0000000000049fc4	subs	x22, x9, x1
0000000000049fc8	b.eq	0x49fdc
0000000000049fcc	mov	x0, x21
0000000000049fd0	mov	x2, x22
0000000000049fd4	bl	0x55bdc ; symbol stub for: _memmove
0000000000049fd8	ldr	x1, [x28, #0x10]
0000000000049fdc	add	x9, x21, x22
0000000000049fe0	add	x8, x1, x23, lsl #3
0000000000049fe4	stp	x8, x9, [x28, #0x10]
0000000000049fe8	str	x20, [x9]
0000000000049fec	b	0x4a014
0000000000049ff0	mov	x27, x9
0000000000049ff4	ldr	x8, [x28, #0x8]
0000000000049ff8	stp	x0, x9, [x28, #0x8]
0000000000049ffc	stp	x27, x10, [x28, #0x18]
000000000004a000	cbz	x8, 0x4a010
000000000004a004	mov	x0, x8
000000000004a008	bl	0x55b7c ; symbol stub for: _free
000000000004a00c	ldr	x27, [x28, #0x18]
000000000004a010	str	x22, [x27]
000000000004a014	ldr	x8, [x28, #0x18]
000000000004a018	add	x27, x8, #0x8
000000000004a01c	str	x27, [x28, #0x18]
000000000004a020	ldr	x8, [x28, #0x10]
000000000004a024	cmp	x27, x8
000000000004a028	b.eq	0x4a064
000000000004a02c	ldp	x9, x10, [x28, #0x28]
000000000004a030	add	x9, x9, x10
000000000004a034	mov	x10, #0xa0a1
000000000004a038	movk	x10, #0xa0a0, lsl #16
000000000004a03c	movk	x10, #0xa0a0, lsl #32
000000000004a040	movk	x10, #0xa0a0, lsl #48
000000000004a044	umulh	x10, x9, x10
000000000004a048	lsr	x10, x10, #6
000000000004a04c	ldr	x8, [x8, x10, lsl #3]
000000000004a050	mov	x11, #-0x66
000000000004a054	madd	x9, x10, x11, x9
000000000004a058	mov	w10, #0x28
000000000004a05c	madd	x8, x9, x10, x8
000000000004a060	b	0x4a068
000000000004a064	mov	x8, #0x0
000000000004a068	ldr	x10, [sp, #0x10]
000000000004a06c	mov	w9, #0x3
000000000004a070	str	w9, [x8]
000000000004a074	str	x10, [x8, #0x8]
000000000004a078	ldur	q0, [sp, #0x18]
000000000004a07c	str	q0, [x8, #0x10]
000000000004a080	ldr	x9, [sp, #0x28]
000000000004a084	str	x9, [x8, #0x20]
000000000004a088	ldr	x8, [x28, #0x30]
000000000004a08c	add	x8, x8, #0x1
000000000004a090	str	x8, [x28, #0x30]
000000000004a094	add	x0, x28, #0x98
000000000004a098	bl	0x55d68 ; symbol stub for: _pthread_cond_signal
000000000004a09c	add	x0, sp, #0x48
000000000004a0a0	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000004a0a4	cbz	x24, 0x4a0d8
000000000004a0a8	ldaxr	w8, [x19]
000000000004a0ac	stlxr	w9, w26, [x19]
000000000004a0b0	cbnz	w9, 0x4a0a8
000000000004a0b4	cbnz	w26, 0x4a0d8
000000000004a0b8	cmp	w8, #0x1
000000000004a0bc	b.ne	0x4a0d8
000000000004a0c0	adr	x8, #0x4a449
000000000004a0c4	nop
000000000004a0c8	ldarb	w8, [x8]
000000000004a0cc	tbz	w8, #0x0, 0x4a0d8
000000000004a0d0	mov	x0, x19
000000000004a0d4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a0d8	add	x0, sp, #0x30
000000000004a0dc	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000004a0e0	ldp	x29, x30, [sp, #0xb0]
000000000004a0e4	ldp	x20, x19, [sp, #0xa0]
000000000004a0e8	ldp	x22, x21, [sp, #0x90]
000000000004a0ec	ldp	x24, x23, [sp, #0x80]
000000000004a0f0	ldp	x26, x25, [sp, #0x70]
000000000004a0f4	ldp	x28, x27, [sp, #0x60]
000000000004a0f8	add	sp, sp, #0xc0
000000000004a0fc	ret
000000000004a100	subs	x8, x10, x9
000000000004a104	asr	x8, x8, #2
000000000004a108	csinc	x21, x8, xzr, ne
000000000004a10c	lsl	x8, x21, #1
000000000004a110	add	x8, x8, #0x6
000000000004a114	and	x22, x8, #0xfffffffffffffff8
000000000004a118	mov	x0, x21
000000000004a11c	mov	w1, #0x8
000000000004a120	bl	0x55aec ; symbol stub for: _calloc
000000000004a124	add	x1, x0, x22
000000000004a128	add	x9, x0, x21, lsl #3
000000000004a12c	ldp	x8, x10, [x28, #0x10]
000000000004a130	subs	x10, x10, x8
000000000004a134	b.eq	0x4a1c4
000000000004a138	asr	x11, x10, #3
000000000004a13c	add	x10, x1, x10
000000000004a140	lsl	x11, x11, #3
000000000004a144	mov	x12, x1
000000000004a148	ldr	x13, [x8], #0x8
000000000004a14c	str	x13, [x12], #0x8
000000000004a150	subs	x11, x11, #0x8
000000000004a154	b.ne	0x4a148
000000000004a158	b	0x4a1c8
000000000004a15c	subs	x8, x8, x10
000000000004a160	asr	x8, x8, #2
000000000004a164	csinc	x21, x8, xzr, ne
000000000004a168	lsl	x8, x21, #1
000000000004a16c	and	x22, x8, #0xfffffffffffffff8
000000000004a170	mov	x0, x21
000000000004a174	mov	w1, #0x8
000000000004a178	bl	0x55aec ; symbol stub for: _calloc
000000000004a17c	add	x10, x0, x22
000000000004a180	add	x11, x0, x21, lsl #3
000000000004a184	ldp	x8, x9, [x28, #0x10]
000000000004a188	subs	x9, x9, x8
000000000004a18c	b.eq	0x4a2c0
000000000004a190	asr	x12, x9, #3
000000000004a194	add	x9, x10, x9
000000000004a198	lsl	x12, x12, #3
000000000004a19c	mov	x13, x10
000000000004a1a0	ldr	x14, [x8], #0x8
000000000004a1a4	str	x14, [x13], #0x8
000000000004a1a8	subs	x12, x12, #0x8
000000000004a1ac	b.ne	0x4a1a0
000000000004a1b0	b	0x4a2c4
000000000004a1b4	mov	x1, x9
000000000004a1b8	add	x8, x8, x22, lsl #3
000000000004a1bc	stp	x1, x8, [x28, #0x10]
000000000004a1c0	b	0x4a1e4
000000000004a1c4	mov	x10, x1
000000000004a1c8	ldr	x8, [x28, #0x8]
000000000004a1cc	stp	x0, x1, [x28, #0x8]
000000000004a1d0	stp	x10, x9, [x28, #0x18]
000000000004a1d4	cbz	x8, 0x4a1e4
000000000004a1d8	mov	x0, x8
000000000004a1dc	bl	0x55b7c ; symbol stub for: _free
000000000004a1e0	ldr	x1, [x28, #0x10]
000000000004a1e4	stur	x20, [x1, #-0x8]
000000000004a1e8	ldp	x1, x9, [x28, #0x10]
000000000004a1ec	sub	x8, x1, #0x8
000000000004a1f0	str	x8, [x28, #0x10]
000000000004a1f4	ldur	x22, [x1, #-0x8]
000000000004a1f8	str	x1, [x28, #0x10]
000000000004a1fc	ldr	x8, [x28, #0x20]
000000000004a200	cmp	x9, x8
000000000004a204	b.eq	0x4a210
000000000004a208	str	x22, [x9]
000000000004a20c	b	0x4a014
000000000004a210	ldr	x10, [x28, #0x8]
000000000004a214	subs	x11, x1, x10
000000000004a218	b.ls	0x4a268
000000000004a21c	asr	x8, x11, #3
000000000004a220	add	x10, x8, #0x1
000000000004a224	add	x11, x8, #0x2
000000000004a228	cmp	x10, #0x0
000000000004a22c	csinc	x8, x11, x8, lt
000000000004a230	asr	x8, x8, #1
000000000004a234	neg	x23, x8
000000000004a238	sub	x20, x1, x8, lsl #3
000000000004a23c	subs	x21, x9, x1
000000000004a240	b.eq	0x4a254
000000000004a244	mov	x0, x20
000000000004a248	mov	x2, x21
000000000004a24c	bl	0x55bdc ; symbol stub for: _memmove
000000000004a250	ldr	x1, [x28, #0x10]
000000000004a254	add	x9, x20, x21
000000000004a258	add	x8, x1, x23, lsl #3
000000000004a25c	stp	x8, x9, [x28, #0x10]
000000000004a260	str	x22, [x9]
000000000004a264	b	0x4a014
000000000004a268	subs	x8, x8, x10
000000000004a26c	asr	x8, x8, #2
000000000004a270	csinc	x20, x8, xzr, ne
000000000004a274	lsl	x8, x20, #1
000000000004a278	and	x21, x8, #0xfffffffffffffff8
000000000004a27c	mov	x0, x20
000000000004a280	mov	w1, #0x8
000000000004a284	bl	0x55aec ; symbol stub for: _calloc
000000000004a288	add	x10, x0, x21
000000000004a28c	add	x11, x0, x20, lsl #3
000000000004a290	ldp	x8, x9, [x28, #0x10]
000000000004a294	subs	x9, x9, x8
000000000004a298	b.eq	0x4a2e4
000000000004a29c	asr	x12, x9, #3
000000000004a2a0	add	x9, x10, x9
000000000004a2a4	lsl	x12, x12, #3
000000000004a2a8	mov	x13, x10
000000000004a2ac	ldr	x14, [x8], #0x8
000000000004a2b0	str	x14, [x13], #0x8
000000000004a2b4	subs	x12, x12, #0x8
000000000004a2b8	b.ne	0x4a2ac
000000000004a2bc	b	0x4a2e8
000000000004a2c0	mov	x9, x10
000000000004a2c4	ldr	x8, [x28, #0x8]
000000000004a2c8	stp	x0, x10, [x28, #0x8]
000000000004a2cc	stp	x9, x11, [x28, #0x18]
000000000004a2d0	cbz	x8, 0x49dd8
000000000004a2d4	mov	x0, x8
000000000004a2d8	bl	0x55b7c ; symbol stub for: _free
000000000004a2dc	ldr	x9, [x28, #0x18]
000000000004a2e0	b	0x49dd8
000000000004a2e4	mov	x9, x10
000000000004a2e8	ldr	x8, [x28, #0x8]
000000000004a2ec	stp	x0, x10, [x28, #0x8]
000000000004a2f0	stp	x9, x11, [x28, #0x18]
000000000004a2f4	cbz	x8, 0x4a208
000000000004a2f8	mov	x0, x8
000000000004a2fc	bl	0x55b7c ; symbol stub for: _free
000000000004a300	ldr	x9, [x28, #0x18]
000000000004a304	b	0x4a208
000000000004a308	mov	x20, x0
000000000004a30c	add	x0, sp, #0x48
000000000004a310	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000004a314	b	0x4a350
000000000004a318	mov	x20, x0
000000000004a31c	cbz	x23, 0x4a350
000000000004a320	ldaxr	w8, [x21]
000000000004a324	stlxr	w9, w22, [x21]
000000000004a328	cbnz	w9, 0x4a320
000000000004a32c	cbnz	w22, 0x4a350
000000000004a330	cmp	w8, #0x1
000000000004a334	b.ne	0x4a350
000000000004a338	adr	x8, #0x4a1d1
000000000004a33c	nop
000000000004a340	ldarb	w8, [x8]
000000000004a344	tbz	w8, #0x0, 0x4a350
000000000004a348	mov	x0, x21
000000000004a34c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a350	cbnz	x24, 0x4a360
000000000004a354	add	x0, sp, #0x30
000000000004a358	bl	__ZN12_GLOBAL__N_16LockerD1Ev
000000000004a35c	b	0x4a3d4
000000000004a360	ldaxr	w8, [x19]
000000000004a364	stlxr	w9, w26, [x19]
000000000004a368	cbnz	w9, 0x4a360
000000000004a36c	cbnz	w26, 0x4a354
000000000004a370	cmp	w8, #0x1
000000000004a374	b.ne	0x4a354
000000000004a378	adr	x8, #0x4a191
000000000004a37c	nop
000000000004a380	ldarb	w8, [x8]
000000000004a384	tbz	w8, #0x0, 0x4a354
000000000004a388	mov	x0, x19
000000000004a38c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a390	b	0x4a354
000000000004a394	mov	x20, x0
000000000004a398	cbz	x25, 0x4a3d4
000000000004a39c	ldaxr	w8, [x21]
000000000004a3a0	stlxr	w9, w24, [x21]
000000000004a3a4	cbnz	w9, 0x4a39c
000000000004a3a8	cbnz	w24, 0x4a3d4
000000000004a3ac	cmp	w8, #0x1
000000000004a3b0	b.ne	0x4a3d4
000000000004a3b4	adr	x8, #0x4a155
000000000004a3b8	nop
000000000004a3bc	ldarb	w8, [x8]
000000000004a3c0	tbz	w8, #0x0, 0x4a3d4
000000000004a3c4	mov	x0, x21
000000000004a3c8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a3cc	b	0x4a3d4
000000000004a3d0	mov	x20, x0
000000000004a3d4	mov	x0, x20
000000000004a3d8	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000004a3dc	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
_Kotlin_ObjCExport_AllocInstanceWithAssociatedObject:
000000000004a3e0	stp	x22, x21, [sp, #-0x30]!
000000000004a3e4	stp	x20, x19, [sp, #0x10]
000000000004a3e8	stp	x29, x30, [sp, #0x20]
000000000004a3ec	add	x29, sp, #0x20
000000000004a3f0	mov	x21, x2
000000000004a3f4	mov	x19, x1
000000000004a3f8	mov	x22, x0
000000000004a3fc	adrp	x0, 48 ; 0x7a000
000000000004a400	add	x0, x0, #0x4e0
000000000004a404	ldr	x8, [x0]
000000000004a408	blr	x8
000000000004a40c	ldr	x8, [x0]
000000000004a410	ldr	x8, [x8, #0x118]
000000000004a414	ldrsw	x9, [x22, #0x14]
000000000004a418	add	x9, x9, #0xf
000000000004a41c	and	x1, x9, #0xfffffffffffffff8
000000000004a420	add	x0, x8, #0x70
000000000004a424	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004a428	mov	x20, x0
000000000004a42c	str	x22, [x20, #0x10]!
000000000004a430	stur	xzr, [x20, #-0x8]
000000000004a434	str	x20, [x21]
000000000004a438	ldar	x8, [x20]
000000000004a43c	and	x8, x8, #0xfffffffffffffffc
000000000004a440	ldr	x9, [x8]
000000000004a444	cmp	x9, x8
000000000004a448	csel	x0, xzr, x8, eq
000000000004a44c	cbnz	x0, 0x4a458
000000000004a450	mov	x0, x20
000000000004a454	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004a458	add	x8, x0, #0x10
000000000004a45c	stlr	x19, [x8]
000000000004a460	mov	x0, x20
000000000004a464	ldp	x29, x30, [sp, #0x20]
000000000004a468	ldp	x20, x19, [sp, #0x10]
000000000004a46c	ldp	x22, x21, [sp], #0x30
000000000004a470	ret
_Kotlin_ObjCExport_refToRetainedObjC:
000000000004a474	cbz	x0, 0x4a4c0
000000000004a478	ldar	x8, [x0]
000000000004a47c	and	x8, x8, #0xfffffffffffffffc
000000000004a480	ldr	x9, [x8]
000000000004a484	cmp	x8, #0x0
000000000004a488	ccmp	x9, x8, #0x4, ne
000000000004a48c	b.eq	0x4a4a4
000000000004a490	add	x8, x8, #0x10
000000000004a494	ldar	x8, [x8]
000000000004a498	cbz	x8, 0x4a4a4
000000000004a49c	mov	x0, x8
000000000004a4a0	b	0x55cd8 ; symbol stub for: _objc_retain
000000000004a4a4	ldr	x8, [x0]
000000000004a4a8	and	x8, x8, #0xfffffffffffffffc
000000000004a4ac	ldr	x8, [x8]
000000000004a4b0	ldr	x8, [x8, #0x60]
000000000004a4b4	ldr	x1, [x8]
000000000004a4b8	cbz	x1, 0x4a4c4
000000000004a4bc	br	x1
000000000004a4c0	ret
000000000004a4c4	b	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
_Kotlin_ObjCExport_refToLocalObjC:
000000000004a4c8	stp	x29, x30, [sp, #-0x10]!
000000000004a4cc	mov	x29, sp
000000000004a4d0	cbz	x0, 0x4a528
000000000004a4d4	ldar	x8, [x0]
000000000004a4d8	and	x8, x8, #0xfffffffffffffffc
000000000004a4dc	ldr	x9, [x8]
000000000004a4e0	cmp	x8, #0x0
000000000004a4e4	ccmp	x9, x8, #0x4, ne
000000000004a4e8	b.eq	0x4a504
000000000004a4ec	add	x8, x8, #0x10
000000000004a4f0	ldar	x8, [x8]
000000000004a4f4	cbz	x8, 0x4a504
000000000004a4f8	mov	x0, x8
000000000004a4fc	ldp	x29, x30, [sp], #0x10
000000000004a500	ret
000000000004a504	ldr	x8, [x0]
000000000004a508	and	x8, x8, #0xfffffffffffffffc
000000000004a50c	ldr	x8, [x8]
000000000004a510	ldr	x8, [x8, #0x60]
000000000004a514	ldr	x8, [x8]
000000000004a518	cbz	x8, 0x4a538
000000000004a51c	blr	x8
000000000004a520	ldp	x29, x30, [sp], #0x10
000000000004a524	b	0x55c48 ; symbol stub for: _objc_autorelease
000000000004a528	mov	x8, #0x0
000000000004a52c	mov	x0, x8
000000000004a530	ldp	x29, x30, [sp], #0x10
000000000004a534	ret
000000000004a538	bl	__ZL44Kotlin_ObjCExport_refToRetainedObjC_slowpathP9ObjHeader
000000000004a53c	ldp	x29, x30, [sp], #0x10
000000000004a540	b	0x55c48 ; symbol stub for: _objc_autorelease
_Kotlin_ObjCExport_AbstractMethodCalled:
000000000004a544	sub	sp, sp, #0x40
000000000004a548	stp	x22, x21, [sp, #0x10]
000000000004a54c	stp	x20, x19, [sp, #0x20]
000000000004a550	stp	x29, x30, [sp, #0x30]
000000000004a554	add	x29, sp, #0x30
000000000004a558	mov	x19, x1
000000000004a55c	nop
000000000004a560	ldr	x20, #0x2caf8 ; Objc class ref: _OBJC_CLASS_$_NSException
000000000004a564	nop
000000000004a568	ldr	x8, #0x15aa0 ; literal pool symbol address: _NSGenericException
000000000004a56c	ldr	x21, [x8]
000000000004a570	bl	0x55d14 ; symbol stub for: _object_getClass
000000000004a574	bl	0x55b34 ; symbol stub for: _class_getName
000000000004a578	mov	x22, x0
000000000004a57c	mov	x0, x19
000000000004a580	bl	0x55e34 ; symbol stub for: _sel_getName
000000000004a584	nop
000000000004a588	ldr	x1, #0x2c888 ; Objc selector ref: raise:format:
000000000004a58c	stp	x22, x0, [sp]
000000000004a590	adr	x3, #0x27ae0 ; Objc cfstring ref: @"bad cfstring ref"
000000000004a594	nop
000000000004a598	mov	x0, x20
000000000004a59c	mov	x2, x21
000000000004a5a0	bl	0x55ca8 ; Objc message: +[NSException raise:format:]
000000000004a5a4	ldp	x29, x30, [sp, #0x30]
000000000004a5a8	ldp	x20, x19, [sp, #0x20]
000000000004a5ac	ldp	x22, x21, [sp, #0x10]
000000000004a5b0	add	sp, sp, #0x40
000000000004a5b4	ret
_Kotlin_NSSetAsKSet_contains:
000000000004a5b8	stp	x22, x21, [sp, #-0x30]!
000000000004a5bc	stp	x20, x19, [sp, #0x10]
000000000004a5c0	stp	x29, x30, [sp, #0x20]
000000000004a5c4	add	x29, sp, #0x20
000000000004a5c8	ldar	x8, [x0]
000000000004a5cc	and	x8, x8, #0xfffffffffffffffc
000000000004a5d0	ldr	x9, [x8]
000000000004a5d4	cmp	x8, #0x0
000000000004a5d8	ccmp	x9, x8, #0x4, ne
000000000004a5dc	b.ne	0x4a5f4
000000000004a5e0	mov	x20, #0x0
000000000004a5e4	cbz	x1, 0x4a600
000000000004a5e8	mov	x0, x1
000000000004a5ec	bl	_Kotlin_ObjCExport_refToObjC
000000000004a5f0	b	0x4a614
000000000004a5f4	add	x8, x8, #0x10
000000000004a5f8	ldar	x20, [x8]
000000000004a5fc	cbnz	x1, 0x4a5e8
000000000004a600	nop
000000000004a604	ldr	x0, #0x2ca74 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004a608	nop
000000000004a60c	ldr	x1, #0x2c7c4 ; Objc selector ref: null
000000000004a610	bl	0x55ca8 ; Objc message: +[NSNull null]
000000000004a614	mov	x2, x0
000000000004a618	adrp	x0, 48 ; 0x7a000
000000000004a61c	add	x0, x0, #0x4e0
000000000004a620	ldr	x8, [x0]
000000000004a624	blr	x8
000000000004a628	ldr	x22, [x0]
000000000004a62c	add	x19, x22, #0x138
000000000004a630	mov	w8, #0x1
000000000004a634	ldaxr	w21, [x19]
000000000004a638	stlxr	w9, w8, [x19]
000000000004a63c	cbnz	w9, 0x4a634
000000000004a640	nop
000000000004a644	ldr	x1, #0x2c5e4 ; Objc selector ref: containsObject:
000000000004a648	mov	x0, x20
000000000004a64c	bl	0x55ca8 ; Objc message: -[x0 containsObject:]
000000000004a650	mov	x20, x0
000000000004a654	cbz	x22, 0x4a688
000000000004a658	ldaxr	w8, [x19]
000000000004a65c	stlxr	w9, w21, [x19]
000000000004a660	cbnz	w9, 0x4a658
000000000004a664	cbnz	w21, 0x4a688
000000000004a668	cmp	w8, #0x1
000000000004a66c	b.ne	0x4a688
000000000004a670	adr	x8, #0x49e99
000000000004a674	nop
000000000004a678	ldarb	w8, [x8]
000000000004a67c	tbz	w8, #0x0, 0x4a688
000000000004a680	mov	x0, x19
000000000004a684	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a688	mov	x0, x20
000000000004a68c	ldp	x29, x30, [sp, #0x20]
000000000004a690	ldp	x20, x19, [sp, #0x10]
000000000004a694	ldp	x22, x21, [sp], #0x30
000000000004a698	ret
000000000004a69c	mov	x20, x0
000000000004a6a0	cbz	x22, 0x4a6d4
000000000004a6a4	ldaxr	w8, [x19]
000000000004a6a8	stlxr	w9, w21, [x19]
000000000004a6ac	cbnz	w9, 0x4a6a4
000000000004a6b0	cbnz	w21, 0x4a6d4
000000000004a6b4	cmp	w8, #0x1
000000000004a6b8	b.ne	0x4a6d4
000000000004a6bc	adr	x8, #0x49e4d
000000000004a6c0	nop
000000000004a6c4	ldarb	w8, [x8]
000000000004a6c8	tbz	w8, #0x0, 0x4a6d4
000000000004a6cc	mov	x0, x19
000000000004a6d0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a6d4	mov	x0, x20
000000000004a6d8	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_NSSetAsKSet_getElement:
000000000004a6dc	stp	x26, x25, [sp, #-0x50]!
000000000004a6e0	stp	x24, x23, [sp, #0x10]
000000000004a6e4	stp	x22, x21, [sp, #0x20]
000000000004a6e8	stp	x20, x19, [sp, #0x30]
000000000004a6ec	stp	x29, x30, [sp, #0x40]
000000000004a6f0	add	x29, sp, #0x40
000000000004a6f4	mov	x19, x2
000000000004a6f8	ldar	x8, [x0]
000000000004a6fc	and	x8, x8, #0xfffffffffffffffc
000000000004a700	ldr	x9, [x8]
000000000004a704	cmp	x8, #0x0
000000000004a708	ccmp	x9, x8, #0x4, ne
000000000004a70c	b.ne	0x4a72c
000000000004a710	mov	x21, #0x0
000000000004a714	adrp	x22, 45 ; 0x77000
000000000004a718	adrp	x23, 44 ; 0x76000
000000000004a71c	cbz	x1, 0x4a740
000000000004a720	mov	x0, x1
000000000004a724	bl	_Kotlin_ObjCExport_refToObjC
000000000004a728	b	0x4a74c
000000000004a72c	add	x8, x8, #0x10
000000000004a730	ldar	x21, [x8]
000000000004a734	adrp	x22, 45 ; 0x77000
000000000004a738	adrp	x23, 44 ; 0x76000
000000000004a73c	cbnz	x1, 0x4a720
000000000004a740	ldr	x0, [x22, #0x78]
000000000004a744	ldr	x1, [x23, #0xdd0]
000000000004a748	bl	0x55ca8 ; Objc message: -[x0 containsObject:]
000000000004a74c	mov	x2, x0
000000000004a750	adrp	x0, 48 ; 0x7a000
000000000004a754	add	x0, x0, #0x4e0
000000000004a758	ldr	x8, [x0]
000000000004a75c	blr	x8
000000000004a760	ldr	x25, [x0]
000000000004a764	add	x20, x25, #0x138
000000000004a768	mov	w8, #0x1
000000000004a76c	ldaxr	w24, [x20]
000000000004a770	stlxr	w9, w8, [x20]
000000000004a774	cbnz	w9, 0x4a76c
000000000004a778	nop
000000000004a77c	ldr	x1, #0x2c61c ; Objc selector ref: member:
000000000004a780	mov	x0, x21
000000000004a784	bl	0x55ca8 ; Objc message: -[x0 member:]
000000000004a788	mov	x21, x0
000000000004a78c	cbz	x25, 0x4a7c0
000000000004a790	ldaxr	w8, [x20]
000000000004a794	stlxr	w9, w24, [x20]
000000000004a798	cbnz	w9, 0x4a790
000000000004a79c	cbnz	w24, 0x4a7c0
000000000004a7a0	cmp	w8, #0x1
000000000004a7a4	b.ne	0x4a7c0
000000000004a7a8	adr	x8, #0x49d61
000000000004a7ac	nop
000000000004a7b0	ldarb	w8, [x8]
000000000004a7b4	tbz	w8, #0x0, 0x4a7c0
000000000004a7b8	mov	x0, x20
000000000004a7bc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a7c0	ldr	x0, [x22, #0x78]
000000000004a7c4	ldr	x1, [x23, #0xdd0]
000000000004a7c8	bl	0x55ca8 ; Objc message: -[x0 member:]
000000000004a7cc	cmp	x21, x0
000000000004a7d0	b.eq	0x4a800
000000000004a7d4	cbz	x21, 0x4a800
000000000004a7d8	nop
000000000004a7dc	ldr	x1, #0x49f7c
000000000004a7e0	mov	x0, x21
000000000004a7e4	mov	x2, x19
000000000004a7e8	ldp	x29, x30, [sp, #0x40]
000000000004a7ec	ldp	x20, x19, [sp, #0x30]
000000000004a7f0	ldp	x22, x21, [sp, #0x20]
000000000004a7f4	ldp	x24, x23, [sp, #0x10]
000000000004a7f8	ldp	x26, x25, [sp], #0x50
000000000004a7fc	b	0x55ca8 ; Objc message: -[x0 member:]
000000000004a800	str	xzr, [x19]
000000000004a804	mov	x0, #0x0
000000000004a808	ldp	x29, x30, [sp, #0x40]
000000000004a80c	ldp	x20, x19, [sp, #0x30]
000000000004a810	ldp	x22, x21, [sp, #0x20]
000000000004a814	ldp	x24, x23, [sp, #0x10]
000000000004a818	ldp	x26, x25, [sp], #0x50
000000000004a81c	ret
000000000004a820	mov	x19, x0
000000000004a824	cbz	x25, 0x4a858
000000000004a828	ldaxr	w8, [x20]
000000000004a82c	stlxr	w9, w24, [x20]
000000000004a830	cbnz	w9, 0x4a828
000000000004a834	cbnz	w24, 0x4a858
000000000004a838	cmp	w8, #0x1
000000000004a83c	b.ne	0x4a858
000000000004a840	adr	x8, #0x49cc9
000000000004a844	nop
000000000004a848	ldarb	w8, [x8]
000000000004a84c	tbz	w8, #0x0, 0x4a858
000000000004a850	mov	x0, x20
000000000004a854	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a858	mov	x0, x19
000000000004a85c	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_containsKey:
000000000004a860	stp	x22, x21, [sp, #-0x30]!
000000000004a864	stp	x20, x19, [sp, #0x10]
000000000004a868	stp	x29, x30, [sp, #0x20]
000000000004a86c	add	x29, sp, #0x20
000000000004a870	ldar	x8, [x0]
000000000004a874	and	x8, x8, #0xfffffffffffffffc
000000000004a878	ldr	x9, [x8]
000000000004a87c	cmp	x8, #0x0
000000000004a880	ccmp	x9, x8, #0x4, ne
000000000004a884	b.ne	0x4a89c
000000000004a888	mov	x20, #0x0
000000000004a88c	cbz	x1, 0x4a8a8
000000000004a890	mov	x0, x1
000000000004a894	bl	_Kotlin_ObjCExport_refToObjC
000000000004a898	b	0x4a8bc
000000000004a89c	add	x8, x8, #0x10
000000000004a8a0	ldar	x20, [x8]
000000000004a8a4	cbnz	x1, 0x4a890
000000000004a8a8	nop
000000000004a8ac	ldr	x0, #0x2c7cc ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004a8b0	nop
000000000004a8b4	ldr	x1, #0x2c51c ; Objc selector ref: null
000000000004a8b8	bl	0x55ca8 ; Objc message: +[NSNull null]
000000000004a8bc	mov	x2, x0
000000000004a8c0	adrp	x0, 48 ; 0x7a000
000000000004a8c4	add	x0, x0, #0x4e0
000000000004a8c8	ldr	x8, [x0]
000000000004a8cc	blr	x8
000000000004a8d0	ldr	x22, [x0]
000000000004a8d4	add	x19, x22, #0x138
000000000004a8d8	mov	w8, #0x1
000000000004a8dc	ldaxr	w21, [x19]
000000000004a8e0	stlxr	w9, w8, [x19]
000000000004a8e4	cbnz	w9, 0x4a8dc
000000000004a8e8	nop
000000000004a8ec	ldr	x1, #0x2c50c ; Objc selector ref: objectForKey:
000000000004a8f0	mov	x0, x20
000000000004a8f4	bl	0x55ca8 ; Objc message: -[x0 objectForKey:]
000000000004a8f8	mov	x20, x0
000000000004a8fc	cbz	x22, 0x4a930
000000000004a900	ldaxr	w8, [x19]
000000000004a904	stlxr	w9, w21, [x19]
000000000004a908	cbnz	w9, 0x4a900
000000000004a90c	cbnz	w21, 0x4a930
000000000004a910	cmp	w8, #0x1
000000000004a914	b.ne	0x4a930
000000000004a918	adr	x8, #0x49bf1
000000000004a91c	nop
000000000004a920	ldarb	w8, [x8]
000000000004a924	tbz	w8, #0x0, 0x4a930
000000000004a928	mov	x0, x19
000000000004a92c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a930	cmp	x20, #0x0
000000000004a934	cset	w0, ne
000000000004a938	ldp	x29, x30, [sp, #0x20]
000000000004a93c	ldp	x20, x19, [sp, #0x10]
000000000004a940	ldp	x22, x21, [sp], #0x30
000000000004a944	ret
000000000004a948	mov	x20, x0
000000000004a94c	cbz	x22, 0x4a980
000000000004a950	ldaxr	w8, [x19]
000000000004a954	stlxr	w9, w21, [x19]
000000000004a958	cbnz	w9, 0x4a950
000000000004a95c	cbnz	w21, 0x4a980
000000000004a960	cmp	w8, #0x1
000000000004a964	b.ne	0x4a980
000000000004a968	adr	x8, #0x49ba1
000000000004a96c	nop
000000000004a970	ldarb	w8, [x8]
000000000004a974	tbz	w8, #0x0, 0x4a980
000000000004a978	mov	x0, x19
000000000004a97c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004a980	mov	x0, x20
000000000004a984	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_containsValue:
000000000004a988	sub	sp, sp, #0x140
000000000004a98c	stp	x28, x27, [sp, #0xe0]
000000000004a990	stp	x26, x25, [sp, #0xf0]
000000000004a994	stp	x24, x23, [sp, #0x100]
000000000004a998	stp	x22, x21, [sp, #0x110]
000000000004a99c	stp	x20, x19, [sp, #0x120]
000000000004a9a0	stp	x29, x30, [sp, #0x130]
000000000004a9a4	add	x29, sp, #0x130
000000000004a9a8	ldar	x8, [x0]
000000000004a9ac	and	x8, x8, #0xfffffffffffffffc
000000000004a9b0	ldr	x9, [x8]
000000000004a9b4	cmp	x8, #0x0
000000000004a9b8	ccmp	x9, x8, #0x4, ne
000000000004a9bc	b.ne	0x4a9d4
000000000004a9c0	mov	x20, #0x0
000000000004a9c4	cbz	x1, 0x4a9e0
000000000004a9c8	mov	x0, x1
000000000004a9cc	bl	_Kotlin_ObjCExport_refToObjC
000000000004a9d0	b	0x4a9f4
000000000004a9d4	add	x8, x8, #0x10
000000000004a9d8	ldar	x20, [x8]
000000000004a9dc	cbnz	x1, 0x4a9c8
000000000004a9e0	nop
000000000004a9e4	ldr	x0, #0x2c694 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004a9e8	nop
000000000004a9ec	ldr	x1, #0x2c3e4 ; Objc selector ref: null
000000000004a9f0	bl	0x55ca8 ; Objc message: +[NSNull null]
000000000004a9f4	mov	x21, x0
000000000004a9f8	adrp	x0, 48 ; 0x7a000
000000000004a9fc	add	x0, x0, #0x4e0
000000000004aa00	ldr	x8, [x0]
000000000004aa04	blr	x8
000000000004aa08	ldr	x23, [x0]
000000000004aa0c	add	x19, x23, #0x138
000000000004aa10	mov	w8, #0x1
000000000004aa14	ldaxr	w25, [x19]
000000000004aa18	stlxr	w9, w8, [x19]
000000000004aa1c	cbnz	w9, 0x4aa14
000000000004aa20	movi.16b	v0, #0x0
000000000004aa24	stp	q0, q0, [sp, #0xb0]
000000000004aa28	stp	q0, q0, [sp, #0x90]
000000000004aa2c	nop
000000000004aa30	ldr	x22, #0x2c210 ; Objc selector ref: countByEnumeratingWithState:objects:count:
000000000004aa34	add	x2, sp, #0x90
000000000004aa38	add	x3, sp, #0x10
000000000004aa3c	mov	x0, x20
000000000004aa40	mov	x1, x22
000000000004aa44	mov	w4, #0x10
000000000004aa48	bl	0x55ca8 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
000000000004aa4c	cbz	x0, 0x4ab04
000000000004aa50	str	x23, [sp, #0x8]
000000000004aa54	ldr	x8, [sp, #0xa0]
000000000004aa58	ldr	x27, [x8]
000000000004aa5c	adrp	x8, 44 ; 0x76000
000000000004aa60	adrp	x9, 44 ; 0x76000
000000000004aa64	mov	x28, #0x0
000000000004aa68	ldr	x23, [x8, #0xdf8]
000000000004aa6c	ldr	x24, [x9, #0xd70]
000000000004aa70	cmp	x0, #0x1
000000000004aa74	csinc	x26, x0, xzr, hi
000000000004aa78	ldr	x8, [sp, #0xa0]
000000000004aa7c	ldr	x8, [x8]
000000000004aa80	cmp	x8, x27
000000000004aa84	b.eq	0x4aa90
000000000004aa88	mov	x0, x20
000000000004aa8c	bl	0x55c6c ; symbol stub for: _objc_enumerationMutation
000000000004aa90	ldr	x8, [sp, #0x98]
000000000004aa94	ldr	x2, [x8, x28, lsl #3]
000000000004aa98	mov	x0, x20
000000000004aa9c	mov	x1, x23
000000000004aaa0	bl	0x55ca8 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
000000000004aaa4	mov	x1, x24
000000000004aaa8	mov	x2, x21
000000000004aaac	bl	0x55ca8 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
000000000004aab0	tbnz	w0, #0x0, 0x4aaf4
000000000004aab4	add	x28, x28, #0x1
000000000004aab8	cmp	x26, x28
000000000004aabc	b.ne	0x4aa78
000000000004aac0	add	x2, sp, #0x90
000000000004aac4	add	x3, sp, #0x10
000000000004aac8	mov	x0, x20
000000000004aacc	mov	x1, x22
000000000004aad0	mov	w4, #0x10
000000000004aad4	bl	0x55ca8 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
000000000004aad8	adrp	x8, 44 ; 0x76000
000000000004aadc	adrp	x9, 44 ; 0x76000
000000000004aae0	cbnz	x0, 0x4aa64
000000000004aae4	mov	w20, #0x0
000000000004aae8	ldr	x23, [sp, #0x8]
000000000004aaec	cbnz	x23, 0x4ab0c
000000000004aaf0	b	0x4ab3c
000000000004aaf4	mov	w20, #0x1
000000000004aaf8	ldr	x23, [sp, #0x8]
000000000004aafc	cbnz	x23, 0x4ab0c
000000000004ab00	b	0x4ab3c
000000000004ab04	mov	w20, #0x0
000000000004ab08	cbz	x23, 0x4ab3c
000000000004ab0c	ldaxr	w8, [x19]
000000000004ab10	stlxr	w9, w25, [x19]
000000000004ab14	cbnz	w9, 0x4ab0c
000000000004ab18	cbnz	w25, 0x4ab3c
000000000004ab1c	cmp	w8, #0x1
000000000004ab20	b.ne	0x4ab3c
000000000004ab24	adr	x8, #0x499e5
000000000004ab28	nop
000000000004ab2c	ldarb	w8, [x8]
000000000004ab30	tbz	w8, #0x0, 0x4ab3c
000000000004ab34	mov	x0, x19
000000000004ab38	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ab3c	mov	x0, x20
000000000004ab40	ldp	x29, x30, [sp, #0x130]
000000000004ab44	ldp	x20, x19, [sp, #0x120]
000000000004ab48	ldp	x22, x21, [sp, #0x110]
000000000004ab4c	ldp	x24, x23, [sp, #0x100]
000000000004ab50	ldp	x26, x25, [sp, #0xf0]
000000000004ab54	ldp	x28, x27, [sp, #0xe0]
000000000004ab58	add	sp, sp, #0x140
000000000004ab5c	ret
000000000004ab60	b	0x4ab6c
000000000004ab64	str	x23, [sp, #0x8]
000000000004ab68	b	0x4ab6c
000000000004ab6c	mov	x20, x0
000000000004ab70	ldr	x8, [sp, #0x8]
000000000004ab74	cbnz	x8, 0x4ab80
000000000004ab78	mov	x0, x20
000000000004ab7c	bl	0x558ac ; symbol stub for: __Unwind_Resume
000000000004ab80	ldaxr	w8, [x19]
000000000004ab84	stlxr	w9, w25, [x19]
000000000004ab88	cbnz	w9, 0x4ab80
000000000004ab8c	cbnz	w25, 0x4ab78
000000000004ab90	cmp	w8, #0x1
000000000004ab94	b.ne	0x4ab78
000000000004ab98	adr	x8, #0x49971
000000000004ab9c	nop
000000000004aba0	ldarb	w8, [x8]
000000000004aba4	tbz	w8, #0x0, 0x4ab78
000000000004aba8	mov	x0, x19
000000000004abac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004abb0	mov	x0, x20
000000000004abb4	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_get:
000000000004abb8	stp	x26, x25, [sp, #-0x50]!
000000000004abbc	stp	x24, x23, [sp, #0x10]
000000000004abc0	stp	x22, x21, [sp, #0x20]
000000000004abc4	stp	x20, x19, [sp, #0x30]
000000000004abc8	stp	x29, x30, [sp, #0x40]
000000000004abcc	add	x29, sp, #0x40
000000000004abd0	mov	x19, x2
000000000004abd4	ldar	x8, [x0]
000000000004abd8	and	x8, x8, #0xfffffffffffffffc
000000000004abdc	ldr	x9, [x8]
000000000004abe0	cmp	x8, #0x0
000000000004abe4	ccmp	x9, x8, #0x4, ne
000000000004abe8	b.ne	0x4ac08
000000000004abec	mov	x21, #0x0
000000000004abf0	adrp	x22, 45 ; 0x77000
000000000004abf4	adrp	x23, 44 ; 0x76000
000000000004abf8	cbz	x1, 0x4ac1c
000000000004abfc	mov	x0, x1
000000000004ac00	bl	_Kotlin_ObjCExport_refToObjC
000000000004ac04	b	0x4ac28
000000000004ac08	add	x8, x8, #0x10
000000000004ac0c	ldar	x21, [x8]
000000000004ac10	adrp	x22, 45 ; 0x77000
000000000004ac14	adrp	x23, 44 ; 0x76000
000000000004ac18	cbnz	x1, 0x4abfc
000000000004ac1c	ldr	x0, [x22, #0x78]
000000000004ac20	ldr	x1, [x23, #0xdd0]
000000000004ac24	bl	0x55ca8 ; Objc message: -[x0 countByEnumeratingWithState:objects:count:]
000000000004ac28	mov	x2, x0
000000000004ac2c	adrp	x0, 48 ; 0x7a000
000000000004ac30	add	x0, x0, #0x4e0
000000000004ac34	ldr	x8, [x0]
000000000004ac38	blr	x8
000000000004ac3c	ldr	x25, [x0]
000000000004ac40	add	x20, x25, #0x138
000000000004ac44	mov	w8, #0x1
000000000004ac48	ldaxr	w24, [x20]
000000000004ac4c	stlxr	w9, w8, [x20]
000000000004ac50	cbnz	w9, 0x4ac48
000000000004ac54	nop
000000000004ac58	ldr	x1, #0x2c1a0 ; Objc selector ref: objectForKey:
000000000004ac5c	mov	x0, x21
000000000004ac60	bl	0x55ca8 ; Objc message: -[x0 objectForKey:]
000000000004ac64	mov	x21, x0
000000000004ac68	cbz	x25, 0x4ac9c
000000000004ac6c	ldaxr	w8, [x20]
000000000004ac70	stlxr	w9, w24, [x20]
000000000004ac74	cbnz	w9, 0x4ac6c
000000000004ac78	cbnz	w24, 0x4ac9c
000000000004ac7c	cmp	w8, #0x1
000000000004ac80	b.ne	0x4ac9c
000000000004ac84	adr	x8, #0x49885
000000000004ac88	nop
000000000004ac8c	ldarb	w8, [x8]
000000000004ac90	tbz	w8, #0x0, 0x4ac9c
000000000004ac94	mov	x0, x20
000000000004ac98	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ac9c	ldr	x0, [x22, #0x78]
000000000004aca0	ldr	x1, [x23, #0xdd0]
000000000004aca4	bl	0x55ca8 ; Objc message: -[x0 objectForKey:]
000000000004aca8	cmp	x21, x0
000000000004acac	b.eq	0x4acdc
000000000004acb0	cbz	x21, 0x4acdc
000000000004acb4	nop
000000000004acb8	ldr	x1, #0x49aa0
000000000004acbc	mov	x0, x21
000000000004acc0	mov	x2, x19
000000000004acc4	ldp	x29, x30, [sp, #0x40]
000000000004acc8	ldp	x20, x19, [sp, #0x30]
000000000004accc	ldp	x22, x21, [sp, #0x20]
000000000004acd0	ldp	x24, x23, [sp, #0x10]
000000000004acd4	ldp	x26, x25, [sp], #0x50
000000000004acd8	b	0x55ca8 ; Objc message: -[x0 objectForKey:]
000000000004acdc	str	xzr, [x19]
000000000004ace0	mov	x0, #0x0
000000000004ace4	ldp	x29, x30, [sp, #0x40]
000000000004ace8	ldp	x20, x19, [sp, #0x30]
000000000004acec	ldp	x22, x21, [sp, #0x20]
000000000004acf0	ldp	x24, x23, [sp, #0x10]
000000000004acf4	ldp	x26, x25, [sp], #0x50
000000000004acf8	ret
000000000004acfc	mov	x19, x0
000000000004ad00	cbz	x25, 0x4ad34
000000000004ad04	ldaxr	w8, [x20]
000000000004ad08	stlxr	w9, w24, [x20]
000000000004ad0c	cbnz	w9, 0x4ad04
000000000004ad10	cbnz	w24, 0x4ad34
000000000004ad14	cmp	w8, #0x1
000000000004ad18	b.ne	0x4ad34
000000000004ad1c	adr	x8, #0x497ed
000000000004ad20	nop
000000000004ad24	ldarb	w8, [x8]
000000000004ad28	tbz	w8, #0x0, 0x4ad34
000000000004ad2c	mov	x0, x20
000000000004ad30	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ad34	mov	x0, x19
000000000004ad38	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_getOrThrowConcurrentModification:
000000000004ad3c	sub	sp, sp, #0x80
000000000004ad40	stp	x28, x27, [sp, #0x20]
000000000004ad44	stp	x26, x25, [sp, #0x30]
000000000004ad48	stp	x24, x23, [sp, #0x40]
000000000004ad4c	stp	x22, x21, [sp, #0x50]
000000000004ad50	stp	x20, x19, [sp, #0x60]
000000000004ad54	stp	x29, x30, [sp, #0x70]
000000000004ad58	add	x29, sp, #0x70
000000000004ad5c	mov	x20, x2
000000000004ad60	ldar	x8, [x0]
000000000004ad64	and	x8, x8, #0xfffffffffffffffc
000000000004ad68	ldr	x9, [x8]
000000000004ad6c	cmp	x8, #0x0
000000000004ad70	ccmp	x9, x8, #0x4, ne
000000000004ad74	b.ne	0x4ad94
000000000004ad78	mov	x22, #0x0
000000000004ad7c	adrp	x24, 45 ; 0x77000
000000000004ad80	adrp	x25, 44 ; 0x76000
000000000004ad84	cbz	x1, 0x4ada8
000000000004ad88	mov	x0, x1
000000000004ad8c	bl	_Kotlin_ObjCExport_refToObjC
000000000004ad90	b	0x4adb4
000000000004ad94	add	x8, x8, #0x10
000000000004ad98	ldar	x22, [x8]
000000000004ad9c	adrp	x24, 45 ; 0x77000
000000000004ada0	adrp	x25, 44 ; 0x76000
000000000004ada4	cbnz	x1, 0x4ad88
000000000004ada8	ldr	x0, [x24, #0x78]
000000000004adac	ldr	x1, [x25, #0xdd0]
000000000004adb0	bl	0x55ca8 ; Objc message: -[x0 objectForKey:]
000000000004adb4	mov	x2, x0
000000000004adb8	adrp	x19, 48 ; 0x7a000
000000000004adbc	add	x19, x19, #0x4e0
000000000004adc0	ldr	x23, [x19]
000000000004adc4	mov	x0, x19
000000000004adc8	blr	x23
000000000004adcc	ldr	x27, [x0]
000000000004add0	add	x21, x27, #0x138
000000000004add4	mov	w8, #0x1
000000000004add8	ldaxr	w26, [x21]
000000000004addc	stlxr	w9, w8, [x21]
000000000004ade0	cbnz	w9, 0x4add8
000000000004ade4	nop
000000000004ade8	ldr	x1, #0x2c010 ; Objc selector ref: objectForKey:
000000000004adec	mov	x0, x22
000000000004adf0	bl	0x55ca8 ; Objc message: -[x0 objectForKey:]
000000000004adf4	mov	x22, x0
000000000004adf8	cbz	x27, 0x4ae2c
000000000004adfc	ldaxr	w8, [x21]
000000000004ae00	stlxr	w9, w26, [x21]
000000000004ae04	cbnz	w9, 0x4adfc
000000000004ae08	cbnz	w26, 0x4ae2c
000000000004ae0c	cmp	w8, #0x1
000000000004ae10	b.ne	0x4ae2c
000000000004ae14	adr	x8, #0x496f5
000000000004ae18	nop
000000000004ae1c	ldarb	w8, [x8]
000000000004ae20	tbz	w8, #0x0, 0x4ae2c
000000000004ae24	mov	x0, x21
000000000004ae28	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ae2c	cbz	x22, 0x4ae9c
000000000004ae30	ldr	x0, [x24, #0x78]
000000000004ae34	ldr	x1, [x25, #0xdd0]
000000000004ae38	bl	0x55ca8 ; Objc message: -[x0 objectForKey:]
000000000004ae3c	cmp	x22, x0
000000000004ae40	b.eq	0x4ae74
000000000004ae44	nop
000000000004ae48	ldr	x1, #0x49910
000000000004ae4c	mov	x0, x22
000000000004ae50	mov	x2, x20
000000000004ae54	ldp	x29, x30, [sp, #0x70]
000000000004ae58	ldp	x20, x19, [sp, #0x60]
000000000004ae5c	ldp	x22, x21, [sp, #0x50]
000000000004ae60	ldp	x24, x23, [sp, #0x40]
000000000004ae64	ldp	x26, x25, [sp, #0x30]
000000000004ae68	ldp	x28, x27, [sp, #0x20]
000000000004ae6c	add	sp, sp, #0x80
000000000004ae70	b	0x55ca8 ; Objc message: -[x0 objectForKey:]
000000000004ae74	str	xzr, [x20]
000000000004ae78	mov	x0, #0x0
000000000004ae7c	ldp	x29, x30, [sp, #0x70]
000000000004ae80	ldp	x20, x19, [sp, #0x60]
000000000004ae84	ldp	x22, x21, [sp, #0x50]
000000000004ae88	ldp	x24, x23, [sp, #0x40]
000000000004ae8c	ldp	x26, x25, [sp, #0x30]
000000000004ae90	ldp	x28, x27, [sp, #0x20]
000000000004ae94	add	sp, sp, #0x80
000000000004ae98	ret
000000000004ae9c	movi.16b	v0, #0x0
000000000004aea0	stp	q0, q0, [sp]
000000000004aea4	mov	x0, x19
000000000004aea8	blr	x23
000000000004aeac	ldr	x8, [x0]
000000000004aeb0	ldr	x9, [x8, #0x110]
000000000004aeb4	mov	x10, sp
000000000004aeb8	str	x10, [x8, #0x110]
000000000004aebc	mov	x8, #0x400000000
000000000004aec0	stp	x9, x8, [sp, #0x8]
000000000004aec4	adr	x21, #0x49645
000000000004aec8	nop
000000000004aecc	ldarb	w8, [x21]
000000000004aed0	tbz	w8, #0x0, 0x4aed8
000000000004aed4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004aed8	mov	x0, x19
000000000004aedc	blr	x23
000000000004aee0	ldr	x8, [x0]
000000000004aee4	ldr	x8, [x8, #0x118]
000000000004aee8	add	x0, x8, #0x70
000000000004aeec	mov	w1, #0x38
000000000004aef0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004aef4	mov	x20, x0
000000000004aef8	adr	x8, #0x16858
000000000004aefc	nop
000000000004af00	str	x8, [x20, #0x10]!
000000000004af04	stur	xzr, [x20, #-0x8]
000000000004af08	str	x20, [sp, #0x18]
000000000004af0c	adr	x1, #0x246b4
000000000004af10	nop
000000000004af14	mov	x0, x20
000000000004af18	bl	"_kfun:kotlin.Throwable#<init>(kotlin.String?;kotlin.Throwable?){}"
000000000004af1c	ldarb	w8, [x21]
000000000004af20	tbz	w8, #0x0, 0x4af28
000000000004af24	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004af28	mov	x0, x20
000000000004af2c	bl	_ThrowException
000000000004af30	brk	#0x1
000000000004af34	mov	x20, x0
000000000004af38	mov	x0, x19
000000000004af3c	blr	x23
000000000004af40	ldr	x8, [x0]
000000000004af44	ldr	x9, [sp, #0x8]
000000000004af48	str	x9, [x8, #0x110]
000000000004af4c	mov	x0, x20
000000000004af50	bl	0x558ac ; symbol stub for: __Unwind_Resume
000000000004af54	mov	x20, x0
000000000004af58	cbnz	x27, 0x4af64
000000000004af5c	mov	x0, x20
000000000004af60	bl	0x558ac ; symbol stub for: __Unwind_Resume
000000000004af64	ldaxr	w8, [x21]
000000000004af68	stlxr	w9, w26, [x21]
000000000004af6c	cbnz	w9, 0x4af64
000000000004af70	cbnz	w26, 0x4af5c
000000000004af74	cmp	w8, #0x1
000000000004af78	b.ne	0x4af5c
000000000004af7c	adr	x8, #0x4958d
000000000004af80	nop
000000000004af84	ldarb	w8, [x8]
000000000004af88	tbz	w8, #0x0, 0x4af5c
000000000004af8c	mov	x0, x21
000000000004af90	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004af94	mov	x0, x20
000000000004af98	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_NSDictionaryAsKMap_containsEntry:
000000000004af9c	stp	x24, x23, [sp, #-0x40]!
000000000004afa0	stp	x22, x21, [sp, #0x10]
000000000004afa4	stp	x20, x19, [sp, #0x20]
000000000004afa8	stp	x29, x30, [sp, #0x30]
000000000004afac	add	x29, sp, #0x30
000000000004afb0	mov	x19, x1
000000000004afb4	ldar	x8, [x0]
000000000004afb8	and	x8, x8, #0xfffffffffffffffc
000000000004afbc	ldr	x9, [x8]
000000000004afc0	cmp	x8, #0x0
000000000004afc4	ccmp	x9, x8, #0x4, ne
000000000004afc8	b.ne	0x4aff0
000000000004afcc	mov	x20, #0x0
000000000004afd0	cbz	x2, 0x4affc
000000000004afd4	mov	x0, x2
000000000004afd8	bl	_Kotlin_ObjCExport_refToObjC
000000000004afdc	mov	x21, x0
000000000004afe0	cbz	x19, 0x4b018
000000000004afe4	mov	x0, x19
000000000004afe8	bl	_Kotlin_ObjCExport_refToObjC
000000000004afec	b	0x4b02c
000000000004aff0	add	x8, x8, #0x10
000000000004aff4	ldar	x20, [x8]
000000000004aff8	cbnz	x2, 0x4afd4
000000000004affc	nop
000000000004b000	ldr	x0, #0x2c078 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004b004	nop
000000000004b008	ldr	x1, #0x2bdc8 ; Objc selector ref: null
000000000004b00c	bl	0x55ca8 ; Objc message: +[NSNull null]
000000000004b010	mov	x21, x0
000000000004b014	cbnz	x19, 0x4afe4
000000000004b018	nop
000000000004b01c	ldr	x0, #0x2c05c ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004b020	nop
000000000004b024	ldr	x1, #0x2bdac ; Objc selector ref: null
000000000004b028	bl	0x55ca8 ; Objc message: +[NSNull null]
000000000004b02c	mov	x2, x0
000000000004b030	adrp	x0, 47 ; 0x7a000
000000000004b034	add	x0, x0, #0x4e0
000000000004b038	ldr	x8, [x0]
000000000004b03c	blr	x8
000000000004b040	ldr	x23, [x0]
000000000004b044	add	x19, x23, #0x138
000000000004b048	mov	w8, #0x1
000000000004b04c	ldaxr	w22, [x19]
000000000004b050	stlxr	w9, w8, [x19]
000000000004b054	cbnz	w9, 0x4b04c
000000000004b058	nop
000000000004b05c	ldr	x1, #0x2bd9c ; Objc selector ref: objectForKey:
000000000004b060	mov	x0, x20
000000000004b064	bl	0x55ca8 ; Objc message: -[x0 objectForKey:]
000000000004b068	mov	x2, x0
000000000004b06c	nop
000000000004b070	ldr	x1, #0x2bd00 ; Objc selector ref: isEqual:
000000000004b074	mov	x0, x21
000000000004b078	bl	0x55ca8 ; Objc message: -[x0 isEqual:]
000000000004b07c	mov	x20, x0
000000000004b080	cbz	x23, 0x4b0b4
000000000004b084	ldaxr	w8, [x19]
000000000004b088	stlxr	w9, w22, [x19]
000000000004b08c	cbnz	w9, 0x4b084
000000000004b090	cbnz	w22, 0x4b0b4
000000000004b094	cmp	w8, #0x1
000000000004b098	b.ne	0x4b0b4
000000000004b09c	adr	x8, #0x4946d
000000000004b0a0	nop
000000000004b0a4	ldarb	w8, [x8]
000000000004b0a8	tbz	w8, #0x0, 0x4b0b4
000000000004b0ac	mov	x0, x19
000000000004b0b0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b0b4	mov	x0, x20
000000000004b0b8	ldp	x29, x30, [sp, #0x30]
000000000004b0bc	ldp	x20, x19, [sp, #0x20]
000000000004b0c0	ldp	x22, x21, [sp, #0x10]
000000000004b0c4	ldp	x24, x23, [sp], #0x40
000000000004b0c8	ret
000000000004b0cc	mov	x20, x0
000000000004b0d0	cbz	x23, 0x4b104
000000000004b0d4	ldaxr	w8, [x19]
000000000004b0d8	stlxr	w9, w22, [x19]
000000000004b0dc	cbnz	w9, 0x4b0d4
000000000004b0e0	cbnz	w22, 0x4b104
000000000004b0e4	cmp	w8, #0x1
000000000004b0e8	b.ne	0x4b104
000000000004b0ec	adr	x8, #0x4941d
000000000004b0f0	nop
000000000004b0f4	ldarb	w8, [x8]
000000000004b0f8	tbz	w8, #0x0, 0x4b104
000000000004b0fc	mov	x0, x19
000000000004b100	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b104	mov	x0, x20
000000000004b108	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_ObjCExport_trapOnUndeclaredException:
000000000004b10c	stp	x20, x19, [sp, #-0x20]!
000000000004b110	stp	x29, x30, [sp, #0x10]
000000000004b114	add	x29, sp, #0x10
000000000004b118	mov	x19, x0
000000000004b11c	bl	__ZL14printlnMessagePKc
000000000004b120	mov	x0, x19
000000000004b124	bl	__ZN6kotlin25ProcessUnhandledExceptionEP9ObjHeader
000000000004b128	mov	x0, x19
000000000004b12c	bl	__ZN6kotlin31TerminateWithUnhandledExceptionEP9ObjHeader
__ZL14printlnMessagePKc:
000000000004b130	sub	sp, sp, #0x20
000000000004b134	stp	x29, x30, [sp, #0x10]
000000000004b138	add	x29, sp, #0x10
000000000004b13c	adr	x8, #0x1228a ; literal pool for: "Function doesn't have or inherit @Throws annotation and thus exception isn't propagated from Kotlin to Objective-C/Swift as NSError.\nIt is considered unexpected and unhandled instead. Program will be terminated."
000000000004b140	nop
000000000004b144	str	x8, [sp]
000000000004b148	adr	x0, #0x12352 ; literal pool for: "%s\n"
000000000004b14c	nop
000000000004b150	bl	__ZN5konan13consolePrintfEPKcz
000000000004b154	ldp	x29, x30, [sp, #0x10]
000000000004b158	add	sp, sp, #0x20
000000000004b15c	ret
_Kotlin_Interop_CreateKStringFromNSString:
000000000004b160	stp	x22, x21, [sp, #-0x30]!
000000000004b164	stp	x20, x19, [sp, #0x10]
000000000004b168	stp	x29, x30, [sp, #0x20]
000000000004b16c	add	x29, sp, #0x20
000000000004b170	mov	x19, x1
000000000004b174	cbz	x0, 0x4b230
000000000004b178	mov	x1, x0
000000000004b17c	mov	x0, #0x0
000000000004b180	bl	0x55864 ; symbol stub for: _CFStringCreateCopy
000000000004b184	mov	x20, x0
000000000004b188	bl	0x5587c ; symbol stub for: _CFStringGetLength
000000000004b18c	mov	x22, x0
000000000004b190	tbnz	w22, #0x1f, 0x4b24c
000000000004b194	adrp	x0, 47 ; 0x7a000
000000000004b198	add	x0, x0, #0x4e0
000000000004b19c	ldr	x8, [x0]
000000000004b1a0	blr	x8
000000000004b1a4	ldr	x8, [x0]
000000000004b1a8	ldr	x8, [x8, #0x118]
000000000004b1ac	ubfiz	x9, x22, #1, #32
000000000004b1b0	add	x9, x9, #0x1f
000000000004b1b4	and	x1, x9, #0x3fffffff8
000000000004b1b8	add	x0, x8, #0x70
000000000004b1bc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004b1c0	mov	x21, x0
000000000004b1c4	adr	x8, #0x16eac
000000000004b1c8	nop
000000000004b1cc	stp	x8, xzr, [x21, #0x10]!
000000000004b1d0	stur	xzr, [x21, #-0x8]
000000000004b1d4	str	w22, [x21, #0x8]
000000000004b1d8	str	x21, [x19]
000000000004b1dc	add	x3, x21, #0x10
000000000004b1e0	mov	x0, x20
000000000004b1e4	mov	x1, #0x0
000000000004b1e8	mov	x2, x22
000000000004b1ec	bl	0x55870 ; symbol stub for: _CFStringGetCharacters
000000000004b1f0	ldar	x8, [x21]
000000000004b1f4	and	x8, x8, #0xfffffffffffffffc
000000000004b1f8	ldr	x9, [x8]
000000000004b1fc	cmp	x9, x8
000000000004b200	csel	x0, xzr, x8, eq
000000000004b204	cbnz	x0, 0x4b210
000000000004b208	mov	x0, x21
000000000004b20c	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000004b210	add	x8, x0, #0x10
000000000004b214	stlr	x20, [x8]
000000000004b218	str	x21, [x19]
000000000004b21c	mov	x0, x21
000000000004b220	ldp	x29, x30, [sp, #0x20]
000000000004b224	ldp	x20, x19, [sp, #0x10]
000000000004b228	ldp	x22, x21, [sp], #0x30
000000000004b22c	ret
000000000004b230	mov	x21, #0x0
000000000004b234	str	x21, [x19]
000000000004b238	mov	x0, x21
000000000004b23c	ldp	x29, x30, [sp, #0x20]
000000000004b240	ldp	x20, x19, [sp, #0x10]
000000000004b244	ldp	x22, x21, [sp], #0x30
000000000004b248	ret
000000000004b24c	bl	_ThrowIllegalArgumentException
_Kotlin_io_Console_print:
000000000004b250	sub	sp, sp, #0x60
000000000004b254	stp	x24, x23, [sp, #0x20]
000000000004b258	stp	x22, x21, [sp, #0x30]
000000000004b25c	stp	x20, x19, [sp, #0x40]
000000000004b260	stp	x29, x30, [sp, #0x50]
000000000004b264	add	x29, sp, #0x50
000000000004b268	mov	x19, x0
000000000004b26c	ldr	x8, [x0]
000000000004b270	and	x8, x8, #0xfffffffffffffffc
000000000004b274	ldr	x8, [x8]
000000000004b278	adr	x9, #0x16df8
000000000004b27c	nop
000000000004b280	cmp	x8, x9
000000000004b284	b.ne	0x4b42c
000000000004b288	stp	xzr, xzr, [sp, #0x8]
000000000004b28c	str	xzr, [sp, #0x18]
000000000004b290	ldr	w8, [x19, #0x8]
000000000004b294	cmp	w8, #0x17
000000000004b298	b.lo	0x4b2c4
000000000004b29c	add	x8, x8, #0x10
000000000004b2a0	and	x20, x8, #0x1fffffff0
000000000004b2a4	mov	x0, x20
000000000004b2a8	mov	w1, #0x1
000000000004b2ac	bl	0x55aec ; symbol stub for: _calloc
000000000004b2b0	ldrb	w8, [sp, #0x8]
000000000004b2b4	strb	w8, [x0]
000000000004b2b8	orr	x8, x20, #0x8000000000000000
000000000004b2bc	stp	xzr, x8, [sp, #0x10]
000000000004b2c0	str	x0, [sp, #0x8]
000000000004b2c4	ldr	w8, [x19, #0x8]
000000000004b2c8	lsl	x8, x8, #1
000000000004b2cc	cbz	x8, 0x4b368
000000000004b2d0	add	x24, x19, #0x10
000000000004b2d4	add	x19, x24, x8
000000000004b2d8	mov	w20, #0xd800
000000000004b2dc	mov	w21, #0x2400
000000000004b2e0	movk	w21, #0xfca0, lsl #16
000000000004b2e4	mov	w22, #0xdc00
000000000004b2e8	mov	w23, #0xfffd
000000000004b2ec	b	0x4b30c
000000000004b2f0	cmp	w10, w22
000000000004b2f4	csel	w0, w23, w9, eq
000000000004b2f8	mov	x24, x8
000000000004b2fc	add	x1, sp, #0x8
000000000004b300	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
000000000004b304	cmp	x24, x19
000000000004b308	b.eq	0x4b368
000000000004b30c	mov	x8, x24
000000000004b310	ldrh	w9, [x8], #0x2
000000000004b314	and	w10, w9, #0xfc00
000000000004b318	cmp	w10, w20
000000000004b31c	b.ne	0x4b2f0
000000000004b320	cmp	x8, x19
000000000004b324	b.eq	0x4b35c
000000000004b328	ldrh	w10, [x24, #0x2]
000000000004b32c	and	w11, w10, #0xfc00
000000000004b330	add	w9, w10, w9, lsl #10
000000000004b334	add	w9, w9, w21
000000000004b338	add	x10, x24, #0x4
000000000004b33c	cmp	w11, w22
000000000004b340	csel	w0, w9, w23, eq
000000000004b344	csel	x24, x10, x8, eq
000000000004b348	add	x1, sp, #0x8
000000000004b34c	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
000000000004b350	cmp	x24, x19
000000000004b354	b.ne	0x4b30c
000000000004b358	b	0x4b368
000000000004b35c	add	x1, sp, #0x8
000000000004b360	mov	w0, #0xfffd
000000000004b364	bl	__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_
000000000004b368	adrp	x0, 47 ; 0x7a000
000000000004b36c	add	x0, x0, #0x4e0
000000000004b370	ldr	x8, [x0]
000000000004b374	blr	x8
000000000004b378	ldr	x22, [x0]
000000000004b37c	add	x19, x22, #0x138
000000000004b380	mov	w8, #0x1
000000000004b384	ldaxr	w21, [x19]
000000000004b388	stlxr	w9, w8, [x19]
000000000004b38c	cbnz	w9, 0x4b384
000000000004b390	ldrb	w8, [sp, #0x1f]
000000000004b394	sxtb	w9, w8
000000000004b398	ldp	x10, x11, [sp, #0x8]
000000000004b39c	cmp	w9, #0x0
000000000004b3a0	add	x9, sp, #0x8
000000000004b3a4	csel	x1, x10, x9, lt
000000000004b3a8	csel	x8, x11, x8, lt
000000000004b3ac	and	x2, x8, #0xffffffff
000000000004b3b0	mov	w0, #0x1
000000000004b3b4	bl	0x55ee8 ; symbol stub for: _write
000000000004b3b8	cbz	x22, 0x4b3ec
000000000004b3bc	ldaxr	w8, [x19]
000000000004b3c0	stlxr	w9, w21, [x19]
000000000004b3c4	cbnz	w9, 0x4b3bc
000000000004b3c8	cbnz	w21, 0x4b3ec
000000000004b3cc	cmp	w8, #0x1
000000000004b3d0	b.ne	0x4b3ec
000000000004b3d4	adr	x8, #0x49135
000000000004b3d8	nop
000000000004b3dc	ldarb	w8, [x8]
000000000004b3e0	tbz	w8, #0x0, 0x4b3ec
000000000004b3e4	mov	x0, x19
000000000004b3e8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b3ec	ldrsb	w8, [sp, #0x1f]
000000000004b3f0	tbnz	w8, #0x1f, 0x4b40c
000000000004b3f4	ldp	x29, x30, [sp, #0x50]
000000000004b3f8	ldp	x20, x19, [sp, #0x40]
000000000004b3fc	ldp	x22, x21, [sp, #0x30]
000000000004b400	ldp	x24, x23, [sp, #0x20]
000000000004b404	add	sp, sp, #0x60
000000000004b408	ret
000000000004b40c	ldr	x0, [sp, #0x8]
000000000004b410	bl	0x55b7c ; symbol stub for: _free
000000000004b414	ldp	x29, x30, [sp, #0x50]
000000000004b418	ldp	x20, x19, [sp, #0x40]
000000000004b41c	ldp	x22, x21, [sp, #0x30]
000000000004b420	ldp	x24, x23, [sp, #0x20]
000000000004b424	add	sp, sp, #0x60
000000000004b428	ret
000000000004b42c	adr	x1, #0x16c44
000000000004b430	nop
000000000004b434	mov	x0, x19
000000000004b438	bl	_ThrowClassCastException
000000000004b43c	mov	x20, x0
000000000004b440	cbz	x22, 0x4b474
000000000004b444	ldaxr	w8, [x19]
000000000004b448	stlxr	w9, w21, [x19]
000000000004b44c	cbnz	w9, 0x4b444
000000000004b450	cbnz	w21, 0x4b474
000000000004b454	cmp	w8, #0x1
000000000004b458	b.ne	0x4b474
000000000004b45c	adr	x8, #0x490ad
000000000004b460	nop
000000000004b464	ldarb	w8, [x8]
000000000004b468	tbz	w8, #0x0, 0x4b474
000000000004b46c	mov	x0, x19
000000000004b470	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004b474	ldrsb	w8, [sp, #0x1f]
000000000004b478	tbz	w8, #0x1f, 0x4b484
000000000004b47c	ldr	x0, [sp, #0x8]
000000000004b480	bl	0x55b7c ; symbol stub for: _free
000000000004b484	mov	x0, x20
000000000004b488	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZN4utf89unchecked6appendINSt3__120back_insert_iteratorINS2_12basic_stringIcNS2_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEEEET_jSD_:
000000000004b48c	stp	x26, x25, [sp, #-0x50]!
000000000004b490	stp	x24, x23, [sp, #0x10]
000000000004b494	stp	x22, x21, [sp, #0x20]
000000000004b498	stp	x20, x19, [sp, #0x30]
000000000004b49c	stp	x29, x30, [sp, #0x40]
000000000004b4a0	add	x29, sp, #0x40
000000000004b4a4	mov	x19, x1
000000000004b4a8	mov	x20, x0
000000000004b4ac	cmp	w0, #0x7f
000000000004b4b0	b.hi	0x4b4d4
000000000004b4b4	ldrsb	w8, [x19, #0x17]
000000000004b4b8	tbnz	w8, #0x1f, 0x4b560
000000000004b4bc	and	w9, w8, #0xff
000000000004b4c0	cmp	w9, #0x16
000000000004b4c4	b.ne	0x4b5f0
000000000004b4c8	mov	w21, #0x16
000000000004b4cc	mov	x22, x19
000000000004b4d0	b	0x4b588
000000000004b4d4	cmp	w20, #0x7ff
000000000004b4d8	b.hi	0x4b530
000000000004b4dc	lsr	w8, w20, #6
000000000004b4e0	orr	w25, w8, #0xffffffc0
000000000004b4e4	ldrsb	w8, [x19, #0x17]
000000000004b4e8	tbz	w8, #0x1f, 0x4b838
000000000004b4ec	ldr	x8, [x19, #0x10]
000000000004b4f0	and	x8, x8, #0x7fffffffffffffff
000000000004b4f4	sub	x21, x8, #0x1
000000000004b4f8	ldp	x22, x8, [x19]
000000000004b4fc	cmp	x8, x21
000000000004b500	b.ne	0x4b62c
000000000004b504	mov	x8, #-0x19
000000000004b508	movk	x8, #0x7fff, lsl #48
000000000004b50c	cmp	x21, x8
000000000004b510	b.lo	0x4b84c
000000000004b514	mov	x23, #-0x11
000000000004b518	mov	x0, x23
000000000004b51c	mov	w1, #0x1
000000000004b520	bl	0x55aec ; symbol stub for: _calloc
000000000004b524	mov	x24, x0
000000000004b528	cbnz	x21, 0x4b884
000000000004b52c	b	0x4b89c
000000000004b530	lsr	w8, w20, #16
000000000004b534	cbnz	w8, 0x4b604
000000000004b538	lsr	w8, w20, #12
000000000004b53c	orr	w25, w8, #0xffffffe0
000000000004b540	ldrsb	w8, [x19, #0x17]
000000000004b544	tbnz	w8, #0x1f, 0x4b77c
000000000004b548	and	w9, w8, #0xff
000000000004b54c	cmp	w9, #0x16
000000000004b550	b.ne	0x4b768
000000000004b554	mov	w21, #0x16
000000000004b558	mov	x22, x19
000000000004b55c	b	0x4b7a4
000000000004b560	ldr	x8, [x19, #0x10]
000000000004b564	and	x8, x8, #0x7fffffffffffffff
000000000004b568	sub	x21, x8, #0x1
000000000004b56c	ldp	x22, x8, [x19]
000000000004b570	cmp	x8, x21
000000000004b574	b.ne	0x4b638
000000000004b578	mov	x8, #-0x19
000000000004b57c	movk	x8, #0x7fff, lsl #48
000000000004b580	cmp	x21, x8
000000000004b584	b.hs	0x4b654
000000000004b588	add	x8, x21, #0x1
000000000004b58c	lsl	x9, x21, #1
000000000004b590	cmp	x8, x9
000000000004b594	csinc	x8, x9, x21, lo
000000000004b598	add	x9, x8, #0x10
000000000004b59c	and	x9, x9, #0xfffffffffffffff0
000000000004b5a0	cmp	x8, #0x17
000000000004b5a4	mov	w8, #0x17
000000000004b5a8	csel	x23, x8, x9, lo
000000000004b5ac	mov	x0, x23
000000000004b5b0	mov	w1, #0x1
000000000004b5b4	bl	0x55aec ; symbol stub for: _calloc
000000000004b5b8	mov	x24, x0
000000000004b5bc	cbz	x21, 0x4b5d8
000000000004b5c0	mov	x0, x24
000000000004b5c4	mov	x1, x22
000000000004b5c8	mov	x2, x21
000000000004b5cc	bl	0x55bd0 ; symbol stub for: _memcpy
000000000004b5d0	cmp	x21, #0x16
000000000004b5d4	b.eq	0x4b5e0
000000000004b5d8	mov	x0, x22
000000000004b5dc	bl	0x55b7c ; symbol stub for: _free
000000000004b5e0	str	x24, [x19]
000000000004b5e4	orr	x8, x23, #0x8000000000000000
000000000004b5e8	str	x8, [x19, #0x10]
000000000004b5ec	b	0x4b640
000000000004b5f0	and	x21, x8, #0xff
000000000004b5f4	add	w8, w9, #0x1
000000000004b5f8	strb	w8, [x19, #0x17]
000000000004b5fc	mov	x24, x19
000000000004b600	b	0x4b648
000000000004b604	lsr	w8, w20, #18
000000000004b608	orr	w25, w8, #0xfffffff0
000000000004b60c	ldrsb	w8, [x19, #0x17]
000000000004b610	tbnz	w8, #0x1f, 0x4b670
000000000004b614	and	w9, w8, #0xff
000000000004b618	cmp	w9, #0x16
000000000004b61c	b.ne	0x4b6ec
000000000004b620	mov	w21, #0x16
000000000004b624	mov	x22, x19
000000000004b628	b	0x4b698
000000000004b62c	mov	x21, x8
000000000004b630	mov	x24, x22
000000000004b634	b	0x4b8b0
000000000004b638	mov	x21, x8
000000000004b63c	mov	x24, x22
000000000004b640	add	x8, x21, #0x1
000000000004b644	str	x8, [x19, #0x8]
000000000004b648	add	x8, x24, x21
000000000004b64c	strb	w20, [x8]
000000000004b650	b	0x4b9d8
000000000004b654	mov	x23, #-0x11
000000000004b658	mov	x0, x23
000000000004b65c	mov	w1, #0x1
000000000004b660	bl	0x55aec ; symbol stub for: _calloc
000000000004b664	mov	x24, x0
000000000004b668	cbnz	x21, 0x4b5c0
000000000004b66c	b	0x4b5d8
000000000004b670	ldr	x8, [x19, #0x10]
000000000004b674	and	x8, x8, #0x7fffffffffffffff
000000000004b678	sub	x21, x8, #0x1
000000000004b67c	ldp	x22, x8, [x19]
000000000004b680	cmp	x8, x21
000000000004b684	b.ne	0x4b700
000000000004b688	mov	x8, #-0x19
000000000004b68c	movk	x8, #0x7fff, lsl #48
000000000004b690	cmp	x21, x8
000000000004b694	b.hs	0x4b70c
000000000004b698	add	x8, x21, #0x1
000000000004b69c	lsl	x9, x21, #1
000000000004b6a0	cmp	x8, x9
000000000004b6a4	csinc	x8, x9, x21, lo
000000000004b6a8	add	x9, x8, #0x10
000000000004b6ac	and	x9, x9, #0xfffffffffffffff0
000000000004b6b0	cmp	x8, #0x17
000000000004b6b4	mov	w8, #0x17
000000000004b6b8	csel	x23, x8, x9, lo
000000000004b6bc	mov	x0, x23
000000000004b6c0	mov	w1, #0x1
000000000004b6c4	bl	0x55aec ; symbol stub for: _calloc
000000000004b6c8	mov	x24, x0
000000000004b6cc	cbz	x21, 0x4b724
000000000004b6d0	mov	x0, x24
000000000004b6d4	mov	x1, x22
000000000004b6d8	mov	x2, x21
000000000004b6dc	bl	0x55bd0 ; symbol stub for: _memcpy
000000000004b6e0	cmp	x21, #0x16
000000000004b6e4	b.ne	0x4b724
000000000004b6e8	b	0x4b72c
000000000004b6ec	and	x21, x8, #0xff
000000000004b6f0	add	w8, w9, #0x1
000000000004b6f4	strb	w8, [x19, #0x17]
000000000004b6f8	mov	x24, x19
000000000004b6fc	b	0x4b740
000000000004b700	mov	x21, x8
000000000004b704	mov	x24, x22
000000000004b708	b	0x4b738
000000000004b70c	mov	x23, #-0x11
000000000004b710	mov	x0, x23
000000000004b714	mov	w1, #0x1
000000000004b718	bl	0x55aec ; symbol stub for: _calloc
000000000004b71c	mov	x24, x0
000000000004b720	cbnz	x21, 0x4b6d0
000000000004b724	mov	x0, x22
000000000004b728	bl	0x55b7c ; symbol stub for: _free
000000000004b72c	str	x24, [x19]
000000000004b730	orr	x8, x23, #0x8000000000000000
000000000004b734	str	x8, [x19, #0x10]
000000000004b738	add	x8, x21, #0x1
000000000004b73c	str	x8, [x19, #0x8]
000000000004b740	add	x8, x24, x21
000000000004b744	strb	w25, [x8]
000000000004b748	strb	wzr, [x8, #0x1]
000000000004b74c	mov	w25, #-0x80
000000000004b750	bfxil	w25, w20, #12, #6
000000000004b754	ldrsb	w8, [x19, #0x17]
000000000004b758	tbnz	w8, #0x1f, 0x4b77c
000000000004b75c	and	w9, w8, #0xff
000000000004b760	cmp	w9, #0x16
000000000004b764	b.eq	0x4b554
000000000004b768	and	x21, x8, #0xff
000000000004b76c	add	w8, w9, #0x1
000000000004b770	strb	w8, [x19, #0x17]
000000000004b774	mov	x24, x19
000000000004b778	b	0x4b81c
000000000004b77c	ldr	x8, [x19, #0x10]
000000000004b780	and	x8, x8, #0x7fffffffffffffff
000000000004b784	sub	x21, x8, #0x1
000000000004b788	ldp	x22, x8, [x19]
000000000004b78c	cmp	x8, x21
000000000004b790	b.ne	0x4b80c
000000000004b794	mov	x8, #-0x19
000000000004b798	movk	x8, #0x7fff, lsl #48
000000000004b79c	cmp	x21, x8
000000000004b7a0	b.hs	0x4b9f8
000000000004b7a4	add	x8, x21, #0x1
000000000004b7a8	lsl	x9, x21, #1
000000000004b7ac	cmp	x8, x9
000000000004b7b0	csinc	x8, x9, x21, lo
000000000004b7b4	add	x9, x8, #0x10
000000000004b7b8	and	x9, x9, #0xfffffffffffffff0
000000000004b7bc	cmp	x8, #0x17
000000000004b7c0	mov	w8, #0x17
000000000004b7c4	csel	x23, x8, x9, lo
000000000004b7c8	mov	x0, x23
000000000004b7cc	mov	w1, #0x1
000000000004b7d0	bl	0x55aec ; symbol stub for: _calloc
000000000004b7d4	mov	x24, x0
000000000004b7d8	cbz	x21, 0x4b7f4
000000000004b7dc	mov	x0, x24
000000000004b7e0	mov	x1, x22
000000000004b7e4	mov	x2, x21
000000000004b7e8	bl	0x55bd0 ; symbol stub for: _memcpy
000000000004b7ec	cmp	x21, #0x16
000000000004b7f0	b.eq	0x4b7fc
000000000004b7f4	mov	x0, x22
000000000004b7f8	bl	0x55b7c ; symbol stub for: _free
000000000004b7fc	str	x24, [x19]
000000000004b800	orr	x8, x23, #0x8000000000000000
000000000004b804	str	x8, [x19, #0x10]
000000000004b808	b	0x4b814
000000000004b80c	mov	x21, x8
000000000004b810	mov	x24, x22
000000000004b814	add	x8, x21, #0x1
000000000004b818	str	x8, [x19, #0x8]
000000000004b81c	add	x8, x24, x21
000000000004b820	strb	w25, [x8]
000000000004b824	strb	wzr, [x8, #0x1]
000000000004b828	mov	w25, #-0x80
000000000004b82c	bfxil	w25, w20, #6, #6
000000000004b830	ldrsb	w8, [x19, #0x17]
000000000004b834	tbnz	w8, #0x1f, 0x4b4ec
000000000004b838	and	w9, w8, #0xff
000000000004b83c	cmp	w9, #0x16
000000000004b840	b.ne	0x4b8bc
000000000004b844	mov	w21, #0x16
000000000004b848	mov	x22, x19
000000000004b84c	add	x8, x21, #0x1
000000000004b850	lsl	x9, x21, #1
000000000004b854	cmp	x8, x9
000000000004b858	csinc	x8, x9, x21, lo
000000000004b85c	add	x9, x8, #0x10
000000000004b860	and	x9, x9, #0xfffffffffffffff0
000000000004b864	cmp	x8, #0x17
000000000004b868	mov	w8, #0x17
000000000004b86c	csel	x23, x8, x9, lo
000000000004b870	mov	x0, x23
000000000004b874	mov	w1, #0x1
000000000004b878	bl	0x55aec ; symbol stub for: _calloc
000000000004b87c	mov	x24, x0
000000000004b880	cbz	x21, 0x4b89c
000000000004b884	mov	x0, x24
000000000004b888	mov	x1, x22
000000000004b88c	mov	x2, x21
000000000004b890	bl	0x55bd0 ; symbol stub for: _memcpy
000000000004b894	cmp	x21, #0x16
000000000004b898	b.eq	0x4b8a4
000000000004b89c	mov	x0, x22
000000000004b8a0	bl	0x55b7c ; symbol stub for: _free
000000000004b8a4	str	x24, [x19]
000000000004b8a8	orr	x8, x23, #0x8000000000000000
000000000004b8ac	str	x8, [x19, #0x10]
000000000004b8b0	add	x8, x21, #0x1
000000000004b8b4	str	x8, [x19, #0x8]
000000000004b8b8	b	0x4b8cc
000000000004b8bc	and	x21, x8, #0xff
000000000004b8c0	add	w8, w9, #0x1
000000000004b8c4	strb	w8, [x19, #0x17]
000000000004b8c8	mov	x24, x19
000000000004b8cc	add	x8, x24, x21
000000000004b8d0	strb	w25, [x8]
000000000004b8d4	strb	wzr, [x8, #0x1]
000000000004b8d8	mov	w24, #-0x80
000000000004b8dc	bfxil	w24, w20, #0, #6
000000000004b8e0	ldrsb	w8, [x19, #0x17]
000000000004b8e4	tbnz	w8, #0x1f, 0x4b900
000000000004b8e8	and	w9, w8, #0xff
000000000004b8ec	cmp	w9, #0x16
000000000004b8f0	b.ne	0x4b964
000000000004b8f4	mov	w20, #0x16
000000000004b8f8	mov	x21, x19
000000000004b8fc	b	0x4b928
000000000004b900	ldr	x8, [x19, #0x10]
000000000004b904	and	x8, x8, #0x7fffffffffffffff
000000000004b908	sub	x20, x8, #0x1
000000000004b90c	ldp	x21, x8, [x19]
000000000004b910	cmp	x8, x20
000000000004b914	b.ne	0x4b978
000000000004b918	mov	x8, #-0x19
000000000004b91c	movk	x8, #0x7fff, lsl #48
000000000004b920	cmp	x20, x8
000000000004b924	b.hs	0x4b984
000000000004b928	add	x8, x20, #0x1
000000000004b92c	lsl	x9, x20, #1
000000000004b930	cmp	x8, x9
000000000004b934	csinc	x8, x9, x20, lo
000000000004b938	add	x9, x8, #0x10
000000000004b93c	and	x9, x9, #0xfffffffffffffff0
000000000004b940	cmp	x8, #0x17
000000000004b944	mov	w8, #0x17
000000000004b948	csel	x22, x8, x9, lo
000000000004b94c	mov	x0, x22
000000000004b950	mov	w1, #0x1
000000000004b954	bl	0x55aec ; symbol stub for: _calloc
000000000004b958	mov	x23, x0
000000000004b95c	cbnz	x20, 0x4b99c
000000000004b960	b	0x4b9b4
000000000004b964	and	x20, x8, #0xff
000000000004b968	add	w8, w9, #0x1
000000000004b96c	strb	w8, [x19, #0x17]
000000000004b970	mov	x23, x19
000000000004b974	b	0x4b9d0
000000000004b978	mov	x20, x8
000000000004b97c	mov	x23, x21
000000000004b980	b	0x4b9c8
000000000004b984	mov	x22, #-0x11
000000000004b988	mov	x0, x22
000000000004b98c	mov	w1, #0x1
000000000004b990	bl	0x55aec ; symbol stub for: _calloc
000000000004b994	mov	x23, x0
000000000004b998	cbz	x20, 0x4b9b4
000000000004b99c	mov	x0, x23
000000000004b9a0	mov	x1, x21
000000000004b9a4	mov	x2, x20
000000000004b9a8	bl	0x55bd0 ; symbol stub for: _memcpy
000000000004b9ac	cmp	x20, #0x16
000000000004b9b0	b.eq	0x4b9bc
000000000004b9b4	mov	x0, x21
000000000004b9b8	bl	0x55b7c ; symbol stub for: _free
000000000004b9bc	str	x23, [x19]
000000000004b9c0	orr	x8, x22, #0x8000000000000000
000000000004b9c4	str	x8, [x19, #0x10]
000000000004b9c8	add	x8, x20, #0x1
000000000004b9cc	str	x8, [x19, #0x8]
000000000004b9d0	add	x8, x23, x20
000000000004b9d4	strb	w24, [x8]
000000000004b9d8	strb	wzr, [x8, #0x1]
000000000004b9dc	mov	x0, x19
000000000004b9e0	ldp	x29, x30, [sp, #0x40]
000000000004b9e4	ldp	x20, x19, [sp, #0x30]
000000000004b9e8	ldp	x22, x21, [sp, #0x20]
000000000004b9ec	ldp	x24, x23, [sp, #0x10]
000000000004b9f0	ldp	x26, x25, [sp], #0x50
000000000004b9f4	ret
000000000004b9f8	mov	x23, #-0x11
000000000004b9fc	mov	x0, x23
000000000004ba00	mov	w1, #0x1
000000000004ba04	bl	0x55aec ; symbol stub for: _calloc
000000000004ba08	mov	x24, x0
000000000004ba0c	cbnz	x21, 0x4b7dc
000000000004ba10	b	0x4b7f4
_Kotlin_io_Console_println:
000000000004ba14	stp	x22, x21, [sp, #-0x30]!
000000000004ba18	stp	x20, x19, [sp, #0x10]
000000000004ba1c	stp	x29, x30, [sp, #0x20]
000000000004ba20	add	x29, sp, #0x20
000000000004ba24	bl	_Kotlin_io_Console_print
000000000004ba28	adrp	x0, 47 ; 0x7a000
000000000004ba2c	add	x0, x0, #0x4e0
000000000004ba30	ldr	x8, [x0]
000000000004ba34	blr	x8
000000000004ba38	ldr	x20, [x0]
000000000004ba3c	add	x19, x20, #0x138
000000000004ba40	mov	w8, #0x1
000000000004ba44	ldaxr	w21, [x19]
000000000004ba48	stlxr	w9, w8, [x19]
000000000004ba4c	cbnz	w9, 0x4ba44
000000000004ba50	adr	x1, #0x11a4e ; literal pool for: "\n"
000000000004ba54	nop
000000000004ba58	mov	w0, #0x1
000000000004ba5c	mov	w2, #0x1
000000000004ba60	bl	0x55ee8 ; symbol stub for: _write
000000000004ba64	cbz	x20, 0x4ba90
000000000004ba68	ldaxr	w8, [x19]
000000000004ba6c	stlxr	w9, w21, [x19]
000000000004ba70	cbnz	w9, 0x4ba68
000000000004ba74	cbnz	w21, 0x4ba90
000000000004ba78	cmp	w8, #0x1
000000000004ba7c	b.ne	0x4ba90
000000000004ba80	adr	x8, #0x48a89
000000000004ba84	nop
000000000004ba88	ldarb	w8, [x8]
000000000004ba8c	tbnz	w8, #0x0, 0x4baa0
000000000004ba90	ldp	x29, x30, [sp, #0x20]
000000000004ba94	ldp	x20, x19, [sp, #0x10]
000000000004ba98	ldp	x22, x21, [sp], #0x30
000000000004ba9c	ret
000000000004baa0	mov	x0, x19
000000000004baa4	ldp	x29, x30, [sp, #0x20]
000000000004baa8	ldp	x20, x19, [sp, #0x10]
000000000004baac	ldp	x22, x21, [sp], #0x30
000000000004bab0	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bab4	mov	x8, x20
000000000004bab8	mov	x20, x0
000000000004babc	cbz	x8, 0x4baf0
000000000004bac0	ldaxr	w8, [x19]
000000000004bac4	stlxr	w9, w21, [x19]
000000000004bac8	cbnz	w9, 0x4bac0
000000000004bacc	cbnz	w21, 0x4baf0
000000000004bad0	cmp	w8, #0x1
000000000004bad4	b.ne	0x4baf0
000000000004bad8	adr	x8, #0x48a31
000000000004badc	nop
000000000004bae0	ldarb	w8, [x8]
000000000004bae4	tbz	w8, #0x0, 0x4baf0
000000000004bae8	mov	x0, x19
000000000004baec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004baf0	mov	x0, x20
000000000004baf4	bl	0x558ac ; symbol stub for: __Unwind_Resume
_CreateStringFromCString:
000000000004baf8	sub	sp, sp, #0x60
000000000004bafc	stp	x26, x25, [sp, #0x10]
000000000004bb00	stp	x24, x23, [sp, #0x20]
000000000004bb04	stp	x22, x21, [sp, #0x30]
000000000004bb08	stp	x20, x19, [sp, #0x40]
000000000004bb0c	stp	x29, x30, [sp, #0x50]
000000000004bb10	add	x29, sp, #0x50
000000000004bb14	mov	x19, x1
000000000004bb18	cbz	x0, 0x4bbe4
000000000004bb1c	mov	x21, x0
000000000004bb20	bl	0x55e7c ; symbol stub for: _strlen
000000000004bb24	mov	x22, x0
000000000004bb28	add	x20, x21, x0
000000000004bb2c	str	x21, [sp]
000000000004bb30	cmp	x0, #0x0
000000000004bb34	b.le	0x4bbec
000000000004bb38	mov	w24, #0x0
000000000004bb3c	mov	w23, #0x1
000000000004bb40	mov	w25, #0x34
000000000004bb44	mov	w26, #0xa
000000000004bb48	b	0x4bb68
000000000004bb4c	ldr	x8, [sp]
000000000004bb50	add	x8, x8, #0x1
000000000004bb54	str	x8, [sp]
000000000004bb58	mov	w9, #0x1
000000000004bb5c	add	w24, w9, w24
000000000004bb60	cmp	x8, x20
000000000004bb64	b.hs	0x4bbdc
000000000004bb68	str	wzr, [sp, #0xc]
000000000004bb6c	mov	x0, sp
000000000004bb70	add	x2, sp, #0xc
000000000004bb74	mov	x1, x20
000000000004bb78	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
000000000004bb7c	lsl	w8, w23, w0
000000000004bb80	tst	w8, w25
000000000004bb84	b.ne	0x4bb4c
000000000004bb88	tst	w8, w26
000000000004bb8c	b.eq	0x4bbc0
000000000004bb90	ldr	x8, [sp]
000000000004bb94	add	x9, x8, #0x1
000000000004bb98	mov	x8, x9
000000000004bb9c	str	x9, [sp]
000000000004bba0	cmp	x9, x20
000000000004bba4	b.hs	0x4bb58
000000000004bba8	mov	x9, x8
000000000004bbac	ldrb	w10, [x9], #0x1
000000000004bbb0	and	w10, w10, #0xc0
000000000004bbb4	cmp	w10, #0x80
000000000004bbb8	b.eq	0x4bb98
000000000004bbbc	b	0x4bb58
000000000004bbc0	ldrh	w9, [sp, #0xe]
000000000004bbc4	ldr	x8, [sp]
000000000004bbc8	cmp	w9, #0x0
000000000004bbcc	cinc	w9, w23, ne
000000000004bbd0	add	w24, w9, w24
000000000004bbd4	cmp	x8, x20
000000000004bbd8	b.lo	0x4bb68
000000000004bbdc	tbz	w24, #0x1f, 0x4bbf0
000000000004bbe0	bl	_ThrowIllegalArgumentException
000000000004bbe4	mov	x23, #0x0
000000000004bbe8	b	0x4bd08
000000000004bbec	mov	w24, #0x0
000000000004bbf0	adrp	x0, 47 ; 0x7a000
000000000004bbf4	add	x0, x0, #0x4e0
000000000004bbf8	ldr	x8, [x0]
000000000004bbfc	blr	x8
000000000004bc00	ldr	x8, [x0]
000000000004bc04	ldr	x8, [x8, #0x118]
000000000004bc08	mov	w9, w24
000000000004bc0c	lsl	x9, x9, #1
000000000004bc10	add	x9, x9, #0x1f
000000000004bc14	and	x1, x9, #0x3fffffff8
000000000004bc18	add	x0, x8, #0x70
000000000004bc1c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004bc20	adr	x8, #0x16450
000000000004bc24	nop
000000000004bc28	mov	x23, x0
000000000004bc2c	str	x8, [x23, #0x10]!
000000000004bc30	str	xzr, [x0, #0x18]
000000000004bc34	str	xzr, [x0, #0x8]
000000000004bc38	str	w24, [x0, #0x18]
000000000004bc3c	str	x23, [x19]
000000000004bc40	str	x21, [sp]
000000000004bc44	cbz	x22, 0x4bd08
000000000004bc48	add	x21, x0, #0x20
000000000004bc4c	mov	w22, #0x1
000000000004bc50	mov	w24, #0x34
000000000004bc54	mov	w25, #0xa
000000000004bc58	mov	w26, #-0x2840
000000000004bc5c	b	0x4bc84
000000000004bc60	add	w9, w26, w8, lsr #10
000000000004bc64	strh	w9, [x21]
000000000004bc68	mov	w9, #0xdc00
000000000004bc6c	bfxil	w9, w8, #0, #10
000000000004bc70	strh	w9, [x21, #0x2]
000000000004bc74	add	x21, x21, #0x4
000000000004bc78	ldr	x8, [sp]
000000000004bc7c	cmp	x8, x20
000000000004bc80	b.eq	0x4bd08
000000000004bc84	str	wzr, [sp, #0xc]
000000000004bc88	mov	x0, sp
000000000004bc8c	add	x2, sp, #0xc
000000000004bc90	mov	x1, x20
000000000004bc94	bl	__ZN4utf88internal13validate_nextIPKcEENS0_9utf_errorERT_S5_Rj
000000000004bc98	lsl	w8, w22, w0
000000000004bc9c	tst	w8, w24
000000000004bca0	b.eq	0x4bcb4
000000000004bca4	ldr	x8, [sp]
000000000004bca8	add	x8, x8, #0x1
000000000004bcac	str	x8, [sp]
000000000004bcb0	b	0x4bce0
000000000004bcb4	tst	w8, w25
000000000004bcb8	b.eq	0x4bcf8
000000000004bcbc	ldr	x8, [sp]
000000000004bcc0	add	x8, x8, #0x1
000000000004bcc4	str	x8, [sp]
000000000004bcc8	cmp	x8, x20
000000000004bccc	b.hs	0x4bce0
000000000004bcd0	ldrb	w9, [x8], #0x1
000000000004bcd4	and	w9, w9, #0xc0
000000000004bcd8	cmp	w9, #0x80
000000000004bcdc	b.eq	0x4bcc4
000000000004bce0	mov	w8, #0xfffd
000000000004bce4	strh	w8, [x21], #0x2
000000000004bce8	ldr	x8, [sp]
000000000004bcec	cmp	x8, x20
000000000004bcf0	b.ne	0x4bc84
000000000004bcf4	b	0x4bd08
000000000004bcf8	ldr	w8, [sp, #0xc]
000000000004bcfc	cmp	w8, #0x10, lsl #12
000000000004bd00	b.lo	0x4bce4
000000000004bd04	b	0x4bc60
000000000004bd08	str	x23, [x19]
000000000004bd0c	mov	x0, x23
000000000004bd10	ldp	x29, x30, [sp, #0x50]
000000000004bd14	ldp	x20, x19, [sp, #0x40]
000000000004bd18	ldp	x22, x21, [sp, #0x30]
000000000004bd1c	ldp	x24, x23, [sp, #0x20]
000000000004bd20	ldp	x26, x25, [sp, #0x10]
000000000004bd24	add	sp, sp, #0x60
000000000004bd28	ret
__ZN27BackRefFromAssociatedObject10releaseRefEv:
000000000004bd2c	stp	x24, x23, [sp, #-0x40]!
000000000004bd30	stp	x22, x21, [sp, #0x10]
000000000004bd34	stp	x20, x19, [sp, #0x20]
000000000004bd38	stp	x29, x30, [sp, #0x30]
000000000004bd3c	add	x29, sp, #0x30
000000000004bd40	ldr	x19, [x0, #0x8]
000000000004bd44	add	x8, x0, #0x10
000000000004bd48	ldaxr	w9, [x8]
000000000004bd4c	subs	w9, w9, #0x1
000000000004bd50	stlxr	w10, w9, [x8]
000000000004bd54	cbnz	w10, 0x4bd48
000000000004bd58	b.ne	0x4bdf0
000000000004bd5c	ldr	x8, [x0]
000000000004bd60	cbz	x8, 0x4bdf0
000000000004bd64	bl	_Kotlin_initRuntimeIfNeeded
000000000004bd68	adrp	x21, 47 ; 0x7a000
000000000004bd6c	add	x21, x21, #0x4e0
000000000004bd70	ldr	x23, [x21]
000000000004bd74	mov	x0, x21
000000000004bd78	blr	x23
000000000004bd7c	ldr	x8, [x0]
000000000004bd80	add	x20, x8, #0x138
000000000004bd84	ldaxr	w22, [x20]
000000000004bd88	stlxr	w8, wzr, [x20]
000000000004bd8c	cbnz	w8, 0x4bd84
000000000004bd90	cmp	w22, #0x1
000000000004bd94	b.ne	0x4bdb0
000000000004bd98	adr	x8, #0x48771
000000000004bd9c	nop
000000000004bda0	ldarb	w8, [x8]
000000000004bda4	tbz	w8, #0x0, 0x4bdb0
000000000004bda8	mov	x0, x20
000000000004bdac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004bdb0	mov	x0, x21
000000000004bdb4	blr	x23
000000000004bdb8	ldr	x8, [x0]
000000000004bdbc	add	x0, x8, #0x8
000000000004bdc0	mov	x1, x19
000000000004bdc4	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004bdc8	ldaxr	w8, [x20]
000000000004bdcc	stlxr	w9, w22, [x20]
000000000004bdd0	cbnz	w9, 0x4bdc8
000000000004bdd4	cbnz	w22, 0x4bdf0
000000000004bdd8	cmp	w8, #0x1
000000000004bddc	b.ne	0x4bdf0
000000000004bde0	adr	x8, #0x48729
000000000004bde4	nop
000000000004bde8	ldarb	w8, [x8]
000000000004bdec	tbnz	w8, #0x0, 0x4be04
000000000004bdf0	ldp	x29, x30, [sp, #0x30]
000000000004bdf4	ldp	x20, x19, [sp, #0x20]
000000000004bdf8	ldp	x22, x21, [sp, #0x10]
000000000004bdfc	ldp	x24, x23, [sp], #0x40
000000000004be00	ret
000000000004be04	mov	x0, x20
000000000004be08	ldp	x29, x30, [sp, #0x30]
000000000004be0c	ldp	x20, x19, [sp, #0x20]
000000000004be10	ldp	x22, x21, [sp, #0x10]
000000000004be14	ldp	x24, x23, [sp], #0x40
000000000004be18	b	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
_addHighPrecision:
000000000004be1c	cbz	w1, 0x4be94
000000000004be20	cbz	w3, 0x4be94
000000000004be24	mov	x9, #0x0
000000000004be28	cmp	w1, w3
000000000004be2c	csel	w8, w1, w3, lt
000000000004be30	cmp	w8, #0x1
000000000004be34	csinc	w8, w8, wzr, gt
000000000004be38	mov	x10, x0
000000000004be3c	mov	x11, x8
000000000004be40	ldr	x12, [x10]
000000000004be44	ldr	x13, [x2]
000000000004be48	add	x12, x12, x9
000000000004be4c	add	x12, x12, x13
000000000004be50	str	x12, [x10], #0x8
000000000004be54	ldr	x13, [x2], #0x8
000000000004be58	cmp	x13, x12
000000000004be5c	csinc	x9, x9, xzr, eq
000000000004be60	csel	x9, xzr, x9, lo
000000000004be64	subs	x11, x11, #0x1
000000000004be68	b.ne	0x4be40
000000000004be6c	cmp	x9, #0x0
000000000004be70	ccmp	w8, w1, #0x4, ne
000000000004be74	b.eq	0x4be94
000000000004be78	lsl	x9, x8, #3
000000000004be7c	ldr	x10, [x0, x9]
000000000004be80	adds	x10, x10, #0x1
000000000004be84	str	x10, [x0, x9]
000000000004be88	add	x8, x8, #0x1
000000000004be8c	ccmp	w8, w1, #0x0, hs
000000000004be90	b.lt	0x4be78
000000000004be94	ret
_subtractHighPrecision:
000000000004be98	cmp	w1, #0x1
000000000004be9c	b.lt	0x4bf00
000000000004bea0	mov	w8, w1
000000000004bea4	cmp	w1, #0x4
000000000004bea8	b.hs	0x4beb4
000000000004beac	mov	x9, #0x0
000000000004beb0	b	0x4bee4
000000000004beb4	and	x9, x8, #0xfffffffc
000000000004beb8	add	x10, x0, #0x10
000000000004bebc	mov	x11, x9
000000000004bec0	ldp	q0, q1, [x10, #-0x10]
000000000004bec4	mvn.16b	v0, v0
000000000004bec8	mvn.16b	v1, v1
000000000004becc	stp	q0, q1, [x10, #-0x10]
000000000004bed0	add	x10, x10, #0x20
000000000004bed4	subs	x11, x11, #0x4
000000000004bed8	b.ne	0x4bec0
000000000004bedc	cmp	x9, x8
000000000004bee0	b.eq	0x4bf00
000000000004bee4	sub	x8, x8, x9
000000000004bee8	add	x9, x0, x9, lsl #3
000000000004beec	ldr	x10, [x9]
000000000004bef0	mvn	x10, x10
000000000004bef4	str	x10, [x9], #0x8
000000000004bef8	subs	x8, x8, #0x1
000000000004befc	b.ne	0x4beec
000000000004bf00	ldr	x8, [x0]
000000000004bf04	add	x8, x8, #0x1
000000000004bf08	str	x8, [x0]
000000000004bf0c	cmp	w1, #0x1
000000000004bf10	b.eq	0x4bf48
000000000004bf14	cbnz	x8, 0x4bf48
000000000004bf18	cmp	w1, #0x2
000000000004bf1c	mov	w8, #0x2
000000000004bf20	csel	w8, w1, w8, gt
000000000004bf24	sub	x8, x8, #0x2
000000000004bf28	add	x9, x0, #0x8
000000000004bf2c	ldr	x10, [x9]
000000000004bf30	add	x10, x10, #0x1
000000000004bf34	str	x10, [x9], #0x8
000000000004bf38	cmp	x10, #0x0
000000000004bf3c	ccmp	x8, #0x0, #0x4, eq
000000000004bf40	sub	x8, x8, #0x1
000000000004bf44	b.ne	0x4bf2c
000000000004bf48	mov	w9, w3
000000000004bf4c	and	w8, w3, w3, asr #31
000000000004bf50	cmp	w9, #0x1
000000000004bf54	b.lt	0x4bf6c
000000000004bf58	sub	w10, w9, #0x1
000000000004bf5c	ldr	x10, [x2, w10, uxtw #3]
000000000004bf60	sub	x9, x9, #0x1
000000000004bf64	cbz	x10, 0x4bf50
000000000004bf68	add	w8, w9, #0x1
000000000004bf6c	cbz	w1, 0x4bfe4
000000000004bf70	cbz	w8, 0x4bfe4
000000000004bf74	mov	x9, #0x0
000000000004bf78	cmp	w8, w1
000000000004bf7c	csel	w8, w1, w8, gt
000000000004bf80	cmp	w8, #0x1
000000000004bf84	csinc	w8, w8, wzr, gt
000000000004bf88	mov	x10, x0
000000000004bf8c	mov	x11, x8
000000000004bf90	ldr	x12, [x10]
000000000004bf94	ldr	x13, [x2]
000000000004bf98	add	x12, x12, x9
000000000004bf9c	add	x12, x12, x13
000000000004bfa0	str	x12, [x10], #0x8
000000000004bfa4	ldr	x13, [x2], #0x8
000000000004bfa8	cmp	x13, x12
000000000004bfac	csinc	x9, x9, xzr, eq
000000000004bfb0	csel	x9, xzr, x9, lo
000000000004bfb4	subs	x11, x11, #0x1
000000000004bfb8	b.ne	0x4bf90
000000000004bfbc	cmp	w8, w1
000000000004bfc0	b.eq	0x4bfe4
000000000004bfc4	cbz	x9, 0x4bfe4
000000000004bfc8	lsl	x9, x8, #3
000000000004bfcc	ldr	x10, [x0, x9]
000000000004bfd0	adds	x10, x10, #0x1
000000000004bfd4	str	x10, [x0, x9]
000000000004bfd8	add	x8, x8, #0x1
000000000004bfdc	ccmp	w8, w1, #0x0, hs
000000000004bfe0	b.lt	0x4bfc8
000000000004bfe4	cmp	w1, #0x1
000000000004bfe8	b.lt	0x4c04c
000000000004bfec	mov	w8, w1
000000000004bff0	cmp	w1, #0x4
000000000004bff4	b.hs	0x4c000
000000000004bff8	mov	x9, #0x0
000000000004bffc	b	0x4c030
000000000004c000	and	x9, x8, #0xfffffffc
000000000004c004	add	x10, x0, #0x10
000000000004c008	mov	x11, x9
000000000004c00c	ldp	q0, q1, [x10, #-0x10]
000000000004c010	mvn.16b	v0, v0
000000000004c014	mvn.16b	v1, v1
000000000004c018	stp	q0, q1, [x10, #-0x10]
000000000004c01c	add	x10, x10, #0x20
000000000004c020	subs	x11, x11, #0x4
000000000004c024	b.ne	0x4c00c
000000000004c028	cmp	x9, x8
000000000004c02c	b.eq	0x4c04c
000000000004c030	sub	x8, x8, x9
000000000004c034	add	x9, x0, x9, lsl #3
000000000004c038	ldr	x10, [x9]
000000000004c03c	mvn	x10, x10
000000000004c040	str	x10, [x9], #0x8
000000000004c044	subs	x8, x8, #0x1
000000000004c048	b.ne	0x4c038
000000000004c04c	ldr	x8, [x0]
000000000004c050	add	x8, x8, #0x1
000000000004c054	str	x8, [x0]
000000000004c058	cmp	w1, #0x1
000000000004c05c	b.eq	0x4c094
000000000004c060	cbnz	x8, 0x4c094
000000000004c064	cmp	w1, #0x2
000000000004c068	mov	w8, #0x2
000000000004c06c	csel	w8, w1, w8, gt
000000000004c070	sub	x8, x8, #0x2
000000000004c074	add	x9, x0, #0x8
000000000004c078	ldr	x10, [x9]
000000000004c07c	add	x10, x10, #0x1
000000000004c080	str	x10, [x9], #0x8
000000000004c084	cmp	x10, #0x0
000000000004c088	ccmp	x8, #0x0, #0x4, eq
000000000004c08c	sub	x8, x8, #0x1
000000000004c090	b.ne	0x4c078
000000000004c094	ret
_simpleShiftLeftHighPrecision:
000000000004c098	stp	x22, x21, [sp, #-0x30]!
000000000004c09c	stp	x20, x19, [sp, #0x10]
000000000004c0a0	stp	x29, x30, [sp, #0x20]
000000000004c0a4	add	x29, sp, #0x20
000000000004c0a8	mov	x21, x2
000000000004c0ac	mov	x20, x1
000000000004c0b0	mov	x19, x0
000000000004c0b4	cmp	w2, #0x40
000000000004c0b8	b.lt	0x4c124
000000000004c0bc	lsr	w11, w21, #6
000000000004c0c0	sub	w8, w20, #0x1
000000000004c0c4	subs	w9, w8, w11
000000000004c0c8	b.mi	0x4c104
000000000004c0cc	sxtw	x10, w20
000000000004c0d0	sub	x12, x10, #0x1
000000000004c0d4	neg	w10, w11
000000000004c0d8	sub	x11, x12, w11, uxtw
000000000004c0dc	add	x12, x19, x12, lsl #3
000000000004c0e0	mov	x13, x8
000000000004c0e4	ldr	x8, [x19, w9, uxtw #3]
000000000004c0e8	str	x8, [x12], #-0x8
000000000004c0ec	sub	w8, w13, #0x1
000000000004c0f0	add	w9, w10, w13
000000000004c0f4	sub	w9, w9, #0x1
000000000004c0f8	mov	x13, x8
000000000004c0fc	subs	x11, x11, #0x1
000000000004c100	b.pl	0x4c0e4
000000000004c104	sxtw	x9, w8
000000000004c108	bic	w8, w8, w8, asr #31
000000000004c10c	sub	x9, x9, x8
000000000004c110	add	x0, x19, x9, lsl #3
000000000004c114	lsl	x8, x8, #3
000000000004c118	add	x1, x8, #0x8
000000000004c11c	bl	0x55ae0 ; symbol stub for: _bzero
000000000004c120	and	w21, w21, #0x3f
000000000004c124	cbz	w21, 0x4c188
000000000004c128	mov	w8, w21
000000000004c12c	cmp	w20, #0x2
000000000004c130	b.lt	0x4c17c
000000000004c134	mov	w9, #0x40
000000000004c138	sub	w9, w9, w21
000000000004c13c	mov	w12, w20
000000000004c140	mov	w10, #-0x2
000000000004c144	add	x10, x10, w20, sxtw
000000000004c148	add	x11, x19, w20, sxtw #3
000000000004c14c	sub	x11, x11, #0x8
000000000004c150	add	x12, x12, #0x1
000000000004c154	ldr	x13, [x11]
000000000004c158	lsl	x13, x13, x8
000000000004c15c	ldr	x14, [x19, w10, uxtw #3]
000000000004c160	lsr	x14, x14, x9
000000000004c164	orr	x13, x14, x13
000000000004c168	str	x13, [x11], #-0x8
000000000004c16c	sub	x10, x10, #0x1
000000000004c170	sub	x12, x12, #0x1
000000000004c174	cmp	x12, #0x2
000000000004c178	b.gt	0x4c154
000000000004c17c	ldr	x9, [x19]
000000000004c180	lsl	x8, x9, x8
000000000004c184	str	x8, [x19]
000000000004c188	ldp	x29, x30, [sp, #0x20]
000000000004c18c	ldp	x20, x19, [sp, #0x10]
000000000004c190	ldp	x22, x21, [sp], #0x30
000000000004c194	ret
_compareHighPrecision:
000000000004c198	sxtw	x10, w1
000000000004c19c	and	w8, w1, w1, asr #31
000000000004c1a0	sub	w9, w8, #0x1
000000000004c1a4	sub	x12, x0, #0x8
000000000004c1a8	subs	x11, x10, #0x1
000000000004c1ac	b.lt	0x4c1cc
000000000004c1b0	ldr	x13, [x12, x10, lsl #3]
000000000004c1b4	mov	x10, x11
000000000004c1b8	cbz	x13, 0x4c1a8
000000000004c1bc	mov	w10, #0x0
000000000004c1c0	add	w8, w11, #0x1
000000000004c1c4	mov	x9, x11
000000000004c1c8	b	0x4c1d0
000000000004c1cc	mov	w10, #0x1
000000000004c1d0	sxtw	x12, w3
000000000004c1d4	add	w11, w3, #0x1
000000000004c1d8	sub	x14, x2, #0x8
000000000004c1dc	and	w13, w3, w3, asr #31
000000000004c1e0	subs	x15, x12, #0x1
000000000004c1e4	b.lt	0x4c204
000000000004c1e8	ldr	x16, [x14, x12, lsl #3]
000000000004c1ec	sub	w11, w11, #0x1
000000000004c1f0	mov	x12, x15
000000000004c1f4	cbz	x16, 0x4c1e0
000000000004c1f8	cmp	w8, w11
000000000004c1fc	b.le	0x4c218
000000000004c200	b	0x4c210
000000000004c204	mov	x11, x13
000000000004c208	cmp	w8, w11
000000000004c20c	b.le	0x4c218
000000000004c210	mov	w0, #0x1
000000000004c214	ret
000000000004c218	cset	w8, lt
000000000004c21c	orr	w10, w8, w10
000000000004c220	csetm	w8, lt
000000000004c224	tbnz	w10, #0x0, 0x4c258
000000000004c228	sxtw	x8, w9
000000000004c22c	lsl	x9, x8, #3
000000000004c230	ldr	x10, [x0, x9]
000000000004c234	ldr	x9, [x2, x9]
000000000004c238	cmp	x10, x9
000000000004c23c	b.hi	0x4c210
000000000004c240	b.lo	0x4c260
000000000004c244	sub	x9, x8, #0x1
000000000004c248	cmp	x8, #0x0
000000000004c24c	mov	x8, x9
000000000004c250	b.gt	0x4c22c
000000000004c254	mov	w8, #0x0
000000000004c258	mov	x0, x8
000000000004c25c	ret
000000000004c260	mov	w0, #-0x1
000000000004c264	ret
_timesTenToTheEHighPrecision:
000000000004c268	cbz	w2, 0x4c628
000000000004c26c	cmp	w2, #0x13
000000000004c270	b.lt	0x4c348
000000000004c274	mov	w8, #0x2304
000000000004c278	movk	w8, #0x8ac7, lsl #16
000000000004c27c	add	x9, x0, #0x4
000000000004c280	mov	w10, #-0x76180000
000000000004c284	b	0x4c298
000000000004c288	sub	w11, w2, #0x13
000000000004c28c	cmp	w2, #0x25
000000000004c290	mov	x2, x11
000000000004c294	b.le	0x4c34c
000000000004c298	mov	x12, #0x0
000000000004c29c	mov	w14, #0x0
000000000004c2a0	mov	w11, #0x0
000000000004c2a4	mov	w15, #0x0
000000000004c2a8	mov	x13, x9
000000000004c2ac	b	0x4c2c0
000000000004c2b0	add	w11, w11, #0x1
000000000004c2b4	add	x13, x13, #0x8
000000000004c2b8	cmp	w11, w1
000000000004c2bc	b.ge	0x4c330
000000000004c2c0	ldur	x17, [x13, #-0x4]
000000000004c2c4	mov	w16, w14
000000000004c2c8	bfi	x16, x15, #32, #32
000000000004c2cc	orr	x3, x16, x17
000000000004c2d0	cbz	x3, 0x4c2b0
000000000004c2d4	and	x14, x17, #0xffffffff
000000000004c2d8	mul	x15, x14, x10
000000000004c2dc	adds	x15, x15, x16
000000000004c2e0	cset	w17, hs
000000000004c2e4	cmp	x15, x16
000000000004c2e8	cset	w16, lo
000000000004c2ec	orr	w16, w17, w16
000000000004c2f0	ldr	w17, [x13]
000000000004c2f4	mul	x3, x17, x10
000000000004c2f8	mul	x14, x14, x8
000000000004c2fc	add	x12, x14, x12
000000000004c300	add	x12, x12, x15, lsr #32
000000000004c304	adds	x3, x12, x3
000000000004c308	cset	w12, hs
000000000004c30c	cmp	x3, x14
000000000004c310	cset	w14, lo
000000000004c314	orr	w12, w12, w14
000000000004c318	stp	w15, w3, [x13, #-0x4]
000000000004c31c	mul	x14, x17, x8
000000000004c320	orr	x14, x14, x16
000000000004c324	add	x14, x14, x3, lsr #32
000000000004c328	lsr	x15, x14, #32
000000000004c32c	b	0x4c2b0
000000000004c330	mov	w11, w14
000000000004c334	bfi	x11, x15, #32, #32
000000000004c338	cbz	x11, 0x4c288
000000000004c33c	str	x11, [x0, w1, sxtw #3]
000000000004c340	add	w1, w1, #0x1
000000000004c344	b	0x4c288
000000000004c348	mov	x11, x2
000000000004c34c	cmp	w11, #0x9
000000000004c350	b.lt	0x4c3bc
000000000004c354	mov	w8, #0xca00
000000000004c358	movk	w8, #0x3b9a, lsl #16
000000000004c35c	add	x9, x0, #0x4
000000000004c360	b	0x4c374
000000000004c364	sub	w10, w11, #0x9
000000000004c368	cmp	w11, #0x11
000000000004c36c	mov	x11, x10
000000000004c370	b.le	0x4c3c0
000000000004c374	mov	x10, #0x0
000000000004c378	cmp	w1, #0x1
000000000004c37c	csinc	w12, w1, wzr, gt
000000000004c380	mov	x13, x9
000000000004c384	ldur	w14, [x13, #-0x4]
000000000004c388	madd	x10, x14, x8, x10
000000000004c38c	stur	w10, [x13, #-0x4]
000000000004c390	ldr	w14, [x13]
000000000004c394	mul	x14, x14, x8
000000000004c398	add	x14, x14, x10, lsr #32
000000000004c39c	lsr	x10, x14, #32
000000000004c3a0	str	w14, [x13], #0x8
000000000004c3a4	subs	x12, x12, #0x1
000000000004c3a8	b.ne	0x4c384
000000000004c3ac	cbz	x10, 0x4c364
000000000004c3b0	str	x10, [x0, w1, sxtw #3]
000000000004c3b4	add	w1, w1, #0x1
000000000004c3b8	b	0x4c364
000000000004c3bc	mov	x10, x11
000000000004c3c0	sub	w8, w10, #0x1
000000000004c3c4	cmp	w8, #0x7
000000000004c3c8	b.hi	0x4c628
000000000004c3cc	adr	x9, #0xbd08
000000000004c3d0	nop
000000000004c3d4	adr	x10, #0x10
000000000004c3d8	ldrb	w11, [x9, x8]
000000000004c3dc	add	x10, x10, x11, lsl #2
000000000004c3e0	br	x10
000000000004c3e4	mov	x8, #0x0
000000000004c3e8	cmp	w1, #0x1
000000000004c3ec	csinc	w9, w1, wzr, gt
000000000004c3f0	mov	w10, #0xa
000000000004c3f4	mov	x11, x0
000000000004c3f8	ldp	w12, w13, [x11]
000000000004c3fc	madd	x12, x12, x10, x8
000000000004c400	mul	x8, x13, x10
000000000004c404	add	x13, x8, x12, lsr #32
000000000004c408	lsr	x8, x13, #32
000000000004c40c	stp	w12, w13, [x11], #0x8
000000000004c410	subs	x9, x9, #0x1
000000000004c414	b.ne	0x4c3f8
000000000004c418	b	0x4c620
000000000004c41c	mov	x8, #0x0
000000000004c420	cmp	w1, #0x1
000000000004c424	csinc	w9, w1, wzr, gt
000000000004c428	mov	w10, #0xa
000000000004c42c	mov	x11, x0
000000000004c430	ldp	w12, w13, [x11]
000000000004c434	madd	x12, x12, x10, x8
000000000004c438	mul	x8, x13, x10
000000000004c43c	add	x13, x8, x12, lsr #32
000000000004c440	lsr	x8, x13, #32
000000000004c444	stp	w12, w13, [x11], #0x8
000000000004c448	subs	x9, x9, #0x1
000000000004c44c	b.ne	0x4c430
000000000004c450	cbz	x8, 0x4c45c
000000000004c454	str	x8, [x0, w1, sxtw #3]
000000000004c458	add	w1, w1, #0x1
000000000004c45c	mov	x8, #0x0
000000000004c460	cmp	w1, #0x1
000000000004c464	csinc	w9, w1, wzr, gt
000000000004c468	mov	w10, #0xa
000000000004c46c	mov	x11, x0
000000000004c470	ldp	w12, w13, [x11]
000000000004c474	madd	x12, x12, x10, x8
000000000004c478	mul	x8, x13, x10
000000000004c47c	add	x13, x8, x12, lsr #32
000000000004c480	lsr	x8, x13, #32
000000000004c484	stp	w12, w13, [x11], #0x8
000000000004c488	subs	x9, x9, #0x1
000000000004c48c	b.ne	0x4c470
000000000004c490	b	0x4c620
000000000004c494	mov	x8, #0x0
000000000004c498	cmp	w1, #0x1
000000000004c49c	csinc	w9, w1, wzr, gt
000000000004c4a0	add	x10, x0, #0x4
000000000004c4a4	mov	w11, #0x3e8
000000000004c4a8	ldur	w12, [x10, #-0x4]
000000000004c4ac	madd	x8, x12, x11, x8
000000000004c4b0	stur	w8, [x10, #-0x4]
000000000004c4b4	ldr	w12, [x10]
000000000004c4b8	mul	x12, x12, x11
000000000004c4bc	add	x12, x12, x8, lsr #32
000000000004c4c0	lsr	x8, x12, #32
000000000004c4c4	str	w12, [x10], #0x8
000000000004c4c8	subs	x9, x9, #0x1
000000000004c4cc	b.ne	0x4c4a8
000000000004c4d0	b	0x4c620
000000000004c4d4	mov	x8, #0x0
000000000004c4d8	cmp	w1, #0x1
000000000004c4dc	csinc	w9, w1, wzr, gt
000000000004c4e0	add	x10, x0, #0x4
000000000004c4e4	mov	w11, #0x2710
000000000004c4e8	ldur	w12, [x10, #-0x4]
000000000004c4ec	madd	x8, x12, x11, x8
000000000004c4f0	stur	w8, [x10, #-0x4]
000000000004c4f4	ldr	w12, [x10]
000000000004c4f8	mul	x12, x12, x11
000000000004c4fc	add	x12, x12, x8, lsr #32
000000000004c500	lsr	x8, x12, #32
000000000004c504	str	w12, [x10], #0x8
000000000004c508	subs	x9, x9, #0x1
000000000004c50c	b.ne	0x4c4e8
000000000004c510	b	0x4c620
000000000004c514	mov	x8, #0x0
000000000004c518	mov	w9, #0x86a0
000000000004c51c	movk	w9, #0x1, lsl #16
000000000004c520	cmp	w1, #0x1
000000000004c524	csinc	w10, w1, wzr, gt
000000000004c528	add	x11, x0, #0x4
000000000004c52c	ldur	w12, [x11, #-0x4]
000000000004c530	madd	x8, x12, x9, x8
000000000004c534	stur	w8, [x11, #-0x4]
000000000004c538	ldr	w12, [x11]
000000000004c53c	mul	x12, x12, x9
000000000004c540	add	x12, x12, x8, lsr #32
000000000004c544	lsr	x8, x12, #32
000000000004c548	str	w12, [x11], #0x8
000000000004c54c	subs	x10, x10, #0x1
000000000004c550	b.ne	0x4c52c
000000000004c554	b	0x4c620
000000000004c558	mov	x8, #0x0
000000000004c55c	mov	w9, #0x4240
000000000004c560	movk	w9, #0xf, lsl #16
000000000004c564	cmp	w1, #0x1
000000000004c568	csinc	w10, w1, wzr, gt
000000000004c56c	add	x11, x0, #0x4
000000000004c570	ldur	w12, [x11, #-0x4]
000000000004c574	madd	x8, x12, x9, x8
000000000004c578	stur	w8, [x11, #-0x4]
000000000004c57c	ldr	w12, [x11]
000000000004c580	mul	x12, x12, x9
000000000004c584	add	x12, x12, x8, lsr #32
000000000004c588	lsr	x8, x12, #32
000000000004c58c	str	w12, [x11], #0x8
000000000004c590	subs	x10, x10, #0x1
000000000004c594	b.ne	0x4c570
000000000004c598	b	0x4c620
000000000004c59c	mov	x8, #0x0
000000000004c5a0	mov	w9, #0x9680
000000000004c5a4	movk	w9, #0x98, lsl #16
000000000004c5a8	cmp	w1, #0x1
000000000004c5ac	csinc	w10, w1, wzr, gt
000000000004c5b0	add	x11, x0, #0x4
000000000004c5b4	ldur	w12, [x11, #-0x4]
000000000004c5b8	madd	x8, x12, x9, x8
000000000004c5bc	stur	w8, [x11, #-0x4]
000000000004c5c0	ldr	w12, [x11]
000000000004c5c4	mul	x12, x12, x9
000000000004c5c8	add	x12, x12, x8, lsr #32
000000000004c5cc	lsr	x8, x12, #32
000000000004c5d0	str	w12, [x11], #0x8
000000000004c5d4	subs	x10, x10, #0x1
000000000004c5d8	b.ne	0x4c5b4
000000000004c5dc	b	0x4c620
000000000004c5e0	mov	x8, #0x0
000000000004c5e4	mov	w9, #0xe100
000000000004c5e8	movk	w9, #0x5f5, lsl #16
000000000004c5ec	cmp	w1, #0x1
000000000004c5f0	csinc	w10, w1, wzr, gt
000000000004c5f4	add	x11, x0, #0x4
000000000004c5f8	ldur	w12, [x11, #-0x4]
000000000004c5fc	madd	x8, x12, x9, x8
000000000004c600	stur	w8, [x11, #-0x4]
000000000004c604	ldr	w12, [x11]
000000000004c608	mul	x12, x12, x9
000000000004c60c	add	x12, x12, x8, lsr #32
000000000004c610	lsr	x8, x12, #32
000000000004c614	str	w12, [x11], #0x8
000000000004c618	subs	x10, x10, #0x1
000000000004c61c	b.ne	0x4c5f8
000000000004c620	cbz	x8, 0x4c628
000000000004c624	str	x8, [x0, w1, sxtw #3]
000000000004c628	ret
_Kotlin_Any_equals:
000000000004c62c	cmp	x0, x1
000000000004c630	cset	w0, eq
000000000004c634	ret
_Kotlin_getCurrentStackTrace:
000000000004c638	sub	sp, sp, #0x80
000000000004c63c	stp	x28, x27, [sp, #0x20]
000000000004c640	stp	x26, x25, [sp, #0x30]
000000000004c644	stp	x24, x23, [sp, #0x40]
000000000004c648	stp	x22, x21, [sp, #0x50]
000000000004c64c	stp	x20, x19, [sp, #0x60]
000000000004c650	stp	x29, x30, [sp, #0x70]
000000000004c654	add	x29, sp, #0x70
000000000004c658	mov	x21, x0
000000000004c65c	adrp	x19, 46 ; 0x7a000
000000000004c660	add	x19, x19, #0x4e0
000000000004c664	ldr	x23, [x19]
000000000004c668	mov	x0, x19
000000000004c66c	blr	x23
000000000004c670	ldr	x27, [x0]
000000000004c674	add	x22, x27, #0x138
000000000004c678	mov	w8, #0x1
000000000004c67c	ldaxr	w26, [x22]
000000000004c680	stlxr	w9, w8, [x22]
000000000004c684	cbnz	w9, 0x4c67c
000000000004c688	mov	x24, sp
000000000004c68c	mov	x0, sp
000000000004c690	bl	__ZN6kotlin10StackTraceILm18446744073709551615EE7currentEm
000000000004c694	ldp	x20, x25, [sp]
000000000004c698	cbz	x27, 0x4c6cc
000000000004c69c	ldaxr	w8, [x22]
000000000004c6a0	stlxr	w9, w26, [x22]
000000000004c6a4	cbnz	w9, 0x4c69c
000000000004c6a8	cbnz	w26, 0x4c6cc
000000000004c6ac	cmp	w8, #0x1
000000000004c6b0	b.ne	0x4c6cc
000000000004c6b4	adr	x8, #0x47e55
000000000004c6b8	nop
000000000004c6bc	ldarb	w8, [x8]
000000000004c6c0	tbz	w8, #0x0, 0x4c6cc
000000000004c6c4	mov	x0, x22
000000000004c6c8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c6cc	str	xzr, [sp, #0x18]
000000000004c6d0	mov	x0, x19
000000000004c6d4	blr	x23
000000000004c6d8	ldr	x8, [x0]
000000000004c6dc	ldr	x9, [x8, #0x110]
000000000004c6e0	str	x24, [x8, #0x110]
000000000004c6e4	mov	x10, #0x400000000
000000000004c6e8	stp	x9, x10, [sp, #0x8]
000000000004c6ec	sub	x24, x25, x20
000000000004c6f0	asr	x25, x24, #3
000000000004c6f4	tbnz	w25, #0x1f, 0x4c7c4
000000000004c6f8	ldr	x8, [x8, #0x118]
000000000004c6fc	and	x9, x24, #0x7fffffff8
000000000004c700	add	x9, x9, #0x1f
000000000004c704	and	x1, x9, #0xffffffff8
000000000004c708	add	x0, x8, #0x70
000000000004c70c	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004c710	adr	x8, #0x16460
000000000004c714	nop
000000000004c718	mov	x22, x0
000000000004c71c	str	x8, [x22, #0x10]!
000000000004c720	str	xzr, [x0, #0x18]
000000000004c724	str	xzr, [x0, #0x8]
000000000004c728	str	w25, [x0, #0x18]
000000000004c72c	str	x22, [sp, #0x18]
000000000004c730	cbz	x24, 0x4c774
000000000004c734	mov	x8, #0x0
000000000004c738	cmp	x25, #0x1
000000000004c73c	csinc	x9, x25, xzr, hi
000000000004c740	add	x10, x0, #0x20
000000000004c744	ubfx	x11, x24, #3, #32
000000000004c748	mov	x12, #0x100000000
000000000004c74c	mov	x13, x20
000000000004c750	cbz	x11, 0x4c7bc
000000000004c754	ldr	x14, [x13], #0x8
000000000004c758	asr	x15, x8, #29
000000000004c75c	ldr	xzr, [x22]
000000000004c760	str	x14, [x10, x15]
000000000004c764	add	x8, x8, x12
000000000004c768	sub	x11, x11, #0x1
000000000004c76c	sub	x9, x9, #0x1
000000000004c770	cbnz	x9, 0x4c750
000000000004c774	str	x22, [x21]
000000000004c778	mov	x0, x19
000000000004c77c	blr	x23
000000000004c780	ldr	x8, [x0]
000000000004c784	ldr	x9, [sp, #0x8]
000000000004c788	str	x9, [x8, #0x110]
000000000004c78c	cbz	x20, 0x4c798
000000000004c790	mov	x0, x20
000000000004c794	bl	0x55b7c ; symbol stub for: _free
000000000004c798	mov	x0, x22
000000000004c79c	ldp	x29, x30, [sp, #0x70]
000000000004c7a0	ldp	x20, x19, [sp, #0x60]
000000000004c7a4	ldp	x22, x21, [sp, #0x50]
000000000004c7a8	ldp	x24, x23, [sp, #0x40]
000000000004c7ac	ldp	x26, x25, [sp, #0x30]
000000000004c7b0	ldp	x28, x27, [sp, #0x20]
000000000004c7b4	add	sp, sp, #0x80
000000000004c7b8	ret
000000000004c7bc	bl	_ThrowArrayIndexOutOfBoundsException
000000000004c7c0	b	0x4c7c8
000000000004c7c4	bl	_ThrowIllegalArgumentException
000000000004c7c8	brk	#0x1
000000000004c7cc	b	0x4c7d0
000000000004c7d0	mov	x21, x0
000000000004c7d4	mov	x0, x19
000000000004c7d8	blr	x23
000000000004c7dc	ldr	x8, [x0]
000000000004c7e0	ldr	x9, [sp, #0x8]
000000000004c7e4	str	x9, [x8, #0x110]
000000000004c7e8	cbz	x20, 0x4c7f4
000000000004c7ec	mov	x0, x20
000000000004c7f0	bl	0x55b7c ; symbol stub for: _free
000000000004c7f4	mov	x0, x21
000000000004c7f8	bl	0x558ac ; symbol stub for: __Unwind_Resume
_CallInitGlobalPossiblyLock:
000000000004c7fc	stp	x22, x21, [sp, #-0x30]!
000000000004c800	stp	x20, x19, [sp, #0x10]
000000000004c804	stp	x29, x30, [sp, #0x20]
000000000004c808	add	x29, sp, #0x20
000000000004c80c	ldar	w21, [x0]
000000000004c810	cmp	w21, #0x2
000000000004c814	b.eq	0x4c938
000000000004c818	cmp	w21, #0x3
000000000004c81c	b.eq	0x4c948
000000000004c820	mov	x20, x1
000000000004c824	mov	x19, x0
000000000004c828	bl	__ZN5konan15currentThreadIdEv
000000000004c82c	and	w8, w21, #0x3
000000000004c830	cmp	w8, #0x1
000000000004c834	b.ne	0x4c89c
000000000004c838	and	w8, w21, #0xfffffffc
000000000004c83c	cmp	w8, w0, lsl #2
000000000004c840	b.eq	0x4c938
000000000004c844	adrp	x0, 46 ; 0x7a000
000000000004c848	add	x0, x0, #0x4e0
000000000004c84c	ldr	x8, [x0]
000000000004c850	blr	x8
000000000004c854	ldr	x9, [x0]
000000000004c858	add	x0, x9, #0x138
000000000004c85c	mov	w10, #0x1
000000000004c860	ldaxr	w8, [x0]
000000000004c864	stlxr	w11, w10, [x0]
000000000004c868	cbnz	w11, 0x4c860
000000000004c86c	ldar	w20, [x19]
000000000004c870	and	w10, w20, #0xfffffffe
000000000004c874	cmp	w10, #0x2
000000000004c878	b.ne	0x4c86c
000000000004c87c	cbz	x9, 0x4c930
000000000004c880	ldaxr	w9, [x0]
000000000004c884	stlxr	w10, w8, [x0]
000000000004c888	cbnz	w10, 0x4c880
000000000004c88c	cbnz	w8, 0x4c930
000000000004c890	cmp	w9, #0x1
000000000004c894	b.eq	0x4c91c
000000000004c898	b	0x4c930
000000000004c89c	mov	w8, #0x1
000000000004c8a0	bfi	w8, w0, #2, #30
000000000004c8a4	ldaxr	w9, [x19]
000000000004c8a8	cbnz	w9, 0x4c8c4
000000000004c8ac	stlxr	w9, w8, [x19]
000000000004c8b0	cbnz	w9, 0x4c8a4
000000000004c8b4	blr	x20
000000000004c8b8	mov	w8, #0x2
000000000004c8bc	stlr	w8, [x19]
000000000004c8c0	b	0x4c938
000000000004c8c4	clrex
000000000004c8c8	adrp	x0, 46 ; 0x7a000
000000000004c8cc	add	x0, x0, #0x4e0
000000000004c8d0	ldr	x8, [x0]
000000000004c8d4	blr	x8
000000000004c8d8	ldr	x8, [x0]
000000000004c8dc	add	x0, x8, #0x138
000000000004c8e0	mov	w10, #0x1
000000000004c8e4	ldaxr	w9, [x0]
000000000004c8e8	stlxr	w11, w10, [x0]
000000000004c8ec	cbnz	w11, 0x4c8e4
000000000004c8f0	ldar	w20, [x19]
000000000004c8f4	and	w10, w20, #0xfffffffe
000000000004c8f8	cmp	w10, #0x2
000000000004c8fc	b.ne	0x4c8f0
000000000004c900	cbz	x8, 0x4c930
000000000004c904	ldaxr	w8, [x0]
000000000004c908	stlxr	w10, w9, [x0]
000000000004c90c	cbnz	w10, 0x4c904
000000000004c910	cbnz	w9, 0x4c930
000000000004c914	cmp	w8, #0x1
000000000004c918	b.ne	0x4c930
000000000004c91c	adr	x8, #0x47bed
000000000004c920	nop
000000000004c924	ldarb	w8, [x8]
000000000004c928	tbz	w8, #0x0, 0x4c930
000000000004c92c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004c930	cmp	w20, #0x3
000000000004c934	b.eq	0x4c948
000000000004c938	ldp	x29, x30, [sp, #0x20]
000000000004c93c	ldp	x20, x19, [sp, #0x10]
000000000004c940	ldp	x22, x21, [sp], #0x30
000000000004c944	ret
000000000004c948	bl	_ThrowFileFailedToInitializeException
000000000004c94c	bl	0x55a44 ; symbol stub for: ___cxa_begin_catch
000000000004c950	mov	w8, #0x3
000000000004c954	stlr	w8, [x19]
000000000004c958	bl	0x55a74 ; symbol stub for: ___cxa_rethrow
000000000004c95c	brk	#0x1
000000000004c960	mov	x19, x0
000000000004c964	bl	0x55a50 ; symbol stub for: ___cxa_end_catch
000000000004c968	mov	x0, x19
000000000004c96c	bl	0x558ac ; symbol stub for: __Unwind_Resume
_Kotlin_Long_toStringRadix:
000000000004c970	cbz	x0, 0x4c998
000000000004c974	sub	sp, sp, #0x60
000000000004c978	stp	x29, x30, [sp, #0x50]
000000000004c97c	add	x29, sp, #0x50
000000000004c980	cmp	x0, #0x0
000000000004c984	cneg	x8, x0, mi
000000000004c988	negs	x10, x8
000000000004c98c	b.mi	0x4c9a8
000000000004c990	mov	w8, #0x0
000000000004c994	b	0x4c9e4
000000000004c998	adr	x0, #0x10b08 ; literal pool for: "0"
000000000004c99c	nop
000000000004c9a0	mov	x1, x2
000000000004c9a4	b	_CreateStringFromCString
000000000004c9a8	mov	x8, #0x0
000000000004c9ac	mov	w9, #0x57
000000000004c9b0	mov	w11, #0x30
000000000004c9b4	add	x12, sp, #0xe
000000000004c9b8	mov	w13, w1
000000000004c9bc	sdiv	x14, x10, x13
000000000004c9c0	neg	w10, w10
000000000004c9c4	madd	w10, w14, w13, w10
000000000004c9c8	cmp	w10, #0xa
000000000004c9cc	csel	w15, w11, w9, lo
000000000004c9d0	add	w10, w15, w10
000000000004c9d4	strb	w10, [x12, x8]
000000000004c9d8	add	x8, x8, #0x1
000000000004c9dc	mov	x10, x14
000000000004c9e0	tbnz	x14, #0x3f, 0x4c9bc
000000000004c9e4	tbnz	x0, #0x3f, 0x4ca24
000000000004c9e8	cmp	w8, #0x1
000000000004c9ec	b.le	0x4ca3c
000000000004c9f0	mov	x9, #0x0
000000000004c9f4	mov	w8, w8
000000000004c9f8	sub	x10, x8, #0x1
000000000004c9fc	add	x11, sp, #0xe
000000000004ca00	ldrb	w12, [x11, x9]
000000000004ca04	ldrb	w13, [x11, x10]
000000000004ca08	strb	w13, [x11, x9]
000000000004ca0c	strb	w12, [x11, x10]
000000000004ca10	add	x9, x9, #0x1
000000000004ca14	sub	x10, x10, #0x1
000000000004ca18	cmp	x9, x10
000000000004ca1c	b.lt	0x4ca00
000000000004ca20	b	0x4ca40
000000000004ca24	add	x9, sp, #0xe
000000000004ca28	mov	w10, #0x2d
000000000004ca2c	strb	w10, [x9, w8, uxtw]
000000000004ca30	add	w8, w8, #0x1
000000000004ca34	cmp	w8, #0x1
000000000004ca38	b.gt	0x4c9f0
000000000004ca3c	sxtw	x8, w8
000000000004ca40	add	x9, sp, #0xe
000000000004ca44	strb	wzr, [x9, x8]
000000000004ca48	add	x0, sp, #0xe
000000000004ca4c	mov	x1, x2
000000000004ca50	bl	_CreateStringFromCString
000000000004ca54	ldp	x29, x30, [sp, #0x50]
000000000004ca58	add	sp, sp, #0x60
000000000004ca5c	ret
_Kotlin_String_plusImpl:
000000000004ca60	stp	x24, x23, [sp, #-0x40]!
000000000004ca64	stp	x22, x21, [sp, #0x10]
000000000004ca68	stp	x20, x19, [sp, #0x20]
000000000004ca6c	stp	x29, x30, [sp, #0x30]
000000000004ca70	add	x29, sp, #0x30
000000000004ca74	ldr	w8, [x0, #0x8]
000000000004ca78	ldr	w9, [x1, #0x8]
000000000004ca7c	adds	w23, w9, w8
000000000004ca80	b.mi	0x4cb24
000000000004ca84	mov	x19, x2
000000000004ca88	mov	x20, x1
000000000004ca8c	mov	x21, x0
000000000004ca90	adrp	x0, 46 ; 0x7a000
000000000004ca94	add	x0, x0, #0x4e0
000000000004ca98	ldr	x8, [x0]
000000000004ca9c	blr	x8
000000000004caa0	ldr	x8, [x0]
000000000004caa4	ldr	x8, [x8, #0x118]
000000000004caa8	lsl	x9, x23, #1
000000000004caac	add	x9, x9, #0x1f
000000000004cab0	and	x1, x9, #0x3fffffff8
000000000004cab4	add	x0, x8, #0x70
000000000004cab8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004cabc	mov	x22, x0
000000000004cac0	stp	xzr, xzr, [x22, #0x10]!
000000000004cac4	adr	x8, #0x155ac
000000000004cac8	nop
000000000004cacc	stp	xzr, x8, [x22, #-0x8]
000000000004cad0	str	w23, [x22, #0x8]
000000000004cad4	str	x22, [x19]
000000000004cad8	add	x23, x22, #0x10
000000000004cadc	add	x1, x21, #0x10
000000000004cae0	ldr	w8, [x21, #0x8]
000000000004cae4	lsl	x2, x8, #1
000000000004cae8	mov	x0, x23
000000000004caec	bl	0x55bd0 ; symbol stub for: _memcpy
000000000004caf0	ldrsw	x8, [x21, #0x8]
000000000004caf4	add	x0, x23, x8, lsl #1
000000000004caf8	add	x1, x20, #0x10
000000000004cafc	ldr	w8, [x20, #0x8]
000000000004cb00	lsl	x2, x8, #1
000000000004cb04	bl	0x55bd0 ; symbol stub for: _memcpy
000000000004cb08	str	x22, [x19]
000000000004cb0c	mov	x0, x22
000000000004cb10	ldp	x29, x30, [sp, #0x30]
000000000004cb14	ldp	x20, x19, [sp, #0x20]
000000000004cb18	ldp	x22, x21, [sp, #0x10]
000000000004cb1c	ldp	x24, x23, [sp], #0x40
000000000004cb20	ret
000000000004cb24	bl	_ThrowArrayIndexOutOfBoundsException
_Kotlin_String_subSequence:
000000000004cb28	sub	sp, sp, #0x60
000000000004cb2c	stp	x24, x23, [sp, #0x20]
000000000004cb30	stp	x22, x21, [sp, #0x30]
000000000004cb34	stp	x20, x19, [sp, #0x40]
000000000004cb38	stp	x29, x30, [sp, #0x50]
000000000004cb3c	add	x29, sp, #0x50
000000000004cb40	tbnz	w1, #0x1f, 0x4cc54
000000000004cb44	mov	x20, x1
000000000004cb48	cmp	w2, w1
000000000004cb4c	b.lt	0x4cc54
000000000004cb50	mov	x21, x0
000000000004cb54	ldr	w8, [x0, #0x8]
000000000004cb58	cmp	w8, w2
000000000004cb5c	b.lo	0x4cc54
000000000004cb60	mov	x19, x3
000000000004cb64	subs	w23, w2, w20
000000000004cb68	b.ne	0x4cbd4
000000000004cb6c	str	xzr, [sp, #0x8]
000000000004cb70	adrp	x20, 46 ; 0x7a000
000000000004cb74	add	x20, x20, #0x4e0
000000000004cb78	ldr	x21, [x20]
000000000004cb7c	mov	x0, x20
000000000004cb80	blr	x21
000000000004cb84	ldr	x8, [x0]
000000000004cb88	ldr	x9, [x8, #0x110]
000000000004cb8c	add	x10, sp, #0x8
000000000004cb90	str	x10, [x8, #0x110]
000000000004cb94	mov	x8, #0x300000000
000000000004cb98	stp	x9, x8, [sp, #0x10]
000000000004cb9c	adr	x8, #0x4796d
000000000004cba0	nop
000000000004cba4	ldarb	w8, [x8]
000000000004cba8	tbz	w8, #0x0, 0x4cbb0
000000000004cbac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004cbb0	adr	x22, #0x21570
000000000004cbb4	nop
000000000004cbb8	str	x22, [x19]
000000000004cbbc	mov	x0, x20
000000000004cbc0	blr	x21
000000000004cbc4	ldr	x8, [x0]
000000000004cbc8	ldr	x9, [sp, #0x10]
000000000004cbcc	str	x9, [x8, #0x110]
000000000004cbd0	b	0x4cc38
000000000004cbd4	b.mi	0x4cc58
000000000004cbd8	adrp	x0, 46 ; 0x7a000
000000000004cbdc	add	x0, x0, #0x4e0
000000000004cbe0	ldr	x8, [x0]
000000000004cbe4	blr	x8
000000000004cbe8	ldr	x8, [x0]
000000000004cbec	ldr	x8, [x8, #0x118]
000000000004cbf0	lsl	x9, x23, #1
000000000004cbf4	add	x9, x9, #0x1f
000000000004cbf8	and	x1, x9, #0x3fffffff8
000000000004cbfc	add	x0, x8, #0x70
000000000004cc00	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004cc04	mov	x22, x0
000000000004cc08	adr	x8, #0x15468
000000000004cc0c	nop
000000000004cc10	stp	x8, xzr, [x22, #0x10]!
000000000004cc14	stur	xzr, [x22, #-0x8]
000000000004cc18	str	w23, [x22, #0x8]
000000000004cc1c	str	x22, [x19]
000000000004cc20	add	x0, x22, #0x10
000000000004cc24	add	x8, x21, w20, uxtw #1
000000000004cc28	add	x1, x8, #0x10
000000000004cc2c	sbfiz	x2, x23, #1, #32
000000000004cc30	bl	0x55bd0 ; symbol stub for: _memcpy
000000000004cc34	str	x22, [x19]
000000000004cc38	mov	x0, x22
000000000004cc3c	ldp	x29, x30, [sp, #0x50]
000000000004cc40	ldp	x20, x19, [sp, #0x40]
000000000004cc44	ldp	x22, x21, [sp, #0x30]
000000000004cc48	ldp	x24, x23, [sp, #0x20]
000000000004cc4c	add	sp, sp, #0x60
000000000004cc50	ret
000000000004cc54	bl	_ThrowArrayIndexOutOfBoundsException
000000000004cc58	bl	_ThrowIllegalArgumentException
_Kotlin_String_compareTo:
000000000004cc5c	add	x8, x0, #0x10
000000000004cc60	add	x9, x1, #0x10
000000000004cc64	ldr	w10, [x1, #0x8]
000000000004cc68	ldr	w11, [x0, #0x8]
000000000004cc6c	cmp	w10, w11
000000000004cc70	csel	w12, w10, w11, lo
000000000004cc74	lsr	w13, w12, #2
000000000004cc78	cbz	w13, 0x4cca0
000000000004cc7c	mov	x14, #0x0
000000000004cc80	lsl	x15, x14, #3
000000000004cc84	ldr	x16, [x8, x15]
000000000004cc88	ldr	x15, [x9, x15]
000000000004cc8c	cmp	x16, x15
000000000004cc90	b.ne	0x4ccb0
000000000004cc94	add	x14, x14, #0x1
000000000004cc98	cmp	x13, x14
000000000004cc9c	b.ne	0x4cc80
000000000004cca0	lsl	w14, w13, #2
000000000004cca4	cmp	w14, w12
000000000004cca8	b.lo	0x4ccc0
000000000004ccac	b	0x4cd08
000000000004ccb0	mov	x13, x14
000000000004ccb4	lsl	w14, w13, #2
000000000004ccb8	cmp	w14, w12
000000000004ccbc	b.hs	0x4cd08
000000000004ccc0	mov	w13, w13
000000000004ccc4	lsl	x13, x13, #2
000000000004ccc8	sub	w12, w12, w14
000000000004cccc	lsl	x14, x13, #1
000000000004ccd0	ldrh	w15, [x8, x14]
000000000004ccd4	ldrh	w14, [x9, x14]
000000000004ccd8	cmp	w15, w14
000000000004ccdc	b.ne	0x4ccf0
000000000004cce0	add	x13, x13, #0x1
000000000004cce4	subs	w12, w12, #0x1
000000000004cce8	b.ne	0x4cccc
000000000004ccec	b	0x4cd08
000000000004ccf0	cbz	w12, 0x4cd08
000000000004ccf4	ubfiz	x10, x13, #1, #32
000000000004ccf8	ldrh	w8, [x8, x10]
000000000004ccfc	ldrh	w9, [x9, x10]
000000000004cd00	cmp	w8, w9
000000000004cd04	b	0x4cd0c
000000000004cd08	cmp	w11, w10
000000000004cd0c	cset	w8, eq
000000000004cd10	cset	w9, lo
000000000004cd14	cmp	w9, #0x0
000000000004cd18	mov	w9, #-0x1
000000000004cd1c	cneg	w9, w9, eq
000000000004cd20	cmp	w8, #0x0
000000000004cd24	csel	w0, wzr, w9, ne
000000000004cd28	ret
_Kotlin_String_get:
000000000004cd2c	stp	x29, x30, [sp, #-0x10]!
000000000004cd30	mov	x29, sp
000000000004cd34	ldr	w8, [x0, #0x8]
000000000004cd38	cmp	w8, w1
000000000004cd3c	b.ls	0x4cd50
000000000004cd40	add	x8, x0, w1, sxtw #1
000000000004cd44	ldrh	w0, [x8, #0x10]
000000000004cd48	ldp	x29, x30, [sp], #0x10
000000000004cd4c	ret
000000000004cd50	bl	_ThrowArrayIndexOutOfBoundsException
_Kotlin_String_equals:
000000000004cd54	stp	x29, x30, [sp, #-0x10]!
000000000004cd58	mov	x29, sp
000000000004cd5c	cbz	x1, 0x4cd7c
000000000004cd60	ldr	x8, [x1]
000000000004cd64	and	x8, x8, #0xfffffffffffffffc
000000000004cd68	ldr	x8, [x8]
000000000004cd6c	adr	x9, #0x15304
000000000004cd70	nop
000000000004cd74	cmp	x8, x9
000000000004cd78	b.eq	0x4cd88
000000000004cd7c	mov	w0, #0x0
000000000004cd80	ldp	x29, x30, [sp], #0x10
000000000004cd84	ret
000000000004cd88	cmp	x1, x0
000000000004cd8c	b.eq	0x4cdc0
000000000004cd90	ldr	w8, [x0, #0x8]
000000000004cd94	ldr	w9, [x1, #0x8]
000000000004cd98	cmp	w8, w9
000000000004cd9c	b.ne	0x4cd7c
000000000004cda0	add	x0, x0, #0x10
000000000004cda4	add	x1, x1, #0x10
000000000004cda8	lsl	x2, x8, #1
000000000004cdac	bl	0x55bc4 ; symbol stub for: _memcmp
000000000004cdb0	cmp	w0, #0x0
000000000004cdb4	cset	w0, eq
000000000004cdb8	ldp	x29, x30, [sp], #0x10
000000000004cdbc	ret
000000000004cdc0	mov	w0, #0x1
000000000004cdc4	ldp	x29, x30, [sp], #0x10
000000000004cdc8	ret
_Kotlin_String_hashCode:
000000000004cdcc	stp	d9, d8, [sp, #-0x10]!
000000000004cdd0	ldrsw	x9, [x0, #0x8]
000000000004cdd4	add	x8, x0, #0x10
000000000004cdd8	add	w10, w9, #0x3
000000000004cddc	cmp	w9, #0x0
000000000004cde0	csel	w10, w10, w9, lt
000000000004cde4	asr	w11, w10, #2
000000000004cde8	adrp	x10, 11 ; 0x57000
000000000004cdec	movi.16b	v0, #0x0
000000000004cdf0	cmp	w9, #0x1e8
000000000004cdf4	b.ge	0x4cf04
000000000004cdf8	cmp	w9, #0x10
000000000004cdfc	b.lt	0x4ce90
000000000004ce00	mov	w12, #0xde01
000000000004ce04	movk	w12, #0x50a9, lsl #16
000000000004ce08	dup.4s	v1, w12
000000000004ce0c	nop
000000000004ce10	ldr	q2, 0x58090
000000000004ce14	nop
000000000004ce18	ldr	q3, 0x580a0
000000000004ce1c	nop
000000000004ce20	ldr	q4, 0x580b0
000000000004ce24	movi.16b	v5, #0x0
000000000004ce28	movi.16b	v6, #0x0
000000000004ce2c	movi.16b	v7, #0x0
000000000004ce30	ldr	d16, [x10, #0xfe8]
000000000004ce34	mov	x12, x11
000000000004ce38	ldp	d17, d18, [x8]
000000000004ce3c	ushll.4s	v17, v17, #0x0
000000000004ce40	ushll.4s	v18, v18, #0x0
000000000004ce44	ldp	d19, d20, [x8, #0x10]
000000000004ce48	ushll.4s	v19, v19, #0x0
000000000004ce4c	mul.4s	v7, v7, v1
000000000004ce50	mul.4s	v6, v6, v1
000000000004ce54	mul.4s	v5, v5, v1
000000000004ce58	mul.4s	v0, v0, v1
000000000004ce5c	mla.4s	v7, v17, v2
000000000004ce60	mla.4s	v6, v18, v3
000000000004ce64	mla.4s	v5, v19, v4
000000000004ce68	umlal.4s	v0, v20, v16
000000000004ce6c	add	x8, x8, #0x20
000000000004ce70	sub	w11, w11, #0x4
000000000004ce74	cmp	w12, #0x7
000000000004ce78	b.gt	0x4ce34
000000000004ce7c	add.4s	v1, v6, v7
000000000004ce80	add.4s	v0, v0, v5
000000000004ce84	add.4s	v0, v0, v1
000000000004ce88	addv.4s	s0, v0
000000000004ce8c	dup.4s	v0, v0[0]
000000000004ce90	cmp	w11, #0x1
000000000004ce94	b.le	0x4d108
000000000004ce98	movi.16b	v1, #0x0
000000000004ce9c	mov	w12, #0x6f01
000000000004cea0	movk	w12, #0x9444, lsl #16
000000000004cea4	dup.4s	v2, w12
000000000004cea8	nop
000000000004ceac	ldr	q3, 0x580b0
000000000004ceb0	ldr	d5, [x10, #0xfe8]
000000000004ceb4	movi.16b	v4, #0x0
000000000004ceb8	mov	x12, x11
000000000004cebc	ldp	d6, d7, [x8], #0x10
000000000004cec0	ushll.4s	v6, v6, #0x0
000000000004cec4	mul.4s	v4, v4, v2
000000000004cec8	mul.4s	v1, v1, v2
000000000004cecc	mla.4s	v4, v6, v3
000000000004ced0	umlal.4s	v1, v7, v5
000000000004ced4	sub	w11, w11, #0x2
000000000004ced8	cmp	w12, #0x3
000000000004cedc	b.gt	0x4ceb8
000000000004cee0	mov	w12, #0x6f01
000000000004cee4	movk	w12, #0x9444, lsl #16
000000000004cee8	dup.4s	v2, w12
000000000004ceec	add.4s	v1, v1, v4
000000000004cef0	addv.4s	s1, v1
000000000004cef4	dup.4s	v1, v1[0]
000000000004cef8	mla.4s	v1, v0, v2
000000000004cefc	mov.16b	v0, v1
000000000004cf00	b	0x4d108
000000000004cf04	mov	w12, #0xbc01
000000000004cf08	movk	w12, #0x7dd7, lsl #16
000000000004cf0c	dup.4s	v5, w12
000000000004cf10	nop
000000000004cf14	ldr	q6, 0x58050
000000000004cf18	nop
000000000004cf1c	ldr	q7, 0x58060
000000000004cf20	nop
000000000004cf24	ldr	q16, 0x58070
000000000004cf28	nop
000000000004cf2c	ldr	q17, 0x58080
000000000004cf30	nop
000000000004cf34	ldr	q3, 0x58090
000000000004cf38	nop
000000000004cf3c	ldr	q4, 0x580a0
000000000004cf40	nop
000000000004cf44	movi.16b	v18, #0x0
000000000004cf48	movi.16b	v19, #0x0
000000000004cf4c	movi.16b	v20, #0x0
000000000004cf50	movi.16b	v21, #0x0
000000000004cf54	movi.16b	v22, #0x0
000000000004cf58	ldr	q1, 0x580b0
000000000004cf5c	movi.16b	v23, #0x0
000000000004cf60	movi.16b	v24, #0x0
000000000004cf64	ldr	d2, [x10, #0xfe8]
000000000004cf68	mov	x12, x11
000000000004cf6c	ldp	d25, d26, [x8]
000000000004cf70	ushll.4s	v25, v25, #0x0
000000000004cf74	ushll.4s	v26, v26, #0x0
000000000004cf78	ldp	d27, d28, [x8, #0x10]
000000000004cf7c	ushll.4s	v27, v27, #0x0
000000000004cf80	ushll.4s	v28, v28, #0x0
000000000004cf84	ldp	d29, d30, [x8, #0x20]
000000000004cf88	ushll.4s	v29, v29, #0x0
000000000004cf8c	ushll.4s	v30, v30, #0x0
000000000004cf90	mul.4s	v24, v24, v5
000000000004cf94	mul.4s	v23, v23, v5
000000000004cf98	ldp	d31, d8, [x8, #0x30]
000000000004cf9c	mul.4s	v22, v22, v5
000000000004cfa0	mul.4s	v21, v21, v5
000000000004cfa4	mul.4s	v20, v20, v5
000000000004cfa8	mul.4s	v19, v19, v5
000000000004cfac	mul.4s	v18, v18, v5
000000000004cfb0	mul.4s	v0, v0, v5
000000000004cfb4	ushll.4s	v31, v31, #0x0
000000000004cfb8	mla.4s	v24, v25, v6
000000000004cfbc	mla.4s	v23, v26, v7
000000000004cfc0	mla.4s	v22, v27, v16
000000000004cfc4	mla.4s	v21, v28, v17
000000000004cfc8	mla.4s	v20, v29, v3
000000000004cfcc	mla.4s	v19, v30, v4
000000000004cfd0	mla.4s	v18, v31, v1
000000000004cfd4	add	x8, x8, #0x40
000000000004cfd8	sub	w11, w11, #0x8
000000000004cfdc	umlal.4s	v0, v8, v2
000000000004cfe0	cmp	w12, #0xf
000000000004cfe4	b.gt	0x4cf68
000000000004cfe8	add.4s	v5, v23, v24
000000000004cfec	add.4s	v6, v21, v22
000000000004cff0	add.4s	v7, v19, v20
000000000004cff4	add.4s	v0, v0, v18
000000000004cff8	add.4s	v5, v6, v5
000000000004cffc	add.4s	v5, v5, v7
000000000004d000	add.4s	v0, v5, v0
000000000004d004	addv.4s	s0, v0
000000000004d008	dup.4s	v0, v0[0]
000000000004d00c	add	w12, w11, #0x8
000000000004d010	cmp	w12, #0xc
000000000004d014	b.lt	0x4d0a4
000000000004d018	movi.16b	v5, #0x0
000000000004d01c	mov	w12, #0xde01
000000000004d020	movk	w12, #0x50a9, lsl #16
000000000004d024	dup.4s	v7, w12
000000000004d028	movi.16b	v6, #0x0
000000000004d02c	movi.16b	v16, #0x0
000000000004d030	movi.16b	v17, #0x0
000000000004d034	mov	x12, x11
000000000004d038	ldp	d18, d19, [x8]
000000000004d03c	ushll.4s	v18, v18, #0x0
000000000004d040	ushll.4s	v19, v19, #0x0
000000000004d044	ldp	d20, d21, [x8, #0x10]
000000000004d048	ushll.4s	v20, v20, #0x0
000000000004d04c	mul.4s	v17, v17, v7
000000000004d050	mul.4s	v16, v16, v7
000000000004d054	mul.4s	v6, v6, v7
000000000004d058	mul.4s	v5, v5, v7
000000000004d05c	mla.4s	v17, v18, v3
000000000004d060	mla.4s	v16, v19, v4
000000000004d064	mla.4s	v6, v20, v1
000000000004d068	umlal.4s	v5, v21, v2
000000000004d06c	add	x8, x8, #0x20
000000000004d070	sub	w11, w11, #0x4
000000000004d074	cmp	w12, #0x7
000000000004d078	b.gt	0x4d034
000000000004d07c	mov	w12, #0xde01
000000000004d080	movk	w12, #0x50a9, lsl #16
000000000004d084	dup.4s	v3, w12
000000000004d088	add.4s	v4, v16, v17
000000000004d08c	add.4s	v5, v5, v6
000000000004d090	add.4s	v4, v5, v4
000000000004d094	addv.4s	s4, v4
000000000004d098	dup.4s	v4, v4[0]
000000000004d09c	mla.4s	v4, v0, v3
000000000004d0a0	mov.16b	v0, v4
000000000004d0a4	cmp	w11, #0x1
000000000004d0a8	b.le	0x4d108
000000000004d0ac	movi.16b	v3, #0x0
000000000004d0b0	mov	w12, #0x6f01
000000000004d0b4	movk	w12, #0x9444, lsl #16
000000000004d0b8	dup.4s	v5, w12
000000000004d0bc	movi.16b	v4, #0x0
000000000004d0c0	mov	x12, x11
000000000004d0c4	ldp	d6, d7, [x8], #0x10
000000000004d0c8	ushll.4s	v6, v6, #0x0
000000000004d0cc	mul.4s	v4, v4, v5
000000000004d0d0	mul.4s	v3, v3, v5
000000000004d0d4	mla.4s	v4, v6, v1
000000000004d0d8	umlal.4s	v3, v7, v2
000000000004d0dc	sub	w11, w11, #0x2
000000000004d0e0	cmp	w12, #0x3
000000000004d0e4	b.gt	0x4d0c0
000000000004d0e8	mov	w12, #0x6f01
000000000004d0ec	movk	w12, #0x9444, lsl #16
000000000004d0f0	dup.4s	v1, w12
000000000004d0f4	add.4s	v2, v3, v4
000000000004d0f8	addv.4s	s2, v2
000000000004d0fc	dup.4s	v2, v2[0]
000000000004d100	mla.4s	v2, v0, v1
000000000004d104	mov.16b	v0, v2
000000000004d108	cmp	w11, #0x1
000000000004d10c	b.lt	0x4d138
000000000004d110	ldr	d1, [x8]
000000000004d114	mov	w8, #0x1781
000000000004d118	movk	w8, #0xe, lsl #16
000000000004d11c	dup.4s	v2, w8
000000000004d120	ldr	d3, [x10, #0xfe8]
000000000004d124	umull.4s	v1, v1, v3
000000000004d128	addv.4s	s1, v1
000000000004d12c	dup.4s	v1, v1[0]
000000000004d130	mla.4s	v1, v0, v2
000000000004d134	mov.16b	v0, v1
000000000004d138	fmov	w8, s0
000000000004d13c	and	x10, x9, #0xfffffffffffffffc
000000000004d140	cmp	w10, w9
000000000004d144	b.ge	0x4d16c
000000000004d148	sub	x9, x9, x10
000000000004d14c	add	x10, x0, x10, lsl #1
000000000004d150	add	x10, x10, #0x10
000000000004d154	lsl	w11, w8, #5
000000000004d158	sub	w8, w11, w8
000000000004d15c	ldrh	w11, [x10], #0x2
000000000004d160	add	w8, w8, w11
000000000004d164	subs	x9, x9, #0x1
000000000004d168	b.ne	0x4d154
000000000004d16c	mov	x0, x8
000000000004d170	ldp	d9, d8, [sp], #0x10
000000000004d174	ret
-[KIteratorAsNSEnumerator dealloc]:
000000000004d178	sub	sp, sp, #0x60
000000000004d17c	stp	x26, x25, [sp, #0x10]
000000000004d180	stp	x24, x23, [sp, #0x20]
000000000004d184	stp	x22, x21, [sp, #0x30]
000000000004d188	stp	x20, x19, [sp, #0x40]
000000000004d18c	stp	x29, x30, [sp, #0x50]
000000000004d190	add	x29, sp, #0x50
000000000004d194	mov	x19, x0
000000000004d198	nop
000000000004d19c	ldrsw	x8, _OBJC_IVAR_$_RCKKIteratorAsNSEnumerator.iteratorHolder
000000000004d1a0	add	x24, x0, x8
000000000004d1a4	bl	_Kotlin_initRuntimeIfNeeded
000000000004d1a8	adrp	x21, 45 ; 0x7a000
000000000004d1ac	add	x21, x21, #0x4e0
000000000004d1b0	ldr	x25, [x21]
000000000004d1b4	mov	x0, x21
000000000004d1b8	blr	x25
000000000004d1bc	ldr	x8, [x0]
000000000004d1c0	add	x20, x8, #0x138
000000000004d1c4	ldaxr	w22, [x20]
000000000004d1c8	stlxr	w8, wzr, [x20]
000000000004d1cc	cbnz	w8, 0x4d1c4
000000000004d1d0	adr	x23, #0x47339
000000000004d1d4	nop
000000000004d1d8	cmp	w22, #0x1
000000000004d1dc	b.ne	0x4d1f0
000000000004d1e0	ldarb	w8, [x23]
000000000004d1e4	tbz	w8, #0x0, 0x4d1f0
000000000004d1e8	mov	x0, x20
000000000004d1ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d1f0	ldr	x8, [x24]
000000000004d1f4	cbz	x8, 0x4d210
000000000004d1f8	ldr	x1, [x24, #0x8]
000000000004d1fc	mov	x0, x21
000000000004d200	blr	x25
000000000004d204	ldr	x8, [x0]
000000000004d208	add	x0, x8, #0x8
000000000004d20c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004d210	ldaxr	w8, [x20]
000000000004d214	stlxr	w9, w22, [x20]
000000000004d218	cbnz	w9, 0x4d210
000000000004d21c	cbnz	w22, 0x4d238
000000000004d220	cmp	w8, #0x1
000000000004d224	b.ne	0x4d238
000000000004d228	ldarb	w8, [x23]
000000000004d22c	tbz	w8, #0x0, 0x4d238
000000000004d230	mov	x0, x20
000000000004d234	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d238	nop
000000000004d23c	ldr	x8, #0x29eac ; Objc class ref: RCKKIteratorAsNSEnumerator
000000000004d240	stp	x19, x8, [sp]
000000000004d244	nop
000000000004d248	ldr	x1, #0x29a28 ; Objc selector ref: dealloc
000000000004d24c	mov	x0, sp
000000000004d250	bl	0x55cb4 ; Objc message: -[[x0 super] dealloc]
000000000004d254	ldp	x29, x30, [sp, #0x50]
000000000004d258	ldp	x20, x19, [sp, #0x40]
000000000004d25c	ldp	x22, x21, [sp, #0x30]
000000000004d260	ldp	x24, x23, [sp, #0x20]
000000000004d264	ldp	x26, x25, [sp, #0x10]
000000000004d268	add	sp, sp, #0x60
000000000004d26c	ret
-[KIteratorAsNSEnumerator nextObject]:
000000000004d270	sub	sp, sp, #0x90
000000000004d274	stp	x26, x25, [sp, #0x40]
000000000004d278	stp	x24, x23, [sp, #0x50]
000000000004d27c	stp	x22, x21, [sp, #0x60]
000000000004d280	stp	x20, x19, [sp, #0x70]
000000000004d284	stp	x29, x30, [sp, #0x80]
000000000004d288	add	x29, sp, #0x80
000000000004d28c	mov	x21, x0
000000000004d290	bl	_Kotlin_initRuntimeIfNeeded
000000000004d294	adrp	x20, 45 ; 0x7a000
000000000004d298	add	x20, x20, #0x4e0
000000000004d29c	ldr	x25, [x20]
000000000004d2a0	mov	x0, x20
000000000004d2a4	blr	x25
000000000004d2a8	ldr	x8, [x0]
000000000004d2ac	add	x19, x8, #0x138
000000000004d2b0	ldaxr	w24, [x19]
000000000004d2b4	stlxr	w8, wzr, [x19]
000000000004d2b8	cbnz	w8, 0x4d2b0
000000000004d2bc	adr	x23, #0x4724d
000000000004d2c0	nop
000000000004d2c4	cmp	w24, #0x1
000000000004d2c8	b.ne	0x4d2dc
000000000004d2cc	ldarb	w8, [x23]
000000000004d2d0	tbz	w8, #0x0, 0x4d2dc
000000000004d2d4	mov	x0, x19
000000000004d2d8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d2dc	nop
000000000004d2e0	ldrsw	x22, _OBJC_IVAR_$_RCKKIteratorAsNSEnumerator.iteratorHolder
000000000004d2e4	bl	_Kotlin_initRuntimeIfNeeded
000000000004d2e8	ldr	x21, [x21, x22]
000000000004d2ec	str	xzr, [sp, #0x28]
000000000004d2f0	mov	x0, x20
000000000004d2f4	blr	x25
000000000004d2f8	ldr	x8, [x0]
000000000004d2fc	ldr	x9, [x8, #0x110]
000000000004d300	add	x10, sp, #0x28
000000000004d304	str	x10, [x8, #0x110]
000000000004d308	mov	x8, #0x300000000
000000000004d30c	stp	x9, x8, [sp, #0x30]
000000000004d310	ldarb	w8, [x23]
000000000004d314	tbz	w8, #0x0, 0x4d31c
000000000004d318	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004d31c	ldr	x8, [x21]
000000000004d320	and	x8, x8, #0xfffffffffffffffc
000000000004d324	ldr	x8, [x8]
000000000004d328	ldr	w9, [x8, #0x3c]
000000000004d32c	ldr	x8, [x8, #0x40]
000000000004d330	tbnz	w9, #0x1f, 0x4d340
000000000004d334	mov	w10, #0xa0
000000000004d338	and	x9, x9, x10
000000000004d33c	b	0x4d3c4
000000000004d340	neg	w10, w9
000000000004d344	mvn	w9, w9
000000000004d348	cmp	w10, #0x9
000000000004d34c	b.ge	0x4d384
000000000004d350	cmp	w10, #0x2
000000000004d354	b.lt	0x4d3b8
000000000004d358	mov	x10, #0x0
000000000004d35c	mov	x11, x8
000000000004d360	ldr	w12, [x11]
000000000004d364	cmp	w12, #0x9f
000000000004d368	b.gt	0x4d3c0
000000000004d36c	add	x10, x10, #0x1
000000000004d370	add	x11, x11, #0x10
000000000004d374	cmp	x9, x10
000000000004d378	b.ne	0x4d360
000000000004d37c	mov	x10, x9
000000000004d380	b	0x4d3c0
000000000004d384	mov	w10, #0x0
000000000004d388	add	w11, w9, w10
000000000004d38c	cmp	w11, #0x0
000000000004d390	cinc	w11, w11, lt
000000000004d394	asr	w11, w11, #1
000000000004d398	sbfiz	x12, x11, #4, #32
000000000004d39c	ldr	w12, [x8, x12]
000000000004d3a0	cmp	w12, #0xa0
000000000004d3a4	csinc	w10, w10, w11, ge
000000000004d3a8	csel	w9, w9, w11, lt
000000000004d3ac	cmp	w10, w9
000000000004d3b0	b.lt	0x4d388
000000000004d3b4	b	0x4d3c0
000000000004d3b8	mov	w10, #0x0
000000000004d3bc	b	0x4d3c0
000000000004d3c0	sxtw	x9, w10
000000000004d3c4	add	x8, x8, x9, lsl #4
000000000004d3c8	ldr	x8, [x8, #0x8]
000000000004d3cc	ldr	x8, [x8]
000000000004d3d0	mov	x0, x21
000000000004d3d4	blr	x8
000000000004d3d8	mov	x8, x0
000000000004d3dc	mov	x0, x20
000000000004d3e0	blr	x25
000000000004d3e4	ldr	x9, [x0]
000000000004d3e8	ldr	x10, [sp, #0x30]
000000000004d3ec	str	x10, [x9, #0x110]
000000000004d3f0	cbz	w8, 0x4d44c
000000000004d3f4	add	x8, sp, #0x8
000000000004d3f8	add	x22, x8, #0x18
000000000004d3fc	mov	x11, #0x400000000
000000000004d400	str	x10, [sp, #0x10]
000000000004d404	stp	x11, xzr, [sp, #0x18]
000000000004d408	stp	xzr, x8, [sp, #0x28]
000000000004d40c	add	x8, sp, #0x28
000000000004d410	str	x8, [x9, #0x110]
000000000004d414	mov	x8, #0x300000000
000000000004d418	str	x8, [sp, #0x38]
000000000004d41c	ldarb	w8, [x23]
000000000004d420	tbz	w8, #0x0, 0x4d428
000000000004d424	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004d428	ldr	x8, [x21]
000000000004d42c	and	x8, x8, #0xfffffffffffffffc
000000000004d430	ldr	x8, [x8]
000000000004d434	ldr	w9, [x8, #0x3c]
000000000004d438	ldr	x8, [x8, #0x40]
000000000004d43c	tbnz	w9, #0x1f, 0x4d454
000000000004d440	mov	w10, #0xa0
000000000004d444	and	x9, x9, x10
000000000004d448	b	0x4d4d8
000000000004d44c	mov	x21, #0x0
000000000004d450	b	0x4d548
000000000004d454	neg	w10, w9
000000000004d458	mvn	w9, w9
000000000004d45c	cmp	w10, #0x9
000000000004d460	b.ge	0x4d498
000000000004d464	cmp	w10, #0x2
000000000004d468	b.lt	0x4d4cc
000000000004d46c	mov	x10, #0x0
000000000004d470	mov	x11, x8
000000000004d474	ldr	w12, [x11]
000000000004d478	cmp	w12, #0x9f
000000000004d47c	b.gt	0x4d4d4
000000000004d480	add	x10, x10, #0x1
000000000004d484	add	x11, x11, #0x10
000000000004d488	cmp	x9, x10
000000000004d48c	b.ne	0x4d474
000000000004d490	mov	x10, x9
000000000004d494	b	0x4d4d4
000000000004d498	mov	w10, #0x0
000000000004d49c	add	w11, w9, w10
000000000004d4a0	cmp	w11, #0x0
000000000004d4a4	cinc	w11, w11, lt
000000000004d4a8	asr	w11, w11, #1
000000000004d4ac	sbfiz	x12, x11, #4, #32
000000000004d4b0	ldr	w12, [x8, x12]
000000000004d4b4	cmp	w12, #0xa0
000000000004d4b8	csinc	w10, w10, w11, ge
000000000004d4bc	csel	w9, w9, w11, lt
000000000004d4c0	cmp	w10, w9
000000000004d4c4	b.lt	0x4d49c
000000000004d4c8	b	0x4d4d4
000000000004d4cc	mov	w10, #0x0
000000000004d4d0	b	0x4d4d4
000000000004d4d4	sxtw	x9, w10
000000000004d4d8	add	x8, x8, x9, lsl #4
000000000004d4dc	ldr	x8, [x8, #0x8]
000000000004d4e0	ldr	x8, [x8, #0x8]
000000000004d4e4	mov	x0, x21
000000000004d4e8	mov	x1, x22
000000000004d4ec	blr	x8
000000000004d4f0	mov	x8, x0
000000000004d4f4	str	x0, [sp, #0x20]
000000000004d4f8	mov	x0, x20
000000000004d4fc	blr	x25
000000000004d500	ldr	x9, [x0]
000000000004d504	ldr	x10, [sp, #0x30]
000000000004d508	str	x10, [x9, #0x110]
000000000004d50c	cbz	x8, 0x4d51c
000000000004d510	mov	x0, x8
000000000004d514	bl	_Kotlin_ObjCExport_refToObjC
000000000004d518	b	0x4d530
000000000004d51c	nop
000000000004d520	ldr	x0, #0x29b58 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004d524	nop
000000000004d528	ldr	x1, #0x298a8 ; Objc selector ref: null
000000000004d52c	bl	0x55ca8 ; Objc message: +[NSNull null]
000000000004d530	mov	x21, x0
000000000004d534	mov	x0, x20
000000000004d538	blr	x25
000000000004d53c	ldr	x8, [x0]
000000000004d540	ldr	x9, [sp, #0x10]
000000000004d544	str	x9, [x8, #0x110]
000000000004d548	ldaxr	w8, [x19]
000000000004d54c	stlxr	w9, w24, [x19]
000000000004d550	cbnz	w9, 0x4d548
000000000004d554	cbnz	w24, 0x4d570
000000000004d558	cmp	w8, #0x1
000000000004d55c	b.ne	0x4d570
000000000004d560	ldarb	w8, [x23]
000000000004d564	tbz	w8, #0x0, 0x4d570
000000000004d568	mov	x0, x19
000000000004d56c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d570	mov	x0, x21
000000000004d574	ldp	x29, x30, [sp, #0x80]
000000000004d578	ldp	x20, x19, [sp, #0x70]
000000000004d57c	ldp	x22, x21, [sp, #0x60]
000000000004d580	ldp	x24, x23, [sp, #0x50]
000000000004d584	ldp	x26, x25, [sp, #0x40]
000000000004d588	add	sp, sp, #0x90
000000000004d58c	ret
000000000004d590	mov	x21, x0
000000000004d594	mov	x0, x20
000000000004d598	blr	x25
000000000004d59c	ldr	x8, [x0]
000000000004d5a0	ldr	x9, [sp, #0x10]
000000000004d5a4	b	0x4d5dc
000000000004d5a8	mov	x21, x0
000000000004d5ac	mov	x0, x20
000000000004d5b0	blr	x25
000000000004d5b4	ldr	x8, [x0]
000000000004d5b8	ldr	x9, [sp, #0x30]
000000000004d5bc	str	x9, [x8, #0x110]
000000000004d5c0	ldr	x9, [sp, #0x10]
000000000004d5c4	b	0x4d5dc
000000000004d5c8	mov	x21, x0
000000000004d5cc	mov	x0, x20
000000000004d5d0	blr	x25
000000000004d5d4	ldr	x8, [x0]
000000000004d5d8	ldr	x9, [sp, #0x30]
000000000004d5dc	str	x9, [x8, #0x110]
000000000004d5e0	ldaxr	w8, [x19]
000000000004d5e4	stlxr	w9, w24, [x19]
000000000004d5e8	cbnz	w9, 0x4d5e0
000000000004d5ec	cbnz	w24, 0x4d608
000000000004d5f0	cmp	w8, #0x1
000000000004d5f4	b.ne	0x4d608
000000000004d5f8	ldarb	w8, [x23]
000000000004d5fc	tbz	w8, #0x0, 0x4d608
000000000004d600	mov	x0, x19
000000000004d604	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d608	mov	x0, x21
000000000004d60c	bl	0x558ac ; symbol stub for: __Unwind_Resume
+[KIteratorAsNSEnumerator createWithKIterator:]:
000000000004d610	stp	x22, x21, [sp, #-0x30]!
000000000004d614	stp	x20, x19, [sp, #0x10]
000000000004d618	stp	x29, x30, [sp, #0x20]
000000000004d61c	add	x29, sp, #0x20
000000000004d620	mov	x19, x2
000000000004d624	nop
000000000004d628	ldr	x0, #0x29a70 ; Objc class ref: RCKKIteratorAsNSEnumerator
000000000004d62c	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000004d630	nop
000000000004d634	ldr	x1, #0x2968c ; Objc selector ref: init
000000000004d638	bl	0x55ca8 ; Objc message: +[RCKKIteratorAsNSEnumerator init]
000000000004d63c	bl	0x55c48 ; symbol stub for: _objc_autorelease
000000000004d640	mov	x20, x0
000000000004d644	nop
000000000004d648	ldrsw	x8, _OBJC_IVAR_$_RCKKIteratorAsNSEnumerator.iteratorHolder
000000000004d64c	add	x21, x0, x8
000000000004d650	adrp	x0, 45 ; 0x7a000
000000000004d654	add	x0, x0, #0x4e0
000000000004d658	ldr	x8, [x0]
000000000004d65c	blr	x8
000000000004d660	ldr	x22, [x0]
000000000004d664	mov	w0, #0x1
000000000004d668	mov	w1, #0x28
000000000004d66c	bl	0x55aec ; symbol stub for: _calloc
000000000004d670	ldr	x8, [x22, #0xa8]!
000000000004d674	sub	x9, x22, #0x8
000000000004d678	stp	x8, x22, [x0]
000000000004d67c	str	x0, [x8, #0x8]
000000000004d680	str	x0, [x22]
000000000004d684	ldr	x8, [x22, #0x10]
000000000004d688	add	x8, x8, #0x1
000000000004d68c	str	x8, [x22, #0x10]
000000000004d690	stp	x9, x0, [x0, #0x18]
000000000004d694	str	x19, [x0, #0x10]!
000000000004d698	stp	x19, x0, [x21]
000000000004d69c	mov	x0, x20
000000000004d6a0	ldp	x29, x30, [sp, #0x20]
000000000004d6a4	ldp	x20, x19, [sp, #0x10]
000000000004d6a8	ldp	x22, x21, [sp], #0x30
000000000004d6ac	ret
-[KListAsNSArray dealloc]:
000000000004d6b0	sub	sp, sp, #0x60
000000000004d6b4	stp	x26, x25, [sp, #0x10]
000000000004d6b8	stp	x24, x23, [sp, #0x20]
000000000004d6bc	stp	x22, x21, [sp, #0x30]
000000000004d6c0	stp	x20, x19, [sp, #0x40]
000000000004d6c4	stp	x29, x30, [sp, #0x50]
000000000004d6c8	add	x29, sp, #0x50
000000000004d6cc	mov	x19, x0
000000000004d6d0	nop
000000000004d6d4	ldrsw	x8, _OBJC_IVAR_$_RCKKListAsNSArray.listHolder
000000000004d6d8	add	x24, x0, x8
000000000004d6dc	bl	_Kotlin_initRuntimeIfNeeded
000000000004d6e0	adrp	x21, 45 ; 0x7a000
000000000004d6e4	add	x21, x21, #0x4e0
000000000004d6e8	ldr	x25, [x21]
000000000004d6ec	mov	x0, x21
000000000004d6f0	blr	x25
000000000004d6f4	ldr	x8, [x0]
000000000004d6f8	add	x20, x8, #0x138
000000000004d6fc	ldaxr	w22, [x20]
000000000004d700	stlxr	w8, wzr, [x20]
000000000004d704	cbnz	w8, 0x4d6fc
000000000004d708	adr	x23, #0x46e01
000000000004d70c	nop
000000000004d710	cmp	w22, #0x1
000000000004d714	b.ne	0x4d728
000000000004d718	ldarb	w8, [x23]
000000000004d71c	tbz	w8, #0x0, 0x4d728
000000000004d720	mov	x0, x20
000000000004d724	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d728	ldr	x8, [x24]
000000000004d72c	cbz	x8, 0x4d748
000000000004d730	ldr	x1, [x24, #0x8]
000000000004d734	mov	x0, x21
000000000004d738	blr	x25
000000000004d73c	ldr	x8, [x0]
000000000004d740	add	x0, x8, #0x8
000000000004d744	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004d748	ldaxr	w8, [x20]
000000000004d74c	stlxr	w9, w22, [x20]
000000000004d750	cbnz	w9, 0x4d748
000000000004d754	cbnz	w22, 0x4d770
000000000004d758	cmp	w8, #0x1
000000000004d75c	b.ne	0x4d770
000000000004d760	ldarb	w8, [x23]
000000000004d764	tbz	w8, #0x0, 0x4d770
000000000004d768	mov	x0, x20
000000000004d76c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d770	nop
000000000004d774	ldr	x8, #0x2997c ; Objc class ref: RCKKListAsNSArray
000000000004d778	stp	x19, x8, [sp]
000000000004d77c	nop
000000000004d780	ldr	x1, #0x294f0 ; Objc selector ref: dealloc
000000000004d784	mov	x0, sp
000000000004d788	bl	0x55cb4 ; Objc message: -[[x0 super] dealloc]
000000000004d78c	ldp	x29, x30, [sp, #0x50]
000000000004d790	ldp	x20, x19, [sp, #0x40]
000000000004d794	ldp	x22, x21, [sp, #0x30]
000000000004d798	ldp	x24, x23, [sp, #0x20]
000000000004d79c	ldp	x26, x25, [sp, #0x10]
000000000004d7a0	add	sp, sp, #0x60
000000000004d7a4	ret
-[KListAsNSArray toKotlin:]:
000000000004d7a8	stp	x22, x21, [sp, #-0x30]!
000000000004d7ac	stp	x20, x19, [sp, #0x10]
000000000004d7b0	stp	x29, x30, [sp, #0x20]
000000000004d7b4	add	x29, sp, #0x20
000000000004d7b8	mov	x19, x2
000000000004d7bc	mov	x20, x0
000000000004d7c0	nop
000000000004d7c4	ldrsw	x21, _OBJC_IVAR_$_RCKKListAsNSArray.listHolder
000000000004d7c8	bl	_Kotlin_initRuntimeIfNeeded
000000000004d7cc	ldr	x0, [x20, x21]
000000000004d7d0	str	x0, [x19]
000000000004d7d4	ldp	x29, x30, [sp, #0x20]
000000000004d7d8	ldp	x20, x19, [sp, #0x10]
000000000004d7dc	ldp	x22, x21, [sp], #0x30
000000000004d7e0	ret
-[KListAsNSArray objectAtIndex:]:
000000000004d7e4	sub	sp, sp, #0x70
000000000004d7e8	stp	x26, x25, [sp, #0x20]
000000000004d7ec	stp	x24, x23, [sp, #0x30]
000000000004d7f0	stp	x22, x21, [sp, #0x40]
000000000004d7f4	stp	x20, x19, [sp, #0x50]
000000000004d7f8	stp	x29, x30, [sp, #0x60]
000000000004d7fc	add	x29, sp, #0x60
000000000004d800	mov	x21, x2
000000000004d804	mov	x22, x0
000000000004d808	bl	_Kotlin_initRuntimeIfNeeded
000000000004d80c	adrp	x20, 45 ; 0x7a000
000000000004d810	add	x20, x20, #0x4e0
000000000004d814	ldr	x25, [x20]
000000000004d818	mov	x0, x20
000000000004d81c	blr	x25
000000000004d820	ldr	x8, [x0]
000000000004d824	add	x19, x8, #0x138
000000000004d828	ldaxr	w24, [x19]
000000000004d82c	stlxr	w8, wzr, [x19]
000000000004d830	cbnz	w8, 0x4d828
000000000004d834	cmp	w24, #0x1
000000000004d838	b.ne	0x4d854
000000000004d83c	adr	x8, #0x46ccd
000000000004d840	nop
000000000004d844	ldarb	w8, [x8]
000000000004d848	tbz	w8, #0x0, 0x4d854
000000000004d84c	mov	x0, x19
000000000004d850	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d854	mov	x8, sp
000000000004d858	add	x23, x8, #0x18
000000000004d85c	str	xzr, [sp, #0x18]
000000000004d860	mov	x0, x20
000000000004d864	blr	x25
000000000004d868	ldr	x9, [x0]
000000000004d86c	ldr	x10, [x9, #0x110]
000000000004d870	str	x8, [x9, #0x110]
000000000004d874	mov	x8, #0x400000000
000000000004d878	stp	x10, x8, [sp, #0x8]
000000000004d87c	nop
000000000004d880	ldrsw	x26, _OBJC_IVAR_$_RCKKListAsNSArray.listHolder
000000000004d884	bl	_Kotlin_initRuntimeIfNeeded
000000000004d888	ldr	x0, [x22, x26]
000000000004d88c	mov	x1, x21
000000000004d890	mov	x2, x23
000000000004d894	bl	_Kotlin_List_get
000000000004d898	cbz	x0, 0x4d8a4
000000000004d89c	bl	_Kotlin_ObjCExport_refToObjC
000000000004d8a0	b	0x4d8b8
000000000004d8a4	nop
000000000004d8a8	ldr	x0, #0x297d0 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004d8ac	nop
000000000004d8b0	ldr	x1, #0x29520 ; Objc selector ref: null
000000000004d8b4	bl	0x55ca8 ; Objc message: +[NSNull null]
000000000004d8b8	mov	x21, x0
000000000004d8bc	mov	x0, x20
000000000004d8c0	blr	x25
000000000004d8c4	ldr	x8, [x0]
000000000004d8c8	ldr	x9, [sp, #0x8]
000000000004d8cc	str	x9, [x8, #0x110]
000000000004d8d0	ldaxr	w8, [x19]
000000000004d8d4	stlxr	w9, w24, [x19]
000000000004d8d8	cbnz	w9, 0x4d8d0
000000000004d8dc	cbnz	w24, 0x4d900
000000000004d8e0	cmp	w8, #0x1
000000000004d8e4	b.ne	0x4d900
000000000004d8e8	adr	x8, #0x46c21
000000000004d8ec	nop
000000000004d8f0	ldarb	w8, [x8]
000000000004d8f4	tbz	w8, #0x0, 0x4d900
000000000004d8f8	mov	x0, x19
000000000004d8fc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d900	mov	x0, x21
000000000004d904	ldp	x29, x30, [sp, #0x60]
000000000004d908	ldp	x20, x19, [sp, #0x50]
000000000004d90c	ldp	x22, x21, [sp, #0x40]
000000000004d910	ldp	x24, x23, [sp, #0x30]
000000000004d914	ldp	x26, x25, [sp, #0x20]
000000000004d918	add	sp, sp, #0x70
000000000004d91c	ret
000000000004d920	mov	x21, x0
000000000004d924	mov	x0, x20
000000000004d928	blr	x25
000000000004d92c	ldr	x8, [x0]
000000000004d930	ldr	x9, [sp, #0x8]
000000000004d934	str	x9, [x8, #0x110]
000000000004d938	ldaxr	w8, [x19]
000000000004d93c	stlxr	w9, w24, [x19]
000000000004d940	cbnz	w9, 0x4d938
000000000004d944	cbnz	w24, 0x4d968
000000000004d948	cmp	w8, #0x1
000000000004d94c	b.ne	0x4d968
000000000004d950	adr	x8, #0x46bb9
000000000004d954	nop
000000000004d958	ldarb	w8, [x8]
000000000004d95c	tbz	w8, #0x0, 0x4d968
000000000004d960	mov	x0, x19
000000000004d964	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d968	mov	x0, x21
000000000004d96c	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KListAsNSArray count]:
000000000004d970	stp	x22, x21, [sp, #-0x30]!
000000000004d974	stp	x20, x19, [sp, #0x10]
000000000004d978	stp	x29, x30, [sp, #0x20]
000000000004d97c	add	x29, sp, #0x20
000000000004d980	mov	x20, x0
000000000004d984	bl	_Kotlin_initRuntimeIfNeeded
000000000004d988	adrp	x0, 45 ; 0x7a000
000000000004d98c	add	x0, x0, #0x4e0
000000000004d990	ldr	x8, [x0]
000000000004d994	blr	x8
000000000004d998	ldr	x8, [x0]
000000000004d99c	add	x19, x8, #0x138
000000000004d9a0	ldaxr	w21, [x19]
000000000004d9a4	stlxr	w8, wzr, [x19]
000000000004d9a8	cbnz	w8, 0x4d9a0
000000000004d9ac	cmp	w21, #0x1
000000000004d9b0	b.ne	0x4d9cc
000000000004d9b4	adr	x8, #0x46b55
000000000004d9b8	nop
000000000004d9bc	ldarb	w8, [x8]
000000000004d9c0	tbz	w8, #0x0, 0x4d9cc
000000000004d9c4	mov	x0, x19
000000000004d9c8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004d9cc	nop
000000000004d9d0	ldrsw	x22, _OBJC_IVAR_$_RCKKListAsNSArray.listHolder
000000000004d9d4	bl	_Kotlin_initRuntimeIfNeeded
000000000004d9d8	ldr	x0, [x20, x22]
000000000004d9dc	bl	_Kotlin_Collection_getSize
000000000004d9e0	mov	x20, x0
000000000004d9e4	ldaxr	w8, [x19]
000000000004d9e8	stlxr	w9, w21, [x19]
000000000004d9ec	cbnz	w9, 0x4d9e4
000000000004d9f0	cbnz	w21, 0x4da14
000000000004d9f4	cmp	w8, #0x1
000000000004d9f8	b.ne	0x4da14
000000000004d9fc	adr	x8, #0x46b0d
000000000004da00	nop
000000000004da04	ldarb	w8, [x8]
000000000004da08	tbz	w8, #0x0, 0x4da14
000000000004da0c	mov	x0, x19
000000000004da10	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004da14	sxtw	x0, w20
000000000004da18	ldp	x29, x30, [sp, #0x20]
000000000004da1c	ldp	x20, x19, [sp, #0x10]
000000000004da20	ldp	x22, x21, [sp], #0x30
000000000004da24	ret
000000000004da28	mov	x20, x0
000000000004da2c	ldaxr	w8, [x19]
000000000004da30	stlxr	w9, w21, [x19]
000000000004da34	cbnz	w9, 0x4da2c
000000000004da38	cbnz	w21, 0x4da5c
000000000004da3c	cmp	w8, #0x1
000000000004da40	b.ne	0x4da5c
000000000004da44	adr	x8, #0x46ac5
000000000004da48	nop
000000000004da4c	ldarb	w8, [x8]
000000000004da50	tbz	w8, #0x0, 0x4da5c
000000000004da54	mov	x0, x19
000000000004da58	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004da5c	mov	x0, x20
000000000004da60	bl	0x558ac ; symbol stub for: __Unwind_Resume
+[KListAsNSArray createRetainedWithKList:]:
000000000004da64	stp	x22, x21, [sp, #-0x30]!
000000000004da68	stp	x20, x19, [sp, #0x10]
000000000004da6c	stp	x29, x30, [sp, #0x20]
000000000004da70	add	x29, sp, #0x20
000000000004da74	mov	x19, x2
000000000004da78	nop
000000000004da7c	ldr	x0, #0x29624 ; Objc class ref: RCKKListAsNSArray
000000000004da80	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000004da84	nop
000000000004da88	ldr	x1, #0x29238 ; Objc selector ref: init
000000000004da8c	bl	0x55ca8 ; Objc message: +[RCKKListAsNSArray init]
000000000004da90	mov	x20, x0
000000000004da94	nop
000000000004da98	ldrsw	x8, _OBJC_IVAR_$_RCKKListAsNSArray.listHolder
000000000004da9c	add	x21, x0, x8
000000000004daa0	adrp	x0, 45 ; 0x7a000
000000000004daa4	add	x0, x0, #0x4e0
000000000004daa8	ldr	x8, [x0]
000000000004daac	blr	x8
000000000004dab0	ldr	x22, [x0]
000000000004dab4	mov	w0, #0x1
000000000004dab8	mov	w1, #0x28
000000000004dabc	bl	0x55aec ; symbol stub for: _calloc
000000000004dac0	ldr	x8, [x22, #0xa8]!
000000000004dac4	sub	x9, x22, #0x8
000000000004dac8	stp	x8, x22, [x0]
000000000004dacc	str	x0, [x8, #0x8]
000000000004dad0	str	x0, [x22]
000000000004dad4	ldr	x8, [x22, #0x10]
000000000004dad8	add	x8, x8, #0x1
000000000004dadc	str	x8, [x22, #0x10]
000000000004dae0	stp	x9, x0, [x0, #0x18]
000000000004dae4	str	x19, [x0, #0x10]!
000000000004dae8	stp	x19, x0, [x21]
000000000004daec	mov	x0, x20
000000000004daf0	ldp	x29, x30, [sp, #0x20]
000000000004daf4	ldp	x20, x19, [sp, #0x10]
000000000004daf8	ldp	x22, x21, [sp], #0x30
000000000004dafc	ret
-[KMutableListAsNSMutableArray dealloc]:
000000000004db00	sub	sp, sp, #0x60
000000000004db04	stp	x26, x25, [sp, #0x10]
000000000004db08	stp	x24, x23, [sp, #0x20]
000000000004db0c	stp	x22, x21, [sp, #0x30]
000000000004db10	stp	x20, x19, [sp, #0x40]
000000000004db14	stp	x29, x30, [sp, #0x50]
000000000004db18	add	x29, sp, #0x50
000000000004db1c	mov	x19, x0
000000000004db20	nop
000000000004db24	ldrsw	x8, _OBJC_IVAR_$_RCKKMutableListAsNSMutableArray.listHolder
000000000004db28	add	x24, x0, x8
000000000004db2c	bl	_Kotlin_initRuntimeIfNeeded
000000000004db30	adrp	x21, 45 ; 0x7a000
000000000004db34	add	x21, x21, #0x4e0
000000000004db38	ldr	x25, [x21]
000000000004db3c	mov	x0, x21
000000000004db40	blr	x25
000000000004db44	ldr	x8, [x0]
000000000004db48	add	x20, x8, #0x138
000000000004db4c	ldaxr	w22, [x20]
000000000004db50	stlxr	w8, wzr, [x20]
000000000004db54	cbnz	w8, 0x4db4c
000000000004db58	adr	x23, #0x469b1
000000000004db5c	nop
000000000004db60	cmp	w22, #0x1
000000000004db64	b.ne	0x4db78
000000000004db68	ldarb	w8, [x23]
000000000004db6c	tbz	w8, #0x0, 0x4db78
000000000004db70	mov	x0, x20
000000000004db74	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004db78	ldr	x8, [x24]
000000000004db7c	cbz	x8, 0x4db98
000000000004db80	ldr	x1, [x24, #0x8]
000000000004db84	mov	x0, x21
000000000004db88	blr	x25
000000000004db8c	ldr	x8, [x0]
000000000004db90	add	x0, x8, #0x8
000000000004db94	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004db98	ldaxr	w8, [x20]
000000000004db9c	stlxr	w9, w22, [x20]
000000000004dba0	cbnz	w9, 0x4db98
000000000004dba4	cbnz	w22, 0x4dbc0
000000000004dba8	cmp	w8, #0x1
000000000004dbac	b.ne	0x4dbc0
000000000004dbb0	ldarb	w8, [x23]
000000000004dbb4	tbz	w8, #0x0, 0x4dbc0
000000000004dbb8	mov	x0, x20
000000000004dbbc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004dbc0	nop
000000000004dbc4	ldr	x8, #0x29534 ; Objc class ref: RCKKMutableListAsNSMutableArray
000000000004dbc8	stp	x19, x8, [sp]
000000000004dbcc	nop
000000000004dbd0	ldr	x1, #0x290a0 ; Objc selector ref: dealloc
000000000004dbd4	mov	x0, sp
000000000004dbd8	bl	0x55cb4 ; Objc message: -[[x0 super] dealloc]
000000000004dbdc	ldp	x29, x30, [sp, #0x50]
000000000004dbe0	ldp	x20, x19, [sp, #0x40]
000000000004dbe4	ldp	x22, x21, [sp, #0x30]
000000000004dbe8	ldp	x24, x23, [sp, #0x20]
000000000004dbec	ldp	x26, x25, [sp, #0x10]
000000000004dbf0	add	sp, sp, #0x60
000000000004dbf4	ret
-[KMutableListAsNSMutableArray toKotlin:]:
000000000004dbf8	stp	x22, x21, [sp, #-0x30]!
000000000004dbfc	stp	x20, x19, [sp, #0x10]
000000000004dc00	stp	x29, x30, [sp, #0x20]
000000000004dc04	add	x29, sp, #0x20
000000000004dc08	mov	x19, x2
000000000004dc0c	mov	x20, x0
000000000004dc10	nop
000000000004dc14	ldrsw	x21, _OBJC_IVAR_$_RCKKMutableListAsNSMutableArray.listHolder
000000000004dc18	bl	_Kotlin_initRuntimeIfNeeded
000000000004dc1c	ldr	x0, [x20, x21]
000000000004dc20	str	x0, [x19]
000000000004dc24	ldp	x29, x30, [sp, #0x20]
000000000004dc28	ldp	x20, x19, [sp, #0x10]
000000000004dc2c	ldp	x22, x21, [sp], #0x30
000000000004dc30	ret
-[KMutableListAsNSMutableArray objectAtIndex:]:
000000000004dc34	sub	sp, sp, #0x70
000000000004dc38	stp	x26, x25, [sp, #0x20]
000000000004dc3c	stp	x24, x23, [sp, #0x30]
000000000004dc40	stp	x22, x21, [sp, #0x40]
000000000004dc44	stp	x20, x19, [sp, #0x50]
000000000004dc48	stp	x29, x30, [sp, #0x60]
000000000004dc4c	add	x29, sp, #0x60
000000000004dc50	mov	x21, x2
000000000004dc54	mov	x22, x0
000000000004dc58	bl	_Kotlin_initRuntimeIfNeeded
000000000004dc5c	adrp	x20, 45 ; 0x7a000
000000000004dc60	add	x20, x20, #0x4e0
000000000004dc64	ldr	x25, [x20]
000000000004dc68	mov	x0, x20
000000000004dc6c	blr	x25
000000000004dc70	ldr	x8, [x0]
000000000004dc74	add	x19, x8, #0x138
000000000004dc78	ldaxr	w24, [x19]
000000000004dc7c	stlxr	w8, wzr, [x19]
000000000004dc80	cbnz	w8, 0x4dc78
000000000004dc84	cmp	w24, #0x1
000000000004dc88	b.ne	0x4dca4
000000000004dc8c	adr	x8, #0x4687d
000000000004dc90	nop
000000000004dc94	ldarb	w8, [x8]
000000000004dc98	tbz	w8, #0x0, 0x4dca4
000000000004dc9c	mov	x0, x19
000000000004dca0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004dca4	mov	x8, sp
000000000004dca8	add	x23, x8, #0x18
000000000004dcac	str	xzr, [sp, #0x18]
000000000004dcb0	mov	x0, x20
000000000004dcb4	blr	x25
000000000004dcb8	ldr	x9, [x0]
000000000004dcbc	ldr	x10, [x9, #0x110]
000000000004dcc0	str	x8, [x9, #0x110]
000000000004dcc4	mov	x8, #0x400000000
000000000004dcc8	stp	x10, x8, [sp, #0x8]
000000000004dccc	nop
000000000004dcd0	ldrsw	x26, _OBJC_IVAR_$_RCKKMutableListAsNSMutableArray.listHolder
000000000004dcd4	bl	_Kotlin_initRuntimeIfNeeded
000000000004dcd8	ldr	x0, [x22, x26]
000000000004dcdc	mov	x1, x21
000000000004dce0	mov	x2, x23
000000000004dce4	bl	_Kotlin_List_get
000000000004dce8	cbz	x0, 0x4dcf4
000000000004dcec	bl	_Kotlin_ObjCExport_refToObjC
000000000004dcf0	b	0x4dd08
000000000004dcf4	nop
000000000004dcf8	ldr	x0, #0x29380 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004dcfc	nop
000000000004dd00	ldr	x1, #0x290d0 ; Objc selector ref: null
000000000004dd04	bl	0x55ca8 ; Objc message: +[NSNull null]
000000000004dd08	mov	x21, x0
000000000004dd0c	mov	x0, x20
000000000004dd10	blr	x25
000000000004dd14	ldr	x8, [x0]
000000000004dd18	ldr	x9, [sp, #0x8]
000000000004dd1c	str	x9, [x8, #0x110]
000000000004dd20	ldaxr	w8, [x19]
000000000004dd24	stlxr	w9, w24, [x19]
000000000004dd28	cbnz	w9, 0x4dd20
000000000004dd2c	cbnz	w24, 0x4dd50
000000000004dd30	cmp	w8, #0x1
000000000004dd34	b.ne	0x4dd50
000000000004dd38	adr	x8, #0x467d1
000000000004dd3c	nop
000000000004dd40	ldarb	w8, [x8]
000000000004dd44	tbz	w8, #0x0, 0x4dd50
000000000004dd48	mov	x0, x19
000000000004dd4c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004dd50	mov	x0, x21
000000000004dd54	ldp	x29, x30, [sp, #0x60]
000000000004dd58	ldp	x20, x19, [sp, #0x50]
000000000004dd5c	ldp	x22, x21, [sp, #0x40]
000000000004dd60	ldp	x24, x23, [sp, #0x30]
000000000004dd64	ldp	x26, x25, [sp, #0x20]
000000000004dd68	add	sp, sp, #0x70
000000000004dd6c	ret
000000000004dd70	mov	x21, x0
000000000004dd74	mov	x0, x20
000000000004dd78	blr	x25
000000000004dd7c	ldr	x8, [x0]
000000000004dd80	ldr	x9, [sp, #0x8]
000000000004dd84	str	x9, [x8, #0x110]
000000000004dd88	ldaxr	w8, [x19]
000000000004dd8c	stlxr	w9, w24, [x19]
000000000004dd90	cbnz	w9, 0x4dd88
000000000004dd94	cbnz	w24, 0x4ddb8
000000000004dd98	cmp	w8, #0x1
000000000004dd9c	b.ne	0x4ddb8
000000000004dda0	adr	x8, #0x46769
000000000004dda4	nop
000000000004dda8	ldarb	w8, [x8]
000000000004ddac	tbz	w8, #0x0, 0x4ddb8
000000000004ddb0	mov	x0, x19
000000000004ddb4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ddb8	mov	x0, x21
000000000004ddbc	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray count]:
000000000004ddc0	stp	x22, x21, [sp, #-0x30]!
000000000004ddc4	stp	x20, x19, [sp, #0x10]
000000000004ddc8	stp	x29, x30, [sp, #0x20]
000000000004ddcc	add	x29, sp, #0x20
000000000004ddd0	mov	x20, x0
000000000004ddd4	bl	_Kotlin_initRuntimeIfNeeded
000000000004ddd8	adrp	x0, 45 ; 0x7a000
000000000004dddc	add	x0, x0, #0x4e0
000000000004dde0	ldr	x8, [x0]
000000000004dde4	blr	x8
000000000004dde8	ldr	x8, [x0]
000000000004ddec	add	x19, x8, #0x138
000000000004ddf0	ldaxr	w21, [x19]
000000000004ddf4	stlxr	w8, wzr, [x19]
000000000004ddf8	cbnz	w8, 0x4ddf0
000000000004ddfc	cmp	w21, #0x1
000000000004de00	b.ne	0x4de1c
000000000004de04	adr	x8, #0x46705
000000000004de08	nop
000000000004de0c	ldarb	w8, [x8]
000000000004de10	tbz	w8, #0x0, 0x4de1c
000000000004de14	mov	x0, x19
000000000004de18	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004de1c	nop
000000000004de20	ldrsw	x22, _OBJC_IVAR_$_RCKKMutableListAsNSMutableArray.listHolder
000000000004de24	bl	_Kotlin_initRuntimeIfNeeded
000000000004de28	ldr	x0, [x20, x22]
000000000004de2c	bl	_Kotlin_Collection_getSize
000000000004de30	mov	x20, x0
000000000004de34	ldaxr	w8, [x19]
000000000004de38	stlxr	w9, w21, [x19]
000000000004de3c	cbnz	w9, 0x4de34
000000000004de40	cbnz	w21, 0x4de64
000000000004de44	cmp	w8, #0x1
000000000004de48	b.ne	0x4de64
000000000004de4c	adr	x8, #0x466bd
000000000004de50	nop
000000000004de54	ldarb	w8, [x8]
000000000004de58	tbz	w8, #0x0, 0x4de64
000000000004de5c	mov	x0, x19
000000000004de60	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004de64	sxtw	x0, w20
000000000004de68	ldp	x29, x30, [sp, #0x20]
000000000004de6c	ldp	x20, x19, [sp, #0x10]
000000000004de70	ldp	x22, x21, [sp], #0x30
000000000004de74	ret
000000000004de78	mov	x20, x0
000000000004de7c	ldaxr	w8, [x19]
000000000004de80	stlxr	w9, w21, [x19]
000000000004de84	cbnz	w9, 0x4de7c
000000000004de88	cbnz	w21, 0x4deac
000000000004de8c	cmp	w8, #0x1
000000000004de90	b.ne	0x4deac
000000000004de94	adr	x8, #0x46675
000000000004de98	nop
000000000004de9c	ldarb	w8, [x8]
000000000004dea0	tbz	w8, #0x0, 0x4deac
000000000004dea4	mov	x0, x19
000000000004dea8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004deac	mov	x0, x20
000000000004deb0	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray insertObject:atIndex:]:
000000000004deb4	sub	sp, sp, #0x90
000000000004deb8	stp	x26, x25, [sp, #0x40]
000000000004debc	stp	x24, x23, [sp, #0x50]
000000000004dec0	stp	x22, x21, [sp, #0x60]
000000000004dec4	stp	x20, x19, [sp, #0x70]
000000000004dec8	stp	x29, x30, [sp, #0x80]
000000000004decc	add	x29, sp, #0x80
000000000004ded0	mov	x21, x3
000000000004ded4	mov	x22, x2
000000000004ded8	mov	x23, x0
000000000004dedc	bl	_Kotlin_initRuntimeIfNeeded
000000000004dee0	adrp	x20, 45 ; 0x7a000
000000000004dee4	add	x20, x20, #0x4e0
000000000004dee8	ldr	x25, [x20]
000000000004deec	mov	x0, x20
000000000004def0	blr	x25
000000000004def4	ldr	x8, [x0]
000000000004def8	add	x19, x8, #0x138
000000000004defc	ldaxr	w24, [x19]
000000000004df00	stlxr	w8, wzr, [x19]
000000000004df04	cbnz	w8, 0x4defc
000000000004df08	cmp	w24, #0x1
000000000004df0c	b.ne	0x4df28
000000000004df10	adr	x8, #0x465f9
000000000004df14	nop
000000000004df18	ldarb	w8, [x8]
000000000004df1c	tbz	w8, #0x0, 0x4df28
000000000004df20	mov	x0, x19
000000000004df24	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004df28	add	x26, sp, #0x8
000000000004df2c	str	xzr, [sp, #0x20]
000000000004df30	mov	x0, x20
000000000004df34	blr	x25
000000000004df38	ldr	x8, [x0]
000000000004df3c	ldr	x9, [x8, #0x110]
000000000004df40	str	x26, [x8, #0x110]
000000000004df44	mov	x8, #0x400000000
000000000004df48	stp	x9, x8, [sp, #0x10]
000000000004df4c	nop
000000000004df50	ldr	x0, #0x29128 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004df54	nop
000000000004df58	ldr	x1, #0x28e78 ; Objc selector ref: null
000000000004df5c	bl	0x55ca8 ; Objc message: +[NSNull null]
000000000004df60	cmp	x0, x22
000000000004df64	ccmp	x22, #0x0, #0x4, ne
000000000004df68	b.ne	0x4df78
000000000004df6c	mov	x22, #0x0
000000000004df70	str	xzr, [sp, #0x20]
000000000004df74	b	0x4df90
000000000004df78	add	x2, x26, #0x18
000000000004df7c	nop
000000000004df80	ldr	x1, #0x467d8
000000000004df84	mov	x0, x22
000000000004df88	bl	0x55ca8 ; Objc message: -[x0 null]
000000000004df8c	mov	x22, x0
000000000004df90	bl	_Kotlin_initRuntimeIfNeeded
000000000004df94	lsr	x8, x21, #31
000000000004df98	cbnz	x8, 0x4e0fc
000000000004df9c	nop
000000000004dfa0	ldrsw	x8, _OBJC_IVAR_$_RCKKMutableListAsNSMutableArray.listHolder
000000000004dfa4	ldr	x23, [x23, x8]
000000000004dfa8	str	xzr, [sp, #0x28]
000000000004dfac	mov	x0, x20
000000000004dfb0	blr	x25
000000000004dfb4	ldr	x8, [x0]
000000000004dfb8	ldr	x9, [x8, #0x110]
000000000004dfbc	add	x10, sp, #0x28
000000000004dfc0	str	x10, [x8, #0x110]
000000000004dfc4	mov	x8, #0x300000000
000000000004dfc8	stp	x9, x8, [sp, #0x30]
000000000004dfcc	adr	x26, #0x4653d
000000000004dfd0	nop
000000000004dfd4	ldarb	w8, [x26]
000000000004dfd8	tbz	w8, #0x0, 0x4dfe0
000000000004dfdc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004dfe0	ldr	x8, [x23]
000000000004dfe4	and	x8, x8, #0xfffffffffffffffc
000000000004dfe8	ldr	x8, [x8]
000000000004dfec	ldr	w9, [x8, #0x3c]
000000000004dff0	ldr	x8, [x8, #0x40]
000000000004dff4	tbnz	w9, #0x1f, 0x4e004
000000000004dff8	mov	w10, #0x16
000000000004dffc	and	x9, x9, x10
000000000004e000	b	0x4e088
000000000004e004	neg	w10, w9
000000000004e008	mvn	w9, w9
000000000004e00c	cmp	w10, #0x9
000000000004e010	b.ge	0x4e048
000000000004e014	cmp	w10, #0x2
000000000004e018	b.lt	0x4e07c
000000000004e01c	mov	x10, #0x0
000000000004e020	mov	x11, x8
000000000004e024	ldr	w12, [x11]
000000000004e028	cmp	w12, #0x15
000000000004e02c	b.gt	0x4e084
000000000004e030	add	x10, x10, #0x1
000000000004e034	add	x11, x11, #0x10
000000000004e038	cmp	x9, x10
000000000004e03c	b.ne	0x4e024
000000000004e040	mov	x10, x9
000000000004e044	b	0x4e084
000000000004e048	mov	w10, #0x0
000000000004e04c	add	w11, w9, w10
000000000004e050	cmp	w11, #0x0
000000000004e054	cinc	w11, w11, lt
000000000004e058	asr	w11, w11, #1
000000000004e05c	sbfiz	x12, x11, #4, #32
000000000004e060	ldr	w12, [x8, x12]
000000000004e064	cmp	w12, #0x16
000000000004e068	csinc	w10, w10, w11, ge
000000000004e06c	csel	w9, w9, w11, lt
000000000004e070	cmp	w10, w9
000000000004e074	b.lt	0x4e04c
000000000004e078	b	0x4e084
000000000004e07c	mov	w10, #0x0
000000000004e080	b	0x4e084
000000000004e084	sxtw	x9, w10
000000000004e088	add	x8, x8, x9, lsl #4
000000000004e08c	ldr	x8, [x8, #0x8]
000000000004e090	ldr	x8, [x8, #0x8]
000000000004e094	mov	x0, x23
000000000004e098	mov	x1, x21
000000000004e09c	mov	x2, x22
000000000004e0a0	blr	x8
000000000004e0a4	mov	x0, x20
000000000004e0a8	blr	x25
000000000004e0ac	ldr	x8, [x0]
000000000004e0b0	ldr	x9, [sp, #0x10]
000000000004e0b4	str	x9, [x8, #0x110]
000000000004e0b8	ldaxr	w8, [x19]
000000000004e0bc	stlxr	w9, w24, [x19]
000000000004e0c0	cbnz	w9, 0x4e0b8
000000000004e0c4	cbnz	w24, 0x4e0e0
000000000004e0c8	cmp	w8, #0x1
000000000004e0cc	b.ne	0x4e0e0
000000000004e0d0	ldarb	w8, [x26]
000000000004e0d4	tbz	w8, #0x0, 0x4e0e0
000000000004e0d8	mov	x0, x19
000000000004e0dc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e0e0	ldp	x29, x30, [sp, #0x80]
000000000004e0e4	ldp	x20, x19, [sp, #0x70]
000000000004e0e8	ldp	x22, x21, [sp, #0x60]
000000000004e0ec	ldp	x24, x23, [sp, #0x50]
000000000004e0f0	ldp	x26, x25, [sp, #0x40]
000000000004e0f4	add	sp, sp, #0x90
000000000004e0f8	ret
000000000004e0fc	bl	_ThrowArrayIndexOutOfBoundsException
000000000004e100	brk	#0x1
000000000004e104	mov	x21, x0
000000000004e108	mov	x0, x20
000000000004e10c	blr	x25
000000000004e110	ldr	x8, [x0]
000000000004e114	ldr	x9, [sp, #0x30]
000000000004e118	str	x9, [x8, #0x110]
000000000004e11c	b	0x4e130
000000000004e120	mov	x21, x0
000000000004e124	mov	x0, x20
000000000004e128	blr	x25
000000000004e12c	ldr	x8, [x0]
000000000004e130	ldr	x9, [sp, #0x10]
000000000004e134	str	x9, [x8, #0x110]
000000000004e138	ldaxr	w8, [x19]
000000000004e13c	stlxr	w9, w24, [x19]
000000000004e140	cbnz	w9, 0x4e138
000000000004e144	cbnz	w24, 0x4e168
000000000004e148	cmp	w8, #0x1
000000000004e14c	b.ne	0x4e168
000000000004e150	adr	x8, #0x463b9
000000000004e154	nop
000000000004e158	ldarb	w8, [x8]
000000000004e15c	tbz	w8, #0x0, 0x4e168
000000000004e160	mov	x0, x19
000000000004e164	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e168	mov	x0, x21
000000000004e16c	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray removeObjectAtIndex:]:
000000000004e170	sub	sp, sp, #0x70
000000000004e174	stp	x26, x25, [sp, #0x20]
000000000004e178	stp	x24, x23, [sp, #0x30]
000000000004e17c	stp	x22, x21, [sp, #0x40]
000000000004e180	stp	x20, x19, [sp, #0x50]
000000000004e184	stp	x29, x30, [sp, #0x60]
000000000004e188	add	x29, sp, #0x60
000000000004e18c	mov	x21, x2
000000000004e190	mov	x22, x0
000000000004e194	bl	_Kotlin_initRuntimeIfNeeded
000000000004e198	adrp	x20, 44 ; 0x7a000
000000000004e19c	add	x20, x20, #0x4e0
000000000004e1a0	ldr	x26, [x20]
000000000004e1a4	mov	x0, x20
000000000004e1a8	blr	x26
000000000004e1ac	ldr	x8, [x0]
000000000004e1b0	add	x19, x8, #0x138
000000000004e1b4	ldaxr	w25, [x19]
000000000004e1b8	stlxr	w8, wzr, [x19]
000000000004e1bc	cbnz	w8, 0x4e1b4
000000000004e1c0	adr	x24, #0x46349
000000000004e1c4	nop
000000000004e1c8	cmp	w25, #0x1
000000000004e1cc	b.ne	0x4e1e0
000000000004e1d0	ldarb	w8, [x24]
000000000004e1d4	tbz	w8, #0x0, 0x4e1e0
000000000004e1d8	mov	x0, x19
000000000004e1dc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e1e0	bl	_Kotlin_initRuntimeIfNeeded
000000000004e1e4	lsr	x8, x21, #31
000000000004e1e8	cbnz	x8, 0x4e34c
000000000004e1ec	nop
000000000004e1f0	ldrsw	x8, _OBJC_IVAR_$_RCKKMutableListAsNSMutableArray.listHolder
000000000004e1f4	ldr	x22, [x22, x8]
000000000004e1f8	movi.16b	v0, #0x0
000000000004e1fc	stp	q0, q0, [sp]
000000000004e200	mov	x8, sp
000000000004e204	add	x23, x8, #0x18
000000000004e208	mov	x0, x20
000000000004e20c	blr	x26
000000000004e210	ldr	x9, [x0]
000000000004e214	ldr	x10, [x9, #0x110]
000000000004e218	str	x8, [x9, #0x110]
000000000004e21c	mov	x8, #0x400000000
000000000004e220	stp	x10, x8, [sp, #0x8]
000000000004e224	ldarb	w8, [x24]
000000000004e228	tbz	w8, #0x0, 0x4e230
000000000004e22c	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004e230	ldr	x8, [x22]
000000000004e234	and	x8, x8, #0xfffffffffffffffc
000000000004e238	ldr	x8, [x8]
000000000004e23c	ldr	w9, [x8, #0x3c]
000000000004e240	ldr	x8, [x8, #0x40]
000000000004e244	tbnz	w9, #0x1f, 0x4e254
000000000004e248	mov	w10, #0x16
000000000004e24c	and	x9, x9, x10
000000000004e250	b	0x4e2d8
000000000004e254	neg	w10, w9
000000000004e258	mvn	w9, w9
000000000004e25c	cmp	w10, #0x9
000000000004e260	b.ge	0x4e298
000000000004e264	cmp	w10, #0x2
000000000004e268	b.lt	0x4e2cc
000000000004e26c	mov	x10, #0x0
000000000004e270	mov	x11, x8
000000000004e274	ldr	w12, [x11]
000000000004e278	cmp	w12, #0x15
000000000004e27c	b.gt	0x4e2d4
000000000004e280	add	x10, x10, #0x1
000000000004e284	add	x11, x11, #0x10
000000000004e288	cmp	x9, x10
000000000004e28c	b.ne	0x4e274
000000000004e290	mov	x10, x9
000000000004e294	b	0x4e2d4
000000000004e298	mov	w10, #0x0
000000000004e29c	add	w11, w9, w10
000000000004e2a0	cmp	w11, #0x0
000000000004e2a4	cinc	w11, w11, lt
000000000004e2a8	asr	w11, w11, #1
000000000004e2ac	sbfiz	x12, x11, #4, #32
000000000004e2b0	ldr	w12, [x8, x12]
000000000004e2b4	cmp	w12, #0x16
000000000004e2b8	csinc	w10, w10, w11, ge
000000000004e2bc	csel	w9, w9, w11, lt
000000000004e2c0	cmp	w10, w9
000000000004e2c4	b.lt	0x4e29c
000000000004e2c8	b	0x4e2d4
000000000004e2cc	mov	w10, #0x0
000000000004e2d0	b	0x4e2d4
000000000004e2d4	sxtw	x9, w10
000000000004e2d8	add	x8, x8, x9, lsl #4
000000000004e2dc	ldr	x8, [x8, #0x8]
000000000004e2e0	ldr	x8, [x8, #0x48]
000000000004e2e4	mov	x0, x22
000000000004e2e8	mov	x1, x21
000000000004e2ec	mov	x2, x23
000000000004e2f0	blr	x8
000000000004e2f4	mov	x0, x20
000000000004e2f8	blr	x26
000000000004e2fc	ldr	x8, [x0]
000000000004e300	ldr	x9, [sp, #0x8]
000000000004e304	str	x9, [x8, #0x110]
000000000004e308	ldaxr	w8, [x19]
000000000004e30c	stlxr	w9, w25, [x19]
000000000004e310	cbnz	w9, 0x4e308
000000000004e314	cbnz	w25, 0x4e330
000000000004e318	cmp	w8, #0x1
000000000004e31c	b.ne	0x4e330
000000000004e320	ldarb	w8, [x24]
000000000004e324	tbz	w8, #0x0, 0x4e330
000000000004e328	mov	x0, x19
000000000004e32c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e330	ldp	x29, x30, [sp, #0x60]
000000000004e334	ldp	x20, x19, [sp, #0x50]
000000000004e338	ldp	x22, x21, [sp, #0x40]
000000000004e33c	ldp	x24, x23, [sp, #0x30]
000000000004e340	ldp	x26, x25, [sp, #0x20]
000000000004e344	add	sp, sp, #0x70
000000000004e348	ret
000000000004e34c	bl	_ThrowArrayIndexOutOfBoundsException
000000000004e350	brk	#0x1
000000000004e354	mov	x21, x0
000000000004e358	mov	x0, x20
000000000004e35c	blr	x26
000000000004e360	ldr	x8, [x0]
000000000004e364	ldr	x9, [sp, #0x8]
000000000004e368	str	x9, [x8, #0x110]
000000000004e36c	b	0x4e374
000000000004e370	mov	x21, x0
000000000004e374	ldaxr	w8, [x19]
000000000004e378	stlxr	w9, w25, [x19]
000000000004e37c	cbnz	w9, 0x4e374
000000000004e380	cbnz	w25, 0x4e39c
000000000004e384	cmp	w8, #0x1
000000000004e388	b.ne	0x4e39c
000000000004e38c	ldarb	w8, [x24]
000000000004e390	tbz	w8, #0x0, 0x4e39c
000000000004e394	mov	x0, x19
000000000004e398	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e39c	mov	x0, x21
000000000004e3a0	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray addObject:]:
000000000004e3a4	sub	sp, sp, #0x70
000000000004e3a8	stp	x26, x25, [sp, #0x20]
000000000004e3ac	stp	x24, x23, [sp, #0x30]
000000000004e3b0	stp	x22, x21, [sp, #0x40]
000000000004e3b4	stp	x20, x19, [sp, #0x50]
000000000004e3b8	stp	x29, x30, [sp, #0x60]
000000000004e3bc	add	x29, sp, #0x60
000000000004e3c0	mov	x21, x2
000000000004e3c4	mov	x22, x0
000000000004e3c8	bl	_Kotlin_initRuntimeIfNeeded
000000000004e3cc	adrp	x20, 44 ; 0x7a000
000000000004e3d0	add	x20, x20, #0x4e0
000000000004e3d4	ldr	x24, [x20]
000000000004e3d8	mov	x0, x20
000000000004e3dc	blr	x24
000000000004e3e0	ldr	x8, [x0]
000000000004e3e4	add	x19, x8, #0x138
000000000004e3e8	ldaxr	w23, [x19]
000000000004e3ec	stlxr	w8, wzr, [x19]
000000000004e3f0	cbnz	w8, 0x4e3e8
000000000004e3f4	cmp	w23, #0x1
000000000004e3f8	b.ne	0x4e414
000000000004e3fc	adr	x8, #0x4610d
000000000004e400	nop
000000000004e404	ldarb	w8, [x8]
000000000004e408	tbz	w8, #0x0, 0x4e414
000000000004e40c	mov	x0, x19
000000000004e410	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e414	mov	x25, sp
000000000004e418	str	xzr, [sp, #0x18]
000000000004e41c	mov	x0, x20
000000000004e420	blr	x24
000000000004e424	ldr	x8, [x0]
000000000004e428	ldr	x9, [x8, #0x110]
000000000004e42c	str	x25, [x8, #0x110]
000000000004e430	mov	x8, #0x400000000
000000000004e434	stp	x9, x8, [sp, #0x8]
000000000004e438	nop
000000000004e43c	ldrsw	x26, _OBJC_IVAR_$_RCKKMutableListAsNSMutableArray.listHolder
000000000004e440	bl	_Kotlin_initRuntimeIfNeeded
000000000004e444	ldr	x22, [x22, x26]
000000000004e448	nop
000000000004e44c	ldr	x0, #0x28c2c ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004e450	nop
000000000004e454	ldr	x1, #0x2897c ; Objc selector ref: null
000000000004e458	bl	0x55ca8 ; Objc message: +[NSNull null]
000000000004e45c	cmp	x0, x21
000000000004e460	b.eq	0x4e484
000000000004e464	cbz	x21, 0x4e484
000000000004e468	add	x2, x25, #0x18
000000000004e46c	nop
000000000004e470	ldr	x1, #0x462e8
000000000004e474	mov	x0, x21
000000000004e478	bl	0x55ca8 ; Objc message: -[x0 null]
000000000004e47c	mov	x1, x0
000000000004e480	b	0x4e48c
000000000004e484	mov	x1, #0x0
000000000004e488	str	xzr, [sp, #0x18]
000000000004e48c	mov	x0, x22
000000000004e490	bl	_Kotlin_MutableCollection_addObject
000000000004e494	mov	x0, x20
000000000004e498	blr	x24
000000000004e49c	ldr	x8, [x0]
000000000004e4a0	ldr	x9, [sp, #0x8]
000000000004e4a4	str	x9, [x8, #0x110]
000000000004e4a8	ldaxr	w8, [x19]
000000000004e4ac	stlxr	w9, w23, [x19]
000000000004e4b0	cbnz	w9, 0x4e4a8
000000000004e4b4	cbnz	w23, 0x4e4d8
000000000004e4b8	cmp	w8, #0x1
000000000004e4bc	b.ne	0x4e4d8
000000000004e4c0	adr	x8, #0x46049
000000000004e4c4	nop
000000000004e4c8	ldarb	w8, [x8]
000000000004e4cc	tbz	w8, #0x0, 0x4e4d8
000000000004e4d0	mov	x0, x19
000000000004e4d4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e4d8	ldp	x29, x30, [sp, #0x60]
000000000004e4dc	ldp	x20, x19, [sp, #0x50]
000000000004e4e0	ldp	x22, x21, [sp, #0x40]
000000000004e4e4	ldp	x24, x23, [sp, #0x30]
000000000004e4e8	ldp	x26, x25, [sp, #0x20]
000000000004e4ec	add	sp, sp, #0x70
000000000004e4f0	ret
000000000004e4f4	mov	x21, x0
000000000004e4f8	mov	x0, x20
000000000004e4fc	blr	x24
000000000004e500	ldr	x8, [x0]
000000000004e504	ldr	x9, [sp, #0x8]
000000000004e508	str	x9, [x8, #0x110]
000000000004e50c	ldaxr	w8, [x19]
000000000004e510	stlxr	w9, w23, [x19]
000000000004e514	cbnz	w9, 0x4e50c
000000000004e518	cbnz	w23, 0x4e53c
000000000004e51c	cmp	w8, #0x1
000000000004e520	b.ne	0x4e53c
000000000004e524	adr	x8, #0x45fe5
000000000004e528	nop
000000000004e52c	ldarb	w8, [x8]
000000000004e530	tbz	w8, #0x0, 0x4e53c
000000000004e534	mov	x0, x19
000000000004e538	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e53c	mov	x0, x21
000000000004e540	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray removeLastObject]:
000000000004e544	sub	sp, sp, #0x70
000000000004e548	stp	x26, x25, [sp, #0x20]
000000000004e54c	stp	x24, x23, [sp, #0x30]
000000000004e550	stp	x22, x21, [sp, #0x40]
000000000004e554	stp	x20, x19, [sp, #0x50]
000000000004e558	stp	x29, x30, [sp, #0x60]
000000000004e55c	add	x29, sp, #0x60
000000000004e560	mov	x21, x0
000000000004e564	bl	_Kotlin_initRuntimeIfNeeded
000000000004e568	adrp	x20, 44 ; 0x7a000
000000000004e56c	add	x20, x20, #0x4e0
000000000004e570	ldr	x24, [x20]
000000000004e574	mov	x0, x20
000000000004e578	blr	x24
000000000004e57c	ldr	x8, [x0]
000000000004e580	add	x19, x8, #0x138
000000000004e584	ldaxr	w23, [x19]
000000000004e588	stlxr	w8, wzr, [x19]
000000000004e58c	cbnz	w8, 0x4e584
000000000004e590	adr	x22, #0x45f79
000000000004e594	nop
000000000004e598	cmp	w23, #0x1
000000000004e59c	b.ne	0x4e5b0
000000000004e5a0	ldarb	w8, [x22]
000000000004e5a4	tbz	w8, #0x0, 0x4e5b0
000000000004e5a8	mov	x0, x19
000000000004e5ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e5b0	nop
000000000004e5b4	ldrsw	x25, _OBJC_IVAR_$_RCKKMutableListAsNSMutableArray.listHolder
000000000004e5b8	bl	_Kotlin_initRuntimeIfNeeded
000000000004e5bc	ldr	x21, [x21, x25]
000000000004e5c0	movi.16b	v0, #0x0
000000000004e5c4	stp	q0, q0, [sp]
000000000004e5c8	mov	x25, sp
000000000004e5cc	mov	x0, x20
000000000004e5d0	blr	x24
000000000004e5d4	ldr	x8, [x0]
000000000004e5d8	ldr	x9, [x8, #0x110]
000000000004e5dc	str	x25, [x8, #0x110]
000000000004e5e0	mov	x8, #0x400000000
000000000004e5e4	stp	x9, x8, [sp, #0x8]
000000000004e5e8	ldarb	w8, [x22]
000000000004e5ec	tbz	w8, #0x0, 0x4e5f4
000000000004e5f0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004e5f4	mov	x0, x21
000000000004e5f8	bl	"_kfun:kotlin.collections#<get-lastIndex>__at__kotlin.collections.List<0:0>(){0§<kotlin.Any?>}kotlin.Int"
000000000004e5fc	mov	x1, x0
000000000004e600	add	x2, x25, #0x18
000000000004e604	ldr	x8, [x21]
000000000004e608	and	x8, x8, #0xfffffffffffffffc
000000000004e60c	ldr	x8, [x8]
000000000004e610	ldr	w9, [x8, #0x3c]
000000000004e614	ldr	x8, [x8, #0x40]
000000000004e618	tbnz	w9, #0x1f, 0x4e628
000000000004e61c	mov	w10, #0x16
000000000004e620	and	x9, x9, x10
000000000004e624	b	0x4e6ac
000000000004e628	neg	w10, w9
000000000004e62c	mvn	w9, w9
000000000004e630	cmp	w10, #0x9
000000000004e634	b.ge	0x4e66c
000000000004e638	cmp	w10, #0x2
000000000004e63c	b.lt	0x4e6a0
000000000004e640	mov	x10, #0x0
000000000004e644	mov	x11, x8
000000000004e648	ldr	w12, [x11]
000000000004e64c	cmp	w12, #0x15
000000000004e650	b.gt	0x4e6a8
000000000004e654	add	x10, x10, #0x1
000000000004e658	add	x11, x11, #0x10
000000000004e65c	cmp	x9, x10
000000000004e660	b.ne	0x4e648
000000000004e664	mov	x10, x9
000000000004e668	b	0x4e6a8
000000000004e66c	mov	w10, #0x0
000000000004e670	add	w11, w9, w10
000000000004e674	cmp	w11, #0x0
000000000004e678	cinc	w11, w11, lt
000000000004e67c	asr	w11, w11, #1
000000000004e680	sbfiz	x12, x11, #4, #32
000000000004e684	ldr	w12, [x8, x12]
000000000004e688	cmp	w12, #0x16
000000000004e68c	csinc	w10, w10, w11, ge
000000000004e690	csel	w9, w9, w11, lt
000000000004e694	cmp	w10, w9
000000000004e698	b.lt	0x4e670
000000000004e69c	b	0x4e6a8
000000000004e6a0	mov	w10, #0x0
000000000004e6a4	b	0x4e6a8
000000000004e6a8	sxtw	x9, w10
000000000004e6ac	add	x8, x8, x9, lsl #4
000000000004e6b0	ldr	x8, [x8, #0x8]
000000000004e6b4	ldr	x8, [x8, #0x48]
000000000004e6b8	mov	x0, x21
000000000004e6bc	blr	x8
000000000004e6c0	mov	x0, x20
000000000004e6c4	blr	x24
000000000004e6c8	ldr	x8, [x0]
000000000004e6cc	ldr	x9, [sp, #0x8]
000000000004e6d0	str	x9, [x8, #0x110]
000000000004e6d4	ldaxr	w8, [x19]
000000000004e6d8	stlxr	w9, w23, [x19]
000000000004e6dc	cbnz	w9, 0x4e6d4
000000000004e6e0	cbnz	w23, 0x4e6fc
000000000004e6e4	cmp	w8, #0x1
000000000004e6e8	b.ne	0x4e6fc
000000000004e6ec	ldarb	w8, [x22]
000000000004e6f0	tbz	w8, #0x0, 0x4e6fc
000000000004e6f4	mov	x0, x19
000000000004e6f8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e6fc	ldp	x29, x30, [sp, #0x60]
000000000004e700	ldp	x20, x19, [sp, #0x50]
000000000004e704	ldp	x22, x21, [sp, #0x40]
000000000004e708	ldp	x24, x23, [sp, #0x30]
000000000004e70c	ldp	x26, x25, [sp, #0x20]
000000000004e710	add	sp, sp, #0x70
000000000004e714	ret
000000000004e718	mov	x21, x0
000000000004e71c	mov	x0, x20
000000000004e720	blr	x24
000000000004e724	ldr	x8, [x0]
000000000004e728	ldr	x9, [sp, #0x8]
000000000004e72c	str	x9, [x8, #0x110]
000000000004e730	ldaxr	w8, [x19]
000000000004e734	stlxr	w9, w23, [x19]
000000000004e738	cbnz	w9, 0x4e730
000000000004e73c	cbnz	w23, 0x4e758
000000000004e740	cmp	w8, #0x1
000000000004e744	b.ne	0x4e758
000000000004e748	ldarb	w8, [x22]
000000000004e74c	tbz	w8, #0x0, 0x4e758
000000000004e750	mov	x0, x19
000000000004e754	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e758	mov	x0, x21
000000000004e75c	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KMutableListAsNSMutableArray replaceObjectAtIndex:withObject:]:
000000000004e760	sub	sp, sp, #0xa0
000000000004e764	stp	x28, x27, [sp, #0x40]
000000000004e768	stp	x26, x25, [sp, #0x50]
000000000004e76c	stp	x24, x23, [sp, #0x60]
000000000004e770	stp	x22, x21, [sp, #0x70]
000000000004e774	stp	x20, x19, [sp, #0x80]
000000000004e778	stp	x29, x30, [sp, #0x90]
000000000004e77c	add	x29, sp, #0x90
000000000004e780	mov	x22, x3
000000000004e784	mov	x21, x2
000000000004e788	mov	x23, x0
000000000004e78c	bl	_Kotlin_initRuntimeIfNeeded
000000000004e790	adrp	x20, 44 ; 0x7a000
000000000004e794	add	x20, x20, #0x4e0
000000000004e798	ldr	x26, [x20]
000000000004e79c	mov	x0, x20
000000000004e7a0	blr	x26
000000000004e7a4	ldr	x8, [x0]
000000000004e7a8	add	x19, x8, #0x138
000000000004e7ac	ldaxr	w25, [x19]
000000000004e7b0	stlxr	w8, wzr, [x19]
000000000004e7b4	cbnz	w8, 0x4e7ac
000000000004e7b8	cmp	w25, #0x1
000000000004e7bc	b.ne	0x4e7d8
000000000004e7c0	adr	x8, #0x45d49
000000000004e7c4	nop
000000000004e7c8	ldarb	w8, [x8]
000000000004e7cc	tbz	w8, #0x0, 0x4e7d8
000000000004e7d0	mov	x0, x19
000000000004e7d4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e7d8	mov	x24, sp
000000000004e7dc	str	xzr, [sp, #0x18]
000000000004e7e0	mov	x0, x20
000000000004e7e4	blr	x26
000000000004e7e8	ldr	x8, [x0]
000000000004e7ec	ldr	x9, [x8, #0x110]
000000000004e7f0	str	x24, [x8, #0x110]
000000000004e7f4	mov	x8, #0x400000000
000000000004e7f8	stp	x9, x8, [sp, #0x8]
000000000004e7fc	nop
000000000004e800	ldr	x0, #0x28878 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004e804	nop
000000000004e808	ldr	x1, #0x285c8 ; Objc selector ref: null
000000000004e80c	bl	0x55ca8 ; Objc message: +[NSNull null]
000000000004e810	cmp	x0, x22
000000000004e814	ccmp	x22, #0x0, #0x4, ne
000000000004e818	b.ne	0x4e828
000000000004e81c	mov	x22, #0x0
000000000004e820	str	xzr, [sp, #0x18]
000000000004e824	b	0x4e840
000000000004e828	add	x2, x24, #0x18
000000000004e82c	nop
000000000004e830	ldr	x1, #0x45f28
000000000004e834	mov	x0, x22
000000000004e838	bl	0x55ca8 ; Objc message: -[x0 null]
000000000004e83c	mov	x22, x0
000000000004e840	bl	_Kotlin_initRuntimeIfNeeded
000000000004e844	lsr	x8, x21, #31
000000000004e848	cbnz	x8, 0x4e9bc
000000000004e84c	nop
000000000004e850	ldrsw	x8, _OBJC_IVAR_$_RCKKMutableListAsNSMutableArray.listHolder
000000000004e854	ldr	x23, [x23, x8]
000000000004e858	movi.16b	v0, #0x0
000000000004e85c	stp	q0, q0, [sp, #0x20]
000000000004e860	add	x8, sp, #0x20
000000000004e864	add	x24, x8, #0x18
000000000004e868	mov	x0, x20
000000000004e86c	blr	x26
000000000004e870	ldr	x9, [x0]
000000000004e874	ldr	x10, [x9, #0x110]
000000000004e878	str	x8, [x9, #0x110]
000000000004e87c	mov	x8, #0x400000000
000000000004e880	stp	x10, x8, [sp, #0x28]
000000000004e884	adr	x27, #0x45c85
000000000004e888	nop
000000000004e88c	ldarb	w8, [x27]
000000000004e890	tbz	w8, #0x0, 0x4e898
000000000004e894	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004e898	ldr	x8, [x23]
000000000004e89c	and	x8, x8, #0xfffffffffffffffc
000000000004e8a0	ldr	x8, [x8]
000000000004e8a4	ldr	w9, [x8, #0x3c]
000000000004e8a8	ldr	x8, [x8, #0x40]
000000000004e8ac	tbnz	w9, #0x1f, 0x4e8bc
000000000004e8b0	mov	w10, #0x16
000000000004e8b4	and	x9, x9, x10
000000000004e8b8	b	0x4e940
000000000004e8bc	neg	w10, w9
000000000004e8c0	mvn	w9, w9
000000000004e8c4	cmp	w10, #0x9
000000000004e8c8	b.ge	0x4e900
000000000004e8cc	cmp	w10, #0x2
000000000004e8d0	b.lt	0x4e934
000000000004e8d4	mov	x10, #0x0
000000000004e8d8	mov	x11, x8
000000000004e8dc	ldr	w12, [x11]
000000000004e8e0	cmp	w12, #0x15
000000000004e8e4	b.gt	0x4e93c
000000000004e8e8	add	x10, x10, #0x1
000000000004e8ec	add	x11, x11, #0x10
000000000004e8f0	cmp	x9, x10
000000000004e8f4	b.ne	0x4e8dc
000000000004e8f8	mov	x10, x9
000000000004e8fc	b	0x4e93c
000000000004e900	mov	w10, #0x0
000000000004e904	add	w11, w9, w10
000000000004e908	cmp	w11, #0x0
000000000004e90c	cinc	w11, w11, lt
000000000004e910	asr	w11, w11, #1
000000000004e914	sbfiz	x12, x11, #4, #32
000000000004e918	ldr	w12, [x8, x12]
000000000004e91c	cmp	w12, #0x16
000000000004e920	csinc	w10, w10, w11, ge
000000000004e924	csel	w9, w9, w11, lt
000000000004e928	cmp	w10, w9
000000000004e92c	b.lt	0x4e904
000000000004e930	b	0x4e93c
000000000004e934	mov	w10, #0x0
000000000004e938	b	0x4e93c
000000000004e93c	sxtw	x9, w10
000000000004e940	add	x8, x8, x9, lsl #4
000000000004e944	ldr	x8, [x8, #0x8]
000000000004e948	ldr	x8, [x8, #0x58]
000000000004e94c	mov	x0, x23
000000000004e950	mov	x1, x21
000000000004e954	mov	x2, x22
000000000004e958	mov	x3, x24
000000000004e95c	blr	x8
000000000004e960	mov	x0, x20
000000000004e964	blr	x26
000000000004e968	ldr	x8, [x0]
000000000004e96c	ldr	x9, [sp, #0x8]
000000000004e970	str	x9, [x8, #0x110]
000000000004e974	ldaxr	w8, [x19]
000000000004e978	stlxr	w9, w25, [x19]
000000000004e97c	cbnz	w9, 0x4e974
000000000004e980	cbnz	w25, 0x4e99c
000000000004e984	cmp	w8, #0x1
000000000004e988	b.ne	0x4e99c
000000000004e98c	ldarb	w8, [x27]
000000000004e990	tbz	w8, #0x0, 0x4e99c
000000000004e994	mov	x0, x19
000000000004e998	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004e99c	ldp	x29, x30, [sp, #0x90]
000000000004e9a0	ldp	x20, x19, [sp, #0x80]
000000000004e9a4	ldp	x22, x21, [sp, #0x70]
000000000004e9a8	ldp	x24, x23, [sp, #0x60]
000000000004e9ac	ldp	x26, x25, [sp, #0x50]
000000000004e9b0	ldp	x28, x27, [sp, #0x40]
000000000004e9b4	add	sp, sp, #0xa0
000000000004e9b8	ret
000000000004e9bc	bl	_ThrowArrayIndexOutOfBoundsException
000000000004e9c0	brk	#0x1
000000000004e9c4	mov	x21, x0
000000000004e9c8	mov	x0, x20
000000000004e9cc	blr	x26
000000000004e9d0	ldr	x8, [x0]
000000000004e9d4	ldr	x9, [sp, #0x28]
000000000004e9d8	str	x9, [x8, #0x110]
000000000004e9dc	b	0x4e9f0
000000000004e9e0	mov	x21, x0
000000000004e9e4	mov	x0, x20
000000000004e9e8	blr	x26
000000000004e9ec	ldr	x8, [x0]
000000000004e9f0	ldr	x9, [sp, #0x8]
000000000004e9f4	str	x9, [x8, #0x110]
000000000004e9f8	ldaxr	w8, [x19]
000000000004e9fc	stlxr	w9, w25, [x19]
000000000004ea00	cbnz	w9, 0x4e9f8
000000000004ea04	cbnz	w25, 0x4ea28
000000000004ea08	cmp	w8, #0x1
000000000004ea0c	b.ne	0x4ea28
000000000004ea10	adr	x8, #0x45af9
000000000004ea14	nop
000000000004ea18	ldarb	w8, [x8]
000000000004ea1c	tbz	w8, #0x0, 0x4ea28
000000000004ea20	mov	x0, x19
000000000004ea24	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ea28	mov	x0, x21
000000000004ea2c	bl	0x558ac ; symbol stub for: __Unwind_Resume
+[KMutableListAsNSMutableArray createRetainedWithKList:]:
000000000004ea30	stp	x22, x21, [sp, #-0x30]!
000000000004ea34	stp	x20, x19, [sp, #0x10]
000000000004ea38	stp	x29, x30, [sp, #0x20]
000000000004ea3c	add	x29, sp, #0x20
000000000004ea40	mov	x19, x2
000000000004ea44	nop
000000000004ea48	ldr	x0, #0x28660 ; Objc class ref: RCKKMutableListAsNSMutableArray
000000000004ea4c	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000004ea50	nop
000000000004ea54	ldr	x1, #0x2826c ; Objc selector ref: init
000000000004ea58	bl	0x55ca8 ; Objc message: +[RCKKMutableListAsNSMutableArray init]
000000000004ea5c	mov	x20, x0
000000000004ea60	nop
000000000004ea64	ldrsw	x8, _OBJC_IVAR_$_RCKKMutableListAsNSMutableArray.listHolder
000000000004ea68	add	x21, x0, x8
000000000004ea6c	adrp	x0, 44 ; 0x7a000
000000000004ea70	add	x0, x0, #0x4e0
000000000004ea74	ldr	x8, [x0]
000000000004ea78	blr	x8
000000000004ea7c	ldr	x22, [x0]
000000000004ea80	mov	w0, #0x1
000000000004ea84	mov	w1, #0x28
000000000004ea88	bl	0x55aec ; symbol stub for: _calloc
000000000004ea8c	ldr	x8, [x22, #0xa8]!
000000000004ea90	sub	x9, x22, #0x8
000000000004ea94	stp	x8, x22, [x0]
000000000004ea98	str	x0, [x8, #0x8]
000000000004ea9c	str	x0, [x22]
000000000004eaa0	ldr	x8, [x22, #0x10]
000000000004eaa4	add	x8, x8, #0x1
000000000004eaa8	str	x8, [x22, #0x10]
000000000004eaac	stp	x9, x0, [x0, #0x18]
000000000004eab0	str	x19, [x0, #0x10]!
000000000004eab4	stp	x19, x0, [x21]
000000000004eab8	mov	x0, x20
000000000004eabc	ldp	x29, x30, [sp, #0x20]
000000000004eac0	ldp	x20, x19, [sp, #0x10]
000000000004eac4	ldp	x22, x21, [sp], #0x30
000000000004eac8	ret
-[KSetAsNSSet dealloc]:
000000000004eacc	sub	sp, sp, #0x60
000000000004ead0	stp	x26, x25, [sp, #0x10]
000000000004ead4	stp	x24, x23, [sp, #0x20]
000000000004ead8	stp	x22, x21, [sp, #0x30]
000000000004eadc	stp	x20, x19, [sp, #0x40]
000000000004eae0	stp	x29, x30, [sp, #0x50]
000000000004eae4	add	x29, sp, #0x50
000000000004eae8	mov	x19, x0
000000000004eaec	nop
000000000004eaf0	ldrsw	x8, _OBJC_IVAR_$_RCKKSetAsNSSet.setHolder
000000000004eaf4	add	x24, x0, x8
000000000004eaf8	bl	_Kotlin_initRuntimeIfNeeded
000000000004eafc	adrp	x21, 44 ; 0x7a000
000000000004eb00	add	x21, x21, #0x4e0
000000000004eb04	ldr	x25, [x21]
000000000004eb08	mov	x0, x21
000000000004eb0c	blr	x25
000000000004eb10	ldr	x8, [x0]
000000000004eb14	add	x20, x8, #0x138
000000000004eb18	ldaxr	w22, [x20]
000000000004eb1c	stlxr	w8, wzr, [x20]
000000000004eb20	cbnz	w8, 0x4eb18
000000000004eb24	adr	x23, #0x459e5
000000000004eb28	nop
000000000004eb2c	cmp	w22, #0x1
000000000004eb30	b.ne	0x4eb44
000000000004eb34	ldarb	w8, [x23]
000000000004eb38	tbz	w8, #0x0, 0x4eb44
000000000004eb3c	mov	x0, x20
000000000004eb40	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004eb44	ldr	x8, [x24]
000000000004eb48	cbz	x8, 0x4eb64
000000000004eb4c	ldr	x1, [x24, #0x8]
000000000004eb50	mov	x0, x21
000000000004eb54	blr	x25
000000000004eb58	ldr	x8, [x0]
000000000004eb5c	add	x0, x8, #0x8
000000000004eb60	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004eb64	ldaxr	w8, [x20]
000000000004eb68	stlxr	w9, w22, [x20]
000000000004eb6c	cbnz	w9, 0x4eb64
000000000004eb70	cbnz	w22, 0x4eb8c
000000000004eb74	cmp	w8, #0x1
000000000004eb78	b.ne	0x4eb8c
000000000004eb7c	ldarb	w8, [x23]
000000000004eb80	tbz	w8, #0x0, 0x4eb8c
000000000004eb84	mov	x0, x20
000000000004eb88	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004eb8c	nop
000000000004eb90	ldr	x8, #0x28570 ; Objc class ref: RCKKSetAsNSSet
000000000004eb94	stp	x19, x8, [sp]
000000000004eb98	nop
000000000004eb9c	ldr	x1, #0x280d4 ; Objc selector ref: dealloc
000000000004eba0	mov	x0, sp
000000000004eba4	bl	0x55cb4 ; Objc message: -[[x0 super] dealloc]
000000000004eba8	ldp	x29, x30, [sp, #0x50]
000000000004ebac	ldp	x20, x19, [sp, #0x40]
000000000004ebb0	ldp	x22, x21, [sp, #0x30]
000000000004ebb4	ldp	x24, x23, [sp, #0x20]
000000000004ebb8	ldp	x26, x25, [sp, #0x10]
000000000004ebbc	add	sp, sp, #0x60
000000000004ebc0	ret
-[KSetAsNSSet toKotlin:]:
000000000004ebc4	stp	x22, x21, [sp, #-0x30]!
000000000004ebc8	stp	x20, x19, [sp, #0x10]
000000000004ebcc	stp	x29, x30, [sp, #0x20]
000000000004ebd0	add	x29, sp, #0x20
000000000004ebd4	mov	x19, x2
000000000004ebd8	mov	x20, x0
000000000004ebdc	nop
000000000004ebe0	ldrsw	x21, _OBJC_IVAR_$_RCKKSetAsNSSet.setHolder
000000000004ebe4	bl	_Kotlin_initRuntimeIfNeeded
000000000004ebe8	ldr	x0, [x20, x21]
000000000004ebec	str	x0, [x19]
000000000004ebf0	ldp	x29, x30, [sp, #0x20]
000000000004ebf4	ldp	x20, x19, [sp, #0x10]
000000000004ebf8	ldp	x22, x21, [sp], #0x30
000000000004ebfc	ret
-[KSetAsNSSet count]:
000000000004ec00	stp	x22, x21, [sp, #-0x30]!
000000000004ec04	stp	x20, x19, [sp, #0x10]
000000000004ec08	stp	x29, x30, [sp, #0x20]
000000000004ec0c	add	x29, sp, #0x20
000000000004ec10	mov	x20, x0
000000000004ec14	bl	_Kotlin_initRuntimeIfNeeded
000000000004ec18	adrp	x0, 44 ; 0x7a000
000000000004ec1c	add	x0, x0, #0x4e0
000000000004ec20	ldr	x8, [x0]
000000000004ec24	blr	x8
000000000004ec28	ldr	x8, [x0]
000000000004ec2c	add	x19, x8, #0x138
000000000004ec30	ldaxr	w21, [x19]
000000000004ec34	stlxr	w8, wzr, [x19]
000000000004ec38	cbnz	w8, 0x4ec30
000000000004ec3c	cmp	w21, #0x1
000000000004ec40	b.ne	0x4ec5c
000000000004ec44	adr	x8, #0x458c5
000000000004ec48	nop
000000000004ec4c	ldarb	w8, [x8]
000000000004ec50	tbz	w8, #0x0, 0x4ec5c
000000000004ec54	mov	x0, x19
000000000004ec58	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ec5c	nop
000000000004ec60	ldrsw	x22, _OBJC_IVAR_$_RCKKSetAsNSSet.setHolder
000000000004ec64	bl	_Kotlin_initRuntimeIfNeeded
000000000004ec68	ldr	x0, [x20, x22]
000000000004ec6c	bl	_Kotlin_Collection_getSize
000000000004ec70	mov	x20, x0
000000000004ec74	ldaxr	w8, [x19]
000000000004ec78	stlxr	w9, w21, [x19]
000000000004ec7c	cbnz	w9, 0x4ec74
000000000004ec80	cbnz	w21, 0x4eca4
000000000004ec84	cmp	w8, #0x1
000000000004ec88	b.ne	0x4eca4
000000000004ec8c	adr	x8, #0x4587d
000000000004ec90	nop
000000000004ec94	ldarb	w8, [x8]
000000000004ec98	tbz	w8, #0x0, 0x4eca4
000000000004ec9c	mov	x0, x19
000000000004eca0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004eca4	sxtw	x0, w20
000000000004eca8	ldp	x29, x30, [sp, #0x20]
000000000004ecac	ldp	x20, x19, [sp, #0x10]
000000000004ecb0	ldp	x22, x21, [sp], #0x30
000000000004ecb4	ret
000000000004ecb8	mov	x20, x0
000000000004ecbc	ldaxr	w8, [x19]
000000000004ecc0	stlxr	w9, w21, [x19]
000000000004ecc4	cbnz	w9, 0x4ecbc
000000000004ecc8	cbnz	w21, 0x4ecec
000000000004eccc	cmp	w8, #0x1
000000000004ecd0	b.ne	0x4ecec
000000000004ecd4	adr	x8, #0x45835
000000000004ecd8	nop
000000000004ecdc	ldarb	w8, [x8]
000000000004ece0	tbz	w8, #0x0, 0x4ecec
000000000004ece4	mov	x0, x19
000000000004ece8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ecec	mov	x0, x20
000000000004ecf0	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KSetAsNSSet member:]:
000000000004ecf4	stp	x24, x23, [sp, #-0x40]!
000000000004ecf8	stp	x22, x21, [sp, #0x10]
000000000004ecfc	stp	x20, x19, [sp, #0x20]
000000000004ed00	stp	x29, x30, [sp, #0x30]
000000000004ed04	add	x29, sp, #0x30
000000000004ed08	mov	x20, x2
000000000004ed0c	mov	x21, x0
000000000004ed10	bl	_Kotlin_initRuntimeIfNeeded
000000000004ed14	adrp	x0, 44 ; 0x7a000
000000000004ed18	add	x0, x0, #0x4e0
000000000004ed1c	ldr	x8, [x0]
000000000004ed20	blr	x8
000000000004ed24	ldr	x8, [x0]
000000000004ed28	add	x19, x8, #0x138
000000000004ed2c	ldaxr	w22, [x19]
000000000004ed30	stlxr	w8, wzr, [x19]
000000000004ed34	cbnz	w8, 0x4ed2c
000000000004ed38	cmp	w22, #0x1
000000000004ed3c	b.ne	0x4ed58
000000000004ed40	adr	x8, #0x457c9
000000000004ed44	nop
000000000004ed48	ldarb	w8, [x8]
000000000004ed4c	tbz	w8, #0x0, 0x4ed58
000000000004ed50	mov	x0, x19
000000000004ed54	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ed58	nop
000000000004ed5c	ldrsw	x23, _OBJC_IVAR_$_RCKKSetAsNSSet.setHolder
000000000004ed60	bl	_Kotlin_initRuntimeIfNeeded
000000000004ed64	ldr	x0, [x21, x23]
000000000004ed68	mov	x1, x20
000000000004ed6c	bl	__ZL15KSet_getElementP9ObjHeaderP11objc_object
000000000004ed70	mov	x20, x0
000000000004ed74	ldaxr	w8, [x19]
000000000004ed78	stlxr	w9, w22, [x19]
000000000004ed7c	cbnz	w9, 0x4ed74
000000000004ed80	cbnz	w22, 0x4eda4
000000000004ed84	cmp	w8, #0x1
000000000004ed88	b.ne	0x4eda4
000000000004ed8c	adr	x8, #0x4577d
000000000004ed90	nop
000000000004ed94	ldarb	w8, [x8]
000000000004ed98	tbz	w8, #0x0, 0x4eda4
000000000004ed9c	mov	x0, x19
000000000004eda0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004eda4	mov	x0, x20
000000000004eda8	ldp	x29, x30, [sp, #0x30]
000000000004edac	ldp	x20, x19, [sp, #0x20]
000000000004edb0	ldp	x22, x21, [sp, #0x10]
000000000004edb4	ldp	x24, x23, [sp], #0x40
000000000004edb8	ret
000000000004edbc	mov	x20, x0
000000000004edc0	ldaxr	w8, [x19]
000000000004edc4	stlxr	w9, w22, [x19]
000000000004edc8	cbnz	w9, 0x4edc0
000000000004edcc	cbnz	w22, 0x4edf0
000000000004edd0	cmp	w8, #0x1
000000000004edd4	b.ne	0x4edf0
000000000004edd8	adr	x8, #0x45731
000000000004eddc	nop
000000000004ede0	ldarb	w8, [x8]
000000000004ede4	tbz	w8, #0x0, 0x4edf0
000000000004ede8	mov	x0, x19
000000000004edec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004edf0	mov	x0, x20
000000000004edf4	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KSetAsNSSet containsObject:]:
000000000004edf8	sub	sp, sp, #0x70
000000000004edfc	stp	x26, x25, [sp, #0x20]
000000000004ee00	stp	x24, x23, [sp, #0x30]
000000000004ee04	stp	x22, x21, [sp, #0x40]
000000000004ee08	stp	x20, x19, [sp, #0x50]
000000000004ee0c	stp	x29, x30, [sp, #0x60]
000000000004ee10	add	x29, sp, #0x60
000000000004ee14	mov	x21, x2
000000000004ee18	mov	x22, x0
000000000004ee1c	bl	_Kotlin_initRuntimeIfNeeded
000000000004ee20	adrp	x20, 44 ; 0x7a000
000000000004ee24	add	x20, x20, #0x4e0
000000000004ee28	ldr	x24, [x20]
000000000004ee2c	mov	x0, x20
000000000004ee30	blr	x24
000000000004ee34	ldr	x8, [x0]
000000000004ee38	add	x19, x8, #0x138
000000000004ee3c	ldaxr	w23, [x19]
000000000004ee40	stlxr	w8, wzr, [x19]
000000000004ee44	cbnz	w8, 0x4ee3c
000000000004ee48	cmp	w23, #0x1
000000000004ee4c	b.ne	0x4ee68
000000000004ee50	adr	x8, #0x456b9
000000000004ee54	nop
000000000004ee58	ldarb	w8, [x8]
000000000004ee5c	tbz	w8, #0x0, 0x4ee68
000000000004ee60	mov	x0, x19
000000000004ee64	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ee68	mov	x25, sp
000000000004ee6c	str	xzr, [sp, #0x18]
000000000004ee70	mov	x0, x20
000000000004ee74	blr	x24
000000000004ee78	ldr	x8, [x0]
000000000004ee7c	ldr	x9, [x8, #0x110]
000000000004ee80	str	x25, [x8, #0x110]
000000000004ee84	mov	x8, #0x400000000
000000000004ee88	stp	x9, x8, [sp, #0x8]
000000000004ee8c	nop
000000000004ee90	ldrsw	x26, _OBJC_IVAR_$_RCKKSetAsNSSet.setHolder
000000000004ee94	bl	_Kotlin_initRuntimeIfNeeded
000000000004ee98	ldr	x22, [x22, x26]
000000000004ee9c	nop
000000000004eea0	ldr	x0, #0x281d8 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004eea4	nop
000000000004eea8	ldr	x1, #0x27f28 ; Objc selector ref: null
000000000004eeac	bl	0x55ca8 ; Objc message: +[NSNull null]
000000000004eeb0	cmp	x0, x21
000000000004eeb4	b.eq	0x4eed8
000000000004eeb8	cbz	x21, 0x4eed8
000000000004eebc	add	x2, x25, #0x18
000000000004eec0	nop
000000000004eec4	ldr	x1, #0x45894
000000000004eec8	mov	x0, x21
000000000004eecc	bl	0x55ca8 ; Objc message: -[x0 null]
000000000004eed0	mov	x1, x0
000000000004eed4	b	0x4eee0
000000000004eed8	mov	x1, #0x0
000000000004eedc	str	xzr, [sp, #0x18]
000000000004eee0	mov	x0, x22
000000000004eee4	bl	_Kotlin_Set_contains
000000000004eee8	mov	x21, x0
000000000004eeec	mov	x0, x20
000000000004eef0	blr	x24
000000000004eef4	ldr	x8, [x0]
000000000004eef8	ldr	x9, [sp, #0x8]
000000000004eefc	str	x9, [x8, #0x110]
000000000004ef00	ldaxr	w8, [x19]
000000000004ef04	stlxr	w9, w23, [x19]
000000000004ef08	cbnz	w9, 0x4ef00
000000000004ef0c	cbnz	w23, 0x4ef30
000000000004ef10	cmp	w8, #0x1
000000000004ef14	b.ne	0x4ef30
000000000004ef18	adr	x8, #0x455f1
000000000004ef1c	nop
000000000004ef20	ldarb	w8, [x8]
000000000004ef24	tbz	w8, #0x0, 0x4ef30
000000000004ef28	mov	x0, x19
000000000004ef2c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ef30	mov	x0, x21
000000000004ef34	ldp	x29, x30, [sp, #0x60]
000000000004ef38	ldp	x20, x19, [sp, #0x50]
000000000004ef3c	ldp	x22, x21, [sp, #0x40]
000000000004ef40	ldp	x24, x23, [sp, #0x30]
000000000004ef44	ldp	x26, x25, [sp, #0x20]
000000000004ef48	add	sp, sp, #0x70
000000000004ef4c	ret
000000000004ef50	mov	x21, x0
000000000004ef54	mov	x0, x20
000000000004ef58	blr	x24
000000000004ef5c	ldr	x8, [x0]
000000000004ef60	ldr	x9, [sp, #0x8]
000000000004ef64	str	x9, [x8, #0x110]
000000000004ef68	ldaxr	w8, [x19]
000000000004ef6c	stlxr	w9, w23, [x19]
000000000004ef70	cbnz	w9, 0x4ef68
000000000004ef74	cbnz	w23, 0x4ef98
000000000004ef78	cmp	w8, #0x1
000000000004ef7c	b.ne	0x4ef98
000000000004ef80	adr	x8, #0x45589
000000000004ef84	nop
000000000004ef88	ldarb	w8, [x8]
000000000004ef8c	tbz	w8, #0x0, 0x4ef98
000000000004ef90	mov	x0, x19
000000000004ef94	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ef98	mov	x0, x21
000000000004ef9c	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KSetAsNSSet objectEnumerator]:
000000000004efa0	sub	sp, sp, #0x70
000000000004efa4	stp	x26, x25, [sp, #0x20]
000000000004efa8	stp	x24, x23, [sp, #0x30]
000000000004efac	stp	x22, x21, [sp, #0x40]
000000000004efb0	stp	x20, x19, [sp, #0x50]
000000000004efb4	stp	x29, x30, [sp, #0x60]
000000000004efb8	add	x29, sp, #0x60
000000000004efbc	mov	x21, x0
000000000004efc0	bl	_Kotlin_initRuntimeIfNeeded
000000000004efc4	adrp	x20, 44 ; 0x7a000
000000000004efc8	add	x20, x20, #0x4e0
000000000004efcc	ldr	x25, [x20]
000000000004efd0	mov	x0, x20
000000000004efd4	blr	x25
000000000004efd8	ldr	x8, [x0]
000000000004efdc	add	x19, x8, #0x138
000000000004efe0	ldaxr	w24, [x19]
000000000004efe4	stlxr	w8, wzr, [x19]
000000000004efe8	cbnz	w8, 0x4efe0
000000000004efec	cmp	w24, #0x1
000000000004eff0	b.ne	0x4f00c
000000000004eff4	adr	x8, #0x45515
000000000004eff8	nop
000000000004effc	ldarb	w8, [x8]
000000000004f000	tbz	w8, #0x0, 0x4f00c
000000000004f004	mov	x0, x19
000000000004f008	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f00c	mov	x8, sp
000000000004f010	add	x23, x8, #0x18
000000000004f014	str	xzr, [sp, #0x18]
000000000004f018	mov	x0, x20
000000000004f01c	blr	x25
000000000004f020	ldr	x9, [x0]
000000000004f024	ldr	x10, [x9, #0x110]
000000000004f028	str	x8, [x9, #0x110]
000000000004f02c	mov	x8, #0x400000000
000000000004f030	stp	x10, x8, [sp, #0x8]
000000000004f034	nop
000000000004f038	ldr	x22, #0x28060 ; Objc class ref: RCKKIteratorAsNSEnumerator
000000000004f03c	nop
000000000004f040	ldrsw	x26, _OBJC_IVAR_$_RCKKSetAsNSSet.setHolder
000000000004f044	bl	_Kotlin_initRuntimeIfNeeded
000000000004f048	ldr	x0, [x21, x26]
000000000004f04c	mov	x1, x23
000000000004f050	bl	_Kotlin_Set_iterator
000000000004f054	mov	x2, x0
000000000004f058	nop
000000000004f05c	ldr	x1, #0x27c0c ; Objc selector ref: createWithKIterator:
000000000004f060	mov	x0, x22
000000000004f064	bl	0x55ca8 ; Objc message: +[RCKKIteratorAsNSEnumerator createWithKIterator:]
000000000004f068	mov	x21, x0
000000000004f06c	mov	x0, x20
000000000004f070	blr	x25
000000000004f074	ldr	x8, [x0]
000000000004f078	ldr	x9, [sp, #0x8]
000000000004f07c	str	x9, [x8, #0x110]
000000000004f080	ldaxr	w8, [x19]
000000000004f084	stlxr	w9, w24, [x19]
000000000004f088	cbnz	w9, 0x4f080
000000000004f08c	cbnz	w24, 0x4f0b0
000000000004f090	cmp	w8, #0x1
000000000004f094	b.ne	0x4f0b0
000000000004f098	adr	x8, #0x45471
000000000004f09c	nop
000000000004f0a0	ldarb	w8, [x8]
000000000004f0a4	tbz	w8, #0x0, 0x4f0b0
000000000004f0a8	mov	x0, x19
000000000004f0ac	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f0b0	mov	x0, x21
000000000004f0b4	ldp	x29, x30, [sp, #0x60]
000000000004f0b8	ldp	x20, x19, [sp, #0x50]
000000000004f0bc	ldp	x22, x21, [sp, #0x40]
000000000004f0c0	ldp	x24, x23, [sp, #0x30]
000000000004f0c4	ldp	x26, x25, [sp, #0x20]
000000000004f0c8	add	sp, sp, #0x70
000000000004f0cc	ret
000000000004f0d0	mov	x21, x0
000000000004f0d4	mov	x0, x20
000000000004f0d8	blr	x25
000000000004f0dc	ldr	x8, [x0]
000000000004f0e0	ldr	x9, [sp, #0x8]
000000000004f0e4	str	x9, [x8, #0x110]
000000000004f0e8	ldaxr	w8, [x19]
000000000004f0ec	stlxr	w9, w24, [x19]
000000000004f0f0	cbnz	w9, 0x4f0e8
000000000004f0f4	cbnz	w24, 0x4f118
000000000004f0f8	cmp	w8, #0x1
000000000004f0fc	b.ne	0x4f118
000000000004f100	adr	x8, #0x45409
000000000004f104	nop
000000000004f108	ldarb	w8, [x8]
000000000004f10c	tbz	w8, #0x0, 0x4f118
000000000004f110	mov	x0, x19
000000000004f114	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f118	mov	x0, x21
000000000004f11c	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZL15KSet_getElementP9ObjHeaderP11objc_object:
000000000004f120	sub	sp, sp, #0xc0
000000000004f124	stp	x26, x25, [sp, #0x70]
000000000004f128	stp	x24, x23, [sp, #0x80]
000000000004f12c	stp	x22, x21, [sp, #0x90]
000000000004f130	stp	x20, x19, [sp, #0xa0]
000000000004f134	stp	x29, x30, [sp, #0xb0]
000000000004f138	add	x29, sp, #0xb0
000000000004f13c	mov	x20, x1
000000000004f140	mov	x21, x0
000000000004f144	nop
000000000004f148	ldr	x0, #0x27f30 ; Objc class ref: _OBJC_CLASS_$_NSNull
000000000004f14c	nop
000000000004f150	ldr	x1, #0x27c80 ; Objc selector ref: null
000000000004f154	bl	0x55ca8 ; Objc message: +[NSNull null]
000000000004f158	cmp	x0, x20
000000000004f15c	b.eq	0x4f1cc
000000000004f160	add	x9, sp, #0x20
000000000004f164	str	xzr, [sp, #0x38]
000000000004f168	adrp	x19, 43 ; 0x7a000
000000000004f16c	add	x19, x19, #0x4e0
000000000004f170	ldr	x24, [x19]
000000000004f174	mov	x0, x19
000000000004f178	blr	x24
000000000004f17c	ldr	x8, [x0]
000000000004f180	ldr	x10, [x8, #0x110]
000000000004f184	mov	x11, #0x400000000
000000000004f188	stp	x10, x11, [sp, #0x28]
000000000004f18c	mov	x23, sp
000000000004f190	stp	x11, xzr, [sp, #0x10]
000000000004f194	str	x23, [x8, #0x110]
000000000004f198	str	x9, [sp, #0x8]
000000000004f19c	cbz	x20, 0x4f1e4
000000000004f1a0	add	x2, x9, #0x18
000000000004f1a4	nop
000000000004f1a8	ldr	x1, #0x455b0
000000000004f1ac	mov	x0, x20
000000000004f1b0	bl	0x55ca8 ; Objc message: -[x0 null]
000000000004f1b4	mov	x20, x0
000000000004f1b8	mov	x0, x19
000000000004f1bc	blr	x24
000000000004f1c0	ldr	x8, [x0]
000000000004f1c4	ldr	x9, [x8, #0x110]
000000000004f1c8	b	0x4f1ec
000000000004f1cc	mov	x0, x21
000000000004f1d0	mov	x1, #0x0
000000000004f1d4	bl	_Kotlin_Set_contains
000000000004f1d8	cmp	w0, #0x0
000000000004f1dc	csel	x8, x20, xzr, ne
000000000004f1e0	b	0x4f76c
000000000004f1e4	mov	x9, sp
000000000004f1e8	str	xzr, [sp, #0x38]
000000000004f1ec	movi.16b	v0, #0x0
000000000004f1f0	stp	q0, q0, [sp, #0x40]
000000000004f1f4	str	q0, [sp, #0x60]
000000000004f1f8	add	x22, sp, #0x40
000000000004f1fc	str	x22, [x8, #0x110]
000000000004f200	mov	x8, #0x600000000
000000000004f204	stp	x9, x8, [sp, #0x48]
000000000004f208	adr	x25, #0x45301
000000000004f20c	nop
000000000004f210	ldarb	w8, [x25]
000000000004f214	tbz	w8, #0x0, 0x4f21c
000000000004f218	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004f21c	cbz	x21, 0x4f358
000000000004f220	ldr	x8, [x21]
000000000004f224	and	x8, x8, #0xfffffffffffffffc
000000000004f228	ldr	x8, [x8]
000000000004f22c	ldr	w9, [x8, #0x3c]
000000000004f230	ldr	x8, [x8, #0x40]
000000000004f234	tbnz	w9, #0x1f, 0x4f278
000000000004f238	mov	w10, #0xb
000000000004f23c	and	x9, x9, x10
000000000004f240	lsl	x9, x9, #4
000000000004f244	ldr	w8, [x8, x9]
000000000004f248	cmp	w8, #0xb
000000000004f24c	b.ne	0x4f358
000000000004f250	add	x2, x23, #0x18
000000000004f254	ldr	x8, [x21]
000000000004f258	and	x8, x8, #0xfffffffffffffffc
000000000004f25c	ldr	x8, [x8]
000000000004f260	ldr	w9, [x8, #0x3c]
000000000004f264	ldr	x8, [x8, #0x40]
000000000004f268	tbnz	w9, #0x1f, 0x4f2d0
000000000004f26c	mov	w10, #0xb
000000000004f270	and	x9, x9, x10
000000000004f274	b	0x4f718
000000000004f278	neg	w10, w9
000000000004f27c	mvn	w9, w9
000000000004f280	cmp	w10, #0x9
000000000004f284	b.ge	0x4f314
000000000004f288	cmp	w10, #0x2
000000000004f28c	b.lt	0x4f3f8
000000000004f290	mov	x10, #0x0
000000000004f294	mov	x11, x8
000000000004f298	ldr	w12, [x11]
000000000004f29c	cmp	w12, #0xa
000000000004f2a0	b.gt	0x4f510
000000000004f2a4	add	x10, x10, #0x1
000000000004f2a8	add	x11, x11, #0x10
000000000004f2ac	cmp	x9, x10
000000000004f2b0	b.ne	0x4f298
000000000004f2b4	mov	x10, x9
000000000004f2b8	sxtw	x9, w10
000000000004f2bc	lsl	x9, x9, #4
000000000004f2c0	ldr	w8, [x8, x9]
000000000004f2c4	cmp	w8, #0xb
000000000004f2c8	b.ne	0x4f358
000000000004f2cc	b	0x4f250
000000000004f2d0	neg	w10, w9
000000000004f2d4	mvn	w9, w9
000000000004f2d8	cmp	w10, #0x9
000000000004f2dc	b.ge	0x4f414
000000000004f2e0	cmp	w10, #0x2
000000000004f2e4	b.lt	0x4f528
000000000004f2e8	mov	x10, #0x0
000000000004f2ec	mov	x11, x8
000000000004f2f0	ldr	w12, [x11]
000000000004f2f4	cmp	w12, #0xa
000000000004f2f8	b.gt	0x4f714
000000000004f2fc	add	x10, x10, #0x1
000000000004f300	add	x11, x11, #0x10
000000000004f304	cmp	x9, x10
000000000004f308	b.ne	0x4f2f0
000000000004f30c	mov	x10, x9
000000000004f310	b	0x4f714
000000000004f314	mov	w10, #0x0
000000000004f318	add	w11, w9, w10
000000000004f31c	cmp	w11, #0x0
000000000004f320	cinc	w11, w11, lt
000000000004f324	asr	w11, w11, #1
000000000004f328	sbfiz	x12, x11, #4, #32
000000000004f32c	ldr	w12, [x8, x12]
000000000004f330	cmp	w12, #0xb
000000000004f334	csinc	w10, w10, w11, ge
000000000004f338	csel	w9, w9, w11, lt
000000000004f33c	cmp	w10, w9
000000000004f340	b.lt	0x4f318
000000000004f344	sxtw	x9, w10
000000000004f348	lsl	x9, x9, #4
000000000004f34c	ldr	w8, [x8, x9]
000000000004f350	cmp	w8, #0xb
000000000004f354	b.eq	0x4f250
000000000004f358	ldr	x8, [x21]
000000000004f35c	and	x8, x8, #0xfffffffffffffffc
000000000004f360	ldr	x8, [x8]
000000000004f364	ldr	w9, [x8, #0x3c]
000000000004f368	ldr	x8, [x8, #0x40]
000000000004f36c	tbnz	w9, #0x1f, 0x4f378
000000000004f370	and	x9, x9, #0x1e
000000000004f374	b	0x4f44c
000000000004f378	neg	w10, w9
000000000004f37c	mvn	w9, w9
000000000004f380	cmp	w10, #0x9
000000000004f384	b.ge	0x4f3bc
000000000004f388	cmp	w10, #0x2
000000000004f38c	b.lt	0x4f3f0
000000000004f390	mov	x10, #0x0
000000000004f394	mov	x11, x8
000000000004f398	ldr	w12, [x11]
000000000004f39c	cmp	w12, #0x1d
000000000004f3a0	b.gt	0x4f448
000000000004f3a4	add	x10, x10, #0x1
000000000004f3a8	add	x11, x11, #0x10
000000000004f3ac	cmp	x9, x10
000000000004f3b0	b.ne	0x4f398
000000000004f3b4	mov	x10, x9
000000000004f3b8	b	0x4f448
000000000004f3bc	mov	w10, #0x0
000000000004f3c0	add	w11, w9, w10
000000000004f3c4	cmp	w11, #0x0
000000000004f3c8	cinc	w11, w11, lt
000000000004f3cc	asr	w11, w11, #1
000000000004f3d0	sbfiz	x12, x11, #4, #32
000000000004f3d4	ldr	w12, [x8, x12]
000000000004f3d8	cmp	w12, #0x1e
000000000004f3dc	csinc	w10, w10, w11, ge
000000000004f3e0	csel	w9, w9, w11, lt
000000000004f3e4	cmp	w10, w9
000000000004f3e8	b.lt	0x4f3c0
000000000004f3ec	b	0x4f448
000000000004f3f0	mov	w10, #0x0
000000000004f3f4	b	0x4f448
000000000004f3f8	mov	w10, #0x0
000000000004f3fc	sxtw	x9, w10
000000000004f400	lsl	x9, x9, #4
000000000004f404	ldr	w8, [x8, x9]
000000000004f408	cmp	w8, #0xb
000000000004f40c	b.eq	0x4f250
000000000004f410	b	0x4f358
000000000004f414	mov	w10, #0x0
000000000004f418	add	w11, w9, w10
000000000004f41c	cmp	w11, #0x0
000000000004f420	cinc	w11, w11, lt
000000000004f424	asr	w11, w11, #1
000000000004f428	sbfiz	x12, x11, #4, #32
000000000004f42c	ldr	w12, [x8, x12]
000000000004f430	cmp	w12, #0xb
000000000004f434	csinc	w10, w10, w11, ge
000000000004f438	csel	w9, w9, w11, lt
000000000004f43c	cmp	w10, w9
000000000004f440	b.lt	0x4f418
000000000004f444	b	0x4f714
000000000004f448	sxtw	x9, w10
000000000004f44c	add	x8, x8, x9, lsl #4
000000000004f450	ldr	x8, [x8, #0x8]
000000000004f454	ldr	x8, [x8, #0x8]
000000000004f458	mov	x0, x21
000000000004f45c	mov	x1, x20
000000000004f460	blr	x8
000000000004f464	tbz	w0, #0x0, 0x4f70c
000000000004f468	add	x1, x22, #0x18
000000000004f46c	ldr	x8, [x21]
000000000004f470	and	x8, x8, #0xfffffffffffffffc
000000000004f474	ldr	x8, [x8]
000000000004f478	ldr	w9, [x8, #0x3c]
000000000004f47c	ldr	x8, [x8, #0x40]
000000000004f480	tbnz	w9, #0x1f, 0x4f490
000000000004f484	mov	w10, #0x31
000000000004f488	and	x9, x9, x10
000000000004f48c	b	0x4f534
000000000004f490	neg	w10, w9
000000000004f494	mvn	w9, w9
000000000004f498	cmp	w10, #0x9
000000000004f49c	b.ge	0x4f4d4
000000000004f4a0	cmp	w10, #0x2
000000000004f4a4	b.lt	0x4f508
000000000004f4a8	mov	x10, #0x0
000000000004f4ac	mov	x11, x8
000000000004f4b0	ldr	w12, [x11]
000000000004f4b4	cmp	w12, #0x30
000000000004f4b8	b.gt	0x4f530
000000000004f4bc	add	x10, x10, #0x1
000000000004f4c0	add	x11, x11, #0x10
000000000004f4c4	cmp	x9, x10
000000000004f4c8	b.ne	0x4f4b0
000000000004f4cc	mov	x10, x9
000000000004f4d0	b	0x4f530
000000000004f4d4	mov	w10, #0x0
000000000004f4d8	add	w11, w9, w10
000000000004f4dc	cmp	w11, #0x0
000000000004f4e0	cinc	w11, w11, lt
000000000004f4e4	asr	w11, w11, #1
000000000004f4e8	sbfiz	x12, x11, #4, #32
000000000004f4ec	ldr	w12, [x8, x12]
000000000004f4f0	cmp	w12, #0x31
000000000004f4f4	csinc	w10, w10, w11, ge
000000000004f4f8	csel	w9, w9, w11, lt
000000000004f4fc	cmp	w10, w9
000000000004f500	b.lt	0x4f4d8
000000000004f504	b	0x4f530
000000000004f508	mov	w10, #0x0
000000000004f50c	b	0x4f530
000000000004f510	sxtw	x9, w10
000000000004f514	lsl	x9, x9, #4
000000000004f518	ldr	w8, [x8, x9]
000000000004f51c	cmp	w8, #0xb
000000000004f520	b.ne	0x4f358
000000000004f524	b	0x4f250
000000000004f528	mov	w10, #0x0
000000000004f52c	b	0x4f714
000000000004f530	sxtw	x9, w10
000000000004f534	add	x8, x8, x9, lsl #4
000000000004f538	ldr	x8, [x8, #0x8]
000000000004f53c	ldr	x8, [x8]
000000000004f540	mov	x0, x21
000000000004f544	blr	x8
000000000004f548	mov	x21, x0
000000000004f54c	add	x22, x22, #0x20
000000000004f550	mov	w26, #0xa0
000000000004f554	b	0x4f55c
000000000004f558	cbz	x20, 0x4f70c
000000000004f55c	ldr	x8, [x21]
000000000004f560	and	x8, x8, #0xfffffffffffffffc
000000000004f564	ldr	x8, [x8]
000000000004f568	ldr	w9, [x8, #0x3c]
000000000004f56c	ldr	x8, [x8, #0x40]
000000000004f570	tbnz	w9, #0x1f, 0x4f57c
000000000004f574	and	x9, x9, x26
000000000004f578	b	0x4f600
000000000004f57c	neg	w10, w9
000000000004f580	mvn	w9, w9
000000000004f584	cmp	w10, #0x9
000000000004f588	b.ge	0x4f5c0
000000000004f58c	cmp	w10, #0x2
000000000004f590	b.lt	0x4f5f4
000000000004f594	mov	x10, #0x0
000000000004f598	mov	x11, x8
000000000004f59c	ldr	w12, [x11]
000000000004f5a0	cmp	w12, #0x9f
000000000004f5a4	b.gt	0x4f5fc
000000000004f5a8	add	x10, x10, #0x1
000000000004f5ac	add	x11, x11, #0x10
000000000004f5b0	cmp	x9, x10
000000000004f5b4	b.ne	0x4f59c
000000000004f5b8	mov	x10, x9
000000000004f5bc	b	0x4f5fc
000000000004f5c0	mov	w10, #0x0
000000000004f5c4	add	w11, w9, w10
000000000004f5c8	cmp	w11, #0x0
000000000004f5cc	cinc	w11, w11, lt
000000000004f5d0	asr	w11, w11, #1
000000000004f5d4	sbfiz	x12, x11, #4, #32
000000000004f5d8	ldr	w12, [x8, x12]
000000000004f5dc	cmp	w12, #0xa0
000000000004f5e0	csinc	w10, w10, w11, ge
000000000004f5e4	csel	w9, w9, w11, lt
000000000004f5e8	cmp	w10, w9
000000000004f5ec	b.lt	0x4f5c4
000000000004f5f0	b	0x4f5fc
000000000004f5f4	mov	w10, #0x0
000000000004f5f8	b	0x4f5fc
000000000004f5fc	sxtw	x9, w10
000000000004f600	add	x8, x8, x9, lsl #4
000000000004f604	ldr	x8, [x8, #0x8]
000000000004f608	ldr	x8, [x8]
000000000004f60c	mov	x0, x21
000000000004f610	blr	x8
000000000004f614	tbz	w0, #0x0, 0x4f78c
000000000004f618	ldarb	w8, [x25]
000000000004f61c	tbz	w8, #0x0, 0x4f624
000000000004f620	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004f624	ldr	x8, [x21]
000000000004f628	and	x8, x8, #0xfffffffffffffffc
000000000004f62c	ldr	x8, [x8]
000000000004f630	ldr	w9, [x8, #0x3c]
000000000004f634	ldr	x8, [x8, #0x40]
000000000004f638	tbnz	w9, #0x1f, 0x4f644
000000000004f63c	and	x9, x9, x26
000000000004f640	b	0x4f6c8
000000000004f644	neg	w10, w9
000000000004f648	mvn	w9, w9
000000000004f64c	cmp	w10, #0x9
000000000004f650	b.ge	0x4f688
000000000004f654	cmp	w10, #0x2
000000000004f658	b.lt	0x4f6bc
000000000004f65c	mov	x10, #0x0
000000000004f660	mov	x11, x8
000000000004f664	ldr	w12, [x11]
000000000004f668	cmp	w12, #0x9f
000000000004f66c	b.gt	0x4f6c4
000000000004f670	add	x10, x10, #0x1
000000000004f674	add	x11, x11, #0x10
000000000004f678	cmp	x9, x10
000000000004f67c	b.ne	0x4f664
000000000004f680	mov	x10, x9
000000000004f684	b	0x4f6c4
000000000004f688	mov	w10, #0x0
000000000004f68c	add	w11, w9, w10
000000000004f690	cmp	w11, #0x0
000000000004f694	cinc	w11, w11, lt
000000000004f698	asr	w11, w11, #1
000000000004f69c	sbfiz	x12, x11, #4, #32
000000000004f6a0	ldr	w12, [x8, x12]
000000000004f6a4	cmp	w12, #0xa0
000000000004f6a8	csinc	w10, w10, w11, ge
000000000004f6ac	csel	w9, w9, w11, lt
000000000004f6b0	cmp	w10, w9
000000000004f6b4	b.lt	0x4f68c
000000000004f6b8	b	0x4f6c4
000000000004f6bc	mov	w10, #0x0
000000000004f6c0	b	0x4f6c4
000000000004f6c4	sxtw	x9, w10
000000000004f6c8	add	x8, x8, x9, lsl #4
000000000004f6cc	ldr	x8, [x8, #0x8]
000000000004f6d0	ldr	x8, [x8, #0x8]
000000000004f6d4	mov	x0, x21
000000000004f6d8	mov	x1, x22
000000000004f6dc	blr	x8
000000000004f6e0	mov	x23, x0
000000000004f6e4	cbz	x0, 0x4f558
000000000004f6e8	ldr	x8, [x23]
000000000004f6ec	and	x8, x8, #0xfffffffffffffffc
000000000004f6f0	ldr	x8, [x8]
000000000004f6f4	ldr	x8, [x8, #0x70]
000000000004f6f8	mov	x0, x23
000000000004f6fc	mov	x1, x20
000000000004f700	blr	x8
000000000004f704	tbz	w0, #0x0, 0x4f55c
000000000004f708	b	0x4f734
000000000004f70c	mov	x23, #0x0
000000000004f710	b	0x4f734
000000000004f714	sxtw	x9, w10
000000000004f718	add	x8, x8, x9, lsl #4
000000000004f71c	ldr	x8, [x8, #0x8]
000000000004f720	ldr	x8, [x8]
000000000004f724	mov	x0, x21
000000000004f728	mov	x1, x20
000000000004f72c	blr	x8
000000000004f730	mov	x23, x0
000000000004f734	str	x23, [sp, #0x18]
000000000004f738	mov	x0, x19
000000000004f73c	blr	x24
000000000004f740	ldr	x8, [x0]
000000000004f744	ldr	x9, [sp, #0x48]
000000000004f748	str	x9, [x8, #0x110]
000000000004f74c	mov	x0, x23
000000000004f750	bl	_Kotlin_ObjCExport_refToObjC
000000000004f754	mov	x8, x0
000000000004f758	mov	x0, x19
000000000004f75c	blr	x24
000000000004f760	ldr	x9, [x0]
000000000004f764	ldr	x10, [sp, #0x28]
000000000004f768	str	x10, [x9, #0x110]
000000000004f76c	mov	x0, x8
000000000004f770	ldp	x29, x30, [sp, #0xb0]
000000000004f774	ldp	x20, x19, [sp, #0xa0]
000000000004f778	ldp	x22, x21, [sp, #0x90]
000000000004f77c	ldp	x24, x23, [sp, #0x80]
000000000004f780	ldp	x26, x25, [sp, #0x70]
000000000004f784	add	sp, sp, #0xc0
000000000004f788	ret
000000000004f78c	mov	x0, x19
000000000004f790	blr	x24
000000000004f794	ldr	x8, [x0]
000000000004f798	ldr	x8, [x8, #0x118]
000000000004f79c	add	x0, x8, #0x70
000000000004f7a0	mov	w1, #0x38
000000000004f7a4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
000000000004f7a8	adr	x8, #0x11be8
000000000004f7ac	nop
000000000004f7b0	mov	x20, x0
000000000004f7b4	str	x8, [x20, #0x10]!
000000000004f7b8	stur	xzr, [x20, #-0x8]
000000000004f7bc	str	x20, [sp, #0x68]
000000000004f7c0	ldarb	w8, [x25]
000000000004f7c4	tbz	w8, #0x0, 0x4f7cc
000000000004f7c8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004f7cc	adr	x1, #0x1fd14
000000000004f7d0	nop
000000000004f7d4	mov	x0, x20
000000000004f7d8	bl	"_kfun:kotlin.RuntimeException#<init>(kotlin.String?){}"
000000000004f7dc	ldarb	w8, [x25]
000000000004f7e0	tbz	w8, #0x0, 0x4f7e8
000000000004f7e4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000004f7e8	mov	x0, x20
000000000004f7ec	bl	_ThrowException
000000000004f7f0	brk	#0x1
000000000004f7f4	b	0x4f7f8
000000000004f7f8	mov	x1, x0
000000000004f7fc	b	0x4f81c
000000000004f800	b	0x4f804
000000000004f804	mov	x1, x0
000000000004f808	mov	x0, x19
000000000004f80c	blr	x24
000000000004f810	ldr	x8, [x0]
000000000004f814	ldr	x9, [sp, #0x48]
000000000004f818	str	x9, [x8, #0x110]
000000000004f81c	mov	x0, x19
000000000004f820	blr	x24
000000000004f824	ldr	x8, [x0]
000000000004f828	ldr	x9, [sp, #0x28]
000000000004f82c	str	x9, [x8, #0x110]
000000000004f830	mov	x0, x1
000000000004f834	bl	0x558ac ; symbol stub for: __Unwind_Resume
+[KSetAsNSSet createRetainedWithKSet:]:
000000000004f838	stp	x22, x21, [sp, #-0x30]!
000000000004f83c	stp	x20, x19, [sp, #0x10]
000000000004f840	stp	x29, x30, [sp, #0x20]
000000000004f844	add	x29, sp, #0x20
000000000004f848	mov	x19, x2
000000000004f84c	nop
000000000004f850	ldr	x0, #0x27860 ; Objc class ref: RCKKSetAsNSSet
000000000004f854	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000004f858	nop
000000000004f85c	ldr	x1, #0x27464 ; Objc selector ref: init
000000000004f860	bl	0x55ca8 ; Objc message: +[RCKKSetAsNSSet init]
000000000004f864	mov	x20, x0
000000000004f868	nop
000000000004f86c	ldrsw	x8, _OBJC_IVAR_$_RCKKSetAsNSSet.setHolder
000000000004f870	add	x21, x0, x8
000000000004f874	adrp	x0, 43 ; 0x7a000
000000000004f878	add	x0, x0, #0x4e0
000000000004f87c	ldr	x8, [x0]
000000000004f880	blr	x8
000000000004f884	ldr	x22, [x0]
000000000004f888	mov	w0, #0x1
000000000004f88c	mov	w1, #0x28
000000000004f890	bl	0x55aec ; symbol stub for: _calloc
000000000004f894	ldr	x8, [x22, #0xa8]!
000000000004f898	sub	x9, x22, #0x8
000000000004f89c	stp	x8, x22, [x0]
000000000004f8a0	str	x0, [x8, #0x8]
000000000004f8a4	str	x0, [x22]
000000000004f8a8	ldr	x8, [x22, #0x10]
000000000004f8ac	add	x8, x8, #0x1
000000000004f8b0	str	x8, [x22, #0x10]
000000000004f8b4	stp	x9, x0, [x0, #0x18]
000000000004f8b8	str	x19, [x0, #0x10]!
000000000004f8bc	stp	x19, x0, [x21]
000000000004f8c0	mov	x0, x20
000000000004f8c4	ldp	x29, x30, [sp, #0x20]
000000000004f8c8	ldp	x20, x19, [sp, #0x10]
000000000004f8cc	ldp	x22, x21, [sp], #0x30
000000000004f8d0	ret
-[KotlinMutableSet init]:
000000000004f8d4	sub	sp, sp, #0x80
000000000004f8d8	stp	x26, x25, [sp, #0x30]
000000000004f8dc	stp	x24, x23, [sp, #0x40]
000000000004f8e0	stp	x22, x21, [sp, #0x50]
000000000004f8e4	stp	x20, x19, [sp, #0x60]
000000000004f8e8	stp	x29, x30, [sp, #0x70]
000000000004f8ec	add	x29, sp, #0x70
000000000004f8f0	nop
000000000004f8f4	ldr	x8, #0x27814 ; Objc class ref: RCKMutableSet
000000000004f8f8	stp	x0, x8, [sp, #0x20]
000000000004f8fc	nop
000000000004f900	ldr	x1, #0x273c0 ; Objc selector ref: init
000000000004f904	add	x0, sp, #0x20
000000000004f908	bl	0x55cb4 ; Objc message: -[[x0 super] init]
000000000004f90c	mov	x20, x0
000000000004f910	cbz	x0, 0x4fa30
000000000004f914	bl	_Kotlin_initRuntimeIfNeeded
000000000004f918	adrp	x21, 43 ; 0x7a000
000000000004f91c	add	x21, x21, #0x4e0
000000000004f920	ldr	x25, [x21]
000000000004f924	mov	x0, x21
000000000004f928	blr	x25
000000000004f92c	ldr	x24, [x0]
000000000004f930	add	x19, x24, #0x138
000000000004f934	ldaxr	w23, [x19]
000000000004f938	stlxr	w8, wzr, [x19]
000000000004f93c	cbnz	w8, 0x4f934
000000000004f940	cmp	w23, #0x1
000000000004f944	b.ne	0x4f960
000000000004f948	adr	x8, #0x44bc1
000000000004f94c	nop
000000000004f950	ldarb	w8, [x8]
000000000004f954	tbz	w8, #0x0, 0x4f960
000000000004f958	mov	x0, x19
000000000004f95c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004f960	mov	x8, sp
000000000004f964	add	x1, x8, #0x18
000000000004f968	str	xzr, [sp, #0x18]
000000000004f96c	mov	x0, x21
000000000004f970	blr	x25
000000000004f974	ldr	x9, [x0]
000000000004f978	ldr	x10, [x9, #0x110]
000000000004f97c	str	x8, [x9, #0x110]
000000000004f980	mov	x8, #0x400000000
000000000004f984	stp	x10, x8, [sp, #0x8]
000000000004f988	mov	w0, #0x8
000000000004f98c	bl	_Kotlin_MutableSet_createWithCapacity
000000000004f990	mov	x22, x0
000000000004f994	nop
000000000004f998	ldrsw	x8, _OBJC_IVAR_$_RCKMutableSet.setHolder
000000000004f99c	add	x26, x20, x8
000000000004f9a0	mov	x0, x21
000000000004f9a4	blr	x25
000000000004f9a8	mov	x21, x0
000000000004f9ac	ldr	x25, [x0]
000000000004f9b0	mov	w0, #0x1
000000000004f9b4	mov	w1, #0x28
000000000004f9b8	bl	0x55aec ; symbol stub for: _calloc
000000000004f9bc	ldr	x8, [x25, #0xa8]!
000000000004f9c0	sub	x9, x25, #0x8
000000000004f9c4	mov	x10, x0
000000000004f9c8	str	x22, [x10, #0x10]!
000000000004f9cc	str	x9, [x0, #0x18]
000000000004f9d0	stp	x8, x25, [x0]
000000000004f9d4	str	x0, [x8, #0x8]
000000000004f9d8	str	x0, [x25]
000000000004f9dc	ldr	x8, [x25, #0x10]
000000000004f9e0	add	x8, x8, #0x1
000000000004f9e4	str	x8, [x25, #0x10]
000000000004f9e8	str	x0, [x0, #0x20]
000000000004f9ec	stp	x22, x10, [x26]
000000000004f9f0	ldr	x8, [x21]
000000000004f9f4	ldr	x9, [sp, #0x8]
000000000004f9f8	str	x9, [x8, #0x110]
000000000004f9fc	cbz	x24, 0x4fa30
000000000004fa00	ldaxr	w8, [x19]
000000000004fa04	stlxr	w9, w23, [x19]
000000000004fa08	cbnz	w9, 0x4fa00
000000000004fa0c	cbnz	w23, 0x4fa30
000000000004fa10	cmp	w8, #0x1
000000000004fa14	b.ne	0x4fa30
000000000004fa18	adr	x8, #0x44af1
000000000004fa1c	nop
000000000004fa20	ldarb	w8, [x8]
000000000004fa24	tbz	w8, #0x0, 0x4fa30
000000000004fa28	mov	x0, x19
000000000004fa2c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fa30	mov	x0, x20
000000000004fa34	ldp	x29, x30, [sp, #0x70]
000000000004fa38	ldp	x20, x19, [sp, #0x60]
000000000004fa3c	ldp	x22, x21, [sp, #0x50]
000000000004fa40	ldp	x24, x23, [sp, #0x40]
000000000004fa44	ldp	x26, x25, [sp, #0x30]
000000000004fa48	add	sp, sp, #0x80
000000000004fa4c	ret
000000000004fa50	mov	x20, x0
000000000004fa54	mov	x0, x21
000000000004fa58	blr	x25
000000000004fa5c	ldr	x8, [x0]
000000000004fa60	ldr	x9, [sp, #0x8]
000000000004fa64	str	x9, [x8, #0x110]
000000000004fa68	cbz	x24, 0x4fa9c
000000000004fa6c	ldaxr	w8, [x19]
000000000004fa70	stlxr	w9, w23, [x19]
000000000004fa74	cbnz	w9, 0x4fa6c
000000000004fa78	cbnz	w23, 0x4fa9c
000000000004fa7c	cmp	w8, #0x1
000000000004fa80	b.ne	0x4fa9c
000000000004fa84	adr	x8, #0x44a85
000000000004fa88	nop
000000000004fa8c	ldarb	w8, [x8]
000000000004fa90	tbz	w8, #0x0, 0x4fa9c
000000000004fa94	mov	x0, x19
000000000004fa98	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fa9c	mov	x0, x20
000000000004faa0	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet initWithCapacity:]:
000000000004faa4	sub	sp, sp, #0x80
000000000004faa8	stp	x26, x25, [sp, #0x30]
000000000004faac	stp	x24, x23, [sp, #0x40]
000000000004fab0	stp	x22, x21, [sp, #0x50]
000000000004fab4	stp	x20, x19, [sp, #0x60]
000000000004fab8	stp	x29, x30, [sp, #0x70]
000000000004fabc	add	x29, sp, #0x70
000000000004fac0	mov	x21, x2
000000000004fac4	nop
000000000004fac8	ldr	x8, #0x27640 ; Objc class ref: RCKMutableSet
000000000004facc	stp	x0, x8, [sp, #0x20]
000000000004fad0	nop
000000000004fad4	ldr	x1, #0x271ec ; Objc selector ref: init
000000000004fad8	add	x0, sp, #0x20
000000000004fadc	bl	0x55cb4 ; Objc message: -[[x0 super] init]
000000000004fae0	mov	x20, x0
000000000004fae4	cbz	x0, 0x4fc0c
000000000004fae8	bl	_Kotlin_initRuntimeIfNeeded
000000000004faec	adrp	x22, 43 ; 0x7a000
000000000004faf0	add	x22, x22, #0x4e0
000000000004faf4	ldr	x25, [x22]
000000000004faf8	mov	x0, x22
000000000004fafc	blr	x25
000000000004fb00	ldr	x24, [x0]
000000000004fb04	add	x19, x24, #0x138
000000000004fb08	ldaxr	w23, [x19]
000000000004fb0c	stlxr	w8, wzr, [x19]
000000000004fb10	cbnz	w8, 0x4fb08
000000000004fb14	cmp	w23, #0x1
000000000004fb18	b.ne	0x4fb34
000000000004fb1c	adr	x8, #0x449ed
000000000004fb20	nop
000000000004fb24	ldarb	w8, [x8]
000000000004fb28	tbz	w8, #0x0, 0x4fb34
000000000004fb2c	mov	x0, x19
000000000004fb30	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fb34	mov	x8, sp
000000000004fb38	add	x1, x8, #0x18
000000000004fb3c	str	xzr, [sp, #0x18]
000000000004fb40	mov	x0, x22
000000000004fb44	blr	x25
000000000004fb48	ldr	x9, [x0]
000000000004fb4c	ldr	x10, [x9, #0x110]
000000000004fb50	str	x8, [x9, #0x110]
000000000004fb54	mov	x8, #0x400000000
000000000004fb58	stp	x10, x8, [sp, #0x8]
000000000004fb5c	mov	w8, #0x7fffffff
000000000004fb60	cmp	x21, x8
000000000004fb64	csel	w0, w21, w8, lo
000000000004fb68	bl	_Kotlin_MutableSet_createWithCapacity
000000000004fb6c	mov	x21, x0
000000000004fb70	nop
000000000004fb74	ldrsw	x8, _OBJC_IVAR_$_RCKMutableSet.setHolder
000000000004fb78	add	x26, x20, x8
000000000004fb7c	mov	x0, x22
000000000004fb80	blr	x25
000000000004fb84	mov	x22, x0
000000000004fb88	ldr	x25, [x0]
000000000004fb8c	mov	w0, #0x1
000000000004fb90	mov	w1, #0x28
000000000004fb94	bl	0x55aec ; symbol stub for: _calloc
000000000004fb98	ldr	x8, [x25, #0xa8]!
000000000004fb9c	sub	x9, x25, #0x8
000000000004fba0	mov	x10, x0
000000000004fba4	str	x21, [x10, #0x10]!
000000000004fba8	str	x9, [x0, #0x18]
000000000004fbac	stp	x8, x25, [x0]
000000000004fbb0	str	x0, [x8, #0x8]
000000000004fbb4	str	x0, [x25]
000000000004fbb8	ldr	x8, [x25, #0x10]
000000000004fbbc	add	x8, x8, #0x1
000000000004fbc0	str	x8, [x25, #0x10]
000000000004fbc4	str	x0, [x0, #0x20]
000000000004fbc8	stp	x21, x10, [x26]
000000000004fbcc	ldr	x8, [x22]
000000000004fbd0	ldr	x9, [sp, #0x8]
000000000004fbd4	str	x9, [x8, #0x110]
000000000004fbd8	cbz	x24, 0x4fc0c
000000000004fbdc	ldaxr	w8, [x19]
000000000004fbe0	stlxr	w9, w23, [x19]
000000000004fbe4	cbnz	w9, 0x4fbdc
000000000004fbe8	cbnz	w23, 0x4fc0c
000000000004fbec	cmp	w8, #0x1
000000000004fbf0	b.ne	0x4fc0c
000000000004fbf4	adr	x8, #0x44915
000000000004fbf8	nop
000000000004fbfc	ldarb	w8, [x8]
000000000004fc00	tbz	w8, #0x0, 0x4fc0c
000000000004fc04	mov	x0, x19
000000000004fc08	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fc0c	mov	x0, x20
000000000004fc10	ldp	x29, x30, [sp, #0x70]
000000000004fc14	ldp	x20, x19, [sp, #0x60]
000000000004fc18	ldp	x22, x21, [sp, #0x50]
000000000004fc1c	ldp	x24, x23, [sp, #0x40]
000000000004fc20	ldp	x26, x25, [sp, #0x30]
000000000004fc24	add	sp, sp, #0x80
000000000004fc28	ret
000000000004fc2c	mov	x20, x0
000000000004fc30	mov	x0, x22
000000000004fc34	blr	x25
000000000004fc38	ldr	x8, [x0]
000000000004fc3c	ldr	x9, [sp, #0x8]
000000000004fc40	str	x9, [x8, #0x110]
000000000004fc44	cbz	x24, 0x4fc78
000000000004fc48	ldaxr	w8, [x19]
000000000004fc4c	stlxr	w9, w23, [x19]
000000000004fc50	cbnz	w9, 0x4fc48
000000000004fc54	cbnz	w23, 0x4fc78
000000000004fc58	cmp	w8, #0x1
000000000004fc5c	b.ne	0x4fc78
000000000004fc60	adr	x8, #0x448a9
000000000004fc64	nop
000000000004fc68	ldarb	w8, [x8]
000000000004fc6c	tbz	w8, #0x0, 0x4fc78
000000000004fc70	mov	x0, x19
000000000004fc74	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fc78	mov	x0, x20
000000000004fc7c	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet initWithObjects:count:]:
000000000004fc80	stp	x22, x21, [sp, #-0x30]!
000000000004fc84	stp	x20, x19, [sp, #0x10]
000000000004fc88	stp	x29, x30, [sp, #0x20]
000000000004fc8c	add	x29, sp, #0x20
000000000004fc90	mov	x19, x3
000000000004fc94	mov	x20, x2
000000000004fc98	nop
000000000004fc9c	ldr	x1, #0x27054 ; Objc selector ref: initWithCapacity:
000000000004fca0	mov	x2, x3
000000000004fca4	bl	0x55ca8 ; Objc message: -[x0 initWithCapacity:]
000000000004fca8	mov	x21, x0
000000000004fcac	cmp	x0, #0x0
000000000004fcb0	ccmp	x19, #0x0, #0x4, ne
000000000004fcb4	b.eq	0x4fcd8
000000000004fcb8	nop
000000000004fcbc	ldr	x22, #0x26f34 ; Objc selector ref: addObject:
000000000004fcc0	ldr	x2, [x20], #0x8
000000000004fcc4	mov	x0, x21
000000000004fcc8	mov	x1, x22
000000000004fccc	bl	0x55ca8 ; Objc message: -[x0 addObject:]
000000000004fcd0	subs	x19, x19, #0x1
000000000004fcd4	b.ne	0x4fcc0
000000000004fcd8	mov	x0, x21
000000000004fcdc	ldp	x29, x30, [sp, #0x20]
000000000004fce0	ldp	x20, x19, [sp, #0x10]
000000000004fce4	ldp	x22, x21, [sp], #0x30
000000000004fce8	ret
-[KotlinMutableSet dealloc]:
000000000004fcec	sub	sp, sp, #0x60
000000000004fcf0	stp	x26, x25, [sp, #0x10]
000000000004fcf4	stp	x24, x23, [sp, #0x20]
000000000004fcf8	stp	x22, x21, [sp, #0x30]
000000000004fcfc	stp	x20, x19, [sp, #0x40]
000000000004fd00	stp	x29, x30, [sp, #0x50]
000000000004fd04	add	x29, sp, #0x50
000000000004fd08	mov	x19, x0
000000000004fd0c	nop
000000000004fd10	ldrsw	x8, _OBJC_IVAR_$_RCKMutableSet.setHolder
000000000004fd14	add	x24, x0, x8
000000000004fd18	bl	_Kotlin_initRuntimeIfNeeded
000000000004fd1c	adrp	x21, 43 ; 0x7a000
000000000004fd20	add	x21, x21, #0x4e0
000000000004fd24	ldr	x25, [x21]
000000000004fd28	mov	x0, x21
000000000004fd2c	blr	x25
000000000004fd30	ldr	x8, [x0]
000000000004fd34	add	x20, x8, #0x138
000000000004fd38	ldaxr	w22, [x20]
000000000004fd3c	stlxr	w8, wzr, [x20]
000000000004fd40	cbnz	w8, 0x4fd38
000000000004fd44	adr	x23, #0x447c5
000000000004fd48	nop
000000000004fd4c	cmp	w22, #0x1
000000000004fd50	b.ne	0x4fd64
000000000004fd54	ldarb	w8, [x23]
000000000004fd58	tbz	w8, #0x0, 0x4fd64
000000000004fd5c	mov	x0, x20
000000000004fd60	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fd64	ldr	x8, [x24]
000000000004fd68	cbz	x8, 0x4fd84
000000000004fd6c	ldr	x1, [x24, #0x8]
000000000004fd70	mov	x0, x21
000000000004fd74	blr	x25
000000000004fd78	ldr	x8, [x0]
000000000004fd7c	add	x0, x8, #0x8
000000000004fd80	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
000000000004fd84	ldaxr	w8, [x20]
000000000004fd88	stlxr	w9, w22, [x20]
000000000004fd8c	cbnz	w9, 0x4fd84
000000000004fd90	cbnz	w22, 0x4fdac
000000000004fd94	cmp	w8, #0x1
000000000004fd98	b.ne	0x4fdac
000000000004fd9c	ldarb	w8, [x23]
000000000004fda0	tbz	w8, #0x0, 0x4fdac
000000000004fda4	mov	x0, x20
000000000004fda8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004fdac	nop
000000000004fdb0	ldr	x8, #0x27358 ; Objc class ref: RCKMutableSet
000000000004fdb4	stp	x19, x8, [sp]
000000000004fdb8	nop
000000000004fdbc	ldr	x1, #0x26eb4 ; Objc selector ref: dealloc
000000000004fdc0	mov	x0, sp
000000000004fdc4	bl	0x55cb4 ; Objc message: -[[x0 super] dealloc]
000000000004fdc8	ldp	x29, x30, [sp, #0x50]
000000000004fdcc	ldp	x20, x19, [sp, #0x40]
000000000004fdd0	ldp	x22, x21, [sp, #0x30]
000000000004fdd4	ldp	x24, x23, [sp, #0x20]
000000000004fdd8	ldp	x26, x25, [sp, #0x10]
000000000004fddc	add	sp, sp, #0x60
000000000004fde0	ret
-[KotlinMutableSet initWithKSet:]:
000000000004fde4	sub	sp, sp, #0x40
000000000004fde8	stp	x22, x21, [sp, #0x10]
000000000004fdec	stp	x20, x19, [sp, #0x20]
000000000004fdf0	stp	x29, x30, [sp, #0x30]
000000000004fdf4	add	x29, sp, #0x30
000000000004fdf8	mov	x19, x2
000000000004fdfc	nop
000000000004fe00	ldr	x8, #0x27308 ; Objc class ref: RCKMutableSet
000000000004fe04	stp	x0, x8, [sp]
000000000004fe08	nop
000000000004fe0c	ldr	x1, #0x26eb4 ; Objc selector ref: init
000000000004fe10	mov	x0, sp
000000000004fe14	bl	0x55cb4 ; Objc message: -[[x0 super] init]
000000000004fe18	mov	x20, x0
000000000004fe1c	cbz	x0, 0x4fe78
000000000004fe20	nop
000000000004fe24	ldrsw	x8, _OBJC_IVAR_$_RCKMutableSet.setHolder
000000000004fe28	add	x21, x20, x8
000000000004fe2c	adrp	x0, 43 ; 0x7a000
000000000004fe30	add	x0, x0, #0x4e0
000000000004fe34	ldr	x8, [x0]
000000000004fe38	blr	x8
000000000004fe3c	ldr	x22, [x0]
000000000004fe40	mov	w0, #0x1
000000000004fe44	mov	w1, #0x28
000000000004fe48	bl	0x55aec ; symbol stub for: _calloc
000000000004fe4c	ldr	x8, [x22, #0xa8]!
000000000004fe50	sub	x9, x22, #0x8
000000000004fe54	stp	x8, x22, [x0]
000000000004fe58	str	x0, [x8, #0x8]
000000000004fe5c	str	x0, [x22]
000000000004fe60	ldr	x8, [x22, #0x10]
000000000004fe64	add	x8, x8, #0x1
000000000004fe68	str	x8, [x22, #0x10]
000000000004fe6c	stp	x9, x0, [x0, #0x18]
000000000004fe70	str	x19, [x0, #0x10]!
000000000004fe74	stp	x19, x0, [x21]
000000000004fe78	mov	x0, x20
000000000004fe7c	ldp	x29, x30, [sp, #0x30]
000000000004fe80	ldp	x20, x19, [sp, #0x20]
000000000004fe84	ldp	x22, x21, [sp, #0x10]
000000000004fe88	add	sp, sp, #0x40
000000000004fe8c	ret
-[KotlinMutableSet toKotlin:]:
000000000004fe90	stp	x22, x21, [sp, #-0x30]!
000000000004fe94	stp	x20, x19, [sp, #0x10]
000000000004fe98	stp	x29, x30, [sp, #0x20]
000000000004fe9c	add	x29, sp, #0x20
000000000004fea0	mov	x19, x2
000000000004fea4	mov	x20, x0
000000000004fea8	nop
000000000004feac	ldrsw	x21, _OBJC_IVAR_$_RCKMutableSet.setHolder
000000000004feb0	bl	_Kotlin_initRuntimeIfNeeded
000000000004feb4	ldr	x0, [x20, x21]
000000000004feb8	str	x0, [x19]
000000000004febc	ldp	x29, x30, [sp, #0x20]
000000000004fec0	ldp	x20, x19, [sp, #0x10]
000000000004fec4	ldp	x22, x21, [sp], #0x30
000000000004fec8	ret
-[KotlinMutableSet count]:
000000000004fecc	stp	x22, x21, [sp, #-0x30]!
000000000004fed0	stp	x20, x19, [sp, #0x10]
000000000004fed4	stp	x29, x30, [sp, #0x20]
000000000004fed8	add	x29, sp, #0x20
000000000004fedc	mov	x20, x0
000000000004fee0	bl	_Kotlin_initRuntimeIfNeeded
000000000004fee4	adrp	x0, 43 ; 0x7a000
000000000004fee8	add	x0, x0, #0x4e0
000000000004feec	ldr	x8, [x0]
000000000004fef0	blr	x8
000000000004fef4	ldr	x8, [x0]
000000000004fef8	add	x19, x8, #0x138
000000000004fefc	ldaxr	w21, [x19]
000000000004ff00	stlxr	w8, wzr, [x19]
000000000004ff04	cbnz	w8, 0x4fefc
000000000004ff08	cmp	w21, #0x1
000000000004ff0c	b.ne	0x4ff28
000000000004ff10	adr	x8, #0x445f9
000000000004ff14	nop
000000000004ff18	ldarb	w8, [x8]
000000000004ff1c	tbz	w8, #0x0, 0x4ff28
000000000004ff20	mov	x0, x19
000000000004ff24	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ff28	nop
000000000004ff2c	ldrsw	x22, _OBJC_IVAR_$_RCKMutableSet.setHolder
000000000004ff30	bl	_Kotlin_initRuntimeIfNeeded
000000000004ff34	ldr	x0, [x20, x22]
000000000004ff38	bl	_Kotlin_Collection_getSize
000000000004ff3c	mov	x20, x0
000000000004ff40	ldaxr	w8, [x19]
000000000004ff44	stlxr	w9, w21, [x19]
000000000004ff48	cbnz	w9, 0x4ff40
000000000004ff4c	cbnz	w21, 0x4ff70
000000000004ff50	cmp	w8, #0x1
000000000004ff54	b.ne	0x4ff70
000000000004ff58	adr	x8, #0x445b1
000000000004ff5c	nop
000000000004ff60	ldarb	w8, [x8]
000000000004ff64	tbz	w8, #0x0, 0x4ff70
000000000004ff68	mov	x0, x19
000000000004ff6c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ff70	sxtw	x0, w20
000000000004ff74	ldp	x29, x30, [sp, #0x20]
000000000004ff78	ldp	x20, x19, [sp, #0x10]
000000000004ff7c	ldp	x22, x21, [sp], #0x30
000000000004ff80	ret
000000000004ff84	mov	x20, x0
000000000004ff88	ldaxr	w8, [x19]
000000000004ff8c	stlxr	w9, w21, [x19]
000000000004ff90	cbnz	w9, 0x4ff88
000000000004ff94	cbnz	w21, 0x4ffb8
000000000004ff98	cmp	w8, #0x1
000000000004ff9c	b.ne	0x4ffb8
000000000004ffa0	adr	x8, #0x44569
000000000004ffa4	nop
000000000004ffa8	ldarb	w8, [x8]
000000000004ffac	tbz	w8, #0x0, 0x4ffb8
000000000004ffb0	mov	x0, x19
000000000004ffb4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000004ffb8	mov	x0, x20
000000000004ffbc	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet member:]:
000000000004ffc0	stp	x24, x23, [sp, #-0x40]!
000000000004ffc4	stp	x22, x21, [sp, #0x10]
000000000004ffc8	stp	x20, x19, [sp, #0x20]
000000000004ffcc	stp	x29, x30, [sp, #0x30]
000000000004ffd0	add	x29, sp, #0x30
000000000004ffd4	mov	x20, x2
000000000004ffd8	mov	x21, x0
000000000004ffdc	bl	_Kotlin_initRuntimeIfNeeded
000000000004ffe0	adrp	x0, 43 ; 0x7a000
000000000004ffe4	add	x0, x0, #0x4e0
000000000004ffe8	ldr	x8, [x0]
000000000004ffec	blr	x8
000000000004fff0	ldr	x8, [x0]
000000000004fff4	add	x19, x8, #0x138
000000000004fff8	ldaxr	w22, [x19]
000000000004fffc	stlxr	w8, wzr, [x19]
0000000000050000	cbnz	w8, 0x4fff8
0000000000050004	cmp	w22, #0x1
0000000000050008	b.ne	0x50024
000000000005000c	adr	x8, #0x444fd
0000000000050010	nop
0000000000050014	ldarb	w8, [x8]
0000000000050018	tbz	w8, #0x0, 0x50024
000000000005001c	mov	x0, x19
0000000000050020	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050024	nop
0000000000050028	ldrsw	x23, _OBJC_IVAR_$_RCKMutableSet.setHolder
000000000005002c	bl	_Kotlin_initRuntimeIfNeeded
0000000000050030	ldr	x0, [x21, x23]
0000000000050034	mov	x1, x20
0000000000050038	bl	__ZL15KSet_getElementP9ObjHeaderP11objc_object
000000000005003c	mov	x20, x0
0000000000050040	ldaxr	w8, [x19]
0000000000050044	stlxr	w9, w22, [x19]
0000000000050048	cbnz	w9, 0x50040
000000000005004c	cbnz	w22, 0x50070
0000000000050050	cmp	w8, #0x1
0000000000050054	b.ne	0x50070
0000000000050058	adr	x8, #0x444b1
000000000005005c	nop
0000000000050060	ldarb	w8, [x8]
0000000000050064	tbz	w8, #0x0, 0x50070
0000000000050068	mov	x0, x19
000000000005006c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050070	mov	x0, x20
0000000000050074	ldp	x29, x30, [sp, #0x30]
0000000000050078	ldp	x20, x19, [sp, #0x20]
000000000005007c	ldp	x22, x21, [sp, #0x10]
0000000000050080	ldp	x24, x23, [sp], #0x40
0000000000050084	ret
0000000000050088	mov	x20, x0
000000000005008c	ldaxr	w8, [x19]
0000000000050090	stlxr	w9, w22, [x19]
0000000000050094	cbnz	w9, 0x5008c
0000000000050098	cbnz	w22, 0x500bc
000000000005009c	cmp	w8, #0x1
00000000000500a0	b.ne	0x500bc
00000000000500a4	adr	x8, #0x44465
00000000000500a8	nop
00000000000500ac	ldarb	w8, [x8]
00000000000500b0	tbz	w8, #0x0, 0x500bc
00000000000500b4	mov	x0, x19
00000000000500b8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000500bc	mov	x0, x20
00000000000500c0	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet containsObject:]:
00000000000500c4	sub	sp, sp, #0x70
00000000000500c8	stp	x26, x25, [sp, #0x20]
00000000000500cc	stp	x24, x23, [sp, #0x30]
00000000000500d0	stp	x22, x21, [sp, #0x40]
00000000000500d4	stp	x20, x19, [sp, #0x50]
00000000000500d8	stp	x29, x30, [sp, #0x60]
00000000000500dc	add	x29, sp, #0x60
00000000000500e0	mov	x21, x2
00000000000500e4	mov	x22, x0
00000000000500e8	bl	_Kotlin_initRuntimeIfNeeded
00000000000500ec	adrp	x20, 42 ; 0x7a000
00000000000500f0	add	x20, x20, #0x4e0
00000000000500f4	ldr	x24, [x20]
00000000000500f8	mov	x0, x20
00000000000500fc	blr	x24
0000000000050100	ldr	x8, [x0]
0000000000050104	add	x19, x8, #0x138
0000000000050108	ldaxr	w23, [x19]
000000000005010c	stlxr	w8, wzr, [x19]
0000000000050110	cbnz	w8, 0x50108
0000000000050114	cmp	w23, #0x1
0000000000050118	b.ne	0x50134
000000000005011c	adr	x8, #0x443ed
0000000000050120	nop
0000000000050124	ldarb	w8, [x8]
0000000000050128	tbz	w8, #0x0, 0x50134
000000000005012c	mov	x0, x19
0000000000050130	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050134	mov	x25, sp
0000000000050138	str	xzr, [sp, #0x18]
000000000005013c	mov	x0, x20
0000000000050140	blr	x24
0000000000050144	ldr	x8, [x0]
0000000000050148	ldr	x9, [x8, #0x110]
000000000005014c	str	x25, [x8, #0x110]
0000000000050150	mov	x8, #0x400000000
0000000000050154	stp	x9, x8, [sp, #0x8]
0000000000050158	nop
000000000005015c	ldrsw	x26, _OBJC_IVAR_$_RCKMutableSet.setHolder
0000000000050160	bl	_Kotlin_initRuntimeIfNeeded
0000000000050164	ldr	x22, [x22, x26]
0000000000050168	nop
000000000005016c	ldr	x0, #0x26f0c ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000050170	nop
0000000000050174	ldr	x1, #0x26c5c ; Objc selector ref: null
0000000000050178	bl	0x55ca8 ; Objc message: +[NSNull null]
000000000005017c	cmp	x0, x21
0000000000050180	b.eq	0x501a4
0000000000050184	cbz	x21, 0x501a4
0000000000050188	add	x2, x25, #0x18
000000000005018c	nop
0000000000050190	ldr	x1, #0x445c8
0000000000050194	mov	x0, x21
0000000000050198	bl	0x55ca8 ; Objc message: -[x0 null]
000000000005019c	mov	x1, x0
00000000000501a0	b	0x501ac
00000000000501a4	mov	x1, #0x0
00000000000501a8	str	xzr, [sp, #0x18]
00000000000501ac	mov	x0, x22
00000000000501b0	bl	_Kotlin_Set_contains
00000000000501b4	mov	x21, x0
00000000000501b8	mov	x0, x20
00000000000501bc	blr	x24
00000000000501c0	ldr	x8, [x0]
00000000000501c4	ldr	x9, [sp, #0x8]
00000000000501c8	str	x9, [x8, #0x110]
00000000000501cc	ldaxr	w8, [x19]
00000000000501d0	stlxr	w9, w23, [x19]
00000000000501d4	cbnz	w9, 0x501cc
00000000000501d8	cbnz	w23, 0x501fc
00000000000501dc	cmp	w8, #0x1
00000000000501e0	b.ne	0x501fc
00000000000501e4	adr	x8, #0x44325
00000000000501e8	nop
00000000000501ec	ldarb	w8, [x8]
00000000000501f0	tbz	w8, #0x0, 0x501fc
00000000000501f4	mov	x0, x19
00000000000501f8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000501fc	mov	x0, x21
0000000000050200	ldp	x29, x30, [sp, #0x60]
0000000000050204	ldp	x20, x19, [sp, #0x50]
0000000000050208	ldp	x22, x21, [sp, #0x40]
000000000005020c	ldp	x24, x23, [sp, #0x30]
0000000000050210	ldp	x26, x25, [sp, #0x20]
0000000000050214	add	sp, sp, #0x70
0000000000050218	ret
000000000005021c	mov	x21, x0
0000000000050220	mov	x0, x20
0000000000050224	blr	x24
0000000000050228	ldr	x8, [x0]
000000000005022c	ldr	x9, [sp, #0x8]
0000000000050230	str	x9, [x8, #0x110]
0000000000050234	ldaxr	w8, [x19]
0000000000050238	stlxr	w9, w23, [x19]
000000000005023c	cbnz	w9, 0x50234
0000000000050240	cbnz	w23, 0x50264
0000000000050244	cmp	w8, #0x1
0000000000050248	b.ne	0x50264
000000000005024c	adr	x8, #0x442bd
0000000000050250	nop
0000000000050254	ldarb	w8, [x8]
0000000000050258	tbz	w8, #0x0, 0x50264
000000000005025c	mov	x0, x19
0000000000050260	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050264	mov	x0, x21
0000000000050268	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet objectEnumerator]:
000000000005026c	sub	sp, sp, #0x70
0000000000050270	stp	x26, x25, [sp, #0x20]
0000000000050274	stp	x24, x23, [sp, #0x30]
0000000000050278	stp	x22, x21, [sp, #0x40]
000000000005027c	stp	x20, x19, [sp, #0x50]
0000000000050280	stp	x29, x30, [sp, #0x60]
0000000000050284	add	x29, sp, #0x60
0000000000050288	mov	x21, x0
000000000005028c	bl	_Kotlin_initRuntimeIfNeeded
0000000000050290	adrp	x20, 42 ; 0x7a000
0000000000050294	add	x20, x20, #0x4e0
0000000000050298	ldr	x25, [x20]
000000000005029c	mov	x0, x20
00000000000502a0	blr	x25
00000000000502a4	ldr	x8, [x0]
00000000000502a8	add	x19, x8, #0x138
00000000000502ac	ldaxr	w24, [x19]
00000000000502b0	stlxr	w8, wzr, [x19]
00000000000502b4	cbnz	w8, 0x502ac
00000000000502b8	cmp	w24, #0x1
00000000000502bc	b.ne	0x502d8
00000000000502c0	adr	x8, #0x44249
00000000000502c4	nop
00000000000502c8	ldarb	w8, [x8]
00000000000502cc	tbz	w8, #0x0, 0x502d8
00000000000502d0	mov	x0, x19
00000000000502d4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000502d8	mov	x8, sp
00000000000502dc	add	x23, x8, #0x18
00000000000502e0	str	xzr, [sp, #0x18]
00000000000502e4	mov	x0, x20
00000000000502e8	blr	x25
00000000000502ec	ldr	x9, [x0]
00000000000502f0	ldr	x10, [x9, #0x110]
00000000000502f4	str	x8, [x9, #0x110]
00000000000502f8	mov	x8, #0x400000000
00000000000502fc	stp	x10, x8, [sp, #0x8]
0000000000050300	nop
0000000000050304	ldr	x22, #0x26d94 ; Objc class ref: RCKKIteratorAsNSEnumerator
0000000000050308	nop
000000000005030c	ldrsw	x26, _OBJC_IVAR_$_RCKMutableSet.setHolder
0000000000050310	bl	_Kotlin_initRuntimeIfNeeded
0000000000050314	ldr	x0, [x21, x26]
0000000000050318	mov	x1, x23
000000000005031c	bl	_Kotlin_Set_iterator
0000000000050320	mov	x2, x0
0000000000050324	nop
0000000000050328	ldr	x1, #0x26940 ; Objc selector ref: createWithKIterator:
000000000005032c	mov	x0, x22
0000000000050330	bl	0x55ca8 ; Objc message: +[RCKKIteratorAsNSEnumerator createWithKIterator:]
0000000000050334	mov	x21, x0
0000000000050338	mov	x0, x20
000000000005033c	blr	x25
0000000000050340	ldr	x8, [x0]
0000000000050344	ldr	x9, [sp, #0x8]
0000000000050348	str	x9, [x8, #0x110]
000000000005034c	ldaxr	w8, [x19]
0000000000050350	stlxr	w9, w24, [x19]
0000000000050354	cbnz	w9, 0x5034c
0000000000050358	cbnz	w24, 0x5037c
000000000005035c	cmp	w8, #0x1
0000000000050360	b.ne	0x5037c
0000000000050364	adr	x8, #0x441a5
0000000000050368	nop
000000000005036c	ldarb	w8, [x8]
0000000000050370	tbz	w8, #0x0, 0x5037c
0000000000050374	mov	x0, x19
0000000000050378	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000005037c	mov	x0, x21
0000000000050380	ldp	x29, x30, [sp, #0x60]
0000000000050384	ldp	x20, x19, [sp, #0x50]
0000000000050388	ldp	x22, x21, [sp, #0x40]
000000000005038c	ldp	x24, x23, [sp, #0x30]
0000000000050390	ldp	x26, x25, [sp, #0x20]
0000000000050394	add	sp, sp, #0x70
0000000000050398	ret
000000000005039c	mov	x21, x0
00000000000503a0	mov	x0, x20
00000000000503a4	blr	x25
00000000000503a8	ldr	x8, [x0]
00000000000503ac	ldr	x9, [sp, #0x8]
00000000000503b0	str	x9, [x8, #0x110]
00000000000503b4	ldaxr	w8, [x19]
00000000000503b8	stlxr	w9, w24, [x19]
00000000000503bc	cbnz	w9, 0x503b4
00000000000503c0	cbnz	w24, 0x503e4
00000000000503c4	cmp	w8, #0x1
00000000000503c8	b.ne	0x503e4
00000000000503cc	adr	x8, #0x4413d
00000000000503d0	nop
00000000000503d4	ldarb	w8, [x8]
00000000000503d8	tbz	w8, #0x0, 0x503e4
00000000000503dc	mov	x0, x19
00000000000503e0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000503e4	mov	x0, x21
00000000000503e8	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet addObject:]:
00000000000503ec	sub	sp, sp, #0x70
00000000000503f0	stp	x26, x25, [sp, #0x20]
00000000000503f4	stp	x24, x23, [sp, #0x30]
00000000000503f8	stp	x22, x21, [sp, #0x40]
00000000000503fc	stp	x20, x19, [sp, #0x50]
0000000000050400	stp	x29, x30, [sp, #0x60]
0000000000050404	add	x29, sp, #0x60
0000000000050408	mov	x21, x2
000000000005040c	mov	x22, x0
0000000000050410	bl	_Kotlin_initRuntimeIfNeeded
0000000000050414	adrp	x20, 42 ; 0x7a000
0000000000050418	add	x20, x20, #0x4e0
000000000005041c	ldr	x24, [x20]
0000000000050420	mov	x0, x20
0000000000050424	blr	x24
0000000000050428	ldr	x8, [x0]
000000000005042c	add	x19, x8, #0x138
0000000000050430	ldaxr	w23, [x19]
0000000000050434	stlxr	w8, wzr, [x19]
0000000000050438	cbnz	w8, 0x50430
000000000005043c	cmp	w23, #0x1
0000000000050440	b.ne	0x5045c
0000000000050444	adr	x8, #0x440c5
0000000000050448	nop
000000000005044c	ldarb	w8, [x8]
0000000000050450	tbz	w8, #0x0, 0x5045c
0000000000050454	mov	x0, x19
0000000000050458	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000005045c	mov	x25, sp
0000000000050460	str	xzr, [sp, #0x18]
0000000000050464	mov	x0, x20
0000000000050468	blr	x24
000000000005046c	ldr	x8, [x0]
0000000000050470	ldr	x9, [x8, #0x110]
0000000000050474	str	x25, [x8, #0x110]
0000000000050478	mov	x8, #0x400000000
000000000005047c	stp	x9, x8, [sp, #0x8]
0000000000050480	nop
0000000000050484	ldrsw	x26, _OBJC_IVAR_$_RCKMutableSet.setHolder
0000000000050488	bl	_Kotlin_initRuntimeIfNeeded
000000000005048c	ldr	x22, [x22, x26]
0000000000050490	nop
0000000000050494	ldr	x0, #0x26be4 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000050498	nop
000000000005049c	ldr	x1, #0x26934 ; Objc selector ref: null
00000000000504a0	bl	0x55ca8 ; Objc message: +[NSNull null]
00000000000504a4	cmp	x0, x21
00000000000504a8	b.eq	0x504cc
00000000000504ac	cbz	x21, 0x504cc
00000000000504b0	add	x2, x25, #0x18
00000000000504b4	nop
00000000000504b8	ldr	x1, #0x442a0
00000000000504bc	mov	x0, x21
00000000000504c0	bl	0x55ca8 ; Objc message: -[x0 null]
00000000000504c4	mov	x1, x0
00000000000504c8	b	0x504d4
00000000000504cc	mov	x1, #0x0
00000000000504d0	str	xzr, [sp, #0x18]
00000000000504d4	mov	x0, x22
00000000000504d8	bl	_Kotlin_MutableCollection_addObject
00000000000504dc	mov	x0, x20
00000000000504e0	blr	x24
00000000000504e4	ldr	x8, [x0]
00000000000504e8	ldr	x9, [sp, #0x8]
00000000000504ec	str	x9, [x8, #0x110]
00000000000504f0	ldaxr	w8, [x19]
00000000000504f4	stlxr	w9, w23, [x19]
00000000000504f8	cbnz	w9, 0x504f0
00000000000504fc	cbnz	w23, 0x50520
0000000000050500	cmp	w8, #0x1
0000000000050504	b.ne	0x50520
0000000000050508	adr	x8, #0x44001
000000000005050c	nop
0000000000050510	ldarb	w8, [x8]
0000000000050514	tbz	w8, #0x0, 0x50520
0000000000050518	mov	x0, x19
000000000005051c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050520	ldp	x29, x30, [sp, #0x60]
0000000000050524	ldp	x20, x19, [sp, #0x50]
0000000000050528	ldp	x22, x21, [sp, #0x40]
000000000005052c	ldp	x24, x23, [sp, #0x30]
0000000000050530	ldp	x26, x25, [sp, #0x20]
0000000000050534	add	sp, sp, #0x70
0000000000050538	ret
000000000005053c	mov	x21, x0
0000000000050540	mov	x0, x20
0000000000050544	blr	x24
0000000000050548	ldr	x8, [x0]
000000000005054c	ldr	x9, [sp, #0x8]
0000000000050550	str	x9, [x8, #0x110]
0000000000050554	ldaxr	w8, [x19]
0000000000050558	stlxr	w9, w23, [x19]
000000000005055c	cbnz	w9, 0x50554
0000000000050560	cbnz	w23, 0x50584
0000000000050564	cmp	w8, #0x1
0000000000050568	b.ne	0x50584
000000000005056c	adr	x8, #0x43f9d
0000000000050570	nop
0000000000050574	ldarb	w8, [x8]
0000000000050578	tbz	w8, #0x0, 0x50584
000000000005057c	mov	x0, x19
0000000000050580	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050584	mov	x0, x21
0000000000050588	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KotlinMutableSet removeObject:]:
000000000005058c	sub	sp, sp, #0x90
0000000000050590	stp	x26, x25, [sp, #0x40]
0000000000050594	stp	x24, x23, [sp, #0x50]
0000000000050598	stp	x22, x21, [sp, #0x60]
000000000005059c	stp	x20, x19, [sp, #0x70]
00000000000505a0	stp	x29, x30, [sp, #0x80]
00000000000505a4	add	x29, sp, #0x80
00000000000505a8	mov	x22, x2
00000000000505ac	mov	x21, x0
00000000000505b0	bl	_Kotlin_initRuntimeIfNeeded
00000000000505b4	adrp	x20, 42 ; 0x7a000
00000000000505b8	add	x20, x20, #0x4e0
00000000000505bc	ldr	x24, [x20]
00000000000505c0	mov	x0, x20
00000000000505c4	blr	x24
00000000000505c8	ldr	x8, [x0]
00000000000505cc	add	x19, x8, #0x138
00000000000505d0	ldaxr	w23, [x19]
00000000000505d4	stlxr	w8, wzr, [x19]
00000000000505d8	cbnz	w8, 0x505d0
00000000000505dc	cmp	w23, #0x1
00000000000505e0	b.ne	0x505fc
00000000000505e4	adr	x8, #0x43f25
00000000000505e8	nop
00000000000505ec	ldarb	w8, [x8]
00000000000505f0	tbz	w8, #0x0, 0x505fc
00000000000505f4	mov	x0, x19
00000000000505f8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000505fc	add	x25, sp, #0x8
0000000000050600	str	xzr, [sp, #0x20]
0000000000050604	mov	x0, x20
0000000000050608	blr	x24
000000000005060c	ldr	x8, [x0]
0000000000050610	ldr	x9, [x8, #0x110]
0000000000050614	str	x25, [x8, #0x110]
0000000000050618	mov	x8, #0x400000000
000000000005061c	stp	x9, x8, [sp, #0x10]
0000000000050620	nop
0000000000050624	ldrsw	x26, _OBJC_IVAR_$_RCKMutableSet.setHolder
0000000000050628	bl	_Kotlin_initRuntimeIfNeeded
000000000005062c	ldr	x21, [x21, x26]
0000000000050630	nop
0000000000050634	ldr	x0, #0x26a44 ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000050638	nop
000000000005063c	ldr	x1, #0x26794 ; Objc selector ref: null
0000000000050640	bl	0x55ca8 ; Objc message: +[NSNull null]
0000000000050644	cmp	x0, x22
0000000000050648	b.eq	0x5066c
000000000005064c	cbz	x22, 0x5066c
0000000000050650	add	x2, x25, #0x18
0000000000050654	nop
0000000000050658	ldr	x1, #0x44100
000000000005065c	mov	x0, x22
0000000000050660	bl	0x55ca8 ; Objc message: -[x0 null]
0000000000050664	mov	x22, x0
0000000000050668	b	0x50674
000000000005066c	mov	x22, #0x0
0000000000050670	str	xzr, [sp, #0x20]
0000000000050674	str	xzr, [sp, #0x28]
0000000000050678	mov	x0, x20
000000000005067c	blr	x24
0000000000050680	ldr	x8, [x0]
0000000000050684	ldr	x9, [x8, #0x110]
0000000000050688	add	x10, sp, #0x28
000000000005068c	str	x10, [x8, #0x110]
0000000000050690	mov	x8, #0x300000000
0000000000050694	stp	x9, x8, [sp, #0x30]
0000000000050698	adr	x25, #0x43e71
000000000005069c	nop
00000000000506a0	ldarb	w8, [x25]
00000000000506a4	tbz	w8, #0x0, 0x506ac
00000000000506a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000506ac	ldr	x8, [x21]
00000000000506b0	and	x8, x8, #0xfffffffffffffffc
00000000000506b4	ldr	x8, [x8]
00000000000506b8	ldr	w9, [x8, #0x3c]
00000000000506bc	ldr	x8, [x8, #0x40]
00000000000506c0	tbnz	w9, #0x1f, 0x506d0
00000000000506c4	mov	w10, #0x15
00000000000506c8	and	x9, x9, x10
00000000000506cc	b	0x50754
00000000000506d0	neg	w10, w9
00000000000506d4	mvn	w9, w9
00000000000506d8	cmp	w10, #0x9
00000000000506dc	b.ge	0x50714
00000000000506e0	cmp	w10, #0x2
00000000000506e4	b.lt	0x50748
00000000000506e8	mov	x10, #0x0
00000000000506ec	mov	x11, x8
00000000000506f0	ldr	w12, [x11]
00000000000506f4	cmp	w12, #0x14
00000000000506f8	b.gt	0x50750
00000000000506fc	add	x10, x10, #0x1
0000000000050700	add	x11, x11, #0x10
0000000000050704	cmp	x9, x10
0000000000050708	b.ne	0x506f0
000000000005070c	mov	x10, x9
0000000000050710	b	0x50750
0000000000050714	mov	w10, #0x0
0000000000050718	add	w11, w9, w10
000000000005071c	cmp	w11, #0x0
0000000000050720	cinc	w11, w11, lt
0000000000050724	asr	w11, w11, #1
0000000000050728	sbfiz	x12, x11, #4, #32
000000000005072c	ldr	w12, [x8, x12]
0000000000050730	cmp	w12, #0x15
0000000000050734	csinc	w10, w10, w11, ge
0000000000050738	csel	w9, w9, w11, lt
000000000005073c	cmp	w10, w9
0000000000050740	b.lt	0x50718
0000000000050744	b	0x50750
0000000000050748	mov	w10, #0x0
000000000005074c	b	0x50750
0000000000050750	sxtw	x9, w10
0000000000050754	add	x8, x8, x9, lsl #4
0000000000050758	ldr	x8, [x8, #0x8]
000000000005075c	ldr	x8, [x8, #0x20]
0000000000050760	mov	x0, x21
0000000000050764	mov	x1, x22
0000000000050768	blr	x8
000000000005076c	mov	x0, x20
0000000000050770	blr	x24
0000000000050774	ldr	x8, [x0]
0000000000050778	ldr	x9, [sp, #0x10]
000000000005077c	str	x9, [x8, #0x110]
0000000000050780	ldaxr	w8, [x19]
0000000000050784	stlxr	w9, w23, [x19]
0000000000050788	cbnz	w9, 0x50780
000000000005078c	cbnz	w23, 0x507a8
0000000000050790	cmp	w8, #0x1
0000000000050794	b.ne	0x507a8
0000000000050798	ldarb	w8, [x25]
000000000005079c	tbz	w8, #0x0, 0x507a8
00000000000507a0	mov	x0, x19
00000000000507a4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000507a8	ldp	x29, x30, [sp, #0x80]
00000000000507ac	ldp	x20, x19, [sp, #0x70]
00000000000507b0	ldp	x22, x21, [sp, #0x60]
00000000000507b4	ldp	x24, x23, [sp, #0x50]
00000000000507b8	ldp	x26, x25, [sp, #0x40]
00000000000507bc	add	sp, sp, #0x90
00000000000507c0	ret
00000000000507c4	mov	x21, x0
00000000000507c8	mov	x0, x20
00000000000507cc	blr	x24
00000000000507d0	ldr	x8, [x0]
00000000000507d4	ldr	x9, [sp, #0x30]
00000000000507d8	str	x9, [x8, #0x110]
00000000000507dc	b	0x507f0
00000000000507e0	mov	x21, x0
00000000000507e4	mov	x0, x20
00000000000507e8	blr	x24
00000000000507ec	ldr	x8, [x0]
00000000000507f0	ldr	x9, [sp, #0x10]
00000000000507f4	str	x9, [x8, #0x110]
00000000000507f8	ldaxr	w8, [x19]
00000000000507fc	stlxr	w9, w23, [x19]
0000000000050800	cbnz	w9, 0x507f8
0000000000050804	cbnz	w23, 0x50828
0000000000050808	cmp	w8, #0x1
000000000005080c	b.ne	0x50828
0000000000050810	adr	x8, #0x43cf9
0000000000050814	nop
0000000000050818	ldarb	w8, [x8]
000000000005081c	tbz	w8, #0x0, 0x50828
0000000000050820	mov	x0, x19
0000000000050824	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050828	mov	x0, x21
000000000005082c	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KMapAsNSDictionary dealloc]:
0000000000050830	sub	sp, sp, #0x60
0000000000050834	stp	x26, x25, [sp, #0x10]
0000000000050838	stp	x24, x23, [sp, #0x20]
000000000005083c	stp	x22, x21, [sp, #0x30]
0000000000050840	stp	x20, x19, [sp, #0x40]
0000000000050844	stp	x29, x30, [sp, #0x50]
0000000000050848	add	x29, sp, #0x50
000000000005084c	mov	x19, x0
0000000000050850	nop
0000000000050854	ldrsw	x8, _OBJC_IVAR_$_RCKKMapAsNSDictionary.mapHolder
0000000000050858	add	x24, x0, x8
000000000005085c	bl	_Kotlin_initRuntimeIfNeeded
0000000000050860	adrp	x21, 42 ; 0x7a000
0000000000050864	add	x21, x21, #0x4e0
0000000000050868	ldr	x25, [x21]
000000000005086c	mov	x0, x21
0000000000050870	blr	x25
0000000000050874	ldr	x8, [x0]
0000000000050878	add	x20, x8, #0x138
000000000005087c	ldaxr	w22, [x20]
0000000000050880	stlxr	w8, wzr, [x20]
0000000000050884	cbnz	w8, 0x5087c
0000000000050888	adr	x23, #0x43c81
000000000005088c	nop
0000000000050890	cmp	w22, #0x1
0000000000050894	b.ne	0x508a8
0000000000050898	ldarb	w8, [x23]
000000000005089c	tbz	w8, #0x0, 0x508a8
00000000000508a0	mov	x0, x20
00000000000508a4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000508a8	ldr	x8, [x24]
00000000000508ac	cbz	x8, 0x508c8
00000000000508b0	ldr	x1, [x24, #0x8]
00000000000508b4	mov	x0, x21
00000000000508b8	blr	x25
00000000000508bc	ldr	x8, [x0]
00000000000508c0	add	x0, x8, #0x8
00000000000508c4	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
00000000000508c8	ldaxr	w8, [x20]
00000000000508cc	stlxr	w9, w22, [x20]
00000000000508d0	cbnz	w9, 0x508c8
00000000000508d4	cbnz	w22, 0x508f0
00000000000508d8	cmp	w8, #0x1
00000000000508dc	b.ne	0x508f0
00000000000508e0	ldarb	w8, [x23]
00000000000508e4	tbz	w8, #0x0, 0x508f0
00000000000508e8	mov	x0, x20
00000000000508ec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000508f0	nop
00000000000508f4	ldr	x8, #0x2681c ; Objc class ref: RCKKMapAsNSDictionary
00000000000508f8	stp	x19, x8, [sp]
00000000000508fc	nop
0000000000050900	ldr	x1, #0x26370 ; Objc selector ref: dealloc
0000000000050904	mov	x0, sp
0000000000050908	bl	0x55cb4 ; Objc message: -[[x0 super] dealloc]
000000000005090c	ldp	x29, x30, [sp, #0x50]
0000000000050910	ldp	x20, x19, [sp, #0x40]
0000000000050914	ldp	x22, x21, [sp, #0x30]
0000000000050918	ldp	x24, x23, [sp, #0x20]
000000000005091c	ldp	x26, x25, [sp, #0x10]
0000000000050920	add	sp, sp, #0x60
0000000000050924	ret
-[KMapAsNSDictionary toKotlin:]:
0000000000050928	stp	x22, x21, [sp, #-0x30]!
000000000005092c	stp	x20, x19, [sp, #0x10]
0000000000050930	stp	x29, x30, [sp, #0x20]
0000000000050934	add	x29, sp, #0x20
0000000000050938	mov	x19, x2
000000000005093c	mov	x20, x0
0000000000050940	nop
0000000000050944	ldrsw	x21, _OBJC_IVAR_$_RCKKMapAsNSDictionary.mapHolder
0000000000050948	bl	_Kotlin_initRuntimeIfNeeded
000000000005094c	ldr	x0, [x20, x21]
0000000000050950	str	x0, [x19]
0000000000050954	ldp	x29, x30, [sp, #0x20]
0000000000050958	ldp	x20, x19, [sp, #0x10]
000000000005095c	ldp	x22, x21, [sp], #0x30
0000000000050960	ret
-[KMapAsNSDictionary count]:
0000000000050964	stp	x22, x21, [sp, #-0x30]!
0000000000050968	stp	x20, x19, [sp, #0x10]
000000000005096c	stp	x29, x30, [sp, #0x20]
0000000000050970	add	x29, sp, #0x20
0000000000050974	mov	x20, x0
0000000000050978	bl	_Kotlin_initRuntimeIfNeeded
000000000005097c	adrp	x0, 42 ; 0x7a000
0000000000050980	add	x0, x0, #0x4e0
0000000000050984	ldr	x8, [x0]
0000000000050988	blr	x8
000000000005098c	ldr	x8, [x0]
0000000000050990	add	x19, x8, #0x138
0000000000050994	ldaxr	w21, [x19]
0000000000050998	stlxr	w8, wzr, [x19]
000000000005099c	cbnz	w8, 0x50994
00000000000509a0	cmp	w21, #0x1
00000000000509a4	b.ne	0x509c0
00000000000509a8	adr	x8, #0x43b61
00000000000509ac	nop
00000000000509b0	ldarb	w8, [x8]
00000000000509b4	tbz	w8, #0x0, 0x509c0
00000000000509b8	mov	x0, x19
00000000000509bc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000509c0	nop
00000000000509c4	ldrsw	x22, _OBJC_IVAR_$_RCKKMapAsNSDictionary.mapHolder
00000000000509c8	bl	_Kotlin_initRuntimeIfNeeded
00000000000509cc	ldr	x0, [x20, x22]
00000000000509d0	bl	_Kotlin_Map_getSize
00000000000509d4	mov	x20, x0
00000000000509d8	ldaxr	w8, [x19]
00000000000509dc	stlxr	w9, w21, [x19]
00000000000509e0	cbnz	w9, 0x509d8
00000000000509e4	cbnz	w21, 0x50a08
00000000000509e8	cmp	w8, #0x1
00000000000509ec	b.ne	0x50a08
00000000000509f0	adr	x8, #0x43b19
00000000000509f4	nop
00000000000509f8	ldarb	w8, [x8]
00000000000509fc	tbz	w8, #0x0, 0x50a08
0000000000050a00	mov	x0, x19
0000000000050a04	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050a08	sxtw	x0, w20
0000000000050a0c	ldp	x29, x30, [sp, #0x20]
0000000000050a10	ldp	x20, x19, [sp, #0x10]
0000000000050a14	ldp	x22, x21, [sp], #0x30
0000000000050a18	ret
0000000000050a1c	mov	x20, x0
0000000000050a20	ldaxr	w8, [x19]
0000000000050a24	stlxr	w9, w21, [x19]
0000000000050a28	cbnz	w9, 0x50a20
0000000000050a2c	cbnz	w21, 0x50a50
0000000000050a30	cmp	w8, #0x1
0000000000050a34	b.ne	0x50a50
0000000000050a38	adr	x8, #0x43ad1
0000000000050a3c	nop
0000000000050a40	ldarb	w8, [x8]
0000000000050a44	tbz	w8, #0x0, 0x50a50
0000000000050a48	mov	x0, x19
0000000000050a4c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050a50	mov	x0, x20
0000000000050a54	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KMapAsNSDictionary objectForKey:]:
0000000000050a58	stp	x24, x23, [sp, #-0x40]!
0000000000050a5c	stp	x22, x21, [sp, #0x10]
0000000000050a60	stp	x20, x19, [sp, #0x20]
0000000000050a64	stp	x29, x30, [sp, #0x30]
0000000000050a68	add	x29, sp, #0x30
0000000000050a6c	mov	x20, x2
0000000000050a70	mov	x21, x0
0000000000050a74	bl	_Kotlin_initRuntimeIfNeeded
0000000000050a78	adrp	x0, 42 ; 0x7a000
0000000000050a7c	add	x0, x0, #0x4e0
0000000000050a80	ldr	x8, [x0]
0000000000050a84	blr	x8
0000000000050a88	ldr	x8, [x0]
0000000000050a8c	add	x19, x8, #0x138
0000000000050a90	ldaxr	w22, [x19]
0000000000050a94	stlxr	w8, wzr, [x19]
0000000000050a98	cbnz	w8, 0x50a90
0000000000050a9c	cmp	w22, #0x1
0000000000050aa0	b.ne	0x50abc
0000000000050aa4	adr	x8, #0x43a65
0000000000050aa8	nop
0000000000050aac	ldarb	w8, [x8]
0000000000050ab0	tbz	w8, #0x0, 0x50abc
0000000000050ab4	mov	x0, x19
0000000000050ab8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050abc	nop
0000000000050ac0	ldrsw	x23, _OBJC_IVAR_$_RCKKMapAsNSDictionary.mapHolder
0000000000050ac4	bl	_Kotlin_initRuntimeIfNeeded
0000000000050ac8	ldr	x0, [x21, x23]
0000000000050acc	mov	x1, x20
0000000000050ad0	bl	__ZL8KMap_getP9ObjHeaderP11objc_object
0000000000050ad4	mov	x20, x0
0000000000050ad8	ldaxr	w8, [x19]
0000000000050adc	stlxr	w9, w22, [x19]
0000000000050ae0	cbnz	w9, 0x50ad8
0000000000050ae4	cbnz	w22, 0x50b08
0000000000050ae8	cmp	w8, #0x1
0000000000050aec	b.ne	0x50b08
0000000000050af0	adr	x8, #0x43a19
0000000000050af4	nop
0000000000050af8	ldarb	w8, [x8]
0000000000050afc	tbz	w8, #0x0, 0x50b08
0000000000050b00	mov	x0, x19
0000000000050b04	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050b08	mov	x0, x20
0000000000050b0c	ldp	x29, x30, [sp, #0x30]
0000000000050b10	ldp	x20, x19, [sp, #0x20]
0000000000050b14	ldp	x22, x21, [sp, #0x10]
0000000000050b18	ldp	x24, x23, [sp], #0x40
0000000000050b1c	ret
0000000000050b20	mov	x20, x0
0000000000050b24	ldaxr	w8, [x19]
0000000000050b28	stlxr	w9, w22, [x19]
0000000000050b2c	cbnz	w9, 0x50b24
0000000000050b30	cbnz	w22, 0x50b54
0000000000050b34	cmp	w8, #0x1
0000000000050b38	b.ne	0x50b54
0000000000050b3c	adr	x8, #0x439cd
0000000000050b40	nop
0000000000050b44	ldarb	w8, [x8]
0000000000050b48	tbz	w8, #0x0, 0x50b54
0000000000050b4c	mov	x0, x19
0000000000050b50	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050b54	mov	x0, x20
0000000000050b58	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KMapAsNSDictionary keyEnumerator]:
0000000000050b5c	sub	sp, sp, #0x70
0000000000050b60	stp	x26, x25, [sp, #0x20]
0000000000050b64	stp	x24, x23, [sp, #0x30]
0000000000050b68	stp	x22, x21, [sp, #0x40]
0000000000050b6c	stp	x20, x19, [sp, #0x50]
0000000000050b70	stp	x29, x30, [sp, #0x60]
0000000000050b74	add	x29, sp, #0x60
0000000000050b78	mov	x21, x0
0000000000050b7c	bl	_Kotlin_initRuntimeIfNeeded
0000000000050b80	adrp	x20, 42 ; 0x7a000
0000000000050b84	add	x20, x20, #0x4e0
0000000000050b88	ldr	x25, [x20]
0000000000050b8c	mov	x0, x20
0000000000050b90	blr	x25
0000000000050b94	ldr	x8, [x0]
0000000000050b98	add	x19, x8, #0x138
0000000000050b9c	ldaxr	w24, [x19]
0000000000050ba0	stlxr	w8, wzr, [x19]
0000000000050ba4	cbnz	w8, 0x50b9c
0000000000050ba8	cmp	w24, #0x1
0000000000050bac	b.ne	0x50bc8
0000000000050bb0	adr	x8, #0x43959
0000000000050bb4	nop
0000000000050bb8	ldarb	w8, [x8]
0000000000050bbc	tbz	w8, #0x0, 0x50bc8
0000000000050bc0	mov	x0, x19
0000000000050bc4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050bc8	mov	x8, sp
0000000000050bcc	add	x23, x8, #0x18
0000000000050bd0	str	xzr, [sp, #0x18]
0000000000050bd4	mov	x0, x20
0000000000050bd8	blr	x25
0000000000050bdc	ldr	x9, [x0]
0000000000050be0	ldr	x10, [x9, #0x110]
0000000000050be4	str	x8, [x9, #0x110]
0000000000050be8	mov	x8, #0x400000000
0000000000050bec	stp	x10, x8, [sp, #0x8]
0000000000050bf0	nop
0000000000050bf4	ldr	x22, #0x264a4 ; Objc class ref: RCKKIteratorAsNSEnumerator
0000000000050bf8	nop
0000000000050bfc	ldrsw	x26, _OBJC_IVAR_$_RCKKMapAsNSDictionary.mapHolder
0000000000050c00	bl	_Kotlin_initRuntimeIfNeeded
0000000000050c04	ldr	x0, [x21, x26]
0000000000050c08	mov	x1, x23
0000000000050c0c	bl	_Kotlin_Map_keyIterator
0000000000050c10	mov	x2, x0
0000000000050c14	nop
0000000000050c18	ldr	x1, #0x26050 ; Objc selector ref: createWithKIterator:
0000000000050c1c	mov	x0, x22
0000000000050c20	bl	0x55ca8 ; Objc message: +[RCKKIteratorAsNSEnumerator createWithKIterator:]
0000000000050c24	mov	x21, x0
0000000000050c28	mov	x0, x20
0000000000050c2c	blr	x25
0000000000050c30	ldr	x8, [x0]
0000000000050c34	ldr	x9, [sp, #0x8]
0000000000050c38	str	x9, [x8, #0x110]
0000000000050c3c	ldaxr	w8, [x19]
0000000000050c40	stlxr	w9, w24, [x19]
0000000000050c44	cbnz	w9, 0x50c3c
0000000000050c48	cbnz	w24, 0x50c6c
0000000000050c4c	cmp	w8, #0x1
0000000000050c50	b.ne	0x50c6c
0000000000050c54	adr	x8, #0x438b5
0000000000050c58	nop
0000000000050c5c	ldarb	w8, [x8]
0000000000050c60	tbz	w8, #0x0, 0x50c6c
0000000000050c64	mov	x0, x19
0000000000050c68	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050c6c	mov	x0, x21
0000000000050c70	ldp	x29, x30, [sp, #0x60]
0000000000050c74	ldp	x20, x19, [sp, #0x50]
0000000000050c78	ldp	x22, x21, [sp, #0x40]
0000000000050c7c	ldp	x24, x23, [sp, #0x30]
0000000000050c80	ldp	x26, x25, [sp, #0x20]
0000000000050c84	add	sp, sp, #0x70
0000000000050c88	ret
0000000000050c8c	mov	x21, x0
0000000000050c90	mov	x0, x20
0000000000050c94	blr	x25
0000000000050c98	ldr	x8, [x0]
0000000000050c9c	ldr	x9, [sp, #0x8]
0000000000050ca0	str	x9, [x8, #0x110]
0000000000050ca4	ldaxr	w8, [x19]
0000000000050ca8	stlxr	w9, w24, [x19]
0000000000050cac	cbnz	w9, 0x50ca4
0000000000050cb0	cbnz	w24, 0x50cd4
0000000000050cb4	cmp	w8, #0x1
0000000000050cb8	b.ne	0x50cd4
0000000000050cbc	adr	x8, #0x4384d
0000000000050cc0	nop
0000000000050cc4	ldarb	w8, [x8]
0000000000050cc8	tbz	w8, #0x0, 0x50cd4
0000000000050ccc	mov	x0, x19
0000000000050cd0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000050cd4	mov	x0, x21
0000000000050cd8	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZL8KMap_getP9ObjHeaderP11objc_object:
0000000000050cdc	sub	sp, sp, #0xb0
0000000000050ce0	stp	x26, x25, [sp, #0x60]
0000000000050ce4	stp	x24, x23, [sp, #0x70]
0000000000050ce8	stp	x22, x21, [sp, #0x80]
0000000000050cec	stp	x20, x19, [sp, #0x90]
0000000000050cf0	stp	x29, x30, [sp, #0xa0]
0000000000050cf4	add	x29, sp, #0xa0
0000000000050cf8	mov	x22, x1
0000000000050cfc	mov	x20, x0
0000000000050d00	add	x26, sp, #0x28
0000000000050d04	str	xzr, [sp, #0x40]
0000000000050d08	adrp	x19, 42 ; 0x7a000
0000000000050d0c	add	x19, x19, #0x4e0
0000000000050d10	ldr	x24, [x19]
0000000000050d14	mov	x0, x19
0000000000050d18	blr	x24
0000000000050d1c	ldr	x8, [x0]
0000000000050d20	ldr	x9, [x8, #0x110]
0000000000050d24	mov	x10, #0x400000000
0000000000050d28	stp	x9, x10, [sp, #0x30]
0000000000050d2c	add	x23, sp, #0x8
0000000000050d30	stp	x10, xzr, [sp, #0x18]
0000000000050d34	str	x23, [x8, #0x110]
0000000000050d38	str	x26, [sp, #0x10]
0000000000050d3c	adrp	x25, 39 ; 0x77000
0000000000050d40	ldr	x0, [x25, #0x78] ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000050d44	nop
0000000000050d48	ldr	x21, #0x26088 ; Objc selector ref: null
0000000000050d4c	mov	x1, x21
0000000000050d50	bl	0x55ca8 ; Objc message: +[NSNull null]
0000000000050d54	cmp	x0, x22
0000000000050d58	ccmp	x22, #0x0, #0x4, ne
0000000000050d5c	b.ne	0x50d6c
0000000000050d60	mov	x22, #0x0
0000000000050d64	str	xzr, [sp, #0x40]
0000000000050d68	b	0x50d84
0000000000050d6c	add	x2, x26, #0x18
0000000000050d70	nop
0000000000050d74	ldr	x1, #0x439e4
0000000000050d78	mov	x0, x22
0000000000050d7c	bl	0x55ca8 ; Objc message: -[x0 null]
0000000000050d80	mov	x22, x0
0000000000050d84	add	x23, x23, #0x18
0000000000050d88	str	xzr, [sp, #0x48]
0000000000050d8c	mov	x0, x19
0000000000050d90	blr	x24
0000000000050d94	ldr	x8, [x0]
0000000000050d98	ldr	x9, [x8, #0x110]
0000000000050d9c	add	x10, sp, #0x48
0000000000050da0	str	x10, [x8, #0x110]
0000000000050da4	mov	x8, #0x300000000
0000000000050da8	stp	x9, x8, [sp, #0x50]
0000000000050dac	adr	x26, #0x4375d
0000000000050db0	nop
0000000000050db4	ldarb	w8, [x26]
0000000000050db8	tbz	w8, #0x0, 0x50dc0
0000000000050dbc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000050dc0	ldr	x8, [x20]
0000000000050dc4	and	x8, x8, #0xfffffffffffffffc
0000000000050dc8	ldr	x8, [x8]
0000000000050dcc	ldr	w9, [x8, #0x3c]
0000000000050dd0	ldr	x8, [x8, #0x40]
0000000000050dd4	tbnz	w9, #0x1f, 0x50de4
0000000000050dd8	mov	w10, #0x41
0000000000050ddc	and	x9, x9, x10
0000000000050de0	b	0x50e68
0000000000050de4	neg	w10, w9
0000000000050de8	mvn	w9, w9
0000000000050dec	cmp	w10, #0x9
0000000000050df0	b.ge	0x50e28
0000000000050df4	cmp	w10, #0x2
0000000000050df8	b.lt	0x50e5c
0000000000050dfc	mov	x10, #0x0
0000000000050e00	mov	x11, x8
0000000000050e04	ldr	w12, [x11]
0000000000050e08	cmp	w12, #0x40
0000000000050e0c	b.gt	0x50e64
0000000000050e10	add	x10, x10, #0x1
0000000000050e14	add	x11, x11, #0x10
0000000000050e18	cmp	x9, x10
0000000000050e1c	b.ne	0x50e04
0000000000050e20	mov	x10, x9
0000000000050e24	b	0x50e64
0000000000050e28	mov	w10, #0x0
0000000000050e2c	add	w11, w9, w10
0000000000050e30	cmp	w11, #0x0
0000000000050e34	cinc	w11, w11, lt
0000000000050e38	asr	w11, w11, #1
0000000000050e3c	sbfiz	x12, x11, #4, #32
0000000000050e40	ldr	w12, [x8, x12]
0000000000050e44	cmp	w12, #0x41
0000000000050e48	csinc	w10, w10, w11, ge
0000000000050e4c	csel	w9, w9, w11, lt
0000000000050e50	cmp	w10, w9
0000000000050e54	b.lt	0x50e2c
0000000000050e58	b	0x50e64
0000000000050e5c	mov	w10, #0x0
0000000000050e60	b	0x50e64
0000000000050e64	sxtw	x9, w10
0000000000050e68	add	x8, x8, x9, lsl #4
0000000000050e6c	ldr	x8, [x8, #0x8]
0000000000050e70	ldr	x8, [x8, #0x30]
0000000000050e74	mov	x0, x20
0000000000050e78	mov	x1, x22
0000000000050e7c	mov	x2, x23
0000000000050e80	blr	x8
0000000000050e84	mov	x8, x0
0000000000050e88	str	x0, [sp, #0x20]
0000000000050e8c	mov	x0, x19
0000000000050e90	blr	x24
0000000000050e94	ldr	x9, [x0]
0000000000050e98	ldr	x10, [sp, #0x50]
0000000000050e9c	str	x10, [x9, #0x110]
0000000000050ea0	cbz	x8, 0x50eb0
0000000000050ea4	mov	x0, x8
0000000000050ea8	bl	_Kotlin_ObjCExport_refToObjC
0000000000050eac	b	0x50fb8
0000000000050eb0	stp	xzr, x10, [sp, #0x48]
0000000000050eb4	add	x8, sp, #0x48
0000000000050eb8	str	x8, [x9, #0x110]
0000000000050ebc	mov	x8, #0x300000000
0000000000050ec0	str	x8, [sp, #0x58]
0000000000050ec4	ldarb	w8, [x26]
0000000000050ec8	tbz	w8, #0x0, 0x50ed0
0000000000050ecc	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000050ed0	ldr	x8, [x20]
0000000000050ed4	and	x8, x8, #0xfffffffffffffffc
0000000000050ed8	ldr	x8, [x8]
0000000000050edc	ldr	w9, [x8, #0x3c]
0000000000050ee0	ldr	x8, [x8, #0x40]
0000000000050ee4	tbnz	w9, #0x1f, 0x50ef4
0000000000050ee8	mov	w10, #0x41
0000000000050eec	and	x9, x9, x10
0000000000050ef0	b	0x50f78
0000000000050ef4	neg	w10, w9
0000000000050ef8	mvn	w9, w9
0000000000050efc	cmp	w10, #0x9
0000000000050f00	b.ge	0x50f38
0000000000050f04	cmp	w10, #0x2
0000000000050f08	b.lt	0x50f6c
0000000000050f0c	mov	x10, #0x0
0000000000050f10	mov	x11, x8
0000000000050f14	ldr	w12, [x11]
0000000000050f18	cmp	w12, #0x40
0000000000050f1c	b.gt	0x50f74
0000000000050f20	add	x10, x10, #0x1
0000000000050f24	add	x11, x11, #0x10
0000000000050f28	cmp	x9, x10
0000000000050f2c	b.ne	0x50f14
0000000000050f30	mov	x10, x9
0000000000050f34	b	0x50f74
0000000000050f38	mov	w10, #0x0
0000000000050f3c	add	w11, w9, w10
0000000000050f40	cmp	w11, #0x0
0000000000050f44	cinc	w11, w11, lt
0000000000050f48	asr	w11, w11, #1
0000000000050f4c	sbfiz	x12, x11, #4, #32
0000000000050f50	ldr	w12, [x8, x12]
0000000000050f54	cmp	w12, #0x41
0000000000050f58	csinc	w10, w10, w11, ge
0000000000050f5c	csel	w9, w9, w11, lt
0000000000050f60	cmp	w10, w9
0000000000050f64	b.lt	0x50f3c
0000000000050f68	b	0x50f74
0000000000050f6c	mov	w10, #0x0
0000000000050f70	b	0x50f74
0000000000050f74	sxtw	x9, w10
0000000000050f78	add	x8, x8, x9, lsl #4
0000000000050f7c	ldr	x8, [x8, #0x8]
0000000000050f80	ldr	x8, [x8, #0x20]
0000000000050f84	mov	x0, x20
0000000000050f88	mov	x1, x22
0000000000050f8c	blr	x8
0000000000050f90	mov	x8, x0
0000000000050f94	mov	x0, x19
0000000000050f98	blr	x24
0000000000050f9c	ldr	x9, [x0]
0000000000050fa0	ldr	x10, [sp, #0x50]
0000000000050fa4	str	x10, [x9, #0x110]
0000000000050fa8	cbz	w8, 0x50ff0
0000000000050fac	ldr	x0, [x25, #0x78]
0000000000050fb0	mov	x1, x21
0000000000050fb4	bl	0x55ca8 ; Objc message: -[x0 null]
0000000000050fb8	mov	x2, x0
0000000000050fbc	mov	x0, x19
0000000000050fc0	blr	x24
0000000000050fc4	ldr	x8, [x0]
0000000000050fc8	ldr	x9, [sp, #0x30]
0000000000050fcc	str	x9, [x8, #0x110]
0000000000050fd0	mov	x0, x2
0000000000050fd4	ldp	x29, x30, [sp, #0xa0]
0000000000050fd8	ldp	x20, x19, [sp, #0x90]
0000000000050fdc	ldp	x22, x21, [sp, #0x80]
0000000000050fe0	ldp	x24, x23, [sp, #0x70]
0000000000050fe4	ldp	x26, x25, [sp, #0x60]
0000000000050fe8	add	sp, sp, #0xb0
0000000000050fec	ret
0000000000050ff0	mov	x2, #0x0
0000000000050ff4	b	0x50fbc
0000000000050ff8	b	0x51000
0000000000050ffc	b	0x5101c
0000000000051000	mov	x1, x0
0000000000051004	mov	x0, x19
0000000000051008	blr	x24
000000000005100c	ldr	x8, [x0]
0000000000051010	ldr	x9, [sp, #0x50]
0000000000051014	str	x9, [x8, #0x110]
0000000000051018	b	0x51020
000000000005101c	mov	x1, x0
0000000000051020	mov	x0, x19
0000000000051024	blr	x24
0000000000051028	ldr	x8, [x0]
000000000005102c	ldr	x9, [sp, #0x30]
0000000000051030	str	x9, [x8, #0x110]
0000000000051034	mov	x0, x1
0000000000051038	bl	0x558ac ; symbol stub for: __Unwind_Resume
+[KMapAsNSDictionary createRetainedWithKMap:]:
000000000005103c	stp	x22, x21, [sp, #-0x30]!
0000000000051040	stp	x20, x19, [sp, #0x10]
0000000000051044	stp	x29, x30, [sp, #0x20]
0000000000051048	add	x29, sp, #0x20
000000000005104c	mov	x19, x2
0000000000051050	nop
0000000000051054	ldr	x0, #0x26064 ; Objc class ref: RCKKMapAsNSDictionary
0000000000051058	bl	0x55c24 ; symbol stub for: _objc_alloc
000000000005105c	nop
0000000000051060	ldr	x1, #0x25c60 ; Objc selector ref: init
0000000000051064	bl	0x55ca8 ; Objc message: +[RCKKMapAsNSDictionary init]
0000000000051068	mov	x20, x0
000000000005106c	nop
0000000000051070	ldrsw	x8, _OBJC_IVAR_$_RCKKMapAsNSDictionary.mapHolder
0000000000051074	add	x21, x0, x8
0000000000051078	adrp	x0, 41 ; 0x7a000
000000000005107c	add	x0, x0, #0x4e0
0000000000051080	ldr	x8, [x0]
0000000000051084	blr	x8
0000000000051088	ldr	x22, [x0]
000000000005108c	mov	w0, #0x1
0000000000051090	mov	w1, #0x28
0000000000051094	bl	0x55aec ; symbol stub for: _calloc
0000000000051098	ldr	x8, [x22, #0xa8]!
000000000005109c	sub	x9, x22, #0x8
00000000000510a0	stp	x8, x22, [x0]
00000000000510a4	str	x0, [x8, #0x8]
00000000000510a8	str	x0, [x22]
00000000000510ac	ldr	x8, [x22, #0x10]
00000000000510b0	add	x8, x8, #0x1
00000000000510b4	str	x8, [x22, #0x10]
00000000000510b8	stp	x9, x0, [x0, #0x18]
00000000000510bc	str	x19, [x0, #0x10]!
00000000000510c0	stp	x19, x0, [x21]
00000000000510c4	mov	x0, x20
00000000000510c8	ldp	x29, x30, [sp, #0x20]
00000000000510cc	ldp	x20, x19, [sp, #0x10]
00000000000510d0	ldp	x22, x21, [sp], #0x30
00000000000510d4	ret
-[KotlinMutableDictionary dealloc]:
00000000000510d8	sub	sp, sp, #0x60
00000000000510dc	stp	x26, x25, [sp, #0x10]
00000000000510e0	stp	x24, x23, [sp, #0x20]
00000000000510e4	stp	x22, x21, [sp, #0x30]
00000000000510e8	stp	x20, x19, [sp, #0x40]
00000000000510ec	stp	x29, x30, [sp, #0x50]
00000000000510f0	add	x29, sp, #0x50
00000000000510f4	mov	x19, x0
00000000000510f8	nop
00000000000510fc	ldrsw	x8, _OBJC_IVAR_$_RCKMutableDictionary.mapHolder
0000000000051100	add	x24, x0, x8
0000000000051104	bl	_Kotlin_initRuntimeIfNeeded
0000000000051108	adrp	x21, 41 ; 0x7a000
000000000005110c	add	x21, x21, #0x4e0
0000000000051110	ldr	x25, [x21]
0000000000051114	mov	x0, x21
0000000000051118	blr	x25
000000000005111c	ldr	x8, [x0]
0000000000051120	add	x20, x8, #0x138
0000000000051124	ldaxr	w22, [x20]
0000000000051128	stlxr	w8, wzr, [x20]
000000000005112c	cbnz	w8, 0x51124
0000000000051130	adr	x23, #0x433d9
0000000000051134	nop
0000000000051138	cmp	w22, #0x1
000000000005113c	b.ne	0x51150
0000000000051140	ldarb	w8, [x23]
0000000000051144	tbz	w8, #0x0, 0x51150
0000000000051148	mov	x0, x20
000000000005114c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051150	ldr	x8, [x24]
0000000000051154	cbz	x8, 0x51170
0000000000051158	ldr	x1, [x24, #0x8]
000000000005115c	mov	x0, x21
0000000000051160	blr	x25
0000000000051164	ldr	x8, [x0]
0000000000051168	add	x0, x8, #0x8
000000000005116c	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
0000000000051170	ldaxr	w8, [x20]
0000000000051174	stlxr	w9, w22, [x20]
0000000000051178	cbnz	w9, 0x51170
000000000005117c	cbnz	w22, 0x51198
0000000000051180	cmp	w8, #0x1
0000000000051184	b.ne	0x51198
0000000000051188	ldarb	w8, [x23]
000000000005118c	tbz	w8, #0x0, 0x51198
0000000000051190	mov	x0, x20
0000000000051194	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051198	nop
000000000005119c	ldr	x8, #0x25f7c ; Objc class ref: RCKMutableDictionary
00000000000511a0	stp	x19, x8, [sp]
00000000000511a4	nop
00000000000511a8	ldr	x1, #0x25ac8 ; Objc selector ref: dealloc
00000000000511ac	mov	x0, sp
00000000000511b0	bl	0x55cb4 ; Objc message: -[[x0 super] dealloc]
00000000000511b4	ldp	x29, x30, [sp, #0x50]
00000000000511b8	ldp	x20, x19, [sp, #0x40]
00000000000511bc	ldp	x22, x21, [sp, #0x30]
00000000000511c0	ldp	x24, x23, [sp, #0x20]
00000000000511c4	ldp	x26, x25, [sp, #0x10]
00000000000511c8	add	sp, sp, #0x60
00000000000511cc	ret
-[KotlinMutableDictionary init]:
00000000000511d0	sub	sp, sp, #0x80
00000000000511d4	stp	x26, x25, [sp, #0x30]
00000000000511d8	stp	x24, x23, [sp, #0x40]
00000000000511dc	stp	x22, x21, [sp, #0x50]
00000000000511e0	stp	x20, x19, [sp, #0x60]
00000000000511e4	stp	x29, x30, [sp, #0x70]
00000000000511e8	add	x29, sp, #0x70
00000000000511ec	nop
00000000000511f0	ldr	x8, #0x25f28 ; Objc class ref: RCKMutableDictionary
00000000000511f4	stp	x0, x8, [sp, #0x20]
00000000000511f8	nop
00000000000511fc	ldr	x1, #0x25ac4 ; Objc selector ref: init
0000000000051200	add	x0, sp, #0x20
0000000000051204	bl	0x55cb4 ; Objc message: -[[x0 super] init]
0000000000051208	mov	x20, x0
000000000005120c	cbz	x0, 0x5132c
0000000000051210	bl	_Kotlin_initRuntimeIfNeeded
0000000000051214	adrp	x21, 41 ; 0x7a000
0000000000051218	add	x21, x21, #0x4e0
000000000005121c	ldr	x25, [x21]
0000000000051220	mov	x0, x21
0000000000051224	blr	x25
0000000000051228	ldr	x24, [x0]
000000000005122c	add	x19, x24, #0x138
0000000000051230	ldaxr	w23, [x19]
0000000000051234	stlxr	w8, wzr, [x19]
0000000000051238	cbnz	w8, 0x51230
000000000005123c	cmp	w23, #0x1
0000000000051240	b.ne	0x5125c
0000000000051244	adr	x8, #0x432c5
0000000000051248	nop
000000000005124c	ldarb	w8, [x8]
0000000000051250	tbz	w8, #0x0, 0x5125c
0000000000051254	mov	x0, x19
0000000000051258	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000005125c	mov	x8, sp
0000000000051260	add	x1, x8, #0x18
0000000000051264	str	xzr, [sp, #0x18]
0000000000051268	mov	x0, x21
000000000005126c	blr	x25
0000000000051270	ldr	x9, [x0]
0000000000051274	ldr	x10, [x9, #0x110]
0000000000051278	str	x8, [x9, #0x110]
000000000005127c	mov	x8, #0x400000000
0000000000051280	stp	x10, x8, [sp, #0x8]
0000000000051284	mov	w0, #0x8
0000000000051288	bl	_Kotlin_MutableMap_createWithCapacity
000000000005128c	mov	x22, x0
0000000000051290	nop
0000000000051294	ldrsw	x8, _OBJC_IVAR_$_RCKMutableDictionary.mapHolder
0000000000051298	add	x26, x20, x8
000000000005129c	mov	x0, x21
00000000000512a0	blr	x25
00000000000512a4	mov	x21, x0
00000000000512a8	ldr	x25, [x0]
00000000000512ac	mov	w0, #0x1
00000000000512b0	mov	w1, #0x28
00000000000512b4	bl	0x55aec ; symbol stub for: _calloc
00000000000512b8	ldr	x8, [x25, #0xa8]!
00000000000512bc	sub	x9, x25, #0x8
00000000000512c0	mov	x10, x0
00000000000512c4	str	x22, [x10, #0x10]!
00000000000512c8	str	x9, [x0, #0x18]
00000000000512cc	stp	x8, x25, [x0]
00000000000512d0	str	x0, [x8, #0x8]
00000000000512d4	str	x0, [x25]
00000000000512d8	ldr	x8, [x25, #0x10]
00000000000512dc	add	x8, x8, #0x1
00000000000512e0	str	x8, [x25, #0x10]
00000000000512e4	str	x0, [x0, #0x20]
00000000000512e8	stp	x22, x10, [x26]
00000000000512ec	ldr	x8, [x21]
00000000000512f0	ldr	x9, [sp, #0x8]
00000000000512f4	str	x9, [x8, #0x110]
00000000000512f8	cbz	x24, 0x5132c
00000000000512fc	ldaxr	w8, [x19]
0000000000051300	stlxr	w9, w23, [x19]
0000000000051304	cbnz	w9, 0x512fc
0000000000051308	cbnz	w23, 0x5132c
000000000005130c	cmp	w8, #0x1
0000000000051310	b.ne	0x5132c
0000000000051314	adr	x8, #0x431f5
0000000000051318	nop
000000000005131c	ldarb	w8, [x8]
0000000000051320	tbz	w8, #0x0, 0x5132c
0000000000051324	mov	x0, x19
0000000000051328	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000005132c	mov	x0, x20
0000000000051330	ldp	x29, x30, [sp, #0x70]
0000000000051334	ldp	x20, x19, [sp, #0x60]
0000000000051338	ldp	x22, x21, [sp, #0x50]
000000000005133c	ldp	x24, x23, [sp, #0x40]
0000000000051340	ldp	x26, x25, [sp, #0x30]
0000000000051344	add	sp, sp, #0x80
0000000000051348	ret
000000000005134c	mov	x20, x0
0000000000051350	mov	x0, x21
0000000000051354	blr	x25
0000000000051358	ldr	x8, [x0]
000000000005135c	ldr	x9, [sp, #0x8]
0000000000051360	str	x9, [x8, #0x110]
0000000000051364	cbz	x24, 0x51398
0000000000051368	ldaxr	w8, [x19]
000000000005136c	stlxr	w9, w23, [x19]
0000000000051370	cbnz	w9, 0x51368
0000000000051374	cbnz	w23, 0x51398
0000000000051378	cmp	w8, #0x1
000000000005137c	b.ne	0x51398
0000000000051380	adr	x8, #0x43189
0000000000051384	nop
0000000000051388	ldarb	w8, [x8]
000000000005138c	tbz	w8, #0x0, 0x51398
0000000000051390	mov	x0, x19
0000000000051394	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051398	mov	x0, x20
000000000005139c	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary initWithCapacity:]:
00000000000513a0	sub	sp, sp, #0x80
00000000000513a4	stp	x26, x25, [sp, #0x30]
00000000000513a8	stp	x24, x23, [sp, #0x40]
00000000000513ac	stp	x22, x21, [sp, #0x50]
00000000000513b0	stp	x20, x19, [sp, #0x60]
00000000000513b4	stp	x29, x30, [sp, #0x70]
00000000000513b8	add	x29, sp, #0x70
00000000000513bc	mov	x21, x2
00000000000513c0	nop
00000000000513c4	ldr	x8, #0x25d54 ; Objc class ref: RCKMutableDictionary
00000000000513c8	stp	x0, x8, [sp, #0x20]
00000000000513cc	nop
00000000000513d0	ldr	x1, #0x258f0 ; Objc selector ref: init
00000000000513d4	add	x0, sp, #0x20
00000000000513d8	bl	0x55cb4 ; Objc message: -[[x0 super] init]
00000000000513dc	mov	x20, x0
00000000000513e0	cbz	x0, 0x51508
00000000000513e4	bl	_Kotlin_initRuntimeIfNeeded
00000000000513e8	adrp	x22, 41 ; 0x7a000
00000000000513ec	add	x22, x22, #0x4e0
00000000000513f0	ldr	x25, [x22]
00000000000513f4	mov	x0, x22
00000000000513f8	blr	x25
00000000000513fc	ldr	x24, [x0]
0000000000051400	add	x19, x24, #0x138
0000000000051404	ldaxr	w23, [x19]
0000000000051408	stlxr	w8, wzr, [x19]
000000000005140c	cbnz	w8, 0x51404
0000000000051410	cmp	w23, #0x1
0000000000051414	b.ne	0x51430
0000000000051418	adr	x8, #0x430f1
000000000005141c	nop
0000000000051420	ldarb	w8, [x8]
0000000000051424	tbz	w8, #0x0, 0x51430
0000000000051428	mov	x0, x19
000000000005142c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051430	mov	x8, sp
0000000000051434	add	x1, x8, #0x18
0000000000051438	str	xzr, [sp, #0x18]
000000000005143c	mov	x0, x22
0000000000051440	blr	x25
0000000000051444	ldr	x9, [x0]
0000000000051448	ldr	x10, [x9, #0x110]
000000000005144c	str	x8, [x9, #0x110]
0000000000051450	mov	x8, #0x400000000
0000000000051454	stp	x10, x8, [sp, #0x8]
0000000000051458	mov	w8, #0x7fffffff
000000000005145c	cmp	x21, x8
0000000000051460	csel	w0, w21, w8, lo
0000000000051464	bl	_Kotlin_MutableMap_createWithCapacity
0000000000051468	mov	x21, x0
000000000005146c	nop
0000000000051470	ldrsw	x8, _OBJC_IVAR_$_RCKMutableDictionary.mapHolder
0000000000051474	add	x26, x20, x8
0000000000051478	mov	x0, x22
000000000005147c	blr	x25
0000000000051480	mov	x22, x0
0000000000051484	ldr	x25, [x0]
0000000000051488	mov	w0, #0x1
000000000005148c	mov	w1, #0x28
0000000000051490	bl	0x55aec ; symbol stub for: _calloc
0000000000051494	ldr	x8, [x25, #0xa8]!
0000000000051498	sub	x9, x25, #0x8
000000000005149c	mov	x10, x0
00000000000514a0	str	x21, [x10, #0x10]!
00000000000514a4	str	x9, [x0, #0x18]
00000000000514a8	stp	x8, x25, [x0]
00000000000514ac	str	x0, [x8, #0x8]
00000000000514b0	str	x0, [x25]
00000000000514b4	ldr	x8, [x25, #0x10]
00000000000514b8	add	x8, x8, #0x1
00000000000514bc	str	x8, [x25, #0x10]
00000000000514c0	str	x0, [x0, #0x20]
00000000000514c4	stp	x21, x10, [x26]
00000000000514c8	ldr	x8, [x22]
00000000000514cc	ldr	x9, [sp, #0x8]
00000000000514d0	str	x9, [x8, #0x110]
00000000000514d4	cbz	x24, 0x51508
00000000000514d8	ldaxr	w8, [x19]
00000000000514dc	stlxr	w9, w23, [x19]
00000000000514e0	cbnz	w9, 0x514d8
00000000000514e4	cbnz	w23, 0x51508
00000000000514e8	cmp	w8, #0x1
00000000000514ec	b.ne	0x51508
00000000000514f0	adr	x8, #0x43019
00000000000514f4	nop
00000000000514f8	ldarb	w8, [x8]
00000000000514fc	tbz	w8, #0x0, 0x51508
0000000000051500	mov	x0, x19
0000000000051504	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051508	mov	x0, x20
000000000005150c	ldp	x29, x30, [sp, #0x70]
0000000000051510	ldp	x20, x19, [sp, #0x60]
0000000000051514	ldp	x22, x21, [sp, #0x50]
0000000000051518	ldp	x24, x23, [sp, #0x40]
000000000005151c	ldp	x26, x25, [sp, #0x30]
0000000000051520	add	sp, sp, #0x80
0000000000051524	ret
0000000000051528	mov	x20, x0
000000000005152c	mov	x0, x22
0000000000051530	blr	x25
0000000000051534	ldr	x8, [x0]
0000000000051538	ldr	x9, [sp, #0x8]
000000000005153c	str	x9, [x8, #0x110]
0000000000051540	cbz	x24, 0x51574
0000000000051544	ldaxr	w8, [x19]
0000000000051548	stlxr	w9, w23, [x19]
000000000005154c	cbnz	w9, 0x51544
0000000000051550	cbnz	w23, 0x51574
0000000000051554	cmp	w8, #0x1
0000000000051558	b.ne	0x51574
000000000005155c	adr	x8, #0x42fad
0000000000051560	nop
0000000000051564	ldarb	w8, [x8]
0000000000051568	tbz	w8, #0x0, 0x51574
000000000005156c	mov	x0, x19
0000000000051570	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051574	mov	x0, x20
0000000000051578	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary initWithKMap:]:
000000000005157c	sub	sp, sp, #0x40
0000000000051580	stp	x22, x21, [sp, #0x10]
0000000000051584	stp	x20, x19, [sp, #0x20]
0000000000051588	stp	x29, x30, [sp, #0x30]
000000000005158c	add	x29, sp, #0x30
0000000000051590	mov	x19, x2
0000000000051594	nop
0000000000051598	ldr	x8, #0x25b80 ; Objc class ref: RCKMutableDictionary
000000000005159c	stp	x0, x8, [sp]
00000000000515a0	nop
00000000000515a4	ldr	x1, #0x2571c ; Objc selector ref: init
00000000000515a8	mov	x0, sp
00000000000515ac	bl	0x55cb4 ; Objc message: -[[x0 super] init]
00000000000515b0	mov	x20, x0
00000000000515b4	cbz	x0, 0x51610
00000000000515b8	nop
00000000000515bc	ldrsw	x8, _OBJC_IVAR_$_RCKMutableDictionary.mapHolder
00000000000515c0	add	x21, x20, x8
00000000000515c4	adrp	x0, 41 ; 0x7a000
00000000000515c8	add	x0, x0, #0x4e0
00000000000515cc	ldr	x8, [x0]
00000000000515d0	blr	x8
00000000000515d4	ldr	x22, [x0]
00000000000515d8	mov	w0, #0x1
00000000000515dc	mov	w1, #0x28
00000000000515e0	bl	0x55aec ; symbol stub for: _calloc
00000000000515e4	ldr	x8, [x22, #0xa8]!
00000000000515e8	sub	x9, x22, #0x8
00000000000515ec	stp	x8, x22, [x0]
00000000000515f0	str	x0, [x8, #0x8]
00000000000515f4	str	x0, [x22]
00000000000515f8	ldr	x8, [x22, #0x10]
00000000000515fc	add	x8, x8, #0x1
0000000000051600	str	x8, [x22, #0x10]
0000000000051604	stp	x9, x0, [x0, #0x18]
0000000000051608	str	x19, [x0, #0x10]!
000000000005160c	stp	x19, x0, [x21]
0000000000051610	mov	x0, x20
0000000000051614	ldp	x29, x30, [sp, #0x30]
0000000000051618	ldp	x20, x19, [sp, #0x20]
000000000005161c	ldp	x22, x21, [sp, #0x10]
0000000000051620	add	sp, sp, #0x40
0000000000051624	ret
-[KotlinMutableDictionary toKotlin:]:
0000000000051628	stp	x22, x21, [sp, #-0x30]!
000000000005162c	stp	x20, x19, [sp, #0x10]
0000000000051630	stp	x29, x30, [sp, #0x20]
0000000000051634	add	x29, sp, #0x20
0000000000051638	mov	x19, x2
000000000005163c	mov	x20, x0
0000000000051640	nop
0000000000051644	ldrsw	x21, _OBJC_IVAR_$_RCKMutableDictionary.mapHolder
0000000000051648	bl	_Kotlin_initRuntimeIfNeeded
000000000005164c	ldr	x0, [x20, x21]
0000000000051650	str	x0, [x19]
0000000000051654	ldp	x29, x30, [sp, #0x20]
0000000000051658	ldp	x20, x19, [sp, #0x10]
000000000005165c	ldp	x22, x21, [sp], #0x30
0000000000051660	ret
-[KotlinMutableDictionary count]:
0000000000051664	stp	x22, x21, [sp, #-0x30]!
0000000000051668	stp	x20, x19, [sp, #0x10]
000000000005166c	stp	x29, x30, [sp, #0x20]
0000000000051670	add	x29, sp, #0x20
0000000000051674	mov	x20, x0
0000000000051678	bl	_Kotlin_initRuntimeIfNeeded
000000000005167c	adrp	x0, 41 ; 0x7a000
0000000000051680	add	x0, x0, #0x4e0
0000000000051684	ldr	x8, [x0]
0000000000051688	blr	x8
000000000005168c	ldr	x8, [x0]
0000000000051690	add	x19, x8, #0x138
0000000000051694	ldaxr	w21, [x19]
0000000000051698	stlxr	w8, wzr, [x19]
000000000005169c	cbnz	w8, 0x51694
00000000000516a0	cmp	w21, #0x1
00000000000516a4	b.ne	0x516c0
00000000000516a8	adr	x8, #0x42e61
00000000000516ac	nop
00000000000516b0	ldarb	w8, [x8]
00000000000516b4	tbz	w8, #0x0, 0x516c0
00000000000516b8	mov	x0, x19
00000000000516bc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000516c0	nop
00000000000516c4	ldrsw	x22, _OBJC_IVAR_$_RCKMutableDictionary.mapHolder
00000000000516c8	bl	_Kotlin_initRuntimeIfNeeded
00000000000516cc	ldr	x0, [x20, x22]
00000000000516d0	bl	_Kotlin_Map_getSize
00000000000516d4	mov	x20, x0
00000000000516d8	ldaxr	w8, [x19]
00000000000516dc	stlxr	w9, w21, [x19]
00000000000516e0	cbnz	w9, 0x516d8
00000000000516e4	cbnz	w21, 0x51708
00000000000516e8	cmp	w8, #0x1
00000000000516ec	b.ne	0x51708
00000000000516f0	adr	x8, #0x42e19
00000000000516f4	nop
00000000000516f8	ldarb	w8, [x8]
00000000000516fc	tbz	w8, #0x0, 0x51708
0000000000051700	mov	x0, x19
0000000000051704	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051708	sxtw	x0, w20
000000000005170c	ldp	x29, x30, [sp, #0x20]
0000000000051710	ldp	x20, x19, [sp, #0x10]
0000000000051714	ldp	x22, x21, [sp], #0x30
0000000000051718	ret
000000000005171c	mov	x20, x0
0000000000051720	ldaxr	w8, [x19]
0000000000051724	stlxr	w9, w21, [x19]
0000000000051728	cbnz	w9, 0x51720
000000000005172c	cbnz	w21, 0x51750
0000000000051730	cmp	w8, #0x1
0000000000051734	b.ne	0x51750
0000000000051738	adr	x8, #0x42dd1
000000000005173c	nop
0000000000051740	ldarb	w8, [x8]
0000000000051744	tbz	w8, #0x0, 0x51750
0000000000051748	mov	x0, x19
000000000005174c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051750	mov	x0, x20
0000000000051754	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary objectForKey:]:
0000000000051758	stp	x24, x23, [sp, #-0x40]!
000000000005175c	stp	x22, x21, [sp, #0x10]
0000000000051760	stp	x20, x19, [sp, #0x20]
0000000000051764	stp	x29, x30, [sp, #0x30]
0000000000051768	add	x29, sp, #0x30
000000000005176c	mov	x20, x2
0000000000051770	mov	x21, x0
0000000000051774	bl	_Kotlin_initRuntimeIfNeeded
0000000000051778	adrp	x0, 41 ; 0x7a000
000000000005177c	add	x0, x0, #0x4e0
0000000000051780	ldr	x8, [x0]
0000000000051784	blr	x8
0000000000051788	ldr	x8, [x0]
000000000005178c	add	x19, x8, #0x138
0000000000051790	ldaxr	w22, [x19]
0000000000051794	stlxr	w8, wzr, [x19]
0000000000051798	cbnz	w8, 0x51790
000000000005179c	cmp	w22, #0x1
00000000000517a0	b.ne	0x517bc
00000000000517a4	adr	x8, #0x42d65
00000000000517a8	nop
00000000000517ac	ldarb	w8, [x8]
00000000000517b0	tbz	w8, #0x0, 0x517bc
00000000000517b4	mov	x0, x19
00000000000517b8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000517bc	nop
00000000000517c0	ldrsw	x23, _OBJC_IVAR_$_RCKMutableDictionary.mapHolder
00000000000517c4	bl	_Kotlin_initRuntimeIfNeeded
00000000000517c8	ldr	x0, [x21, x23]
00000000000517cc	mov	x1, x20
00000000000517d0	bl	__ZL8KMap_getP9ObjHeaderP11objc_object
00000000000517d4	mov	x20, x0
00000000000517d8	ldaxr	w8, [x19]
00000000000517dc	stlxr	w9, w22, [x19]
00000000000517e0	cbnz	w9, 0x517d8
00000000000517e4	cbnz	w22, 0x51808
00000000000517e8	cmp	w8, #0x1
00000000000517ec	b.ne	0x51808
00000000000517f0	adr	x8, #0x42d19
00000000000517f4	nop
00000000000517f8	ldarb	w8, [x8]
00000000000517fc	tbz	w8, #0x0, 0x51808
0000000000051800	mov	x0, x19
0000000000051804	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051808	mov	x0, x20
000000000005180c	ldp	x29, x30, [sp, #0x30]
0000000000051810	ldp	x20, x19, [sp, #0x20]
0000000000051814	ldp	x22, x21, [sp, #0x10]
0000000000051818	ldp	x24, x23, [sp], #0x40
000000000005181c	ret
0000000000051820	mov	x20, x0
0000000000051824	ldaxr	w8, [x19]
0000000000051828	stlxr	w9, w22, [x19]
000000000005182c	cbnz	w9, 0x51824
0000000000051830	cbnz	w22, 0x51854
0000000000051834	cmp	w8, #0x1
0000000000051838	b.ne	0x51854
000000000005183c	adr	x8, #0x42ccd
0000000000051840	nop
0000000000051844	ldarb	w8, [x8]
0000000000051848	tbz	w8, #0x0, 0x51854
000000000005184c	mov	x0, x19
0000000000051850	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051854	mov	x0, x20
0000000000051858	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary keyEnumerator]:
000000000005185c	sub	sp, sp, #0x70
0000000000051860	stp	x26, x25, [sp, #0x20]
0000000000051864	stp	x24, x23, [sp, #0x30]
0000000000051868	stp	x22, x21, [sp, #0x40]
000000000005186c	stp	x20, x19, [sp, #0x50]
0000000000051870	stp	x29, x30, [sp, #0x60]
0000000000051874	add	x29, sp, #0x60
0000000000051878	mov	x21, x0
000000000005187c	bl	_Kotlin_initRuntimeIfNeeded
0000000000051880	adrp	x20, 41 ; 0x7a000
0000000000051884	add	x20, x20, #0x4e0
0000000000051888	ldr	x25, [x20]
000000000005188c	mov	x0, x20
0000000000051890	blr	x25
0000000000051894	ldr	x8, [x0]
0000000000051898	add	x19, x8, #0x138
000000000005189c	ldaxr	w24, [x19]
00000000000518a0	stlxr	w8, wzr, [x19]
00000000000518a4	cbnz	w8, 0x5189c
00000000000518a8	cmp	w24, #0x1
00000000000518ac	b.ne	0x518c8
00000000000518b0	adr	x8, #0x42c59
00000000000518b4	nop
00000000000518b8	ldarb	w8, [x8]
00000000000518bc	tbz	w8, #0x0, 0x518c8
00000000000518c0	mov	x0, x19
00000000000518c4	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000518c8	mov	x8, sp
00000000000518cc	add	x23, x8, #0x18
00000000000518d0	str	xzr, [sp, #0x18]
00000000000518d4	mov	x0, x20
00000000000518d8	blr	x25
00000000000518dc	ldr	x9, [x0]
00000000000518e0	ldr	x10, [x9, #0x110]
00000000000518e4	str	x8, [x9, #0x110]
00000000000518e8	mov	x8, #0x400000000
00000000000518ec	stp	x10, x8, [sp, #0x8]
00000000000518f0	nop
00000000000518f4	ldr	x22, #0x257a4 ; Objc class ref: RCKKIteratorAsNSEnumerator
00000000000518f8	nop
00000000000518fc	ldrsw	x26, _OBJC_IVAR_$_RCKMutableDictionary.mapHolder
0000000000051900	bl	_Kotlin_initRuntimeIfNeeded
0000000000051904	ldr	x0, [x21, x26]
0000000000051908	mov	x1, x23
000000000005190c	bl	_Kotlin_Map_keyIterator
0000000000051910	mov	x2, x0
0000000000051914	nop
0000000000051918	ldr	x1, #0x25350 ; Objc selector ref: createWithKIterator:
000000000005191c	mov	x0, x22
0000000000051920	bl	0x55ca8 ; Objc message: +[RCKKIteratorAsNSEnumerator createWithKIterator:]
0000000000051924	mov	x21, x0
0000000000051928	mov	x0, x20
000000000005192c	blr	x25
0000000000051930	ldr	x8, [x0]
0000000000051934	ldr	x9, [sp, #0x8]
0000000000051938	str	x9, [x8, #0x110]
000000000005193c	ldaxr	w8, [x19]
0000000000051940	stlxr	w9, w24, [x19]
0000000000051944	cbnz	w9, 0x5193c
0000000000051948	cbnz	w24, 0x5196c
000000000005194c	cmp	w8, #0x1
0000000000051950	b.ne	0x5196c
0000000000051954	adr	x8, #0x42bb5
0000000000051958	nop
000000000005195c	ldarb	w8, [x8]
0000000000051960	tbz	w8, #0x0, 0x5196c
0000000000051964	mov	x0, x19
0000000000051968	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
000000000005196c	mov	x0, x21
0000000000051970	ldp	x29, x30, [sp, #0x60]
0000000000051974	ldp	x20, x19, [sp, #0x50]
0000000000051978	ldp	x22, x21, [sp, #0x40]
000000000005197c	ldp	x24, x23, [sp, #0x30]
0000000000051980	ldp	x26, x25, [sp, #0x20]
0000000000051984	add	sp, sp, #0x70
0000000000051988	ret
000000000005198c	mov	x21, x0
0000000000051990	mov	x0, x20
0000000000051994	blr	x25
0000000000051998	ldr	x8, [x0]
000000000005199c	ldr	x9, [sp, #0x8]
00000000000519a0	str	x9, [x8, #0x110]
00000000000519a4	ldaxr	w8, [x19]
00000000000519a8	stlxr	w9, w24, [x19]
00000000000519ac	cbnz	w9, 0x519a4
00000000000519b0	cbnz	w24, 0x519d4
00000000000519b4	cmp	w8, #0x1
00000000000519b8	b.ne	0x519d4
00000000000519bc	adr	x8, #0x42b4d
00000000000519c0	nop
00000000000519c4	ldarb	w8, [x8]
00000000000519c8	tbz	w8, #0x0, 0x519d4
00000000000519cc	mov	x0, x19
00000000000519d0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000519d4	mov	x0, x21
00000000000519d8	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary setObject:forKey:]:
00000000000519dc	sub	sp, sp, #0xc0
00000000000519e0	stp	x28, x27, [sp, #0x60]
00000000000519e4	stp	x26, x25, [sp, #0x70]
00000000000519e8	stp	x24, x23, [sp, #0x80]
00000000000519ec	stp	x22, x21, [sp, #0x90]
00000000000519f0	stp	x20, x19, [sp, #0xa0]
00000000000519f4	stp	x29, x30, [sp, #0xb0]
00000000000519f8	add	x29, sp, #0xb0
00000000000519fc	mov	x24, x2
0000000000051a00	mov	x23, x0
0000000000051a04	nop
0000000000051a08	ldr	x1, #0x25228 ; Objc selector ref: copyWithZone:
0000000000051a0c	mov	x0, x3
0000000000051a10	mov	x2, #0x0
0000000000051a14	bl	0x55ca8 ; Objc message: -[x0 copyWithZone:]
0000000000051a18	mov	x20, x0
0000000000051a1c	bl	_Kotlin_initRuntimeIfNeeded
0000000000051a20	adrp	x21, 41 ; 0x7a000
0000000000051a24	add	x21, x21, #0x4e0
0000000000051a28	ldr	x27, [x21]
0000000000051a2c	mov	x0, x21
0000000000051a30	blr	x27
0000000000051a34	ldr	x8, [x0]
0000000000051a38	add	x19, x8, #0x138
0000000000051a3c	ldaxr	w26, [x19]
0000000000051a40	stlxr	w8, wzr, [x19]
0000000000051a44	cbnz	w8, 0x51a3c
0000000000051a48	cmp	w26, #0x1
0000000000051a4c	b.ne	0x51a68
0000000000051a50	adr	x8, #0x42ab9
0000000000051a54	nop
0000000000051a58	ldarb	w8, [x8]
0000000000051a5c	tbz	w8, #0x0, 0x51a68
0000000000051a60	mov	x0, x19
0000000000051a64	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051a68	add	x22, sp, #0x20
0000000000051a6c	str	xzr, [sp, #0x38]
0000000000051a70	mov	x0, x21
0000000000051a74	blr	x27
0000000000051a78	ldr	x8, [x0]
0000000000051a7c	ldr	x9, [x8, #0x110]
0000000000051a80	mov	x10, #0x400000000
0000000000051a84	stp	x9, x10, [sp, #0x28]
0000000000051a88	mov	x28, sp
0000000000051a8c	stp	x10, xzr, [sp, #0x10]
0000000000051a90	str	x28, [x8, #0x110]
0000000000051a94	str	x22, [sp, #0x8]
0000000000051a98	adrp	x21, 38 ; 0x77000
0000000000051a9c	ldr	x0, [x21, #0x78] ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000051aa0	nop
0000000000051aa4	ldr	x25, #0x2532c ; Objc selector ref: null
0000000000051aa8	mov	x1, x25
0000000000051aac	bl	0x55ca8 ; Objc message: +[NSNull null]
0000000000051ab0	cmp	x20, x0
0000000000051ab4	b.eq	0x51ad8
0000000000051ab8	cbz	x20, 0x51ad8
0000000000051abc	add	x2, x22, #0x18
0000000000051ac0	nop
0000000000051ac4	ldr	x1, #0x42c94
0000000000051ac8	mov	x0, x20
0000000000051acc	bl	0x55ca8 ; Objc message: -[x0 null]
0000000000051ad0	mov	x22, x0
0000000000051ad4	b	0x51ae0
0000000000051ad8	mov	x22, #0x0
0000000000051adc	str	xzr, [sp, #0x38]
0000000000051ae0	ldr	x0, [x21, #0x78]
0000000000051ae4	mov	x1, x25
0000000000051ae8	bl	0x55ca8 ; Objc message: -[x0 null]
0000000000051aec	cmp	x0, x24
0000000000051af0	b.eq	0x51b14
0000000000051af4	cbz	x24, 0x51b14
0000000000051af8	add	x2, x28, #0x18
0000000000051afc	nop
0000000000051b00	ldr	x1, #0x42c58
0000000000051b04	mov	x0, x24
0000000000051b08	bl	0x55ca8 ; Objc message: -[x0 null]
0000000000051b0c	mov	x24, x0
0000000000051b10	b	0x51b1c
0000000000051b14	mov	x24, #0x0
0000000000051b18	str	xzr, [sp, #0x18]
0000000000051b1c	nop
0000000000051b20	ldrsw	x21, _OBJC_IVAR_$_RCKMutableDictionary.mapHolder
0000000000051b24	bl	_Kotlin_initRuntimeIfNeeded
0000000000051b28	ldr	x23, [x23, x21]
0000000000051b2c	movi.16b	v0, #0x0
0000000000051b30	stp	q0, q0, [sp, #0x40]
0000000000051b34	add	x8, sp, #0x40
0000000000051b38	add	x25, x8, #0x18
0000000000051b3c	adrp	x21, 41 ; 0x7a000
0000000000051b40	add	x21, x21, #0x4e0
0000000000051b44	mov	x0, x21
0000000000051b48	blr	x27
0000000000051b4c	ldr	x9, [x0]
0000000000051b50	ldr	x10, [x9, #0x110]
0000000000051b54	str	x8, [x9, #0x110]
0000000000051b58	mov	x8, #0x400000000
0000000000051b5c	stp	x10, x8, [sp, #0x48]
0000000000051b60	adr	x28, #0x429a9
0000000000051b64	nop
0000000000051b68	ldarb	w8, [x28]
0000000000051b6c	tbz	w8, #0x0, 0x51b74
0000000000051b70	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000051b74	ldr	x8, [x23]
0000000000051b78	and	x8, x8, #0xfffffffffffffffc
0000000000051b7c	ldr	x8, [x8]
0000000000051b80	ldr	w9, [x8, #0x3c]
0000000000051b84	ldr	x8, [x8, #0x40]
0000000000051b88	tbnz	w9, #0x1f, 0x51b98
0000000000051b8c	mov	w10, #0xb0
0000000000051b90	and	x9, x9, x10
0000000000051b94	b	0x51c1c
0000000000051b98	neg	w10, w9
0000000000051b9c	mvn	w9, w9
0000000000051ba0	cmp	w10, #0x9
0000000000051ba4	b.ge	0x51bdc
0000000000051ba8	cmp	w10, #0x2
0000000000051bac	b.lt	0x51c10
0000000000051bb0	mov	x10, #0x0
0000000000051bb4	mov	x11, x8
0000000000051bb8	ldr	w12, [x11]
0000000000051bbc	cmp	w12, #0xaf
0000000000051bc0	b.gt	0x51c18
0000000000051bc4	add	x10, x10, #0x1
0000000000051bc8	add	x11, x11, #0x10
0000000000051bcc	cmp	x9, x10
0000000000051bd0	b.ne	0x51bb8
0000000000051bd4	mov	x10, x9
0000000000051bd8	b	0x51c18
0000000000051bdc	mov	w10, #0x0
0000000000051be0	add	w11, w9, w10
0000000000051be4	cmp	w11, #0x0
0000000000051be8	cinc	w11, w11, lt
0000000000051bec	asr	w11, w11, #1
0000000000051bf0	sbfiz	x12, x11, #4, #32
0000000000051bf4	ldr	w12, [x8, x12]
0000000000051bf8	cmp	w12, #0xb0
0000000000051bfc	csinc	w10, w10, w11, ge
0000000000051c00	csel	w9, w9, w11, lt
0000000000051c04	cmp	w10, w9
0000000000051c08	b.lt	0x51be0
0000000000051c0c	b	0x51c18
0000000000051c10	mov	w10, #0x0
0000000000051c14	b	0x51c18
0000000000051c18	sxtw	x9, w10
0000000000051c1c	add	x8, x8, x9, lsl #4
0000000000051c20	ldr	x8, [x8, #0x8]
0000000000051c24	ldr	x8, [x8, #0x20]
0000000000051c28	mov	x0, x23
0000000000051c2c	mov	x1, x22
0000000000051c30	mov	x2, x24
0000000000051c34	mov	x3, x25
0000000000051c38	blr	x8
0000000000051c3c	mov	x0, x21
0000000000051c40	blr	x27
0000000000051c44	ldr	x8, [x0]
0000000000051c48	ldr	x9, [sp, #0x28]
0000000000051c4c	str	x9, [x8, #0x110]
0000000000051c50	ldaxr	w8, [x19]
0000000000051c54	stlxr	w9, w26, [x19]
0000000000051c58	cbnz	w9, 0x51c50
0000000000051c5c	cbnz	w26, 0x51c78
0000000000051c60	cmp	w8, #0x1
0000000000051c64	b.ne	0x51c78
0000000000051c68	ldarb	w8, [x28]
0000000000051c6c	tbz	w8, #0x0, 0x51c78
0000000000051c70	mov	x0, x19
0000000000051c74	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051c78	mov	x0, x20
0000000000051c7c	bl	0x55ccc ; symbol stub for: _objc_release
0000000000051c80	ldp	x29, x30, [sp, #0xb0]
0000000000051c84	ldp	x20, x19, [sp, #0xa0]
0000000000051c88	ldp	x22, x21, [sp, #0x90]
0000000000051c8c	ldp	x24, x23, [sp, #0x80]
0000000000051c90	ldp	x26, x25, [sp, #0x70]
0000000000051c94	ldp	x28, x27, [sp, #0x60]
0000000000051c98	add	sp, sp, #0xc0
0000000000051c9c	ret
0000000000051ca0	mov	x20, x0
0000000000051ca4	mov	x0, x21
0000000000051ca8	blr	x27
0000000000051cac	ldr	x8, [x0]
0000000000051cb0	ldr	x9, [sp, #0x48]
0000000000051cb4	str	x9, [x8, #0x110]
0000000000051cb8	b	0x51cc4
0000000000051cbc	b	0x51cc0
0000000000051cc0	mov	x20, x0
0000000000051cc4	adrp	x0, 41 ; 0x7a000
0000000000051cc8	add	x0, x0, #0x4e0
0000000000051ccc	blr	x27
0000000000051cd0	ldr	x8, [x0]
0000000000051cd4	ldr	x9, [sp, #0x28]
0000000000051cd8	str	x9, [x8, #0x110]
0000000000051cdc	ldaxr	w8, [x19]
0000000000051ce0	stlxr	w9, w26, [x19]
0000000000051ce4	cbnz	w9, 0x51cdc
0000000000051ce8	cbnz	w26, 0x51d0c
0000000000051cec	cmp	w8, #0x1
0000000000051cf0	b.ne	0x51d0c
0000000000051cf4	adr	x8, #0x42815
0000000000051cf8	nop
0000000000051cfc	ldarb	w8, [x8]
0000000000051d00	tbz	w8, #0x0, 0x51d0c
0000000000051d04	mov	x0, x19
0000000000051d08	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051d0c	mov	x0, x20
0000000000051d10	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KotlinMutableDictionary removeObjectForKey:]:
0000000000051d14	sub	sp, sp, #0x90
0000000000051d18	stp	x26, x25, [sp, #0x40]
0000000000051d1c	stp	x24, x23, [sp, #0x50]
0000000000051d20	stp	x22, x21, [sp, #0x60]
0000000000051d24	stp	x20, x19, [sp, #0x70]
0000000000051d28	stp	x29, x30, [sp, #0x80]
0000000000051d2c	add	x29, sp, #0x80
0000000000051d30	mov	x21, x2
0000000000051d34	mov	x22, x0
0000000000051d38	bl	_Kotlin_initRuntimeIfNeeded
0000000000051d3c	adrp	x20, 41 ; 0x7a000
0000000000051d40	add	x20, x20, #0x4e0
0000000000051d44	ldr	x25, [x20]
0000000000051d48	mov	x0, x20
0000000000051d4c	blr	x25
0000000000051d50	ldr	x8, [x0]
0000000000051d54	add	x19, x8, #0x138
0000000000051d58	ldaxr	w24, [x19]
0000000000051d5c	stlxr	w8, wzr, [x19]
0000000000051d60	cbnz	w8, 0x51d58
0000000000051d64	cmp	w24, #0x1
0000000000051d68	b.ne	0x51d84
0000000000051d6c	adr	x8, #0x4279d
0000000000051d70	nop
0000000000051d74	ldarb	w8, [x8]
0000000000051d78	tbz	w8, #0x0, 0x51d84
0000000000051d7c	mov	x0, x19
0000000000051d80	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051d84	mov	x23, sp
0000000000051d88	str	xzr, [sp, #0x18]
0000000000051d8c	mov	x0, x20
0000000000051d90	blr	x25
0000000000051d94	ldr	x8, [x0]
0000000000051d98	ldr	x9, [x8, #0x110]
0000000000051d9c	str	x23, [x8, #0x110]
0000000000051da0	mov	x8, #0x400000000
0000000000051da4	stp	x9, x8, [sp, #0x8]
0000000000051da8	nop
0000000000051dac	ldr	x0, #0x252cc ; Objc class ref: _OBJC_CLASS_$_NSNull
0000000000051db0	nop
0000000000051db4	ldr	x1, #0x2501c ; Objc selector ref: null
0000000000051db8	bl	0x55ca8 ; Objc message: +[NSNull null]
0000000000051dbc	cmp	x0, x21
0000000000051dc0	ccmp	x21, #0x0, #0x4, ne
0000000000051dc4	b.ne	0x51dd4
0000000000051dc8	mov	x21, #0x0
0000000000051dcc	str	xzr, [sp, #0x18]
0000000000051dd0	b	0x51dec
0000000000051dd4	add	x2, x23, #0x18
0000000000051dd8	nop
0000000000051ddc	ldr	x1, #0x4297c
0000000000051de0	mov	x0, x21
0000000000051de4	bl	0x55ca8 ; Objc message: -[x0 null]
0000000000051de8	mov	x21, x0
0000000000051dec	nop
0000000000051df0	ldrsw	x23, _OBJC_IVAR_$_RCKMutableDictionary.mapHolder
0000000000051df4	bl	_Kotlin_initRuntimeIfNeeded
0000000000051df8	ldr	x22, [x22, x23]
0000000000051dfc	movi.16b	v0, #0x0
0000000000051e00	stp	q0, q0, [sp, #0x20]
0000000000051e04	add	x8, sp, #0x20
0000000000051e08	add	x23, x8, #0x18
0000000000051e0c	mov	x0, x20
0000000000051e10	blr	x25
0000000000051e14	ldr	x9, [x0]
0000000000051e18	ldr	x10, [x9, #0x110]
0000000000051e1c	str	x8, [x9, #0x110]
0000000000051e20	mov	x8, #0x400000000
0000000000051e24	stp	x10, x8, [sp, #0x28]
0000000000051e28	adr	x26, #0x426e1
0000000000051e2c	nop
0000000000051e30	ldarb	w8, [x26]
0000000000051e34	tbz	w8, #0x0, 0x51e3c
0000000000051e38	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000051e3c	ldr	x8, [x22]
0000000000051e40	and	x8, x8, #0xfffffffffffffffc
0000000000051e44	ldr	x8, [x8]
0000000000051e48	ldr	w9, [x8, #0x3c]
0000000000051e4c	ldr	x8, [x8, #0x40]
0000000000051e50	tbnz	w9, #0x1f, 0x51e60
0000000000051e54	mov	w10, #0xb0
0000000000051e58	and	x9, x9, x10
0000000000051e5c	b	0x51ee4
0000000000051e60	neg	w10, w9
0000000000051e64	mvn	w9, w9
0000000000051e68	cmp	w10, #0x9
0000000000051e6c	b.ge	0x51ea4
0000000000051e70	cmp	w10, #0x2
0000000000051e74	b.lt	0x51ed8
0000000000051e78	mov	x10, #0x0
0000000000051e7c	mov	x11, x8
0000000000051e80	ldr	w12, [x11]
0000000000051e84	cmp	w12, #0xaf
0000000000051e88	b.gt	0x51ee0
0000000000051e8c	add	x10, x10, #0x1
0000000000051e90	add	x11, x11, #0x10
0000000000051e94	cmp	x9, x10
0000000000051e98	b.ne	0x51e80
0000000000051e9c	mov	x10, x9
0000000000051ea0	b	0x51ee0
0000000000051ea4	mov	w10, #0x0
0000000000051ea8	add	w11, w9, w10
0000000000051eac	cmp	w11, #0x0
0000000000051eb0	cinc	w11, w11, lt
0000000000051eb4	asr	w11, w11, #1
0000000000051eb8	sbfiz	x12, x11, #4, #32
0000000000051ebc	ldr	w12, [x8, x12]
0000000000051ec0	cmp	w12, #0xb0
0000000000051ec4	csinc	w10, w10, w11, ge
0000000000051ec8	csel	w9, w9, w11, lt
0000000000051ecc	cmp	w10, w9
0000000000051ed0	b.lt	0x51ea8
0000000000051ed4	b	0x51ee0
0000000000051ed8	mov	w10, #0x0
0000000000051edc	b	0x51ee0
0000000000051ee0	sxtw	x9, w10
0000000000051ee4	add	x8, x8, x9, lsl #4
0000000000051ee8	ldr	x8, [x8, #0x8]
0000000000051eec	ldr	x8, [x8, #0x30]
0000000000051ef0	mov	x0, x22
0000000000051ef4	mov	x1, x21
0000000000051ef8	mov	x2, x23
0000000000051efc	blr	x8
0000000000051f00	mov	x0, x20
0000000000051f04	blr	x25
0000000000051f08	ldr	x8, [x0]
0000000000051f0c	ldr	x9, [sp, #0x8]
0000000000051f10	str	x9, [x8, #0x110]
0000000000051f14	ldaxr	w8, [x19]
0000000000051f18	stlxr	w9, w24, [x19]
0000000000051f1c	cbnz	w9, 0x51f14
0000000000051f20	cbnz	w24, 0x51f3c
0000000000051f24	cmp	w8, #0x1
0000000000051f28	b.ne	0x51f3c
0000000000051f2c	ldarb	w8, [x26]
0000000000051f30	tbz	w8, #0x0, 0x51f3c
0000000000051f34	mov	x0, x19
0000000000051f38	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051f3c	ldp	x29, x30, [sp, #0x80]
0000000000051f40	ldp	x20, x19, [sp, #0x70]
0000000000051f44	ldp	x22, x21, [sp, #0x60]
0000000000051f48	ldp	x24, x23, [sp, #0x50]
0000000000051f4c	ldp	x26, x25, [sp, #0x40]
0000000000051f50	add	sp, sp, #0x90
0000000000051f54	ret
0000000000051f58	mov	x21, x0
0000000000051f5c	mov	x0, x20
0000000000051f60	blr	x25
0000000000051f64	ldr	x8, [x0]
0000000000051f68	ldr	x9, [sp, #0x28]
0000000000051f6c	str	x9, [x8, #0x110]
0000000000051f70	b	0x51f84
0000000000051f74	mov	x21, x0
0000000000051f78	mov	x0, x20
0000000000051f7c	blr	x25
0000000000051f80	ldr	x8, [x0]
0000000000051f84	ldr	x9, [sp, #0x8]
0000000000051f88	str	x9, [x8, #0x110]
0000000000051f8c	ldaxr	w8, [x19]
0000000000051f90	stlxr	w9, w24, [x19]
0000000000051f94	cbnz	w9, 0x51f8c
0000000000051f98	cbnz	w24, 0x51fbc
0000000000051f9c	cmp	w8, #0x1
0000000000051fa0	b.ne	0x51fbc
0000000000051fa4	adr	x8, #0x42565
0000000000051fa8	nop
0000000000051fac	ldarb	w8, [x8]
0000000000051fb0	tbz	w8, #0x0, 0x51fbc
0000000000051fb4	mov	x0, x19
0000000000051fb8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000051fbc	mov	x0, x21
0000000000051fc0	bl	0x558ac ; symbol stub for: __Unwind_Resume
-[KotlinUShort getValue:]:
0000000000051fc4	nop
0000000000051fc8	ldrsw	x8, _OBJC_IVAR_$_RCKUShort.value_
0000000000051fcc	ldrh	w8, [x0, x8]
0000000000051fd0	strh	w8, [x2]
0000000000051fd4	ret
-[KotlinUShort initWithUnsignedShort:]:
0000000000051fd8	sub	sp, sp, #0x30
0000000000051fdc	stp	x20, x19, [sp, #0x10]
0000000000051fe0	stp	x29, x30, [sp, #0x20]
0000000000051fe4	add	x29, sp, #0x20
0000000000051fe8	mov	x19, x2
0000000000051fec	nop
0000000000051ff0	ldr	x8, #0x25188 ; Objc class ref: RCKUShort
0000000000051ff4	stp	x0, x8, [sp]
0000000000051ff8	nop
0000000000051ffc	ldr	x1, #0x24cc4 ; Objc selector ref: init
0000000000052000	mov	x0, sp
0000000000052004	bl	0x55cb4 ; Objc message: -[[x0 super] init]
0000000000052008	nop
000000000005200c	ldrsw	x8, _OBJC_IVAR_$_RCKUShort.value_
0000000000052010	strh	w19, [x0, x8]
0000000000052014	ldp	x29, x30, [sp, #0x20]
0000000000052018	ldp	x20, x19, [sp, #0x10]
000000000005201c	add	sp, sp, #0x30
0000000000052020	ret
-[KotlinUShort initWithInteger:]:
0000000000052024	sub	sp, sp, #0x30
0000000000052028	stp	x20, x19, [sp, #0x10]
000000000005202c	stp	x29, x30, [sp, #0x20]
0000000000052030	add	x29, sp, #0x20
0000000000052034	mov	x19, x2
0000000000052038	nop
000000000005203c	ldr	x8, #0x2513c ; Objc class ref: RCKUShort
0000000000052040	stp	x0, x8, [sp]
0000000000052044	nop
0000000000052048	ldr	x1, #0x24c78 ; Objc selector ref: init
000000000005204c	mov	x0, sp
0000000000052050	bl	0x55cb4 ; Objc message: -[[x0 super] init]
0000000000052054	nop
0000000000052058	ldrsw	x8, _OBJC_IVAR_$_RCKUShort.value_
000000000005205c	strh	w19, [x0, x8]
0000000000052060	ldp	x29, x30, [sp, #0x20]
0000000000052064	ldp	x20, x19, [sp, #0x10]
0000000000052068	add	sp, sp, #0x30
000000000005206c	ret
-[KotlinUShort unsignedShortValue]:
0000000000052070	nop
0000000000052074	ldrsw	x8, _OBJC_IVAR_$_RCKUShort.value_
0000000000052078	ldrh	w0, [x0, x8]
000000000005207c	ret
-[KotlinUShort objCType]:
0000000000052080	adr	x0, #0xb42a ; literal pool for: "S"
0000000000052084	nop
0000000000052088	ret
-[KotlinUShort toKotlin:]:
000000000005208c	mov	x1, x2
0000000000052090	nop
0000000000052094	ldrsw	x8, _OBJC_IVAR_$_RCKUShort.value_
0000000000052098	ldrh	w0, [x0, x8]
000000000005209c	b	_Kotlin_boxUShort
-[KotlinULong getValue:]:
00000000000520a0	nop
00000000000520a4	ldrsw	x8, _OBJC_IVAR_$_RCKULong.value_
00000000000520a8	ldr	x8, [x0, x8]
00000000000520ac	str	x8, [x2]
00000000000520b0	ret
-[KotlinULong initWithUnsignedLongLong:]:
00000000000520b4	sub	sp, sp, #0x30
00000000000520b8	stp	x20, x19, [sp, #0x10]
00000000000520bc	stp	x29, x30, [sp, #0x20]
00000000000520c0	add	x29, sp, #0x20
00000000000520c4	mov	x19, x2
00000000000520c8	nop
00000000000520cc	ldr	x8, #0x250bc ; Objc class ref: RCKULong
00000000000520d0	stp	x0, x8, [sp]
00000000000520d4	nop
00000000000520d8	ldr	x1, #0x24be8 ; Objc selector ref: init
00000000000520dc	mov	x0, sp
00000000000520e0	bl	0x55cb4 ; Objc message: -[[x0 super] init]
00000000000520e4	nop
00000000000520e8	ldrsw	x8, _OBJC_IVAR_$_RCKULong.value_
00000000000520ec	str	x19, [x0, x8]
00000000000520f0	ldp	x29, x30, [sp, #0x20]
00000000000520f4	ldp	x20, x19, [sp, #0x10]
00000000000520f8	add	sp, sp, #0x30
00000000000520fc	ret
-[KotlinULong initWithInteger:]:
0000000000052100	sub	sp, sp, #0x30
0000000000052104	stp	x20, x19, [sp, #0x10]
0000000000052108	stp	x29, x30, [sp, #0x20]
000000000005210c	add	x29, sp, #0x20
0000000000052110	mov	x19, x2
0000000000052114	nop
0000000000052118	ldr	x8, #0x25070 ; Objc class ref: RCKULong
000000000005211c	stp	x0, x8, [sp]
0000000000052120	nop
0000000000052124	ldr	x1, #0x24b9c ; Objc selector ref: init
0000000000052128	mov	x0, sp
000000000005212c	bl	0x55cb4 ; Objc message: -[[x0 super] init]
0000000000052130	nop
0000000000052134	ldrsw	x8, _OBJC_IVAR_$_RCKULong.value_
0000000000052138	str	x19, [x0, x8]
000000000005213c	ldp	x29, x30, [sp, #0x20]
0000000000052140	ldp	x20, x19, [sp, #0x10]
0000000000052144	add	sp, sp, #0x30
0000000000052148	ret
-[KotlinULong unsignedLongLongValue]:
000000000005214c	nop
0000000000052150	ldrsw	x8, _OBJC_IVAR_$_RCKULong.value_
0000000000052154	ldr	x0, [x0, x8]
0000000000052158	ret
-[KotlinULong objCType]:
000000000005215c	adr	x0, #0xb350 ; literal pool for: "Q"
0000000000052160	nop
0000000000052164	ret
-[KotlinULong toKotlin:]:
0000000000052168	mov	x1, x2
000000000005216c	nop
0000000000052170	ldrsw	x8, _OBJC_IVAR_$_RCKULong.value_
0000000000052174	ldr	x0, [x0, x8]
0000000000052178	b	_Kotlin_boxULong
-[KotlinUInt getValue:]:
000000000005217c	nop
0000000000052180	ldrsw	x8, _OBJC_IVAR_$_RCKUInt.value_
0000000000052184	ldr	w8, [x0, x8]
0000000000052188	str	w8, [x2]
000000000005218c	ret
-[KotlinUInt initWithUnsignedInt:]:
0000000000052190	sub	sp, sp, #0x30
0000000000052194	stp	x20, x19, [sp, #0x10]
0000000000052198	stp	x29, x30, [sp, #0x20]
000000000005219c	add	x29, sp, #0x20
00000000000521a0	mov	x19, x2
00000000000521a4	nop
00000000000521a8	ldr	x8, #0x24fd8 ; Objc class ref: RCKUInt
00000000000521ac	stp	x0, x8, [sp]
00000000000521b0	nop
00000000000521b4	ldr	x1, #0x24b0c ; Objc selector ref: init
00000000000521b8	mov	x0, sp
00000000000521bc	bl	0x55cb4 ; Objc message: -[[x0 super] init]
00000000000521c0	nop
00000000000521c4	ldrsw	x8, _OBJC_IVAR_$_RCKUInt.value_
00000000000521c8	str	w19, [x0, x8]
00000000000521cc	ldp	x29, x30, [sp, #0x20]
00000000000521d0	ldp	x20, x19, [sp, #0x10]
00000000000521d4	add	sp, sp, #0x30
00000000000521d8	ret
-[KotlinUInt initWithInteger:]:
00000000000521dc	sub	sp, sp, #0x30
00000000000521e0	stp	x20, x19, [sp, #0x10]
00000000000521e4	stp	x29, x30, [sp, #0x20]
00000000000521e8	add	x29, sp, #0x20
00000000000521ec	mov	x19, x2
00000000000521f0	nop
00000000000521f4	ldr	x8, #0x24f8c ; Objc class ref: RCKUInt
00000000000521f8	stp	x0, x8, [sp]
00000000000521fc	nop
0000000000052200	ldr	x1, #0x24ac0 ; Objc selector ref: init
0000000000052204	mov	x0, sp
0000000000052208	bl	0x55cb4 ; Objc message: -[[x0 super] init]
000000000005220c	nop
0000000000052210	ldrsw	x8, _OBJC_IVAR_$_RCKUInt.value_
0000000000052214	str	w19, [x0, x8]
0000000000052218	ldp	x29, x30, [sp, #0x20]
000000000005221c	ldp	x20, x19, [sp, #0x10]
0000000000052220	add	sp, sp, #0x30
0000000000052224	ret
-[KotlinUInt unsignedIntValue]:
0000000000052228	nop
000000000005222c	ldrsw	x8, _OBJC_IVAR_$_RCKUInt.value_
0000000000052230	ldr	w0, [x0, x8]
0000000000052234	ret
-[KotlinUInt objCType]:
0000000000052238	adr	x0, #0xb276 ; literal pool for: "I"
000000000005223c	nop
0000000000052240	ret
-[KotlinUInt toKotlin:]:
0000000000052244	mov	x1, x2
0000000000052248	nop
000000000005224c	ldrsw	x8, _OBJC_IVAR_$_RCKUInt.value_
0000000000052250	ldr	w0, [x0, x8]
0000000000052254	b	_Kotlin_boxUInt
-[KotlinUByte getValue:]:
0000000000052258	nop
000000000005225c	ldrsw	x8, _OBJC_IVAR_$_RCKUByte.value_
0000000000052260	ldrb	w8, [x0, x8]
0000000000052264	strb	w8, [x2]
0000000000052268	ret
-[KotlinUByte initWithUnsignedChar:]:
000000000005226c	sub	sp, sp, #0x30
0000000000052270	stp	x20, x19, [sp, #0x10]
0000000000052274	stp	x29, x30, [sp, #0x20]
0000000000052278	add	x29, sp, #0x20
000000000005227c	mov	x19, x2
0000000000052280	nop
0000000000052284	ldr	x8, #0x24eec ; Objc class ref: RCKUByte
0000000000052288	stp	x0, x8, [sp]
000000000005228c	nop
0000000000052290	ldr	x1, #0x24a30 ; Objc selector ref: init
0000000000052294	mov	x0, sp
0000000000052298	bl	0x55cb4 ; Objc message: -[[x0 super] init]
000000000005229c	nop
00000000000522a0	ldrsw	x8, _OBJC_IVAR_$_RCKUByte.value_
00000000000522a4	strb	w19, [x0, x8]
00000000000522a8	ldp	x29, x30, [sp, #0x20]
00000000000522ac	ldp	x20, x19, [sp, #0x10]
00000000000522b0	add	sp, sp, #0x30
00000000000522b4	ret
-[KotlinUByte initWithInteger:]:
00000000000522b8	sub	sp, sp, #0x30
00000000000522bc	stp	x20, x19, [sp, #0x10]
00000000000522c0	stp	x29, x30, [sp, #0x20]
00000000000522c4	add	x29, sp, #0x20
00000000000522c8	mov	x19, x2
00000000000522cc	nop
00000000000522d0	ldr	x8, #0x24ea0 ; Objc class ref: RCKUByte
00000000000522d4	stp	x0, x8, [sp]
00000000000522d8	nop
00000000000522dc	ldr	x1, #0x249e4 ; Objc selector ref: init
00000000000522e0	mov	x0, sp
00000000000522e4	bl	0x55cb4 ; Objc message: -[[x0 super] init]
00000000000522e8	nop
00000000000522ec	ldrsw	x8, _OBJC_IVAR_$_RCKUByte.value_
00000000000522f0	strb	w19, [x0, x8]
00000000000522f4	ldp	x29, x30, [sp, #0x20]
00000000000522f8	ldp	x20, x19, [sp, #0x10]
00000000000522fc	add	sp, sp, #0x30
0000000000052300	ret
-[KotlinUByte unsignedCharValue]:
0000000000052304	nop
0000000000052308	ldrsw	x8, _OBJC_IVAR_$_RCKUByte.value_
000000000005230c	ldrb	w0, [x0, x8]
0000000000052310	ret
-[KotlinUByte objCType]:
0000000000052314	adr	x0, #0xb19c ; literal pool for: "C"
0000000000052318	nop
000000000005231c	ret
-[KotlinUByte toKotlin:]:
0000000000052320	mov	x1, x2
0000000000052324	nop
0000000000052328	ldrsw	x8, _OBJC_IVAR_$_RCKUByte.value_
000000000005232c	ldrb	w0, [x0, x8]
0000000000052330	b	_Kotlin_boxUByte
-[KotlinShort getValue:]:
0000000000052334	nop
0000000000052338	ldrsw	x8, _OBJC_IVAR_$_RCKShort.value_
000000000005233c	ldrh	w8, [x0, x8]
0000000000052340	strh	w8, [x2]
0000000000052344	ret
-[KotlinShort initWithShort:]:
0000000000052348	sub	sp, sp, #0x30
000000000005234c	stp	x20, x19, [sp, #0x10]
0000000000052350	stp	x29, x30, [sp, #0x20]
0000000000052354	add	x29, sp, #0x20
0000000000052358	mov	x19, x2
000000000005235c	nop
0000000000052360	ldr	x8, #0x24df8 ; Objc class ref: RCKShort
0000000000052364	stp	x0, x8, [sp]
0000000000052368	nop
000000000005236c	ldr	x1, #0x24954 ; Objc selector ref: init
0000000000052370	mov	x0, sp
0000000000052374	bl	0x55cb4 ; Objc message: -[[x0 super] init]
0000000000052378	nop
000000000005237c	ldrsw	x8, _OBJC_IVAR_$_RCKShort.value_
0000000000052380	strh	w19, [x0, x8]
0000000000052384	ldp	x29, x30, [sp, #0x20]
0000000000052388	ldp	x20, x19, [sp, #0x10]
000000000005238c	add	sp, sp, #0x30
0000000000052390	ret
-[KotlinShort initWithInteger:]:
0000000000052394	sub	sp, sp, #0x30
0000000000052398	stp	x20, x19, [sp, #0x10]
000000000005239c	stp	x29, x30, [sp, #0x20]
00000000000523a0	add	x29, sp, #0x20
00000000000523a4	mov	x19, x2
00000000000523a8	nop
00000000000523ac	ldr	x8, #0x24dac ; Objc class ref: RCKShort
00000000000523b0	stp	x0, x8, [sp]
00000000000523b4	nop
00000000000523b8	ldr	x1, #0x24908 ; Objc selector ref: init
00000000000523bc	mov	x0, sp
00000000000523c0	bl	0x55cb4 ; Objc message: -[[x0 super] init]
00000000000523c4	nop
00000000000523c8	ldrsw	x8, _OBJC_IVAR_$_RCKShort.value_
00000000000523cc	strh	w19, [x0, x8]
00000000000523d0	ldp	x29, x30, [sp, #0x20]
00000000000523d4	ldp	x20, x19, [sp, #0x10]
00000000000523d8	add	sp, sp, #0x30
00000000000523dc	ret
-[KotlinShort shortValue]:
00000000000523e0	nop
00000000000523e4	ldrsw	x8, _OBJC_IVAR_$_RCKShort.value_
00000000000523e8	ldrsh	w0, [x0, x8]
00000000000523ec	ret
-[KotlinShort objCType]:
00000000000523f0	adr	x0, #0xb0c2 ; literal pool for: "s"
00000000000523f4	nop
00000000000523f8	ret
-[KotlinShort toKotlin:]:
00000000000523fc	mov	x1, x2
0000000000052400	nop
0000000000052404	ldrsw	x8, _OBJC_IVAR_$_RCKShort.value_
0000000000052408	ldrsh	w0, [x0, x8]
000000000005240c	b	_Kotlin_boxShort
-[KotlinNumber initWithBool:]:
0000000000052410	stp	x29, x30, [sp, #-0x10]!
0000000000052414	mov	x29, sp
0000000000052418	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithChar:]:
000000000005241c	stp	x29, x30, [sp, #-0x10]!
0000000000052420	mov	x29, sp
0000000000052424	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithShort:]:
0000000000052428	stp	x29, x30, [sp, #-0x10]!
000000000005242c	mov	x29, sp
0000000000052430	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithInt:]:
0000000000052434	stp	x29, x30, [sp, #-0x10]!
0000000000052438	mov	x29, sp
000000000005243c	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithInteger:]:
0000000000052440	stp	x29, x30, [sp, #-0x10]!
0000000000052444	mov	x29, sp
0000000000052448	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithLong:]:
000000000005244c	stp	x29, x30, [sp, #-0x10]!
0000000000052450	mov	x29, sp
0000000000052454	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithLongLong:]:
0000000000052458	stp	x29, x30, [sp, #-0x10]!
000000000005245c	mov	x29, sp
0000000000052460	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedChar:]:
0000000000052464	stp	x29, x30, [sp, #-0x10]!
0000000000052468	mov	x29, sp
000000000005246c	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedShort:]:
0000000000052470	stp	x29, x30, [sp, #-0x10]!
0000000000052474	mov	x29, sp
0000000000052478	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedInt:]:
000000000005247c	stp	x29, x30, [sp, #-0x10]!
0000000000052480	mov	x29, sp
0000000000052484	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedInteger:]:
0000000000052488	stp	x29, x30, [sp, #-0x10]!
000000000005248c	mov	x29, sp
0000000000052490	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedLong:]:
0000000000052494	stp	x29, x30, [sp, #-0x10]!
0000000000052498	mov	x29, sp
000000000005249c	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithUnsignedLongLong:]:
00000000000524a0	stp	x29, x30, [sp, #-0x10]!
00000000000524a4	mov	x29, sp
00000000000524a8	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithFloat:]:
00000000000524ac	stp	x29, x30, [sp, #-0x10]!
00000000000524b0	mov	x29, sp
00000000000524b4	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
-[KotlinNumber initWithDouble:]:
00000000000524b8	stp	x29, x30, [sp, #-0x10]!
00000000000524bc	mov	x29, sp
00000000000524c0	bl	__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector
__ZL29incorrectNumberInitializationP12KotlinNumberP13objc_selector:
00000000000524c4	sub	sp, sp, #0x40
00000000000524c8	stp	x22, x21, [sp, #0x10]
00000000000524cc	stp	x20, x19, [sp, #0x20]
00000000000524d0	stp	x29, x30, [sp, #0x30]
00000000000524d4	add	x29, sp, #0x30
00000000000524d8	mov	x19, x1
00000000000524dc	nop
00000000000524e0	ldr	x20, #0x24b78 ; Objc class ref: _OBJC_CLASS_$_NSException
00000000000524e4	nop
00000000000524e8	ldr	x8, #0xdb20 ; literal pool symbol address: _NSGenericException
00000000000524ec	ldr	x21, [x8]
00000000000524f0	nop
00000000000524f4	ldr	x1, #0x24724 ; Objc selector ref: class
00000000000524f8	bl	0x55ca8 ; Objc message: +[NSException class]
00000000000524fc	bl	0x55888 ; symbol stub for: _NSStringFromClass
0000000000052500	mov	x22, x0
0000000000052504	mov	x0, x19
0000000000052508	bl	0x55e34 ; symbol stub for: _sel_getName
000000000005250c	nop
0000000000052510	ldr	x1, #0x24900 ; Objc selector ref: raise:format:
0000000000052514	stp	x22, x0, [sp]
0000000000052518	adr	x3, #0x1fb98 ; Objc cfstring ref: @"bad cfstring ref"
000000000005251c	nop
0000000000052520	mov	x0, x20
0000000000052524	mov	x2, x21
0000000000052528	bl	0x55ca8 ; Objc message: -[x0 raise:format:]
000000000005252c	bl	0x55ab0 ; symbol stub for: _abort
-[KotlinLong getValue:]:
0000000000052530	nop
0000000000052534	ldrsw	x8, _OBJC_IVAR_$_RCKLong.value_
0000000000052538	ldr	x8, [x0, x8]
000000000005253c	str	x8, [x2]
0000000000052540	ret
-[KotlinLong initWithLongLong:]:
0000000000052544	sub	sp, sp, #0x30
0000000000052548	stp	x20, x19, [sp, #0x10]
000000000005254c	stp	x29, x30, [sp, #0x20]
0000000000052550	add	x29, sp, #0x20
0000000000052554	mov	x19, x2
0000000000052558	nop
000000000005255c	ldr	x8, #0x24c0c ; Objc class ref: RCKLong
0000000000052560	stp	x0, x8, [sp]
0000000000052564	nop
0000000000052568	ldr	x1, #0x24758 ; Objc selector ref: init
000000000005256c	mov	x0, sp
0000000000052570	bl	0x55cb4 ; Objc message: -[[x0 super] init]
0000000000052574	nop
0000000000052578	ldrsw	x8, _OBJC_IVAR_$_RCKLong.value_
000000000005257c	str	x19, [x0, x8]
0000000000052580	ldp	x29, x30, [sp, #0x20]
0000000000052584	ldp	x20, x19, [sp, #0x10]
0000000000052588	add	sp, sp, #0x30
000000000005258c	ret
-[KotlinLong initWithInteger:]:
0000000000052590	sub	sp, sp, #0x30
0000000000052594	stp	x20, x19, [sp, #0x10]
0000000000052598	stp	x29, x30, [sp, #0x20]
000000000005259c	add	x29, sp, #0x20
00000000000525a0	mov	x19, x2
00000000000525a4	nop
00000000000525a8	ldr	x8, #0x24bc0 ; Objc class ref: RCKLong
00000000000525ac	stp	x0, x8, [sp]
00000000000525b0	nop
00000000000525b4	ldr	x1, #0x2470c ; Objc selector ref: init
00000000000525b8	mov	x0, sp
00000000000525bc	bl	0x55cb4 ; Objc message: -[[x0 super] init]
00000000000525c0	nop
00000000000525c4	ldrsw	x8, _OBJC_IVAR_$_RCKLong.value_
00000000000525c8	str	x19, [x0, x8]
00000000000525cc	ldp	x29, x30, [sp, #0x20]
00000000000525d0	ldp	x20, x19, [sp, #0x10]
00000000000525d4	add	sp, sp, #0x30
00000000000525d8	ret
-[KotlinLong longLongValue]:
00000000000525dc	nop
00000000000525e0	ldrsw	x8, _OBJC_IVAR_$_RCKLong.value_
00000000000525e4	ldr	x0, [x0, x8]
00000000000525e8	ret
-[KotlinLong objCType]:
00000000000525ec	adr	x0, #0xaf08 ; literal pool for: "q"
00000000000525f0	nop
00000000000525f4	ret
-[KotlinLong toKotlin:]:
00000000000525f8	mov	x1, x2
00000000000525fc	nop
0000000000052600	ldrsw	x8, _OBJC_IVAR_$_RCKLong.value_
0000000000052604	ldr	x0, [x0, x8]
0000000000052608	b	_Kotlin_boxLong
-[KotlinInt getValue:]:
000000000005260c	nop
0000000000052610	ldrsw	x8, _OBJC_IVAR_$_RCKInt.value_
0000000000052614	ldr	w8, [x0, x8]
0000000000052618	str	w8, [x2]
000000000005261c	ret
-[KotlinInt initWithInt:]:
0000000000052620	sub	sp, sp, #0x30
0000000000052624	stp	x20, x19, [sp, #0x10]
0000000000052628	stp	x29, x30, [sp, #0x20]
000000000005262c	add	x29, sp, #0x20
0000000000052630	mov	x19, x2
0000000000052634	nop
0000000000052638	ldr	x8, #0x24b28 ; Objc class ref: RCKInt
000000000005263c	stp	x0, x8, [sp]
0000000000052640	nop
0000000000052644	ldr	x1, #0x2467c ; Objc selector ref: init
0000000000052648	mov	x0, sp
000000000005264c	bl	0x55cb4 ; Objc message: -[[x0 super] init]
0000000000052650	nop
0000000000052654	ldrsw	x8, _OBJC_IVAR_$_RCKInt.value_
0000000000052658	str	w19, [x0, x8]
000000000005265c	ldp	x29, x30, [sp, #0x20]
0000000000052660	ldp	x20, x19, [sp, #0x10]
0000000000052664	add	sp, sp, #0x30
0000000000052668	ret
-[KotlinInt initWithInteger:]:
000000000005266c	sub	sp, sp, #0x30
0000000000052670	stp	x20, x19, [sp, #0x10]
0000000000052674	stp	x29, x30, [sp, #0x20]
0000000000052678	add	x29, sp, #0x20
000000000005267c	mov	x19, x2
0000000000052680	nop
0000000000052684	ldr	x8, #0x24adc ; Objc class ref: RCKInt
0000000000052688	stp	x0, x8, [sp]
000000000005268c	nop
0000000000052690	ldr	x1, #0x24630 ; Objc selector ref: init
0000000000052694	mov	x0, sp
0000000000052698	bl	0x55cb4 ; Objc message: -[[x0 super] init]
000000000005269c	nop
00000000000526a0	ldrsw	x8, _OBJC_IVAR_$_RCKInt.value_
00000000000526a4	str	w19, [x0, x8]
00000000000526a8	ldp	x29, x30, [sp, #0x20]
00000000000526ac	ldp	x20, x19, [sp, #0x10]
00000000000526b0	add	sp, sp, #0x30
00000000000526b4	ret
-[KotlinInt intValue]:
00000000000526b8	nop
00000000000526bc	ldrsw	x8, _OBJC_IVAR_$_RCKInt.value_
00000000000526c0	ldr	w0, [x0, x8]
00000000000526c4	ret
-[KotlinInt objCType]:
00000000000526c8	adr	x0, #0xae2e ; literal pool for: "i"
00000000000526cc	nop
00000000000526d0	ret
-[KotlinInt toKotlin:]:
00000000000526d4	sub	sp, sp, #0x50
00000000000526d8	stp	x22, x21, [sp, #0x20]
00000000000526dc	stp	x20, x19, [sp, #0x30]
00000000000526e0	stp	x29, x30, [sp, #0x40]
00000000000526e4	add	x29, sp, #0x40
00000000000526e8	mov	x19, x2
00000000000526ec	nop
00000000000526f0	ldrsw	x8, _OBJC_IVAR_$_RCKInt.value_
00000000000526f4	ldr	w21, [x0, x8]
00000000000526f8	str	xzr, [sp, #0x8]
00000000000526fc	adrp	x20, 40 ; 0x7a000
0000000000052700	add	x20, x20, #0x4e0
0000000000052704	ldr	x22, [x20]
0000000000052708	mov	x0, x20
000000000005270c	blr	x22
0000000000052710	ldr	x8, [x0]
0000000000052714	ldr	x9, [x8, #0x110]
0000000000052718	add	x10, sp, #0x8
000000000005271c	str	x10, [x8, #0x110]
0000000000052720	mov	x8, #0x300000000
0000000000052724	stp	x9, x8, [sp, #0x10]
0000000000052728	adr	x8, #0x41de1
000000000005272c	nop
0000000000052730	ldarb	w8, [x8]
0000000000052734	tbz	w8, #0x0, 0x5273c
0000000000052738	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000005273c	mov	x0, x21
0000000000052740	mov	x1, x19
0000000000052744	bl	"_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any"
0000000000052748	mov	x8, x0
000000000005274c	str	x0, [x19]
0000000000052750	mov	x0, x20
0000000000052754	blr	x22
0000000000052758	ldr	x9, [x0]
000000000005275c	ldr	x10, [sp, #0x10]
0000000000052760	str	x10, [x9, #0x110]
0000000000052764	mov	x0, x8
0000000000052768	ldp	x29, x30, [sp, #0x40]
000000000005276c	ldp	x20, x19, [sp, #0x30]
0000000000052770	ldp	x22, x21, [sp, #0x20]
0000000000052774	add	sp, sp, #0x50
0000000000052778	ret
-[KotlinFloat getValue:]:
000000000005277c	nop
0000000000052780	ldrsw	x8, _OBJC_IVAR_$_RCKFloat.value_
0000000000052784	ldr	w8, [x0, x8]
0000000000052788	str	w8, [x2]
000000000005278c	ret
-[KotlinFloat initWithFloat:]:
0000000000052790	sub	sp, sp, #0x30
0000000000052794	stp	d9, d8, [sp, #0x10]
0000000000052798	stp	x29, x30, [sp, #0x20]
000000000005279c	add	x29, sp, #0x20
00000000000527a0	fmov	s8, s0
00000000000527a4	nop
00000000000527a8	ldr	x8, #0x24998 ; Objc class ref: RCKFloat
00000000000527ac	stp	x0, x8, [sp]
00000000000527b0	nop
00000000000527b4	ldr	x1, #0x2450c ; Objc selector ref: init
00000000000527b8	mov	x0, sp
00000000000527bc	bl	0x55cb4 ; Objc message: -[[x0 super] init]
00000000000527c0	nop
00000000000527c4	ldrsw	x8, _OBJC_IVAR_$_RCKFloat.value_
00000000000527c8	str	s8, [x0, x8]
00000000000527cc	ldp	x29, x30, [sp, #0x20]
00000000000527d0	ldp	d9, d8, [sp, #0x10]
00000000000527d4	add	sp, sp, #0x30
00000000000527d8	ret
-[KotlinFloat initWithInteger:]:
00000000000527dc	sub	sp, sp, #0x30
00000000000527e0	stp	x20, x19, [sp, #0x10]
00000000000527e4	stp	x29, x30, [sp, #0x20]
00000000000527e8	add	x29, sp, #0x20
00000000000527ec	mov	x19, x2
00000000000527f0	nop
00000000000527f4	ldr	x8, #0x2494c ; Objc class ref: RCKFloat
00000000000527f8	stp	x0, x8, [sp]
00000000000527fc	nop
0000000000052800	ldr	x1, #0x244c0 ; Objc selector ref: init
0000000000052804	mov	x0, sp
0000000000052808	bl	0x55cb4 ; Objc message: -[[x0 super] init]
000000000005280c	scvtf	s0, x19
0000000000052810	nop
0000000000052814	ldrsw	x8, _OBJC_IVAR_$_RCKFloat.value_
0000000000052818	str	s0, [x0, x8]
000000000005281c	ldp	x29, x30, [sp, #0x20]
0000000000052820	ldp	x20, x19, [sp, #0x10]
0000000000052824	add	sp, sp, #0x30
0000000000052828	ret
-[KotlinFloat initWithDouble:]:
000000000005282c	sub	sp, sp, #0x30
0000000000052830	stp	d9, d8, [sp, #0x10]
0000000000052834	stp	x29, x30, [sp, #0x20]
0000000000052838	add	x29, sp, #0x20
000000000005283c	fmov	d8, d0
0000000000052840	nop
0000000000052844	ldr	x8, #0x248fc ; Objc class ref: RCKFloat
0000000000052848	stp	x0, x8, [sp]
000000000005284c	nop
0000000000052850	ldr	x1, #0x24470 ; Objc selector ref: init
0000000000052854	mov	x0, sp
0000000000052858	bl	0x55cb4 ; Objc message: -[[x0 super] init]
000000000005285c	fcvt	s0, d8
0000000000052860	nop
0000000000052864	ldrsw	x8, _OBJC_IVAR_$_RCKFloat.value_
0000000000052868	str	s0, [x0, x8]
000000000005286c	ldp	x29, x30, [sp, #0x20]
0000000000052870	ldp	d9, d8, [sp, #0x10]
0000000000052874	add	sp, sp, #0x30
0000000000052878	ret
-[KotlinFloat floatValue]:
000000000005287c	nop
0000000000052880	ldrsw	x8, _OBJC_IVAR_$_RCKFloat.value_
0000000000052884	ldr	s0, [x0, x8]
0000000000052888	ret
-[KotlinFloat objCType]:
000000000005288c	adr	x0, #0xac6c ; literal pool for: "f"
0000000000052890	nop
0000000000052894	ret
-[KotlinFloat toKotlin:]:
0000000000052898	nop
000000000005289c	ldrsw	x8, _OBJC_IVAR_$_RCKFloat.value_
00000000000528a0	ldr	s0, [x0, x8]
00000000000528a4	mov	x0, x2
00000000000528a8	b	_Kotlin_boxFloat
-[KotlinDouble getValue:]:
00000000000528ac	nop
00000000000528b0	ldrsw	x8, _OBJC_IVAR_$_RCKDouble.value_
00000000000528b4	ldr	x8, [x0, x8]
00000000000528b8	str	x8, [x2]
00000000000528bc	ret
-[KotlinDouble initWithDouble:]:
00000000000528c0	sub	sp, sp, #0x30
00000000000528c4	stp	d9, d8, [sp, #0x10]
00000000000528c8	stp	x29, x30, [sp, #0x20]
00000000000528cc	add	x29, sp, #0x20
00000000000528d0	fmov	d8, d0
00000000000528d4	nop
00000000000528d8	ldr	x8, #0x24870 ; Objc class ref: RCKDouble
00000000000528dc	stp	x0, x8, [sp]
00000000000528e0	nop
00000000000528e4	ldr	x1, #0x243dc ; Objc selector ref: init
00000000000528e8	mov	x0, sp
00000000000528ec	bl	0x55cb4 ; Objc message: -[[x0 super] init]
00000000000528f0	nop
00000000000528f4	ldrsw	x8, _OBJC_IVAR_$_RCKDouble.value_
00000000000528f8	str	d8, [x0, x8]
00000000000528fc	ldp	x29, x30, [sp, #0x20]
0000000000052900	ldp	d9, d8, [sp, #0x10]
0000000000052904	add	sp, sp, #0x30
0000000000052908	ret
-[KotlinDouble initWithInteger:]:
000000000005290c	sub	sp, sp, #0x30
0000000000052910	stp	x20, x19, [sp, #0x10]
0000000000052914	stp	x29, x30, [sp, #0x20]
0000000000052918	add	x29, sp, #0x20
000000000005291c	mov	x19, x2
0000000000052920	nop
0000000000052924	ldr	x8, #0x24824 ; Objc class ref: RCKDouble
0000000000052928	stp	x0, x8, [sp]
000000000005292c	nop
0000000000052930	ldr	x1, #0x24390 ; Objc selector ref: init
0000000000052934	mov	x0, sp
0000000000052938	bl	0x55cb4 ; Objc message: -[[x0 super] init]
000000000005293c	scvtf	d0, x19
0000000000052940	nop
0000000000052944	ldrsw	x8, _OBJC_IVAR_$_RCKDouble.value_
0000000000052948	str	d0, [x0, x8]
000000000005294c	ldp	x29, x30, [sp, #0x20]
0000000000052950	ldp	x20, x19, [sp, #0x10]
0000000000052954	add	sp, sp, #0x30
0000000000052958	ret
-[KotlinDouble doubleValue]:
000000000005295c	nop
0000000000052960	ldrsw	x8, _OBJC_IVAR_$_RCKDouble.value_
0000000000052964	ldr	d0, [x0, x8]
0000000000052968	ret
-[KotlinDouble objCType]:
000000000005296c	adr	x0, #0xab8e ; literal pool for: "d"
0000000000052970	nop
0000000000052974	ret
-[KotlinDouble toKotlin:]:
0000000000052978	nop
000000000005297c	ldrsw	x8, _OBJC_IVAR_$_RCKDouble.value_
0000000000052980	ldr	d0, [x0, x8]
0000000000052984	mov	x0, x2
0000000000052988	b	_Kotlin_boxDouble
-[KotlinByte getValue:]:
000000000005298c	nop
0000000000052990	ldrsw	x8, _OBJC_IVAR_$_RCKByte.value_
0000000000052994	ldrb	w8, [x0, x8]
0000000000052998	strb	w8, [x2]
000000000005299c	ret
-[KotlinByte initWithChar:]:
00000000000529a0	sub	sp, sp, #0x30
00000000000529a4	stp	x20, x19, [sp, #0x10]
00000000000529a8	stp	x29, x30, [sp, #0x20]
00000000000529ac	add	x29, sp, #0x20
00000000000529b0	mov	x19, x2
00000000000529b4	nop
00000000000529b8	ldr	x8, #0x24798 ; Objc class ref: RCKByte
00000000000529bc	stp	x0, x8, [sp]
00000000000529c0	nop
00000000000529c4	ldr	x1, #0x242fc ; Objc selector ref: init
00000000000529c8	mov	x0, sp
00000000000529cc	bl	0x55cb4 ; Objc message: -[[x0 super] init]
00000000000529d0	nop
00000000000529d4	ldrsw	x8, _OBJC_IVAR_$_RCKByte.value_
00000000000529d8	strb	w19, [x0, x8]
00000000000529dc	ldp	x29, x30, [sp, #0x20]
00000000000529e0	ldp	x20, x19, [sp, #0x10]
00000000000529e4	add	sp, sp, #0x30
00000000000529e8	ret
-[KotlinByte initWithInteger:]:
00000000000529ec	sub	sp, sp, #0x30
00000000000529f0	stp	x20, x19, [sp, #0x10]
00000000000529f4	stp	x29, x30, [sp, #0x20]
00000000000529f8	add	x29, sp, #0x20
00000000000529fc	mov	x19, x2
0000000000052a00	nop
0000000000052a04	ldr	x8, #0x2474c ; Objc class ref: RCKByte
0000000000052a08	stp	x0, x8, [sp]
0000000000052a0c	nop
0000000000052a10	ldr	x1, #0x242b0 ; Objc selector ref: init
0000000000052a14	mov	x0, sp
0000000000052a18	bl	0x55cb4 ; Objc message: -[[x0 super] init]
0000000000052a1c	nop
0000000000052a20	ldrsw	x8, _OBJC_IVAR_$_RCKByte.value_
0000000000052a24	strb	w19, [x0, x8]
0000000000052a28	ldp	x29, x30, [sp, #0x20]
0000000000052a2c	ldp	x20, x19, [sp, #0x10]
0000000000052a30	add	sp, sp, #0x30
0000000000052a34	ret
-[KotlinByte charValue]:
0000000000052a38	nop
0000000000052a3c	ldrsw	x8, _OBJC_IVAR_$_RCKByte.value_
0000000000052a40	ldrsb	w0, [x0, x8]
0000000000052a44	ret
-[KotlinByte objCType]:
0000000000052a48	adr	x0, #0xaab4 ; literal pool for: "c"
0000000000052a4c	nop
0000000000052a50	ret
-[KotlinByte toKotlin:]:
0000000000052a54	sub	sp, sp, #0x50
0000000000052a58	stp	x22, x21, [sp, #0x20]
0000000000052a5c	stp	x20, x19, [sp, #0x30]
0000000000052a60	stp	x29, x30, [sp, #0x40]
0000000000052a64	add	x29, sp, #0x40
0000000000052a68	mov	x19, x2
0000000000052a6c	nop
0000000000052a70	ldrsw	x8, _OBJC_IVAR_$_RCKByte.value_
0000000000052a74	ldrb	w22, [x0, x8]
0000000000052a78	str	xzr, [sp, #0x8]
0000000000052a7c	adrp	x20, 40 ; 0x7a000
0000000000052a80	add	x20, x20, #0x4e0
0000000000052a84	ldr	x21, [x20]
0000000000052a88	mov	x0, x20
0000000000052a8c	blr	x21
0000000000052a90	ldr	x8, [x0]
0000000000052a94	ldr	x9, [x8, #0x110]
0000000000052a98	add	x10, sp, #0x8
0000000000052a9c	str	x10, [x8, #0x110]
0000000000052aa0	mov	x8, #0x300000000
0000000000052aa4	stp	x9, x8, [sp, #0x10]
0000000000052aa8	adr	x8, #0x41a61
0000000000052aac	nop
0000000000052ab0	ldarb	w8, [x8]
0000000000052ab4	tbz	w8, #0x0, 0x52abc
0000000000052ab8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000052abc	sxtb	w0, w22
0000000000052ac0	mov	x1, x19
0000000000052ac4	bl	"_kfun:kotlin#<Byte-box>(kotlin.Byte){}kotlin.Any"
0000000000052ac8	mov	x8, x0
0000000000052acc	str	x0, [x19]
0000000000052ad0	mov	x0, x20
0000000000052ad4	blr	x21
0000000000052ad8	ldr	x9, [x0]
0000000000052adc	ldr	x10, [sp, #0x10]
0000000000052ae0	str	x10, [x9, #0x110]
0000000000052ae4	mov	x0, x8
0000000000052ae8	ldp	x29, x30, [sp, #0x40]
0000000000052aec	ldp	x20, x19, [sp, #0x30]
0000000000052af0	ldp	x22, x21, [sp, #0x20]
0000000000052af4	add	sp, sp, #0x50
0000000000052af8	ret
-[KotlinBoolean getValue:]:
0000000000052afc	nop
0000000000052b00	ldrsw	x8, _OBJC_IVAR_$_RCKBoolean.value_
0000000000052b04	ldrb	w8, [x0, x8]
0000000000052b08	strb	w8, [x2]
0000000000052b0c	ret
-[KotlinBoolean initWithBool:]:
0000000000052b10	sub	sp, sp, #0x30
0000000000052b14	stp	x20, x19, [sp, #0x10]
0000000000052b18	stp	x29, x30, [sp, #0x20]
0000000000052b1c	add	x29, sp, #0x20
0000000000052b20	mov	x19, x2
0000000000052b24	nop
0000000000052b28	ldr	x8, #0x24610 ; Objc class ref: RCKBoolean
0000000000052b2c	stp	x0, x8, [sp]
0000000000052b30	nop
0000000000052b34	ldr	x1, #0x2418c ; Objc selector ref: init
0000000000052b38	mov	x0, sp
0000000000052b3c	bl	0x55cb4 ; Objc message: -[[x0 super] init]
0000000000052b40	nop
0000000000052b44	ldrsw	x8, _OBJC_IVAR_$_RCKBoolean.value_
0000000000052b48	strb	w19, [x0, x8]
0000000000052b4c	ldp	x29, x30, [sp, #0x20]
0000000000052b50	ldp	x20, x19, [sp, #0x10]
0000000000052b54	add	sp, sp, #0x30
0000000000052b58	ret
-[KotlinBoolean boolValue]:
0000000000052b5c	nop
0000000000052b60	ldrsw	x8, _OBJC_IVAR_$_RCKBoolean.value_
0000000000052b64	ldrb	w0, [x0, x8]
0000000000052b68	ret
-[KotlinBoolean charValue]:
0000000000052b6c	nop
0000000000052b70	ldrsw	x8, _OBJC_IVAR_$_RCKBoolean.value_
0000000000052b74	ldrsb	w0, [x0, x8]
0000000000052b78	ret
-[KotlinBoolean objCType]:
0000000000052b7c	adr	x0, #0xa980 ; literal pool for: "c"
0000000000052b80	nop
0000000000052b84	ret
-[KotlinBoolean toKotlin:]:
0000000000052b88	sub	sp, sp, #0x50
0000000000052b8c	stp	x22, x21, [sp, #0x20]
0000000000052b90	stp	x20, x19, [sp, #0x30]
0000000000052b94	stp	x29, x30, [sp, #0x40]
0000000000052b98	add	x29, sp, #0x40
0000000000052b9c	mov	x19, x2
0000000000052ba0	nop
0000000000052ba4	ldrsw	x8, _OBJC_IVAR_$_RCKBoolean.value_
0000000000052ba8	ldrb	w22, [x0, x8]
0000000000052bac	str	xzr, [sp, #0x8]
0000000000052bb0	adrp	x20, 40 ; 0x7a000
0000000000052bb4	add	x20, x20, #0x4e0
0000000000052bb8	ldr	x21, [x20]
0000000000052bbc	mov	x0, x20
0000000000052bc0	blr	x21
0000000000052bc4	ldr	x8, [x0]
0000000000052bc8	ldr	x9, [x8, #0x110]
0000000000052bcc	add	x10, sp, #0x8
0000000000052bd0	str	x10, [x8, #0x110]
0000000000052bd4	mov	x8, #0x300000000
0000000000052bd8	stp	x9, x8, [sp, #0x10]
0000000000052bdc	adr	x8, #0x4192d
0000000000052be0	nop
0000000000052be4	ldarb	w8, [x8]
0000000000052be8	tbz	w8, #0x0, 0x52bf0
0000000000052bec	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000052bf0	cmp	w22, #0x0
0000000000052bf4	cset	w0, ne
0000000000052bf8	mov	x1, x19
0000000000052bfc	bl	"_kfun:kotlin#<Boolean-box>(kotlin.Boolean){}kotlin.Any"
0000000000052c00	mov	x8, x0
0000000000052c04	str	x0, [x19]
0000000000052c08	mov	x0, x20
0000000000052c0c	blr	x21
0000000000052c10	ldr	x9, [x0]
0000000000052c14	ldr	x10, [sp, #0x10]
0000000000052c18	str	x10, [x9, #0x110]
0000000000052c1c	mov	x0, x8
0000000000052c20	ldp	x29, x30, [sp, #0x40]
0000000000052c24	ldp	x20, x19, [sp, #0x30]
0000000000052c28	ldp	x22, x21, [sp, #0x20]
0000000000052c2c	add	sp, sp, #0x50
0000000000052c30	ret
+[KotlinUShort numberWithUnsignedShort:]:
0000000000052c34	stp	x20, x19, [sp, #-0x20]!
0000000000052c38	stp	x29, x30, [sp, #0x10]
0000000000052c3c	add	x29, sp, #0x10
0000000000052c40	mov	x19, x2
0000000000052c44	nop
0000000000052c48	ldr	x1, #0x24168 ; Objc selector ref: new
0000000000052c4c	bl	0x55ca8 ; Objc message: -[x0 new]
0000000000052c50	bl	0x55c48 ; symbol stub for: _objc_autorelease
0000000000052c54	nop
0000000000052c58	ldrsw	x8, _OBJC_IVAR_$_RCKUShort.value_
0000000000052c5c	strh	w19, [x0, x8]
0000000000052c60	ldp	x29, x30, [sp, #0x10]
0000000000052c64	ldp	x20, x19, [sp], #0x20
0000000000052c68	ret
+[KotlinULong numberWithUnsignedLongLong:]:
0000000000052c6c	stp	x20, x19, [sp, #-0x20]!
0000000000052c70	stp	x29, x30, [sp, #0x10]
0000000000052c74	add	x29, sp, #0x10
0000000000052c78	mov	x19, x2
0000000000052c7c	nop
0000000000052c80	ldr	x1, #0x24130 ; Objc selector ref: new
0000000000052c84	bl	0x55ca8 ; Objc message: -[x0 new]
0000000000052c88	bl	0x55c48 ; symbol stub for: _objc_autorelease
0000000000052c8c	nop
0000000000052c90	ldrsw	x8, _OBJC_IVAR_$_RCKULong.value_
0000000000052c94	str	x19, [x0, x8]
0000000000052c98	ldp	x29, x30, [sp, #0x10]
0000000000052c9c	ldp	x20, x19, [sp], #0x20
0000000000052ca0	ret
+[KotlinUInt numberWithUnsignedInt:]:
0000000000052ca4	stp	x20, x19, [sp, #-0x20]!
0000000000052ca8	stp	x29, x30, [sp, #0x10]
0000000000052cac	add	x29, sp, #0x10
0000000000052cb0	mov	x19, x2
0000000000052cb4	nop
0000000000052cb8	ldr	x1, #0x240f8 ; Objc selector ref: new
0000000000052cbc	bl	0x55ca8 ; Objc message: -[x0 new]
0000000000052cc0	bl	0x55c48 ; symbol stub for: _objc_autorelease
0000000000052cc4	nop
0000000000052cc8	ldrsw	x8, _OBJC_IVAR_$_RCKUInt.value_
0000000000052ccc	str	w19, [x0, x8]
0000000000052cd0	ldp	x29, x30, [sp, #0x10]
0000000000052cd4	ldp	x20, x19, [sp], #0x20
0000000000052cd8	ret
+[KotlinUByte numberWithUnsignedChar:]:
0000000000052cdc	stp	x20, x19, [sp, #-0x20]!
0000000000052ce0	stp	x29, x30, [sp, #0x10]
0000000000052ce4	add	x29, sp, #0x10
0000000000052ce8	mov	x19, x2
0000000000052cec	nop
0000000000052cf0	ldr	x1, #0x240c0 ; Objc selector ref: new
0000000000052cf4	bl	0x55ca8 ; Objc message: -[x0 new]
0000000000052cf8	bl	0x55c48 ; symbol stub for: _objc_autorelease
0000000000052cfc	nop
0000000000052d00	ldrsw	x8, _OBJC_IVAR_$_RCKUByte.value_
0000000000052d04	strb	w19, [x0, x8]
0000000000052d08	ldp	x29, x30, [sp, #0x10]
0000000000052d0c	ldp	x20, x19, [sp], #0x20
0000000000052d10	ret
+[KotlinShort numberWithShort:]:
0000000000052d14	stp	x20, x19, [sp, #-0x20]!
0000000000052d18	stp	x29, x30, [sp, #0x10]
0000000000052d1c	add	x29, sp, #0x10
0000000000052d20	mov	x19, x2
0000000000052d24	nop
0000000000052d28	ldr	x1, #0x24088 ; Objc selector ref: new
0000000000052d2c	bl	0x55ca8 ; Objc message: -[x0 new]
0000000000052d30	bl	0x55c48 ; symbol stub for: _objc_autorelease
0000000000052d34	nop
0000000000052d38	ldrsw	x8, _OBJC_IVAR_$_RCKShort.value_
0000000000052d3c	strh	w19, [x0, x8]
0000000000052d40	ldp	x29, x30, [sp, #0x10]
0000000000052d44	ldp	x20, x19, [sp], #0x20
0000000000052d48	ret
+[KotlinNumber numberWithBool:]:
0000000000052d4c	stp	x29, x30, [sp, #-0x10]!
0000000000052d50	mov	x29, sp
0000000000052d54	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithChar:]:
0000000000052d58	stp	x29, x30, [sp, #-0x10]!
0000000000052d5c	mov	x29, sp
0000000000052d60	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithShort:]:
0000000000052d64	stp	x29, x30, [sp, #-0x10]!
0000000000052d68	mov	x29, sp
0000000000052d6c	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithInt:]:
0000000000052d70	stp	x29, x30, [sp, #-0x10]!
0000000000052d74	mov	x29, sp
0000000000052d78	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithInteger:]:
0000000000052d7c	stp	x29, x30, [sp, #-0x10]!
0000000000052d80	mov	x29, sp
0000000000052d84	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithLong:]:
0000000000052d88	stp	x29, x30, [sp, #-0x10]!
0000000000052d8c	mov	x29, sp
0000000000052d90	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithLongLong:]:
0000000000052d94	stp	x29, x30, [sp, #-0x10]!
0000000000052d98	mov	x29, sp
0000000000052d9c	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedChar:]:
0000000000052da0	stp	x29, x30, [sp, #-0x10]!
0000000000052da4	mov	x29, sp
0000000000052da8	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedShort:]:
0000000000052dac	stp	x29, x30, [sp, #-0x10]!
0000000000052db0	mov	x29, sp
0000000000052db4	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedInt:]:
0000000000052db8	stp	x29, x30, [sp, #-0x10]!
0000000000052dbc	mov	x29, sp
0000000000052dc0	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedLong:]:
0000000000052dc4	stp	x29, x30, [sp, #-0x10]!
0000000000052dc8	mov	x29, sp
0000000000052dcc	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedInteger:]:
0000000000052dd0	stp	x29, x30, [sp, #-0x10]!
0000000000052dd4	mov	x29, sp
0000000000052dd8	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithUnsignedLongLong:]:
0000000000052ddc	stp	x29, x30, [sp, #-0x10]!
0000000000052de0	mov	x29, sp
0000000000052de4	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithFloat:]:
0000000000052de8	stp	x29, x30, [sp, #-0x10]!
0000000000052dec	mov	x29, sp
0000000000052df0	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
+[KotlinNumber numberWithDouble:]:
0000000000052df4	stp	x29, x30, [sp, #-0x10]!
0000000000052df8	mov	x29, sp
0000000000052dfc	bl	__ZL22incorrectNumberFactoryP10objc_classP13objc_selector
__ZL22incorrectNumberFactoryP10objc_classP13objc_selector:
0000000000052e00	sub	sp, sp, #0x40
0000000000052e04	stp	x22, x21, [sp, #0x10]
0000000000052e08	stp	x20, x19, [sp, #0x20]
0000000000052e0c	stp	x29, x30, [sp, #0x30]
0000000000052e10	add	x29, sp, #0x30
0000000000052e14	mov	x19, x1
0000000000052e18	nop
0000000000052e1c	ldr	x20, #0x2423c ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000052e20	nop
0000000000052e24	ldr	x8, #0xd1e4 ; literal pool symbol address: _NSGenericException
0000000000052e28	ldr	x21, [x8]
0000000000052e2c	bl	0x55888 ; symbol stub for: _NSStringFromClass
0000000000052e30	mov	x22, x0
0000000000052e34	mov	x0, x19
0000000000052e38	bl	0x55e34 ; symbol stub for: _sel_getName
0000000000052e3c	nop
0000000000052e40	ldr	x1, #0x23fd0 ; Objc selector ref: raise:format:
0000000000052e44	stp	x22, x0, [sp]
0000000000052e48	adr	x3, #0x1f288 ; Objc cfstring ref: @"bad cfstring ref"
0000000000052e4c	nop
0000000000052e50	mov	x0, x20
0000000000052e54	mov	x2, x21
0000000000052e58	bl	0x55ca8 ; Objc message: +[NSException raise:format:]
0000000000052e5c	bl	0x55ab0 ; symbol stub for: _abort
+[KotlinLong numberWithLongLong:]:
0000000000052e60	stp	x20, x19, [sp, #-0x20]!
0000000000052e64	stp	x29, x30, [sp, #0x10]
0000000000052e68	add	x29, sp, #0x10
0000000000052e6c	mov	x19, x2
0000000000052e70	nop
0000000000052e74	ldr	x1, #0x23f3c ; Objc selector ref: new
0000000000052e78	bl	0x55ca8 ; Objc message: -[x0 new]
0000000000052e7c	bl	0x55c48 ; symbol stub for: _objc_autorelease
0000000000052e80	nop
0000000000052e84	ldrsw	x8, _OBJC_IVAR_$_RCKLong.value_
0000000000052e88	str	x19, [x0, x8]
0000000000052e8c	ldp	x29, x30, [sp, #0x10]
0000000000052e90	ldp	x20, x19, [sp], #0x20
0000000000052e94	ret
+[KotlinInt numberWithInt:]:
0000000000052e98	stp	x20, x19, [sp, #-0x20]!
0000000000052e9c	stp	x29, x30, [sp, #0x10]
0000000000052ea0	add	x29, sp, #0x10
0000000000052ea4	mov	x19, x2
0000000000052ea8	nop
0000000000052eac	ldr	x1, #0x23f04 ; Objc selector ref: new
0000000000052eb0	bl	0x55ca8 ; Objc message: -[x0 new]
0000000000052eb4	bl	0x55c48 ; symbol stub for: _objc_autorelease
0000000000052eb8	nop
0000000000052ebc	ldrsw	x8, _OBJC_IVAR_$_RCKInt.value_
0000000000052ec0	str	w19, [x0, x8]
0000000000052ec4	ldp	x29, x30, [sp, #0x10]
0000000000052ec8	ldp	x20, x19, [sp], #0x20
0000000000052ecc	ret
+[KotlinFloat numberWithFloat:]:
0000000000052ed0	stp	d9, d8, [sp, #-0x20]!
0000000000052ed4	stp	x29, x30, [sp, #0x10]
0000000000052ed8	add	x29, sp, #0x10
0000000000052edc	fmov	s8, s0
0000000000052ee0	nop
0000000000052ee4	ldr	x1, #0x23ecc ; Objc selector ref: new
0000000000052ee8	bl	0x55ca8 ; Objc message: -[x0 new]
0000000000052eec	bl	0x55c48 ; symbol stub for: _objc_autorelease
0000000000052ef0	nop
0000000000052ef4	ldrsw	x8, _OBJC_IVAR_$_RCKFloat.value_
0000000000052ef8	str	s8, [x0, x8]
0000000000052efc	ldp	x29, x30, [sp, #0x10]
0000000000052f00	ldp	d9, d8, [sp], #0x20
0000000000052f04	ret
+[KotlinDouble numberWithDouble:]:
0000000000052f08	stp	d9, d8, [sp, #-0x20]!
0000000000052f0c	stp	x29, x30, [sp, #0x10]
0000000000052f10	add	x29, sp, #0x10
0000000000052f14	fmov	d8, d0
0000000000052f18	nop
0000000000052f1c	ldr	x1, #0x23e94 ; Objc selector ref: new
0000000000052f20	bl	0x55ca8 ; Objc message: -[x0 new]
0000000000052f24	bl	0x55c48 ; symbol stub for: _objc_autorelease
0000000000052f28	nop
0000000000052f2c	ldrsw	x8, _OBJC_IVAR_$_RCKDouble.value_
0000000000052f30	str	d8, [x0, x8]
0000000000052f34	ldp	x29, x30, [sp, #0x10]
0000000000052f38	ldp	d9, d8, [sp], #0x20
0000000000052f3c	ret
+[KotlinByte numberWithChar:]:
0000000000052f40	stp	x20, x19, [sp, #-0x20]!
0000000000052f44	stp	x29, x30, [sp, #0x10]
0000000000052f48	add	x29, sp, #0x10
0000000000052f4c	mov	x19, x2
0000000000052f50	nop
0000000000052f54	ldr	x1, #0x23e5c ; Objc selector ref: new
0000000000052f58	bl	0x55ca8 ; Objc message: -[x0 new]
0000000000052f5c	bl	0x55c48 ; symbol stub for: _objc_autorelease
0000000000052f60	nop
0000000000052f64	ldrsw	x8, _OBJC_IVAR_$_RCKByte.value_
0000000000052f68	strb	w19, [x0, x8]
0000000000052f6c	ldp	x29, x30, [sp, #0x10]
0000000000052f70	ldp	x20, x19, [sp], #0x20
0000000000052f74	ret
+[KotlinBoolean numberWithBool:]:
0000000000052f78	stp	x20, x19, [sp, #-0x20]!
0000000000052f7c	stp	x29, x30, [sp, #0x10]
0000000000052f80	add	x29, sp, #0x10
0000000000052f84	mov	x19, x2
0000000000052f88	nop
0000000000052f8c	ldr	x1, #0x23e24 ; Objc selector ref: new
0000000000052f90	bl	0x55ca8 ; Objc message: -[x0 new]
0000000000052f94	bl	0x55c48 ; symbol stub for: _objc_autorelease
0000000000052f98	nop
0000000000052f9c	ldrsw	x8, _OBJC_IVAR_$_RCKBoolean.value_
0000000000052fa0	strb	w19, [x0, x8]
0000000000052fa4	ldp	x29, x30, [sp, #0x10]
0000000000052fa8	ldp	x20, x19, [sp], #0x20
0000000000052fac	ret
-[KotlinObjectHolder initWithRef:]:
0000000000052fb0	sub	sp, sp, #0x40
0000000000052fb4	stp	x22, x21, [sp, #0x10]
0000000000052fb8	stp	x20, x19, [sp, #0x20]
0000000000052fbc	stp	x29, x30, [sp, #0x30]
0000000000052fc0	add	x29, sp, #0x30
0000000000052fc4	mov	x19, x2
0000000000052fc8	nop
0000000000052fcc	ldr	x8, #0x24164 ; Objc class ref: RCKKotlinObjectHolder
0000000000052fd0	stp	x0, x8, [sp]
0000000000052fd4	nop
0000000000052fd8	ldr	x1, #0x23ce8 ; Objc selector ref: init
0000000000052fdc	mov	x0, sp
0000000000052fe0	bl	0x55cb4 ; Objc message: -[[x0 super] init]
0000000000052fe4	mov	x20, x0
0000000000052fe8	cbz	x0, 0x53038
0000000000052fec	adrp	x0, 40 ; 0x7a000
0000000000052ff0	add	x0, x0, #0x4e0
0000000000052ff4	ldr	x8, [x0]
0000000000052ff8	blr	x8
0000000000052ffc	ldr	x21, [x0]
0000000000053000	mov	w0, #0x1
0000000000053004	mov	w1, #0x28
0000000000053008	bl	0x55aec ; symbol stub for: _calloc
000000000005300c	ldr	x8, [x21, #0xa8]!
0000000000053010	sub	x9, x21, #0x8
0000000000053014	stp	x8, x21, [x0]
0000000000053018	str	x0, [x8, #0x8]
000000000005301c	str	x0, [x21]
0000000000053020	ldr	x8, [x21, #0x10]
0000000000053024	add	x8, x8, #0x1
0000000000053028	str	x8, [x21, #0x10]
000000000005302c	stp	x9, x0, [x0, #0x18]
0000000000053030	str	x19, [x0, #0x10]!
0000000000053034	stp	x19, x0, [x20, #0x8]
0000000000053038	mov	x0, x20
000000000005303c	ldp	x29, x30, [sp, #0x30]
0000000000053040	ldp	x20, x19, [sp, #0x20]
0000000000053044	ldp	x22, x21, [sp, #0x10]
0000000000053048	add	sp, sp, #0x40
000000000005304c	ret
-[KotlinObjectHolder ref]:
0000000000053050	stp	x20, x19, [sp, #-0x20]!
0000000000053054	stp	x29, x30, [sp, #0x10]
0000000000053058	add	x29, sp, #0x10
000000000005305c	mov	x19, x0
0000000000053060	bl	_Kotlin_initRuntimeIfNeeded
0000000000053064	ldr	x0, [x19, #0x8]
0000000000053068	ldp	x29, x30, [sp, #0x10]
000000000005306c	ldp	x20, x19, [sp], #0x20
0000000000053070	ret
-[KotlinObjectHolder dealloc]:
0000000000053074	sub	sp, sp, #0x50
0000000000053078	stp	x24, x23, [sp, #0x10]
000000000005307c	stp	x22, x21, [sp, #0x20]
0000000000053080	stp	x20, x19, [sp, #0x30]
0000000000053084	stp	x29, x30, [sp, #0x40]
0000000000053088	add	x29, sp, #0x40
000000000005308c	mov	x19, x0
0000000000053090	bl	_Kotlin_initRuntimeIfNeeded
0000000000053094	adrp	x21, 39 ; 0x7a000
0000000000053098	add	x21, x21, #0x4e0
000000000005309c	ldr	x24, [x21]
00000000000530a0	mov	x0, x21
00000000000530a4	blr	x24
00000000000530a8	ldr	x8, [x0]
00000000000530ac	add	x20, x8, #0x138
00000000000530b0	ldaxr	w22, [x20]
00000000000530b4	stlxr	w8, wzr, [x20]
00000000000530b8	cbnz	w8, 0x530b0
00000000000530bc	adr	x23, #0x4144d
00000000000530c0	nop
00000000000530c4	cmp	w22, #0x1
00000000000530c8	b.ne	0x530dc
00000000000530cc	ldarb	w8, [x23]
00000000000530d0	tbz	w8, #0x0, 0x530dc
00000000000530d4	mov	x0, x20
00000000000530d8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000530dc	ldr	x8, [x19, #0x8]
00000000000530e0	cbz	x8, 0x530fc
00000000000530e4	ldr	x1, [x19, #0x10]
00000000000530e8	mov	x0, x21
00000000000530ec	blr	x24
00000000000530f0	ldr	x8, [x0]
00000000000530f4	add	x0, x8, #0x8
00000000000530f8	bl	__ZN6kotlin2mm17StableRefRegistry19UnregisterStableRefEPNS0_10ThreadDataEPNS_16MultiSourceQueueIP9ObjHeaderNS_8SpinLockILNS_24MutexThreadStateHandlingE0EEENS_11std_support9allocatorIS6_EEE4NodeE
00000000000530fc	ldaxr	w8, [x20]
0000000000053100	stlxr	w9, w22, [x20]
0000000000053104	cbnz	w9, 0x530fc
0000000000053108	cbnz	w22, 0x53124
000000000005310c	cmp	w8, #0x1
0000000000053110	b.ne	0x53124
0000000000053114	ldarb	w8, [x23]
0000000000053118	tbz	w8, #0x0, 0x53124
000000000005311c	mov	x0, x20
0000000000053120	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000053124	nop
0000000000053128	ldr	x8, #0x24008 ; Objc class ref: RCKKotlinObjectHolder
000000000005312c	stp	x19, x8, [sp]
0000000000053130	nop
0000000000053134	ldr	x1, #0x23b3c ; Objc selector ref: dealloc
0000000000053138	mov	x0, sp
000000000005313c	bl	0x55cb4 ; Objc message: -[[x0 super] dealloc]
0000000000053140	ldp	x29, x30, [sp, #0x40]
0000000000053144	ldp	x20, x19, [sp, #0x30]
0000000000053148	ldp	x22, x21, [sp, #0x20]
000000000005314c	ldp	x24, x23, [sp, #0x10]
0000000000053150	add	sp, sp, #0x50
0000000000053154	ret
-[KotlinObjCWeakReference releaseAsAssociatedObject:]:
0000000000053158	cmp	w2, #0x1
000000000005315c	b.hi	0x53188
0000000000053160	stp	x20, x19, [sp, #-0x20]!
0000000000053164	stp	x29, x30, [sp, #0x10]
0000000000053168	add	x29, sp, #0x10
000000000005316c	mov	x19, x0
0000000000053170	add	x0, x0, #0x8
0000000000053174	bl	0x55c60 ; symbol stub for: _objc_destroyWeak
0000000000053178	mov	x0, x19
000000000005317c	ldp	x29, x30, [sp, #0x10]
0000000000053180	ldp	x20, x19, [sp], #0x20
0000000000053184	b	0x55ccc ; symbol stub for: _objc_release
0000000000053188	ret
-[KotlinBase toKotlin:]:
000000000005318c	stp	x20, x19, [sp, #-0x20]!
0000000000053190	stp	x29, x30, [sp, #0x10]
0000000000053194	add	x29, sp, #0x10
0000000000053198	mov	x19, x2
000000000005319c	mov	x20, x0
00000000000531a0	bl	_Kotlin_initRuntimeIfNeeded
00000000000531a4	ldr	x0, [x20, #0x8]
00000000000531a8	str	x0, [x19]
00000000000531ac	ldp	x29, x30, [sp, #0x10]
00000000000531b0	ldp	x20, x19, [sp], #0x20
00000000000531b4	ret
-[KotlinBase retain]:
00000000000531b8	sub	sp, sp, #0x50
00000000000531bc	stp	x24, x23, [sp, #0x10]
00000000000531c0	stp	x22, x21, [sp, #0x20]
00000000000531c4	stp	x20, x19, [sp, #0x30]
00000000000531c8	stp	x29, x30, [sp, #0x40]
00000000000531cc	add	x29, sp, #0x40
00000000000531d0	mov	x19, x0
00000000000531d4	ldrb	w8, [x0, #0x20]
00000000000531d8	cbz	w8, 0x531fc
00000000000531dc	nop
00000000000531e0	ldr	x8, #0x23f48 ; Objc class ref: RCKBase
00000000000531e4	stp	x19, x8, [sp]
00000000000531e8	nop
00000000000531ec	ldr	x1, #0x23c5c ; Objc selector ref: retain
00000000000531f0	mov	x0, sp
00000000000531f4	bl	0x55cb4 ; Objc message: -[[x0 super] retain]
00000000000531f8	b	0x53214
00000000000531fc	add	x8, x19, #0x18
0000000000053200	ldaxr	w9, [x8]
0000000000053204	add	w10, w9, #0x1
0000000000053208	stlxr	w11, w10, [x8]
000000000005320c	cbnz	w11, 0x53200
0000000000053210	cbz	w9, 0x53230
0000000000053214	mov	x0, x19
0000000000053218	ldp	x29, x30, [sp, #0x40]
000000000005321c	ldp	x20, x19, [sp, #0x30]
0000000000053220	ldp	x22, x21, [sp, #0x20]
0000000000053224	ldp	x24, x23, [sp, #0x10]
0000000000053228	add	sp, sp, #0x50
000000000005322c	ret
0000000000053230	ldr	x8, [x19, #0x8]
0000000000053234	cbz	x8, 0x53214
0000000000053238	bl	_Kotlin_initRuntimeIfNeeded
000000000005323c	adrp	x21, 39 ; 0x7a000
0000000000053240	add	x21, x21, #0x4e0
0000000000053244	ldr	x23, [x21]
0000000000053248	mov	x0, x21
000000000005324c	blr	x23
0000000000053250	ldr	x8, [x0]
0000000000053254	add	x20, x8, #0x138
0000000000053258	ldaxr	w22, [x20]
000000000005325c	stlxr	w8, wzr, [x20]
0000000000053260	cbnz	w8, 0x53258
0000000000053264	cmp	w22, #0x1
0000000000053268	b.ne	0x53284
000000000005326c	adr	x8, #0x4129d
0000000000053270	nop
0000000000053274	ldarb	w8, [x8]
0000000000053278	tbz	w8, #0x0, 0x53284
000000000005327c	mov	x0, x20
0000000000053280	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000053284	bl	_Kotlin_initRuntimeIfNeeded
0000000000053288	ldr	x24, [x19, #0x8]
000000000005328c	mov	x0, x21
0000000000053290	blr	x23
0000000000053294	ldr	x21, [x0]
0000000000053298	mov	w0, #0x1
000000000005329c	mov	w1, #0x28
00000000000532a0	bl	0x55aec ; symbol stub for: _calloc
00000000000532a4	ldr	x8, [x21, #0xa8]!
00000000000532a8	sub	x9, x21, #0x8
00000000000532ac	stp	x8, x21, [x0]
00000000000532b0	str	x0, [x8, #0x8]
00000000000532b4	str	x0, [x21]
00000000000532b8	ldr	x8, [x21, #0x10]
00000000000532bc	add	x8, x8, #0x1
00000000000532c0	str	x8, [x21, #0x10]
00000000000532c4	stp	x9, x0, [x0, #0x18]
00000000000532c8	str	x24, [x0, #0x10]!
00000000000532cc	str	x0, [x19, #0x10]
00000000000532d0	ldaxr	w8, [x20]
00000000000532d4	stlxr	w9, w22, [x20]
00000000000532d8	cbnz	w9, 0x532d0
00000000000532dc	cbnz	w22, 0x53214
00000000000532e0	cmp	w8, #0x1
00000000000532e4	b.ne	0x53214
00000000000532e8	adr	x8, #0x41221
00000000000532ec	nop
00000000000532f0	ldarb	w8, [x8]
00000000000532f4	tbz	w8, #0x0, 0x53214
00000000000532f8	mov	x0, x20
00000000000532fc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000053300	b	0x53214
-[KotlinBase _tryRetain]:
0000000000053304	sub	sp, sp, #0x90
0000000000053308	stp	x28, x27, [sp, #0x30]
000000000005330c	stp	x26, x25, [sp, #0x40]
0000000000053310	stp	x24, x23, [sp, #0x50]
0000000000053314	stp	x22, x21, [sp, #0x60]
0000000000053318	stp	x20, x19, [sp, #0x70]
000000000005331c	stp	x29, x30, [sp, #0x80]
0000000000053320	add	x29, sp, #0x80
0000000000053324	mov	x21, x0
0000000000053328	ldrb	w8, [x0, #0x20]
000000000005332c	cbz	w8, 0x53374
0000000000053330	nop
0000000000053334	ldr	x8, #0x23df4 ; Objc class ref: RCKBase
0000000000053338	stp	x21, x8, [sp]
000000000005333c	nop
0000000000053340	ldr	x1, #0x238a8 ; Objc selector ref: _tryRetain
0000000000053344	mov	x0, sp
0000000000053348	bl	0x55cb4 ; Objc message: -[[x0 super] _tryRetain]
000000000005334c	mov	x20, x0
0000000000053350	mov	x0, x20
0000000000053354	ldp	x29, x30, [sp, #0x80]
0000000000053358	ldp	x20, x19, [sp, #0x70]
000000000005335c	ldp	x22, x21, [sp, #0x60]
0000000000053360	ldp	x24, x23, [sp, #0x50]
0000000000053364	ldp	x26, x25, [sp, #0x40]
0000000000053368	ldp	x28, x27, [sp, #0x30]
000000000005336c	add	sp, sp, #0x90
0000000000053370	ret
0000000000053374	bl	_Kotlin_initRuntimeIfNeeded
0000000000053378	adrp	x20, 39 ; 0x7a000
000000000005337c	add	x20, x20, #0x4e0
0000000000053380	ldr	x24, [x20]
0000000000053384	mov	x0, x20
0000000000053388	blr	x24
000000000005338c	ldr	x8, [x0]
0000000000053390	add	x19, x8, #0x138
0000000000053394	ldaxr	w23, [x19]
0000000000053398	stlxr	w8, wzr, [x19]
000000000005339c	cbnz	w8, 0x53394
00000000000533a0	cmp	w23, #0x1
00000000000533a4	b.ne	0x533c0
00000000000533a8	adr	x8, #0x41161
00000000000533ac	nop
00000000000533b0	ldarb	w8, [x8]
00000000000533b4	tbz	w8, #0x0, 0x533c0
00000000000533b8	mov	x0, x19
00000000000533bc	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000533c0	ldr	x8, [x21, #0x8]
00000000000533c4	cbz	x8, 0x53420
00000000000533c8	mov	x0, x20
00000000000533cc	blr	x24
00000000000533d0	ldr	x9, [x0]
00000000000533d4	ldr	x10, [x9, #0x110]
00000000000533d8	add	x11, sp, #0x10
00000000000533dc	str	x11, [x9, #0x110]
00000000000533e0	mov	x9, #0x400000000
00000000000533e4	stp	x10, x9, [sp, #0x18]
00000000000533e8	str	x8, [sp, #0x28]
00000000000533ec	add	x8, x21, #0x18
00000000000533f0	ldaxr	w9, [x8]
00000000000533f4	add	w10, w9, #0x1
00000000000533f8	stlxr	w11, w10, [x8]
00000000000533fc	cbnz	w11, 0x533f0
0000000000053400	cbz	w9, 0x53458
0000000000053404	mov	x0, x20
0000000000053408	blr	x24
000000000005340c	ldr	x8, [x0]
0000000000053410	ldr	x9, [sp, #0x18]
0000000000053414	str	x9, [x8, #0x110]
0000000000053418	mov	w20, #0x1
000000000005341c	b	0x53424
0000000000053420	mov	w20, #0x0
0000000000053424	ldaxr	w8, [x19]
0000000000053428	stlxr	w9, w23, [x19]
000000000005342c	cbnz	w9, 0x53424
0000000000053430	cbnz	w23, 0x53350
0000000000053434	cmp	w8, #0x1
0000000000053438	b.ne	0x53350
000000000005343c	adr	x8, #0x410cd
0000000000053440	nop
0000000000053444	ldarb	w8, [x8]
0000000000053448	tbz	w8, #0x0, 0x53350
000000000005344c	mov	x0, x19
0000000000053450	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000053454	b	0x53350
0000000000053458	ldr	x8, [x21, #0x8]
000000000005345c	cbz	x8, 0x53404
0000000000053460	bl	_Kotlin_initRuntimeIfNeeded
0000000000053464	mov	x0, x20
0000000000053468	blr	x24
000000000005346c	ldr	x8, [x0]
0000000000053470	add	x22, x8, #0x138
0000000000053474	ldaxr	w25, [x22]
0000000000053478	stlxr	w8, wzr, [x22]
000000000005347c	cbnz	w8, 0x53474
0000000000053480	cmp	w25, #0x1
0000000000053484	b.ne	0x534a0
0000000000053488	adr	x8, #0x41081
000000000005348c	nop
0000000000053490	ldarb	w8, [x8]
0000000000053494	tbz	w8, #0x0, 0x534a0
0000000000053498	mov	x0, x22
000000000005349c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000534a0	ldr	x26, [x21, #0x8]
00000000000534a4	mov	x0, x20
00000000000534a8	blr	x24
00000000000534ac	ldr	x27, [x0]
00000000000534b0	mov	w0, #0x1
00000000000534b4	mov	w1, #0x28
00000000000534b8	bl	0x55aec ; symbol stub for: _calloc
00000000000534bc	ldr	x8, [x27, #0xa8]!
00000000000534c0	sub	x9, x27, #0x8
00000000000534c4	mov	x10, x0
00000000000534c8	str	x26, [x10, #0x10]!
00000000000534cc	str	x9, [x0, #0x18]
00000000000534d0	stp	x8, x27, [x0]
00000000000534d4	str	x0, [x8, #0x8]
00000000000534d8	str	x0, [x27]
00000000000534dc	ldr	x8, [x27, #0x10]
00000000000534e0	add	x8, x8, #0x1
00000000000534e4	str	x8, [x27, #0x10]
00000000000534e8	str	x0, [x0, #0x20]
00000000000534ec	str	x10, [x21, #0x10]
00000000000534f0	ldaxr	w8, [x22]
00000000000534f4	stlxr	w9, w25, [x22]
00000000000534f8	cbnz	w9, 0x534f0
00000000000534fc	cbnz	w25, 0x53404
0000000000053500	cmp	w8, #0x1
0000000000053504	b.ne	0x53404
0000000000053508	adr	x8, #0x41001
000000000005350c	nop
0000000000053510	ldarb	w8, [x8]
0000000000053514	tbz	w8, #0x0, 0x53404
0000000000053518	mov	x0, x22
000000000005351c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000053520	b	0x53404
-[KotlinBase release]:
0000000000053524	sub	sp, sp, #0x20
0000000000053528	stp	x29, x30, [sp, #0x10]
000000000005352c	add	x29, sp, #0x10
0000000000053530	ldrb	w8, [x0, #0x20]
0000000000053534	cbz	w8, 0x53560
0000000000053538	nop
000000000005353c	ldr	x8, #0x23bec ; Objc class ref: RCKBase
0000000000053540	stp	x0, x8, [sp]
0000000000053544	nop
0000000000053548	ldr	x1, #0x238e0 ; Objc selector ref: release
000000000005354c	mov	x0, sp
0000000000053550	bl	0x55cb4 ; Objc message: -[[x0 super] release]
0000000000053554	ldp	x29, x30, [sp, #0x10]
0000000000053558	add	sp, sp, #0x20
000000000005355c	ret
0000000000053560	add	x0, x0, #0x8
0000000000053564	ldp	x29, x30, [sp, #0x10]
0000000000053568	add	sp, sp, #0x20
000000000005356c	b	__ZN27BackRefFromAssociatedObject10releaseRefEv
-[KotlinBase releaseAsAssociatedObject:]:
0000000000053570	sub	sp, sp, #0x20
0000000000053574	stp	x29, x30, [sp, #0x10]
0000000000053578	add	x29, sp, #0x10
000000000005357c	cbz	w2, 0x5358c
0000000000053580	str	xzr, [x0, #0x8]
0000000000053584	cmp	w2, #0x1
0000000000053588	b.ne	0x535a8
000000000005358c	nop
0000000000053590	ldr	x8, #0x23b98 ; Objc class ref: RCKBase
0000000000053594	stp	x0, x8, [sp]
0000000000053598	nop
000000000005359c	ldr	x1, #0x2388c ; Objc selector ref: release
00000000000535a0	mov	x0, sp
00000000000535a4	bl	0x55cb4 ; Objc message: -[[x0 super] release]
00000000000535a8	ldp	x29, x30, [sp, #0x10]
00000000000535ac	add	sp, sp, #0x20
00000000000535b0	ret
-[KotlinBase copyWithZone:]:
00000000000535b4	b	0x55cd8 ; symbol stub for: _objc_retain
+[KotlinBase load]:
00000000000535b8	nop
00000000000535bc	ldr	x8, #0x41214
00000000000535c0	cmn	x8, #0x1
00000000000535c4	b.ne	0x535cc
00000000000535c8	ret
00000000000535cc	adr	x0, #0x41204
00000000000535d0	nop
00000000000535d4	adr	x1, #0x1e97c
00000000000535d8	nop
00000000000535dc	b	0x55b4c ; symbol stub for: _dispatch_once
+[KotlinBase initialize]:
00000000000535e0	sub	sp, sp, #0x70
00000000000535e4	stp	x28, x27, [sp, #0x10]
00000000000535e8	stp	x26, x25, [sp, #0x20]
00000000000535ec	stp	x24, x23, [sp, #0x30]
00000000000535f0	stp	x22, x21, [sp, #0x40]
00000000000535f4	stp	x20, x19, [sp, #0x50]
00000000000535f8	stp	x29, x30, [sp, #0x60]
00000000000535fc	add	x29, sp, #0x60
0000000000053600	mov	x19, x0
0000000000053604	nop
0000000000053608	ldr	x0, #0x23ac8 ; Objc class ref: RCKBase
000000000005360c	nop
0000000000053610	ldr	x1, #0x23608 ; Objc selector ref: class
0000000000053614	bl	0x55ca8 ; Objc message: +[RCKBase class]
0000000000053618	cmp	x0, x19
000000000005361c	b.ne	0x53640
0000000000053620	nop
0000000000053624	ldr	x8, #0x411ac
0000000000053628	cmn	x8, #0x1
000000000005362c	b.ne	0x53904
0000000000053630	nop
0000000000053634	ldr	x8, #0x4114c
0000000000053638	cmn	x8, #0x1
000000000005363c	b.ne	0x53928
0000000000053640	mov	x0, x19
0000000000053644	bl	0x55b34 ; symbol stub for: _class_getName
0000000000053648	mov	x20, x0
000000000005364c	mov	w22, #0x0
0000000000053650	mov	w21, #0x4
0000000000053654	adr	x23, #0x1d26c
0000000000053658	nop
000000000005365c	b	0x5366c
0000000000053660	sub	w21, w25, #0x1
0000000000053664	cmp	w21, w22
0000000000053668	b.lt	0x536a0
000000000005366c	add	w8, w21, w22
0000000000053670	cmp	w8, #0x0
0000000000053674	cinc	w8, w8, lt
0000000000053678	asr	w25, w8, #1
000000000005367c	ldr	x24, [x23, w25, sxtw #3]
0000000000053680	ldr	x1, [x24, #0x28]
0000000000053684	mov	x0, x20
0000000000053688	bl	0x55e64 ; symbol stub for: _strcmp
000000000005368c	tbnz	w0, #0x1f, 0x53660
0000000000053690	cbz	w0, 0x536c4
0000000000053694	add	w22, w25, #0x1
0000000000053698	cmp	w21, w22
000000000005369c	b.ge	0x5366c
00000000000536a0	mov	x0, x19
00000000000536a4	ldp	x29, x30, [sp, #0x60]
00000000000536a8	ldp	x20, x19, [sp, #0x50]
00000000000536ac	ldp	x22, x21, [sp, #0x40]
00000000000536b0	ldp	x24, x23, [sp, #0x30]
00000000000536b4	ldp	x26, x25, [sp, #0x20]
00000000000536b8	ldp	x28, x27, [sp, #0x10]
00000000000536bc	add	sp, sp, #0x70
00000000000536c0	b	__ZL19getOrCreateTypeInfoP10objc_class
00000000000536c4	adrp	x8, 39 ; 0x7a000
00000000000536c8	add	x8, x8, #0x4e0
00000000000536cc	ldr	x9, [x8]
00000000000536d0	mov	x0, x8
00000000000536d4	blr	x9
00000000000536d8	ldr	x22, [x0]
00000000000536dc	cbz	x22, 0x53700
00000000000536e0	add	x10, x22, #0x138
00000000000536e4	mov	w11, #0x1
00000000000536e8	ldaxr	w21, [x10]
00000000000536ec	stlxr	w12, w11, [x10]
00000000000536f0	cbnz	w12, 0x536e8
00000000000536f4	ldr	x23, [x24]
00000000000536f8	cbnz	x23, 0x5370c
00000000000536fc	b	0x537ac
0000000000053700	mov	w21, #0x1
0000000000053704	ldr	x23, [x24]
0000000000053708	cbz	x23, 0x537ac
000000000005370c	str	x23, [sp, #0x8]
0000000000053710	mov	x0, x8
0000000000053714	blr	x9
0000000000053718	ldr	x25, [x0]
000000000005371c	cbz	x25, 0x53738
0000000000053720	add	x8, x25, #0x138
0000000000053724	mov	w9, #0x1
0000000000053728	ldaxr	w20, [x8]
000000000005372c	stlxr	w10, w9, [x8]
0000000000053730	cbnz	w10, 0x53728
0000000000053734	b	0x5373c
0000000000053738	mov	w20, #0x1
000000000005373c	nop
0000000000053740	ldr	x0, #0x23920 ; Objc class ref: _OBJC_CLASS_$_NSValue
0000000000053744	bl	0x55c24 ; symbol stub for: _objc_alloc
0000000000053748	nop
000000000005374c	ldr	x1, #0x23594 ; Objc selector ref: initWithBytes:objCType:
0000000000053750	adr	x3, #0x9a92 ; literal pool for: "^v"
0000000000053754	nop
0000000000053758	add	x2, sp, #0x8
000000000005375c	bl	0x55ca8 ; Objc message: +[NSValue initWithBytes:objCType:]
0000000000053760	mov	x2, x0
0000000000053764	adr	x1, #0x40dae
0000000000053768	nop
000000000005376c	mov	x0, x19
0000000000053770	mov	x3, #0x0
0000000000053774	bl	0x55cfc ; symbol stub for: _objc_setAssociatedObject
0000000000053778	cbz	x25, 0x537ac
000000000005377c	add	x0, x25, #0x138
0000000000053780	ldaxr	w8, [x0]
0000000000053784	stlxr	w9, w20, [x0]
0000000000053788	cbnz	w9, 0x53780
000000000005378c	cbnz	w20, 0x537ac
0000000000053790	cmp	w8, #0x1
0000000000053794	b.ne	0x537ac
0000000000053798	adr	x8, #0x40d71
000000000005379c	nop
00000000000537a0	ldarb	w8, [x8]
00000000000537a4	tbz	w8, #0x0, 0x537ac
00000000000537a8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000537ac	ldr	w8, [x24, #0x38]
00000000000537b0	cmp	w8, #0x1
00000000000537b4	b.lt	0x537f4
00000000000537b8	mov	x20, #0x0
00000000000537bc	mov	x25, #0x0
00000000000537c0	ldr	x26, [x24, #0x30]
00000000000537c4	ldr	x0, [x26, x20]
00000000000537c8	bl	0x55e40 ; symbol stub for: _sel_registerName
00000000000537cc	mov	x1, x0
00000000000537d0	add	x8, x26, x20
00000000000537d4	ldp	x3, x2, [x8, #0x8]
00000000000537d8	mov	x0, x19
00000000000537dc	bl	0x55af8 ; symbol stub for: _class_addMethod
00000000000537e0	add	x25, x25, #0x1
00000000000537e4	ldrsw	x8, [x24, #0x38]
00000000000537e8	add	x20, x20, #0x18
00000000000537ec	cmp	x25, x8
00000000000537f0	b.lt	0x537c0
00000000000537f4	ldr	w8, [x24, #0x48]
00000000000537f8	cmp	w8, #0x1
00000000000537fc	b.lt	0x53844
0000000000053800	mov	x25, #0x0
0000000000053804	mov	x26, #0x0
0000000000053808	ldr	x27, [x24, #0x40]
000000000005380c	ldr	x0, [x27, x25]
0000000000053810	bl	0x55e40 ; symbol stub for: _sel_registerName
0000000000053814	mov	x20, x0
0000000000053818	mov	x0, x19
000000000005381c	bl	0x55d14 ; symbol stub for: _object_getClass
0000000000053820	add	x8, x27, x25
0000000000053824	ldp	x3, x2, [x8, #0x8]
0000000000053828	mov	x1, x20
000000000005382c	bl	0x55af8 ; symbol stub for: _class_addMethod
0000000000053830	add	x26, x26, #0x1
0000000000053834	ldrsw	x8, [x24, #0x48]
0000000000053838	add	x25, x25, #0x18
000000000005383c	cmp	x26, x8
0000000000053840	b.lt	0x53808
0000000000053844	cbz	x23, 0x538b0
0000000000053848	ldr	w8, [x23, #0x38]
000000000005384c	cmp	w8, #0x1
0000000000053850	b.lt	0x538b0
0000000000053854	mov	x24, #0x0
0000000000053858	b	0x5386c
000000000005385c	add	x24, x24, #0x1
0000000000053860	ldrsw	x8, [x23, #0x38]
0000000000053864	cmp	x24, x8
0000000000053868	b.ge	0x538b0
000000000005386c	ldr	x8, [x23, #0x30]
0000000000053870	ldr	x8, [x8, x24, lsl #3]
0000000000053874	ldr	x8, [x8, #0x60]
0000000000053878	ldr	x8, [x8, #0x10]
000000000005387c	cbz	x8, 0x5385c
0000000000053880	ldr	x0, [x8, #0x28]
0000000000053884	bl	0x55c90 ; symbol stub for: _objc_getProtocol
0000000000053888	mov	x20, x0
000000000005388c	cbz	x0, 0x5385c
0000000000053890	mov	x0, x19
0000000000053894	mov	x1, x20
0000000000053898	bl	0x55b04 ; symbol stub for: _class_addProtocol
000000000005389c	mov	x0, x19
00000000000538a0	bl	0x55d14 ; symbol stub for: _object_getClass
00000000000538a4	mov	x1, x20
00000000000538a8	bl	0x55b04 ; symbol stub for: _class_addProtocol
00000000000538ac	b	0x5385c
00000000000538b0	cbz	x22, 0x538e4
00000000000538b4	add	x0, x22, #0x138
00000000000538b8	ldaxr	w8, [x0]
00000000000538bc	stlxr	w9, w21, [x0]
00000000000538c0	cbnz	w9, 0x538b8
00000000000538c4	cbnz	w21, 0x538e4
00000000000538c8	cmp	w8, #0x1
00000000000538cc	b.ne	0x538e4
00000000000538d0	adr	x8, #0x40c39
00000000000538d4	nop
00000000000538d8	ldarb	w8, [x8]
00000000000538dc	tbz	w8, #0x0, 0x538e4
00000000000538e0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000538e4	ldp	x29, x30, [sp, #0x60]
00000000000538e8	ldp	x20, x19, [sp, #0x50]
00000000000538ec	ldp	x22, x21, [sp, #0x40]
00000000000538f0	ldp	x24, x23, [sp, #0x30]
00000000000538f4	ldp	x26, x25, [sp, #0x20]
00000000000538f8	ldp	x28, x27, [sp, #0x10]
00000000000538fc	add	sp, sp, #0x70
0000000000053900	ret
0000000000053904	adr	x0, #0x40ecc
0000000000053908	nop
000000000005390c	adr	x1, #0x1e644
0000000000053910	nop
0000000000053914	bl	0x55b4c ; symbol stub for: _dispatch_once
0000000000053918	nop
000000000005391c	ldr	x8, #0x40e64
0000000000053920	cmn	x8, #0x1
0000000000053924	b.eq	0x53640
0000000000053928	adr	x0, #0x40e58
000000000005392c	nop
0000000000053930	adr	x1, #0x1e5c0
0000000000053934	nop
0000000000053938	bl	0x55b4c ; symbol stub for: _dispatch_once
000000000005393c	b	0x53640
0000000000053940	mov	x19, x0
0000000000053944	cbz	x25, 0x53988
0000000000053948	add	x0, x25, #0x138
000000000005394c	ldaxr	w8, [x0]
0000000000053950	stlxr	w9, w20, [x0]
0000000000053954	cbnz	w9, 0x5394c
0000000000053958	cbnz	w20, 0x53988
000000000005395c	cmp	w8, #0x1
0000000000053960	b.ne	0x53988
0000000000053964	adr	x8, #0x40ba5
0000000000053968	nop
000000000005396c	ldarb	w8, [x8]
0000000000053970	tbz	w8, #0x0, 0x53988
0000000000053974	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000053978	b	0x53988
000000000005397c	b	0x53984
0000000000053980	b	0x53984
0000000000053984	mov	x19, x0
0000000000053988	cbnz	x22, 0x53994
000000000005398c	mov	x0, x19
0000000000053990	bl	0x558ac ; symbol stub for: __Unwind_Resume
0000000000053994	add	x0, x22, #0x138
0000000000053998	ldaxr	w8, [x0]
000000000005399c	stlxr	w9, w21, [x0]
00000000000539a0	cbnz	w9, 0x53998
00000000000539a4	cbnz	w21, 0x5398c
00000000000539a8	cmp	w8, #0x1
00000000000539ac	b.ne	0x5398c
00000000000539b0	adr	x8, #0x40b59
00000000000539b4	nop
00000000000539b8	ldarb	w8, [x8]
00000000000539bc	tbz	w8, #0x0, 0x5398c
00000000000539c0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000539c4	mov	x0, x19
00000000000539c8	bl	0x558ac ; symbol stub for: __Unwind_Resume
+[KotlinBase allocWithZone:]:
00000000000539cc	sub	sp, sp, #0xa0
00000000000539d0	stp	x28, x27, [sp, #0x40]
00000000000539d4	stp	x26, x25, [sp, #0x50]
00000000000539d8	stp	x24, x23, [sp, #0x60]
00000000000539dc	stp	x22, x21, [sp, #0x70]
00000000000539e0	stp	x20, x19, [sp, #0x80]
00000000000539e4	stp	x29, x30, [sp, #0x90]
00000000000539e8	add	x29, sp, #0x90
00000000000539ec	mov	x20, x2
00000000000539f0	mov	x22, x0
00000000000539f4	bl	_Kotlin_initRuntimeIfNeeded
00000000000539f8	adrp	x21, 39 ; 0x7a000
00000000000539fc	add	x21, x21, #0x4e0
0000000000053a00	ldr	x27, [x21]
0000000000053a04	mov	x0, x21
0000000000053a08	blr	x27
0000000000053a0c	ldr	x26, [x0]
0000000000053a10	add	x19, x26, #0x138
0000000000053a14	ldaxr	w25, [x19]
0000000000053a18	stlxr	w8, wzr, [x19]
0000000000053a1c	cbnz	w8, 0x53a14
0000000000053a20	cmp	w25, #0x1
0000000000053a24	b.ne	0x53a40
0000000000053a28	adr	x8, #0x40ae1
0000000000053a2c	nop
0000000000053a30	ldarb	w8, [x8]
0000000000053a34	tbz	w8, #0x0, 0x53a40
0000000000053a38	mov	x0, x19
0000000000053a3c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000053a40	nop
0000000000053a44	ldr	x8, #0x236dc ; Objc class ref: RCKBase
0000000000053a48	stp	x22, x8, [sp, #0x30]
0000000000053a4c	nop
0000000000053a50	ldr	x1, #0x231b0 ; Objc selector ref: allocWithZone:
0000000000053a54	add	x0, sp, #0x30
0000000000053a58	mov	x2, x20
0000000000053a5c	bl	0x55cb4 ; Objc message: -[[x0 super] allocWithZone:]
0000000000053a60	mov	x20, x0
0000000000053a64	adr	x1, #0x40aae
0000000000053a68	nop
0000000000053a6c	mov	x0, x22
0000000000053a70	bl	0x55c78 ; symbol stub for: _objc_getAssociatedObject
0000000000053a74	nop
0000000000053a78	ldr	x1, #0x23390 ; Objc selector ref: pointerValue
0000000000053a7c	bl	0x55ca8 ; Objc message: -[x0 pointerValue]
0000000000053a80	mov	x23, x0
0000000000053a84	cbnz	x0, 0x53ac4
0000000000053a88	nop
0000000000053a8c	ldr	x24, #0x235cc ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000053a90	mov	x0, x22
0000000000053a94	bl	0x55d14 ; symbol stub for: _object_getClass
0000000000053a98	bl	0x55b34 ; symbol stub for: _class_getName
0000000000053a9c	nop
0000000000053aa0	ldr	x8, #0xc568 ; literal pool symbol address: _NSGenericException
0000000000053aa4	ldr	x2, [x8]
0000000000053aa8	nop
0000000000053aac	ldr	x1, #0x23364 ; Objc selector ref: raise:format:
0000000000053ab0	str	x0, [sp]
0000000000053ab4	adr	x3, #0x1e63c ; Objc cfstring ref: @"bad cfstring ref"
0000000000053ab8	nop
0000000000053abc	mov	x0, x24
0000000000053ac0	bl	0x55ca8 ; Objc message: +[NSException raise:format:]
0000000000053ac4	ldr	w8, [x23, #0x14]
0000000000053ac8	tbz	w8, #0x1f, 0x53b0c
0000000000053acc	nop
0000000000053ad0	ldr	x24, #0x23588 ; Objc class ref: _OBJC_CLASS_$_NSException
0000000000053ad4	mov	x0, x22
0000000000053ad8	bl	0x55d14 ; symbol stub for: _object_getClass
0000000000053adc	bl	0x55b34 ; symbol stub for: _class_getName
0000000000053ae0	nop
0000000000053ae4	ldr	x8, #0xc524 ; literal pool symbol address: _NSGenericException
0000000000053ae8	ldr	x2, [x8]
0000000000053aec	nop
0000000000053af0	ldr	x1, #0x23320 ; Objc selector ref: raise:format:
0000000000053af4	str	x0, [sp]
0000000000053af8	adr	x3, #0x1e618 ; Objc cfstring ref: @"bad cfstring ref"
0000000000053afc	nop
0000000000053b00	mov	x0, x24
0000000000053b04	bl	0x55ca8 ; Objc message: +[NSException raise:format:]
0000000000053b08	ldr	w8, [x23, #0x14]
0000000000053b0c	str	xzr, [sp, #0x28]
0000000000053b10	mov	x0, x21
0000000000053b14	blr	x27
0000000000053b18	ldr	x9, [x0]
0000000000053b1c	add	x10, sp, #0x10
0000000000053b20	ldp	x11, x12, [x9, #0x110]
0000000000053b24	str	x10, [x9, #0x110]
0000000000053b28	mov	x9, #0x400000000
0000000000053b2c	stp	x11, x9, [sp, #0x18]
0000000000053b30	sxtw	x8, w8
0000000000053b34	add	x8, x8, #0xf
0000000000053b38	and	x1, x8, #0xfffffffffffffff8
0000000000053b3c	add	x0, x12, #0x70
0000000000053b40	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000053b44	str	x23, [x0, #0x10]!
0000000000053b48	stur	xzr, [x0, #-0x8]
0000000000053b4c	str	x0, [sp, #0x28]
0000000000053b50	ldar	x8, [x0]
0000000000053b54	and	x8, x8, #0xfffffffffffffffc
0000000000053b58	ldr	x9, [x8]
0000000000053b5c	cmp	x9, x8
0000000000053b60	csel	x8, xzr, x8, eq
0000000000053b64	cbnz	x8, 0x53b70
0000000000053b68	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000053b6c	mov	x8, x0
0000000000053b70	add	x8, x8, #0x10
0000000000053b74	stlr	x20, [x8]
0000000000053b78	ldr	x22, [sp, #0x28]
0000000000053b7c	str	x22, [x20, #0x8]
0000000000053b80	mov	x0, x21
0000000000053b84	blr	x27
0000000000053b88	ldr	x21, [x0]
0000000000053b8c	mov	w23, #0x1
0000000000053b90	mov	w0, #0x1
0000000000053b94	mov	w1, #0x28
0000000000053b98	bl	0x55aec ; symbol stub for: _calloc
0000000000053b9c	ldr	x8, [x21, #0xa8]!
0000000000053ba0	sub	x9, x21, #0x8
0000000000053ba4	mov	x10, x0
0000000000053ba8	str	x22, [x10, #0x10]!
0000000000053bac	str	x9, [x0, #0x18]
0000000000053bb0	stp	x8, x21, [x0]
0000000000053bb4	str	x0, [x8, #0x8]
0000000000053bb8	str	x0, [x21]
0000000000053bbc	ldr	x8, [x21, #0x10]
0000000000053bc0	add	x8, x8, #0x1
0000000000053bc4	str	x8, [x21, #0x10]
0000000000053bc8	str	x0, [x0, #0x20]
0000000000053bcc	str	x10, [x20, #0x10]
0000000000053bd0	str	w23, [x20, #0x18]
0000000000053bd4	strb	wzr, [x20, #0x20]
0000000000053bd8	ldr	x8, [sp, #0x18]
0000000000053bdc	str	x8, [x21, #0x68]
0000000000053be0	cbz	x26, 0x53c14
0000000000053be4	ldaxr	w8, [x19]
0000000000053be8	stlxr	w9, w25, [x19]
0000000000053bec	cbnz	w9, 0x53be4
0000000000053bf0	cbnz	w25, 0x53c14
0000000000053bf4	cmp	w8, #0x1
0000000000053bf8	b.ne	0x53c14
0000000000053bfc	adr	x8, #0x4090d
0000000000053c00	nop
0000000000053c04	ldarb	w8, [x8]
0000000000053c08	tbz	w8, #0x0, 0x53c14
0000000000053c0c	mov	x0, x19
0000000000053c10	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000053c14	mov	x0, x20
0000000000053c18	ldp	x29, x30, [sp, #0x90]
0000000000053c1c	ldp	x20, x19, [sp, #0x80]
0000000000053c20	ldp	x22, x21, [sp, #0x70]
0000000000053c24	ldp	x24, x23, [sp, #0x60]
0000000000053c28	ldp	x26, x25, [sp, #0x50]
0000000000053c2c	ldp	x28, x27, [sp, #0x40]
0000000000053c30	add	sp, sp, #0xa0
0000000000053c34	ret
0000000000053c38	b	0x53c3c
0000000000053c3c	mov	x20, x0
0000000000053c40	cbz	x26, 0x53c74
0000000000053c44	ldaxr	w8, [x19]
0000000000053c48	stlxr	w9, w25, [x19]
0000000000053c4c	cbnz	w9, 0x53c44
0000000000053c50	cbnz	w25, 0x53c74
0000000000053c54	cmp	w8, #0x1
0000000000053c58	b.ne	0x53c74
0000000000053c5c	adr	x8, #0x408ad
0000000000053c60	nop
0000000000053c64	ldarb	w8, [x8]
0000000000053c68	tbz	w8, #0x0, 0x53c74
0000000000053c6c	mov	x0, x19
0000000000053c70	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000053c74	mov	x0, x20
0000000000053c78	bl	0x558ac ; symbol stub for: __Unwind_Resume
+[KotlinBase createRetainedWrapper:]:
0000000000053c7c	sub	sp, sp, #0x60
0000000000053c80	stp	x26, x25, [sp, #0x10]
0000000000053c84	stp	x24, x23, [sp, #0x20]
0000000000053c88	stp	x22, x21, [sp, #0x30]
0000000000053c8c	stp	x20, x19, [sp, #0x40]
0000000000053c90	stp	x29, x30, [sp, #0x50]
0000000000053c94	add	x29, sp, #0x50
0000000000053c98	mov	x21, x2
0000000000053c9c	nop
0000000000053ca0	ldr	x8, #0x23480 ; Objc class ref: RCKBase
0000000000053ca4	stp	x0, x8, [sp]
0000000000053ca8	nop
0000000000053cac	ldr	x1, #0x22f54 ; Objc selector ref: allocWithZone:
0000000000053cb0	mov	x0, sp
0000000000053cb4	mov	x2, #0x0
0000000000053cb8	bl	0x55cb4 ; Objc message: -[[x0 super] allocWithZone:]
0000000000053cbc	mov	x19, x0
0000000000053cc0	mov	x20, x0
0000000000053cc4	str	x21, [x20, #0x8]!
0000000000053cc8	adrp	x22, 39 ; 0x7a000
0000000000053ccc	add	x22, x22, #0x4e0
0000000000053cd0	ldr	x23, [x22]
0000000000053cd4	mov	x0, x22
0000000000053cd8	blr	x23
0000000000053cdc	ldr	x24, [x0]
0000000000053ce0	mov	w25, #0x1
0000000000053ce4	mov	w0, #0x1
0000000000053ce8	mov	w1, #0x28
0000000000053cec	bl	0x55aec ; symbol stub for: _calloc
0000000000053cf0	ldr	x8, [x24, #0xa8]!
0000000000053cf4	sub	x9, x24, #0x8
0000000000053cf8	stp	x8, x24, [x0]
0000000000053cfc	str	x0, [x8, #0x8]
0000000000053d00	str	x0, [x24]
0000000000053d04	ldr	x8, [x24, #0x10]
0000000000053d08	add	x8, x8, #0x1
0000000000053d0c	str	x8, [x24, #0x10]
0000000000053d10	stp	x9, x0, [x0, #0x18]
0000000000053d14	str	x21, [x0, #0x10]!
0000000000053d18	str	x0, [x19, #0x10]
0000000000053d1c	str	w25, [x19, #0x18]
0000000000053d20	ldr	x8, [x21]
0000000000053d24	and	w8, w8, #0x1
0000000000053d28	strb	w8, [x19, #0x20]
0000000000053d2c	ldr	x8, [x21]
0000000000053d30	tbnz	w8, #0x0, 0x53dfc
0000000000053d34	ldar	x8, [x21]
0000000000053d38	and	x8, x8, #0xfffffffffffffffc
0000000000053d3c	ldr	x9, [x8]
0000000000053d40	cmp	x9, x8
0000000000053d44	csel	x0, xzr, x8, eq
0000000000053d48	cbnz	x0, 0x53d54
0000000000053d4c	mov	x0, x21
0000000000053d50	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000053d54	add	x8, x0, #0x10
0000000000053d58	ldaxr	x21, [x8]
0000000000053d5c	cbnz	x21, 0x53d74
0000000000053d60	stlxr	w9, x19, [x8]
0000000000053d64	cbnz	w9, 0x53d58
0000000000053d68	mov	w8, #0x1
0000000000053d6c	tbz	w8, #0x0, 0x53d80
0000000000053d70	b	0x53dfc
0000000000053d74	mov	w8, #0x0
0000000000053d78	clrex
0000000000053d7c	tbnz	w8, #0x0, 0x53dfc
0000000000053d80	mov	x0, x22
0000000000053d84	blr	x23
0000000000053d88	ldr	x24, [x0]
0000000000053d8c	add	x22, x24, #0x138
0000000000053d90	mov	w8, #0x1
0000000000053d94	ldaxr	w23, [x22]
0000000000053d98	stlxr	w9, w8, [x22]
0000000000053d9c	cbnz	w9, 0x53d94
0000000000053da0	mov	x0, x20
0000000000053da4	bl	__ZN27BackRefFromAssociatedObject10releaseRefEv
0000000000053da8	nop
0000000000053dac	ldr	x1, #0x22e24 ; Objc selector ref: RCK_releaseAsAssociatedObject:
0000000000053db0	mov	x0, x19
0000000000053db4	mov	w2, #0x1
0000000000053db8	bl	0x55ca8 ; Objc message: -[x0 RCK_releaseAsAssociatedObject:]
0000000000053dbc	cbz	x24, 0x53df0
0000000000053dc0	ldaxr	w8, [x22]
0000000000053dc4	stlxr	w9, w23, [x22]
0000000000053dc8	cbnz	w9, 0x53dc0
0000000000053dcc	cbnz	w23, 0x53df0
0000000000053dd0	cmp	w8, #0x1
0000000000053dd4	b.ne	0x53df0
0000000000053dd8	adr	x8, #0x40731
0000000000053ddc	nop
0000000000053de0	ldarb	w8, [x8]
0000000000053de4	tbz	w8, #0x0, 0x53df0
0000000000053de8	mov	x0, x22
0000000000053dec	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000053df0	mov	x0, x21
0000000000053df4	bl	0x55cd8 ; symbol stub for: _objc_retain
0000000000053df8	mov	x19, x0
0000000000053dfc	mov	x0, x19
0000000000053e00	ldp	x29, x30, [sp, #0x50]
0000000000053e04	ldp	x20, x19, [sp, #0x40]
0000000000053e08	ldp	x22, x21, [sp, #0x30]
0000000000053e0c	ldp	x24, x23, [sp, #0x20]
0000000000053e10	ldp	x26, x25, [sp, #0x10]
0000000000053e14	add	sp, sp, #0x60
0000000000053e18	ret
0000000000053e1c	mov	x19, x0
0000000000053e20	cbz	x24, 0x53e54
0000000000053e24	ldaxr	w8, [x22]
0000000000053e28	stlxr	w9, w23, [x22]
0000000000053e2c	cbnz	w9, 0x53e24
0000000000053e30	cbnz	w23, 0x53e54
0000000000053e34	cmp	w8, #0x1
0000000000053e38	b.ne	0x53e54
0000000000053e3c	adr	x8, #0x406cd
0000000000053e40	nop
0000000000053e44	ldarb	w8, [x8]
0000000000053e48	tbz	w8, #0x0, 0x53e54
0000000000053e4c	mov	x0, x22
0000000000053e50	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000053e54	mov	x0, x19
0000000000053e58	bl	0x558ac ; symbol stub for: __Unwind_Resume
____ZL15injectToRuntimev_block_invoke:
0000000000053e5c	stp	x29, x30, [sp, #-0x10]!
0000000000053e60	mov	x29, sp
0000000000053e64	nop
0000000000053e68	ldr	x8, #0x408f0
0000000000053e6c	cbnz	x8, 0x53ea4
0000000000053e70	nop
0000000000053e74	ldr	x8, #0x22d64 ; Objc selector ref: RCK_toKotlin:
0000000000053e78	adr	x9, #0x408e0
0000000000053e7c	nop
0000000000053e80	str	x8, [x9]
0000000000053e84	ldr	x8, [x9, #0x8]
0000000000053e88	cbnz	x8, 0x53ea4
0000000000053e8c	nop
0000000000053e90	ldr	x8, #0x22d40 ; Objc selector ref: RCK_releaseAsAssociatedObject:
0000000000053e94	adrp	x9, 65 ; 0x94000
0000000000053e98	str	x8, [x9, #0x760]
0000000000053e9c	ldp	x29, x30, [sp], #0x10
0000000000053ea0	ret
0000000000053ea4	adr	x2, #0x971a ; literal pool for: "runtime injected twice; https://youtrack.jetbrains.com/issue/KT-42254 might be related"
0000000000053ea8	nop
0000000000053eac	mov	w0, #0x0
0000000000053eb0	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
-[NSString(NSStringToKotlin) toKotlin:]:
0000000000053eb4	mov	x1, x2
0000000000053eb8	b	_Kotlin_Interop_CreateKStringFromNSString
-[NSObject(NSObjectToKotlin) toKotlin:]:
0000000000053ebc	stp	x22, x21, [sp, #-0x30]!
0000000000053ec0	stp	x20, x19, [sp, #0x10]
0000000000053ec4	stp	x29, x30, [sp, #0x20]
0000000000053ec8	add	x29, sp, #0x20
0000000000053ecc	mov	x21, x2
0000000000053ed0	mov	x19, x0
0000000000053ed4	bl	0x55d14 ; symbol stub for: _object_getClass
0000000000053ed8	bl	__ZL19getOrCreateTypeInfoP10objc_class
0000000000053edc	mov	x22, x0
0000000000053ee0	mov	x0, x19
0000000000053ee4	bl	0x55cd8 ; symbol stub for: _objc_retain
0000000000053ee8	mov	x19, x0
0000000000053eec	adrp	x0, 39 ; 0x7a000
0000000000053ef0	add	x0, x0, #0x4e0
0000000000053ef4	ldr	x8, [x0]
0000000000053ef8	blr	x8
0000000000053efc	ldr	x8, [x0]
0000000000053f00	ldr	x8, [x8, #0x118]
0000000000053f04	ldrsw	x9, [x22, #0x14]
0000000000053f08	add	x9, x9, #0xf
0000000000053f0c	and	x1, x9, #0xfffffffffffffff8
0000000000053f10	add	x0, x8, #0x70
0000000000053f14	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000053f18	mov	x20, x0
0000000000053f1c	str	x22, [x20, #0x10]!
0000000000053f20	stur	xzr, [x20, #-0x8]
0000000000053f24	str	x20, [x21]
0000000000053f28	ldar	x8, [x20]
0000000000053f2c	and	x8, x8, #0xfffffffffffffffc
0000000000053f30	ldr	x9, [x8]
0000000000053f34	cmp	x9, x8
0000000000053f38	csel	x0, xzr, x8, eq
0000000000053f3c	cbnz	x0, 0x53f48
0000000000053f40	mov	x0, x20
0000000000053f44	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000053f48	add	x8, x0, #0x10
0000000000053f4c	stlr	x19, [x8]
0000000000053f50	mov	x0, x20
0000000000053f54	ldp	x29, x30, [sp, #0x20]
0000000000053f58	ldp	x20, x19, [sp, #0x10]
0000000000053f5c	ldp	x22, x21, [sp], #0x30
0000000000053f60	ret
-[NSObject(NSObjectToKotlin) releaseAsAssociatedObject:]:
0000000000053f64	cmp	w2, #0x1
0000000000053f68	b.hi	0x53f70
0000000000053f6c	b	0x55ccc ; symbol stub for: _objc_release
0000000000053f70	ret
-[NSNumber(NSNumberToKotlin) toKotlin:]:
0000000000053f74	sub	sp, sp, #0x50
0000000000053f78	stp	x22, x21, [sp, #0x20]
0000000000053f7c	stp	x20, x19, [sp, #0x30]
0000000000053f80	stp	x29, x30, [sp, #0x40]
0000000000053f84	add	x29, sp, #0x40
0000000000053f88	mov	x19, x2
0000000000053f8c	mov	x20, x0
0000000000053f90	nop
0000000000053f94	ldr	x1, #0x22e4c ; Objc selector ref: objCType
0000000000053f98	bl	0x55ca8 ; Objc message: -[x0 objCType]
0000000000053f9c	ldrsb	w8, [x0]
0000000000053fa0	sub	w8, w8, #0x43
0000000000053fa4	cmp	w8, #0x30
0000000000053fa8	b.hi	0x53fec
0000000000053fac	adr	x9, #0x4130
0000000000053fb0	nop
0000000000053fb4	adr	x10, #0x10
0000000000053fb8	ldrb	w11, [x9, x8]
0000000000053fbc	add	x10, x10, x11, lsl #2
0000000000053fc0	br	x10
0000000000053fc4	nop
0000000000053fc8	ldr	x1, #0x22eb8 ; Objc selector ref: unsignedCharValue
0000000000053fcc	mov	x0, x20
0000000000053fd0	bl	0x55ca8 ; Objc message: -[x0 unsignedCharValue]
0000000000053fd4	mov	x1, x19
0000000000053fd8	ldp	x29, x30, [sp, #0x40]
0000000000053fdc	ldp	x20, x19, [sp, #0x30]
0000000000053fe0	ldp	x22, x21, [sp, #0x20]
0000000000053fe4	add	sp, sp, #0x50
0000000000053fe8	b	_Kotlin_boxUByte
0000000000053fec	mov	x0, x20
0000000000053ff0	bl	0x55d14 ; symbol stub for: _object_getClass
0000000000053ff4	bl	__ZL19getOrCreateTypeInfoP10objc_class
0000000000053ff8	mov	x22, x0
0000000000053ffc	mov	x0, x20
0000000000054000	bl	0x55cd8 ; symbol stub for: _objc_retain
0000000000054004	mov	x21, x0
0000000000054008	adrp	x0, 38 ; 0x7a000
000000000005400c	add	x0, x0, #0x4e0
0000000000054010	ldr	x8, [x0]
0000000000054014	blr	x8
0000000000054018	ldr	x8, [x0]
000000000005401c	ldr	x8, [x8, #0x118]
0000000000054020	ldrsw	x9, [x22, #0x14]
0000000000054024	add	x9, x9, #0xf
0000000000054028	and	x1, x9, #0xfffffffffffffff8
000000000005402c	add	x0, x8, #0x70
0000000000054030	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
0000000000054034	mov	x20, x0
0000000000054038	str	x22, [x20, #0x10]!
000000000005403c	stur	xzr, [x20, #-0x8]
0000000000054040	str	x20, [x19]
0000000000054044	ldar	x8, [x20]
0000000000054048	and	x8, x8, #0xfffffffffffffffc
000000000005404c	ldr	x9, [x8]
0000000000054050	cmp	x9, x8
0000000000054054	csel	x0, xzr, x8, eq
0000000000054058	cbnz	x0, 0x54064
000000000005405c	mov	x0, x20
0000000000054060	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000054064	add	x8, x0, #0x10
0000000000054068	stlr	x21, [x8]
000000000005406c	mov	x0, x20
0000000000054070	ldp	x29, x30, [sp, #0x40]
0000000000054074	ldp	x20, x19, [sp, #0x30]
0000000000054078	ldp	x22, x21, [sp, #0x20]
000000000005407c	add	sp, sp, #0x50
0000000000054080	ret
0000000000054084	nop
0000000000054088	ldr	x1, #0x22e00 ; Objc selector ref: unsignedIntValue
000000000005408c	mov	x0, x20
0000000000054090	bl	0x55ca8 ; Objc message: -[x0 unsignedIntValue]
0000000000054094	mov	x1, x19
0000000000054098	ldp	x29, x30, [sp, #0x40]
000000000005409c	ldp	x20, x19, [sp, #0x30]
00000000000540a0	ldp	x22, x21, [sp, #0x20]
00000000000540a4	add	sp, sp, #0x50
00000000000540a8	b	_Kotlin_boxUInt
00000000000540ac	nop
00000000000540b0	ldr	x1, #0x22de0 ; Objc selector ref: unsignedLongLongValue
00000000000540b4	mov	x0, x20
00000000000540b8	bl	0x55ca8 ; Objc message: -[x0 unsignedLongLongValue]
00000000000540bc	mov	x1, x19
00000000000540c0	ldp	x29, x30, [sp, #0x40]
00000000000540c4	ldp	x20, x19, [sp, #0x30]
00000000000540c8	ldp	x22, x21, [sp, #0x20]
00000000000540cc	add	sp, sp, #0x50
00000000000540d0	b	_Kotlin_boxULong
00000000000540d4	nop
00000000000540d8	ldr	x1, #0x22dc0 ; Objc selector ref: unsignedShortValue
00000000000540dc	mov	x0, x20
00000000000540e0	bl	0x55ca8 ; Objc message: -[x0 unsignedShortValue]
00000000000540e4	mov	x1, x19
00000000000540e8	ldp	x29, x30, [sp, #0x40]
00000000000540ec	ldp	x20, x19, [sp, #0x30]
00000000000540f0	ldp	x22, x21, [sp, #0x20]
00000000000540f4	add	sp, sp, #0x50
00000000000540f8	b	_Kotlin_boxUShort
00000000000540fc	nop
0000000000054100	ldr	x1, #0x22b10 ; Objc selector ref: charValue
0000000000054104	mov	x0, x20
0000000000054108	bl	0x55ca8 ; Objc message: -[x0 charValue]
000000000005410c	mov	x20, x0
0000000000054110	str	xzr, [sp, #0x8]
0000000000054114	adrp	x21, 38 ; 0x7a000
0000000000054118	add	x21, x21, #0x4e0
000000000005411c	ldr	x22, [x21]
0000000000054120	mov	x0, x21
0000000000054124	blr	x22
0000000000054128	ldr	x8, [x0]
000000000005412c	ldr	x9, [x8, #0x110]
0000000000054130	add	x10, sp, #0x8
0000000000054134	str	x10, [x8, #0x110]
0000000000054138	mov	x8, #0x300000000
000000000005413c	stp	x9, x8, [sp, #0x10]
0000000000054140	adr	x8, #0x403c9
0000000000054144	nop
0000000000054148	ldarb	w8, [x8]
000000000005414c	tbz	w8, #0x0, 0x54154
0000000000054150	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
0000000000054154	mov	x0, x20
0000000000054158	mov	x1, x19
000000000005415c	bl	"_kfun:kotlin#<Byte-box>(kotlin.Byte){}kotlin.Any"
0000000000054160	b	0x54218
0000000000054164	nop
0000000000054168	ldr	x1, #0x22b20 ; Objc selector ref: doubleValue
000000000005416c	mov	x0, x20
0000000000054170	bl	0x55ca8 ; Objc message: -[x0 doubleValue]
0000000000054174	mov	x0, x19
0000000000054178	ldp	x29, x30, [sp, #0x40]
000000000005417c	ldp	x20, x19, [sp, #0x30]
0000000000054180	ldp	x22, x21, [sp, #0x20]
0000000000054184	add	sp, sp, #0x50
0000000000054188	b	_Kotlin_boxDouble
000000000005418c	nop
0000000000054190	ldr	x1, #0x22b10 ; Objc selector ref: floatValue
0000000000054194	mov	x0, x20
0000000000054198	bl	0x55ca8 ; Objc message: -[x0 floatValue]
000000000005419c	mov	x0, x19
00000000000541a0	ldp	x29, x30, [sp, #0x40]
00000000000541a4	ldp	x20, x19, [sp, #0x30]
00000000000541a8	ldp	x22, x21, [sp, #0x20]
00000000000541ac	add	sp, sp, #0x50
00000000000541b0	b	_Kotlin_boxFloat
00000000000541b4	nop
00000000000541b8	ldr	x1, #0x22bb0 ; Objc selector ref: intValue
00000000000541bc	mov	x0, x20
00000000000541c0	bl	0x55ca8 ; Objc message: -[x0 intValue]
00000000000541c4	mov	x20, x0
00000000000541c8	str	xzr, [sp, #0x8]
00000000000541cc	adrp	x21, 38 ; 0x7a000
00000000000541d0	add	x21, x21, #0x4e0
00000000000541d4	ldr	x22, [x21]
00000000000541d8	mov	x0, x21
00000000000541dc	blr	x22
00000000000541e0	ldr	x8, [x0]
00000000000541e4	ldr	x9, [x8, #0x110]
00000000000541e8	add	x10, sp, #0x8
00000000000541ec	str	x10, [x8, #0x110]
00000000000541f0	mov	x8, #0x300000000
00000000000541f4	stp	x9, x8, [sp, #0x10]
00000000000541f8	adr	x8, #0x40311
00000000000541fc	nop
0000000000054200	ldarb	w8, [x8]
0000000000054204	tbz	w8, #0x0, 0x5420c
0000000000054208	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
000000000005420c	mov	x0, x20
0000000000054210	mov	x1, x19
0000000000054214	bl	"_kfun:kotlin#<Int-box>(kotlin.Int){}kotlin.Any"
0000000000054218	mov	x20, x0
000000000005421c	str	x0, [x19]
0000000000054220	mov	x0, x21
0000000000054224	blr	x22
0000000000054228	ldr	x8, [x0]
000000000005422c	ldr	x9, [sp, #0x10]
0000000000054230	str	x9, [x8, #0x110]
0000000000054234	mov	x0, x20
0000000000054238	ldp	x29, x30, [sp, #0x40]
000000000005423c	ldp	x20, x19, [sp, #0x30]
0000000000054240	ldp	x22, x21, [sp, #0x20]
0000000000054244	add	sp, sp, #0x50
0000000000054248	ret
000000000005424c	nop
0000000000054250	ldr	x1, #0x22b40 ; Objc selector ref: longLongValue
0000000000054254	mov	x0, x20
0000000000054258	bl	0x55ca8 ; Objc message: -[x0 longLongValue]
000000000005425c	mov	x1, x19
0000000000054260	ldp	x29, x30, [sp, #0x40]
0000000000054264	ldp	x20, x19, [sp, #0x30]
0000000000054268	ldp	x22, x21, [sp, #0x20]
000000000005426c	add	sp, sp, #0x50
0000000000054270	b	_Kotlin_boxLong
0000000000054274	nop
0000000000054278	ldr	x1, #0x22be0 ; Objc selector ref: shortValue
000000000005427c	mov	x0, x20
0000000000054280	bl	0x55ca8 ; Objc message: -[x0 shortValue]
0000000000054284	mov	x1, x19
0000000000054288	ldp	x29, x30, [sp, #0x40]
000000000005428c	ldp	x20, x19, [sp, #0x30]
0000000000054290	ldp	x22, x21, [sp, #0x20]
0000000000054294	add	sp, sp, #0x50
0000000000054298	b	_Kotlin_boxShort
-[NSDecimalNumber(NSDecimalNumberToKotlin) toKotlin:]:
000000000005429c	stp	x22, x21, [sp, #-0x30]!
00000000000542a0	stp	x20, x19, [sp, #0x10]
00000000000542a4	stp	x29, x30, [sp, #0x20]
00000000000542a8	add	x29, sp, #0x20
00000000000542ac	mov	x21, x2
00000000000542b0	mov	x19, x0
00000000000542b4	bl	0x55d14 ; symbol stub for: _object_getClass
00000000000542b8	bl	__ZL19getOrCreateTypeInfoP10objc_class
00000000000542bc	mov	x22, x0
00000000000542c0	mov	x0, x19
00000000000542c4	bl	0x55cd8 ; symbol stub for: _objc_retain
00000000000542c8	mov	x19, x0
00000000000542cc	adrp	x0, 38 ; 0x7a000
00000000000542d0	add	x0, x0, #0x4e0
00000000000542d4	ldr	x8, [x0]
00000000000542d8	blr	x8
00000000000542dc	ldr	x8, [x0]
00000000000542e0	ldr	x8, [x8, #0x118]
00000000000542e4	ldrsw	x9, [x22, #0x14]
00000000000542e8	add	x9, x9, #0xf
00000000000542ec	and	x1, x9, #0xfffffffffffffff8
00000000000542f0	add	x0, x8, #0x70
00000000000542f4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000542f8	mov	x20, x0
00000000000542fc	str	x22, [x20, #0x10]!
0000000000054300	stur	xzr, [x20, #-0x8]
0000000000054304	str	x20, [x21]
0000000000054308	ldar	x8, [x20]
000000000005430c	and	x8, x8, #0xfffffffffffffffc
0000000000054310	ldr	x9, [x8]
0000000000054314	cmp	x9, x8
0000000000054318	csel	x0, xzr, x8, eq
000000000005431c	cbnz	x0, 0x54328
0000000000054320	mov	x0, x20
0000000000054324	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000054328	add	x8, x0, #0x10
000000000005432c	stlr	x19, [x8]
0000000000054330	mov	x0, x20
0000000000054334	ldp	x29, x30, [sp, #0x20]
0000000000054338	ldp	x20, x19, [sp, #0x10]
000000000005433c	ldp	x22, x21, [sp], #0x30
0000000000054340	ret
-[NSSet(NSSetToKotlin) toKotlin:]:
0000000000054344	sub	sp, sp, #0x50
0000000000054348	stp	x22, x21, [sp, #0x20]
000000000005434c	stp	x20, x19, [sp, #0x30]
0000000000054350	stp	x29, x30, [sp, #0x40]
0000000000054354	add	x29, sp, #0x40
0000000000054358	mov	x20, x2
000000000005435c	bl	0x55cd8 ; symbol stub for: _objc_retain
0000000000054360	mov	x19, x0
0000000000054364	bl	_Kotlin_initRuntimeIfNeeded
0000000000054368	str	xzr, [sp, #0x8]
000000000005436c	adrp	x21, 38 ; 0x7a000
0000000000054370	add	x21, x21, #0x4e0
0000000000054374	ldr	x22, [x21]
0000000000054378	mov	x0, x21
000000000005437c	blr	x22
0000000000054380	ldr	x8, [x0]
0000000000054384	ldr	x9, [x8, #0x110]
0000000000054388	add	x10, sp, #0x8
000000000005438c	str	x10, [x8, #0x110]
0000000000054390	mov	x8, #0x300000000
0000000000054394	stp	x9, x8, [sp, #0x10]
0000000000054398	adr	x8, #0x40171
000000000005439c	nop
00000000000543a0	ldarb	w8, [x8]
00000000000543a4	tbz	w8, #0x0, 0x543ac
00000000000543a8	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000543ac	mov	x0, x21
00000000000543b0	blr	x22
00000000000543b4	mov	x22, x0
00000000000543b8	ldr	x8, [x0]
00000000000543bc	ldr	x8, [x8, #0x118]
00000000000543c0	add	x0, x8, #0x70
00000000000543c4	mov	w1, #0x10
00000000000543c8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000543cc	mov	x21, x0
00000000000543d0	adr	x8, #0xed30
00000000000543d4	nop
00000000000543d8	str	x8, [x21, #0x10]!
00000000000543dc	stur	xzr, [x21, #-0x8]
00000000000543e0	str	x21, [x20]
00000000000543e4	ldr	x8, [x22]
00000000000543e8	ldr	x9, [sp, #0x10]
00000000000543ec	str	x9, [x8, #0x110]
00000000000543f0	ldar	x8, [x21]
00000000000543f4	and	x8, x8, #0xfffffffffffffffc
00000000000543f8	ldr	x9, [x8]
00000000000543fc	cmp	x9, x8
0000000000054400	csel	x0, xzr, x8, eq
0000000000054404	cbnz	x0, 0x54410
0000000000054408	mov	x0, x21
000000000005440c	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000054410	add	x8, x0, #0x10
0000000000054414	stlr	x19, [x8]
0000000000054418	mov	x0, x21
000000000005441c	ldp	x29, x30, [sp, #0x40]
0000000000054420	ldp	x20, x19, [sp, #0x30]
0000000000054424	ldp	x22, x21, [sp, #0x20]
0000000000054428	add	sp, sp, #0x50
000000000005442c	ret
-[NSSet(NSSetToKotlin) releaseAsAssociatedObject:]:
0000000000054430	cmp	w2, #0x1
0000000000054434	b.hi	0x5443c
0000000000054438	b	0x55ccc ; symbol stub for: _objc_release
000000000005443c	ret
-[NSMutableArray(NSArrayToKotlin) toKotlin:]:
0000000000054440	sub	sp, sp, #0x50
0000000000054444	stp	x22, x21, [sp, #0x20]
0000000000054448	stp	x20, x19, [sp, #0x30]
000000000005444c	stp	x29, x30, [sp, #0x40]
0000000000054450	add	x29, sp, #0x40
0000000000054454	mov	x20, x2
0000000000054458	bl	0x55cd8 ; symbol stub for: _objc_retain
000000000005445c	mov	x19, x0
0000000000054460	bl	_Kotlin_initRuntimeIfNeeded
0000000000054464	str	xzr, [sp, #0x8]
0000000000054468	adrp	x21, 38 ; 0x7a000
000000000005446c	add	x21, x21, #0x4e0
0000000000054470	ldr	x22, [x21]
0000000000054474	mov	x0, x21
0000000000054478	blr	x22
000000000005447c	ldr	x8, [x0]
0000000000054480	ldr	x9, [x8, #0x110]
0000000000054484	add	x10, sp, #0x8
0000000000054488	str	x10, [x8, #0x110]
000000000005448c	mov	x8, #0x300000000
0000000000054490	stp	x9, x8, [sp, #0x10]
0000000000054494	adr	x8, #0x40075
0000000000054498	nop
000000000005449c	ldarb	w8, [x8]
00000000000544a0	tbz	w8, #0x0, 0x544a8
00000000000544a4	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000544a8	mov	x0, x21
00000000000544ac	blr	x22
00000000000544b0	mov	x22, x0
00000000000544b4	ldr	x8, [x0]
00000000000544b8	ldr	x8, [x8, #0x118]
00000000000544bc	add	x0, x8, #0x70
00000000000544c0	mov	w1, #0x18
00000000000544c4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000544c8	mov	x21, x0
00000000000544cc	adr	x8, #0xeae4
00000000000544d0	nop
00000000000544d4	str	x8, [x21, #0x10]!
00000000000544d8	stur	xzr, [x21, #-0x8]
00000000000544dc	str	x21, [x20]
00000000000544e0	ldr	x8, [x22]
00000000000544e4	ldr	x9, [sp, #0x10]
00000000000544e8	str	x9, [x8, #0x110]
00000000000544ec	ldar	x8, [x21]
00000000000544f0	and	x8, x8, #0xfffffffffffffffc
00000000000544f4	ldr	x9, [x8]
00000000000544f8	cmp	x9, x8
00000000000544fc	csel	x0, xzr, x8, eq
0000000000054500	cbnz	x0, 0x5450c
0000000000054504	mov	x0, x21
0000000000054508	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
000000000005450c	add	x8, x0, #0x10
0000000000054510	stlr	x19, [x8]
0000000000054514	mov	x0, x21
0000000000054518	ldp	x29, x30, [sp, #0x40]
000000000005451c	ldp	x20, x19, [sp, #0x30]
0000000000054520	ldp	x22, x21, [sp, #0x20]
0000000000054524	add	sp, sp, #0x50
0000000000054528	ret
-[NSMutableArray(NSArrayToKotlin) releaseAsAssociatedObject:]:
000000000005452c	cmp	w2, #0x1
0000000000054530	b.hi	0x54538
0000000000054534	b	0x55ccc ; symbol stub for: _objc_release
0000000000054538	ret
-[NSEnumerator(NSEnumeratorAsAssociatedObject) releaseAsAssociatedObject:]:
000000000005453c	cmp	w2, #0x1
0000000000054540	b.hi	0x54548
0000000000054544	b	0x55ccc ; symbol stub for: _objc_release
0000000000054548	ret
-[NSDictionary(NSDictionaryToKotlin) toKotlin:]:
000000000005454c	sub	sp, sp, #0x50
0000000000054550	stp	x22, x21, [sp, #0x20]
0000000000054554	stp	x20, x19, [sp, #0x30]
0000000000054558	stp	x29, x30, [sp, #0x40]
000000000005455c	add	x29, sp, #0x40
0000000000054560	mov	x20, x2
0000000000054564	bl	0x55cd8 ; symbol stub for: _objc_retain
0000000000054568	mov	x19, x0
000000000005456c	bl	_Kotlin_initRuntimeIfNeeded
0000000000054570	str	xzr, [sp, #0x8]
0000000000054574	adrp	x21, 38 ; 0x7a000
0000000000054578	add	x21, x21, #0x4e0
000000000005457c	ldr	x22, [x21]
0000000000054580	mov	x0, x21
0000000000054584	blr	x22
0000000000054588	ldr	x8, [x0]
000000000005458c	ldr	x9, [x8, #0x110]
0000000000054590	add	x10, sp, #0x8
0000000000054594	str	x10, [x8, #0x110]
0000000000054598	mov	x8, #0x300000000
000000000005459c	stp	x9, x8, [sp, #0x10]
00000000000545a0	adr	x8, #0x3ff69
00000000000545a4	nop
00000000000545a8	ldarb	w8, [x8]
00000000000545ac	tbz	w8, #0x0, 0x545b4
00000000000545b0	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000545b4	mov	x0, x21
00000000000545b8	blr	x22
00000000000545bc	mov	x22, x0
00000000000545c0	ldr	x8, [x0]
00000000000545c4	ldr	x8, [x8, #0x118]
00000000000545c8	add	x0, x8, #0x70
00000000000545cc	mov	w1, #0x10
00000000000545d0	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000545d4	mov	x21, x0
00000000000545d8	adr	x8, #0xebe8
00000000000545dc	nop
00000000000545e0	str	x8, [x21, #0x10]!
00000000000545e4	stur	xzr, [x21, #-0x8]
00000000000545e8	str	x21, [x20]
00000000000545ec	ldr	x8, [x22]
00000000000545f0	ldr	x9, [sp, #0x10]
00000000000545f4	str	x9, [x8, #0x110]
00000000000545f8	ldar	x8, [x21]
00000000000545fc	and	x8, x8, #0xfffffffffffffffc
0000000000054600	ldr	x9, [x8]
0000000000054604	cmp	x9, x8
0000000000054608	csel	x0, xzr, x8, eq
000000000005460c	cbnz	x0, 0x54618
0000000000054610	mov	x0, x21
0000000000054614	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000054618	add	x8, x0, #0x10
000000000005461c	stlr	x19, [x8]
0000000000054620	mov	x0, x21
0000000000054624	ldp	x29, x30, [sp, #0x40]
0000000000054628	ldp	x20, x19, [sp, #0x30]
000000000005462c	ldp	x22, x21, [sp, #0x20]
0000000000054630	add	sp, sp, #0x50
0000000000054634	ret
-[NSDictionary(NSDictionaryToKotlin) releaseAsAssociatedObject:]:
0000000000054638	cmp	w2, #0x1
000000000005463c	b.hi	0x54644
0000000000054640	b	0x55ccc ; symbol stub for: _objc_release
0000000000054644	ret
-[NSArray(NSArrayToKotlin) toKotlin:]:
0000000000054648	sub	sp, sp, #0x50
000000000005464c	stp	x22, x21, [sp, #0x20]
0000000000054650	stp	x20, x19, [sp, #0x30]
0000000000054654	stp	x29, x30, [sp, #0x40]
0000000000054658	add	x29, sp, #0x40
000000000005465c	mov	x20, x2
0000000000054660	bl	0x55cd8 ; symbol stub for: _objc_retain
0000000000054664	mov	x19, x0
0000000000054668	bl	_Kotlin_initRuntimeIfNeeded
000000000005466c	str	xzr, [sp, #0x8]
0000000000054670	adrp	x21, 38 ; 0x7a000
0000000000054674	add	x21, x21, #0x4e0
0000000000054678	ldr	x22, [x21]
000000000005467c	mov	x0, x21
0000000000054680	blr	x22
0000000000054684	ldr	x8, [x0]
0000000000054688	ldr	x9, [x8, #0x110]
000000000005468c	add	x10, sp, #0x8
0000000000054690	str	x10, [x8, #0x110]
0000000000054694	mov	x8, #0x300000000
0000000000054698	stp	x9, x8, [sp, #0x10]
000000000005469c	adr	x8, #0x3fe6d
00000000000546a0	nop
00000000000546a4	ldarb	w8, [x8]
00000000000546a8	tbz	w8, #0x0, 0x546b0
00000000000546ac	bl	__ZN6kotlin2mm26SuspendIfRequestedSlowPathEv
00000000000546b0	mov	x0, x21
00000000000546b4	blr	x22
00000000000546b8	mov	x22, x0
00000000000546bc	ldr	x8, [x0]
00000000000546c0	ldr	x8, [x8, #0x118]
00000000000546c4	add	x0, x8, #0x70
00000000000546c8	mov	w1, #0x10
00000000000546cc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE8Producer6InsertEy
00000000000546d0	mov	x21, x0
00000000000546d4	adr	x8, #0xe7ec
00000000000546d8	nop
00000000000546dc	str	x8, [x21, #0x10]!
00000000000546e0	stur	xzr, [x21, #-0x8]
00000000000546e4	str	x21, [x20]
00000000000546e8	ldr	x8, [x22]
00000000000546ec	ldr	x9, [sp, #0x10]
00000000000546f0	str	x9, [x8, #0x110]
00000000000546f4	ldar	x8, [x21]
00000000000546f8	and	x8, x8, #0xfffffffffffffffc
00000000000546fc	ldr	x9, [x8]
0000000000054700	cmp	x9, x8
0000000000054704	csel	x0, xzr, x8, eq
0000000000054708	cbnz	x0, 0x54714
000000000005470c	mov	x0, x21
0000000000054710	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000054714	add	x8, x0, #0x10
0000000000054718	stlr	x19, [x8]
000000000005471c	mov	x0, x21
0000000000054720	ldp	x29, x30, [sp, #0x40]
0000000000054724	ldp	x20, x19, [sp, #0x30]
0000000000054728	ldp	x22, x21, [sp, #0x20]
000000000005472c	add	sp, sp, #0x50
0000000000054730	ret
-[NSArray(NSArrayToKotlin) releaseAsAssociatedObject:]:
0000000000054734	cmp	w2, #0x1
0000000000054738	b.hi	0x54740
000000000005473c	b	0x55ccc ; symbol stub for: _objc_release
0000000000054740	ret
__ZL15injectToRuntimev:
0000000000054744	stp	x29, x30, [sp, #-0x10]!
0000000000054748	mov	x29, sp
000000000005474c	nop
0000000000054750	ldr	x8, #0x40058
0000000000054754	cbnz	x8, 0x547c4
0000000000054758	adr	x8, #0x40050
000000000005475c	nop
0000000000054760	adr	x9, #0x74
0000000000054764	nop
0000000000054768	str	x9, [x8]
000000000005476c	ldr	x8, [x8, #0x8]
0000000000054770	cbnz	x8, 0x547c4
0000000000054774	adr	x8, #0x4003c
0000000000054778	nop
000000000005477c	adr	x9, #0x98
0000000000054780	nop
0000000000054784	str	x9, [x8]
0000000000054788	ldr	x8, [x8, #0x8]
000000000005478c	cbnz	x8, 0x547c4
0000000000054790	adr	x8, #0x40028
0000000000054794	nop
0000000000054798	adr	x9, #0x90
000000000005479c	nop
00000000000547a0	str	x9, [x8]
00000000000547a4	ldr	x8, [x8, #0x8]
00000000000547a8	cbnz	x8, 0x547c4
00000000000547ac	adrp	x8, 64 ; 0x94000
00000000000547b0	adr	x9, #0x22c
00000000000547b4	nop
00000000000547b8	str	x9, [x8, #0x7c0]
00000000000547bc	ldp	x29, x30, [sp], #0x10
00000000000547c0	ret
00000000000547c4	adr	x2, #0x8e51 ; literal pool for: "runtime injected twice"
00000000000547c8	nop
00000000000547cc	mov	w0, #0x0
00000000000547d0	bl	__ZN6kotlin8internal24RuntimeAssertFailedPanicEbPKcS2_z
__ZL39Kotlin_Interop_createKotlinObjectHolderP9ObjHeader:
00000000000547d4	cbz	x0, 0x54810
00000000000547d8	stp	x20, x19, [sp, #-0x20]!
00000000000547dc	stp	x29, x30, [sp, #0x10]
00000000000547e0	add	x29, sp, #0x10
00000000000547e4	mov	x19, x0
00000000000547e8	nop
00000000000547ec	ldr	x0, #0x228ec ; Objc class ref: RCKKotlinObjectHolder
00000000000547f0	bl	0x55c24 ; symbol stub for: _objc_alloc
00000000000547f4	nop
00000000000547f8	ldr	x1, #0x22538 ; Objc selector ref: initWithRef:
00000000000547fc	mov	x2, x19
0000000000054800	bl	0x55ca8 ; Objc message: +[RCKKotlinObjectHolder initWithRef:]
0000000000054804	ldp	x29, x30, [sp, #0x10]
0000000000054808	ldp	x20, x19, [sp], #0x20
000000000005480c	b	0x55c48 ; symbol stub for: _objc_autorelease
0000000000054810	ret
__ZL39Kotlin_Interop_unwrapKotlinObjectHolderP11objc_object:
0000000000054814	cbz	x0, 0x54824
0000000000054818	nop
000000000005481c	ldr	x1, #0x22604 ; Objc selector ref: ref
0000000000054820	b	0x55ca8 ; Objc message: -[x0 ref]
0000000000054824	ret
__ZL34Konan_ObjCInterop_getWeakReferenceP9ObjHeaderPS0_:
0000000000054828	stp	x26, x25, [sp, #-0x50]!
000000000005482c	stp	x24, x23, [sp, #0x10]
0000000000054830	stp	x22, x21, [sp, #0x20]
0000000000054834	stp	x20, x19, [sp, #0x30]
0000000000054838	stp	x29, x30, [sp, #0x40]
000000000005483c	add	x29, sp, #0x40
0000000000054840	mov	x20, x1
0000000000054844	ldar	x8, [x0]
0000000000054848	and	x8, x8, #0xfffffffffffffffc
000000000005484c	ldr	x9, [x8]
0000000000054850	cmp	x8, #0x0
0000000000054854	ccmp	x9, x8, #0x4, ne
0000000000054858	b.ne	0x54864
000000000005485c	mov	x8, #0x0
0000000000054860	b	0x5486c
0000000000054864	add	x8, x8, #0x10
0000000000054868	ldar	x8, [x8]
000000000005486c	add	x8, x8, #0x8
0000000000054870	adrp	x21, 38 ; 0x7a000
0000000000054874	add	x21, x21, #0x4e0
0000000000054878	ldr	x24, [x21]
000000000005487c	mov	x0, x21
0000000000054880	blr	x24
0000000000054884	ldr	x25, [x0]
0000000000054888	add	x19, x25, #0x138
000000000005488c	mov	w9, #0x1
0000000000054890	ldaxr	w23, [x19]
0000000000054894	stlxr	w10, w9, [x19]
0000000000054898	cbnz	w10, 0x54890
000000000005489c	mov	x0, x8
00000000000548a0	bl	0x55c9c ; symbol stub for: _objc_loadWeakRetained
00000000000548a4	mov	x22, x0
00000000000548a8	cbz	x25, 0x548dc
00000000000548ac	ldaxr	w8, [x19]
00000000000548b0	stlxr	w9, w23, [x19]
00000000000548b4	cbnz	w9, 0x548ac
00000000000548b8	cbnz	w23, 0x548dc
00000000000548bc	cmp	w8, #0x1
00000000000548c0	b.ne	0x548dc
00000000000548c4	adr	x8, #0x3fc45
00000000000548c8	nop
00000000000548cc	ldarb	w8, [x8]
00000000000548d0	tbz	w8, #0x0, 0x548dc
00000000000548d4	mov	x0, x19
00000000000548d8	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000548dc	cbz	x22, 0x548fc
00000000000548e0	nop
00000000000548e4	ldr	x1, #0x3fe74
00000000000548e8	mov	x0, x22
00000000000548ec	mov	x2, x20
00000000000548f0	bl	0x55ca8 ; Objc message: -[x0 ref]
00000000000548f4	mov	x23, x0
00000000000548f8	b	0x54904
00000000000548fc	mov	x23, #0x0
0000000000054900	str	xzr, [x20]
0000000000054904	mov	x0, x21
0000000000054908	blr	x24
000000000005490c	ldr	x24, [x0]
0000000000054910	add	x19, x24, #0x138
0000000000054914	mov	w8, #0x1
0000000000054918	ldaxr	w21, [x19]
000000000005491c	stlxr	w9, w8, [x19]
0000000000054920	cbnz	w9, 0x54918
0000000000054924	mov	x0, x22
0000000000054928	bl	0x55ccc ; symbol stub for: _objc_release
000000000005492c	cbz	x24, 0x54960
0000000000054930	ldaxr	w8, [x19]
0000000000054934	stlxr	w9, w21, [x19]
0000000000054938	cbnz	w9, 0x54930
000000000005493c	cbnz	w21, 0x54960
0000000000054940	cmp	w8, #0x1
0000000000054944	b.ne	0x54960
0000000000054948	adr	x8, #0x3fbc1
000000000005494c	nop
0000000000054950	ldarb	w8, [x8]
0000000000054954	tbz	w8, #0x0, 0x54960
0000000000054958	mov	x0, x19
000000000005495c	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
0000000000054960	mov	x0, x23
0000000000054964	ldp	x29, x30, [sp, #0x40]
0000000000054968	ldp	x20, x19, [sp, #0x30]
000000000005496c	ldp	x22, x21, [sp, #0x20]
0000000000054970	ldp	x24, x23, [sp, #0x10]
0000000000054974	ldp	x26, x25, [sp], #0x50
0000000000054978	ret
000000000005497c	bl	___clang_call_terminate
0000000000054980	mov	x20, x0
0000000000054984	cbz	x24, 0x549d4
0000000000054988	ldaxr	w8, [x19]
000000000005498c	stlxr	w9, w21, [x19]
0000000000054990	cbnz	w9, 0x54988
0000000000054994	cbz	w21, 0x549b4
0000000000054998	b	0x549d4
000000000005499c	mov	x20, x0
00000000000549a0	cbz	x25, 0x549d4
00000000000549a4	ldaxr	w8, [x19]
00000000000549a8	stlxr	w9, w23, [x19]
00000000000549ac	cbnz	w9, 0x549a4
00000000000549b0	cbnz	w23, 0x549d4
00000000000549b4	cmp	w8, #0x1
00000000000549b8	b.ne	0x549d4
00000000000549bc	adr	x8, #0x3fb4d
00000000000549c0	nop
00000000000549c4	ldarb	w8, [x8]
00000000000549c8	tbz	w8, #0x0, 0x549d4
00000000000549cc	mov	x0, x19
00000000000549d0	bl	__ZN6kotlin2mm20ThreadSuspensionData26suspendIfRequestedSlowPathEv
00000000000549d4	mov	x0, x20
00000000000549d8	bl	0x558ac ; symbol stub for: __Unwind_Resume
__ZL35Konan_ObjCInterop_initWeakReferenceP9ObjHeaderP11objc_object:
00000000000549dc	stp	x22, x21, [sp, #-0x30]!
00000000000549e0	stp	x20, x19, [sp, #0x10]
00000000000549e4	stp	x29, x30, [sp, #0x20]
00000000000549e8	add	x29, sp, #0x20
00000000000549ec	mov	x21, x1
00000000000549f0	mov	x19, x0
00000000000549f4	nop
00000000000549f8	ldr	x0, #0x226e8 ; Objc class ref: RCKKotlinObjCWeakReference
00000000000549fc	nop
0000000000054a00	ldr	x1, #0x223b0 ; Objc selector ref: new
0000000000054a04	bl	0x55ca8 ; Objc message: +[RCKKotlinObjCWeakReference new]
0000000000054a08	mov	x20, x0
0000000000054a0c	add	x0, x0, #0x8
0000000000054a10	mov	x1, x21
0000000000054a14	bl	0x55d08 ; symbol stub for: _objc_storeWeak
0000000000054a18	ldar	x8, [x19]
0000000000054a1c	and	x8, x8, #0xfffffffffffffffc
0000000000054a20	ldr	x9, [x8]
0000000000054a24	cmp	x9, x8
0000000000054a28	csel	x0, xzr, x8, eq
0000000000054a2c	cbz	x0, 0x54a48
0000000000054a30	add	x8, x0, #0x10
0000000000054a34	stlr	x20, [x8]
0000000000054a38	ldp	x29, x30, [sp, #0x20]
0000000000054a3c	ldp	x20, x19, [sp, #0x10]
0000000000054a40	ldp	x22, x21, [sp], #0x30
0000000000054a44	ret
0000000000054a48	mov	x0, x19
0000000000054a4c	bl	__ZN6kotlin2mm15ExtraObjectData7InstallEP9ObjHeader
0000000000054a50	add	x8, x0, #0x10
0000000000054a54	stlr	x20, [x8]
0000000000054a58	ldp	x29, x30, [sp, #0x20]
0000000000054a5c	ldp	x20, x19, [sp, #0x10]
0000000000054a60	ldp	x22, x21, [sp], #0x30
0000000000054a64	ret
_Kotlin_Interop_CreateRetainedNSArrayFromKList:
0000000000054a68	mov	x2, x0
0000000000054a6c	nop
0000000000054a70	ldr	x0, #0x22630 ; Objc class ref: RCKKListAsNSArray
0000000000054a74	nop
0000000000054a78	ldr	x1, #0x221d0 ; Objc selector ref: createRetainedWithKList:
0000000000054a7c	b	0x55ca8 ; Objc message: +[RCKKListAsNSArray createRetainedWithKList:]
_Kotlin_Interop_CreateRetainedNSMutableArrayFromKList:
0000000000054a80	mov	x2, x0
0000000000054a84	nop
0000000000054a88	ldr	x0, #0x22620 ; Objc class ref: RCKKMutableListAsNSMutableArray
0000000000054a8c	nop
0000000000054a90	ldr	x1, #0x221b8 ; Objc selector ref: createRetainedWithKList:
0000000000054a94	b	0x55ca8 ; Objc message: +[RCKKMutableListAsNSMutableArray createRetainedWithKList:]
_Kotlin_Interop_CreateRetainedNSSetFromKSet:
0000000000054a98	mov	x2, x0
0000000000054a9c	nop
0000000000054aa0	ldr	x0, #0x22610 ; Objc class ref: RCKKSetAsNSSet
0000000000054aa4	nop
0000000000054aa8	ldr	x1, #0x221b0 ; Objc selector ref: createRetainedWithKSet:
0000000000054aac	b	0x55ca8 ; Objc message: +[RCKKSetAsNSSet createRetainedWithKSet:]
_Kotlin_Interop_CreateRetainedKotlinMutableSetFromKSet:
0000000000054ab0	stp	x20, x19, [sp, #-0x20]!
0000000000054ab4	stp	x29, x30, [sp, #0x10]
0000000000054ab8	add	x29, sp, #0x10
0000000000054abc	mov	x19, x0
0000000000054ac0	nop
0000000000054ac4	ldr	x0, #0x225fc ; Objc class ref: RCKMutableSet
0000000000054ac8	bl	0x55c24 ; symbol stub for: _objc_alloc
0000000000054acc	nop
0000000000054ad0	ldr	x1, #0x22250 ; Objc selector ref: initWithKSet:
0000000000054ad4	mov	x2, x19
0000000000054ad8	ldp	x29, x30, [sp, #0x10]
0000000000054adc	ldp	x20, x19, [sp], #0x20
0000000000054ae0	b	0x55ca8 ; Objc message: +[RCKMutableSet initWithKSet:]
_Kotlin_Interop_CreateRetainedNSDictionaryFromKMap:
0000000000054ae4	mov	x2, x0
0000000000054ae8	nop
0000000000054aec	ldr	x0, #0x225cc ; Objc class ref: RCKKMapAsNSDictionary
0000000000054af0	nop
0000000000054af4	ldr	x1, #0x2215c ; Objc selector ref: createRetainedWithKMap:
0000000000054af8	b	0x55ca8 ; Objc message: +[RCKKMapAsNSDictionary createRetainedWithKMap:]
_Kotlin_Interop_CreateRetainedKotlinMutableDictionaryFromKMap:
0000000000054afc	stp	x20, x19, [sp, #-0x20]!
0000000000054b00	stp	x29, x30, [sp, #0x10]
0000000000054b04	add	x29, sp, #0x10
0000000000054b08	mov	x19, x0
0000000000054b0c	nop
0000000000054b10	ldr	x0, #0x225b8 ; Objc class ref: RCKMutableDictionary
0000000000054b14	bl	0x55c24 ; symbol stub for: _objc_alloc
0000000000054b18	nop
0000000000054b1c	ldr	x1, #0x221fc ; Objc selector ref: initWithKMap:
0000000000054b20	mov	x2, x19
0000000000054b24	ldp	x29, x30, [sp, #0x10]
0000000000054b28	ldp	x20, x19, [sp], #0x20
0000000000054b2c	b	0x55ca8 ; Objc message: +[RCKMutableDictionary initWithKMap:]
_OUTLINED_FUNCTION_0:
0000000000054b30	ldr	x0, [x0]
0000000000054b34	b	0x55b7c ; symbol stub for: _free
__GLOBAL__sub_I_CallsChecker.cpp:
0000000000054b38	stp	x22, x21, [sp, #-0x30]!
0000000000054b3c	stp	x20, x19, [sp, #0x10]
0000000000054b40	stp	x29, x30, [sp, #0x20]
0000000000054b44	add	x29, sp, #0x20
0000000000054b48	adr	x8, #0x26a78
0000000000054b4c	nop
0000000000054b50	movi.16b	v0, #0x0
0000000000054b54	stp	q0, q0, [x8]
0000000000054b58	mov	w9, #0x3f800000
0000000000054b5c	str	w9, [x8, #0x20]
0000000000054b60	add	x19, x8, #0x28
0000000000054b64	mov	x0, x19
0000000000054b68	mov	w1, #0xec0
0000000000054b6c	bl	0x55ae0 ; symbol stub for: _bzero
0000000000054b70	mov	x21, #0x0
0000000000054b74	adr	x22, #0x1be24
0000000000054b78	nop
0000000000054b7c	ldr	x20, [x22, x21]
0000000000054b80	mov	x0, x20
0000000000054b84	bl	0x55e7c ; symbol stub for: _strlen
0000000000054b88	stp	x20, x0, [x19], #0x10
0000000000054b8c	add	x21, x21, #0x8
0000000000054b90	cmp	x21, #0x760
0000000000054b94	b.ne	0x54b7c
0000000000054b98	adr	x0, #0x26a50
0000000000054b9c	nop
0000000000054ba0	add	x1, x0, #0xec0
0000000000054ba4	ldp	x29, x30, [sp, #0x20]
0000000000054ba8	ldp	x20, x19, [sp, #0x10]
0000000000054bac	ldp	x22, x21, [sp], #0x30
0000000000054bb0	b	__ZNSt3__16__sortIRNS_6__lessINS_17basic_string_viewIcNS_11char_traitsIcEEEES5_EEPS5_EEvT0_S9_T_
__GLOBAL__sub_I_GlobalData.cpp:
0000000000054bb4	sub	sp, sp, #0x120
0000000000054bb8	stp	x28, x27, [sp, #0xc0]
0000000000054bbc	stp	x26, x25, [sp, #0xd0]
0000000000054bc0	stp	x24, x23, [sp, #0xe0]
0000000000054bc4	stp	x22, x21, [sp, #0xf0]
0000000000054bc8	stp	x20, x19, [sp, #0x100]
0000000000054bcc	stp	x29, x30, [sp, #0x110]
0000000000054bd0	add	x29, sp, #0x110
0000000000054bd4	adr	x8, #0x3fc1c
0000000000054bd8	nop
0000000000054bdc	stp	xzr, xzr, [x8]
0000000000054be0	add	x0, x8, #0x10
0000000000054be4	bl	0x55930 ; symbol stub for: __ZNSt3__115recursive_mutexC1Ev
0000000000054be8	adr	x25, #0x3fc58
0000000000054bec	nop
0000000000054bf0	str	wzr, [x25]
0000000000054bf4	mov	w24, #0xb1bb
0000000000054bf8	movk	w24, #0x3cb0, lsl #16
0000000000054bfc	mov	w23, #0xaba7
0000000000054c00	movk	w23, #0x32aa, lsl #16
0000000000054c04	add	x8, x25, #0x10
0000000000054c08	stp	xzr, x8, [x25, #0x8]
0000000000054c0c	stp	x8, xzr, [x25, #0x18]
0000000000054c10	add	x8, x25, #0x28
0000000000054c14	stp	x8, x8, [x25, #0x28]
0000000000054c18	str	xzr, [x25, #0x38]
0000000000054c1c	strb	wzr, [x25, #0x40]
0000000000054c20	add	x8, x25, #0x48
0000000000054c24	stp	x8, x8, [x25, #0x48]
0000000000054c28	add	x8, x25, #0x60
0000000000054c2c	stp	xzr, x8, [x25, #0x58]
0000000000054c30	stp	x8, xzr, [x25, #0x68]
0000000000054c34	strb	wzr, [x25, #0x78]
0000000000054c38	add	x8, x25, #0x80
0000000000054c3c	stp	x8, x8, [x25, #0x80]
0000000000054c40	add	x8, x25, #0x98
0000000000054c44	stp	xzr, x8, [x25, #0x90]
0000000000054c48	stp	x8, xzr, [x25, #0xa0]
0000000000054c4c	strb	wzr, [x25, #0xb0]
0000000000054c50	mov	w19, #0x1
0000000000054c54	mov	w0, #0x1
0000000000054c58	mov	w1, #0x238
0000000000054c5c	bl	0x55aec ; symbol stub for: _calloc
0000000000054c60	mov	x20, x0
0000000000054c64	str	xzr, [x0, #0x10]
0000000000054c68	movi.16b	v0, #0x0
0000000000054c6c	stur	q0, [x0, #0x18]
0000000000054c70	mov	w8, #0x86a0
0000000000054c74	movk	w8, #0x1, lsl #16
0000000000054c78	mov	x9, x0
0000000000054c7c	str	w8, [x9, #0x30]!
0000000000054c80	add	x8, x0, #0x8
0000000000054c84	strb	wzr, [x0, #0x28]
0000000000054c88	mov	w10, #0x2800
0000000000054c8c	str	x10, [x0, #0x38]
0000000000054c90	strb	w19, [x0, #0x40]
0000000000054c94	nop
0000000000054c98	ldr	q0, 0x57ff0
0000000000054c9c	stur	q0, [x0, #0x48]
0000000000054ca0	mov	x10, #0x3fe0000000000000
0000000000054ca4	str	x10, [x0, #0x58]
0000000000054ca8	nop
0000000000054cac	ldr	q0, 0x58000
0000000000054cb0	str	q0, [x0, #0x60]
0000000000054cb4	mov	x28, x0
0000000000054cb8	str	x8, [x28, #0x98]!
0000000000054cbc	str	x9, [x0, #0xa0]
0000000000054cc0	add	x27, x0, #0xb0
0000000000054cc4	nop
0000000000054cc8	ldr	q0, 0x58010
0000000000054ccc	stur	q0, [x0, #0xa8]
0000000000054cd0	movi.16b	v0, #0x0
0000000000054cd4	stur	q0, [x0, #0xb8]
0000000000054cd8	stur	q0, [x0, #0xc8]
0000000000054cdc	stur	q0, [x0, #0xd8]
0000000000054ce0	stur	q0, [x0, #0xe8]
0000000000054ce4	stp	x27, x24, [x0, #0xf8]
0000000000054ce8	add	x8, x0, #0x108
0000000000054cec	stp	q0, q0, [x8]
0000000000054cf0	str	q0, [x8, #0x20]
0000000000054cf4	stp	x27, x24, [x0, #0x138]
0000000000054cf8	add	x8, x0, #0x148
0000000000054cfc	stp	q0, q0, [x8]
0000000000054d00	str	q0, [x8, #0x20]
0000000000054d04	stp	x27, x24, [x0, #0x178]
0000000000054d08	add	x8, x0, #0x188
0000000000054d0c	stp	q0, q0, [x8, #0x10]
0000000000054d10	str	q0, [x8]
0000000000054d14	stp	x27, x24, [x0, #0x1b8]
0000000000054d18	add	x8, x0, #0x1c8
0000000000054d1c	stp	q0, q0, [x8]
0000000000054d20	stur	q0, [x8, #0x19]
0000000000054d24	mov	w0, #0x1
0000000000054d28	mov	w1, #0x180
0000000000054d2c	bl	0x55aec ; symbol stub for: _calloc
0000000000054d30	str	xzr, [x0, #0x10]
0000000000054d34	movi.16b	v0, #0x0
0000000000054d38	stur	q0, [x0, #0x18]
0000000000054d3c	str	x24, [x0, #0x28]
0000000000054d40	stp	q0, q0, [x0, #0x30]
0000000000054d44	stp	xzr, x23, [x0, #0x50]
0000000000054d48	stp	q0, q0, [x0, #0x60]
0000000000054d4c	str	q0, [x0, #0x80]
0000000000054d50	str	xzr, [x0, #0x90]
0000000000054d54	adr	x8, #0x1c48c
0000000000054d58	nop
0000000000054d5c	mov	x9, x0
0000000000054d60	str	x8, [x9, #0x98]!
0000000000054d64	str	x9, [x0, #0xb0]
0000000000054d68	str	x28, [x0, #0xa0]
0000000000054d6c	strb	w19, [x0, #0xc1]
0000000000054d70	str	x23, [x0, #0xc8]
0000000000054d74	stp	q0, q0, [x0, #0xe0]
0000000000054d78	str	q0, [x0, #0xd0]
0000000000054d7c	stp	xzr, x24, [x0, #0x100]
0000000000054d80	add	x8, x0, #0x110
0000000000054d84	stp	q0, q0, [x0, #0x110]
0000000000054d88	stur	q0, [x8, #0x19]
0000000000054d8c	str	x23, [x0, #0x140]
0000000000054d90	add	x8, x0, #0x148
0000000000054d94	stp	q0, q0, [x8]
0000000000054d98	str	q0, [x8, #0x20]
0000000000054d9c	str	xzr, [x8, #0x30]
0000000000054da0	str	x0, [x20, #0x200]
0000000000054da4	add	x8, x20, #0x208
0000000000054da8	str	q0, [x8]
0000000000054dac	movi.16b	v0, #0x0
0000000000054db0	ldr	x8, [x20, #0x208]
0000000000054db4	and	x8, x8, #0x1
0000000000054db8	str	x8, [x20, #0x208]
0000000000054dbc	add	x8, x20, #0x218
0000000000054dc0	str	xzr, [x8, #0x10]
0000000000054dc4	str	q0, [x8]
0000000000054dc8	ldr	x19, [x20, #0xa0]
0000000000054dcc	adr	x8, #0x1c46c
0000000000054dd0	nop
0000000000054dd4	stp	x8, x28, [sp, #0x10]
0000000000054dd8	add	x8, sp, #0x10
0000000000054ddc	str	x8, [sp, #0x28]
0000000000054de0	add	x21, x19, #0x48
0000000000054de4	ldr	x0, [x19, #0x60]
0000000000054de8	str	xzr, [x19, #0x60]
0000000000054dec	cmp	x21, x0
0000000000054df0	b.eq	0x54e04
0000000000054df4	cbz	x0, 0x54e10
0000000000054df8	ldr	x8, [x0]
0000000000054dfc	ldr	x8, [x8, #0x28]
0000000000054e00	b	0x54e0c
0000000000054e04	ldr	x8, [x0]
0000000000054e08	ldr	x8, [x8, #0x20]
0000000000054e0c	blr	x8
0000000000054e10	ldr	x0, [sp, #0x28]
0000000000054e14	cbz	x0, 0x54e30
0000000000054e18	add	x8, sp, #0x10
0000000000054e1c	cmp	x8, x0
0000000000054e20	b.eq	0x54e68
0000000000054e24	str	x0, [x19, #0x60]
0000000000054e28	str	xzr, [sp, #0x28]
0000000000054e2c	b	0x54e84
0000000000054e30	str	xzr, [x19, #0x60]
0000000000054e34	mov	x22, #0x0
0000000000054e38	str	xzr, [sp, #0x48]
0000000000054e3c	mov	w0, #0x1
0000000000054e40	mov	w1, #0xf8
0000000000054e44	bl	0x55aec ; symbol stub for: _calloc
0000000000054e48	mov	x21, x0
0000000000054e4c	cbz	x22, 0x54eb8
0000000000054e50	add	x8, sp, #0x30
0000000000054e54	cmp	x8, x22
0000000000054e58	b.eq	0x54ec8
0000000000054e5c	add	x8, x8, #0x18
0000000000054e60	str	x22, [sp, #0x68]
0000000000054e64	b	0x54ec0
0000000000054e68	str	x21, [x19, #0x60]
0000000000054e6c	ldr	x8, [x0]
0000000000054e70	ldr	x8, [x8, #0x18]
0000000000054e74	mov	x1, x21
0000000000054e78	blr	x8
0000000000054e7c	ldr	x0, [x19, #0x60]
0000000000054e80	cbz	x0, 0x54e34
0000000000054e84	add	x8, sp, #0x30
0000000000054e88	cmp	x21, x0
0000000000054e8c	b.eq	0x5504c
0000000000054e90	ldr	x8, [x0]
0000000000054e94	ldr	x8, [x8, #0x10]
0000000000054e98	blr	x8
0000000000054e9c	mov	x22, x0
0000000000054ea0	str	x0, [sp, #0x48]
0000000000054ea4	mov	w0, #0x1
0000000000054ea8	mov	w1, #0xf8
0000000000054eac	bl	0x55aec ; symbol stub for: _calloc
0000000000054eb0	mov	x21, x0
0000000000054eb4	cbnz	x22, 0x54e50
0000000000054eb8	add	x8, sp, #0x50
0000000000054ebc	add	x8, x8, #0x18
0000000000054ec0	str	xzr, [x8]
0000000000054ec4	b	0x54ee4
0000000000054ec8	add	x8, sp, #0x50
0000000000054ecc	str	x8, [sp, #0x68]
0000000000054ed0	ldr	x8, [x22]
0000000000054ed4	ldr	x8, [x8, #0x18]
0000000000054ed8	add	x1, sp, #0x50
0000000000054edc	mov	x0, x22
0000000000054ee0	blr	x8
0000000000054ee4	adr	x8, #0x1ba64
0000000000054ee8	nop
0000000000054eec	stp	x8, x19, [x21]
0000000000054ef0	stp	x25, x19, [x21, #0x10]
0000000000054ef4	stp	xzr, xzr, [x21, #0x20]
0000000000054ef8	str	x19, [x21, #0x30]
0000000000054efc	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000054f00	str	x0, [x21, #0x38]
0000000000054f04	ldr	x0, [sp, #0x68]
0000000000054f08	cbz	x0, 0x54f24
0000000000054f0c	add	x8, sp, #0x50
0000000000054f10	cmp	x8, x0
0000000000054f14	b.eq	0x54f30
0000000000054f18	add	x8, x8, #0x18
0000000000054f1c	str	x0, [x21, #0x58]
0000000000054f20	b	0x54f28
0000000000054f24	add	x8, x21, #0x58
0000000000054f28	str	xzr, [x8]
0000000000054f2c	b	0x54f44
0000000000054f30	add	x1, x21, #0x40
0000000000054f34	str	x1, [x21, #0x58]
0000000000054f38	ldr	x8, [x0]
0000000000054f3c	ldr	x8, [x8, #0x18]
0000000000054f40	blr	x8
0000000000054f44	ldr	x8, [x21, #0x8]
0000000000054f48	add	x8, x8, #0x18
0000000000054f4c	ldar	x8, [x8]
0000000000054f50	mov	x22, x21
0000000000054f54	str	x23, [x22, #0x60]!
0000000000054f58	movi.16b	v0, #0x0
0000000000054f5c	stur	q0, [x22, #0x8]
0000000000054f60	stur	q0, [x22, #0x18]
0000000000054f64	stur	q0, [x22, #0x28]
0000000000054f68	str	xzr, [x22, #0x38]
0000000000054f6c	mov	x23, x22
0000000000054f70	str	x24, [x23, #0x40]!
0000000000054f74	stur	q0, [x22, #0x48]
0000000000054f78	stur	q0, [x22, #0x58]
0000000000054f7c	str	xzr, [x22, #0x68]
0000000000054f80	mov	w9, #0x1
0000000000054f84	strb	w9, [x22, #0x70]
0000000000054f88	mov	w9, #0x3e8
0000000000054f8c	mul	x10, x8, x9
0000000000054f90	smulh	x9, x8, x9
0000000000054f94	cmp	x9, x10, asr #63
0000000000054f98	asr	x8, x8, #63
0000000000054f9c	eor	x8, x8, #0x7fffffffffffffff
0000000000054fa0	csel	x8, x8, x10, ne
0000000000054fa4	str	x8, [x22, #0x78]
0000000000054fa8	bl	0x559a8 ; symbol stub for: __ZNSt3__16chrono12steady_clock3nowEv
0000000000054fac	ldr	x8, [x22, #0x78]
0000000000054fb0	adds	x8, x0, x8
0000000000054fb4	asr	x9, x8, #63
0000000000054fb8	eor	x9, x9, #0x8000000000000000
0000000000054fbc	csel	x8, x9, x8, vs
0000000000054fc0	str	x8, [x22, #0x80]
0000000000054fc4	strb	wzr, [x22, #0x88]
0000000000054fc8	movi.16b	v0, #0x0
0000000000054fcc	stp	q0, q0, [sp, #0x70]
0000000000054fd0	adr	x1, #0x684a ; literal pool for: "GC Timer thread"
0000000000054fd4	nop
0000000000054fd8	add	x0, sp, #0x70
0000000000054fdc	mov	w2, #0xf
0000000000054fe0	bl	__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_
0000000000054fe4	mov	w0, #0x8
0000000000054fe8	bl	0x55a2c ; symbol stub for: __Znwm
0000000000054fec	mov	x25, x0
0000000000054ff0	bl	0x55900 ; symbol stub for: __ZNSt3__115__thread_structC1Ev
0000000000054ff4	mov	w0, #0x50
0000000000054ff8	bl	0x55a2c ; symbol stub for: __Znwm
0000000000054ffc	mov	x24, x0
0000000000055000	sturb	wzr, [x29, #-0x80]
0000000000055004	sturb	wzr, [x29, #-0x68]
0000000000055008	ldrb	w8, [sp, #0x88]
000000000005500c	cbz	w8, 0x5502c
0000000000055010	ldrsb	w8, [sp, #0x87]
0000000000055014	tbnz	w8, #0x1f, 0x55034
0000000000055018	ldr	q0, [sp, #0x70]
000000000005501c	stur	q0, [x29, #-0x80]
0000000000055020	ldr	x8, [sp, #0x80]
0000000000055024	stur	x8, [x29, #-0x70]
0000000000055028	b	0x550b4
000000000005502c	mov	w8, #0x1
0000000000055030	b	0x550c0
0000000000055034	ldp	x1, x26, [sp, #0x70]
0000000000055038	cmp	x26, #0x16
000000000005503c	b.hi	0x5507c
0000000000055040	sub	x0, x29, #0x80
0000000000055044	sturb	w26, [x29, #-0x69]
0000000000055048	b	0x550ac
000000000005504c	str	x8, [sp, #0x48]
0000000000055050	ldr	x8, [x0]
0000000000055054	ldr	x8, [x8, #0x18]
0000000000055058	add	x1, sp, #0x30
000000000005505c	blr	x8
0000000000055060	ldr	x22, [sp, #0x48]
0000000000055064	mov	w0, #0x1
0000000000055068	mov	w1, #0xf8
000000000005506c	bl	0x55aec ; symbol stub for: _calloc
0000000000055070	mov	x21, x0
0000000000055074	cbnz	x22, 0x54e50
0000000000055078	b	0x54eb8
000000000005507c	stp	x1, x27, [sp]
0000000000055080	cmn	x26, #0x10
0000000000055084	b.hs	0x55398
0000000000055088	add	x8, x26, #0x10
000000000005508c	and	x27, x8, #0xfffffffffffffff0
0000000000055090	mov	x0, x27
0000000000055094	mov	w1, #0x1
0000000000055098	bl	0x55aec ; symbol stub for: _calloc
000000000005509c	orr	x8, x27, #0x8000000000000000
00000000000550a0	stp	x26, x8, [x29, #-0x78]
00000000000550a4	stur	x0, [x29, #-0x80]
00000000000550a8	ldp	x1, x27, [sp]
00000000000550ac	add	x2, x26, #0x1
00000000000550b0	bl	0x55bd0 ; symbol stub for: _memcpy
00000000000550b4	mov	w8, #0x0
00000000000550b8	mov	w9, #0x1
00000000000550bc	sturb	w9, [x29, #-0x68]
00000000000550c0	add	x0, x21, #0xf0
00000000000550c4	adr	x9, #-0x26ac8
00000000000550c8	nop
00000000000550cc	stp	x25, x9, [x24]
00000000000550d0	mov	x25, x24
00000000000550d4	strb	wzr, [x25, #0x10]!
00000000000550d8	strb	wzr, [x24, #0x28]
00000000000550dc	tbnz	w8, #0x0, 0x55100
00000000000550e0	ldur	q0, [x29, #-0x80]
00000000000550e4	str	q0, [x25]
00000000000550e8	ldur	x8, [x29, #-0x70]
00000000000550ec	str	x8, [x25, #0x10]
00000000000550f0	stp	xzr, xzr, [x29, #-0x78]
00000000000550f4	stur	xzr, [x29, #-0x80]
00000000000550f8	mov	w8, #0x1
00000000000550fc	strb	w8, [x24, #0x28]
0000000000055100	adr	x8, #-0x26dd4
0000000000055104	nop
0000000000055108	movi.16b	v0, #0x0
000000000005510c	mov.d	v0[0], x8
0000000000055110	str	q0, [x24, #0x30]
0000000000055114	stp	x22, x21, [x24, #0x40]
0000000000055118	adr	x2, #-0x26ab8
000000000005511c	nop
0000000000055120	mov	x1, #0x0
0000000000055124	mov	x3, x24
0000000000055128	bl	0x55d74 ; symbol stub for: _pthread_create
000000000005512c	cbnz	w0, 0x55374
0000000000055130	ldrb	w8, [sp, #0x88]
0000000000055134	cbz	w8, 0x55148
0000000000055138	ldrsb	w8, [sp, #0x87]
000000000005513c	tbz	w8, #0x1f, 0x55148
0000000000055140	ldr	x0, [sp, #0x70]
0000000000055144	bl	0x55b7c ; symbol stub for: _free
0000000000055148	ldr	x0, [sp, #0x68]
000000000005514c	add	x8, sp, #0x50
0000000000055150	cmp	x8, x0
0000000000055154	b.eq	0x55168
0000000000055158	cbz	x0, 0x55174
000000000005515c	ldr	x8, [x0]
0000000000055160	ldr	x8, [x8, #0x28]
0000000000055164	b	0x55170
0000000000055168	ldr	x8, [x0]
000000000005516c	ldr	x8, [x8, #0x20]
0000000000055170	blr	x8
0000000000055174	ldr	x22, [x19, #0x40]
0000000000055178	str	x21, [x19, #0x40]
000000000005517c	cbz	x22, 0x55198
0000000000055180	ldr	x8, [x22]
0000000000055184	ldr	x8, [x8]
0000000000055188	mov	x0, x22
000000000005518c	blr	x8
0000000000055190	mov	x0, x22
0000000000055194	bl	0x55b7c ; symbol stub for: _free
0000000000055198	ldr	x0, [sp, #0x48]
000000000005519c	add	x8, sp, #0x30
00000000000551a0	cmp	x8, x0
00000000000551a4	b.eq	0x551b8
00000000000551a8	cbz	x0, 0x551c4
00000000000551ac	ldr	x8, [x0]
00000000000551b0	ldr	x8, [x8, #0x28]
00000000000551b4	b	0x551c0
00000000000551b8	ldr	x8, [x0]
00000000000551bc	ldr	x8, [x8, #0x20]
00000000000551c0	blr	x8
00000000000551c4	ldr	x0, [sp, #0x28]
00000000000551c8	add	x8, sp, #0x10
00000000000551cc	cmp	x8, x0
00000000000551d0	b.eq	0x551e4
00000000000551d4	cbz	x0, 0x551f0
00000000000551d8	ldr	x8, [x0]
00000000000551dc	ldr	x8, [x8, #0x28]
00000000000551e0	b	0x551ec
00000000000551e4	ldr	x8, [x0]
00000000000551e8	ldr	x8, [x8, #0x20]
00000000000551ec	blr	x8
00000000000551f0	movi.16b	v0, #0x0
00000000000551f4	stp	q0, q0, [sp, #0x70]
00000000000551f8	adr	x1, #0x76a9 ; literal pool for: "GC thread"
00000000000551fc	nop
0000000000055200	add	x0, sp, #0x70
0000000000055204	mov	w2, #0x9
0000000000055208	bl	__ZNSt3__18optionalINS_12basic_stringIcNS_11char_traitsIcEEN6kotlin11std_support9allocatorIcEEEEEaSIRNS_17basic_string_viewIcS3_EEvEERS9_OT_
000000000005520c	add	x21, x20, #0x1f8
0000000000055210	mov	w0, #0x8
0000000000055214	bl	0x55a2c ; symbol stub for: __Znwm
0000000000055218	mov	x24, x0
000000000005521c	bl	0x55900 ; symbol stub for: __ZNSt3__115__thread_structC1Ev
0000000000055220	mov	w0, #0x38
0000000000055224	bl	0x55a2c ; symbol stub for: __Znwm
0000000000055228	mov	x23, x0
000000000005522c	sturb	wzr, [x29, #-0x80]
0000000000055230	sturb	wzr, [x29, #-0x68]
0000000000055234	ldrb	w8, [sp, #0x88]
0000000000055238	cbz	w8, 0x55258
000000000005523c	ldrsb	w8, [sp, #0x87]
0000000000055240	tbnz	w8, #0x1f, 0x55260
0000000000055244	ldr	q0, [sp, #0x70]
0000000000055248	stur	q0, [x29, #-0x80]
000000000005524c	ldr	x8, [sp, #0x80]
0000000000055250	stur	x8, [x29, #-0x70]
0000000000055254	b	0x552ac
0000000000055258	mov	w8, #0x1
000000000005525c	b	0x552b8
0000000000055260	ldp	x22, x19, [sp, #0x70]
0000000000055264	cmp	x19, #0x16
0000000000055268	b.hi	0x55278
000000000005526c	sub	x0, x29, #0x80
0000000000055270	sturb	w19, [x29, #-0x69]
0000000000055274	b	0x552a0
0000000000055278	cmn	x19, #0x10
000000000005527c	b.hs	0x553a4
0000000000055280	add	x8, x19, #0x10
0000000000055284	and	x25, x8, #0xfffffffffffffff0
0000000000055288	mov	x0, x25
000000000005528c	mov	w1, #0x1
0000000000055290	bl	0x55aec ; symbol stub for: _calloc
0000000000055294	orr	x8, x25, #0x8000000000000000
0000000000055298	stp	x19, x8, [x29, #-0x78]
000000000005529c	stur	x0, [x29, #-0x80]
00000000000552a0	add	x2, x19, #0x1
00000000000552a4	mov	x1, x22
00000000000552a8	bl	0x55bd0 ; symbol stub for: _memcpy
00000000000552ac	mov	w8, #0x0
00000000000552b0	mov	w9, #0x1
00000000000552b4	sturb	w9, [x29, #-0x68]
00000000000552b8	adr	x9, #-0x23420
00000000000552bc	nop
00000000000552c0	stp	x24, x9, [x23]
00000000000552c4	mov	x19, x23
00000000000552c8	strb	wzr, [x19, #0x10]!
00000000000552cc	strb	wzr, [x23, #0x28]
00000000000552d0	tbnz	w8, #0x0, 0x552f4
00000000000552d4	ldur	q0, [x29, #-0x80]
00000000000552d8	str	q0, [x19]
00000000000552dc	ldur	x8, [x29, #-0x70]
00000000000552e0	str	x8, [x19, #0x10]
00000000000552e4	stp	xzr, xzr, [x29, #-0x78]
00000000000552e8	stur	xzr, [x29, #-0x80]
00000000000552ec	mov	w8, #0x1
00000000000552f0	strb	w8, [x23, #0x28]
00000000000552f4	str	x28, [x23, #0x30]
00000000000552f8	adr	x2, #-0x22910
00000000000552fc	nop
0000000000055300	add	x0, sp, #0x50
0000000000055304	mov	x1, #0x0
0000000000055308	mov	x3, x23
000000000005530c	bl	0x55d74 ; symbol stub for: _pthread_create
0000000000055310	cbnz	w0, 0x55384
0000000000055314	ldr	x8, [x21]
0000000000055318	cbnz	x8, 0x55394
000000000005531c	ldr	x8, [sp, #0x50]
0000000000055320	str	x8, [x21]
0000000000055324	str	xzr, [sp, #0x50]
0000000000055328	add	x0, sp, #0x50
000000000005532c	bl	0x559cc ; symbol stub for: __ZNSt3__16threadD1Ev
0000000000055330	ldrb	w8, [sp, #0x88]
0000000000055334	cbz	w8, 0x55348
0000000000055338	ldrsb	w8, [sp, #0x87]
000000000005533c	tbz	w8, #0x1f, 0x55348
0000000000055340	ldr	x0, [sp, #0x70]
0000000000055344	bl	0x55b7c ; symbol stub for: _free
0000000000055348	str	wzr, [x20, #0x230]
000000000005534c	adrp	x8, 63 ; 0x94000
0000000000055350	str	x20, [x8, #0x8f8]
0000000000055354	ldp	x29, x30, [sp, #0x110]
0000000000055358	ldp	x20, x19, [sp, #0x100]
000000000005535c	ldp	x22, x21, [sp, #0xf0]
0000000000055360	ldp	x24, x23, [sp, #0xe0]
0000000000055364	ldp	x26, x25, [sp, #0xd0]
0000000000055368	ldp	x28, x27, [sp, #0xc0]
000000000005536c	add	sp, sp, #0x120
0000000000055370	ret
0000000000055374	adr	x1, #0x754e ; literal pool for: "thread constructor failed"
0000000000055378	nop
000000000005537c	bl	0x55978 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000055380	b	0x553ac
0000000000055384	adr	x1, #0x753e ; literal pool for: "thread constructor failed"
0000000000055388	nop
000000000005538c	bl	0x55978 ; symbol stub for: __ZNSt3__120__throw_system_errorEiPKc
0000000000055390	b	0x553ac
0000000000055394	bl	0x55a14 ; symbol stub for: __ZSt9terminatev
0000000000055398	sub	x0, x29, #0x80
000000000005539c	bl	0x558c4 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
00000000000553a0	b	0x553ac
00000000000553a4	sub	x0, x29, #0x80
00000000000553a8	bl	0x558c4 ; symbol stub for: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
00000000000553ac	brk	#0x1
00000000000553b0	mov	x19, x0
00000000000553b4	ldurb	w8, [x29, #-0x68]
00000000000553b8	cbz	w8, 0x553e0
00000000000553bc	sub	x0, x29, #0x80
00000000000553c0	bl	__ZN6kotlin2gc22ConcurrentMarkAndSweepC2ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerE.cold.1
00000000000553c4	mov	x0, x19
00000000000553c8	bl	___clang_call_terminate
00000000000553cc	mov	x19, x0
00000000000553d0	ldurb	w8, [x29, #-0x68]
00000000000553d4	cbz	w8, 0x553e0
00000000000553d8	sub	x0, x29, #0x80
00000000000553dc	bl	__ZNSt3__16threadC2IPFvN6kotlin12ScopedThread10attributesEOMNS2_13RepeatedTimerINS2_12steady_clockEEEDoFvOZNS2_2gc8internal24GCSchedulerDataWithTimerIS6_EC1ERNS8_17GCSchedulerConfigENS_8functionIFvvEEEEUlvE_EOPS7_SI_EJRKS4_SK_SM_SH_EvEEOT_DpOT0_.cold.1
00000000000553e0	mov	x0, x19
00000000000553e4	bl	___clang_call_terminate
00000000000553e8	bl	___clang_call_terminate
00000000000553ec	bl	___clang_call_terminate
00000000000553f0	bl	___clang_call_terminate
00000000000553f4	bl	___clang_call_terminate
00000000000553f8	mov	x25, x27
00000000000553fc	mov	x22, x0
0000000000055400	mov	x0, x24
0000000000055404	bl	0x5590c ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000055408	b	0x55494
000000000005540c	mov	x25, x27
0000000000055410	mov	x22, x0
0000000000055414	b	0x55494
0000000000055418	mov	x25, x27
000000000005541c	mov	x22, x0
0000000000055420	b	0x5549c
0000000000055424	bl	___clang_call_terminate
0000000000055428	mov	x19, x0
000000000005542c	mov	x0, x25
0000000000055430	bl	0x5590c ; symbol stub for: __ZNSt3__115__thread_structD1Ev
0000000000055434	b	0x55654
0000000000055438	mov	x19, x0
000000000005543c	b	0x55654
0000000000055440	mov	x19, x0
0000000000055444	b	0x5565c
0000000000055448	bl	___clang_call_terminate
000000000005544c	mov	x19, x0
0000000000055450	bl	__ZNSt3__110unique_ptrIN6kotlin14SingleLockListINS1_2mm10ThreadDataENS_15recursive_mutexENS1_11std_support9allocatorIS4_EEE4NodeENS6_17allocator_deleterISA_NS7_ISA_EEEEED1Ev
0000000000055454	mov	x0, x19
0000000000055458	bl	___clang_call_terminate
000000000005545c	mov	x25, x27
0000000000055460	mov	x22, x0
0000000000055464	ldrb	w8, [x23, #0x28]
0000000000055468	cbz	w8, 0x5547c
000000000005546c	ldrsb	w8, [x23, #0x27]
0000000000055470	tbz	w8, #0x1f, 0x5547c
0000000000055474	ldr	x0, [x19]
0000000000055478	bl	0x55b7c ; symbol stub for: _free
000000000005547c	ldr	x0, [x23]
0000000000055480	str	xzr, [x23]
0000000000055484	cbz	x0, 0x55490
0000000000055488	bl	0x5590c ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000005548c	bl	0x55a20 ; symbol stub for: __ZdlPv
0000000000055490	mov	x24, x23
0000000000055494	mov	x0, x24
0000000000055498	bl	0x55a20 ; symbol stub for: __ZdlPv
000000000005549c	ldrb	w8, [sp, #0x88]
00000000000554a0	cbz	w8, 0x554b4
00000000000554a4	ldrsb	w8, [sp, #0x87]
00000000000554a8	tbz	w8, #0x1f, 0x554b4
00000000000554ac	ldr	x0, [sp, #0x70]
00000000000554b0	bl	0x55b7c ; symbol stub for: _free
00000000000554b4	ldr	x23, [x20, #0x200]
00000000000554b8	str	xzr, [x20, #0x200]
00000000000554bc	cbnz	x23, 0x554d8
00000000000554c0	mov	x0, x21
00000000000554c4	bl	__ZN6kotlin12ScopedThreadD1Ev
00000000000554c8	mov	x0, x25
00000000000554cc	bl	__ZN13GCStateHolderD1Ev
00000000000554d0	mov	x0, x22
00000000000554d4	bl	___clang_call_terminate
00000000000554d8	add	x20, x23, #0x58
00000000000554dc	mov	x0, x20
00000000000554e0	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
00000000000554e4	ldr	x8, [x23]
00000000000554e8	cbnz	x8, 0x55528
00000000000554ec	mov	x0, x20
00000000000554f0	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
00000000000554f4	add	x0, x23, #0x140
00000000000554f8	bl	0x5599c ; symbol stub for: __ZNSt3__15mutexD1Ev
00000000000554fc	add	x0, x23, #0x108
0000000000055500	bl	0x55960 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
0000000000055504	add	x0, x23, #0xc8
0000000000055508	bl	0x5599c ; symbol stub for: __ZNSt3__15mutexD1Ev
000000000005550c	add	x8, x23, #0x98
0000000000055510	ldr	x0, [x23, #0xb0]
0000000000055514	cmp	x8, x0
0000000000055518	b.ne	0x5556c
000000000005551c	ldr	x8, [x0]
0000000000055520	ldr	x8, [x8, #0x20]
0000000000055524	b	0x55578
0000000000055528	mov	w8, #0x1
000000000005552c	strb	w8, [x23, #0xc0]
0000000000055530	add	x24, x23, #0x28
0000000000055534	mov	x0, x24
0000000000055538	bl	0x5593c ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
000000000005553c	mov	x0, x20
0000000000055540	bl	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000055544	mov	x0, x23
0000000000055548	bl	0x559c0 ; symbol stub for: __ZNSt3__16thread4joinEv
000000000005554c	strb	wzr, [x23, #0xc0]
0000000000055550	mov	x0, x20
0000000000055554	bl	0x55984 ; symbol stub for: __ZNSt3__15mutex4lockEv
0000000000055558	mov	w8, #0x1
000000000005555c	strb	w8, [x23, #0xc1]
0000000000055560	mov	x0, x24
0000000000055564	bl	0x5593c ; symbol stub for: __ZNSt3__118condition_variable10notify_allEv
0000000000055568	b	0x554ec
000000000005556c	cbz	x0, 0x5557c
0000000000055570	ldr	x8, [x0]
0000000000055574	ldr	x8, [x8, #0x28]
0000000000055578	blr	x8
000000000005557c	mov	x0, x20
0000000000055580	bl	0x5599c ; symbol stub for: __ZNSt3__15mutexD1Ev
0000000000055584	add	x0, x23, #0x28
0000000000055588	bl	0x55960 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
000000000005558c	ldr	x0, [x23, #0x10]
0000000000055590	str	xzr, [x23, #0x10]
0000000000055594	cbnz	x0, 0x555a0
0000000000055598	str	xzr, [x23, #0x10]
000000000005559c	b	0x555cc
00000000000555a0	ldr	x19, [x0]
00000000000555a4	str	xzr, [x0]
00000000000555a8	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
00000000000555ac	bl	_mi_free
00000000000555b0	mov	x0, x19
00000000000555b4	cbnz	x19, 0x555a0
00000000000555b8	ldr	x0, [x23, #0x10]
00000000000555bc	str	xzr, [x23, #0x10]
00000000000555c0	cbz	x0, 0x555cc
00000000000555c4	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
00000000000555c8	bl	_mi_free
00000000000555cc	ldr	x8, [x23]
00000000000555d0	cbz	x8, 0x555dc
00000000000555d4	mov	x0, x23
00000000000555d8	bl	0x559c0 ; symbol stub for: __ZNSt3__16thread4joinEv
00000000000555dc	mov	x0, x23
00000000000555e0	bl	0x559cc ; symbol stub for: __ZNSt3__16threadD1Ev
00000000000555e4	bl	0x55b7c ; symbol stub for: _free
00000000000555e8	mov	x0, x21
00000000000555ec	bl	__ZN6kotlin12ScopedThreadD1Ev
00000000000555f0	mov	x0, x25
00000000000555f4	bl	__ZN13GCStateHolderD1Ev
00000000000555f8	mov	x0, x22
00000000000555fc	bl	___clang_call_terminate
0000000000055600	bl	___clang_call_terminate
0000000000055604	mov	x19, x0
0000000000055608	mov	x0, x23
000000000005560c	bl	0x559cc ; symbol stub for: __ZNSt3__16threadD1Ev
0000000000055610	mov	x0, x19
0000000000055614	bl	___clang_call_terminate
0000000000055618	bl	___clang_call_terminate
000000000005561c	bl	___clang_call_terminate
0000000000055620	mov	x19, x0
0000000000055624	ldrb	w8, [x24, #0x28]
0000000000055628	cbz	w8, 0x5563c
000000000005562c	ldrsb	w8, [x24, #0x27]
0000000000055630	tbz	w8, #0x1f, 0x5563c
0000000000055634	ldr	x0, [x25]
0000000000055638	bl	0x55b7c ; symbol stub for: _free
000000000005563c	ldr	x0, [x24]
0000000000055640	str	xzr, [x24]
0000000000055644	cbz	x0, 0x55650
0000000000055648	bl	0x5590c ; symbol stub for: __ZNSt3__115__thread_structD1Ev
000000000005564c	bl	0x55a20 ; symbol stub for: __ZdlPv
0000000000055650	mov	x25, x24
0000000000055654	mov	x0, x25
0000000000055658	bl	0x55a20 ; symbol stub for: __ZdlPv
000000000005565c	ldrb	w8, [sp, #0x88]
0000000000055660	cbz	w8, 0x5566c
0000000000055664	add	x0, sp, #0x70
0000000000055668	bl	__ZN6kotlin13RepeatedTimerINS_12steady_clockEEC2IxNSt3__15ratioILl1ELl1000000EEEZNS_2gc8internal24GCSchedulerDataWithTimerIS1_EC1ERNS7_17GCSchedulerConfigENS4_8functionIFvvEEEEUlvE_EENS4_17basic_string_viewIcNS4_11char_traitsIcEEEENS4_6chrono8durationIT_T0_EEOT1_.cold.1
000000000005566c	mov	x0, x23
0000000000055670	bl	0x55960 ; symbol stub for: __ZNSt3__118condition_variableD1Ev
0000000000055674	mov	x0, x22
0000000000055678	bl	0x5599c ; symbol stub for: __ZNSt3__15mutexD1Ev
000000000005567c	mov	x0, x19
0000000000055680	bl	___clang_call_terminate
__ZN6kotlin13RepeatedTimerINS_12steady_clockEEC2IxNSt3__15ratioILl1ELl1000000EEEZNS_2gc8internal24GCSchedulerDataWithTimerIS1_EC1ERNS7_17GCSchedulerConfigENS4_8functionIFvvEEEEUlvE_EENS4_17basic_string_viewIcNS4_11char_traitsIcEEEENS4_6chrono8durationIT_T0_EEOT1_.cold.1:
0000000000055684	ldrsb	w8, [x0, #0x17]
0000000000055688	tbnz	w8, #0x1f, 0x55690
000000000005568c	ret
0000000000055690	b	_OUTLINED_FUNCTION_0
__ZNSt3__16threadC2IPFvN6kotlin12ScopedThread10attributesEOMNS2_13RepeatedTimerINS2_12steady_clockEEEDoFvOZNS2_2gc8internal24GCSchedulerDataWithTimerIS6_EC1ERNS8_17GCSchedulerConfigENS_8functionIFvvEEEEUlvE_EOPS7_SI_EJRKS4_SK_SM_SH_EvEEOT_DpOT0_.cold.1:
0000000000055694	ldrsb	w8, [x0, #0x17]
0000000000055698	tbnz	w8, #0x1f, 0x556a0
000000000005569c	ret
00000000000556a0	b	_OUTLINED_FUNCTION_0
__ZN6kotlin2gc22ConcurrentMarkAndSweepC2ERNS_2mm13ObjectFactoryIS1_EERNS0_11GCSchedulerE.cold.1:
00000000000556a4	ldrsb	w8, [x0, #0x17]
00000000000556a8	tbnz	w8, #0x1f, 0x556b0
00000000000556ac	ret
00000000000556b0	b	_OUTLINED_FUNCTION_0
__ZN6kotlin2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEv.cold.1:
00000000000556b4	ldrsb	w8, [x0, #0x17]
00000000000556b8	tbnz	w8, #0x1f, 0x556c0
00000000000556bc	ret
00000000000556c0	b	_OUTLINED_FUNCTION_0
__ZN6kotlin12ScopedThread3RunIZNS_2gc18FinalizerProcessor26StartFinalizerThreadIfNoneEvE3$_0JEEENSt3__113invoke_resultIT_JDpT0_EE4typeENS0_10attributesEOS7_DpOS8_.cold.1:
00000000000556c4	stp	x24, x23, [sp, #-0x40]!
00000000000556c8	stp	x22, x21, [sp, #0x10]
00000000000556cc	stp	x20, x19, [sp, #0x20]
00000000000556d0	stp	x29, x30, [sp, #0x30]
00000000000556d4	add	x29, sp, #0x30
00000000000556d8	mov	x21, x2
00000000000556dc	mov	x20, x1
00000000000556e0	mov	x19, x0
00000000000556e4	str	xzr, [x2]
00000000000556e8	cbz	x3, 0x55724
00000000000556ec	mov	x22, x3
00000000000556f0	ldr	x23, [x22]
00000000000556f4	str	xzr, [x22]
00000000000556f8	mov	x0, x22
00000000000556fc	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
0000000000055700	bl	_mi_free
0000000000055704	mov	x22, x23
0000000000055708	cbnz	x23, 0x556f0
000000000005570c	ldr	x0, [x21]
0000000000055710	str	xzr, [x21]
0000000000055714	cbz	x0, 0x55728
0000000000055718	bl	__ZN6kotlin2mm8internal20ObjectFactoryStorageILm8ENS_2gc15AllocatorWithGCINS3_9AllocatorENS3_22ConcurrentMarkAndSweep10ThreadDataEEEE4NodeD2Ev
000000000005571c	bl	_mi_free
0000000000055720	b	0x55728
0000000000055724	str	xzr, [x21]
0000000000055728	ldrb	w8, [x20]
000000000005572c	cbz	w8, 0x55748
0000000000055730	ldr	x0, [x19]
0000000000055734	ldp	x29, x30, [sp, #0x30]
0000000000055738	ldp	x20, x19, [sp, #0x20]
000000000005573c	ldp	x22, x21, [sp, #0x10]
0000000000055740	ldp	x24, x23, [sp], #0x40
0000000000055744	b	0x55990 ; symbol stub for: __ZNSt3__15mutex6unlockEv
0000000000055748	ldp	x29, x30, [sp, #0x30]
000000000005574c	ldp	x20, x19, [sp, #0x20]
0000000000055750	ldp	x22, x21, [sp, #0x10]
0000000000055754	ldp	x24, x23, [sp], #0x40
0000000000055758	ret
__ZN12_GLOBAL__N_18theStateEv.cold.1:
000000000005575c	stp	x24, x23, [sp, #-0x40]!
0000000000055760	stp	x22, x21, [sp, #0x10]
0000000000055764	stp	x20, x19, [sp, #0x20]
0000000000055768	stp	x29, x30, [sp, #0x30]
000000000005576c	add	x29, sp, #0x30
0000000000055770	mov	x19, x3
0000000000055774	mov	x21, x2
0000000000055778	mov	x22, x1
000000000005577c	mov	x20, x0
0000000000055780	ldr	x0, [x0, #0xd0]
0000000000055784	cbz	x0, 0x55798
0000000000055788	ldr	x23, [x0]
000000000005578c	bl	0x55b7c ; symbol stub for: _free
0000000000055790	mov	x0, x23
0000000000055794	cbnz	x23, 0x55788
0000000000055798	ldr	x0, [x22]
000000000005579c	str	xzr, [x22]
00000000000557a0	bl	0x55b7c ; symbol stub for: _free
00000000000557a4	ldr	x0, [x20, #0xa8]
00000000000557a8	cbz	x0, 0x557bc
00000000000557ac	ldr	x22, [x0]
00000000000557b0	bl	0x55b7c ; symbol stub for: _free
00000000000557b4	mov	x0, x22
00000000000557b8	cbnz	x22, 0x557ac
00000000000557bc	ldr	x0, [x21]
00000000000557c0	str	xzr, [x21]
00000000000557c4	bl	0x55b7c ; symbol stub for: _free
00000000000557c8	ldr	x0, [x20, #0x80]
00000000000557cc	cbz	x0, 0x557e0
00000000000557d0	ldr	x20, [x0]
00000000000557d4	bl	0x55b7c ; symbol stub for: _free
00000000000557d8	mov	x0, x20
00000000000557dc	cbnz	x20, 0x557d0
00000000000557e0	ldr	x0, [x19]
00000000000557e4	str	xzr, [x19]
00000000000557e8	ldp	x29, x30, [sp, #0x30]
00000000000557ec	ldp	x20, x19, [sp, #0x20]
00000000000557f0	ldp	x22, x21, [sp, #0x10]
00000000000557f4	ldp	x24, x23, [sp], #0x40
00000000000557f8	b	0x55b7c ; symbol stub for: _free
_Kotlin_getStackTraceStrings.cold.1:
00000000000557fc	stp	x22, x21, [sp, #-0x30]!
0000000000055800	stp	x20, x19, [sp, #0x10]
0000000000055804	stp	x29, x30, [sp, #0x20]
0000000000055808	add	x29, sp, #0x20
000000000005580c	mov	x19, x1
0000000000055810	mov	x20, x0
0000000000055814	ldr	x8, [x1]
0000000000055818	cmp	x8, x0
000000000005581c	b.eq	0x5584c
0000000000055820	mov	x21, x2
0000000000055824	sub	x22, x8, #0x18
0000000000055828	ldursb	w9, [x8, #-0x1]
000000000005582c	tbz	w9, #0x1f, 0x55838
0000000000055830	ldur	x0, [x8, #-0x18]
0000000000055834	bl	0x55b7c ; symbol stub for: _free
0000000000055838	mov	x8, x22
000000000005583c	cmp	x22, x20
0000000000055840	b.ne	0x55824
0000000000055844	ldr	x0, [x21]
0000000000055848	b	0x55850
000000000005584c	mov	x0, x20
0000000000055850	str	x20, [x19]
0000000000055854	ldp	x29, x30, [sp, #0x20]
0000000000055858	ldp	x20, x19, [sp, #0x10]
000000000005585c	ldp	x22, x21, [sp], #0x30
0000000000055860	b	0x55b7c ; symbol stub for: _free
